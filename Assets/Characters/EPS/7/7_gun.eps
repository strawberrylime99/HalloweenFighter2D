%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 7_gun.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 85 288
%%HiResBoundingBox: 0 0 84.1400 287.3677
%%CropBox: 0 0 84.1400 287.3677
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:40:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:40:02+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:40:02+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>128</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq8Yvv8A&#xA;nJfQ7T8ym8pHTnk02O6Gny6usoqtxy9NiIeO8ayfCTzr3Hhgtlw7PZ8LF5z/AM5AebLzyz+WOo3V&#xA;hK1vf3jx2NtOh4shmNXZSNwfSV6EdDvgLKI3fO3/ADjLruqWn5s2FjFO31bV47mO/jJJEnp28k6M&#xA;Qf2g8Y3+fjiGUuT69tvMvl661i40W31K2m1e0Xnc6ekqNPGu27Rg8gPiH3jC10xj8wvzm8keQ54L&#xA;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&#xA;XYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e2b1a4bb-743d-314c-b879-51df2655a49b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e2b1a4bb-743d-314c-b879-51df2655a49b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8e9e7e28-1eb6-42f8-bbb0-dc9535292a96</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e2b1a4bb-743d-314c-b879-51df2655a49b</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:40:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>86.873602</stDim:w>
            <stDim:h>53.937137</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -287.368 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 287.368 li
84.14 287.368 li
84.14 0 li
cp
clp
49.5786 267.712 mo
49.6909 267.433 49.7651 267.126 49.7719 266.779 cv
49.896 260.466 49.6713 254.169 49.4379 247.862 cv
49.435 247.839 li
49.478 247.23 49.5405 246.622 49.5756 246.013 cv
50.1372 245.711 50.5649 245.177 50.6547 244.38 cv
51.3794 237.955 50.9604 231.711 49.5024 225.441 cv
49.3461 223.601 49.1684 221.763 48.9585 219.929 cv
49.3579 216.634 49.7573 213.341 50.1557 210.046 cv
50.2065 209.629 50.1694 209.249 50.0815 208.9 cv
50.2465 208.788 li
50.3999 208.696 50.5288 208.583 50.6528 208.465 cv
53.8012 208.978 57.02 208.299 60.5991 208.181 cv
64.2905 208.061 69.0239 208.657 73.018 207.841 cv
73.0659 208.716 73.5083 209.394 74.1479 209.827 cv
75.5219 211.757 78.6889 211.458 79.476 208.707 cv
79.562 208.487 79.6362 208.264 79.7006 208.04 cv
79.8276 207.869 li
81.1499 205.846 81.6381 204.083 81.0532 201.723 cv
80.9799 201.426 80.8393 201.165 80.6616 200.933 cv
80.7397 200.711 80.8139 200.485 80.8735 200.244 cv
81.5678 197.443 77.4858 195.459 75.7221 197.755 cv
75.4848 198.065 75.2758 198.38 75.0737 198.697 cv
73.2211 198.095 71.0405 198.049 69.2358 197.81 cv
65.7524 197.349 62.2573 197.023 58.7534 196.769 cv
57.2036 196.656 55.9858 197.591 55.4956 198.766 cv
54.1557 198.559 52.8081 198.418 51.4565 198.314 cv
51.4692 198.173 51.4887 198.035 51.4838 197.883 cv
51.3686 193.63 51.31 189.376 51.2788 185.123 cv
51.3764 184.823 51.4458 184.503 51.4487 184.143 cv
51.5083 175.291 51.5698 166.438 51.6303 157.585 cv
51.6323 157.26 51.5795 156.978 51.5053 156.716 cv
51.5083 155.682 51.5102 154.649 51.5122 153.615 cv
54.2085 143.557 54.2182 132.758 54.0932 122.448 cv
54.0297 117.21 53.9086 111.973 53.7954 106.737 cv
54.0161 103.636 53.976 100.487 54.0786 97.4846 cv
54.31 90.6965 54.4897 83.9064 54.6186 77.1154 cv
54.8335 65.7521 55.3256 54.0461 54.3491 42.6315 cv
54.5493 38.7809 54.7446 34.9299 54.9604 31.0822 cv
55.4174 22.9123 56.3803 14.3015 51.4487 7.21796 cv
50.5512 5.9289 48.892 5.67792 47.5766 6.45819 cv
37.6333 12.3547 38.7993 26.8425 39.1889 36.9172 cv
39.3403 40.8112 39.6323 44.7014 39.892 48.5866 cv
39.5903 54.1115 39.479 59.6491 39.6508 65.1662 cv
39.7006 66.78 39.7846 68.3913 39.8637 70.0026 cv
39.5405 70.343 39.3198 70.7941 39.2866 71.3825 cv
39.2153 72.6647 39.146 73.9479 39.0805 75.2307 cv
39.0483 75.8342 39.1792 76.362 39.4126 76.8068 cv
39.4487 78.3259 39.4692 79.8454 39.4672 81.3644 cv
39.1118 84.6349 39.0053 87.9191 39.1342 91.259 cv
39.143 91.466 39.1694 91.6569 39.2104 91.8347 cv
37.4624 94.2599 37.2417 98.2556 36.9878 101.009 cv
36.6245 104.951 36.3833 108.94 36.894 112.878 cv
38.1645 122.675 37.2817 131.859 36.9965 141.683 cv
36.7192 151.293 37.6499 160.897 37.2915 170.504 cv
36.9516 179.577 34.686 188.752 36.4594 197.793 cv
36.4965 197.917 li
34.9057 197.889 33.3139 197.861 31.7231 197.833 cv
27.7085 197.563 23.6889 197.464 19.6528 197.568 cv
19.2915 197.291 18.8178 197.094 18.1987 197.034 cv
15.9516 196.816 14.144 196.959 11.9682 197.529 cv
11.4458 197.666 11.0522 197.899 10.7504 198.184 cv
10.5083 198.164 10.2661 198.144 10.0229 198.119 cv
9.83248 197.113 9.38619 196.198 8.58345 195.496 cv
6.69283 193.843 4.37935 195.222 3.42134 197.114 cv
2.61666 198.705 2.31197 200.579 2.38033 202.346 cv
2.44576 204.038 2.93209 206.016 3.91548 207.423 cv
5.20455 209.267 7.66548 209.576 9.23384 207.877 cv
9.82173 207.24 10.2436 206.415 10.5327 205.514 cv
10.9633 205.736 11.4643 205.87 12.0376 205.862 cv
14.1567 205.834 16.2758 205.807 18.395 205.779 cv
19.0131 205.876 19.6147 205.961 20.1782 205.993 cv
22.6176 206.131 25.0151 206.029 27.4311 205.746 cv
30.0922 206.023 32.7524 206.068 35.4311 205.877 cv
35.7417 206.664 36.4409 207.308 37.6137 207.518 cv
37.8452 207.559 38.0756 207.584 38.3071 207.621 cv
38.437 207.846 38.5981 208.051 38.8042 208.222 cv
38.7534 208.459 38.7241 208.71 38.7485 208.992 cv
40.142 225.035 39.5151 241.01 37.4126 256.937 cv
36.9682 257.337 36.6811 257.936 36.7251 258.739 cv
36.8588 261.176 36.8452 263.596 36.7133 266.017 cv
35.2749 265.738 33.8256 266.464 32.9262 267.602 cv
31.4223 269.505 30.6264 272.724 29.9526 275.021 cv
29.3598 277.042 29.5854 278.397 30.9223 280.043 cv
36.3022 286.671 48.7514 286.915 53.6606 279.61 cv
57.2436 274.277 54.187 269.612 49.5786 267.712 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.827451 .870588 .886275 rgb
f
49.6401 194.527 mo
51.2397 187.229 51.4721 178.499 51.0512 171.034 cv
51.0297 170.654 50.7124 170.472 50.4028 170.486 cv
50.5844 168.559 50.6616 166.628 50.7426 164.789 cv
51.0151 158.593 49.1997 151.171 51.3208 145.299 cv
51.52 144.746 50.7739 144.094 50.3715 144.671 cv
47.4428 148.866 48.5288 154.006 48.5629 158.847 cv
48.6079 165.464 46.9253 172.262 47.3706 178.804 cv
47.4057 179.324 48.1489 179.464 48.3715 178.991 cv
48.519 178.678 48.6362 178.349 48.7651 178.026 cv
48.5073 180.21 48.3051 182.431 48.1899 184.646 cv
47.9184 184.631 47.6381 184.779 47.5483 185.137 cv
46.9184 187.655 46.6997 190.472 47.4487 192.968 cv
47.5532 193.316 48.0044 193.335 48.2085 193.101 cv
48.2085 193.198 48.2075 193.296 48.2085 193.392 cv
48.2436 193.474 li
48.268 193.8 48.2788 194.136 48.3081 194.459 cv
48.2944 195.244 49.4829 195.243 49.6401 194.527 cv
cp
.67451 .737255 .756863 rgb
f
51.354 138.254 mo
53.3188 122.342 56.517 105.388 54.5581 89.3444 cv
52.646 73.673 51.9272 57.5632 53.1987 41.7805 cv
54.4282 37.7668 53.9135 33.4719 53.8559 29.218 cv
54.2719 29.2414 54.6821 29.0104 54.7983 28.4421 cv
55.7065 23.988 55.186 18.6115 54.3745 14.174 cv
54.2016 13.2263 52.6167 12.9338 52.5239 14.0793 cv
52.4096 15.4924 52.019 16.8405 51.9487 18.2668 cv
51.937 18.5026 52.0747 18.6599 52.2563 18.7463 cv
52.2133 19.9743 52.2026 21.2116 52.2348 22.4431 cv
51.102 26.2839 51.0571 30.1765 51.1958 34.1691 cv
51.2602 35.9987 51.1381 37.8986 51.2104 39.7365 cv
48.9497 46.6032 49.437 53.7863 49.5063 60.9445 cv
49.5874 69.3781 50.0815 77.7219 50.7534 86.1232 cv
52.1342 103.356 49.4389 120.879 48.684 138.117 cv
48.6176 139.636 51.1674 139.762 51.354 138.254 cv
cp
f
42.8754 66.6247 mo
43.0952 59.4831 43.2417 52.3063 43.8618 45.1852 cv
43.9311 44.4011 42.7299 44.1589 42.6401 44.9611 cv
41.8256 52.2365 41.4204 59.3928 41.9868 66.695 cv
42.0327 67.2795 42.8579 67.1857 42.8754 66.6247 cv
cp
f
41.6508 123.014 mo
42.9926 111.951 42.0239 100.24 42.0747 89.0983 cv
42.0776 88.2668 40.8003 88.3766 40.7895 89.1999 cv
40.642 100.293 39.4643 111.925 40.6059 122.961 cv
40.6655 123.533 41.5766 123.629 41.6508 123.014 cv
cp
f
42.1196 179.341 mo
42.2319 179.664 42.3413 179.99 42.4672 180.306 cv
42.6499 180.767 43.3393 180.737 43.4389 180.231 cv
45.0141 172.179 42.9399 162.736 42.5473 154.584 cv
42.4565 152.703 42.393 150.821 42.3344 148.941 cv
42.6801 143.393 42.8198 137.836 42.8999 132.274 cv
42.9038 132.017 42.5083 132.051 42.5024 132.305 cv
42.4311 135.482 42.3149 138.656 42.1889 141.831 cv
42.1401 136.962 42.184 132.092 42.3217 127.219 cv
42.3442 126.393 40.9047 126.307 40.8588 127.144 cv
40.3735 136.027 40.1352 144.927 40.187 153.824 cv
40.2299 161.342 39.521 170.362 41.6391 177.823 cv
41.4526 182.278 41.0014 186.707 40.8208 191.159 cv
40.81 191.426 41.2436 191.441 41.2856 191.183 cv
41.9184 187.302 42.0669 183.299 42.1196 179.341 cv
cp
f
21.1352 198.279 mo
21.0893 197.736 20.4907 197.284 19.9536 197.508 cv
18.9878 197.912 18.561 198.719 18.0112 199.572 cv
17.3813 200.548 16.7309 201.505 16.1938 202.533 cv
15.5336 203.797 17.4809 205.161 18.3315 203.948 cv
18.978 203.027 19.5278 202.063 20.0864 201.087 cv
20.602 200.187 21.2241 199.352 21.1352 198.279 cv
cp
f
24.4887 202.579 mo
24.7299 202.119 24.9526 201.647 25.1821 201.181 cv
25.6079 200.314 25.9809 199.422 26.3676 198.536 cv
26.7085 197.758 25.6362 196.951 25.0698 197.677 cv
23.8256 199.272 22.5395 200.873 21.5512 202.644 cv
21.3022 203.091 21.435 203.825 21.8549 204.137 cv
21.979 204.23 li
22.8608 204.885 23.8784 204.285 23.9292 203.251 cv
23.9096 203.638 24.437 202.678 24.4887 202.579 cv
cp
f
33.2934 198.828 mo
33.5688 198.196 32.6655 197.501 32.228 198.123 cv
31.4555 199.22 30.6626 200.3 29.8754 201.386 cv
29.2319 202.274 28.562 203.136 28.5747 204.268 cv
28.5795 204.669 28.8842 205.091 29.2456 205.249 cv
29.4126 205.322 li
29.893 205.532 30.5659 205.376 30.7788 204.846 cv
31.5835 202.848 32.4223 200.822 33.2934 198.828 cv
cp
f
37.9311 202.802 mo
38.3247 201.766 38.7612 200.749 39.1928 199.728 cv
39.6577 198.63 38.0981 197.874 37.5258 198.923 cv
36.9946 199.895 36.4692 200.869 35.9008 201.821 cv
35.3862 202.684 34.6782 203.534 34.8764 204.58 cv
35.0219 205.347 35.7153 205.682 36.4067 205.32 cv
37.3491 204.825 37.5756 203.741 37.9311 202.802 cv
cp
f
41.5717 203.759 mo
42.1567 202.339 42.6606 200.884 43.2407 199.46 cv
43.7758 198.145 41.8471 197.181 41.2358 198.491 cv
40.7817 199.464 40.3354 200.438 39.8393 201.39 cv
39.4321 202.172 38.7866 203.108 38.726 203.994 cv
38.684 204.608 39.0004 205.434 39.7475 205.472 cv
40.8891 205.53 41.1899 204.685 41.5717 203.759 cv
cp
f
47.0932 203.108 mo
47.562 201.905 47.8989 200.681 48.2885 199.452 cv
48.5151 198.741 47.3628 198.184 46.9467 198.803 cv
46.226 199.872 45.476 200.897 44.8247 202.011 cv
44.2309 203.028 43.4243 204.074 43.8686 205.268 cv
44.0581 205.78 44.6157 206.051 45.1362 205.881 cv
46.3471 205.487 46.6655 204.205 47.0932 203.108 cv
cp
f
53.0161 200.565 mo
53.2397 199.579 51.9428 199.062 51.3071 199.739 cv
50.017 201.114 48.8618 203.165 48.1723 204.914 cv
47.6753 206.176 49.4389 207.628 50.3227 206.337 cv
51.4585 204.677 52.5708 202.534 53.0161 200.565 cv
cp
f
59.1196 199.918 mo
59.642 198.82 58.0688 198.121 57.4526 199.112 cv
56.3696 200.856 55.1059 202.736 54.6479 204.758 cv
54.5688 205.105 54.7133 205.574 55.0073 205.789 cv
55.1792 205.916 55.3188 206.024 55.5366 206.046 cv
56.061 206.097 56.4672 205.891 56.7319 205.438 cv
57.7299 203.734 58.267 201.71 59.1196 199.918 cv
cp
f
63.3559 200.02 mo
63.7387 199.05 62.4223 198.412 61.8999 199.316 cv
61.0717 200.749 59.979 202.198 59.3647 203.73 cv
58.8032 205.13 60.7241 206.061 61.4731 204.749 cv
62.2915 203.315 62.7485 201.559 63.3559 200.02 cv
cp
f
68.3833 200.785 mo
68.8862 199.726 67.3745 199.059 66.7797 200.01 cv
65.7592 201.64 64.6352 203.244 63.7241 204.937 cv
63.4868 205.378 63.6147 206.052 64.0141 206.364 cv
64.1977 206.508 64.3696 206.573 64.5893 206.643 cv
65.1059 206.805 65.6538 206.404 65.8881 205.983 cv
66.8198 204.313 67.5629 202.512 68.3833 200.785 cv
cp
f
71.1342 201.197 mo
71.0893 200.587 70.2172 200.416 69.9555 200.975 cv
69.2299 202.528 68.4438 204.022 67.6499 205.539 cv
66.9204 206.932 68.9751 207.804 69.7866 206.571 cv
70.8022 205.032 71.27 203.026 71.1342 201.197 cv
cp
f
16.3549 198.409 mo
16.9506 197.143 15.1401 196.333 14.435 197.481 cv
13.5112 198.985 12.4438 200.457 11.6264 202.018 cv
10.7993 203.599 13.2504 204.759 14.1098 203.218 cv
14.9643 201.688 15.6069 199.997 16.3549 198.409 cv
cp
f
9.92818 203.143 mo
9.66744 202.043 8.95748 200.904 7.77388 200.652 cv
6.57857 200.396 5.48189 201.128 4.91939 202.142 cv
4.83248 202.334 li
4.55611 202.18 4.20943 202.167 3.85689 202.428 cv
2.8188 203.195 2.26412 204.583 2.6147 205.855 cv
2.96627 207.131 4.24459 207.972 5.54048 208.029 cv
6.56685 209.2 8.14693 208.658 8.54439 207.537 cv
9.77779 206.594 10.2719 204.597 9.92818 203.143 cv
cp
f
80.6987 206.531 mo
81.2436 204.926 81.186 203.199 81.102 201.527 cv
81.0034 199.551 78.4829 199.409 77.5971 200.869 cv
77.0913 201.701 76.4721 202.845 76.0942 204.028 cv
75.8374 204.173 li
75.3383 204.57 75.0454 204.904 74.854 205.512 cv
74.8452 205.585 li
74.5356 206.36 74.4965 207.224 74.8676 208.024 cv
75.4467 209.271 76.8715 210.031 78.2202 209.593 cv
79.5151 209.172 80.2924 207.727 80.6987 206.531 cv
cp
f
44.9741 253.636 mo
44.9751 253.446 li
45.2856 255.187 45.6821 256.899 46.1489 258.553 cv
45.6167 258.384 45.0795 258.254 44.5395 258.171 cv
44.8608 256.739 44.9526 255.215 44.9741 253.636 cv
cp
51.6118 266.49 mo
52.9506 266.113 53.9858 264.845 53.3237 263.245 cv
51.4643 258.756 49.9292 254.184 49.4272 249.323 cv
48.9604 244.805 49.7465 240.38 49.5434 235.885 cv
49.5112 235.175 49.0561 234.674 48.4829 234.433 cv
48.8813 227.349 49.1538 220.262 49.2211 213.155 cv
49.2348 211.719 46.9204 211.618 46.7133 213.027 cv
46.4819 214.611 46.2846 216.196 46.0717 217.78 cv
45.5073 217.764 44.9545 218.022 44.7211 218.638 cv
42.726 223.906 42.1713 229.975 41.9038 235.974 cv
41.852 236.121 41.811 236.279 41.7963 236.462 cv
41.5131 239.77 41.2485 243.072 41.1225 246.391 cv
40.9741 250.298 42.187 257.145 38.4184 259.707 cv
35.767 261.509 38.4243 265.17 41.1333 263.746 cv
41.9897 263.295 42.8081 263.143 43.5932 263.186 cv
42.2465 264.029 41.7426 266.029 43.1801 267.301 cv
43.9038 267.942 44.5717 268.654 45.1147 269.406 cv
43.8403 269.321 42.6176 269.984 41.9008 271.288 cv
41.3354 272.319 42.5034 273.608 43.5864 273.179 cv
45.1645 272.556 43.8012 276.392 43.4858 276.759 cv
42.5473 277.85 43.1713 277.683 41.3999 277.098 cv
38.6811 276.202 36.0044 275.199 33.3549 274.117 cv
31.0795 273.187 28.4028 275.714 30.0307 277.948 cv
32.684 281.59 36.8393 283.595 40.9848 283.432 cv
41.1899 283.668 41.4331 283.878 41.7221 284.04 cv
44.1772 285.41 46.4721 284.565 48.3178 282.789 cv
53.5131 279.45 55.018 271.328 51.6118 266.49 cv
cp
f
17.104 197.587 mo
17.0922 197.094 16.5014 196.872 16.1196 197.112 cv
14.9038 197.877 14.4311 199.416 13.7836 200.653 cv
13.0747 202.008 12.0532 203.417 11.8061 204.938 cv
11.6782 205.729 12.7876 206.003 13.0942 205.434 cv
14.1645 204.384 14.769 202.778 15.4858 201.475 cv
16.1665 200.237 17.1381 199.037 17.104 197.587 cv
cp
.517647 .560784 .568627 rgb
f
21.4965 198.011 mo
21.521 197.458 20.8432 197.302 20.4585 197.509 cv
19.2163 198.176 18.4096 199.683 17.685 200.856 cv
16.9379 202.065 16.0737 203.28 16.0366 204.734 cv
16.0229 205.271 16.6596 205.413 17.0395 205.218 cv
18.3237 204.555 19.0708 203.076 19.8256 201.891 cv
20.5776 200.71 21.434 199.433 21.4965 198.011 cv
cp
f
26.8247 198.283 mo
26.7876 197.762 26.2993 197.548 25.8461 197.644 cv
23.8208 198.076 22.1626 201.608 21.5405 203.363 cv
21.1547 204.451 22.561 205.679 23.3911 204.588 cv
24.1674 203.565 24.8715 202.462 25.5415 201.367 cv
26.1284 200.406 26.9096 199.445 26.8247 198.283 cv
cp
f
32.9126 203.146 mo
33.602 201.787 34.1606 200.43 34.4448 198.93 cv
34.5473 198.389 33.8061 197.996 33.4477 198.448 cv
32.5063 199.634 31.7788 200.923 31.0356 202.239 cv
30.3657 203.426 29.4116 204.567 29.4018 205.957 cv
29.3979 206.565 30.1098 206.747 30.5503 206.511 cv
31.7485 205.871 32.3178 204.321 32.9126 203.146 cv
cp
f
39.353 203.062 mo
39.9116 201.78 40.3686 200.454 40.8559 199.143 cv
41.1557 198.335 40.1001 197.823 39.6528 198.562 cv
38.9282 199.758 38.1733 200.94 37.5151 202.174 cv
36.9692 203.199 36.1645 204.237 36.4106 205.434 cv
36.5219 205.976 36.9917 206.203 37.4858 205.954 cv
38.5766 205.403 38.8901 204.127 39.353 203.062 cv
cp
f
42.519 202.887 mo
43.0981 201.641 43.6958 200.423 44.0698 199.097 cv
44.2661 198.403 43.3188 198.091 42.8901 198.527 cv
41.8481 199.584 41.1108 200.877 40.4331 202.189 cv
39.8559 203.309 39.226 204.401 39.5463 205.67 cv
39.6538 206.094 40.1723 206.169 40.4965 205.987 cv
41.6147 205.356 42.0014 203.997 42.519 202.887 cv
cp
f
47.4409 203.279 mo
47.9409 202.148 48.4692 200.844 48.2934 199.593 cv
48.2143 199.029 47.5463 198.794 47.145 199.213 cv
46.2827 200.114 45.8628 201.419 45.3442 202.533 cv
44.892 203.506 44.2446 204.475 44.5756 205.564 cv
44.6743 205.885 45.0249 206 45.3227 205.924 cv
46.4887 205.627 46.9956 204.287 47.4409 203.279 cv
cp
f
52.6079 204.165 mo
53.0415 202.725 53.2934 201.275 53.5571 199.797 cv
53.7045 198.971 52.5092 198.561 52.144 199.336 cv
51.5405 200.613 50.9272 201.866 50.4682 203.205 cv
50.0747 204.356 49.351 205.695 49.9331 206.866 cv
50.1479 207.3 50.5532 207.451 50.9887 207.218 cv
52.0942 206.629 52.27 205.283 52.6079 204.165 cv
cp
f
58.2407 203.774 mo
58.7387 202.677 59.1391 201.536 59.5698 200.412 cv
59.9487 199.424 58.6323 198.786 58.0922 199.698 cv
57.4799 200.734 56.8344 201.757 56.2836 202.828 cv
55.8071 203.757 55.1899 204.671 55.3295 205.744 cv
55.4067 206.343 56.0327 206.645 56.5503 206.334 cv
57.478 205.776 57.81 204.725 58.2407 203.774 cv
cp
f
63.7348 200.006 mo
63.9331 199.393 62.9331 198.909 62.5756 199.445 cv
61.476 201.091 59.7172 203.026 59.852 205.12 cv
59.8862 205.661 60.5366 205.975 60.9819 205.666 cv
62.7055 204.47 63.1284 201.89 63.7348 200.006 cv
cp
f
68.6274 199.845 mo
68.7514 199.05 67.5034 198.553 67.2143 199.384 cv
66.7866 200.613 66.2514 201.782 65.7036 202.962 cv
65.2426 203.953 64.6362 204.917 64.771 206.041 cv
64.8139 206.4 65.2045 206.738 65.5786 206.569 cv
67.8081 205.562 68.2895 202 68.6274 199.845 cv
cp
f
72.0307 201.483 mo
72.1401 200.678 70.9096 200.168 70.5952 201.014 cv
70.2436 201.96 69.851 202.887 69.4223 203.801 cv
69.0307 204.635 68.4975 205.479 68.6333 206.424 cv
68.7299 207.099 69.4672 207.526 70.0727 207.119 cv
71.6176 206.081 71.8002 203.177 72.0307 201.483 cv
cp
f
80.4086 205.246 mo
80.101 204.185 78.6958 203.773 77.8208 204.383 cv
76.9487 204.991 76.811 205.874 76.2876 206.732 cv
75.8901 207.384 75.3413 207.94 74.8579 208.53 cv
73.5376 209.844 75.2641 212.078 77.0327 211.104 cv
78.0239 210.557 78.7592 209.712 79.3862 208.782 cv
80.1206 207.694 80.7983 206.587 80.4086 205.246 cv
cp
f
53.187 276.888 mo
53.8266 274.709 53.6821 271.754 52.7368 269.3 cv
52.7749 267.21 52.5024 265.258 50.9174 263.695 cv
50.853 263.573 50.7876 263.452 50.7231 263.331 cv
50.7329 263.218 50.7426 263.106 50.7524 262.994 cv
51.6977 261.575 51.4555 259.842 50.937 258.009 cv
50.727 257.265 50.2006 256.812 49.5805 256.612 cv
49.1342 251.789 49.1948 246.919 49.2729 242.077 cv
49.2788 241.724 49.2153 241.422 49.1098 241.159 cv
49.3881 235.762 49.4624 230.344 49.5503 224.946 cv
50.394 221.624 50.187 217.747 50.017 214.665 cv
49.9282 213.062 49.9926 210.642 48.5415 209.568 cv
47.4018 208.723 45.5405 208.77 43.9633 208.971 cv
43.0063 208.902 42.0561 208.898 41.1967 208.885 cv
39.5971 208.861 39.6538 211.206 41.06 211.554 cv
41.1567 211.579 41.2524 211.605 41.3481 211.629 cv
41.5473 211.923 41.8686 212.157 42.3266 212.262 cv
43.3842 212.504 44.3549 212.648 45.4379 212.722 cv
45.5561 212.731 45.6694 212.725 45.7768 212.711 cv
46.1186 217.857 44.06 223.494 45.9282 228.359 cv
46.0141 228.581 46.1792 228.762 46.3764 228.896 cv
46.0131 232.855 45.5952 236.809 45.2094 240.765 cv
44.8022 241.178 44.5239 241.741 44.5063 242.454 cv
44.4438 244.976 44.3979 247.494 44.4204 250.008 cv
44.2778 252.053 44.1606 254.1 44.0883 256.151 cv
44.0669 256.771 44.352 257.198 44.7661 257.447 cv
44.8715 258.62 45.0024 259.791 45.1733 260.96 cv
45.0864 260.957 li
44.9721 260.494 44.6704 260.067 44.1264 259.784 cv
43.4643 259.441 42.7807 259.195 42.0835 259.006 cv
41.77 258.799 41.3999 258.714 41.0336 258.777 cv
40.4253 258.674 39.8081 258.602 39.1762 258.589 cv
37.5942 258.557 36.7475 261.016 38.0659 261.939 cv
38.8579 262.493 39.7221 262.847 40.7055 262.657 cv
40.8979 262.593 li
40.9965 262.613 li
40.8442 262.787 li
40.229 263.584 40.3715 264.788 41.3452 265.248 cv
41.686 265.408 42.0258 265.569 42.3667 265.73 cv
43.3383 266.189 44.1528 265.621 44.4331 264.853 cv
45.2817 264.977 46.1762 265.461 46.8208 266.089 cv
47.0493 266.891 47.2309 267.7 47.3393 268.522 cv
47.2202 268.637 47.1079 268.768 47.0161 268.932 cv
45.3686 271.878 47.4819 275.179 44.6586 277.862 cv
41.2436 281.109 36.8354 280.31 33.1411 278.281 cv
31.7475 277.516 30.5112 279.277 31.228 280.486 cv
34.1098 285.341 39.7807 285.645 44.4155 283.517 cv
47.9956 283.772 52.2085 280.225 53.187 276.888 cv
cp
f
9.02095 206.781 mo
9.10201 206.608 9.1567 206.428 9.18209 206.241 cv
9.36568 205.15 8.5649 204.393 7.60494 204.33 cv
7.62349 204.321 7.55709 204.314 7.36568 204.309 cv
7.14693 204.279 6.93209 204.307 6.72017 204.379 cv
6.71334 204.375 li
6.50045 204.309 6.21822 204.378 5.95552 204.488 cv
5.06978 204.574 4.26119 205.587 4.644 206.47 cv
4.769 206.716 li
4.97505 207.442 5.46627 207.893 6.22213 208.125 cv
6.82271 208.309 7.45064 208.166 7.99752 207.893 cv
8.41353 207.686 8.74947 207.42 8.96041 206.985 cv
9.15084 206.415 9.17037 206.347 9.02095 206.781 cv
cp
f
51.6128 185.144 mo
51.7993 180.918 51.8608 176.691 51.8335 172.461 cv
51.8247 171.072 49.6821 171.249 49.6831 172.631 cv
49.6879 176.213 49.6274 179.794 49.4809 183.373 cv
48.9956 186.474 48.2797 189.6 47.2641 192.517 cv
47.1528 192.835 47.2065 193.126 47.3432 193.364 cv
47.143 193.341 46.9389 193.339 46.7426 193.365 cv
46.4819 193.4 46.2329 193.518 46.019 193.576 cv
45.8989 193.595 45.7778 193.621 45.6547 193.662 cv
45.687 193.69 li
45.2094 193.89 44.9243 194.364 44.9389 194.822 cv
44.5639 194.761 44.184 194.715 43.8217 194.653 cv
42.0766 194.353 40.2583 193.908 38.4926 194.246 cv
37.8745 194.364 37.7299 195.091 38.2719 195.424 cv
39.8012 196.367 41.6665 196.6 43.4028 196.939 cv
44.6782 197.188 46.1381 197.746 47.1606 196.71 cv
47.2768 196.591 47.3256 196.365 47.2563 196.212 cv
47.1372 196.012 li
47.5678 196.061 47.9926 196.1 48.4116 195.943 cv
49.3432 195.594 49.4184 194.371 48.6294 193.85 cv
48.8022 193.765 48.9526 193.623 49.0366 193.373 cv
49.0415 193.358 li
49.0883 193.9 49.1528 194.437 49.2573 194.96 cv
49.3598 195.473 50.1538 195.791 50.3911 195.173 cv
51.6001 192.034 51.4653 188.477 51.6128 185.144 cv
cp
f
50.936 168.005 mo
52.0659 161.936 51.6635 155.566 51.8051 149.415 cv
51.9585 142.764 52.5376 135.827 51.7807 129.209 cv
51.7036 128.531 50.7075 128.454 50.5737 129.147 cv
49.4135 135.153 49.479 141.583 49.268 147.69 cv
49.0376 154.335 48.2836 161.328 49.2876 167.921 cv
49.4253 168.821 50.7553 168.975 50.936 168.005 cv
cp
f
54.4126 124.688 mo
55.0454 118.392 54.2856 111.915 54.1001 105.602 cv
53.8979 98.7014 53.7836 91.8078 53.937 84.905 cv
53.9536 84.1706 52.6889 84.0944 52.6372 84.8386 cv
51.7446 97.694 49.9545 112.14 52.853 124.808 cv
53.0317 125.59 54.3344 125.469 54.4126 124.688 cv
cp
f
53.2924 83.0036 mo
54.8022 75.0954 54.1362 66.5275 54.0463 58.5163 cv
54.0356 57.5808 52.6577 57.7311 52.6206 58.6291 cv
52.2866 66.6203 51.0053 74.9269 51.5981 82.9167 cv
51.6704 83.8854 53.1108 83.9592 53.2924 83.0036 cv
cp
f
53.1489 51.0207 mo
54.4497 43.4875 54.3061 35.6125 54.4819 27.9411 cv
54.6235 27.8176 54.7202 27.6408 54.7065 27.4055 cv
54.4155 22.6101 53.5542 17.8718 53.2895 13.0661 cv
53.3422 11.8879 51.435 12.0026 51.4331 13.2126 cv
51.4223 17.4025 51.6274 21.6227 52.7456 25.6564 cv
52.1538 33.9958 50.9428 42.5803 51.5014 50.9362 cv
51.5639 51.8732 52.9878 51.9562 53.1489 51.0207 cv
cp
f
44.7397 61.4152 mo
45.1772 58.8127 45.3628 56.1662 45.4272 53.5051 cv
45.4536 53.4123 li
46.5551 46.3483 46.185 38.7809 45.4946 31.3488 cv
45.6499 26.0236 45.8989 20.7014 46.2426 15.3825 cv
46.3286 14.0559 44.2915 13.6345 44.1674 15.0026 cv
44.0688 16.0944 43.9809 17.1877 43.8891 18.2805 cv
43.2846 17.7565 42.0786 18.0754 42.1626 19.1066 cv
42.5922 24.3225 42.6518 29.6618 42.769 34.9963 cv
42.7133 36.1057 42.6538 37.2145 42.6059 38.3239 cv
42.2807 45.9572 41.5883 54.0119 43.2036 61.5344 cv
43.3764 62.3386 44.6167 62.1501 44.7397 61.4152 cv
cp
.941176 .964706 .968627 rgb
f
40.9135 115.497 mo
40.9448 114.884 40.9965 114.27 41.0356 113.656 cv
41.3901 113.826 41.8813 113.679 42.0073 113.191 cv
44.06 105.205 43.7807 96.1628 44.435 87.9514 cv
45.1088 79.5036 45.9692 71.0734 46.9321 62.6535 cv
47.0581 61.5549 45.3754 61.2258 45.226 62.341 cv
44.6987 66.2761 44.2055 70.215 43.728 74.1559 cv
43.4428 74.1813 43.1586 74.3517 43.0815 74.6701 cv
39.8989 87.84 40.0278 102.131 39.5581 115.604 cv
39.5278 116.483 40.8696 116.357 40.9135 115.497 cv
cp
f
45.2924 188.188 mo
44.3129 182.387 43.3667 176.681 43.4301 170.776 cv
43.4379 170.049 42.6391 169.749 42.0493 169.929 cv
42.0532 169.634 42.0581 169.341 42.062 169.047 cv
42.6108 169.258 43.2983 169.021 43.5044 168.26 cv
45.9419 159.262 45.0229 148.656 45.2534 139.39 cv
45.3833 134.168 45.5268 128.945 45.6645 123.723 cv
45.7075 125.048 45.7436 126.374 45.8051 127.697 cv
45.8325 128.266 46.7885 128.342 46.8266 127.749 cv
47.9526 110.37 47.4614 92.8015 47.604 75.3918 cv
48.0971 75.5285 48.7055 75.3127 48.81 74.696 cv
51.1499 60.9294 50.8325 46.3557 51.6147 32.4235 cv
51.6938 31.0192 49.5229 30.5837 49.4243 32.0222 cv
48.4672 46.0417 46.3344 60.549 46.9526 74.6003 cv
46.9692 74.6672 li
46.52 74.6213 45.9975 74.9059 45.9917 75.4958 cv
45.8823 86.2741 45.5258 97.1115 45.4643 107.932 cv
44.7202 107.53 43.5268 107.779 43.4751 108.783 cv
42.9545 118.929 42.4243 129.073 41.8794 139.218 cv
41.6381 143.696 41.1079 148.449 40.8139 153.198 cv
40.1889 152.909 39.3276 153.16 39.1313 154.014 cv
36.8989 163.707 37.3686 175.154 38.4379 184.985 cv
38.6225 186.681 41.2055 186.966 41.5503 185.239 cv
41.6762 186.312 41.8266 187.383 42.0317 188.445 cv
41.9614 190.541 45.6479 190.295 45.2924 188.188 cv
cp
f
47.727 153.668 mo
49.4917 138.404 49.062 122.791 49.4458 107.441 cv
49.4672 106.579 48.1469 106.698 48.1137 107.546 cv
47.5229 122.83 46.102 138.341 46.8911 153.626 cv
46.9155 154.094 47.6713 154.15 47.727 153.668 cv
cp
f
47.6997 164.842 mo
47.7358 164.235 46.8452 164.186 46.8637 164.799 cv
46.9077 166.174 46.9516 167.548 46.9956 168.923 cv
47.0034 169.182 47.4438 169.215 47.4594 168.946 cv
47.5395 167.578 47.6196 166.21 47.6997 164.842 cv
cp
f
47.892 186.559 mo
48.8315 182.459 48.3842 177.815 48.1176 173.653 cv
48.0571 172.704 46.5932 172.819 46.646 173.769 cv
46.8774 177.994 46.3706 182.305 46.7319 186.5 cv
46.7895 187.173 47.7446 187.202 47.892 186.559 cv
cp
f
29.1743 199.964 mo
28.7465 199.493 27.8579 199.241 27.3169 199.714 cv
27.2251 199.794 27.1333 199.876 27.0405 199.96 cv
27.0395 199.958 li
27.0073 199.991 li
26.7495 200.229 26.4985 200.483 26.2768 200.758 cv
25.9165 201.159 25.5756 201.578 25.2836 202.033 cv
24.8725 202.678 25.3129 203.617 25.9419 203.922 cv
26.5131 204.197 27.3706 204.025 27.727 203.46 cv
28.2153 202.919 28.6694 202.355 29.186 201.838 cv
29.6821 201.341 29.6225 200.456 29.1743 199.964 cv
cp
f
35.7085 203.318 mo
35.8842 202.878 36.1118 202.445 36.3823 202.055 cv
37.2251 200.843 35.7094 199.452 34.6362 200.527 cv
33.7729 201.389 32.5913 202.75 32.6987 204.039 cv
32.7954 205.193 34.2524 205.644 35.019 204.808 cv
35.4272 204.362 35.4926 203.857 35.7085 203.318 cv
cp
f
43.8247 203.381 mo
44.0766 202.559 44.3012 201.729 44.5376 200.903 cv
44.8598 199.781 43.1704 199.346 42.6616 200.29 cv
42.2465 201.058 41.8198 201.82 41.4204 202.595 cv
41.0014 203.412 40.6655 204.162 41.1899 205.011 cv
41.4467 205.425 41.9497 205.52 42.3852 205.409 cv
43.3364 205.169 43.5698 204.21 43.8247 203.381 cv
cp
f
48.9956 203.371 mo
49.1616 202.894 49.3979 202.442 49.6547 202.009 cv
50.4096 200.741 48.3051 199.321 47.4663 200.56 cv
46.768 201.59 45.7299 203.142 46.2075 204.428 cv
46.5532 205.359 47.6547 205.487 48.3237 204.839 cv
48.7475 204.429 48.812 203.9 48.9956 203.371 cv
cp
f
56.9438 200.809 mo
57.7172 198.857 55.061 197.57 54.0112 199.391 cv
53.2036 200.791 51.9799 202.305 51.9956 203.972 cv
52.0053 205.196 53.642 205.987 54.6079 205.235 cv
55.9272 204.208 56.3481 202.313 56.9438 200.809 cv
cp
f
63.7544 201.879 mo
64.3764 200.075 62.1254 198.982 61.0961 200.594 cv
60.4838 201.551 59.6909 202.518 59.3911 203.621 cv
58.9438 205.267 61.4301 206.469 62.4428 205.095 cv
63.1215 204.173 63.3833 202.956 63.7544 201.879 cv
cp
f
69.0717 202.228 mo
69.8764 200.877 67.6909 199.415 66.7475 200.69 cv
66.0317 201.657 64.8803 202.813 64.9614 204.086 cv
64.9409 204.343 64.9506 204.576 65.018 204.849 cv
65.104 205.2 65.561 205.492 65.9174 205.437 cv
66.184 205.395 66.395 205.313 66.6127 205.201 cv
67.8266 204.799 68.4594 203.257 69.0717 202.228 cv
cp
f
22.1186 200.523 mo
21.8979 199.478 20.5024 199.468 19.8881 200.09 cv
19.5708 200.411 19.4077 200.783 19.0942 201.156 cv
18.5688 201.781 18.2954 202.398 18.5444 203.218 cv
18.687 203.69 19.1655 204.108 19.6567 204.172 cv
21.562 204.418 22.4467 202.075 22.1186 200.523 cv
cp
f
17.4174 201.065 mo
17.3833 200.114 16.3999 199.467 15.517 199.654 cv
14.5503 199.857 14.0981 200.794 14.3452 201.71 cv
14.5405 202.433 14.8706 203.401 15.6381 203.709 cv
15.9526 203.836 16.3647 203.869 16.6489 203.638 cv
17.4135 203.014 17.4497 201.983 17.4174 201.065 cv
cp
f
78.3325 200.727 mo
78.8374 198.663 75.853 197.219 74.5483 198.899 cv
74.1206 199.448 73.9106 200.001 73.7417 200.671 cv
73.2358 202.685 76.1811 204.11 77.4458 202.46 cv
77.8725 201.903 78.1645 201.419 78.3325 200.727 cv
cp
f
7.76509 197.714 mo
7.64791 197.568 7.52486 197.426 7.39693 197.29 cv
7.20259 197.159 li
6.62056 196.52 5.77974 196.171 4.86959 196.185 cv
4.08052 196.197 3.24556 196.947 3.15181 197.736 cv
3.01412 198.898 3.55123 200.01 4.69478 200.421 cv
5.35689 200.658 6.01119 200.741 6.66548 200.415 cv
7.38716 200.055 6.35494 200.571 6.79146 200.404 cv
7.12154 200.277 7.40084 200.075 7.63228 199.806 cv
8.09029 199.274 8.24166 198.299 7.76509 197.714 cv
cp
f
42.1411 234.357 mo
42.604 229.59 42.3481 224.866 41.5385 220.15 cv
41.352 219.067 39.6567 219.166 39.809 220.286 cv
40.5805 225.991 40.4292 231.576 39.4126 237.246 cv
38.6596 241.445 37.1352 245.872 38.0981 250.114 cv
38.2827 250.926 39.3315 250.608 39.5219 250.005 cv
41.0346 245.222 41.6547 239.362 42.1411 234.357 cv
cp
f
39.8696 270.729 mo
38.8403 269.278 36.9995 268.726 35.3461 269.396 cv
33.6801 270.071 32.6557 271.71 32.7827 273.51 cv
32.851 274.48 33.2534 275.446 33.9975 276.096 cv
34.3823 276.433 34.9497 276.723 35.4545 276.816 cv
35.9389 276.903 36.4135 276.865 36.8784 276.705 cv
36.1674 276.857 36.1919 276.852 36.9516 276.692 cv
37.3413 276.554 37.6733 276.331 37.9467 276.021 cv
37.3354 276.545 37.3745 276.507 38.062 275.907 cv
38.2495 275.674 38.4018 275.419 38.5219 275.149 cv
38.7036 275.036 38.8872 274.924 39.0688 274.811 cv
40.3979 273.993 40.7631 271.987 39.8696 270.729 cv
cp
f
79.3422 207.92 mo
78.4174 209.292 76.1401 211.811 74.937 209.107 cv
74.8657 208.948 74.7788 208.818 74.685 208.702 cv
74.768 208.413 74.7924 208.104 74.7426 207.807 cv
75.0639 206.838 75.1596 205.632 75.2768 204.757 cv
75.5073 203.026 75.4047 201.237 75.4126 199.494 cv
75.394 199.334 li
75.4028 199.306 li
75.4331 197.59 76.4536 197.095 78.4643 197.822 cv
78.979 198.494 79.4506 199.194 79.8803 199.923 cv
80.4838 201.08 80.6645 202.221 80.6098 203.526 cv
80.5434 205.102 80.2309 206.602 79.3422 207.92 cv
cp
71.5229 206.353 mo
14.7182 205.021 li
14.4878 205.015 14.2846 205.055 14.0991 205.116 cv
12.5424 205.08 li
12.4809 204.787 12.3305 204.508 12.1196 204.271 cv
12.06 203.396 12.0835 202.507 12.0649 201.634 cv
12.0434 200.642 11.8706 199.476 12.0288 198.453 cv
13.7602 198.493 li
13.9868 198.499 14.2124 198.454 14.4223 198.371 cv
14.5991 198.435 14.7905 198.481 15.0102 198.486 cv
71.8881 199.82 li
71.8881 201.03 71.9086 202.246 71.8549 203.454 cv
71.8276 204.078 71.7768 205.492 71.5229 206.353 cv
cp
37.8862 263.314 mo
37.9077 263.215 37.9282 263.114 37.935 263.004 cv
38.4741 253.751 39.1079 244.504 39.8364 235.264 cv
39.8618 234.949 39.809 234.68 39.7085 234.45 cv
40.3022 209.149 li
42.7378 209.206 li
42.7241 209.316 li
42.5151 218.242 li
42.4614 220.51 45.9878 220.597 46.0405 218.324 cv
46.2504 209.399 li
46.2417 209.288 li
49.4624 209.364 li
49.3823 209.557 49.3286 209.773 49.3227 210.022 cv
48.6821 237.35 li
48.6713 237.785 48.7944 238.138 48.9975 238.411 cv
49.3911 242.809 49.643 247.214 49.6909 251.632 cv
49.7338 255.626 49.3413 259.674 49.6938 263.656 cv
45.8979 262.474 41.2963 262.542 37.8862 263.314 cv
cp
46.9751 282.821 mo
42.5678 284.658 36.0795 283.632 32.7163 279.912 cv
31.0571 278.075 31.0141 274.767 31.6499 272.504 cv
32.0073 271.235 33.9887 267.354 35.8833 267.017 cv
36.2309 267.246 36.686 267.326 37.2241 267.149 cv
37.2788 267.133 li
37.4643 267.116 37.6323 267.061 37.7876 266.985 cv
42.7241 265.573 51.396 265.674 53.1616 271.813 cv
54.5844 276.762 51.2524 281.039 46.9751 282.821 cv
cp
47.4301 7.07538 mo
43.0366 194.439 li
43.0239 194.946 43.1977 195.338 43.4643 195.625 cv
37.4253 195.484 li
41.6704 14.4728 li
41.6743 14.3059 41.6538 14.1545 41.6215 14.0114 cv
43.5883 11.7243 45.517 9.40644 47.4301 7.07538 cv
cp
46.562 194.522 mo
50.9565 7.16034 li
52.4213 9.63153 53.7163 12.1945 54.8305 14.8723 cv
54.8891 14.9807 li
50.6489 195.794 li
46.0805 195.687 li
46.3598 195.412 46.5503 195.029 46.562 194.522 cv
cp
5.70943 207.565 mo
4.58052 206.562 3.95943 205.37 3.6772 203.919 cv
3.42134 202.602 3.42232 201.089 3.81295 199.797 cv
4.01998 199.009 4.41353 198.331 4.99166 197.762 cv
5.82857 196.968 6.78658 196.81 7.86373 197.273 cv
7.8608 197.295 li
7.81588 197.774 8.08541 198.328 8.48287 198.683 cv
8.43892 199.636 8.51802 200.604 8.53853 201.552 cv
8.56978 203.003 8.57076 204.445 8.77193 205.885 cv
8.83345 206.326 9.05416 206.629 9.3442 206.837 cv
8.40865 208.53 7.48775 209.146 5.70943 207.565 cv
cp
79.1274 194.004 mo
76.5346 192.925 74.0483 194.156 72.7797 196.313 cv
54.1743 195.876 li
58.4194 14.8659 li
58.4311 14.3981 58.2846 14.0285 58.0532 13.7477 cv
58.0366 13.5578 58.0004 13.3635 57.9174 13.1642 cv
56.1001 8.79901 53.8344 4.72431 51.0854 .877139 cv
50.2651 -.271298 48.9165 -.288876 48.0415 .80585 cv
44.9018 4.73212 41.685 8.59101 38.396 12.3923 cv
37.8335 13.0422 37.8403 13.8161 38.143 14.4313 cv
33.8989 195.401 li
15.0932 194.96 li
14.8295 194.954 14.5991 195 14.394 195.079 cv
14.2221 195.016 14.0405 194.972 13.8432 194.967 cv
11.1987 194.905 li
10.9585 194.9 10.727 194.965 10.5063 195.058 cv
9.22896 193.777 6.98775 193.251 5.35103 193.647 cv
1.77974 194.51 .180133 198.218 .0160704 201.558 cv
-.172406 205.402 1.27681 209.031 4.60591 211.17 cv
7.90474 213.289 10.6928 211.744 12.3911 208.61 cv
12.393 208.605 li
15.6167 208.68 li
15.7231 208.672 li
15.8364 208.686 li
16.0678 208.691 16.271 208.651 16.4565 208.59 cv
36.7758 209.066 li
36.1606 235.292 li
36.1557 235.523 36.1948 235.725 36.2563 235.911 cv
35.5522 244.908 34.934 253.911 34.4086 262.921 cv
34.394 263.172 34.4301 263.392 34.4965 263.589 cv
29.8618 264.943 27.4292 272.972 27.9096 277.076 cv
28.7866 284.565 38.7348 288.565 45.435 287.05 cv
53.5961 285.204 57.8042 278.742 56.559 270.542 cv
56.2192 268.303 55.0229 266.632 53.3442 265.419 cv
53.3794 265.221 53.3911 265.01 53.354 264.781 cv
52.5874 260.003 53.2915 254.902 53.1919 250.071 cv
53.0942 245.412 52.7778 240.768 52.3071 236.133 cv
52.2963 236.024 52.2719 235.924 52.2456 235.826 cv
52.8491 210.105 li
52.8549 209.855 52.811 209.637 52.7397 209.441 cv
71.6987 209.885 li
71.6694 210.179 71.7065 210.491 71.8501 210.816 cv
73.142 213.716 76.643 214.853 79.3051 213.023 cv
82.5903 210.765 84.1508 207.019 84.1401 203.154 cv
84.1313 199.868 82.4038 195.368 79.1274 194.004 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (7_gun.eps)
%%CreationDate: 11/11/2019 10:40 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`I*0XX3?NH/a0]p8q8\PFnrs+Qm.\!Hh`:5,Zk@ZXe^A3J-1Ru=Zpj/\@a;LWq!.)S05b.2q;V(JVmkQ5
%IsCYaea)[RYrhmVaiiLYSpW''H*[>4pA+;]J(a4]5C**<\`W`il0FgOcYm`.]mfM4bq<?TC^a\Bid^`0Y*'a^mqaXas6>:pI<k_P
%NP(k<)lN_spV5M0O-EZd5Q/X[hgYIhq_t^N]Qs59jo>/p:;-X,em!WLqqVqaL"u#24"&'Ejd3U>m6<i2iV=F@k&*=Trqbbi45Ai1
%mXFmN>/'0"=WZXK/9^6l>TF:Pppn<Bf$j'd%=e,aY`&@J0>9F*).$+#iKA3OEk"2tXZ-)*?]mSIqUKdCT"P'op[9hi\F'm:0>;f4
%jNXe:IU9mVkES6oX-W@2VLG4tUL"Y#FQIqo],L9@?&F"s>F)<(V9.h&YDP!YY$-PAp;^gTJ,.(O^Y_6Nk4Z4)`qAXV?U"Ae70[M>
%E[%Nk>_QF?rV#tM4MQ=C%kjQgO`/aYBKE`>H1fGLF6U=0/iV+K:gU$%j8[jOIsCP\gY4Y2qQHLjJAIKU0)^"/rSb`!TD\?tU?nU;
%j`fV<^APmLs1oNF+U7b%Q]\m`b0HheG>2CE6i`:(o$+m5Ob.':`BA0qIe0l@JI$WHZMqJfcb=i$neWn=h9Tm,2@Y-2qUmgn/1>sK
%p&FfWX#g2nrK"Y&FMsY-[kE*k3</[12q*.XY(#sg*drA1c/I1\%*\J@k?_cK9:9>:?[Z_)?2qauaXqu:c9@0r?iThb>k%)+DZ':W
%DtS>IlS"k0+M[j9lW6;upT'Y\r9EgIT3d$=lCVs<s5Wh;Roce)W5%$am[sKfr8VG%T5q+'rp]d+;n7\]H^o0MjOn`AHcHTW4($n5
%oXAims4RGLOR#=ILe_,lTWP,Y5MeSRp"a_"4msP<r8RO9QVUrVpks.0?U+EbIe,u(BtYff]RBCl#Mi<(k<%oDhM(-_h>]&S9YYnp
%UON1.jdfV[mE+ZQIsL_`cPWnLc[VV%IJ*I%pA`p^l],?Oq=`(^5Fp]\>!Meb?T`W*-Wseo?[hVFkQUqJg;E,sD0s?j+.bTErp8Ck
%:VQ_TZ_tG6lQ<k@e*[aM?9KBS^[V-jV"o64's;r*6biQbMgp'Gr7Uft`ae.s0;Nrd4aheVj^5cPF8IZU_mFplnolapJ*qc>ST+Q/
%U-&%:pNl^dfr'h1/j2dTq=!Ps?Tr&I>^FE`=5u<lr,;'RI?77^4Hmm6O+M]D3FDdIM("!`5Pq@&9N6-*5<jKDL;WH&+.g0V?0C@N
%(Z3&th0o*s-f<a#k4CIE>]6%EQ5+7CZ$u]D\$'AK]^K4QVu6,YPAd&7CAA6?@`3_X0&7Q/T=<2A\$n$P0pgX+]ah[Q2if'Zj5WX=
%+o0i>^u&C7"fo>S58NE3s,mG4n@'rLL6)7D&ps':UU^3CfDF0lkU+d%m.tR,>Nee)r>rS"Mk/ZiN70%acEc@lYTpm]aP6'rs/7kJ
%TB&Gh8&*(lGn#1[rGe+T/p-gniYOhlrpKULhsGmeqT6p!Z#6/BCkZe1K%TGb>=dGXKYOo1]Z8q)NuEYG\E)pBU'N>fEO_r?cN!M2
%d<3/uEl@9_mB<'#90:78D#8D3n5EP/WPoXADbc=hT'ETKX8J]XRVT"=\oL^ZEjR$"=`T?F'UNb!36JMPEf40YISu1dA1r_]94$&+
%*2dnCj,itTaJ2X-7?3V,*'VK'81rc?EJau]jAf]Jnq`ZQ654c1qRFHigk:k2a)I,-4t!^6jX<D9Lm)AN]_lb8\gK'.L;ulGUHci)
%QfHfC8,DMij2!7g_r]HU3`UXI/as,XGN2G=*9GgGL[Cp:jJt]pMB(:q3MM_Xhu`)-)`^[:;3$;,fe:rt1`fYWbTe^eNhDGXr941B
%kfA[mEVSe5I-&VfqcQQVp,DbVa,,:@O@]3962pm,a7Xm7J$/N_0*Ad=Ehn-'0^OE3kRtPtN>s<+%W^KL&WH$*EWaDq!CKqHlqi#^
%N>tHNT7\+C&Rlqn5m`,OW>+=ODr`m8/03g(;kC-BI`.SI>ihD.Hm2i??]Zs]9lJ1R*9GL4rdQU$Ik=0S5?7]taT!%^%R`\FcXSrW
%;O2_%plS,,8Ih$*KDaE_onQcfOio;=$/+[n$2JZiT/S*jp`jh57q_Y95OZ+W'D]_tFo1:](6PdOP.,W_&XX](g17]g@1`fAdVXbY
%'QK;H';KqUMu.`k9+!F_Wm%\W3m%+"q<B0;E6'ud;aKP_Q+fA<=?;l#iq^cR*:&TC=-2r&U(ND[qGKdDaN.GFKZ!KQqF5#6Mo6<l
%U2,mjPK9>Z.2\n^M@=Aa*"GINIs2=LM>8P1i1G>.544KPUYJ_D;`H'Eq,Bc\>b;M(UE',O,?)[A!l/2?WJKcFS,IFKDbf=PEc`',
%&;5e1"!N7M71lOFT-do;@=up4Mss"<Ntb+>H_I0d/dN0G"?D#M5COm;N1XnMN'2mm89K31=\\SR3?9</.V,X=!AY>XZaVPKb%/(l
%a2r,b*@G%Cb8>6aAPU1$#B4_O3E7eN:RKSs?;1-%SX^0FK'[5op9c<.CKuC-QfE1t3SZmsa8h$nP<k"F,T@(!KR<i-8Ho85*7=4F
%o]Q?.-i-\@%N->8^)S1&OE;.">)!>:[13oUC:S?6XJ1]pONG/K@E76oZhsBWGq&oJ%]3,o#=-,c"n=QW/t*CK'[)"40>nYk,.Cf$
%.YYF,X3kpm:`MGdO-CqQ)VW_]6=XJ7JgX<99_e`16PY-&g/B^GW$4uu0rPSE+=Ii'#I9@dZ/EI.\5;-LnMI8>4VtmYe^K?sXHGNc
%Sk,J%[m]?/jf_>8/;%48B/pBb_]ak9XHZ,8a]TNV*f!/[+d'*)G,_"ndNl/[N_%#QAE$d1M$]ZJ>GF`M(HGYeVG8<d#Ec<-H#/aA
%cdMJ`,SCL4_Sl^Pbha,%Z59Q/L+%(FEElI<nh_mGf3D(./gk7c/Firu64RU^?kJgO&1epoVUA[N4KbM:.Mn'iI2ob)oYof4,D/Dd
%MaQXdTM*2>-/lqai0qhS!B)tI'M%3EA;846R3e858J#TXZ=_!"3JtcCBp)FO8KnTVVZr!F)DF_UAraYD8S3i>)BijEW9I/nFsJk(
%S=(9cRI2ac)HK.acGo?T6ZCZE^g/l$M(P_>\Ec'2Y+'s.9`L0dOW*$tEKfIZ4iL4g7f?rq<jDda"N`*e1IRZG=MBs<,lhfT"nr'$
%9?hG-$i$slhpVW$LR0Zd]X[oPpT6<H=5a?gCmWnSmL421`/B&*6u+ZJq$5<b:2GS3q?p?@6*rE6KI?oQ7+dO;<lcJNHP+YhfF(H-
%2i/B0;A#TddUquJ\koe]=Yj$J7OlbSgO\WfPU4giUiJ"cM0l8?;dXubZM*B](Z2srcAQRIEg*K6Y3)[^W8`h)`Q?Ub2<Sf7<CNgc
%:6hBM4&pN:W4c4$oq/o=@b[h*m)j91:3PFb",lnq\BBX5JA6/YMatGC8DAc3oY)R-H^+C<\`8+QWulN+*?T`RHcR@SI*d-L5<dup
%^,%+n`edFsoK'Qa3Jh'F`30VZQ)SBKb5qk'iou.2C6sQ(CH&Q7"^1+G22l2_&b;]2R6[sOd-.7(BBC4.]1R]n:IFP<IA7].;<Lnn
%*L^`K=Ed]gd6R$OB/Rm+_^&059[0hNN(o$D>li>MHS`X$X#j^d=?"6O).T_5RSC):[)k;>2?OE/@3!<jQZ]&t&"7CZE%0S<iB7(B
%oa#Irin9I^*7U"eJF5MAK9*SbEl\$J7sk+VGC7FKms@1lNXu,O4+?1]rtos-QU[D88JNt8G7.*^:"IIYqF%DNd3hMEkUKM-<bkeh
%iak/*[hJ.p8ui,UUSG.4kpT='6sN&kc<thun(/snVp&?+RLA/lgq;+(<XD-o.)Z*:X2>@PAiXu]Ds.te/ntEh^r*0`L?g3*V/.-e
%2XI3ABC>&PF%s!g3,1s#[*D_@S8"W(a-l'E9^lIol2G2@<-$$kg?\.HrAs?%>47*(cZf;R]&UO4rp&js+@+isl#C9L1Y$-iiX>hM
%^Z!:Ds&6Bqdr(08JqI0!Wo:U(37poi3pn]g-?#JY<_Wh2WEW-WR6e)hd<1g%LIpA,l8r*EQiIJHh9^TXL@l<#.rYaoF57D_OunPm
%K9e%[g_t_pC,\I]ct_BP.l;."1_Kmic(u2<lDS/GWW&h3;QN^f9%Oo.NqY9q$HtW;an)79,r,LnC\=c@cY<*'[f4I\FZ]PX-&eJV
%L#[:N=<f=4&'nq66]_#(6gj`Bo*>=\k`@kiptYmCGO-70k2tfNZ^8Y8gn^EYj%_P2UC;R7acL$?]&V'*-mA^`1`tc*'+-lDp&mZ;
%!Dl;U'@:BeDk.2\!qHKP$+LXVVa?p]F<2;M;ijp$:'3I7i2/f0@Sq5do-)KC"E"k+SA@pP2]k9De5;%.K:E9i.aY.kVh1HHGO@$i
%>7#TWp=*2\e7brI-ifpcU9Zp7HaMGlSoEo$WXXm6(5pZ4To@RBTKaKQfQmt*WnO"Q[t%9IkYnP"/7$eJPH'XqVVU9&,KcK-f"2uC
%3l:#=s)I?JG8r?smGVsN3DOKUNj<sN++,%LEl]7CFP]0"eqHKZpu$5noA&luk-IPQXAM/sPg:90;r-uM7es,_5&6D/)WfH(d59!:
%7@sMAqYrbYQcr;T1.<_QpG0QB;P')q%2DZ-jt^/rJh5U`J%:Z@n7h<GpcM0Q>X5m9,._VRiiK\_RGF-lT3[7SfhJFQQ[[Pi.<:L1
%o?K!j_7-_\k59H%RSEXpB__@M!d@F(J_MFdb8R]/5YPO-7`.dS>%9cA>?+URjQJ1iQo">CbCa#rguS(icVGV.g`MR::'GpiDu'9u
%:mM_5KrE/:6m2oV5uM6Q6QP5Y.Co>BMaI4gm\^@A`?Uq1pQCf,J&09]FI0T6(*WRuaEorEMhlVn*U5PXrmT]0^Z3@`n#,Qd:G>(>
%]KAKUrG7(%&oK1-h]i5+;1uImk!`D-0oVB.6+=).Qj/T/D@s57^jnD]=-9_iK"?VWRJ3Y1DIrTX%ULF_\Hl=Yo;O8VW%'#WF[T>h
%7[PQJRgIjor5=\?>=P&UZ1JsXA$q935[_$&hQ#_>ScHV_d7'7!d`>>:**!/;DanoMk,3*<;k)mFp<;$M9]$M);`-eIB;c$X:dpE0
%S>FpJ'3:W(Ink1BB[5o'8#JccZb&uKN]<%U&rec8FaMV"8!?#LY3UIOE8c_qn\S^!ElUg;2tn?e=_?tC:;M4FJ+0/"\n?fRnP7iZ
%*M;fq^/o3(>T,LjYc4)*5r+H)cS`Y*R?42cIRg8Q0;a.ss"oIt6p5S;(HO03S6kIH*#WG$)2Wms1t%sVkqoc1k$aUJWl)L8'=4ff
%W_OH=JsocC.>".&#*J`1crG#o&!i`\H.#PWk8#tj[Qmb%PPYq'8!llchEB)B!4K36;db0.L4CkdA/I!km2Ln0["HmFMc9U<N]B,e
%HHO,ioH990_k)qHF7OZYIb0%K!Ro-;f;"@9NRXHFV#NU%5I47ufcEM%c5P1A4Y"M48&oT-M"_tT*ClDWjp*!i_GSVi\`96h[iFek
%LYVD#B>)X]+8_)3?tT5anC$tF?=M4[@080.QAhs-L775]F8Sh"hnNdt1Ug_u_joQ_OPKgM>RFEoiFsn-\d0m5c1<$Frg//3'irbq
%IfktST%h+SkFb_.Pk'?h[W'Y8-qX()$70P?Ue;h.Z/ZfbRQr+.j'B`>"cMdNLX#mmq&gOH0VIR"$mXB4LYVF$`RP28jjHG=nAC96
%q2d\po:$7RrZg=j%*1WR10eb'lC+22m,.uR9bltV6Jn:K0qFB,6p_oW<[".@8Lon*:%'@)95*uqY<B26,F5[=<CcLTF7f7TSZ8HS
%Tp;c>F[s.9W7N)5rM0G'6JrSH6*u*l,#p-lAR/e!;*?R/X\@Quo'(7&VY^(MeIX65I^5gH?j5)-bD0l1hmBo)0Mt@uSJGC!"4I>[
%Y.]DO:A(7D5Wu\/eW#;@%qVkH=L7d9ZACKhCrSLVANKD8Oj8tK5B=e`iUHR_mMuNip-T@*p3.R=+$JsQ4&56.jGja1l[=fnaEQEQ
%)O:Sc[R%In2=k+S9[ZVZ"0i>@A0%`DEUnr-qgmH,%R[!d!_+;r<'5D![7Ca\AJn,aWr.E7S>`WOXJT!1iL3c2NV7-r/S/NWA[3a1
%k(-WQ]!Prb<OMn8nk[bV8*[ZQLKCTI8UZB^9i0N1O!0]oZsdE<VB0/j-7a'9N^4F7L][FX-H+S)`KE=,.<I(29M9:e[KSkLPe9^n
%&oGPX,,S"%:mXhPmZpn!/%BnPjC<JVd0mWEp$b,)e%6+#j#bS4lZ#$OjGnH<5482na7hUN-^;X'K<3%7@E#1t(;X3@ku+i@JDknj
%gRf=m<gI'J2LO^/VP%!akOC0=q&>*^r&l@.dS;jJ'k+jZ/U3XTZUP6)D6fY;Ef.E+!X':5@7No.[]EqB@*snC[KRF`.^.LR657Bh
%GFZi-mZ_^NOp]ga.d#X9g-"oJ%KlZF&W?Q=mcZ2f^*As2%'bc`d"#+7:>*D<HK?o5$ln%t*O@)aAC;$WohF3<86hgU`=7I/',$j,
%!HUu9)O)o387#[Y?OuEFZ%A_`%`*n%@ZeO>G@IBh=a1&k^50Vi`+XZ[IP$UUn=IT13/A@Yh_UGn#F%Gi.AZ_FdOY(ak+F99Ls+VH
%qL,nfGUfGM4.[>MB1KXVPWQq*30u^51=>P/l0gOUc1i>lRN`/u*Z"`7R43;9'Qe6t=Z=HW;'s=uPgM$,ZcrB&))V)&QH^aZ0VSq6
%$o'WWABLAJG!/O&@cS?IbUbWT\k.#_#1PZ^Or?Ldk.dR6HHgf7of+>lcl/lYkKuc'No<%"QrjW5pQ/[PJp&ZHbfrO)'+%YL1)ZjL
%3<<q3'31`;%F8Snb:.GTE?^B.fI\#.:GnT."2eJ)7Lu9D0_oT[*b*W`h]]TYIP:^>&ELf6f-1OPjLgAS1fh".^C>2+g%OA`0tN1;
%HE<Yi5kipZlK+lN_pLW>Uua"bqk_:-")m]!X6Vq=CO[^\4X-I\$JHkh:7j7p<o4+Fa<o>p"Z2;+F;!Qr'<4e@.ZXnd+i:Pl[IItb
%m)d=J>GkL?*__q`R+6+8pK5#QZ?ds'r'#HQh$^dSH`Xs#9Rt\ccjg^t`&4eFV*q@/-)R"d,pV$"7%)WDkgJgbC]c3-<'0(r/;.mc
%W;WD#>^t>1o.h=ubnu1Xq7*dUoE+b@NWC`42'mHOmN07]lPA1IG\^-29KrD7]]FAlX2I0pj$t)8a,tOEbg0=T^L]O-,gr/\C(H8K
%A50"63piO!QIMe22sc)Y.2<HV!/>_T/#JJ+d?D`@,S.RHb=-7ai-c0mC3E5m=e\StdB!SZ>r$+,S_5YddN`N)6(*Nc_U*Ra?q)RQ
%&YfB4,&?J@QkHcB@+tYu7"@Vg%?DH;_d_1lU]ouMZ[!U&7DANBk<&[t^>n+l_Z<bT0OLT[!;Al23[GP,B#K6uHnqFZaB0::DNBER
%TTbWtR2n&^_;*"'#T0Qa/1Dh]\0bFN1";=,Bk=-iN/7F#2R)bu`LP"%QAp'\Zd'RnN,*f^4Ie.N.J5qZbdI<%6#8m%3Upruf"&E*
%F+1@>Ki,p\c]1$l:ui0NZuXUNVhJcs^<ucjA"E)gQ.9>L5Jfg)E7kV+IIMR?5o.JPa%*@b%%<L4a5:54Q/AE7\E>P1p(JKna2q8U
%.b5>;m0H->("ZH$91-'L,><a#)Vj^E)ZHRl5CR.l,)r8#L60"eohj4XF175lVVH5fHL@>YXD]ZC8.T@R>--)#<];am,EJVl6RLnE
%c)ZORgK#ggI$fpSs5cAQYR/3`!^5^4U94092uM/m;sVb800.hpG%G\;>rp1SQTO'sdP'<lG.a#BKD]Tt59<XQ:35H$a'1<[mN2+1
%+Wk^^Nb_II]jBArpqiWZeeNL;'AOpWXpMTSfVl+2I:C(ZCfG[Pb8jhe`eh1q`KZ3*k-/mcdEm&RV>naY:-=4S[fj'BADiu,<^u>D
%J9Ki7B>]u5G"t<7+,Oq!,d^rB:a4W'+er=AIaqqs'7Z'+RI)Qq=&XS\$<pHVk!ZL8!DIKWp%8ea>WX;9ht2S0*)$_-)(YHX#,efW
%i,*f0PRrekP(MSW(48%qptg\^4%[9_V?.^UmXpN-8\lKon;_#XCg?DGjD]$iKBGP:]:m$.g$impD[l,?#iOMPG+6B0LZt0NQLiF=
%$d>\_>DBJ*DON07crRuSZQ>Yn-4T-Fm^RfKk2S!tYQbQ^O,]8G>3!*n%5&Z>UB#\RH*i8HhY)#o!I(^R=$HO!]N>smO:OD]PPp.>
%mW]Kse-`(jMR!_?fS^kOs)j3:UZ]@DZ]9@1%3iIE_)IRTh\L-t?Dg9e`[4Wm.A:sBMr.67I$_LU^Yt^dbdFac=AmS3I(;h^SC0%e
%h3]=.6SS'P]'>'4<IY?$qT`+k+*\%0TUXRG)7<U9XG,BG].H)1<I!Uu9XmZN[c>HJMQ[Q*LK/SUdG\2k'm"8dj4No'$Z6M:"*<ie
%@coUS+*@J%U>Xm8"Mpr1/Ac3\'2$KV2n/%kS0XrnaqHee;4SW#kDF@S)BFijekHQhUTm!m:[@/==9Q^\7\rR-Gg%+)0Wj'=R9VRq
%K?\hJM6u70VfCVcHdDHBErsXOA"b+iP:t#X5dGL/\':iVd_CjrWTd?M3gJUnN;I>O2bt@deHE"lg&9Bjqk&AWfb=4k>bG(M/TI@7
%Tm5X"aC"KN]lK0p#S)GIpog3PdbPf10mD#*k[Q39e]Z'k'#n9fe@?h\f)eQS+t]MaM\X\_FdnG_Ol:?/7j*e:S7\SYYa+fb[OJlc
%XshY:MY_G+j19tLc*Zj"jD%*>B..rpd*0=7!-Y,U-FO=qk$L(?H=h0C/\X.'W0gF9$C*I^q+_uO[Q))s\^<3oULbF;2UMTNG(<5s
%+7TEWF?"<)V926XbOUP0(!A'^*3a'ANt,R@,gSnc(O2'9&R_CiXVhV*RiF#SLCU&BYaNmCEZEqj$i^ISHb'%&/,'Zj+uL16%AHBJ
%4dMR/'5n4Fk-C(C;96+ge\$6/0*CGB+>W)?+-!Re[FE)'$Z4_CC+\!"AJi+6!XhW+IBB4Ws1If;`MI4P*Ni.IQ`Gba.LQL?K,*(j
%SZ^Pj&75GsQpop7[W9$2X)(Xu),jZM(#g['+*B\W?n$*^/^W5E^eeo<l#XF8r&c_`,5p$(aeMtE.(2,MB,MEXAPZ^?Q&u/i#"RNs
%Uph=h4lhWKF-M$4qNbW35in#1Qh:8^f_o$7WKL-HGduZHmE^rcb@1'a[]IE"GBigb7VKhFTdpP[eI+t/QseQT?^q>OdYk)91sY"K
%/>ZdEe8SMm0Wa'*)N(b)3rHD?^@u.BHK2dn7Nc(B]R!Ys-3lRliKHRF9dW`+hB&cRHXp7Om&CH-:JFJZG@_AYbSRV@D0lr_]s>4#
%X^6k7OCuVs6S:<YUV]0F`t1jAk@rs22"/Kpd?;Oq]L2C%5e/TG*?T9fmePp3.k-CVX1!<NPq+kXLa'p2$MWl;/Kj]r%_K09NW8V/
%GL?-rSJE^(GdD(sh!a0/.,k_K\VZGOo*#BcK.d1+CG0$Op+gHtg&!N;j\DLS`k$EIGYG0Q[%U:P9Ft)MbCnKoP^.!_5HSfd22ge'
%2==BSJ7Qe2!lu(6;cL4>.ebMD!k6"6Q`>>9>*l:(_0Z%C@ORo<&U(l;7Al,0Cj$!:lqI`NnLQA5^-CEl\%LD\;g2rn*/-B(%3><=
%#JG/lDi6DiJC?Ha=Z<DG>L$=S4g"2p8D'(XT6)YEZi<)2G*e5kHjn3?A7V!h1jS`FUqk^\eRA%6gT"/l6K.+(if_NimS)_S%NZY2
%IW]N8,0aPl239YMP!k0SP@lC;LNt8YanT#`T69>-j1H61lD*h$lD,9#_Red_]Fhu'\%-2l-A&:6>3[SAZW(cfCA!Hb.fORS&D_f1
%9@bRuPDjXP0J`:G;pe]7]sk*cHB?]^n24?&[;G'uE=2+o<]B^`ho'!/NXh`(Z'6RS*?CR$,TT?'$.QXC>L\XHg,HigA!ZF_XF!c%
%ropceYR16P#4$*4Y2aJ7q^F\<#6HWlk?stGQ4/0Ek+H*X)W"iI])Wn`d7_6!KF4W=U#XF`rU53h#0TfEF1[q+gG`0-C6X>S-hhO@
%ra#>VmbTMtU6X7%N<@ZX>W(8)h8[&!95EIce(UAC09%OdqL%hA`ET_qJ-.`UF(=efjdH8"Pcep^?Q4KQ1\pGI;n>Q%1/"1&;i7VQ
%,qI/q)Bk8p"`ebF8eJTd1p-j<,NOB7@_8\jSL&?B`5pdr9?/LZ_;NA2``"BMY=E_JZH>p4F&sO&/RWfVj=*n("M8!cHX8HRs.aeO
%S1@r_X5o>solB36&FK6!G.jF?]G(hSdCW_*AWMKbSAX.1/[Z+B)&`O1C_\j7!<n[DO-PDT!1^"pT1Bl"(/3o)9cDkU*ZtpI@J5o,
%"/J4nifct;e%"79,!MDgfEfc4303&]Nq5fe@l]Ssi1P3\kP79%kqoE0=[%o4(g57\DAq>VI-4dQk7O<+GTLE8B<b:!;>kYTg_,%B
%0D"2Y(R??pKWH2BeE:gY7t)NVH1^9*E9HamI[_qlZP;12<1YCEQ3BcL;Ii((iinQ#=X$n7fTLj+<]m(.,"'05A]k^spM3u<9SR+`
%jSsVb9Daa[AZ=s]6O46d@<d#"@o16n_7+p/lTX%%^Kap+iuPU8J(u'sql]6C'A!sDc.n@&X9CjX/C*ag43h$'CN+,nSgSUI6[.rO
%(l_ap/5C(p[[l[:!9s7<SPN2*eW7D7!X5c['J!"b)JY$h@GRk/gRU9Ep24:o(M?[O)Yr9uoqfCUqK=e/IHUE<I_8r)qbIsM(r#.n
%g%4$[S5B'2C/0'sVLZT4Z`@m_-%juC=]K)Mhth6VgTBqR^>\pK(W43_'>1R;Y<hD76"?s$S(<Q,Hm@BiS)8,\I]#!1OZL8;j%!.2
%kH%1_mlA/Ip0Ct-[_&U)HsIr6^nS1SCDFf/FW(f<7#A[#W)C"#k`q'Wjc?q]25$p;a5^FL?2E['lEYG-Q'M*jA3G<!_j"GjD%esV
%3_<_.rT^99/Nm6&V_-sd_bF>b:(T:*+JZ(r_,HZjjZ(su,&(L7XKf,R9j>GkGO=(sh6EHr"LA\9'/Zu^e3/ACpHXc9$$&.N+CYBn
%<r1*e&++X$m!0]=28sQ('`)-T1UZCh&%G74AR@aKpAd<_j\C4G^e#>\P&gn*G#s+s[,8U[7B;<U!)[cDMfY<>Q7H7`DkAi@cZ7e_
%5FRIpAl/%!].T]VO_I2O3lB^Q6u=a:B4uXpMP'4o:KfZ'&_c)6fdpcacf+2L]M25O#*QX'/,TXp`8st&8S`,dJ?qYFOL8-B>_9'G
%#HcGqM3pUM(FpQ82%Nt:hCTE0hDb1\>_l)+T"4S"5*kfu`sPW^0Y64:YWV-]ToVhZdW_2*'3KZqIr!fjqU46IruM3`qgR<@kd"Ef
%@:LaQX`V`,O(TC"@d*7>cDR!Ob9Mi#C^o0_j3Q6MLB1J">(#/Z1pCp3]:#8#M^`g'D9N2EER3'$$L&G,Cts7,L(sAr^m)p!p6l^Z
%kAr>H@g+:,QnSeBL<fk]B7TOn!9Ij]pad)NA`C$i]M0aPFTKX7H2%7-/lfl-ZGl_(OKXMuUOU/dC&JISBHgn*jGY1,@4umgEsZKW
%?qU257cB.bW)9cR$#Hh)e,M^N+"e1Me+GogE_DUCT1^iul$^Y7+7eL)R<]lpH%0j.G"(i@F]gZ'W[/r<oIXBk9Y9e\]-U@Ii,8!D
%iVr#4T"V]5]A<J^PG`oM9\]LB1C!Oj"8e%.IE'&d@pko`Yg40=B+4,_#56`ZrJYrJQANpCnQ@2&@pko9"-]%SJ,ANm(U'IEI.Q^d
%[m0ogm&JCHH2Qm8hsknVJ+ppG2fES@^D&>Ms22<Aroqr`3:QmM46P'm&\hs+SU;1D&pH(<X![DC$e\hI#bG#.n[8AZO+4uqJ'`[I
%H/e7QJ(9&KJ+E@6/ZjMbDV4o"pQ,>ifmWIZ=8e^pK(N^K47?LKq9B(d^YUf.2uE:1-MK?8Dt4P@p\3:Ch]/7OIIlgUb9sLn]).2!
%:\+8W=0J4aIX:rCl_(FWh`Q8WlLid+-Vsanh>$XbSisjeqY.Hphu%<bGIZYIiW$p<s-Fi"/k>m2ht8#3;f`M/ASKh+06A;Tkd)JU
%K$mN2-9(nnM;DasNA8q`Y`ueA+^CjKX7]@==.k53AcP"Ymps:@/LZm,^0QR88qX`rU$4"$%/\jZ]lK6q8sRXULa^G'PrgWj>3&;\
%s)t*d.o\Fo>g-9GKsWr";Dc!SDCr>aGu0]p=KZ0aHYJ=<nekb;nl6.08P?Q++2mKAU(=DSP.,B"8p#aDM2&NtMu:/?X!j;$mRKDl
%>m3p*k-'A]-Ta07&9\L&5LoA_aBG_5.Y&B9Btl,tkB=7@%Q<1VMZ2A\/Dh%Z=h"ObcE?0N')QhN.Z$pSeTd?BqCkO.`K8II%po+:
%?"MD@B^dnBhLu]ZG%_UJK[]"W(\tJohRQaa6!cW*HiYm=d'&Yr2#1a/c]$?6NT>4MVBaN,F5;8@h<^tROu@[W'BD9$YGF^K:rXFZ
%kl;;<*A]G(9-5=Am)o(EfiKn/49>S=B.WV6ZAN<cZPaeCQ6[!Y*?49iV2Jo<Y86XPpl%Y+YdAY#4_MGKd*$,hZbp/2)<b[n\LB*B
%Q.t:H>f!PnQKZAcnObW_dq69m7V[L9Z:2b5/S23Aa6[<Ne;;8g1dQ2FGMIo#Y!h_>^9A.GG:EV0(<F*n-`thKJNZnA8`BhOMU?S;
%J_'-e5-e:O-HmDkZH5/FQKGK36Nu"8X;mWVrk.oM12S8A^W>uT'>Ng)I'sGtpYnqNT;NgK>p.lW@HDCKi?g<-jGOd1`&8NE-1>1^
%ALK@g)Y@6i1?CV>k-'0M__=Toj*b\UWO/^:>asdO.LZ)Qk!XsNaud#RJ'%meG\?`^>pXnD>qXU;H'(Ai>@s5G^S[0SgB'=Lap(bH
%I[LHA5^c1\$:(Rm.A`g#;nT%Cm:0i6%O96t9$@eS,+b#L>8$^ad#qjPC_7-0XH.G5$=]FE@,Op#:bb5<(=>Fn8[#JLSVR;7g5-H1
%3hf5Zb,[Per?Pj':C,HHdNZ+.qEfWGIFVQD9%'nb\.:3Wf.J$cVs6Mu&!;[2fKnMp6gFqj=f-YL(bOuG)/N0C@e5DaV8=jZV_PlB
%8<'!@e>=:jW#mM63BD#;9n&-==Z3:[h'H`mkQF&HH$PEVlC1L$0+%p%Bu*km<b70k7@HiCr(GWAT1*6Vj3(e%i0T:hnBr+=QI#hV
%"1D0+g%o:<Ggd>f42fp='/@F`oXd4:[HuQjX&.gh;mQ>D/qpDAWX`IV<:lhCW0N:1I[OFjb5m?c)Pm!ujU-9-&]#t?)`t]%#`E2:
%aq3T>U,Tl>KpF2=@D=ReQG>i098a2rU+oE?>A598-CZc@EqW7e>0n>K6s7@!9,"0I`Xo%Y#_.G>[f1;\Xq3^`i$-uG*te!=Bh?%l
%6a9%Q7D>ru[="%fe+/GK$3bV^=<f;%,I8)Zl](tILIZ"L2S36!]*;LYn`%t!dbA4ob;1p)5oK?nrDJbu\RUb7PfcLP@4X44?lTf^
%bkBBbPqG\UY*:)1dgC'Q%f["_'5XXMFO6ac=^"4\qoll370+g(PE#^VLt+,M%lk&nc]\Z6WhQ=M3:\C6,#!?E/M`h?%K,cCag8)3
%6t.iB?F5,GQFOF<+qdHcAD(-SM2dOZaY%bE@u`Qr8ULXo%FQm=Os?kU0Oh[CKV]0l$i:5;e&+ALo($In#e#$+0J24pj=TFq9j4d4
%G(To\/7XVPjlJ:1PDHP-/5$@M@+MKELGcO8Aa.&W@[aMS+.=#9drsqKH!'4R`&N>]?LY2;Vu![.MSA^?H$eGK.jV5.QY"9i[^MH=
%\H8mi1s=W8mr_prOtJ=pBoZu$)KsPlML9t(Vhj"16'8QR<Yt9>V#rK-!AbDHKj^ggW>q::8481ZO>ju=LtFUl.69qF?#GFE,oF_W
%iN@oTC$",?VsC_.Lb=f+MNm']4_u7e0pYh9.q*/;Mbe.q*98*Z5_*,jT-me_p.*KK'=3L%IcuMYL67%!S\VHLIF]1$i@oRe=nG>^
%Dmtkj4MIA%,29DZg6J%CZDqMaerTdJ;FNOefLsh8'Ijg2I/bDNP*2a!QV'Q%=$'YO9U>1<_"T%tZBQ&,h+bP*H%la<bT4.QRda9i
%p<o3lbA'1"(ud<@CA4!inN2-B>tF&(*d&;2!*Sf28"F"#Lt+FfY@0_8,-np^ZU&0E7P),kW'.eHkV;0Y@[LjRdq\6-;AYmbnWn`@
%U9>aV;:/r5['H-X3@+1WfKb'd%;@@tWNfGM2bkl*UP_fTO[EgpND_c,`$D<f=2QJMjZ'9=5Za_W@P*;HlKc;oP"/%NmIg"rWiIXr
%>q@LoLGHe_c=Ej8i)dUQ$_lr`iUFeD,un)[WTI*qoFaql"Yn-0ATErER\J-i]UTqs*U0rNQC@C0-'d?@T[KSP?s_ne>=><n`<9CK
%_W&2N,@f^LD(\Rq?%gma>DWDSdaRu88NIq]n(M?W[:nN/W+"iX2!:?V4-9RU1c;2'?+oQj1>>':4;U`^9<Mrl8;!:)BIGQu,?KXM
%6En%D`J;ZL[1,R9WC=';7p3ELLSG`5%c=RfCa[)oPGcT]AM*Na&fdW(k!QIhS]L9\H(rB6RKpB&D$^]1=+k5R>aP&@GA-Vs\Tks*
%UB4ADcEUgQ$Y&q]/qie`5s:29`uJtDn2/iXY^PtdrOhWln&$f-qK)#Y.Z]TSg\q);DdGYTq<dUJqu-3:Va%ihrMqkQE:Q#.Yp`cV
%+`9,uV"8,&9F<I=Lp\0i6:Fuhk<Car0YV!Y6@$_`,Zf,&DSsa5:J)Tc'o`@8"s^lJ(1eTrblJ6OV]D%4f4ratW,pqV;#OCqF0IT6
%@YfluW(Y*9%!2t7m"hQF=c!>`^VYm4c`*mu'eJFSBZp*25CJmtQ[ee+GM@X?>cDdEhGpI)BX3^HDe6O]Xh,F1KL)Qb6g@dihg!Q#
%rfd`J?m3<P5qc=&Nio8-a0f@;8C79_0pUk'3_gB/#r<9NB[A"4Q^S2i'uXD=!bNO=a&$Oq_n^60?SZjq)T2Z2'iEnb64&!Xf-]2d
%%MZ@,m_l[@h'"+g>S];;E"h']TPLN#YJ?JDkK*jim`Knlkr,kfPJ)]Q79t#nB,%FgGSc\Zc!sPo#!cStLcAQ<6MTL]Z5Hu5(_I3>
%D0e":^^;?;Qf=up+,Ka"]NTUWH<%\gn\aE$kXDmJc!:4shG>T7?="j\1U&Iq]94n\ADjaQUT,$Ua\.4``04\CYNP6mT./?Sl74T.
%nH`6DTr]r?X:n]i@<jm;oa8-]p>.Kk+1pf?+ACX%pjaNUQfH%&CG9"$,LEagE'RVKC,`(JM=i@3%bJ8mKS6U"G9uK@(QhI,&TNqq
%>qHo@)hH67MZm9H3WLa@"@]a!BgG*9UXPpi_,oeS-ub6B/FWrSH>!mt9%JGG!YAr%V5lg&`K\3>GuFZ>?VAFMRWK"IOEPo6jbHrB
%CMN#4@2.`^WEiQdAH>MOAECYo'AYYa'ANlDp0ui%TWgeA9N$.NJR^5(j,\W=$(0>=Rq9;L4->h("fUcB1M)](1ZG)26<A:`_h.[>
%dO`)(n/WQ&OI.1tls3aIjn1<jd#r(9+^p]aW#[ufoW!i`/Zo)C"tc2TdC4RKJ>Xhj"rBu)$?9mBi[SF`*?^Q&1R%)(2MpVXG6;C[
%TH2ErYSuj2G.X\tXrGsX@SV_"b#\&&d)V,<Jdk,-AT9)\K9dj:g$L@nNO"Xk%h1t;=[pHL9p&F/LLnq46$PU:B/GMRo,2l*N0ks7
%5\@FJ65W5r[+5GfL+oWPPC?\)Sn>8)[&JW&lZTnK-@7C`Zqc]=n_H"'-rJ2Dr.Q4q>R)Wd8lp+Yd:WIRd6LBd/Im(l>3`Cm[\Sun
%M%[^(bS-"0O"n]U'ptCu$B!:T$=7;L0(r.=[TJ"+K"_kg@4!&n8Pf0%lI#]Q-r(nd12Gr\V6cmE.sb3/U#@=S(>`l&^_8'F9,gT\
%7-P8\>UD8B<d9\r"L5pWe3uM4kf);6(#9r=6U4U*Vj[_eV_-nlH<Ai0eh\o^(li%)@0$)PDt4JoNo>mc(r+nq&pMHf-W-#km5h2o
%<\UPh$*.eLSNu3%3j(u[[)UilF!Sa.4bnG$cr(E(U.8A6]CJjX3cT1\lE4cOP(KIn#o:Vg-h4[%Bi.qu^c>`C!Hu:eKVUk1nciog
%U!DU/"fq,Im^:P\DjS+^*`2#'hhr9.+2Ho)e]PY?!dHJqeS)E"]o@`$].'@(q?MIki[Q28=CI-.LS@5-<1@Ws,j"bgDua[qjGe89
%?nNZVP/HMVAql4'dPS^-DA>-rjZ#n_Tck4)j8e>CTc+5\4^hW!)50!#q([[B%3mp!!:(<;lHLc#UB9a@I"6la9;eW7`\h`NY7F`F
%jW`NdoR2<+SRIRG)[#KZQ:*5jC^-C)g):sU&b/0cDS;C\#^O[.%n5i:Qu[6GTm/X%P%7n1`jb8@+B'K*e?Mf'(XlT[N\80?dUn0>
%d$]h!<l>G72_tF`'%b.h<Qkb`Tk\ZQhCb)u)&U=eZ"A\u(WpPloWKemYD?pK\f`(_<M&C[20GH7OD9,*hu10G%!_RX"<_-I^lINn
%S`hm1QAn=UVHjP\&P+HLIsAU4+=sWQXPY]g`*AW&J>jg?&S9ao+)>"J5Rc%6/mXGm9bB9%4HN8?.+./I?7')oeX."L&[YN]"`_":
%&69C$%#Z*'>o&,XD,tueqsZ5#+1=R+//X(-fL;WXWBK*Be72tr6OCOf.QVfZ$@!h<:d8q_`A9UY$huEC)6c<X6BrrKhne+2V6'h,
%R"A'a#6po25tOj?(`,H2#m8i@F;@Q7ch)b2&CF:6:^".-b$<D+:_cm'?97`?7ARG,#Z&qe<thjg4JS7;l9ep6i;FB[TaGtg_0OZ?
%)<!)X!FPpq<]C.cBcn*lI"9fK)j>3&Za*8C;>O,!=N2O/0J[Fk+@a\e%baFMNl\IU,0(Zh?jn`UH!O2-f.R+N3\ZE0?plWb!]`m#
%`#S(Gn4)e%^`4)H?<f#k(Q=nQG>26j_AS;o8%TH>gAiT:=Vf[,e9$N;X3J3u&&EB"%U_#c!rt[Wc"L4Jgoj]]C86Cn/Y3:"Z8B;3
%JTY-1KQN&a6Ff>?b:j'q6(C6G:mRbF[e-td;`CKqBqj[M8g">AS:qfh4JkE@+rH*?8m#!Qbsg4CC:l2;/fpb#oIRr;'VgS;D3,G$
%<ldANi:m)F0PVHnO]N<ta@'*E9Ep*6mP!*#q:b,MJ.[H.e/-#&N;IZ[8P93E3T-Dq:TGVg@f_0`0T(E5C9BkC"MdfhLqp)Ro\ON=
%.>90C<CkN&XGE!**].Xh.Ldc[H3:c46'"BC6D)&/f*E8S#Dc]Y!s%f,4$3SGY.[&Q"M[G/jY.&sj^3-$>)^$X9d&;aLf-Qe'f1-B
%Lft?cXf[rD%*:Z8KJ`lQa;/0!ZEB'a'Y>&f%%;c2i31IW4"MSq?nU?3d^:,JG[[ZSgIj7lOir3'#$Wd@`d?M:ekb2*DhF09i,2a9
%.4uf(R7TunUAKa(U357'b]X[VRO'NGX:nN+.3W6^O@=d-X*!Q`DV@KlD;[knjpBPJk2*oQ&_U*@<_Od,(u7$R^_rjWZ:]0MLAU&q
%]1,nq1'S%@J\R'(PU)k5``&hcf*2U>_P4%=))I?Uj0_9K2JF>3UR)2IlD[N06/7jGLacAR`*gLpZ]u4J6>FFBd5ChXi\(c22]-:O
%Fc5C/N,546l_8$<"iENKd;5k9(p-*]'0@SL0P,Id?&9FA:F!_!K3]H:1Sp0A8_]aNg1KkHdSC8+96^tA\eSg41Vt9q!LC8Q0FBJj
%_,\se!u>*_8WjCVk@r3QD1>K>302'=>/f-Y%hc'sE?4\OBO9q9`p$m9_N,O_#jaVKNR5mCeUd+LBfjC^bm!RVm_dG[Eskeg31'\d
%C"FL2L6ub0e0%NqK=7Yd^eZN<1/9SKGnH,W[4j5X=R6X<CG:7#dBmM6&aOu@?OWku$Nk<P>9a#IAB.YTD8a0PRU5?;$Hl,p*1.);
%6iss8/S[JeVi:k*GR-_ih#ZM6\Kj/i3n$'(ag-g1]RJD5\:no0=TD>e0-e9W-n_f$U't^%^XBdu]X0:<$(o>X(/\*D!=!6T`08Ro
%,[g/;Ago&:@Dcgl(oC.S`b]pEY`3Y'>)(MN*$Y/%nBb^a#`gMn>2empL9(I5;KHAHmXZ-10//KM-mLWgjGAmU_o0p/4f/X"VOYSb
%4S,6fn)>M%g%"1B4:I\DLo_B)Ip1bi8;g13n\4LWMC,&Ch3fsrf87"f=J);]H8=5:ML&FXa3!D&JM_$TaK@=K67-70egYD@F<,D"
%i/C,n9Jto7)K5/QM+o.Mk#_YpKE/"'B'<^*>oJX?:t+J*1nu4UUdiGS%dJifM\CZh^n6,baRg:gmm?+3W!P0eh@8NQ6%<_5Lh<Au
%pk$kE7b'W67sq>g]F7Z*[B!W@;BmEbQK?_7aVKs/_>748=42]+V%+dd%J@T`+i4AGH:^PXHf@qH.&eVNK3%+D7Tj=:JJ5s+)5&PM
%adP8ITnBuH3]6X\A(/)d%P*WPVk("#"Ff9J\2L!;A.D]'i+,R,M+enfC'ojt'D[4^9c8V(38@>X6jD!HK.t1[^kZ\"+(,4')us-c
%/'PH-4mbuRNV3\ZTlNoOLuUR\/pAY0"cE^OIR,@`s&S>._3W3'H:6q#Z=*1NY"*4r3[]RhWE"J(e-EsE%0mq+LnULc_dTpW!Xaj@
%2QW74>sR86=bk4#f3oqN70t'`BR;'e:9"b,;r\-jce/>4O_HjDOh*ph&h-aRFg1XkR4Z?,T[7DgimJSALZWg%+p3A@oM]4RY[GhP
%&1:K`9b,%ofcuGX9,<8COl)+BAO:E&oT;JWou7b3d;%'EncNri#as5E/Ku..+@K-XC64i1er:*@"&@a"TqY':&JfJ9=j4e)5U&n>
%9.+#!E*d!7"?\+<@)=qSdiOE6CLcW'$Edk5JCVcr1'MC>4;tj_h,gt&[2gb^PJ#6^"2:F:a`<i6"/1IKOU6BOdr$[\-T3W"+]9R@
%X>I_<\UfQX5r<1Ngop"fU3cFK]NH50'hZR=&NZPjV&=d5+5pr'6[9I2+?Ym#*W+H$I43@"*&J'_/4,IA"k%Kb0_?(eo:r7Id6_4I
%/SuaJMjdVS)lP$gZ@G3jS395CWmLeRp"7ke[K>6[W3f(OJ.-0Z5a@`e=i'Z^r(Wsj+t(@=@4!1p,AGS!U1a`+90j7%PG7,'9N<F3
%8gVsV<ms"T+n_:f"WQ,H=\i!Q)J^U;>K5OYM]N)d7DK'%:08NeTN*IV,V/u^qQ[fk_GgkF'H""s&kLadb66lgdAk8'jW%YlYXJ_E
%!,+^ccr,D&!#m2(%CB!]3uRDZ?!/<rcRpV2^X33U^0<."L7(;6FTbIgKoluL",+@c\K<""Pp>Z3.S-^1>tBLrBSL"RjbHYe`<Pi6
%6UMKMDm:!3js4H&7"HpM.("jUM1h\9"[4Kg"?-n6$;Vb@+[aVD,D^7Q9=&/c"'Y'Z#TKT=oo.<F?#?7p+U;=0c*0Kg4;-L+*GLCN
%a-;u.N!5f7RtrIV??8Gq=Fn,aYI^+ea<Y;H0'G1"+Q4sdqhf^![NP"BFS(^]*S(MW>KWneb:JrFL0<Yc^W?K(:I[#VapBYg5T#Rl
%!b7qr#p&s12PD(`*ath#[tuK*-G];MAK]h`!pD'-W!+2b.4g$=D+^ApGcIA![*BotHfg!soZ]OBO7,u9#:^5bpk40&<^RWOq[#`D
%=#5$E+%o.RUMU87+I[JOTQ&JX+)r%].]J:?+g@#L"+$4d>N2Bp%-Ngt4eg&tgXte.7W"0>.MGYc!9u6O"+<R&Vd@cB$leW];/l^t
%cl;TsR&MG@-QH3`m\-=?&<Im!eo-`E!fJ1+cjUF+M3nePH>/K9F1;0TLdspq0/:4#O9FsITe</85R:`h^=:IDbBlP!>l-9j3d!nL
%!0j7=4>"T.[h*a5KTr1D(L8'3e43+\%3l*F=`%)<<'9Q6QhEJg^MEPMZsoeGQFIQ8+kFa9of<(C/@:j!(+eDXX.Y<`jndj4dSJc"
%DhF09i,32\8;hR)_'<rGR>b*-Q4r7ME3KmMZiW1+W&hu.pm9[\,aa<)@o^u$)eoZ'9/FX6OVi(CBN0on:1X#5%!4+7a>:qL`(lH@
%%Zf%J!C[-N@94f&![[T"FZ3T1&RX^aDn^;Ce96li"CZ5M0Q=rnPLacNG?1(mRYh<pa/)`ALo*WPO<,uUV%?@da7lr84G1'GZCN,4
%GQnm"U9"cJTOmX!0iNRd$.O(<k4JbehD:uOW@a#DR?Ye-1a-@%Sh`69EG963W'hdW5[+M=Qt?gflgeFPP]l;cckQ(XH=B<sempl\
%=;4qL*dW9M)WoF<qF$rTR/M7k![[1q,l<&@?]VU4BEgI+?cGP:J<ngRNQ;W'YY%i<]TI"6pVWb@0D569%Zoh*oqFdK"U1\o!(/,K
%K+BH"%0Y@PV#gmm/L/r+RD93e,nOo$b]:PflY+'DEQg3[cX`]f&n\0'pjA?_^-`:p.(3M,5RRpafttBJ]/4;^ejg*uTLH4MUc98D
%J=Buj%ZeQc\r<Q0gE@[fVR5'0!(PJX7j0Ek(X&5g(/p!+LN5b?NfU7R\-3e<T7D[(%L\\$R_ON<K/\FIWLU?s.>l^@E""5fApRJf
%ZDm'n+lj&=!"gF+k'7<S!<;!YH>SA&*WakJ;dSh4bk,"fIW/.IN4_8,J-@"sf.^>Gm:$'jc<,l.r69ps,/q.6;p\2He2&MPR:.Bt
%^Ltr71QbSF+c\-J=gKUdd;H<,L:s=tUcr"SU%NY.'FPd)lL@=O.P_`p)1$*b%qX6k[@W-U0;U!YOk"SFq9#r=nI3,>idD!M-<o%M
%ltGcu2CB?0&\7U#L%,T6`hA+Nl98F?UL!.f2^\r,/O\Ae)kp@\i%;m6Cs9(slgUTe-,TIIr=lP&nH"U)0]OL)mA*?-R@m+<\OpP\
%?CNgU4dj.f^qtJuBZ:B_fY)SW/)ISo(D/REU]Co*'80KeCdeRWh18fH#X%8_r3WOQZA+4hDSWB:E\mrr\;Km)WtiZ"pT!1`lCoSP
%nn+WmOWd/lGi[0Qi^AMFK5seD8>JNO%s`/RVW3)-30!jHOff4=%_<X>9Pif)-Va`!RYh:6Sk58BlcUN?jg6#-##h;8GbM):Da@a!
%?l%"D_/SYG'V@Xg0#j1)KbQWDs)=QapP`-b]Tm/UA8i:B"#4ALOBZO),(c+ag/-U3Z_;bVB"1nG%'\0hVDWH[Fp5N$_`Ro$MN$As
%`5bFW^(q(\>RpZn9rhTVR[4b^L+lN,E'kE<Jr]So@Ll0S(/#4I$S?c3btCftM@WOP%ua>M#dMOefTMAkAX>`JdFrBf!J+in6l)R\
%jKpObquS^-Zr'nBLW!.;*iK7)Cp>CCd$q!HeFs</NAk/81KGp:$ZdA<lmG+Ij!utR1bmRtcYjl2)>:tb;t(PISKh8q6%E8L)R<qE
%*t=Kl5X6A&M+7qhrWehX:u'?.j>nDrOTi:H+=7aI(.H4FX2R\$"$9C$#fAGLm+$I"#OjU,cY8`LO;9Ie8dagUThY+b5Q^+($>-B_
%XeqIkc8C=FBi6g]V)C$]&/_0O=Bb06Pg1SrI]]'9`\]L$^]a^Ue4GJn1Y^S7$D\/>R0h(<WcTsgQ3@r<"YGZZJdb=gSFa,Jjn/>e
%O"d7PONLl7BT'qKcRCmbY,/^98jJ%3gR'U[eU8&>V2dLS@EDX>q"XBY9@j;<CMM83A8T-S"o4&\'q-V(3c'E-bu=m\jO(Yp=tR&a
%`&0&Sb\4a];C@[[$*QTC2-X'*C\4h:b,(UL.q20U?QkN""10>s?.K1Z=BH>BQ9gWj]n`X!ZM+CM+U"Mi0+%qS_E<2LU4rX[R%]@-
%*@4#q!AkAJiC^Z+b2sC+7fG.L"VC-uQ&'?EL8fkgUZr:FX,hf31<.HmGn+#W'htUC)T1nubH`Tu5)MX=`Xjt>lt]R2JegW2XSL<:
%6gW5.-qMs,40b/aLGE0YH?_4M$Tr2TLHX1>L6U(Z^Df=$J-hXL$g\2c\to6<1hE&PP\n7SD_sB[$Q/G$!Tu(Fh*r,*%2>*00kq*8
%_c19HJ`e+:m*@-d:\TR*iG'kdoPClM3o4Q?Bbd29oH54C$RZU\NC<*F=;>4TC0@>umGd@(MAUZ:qoDBDNBSIJ)Z[+?*6K*6N*%pB
%LCrul1lDqh%FCSHShWfU?@_>A@fRSXZ2hPg)Il7jOXGV%,\(bHaEc0jLQQ,[:oQb,HHi:#!?&;L=b/#p7Eo"0GgU`9g*BXW6rF.g
%d,=,W266+1\iD5ZdDD5-%:O&^kVluARM!hui2/e0ZtObCkQ'3/*2]cL`CEt1";*?&YV[V-f(C%Oi*E!H5u^UTl2=PH:gQnp*PI8K
%I*qgj*HFhr`.=U4#Xi1J0:I`N#Y*6F+i`DY[!U]Gpjl"0Q^<m>YtcS;_3<,)]+K5o,;p$bTrQcR042WMY_HiKUS$LA\#=ENN9q/E
%?;pJ6_S`2UVg<Jr`'\^[]3kF!48!G]e,/%ihO@eYC&6BS?iU-!]A"]ODSQ!NY-;,954LR-T"Y'unERX#If8Q(8al;pf<9Yumel<d
%pX>c%rqJ_Jf*g)'mob@"RWU*K=Ob6<Tril0@q+j3bM=\u(1ZB!3<DfAm%mI7!EnqJN&$n(L9q4-k%`S+-K\Tq:lNanBc:jJN.jSN
%-o=:?V:0_p#BL),R`N%4QPu+3BGmWg89\Pn8YJW(\.$"sqtH.t'$;]T;k/T`&O&\;/E5L<-QJ1Zr=Zksg_?[jXXsM(<'\I-8>_%?
%ph7`IMR'\5GJahVhQ,L(Zpn7V?>e))i5&jD^0]Du$V@pfe%@gS-B/cu&RW9^.B.!ZTjLm/Um.uY?#:q;_fPp8oTf,'gelH"GUSLT
%F>22)=jIl5c,N^PT%6Ht#106+1Hqh.#lR>R#IuKuH!h_hc@TbM-uar5#5'F?S!iM-mi!dHPS>YSW8[kJ(WZ/"_OS-")"UL<N&)S8
%'XTY@(jW6t#@sdT23qaW+g`q,:C\*nTqFha>LKfH7gKe1J78Ea@?s`3fgcD`o`95I"uhZulT91lYY,'R+;o_L$6<8H3l]CIedDt$
%`Y<&WA!,V[;D\[$>0O[T9uMVnAFZ=)6@0^fl4rP@0`$nWM\\(<(qQAgNZ*3*\Q%eH@],@%V-:Sn_61e@&[NVP.oNTtIFo5&\q+!=
%$B,<(`d9jIH5<X]XL6Y6"-B7dJ@#^(5e4%!K[>f+WO(4NgG_iId7\Pf@LZ.T@JqP.!uMn!>0]T4I.CZbU:YCorCbJ:%L/U,AQZES
%/]?.V8*glI0]r!f26sXZ""dXDLbpeS(C:MLf?(?MO]<(/Wf,$Y+k7D<Ogo42Jf7hhG&2&"9>EqS^)]5%MWGYJr_Tr8H])3fnlY,;
%ogFJB.'pQ(.eD5W5\^nC'##5>'[3`@]rDYaH+l`3q2AIe]^/:<aCm<+&jD7Tf.:(`EI'Jo.N]Vi<4ioo*dB]EN>UE*6V,9rF`HY'
%[j8IS>&V=T0XPBCob^#A?NI*tLRb-KQL:FOE7ARB5:@][r["];5Tq3.&)^G#EJTkX4JLRQK9E(QBa$?WU5INSiX%1!$;<S/[p<c/
%_*94M:""8Ii"U#W>,k;P(G2)[>q@5N/qp%CWn5pF/SZDnH(1`Q:r-s>fa+5]LlQeCTtk=c)]<9$>bahn4K$K2NHE^F2)J7n-nRqc
%Fu*)'USWNT!\HekFLYG2'31H4e>nf'b<mPJ2$XZpp9>SQNVYE@/<BkS\GS<G17D;&Dq?i"el`1Z1*7;(*@b[k]kEOjdcqi)C'X`T
%FZXU)D+[[G_C'KSa@D$="cb-ef[8VDeFeT/U0ZuiKG;gNke"VU@1_+',pQ=%%0H)p1RX_2/<8p>lGsW)[@e05AT>,A>u`j8OXi)Q
%+]5T(;7VU>Ob*X8#uP;P["='pC&,iGL&jq.6mkW7o.tS2Eqr!:ck`b:,.f&Y/'u8#`>([S?'(MHj/Ad[RX#*&'ks6!7OTY$a7FSN
%oW.)kl",5m;&Y.&Fh@1tJ/c;5UL,BIWAcp[SUd-H<aoB$RD4i='*g</E%]LbBd0jSk.i'hoO=1>JbdY:]NCt=)&.%g$;W`9M%E<*
%6,L`3aqW>`fTWu3Il&iIVJfHC"4("o(g(&r6^tA6dQ"!Fac9rWDK'bAJVqaT#UCNi!r$Z4Z^MRNF^jDE5#1Jt?,2=t&-8oE4Ft2*
%3+adXeI^/]"T_:#TXK=+Z7%%"/VAn;#$SXW8`>(T,8<D6E=We9QN=(3%#3_N5[+GmXI-B)dH2q3M#bL6ZQ0uM7?BCp33E@e5V.O9
%/@+%NTihN0^s'e0)&oO55[jj/WA'UUiff]4.P^0K$V_CEm\:u1FZ1Dc;$4:(EEZ!%8Im:C].D,&M<.=[<uJY/;p3#!Ls.kem4/qU
%^)k]2;3t_78Q,;k!9F?3(Qo(4E,X5_J`TJS+d0]O\T_QA*Q->fE<!_@"tE2l+8Nd1?c?i<"WgQD=:D#B&m#UUT/0b3o(AJE[,\!N
%3g]Gu(/#Of\nGee6bXQp)&2=3P,f3pR@Os*@K_B_,T(4Z]r^l6)SKQ7G%MM;[o/rskp#+cRtaaR#9f?4YmRfHMl'B@QBF8f7AR#:
%.O6'j5Uso^!qT^pgEX*H!E\jk_Y+6XE+Sc'fE76U'G:!]Sn)Eg)Q.QA!(&B$M=`^]'tQ+U1/F&6UfZ/V%jIK.ZnmY1VmI0[n:G_=
%$YhOY$3e;2PD^fnjP(tT?j"-ZZsS?oaNujBgM*[91$+H#RJUPc?H&ic,,\/?.XAA^(6-?88p1E;1bA!tG\C]#UH`>*Y'We%BTOkl
%`=N\=iKsX,O.%IhAeB:'i%"+_"2L.W-@=8VACJ^Qbu:USj-dXi(&?eQ3/5.TG/93V[!pE)@L'-NGg0eG;N@95d6R8)5;'9F?p`%J
%!+n2/&3juM85R.Kb6"`0a>KjHna8uL.N)^D(LSgfDrHVoEcr`u"bJlYJ-MfJN)r"=^e`jQJ(':bO&'>=2I%5c%#^;9.G<-Ye8+R<
%1Tb3-]jRqY)[A)c@)7NF=r+D;R[QWb$dD8D"/T"%S.V+l)T5t,4/R^d?>JuFgt.,n4s2qRTp9HTD4'`4"@0\9i[DL'E?UNlR'I!8
%5dm>q(IkN/TGGW,'<p2SC)'8ffVC=h>HEJZNtC'JZ"6Y.nap&E7td[XJ,2iuWJo13:k-^dB3sXm5m'?t(pB-dlTj"`Wb/TJAQUFO
%dDV?r\UnEo*3iVSqlXCe(b%"f&IcmiRQ+DhKO*j\`ZTaMF7//O6@eZf^0FQCFSI^c"&QfXae4l0m./hSM#\05-Ef'CBELBH&tHG0
%/B2@2dZ5^m(,Lj,VmB>)9$TMPUR2X-l12amJ<mHO^fWd)SL'ca+a?H_i)Yp?=rSHXJO,;++$neYHHU$:\t6C(@L=^'/K0\s&iS1H
%pUk$'c\XK'78"4MX+gdn9sZX#ZeCXeN!*8CW?c+fc'"i*>WQ::0H8nr*,u40._06@-A-4t10(4^>0%YYjGA>eo\RBWAG)ICUf(j'
%>s_=N@+&+bku#J`;!IA2?Kqj'UHfY);Ck9Ue:hRJf`R'^OKXF-3$gdY?_j^dJcmE^M!>3i+duOV%eq3_9k%F;omOD,F"cig81r1C
%0TTW7QHU?C]X2AE)C82;T9GS@8M4["0PL.d(m;NiMrPRe-Db0OmDNqFj"#j^E>=h/1A-`0Mb$Ktf#!:o6qD&'V*hVt*ZS$HLWEJ!
%Zq(5D:m;ThM57pTb;t?()B1\q;=9>*)#HY+l^P>E=oaETFo&D^i%6GhZ<+r("LWb0)M-8BFEW[*nP>mIWCCPRXm"j,@]SSk6lJ@d
%)3s[.0>3*tbp5"d'-8C!E'fPGNr=hNAnJVLn7B;?BPeBT("1E:p<YO*JI&RXJ*_\/R@qsOH<d>SZ8)nt*CAol'j2>UrG4p<X%S+a
%K(^s'8H/[CPI5C$R0t&s]n4OO?m`tD`8i<88X0RO+tMsh]c2\@K<jtTi_ejY.00q31fY'ki1RN]@)/IfYpXd"L&h@UXf;mc?+O_C
%$cWmNn6^<rMO4L#9.))rNlp`j<?d6.G5C4X`rb4!5EPD2;*(mW)NeIh8tj4T$W_%Gg<e_Z[@Gf,e`rA<8d$?D&B]Q9cP3nNr+a1b
%1BrL&:UA\'CFDYQ<FrD+(-XG0#Ik2L18m;Si>`PP1$o.Q20Cs_Ud+gbS*Ip`n,ue;dT3Q=5)T^q>-QU)><pbR=*h"8<`32(&dZgf
%G`pRuS^F'WE;0\q-h'NDq.>$`HBhM6!qcqVhJ(,uTqtmP>Y,X3aWaQY/EEj8TC?>T;%mE*B)"P&=d"nnPMhI57&LksUF$;.VQYbi
%Wt;fq\'?<(&qHpk-k*\4XX#S^gM7rnS)NVK%juEY>)7.o%Y*H*.odMsE,nQaSR%pr:WSh*H[H,&PrKgXe`sDZ,nVfO88<AbbbuMh
%lWAH,<<p!CFK,qkos0Wd\MDrGB"Z$)"4IA&",s`WLJ&<#f`C4^(.bkRY:^DF,@jG7R1NP"l+pss:o&a9X<n1u@`P_3?BMW,-82\t
%a#O>?/G_#!a&2841@%!]XQEj8_(+afa',ZWU,>!"m$>Qt:ot#sY6GpaK>kMYW%qT?Qh&)pP/?,uqlHHC3@-D:Yu;uRQr-S;d(52:
%o34rOB$?Q6<ea;g5p+j[@/Pm[ZUI;c(,`F'ZfMqs$&Mk+2g`ZA8"roDi[ZL3!e:`DMT@)uPmWl+?6tq?)d=4?DX=-e3Q"ni,_:K.
%<'U[EJs0^KV\[HZ8d#^E2eUZW9^*f9;UGYaSX]\X!Z*4$Z5dX,c8*HT[9M7b,WtF^Wm#I5o,B]J#[IYjQ[h>f@k-cd]S`O*OpGhC
%PCOSh"H>S.()\[p=]DEcOk>pCj37dFS@FZkKmA/F,8A:XMWDsGn!Q%t0JJ&j+u4ra+C#=BU9u\l$<8U+C"3bcC451oMq/5NDl.2Y
%g1)(^?<>;o`<9/)'HU"BN6%6$ICC%X)[oEg(AgkFNsta#(/e<tj'hB/g"6i\1(9*[926m7a/6gjrt9PF5fg)ViGi%FiP6oE$"Z^8
%^eDLFod0=(5tZ6<[#D"???`!9^s*9Yd#:S<TZ!5BUj>tN\/jKqNLe%cY;M!H!$]99$"m0aOocPN9^6a,</e)KkQf7C<"2V2euS57
%RW*]>*P)nU\"r3]*3Q5U"I[K%0`d9sBN[,t\jFP-\C#3uKI`"o0t%O>QRmVB.2d>7\,F*i75;F_<nbjO*7Qn+1E,#Z!t>+P17Fj=
%26;au/k5A"fCqteAU9#]biI;rgs!]N[j]]o0bW7R5h0^W@.:t;V=1H@V((C2Vj:^DR0_8DF;N3[Ug]aV3cQ-_[I_)#;ls(pj5<C,
%_o^La./$pp#&_m%j=j&P_>/k8:2'J?95$XOP=fH).NYp5Pgi:DiF8e71/`,iQfZgTV`9U!!E=26nRC:nK2J.9f94Db`;t7IN2%&D
%K;j]3hfV-Q<fJ,56RRo%\LqT-#tG/,A_Hn'-B<raboErg&f'K5Eeu#d:M7mF-'%@'&pHD#<8u*D+hjJ/LF_^.<pjp3/I#'V\\gRI
%4Ej785$k*BLZ<N8AVlL.*%;,#oA(%7j5Yu^Fl%(V?m'p/V%%?^8kU,)i@q]Lo.+N7LP4/J)q&[bB`\3$k6qSr_,@WLAU(ZUNQrB4
%RO'#!_Jo@3TVgQ7Kd43LZ+M;NpQu91!/Rn6F'GI$ccEt[Fg:M`\AFXiMhLe!(!bUgkg$-D$*KC5f9jFkC"d$#M8EDX*m\N:$TIWs
%.oA:sO%;[E,mnkO)@)!a-OL)i+d5M';)eiX(bOVXKnI-kHn([7*/]see/OiqGcSrl_mpb-G<64'-OIg'I8oJf76%T,OE*#l_F4g9
%Q0_*Sc<*,Tcj`3!]FPWrGC&`o/5=jN_+DV9dMY&i.iJd;jPZ\u"DU'/_9kImB\uX=UQ6Tk"?J=u\@.@cARYiKeQ)`D5FB9t24Ui`
%2)m"g*-SaB;M0%/3!?/b2)rXo0`g+/_5ETe)I/b[Vt;Ua"K(j17f(@=j]Lh+F+Y_%K(Pu$1fDC`[uuBI/K8kPD.ZeCd=_$saIX:A
%i$@N<(VZ^N7l,@+)>rD<8jM7Mi!1Wn(\W"(nq.U6#1>X/_+CZ7OQCiO#M38HXF?-+i*7ZqH92DL8ZLlCeiaUudu7P%?O=T[`u=8>
%4$bh7@j^GWpqb&g9^:rh%o-R^mO-?f_U5)^s(htX!PBn-\ab<YJ\u-mi7sf]<Qc>-E'V#[H^p3oR!h/[c$SRXB-Na)iPlDRCsE3?
%DW_6pi.pm5jTfu\P]LR##=f04bm$Bll$eUGI&.(g@RY%75nAuu9'P+io\bCC:h;QK_$L,tbMVO"M:iUo;d\e*Yp=jmDQnaTDTi0A
%f_N>aifQ!4b7BWp7Yd`0K0(j)"#]?@i+UNlp^KHtj'H$EYPd;a*3kf?b7BUm&`L%@%o*JR7TWUc_)4)nM.cbET%(;.%=W7lC;kEe
%%o*`\DN<;;Z-"eE3p=Dbc7L;)hU$n-YTT(>YLA,.RD_K(XtAM$nUkU5iHO;e?Z4Nk_=ac1T4`UlI6IG:`Xfe46>$DP:RrDqY!"P/
%UP7K4#\Wefls_M)K-$N`5t<8,UB`/b-Ui>K&+4INMX'il?:c<r8e2DjPr2?AH>pZ7$A<VLE+!Z(Ja2mc32^dad1&7KB/*]b.m5kR
%?.(V>H>rGr.Ui*G&!!W)K]>N4:&n\,a:6B5(Gp-mN#s%2-'>sY%uqEoGCptWBn2o;%kBk()<@f[6'<=[Ur27Ug$jXCi?NPEk6KV)
%>#p+Ap!O:631VngqK@=,&l.[dW5]?CqROS8hj#9',G50o`XgAM`R)aF5<*j)AZ302K0/KP:tj&&%UpAe>G(`-Z'_a.HLQPs8=?N_
%jTe;^DJ@f2_Kd>%aA*;,V2ABs9G!5<DF'_3-O<f1:#?.@3(,!A0mCO_Wm%kS=hl4@%O"0nSKQ^Mj^W:C"Q?.CWj/W.iE2sWco2*d
%T^,PukY;[aHI5XF8eCCjS-HTI&;4-QBtD`Ff>S0K%6HQIG3!=ZEcAgk24),gcK%)!iQd,2-#72&1P6LI/.\9g4?)BPSpA.$?m-%a
%E9qNUh&lmI4i_oe$(c]M_LFC7E+2;>Za6ALCOYN6&013SVV?8XE(=LI(ci<P34kcpqo/ldZt"!peG6m_JY7D`1ESTF"+@,n#L3Y\
%h4Mjb^sSn24`0u0/,,nKK+8lE"uf<@CuD[/N*:>""&I.Ga=A3Sl@JcV#(FU2s-oiH3L5.VImsW;2I,g^GNs*EFO<li>DbHH>Ae<%
%RM;,.D^=,lilasDXd<M(2N6L;L2J^#WPA*h!+Lp'Or?[ID_GZ>J".RrL+p<[SM0qcQMC(a<8bj7dito^$65?:G=45:E)J%"n`a<:
%YhU@n1DMmMh,Y_=DKX)OP0O3u=A9gi)&#!I5J!Vu0nBG\YUuN-$(OFCJXK+d'0&_O<*(8_1g!&a9E`YS;o))ZWPHp>h&lcCI>=L*
%&NJX6'pkHuS@#7d(@>)ZHr8h\)_,eBo`,`j<8]TaSPk9-$CoX/@WcNh)$F:(9Qhb%<qq2VTJM-4@rc-R"AU:7P"9d@E#R.uK:%M2
%af<H\U.tj:&0nS\-NYY<>ZeWr'7k4'CXSes,&gH+dR`"%JMVQU+5D.WBf47flTF*uF(G7LQ3Wp!CpSA^o73%-NS:l5J<TYf2(]ag
%E5j(O&M:mG\-FESZj.+$>+!";jT/GHEG6p63*O8CFt4*5@hfjiRLKceT?="GGeaWK/(+4;"4$HS%CR)a344]c4rY"l9LIWcF2J*?
%M8Obb3t8\E<@nd,%1P;4&7u4X)K<Ej7rK=U3,Aijg2)&M\T/l*13gSTo"Sn/FrkV0OR$pS"7A]Q9SM;dneTsqG0kd"apdcI6NbVH
%P/=TTJCC`2%:5q5G@Xm"B.W!9:<dY?/E#UHA>.S/"e9j0gkDT2J2><(;V,'efs7""Yd/ekZ*@2>!TuNeeRGb5e*@N6ppdV[ZV$!L
%Yd&_Ra%3Wn=MPsOasq$Li+/_G,E2dF4h,H8<MKOa=#%+/9**=)]U%SM!KPcUV!ROai(b^Cns0?IX]391!h:jt(91;`ZN[2j>7,?G
%9&@!m,)F1#-q&0c']??@Jh__<".]=tfSSYh-gr@FNb/c?/-J@k"p_[',?InYE1V\fT!p!'[%'bG#MDPJILX<D9b)-jF>E;m_Z<O#
%7rMu_3PaVQOh,IMJ3t_9l#,V`Vbg7<G8>-EZft5q1CL^IVTZm[mQ/2,huQng>O.H;#9:u(@l>BI#5Yk8<9F8e.\Q.j)^97621sG3
%#TR3KPC#Y":@BQ6)MD:&d@!&Z7,YQmlQnGOi95_-RIOcLi7*ghlKp^l)UDaL)%S]qQ&Vj9J1EIdZ@I"55]h%i!Y/@G7DW@4B>PKa
%M`33F9G6l4@K@i3`m#A^$TJg`Z=RLJ/Dpf1.NqDs!GAK+G7U<K^^8(]p.O\ZDq;S55m,DO&olk>%63`OjU5-2E7TLOD!OdQ>-1B.
%CM!WleYiR2'0)3T8As,J^gUq*0B7cnS5CH8n8p!r?tm40?Y9F1MmE1rR)%+n]WfZaN^qaqnM:h<;*GTtG:%9@)Ub_Q9]1:Hm>VPg
%32BIHBBr7L(h.OP%OQ-a>Y#(*@024?.!\R#!lm9?CVR[gc9/KUdMc)Om+RV(,&j>2H#1&HR(tRD$om$s$(Ug="Je*o\77g>ch&bk
%/OeKuAO?VrgGd-V;Lpo!`C!t2^mX-"h.S`Hi!OF+bqE-)B)YY9DlCI>>?;6=[;<Hg&5T2*pWc<-[oD;PMdXq,dM3YR>Bb],gcGUi
%[oD;L[)t#b<8b!kCG"Y,$63_`EM9L6i9WV@YYp$nnECa*W5'"^CUo_dTE7WX\&ur`"V+R1=glLk:k>s-.kNfKQ+&Oep\9IMS/#E_
%^[>(Z83,8G/ij_,lcA_d1DMmLd$2\g\A26R`gs+j)*$Is/*He'#*.<3/_@PK+m<+b^>T-KT^0sH/oYY.(=]n1H)\6r>i5V^NOcm8
%^sSFeFM)XFCPXgK<8^;6kEZC+$61Y[W6J<"(^Jm7UJl_"1LKsjN=$ZgcrJ^PJKq3YP8_1lJb,Q]Y=.:SB'=?h&:rl:eFMili!A0h
%c>H>6i5sM(fMI-_",$4SSI1kenCY?c:k:ua'di3Fi:JN]B=O^pRr(BV%2ZOcS$&kui/I1[WN1)kUP0G:>:slt'n*h;/^#AOLHMZE
%JYRehI2b(`7Ye2bFuF;g5)bQJ#Ca_fIi%JA_0k07RAB;^i<+;J]45]8nUYJ2EZ[I)",B&KV&PPFIORR;L%In@cHJW2H-tikR8cp*
%NX['i-?JG9FQ<O:3_6Z1(nq,b0UWSb_["K;W#7^1!N=T2htY"UId*d!e:6M+i2f`VW5%ErV^VquHglSRoZ:c-pqTI/_qN$<+#s+d
%Y3"RDB:+r1E1INpou*%G+#o^?-4DqS9HumuK+8mMSj`-R3cJ?'.JB;BS1RE`hU$iF&M,NtFPqBJ/_<8nXum,c8)2IBdmHNgrLa7*
%(r'[tdXf:n(E&-83cOla,hVL#i5>hebhCacJHf'lTGoe.1m>acY^s]q<q<N@#4B"+1rI0d)`X:ej2TTg##9!\1QPsV"39.Vo'(<U
%E6$5j8PNi6i-5cDMVYLf"1YCo'h$%GNY[e(CrjC(LBepPhuZEe+btm^S4P/&4ei'K0Vda:14^Z'Q$!5#$,"qdBNl["@"C>VPm89<
%9;j?M3&&-=7_tJr*9mo_fKfSaWrM?c%e+(WI;C@JS*cb$(r1]ZW,9:X!-bM[aF7\#7uNCa0n;@R*_ra!R/n:<G0EVE"Q6M);!te=
%!&#$`^[clLEf1E(VuLAU"P1ACr>X$>\T!Q,)g2(S.dc<Si&_$(l^%Dep/9koPkmHT;='K&n3/BlgCf"RB4"]nDshVie/`&t7[=dI
%gbttc,q'Z$+T4c2`Qf+)P('a*PVes')_FZZhFYK8Jq2[CoGc6%qX?fI%8X<)Pi(EtJ5*Rcr9i[0KCBhfGRc9gSaRM8@lu"5`kk/?
%V3?=/gN7h)I3X6CeMF4D10UQ`14A2b)42:8hZW2.)K]TfAi!@SN9Qf@^jlX<2d0mNCmi!V8JTuPoF7]O\9>m`h43JIKB=+1b9b)l
%jW"$?b3h<SHt-`JFf"k&U]MDUS_tG+mlHip)h.6f[_q%t-4p`bDl<>!CrqI>@J@dER,FAMjPH9:`'-5k2mc=l)Vn*SNPI!rmlRqd
%ijNCcSZ0<Mb`<UjhIn)0hOsRSNZ8FM2Vd/&Al)lsH_[E_/,**n%J<&h;VI4ZUJ,,gIc^9X6A>BK@J7^-"nG\5YrAEo.!XsghT`LZ
%fFWBc4<:NqL_0f049<SF`88<.WL:6>h?<k@Gr(i$M>NY!=(ZBFr$Y7p14(6JZ!\sF61%Bo*5#<VC2^1\r.mZ+NJ1,Tc*1)mA#6%9
%]qtGBM+F*Vbhd/LV!O\@^!TMj4/fj?_P#$/p86luaN?8ZHP8h;,!b>bL3:='rS[C("i?AtQJ7lu;U&Y3p'*@g!!sY#hIt<ZRglj9
%6I7ougtp!<IIi*GS(rbO(tL(!MFh=u=_%3'23a%rI:`/MBbo,hm`hq;Hs+S)BnET&@70Gl+C+6a3k71j`'X/J\[S?YJeG9s\Mood
%Hn6df\"`^1kt^Y@2ZO^3>B4Y[*dh26]bMLr/%<!ZP0U#>R?E5BiLomV6Ab7L(pu;s$/GDrB(fgZKuO(_fc-L*bh9i!c%.@Q^Ve4]
%9c0CDDs-hk0<,F)1Uf;,Q2p(*p3+AI_Fj2)5Dc?/QJ.fN0NG\]H_Z.'fRqnIJWD+J0mb]0LT=-^p4e"A4Icke2m%OlC`9W=n--*+
%G%P[59t+@iA+jN&5F8%gm*3a1RXH,iD`EeM4l30OiF!9])q<_:a'k8+/%%<D*8TGG;gTI^R9"'@!hZh<2UpS7M#f@iW4e$#.P&#+
%HfNA,s)4mMJb1`f4K,s@"n[F*bhd"Zd824ak%Tb@-t5bB$Y^io`83bMe.Cl_hLt(*m0L$2HP<5g8q&/]7Z/mOS_+mC]l&##+nd7c
%a6J4Nm#@;6SMH#7)4:!ulXjUEetKV3<b?90-cESOHdgA<UtVB-]ue$Pp^C[+7]87uVK,L[1F1"olj^E_j2OV5)Vj1KL9Q09gtl"e
%goJ?&]r;EgFt:$\=pRH4W4eU<b["C5[l<G5Q\Rlpc"qC__ATmC;*Dl<NSL#p'a$>7^!WPgSf;]g:09H<<qXU)['Fb"ht?Ep"`Sj.
%,ofmWegP@E]pY4SBT*n>2p:hacHs,88\Vg(rOR#rCZ8c9/%7GXf]#qHDn)XTD:OBp)[7)r6TVWaL8]N(WP.O:=)N=?;gZuZ@!6sr
%p1@&a;cc&ipY@M$oUYiNW"cC*a1=UYWe%/TR?55](FDP8%UWW`%N0RCLa.N`Ln#S4#V9a[*9,(Zmnd94[1$9fYXhL3K>Erm=N?tl
%L342T@4_OMamrgVU"FXI7$_3rA3tK*kRpbeJ7-Afl9mH"O[+04lK3UZ<^bD%;TPZmcto<tZn/cN\7=uMh<G)r6+W2*e@JKQ0\Q,Y
%]u]k6n&+Hl=b+rA<<1%3U(,("[@ftYZsT`C0TaTrgGM5T<\*3=@M3"!LpUfdHH54oOqsPS.o^YL,,^rLBX(j)YTB9\_RS"B5!6E#
%!bbZnXC*EK\le2'A+A2B:4n5l(!"$3%!Spj7<C1X,Z?,We=Dn7.og5g/aQTdN^OEKKu3#lGZF5WJLm&"/6Ypk]ThnOBf:KdertH&
%d3s]eL'IS.:XkD=k16:rpI[\kE<B&_d`2EIr5!e?.!Pc<UHS[#ZS%?='NLUk8X`TU'NCn:dSeJUrErSnN>Iq)2!^tT!8%Bi&[=eu
%i@YURM;=.$YfNQd:fLhT!Hq9q?9=V6JasE&;^<l^?4+l5J5rWWQ/NT1f%t3lm<I3h=f3$*6<PT.8#%%(5uI]b20Mne$d<n`pB7!A
%.TqVKZ:]jVBA7/i"CSUo'.e%U[gV:X@*$m#*NMU06>X?S:O"%=J"m&HZoS8sFC7rTGdEOH'UVeZe@?sdBGW"l@AM51FTL"/R50^T
%4j^,mlE7'3fc14.2!Wp.+NdiOP?=]QdYL`pEHBq@S(6>c0G:R``L>$_og"[6-jbrOU,jeV/6>Vaimi\c:FqD2ciWYT%:nE.-t!nN
%W.:[Z<*OmM!/=357M>IU!\tMuHe*@u8fBf2rE,!SL0P_g$*9\mf?RU>TOdo;"@gWafNVLD9MUbhTlR.Xi/]JJ#sf*,KQ#4WN/hH>
%*LaBt+%0=aqA^5Ur(s=?YQG-j$IKCG%an+Al/Mnae''F:b4gp^d!/;d679Ir>POCM$cpO$gdRAo$`oAX3B+H7\>%MTTXBk]+DM9^
%#tW[qaQ7rPPX4r"<N;Z^:)*1`Yg+>d&#GA^)h`0"%o*,W/mX^XN'g-sQoIH5eo:RC7S'(6I]]Qd'aTl\29#Jf]Kg))@s=)b"GA#2
%#8f#O3lm`"\N<V1(nA7'1o&tO%pFp'Or:VL.7@YO7LLM&FtsXB*WQp@I[9H5$>]o45FNhT'0ZFgp1RkQ+^<$C%4em[$tKcRaqWu,
%;`CtYZHaK=luFbm$*:YSUET<ca36J2mfRc[F/kl_9M2O:PH+"a^Q_8uTHhMG#(hZq%HO+n'AV@Q:IX]l.(oXc0k?XX+V6/W`*oAE
%<^Cpn@qb+W6Ko(.%@W.-fZ]L&8F1s#`kX@STam4l'DDamhuM<IZ]`:o!d?(<#J$<p.RUFl>oG,iG,Isk_IaZqUZV^$;r_>43TPiZ
%+=&.L)+h"kLD`J7giEIE\k5%sH[,Zs$g,fUF&IOWGR`(G@N3X)fIH)oR;Fpg.aK'r/iV]T97fK@mijUi/YOeLRt_XoNm/X023_%h
%[br%)qLje?HH(<5FX)uI:KD5EE7Hh0Q3lWL,1G6]^.$6"YWOq1VfS9D+s4>X&Gifgrp+5H^ed]f7?&g[W1/$Ip9kPUWg`tp@FRl1
%LU$C?f(OCqG&WpKKI.6cUB(.d*?TgbK'f$6s7c`mFVcGoB4UA5LFT"65VN9:1.$hM0J`^5ah/E6RGII$F'a7BLGgoOKCCe`4W%!$
%87]S()S"Bg[qGm0688L+Oi(m<#si;6EHRX8Yq138*<[$8OfsPT0T)]n@aZFa+a6sG1imG9Qt$Pe"f/"Q/FV4RN<J^SZFDt=\>2U9
%HiWaPo#oBbY\XQm2*nTG5Dm<'Zt+E@GgGM5R5@EkgH`VnF1aB)78))^n70.$d%aW!Do`u\LN/W"K1N29prpTBMo]tsTbFqYTi>,o
%Bd@T@+`eRI[f'1=mN%;#G',T$Cm,2qC`Q_623\'ql$gBUlqL,\U9QT?hTA8#]f;(8VN,MRF6,g[aqeTT\^R*C+V_MW-"]&:e5kpY
%JP&@[TEQ_0U".^r'U=3q+HWNPWbIfHFr@lYS)Qbsd9FMZ8NT:N(T=pF8Kn..A/PnRMDb6,jP2iuXq0!+!`1hO4qCGhoOa9JA'\_I
%Jo%k@DQ0):Cc>'[2ijmd\qXjVD6s&LV/J5G*,r<$4$RCh(-)!t^f\M.iE;2m3DC.(7UtK]i.pL#\S9sJ)s4<k4Gn$lHplOfj3&7`
%E^\+!R0<>Jge\`A*1hge_Ii02U^jaADmjL/9.AgpZ,LJdK<]6D_n\]ih<k?hSCZ)$L/_j27c5U"BORbV>.=ffM0[[F1c.Bt0^^(o
%%Aq;R9'>+mG8GjXJNW<@4rlATP[GSEgc8fF!5=1.8a^$imt,0fY5I_dX6p%'SS5>hN=!>_@]UTd)VM,_-jOW:!cjp5)cu7#U_'6&
%m,=dO'+C]a/%0F6#-t4*^sEQC/;?Jb@i*r`RDoCF+EjHPh#VC/<+Ak/<dN2c^u<bFXgmI.9`[*2X44q:ThKpO45]ku]C]rrf*C*u
%A*B3[j2jSKMPT,_\cImJELs7Bdd$Yn>g`3Y-$[ZmV@gWdj-m@gPtiW_*@!&o9/].G8Lj5*qnOg)%%lch6&dp3"gtnZD_R^6,9>&M
%Z`^MIEs#b_X:&'F*4ef/&Enib`H"q6%(FIE%CQ:meOH\(EB@bl=\+%%2"n4,Rs9p$kp@^&`LAOt)"ZEZZ*>d2O?d^bZocDhZl-Rl
%@OQe5S[>sM`[hd4oU/N@7"WEZ(?=Mt-G-5J_5^fM&<0uod,%SG+5^'L=)8ATM07r;9:B)^<U]N*/\3$^mQMVB7M]YVU54Ub(#XIK
%/m+JG(.dR7$nrn1s-LECCQdG^ZA%0N_>d=bNfYV^$@)kG:MS&GnN#+\PN3TA-70G/Al7nl?g)*#ZKBbg\^oW*!:&!lVRfc-/KE*A
%a\<J"9P!SHf<ok#+g9sdL2)/eWh[C>nuNOWZKTfonR)Sf5oNKkg6^`FGI7qi@]h'(4tnN3db`rb:ou,-:R!>QfEJF0k5i7A+=q7J
%@:pafQiM0,,F8Q?@P8:saJLG6U.ph)*DS@`9gWg:INUg,%.2OfKP?3J]l3I7/mto:KW$BfEdi[Bn2?OBh$C@oX>&?g#X9X9&AuXW
%&.!h[+a?:_9UG$Q!mam2<8",OM#ekZl#9q-ON+7eS29Z6[O=i4Kf!n%m=6NCcgFk&;j4!)./"%W8.2_5V/aC@k9Z`K5rA`K8/2H>
%AJu0Wb93$TSmGW_q/RMOWr]HO,a-@&]+]"a\$pt9=0iPAX#5Jmb-QC7Et;OVK>_io=5J9.]b0Rj)JFbg+L@*D+ANB:FVn,_YL2$R
%eH2Ok0B\TgQ!o_-S:`eu/YP:&ILmL-Lu9*V>;OOf^%Tb\,XWCK&OYHl)Y.XZ+P@7MF-[X;T_'^6U;g"BG4PXLaBf1d<TeZ/+'B"r
%OTp4kTe"I?LMT*tN.\$68hq5B/V=1/HRj[/(@ck[(tjOp4iSabDn*t*h+)pNb-%&fV;rf@f\7]-gQG]2q3;m>'9gRpVuqtYKYB1>
%JO`rfY&@kRP<lIcfRk0TPpul63%%u?[+p&,Fo5M7D<3fja$%M;U-_+tM&Hi_Sqmn&`7>]>^2@$KIN^&]0_Us100fg]lN,`NgDN4E
%Ln(R9VT/;.h&N>]fhL8=(VbkW\&tmJJ(Lr/5tS33'+'jo[LeV[4H0o.D<fl\,S0Dd`0X%r*J8J0de&AA`5_VL:0`j+';2/ZBOY=Y
%B`qIFJcZdXZ="+F<n\nnXUm&k<[6GQkkmIB>^hJSHZhLc0-FA>4/f>:gd%YM/jdul#&>NBLSH)Z.UG[-9;(;oi+K"3BgpD0D,,r,
%.%tBSKej$)M^B99+WQ1i1'F1O4mO!:M\n$rH_^+jMG-Je;NrqUT9Q/n#IY/>=Y[]F@;H_f):j!sSLFZ[OOX2..%RqL*'uA/8=c5e
%qLE$b3\<>\D,J"J3H\:eiamWH*Y=N&RYh,4`;W1<BOpa;WZoEM`d6+8c2(Y\@R7nh4;1R!Tp..MLO;,KFMc]$jiRR2,lqjW7`t4Y
%8l"Z9@!@GER4d("13V):<M)rH8okm*NnXL>$$@I:2lq2CVig1W60ic%2NrdoM5?Nq%Z+!4Sp>l]$$:b[nXFn'lbK#3]t5\\p4+Jm
%Qm[jFimc8.P5m)KQ"\A'$E0sk3tC$P')`$Q@;2ti>*r;o!94fn")0ub4CZ)dL+X)$PT.l*Z>:hM#"o1OP8NN%&MD;!O@f]aGlX'`
%5[tDJ^lag<MH47PJ0UbF.gqR-[29ZE9/s"B)fXb4Z@l3nB%*&fE"ZN;''9f<A3k'Ys&3a59&CG@HC+hbRH+u%`Y4_&77(hsl].6I
%ph?^'pZ,5ZJl0eafLP=Y67d["!8X,6dYgFn$$F=`Ba,`4ct3UiH7KVCV<?rVa\+TBRjLIqXc[4EgBgc6SjE&f984!+6\QX8F3G0t
%[3&L;35'-=aVQE=95G6]S./LkaB0>C;-h:1\5k\j4U[">?rH]S">F6m6Im^!"gA+o,kI2$if-3Me$UR%ILT'34Qo_4TLZke,)\Sa
%l*/VN0u>I_R-6m9alGL//r_Q)2TTYfNUHJ;oWN%`U1o7a4]1$\@]pYX?"23M)O8%$*-[#)7Z4527)FI+21/lD+@9.P*2_(Q@'7(9
%!n49UOp0EM1.[2)[OlGXC/Q#0>TqKH8eVf"ZU$C+X9XEt*_A5?fOHN%KU@9TS30oGN6ul'"Ki>^4PYn*:I<9/h\Ru29E@$)R#X]F
%aTPmG1^S;sg(FH>k6]<LOnf*Y$BeMm&E"nQEc0VM@jH5E9>sA>!_A-r5ZNS^ilDF6,u%97:\]?!LA@SU1r@-c%&Tc&OT?#^3Kgmi
%.cW*qb5pbEr#XO9gRrhu<[p_nirQWC5Md@"$%@usd\@I5E*hmJP5%:(OK93eE&RL?5Q[E+V69itDO4J29eCq;6kCW%bk;A=,r-DV
%W,8TO*ApP!=,e^4YJJ#$0/:nO\aiZ8Kflen"sq?3QIf4Xl2=EC^>_*UUi6_mDW&1M2hl;rJ-,d'5a!P2h[!Db"+)F!-Pe?#?u,'a
%`6>,N^I2B9JXB.`9:J)cI0(&F+C6=K2"n9rP;WcQ,r<7`;[b'8O%]ufafP]#;+[]),g7Jt7;3!i+$;JY?Q>G+-.*&UD8g13_XmoM
%^9NfeH(k+,_T<PV!%0?,W<GfnR"\!aO"ks]BhlM_\"1/^\N="[-j%3m$VW%<l&ldNfpPn:FKDCr:?-2=/7hHrSn'?!)?<V:)s1:%
%U80MpfUSM<m?n<^%_EdL!B@3eD^ZF-cH+Bl.-*P$OQJUBU^_o[+_`%!oNKqDQ3KH,B2gh/P;f<M?-W3efGDt4#1V>K($JdtdL(C]
%4+^j[#dk-tAB;r?pg'sXl\:ZYE$L5!Npk,j9+R6f-tWAlQC^U0Y7!\adXNrH\E]0?1`Wb.b]alrXN%7(Kj%UhT[8qC43tnf'Us6a
%P^p$ufSS"3Gn$+,/B;:4/r4Lp-kD,'aU;Ll&VlE=!eb.b;(Om(M*'9nA!S($I#[3m>BJ9t5\AF@6qk!Q>[T1k;<W.*o$.pZF*qZ\
%k\>"7dk[.Wq#mZO;=ao^J:GXt4Ee,S6C:il,3#Z=LLU>"CM+k0HI2#q'UNI5K9:IfrMc!PF*'[/9b%fRS"WnSMZ0,r14VG3f!mQ/
%$4%PPVZ^;FgN<rWfM60g0EO#U6:(bDRL;d@j"*\d9i1oU-QH(9i3\1V33WM(9%9A]EKG.uZ&B=C,=naDiH"RhlQ3:na\.0irDeLq
%,S=HHW@%<?0k@-#YE.<>[QTJ7flW`rP,uXCV@A.8NFYS3==#=@lpF_P7%2e0k2@Sk8d8poiu)U=D?eVne`HLXXD&s\c$14_i&W62
%2\5p$A$o4K60a&$*1!6)RRNP#!/Dh7b)V]lS0hjV]^es7ZmeR%R'gc:6G_k4nc]Ck6Kuc_HkBd.86Kkecm$;T-$`$Sh[0K+rPheQ
%8np26$a@&N`2Q1L$#1_HMbfNTM%.9/E>>(3Z-&B_3`1cZ4GsT/!^lFcOg$3aOI2uK^+'=!&W1b-.mWG<aN@?h9<ic*njc'aKC5PF
%5.'Q?WrV<'SNB+&`=2;/e"qmR.S^6=^$p6&O+8>no*_*4>L%#ipnXi$&h$$3OIe`<8R,8=-.nLr-8sL&;3s*Op$kkSk=EskUrF)Q
%;uk.h:M'%K+HWB>;4c]LM*:p)T1hc.*iO5NI\9:B@i&h4'Sd/n9%:-K6o-sY?CaJ>CO,u\TB*pAV+&K+@u<rNi^d\j'ZYij&2cdG
%WB]dG=2]+)jo\:CY-C08h!!E]X>D/n5O+4F;JW$uLgD-YDUV2Q"?A8KK+R%ga=CKESO,[(=U^3_b!2.n*]gr:@XpfOf+G<FV&j<@
%$;ADmWne/r`pqJ.^Qa\$i\AY4V+(f/n?R.Skp!O7m>l]sJjE'i`)+OR+Q8In/1Y?iR7juU.Rj^)=Qbc4?ka0rjH><"ZYGTQ%7BlD
%%Y(m,Lb=_/4Q68/#hdHgMj+0<Smgj`">>!.Hn&tqc7hsCFEg6R:gofqRYU^/0s'Au%DgC$Nj2'9a!"mT$2GZA99Fj*T:D<EP\qX6
%eH3,$@r5&7+mDp'@spc]6;eH)`[Af3"]WXMPXSg+!]tZ=nHZ3uWYVA6k"=S>=-mFNa[t_qL^^k`Y*#(OMtVHY37't!;RZg^R;aZ]
%^pL(<,)O)fX#An*5-KMl"BD671*6u3ZB:QE25j&lrD[++@BB^M-:m>S<63u/_/2=DI&":S=jS(#6Hkt)+]_>"%gNDL;&f[k=c"=@
%.5dcojt/9B\05"p&Dr.LK4pch[%N.r6N8H"3iOP$8h_//E$h8FG2qUURtg2_#V)!2!(&\D#H:G@!S@N[2U!P5?H'](>un0u+^#:g
%8r-6:YA@\XaKGZK$odK\?inHPTUD1B7aN)Z,t[DWfd?fWhB(eNL$^.IC*gr8K2=J/A)S5s%1kB,/=,Xu5f_JSZ+p]U0BJs&'jq*=
%I$D^E"V)MF>s=<fUqL([-k(4"J1U2f,!g+@^k.9=nEm/S+dle)Ya>_(5]q8Kg]7J>A\qKB@us6\+ndMtL/bT=TTOOZMCE]nKu6==
%%8#M.UqdieN5Rb.K(];Rg-BGH&^sYO5Fs>@>%q(F=Fo6C`X'$P8K!p54p3]p*[CB1fX#Df$qTD\higt'&"V8m6VX46>6;lCq?mRB
%>F2FEO9dO4^QNmbkUcYYn41I1a$EQrD=Kh&kHSi0l0*V?lt2$XM"\M)`h^P'LnjLQK[4WTU77)O"Psm(B=bAKdt=G(oNJ#sg?YD`
%O;cRo"ht<g<Z5.5qRILW\1JQghWR^2A!.Km0FKE$]Zd73(d%uCY021s.DP#26QJ2%4mg;$_2t?_Xn35;>6W'CR/En+U3U:&b6>JQ
%B?l7F-1d/P"2FqF=S[t@>*'BuB<pk8B*Q2n^m1rt4'%(?mNAZ]XUJMXl2=ECrLuA:\ir84+-T9PD4p]O$=Z#c#<%8[.uN@&S^+=R
%"dTi1GgS1u+O3W)o:DnOq/`jtE01I(?Qb[PC'^RgmI8U+-kVdf2m4@([/q)])E^YeO9FF#=US]FOf]X9L\qQ`a$9uD<3Ad4\A3E@
%HFk6ej@Y:qn\^')W>1dod`X%a'%>CHr9hg"U7RHHP]/9F*l4]bP0S<'?AM@%?C2JZ?O"nB`-5`*;X'p+7/4Fr=7*\&p?baG`")F4
%.,p3'TN@FBAL-\t:MXHKp0bTo<)W638OQItnj:N:*=5Hm8%SKW:q1'C=l.6OA_T%*(3,ejQn/e#:2rp<f%KpnpfZuL,,H'[L)MiJ
%5bJqp/c[@.7m.;k&i%3MF+c6j#*I=GU_7CMlk.4,&h9^iS:#mL,V2P#5%UVc+X+dar"Q8"HieoRN?E6g"?/bY'r-toUlb3_hhECJ
%EZr[\Eb'A$g.TG!8D$RL$VcHV'R6IV&FpD0'j.KGhC7Qi9KF)]PCS4h43"RqM@<HM]#k#/g>^b?A:PDSoG$6ql2IB]T2>=*(8%_;
%!]kld/O;!n75cOZ0Sq[&=[eG<f(Ka-4.OAf%BC>%2]EY]/i'Qa9+\?FgCEdrSsAk>FMY@k?r.$b+-j&R-jO6-b\<6_Ha4ntSgT>J
%F97S"'9$rg!U6[R+`Vj-ke(0>r]p?+@%a_nF@@#qPTuj#.IF&:Rg%!;AIC9.X"q4P680VCrd+-\[8KF?9:`UT,!</XflB!W^'K+R
%TW5C<`g(o#3?cg)Tk):-8k<M^%jnac]Em"!n4$-k;Fju.D$a3qmtX)4_Mb[_N>a)mfc!3:9f&//JRJQ**U<:$OG2K9=b4I5O$(j>
%"C"5=8B9Bj!kH+)7Y/AJUlY80e:EgO^#_*OaJc<Yd43Rq<N\3T`?XWXXDkB8J08g\\`FDG,.=pKcR'oRr'sS>n/[2R9,3m>MG7U6
%2:i35Ktn3a`O#]uc>%`"[$Mr7Kj^b9q^"R2!+H;hfP60WIYnJ<!<=qk%O;<]!`(AoOV7T?&f2(uDbD3IL,L/f/%.XiW2Ri_TdG3o
%*,&O7KYB^9<cMc7;3$7@85sTP#WHeJVuRu1*j.f:5%&?!MCq1L8LT!;\G:LVcuY&1MnTs!&9WV95RiE"-R@#h$R09P8U6#P;?YIQ
%IP*:84:nj=T-'L%E`$3I"dPnrX9F=h:Wb?TEY37B-:*`+1'XWiBd$']b_Mq:Xlm?Tg)*;a&\]CK%qpQVn-W_fE2^i6=HTtS'lZT4
%fuj@hkH7)>jf_^iITp)L/FDT?km2flq&o.)/KoNN*$n<?D2?H3-j8a;"S@5.^_U--D)6=g=H28V8d6[j6"#ZDif\1;1@pcuY[EKj
%:)a^l8$WAro9PCU^g[uK"B]t`L-YuJ[8@@qd*X9UY)oTT>B#<"B*]1*>!ZW'?*>uATSCpN,T(bU!A,@7<cI^LnH17J/Wq8B4rk$F
%/\:?^TOS4P8-6,sb1A)b>X6,e'ud%X2Q]lL)m;AP5uIAU.4'O8,Cff]"3Ai_PQ66QSodL[2e*#-?!\%=8!)F<.Lk?'Jc[_d$8k:,
%n5a3t0`kQpq?Tk=kuK`06Nth[)jhseV5`<,+2E4,_*QG?#&SHt'UoD0!LGGod<K=m3Bo+'6sK"[(aP(We4&'(^cEVm'[#G1)@0QA
%IYj5jC2Te@Pt^NW1ke/:RO#heIOZ-H#FGZagn,@Y4+o5"ao2bX:]R^3nUtnb`Y]ZI4iPW>^_Y6+FN['\7m(]Ljf)1#K:Wg?m)2f(
%`,%(95a9i@!YD_>CXc#Q5K$6=cp"jhC!(0BfWgCG&:h2><K>_hXRF"i,l7kVG/8K7eX;@\BYc\@gCV]J"rG&VIb7-@-kn]=j*fT,
%GUH'G1g80tPfpLt`FLNBU(JpeaX'tV*PLMPYp@tk!(fLMX!$R;#1?)##]P<nm=/m3>_QVAk^b$l%-U#c)?-C)YnS13T\^PQ0uUlD
%=bi"Q>6n(44c9/*Fe9@%ZbYoS_+>2cdkGa5,.WTqpCS">PBLA,@($igOFgq<"6r1&<jei*WWS'U>*)^GXsS#mZUC\i'J3pVI".SE
%]F[A9)1EeV":VYXjD"*[qJ!/>*/bamTn)AMO.p3VCF?ou4a&3.M/Eh*FO;SV8^Ek\aBe)(.4..r\e@/W&OSm0FtGnTKX@SS@]N<`
%'H9.QTFID([!!U:@_MIp6XmkH0Aot:Uu)P",5bl')bUei(WR#@*XbhLTrIDeIL,1M`>;rnPaJ=3MJX#G-EY;iD@=LtG@)D__"%cJ
%Nra\']I[Q\"p170PsQ%5kUjRsnH@Z_,YuUY\ZO$`'\5QO#2t,Hho?jHZDB]L?4Y>\p>G12'cS'a_Gj0E4-2,uo.a(2!m-)W4^/!7
%Q4^6"I1"K1@pCjl?lc#:H[VR]5GrkXR"ql,O<g`""^g<&SH#[S6<YAJ%<Qk-*OO%He+Wor3l0gKr'UE@n7!dSjP'*WUBO\M;<(N@
%<X>*tkq#Y!7mq-g]t&P9i^=4P=N0ug-05gEak#Sc6R4#,OMc_q)b#i\n1(EeZ.9=:1Qj-+WsGg`9O+0XGRN+3Lgq0<(*S;QoT.4.
%#p9n,?E,7\C77TH$)AaqAE@EBl]=&F9">W=T%=GY^Zt-m?D+Q7!)AEQN%Y9mTa1k*4^1`O/833.T@bVVK]kh'd<G.h10'u\(o?nM
%-BSNNS3ke]'jS-f**Pn[C/>O1_ZYuC%TB.mR@f?W_SS=.\=5/Y\tkEs7!+!5[O'BRa:.?O`DRqT$IbQU'BobTR-\DU8e75)Kc$YT
%0:LSA>S/6E^aER$.jPa\,&7F_&up'S<"eGKoI_a&]!la<U^,M?lj1[LoR8oEOecW+;Jm1Pj[%)+;X%(%aCR,18]F"9dWbm]m^+[/
%Lm^X3l[grsW7_;h&J[7W/<#FYTA;;;8SI@\b+U&F0?FQG+to^bPEaH-)!BhI'B#WX*u(5gpnJ7NOVM>&FOF.*%'X<*:ErT+(!r<q
%52%5)AT_?rKN<aS+%0FHLB2>M8]aVDD6^bVAdf+j\=at,5gG\MP,c=%F4CfjGU19<LEUAZ%Ehu=4N`L(Et2seeekIcN.AX!Jj9JA
%<b:SRJl?X[A]E+[``A#1HonAWC@&rL7l_US?K)0Z?m>$7s+$AQHo\Y77BJIW=h8gkQcMr7IY5r60-gi:egkYCCUTS>!DYAgXE!7c
%iD\cKXl:O]+dGZR@h^aR*NJ7^3->Z,UXY/ISWFs2bBj&GmYD'kpeuF*!C7!'SV%Yf.`0`231615l-T[M[gUWX_ZL_gBp2!4TOI;E
%Q^BKQ`1T8UT>jb2humUfi!+=$d!S38QOK9epbg[J,#H<TBHpOMXP$#U.A#Ls)!IR\Fo/UCjsgHpO.r:oM^1l0G6\C48>N+EC6bgu
%'^I5@3Bm%P;Sq*XM'mWYA8,M.#QD=KbVCeB"P,-Y$H:I-jsC4>9sqFOZBYRDNqFmM?D(-6Cat`GPuc:kIITNB3S(mB;PKZp.a5c3
%K$qS(f2hTG(d\NIJS:1QIOHTe5E@YL0`;rEm7V%6W;cn#:3K`19^AM?8%RV]fd?Y]4kD_V7liY5/=9=krdbN5Q3?:'=a8s4.#&(c
%MV5d&D["@rlNiYkb$'hbE=5AD#]o5uUX!!^;((#h`*da`E7p$c5g\SL6&hm"iJdhN9l-Z<Jb7`^eFXKE.tpcnLf%g))Le:@n-2u1
%Ar&`iLB)Son:ITWV!j5'NJ,E-@RfjZ')'G?QJMGlI,UkVNHU.-8/]&X&7'jd_l"^@OJH>\I`Rk.D2bTR6rH7"W8%b9;C32[E`/e<
%qb+k6;!oT;R"E9OFP7`Zg\PriPm[o^"!E)&J<:U+am%JWiaI=+7@TS8MM*@'OE"f.V%Z@uJQ[]$PHJ""NZ#MY/dbf#ETGMD+e9J\
%E*Ukc.*o1f^2,KT9JqVdYiqkr'F$4D2,Pn7BKS'9_GKH*kugEZ9qIuC5NO5G)&$]hihVMaI0N`3($dYd'r+-58ldgX;D8Lc4.#1o
%12m9d!5f(3PQ7Z['\m)eOG8lHO4Yb7>;.^a=I&;hUR>LLX[LL1";asS&N?Tbe1*DN$k/dI?AS*,_ZE1Td&_!ce'\gSWGD0^'`\bi
%arji!*mBr#KZ`)%5eoV,q:/o9,1[lh-8$b-&WL1Y$L"7MT\9Ccc=f-^ds7lnJTd\E7n/=5*dS.sWRsNI9%Y(ZQH8\Pq`q,FfLAFb
%oh&_JF,j9[0L?^'[H.O&6GfghoileOFL@Ck2%jgndZ:5or-ha!\<@IaTl(L#MHjkDF:s\0=P_24G"I!BFI@?YFoG6)0C2[_SWL4k
%Bq6q'*E*jZ_fQO3Cb'`A;[k/N2$LaZaOrHW9cJZ]eZMTg.#7RLqULu(5]mAYN7a:MOJLT,7(%]6S:flF"i(shD\*Mc3`1/c8H)E;
%0S,20Q,t6UPH^rh<3mc9_[[Wu*8,>:MM79,5]<N17`dh?9UT@>3YGg]k.;p4!l?<$L!4Z.Z:LKAp!Y>L1*S<%>DnkN.$aSGiC>1Y
%j(ErYN#)(U^q#lE@Te61(`WAECO!nKo85iFKF-<bl&_R(>:bl;;5kt8Qd7qV<sDqCpCuDr7`kcX!($dCBeM\a:V`9lg45f*R%8mc
%,,H$3!>%t2M[8)R!."%a4Fodnih]!ES/7An)2#"icB=iO?+*ab/f>#M5n($a1s<hD`(4]F6A!:LPN]>'T7tVs[1\!cT]+rWXXe>K
%g4=oqldP,pnW?@B:nIcF,MPP1O4Ag<s-2qeA"I07#?``[N?YTM?7['$'om#4G-%@\S[^)Lck/f\H@MNsqG:sO"VD)E,fDUf1.gpN
%5=Lfo'b+u&-.fGt[8tLXj=.`0:`\%D]Vu[C=,=T"dOZGn>Qtg1HK:EkP"!TG7g9m$*:p+0E`D,3po.Lhjr%i#_<+.6'u5Mo2GMY[
%Nc:b)+gq$"rUp\LMCrlm-AP>mL^]aRe<b"!pPYK"^'MZ^'upU#D788r(70RM/2Tq!%!NV.UQZ!((7mr"7KL&Np^1LM$<OMUW-Gb`
%`lkom5GaDaUm2!h9GB\Ccu]_k#!@^8$=fV8IcsIk<gZ@RSZGj?J0Zua5#'N'.3rt#;PZ$FgdC:2=r30aZN!m/4F2J;74-G3@_F@=
%GEl'cGe]6'dZ_BR`g&^h1@Z"#)88:;M4%i="Nad@>>YFOIkd-43!(fZ)Q`sUbGjOci$KVSV9)ba)l5#DQ*Z9D1G@Pj9M!Uc-G0s"
%U_-rl+3JX+Xf+ct&1igjHcQqh;Q<!(_+79A'KZ_fIa%KeD[fu%KZFV`UJ1e9Wj)QrFYj_6-_NO73R%.6Kb,&a!'N4k5sb0!X3.(p
%;=h`#.q(DQL%,VJ>ntcDZIT;VK+$9\V\/6EE!3E^Q`2U:r>JPF_H]UZ8[t+P*NbHnFf""LQ?"rqd;!neZ)h&Cg.2;PUPOYiohtR:
%&NDPG!R&$jUsVU581cApp7qs`XtV[*bf$SZ2c=V4e>FO3Lt1c^,;ni;M/YD@6J'2:WbinqeE!k-U^@R-"9T[F/%n21la[8-j<1(e
%flSKWM6k%e/B==4bm:@[$*$7\[9d7.?:^*MP'ed%N%F,/OXUGikj#1^2I<7rX=uId,_u-?B;;7t!5j>,)Cta6/A?L<k!sMLZ>O&#
%TgW!pUA0M6+_J10.T,0md>,XW>gRp&a+=mJ.AK5O``>q`X0#><,,LfjiM`/3m,p^@7UNF&JC1G#F:<-rk!S1)%@T\V"Ipd?>L;kO
%"^4A64-A&i),H+gc3/*.MS;U7F]dO;\ZGcZMmsZsb*'^Q,n)%]"kX`p*V*u3L"kerYT<4WBUhO>7!@5,+n9E/S9e0Gn6Eg!8YHPa
%@Oa+Z\.K-J<[h^^pnYEV"S785J3n)(K^oSpMoop3Ao1B!'acN:HPqd^4p^.6ehQ?pYeTF-q,XV`>6-Q)_"C$t0suPcGgagO2Xi\V
%4X8Cgmj-GdHt>lq7-I8uJjJhW-p>q*Jj9qZ)JN]P.RT%d7\WusDO?q$<XLL-A^GEJK2Zdt[O_`F5ARTgS234j;6`[MmLu60TsRcS
%@@]`O8i-Pi>-(a3-qoSd[jFQr,RrFNaHoeA%CAQHAB`LD;SdhN,js3gG6=sS$mcEg]^aF4W5@Jq@h=\QRnhW18;KdQJl_T&X8R0c
%B7\`H(NM$nhLa_@GZiY&1kI.rM!Zmt7li_g^*/r&E],+`P!)YcG`lIt.)C`=1anhC3$S_cO,[qV]"t6-MK(qce3_Z8!g1_jNB+FR
%+5.!!EfU2h+I0AeeJ(mNWu)7!ML^^<7*CeI8sc1(D<d6.Y/$tEJl>h0Bfck@)EVss3S#!W&^3Tl]RjP6&;(X\(i2cV.%Oq\<m"GK
%=JS/u22'eiG[)084INt:l4tlQ^T9`fQ/2iX8c^O%fs-\$/(QP.bI(fUCFUJ1@O[;dh"+nr`$^glgIT?MV_Y-Pp!T8GHk,1h[+Tsg
%&A@S:aBh+=Zna]eiokcODa:rC8-F$igmgjgGEZ"b'E(7Il'1k"csT_</k?tub+dVMKYX)l&I5/jj0\?)6.6U;"9;[4eKZXHD)=]n
%-Ui$uWVkDR.8-NU2MG))P>o^2e-(>ZJm:g3BJaN4SL/rj9kbanXq;OgR%X^,,@E#G95g!1I0(LIG=SO]<@gYMmC&9(+G!uJOJGdQ
%"gegP#1$t.QE-9["TBd!7*q)O/9D["U+NA(%ZpR@?O))hXL=mW,g]:ghtTj,(h&*L\MJhJb45o3Y-H4c"WF$<C&4era(HcbgO^+>
%"_ChA9R(2?M<noo33"Q*joam>$QsNkM)Ip[2-A;^$;CPE)m$t[]=VJZ7+RIB`oeT.ZH3"Z6Gde6@.RFq=oudohD'n1b;O"QjO#_J
%+p"KWp^p1><1'p*)*([G&<ccZ!lgeXX[cUcgKD.b!F-dZJqFB+%gbHW4]/KLK90N5'Mm4M>nO>Xl#m[PST^`%6D3;*=so;`WT4CP
%c2u8s*='5q990f'X-7.1,#uI!m%H3h?;`6$&HrN0E-]j373/dF?]RPU[tR3+]/>X[,N=#!bh@?1<>d_taW!Zn,5`pBTd5S.hN"WZ
%fYK`r,$\UD)2arC88@VRkRo*H"u?]b,7PJ;`=.sppIl#7Kntd]WSNDO&TjWVgr]Hmd$<<?Vo>?Kpbd#aV8;Ib^&M6Khql#r_PIHF
%'nhlhP.DqV!ZH1_$4:`<[3[G@%'1^@]jc2"X9fWnL5iN2BI;#_N@?`\80K5294hNJ@"9++k2[YA!a:Pf-@epJbcP@in4^t.N'd9*
%,]2!['a7B_nXu#.m8PX!EJ.UA=UV=>&@AC'Br)o?q=XS_p+NZ[f-pG3)jue)0sH@]Wm;fX)WJO(_SNFqN2]fn&?4VGP*Y?p]BLKE
%5TG=geitG*]Ke!0%@`.hNF41-prg&.K`Wk4Y-`idj>nkH5Rs\jSts_4#MMa<*J#A,'h2r'(!-jV=:=1P2A2MYO]!1A*-C\5b[ml/
%'A"#hA\=K!e0OG8<m[hIp7]*k<9"JcL2$"_<06'\bpS31Um&ek;JiPf^=gr5`CN+<B>&t8&?N?-AgDqOk]*-g_S&mlAsNf,:lJk<
%Ufg>`0A0"gKI,J%8K>Tt8'\CrV\@o=[Vo(GS!Obp(;Lk(J0s@Q6=FP>F`,Q:*YTd*"dkuPqLt%4goTn-YQ@=9I4FK<i+11e,SZ\d
%FeJNNQ@p7s-(/fb8NN!%0:/kpk,H^Bl!*dP*)c[@E,/q=HGqIG,?*Q6Z=q";=a*uMXe<p0r=1TQ2TSZ7+B#0n!M@Zq@dOXnPq=^R
%:o,#:6Vlp\J@FT;g\:'^+00K'4C?4R'M?%jVq[O9lEiXZ;pk]p.+bAo6J3"keoJZg"Y9t[SoMIe0q?0Q%oV;^M6]TO.`<pf@]@m]
%q5>Tr3q'2D`Af&3.j$Pjjdfd.WJ")6i6I46fj5SCL]D.r#7k-HUSin^gAuGPln=ImHPk5V:6X<9S/[GR9/AuHD(M7$-l<ZC?t=g.
%eRCAp"@Z0@q3b]i!LosZdrmnG$Dd%\7r;!KeBZeJ-a4Cf)h[*)'4&+"&N,G;859AFUsZnWM&9.;JdP[4Y$g#M*&ZaR&7V$Gn*GIQ
%7R2tE("q<7cq;hH`1.*:f0jufGVZW]X5Pd%aUZa!35U:aL,[C3*A2fDUju7FaIOXA)beX_q1E@F.C=fYM!Vs?)EN^jZ1".Ve!4d*
%%1n-gge!Zt]:9u^OGIeZdXWYZJ?`^s&0,QK!NJ^1%8Ohei@!0lNE"0,P):1l2(V(/d:p'@1-E_82/)%S?l`<4gSV*7:9nDp#p)Ll
%fUK[D.T'B\qQWj5A-@pl+hP+J-mfLSfP7><gId*O5QPTcN9!,)&OOMc.qN.mP,YKHp98;Z49MYAOMhlPh^["in.MO-=HR&qo:[=?
%XmmPZ>R6cDApaprARaLeN!TQkeEAQf@MX-`!M3t_VGkpIg5+2^*<l#`:b"T?M>EC:FR#%`^?MFAP`be\l"@IZ8^^_n%9caQ<OCl"
%U4XVdC@4,7;J!m'iR!Q\44&d3gfftVS?Z^&+t]i)/P'geO?--[089k-NEH-8LhdZ3&Q1N'0c,c.(D81`kd:3,2eG<O+>N2j;uA%U
%N.Y.PP%CWC/h!1I#U%[u(W7m[[o)e=]`\uuP-W=<Um+o[Yk_Dn5pBC@e2BiXWc[C=E+@B!?PnU;cV*V0)"bm0^d,5kC2;-J[72F[
%0qj(8C8R%5Z4V*g16OH)NC=:@^(hd/<d`/<NCHS\Be]6s4,lBsN&]L$dqlr5`!"iKW<og7QR0C^9AmrfX<PT+k_'VVPYcCWO;4U&
%R>#EBW]:6Cd`](NT^f-2)!GP:^U3Vn_>"dm\Li1]%=sBM_aaf,iC9!q,TuS3#aWPpm#E'@D!Ai1Yk]]u#uOk@#,iB^7#D=TJ71DA
%1lTuO7T()$^(Q5l&;pDu\79WL-&4lfY8-aV_kR^"JrPBoVNeea%2(oMjInOeldeJG'I1d0^%##'6'`Dn*%AT5Yd*3C_PBcW2[Oi"
%0f[3?4"H+MXM;Vdj*NO\,[^rLS?,38O9p,/67W2DXScmF<RVu9?XcIi=0!,qKIB;m2STCa@`S`fj1qs0SLEea&Q!>-bWqZ)XOa2a
%UJSSdB[O&_W@K><nh3m5Q)'mB.-)iaD8D,Tr0G.84(h0_\Lj(c#kPAY!1"qA\nn(57-_l3+bQWc/`^ElT*Mt2q\Zu4m0)>V,dnPV
%GK`>t:R-UoCQLhq$s"`3EF/,u"]5]M=;FUU!DR$.V^N-7o.+ps%[`#X;T+Fi##<:m&P/5aDpe[re'0:6_F%IN8U\\"AO%H78`Cg\
%q[*9I.W^TL8Jqpff;=\i)_)066Fp&Gc*HJ,8LYTIPNVbW=p-_cTfCjV9HIPBGBtLqBUCc9d3Cit]Sr2A,6Z4-!'-_8]Z#%_^F^d4
%fN1pX:53FU@9_Hi7mV^\iZ`@>R^Qqu?I.,(m>O:]*?XjbB_r]GMJS"nqjSBPe4?F!;Zt^NjA./bN"Jrt=?s*+l2#FuTE(:CZRo96
%Jf*'<O!hmX,=43R>5$j]KiX:)^6Oj-qT3tjVYR9N0BN+*l=n56&9K\tk67W,4P'D%esjNNGJDlQTqLfWiTY7)GXrBDIuHqhQqUSE
%D;hliHnUkY,EM&F2Qfm;+huFSE+Jt78_L[)6(U@K%9`+Rr-50.,Bdn^a$W9iYc4P@K99o6Au0.\_l;BKTdRNhM.5IFaRLIL_7#[S
%97_\q8r[J?a'qQ_GjGhbDeELuCO/UcAq^Ug@Yq7c_S`QeUdq:]Ga>4r=^f1JY>U2GGW][N'6,1WC*l$mL^+GXQVIOW_*aY,[IdrE
%4PJ8`lUgSR7/>.%*-hB**Q]jf*-cG:*2m!I"^^n4(r[@Ki'hK9WW[R"q1X`)q![D]!r.+1Ig<ALO/K5>798KhT)9((m:8s2Eo0GE
%Gc9,9AE*lp>%,-Td(u1djuWdkPjsSJ4edYG\1G::KMM.iXESq:R;Ak8G6W4FKB=E84+fX,\MaiaSUie;B_i,*SO*:[pY?2F?0_Xk
%\'j,!4-K)Z`-U$=.:9'MGHI-Z`l`R^ILhSP%2nV<X<k^s/)_MrRGcmLh]9?ToZN6Ymbh!9`Nc`)_$*G=A1M27,SniJpQ/kN@Y9G9
%\F)VWLcB@M]#1s'h;F+RY!XEWdYrnDcBuan4s[]q84+Tn?AS"X1>'#U0\p;q>d6=Z9R"!T6u,2!]&Vs=\Nj`;)b>]WG9XJpB=d-H
%Of,fFfGW.18b\V;c2co=<"T"^j?CBE/6mD4A41Sg@Y2B'gE#a:eum/=B7LXhhg3@e#H:N2(V2[19@?u#e(m;6'bDV$]6mjSWG&-?
%1Bb6aDM@Kg@\FVgFE[q^#;4#fn'7$\T%%gK^,puB-dqaSmg^a=m,b0nG<eqj3RF/]%Y.?H<,REX%PUaHN`l/F%!f5$_`-Yg"3d!k
%nL<97"oNnnG)%0F'RS&I#Cn-&VcLAj")o[N5=]g>L+U.3Xd/>"OL,!Rg-U!ri6n7uFA-mka:DuO:NpFY"@o<#K;;NH]:SC"D:ldh
%05Pi#occKVOR:>TGn;I&Yh]oIN?i\$m>a=Ri7]$Sh'(%#9%6IVB?2i%c:t.I6ct\`p*7.1@(sa<:qA_Td%q;#\iW7!U#1#eG@sH/
%%s[>*G@qo#p<3m"SRHrG1HjQbESA?/l0]\a&fqn<h-#n+[@sM1A'Wd('t-2G(HLBm?At[Dlg?:X*MF%dj#(;X,9d;j-C!nXfSW@g
%'Xg)c=L1><-Xm;0Q0tfi=/!6iLW34E<1?p)6#/,qGPqdS\Xe\$+?8UuUl#1/knFt^b]_#e`[E@lSRJgV6r(mJLG+k$U.9$DfOKMK
%Y&&=GJ!'_LA\5:ea+>`s@_4uRZ@oXogE!LX,b\2imOZ7Pd>uuK!"3ALf(Np(^g^i"F()Zo0Ze3tm>bS;_Od\(?%?mX#\@GV1[Na#
%EJ<i+32a$o6?`Zkl'ecQ]/+8WTtNO`])rt<&0)Cq4+`h34DR?/#=o'8q(?c5,/Jtem]QTSM!ba<&AhLNkjEuP-5j'TG6_D(BY>Y%
%4"+]Lg*h&ed!MRO):RF#oHN=#V7SP%&5?G+G@q0j)VPq;42Z#mJf,.,%OVQ%ZUT%\O@l?LiOe,m9Ec0F4.K5;V]><aiLCRSd)(!>
%]Icu^jh!<T\a%2Q6AC.e1%]j;r/tmg.XZGpJC]]_iOaa=-hgj,]>IJtbC.<QB2H39-F:R5#IDIU.^JR")49>WJ(jMM+dnHtcZTO5
%!=>Y4amS)LZ_FI=h8'\:[5<E\DQ/g@Qnd'\cr['8kRJ"D7ct%>GHg=@Z7@bU>]27g/9`cR]]hHE@OO?]6]*sibb:l01>JSdQ/k_p
%i"!aN4.o+AG"A%*0>,ZdR0J$HLdmEgm3$#WIAOE*`/noMd+atcCoS)\*Q3t%<M?lX80J97]$T1t+CsUZH96Kck!0<d*UF7KK,/Jh
%g,-s2e$Id0D\4:%Q/"!Ve9`@J>BAhCMi>;m"!)b0RW)bS4'9It,cj[_0JeD_\X+QnE?C=^@1NN3,R5KX'7ik@n!s<=h;CYP3]nU/
%`>ujjOOlarW_-BULI5JI;hD%F_':@IrCa5OoDYY0?Q84)5a&?<4gQ/Kp'alVb%t_48YTKI1k&9^aEEj]ZQ3JD#/#,FM5Oa-@QQpQ
%6ALMVm9jjU4KJmp*W!j1ZDeDi_0-9J"\D'j4+][1`'en<+A`3(+g7I$PZY1GgT_XMoXo@EY\9)CmI87DZ)Z#kXA]P4@+TPlZ>@`*
%1#&t</dC2hgBg3QEoICk-<tblUIXJXar/ko>_qbUmnDM)-+5U'n"gb*42W<XPFdXK6;*f%%jPCB>Y)K>o%Lp2&45g%CM-1^i8P*I
%*@s;`m/G^+A;EV4g^:6U@Bi/cC$fS:^r3:\Fo^(;+2Y/,g6kk#?YSm9&Je9re(U5:BG'?^edc0/4t<ZT,^H2oVmV.FJ/(P\FtbKR
%85a0h+OLB4V6r+t5O-sBcN>93K;$ZG).q9T?(nZYrMF9EV6tro#_ADlg(Cq4hg.t3B>E_s$Krn8K[`Z2N`k`\.q(WVZJ&/WU(OH3
%g;0q"K@-(;c4I.i90KDJ!="*Plr.BO6K0l;gR%&k7`j73WuWGeLJq=B$uo^>?"(/$6cmDJ=RBep&3m2!g)4ALRMA^^N)WDQ$E9Sh
%f.pnp,di8,(l&Ku*RW3;lmetT-&m3d4fP!O7,ipM%N[j(s!jugUB7T4=%M^d$VRG.OP8Y1lN0*@Pgn!?*^6]Fg-P!ukUGnX,nX5)
%BP.UdC;L=QSKWT-oKArihVY\7l5AtCcph-uL5^9i;_o4Z4%`%s?5W&Xl$QZC["DN;>,<Z\SB9^?T#a,`7QZEoK!(>]`bC[P;VE#8
%&[U2)6tp;$TST;>["J7tp:SO^a(p243Td\)W)"sec-2.*),;(4*9/ZB2T(M&mGJsTj\2AT1Yt^ZAYlaiK]nA,L!gJ!9g3CuUitD?
%*[lMJ;EK\g,-fMK5p&Lm>ju:oJLV7Lbn7&u`0t"5>!#9.q7P).&X8[iQP$DAhO=6!L"?e:@i,'1f8f9]fCB1G_6D1K;&\Q(_n?>G
%2km^t"E^5h5"]T\'hKO^6>L4#a_;9"m3(e*e+L(k&j#ANm<CTE.6/T[_bqk(Kp(.%?D#3T,>pTCC9.rGUiq]eO_V7bg)3r^7_;!%
%#F'X(0#U(kL\V[^`=])?8VJLpYhJ'6;J]E:m1@5]Jaf&W%WAKAG=lWU'E\Z]'k06J'!PeufZpi2LKTK$LggA9XV0C)hXF6Y@q%OP
%-'@Js&DJAb-Nn"7fT(=mKZP/FgT_QI`F+DP%Ze\X3irtJ0b?k[X?p_n5)Q"]FDQ6_;e^30M!\Sh=T[\"@QT6a8/>3^mF[n(`pjYG
%*BO#\Hrjc=KVN!ASQ?uCZYZ5`N)rekLZfE3dtQB`:$:T<W5Nl?O\"D5*"gpk/.q3bChF$OVY-LY'I-RO8n!G,NeXe4Y%P1!b_<[]
%1YWe!o>,Gd1##82N/2W!Ce"g;Wp:8'*MIGo4C4EB(`$X%W%cs<IQV=]BLTs,R*h)qZ7t$!6?Ja?CaX)k%0$d)m4@!:0EK=47plSo
%JW6)bLm)5RB2hP99H@KL0\c-XP9+qdCe'ADfVP1mNm6us2^;or[#]LaUn68"#XUiS1'It(.1u.8NL9*h5XbOc_JD`409Wd[Aih1S
%amFl-G,/OhQY<)$A$6BqfF,//hBNAeiK2fSrGJ1nWU6qB"eTd&D+AIVI\/rD-^*P:C-2Do,XZ<.6MUoVW)D@^KhOJ<L=CAX\"pf<
%Aiita$e&`s[UYM_phiH24+%LbQ%dmdW(#FCB=>]8fQ1P34-['Ani[at4$Jn\.Bac7k@ISNGjX.C7e<PIg(A4liV5`U8#@_aL(Ua4
%;-\r4>+"[o/?Y5e[HeJV=e\F'Ce%:-&E*(Gdj;D*s41-'M$(oo)5XbdSILLg$FLmG$<U=lU:):]7q%MqbTVS`Z85P'm=ZO]F"?<p
%!'t%S9dR7^Wi\+N[p+h"g_LKImiFLkH-m!?dG#7KMk_osFu$&Lb"?RW^$&?K--IV[#n`*M$G.<-N+i))Fup<K&P[F:Db!h9.B$0k
%3th"hV%ok)`ZEeZ,C2HJd[eDF=KW+b?akR6gT?P/r[7B$dbEk"q/cPm:]BLjqt%d"]b:PMK'tn<]_F7CkW07>ku3ih/Uti;)>q[A
%%mGK\Ir"0'Niq6PI9l=7iTJCV(](U0fDP/1ZhWV'#L28_T:^N#m`>]Gn];aJeHgT[inIi0\,VrtoKQLPo>3.E>Q!*&2iF$uGMdlB
%jFa?:0sLipiOo.![MA\f?VohVnD5Y8Y@!7VQ2c#Y#Kt<OkFd/I4'Wd-I;K5\PN4]r5XW"R"8F!,6Q-dY9F"*Fd)4t)Mf1i5ng=4]
%;6V67Dts"J9/]9!n1-`&o(nQd5H0im^3V;pDgDbK5rUnpjVsdXr\_=ePTlHdr*@oB?:X#j0l<bS.4`Bm]Md[+j+p=+5%9`=q,i[A
%Dp[MDU'rbm&_9%VfQ-/1>!\.d2>Xf1+b5:qhfJI-6^">;?7nV7BF<g%A]%M40(d.2iPl`E2N/CZ_jH9D1WW(f]L.tM3s7jXmH(i6
%FE9WO'"]*EQPp1XB9+N!I>o]u9^g]YGj-2QHPr+7bCG2G)dX%`-d@h]V%YF1pI<$ibOk@p?Da"-a0h72\\="7CS[<?FE'Mm3(][e
%mb_,+I[MZmH^W6]\'\sZjlKMr<om)^&U<nBb[bu:_qF<FUU'&5K3.U?meab+>TB@h?S3a]#$ACcc+j4-0[4G^KVOEa6a^8i$ngI6
%rGf&-e=R<J<W9Q!%V^#)WT\0sq.Eo\S`R&II.3c.7.*QnA<$?eYJ_Gub&!aIelWOWb+5OT8O_h-Kgf=Omf*UJ#F=7mJ!V?_\[RcS
%\[?dbI+,b0NgRi\<fpYcs#p1Ng+n<Bo$:[P>XiL:ppniB$c`0a&,"a4'Dg5;a.ipf02>HLMHj-ijm"=!^H+2\&G6!E5*h71#8@.r
%q!d-/[,KkJb^d*J(O:N!i>;Fhps3/eaST):VNHB+qEOuUQd`9gX!]!:<<!BUqkJ'oHh$pnb9d0N[`WO`ViMW9rp0LK,6-]Pr.8"J
%hnQd0^88B2NVfd:eS@odT:Wa/>)GCL(E`VCik#.[r7CTpDjL=A&">cl]SYSn596B0dqaEcEX@sZYK2e(7G_Vm6ca%k_B=:kI<kd;
%_Edb)r>s2Kjlm;ZY:#:+>e$in9Gu'h-B-tl],SWKp]%Q^\N[TPGO[H'imHkrf,]h6't=(t02A_.:)MaLl<TD?PJ;P?ak<08a5<<>
%LNiT8_PhG$T;K<l^?NT%G?<\:4'Q$]/8q-gq:2UR;/a14!SQ5JEUiJpMj*JeT9`DVm-s"?NToHnlg*$cPAMdt0XS=%m[M\38Ri]F
%]ed(lX9l?Hm/,hPbJ.:6s7n9#eL>/'b4W@b*4FJdK=b=$I<RU2Las9:<&WLfg"c5F[qkp'2n(5q_)pO:o/larV\cglP05f-X5iNh
%WsKlE^N@4lg$-I6h)II=E7M)qo(D+VX-;XPYE%MQ5!>;hU.GI@q0mU<H2cssmHO;NmIEM\6-JTf(\m4Cjf?A@ZR`L4hTtQ2mHa>3
%?+GB(jo"Jf]t-8MNlp&<Q`"aDM_d<NX3T#GIQ;H_@Oe];2u@X%0/rcKZS+97Ed9K;m:5YJr+#<[-4T*F]X__aCsW'jm-,KAIp/Fl
%rVH<Njj/#5WZ3^7s6fW+fiM8<mIeXuQTq$Up%&<A@!MLM`qB;`]58qG!F*fu4b!/!mHO/[dItuT\(s/T\\4MRjM'F.R6+sg;mcDE
%*NJdHgLK][fB'&7DjT'7m"PW!lX+UI#J&#P1Z;;YZTNMWG'ruGJ%`D*=C+\s0^CsVRADrmI*XH!hHh;]BmfkTFu?u?Pn@rl?+i9_
%=akd>Ho<:D42-)Dj#Vf_J25T;bHoBmJ,f?;G)(BS!<"ZiN,maUdson%YRA0i[r&nX"q#e9Zt]4YRq@7ArSIo[n\7/-LX!27m!6P2
%Bp^`7l#-GPD2^,$:G8kX9T,hHl/>t/CH_H!W-UWuUZ^%$"R[,jf_`n.jF_#-,'TlEmZute2[qIW/,7Ldp_^MS=%d>GdIuV/EK8%H
%p3R5&JiKM[pq?ATJ"36QJ)$a74h`tjIXSrCSs"jlW0?`]-ct5;M@Z(-hiWhHrT3S6ep,Ac3$+q1I$[CmU""13[_2HFM4$IsCM3K5
%H^s!R6/Q.So!trCc(pek4c_T@1KXBg)pQ[/I):Qam!4`>n"sgZq;p_kdFE:5^D!n:O1gRq4Ia^(IWbSZo\G`b>V=g^a*i5ZG!%(;
%G>NbNj!lpU0S]=AanBj.pT6Y$bhg"FHLq"(m.,o<7aN3f+gW*AHStL6Ph-#F@.!8^B'&\)H)H^r*d1H=fY2:m$2Kn)g#"mTdWh]"
%I_\sfP<QmuDi@3=h*7UCFme\LZ0b,,rra#85eHp.TAmO(beZ)D0Sa]<*&p4"[Q:1W-C@uJ^Y>4U8W.?`lRX*22=UQtAT]udC;OBH
%U9/U&e<l?QI/a!;iaR3,p$upE1+d+Frf^WIn#Hc:[C_K<r?jZjD*C+2qr[8?A9ko%\Gkjibs<C2c(b,KZ1^[DqW$u#P^f34TU#u[
%>)DUX>!G6s\!rKO4UCfMq[#!b_`=K8!&41E3po"S/jHs^WU70DS+J<+IB-0.>Wt]kNsS[S_qF\r#4q'%;^U!:?!X$t.6ca&]D@g,
%53;J!PXG+aG@P<p=^o;D)`X7_`80LcSUHM)6[:Zq>XtsNeM(<(/7NsKH?M3K54<<3K/l$,=<:8:lT[Bn48J5`8pU-gdTm=IippQq
%pGiGcn@KWS5)+\.?G*=I*M<:Xr6'aVP`O2Wj/\#lX^&E;+\f1bL0q#Er,[nWp5_,GITM07=u*fG@=0_8SmJ&g1hgXrd[b\"`ttZ:
%P;^d[*pO1U!AN9WG-46d$O?([0iarA)9ee-0+PK)A^Y5DpPn\K.oE2%jNXML3jq1#7<uhQJL?MX(1kWr%cun7n62%_VWEBYU.e`i
%qd59P.-uMKa&IsPAMA0Wb$9kq>F[U4Z51FW%Veif.?T$[l]8%]jlA/HU.cHKTifg"?AgT'>O;5fJ#p%+-]b5BA]eBjA_5gPQKA`o
%C*nAP4(sUZI`oV5c^Rnm21LJ#"/e,K&+Q<2Z-,(N<;;0>r9_*lM$`e04\(;<nbeggnXGYiFq.XJkfB+ZLb^dP[CbY13:!sY;_[OF
%=g-(rm3)&TT<GP22V0":\[KFHS[I1QeUHCZD)TrdQ*E5_[99R/Y-lt;,P9e%o%X%",nm06f;<'h.KMMIUUtH>1iK,q;_W-bGoMao
%9P>2M68bJGqQ!0kM1]SfAW?Y+W.hrJrR^W,bHp59^=ts"j1_YWdu0R9=/Qkh\LL+7:iDZ?f:PgTg_a;.X&&\MYY`Q.YoE`\b16(\
%E[tP6Tn/oMI02HngBTNeU!-mm%ksg6b_m>FA`M-l81;*tjU:[bD&+JZs)&VJs*pR=SH&?Dr""^@l#GCI#BCX!Q[LZL*Z(a3DrBjI
%VET2:dJ1NlnP:+Ln$.h$8++dn4m0-F/b0R!beEE+PKWPVQZ'2Prl)KdHKnSsZX#&4k@J`?W<FWeM145\68SNV\7fO&O9oFL2U9\e
%b^PU]>@),&#/<OsJ&3&"khI8(W,ds&:9S#s0<_:D+:!-P:,_qBrbT7%TlNtBj9'rd5)M_u&/,Y"r3ci/$oE2)c2$6Ws1=p!h]2\-
%mb:p:o=oAGGL$6&f3i2GN&go"kC;[mn,$4Ja8juWj,')_SFbRc!77=X9BMc5SF`:m^3;KDV_5*T-UOMfY25QS0u8E#IJ)m]gZA%M
%Meq*P9\DFA^Y%*#IT`85?2f6K&C4+$G^Z,9G^9End0V%&rP?d\L'amXh:8QB/koW:j3.1%p[.iLWuL"0*D2Mc1e5XL#h^7ea;tXn
%ll71<,@kkKm(SeC"Cl?[PAM;ncGO1%d=;)3eT,s*EOHLH+6S:OoS:VNIlb8*>@)f,[=%f?jjin?f"C\r5MO.3geJ,f*rk]nq7Gs0
%["G,b=K^H0.Z>$qZTQE\Ri"@/>eB#Mc)7I]fj@!7m^+n6;fOX#W3SV2AO"-sJ$V8ZBDg;Ps7I^C&<js]lTa'jGs,RXPde=nr+Q$V
%]/rEi\Zq2=H8K>acJbOh%AW9BSb@O!Ro5dZ06?&_%_U#:QT=Oj#@?Q.bAV[m,0V6^(QH9cr\=^bp=TP="#"j(]^/BD5+Xg-]a5g0
%Xj5B]8!"c@d)=sYV7i(N4pN'NWL458Cgmam_7kOr9E@/@_'\kc$o?PSNWqDT_J]BL`s8F2fTE:brT3S6ef<7g3:?=QZL<S/N5W(F
%LZ=?3[)[s^*Smj259QjG-jOfOc3R+)$\@OPhfVCqRaIIF[7l'/3(72h5(7eQo1W'RfXgW$TMEa;q0QTa*.0jF"JWu(':;C;dB8ed
%PVHu9#=`4uf=l0a^"6SWY?nnJ?=Pp!/RM7PabR=f^YfrYO$:AVI,2j-%.)`8H)tQ0Z\S8<4LD"5r8I>a3lU76Tug_j1LUhZT>$gp
%:T)h3CbTbL?sYLaeT01JG;Yn)$Z(\d\3kW4pD1f:_3Q0G*$`aKN!&Wb%R,p#5(Yc6PVLC%N4nn+%rKY=EJuo<Z#<u]Nap:QN!"oH
%r-gc8lf1POA<5P241XP&Qeh-t>TKGA+.mt1Grhe1>^gn_JElOr(4GE+h>%k4gcnMJ2]c;<X$L#rIXQWjIBkGN3:`e`h)D6EPK#Ml
%H<5`7SkVHiqYp9Wnh4(fJ%f,nS4rJ.<j(?1fM3b]Z47*$H-0M9]@qbY5XSKDiN'$&o-r5t0AG;R-ErnC?VWW)/pB73)(]K[*B\s#
%c!X*VL@khgP,;>I1KMrDTae8iFr1(e$Z+0W"b+12GP1pHZb1l"1FP5XT1k(jm'(nTP+-D5U"[+9H-Log$+BXO%_pf"Gtd=+P6Q(^
%j^(ji1DbE*7k12k7)%E1_sfaF/7%.FQ5s-SIR4(Y*/N4Om7AG7H+]8aCp1l\[57]#ZS/fb>r-hKZSsgiF0deaHZSL?pcWqE'<K9q
%m`do3b,Pc`$F;t+?iJi6:H#h+ZTC+XF0dqe]5t;?pYf'B(`^-VQlN\/K/jd(DV>/]?+TuRl2L;Fo&UB`a&A#ka6q8:2U[0`T"tiV
%Yks`EM%0(^63DH$\.US]k):g1J@H4R*8KRO?M=P`Z(#.n=Z5>o@/8]p5<D()n`,=Z0&IY@S6l6dmunrLDm+XNRhDRKlZT](-Ls\L
%bW_ITSjV1#J&/u`aBeH%U7:TVI'`Q5cD_ap[LRJZe_Ur&nbM4nD3(8A:KG`l-c_DZJ^N#[>%eR=V<")k0/(CE5/m8!rPbp/p[d]B
%8-EQtGQ.4]h)HD4l48%q^'U&MDr4j63^-\A?'OBmB*\-3%:_.FmD5;cdtr5iH,/1E$%).9Io"DJ9hM22.sLYpiriVcj]VT;`,PJ/
%g0G/E8pU`04:c!eI<s&boYn1Bk+<^c7Ap>qkTP2<f%brO?AMP[r3&&G(X#C9ch^H2fWZkZHO%`3r?npc2k,!*6dtHuUrj3JB=W4Y
%FZ,*e_C1jiU3hBPY>lYaZr-JZ6MQVD5l"0Qc?tAl_=%'r1_UA5+1Hfa$pOqKg1(ZWa)0Fe`aEsKL+2"g>A_5j%">t30LbU4\3n5^
%I!'c6qKt:0gAdg@aQW`]rBD;E>7pGZl1LC`Vd&1:oAR4"#Ksh'N`225HoUQ7>+,uB6Z>j3i..>HTZh'/iLc*b(dXb8#5?[3Go5@W
%38`a^hr5b[`8dTMIY<MF1Y:BT5nZ=mK\9SGHOe\?4)eROZY8tqS,QA5[sp@9EQW/L(EUG&h#!l4r&ESO!m8MK**Rj:^OCMs7FM9Q
%$+BGQG14LcD`.'p%)0ahnaZ)hEP(!n#EP#;FFo4UpE1>L*s5-T_aTu:17U"HUOLj$mf!:mR<Wh]FmlZn%Nn8^#Q&T2<<?&)pd!_!
%8i5JD/g@g[\(UYTAu;f-+/D%_r(n'<#nLkh*P=]:fG+%gYEi7>3PF-Tr+"WuY['pnA6^4+J%#99WU\$Ve[t\3I#7_2g[.n.r8lbR
%a]A_H7\6GFZ^@*4i@M=M*p,46ZSFV<<HbauiXi[\^_-A(lM0B+X!p^LHar2[?0L=oN<X_OosgLMGn>/+I&,S%dW=V^e(8$MgF$WH
%Z\S.dlZFhbI$bPi#C;"aOs'_^PJ<OJ]0BZ8XCOkd"c0nir:8jjHl#-!4B;4)nqY\PiP.MNi:Anh55`I)Il[Q.ngqOKroBD104$2:
%?2sFdZhWV'#L28_T:^N#Y5DY5p]CIqWdhb]"b6Eaq+q$SANqhAZhSA,?iSq5?KPUEqpgl@SqbV#cYR+OU@U9,lXF+h6QDTb/0r^<
%i[cnAZQtl`o;q1c3u3SEREl\@nFsUUKkILqFtpRBgZ_E;cW;!6+&\;Pjo">j&D-A2&.Y<s&GPWS\7lu5qY6[Iq;CI`ba\OnkVX.&
%LO[(SVgc2OiTg4"Bf>2k2P9_>RqGH*)J^/61Da6L=VP%&o1e7,r<VuO8,8W8qolP+naB8s?h=M2b0P9W:n<N&U\k:%i<>7%peh&#
%+#[JtCs*'o&59k]9[i,?a#h5\G6gAh?&LphYt=^X[)iQZq"Aso>N\TNj]gnDo#rq]lc#7+<%cF:*CAr/6CmH*1=oNrkLq5O(8IAQ
%<,OaaldYqUbJJFr)d\EpZZaZGE;9?^\:<,H:&@5YNBdIB0DN2PY"VXCo[AFS[41rYS7T..O,VDD9AN]0HG*YORqJ_,ALlt=o<MSm
%SiE+o]P<(7dcf,l][uR3&<8tN>^tAA:$\J'a8^PY[(P>nr3sF*q;C_I:VM8QjFau;n;iKGs)YN*Wp*I4:\g;25&2*UnKIIhN8Ekm
%N-Y$%Y*CYS]4a/T4Q#2p0g/1')p:Q,h"=\6/QN=Y-/#pD>H5!;%^do,44G0S?@Q7:_b9Nr)J?THc*P'P\@PAj>)e(a4_nN,/(m/Q
%!cOR32'MdLgpCc`lYPGb-iHf)=&&!BOZT8i]G"(AG%.$m)b')34N3lZ%Vp=8p%_[k[n5%;s2V34nn'dVAl&#(>RDqG3S1^1=jqF=
%AgO'^jCr^]M4+:PnlN6UL;d()Sonm[FT?96h3mgU6?8!&o*R0S.gDWT]$DJP)8H!F$-F$A,hTccgGUXD:>YlQ8!>$Qfsb,SG2E#l
%V\&XUWi5rXaifl.3dTDe_<+,=00X`7Q'.Dan$&mFI?pVpFBc+t=X=T(b\Pm8<t;Q3`fg?9g8Olm-!of-fp)7*o@89>5&9^UiXO\L
%kS#g!ekiuQ+[pQPeob<pEHl1Sm6Ktq9cD3b/G!r4)X-9HcZQ#j1jOp:#obDUh;gs>b"2-50[:IDDm48%R.u&[MgSXeT!a:k*l>pN
%`Ps>h\RB'm&K^N::0cL:^IQc8V/89Vh"oIEe*,N`S@fW3nbE^kHfSb&(L%r>jmpTYmIQ+LhT?eP_p7;jcBE*QZ1oq):DYti1k2(C
%V#8u[*1mD(kCcM*r>p;Bq6@ctO5dCNo3%27[i$jd5CAfGNU*i.onVuS[AmZ4/l(?Q^:SX#Gl.@4c#Rf!Vr:F]$l8AW>>GU<@]OB-
%2qE-[bh+:F'faj7.'K2NL=$+8Qff[O1r4.=jQ5;?QZ.H4edGKT>.DP!GG@g;Ap2!hQM!m\XK'Zar,o<IU(:hIjbpI%L..JRDE]*%
%`6AOP%IU^]DY^WZf#nNnc8.r9Od*KuDJdta%:73=\S,j9E:0.=(9Li3-e'e=oBPpd]66VF5/IaJ/oedsXL@\i@)FkSmP('8Y4?B*
%c/rm#@ea)U-.cOWGL)d<=oVWl,#43nNft4K['f^`\DJj'H,NbB\Eq5-6<Q/@NB82o/e86Rr]Qm"2"dgkcY25[mp4N,+fub1\*T!"
%7<e'[+ptV,%p0L=S0kp`mjNXi,*&@aH*W`S(AhtlmVfC*D#-Z)^Yk#SXH<@P%N\ZZVkBngQ:nR*DH1k1iZdj_VDnUOk@//dbP[)F
%)L2L6M[;='g4#eZX!,?@>PY:ge`_caZa.ZQ^Pd^U_pQjZ-R\B.^Uh)Gb@dh)^"(?:a(GjJ=4TrKZ?U[hS`r9:O?MEIFQVW85lKq?
%*H,,?I`5bZ?Z@^hiB(-q<?1%<e_+0FU"O[S/`Q+B<:TemMOS[JPPL:^atOA`nhu7um(`qoL3(b#m9i6c2q]DCDfW+"$tf%WdH0I-
%%>=64l+`Ns?S8Ng/PiMqRe;/j04(6P)[YtUY<QA:IJMpo(VO*<jmnh+s3F(c_2l<6*hQ$i%fVm*EF0bo?SAT8]!'FT"]dWZnmARq
%?iIfd)r"RVj_>oj?X8.[JqnjN0!&FOeaeLE\(=^Z8:rF^_&2J)pu6dOGPY3i\ofL&K($U6)?eh0(]<XUgXD?H,WLP^kE+UA&q#?U
%61M3\6@s)B8C22`$+`J1$(B*^_)0jPpCn5K^MuduBl"9Oi-dtE@9Q4+*J=Rar7DH%_(C_5OJ&d#61[>b_=grc"?/gR9B]h!&WAf3
%#fc*@_([knf`!c@_&?Zrf0aVVO3P(bOJ%?jCq'5<N!REA&[^r&Lu@@7*_h&6,D%i)LnL:`K"jJnkVkp5r>ZE>,D,Y-&`iXf4a6NT
%)+Ep2lNcR$+2#IhCQQm+ff4p)NipYp0Uq0Vb<6XO!b7oQi]PboAYpd`,8+9(8)#T?PL]GUri/'jjA(`?XR3M$"%%-"7!VdVVHamA
%.f7A!S(m46:#NJ$T.a=B)HlmIkYu4?6i-UlBhd0l-RFG6f5?[Gf5sUPO;Do+FK_(Q_[UOL#Ob'Jf8(j[VCsDDb?HXO@c@ih#/d/A
%.a3BZjWr'IROpJ6r5pA1o!["_bD4B@-M5PIb-f2,b\(L-AK"L<?EDV'KW^4(g"Eg5b55>f$ardhhVn8!?A&epVeAhlGU*LsHh.h!
%0ARN`-sl?^"3oi,)g.&/q9SYl1@%YtOi/*ZW3aq>;Nr&NUWdNF]]]+?O'u:kYN:u9/Jh)1.NKT`l%b1f.6?9Qb-G69Kdu\skdYG4
%G.h>PSIZq5S8T2_2qU?4Z_AD&%gF\LmJQrhr`Yd8gNgMLitpCZa=FRHQuf>Z2?.asQmKD95@HHM[p7\KKp]Fil(3"WUFA-Vq&$C`
%3`9;!/o3W[m5?k%NE,)n7*?LLlU/LcCV%JW4F)$o4r6/9#?PPt'h"S"F0B@a7i)]n^/n%B1VHq]=*WTi<F_kVh!':6a)f;TJmd]]
%KWp*S;T%&$)c;l1Z#fTtlnPppNb2KC$SUhT)XrP\%[4RfdoE4ZADcH2.R,go?aWIQA.qmeVpH\:_>p(iUhJb^YO[TB^oGRBCLrP0
%WKIg$IYa0sdU`*]g]4\8=I")VC"YC]<`c9#X$5C4cd_%CRf9!Z]1FMmVlID%EM)-p9raRsEh*K,Bp)Y1=^-.`k$:ilPpXc;c7t3b
%$;fcbSggd0+gNf6M+0'@W;`";?PCtQ>ncZq?fcRZ-]<E^j,:qLM2*^*J$;p]q5U[)$/+!6!Z=jQ$U*Aa'm_7rd,fQ:g2[G><B#%Q
%UrC@PoabqHaX7e7H;5sf/s?Xob;lISk7m'K_OOPLKK04B.Ap!YMIB8rDU'\q$A,t;.5[N8$Lo9[$@]7TSALQtr=(c@[KQ?b[%'Il
%.AnlmYt(!".ldb]2!,L"q`m/qoP8LT>X'0j$>*dG@Bn:O6C=?Cn<7o#ks9@tYlsgU)hRr]$1>\_XZ6Qf0h1on%7u7MEsdAX;n2^7
%O![)W8Hjih,cT_aUr'<2._&2E"ZIeDk+ojWQPm\*0\*bgP[J/?5EqO[+(QE0\:(dR-r,MLSgNa&fLnmF"#6sE.JKMXQj/OQP:)#'
%o+"m9]tV^*l#AB=h#(!C_l3ruX$d)4RUS9hdl)=WZf-_aQL9&a$ANSaPHXFDa`a>8@7?QKDehsqBH[%PLUKrff8VU"j@MmWW+I?;
%6A^lgo;\gCCmmbKFN82Up<h*cS=>\f^joD3`'>D)T3tro<e]RXX7AA6YJGBMP>'D]D;&)%qiuGRc?UFY+:f3LCp?$U;*,VT01r+Y
%GRY;>'\>R!\]ZQ^j&luH[R9%ZCWB_f)[#HrPd9]9i7g+8[U&JH%]6<X!HquYr75X&(`I7JY>;aud?OOj)3;m`j*giD>N8q34#n8Q
%::Y_I2TR&;>e1,K5$'#WKofa.C\[L/6`9e;QkES89\D*l%3I%-AO!?Ts7Qt:>dfu8q1..@aiehM(X-VPc_;[a1d*4)_26HmW.)R!
%Q"7XXo<kaE<X^2=K.hK8I?/9\YC+.Y^;3P;aB73R>O?k26\X;s]\B.BNE%.*Lje#(&a*YQ]ko$EkLQ_k'AQaZenuQ-:`ZaRiJXEg
%ZF-2@7_!Hj@8bEE:d9(2r+,JaD9o^-m)QZ:8]Y"UCXukDWNrSACt43IVGd`j]FA.Z<Tb,dCjZ-;<CI=-jf9S#<=u.1HM^(H=%1n-
%K7Tk61t'X%qWljY<B,H:.Z[7-#M$BAZoY$XX7*JTD7q.]4oKn<R^KjP,X8T*rhAI]<"X>YjO`.?b$Fjgc+WD;r"T<Lm#[.ChE!<9
%V!'$^GVA9OU6"l'j+)GQZ=ZNI\ZCk'WfPa!?i*$eoeRs_IeUsG09<rUr]o.u&2pFR6C=8R$!S#d-+5d*LkJJ?Og$,X&iSi><Y?^R
%GF4U/#qPI@KFaOfn\__ihiJUn^L::kCrqTg9o5!U;`H[Oac+j]R?=l`=5h0S86pIU[p;XeKItl>;O&rYNiXnHEebV),@O5s,](P`
%8?cJZ6P?i'8CE5,abGN&cdQWl,a?QYG2'DU8_BO[i<uic8QO]A#WF,'_VjLgY=qNsV>HuTIn/<2@4ViC8/\N$?^.RC@BN#]I%2_o
%@<8kFf&fT96t9#fF@eA^2Ps+m::?<<)16T`g`@E(0Z(sJQ&NhN/\3ZJ_YTeQ2N4jhB@>U[cD9"GL"h3#ZBDgjIEEgKl@SQ^D&F"j
%$'RZdjN^O`RefEDQ7PY2`'&AFL%AMh-##`LUap`0^Al(&/c?Kj:R1SN(OeeYWc3%Oeo(oQL/%3mYU*Y>C;+6*K+U!f9YrJndW]+F
%]-1\D(E9:BiL2I;:#-A*"j(#Z%8@[DOri&)@4Egd\Ik.h[`>O0@;L5UC(j&tb^<";OtVZ]ng.^C_B`s>R$=9*-tQ:3cbku=[)8,"
%hhNACo@6$`he_%%D'Ci1.qoYk-B6J$VV@7lkr,A4<eTR=giM0p3DEnK1b"!<#&09%',]$NO>cWt2Amc7mf(G*WR$g)M,o_-9c\Y+
%9:FY_N.FMg=U0R9aflP(OK]RXLK2?HRqr]22n>an4W?bJ=nD\E@GQcT(>/aFH0[)AX0KqK3I/0c'(ii5:`I#q?2c)r<1K6.mrrls
%rK*Mi>AF),T!DmNe*JEjEH[Q#1l[-WC_8nqm'?@oe*LPW%VB3iSTQm8mY:TZh/^8iZb+b]\;*Ut5I5gK-esUS`JQX7OBh-(@_WOc
%DHCb+?K/A^T%]*X[iaC9Mg4mD9li:L)7P;;o8^rLEB_V;s4Z@%_"%*Zp#TG-4dTO%jk"SLocl$&Sl)(LQd.#*1Wo<JniW[0cR@+p
%<IR*+4O<-@2ae;IWVh'_m5<G-Ytf+fY01IM>5rj\,+Z#%$!A@ZIGo51BHuTC2GI,34G&h^*a?)X('?]:Ps$doYf:R:H'h>L?g@+O
%*\h]>_GZTm.tfM/m=C`=)ddKOD(3LpOk:.]gLY<PZNGY)Q9?;pi_e*>%'jNd6AqX))L*TO,6c#A?`_EA/-SItWDCufcKN5Hp:SuR
%"h#J3j%!2h0obT4]CeZ'L&,,%c?H>LGd/aEDr,483K6`d$N`":)]-V;?(.DZ-1L`R7X3hd+q-,jPsfmInfVOC('`6d0X$aBL%PX8
%Gc<2_F6r\898g*5W+'9*`p(X'h/H!P.Z?`BEJb(Ad/P/bXAP+_!2@lZTKga,9'U>1[9Bkg%j(B&VDVfL%bVr-6<h/1.eOhPBLYWQ
%mtB?AKc#a"k'#O/O:MKG(p/5t`cQWH+LHgS.IsAfWGQ+F3##X7gkmd9WRTL.MCQp^"0AiJkdIE4ofPhOmneZb`D!*d*F0%;;k1>r
%Y.\fP$3PSR^@eX]JZ[88a`*Q#!F=M'k:?,NrYWea;<]!U+QUG^FumjTr>^Ui)0=DPVAH::b$S1G+JTt4Tl""NrK,0WOYEN,[bu07
%j;-,4nkBZLEXLf'mM_ZC_^G7:I'6lTUnM+r,P*eNdL:\->S;+*I3*1+E8!Fn6[??U$^%Jm?Zok]",F&gLQl5Bi>Zib!nV0HAougq
%erD+j+<8Ye5i,:`^8mPipP2TJ<TmIJE<!5=&)<5H?Qs4%=rIa'#L%p*S<,E[hK=a6$ItlpC.#uh!C8%aI%ttl5)eE2Lmg'`J;go#
%\nj&)N(Gfp\)-T;QM^3j:[:.n]a=9\!MMX$Y#[AoSep.*B!p$dc-`?$h^"h?*E=]I"B3J=K:;G8IaP7C4$'AkHX8P=.&JiF(W)V<
%CT-*_%Ii)Z,/%/>!>^]a;F;+q/b,^s6&%OlHlLYTXt$6MDWSUo/BVE@$gIE;OB!AZbY(0rC?"jt`[!'UoJ@ZTe*;jjm!1<9M_-_o
%#=4tK9#E_5P-O_ZJZudgNJ=Tpj2J#\ZEJ$`qMY!I(E8^_^r4WQfgRM$N3"Keb$.:\9R8KSK?!,oH(d243]_Qn*Derll_Ws$#3JW^
%PXXXiMGog6?!+uulsLP<dsDde7GS@fCbU02QFMap`Mc!3#e/=<g4l46^DHJmbLDd8%77']=,">9KCuga0X2._!#:O5CU;dY>4W[k
%7E5X3UL.;uA+9_[r2Bg!ZO88*5J*+s7>Tkk2lIBiH$8Fcgl63@D;rQ.XLWh9,#l_gct8friPkV)Nc+^O[_6YX%Kh"V_Yn<V6X-1<
%':kk+UTA?jeHXaTVARI^5NRhDlIiUd@X2kD`,W;Do>I&/G\M<0]X?I%e_d';9.,uGYQJ=*N;bXTb$Ar;FMO\.1:UfFi7PJQedaH)
%^!7MkHZ`l5p\3J$KQYDk`Q!2im@)9u4=h#BpOOse.?#<-<.)S7$t(YK^[fD"Q(C`o5A'Pk)-U[*aVbB5aKDN5IbJdC,9O6VJkX#I
%Mjq-HR)>n`/,!.m_cdrcLSr:L=WA`I[ZgdimTPCkNdo`CcCpO$ra)MnMp8L'VP.4Xq=a<Aq7gL]d,W72ha=ToSC4%"dXRW:Tl!s2
%gU`&->@M)KIrgt'@3kR8"';V<.C%cq`-u@e)-:[u@t-"6[5kKV-hc`Arg_Wu7:La^K?t)Aqg]oRAfZ9>gJdH^OP!>T`SPM1W?h1C
%8aLYR%\YsKoP!MW-*PWtr:M's2fZ7tN$iEs#t*X7VLWcnXfMSpoh?AEjlJ[)\lA_qep"15F_+af9-XAED%s*e^i$q'PGYdi!%^?a
%U+I2E-/XC>7XZerhYCj-S_:j-XFOp]arEfFm3!;E!KohG1i8fKdIk_DClk"\]U6P0Df#XIg'D/:+5ruuQcE/TYNJZB\J&L\K1Bu1
%aP7*-^L<nJ'4gM6R6*^sJC,>jRKH$#^hE-=3UBM&Rk\K1L`tY1/)Fqi[VpqQ/CsBF]UGR\h158s\6/n80!,IZE(Y\K&70]iMMt`<
%JVi#2[AH!W4'eVGWT<.U@=FT0s(1r$Pj!4p+2HM9jRud=',16LGiJDsiW*ko`Tg;jV"qO'<-(ACC.XQ8C-r)T;H)kLZEDeR&]!f2
%U(j7h.FSD,Z]Plm/.>F<N(TC2q\Sh<[m:Df)aqW9QcWL#jP(j%?(T[i_V@0HNp@iG"4"t?iI@'_"[>,8flT1^gK6.Qnn,bC[TqUL
%VmF1c:V?;HPWK-0=Kd8B%9f!F-sG0T;E8LnR=/D!TsE:M"h>mnGUiCE2Q-uO`*bis6rm]0+OhUICg[K``trrUo*$^NCnk/=%Mgng
%A$mOV8k`4MJ+J+`[O345j_?Lf8Pb:7.R3O988,!%9b@,5.X/T@K_G,!Z%Dtq1&.HH<cjbZg%!#f(%.><fp^p2[<]>PknE8cmL]!1
%0o\).\0u=)CuUVX<+'=W8p*2o&gsGX=NmM0']>qj7s"&81KIJ'aJpAJdV3X2_X\[E>T'@F:J)X@PLpU+]\)DljAd$jQW2T@Z71E7
%e^\q[;$X"RAE[Le$RtO;_M#4I<P?0s`*PMS8tb4EN<l@[H>S'^eEOkoOpeT8dE6j2*TNroMnZ^RV,k;[35A0MDmD+"/6<S;RSY6%
%mDFj%/@Mr_f9_A$S"a5'EI?9TdV'4Cg6:5W,Z<JX)h@2ujH\*!>1(s5>1h!dmZjiJoPC3n]n4A<cDSY$[;_<mI2C]DD]6FX=h1p8
%'Wc<N:s%$d"^1^;^q%/?g?cUXie3oYiPnA$DOa5c5b>@6]s)ecs2t7jY6RV>#=qolBjX[#-t*>-<TTIjX1co@X\bu%YVi!;!tooP
%B4oD1[:D2F;`Y4$[0Xr)SQ1$`k_H@>FOlhVa3Z^:Pd^C#aUNd_oTV8N&2-Otkie=!86;9I;h=c9,O-_K2e,fU(eeYX`-.)?'EV&T
%X*_2ne+p%fJr5O.hBjfeDa;tEI*4'V+R<;T!lU*teHeO>FoaG-i84ohL$[i?7R:163^g$LDL*%hPTX-iU\]o?#npgsIb.V#2QX,n
%Q)Pq-Wd7.RZ78-hUk\tE%pR+!S1$!0LO)GOSH,:d<jS,Kb2A6D<6pjt$7;tg7e_N`_Whu'6`Rm<Zn6SpGt_Q']e>.?esF+OLK%>)
%]<ahEBEFG\PXA&7PW!rHPr$Q!]`\ZQ0QYjS+)SSt#,!PR&ESiPKm"D:#-#IcPW+FIbeo?+4eoe"TktpGSl'd&q>O%Q#mJi=<%UVj
%UA=_EFn(b2.Z`-3n'n&&SaIltY`k*icBbq+a`StZ],a7:>0#G/O#UVfD09tm%?FVPW4XSkn//?0($ZY,GEBhRiPh\*ePMs5FO$-r
%$8JmJqPDWIZF#b+ki>+OqS)dH[_<_cH:6jRFK)E#?]QU[+Jr,pQQmtqSM$/XSs?-k1(7!'"1Mu[,\,uJ\1-H_IJIJ>$J&jiMj`j>
%VRi.o/nV,ARHe7Y\sTHLAu^cWl=-AAOu(Y-9Qfm;Uq4&j-e[8*@9A4#<l?Xl`$7[,r[(jfrCq0d<bLI4`E8kb-6"b1kb.ecFNo7D
%#rRH:$jh6ph/Jone%K*=C#=*KUKd.6<"/M)aNbd+^-s#jR^aPjYp(5uP72?77GQd2Y&0e&%Yg+Cs2[-d8Ijn2p:7PY/o?)sV<rnS
%;IA-A#UaJH->a&9m<<9V)=3$9EMRq4D==5jRt=0ALkT6o^U/CsT##/UHb0Rl@Hq>]PdYLUXMg9L#psLCrU2h8oY.0h-($NlC``eD
%qTALt0PQ_Lqr!b,K0[k^37?qCdVY9:m;GqV*cDDLoJPduL,`(T;]Mc;[VHoCq`]0dNjRoQX)TD3QuSr#WbhF!.bjo,ffiKGmu6;B
%G@&&!7jE99IP3#YjEVp@JG[/.XabJtj=@BS0N$pTjQ/UfF4$%N56p/./`I@LCO<hU4-@5eDZY@72++J)MAhr0:T]_;Y&eB&602YB
%lgZo1b)TeJRs6nq;!>WXlJF'4`1aVq=#aH5-d3!7imDLdd8uX!-.QS5UiU<+apnbNE5G+e"'m@M>8=bf!0R1go;tMZrrbp\Wm[jW
%7KTCo]ss[^).FF;Rl6-b\h8u;>7;na3lP!qB(pTN,F\"n?+h%+ZtRKe=oEnonaPDq8*B@()chm_Y:B7G2?o+X7WEN#D^79Hm7-X8
%hA[Nl[&_[#B<_/I1u/k8eVRj?>K9Zb<BS"ib+kY1g]/h7J$^tDpskjNJ>/*o=!$43I@4u=Y.hr2FYR.lkInBikDe%]-\s/9@b7bH
%HL9Q.[XnMVL=ISa#Dg3K]c^.pCZ:WH[cuX%.MQj*9h+B(<UjHl2bR`61oor?#ogh9Z<^BCS"=jD:/BWaTW*lE-2/hRb^79>kL+R.
%3]dcC5,uT0SHotL_/Hrq8PD"+RepfC5+6NTKSGQ;XV]gN,@s,#!A(ZmrPZ,c)#.%.G(EZU(pm4LDn[X/.HZ4(R1$`t$R9dJVF9&Z
%*g)8#pFErk+*JRih>F[L2Q_hPp;/5M#C0%qY2(DIoB=u@I.Jk+'<`B$DuqDEql/Bu?D6mA?[kd4=tD<rL$728kk*b&#<(!g8a-6O
%]<qY)l;ht9&??QaSaNPf/ij?J=5,IF&^p0B*R<?bMu2`Nr=VR(?bn'rQO[q>'dN0"Vr-DXO<::$(YAP+Er&3`rikM>=;)56h5fR8
%%mDpOa1`GsDZ$o"ER9\0Gqff[`5?q_TA"ptNLhVC6!A]:=e/1?Ut>igor5iUpJ:JD-r/%0;q3-!X7t:tiXTtm,[5P^[Iq$u])!K.
%2)&:dK7t,sb,`T%&8PZJ>T2O$f"fFo)(]u1RZ5?<:Rci7<kI#&CLY&ia4>/l>QPjciN(tS6uJ=5hCu"rV-/.6WgXV[ggj@Cr87K;
%-dUu<N">sKo'G3.Eq+WSJ!_tLk/@(c31glIO"kW<A&9hc5B3j<A&a1k1#Z_<\/>rt`e8^.bk[2(2eUDX5')0/-JXt%G$rblQJtNl
%,[.YmX([9.>B7ojb/"m/RP;C6*O$3k=F"R5^("AhGauh.YE<sK[_pZp*SK$05\Y.rVAJOgGC]2*]2l3W^qYGC[s";eW`3Ug_/]AN
%Nc)QQe3R`r8cb*pLn)p<7c1\pGA9i!#%UX=#)0oWSUg:YQA+LLd%"O9j`W1CR*eu_P(=U+ZrU./-jV7C?rsKZ-S:t3.Phcd*e^9k
%n\]Ksh\S_r5mN46D-DK!M82GLb&hA;U$(fsitq%C&\R73V`L-3*p+rXF!O+WS[)HNe]Fj=X3B2t'eeM7P>;J>'DW:)fg2&mo4'HV
%oCq$bXm>O'6lU7@9Y9c@mJ"Tae%3i.XeOC2UC<[5!*Q<!`Ei*SR;K8(>P>%M.AcQUf6%8@7D&]+MRJK`ai5F'(BZoni*Gn:'tFXQ
%8\X++WE53`>6A'`kN.,e+N,G%M<`Y.jd[nrd;:f'ZoJtS)`^]e9LDtqNn8K?__<uC:a<!u%RK+l^XtMYpU-"eT9r+L)\lIbndRt^
%'RA_lWe%7tIT50X>HYq#n?m+Lg5V/jg_a7nNH+?Y\Na?*!=QP@".ZQN8+dL#<tW/9i]^<SK]7>YN_VQD_V/kH,m^R?dKfX'W_J5!
%rjK?.=n1Rd405q_V&7Dn$%ek29GMLHBOi"h@>Xf_0$mo7A&=KWmY-\H"3SaOegh*[6NNOe"8p.a`kj->"7nl.Lqu#'J<c8d>?Zkk
%NBhXrKVLKlja!1,(ei^c#OJ`#f#)'AcCS*$Dd2SXI('(Uc/)f-7?e<V<t,6s:^K!=^.T]d<c-)1Jn)D-bISLMhg-Ec.Fo4&:";\J
%=Hft.IYFMS9\)Y8l69GT;:["lXh(I3\u:6c)>3>FC'P$SEE,!te5[Q@Zt4i\X3&FVE)!p_`bCVS*H&qYgG<Jh,hqqMo&i$d1FIP3
%AC$e4H%a9\Z`-U'A2&b[*kOGc;bFdt52"D$:A2V]k`YRr*HasQ$HD9h/_STilB;&[N6tiNqcbdEVdGq[iVM5hlnKI6,SrPeon;S?
%*^;[:P9)R4'2-bb$[*8K/ksI!TZFbmHaq)JYNTk;P74ildLU@]GCSu,jMs%/6XX4lp:*-9oBVT'DH!j]c,lP;g%/DpHYSo(38%6L
%j(&\q;qgnTNuoWo>[t?&3KcNtHo&?.>U_7SO(8b`U-@A$^W)RMcQG1,7_+qa/\)q@K@>S@>^g,O]M9g0mc`ff8ZKgRl`$IP!d=o0
%K:/C`'RT*4Ma:,$Rd>m9/&h)!'i#;.=Krj8$8C?F_oSA7`?%1rRd*a*#->_NkqafBCIaa5BnGO0%8:.E5Jm&CCp1*5dl!\0K%??!
%QPG++]F@cH;MoGcAlVN_-5Ju)qG+"#X>!k[ce5*:rIe/qZ#i3jO#-%>=--O1l%[?9AIQCm]@aD']c0E)DnYbiPWMO*I_DuL5/[$#
%2.mo+YMsOa*\P`AG:=.4I@/kK[2Z+dda/f]%D>JPef+lrhrVh]02Is(&0V4`fQfW]]<Z)g"?U@k4sl`a\<HK0@5\9I(P-/Zp$.5n
%710F=5THBC);n6\YLL4DXm(JsV%J9PmH<R?N&6P<Xpg!V(F9)i3hoj*elBrbZ;7b]8o@WgHF#(j=P9Q\c!/n^FT(jVf&ge/.aLuR
%JA6U.q;oS^=/Qkdq7WCa<B5]V_gct&_<5b3DlrrlQY5dXIt."es5_:Ko"g*R]Y+/k\N%0Hp\+:>Zf?u(+-oud0<SV6YPre$5;)#(
%T-'\rSS%Qnk4Rtq?M[A;j[T]fG]Wh"nJ,;dO4LMZ>!ChRr/84>Du.TNiimYPpW1,EbLuFYXZuUCo%hFR[==Kh]R>4ocNh?jfQ+BI
%7CgIX(DlnNY=ChRm+p@fBjOla[ibQgnOu/7rcI1]n=C`o\,+?D$YRY)@=8R!-NB+pbQ!e+h]M"*c#`KJcZcFNGPOJ@LGuum_\Z>p
%h^mdNnWs3#R)]Fq*ns#Q*>X4Pm.c&@3Uk;*m-SRo!LEb0f8oDbX1"4Ab@erKf>!h-h`gkoU]5OXq==diL-t(?UU0!E+5(h&ht?[8
%*u?#ISo%=QiK$1EVpA/^HKdrG2)b#le$H^Eq<R4IO&%DEEf#VP-qB8'o;Bhtqt_3A^%l;2a)=aLL6&pYGkpe"HJA,g^fZ!Vjmgmo
%[V&?\e^\<hr1UZ@#=&6-GTj9.A^?B4Z]>#U5%hTS=m#Ir%I7Nod5RuTBDcDc>G$=`p%A".jcAt$L'BsC:m]d@/Pe"j;=kM$g?Ap9
%O4K42e>E$)YB^.s[="5m+)ZkQD'Spk\G?s_00[n;q\.1k4mMR!:R?!c(GFZpEO#L=?S1l5o(r1EP5c<?bC+]*a3WG*?OU9:5E;pB
%BePGFN=$r'*b$(9,kI_Q14OkYkW$*1,Z0qFkP0hZR;=c+;]75MM'fUs`]nkJagPG1Hq9lH>bmlk1<r@A)'=9qBD:FT?@<n*?Are`
%RW5u`hO,5\gG`cc^W9bPdoL'mD,OH4@EUKmT<J2LDdIoV^AGqY/ulm8qlK4<UU0l^>P?@%C\&e-U&S`'bF=sT+3\\RQgHGUo13sZ
%h)LW\n%:5Fd^H,D>!'ajT^`Q/HOs:&=I3;:/?^rn5]4I]DH`5)XH;nY+ub#=HW?A=]R'6oGn$84ot#bQgY(7Aq?3-dc^+T7DH;[j
%47rC=k"jpY/iZ'W4m,p=i+c2Q?bUi5rC?gtg^sL,EW,#0>@9W%md2F,%sep@MG]B5gpE(3Z-^Kn[GS0&8+ho2IM:7\:ML8!ldq*1
%"uQ>YG5:<nQ5<o@Hmsse2t!$ph<N[4.@)(X`-+Lu3'.W@RSUCXA0JNFR,.Tk]3Q:g?5O3e0[(VsPC#:T,"s'X]c)M.q1[:GJ)K5:
%oRFYPSU^7oIk=IQiFV'lH&E+tO*<f.It)b>h-[qRhg!1[j/LgB=h^eXnZ1Y/pUt(]j;hIUa<.H?fa$gACU!4*Hh$73[eHt)_S=np
%T\V2o4tlr0ZSoU]"UnbmaV6jQA,^s;g"2Fn%kn[36Z!"1q>BmE(m3Xn-i\R<]Y@'S%alE*BE#\4g:$M\6aAG8e>\f0bXuY@G0!TM
%a_SW9F:m%u2`U7ab`;Q?PJ)<:2C7fCqh[X)-rsBAX>aP@\rI4j?!`@^I#o*<4,^qpi4:oQ]6B]m:L^Q7)P?&nLDY\!`m=2,htt8=
%C(?fb)]+@]+T3F3n1<r),+4(gGL-HC5BOF6+Qp^$F--7ML4-eX<oB$sUU,0f`TKm]*;^ZHq$m9]#>c<QcC!1X*Dgimb[)6'gn,mZ
%!++FXs6RF3=)5F2./H.%)!=+k1)S6"1_h@jM4AVk@iI*=gGk_-5MY/qW_1^H9j6oO[JQQ`ER,JK*@MW&8sQ6@1.H785;>;=&<f+`
%L;1oWqnIrK:t(1^d#o.g@e>H\33h3&)U9Vb:J<3`4p1=AmqR60(@f-B/Q)n-2lBOTOPp:9Tk>%XQr\kM0(=3X?fNC/?\/fB2fL4c
%VWdWn(*NaH+UI>G'teN\%ra5%^VP\!ao<Y(d?,V[M<i6-Hn^X'kWIh;BRI-2^m>s(NrsZ\khh5Whde_H2e(0JTh+*6(>p\oJNmo;
%r>m>J^L=(UP+DT(&?5Gsj?``?@Kc;S8s[5B'tF0k]^XPB![-u^(b>NnE5K@i-,gDNb5Y(^ao?Di5B@2c!FFthgXj+KiF1iU;=-Dt
%cCOE^_GbH/219q"ao9K!rMP!S^7JgFUf4mD%s/I:?Rtg)6i6P1[_5#8ghrJG7eZ9Mbf[sZHZ(!5:Cn;er]oiCs5@nrYugi3;racO
%Q$1j\q+j.H?uOP;8&imKEh`o$XP<#J2)B2J0#^`l$6MR3p.F<pcouI_[luHHX8$"ul_(bNVE8Hue(&'@>`2fYAqJ)B\6OXa+7D()
%TD_ibgY<W3Xu.'27e1HQ;bq`K9#U,-Aq@7%HPHf,YGS5rG2]]2CDYt_9UU\Kp:q*WB;k>lGsaV;^^FE.Mb%Cn((2g8d6^=b3RnAe
%;&A`Dime3[X(!6:>r2aJZ5#u:.m!hD[!c170PK^g<%o<$0>UfcLP=q'qLLZn@<I,?(g*^X3pJ,fie7YPD[0f2=mQlmLf`:p+M_"o
%U7cEim*9>2&f.?YWC@%ZGanj<)#-U.'>\AVh'$ctpt.6Y)>#IXKLV,cCGZ9VZ@a%lei.i)kguKA&kq4^F`&milb`m=(1bp#+FZ;+
%gCXR$-?=a4dnDIn+#+Mh1EMK"p&q'bF=D*dQD%XqIOc\"_\'C\>iNf/(f:@,&*k5D&-aM>.);'YUIa;nJ3g@hlOaB#$=jil9c2ep
%,@$fQ4U54@iAMMRhn)-G5b,o4PQ4m4L>`o1DG3X/J3KA)*HmL+$LoX>`4#(G[T"@XGLK+OCN>Ed&H,_<\e$<a\s/"i^VjM($tsKC
%"\De<\>"1jaLhj:4j0;2W/jf(,6irjff^ZcEI8a]fK+t9@*-5I8`Pe6c?:Fh0]"0e4_#@3'HQ#NDA_FXk73+]KaW2O;!R*#'V8_[
%F]Yq=Ra,P:pZLnkn/YUYGU;=cL\U4$Tk.Y;)s?$EAoq_MoLl@VQ'U&:%IjSnfV1OPJO9pj0rBkXOSLrE<?[OnQ3JODQ2s?''0sDA
%iY?&M-o$/Kne@$&dQU%53YLmH5_^p#+eJfZ,8*Xo/JUeMVa@ntN&qbr-r?Aj/W_Ri9,ZI4-)FmOA4V@R&NCig<7mJ0(a1+1j,ZWZ
%V\TPk$ga$7N9Gls,YfZa&27Oh(;:Td9V7"/dSF%M`@"E-3R,G/M%^`@-*<OIR]4[%gu/((a<\2:#QO!30Q&Ssg?Jb-4mJ.]J9445
%,N7*H;H_QQR=\oe/*_GcC"F6G)",choa9,<#6m?('H@UdQt+*DAMHY]rM.<9h@N'lcFW;']A(>1M^YmlN22Y<g@L;]n0e.-X5>+1
%Bg[ZN#B>lg,fE'C.W%]X#?.i?#SN43[2a,H9B[ugHN^(o`"slm&F1C*$J\.!$Q^6=<s=*U6@_l50iG+8]F#3uC(?ki#;q9i2E_.X
%'kf[88?Y0,T`[><Gd3\q,%=.-.)`5!GN0TH0qE,,Ha'M$(4\C>r%O.(+l.Z'P)usHO+Y+hn"gf"!'l3:FH3r<<\PCpd21d->9k>Z
%QZ%UP53;8F=pYni\+<R#`@*k8N3no0h16<MV.W\]Jn?_3]b3C&+9[Mq??lj\Z(:1E;dQ93HDIBnR'J[-_a'Ak"Eb`)bN`!k*[X.s
%jnOeJUE/nX=TCT38r,/#P*A@/CCc,.X;<m:c":3J(\D/s6<%&,G>T>p3*W1S"[88DR*a(6O>\X8Ru7(H1OnTi/$e!HKO[<2g)i2=
%M^6JoC;=$34bioJ3QV3>ID`-#9'(W!qEPf)=)\nV7K':G54-iYls?RrNnW!uDR3/d/H9b+GKoMOJ*Lc8h"X+qb?1$c,-=AaJB^C#
%!<,K78kDd$LBb"kPB/p8rr*-U.?Sip\Y;SoX!e[(qNZS>8/-)V"ckM8<;Za8=knM`oKosHht2PN\g'cYd5;)A!_uE7m6ZN$([;'J
%qiTJ&rWbB`VUL(8[I0/fOk.JK'#.M%)jZ'+V#EB'&P+tuC]E^!XS=H+RBA@H,G!L/K%gE7r'LI=Z;o;$EUSDH@ri8kjJfr0h=Cg0
%KPU[??[0sD#6_@W$mZXW-S#,!?SP+A?JP`6+tWd1O0pt;.n@`sY;f8ImKYtR[OR5X^[;F/L2X[9UVMUT5(WXMLBbjJM#[)%&qm'S
%;4bY>?2qir&]l/W8V,??MVDZ:.e5*9s$Nlh"*.>%[<^AV!m;'!'&@]hTs@FJqZ2Ikijo*hA!`,_M%D*Fs)oiNhteK8&^4G'XWQJc
%Pk50hl97ef@rO4iRR@a=]-IDeaXSLIK[\1`HH@5/;0O`Bjqd@W..8ldd$M%q<78gBCqPACGFi=B4@Pn*j#omVNF1UMVAn?J@lSu+
%SYE5YX5+TWqP5+jdu,r1qtQg]s)l);Yp_]cJ+A#arXYLV;#_Wg.6!ahIgg.Y+)(A]Vg9<$n+]JN<2LbG40;,;r`&*g:o]Qu[d+A(
%<"&`3/L^JFpRRQD2r#?p.MnPmVhkqFj1/`KZR(Cp>eLF'e_7Q#]0L9EH@UE]YV.n,J@"XFSU.:5`Ll;t`rGj<X[.U(6G)'TgqtK:
%H[[c$PJVh80Y_=fSp&)N9"!/"fA=3!kl6VA[(?hhNfVap[sp%f>B;qBb.VZl?GItXCQ*aVIF/UAX8K;["2<mHs!C_$=)'&62Z!fX
%!2YJ4p($'B#O(Gi54rj!fil)_e^F=Q>-/TJb,$1sdPq,q9^uI["T'5P5GN?)T*G8AanQ0bs0!+9cO5H[^].Oi@,$/A-HCNM40<])
%p"r%4rM;&+gF?V!%<X')R\+ZdJ&f*N"oZ'8kC;)\DE[pXhgiKA#>"D$4tllLLA$Kp(e52;Ib:"Arn!3EmU+]I^V-`\^X.U?2#5\1
%r_Y,l`R%t1c*dJYfU`C(dKmSbYI=1)G#.)rH@NZn^VpDfPWU8]XoDbqn=Mq/7K4_3MB=AEE^0<k2OGEHEUPe9i7\*CHQP?JgK519
%/e@9=B!IlBikKsRZN@Mi^Vr6?bO%V&m&f0LR-;;tR%]ZNRf&!)H<T(kQeUV"V=Q`e:i=ga*ETBX&!UC5C`nb\JGI]/d&#oK\Q3SX
%lnut29>ANXA[6Z:HT`;"0"7DV%LT=]\QS`\8tL@kEEtuZf4DG?DKOUIlGUR-#9Q,\E2uf^lkCMa"+0]1Vr:Fs-_F\NLUp<a[!L=j
%j-CUKPh/M;<30/j%M\YS2<l6H6MYIT$Dl2JL9H<^9:$"Momq4_?&s1IlZFXFpJVjT5bZlFY8<Y(!LULU*+/lnfZX8*e,(bY804MV
%q5Q"gGdQ/#rZu't7\Kj)DH1")eNsfCIlUn\Sa=O3+6N`(HM/>W!6#?512N^ZZ'fg!)M`)e$aj$1!/IQK0A&Uf":P1ga*[6jcPK6!
%WRZn[F^W50Aj,:O?fJa8Q`P+53\J[lQNrPns(i5,99j\Z^/D)?]AH8t9YV\'1Ng-&qg5#Zf\K\X>VaiM\V08.UdlKE:["l\lh?+u
%6+PCB[^q]mi@NKP_5[\u;mohIUmpI4[aT&9j[/tm8+f@?*;t@L5RZZ=5A*O1p&7,@6(\f;-uAT="[pAG<r)4Gl3H`cr:U[3>8FKV
%>q^Uq3]6C<Ml&hC>oA1_$E^MWs#X5,=K\eAg48gtHEg:8Ok-62T.Ad.of=F'f5l@WHiJPJDC83Xaa/T2o`CWA(J4nc^`$N9ZS3,i
%Jf\Y(P$VM[<3)TH:<H;,/H#/SG5H+F(=fI4N(=TqC(EdKPj)'nIXC7D8=KQk]?:`B1e%uACTDfr`m_PY-:ti6^I)?f.DVI->4I6%
%or_)q>%u>R0rsDcJlI#KrO.1&V;[J<rU8i[!tu2Pnc2K9c9]7<B'a_qOC[SkBXUt9,=HU_qefj9]<OO6DSOYRN":H[?hLml$al-r
%NSc3QgM70GQYtM`,WS&'_nN\65^r1kcVJ/brFE?$XaBpU.4RPESS:3W?-1qr:>0q.8Y:.$5Nj?jYH8QYiB']/IndHG0,>;G*uo:p
%4\GtI=2!qFg/7SepRVV)A(CS&M*2-4Y7<lU:oef.Gb@s@?\`K,Ab_&B=n6uC?gldYa`isC.mb0Dj*#mjq;-dnl$>!=ch71bIAQmG
%^r+jO:,*:Q[Vn:B^810oIFK>[;V"_9$M_g<YD)+3lU-$ma`@65n$L6Q`MBS=+-/lu^K.B-<%+$$jW=8J*5.V(6:%AIh_m\Ur+?*M
%epq;u*jPb0H<Yn_7/6M_f#j'G`_q#V:UbkK14DIPRk<.DPUYmTR*R\[pjo(mbIq\:s.7b)Rh\]_a6!8W5;7B]c)B:'flQQ?kD[nL
%n?5ki`I.QDLMlh(D*B3?6`ln/<F>VSSR8LlGK_]pd>G+/IFG,g?c4IC2g)B.8tg4(()j0es(]1NW.[e1U&NLAIE7Fd3I\C);Y^?)
%;f@JqWrkPm[b7=/b-*a2D#Tlq#j8so']`R>?Z>mscs7f&c*M>#7L[\2llNo+6rf!4Vr1^oKIg\.A3NFmURCD*+l]u$\X&k/0Jr4:
%p8=Vlg6?F,b]etu<gFlciipt9\n6rA\'0Zg<F16uH;EKQ>':E8s-tXB:4n5p5Hm]M>F'fZk\q74NJB/jef1a^cfIR@I_Og5C?:fK
%9$Z[LU%tfe/Uh)^YFG3j_0E-\!9^RCE<!+m>SHa*F5i*&!?HO(;95(9s.2c0Wr/@JeEOfj?gk/$h(R!nGBg:`)3:Cg[TNRtpf<l`
%fUTR_otfNDp2U33hX?[d2XOQ[T1Y,i'E*JKqg4e8>Coso4OopNG[oqF.F[=TIl7pSYZBr$opm),>-?8#W7Sc>@^FR#I8ih2e"G4d
%k.I?TET3rJ;SEo1ciu4/m@jK^7Rc=&S%g#t[d+ej/iOb0/`4lNZ/3]Jr>l[(=%ipu\lpFbI-5k57.\#iDH.`n^#]2elsWQ1T.]L1
%m?lD/d'Au9:YOBLTmu<g;I&Zp"QF[>,l-5!7ojLB$e9:LSG:P#BKl,.0jcm1,CO1a@N0@6H@4g]XmA-magPq`Mr*ejh(4!u0RmY8
%g-LY)pfM]LhX=3;o7LWSWC&sAdmmbKhp[S=(2C8RG;>leRdqVlHMa\sr,+=HVT%/:]mR`Lck=Z/,n<h$ZbScBjGR`!jR%1"Y8FJ+
%ZZp7Z:%K(rlF>hgIrtfD3]j`Y2jif\`u"nLqh>290h(fPC]>`'o#nPn[n",8p$qHWM2!?jLM!SlV[lf-D!55bLsiHQrfrjd]i5oC
%>AGn,'HlV'\6CZ%B^,9HgUa"0)tj)NE,WIgMN=SRp4Zq)P(CO-hko5DMF-u3AN\DL$E\L*D/)6.6dGHH5F'qq[0;H%fR.AHI7"t*
%XpAd=r=4PI[?goq)1RFT3(NHj`7QKfHL6a\([8O@HbW;DGF,<(SYZk'lg%%&@!<oC^1&?mg)[k#cCZ_Jbn\O$2T4hIFCr(oqYE&G
%=A*J3,c8T%ZB[bV26;hinnMi]q07%%4'\61\f0=0DK^n`--s'F#RePD+DBl.F,s89nFG@/C3"TKWmP!fD=SR3ApJ8EdIaP!g6p!h
%rN52WY^Dh?/1_QXWRTS\LUjick:iUTXc1KhMq*"=q)T0q9M_KllW^L`qI07M\Yt6D/%KWo2"Orm_b\hG*eKCK:IcATd=XX9^V!/\
%AQ's`ce@,kp3M#`A`\5`[Zu/5k,(U//*!\,#FL88[;pK'gW;T`TB]*m\U$12OEkSRTC`<Q_oUYIY/n'.QKOUS:@1<NkZ7E>nYQd\
%NP=N*9C%GY[!<]f+&3?slls^^V%-044c^tKq4cXdcT[&lF7\W.0q->Q9\h"]ZX_$+flC_GnRQ.nBs(Ph]\lSNAH$$'a\L*4R=]<W
%L@8_)2]JSeF_#3&\s^4rUpgh(hf&Z2bB"Uu!iAh9-eHQ+>&imd\Ze4UUL12?.U(0**^mSB>\D0F=V_NNb\a^^!-<IfXA;8]R]U+5
%$:&.1]eDW5<R+S:hQ,JMq:<W-G("i'1d;^HI!$^DI]8&;Fgca_S3JH.cLUk+CDqE%2?I)d<0K[?Q:lA#p1oJa`QZMYRW]*c;VDK1
%p!@l"VD(6GP"8n9E>jO\\=lcu#tu#f&$C][96,#`hYf9\RbtL>ZW$Z]3uU?HlbL>L6#ps"5K.\:NsfiudtRV.ddt`n;);N5N45:=
%IMumbfnbu6h-C($?T>i%jcEk*OicDl\oZua;Q)4tF"r*-HVW]EAiAQ;Ku2J]7bo0Tc`cGJ(XklM`HHQG\@A(niW<7*Xfp'+TMt)!
%Is/<NM6UTZ[uXa3?Flo"C9"i,M0<4O4WNTWKMiYr0TfT[RQIoV_NA8qr%1R5AAY[4Q/uWLkr>3h5$]?^)-LZ'T]"m11/j6OhIEmA
%lb07kW3X@\TjX>"j?dL,-!+ZG?pi5V5H@)h%^`2&lcX?>mD8GB7_A7(S+!</K6g>lZXs8I7jujC;O-m$<-8\Fo#g`@@j:fG%PI>H
%_>IiHgh]^hjh6AYGU4+M0flaDe$g9TG]&!,D?Z*fAh(:hX:%c1=K7h-\(AmsmS.;?-2XoT!k*A]>03(:cUj:K6AO)b<@s_a#?U;p
%Ko=1/dEobB7DLaaNq.(*ojsp-F7%;KYS"^hltQFYHJc1^_G=+te]-Nq'IDqZSTd&]>Ar%6ZB\HZOm&=LguB&8lYG=)c';p3?f=[#
%9H]O9-PnZn2Z0Y;=!5rpr,lOcEj^="H;,L<D<,:Y$f`a\J;:BePs3p)5;&QJXVY%/B)`::R84%_Wu*(@r)A*"YDfL71E_&maqnFA
%7f<a;:oX[LVFN;[[QmkGN27&bNQL%#qh6m=Kk$f?Ga_=&2pW"M0MRTrpC2#,O7_XRG3eOOor4%pdG.*8m&!Q)*3?6s:*cEE,9VMP
%AN3larnUpE$XeUR50_R*I1k&pC-=e(<*TDkm[q?.59!?M/gs#89cm+^f<U[aIL.s"^a;R^c-<Z\Q2/(_TYJom*[ba3rR(?08>`s1
%Ul\oLh1M`P;IqUg5.R<5HY_@@m/H-,/OgDkGs3s1P@^fJX_%EE&NH=5"QfO6,rRWP?&E'K0MR$EgQZ+@CBc(qQ?pu_l>V[Mj'NV$
%HTXY2@2V.+H@C0/bN[d_^V+=AZ,o+#BP``k>Wc'l>O?M;ZI@`brF7D!b?p3TbY]$Yc5s*E(4j)KJ^S]r\5U"P>S\OI#[qd2>'Cl'
%j#r]Id@\ZU^Nu^7OGEc?V+u+,=5(_n(RqifY0J5sp,KN',N4_\)G`0H]:1DV(Vcg8O,<Ce&hqQl@b=G3YO:>U&OKJ^7M]ZEh-Xlp
%Gj<iI,%-jgJhDMlGi+\'/t.6HpLS")rouK1;tfteDd_V-G[Fa*H-a$=2dbQ[_=!R`ON5F/GLtJlpG9Ir40gP7N5gQq4,qWCgHW\U
%s)PF$^@^$$Z[1>I%q#q*oT==%bIl=AOcfY(aNVUrgl'.-AQ?4/'uD8VqbqV2/E0m2+flmr+>2]j(I++<[(5sjr]+R9RQ.+fa"u'l
%&!UK9]C_:56+g:$:/VTFcC]ehKMf=H5'V>-"G:d%nP4S0O%qTK/'Emb^bi):X1*Tp3NdZZQHoKNr5rmRBQAANfLp<,($_B;S=Wig
%QITk2ZPQggY@"_*X)n$?\FkQr2*K_P>GCCTrP9C:TY6OP:*.U6QI?)HM/9WM>eC."J$@MSfm<'q$TTdZ_DJS\/6;l>H*YdU9e`r%
%1,ck8:[Z_*CI8=7F79*sWE'C@FaA<rS(h%9%)6lDoN^q]+K_iEejt.:Y1]#sOW;'JgM;lA`\R:L\aj;1i%*Un!u):>1>s[SM]IjI
%V82\N8L<QfB:nhb2Q=gZkd.;h&sF62H"U-(PF=CB?/dkdJ7$+kHQCAgl1#p=EGK6'L9m`.QTIhFF?lC>]J[71P+*k:G4C6*!C,:f
%_V+gcVh_YT00";Cp%2X\f\)b^g5A1<4Shm^G*Uh+W%m4nM0n7]J1n$b&bdLXo[.+#P2N&k1m*36b-rAZ?guNg.u@TTS$H*:3/[&_
%G!@$nET[<A$1nM;ni;#^]!k^'l+.Jbdq1)_VopX$QtlNdj1+KiQ&33>ge(=JnDrToh6c@PJ3=B+iP_4rRBs:IptPe4(u74.GCQ`U
%#5Y0;^DC^'hD[]U:%L$af3GO:GF,;[:9q]'P[3a`5j'*i>9gJ?#s4Q*9c^\Urh*MoJ2W`Ql"FsU3rVLjo8@fr+&/&P<%h[@6eQ@Q
%p6/,sKf;6=OetCqk4p-iJu;#\?aCSsfhEQkQCbpm?YK#lj$Z:.SY$gl\Qg!?n1scfUC[&/92DZ"Tp_Eq<.ki,>deAP)4DIR2P84m
%];J-+(=2D/;e9@0X&M36?FdV<**UJ93d5rsH8XNpN@o*cAG5b`6!^(sm^Snt&n-:Qn:VX>ra=P1Y7(0uCd#D%X.B?QlqaO?ZH(#]
%_VJ]WR6N]9oAY8-]m;DS='lj&>cf.A2hI%e>8EPM]!C&ce;)RiIlmh9d\FAMY^H3`haGqO&'Oo+S)2PAG`4@nf@>c9Sn-Kpg2q5-
%3I1AbA)+C'4N?RsJ1F_oJdbtEEga&aVdSV$=nE5];23-7mYU66lXi*No_?%<H]R^hjT2()\[WdgN.Y.p3N4(23bu<HS%2Zc)/co8
%$SH6:^#`j,`(Z&jSP3IU,J[#gVD#ru?&jf5R6a0)ebh4Uo-ae=bn7LLRo7@2AeI0U'Ba`0?57WeRd&3#60nG*I;kF`b290f)h32%
%*QlNCl_ELNM1Z-#^f:oi?@D71-M,4TM$4;P'VNqRC`qjM7rp2U1HP`_<6a&`chnLBalauRYj1dVDPOV#;>%JT[JS#+g!^i.pN)CZ
%Bmoq>d:9so"f(5#Q^cH$#:tu%.5ol&h]IhPI^8khYZ/&=PcO2hh!4_+6Z-u:Lgat1HFDUbXWD&uMke\Y_j/uMd2S`i>(2uaUQ\=k
%Pbsd[GFi/foGu@Q%Be3d/jSc2-p"9`%d3DuDYou0G&:ogqmYhdr#Ud<^"$,n6pi*a`+/N2naSdpg5.sX4m7T\S$VM/:8=[p1gg-c
%Q#.^H0CD#<&nS(!M&A-;:;BW=Q@R5mKFR)L1SL=eo2;53Cd.D&jtDn:$6Gf7r;Fi.itDUt1DBP-4rL<4o^6OEF*TCekV4#dID`?h
%'?bIKa*TMoFT!F)U2f+W]pn,/Q+3>g2<$#BO<#K=,u_nB9g;ZEl"m6f2hf.4oFcHead[q(9*sT@,F`bPPe'^bl>/>iP<E>[ZeVhP
%j2_Vt7PkA`3a;a#e`XJuLOK..9#^B!FJ;(0_!]APb1ikeAZiW)6MmVPGkkPr`oU@BMPlM?!pA]Vl",-hZ&sZQ5b-)er'g/TU1_/E
%%1U0W.R,QOG&Y$]IbG95&ecpbT/JE"F(\X!r7[$\Pnok:90.Qef$OM=)X+*LkOdnNB)CC$^bS9D8H%r"lgCMFfj:6Jf0@Cu,&Lh@
%j0PEMTJZCT?Tb==VO((:cRR`f.V<n1]jiV-]u"c99J!q1(!D$3Ncie4^@Bi=F,gEaFE;faXH)?h71T\?2T84kI^qN.\iX]a@UsX0
%W89.e*\K;4Vp=J'U8P&c7W*;-iFQlb.cg&cL:$.CGU:%I\TjB'll:/<%B&oPI'L3&1=bR992&?L5--B_Uj&S(PMJu>JsmUm%6knb
%M^^c`;^>Ibck'?Qs!307clQD_?[+S_;m9f^nDMM]o__`L5V7><N_c'0ebSq&HGY_i(Su>:f2g<)onD/->bAX+lrM_.KPA#B^s#G`
%IU[Pt#Y&;XWeQ;s`C`%:rOA"rRSuA)dT]5Aa6peF5\b0;%<_.W4ZCF,^6f+/eSG_/@AS/Fa^H,]lbh,0gd=+5k/G7*_FJt_]qjcD
%of?]@G&u9#o:\sXfcEp2L:=3jN%s$]*tDj@d^?L)\!?cS@d>C3(:h3G'RkB/=E+7oi]"02M;mdJaXk3]Ra5hW+,Q9QqEF4^*2R"n
%O\U\&I<)Yk6F@"elS4bHqjm!*e5>Sb;=qIXSQfGc)b*VuROc_A%&WbHB21]E4q44Q`+1G[POj.gNE$)l\`IdAq/PAPr;9>MX]Lc0
%5JUMS'E+08+nl0=@1MXk'B`2l[@ssqAn-5n<8s`%;]+g>4&'iGQ^fe'&.af!5#F#_E"p:s;3,#@'%KU'qo!kp'hi!<.T_)]SM+Xt
%)]EW.Qr?!dc>Dpn7:3M+rjmi-iX*\(&)O.shp9$*>oUusc1Mq;mmeniMZ*Uih^^1DeAU]s;I$)[N^i`S8t+&>I!Np'jS'`P0AFTW
%FPXtk]JeXpD\"4(Pt,=u1UWfCI9XZ98hpsAitJRfTm_(fFHnn^P$?bA6h8elg9mOk[n`G7TnRdF=<1O)C1O?JFji"6+(h+e2g=_N
%7<^\;UWJ5^mauZ2>3WWCntZd/9u9UH6Z!h;mZ>BTg<i30-eGpp?'1Q0*6qjO<mm`^bO]N&e@TGgYD,;@B+2ksko?:tacEg>$UM]o
%1suW:RF-_hgh]-_?J9>\2TEd=-ki.%-Q5o3P"WOg@-"bOTblj!q=@uqSKI=cfB^<$:V0Q_Q1=OaflClfC_65u\-@5CC%NH93%nUj
%Ge[\U66G$,C+-Y/EfX*-c;/Sc.VeKj1B1[D`Bl,A?X@_6Ok"KD-BJ>,=]j7-3N>r,`E['K@AuH*g).PlmR@k&9;UXq/2']bAZF5G
%B_C`OXHn4cDeHX):"s4Ak.\0BGMRP]WfAfkRZIYn85nf57>G:2*3Q@o#OMR`NRT(AZKY:Qea[mqG5p2P>Pa)eiNFcbLF(>Hb@)]l
%)tYD(-uV.IVO`e?MGDb'r/bE:e4!a:ZM_?=4+BE\F0#tuGGeh'2M+sjR,;WMKQN'!1Lp$D@F%YKAr9tSChE1hiK0h"FT#otZ?qPE
%_S.CZZUOFmXCd@Sh9E>/)FWbE#u58&(Y:6SIkY4l043!>:@$6:RJ\jW1TFOI2ePq,i9j:2p[,dT^/N(aQd8]"*,Vf_]c4W=(m-`(
%Su_%4C-lO@-RL=S[_AC3)#1P&IgjX%n3qg&gcT2c;_d+G!gT7S8!'1A8bKMp=FsIO*X?O9cT^\B*b]S&mXFk@TrZ>n%AZe">B$rU
%?WmE'irR)Ip1_&?.^>F*:"Ri)j8GfT>u@hM0id[.6(bKc0UOS\06ROM?,*A.qX9pM_LTF.6R>H5NK<1-7*DM*a\aMolAq(RJtN!(
%Q*)\bp:psHk'/;WEZ9jjTP&CbnCsGCp"d"X21'Lo&%a9#NW>=/p"_)QS.cn^_'<,\'/7>SFO+:Dm*PEd.[aghS'5du,<1+n.6'sj
%BL([;MdVjs*KN+5UZ;:6E:eD/KXIq9kR?8!\f=i6s&n\hmr9n,*8#+9iF$FD7usD:QR';[/q-o\9?"<!qC^Fo%b:1/_0EOj^Fp,a
%j]5XN,@7FNgNN%(rUp`kq/,$,_V`PkSSGdbW0Yp$MHSt.j!%9k.b4*5rU2H8D4t!XW]0\;4Z@.@[QQ/WWh8'ZIQpl6r.me!T3Pmh
%_7(_L+%OO4$ig"<N/^1$WV)H9a@%57mmMLARG5[UihFN=m&icu.ts,J6K[cGHY?'rm3E=hdi^@`XrT(>mOkuDb0'G.+(k8[o<^9a
%]%-T9O$=86M7[":0f_.Z8;qJ[BJFNX^\^OqIkXTK0/rXW)>l2D`*\QZoM^Gc7eYf56*m"_0!EtDNBUbQ\U8Gr2??%$NR=s*]AiYk
%r]3QaAqZRV_I%M(j.hOl/H/hK?diUo1uO/Z5ob89D>'PCi2;D8r"VZrl<#N!"i!`?X20G=Od@'h5>CNQpH/_cUD`upQ7B^]SSl7S
%du=:;OtAWMnCM1JFZP#]pbn-s']>TSB)'i'PCBpOM-t0m^31HG9"SF)"2n*t$"Qdb\2']BUf1`<Bi8JRVYAM/D_7(CR7Rn`*l$"X
%&'nQk<RF?TZQj>nCP5J?(5N%6oMFP(kLRU1cOF7,#'VH]i/^+\82lm#g8I-6UZq@XSki$mAtE<FPFa,J*WM0+N?gW8E$Us$\Zil@
%^CE1'4%"XVlf9VuYrf`[@&me,2ZS?,pr7rm8>=pEpriM"GJT`8-F833AAm"nMQLL90+QD8V5;R5IV("('of+4henUf`Ku;VB`2af
%205V^1,#u1WTCV\8u@B=]#/"&L.:Ss6##uQ%CFbt#7RF$?)9H;=SoZf$PIE:@<b'co33_,8dop$J,D%mZE]fg0".8'@B$[ilRJ,?
%9DDIF8CYTmMI2phGZ`'a$uonN+W9Rs96U5N4kh*kf60Hj9QedQk<n0)]fd`!e'\.@R7H?%JVB>fb)uQb.32^S5oJJ8J@W/STWpbI
%AFfY,29hT==SmF5/>q__OiqQZ0>8g8UZ`f<b^Umm-J3ELBVtQn(bDdP-PEu=&=Bqp9dH#_g:5Qs8$IillbUNXcIlE2E]0@3B"-9D
%-LUMd?fQ't\*>=86_-tRP@2Hq)Z8&@13m=c0fXJBRi%U:m3IF3niee&i=q>*lsfND0fBuP-H;CPQ\gRs@6H?U3L<>`pBNL2WKWg8
%`:R(/3K^nFSk.'f<Yc=ale[)B[<+DPL>'NOd5b563BFp;:fB_?$-d@W$+%8r'%'=]QC'g1ga)$>73kf@@J!MH()JoQ'2'\\O,;s:
%9-uF#PIX*TEp,ED+)MK8<qbC9'5JhPX2OjP@jnTBh+9!&$7!$:SYbC8@W,5J-hd#XQ,MYXG*k6!cAiPcS`di-=a_cl\@>h[fONq+
%lrYWQp8_8O]-B>$\3Du59U*g@_hj/si`>'<?>(]m7YA+elg4FOU;!+#9tV3:h\,<*^,D?\06@DR)O^!/dEKu$i:tdSnR+,a'F[aG
%7d^J5mD@YO@,%k=c(KHUh&%t1A)i2_ZaHjM`Nd;Xi,\GeD(tj/E&b@JZPa7U?a!N9\$";*#BrhqiS["E^G^>l4ujND%q)'2FEMQl
%p+UJJGlJ+L5Kp8$_9+J@n2f(/*c122Fe#<lG-$E&&"CI(UZ'YMcp[!pFD1L^]R)!Nc&`n[aW^7ZBFW5DbrlIe+$<m=j`WP*LXlrf
%Q(b>/Q\D-HX8R#$k]pT_k^7&QD!3op$k=$G$I,:8j5K=N1Z*S7Bng@-fr(OpB_l^nE-LPTG\el,31RWaI2WUX2P5b9iqRXU]"3;/
%?JK?BL9ilu2S:Bbe&0q^;`T4ZeQNeR:!KgN?d5,-%2WW3/r(OW2kPh3mTQ1?7XI!MP*kQCZ-^SUg!8/>Z82^IpJ.D?U>"kmaSa?I
%i^bD@3#l(Lg4($ohHZEb3Rk%iOn6E_fuQn\j_^gc>Yu`l[s*0DNJHNZBVJH38&nq.qkL.<f>_L&#NnQhpXnTkE[?^bk3/g+fc8g3
%H`;uGND;'a?L4lPNu!=>3;QaCQ_UtDBkk"24`NM@g,bcGRkE$WNJ/b3WNj#4\Z<!ZAj%,<h`WNMm9M:rNLa+i)e1gtVsU_oFe0S"
%h-.Q6CVMDRTem`n>Y'gO*hou\'rfmVKkJjUc`bQ`NGjH.*'^GDNfIIP'oM%JNQ0Oo2%uqYG%Pf7@OtG1:<[74HP:^@CN3hJVNmTP
%IET#Fp/3Q?M6i3.l,6jjYrPZa4MkeZhPs%?No]&[PGusQTh0BtH^e8D$XY74`,L!BJ$`OL4Kk)i-L\!hX3$^Np#T_rIX@KQR!?8=
%E`9_IcE.Q4-ZaLJ6ZQfh=&#9(T/Dgd_:D0JH/#-XmD/nK&PnDD%V;O4b50E5r,hmX.c4F/9^NU"6W<1"HXa""-h:3>pFiGnK=.J@
%l04>LjKtML:/@d3hG0t-Wt4mf'6tn$n#fEpVdE=,:XblTM]e;/>]-Ihk^>=rr7&Mr;O]&oVl>l^q;G:]o6;ieh5F=d"ujKubk/`f
%rJW07adHsXm:KsS[Ol)DN]1ifJ0!aqgYU2'0Ku)"&&e"b9<]ZL/&=]%D^[Sjbaet4qa(KER$`l7O(1/"Z(6^h[W"4r`7>=42ES'W
%cL+iDc>%-A-[b!WP3..#/BJ^oq't:GhOO2Daj_dnPn,a%gDUtD'=l#L:uT?`aND,)Z)9Asi]7ua(=-3G-6,/(%BudXVO^G9$hJ[$
%gc/(>L1c^fmBCt%g^77p\0[=lPAM2.l9VtLc&Tm*RGA0PS:1n-gXN$"PEVC\A_>h->04u.WhY3a>BO9nYH#(qHrNmJKh=iK-)sXD
%^"GNs-]@mkQ^[S=h(#,(g"nkLo4r+NZ^K'kk$i=Ja&Fs`T;/+9AKLC4k$F8i4_[=]q5=&PXum+?honm@:0,[7B4k9M'-P#T<bKb%
%:Q=&Md/kXUk(Ygqoslcg\h]VqNO@o/En=N:V:1F/\TT,USI`_qjSX&l\MCqo<*Z%KR&c)>[tfmRL$>H*m)%amBjtMKn5NZ&4W3*]
%BP^5E346?N>[5A+?SCh`:9H8,?>Lho/2eu;dA?*lm*!i::@idG\$<?M<*5R2/N"K$BR+36F_3Y9`Rsb?pdel)o_R!,-Z6(od\:\`
%8`rb0O6P-6dtdSe=Q'QKs-MnB[,6/RCc6lWjsIDqP\Dt4(dlEBFs]X9c*nIpL[Fe)p>LJn,WC,%.HU3i:+NfYRnDeF:S6(G`ng>s
%IV*],P0]N;M>ZmD,+Yo2^7MNeSNaM`k%:3ZQ(@Khn]LfJ]=")pSQK!Ze)k7bI:<GZ=hPk*DQgc#-^ng:[$b4Cm588%cCXTbCTirP
%a7ZF,c,KAJ`5M9DnRXGerZ&$u2^US5B4J2/Ph\5\HFhsX3[l_"Npg;_2A[u`:,WX*Ka<?EV7ea(Rcdl_[iERO[gpI,P?Ug1Qd=D"
%/9.u/=NP*_O,b`<q`-I!fLbAKVk(3;?gaH,Tq.b+q5`:gC3sN02g5r)h93X[eF$Q?ASdDl'o)G5Q``Ar\*][YIcC3tZYrn0KDW:.
%p]sR"s,^1n#NIUe_82:Zed!R7B'J5rkBQ$+VEB0P\2n\MIsA:]d5X`,?6tZVdF.s?hX(%*d:<(4rck_n13B%sgmgOA3*b<)DB@'9
%SB.0'G-_(R\:*p%RX[Mla;e[IkqrA6E-ut?7KuYX%u^6>[<DLr[[S8/4*uA./tOHZL@oi[qY:'fqN@>+7%s0j1&J>cFE',p>JGF-
%:Ma=BLXtPJVKfba/D])7?;2sb'3EkLb/Mo]I:Me.ELe#%Bs-WBB()papCFa9lUOs'',K*Ec#2P#iMN=sO)It;a8+K_EMdZ4B2?X]
%M/^.LQ`[NZ]:6ueYqWh>IoTTS4uk3"/FOSp3pV.ipN$RdHhSnaPJ-kUjS_Blm'Q:<7.IM#/rTDIog25E4[,5+Ma=]AH?)#C%Q=Gl
%hHRM2PcNKJK*S[T<d`O_4mP5C4=lC\_8Z92mc!Bsj%HGEGS9n]\Ym-/f9<,t9=%b-Y9rB]qo?%0Q.jM!)Q(hqYIORZGa3Z)DEP'T
%]L8OFd`Y37X^>8XNC%bO^Mg.8*EIV04F:@]?(O9.ID+Si)mus@BWRLA@op(t9X%?cd]%D<@niKETC*NY)a)anC?utthDOT?`!/p,
%B'pGrgZa#mYaH'%EcX6`IF>d!e>o^.Ob]l"f[+c%m7#acLkB)DfGdQ[d'b<tn>j0]j-TOX+*oW>hAkbTiq7fc)F!#$grlhT*g@bU
%nU6Je/tDgIh'Wtd2!!l"gaWgKRcT+o;gH/A4###2\+'P^XatsaQ"pK(!]p;_L"ZOp@tORQh%21G/c9*;Yi6b<9FVuNBOLVEAc)-0
%r3(EZTM^EGp"D[A<1treiA0bmO+g2CTMi,p#'s**2#n<1"4U^O"78,Z<%JPZk\7B?5db"sr<o7Q/2S9q9$tBPg?KBEE5Ck-3NP?o
%\qA\(h0aah%]m8@cs9JE2:/>9i:kDn?dK9C"jm`'(Rp[Zs(1pX$(,k]H_m4h4uq%]_p#;*-1abiC_pi_6M%g50)WLTc-#@Ej.rgG
%T9Fi7+ecfeL\CZb\6T3`lGI\HT.M17SF-VDUN\mXh$7`0)qSu/;Z#lB(#O2<n5s#s`C!UQiuWXGn;hM!;J<I6bP*BLniqRg@Je&!
%4rmgB45kjUA$6@nn)&HdoG+bunY#%-cT:joDV&[si`!2_>0atCY[7t;psA&FG]_7aoUPHa'aNDY_`hj?.K>!E4=509*kK2>o(m;:
%Ier85miK'@?cUbOdeEFLs$QkUfuI1`kT'7Xo.IdcLS$_?r?knbMV0>*rRM1]Hh<*ie`"SmT,?@be:)E:Ieol*[g6>X(B3t9]6sIB
%<IFN)h5(kE309R.W&J(0<SI2Afq&seOV5@/Z<i,];gG<hqlI_;Qu[*RqhIN5(Ph@@m=*usn41Ob:Jn+[A>P4/qL,'N<VTWUQ@e!I
%Qo=idMZ4ZI\q9AujS9qBIW4pblh+EnAB=YSrrYair)r(KE/Q"?OrOB?HMZ1f\*)lo?+tZ@pV#AXiG84<;UY;Y,+$%Y1e3qelC-"j
%]a!&'(Vq$e?8_`a1V\24qH$YoF>N8fSTi_s7hXBgm/t;epWNI-/b/:lL<Fq!ZYrPC43pdMA+i-k]"goc-$E8P:H<m;.bmXi>s<T"
%]\_6IQ"oUiMWW`?ks=uD%s,Io9M`k3=ZQMW5%(h./+uiH*t"R1*^>cGT,li21jm'L"8h<K^\ZLWT+Eb@eiJ&kd);@Zg">82a!p9G
%!>aD@TCBrFE3]>i73@`<TB<u=e`pQ\a6rblj%&PT0D`5_fY769lNhqB(16>%>L/XO8VR-15M,u%qp;j5#4UBp>iN5A,so*/s7RPp
%Nucm'<fOb6=P%2XhE"uhJ_+dDg;lNu$Vc]BVi5SG\+gR,2#_RiO2(W`#CkC&O$>/7l)WZl1*M(*44$SjqaG5:l0Im/K+=]NcTiGg
%_%t'%%L;NjcHlKD^MUb^cN*j_!(aH`J]m@eT_(2<j2'XPK.CQK9g?Eq-rO4U1[s\FTeQZ[;h9IQ&54Q+/51_JoIsAI_3E@+5ga^U
%Ol-5*pn?b>fVY@"(rCBP8"*X!(K(?/M3J?6(3^"&keN.4^*sL_YfMHAj?Qt.JZS;L4$dhAj1(sQ(hR2''HX+T_.3mLCuXlF#aGR/
%r"(p)=A$@3#ZE14+8@0"FJ<q>'c87Pg3JQiKh\sG8S56G?m(G2dLcuRpCft$1Fa,iPk("?+`Qg<Vi1t6mo0jp+sj37oF?Zm!KNqZ
%?,TW=oPC'i?rR-D2?e/HLDd(j8MOac]17]^k5joNrnuAQn2o7EJdq4'CPnb)"rL-UfW0]DD'B@O\@*I&#n'dbRliISK0o"1&VM<O
%0WhsN1]40iJ[LA%LNfncKc)*tg&hB_==n2O4*R'T&MbQ=$t4;2'Muk-[nU;m\/c&(7`b$(j!JjVb9`6H]2=-e))dK4S-<e$'+bfb
%!CKIkgHdK0B1K0=DG*$LOM(c:P!D(H"e%4TMa@e].0WsiH`NB=F>>$c0^W+5YR<l5iQ&uQ59VejV&H7mRbR6RI[&XH/^b6?/V/g(
%[nB,PKgj#K*%95%/]5@I.5\naQcAJl$L&m=4>[NP$u$</DrZQpGQ9:g6%HQUJHB^X3[G1h/ACL&".C7F#q/p2?#(WFE(U\qmYDcm
%/5-2j_*ViU9VNNJ]'dN7"EnDm]Aj^]#o4DjGCXC^)Zo`lS2lmfKaK-*.7cHO#k8,OK$F?pLj7u_+HXN/!\b1KbcP0D.,^eQ_U:g+
%19g'Fjtq`N+lTXZC5.+Q*5_h."O+A1Kr/,_4E\Yd%iL3p!I,3n_-jNcko?"BHq$b!;2#DdErs_*_N;4D+uoO[>F7aVCCcnc]`m,A
%NFb-&Y;Y1<#Xl530HP4J(U'R3HeL`6\3393,&rJQ>Um5W:_O7*L(k-;,kkaT^a)eXas1@U"<$)Y'S5g/9/U*;>Zr[eQ#-j5*9=DB
%aoXW=*"JHp>^$0VG<cqdV/.]T8brE$35A<X;AWc(il8l4l@KcU+U%31jKLT`'M-KU($3M+`5EgT&`5\2`!?upBnGd$6V`Rc5rG?X
%Ye@FS/IWnk_j^p&ScDI-5f[Ya,"7)u1*UU.6;B!\mMmdPG1n!!gDs=-]7\+\!is9?`X&FNa<"f7A;Q+1/1;KG;U7-Bg)[\G:bJsR
%D4Bejoap=B&22hTA;#h;"RoK+*:o+ta>:&*(s'!&1sfWO0S*k:>6,9%Lhr`unGIUG.ZqT`M1Pu2*i*((2n4&c:k6eR/>N^]'Yq5&
%h]7^iJq6C[=k!HU_*.i9TIJs11CI(PJG]H!$>#/UYR"X'6Gk6+DAjBJCoQA=$H4P)e3*0GJD^M-l)'1k`'U!6(g*VRWeh>870GiS
%0_???Z\3if&@FXOMZODHBI+@9ghM=M!.b:%`o,p/!B'u]MI<56YW(c64A@dq&;W%T;A+E[!KLhL+;5:g"H*]U>_a_1S;[R3_h^Jp
%`4mR[!$L3.lj^B7R#[;__1E4a$</>:TWIH2N-5IBEHeR"EljDMR2[nLlO:"f'(O1H>m[efV4.\-!4;n@UTJYA;hOF&)!D5OHD[Qn
%!u-Q-)ks<dTE)BNlPu:R=]g2`hp3;siaC+;L,9Gb.&7FYn/=Yp7@;Jkg*sBcV8G<D6d()&F_IgRG>7iIaN2;:L^Jm:(Kja0^q!f5
%n,\)+BSN[`6DHu"L&`OcnYh8E5XR4bV::pq$.+t<]*U&S[rd6<-GVm,L1nG$42I.E:)nY?Gj3:NY\#`HNGGKVN%l;!EqB]0g*04a
%R@/31LArAuj-VY^-lRZ6,+`E!/b,G;VF@6k:OOWWEn\(o&/'*fe@/h;'9!N5TV9JmZlj<4:ccGFBG5VSO3fBWR0@U^nl'<kU((-@
%fPSOU&XfRI64(foW?icDV?!#fKXQ4EP"Ll#j?sInT_/hY*mJ/+ipL4HTa4-tD@@+^>&0!P''OgRB*X:['UmH:`ndbZMbn;<CU?Eu
%/dBTT%Mk1(LG7'h%dOau!oF];$t*`^0W/?qYG*0PK7ReC(981n&nOr`*B6B^"#*\BKFYAI!WjOA!b^j:4IEQ9*ZHjad1"E92bV(I
%,>/VV+L#hJTNi[VG,&aq\<Y4@>""mi:*ah77N7c+mP:I6BXF;*gJ7t'P3YkhgL8A1k\C3F6/st9+Q!e77#tP5=DV#)+P8,A1r.1%
%7Moepf+aH5K$`6^g`.H/,1ddY@;gW%oVDi5*77#+dDCIX_!U1u"Q#+Q0X*5BDIdk,8Ps/+!)0-IkR:6.L,^A<Yft%lE7Z%g_bbZ;
%'"pD\Yolrql3.r_*)'Sk*+aUFj6f%jg7%1J7L]V-RT`fL5.#unaYb:S0L7*lB134pc3BZS1lXf3l^UOVkb)Ur>.k#h#GUFE`Zd>e
%m+P;Ar;P'g%$$[L+\4J&@?L2f%DZ.Mf+3+tCd__5jh"/r0nL8M+-98"ilB<(7Vh3WKa"56cl2:o[r2hoU#fVsEShdQG;hU>5<uKG
%adiaf/J\tl3^QrEV-@F8343fH,+7a*.KG<@^bK5=E3ZAbP/1knS7ECQ&P6T\379YSUP?^(&IJOL'9Q9c$G1Ag+qo/j'?/uP<.UB)
%`2`k>HV$8T`rbG`7A1#tdAj9LNrhX0d;!W=">bcoA]TJM_a57,,Ohb@Kdu4bMMS't-Zjq]75XUb3HDn'/tLaQhS+.H8^=uT/R<94
%H65,rNoI"85[Z&\@gP^EP$n>G).PBLd\PVWVo-Efgm6``0-o*`Nf%4@2bkNMg/(^iN<?)@,c<VdKEZAG($jeT-lW<L`chZ[KApV_
%hhdjuU,Wb#OLWT<8"tQ?n%dWudtm?J$OT_,',uIXjYhX%<9T0n_4$1+1XoAl2)(+O.M+;u5ji[@BE:_5$s.ud'8E44`>D-4rrjqu
%kS1V*_GIlRm#jV&DFdKn1$EZ-hC@B.&>=1K70s<f@SQsPa>b"JeQ?#t$mfJsKDXhkFb;H#Ak2eA3NiLkNj]l^pi5'7JsV"uLTa%M
%j3sgA@&ff?G:&M+(-A])otE*)pqSG<+k6E<fR\toIu(mjOq`UM/dSLDajK!r),Y6[&D"i_KiRgRfoWbc.X7eAr&'M^8`b@p7;>Y<
%)f6h+hh2[cTO88q7`d@ZCV^3t4MbP>3EUss%Dd9S+r"H4nD5fcI>#Wq7)rSS+&O7/'4T>83hR<l+nZ$T\O*\<cd'm*itCa,mcYQX
%g=]6ZeiB@gOU;>9_3?bFa=RRLAAKPHlpQLP:l0]S(Kb5_;l4.LrnV";6Q/kD!dkCoOc'`k$Tr@gk_<bt>*u+^_\s8J4dcT9HG](u
%#d!h4#Fq!R(EfT,d(3(.\KcgF_\Q$c,GP6NU$W:I%JacFK@B$H1T$+H#=aK--Psuc"c(@2F<N]Pnem-Xn;&KM[K%ksW*IpJ%S5Kp
%.7(Z6-F-Yo#9OsL<P'A@pdNrpGD;m<C`ENt!Xb%nkS-W2"#7r@L/F1nQ>kkcY-C'JM4m_',ICc*I`%<*KL5qdQFIq>O*jb?8%$`J
%!&I2TSUc);l!P]S3tDD3/PIQ1D`e='TH))5?pmNOX^an8+eU$$N,o!2B`]6l6l<E,'Yp)YAg/U=ck_N`(3Se@'E^c;9hF<4C);+-
%4Gl6AHnYmA<7pRYffc'%AhK7lNA^PDk&W$@KLG@>8hbT+-*9S1!sT24lCp##$Q5TS%nZpCPRoCQr`>c#$P*Q&3J*_+j5<,f8J]ka
%+_Op3oF@lb1_[YA#0C?7C@DlcH8'6`LGs34Klchb?qJLPLX=[AV(T-8AJk7HW)n[=6f3];(e^!XMI:<*%N8R4H32<*FUHMa8/fiY
%(u=j_#`PHBd&<b`?/,Yn.#O1<>a'>S[)Z%s$?Eej5ql,O\8sJF7-#Pa^d-Vj,e4AAr!15XDdelj&I6Sa9a"C0iSm%U4E8g;5,,"?
%1kF0])TU#T"HtQobD_\9JLH>BK:0NK4ck+O+D6,p&AZLB#pau<>kB]o74f]WQ.n9_^l0Ao(QXJ^Z0F$*76=n3Cd*HmOAO0J`,XK:
%8?+3eH)/&f%j],G1sej/-i>3JRLg]7#=DX/LcH=K,[F7I(r9'(J`fA,R/[O])dZE'E\Ke2>+jIW?<<Xo'U6uV+i];FbPrH;%q(nr
%LS<1N2I%jo`r('_F%(\BN;A,$\Og0t(mNHD)hh>'C312;2%LpgKtaMl*9&/24u2O=%"a&V:?q;6"_`L'MJJo_&",4FcsDdC$cthN
%iW0J:^(H(e5X%`>D(/)RCuc*pR6qHQGmso[5m4cL+OH<NKF%63MFE,JXHU(S)"h31F0oYlSV_En$7OG\RLHP;MKE`Eg4XA6>0!sj
%$mlo$Aqk-"J2/G!_XLR/J^=&hgTerLH:L#K(PaGdO'HO-2fqs=fs,=i,>[PPl*bE8%EMs=6$KSD.%-("4(_J&n0f/Z#RZMZ(r2)N
%]t$)R0Y'i*+3ju*bkS[k"j4o#Z3hW+=mO'sK>MMM10Qq>7Y7r8!@B<ne03%ILd18'00j?l.)1AR(J75Zfmj`Jd<Q!G_2=(U$9'.[
%[*'+".!<?dYJ?596Sao0Q7<_gfc+)C_>m`U_ROP`E"RDf6dM;s#.,>/EZD9b>ossn::SgS[o$lFCbN]#G]K,cPL*88G;r\mp,Z='
%Y[$-G6e4/!]VmQkIdK%%Ur_D4h%_.r!`c6pT-5b+iD157#6NKpOHU2_TUT^GXA+C&(:l<?,Jl'VLFm`%cH/&tUbe!7-R5rt;ki'P
%F(E?:8(B9P[A+ijB*$Hi=Rb:<P!9I5#q_qpP2[SgF!3T9S5JP]1f0jIS3la;3's_m.Jo+8F_P]^&@Ja!fbo0dBpTkbQad;%G:na=
%_C23/a][eHmsl=.?=>`l9VDSV4r+PI#e09L0p08U$&eQ&D&`Z%F_6RoZeC]rTT^oO[iOsePr5[t&'GVGd*CVt\P,?p'[8rU[o+#b
%Rro(bf(;OWPaorE6@m)j.3"L%PWf(^U5S.Do"/u:HeiCDG?"@mkC\?"Y7><+%u\?Q_-dAu'?3IqXgN_b2(b5Sc:66;oe;I\I?mui
%gkP=6i2>3[>#O'DTM8f!6pi:2$DJ2B,LA]!6p1\W,psm5l&?,d.eF/uG\F04oDrbO87r1k,uBO*L?.&(=t"LJ+r=1bN^nWI*Z]FU
%Y&/Fm\n&fL&Ae/"G4q$GaTs\eVkT=[m?8RqMcjk%!lI$<Tj[m)Ug#f=iLrVN5MCUnKZ6h82roahF,)3t<sJp[5hiDkiTd//=pAkk
%L/A*,TIh.o1(Nc!8rVHVJ0J_]Bj!]tY[E8F(PEJ_1mgON_=39X#Wk:_>`GC*f1c?NQQ%^g9QCr&<B`F99ft?<g0B12,8V/+\3egf
%#+0e#c'30_kh1rBEtcC67UKt8<nXA*&cl,]Ukg#+Pk6Y\4Qj>/K>T7-UGGUuD1-S\fusZ;ZuV:Vcr2+u2Ch?+)&$^prm6D,NJV.9
%c,2C4<9%YdqRpZK;*]taXXopN/+#)Ej8952IlCS_6PMp&El[GYE:#2\!Ec;1IY:;o0FSjLmZM'j=q`IFdNsMK(3mck;+[09?fPQ^
%UWTICcq'hR6khV=O_U(Ri,aT#DJc3f,moG[.HY.\]fCdh&a$@>HpGV:/^c>_78[?Cc7t$r:gdt+.`??U>>_86fj-_N.s"WK\K#Rn
%g<btOJl`)-<I7j3V&aG&ni;Y"OK=DF[aF5P'Uk6>_IU;O`FHOe@q5$5[?O<NE99qKW&m03):a0t?Pp/r*4ck':p2KSJ:S_6)3*h*
%,nQ$9#1HNm6RhDY$iqp'`3Rb"i]u5=&g`XH96<RnKmXpW8aL#@%#$&<7REVoOZMtL>G\-^(cDJud,&k93AC)QZ9\6@+WW6US&_1V
%FOD<FG&iFr@r3Z)YX5SXP/(I33d+qj'FAB"(jEpL=PR:cA4)3l(TNta@A0g:`1eZHiXo?Rrm`V'n,`!-JZ1;=,TLI9ACIS<)eJ4h
%R9Vi63gA?`%SB+I%.[T0;goEAoH($>Kp*4:U!s1pU\\F[coKCj$j:dE)e"/O\%\XiGGS/Rck43L/'B0Tcr\&>\<p.:DAJ-$aD!bS
%FU>@MYr/a&+Z2H?AXs8=Y\NTe*CU^uOZ1])T'/^,=<Lj'M$uaQL`&XUa)X"/q\(X=g*:BOTaW]-ZNoA2rjS(,P_n"V!k7\<#DbN`
%U^C?T>1r[+Slm:D]K:'Y#s\UD'BHRS4Ds2?g5#/"G@nCjjMD65i=&&,0m4Yp%_/D\#W$4qYfbPA:;uV]n0shT5atHe@=9X"e)#JI
%,$i?->B59eO$$Vr-"Enpqt;2[;``V\l\T'CRSUgWbEPOViR5ZM-S>q<SV'Dc3Y*/-Fl?$t#O4hUD\"L2<kr2q_NIe=?4JNN\S;6d
%dgR3&_EbWL(CNQbJ'I"%.AjO?B5)qEj(mL^jKsthYJCk'J`C5h\IVm]4?Y<Hc`t^2L[/2n[h6X!qX@S@NccSZBHAS\:C#8h`J-,l
%[f-Lqg\>\W/Z:+&^5gDT\sjQW1BrstJQ57O)[9J<q&1:d;Y<(_9Uo*6Ub?Q%Z9r9l@OXe)A)ESQ!<k(q/.AAA&:s)s?igr]C4p'!
%kYX+tW[^^'HCM^.U7UEh19)-Z;VF)YC+JOa+@7#.8"V:'LB)+.I,*T2&oapr:m&q'E##r&#\i>>ke'@0q[1\rodOH+[%.;rh1ZV<
%nUs[2:a*YFSH!K$U'L+F:G=f6bjX)5V(J+U_ni-!k6B\`(K=$?:)lD!lRHBcdU1efE6=CuNs@0?;2]"kcA%62H0/L.Gp+j#.k=_K
%&NHONfRdiT;0$#F6Z*`8cF'dh_>LFMlslfPmVjjOQVOL+:jNqHMFKe_qJSkV``<.RYq%@GIW]&N^6^U,Z4n/Kd%#Aq7.Cd=,.7nP
%.<1Ci/@B['!H3Wf,q?q@P&Q!fjF(S5kNc"[nt><.eqJpmGtjDCJ:[_:GqgsWDe!kN.#e:8p<58KADKF#?d`h4B$V&)C(i+-[XuYG
%$-$7^+bCq_Ta+R/K`tmHJ6+ZiQq.^!Zdo.W/\94G@uB,qOX0TZAnM3!#UP2@5%=J7doB6B_M(4Q;W?5X8[m?@2f8$.0W\o22a%3m
%A2'N(Kl^//a9r]p=^arP8>obB_GLW-gN+305)`tpW:Hr(X84u*i!`/7>8U]$mb2[r#%&*hZ\,7?Mm"=Sis7/\"0]@(6'5!F,Hqsj
%:ks`mY)dr0h;4AclM>iY!ET033j>KUCoTXoFLB&S0;WWlS<</FJoQ.;Z!?2<-u-EnA=N].%Flk9>0C%KGgVHWLc!tEn:js,]jr\I
%N0H,P.Aqe##.BDQ<0Ag@%8jS/!(Q2=.U8*Z21\:/E`=n"PE\/`.M;iUD>^l<()%#&gL'_,_Q*cob*L1=[VC[L7C<Ph2`o.7;[/.i
%S@UW&qhe?&UV-&(Mo[Rs(Pg??))t_qWgRo,Yi*5P9VJ`5PueA.6U7#J%`T^W$<!.i_Mg/\i@=[<Q37Js=3r9A=PuM8ki,"5G#cZ2
%;'GF8[\VZIER78^g/agMME/;cd"O2YjN>,TN26Qh4)E^Z3e:;&G4q$.b/9=BGf5BNn4>;jrN[Je2Aq/[Gt$85$L;q'GHK-n[N64E
%Q->LF7d0GU*T<eYo&)f&^1>kUq/1"Kgde[MDMa0n*?sUq!iB$i,)2<qn.r:2:'`;HlgV%S?+_S+P_k'oc6[GfO(W!o&'Ag9UHO^g
%?,3&+d"T\TSDY2%9A^`tBsLA8RV+f8VJLgK;!=$d03=P9$D]TuFik"SZ8)8/6CZX/QkH*N@Ud#kd<0'h^**u(Vj;SPf4..0@>VHJ
%ls2S#/,$H3&a\eV8\Q_,2"n)n61/N"%!-Ot!m>l"nnMC>H!I%,?0#G.]COQ$_pCK<JkE`:H>83ljZINVhb$OqJ8'Kd(S`aO?rY;6
%YNA<J]-n!*R%$SRj).)qA!Z#qNftKr24ns8;i!ADkrq'A6GGQ7;2=j+\THBm<:N=52[i=f3L,/(Y(o\!(8=qHFNZ=RcC,)VD%R[)
%\o]/9Dj)..SNN-W$uB/WH?SU-h!Jkg$=F"I1(d*eGo3,[&n4fb&u&e;=rkNCIWA-#)7n1SQQZH4Eb=P71r=@Q?%df>O;MBZL66lB
%MR!E'-GHF8a,WhI]Y2R\.u\\4#XoSU@mTi9I=RGEHT*pkGri5n["TBaji4Y?Zb=9O8E2/H1_2WCdPVGl*DiL.jYl1.h$4]%XOD1n
%6T0?-=thqiOc;hD.T/Q7BT$KLpVL-d!5lYXh9@cLm]Nig=.>%X9?>l3:^N:8.F;$(LhI;DhT_FfO=H/G<oScb8>QC)V8a,nT<sgp
%h3cfmKL2<ha')D7%5>.5BmdpblF@Xe0]@m<,$VjA>,4+<V_qmS;)PBCH0ULGEc=;Q9BGQ*=p:B/F1=E*MD>E:$Fjb7C?7d2i$\lS
%n(b#NNOqI.EcB8ddAbVa97%)7]c.s<p"Id0"F%fk!r:68(?;TD@U2B8%i.c>m>u/MH)\g=<ZRrIULY:7<MmWN<6ET56irMX9HLZk
%joLCj\;s;1,rpV^mU@l])1ksH`$=Kh(oX<^.^qb]W'rr%$3\"\A`A+ob/T',"MM4D";"P9J@4<))HWFS/1'MgG$OHe=);R3!011>
%RS$J-THTE2TaT8Y6?\^\o)'t(HM@M>pIolQ.GJ.\qdO`6[UL<L:d1/&@9RNDSHq*XNPM$6\-V3/;QbZpGU9Zm&TPKIb&ug3cF$AJ
%!lN[L['[+<^n*/^N/TE^$#<n#M1jImQ+PhF":YTBMUB.7Jo7VFNodMEm/\.6k-cSTP\mZ,)1DjT[TF"WaR5MWV'5:HUI*?O(%j)a
%%tp3%T_0<V$CIlaAQ/beZR`\aQ??V&G=p9UYpdZVO_l#bj\o5cqG+0jhTCMeC+g9=g:^;q#H.qE3?T(q3Z,?!a;RJ_7*P_F4>,GZ
%TAMhcJd/dq-A*gXgg(Si*!C0p=T'!9FlUcUXq^>n"NDHC6e=j@KUU>\:!,L..$FQTU9WaUd9QKY9=GVW_LW4:rlo&knTSILN.]<G
%ho(Uqg^N&J&;o*N$T\B;VhNR(JhCM':ra`nR3R7h9h7M,]/]LR#5W[Di9Nns!>Fqc)I%MVpD'f1O63:RQma3%IUNP=Fnk2VSp.*Z
%gC0GWdn+o^'7F>-@^DJ?:h%8)$%0+s`HTZV2D/HhR0Cb$?knq8S;S)7G!p4dZFSnVY>[^\=o57;>*/3)[C!pY74B['Vhr'A7Ff(S
%kG<f>kR%d7/-tXsV=G+bU6ehuleE6kd;9C15p;18+6MbAqEC:HPV,$9EaMZ7%e7<I!/1hh4$eZ=c!MJ*Ca]7s7prA5^`3U^s)<^e
%X=+i'8RF"M-cfA/TLfp1[%Y+IV=C:9G(g"i>Qtr@KSDRD#Xk3o@UP-p3_)1=(q5;X3cGZP7]@tkM9s3NF`1uViBA`L[uN!`l+XMN
%UZ;ns>\XA3$1DM*`K>?J,N^W@)PqkIJr/8'7W=A-AYjRHT2\sh6_?9'MYdGjk#669f>$t<rO3G@qog"E/oaZi<(s!8ObN'+&JddK
%/0mPdRS&$nbPMTMEuUJ?0Rlf!7"MDXM,[`IA5=C)O>&:]b6!0!*:'T`ZCSe]=:(J;[3sAK79$YhNNWI@g2ptgPk0$m+E/&l8pQac
%#i*j:DAW3W,(G@`^_)pQ#<:s7V88CunnE$dBmk`Ghd2"fDrLInYe\uR\2l!p>g\n4pP9@r8`QSO_VWt1kSq-%QAg`g,3c0_$Hd(o
%'oNkQ!riI"BWLLh%?`DeP`6b6_*s2G\CqGi!Z'U>f@!_-KG:g^K1i_A53Fu8_O0mkrBNd=eft\Lk(=&(/%BR\`-]6^=!f0Vik1Ke
%,ZkcUYe8L;=DhW@'qg)+c[AM*qHP^jcIFa+?X(T"X7lqGIs[V*X,4L[#r+10lG,G7/nCr?E[E)20e5;gJ@Ra'P^)8o&'k**A&sWR
%E0]W6ntgO;mom4>*8<K2n!p09lfu!ag=Nk*PfOX3,#,UtCVn+Z0FGpJ$?Ou1AeY8UehX_;!X4asAQ#UhdE:cGf"K'R=F<!_7./&J
%AVLMGkn?-?kX^1fS?XJK][0ur#>2Ms%:ret*a%F)I,c7$Ilh'BhEc8-/To!Y/q<Xi*B4>Q3_3[)r,E2EKb1#dcR:<m/VO_"(U/(0
%<(P?pFL:a:TJF6n^ZagmI-JN=`]ht-]](D`0m2LAU,bBo6_r8H:]N"`CeBgfO34^=?!=PN3I[SiKYh;rFelV;]XTN%7)MgSQB;Y^
%N0$QPe][G1:.T.BG/R9sjpQ64&@i(#NZpE-kV!.Q_u"AM/D`ed+^Tm@0je+Z>mMFNADI,RY*?Cpm'T6.<RDUPlhJIM`Z1Dm8>At!
%MfgQhZ1^H[b*ja>:5i+WAR&B5,?MN.,]dj`;Edqp3;4K;d$QVFijrmq?;0D]]qgrGX+ecgccEBqdS2^m2[\PJI3_bh."lRl%Hjun
%XPD;Vncq'`h9$XRPj</@PlRiOF%&5c)g@;7*S17Bg6s_b-,1Ynl"m_;K[7,C)_=MVf%Tln"D#I+ogp;o7p)U6DD4\,r>#\)mV<2W
%ft[o#Ig7^6\HFH@&4+VEBX(]LUq=jJ\Za9\iT@<:E?uh_FLr'1)HWB&n]84UGV"fG][6X\;=-3>ML0qQFK$(Rgc]Z9hM);Qdap+j
%&Wc@>aEZ)Z@P/jCCe0NGQ*6lkL*YA@N;j&M4b5<$$60FG?QIeU#dWRBKEKHCpp,On<]o?;&>ag;:PM%JNK6'ol4Np%'Z7juj@hmO
%CpAtV*F4%a`H9u=jBB/(ZaPGeml\4/%?XZg":GWZI&BAk>D4^=\Z.IC<4]#kX`B`qGsT*JjQOfjpGspfMhUXYMJ[*Qj=;5:HWPGP
%3RkcH9CUfWHPruF]`W$=[Z!us;d/6,gAccA*\"TT;F6UM^9C+SQc\)dipMhb[<na"\PZ0]_\qs(l)ET1`7I3:mNBP(8*CBcS)WI1
%HgPZLiBuN/Fd4=VO<n18NtB/K[P2/#VKL\<Q+9fs:Z)W-iCn%!b_RcVXJmXRpMo)?5ug_%6Pj<1=M=%$HDKB(/X[eN?tj$,n4eHj
%Jd'BA]>/[2U!TYj?B.ki#@N)r78u$10YFIO%5Skd;2jJZ0Q:8M)81]3Mh7INP4iW2a(UA#F]@/Z(V'*uP`c&9EDoX$;E,i]mN:Fm
%%,/l\'?.@,aPku[L]Uq1'"CP@5a\jqq1-'6?CHKa+)b[X)!ZKki(3W06crt:-&W8GnDY$_'EW2,EG*:HP5CIpR[o"j8d%&IMbNR3
%XgC,ki&-;2jbT1bT!i=S)TTHJBTIj1Od?`D%>c<QKJ*<7ig_PTQ7E[YmDGN=,3uPpb=FN7*7tLDCbq\H&_pae7bbkIPm^8_q*H<D
%lpJW3nFdZ_#f-/)']bYAH?DehQQOd:[;Xq@NdTZeMJUG'Y';oJ-&A`;ic>X(^DISeM1c3$+F\FT-:7r[qYt@.Q<)1p,JCWQs.Lck
%p-9g/OcQ2a:kPI74_SNTbXK7e#%,JW))qQh]t[(u3i]c5[pa&Q7.#-jg:;687Rhb9%6#'<nT='Z?67fEBK!KsgX+_hHkk;5&%BN7
%>$&&dOH3$0jMm_tMS#PFYo29)AebJ=q)-eYDmPuKXfh/UP[Oe]A@f1_69TGU\63s#?<'N%kt&MmX`Xq@6@ei!-5OdLMf6W6]h^OJ
%m61-(3nOo->i>:NXqt8:9>(Y1/--d3[bB/5Kj$?lNbm3.'&J]]D!J>`[<%]SZ:BP]A_AMGmZu_H:d"#0'_.BueT#ID456'tVD_;E
%6_a9dO)_@`?Mr2/<dn!T?@tWHkC#Y(7DoC*+Wh"R39hG'j>iN*B[eJ#HZlihfrF]#"#\9&3JEsFmVXPCL7Z;#Ae<0siJ5.s7N%?r
%aYs/rT0?*ERRRT'/oD5k&-!b+6R_XsBu'\C[m`ni^juri)%,,EMc;Bgc)@.c(_cTR?X,Nio\#-nFa8ieU![1Nb<$e6")R7*`uXkG
%\eaAgGCK3nFd7sdHMeR<Mr@ZAc$jS9[2B#V9"30lg0,AP^o4p=mR%B/8,Em@W`QWW\^E0]B>+J:`*mD0.f]#fha[>uEZHq-h0mEd
%WPfk+Hq-K],f&^HG$o/H_kM-L@a%V:J-0JR[K[PT0aQul.VKi40_R7eTF>um&Y%<%mE,J8@n<%%h9[=1^i2iE)g=T5=0?(&AYBU>
%\`"V^.q5TaTNf<25LZOj._#XACN]Hgh7C<(-cITS4+Y4.%eoHQI'Dq3NtsN[Ju(!;:u0I+j<9DNBFuQgUpBKlJ6'TdF)drEL`*NB
%::]eZ908hb8G\+6pf[G=^`^O#jLY1e/:\rA\<dm#YcpLV(Ng'CeqM^tq+m<negA1W,o*et6a;Wa^bf@(DJ4Cujq2K,Z-rS7QC<(j
%@Ek7l&np8GF+[HdKaYk>'e,e_1'A[:+RS7!Qc5:;TX0`&[3Kc+1m4-4@5Ko53*u>V,OSLfF',;YT"NH3NgHM!QSCNU]9fg$pSX&@
%1l,n-82QBLqQN.Unst.P%L3\ib,9]oA6BZ((BW#@jGWb5b8R)'n&7q]!;M+IHPprCU5"7Vp)K$gbJ@D`%j[t`SVgW)P"7pFY]Mm>
%$2O-"$Ls"9c^QR,`J#/#F.);pcgp2@odP%mL-N09c(hc$*+"EC<[^'G[F["++Bn$pmc(toOfVjkCZI-HdQtiBEXslEf_s&OeO(:s
%5<ltVB&rr:<Yifpg5aJ,G`tEV35g!nlRl+8,\OJAMnR?CIJ&WZ2/]#`QG(]R"Y#T'@gLhK"Jpa>QVX;:TO]4U'E2NHcfJuW+hUS8
%Fj-&=]JM#SUBE,tcT7[52l=DgHahaMTSOk9#nsI>LO_od\?`2%*tZ>lMRYt%h<C6TgaBL]W4ssQc$i6R_jF>TgX;V.X/`f9kgFi_
%RLrd<<]/2Y<QGA6GjN+aQ/e<""iAV17j>?[OmB$f/\q4_d]cj%Scc'))j[mD\-,q<rIC?saK)etU',8>m4ULiNtH[!(&%=+piFjS
%A4mOqV`&SUSV>t0kYOUpMja$PK[E>s,is]K?m1C7gqAtd,iPjJjId?3S@?=82;nu/Jf/HKKUY6EX:T^_<KaIb%@;XB00),a#\Z"D
%5ADT)7Ijn(k<VHA3+4J"Ji*NaSQ+$L_48LK#Z!a7:aMn?+n!%'@Q*.'WV:`qI%c[Q6/OkX5llJF^P]6`5Ifqbkms"eQ?>g7Z'FEf
%A'h&L/VS!,RW\Ij4]u3)$%7kFXsNh?gFS*<<jI0IH447g`!+SBP.4=A'=Gh-oR.qN+[SIWgg'E+n4/<OR8hhRY`r*pAiS2qU/EEU
%4_*Pq0NRf9j3.VaG4MifTG.A?bA(52:s#6WJ`Z;`hUo4gmpXPDC$n>g(goh8Zk3q7@r/*I?-(hoamY>DTYe+*@1hedZReg)aX$f(
%rS`ID+hrH)6<Ju\%)r$=mu<fFn+hTreXHBF[#$+,4i;XiHq;Kc'd)r_>:8iGoYgg@VCqMp`H*@qf'(<84$=6jNS$LFqVfWD=>'Le
%$NDk>ZXuJ!VdGn]+7Igu*&Lo^`bA/Q1@$`'W;@<>q;=5"19_=Z;fA@$=c9:eV*(l6fiYX$4AVd')4+"7*m^o2-3_O'4e@\Tf^*AR
%2B#X2<:gca`)[r9R]<`nB:c`S*\UZU7)9R.'oS3UctQKa'5T/>0'?rsBgY6I<Q!`'1p"7A8+GG7NL9hV-;WE5rKWUVD;e3#oos9H
%pm5G=cW\N23"qap'e[dY6-!&clgbkTqZ?F5#rp6KA=g..>.*28b&M7YTgirU6KMZ_BCb+6m3'&%O#8K_\otSL3".Q/Q",heDg*4c
%KMgp[U4.]&>r'0#lJGQmOIeSG:K]K(a#5KMGgok^/?4nnBn*(\I6+jhD0:H^2q;fi71"r-OS6ls*pkus1]p1BjhC#k2el?RBYL0h
%p!c]NJdL#<LL0Iu[bV@L<V);dG@TtJa_(Xnp(;:IrTq[]N?+J[A[0,G0X>=Kom)m"7/5P01`e%,9(f'p;Xq8sX%Rd^MZOTlr'P'S
%nMNq2MEdN_]f<$h?UM;EjKeY)@O%&.<2`FU?Tus^A\-fXB1e]'+qbqtp@cQF^m.DudDkrF)^Bns.]c$#g.GEP*;f:I%qAJa@&s:j
%MUHROGJEpbV[W.Z'uG-+Loup`>l!6BStUSinGUEFMpd<925e4NfEd.KX6X:BL8WDaaS7H%C8_G(8Wkn5'`/`-9X=.R"`!4"Ds*>J
%C1m4ATp]Ut>qggh=W?!1g[8A)XQj_Bg7i-!TcLq@4\G,VU4#IM@QP@9(t'INS_P61]ctrl,SKn:U<C:`)NLl*/@>+ZBuSc7pE=+O
%D,Zb[nIZ.+omg64,KlhZk"VCR%r>V.\:oTaSr<>aaOetDfembAYmp0Of<k`>=I6"_^o>1P2NSj.giHSYU,o%12'A>&)RC:N#k>VM
%*G$uT^gi_O#Rr&ZHhCER57dSET./%c(muh1n4sP^5t?u'K..15:li-.MrGYN@>3u;qrUnEAlT&@Zh.fH#%e#)hdhud)B#tOm*QNR
%4I7^9V8LQZSOc!IAMauT7#;+nPW]4f^Ko/cS=QTU>]4t@i*@u0LJ%ABQd=%6RAcG5Pj1#8UQ?f3f_EoG$R1BI>IJu:DJt"W<"J$I
%^fRDXqdcZ$:TLV38m4Q#N^2%eM!J/WmlI6aI)_")[Y0!Ng@=!mPt5k9a_E=Q^F>CdqL$;[m(QC[3;dXp<PeQhlbk0an^j>P8=16\
%"DSg\j]q^HVso$E/(pcpk(g^"BY.t*IDTqTiXTgH(`VHUIe&0>6EN?*2GaZFSd[dT5_Ajkb:1lVn/Q_!cl?t6<e]^2YZMFb\T7@R
%CECH'Ni07B\0^Fe_rBee)[2NZ^HA#[97Ah"2"[N[bIQ%oK,S&%d1=O-P+q?kT-r+/BnGo%\T6s;@]C,,heG^/DMs-u=5t&R!AU7C
%3)KE$A\Am*Q/s*te).F$m88pfSgBm63g@=<dp-"Z0cFO#l>I`sRnF2ed<m5c13<W!VS'5%2X#&\pt#S`k0*k^(]<<ee$.%iYr,(S
%QUp?gerR(qi>nAM#[pGaDbC(1WU(!>#W/afM[Dh6fl^dLNT$'AU";l$+5JD[.i)Al&OZ(5cQo'M%NU"%F_0Nke@3K4&Q^(!:tPiP
%LTVrL2a$=JF&3l7Q6c%C0@E.?VRcZLcb=r<a.O[)s%tFaEGLFaQ'[d)F(<2NbatI'5(*MDnYlHNU6mLoBNloX4UH/(42?l3Hc_R7
%_lK;,)J@(kZ$o<fr(c'1[%Yd?m+f)BrDD>6(5<msBL1O*Q][!r8T+ZDC<TJu3#,`'@W].F;kf<rFH`cKXhtMS`LJ%<AK_j)O"K-c
%K&.c.KB=d2Aa,-.*nbL\,j;:V6jNAc]BbY\hMu\bq=707p>&@m9&?q[B^g5545Ymp=uT-NA7:lpF2f=6)RfgboG3YPBqM'f8anS8
%UGOl-'a@"PP6oK(6t=0D`\TLk7EkR1goZLR/ZH&%j[N-8"\L,(FaW2u(=%@7dEHt_(1?cVc0Q&c.TsdWBE?UY!dd#G&)gL&ba#nC
%GR.$0c]m_[q=l"R]cm-3&J@UcgVbuTHp(]h?c+?3bXd&jSO*<AjfSocbOBmC0c`X;>;8HBY`Z+F+#2,f36N77);Xo;FMR<\Ar#@)
%njgOfhQoD]EbdY0,e^h%cr0r@K?Z9#bMQ![[nfP1]$e?kh*dT02^X*+NNMR+<_7n<k-_NNdF\Id-#5\#Weo@46FSM$V6Y+UUGeJd
%Uqf=hl(7(`AjM&=]aH#NiDW#XmL_O@NV[@[)3eVr\<UWM5S8bP+!'>:8M>+qU?>-$1n`L+EeLl0EAq:7@[[1cdnqRb!c0Za^3N]b
%O7Z8N`AhnDgp$1Ll1u$DlC5)C&"PW^/qsp[c-&J#;in@NbqU:X2`a*gBn9gppjcFA<\S!(qB=F+c8=e'_lN)T^7a4MRg`8Sm)VZ2
%<m5QJs)_QjqZQ<":+Pq6V6gcH2gPb^Vm6F?naX^>h.6^CDuDF7-i/JAcSC?T.8*J/p*@XZ)g,k?P3:8t@*3TW-U&8cZQ<RU!6ik*
%fi6/FaV'<[:1Jo=P`bMjr&qr<#0Z0Jgs<51n\XO+kgoKeB*$HfMW'[$W\qDTN%N++@l&W1fq6]T\p@\SV8bqq2]`t`PG(F=:(Hd)
%78i(*^<hh9>"TM#NPA`fISZ=X$fjWRf=7*cTI0lZV^JdCbG@d`*:KkDED7b7XaMs^#TiZcQ0ZU4\dn2--_(s_'+sZ@CsmF;YGr5.
%_)"mPcH<'nJkn872,gZH6#p#?.qn7R*"h\a2Dh>3.NUkNAtAK`OI.K6-d("Un]'+0VhH+5BlcPc%MV(+48)Bn6AXXgnkccL:o-Eq
%>CRF2^YKq<XM$#JiO$Vd%<]s$hhDK'G\hZuCbhP'aqpP,CU>dZZ^DW58-=\.RQ@`P=h);b,-0PWXQsf^3D^LRFq@]/paHS1;L;Xk
%:c)5u[i>N0lHA.TTI1ZS<JeqrL)l=V`4.AM;4.[:/m]l$#g!Ma;n&>oDK<$:`qT,p$aE.?6pfR)j(<2c%s/7Mq=H:@(TqSMNg"X8
%YZp\Y]ANQG(tin>'n\AleB?I,9&Wkr>3gqP^4Tq[n?&($(L2C5'hQ-d(5a>;F4Yop6^!Dl>eEfIgTGi_'/eI[?sDH90%N?WaQYdp
%$u`lU9^u*KI"UF99$FN&?+u_o3S&]YX8`Ca3]D9(7Nd4S8(a'eD2__tXOJJWW&DF!m^QZQEAcrJ7Qf7_Y9e_%-ueKd*lQ@j)_gN]
%*#]IV#9N_(_lB4;L5u)?3gVY+l?o+V,@5?7N9?>Ge;75"4pn'ljFsD/AF]WEIe1?AM<:mSQ=^i_j:I?6ndfBTWFQsO6on_>a2XDW
%M0MOi&@p2N8`Ig%]eX7X<Dn9I?3E*R9&g[F(YD`Rs4#/pq"B[&O04qV))q9RneSs;!Hc%bP/g"-7p`@M$F)G[V#J/#WS#e``dsr4
%lpeOa;3Kk";(-/3NnWaJNp^qb#Mjm+.c[tT"r@#F@?$lH\e5BA`TI'F6p0guDC<_Ofmc_jq8Pa&%.%n2.LF`!Pd?a(j5r,\0.A1j
%*1LogUr*V/<hn#";`q?$M\g@A7&@G?-0KHkCN7Ob0p^cd,F97bG;J[CF8F*;LgbLS=]bb!$n:r_BqoW>P(F#uGE?33WGU)=n)BBf
%V8&C'.onXDAm(e@;!OC]%R'Ju:JY?kK2['cX=27?WP2;=SfUYTHb/b[Zu=RHW0K86K='/\YtuVN/l]Ti;hSgN.0$2M#bAk3CB2FW
%KhbO9K_,.r;1&0a%K_8)5hRS/=PWIYpkTJ\fRlr8adtqnmX?q0Ir6kH50<G+i<g]m]oq7+SpJr\>#A?`[UWmEi8lZb(#He`oao-M
%0Grc(]ZIj)g-M>adsm6;2JK;F;?B)d/kL'Yac)#\a4Nl8]+b?&Rb][>Af<J!i]AMQ\ZJ1"):L:8SHL_A\^Fh5VG@5B4mm6<YX]O,
%I01t^\N?G).3:"#EqQ4lDJ9nc'9<=7HB+;ja&?eQ@W,f+@I)!U/\",rkK;s>ehlKP>qZO9Xn:ah4U\u8Qo7t@4lrb<6&#NXnd[f,
%77NiRIFdDGD*CHg_1;2K=5"XYo\kUo?I.MfgtOnX8/,i3G_c70.%4L53r,"WVqi@BSRW'[\ngSnP3/4@6]*Kr0D7l%UGKJZ.G3l\
%-*0./[*tY%k.V7'.a%9W%W?*USO<o8q1P_kON=H$q;=gs*B=J+GV-+:COPs3h`\RC]5L9173P_8<Yu8>PXnX*)lSLW^("S1fL`h=
%YA'%_6\@a4oj9jk<l#bbk6c;6AV9.F:+"j>nVI1J;6RVH3Bl@?gTM'"1;\EY]Th:V8e:5r#G7GG(QD*AaSYFj[L.kuIfIUK5.4kQ
%>]ZI-1q:g;kG]8lU7n^#YBaBW(u:PtV/aBK,l,2ZmdFAM2c+\Lp00M/<M($^DU^EO=1&Q'fk"k'FG*%I%@kC8j'&T2NDbP'iUbXc
%W7kU"hM]H:e'O2WMAu_q8U,9e39/lmft#b"V.m>J(8cj-%ZQoM=%gSV&<$M89U2YISW-kbRs7N^&,Y,-*&OF4l?o67P`fon.e(Y*
%_o/R@U-aMm;:^\3&&)8I(IN+0q7'6c+m^]3SDfYcDkXP%]'I&"e<L863]Du-L\9TJkoPYte:O;K!dHpR'F9bJKbB]T4u;jcH74ut
%=S7l]f$2t&X%Q:\O=MCUoi$*&h7[/4[s(%Spfh'K*pVJXjD`phU"<.%Pet-X>^/*[Ed.JR#.JHP.6H0PIT1Y'j9bR;SJt+8Osd?+
%q&rS&mTqO/0<39@.iHXC]HToRLctf%!T,EiUL\%#*HKt2HUQZe9FQ;F<h'5=A*-(X?*QO$M3ir/2-iJf8mt3q?2r?o]mDbmDQYDT
%eFM8&*5[=e2tC6VWs9G&;@$.F=V*C(3[,hFE^f3mXCnP<6nP3TY,/nQA<@O9#[2uS]2)JS405)QX_(YX\=^/RVnFM9>P1;hi+7@l
%qT;D@Je4@Qik@3-Cs**4s1@/Olf#gUN4jE)"+G98N4A-!:.Bo5pZS?CN!P@(UK9Sl)irE<ZhA(-U`rL',CMN3gI'tRQae2#F^9ta
%HoZQ__?UL<[tuluolaHWY$Tk+pbV9%@,@cGCC]SO#e;I,<j3KB7$Ke%A&PTeaodK6Mp)"MBsJ?0Dl9PCQJ?KE&G(+G[3;Fs,-6;r
%HqfQu7)iR^N$T;,RO/YLCTa-sXWF5UBp>o!R,/E:9c;,JBh]"KbqPihIR#>ZfT4,c6WjDGm:e.FBTLUJ>B#0>W_<n=ZK7"ZR4iJC
%:pm)q/W)"%/*JnDp]U8:YEZ;hJ0:iKZfE"0Mr=kp<IOAu<O1ojLR`4T^-RJa@g^F("u+?EkHUNFU07R\Z]ZrnTK`:b8X-WCIC!-$
%)\ffDG)]LAY1#laiC4F'6g&aCjhh:Np>iS=H]LrhH\I9g$CmAEZ;G-VBl4]-V<$?YI//"jp4Q`\;1%%g1:]s0M`u8jIVI$`r`"ea
%!g(0'J0:_ul0QRr^:Leu4C;Uef]pK\RQA#iAYp71JHWos#(+,UP(QYlP_BBD:f0[0+SI+[6l)-OfN+7s>F)f%`MK>3Bd0el?s5+5
%hWL0Aa%>GR>e40UOUnW0@3<bNW/\h$`);<`TT1I8F9lK&lS#]HmtNZ4:6d8KFf/DnCTUQ^N;R3%Z-GNNX8*R`f`$eE\VJ>1@F)/\
%><j<'_P%&RWu<>=lbbLL[*F"Nn,>VNRHIdUop6be(sufS5Y&nup*43,NMi]UJ!rHjdN7MK&([l/&\+=8%`hs_*`A*`8:!m$jiLpT
%B8lbP>L\/""S'iW75F:]2k&kJ;ek\6]D(%Kc#eC&$ZWjK$9M[L,JIbINb!i9UBBGnf;!t5!;Hb>'?5j_DXmWlON!6/nM#5sbZ%pO
%DQ$X#,Qosi"T"R/d=p/&lG!5U6AUC-QT<?+hFI`(d9h=;DR<1AaR:u]m0Q^\#^F-?GH-k3)b&PTZkah9(<)nM2&R8;$iH!\;74IP
%+pqaqQs<'+1t7G?Xus)7I+6_*'Co!Q'csT%(eVGMPY54IB5En&#LC^f-dQ)j'a?jO,o$T+D8d]("5=j^/hWd&4RrfB`^B[$Ib.\Z
%B+JDcF,gnYLc8`7Vn,'k5>;Qj.$0B"abJD3'VRdU`YX#[%kiH3NacBQ!IX^na+eH"'IqkDh=-Y0?)<C`:D<\_fg`*&4H)g4&DX7$
%n%aaT*ad0gG#<B9,BW3:ClU8,Ft^j$a\g.3qh@);Gsa+jdNhO91[eWGi`4N>rD>h"oLH0[-AubZAN.e?@nc`"LDcq2W47UhfZA4C
%/<h-7j1MPI4bVhYK1FNrdM%m<2:qC,h2jIa<i9gnR;l15\e'889[Rl570Y3/DCss+>WS4$k-4R%;Hj7JInOV\2jVJ7%',K=llP0=
%cIg7^:U-,m<=M->/0$OTBGLp^?Sa6:"iJ4jq.$=ddlOeXRt?;Rf(]-DiM/NPPj:g*4Q"'mgnNP'rlJHON^.uTJ#^#X30tC"e,mP-
%nH;B7;T<ITg&*1IZm[N]-Dg.6\PKN6$VR6%MW#57dh+VMh:q+,.5s*3l+BEn>>IYG]D;.d)$CpPk[)Aj^K6n"6k$\r^ZJ"P!^t`m
%1Mn7*Rt=HaHY;_<;NrJs(&Dd$Kd)\`%BoYj8d6>(GGDK%Z2&r?)"(/*lUEt&SOrgX621.`'9cm#AOthfA_N;L^IERi8lO'6o%dF`
%_UV@Q5ZFS]ehL:/>@t2Hmg%i]/L;7LXHUNH^j1Oqdi)-$UaF%J8M7$<qBqTYkMZG_V-oY:OHiH1roAmr=]E[U8lt@9[0@(7l3:+&
%+!LK76qlf\A-:m[O:B\.1Ht>b\0U'r>=l7r`.EjE'F,3TV(t/iHLK1H(L!`a%*F%7^_n.g60e(l2Ji4Ha/+D29pLl-"hPtf>X1Ck
%S[DSN@>^V1]YA=@;MZ)k-njQH*K#;LpQ>JlYK.,JadJk7^Ja8kk<R0\ZPh:ZF'FZ%*DM6I/f!a))R`Uk@N%!kZ,G4p`)T0_Xu%Xl
%N=1R_C^fWj0%+tl3)Cj-onG4[ntK$-OJ"O<NFXlhTHPF.;6n;0/llW_/m\=_P.T.Meb/qmF>3sWW)QhlSRWR4MYfq1I>LZ,SQ)t]
%S8"b?Z%a2;6tKnWUXa03b)_+ICQcdL4'X7NE@##p$hf_%&S_3;%mq3tglH05e?J,I$X&44M^,22MI/2oP=!.oZCS-eFOQ\V/2\bn
%\(?QASZf+%brG]9"og5c[t(h1A#d!Hq1Rji3G[=p9]ANA[((8jrp??&*>^7mp$G.9\t6XJF<PVAaM.MJYq9HKRqW+8qEOcGIc^9?
%5JpS)9T#q#THN2/_C)rYKVt*l;<cU9G>q4"mk-P$:o\:L)`JEVGjApeB0CDCL#uu,`fpEUc+*LCCj1Ui#<Y6^r8\!,EM"5hV`UTf
%daM<[)D"6\k%N!j\?5$j@/BB.I,T'GT55c/*6f,?.Xj0#JoP&P&<`;l<rd1bj*dZ8aBPBK8JVpT:@DQg]5"FkUEc8g&f,$+BlgiR
%IfII#7sMXK3TPh%+$Tjan<0D-O7/S301f$Ea'>E]P."]O1's\s(kQ#NZL:)naX2ekeuonSX/ffa)WI;Z;1G;jO)oGU+fY;lf5#CJ
%7SR@EGguDJKnLQF)C_36_8tRQWPh@Rk$S/d[gt1(<)aQ"<tNoA*+2>]+Lg$8)<GE+3r$rc]htUOML'El]5r+Fmn1[4YKOUU0qs)!
%J2gff%Yu++GHoqq?)#g7'8qOCokGik18*]<=I]7Pk%9Tb?o'o(oe!Q4U:dIk!XudWlYuMf/[j*-YO:)1A[opjOH.sGr($iZZ0=Vi
%=lDTuYM%L[L?ULA<Spbbk'\!e?tF2n&/ll;*qj9s^nZ'U1ROmL(ddUF.FZ\\C0SDf7LJlfiPL;IAVkZS<=Xk!]eYLV62^C3J+LOu
%'Dq25H_Xiq:CaQ@QB5lZZ`)HXp1r79QE%<ES'0h'_\J>IMFG`P\H.A;+;$cCB!mM(.!iG\WX(De[!7SASf5()CF93-F@o\/DM9/b
%PSMpR@=q^,_21>qV&&A1DVgAAKN\+aRhO+__\54O+7e^7IHoA"Rghmfr0'iN*-O[]WP,ib7)j\h'.L+F!88iEcO[eQ74\Wo/mr(7
%^#A?t/^q?Md9[^V-T-8IaW!s^X@IeAQa]Z-Mu!V$RSPq5G)8*"r;?1TJ2q*ePt-%E$m%jp!4CI_)3lK*!i<j^.Af^noTkpnMi]^4
%$G%+#S!"hlbb^W%Q3P=K+kt`qj][C&(K=O_e=31JhSC`'=EC/cZ\Kjn8bJs#C7\8L2Ycb_437W"\Dq9-(A\/e=R2ROhn1c6?L'\s
%RS(.Fe3mO!^m0p1XD2BjXR--qNDQr$2!=#>HrO^&Cu;-H?,ok7iL3I/a1.Cpm.RKtbtVV;448M7P`GD"35KA(!l/6@1u0$P2a]/E
%;(?,h$\?q_7]W,B59]>SM>4\8:C*#E%EZW4!8-9I/TQM6a6-WP)\qQil._!9)bd(=$I3!!?@mPI4I9i<`?IVC$P'SA.O<<SEQa/@
%E:!(hWqp6g2G04#B+;10Z$U5V4)sT)Vga'2`Yao4`RlYS1nn9<T8SAJQ^W%+KG1<9#s@C=GGXr)O\+HVVK^?f>/R5^H/Qo=3/;*'
%5V,CBL@^2.f:#mC"?NVJZ3H'&;a1dQF8&iR@VDJ\@g<4.jRo!N"P-g\Hi7SX$6\0&63Gf+DBJ^/R&`mT9<ij8'@S]ihm;I-L8u*2
%JG+?.qEiFWnhRi7^/`TQX4+0)THj>c5ch;f]0[13#I0^3MmH;j=(.^)9;?_3Gb+$Ob"/apZ"dX6R^nEpkmUQ^lhSrpPE1&X%a99.
%lZoGcbC0N"V\RiML-U!f1JLml0f:d?f?C^a.lHn7Z'0]IQ%#B]/lr0R*kWC*o'=B>KnuuWGrE;D,&AHhN!TjJrP;QZLF5c0]09BO
%p9A^$p>&\rDbB]+f^,>U1gdl]^\:O;rmLW5GQ6XFJ,Q9Ps6Ap"HH#mDIuaR&q`k&RY<Vs"++O:WDdS(Qr0JN)pu=U<r58R4?U+Pf
%lX0V\00fBl+2@aCVa'.DrV4-7s7PK75QCMFs7>EGJ,Jl(s7,9%7KaO`$\%]:huCUOs8#gs!b$9PMZ~>
%AI9_PrivateDataEnd
