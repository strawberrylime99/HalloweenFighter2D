%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 7_cloak.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 151 188
%%HiResBoundingBox: 0 0 150.8520 187.8564
%%CropBox: 0 0 150.8520 187.8564
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 6 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:40:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:40:02+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:40:02+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>128</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq8Yvv8A&#xA;nJfQ7T8ym8pHTnk02O6Gny6usoqtxy9NiIeO8ayfCTzr3Hhgtlw7PZ8LF5z/AM5AebLzyz+WOo3V&#xA;hK1vf3jx2NtOh4shmNXZSNwfSV6EdDvgLKI3fO3/ADjLruqWn5s2FjFO31bV47mO/jJJEnp28k6M&#xA;Qf2g8Y3+fjiGUuT69tvMvl661i40W31K2m1e0Xnc6ekqNPGu27Rg8gPiH3jC10xj8wvzm8keQ54L&#xA;XWJpZr+cB1sbNFllWMmnqPyZFVfCrVPYHFIFso8veYNJ8w6Laa1pM4uNOvU9SCUAioBKsCDuGVgV&#xA;I7HFCY4q7FXYq7FXYq7FXYq7FVk8ywQSTOCViVnYDrRRU0xV8Sr5NFp5ItvzDv5ZG1i81Frm0gBX&#xA;6uyRTfF6g3k5SOrEEGlB75hS1BGUR6FTqICYxm+Ihnf5ved/O3nbUNIfylHf6NpFvGs0D3UyaZLc&#xA;3MhHxRI8sbzCMUC8OW/KmZnNmKCMX/GP5g63Z6B+YkMDadomnvqK2Wns6Pdz/wBzG9w/PYkJIRw4&#xA;+HfMTXZZY4+n6mnNqYYY8RBP9l/oYH5X8l6paeZr3WfKGpSWNzo06mxlMazFVngLFZA232XKkEGo&#xA;8cu0kzlxiR5tozQmBKP0yQul6z5v8reem/MImDXJfWuZb2WBwInadHSQOIx8HEvXjTagy4xLKwdk&#xA;2/ObyVfJY2fmrVb6bUPMOqQrc6jLSNYKhUX0oVT7KwqQAe4Hvmux6snLwnkeTXHU4zPwxfEPkXtf&#xA;/OLjs35TWoYkhLu6Cg9hzrQfSc2AZS5vW8LF2KuxV2KuxVJfOfmVPLXlq81lrd7t7f044LWMgNLN&#xA;cSrBClT0DSyKCewxUME/JL8xvM3mSfW9I80CJtV0+eSSCa3XhGYRM8Dx0A/3VJFsTuVYdwcUl6ri&#xA;hKvNtx9W8qa1cVI9GxuZKjcjjCx/hgKQ8asvJ/lnzZ+VWj2ml30MurWml21tNNbTLcehKEErK8SN&#xA;xDCUnr8XbNDny8GUTrez8nJxabHKfGR6qq1nmv8ALXzT5m0vUNT8wC1uPNk1vDDo8lokkVtbiFub&#xA;yq1SfVlJ+In2A2GW5O0CZxNEQ+9thgiLF7ozQ/KP5gX8mp+Y79bew1vUGgtorKRy0aWcaSo6NIEr&#xA;yd5y+y9vHKu0M3j1w7Afp2dR2t2VLUYeCMqlf2UQfsKTw/l9+aOgPrOmaRZ215ba7TlqTXIhSLnA&#xA;IpA8RVmcKRVaDMzS6qOLGIEGw5WDSDHCMQfpC+b8lfOVjZXejaJPZLousWtpbat68ZLo9tGYmntw&#xA;KfG6tuT171yOLWyjE3E9XMljga3Zf+YX5d6VeeW7z0Q8l19TW3iWSQuqiNFT92vRGcIASP65gSnw&#xA;5Iz69WrT6PH4spgeuQq0P/zixLE35Vxxq6tJFe3IkQEEqSQQGHbbOjDRLm9fwsXYq7FXYq7FWG/m&#xA;46r5LIJoz6lpCoPE/pS2b9QOKQ8//ImCM+efMdwrVIglU06HnrOob1/2AxV7lihLfMukQ6z5d1PS&#xA;J5nt4NQtZrWWeOnNEmjKMwrUdDiofNupaHd6DdixXRYb39GxIYvMPlgfo3UVVwAPWjjPGZyu5A51&#xA;+/MLJpZn6TflLdyYZY9UZpP5g6z6ywaT5ytpZVqP0Z5jtWspwQfsmWAMhPuUXMHJpY/xRMfdyckZ&#xA;L7iys+avzMlVZm0FLzivGObTNQs7iKv84SR436E9APfKZaaJ/j+bITA/hLY82fmVVkh8s6s8g/mi&#xA;t4k670f624P0YBpa/i+/9TI5sfd+PmozeafzYaFg1np2iRCvqXerX8AVR/qwmc1+nGOLGTXET+PN&#xA;EpdeFimr6xdaoJLS98y3fm2RPifS/Lcfo2Y5UHGa8BJ4HoeUi+wPfJx6Y36I15y/UwOWIFyPwDPf&#xA;+cffKlpp8es67GIbObUmihbRbXmYraODmY+Tsf3ruJN34gdadc2uOBiKJtwck+I7CnsGWNbsVdir&#xA;sVdirCfzcVW8tWKsvNTrWkBk8R+kIdsVYJ/zj4h/xJ5hCLSOC1gRn8Wl1C/l3/4I/dikvccUMY8+&#xA;ak1lotxIK9YYxxNKMz1r94GKvLrzzV5R8usbbWL+OG7uCHlU1aQUFASqBmA60JyYICFDzDd+WQum&#xA;nVbaO/0vVHCW11JCJY0ZxVA7ODw5lqLtkyQkeSRXujfllZLfzy6Zc6aunuoedZLu0RnevAwmMosm&#xA;424A/LK5Y4nmGQnIcilofyMADKNafUZByOixXN5JdqlSB69JuEYYAH42U0PTIDDj/msvEn3pl5Ys&#xA;fJq6k0+o+VY7eFE5LNqtzBeh/iA41eWco+9RXLBADpTEyJ6vdhb6Xd+X0awjjitmj4mKJFjCHopM&#xA;a0CmooR/TIkUxYN5MuZdB83rag1tdSkMDp0CufiX50JpX54Fev4q7FXYq7FXYqwr81Y2l03QIw3E&#xA;N5g0kv4FUuleh/4HFWBf843M7an5naQ1la2015D2rJLfSCn0OMUl7lihgv5otTQJK9GuolH0cD/X&#xA;FXzj+Zz2kXmK9uIrae1S7DOqzc1E1ykxikevI8lWNUMa140atBkMmzjZ7ASyw1e8/Q76Nf3Bk0y+&#xA;T0gzDm0Dvuki1IrxYA0r2zHhlN067DqpcdB6RriyC403XbpVudI0WynuOe3+9oVOMnpE9ViDlDvQ&#xA;+GbAu6B2eXarrutajLc3KSHTorlzLLBbH02ZjtWRk4s7eNcw5ZyZVydXl1x4+EMfjs7ibU4LK3le&#xA;aS7b0pEJLVV9iWFe3XLo7ubgyGXN9c/lxey2umXug3U3rz6dZ6ebiUdWluEkj9QipNXeDJyb0g1+&#xA;5itfMVvdgfDDPbz8u9OYJ/XkVe1Yq7FXYq7FXYqwf81pmitfLQVS3qeYdPBp2Cs71/4TFWE/841u&#xA;kr69cKtBNa6Swr1oYpiAfvxSXt2KGA/msaeWHk7pfR7f7Gv8MVeSnVdG8wX9z5W8zxKJDLI+kXdO&#xA;IkiJqFQg7PGDRh1/a6HaYoiiiUbCXv8AktDDdc2vpJLKAiUxHjXiDUVI6jbIjBEG3HjpoxlYUND8&#xA;86d5i1m78lyWYXS7lZILa75kszxjgeQHRX3ANfDJ8VuVw0Fjfk88btHJqbJAu3xAFuI6bjqdvDKj&#xA;pgTbhT0glLiZHpXkbyz5MtbjU7iRZLmNCxuJRsigVLd+g8MujERcmEKFBOfykury6XzTq0kUjXur&#xA;xQTWdqftpBbsY7ZnU1oayGVvCuRPe2HuTDztaMsl1LyqyxBx8gUoPo55BD2YEEAg1B6HFXYq7FXY&#xA;q7FWD/mk6KPKgZgpfzBaKte59Gc/qBxXow7/AJxqiH1HVZ67va6PHTsBHYD/AJrxSXtOKGPecfLs&#xA;ms6FdWUTASSOJkrX7SpQDavcYq+bfPP5da7c+WIvNGmGVrWGZjqscIdpbae3JCXiqpJMfpsEl4Cq&#xA;8Q2+9FlEpfH+YvnLS9Bh+tQwXUlx9jU0kWSJokQs5eIFG5cRX4SK+HjMyIC8ILGdE836JpWrjUId&#xA;CawnESuoE1artMSPW4bNxBSnUbDAJgdEmJZ8v526FPbXN3PZXAngVXhCKkvIONuTIxSOncM23zyX&#xA;iBjwFhdx5z1rzZrcF3qBFvoGnyCd7dd4axkMqyMdpGLU28MF2U8nt/5D2HmDVNVuvM1zbtbaC8Ji&#xA;sHlFGundvikVTv6agUBpv2wSlaKpOPP6mF51YUZraRafJk/5pyKHqdp/vLD/AKi/qGKquKuxV2Ku&#xA;xVgf5sxpIPKquvIDWuQHummXzKfoIxSxP/nGaGWPRtW5VMfHSwjH/K02GUj6PVxUvaMUOxVBaTpU&#xA;Om28tvEaxSTSzKtAAvrOXKj2BbFXlvnP/nHfRtRmlvPLVwmkyyt6sul3EQuNOd+tVi2eBierRn5D&#xA;EFNvNL7/AJx987Q0t08s2V1wqRc2eoemhNdmAlEMlR25Vw2O5N+ac+VvyP8AzNsUeOxh03QIpmDT&#xA;STXM13MBSg4ogZNun28IlXJBZ/5b/IDy7a3Md/5nu5fM1/GQyR3CiKyRh3W1UkN/s2Ye2Am1t6iq&#xA;qihEAVVACqBQADoAMCGFa7o6ar51gtbhC1oYGMtP5ShFPpOKs1RVRFRRRVAAHsMVbxV2KuxVhHmn&#xA;82tD8u+YE0Oaw1C+u3MKFrOKN1E1ysjww/HJGzO6QufhUjp3OKaYL+Y3n+51mXRP0b5f1uJ9Ou5r&#xA;iT1bP4SWtJrWMKFdwzetcKvtU/LFGyD/ACd82T+UtFvINc0LWBNcNZ+l9W0+eYcLbT7a2JPEbfFH&#xA;+rxxS9R8j/mZ5d85zXkWkx3UZs1jkDXUXoiaGVnRZYhyZivOF1+IA1HTFSGWYodirsVdirsVdirs&#xA;VUfqdt9b+uemPrPD0vU3rwrWnh1xVWxV2KuxV2KsN80/lH5J80a/BresWss11CgjkiSZ44pggYRm&#xA;VUIq0fqNxIIO/him2E/mj+VflTTfL9inl+zbT7y81WxtDOlzcnjHNMBIaNKR9n2xW0D+TH5a+Vta&#xA;8vX9zrEd1dX9rqE1ibhL6+gqkMcW3GKaMU5lj0xW0f508haX+XfkDzBqHle8v7W7uljX1zcM0scc&#xA;SyCKGGReDogkk5Hcn3xUl83Wn5lfmK8MqnzXq/qIOS1v7n+dB19TFCvb/mN+ZEseoSDzRq5WGH1f&#xA;97rnYO6KKfHt9vFVbRfzK/MZ55GPmfVHPpXDKJL24ZfhhLjYuRXwxVdF+Zfn2l6f8T6qQsIaOt9c&#xA;ihZ4zt+87UP44qpy/mL+Yi27/wDOz6vy9WSMH6/c13A4/t9q4q9Z/IL81dSh0rzJd+Y77UNY+p2n&#xA;11Flle5KR2q3EsvH1GPHkOC16dK7DFU2PmX8xPOjcrbzfYaSs0QnGh6RLG1xCjjkiyzlXlL8T8RX&#xA;iK9BmBl1chyDfHGGN6ifOujzF/8AFmtCSM/vXkvZJEDgnb05jIhFBX7NMx462ZLI4wnnkv8AOj8y&#xA;YiZ73S7rzb5bir9a1e0smhliVPtMrxhbefhTcKAffNlinIjcU1SiHvumajZ6np1rqNlJ6tneRJPb&#xA;S0K8o5FDI1GAIqD3y1rROKuxV2KsD/N649LTfL61UGTXLSnLv6SSz0HufSxCnkUu/IOVX8u66orV&#xA;NcuuVR3eGCQ/P7eJUcgn/wCbGnw6h5A1S2nJWA/V5J2XqI4bmOVz0P7KHFXwpaxSCaZeJLAiNtq0&#xA;atd/pTFU30pCuna+AoBm09Qop2Se1kPH6B92KobSmaCSOSMcgyvG1dgBNa+mT9HPFV2l2MlzBecF&#xA;5UtC59hFbvK34JiqJgtY51Ebtxc3sQA3+w8Lsxp7cRir2D/nFXRq67qMlzEslvNph/duOSss04Q1&#xA;BFD/AHbA4qjPNXk7VPy+1ny5NPHZL5Xsb+9Gm6jaxstyDenmkN9sq0oSqFSa8B0zC1WI8JIb4THJ&#xA;jt5pOt+ftT1i9sdI1LUre/lhtNBvoOUenwMkg+tGduaqUKGhahHUdRXI4MJAGw57pMg+sbW1trS2&#xA;itbWJILaBBHDDGAqIiiiqqjYADM9x1XFXYq7FXYq8f8AzcnbWvOeneVrrVholhp9l+nIbmNVM892&#xA;zy2ixo0gZVCRs5bY/aH0Ec1JoN/849XFzCvmjR2mN5bWt7FdR3zKFYy3UZWSFuACVjWBG2H7eAqO&#xA;T1XVNOttT0y7026BNtewyW84FK8JVKNStd6HFXhOlfkFd6N5njlltY9S066urdbmbkKeiCk8jMmx&#xA;FHiZPcNiqlr/AORlzpptbTTRbSXF7JfWtqHMjI1u2nhY1k5Col/cSOKfCHI7DFUk078nGi0PWtWt&#xA;Ld5ZdH1C7s4rGvN51huIYVK06BYBKN+vXpiqXL+WuraVaXYh0+eZx+kI2KcX/dMhsDxT7bGKSVCa&#xA;DoeQ74qj5vyh1bT7izsPqIZNWvLF4bsDjLbn6nc+pC3qUI2b4gP5B3pirPv+cctCudOsdWlniaP+&#xA;5tVVxxZHglnaWMr9pePqrUEDFXrGsaNpWtabNpmq2sd7YXAAmtpl5I3EhhUezAEYqxDzp590/wAn&#xA;Q2nl/wAv6amoa5JF/oWjW3GKG3t0ovrTlR+6hWtBt8R2HiK8mQQFllGJLArvzT+c94ztLrdppEi0&#xA;JtLCySYgHtyufWrTMCXaPcG4Yg1oH52+a9CvTB5wjTWNIV/Tl1azh9K6gNaFpoF+B0HfgAw32bpl&#xA;+HVxlsdiwlj7nt+l6pp2radb6lptwl3Y3SCS3uIjyR1PcH9Y7ZmNSKxV2KpT5h8peWfMcUUWuabB&#xA;qCwEtAZkBaMnrwf7S1pvQ74rbzlfN13BHeeX/wAp9CsItN0qR4rrV7qsVj9YX+9jgjio9xIP2pCw&#xA;FfHbFPvRP5Vfmh5j13zLqHlXzLBa/pO0tvrtve2HIQyQrIsbq6uz0YNItKH6BTFXfnB+eVl5GddK&#xA;021Gp+YJFVmiYt6FuHr6frFPiLyU+FBSvUkClQkBI5NR/OS602w1TVdasNKu5XMkOnRaekjwStG4&#xA;oHmkc19NmDbV3phRshND/PS78q6i2nedbG2a0upTJ+nNJBAMj0Bee2Ys1T+0UP8AsTio3T7zt+bX&#xA;mKbWrHQ/y8gtNSkurNNRl1OUNNCIZXZEWNY2TesZ5Fjt064ryUfJ350SXnmC18t+fNMt7DVmmC6d&#xA;qMFXtXuSCqpSTk0MjByqnka1pt3Vet2lhZWfrfVYI4PrErTz+moXnK/25Gp1ZqbnFDFPzW8yalov&#xA;ldItIf0tZ1m6h0vTZiKiOW4JLS0/4riR2HuBkMk+GJLKIssO8r6FoOhXUlhp8PO4nVn1HUZnaS4u&#xA;JgQGMkjksxLcjTp4ZpJ5jM7uSBSL1myjFqbyBl+tQq8rHswoWNfoUgZUYpeca7asNUkaMfubk+oH&#xA;7Ucgb/Jjhidlekf846X9oPK2paIH4X2malcNNaHYpDcuZIWUfysK0p3Bze4JXAFxpjd6vlrB2Kob&#xA;VLe6uNMu7e0l9C6mhkjgn/kkZCFfb+UmuKvmZNY/Mryh5aj8sv5YurRbIek16Ii1mT+1Ibsn0KSN&#xA;VjyYDfFJFs4/J7ylF5X0jWvzA1y+try/ktJTIllNHPFa2sI9eWMyxko0jFAW47CgpitdHnf5f2UX&#xA;nL8xLbUb5hPLahtX1aTekmoztzWEV/ZtY+EYXsQaYEl6Nq2rzXVtbTS0aa3W6lnVT8KyxERce37O&#xA;49jXvhYPEJDfXmvXUkNvFfXcTQaXp9rIxB+uaj6kcboAOJZfSP2qUrWtQMSyiNntd1+VWveRfL+l&#xA;ax5Uube51jSbGSz1mG7ZYobuGWZrpmjkcosbRzSNw5EVXYnbcJu3k15o3n/z5dg2Og3YlvJAVvjE&#xA;8dojqwHqfWqelRKfssTt3woAovsKBZFhjWVuciqA79KsBufpxQ8y/Mm5e8/MXynpcZqunQXuq3KH&#xA;7NXC2duT8mlfMTWSqHvbcQ3SyW++qTXsxXmYI7m822YfH6Ua19/iOacBvYj5a80+ZLjzbrelahE5&#xA;0owXP1RpIgnprGq+lSQH41dSx3G3jmRKEBAEfV1RvaBuVvkit3uSGikgcR06CqAKPv4n55QKSs8u&#xA;+Ym8vfmFpPmBPgtrqVNO1cHYNb3jKodv+McxV/vzO0U6PC15BYfUWbRx3Yq7FXx7+f8A56k8zecr&#xA;q1jl56HoztZWcXIlHuIjSefiPhLFiUU/yiuQkW6A2SL8sX1KLy558kt5GWzn0qCxliX7Jnvr2G3i&#xA;JHiFaQD5nEIL0b8q1u7PRrvWY1Et62p3wllUH4o4lgjCBSSabNxBPXJtZZJO1tLY6pJbuskS840l&#xA;G/PjFxZq96sv6sWLyTQ7+30bzH/imXm8Wja3ayXNotDygeJ+TqKVLoA5XenjiyHJnn/OUevajqM3&#xA;l/SbSdxoN7aHUI+AYLcys4VOQ2r6akNQ9OVfDIyLOAYZ+QP5oz+S/Mw0XUZf+dc1aUR3HI7W9y1E&#xA;ScV6KaBX9t/2aYIlMovsfJtTyO7n+s/mt5suXAY6XZafYwk/sj03vGH3zqc1uvlyDfiGySxXDXVh&#xA;r149P3kSJHTcBeT7fcua8NqD0i6nkhupZG5LDYzK0nvJIvEfQK4FSiBpp/LtxHIxZonVlJNSE4cg&#xA;B/wGJ5qxXX9Bm1bUNJ083zabaX12tk91Tmqu9EhZxVdhMFFa7VrmdoiOKjzYT5PsGJZFiRZWDyhQ&#xA;HdRxDNTchamlT2rm1cZdirHPzH8zf4Y8ja1roIE1nbN9WJ6evJSKAH5yuuKQHwje8I4UQyepIwrK&#xA;xNSCGNQT7nc5U3vafKflE6V+R0N/foI5fNWuaYzlwfhtI7pViLAAkg0dh7NkwGsndkn5EG2fRNbs&#xA;7VlktIdQnFo4JJKOUYH4vi3UrSu+SYFuaGa10wWUYKXMqTTXQeg48Y/iSlBx/eMBixeR6g2nR2/m&#xA;q3mhZrqaK3n0+YIW4cRKJQzCvEMlOp6gYllHkHvf5weSn8w/lFpeo2kXqan5ftYL6BB1kgECi5i2&#xA;8UHP3KgYCGUTRfKWowoUFxHV4XrwbapFBUn3qfpysNpfa35IebZPNH5a6Rf3D+pe26GyvWJqTLbH&#xA;hyb3dOLn55YGiQ3YnpCvfat59u0I9W41ie2Rj0paQRQDx6MjZqtcfX8HIx8kDBYvb+V9QP7fPi47&#xA;iMcT0+l8wxyZu1V7ax0Gy01B6c/oPJPGD0DKEq3zZwfoxKse0tl9WOzkpxuY4WofbktPpD5GSWL+&#xA;Y9E8wahqRiErR6K8LhYa9J+T/EigbFXVWrXt92VjywjH+lbEgvpH8q/ODea/JdlqFwR+k4K2erIN&#xA;uN3BRZNuwfaQezDNzGVi3FkKLBPMH/OT/lew1O1h0zT7nUtOkEhlvSPq/MgtHH9VSUAzBpU4s2wX&#xA;G08LzPzjqvlrzBY6hfeYNVutQ82apJG8elaPOz29pBHvFamvKFwnV3K/a3HiVN0w/wDKv8sb3zx5&#xA;2OmFXj0ewcS6vccgxSENtEHUAGSQjiKe56DBTIy2fTn54xDS/wAsvrWnQqg0K7025tIUFFQW93Eq&#xA;BV2FADSh2pkmsPDvJ3mXzZ5fg1eU6BqEi6lL65uI7OaWKroisecbUHxJt8RxUhUuvN/mS/jlaPQN&#xA;SML/AO9PoWlyqkUoS54t+z/bjbHhLBr6/v1nv5pbWeBLmzktZBIIkoDIjryElTsFPSjeGJZRfZ35&#xA;fPLP+X/lqS4B9WXSbJpg1a8mtkLVrv18cVL5K83/AJeteav5o1Dyxyh8k6TJcSNc3C+iokiqZLaB&#xA;Ceb0lHBKgdq+8abBJ6n/AM4j3s8Fh5n0Cc8Ws7mC6RK7H10aN2X/AJELXCGEt2O+WfOur2/me3sV&#xA;snk07X7nUNQuLpa8q3F5cKrBqhfh4LUMtd+1N9XqoAmUr3DfFkRvZHF0t1dxWmmw8BJdTMsaL6qk&#xA;VkZyq/aam+YABNANiC8w31vdX81/BMtxYzxMkE8bK6MNiArLsQKVqMlW9IQOoehNHNLAplWzgE7w&#xA;Rn94RDGxaNCaVb7IFMMRvXeqU6Pf2muadcajb8rWS3doXt3kFwh7AxTAJyUg7fD9OWZsfhyrmgG2&#xA;b/8AOPl1qq+bddjtbSd/L9zGourwqRBHqNtxHFSdizRS/FT+UZs9ICIbtOSmFJ/zix+YZ1a5tp7j&#xA;TZLG5Y11Rmaqrz5F1hCcxIR+zWnatN8yaY8T0eH/AJxe0NLdYG8yanx25rGLZFJ7kD0mp9+Fjb0n&#xA;yN5F0LyVoS6Po6yNEZHmnuZyrTzSyGpeVkVAxpRR8PQDFSVXWdR8l6hb3ei6veafPE6+ne2FxNEd&#xA;q9HRmqNxirAbv8nPygicT6fqk+gmb4lNjqjRqw/yRK0opv2xW0pu/wAt/wApoiYNV/Ma/kjK1a2u&#xA;9as1UgGtSAiHAn4Jz5J/Lr8gb24nXQobHzDdWfE3Uk051CnOoUlZGeKh4nouK2XovmDWbPy75ev9&#xA;XnidrPS7aS4khgUczHChYqikqvQbbgYWL5M8w/mRZ3ul6t5esLS5hOv67PqktpInGY20zRywwKgL&#xA;VeaWn2SRx8a4GdPbvyq/L6fyN5Z1XzLrdB5kvrd7i7QEFbaCJTIluprxJH2nPQnboKksfJ5P5Q1H&#xA;zdqfl7RLPy55bu9Riht1tY9UVOEHr8eciPM1AqKzHk1aV23OayejlORJPVyOMBV84adf+Xb+fyr5&#xA;s1Bru8vre01GzvLON/hcO3qIiqHdhFLBUbbjcgYcmmMJA4wiM7G6V+VL7RWik0nnO0V1NNLaak8Y&#xA;igklB5ypEqhF/dmUcgAOvTKNRCf1kMokckSNX1GC1l1Cw06a70TTZ/R1nXIxyhieWi8PGRVFOZX7&#xA;NRvuMMdJKUbUzANIV/OXly3MlrC37mGrQCCIhbiRSPgQ1YFqsBRTkBpsho1zTxB7p+QeieY9J8qa&#xA;muvadJpdxeapNd29rKVLCGSCAAniTSrq2x3rm3xQ4YgONM2U3/OPzRfeWPy41jV9Pl9G/jSOG1lo&#xA;CVe4mSHmoNRVA5YV8MmURG74ml1nVU1gatb6hcLqasJV1D1nM4fryMpIcnxyFt1PtKz/ADIjtfyh&#xA;s/O+rAGd9OinkiUcfWunUIsaLT/dkxoPCvhk2qt6fIWr6bBea5FFdHlfMHvfMN4DX4mYyzdKjblx&#xA;HiaZVxdXYHEBUevVAw6JZyppszKYxql6EjjrUpbGQRj6SeWNoGMEA98vsQN1p8MdpdKn+9FncFXP&#xA;80T7KfoZTX5jCCxlAUR3F6h/zi/5iTTPzNjsWbjb65aS2oWtFE0dJ0J9/wB0yj/WyUWjLuLfVHnn&#xA;y9L5j8o6rocV0LKS/t2hW5K81Wu/xLUVU0o3tk2gPnv8rPIHnTXvPNjP5glshY+VrhJHnt54JZZp&#xA;LU/uUVYWaiclU1ZVHHYYEkAPp2eCGeGSCeNZYJVKSxOAyMjCjKynYgjqMLFZZWNnYWkVnZQR21pA&#xA;oSG3iUJGijoFVaADFXNY2TXi3rW8ZvUQxJclF9URk1KB6cgpO9K4qx3z5+Xmh+c9Hi02/aS1+rzi&#xA;5t7q1KpNG+4fixDfbViG+/qMBAPNINJzpWgaNpOjQ6Lp9nFb6VBGYY7RVBTga8gwNeXKpLE9T1wo&#xA;VYNJ0q3tIbK3soIbO3IaC2jiRYo2U8lKIAFUg7igxVFYq8s/5yVDN+Vd5HyRYmubX6wWNJBEsylj&#xA;EtRyYGhpv8NcBZR5vmv8z/I2m+XvMF7ZaMzNaafb2jcpG5vL60bM7lgAK7V2FMFMhJn35p+Yry08&#xA;v/lt5NsIGubmDSbO+ayjUs0t3JCILYBRvyVxI1PEjBLlTZhIEuI9HnuteRPzA0PXf8KXNgZ/MGvw&#xA;Q3KQWxErtGxcsvJdhwZGD78dq1oK4OFsGfY+aH06x8za/f21toOlTT3vl+H6xc23Ej0xZircwePx&#xA;EpTj1ZthvgEWyeYVGujeheSvNPmXRvMfmfS4Q2m6TD6l/wAvh9WrCWSOKuzGJB6jb9AO7AYRHZhP&#xA;MOJK9E0Tznay22vaRpt4TY8NTtbuKF3CpFMVWbYH4BJHQnptharG4e6/nP8AmdN5m/LPytd6Y0lt&#xA;p/mCSddXgjYik1sgBtXb4ap6rE9RyUA4ZHZriN3hnlTzHd+WvNdjrmnyehJZXCs/pn4Wi5UljNOq&#xA;slVORBZEP0EyxpdirsVdirsVdirsVfPX5x6xpFn+a8aectOF/wCXn0pYtMSUfu1eR2M8kdSF9WoV&#xA;a/aApinetnjt0Dqk0+laTPLrGpapKsFjGBym9JFEUCNTuqD4nPuTivMvsiw8j+WrTWo9fFjG2uJa&#xA;RWQvTyJWKJaARqSVTwqoBpitpybGyN6L428ZvVjMK3XBfVERbkYw9OXEsK0rSuKFlppemWUtzNZ2&#xA;kNtNeSeteSQxpG00lKc5CoBdvdsVW2ej6RY2kllZWNva2cpdpbaGJI4maT7ZZFAUlv2vHFVWzsrO&#xA;xtYrSygjtbSBQkFvCixxoo6KiKAqgeAxV5F/zkzoFveeTNKuJIuGnafq0Mupyw0WWO1n5xztHsRU&#xA;s4J29/HAWUS+ePzO8ladonmjWLTShwsrP0JLZalgYpbdJKcj1NeW/fGkiT7h0u9+vaZaXvHh9ahj&#xA;m49aeogan44WCJxV2KuxV2KuxV2KobUNL03Urf6tqNpDe29eXo3EaSpUd+LgjFVHTNA0LSuX6L06&#xA;1sOf2/qsMcNe+/BVxVH4q7FXYq7FXYq8E/5yGv4rDzh5butc05dR8tLbTokE9fq5upHAk5H7Ik9I&#xA;D06++Kemzxp7dde1C703yzBdandag4W0sUY3HoQgFI4jKekcYanJyKDriu5fZ3lrT7rTfLmlafdu&#xA;JLqzs7e3uJAahpIolR2r7kYoTLFXYq7FXYq7FXYq7FXYq7FXYq7FUs8y+Y9K8t6Fea3q0vo2FjH6&#xA;kzAVY7gKqjuzMQqjxOKgJV+XHn/TvPflpddsLea1iM0lu8M/HkGjp0Kkgghhikik21jUPLkTW2n6&#xA;zc2cbag/p2lpePEDPICPhjjkP7xgSNgMUIy1srOzi9K0gjt4q19OJFRan2UAYqrYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqwjzV+cfkXy7cS2Ml42o6vFs2l6chuZwwNCrlf3cZHf1HXFNPOr/wA+J+Zt6NJe&#xA;wTTU0ZHv00y9kjnF9dqAIY6RkLSJGd2Tl1KkjiMwtdlMIbJ8GWQVE0T1eZ6b56/OTyWmgWCWhs9O&#xA;s5pXj0wRek9561xyk+sJvLu8vpqQAP5anLYZoEbHk2ThW8tkP521SYfnVp+qedtREkcM1rcXq2Ks&#xA;y2scJD/V4l5NsrLQkNXctSuODOMgJHQ00YM8csbjy5PpPR/zt8gX3lex8xX1+mjW2oSSR29vfMgn&#xA;JidkY8I2k+H4ftdMyLZcLNrC/s9Qsbe/sZluLO6jWa3nQ1V43HJWB9wcUK+KuxV2KuxV2KuxV5N+&#xA;d2o6zZajobTy30HlF/US/bTHkimku2dBBFI8RRgrLy41PEt9rtip5bMv/LDVjqfkqxnaW4kmiaa3&#xA;m+uP6l0rQzOnCdzXlIFUVbv174qyrFXhv59/nAunR3PlPRp5IbkBV1nUoSQ0KuAwtYGH+7pFPxN+&#xA;wp/m6KXzgtzq2sP9RsR9T09T/vPB8CDt8bdXbxJw80EgeZZPoWm3GiRn6pKZObJLNbM7IjtESUZX&#xA;X445EJqki7j5EjK8uATCcecg7vUPL/5hQ34ii1nT012aFXBlMIOqRRvGUkV4IwPVHE09e35LxHxK&#xA;laZp82kMbrr8vn+tzhOM40eR/H4pB335VflZ5yvbzU9G1hrXUJlASxmkEkSTL8LF6n1KbUpy+192&#xA;DHqJYoiNUB+ObDFo4Y4iMB6B3JP52/Kd/LvkvQ/Ldmbe81HWL+OI3EYIeW6mYogJNaJFH0368jQZ&#xA;fhzHJmB6cLRLDMTMr9FVXnfP5PqDQtItdG0Ww0i1/wB5tPt4rWGvUpCgQE+5pvm1akdirsVdirsV&#xA;dirsVSvzR5esvMWgXujXhKw3kfESrTlHIpDRypX9qN1DL7jFXl/5QeYZNP1+98u6o6Q3tyJDcwVA&#xA;Cahp1ILgqOvCe3WORD34scSoDOLb80vJd35ph8t2N8L2+mVj61sPVtlda/u2mWq8zxbpsKUJBIBU&#xA;0+MfNGrXGoz/AF2ViZbz19Rc+M99cN8R9wlF+jFeqd2b6ZpOlW6zutusgK1Nasy9Tt+OT5NVGSaq&#xA;0LhCrhhIvNDXqPEeOLFQWfTr9qxSRXDRGqhGDFSOhBU1B8MBALIEhGarfapFbWd1PMt+0twlsP0j&#xA;BBesEZXI4yzo84IZKf3nTKJaaPMbN0c8kgsfPF7aa1oGr+hb28dlqEU8kUCMtRDNRxVnf7S1G1MG&#xA;PTiO9lnLMZGn3JlzU7FXYq7FXYq7FXYqxH80PNuu+VvLiano2nDUbg3CxSxskrhI2jkYOViBY1kR&#xA;EHTdhvikPAfP3l3zIdct9f8AMOlxwXWvTcF1K9SNY4TGiJyNhA8iL+6HI+vLIfTVqioxS9t/LHyn&#xA;5TOj6Z5jitHn1oxFJLq+IlntZ1LRXMESgLFb8JOcZWFEXFBfHOrW4gkt4zUenHFGVP2h6VzLEQff&#xA;4MVP4+SdatdSWkunzrbi6WOG5doiaDiwQMW61UDqPDJFhAWGnU2kaIGDvDokhEi9CxaUV38OIwJ5&#xA;/NV0uJp59NkismtBaRMs9zIFUy8woVQFJ5AEVqcIRI7Mj1qjWGjR/wA9+rU9o0lbCWMerzi6jM9r&#xA;BGtAZ53Ce3OUrkejMfU/QvAl2KuxV2KuxV2KuxV2KsU/NDyp/ifyZfafHEst9Ev1rT1bobiGpVO+&#xA;0q8om/yWOKQwH8hPNhklm0e4kLfXo/rUJfr9agSNLkHb7U0LwTsP52k8DipfO/5g2Zs/M2tW9fgt&#xA;b6/giHSgh1BmFOp+zLXFfx9ifwW1rPFbzyJyMcTIASePGUAOCO9QMm0gubTLBjyMdENubQxgkD0S&#xA;SeOx2+0caXiKJihVVSP7IChVB8Bt1xQs124WL9D16Qx31w3+xiZFP/BOMSyjyLF/LFj9c8yeU9P6&#xA;tdX1kjf89Z1rXr/NkTyZj6n3pgS7FXYq7FXYq7FXYq7FXYq+dPN+n3fkv80Hm0+MiO5lXV9IjSvx&#xA;ycnMtsu3Eeo0txBQf7/i/lxS80/OFbKTzlq01i4lsb6dtQtpxsHj1OwhuUI9uaHFSs0CdJ9Jt3r8&#xA;SqK1+/8Ark2k80x96bEnY/rxQujWu5J4joe5/sxVK/OjCKW6VetvpaQHfpJczcqf8DEcBbIfpRP5&#xA;P2C335x+WrUisdtLJMe4H1a3d1/4eMYJLDqX2jgZOxV2KuxV2KuxV2KuxV2KvOPz18stqnk/9L21&#xA;V1Hy+5vYZUALiEU9fjUNuiqJl/yo1xSHy553uuV3HI4WKCWGGa3jFSF9OeVJoEJ6iGSeSNB/Iino&#xA;cU1aWaHrcun2nB7eWSMVAIRqBa7bmg74iYYSxkm2Raf5j0y72D8H2rE9QRkwbazEjmnmnJDPMCGV&#xA;lX4j8QFQP2d8KGK+Zbk3V7fODVbm/htz4FbZF6e1WfItg/Q9B/5xh003n5mapqRHKHT7CRQ46CW4&#xA;mQL/AMIr4CsOT6owMnYq7FXYq7FXYq7FXYq7FWNfmJF5xn8qXdv5QWA61cUiRrnjwWN9pGAf4C3H&#xA;oG2xSHyl5l8mfmdpOm2mmXPlW/N1byMYNQtx9aSjIsXEfVlkUco4YurdVJp8TZAiwzB32S61/Lr8&#xA;zDEXuvKmqFZFZSUt2DltjVlYVXxqRkeAsxMIW+8jefILYtqHlXVTHEN7g2MoKqNhV1GwHzx4SEcQ&#xA;Q8Xk38wIYPrn6C1xbNd/rC2cwFO5qU6e9cncmHDFAGDULoraIt8WWR5kjNpyf1GrzJKNU9T+zg4i&#xA;nhi9h/5xe82aToPmLUfLGpW9zDrGuyx/VZ3TjGRaxyN6bq1HRviYg719u8gWJjQ2fUeFi7FXYq7F&#xA;XYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e2b1a4bb-743d-314c-b879-51df2655a49b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e2b1a4bb-743d-314c-b879-51df2655a49b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8e9e7e28-1eb6-42f8-bbb0-dc9535292a96</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e2b1a4bb-743d-314c-b879-51df2655a49b</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:40:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>86.873602</stDim:w>
            <stDim:h>53.937137</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -187.856 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 187.856 li
150.852 187.856 li
150.852 0 li
cp
clp
110.753 148.456 mo
108.204 149.361 107.122 148.261 105.729 146.604 cv
105.768 144.172 105.621 141.708 107.736 139.991 cv
109.861 138.267 112.513 138.329 113.482 141.197 cv
114.474 144.138 113.907 147.337 110.753 148.456 cv
cp
62.2143 158.157 mo
60.8872 160.58 58.2954 160.84 56.1137 159.578 cv
52.892 157.716 51.4585 154.601 49.9116 151.66 cv
50.7182 150.146 51.6499 148.832 53.6811 148.466 cv
55.0795 148.214 56.8647 148.749 58.2495 149.427 cv
59.4838 151.768 60.8422 154.868 62.5922 157.245 cv
62.4975 157.551 62.3784 157.856 62.2143 158.157 cv
cp
13.4965 139.322 mo
13.6694 138.473 13.9399 137.654 14.31 136.865 cv
18.6889 135.782 20.1752 137.114 18.768 140.863 cv
18.3706 142.177 17.8237 143.422 17.1303 144.6 cv
14.5073 145.574 13.2221 145.064 13.2749 143.069 cv
13.2436 142.896 13.1909 142.738 13.1264 142.588 cv
13.0981 141.453 13.2651 140.305 13.4965 139.322 cv
cp
67.019 66.7446 mo
64.9311 67.1714 63.3178 67.5015 61.6538 65.1274 cv
61.1079 64.3472 60.6137 63.1221 60.2514 61.7207 cv
60.5053 61.2031 60.7016 60.6397 60.8383 60.1128 cv
61.2827 58.4009 61.895 56.6201 62.5239 54.9688 cv
62.9565 53.8325 63.5737 52.6323 64.6284 51.9971 cv
64.8217 52.0742 65.019 52.1592 65.226 52.2617 cv
70.4682 54.856 68.3461 62.0244 67.019 66.7446 cv
cp
123.828 106.323 mo
124.974 108.935 125.474 113.084 121.962 114.353 cv
119.854 115.116 118.858 114.371 117.982 113.319 cv
118.529 111.406 118.251 109.558 118.871 107.588 cv
119.822 104.559 122.375 103.014 123.828 106.323 cv
cp
144.935 133.194 mo
140.576 124.228 136.796 115.024 132.795 105.898 cv
129.023 97.292 125.688 88.228 121.623 79.7568 cv
121.632 79.561 121.657 79.3926 121.718 79.3027 cv
122.017 78.8691 122.116 79.2647 122.687 78.8521 cv
123.105 78.5498 123.859 78.1475 124.603 77.7647 cv
125.492 78.4585 126.345 79.2988 127.132 79.9644 cv
129.087 81.6201 132.798 80.1108 131.816 77.2378 cv
129.943 71.7534 128.062 66.271 126.197 60.7837 cv
124.494 55.7744 123.249 50.2466 120.568 45.6729 cv
120.164 44.9858 119.634 44.6187 119.081 44.4883 cv
118.222 42.936 117.117 41.4858 115.689 40.0439 cv
115.068 39.416 114.286 38.8525 113.751 38.1465 cv
112.267 36.189 112.669 35.0147 112.869 32.606 cv
113.062 30.2647 113.208 28.2495 112.681 25.9331 cv
110.461 16.1558 101.257 10.8369 93.0893 6.4668 cv
89.1616 4.36573 85.4194 2.33545 80.9292 1.82373 cv
75.9838 1.26026 70.8608 2.21729 66.0854 3.47852 cv
60.642 4.91553 55.3315 7.01075 50.2358 9.39649 cv
46.7866 11.0122 43.6977 12.6636 42.7456 16.2661 cv
40.812 17.2461 39.0864 18.46 37.7592 19.7983 cv
35.7631 21.8125 34.4907 23.7637 31.8217 24.9917 cv
30.144 25.7642 29.0502 25.9678 27.7592 27.46 cv
24.7563 30.9321 22.5385 36.1636 21.0288 40.4707 cv
19.0678 46.0625 18.0581 52.0674 16.9272 57.8711 cv
15.8754 63.2671 14.3295 69.0879 14.3325 74.6836 cv
14.1684 74.9219 14.0512 75.2119 14.0073 75.5469 cv
13.9956 75.6338 li
13.9477 76.0024 14.1401 76.3467 14.4135 76.5982 cv
14.394 76.5957 li
13.9848 76.2261 12.5981 83.8164 12.5258 84.2417 cv
12.0278 87.1802 11.4526 90.0967 11.0346 93.0493 cv
10.2514 98.5737 9.89595 104.142 9.62056 109.711 cv
9.31001 115.99 9.08833 122.301 8.17134 128.528 cv
7.4438 133.459 5.25142 138.689 7.0522 143.58 cv
7.21821 144.03 7.49556 144.361 7.82466 144.58 cv
6.38423 153.47 4.35103 162.24 2.91255 171.123 cv
2.40376 174.266 6.80025 175.659 7.79243 172.537 cv
10.7895 170.368 13.6674 168.066 16.6762 165.918 cv
16.9477 166.55 17.2163 167.182 17.5141 167.811 cv
18.0913 169.029 20.1518 169.638 21.2514 168.791 cv
23.1811 167.303 25.1167 165.821 27.0571 164.348 cv
28.8735 162.969 31.1147 160.545 33.2329 159.748 cv
37.103 158.29 38.5502 161.025 39.6948 164.001 cv
40.4409 165.938 42.5668 169.366 41.353 171.414 cv
39.9057 173.854 43.1752 176.225 45.1909 174.375 cv
48.3305 171.492 54.02 174.067 57.5483 174.954 cv
58.8647 175.285 59.9077 174.694 60.6752 173.682 cv
62.0249 171.903 63.767 169.443 65.7299 167.832 cv
67.7924 169.763 69.4868 172.612 71.5678 174.521 cv
72.0014 176.836 73.9985 179.621 74.6147 181.416 cv
75.1596 183.007 77.519 184.093 78.7827 182.517 cv
82.7436 177.576 87.5112 173.347 92.5268 169.504 cv
93.8374 168.5 95.1733 167.532 96.5053 166.559 cv
96.9506 166.236 97.396 165.914 97.8413 165.591 cv
99.1342 165.303 99.4848 164.743 98.893 163.91 cv
98.4155 162.755 98.5405 162.961 99.2661 164.528 cv
99.4799 164.975 99.6928 165.422 99.9057 165.87 cv
100.56 167.204 101.199 168.531 101.99 169.792 cv
103.784 172.647 106.942 176.997 110.799 175.602 cv
112.766 174.89 113.605 173.047 115.123 171.795 cv
119.085 168.528 121.896 171.658 124.779 174.874 cv
126.064 176.308 128.224 175.71 129.186 174.306 cv
131.972 170.239 135.431 167.029 139.534 164.32 cv
141.367 163.11 141.025 160.83 139.784 159.708 cv
140.525 156.415 140.138 153.119 140.058 149.669 cv
139.999 147.176 140.314 144.932 140.791 142.501 cv
140.791 142.357 li
141.208 142.645 141.562 143.048 142.007 143.286 cv
143.827 144.26 146.12 144.026 147.242 142.098 cv
148.868 139.306 146.06 135.508 144.935 133.194 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.776471 .729412 .466667 rgb
f
119.962 139.942 mo
119.479 138.521 117.123 138.375 116.277 139.725 cv
116.261 139.715 li
116.177 139.87 116.095 140.025 116.011 140.18 cv
115.855 140.472 115.776 140.784 115.753 141.095 cv
115.014 143.156 113.697 146.611 115.96 147.272 cv
115.138 147.851 114.341 148.565 113.564 149.324 cv
112.198 150.229 111.096 151.366 110.14 152.781 cv
109.953 153.058 109.845 153.332 109.798 153.597 cv
109.663 153.729 109.529 153.861 109.394 153.992 cv
108.406 153.626 108.572 152.342 107.907 151.304 cv
107.193 150.19 106.189 149.428 104.873 149.225 cv
102.345 148.837 99.9213 151.795 102.156 153.892 cv
102.746 154.333 103.137 154.904 103.331 155.605 cv
103.515 156.02 103.751 156.335 104.023 156.566 cv
104.523 157.489 105.141 158.438 105.445 158.669 cv
106.835 159.728 108.488 159.791 110.152 159.607 cv
112.039 159.398 113.321 158.864 114.873 157.812 cv
116.208 156.905 117.774 156.079 118.866 154.826 cv
119.603 153.979 120.483 152.57 120.951 151.125 cv
121.181 150.786 121.417 150.451 121.618 150.081 cv
123.561 146.496 123.29 142.064 119.962 139.942 cv
cp
.658824 .603922 .337255 rgb
f
39.3881 94.2788 mo
39.5073 92.2461 39.6254 90.2139 39.7446 88.1816 cv
39.7817 87.5483 38.7993 87.5518 38.7602 88.1816 cv
38.3315 95.0982 37.9038 102.015 37.476 108.932 cv
37.4331 109.609 38.4907 109.608 38.5307 108.932 cv
38.644 106.998 38.7573 105.063 38.8696 103.129 cv
39.3344 103.337 40.0366 103.109 40.0815 102.433 cv
40.2475 99.9331 40.4155 97.4331 40.5815 94.9331 cv
40.6293 94.2173 39.8833 94.0088 39.3881 94.2788 cv
cp
f
47.1479 46.083 mo
45.2729 52.7832 43.9799 59.6782 42.5307 66.481 cv
42.3354 67.395 43.7475 67.7827 43.9311 66.8672 cv
45.3061 60.0317 46.8569 53.1738 47.8042 46.2637 cv
47.8608 45.8442 47.27 45.6475 47.1479 46.083 cv
cp
f
137.21 133.679 mo
137.57 133.266 137.727 132.709 137.478 132.087 cv
137.328 131.691 137.163 131.3 137.008 130.904 cv
137.716 132.247 138.474 133.563 139.267 134.861 cv
138.607 134.438 137.906 134.064 137.21 133.679 cv
cp
136.758 138.585 mo
136.54 138.761 136.318 138.933 136.106 139.114 cv
135.953 138.546 135.82 138.06 135.713 137.674 cv
136.099 137.861 136.462 138.068 136.804 138.294 cv
136.789 138.392 136.769 138.49 136.758 138.585 cv
cp
133.851 160.736 mo
133.744 160.71 li
133.877 159.942 134.001 159.173 134.155 158.406 cv
134.435 157.007 133.644 156.015 132.636 155.658 cv
132.986 153.644 133.325 151.628 133.66 149.611 cv
133.933 151.592 135.187 161.223 133.851 160.736 cv
cp
63.4448 164.943 mo
62.4096 164.323 60.9428 164.493 60.2377 165.689 cv
60.06 165.991 58.8754 166.243 57.4848 166.437 cv
57.812 165.881 57.9692 165.229 57.8559 164.632 cv
58.0795 164.651 58.312 164.623 58.5395 164.502 cv
58.7827 164.303 li
58.7866 164.312 li
58.8598 164.239 li
60.0415 163.302 61.2397 163.138 62.4545 163.767 cv
63.5698 163.887 63.8881 164.283 63.4448 164.943 cv
cp
25.6987 157.289 mo
25.3803 157.205 25.0795 157.368 24.8754 157.623 cv
24.7172 157.599 24.5551 157.592 24.394 157.602 cv
24.6108 157.275 24.5317 156.79 24.2622 156.521 cv
24.9174 156.417 25.6616 156.419 26.7602 156.376 cv
26.8315 156.371 li
26.4467 156.669 26.0698 156.975 25.6987 157.289 cv
cp
125.965 103.458 mo
125.834 103.198 125.706 102.938 125.574 102.679 cv
125.515 102.564 125.449 102.467 125.379 102.38 cv
125.388 102.195 125.376 102 125.32 101.79 cv
125.023 100.71 124.716 99.6353 124.411 98.5596 cv
124.895 99.6138 125.354 100.679 125.758 101.769 cv
126.751 103.02 126.812 103.576 125.965 103.458 cv
cp
125.32 122.938 mo
124.343 122.246 123.328 121.577 122.349 120.889 cv
123.042 120.638 123.755 120.344 124.544 120.087 cv
124.883 120.26 125.234 120.355 125.593 120.363 cv
125.462 121.218 125.373 122.076 125.32 122.938 cv
cp
118.27 70.8335 mo
118.111 70.3379 117.937 69.8457 117.771 69.3511 cv
118.019 69.6978 118.251 70.0581 118.468 70.4316 cv
118.397 70.5674 118.335 70.7002 118.27 70.8335 cv
cp
115.179 75.8579 mo
115.217 75.2793 115.212 74.7017 115.161 74.1255 cv
115.362 74.7705 115.567 75.4141 115.755 76.062 cv
115.576 75.981 115.38 75.916 115.179 75.8579 cv
cp
114.55 87.7598 mo
114.031 86.7632 113.843 85.7139 113.831 84.6299 cv
114.194 85.9683 114.606 87.2881 115.07 88.5884 cv
114.882 88.3267 114.705 88.0552 114.55 87.7598 cv
cp
109.293 50.186 mo
108.714 50.082 108.099 50.2852 107.783 50.7105 cv
107.437 50.4404 107.075 49.9277 106.576 48.9019 cv
105.757 47.2212 105.748 44.5327 105.464 42.6826 cv
105.393 42.2105 105.333 41.7344 105.266 41.2607 cv
106.189 43.1851 107.664 44.9287 109.533 46.4634 cv
109.86 47.0029 110.199 47.5356 110.552 48.0591 cv
109.706 48.3223 109.199 49.2783 109.293 50.186 cv
cp
104.476 34.3745 mo
104.426 33.7837 104.385 33.1924 104.347 32.6011 cv
104.301 30.9951 104.238 29.3901 104.162 27.7876 cv
104.159 26.9893 103.615 26.5454 103.006 26.4531 cv
102.771 24.4819 102.503 22.5107 102.228 20.5337 cv
102.811 21.085 103.346 21.6553 103.775 22.2354 cv
103.789 23.4868 104.167 24.6353 104.984 25.8272 cv
105.23 27.8228 105.324 29.8291 105.301 31.8486 cv
104.92 32.7114 104.656 33.5522 104.476 34.3745 cv
cp
100.751 20.3579 mo
100.608 21.2383 100.496 22.1211 100.404 23.0049 cv
99.3139 20.6626 97.9721 18.4033 96.396 16.1973 cv
96.4086 16.2051 li
97.6001 16.9834 99.6499 18.2969 101.436 19.8252 cv
101.117 19.8433 100.807 20.019 100.751 20.3579 cv
cp
92.7543 15.1489 mo
92.1186 14.6069 91.4702 14.0811 90.7954 13.5835 cv
90.9272 13.4922 91.0502 13.395 91.1713 13.2949 cv
91.8471 13.6245 92.5151 13.9668 93.1792 14.3193 cv
92.9643 14.5459 92.809 14.8364 92.7543 15.1489 cv
cp
82.6176 6.60498 mo
83.6362 6.53858 84.6186 6.61084 85.435 7.03321 cv
84.4897 6.91016 83.5395 6.78077 82.6176 6.60498 cv
cp
79.9243 12.7983 mo
78.2729 12.3345 74.6323 10.0845 78.0268 10.7129 cv
79.7338 11.0293 81.6303 12.0957 83.1713 12.8994 cv
82.017 13.084 80.8276 13.0523 79.9243 12.7983 cv
cp
146.194 136.871 mo
140.287 129.295 135.463 121.252 132.736 111.985 cv
132.275 110.42 130.341 110.663 129.792 111.985 cv
129.763 112.073 li
129.28 110.742 128.748 109.429 128.179 108.13 cv
128.27 108.06 128.361 108 128.451 107.913 cv
131.16 105.301 126.215 98.522 124.821 96.3604 cv
124.544 95.9331 124.07 95.9868 123.806 96.2564 cv
123.068 90.0552 121.917 83.959 120.341 77.9536 cv
120.831 77.6167 121.169 77.0879 121.113 76.458 cv
121.017 76.0112 120.998 75.5732 121.015 75.1392 cv
122.603 76.2295 124.54 77.0518 125.997 77.8633 cv
127.691 78.8071 129.38 76.9492 128.556 75.3042 cv
128.416 75.0259 128.283 74.7456 128.143 74.4678 cv
128.569 74.125 128.874 73.5894 128.923 72.8525 cv
129.44 64.9805 125.147 59.4243 120.927 53.2222 cv
118.604 49.8091 116.306 46.3774 113.958 42.981 cv
113.24 41.2881 112.389 39.6885 111.314 38.1104 cv
110.974 37.6108 110.521 37.3076 110.04 37.165 cv
110.198 37.0078 110.339 36.8223 110.448 36.5864 cv
111.656 33.9658 111.925 31.8965 110.835 29.1758 cv
110.537 28.4292 110.024 27.9556 109.451 27.7339 cv
109.414 27.2202 109.371 26.7075 109.322 26.1948 cv
109.532 25.8521 109.664 25.4297 109.673 24.9224 cv
109.701 23.4141 109.292 22.0176 108.601 20.7246 cv
108.554 20.4424 108.511 20.1616 108.462 19.8789 cv
108.306 18.9712 107.661 18.4697 106.912 18.3184 cv
104.653 15.7197 101.429 13.6309 98.8637 12.0049 cv
96.6889 10.6265 94.4428 9.4834 92.0678 8.5962 cv
91.1811 6.91456 89.1733 5.4502 87.9467 4.27588 cv
86.3217 2.72022 85.1225 2.41358 82.9145 2.46973 cv
80.0825 2.54102 77.142 3.13819 74.2475 3.25782 cv
71.4624 3.37256 68.6274 3.77881 65.9448 4.542 cv
63.1684 5.33155 60.5629 6.50733 58.1147 7.95801 cv
53.8247 9.24708 49.8042 11.3687 46.1323 14.1592 cv
44.7026 15.2461 45.8803 17.3008 47.5395 16.5679 cv
47.976 16.375 48.4116 16.1821 48.8481 15.9893 cv
49.0756 15.8892 49.1713 15.6611 49.1616 15.4316 cv
50.0893 14.8037 51.0366 14.2319 51.9985 13.7002 cv
52.1645 13.769 52.352 13.773 52.5307 13.6431 cv
52.9917 13.3096 53.4682 13.0034 53.9428 12.6924 cv
56.6596 11.3955 59.5034 10.4473 62.477 9.80323 cv
62.8002 10.3379 63.4223 10.7095 64.1635 10.5523 cv
68.4467 9.64307 72.2924 7.95166 76.476 7.04541 cv
77.1352 7.07666 77.7944 7.08936 78.4545 7.06788 cv
78.5825 7.20459 78.7124 7.33838 78.8471 7.46582 cv
77.646 7.1919 76.5102 7.10743 75.5288 7.31543 cv
72.56 7.94483 72.5415 10.3872 74.1586 12.5855 cv
76.7456 16.1025 81.4877 16.4219 85.394 15.5444 cv
85.8764 15.436 86.4174 15.311 86.976 15.1646 cv
91.0249 17.8887 94.5258 21.3521 97.3178 25.3848 cv
97.646 25.8599 98.0913 26.0908 98.5473 26.1455 cv
99.435 28.7144 100.026 31.3897 100.335 34.0962 cv
100.395 34.9346 100.464 35.7725 100.544 36.6099 cv
100.566 37.0337 100.583 37.4575 100.59 37.8814 cv
100.595 38.1421 100.652 38.3691 100.745 38.5635 cv
100.798 39.0537 100.851 39.5439 100.909 40.0332 cv
101.012 40.8989 101.577 41.4258 102.217 41.6045 cv
102.24 41.8042 102.251 42.0039 102.275 42.2036 cv
102.638 45.3189 102.578 49.3462 104.111 52.1294 cv
105.324 54.3335 106.495 53.6318 108.296 54.5142 cv
108.412 54.5703 108.52 54.6426 108.632 54.7051 cv
110.597 60.9961 111.45 67.4839 111.251 74.1231 cv
111.219 75.2134 112.074 75.7129 112.908 75.6475 cv
112.932 75.8618 112.956 76.0767 112.958 76.2954 cv
112.556 76.7969 112.386 77.5215 112.477 78.1475 cv
112.51 78.3784 112.558 78.6035 112.595 78.8335 cv
111.79 81.9487 109.982 85.2691 110.662 88.1934 cv
110.755 88.5967 110.92 88.9702 111.123 89.3267 cv
111.034 89.4849 li
110.888 89.854 110.742 90.2236 110.595 90.5928 cv
110.231 91.5151 111.251 92.083 112.007 91.8169 cv
113.582 94.4727 115.241 96.4102 118.269 97.9478 cv
118.689 98.1602 119.136 98.1773 119.529 98.0523 cv
119.828 98.5557 120.117 99.062 120.433 99.5596 cv
120.593 99.811 120.81 100.004 121.055 100.148 cv
121.321 101.014 121.593 101.877 121.853 102.745 cv
122.034 103.345 122.417 103.708 122.868 103.882 cv
122.991 104.701 123.443 105.809 124.097 106.754 cv
125.146 109.453 125.884 112.187 126.449 115.008 cv
126.017 115.228 125.587 115.45 125.158 115.672 cv
122.003 115.514 118.148 118.209 116.984 114.578 cv
116.941 114.416 116.885 114.262 116.853 114.094 cv
116.206 111.209 111.883 112.444 112.445 115.31 cv
113.921 122.827 121.74 123.427 125.709 128.914 cv
126.804 130.427 129.998 130.186 129.724 127.826 cv
129.554 126.363 129.496 124.941 129.545 123.535 cv
129.953 124.471 130.363 125.405 130.775 126.339 cv
130.286 126.614 129.898 127.102 129.808 127.789 cv
129.335 131.406 129.009 135.026 128.783 138.649 cv
127.664 135.641 125.818 132.998 123.171 131.389 cv
120.97 130.05 120.627 130.712 118.605 131.424 cv
118.419 131.489 118.429 132.317 118.277 132.333 cv
118.484 132.312 117.48 131.061 117.395 131 cv
115.177 129.417 113.296 127.915 113.662 124.725 cv
113.746 123.988 113.138 123.697 112.566 123.801 cv
112.472 123.65 li
109.871 121.119 111.044 115.573 111.156 112.182 cv
111.202 110.748 108.981 110.751 108.929 112.182 cv
108.81 115.423 108.148 119.343 108.861 122.521 cv
109.15 123.806 110.297 125.312 111.61 125.033 cv
111.265 127.787 111.306 130.163 113.539 132.083 cv
114.467 132.881 117.408 135.149 118.97 134.898 cv
119.65 134.789 120.052 134.099 120.56 133.958 cv
120.739 133.907 120.748 133.069 120.902 133.057 cv
121.239 133.031 122.81 134.827 123.076 135.121 cv
127.47 139.975 125.97 145.721 127.008 151.494 cv
127.131 152.18 127.742 152.424 128.317 152.333 cv
128.299 153.741 128.287 155.149 128.279 156.559 cv
128.275 157.351 128.721 157.941 129.318 158.282 cv
128.96 159.643 128.521 161.586 127.968 163.56 cv
125.359 161.96 124.482 157.424 124.528 153.544 cv
124.746 153.132 124.731 152.719 124.57 152.376 cv
124.588 152.09 124.61 151.813 124.637 151.541 cv
124.999 150.422 125.264 149.256 125.447 148.008 cv
125.605 146.935 124.048 145.979 123.498 147.186 cv
123.396 147.443 li
123.39 147.441 li
123.321 147.633 li
123.19 147.953 123.068 148.284 122.956 148.635 cv
122.147 150.771 121.072 152.66 119.747 154.575 cv
119.498 154.935 119.462 155.316 119.562 155.665 cv
119.142 156.451 118.824 157.289 118.667 158.2 cv
118.458 159.41 118.482 160.343 118.847 161.531 cv
118.97 161.932 119.382 162.536 119.809 163.196 cv
119.517 163.184 119.207 163.248 118.892 163.439 cv
118.369 163.758 117.749 164.204 117.128 164.614 cv
117.079 164.496 li
116.677 163.558 115.328 163.158 114.415 163.413 cv
112.274 164.011 111.176 165.083 109.759 166.787 cv
109.632 166.95 109.517 167.123 109.394 167.289 cv
107.295 164.195 103.927 161.167 100.9 161.418 cv
100.485 160.563 99.3803 159.906 98.4545 160.281 cv
99.2915 159.942 97.1088 159.682 95.726 160.192 cv
95.1674 159.382 94.0981 158.921 93.0629 159.549 cv
87.8247 162.728 83.4829 167.808 79.3139 172.641 cv
78.8627 170.628 79.2026 168.21 77.562 166.526 cv
76.6733 165.614 74.0815 165.452 72.9848 165.615 cv
72.9682 161.272 72.0678 156.55 68.6733 154.594 cv
69.4301 150.485 71.5864 138.455 65.435 141.16 cv
62.4233 142.483 64.3901 147.277 59.6186 144.602 cv
55.4545 142.266 53.2475 133.989 51.8657 129.881 cv
51.5952 129.078 50.5991 129.152 50.3032 129.881 cv
49.4575 131.965 48.5854 134.038 47.7163 136.11 cv
47.8999 134.056 48.0727 132.001 48.2182 129.941 cv
48.2836 129.008 46.8686 128.639 46.4487 129.462 cv
43.769 134.726 41.7407 141.74 38.0014 146.557 cv
38.0874 145.762 38.1801 144.966 38.268 144.171 cv
41.6088 137.857 45.1508 131.642 48.1674 125.17 cv
48.4751 124.51 47.5581 123.942 47.1762 124.59 cv
44.1752 129.692 41.4877 134.971 38.7104 140.201 cv
40.6108 123.569 42.8354 106.923 43.9526 90.2378 cv
43.9838 89.7573 43.1752 89.6367 43.1001 90.1226 cv
40.3608 107.825 38.8627 125.759 36.8969 143.575 cv
36.0483 145.131 35.1752 146.675 34.2846 148.208 cv
34.1362 147.893 33.9897 147.576 33.8588 147.251 cv
33.6557 146.794 32.9526 146.534 32.4907 146.694 cv
32.2456 146.75 31.9995 146.806 31.7553 146.861 cv
32.3881 142.065 33.3999 136.963 33.3227 132.228 cv
33.2944 130.513 33.142 128.775 31.2231 128.271 cv
30.1967 128.002 29.0268 128.499 28.1684 128.994 cv
27.0063 129.663 25.9204 132.16 24.851 132.5 cv
22.726 133.174 23.0512 127.942 22.9624 126.08 cv
22.812 122.918 22.7192 119.765 22.5092 116.606 cv
22.4731 116.065 22.1411 115.726 21.7417 115.624 cv
22.3862 108.31 23.7377 101.065 24.6889 93.7695 cv
25.9594 84.0288 25.937 74.1602 27.4165 64.4419 cv
28.1479 59.6392 29.5561 54.9902 30.4194 50.2158 cv
30.7592 48.3364 31.5708 37.4922 32.7592 37.8618 cv
33.6284 38.1318 30.5493 50.9873 30.31 52.4741 cv
29.7456 55.9912 29.5952 59.4072 30.268 62.916 cv
30.4389 63.8086 31.6577 63.8203 32.0883 63.1538 cv
33.0864 61.6094 34.0151 60.0044 34.9184 58.3774 cv
34.1792 61.5308 33.5092 64.7002 32.9038 67.8799 cv
31.2622 76.5098 30.1342 85.251 29.2573 93.9893 cv
28.4487 102.053 26.8491 110.609 29.3422 118.499 cv
29.5864 119.272 30.8588 119.396 31.0366 118.499 cv
34.4506 101.374 37.2163 84.0991 40.2788 66.9067 cv
40.4907 65.7119 38.6606 65.1997 38.4477 66.4024 cv
35.687 81.9639 32.6811 97.5064 30.1342 113.107 cv
29.6108 107.386 30.6889 101.495 31.3764 95.8384 cv
32.3354 87.9434 33.3901 80.0615 34.7456 72.2246 cv
36.0092 64.9165 37.5034 57.647 39.4995 50.501 cv
39.728 49.686 39.9614 48.7686 40.2065 47.7915 cv
42.3735 43.0898 44.4438 38.3403 46.686 33.814 cv
47.0268 33.1265 45.9936 32.52 45.6538 33.2105 cv
44.4799 35.5972 43.3413 38.0518 42.1948 40.5259 cv
43.6713 35.9282 45.7348 31.5176 49.0356 29.7129 cv
49.81 29.2891 49.517 27.8184 48.5561 27.9439 cv
42.9409 28.6787 41.395 36.5469 39.8667 41.0112 cv
38.5835 44.7559 37.4487 48.5493 36.4272 52.3731 cv
35.0795 54.9014 33.6372 57.3545 32.0678 59.6958 cv
32.0502 54.6523 33.3667 49.854 34.3862 44.8491 cv
34.9379 42.1401 36.7758 36.0088 34.2124 33.8936 cv
29.0004 29.5923 28.3393 49.9277 28.018 51.4282 cv
26.7456 57.3731 25.0112 63.1821 24.2026 69.2232 cv
23.4545 74.811 23.1723 80.4522 22.6616 86.064 cv
21.5756 97.9692 18.562 109.73 18.7348 121.709 cv
18.7055 122.626 18.7475 123.572 18.8335 124.561 cv
18.934 125.732 20.2573 126.074 20.9526 125.528 cv
21.0415 126.974 21.1225 128.42 21.1713 129.869 cv
21.2299 131.604 20.9272 133.503 21.6069 135.021 cv
20.7768 135.041 20.3208 135.369 19.5903 135.97 cv
18.4799 136.884 19.0766 138.423 19.9975 139.128 cv
21.7944 140.505 20.02 143.195 19.4331 144.662 cv
18.9487 145.873 18.6528 147.792 17.5522 148.601 cv
16.4692 148.627 15.5629 148.347 14.9038 147.347 cv
14.1206 146.156 12.1303 145.912 11.4047 147.347 cv
11.2397 147.673 11.1196 147.929 11.017 148.178 cv
10.8256 148.36 10.6479 148.57 10.479 148.8 cv
9.88814 149.61 10.2202 150.779 10.8217 151.456 cv
10.9936 151.648 li
11.3852 152.089 11.9331 152.265 12.4877 152.258 cv
15.9477 154.604 20.6303 154.284 22.7641 149.997 cv
24.5922 146.323 26.8432 140.139 23.6333 136.829 cv
23.5893 136.622 li
23.7397 136.601 23.8901 136.56 24.0405 136.483 cv
25.4272 135.77 26.0053 134.938 27.0161 133.731 cv
27.5268 133.022 28.0874 132.356 28.6987 131.731 cv
30.8002 131.478 31.436 132.249 30.6049 134.046 cv
30.9995 136.043 29.9682 139.284 29.7143 141.32 cv
29.4135 143.746 29.0932 146.168 28.7944 148.594 cv
28.6733 149.58 29.7651 150.031 30.5327 149.918 cv
31.9243 149.715 32.4272 149.187 33.4604 150.537 cv
33.8315 151.021 34.6879 151.213 35.017 150.537 cv
35.4799 149.588 35.9545 148.646 36.434 147.705 cv
36.394 148.057 36.3569 148.41 36.3159 148.762 cv
36.2446 149.368 37.1674 149.739 37.5493 149.273 cv
40.8549 145.242 43.3383 140.435 45.6235 135.643 cv
45.3227 138.252 45.0385 140.864 44.768 143.479 cv
44.6293 144.829 46.5581 144.872 46.9741 143.778 cv
48.3999 140.027 49.7143 136.239 51.0805 132.468 cv
53.1596 138.103 56.1967 144.889 61.937 147.141 cv
63.2221 147.645 63.769 147.56 64.7866 146.537 cv
65.0395 146.282 65.0532 145.76 65.2993 145.517 cv
65.5141 145.024 65.728 144.532 65.9428 144.04 cv
66.2309 145.286 66.519 146.532 66.8061 147.778 cv
66.8295 149.318 66.5542 150.984 66.2749 152.608 cv
65.0454 150.109 63.0014 147.518 60.3657 147.523 cv
59.5151 147.036 58.6733 147.199 57.9272 148.452 cv
57.0659 149.9 59.2768 151.174 60.1772 149.767 cv
58.9526 151.409 61.0756 155.71 62.5229 158.051 cv
62.1831 158.413 61.7436 158.789 61.1772 159.195 cv
59.3315 160.517 58.1303 160.667 56.8745 162.837 cv
56.7973 162.969 56.7504 163.102 56.726 163.232 cv
56.7104 163.224 li
53.0356 161.518 51.0913 159.783 49.3745 156.139 cv
49.3032 155.998 li
49.2788 155.948 li
49.2729 155.95 li
49.0522 155.584 48.727 155.324 48.351 155.165 cv
47.4233 153.167 46.2436 151.396 44.6674 150.968 cv
43.3393 150.608 41.9995 151.527 40.8139 151.932 cv
36.7495 153.322 32.2573 153.877 28.0268 153.569 cv
24.2299 153.293 22.2221 153.237 19.0561 155.59 cv
16.9204 157.176 15.0131 158.986 13.0981 160.786 cv
12.6918 160.683 12.2192 160.706 11.6948 160.931 cv
8.47993 162.313 6.10689 164.651 4.59907 167.799 cv
3.7729 169.526 5.49556 171.565 7.31782 170.518 cv
10.8891 168.466 13.8071 165.884 16.6909 162.962 cv
18.2153 161.417 19.6342 159.519 21.2895 158.128 cv
21.4409 158.001 21.5678 157.906 21.7045 157.798 cv
22.2006 157.976 22.7397 158.049 23.2758 158.009 cv
23.144 158.104 li
22.8198 158.415 22.4956 158.726 22.1713 159.037 cv
21.6264 159.116 21.103 159.451 20.8881 160.05 cv
20.7973 160.24 20.7065 160.43 20.6157 160.62 cv
20.4018 160.998 20.3354 161.357 20.3686 161.681 cv
19.4614 162.673 18.9106 163.776 18.9077 165.137 cv
18.9047 166.956 21.3442 168.112 22.6342 166.68 cv
23.8481 165.334 25.0571 163.971 26.3061 162.647 cv
26.6381 162.74 27.0219 162.757 27.476 162.662 cv
28.7329 162.397 29.437 161.215 30.1958 160.271 cv
31.2202 158.996 32.2231 157.705 33.2016 156.396 cv
33.3842 156.152 33.477 155.907 33.5131 155.667 cv
35.5854 155.319 37.6352 154.857 39.5756 154.267 cv
40.7495 153.974 41.9077 153.627 43.0493 153.227 cv
44.2876 153.458 44.809 154.243 44.6147 155.58 cv
44.9252 156.227 45.184 156.941 45.4282 157.672 cv
45.6206 158.797 45.9594 159.887 46.4321 160.91 cv
46.5864 161.409 46.7426 161.904 46.9135 162.37 cv
46.936 162.416 li
45.6196 163.308 45.0249 165.462 44.3237 167.304 cv
43.354 167.953 43.3881 167.915 42.771 169.21 cv
42.6538 169.458 42.6372 169.686 42.685 169.884 cv
42.4926 170.068 42.2963 170.248 42.0786 170.414 cv
40.8374 171.501 42.1489 173.879 43.7377 173.266 cv
46.3042 172.274 47.2026 170.823 48.2124 168.364 cv
48.2768 168.729 48.3754 169.084 48.5493 169.417 cv
48.978 170.362 49.3354 170.903 50.226 171.427 cv
52.5014 172.764 56.2846 171.254 58.6792 170.93 cv
59.8247 170.775 60.8667 170.653 61.7729 170.321 cv
62.3764 170.618 63.1069 170.62 63.8842 170.285 cv
66.9506 168.96 68.7963 164.351 66.6088 161.487 cv
66.4174 161.236 66.2026 161.057 65.9663 160.933 cv
66.1049 160.811 66.2407 160.676 66.3715 160.529 cv
67.3647 159.409 67.6547 158.102 67.5561 156.77 cv
70.1206 157.334 70.7661 161.042 70.767 164.53 cv
69.9936 164.488 69.1967 164.846 68.6323 165.776 cv
68.0366 166.757 67.851 167.186 67.6088 168.308 cv
67.3881 169.337 67.7397 170.649 68.767 171.153 cv
69.1362 171.283 69.4799 171.441 69.7963 171.628 cv
70.5122 172.698 71.3061 173.623 72.3061 174.564 cv
73.2417 175.446 74.3217 175.441 75.1342 174.953 cv
75.2749 175.453 75.4467 175.907 75.6821 176.348 cv
75.6206 176.534 75.5747 176.721 75.5483 176.909 cv
75.3217 177.157 li
74.0776 178.499 74.6284 180.607 76.3784 181.156 cv
77.1938 181.412 li
77.9917 181.662 78.9565 181.392 79.5307 180.793 cv
79.728 180.588 79.9262 180.383 80.1235 180.178 cv
80.6918 179.586 80.8823 178.841 80.7631 178.124 cv
82.2417 176.343 83.726 174.488 85.2524 172.663 cv
85.9409 173.083 86.892 173.138 87.602 172.51 cv
89.0688 171.213 90.5366 169.917 92.0034 168.621 cv
93.0991 167.652 95.4252 164.713 96.6713 164.272 cv
96.8823 164.197 97.1215 164.193 97.3833 164.215 cv
97.4428 164.424 97.5014 164.632 97.561 164.841 cv
97.9721 166.289 99.9389 166.914 101.013 165.753 cv
101.206 165.545 101.846 165.876 102.547 166.35 cv
103.772 168.858 105.012 173.887 108.342 173.993 cv
108.853 174.01 109.3 173.918 109.705 173.759 cv
109.9 173.732 li
110.423 173.612 110.826 173.265 111.078 172.825 cv
112.16 171.739 112.925 170.134 113.995 169.037 cv
114.421 169.881 115.72 170.366 116.597 170.06 cv
118.128 169.525 119.476 168.862 120.368 167.774 cv
120.472 169.163 122.005 170.244 123.429 169.969 cv
122.964 170.844 122.543 171.754 122.182 172.725 cv
121.554 174.414 123.383 175.667 124.851 175.395 cv
128.023 174.806 129.944 171.792 131.272 168.315 cv
131.644 168.223 131.992 168.05 132.271 167.78 cv
132.984 167.089 133.603 166.384 134.185 165.637 cv
141.229 166.645 139.498 153.777 137.517 144.848 cv
138.672 144.327 139.533 143.501 140.167 142.453 cv
141.251 142.411 142.373 141.89 143.188 140.828 cv
143.591 140.912 144.033 140.938 144.534 140.878 cv
146.659 140.627 147.497 138.541 146.194 136.871 cv
cp
f
68.7241 123.194 mo
68.6889 122.826 68.1362 122.81 68.1381 123.194 cv
68.1586 127.683 68.0229 132.032 66.6889 136.228 cv
62.4956 117.211 63.3129 97.208 61.5424 77.8936 cv
61.4428 76.7964 60.1137 76.3857 59.476 77.3335 cv
57.9165 79.6489 56.8588 82.3716 56.1049 85.2593 cv
55.6743 76.4766 55.0922 67.7026 54.3637 58.939 cv
54.2417 57.4614 51.9194 57.4482 52.0434 58.939 cv
52.8833 69.041 53.5415 79.1563 53.9799 89.2837 cv
54.0874 91.7769 54.2026 94.2681 54.3276 96.7588 cv
54.1879 98.3159 54.0678 99.8345 53.9409 101.278 cv
53.0835 110.992 53.3872 120.738 54.2338 130.441 cv
54.3081 131.288 55.6323 131.303 55.5698 130.441 cv
55.2719 126.324 55.1655 122.215 55.2231 118.107 cv
55.271 118.634 55.3208 119.16 55.3862 119.683 cv
55.4585 120.252 56.2094 120.257 56.2768 119.683 cv
56.8872 114.541 56.4604 109.172 56.5346 103.989 cv
56.561 102.096 56.5571 100.205 56.5385 98.3149 cv
57.0561 92.6143 57.8256 86.5283 59.9047 81.479 cv
62.77 100.906 59.7524 120.793 65.4653 139.917 cv
65.7739 140.951 67.06 140.805 67.4233 139.917 cv
69.6342 134.51 69.2553 128.893 68.7241 123.194 cv
cp
f
99.9077 122.429 mo
99.8725 122.997 99.8491 123.563 99.8354 124.13 cv
99.1147 117.21 99.6879 110.162 99.8481 103.202 cv
99.936 102.786 100.017 102.368 100.101 101.951 cv
100.359 108.779 100.206 115.596 99.9077 122.429 cv
cp
97.4331 105.864 mo
97.1264 107.267 96.809 108.667 96.4702 110.062 cv
95.8979 112.413 95.5532 116.105 94.2846 118.124 cv
93.6088 119.198 91.6831 120.593 90.2612 120.572 cv
90.3735 115.406 90.2846 110.233 90.2182 105.065 cv
90.1069 96.458 90.56 88.0059 91.1752 79.4292 cv
91.7739 71.0791 91.1655 62.5083 90.4379 54.1802 cv
90.3784 53.5005 89.3452 53.2529 89.1713 54.0088 cv
88.392 57.398 88.8637 60.7388 89.2807 64.1582 cv
89.9223 69.4297 89.771 74.1787 89.1108 79.4292 cv
88.0883 87.563 87.9008 95.6743 87.9604 103.85 cv
87.8911 103.215 87.8159 102.58 87.7514 101.946 cv
86.5307 89.9136 85.6479 77.8355 84.686 65.7788 cv
85.1098 66.0274 85.7016 66.0298 86.0307 65.6279 cv
89.8471 60.9727 88.6772 53.2031 88.5288 47.6255 cv
88.3276 40.0474 87.937 32.4756 89.0502 24.9824 cv
92.3042 37.3633 94.3588 49.9829 95.6655 62.7022 cv
94.4565 58.6685 93.1362 54.7007 91.6958 50.8438 cv
91.226 49.585 89.1909 50.1245 89.6616 51.4048 cv
92.5581 59.2778 94.9643 67.3511 96.7475 75.5547 cv
96.812 76.5137 96.8745 77.4727 96.9321 78.4321 cv
97.478 87.5625 97.5893 96.7197 97.4331 105.864 cv
cp
85.0151 107.639 mo
83.5327 102.111 82.3588 96.5186 81.4096 90.876 cv
81.2768 90.0869 80.5463 89.9487 79.9741 90.2153 cv
79.9917 89.6719 79.9995 89.1284 80.019 88.5855 cv
80.1967 83.667 80.5795 78.7622 81.3149 73.8931 cv
81.7094 71.2803 82.3374 68.6973 82.7553 66.0908 cv
83.8295 78.3701 85.104 90.6353 86.103 102.92 cv
86.4057 106.646 86.6489 110.402 86.9106 114.164 cv
86.2231 112.006 85.601 109.821 85.0151 107.639 cv
cp
83.144 62.6934 mo
83.2827 63.1343 83.4409 63.5698 83.6206 63.999 cv
83.4077 63.9902 83.1948 64.0327 83.0229 64.1406 cv
83.0756 63.6597 83.1157 63.1772 83.144 62.6934 cv
cp
106.537 70.1724 mo
106.009 69.2583 104.593 70.082 105.121 71.0005 cv
108.462 76.8359 107.054 83.229 105.842 89.458 cv
104.876 94.4199 103.844 99.3672 102.863 104.325 cv
102.677 99.835 102.304 95.3359 101.724 90.855 cv
101.914 88.8091 102.046 86.7554 102.117 84.6939 cv
102.134 84.1909 101.296 84.0552 101.219 84.5723 cv
101.15 85.0288 101.08 85.4863 101.011 85.9429 cv
100.498 82.7388 99.8999 79.5488 99.2114 76.3872 cv
99.1733 75.8008 99.1479 75.2134 99.1069 74.6274 cv
97.852 56.4873 94.3295 38.5283 89.6967 20.9668 cv
89.4877 20.1733 88.2827 20.1621 88.0776 20.9668 cv
86.4594 27.3457 86.1381 33.6885 86.2397 40.249 cv
86.2924 43.6309 86.4292 47.0107 86.4526 50.3931 cv
86.4741 53.6631 86.9663 59.0894 85.436 62.5122 cv
84.0258 58.5488 84.1196 53.8311 83.6518 49.7578 cv
83.1674 45.5479 82.6801 41.3433 81.892 37.1772 cv
81.7163 36.2544 80.2221 36.4678 80.2573 37.3984 cv
80.4702 43.1231 81.1938 48.8218 81.8364 54.5112 cv
82.1293 57.1069 82.3081 59.7461 83.0151 62.2349 cv
82.7885 62.0078 82.3471 61.9761 82.1928 62.3135 cv
80.0864 66.9014 79.5776 72.2603 78.9213 77.2285 cv
78.1762 82.8696 77.5776 88.5479 77.3256 94.2344 cv
76.7924 106.227 77.3354 118.281 77.5581 130.275 cv
77.6616 135.864 78.3413 141.769 77.5961 147.327 cv
77.6186 148.435 77.3862 149.479 76.8979 150.461 cv
76.5366 152.017 76.3374 152.132 76.3012 150.807 cv
75.3237 149.732 75.7358 146.478 75.561 144.805 cv
75.2768 142.094 75.0776 139.382 74.9702 136.658 cv
74.5249 125.398 75.9155 113.993 72.9223 102.978 cv
72.8217 102.608 72.3588 102.502 72.0903 102.758 cv
70.5483 104.222 69.6001 105.404 68.8549 107.387 cv
68.7417 107.688 69.2094 107.803 69.3295 107.518 cv
72.4897 99.9605 72.5961 108.623 72.7221 110.268 cv
72.8608 112.072 72.9585 113.884 73.0346 115.693 cv
73.229 120.25 73.2006 124.807 73.1792 129.366 cv
73.1391 137.695 72.8374 145.854 75.142 153.941 cv
75.2729 154.396 75.7104 154.592 76.1518 154.514 cv
80.4077 153.759 78.8598 144.648 79.0844 141.655 cv
79.7504 132.786 79.8266 123.964 79.7631 115.073 cv
79.7143 108.282 79.7065 101.487 79.8501 94.6968 cv
81.1596 101.903 82.8335 109.087 85.1596 116.025 cv
85.6206 117.4 86.3579 119.749 87.4897 121.623 cv
87.5991 122.892 87.7026 124.162 87.8315 125.428 cv
87.7221 127.799 87.5678 130.169 87.3413 132.538 cv
86.8833 137.333 86.3706 142.094 86.726 146.783 cv
86.4174 146.797 86.1108 146.892 85.8168 147.107 cv
85.1381 147.605 85.1596 148.852 85.0249 149.556 cv
84.6694 151.402 84.2749 153.042 83.228 154.522 cv
83.143 154.438 83.06 154.354 82.9448 154.244 cv
82.5756 153.892 81.7827 154.114 81.8442 154.699 cv
81.9282 155.503 81.9526 155.682 82.2055 156.465 cv
82.4604 157.251 83.351 157.447 83.9585 156.928 cv
84.8354 156.177 85.4497 155.368 85.892 154.284 cv
86.4643 152.88 86.1772 151.104 86.7514 149.79 cv
86.8295 149.61 86.9213 149.471 87.019 149.353 cv
87.3471 151.506 87.8891 153.642 88.7553 155.756 cv
89.0913 156.575 90.4331 156.242 90.1118 155.382 cv
89.3471 153.334 88.8901 151.275 88.6479 149.208 cv
90.9946 150.43 94.3725 155.884 94.8706 157.293 cv
94.9594 157.547 95.311 157.621 95.4575 157.371 cv
97.2573 154.301 98.5893 150.986 99.7797 147.641 cv
100.126 146.666 98.5161 146.206 98.2202 147.21 cv
97.6713 149.074 97.0815 150.924 96.4428 152.759 cv
96.3549 153.01 95.478 155.968 95.2446 156.031 cv
94.9155 156.119 95.1655 155.634 94.8266 155.284 cv
94.0161 154.445 93.5493 152.827 92.8364 151.817 cv
91.9487 150.56 91.021 149.446 89.8295 148.46 cv
89.4389 148.136 88.9819 147.743 88.4956 147.417 cv
88.2573 143.472 88.6938 139.498 89.1684 135.505 cv
89.3725 136.714 89.5805 137.922 89.8237 139.122 cv
89.9838 139.909 91.2085 139.716 91.2045 138.935 cv
91.186 134.058 90.8217 129.173 90.3286 124.291 cv
90.8237 124.46 91.353 124.523 91.9292 124.417 cv
93.6577 124.101 94.146 122.513 94.771 121.143 cv
95.8803 118.709 96.6792 115.977 97.3891 113.262 cv
97.4545 119.504 97.8901 125.675 99.4858 131.819 cv
99.6118 132.304 100.16 132.516 100.595 132.404 cv
100.812 133.347 101.068 134.285 101.394 135.21 cv
101.792 136.338 103.035 136.646 103.937 135.882 cv
105.102 134.895 105.623 134.001 106.019 132.541 cv
105.99 132.541 li
106.289 131.458 104.849 130.757 104.113 131.737 cv
103.989 131.845 103.865 131.952 103.742 132.06 cv
101.49 121.393 104.955 110.004 106.453 99.4092 cv
107.753 90.2041 111.539 78.8301 106.537 70.1724 cv
cp
f
72.5952 17.9927 mo
70.6489 23.3154 72.018 30.5659 70.6645 36.2827 cv
70.8481 31.1841 70.4936 25.9834 69.6889 21.0391 cv
69.1792 17.9063 68.8081 12.2109 65.1401 11.0698 cv
64.976 11.019 64.7905 11.1304 64.7475 11.2935 cv
62.5219 19.6948 59.8383 27.9473 57.9917 36.4492 cv
57.6948 37.8154 56.7221 47.8731 54.2631 47.6665 cv
54.3667 47.6753 54.1577 34.3862 54.103 33.6748 cv
54.0405 32.8525 52.8549 32.8384 52.8139 33.6748 cv
52.6235 37.6675 52.7729 41.6743 52.9458 45.6675 cv
53.0102 47.1611 52.851 48.3564 53.8901 49.4473 cv
54.0659 49.6314 54.3286 49.6338 54.5424 49.5313 cv
57.5922 48.0757 57.8393 42.4546 58.3989 39.5571 cv
59.56 33.5488 60.7495 27.5503 62.2211 21.6079 cv
62.4868 20.5337 63.7124 13.5049 64.6948 13.2803 cv
67.311 12.6826 67.0561 21.1147 67.1665 22.3599 cv
67.7436 28.8711 67.8784 35.3115 68.1147 41.8345 cv
68.1586 43.0522 69.8217 43.2568 70.2055 42.1177 cv
71.3549 38.7109 72.2016 35.4019 72.4497 31.7959 cv
72.7661 27.2022 72.394 22.8042 73.9057 18.354 cv
74.1889 17.5195 72.892 17.1802 72.5952 17.9927 cv
cp
f
117.296 143.538 mo
116.338 144.321 116.023 145.324 116.218 146.317 cv
115.262 147.767 114.965 149.584 113.734 150.839 cv
112.185 152.416 109.64 152.529 108.173 150.927 cv
107.794 150.513 107.063 150.528 106.681 150.927 cv
105.488 152.172 106.06 153.81 107.293 154.853 cv
108.736 156.075 110.839 156.303 112.638 155.953 cv
117.22 155.06 118.555 150.998 119.932 147.115 cv
120.023 146.861 120.014 146.595 119.958 146.336 cv
119.997 146.2 120.025 146.055 120.035 145.896 cv
120.116 145.688 120.197 145.48 120.277 145.273 cv
120.966 143.429 118.52 142.537 117.296 143.538 cv
cp
.517647 .470588 .258824 rgb
f
51.3178 168.592 mo
50.0952 167.666 48.7026 167.625 47.3442 167.962 cv
46.6948 167.483 45.8315 167.271 44.9936 167.485 cv
44.5522 167.597 44.1586 167.799 43.8129 168.061 cv
43.5522 167.682 43.2749 167.312 42.9243 166.969 cv
42.3501 166.407 41.4428 166.692 41.2006 167.424 cv
40.5688 169.34 41.3579 171.023 42.4467 172.648 cv
43.2495 173.847 45.5483 173.9 45.8452 172.204 cv
45.8872 172.002 li
46.4018 172.147 46.976 172.124 47.4487 171.899 cv
48.3042 171.491 49.2377 170.897 50.1792 171.291 cv
51.8579 171.992 52.519 169.503 51.3178 168.592 cv
cp
f
25.0141 143.381 mo
24.6489 141.612 23.9858 139.9 23.4721 138.168 cv
23.0747 136.827 20.9096 137.029 20.9682 138.507 cv
20.9721 138.805 20.9897 139.1 21.017 139.392 cv
21.1088 140.878 21.2299 142.365 20.8315 143.831 cv
20.7036 144.302 18.9116 146.63 18.3198 147.585 cv
18.2866 147.493 li
17.6479 146.179 15.7163 146.637 15.3315 147.879 cv
15.2788 148.048 15.2436 148.219 15.2231 148.389 cv
15.1293 148.411 14.9008 148.226 14.6459 147.979 cv
14.6001 147.757 14.476 147.549 14.2299 147.412 cv
14.0688 147.28 13.9077 147.148 13.7465 147.016 cv
12.9956 146.132 11.4038 146.844 11.4545 147.965 cv
11.5581 150.228 13.3627 152.447 15.8374 152.072 cv
16.5053 151.971 17.06 151.696 17.5073 151.327 cv
18.771 151.498 19.8901 150.719 20.7329 149.751 cv
21.8139 148.51 23.4995 146.757 23.7543 145.109 cv
23.7866 144.903 23.7924 144.699 23.7885 144.495 cv
24.4585 144.712 25.1831 144.198 25.0141 143.381 cv
cp
f
21.1001 159.833 mo
20.9028 160.118 20.7172 160.409 20.5249 160.697 cv
20.017 160.528 19.4272 160.685 19.2172 161.211 cv
16.9028 160.815 15.1401 163.87 16.4116 165.827 cv
17.1723 166.997 18.4252 167.269 19.5502 166.944 cv
20.5053 167.682 22.3608 167.226 22.4946 165.609 cv
22.5112 165.464 22.5112 165.318 22.5004 165.172 cv
22.4956 164.592 22.3901 163.999 22.185 163.438 cv
22.6606 162.734 23.0659 161.982 23.4096 161.183 cv
24.0795 159.621 22.101 158.389 21.1001 159.833 cv
cp
f
10.3803 164.803 mo
9.18696 165.885 8.40279 167.237 7.67525 168.659 cv
7.20454 169.578 6.72603 170.6 6.05806 171.43 cv
5.86079 170.916 5.17427 170.701 4.73482 171.127 cv
3.82368 172.011 3.54439 172.757 3.41743 174.012 cv
3.30611 175.098 4.5815 175.497 5.37837 175.137 cv
9.05025 173.481 9.4604 169.155 12.27 166.692 cv
13.562 165.56 11.6557 163.646 10.3803 164.803 cv
cp
f
43.0678 159.594 mo
42.5288 157.187 39.5366 154.797 37.2573 154.05 cv
35.7163 153.545 35.0376 154.18 33.7221 154.955 cv
31.8852 156.036 29.978 156.967 28.0756 157.925 cv
26.9565 158.489 27.937 160.083 29.0454 159.585 cv
31.3979 158.526 34.7055 156.075 37.0639 157.721 cv
38.603 158.794 39.9731 160.308 41.7846 160.877 cv
42.5795 161.127 43.2338 160.336 43.0678 159.594 cv
cp
f
74.3686 63.6309 mo
74.2563 62.7324 74.144 61.8335 74.0307 60.9351 cv
73.7573 58.7607 70.6909 59.1357 71.0385 61.3403 cv
71.0922 61.686 71.1469 62.0313 71.2006 62.377 cv
70.271 63.2422 69.5424 64.2232 69.0395 65.5098 cv
68.5815 66.6826 68.517 67.5576 67.1577 67.9155 cv
66.3061 68.1401 65.1303 67.854 64.2729 67.7559 cv
63.7495 67.6958 63.2085 67.9619 62.8061 68.3565 cv
62.0522 67.8535 59.8706 66.6939 59.3627 66.6533 cv
59.3549 66.6841 li
58.9497 66.6719 58.5483 66.8745 58.4702 67.3325 cv
57.9213 70.5654 62.5024 73.8106 65.0502 72.1631 cv
65.9604 72.2852 66.896 72.3198 67.8002 72.2153 cv
66.5551 83.6753 65.0991 95.7105 65.2124 107.224 cv
65.2202 108.092 66.6049 108.346 66.7768 107.436 cv
67.809 101.976 68.392 96.2651 68.7133 90.5249 cv
69.2475 90.9282 70.2182 90.8394 70.353 90.0454 cv
70.853 87.0855 71.103 84.1924 71.0542 81.1836 cv
71.0405 80.3941 70.4409 79.9858 69.8227 79.9473 cv
69.811 78.919 69.812 77.8848 69.8286 76.8359 cv
69.8608 74.9028 70.1528 73.3984 69.1772 71.9282 cv
69.9194 71.688 70.6167 71.314 71.2241 70.752 cv
72.2495 69.8047 72.8266 68.5122 73.1909 67.124 cv
73.7036 67.1353 74.2133 66.8477 74.3901 66.2651 cv
74.6596 65.3779 74.4819 64.5293 74.3686 63.6309 cv
cp
f
60.77 76.6665 mo
60.7465 75.8228 59.7094 75.6094 59.2553 76.2559 cv
56.0327 80.8428 57.3247 88.2271 57.4829 93.9009 cv
56.3208 97.6421 55.5874 101.526 54.976 105.423 cv
55.0698 90.522 55.2045 75.6172 54.646 60.7285 cv
54.5981 59.4404 53.0756 59.1689 52.3706 60.1123 cv
50.2153 62.9995 50.2534 66.3921 50.0913 69.8716 cv
49.8364 75.3394 49.6196 80.8018 49.5708 86.2759 cv
49.5249 91.4297 49.6323 96.5879 49.4917 101.741 cv
49.4194 104.339 49.6108 120.229 46.4233 120.61 cv
46.0522 120.654 45.8881 121.232 46.3266 121.323 cv
51.7963 122.46 50.685 103.893 50.7729 100.776 cv
50.9467 94.6533 50.8764 88.5313 50.9545 82.4077 cv
51.0151 77.6128 50.4721 70.7944 52.1811 65.6025 cv
52.1401 82.584 52.8813 99.5635 53.3432 116.538 cv
52.7602 120.733 52.2846 124.967 52.2944 129.176 cv
52.2973 130.68 51.7143 136.619 54.0424 137.161 cv
56.1186 137.645 58.7221 132.458 59.5317 131.424 cv
60.478 130.217 58.5678 128.924 57.9311 130.188 cv
57.6323 130.78 55.6684 135.611 55.1596 135.627 cv
53.2085 135.691 53.3823 130.987 53.3979 130.065 cv
53.4409 127.404 53.7319 124.757 54.1127 122.123 cv
54.5034 122.169 54.9262 121.948 54.9252 121.437 cv
54.9223 119.949 54.9272 118.46 54.9292 116.972 cv
54.9448 116.88 li
55.4331 113.924 56.0131 110.968 56.5844 108.008 cv
56.1997 112.086 55.8393 116.161 55.8315 120.227 cv
55.8295 121.11 57.1381 121.295 57.3725 120.435 cv
59.2124 113.701 59.3461 106.305 59.6577 99.3648 cv
59.9301 93.2661 58.7182 85.8125 59.9858 79.6035 cv
62.0961 87.2285 62.8637 95.6133 64.271 103.307 cv
64.3588 103.783 65.0737 103.579 64.9946 103.107 cv
63.5385 94.5093 61.0151 85.3897 60.77 76.6665 cv
cp
f
43.8862 76.0137 mo
43.6323 69.5518 43.7827 62.6597 42.602 56.2861 cv
42.2514 54.3921 41.8286 52.6846 39.6411 53.4575 cv
38.9809 53.6909 39.2475 54.7271 39.934 54.5195 cv
42.3608 53.7876 41.726 68.4941 41.7876 70.0952 cv
41.9917 75.3569 42.2397 80.6172 42.4643 85.8774 cv
42.9165 96.3989 43.3686 106.92 43.8198 117.442 cv
43.8667 118.523 45.5502 118.53 45.5073 117.442 cv
44.9663 103.632 44.4262 89.8232 43.8862 76.0137 cv
cp
f
40.2417 111.982 mo
40.0893 97.3857 40.2055 82.7837 40.2163 68.1865 cv
40.2163 66.9946 38.3686 66.9932 38.3647 68.1865 cv
38.312 82.1201 38.3686 96.0596 38.1752 109.992 cv
38.0288 120.552 38.6948 131.215 38.142 141.788 cv
37.434 132.29 36.7202 122.796 36.1684 113.276 cv
35.4194 100.337 36.0053 87.3565 35.2895 74.439 cv
35.2397 73.544 33.978 73.5552 33.9067 74.439 cv
32.8852 87.2476 33.8227 100.446 34.2143 113.276 cv
34.6059 126.147 35.4975 139.243 37.1577 152.015 cv
37.2729 152.896 38.6284 153.292 38.8608 152.245 cv
40.228 146.085 40.187 140.151 39.8901 133.881 cv
39.5473 126.636 40.3178 119.262 40.2417 111.982 cv
cp
f
32.435 72.771 mo
32.0542 73.6973 31.6792 74.6216 31.3315 75.5615 cv
31.1518 76.0503 31.9223 76.3628 32.1674 75.9136 cv
32.6489 75.0322 33.1001 74.1387 33.5493 73.2407 cv
33.9399 72.458 32.7729 71.9487 32.435 72.771 cv
cp
f
28.4995 94.9321 mo
28.1313 100.942 27.5053 106.929 27.0893 112.934 cv
27.0542 113.428 27.8813 113.551 27.9633 113.053 cv
28.9497 107.061 29.4848 100.978 30.0229 94.9321 cv
30.1098 93.9624 28.56 93.9507 28.4995 94.9321 cv
cp
f
136.816 136.738 mo
136.677 136.748 li
136.119 134 135.239 131.309 133.589 130.209 cv
133.554 129.134 133.478 128.057 133.373 126.977 cv
135.169 130.281 136.966 133.585 138.763 136.89 cv
138.132 136.818 137.487 136.768 136.816 136.738 cv
cp
134.835 144.396 mo
134.275 141.19 133.806 137.983 133.503 134.763 cv
133.539 134.252 133.566 133.741 133.582 133.23 cv
133.621 133.636 133.654 134.269 133.748 134.726 cv
134.341 137.636 134.796 140.463 135.03 143.392 cv
134.964 143.728 134.896 144.067 134.835 144.396 cv
cp
110.224 169.712 mo
109.815 168.502 108.33 168.381 107.599 169.137 cv
106.804 168.37 105.963 167.701 105.068 167.068 cv
104.031 165.785 102.931 164.559 101.792 163.356 cv
104.304 164.922 107.11 164.387 110.071 162.945 cv
111.724 164.32 113.698 165.056 115.96 164.878 cv
116.054 164.871 116.146 164.852 116.24 164.842 cv
115.3 166.088 112.101 168.465 110.224 169.712 cv
cp
84.0288 101.668 mo
83.9877 100.34 83.9467 99.0117 83.9057 97.6836 cv
84.101 97.6069 84.2768 97.4893 84.4389 97.353 cv
84.4086 98.8145 84.2592 100.25 84.0288 101.668 cv
cp
90.4604 25.5 mo
90.0092 24.062 89.4096 22.4287 88.9418 20.7695 cv
89.3178 20.9702 89.7758 20.9605 90.1606 20.7935 cv
93.2895 28.5684 97.1967 36.1758 101.199 43.5981 cv
101.914 46.1939 102.65 48.7827 103.427 51.3579 cv
104.557 61.604 105.242 71.896 105.439 82.1997 cv
103.833 72.9307 102.168 63.6704 100.57 54.4048 cv
100.451 53.7188 100.045 53.3355 99.5542 53.1968 cv
99.103 45.6689 97.2045 38.0293 94.2924 31.2754 cv
93.9272 30.4272 92.7006 30.5234 92.1704 31.1397 cv
91.8198 29.7783 91.4379 28.4204 90.9897 27.0542 cv
90.8208 26.5405 90.642 26.022 90.4604 25.5 cv
cp
118.077 62.7383 mo
118.042 63.5679 118.021 64.3911 118.009 65.2109 cv
117.855 63.6431 117.708 62.0913 117.585 60.5615 cv
117.526 59.7075 117.468 58.8535 117.407 57.9995 cv
117.372 57.7939 li
117.998 58.6821 118.644 59.561 119.334 60.4209 cv
119.56 60.7022 119.892 60.876 120.254 60.9678 cv
119.277 60.8359 118.122 61.644 118.077 62.7383 cv
cp
121.476 60.9458 mo
122.124 62.9854 122.962 64.917 124.521 66.6592 cv
124.677 66.8335 124.872 66.9536 125.079 67.0493 cv
125.221 68.0234 125.367 68.9981 125.513 69.9717 cv
125.411 69.8179 li
124.862 69.0596 124.259 68.4546 123.604 67.8965 cv
123.017 65.8428 122.286 63.8442 121.38 61.8433 cv
121.173 61.3843 120.842 61.1255 120.47 61.0161 cv
120.804 61.0659 121.153 61.0376 121.476 60.9458 cv
cp
107.264 26.3052 mo
107.065 26.0005 106.868 25.6948 106.674 25.3877 cv
106.143 24.0552 105.603 22.7305 105.055 21.418 cv
105.635 21.9927 106.212 22.5791 106.79 23.1895 cv
107.113 23.5298 107.494 23.709 107.883 23.772 cv
107.818 24.5918 107.537 25.4868 107.264 26.3052 cv
cp
144.953 133.614 mo
144.296 132.559 143.081 132.441 142.195 132.91 cv
141.355 131.387 140.544 129.852 139.763 128.304 cv
138.352 124.58 136.82 120.911 135.097 117.307 cv
133.366 110.444 130.099 103.667 127.104 97.3482 cv
126.917 96.9536 126.605 96.7983 126.281 96.7857 cv
123.654 90.1138 121.356 83.3521 119.546 76.2983 cv
120.289 77.1162 121.878 76.7534 121.894 75.4292 cv
121.898 75.0459 121.882 74.6636 121.879 74.2803 cv
122.494 74.6763 123.165 74.6108 123.69 74.2666 cv
124.41 75.3237 125.226 76.2007 126.347 76.4766 cv
127.214 76.6904 128.021 76.5332 128.677 76.1426 cv
129.128 75.9951 129.547 75.7412 129.82 75.3887 cv
130.501 74.5044 130.539 73.8618 130.197 72.8262 cv
130.088 72.4976 129.927 72.2398 129.738 72.0352 cv
129.183 68.2744 128.619 64.5166 128.02 60.7617 cv
127.818 59.4912 126.433 59.1602 125.4 59.5601 cv
124.28 56.4727 123.643 53.1982 121.956 50.2783 cv
119.56 46.1343 115.793 42.9497 111.9 40.2622 cv
111.763 40.168 111.621 40.1162 111.477 40.084 cv
111.226 39.0073 110.955 37.9331 110.655 36.8628 cv
111.175 36.543 111.531 36.0049 111.449 35.2891 cv
111.359 34.5044 111.189 33.7593 110.961 33.0444 cv
111.158 32.8257 111.333 32.5786 111.455 32.2749 cv
111.958 31.0205 111.947 30.5732 111.453 29.314 cv
111.379 29.127 111.266 28.9507 111.136 28.7832 cv
111.251 24.9541 113.649 20.4727 108.977 18.3882 cv
108.652 18.2432 108.304 18.1836 107.966 18.1958 cv
105.184 15.3345 101.828 13.1514 98.142 11.481 cv
97.8598 11.3535 97.5795 11.3057 97.3051 11.292 cv
94.5356 8.78907 91.4829 6.60352 88.2241 4.77784 cv
87.0073 3.87012 85.7221 3.24659 84.3745 2.83497 cv
83.9702 2.65088 83.5698 2.45801 83.1606 2.28418 cv
82.6635 2.07325 82.187 2.11524 81.7944 2.29932 cv
79.8081 2.06006 77.7124 2.15284 75.5229 2.40577 cv
69.6987 3.07764 63.0278 2.99659 57.935 6.23145 cv
57.5307 6.48829 57.3413 6.87696 57.3247 7.26709 cv
55.9868 7.73926 54.6274 8.15918 53.2143 8.47461 cv
52.144 8.71338 52.3803 10.4136 53.4741 10.3853 cv
57.645 10.2754 61.3813 9.35499 65.0444 7.34082 cv
65.0229 7.31153 li
65.3667 7.08301 65.5747 6.7793 65.6772 6.45459 cv
68.353 6.09229 71.1225 6.08204 73.7495 5.89014 cv
78.8862 5.51368 83.0854 5.26075 87.1997 8.8545 cv
87.4819 9.12452 87.7846 9.27295 88.0893 9.34229 cv
91.1616 11.6592 94.0522 14.1753 96.8686 16.9395 cv
97.8227 17.8755 99.019 17.6597 99.8002 16.9722 cv
100.392 17.3828 100.969 17.8091 101.529 18.2549 cv
101.087 18.5391 100.786 18.9966 100.855 19.5689 cv
100.873 19.7153 100.909 19.8569 100.933 20.0015 cv
100.914 20.0068 li
100.956 20.1338 li
101.155 21.2095 101.525 22.2314 102.002 23.2183 cv
104.156 29.4951 106.573 35.8897 109.796 41.6484 cv
109.847 42.2109 110.173 43.0483 110.683 44.0566 cv
110.652 44.335 110.683 44.6411 110.799 44.9736 cv
112.238 49.0859 114.109 52.8921 116.46 56.4634 cv
115.298 55.7974 113.503 56.2979 113.615 57.9995 cv
113.658 58.6758 113.693 59.3613 113.724 60.0513 cv
112.577 60.1045 111.456 61.0376 111.886 62.4531 cv
112.584 64.7564 113.283 67.0591 113.982 69.3618 cv
114.087 72.9644 114.285 76.5806 114.826 80.0586 cv
114.311 79.8687 113.693 79.9688 113.451 80.5361 cv
112.076 83.7632 111.776 87.2559 111.683 90.7881 cv
111.446 90.6733 111.146 90.7236 111.086 91.0615 cv
110.726 93.1011 110.685 95.1885 110.804 97.2686 cv
110.377 97.4404 110.049 97.8242 110.064 98.4287 cv
110.243 105.898 106.915 116.411 111.7 122.913 cv
112.128 123.494 113.304 123.397 113.228 122.499 cv
112.885 118.457 111.968 114.656 112.117 110.562 cv
112.215 107.86 112.464 105.18 112.601 102.489 cv
113.165 102.433 113.72 102.101 113.873 101.53 cv
115.178 96.6587 115.048 91.5054 115.235 86.4224 cv
115.484 87.4683 115.662 88.5435 115.792 89.6699 cv
115.878 90.398 116.591 90.6782 117.162 90.2368 cv
117.693 89.8252 117.728 89.6084 117.789 88.9546 cv
117.831 88.5005 117.539 88.2627 117.197 88.2134 cv
117.139 87.8242 117.083 87.4341 117.017 87.0493 cv
117.473 87.1719 117.992 87.0024 118.108 86.4321 cv
118.165 86.1533 118.206 85.8701 118.257 85.5894 cv
120.415 94.4482 123.499 103.178 127.753 111.16 cv
128.301 112.187 129.226 112.402 130.038 112.135 cv
130.575 113.654 131.133 115.163 131.714 116.66 cv
131.175 117.294 130.563 117.818 129.869 118.225 cv
129.419 116.485 128.777 114.821 127.951 113.227 cv
127.773 112.697 127.491 112.185 127.112 111.702 cv
127.104 111.688 li
126.277 110.305 124.308 111.515 124.974 112.933 cv
126.507 116.199 119.223 115.116 118.048 115.029 cv
116.099 114.883 115.658 118.06 117.585 118.457 cv
121.015 119.164 124.279 119.652 127.623 118.406 cv
127.804 118.338 127.956 118.216 128.093 118.075 cv
128.197 118.532 128.287 119.009 128.351 119.537 cv
128.414 120.055 128.893 120.661 129.504 120.416 cv
130.642 119.96 131.533 119.47 132.403 118.802 cv
132.562 119.087 132.72 119.373 132.879 119.658 cv
133.372 121.171 133.873 122.68 134.383 124.186 cv
133.857 124.363 133.398 124.76 133.181 125.276 cv
133.164 125.141 li
133.165 125.103 li
133.16 125.103 li
133.142 124.97 133.13 124.839 133.112 124.707 cv
132.878 123.01 130.201 123.475 130.187 125.103 cv
130.164 127.79 130.214 130.458 130.371 133.111 cv
130.327 133.975 130.265 134.841 130.184 135.711 cv
129.977 136.832 129.846 137.976 129.784 139.157 cv
129.738 140.027 130.415 140.569 131.153 140.682 cv
131.402 142.317 131.706 143.949 132.079 145.579 cv
132.342 146.73 133.486 146.857 134.243 146.354 cv
134.242 146.479 li
134.27 146.828 134.287 147.178 134.308 147.527 cv
134.312 147.772 134.316 148.017 134.32 148.262 cv
134.275 148.944 134.257 149.64 134.281 150.366 cv
134.289 150.587 134.346 150.796 134.436 150.99 cv
134.478 153.871 134.419 156.765 134.503 159.65 cv
133.119 159.312 131.449 160.316 132.113 161.959 cv
132.257 162.317 132.41 162.669 132.556 163.024 cv
132.443 163.165 132.327 163.304 132.21 163.442 cv
131.64 163.559 131.113 163.922 130.9 164.535 cv
130.531 165.601 li
130.436 165.877 130.423 166.139 130.464 166.383 cv
129.662 168.175 127.808 169.178 126.459 170.593 cv
124.671 168.864 123.796 165.949 121.349 166.177 cv
121.197 165.491 li
121.081 164.512 120.238 163.993 119.322 164.415 cv
119.213 164.453 119.111 164.5 119.004 164.543 cv
118.915 164.41 118.802 164.294 118.681 164.187 cv
118.937 164.072 119.187 163.946 119.429 163.801 cv
122.23 162.133 122.459 161.188 126.421 161.799 cv
127.636 161.987 128.712 161.504 129.115 160.27 cv
129.165 160.091 li
129.446 160.102 129.714 160.022 129.917 159.83 cv
130.605 159.497 131.14 158.782 130.989 157.833 cv
130.736 155.661 li
131.16 152.02 131.296 148.381 131.126 144.684 cv
131.061 143.259 128.864 143.244 128.9 144.684 cv
128.91 145.054 128.897 145.417 128.9 145.786 cv
127.756 145.14 126.062 145.593 126.213 147.254 cv
126.33 150.819 125.794 154.125 125.172 157.569 cv
123.611 157.605 121.944 157.675 120.683 158.403 cv
117.484 160.251 115.49 164.143 111.41 160.002 cv
110.882 159.468 110.18 159.488 109.545 159.762 cv
98.5502 164.505 93.6333 139.855 93.0971 132.582 cv
92.7641 128.052 93.267 123.645 93.6499 119.143 cv
93.6606 119.011 93.6674 118.877 93.6792 118.745 cv
95.6645 126.486 96.7573 134.413 96.8725 142.501 cv
96.9018 144.579 100.157 145.168 100.609 143.007 cv
101.111 140.607 101.556 138.199 101.975 135.786 cv
102.783 135.881 103.674 135.563 104.095 134.852 cv
105.228 132.937 106.348 131.012 107.48 129.094 cv
108.035 129.992 108.685 130.835 109.476 131.668 cv
109.982 132.201 110.706 132.294 111.345 132.078 cv
111.496 132.472 111.646 132.865 111.794 133.258 cv
112.493 135.1 114.845 135.095 115.546 133.258 cv
115.656 132.973 115.736 132.74 115.8 132.525 cv
116.566 133.98 117.462 135.375 118.508 136.725 cv
119.126 137.523 120.521 137.428 121.234 136.752 cv
121.429 136.857 li
122.97 137.521 124.593 136.751 124.706 134.977 cv
124.782 133.78 124.874 132.59 125.001 131.403 cv
125.051 131.783 125.107 132.163 125.15 132.543 cv
125.407 134.839 125.439 137.139 125.608 139.438 cv
125.801 142.072 129.595 142.109 129.73 139.438 cv
129.738 139.285 129.746 139.131 129.753 138.977 cv
129.73 138.767 li
129.728 135.373 129.205 131.919 128.546 128.603 cv
128.047 126.083 127.953 122.902 125.266 121.9 cv
124.626 121.662 123.892 121.958 123.42 122.388 cv
122.773 122.98 122.412 123.86 122.166 124.79 cv
121.539 123.154 118.658 122.636 118.294 124.795 cv
118.058 126.195 118.294 127.783 118.486 129.355 cv
117.937 128.099 117.498 126.789 117.166 125.416 cv
116.597 123.053 112.982 124.054 113.528 126.419 cv
113.72 127.25 113.956 128.053 114.22 128.839 cv
114.134 128.829 li
114.017 128.545 113.898 128.262 113.781 127.978 cv
113.197 126.568 111.299 126.148 110.458 127.349 cv
109.968 126.66 109.57 125.898 109.274 125.057 cv
108.695 123.634 107.085 123.434 106.164 124.651 cv
105.34 125.739 104.546 126.829 103.771 127.93 cv
103.699 126.194 103.718 124.455 103.82 122.69 cv
103.972 120.064 100.048 120.154 99.7856 122.69 cv
99.6098 124.392 99.4145 126.089 99.2026 127.783 cv
98.0424 121.139 96.1977 114.643 93.6967 108.309 cv
93.7163 108.191 li
93.5893 97.2866 91.1499 86.23 89.3452 75.5098 cv
89.0327 73.6489 86.3471 73.9404 85.8618 75.5098 cv
84.9565 78.4404 84.1928 81.3911 83.5463 84.3648 cv
83.5092 82.5269 83.4731 80.6899 83.4545 78.856 cv
83.392 72.8848 83.2338 66.9077 82.8745 60.9492 cv
82.9663 61.0366 83.0463 61.1392 83.1479 61.2144 cv
86.6743 63.8223 88.31 57.7388 89.5542 54.1943 cv
91.2553 59.479 93.6792 64.5757 94.9643 69.9356 cv
95.2915 71.3018 97.6704 71.4531 97.8823 69.9356 cv
98.2924 67.0024 98.3325 64.104 98.1655 61.2241 cv
98.184 61.2305 li
100.501 74.8355 102.732 88.4653 105.308 102.021 cv
105.677 103.966 108.58 103.415 108.646 101.569 cv
108.925 93.7368 108.944 85.9209 108.724 78.1152 cv
108.988 79.1436 109.252 80.1719 109.535 81.1978 cv
109.929 82.6338 111.991 82.2847 112.064 80.8555 cv
112.539 71.647 110.345 62.8672 107.777 54.1343 cv
107.843 54.0342 107.869 53.9102 107.814 53.769 cv
107.674 53.4082 107.534 53.0439 107.394 52.6821 cv
107.118 51.0454 106.839 49.4092 106.573 47.7705 cv
106.499 47.3189 106.257 47.0005 105.937 46.7939 cv
104.965 42.8955 103.98 39.0005 102.99 35.1069 cv
103.721 34.7715 104.242 34.0088 103.964 33.0225 cv
103.575 31.6387 103.04 30.4619 102.369 29.398 cv
102.226 29.061 102.088 28.7241 101.951 28.3872 cv
101.701 26.9395 101.282 25.585 100.513 24.5356 cv
100.192 23.5757 99.896 22.603 99.6323 21.6084 cv
99.4936 21.0273 99.3452 20.4487 99.2085 19.8672 cv
98.6303 17.4287 94.9272 18.4639 95.4614 20.8999 cv
95.6264 21.6489 95.8081 22.394 95.9995 23.1367 cv
96.2983 24.3814 96.604 25.625 96.9067 26.8696 cv
94.4311 21.4897 91.7182 16.2637 88.6147 11.3853 cv
88.2573 10.8223 87.1411 10.8018 87.0258 11.5928 cv
87.0102 11.7002 86.9975 11.8062 86.9819 11.9131 cv
86.3706 11.8398 85.7446 12.0723 85.3549 12.7549 cv
83.4604 16.0669 84.5961 19.3081 85.5463 22.8223 cv
87.0151 28.2539 88.4653 33.7778 90.4428 39.0474 cv
90.8159 40.042 92.103 40.3848 92.9272 40.0015 cv
93.8491 47.3184 94.7387 54.6699 94.9516 62.0225 cv
93.6049 58.2485 92.4038 54.3901 90.7085 50.7798 cv
90.4252 50.1772 89.4829 50.0967 89.0542 50.5669 cv
88.0307 51.6895 87.3022 52.8189 86.6801 54.2158 cv
85.6987 56.4229 84.4467 59.1851 83.6049 55.0259 cv
82.8178 51.1426 82.7641 47.2549 81.1489 43.6934 cv
80.3608 38.3154 79.312 32.9731 77.9135 27.687 cv
77.5581 26.3457 75.4956 26.9126 75.8335 28.2603 cv
76.9936 32.8677 77.8618 37.5088 78.521 42.1733 cv
78.4506 42.3032 78.395 42.4439 78.3784 42.6064 cv
78.2231 43.6377 78.0678 44.6689 77.9116 45.7002 cv
77.7602 46.4531 78.5659 46.8862 79.0854 46.6397 cv
80.3979 58.252 80.5268 69.9917 80.5073 81.7188 cv
80.5024 84.2876 80.478 86.8716 80.4506 89.4639 cv
78.9741 96.0288 78.8989 102.944 77.9272 109.569 cv
76.6762 118.088 74.9057 126.522 72.6479 134.83 cv
72.5014 135.369 73.3374 135.599 73.4838 135.061 cv
76.0063 125.777 77.8911 116.38 78.9389 106.814 cv
79.4702 101.959 79.5668 97.0005 80.4233 92.1812 cv
80.3452 99.8232 80.2983 107.528 80.7045 115.171 cv
79.811 118.93 79.0795 122.729 78.4038 126.533 cv
76.8237 135.423 75.4692 144.497 75.1264 153.539 cv
74.9917 153.197 74.8569 152.855 74.7211 152.513 cv
72.7543 145.351 71.3911 138.119 70.187 130.781 cv
70.3911 125.979 70.6821 121.182 71.0864 116.392 cv
71.6088 110.206 72.7954 103.902 72.5805 97.6904 cv
72.56 97.1216 71.7612 97.0073 71.5903 97.5562 cv
69.0991 105.565 68.5034 114.568 68.2788 123.347 cv
68.019 123.424 67.7963 123.627 67.8002 123.939 cv
67.8276 126.157 67.9487 128.377 68.143 130.596 cv
68.1186 132.144 68.0913 133.673 68.0542 135.177 cv
68.0405 135.708 68.3803 136.002 68.7768 136.088 cv
68.8725 136.761 68.9721 137.433 69.0795 138.104 cv
68.9819 138.064 68.8881 138.016 68.7856 137.991 cv
66.6489 137.469 67.309 139.241 65.9262 139.788 cv
64.3081 140.428 65.8627 132.205 66.0971 130.846 cv
66.6958 127.367 67.2944 123.889 67.893 120.411 cv
68.0581 119.456 66.6049 119.038 66.4243 120.006 cv
65.9213 122.699 59.937 143.289 65.0825 142.752 cv
65.9741 142.66 66.0024 142.008 66.6723 141.628 cv
68.1049 140.815 66.2085 139.488 68.4545 141.268 cv
69.6899 142.247 69.8295 143.642 70.1127 145.077 cv
70.6303 147.707 70.7319 150.411 71.4829 152.996 cv
72.0053 154.793 73.0073 156.408 73.726 158.107 cv
73.978 158.972 74.2309 159.833 74.4897 160.691 cv
74.895 162.041 77.2006 161.868 77.0561 160.343 cv
77.0454 160.227 77.017 160.114 77.0034 159.998 cv
77.0092 159.996 li
76.9975 159.957 li
76.8491 158.747 76.5512 157.567 76.1713 156.403 cv
76.7543 156.484 77.3823 156.214 77.5493 155.516 cv
78.0952 153.238 78.5249 150.703 79.0346 148.156 cv
78.2827 153.397 77.7055 158.683 78.0825 163.803 cv
78.1967 165.362 80.3305 166.174 81.1811 164.642 cv
81.8706 163.401 82.517 162.135 83.1342 160.853 cv
82.5434 163.064 81.9038 165.27 81.2592 167.487 cv
80.7319 169.301 83.3247 170.366 84.2827 168.762 cv
88.2817 162.062 92.476 154.03 92.5542 146.058 cv
92.5639 145.075 91.3569 144.333 90.519 144.783 cv
90.5092 144.67 90.5063 144.559 90.4946 144.444 cv
90.2661 142.155 86.6538 142.131 86.8852 144.444 cv
86.9536 145.131 86.9877 145.803 87.0053 146.471 cv
86.4311 146.474 85.8432 146.771 85.6362 147.413 cv
84.561 150.731 83.2065 153.84 81.6645 156.875 cv
82.4184 150.101 84.1635 143.278 82.6499 136.676 cv
82.3862 135.523 80.6792 135.823 80.642 136.948 cv
80.4975 138.171 80.3295 139.406 80.1508 140.649 cv
79.6596 142.913 78.8588 145.205 77.9858 147.458 cv
78.5874 139.394 79.8139 131.521 81.3569 123.603 cv
81.6967 126.799 82.145 129.977 82.7358 133.125 cv
82.9038 134.023 84.2504 133.771 84.2778 132.917 cv
84.5268 125.212 84.4428 117.466 84.2534 109.713 cv
85.351 104.381 86.2221 98.79 85.4213 93.5308 cv
85.8608 90.502 86.4311 87.5083 87.1293 84.5405 cv
88.1674 91.2427 89.2807 97.9956 91.0776 104.492 cv
90.5727 104.53 90.0766 104.78 89.8442 105.217 cv
88.6752 107.414 89.5004 108.501 90.2602 110.864 cv
91.4116 114.447 91.1049 117.899 90.7592 121.563 cv
90.104 128.496 90.351 135.455 91.8198 142.278 cv
93.1303 148.363 95.3237 155.456 99.0893 160.62 cv
98.4467 160 97.7954 159.381 97.1284 158.764 cv
96.2241 157.928 94.6352 158.494 94.646 159.792 cv
94.6538 160.757 94.603 161.7 94.5229 162.641 cv
94.4389 162.735 li
93.4233 164.282 92.3823 165.811 91.351 167.348 cv
91.1167 167.481 li
90.9497 167.602 90.7827 167.723 90.6157 167.844 cv
90.5102 167.92 90.4194 168.005 90.3393 168.097 cv
88.269 169.752 86.3989 171.517 84.6958 173.47 cv
84.3803 173.423 84.0512 173.453 83.7758 173.578 cv
81.9526 174.403 80.4848 175.424 79.3393 176.875 cv
78.2514 175.631 77.1626 174.39 76.0327 173.181 cv
75.7788 172.908 75.396 172.775 75.0083 172.771 cv
74.9331 172.66 li
73.643 170.092 71.9545 167.792 69.7905 165.666 cv
69.0502 164.938 68.0932 165.183 67.5737 165.853 cv
67.4692 165.583 67.3344 165.273 67.1342 164.806 cv
66.8745 164.203 66.0444 164.254 65.6362 164.613 cv
65.2944 164.913 60.7368 169.347 59.7202 170.37 cv
59.5424 168.819 59.3862 167.151 59.686 167.169 cv
60.642 167.228 60.8081 165.767 59.9086 165.522 cv
59.4926 165.409 58.4858 165.053 57.311 164.538 cv
58.7963 164.256 60.3051 163.713 61.6948 163.04 cv
63.643 162.095 64.6752 161.854 65.0346 159.574 cv
65.1762 158.677 65.1928 157.736 65.1157 156.788 cv
65.4624 157.004 65.8217 157.213 66.2036 157.414 cv
67.4047 158.045 68.4497 156.591 67.6088 155.591 cv
65.9106 153.572 64.0649 151.673 62.4975 149.548 cv
61.1977 147.785 58.2241 149.422 59.4975 151.302 cv
60.685 153.053 61.1098 154.745 61.2924 156.865 cv
61.3364 157.387 61.3588 157.91 61.3598 158.434 cv
61.6362 159.188 61.3803 159.479 60.5913 159.306 cv
60.3813 159.524 59.6215 159.831 59.351 159.921 cv
55.7788 161.112 54.3198 162.457 51.4233 158.504 cv
50.4663 157.197 48.6479 158.125 48.9848 159.543 cv
48.9585 159.543 li
49.9672 163.555 52.6157 164.84 55.6069 164.733 cv
56.4565 165.154 57.2768 165.583 57.9985 166.067 cv
56.0737 168.348 56.7749 169.787 56.8295 172.817 cv
56.8627 174.633 59.3745 174.818 59.8803 173.368 cv
61.8393 172.864 63.7495 170.565 65.228 168.5 cv
65.4985 169.31 66.4428 169.763 67.1889 169.479 cv
67.3901 169.618 67.5932 169.761 67.7924 169.934 cv
68.0502 170.354 68.3813 170.768 68.812 171.216 cv
69.4614 171.892 70.2895 171.78 70.8403 171.307 cv
71.4711 172.13 72.0502 172.986 72.5795 173.879 cv
72.8608 174.834 73.1752 175.78 73.4877 176.728 cv
73.6049 177.761 73.9145 178.749 74.5014 179.886 cv
75.2319 181.302 77.227 180.491 77.2514 179.112 cv
77.6518 179.57 78.0522 180.029 78.4526 180.49 cv
79.0932 181.229 80.4028 180.998 80.854 180.18 cv
81.1987 179.555 81.5893 178.968 82.0268 178.426 cv
82.5581 179.653 84.3491 180.181 85.3159 178.693 cv
87.1792 175.827 89.2026 173.117 91.4799 170.584 cv
91.8237 170.538 92.1557 170.36 92.3579 170.045 cv
93.101 168.896 93.8266 167.735 94.5522 166.575 cv
95.2329 167.269 96.6694 167.165 96.9692 166.004 cv
97.2211 165.033 97.3735 164.08 97.4643 163.12 cv
98.4985 164.181 99.4838 165.289 100.424 166.435 cv
100.417 166.576 100.431 166.72 100.478 166.868 cv
101.619 170.38 104.021 172.811 106.699 175.258 cv
107.902 176.358 109.765 175.283 109.567 173.863 cv
109.777 173.852 li
112.444 173.415 113.637 171.312 115.593 169.583 cv
115.976 169.245 116.355 168.942 116.722 168.645 cv
117.451 169.284 118.587 169.358 119.248 168.27 cv
119.306 168.41 li
119.653 169.219 120.755 169.138 121.301 168.667 cv
120.261 169.565 125.242 173.765 125.99 174.15 cv
126.929 174.636 127.98 174.207 128.313 173.205 cv
128.642 172.218 131.54 170.948 132.347 169.965 cv
133.105 169.042 133.523 168.092 133.782 167.059 cv
134.21 166.604 134.608 166.139 134.983 165.666 cv
135.484 165.63 135.98 165.444 136.325 165.138 cv
136.933 164.595 137.331 164.042 137.548 163.447 cv
138.027 163.144 138.398 162.626 138.482 161.891 cv
139.095 156.505 139.04 150.818 138.173 145.408 cv
138.431 145.135 138.609 144.783 138.638 144.363 cv
138.679 144.363 li
138.641 143.929 138.603 143.496 138.564 143.062 cv
138.544 142.844 138.485 142.644 138.396 142.461 cv
138.277 141.563 138.21 140.706 138.201 139.818 cv
138.734 139.938 139.221 140.094 139.673 140.287 cv
139.693 141.321 140.697 142.369 141.761 142.457 cv
142.495 142.517 143.228 142.577 143.962 142.637 cv
145.83 142.789 146.369 140.459 145.319 139.297 cv
146.158 137.559 146.154 135.543 144.953 133.614 cv
cp
f
70.7729 99.8828 mo
70.7729 99.9829 li
70.7729 99.8828 li
cp
f
65.0229 107.883 mo
65.0229 107.983 li
65.0229 107.883 li
cp
f
11.2417 151.015 mo
10.9624 151.012 10.7124 151.048 10.4731 151.102 cv
10.5288 150.723 10.5317 150.325 10.5102 149.907 cv
10.5249 149.712 li
10.4946 149.712 li
10.4799 149.526 10.477 149.351 10.4487 149.149 cv
10.4272 148.997 10.393 148.857 10.3491 148.73 cv
10.392 147.558 10.3999 146.387 10.2788 145.189 cv
10.1713 144.121 8.57759 143.364 8.00728 144.574 cv
6.99165 146.734 6.42915 148.966 5.71431 151.228 cv
5.45552 152.046 5.73775 152.783 6.25532 153.313 cv
6.3354 155.065 6.55611 156.802 6.96431 158.546 cv
7.38814 160.352 10.309 160.422 10.6889 158.546 cv
10.7485 158.247 11.6186 154.503 11.2417 154.507 cv
13.4897 154.486 13.4926 151.039 11.2417 151.015 cv
cp
.886275 .839216 .623529 rgb
f
62.1401 41.7481 mo
62.8842 36.8677 63.9663 32.0679 65.3696 27.3208 cv
64.8569 29.5225 64.4975 31.7231 64.3569 33.9365 cv
64.1264 34.7773 63.8784 35.6177 63.6186 36.4614 cv
63.2124 37.7793 62.7905 39.8398 62.1401 41.7481 cv
cp
46.6889 75.8301 mo
46.894 74.3154 47.1186 72.8086 47.3647 71.314 cv
47.2065 72.8345 46.979 74.3369 46.6889 75.8301 cv
cp
46.8305 94.4048 mo
46.5893 99.0361 46.3627 103.668 46.0561 108.296 cv
45.9409 110.041 46.142 118.159 45.2241 121.889 cv
42.4331 110.419 43.9975 97.2637 45.4946 85.3008 cv
45.6713 85.2227 45.8208 85.0732 45.8969 84.8408 cv
46.3461 83.4746 46.8081 82.0835 47.2446 80.6763 cv
47.1684 85.252 47.0698 89.8281 46.8305 94.4048 cv
cp
21.9155 85.1577 mo
22.0083 82.5098 22.1108 79.8628 22.2319 77.2173 cv
22.2768 76.2651 21.2583 75.9253 20.5795 76.2852 cv
21.0034 73.2168 21.4233 70.148 21.9038 67.0879 cv
22.5385 63.0356 23.3647 58.9863 24.0366 54.9229 cv
24.9604 55.9004 26.937 55.897 27.4096 54.2031 cv
28.2241 51.2881 29.0376 48.3726 29.851 45.457 cv
26.5659 58.3984 23.7065 71.7383 21.9155 85.1577 cv
cp
27.6772 72.2886 mo
27.6626 72.3965 27.643 72.5112 27.6254 72.6226 cv
27.5522 72.5078 27.4624 72.4077 27.3598 72.3218 cv
27.9565 68.2378 28.6176 64.1602 29.3579 60.0874 cv
28.7338 64.1436 28.2153 68.2139 27.6772 72.2886 cv
cp
19.144 117.688 mo
18.8393 118.206 18.5307 118.721 18.2426 119.247 cv
18.5717 113.395 19.3159 107.57 19.6948 101.726 cv
19.7045 104.19 19.7221 106.654 19.7417 109.119 cv
19.4331 111.966 19.1948 114.838 19.144 117.688 cv
cp
77.771 36.2275 mo
77.6928 35.3081 76.1733 34.9233 76.019 35.9907 cv
75.2788 41.144 73.9174 46.2393 73.0288 51.3823 cv
71.9126 43.8623 72.1362 36.2983 72.3422 28.6631 cv
72.3706 27.6011 70.8159 27.4272 70.521 28.4165 cv
69.7221 31.1035 68.4838 33.5967 67.0854 36.0064 cv
67.1088 32.7524 67.5258 29.542 67.892 26.2481 cv
68.101 25.1372 66.6284 24.5952 65.9868 25.3149 cv
66.0473 25.1231 66.103 24.9307 66.1635 24.7388 cv
66.6303 23.291 64.8256 22.584 63.8354 23.3838 cv
60.7397 25.8857 59.4868 29.9751 57.8383 33.478 cv
57.1186 35.0093 56.4067 36.5444 55.6928 38.0786 cv
55.9282 37.3262 56.1616 36.5742 56.4018 35.8193 cv
56.6889 34.9106 55.4135 34.4609 54.9233 35.1963 cv
54.0854 36.4546 53.3256 37.7598 52.6069 39.0889 cv
54.8696 32.0767 56.8012 24.9492 59.0717 17.936 cv
59.7045 15.9819 56.8852 15.0596 55.9458 16.6201 cv
55.934 16.6128 li
54.6342 19.4326 53.4506 22.3457 52.435 25.3198 cv
52.0288 26.2139 51.6206 27.1055 51.2143 27.9951 cv
51.4604 26.666 51.6049 25.3486 51.3667 24.3379 cv
51.2241 23.7285 50.9233 23.1128 50.4799 22.8262 cv
50.8042 22.1856 51.0532 21.6831 51.1245 21.5435 cv
51.5639 20.6797 51.267 19.7378 50.6733 19.1411 cv
50.7807 18.9443 50.896 18.7573 50.9995 18.5581 cv
52.1782 16.2944 48.8979 14.3506 47.5678 16.5518 cv
47.1948 17.1567 46.8139 17.7524 46.4262 18.3408 cv
45.1928 20.186 43.8364 21.9292 42.3881 23.5972 cv
41.7573 22.7837 40.3901 22.7319 39.7143 23.7407 cv
39.1616 24.564 38.603 25.3823 38.0463 26.2031 cv
37.3452 25.1504 35.8725 24.6001 34.9272 25.8169 cv
32.7631 28.605 30.8715 31.5195 29.2651 34.562 cv
28.9116 34.7876 28.6225 35.144 28.477 35.6685 cv
28.3715 36.0513 28.2651 36.4341 28.1596 36.8169 cv
26.6752 39.959 25.4897 43.2334 24.6167 46.644 cv
24.017 46.1602 22.977 46.1377 22.6333 47.1729 cv
18.476 59.6953 16.9604 74.793 16.9829 87.9439 cv
16.9838 88.2905 17.1831 88.544 17.4458 88.6934 cv
17.0346 91.3877 16.7094 94.0977 16.4213 96.8149 cv
14.2866 105.006 13.1704 113.359 12.9331 121.848 cv
12.8999 123.022 14.0151 123.567 14.9389 123.345 cv
14.8979 124.412 14.8715 125.48 14.8803 126.551 cv
14.893 128.035 17.2026 128.894 17.8823 127.364 cv
18.3647 126.276 18.8725 125.206 19.4038 124.149 cv
19.5258 125.27 19.6938 126.381 19.9145 127.479 cv
20.2338 129.067 22.937 128.736 22.7768 127.091 cv
22.517 124.453 22.3237 121.811 22.1577 119.168 cv
22.478 118.631 22.7983 118.094 23.1303 117.563 cv
23.7065 120.026 23.0874 123.355 22.9682 125.38 cv
22.7866 128.493 22.562 131.603 22.3276 134.711 cv
22.269 135.485 23.0551 136.363 23.8549 136.357 cv
24.0141 137.21 24.1792 138.062 24.3276 138.918 cv
24.4594 139.678 24.9936 139.986 25.5776 139.994 cv
26.4116 140.455 27.5815 140.276 27.7866 139.101 cv
27.934 138.259 28.0805 137.417 28.228 136.575 cv
28.4272 135.428 27.6225 134.716 26.7778 134.689 cv
26.7338 134.381 26.6831 134.075 26.6411 133.767 cv
26.5659 133.225 26.2085 132.895 25.7651 132.738 cv
26.0776 128.427 26.3901 124.09 26.4223 119.776 cv
26.4428 117.137 26.2534 115.139 24.435 113.13 cv
23.8061 112.435 22.8608 112.559 22.2182 113.073 cv
22.228 112.921 22.2397 112.77 22.2504 112.618 cv
22.6577 112.39 22.9604 111.972 22.976 111.365 cv
23.8022 102.495 24.6518 93.6865 25.6967 84.919 cv
26.0405 82.856 26.4018 80.7964 26.7866 78.7402 cv
26.853 80.4097 27.4252 81.8721 29.1352 82.6807 cv
29.5932 82.897 30.1499 82.814 30.4213 82.3433 cv
36.7592 71.3833 39.7905 59.4883 42.4936 47.2134 cv
42.8139 45.7564 40.5639 45.1362 40.2553 46.5962 cv
38.0893 56.8325 35.9165 67.2852 31.3315 76.7651 cv
30.3198 78.8599 29.2885 81.1167 28.852 77.7964 cv
28.5649 75.6143 29.5102 72.6475 29.7905 70.4526 cv
30.4946 64.9482 31.226 59.4697 31.5893 53.9302 cv
31.6235 53.4136 30.9682 53.2178 30.6284 53.4771 cv
31.1928 50.7158 31.8002 47.9556 32.4545 45.1963 cv
32.7241 44.062 31.521 43.4116 30.7124 43.7637 cv
32.0991 41.6812 33.4292 39.5957 34.6127 37.4473 cv
35.8549 35.479 37.1147 33.521 38.3901 31.5732 cv
38.9077 31.7046 39.4858 31.6162 39.9936 31.166 cv
41.3813 29.9346 42.6811 28.6484 43.9252 27.3208 cv
43.9565 27.3189 li
43.9174 27.9893 43.9877 28.6519 44.2085 29.293 cv
44.4477 29.9932 44.9975 30.7339 45.7846 30.8701 cv
46.0053 30.9082 46.2241 30.9463 46.4448 30.9844 cv
46.6225 31.0156 46.7973 31.0142 46.9721 31.0137 cv
46.1108 34.6963 45.4057 38.7861 45.1635 39.9941 cv
44.7876 41.8804 46.9135 43.1934 48.3803 41.8667 cv
48.6303 41.6406 48.8549 41.3984 49.0747 41.1523 cv
49.062 41.335 49.0356 41.5166 49.0249 41.6997 cv
48.9624 42.7388 49.9213 43.1406 50.7163 42.9097 cv
45.7426 54.0708 44.0893 67.0137 42.7827 78.8569 cv
41.9018 86.8296 41.1733 94.853 40.8823 102.872 cv
40.8588 103.016 li
40.2973 103.003 39.7788 103.31 39.6713 104.055 cv
38.3139 113.451 36.9077 122.875 35.978 132.325 cv
35.7885 134.241 38.9086 134.288 39.0053 132.325 cv
39.7124 127.006 40.3432 121.677 40.9877 116.35 cv
41.3256 119.637 42.021 122.855 43.3618 125.869 cv
43.6997 126.629 44.7065 126.694 45.351 126.391 cv
47.7963 125.238 47.7651 122.587 47.9506 120.187 cv
48.437 113.917 48.7739 107.635 49.0278 101.352 cv
49.4311 91.3604 49.7172 81.1626 49.3374 71.1045 cv
49.5317 68.8765 49.4624 66.6421 48.978 64.4238 cv
48.9379 64.2417 48.8432 64.1191 48.7241 64.0376 cv
49.727 59.2402 50.9096 54.5098 52.2182 49.7837 cv
52.5874 49.8052 52.9536 49.6411 53.1811 49.1787 cv
55.228 45.0015 57.2836 40.8276 59.3002 36.6353 cv
59.8608 35.4692 60.3901 34.1812 60.9487 32.8833 cv
59.8002 37.6699 58.9702 42.521 58.4467 47.4565 cv
58.3159 48.6807 59.7807 49.1758 60.687 48.7422 cv
63.5795 47.3574 64.1381 44.4439 64.851 41.5166 cv
64.8774 41.4097 64.8979 41.3018 64.9233 41.1943 cv
65.4487 41.8677 66.6948 41.8179 67.142 41.0332 cv
68.1235 39.3096 68.935 37.5425 69.6782 35.7485 cv
69.0581 43.1167 69.3432 50.3906 72.4272 57.3306 cv
72.8237 58.2202 74.0053 57.6519 74.0795 56.8833 cv
74.351 54.0757 74.559 51.3091 74.8823 48.5752 cv
74.2612 58.1499 74.0288 67.7778 73.0766 77.312 cv
72.3569 84.5161 71.2417 91.665 70.2436 98.833 cv
69.4907 104.243 69.06 109.558 66.8696 114.414 cv
67.1567 109.273 67.437 104.136 67.8901 99.002 cv
67.9995 97.7598 66.56 97.2774 65.6313 97.7061 cv
61.7251 99.5083 62.229 106.43 61.6762 109.999 cv
60.6958 116.33 59.8198 122.608 59.3598 129.002 cv
59.2954 129.892 60.685 130.058 60.9018 129.21 cv
62.1284 124.409 63.1557 119.612 63.9858 114.725 cv
64.1655 113.662 64.3461 112.598 64.5268 111.535 cv
64.5239 113.88 64.5522 116.224 64.6635 118.564 cv
64.7085 119.505 66.0014 119.95 66.4985 119.062 cv
69.5024 113.692 70.5161 107.198 71.8471 101.252 cv
73.3335 94.6133 74.2241 87.8584 75.0883 81.1157 cv
76.9721 66.4277 79.019 51.0488 77.771 36.2275 cv
cp
f
57.9956 104.944 mo
57.4194 118.457 55.7104 131.98 53.351 145.3 cv
52.9565 144.708 52.562 144.115 52.1665 143.523 cv
51.978 142.944 50.9585 143 51.0385 143.676 cv
51.2827 145.721 51.8647 147.052 53.0092 148.803 cv
53.5268 149.593 54.9311 149.565 55.1547 148.523 cv
58.2417 134.094 59.5463 119.69 59.6362 104.944 cv
59.642 103.884 58.0405 103.892 57.9956 104.944 cv
cp
f
140.691 142.275 mo
139.128 143.247 138.252 144.997 137.877 146.734 cv
137.173 149.987 138.445 154.071 138.718 157.27 cv
138.9 159.387 138.984 161.504 138.994 163.622 cv
138.453 163.452 137.847 163.483 137.392 163.793 cv
133.165 166.674 129.779 170.157 127.048 174.485 cv
126.853 174.793 126.764 175.097 126.744 175.387 cv
125.939 175.982 122.847 170.18 122.011 169.542 cv
120.632 168.488 118.922 168.142 117.249 168.639 cv
115.044 169.294 113.487 171.28 112.083 172.952 cv
107.89 177.95 104.591 171.092 102.519 167.862 cv
99.5219 163.189 96.9887 162.366 92.8569 166.396 cv
87.479 171.641 82.2426 177.041 76.9643 182.389 cv
74.5112 177.23 71.4672 172.513 67.7358 168.129 cv
68.435 166.291 66.0366 164.216 64.521 165.949 cv
62.5747 168.175 60.8178 170.485 59.2016 172.934 cv
54.1245 169.833 47.7866 170.251 43.1831 173.798 cv
42.5161 170.119 41.8862 166.345 40.6372 162.916 cv
39.8051 160.63 38.3256 158.084 35.7583 157.485 cv
33.1635 156.88 31.3002 158.622 29.642 160.315 cv
26.4936 163.532 23.3002 166.299 19.5141 168.588 cv
18.8354 167.37 18.1577 166.152 17.4799 164.934 cv
16.8725 163.843 15.2026 163.589 14.3393 164.529 cv
11.2514 167.893 7.98775 171.053 4.51509 173.992 cv
7.39693 147.975 10.2788 121.959 13.1596 95.9414 cv
13.9379 88.9219 14.5795 81.8682 16.1616 74.9722 cv
17.6362 68.542 19.6079 62.2759 20.7075 55.7578 cv
22.517 45.0303 23.7368 32.1968 32.7299 25.2412 cv
33.0063 25.2759 33.31 25.2461 33.644 25.1167 cv
38.0004 23.4272 41.1264 20.5171 44.2719 17.1353 cv
48.7387 12.3315 53.0629 8.80567 59.4819 6.91163 cv
65.8374 5.03663 72.8168 3.72461 79.4594 4.02735 cv
87.1508 4.37793 92.767 7.8667 98.7495 12.3106 cv
103.976 16.1924 111.938 20.0737 111.069 27.5527 cv
110.396 33.3442 109.762 35.9541 113.445 40.9209 cv
120.054 49.835 124.755 59.7964 127.523 70.4463 cv
126.929 71.0845 126.797 71.9981 127.226 72.8228 cv
127.569 73.4839 127.913 74.1455 128.255 74.8066 cv
128.349 74.9873 128.484 75.1387 128.634 75.2725 cv
128.695 75.5718 128.757 75.8706 128.814 76.1709 cv
128.299 76.7197 128.129 77.5161 128.723 78.3296 cv
128.728 78.3359 li
127.183 77.2847 125.558 76.3438 123.826 75.5205 cv
122.216 74.7554 120.532 76.0083 120.888 77.7788 cv
125.472 100.558 138.633 120.124 146.269 141.827 cv
144.468 141.952 142.468 141.171 140.691 142.275 cv
cp
150.771 142.587 mo
143.734 121.586 131.196 102.688 125.758 81.1646 cv
127.71 82.4185 129.51 83.8613 131.228 85.5649 cv
132.464 86.7915 134.626 85.8828 134.642 84.1509 cv
134.667 81.3857 134.062 79.1553 132.589 76.9199 cv
132.779 76.5493 132.863 76.1074 132.77 75.6045 cv
130.216 61.8115 124.526 49.5806 116.39 38.2236 cv
112.263 32.4614 117.307 25.9717 113.665 19.9356 cv
110.827 15.2295 105.049 12.0356 100.769 8.85694 cv
95.4272 4.88965 90.2094 1.43506 83.5053 .409672 cv
76.9897 -.58691 70.3139 .385747 63.9174 1.7168 cv
58.0991 2.92774 52.2172 4.6543 47.4741 8.38672 cv
43.3432 11.6382 40.3159 16.3789 36.019 19.3926 cv
35.5424 19.2119 34.9858 19.2075 34.4116 19.4873 cv
23.9799 24.5684 20.062 35.7759 18.1704 46.4951 cv
15.7006 60.4854 11.6401 74.1758 10.0112 88.2949 cv
6.54243 118.368 3.34126 148.474 .00923082 178.562 cv
-.148972 179.983 1.8647 181.179 3.01802 180.289 cv
7.40181 176.905 11.4877 173.25 15.3217 169.279 cv
15.8891 170.299 16.4565 171.319 17.0249 172.338 cv
17.5629 173.306 18.8237 173.56 19.7612 173.056 cv
22.1508 171.77 24.4233 170.348 26.5659 168.678 cv
28.6713 167.038 30.3588 164.684 32.4702 163.144 cv
36.2729 160.371 37.0542 164.646 37.7241 167.669 cv
38.5161 171.241 39.2475 174.827 40.0092 178.405 cv
40.3999 180.239 42.7436 180.168 43.6655 178.883 cv
47.0385 174.175 53.9848 173.406 58.3442 177.18 cv
59.3237 178.028 60.7758 177.934 61.4858 176.775 cv
62.646 174.879 63.894 173.086 65.2417 171.353 cv
69.0434 175.904 72.1206 180.892 74.4272 186.384 cv
74.9868 187.715 76.6049 188.44 77.771 187.266 cv
80.9858 184.028 84.2006 180.79 87.4165 177.551 cv
89.8754 175.075 92.6616 170.82 95.685 169.225 cv
98.935 167.509 99.2592 170.234 100.674 172.474 cv
101.299 173.463 101.89 174.471 102.605 175.4 cv
104.009 177.221 105.743 179.014 108.139 179.37 cv
110.228 179.68 112.087 178.771 113.564 177.375 cv
114.54 176.45 115.173 175.106 116.197 174.238 cv
118.676 172.134 119.968 174.117 121.383 176.003 cv
123.373 178.657 126.632 181.381 129.61 178.198 cv
129.986 177.797 130.142 177.353 130.155 176.919 cv
130.279 176.801 130.398 176.668 130.501 176.503 cv
132.5 173.336 134.823 170.747 137.695 168.507 cv
138.155 169.398 138.615 170.289 139.074 171.179 cv
140.04 173.053 142.688 172.021 142.8 170.169 cv
143.144 164.538 143.021 158.934 142.288 153.335 cv
142.142 152.224 141.84 151.034 141.851 149.914 cv
141.35 148.089 142.082 146.603 144.048 145.455 cv
144.488 145.508 144.928 145.562 145.368 145.615 cv
147.195 145.335 148.123 145.827 149.852 144.846 cv
150.585 144.43 151.047 143.412 150.771 142.587 cv
cp
.156863 .113725 .113725 rgb
f
59.4096 158.238 mo
58.7182 159.256 54.8208 156.282 53.936 155.745 cv
53.4389 155.443 51.7944 154.66 51.6206 154.387 cv
51.2153 153.746 52.0405 151.945 52.2827 151.309 cv
52.3335 151.124 li
52.9594 151.079 53.5874 151.056 54.2172 151.079 cv
55.8413 151.138 56.1811 151.435 57.0434 152.825 cv
57.6167 153.749 60.0659 157.271 59.4096 158.238 cv
cp
61.0913 151.91 mo
60.1772 150.21 59.4213 148.36 57.5268 147.585 cv
55.4487 146.736 52.8325 147.03 50.6635 147.289 cv
49.3403 147.447 48.7094 148.621 48.77 149.659 cv
48.6342 149.827 48.5131 150.016 48.4252 150.246 cv
47.8022 151.885 47.2641 153.989 47.8256 155.714 cv
48.4126 157.518 50.4174 158.288 51.9174 159.198 cv
54.7651 160.929 58.9643 164.335 62.2426 161.539 cv
65.3823 158.862 62.5639 154.646 61.0913 151.91 cv
cp
f
112.165 145.748 mo
111.706 147.148 110.57 148.16 109.095 147.322 cv
107.843 146.612 107.608 144.986 107.862 143.698 cv
107.913 143.442 107.908 143.205 107.876 142.981 cv
108.658 141.959 109.763 141.109 111.071 141.85 cv
112.441 142.626 112.609 144.385 112.165 145.748 cv
cp
112.857 138.276 mo
109.363 136.425 105.972 138.482 104.047 141.495 cv
103.633 142.142 103.656 142.772 103.918 143.285 cv
103.524 146.347 104.55 149.605 107.54 151.005 cv
111.007 152.628 114.521 150.796 115.825 147.362 cv
117.081 144.055 116.126 140.009 112.857 138.276 cv
cp
f
16.4301 143.797 mo
16.2807 143.872 16.1811 143.949 16.1088 144.028 cv
16.021 143.572 16.0502 143.029 15.976 142.607 cv
15.8452 141.854 15.5991 141.167 15.1694 140.575 cv
15.4135 140.067 15.4751 139.459 15.2026 138.824 cv
14.978 138.304 16.0815 138.271 16.2417 138.308 cv
16.6713 138.409 17.1088 139.037 17.271 139.399 cv
17.9956 141.013 16.9077 142.367 16.4301 143.797 cv
cp
15.5502 134.265 mo
12.4252 134.492 10.7251 137.544 11.5522 140.304 cv
11.0034 141.01 10.8999 142.003 11.7749 142.773 cv
12.5209 143.429 12.1997 145.346 12.6528 146.296 cv
13.27 147.592 14.5522 148.5 16.0307 148.421 cv
19.642 148.231 21.5756 143.386 21.4624 140.31 cv
21.3471 137.183 18.9194 134.021 15.5502 134.265 cv
cp
f
122.206 111.104 mo
121.641 112.641 120.015 112.961 119.939 111.076 cv
119.879 109.575 120.567 107.962 120.681 106.441 cv
120.681 106.408 li
120.908 106.661 121.104 106.909 121.241 107.104 cv
122.025 108.223 122.706 109.745 122.206 111.104 cv
cp
122.575 102.673 mo
120.081 100.614 115.938 100.564 114.425 103.832 cv
113.636 105.534 115.281 107.075 116.64 106.857 cv
116.296 110.074 114.859 114.076 118.535 115.982 cv
121.664 117.606 125.179 115.21 126.096 112.122 cv
127.11 108.708 125.205 104.843 122.575 102.673 cv
cp
f
65.146 64.8862 mo
62.7377 65.7534 63.0913 62.3789 63.31 61.0122 cv
63.6245 59.0386 63.9389 57.0649 64.2534 55.0913 cv
65.6762 55.0859 66.437 58.5728 66.5678 59.5933 cv
66.7631 61.127 67.0014 64.2178 65.146 64.8862 cv
cp
69.5717 55.4356 mo
68.2866 52.3218 64.7729 49.4087 61.5131 51.9155 cv
61.2397 52.126 61.0463 52.374 60.9096 52.6382 cv
60.6948 52.8691 60.5307 53.1772 60.4653 53.5908 cv
60.0151 56.4165 59.5512 59.2407 59.1147 62.0684 cv
58.8335 63.8916 58.4282 65.8213 59.8051 67.3286 cv
61.8803 69.6001 67.0659 69.5689 69.0053 67.1924 cv
71.4731 64.1694 70.9536 58.7827 69.5717 55.4356 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (7_cloak.eps)
%%CreationDate: 11/11/2019 10:40 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C=Xuko$P6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7;/>YKlT???X'E\8s:2a,b]?PQ1XKpUB&;3U`u5ic+IRb:Vb3E)h>(<V:+sM3f8j4oO?YmE7Fq]RKPGpA=:h
%YF`LTrV\BmLVH#u\bjX8DrioRG$j&hJ,\^d]D_=K:]Dut>lQ:%IIlh$mEM]`0:oi0jf=)piG2ct&)YQ1EWc6-mH*Y@]o]*EDr83i
%\!)1!oUl'\Qi$T@d`UUJs7lKGDkDIXk4OoscX+<_?U)H-f>#ISlS!1kH_S9:S,HgZjS5_PEd,1pk9iJVJ"t?FX_5`thu%;G>Q!+/
%n%M04pUi!!K,frk%fMltUS/boGPGf6mI$V9B>4hdW6b;!M^+hPo`Q/2R,llU/oZ"UJ<lhu-/!pS?[_\.am20@s6pW=AUh4<n_Nda
%Df0FUCV>V8cn-\O,rt?j>JF,A;D1[[\LKUn>n5i9H(T;s<>jRA9eM`R[7$YSW`<eOIscG:QXB+YqsBScDI8lP>ebaZjg4toKYXGG
%W[9)H>`8M'#<Uo=5<Q]/r=:QR]ohd5>;dM\hn8gJp:4G;hWX+t'?\PKIJg:>nV8Kq^V,%?df8V.%iF53m-<#KpY-crr;+NBD^!CY
%g/EIph<iBM]_W^tB4"o,Y"WCCYHmdoWccouKG`VZ1%1Y$:Sb5II;oeQU#3M!INSi%LqNcUos8S/^&1;,H2$o6]M4)e^4,e#3YRD.
%<W*H#F&f,f>Q<=3>WUlhS(j:CF.E:,n=+,e/Q]^_&s#5ir9!M6"if\Or,j[!l(q(\kHDV-hl_Ifn)P6KHtOP@L9H+(8hPA^&iY:;
%kdUE#qXkZNIun%:o(B%*^AHI(It%(cd8-s\H1atB]DlmJoZaGg1>:XPIeQY<>Q43"h+p&gGCOl9jJgp%r]\W<HLgF7T=s9>nsut&
%GPYOSQ@J<%J&q;W$q)bN2pg.)b9(Yp^\ViZZ(C]O4+?_taic'8GPoFiiNJmP.)1$OrNtDo-f2T5j+HbKP4P5d$h(rRcL1^u';f,"
%jAE[@p@?K\f_4D!S%lU^rFZPkoB/>7kIu7jFo-Z+hfZsms*X_+l(?8iBrrJ)f.W`.q3.m7[kGMlIe86kFmWW0]!ac_b7@C?5C`Co
%lR1Tgl.OPArq-fZs(V4_=0J3V]3k@3GgcLOrX)^jjIor[ou0//HN*:.(ZR5kb88Sic^m>8rUR/L^U\c[oO6IgIegUBg-9er_G3)j
%!7@?`c$R/&^[0Fh<L9:&^\miuPV8Z7B.c>WqlB6,C]69fPWm0dDk>)3]gkB%opd]8njJ_YYFkdB4!lGgq4F:m'\d'jjU]\ogob_i
%eVim(d-eXGe!'6<3HP%b?`pk3?d"<bY?4$hq:jLV=l/m+k>Qj*qT1\BA@;>h/2:VN8=/`So%.+0qqKklnsIVfZ<i=BrgUrhrpfNR
%71?3MI))Am:b,Z8*WE?(=8@Ucn:Nr:Yqg^f0@SA7j%"+`PHX_a5LE3&QeD&d^p_UZm.rkgr>%K,K,COYba`7\I:,QmrK4SBJ,`Aa
%P!7!GUlTtc:\#G#(Am,AZ!HS]&]?>OGl?IigV;MAme)d1hdYD(DqPKTZ39\+n>DARfX(?OCVbAqM1;KZ3/UA34sZ$4dM@Ur]&`cR
%NuqZjlQf!5%bL^6ag&4:*65L+f*ssPjd'(dU&!j3=R)k,lb:LpC8nb`.S`XI.0hk:&[<mt`"IsN2f]o"fS^]tEm=AN3TcF:*%imi
%8N1[[dSZ#lg<1Y#8i7>D;MoMi,VpXTGU(6X*orDaN@i9t@`A^/aPl.lQZ*U5EZDt_%f)XA6C";KGp#kFZ1@Ih$dq1HnM`R*EZG$D
%NkHFa?9Ze=?f]!q-82k%d])d^DLl/6\/TXTj!_rS3c$I?,$uoG;<5eNaUt(+"rB8.grOJ=NcH-#hu.RI8)mJ.a?7l`m0NQEa,g4,
%NfLc>)i('bcWB!$]q;_)@t0,\m5XXn'-pKTIus[OjLF(8jkoBPgWP-8M]?H'0b!q%#J($kHm?['Ne8<2>m03!MVLI;7)71",!2$\
%FsG%)jQ@Wj:5#!j=AXSl6RkP"p_u5R,"i/$p6;K@MBDAb-s*r+%%g(Wa;6,'/g=l)Eg2%ao&%.YpKES(s&Sr6OoH1&%R`\FcXSrW
%;O2_%plS,,8Ih$*KD`@%lOUN?%p8fM.@XU(+eR'@o>W$is,*??d9/['cTCRY6p@nuh0qAp7H>tWjR(bp"=Ar#2ArYr=@C#iFP@rY
%7@[oV`$h8.i]`s^P(HAp.PpFY:@`g!^:Hig*:f*]<02B0V([lRQ;2%7QEdrc&\=+p$8R'!1r?Lh?cknE)>PbFE4A)<hh[59OdI=j
%F=f7j'%q=]"f$0>Ohkmi_r3$'muB[p0d#KXr3m`NO8Iu-.!Lp?'MaKT4r$pZf;HON.#7fWa;"3>!&,6h.O$q@Aj7<VS's?W*1_cc
%"JOf;5_pOV;1pF@Vob9'fH>:f,('s=,K18h?E!(\$Ne:*5u&QBNus3<j6'T,@o"74;I/-e<`=Em:5;B:$5k@=JBS/om&eHk17<%4
%EUoQFa,(T*1.Id[R1ljb!M#[,:/t!B';dUu(DAu7-`;TU+M/P_I4\(O)Af($jZ"8u%QD`u1'"'5A.YITabBj!+eO9dP/4p;8+cZj
%4h<o%M11\S6\\+<08Bc7,i+-7Q=7X'X[@en>&G<;X(^NJA28(AfWdC5looi.T#uSVK;mAJ!Dr915s,XDMe7W+`A/RQ$h;2sa=Wa7
%8muW$C35ss'F.C],@q1BL3@^0d$WIQi/(AQ;nbN;:^(7"p/DG*We_=!%&uZ?#YG6cJZL(q/9ij$/lXf,4H4)hcNWf/olT0uX5qO2
%-djBb/Q''$q<JYQb@$[R=UkPqE(D/f.j\&'EgB1Ya!$Ro8E;=c>q0Kt1s,*Z,Ed!WRCJPe@_uaAegSu,7?/.GWKRV26)<jN*a@aT
%ZZLU0M8V`fE3[4lZa[oMm)A7O+c9N**#Fm(4:M\@24'N$bDDW1MgPPaOFrrE=@?aW"NuS5WUprAO)+!=b!dOH*sXD8IBbcQaC(.G
%ifL]1kgH\S8N:`F\E5PCZFo3O:`PIYP8P_!AsQtr,se?SadN[&j<tYQVb'e2,`+?KS/NY^C;:tFRlLO[,ag+@BS<>[Tr(>VfoaM>
%E+Wi)A\,e+BNPEu3ZGtD%Dc>Z"*`Q0,dsX@i3(gb]5@[V1AsH.7V[$p`(cDYp(Ta9)tf]b>KI4#&gXB2c4F\f@/3D5QN4DC(YfB0
%/2b=N0AsaNInp=-+'u[/o&BA4h7(sg?A0>;Z!D7>\hh\b&MNiD'!9\pjrZu%40]BlkV$$E#LU\u';>b7'4Es4>9So,mR9N>@P9\Q
%hBZP]8k"F08=RFoksEqgA^+%o)Q>t@D$R(6;3k%BOijq*-17`B:OW&(akE(g?$uOd4"n0na\AYt\sfCkU5D#B'dlr'e=<k!<u%:+
%3`U@'mSr/1U%VO+f73L?Li&oEYUdWa38&<#%kQSdi@Z2r!<17U/fsPS,AdskdJJrOmnrL;jGs!5Y(#"HGC92=m3.8?nNl>$r:kZ[
%qp(RV)^dZmd-Kn!jWo.`&\g5[<Ml3r0+/J9Ml.@hW*Kn=XPLr!(M'Mge1dUo7*(FdAHKQ.6DKU=SsadVm4&RV4Unq8oo3^V7%I8U
%F_Ies@bja97g#l/T@GLI&!KZr1,[+,0fBnYF9P'&mEH>,Y3ph.@bhk/ArNiqC,X31d3do?g'feXLN+;H?.Oun4_VDY_kh=9L@b&P
%eg%ihLhB5hF&4q2"1mqL%mK9)a;sSn*pr?Mh!lCt]^PCK4$NF0meDWgraXaR>oI;&-WS))hCUDj2d%YXl4^E,7@th[U8psR=fl,?
%LmRAEgeP4\.]jIGNfMCoUn]p6'6+>L3J6,s]O.FUSMFuGCG(PNF7W.>=sXTZU(@F2X:@&1RcW%i]V/P/];Pn?!Y;>t)6TTFPd59/
%gTZaMT"1n3c8Ej9j/=!+d5kLFF/FL@*+t_\0YrNYV>H<F;op'KC9P)gpZo21CV:6>52Ym;lAklopoC_gK)gHmUrSb"buC<@M_b@'
%s+VnZrD25b9tN:&$P$W#WJ:#=iF"HAlF=a9S%O#Y=Z%5dVJ\DNB*Q>@7Ftt2*%$(MW:++[@0.hgG!l-U(tMo)XM>tZb]Q9l9C=3S
%%U-$^F)(oaW8._f6*#.3XjFR$dRXdC24%K7WhYHfV#$ii8?kM3.pZZW3Sqf`.kpS5-I7V,QH02VY19kI4f?s8gA3Jcf'W)SQ8!cJ
%(QQu+@u[Qp4?TAr%mAo>%_:VPc6E>eTL8/Bi,eoSh6Ca[S"#o-c!D1'Eg(CXNB>sdN\^6$-:<qFk`.UBUPK0ud<pmC:FPj[fFnD4
%"@+!D:I(P3^3(dd$-3d1-f@aMSI0Khd!90'9L2F-3"=g$J=?a[MFGq/c%eQR'=^VIEs=Q4hL,6W;b&"V%WX&CWBd@JSI0NigpsmB
%CaJ9OfMc:b;5:CjUB#g*Motb'm*T:KHbuK.W\uCt>:`OmLGE$PKDp*8@d>bEWbQa8h#]djUJJ!%ZZK3r9r^5aRWa`6N@8_R=RURS
%km3d=r5Yppgi:8g[thT+k;^0J36LN+I.2-#a<>bTd!>B$=VhRYj+G\VcZ@-rS'N#7ZUXbl;*Jc[:Na_()We:pq5dFWCQqV=8(/k2
%'m]Yrom]1)Qcr;T1.<_QpG0QB;P')q%2DZ-jt^/rJh5U`J%1T?n7h<GpcM0Q>X5m9,._VRiiK\_RGF-lT3X_LfT`CTl$*)p,54Vl
%n,.2@Hn1\%c@=HLfq]^KL6'Y.E;/E,\4q"KX>0SQ`:R&B1lV(/2>/i3<Ac'nNntt;3AW=s4LetF9g4(+r8dClrS]a(<0.@`Q9UuJ
%ALXl]LoROM'V\DD,Xp:oV78CZjR+*B$K\1qT-gWRO)u`*93,*m!@nu7?0^ERK^:?:n)`mH,2rWIW8!:-:Nt.aNZ\/3T=4JX_$"cJ
%ncY*KZO*p/\>b.0NsoPf&`u]Q(L_=(0NO>?h88/\)E<>\7EgVk"6'Sn7DcVCl4VNVhP1.`Q/Sc(Ga/Qq,%Pi?Vm9EtWf-r.&Rd+,
%@@lCo-?+n4'1:Jj)/2"JdVCCpeM7=2J_=LXX.$A@!XQt;(JRq%,>2$X<#%C+);2!XT=W9AD3gOB1K.()I8A']ebmpgTc,IL'fi:8
%Q>/3L=E.OC3SADI3NJ2_SJF60mQ(M5i],@W1tGp_m8<<l:%"sjY4Jp7KeFLf$]"]%*A@BHgiqOdRB;6("m9b%_1uXfSfMjl4)H'`
%I(nY<?F^A_C"OEAVJ>r3aZ(2$f+:km6B3Di*LXLPR.aDUdhlO,ouKF+kd^8(HDRrhA>&1!,Q_T,8:0Wte'L^ULL#5+%eHi!bdQr=
%3b]iFC0n<F#^VdS7-794=2?aV=E9Ga8Oj5\>M/l-!_kgOmRKM^@3uG1pFnN-fZjOlJHZB!!k.0Q@DF"nD^=o$%TZpf:AOWDk2`o8
%.1cI*K1)FCHTlo)amWC.?2LT*9I!&7O#i:Y;K#$grr4\PbY$u/HOS.ZCJZt^W#Uj?*Q*RUhKu&B**M]s++0:\7m0)tNd'46EjU$4
%ElSETofgEGloXomRH7Ab9@mBmM)kTk%D:b)1:EJfC6j@qnNU0*s-hcigj[W\F*@RNEr/pW.86RnVmW2`,.-Dgc[TL%?NQNo=@r,`
%%9*seD@7tcK1[.^aobPq_F\sE,gk?sPdCUW/qHR4NcXDt!fc9$G9N^r/@l?33WjopK4*'DJ=:g?N*P*YElYL%=!)gS9*a:h%m0@D
%6gf3FDa*ggO*nu(+T!;)E4sAnCMjomK+HHi<NPctI</T1F?ZuC$$AdBKnL?iX['HU]p"g9U")ZHp;e_E=O+KY*PFtfdGm`@WfCtO
%<k@/;*VIRM?@12pP60YLJQEBddJ@"(<38iZFcF(&ot3Pt13H+1VpfpZlJkB86`a\kad24E'iaWR+0M#\e)KZ06m:*&>%eoc9Fi\a
%p'.NYeUOFup#rPX2]C70PdP77c/PM?-JD;&)=)C/l,[L-3]ld-a;r0P_r#gNG9#,b%m?lEhg%>5oW[rR35,3N4$MT(pGr3thf5E*
%=;iaE#3E_Rb]g0E8M`47`&_k"Ffa07aX;E$#APJC%#m:S(kG@Yn_c.P+uL(#ALrP6ncoMAU:r[oRT>u5CK=:jg964<PaV3/aek/e
%#@bC2dZ.m<f`K[G5>f`IWTt$7?F:[toc:V&6"OOiL.m'DL5@dUHA(7FXMb-!#$J_a$L#O!&8)Lg9C=L3d&eEF/\Ui0(AM]Enht&N
%Zjk?>QnB+>>qVPV>?^-ji9K]lO6%NT0D*]B_tQ,cmlKNiml]d8a79(h45O]K\E!0$hrf6V:`<gSZ52&G'r,5B"E+I?9?k0NLA+P]
%Iq%>>=aD7Fn=b&nJmL1&a1J//D]FB"pQW$W4"3$gK`,Afi*e+[)C6*)a_oDH.H[?3&6OaC*@2HTZANLM75*fW(0IrC]OFYE;&$4h
%EA"T-;oU[e.U4X-R"%VAo>E.@%.p_l/Fp9[UU(+!N``_G`%ob."'0+qAcHr>Q-0:cE,[m]baNd>8OI%>2f8".EIh^;2[nP<89?$Z
%bVcM;:qh0!H%Eq^4fF.S$B@_<"<4e,71/M?M3W6pi=UJ4+pOqYUB06H[6-LdHPT!,+C6UHcUdUK;#[huOQ%WYYM@TrK<jP^/pDg1
%pZ8..WJF%3G\2o,*VI]TmMm2+>jcjY7)*N5^Y:_,j*R/-MD-T-=SUoeVV'9md(L<-h'<q/R2i8)7^J&t1A;`"d+k[)2Oe6nLb@I:
%`7,3Z.;pQcoe=(:O^B@iZdcYQ-IlfI;!1MFCA84)s+97p2=I*ej.+UdCSX"^7iT9*L?kpM@NiPC6[!_^g9%_;2\W#],ZHqJA;j"?
%"L)$&</$Vq4I7WNVo1=1M)5EF[qK#1eS&D%%"I(M4cE:VjL[-lLf%*"L[:K)^&2A*O;D\<M^2Dgo.%W*=Oi<,2T.1[gP=\)kTZ>X
%Z$*\Yh.'*YQ^]T98,%CoQD6G-QPS`p]YVXlY4ol<rLN`VLj8VABV.ONIDut)I2bj(Rn,IRcoeJ[8VEj7W&dYO4=4$_#gXjI`i!OW
%-R2Q,SQ]`P0OaN[<kmbOA*H2#lD81aqs9Ge0BA;bZ2,4l!Epj:4%t;>f>Ni:'!71YQsS@.N*J"KAQfV>9=&-6%BLCFm>05q&A!jo
%p4khNrE7=hbB0+/@i3eYj3ih3$f&WZ#.1J_Ph^8hHOO,[>@cLKX[*s_q=N_:QK,f_')1%>+*$Kb8(pfp5?h.eQLUo:88h8&4YZ#\
%25-?#[!Rg;;OaQ?YQslt<()rQ(uirEQqB\6:F`u?4S7>Y(U[P!pH`o%fe%bcM)'WNZQ@>6aeVLMB"o<WO/VRRAKoP.6g#VE)5SlP
%N!@@\XJq[u9$jkpD$+/W!=GY^4DoraMci-((8/:ck'<%'q;+?.n+^huNdi8a#?87MI#Z,Ig_6[NPZRpR&I1quabWP5@ppds4Uu4X
%:0,eRG0$H`Eu-VU@&S[]Ul]!BRV[,d:e,i-Q'G*#,5)]'^rekXF!A4u2VN`-3d4sdY49d,E5j`4e-!B<fBR8ZYmL6g`4).;kO.od
%q8#627Nl\646dqRO[Jcfb"6fL(7t3q7dEj/Fh[l_<f;,!#SXJZAM8H(_<ZLS=W$TK+2J.:BNeFYIt'1PI[<C[T#:KY:O)(D-Vol)
%=BB%@,8As5>Z\$Z%FOm.0Fd/ZE4>j\pm3c8plS:/1kN^c6LJmD7o@1Kh*UCoEmHc1\T\st^9M2n4e*O.YsSInh8D.14H@i#R?Xa/
%Y858s>HR\i@63QKQh0.P-4I3eoUH/C[bg?+n5BilXZq$CjE)d%Q-"`%kqJ0'mWd>V^M(74nP3g.o".'_GX)Qrc&HofDok,QHea7-
%I)LRtY!F6)H=_$R$[[2(=6Op(E1>@f-K&3<UWRWOM$^Al;<95YGApCs-f2u^;^Rft_odg+6ef#6r\JIPnJ$l9'$tNYJTLZj)5VBU
%g3olk%9*,X3<AMr,efh5d":pUM.kq(N-7qk<KCihr&saa[^3nZ:&RL/Ce[?f'?TA>0ZDkuf/jghm@4`8dh@=Q0IaMEXPB-\SBb#b
%\*:_-68/mB$@Z2_nD2%@HP;#",R*(p$>^Eg%lu<g"b5UL4-'-CEOcUD_n?KhSd,GfL&u""_n,ra27RiRJ9OfAD%>_KVIPWgc9JWe
%0XHpZ):$O<BsrCV>6TB!H?@H"1n9'+is#^TO0`fA)DjE<2F`R;NT14"\9,BC!q>U>d2%%QgX!P;gq>%>q=%n`@U4LL53sssp(JLW
%j&r<W/!pesau]0'07m%!f.":jT)0#C3pNCsM"$9,hb9Jf>J+BjSJp<'RnVM4K\e"-IQ)E>?1R"SL3F7af?2rZ8P)kOjX0Y@9"XG6
%@tN>B_8pueWZOQ.r@*il4'S\3i#NMaDIQ+He7KH#(2=BK[cjr&iKZ&Ni?fl)N[#>j^-;H9<oG>oLLX%ZbdiFfA'5*.\3]<ebdH&Y
%S_%t3d.JK=JpVtZ"IJ8W#d`&T-o'?1gnl$3P*DCc:ZPbNF_Zl,/(-"`F>sb62_hOr`qkWWXdbM`&Kh/pPo@?o0lKV!ZteW5Ema4_
%2YXm3dY>B+`dQ2%4l:J0#rkkDKoU[W^*Ed\ajQU62PV<as#t%mVGCpk<.<"Hm\cK14DESP'=86^pJ6#$J,U0q:[$\VJQBIk`-JqI
%ifRRkJ&k:Tauqp43!eg-s)M"0GA"_3gdUD!O0s450./,>(k7?=kE=%o$Rh!k["RQp<_S"mD*E,4L<E.1JMcM/RZWoR<mGd>VXWl_
%U-QaJlI5!XlPaXue$>I,WtBWLU"IUW1C&[9fT!V5fJ8tbJ)/W?RDh=uptC\%@Re0^<7Xb(4*ep#iWM(!7aF2WQ>q<+6jkj+!A<Vc
%`!\ENiQ+`Z.Ml5@b:=?0/??j2^n(]m3e/fG4;W9Ki'fCiJ<A!]AiM&REjUWD3f$PJAk$^\EHiETr#[?UjmGpJge4H"e6JA!La'h1
%=DfH[]I=8Wb<e*U+k,:JoBoVl%&=\iAF/,6b!+BS%lZ&HFYBf'<25dgoF_K^.*;1jMGF*@^:+iDT#Gl_3fRFJ%Q^XA*/"i'A6X8h
%>!kZ)"l*K$JIC,QnH,l!79*qnAOTRSV`]FXnW\U$`3Hd:CY&YU\J_6iku.'CaJ=Xa;tD>s@a1Y"k"qRZ:u%C#J^%4b%a5e1H1-mP
%EocnT46FdbmQKi>Nl_<e4)S?Pqf?3?D`O[e7_.R<Jlf<D96)Y?e]ZXO&eEjXfkVJ!*G:)/0\BDZ,`Q;c@>B8N)H]WcVO#UhJ&em[
%L2Bi+@:d9ZEg(5d_KP25f5CKBP8WSD"1oD$J/.S=>n*8Cki@Cm"q<MZ6tpsoY]B2p@F_]b0).Uf/OeK\7=6jtb]:2[9sFB7lE[dC
%-!!C)*M3kQgcUT(pB2O)-r$81NQ9DY,<&"`*p<&'fo#mm_X)Jo`*Kt;P7t'o/?5l,#4>Qqj@CJP+Eo<jY?SJde2t/jCdY]%Im3c_
%qAuB[6=h'R(9Nr#*?5JVgqbO#0f!OYi.-7&jWA:*jbq,bL93C]?UgdF.?r"X(CqIGC%[fNoZ<R/64.:ln/@`N:Mo-ieZG`]ES\%B
%I0p%;9US0HR::/nl?5MU^*Q5+2E:;+2(r"rE]#FNNuqX9"nXspc8VT`[./prY$da4l!QZG"U<9HVd&2I2k,6\/o?uN&EgWu6f7m9
%=3gPWETR^LqM$ooAi5"[)69F.(#B$!>LMVsXp&J3?`2TFd]o'u@6'a7bYjTNO8bR^=BiO$9O<-O<U*[7r4H!6Or;iAWSG_6UZ:"1
%c:pU#3K1<LP3,T(8C:u=CaJ="mmK)P5HFUdmQ>]`2^:S9oK?EL']W1qGFY-],1u<A2f6H#E-4lJ?"If;Wi\[k?I;Ba^MX[YgM_2U
%>,?"tYq?\ZL>I2*)Jc;G[e2uudWu;8-4?]Zc($sm_*,j(`ZF-/==i%N!Alg&dU],J,;Ygb_^Hg^\i45Z\hQqV-<P00EZL'\&'DnA
%q^asJ!e7Pm3ZG3e3#pY$8e:?@5g8XV)!JLV6Q^k>.+j`<pXf!hJ;8%7dOuZ8_C9$Z\8u6]Z_+\Bnl+l0mUl=hNKpF\j^>pHrS*?^
%=+6mUGKYMM-+/0]!;-Y"c#usnZ#9Ng)S#(>G%^J@@gdiO?bC7G<\4X9^eN\@fR-9$VSG$blW_Wc`o#cL^,s5sDA'"o;CCRjibDH7
%b&X4GLh'nE>b/B&7'6oWCV\1#3FJW7mOE?la]p,HZFA--E=.1Lpp$gge-aOf;;IYAZI@4V<QK+e(u>XGb*,'+Y*\aOQV>O$kZok)
%aqre^q'1*sS9ZhW4+;ce0BYJO7>$*^Y*WDH,@Li?0Xl-sm/pdO7XuXdKoK/!_.;P8A`4$tB55:2Op70Tds5kqLA-c78-=('rFGI!
%Bb6^-U_:L#Y4n3;:F6`5K(Bi)UH"=p4Hf;<cD(\*BH>KGIa;LbNTt,Acf7&U<j\fp7X#p2H'd92K]b(]8(kmb/<j^F^E!Nf6m(g>
%]K#Y>A]Y6%CI]K>H/.#6T>uC%rHT47H2NrbVTZb+"nr1cB1\J%_%DhE=V-u\Cuf#jLfGe1UnFt-:["Im&9*!LZ:+-Zg(kKg@2TmW
%5Mu4`^12%`Wqtfg!eb)$*Zi-7'_5T"mGIBDO*9eA<u0nBa0!r8G6diUlak?ZFi?m-pEKrZ!DjAd1]6R!ZW?9.>[*NWadi7TSbida
%j45W:PFItWB=]udqYb[%dhHiq@rJ81_<W5_$<4*]g>Pe/2lauCkKTO1>F<XRfi5%Brc`4-WGf5Zh$ld0H+o[gDjSKC;oLMHY;pn%
%I((=JPeNcYPMV'D+S!S?.U,Eb+SS`6eX=Cc^>&L-lhdf&\A%"BE&#cD0<G%d;#3r6fP9$8FlNP\aS+HP\(eXSl&9JTcL:Q'Ok&JP
%ld>*Hc>U:B=4aM?mV4diQcLkb.':Km7<(hg#)!:[iX['0'^[>qj^MWn@r=XCBPPrb3*10fIeg7[XB\_9jZPG'&)YVcA_1JIKT;X!
%&t!%@\nQ@]:KGhV$TZINe!>k)6qn]CW%1U3PbiafNqSc0RMZBI/?MFk<j:RhHZj=Olm=R*CrFd*9rpF!:S?`2OQ1eA*)@T2R"0sW
%^2r-uHeo3YhT'q:EEj*0^),QumCD$TmLhe<=-3#:!7+`W;r7h!d`%^:*!2A\Q(J*E\$())WZj&\PhamM>\:G+8sf,'k7%*k*;@L7
%VIHA>P^L9Lb@a(Ng<dIWnFe>/gPkkEg7GA)kIUGPQH``h[^T-mb?<_Dpj+0''@aC?,VSKks+)qF3>HAY)Oh#j/.jCCX]79G+RAnj
%lZ>W@VGP=PMMH&n6^NUQbJ_$ec+P59+qqCtm_+14jZN=C!n7F5DE&:\&,L2-j-#)fh.H6]<o;Tfg@hqgZo@Wl7tC0E+*Rt$m+,k&
%=NY2*h/^QrRDuiU]">KDkp=FA#i[dI"1R@d1H#/?^m1H+?["C;/=aXrVC1e@MB,A0ZU%@AZS[e2H3Pi<pDppj`I/XY,r27/Ajt&A
%*6dPI!Qm2F$j)[P1I1aRTR6u0q,o%.bJ\%]pad(sPDOcpJF[((4hnX&<H4LEnbtQ0CZ>*PTC>-M5D(VXL_p@Wj+gsn9-2Da_V$B*
%')mV_38tE_'PpGE)skiAIo+mTMo=Fn]aq^0dcB9JdL1>H+*.144S`l,hM5@mT,a&#OaD+Ser?\E8Vmb%M\dD_0)X[GM:<o_gNu]*
%s7rR*Df5Sm[t"D<l(9]Z2LkacJUPPR5%@um0sJt@fOkWZ1C!Oj"8e%.IJ.MBiuOb'ij2=+QANp)fVcU%Uugq"^3]UolXqm.4F?nk
%c[S-jlLSp85Pjbkr*@\,IIZCCS(lOJ`J`XRnElEhHM%UTI/i6Pq/fWTn(C8[?cB[r>tjXcM7i1AG#p\U-P^QIXoJ:Y?h"(;oIj7:
%\GP;np$_pQr:th8lX-G,G/)`/j8W;+h`U%$^ZUn*rE9*E],,.po>'1c2pLC-I_E;64jD`N]Yo=!rqc;Wj0PY%T"TIGjRll(^X2@>
%rdOn4eaqTmYCC+(o_%I<B5_+ird+V*l(=dk^])-WkI4gurq>TGTC)Uf=8Y#TB70W,q*FIie1^i-hiU#Y#JjN.Q6#ZcpJHl5/#"RC
%*VF2gdiY4G4gs/`6bNh"aZC<U<Q_^Q084EM8m#d3i8aE(-J[.';H`2;Q,oXU\18AaT&R\mh`]L?([7ktfc5X#Z:n3-o9,n<Xq^bO
%(L"L=A^erDHrX?@])sZSZWlMAEdO2Z29C^:8uAn\Q?X^JiM@i-eW?9-KIcRY]O!)ai6!Emq\HA'8,/WgLo\&,Y?SMo@bL0ueC2iG
%_";C@.Yr;S6UM;kf>-oT4o^PDe_7/-M".,2X&=(X<t".uj3=Xg^Ko+T*>+Wl.ranB.aBTM?g"VUkbMLD=4s>ZUNBWI)%H)nV%;<\
%(0uOs?ZYX@=Rg0^<`)4D9g3lc?d%i-Ma\QF[H#+?nF?e^3dFJaDjL.A3)/7#?:SNe,4.;?h,i=T?FhItZPPhlcBJ!+C?,Y3]Q'#C
%&-:36';N85&OOUBI%QpW'k>3-+CKH6,4?q\LitVEd33C!nhAk(TrqJ.=@W(#&MJa^=@<HgMjN%:f%U5=S/*qCr'?p*DYBHedLoEf
%/WR[_ghL\_IU!ep7"[F8ek9SM('l?nA.6g_(;#"=55%X?Ln%-P1`(GX>q#)4oWI3^qnTtE&o_91]\@SW.X`>i,=RnD5!Yq]>pg_-
%]jBeFMtLc#]YPh^X>=[,0$?4R;!l3DObr)D>H]F'2Br$V/:TbOX00BRbE-m#mZdBi$6n7/Z7Q_jmZni1,'-)bBL,"%UHqrOroI"3
%18Cs;^P+(7cJr@4au;EkF4<;.[jI50]1U)N3R4h6TO28*A-f<M;lfhs9X'1oB#!)#dPoV919I#^$,k_4G00Yt.d=GpE!*1X+Q_mT
%M#[P*LSUjKP_t`(3_DTTMb;A\Q<)otdd40Ur4jH78\),QJPQP'.@.shd?)WL31$ZgQAH"S/sQGP"6=2/*TWa_3]l/S(dOmf.$:JR
%WcY,NRZlT(+r9s,5Rf"k@`tDtjB'`1]p5ZErCVkBi)4jf_?"\W%`IoLM("3$,^qe]DNL/qlGne0P0T<.('Q0GO(_`Illp`oe#S;S
%Lq,rklLBc.U!fI+e)o<DpLo\#UT3$RK!pJ1cuYYBkNJbVg%=j0?pL4tHpq[J[Q%*ZW?fXDF:I_B1aY&nr1O7BRA^EFI1]urD'1cF
%9,3_o?NuNL4]/p\bY:)06bGt)bJR6$Sh75T2(gU0bHL81fLhk&&6;In%uQ!C\[^mjaec9_@$moZ9#"?.OOk0Y]E5CD_eXq03-M2.
%1%$?6""[PfWNm01/$ipr/>TqcaH.P`j(,`d-3@\_.0Cu2n&2..m/]tH'b%Z1@6.j+ECtuT-\uC#08JZs_350XdTuJW!=tH]jI8:H
%9,(RjqmobMpP:saccDhWE6!JdU>e$c9/4$G#gdmBF@L2TgL[U)^nhVr/j1>j/_76j,@_aY;1I:Q'e,J2(3rBKI"W?V133fB+lUR[
%%kUWBU'0jU).GJ*!#P(mpE26-QAS*9/ZP)47>/4t*%Y#&J:]fG.'SV3mIL(7__CpLR4tHe>+1'gDiu9\[.i2s_^X$L040l)bBco/
%#,C6JgBV8GM`W(+Oeb:/X[SK,kW#!s@TPYRR'W-t8+=qLrR)fKElnG.`f!/clHm/IT:dl$m%Z$`O-YZ2RhlO_!kq=a6Cu`'"flDt
%8C570`]-h%5%?L-36T4FZp4e,m5fMp@uF][/kdId$2a:eGnE8XLX)->A_p+>,:MLS%nh;M+,d2`94*mlpT;"ndL'tsQ5jRR>NqG(
%d$dM3]Y3oCf/52FdLql.\Fun1-S;==(RT6#Qu*BK=Z^2;&O0,R+Cc6B1\"`VG)Dd3JQ[^qA7u$i",r7rD<$nUA$jkLG.:V*JZKm[
%C)E:<c@'fG:.pQ0&p^0A)8=S;#4`aD=]N$GQKGjT`9,$)c=%+afX:9qU=E\%"C4,EMtlChDQ%(_)/.S-%*R%2D1NQ7UF2?rYE]'2
%)d1JHgUSZ:/W6Q5M<Q@fC;sobfM=%uFJFf.F:Ca66K-,^0/>./H.m\G'XW+m_tCoX$-rp*0@DCE8YO\j`+t]PaH4U#@8!a0:PEC6
%>oC#Neq8Su0#OZ3?We;^_oLPd6lt_mLB.F;"Wqs<q1XQ*IA?HR(A&ptlUs)S<0h@=U+;#Q_b5e,;iW)WR3j\k`kEjDdJ4Vt)5nnY
%.Uiu)?"QGSX/VIR,%$?>1`4c)`j1jJ>@hj8[":08kS+dmPSVXpQ#f>eP1k%9S0D*rUP]D#2-MK\;TPoQ0)R#@KXB*4*tPKb\t[fq
%ZBBJ]6`fEDG%qM9ebcj!\dfGb:CLQ-Q"?7r/gX1EnYB+qPFPi(-V:0aqHV=h\^B5q:2=[F.Bd&Ul)bCE4c0:&7D?,t<%;*GYb`Ws
%^:QK_-@XA)iagV/Qqb)U.'Os[NPCgUo0N#O>m=Mk(-[HkAe%UX^=ft/.0)Y4F8FS?]7)38%91Ahd1j@VMDg;JM!9SI!])iWFf6Je
%X'8YQaD=o3:o'Ra'MEJ2V5nf"R\Ap6/PF60+tPd#\u]#b6LQ&5+_kLN1n3'Qr(`h2MHm**OA",ii37GpGh1/_3R;r*7c0Pj(]6?E
%0_OTK)hu*MQ;?m7.%_C,e&ZLPiFW-eUO<7!pTE,o$ig#dr8OV=a3LgXkkML?hgbIaos:"BmXDb)?U&u8_i*EeHLh7eT*#mfU(n7!
%7KZ4C:Y*L\!!@mV]0R]AKI(X;1W'@U/&ifuVi48h<L;i+loag6`,S`'85O+VndAu*#-uSq^jpab;)rg%-B4$H(EO(:?c>&2HUB-7
%R.uZP<:%Rhk9.[&GhSFJBOLK`]NFZnRVGs@6>h^iCqoSjGNjVQLJN6*%B.413`kEKFio:_$Yf04[VOF)Mr@2DKIT-\NYVJO(Ob[H
%R1KiD!\>&XEcpg6C+=X:)cht%c/0=9=mi<M6kPb>6ZInd9sS`;M1AergdNi'p-Es4[3dX;$qL4AK4guG*+2k\"\pP3YQoAhU0Z_C
%@=.35XD?0'@UdAhJb'()dB*khQHJh,I(=6g9H`T&bZBpE1E/:+CPZ!?70e92_)d?qE@K9tp=*mY'Gc4TUBMcn+9!FQiC/S8dD45.
%2hMI=5QZ0ZSdP7DQqto+Q)Cfeja.q29Kn#6<*RkrePGQAFn4k[26o(AgQK9$)7)s?/rMNc8eIW,,Uc)D3G.u2cJJ)Z@P+Rn&d&r2
%J@-39$M2A#JQ3PQVc-Eq?s@=5%?pUmX,[A#j?85.(m9/)?C\8)_Z_q"/P?TZ[,n!)K1_>0YL;`UXW'Mr(i+4pP!3t"l')qq(E(oV
%Je>[.fGq+tTZ*Z.cltqUA.+J71o)lf*L\!rFWQ/:pGg:sT>7+T(@e53m2$uI;&3KLqX[QX)8)CcocNk7FA/Q'f3eu#QUb2-LpaXf
%Fq,'Q0qOT_AQ<%Pd%j04*m?gqSRXCjNDOIFeh$q141*'SQ)>BW[UMK#fN4VoGqHU1k%h48C$ATIarW?;(3qka*_IPs<<k<2Lu0f/
%dea@.iSaip)</WlQ1\$]%jMB4M&%!BG%lQ^_)"K_auIf.$F"6kJgh:[lZWSYRaP_c_)/>,a6"eQ1.K[m17:*XW=E="GYW]H:f[SM
%&^:N\_+nCIMi-]/@D+;UK\2u7(!d27go)LN5h&mOG9T%\Bel(3hLa9+$^pb9:kY<LF?J=m=nQf;2D#YspB,G*Z`#RMTkDW+Bqc#H
%<m*%IJODb=D(o`2UP_"pVe+q'(;!A3)Ygs_[qfcbpYn[."?@.Q4k#9$`@So6plWO<E&+;47<]Pr#&kXn`:V^ATEh9h/k]bK$H\AX
%0eC:+iOJLsK+(S-R45#+3";V?<@7$@*sH56jVKN4/(#5Hik_8ZP]*WU*>""c"MuXp7Qsj6.uLX,=+qD.DDG_\br,nk@8aeGd<%pD
%%WTX&1';?HpF&fK>?jX'e.[C>]WG;`rLknJ6ksdC3T,D@,!Mu]Q/,h2j&1Ed(oA2UJ5?+j*s(C=^1`2ig\iaEQcs^f'rg&mK.:^A
%UC*NqWlEBl,i5]aH:1DA]U^lL@SG-ifOk4:"d(!TPSLk^0=@_l-RYh[H6t$h31?FHOc45lIuB[0FX70\j-:Tl(CWc($5=e)^pY*F
%*$.t]$6S;79?m0Rad_GoF^FRNBEA)54AJkXr7rlR-SnqcG.Z,U=Eq?Fo%Baei(#/t11H7Y[Wm0J>/X"?W?t58ISU(OYa.u>87r4j
%1?'K<N*^F7\;2A(o3:9VJQ#^3Zh,%PEoB=p@(mPZO^QcSes2L4H;g+OK8@o/U/MB&5#JE<S5M9qY`?U+8=6i-=t4Ao'3F`#J2L@[
%dOe,L-Wnb6p*d:&d!fh'ZnfR3YaM\s_9j57+4Tc1Hc_5.f8TE"`%Hip-eBGt[mM90k+uj@]D_sh-%\f2qc%ep^#eMB&kjrq7S!oX
%ad?I)gb<h+"/$iXD7j2oS<+Md7T\O8@VLpT;;;k$<Z$"RbU,dYb$sq!W$\8Inj-7:M2kD2f/Wo3[b(-,^WX]KQg[0>&gdtP=>&Bc
%:'4nW=B&qeV/RH+_ufUea.!(GdV?\r%7<M,AU+fR9(Es!`a/GGQ;n(+&C':aeMu"l@ACX@fgL?'>qYSW&r'GH3C+BG9>t-IG7+O^
%'sYiaa<B)F;<ZJ@[9'RCmh5G)92ri];(.*'<'$B"j1RlE2RY<(!0!\IK?'g=7m[IR'A$/F__\NI%tg8Nl]Wo"M5'P]b^EgO3hV!P
%keqLL+;u#[oL+@P!>LtVJ5&dO_*n)m&%E#[rT"5Q5`;J_2,+9T+Z8P]6XO.fMMm5Y7#c1D&PLA)H7>jXoQ:Gr?XXYK@-8N"LTQXM
%^1%iX(,09Q,J]QK6@m)\GR^l3q%bt@bOcRH%u#pQ/0Y-?ZPF!ZoSi+/I:VW!*4mD8bRjut!-=R[j^`i=!aq`)P?85_j>&9JUD-GH
%Ytb:;e4p+i;5*3m`StjQfL^2:Uno9*_$G=n94>%6E+4r@OaTMiLFBpkX:+S1>R03f(*bj?+9^S\L8E#j>#h4R3Z-9(R:%U>iu8t?
%VaWmBQ\ZuQq]if`6Vn]>)&*Hi$&W7d?ctEO6Q2+78e.g'@dqNCLiLUJ)H82<E>Ya0,urf,A1at(qi]pt+kfT86L7E$\es'(3>$1`
%]H[l7YAXcCL@H=1AW_jDFJZuf+B[n-;XKRLXW@lf6-)HB0jM]-5Ne6;6i`e\c:RZ8$;s#&+G^2r(tbSF)K\XQr.Kk3bdp11rJ$k@
%LpC!6'OAh<(b+N3ZUU_<E3cT)Yko(*3&DuS$+tG@O>237kk-q9n1MAk,J`Tuqa3pDHSeP/ZOg(775qEhW!h)XipDRN-,`k>P=LP0
%"nC*rHE#/NguD"/6dUC#!Oa?@W^oR`9+f1:.G+b%q@'mO,%:uCni\I.ld:;#`Yu(p'S@+1m.Y.s"k..ta.7/Io\K@%)!M.j[Y9k'
%,(c#HPdE!QO'!W1a)/h47kpcA_EuO/0u]@i68f<V1l/A.LVDuL9n_(%DWG2s5b2]Y%I>1!4getB7$<DS9bRo)+o3=^1`'T1:QE/)
%KEWi8O>%@CRqPPgnekjuKh?c1YWsEaWlgDX"">p19>kA)(1K=NBje*8lGO=RNCf(r@c^)g7LV"U8J*/B7U-L1_d=Yfck(\ZTgi+m
%BYMO.-;(QrHDXatm"6,![Q95l)Y?1tF&EBEFpHlhQiZb7+q-6Z`PF9-$H\C:c"Wkg(7ulN[(sA.pX#^?@4!cT$pl"CR7dXWnF@T)
%2=3G4Ysk!)R8A4$jp]Z22g'rJBT/]dN(s*jnJW7r6*H1.Q%!>8%MgSmLuF-)Y+sk[c-0--fFF=XK<3[0n:'^f**kY8!%!5L#p>RX
%*C=.i\OK+!o#*4qCO-Bd`8WB/,U8Hg!P)&8j3in**^RFCo+r9=CXs<,%VYm]J-rY;nA_j^dXO]/9\%Z_m#/%2`La$4b]M*\W;oR:
%TF9PLjthD==HJ;n:t3o6+?l&`K#=]HNO+p%]848g=5Aa<(oNH!+>rdH!o/ao,5WY.J0sn=h+POVlXH%HR7qE/AH`ZROG6%`),3F!
%(-cQ"@c@qWX;6@q)C8k:Q?NSg(q6MV38Me%JhI099h(*2a?lX:m[e(4.c;m97jd==BL24k!uZqN@e3'\k]emW$r,Jdb$\i(8aOMS
%+6rAK*ho,E?V\h_TW*smC;KeF"ce5Ba:o`b$W!a8,"g:S$'T\+L^T%3)1&J6Zb<-4Q\BjX9^W`gK3!Qi3qF_06H3o6_M1>-+a4:=
%BLKd<;bj"U(/LFP'U!-i'p)&oOEtbu0#lVAYuhDl9b'EE)?NKFKKSXpNgR(2&JtuT$+PLZIpr7-7';T>&B!G^5ct[ja(C?F-JF2-
%#VB^hc,4nHVg?V2&=$D1l:!3\14j7DIa+0pnMhVlIl20k/LXig:f>\;0C0Z&9JEH4<&D*4/nKg$MLmg$A_pgZAMt,[6#;V`ao\3:
%WKS/[\-oK=F.Y3GbtI?+!a0^#q:\*l#7cN)"'S(SE+KMSf$p52`.=qcT]eV&00%=C5o>Bp%E1hJ!6m2'1Q2?^W.t<Q7aT!QON"lL
%Cb+8hmaTTsY5f+`kHp1-^,,"oB7a9jW8Q\PKHfo0Kg$,cRI$kBFM9%/#!_L$Uh6ED6HG6l"aERd:b:7<i6d,n)B(@N7N3kNY]sj!
%HAU;YjGfRMa@p^s7\WtKn.CYgB;4F^g7U;\Npu_3*InonVDApc9>hs81=]>/M[u3.6EC4qSH^Vt?1EDXIYTI0!9d*@-"[Dj"t^1%
%@Wg&Y+KV+s_MGU1@JC]8c%oFJ,R6^Z.3r/:D"/1@(;2%Z0UITW=j>YEZ69QA1o6oNR;$-daP],;oW8oZH6aP?6-#>24H'[o_DJoI
%dT$S9-)O&FPB$XMS5VT<Ypct;Q@?$q.Y\I9S\-OQO;?*9_7S-D7132OZ19]m$dCEa$Q><^V`?aKC7#p-YU;R#[Xr^4o0O6;73]WA
%".Y\sLc?2=@i!&^Wno;,2a>NU`Go"RKKL?Mo/U$DnQ5Z$Sd%EDB7UQ06YY,VIson'dbMo0_f3L;'F@Y[9rA+]?_K/<MCKJq"I@E_
%7T-Li8ThXr8hqn)#ZT(%1Sgic%A6OYI>qbf^eK\YHfPXWTI'e@RAl>a/5O@E6s:^R;LBEq,#UIb-G:[^<ffN[7,]gK8e/d=Ab)g"
%1*(9jI1mW!Y;oaiOkl2n6oCaE7KU&1llEh(@=VYe9T\^reH#qZV4pGr'!SM\qqE\rV3",snJWU&[,%r[5gC%FMJQ/8!TjJg<8\"3
%-H$BG"_\:J5pFoG)`><m_1(:,'ghKXJcbQ`?%D"J`DU<8$1q4fi&"^V.3UB1fR'(a+_"8.dVbb1j@[pU"B^Xq3(?hq#Sg9S&2,^o
%,Vf*19-Ie?11j)lfTLkRX!j-%8?,nP_dZ>Z"-K\SoO/Xn"H>Enpf=XV99qQ1`U8bj60_h'-sb9O#!*fGi&/sl)e@#7i@WN@VAOMN
%R<cVNi!HrNLuRGP-PVCPaIE%+Mn+jA63cY*?:,)5rZ\VNW0_6,iXSUO+1^6:NBk4SN2jP7@Mr^DA\Ro.$m>LZ"J_Z\d%Ui"!SJSL
%(.t4G_9[!4\e43>2O\l[GQMU]>YeN-iXI,_Ne3<qcs`9X&m3Y\e<uAqlA8:%9G4RB:'aPNggg*R0"#ttndp=I#fpR7A<F0i?mKtS
%A(UX`K]G)GG0gboBm0mkB2/47=0\okW`Ti7qa`Z=<sc2Z/iq3q5&&UnR[gsKXkm[>k#eQ;&X<?h%Poid7g*r!(%',Ii=6kC7rSRD
%6-k+MHEqM,ECK.6)B&_Zaan1)-<W"+#f6binDKFbl/8b3#)PQgqqm*PAG#X0o6UR2cs@XU6@'/qn3ue=rEQV?(W=P*09`83B2esu
%3U4]7EZB-.EMl,o);9GbePT%hUnlEmE\Na.2J#=rdr'GFY9X"XAku&M2S*LW.fgDpSK(J0")u1FX8-5@&jEQ-RcmtYn(fYqoUYh:
%)!M.jG*\,p866Bc&uV)<8B#(!+g(qQ$NW[HE"e#,F*rmqR12lBBrEae2'&urL=!RiK00d'&]]Sp`CSoT<c>f>kAl;>P?^TD'`%+b
%-p8>B7*lcoAHFG[EmIj3e$Tq\FY<LP4',-npP;*Hp;RFA8),n7/Q[72Kt3tXB]+8C8sOp?C@hMjd=P@*d8YC=:YWfDBNlV6#pP7>
%:k9e4b('_#(69"_ogbE89o!Ok+0b&o;]:hQZ=o@lM>U![1:H6mF&Nj@``@je'S6CnKn+qmk('cj%ou)4QS&V>1%1qd<`Ea,`fksB
%Tge+;kGP1c*fZskoLXbiO1-?1_TkNSmoTJ\=R1]ROON]1Ca9!oH-P3%r3-=)1j-hXa]<@F4KA*QcbJN@Bg,WP.R[H:5cOr@FJ:\g
%TT[tnOI]N(E7!8nP-()X]\m&sdC-hA([Skr#4)oA4QGs*#$NQdVCIVP=,H-&[(q]2$PifNTMV%.bZhAGZc6[,ZiCA87*@rTUVR#A
%)7Jo$8GoU5GcJCs!eOlRX$$_r6u@;c_?+ncS=+1JFm*us2mhfDa;TV6TRlnFBNXT)O9qcZ9,K[61J!qV=W<HsBUoXRTJCG_BB:8*
%RXPf7cL:uK+_#;[Vf3(6+!.*,<d<j@E%Nm-`Lb:INs4_P(Y-FEb6%iKn1ekkPGQYZ"u,>$Ko!P%>^.PmXF!&5c,;k1K9DZ@<\j8n
%(+hHY.>8`#fYWk1]<W"87VcGb.iM+HZfN'.O!dB$OAV_nDmZ/];h:=0`tn;D7Vu/kGrY:kC=3bu?&+ZJ%(dV-i4C,g=(#jMAY$\u
%eo#)@Jrpq5CCaA]cX:W1>*uJ\Z^!Q)V4MgNU<qCV`4`N$C39U76@?npr0k&(*su'nS8ZnQ+U\u+^t9)PDM$J8Wq;G\MU\5uK]_X/
%=nC@2.3&==ba43!XIt:'X&lUd/SfeI@8fi<ck%lsLulr`FF_d[aCTq<F"Y:)bBb@JR$d7Fg_qV3;c&@P35;q+EBJ9F)IB9n>/DY*
%-E8.*;M9otr]D;uA102]#Bbhj)?fPk(WU2MhNrrFaIaF9qJbVjbL+DL<_dYo,_2hm=J5)MFNLo(4G$^2bFrZ)2+ifDRL8O"oVDk+
%d@;$^QVL3D$$>HA>U`rLZ%N&ek@o1eBP#1fM3^X9<tRV-;\f\M`MOq*BW7g;ea545au<peHW@i].t)2:6hb(l^^DpA"#-ChfI]aD
%S@%3iZ!bB/^u*VJl@l0^=TN7C,K1!KA?dfOGcrRid,\W?"C\phdWa'NjCG7b!2]M,#ZZ]mX8Ir/)(Aa4.7>&U]lkD-BLYI%6-;Pi
%l]T:A5VkqMFldd;9L[rl=qJdkMdct*R2SA>YJAe8dmZK2Ku1GUkMaI1,'5TS6IS[C@ibLFjtW?65:eo#D_][#P%>:0kd@',>K6Kd
%:mhRlj:RN!['8\BJCtFOm;,7p"*,/[O;eI71-oAHA3@)"XE6;',Lq?!4N#$B]dJ1-?\A-DG52JZiBjWAO:E2_1nOanE%[nn`k'r?
%MV7)r;[B!B<<HE>"/?<V0e.pSoe&c!>_;=oWbH3A1IDUV!8p>;KXa7QS_^#*l2[-<^`9">(UIXT0G.R:_H8#'^pM*A:HMlXO'hej
%'062oludieLlCkoU>t08Wp?Ja6o_E1l#Kq_-dbcUG[h_ZN9-(\+.p,d9ou`Z(B$nW##&Bc^M$H;W?S:Y-7I_EAUm5kh-6i.10["K
%ZQdDJp3S'-13oG[$C"Gp<Ah'O%u[)cb3?/T``2FB!i\1F9=!>a?(d(/AYEZQ'Nrn3\G@=p+&EtE+M.-<E,[)H_cIsq#S;P)RY]Hj
%+qtYT"#1k"Pj>De:-iFO09]34nP38Ep_ID->.?AghE\FD(^M6oX?;^0TTr^.F=O@HbYGJqX((1c(j'?u6$(&[7R\Y;!@5sZ024[L
%0!0YUFPXA=Mck3Oiru042e0)-ZaOo,;_;ZR)9qfcd/sN=O=@fWT!5@jb"k<%L3ZDE(-MLaF/,si+YOOKmP<@1<)M(/@4;b_[ST([
%F`n[JrisB?XE*fP?PjZ`[LtpQ7Ve^XN>A-ed:l2`io.Uj1'-*"[*FS0!EQ(`72jZ.Nde0fTkCrtXH_<""4FLV!.2k^N+'PY73d-r
%n_QaA(_P0r]nthgP6C%P\.11sn=^s4^h^&,Au$Gmil=_Jp/[!>(Thp!8]D.')YC,_>acFi;%&j.Qi^I@XMoi/ICH4N6IeUP7:69.
%NkSZ&g)d&ZUTtI`Hs+o0`n#Zh,:9T3iCjMp)Iu6oVH8B[@#`K@\p@D)AAq.P!V6[l6\8lTha%D%"c=!^j[>Qo5@k/_j`K5(M\sJN
%]hd0%a&GPK(qP;a2!4_1R7N-A,b5ZZr!c0.pC3''R'^s\3EZpZ6rG*hfrVM!EMkL"j$4H]R_A4]24P+kM"X".)%LeI=sq,<rp]>5
%7@t_c>`*L#=%>_BA@K2JV4YJ#hhEu$s5!+Vf`d\=?[_tImr,tQIIcOoS$1o\]@H!VJ+MaSbHDG[^AI6JYPss^:;;2TlA+iRTAF`U
%rRpV"rtBmp5je38<HtHFVkT#:4o?,M)X&t(k)Q\$]g?Qj2VsZCTN&j9lD,8Y'edHQ_\liQMr8$HQCV\uh?=5)#d'>gd3d.@.-,tH
%1R(cuX_2T,B2G@[S-sYB6+Mr?;>Pic2l;`PC/g29^h^6js/7<=XC=?3Bo!bfA!G4^hMls#nS$K,nLM[TJQgFCnpa@;A.4B,8dKs.
%L-2:\CTDhAbV8+klA\2IZpj$:p:LSN*1#sWFoA_0Uq8V2g[eh$BMfH5p"PRkMM<&GF]D(,fc&DkAhlMC(P#%`C&c$j'chg[_Iu1>
%1JOJ6CdHln9P*:!NMLFlD9=iuUUl</T>Yu9qa-SRp+bh`QkkGYGF2o;T/+!GR4e-7d@s3(_1I1e/mrd@9]%&<M*$PKn$L(o"*-ap
%4#;JNfBR]JL72@W3>NQ#$`!CU:]V4:=u<Z6/SfH]5Tp+Ek-#>.#t:2/ZnP?!?rprZ'3ViZ6WX9"1`um`&\+O]OVO^&bku4hi.,E5
%EL&Esl"qb9K931RgcO4X/Ef>7%r*Guf285JO^8-b+%`bO+iB/1$ejdBO_:7YKs!"N)VJ>pjdQqMC+L5W$UVTP"fp714TV`*QkcC3
%W"<CMf/'79dFuoMHOVb2.=)@m]3l&3lZtu*%7u^DH[WYWdj,aC1e0(I!&YSDDo+YfOV+>LCuiM^%i-P()jf!foW7=c&.26gFaM\+
%9^R#A/eJS':7kH0>73[BK(Y-p"&j<(^lWl54Ne@?2;tUIW#QjVNPQ0_bGHSaTqu\Jk,,Nh9Q]=LOcubHIM(iU2=%l`kbT\gKjJ(]
%7!OVFbF>1\Df#fV(9oCKRk[:Hlq6-8)SqR!>Ek`*R$Gk<^9iZS(3:ta_e=2;Oqf%9=4<o7Yq]"m9B#&bQ]p-ZZ$eTbKIg+>QX4`+
%Jr?Gt2QREV986`5+f+iIJGOQ43I5K**dRfVNJ@@`,%BJ;dOGbAiZ\:$?6p2=8D2<6\d^DC=dkj]5_C\hBK[c8^iHTn_ukGB[>#@m
%;e"*!NMckRd?^N'g2qSeU']Sn1/dL;.(ZL+SNYT!##^kuM:qtFba+KQ!;_60W!=1IN$bimE@/LZMPS44l9*fl="RTC1KBI`EWfr4
%6\R3t)Mf`e6Gu3GMmYNAQ"`_$3Z5[p6ipP5!&7k'b@/es09aQ\$)!7#O+S[PGm41j9quQrAM>7u@6reE@M[jZ()\R'hU/'@i87SE
%'3F%f'QksS;C@HOFI6@la?k\'%5(%SIqU1_Khb93&`&2U$VV0;O^2!C,3@Q%+Q##>\N.XgLea\)4:tO#3WW%m=$,)8Ku4P6nrak'
%2%(Ij]4`$1-t&;OA`cH4GR0_'O%a:*YbXX.ZLg"=F4VS%+(PChd@)Ym.jD\/?!LN;&[^*mWTcF'>)Ju@B)knnei@W$E[#lnT-m7G
%>!AH_`jZSW;4(Cn)m9^\!IR!*FY]5._pd!>Qq;*?jqX-V$[F^O0Ok.H!mR&Y,3rqQquK>AL=m3,%kYYV74OTh!Jd]E[,[;TYs]3M
%S4o_P6#D6;ac$-g"%-Vq<lHc^Co)o<e`AQn.I/1;1E)GC=OugCB*T'JkhM%\!YQeu%u33H8HD^:7P<Z[eF(`gXB5W<d&P8&f\;3l
%k+Ylc+[&p=^f1;KlfTjX@KOn3R&F\k[7d#(hH)L"!Rr"]:a('$OK-?/(d8/2AY@2'8W+O)Y*,=]:qSO;YlRf,=lYP&3q*Kp15Ndk
%bKUWf7A(%4C^cH2JJo"D7Ndg#;b8N(H!-dQPHM7=A-(gV.KWguo<B8mE!mDYV:;+/TVAg:U<K63Sn*87_.tj7*1Vu/S-.?V@Su(L
%+jCR@)7H%\F`.Xa:=+2.RBQ\c7SOOuSn&ic.4gd32[8+n4M:jk%ub4qP/R*W0:_f;ba)Ah+bbWh:jO:)os"<RdrcmB^SsU_?CIj7
%3U^XdPbG1:Q6nNNgB!L(OU`\J.RB?Q.8_6X:aebaJX509>-FUH)^]'-B#/[A-!H`i,!NDK#aKQE;@*o80\`gF.TL".R3Q$+ass>V
%ic,7"U>.%KhmL3^;VMe&-1<L'NrT5_G)q8=&BR3M;'4dh<n=Bm$J,b1"9Y&_Do5kS)`&`1,T/jnFWL/uZ3`o\_e=-a>N#T932a9Z
%<eI/D+A=f+GS3Z`?.&j6i#>Ae"dk2VD6q!JVV2hbrb.D(?ZtL1N!^bLg(^TN2d:1IGT<AeB7NUl_@DKZAl^hd;[2U"VaQOLq(bhV
%0ej?%)5-T"M5"MrJHlUddU"a19SmGg=$8i-^!+neQ-)1[q7BIc&$Cq&kR1u=lo7])(YpQa!8EF`>ZN'1aCuM$,`hWY17JFoZs3fC
%L8+e>_Zkl!(&Y]qYZclg@sT0aT!YM\+XVU<f!=o`^1]'1=(5,Of]*!G5WZl/L%>iQoNh8OXbclL<$l:r`A,K=.+t2T/M0H*#+n*.
%8nQid`[\W@&46R99K9.c+j6[\8L1dlS?t=R>.)<eJQ\X3m+&aY>%m--jrV`p/SO)FZ?$mea[Y-Al0^h;jJsVfdOQ1O19$$XMr4eM
%$]9:>e;=EEJIF^CX$*F_JV8VL3jZQ>8gs07Z/$=&eq=r;^D22c8/h6#cd\?)#e^62a1Qoa7EuT(nFMV/3[qTL<.1oa2Odp*V6Ut5
%D!@H?BP,3qMe0Nh.`R:,_BKi5^c\ZSK,$o/V4M*(o!^@:?=#5e3:H(S-1s]^?_]FX'eGLV8m0.dT8f0C+G"1rqU0pQ^dB]iH&KgS
%N!:X-BTcdYUDSG@9/WC']MgeI)3L4;:CI5:)-[<(jg3K?Z5F^8B9WC6"W<u@_,2*fjQQ(FoI[)PSE?m<Gmc+!ck>-.nH^^T,AheR
%9.';$8:t!N'N)2O=Kp@54+fJm9khX=J2NojE`UaB3NC&p',CYUn\)sTGG(jsM^E9rpnf97Fm>WR]Ko/]kf6<a%3.u@cO!,lF`uIb
%o]-*$I2/%hFj'rQhEL2#ShN55KY\eM@\c:qLh;r9ON7M!H:W]fnmh;\WgYP2?il1`IP;D/R0DT#*s14CjqUqSV^jRtZ7^mmi[b3'
%#Zblcb]1s%MajmInc\qPBrRQ^JeeE?AtOSsa_S4BDNSO/.TY(pr73pC@OMsmEN(Bc%r&G-[$55UXJeI=V"RVG6sJun&S6'?>bslI
%'^uN".8cO)$;@h.;n/a1Oi&$tY)&+C0/U;TBa^mDOI0CQ01u`1ZJm!R2=*k1$`Kd3#Yds)kGT'o,at-9K]^^?:/3FM=ror)&N#qR
%q*+`)CT,lZ&d'oJ0sV-6e-P<kY@q?VVX"@lek:qP-379nr>]D[*E*`0+KPO_%N(?8)U5A(AP+I'irIXRFA>YpFck5#<Wp(H7//*B
%0;F6n%mW*W)i'Zgi1\UMkY)4nJilb$IKH-@M81RGZL6)O@9>64$dTq:AU^-^i/gZ3oahK@C?l32*%DePJu</s+J@Ggq>f!@Me9_3
%9Yh&8<O\o_3FK@=E['YEgjW6LJgb6/0.q])&5Mm#)?1DIo*V<+)+LbC=rb%[[?dWurJah#Bmip^::[&d+<h2e*,,%>JQpF'<_P5X
%0IZrXMlj:>@UrJ=#4$!^"7pqkb<RS1b-M]*5p7&n?=6u9VrLDGdndTT:7MG_@-&qVonr"?R"1n7HX3o\A=[n?f?.tW`Pj<Xn-k4&
%8Y+WSrQ,;"O$Iaf:DB.6f#OFbBgj.@^MrD-VJI,RR[(dU7+%GS!bKM@^8gi45P>aJ+a.RSmj!r@)6#P$mV#(3MW$C,P43/]HDn7Z
%OUH6rCf2AVLmj7=TUXP*!jf5H(8A,QShBq[17+bi#cI.\(S808[D;hjVhEXS(&ITVCg"!_QU"B(j0;Rc*ZJ/nnUc^qL1e>]b#,d2
%Q$6SXE'$Oe)F7U]qZrK<_qenD4)?i04]";WLc]^g1gump?uBG)ABXN.&n*R_[PX3TTd>sFC^(#23_7S3EptW'$leUL=US[/195Me
%@rT8YIm\>ujUNWDXu"@<me%R$ZArq+oh$Q7UQ`f;8\>&RMI?I!Yb<dRg`(kqZZU^G:])jp%.:CH$9FPQ&sF.oA[7"-e^Ol,gB]LJ
%eRWR;Cq4(faE/EoZ&K+1Y:)84<0Urk1WqX[?@e`1\A`HoQTTR>.V16HU-^7.fJ':\>[gg7E%10SEf%3/V1I[H5,t#,Cdh,4#T-,:
%F>+q!8QKeFZ)jci!)\,b<mAXK:,3t-?,5%5$#hA5EIo@WZ"DuHK1o.SFko[,_lfu]*!\I<OgBkjA^Gi3#]r)(U9;_@=NVeDYf8C(
%\:HrmfRn((_(qWOV4&H^>q%PcCs^1Y$^k4dpD5\RTrb1`^0LK*=[NJt'6kiJKBN<P`@rQ@$R;`L[ITYb%=t>+=2(tRXg%M2MFOI+
%[c-Fm[4G3L5Xe9'iO$OZ9^1,PMt+-i^a*d%mmR)p?r(S^V6r*#k+8-'%5B'E^o4O!KL0ft>-.ENE<d#-m"uDsVf`dcX<Na&VN_))
%oSZ^V@fI=A6jH6*W%-hMk;`n)b^]i@W&+`ON7gn)2l2Ge!D_.s=`!q<6eDbh,!;'.2K^2mT]*qe?C*pr(jh*gTR95Zn?cT:l;">c
%f9b?f4-=VXH@F3!MRl9=ada4^d!1S:2<1M`UeHF\rDl1n_T3[+gX(/dni)bqEQ<4V&'S)h_n0<Qm>T:UD'M6>Z)p+'^u$]<#te%3
%ap@6@'OPs1cQlen7juGP?;8Jb9Up9a10kS=_&WPUh:;`6%kLr]^,f2],-Gm"$20O=0TAMFd0rbg[Q1<#a'i%2hlAcfC=P-NDH&K`
%Hjt^;hh>Ot2B>'nA)nGrJ*?'KVLPk(-A41SA2^OK1##/hSQ$R]Q7=I2(!$>WIQ_b0ZUbs!<MpNa`bdgT`>NeMl&8FYO=/.03h\O#
%R^i#rk7_dafRYr&i`M]9P#dlf;ufsbS^2-3W#3n*!G`uY5qX[S30O#X`lqEAf`!"5Vh7_j^8r=6b8GT8_N&'d%`d+/&@Icbgsa8a
%B@Po#ANFll?FO%&#`6H]EWA#T/TEa6SnM9i%0m+Big3m'n-5et[)!Xj@k0IPP(n$K8<'u"%>U,_i(nI?E*sD37GCXnB1q.GN8^a=
%ic-=SVsan+g'qCKZ5XV'4(<;mRBR*M(gAu/78!Q</=]fY/,tPYS2moHB^\pZbcQlmN%1@U)@:GD.3+kT/[gomS/(;YN$c2V,;6M=
%Kd6VR6mQ!2E6#)#?oW8&E)7<*WH8]*K2@HQnh!]up`%;PdWr^'8=;`VTa?L`ROgOjb9;)=_f0^\E9tqAV*7h2,?kF&#D41)U]=W@
%Xp!^BV8EPon:SXU+>J)<#B.H,Ul?Cb<6Qe^Ob:-;Z1($h%Z3iN`e,3MrBl21%5g-A.&',&1P:<qb6VH%AoLR`-(sm_)4XpKq)VB*
%K*'5)=,SXf3;8.pJ9k%EF$(EUd#ArkC72';[Foarn"NK`>5r31hqV%g[9bXJ30GmbIl^=LKj8^M3V_=6@0bCr<](dY3:DRfR6_?Y
%JhD<,>C(6FF4Z_o%o/i%j=LdhE&)]I?\^3t33d->c%@+.Ufn./^1Vn6h5/E^a2ee:K`\'ZK-6\[>)m.L'1"V&aMmt?+Ime[Z2V*D
%KYoKUP2:p8S:&/K^@(pW,_k<-!hCGR/\:W$L*.JOX-/eg5<'TAHq"Xl^"HMq]V,Q8ZobS6)>Ss=k6'DMB7=eHP,T+4r8>f]>_)$]
%IW,F=.$%S]E5t:*QWAQS[#j$Yn:Qqmf*K8qH>kE9UuiTfi)lnAc@&%j:+-?IAqM.p&0S=WN?4UW?*Q0XPo^o<!XS&q41O=j/C93D
%*ulCE.DrUli)jl=-osT&,8319PKj]!(9NSRn:NgjeWp*U&!"F;CItu4i.r$Y0'iGnUl]D7<L"Y2;e)/=`XhK/SQjS$#PY#pN+_e@
%,SB%uBY>:a*+Pn!*ZXM$6IOm'4ZE]T&ukah4h-bK9_@8sinYJ:\2G"L2h(8hAt:#KT1\Tujp0MiUQ93gi9Mb42K8WEWT!*q,GR8&
%a=W-c7M!cs`c<m!_&3f+AAU3ME:S0MUc7r(/pF1k:(QcX'[j,Ui4rGto<b>!#HXdfGc(cO(8hbC:(NA+.Q8'td"?Z\doF02K*0dQ
%D8W"O-]b>AL<oMMR(>aHDY2ii!#CLJd(F?a'1^@C_;SN0q&B7iBVB]1pq`'s(cqZ#nq3,lXr80'q8#W`9[8h25<'ZIE[Q!YE,DRc
%jTf-Gh=-'G8RnoAk6EBnPjX3>r8=BC>KlnKq8"ce8ml?1i65I8Xdnp6F-faYRQEaDj3@_&Xo.*"[P>5`R3*E,#qM\S5<+C^\I)Pi
%E&?mHVO\j"-N]"g"Q<I_Lm?0eiE5:ZUa^M>E95pJD%M@f1]eM82]SsB>cX+n/:umn,.-/4_AucC(3`4Z:+E%Xb=W>+AQf7c6P'a=
%:?@&p"Q?-m/[_\`i=<Y;YY,3eGibNo.m8,_bY[-"K>VUtN`IM4#AdRb);O.Dc3"[H9XnB6L1WM'Gk&rId##S[;dSjZ(RtOBnt60,
%%N!M%;XiI_]JlA=)2KU:8#$27B&l!7.iP_UQYm,G&PliHD<D"FA>XmN1\$%&lcHbWI,I[[k(ZR#&"F@?b#^h!JYP6PL['9FXC0ER
%WJh?-/\9ceL(Cq;Dn7Xd^gUkpj+P\^:)h3O79;P>`#O]JZ@SnpR."kLGPq0L=h9f,q7#s.ADh"9-%C9>r[(&MrRA6OW,o3)f#Fd_
%J[t;?_Q>E(X@1lj.7S*jk`'6=#/d#.>MfN*en?5++Z02l;O6jnkn._;dp(W'dXPnd:EMk+N\!:Ed[I/N@<lf^1nt+"AKi+dc34^$
%%IuMXJ[='I,m*71VlV*,9]1r]e=iEfJM[5!4),]J31p`8!ns$W=`b=EWAHD^e"f`],m$Sh'm.Yfi7pC/XH]7_*"Ca6,&l.X(toOP
%j*b'Mfr;bYRu1b(:'JoZ"WkCO!bY@@:k;@F:(u8/KfH'I=j80lf63EFi!%D:B*)_"%p0#s'0%]n=11NTA:c(`F=.-f+jDj"R0]=a
%ROfcM7,SJ.;Ccl6E!!n1`EP,13&e5lm9(e<-hT$MKFJMQP@sC$SHkZc!tDcc!tI@^f)KZ6^q%9>Maof=39f.qI6.s!=V"ZaZJbgs
%/><d)1/*:HJ>,GYn:79fg$;i`E&AN"[dnsD7BC=7npif&Ohm^Dn::,0>RHDpS05?TXj9,f/<A1dMt)<rb:)P[nUSM6eGV<b4Q)Sd
%gparFJ3-ZZ!n#fMJ--3gQI)9*kGrq$[aBWCFs+!5Q3Wp1-NYHD#M^L&S&T1*!CmO./iPWFNjQ`(fKC[%Z#*nS%61N7!"UtEi-Zk#
%9KN\C%3*mVFW,3hVH%i[!fla!gm64e:B!s'C2I(gR?tit=?6gLPFO%DSHYN8Mn'9I$b.,p.s2VH^&q7b"q*E(ra:D?.gn>;F9i$h
%$TNHkA/g.)gi9O!E^g+*AkG8835Epo$b'+n$?1)%;ldAAi%2f^3Na(SG^W*)r_<L^Pk#u9.DXV/<ST%=ftqU"3X%KI:o_7+!2m$]
%D9F8X81]Ta6t]-n:0T(_j#9!6fjBZ.8.KV0?8CbYjoEFg5Qkb>J?(kSAL.B?3S<G=9*.l3WUtV#?.A/k?jtlP!%1Jgo+!Yui8f@Z
%AepO3*:=oJqZ[9bKYio?Ae&be'bu.0!G=0WmZ]f>J88i09K_79'<DT`E$_s#/m3J8d;1OLirNecT6ihG*cRbRb&4p:!lnM$=?VJU
%nRXbl2alTrI\NZ)W"g)=WImqKNgm:[@`&;.*b^ZR5K3e#rQ)"qc3(6>lm87nJ>69#\2k/16A$cr37e@&-atYbOEFS<$l3e/N%q_b
%_ZJ+/&`4oNE$AfIS>!9>1P%/_-K`GPN_l_gU3%/i`i=.Tn<jHMJ4sOhUi-'Ac+=oOi!^tF(Z*MhdgfBlE9.+5r?oFic31<#R^B\=
%-?*%G3hS9[1[0rgI%:Q`QA4rcDOA3W'd=#]B*&=(VYg=7-?-=?X5AX<*6l\8lV-5]KP_eq1P$5$,B7[8!b\ARc+;1'cA0j)fJ%kD
%.Wp6Lc30.N-HGO^!b]H*A2"rLE/9=5kB&%iN"`\o)bf26;sPU/6$:;P/U8WD8,AChVAk-o>k>j`_ekdVREnAg\l4/A(8UXtc]ZgV
%eEpEt<8b-3@gjk&\78K#jHU(B$!uDHG!cG9!1276Eg:%p*u4L($CnYL`?8C.[Yk@[F=M7uN$NO="jXgf(>U6AOeKI22lOO*1E^p8
%"cc?Ym".t9%\()];U25VJ[Q:0g.DOohW"to'fZGjI_gaG*$Mt\>M0H8E$Tb1ge:]*?knr<]Bf_:3,?%PU2sI_4-OZFDlCHS!QO]r
%:'HZBA)6LG;h;989^b/DJYNQHW=4^nSE4>;WN)/5j"7QW^<^?JG[9$DSI6EhY/TcI/oV*-%Sc*ff+qa[SI:sSC<Og)%e/AC)iP.E
%?"m!Q.i5^M8Ae%'N[/^aM(kmDd:/-i9EgGrcojKP'f\#@Q-\3`^i9iiKae\TZJ%+6nN.CD+'S5-"HHlE:598j3'KqdT2#NLi2u#*
%`WQdC>TJG+'f\3-8C,Y^^^1"%]mBqu3!<>lU.tke^Tqp841_rTp2eo+JZHEIg<'TE(_;hA3YsbZ=AcTi!p<b7pY4*$4E>Vd_`A_r
%)Hbn+@0:.a#`E,("6\jbpum+`GC9F7_&a]B#L8Q*qOSWiE6#UQets9+\99:pd5*t*keg6.&_Z?6&nG*8O*'=(/C^4,N=MIMjWrj<
%n:>()Q_$rB5&dBO<%EbJ3e.['3C,QNi*;81_/gBBC0ggu&,bj^Ielh<2pMZR$716!><["pP46*h+#lZ\N2D4<S-1aO:#,5hUVH%s
%%R+id=]kgXq7p934PB:VUD[a^TEE4k,'6'5^bP4J,ep/Xa-E*&hs%r0_W9kh*B5.WdXk4!Nb?^Z*H^5^_Z5#$%37Dk6r_hM3cKiD
%C\B8!3*^NeZ+-V4LEB<Dh9H4"Ck0X/SIHQP5c"Lm@09"U)*A*B3;dM;+7!b$NZ1VI/3L7iUU`F'9PnV(`:c=b(hP[F]U^:>DJ'&q
%gt\LNFN+NFpJ@a>%3%9W],Fg<A8L1;+fWM:$lj83n6lbYE't[dR(0r"Pd8dp.W>MH>#$R]3:]sM8'm[>S*bm;,m";eQpY,(^sTB>
%]$c*2",pb)S6<Y$^(?)@,iGd#YC>R5Dmn9<Q3+_PhALqH*12Q9p)=3Ta1@#l<sEWNka31h\E!#9Ul(`]^d2SQ]VJ:&%P%eGITlmC
%64rl@s#2F:kQ#c%D[&pD%;a\3iEVQSf@[i8a%r_`:At^:1XNIG\\DQ+(#DW`^G?J@4ui`6_c!innMbjhAYo@f*nO*A1"L8R=g?%b
%6i()?OqA5QDff"G/7C'n2k*B1dn.=%U(l^[oU@E<fPO3p+harf+/If`1ttFo%GhWJPZu/r?7n5D^JTpP^bXU=^>Uui1U:pM>kCuV
%flshu`s:9Vo#FosU\Z=4ASNaE2r:!SRDJMiOA;c@B;TT*1KDA\^=`JpBJ=k0Knd[7l+<'WZ)pFOE;G0%B0>(r.:+rH^/;4A6<m[-
%Ol*8,Xu"0Y<p!LcMJkm4OR^^)^9R42K,MD^pMOS)%"<+-iF)M*H>g`fHq53"DsW>fSs_n4NQFi[UN:cLlXZm?c.(SUS<Eib;gU$4
%9BP*!g)J<7LdCEf(:*B<C2`7UZ!_4^m>Y]^"U;Lr>+2p@Itc<I0>o?:%CnF?,aRLmDJpq&fUj*pDgY\1Dm^1(1O=V(LX,5ACg2l.
%YrBSL_+Kb*;#nWMT\Mj"%G[SEH->PKn/n&WK@ua(IjohXp*RqC_UL0D2hDbPG-W1=hSdINCUL#4`qmZ8(t@DEkeu']/%%<:C-'aH
%C2]Vu[+W:^c%\^1m[;`Ic.'1Sg)DUPRLF(P3\HDn/2Oao;.LpRFDc#!(Q?iSDJrW"%&n0U]kJbB**-rq5k>AF^qoDt(9P7&E-j)<
%mF05F:&Nj,5IeDKD4$;kI6sp#7)k?HG&LPOaU$EuG&Ng]+g'h^r//I[Q/%iU(b61VjPBmR[=56AHS\/CAA=:S45)56!S`]_PNfm'
%Z4_@3WXk6[jPFt\OE%NOpNGi<\!>`Q_9oK-Hg<-FN7saM8I-+BC2YG`."?eFHR"up^&M\VD['*Ar83pUdCIJk*R*@[W+,WcXPDZc
%_.iXeDK#BGariH\HfJTB?k.'m8%^+KeDB\YL`132]a4a=V&Qg$)H__WW4a)D=OJ(n2tM("g2pqFf_<V-fe@d%l6j]N0ma"0+Nn/*
%p3,55bJc8LDjL3?$0oakbWMZR\"WMMo;L1!S_>"m-IK.cmB(IM<a!18HNV:8h*!g,[t0u^V=l8*8ZQ8emELe2+Cg&XRjau9JfD*V
%hMh70QJ*9K5@_Wag)F<_5A7t$NE-Z$F^f9\[b-TaQIN:'2I]>G%FdrYO\Y7;Gi%280IsCe;0o,#G@GKtkVCeI]`HgPAk*eLDrQ)E
%*pCQ!BM$Q"K@lZE3DZks-MD$lM@4<5p==ITX=LV9*W8C+h3lrcr%!WM0P56VH8B4a#IQKXE_OR2E-jBYN"i#&m7h-tqe++>9pNf5
%3fMg_b0Xe1EdOR8+QS:2RgI-jV586[A+"D`)!'Pt(3_C$Oa@bl;p<Y1]fBFS:kROB/P>!4+nt,PFX(U#YA?TW41Frin,?Sm`s5\_
%5m;"__M6g7H&7Bt\8cl%9TS6CS_KXp]8P@G/%;u7*eq+DHddNtDPd&]>H6FYD5b-VE02lN;gW;9g8C4iS)//HVDg<=2f/k5f6:tJ
%k4CHP[<$]PrR+L!WW.fIiJM`Y.tjuBW-XO3$+tar6<*4='t3(_TsoV51'iHP#r7+JZ<"meSdb?'`O/soYU'a:e?h=TS;Df>gt?@C
%7tDK-,%-Wd%u([RSX2lX$"cIMF9dIO&TnTiArNN\1c$3[KSQXH%`i-K1^t^a9H"Dcp)-3?P'`3Np0Q@Q5#<)l)nAJ@$`+At?/O:m
%>X.jE]P`u<.#hI8?jnO=:i'&<=qjd0Fh.q_q/!<A"*A%\1*.bhi?a:NHfh;ON'8G"Z.ZiX<OXAsb5$c-gB@oLZ+26@)a3T+UO+A=
%Fp6.uFon\%Q(BZFO,`3W84[*-ll3f\#HLlnpYnRrKsFJ0BdpJgFZ/!kNWnf@oH7KhHsVb5"YUM06Ku[f-,m\n#p5CD",LSQ\ORHq
%;YXj;^lSF^m?hL'4^)s2"=+dB&2bY[/?m2;ginC&(Q^T@"&LrB!guYXV$Wci3Q4c[<Os;)'eS)L7TIr_EG7qL?A\c64hqgFCU=fD
%idd?Ih<4is//esd"Z@3*#;tPLUBqti+$i%YZD-T[YcJ+4[Am%@StTW\c'He<B2+k<C2kM`7<3l7aoN&!"jgF_2c[6#SC`3c^aZ%A
%Q$=j\AB8o%X]@gi7f,?bijO9I:n@cD>i",==qi*tem&'*(P;E@.Nh!W,@F.L(=dpo)sL"H.7I"&HQnJn@8\"5qYXG35V8KT_[+]n
%N=)KLMHZ1f@B`D"mem-[S4,GpA_JSm#_a?Zf6sl+h;&A^nL@_DfaL^g,ft_&nCT(fZdQ^2p!b<p9j$o'ZD[aTn@m:8(B/gcL(TFQ
%8@h9u"_\6NfE>_1EBc&uA"g,>D7?I>_6_OM[A\#b`=\`Xg,XKH]N#A4VGBlne;T!mPuYre,Y8t*V`FnYfE.WUoFO[j"s(bJ81*5f
%=UY$kZk]Oc;:3>nKo,pnE%nF+rD;o)mBi9F:>e%Tm%U;'mq<#ek@>l\dS%9-5=r54bhU!>,Y>AYlF<7'K.DU*>($QX$X!Y-[NLic
%F<-?G%]Du;7))j#qMF9$!?VI1r'C0U$7WPP#\Wef"G#mf72a</K_1(W1K7opf.UWeeEQ#FME5!nn2O`Qbhp>HA4AV'-g=,d321bM
%_'6%7S=,kY!sO:ma\,2]$4cX"`E4IT5mriB1koDF:m,<9'-Z<8:_Dc$q4=Y&Ae=U03<DD''9Hac(8_\LKm_OW@U%/D`pffu@9td5
%'5K)`g`aoppX5PHME<p=;U9d8HrKZ$E2PXm$ECt="Nra'g7J"2M'N9dEr9etLm[$am`@Q,c0b""jF3'9)mC&EL7&SSYsLu$->Hp'
%FQYH7Q4>=-*`:@YRAc+i/1H1h/kBmh/CPU(+IOp'Im=JR:i/<F=aVZ;QSNTC]8<=="=r-$JV%W\WY@(%Q8(:D/tb<a/s_hk:)F+#
%,4_%^oSR^W0uV="#N2M\Zu`[B-a:!d%NRJU"fR:0+?^pWnQ^gNJhEABL(gWY]OC5K""pr+-q*b];A7Cil8#k`=E3<Pm#bUA3CRcm
%T#%F&a=*`p]Z427!_N&qV</.e>r-2_5]/&,X_m$$[(HjkP='UVQT6VfJU7m#?`WS/Ng9_T`RIi9\.XY0M77)8)Zc\E$'5]fSHO3T
%)_Z,HYD6Kj[jaaZ![0?,TMO;3!LPIk^7"JO:QSq-JO4HJ`X[?o&fM/],HrgGPW/q)!s"h7HQeR*4YJYT`@$(I,;V=cDj0%1!JQ%l
%-7ksDHYmk_2R"eJ'*&_,SApg*Up^h9LFEq\U6jFs0S'o5HM@T;=F)DC*KhIaB6?Qt\#+j>`Xl9<C0JOGNm6$Dn.$t,]*!XXC6ZpI
%0M`k,%*\t!Fs('(6jr[_-qls#L=_7UCp&snF/6;T,j[G0>9d=Y2!k?/enYCOC/sk[m.#<;B,NXaoZE$:/3L:q4SKjWJQip_KiOC-
%imo))Vr;IH:Y"dfdF`592j;-;WF3ZqYm"&^q9PW"pD_-/Zih]o>EeKW>Vsido,)3,f]G.p:)'mJ@:kohh8p?tTt=H:AogCX`Ej@Z
%<9+9fE5EZ"D2gt]#m^tAM7TFMG.D7PTo6H1/ef2:2;FV,1K8OKWiMR6!l.3inaN>VUCTf=bnK%30T@F[F[PHcn>&Zp-<WP+>kTSe
%AkV-LWk$;re!+tGLmk&RGfJAoS$-&m<b'2O=1bp4K19I(A+'DV267gij`m?F,Va*l7Qpg$GTN?Dp'n]Dmcr)mkQ]7$A;rI\I*jK8
%Zn.b>O<;RR<Ir6M8Z3qO`i`,&5jRoOgK(VE'(-H<]XBL2b8*&G>iaN(0$qgV*K=Z%L":&CDN]McAu_PYHN9G#B+7I#j)YCa*obOS
%\pU/m%\@`c+h/?0e*c2D&S"E>p//i#'@mNKCY4d1/iN2OG\5pWn(thE/s+Y@2N-%Oi/95-g(CEKXf@%pi+=/UpSk`DKl0Ki&aIL[
%?:m,l:hm:F)g>^5Ri2G=mEi^Z.)[rcdERkh>YkH1(E2!Ji+>842UuQ=-g_3[54.']>Ahh&5Vp,H%4i@=j;5K#SY*VhhhHB(^th2/
%DCI92*42J3qYd--!%ATEa\!n^T!-ES>u+=Lf5+q8&c=Ad=Y!A6<2/#"U,'Gn1DH.N!`-B<m*``>REcPsW8glSRnNY`_hgP)iS60R
%$<o5Dn28%n@)^-Z]<i'!DKo#07to$'bDb:c)fSnre9W1F@tp2$o[cWD0AEdhf,0fk;PI7*$$1YPT03o.X"jqeoG0^(UO5FuiCb>K
%'%k`+X8?>L1*K,Z#mE^BBP_67?B/j-M`Mr]lGWbNf[UN"%;#,#?,^j'k$XZ\B25e/\[>f;5$ua4qm#AQ_]`](J[Q_ZLknt1c6qb+
%Km@'WA8]6as'PKVXZ;F%aqfG-K`4?R3's2jTusILe`]StCnE_C\pTZ(,KI`U!Wni87_!D&:pT68J%=.eR8qcRU-JbGDQpu62Rusr
%<LK,_F'mO.`dh\?nk.2@W90G@3Z9Ora%@L'Mb`(K#BgXmUuA\VI0n3n[e>8<bgke,#DPZ8g,lq^WqF=.#u]jp]:c:aGsF%Q#`IE&
%Yd4mC9E7*'Oir=ZYnm[JA5eaVdAG$P%OW-k-6]m-57enQL3Dnp_R)\6hDP*T(GJs=6r]Fp3BohC]M7KT2Zdgt.u\W]_N,9/`3?NY
%"@D$E#[Yjpe&?X#^iNL:<OO>B@K8to3o%/C8E82Cc5HCV'+336+UoH"4.lo*Z259`eC[Z5'`/&<,_>;aC"tDiH-&QK:sFLk;FQ1S
%R7;l/dL0WQUY"X>^=nVFeGr]b,0As4h$LOAgKS"JX4[f1eJ^[pj]K3V\VDef6/oEG/+5WRhM?:Z%CErDOBG(]&>t9.3fGQ@fB@%d
%C&q5FPOhD@b-4AQc9WH!Q;F.t56qa'6u\*<XdNdC:A\Z.Os(6aLnX9F%6:h(ODG0b3Qhf#=*g,];.D!]4*c<a@'>7?WbZq^+'B"r
%Oa;F5Te"I?LMT*tN.\$68hq5B/V=1/H]l0b6Mqo,7eRs5O"lLG)t%`8pQ8gWZ7GIWPWT'dHb2g\>;@]X^N-)Z@T"'UFat'Sco62,
%n;%IjorW%<1+7;^4-2fWWA5TMF4A/obKY05a3PKm.b?C:mQh<t'ET1He7]D;7!p+#[^K<0Fh?)r$Sbe=Z.E1U!gJeO*jGUISafX3
%aN4d-C0[CbXlWM<]89b%icd-=<r&$Fn$];u:f;*&7)EJt/VGB/:Ep!OS,.:Za[<]GnR[k`#;9As1joE3Z#P5l'A'#9GUP"#Rb64o
%)P0rrTE'_D/6G92Q*sP<.n#<.eOVVW3kp[[QQIEnNZAYL$h.3Q%dGPQf+VkPMi`%IhHGcqiTQ)oMAK1d''OT2p_i@;OpIMhbpfn7
%,ue`_E$jFTd0.?9KVK)J#1#*+B0F.Y&YfMKD`#1*OicfT$rR;tU9`;/^imFK.sgt:N9t't_ts)*1M*3rP+'/VV,Oj\]e:]9WH5C?
%mnmmpVZd=>/]uZiViE5t]F6L14^rG&;_^OnfY9s>NJnoO<MVV'=DsY9=aqr(/8/.JB-KqkPd1JgO=uB[:)I3L>T!OC,bV9]8/ZkR
%a_@:Yln/kpe&D/a`_IGOlB>pPBeG%m62NkiTl*9ZL=P_e1_Mr'BH9mlAs*]JZ./@!+n<\.1FKCUSk`*0IWLR"m?uFuG8DORma39f
%o7R][SD)Y8&jRbQ&uf\"O/a\:j1q3.dB?%[Q51F6Kitg/0OBl&OS2Vp,C5kikRqT6j[O<c/<`KM@-M'1&d+[a_M-YV;TV0I%tHD>
%BIk>F[,ba,U(u>ld#q5%/IRd/[29ZE9/s"B)fXb4Z@l3nAs5hJ3/Xn/$$-CYZCj+hs!bBUV=4"D4cG!-9QCFEisEr$,,$oJFiVW_
%r3XtO4)ucR_5QLAm"4pq+dTnLJF6,Vks_;HKK<Yk1kQ?GBJY>E4c+hql"N.^ne-u*VMS,_1=FBb4$a5$1WUWBA-d`A<!_KhQ5O/)
%p&dqnVj@iDq*HB:M+uusZee:\)(X_eW[h3XQaDt1Z!]Ns-=r6/!#*?pABgiQ!))fK1,#%0DZnd`Y!#)DCN'pL6(cR.4VH$S=mR2#
%LRk;u&S?$u6l5Di-J-XdBnV>L6!f1XFJh@"IpF95:%H0p7!7[K]k2q?M+)2p<4YtJg^1t>/Y]B]#m7Wcn<)ga#[Pu#QpMmG\`u3^
%9IF6po;p>MO:G]9>MsJMUc-*#6D@\K-6a^J]k/*a%g\(VOD4j%a'.=+0`chbH*BIMUN'$7>QaPA\/B:YKUB0]0462r!c#(s*K_,#
%$+=0f,h.67,m7Ju':(Euo*8/.,dCGp^eKRFS5P>$'"^;(Yn<K+'&k`EeR>#Uj92]M-E3pkr&u.=r':T,iF*T.;pj4<!!pgh8R+3>
%nJ8Oo!:sZKO)2JNCYgU67Ho+\i3r-q46&<:&!C1DBLNA8'RQ;p50scbX+_.U%K8>K^a=uEl[Pqh-'W4E+qU.J]O[/X4s@[/Aci.C
%W>aPXe$O)E\2*Ol%(u<I,@-`g5Ac%7a7diP"F8;`)J^S2s%2$J*%-d]Na]m9S6,O+0MVai!2'Kd&pa6k?7U/+%sd&iL!)O0gA244
%o4cW+Ok514AlE/QZNIb!7fj^LMr]u>SsEm7"sLEc`YW3D*_#7CWF7Hj(!eQ`$!"ZlH/tkOm6L5pk6C404`dSJ>%+;1(sT0:]tgmk
%CuAl"k^K7FEd9^];%#a+!Km\"Ti'$DN8A<<PAnO@PBS<sB6&VK&A56_Ulq,u>-XK"PE\k`3nisXhT!T6[e/NM-99HRM!EYIc^GIm
%NUasLm$)A5<*4:qotV!OBpF*6\WCr'/U`7<hLc2MY!Yn:+Li/Lp9@5nPtc"-^a!niF]09*;]='6XRC^g+Ur!JSZQ.JNYNj3ke#L[
%"H,XGFc[b6?Ils]@\m3dXFu-D8JHAr=&rTfTF=(7o;Ahb*0P]?(M]<9K/peKql$=LLg=E&]:`do:/*+cb&RLXVDR-i2YNfrX=L.N
%N0T^"(lap7E-]QG9NL;-(rqF&J7t1[!!XE_pm<<l=S<iUdUSnobF34jEW_N/O^*&r-`mVa(;3M^<;XQ:k!BDAYKN)QVJqp_6PDsk
%F%`'iTesn>8<&Ip-V-At6WW9QX/-KH]G_Ot?NiV5!ru(X)p-HZAf%>S**XGBe-##4>Nn.<#6``@+>LMHHA/0YY8'k<E/0)bQf_3I
%5m-G;TZ_SlY+Z$R8aQmT5iu3?80D5[@1djVjX@&Vnj*/,A',^[<2b@24&E"Hbm>3l#o=Z+-kSUoK_c647ut7L!.,cX'R7u376!UH
%&[mm<@OD^S<bhR/Ln/25PDGW$a(ZmB>'t/?+:-gpL;]!MEa$=D6j5iOR;HLF:*Q`LE+ZL?6]K[ATR*9Bgl@IR8HR7ta'f6jf1OoE
%_8!ojXd!ac\f_cD`N+T&OX3!&+UOUC,@q[hM4#rn]MoedMNSB[D&\('0Y3*g_86dk](6J?7$n3Wef,g?8?cGm*n&KG!Wbg+1"M$k
%)bo5lXNc*3C=-==)Muc!e&4^b6h!Fr$I?mtAR`&BO<PadiW>pkd/.Z*lq&<F->KTbMEqAuU0H%\+Ee0(je.@)fK<%,UESS^G?S5n
%g@V%<JFefH*ME(7L3WRZdR4ldVh=bNpq+I75`h$%L!Gc3k;6=h>#Ye7'Hh:USj<?J>ZGqnfL-#Z)si`d9:C\5GUV!],\W6:@gW=\
%"(pb`1AGYs8CEMH:N3F(++VL0VP@r<e2fQJ:o/oO$T)^X6O+tbB\<E\)3/O:X[Fp[H2st;jMWUG7EGO>MG-S#87r>Fa+KTf2*sm6
%5OG7JUue2m#FL*J@t!jVdBem9Bgt47e/L-<Q@_Y`?LEYfdn0?<3AY2u&E;$W.pLMo6:0a9%#[j&^Q_hA3kSU)J3sUo&[I7i*b_,8
%9Z8]cSH`B[G\NIN9#`s`(hT16,DA%#=h;(aO]"mOdEbE=L^Ak#$Q0[)>gf3TjbtO-aVIgo#_<u]*2<1d!eQhF&i!cpp!UE[ke>F&
%Y>u.\`=\Lc]K[G\]@gt>nit8Q/0+`Z"HS+0V2`M5VJ1_oY94Q09[d#50V:.U<ID(q(tue\egU)K,RcgZs'odmZ>\8@B;Q?=>DQ-&
%J9ErS%I,_pI7e7UYK0%$9#B0SjHqHY8m.IcBT&<l-P%F#_"ET8@MIBu.9tisC706[V=_k7#$jsT85+P&HbCHdl(D4ZgOd78\.pW(
%g=.O56su?])t6Rof"`,S.T-\C%gN6jaNVmI<$]/+.50;WecK7n,]jkQA8m@_[LNMUdG9=(BFQdAB$T$?X![FnK7pHW/H^Z/M'<ie
%25$c-/MMsi+^)erhh5EjBUieDTS@SUs!U/oW@2p^0^9s'-D<bLj5We%L?d.o.[!I*69.pKWD1PWfE>G;bU8W]7F*/`<j2`N=nZN$
%#d$L%fuE<>?NjaRDUu_@G`l8s1GMCZTJsAQU=Nh[:BD0B4j*!sgPI<.MO2crTkmuS_Cn.n+DU7G/D3UGNiT!cSe]1=b"%jL^][4(
%.$6_%*&s7qHlgm1HbDsH(t^/9=l<(EK%rbF"nP%=gJP"<1.@730bY7OlKnAX!sBmmKWRY_+H]Phls1M<Z#"2@,P>pg;sZs\LPa%:
%UV^#%JMT2$M02o'm0773T%6.OVPWX/4B4#@d]h`9!kBnA&T%Ep1,:S3#\XE*7dL;`BA)Y9OiFZ/-`,<7[T\"d21an+#p9K;0-Hp)
%?*Y)0,/>W*9'UhtZg^?"*u4Ag#=UAT`W&>ra0KueU]9#PRiTKmg@r5sP7dsANlKN\50%)fDDF6aGZWstl,j'$&!G5eCCS^,YClC4
%C.ss.r$%5)BkSgWkA!QG[U@0<UH:c$8PT]1/?HdJ17L%.n.["W0(\>(r0gh"Fl`JoZleT<6\[';kp7I\$B@\4q,-NIo>h3($Zntd
%S.0g<jrLu;J-3TkEZKQb0.-hHAD&-.)$D0I=0>$[=;gD7K=Lcc13e5CpHPYOMsg6$qXhjV9I:pkJ`cDMLuiRsfG'4E.#qMR3jT/0
%=Ag^.7DEMg3%s78H_P]GccL@J74+CNSm5a'+Ul5p_c$f56sP2r]Rm)J"=f3bGa=d@$G7Cc(;sf0><C%=q&-JuSeTDI>`k%dJb9$9
%G!4^(Pn^mjLC<QK&suA@b:%WKe()83m`e7rSrcs:E%a[%_57d,c8^A]#d*[10Is<@oV-hkn&QiOdR=1nn9Y8?g,Z(tgSK^^*U$g,
%`#4=rY:P%C8DFTFeqV'._0iMkUuG77Lnp-oKpLIS&=ThaFRdPJE6Am"]TKD@[V:+?i\[Db=WgmO`@[?XBC@M4B=.huPZl!DC<QYX
%JRSbl!2q:coe_V!_uu^6-%oDZLm3oBQ:S>nO!s.T:aqC^j9pVd@8Wcg.5SXJ#pFKQVe?h)'+iZ2"HbJa\1&&k(nG1`KqtXA2C(kW
%$Yb'P,J-n$?8=u;_Hoi=BL;?h^ai,Ga@#;q@&`/^<[iN0da?\e"Up@G0p^WpA>&MA<<b_<KOZ*e!EM&*;hRN6qhN1?6K'G!I(%`9
%kQJc0"M%3`CeiPi&o3$(MBLNmp(Gq<SB=V:Wu-XOlPh-&1.gm[LffUQH[.Zu9)0dEi0"`j;uuba-*6j`_&*H!)Q!"r/;]YT$">'K
%5bukRUDuun3\+&ugti`+YI7niTR@G,:fnsR,)d5Y&^]$lG#X(<K&tRh"e"7JR9UmY(_Lb;*Vm@2<0>:#BC:ccO6g2]SB\,g4<GoK
%C.Z=QEfW7/6lID:/D487WN>="j;*7^JN<khW2Wl+;6-fNTo/@<d&0N]0m9j"UBDlI6V+k(##cs)$imk+SK8QPOScFdi%W4sO0g"F
%edr/9E@*so(O4=M&@dbmnZJ!8E&+aI?3>_:$>U6T+rseI>!lIUOIjW&pIYr%!_8ec*W[HoCKpFI6Gg`l"GI-=5rcV]TdbTG1mVEg
%8`26)IK1iE$!]QmnL`-pL7f<6Q%n`D$"3jj.;34l*Er4e.Wbgocr;t903efGYs:fOn4QDZ4;bhi5ai*u5`dJ(516C.as*N+IL$p,
%>2b.K5a5;hB9?%$K"OWREQ\VHEm1H^+\!NU6+&maE1;_;5qtqZ>nYq?4p1#Z`61SV$RLV?5r,*f6C/@KkJ.652#!r]_FQ,-BimTd
%'1a1#=l[g=9`V^H0S4o!dKnD*_hY/OQZTbD\/(e]a>4]ddttGnUgE1N;<HGNh?@a)UY#iZ&Fp&_5tH6S1*&>Rj;G$ig<g8;,,FR:
%!2ag=+SbM/X'!,.<t\0<q/JFsi*\ai4).DZ*s5#)P>3'+o-aqH\eY<0i$>PGek+UiSMjMYZj\5_'U'Xn7XB&G2]J.[MG.,+a&Jsr
%LOMn%#Gq$XNZ5cC'Cu?/H>&%!"^JH4%-Ojk;^P`m5s`!<$jk2j-8o!m@^9:C0oVc[dt]1cGUrkI*ctG%obm9%.UOcj+[A43$be4(
%mLc+%#J#lsZ`2*V<KoM)JfuY%9u1Y/;P+o+4FLO5pJ`S1JO^r8!LEo0d%Q[(JAn+%82N88"`.IN%oGiYg(PqFiBi+t1H#Rt7PO<W
%1oD1AXYkN[V[mmM)kir,BY3q2'.%@m\',*H?=%R^oVZ"7h&=7EJlTVJ92%/`)F;YE9.c9`*=ILqEItbM],+Qs"GT6G*+&eV9@PUl
%dT+P/[&K4F?%SsCVl_9P0sG$-Ku="(JJ%XS7Hk;U$PM.M@0$]82Bn_HcIEbA"1t=q\I$pJfmuml'R%FdL/T-T75sF5&]md!eOn'Z
%dJu[L4XU4qCUHX&PlF+pA-_L#/"!38eq+pcQjWq.]2IaHrQY0klpJ(>E,-8k2ccKkpq7H5'<r#:/8T8+/Du;#A;rp<ZTm<3?%R9`
%e3g"m]L9;(N@ZDdW=t8!Gt9Qm.dGq;f8(`hh?6@n>$;(iO"cZtUkf!U(fUH5,NgNbj$jP10k3Hb!mC'TAW!>BaF!U*&;hV8%aI+W
%[+I^$9'B.5-`['>J=-RQ2[W<3i1'Roq\7+O9YZXEBUuL<;Za;5(kr_=K,RPs!jnsjX\p0)7+HmbMKC^q9:."\oquIXCZPBA`8QCU
%qTA:H.3W)lPp;?BLXJtN7F8?M5naTm%e;#Of"#r*]\6k>EgZ(a+@$aF6Cd\\)2$_@%[pkDZ_9Ic,8`-\KP/or@nK9rMCQ%AAOE`=
%UB0)a.7%_cE[TFPO#&$s>k%le<C$DO^`gQ:<k,C_;0$[CE9OP<2$luo?gpER2_2TJ,GW16F[9g_O#(K5(3!J;k+2D?n-#%I&:P&O
%],,#rb;9dW%'C:r#XiS32Mi[B<[2ln*mLZ:1Jh2#>oA;#U4",rI*"d'J@lqn;shEMT.2`U5_Z2'fQJBG#3KEg2?f6Kc$Ql%TIhBl
%8UUrqZX[5sXC*'DU3h<]pHPR&e<l#p&<S69:Bb+cU7D7bP<rFm`=6p7&KS7&Lsu)"K0$j.T_s6:2Xk0(o]4_FKqefPJl1Q*QrXK\
%>Nm\86q9X\UqO<e"6)]WqcLi2L*bA"$BhO9+biN]U`kL"75bK+Q/GY?WFN%J?=kHYN`QfrB:-1k2=VH!1E_]X]NKmr][/kuRjESY
%jE[_f0W8\$E@6j*XH8^:_6$)]UfGP`0CZVt8GH1l00+U'Q3"?jA7]!`B^eGEE:)>1.Uk\J(APhDoFR`1V+/4b#Eu+g7DgOUa"rQ7
%aP[c<2QYi:p#+1`Jl[Me(`F`?$uqXQNR.N#ljsrX)9(Eb8^Kn['I0=[,d].kAjL$*G:Sst&QP4d`19F`aMqa<Roap?C_C3AC;+@n
%7rq+\8-5E:j_Z0'+;@rsUe7T:!Dl@`'@OM";:*#2<g!%4>*Bs-\W,I,LG"b^N/bu>6EAmW3ERh<$3[nu7OuRtW'_Ja5ffK3jq0>3
%-t&U47LM)C?nJ,4#+L<$&bNCk-7oNUrC].mV",g8!Dhcf1j#HI=p!_(S9"aZ<9]$_Wu_0f"(>_o=;7;_PqW;V=le%&dq8h@k)#/m
%84Zn>(E/t^+j(%P=4q#tRs.d$dT]plmsl9C_ZqeB80j;'jgLs70^N%e"$@W]EPl4@)ILDQei=7]@`Y(WRXd98.R,/NDk\@N_15OR
%>)hGSgjGN01lnol+tqj!.Z,.VZ.MoK8%P%o"&:N^GLCuVau@$S>Q9:U)mLsM[B>k;:D&&.cL*>2#nkf>D[(!cQa?jb@Z"=K`7Mo)
%`m'\+,)IHX98-je1b]rMk)MED%/ZgLMC"gT+;i:Jqi:*##']i@GaTU=#\KX@'kAf2eY>*lR8`@t"i,?JV*g"C0I5'nMkEARh@Ctg
%@n;DAHR_5hV$<S-PX0j>e3u[p%2iJ-A9-Y\>W7R+>BW=PWN'UU/t,?$N0]?PmKm70Du4(Jd^/Nn#eIK9U9o)fJ8g-/C:]$uWTm9a
%Y(Dnu1[cY:S;ibXZH#4r-?co^^UJet`[-JWRUo]sG^@6^KHR@qei$[>U;5Kf?:EQU'WRNp`R:`K'[>8Fs0F#l\eA(9P]K0F=h%I.
%RTSe-b+=80Pb8VE(.mhIJcbN780\Sm^HpMdA-T^C+40:`LP<[B<k<aU$_EW#ddPY+Xg<)EPEWt;.>?t-fO/Aa5e`eC2_>'L:a&[j
%)n>%4J6@(:6./J1b<\7.60SAX/tH\*3K#-9$?eQeR+kY\fn^P3d,^'MNN+bmN<!Wd8CH<ZH>Z>iq?kK4_C&4!W&%om5L4Cq""Xg9
%`1XP+!'GXR6.@jApI3.m_W4$<,PY%@qd`OHmTaVCBVdJDG)7Y=)8$gu?%JumV]t77V.*2KaHqNrN3.q);Eo])g^>l8-5T[&>,MN#
%9>jS%mNc3X]u9\fg06tRp#TYG$OQ#!+FdjNOVTmul.K"p@=JJMS!EZ(KI;)-EF_qC'1]$Q=bWT6Y#l8f1O;>l'XfdVaJ5Fq3\qc6
%\>DVjSn3h-fjFrNC(PGod7G]6$r.(DJlj#>G\#BZU!SMAZ\W([4?nZejX,[!'5.X1U^Sf&#$-]uldKJ]UI/lj<])-O(l!^7bB+dC
%\,^i*@0@fG!*"CSDQll,_oS'4lk75gR$U.@8p@\j9JDu;U?>C*$`UUk)cM3#Q((SS##GaV7!QXYJKa,hehr%nfb,U19DZO5J;67`
%QRjp'B$4pUASsdVi#h(YlEEekCQLgqQ^%#r7PI=9o[-9-D#e'YZl>1m4OgDs4&DCk,K,$A4b^OJC`s$0ljY@9A9sVkT[Y'"UEl1P
%V6Rlt8#mRGToG2gEe6%i@?tI&(>f1!D<5u$`*8>qA*G>T*u57P,XbD+RtRL[='?]:"JdGH2fkBmPTC?@k+-=ZJ!A:fH^.,L,V<q<
%-O`SePQnrX>DZje$6I,b"%n#:_(R*T[e2u97Nd2g/#+lB+b#>u25WK4>lk<W[Nl;-WAYGf/YOKR+?;sn0Ljb86q"+O<*g)urt@:a
%+<tu>o#SWmm-,;9XN8bm_ZhbaG$M+X+_:f'Rjjb&Z;1d*VV%Lm#r#TG]-U)O_P]9tRH`X@OZ7"=VbtHF6s9`&(,7ON.e/A5O%Ol@
%cNGa8/aA=GF#.sXZ@GtcD!]WSi>kG7.sU:k-=jle6bHT?Tg5mfV4r3<4p-XK)0C_j;fMIL.1;4;#RqcN^"f8D!F(_%"+H8=FqVrR
%PZB1:5W!U8,&g`djIKNH"9plDQOXID;+tk=%'ibk97d@kfiAEjA11!$(h2*2QAK72Ok?ag"Hbbnd:ZNE$_\)G,ljQ&_l8p.Y.R2m
%"qnYPMlT(]7j:r!I0LrKfbV_WX:Fn%VfZ8bo3,aFO9J#%-j"0#`PQ>__GRGNNYReh',Q?;3WdDsn'<^imq_<n+@760K\-K4-L(Kg
%Vhe6UU4LRljB?G8XVJ/YGmYo2e.ud<hGci+'r(.gR`0o@b<Wp8O8KVjZA:O1a?X66b<2ei*#89%IOQ(rGm50aYW5Qf"`PWJ:"+3Z
%,MZs88?G$a^O:a,U._#4ahAE&,/\!mod(:JISmH!(P/r0`A,5LRr(*``?enV$Vd?1_k"g%k[XaMKk&M];*]"A^;ANW_NcYX.\85q
%EH85I:[)?pBr(eH'86rT1gPa,!=rY<_H81<+$,U^'rI+--`[sh+A#:\:Xerb$HZP7'PWL?pCMY;ejZ@1m(X5NO.IG=Obn1;=DoDP
%Y#;83n$fQ"HIA.r[&&h69YA;aL9FBR@]%d=5r'5T<`D?W?d(nEN^1gE#4$b;3H\Ld\5<NKBsO#\7]?`TjXaljbXm!['9]`2$*OI6
%BuH@_L[ps#.k8s`"A:!4*c_F]PU[5M0Mms[`=<!H+1&Yr>=4_a+`]aABVRhLC+K@5*K<J<$0]Z&%Wd%f+iM>F5`Z@I:f+jLW\Ptt
%e3(#"8f5j:0YW+FX!68%ef%t=E8ct#)R98H7hC#eRHfshY7\/mb]P2%KR6kTd2KPu<snpn.>L8+XbN_ubDN^)NAQ_NMJ-*p-\X2j
%5ta[)?o_;U1qI?#WJ(N!SeT#^'kYIWR@"`S7LF%#qJ;!.@^UO18.@Y',2<X)culUgC0Lr_2*%a$WBrs$_8)AePtiHnp"TXQZBrn`
%CcW3<`7a'mQK(a+Aq\^>"B?Si>0euu0-nS78M1;i,E)A:A4jZH]"4oFNL/lJ.h%CGal33ifdNg5^bB/d`X9I;M_C]gq%;GAX;fea
%-kVc5+T<NsLm]j%8lW<IoH>pnkHuD*A\j1bPYn,bA#h#AeQ+..O]'KFE6ufPp2_B[UT^%7?o70L>D>*@o:]lp%@T\V"Ipd?S(I.A
%"^4A64-J,j),H+gc3/*"'n).Ml`e+VE`r?>(3)3pPU25,8f1*D$EuBi465"F$Fdh\?p!<8co;K:&D:JJqoH6(Ep?Xf^iK[s-\X<$
%Of:`Ej$k^r=f%djimZm6'$Lkq!Xc2<'?\oW0.ORkRC,=tQS5_%lt%jhq]L\"=i]5s$i?Er/`/$l\J7@S4BsQ3)H.$BN@2sZC]b1M
%fJ=`-]1u8kb#]@T7teSj,8fL%%FP@7-O;!fTTM.`WA9^ZA0d$IiJ,IR@&<A0<<f"[AT17:_3QC`nRl]>P]K;A4X_'PgjK7r,*Wj9
%-EL/0;Mca96OVF:!JQAMo%(aXKqomh%f'#&Xb!pZNf88;6RpaWS]&2SHT0=J`DH-0`>^HNLaii$3X5-,ZIoT^*XV@-=HI's['dXY
%mjp/^lp=I!kq*adNK\Jo9>d79JXD1#4jr"ToF92IPd:sqPO+,5_%Qu67gVZWVdA%U_&5h3H#-_qeI=-*=,[MJV&#d0'SpSnC!<i)
%qTq^!P'[<[!i_tpW[WPZ="tP"'EK4WLr>M18sc1(D<d6.Y/$tEJl>h0Bfck@)EVss3S#!W&^3Tl]Y%Xp&;(X\(i2cV.%Oq\<m"GK
%=JS/U)T$Ao4>%(WNm(jHFUJq9?e-@n8oFl[V19?Nm*NiE'l08Rj]\q;23e^SZ'7^mmWgJtifctq23RM+V2VBH:-*H`cXD3_2B2,i
%JeS+ufaC?%<b=ii**_Uf)\DH>&cpf32lG'sh'c:u7).)U[`WncBWrUQ(F5#KAPqi76=<QGLqQ^UESC3%TP4d-!WXj+lB.B_2B!fr
%'8*gV<.=2dPU4ceS&2/P8ZH>)C4a5h?EPMG1`A9+:(tIpVR-mGf8,ADbYSD'&[3"$V)M915(Sd5]-C8/<\-bNm5@NJO?g&`85^nd
%4B`!rK4hPRX0%Xr"TBd!K\)AA/9D["U+NA(%ZpR@?O))hXL=mW,g`Zt^@@O60u=4"F(YWtPiWYD?"9?Q$8b!Wde$InNmCHM[fn2\
%$HfZaR./BQ-*j9Xj/BCGR1H5@/V)1K,hbZ*e6kjh&t/mg2HYg0G'Ch>#co27NR(,;AV'e/KS8NK^uhck[02Sh]jhcBQ>Op+aeNEt
%6iop8n0=;SW%_^3130=l+XHN?"H5F9>7\1%\$L6N"1U\?":#T4*tj$9HD4m!HQg9h/Y6W+F[a6SV;"R4FP;R0$A!qAC7R0sVNNHS
%3=@ekF<'eaM&n/uelJ6=M,XZ!Z%pW?GY+`*7hd@^_W=4i(3S,aI6A&Hg_LBFkLMbYNJQo"0P_J9<b:&o-#XLVM=@POL6=6VGrr/1
%D[6/uLiAK]B..dU,,r8:UJ$Ok(sFg%NAP%5(,JX]h_@!%'I#_/V046/L"C`>E$siF6W\$G=tL5<_lnV!/Ic#.lM]&orV#BU(+qHM
%X!"c[UXUm3&C@?h:f)ZMW\&3n@pgSpl4pp(@nio32JenC68NUYCeUfO71'pS?8DDp!!CGq0IM3='[U:t2$&@kA8WEgJ7hb4?kg2e
%,\`aD<"qIn`IgWT[SsG!`Y!A#A1b%>6BG"uPGB:hq=XS_p+NZ[f-pG3)jue)0sH@]WQu]W)WJO(_SNFqN2]fn&?4VGP*Y?p]BLKE
%5TG=geiuRJ]Ke!0%@`.hNF41-prg&.K`]O-Y-`idj>nkH5Rs\jSg<2m#J-1X3W_[7.ZBaZ(!-dT=9<La)i7;h81>$[%ba!9jt]uS
%M+\#")6[X62+bEE"J*\M++!7<C:qO"@2_4m$8S-Sq4nRXFOGD*W\$6uRk9V'N5W&Hek+Ku_0RVB7M9s$*lj[%gcNJkB"9Sq`@,=h
%R^KNpP+<:_=Q41\`5)t/j=EB63oSn(q_fb)Gpu$p!PD81BL8<:(PZO&kB]kb0el"!J/MOd?PjZrbu1Hm'f_ZJ;b9af-\HRcU!SIn
%"3!d=,j`l+adfu(dYZ1q\U5DS:\gf_Do!lB8F=mCXbh2d'Xs$\9SK+\UA[u%]u=_\Ji4kH432AE00a:SO\1T>piH]VCNgo$Cl.D-
%.`J&$H:%W8]VRN`^1WN+=Jb'9q+=s??g;Jgh6u\%<kC.L,on+fEd_[RPWb^K/N<#u^lkAU)<VA?_blA70D01N-u3@i6CaDYMb.^G
%K9deJ]I-"'Bo*h3I*@8.DZrd*-%lU,G?--9p<q;T"A#:NGjsu:4[l1!%]DI"It=EQ_jG=bRY4/ggh7+"RN]gjA*I5&_4YHG,P0up
%(8DHh.#N>mcP/DLfJEc&[d0>_+D%H8C3)G0G1QXWJ\A;A(^ub!kea;ee0lXe3>is67f/>]0gr2K'sq)sJo.]4e;3]`Lg_(6ZhFJ=
%!BE>CA8?reP,`AT3>&X$M>.5CA8#OT_deRu*Mf`TKR5'TDk(5s>l7i(!M<b^\!Eh.0L]d=&#)puck]M(Z3Nm7kTm=M^2)_(=10,-
%5R?e!-V8(@Ee7si,.b`c".E0hL773jE&>Z=<0K3YS-W!/:TB$dWL@6A'fRIS=G51udr&<!Ga,gUd)ZU13j*k=9j8d3AB?554G^_V
%2h<\`U9o%8A"bNr#TQc1G%i=$9Ha8;eP<N]Pm.PG!n,^=aa4:;KT8i/b/.I2;ceJ8@F_)t#$/J^M(@FH.FAt$&u9&?O^_JbTcn'N
%nKB-IpR3@>HjUBq@bsY7#m.E^kV'&I(3ZMTSnO%Z;pqo(Lm,K3!dSN/'cu4"I>LucFif!fFA`gq8:?KiZWieBBe8TTXX]A]g@AOs
%_%9O&GF]MKZK%<kkXMKkBLEPPX\(FqfWufbQIU^*,e*tJ*@JH4_ZeCVXSs*U[0a&C.3#^_MoG2oM%k,T>5dJ"1E\*-R!%[.5Dg=g
%YEalR=\@BO75Gna`#@Qc3"^3N7??4s0VJOsgPeBiBr)0+O$t-YEg9:7K9W-'B+>>/7P4+`JOo^G`6O'&O.6:\1g?rfG3i+B6p_k,
%qPV&>qWK(A+U9/83MY>2eF;L^!$N]Z2=!+<0l<`&fWjg#oIr#ZA<T`o&O-g?Chopq`"$%<r2tmlQ(;#GM!`Oq-YOs&j<>`t9$&gr
%f=Y(($65n+D$<5cOsV%0A[9(XoJsb_(4/%V5*q!h`KB,S!NC#_8TbXW3#MilA4^r7N^L8Ii?d-('^C?"XU5/0N+F2%"YIMD*!7,!
%C3CgON)O'i`$5Q,rWq:63mEgT,-'6%H]m>bLBYN65mUC]?\8Oh+;+0@*11kaU1B.DAVT(:WIZ0b%0MV)<s[G\EGf457.$Is4j=gK
%b<e9@LcqiS_J/%V1/oN,$1](<7bj(3Dl&+f#\$s4fuU1j4/0L.MUnt305LnkN3[8K$/ida%4Hm\A]6]-eoN%.g-h?['Xb$n`589G
%]BEqUYc+NO-Qhn4;G%\#RnG0j.LBt.M^/.c^r!R_.@K<t.cCs$B4h2q96,1.6:$IX;eq$pQJT*4O&^ZNlk8YpE)*hTJ2`SB@U-WY
%%N9Vm-mW/P$pnI.3gkhGK(g^M@S"MEBGq1j''$EX&lCI"6Kd))o?^'d30N0l<AJ_#P,8/IZp;NN1WkmM:_mA8+0ol(ON;*upd`_\
%_Z,G7>bc%3"p<&VBr(NY8qO=0XqXO8XLV8-b!se>Gs8GJJ^$G.:,`NDa4Jk4hFKXF-;J%BLlX;Ej!<^l!AapF%d5okZ!GaqMb+ZW
%<>:ga+W=:H8fRIP-u`Bq"HHiQRca&29V'_Z#fP0]+YS_]Y9BaXAlu@R3O(o1<%>;5i#7jXl*Qs86>?o:#^.e*?g\UB^p7u=JJH(\
%@86E>=q!,01t/U=s'7+]Ji*&#PUt3X`X=TI?X8%.k@[[g.kZOKPDMLO(tIZOhZ'ss/_kIB]A4&+l<Y$nmad>P"<mHYLa8&'F=#TU
%?9?+"]]hHILn8:t$:Q$,)bgc3k0G*6XfE)q)3iL0j_i/#LRL54`tj+d<7H.3H[7dkWE*_6H?ME@\uG3_l!5Kj8\7<L(DmUi]bFTV
%'O4XQ4A.dP4(?3>B./$e$Su,<;rTYb>^-lSCjRWor&Ot,A4hPgBtB]I-G91)Ka<a[PP-[B(BURJZ;Za-n1\tK"Ag"!UhN\!5A%a,
%4WV/+":mtdlYOmua"Pl'b]:dU#Nr,k2+sXYbC0kp3+E0*T^>15!08hKE)?uB*PFc>Iuig^TU+g3'_]/SMVQRBhk@*Ab\9H44)"on
%Q26MWggF,4b]aIV34$JLa+0R54u&g&Zk+(@L%gVSM/J%?0$bf,/X?(U^b06GI)LAEO9Zu]B&UEZ0S^*3J)S'skT=uN>N*7gXapFP
%g,it<&mgW$muit,PtH@hXRn;Lc9(ZFOF1`_GaGY##Z%OTG=6(qGGBP0n<2-O2l=3>97[l!b'""+."[S`OPQ%$9Q/]RMQr'K*`h72
%"-"Ma^m40pgR<5:,Gr'_NJ'hY(8<m#.`;(Dkft:[M9pSm\hhE8gGE<Lb7;'lFc;^UE5R4WLr+8Sc[g+fb&fS(%%6NOCh(e5a-S#H
%G@@^3-:pf'R-Mrsj:bK(rIs;r_!3IUGJ.NTFsgaN^^Jm;mtK>qb'%EJ'27;0aE@ff:_4GS3s/-][B?F>K1%137W`kM\<'V98p=nR
%EZa$N\iY_%@]7Z0)1Wd8+nU/+L0XJKSf@7V)8nb%^9;p.5ZqPL8*.>bH4nAO`cQD)Huc$'.s,ucM%XjQ_KTY6UI?6<+l=;JVM'n(
%l0]tX#?8,nr/dc-A%"H!1_D^TdbPdk6S\U$U:W3tnYL0+FE`J8"UNNl\iU"\"pLZ0\iW9.8E5'.4&[7].bu*j8bqh$[QCj)'1]d@
%h%A1qm"@a74%&-rW0kGF7s$\QfG1hVp5"67A'B+O1b1%Q/(pI:b:kq8Q0o,2=2N^QkjEus-6GS=mKc)pIH]q`#T\\LgG.NT+n7\Q
%V$l+MBo061<p8r[lUtI2e(pEmRoh/r*@+Cs"%0X]9+n2aHb)<$S?6"(]0gd>lVcrc8F!PL^9ZQ,$B[GW,ITZX;NPW[g$XZuaCIkN
%]+^#Y.s,tZAjBYdmeV8F\iY1N.-3e'BuLjpp-NuTO._Tha[cYgdsacd(bh/U!eZQemPr6(AS&J09QlN=8_NP$AKk4JM!Y\!9Q87A
%m10(JdN>W.GF&#+0SMu4GGmoqcurj0!u?Y;PR?09AJco,1#!^VThLehcZTOE7[>tL[Q=MRlrMg-#UV"eH.q-Z#WIT:(:H<BNZB3B
%kjD.!C+QR8h*GM]VX*L7$sR.RmgeUMJArl<#DMT++D(c&)U[@AP!O'$$f.@EE+,HPl[Lsi])rUtn.c_M4.ruQ7]atm6.ZHImtgBA
%MHQ<)$Jc`p*iW\iFE]^Xa>d8cmL1g<A(T2c)+&uPZpJtL)"(3S,9jt_,[k36M!baNWO+.&GJ&s8TYbo.F,K1GA%k$pErm%Zq!O*I
%-0hLXGK)(5h3_<cOH:pdT'q\HP)We%n'2Kk\hP^_G>S>#I]Ij?33$Q#O8/,OCA5h\<qu)jp9^oY/:;XG-?uRUmJ613b_U,^FpAuf
%$)\3Rmbj56U8i1g_%B4A)F.uFfLZUtR-@B0X("kH#6ka7Es/'rfQ8:j'q.4e[l3k0G;';mkrJ0`00FAEME@'HTr"S@gnEnrjA1Kf
%%`T\STL\p'8=?\8][5E$#(-f77ZQ^"+D/H<V72)qODheYgR4pTWY)ob`%?D;6>pLu64i^1TsoY>aNR0HG5*3(JJNDjfGu4A/`_)^
%Bp9L5B=A!","fKt\XbCQpHic,k/Q9o)0tBL3qt`miPsYrY_l"D=IJM`AdYSZ08Wll4sGp&*qCnF*/%9d"?,tdF7MtIK+A:Rn;,^3
%G79Br?3?n$.Ubae%Y=.G$**+lO.`05?XdlBpHPMOg-@"hP(XS8RI,g:B:):jAiiX\'()EenUi#U[^1p[m0MH'i3fmb4F,BhgC_jM
%3b1p##CEf;@9&-NcpoFI9nh40[]==LO>J5k,PX&\9U+-=!_"4Lo%KL,M%qPI*Li`scYI/#MtWOi%^/P=X3,8!3^k+tG$QIKbJr<L
%ZQ1"NJp0AaSKKa>-_=^[_KBKPH?B.ZS<:M&L"O]?cGWFV@QVL"?<lHs1JC+il)BI^['X!20]KLXKs]#RY8nSg+lk8gG(t)DD-5c)
%K8&K=h-YMb$unhlG(nPnYZN(@[!&f-@,b0i4+QVY&(.Q,g6kk#?YSm9&Jej-e(P\sBG'?^edc0/4t<ZT,^H2oVmV.FJ/(P\FtbKR
%85a0h+OLB4V6r+t5O-\,kCF0*_,+h4%'sWeY0bn=Ia^-3db6urKYU8qm>,&+D`su*1LP<_"`tGW6L#k8a/jH?Pq\h;=m`.<d>1e*
%m9j#"_.ZMXB*_Sp`LbZ+!/&'8p*h_8+`Wt.m7VLpUZ?3UeIE4C_^V[1L:FJ8Y-?XMTk*45XELssL`]W!m0k^abmLEj7Of]9L"&lE
%CRMIHP1i2QN5LA!Np(+XG*UR;P"%TmT%)%b,4S!7#EPM%J!JND;1Z/I/#7?mKdB]'8F:ATFe5+M8nr!0%j+k4m3$PkpQTj@P)-/O
%Znhhm21C8,c4IfQ\=V(Xmr));HU^(*Zk4(a+ep'seBEWoNY2tu(IgJY3Ytj7m9isBX#/ps1E#!%&c$(\BEp7jd$<&)Zl8&0P]d7Q
%`2kj8;;)m7."^n:mGNH!4g/n[nJ\&eN]HJ8l4Zfr1G`Nc7]VJh/`SIS2T(M&mGJsTj\2AT1Tm"Sb=ZJ]#gjO6$DecuRs`ou8F<X\
%*DlaTUim:W7:MsuK0BRCEl!sY#HC2%2+P#s&8QSpC$d#Tk4:oT7o3eE>XlALG\c;s(LB03N*Yp_?9>_g:<OaS#K&Gu7VS+=%eh/d
%hMB_m'@8`TqC&Hd<@!.j$E]lh-)Wo%[=bgo:"RkJ8a*B+[H$5]Uu[?]%SNA>'hW42G^U>@O%AYWW3JObP1hX27]Oj&C1gYj)sdp2
%*DlG=\I].J*TgFj(.Y0D-5N&__J4ju9!MZ1[6kXh"N"YL41quLh^PZJ:^eTd=,?6s8AP':@QTbf%^Qf&&]FaQ>:$_1^#9meNf!.2
%QNX>+6>VF%T+I5%@QX-T&12<`Cr]ij(5!?24$4_Ul*s&ra$:abYR7WUq'`oLdBVem:Skl^,.<-?AI4T&M!Yc!+^%bj[UX5>)957c
%G3J"bo3I4?&<7)=F^BdScE_^r1L<5L*MQ>g:D[>!1nBi6U(Z4C7j<OtEC=UJYsbZ$Z^i80Rau\W;N+F01&;Vs3uYu][6:je@4o2%
%4gU\&3$0]\&[S#2_2)3kb]]e$TXl1!gCXdZbi=E1NaY5nJI8_(iQ%_EL/rC)KGcAp0+5*,,Xf\Pb]_Dmcg]hRg!6ld!Y_6NFp)tR
%+4ut6N]7>7HUbsW_:8!t$aUj<53[&Wb]]fW#[QebmF^dNFYdL86i36dS(KOO&OFKR?`"rs,:,Z?]b.Rk&Vu5b=IAK3o0r6$_JD^f
%,J!c7fo@ltj:X&oG3ma&)ggPP_g;N[0cY5gZ/;[i4gc:G]APK*W9qZ#_XCF%m6hTAT%]2h(!2QkN_hn@4K?nS6m35hXs(1n`/,1Q
%b%ujuF(+nrb][e8'&RQICko2;]!=$E$+3=hH=f6DK0;.?[R3'%+Q$ZP[c9`#SatL.HsS_MLt@[CBJb2GY8uT1)3-AgG%@'$B,EAX
%&]L"PUP7B]_;\'Y?+W;*OsPE"b]`V8$NV;51gO"[ol!"$SN*9YT2B>bdb1k'X&.Q5Uk!%,,AK<7Fqb^+_&OZ_/3@@,geR(<\ore_
%%Nm1dZ)Qf-6F@O5oQI9TJ_M@mn(^9#+>8&7,C2F\D/n'ZhG,C4>?U4XTGQ?b9ZaT^84(8S[_coP$7":(L#%bW6q!4ZdG'f6643"B
%hN#N9WO0N!b1IrNA41?+?b4^r*QtkLqWennHFrj4hZ'B8;L5tQ,(Io<qt\"75Q(?J\_`/E&&Ac`?!VoC7s'q"p#LtPO-`)mV[WRd
%j,^p#`ICPODo^IJ?GET9qW+^=Y7(<`U20c'EO5H<j,]YJpV21Td@61]15jIciNG`7o+p6`L;3]Er29S?Z<nDcn`Aaps/T9bcbKAV
%gQ+RF&ePe80G,r&hdBZn0DubW:(QfqEr>dek[+('Q[#aI9R[J_8$^%_+jcQ:R%GYE!<jCQ>oLK`+WAeE^gK2gU4Ee,DchDeq3Ete
%QO\T^3I8U3<aN'd&r0ii8X7o"%/rhhe;Mj]WI3/n=:De".4X6E'_8H\oqrM7r8d=X-Ls29YD?mC`CsD`k3XZ&r\fe8M!?3CH!ZHk
%R/R:Arm/^ur>&hT_m:q=I]+"286hp>.ie\)M"3]1hpt;3.duIS"G`j>IT8:2p#AAWHk^Igd9uodYqV+Sfe\8.`6(/@\\<\4AD:FN
%4$tsidj;<3!I:Z,&:O8N6IXPbo"jt$]o80#_6oV,\\8J#aL^@'&9cJa),WGW:q8LtNaJZM^[5Tq1d8(UN6:g)N*%=<>c*GV3PnAQ
%>^$.e_XYfKq:a$e?G2>!HS7%]HF>;A,o_Con&.ncQSG#4IP`O$\h\LF^[&W6qrQq]`U`hV@VC9\]=RgI*tY<[m=]/P@`)%0<tU&m
%peuY^C_67e7"1F$fm&933f[0]^Ae'%/\fU%QQL_L+0%`s7t"p-pb?*345,qP5kV7a,3kFT<C)k,cIE;\]O'Fo'=JE&^Pi(D7C7+(
%<XS!?m]H%SpBETd*8ashEqTJ,nOM,q)(_-Sq0gFtZj)8W.h9=%kl:?Qh[MB8:E=mHM@faG2"dlIXbrfW>t+'\qaM!Grgtg_o$Q`Q
%!l,!^hReS%gtRZ'Y]fIZn*`F;Jq"mBH)hF#(X(;bnrM],qd9ADG+NXFnOK5&5K!-mo_U;6I<G41aZkigo!ePGB8]RbH#\;$s7&[0
%_<\ELhqTbie(i6grUn:t25`+RcC\Gs`>u1@:]KhQVZ00af?J6;QMed!RQh4nM;]bqS=I@ACOY#Y$'ZmBaH-<phI[QkaD64@+FZJ#
%Ie.Ts5kMYd*mDghfhX8>-B+g,\?"R^)9b;mN8pPB)oC-ds1LP.3PKf\q)lFOn^Y)"*K91c\,5&9cYd&b(u+9>?&eFHJ,A3ro2dS@
%IPA5An*Kk';;n669mboKdtp#%Y((h?^:ZR6hEDbHX'953hL$[QZF>nTo$,/*V`-!</>oT%iPiDIe)f,(2eP(IgJn#WBWl^;hp0Lp
%NGWe1cICuRj)6$lO!h,tJ%8nbc^VRHVju-bfC*HnfNu#tmX"^*c2!SKY$<q`fkc"Jo<rkW?/mU<G+6ns]^sljIO?6!m.0jGEqO0m
%I<'CO4lN1.QgXSt41j:F)b4NYY1hDk^:S]4ICf@BouX8$B;\Zt1hf3:h_.d//m_hs5.d5k>or2]BR/G5!hXqHI'NH_G3/G9qjCa#
%I9g0c/%8<WS=<fp(Y:%f;*"[AlKn1RETSTqe_-AF05#/h9P*qZAm]HLj^qk;p>omn/s#.OI14u&HVE;OUqn%02`GT)mC>HJ4e:Wp
%0?`tU?Cj9oqK5P=Plld/hu+TLqs*IZ^3T^sns;/7I\,I/$npMg\:-PiZgFPL@&s+,-Z<>+5!-;;hEJOL[[SWq\*$\Mguga]F/Ot*
%MH55@6a]*pHgJH>\pEo+p%%5s]A\;7qUZ_A61/dB9K6$Y/Pk8oT3VElT<GCMQ^:W7bkb+YAuSNIhp\XLf/G($)INN.?&`bhA]3mn
%f.TloQf"@*S50ITN\B;?\Ba%FTZm'#lMTrD?[mL7h4Yl-5eg#4UKfbDo\VM7m"2FuCtgW36)!b:2U-\]dnJ,es#XX=rca.cYaID.
%4cd*8nWQEsh6#S2NUb9Dg#^JbC%7EP4ksh#V[)*8<R1naoK9^L^`<LtH_21CI'CgbjKA.&h6J$tV?&#g"[BI04pEXne^Bn*[/IXS
%S>.g+r>rkb+O4X/DQc4IT;QAXT6I5Q:Ti#]?=#1$VW;.rl=@QF8[A)giWJ>dGN@c@Huj>:2;U)1Necj%h^-]t-oE#P0!Bb.@O;W6
%g6o\&*p<9Bd'oCCI-rLi1T@6^cXT_ibZ-j]7^M\9+$X0jHX>e)_)-!k]t-6h^0WGlG='mDZ.C^uUBs*Lf-enjhG!a^jhb;Ogui>5
%-W>&2#N]S^Y#;S4@sAfVCgY5'htlBLm*2Ts="gc&YC;pJ"RVm%197[n=(@:WGs+t3f"R/U<aP7:4+.8)Y`nq'p3h9`aL</7rn]r-
%`^=V4"0R6HoGR@N@m%WrrX$QGF*GBZD,7b?-^aZ6g>2eh'^t-k%\<uZ3L#0Z^]=eNeJSfR_:6p3h:Cpg>#bB+BCRCOJKH6jX2E=c
%'*`LoD7,k/`e<F8e!DGKQco!hQKQH?BecCUTBp<?hbH_Fh0j\:5M>R@o>TDK=6Cs/bDYKDc'Kf]%e@\T(?Ic=[6L,-+)h1Vr8SIn
%[9U5n8n?i0qSc%?h1VTm6+D,':5Gkic5F"lJAI#hEDOu'q;p@sg4&@s8`+"7\,)?7jb(MKQk7e.S6\?f0TWq1AO6jSp!q$GiZhd<
%X)C#W;r1bR3E32*2hkq6,rU^sJWje?geFs+g#n_VPiku\Fl]Q.%HGFG,.8;#kNC=Zo?MP=R.IZ-jiN1ermR)&dk@o%P\1LZh:8/N
%Y:_2MT+b$/^NiJsa)FkmMg%%[POi-WI[dQsne$1hE]rrsPq.&9U^?b?n;EQeJ&O.trmAa;mqRs99?%bpN:6T6Z^\:.-4R(`\l6r7
%jRVYHdK]Qs6bU;\!+pS@k":lOE6q?%;^KSN_&Q)Bid`OV-@LVsh\_EY&nMDFhHYr4A)!2FPXiq9Gl!eB;5Oca:l_+LY=4je=rp3d
%b+qJ6s0X89_B([b9XQ9I"uFl*bdAkfj0X)r[4(/>W(!,M7.sog5H7nOe&PFG11`.p@Sn4n/]sl-Z0toqZ.>Y>5,MMJ.>'XF?%8JL
%RR=0URIi*"TJ^og/Ird_Dc2;@r$;g`SDnKO`.PeC0&PSai>6tBDa/V89UHpi3C7hDkLYrShi.36F25(O8%s@@PaP[Xh*nN$=g(Pe
%Jm#;%H>V5K#GKcKI%;Ri\b<PW[3\$%XOUpbp0haEfiWT#`nINEB!(bmCUIS?k_C2>\+a`3-;;8E:!"GU!c[!cGMbl0hF80U@,=BE
%2B&\8h^n\YC.&s3\!%.3#M8Cd)Z*p@Kt]SEkOSP?o98'\fKmjD^9-M'bNI%bB:%A`.S#b#YEgOp?VJ>l(gO\R:]6*R:s>0/)uphu
%p%%*W.q$2eJYB`*"ZVb$#;_"+b[;h00VmIIM\uh4j3WNO.(dmg$hKd'(<5P;DAN'J5KeQ%s8,suLW.1'\EqKC\I7E?^6qHOMpq,X
%34c`$c^dH\IP=4gdt[H;QLXFb4o3NH/plJ"5B4a1]7)rW\p/Aj3r@lC^Y,K^I]#BaV':.f7X'qt?p^CIkA;M%_iKA,FqtOT0SXH)
%*0%f$pDC@#`C=?V4#HsbN+%UhrHX/JpZ22;k2jSQB$(F#J>_F<PCN&I`k*6@#B`L"&GY7[3$]"h&TPj0HSEE(F/Rocs./brqjIK?
%!V#$]XlVSC46M+Vr9l]VAgYE_o=oAGGL$6&MtMl7Y\cRnBM$K0h`VDKm<Q?TcM>aGh`9kHB4H;Rde[i*'`.%YS[f:F*/Lp;0Aa?J
%5/"POVTn4eS[8$J?&e9]jn\`&YI>&4r9U>J2u/%QVgoMQ0Z)?^m*'43TZZ.s^W>Qce5\NCI*Zrm^7VdD&K]>n1jMK1KPZ[1m6QEl
%OjM(m&[FD`2FkjVC\^[Yp?"'^`hDc^9I:PRB0TZTQ^==U.rkAf5)@O6])(c[Z`E]Zc"GYOkFZ$cT3Q9YCX;OW>o^ar69+StJ'Tb(
%gh``+*%f'KjfVWmQnY&lH2cR:pt=TZ*J\@C32=[r$p&F,[4,I=U[_$CojKKM.IR#4j_6p=YQ+OH=4r1m'OFrBaj/,r$2^C.m2b1V
%lTa(Y+hGpXI14Mu8aCF-+73k]AKU9GpLE*Fl5Y&:"#"`RAIcAsJX8Cd1'_.BkHTq!MZd?C$H)Y^*-g.L%s/;og`c0m40A:&l?r:P
%JFoBn:Bqn+HDEe>O/J9::+lA_E7h"!3c)$W.3Jlm%Q6$FjBr1]fT.c2?kYU?f^oN_rBD;EONM''[ee6--YHY)=S(L]`s9f%+-&,i
%ds`9s1D8.X+-(Pe\+]fOS:7+Nbh4s#0Kh#kVE91W)1?3g?eX$crEsT%^3b.rr9Dn%Uunq)j\J.4R_/.b`[!P=G4l51Oj>C/Q1CYT
%/ZgI3fQIa``ph<&h]@-J]rk\SGeLc+DRa":T;[n`D9m^V0n+pB^q5!Ma6=$!gR!2eAD+;Ep?4WG-cZ2Fp(]X-k1HBL@9bTs&AOf"
%T2\UafBmB.m?GH">Y_?]WYb)<37AYq'SC@[p>C]Aa-a]/+'BR.b]/RDnnARtNfbAK*+R,.juCB;HFem?kN=hE*66^@0/LX'juCA3
%`%aFq&+/Li;?b``pWlV'\b'Gl]F`[BV`-!d?X93sW@aIoh)_3Tqn5E?\pSShFWU91PM2"O([l*8QWN)#SDB]QM]RnkBO(;@Zh$au
%)dU.X_)4^r&;P]sH+j.!p%!Uh/2'esG]#%`mqQ[:'-^Qa"7nWd0TTN,5A$R^.JrVRp!q"qCPA,BDBonJ9Q%#1S7Pd6)oW5O[)ENH
%_3/E7U^=qbKO@AMXIpF]C#dQp=@p+4rnIZ8kb/&BIsZ88j.#YQJdsRb32<*>M(.eqI;P.:E$1k.]/=lYJ^Ok5q&^*]goG]oj^+,T
%F"l]^;[,#oHgO<QTf5AgfS7<5!C`;lDDTHG/J::AJ7T5/le(nV&DoV,83F?4j/^n%IC\$tg\n:C]t)gcS%ZAcS"%+%oc\^=hV85a
%o!*O_O0Gp)!jKQ.cg@&`2rTtFmbI0Sc0jBRcHYe4m*:%M`&n6Zc9EY2DUMo&`hAm1^h/pN5?tf"\@R"ce+LhIA,W\0F,u<f@"N#F
%"#B5Wj^M[$rIN>2*B^LCN/p!Z8fStV`"!%HGa-hY!+bFC(k%tb3?_N(f,r=7:4N7Z+el#=-`:T9^]!Jo8E&m(hp/,fWV*i.Xh0EP
%dKd+>-B@7c[aAHdn.'IT4hBk>])ggUI?8O8L7,/r*GW"6"F>Il\9-K#kKB&hoA/ZQ,XYs]or](aKMa2/k0pA(ZBS/TI9(j&X3pnB
%EY9#$\^I$5H(/[k%WM(G],KR[8s7eEY$[]h/uL>En`@(Zqn%S;R?mPScDBbn]8o)4D;#;Cn)SuE0&B8oUX^l=ojP`@>c?b0rnGA1
%pYab2%>d]'#FIUaANkN^`maS5Zs;ac*qDau"J4j$GaR(;K_8Z-;ucdA='(a38X@^!:\NGF.kc5SbAR8+ZY;@fFs!AkG:-;MLT7]9
%4/FtW70d68br3t_^W:W!%h@;AH?:>.a&\j\Vc.4l6g%kO]7-1T#N*k^5Y6\P!uL@0#P@VrCIVef],SYPn$&oP@5J1thd`%JH%4\E
%i]Xh9]6S\,S-85/:ab>rJF<E/NfU:Jq>BUAS!11\ELHWAguF#uh[daV8pNT?pL>f"LZ9O;-jO]V:-VS;ZgmP2`^>\-cX_\*C@jWI
%mPpa*nXsf?O=T=1;/e`d7&$+8mEcu4*](\"Xl)>ICpP-A0TfKpqO^K3Wfl,O)uhm/\!7=3@573Kd<0GlD`7].iuei6^ZJn<IS3,Y
%!G`"Mo6gABO1!k[ic,i`Ntp[7iB-%B\VCY9,NHlK$ZGK"17gT4P`1BU1@8U3?b`LffNmqE!sY0<FL?8[ZJH'67rek3F73*1;@3+`
%Is[Dn^kZ2`E49blpIib)@7NOQH[>I\-?KnBg+GF2KDMi%m-e:4YQ&Wd]u0Wc^3sG%R#oD!3Vi2mq<q8BO/&b"osOT.pE-iuV)J.m
%S'09!%oSB,`C7,#QeC=KZbIRD1,H6l4/>l"][PjO\i@J;ptPJ`jm*^]Qk]75bs/eda.4.Yp-.b]2oG50ltH2c]="Htd)W#e_ihLT
%cd-57k?Z^*>[mL_-'f)6#'V=YqSVLrAssh@I/1F<+]7AFqVeKUbAZrW#Z:1]ji>Q:c7XnPo'o4W]did85CW@]`K+*`q-EP=^\W*C
%D#*)QNup<=cThE-=a^88`uhuDs48g9`da9=TC79Ihu7Qndsl#`Y7&f1^0LU!Il3/Iq:FMRqsd0PI+u"uNO@T:Z_fnVep!#[b&)4L
%B%]G@KrrOJjMa"u"Wu`+k^:*G^@IM4kiKYCH[2q7h):"6g\r4NOE[qNkD-EaFKpg;rO)gekT'lure1Td*=Qe5*hIiYdIE9b5l&ar
%9<=pbrdK]Brd=7bouZg3CtgOX55:a,7nmLamh^7o52"5Uip+TBNU-4PaF>;pO5&A5QX%_K5:M*02b:3m]4RaTrSfedMALMij(!Pp
%J&*MXf12>*Ut0nQnH[Mg)]![T&GQmpq5-g[6Pl2I56Mp2Su_<U<k`mOfqs4@9MK030T]cWD7MXP\1r8J,@R#1V_[:4SnG]Oo4s>'
%CL"F;E5p_l%Tjpp"?X?-FmHLW#Y4>;OS:Cj\8=I;%J,\Mn/$K90376b%d"'V$XJPj3?IJkNt#Bdp5s=U*W9A2Xg_kck\X&+BqF&;
%9]nua]bt+6otGV$JT0^LRJ$=AmlD<<qCFbb1-<gl@/o?W++Np,ff@qSs7i@npuIKon,Hn(N*>NT<F'j`a\100]Mq"62K'%-RJH`e
%NPgYXF-JeR<Q+JLT'otA"K<=J>o9Pm.^o^7Lf9K=(+(EVpVX,Va,C_$anj$PDLA_Ro%RR$RZq1+b>Rs-bmel;MiHnB^@JZdb)PFY
%1m-PLjPa4g7W7$#Vh=q^7Mi7G\Rs%a4C-X4^<I0(N>R(mS^>O?`[J<%rt;=D2eg+drg8t0BfZ>bpE\Y#NBUqpfVXnjG?"m:XNtD#
%+#.;;S*)*t_&QTjrSgD?gFh#27+40/JNIm!g;Wf30c4RoQf$QZ8SjC@r7a>4-=X[HZPf+HiqW0%T6i]r\N])PR?W3U1e.jF"4+)Q
%r9p#er"#P9H@8G&50MdAbE&o;ZBbcD]s^";o5`D6dcKT@3QPJe$;"<Drj9+bg@P+jRcJUPpl5a3kBCX0:c(MRakTa,*,gq!>eV(6
%3>PLteHdWe/M#T]hi0:,lc".dI"(anOR'6T<^SOdlH'1o`I(9eR!HL;aE0mhd$2r?T7jALa%,"ZD89;,ZaC0'.IuU0/X8PRTll9Q
%o6C+t"YQ^#^42)HiH^%/-KPt[]):"B.m+pR/S7'T,FH-'Sn'.:4D#jWI`k0I-Tll6A+:^?[[(1]AVK:J)5n17VmC6Xk21?!Id*q<
%3hCOe(>?Aap3?.<6csmpnM-QYg;]3*pE+k*I`]jeoD6?8NEY6oBc![dJ)=Kp?bCi5nnP_FTS)b^>R'NiLTO(%?*S0(*@,E)"su"s
%9T-6[iNhGEdrW/<H`gU+MjXOoEX`Nh@9dIM1=;up)s"cddBtr59_9%]'bcPm_n=B%$XrNp[ddqPjbpGsJ45idA(q2/_O\l-`J=3&
%kLu">m'pVCQX@esH't!9k9cg6=g&"6;3S>'flSZ]NF:gV'*D%=IWDd"@sqMmlA'W-Sr;BFVX(hkrn);:;&:5]le(-F=14XD'::J)
%35kAjS0+*l[EEma8N*Xi?co7I]OeO_Hlj$3i@l*trK,'lXPNMAWXEV6QYNiR%@qCHGC/QD`/!(ED_CUrceft_mTD\JDV5g$MXK&J
%75SOX)bpeffca(.r&5gL[NbISg4$?!DiqM;+<TBORiH4EJ+!/[5.ec`aoCV`NAV1<oua"C(AUA>^/A'DL"E78^@GecOaN^(^Ed"i
%EXBJ&PZo/H]bTZglX[KuJN'XZ:S-WqS[Um$#,-n6j3LLshctPUFjl]5<4.%Qh/SM%)QpHBkdkHtoFN`cr'PXdo.bR@2>N2gjeY^1
%XikV4NkJQb4b=QRRk"1"B`5p)jDE\"T5AW'%HZpE.DF.l:?k2q0Z-0(a=eQZ]E;e$%d.=E2oBn]gh3+(E1b<j"#5^0O0>_3BfYs,
%cMk@:s(6QT@X38E+gM&gEr#W\h0O=DHi<aQ3RFCb^Zk-kQ?ET7B*-]FVr'+&cDCOGs306)hjiKW/?^_=n'95^RlSge?a%eIs1`k!
%gRCCgC;>a7hu'TE+TLq`?bbaXj\KNmDm&o4#$3^81"=tJ`W,esm(#T?lVpj&ho@!"P.2sNpuS!sB;]fUEK2QpEQ'r@pgM,V`@i1N
%(#)H&`HFmZYs"nmU=g/\9]Ng+?ZAO7hW'Jjj*U9phDqb&miGQCqf=^7't6;,iek"\'d"j*R!s6]Z.TajPW^o7/&j^X/&jZ((&d3t
%@X:7I`>YLElg[-uCO@cF_MT8gZeac919)1+<7-Fp@E$?L4eDLPM(7)LU7%d6^H\a^2FSA:**&N(MYA#hjSi7EIH4'>7fE7I:\f'=
%X@<N.UX$9b.&#V)15[t"Y,Aqg/08,8@qmm"B(CeR6(0,R1`jG]'\"ip#e*O":Pb*<Yp)+/H.Ol^Z,%gGl.78"CWQ(h2Ps_mg/)ro
%aPWEmQn8!9BOo;oNaDrZHl&jkS&G4i5%<65c]url#>M'gq?_S748>T#,U4(/ZuX=*]X0f3Yb+7m6'I2kaC<cBl.6%tS9u6V$m*q1
%B(]X*8ArUA%[c?%G,a=`B;Wp(2_X->P\\GNk>doDX+%%NTD?-=@;<!go-*C(4tT`O#4h!MbX0t471lE`l0(EF3]W]$Q(bTS\`TlP
%8MA@i(,nY5Pr[!u.Ne[^KoOk1.o,D)\O"@R!gD_KlhH3i^?r3h'Y>cc_]qAmmq"R5_^s"ICadjm^0ODfb8.h#Rc%ZFk78#;?IuG8
%\h:`t/2r+7-'`[,/2lq(J)"X;2^[:D:'0KZ$[,[nD@2KCPK6B?0@_tf8`SC!/641icD2@)c``XOf?G*V?>eKBQ$E,34!.8.1Np>e
%=l52qg$];4%thdQ^e_\EY;jlj>V:FYfbeiY2[5[!Dn!fCf4Y&I7%TZ9fBXFbD3fB=)X464/%3R+8dbCEMVJ^&SaQHXX,LKK6H`Ih
%AIeR[l%Lhh<;YUT@M1ZDI?]7&@W6:B,aFRk^#V,8;h`S1e%3"Anu$D;%g8LmItau=e2W92/b3)u3"E6NRXDE?o'*1Nb1jG2U4)T[
%2R6]\b"B[Q0`)kVp2S07e/MeU)m<`&eJm_j\?*DR<F:1J!1'iFC[)130D+e7gblBW<Gi'4keq>\ROY?k/&E!iTZ3GbI*sNtX6M3%
%IHe_rM@ktV_Q:JQ*])(h'k[.#ePO+kE8(21+c2r`N>)7*NacatHk%6(/A=Bedl7^sA#oUoWr=cZ-T0tIjL3G5C7sX;Fg<,02Vi(Q
%hHi$PQ?Ns`=l4#pi's$V7('PfoY_!(T"%qKfnh^N0kVlrm)4[ESZj'='6[;t_J[IjPR<Y-aA+QrZ4lb:Z4h,"fnh;CI`W5l[?r6o
%KBtuU=b8=Z3tXD_-RM(PGk,o%3rr@%m"C9-Pb*]G2a*;7/a3SR+[&+)FiWa'YaD#RE0J`anNkV;U#ZO.>OhnkaV,(tT"3.6->;;"
%SNo#*ZP16NkIWqNGk+e$S=n'EjFj(f'>Hald;DQOZu^7s:/9SgaYWi";iRnRM2Gp8;i.LJ60a$WgWS>kGR\#;L?k;@D=mC8n$Jp5
%['rS7Z#nfj4O5brjf>jDYHqC64cj`6IOa=<Hm0dJj0P$$1rYjKTH+oBb9pk-:4>?."nS-$#6B'dNl`4fG/:9d*=huc;X3?J(!s;o
%nnjS42WSRcIF6q9Q8j5-g7f3@RS9/C0HlZ^__Gt#9#N[Z('tA%ROOk:hSg5gpsfRh":$5VNrW,u0sb$O#7[</c.Z+AlKA<n%MlB^
%FKm=a`.6>JRLQ#7EA*[A+Lnfi?1)c,m<Ve:2F5/1["^`9jr5Q;r[;@4%KGaB;aTMmnTg$7ed-]Te\Q+7fH_:QYu\5-]CYQG46*uq
%'9^Aiq-UQ7`9qf#2WD?co#iPNTlWVnP:Jg\HmQp`)Ldld`+Ejb@O4k2cUrpEn(a_!'1*5U[bUoVDeQH0L=h3-6dp_$osT7d]M]=T
%APu"+H?kG=2p;Z^G(0%j#,a2WZb\$%otJJUhcE$M\#,3F)(&jqHZ)UYhM`.i2qWZ@]LPiCX7B<aL-^i;[FHPg`Qm"MbFlfX?EUVM
%GP>]kpU.JXVA]RLF-r't8TQeeWaqT!1.+H4&]H*mofN7sBC&Tk(+l!lB.&"D+O%QlZW/=GEb%[%UC#&:P.P&L];h(dRGGBQPASjl
%=eg^t>bnOfjQor+2:V*YGTn`%rP_dqkhQI6I$A=L,4"-6;!;U0,QY/6D7r^4;cr/f;4Q0[-)=7EW8B@0Q(5<N)r94,f%]i%S9rdY
%nA&2?LI>M7>T\5B>,`ITQ3gPAAKNPEWg.&L[iJp;<@b3-^NQ5K;eSq%b_[#Z;SG-lAc+o,;V[R3MOU&+W<FcPR2!CZP7lZ*9M2k5
%C*lBNa43k@hiLF/GF4Ud=a>cHI+V,M)eN"5)[nMOk5AjhK%leed2?<5Ur3_)g>KDM;G&oePY##KE><B:Um..RG2(P@8pQ3"9M2:%
%(hQZ(XLrS/m?s3s2J5qKAh08`%3G9rn$nNP$(E\!lRT<6Vq"I5fc4dO?-T2;T?=7Mmn+p<D3j1#%.!K]c_R?gI3'[Y4DaZRg9K"Y
%OY0aMoI*.0UK!-*PY,q";CQKHQ/^eX<(bl78R^On/X+W/\/F^oc$^W`qbo7!>P@7"9M2ZLPLB2NW11Np-13dWOu/l[DLl8"9k]2D
%OlA6j_2.R24A&iK-sbHf;==G5j/Gh>/..>8aeIDmDt7T/Q7PX"?k9Rl-.+^=n]7><F,u*[=d6YB,IK&U5_U/0\uPbL6/C`_"Eg9i
%P!o[7Mc-$,XP8h*EGh.4l'jfB!,X$?dOdB&j23a"ppYBMi"_X*BZu2XO"I=BC%CK:.,A+4@r?Y[HBZC8a0%7EKYu$/paq>e9pl\Y
%s$iE@W_->J.5eUqb,"eAR?V*6R?YG16X9/H2NRUAl'P&iJu<T8AQ'elUb.FfZmh-C+tR*\Shhh#eYIqVPEHj%<(bT?7bbX'PnH_>
%V+Z4djmGo-T(l:,V'IWc%r"DtmV]S"\+FthB$j,XLI`G*<W6f'^/D<XDNbV!F%^q.e%3OMH2nesmS5VI/A%eL$e*[WBE')aN@@.p
%'H/2mY^2l))Ssa`JEuUs4+@)*0Q:gPMLKriinmI/N,s0k'G'9"W>s]+S,?]mR&q*mVALh-0I;A;RdMb+]]"=[\(ko^'Q8+JmNI8>
%:[KQ`h5"'HZPC"mLTofUnocncgoWa!U',Kq4aJ4m4^rB&D=[4l2pLJ)KR@PH'($([lTl=f@m?&ojNFTnX1>H]0'o/;]B@'!&$)p]
%L9mK1XCjNY):!Oq890HkT&Ha][^LO;Z^tsEha;8TjMGdarKaQB*]]-V^rs=N`-m.r5XfXoLj"N]Jkp[&2$IQeF_h^@i=FTrSon+'
%VR:Ig0.4l)XbB@U(Y8'sW&caRP`"*nEr#rO+Rs278l-`Ijs"0L%rMfKL?oDIFZFVp(s8J08oh%MhN9MX9+.DHlG)u'.D$Q\7mf:e
%,8A"l5-BQj7djB2:MV*sJK7e.:KSi]F:7=*[>,3FqIY%\[lT[b.rnU6]2T3>Hu)2R)GST!Xf[qf\k9a$bNuisPV*aYm#4b>WK>.E
%2iUdCB)e]E<+su"<LBnn<eT/CY,_fqLFe64n$GbE'TMF*?Zr[!_J&nuAJmt\%q<+;_gCHs[nYs9RTcXCXTE`QFJ77^2Hl31DkNs$
%H"1rU8Ll`McrQhl*sZ'P3.k9J.Q2ir"PRB;?^p.SZNH4"@u[3f1sr*_lei\t"B)eo4PK6*>N3W8l%KW/Ys#s%09:>^G=d9g<2ib[
%%UMG4Ve&9<'rt:d"\_`V*P9]^LVi!X%-7BA%dl@pfD6b_N[AHO*7g[$Yp(:WP[TXk!Nno_i#WJL^Z`k1a*MC.[kW0!p`(eAdeUfr
%(e`HiD\AP8L!<?D[O]5]^GNAccVup)\?4g-&Mlt[,)t+,2K4P`"@`ukJNe+LGH1g^He3BoFY;F(X]]J1c_n2!Hh12Ijn1g=Gug]T
%pO@OtkXJbp:2Sag^,:+LY[KA1lnT*`GrS@tiFk]9niHa)kmbr\2`Rd!l3>,jfC!#!O#;2'Sfap%%;T`%*$%3^Aog:*aoG5?@Tk)8
%D<ePpC`tWTi>P;%fjQ$`if5<0eK&eHgN6`=<XrIl;RbNOpm1g)+p].A@sU6"GG85_K"OPfl[:O@^9Al'pm&8;-*(ut7.nDD(W.>m
%Kc9qb^Fo);12.l3kEtP70M4t^$R`pYK3J<\ctXl>)F8m-$K?B)BkLfV=cH==N]1c^+&Z:/VlHP=m9k^r9jD^K+eSmPW2l9&AN-k4
%6"[@%\NWNECMg7FlFReidpdp/[54[Q6&W\V(,/b>*]=_tS(2KCb"/,+b2Mo5.rdor^>`I9==s\#85:?6K4!@KX/;XS'tI3%),?Mq
%@CC:#=iU/+$EYag=MmO:QBt&W/1.9WT=Se&$M/6oX(=SWn/Ok:bfW(RI^Q>k72(UeNECloVd%X-2k)Sa`\&#/WgGheBL$]7>D9ch
%K;H2o7^;s++>9n=f4Oh]D1Q[\c+IfjBN(O$G)_Ob\]/3SCo(jo/%B+)B(%Ub4ZHY!:La<_DO\&EpdBa9:t]P#9N"rk>RFE;olM,L
%HObbI(Dt6j[iO7H0Wt(?3%a_XW4UEYZ.dJbg)<>h!Uua%p#.<FYtI#mAj>(pR((A$0!=&65'+W9n(:W]6bl7?R9H\`?J(:>SmL:G
%<Y#7C@QsG;%>3-b(;k@cDS6)iH\cfpm2ukb:L3[TJ9SJB5's>Co2H7^ofc2'fod1:EM*P,8KHa;#t@SR=*CkUo[)@/::>H31uS4%
%)@G5]e^M]ODtW0/D1"GA:gAs25j1/-mM2V"3]oXRh&Fqr:cLRS2U(;3&[eIpi.L?*3^<FW5MDM&=LeBR!sNXepMEU5f+#C52Pp_\
%)gIE\9TQApi-2Xbc#j,4WuH;F/uEK."1PZmNV:BS\q,iX9F"KTE%c`\l"tPF[akn0pC.D;jgjgf&8nWiR-Ot=\q.D0@&J,L>?dM=
%=#YZ\7Hl8<[,7Il2hStu=E=1NdndAj+On8ZDU?LIkGK@sI&_?FnN3sqi.2_\L6O?NQkn3ua<+XV`Rt/j6/%2>OZ(D+IAXC"+:m59
%dY)ak>$>87r\l\<A8=HoJB15Zqe:SLQ5B=^MmJ6Vi!^$`C2U`VnWZ,A]r"pmom^lf9cn2lT6ek@:d9rC;a%]uMCmE@jZ_"&VL`Hp
%.8G4gb_Hd>qJLS!IJRu%:77SM%O/tN2lHS6+Of,91,l,TbpbO&1H25U6)HZ`1^BH2+OcnbRHEXrK5+/l"Y?RN+#,8VPD5o<SqTMX
%.98>udiB<'W"90mo0MRb9pmQ>n3ik6,,Pp2d`?T;5)UpN[E5S0a@TsE6;d(2W&'<=KcUr3D&Frqe(5,@Nbo6Ynk#ec9$`9BUQiZA
%3D2-RQ-)r06$rN_2;0'DkO<gshDZC(.5f6Oft`Vn<od$@6%MHGV#gt?VCRlj8fERK1n70W.>*$+Bpm07']0DMhYPOj5je@qm-KH4
%*2Y]bn-];m4%2`eCK%)C%V:uS_$iXN]MG$#25n/_2JW/,g3o$#^Fog#4(;Gegp]rT<"s*-LkuT1Bj^0bZ[Hap(_mt*oR"HtDrFO;
%12jNh1)ok&*6:OcTgL845IqX*gFdb'LWm>'d^rY3F`J\)q+s.+[)Ua,]/ERNLOr/B%II[QT!1I>8QdKEJar,B!MXdt<X#cg;bAKU
%=]$>bFU5\teUmRt#Q<l/XB+%Sl(jNBd>_Zn-qsDZFWFl[2VKGYmAi`W&rpZ:SFo\eMt&_c*S&dhHsWSG#YD*JF:WrfBc(BQTp00P
%QW)E2/g$#3&ZSN[R.k"/2Ora6.DLJEF87MLb+fD9WX.@^9G0O1-Oa-[D&T$]gA8N+Z*(]>22ZIl:Teo_6h5g6R&?gF-/m$oTb.:U
%OpI&BNWK#0`dM$<@Uc"Z-gfX)HCIW([DDI)LXA^GZJ&^8#nHq'g3d-umhI=%"ih6eJR-d>WIuUoI\CFH/D?dq+\=,$S(/7h($1&c
%S$XTJm068B`ftY@dOUWMR_BP^@XP""=]l&L1SF32cE`nb?>+j]a_KM\8:FdriNr=uqK<.S0Uo7'*Jr$.cgEsX`lGRGR%#>.Ws\7_
%lUUC3b:r!E[2^(;O\HRcX/i/(AT1F>P]A6d@?C1:ZlBC=!r$8Aqe/AXQ!;Wf[>D2Zb,l4sX&)RQI"E:pPe25k>BU35/]G?`:sN"3
%eS\aDX+t^R.%E]GE.Al?^HlPOo#rJ(=,@-EW=9Vg)^[Tt.'JW<l*CC"]i4CH7>WffW2F\8UgDubEJGm+<]feH4P`-=)TI)%"+f6E
%U(d,!6D*J9Cfg!IaS$_O3+Qgj_.:p`=ILi7?rEDm$X4.=H7^*4P#UruM7fe+eO`2ZM[?NkPGnd#'S_HjMD^FmP@3J><+VJD0I:/+
%f6:on_%`_35ZDQB\asgiNQ+e*[;*5l:&VJ&2sAotdL-m+EnlncM7)C:CiZ@9gnS'/(SeO29hGl&nN3fl:0gjk5q'lk=1,L-A@Ef\
%Ybe$[%jqV27@DKF+H&nuR?qC7FXu'eol'uOL%ZTFol*6#Fk?;Y\f=IjQ2+Mj`U^b=R'Ll)QGX"Z[f9/PMsp::-iL!;]GKk@I8beg
%cC;I$dDgT<m+8Btg-*om`N_"-;aRoTN96eSC'R-C_oefA*FfW1kt=N\3L]Mc2UN!M8e^mAb6h(ggJ)tF]Ob#G$Lc0[e/l"\7se<5
%-BRASHM+H3[WGi$gXfKBkqFgI%@j2q!K3ALj)%B/S#]Wf;<L-lFj+qJ1L8$pf.k`s/7uJRRBC%sl^6otB"F"NcT]Wr*A_!A#>*P;
%eggD83_atNCZoA!rbP$;JumsLP7R)&9=29e*GS.Q96+js-E?CG86o`D6WT9lP6Aa<fn`eGY/r'8.[.g*mWX'%rIdc%SkImd<0qe#
%IE\_hfnt.[GVZeT2Yl8pEs_b<c`e15qY,AiR@[i/gURB7Y(3,pi&?=]*a&[E+T/SiqD>.$n"W\=$MZpZC&]^Ac#@T;%R8c^"h]?R
%(%;t+_#B?$pao;KDl\E'qf=\q^i+M$KV2c\6*5@MhKK+f>moS[/HtWr&CcF?eF!\%CBSB=!PG%0!2&+D!IT,r.*+&6-$n>XJa2)-
%JZAD32Je799n)GT"DZ+i=!CK'0I'Ek<WDJFe\A`,rdCr!h]4^ECKrSB6Jp:rjq#59/"jgc_m'p"L9A\(E.SiU).V,l/f<)JWma.@
%Z:-so/1/7/rQ=TOHFn3ir0_EW,Yl1Bo#e,ACU\l-mAot?Om7s5F.:sF?S`WUj9:np*_c,_q&5<2CP5_t>s;@OchdLFaq)jmXDoi?
%8\%0UO7@Caf&Efi`F^+o7Q9+O9M]&2\#1/Lnh;f?FD2kIf#pE.B#6N8=)_!fjeM^V4Pp3!3t2ViMuIoWm>JWlT3-'8>CA0p)`Gc-
%pE)O??W>BtbKhXjXS*KiDC=ud<aSL;e!ePPQ.rB(h3caGQcH>?D)D,62fWu+GotMgNUlW<a3U[SBnrA,rUZ9``2qd5*Cla]%;QSp
%eZQ`]Dj@N@c%`V]g(O?f[A=RVFfecP=mjN!o/GHS_d7'4g/b'*%UkA&H\Fu.#5RPUgj&j3Pp3b?4QCh1RX?g.@8.buSD.fN9!Y[i
%Zr(^13:CX?E*E5DdC>Du^SXdbQ2.0d2Qrik+*j*'2C4qkNsiJTg9oGIgico)2<YT<_7,a+:V-)dKH%8V#a(g9Ud-=57KQqLn(B_n
%J?c%KpXQ:"Kc:7Cd'5;g`cJCCbfJN%WjOQ^'P!Ga%Iu406LMSLG@_@n\PG8DS&HfZbu\Lm,Hfi,o!WI0fL/V$:)@f1g[T'f7kmc&
%%]4K?I#\*;fGa)HdF*:uXG/*.OSjGe53X$9?"r'FnG*%uldesTPcJO:>6\m;0A;<qmY4RPk=1MMlf%22-7Xl'EF\%3JursQO7(mi
%)NPFnTCJ<]WdPI[D^?d.?aVE-)7(q;h7qRp[N(UXk\TXDC#PQ3n#*$O=BPmJZriZMnSJI@m\/RY:DU"JXZb@UeS4,n`2Zq+O7-Et
%:&Q8+G[,[()AIA^<pL=i'Q7*"[MfX>jQg_??5KA:5?O(4XM0gu$aD#/jeYCaF^;*:WkiR,DLEaa8t_F"G(XW+Fnt<WgN`bWb1N5m
%?]u!IG($QP>g/#2[Z[)e<u'O*e#*"Y9_8;-hrdu=gg6]]ri>WL(X'et3W!Lp\m*Bmr]/4fVtiQY2#du+2Zqm\5^,$2h5tu%)<brB
%\iZQQrsX!.-i/#tF>m[Y*?)P<L1<++i`s):NTogX5QnVa;EU$CY:2AIGTTMGN<5"'mrM-6"ZT,oiFpffPcUQqglPopk(<T=7a`3`
%:R0[N+LnAl(",h=3FBBNmr/"SP#o3mI`HBA+-]+clc(#JU-ck@MLuZ8[0"+BL$;/i)bLgDWANJj.)]Y=opO_qbSl%;2A.3Sfp&qQ
%J\2/[Y8-,]VS\T!e]W-9Ue9<1?CKR>lY1DTjoe1/hYC=%FEnOuNegG*P6CLo$(h5KWuK5_?EM@u[Kg9.<8#9oTX$;L]5cPB0jQ01
%*7/RN!<7<FJnXqh:qd,On%41e"X6qH4`.pc6tC''X32EMGj")nGK+(@G$V_oS3f6i5TZIiWSm%3Rj=obC_(p&BBB!84&+FQ^+1lq
%V2c]+I+h[^qIThT<o0N#5YqWi$4U-)24NJhh2N1>H>1XeW!!hgDjE<4Q/3;-D7CLArJ"u]UD4Zlp_Dc1S+Z?j]VO7\"`Xk10W)MN
%b,jFNC*M,E[O2N'6/*e[!C06I0eB!6;CZO(0)s1ND&5,HiL`FJ1\&c2;soT-jMH5Zni`_Xg"n5:USF`JMN@@aY(E.&jA"M_B7r$g
%<=V-gB\_<i`cVmZn'`Wog8\AsM1b*cHXP3#(3e7GW(N);)ll_6;9@L-:cQ@!#kP.^WnsdsCmV:VbM!;=+$:I>!)^J/jF$N1_mAd)
%r2*btaKNKl"RHcG_aaFB:C)d0`C?i=@iUD-?ED:t>JNIK:DkfX"K\+Ol]_%Lc=\]j.nWN6B`b1kX#e?p<Vj%BIA\X^N?i^ZMj>>p
%K)][gKVR-?aGgTnDHh2q+PnBFSDU%(UaR(o:Wkhu:<G&_9iWROU6>Yq+-k;YeP$(oDcJcGZX-B@6Ds"JDe1-Hr4-Whh3D-,#p!p,
%3GgUNN<X*lB32jn=edum1hVg1XO2fg26n0i6g^bPOkl0X.cp+(OYpm^A<#Td1l&Z[jPUNsZ:=Au3OlO\pO.%#a5<@D9&5f7OknA)
%9##kr=eii!0dUVr->/=tK4^*08`+>MqdTE!.;bN+S.X?j]/89O1l(oKSnscN]'E:U-U3kF,DBLNm]2mW7__0!e8@kr[<'K(:)Uak
%PgQ-=Eg/<toI>l"6R`r]BtZ")l\6j`@+(J`.AN-YDW=g!hqo_ie?p%7/8OGH6+1<_q?2jNUBF@k'1VI2ieHbmhTXY7F2N[YgMV65
%p=i0QW83OhC.b94Z"j39Q8Q/"`97ZVkaF/FWRG1i/dd/+b1kRTC)R,%Y;*h!34:DcH/<:!:qcF$+CaT(4t4CP%g;ZiA9_;GcpdXG
%5cK"_p;+kj(ekIISLK;MC(5jkHP#L0<3^34(-,'XT_k_q1(b:P]&e?AAo1G!J&8dZ34p2aeg5CWG@2E)e&>f.CrhCIQ>9&Oetu;p
%s0`jg:V!aKpX]e<mP2F?BOVn!pBOtnj#B5MSo1[B'1n$HHp?8j-:`GJ%<%H!%IK6mYOcSW?79nH0Zh/EG#;$%Z@B[32@/`_c=lN8
%(H%B[`X/[][8NV+Kg^?lk!1RYH2kBLKDX?c<ZBLKe&TfCUDa6o:WjdRAL&1b&(\I'Yq]8]q$`mPm815ZhP9m[>nN+RD'6kj'%O4)
%@\\<$fdTOO9p7I?UZZ#A"Wi0niN'$&Dm%D=Dt86>H(o?!W/(EDnOHs"ikHf8[r9RLjT#5Ua8aGKp[LbGI/a'/a5u=UqT\>mM_@jY
%:OZJR0>>/L^:aI*D?%,-IslW`IX[TjpoB`oVg@UbngH_.[#8!E7uM<E@!oP7D-$B+*ogVgAc0!/N%am_=)sB"MnbdSgt_aY^KnN5
%IC]'tEf\g*DuKK>3"&rnQEM_2\GZ1Ys7PL;7pitj^H'L'CAI_T5;%ug1ZV=jrWquf6/U:4hR7C39Gc:#n8%U`pqHYjq>^FfDr*Z:
%n+cg(p$lnucg]o<qg%tRb2\s[(d6aH57d@1cc9O"aKti^o9gX!mi_qMH'c3nW@PdTs6f^qhIY5\no+=Tq<mCSoB#;!5Pk$P?!dJU
%ahQe2q;h>KjRd)nIH>[$H1T(qVdF#!'MA/Lch$DmbHbINku3S+r8m9-ms"d-l-#9sbCs1Fi]kR_UY#EXo?Y.__*d,ZZf@8$B;`X;
%?!TXDF*=nWqKu[%55jX)qI\J<VnD<[1Z/2*\T%j=s($?tYJXpA-YHRPIk%'H?b@r]qoOTcZ2!s0B/f#OB?OMOIsq:Oc1TW5njS9;
%62j\^2r?5`YOYQ_*<4aW$(m:0bFd:]q"1b8!I_S-OY7eoLW+*TqfK@E(8!0BdF\7/lu,&PnW5DiYEkO$?[mL7r_ME(o98bAq:cYa
%c'Odoi[g._ZS0'1]^ih0>bBDM)#kNi83T2T2Y^866^MB`!oMFYBRMC6`FqO<RfD<P>Lt(+cislEU@B[Lr589$DbEsFnops@VKsOc
%D)AQgkneVg5?m4!pW;@4pnjf(a(sk/M=J?0FainNr,ji5AS0L?F_)K"9N1c_g->2kp"/69J%":0>)]r:l970kcTesOn%<d[I`abE
%hlOppqUC[Y_$p'^g&CP\+,Om4[gqNF4)`<*Zmd?_^dI=Kr4tH"$F$;TA/?,/EeMP_]AX9=>Edb+9CK;52h14A<L.",Gk$**".SfA
%\q9jhoCFp5$*LFlQN(3-<f<_7o_S(ET>6^tE,g>M_6K0uf#AoKHL^joO8="0+o_B0k1(K\^jHjOgJM?#oI*fUUDj/XgG[3p641&6
%^L,NO;BON((Y*t1C(!,hpPcik2#dK#q<)+NQX;t,/rLB%m[*(lb2@4fQ6>2*G!hcZ3tChM:U\&d+j<!7h>/b9>o@Wg(_=>7bTDb,
%HT:?.:EKPL)M8:jL#[T2i:h'a5N&Hb^\RIcQ`"ck1@gL=`J1&+S"EH)]XmsuYM\_c]]8s8.X,!\n*"'TXuO^TmoVAka-JURa(e?B
%J\(k$CqK^N]R$LCrB$;6qjWBG2/f/"7ipCd[&l@R]'*'?;ZQ#OJ3Rqoc9B$;I"9oX?Lu.hjU!-CMpMFdc,or7XZ8q!d%:%8#AI,s
%)MVci0X4P0&]g4#"3D$u$nbGQQnC5[Xj4QOZf=6iAFCS'N=f0o.%TuOTibHKZJM#pf<cR1Q+FU@S+%ONn,nTb#2aTF%!M(rrLUr8
%B/Mln?Onjs@uQo;Y93VX-u'6?fGbW`eKFf5IW4BBIZ_jjfK89tlQ/+BIZX0L2KOuVpP++qQE@rp(WY]WQA_r40KJhakjoko\(3Pg
%S2&.Is/8[%kWhC<1:Aq7Fbh.c2S$#\T)V$%n(H47OsCCLT/U6Y"2]\Pkj#=NXp,$Mik>*-!<ODNR5*mBrU"NllB[)f]/+eH2ss)(
%B-8XmPs2OS"WXDDLFN7+cJ/@fKLfH1<)Vd,cO0lh\Dc@eHDG=]U%#'k;U\hhL_kAjj(l#Hs%C_5ZtJk0'n0=G$8fkd9XGAF-?Qbh
%EeA<"+odne6O2$VMQpmlMDQQr"(H3p4jF["A09eu')jib:eC>p"=&Aga]H?g*^b;\O<3UJ-']\VNTfrJM?AP<nc,$@pa6s)s,C,;
%^8FQ\.cGVIk[*1i<.=2S$KQ+2l<d+Xs+1f]pHQcPqO^.]k$KWArWT+UWrGQsru,&@"TAoVL&Vo\pp[9!pn_3j?`>^SIr=4XDW)>G
%MnOH2B$_\`WkGk+I>?1\o0ZB".aDGNkI7qf^C8nI\n;W+F6nO$l4334DPH53Q%=9q5@8*Y0@m2[DO!/d?huQ/T=u5VI=*h<=?-<_
%YrDT9^\l-$q(k]=T0:`9eaUn7l?r`J;:cmM)$HOH1uV=(>90kX7LlJaBF76;6cMPMcjG0TOYCeg[D&TjlhJ]$m@[ae9RkE_VJGR6
%[1TfG_DhQ8\?5o15MBo&55UCM^UZ'?\^pPtG3/G`Sd*nY:a0ZCqSLXM[b$Q&8#mM@^JfN]2S-l+MpNd^KKV$,nL87$6dCe=E:<oF
%q'&EMNPtr#hieU^Sl:%;O.*rKd+2*$0To"!eOQBeY<!lU?$q'fShG&1IYlK-B^+RKH;_9N2B9=npo#jQYlj%8GAAYZ^qcN_3(H1=
%W-BJY#JFh:_9(\5Z$F_hLBdt7=t4KG#/op^D-aupHs3Pt%NR[WJH62W@osBfB_VHKEK(%WE_C]'^`kpU'`#8YGO_XO)U.\tiSXm6
%?\A3t'->Ld31.SUiIWj7(%`;u?R0Z;"O@f0Y_/Xu9JHAd&Ja7\)U(Y:H%\AbJ)\KC8qtN/'pH56Lbh4In`*`':'.&m*ukY""rp&Z
%+>f9Zi&Qse)S*-siW)u=$6lL4%dl3ij_8X`_)8s3`U!qRDZ_Eu;5262!XBghB7b+@O`jDeB*!E9.:;f%85%"tQu)/2D"sU.CSt%'
%YNbn.%5Ai\<[[D_FT3Tfgb08,-QQA0S:[IcAZg3P'Pq)95!@no`2JaE6R+XJ6If]^I-N^7q\<\3lgSnMn49=611f4&4;mNbLk2f>
%/;dOgi!k<$FBsejN5@T-&LdTtE>j+).).Fh!h]6ddeu14)Eo'T"g9+TKHWN#82:M3g0D,5AB'sj\0%?GEb+&AQ,it.[ckMIJB;4[
%`q7Xh1>eF''r'o0WT2rM\8[(`AHGD)O(^t$"=6+dE-W?kQF'F*Y)^F^*2)e,3].3K)3@t;CT0:>a;(9Ub?1niVEejI[m9d(XH[8`
%;Ms'A(_S!2#VIlN;YFZM7`\-;KP]TifAcPX@=eBPQ%:2\K]5tY&!$-]C>nKqg'gQO;#2V)X,,g6:ehDOk;X"4\"jb&ShIJ3SHBep
%ODR8nrm=2ClsR'*[1r$l(m$<NhlNQG,X)mZU^&XYa##@4#-l;9N+@kdU,*W#Uk);pT>S3!?Ds59`PJhsUT`Va`f]-Ik[7ZC=-'Mt
%D=%+*&FaZDb"=0KU`1?4:\[:a^BI$RL6uHNEIgt4`$Lp'D+F[2;m6oF`$$GL'[Q>=g.T^7!`<_?Hn5[Sh&h`X;N`G.i3C[M[0%g"
%"F/WD6Aj8tVujUT2$Yl;eJoX;)&V#XNmH`WH5]t6^-g+s(TV6p?6fjE$+VV*mC3@%9Ur68!*1se!=f>EK>saLXs4'@a@Q;#_-Z@9
%See=+5Qnf/#LqXt[@U3X7:1S+E05YbTmSY,nnF!eaV"k<5]QL:A<"ec88B*P5Ho=AoM#)/UDXIO!a.Le)*s$".PEI)fN.YR.50+T
%"4GU*K]X6BdSZeV6!X^JPIg>`!?seRAa)n$4$06DZ2b)&'K@e=khJ[&b=mKU7h-XhWnE>GkaXpi#D``,E?E0J#MpYQlJ]pCKF)#T
%%;@%4fi2k!?kG/b_]mhF9K;`:;MV>cF-1"Dc],.D5%*#mQ@g/p4>]a*=K.<#2b1/]\:Ud&(A1J@IG/CKf_o+q*4<>>]lp[N=T*6T
%GKkE35BSh,CAa^pAQU7Q8/oo4?ulku_#Hr$C#tN6iIb7jjBNNcJ,_ka.Iln4Ul#1QXTNl)$lKq;+]7G1(-Kat]CI0\B<hJjVAH7\
%KsF#;,qbK'dPV2>*1)IPnNoB5:Xrn5_li>(%sD'I\,hS)ImB/#^/)\N5fAbPU`=mr"+qsd(mNEt6])WY75<8X#%457mbt^H^l*Y\
%^eeVX*A6dY&)l.nM(nL"i86_JJN+fW!8*3`\qeTn.Vf`[H(q)6L)#@3hQ%Sc#G_O=iaI`Yf[n`V]qR@*]-"mEI9'dPqu+5/!4('!
%3!F,Sj:fU1HuP0pK'9t2=r^*P)W`FGg\4L&$qLSR9QI66dk3"hP!QUPpHM'gg*&BY8_`WZ;"tbRLK<KG;R;QqJ&!5/GTQkaa<`&u
%6K1SS^\s?#2,+8rfX\`bZ6*J>PR7k;h1(Su^u,tLBbF,FgclE*Q<4aX-(KF-1R.6g)RUB&,&6X84mENE-g44.+pGl@'K!f[>kQB`
%N1QpanpEdMOcCbni-qOFh2,T#J*rl%m96DL'^GOj*9,G*0n9#oT[E7O^Q5WJT'JW:^=)NF:iNB5&*oJ7mH3:q[]9oqqu0O#MrJsW
%ZrX0S%m.I"X\=3op,XVPViSF6('3^>IrGdQ4q2pH-2J)F7\-QuG55k7_rGub);f8PU-$sX_g%/YY1P>SRtDl7T,Sc-N=t/sB7%*j
%WIFC#`KBE"^Xa@N+AqKKgU.Z1,(.^T*cP$TD]Ru41s8.rnl)YsBic8BhF.kQN;n"s%inD@2EH&3/[da!!u8t2D?!eX.%5"3J*;:-
%&8S>`B+[YNQ?3(q:fXMQ.^3d[)b^9)O/h#A_T=IX2;!<EhdWpOB&fqg%rJ]1/AG.7^Y35NoUe\hs)g_cmh,*%Z``99TYKKFhjj-7
%ou$h$6=JiV^D@:1p>:MDEM)?!VqZUt2\:K=;A*:!'J]?:3YV_Amj[qEK5Y-`s)./uho3a/LVNd,d.dP?8`%;HV>o/;]r#_:K(E^F
%LOH`#J,JTU_j@h3Df8;.a*R78-9lA5Dm]pX%/kHe[cP9Cp5Hp\,P^goD==H=T>LPPIppfUM[d6i\Od;r>k-8Qs8G)_oP_%=kcp:(
%pJYgM_:1`2H`p]Wch:Gpqq1/j`i:/$H.;2gbLI":s8@;3'qjsn/_9Gqm1q3[DuC=b'E"151KLbHP@)_m5\oe:[8X3WHESQKeP<I-
%ZfOg,5j8_$7\ZgiQqtC2?$bp>)qFZ'I_1KHoEUmjU&%j#2hI0_C?K<lYh82@gU08EjCr!CgVn5g]'T+$X^:b":."Y=q!_^CgVq0B
%YP;3?fl+<FXcRTfq$7oqFg59=%'G<(XgDib:b,[F\QNiT:t2u'C5/,JFL[<2Yu5l)n?pnol(::g@jKmr2PXPIH<oK"DSr"K,K4i8
%e1A$Y,;=>J4X*ALOdH#Vdo)f-PUfVsI+?dgH0">?n<1%fX4W#FmaPQip#5uJIiP]-:@Vo%O7U1bL?(?mK+fn]X0@R5`FdsuC)jD2
%/iGbm+tusk+0^H&"W$sTYP1/0T.cN"dV+qRRQugmm:JaV5N7)&QXXW9@[HdqX!>[8^NW3=Q!1Y!Wmtn@rqB;EdiT&?&p:Y8phR-U
%eDFEI/t%$n>!_h$3Zns--Zmr)bu1fq=Dd`rSc6aU]0cAB?r_iM.GJaKdd:d(gM=:qEaa3Uj(<(GNo<2DU':,\T/3;)#6-:\ctA%=
%$CcZS&WnfR?2\QHrdfBKHZoV:Q:3@n1b51=SK<'46rUA<Xc:,@`QhQ_s%\h#<U8ti/g,SS=YA9&UiiWPkDD35]n)$kNSI@b_7q(e
%gPJjYZ<h0O]g-3)Kp%QNO@CXenUn8AB0[BMUc/XoH9J'_dqTgt(B4.:\U?A\L[*DWN$o>[e38i@Wm[_=r:\DV*GPNAh**uLdhjNQ
%W3&;R24hWqZq8strX+();h-icNUd;flWp-'^"/oRACdf2#H@8"qsF=.V%p:=o<6\f$PO%XdK#e:P_4KNc1?.5nAs#ucto9P7u.q#
%p\htqG@Q%LgjZ.-Kf]>[IkA=(>\mB@CA_*MEj'=B\TF<fOlZ;9%>X'Y,Ph;55<g$0qorr,>5&L_.4RRCc89QS?a:1`-Z(u(8"[1Z
%IlMQB5?f]r_KV<gn="=^?S![i5<.ZZH]iF+YBnOcg2WaI#Pir)YhG^6AOaag`<a:NUY.$SO]mCP(#-RIn.3_&j86'p_7@+uGEWOf
%65o@RG(-1`d"IkVHS>!:bu1iHlb4-s3JY^*U;=\>XiK%[A-pdVoALk7N`)g+^MNpRCqk'UZko>cB6a2XV[?Bsb,Y&q22:sMP+AL[
%V:r'^SH$XW4%VO_B[dpRk(e\@DaD8F**IJNm!lV'%U]eZrr&pXl6F!Ie0!r(/YK&$hG<u[$]QcMMY\OZZOK$G37*KBhR+oJ-ah94
%"YTb`]V"BiPLn]NMJ_)Mf.MMJ84*LZ[#-p,gODA.HQ[4tfo\KU]#dSCFi`#,Ba'-!IYinVF;=#/7TK:/?KJeubO%n7Ki>\;9)eL]
%nQMRuC5n#2D[-\<G'(ptX*n'L%k*nO6[X;&n=_^PK-"blDnb$+R@X]I5>MW,YDY'DI<3b`+i*6n2_u\5kY$)[h_S,8T_p6nUgTuh
%)AAK6&_UnHLLQ&h:eB8?T2RF#*lRcMU'fUR\8:<>77&LgODf-kl.0^X<pNt!`:7TG5\,LPpd<4gF1\%d9;gAc+oXDOdeoCVTJ8JI
%`F7fcMjDUgVtta#0sI:RW2Eu!O^-!g/J[$t$J"\P@edOf+;ml9WXln#Q''KZ7WN@m5OFjl=9:MnKVOV]"8D[[)H,\S/>l&M7fL'4
%TlrYfOmhep(c!-s5M:)K48,ecPE@k,iqhSO)i&G7r8-n,2)ZIU'VA!XAfL]"@eY5="C$I[D*9c2ItYhg(K+k\:]G5Ve6nhRWUlZ#
%?nKuF5;X>:DR!J]G<RLQcd/94qhAHSU0-s8(F`]!+)$:oXUgs#:SZq.<nfj"bj>T=Nlhf$cDm^d.b:*HBpM"mI79C9eb(EFik+*s
%-CWhWC8^dX(d.fD`#c?tqQs]2Do\Z>`=?,G^M2I#62qR];I&Zp"QFZY8+O3uNhkGZ([KVc3Urs%d=*&l@_Q^oNqAa!Mf$Nu)t9,B
%>1n+c'=V`,bG!UM]%QsH@/a\<nt>)6`0U@hpH),bJ$A9(FXW&'_rsbVqfAO@`C?WuSP1HH-GpBiZhm^=J%(hpe+2fh?G<+KBSlXf
%Mh4pc/9&Zaq-r%YGrsiu/&iP(/D_;o#ra<I@TQh%:E716lnura@%n)O@gjJ#2B3Tj.>eXBq_t44+6-DZZ?j2*`k-^5%;jH%m7t&\
%+0,=rcp*JFd]V7$8^)<`C+[f7NL(^j#l5h?(<d:@_`\O=*^5q8An_A&S*s-!N27L'KjfIpJ]$@%VVStD64H_%_T:PVZ-uG%9l8s?
%8K"/\Vq-*lG<jQBgCN\\DpHA2.t_$i^-gjKj(/@/`nt2Xaq;8o0t)t!6+`ol7J_JN_/IeX]?A^@SY_CQ)]M9.@!<?3^1'F3lqLg*
%Qd/K-MoG:u9lG&*O]cP)]fn#12I`/0f\H*u[T6(F`q@H"?B6\>SuaO4aH_JHl`$H*G-C6Ko'VO+&5nNK:+,e+H^o/s<u5e=Z`?`?
%Xj1ZobFOE&<Yr5TmBG,Q2tOP.Ye@UnX%1iHC:Tj--DqnLbdC`eJ-l0Z@:I'f>jLODD_gl=0pd?+DKjMJ8):*<Z6&<HEcV(/o3@p)
%:Y"VLSB]K[UQ,/eK7A2dFe(_A-;VCJFg0]=c0E_MiF[5+PC/AQjsGD.l*\Y99LJS)gu%MlEXt*AI\sh_5@8ZV4E[u+rhUIKaSfYP
%/@OG:QWC!/GT^+1-[Y`8gOu1Ghf9[$NE@N9T#];MM6R7<ik/CX_)0""FM++sX+T['PIt+)8l'\qn]^FVI=*n6F]-:]HaCnnRq#6P
%j`9kpJ#^KZ&)0lB[;b8dI_.Le^JMPuXCUT0.oV:Jr486O5+6l:%Etn+DE`>"NF"`\=\Uit;m5`@cJlM:HC_)3rd<nF9=N(`,6"kj
%U*7^jc-@bGcC_-5B:`%)W+G.ME6)K924^,8B'TBp/+;G+HX\kEYr$WiT*l@I3g/7-dUUIL[Wrg!3iuX=\>?GL)L&_H!F&aYZX\52
%=8GT41_<[1R?ne^YQT8Uflk<YfM6=u\27?E`@ot*NQ+3<dO<TJVK#5')j5Z,0,Kr@:J5?r/T.2ObMVo)mY/7R'R]>eQ^@;bDJnPj
%AHt7h/M1"pGAl_&UD:[kHPmPn"0F>Jd1U?n9+]RO6Yobf"B2R!mZ,YbX*.O>^=:KjoPs:ZSpQj^HHR+_;r\a$3]U;GceU1NO.XSN
%o_s)\-[k?-8-3N*k$e`[<A*n+pFEo_92)uce9_#?+3i<!mIftq/t0>+UO7bl$KDn7ilbhiB7*<21/*nH'CjP14Pq]k[bFS*Eae-I
%Khfag>$JlNcHaBbc/A:Y2M\b*M#%Z_I(2-M9X>R3oqi,-]#Zk#C'"<:F)!haZ7\"9(QZ2'l/U$+misaJS`Tq;_p^hg`t3EQ1@6Yr
%9><tsmkC[UVC,S(fdD2mR4gQnZajh_4m,f=;iB$q(aBVR[b&rORt><k.</][QJG0q2P0lAPlc?5k322T/%p.rfdUGR2N8ri8sM`O
%np3TboTO>ubLC\"X?X5_DPo*Clc3M7GDguc?lde2gtKq>($7PZ6=Jn7%h!$pO6_5OXpdP>Fk9flV'(RIb2%8$=kr3t+0r:L9p=d7
%>j]-Z@iOb4I4\J9-=;>%%qh!FG2fLGbKY"Wa(pcN*rL.iHZlN<=*[L^h/DH<CT6P"&+D9\Y1(EQc,\A`j,ILkD[t'$R\dNX^Q("r
%b0Mqhh85so3/<.T"o7`4gLN8G0hT.#@X@T[C)^\pC+=X6Dp8d#4".7a.%HJ"iR;Tu]le>EJ8#35HJ%.np"5nlbAP'8M]ifj4.1Fd
%:YcM[KYp.8DC5'F)Z]upVugb6d_!8K,_->1L,@4ApK:=nCX)e4EB+2Y4?*EY59Gq>VmJsD9cqW^2R9aE5m91`_^<F7Xf_7a@4ABl
%kc_@_a4U[+5MfP6aOE/>,bEUfT2C$C;O`rPVknZgIspKVP\s:FhILFbn'6mLB#RqsHPM$6#"f[\Vcm8+&TcFSPmFf,dgUH[V?FeD
%1FOEQe<>@38)*G4r\[.#UD^?CbOA?mV*r.$M;4eOGM1,KP9lI?fH)3HBW_cPg?fEhe)5nsA#r/C?]KF`;A3<\5-9YWJ\-Jad_$FP
%.IS.@Ka9_/fHQ=+T8(@1O!S''B=$$i+jt>NULAgRVa^M6D.KK(9l>oj@mi3r(Cq]8*"bf<BpJsIdm(\1DpS10L[jdX@%):p_4;-E
%rP<1mKW8I>UhF-6?YQHPlF$U8@%-$V?2ffP^-*6<2#S-UMeDGWC+8OKo(WB*@,pWf?[[6G:UtX-?fETTHR0./0p:hj)B8-nL=^W#
%$e%LW9YK1pKU.>N0ij$qPO8+@^V60p4I\M:%a`JId4Y0MQPq)(d\!bf@^O)P8;o7%g>*GKQSe,Kd64^iDi'4QN[0.bN!<Yg9H)@A
%+s-](`(4NMOgYtK5c[#s7a15H:OE;m?@@6jHiS0clrcaoU`8R9LW:u#34E)[oLJcQFK88@(#fCo=drO*"15"@4^bPe%ORJKGMV<4
%eO=+8eot)lHgWUCZbi$Y?8f,3=WjnT[R7*:n$0P(Ku]Gqn!bmp^!M.7is2r8I)*i;RCd51YVD?d<nbaKT_o>Pq`<J=]\GtK91tXa
%@9;N)TKQ(L6dn#)X/AnFC\daCZa)c<Qs+n3f1`ka9^B$cRt]X0.Q7:ONUmt0-\lF9H>]:\kNA9s%N`a^gUk-/3,^!>HH]B%o7p];
%Fr6m"\=\mrmUG7%/8G]dmn5FM=B]t?s4J_VR2eRpotSG@L2#LIeY,Q/Rq%e0&KTdGYlA#WoCr7V(qR3dZo-r3jn7`,cN,%_CE7?>
%DA@1JQ*!6A0J3osp7H<tId?7Wg&)YV^#+-^0MUWp-2R>pD]Ol^<39Nj[PE.9W+;bneF0mtCK!Y"8-20AYf]IT=W*^N5!J'iQM)uf
%ZZdo+?E.4E:`e7&fsg$k1@\iL!#u=;#eoji#*uj8?9dhh&`D,MC>#Mc/@_'nkPjMOh>P47IXSJ_;jVBLH0md-;OSgO8"Xb[Xk`jM
%q?m/f@*Y7s4ZfltD,*.k9<Y_kCi>SB+N+o\Qi+8TX=W4@lAa8oo+5FkqBXG"!5[7/XCl&sj+t70:+Tq?Rj=NKeSR?Lge'taLhM85
%hY3(DX)M#kEknC8[ZUmcQ.+_s36JL%JZc,5;;d&(=@?L((jt"0+0AP7_5^;=h:7]k5YGCO)kXl;:&!EmpjSD;r.gQ8:63aq:-:#C
%J.SkENPc0!NA6nuB)cL>NG:&64etcBJUstfd0tK_p1AKLODjdZh21(?oER=(H$_>gYeLP1o&=fD#$p^0%X*n.M=B^>lpc]?cqQ&J
%ZQ$IO3RGi5,(5tE3QW*++62nhl1oWRrn"_sQh0sr_XuD_%8VK&g!%3BEB.?4<a23mW.#DcVrR(7A?I2Y8"\1'OB?s6*KJe]NqQ+(
%`ir`U.t5[`Y`\THDR2KQs"bT)X9@2n4T]R+.rgZeb<[beIJ;e:Y#i<q+Yh./Gh(ueI^!]udnNNN)g@C''3BsB;X<=7&/^1nI!esZ
%oQ=3/FdKXE4WX!7R06Gma)ANaJiB;9l_egVj;;j"S0*XYm8S^YDgmpI`L;:*F:"eZYW8Eb\N([;&14hiR(:l<%]Zb>b5?c"E&neJ
%l,2QVFoG^V](jbGi(tu>fgeQHM1Q$Q5ZJ?^6%*X?`q/;ER1tAtMU8?0i-:/MPI\Qkr%>f@FYbm20L(8;o!oVK89OSb\(NdWW;>Mk
%HKfEliG9S5rS6FLg:qp')),H#_<@`[eTN/#JH\q9_^>9VddbiR-d/+e94]&3\_]?hX^/"ljL2LW"bqaE$e89gok66:N[Ml.$?p!D
%[r@XIol8R-?7pM*8ZXQ25/.Ni4$5/Z>%hG`JCq_8F=,k)(@se/#JFAcI;GYX[mY:O?UVrJh,h./L2aLUO4hRoa&:XW`qBH+TGKe0
%Nn^7u7SRHueG-<a2c4@WpRa8K1A1Iq4IRFk?mjh[^h-ohL@_/XW>=>W.F8kh+))&Q(\)MTR:dsUR_NZe66KZJ!rXaj*PJ*%>KC`b
%/nS8hAn.WT7!<H[Fn+U)+%Am[5Ft4r%Fh\5]=OeJ=,Uk64,s_[H]Y+j.H^(4O*+8[>KQe[nRs#XKE4CHbsA/%(t"pPmDUkRh<5T%
%^6[U"Sr16bDFsPAiWX!?(^13t=+G2eMql4fJboaG^"&rIX@9S5hTI@jgL-CZY5@6Gqj!.Sq:dgI'p8o^ViOdYHulmiZF[Eub/#nW
%c5'.RZ<Xs\=KedG7Y-o+O/m`]3Eo-@mDqV1k2kmW-K]%44=a054&N5FYo13Mo>bQ03(-@@rNu9ghE&jH]GgrDB']k#Ijaj!\#b%f
%=)7gFO)g:PgJ#0Q/Ed]pc2E?_n>OnOX/B1b[=/N!ZTHjV0p^^'J__AWX)BNMlHlV2]sK5r*rA'48`86>mnB4YM>XG6E!3-lDo12;
%>$J;gXYnEA=kIl^GKZ1?WV4cq`R8#\F?S3tD/DJLXJ`4tqi5>\HQGl4ded+hfBK'eER3?XqS:4>bKD).J$-FPVeXXMp!rm1?LVX6
%439!L;q#s],7@c%+cjp2@)YDXP/&b!J]6!,>$Xb6*!7"Y(d1&D57p#m'b=0bhP9+0V,2<K41Pq2a1W#3HRJ-5oO0OuQW>&`--C,u
%I70I"NsEnAA<piI-d#gR3g4l;XQ1,%l'o^[G%FM]0P+o<klJC(#6:a6%;4ldO25malMQQSYZ6<s5cI*1j:c-p9)D,BS%4;r*mBOt
%]@9>uNP2.<qTT4VM"YjJ[>V:cVqIJ5+3D.&0?0CGVN8a&S*@rhls!nt;""79AWcid:>rYj+In?K'YaZ]-H]sOV[Mqkp/5eok1D1X
%2\3i7iun:-KQK+im??;L$E>s;>#2rp39VY,F2sDQ8($d#,.Fgs5)u4(4]bq#*DIX"cC]\nHl>B,8Z5++4r<X00NR-pjAoi#oeCSa
%If:^Z2Q4bo*al.fbj\3aO9Zj*@1hjn;sR9Fos(kqLoDO".eYWZ.?*m.:K&@Y`TI[Y`5@eL:D?J(=CHLip"1QC;&AdbVrg(A?j7iP
%\a$NUqr5gE6fW"fF"/Qt\]qh,i9PPO?T6?WH\,aA3q#u(mq6"NY)h_b('b9?pS1`/jcBN#mhHR2Eb8`-mTlZMO!bG68t(!3]t@p#
%o*:>EQ_!n2]'`K6?<\>2[n!d/b2]J.RG5fW^9(lX-16#adkeF)TmM4tkGnH=Nc4ZiQK5/rZthl`DQPl]7LSgf[5LlADIr+:9f">j
%+6K2q\+f@DU;*2ra`o;K2g(<[BYVYlT(HHm9t2&bW6LOB*Ko&\5<d<ZjuSj-.l*#ej14J\+[*BH]!S&'^749CH42WQ`deIkjH-uc
%5G$-5";1CT8fotR-WAX-Kk>4tEmW'J:/;ZS':l2D>&u*T.q/Cm`8(DZV\W_:941h,SF$'T2oXh7G,N'.l&F]uC1l[V'_IB/"7dkh
%)Iu=qQVc=fI`)/]Isfj`T]f#0*gIdPRd482o^^aQrk0S8KNKM76H*e1<l]NTE#^Q+C=OEN;2kW.jsKC9<LQQrXmt.65FT)YWK`G[
%gu@[LVOe@>CZh&INSME;2q&:OEg,>6;Qk%hdsJs3N[]jSO9Dm\e+ucA7pt?s'ah!:[g5kV3=:p#E<`@&R8,\5O+"?GBZOEP[?,f=
%nHN_g=>JSr:X_i![`:/j@U`/Ug'6JjSG:-QoE?nKceG\qf<ZX@)UWq^"r:^ll(jlHh:=h^QcM*A[=fFkgh^iA$tdCX#2'KAS?/QV
%:OBEr2YmdXi;m(c,S.n0VOZMt=tcU9FFffuBhdgNg1;:`k0"RkX2X($o/Sb%ItheEc!(,?r94@>S]&Lo*k:aR52!PoAdram?+>>B
%GeYsWD5Oqtba8!]b3[?reGR>+62Y6NRjJ(KnG`2o5&k!P1\/a_%$3aAG4#s<AnP/ZD&$-&X/aXA%@4qfh*_@iVA;f40<)Z8IlEI=
%>2KP8H@6OGMiJ#2%^Jm2'i9b[lrgofI[D0/[H`[%rQDb6!"+IND2lAjWI268>3l&[rRCkoe<^@Bp,X[;nnQ$DmU`VKFqC:AP+^bN
%q#^?EcZA?j8o,T.^`+)Xi]=OdHZ00iB*Z2`?/4(:5L^)(-RID>'lsMN<,_3VOPm5(fQ81^MOK)6XqLnaeI,kG^T(gB_-K1<'+]Wj
%icDn.a(Ra"bKF:Z0:kkG`e0KQeTgS.eqUT796:AU\Ln+fq1"_-eU&p75*#!;Y]-g&P+tNEL.`0:?PbqA7&AnW*t2GZ*?8hP_1Uuo
%V-0gYm,n_aoF\9,27_Q?>JGeXI"'iEW;,!0:9WNV[Hc<7]40?)dC@9(VcpdFe,1^)ITL?MT:50Gk.o6qO)9s#`VLtVRGX(UWBOdR
%i[<@1?0BrT`fDA,g;Ui*@`DHRqpbF9*Fp]:bP-Vec-0J[@X6YMc0qb>MhU.Y4-_gPfGWH;(3a8np6cS`Pj=+*$[\r1TN9^Urkn).
%oUZDRCYPsUrqI]RS%6ka@^B".Z.S[qMADtqo6YuZrs.#kgsu,7L4CAcg\C(hL48FW_o)TR1MYJrX49(6dGts!:ogKQD_pn#e.hkM
%^FsMAiie:4CW8/g/,8EO2a4r,0As$FqDE+"]GCE!4c4kFV9T#2"8k!>_I$0)Y>$=lF7@@([Mh;6Rs<WZi2=+km%+F_G!(i#dS^gI
%XGIGbO:_'96FPTs_d?4/f0oUeq/%%".)J3"b.(6D2Z:e1$".UR^%NCq9"R[n!Fi&$">\"8/M-"0l(kf%1@&N6'Dq%S[gkt*bcD3I
%T"`=5`YYe^Wb<TceamYbCP5J?(?bn\l*8m)S(mFUgt_\TJocDk%fc;+=Lu2Gok*Sg+"&Znh0^c9R=BNgNe_6Kh=:O/T^`:`*paKa
%^0EF4i320X^s:R\i];NY5jT!M:"\a\eh+[EC16/M"[&Nm48@"=@=Q*W&P_EGBZ55J]1K8n\[Xaq+')Dh1\pi$8Lp6)5/,jmF3?59
%r+,DHFtId;mkZU)Q+>GSMcs_CUADc:cA"e05XAuPjUJTL@h0!DNBODQb#nPP^&Sdb>@;]lO6<t[]@n4mQ2gVhrag.$(16L<I>arA
%k(9^3HE?%'h&oR]P:1nYr8g9h6SZOTXbXFY?a%Di]CkN@lsAQOjYGF\DdA<Q8+lQqcQn*p.l*1,d/sb*;caX/+XnGe+JXl:Cr4u^
%:!d"88ht\d@4a(b$*8P,=j&76mH$)b43R('et2(I7*L/!`b%U_2E"okNK$uiT4>.]R0;MdB4J33bq?/@e/m8dm*03[B(u3T2S0OE
%'!_&m65.PUdl7%@kcL_%rm5;7H5m@H7tZ:`+Ha\kA##5H$aHtIghpr`NL+)f5&g%&C(HN;Z)In>/N1:?^P^:sO.*?,Xi4g%IP@4I
%c(3^_`Y-o!k?,$SR#0'Pel"6cFoNR23drsKNHN9O?LL;&eE#%i9[A^S`dDdXNg\E<0,>8_H>MOcFrOX:QgpGPWQ?q\[_08`(L&mo
%4iUMA+s+oYbiWBfX0K9=I^2*X/*t$Q`muM@f<L=KelZ`=d7_NgM\C<>h3Ib/Ck#?$`"#E(>3op48&e;oo97g@ms-a5hOMd00(2[T
%H]27&TD5\GKDK`Wr`IFa8uIG7Z-%?-4SDTShMs`VMr!%/UpD+h?+>-;2><8LZ+';W>HBpLY)gR\MS7EB<b>ud1,CgK3rO/L1)eKA
%32;>U`;QX@;d:=8`6Kl,1TI#_2Fl$[eF_ta6K<B6H)eA2]%XlC)pLPe*fUqQ\)cbmbsm,'qg*[/FK_tp7h=njNR<sXl1*tk!s;i,
%l_C5!8$T\RdOS#iYdiYPekTV'f<NoOBPZLAi&'8h'0S7"e/f^$PUfO>1UYZa=Q0V!Hf87t0fA47a38>(1U_D?pb9.&pj>)fgYLX(
%><d-8A(tWLWNlEf"$(Q&S4\`GN6P%Uh#sk-Z/U5;4]ZtnH6%?U\"7#sZ,U5GBrj+YIN0Hc>Bq'XR`dmTa)BS$`gt)NkA_4uGo[Eu
%n(u'N[p$',CedZ`YC#NPpeL`\N??Gg;WDE3KsgI:q:#<4ikj?upqtD.e+h+7V`3JtXsGH)M`iU,R[?4ph4BGsVSN,d/N+qt2]\Mm
%g7;K?a>a]#'5LAK:D5foWL8Sf5Iigp1"nd_\?3NY9iR^"HK+bgIXe*b:k"so<Jkg;lD8MTR@JYA9hKnWEH5Jp>YVBPdV*GlY3FE;
%adr$i`oQ[N>\`j#@')7gFD>jeZ)XrR)nE<9A1oZY2Ds/J92$Y3oB0'CoHlT+Gd)EUQ.]opWK"Tdb1-F`o#fHbD7VTIgO%YBHI*Ju
%WRpNs];b5Al3^/$WT@)q3r'>W:[:8!9W+IVG<0)54J1I2)**-#31?AO^+P_L/"<[.l$C@se(r7!kfd#'>+V/.`qO-DmHs#'Q.o&S
%B'h2%RFtBM<+aE7ZY))gc.LT@D>>$HR<bhP2*6qIMpE^tYJt2I:$ukAAR3$oY']3Zfn7CYEV?,0]q$b*Mq>9g[@=5MDY*9G4u;eT
%'6d1B0#"hZ>)MM2SVR".>co,4gGs2mMkci"q"'M;`k/"$Qm82l^)P8>\V6%!\YV^cC+eBmeE6JIS[#_`Rsf4XI.-1[?:uqaM:'?5
%9-Q*q*)H>;M0'rTqf\:XW]r<RVs;u/gg?]@,[QXh:PmrgV3?jNY',tSZ;aW&5.,?ujOWSf=n6Z]BfoPR3a#802]MGcd7nOn5&kgL
%RQ$Kd24s9<hp1[BFM7LnPKhj-+@e<h[XVM%VPhm9Nd!8PiiK(f_:e2CO#a,!\ML.*i$kQ)'8q^,Bab4PYra`p;F`N=@\`/RLm+_)
%MNZ%=7:UcGe=CibV-Q#;'mH"6q7=2']tJC2B9R+KV0_47Dqec#hG!@9iFt;nmq(&JM7;qd2SGSfI+<T#IPc*;CsTqlmeL`Y/lPFB
%UtiV=O37(InZJs"N-AgQ)t0a#bA:5`BE"i5b@W-Oao("S.OQ8Xoenbple0t8MDjIC>o,9f8,E#MkY@K0drkU)>YP"#f2DL^9SFr0
%f5A(CrR5?P`NQY<Z[Sg(b%>;TbUfm"\'.l2,L,?@ii]7tXZcu"H`M&B<k%dTbiEIg364<9"o$Pei-_jf[kM$u3*992N5e,1XfO*Z
%<1d>%[GqrJ3YocFlHMbc>q7JgE`8OJj4qoQ@c_EIC9^ubcBb!b0t"BWIBG0h5F"0nMWT4sl0[I#5*]6\aJP89.l40\i_qj[G<3I'
%C2GG=H#@K"]q!61DO,LUAiH%E/pEB[Q<UcJj@UVYI9B_0D;VG][C5g2MM8Ur9"S(3<p05.k#^$G2mmrg4V:o#]Y:c$Z.kb7Zrao?
%V=Tt1a7S'FfgGU]WqZ^gs3#I139\%f[TZEfF.6;ObI#u7N1jdG]<bg%m;=RiO1O/llpGLS1cKm?X5s2lh+hj/0:C&?S3<]iXo"Za
%r;>Vr/Y=c(1\m7#=?9fYID%%&SNV0(Mt9_1@CQ)R;CLpT4);*TRFIZtR+o$.R9c=pm:N**Zh>0,Bs0V7<d$X8hgS]mJ''FJ^WtCP
%2s-.0Q8d5J1X@!f=68egF0O6PSE[SrS'0?epu]uoe'7%(Bm"]:HLIl?Q+FUkh)_VQ!t_'3me4#%?YlY.>V,'n5+5*iDEj[u4n$UN
%f]g\%/X,!N5,l(Sc^Dc)DVT_hg.go2eaAhDgYI9`]$B[hG7'7T\Qd,1],L(]mChUgVY8iDin47Mb&qY&Y'\ndLtt2c%SWQVHE\2Z
%:V\dl%rjaR3'G%F*3OP4ro'iE?TEMi4kVrdY>1Z/Xj%rRNc+T'>0!nqlhI_F?<K>G?^T\3IdB7_:1h\I@jd\FXbDt^UXb!\p@7.c
%WObf\e"*DuS^WA9r:AT8jp2&bBBdHlPI!n<0m_E"=O*Q)opb.9^%h6Zq;]Xnq'(8PmU,$m:.c<]=0B)m'l+>H$W#M-QcF.Tc-+`:
%bk@<Hkfd@MH&oF9Q.saXoh;A*]?X1$0!DHOXlZ&)9l^lD\QR]n.,CC5*,XRiO6ceI/F'Lp^"DGaD9\\9\P&NajR5"(Kn!/fIu<.0
%aGo&)[NSuFDm-b6iqQ"-]"#%lH<.[`h*3C_2YIYRMhh3,V:3TOI]5J73\6cV/ma8\+*GM%\[f+FXQ[48kK6*DBieV:Y@aeTdo"Zo
%e7GL\cRp8&GjB;0LV:%chS[OSWqY_fhT"U4dH'-D9;`YSndZRr:]'aeVbcuPG.T*)B,57f-OX"``pP`'VU'S']^^Ak*IiKT4`7'%
%K#r?#jYW=t?TQN8@XT\T@-SOk;10HJIpIM/>rm:[]la^PNN)/MWf`ndf8]@6PA8D=a_l0@h)fC9Q'Rb?Y-U(<g-<0\D`-R[9pk(f
%gb5_;Z]3sX46@iimFC:BC&;f!?gGp049WR<L;&#Y(MO+!%\Ac&0UhL)m6F5$Vn7u<=86VSH8);N*Z=b4omc3E52LJ<cP>jXX,f@;
%^;kF6cGR*h-PjU5aRN3:;]R<qX!?GulA0k3@&-`giWjWf,Cb'?2F]_rFSnXdN=jsd%.t!P6b"Ofn;mO`9).U]Eoa#`"2hkomPcul
%5FT9J<ZSb0)^Em*NP9dnbMYZ.Mm^PqXhjs*##I9<!Y\'+1gis$h'NV2Y)_#qBsZei]u^0OJPU/!>HN4Rbced)HK?MZn-3J7CQFJS
%?p(cd%kuXg<Au#r$`\>=HAra=IX1LBZU7>N1rIDrG-*WLg&9(rbhD6ndd:tF*#UfTbYO:_KhFGk()rNJqn%&)_L[d&[F[W58_`,e
%-Ne33Tu4U"pAGn7?3?_JLZ_u.><qg?h(Nq@msJaD&(Z+e/oRiBq!L/-YjHo0Z+BJC6W?G5*e4(V:Y<$Nlu^RRV:/W@Dne8?IcD9;
%%W-<iE'h[OhZT)Qhg5(i't$9rT]YF`3eZhTBf;FAVfq[>RKM^108P"'kj^_sg1M3+GWa=3+Br[PZaR:,%u9=;#G%]HDXb'H+WSR!
%+.XA+6\"bJq"dFjeGSWN"RnT>^4NG-4RgS,qLT]9pQ5'?GYKS1S*9NL%Vu[>&,d/_AG].2DUfXinDA/V<;dTkC[L+G^*/h=+1$iL
%TAEj'!6'N5r*-N+18rX8(X:/U5U$qh=_4?0>Z6!JIJ^+a=.$:3%#5@I\6grC-enSb?h.:boqtQ!LpPOkG-b07DAW=MNMPM,$`;0t
%Zf42n5^gKCS)a;eb^RD)[e3+b$o6m,n,J!$5C_8Z45AhXIRsuu%R%_pr*-m\G:qdd_u!d.r:2`C5:Ph%.+)$Z$CYHuD=pWdcX$\m
%[#8=O6a)r.JXIT$^]*I35M_:n<p(Lr8pH$67e[Jaq#0ctI7sKbUuCn$iTsdtJ`f$7Gg-.'<Ynm&Ur8:/_^WX0=+sj-G,rYZ^"6/W
%=K?XpTkN<Qb5eQWHC4<;AU7DUccZ&jo`;D4>N85uIOT@CHMg7hI)`r(B_[%!L]$B&5DI_bT+Ea[eiJ&kd"KYsCufQLUQkDjLlhQ2
%'0[9:/lqahdDoehVg7cR]m`r"Ym8#*psD1CMgk@M[dQE=3e8B(`E.Bb1@XC/;IP(N%l#8_4uD[4,P^Y>=5gW;'gfB&J,,/iEkPTY
%97FK=IQFRsZ]B$qCuiBM&)2,H^q#*;-dd!)\B$c0OEhcE3WIi@rhK4Ss-W343cYMZ_ljT_dds</05(U)iNI`HD*7g1FSK]u5Pt_u
%m!mF8M*?98rX\pD'7P63f\].`[-`fWh)HXE^VCp%s7.7LT_r=C>hH\6,^og;*I/s8QW2+K!UP,(5;7*\-44-e(Js.:?IEhH6't!+
%!gn(n_?JPaN8=%"bTK0T_Je+Sf[M]KXU,-j^m5NWP8XW,Qo7N;#OY+uHP8@E(bE)E[OI5(0TD\lB3:fXb]c42-O4Sj.mS'(T?gQj
%<$e*N%@_+k0h_[ED*-YHD0MOmN6>$(9h,J"4;BQoq!_@8q=kPEm-V\.Bb@Kg=)8:(<SFA=5nXapL$L"O`%SkE]13)B`/&Kn(J/#*
%P`?5NbTK"uKp,.9..hb%hZ.ePSa!cZ!7j`nGH&&B3aR?X0I#a3`QNhg@W19/RDG$W^4"Y:K,Y>+&>;G\`a)h&_#,J._uL3:6V<^L
%BHuaj5Uq!PP!TM,@%\"o&<>PA(-j5MPE'QiNq,'FPQqo?GS<X\"?qFrW:2%g!5jk4j$I2?ckInFKenBLUY^M0j4^%+e<,P3fFu[C
%&siuqdk6VN)b(H`2;m@GaS:>B\Z5]>&dK-Q%N;5LOCj<(T-P3]1/d(U67!p/eooW#?u"sOAI4qt(koI2a>;PV,:\?%>o.5&;B)j,
%oF.sX!"9_%_5>#)Y"-*T1D.Xb^&\=$&r:Zi;5K5j3ZN_?BN43s@RaT9R&!5s"M3!3,8&u_Tg.O6_Ke1o=)Nsg#251Jp9hc7`^9l"
%mVX"HQj\.jWEfWu3-dJElKuK:!XT6I`l!Iq5g#[.1b[8hMI9c='crBk!WW^q];#qa-t%"TNppG;7d6^<R0PF2oX'Ma;@5Eg0ReBQ
%-_$t#+I*A[m\)HGW&sR1LT#<WooO5(M'(G4O9grRjOkjK+_(h=b/KF`!t=C#q`)2<O`F][+eJqf*U(<1/EUolY0_Q^_#">*_X+Go
%g%/3-Y"7"-1o/#>U@,6qi'5=/!u-bi@E60(+V"#/+NPNm"\e8T.D'ic+A;&DAi5H4iusmB@U><&R>C#1=Fg!54qBp2-tsJ.L]CDJ
%+?$GcUa1KdE,^'ANXnP:dGbHJOFZqc*f:9@4Fhu@'SA^<$Z>7F)A)$XNPKT;]Rn^r%$E:eG6Y",4GclG9>S\m#^5ar&I]RJnsFqK
%>*8lk#Zh_5Ld@,EI6UntB=KmPH1(b);2m@_LgX)(%k'>>'2UH:iO!;G3";M,W?j$%BjhLN5E3T/?&MGh<t:.$#6b7(;r[T)*S%20
%0F6_FmTb<ho!RR'+=if.&h$h\>XBd1&EsI\/d_Fm0F0'K<t7@R!Q3U95^Wc)WIlJTC"qB.<X.NAS4!/Xd4,G=+H9o>[=nXEPd!$r
%r'6d^E.L]7+HVYU#PJ9XF'R-N%dZf&(%i>M,p4&#9;"+#Ps4ag_Ec_b$o;QH&.F7Di>`WmBuc0_Sd*&$q.P9n4;Tmh(g+8@]muUV
%i<LK%B-?G@j<<#/YjMMTcdrXa,UnWoTISC#3%mN2J3[3U'9W]Gd5[k]db&+teP]ko!6(YTN2%-O*RHH)i?0qdDnnaJ#_[&h-8chg
%!N7k0Gk@po&1#)b,*7]qOBE@O'<Qidfde1EUV6lY9H]GTLABXoo#7H8?ITdU#q?E)&O[eN1TVC4IBFe09,\%['L71o5<ND&?!fUN
%;]nLEBMK\S.nDb^&-sR)!9!'h@o!oZV?=jC:r'/&1p'%1\;4YYkr=]3JZF28[h#7FTmQmg/;9e:3Co\d_j0k=X'-)g!Y]f":&mcl
%[So.;O?U`5J4e2@,ZYZJSj9LrLDHsb;J8G\YEc>.W!,^BT4nJS%d*g"$7lNM%0ONk0FN\F=#'*83Pq3n7[AR,U`LV[B`R*Y,gYFp
%"Mr3Y&Zcts+7>$1n'\#)+fHE[;C$>=.hEOl$HgBIo)n=&MGZb58^0NP+HloAUa@XdH%@:u/:gMI>_[:7T\ut$5_r+\B#8..<Ik5S
%1mbHbJ3[NGGR>AZl\J*lK=Zd0C07qNE4l;#.rkau[=HJ9:ohZ=*jnn=:Uk=niWQ^k3!AV92Mm'f`Q&-MLN\l6?"h3]IFhX@BY:!=
%5e9u5T`>A"":%5gaFHr:&38/M2$rhcCff[Yh^9gcHo0i9"*32Ibb"%1&-rD05To;oP>^>2*Mu4H`>X:Qb'IS3<29dDZV(iAK4S\3
%?Qc8^A^5:D-fB_O+?:T$O]):UJX=AM#BJ?uP;ie.*=)iCa%i[X+DE-P=ka`fgr^IF2_2rnegsVD@j"uPprXi:aadV>!!V*NR!-h(
%ikB*DdJ8<?oZ:MDYm</t&>;(Z"4>mlhiVSX\l(s$YYQ3(Q&^k7RBR#d/Y-a/Q80E4JJH4=P-N^/P&\Rd1Y+'4ZoXaGgP6aV+,q'T
%?%q-)J5-.Z0lX_IY);Pl%R>o8nVA6G5QcdPI:RAN&.9aU7$-E$.`fk#b-s\m+Qic9M%[aMd+)!:V^Qc)hPSa+Pi6qRA0(r@&V5,9
%/#1Oc[P_kKOA"p_I0+nKR?,NiB_b8me//b-cQEe;#_Kdhfm$]ib^AuV*7PZj`m>@oKf(*B(j8/OUB0a),CpM?]Aomd`e$LjfVUk.
%U]:LD;7uA#;;l'QVV)tUY\/4F&j7_hC7W%X1ecP4!t^m@4?5+!j8$>_E"f0!S0$$bW;R%])AQT:ngqS_p96AG=%Q-6q6cbV10XmQ
%O\`Ub&;G_\%iE"$=eFJ/1^FX!3(Y/].=e]*77J#T;nu^&:kE]nL1DKU-HX%2CudpXlj.;A1p^Te$"O=PVs".2gCe@8E^Kpq1^rE>
%*u-i<+Hd=@*f=(Z/qB&c-T_d-$/Z4@I9J[f3mW*p3&c1"B]alU$TK9fZ"5Ob5,8/Laj(bYjH]rt\]M/_)i.="J0b8-"FpQMJ\/o_
%$)9Ef;_Apr.'c!%5le\e&1W,/41#$s,8=oW"[fT1&3+3^qOY).61oJb@KNJb_L`6N[B)<8?4WLhACghj7#PRmS=1DA%D%sn"9o^s
%'*JDK9E>EM\rDG4*CCs1XI;s!KDIoN!&'L47f-5D<fUN7#ft1V_p9M#-."%SmE0hcEgb:&&rKmsquY)UD,n.4GSUL(e?0eQ^SF+/
%/.!cN^l`jo`QnN!N^GGHLBG`RP6>"rG-eV.K&aUL0Z>0](fuSg$1q5RhFRqZc!CjJ3X>h/!<)_p[5bS&4Q]9#=c65+nN_"hB*%mh
%^1>XLUSs/5K+,)f%,sm`@;?iLVM!hfca3>KUB>;eULk#W15V#!J5I*q2DHHiY]Oj;h]eF\:)8^0<10FEk.8LH0KHZ6ejp%0:GL()
%QPDcGB0jrbn1YmVgb<@$LKJUDTa`md7Z?a6%d+F2_5mZ@.mSeX#9dFTc"^r%B;t,X"U<WoCCYu#':OOj,*N-(+1[t[;ktL7S7$/Y
%2H#,J,!lQR\4)A]!G\h=ok'"PYf\B4#pL,e<^(`X(ru]^MtWsSF=FYO+DXVX/-_J/&BkD(8do$hBau8)[>`po9<AW6R!)N&bTobq
%EKuB*(75b:/0["%"MkqNY]PZ?.i?Y:Ps4dnMDa8(d"1RFN+.]l1/C$>$>:Y,Yt<07",jl#/s>&5!5298/iEj'6oH0ZUF&l.QerP/
%Ou!](HRKGB;\f(n83GjX4JGVk.O59F/@LL67JPFY#'DFVOs_tL8MD0(D]gFH"H&p,%*p(ETSp[N)oF6n?5PR(1^Eb=Cn'rLH\.(S
%:P#;'NPH't?@fd%gL((jcl[?2Ie)1.dmqm?6,nR8@q.3T6-Nb$J<UN,5@sQnI\p,;A>ond@2ru`fa//1j5pWPi:sm@fbrgs_OB'^
%Q:?R91//'E@ZOo-<ZoUris![V&bQ>C@%fp?cAjP/#d@gV]n%?C%'46?$A5JcN<I4.YUr"U$B-&\b`u]M+cHL9+?2MSgUU1e$S-IP
%rd6mFbs??F*[-f>S.-RU\amVo#5n[k_-i`?N\uH_a?1oZ@js`9Ah7mS_S/;1(u[l+p+>BV`q@aQ#%#amc9QC]66j0R@+rU$O;%e]
%L1G+8ZC$b8?,9q`?q%sUaqc*j\i/u-;!jAJ!Zc(>FjYZsL;G^2b5j@$3TsRU/baMpUC@4r!Y3)"m3C$KK*?!7/c-)^j#6hVn\Zc;
%mmn4$T!D)t9W(466S=bP8d7TBj0M+*?PIN`>(ILM>,Nf72_Q9aKKt&bcXddrc[+1K"cptUBr/og5lV*WeL\M;DhZ1=c&9l/'=rW2
%,<.kQJSo:29RMua+&Gj):_6#,#cQ1G)5)k\%Q\W2e-L/7:t-p$o,n=W'2(P$N7K*c.&KS*J;jS)$_pj>o_f?^&UP^9\E$4"bX%'+
%Ifm.?+HCW)9gQ:B.YIL32BcPWN0_$`q]^1ummO[m3=MnIBE/@7+'QXHYjA'Ef!f'&7>[+40JPgq+:N]!>tAOVBD4R)&73G.?q>?0
%.mQjP,b+!=.Ph2VAh!e3^u\St\e&:r:3jj:H#aNP8Ypk$o`V5&5*L5bZ)'-B8-Uqt94.k+IL!*b=YSmo#MR2,*0N)8SeqeCTkik4
%(`/HOBE05YERkZNT!(+]7]s1R8_:gA$LSCJ(JKVb7OI;k));n[B-ip%_?h&+Q)d9%-gD1L6)dCs4+t'$3mM=kbh1Ub1\*_O#HDsH
%4(`=hISL7sFC8!D]66^ialrm4gn=YjL'Rs6aC&juSX;8*CeN\-ARUID;fHVRPQjHEK!_k[TI)T#*Ce+hW$-^+pVfu6qJ(cs$pPWM
%83S+_3@tZG4(S#34ReFHi*;B(30,7HC[!:3UbaCWlY;GGP'ICh]0X=oYVAklV*SN,"[>:d#u7X2_VVO@9]%-`hG@B_g*&K"%,D*T
%XW5W'fPNko74j'ea=I?=K>!AGLaIX^Gi:jKai\cgCo^rQ<Z(B;cmd"-!D_3D=QneRXgJ`V+HV@2Hqk./l9IC`700Qg@n!08,;k7-
%(J+nQgaZLWS?Wi7.%nsWYot1hK;hKb1HAmB8\k-*`G$1OBo9u'QUCN9]-E@kp$0mc-5b,Ops,*6Af0Y'#_kbV=kar:'K_N%"UuY<
%(_:a$"find=Bch$kkB.:@I]035\o-1UKf6op.gulVn<^p7$Q1keO8(J>aro[()lXp$q[moNKXNVCEc8`'ad&7Lp"q,Jb$e`!dQ:J
%bR7MYqM$b@aLXF^8;'9Lr@u1+JP6L!;3_-+&ru)cS]CF3'biXA)\t4P?hq.M6&(qaZk0H$>R!4`%:;`#.24gOk9/][YXfr)4;=dW
%XJ"Rt?p!'b7GW)g&>3.9fX)X[ck."EA3\B-P:[;8(U,.IUONlA,67_N[Ug:`,5FnLSg(7E4Og8?/gf%1cVE?+>OZ;.c`Roi&5*m!
%4Ftljj4KG>kY/fH&5cb%/P8p^#ZD6DeHA]$7aR7XqcRqo!QCn^,P"4"!uB&I.RoN%*X+?OW!,%@QeikA*-*<$1,q0N9lVUL5qT=<
%>X:YI1r2bb+NnP7CafMSOQnEZ7+g/0A<:_&/jNFi=pS65bJb3f7sZ4TjHP,6pq-m-X"G`&*%I(9Q,H-<`l>"76_K3GC_Rd]@LL)@
%:tG=USGj=,4^cMT:JfSo^u2G0@F>US8[N5XD@C2eOUYE<8]RtgE#><d+9=PC(4H>6i6eiq+S:0r#'.MjAE3r'k2,(&%+ho2NA18f
%ZE6,;/L]4B,rQ%(!/a&-=W#C;ZKhd.4ONW#*+QKr!)ObV;iSa\"G6m"&;IQDV$JKf,-O9/]I:n@2E[05\@;S++)=IuT2'scqN2;D
%j=`V"/%"m#l86Mt%*#do7ckDN;#pWOjup_hW5Jmg2oQO^l94%A'G3!e[`5fcnt!#G#HVM(dZ2+Ho,MVr*Kj&qa<79P$(;m1m800Y
%`]?d%BrWPu!YR/Zdfmc&m!)`MU82Q\;RTa17':V6CP"Uu"Jo!23-a_KW>JT]!]X$PS>ZKTj!'guR>W0L_Lh8*6)T:oDX22mEMgSl
%6&AbR*!T@iJi6Dl%58L*$nN7*dH<W^&A0(BB$QlTGnq8f#kP=pYAEf[p+XkO;O$JM.md_mQs_Nb3>AQJ'9^"MR)UHR0ippM*4SYd
%!@3n9@;V.b9W>gX3pdk'+;F)XC#X4u@bCF7k/`fF7kbRYI$^rN/oME%6c*Z2!@=NrR7'P?3H'Uf8-MNIFkBM-fR5:l4S5e8)qd.N
%=hb6n$Df5KI16]8_A#+E*%7s<\1Ag\O0C1U[:$hi%0.%i%[dGWKr];p;MG*EPd&[Z.SIAuQgu^FM?Ci[1<^9)Ks?L[$BASi>%)]H
%"Tt!$7h:rEQk2a/=3A(BO9(:Z6m9L!apJaI;rS/1JtpUn0'0SWlGT4%jT$.Qo>9/_X<.'%&UBD]ED%ODIh\M##4F6Z6)P*;%)[XR
%b:BNj2IuhsFq5$]Aj=*4;(N/#Ysl'R<^\*J8sd]qY^-JlOeJkVV(G;P)&$-(#%7O%qe0_R$^0HSVSj@hI$1T;ic@L@g_4+7U_rNZ
%V/h+jK6?Bu;fGVK_dG9X@E/!,K#/1RBll<j=Q%%KP%o&O)SoVY8Rm\E:qp/j(jAL_!8\q^NsHE=i^\@V.Uh\rUT-X?0X@LbH[l,*
%TBR6s&?SiN3.U7cPTa'(q2B>T:>6ck.8#=?4@0[=ghULa1<'k@-n_VhY=Wu$AAijD0dKa,OBgnq-c'4HMIN4gUbYcp9VJR=#]%S_
%1TbMOh-o:HKb8RjZsu#MjmE0j>qa@RK>F`o'pDin=`K40(J)2$,T6l_Yqa$*=R--aPV&W8c%,.5J[lY]JsZjAT'`XbTr\P4#3QOI
%ff$Vk1-$0Wdj3HI;?eRjJs"+UR"teW#kj*_Ydfq@8-,Sn&q^lm--H?t*'uoXe8BbZcKCpe(&6bS`oUB,_l5MJ)'Tp!J.8T15]C,0
%;@sR&>[r_8?&H]AN&ba-AXI-XJ98[B#I#_c"hRmha=tIk(7r*J<f#+P6^,p-@I:0^F[tF,oV^#(^&lh*QQmE5pjimB)00Xd/a<ma
%'N:kY7?#d-emJJjb@f;Tj.JI\>::U+TX?-Ea9(l?V&(kMU=f5RBQ;`/Tk?IqdgeB$#`E/?B_c(ILAYlnN<:pT_<j2JXt-T#A94(N
%]4B8Y`OhLPe5>$HXW:nk8m%H.W9aX[LQ)^N^'RLu&F*"uSI_DWgQ]j"a@QD`kCkT)\jE"K8)8`dI0R=B7,UJf_JnU-gREo./RFc@
%b`HBRK!k5fAj^jd<l@W@P#<a)YauQ=XHmI'Zq/7qe<k5#HG^"G=36Z,c;lc<bI-jm020#W^4QIiMJP$eoJW@%)<S0^M"l*@1'M9A
%7WfBic16P'G3K^HFr@.YG$Ij,;^N)b;'<]O<1X87R2N,_it*'mF,9^L3*ZiTT%EH!;BAeOX>&$hjItM10MopKLCGY@dC&4#=KI[U
%n;7B\'L3cXlhCj!b6D3C$!aRNo8OQ3G?RrA>%6cU@OPp8#Wd'\8b0)J)r2kYq8ZVWYr*$=44]nt>k-`l/<E2;5g@lhPes[ZWP]Q1
%QMt[joHc+m>5-i3IMfnBh(U&2O\7>^D/"'t#^/5D+gL06fQ`!7pPQhXJmD:`:jA!0'tP_c#b[I#a%:hO%TTPTLNro2r@C`u"Xb.2
%OYR7k"<7rkOHY[?BT/WXNm"qa>]L7TpgLjiMaE63U]9`78<H]G#!Wu"N.Ed2J\C:KZ@gl)MsJQb[ge$ffn[6MUU3u/;YHOcQKOBt
%5\j>Q#oKaM0t'\C$.m2W3QgPpeq!?P!QVogC)L&W'3LX+TZ,cH5gjZ>.Xg^;jI>ZfP(@TV09WN+*M>Y'(8?U=@qB/O'Vc7@n5)l4
%G:7Rs=_gdb:c5Od-]JO:&j.cNpaJ%P<s&k"=>;slR-#%m0XH^40s_Jq2S;PB++b@]+leZV6O>n*9+Lf<']kGq61I`:Cl5?6"Zgu)
%7Tu1")4_C]5@G8H-JYOKW"tgBlTp@0d->U&L^O]3'''2`m+L,@#aU'aWl3%t3cc+NatS?[P[1icq>HSBH/f11/[DXU^eg!sfgB3C
%alea"ena#dGRAk])32*HStW5)H>?ae,g]VseBbi>:!t[gK&`2nrWG\!D%_Vp9*BNldV0D-,+N([-b;^!JMV/Zb1?S!ldOnL50"mE
%]IBj<6h;IW.^CaDiRh`<_R&?*;YbLW5_iKW2Y:rW5[.[.*E1(u5Q\i6S0Q"R:_Z/bg;&#2:A0j/LF;CV)+V7Y`+Of+bZETLAp[g*
%k<aTuUhAoq#q&Wkj9u[N\$geq.)F3"Q%_e>-h2T7O5nkJ0au8dO\TtOPn?oJC.3Bk]-QQMh\+m'.u\BC@EaLF`t:kr`,4E\o:`W!
%A[k56We-^D&VI_fTbNAg)1/gme4W"\/R416il4Dp_e6,JkNe;G@HE5!<%WcX6Jr'12KpHW*Eg12$C.C>aQ/j,5g:b!$50:J^!N(\
%H5pXu91V\1,C(-;S:DJe?X&4&8.n"9.ds,HVWP8geE%oFdHq.(dpQ@[jcmgY<+LC?Lfo,A9Sq<;`p-<g<=i-\A2soh?YNq0/.Y%#
%(j->jAT&mKZbU\f2R`'&`eKE7(FDPS&3DGEE0Okm`-.K7mr@]:^ArrfVI2\0##T"akbD+ZOkO,5oE>sH.#]n8n2LonTZHgOc%ng,
%=A<1fNG_[0#a=Dj-U3CGjkA`/\b<p0$[*^J$*AV;LW2@TKK)HS$kW6#FT"IZ`X>C(O)(et<KHC1!$N7*@ZpHs?q^^hH_h4Q\M<N&
%eHaaRdE:a".bLG;3,Wu9dg8Yp9NXN4=W+;a7]>9D!X(Mgr;^Ge/TFh>B5D<6:(4`aXV_sq=Z,"Re[C'\m[YLlF(#.:!i\*E9=KR.
%q5k[`.S1G9==Pc)!9k-\3t;G<bBC4L15h0KC1;V*T0ZH880&U5S;P.GACP=%HCaLLEmY81CsBrL>dD9_^]<C_2LlLufa-&$<0h46
%]K`K1$R1t&+jB[JQu`)[D;?@i!0,7kgC,632c+<Ckg5Co)#+msl7TFaeFD@VFX3M,;Ne7cJHPO4!fDh&pN@8t=K!Ep"5.A+8ucg)
%r!+1k5ROr7%gu#t&L+bjJmo5@qPFNMEe@/sa2fCtCon"LI1#@]+fI!uj7>%-(NtVGnFE6+BZgh(eY95r4iQM,R_itG;LCb8"LbaK
%@9e^-,`!ouX<]'/i4Be9DrOIlK,TZR*>G0sHnW@0l3\=Y1!W?e>?m00Ah<eol\&s;o=S2VLEI`6^@1(?"^6S2K.U2%q^tc,hE0i7
%"4re.SI,s$*4uSo%,]g$MCUgQN/bMuiIprZQ/[sVjT^,H<\#g;$-!a(Gpl-r(VCBl>NkU?[IF#/,@&2Q^<T?.2S9t5Elr!0k`.)u
%;'GlQ-"\-#1+!s*c-'5M3LICa3@-;g1A7^rX$e>:/G1u$6mYBgmDD:I.^5$ej7D5!"GP5U^>OUP=Xh^0Z^s]9_KBZWNhWB&aH,W0
%0Kb)I%3%?_dQW7.Ekil#''G#"ZImc:Ka>^-%BEg07S0o=n[T3t$BQ5?lPN7"V+VXZi&$J-+%R2bka_a,E_tKuFB"3NpX')ZGPSmJ
%=A[?[`>7;3n]9\0L;Got)oW(Xb;bgV0FAg'@7V;N_Qiiha>h4*XJ;^;qI<LdDA6/%F"</XJkF-45uiI=!rJ@gL.JoD9aM]Ki.SDQ
%$SQq=HjcO'S0TC7O@(jk0aHnKCJN[3U:?R)A#NrXL6mp1DgWttg5rqE6]#O#D(0%0CJLWd5$/=(l`c^@Hkk:MJK(",Np#0>A1I6r
%)d;0"2XW38@#,p=K=YQC7,*#!j%BTe`pl7b7Y/VoTa#ZSVeMB-%g$7-FOJl/1W(!":gQ.t1I&n2@8j<PL@1(4.h*_fb%?:AT=9_(
%kDj1Fj+II=i*Cq'WGG^s,eG*"c+J99H1+iXXM`fL=MH)g[E,9dM*+nXkMr$#U:JfFB^Grr7YJY"2gJ..EYg#6'NUUrp3[j,*>5,1
%"%C?jqk6Q.P1bZ!%:%kFCs9A62;W\gW"eT"K(Ys^s%4PB.;&UFf`>#eSd\mE_\jt[72iRt??i53q9a<c1nV9o#t:f"k-CbXk-aNR
%6J&W!"B;[<6Dm'u\s'0/<RFZW76$O8_E'+=Ync-W1(hNC/-?9S.-b\'JpIjs9OOp"*55I-eLce/UV\^Gr=k+7Vf:l?8IOjG\:!$K
%_e$Qqmj+1#9L^FlPN4MUS0+#NDkYVLHA]kV,eboTHs9u#?:L9+D*9H=(46]oC;-ob9c1II/Fc:D3a-'!hhJ*AXM&Qs0KZ6q)D$oV
%k[ZrHAP=(b3"$P`L"5o704PM.]9Cg^/&1'!1COpYiO];cYiI9UGV'l@fc1mk8kQ]lcY!apM4$!,ig&JQGu%j2b9j)4]fO#*RhD=[
%9a2*4R7hZt34V["-A;1E]ZlIt.enZW\oLOY(`uas4F;3V\Wg9`,(+n@\_.@khoO%c59J!IgO%@,Ub(^6&&F>uNV+K\)^_H0lZ-5\
%#n:6ETlL6]eGpCR)UXZ:8-)5&V5)f7jKqd8,0%/5b221M17T?"poYs4_&T*+p`N%[XO0aM72S>F/8@e2_rR#nr%%l&cAW2D8lV9_
%gYG?t0jl>QT,Kjk)cmJ*nGmkRp'De_6&1B=13Wf[*FPlW-^aDiit!,B`]N=k-jo>l'0V'^"q&F)UNA$jhC'5%2R,brjY:eqOWge0
%(X\ZBo,J5oOZ$0]bHHj-2Wa'U*N8HN%2+?":N1]LMc+F<&gWop`)eXPiu'qdI4$2R]Ta.l</]qnpMLt3A/WpG&GqSm9c&en2p5fc
%B,dE[el7`k7Vc'"QE.A?m7fU-0<7YZ^;kc4VB<OcJi16Cp<b]5g0V].!b,KC^g&?q`V=^D`/Z/PL?g$4_c;S)fdk6\Oop@A,M^H$
%bn^oOj`;;S#38%19A-Q-K:@0,*TQJqRhFq?HSV\"og38a.S#pJ7?c&!_8nV[EqOE>[_!o#)OIs87>SE"%pdj2*JA?:Gl2@]54?E6
%19@X'f,]csLb\Do'o>:h+(AUjB$CCtVASi*i+#FAl#d%CS-E%BXTG8T-+XHJC('&G1[M7"Y`qH5"XMBiBtF%4.->`%W*EJe>t)9a
%e:?U1f\(6(-Ib]B$_(=kPSB^o!n(##+GC#:G`>Bd[Da'GO_[sTVo](Za.Y?Go94VofKR%.,?2&DJ7XeX!]%>gLR$nSmNCQ?1uHqu
%FJL"mq%VXNV@n)Cft'Mreli:u._p?YjkD8'@Andr_-gTJ=Kj>[;4.JloqN3bg)'\d#j'&8R3r?"\u6kTh`qf4`JbQ>WrW?mJ;a"R
%9CCHqQmgQT0YZ%/m6p_W%aN!'2dll^YtkgK<.PAnI;-q>iH'I;mW!pQm@"oR\iTq2'*oEG=&b?UpmED/0+q6iJI3g:eOn@h>lTUK
%e(Rhrd9V4(,]nE<[04@l<Ymf*bnK4Qd9u'^#c\TV/*s^c!POK.?:t8jZIs^tKP!.Yr+l0TQcitsT"#_3>j9^X0GeCQ8WfBW0F%p(
%;1&B[,Gro3-jiue_.Z'?:Mc"FC4PMR*<]:Y,,O)nck<)=pI%FCKb*EPm=hST&[BehB=?C,nCo7?^#2<a&W0)p`B;#W`BsY@pqEm$
%P\dp?8ZuO@J2[q9FpFdr!RnEqUp5eN$%?rQ2Q<e2@.0ddi.Gc_n8U(Q$I+"3[hP-C;$9Tqe`h+R%HUd'jr0/[pn\i#s0MC[aEHml
%Q6Z0GOBoj8oSkHs\J=Yj$JBY&DOo<d+%adWUrYo@&d/i8X$IDN)FIO%9V"@8p/U-S5VY*"qCtg[>qR[9mW&T-@6b<tEe17M%l9>s
%\\%&9kK[>Fqt*gF2[>s;#.lL>LP]'nK*0n'<"Lr%\61/\LHh=eNM$AN194$".Sp[\3K"2t?R'e1Wf.NXI_<(eF4^08>=k`Jm6k6Z
%%%#$mg#EC0lp48%=t%"pUXW-0Y.f&Gb+QO)V7Y38hEgKYH+<=0%rj]sGo._qj+&2F-[E=ph+,qKg"OZ@Df+_mAJ4?`,DAGba\X0e
%8D:4H'-8cg!3bXMI@\WiCdDP=Vbt,^E;,FgE*Sn-ZbMgG0j&!W2,h_4J/oI\K-*'Z[8Bf9h,t)Yg1;$NlZG=69(>G2,:,#$&F9/X
%CeW4!@EK?VjQaGdm,b+UFf@*9RfnnADB$fOVTfdR%LfHt7"QGC9*Btr-86'ugPkc('7L%+n?5O'#?L=Q6n"6!<#;C'D%@`tIc\0%
%,%K>5542J&pAq2QN._bH&Yrn)bR/S)kaJQ@^\iF3Mj76D@-n0c]etg;GtH');5AP?b<N,GNWD[BeIlg_p&,L1nR3*iR[C\>\lH&T
%.LYt*.UGr*U3N<ML[ij"&P7'QInfi)<#l%=gut(I7!'qg"3o\m^%IO#(-36s!7gKfq2%aC@B"!F<L'GeZP`[dRl28?=\'e>TC3r6
%*.,0<r;r;`)a0$T,UT=aFicIXJP7n\(Ulis+DnO`XE<tgRgZ3m@$)M!nHZFd]`$T33<c2-NN,W5&qcrlhi(a'^0j2-7Tdj'*90C#
%[J&#V.FNKEY/T\K:eaX<=b0lJ`@5:`%j1*cLOF+Xr(3*j=n&JhpEk5ddik:QUTO]q-A'QNJdgL'e[\t4po4!QJo)m3DQqI)5DGRc
%S!#![/D.)[muC,i<dY4/=>heUqOYHoH)u:EgQd./dS1LF0ej9A_`U;e9-Ke<]n-VHX>oc'jtd::G/EK0TD/EK^+$umg+T)Q>.$3&
%FFjVA%g'O0/&Ek]qe!0a2?KS6,=<Cp=eSGPeB`0KD3YX#_TOLq;Q>74(LVG/=mALMK7d\%V`oWJD&<8g_2Gm\SEHanC%*-PF#\>U
%R-G.*hGj3U@3Gb1g#orsTDq+1_uQAm-+&;QDhRJk[P"GP;-]#J?P*3kebkAcL[\4_d4@?32Xc]g#J09'<D`=(\]$LnF]Pr\Jgafn
%W/0hNjpu)\j\^j,iWZQ#6@mL@aKl%@[`GfqM<h-_WYCQ[C3aV_(jn(\MBD9rV$mDV6LNfl%tWX^>;^gnj6D)D3XY?Ul_/gR5*WW&
%UOQJcQ1PrC0LUfh)O$dL<8<Y%D*m:$DSFil6a.mh9GJ6fZ[!0uho%LmNrp3[>g%;0HI09<HK%A]&k+'hW\`T)NM\A82J-=.$%'RN
%g0-F@^_qSY1Y$7`:m'j:R\4t#PY&+]Cn=!35aI6bc[Cl>.uQZJ!C8WmGiimDm@`&/\#9:XILp(XIehTQP7IgY<ir$8="HJd-!(Er
%l`?7YUGRM8MQ9(DeIJVigaF.=m]-d-F]S@kY.Qn<"tOsI\pWq/\0FFMI9ij4@Ll9Vm<34$LON(.K#EJDe^`:t`:qr1b@k+N'j=*@
%",'X#e]ASH)dB#R*-a=m+B0V"O,DCgD.QNo"<mkTPQ[qtL;<e;ip8=%F'tOKX^#u'KO-%'#oc7R"D(46C!!;kG&'.<f(-I!(4<\Q
%lsC>rU&FhQe.2d$q8Ad@LNNSVH)2\2.q')>/o>NZmp=;oY'.WPq5RJr&&!BrBl;t:>C*\*PP8t^Mr>A%'aA,35*aNt%1,htg5eql
%<&6p2(N'nt5Dmie@frCpD?3GV\5q:ra.Gfbf.so)P#;T0)S8seo8r.6-%'`)I]0<g"MUMX2j).m\IYrHp"7C&VP`\XLHlq\"Z^@l
%3fhL?*S+9mLW7</VVnu.&?p9];A)<F6Nq#k*i\4UO7N\"Fu:]tn$r"bW/jSg_]b;F9005_'DlFg71Q[cf[j=QC?o0RC3[AC'iMC2
%gu!<\U\aKrBnc4',!L^8lF!AO!g8>%(REk)45:OH^^f+eGNIG;8Si[mhIb4Y/+m+)h5#pSM*R4`X'b*;>)&_OFMAWZL=[RKO],3<
%CBj8/@nLioIgVBrT79ctU`=hbF8_C]!m2tWeOqLSOD!a=FSA`)lBr<0<->J;3:>_NbO6#+[S&0jQH37TAP%scXDRE0\DH1uXm<`6
%:^9TSBj;8N"*E(eUn)9<7rSWB1A?L"YS7?(qi$DRl7m6E5IQ3F6A=8G.C1J+.urTM;gBPVO#!2+eV=fD>c_0K-72+OhSR5sPUmU0
%&H&3*.hO,*X^dXP0tUCNhu4W&]U#9\=b/s:2IRXtRS+")<00,k_G$\1YD6Ct.L/cB`[DQKV)#F)p<eK-b'7rL.k!d"1rZjW4V:ci
%/s`^r>d$Lj7qsYa*[Y][EthJP.?:`>"eO0M3dVeE_\nbb*@SWmY'LRNjcZX-<c)Qj#?'XPVfU_'L<c>_.B`t&01%["KHsgG"_P/d
%/udY$[2++E#dDoZT`u)I!2]8>Tl-&fSTGElAWi(CDKla+6f:.4s!W_&b7/#LSU8ndi-:TU#T@M\_d+`Y6kWa_/?el\kFAUf'[mT'
%Hs$pk<QYkg%g^]`^YSG.Qa4<W5nL(g5^$lU5IYl9P(deaj+VBTn3iM+;FhH'VF@A/OLQ0+U]+:?a.3u=pDRg$%8DLF250^PXX\bZ
%3mrSLW-V\tZ<ld1:Ja/.jKTBNiqcF1ZQR+el[!&5ikS3G5S`:@Tl"O=(ad%9-:3'5,`2-o)\CqZ[]5>&12Pi=P=Qk4&a)bdH`_D4
%JI.`D>K5a9SB.pp7?MKTm8ru3ERRs_^N2%69)K\2FWbJ['F"%J7:Uk$.:!;4o1$&u@F!IF2f<CS:BC%u*4E>b&4l5Ur`H^,i3F4K
%KjU]H3a/kgq@`n;Ka34*5@ntg;4[[Ij(p+e3[BrriGp[dd[k62"j1o(QD/+?g2307&6ph1`Orf\MIk-He?+N@UJj[4k=X51:oSNL
%A^Us<B_=FC_%B8:7&I`T(0b$;N9^&7Ue*!c]&'I[EO;#@9VoDgf0JfB8VB93MXbZ!i/ZE_WN;(=j_/FReO0]O^)R7%&!k?o/.JDu
%h(A1llsVBj5QksT%Smg*O8s-t7\VQUXsTS58"_W?K=YVB?LT.=7QA%H+r)@Ucf>r;I$TGm#m>K;Qh=/`dW>?HL]c#Fi980R)aiZU
%A7%q4D3TU]KBI>r,%$=LX0N$'Zh5c"oUR`=IQJCE7-,j\^s^N)'bVnjqRE%NMaX$XHDsH1-lbtc0cmeMWM#>*HdkKL=F8A*%n/j2
%SE)ha-Z!(<Xk%8cp-LZ\koFb-Vc*4#;<)=$RT8qL?-N\/)O"FuNH]g6&u%ZDm4OB@E3K'DJTG.FDI_(>QR?T`BH`P#jZYRi5f%kC
%o+:(o"Cc>6K'h&4k>cG_&<gY[^TR5O8')o>['*mB4)(HPYRdKUW?d"0[+?5VRSU&1E#O@t,T7C@Fc_^hT]UsL)<W5KTj7tuK\+L)
%?XNcn0<9D7=N]%F7d*$l$H0;d?3k[C!;"]0*9%Wp"h:q30[MU)loeg^;2KZkTcO=p$@jAs+D263'D*VjlE#OV'CJ%AE_hrALrE]1
%J5O`#/a4J`o>ds]gm;`9eE%\R$?e/^fY$'M9EmAoB,(#h7@A?:e9jrUQWts?]t=k(po`VOC1K&uS)\Qa90d.uqV89]j,52P1olRk
%a&=+s9)2q&TbBnc01Kt<Qi:c8;i9@R7,60P4]^(!.g/2:Fmn8p=X0oX%12[1*SU?6lkE7!0!^f.()*7^[qLm<_/ZFGp>KnQk/h:B
%L-moQ+q4.<KVL_27hN5Nb5u`Jj?1et6.i2C1NNE6\D]^67OB3/,o.XX79.fa^S[Zigu=cI2*&c4*WIJCM:*gFn';J"RsF6&:8_8T
%s+3/O/E/bm:10=Rp-De360RY&@kSJ"VQO#$9V^/tgcUD39$AQ=8j4(M,(/aNluN-F?2]/`eLn9J;n^^*L45;QSVW48VP`+B_)`At
%kFr'Z[+.G:Cdj7LgVVpUeu*0RU!d@&hQ*N%M;a9^;.MiZa=puYa'rTPqRkj5<boYWakOtGkl?2^'lL/j_7UaqYINn1RC:iqmB5Jt
%UCd4Q?4@i)[!Xh50s)WQ$L*CP?u`Qg#)o&?Fg.aHDhO90]I\STAI2]"l$RT0T,FXf2%c8X\r\/-+:c-K8W:1&e>0Rs[\-mKCsU+`
%!`4kuq8(#\Df-%h#8IS"n79CPXESG)#N03\Q#^Y$on^nKg9&m<r2!XW("J[=Cl37m_aZV[JE]n;"CZGD01@M*jiW?\@=RSKrq`MW
%YD&lXXJV\!8-)1,A-ss^@(9A]$d`.-[Q'-r5mu&X*=1t8-*!mG::DdEZ3h1tKPqWi%&3[;h1ei2B^8Rf\&pklG`ea(5@[p/.t?CO
%08iF(@`X:>,ttIF<K\YMkt"e\07:`@J8(%C&BUO;e%rS/!aM1XocKL#@`'0KCrmq3_oMf3eULb+)lWdCXU.@PhS0O:Z3;^<s2PN,
%+9f9<$p;1=b30EJ@>kb=9"2iCjVQg&3m0sN/Tr6c\)kYi;JHMVA41YIJ$k@<"?H52*%PKk@5q'I(Nn7ZIer31Zs@YBP2n.%O(,35
%1$7r^Su4n0((/f(.sL?/#q6[:o!+@g]l;-KWcHC/Ldk>PQ1gM_ZW/9Y[^n&+^=HmHTWQ51R$;Hgq/@8Ml/Y.qBoGf")$41oVITh7
%q2Ph!%@I6Ded*&uTN+lpFm1Im]UCH4?1HbQ#85,>(^6&u7"U0$>fMZRNdj4!?[8)%,#4E[9ZrK<CH!A8he::JqMJP8krl;kCVaF6
%&/U#1U<>0m7t6rp>"!Tec#a[u8p\Q(&q=HSXKVh(P*gUs"Pd`D^9<)DPhl[2?7D2,Bst$B6J9%4L(b_!kh2k!,;p01A6]p\Gj;!@
%(6Sa`B7dKV@gL$L<j&j3@Z%q10t:P)[IdO7f&E;m'drM%0=gF?\)cNS*qi=F!@P?CGs"D%]="R`[=a7S-3=_LZUL:%\+e+"SB%,_
%Fnk?[RXd=T/->Lr$dXUI9WeNdN=A1Lr!esbW,jmH]nf,\<V4*tdYc6i).QHKBiIrD<S18B)ZVKNlZp90rmD_s*Q5j",dm`hP]7mL
%B/3D;.Es\=Ea6^R!HUPK-iA!SaFKOZ>Lf*/C"??O/>SfSOu"3EOOtme?pp<^HVOht"V%;n3(c;3Dt71C3iLRhn`;+V4al#UYt18f
%\HMT_cul8:-T,\X>pl$!S,Bl`JY9iFDE1=[NQ8KJNc=(J0C?GJi7atB"Lm,s"!0_K$6_=g=@iK!>HMZ`H'_hD@Pe8m5.f_&?<6Fj
%@+c8q=$"&l"A%M>\fqs?GCO7HT>e%`-d5-@(nnAf^"^<j4nBE],,Tc9.q%?9-@@&i[)Xq5<(Ks!@CBV#Sgk]a<M?-q#'O]F<e"se
%1-2_Vj.D9(kD9NY)XXIJk4C[/LJ)$WrhQB+Bkh6uK0O6;0<7=B@V"oJ+oZVoM!q\qj%"#4o/uLEMj^tWG+-eG)NbLr3^OT%MS\[^
%L.3U?pFG!_j"ZA/6B;[RnY`SHF6PE?l,qF66&eJeh;:0jIM)u<b<du^'et7(JokD_4N3o2?&hK1jVT2#UI7Pl$\hpd-B;>"k(,J=
%Z.61K;&W&=kj*qqJK)`^2D7tEBn3cG9*2Mif\4lM4r--;C=te6"N*VOHlLh/5XNTQf3E1(s8M!7*m#F#O@DV!`"NM9rQ)79(867)
%'d%t3c`p93c&odlGhhd%YR)1Ze_2`"]#U>hQTDE)?u1h5hQJ\c%*TA>Q[*7'_gtuChgZA#A,Ye:O'EDJ&Cn1d!GP,iciIe>iYU%(
%A@<YT[m$5e2N&JDjDdgW&9ERj3OYRE(>/glT:&I\qt:,snH/rN,[-81p\Lffn_F(4ctls653fkQ"hMHS!WcD#mKV7Ka=O5sgcBcm
%Yg"UKD,gH,ToR]#(Ni+::%d`oG%'9Jm3n_+k1"[bqU^(Kr^EYl<kS<OLdWBN&!X:U3_;hV3(fAV^T==<=U6t'UVUkZB\]uVYH@CK
%&PCd_Srlh[IMM>QKjN7'\rM-bLtQ[^QE`iZ/nX5Dq2k4?pPQ'WE2C8$[gA;h/WWArB/*OJ=5IObM!60DpH<bCe=HIP-/8VXG_P]O
%d>jC2*_<&a,n<Kl(BtA/fhEil7\g#fKPI9R:6fOHBW\#_?3"?__h3aS(1\TX7jhOUh3lJ-1:MY\CoNF>Wbs1fqV)8'JW1tp)<WL7
%7e*1&l&]t#aiu4\ao<W4[Yg&k'VBiScX,-R.qU.;70AIoY9$'5KYH/0N>"W)n1P>`]h)b.bolt8f]=2C&b3O-Pgpe_5ZN<Io$!)'
%V0<!Cs6J2:2Wr[TV(R`lKP#0\78c%e7]1pnA7i_dS5qTtFCdptot*RYmHkfhg.\QX<KAQmr#EXs?,`eC<WQI%.Pt/#qlrCW1pU8R
%C;M9:'?G5V)hE39pOIar)k'=dU>3'%l-",Og`#H%J74;>nm<G<P,!"Q9;8(8>f]0Tf'PLoP8kCD\N,m1#""P/##P/nf6[f2/r#r-
%l%6d1?#'K!W)Ar_cgDP^htqf!?WH44LM(@T'u3QtJD`*f):XX%EJ)G[:>]j`f$u'TCa:nF_>>n#4Q?e,iZj3#OAsK>%SnCLebs4%
%Lc-LQ[T>(DoPYTOjPCqTa00HK.O0+lA9m];o&lhEd./uhOqS/Q[7/"Si!jSYKk]]o"ob6$0X4bb/3$<a!Cg4,H.p62O%qJAjgXG:
%e#\gWQOH7]qWU5:8X[/JV-$gWT^qu`_e(hc<mn+/@C]"K,YPr*pjRP#U>!22JLquarEZTeh:J6Y2dV8)LBQa1-TXTm@9lujk7Gaq
%(/acc+]/CEjq3YIcJH@E;adB3/137,?t)GCm,cC._VPsUa84o.s+i):Y[n4UolQ%c![]ZB.j?$b,e1KkK2TaYeQ8A:3p>]R('kgV
%X9"lGKLWtOpd82ld-_Q=*82cu^O+A4a.^0u5$hE\J"8`df!9cK7J(0ICA]+dKci39XeE<.[J[VCjY!3OWcK7R%bRJs2DK)S)*2jm
%hTt%2<"IRQRgq9]&/3Z\UCChCUYK^IE#qQjjh"!=LlFq_8"Fl4pqoUsHM!Nie9bX;@DoY+\LK045&S)!5s!<gb^V_Qr$-25aQSoS
%,O:H```..XLIq2)R[iEOD%VaH^_4ls=u>gV=ijcQ&k;p9-R8n>@]+E(Eo/%+?WroRQlJ1P>&Nm)e#uFsV&=TVn^1fZ@O!V>c^n.R
%*TOc)rf%R-'e4T=+45KOI#TMsiJI$r]_n^imL%(k_$r-6S&22MU4i-f-[*El_^HKX[6R`040>[f`6uIJgUSZ@0&Wg'efdmicA..Y
%_pg)$YQ-@'=(9ee2Mq#:Z2E5,J/=(mO""":r91%n1QOjuDo'Qn4t6L-dqK,B.QM(6K/e3-VC,iF\5O7O'=M,NgK$o6KYb,HK,NpQ
%\9/KH`2d'lT-nqL&alf$*V&_K+^aI<Di)LN)Ji,L/PdUDE0+^BKlAQBJ7qqheT*._pG],S-U8e:*L:HO+fpoS30R@8'RMQ5EPFC<
%pX.ZjM;/V=PPdk7W``0`hmCI%MH![rJLENO3.-k>kEpD(='$X>[D=-n\XHgBlVKs5U"QV<h="3tW\MWkl(3J!o[Z]_\>fYUH#md<
%j6J^S263Y??fO8#>#$<gNj6UG<8up:K1.[m?!tiTr==<%@$:H\m#aT-0iqo>F8[Zk%70N5QDmNi1uZioUr:$3a;0(Bq8fnR@r.&&
%G4m(p/Tp2ue6BP";6a"M_]W-[fN;gFGaHn4Rj`B*Bf_?hBGESo1u;_uD@AD@hER?u:F2U4-Ra;$DP&2<1mo#$lZ^S,592Vl$=NfO
%>,2`DJ!DA/_d,1[HKD's9N]q3S.`MJnaqo)^KpT!@Og)g"KKQ,BOh1$>ph*!HP<,s]8-WL9ptFdD3=Z6Q*q%s"2o2/Xph;Wo1ur^
%MFT.b"0Ps5H(ei!jKL6r^1+qqWDa(pF,%(mRX^?7\NhHs:?!G!Q,=U,J^m9aVK8(\\TEhMj\nR#na8NF-W#d7fEb#XT"b04V<rHd
%8%.m3kqu(5YZ$s9jX!q0-k:0):B:IH66]$X1&+QYNKZCh`:RQJ4pcr4X;<fI@^Kcm_l2'U0c6PEP.OM<b*4M'l1Ee+elq=X0T=sb
%DAG)RH0s/#adb^04m5a;HXK$7VW/tSXHmmZ'rs\IZZBVN_F>"Qco'E<meDmqFcB4UbqVptV\*jUe-,1`-6bk3FmI<.hMca/,_-VL
%%<=j&33]]+Q)plY8%GU&PtV[NfI:1(jHSun%H/[><t`^R6oaD5MiOQMbNsB5cmV;j-bUlgs-V\-:DQBr(T13=F_GZQ6LK76C4#0_
%`MBhR3mPIW3_P*#b"$)+Xb*L=gicHa,[3f>%R'DW2sVoL^SZLX#=bWFL-k34CGtYWm?_$g=oO-SPui5PV%Wuh+RdMU;*EbC`)\?&
%AkL-Jh,tr7;!^JcG`9n'h%>.$dqe&@_TnX9-JVFWLg?;.#I0[T'J:d$Q__6uEX49^[nZ%A1.N5#mSR:6_K'5KESo!e6R/ftgN?@b
%EX=L$-*s`-B:J9eS__6Uj0#V#EsD&8l&iR+qn=D+nsS=S"hp$[gFYCd(mSn_bS)/Be"eqS,mO@tds:j3aU4E(!)M_MMXjrkfFAhb
%nEM;X\jo62hP`'C_EjWN7$=Y*0<)A-c!Nd]$8?uJ7see)e$N(q.CO9q&O).*cXU[MH/fFNC$J09]<TtA5H/K9;o*$mV&^c5r=1QC
%8B_c_QF>iJ4r)s(%QItb4%b0DUuWq.,"ETmji)-03(?DN5,!D:ag1XATC6tODAp:c)(u:h<!f\"/R5<tl2*VdJ6bld?VQm?dAEdb
%a3s81b)k]Q/2)3LZ@-9U*2?Y:/&orn=Vp>;-?b:^nqk^*Km(,$2q736JQH&!/D]ALdB7)0nqJZL$QTVfm[KsZb<c*`Bf%3C6(j0X
%h9j2egG1!CrK*://m?<;%\736WdJ&5$FVfL"O8uM];%q-0"\Kk^W3(`<4$>rP-e)_JR(]C]f0J3Ld*dFGe5!0U=Rr:B($H-8W^e`
%Nt+7%UODfOXR;6upe!2p!WuacV*/$V;Igq.#qc%Xp^M(//f9[YEd-d7bm%:T)[b7gWr86$6"9ckLCf!u\upnnYNZs<D+TS#8[QBe
%Ze5?We6i:XUtSjnYi?s+pfYi()T"rEO)93[%]11BnX7`)U>u]tb#l[=:ND+$XD0f8Z*R?)99\mX`J2ZCCInm1CHfDbG3o%3?HuIX
%V@hqf@9$!IMps3jKd8:(iM7SfoIj!gV\c,+Jab"SN&YP</ob_B)Li=_2!U>/4Vn>$AB^*/),MJ>KKjEN4g)["R86-6&68;tH!KMj
%PHG;$lAOscr/,Buk8BTsZK.`n![&DH9(_4HA()t^6#*XoAk]k:nm5'L>52'`;RE,Y2r=E(\=YO2J`pe#d_,C%&+tp`@53a_F<!hB
%f0\k8>qkE(-`2%YqD>WqAGh<*_))M,?RXhoCgT6GRS>P,5;T=[[1Grk;s(Hm"Q[/k]CB?IPl(Al9/Abg23b\2&?JCp(Z8r)2pRf_
%M6AD2H"_>C(Tjkj+i#9O2l);2cu`R#GqOBSVmm0rh,:=kbK%^hfc*TMLrm/p)l_rJ=%Qu;X=-+r'<#'c>#%=NIl2_@HgkaBQ[`IV
%;IXLbd[ltRAHQQKc_?.LR/iCF7/%f("5s.^O8pKCV%Cp]f%hMXKoUGZ\PUu%ZW3dO@%:2"ZX>cE7d5I`,0r<Ml*P[V&G11KL+3ca
%<^K9OJ%*716`k"sCkPC$dS@0&Q=(HSBN>EO@u-?k8t$-7;V<:3%q\i89q-`lLpqh$=9'r_Em&tIAgB2,INl4in:+\VCJ./Ndi2HR
%C<J4SNKmDPe6T]G+FSZ?4LV+(Y,D+TS^AuM<2A'*@^5W[BMY^3)m]j7ghj;W8Dp(]iqbIVWisc(.-htI?-N#.3Bf0nF&eL.Cn+2u
%XsO)D%;frg3k+1?49J9cXn<QPX(?*HMqq6\946d1O\EE=&E5?#W."Bk>&\Rsh1X,p9Q/ab)qf5B`+3o"SP@DV8"eLO:MT@nLAn^W
%T7L58Lo+X^G2/5?m?VQ1D]R,]]%VIDGno_uLGWdHL&@`LhY;\Hb^(3$-aP7FU7))o\C>fn?L%,5D>%_@;DiZJ#[+*pZ>m$oI#VJo
%]\RMOT=7=JB0cao\dgQn`(7IQGN("/Csm,D5)@-E]2UQ^B'M0e-XA!F6Qt_tYRX#jcFaXi4n8`7X`9Jo3!dQXh^CoH0)VK^S8>;L
%iF`/a\it/>56`BkGaD[O30:(@d/)K'\2tm6Q8?[ee?\?IBgq["^YX22eYGs^ZOS:MlDD<3-lm4j'/YE(\jb561/'K7HdsR@3^7[F
%pQ\\t#S1`DY)(5K`@Cqr^t%0gmB_1B^E&jbqDT-k2J^&2!a]p`coMC?@^CP^6GpX<MK*_$Wg;>o2iKYqhLdAcC/TfS=ts#BPn0"E
%b&IR7%,p;<FO_1QkFZlu*KglqZIUXm*^5;-I?GM\_Ka'N.HA^A8:^$`A>G4?\Cn$6DZZ)iE,^q+)55%p#he:MdGJcOosfMgiY8gs
%BA$"Cb1c/m*3L],rh?P_]gS&@9r'?rI2S4Irl]'kRmCc9fgRNJlsKBf]q6WKKJ%oS0bU]U+1KCQq1V7(6RlZhCC.7Xr*.k%PX`eC
%e-+hAC302S/d^`<hr8Q>._16QicQ>?ZH-A\+8*lBD93TQZ.'Ntg-tu*Skk5hg@IY%h+rI@:lQFBoEK,V>hC+`T9iSh!t,-mj#Vio
%G\Zlri[0?3+Y_gn"th'1<f;d1ma\TD;S<T*D(*@lfs,*7BRt1>3csqTi0.3R@mu9IS*9+?:XB!.e!@i,V#F-"4a*2H2O=I.[j:9^
%&XYG.=<<fsP49]YqWcW<ph.?J5$++oUr!Jk^^aYG4GY-m?-R_f1TPL!F,'3nZWM<KDpiFFH;fY#8*a'=3#A4A`(P+6O3-p)VTflp
%=sUJ*N;]6MP(&Qu\?2_^)W-OIP/M)b9m7q.Ki53]lEK;Q:/hB#+`^UBg?d<AXD7cW_lc$YjQdP)_ec#<_<l(ijKeSYo.(/>!5'9\
%)b@XNFlKuI,#Z_T`AdG00E:\cd1Y>@pgA`fnuqB%>gPaX+Sh+pGDQTXSjKdf%[,FjV9%JJ0Q1<EArbDsILUuXp-opQ)5+[UQK^nH
%T5gmRm;\eVMQ\L/+'IE`P$mgl>.;3%YC"-A_AqCgj+Y9B9([rk"Im[SftK?ag\>H(2HAU%!p[JOAqh2<oW%Y*".oXTl=')Qd@a\V
%ejd3$gHDO:YqoEo5Oq/qN.)f40ZiG0KXm0Z`,IGmUN0^2hMIKH!>[]F(rs'qf)AGEg*TkF5ugO:CV&lYQos<YP^(iQVbcbD.ZnC\
%0B#`$B'f/4eqamL2U&VZ:/8QEN9A>;N4cD!"iYD6S64Is.HrjbS#7Pm7G$(O,^O(j`0qcRgpSX_T#Ya1=?=,']#b#4W@_&VHq5>A
%POTAZ:Zs;W9Y(`>9UCn\?hoeq#c.IXhT*Gnlp8\^ZMK!&-pg/G'tn2d8gATp-1BK83_gg\MDs)-^Te]3r13X\eEU-V*7GTqHg254
%;M3ImQZNKY1mj@i3a?imPh[CE#]I!)fC]L5N6PA-4UKae9<)Z@b7@Yf$6J7[-YK45mB1ffpBZbqI4RVO8i&Lr9n!kn^R*aOPR7X;
%n7aVNdN0>l;Wd=ZdN#.<U_E1ml*uQ\$E7\?f\*lF.YZLmXJ,VNZ[&$rL#hQ_KtPg:s2PG1`2!YB^;iS(kLV-#lRtf!_)4Gb$NBMo
%q]CqgCpjZ\km<uFooEg]o.Iq6)?]eK)ddGK>\.&1XlC)Gf83d%iUokX+pqZY\^a`_V#IZE(dK$CqrDU$C+OArN-(NbDj],BCg&-o
%$O"8)Ypi<,;S&FAr@ujeW$/Sb1sP4:J"-cG=[\q/*+kuY?GuhD'r@jbD+2jS*Cj"Xa==7=<*PDMJ^b42TkO4$1^]R1A$!eW0G'Dk
%/a0LfXpG1q#fRb<R0<+;2[C8o$`S`53`]`Re>nQ0D`TncD#'L*GJ^^9P`_t,^aN6P%b&n77"Q097F.:7&:\W=<SIPJfJpeQl%-*J
%bbTY7b@5(+W,E;O:EG\\f-b]us4cK(ee.CBq2I]C"C4X&oaC"QPJU@MSn1R[77_hanJA7T@>7DEN^af27mM0R\q-EePYJCpQ$(Zd
%co@)DiY"fV'RIegR^BuV@C9Vj`O#VWQaT1>L5:uja#bWY&g8]N;A*YF_FsaPLI?c>DGeAC8d:3"jE!_I">\r+\)so8,-opchCZCS
%Up>Samu0hl"fD\XXHX!S8e38UDo/**=%*j6?cskD2Q[#.V?P^LCQ]SsXaZMjBN`V/JS#<b*HtMm6=`s1%-40\hs9Ng"lcLC$?0ee
%o3;<#OAWKdF)-+.fc&BqoS$qb;C,+nipa2b*j[^R/+o:.!/K;TT2FZcZtp=KE=Z1nr&#BK9Mq4f;1i0tQ2KsPMC`=1dKDmmGP0J@
%Rj?]RL:bIDT;Sb_DrGGbGLD6m-)mV@-0['H$tEK1H3-F+e%:J(A-93-6e;\=^Ie+3>??BcOWFTPl<#fAQbJ-\/]CtlYQ_l+]Hcr:
%Mh,$AqDuTM$=!0Lb"#c6=^=*qn-VlEJ7im/c`*paU@?aY"(IY*7a1tReqbnpO0]5+p!_CEZ0T2fBX"X72#X-&kcm0l*Qa2DW_GQ6
%>[aoWqc/4SSO-,OFs71ub!L3^_#5h--4d+o!iWT;SSi#$do^_@Fit'9)K]*Y_%g%b:CE4f:P'HZU\LrX:Gra1^G5[4pTW@%"X)@O
%gB=\,8Nj+?WS_f7YPV5uG]h3^8k"<ScDgM;Lf\.2Y$2EQ80ApGfp70s3:uhC79=mnP=DCN%eU4u[-S<?1/=%q[=&FNr+lZFGCcMs
%21LA9R7SgP0VR&/>KOg75Xf.!Xnoa+PM'\:\"3F93ULr6:EX(l0!ACIl-YE.l8@t[-U#,6IQG\sRQp,A=#1TWNGjZYaIgf:.cA,h
%]F^+)ZE=<(VcZ([Zu+]T5A$-=f*kZiWKE#UrkJHjcG#J,]+Pap2b8rQ6sAl]3t.t65bMj('5&dLC8C^W&,W'm#l7OcfrDdk(3s-s
%Tr":&2XS'pRu%d"XA]<I-pX![enCSFO-IpO>jU2;CbSJp?AQ(->t>Rj;($tG"NC8R52uT4CIsESQ&#YUG4+T-S$/;VJ#?MUZeFp3
%Ksj[IGV8[2@GD_TnrGIY5Z:^S-ErLc[^&3c;]Z&3=H4dO9ng#D7ZiI@KG6Yu1?/>]c]Y$]$$_"B*g9IeW:I-s^d:4h?VqmDD-UVe
%5`oMZVl[97(oRk!E/%8ohAj-0If.6lde%OsK%F)Tf`o<UPt&gPZr2`)WY2FMI-JkUB=#foA:2`?mb?/iL!9`]%97+DpI=3L&=rlp
%;'#)8=J@cBbTms<<@6'JCc3DRMt[XW(5<R3bJne)>5o/6<ID\Lm/r;4]u%c_".BgcH<r!bAL22pMb54RkUVAnfn"=u0"0pd6!c!C
%FL9ec4VUDZ>VI91hRiFH]-kT_?VoV7>jC\H`HR6K+CCULR^OcT5A3u(0#<:=2-Xi-=[;%G;@8T]bZWGB!t;IR7<M]4Vi_fqgZb0@
%lc6Tt/F34?'t_lBR"6O-A':)l9nKMY7L-KdhDJDJk@tD3V<U)(NYW!<3\_UTHLJI`h_Ho'>!%L6e3D\Ar7Ed)?oI)'.Y@nQY"08>
%EJHql]M*i[lAi(WVHGJDkT`&c4QDh?nS'A7U*LP!R03KbIe)JXD6b40%%mROiRS0aa!;e8e,:2`.!@F?DPdrK5DT[](Uh[7pdMJQ
%4-Y3$alg4RcIK?bJNE@I`LHCbC.gaAR%^!fLG`=jp+a()N@:?-A?&9)`ip#!Qp2nFE9nI]QsE,T^T[-:i&mJLe88X<dVIK08]D]l
%,PuSWOrB;R^.AR'+X`$HMF?kLBF:_7!FA4K/g":3e](/,PEu<Y%;5OaZFGDbj8L[:<cX/D,(%XY<%pZGrr!hqYG%N=YC.ksDDBp3
%33AgeEk4aAFcG;3Fli^YWfB""b28`,KPohJ;%K/H,kNh"+5>Btrm#[LdIrY0(:fc@+:W1Im"*#k*B%3hj,B^\!?#1^FO%'O?&m$<
%'5N<7SG)m3C8V(?WsNU.Qe9Cc&;t/V]=-6o#6!\ZWI.Yu@Ai&W\A-8*pBsQ;C%gs6D`Qag:YKqr^m6.\-9gqp+*/Cg$&0J.fZ\D0
%_==E2qMhn+KP`8sZJq^.$F]kF3G,o:l3/Q&B1e!rGCH]^q.HKZ:]=9V^G*D.=IGfMP]^tJ&lK]Ph$CSdU*Ek&OMfeMjF!!Qr4.)e
%>7lB`[Q/<V4A`5%<.jV"Wn$(&V3u<S#fH9m,upAiD2:2i9+P+/afl]@rK18!T,!7%;R*(V6&sa.H&?@5)A1H8,/LA5U1=q7h[EV7
%?]g!EL%hAJCE7mVSF!a=64,,+"D1`K@!jQcTO;eH6pVn)KT$d2lt*NVV<&:,nMFQa8;mE7WBHG/MX]3<WToZES$7'@@$!s,),`g+
%K.o/?T<\e!!FZ3D,nQ2mQ9f"L6N"GdAq9B8IFI(^$Z<7*is,WVMWh(uYob\i_'^5RHl6su>j4M9ISkDda%4tRj2gK)!oh3-(WOG=
%m*oe#T%5k!1t-iCVQ_]7#?n7r"@SBAXjbsfroG%?/P*A_'cAGd\\3@D?!TD="U^PhdMs?I<th\-W-N'?H9\#J^Mh)GO9SP<.%et$
%iPd1.<ul#/0c9hc+sX-M[dlo)n]pQSMY6GiQGO<F+518QfcZ_Oj/nU<b/d*,7focu<]7(M[$<VD;J$\uopSh#g1mFYG:KQ<6B]\H
%Q;][:XR9+,Ge0;hkg@UM'f:dg\bos`A)q%AcZ,HdEp1BjoN:<T:'_ENA!P,"-umj4f[d)bH<&87aG\fZHCEPJnup'N#^(GR1EXdd
%O?Y@7WD:FXrD'9WN*+);^Wd#`kt"]XfMata]uYHC9LOX^*'2InGa;^[_t.2>*plBCM/F9Hn+=neF&';jC8;Kl\W/n%.fBpH\B=-[
%JaCN_!K`?sf*^%1ds,QY[qrr+3D7+>DRmLSVH+=3nddH;l82Ms/=5'S,ZVG$SK-?J'`E;O1b"T55tjrn$6+H>VG90d.UUq:b7a.c
%^3>W*$_+r`Jm_P8s63\'51e`Q:Ua3sruBZ[F7uoa#\3J]O.q4,7?,s7GNajl\NbTb&2C!3k'5LT!/dKu4ks7i@'/nY``J2QPKF,O
%\-`?C8Sn?E[*FPcA&XlD\;N&o9&1RrZap<U!uHaI3/BQ8#oU-KpS?,F#@ZbN>p$sNI&qgN%E6aJdS465.Vj`[LJ_<(3sk-!*PPi`
%prm9FeA!7:ZP=/J=V;M8FZnmooVjg3\9lA#T9^7/22du?h0;o$I4R%/pi_Q(;WloVO?oXEn1%*Jj&dpNfB6DDK,(6:ZrTS6+%:d:
%(teQHUhqf/?WeAf#jmTu'`oR@,sj11q9E:8hi%<>:&.r:l@/)erTg]>#?4.1j$>'6#[WaPQ7Z(u%OHMs<5W+ddZ3jD?JAlG@lseC
%aQf>qf6g4Z_%9d2HX/f6bP$sea.:/C-ua#DA.r[?VUif1]SkBt(2,r#-Z&mfA>OOW<>J=:khF;]n9\BkZA:E2_U#4)H-7UNPtd0\
%i\=AQ3*3R9$WOT84,#K9Ql_/cmLO-7E@6GeqFQNT/fUn`F"bcbn5BPSbq>1M+?H%MIm9K5VanY#h\c,Z'c18m->Bd#hte9&>m:YQ
%a,])?AsXqSP:rubb_L>XC*OsmaZSbO6(ab;S)J/rMp,Y./[ZSII8r;-r->kba`sXdeG4HhA$df?948@a/1L_Km[RPg,\1MmeZQ!.
%$=W$WJpH;@aqYCKl^g6>`0<+&^i8KlM-Y=NqJV?TZEKWu/HhK[EJ8.Z>D^H_1@@2D>i_D`@*U`PTArCP53#+cX#@:8EnP9p9&0e.
%C6-e@pLmY!gZ_XZ0$R/gfTFc)Xg-oD1:XU!J),H.;IQ8lp>n83SS*R,?<XLQYj#!eE'_`D,[C\J?b`4%LB75kEa#$a'i[H;j7J*m
%=Q5Wm8'T-'k6f5YB&Y`'Z\Sftpm'!j$m^)TrFW9;3Xg&-97u0+Z(A.L>k!s^d!PZAdF,GI_`G]D$N'n*NXEljfffmkMeZH.N&PV+
%g5-<??qi%;hC(W$8V*ql&NpVs=5U&XdYifM"B_B1263L9b-blL-,t;ek?5SP-N^M(=^9'=ct2#'md4firk%%iWR@s-6:42+IiYZn
%Ih*emI%rC!e*':"<;M6g'f:?3e:4+f1g4Degk"#(4p$EOV9"a5hp[(<Ka5W3[UaY/YFpON`.*OkhVto$3uXXf7h7$o2m:\WE6NAo
%/qST$aE>FKotPtQY<V,k0^jlp6cnq3E%A$RKEM<GBG''\.dOa=:*t[ui29s0$\`/(bS*IgBLo=<EIr>I.<[u7@-k/CdC<l_A,FV!
%f?u).&]m&V][Djl.X"?@fli)oD`pt&>HnL3`[@HUG\!h"%?a2Z(0;Pu"8GNQGp-lOIM8U9/Q\!7o"p&TK-J7fA8)IW30QZMGP)S`
%9VjNLP.PVKb*"A:qe;0N-8T"A,>Xpa&BW'-B+(.uXgK1-P-^'2Wd/GYWj"_'/%'kuIA;TCSNFiWA,E#qMjbpK#*"p%Kk-O;[@/Ct
%fAfY3(3Ls46tbs"Km%9MWF@AUqkdK1'k=(KDt,_1_FDX8N^Sr,O\:=^mF0*%Y)C$__^]`jGlIg]Pa^bY/beet;H.au##(6$W)BE4
%3lU=_W,0(+7_?Zuo2C0Ua>P(MDmaG%S!2*O^^MMA#$Ncnpe\MYo%J5t]$&pO]5]^!=[OKl&`<.ZD%$._3KSP&/@s1TEkKH$n$&D0
%PVOHT1\<A]lP3=nh,^]slb.;&*/*:S,2MSP2JuO9BTVZQOEm,qki6^3*s.aAKr<V;"oZCEK0LC9?CQ3,ZF,AUF<JNtocsC"m;:>G
%aJ'nN69cJuLIoQE8HUg[7mjT\KT_XI$j<@9$c0nQllY^sHaT/9>o>A639<JOSF.>m8-tEW1p#'SRuA%"$6/Hj[J^-?g>#X)7D[D&
%,s$3ekW!`]AiLdaog^J.3-9JE+9p(2\9kdtkCFIMMK<p?&BO@783e3Vl#%/j+jMb0?'7cLS_SG\r;I9lf7m&OjKFdZoe.+E">RK0
%^ZXH?:Y?Me2s,U&'K'][ps'dd3?R4f"XJr;2GQ'8eAN,q(hA*CMIie)lOf/\p,&U?al7K5H>(WPk%m@sCD(*,oNAoeePRfZ70!Pf
%DDiOJF-(Wqe+!IBDCl_*&9%ViQ0jGLg?A]LH^Q&0.:=YWW7QT$?-IA@?og,F5V<f.T^i!5=79pQ%5srp@T1aLc3D1F_\,T&armn\
%Ii/oHN?h>GUEDuD;0;rC=!e9IHHL&knl%r2PQ"]9WNeA_r]'l:psUKaX[>g//;C/L:Z#n^I*Fk_Hqb[p)/>>/k&7oTBooZdiH#Gf
%_.%%Q+"0p5a62c0<-Dc!r`:Fn'dG[*>:%"H_O+paW^+GR6]f@m?l11eQ41t7=tZc(/!)o!1"'f,)74+^!M/%O1&^rhm'F(K6UBgn
%9!XD8=5,1`M_cnq$co4=.?gB6q0R8_RVm.SN25c05_-`22/N05k\#e?M$a5;ac+d%Z)!2P&%*eC[ZdKBOOWVVVQ]Lrmss'C:+^o:
%="<KKLS==CR"SGaP2#M.XN=41"0P6pLZ)B?8B^)4@3&n)*99&DhXH']IVK5*flP;h0T[lI^4+kc(C=NmApoH?oId*!+"[`_@Jf*P
%CKZfcc!sisSQRL#5e+S!JBn!^"_s5m&s3;gC,M+p1"D>`pp&jS<9DXT5a$7a0j*(r8Ifb0[f^#DQY.n%7l1glh[]5VP(*r1GWHN_
%ipeBGmFk_-FF+LWR61]$_2C7P7bF<ra9N$%Y[pkf-.S!87;]DUlaOgfW3hp2g#e$oZ4j;47On([4.@`=L^-!sOS,(&EiDgX=RTQH
%Sk0n[_-3StNUh?]m>!9CUumLs'F-]TMR):'"73KtE\`\CocMd93OPbqM9&C#=\8M$Ula0<J(V.uFs:46#BO-nnqb8G!hpqjpPppd
%a-@]goc;^"l7?Tn[PufCd#P$CNij(f8O5\8s4WL0872!eYfat@K2![b(:BqM5Z<R?fdmYf`RpH'Os,iP133M&\?qVp:hbL4"sn@r
%Rkl\?&u*f:65u$u.6<)CY#B10.RddBc-08#;)J"e.l"PE7paFr\"'G<"4XWZn%Gi4ON2JJKqa\46#fEjcl/16YL;[@W[TUh1(f@/
%d2NM#U7sCp=R%u]\N>k$V2U+i'GMA+bERK&"S@aN+6VL)o5:3&MnYWYW3;WRVIZNZ7L]!BX_5:%.r3ucp6VaM1ki*oc0:Rk+=GP$
%,B'[lil@&X,u.5<Nk;Z4fRT!gUb#B5o*s;8V*L%:X.E1T*BdoW9I"M;Mq+\;2EOmY;c0bj$C7;&eUlF*=]ID6NGcmtaNWLNPN5rS
%qk[W0Pj!,4)oAbP@?<n-'5+p(aH"^=,JJ3Il(31nEpg.7^f]V9cUj[Dlnt-2Z!K#0!)'[=qqBYk85#K.:OatQ#p\f="Yb6a+r\]J
%b>G0mNVt9>aG[!t>0u@5b:.S2]<00i?Z`DfKWifgN_)SV5n!L':,gjP'"bi_qta`,NRcmneQ88&@KCe*`Y<O^26bs5n%n`T)tRAk
%,HqM^9GH3,5q(ntd?1Y$0C'7;*K^N0lH6Pka(1)91#fm#S64QmiTaXdrX6U8a&L/qMi0sO2_+bq4:CFS5Z9ul.3O%^4E,jPk8JrV
%][1t]oZ4$F9t'H<<+t.TnCV:4Y[47O2]l0KH&1%.N2saBkhYV?.fH6-dk;)l."#_4&\?fsJ(dA-"#%Jd\p&CJ6&%k\3KtO[k>36P
%*.2.].IP=;"4KXZG=*06og5/`Pb,=s?E9T_Ls;"\X8D1dRT^f.f^pAdTiPG/ER1N(MFl]``S/XZ80#HNJ6"%g!2T7N[D^AUG]P`0
%djd?X#5Rdt=A+>,Oc57,h4?d(0sY];E\oPaQbP4:?WbXU=Q0E+Gpn-AIZ-_NJ`T#M,oGL5i]YtACa6")RW]rn=:johlu]X3kh;m7
%7^.So64]C1FH9/h*.=O,[KE>>d:PT2l.I[o71bbh-G\+]d5KM`8djZ$WU"Y[3h)f;h=IYF$;/O%[kAkM`U`ju<h=Ot.ehlW<kZDV
%Y)iGUrLO\-"l&;3O/qSG$1KWLPflA]7YGYQA3k;nHtDK[0!UG4\[tZs2DB^FG)^3<0t7d)EiJBT-mID'U?)hT8['XBO=<.PDlC)1
%'0*O0hp^sD+(=aj\0IUEo\$C4i__m@Dq::O'[:6;EBNnQoSM\YZK:=%q$-muF8G.=aGf5aOgpF,f&5Tj\^\/AB=:%520I&m%J@qR
%P8`2.1gS+pC-C$e,5=(Q3nB*!gctdod1YWg=MR32pB[iTr1AXX9(li=-"`htHPNSZUd=06h_#P(qPq:d2=<rE6I0M'5U0L#r;$VE
%C%^621DIp$O@H:p:(b+ab$lCk8IM_2.oG1Kl%*eNbs#3DK3o@Y0kN$Z0fO.)1ZbUc-%[8K3LCfji]nM^WAQWK`=0L<3`Qq2A!^DF
%hkcVKLpjO8b7<;b%?O8Q9\"Pa*Yq"KDE]bRX1;NW7*ui(;f:(orKR7%HC)5EW`D%\c=2([3$42i-[jK4N3b7UXdDVW0.id%Pg5Tl
%.V$MXof9>&7Td0\6L@DbLjS847DNf[c;Urqk,f'L;"S;s3f#]#hP9WUL<K_ScTcG4'jKG9-mY8$JUD*JI$,rh0qg?dpV!FPn"V!)
%C'&Q,/5AoP)-Z]JL!Z34,!)V=mWE7bKOi_uE,8`)k8r$+qR>.T>dBi[3QcTk"5I6\.+mh$C]<&(Mo`9VHuE-hVM@OW#FaMfEn:0I
%fruu+9)Ztr-9,KG=#6=Dook\Q8e*6]@\-U"A.at93)oV#*E+qZKJ^PJ1"+D)Z6pS?G;@i"VL]0^!rXK@)Eq(4V)0mR\1TP&43)hI
%@_/qCs4//nE/jsI9"sUroqnZd8&c4u4q4;_Fn5`MY"/lM%<pOkQ5IdN1qhXIlA+.NGp=PsLqod&ZM2]nM9_hX]4Dd;AK6ZAW"(tY
%+rr!U&(_#-X6.Ncr"ij,G647-0BI45X_;ZLoi"$Da$jH(;-3`cR7m\?9K%8oU5(>UZkjeTcC@Nq0VVWh%ChZ\`3(WYBTBAdW+p1F
%,<>dd<?0CT]Y!Fk$qcShWi3+-EX%jE[Zd+1\CP^\G@cC@<+'6/%h`]T>Q#E>cB(V_/glHIoS4Tk(C]]q8\.5bLubJ*Z3ITDm*6Jc
%Hp=CJPF:!F`K@?t4AGB>gD^7hQo[*)W+4OUG=Al8L0KR8as9"5AtZsaVHRcG,PCh-EcLp+/O=q)U0S.pc'\p515tn.jnW==ag;%u
%0hS7&-PD3%PVSYImD$rd-abKmERb9VOXB'c!]DDfeirm=Fq3>:0no+_M\7YD6Cn!R'Rn"/.$PA?(lcs%J5^2cDIDla2B7^0)%gj'
%$I3^@/8L+3QJ&1[:f/ShEr,.N=R3-OabMRb)>hClcO7_m&Rh@c.DH,)7+aXa99X@0YF16ao$nS>3JiWL>C=ht[A'qnY7^>>i^+$Q
%fc8F_!9i_!-ORMEFd1&j"u;70>hJ<rL>m*-Do5h=gHq%CO8iZn<m3eCl1aV4XfF(hrXh!gC,:L!0gYpL+br6YAil=K!aKG3L5^S5
%;8LeG_+HdTE0+%6l,FHYQE>F""&S7N7ag@rbX'^kBp0";6iK]Sgk-2smBP@t(GR?uZu$U*8nTqoCNf'A&!A*0P1F2AIDo6IP/.c=
%KDefXP?$E\T6/c>j%YcU\Z#Y^&7:Z"jaUS8&^h2Y]01=jY]H/J$^?&#4,Lu@dVToM`kaEB[j#a_YD8!_du^'JAdZh]5GVY/5M1">
%&DA0%ds:r8J=FDSF#bah('LcjL"r4eH*@/qH]E5cnoA;5h6s+L'^N_Fc'0C%n#'YgRp.@?m6ejm2ZFcD'H@dQ%JPYrpSW5W;d*Om
%>#t;")UJQ,2n_@'gXlZBl@,oLeZ<hLQEMtdi3.3'Mia)uLhl4lX-JXB/EQ7J2E/0O&_4efKR&&V6\nHG%3fWFk;.W;Z4U\\@CJ!u
%BY*,`pPAD+X"MctjQMB.S8A9pbQW%Km$*dbE*;RtO7q0AD\;+i2!mU8F4^r_XDS\eG.4:T*BA?%7Kh&u2JCjKH;kIkMU?c-b@V1m
%iib)Od%i7We!\,T/O:h#,?C.h8\=?(:B*Rk!8/@BMtRq^#eMLeZ+sob)k<5aWXCC7;1YE5enqH`,BiL"(KW$Y\dH`JEKtY)<#^iu
%fjCLi.a_`5;tmbEQ3ZH_K0:&P]Em1Y*Eqq5^nV1H5S9]u'`U4@e;AE$nLP.kPDkAWZ^pNmhD;?2+`%(@@$-['WbLY+`3+\#Zk4\p
%a'(i;T4)We'-TH;[aqAGNk]WU'6T(C5CG)UTiHaG2R\S%N\#3.dH;rB!^t4U^@"`GqXQ\EaW"U]*aW5Xhl_Olesl<S;F6j7Ai=k6
%,;VJ]!emB`#-G*B0?R:$!H(&&2"H`r``$fd+ofM%UB[rROrbjZ:,kRA(BTSe`?<-[@kuqO/1F4rWEs'GS`5R^9@c1+[G`Cn99HXR
%mQ;dTfPt_O?eSg-IhJ9f&i'7TRohbk?7[EjD\j^-D@7B)GXG9Z9qDP8iRD/aqr(O!?HP'Wa2-"lO-`s$MmfMr"ZkE9kh,WulN")]
%p"$Xo`k"Fa]"EgU9o4H*=6mPOnKp&D1%?o)>d2`b?LgV8q!G>:KO4U:QC5If3n5W:.`Ea.VU*TVq]D^pJ^mc9lbdbBHj9H6qf]&Y
%IJ2c4l[t/"pq&a\NXpY*n5l?*E0?!U,m)PlRc2+;mi:;SCf/\gKPn(a$S;DDd`9D#KB=Ip$YimG5.6K%hb9M>F=lfDR+?1^LaKt?
%b@6b2/"L+gapGZDoQ1$lS`8_q%tfmbVT#"kKXYbE+`rng/\<:2If>CY:d_CX97!WG\]4eA;Pa))$pf&<.+OD6P%llTS-%m2Q0"SI
%bCWTb(g.<U/GlD:c\Uei[s`mDd="o4EnMY89)a>DNK7)#P=or!Hba*GrLdBSL^>Xt+j2#4dK:>>!->@3b>6<@Y?5@DUJL^6DmIMN
%$f.^D9kQrTA!`bKjY!kKURsj[?pUD^#614=$q8L@Zu1P&0?iZX'!Q^PIIcPX:Obaf''<iK<KJ@]6Q%q9m&@M;=:hJh%HYoE3LBJ'
%_eMS0E=%hLim*?X=enROMBR-1_5b[UVJW@6QDggIn('%RbcTqZcYcf(dlIE$bTK9TKKE1gs55LID(M8kDS0ae(4^#URRLf']=&ZA
%Qu";=bf`3A0?I9>$-:e:cH389@>fIrX`-`"o!FP)8keE5l.=a85Ul]*%r&eMX"E(F])]LTF_IfkO25U:Db7\Se]Xs-Z<.^+KXI5g
%<\i)VCOj.GXA#q`*6-)=Nofh$+g(/54#"beCP^kH!\k60o,_[\I7*e6"T5?$Y'[5UDj_CB^<.3CE6:U<1@3)X]MA'j#@k&S.`"BX
%58tC&h;3AL[";Y]'_e`%2+^udPsV!>/"-h'5QI.^o+t9$,cnJ>r`PGDd)1V,AFYkH94]&pjFK?db6-[:^$ReQ`'dJNiaqm]U!nSO
%m6r'V6eY1l/YJ;WH:PZWKSg4pA#s\5!VPhg:E*7J#qBhog4%si8qJP_g.su((ccCPRqA&WpEbU-5O5;Y#?3AMPRp38.RcPuqoTb4
%E45QNIZ_h\$Ws3(Y,RL*r5roV[IK%!fLWtf_MpTGl+4=1<Cmdl7\<9L"0kL93hjs;IE'.[[ZGlB$?;$L,D[>>U;d*L,.^chl)kPs
%GSJ#F.8go\V+&-+?jl_7ERgjk4JBrnI&n/IZI/4pnM.+F!(cB*(htKQ?_#F,FquB^DmO"=itf\*)mNGOaBi(b+]dpLOee%J.J+N;
%L#!#ar`F69V'7M]:<%d1X77<n*C',?i1K*3>$2Wn2CDHR5^DP5NMNOZ1LPWLc7"e4e]5j]1=9b,hr&b>q`D&7JO>aJQLD()R?V+k
%>2!dj\XG1G*4[OF"-^sDk*U"Al)lgK$?O5ITLiJkX&<m)oI4K%gpt_Megda";?O7%[GhEO([\hU#d#Zr53ddITN[K$D+\N9Vd1dM
%Hu)0OB8'<`a0r9jmYJ&=ohJLhr5#CpTn9tHJ;OIVl"pm/<.JU:@Y/]2G>_'/=?<``bmUS2ar'H1I#'iiFMYc9GU>m:pZ\61D\O"a
%D@!m"M7&j>NG5lW%)p&0O$rn%/B3HX]cs[g=9[a*=M'QBp!%O#'jH30V*HRXr#,6>-+@9M9USi2J%QUm)6W5L_$enMQ>VQS>forE
%`?pp<`hoT\fl5-f!g)nk*9F'J-=_^pc=N2OWoQ`S^Wh"B(@,pIKi>GdVlPJOkoG*K.(*Ka<+M!VeEqf3E0rCZVo<;3bO3_:h8t!s
%h[R(ADZtQQIWDBH33"65'GCr^>k-A$&&7Ze#=I3W:tWl.I902:q\EQWV!45SiJjrW-Mk.Dd8gUO9!pKt+KVGT,#ZUsmO<cZf6rr^
%m_'+^(e9Kmn5uY)PJO6I6'1NfdZ1s\);_$L,#o3P5ZQ0]QDsOedVFc;_%*W-Z0(9$].&_KrO5;%#,M2Pp?.DmeuHbf-GYu\_Lqf.
%Rq41.#6>/ia2aIgJlV3<h5mk9[im?jY./dnY%kDNb[[P#Un1iUq94SHNmZP<*06+_l-nXIOl8R39fC'8SWVHRG=IF*TV-L>UmPLd
%br-D)RK>U&fX7]i5e",\<ku->ecUt(T>eCB:_2$KF;Tj[_4!;EFH[^d*`jYmE*Pm/'<'#2.\>X[G-bdMQ,F9McZ4\l$<3Xi!>jTF
%L@[+L@eXB:BTYJ&/gD<Rd/%7l8tj#5Cg4g>Pna1-$AL4ZRVQc?&r%Yb'?hm[=@9Sh&Ze+N,*[3;M_2ulj60G#p!rqq(#bc1>7Q@f
%-#Yh*fbZks>0H-pokF(mDibf?WH<>YlOmOn^cE_6)lH/sNG+hl[rTl;$Mf$3%PZVs<*!Sm]=Pg^f\A(s;:K9%ZQIOGcW5_0_a$Q;
%3N&pbM!1kQ&@Gu#q'jqimckBnr=POYqF:23[XMSI<$$,,@;SF`n6l8;p,<+W[+>I+NElo3H),c-V@Y%Gp6Fg8>"U.lTX_F;0K*[n
%HYg=*Ak.*4hX3bj;*t.CFr,G__t(]kJCTXuHZVJRlMn``ebbIBr(84cMUe2mD-Zd'8%OK=1t+*'%6Z)rWBraJ>V')-7L553.-dQL
%37M#OL&Bc:38A)c@gAY:6)3[Ik>,Y[;QI%Y]&%WXc8-5VM=OQSDu%[1lZRTu1!qjS.tZ5Afktk(`!)6\6BMR<h5a>!aG-I;$r=NA
%VP:/`(dp^:OT4lL`<moT@V+/\Z8A;?gH`,>d`'!BL,(u%$dDW8=A)JIhOdS,lCS3;i*uUDJ6$%_*ia]gQJQ^Rfp6)aj5jJ\OPQr2
%0Sd6W5RYuU&->Kn:%[J9K@+iU4ZRI,7!U,6Q@;9um7^*e(:i$>EV"Hr3]Q!L0XU92bgVBM]#o[DR^a^g$]b6*ebAmdgKSs+<h?A)
%b)`OJX3dif;s\uBeZiau=4LHNUkl`'r0>]@T@-rQK-kGD.<rVN-UDM<6RQMUr\,S'l"/T]LjHj\)3GU"M/1?'jcJW"6K1h?@Z<r6
%p?G=p!D3&Yhic"j]5&KnGIgm;UforN$W@'_kaT/Y.Yf=^nVrURR.t`Xpat34=+shM1?b,(Hn7K@+SpV(d3;?)>i=*3f34=AUc\O?
%8iD6RDi6_l(,Ek'iGOQ_rWJFpgc\SZKlG4]gVioKTUhpuCPH%,UDB.P#msZ]/MZ-PMq&tkj((C1'aWsF!BmNTQmAt0f2S30T"BX-
%;l%jUI$]*3,Bfb=1&,oMpW'rao6Kc2YMic,LM<mDJ<U_+n<l((&R=SDBaIl0`*F/>1Y(eU!bp<j+]@RWaS-nZA@oa5qKdsSUpmbh
%s,q(Th1b\E./cocN42O5"l)eh+sA!^=Nt#PX2HKne*J9JeJ<?9jL_FUfCgdL?8\&)"^ltYcu(hk"%5).Y=!4E5F1Ur%#N[J*r",-
%B[JFaUcnN(4FIA?eZ(jb]:.=R&omJF:N>+P!Rbe9lP_:RK11j]+V.*iHXGDr^BiXnfnrVCW**]:kkE;V\/<(\jiJO>or(e]^l+$"
%D8\m"352[1ad3VH^q6p3"KYj_$7HJ8)l^&AEdH?'Xk1';TL:&S!'pM,JM0'[bf'dd[j`Ro7iB<.pNc>$.-8knB_Xql<K.tA40]QD
%mC=Sba/<ErY\Fc7c&R-):%D.X2",F8/TY#gFS<a5m]Jl$4Kc885eqRc.NM'*LIrHqBu:g,Ea&%"(#%&:Vr[puGL*n78Q)m5_,,Wl
%.FdJ?!^hfmCnIcs(4C4Gd8B5plA?51^#&Zr+q.*.<2QEDD+ddo"tDesHc+'GiZH/'Ic:p8.g)u$'K`kPmG]$:2mP9JJGr\t6DJN0
%3nBNAms5oj\&NBc;KRgPlS\8oI#tD9mE=&Wg3RoT[O8!cU"6U%[i!OIg(!P89`\67%Zu:CJ0lOXoU4U:Zne/=hNfiPppZX5\d$7?
%N2lHP7#N>_$J`,TOhkei4BhIt2*q$f)]]8:7J+0?ZcJVNNT&uSMG#^lb/h5$r`V*U@X+*$R$'t*Q9EC`f_hak00SnbL$ErdbkOB1
%rh@IV(`-7tB,3ID;jRBi>,7JlPm(^Le94#Eg:F!"=K"?:N#+Pe)EH#CY1e&+f\DC2qI+9_"*\t,PpBRe`mZP.;[K)\h-I3i1\mbf
%7?bM;Vp^SXdbRl=?_:R1:B7tq?;ZVQA,L,D`?N\[fJ;BjB7-cRCc%aAH;Q+VF,8P:^K-iCAW1t`&DL0VH:N&Kg2);8/)#J5pSA#<
%<bS<`G:_*^WW&hj$\!Sj9j3_m),dKBAU-R[[T>)3UsJ-lAZop\Y>FLSR56at<>f9%mCm$1CH4fE92PcNW7L52Xi3;nQ=CGb\)TU"
%aR_dA-249sW-1r_MV86@*Usp,-rL\8QH]s)J_"]d2;+\^"TuB39JA?BD-$ieK7je7=`sO-3I=.rF`gj4S[l$hGB,qN(A=JI>r760
%aj+[qE%3@LhI"J^4qu;SMLNfQ'](P%#pHlA;&k8]F$]GnS4pch55\N)<=7.#Ungn%&mpEAo<:#UGu,@l891P)af!P)#-#5S@%^OD
%QcEp7LKnK\hDs@Nj8tKaM+b@-5BJ"n;oPdZJtm*[<*H]=^a<t#AP^&rCpLkX\6e/m4R.^;II76A\)*X\:c@dr&f:A]@mq7uHA![k
%*4ed?)63#SQ6Dd2)"hoOi-lTPrWp'`75%tPD+Is!FnX')=6Y1C51sn32_O0U8Vl'NlX3#;qsu&7?RPt\EI)BDjsg7,]=^udijabK
%R)oH/Ob`2>JV/!8;A7osGS!PjV@T3?@.P!#grTUI-Dac&RaEE@_ZNO_0'5;Ie-1=</Wl2/^uFE%ZGis%VS[G3_^M"SpT5#7%W[Bh
%BN&`[gDWS')<gE]C\]QeMS.-6MK'h5N$rX[0DZb[#u_MJA4SXlbq*-#VCi6lcU1`&QghNai`4$_'ARL$r'21L>c-H]iqV"EpjOKA
%XqZjKX(KDdbaX'DS#35b+]a1SR?si7I8uKK1=C*:QogBu#W3K)@2@h&`+tt-o?Lo\\ntp,jI`_omBe&X6l7uQDRTB.UYOuimCHQc
%&s!E5XN]LCl(C&rRR\Gq9Xsj:j^^*u>kuHC=:3Gem:oDk<-.0H`7<ZoMZt:%?sHskk:.?/jaLr[m)mdGZ4B$C:fJ2Rp-'?T5RZ!n
%Z9CVqV?+pWQZ;IGc-NPk`H>W7K[2m]N^IFWi6/'69e8$VOUG:+SUDP-`+"n>k@8MJiX!PdrI<a$K\R)M%m(79&FI&nH[k^7]X"_f
%>P.qWau1/=Nsh_;Sl-M+&dVT.OpTSAdOYOA'QC4tT`A`^Rk>uYhXn:_37%[BC[t[!4CE4@'0P@6WUY082q*2Fk;81C3nh<\X;$"1
%G`Cn0O$i(C`M-2WWi<-O:@-9^[TRX`K(boDg!A`94_F!7WQ?&X5'>WoePl)AD[C)s5h1PF");brQk-YKL`Ttb!9@i8RG;SBq7KdI
%lJc:)*.:Mg/*gL34CME9N@D.(/AS\O]*!k4r30D^'\6b'V9A%A?uE9JdV<`D7GctH%+MkdM0^o,:=?&J8>Lo3rbm-39it5?nm9N3
%,mkAj-YgTAG2DcjeTEtQ))fRraOUKsDd%<VCfU<NKu*kJc)$mL5S?Jc<!%5"q+:MgXWJ%Ah7g3[BRY7&.BU#&E7q#.%Z\9["s8&Y
%gTHVT#kdWAd:;)SjU-BCrZ##do#g>c8-=3<4N#_e@BXFl>OuR^c1!j9[7f\SGi#/D,HkgA<">+4\g(2FUH@@Y>YXRs4I>J5D7Rme
%%[0sWJSoW*9D-UB#nb,tQr2g8&>DB-?*Ui;T.hQjkTP&AN/5_@WNBa"mIp2V3cpB"WtZE04jT1P7-g5G2W\Pll9%t5^<C>lM'BmP
%@GX+.W'C&E'h>ldR\2bc5K7^@rFgB?4eVbtdmfUY"6XT$$:.#2>3Lk%0d%K(kCY9[ljom<T\quN&df;o"ZN8UqcKT<g^$OBq2T=3
%Eg7dL,A;e!8N[]tDu14mnbIQ@XAL`pV[Y-=OaQJ;C&62j0[0(QboAksM53K`\9Jg/74s6A;]GSaWC"Ph;@)+^iM2;r7VGTL.ARm_
%6Q@Ii[0I4&>M9KCgqmcH33b!Cs&pGk(MIP5jgm(>Z&$UqO`l1gIBl+$'O.lU.$V&_B+mT$UAmeac3Z%,&G;+!\Z]4O;]IR2L.f6&
%od`G,,)p<-ZLYY$.;';`eRfjupMi!`4A]e$4Z_/:dS]M_7C>B0[pK*R.f(*]p>TX*iVc<8Kn(.*9MXQpD\2ROjq+l/3kTh7i3UPO
%:9?qkiQSJQ,PhVWSAf`CYPldo\!I*%[aQRj/u:gs4*pLkKG)cB[BTY%7^-5V='o[AMOX\4,4Q>OY%_a+aHJ^?fLU\[0lJ$4Yo<F7
%/sO2knD!nG:AbnCa,AHeaapCF?#=[-s)f0J2khT#Ye:+H0\6&oC(U"COmf*bll'/+amr<Zn]5`KQpE0*ODEO.0O5tN[X,;0A[qC#
%Mp%E?\CIjsVX8MXr^9%:M]-$p6G6]8SHfI4Q&<:+k\5(K&8O'o'Eh5;4$'1!8>pX%L6O:hIV_6FDGS!?.&*@a^_22/'_JQF-8q#q
%aY:in`d2u311&`-7saa.DtGhGb$jC5LT;)(\.gGt&d9Y_,);ms&\^=%+:^]8?8B+96!3p8?<N"FHJ%]4,9`;PgO"t+P)9Q9a]_+j
%Ks?QE^AWoNk/08@:GiG1#K!LF:GStf)50\b8Z6h1oRjb6_aMK^_1JOZ'8.m3(BX$fga4o.'2:hB50RIsa;USI4'+Y1*C='#!IE.&
%1o02-aZe`RmtuS+Q!^>c3.Ce7\,OB7:$Vg;kc]*OirN7"]mH8A?u1>PlA&qGLIA=+9hLepA57&,]1ZfIWc3.L`4-^Lh/nn[0oo_L
%1c&4EA@dmBM04QeqT`G)e+>S]8q]-1.-pi`Vd!+,V%_<Z9*CZeHg98pi$YLtVnVq,)Rc*k4kB5`4H-+1hY]tXjJ-[#B[tq0G+"7[
%X'060dh-NnNQfj9H/.IcN'jGKNH]B',r3)5YeOQ"0>C>Jik),)M=!Ob-b@]<=bHU/*XM*["WK.0c-)@T^$L'H^tLu>o4CW-KItbS
%Raio+P<'nHeYOXQe,/HH00?lJ.6HZeY@^FU*"iq:FF<KsM-hP=p8>A21rtqs]\55c7\&Dn,Sa\`MBN),]9Fr6FDPfnmYJP:X,a"U
%a:AG#"M3;02I_Yig,IU@WPoi2_U!IHqqke/cY8s(3L6'fX$q7RRj%o[C%,*1%jg($Hl$jgRY5?+U48qFhB'ZVPoqdaMldtMDSC>*
%\&8n'M'..ogS.lF(D#IG!uK285YTWY;Bms/E&pu]Z8WO4')[hL[bFC7&!72so%)'&JI;:WT6B1jM^9,^[SI'(Qd.WmmP<R7r-cM0
%.'oCA"@YbAej_25q()ROBf!-OjLJ!lXXj!^`m/"&+'J2+EV+,dYR;4L=__K&\f3+Zq\j0;qll?+(CCdFVB?[/gl_U.o)7pg>e'S-
%c84:.r`lH3a?*5Zs*D#_XYr#40F;W6g"PPu\VXmHc^d5PI`W#Kpit_e*lh?1`e$pHfkt@0o`/oFL6S\d>MG0MWXee37e,-MKn9_7
%0V%=/9Tmi'g71\m)Mu_D-HYQ98]#A1J'08_6&AlpWk=-6UcWZGf?1ftfLoOY4@RjPBIBQR3m%+<[;tZC_$E3J<9T;W"?Jnd;-%2>
%ab@WmM9k"r^-CLN?JL&`;"cD&BbMf-WmQKt>7\tre.cq=f%RII10@j5rW(Su9%=W5h;[T@2N4VK-Rs[Gkf1cbqWHq?`qt#Xk@Z)n
%5H)93?pDLEM;5nT,ecr*YLUglFfj/"pDs3WCoJ3$lthDN)+D/?e13YRD+kPBiW&#%]k7YoEO-,ZlEl#-(Y1>BfNuZQTU[1?+.>AQ
%Ar^K2kikm8:(4_l-uI],Vhno9BsDQ6%'gdCPj>;ECMa7$7>m(=5su@t5j2S,cT&q'?rfAt+_V68Rquu)]!-`-&N(FNS)Gs4;t*k\
%Nl%U(<9-AJ80M`[-R=DV^E/oBb5_'_s$rGRmRhaT2RC<1W3"1i5=-9]hbRhEQd7g;r,ppFpAWqCb@^>%2QM/5_WLH[TBI@??QnT\
%mXlgUn`Nd,@fBlp0'GGD\n'/@!@ZnN`IRYT8$Auk-sYrLmMre&Kp,K0)tMUQs53j3b@9AJ65Cnh+=d1;B[=ObB/FrF[<+#_J!\\5
%6qB&I>*lU>5[^6YS_4C#"[be;JX^&F(*LRZ!!o*=l@@^nUI5PFia/H`,Q(d01'.%>C`St,JhQtm6s5*C<A+$(R\DcGN_h8<=K-/b
%$V$7d;$TtF>3[o:NstfKXE)E%`^5C'$n_gr'>(bAQVmH$4II9#"X1'ZAfdUseC.iE?#WtA0LE10Qp"[k>)VT'A0B=N79VE_?uu,A
%Su5gb6nr`0_V]T4ofh$_?c$kU1\\FMia]c,?a7F\N^H5-FRj]J)($%6VPe_(i6YrD\ldS:%&lW7D7.?:4i>OD>Rr<)N($$(>LQ^=
%m:T/359gjFi7M7'4FK:+cK/!O?=V;1Xhg>*?;2A'^(52H$KfiLF>ned<\f=h,jEkVa+*nAIf84<7k32r<RSUQiRsBg?9XpB`7?2/
%R\^\%WW_>_.I(Z_!++YDoSc1q@E3=^9,GiH[!gFm>KOR_$Q-]@Z4M=V'r7$&)g_$)U8OHLJ^QM(s*;<"E/(r]C/&cm;6quD9!/\9
%.F1YJml+I?.pF=D#\eI>&-hRe0MoI8o)uh?hLNV(m2bEh[!TBcioaA=UFLBH,_Dad!3.Tb*&EN!3@7r]qF7klQH>&HoaR)3C;"5q
%DMCet=0iZV,.\7X!iP!;&o=NeUmWo]Tk0,U<j-Pm?X]j5Q<(C&SH/.r+8!LSb?XTf-WZsQ\pnplm`h@br?,e]YHs/?65WfnL;@OA
%T"OP9[r3+$YA:H-*REmD`1@+;(T`tPqAHT33dk&<o(tTle#f]r!MSa%CTf@7BDtK%=474E$mHTpkE@mm\O>lpK^&UQ?+c((\(F*W
%,<G?&i[X]tWMB0q[`460eE^:>9-.>K,f9=o*#mLo3)pOK7+EbhAsLbl\fg$hWCY#6eAMora84u(<I#]ee8qhP(][eV>K+h0mOi=;
%`,u5phOa9.jQ%F76"[65='H+",<Eo?m9B1RPHp1(fp8TLKpu:u`JA7#?'o)k9a24\_r@\F`U&,n"[0a/Fr_mJfd>>:eaq4^YX,)7
%l4WNc1l\`>-)/g[8,/&&l]hCe!sV%WCUj:7NJ#^2]='<=k\T]LQV\nJ,Z?s77GWSgTuQWiicEj$XY=rglm1*5(?LUNk9h:'ed`m:
%>&o=[!aS$r8n/4*88FDl$FI2(`H^9%^o(1Ko80_pjSK>NL+?GW&PJ$:3B#@ZmDK-q$C3;'*IC=!J>#qa^Dt"-^L#B-Au+r^ZYM!0
%1jV%NF<hqGC?Qi?O<O?MSt!7?d^<;nnO>dB%@F&+]VZuD<m+M]J:N,7O/Op<Jtf6t8L*0rR%4.$G:)euNn+?1NGoTjUXlW62?l)A
%0Q0r?]b8],m/8E=ED.Z'6Igi0XN+`gK$t\0H8.SV<N\&IX=Pm@3k)[GMJ7iG:r_4&T(D++o,-#@mT$k6&%IXZ=c<'k,*W\)pr,7`
%`?^Ie#T;K:Sp:i7VCu$!=llE_f]b2hJ>K8%b*[iW+Tl[qfYeVUZeNC'ZQj]_kGDW!a`,id(AZ*;klE1ZH8PD"*8!NogPY16Ng^u7
%q=*0XEW_[m.sJSoOr&>5_g0pkQd->)KoQ-GGKfns6Gt\rjr=q'B?m?**:,;D/AE?'=0<kJl40$r1Q.F[An`*R0!,NP4[_hnC0=j)
%J?8A0l=sp?euS^(g?[Q+>Ho/GqkEU:pE[S=UKR>Vd5F5!'8t^>EGEG;4J@ihp[[k"m"(1UAIt!RX$7BJ6H"mRXo1@XKPc>^K\\%!
%Ne=AF^^RhCY&A:87K)$tCRD5I7SJ<KS]<Sq%_/DcfGq.6#o8tb..'qP0FPq_:pLu6JqRr+b\^1FlJtS=T1inTJB2`(/_b.O>CL7I
%8J)Dr9#K=^5g`$'1<j]cN-Roe`\nW$WecPQJU&aSEa20<:7DjQ]?Mp(7Aj[_IZKKkG5p;mD^.l@Z>ALMHZP`iXlbuY@0k\-?[6d>
%lr7ROTW#BfJ!G^CejU=/c<\P,N!<g"k25m;IH]M;^%Xi`1e]u0j;Z+qK=_`(7$3B@'O4CD;N99)<5ah&8X6Eojikun#'[H+[U41i
%73>*qm--5LC'5,"[GKEuhF&Z[em@77Pa(;u0W%1oE!``B2q4g:ip`]=0W/+m!Q--XIZ]Em.j6(5]Q$JLFjmW+9p$!N0G8)&g''`j
%F[X]DfgW&Mjr6#KqF8(&c7FfGs2cmOpVsMWITInaPb\"M6hSe<PpK:TSMG<-bEXA8N*1'?4QQ)ED[M-h((]"aKbq[^C)6Tom]_HY
%>tadk=aHK1DUs[Vj3@]\Q5^NR0bYHOqZ&0+En/RP1.t/-A>p%$Q&<`qc*!7W;Yja:0ChR11ZeX<k^#uH.G[/_-PpsBqt&Sn`AE[9
%/X@f2p)=Q^PC!F&a6FG)6aH>Z5;_IQ9YXX[lQoC5'2pX<.=U.u*B1(.M=?a`%uj:D5Jkf9D7;C!6c,4W[5CB%f'-:/fbX\@5[3AB
%Gb5qSp1KpN&a+IHh&/_-?T5]0p4k2:WqSo@GlI?g<H_f*0No%)Z\h1@nY&Qc(XoUh$j"lbIB@2*8`>e\)SS1EGd@:fQ;>$s;QduQ
%DkX5O@MSI9VUL+3c%$l]GQ4>#jk$ZfB+G`u6-\**baK+fAQ-UK^5Er="3ulUMBg^&HuN9S`eZ>3*@cL'FKhJ6eu>OerA>PtA9s%!
%U2\g/:)5c3B.PHM[Sh#L6$Z5"h(X'C:^,U29rf?)?+bS9nlP4EfG)j)!mYAho!24N*SknSKl2^<B*Jg\[gG6G.0!PPdP7_s('p,e
%8^R[`.0]@`(JNIIjhet#*IQ(8/Z(I,0T_u7;aNXE+eo<ao-?%RnSW!GoIpe-)KHt^'Gkg=iW%*u%U8V#1*L-(S:]t*Qpa5$Ch7M3
%%Y:L%rp9u<n&qqrPX.5qqE<"s>E6C\<<hL'Q[@tb2Q8=R05X2d&,",;daj($f<?3/O^uDcd<)ENp!U$LR4WP)%l,rtjtRsJ@4>s8
%)cLOpiSSJERd+1OhLr-kn(XG,Qrnb"f:G*[C6k:>o"0cj7>H$Dd8NQgRAgb1%&r'9M@M3b[&$`QM?uTIr:[i!42F[g!@[rC<Pa1p
%(TD^\_fp>Fj;PDMXd850J3Bq'e;Q^4..DL5BYn^&U2meOTr-N$Jqn*^+=>QVW4pZ.LTsbU-[T'iX'^]_:5csJ8Elu?hL.cI>/+%8
%XE!LEl]asS6k/?4KZ>6kA>6NR0'5PQirdS\k;1n1`W1"]bI7-b!JSfO+s87HINr(ula5E-_PES1>'tXF5HMXsZ:dRd`;9,j&,=(W
%T-K"te[)NjW,mIqX85bk)%X2Wr+NDt1f<>-?S5gFJD-`.Z#QE6!"%0rf$*$%`W,KkA)k^(P2H&na^a''CNh,&cltPk.cBPU?"$ju
%HAge]hX!Rl9#@,CI>Ad)!;t69TDD#1c$DGLE#jP8X.WU4gAD$d5SpX6e^I#gSEh&p_G$"@aeXiFFf6b&W/mloa&Z^hejo'5ia41*
%PpD>;kgFbi1#"QpMqGdm0;ERJ!gHl^fFnspR@\i'-='hHNqZuW`7c!h5hH\_p_!(^?`;uR[6Y7GFe<RI[>c%\]\V,fD'Q'A7PO\&
%h;_c[GC3A9kLADr-$<(8:!oL6O'W^>fO^JWAn><N[*O,$hIUs)hNG00,u/VDCqlpE3opf=e_2o&*t=lLDXA!Q`Kaf2FjPYt6[1c_
%^Iscj4S3.)09)bRL-crEf'+dY,n%JnX?]d`he,T#K4(g];l/OR<mWJO/Ru8hAdpRodVf[Sr)\ef0#=0E]*/oY?,]>1VP4VuJa&\d
%7FdChl=69t]BAlt3`Emh"H4uSLV3N3>USXsn5kq`SpRL\cfZI"7e@t[=`;^tD3UL4REFjdfnV&4Le/GQII'kE3h4j2OB:&^YG-T6
%['Zio<-aN-ki3!LhPAJJdMArOO-Kt68gX$9R-G?qZ)'K5q@EH8o@Q%/']`?(3co%R`CcfYe?H,6=GI"dEns\\6$4]s:>^j)*i_S!
%p]ZgLgZhVd3kI5`9quT=mblMkHmlsKfp:AM)N3#RL\f"a71)p#r>=krorLlIF&NUnWf]K;+HTr_H.P_&B[fHU?5dZ*IY*q!WW#W#
%?n96:d;'nB3d\oa>jFf&X`MP"8uCL>g+*`^@"Oq%SZR^PMk810AC#HJibHNN2Vmr39+)26OD%f;j4e+L+1NS%I'TAZXg9=/>*bU!
%=*PO`V?^?C*f,4tru`i-)S@:eQS`uEdMY4ic0ADFY"!/aL^.Pb.Zq.d\hWLNT3LKs+]o)=M^+jh"RE#8W6c,/(BBqnh*(P5`HAOf
%3NC0cCp'1clB([W@!5?j$&hY_!qO-.9*](`>uCKD;&/iSRXppt9lguq/4O,p,++@R3pMgGTk19$oLJ1mQX2/6d(;h:DMlUd<-DRk
%8U&Uo$c\SZ9epfG"_p9W46DM5P+\pLH!4bD^HV'Z%M0JZb-Qgno+Yr?[]Zb7$rFBk,t2WQCMXGT;X$N2*taSl_N%$h6m_R$*r`?]
%bR>1cCZAph7BX`3\tht?17o?$T,==dUT0m5'S=SfZ;5d*h,IU_F(V_7\p*<?8S>qYX:J$q<95EP)K;bjPr")i;i8o'k=DWTJ`'K*
%#IhL`@&A?hdbi`Q(7R7LWB)4,/NiIdffo@q?iJNA-PZ2@K\04$])O,4flYk3/RK;3<su*SW`I>i+MT-l&]Dh_'hXHW*dV)![#5[u
%UpM\85O%LPeOq#MoOd5*"E*/noRqrl$tlP4ec(&&kL+,@;+:##+Q)-Q)KZOiGL[aL'0uof5gYoUD%d(7O\SmRp>5JpFmcXV12&0#
%h"-"re_YZ?hdVWsQ03-QC?'IkdEdhUSA?h=TtbiBhtZQfhts-%QcH(5;$T>`TF=[mQo1THP"@J6F)XCCX(SG-jpe9\QXhp/Do[,E
%%#h%D-W+h&K@b]I#<g<Nn@=Zs$nSWZa@'s?;Ml\:\Qn.'a,UK;R%AZUMu$-+-5p^"<(*UeO6.1`83,/$&`YoS'3Bp9[Am,U-YYU^
%)HnOK`gInBo.1,[VmT$8aY,[jdS/TPe=@lQmKt,^+deoGHf:(nDMBu03b:<;*Ae.TjF$gP?-A!CiGmQEWCJE#@tsMH_&)YCiK1a2
%0fk[@d1?>?nt!><9&pO5+j/X1)h'UQU7jd/P_<@!VO(BdlRP>sH/DjTUR!FMTst/>kK43f1MbX*[h1P3?IG.u>_T.HF<!:V!ed3k
%DL6.rTkD[SL=_n`f4h,o[YUuB*\^51;/?#J<:d:]TO]\VNbM.(;1oZ2jLWcZqt&#1rc(/g*q6&j+n*J)XEdZ3;g\`1kHa]*]70cB
%3?6lPNE"(a.Rf"mT;27;`8jk3RD!B3?hj/=8dIE!<*n>I/&LdsOQ8jL>N04\*3*#9R4qnJ(?`PT\X!C[nl/Ps#u1;$.BSl8b.Y1b
%Uj^6SC+$FsoK6]!I#-0;-['?t7lfF>9WNoJU99G"W\SB%h[FA!AiBG#EDqi&T:bi3(CFFl6^g#R"e;0F*i>hkTCg't*&Xe'*[g8?
%.Y,H@6gkHk;]-Y1,)M,XPH9ss4SHGY:IgcB5srt7c:2S[]LtHk8WC<C.N3)[9o!Q9"g=I'!JDM*L(-,U[P&c,"IR+6Eui7d'#BIp
%XC^[:/_rrAGIh)o`)9*_<TC(#_l3DaI2Hm5W)Xi!0-r2n]4PF^!TZ_9,_3p(cV<`*@94NsV0C1)$XIkpe!KKi?Ft^#:cj99f&02Q
%!:#(qMRANW9CAHLE[%+Wn0J3a*Ll0f&#tTk@NA=#S3rtqIe'&:ZeqDWNon%/XJ<nnI`TUnk!ng4h];HWL<.EA&G),A.omYlRNp3S
%=^2MN^T!4m4hj-KO^NpIojP&o-0O2T04]8:pe"FiPWUr71MK.=Y&Hlrd7+BO7pGEC1TM@CXHdS!3*"AhnC[;,Uk[$%_+bG)-X1iF
%=tV0)FfJ!%XX7FCh^KAWUGZYh)3i2B^9](q!%K/8E1D8`@j"fP.<`j5lR`jK2O>kTD-'O_'Xfi@7T$T).`gDfkX:GH8/2UQ`1RsZ
%Y!L9O9O;]W4Ya1+HBQFjO(."NU!,T:6)K@@]jK!dN$C\q`k+OU-gsZ!c"6Y\p.OMc40U06U,i.39M:AJj6=^f/o8MggChG'ATCWc
%#26tbbi#q6Nbf0jTd#f+g?NR23=K1l`E'M\&uj7GfQ$FO21/"&qfu.tA$-NR:9L#2]0&5pb`,;M*H#s$V)F;]%ut.<GA,:<W281.
%T$&.@$V4Zd1'tlY?YMM2)jC#Ze-9\#FS_N3-7a$hI=V4tgmW5d=7mmLbSsQZ;4kmT%.qg_9X\A46t-?7S=9n_(KMAI.$Y4:5&1LN
%ZDGi6)*UeS;C$O<\<^n:ag)k<o1%f+n4C6.lZcNR!,,l=_^\-RGUZjbCW=J45f:o$lYX)/+J><;e;<I;,Hc%BP5Egr>6lY51+O)q
%)7`pW5X37c93[o;?db$j]P4AC3+;3Gd#2u2ct81l:Ss:_GQ6@f2;B*j9,_i8leF5r"*.]^eP[aX/$g,p'cJ5qO!LKd8Q4^A\$/Jo
%Rs@t1O<bskBY$HaFb=%3&gJ(V>\;)CRDilG@F'b)@1MPtVY<R&(erTLMUmor_]K:)G@9kepa*@tbp9eBN[22nZ6I0$<%O=r6i]TJ
%MW?Lb,/m8E2q8KCB0@r05VNbCK#jcKWE@$8?[F`]P&jg"A9J^EKN\uj"YaIA30Vcq^`oYY'GD'$;kh\o0+P[2DSX[<iASu=auY!;
%/XZ`/p#'mcA(\^g2-KA*OCOUCMX<q&6n@P&4d)h%Mj'7il5VA6WE"so9t12;:Z7/$j9`I\F$:#RBsL>jWVErIgXd).B%m1mP&;Ar
%\qX^.)rUFH5qj8)X6Xu*C=T2Yd9;kB>3lF;`JEc.Ej]$.AE+mM26t9"(;`M>1&a@t>[Q=02rIi,H^]7K?i_pO:g7VKgg(H::>IaR
%jp?kiB<AaVSgjkj:]^u5&XNG:bBWmO1=?NhqP=^sPMh7L-N+U+ToZHfVsT7rZT5!aA3=QZ5WIq--a-"LU#_Lakq`m!9EL('RBuNO
%p7Q;hJ%%o"d>BGpNu&JU2Had?UU,ZaH@D=DVT:Z)*Z*CcoAIge8Dq\#%HX!T73C:<hLWEt3QH/;n.hO#IO:LqfuFQ8_%IQfE';#C
%S^E(tN+=2-1qhL6'+KAO,t*&DW;U^2!W59$lH'8tL_FNY3^rh4@FAJdJl+[a&qCnR'!?c=,nSNkf_k<$Uj!%o5l<ASF4gXRGA_%:
%<)>jp_d[^TW).MN//""@\fAU!U>].=\<:qHMg/#5CFfso.WoU5>"X+Njmq\j8S6-CM$.@Z2'O64G"^G=BC`BGr6(TZffeYg0sjgI
%cn6EnWi<b>"m&4->/$W1fc<#)WZ$#,fQ9=h>C]`i&2kNGR4,J9?%Jl<ai(nIX*^up"@:Bf]^*.9V7/1H:pVH"M5>9f1c)84hhZ.;
%'KHsh5XMq61^p;Aqb';5SpU(*ooA7G8XdP9l(1]8iY78VcSbr2S0J>H.;=^2mNrdF/KAE!-JV+)GJZAI)`UCt)1[Y3Hf<#BO*;7F
%BM8fCGQaJ+FG)oMLQdc+1,^sR&UL"o&`s0/NdLJHHHIHbBSM$)SrVgc!HMBf+s&,mU:jUL4e<KU\33s-\"X0#ApY1+]mIR4Z*YY(
%CLVjR7YhCp]G)P@R'O,%#(]PhAt:CSS5r-lfdhQITChJX[N7pOg'P$?J-Q7_A^;>WQMGU/0p+,rJ=An6_5rJ+AW%fe?M\`L+g+l9
%"*`phT[g,eD:MAfB6T*hdq*15_e$96JoIN=`F9NKO-Fk\fV!&Uj%@fk[hO1-E//7LZ`F/h'YK4/=EX0A^`$e!83CXB\C35B';(Z>
%oFA727I\)[s+?8q+J9jWGlnMrSS;)^=6.>cec_*uhV75B8=A:359,NrWa$^'(Z,3E28^kN;lO1_R2HsBEM3s&lPpOAY6Q"Tb6A$e
%OJlVdN(8puAY1#@o!2Ug5_Vfc3I&\Q6E34lca]&b?9uugehZnpVLbiPYnoA2MJ1E"<2U9?oLI;1LZ#$\YS(XZ-,(QD,^K4+?kaAN
%fYN^_AQ,.gGpk;<0ADE48@5h;-'4!M>R0',aMs*KaTjTK,s*>V9p!rCTi:>XV/4jFUf+n%cO$c4l)l#N@g(5O$D3DP<U(Y%dRSFI
%h$$@+bA`26inBqN[Gr:hQJ6h(bW%,9Si.>EY\_Y+;I?<@G$%rtY*$:W1C!ne\ZNV-KRT5o.m(%1je&$EkA'OuEY1iMLg33:@g*sm
%KbUC^"g-me#kDB*W$TuL?^K[P'q;]H%OJPODNsFlbY#7OEZn`>^H$5S@\qKdKWmTX:p>KVA:SAIn_JF5cj*G:mX/0QNBG2ESC-$G
%BCk#JBrPB[jJ95\:BWc4]5l1i`%PBX*nec\X9kg(-M[mYSP5;':EfI4bX#7NW_HbT,X[`?@nE1d((3XLdf>5pcJQYRCFnS2(b=<?
%Naf&%k5J!ppRhUVW"(_@W#*FDdS,&0:E)a#cJ09Q?E5G.g=pY*Uknhu7Y`9SGmaHGPF7sk1(^sa#a;8?Z#Y%e5gJZ_4]W8M<l.sR
%ZtZe/he"jei@^/7W9Ms?d2sB@L`.Fg#X)6.%C9*Z@DQ#!f'c]^O)q)[k]52Xf;P_D!XmgTbc,DgEBpTm1Qjb7g;W=#P)N,D.]?MX
%+_*6J2<APsc?)IjXm)Hl_p\_XG-W,.fFfQn;f-O@#qBCf7X"&^J.rgE#lZQN)'Y"[31-lR"VYa3^9CgiIqooT>5^27Y+s6+Q>`$F
%\sa!l#WQt(R6ik^[Zi3"9bM`W#`tc0"M1RX@1C0Z%J%86;i'ZnKp<N0"R\9q;Z<$3r_s*.WZ*U)o.pi>BB#:h%!3o3p$B*M7)g#t
%3V;qpkPi%.971HQ9Q%m"0=?r7=MsF*L08R7&OD\r]XM;GHdH"CNEi/1-KcAlI*&PJ*^aTG)rdTr&n:I)/)ERLBiK'r8u-q>!Bih*
%.9F0'#6tIe2<70!9tiBF9S=u"ZOlW\-3LGhnB6oJG86r-*p(Kn?^2WlXTd4dJYNY.iGB/_W(E\t(U1iW#=hiT*PSaYG.0U&m3Aq#
%F,55YoY/TZ0\a?:i+P/nFH/.F%Zl0uHd!Gu]HJ.rVVS,4q]%b5(P%K*LQ8sgclQ,Dr`l+Sk#$V4qI#9L;e+@.6h^X9M69Y1B,+(r
%(-L_-?]K4N=n/`9%Kd3*@ADfTeRd0Ko_<O;4\*Y.dm7=:Q+X[m?[@D<Ib8*>YuL?g-$/l'%=G6?&M4ddb+!u-6B9q9OZRpPNp=d_
%#Z6?/=;^AKS6F&o`7Kp8d;M?7g$)a!""\%\)>_^:#1XZM?q!8eBj>A[hR-GiOS"7e2P<'D+KLKq:Ld-QD<P#M^a#IQ;b-jR',9T<
%MEOs42)ssqom.A76\6n3**S];Pu5B#>OdQ.od)Rs63CrQa>P8JFlJ`FWMOr)@mR)R$T6E?IQa)D@%.6_-IFdNU%WbZqcmCs8Oi&,
%RUqV^+nE%GUY8Xq)'`STZnK].6Wc>9/@bgK[T]*mioWdn*crg67l>/5>Y'gF#'0:9F@?m_p@A[d`<D$C4-hQt5;V72D:#`%#@+#O
%RE95,os3+Z*NQ0dmthI.63TJ.)D(/GAZP>nVcY7R5r"ep5/3*kVP1MR9FAcG:uO'/`Re^F\kU/r]S!h/=TkkD.UZ]poPmf`.*g8*
%I5hcJAG'C(//b2SAf,iEXe7R]Leq8AOlU*TBi@g=FNqfGjBc'"eaS\'.+9*XNM<7[&aAu]I^K0KE`BJsY9@u\dDKg=5@'OR@R`u]
%K"O#oQADD/3-\]C%#?5$RVHKV:U]@T4+r+qD*Macp%IueIFLB3kE#j,iqh29N#`CpG!r"fM`bT3pU>KKG6GN2][?c#B$4+dK8a.t
%%C@YtYg6Y&36Vk%/Wh`P@l!'eV3(R;N7IP>65@o:&:/VIRQU[:lps;MZCB]A-B<#g8\6B8`mi>BE*&NRiQ!n:s6eRp0.dRf=VW@p
%Atl#Hp,ljVBmYNn:mq2Xc&jFLaJ][9o#S?AbCY%fQsj+nG+4>,ULUV]''coCZ`YRJj.^AsGo;e0LMW=1.5pY;c:nlg`3;h=n5/XZ
%mIVs+OZk@j!?.(NZ%8H8fTm(=Z0IW(ahoJ;9t433#a#$b_]+imq#%_:=rspBQeJUK4!fa,,<NBHI0<P(&]UNN@Uke00b4!TL^//!
%9O.faW]-[!H]KCYN3A=]coX4CjaSO8B<#L?OKoji:*%OXl8c:oX<q?l@>^?`7"j\IO#2c*LqfHcD=ucLG*BL9fPb(tl0g<<9d0ul
%\;5W`iP)fa^fH"g,@jb#G4$HC?#8egNi?n9jq@D>DQHFu[?6\nDKj8k@IK4rPW`QKK8m.c7^/1Y_Qp51SO4Dto=&))^qTZ/F]-Dm
%H`EfSP'ie,*2C'@GP(^X.eu)TR<2"64'GBl:Q`]Ilq5:k]^l&j#ifuK9o*2%a2!-U_r<*l,UmnBYoc/?oU@$IIFsjbr(8XF%-_lZ
%D0A:!6Ve59ikp[9U5g.Yd2Sq=V*fD^;o50_[F\j,6#G:\=V^5UPS<IGbTCI.!XmUk*FApU:+0m`L2rXH3K,_:8Z[-7JT<R2a%$2&
%`\b]q6jAHS*tQgO[o-Vd%(&lq*)>;#3]Mpc,!!;KK++!sg,osTGMH4C_'sH]gJG?Y46sp#s864drSj/>J,[p_It.3^YJ5DTleft%
%I/Cfg^O,_4&"gT3k'>n0+5VGGiK'VfrV[f[5(3C[pHQ@gpP5Yj5Q($2cgQ>^nB^:tp%83\%mU$jj/3D`5Q0uis'Pt:\mK^Rk1een
%p?Sp]#;n99jT~>
%AI9_PrivateDataEnd
