%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 7_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 94 133
%%HiResBoundingBox: 0 0 93.0403 132.8258
%%CropBox: 0 0 93.0403 132.8258
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 9 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:40:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:40:02+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:40:02+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>128</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq8Yvv8A&#xA;nJfQ7T8ym8pHTnk02O6Gny6usoqtxy9NiIeO8ayfCTzr3Hhgtlw7PZ8LF5z/AM5AebLzyz+WOo3V&#xA;hK1vf3jx2NtOh4shmNXZSNwfSV6EdDvgLKI3fO3/ADjLruqWn5s2FjFO31bV47mO/jJJEnp28k6M&#xA;Qf2g8Y3+fjiGUuT69tvMvl661i40W31K2m1e0Xnc6ekqNPGu27Rg8gPiH3jC10xj8wvzm8keQ54L&#xA;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&#xA;XYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e2b1a4bb-743d-314c-b879-51df2655a49b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e2b1a4bb-743d-314c-b879-51df2655a49b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8e9e7e28-1eb6-42f8-bbb0-dc9535292a96</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e2b1a4bb-743d-314c-b879-51df2655a49b</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:40:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>86.873602</stDim:w>
            <stDim:h>53.937137</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -132.826 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 132.826 li
93.0403 132.826 li
93.0403 0 li
cp
clp
81.054 12.5777 mo
74.89 8.4488 67.7796 5.75739 60.6478 3.84235 cv
53.1702 1.83405 44.9827 .0967454 37.3138 2.08942 cv
30.1947 3.93952 24.2103 8.91559 19.6302 14.4996 cv
8.68977 27.836 6.63997 44.3541 4.35676 60.897 cv
1.55989 81.1563 2.60676 101.659 4.17512 121.998 cv
4.32551 123.96 5.91536 125.237 7.87727 124.818 cv
8.11653 124.761 li
10.3646 126.551 13.1517 127.305 16.2513 127.725 cv
22.0394 128.508 27.9544 128.81 33.7884 129.001 cv
46.1517 129.403 58.1409 128.067 70.3255 126.144 cv
73.3314 125.669 76.3382 125.194 79.345 124.719 cv
81.1263 124.438 83.5618 124.487 84.9564 123.153 cv
87.9437 120.298 86.2513 112.743 85.9486 109.22 cv
85.4095 102.918 84.7572 96.6207 84.556 90.2955 cv
84.345 83.6622 85.6497 77.1685 85.6126 70.6099 cv
85.6126 70.4786 85.595 70.3604 85.5804 70.2393 cv
85.6009 70.0616 85.6156 69.88 85.6048 69.6817 cv
85.4368 66.7008 84.3636 64.564 82.6634 62.1363 cv
79.9974 58.3297 78.3841 54.6959 78.5872 49.9258 cv
78.9906 40.4195 85.2904 34.0674 89.138 25.9639 cv
92.0882 19.7501 85.5931 15.6173 81.054 12.5777 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.698039 .698039 .698039 rgb
f
34.6947 4.54303 mo
32.7288 4.54157 31.1702 6.607 29.8822 7.90827 cv
29.5687 8.22516 29.2718 8.55573 28.9661 8.87848 cv
25.9339 10.4034 23.7943 14.7188 22.2142 17.3531 cv
22.0638 17.6148 li
18.4788 20.6832 16.8431 26.8609 15.3255 31.358 cv
15.2347 31.5582 li
15.1693 31.6998 15.1341 31.8389 15.1126 31.9761 cv
15.0677 32.1046 15.0228 32.2388 14.9779 32.3638 cv
13.9798 35.1451 13.2269 37.9078 12.6029 40.6827 cv
12.4935 40.7418 12.39 40.8131 12.2962 40.9005 cv
7.65755 45.2105 9.79817 54.8077 8.9427 60.5601 cv
8.47591 63.6988 7.85774 66.7833 7.98372 69.9771 cv
8.08137 72.4908 8.51985 74.9351 8.79329 77.4029 cv
8.66243 80.7857 8.41145 84.1632 8.43391 87.5508 cv
8.45051 89.9385 8.61848 92.2183 8.98469 94.4307 cv
8.2679 97.2447 8.6302 99.9835 9.15755 102.818 cv
9.64778 105.442 10.9183 108.454 10.9368 111.255 cv
9.0013 110.993 7.09505 110.929 5.10286 111.407 cv
5.12825 111.439 li
3.88216 111.841 3.25911 113.85 5.10286 114.617 cv
7.42512 115.582 9.93684 115.92 12.3782 116.5 cv
13.7699 116.831 14.9427 116.063 15.4271 114.769 cv
16.724 111.308 15.7825 108.196 15.0013 104.731 cv
15.0013 104.731 li
15.1146 104.483 15.139 104.191 15.015 103.868 cv
14.8636 103.473 14.723 103.076 14.5931 102.677 cv
14.221 100.631 13.9115 98.5709 13.346 96.5845 cv
12.9212 92.4088 13.2288 88.1339 13.5902 83.9556 cv
14.0775 78.3238 15.347 71.7969 12.8978 66.4967 cv
13.1712 64.6671 13.4935 62.8389 13.7757 60.9796 cv
14.2572 57.8101 14.3802 54.6856 14.4759 51.484 cv
14.5072 50.4678 14.6165 49.4444 14.7308 48.42 cv
16.2347 43.7584 17.9036 39.1099 19.5335 34.5445 cv
21.015 30.3956 24.0999 25.5411 24.7425 20.9332 cv
24.9359 20.6343 25.1195 20.3301 25.3157 20.0333 cv
26.4974 18.2496 28.2865 16.4713 29.7279 14.5753 cv
30.6722 13.4957 31.6429 12.4385 32.6751 11.441 cv
33.9378 10.2213 35.5238 9.2071 36.556 7.78815 cv
37.5491 6.42438 36.2044 4.54352 34.6947 4.54303 cv
cp
.419608 .447059 .447059 rgb
f
78.2044 47.7369 mo
80.2181 38.6695 86.4974 31.0626 89.7122 22.4317 cv
89.9671 21.7481 89.6029 21.1114 89.0511 20.7579 cv
89.1019 20.6182 li
89.3363 19.751 89.1712 18.8023 88.681 18.0508 cv
88.5345 17.8253 88.3626 17.6426 88.179 17.4678 cv
87.7572 16.3448 87.2884 15.1324 85.9525 14.8907 cv
84.7288 14.6695 83.7679 15.2198 83.3236 16.3829 cv
82.8665 17.5806 83.3841 18.8116 84.2747 19.6339 cv
84.3372 19.8326 84.4056 20.0284 84.4798 20.2193 cv
84.0579 20.7642 83.6898 21.565 83.848 22.1602 cv
82.9408 23.1343 81.9447 24.0572 81.0716 24.9547 cv
80.3802 25.6636 81.2689 26.7154 81.9993 26.4234 cv
81.5726 27.106 81.1683 27.8038 80.8206 28.5391 cv
80.3402 29.2183 81.4036 30.0352 81.9671 29.442 cv
80.7728 31.4161 79.597 33.4439 78.5667 35.5054 cv
78.2474 35.981 77.9271 36.4576 77.6116 36.9312 cv
77.3988 37.2506 77.3695 37.5909 77.4583 37.9019 cv
77.0579 38.8306 76.7025 39.7642 76.3919 40.6998 cv
76.22 40.8155 76.0765 40.9825 75.9818 41.2105 cv
75.2015 41.2227 74.4603 41.6744 74.1956 42.7266 cv
72.9642 47.6231 73.0618 53.4097 73.9661 59.045 cv
73.4583 59.6285 73.2572 60.4757 73.7279 61.3716 cv
74.0296 61.9434 74.3587 62.4971 74.6986 63.043 cv
74.7796 63.1978 li
75.5638 66.5723 76.6009 69.795 77.7855 72.6168 cv
77.8499 72.7706 77.9339 72.8956 78.015 73.024 cv
78.5345 77.1998 79.0755 81.3741 79.4466 85.567 cv
79.5072 86.2657 79.8626 86.8546 80.3538 87.294 cv
80.3607 88.9229 80.3997 90.5499 80.4544 92.1749 cv
79.3411 92.4342 78.2962 93.4542 78.4984 94.9014 cv
79.179 99.7779 79.8646 104.652 80.4574 109.54 cv
80.4544 109.577 li
80.4544 110.107 80.472 110.624 80.4935 111.142 cv
79.8079 111.398 79.1546 111.717 78.472 112.138 cv
76.7366 113.208 77.2865 116.486 79.5902 116.265 cv
80.4193 116.185 80.972 116.123 81.4866 115.979 cv
81.3499 116.166 81.2396 116.38 81.1654 116.623 cv
81.1331 116.614 li
81.1048 116.799 li
81.0853 117.005 li
81.0511 117.225 li
81.0433 117.478 81.0208 117.73 81.0072 117.982 cv
80.7738 118.032 li
81.0531 117.665 80.845 116.911 80.2845 116.983 cv
75.7816 117.564 71.2816 116.783 66.7659 117.29 cv
61.764 117.851 56.9964 118.581 51.9281 118.67 cv
41.7327 118.849 31.9232 118.863 21.7786 117.821 cv
20.5599 117.696 20.4017 119.561 21.4993 119.893 cv
31.2181 122.839 41.9935 120.982 51.9281 120.298 cv
56.3626 119.993 60.6693 119.235 65.0716 118.838 cv
69.6595 118.425 74.2161 118.812 78.8031 118.404 cv
78.4583 118.465 78.1234 118.53 77.8187 118.61 cv
75.39 119.247 72.9388 119.92 70.4993 120.558 cv
65.1849 121.948 59.9271 123.406 54.4202 123.78 cv
53.2122 123.862 52.4945 124.673 52.2581 125.596 cv
50.7943 125.827 49.3275 126.031 47.8587 126.188 cv
46.1341 125.848 44.3714 125.84 42.4281 125.701 cv
38.2474 125.401 34.0794 124.898 29.9154 124.433 cv
22.1878 123.57 14.2689 121.643 6.5052 121.533 cv
5.12239 121.514 4.90755 123.232 5.89094 123.881 cv
5.86067 123.911 li
8.00911 124.953 10.306 125.709 12.6741 126.289 cv
15.6654 127.276 18.8558 127.857 21.8245 128.444 cv
24.4945 128.972 27.2591 129.535 30.0179 129.751 cv
31.638 130.058 33.262 130.352 34.8968 130.613 cv
40.0794 131.443 45.764 132.624 50.806 130.707 cv
51.2357 130.544 51.5775 130.274 51.8314 129.948 cv
53.2845 129.862 54.7386 129.731 56.1986 129.548 cv
60.0003 129.071 65.763 129.119 68.7825 126.56 cv
68.9417 126.4 li
70.2454 126.128 71.5472 125.844 72.8499 125.55 cv
74.7357 125.125 76.68 124.602 78.5599 123.914 cv
84.0794 127.193 87.2806 121.19 86.596 116.255 cv
86.5072 115.614 85.974 115.066 85.3353 114.757 cv
85.5443 114.4 85.6702 113.958 85.6644 113.417 cv
85.6517 112.266 85.5599 111.146 85.3978 110.033 cv
85.387 109.88 85.3704 109.729 85.3607 109.577 cv
85.3411 109.31 85.2786 109.073 85.1995 108.851 cv
85.1693 108.698 85.1302 108.545 85.097 108.393 cv
84.7474 106.322 84.4066 104.25 84.0833 102.175 cv
85.3216 93.4517 85.4046 84.5162 85.2923 75.6597 cv
85.43 73.3492 85.4505 71.046 85.1868 68.7867 cv
85.1829 68.6177 li
85.1683 68.6197 li
85.1439 68.4268 85.1341 68.232 85.1058 68.0401 cv
84.9583 67.0347 84.2572 66.5592 83.4661 66.4918 cv
82.1146 62.3179 79.7786 58.3082 78.3743 54.253 cv
78.3333 54.126 78.2669 54.0367 78.2074 53.9385 cv
77.9642 52.3101 77.8118 50.6915 77.7913 49.0596 cv
77.7982 48.8531 77.8109 48.649 77.8197 48.4429 cv
77.9993 48.2691 78.138 48.0377 78.2044 47.7369 cv
cp
f
60.0052 107.961 mo
59.8548 108.491 59.7044 109.021 59.5804 109.53 cv
55.2982 110.084 50.9681 111.021 46.8324 111.563 cv
45.8978 111.597 44.9642 111.643 44.0296 111.683 cv
45.8197 111.341 47.5726 110.913 49.2747 110.412 cv
50.9154 110.2 52.5423 109.887 54.012 109.368 cv
54.2591 109.917 54.9564 110.244 55.474 109.663 cv
56.0755 108.987 56.6175 108.281 57.1224 107.557 cv
58.306 106.419 59.0931 104.897 59.4798 103.275 cv
59.7103 102.727 59.9105 102.166 60.1009 101.603 cv
59.7884 103.231 59.429 104.855 58.9505 106.468 cv
58.6986 107.313 59.3265 107.885 60.0052 107.961 cv
cp
61.932 28.0611 mo
61.3646 30.9908 60.8822 33.9483 60.4974 36.9234 cv
60.5677 33.9542 61.1771 31.0059 61.932 28.0611 cv
cp
79.0794 12.5533 mo
78.9466 12.5772 78.8187 12.6158 78.6937 12.6622 cv
78.432 12.231 78.0355 11.8956 77.474 11.7989 cv
77.3245 11.7681 li
77.3177 11.6724 77.2982 11.5753 77.2493 11.48 cv
74.6732 6.43024 67.1956 4.82966 62.0697 4.00885 cv
60.8118 3.80768 58.1829 3.06305 57.2415 4.39411 cv
56.5618 5.35553 57.1732 6.17975 57.9583 6.80329 cv
58.6283 7.336 59.5325 6.49616 58.9193 5.84186 cv
60.556 7.58552 64.8656 7.93464 67.14 8.72419 cv
67.3646 8.80231 67.5833 8.89167 67.804 8.97663 cv
67.2015 9.3863 67.0306 10.439 67.5345 11.0596 cv
68.3519 12.0694 69.3294 12.9034 70.4056 13.5997 cv
68.1439 15.7139 66.4251 18.1304 65.1536 21.045 cv
64.8314 21.7818 64.9359 22.6685 65.305 23.379 cv
62.7113 28.6456 63.1517 36.4888 62.8314 41.628 cv
62.5413 46.2774 61.6868 52.2867 62.2366 57.6758 cv
61.9759 57.7969 61.7552 58.0206 61.6536 58.377 cv
61.1185 60.2447 60.8548 62.2476 60.7708 64.317 cv
60.7064 63.1192 60.6087 61.9239 60.4964 60.73 cv
60.5638 60.5635 li
60.6351 49.3067 61.1419 38.3214 63.3685 27.2423 cv
63.5013 26.5806 62.6859 26.2442 62.3138 26.6075 cv
63.3255 22.8375 64.4564 19.0679 64.8529 15.2623 cv
64.8968 14.837 64.263 14.5836 63.9925 14.9058 cv
61.6068 17.7383 61.7689 22.1324 60.8265 25.6202 cv
59.6868 29.8394 58.7171 33.3443 59.5599 37.6632 cv
59.6419 38.0826 60.1732 38.0792 60.387 37.7999 cv
59.7279 43.19 59.4212 48.6265 59.5941 54.0416 cv
59.556 53.8297 59.5267 53.6173 59.4876 53.4053 cv
59.4251 46.1319 59.2865 38.8629 58.974 31.5557 cv
58.9642 31.3292 58.6341 31.3292 58.6224 31.5557 cv
58.304 37.9874 58.1849 44.3604 58.1927 50.7305 cv
57.9661 50.8194 57.7806 51.0152 57.7786 51.3057 cv
57.6829 63.9254 58.3587 76.46 57.1849 89.0567 cv
57.0345 90.6597 59.4876 90.6187 59.6693 89.0567 cv
60.3929 82.7799 60.9183 76.4337 60.9251 70.1041 cv
61.14 72.8121 61.5111 75.5259 61.8577 78.1055 cv
61.9193 80.8214 62.0579 83.5206 62.056 86.0909 cv
62.055 87.5216 62.0833 88.9898 62.1175 90.4708 cv
61.9036 91.3892 61.7191 92.3101 61.5462 93.2325 cv
61.6087 91.0484 61.4603 88.8433 61.1214 86.6666 cv
61.0325 86.0963 60.2611 86.3194 60.2005 86.7911 cv
59.971 88.608 59.8001 90.419 59.6048 92.21 cv
58.9388 95.1641 58.139 98.1246 56.3783 100.641 cv
54.7962 102.899 52.4085 104.303 51.0062 106.715 cv
50.8958 106.903 51.1771 107.14 51.3197 106.956 cv
53.1331 104.613 55.9281 103.352 57.5267 100.772 cv
57.9876 100.027 58.3577 99.2344 58.6771 98.4185 cv
58.0462 101.351 57.056 104.168 55.2894 106.79 cv
54.8314 107.181 54.2884 107.532 53.6204 107.829 cv
53.4564 107.901 53.2884 107.963 53.1224 108.031 cv
53.0159 107.924 52.8597 107.862 52.6468 107.885 cv
50.0482 108.165 47.5111 108.627 44.9915 109.126 cv
45.849 108.495 46.6722 107.816 47.4388 107.241 cv
49.4134 105.757 51.2923 104.159 53.1009 102.478 cv
53.724 101.9 52.8001 100.99 52.1732 101.55 cv
50.4202 103.116 48.6126 104.609 46.7044 105.985 cv
45.9818 106.508 40.6048 110.477 39.847 108.714 cv
39.848 108.713 li
40.721 108.43 40.3675 107.124 39.4681 107.335 cv
36.4798 108.037 33.4583 107.305 30.4447 107.849 cv
28.7982 108.146 27.1761 108.701 25.4984 108.814 cv
23.9505 108.919 22.4915 108.487 20.9456 108.552 cv
20.5345 108.569 20.3929 109.015 20.6312 109.312 cv
22.4154 111.538 25.5618 110.911 28.097 110.406 cv
31.5648 109.716 35.3118 109.865 38.7376 109.018 cv
38.6243 109.353 38.6947 109.738 38.9642 110.185 cv
39.056 110.303 li
35.5003 110.964 31.9075 111.473 28.1507 111.422 cv
27.5706 111.414 27.3587 111.968 27.5091 112.389 cv
25.4368 112.45 23.3646 112.492 21.2933 112.498 cv
21.1947 112.508 li
20.3197 111.67 18.8372 111.669 18.0111 112.581 cv
17.8353 112.741 17.6761 112.92 17.5511 113.131 cv
17.3997 113.332 17.4427 113.264 17.681 112.927 cv
17.5091 113.103 17.3646 113.297 17.2484 113.51 cv
16.3919 115.005 17.4583 117.232 19.3167 117.114 cv
19.7279 117.088 20.095 116.982 20.4329 116.828 cv
20.5482 116.866 20.6595 116.908 20.7923 116.92 cv
25.845 117.384 30.8948 117.48 35.9583 117.118 cv
38.2054 116.957 40.5931 116.833 42.8597 116.358 cv
47.7757 116.501 52.6927 116.458 57.6048 116.038 cv
57.9837 116.029 58.304 115.936 58.5853 115.8 cv
60.9534 117.03 64.0247 116.266 66.5706 115.96 cv
68.7318 115.7 71.2445 115.768 73.2337 114.816 cv
74.5033 114.834 75.5833 113.676 75.6234 112.408 cv
75.7611 108 74.1048 104.235 73.0501 100.024 cv
71.9232 95.5294 71.9935 90.8863 70.9368 86.4068 cv
70.8431 86.0084 70.6322 85.7418 70.3724 85.567 cv
70.2845 81.5377 69.7806 77.4835 69.4935 73.5093 cv
69.1097 68.1983 70.1927 61.3697 68.1146 56.4459 cv
68.0072 56.1924 67.8031 55.9722 67.5599 55.8008 cv
67.6107 54.6314 67.6741 53.4639 67.763 52.2994 cv
68.429 48.6441 68.6566 44.9454 69.3587 41.2794 cv
69.8607 38.6588 70.7269 36.1534 71.5794 33.6426 cv
73.4466 28.8536 75.6048 24.1304 77.3958 19.3077 cv
77.5472 19.2452 li
78.4212 18.8038 79.0618 18.1036 79.6517 17.3419 cv
80.1966 16.6368 80.7415 16.191 81.2269 15.3467 cv
81.1527 15.3467 li
81.9251 14.0064 80.931 12.2188 79.0794 12.5533 cv
cp
f
18.8587 93.0562 mo
18.8431 92.8175 18.4818 92.8121 18.4837 93.0562 cv
18.5013 95.3067 18.595 97.5567 18.6634 99.8062 cv
18.6732 100.137 19.1937 100.138 19.179 99.8062 cv
19.0814 97.5557 19.0072 95.3033 18.8587 93.0562 cv
cp
f
18.9212 82.2559 mo
18.9212 82.356 li
18.9212 82.2559 li
cp
f
23.9232 45.6866 mo
21.1878 59.4312 19.9447 73.38 18.4525 87.2979 cv
18.3275 88.462 20.1087 88.4258 20.2572 87.2979 cv
22.0716 73.4947 24.1351 59.7193 24.7054 45.7925 cv
24.724 45.3502 24.0111 45.2418 23.9232 45.6866 cv
cp
f
41.0394 4.92585 mo
28.8841 16.359 21.9115 31.585 20.1312 48.0797 cv
20.0247 49.0718 21.5628 49.0548 21.6781 48.0797 cv
23.5775 32.0264 30.6517 17.212 41.139 5.02546 cv
41.0394 4.92585 li
cp
f
32.6712 37.0059 mo
32.6712 37.106 li
32.6712 37.0059 li
cp
f
38.6712 75.3926 mo
38.9896 73.9444 39.3099 72.4957 39.6243 71.0465 cv
39.6712 71.0562 li
40.5355 71.0562 40.6204 69.8624 39.9378 69.6099 cv
41.0736 64.3218 42.1361 59.0264 42.9212 53.6983 cv
43.0433 52.877 41.9359 52.5313 41.6556 53.3492 cv
39.6107 59.3331 38.1341 65.6104 36.929 71.9615 cv
34.2454 66.7379 31.5013 61.544 28.9212 56.2662 cv
28.6087 55.6275 27.6683 56.1861 27.97 56.8223 cv
30.7122 62.6007 33.4788 68.3941 36.5472 74.0137 cv
35.3314 80.7476 34.3851 87.5401 33.3685 94.1348 cv
33.2259 95.0606 34.6351 95.4683 34.7923 94.5274 cv
35.7659 88.7017 37.0179 82.9122 38.2904 77.1265 cv
38.9466 78.2667 39.6136 79.4005 40.3021 80.5211 cv
40.5824 80.9757 41.2386 80.5782 41.0111 80.107 cv
40.2493 78.5264 39.4603 76.9595 38.6712 75.3926 cv
cp
f
52.5433 14.1402 mo
52.139 15.8565 51.7454 17.5748 51.3548 19.294 cv
51.1146 19.961 50.8753 20.628 50.6351 21.295 cv
50.681 21.3072 li
51.2611 19.7154 li
48.9788 29.8218 46.9652 39.9854 45.3353 50.209 cv
42.0345 43.6329 38.804 37.0162 35.6322 30.3882 cv
35.1615 29.4039 33.7288 30.2628 34.1751 31.2398 cv
37.4827 38.4796 41.099 45.463 45.015 52.3262 cv
43.513 62.0806 42.3568 71.8887 41.679 81.7574 cv
41.6575 82.0801 42.1322 82.0621 42.1712 81.7574 cv
43.3841 72.5562 44.6673 63.3614 46.0892 54.1871 cv
47.2572 56.2012 48.4398 58.21 49.6634 60.2076 cv
49.8919 60.5821 50.4505 60.252 50.2493 59.8643 cv
48.9486 57.3546 47.6615 54.8345 46.3841 52.3077 cv
48.3822 39.6099 50.6615 26.9561 53.47 14.3956 cv
53.6048 13.794 52.6859 13.5367 52.5433 14.1402 cv
cp
f
36.637 40.1578 mo
35.6214 46.4439 34.3714 53.189 34.93 59.5557 cv
34.974 60.0508 35.7845 60.2589 35.8743 59.6832 cv
36.8607 53.338 36.8265 46.8365 37.722 40.4566 cv
37.8206 39.754 36.7533 39.4381 36.637 40.1578 cv
cp
f
45.6947 103.408 mo
44.724 101.135 43.0491 99.2247 41.5902 97.2476 cv
37.1771 91.2676 li
36.6917 90.6104 35.5775 91.2374 36.0638 91.9185 cv
37.5892 94.0582 39.1146 96.1983 40.639 98.3384 cv
42.0111 100.264 43.2572 102.339 45.0501 103.905 cv
45.4173 104.226 45.8743 103.83 45.6947 103.408 cv
cp
f
48.1712 87.7559 mo
48.1712 87.856 li
48.1712 87.7559 li
cp
f
53.4534 77.1363 mo
50.4632 83.1558 48.6497 89.877 46.4447 96.2174 cv
45.9095 97.7559 48.3665 98.4307 48.8861 96.8902 cv
51.0003 90.6173 53.6654 84.2701 54.974 77.7774 cv
55.1497 76.9078 53.8978 76.2418 53.4534 77.1363 cv
cp
f
85.4876 90.564 mo
86.0482 86.9644 86.264 83.38 85.9193 79.8087 cv
85.9827 79.3179 86.0316 78.8355 86.055 78.3643 cv
86.2347 74.7716 86.1224 70.9971 84.9007 67.5948 cv
84.5775 66.6954 83.6507 66.3419 82.8841 66.5196 cv
82.7933 65.6534 82.6683 64.7784 82.515 63.8858 cv
82.4447 63.4761 82.2699 63.1685 82.0345 62.9512 cv
82.3861 62.6719 82.5589 62.1949 82.2464 61.6895 cv
80.9017 59.5132 79.556 57.3238 78.5755 54.9542 cv
78.3363 54.377 78.1615 53.7916 78.0189 53.2027 cv
78.5677 53.0264 78.9993 52.5631 78.9681 51.8052 cv
78.8958 50.0386 78.9661 48.3004 79.1019 46.5391 cv
79.1204 46.3033 79.1458 46.067 79.1751 45.8306 cv
79.4564 45.5909 79.6673 45.253 79.7259 44.8096 cv
79.9281 43.2637 80.5824 41.8902 81.0648 40.463 cv
81.2113 40.3609 81.349 40.234 81.4681 40.064 cv
82.3704 38.7691 83.2318 37.4464 84.0023 36.0679 cv
84.7005 34.8165 85.5462 33.5606 85.472 32.0831 cv
85.4378 31.3834 84.6331 30.7701 83.974 31.2227 cv
82.7464 32.065 82.2298 33.3502 81.4779 34.5924 cv
80.6644 35.9341 79.807 37.2457 78.8958 38.523 cv
78.1243 39.4122 77.6224 40.5191 77.2845 41.691 cv
76.47 42.9747 76.2962 44.7095 76.0892 46.1895 cv
76.0482 46.4888 76.0228 46.7896 75.9935 47.0899 cv
75.6146 47.0792 75.2279 47.2994 75.054 47.7413 cv
73.2093 52.4473 77.9017 58.8834 80.39 62.6168 cv
79.5999 62.8165 78.887 63.4478 78.849 64.3819 cv
78.6624 68.982 79.1283 73.5738 80.222 78.045 cv
80.2845 78.1929 li
80.6478 83.2413 81.1497 88.2882 81.7015 93.3048 cv
81.7396 93.6534 81.8958 93.9215 82.1087 94.1158 cv
82.3236 96.1251 82.5911 98.1456 82.763 100.159 cv
82.0296 103.044 82.1536 106.151 81.9984 109.107 cv
81.8216 112.483 81.1458 116.006 81.8255 119.336 cv
81.9134 119.77 82.3187 119.958 82.7044 119.924 cv
81.6634 120.388 80.1556 120.485 79.2337 120.766 cv
77.0365 121.432 75.4525 122.315 73.0599 122.248 cv
72.5921 122.234 72.2113 122.36 71.9095 122.569 cv
71.7904 122.234 71.5023 121.97 71.1019 122.011 cv
62.2679 122.912 53.6947 126.465 44.6712 126.538 cv
43.845 126.545 43.5423 127.316 43.7523 127.909 cv
42.5482 127.961 41.3372 127.933 40.1156 127.777 cv
39.7728 127.733 39.5072 127.868 39.3158 128.084 cv
37.263 127.784 35.1312 127.944 33.0589 127.793 cv
31.262 127.662 29.4827 127.446 27.7142 127.159 cv
27.6458 127.121 li
21.4974 125.059 14.8792 124.592 8.69661 122.586 cv
7.6888 122.258 6.98567 123.854 7.96516 124.32 cv
13.1322 126.78 18.6517 129.053 24.4066 129.069 cv
29.5482 130.5 36.0579 131.99 40.8812 130.176 cv
46.4378 130.837 53.3353 130.141 58.6859 127.832 cv
58.8392 127.865 59.0013 127.884 59.1888 127.869 cv
64.2777 127.45 69.3773 127.157 74.47 126.773 cv
75.057 126.729 75.4993 126.494 75.8177 126.171 cv
78.7513 125.641 81.345 124.104 84.3704 123.46 cv
85.2279 123.277 85.7415 122.372 85.6771 121.541 cv
85.7396 121.399 85.7855 121.241 85.7943 121.057 cv
86.1087 114.201 86.5189 107.333 86.5501 100.467 cv
86.5658 97.3629 86.6771 93.6065 85.4876 90.564 cv
cp
.301961 .317647 .317647 rgb
f
89.3226 20.0694 mo
89.39 19.1973 89.0462 18.5596 88.4896 17.7134 cv
87.388 16.0406 84.3441 17.0518 85.0794 19.1509 cv
85.3626 19.9581 86.139 21.294 86.4134 22.3048 cv
86.3275 22.566 86.3021 22.8624 86.3763 23.1934 cv
86.5462 23.94 86.3978 24.754 86.0892 25.5577 cv
85.9583 25.65 85.8363 25.7779 85.7347 25.9576 cv
85.1478 26.9942 84.5618 28.0303 83.9759 29.067 cv
83.2005 30.439 85.1331 31.4615 86.0335 30.2696 cv
86.7767 29.2847 87.2591 28.2266 87.7015 27.1568 cv
87.722 27.1187 li
87.7181 27.1177 li
87.7259 27.0997 li
87.7816 27.0054 87.8216 26.9097 87.8431 26.8135 cv
88.179 25.9883 88.5033 25.1597 88.9144 24.3541 cv
89.4183 24.0684 89.7435 23.4952 89.7904 22.9053 cv
89.8646 21.9883 89.6243 21.0137 89.3226 20.0694 cv
cp
f
60.6712 4.50593 mo
60.6712 4.60602 li
60.6712 4.50593 li
cp
f
77.4964 16.1632 mo
78.1546 15.8257 78.8128 15.4883 79.471 15.1505 cv
79.3626 15.2349 79.2533 15.3189 79.1439 15.4034 cv
79.0433 15.8238 77.598 16.9664 77.013 17.5313 cv
77.1908 17.0884 77.3499 16.6309 77.4964 16.1632 cv
cp
70.3314 36.462 mo
71.6585 32.4888 73.6458 28.7569 75.9241 25.2491 cv
77.4163 22.9507 81.2884 19.7842 81.845 16.9761 cv
82.2865 14.7545 80.8548 13.9063 79.1009 13.7032 cv
79.1478 13.5748 79.181 13.441 79.1859 13.3004 cv
79.2786 10.6041 75.4017 8.8277 73.3822 7.8653 cv
69.9681 6.23786 66.2161 4.49714 62.4388 4.04596 cv
61.8636 3.97712 61.4984 4.86481 61.9505 5.22614 cv
62.1243 5.3653 62.305 5.49469 62.4847 5.62555 cv
62.3079 5.81745 62.1546 6.0611 62.0365 6.38337 cv
61.7493 7.17096 62.8538 7.46442 63.2786 6.90729 cv
63.4339 6.70417 69.6595 10.1329 70.2982 10.4351 cv
71.2161 10.8692 72.1322 11.376 73.0804 11.7056 cv
73.3284 11.8731 73.5775 12.0396 73.8255 12.2061 cv
73.6243 12.6685 73.6341 13.2237 74.0345 13.5958 cv
74.0081 14.1138 73.9818 14.6324 73.9544 15.1505 cv
73.7816 15.7437 74.0433 16.3326 74.4818 16.6983 cv
71.1048 23.2271 65.5755 28.0987 65.8421 36.2506 cv
65.8275 36.3668 65.8333 36.4727 65.847 36.5748 cv
65.7904 37.0064 65.7347 37.4395 65.679 37.8736 cv
64.9808 41.5548 64.9661 45.315 63.9183 48.8897 cv
63.7454 49.4786 64.1986 49.9171 64.6908 49.9752 cv
64.6702 52.2828 64.7865 54.5826 65.097 56.8536 cv
65.0892 57.5006 65.0999 58.148 65.097 58.7955 cv
63.7767 63.5352 64.6419 69.1075 65.0081 73.9395 cv
65.3402 78.3121 65.8372 82.6617 66.473 86.9967 cv
66.8197 90.3043 67.6868 93.6182 68.3372 96.7994 cv
68.804 99.0889 69.056 102.77 70.182 105.567 cv
69.845 105.518 69.5052 105.536 69.1888 105.63 cv
69.349 105.362 li
70.5599 103.743 68.1458 101.478 66.5638 103.044 cv
64.3626 105.222 63.0872 107.832 62.5267 110.869 cv
62.4456 111.307 62.5033 111.787 62.6624 112.232 cv
62.4769 112.269 62.2962 112.316 62.1126 112.358 cv
57.0325 111.961 51.7454 111.525 47.1429 113.013 cv
45.2366 112.838 43.3216 112.787 41.3997 112.958 cv
41.0658 112.988 40.7357 113.037 40.4036 113.08 cv
40.1615 112.888 39.8402 112.775 39.4329 112.804 cv
36.9378 112.983 33.8763 113.862 30.8548 114.448 cv
28.2591 113.275 24.6126 113.824 21.9261 114.191 cv
21.682 114.224 21.514 114.357 21.4036 114.529 cv
20.6322 115.126 20.3841 116.576 21.4583 117.039 cv
23.0892 117.742 25.0072 118.008 27.0306 118.005 cv
27.14 118.066 27.2552 118.124 27.3958 118.149 cv
32.2474 119.029 36.5677 117.358 41.3997 116.962 cv
45.7406 116.607 50.1087 118.228 54.14 116.378 cv
54.1888 116.343 li
55.5452 116.393 56.9056 116.462 58.2825 116.579 cv
61.7298 116.873 65.1497 117.22 68.5423 116.503 cv
69.3118 116.561 69.9056 116.038 70.1986 115.363 cv
70.4691 115.345 70.7113 115.269 70.9241 115.149 cv
71.015 115.205 71.097 115.265 71.1976 115.316 cv
72.5404 115.998 74.2513 115.674 75.3021 114.596 cv
76.3909 113.476 76.4505 112.036 76.265 110.605 cv
76.3275 107.834 75.5911 105.467 73.8294 103.271 cv
73.4866 96.5059 72.2015 89.3096 70.6038 82.7823 cv
71.0052 78.4669 70.6361 74.0723 70.223 69.772 cv
69.8314 65.7027 69.4652 61.6241 68.7366 57.608 cv
68.8949 50.9283 69.0491 44.254 69.4427 37.5811 cv
69.8255 37.3546 70.1517 37.0006 70.3314 36.462 cv
cp
f
34.7728 7.44733 mo
34.4603 7.90046 34.0677 8.28278 33.64 8.63239 cv
33.4915 8.73444 33.3607 8.83893 33.2415 8.94635 cv
32.2523 9.67145 31.1185 10.2584 30.2064 11.0123 cv
30.0365 11.17 li
29.6282 11.0201 29.14 11.066 28.7259 11.4283 cv
27.7318 12.3013 27.1107 13.0889 26.8441 14.1656 cv
24.89 17.2081 23.2025 20.4693 21.5404 23.6436 cv
21.1107 24.4634 21.5833 25.23 22.2337 25.5269 cv
21.1956 27.6539 20.2249 29.8179 19.2532 31.9009 cv
18.0853 34.024 17.1126 36.3096 16.2415 38.6207 cv
16.2259 38.4234 16.222 38.2247 16.1966 38.0284 cv
16.1204 37.4249 15.306 37.0523 14.9525 37.6915 cv
11.1839 44.4932 11.1693 54.6929 10.1566 62.3111 cv
10.0853 62.8453 10.389 63.2291 10.8079 63.4278 cv
10.765 68.8394 11.2572 74.379 11.4759 79.5557 cv
11.4876 79.8297 11.599 80.0333 11.7591 80.169 cv
11.8314 81.3487 11.9075 82.5279 11.9642 83.7081 cv
12.1292 87.1641 12.3939 90.5953 12.4476 94.0582 cv
12.4505 94.2579 12.5208 94.4058 12.6146 94.5259 cv
12.6624 96.3057 12.7249 98.0718 12.7669 99.8062 cv
12.7806 100.338 13.0374 100.709 13.388 100.926 cv
13.3978 101.281 13.4085 101.638 13.4173 101.995 cv
13.4359 102.696 13.8646 112.073 12.5325 112.85 cv
12.3128 112.816 12.0843 112.78 11.8382 112.725 cv
10.8978 112.513 10.1575 113.266 10.097 114.047 cv
8.96809 114.021 7.80305 113.907 7.17122 113.925 cv
5.72298 113.965 5.72395 116.124 7.17122 116.175 cv
8.92708 116.236 11.9564 116.997 13.6907 116.128 cv
14.2005 116.788 15.0657 117.088 15.9124 116.731 cv
16.7845 116.362 17.3763 115.207 16.9564 114.294 cv
16.8431 113.909 16.7572 113.517 16.6263 113.139 cv
16.5892 113.032 16.5599 112.95 16.5355 112.879 cv
16.5902 113.016 16.6224 113.055 16.4632 112.479 cv
16.4271 112.349 16.3607 112.238 16.2962 112.126 cv
16.7982 109.403 16.4173 106.285 16.4525 103.532 cv
16.4935 100.367 16.7357 97.105 15.8587 94.0382 cv
15.8001 93.8297 15.679 93.6734 15.5325 93.5543 cv
15.5657 88.795 15.6029 83.9937 14.9222 79.3575 cv
14.8958 79.1754 14.8011 79.0416 14.6732 78.9527 cv
14.6673 78.6807 14.6654 78.4092 14.6546 78.1373 cv
14.5931 76.5582 14.8197 74.2047 13.4622 73.3536 cv
13.7259 68.2994 13.9427 63.0997 13.4534 58.1597 cv
13.9339 55.3062 14.4271 52.4551 14.9212 49.6021 cv
15.3822 46.9361 16.057 44.1719 16.2513 41.4337 cv
17.2474 39.4449 18.306 37.4781 19.3157 35.4962 cv
19.5609 35.4571 19.7904 35.3131 19.9427 35.0137 cv
22.8245 29.3643 26.8294 23.7086 28.9017 17.7271 cv
29.0286 17.359 28.8372 17.0113 28.5452 16.8052 cv
29.1947 15.6939 29.8323 14.5748 30.4476 13.4444 cv
31.1907 12.859 31.972 12.3184 32.7454 11.7779 cv
32.9261 11.8111 33.1283 11.7696 33.3099 11.6236 cv
34.5999 10.585 35.5384 9.79792 36.4115 8.40534 cv
37.0677 7.35846 35.4583 6.45417 34.7728 7.44733 cv
cp
f
28.7747 106.341 mo
28.099 99.9439 27.4544 93.5562 27.1029 87.1309 cv
26.7874 81.3448 27.2396 75.2423 25.9954 69.5714 cv
25.8128 68.7413 24.431 68.7017 24.2777 69.5714 cv
23.7376 72.6197 23.7298 75.7789 23.8792 78.9385 cv
22.264 88.3194 22.7669 97.5255 25.5384 106.779 cv
26.0482 108.479 28.9779 108.26 28.7747 106.341 cv
cp
.886275 .886275 .886275 rgb
f
20.6068 49.5269 mo
20.555 48.6124 19.1937 48.3424 18.9525 49.3028 cv
16.1097 60.5943 18.931 73.6768 20.2982 85.0548 cv
20.4212 86.0753 21.8333 86.1124 21.9154 85.0548 cv
21.9544 84.5465 21.9661 84.0372 21.9837 83.5279 cv
22.3929 83.8843 23.1829 83.733 23.1292 83.0538 cv
22.2503 71.8843 21.2308 60.7139 20.6068 49.5269 cv
cp
f
45.8743 14.4854 mo
46.1029 14.4688 li
46.3021 14.4268 46.4915 14.3648 46.679 14.2984 cv
46.554 14.6451 46.4251 14.9844 46.3021 15.3336 cv
46.3294 14.9581 46.1419 14.6724 45.8743 14.4854 cv
cp
50.1019 11.2442 mo
49.6771 10.8096 49.2454 10.6148 48.807 10.5508 cv
48.8636 10.399 48.9154 10.2476 48.9583 10.0972 cv
49.0404 9.91022 49.099 9.71686 49.1038 9.5318 cv
49.0853 9.55182 li
49.4388 7.9571 47.4466 6.56305 46.2142 7.88044 cv
45.6693 8.46296 45.2337 9.21442 44.8607 10.0025 cv
44.5755 8.90241 42.9847 8.57184 42.2005 9.64704 cv
40.7591 11.626 39.3753 13.6407 38.0365 15.6861 cv
38.0199 15.6754 li
37.4671 14.8018 35.9954 14.5006 35.4359 15.6417 cv
33.7103 19.1592 32.1439 22.8106 30.8001 26.5499 cv
28.6507 30.8077 26.4603 35.0455 25.4046 39.7813 cv
25.181 40.7872 26.3939 41.2838 26.9827 40.7022 cv
26.6146 42.7901 26.3343 44.8882 26.1556 46.9908 cv
26.054 48.1939 27.7698 48.2696 28.1156 47.251 cv
28.1536 47.2613 li
28.9183 43.8751 29.7406 40.5562 30.6478 37.2799 cv
30.5052 38.4966 30.3763 39.7154 30.265 40.9341 cv
28.7825 44.8741 28.4759 49.0445 29.3343 53.4166 cv
29.6781 55.168 32.2044 54.6343 32.304 53.0147 cv
32.3255 52.6627 32.3411 52.2994 32.3607 51.942 cv
32.4564 51.9063 li
36.2835 49.8663 35.3597 40.8438 35.2728 37.2672 cv
35.2435 36.066 34.0072 35.5225 33.096 35.9713 cv
33.3919 32.3624 33.8783 28.7838 34.7474 25.3951 cv
35.1722 24.3926 35.5911 23.3965 36.0052 22.4009 cv
36.2962 22.4918 36.6107 22.4942 36.9017 22.3712 cv
36.7396 23.2549 36.6449 24.148 36.6722 25.0504 cv
36.72 26.6309 39.3079 27.1549 39.5697 25.4424 cv
39.7962 24.8316 39.9954 24.2134 40.1829 23.5919 cv
40.3509 23.2071 40.5218 22.8243 40.6615 22.4405 cv
40.7103 22.3096 40.6839 22.1832 40.6204 22.0748 cv
41.0072 20.7071 41.39 19.3375 41.9085 18.004 cv
42.5091 16.4605 43.2952 14.9542 43.9466 13.4102 cv
44.1283 13.8023 44.472 14.1138 44.8861 14.3018 cv
44.556 14.3839 44.2581 14.6021 44.1263 15.0186 cv
43.4329 17.2047 42.4017 20.2589 42.9837 22.5494 cv
43.096 22.9927 43.4202 23.1871 43.765 23.1988 cv
42.3148 28.232 41.1986 33.3926 40.7454 38.4752 cv
40.4935 39.336 40.5286 39.275 40.5911 40.5948 cv
40.6507 41.8306 42.3802 42.0972 42.7552 40.8878 cv
45.4681 32.1456 46.931 22.647 48.5872 13.6046 cv
48.8861 13.8013 48.8831 14.3477 48.9124 14.7882 cv
48.9525 15.398 49.9036 15.8233 50.2005 15.1373 cv
50.7493 13.8697 51.2025 12.3697 50.1019 11.2442 cv
cp
f
37.9427 61.9542 mo
38.2259 59.001 38.2357 55.8902 38.1497 53.1099 cv
38.2601 51.9522 36.306 51.6758 36.1048 52.8331 cv
35.7044 55.1412 35.5687 57.4854 35.3802 59.8179 cv
35.2357 61.6119 34.5081 64.1788 35.1536 65.8936 cv
35.3118 66.3131 35.7435 66.6592 36.22 66.4991 cv
36.3333 66.4615 36.4466 66.4234 36.5589 66.3858 cv
36.9583 66.2515 37.3519 65.9444 37.4398 65.505 cv
37.6058 64.6749 37.7337 63.8067 37.8392 62.9234 cv
37.8978 62.8209 37.9408 62.7037 37.9417 62.5557 cv
37.9437 62.356 37.9417 62.1544 37.9427 61.9542 cv
cp
f
38.3079 92.3336 mo
37.2777 92.2271 36.3822 93.3292 35.7337 94.0084 cv
35.0277 94.7486 34.3968 95.564 33.8275 96.4141 cv
32.9095 92.1612 32.3236 87.9117 32.2054 83.5552 cv
32.1898 82.98 31.9066 82.5801 31.5228 82.3507 cv
31.5159 81.6275 31.5189 80.9034 31.5325 80.1783 cv
31.6947 76.9141 31.8792 73.6519 32.097 70.3907 cv
32.2259 68.731 29.6888 68.7662 29.5277 70.3907 cv
28.5726 80.0377 27.0306 91.3424 29.4603 100.84 cv
29.5316 101.335 30.3919 101.419 30.4993 100.87 cv
30.7767 99.4688 30.9339 98.0557 31.0345 96.6363 cv
31.1146 96.9405 31.1898 97.2452 31.2757 97.5494 cv
31.6126 98.918 33.3333 98.7257 33.8177 97.7193 cv
34.2952 98.3917 35.4681 98.6431 36.0716 97.7305 cv
36.5638 96.9864 37.1146 96.2979 37.7366 95.6578 cv
38.4378 94.9376 39.2542 94.4761 39.3861 93.4117 cv
39.4632 92.7925 38.8275 92.3873 38.3079 92.3336 cv
cp
f
45.8314 81.5665 mo
45.7122 81.358 45.5931 81.1495 45.474 80.941 cv
45.1449 80.3648 44.3607 80.1666 43.7904 80.4996 cv
43.2689 80.8052 42.9466 81.6495 43.349 82.1832 cv
43.7855 82.7623 li
44.1702 83.2725 44.8079 83.5372 45.4066 83.1871 cv
45.9642 82.8609 46.1497 82.1236 45.8314 81.5665 cv
cp
f
7.68098 83.2755 mo
7.37825 82.2393 5.97786 82.3092 5.64583 83.2755 cv
3.39583 89.8326 5.05794 98.2388 5.16536 105.055 cv
5.18489 106.332 7.05403 106.312 7.13411 105.055 cv
7.56673 98.2369 9.61946 89.9337 7.68098 83.2755 cv
cp
f
7.40364 55.794 mo
7.35579 55.3975 6.86848 55.0826 6.54329 55.4376 cv
4.58333 57.5816 4.94466 60.963 4.84212 63.7286 cv
4.66634 68.4566 4.61067 73.0943 5.14094 77.8062 cv
5.24934 78.7711 6.7386 78.8204 6.68782 77.8062 cv
6.48958 73.8384 6.72005 69.8673 6.92805 65.9024 cv
7.10091 62.6226 7.79231 59.0284 7.40364 55.794 cv
cp
f
7.92122 53.1226 mo
7.36262 53.1226 7.36262 53.9898 7.92122 53.9898 cv
8.47981 53.9898 8.47981 53.1226 7.92122 53.1226 cv
cp
f
17.7259 21.6339 mo
13.9466 29.7354 8.12727 38.2564 9.17512 47.5557 cv
9.26692 48.3736 10.6009 48.753 10.763 47.7706 cv
11.9554 40.5201 14.6282 34.1011 17.4163 27.525 cv
18.2357 25.8712 18.9486 24.1856 19.5638 22.4088 cv
19.9329 21.3448 18.2093 20.5963 17.7259 21.6339 cv
cp
f
79.9945 23.0152 mo
76.5111 28.9542 71.6878 37.4244 72.4427 44.5533 cv
72.5325 45.4005 73.7728 45.9864 74.2337 45.0382 cv
75.6771 42.0743 76.0755 38.6412 77.0365 35.4849 cv
78.2493 31.501 79.7747 27.7076 81.7142 24.0206 cv
82.3099 22.8892 80.6458 21.9039 79.9945 23.0152 cv
cp
f
74.179 49.5591 mo
74.1966 48.6348 72.6966 48.6426 72.7493 49.5591 cv
73.5628 63.7945 74.3529 78.254 77.6068 92.1949 cv
77.7161 92.6592 78.3773 92.4527 78.3079 92.0015 cv
76.1322 77.878 73.9193 63.8975 74.179 49.5591 cv
cp
f
80.1771 104.583 mo
80.2601 104.25 80.3431 103.917 80.4271 103.583 cv
80.5413 103.127 80.3607 102.77 80.0736 102.545 cv
80.0736 101.306 li
80.0736 100.145 78.2689 100.143 78.2689 101.306 cv
78.2689 102.556 li
78.2689 102.75 78.3314 102.899 78.4154 103.029 cv
78.3324 103.362 78.2493 103.695 78.1654 104.029 cv
78.0247 104.59 78.3255 104.999 78.7327 105.194 cv
78.4525 105.356 78.2415 105.633 78.2396 106.058 cv
78.2396 106.153 78.2337 106.248 78.2327 106.343 cv
78.0531 106.331 77.8646 106.336 77.6566 106.381 cv
77.0863 106.507 76.5804 107.154 76.6185 107.745 cv
76.7044 109.068 77.0609 110.675 77.5853 111.9 cv
78.0687 113.026 79.6263 112.557 79.9427 111.583 cv
79.9564 111.59 li
80.1888 110.975 80.2835 110.016 80.179 109.085 cv
80.2122 108.935 80.2435 108.787 80.2562 108.67 cv
80.3509 107.801 80.3812 106.932 80.3724 106.058 cv
80.3675 105.59 80.1116 105.294 79.7865 105.145 cv
79.9613 105.024 80.1097 104.852 80.1771 104.583 cv
cp
f
55.4583 121.227 mo
50.3568 121.133 45.1263 121.973 39.9564 121.986 cv
37.9007 121.991 35.846 122.021 33.7904 122.047 cv
30.8548 121.577 27.7855 121.659 24.8353 121.151 cv
20.6595 120.432 16.6859 119.502 12.4232 119.555 cv
11.3812 119.568 11.3841 121.14 12.4232 121.172 cv
15.5911 121.27 18.5872 121.942 21.6009 122.636 cv
21.2493 123.229 21.513 124.188 22.4232 124.214 cv
29.1927 124.412 35.9544 124.712 42.724 124.882 cv
47.1038 124.992 52.4915 125.692 56.097 122.767 cv
56.7347 122.25 56.179 121.24 55.4583 121.227 cv
cp
f
55.4212 119.756 mo
55.4212 119.856 li
55.4212 119.756 li
cp
f
47.6029 51.775 mo
47.3372 48.7681 47.804 42.98 45.0394 41.1148 cv
44.4075 40.689 43.7386 41.6226 44.2445 42.1456 cv
46.5306 44.5103 45.849 53.2164 46.0003 56.5118 cv
46.2034 60.9395 46.2103 65.3687 46.4652 69.7955 cv
46.4896 70.2276 47.1966 70.3873 47.2708 69.9049 cv
48.2044 63.8858 48.137 57.836 47.6029 51.775 cv
cp
f
46.9212 43.5059 mo
46.9212 43.606 li
46.9212 43.5059 li
cp
f
83.9241 122.303 mo
83.8372 122.508 li
77.5228 123.5 71.4124 125.426 65.138 126.639 cv
58.4788 127.925 51.7161 128.625 44.9368 128.789 cv
31.8822 129.106 18.9564 127.302 6.43684 123.66 cv
6.0843 121.679 5.79426 119.694 5.52962 117.708 cv
31.3265 122.483 57.4818 120.128 83.3255 116.809 cv
85.8431 116.485 85.8753 112.481 83.3255 112.809 cv
81.4544 113.049 79.5794 113.283 77.7044 113.512 cv
77.7015 113.42 77.7044 113.331 77.6888 113.235 cv
75.1361 96.6104 72.013 79.9083 71.5638 63.0567 cv
71.3431 54.7672 71.7923 46.439 73.4954 38.3082 cv
75.1741 30.2896 77.6859 21.2574 84.9388 16.5401 cv
84.9906 16.4981 li
85.6771 16.9908 86.3372 17.5098 86.9368 18.0855 cv
92.137 23.0797 85.7181 28.5167 82.9202 32.4688 cv
79.0257 37.9713 76.8997 44.5538 76.9915 50.9898 cv
76.7464 50.4615 76.2962 50.0269 75.724 49.8965 cv
74.6468 49.6509 73.5853 50.2203 73.264 51.2935 cv
73.0511 52.0025 73.139 52.7838 73.4964 53.4327 cv
73.8714 54.1138 74.4388 54.4659 75.138 54.751 cv
75.846 55.0401 76.7083 54.6763 77.2113 54.0845 cv
77.8822 59.3043 80.0931 64.2925 84.1038 68.3697 cv
83.7991 77.4429 83.5052 86.525 83.8158 95.6021 cv
83.9681 100.065 84.2747 104.516 84.7786 108.952 cv
85.2923 113.48 86.2074 118.086 83.9241 122.303 cv
cp
7.51985 52.3511 mo
8.98958 40.7305 11.9554 30.2032 18.4486 20.3184 cv
20.0404 17.8941 21.7904 15.523 23.7845 13.4097 cv
23.7425 13.5347 li
23.4115 14.5279 24.1243 15.7637 25.14 15.9952 cv
26.2435 16.2466 27.2454 15.6617 27.5999 14.5982 cv
27.6829 14.3482 27.7669 14.0982 27.8499 13.8482 cv
28.181 12.855 27.4681 11.6192 26.4525 11.3878 cv
26.2718 11.3467 26.095 11.3355 25.9222 11.338 cv
27.6009 9.87067 29.4466 8.60212 31.514 7.64411 cv
32.3392 7.26227 33.1829 6.94782 34.0335 6.66071 cv
28.7493 13.6212 23.5247 20.6002 19.9368 28.6373 cv
16.2601 36.8697 13.97 45.5938 12.722 54.5113 cv
12.6956 54.7042 12.6771 54.897 12.6517 55.0899 cv
12.3958 54.6256 11.972 54.2564 11.4476 54.1368 cv
10.7269 53.9727 10.0091 54.1822 9.5179 54.6602 cv
8.74837 54.9366 8.13606 55.7779 8.17122 56.566 cv
8.22395 57.7418 9.05305 58.4507 10.1712 58.566 cv
11.0384 58.6558 11.8333 58.2047 12.349 57.5406 cv
10.1966 76.5465 12.6478 95.6837 15.1058 114.554 cv
15.1361 114.79 15.2083 114.997 15.2962 115.189 cv
11.8704 114.767 8.44856 114.243 5.03645 113.573 cv
2.91731 93.2149 4.9554 72.6202 7.51985 52.3511 cv
cp
39.8216 5.30231 mo
42.054 4.96833 44.3187 4.78864 46.5755 4.66022 cv
47.1273 5.39313 48.1165 5.83991 49.1712 5.3487 cv
58.5736 .966374 68.2474 7.4444 76.3685 11.7437 cv
77.9476 12.5801 79.6419 13.3814 81.2962 14.2564 cv
69.2454 23.648 67.6927 43.5831 67.5189 57.5826 cv
67.2825 76.5069 70.9134 95.3458 73.7825 113.982 cv
55.557 116.105 37.1712 117.411 18.9447 115.598 cv
19.0892 115.318 19.1605 114.975 19.1058 114.554 cv
16.6165 95.4439 14.0462 76.0025 16.431 56.7413 cv
17.5716 47.5328 19.8529 38.3321 23.7366 29.8804 cv
27.7454 21.1583 33.7044 13.6871 39.4603 6.07966 cv
39.6595 5.81696 39.7728 5.55524 39.8216 5.30231 cv
cp
88.1214 67.8341 mo
88.1107 67.668 li
88.1732 67.1519 88.0169 66.6046 87.5189 66.1295 cv
79.3939 58.3887 79.2552 46.6094 84.6136 37.2296 cv
88.1497 31.0396 96.9193 24.3228 91.0941 16.7081 cv
89.015 13.9903 85.7113 12.2261 82.7747 10.6168 cv
78.6605 8.36286 74.5003 6.13093 70.2962 4.04889 cv
63.7669 .815984 56.8997 -1.2221 50.0003 .817448 cv
49.7064 .625554 49.3343 .514226 48.8763 .537663 cv
37.1868 1.13678 27.0433 3.128 19.2298 12.5157 cv
11.6087 21.6739 6.54426 32.9493 4.5804 44.6719 cv
.176101 70.9639 -2.13152 98.9439 2.67512 125.306 cv
2.73958 125.529 li
2.8177 126.237 3.24153 126.9 4.12044 127.165 cv
17.349 131.152 31.1136 133.124 44.9368 132.789 cv
51.4661 132.631 57.9857 131.967 64.4163 130.826 cv
71.6478 129.543 78.6517 127.216 85.929 126.201 cv
87.0511 126.044 87.4642 125.205 87.3607 124.347 cv
87.3783 124.322 li
91.4154 116.866 88.4173 107.429 87.9837 99.4234 cv
87.4134 88.9005 87.7689 78.358 88.1214 67.8341 cv
cp
.156863 .113725 .113725 rgb
f
81.3626 104.985 mo
81.1468 104.349 80.6185 103.797 79.9837 103.653 cv
78.8636 103.398 77.8978 103.992 77.5238 105.049 cv
76.9173 106.762 78.4173 108.616 80.1732 108.577 cv
81.2181 108.554 82.222 107.673 82.1732 106.577 cv
82.1439 105.947 81.8372 105.36 81.3626 104.985 cv
cp
f
79.1956 90.8111 mo
79.1331 90.7789 li
79.1175 90.7637 li
79.0999 90.7325 li
79.056 90.5421 li
78.847 89.5152 77.5755 88.8282 76.596 89.1451 cv
75.5081 89.4971 74.9749 90.505 75.1995 91.6055 cv
75.4281 92.7252 76.1937 93.7012 77.1771 94.2652 cv
78.0843 94.7862 79.4056 94.5079 79.9134 93.5479 cv
80.4154 92.5953 80.1654 91.3673 79.1956 90.8111 cv
cp
f
78.2122 72.6666 mo
78.6478 71.7828 78.306 70.5504 77.4212 70.0836 cv
76.4378 69.5635 75.2806 69.8536 74.6849 70.8008 cv
73.9798 71.9249 73.972 73.4542 74.7015 74.5709 cv
75.2728 75.4454 76.4993 75.8936 77.4378 75.2882 cv
78.2767 74.7471 78.72 73.5875 78.2122 72.6666 cv
cp
f
79.6654 30.585 mo
78.9544 30.2095 77.9798 30.2569 77.3529 30.7799 cv
76.8216 30.9923 76.388 31.397 76.2435 32.0303 cv
76.0257 32.9893 76.5365 34.316 77.6409 34.4908 cv
78.7142 34.6607 79.8587 34.3819 80.3831 33.3214 cv
80.845 32.3848 80.6654 31.1138 79.6654 30.585 cv
cp
f
85.1712 22.5665 mo
82.597 22.5665 82.5931 26.5665 85.1712 26.5665 cv
87.7454 26.5665 87.7493 22.5665 85.1712 22.5665 cv
cp
f
20.6712 20.0665 mo
18.097 20.0665 18.0931 24.0665 20.6712 24.0665 cv
23.2454 24.0665 23.2493 20.0665 20.6712 20.0665 cv
cp
f
12.1712 39.5665 mo
11.0872 39.6148 10.1712 40.4454 10.1712 41.5665 cv
10.1712 43.0665 li
10.1712 44.1124 11.0911 45.1148 12.1712 45.0665 cv
13.2552 45.0181 14.1712 44.1876 14.1712 43.0665 cv
14.1712 41.5665 li
14.1712 40.5201 13.2513 39.5181 12.1712 39.5665 cv
cp
f
8.29231 106.613 mo
7.25325 106.828 6.63216 107.608 6.26399 108.541 cv
6.17512 108.764 6.15657 109.003 6.18098 109.24 cv
6.15559 109.286 li
5.66145 110.208 5.89485 111.505 6.87337 112.023 cv
7.80208 112.514 9.08137 112.29 9.60969 111.305 cv
9.92317 110.72 10.2376 110.135 10.5511 109.551 cv
11.4046 107.959 10.0023 106.258 8.29231 106.613 cv
cp
f
11.6243 93.8204 mo
10.806 92.4883 9.28059 91.5792 7.6888 91.7134 cv
6.64973 91.8013 5.63801 92.5709 5.6888 93.7134 cv
5.73372 94.7217 6.57259 95.8077 7.6888 95.7134 cv
7.95833 95.7003 li
8.01985 95.7159 li
8.02278 95.7169 li
8.10286 95.7623 li
8.15559 95.816 li
8.17122 95.8394 li
8.71809 96.7305 9.98567 97.1509 10.9075 96.5567 cv
11.8011 95.98 12.2103 94.774 11.6243 93.8204 cv
cp
f
9.69954 72.9034 mo
9.65364 72.8975 li
9.26985 72.355 8.60872 71.9761 7.97981 72.0045 cv
6.80989 72.0567 6.08723 72.8853 5.97981 74.0045 cv
5.94856 74.3199 5.91926 74.6353 5.88801 74.9508 cv
5.76887 76.1949 7.27083 77.2906 8.42024 76.8795 cv
8.64583 76.7901 li
8.80208 76.7916 8.97493 76.815 8.6927 76.7696 cv
8.69954 76.7657 li
9.71321 76.9024 10.8431 76.4732 11.097 75.3633 cv
11.3148 74.4039 10.804 73.0792 9.69954 72.9034 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (7_body.eps)
%%CreationDate: 11/11/2019 10:40 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C=Xuko$P6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7;/>c`uk@XZKm!fK&-nj$u?0aa\g6qqLT.S9IuHS1#al"WmfKn5hJ+>ii+nCq0'2lKJg4DI:-Riq9@M\)2[b
%GkM!blgK>.48ecnbM@*.Hn2sWZMWq\q=@[;g$PCrH2;0ak5&0Dl^MP5Df8sqIduLD/mg2H$t&VcJ,!?QOrN?*CbK/ql@h'CH2H``
%]U[arVuPiP^YI.rPZAhirQ!gQIf&L/2m8jdH1pObs8!U.^&D$_>CUqqh%Ta@h!>h=-c]$EQb2;F5<nu&q&=bEDEUYlpuZ3Ngu?*:
%IeOjd^?8L!*oqPsG3Igg*=_uB\\gYtBm9T15Pna=7=EGt?QASEY:&CB(R+dNgBI#j"46U;^*J'porIOf4F-ngmiOZB\EXU60>;f4
%jNXe9Hn06K>j%CeY95HAS,.goML&-5or:"7Fub5VP2udLMcWQ5()KWTb150&X2*Niq!@]-^Y&MZgF(n6^,EO3If8EPBE,`*Ig]=N
%>XUo2]Wt>PIfK9eT&79]LR6?Da;8Hs2'(H/]_^da\b+['T:>">-nSB<n\97e+.g.Ep@aK%rN#*G?tb%pX%WKKDh!$%lR.1qKcn!@
%:\igj[kIdNl@8;gjaA+0Z&.rSl-=rgFqFe+8&W&]^-@`h@e[i)E//o6ZMB%OHm+[P]@YBCIJ34J/`ba6C[j:hIeiin2sVG3ITQ2,
%I*P`_rb_U@HZSG-2fES@p<I[WlbdY<fsG#_k"@i5o^\KhWtuVAn+##CbbLL[`Laj@epb71KtigUr:$8*(`U3gm45a*fh:,qnY>",
%n*8M34T@]rq9.BnIe`>40E:juj$u>IroV`qh<t9_mF+"t?HZ`+ZhrQCrGVMTcZVP79],g-ool:o&,H)^kN^0qmsatj)p3B=^>8$l
%j]_Yks8O7oM]*.d[,+&P:G741IK&NDl,J&+6gj`go-Z2`]\`/pj+b<tp7qQJM=f8C9:U8(k)U%aVb#*WdOi*>cT/W;>>CQ7ooM]B
%qUs%R[p[sSf5LZZlLgc(@*bJF5]-D`p!rI0\UE'M^\m]jS#:`s^SeJgn6NeRo&``R]%k$tk53O6qU`-1dHfN[O=rg\H2d`p\$)EO
%pSVY"GPfuVI/g,#+'uX,543mYpZ"j:n+\D<q2gA\q:?G_o]l7YmpD$obUm0mpH3g!r:\=KIfJR(@FBpFs8(jG?>BMqr<bXFqu]?2
%l8A&'pA_Eo)cp<kP5On.do3u.b+?09N:!ggF0,2pi)BIpT>#RtPP6+%p""2ur6#aN#/>W\:[a[LkiRADp/4S>h3U>gHZQgEbuZR4
%K-e/,nkW&q]B.9$B7@DJ14:`)g:Unnr9&!*b@GnU^RS*qjm+;O4Hn=d(UCu8"X@<a431cIU$lo<?clk2\''(<G5H2!5PiF@O-Zj-
%C\%RVEaiTg[<MDhi`tRe;SWhBPf:f7OhXR_X,e@Ah+tcA^]$V[R9jLWDZe`\DmJ^'f_&J8ljdKn-8BS-"o!Qgnb#E/B)hg"]h/&G
%09SNq4[-u'kZdD7X2K1T]13FIpu1micYri$pUf$Q?@IfTo=SWbI*3.MbP5",fsuc#[2-EqTD4`kK;5s;l9h9O/T#L;W(YG9oD$^U
%^.r^elYu6pSK(9aa`2.oG2;Xd>AgFZ(7K/:Nhr?4Z0n[jU6_6`'M$--RrXUc'bSWP9.ZdHHm?[/Nd[3tjI5V&Em,\R3F#n]P&B>?
%V5##c[$O-$Q"hdhU_Mq[8S1A2nOAO;4NJ\L)I&Fr`/G@=OMaRJ*&lh%a"\RpOO"4b<&mR4#N@!H/+KEe$dq1HnM`R*EZG$DNkHFa
%?9Ze=?f]!q-82k%d])d^DLl/6\/TXTj!_rS3c$I?,$uoG;<5eNaUt(+"rB8.grOJ=NcH-#hu.RI8)mJ.a?7l`m0NQEa,g4,NfLc>
%)i('bcWB!$]q;_)@t0,\m5XXn'-pKTIus[OjLF(8jkoBPgWP-8M]?H'0b!q%#J($kHm?['Ne8<2>m03!MVLI;7)71",!2$\FsG%)
%jQ@Wj:5#!j=AXSl6RkP"p_u5R,"i/$p6;K@MBDAb-s*r+%%g(Wa;6,'/g=l)Eg2%ao&%.YpKES(s&Sr6OoH1&%R`\FcXSrW;O2_%
%plS,,8Ih$*KD`@%lOUNW,*uFX'=-;f'CtB]5&X+]nZU#J+._L,s1IBP:?3WmfBnog>=?328D`3o6stU;C6RU;Kgd7L8[f_W;8c&g
%:5naH/ahXJ/LeboWA;AOkp5.&jK"42_BIf-:Bd/q<Vl87@d.E(B,QVC)5.ueY9;k,6mE\@oVILgOHH^j$&@j,oo7%K(PsRb7Fr_^
%-]pP>;_UgF'cGeM3#mr&rpCW!'D#'B^jk\?qRAa2O)daY:>qF^jAQZ`F+$*>NcO@0ND(KK$35]EV';Y_DYDP!]K(u3aO+-M5S+i_
%%YP,)'Les`I%#F3Kag@m/]%`94Am/=mtHW/\fagc'BB:*r:lD11OcL'1\MOR,LtlbAi8,:kB)MZWfXK;#KTTScec8".$NnM*@J&$
%GFW>T04Vr"QT5X.*l,n.k>]F-4^gshHSOK3F`KOa#dUMYg"2rTY&OKR?&mCmk&:Fi,6K'W:'MlaO_cF"&Fp-P,oI+rE(%G_dA%)V
%SENIG3FmA&qf6p85giC%BGi/0e2gPGW9)#rZ\gX^6RMEuL)kWYcgK7Pk,Aap3g`M[*<68((W>?Q\S+Ir;_/"p]F\HJLtm$-W"eBK
%Y"$IR6?1p/4]7U8BP:Jf$&se$$(a-,1$&db$rm93C/;ffTSb]p`h5@\JtPN9*lpB/`I\?Ti^/>$`RCc?p07TY<)4ljYY*b'HQmm4
%g_,lVQbP/(ZOD"+SE2G$%Yl<-Yu23'->.$LGoRI]LIBECfqi_T99[R`3[+k8Obmka,pmGoDN,i'?K>c3R6$2/*(7rPjfqfL4\OBs
%O[q#k$Psa50md,0b$M.Z)5>2``Gna8aj[Je>]VnS\t#-*ZH*it#W\7iJjj3.6a1sZRn@U-n[On1W*D0BoPrf@d2.^nN!pI./.S)+
%K.[T@Q\6S"K53(A--J@["3&YI3LO;rD.ZA:=V=+@SZLKu8WG""H^Z519Thr!`2Q$HV?RHl]pU*!7Zs/`N^ehn+)6+$RN9LD%VMZY
%;5QD`NJ:GpUU)]QeI^MY4)ifr5[oXd"R`i1\EbL"-.Dl=Dkoks8),@MBi"9J]MZG3^6PdM,!g7,kR<S#"dZ?fE="m7IDNSs_,<)E
%o`@>DqY,(3ro)t^-SKAPfmRX1kZ,+n(Ye'FWB14<'(KEQ,gfdiB)Y*gYS.s!MZ/3mE"K,[4!BK32%d:WYSFI"j^(@I,kcg'iCtN9
%U/XOZO0fcePqH&'?IfNbVi_=nd<;1o'P.S.)6"S`<T9V8nC3e3RB1i4e]#!N]^qlPQeZ,OY,aQt.]U#=:iS7u9[,S%GZE.jW`*K,
%l:r(#)/=(iI/R]]LY+Mb#eMisO-:SCrP7DU*U`JA!oWMeiSkI<3R[Vo)SPU\pE&Gq6gf3Vn*5ZKElWs-h&^UX*?TC[_iN,f]^Lg$
%[rJ-@!kjVs<DK8i(@c0m=CnL8p9HqL[s33BL"bW2bM%q,E']f$9FW3b7>1SP=shTH.5^m7lBuo&e#q,lgXD6G;;\=l8^obc>)/uD
%/CrWVF#;7Tp0#YGr@l@C+B*>t(h8aQ7TViseD<m(j6@,A.FsK`@)gj!V.Ppm+)NdYY0B5LE>Z`9en*ZNdt=OP10b/FBfJogCH]O=
%Nd,`C3sW/<0qeE(o&-:GLYT/KkL&.8a;s/X`qpef^>jiqjGol-k<Hs,hka0sI8WMXiS=RaE0I]8V`k].;"R<l,J)#3Pgp[QMg1Xb
%bj@g1V:'+0j65\X7QQEj4qX..R5<LO_##u]f."%,\`UbR0K8HBVH(L[.LIm1bN^e!XBA<SaW%f[[>S3R/+BcXRGn"!7O]8]YRUK.
%l^>@Gk$6AO1lg9e)m-Hs4(fJq_JuGu$kn#U<kA<u1mQkdY4d2=EPG7q\(:GLj7=;kV=+,^K"j?.1^FY;7!`++g._1m[5\9(q/:M`
%f`0H<dBm+f]\jnJPA3'1)@eZ(V2dVG]?-OTQ;uDMDX*OOG\0cg=`bZ2a^NVAJbfil'IJ>3@5kQcJml?H`X3[e^g&f$\)`RDkFgoD
%4h!m'MqX.%(:79>g'WfY,)sM@<HG-.UcPLm9WC=WKbQ%:^!\c-TAt>n])jcaD">7&D2Cs%k?:$LflNTFTWS67DV\&P@L;)XGi:Vf
%51[ft`PXK8o?\^GjH)GekWAp^%m&d3%mK_PdiH%i\[f72hX"f./2uf?gpkhXkpSpVA25EuK'ml)4Gnpp'$\IAoRoPlLHRrM9E<QS
%qulZFkZ_\OSq&p(GQR:9fVq]F!hDj$aqWo9Lsl@L%Cg-!VH=NQgjBC73J!ZQ2J7!Xi6B<'3->qpll`4CS-j?fe>ZiR_OZ%3_H)8[
%J3>b*)`8Na3XPkcZ`%]$b8r5n]-eSEX_Pa_[)M%3Hmkbt1$F\=+grFZWiC6?fIc#[4o3[n0M>J)h5%(2TP=/qd>7@*MtO5CS;sg6
%c@=Vqa;md0G^HriH]HQZO/&ct`s3]ALE(?T#G$&LS9<eP4$NGps#bM<\bW=(5&6D/)We:pq,DS9XAM/sPg:90ZUXb4G;P:7;N[l,
%>lX!IJ&r[a,#bimIP2@>,NUqrgedN?A1k4-/]a["n:qCN$D6I0LsMh!b6=[L/>Cn=,L2bTRFtk+<6Bo>Q/.\)E9VTFRNhJs54ADi
%'mqO$CX.F]YM#]nN/!D>-ZJh@'=^bWZ)f\W!Q=V1B/GS>XYof.Z;ib.8<2ONME*IG[QM'2b"Y'LrqtjIbl-K[mSo8QrK][?$"YQj
%;2D6R9GF3t*$du(\>?\mV<%%d/dg^<\=Y+L'T[>_hFgmMrW+McdTu.t>D2>r,Oaa\%jL!6GGs8TqG2=]rf/)t]q;b-5/@AAnaZgF
%p9P(28[taQI?+eI71nZSQks1Na"UPW"l7&T@N%4X]1'r$!s@Ng?U_iC$L/8PA_s0`\s;6T3I$epj<A,WbbqaKTW3qNeIc4=)I]5q
%D'j4[n.S1CD&I%G`R8NQO4>ui"+f-7H)mC?H3+Aq6l/Qu8L$l.F&Wl6]c#M&R\.199l62_g+uZ'14;sB:"B0kStR&R6PVV]F-^Ps
%9NZ:<rAiPNUH,B9+.X0-bjILq45r6J82Sn&f'Q?'*)5k"\ZYP/_1aN``s[\$a;lr4gt[,/B:5lW3!JJ^rkXA%lCK#:a#e,[GC7-b
%qd-f>EbX/G_5:uD#0AhC4P(-CAjVM)q]2*9]pSLjrR2Tm'(s=3?g,#lE-e@eF(Cs.Ag@Fidn"iNUsm[_RYP0pWXeX':X$98WB+`=
%#\m\RV?hL6)+<U_6W_)]4BQWak"/&PSQjbEg&au39^YD9*+:0'HhT3Q!nbd"9S!?S)?RA.P$u-K[;R>]d102a/5H$839K;/lR<AE
%d"=`\%=:9fccPWYq-Els##$73?]R7.2,\?^PQ(S9s3+*sApXs23GVGMoV`aj+!&7Q,MmdCG8scRQlg^?$V*?EjGnH<hK#uI+*,C,
%SFo(dJ*]8jJsk_!_b8TcG_nH\LCLoW=YdFO)et[gcga5&IfGkmceNus%Wcgn6ZW'*E%+JWLSqPQlQW^s2:$b_qHj;i<`hrbrXDg>
%HYs3ASV'NT;T])>g;6F*THqq>/!RCEOtM;V`K#$'BEF1SNcuYA'eHp,*'+1Pk(@'g_gn2&15oJm*cf<-(0;T*PY28;_%/Wuj[8H\
%cYl#>plBgC1EcQ;bAb/:WbZJfZ%ES:2H?jM#^pbt`,n2K&d`\O>(qVJ,cs>C2SG<A/tpfc^%TMsO'']=<ZSkDc-bQAGH-[@L/tnB
%e/e5)UL&;soofI8$@u7i"k!0LMc?fPQ$&)"7.n2X[5)kpbGWg7RHig&<^Wrrq8nrfK,%AS/K_-`Iad<A_F,QtFBW>u%879`\Fp-,
%44ShX"81l\<&Y`H4I!6g@Emf,aX5_<ZPi(NPj-8%7lia"r5]nrKu;ep\9AqBfFL-Dg#%';Ie9l9lo;]UO?5YaXS4aS,N!L9Bil9)
%g'6ZUf?AH@1.a8Z&&^MJO`dbVa2o]Tlj%8M3"1d-#oJ4e;Xr["eKQjbQ=VV$W:C0#EMC0.ZC4gbKkj^d2VP?g[?R*PPf]eaQj7*6
%l-bT'<7q?&b!/bL*NA?7*F?,l-1r:i2aM"b5))a[d>!K8R<jPFRB4=-3!NO$+:@>QRLj*B'hdsKVpMOg0eL*3fG=6u;t;hX8[JrQ
%MjQ+36!Z+2\m&A"Xl/L3OcSTI7kaM_eAM#?:@C7)Npf*nXiKu0O?;<5qmb\X*T-%)T26G9&$cu&Kb^@l>6JjJV+](I!/C5FCk#pP
%>$6.pg@1e[R"AX!S]A@<j_l,jo(SBU8it-O=+pN][GYICbo.lB[)m42aslJI$4p<qL)hQTgTl]RJOM6Sg(metWOu\9$W.VAgi4sQ
%\5UC)8h+(!X-eB,C\,Ip3t1bb74e#=\>-A5q2SRc1W2&s6N^A'3+`,5l]oWr12q1oFj-;!P"A#Oei.I7,B89H(,lZY:.TIN"jAj+
%C/DWh,C+jZHp+E``!VMs3!:2/MF@m@hMIM@ADn,Jp`]p?';GTbppE4F_0Zqbi#l>WI*Y@S+&MsDV3'[a8?^gtRtJ$-+te(hlM'D7
%iMhW&mW`?&T,mUM;=5DCj';"sa[EmZUqbYD2rf7PBo4SqH<Bt&A>\#,:sclnADJLM7[Y6s;+@mNbVJo3B$f>6=Z2a[_2'`!0Z;HL
%P::Dsf_$r3MNM6k1UGTDl6b%q(f9Bh95=51R/_ctkr%q#f&N:M6YiJYSOXX83elt%@U^Lrh*Z@2$JMVh1,flC9I*S#aCL6!johnk
%9N6_32*@3W/>pE@a,)VW@CKoT51O=U%LdjC(d3gU_rSEaH&,<rIY[9Ypq?T85`cdt?&Kt1POg9@dTG%Wr&2JFBA84!`98D2lEPND
%!8V-XX-];.$qL&>P*Vk&m["^P&%oa!YHIW<YPk$eon[kd-to5<3do!^>(%>`,+D+^(=51Hdn,4f:T-<KW&uD+LBu3QeAeD#ZR6tr
%D4OjEGVERs?rk&(ggfS4bNbp;nb_[8F>)^<n$2^)1BCZ,5s%bn&_FsaPS1*YPaGe.P`/j#&nP5WUJ%q'Z43lP;sfCiYRnC*T_=.)
%E;`q_cHC<s2.IKSjl=dHcjSXH3!Qakes+s0\U+`hXBT5ij/kTf1AUS&n<W+NX:k9[NurB**Cng\0gAlBrg*)QP"9LdWBDrtOYrhu
%l*Pet>>grfhQR7YUf9aH!uU%FXI)UH78GDFP<AKk//P^"JG2?OX4](UA;N'm7C+&ZG0-OOFCr9-8WTh?#A#+-#XdbuJf1C97#V>k
%MQEeH@S5"QJSbKs&-3-72`tu6%?"@NOVXV%cfTM7(&?]NTC;Pnqi6.N%gQ(E_0h6^!o+Hgk`f0LR1TZrn]?SZ,%G%0\igO<JPK7o
%A9Q%i#'1S:+^h7#Yb[@gi0nJ)`_]0OUm73?1EuN+ftb`p(NUe4=>nlac8p/W0s:&knSlK)Vpkg^0\>T.#I+U2k/=`s=m,5DcM>:?
%(IfQd5!/$P5`nG+d)nq(T,+$kqF9dHN-2l7?WN)-r<O(A_.>9IotfsB#?_o4*Zr3&12'il++Jbp<.:0#iL[sbfM?bU*@FXFW`W>5
%[3HCA<*WM,/Ig,$N%b_'C2gZ^B_[oLrqMUMM_p%*)FEk4e43BRc.t_OQu^M5l+)!VZG*SS,<_P;CU$5+=l%"QN]`?M&"/Z_1p7\;
%Cg4%:n6nB?r0R$5_Bo\t$1s_mM72:,h=+>R9s$X(^#X8_fTjR4FQkK?>jcjg9>>/Pg$qgP%J%+or-1I53mEY.*H0%^\pN4bKm^gi
%40Cjmp3L:gi<t!Y>?C$69lQTO\L-6@@&(kbpPB3[ZVfg5/U)/2)(4:`(K2ZHR)@('7ml%=Q2WRX3:R]?g_.tOOb%TM=W+&W!nr(#
%T++`qgGo<%IO)XuPL+pS5`'17L5^:Mq,NJi:Ad9KA@Ah_?VUJf-u;UHRhNp+">IgNe^ll"EUB8-I+&a\EA/iOB<9mT)P#)NK=C*]
%;aN/J9+$,P>4C@di-Q,hmj&(oRgNsG]+6qT,R&\Y_)m\QZZ3MdPJb'C%\<n/mtLmVB#D4]^GWNF+b4c4fPM,]*2[5+=O'.;/MOMo
%D&LXE\S8L"6X'_@c?aTXQo(=_\`3kuR#eRm_&>-i5;kugBT;$V1q7Y?N<8V:k0XrjGh^QX#2Hm=>l!l!n7#[R5X+Ng9_K,@\Dp_j
%:b.nC/'9pF@5!4/rRWL0NLp"Wc8t6a2Mgj[#N&4DITsHnHCYu1)k0OSVM*eP/q,a%nQk_Fre>V00\=J(@S'-io&V4kE_<t1G@Q6W
%%Dg,4kc,^k<rFJ/kW<"JI,H"ZK5P-gACP3+Ynh'bn$_Ga;rNup1#XH*g5[Bo/&"4F*`h5G7YbJJ<m8+.Nap6;/@\"0%*Z-2Ln3.>
%IF.X/Mh6;*&HnH_ZO!nf9IMXIhV=tIF-;cV.o5527s/R*Sh&5@Bll<E=uS1?NQ1gR4ft3;@M'^b)jM>Ti%].@_6dt;Aoc;c%6!so
%-IRX\T>l<*mlfQPcNuR0NeNLD9YMbS!6NZWhDV,M8H1kcVl!7(l;W5U1[_0/h`PW.<thqNBD52GmXP3NB2@aKEe.9)[)@7$K]8,$
%+b.R+oZB<\+ufkni;[gq8p=p`a4s,HTT?L*<\GgJ8f3&6;<O+d>RMs>M6qru031bre87Bm7Y])X++Z92ELN#U_cG'(fr"9(]:qR2
%.I,CHNp@U$2:Jk#PH,:@T:so^6Set&!SECGRFj9bR=F&Bl^>^T\+n[9ULH^/-rebkj?%Y.g#<,jj[RQYNg=[4g-c<*gArqkI`)UN
%e)AABQ7<\R0?Yj]="LDnE58%K4Z\*FP<9Y,?/S.,7=^NCZt;9CDK<+?*]f*P_Ic8Ua`2PE0)Qe>n)`t5YM;dHM:>dt2M`QroN5uX
%9tVn`REIoT73U.:<V,WY]aU\QJB4*BIPf22el!#;/@9OQX0kp%QXTM!$7mUIp9fcQr:@Y3'pkN2G.9Sm?*4YuX"56D%p!4FGIgsF
%6[T'm?l";$fZN^cY-LJrAkZc)</@G7IamnPJYg;i[m4`\"%0U:V9eC(najhtM"FX;-BDW\U=eU)S7POPQT]oE<^mSC)'!qjOkt->
%ooM8tbu*mll<B:j!L5`a?./Uk@J=\#VFj=gj5GSkZp.3(/r/!#fs25$hVm.')5/'`Ks!,^<\G_X@tJ-EI;p0-9/!0.d5ZWrZ]p2]
%;SupS_6@sDC+-rBl1!;BqqdMSk`#\V(kI2PnEO9gRiLYQKMMd]2jm'JH@)l:mu_&/Z`>_R4uFo\h3CEV11/7G\*ZnopWDd,[!F$!
%6_5<j&%UIXNXGL`*^_>MSYqIfd(CS^6q\TanIF61!Th2bGC7>7]'#7jXe[MJY1hIo=0CUT,)RLe.bq43[t)si\1;A_\++r3r%@ge
%U=2G?)K-CnQhqdC$q8sf/2o:=CVJ_WIF.'tC[L5A`a4D%2g\n$U>.2^b?,Pk)in_+QT"KXRgDCgAXW$+RPIZUj/:G0Ve0r)[DmV%
%!g$*D5ld<^EJj%)6KPp-7Gp'`o27G!<pOc`/Qe&U>mpo/4i5K'V<G;VLWuu0S%\&o4e;f]cM+5@j-DWnIHiG%R%k5U\tMLKrh*?<
%pMFp4%<2/u2X=s4IENM/TViO]!sr2[jcchNBD,]1g$[:nQ&f?6R>f?fOsZ7hRM8k.^H,%pI9T_:==F*[<*YS(et&eqbe^(7fWWRp
%6)6N"Zj)]U:m+AsAFaO_kqMQo2]4i\q6TKOGFUT:5^i8f>FcJg<EOI8Rl;PDmP["@_aJHd9hSc'CR2!&7'0eC9#\P_&u+-!FNI^_
%CQbqT'1R`5Gq'_JW;!an6P%Uk$bdqqVRFa>5#/pWa6LYcigX%$f$OLT3L8*(USB%iS#!qM-%WWdArF5T:&?8>DTm,AMffQQ`ddk:
%5AUCNZb\[AXm7qdg3uX)mX[XImPu-J\KsTbJN5.2PD8h`o.GQKDY2@1*hgG"AE^OEAcK*/[__N5leLo?qY#o6W#Fc*_9)Z1Ndk,Z
%U:YWmJ7p7:IH(>#$!5Ap;7EfJrR)UolEk_Ioh/d&JNdGRD=LXY$/iTnhV?b28\(_61o9MBc.Btmi_7'J_j#$OX3=Hhjcnb><6<:'
%U.0rL@"DRR\5G_t$]Sr;bm6=;UY+uaF_Ag$,r)^7cI-\>Ik^Z&WU\IFcg+HaRB3^CdG.aCE!mN>$[KmY5JaLho:D:BaoCR10B^Io
%gFE"DGJ0Ml0gn*PJmC%m4YK6VJ+Tn1>hL?1#NmeMFA)!'@>77%+^9Y[=$XT4iaZQY$ijpT_C(KNPm,W^Dj,qMO9\;YGF8>>nc3A8
%RJ<Qj_)/=hQ&&3_'/kI6(s\m9O5i?co2s;5#rlT=d<U2e@lfV7AsUd'3_!/WW1-8#*oD70gNeJ80qLng``XjWAQ6Db#.HuBmE<.%
%pP!2##pF(S+8'p7f9)]GINJH5(Yj<6Q/AI^^aoZ`"dN^lQt=)GOq_%1R5f$D@?u^L-FT_CYn^'uTZ@[`HeG\mmetiT(R&8F(\p;Q
%pX6ccDHX"9jU_KHA/H@/_&*mW?L[@>n%+R'l7Z3Sj`nhJf,o2Ap:fk(c,=bD82Kub#\sH;&W8ICl]/;PkSd]1QKQA[qp:o2$V'1-
%.#X:YR;HTJ2F.-;Gj!NiEqNp\Va/)a+N4[eXG5Hf:09HTa`cjlS@r-obf/77X@E25D1/C%[_CQ,7,N:(R3-@6`r8oU15;tmH1lWp
%,:A_iT:1u#LFFA9am:K]8')nJ;-)58`OES9qKD3%X`(_`j2GsldKD5)qeK%):=.X.f;<]N!oM)mh<)3$^>J16D5>JGq"U!%j#QGQ
%m<d,s\p[Z3X6o=i3a\5p0X)t-``bfN8"Bj;#uT[m*NBh@.=1)b@/4;M6Od^DdIB1tF-h@OZ+@#A<+Y/S1g(@HbqN_\AD;ctSk]oc
%?ba0dG=t_4ctNkJc#D-tMA&BP*QY00:%4CDHo[5\Q:RG]$>V2p8(1MCia$nSDg1Op1r4"Hdf`CH4*=>lj#rLaIY&P8*Jg)5LR#Sp
%hEuYH%=?sPH;/Ba&V[q8ge@+Gh#m'X5hT5#o0!*"=1M8e#B8,1S)bOjPhhUs!U[A"H-rW9/jPZVfA^%I[cL,Jo%W=9pTkk6a,d*,
%V&>MF^okjn5\/Tq]?]p>.T+rZpDM\VX5`<Rplh#g?A,br;Du^$hfJR=,B"7F["0JUljEcD13#;hCsj5k#iI6G.qGb^2O>QPqa'Oi
%7j=g,a2NpkD9YG7Lj.%\]D'R`+;Z48[V,$AJWJnTposnM#)mFZ'.a[jDWp,DK_4)4o)r+Og#(NW[D'",oY3nHo"H2i#J09QB\6G0
%ALlSWa5`T-],8,k\F\r2aRTVr2d6BnjS1MgraEU-SJGRV2@V4-`,;G"mUD%o9H1<(:>E04O[=?u.NA+&]ck@C)DEHmUV18.chSR)
%k#_Z,1F<M3Pi4D`q&,iQ#=/)f-9fVkB:8NG'5s(kIpITq?f!r\]Lu7ERr%Wo3TOu8pZS7=6!?L*0:I\6#<Ch"?J%mlcWn??.@:bI
%L/Bqi%Vc\o9EH1"c1HK^gP:^*h/p=@]%k`phWN;pH$UQQq1h*.DJ%a\>i)(mP?j;tEa@7UWbP+^$%7^J*RcY=iGOM%-b.oX::U?"
%Ve9pcs),;qroE=91"/%1s,;MW`kXcJ@%T0XcPY;I%.#bSp)*u0N.HEND*R&$T4R#g9RN._cPY<4_SDu/lefF&q8MZ40Aem=q<cLX
%5.g+OD]V.>m<AJ6d,09AjNX1Kf.Y+$huE35PCIoO$4_I`j3IIB<Q+@Z8LIla]Yn)LmAc#Ulp>ks3J&UnDg\\eqr;&Qru^kd<h?hu
%j'VKJs.B5bInT*7U`4Klg&9t2>'Adck#K1ZQ6?-/rQ`"kBYO)Rh6/c^j3<%d\]I"ZgRGjoJ,]HDopb!JVf/0?HMQXp?['93m7I;+
%s6A/+h+t5(AKCF9l'l=(?G6>as5`F:V&R2K_mAO8?iU-!l'n=4rXN$-2uI<9r."N.mrHo2s'=NE4>dA[=I,6np-SLNN'8bd/1;P3
%CN@lGTBJGHh&&Mm$;8K&(W'1p[9>5;EWo';Ba3MUo1gXfeUg\%kM)9CTes80(RgrT`3A,^eLMI#W)VFiK8?g,;n;L_Ud_F#qem9S
%]g?;ZcGb02>"H7-/k**NjOS?uR0PUkM<.@,ZBpl%-(j.m-"#2aS$[i!nNjfo.f/)G-[GS)Y=(nUSS3h[\B(jX\;FbKmXE[7dT+*T
%CAo]=GHsS'%:Rl(nP_UNNi^dbXoaFLTD#<`F`(7gk$[5oX6@<(c12keQ\?r/mHc=J/?rRFYEJ+F?&_q=UCX,A=UZ/WnDL,RgJo"p
%K*G\(mTirbCPPqf6T@e(HBDRXm@B/()W\<d_AD_4#5pT.:6TU^pWPTkhFLsCA3(q%2V6bdg<Es8->Be&5=*SYpKD=m#\CYgO:Dg&
%dP2E1^%;n'af^#`S:),^`?QL5GfCrr.'&/I1n2l9DFsCQgp*QU=1VL'phCBoK$ROe#tp2Cf5oNt!PP!=1ctV$Sq1eQR%)M:;7S9=
%_A1j@D2E^H)QuP]2f7,=AY^(I.9g<kcr(XkIEXnK9:^m/9G96!H,j2=m7R#RisYb"^S_]`@=c)GFj_af*S;T*Q6\XZV&3Jc+)&>o
%jWf]VBYqEu,FbbjChYNF3)i`A`6+4!im1i4-dsstqhm"T47TAS`+R8TFt`9Jom$lgg]au8'3=Oe*,ZsA6G@,!6YrM`<q?7O;2-j$
%X[0^U-r\FO@K+D.4:H;\45RFnO\35X`jIhPYHjg.APQbAXh7T5r2WMqKQh%CgJuZ\dcE6dRhlCLhdpuQr+deH\1MY%XDB$@lBd>-
%!7Ze"VuW'>Pu9Y85/iFPd6<jsi%WUGYJg@S+Q>u'Z6b&t#V@Kk`YQs`c2'DdX!!^b$jJ>L!>P^tC(VKISFej(h2)t6Un&orW?\Eb
%VS&@]hG5=2pk1mA,qWTLTJ,A-d9"#HX<da:L\p"-H0rHLEiKVfndpX+M&djj3j`ddQ=]@%MU@U4Pee+=.Q3?$>:St`H5b85Lt%6k
%7;_>[MYa$pS>4Qqf];d?O_(;fg0K<=Lec<<R[<4$V7tXTntKMWS/-K@B2uB":o('9b27:Mn6%Rp1qrm]"Fcc;#qp]=A-m)q2df8n
%Q*"BtN]0*u^-g+=3>"Wk8AE?c;TkX`Z3iHA0dY#Hlr)J.U$<1i9LTJLK3Ggql'KMgZ5d8>WBj.k<3D>7'G7tZZE_;_KWmFZV[P<J
%-$fYE=D4\>')!i^BaH>d]X5bA+WBBO\s4TDA$RNc-ti"eW!2Ph:6ZJ%\hmhV@LR6KL@?RHB'V+*jpJqg#qjY3oFV*7Q'UL#4VUO'
%>3,Rl<6P#l4Y>"$U/5gLJ2O(\2)7fZ]']jNH?aO$DmS20Y\V%N&MGb"+MBAXZTKIB*L'ENg+O0iQTGt.7]Ccg(re=P$H=7Jb%qS?
%;!F\Wm7J7*26?ipmdTrn1;T9670bEEQ)-p&\^)6H;\Xb63U%rrMcfB;q2iKJqE10"V(,Z;K-P;t+i:V\fHS3^d_IMCP!$p6:*^%=
%j@.f.A;Q4++X3&E6'eWAPh>1ZRI"Ba46Dp:Qc)D`dNJM:+?=Jb![G^C6<NO"]<Ip#0Knct.PHjKMI;ni%FYBm9AW",eYEALCH"f2
%__T4k;-lFr2MjE:_m6X7"_R-_H!"R7?^<<<,,P\DntC=@5Ac2$P_Wi,9T12Ei<9`bI&\9HX6<2`PIL:g\jFgPEESSIBPUi:Q7L=N
%8@,tBo3U$+0'UdsQKG^NWF7/+WQ5mCEf-6$&/88/AT\SL;*#h0(bdc9>mPV2S'$:bL.#Qc!dOm,NehQ4Q(hcqfB%1c=+Z")*U[YZ
%QWDC[FLk4?N9Cn"Th$'8e&)C\*+N,O\e:=k]_KG-`BhdX$j>4jnp-t[@=JDc4>DchjbI`PA/H1ted2c.d:[<I)%NDhQ:8!As*#Db
%cK!Zi-F,4]W*P8E-ECn$BDpIY/6-eeN4j<B8"i9.bP*YF/h))"IAmpfGdYH^_dj)"$%+DS/5&R.e_S/ZQY4C$bM6N!XpImXAhRF-
%[&hi2K-;kbWHMWO)Sa21gkA-;m88W>!K[I,GLZGBL0/l!obnV<-6hbK2&fM\CrE%uLYBX=L`TKT,DMU519JR1.!<r5(iL:j-Mf3$
%&J\S`6S#4:QpW')NX[f^eW@eVPo<k<EoXNY26,jS(-.Tpd3t9$6qictFZ#[5=cT87$?S./.b7M=X1g4a-$b0Ncs@e)Xh)*<f>Y%Y
%Gpl%]k"Kr5%Xut*\0/?m'b4"J?;d&"Q>/#u9J>q3<"P7`>:(^hVCD@HcHEcGh2tHJCoJke?;g$i%4XMu!TlhbZpdqD>>28t,qQdB
%4>J74dH9G!ejYs#\<SJH,X%.%Q_a4=oWDI(>Dj7\L)OY6:NO8'[hC1j5uVk$g"!]`.C0I_a)fWB^Z:81M):%QKSBOa3HB8@+p=rN
%=+&)*<ngHHRp$M!Eg3E$G;u%bkO:&rb'"s[3dJ<<=Ooh-+Mf49@m2`=eqs<"SgTD#W-OIteX#-tGXZl.c?2.nG_\cGQ\u[X4";rW
%k8YFq^EAh<m6W4n):[-VE6R9Q!`,S>"5ERQf?Xj)q*+`9Va&5IXn(]NZeaMgq<%@VQf%4[]&-jZIJUj>hnOL/"=KfD(Q5"&&E6.]
%8NKYu`M<J9KNPiP,ZKFCEW.c3"QM#P,F#*b96+%!ju2QgnYF*C;pe-4CbYDfA5NQ:clBiOHJ24VG-**NN]Ist%b4q*3X:"!-AIo_
%NOi*U`B`T/_iAuqQ'H#jodd[Wn=5q^=M[=AMmdH:o@%pJJ,+jqHFF?^`0EAbj^!#OJgLk>nlE27e[g[t8/R"04f")Qr/DM@m8',]
%%Mf*s'_HEgmc\C8I9[^lNWdVa(K4K)WoHJZQS:dHL^$SZE2e\E>=%%5/n"B=Gmq)-1(4R]r$?u.Ud5u.=:k^3.[7.BGAX'[iBUgu
%kYA3pclHS)a(9hn"ujr3%D%kJoEouVELoiHl)r63O_uro2q_u&<RaGBIR_.7LNd_ed6.-PC]G.bJ;Bs(+G:j9+e.FZM%S.Ne##'V
%$EQJoGU]3kpjnf.bH$o+Y?0h4)a@"[JR2;[eBHH=m1"4/lfC"02$;Tr^+1)-9*R#,1TF%ZS\-3r76ESBp3P$@nX3i<WP/uI(QX*S
%(Wm*VaZ=uQ(m_'u:p482B^ZCoq6?u\"iB=`L(>,aGr]3$Ym/)L2?GI'%gTK'Tlu&\P?>$:lYrsF5Y)`-FB=VhF:mc%((h?#g!tZd
%]b/m:YZRR;UBAje7SmV'O;9[K1--GE*IMuNK*(d,ao\3NTSF<QV.As0,61RV?Fp");+qk?RO@bMosJm8VFfBI$Ybqt=al17[AJ*W
%&4SCGPM0SJ?5Cn`7og\T51,p20u8iGD(jHl!X_#ra<[%K(-&a35Q9;:SUbu;\ln02YnLj9<.N+41K,'73$TJ:+EUTg1G"@>/^;`@
%$/a_#!f7fS`SQmQ;I0kY#q^uL)A74-K%e$s7'F`mdGbM;C!_G\&Uith#C)]cA8o@AY7Sb:.'><pdK)+k3&@ND@$>h1IQ()(!88%0
%#-5R8@(2&OkIP*80'7i>TkkIi$%:U-,hPB3=;H*)3G<+^R,-VNeL1fnpWu`iRq6\(g_<oaE`b4O'nl;`E^mC60V>%Oc%p).$tND^
%/;/RB5\k3jCC$\m2sI5OjCoCA:R`9t]Pb2oCU3]o7dC1;'Akt%MA!lZ_dE2$`H?,TVK>7N(OZL,*t?0\f]&P/Uno\:AP3BPO=2h7
%`B<+hoGE2h:k>#`VP#mXU>T#ulXCq>AW,Xd/a+_4).qmETCe@dX=bM)LZ/HR.^MT.<]VagZD(ES()h'GA)YZj$9V`p]sQ1/8<aU(
%b%3=1Ck_U3:Cp`87U=LWJR6!k=OI)@0EacYF/h7YJ(c)1WJ?bp?p3OJJDh?B)?t^fr?`Teiu#LDK^mgq/od6%GnLjkhQDJ\D$?[A
%S?T$5cj:uSY2agr95D221e2"Kcu[iP!A+J;,'oIg]dkbDW"UO+Vs\jX-n.-ESm[\>E"[YYQkjfj"J"M;*+0Qk7S!k#-#^T-)!W(^
%;6UBLj'GC'p3+QIk5f^3n@`K9rW,,V<3?)S.tB!'>)d^;d+_ZI\=<'BU4;)k-a#46NYT!IHmi1:8[YNE8lC+6":)/s9\r<Q#j*o%
%+utTgDe?M8,>Ic6jAph1=cTi\(E.>Q64RD;)QJp-f+Z`#PnA=@Q61a8d4h:n$*ZTjXPTIF2_)%l_Zr`"[WG\&D-R`UnbRbn<\DfP
%9A_+!d2DX+Zn]pVD+V)i`+H6AYH>Xg*"a:Bn()j-N0)YMp/&[[Laa_'+,[Np+A(^lCOEbn"YqBU9HF"0GVQnnl0&aR05X0L$_>D,
%?q&j)F>F#l,&qJ4?H&Fr(90i*i9aufOF^9a'Pg_dG+m,,7K:M>nqs@mUC6WY<98ss:fGt+!i`W[oA.1)aFKWG5QDED$LCkIgkec.
%@+eX]BA02$*J)-1onUSW!5d0!_tjg06d0+e&"#u[*)X^]qQZ>d"N1krjO2R<dhH5c_#r@YJ.c-?mq!,d<fK+*'gYL3>S))e"CW%M
%aKW`/eR_VAdq6!hYRg18q-coq`.Ci7KO%P<QeLK576NQ;0U)QrUS<C]V1;'&#PAb^;`qrRY^d7:R/uW;/Q@S$nf>r&?J7H5J19^#
%EaU".(6nGZKQ.#,RP97d:1qC2q+M=/$k`I!#Xq":V9Cek##ug(lD6jT?:9[/L@@TjEA\>$bqjYpW]p&t#i8os'WPR(*1VedO:f39
%('#+(A;)8DPm0R+`<UVsYVGqh3@i;F(8VOqMe+F`![G#e%:\sgl_&Z:lA-Fl,'(m>"NCF_RFgP2If0=UU'$T]$qB;5/<HV@:!Bk;
%!,p@^"3aW9kf(O#E5C0uFP!=b,+QITH*g4QYRPP\O_'Z'5u!+_^Y5asndo%2i;aW<3WL9*hi*;dao,CCTJehJdGgR%/PG+C**B+-
%5tI>u-C"BP^'mA*)T3L-$Y9X%A4p:Q3-@S,OsWd2W<?]"b#sO?b@;Gi.Y;XWX+Vd!hHXSCY/^@%iSl$79@#rk9ej3rfEO>JDhYhK
%%=YL!$DW@G*dM=ZMG/,g`ag2ol2FTJOKYc-$lD:O7"$dp`OJ.qPI*^XScd80oX"s'4Vf/r"eupeU?3A99E>!DL^;596gsu.SPk9L
%<.u#labgoaj?^+AUXF+eXZ*K]'(e.?-M.VWG)_S<IXpYT3<8P$]Ybu0lIu,&8FUs_:_'fC;uT3EYJmFJe-+duM's[g=##n/Ml6gL
%eCo5Jc&g`@8m"I-JSY@q-L7[&7BoJt`h4d5"9/-*\AKM"%-I+D.UDAfJeuEFYe:a''Y3T)B<VQgBY;BVDuK=aqDK2T"7EUOOl@R:
%PF7ZB/@pmE,?i-)`b\."UKPH#c8m]!PS-;@%TtWEYY'\bkb_(-ecp$Q@%KWSC[MYu+-A^oBZ3B&M:#$2$_/C:+KI=8@CT*n^2&B*
%.V"Po'DS&1:.b!o@6B69I;Q2R,:ok;O>-hd0O@DjA<Rd<3dPLJY+Fps'#]c$N0n)97gqiq0j@3],,@\5&7*1\,Q?%$ItOFa=1;kW
%a2fT"Z7^I#="run(X9BLLs[.54gB'+$WD3RhNaH/nh_O!1>'R^0iJG$OL38HTktR;,lP*c]nH.,Ug%7S1F!;p*akC/"/GAV*F(Jh
%3af3]QR%tqHCj7-dIoMAM">;=UK*7Iq&o2G(tV'WMWU1QAt0>H/,Y4^LVU'fh[%KN<#sU$RC7aLf3IfololCp41>29JqF@PQZaB9
%@#2?_8.G..0PG6J$iIs&/`S*$Or"/0;%)F4N5Zi(]E[sD),4nt(U4H`s2BKqZnV!h[3a7N7<VATeOJn`Y3EosW3FKfc%2ho9-g/<
%gnNpeI+h\aLPJ^UdN'GoPtQ_HXYYsCQ7TY(_!>(XMH^pqO9HaaoJ-L'N8c&Y,g(WaoIJ`j^e=!&P44l5C_:4^&R^]T5s-#Z637oe
%C6i>g&2pU*JRKHC@a(-^#MU*)Wb"0GbTVQk!Y8!pN:=nTUD<3gB?2R\/N$$FjW8)$o)]"3M)&Q37\8gg1JA3OgLJB6B$*^3a>4q'
%nLblWRiPj2bep*QNlYtOqkjUXK=&]6+7BS5WG!JJd[^].HC]j"M"MX3Y:$ZiUSsN5I@O"!(eB9[Ja>Gh-Y,Q`DOnY!5h@0'$I3<Q
%`)KZ1T^`dnS(JF<BT<gh9*gW*D2'[_g82&V$oL`h5Vj;[8SWo@m@]K,YrE=4%K$OBJ4tH$r%:C?O.$Wti8$Z$&G4"TNbBcnL+`fa
%BN36oHc2h.c-$Z`=hErf.lB)6C0?#1Q>H(N+09rLE$[(a>O#$_d82L_*$S'1WL$R@\0in?LQ[OH3+um[@$G4\&NE'mO9*K*T<,#U
%(co/7Y>]M71,dBMlEC=mG1ucG5i;kWLMHuq6fr?!%SkU)SB/X"WhuHQ5ERTYd$-g5LVjS?7q;VE0F0In!IUi#rrGU9_?#b;]Y\J8
%gXGT?ctKT_&1ZkMN&\O-l#LEg=g4j_itm@mn99RM&o=!&W(1sD,msoAm<YR?UiSlDOBMg48:=;cfPocrJf#CE1)rb&/"j+kBZ#.Q
%f`gGrR<?SEFWErG=-W1dNOEJoj.tD%2)UE`opd%Q(7D$U'WFaD+H\G0<!S<lR+Xg-!XbJ&/1t5uIqX:d/2@4h9Ksh8#R^hg$?9Nt
%d,Z=NSNXiG[:E_@)#;F4=!f0t6m!j'>]4HK'<N%`-9j2NLlbcag*3gG$:6SGU'@$"@bo,`3oKY4(Fj_V*aq@TQc2(G$m`\H]QDS%
%#j3M26bnn+!%+474mfL&Zo45!YM^mb%p5C8/Q7`Hc(i+edX=Ol=51"N1W^$L1#NEXQ7Spo3=oqm)O[fW4RKS/G@L/1(Eu9l_b($$
%QQ(`?(IVaK`Vlgn/?1WnbaZRk=J:C1+//9d>FP(`r=PV*5Eof3%`1SIf!0^Qeq_]/a?d^__]fd$;BS]3"@HOi0L(FE)(buWd*bB]
%Z)C6:]7ER0.glV^c.OnKV&Bf9:lg$aA1PGiMFr6V%EP1h"B:egOqfNDaPTBh+ECA-)eL9l3g(i',`5Wa586NE0I]U(`)L==WDkVn
%D`)qV*E'($=g4%EP4_4#UTm8i[q4nH^?B!U?3Er`mtB3l#[4(!7`#eBXrmPq/PN"&7=jtI,([,WYY7=-'<R..;9f4)"'\a_#Cn/>
%%P7it$a;o@f0C94]p$9]hj"pCo'Cr0oG_(djL`B/As`ns<Cbt(>o5"60L49;Ren7;:cZsATn;>te:e$-NFk.>;gnue;f!!u0Jk%0
%q%cUH@nndk8JKg?K0lUeP"8-D>N!D.9lL2sXRPjj)DVGT3J.$,Yr#+>32"7YNj(h7?dC-+da\O_*cg0rdgR1+a<TXqdugLEG>+EM
%_-#V%\VZ.%j#&1uM&"+$qPoIaN_DbDk^m,.$PNF_Z*1*mC('#291L)7hI2C/^86dg]Zah&A=-rBpR;R6rF?&+Tq'K($%r?4+>=R'
%T?tF#DA0Snl4GqCGaipZC'%X9=pEsq,Ckf+O'9n=QbjA;e>C``O/M9":?tRdY\-]:9]+W8p\6AKH(a^>J56HlAMn"\ZCbMMGVs!_
%r3:q92qiH%&#*c^$4:E?q@Qf6Y*,ee&H_i#2kX4YZR%4bb]#a[f-?`S\rEiKB%5sFW%nsM!2'fX1!iDnFQsV.afs_6*>M(`"2."H
%JXLhiE5HT`l5gi^"9HVqC&KA]0<b`!"jQPpObi8[YEoHM5Bm"^Km7/#p_*1F"%gjG)X9Y8%tsF@mn<UaZ+LmkbdB*fVGh,,"$em3
%aO>/LEsluc6:`!JHdUA@9mrh5dP,\qPgq['7E*_nH"jH,rOZZ;9.Mp3Ar/#=(1NgS:p0t?`'UO#@_i[@YmQr`>H[GN0E(O6qDK2T
%"7C>uNO25X&Ng](QcVe;@lY^8":#;874W<jLT5ECMgq-(9nI)X0ig.PZD!$"]JP7'&r@4@Kgs$Pi'^Ua_*I1(L-1Z)7dLibm-lDd
%(/REG(j9Hl/PpK6=Ei6%(%HE!q;sb?9l9W\5nNb0$3NfR1MJFBH=qrBUT%qbHsB:/J7r]i!9qm_<=7,QH$iEB`%u(2+PR2HMJ#b:
%+j.rX#?hn(&2WuLR6XK%CgJ3flTJ/bP1m3TO\(E-9+s(hj=,.K(73$ALIr84!jmZ3LM>n$ZRubh6tqu?$;E8DV'f;CBMHL1JOQ8$
%k+Ut9VI:O*UegVSL"VNr,>c8&6aH/^rUj:YL1ZOrn7?D]!,-Z&hMD*6"KOA%`uE-$E'HIbp/95Oj8`mX=>)-l>#7Ja">Fql2Y`r.
%fg(Xi=XnC;feS_mQjLF`>lrE^^ap;g^5`Ea&B?onnOs-j/7GD*NmCd`kW?/eNa`A3!jnUsR4ZWeZ:hODBRR5f#[0X>6].YT!k9,V
%m-mRDXiksh]H%'*@S3[a#[g&;HkaF!G-RR*Cb^(rFso;VkkN4;JQnduq$C_:l`cHWV>3b$3I!>NREAYOOJ6EZ%`b4tDl.1/+IegK
%&44\3"V;hdD4[YE%.G>[T\!4hkn.kd1ZcTIbY4'$kQ_pS_oU"'"'G%IE"/#-d4PVWlAUFQ^u&CA,uUgk49a!J5Wsa_RMf-]o6V6)
%2\RWo)rfMePVp(Y&FDr&@G!(K9^8tG)-W(K7BqqOU)n6[TH[<cR%_P9oMA"o<U4oin5=#L'3SUrPckM-+4&lW+Pp1-CpIWC_N*2b
%AoiQd)3J\F<#EqhDB)iIY3rW]3SL=$F`X;(e3_*eZls1,!o?7kai=7I[LOAd=!F/Qe5%4q'Hb-C%5VmRf1r@<OpR#qSu[P,m'U!f
%g63s*!%c?\MIrr_L#&e2ZJmHOIM$!e9H)7h0L:NVcW5.<dN-D?J\Z=Z_,&7#,&<R5m0;>a.7[<5MQ8_O[p!c6Ej$BfVCl&h-Z:?3
%*uRt0MF[Y.+AQGq1+3BMLdW-an;nI,BKG":L"",8)sR3<kFg#GaM_+SET/6oW2Wmlm[81=[(\YS=\d/6C+qM;N#.oin.tYm$"hST
%(^ua+9CW=1l=+!I>tD5Qrt":,GgC&7``n:c7g<$,4qLX.$+\$P,pI$%V%(uB2&j[sAqkY4^]5m5CKa+"@opGR1<]hSTZGb;9738:
%i+oT*^u`Ahe$SCoW-MMHC'Z''$9)M#0BdYa.JD-L@BfrD]?nuMd(JFMWV?Iiq7m89M%H`cN@c"s>';>_)6LSq*=umR7V"g-6Vcs1
%a"K\68/l^5G">:qidk8EaVKeD#ecWE6%,rPfQbk65@]Da].iF,a*o4S1;6*(:(q+Xr;>\3RpeN449]XXdQ*J%'*RO,THROZq9`$,
%#R'3#Oa+7;k'qp7%`RgO7]li6(0Q_<#\#PT@SpYuYZe,M1pA4TJM94(_Hso'HiRN+pmcO'$>JHcXJCpf)VR$?!$lM9UL;*QghM`"
%j]k^iT-dP?>&"/7%=p5`L8FPq8*O91m+87OC.pEN%9rnk7\,4B5I6p:U-RuDQC5N.TLp$,A6CSu>gU>i,07R,`]6gV?;?Pgr!3rs
%!ibO/J@:8mnXQ?6i**/HV$'1GY`7mf=ktIQ;!N:8*0uQFNfP9S\o^Z.[&+W;9@a;@?]`$9:naj4W5Br1hFqL27NUAiW7<Y-5[:W>
%`f0V<,]tkfSaZuN;R9@\Z:5@_TNoY(Yp.1en.c#(3C$6CggscaMM5W8AJl1bdsJV$+F>2,*C:m[ntL)B,g=/-+DM/nJJjo4e57D(
%&jQOR*j1anXDCWtAE5D-:]U#\>)E"iA=-Q11TK:sZhbLE+ChK8PNSU(>1%FAX>.poZRi.djeEZ7AdgtH`kFo2->3E*cC-C\5K#1V
%J:_n![M+R%FsuASU5([;Ye[TREnF;BBLj#coXiKQ"IP9"]>1#BY"Qo55uWM`9%atBr'kb&Y^dlM'QEIqennA`dQh4i&>Q[14A9m@
%)L27d_u?`Xn8r"S)6UC\6I/,:U#V+JT2s?R8e9q?^2Ph.g.8TrMcBdYVNsXhe1Qc1YDAlb\rWqWf'!4aZN1&Qb+Xc&_2(N)HPl;0
%7^EpDdK$t;jVa6bk68@*0F%$?+:Gu#XYFF`*I6Yb9JZ<BLn#9`GSj#l$^DY&XOg^G(6DB$Rh_:l>1BXmKGT'GW_Gh180gW3"V$L+
%=gQg'Umn-b&M8B5dh'OMJ:8^iY8Q:m#]:Pk7#RpDK+;:KcXFD2<d\Gs8e;$p$VNj=AR41Z"Ps<>'L_%NRbg8?$0C8jg<kfq`tuEb
%eKMt47iWAWJj;0Tr1]TMLgVL!'k7(M8%\L)N$"FoFEolL&F2_^+$A5XZQ!n^0Oj'-(oj%<nFAH,%;Udn4o-$+Fc0EN^tAYUmPRG*
%+Zs"eE2lu07Qb4j]DJFs^/NpD1qiqFm_.9WQDS#;s7Pi!^Unpbk4Y:JjU/WMjV*.8jOq_[&$N_Eldr?>RIj7hI/W>cn'7Q^G!GrY
%mZ7A]J%S&6oU]'-W*-$mM+'T*(YTek1FD7EYhZoYD)!s*PTui#`*V`)(m#Ic_^ND??q?46@BPoeBO]g%$,m1PPbuhTc<)LUJjM8X
%;ECpmE%kp$UPYKKHDs3@N0[?;JTNiJOq_Y1NQ]+QZG6F<-_[VN4iM,k*8tClbp)#(IDYMfeh?PDaA%4hd)tp/9a,&9Me#EcJ<,FI
%V'p,[HoK8'jLsi<6u0.uj5p!I"s+bMm-Afm[?.2r36g4L@+&^c'CkbMOHPKU)Z"SV91mkUe^\7e4\QZB87-*2_As@3J;;!T5R0)>
%T(Qnch/#brjCsULD?+Or39-dFM9qm5G`_ehQ3[+<l7A;<LB;[eA5JmR\s\s=oWHT98P-aMJ1<0ZFE("3,0Ym*M)"J+`]+'@6U<di
%Js"[MHU*=S>[oc0)aXq-p#JpM'+.o"[O!M@FG)n&!#Xk%&7u5;Q[Q4p;'01IAoJDd\@t=3!4t'1"-O8+U!So:V.7aIC;&PUAk[31
%1`#=m-:NQKXMrsVg-dLU5SalF-FDB%TjEjf"/?r0Z=kE!M4k=2kGXMUSkFd?/Tr&c>H6eS'C9Hb))2Lc^ENi^f7uKiY8`iDUVNf>
%@D(2JV.\30cWYZ)1B8kM$V7m;%$^((70j>oOudr<^O=QV(VMXq/(O\X(Y3NA4b/Y,U?-4P`$Z'2-b:7`d_GFUl<k/1:kj+>ej<'t
%G/Q!F%V&8+;^5KS5L>#TN^s7NFHOA#HC[1A&m7*NX1G5L*`A!6&;eT--)dN6Do_";[000Fj4f][WE=T]l45c<]=7"#.$''g?;Et6
%M_`JFTe^P'$)A?A/)csP6c&+]hQ%R2Olor5T$NdhbKIW,LQ!!i.cJ9YFj6'a*iE)gU@PQD:;olbkCJt`g5*"^3.ur9<>V!.F%_+C
%V"HXI%ms!E?&p/)pD&5TH,r!lCZumd!(W$'r.?2&i*Xn^%i""HrW$7N&Vip1cQg"11+6:oS5qn-/uiSJ.%\4pY/%sXIG;/a'Dtd<
%cm4UK"&@70U8?RcGgW5lgVkpGm8>@DXEpF#f:iIIRCA%,!>WhEP`5\>JEWp:)%)<LZB9,R_)7+G`H1<,gIPBt>!k)GNm_qNAN)u1
%0NoBN-I>)t6ALK,3)PrT7_Li#^H=mc>&sZu?m!R#dAS^^b5r!CN6@97,GTMfrcV#2D4P5l+S0#-hk=Kphhr6f.BVISU3>JP<jr`D
%hPM!0/::>CNI5i8?/WdjL`HpW6sY:U-JF/K91TZNL;"$h&dFJ(<\bl\gE7Wr1m>I1`Su\KU5h>J<!t_f:_m+ofi<aD'"RRr)%ne7
%*gO?N(b$k@Pn7Nh7Or]hR?in-C)F1N6ZfX+2*Z06+dX9]!H$5Q/[?lN^&hSF=^2QGeci&;3K@:#TUBEm<0>`lDM3$SHp"#K9#"On
%S6j4E&uAHm<js$O%CcFd48O(TQ$U?sd0Z13CaJ3YPkb]43,pW^!TsO/QR3pBBb(%A82#_N&ss1]_M^i4Q9bP,WpmCUOpJ<\&gWu@
%UeF'kK0@>7r^R&XAGT?G0^rnTLOn";1:/Lr,)nAsP3c<%liq)-&ub$LMEh4U-#aBM3ibgQ;C=pdiT&GUdKQ^S"VK+]b7iO_Lh#SA
%<Xg38=:i8I!,Ci_/W4'>cn^ueBV;b+S.sg]1I;,l)>?rNGSuUCa']`J#..s7b)/cK)f;a@SHr')1#&r6<!6@aNoN1i$H+]U_BR1J
%&Xl.]$d<DqOg0HU%O=LdOU>#Y/3\>^TG!HkZd<4`jut6r>Bf\D*&V[C'rRnXT(J\M[*,2fT3.[qI?hWa1US3mN6%Lkf"PTji9MQ2
%&9Sl!S0W5q$W'UFG9NBY!;ArW'3Li:*?lp`Q?tOphD%.+"8<=bBqUX-pQ7,!pf5P(=Pt?VKuHl7+`[1Zq`3,J,@A3b6p"_DWH1)g
%BX*eqXG`Ak2WWTnP<k<@-+PKkQ.[T`+\#9V7=p)VhTK*+T[=]*@qTDiG:OtCRP#dJ[:oo3Fq@OX&?@M>Y\5LdA1<ok?:;pcW']K`
%#c+3M,r"5a^HGKL&TB&b05Q[L!`sQ+K09df5nQs9i^m2%X`4^"%NklVR7M86?(i2n,P*/u5^IPnp)pXI6p&;"F@ocr!A?F1\=clT
%UJN(,3OsAI9>4]["?,0W9`#!\M[XI/^R_7U(K:<HOL\_AjAh-G,')BOX-,DGDUE\KTO_\c9#JLUMhbnF2Yp>Vm(0)_NX#;7;@G97
%'93s'o;IM?A/9_$%'J#b1]U4+BX1]&5rQF#dQEf;4.c8[:lu9kNaq8\Af'en9^<MN.WtgHMq;37,3?m[)%@jPp#@fs"X^T]#%31\
%!V+&3LBJ@i]I^9jM-OP:*UfT,WfeMPI0%p)oG5/S/8&$n<$9iR!GF_Z`H[+.&,c'*q)>F3qtO,;BZ%eDafm2HSrtZW7_K"u51<,9
%g^D+O]Q"KM";XZjX^r[!Uo?p2\'UYP3`'"f`>O50TL%qp]OP,YkdBOob^D'Vi<-B,)-Y-OhM1:_5lfuH-B?M))&G'-LFJ/>#%S+!
%HXYE]"_rSs4oq]IWE+S'Jk\;4^;W\mn-H;T)I(dG)Ge*_IRH^FpSZ?eR*#]J!;4CFJ*'2F'K#=NN:AqX\IMSeY%fka>DAu[),4r3
%S1A8b`=\#>]C.5hLloOu(r=!MX,2HD8(aZ0@1;_91$;kL/d+0&kfY:F7>G6F1]S7AOpjrc`\*mCQO"^bBCboIJMt;2/\u^jb$p;6
%-N.V@@54MoIQC+ZT]Eaa3/ST9Q7brA!,*6S#)qZMeQK0q*eJ$h!,_rXTXDU5)AqQ!n.G:EWjeM\X6Y$=.]1Q*gnO<E/R]l@Hd>>3
%oUJI)=0rZ=ZYEUHehfI@2lfYea%1_<Sk=$(egrh]`MF4`!jhF1`t<NgVilrbD)1m`,?&aMTS:$E8tP7e9(*3/8lj7E81Jb*g*QCP
%""&F2Q6(1m"-q_,l(st*3spYW+N7fc6!]:YQ9C>N!r7.5KN%GOoL5dK/kB@OM5YkW&u(ctid`*Pga)"s<o9f*1\\1-L?.>F"7le!
%Dop4CcV'0cY>Oinr]+\lRcK&9!eY*WJ0E$MZT)ibAl:*ZeP?%n3kf&O'j#CS.8pak[>;2SBJ$<a6A20.:c_!KlbO0EFGO1u7>hlL
%$q2UBRRdcZ[&d39Vm2B%)!.oVNj15o]=qteW<JBN?`,PM%,S;L+F?!485K\mU(IZ*95!Fd'E9>HR;.E;dY^dp0"+q)5bnuKRSilE
%r6fAZfLun[1>ssn$7F=/l.E1Q@:lD&"CK_QMq03U=s<haAe,n\(5O*6s2PTdOpN&OXN+mE.kBW[eff-1:m#m_e^%8!]XgN+->5'-
%L%Gm@3*@2UPe#_GdjsWU#A/QM9h^!;T2^Z_.C-8Id(<^g0dmFU+<G*CS.abA9iL]r$P$q;$3hJ"(jgk4AJcP_g8auLe"qt7^L0aO
%$3+#7W/*HA\9)a8k,@'a<@*5FAu@:7IOl%*o`H*3'W(C.V%FS7XqY%Z\6u_1V%*B_<Qf*);lrg*TgU"I$_\PRp.U$AcEC8B0k2mc
%s"oY9ZA)h!<E07hC#K0cI=TL+.tc!N&^EZc(Xl\u>>qH[9)@"4];\Pq"A`Fe/8b';l*Hb-U'5mLZ3=d0G,<g5DC*9@.Y7'tM^M)e
%g_p(4#D\@*Ero,OQZ(HqTN>hr+AfglkaeSe)-WJo_j*X;ROeMOb!NhBoa*kV'/^qVBnl($OX1mE2[Snc7WaOH1hr3CB_m%R[L/-)
%F6dX?+9@:eMo)-Vf1H+NZb7-KZPf>er,=EXUP/uOn*h-b\PfiO!%4[tf%Cf7on7-aYfE(q:l45;<372\<tb%TN222@_2QN6]8i/#
%?Zg<L7]..j>VGs[Q7Kl/A]?fJ2_[Bk4huk8FLX/9S/l!T@Y&(5n`g`q1IAN,PR4$0Poa`G"@Y@BcY@Li/9VF@mM/k4@Ic1SFIZi[
%_4lEHFWBKQ-F9j2c>)e?*3?H+ENJh*-<d1.a_j\_!7cs7s(\d30j*3MK.=3MIOS(j0.@=tZ-Nb<Qr=W](cu<7Kc/Fj#d)he0Yc.K
%DT6M'A7`i(*;$Lq$HB7t2-X%EAPk8,2-XC<T9-S%EO1uoH6atO0#"&H-ihmRWJFeg=K-6gm8\1`[BZQZj2O9_R58YJ:D*pM8Hj2i
%,</7qE,)YZV*k;\Hui?5`fs4R+Ve:uf#\5;.WBBZ+j7-&i[f^U;7gu,9#AKKWQH1c35:T^LsT_[I0g1$3MrORbc=jg+c3GC0aY@@
%6."8:DNVajT1,TF*f4/O1>Zio`eb(k>F>.$2+""<W(=X-q4:_V#m1ic-6e*+!5c]/,[(R#XAH=qQW=QHUt/V]Z=pAEp1B1OVEMBH
%k]O9a;G9>E8`AX8`/%+Oep!&BZbaF&D6`Otr5`8ACa#X_1EP\MSW+(5,/_3pZ/gR)F_k6_p+LCj%ts;,&g!rn(CmMjOAMg=!6k(n
%<F958)5KY*8'@h\j)sNF$J`jU"O3l%#>0s.9WC%JMq\8-eC[o?qH?8=$QpWUPAiF&+t92Da/!%.5fFReM12+F7b."8@(ki#WX7:D
%hP!#nFA$q/cf'bm7Zb`^)&(AANg;Q_V(8?8KH'kj5e+\P)e7XLGKKD7PEKq+Fk[GN<trQa@&<7Lbs?1k5,5Bb42AYh/>EMD:rCE]
%l!b?6FFDI\?)C+?a@oo7a3@;JG)J+]'I1F7!E@n+"U5Jg>Pc&p;jno5E,#^QP)1lP7<d,f:)^Q$W>!<\=$,<?3Rqlp1_+D&24T%'
%K4<_l@c0-b5n7Dc(S$!=kCf^^Z%OHW1T=nCXPtth7S0.M*%mO,/L)"Ns&je6F,I:p)*h3"'JIIC4;c$TFY2j::`PQEaZ)>T31-/E
%oj-_oDq3Kk2K[q\S*Q5<Q>fe'<gK<&CuVB1d*)N+,uHr\/!i5YpN4F!<8uR0+E=<3:*mWU*9,-ZH+:_O@HA!>eRB)tPrmdM`cGeB
%iT"K1F#[L8=I'5L_i\s>2W$*+3'NpI=m$5!#6s1S>MAQNVmNhI)@g7-2SYE0F%Ai]Zlom6P8<(PFO"i5'eDf.:kiUUhrp$XWEJ5#
%-OcpA#\r'&?T>>1(X"mLFH;io%"K1!34D=KrerCu=;NLfN%:DYZUecu<8l''NUD`TSDY:lEfDLfS>ImHPpi.;l1']Z]Po)K[h=B>
%s+j&g>G?)WX`7`.FJ<_N(,Dk2&;>a5MUCuH;)n=iaJ[I3_P'Mg5eWitLUW^'4.OJ;GIPJ/FHUV0cpsor;hQB"#Up"2+^CfC>KO#N
%iJaVN#Mnm%_ttQ2GGb[a_:#-=*Lp*Q.@lTR\"^.s5n4B^8YF(U)]\fDK(]X23;P%t7%c>gK58X9?RBB(:i.MOoRe$O>Jp7t;1jK&
%b@+J1/N#N^L-pK;:kNgO*#$\Y)LQ:fWPQ!qG=q=u9OM'(Au+>>:l_qi1H.:V/kCIQ:*YHtF=TBHg9P,lf4J&@)Eg(KL$Y3n%o.^/
%Gi;kQE&;XfQGF),U'0O/%"<.NH!t'8/O)5"BHYQP+.T-1$X(2VIW4,>cK`Hk&'fk1Upkt!S>9>KADInb36fO`q3<(mH`XLOZkJ,1
%0P6L)L*)q5_5+g5r88iTidLs"+<2uEp!8@8*5JV<QQ&.K)`W47&'hlA=LGf8#7%UtZH!jYK\>Mjft:sHE$gaI'5ma+biW/\k]VDo
%"F_b[>CLP3691B5IW2ZUgMHA3PO@$._cM/'/68S/)YDriVj,JT6Oup?#?>Ag*h3caZi#e(S=!Te1A-nR*(p>=l39>[j2NXsLn,V-
%+<DuL[f#&cDKI9f5I_pO4A_6e%uqF-NSj5X47:XarQ5Y2^_(?R[f#'>'+lk_r8=B4Cii[B+'_`SQ[$L\mR`sRe)1K*UfNFeo\^u,
%ioXpf)64`eVh6$1leFhTise.2#R_9Eq`6mMPt=[Ai7d2H)*bVh'7MlhnF^Ca+'bF1n9O.$f@QdYC]*,V-Zh7crR@h*l.RAW3EjKU
%L2]Tmc7[+W1[)Xm&9MI"20s64G#G+po\_?GVPm6#mZeL7Xn:Pe=BY7&V$@7,VEfC(#6u$B&ZAG8NcQ[/']%,gHPY(1^X@`:fd1LQ
%TEcj*X:g96o\c+J7Q>;Xhuj#qMql[lEBt7.cM567=VCNLr8;7^GrPN7OTlX`riksGP<l>i)'o$o8NKPjP79`9*BnKkFae:HWFb/r
%?SC7)K@<D%Y&EJ.-fL<XKPLGCUn:l8q-Eg40`jsTB`-f4>n!j*nUknL;21N$5Ifb!!i<$si#oH_[e6%1*/b+RTa*eAL6T4U>CLNJ
%l^"E=+Ije\L$Ss$=K71BbQQm,kSBsCGCjeqh=POqKL7Qt(iqVUXianLPm&^jit*EAh$Lq==[!UF7M&<EU`.EK&<:=*"ar`L%_>Es
%JaN["U_bVjXT[Sm^hL#G#=3UrSu+#$G[8Nih6;OLDb#gg-O0lm>&tS:i(VDu&ai?&?*]2s4#;-Ob4<o9_/iO]m?nc\!Z(@""ih)h
%d1'"CgiL+eSDY9@-2^9."=IgB3]ei1ZK@Kk$,I3L@Cg=="*\:QJ>"dhJ[=[a]5N)T9KVBk9Uu]a'aVr`5P'H$3REQHI,M)6d/Br&
%%id14h:%)h]Q.r%0^-;\B5lmac3@#_`i)=-3q1'-MnH?HV]M5oCuBO8p:jbAP@OEto4MUlAA]^CH`-ii72PpP[ABgCYiXHUX@[uR
%nOCBt/\\;Sh0LM>CW#@qBBTQ;SbcRJ"!H0.+fQVArq96Un]0l+C^AKoh"fBJB8KD+5m<9"4>#!MWPDqfE(;a[![hP'*1tL[%a,=P
%3E(L8g2/,;k>nL^,3_eZNn)XQSM>[Or1c>g)\Y3(%GLs<R(ujH':>aU1P+#N:3@ia7tVOubXCCE3u+i]SI->Gh@1ZJf68(c&:rki
%=`N,o^e(#QAC4-Uc5-X*^7bU@;%HKS:'FB+fI;M6WPDZ],?EE>PsO=3c=CPhB8$ju#!*DW0d]u17,VU-,`-Uj!iI3d1l.P*S?//1
%-0dnV$o(X1FWtc+_M,s51D)T*[3k9D-NY[g/<,;l&NGtenA1Y#S5o_$\BY0d3_.d$DgB./_)@3A3Y+47g8KE]%ld]&=js\8!G<sX
%'%&I.JpW$B7!nERUP7Ce>97`@)4.f&J>5Q7Cq&tc4'%K[T\8gbo;Pt%N!Gjq\Iu$j4Q%cOd9qn&J5aW>kHj]/__fmA2`EkWQoNm1
%][MBm;UkirgsCQR$t5IKTE45VHM"YnJAZOQYK`@<S1>rg+bL$T+oe%OC$,Le$b7lK1uOD$`)PAP.;uJ.@0[6$Y06kV2Dj?>-7MVM
%%6+e9f&1ZhE(?d*GK']En'p-Yc2pc?9bqJ\=MU>k`*HJ+$TO??.!;'aS1TZ0%4_gr)]L;M(3$ti;Cr(\35,<!KT@Vk33.-,"WIh/
%HAlARK*C%MYH2b6!`!?"512F+d=Vh9<Ab,&F;7`T[hRaO`+qB9']=4a8':g+!Uc3C+`AgFfh,9".DXWRD4ruo3*T4Z^81h-YN0QD
%-A"c>M*aUC9*%dl-Q(l&3Pa<TMk*BKE:R<jl"K2Za$N#oBQ/L&5&t3\!TuJqj`sK#:<TX/I?7aalITDPh;eP`9dfNB2B:Z9Ie74f
%Ool]l+0#,A#<7CRP3uolE!d<pI:iRn17R]r40sHQBY$l"i3!`p$m'@6[^@_jH,.gD0kTGHB:tlD5]n,eTE<8R^**Qu>;KAELqrOl
%3k71;i:MJmV*V$p(7hFW:'?THZ!LnW"-+F9OVpC'"&Ag9Wnu#'Y4:j)T(.?+=kU;G&%FrY.gn>g#"0iJ/DuV4<YPrXE$gMu[<TRj
%c6O"Z-5LPEA)*TJZ[ai_/mB[bao[T"WY2%J(3%9nFSG9m"e:*:A\Y$Yqe"*b)`6I]-P70Od"'RT<PEG6!GD?Y_7%VlY18uJ]4NC/
%=,f861P%@HO$nAd#oo7cnhP*M^_mk2$VtC:#F;7arH0H+Zm`!4L'\jEbR<`1i-9ol+$VQ4'BLHYE+]5bVBO3qc32FJdb`V1JO:o0
%J%!W*NZfaimU-*/`.__U)^]N[Lm$qC-?+nW\+Ub7i65-c+g"%Qaf[4@,m$U5P/jF=K*bfS_goXAR)#-97mOXaJNFXCp.WeqePaoa
%=uK@<[!cEm.i#R(<'96,$ChE/gl6JE"g.ilebjHQ@-/OGp4`pE\TPk6>KaI5#4ZdbE:8`2F\;n`^'GM1,[HP+]lc94^qDNHGY84#
%:93`5:'D,s]@Km*W5*tm'c5Rr"jYub$S)rO#G6I]L'enD]TudT%4Z<BHE5gp<8_.!Q"@So"r0+5\C.*m=a<)mEK>%:^f^]Xo'9$S
%Ng+&0m%RF0Z]7`J5#[$-$;IK.N!l0;A_a8bPC_aGZ?!\*ADh]<g2`_l*.k?4m2IZs#eCL?k5s6N?pU=kS<n!6bQSLGhj>@A$QNGd
%9ZJY"\;!Pl8d15#FDcphW5-eiNnR/1NcEE/4?=3:1\6mXgSho-%UFbt'0*;O1TBn+'0%(;nk'%F@"qF3%1tQ`8hHZ1"HMEBip=Yf
%%\?oGK+/PT3A="Md&Fee!0=g?"r0*#=CIq!"\uh<F+ucf\CpRsfl2MC]BS%l"jRqqPI`dk3*KE]\E*eT>1**!dBYlTG0%Q^)`Sa<
%hm["rB64E;@:o]*kJR)YI,K3rs*):#+3Xu8PY(_C)a85]]K=]A(a$82./2+F5&f`':q@7lkEcfl=@eKpi63b%SJR7qS4Vffin3aO
%@ksCB:.IKeVLqhuL`ng0%?ie<2LOFfNLI\)(4^.*rf%Hdm[&D!:Am,s#L3Z&JGNJ6E12sZ]E]N<7%]F8K+FIT2QTX.n:@@LkunQ\
%E/%Lu!n[7`>u*T9nq!PRBYpDEa#"u^5Nom;m7AS<V$"c'RUY1=^tHTck7&Fk+2QBW:'ZelcuL.Ki6&q;HGg753'BZ/fag,_L@K'Q
%.igTSF-3`;V#uJp:P.EJ##8ubafM$B*,%U6!P2\A7l)#F"rfQ"C*atfCuC<m9/A+]Z[nm^3c7W.CuE8*4S'D%2K6=",G/jd"*`PU
%T%%l%#*/FSVUu=s3.SUZ=[?S7i+O:5a+b!BEHpt]%5)Tf*-.FV^mUFme2&Rn">a4V.hao5;HZN:RD><ZKXN0.#8W[o>^=-4Y_9U9
%J-,n4A/(P:^nJIRL`Ic!XST,LjT'5-f>j0Y]\2-ZK)lsZLt_PA#&qVoL?qtGE4"hr(^%;.mbst!Sf,=0B#hQ[:&kbS#N^D=!q8Mg
%odg&$._"UAFo$"\9jeEHfY?BMP7-!p^JW$IWmXZA%DFXFZYm=g@4rAP9W>c_&]Hpo"7O-*Zn:f,I.h-JrT50Q9\hGSDe*"UaDF<@
%?%S4O&(5B<<U;8F/*T!^8P.B&^X8bijdl%5/I:!G8\ZF^X:HDKhs`JW7/7;K&(m+N`p[4d3=*AsMs%l2g%iA@2T@PYD_,/c<'&]V
%[8"[Hff/KB>!8YW-DP-e/(6H6RXpmCoM(EBWBk0oD`0CO`0e9l!"<NpIA;LNaHl)&O]8Tf7,Mt[Jno!]hp!TV2e]p&ZWoh%=h^$U
%XR*)GaZ!8_=BCAu6n4;gd0[OlnZIK^^>\g(AigEMD\D#:qK@1'`0PdA)g6/dM@#lB610`S9C/EpHUI+0VU<Z<h?]X7rOu3W.rJ#B
%hO3(:c2<A`m>VmemgX#Mk/af8B>a+rAd/DC\Mm]\[rQtPdSMU8.]!Tb2p*D3jB$5;-reik)eO#9=WhXj&UQ<[JV&[&leQA]N=E-O
%_pcFoNu1^o`tP-$60o'9T:1&KlqQskR5]cOS%*qsIV&4"b)aEh/[IBf'ao2j*n9&ba2)Q!V=qq*`K(kchH9![f*j1;2caZSd9C@(
%S;=Q*_<fF$7`t.efc/2c[Y*9Q/I\'VDJqQgNN=Ze[l7/p,Q`(*Dcdg7e.6G8=<J$ODn3Pq,h3l8DJqf3$]r0?m>Vm`]\.7N.g57g
%b3_q$hD[[/]ub,YNF@6%WL-)nOYq<#>!pC;eQ6p4RV!_FjPKfl`KukFRjJt&&N8_,!5c-mXcn)f7kA2cP']:E/1:PROF*2U^rN_n
%G:T[(Om_;eF9@VEYpK-flG9rpgfqVBY]>*V.HufFRjgo7(Ck1u-Bop.JPgb=R_ZW:AnGrc;HWkSRD%"Yba]]thAiJ'q`Cn7hLr^Z
%pNCFmqP)+T137g&@gQNQDJr%X,coMPn<8YHDlLDV!`Pp7[5T"+L-;KK)>I=^)7)9nEk'hFAoH>rber*fHdh7-aege>"(*1o?t]1V
%giU`Y1M1Qkq/Zl-bhgQ+UY3,Mp4i1;eDm+R)\+4BZU*u\F<"=a^J]C\`mNU*3jlGJRVAVl-LaU-@70G,Or,<OKA)eCTsB7h[5Zs$
%q#?Z6)b<2'`.Qb_>sLVf_sE@`&e/tmDk=DiNZse=[#d1T9C*,;8I^eWlqM`]gQ!s<Yr>O+VW;r1Dm\^`fSR9Bg$<6?)e*aFHE81O
%`850!cmaV"Rt3RqY\kf]AfZa:DIrOmGXAJ^ZSrp'7&o(2fphmiM9dkfDhNEmBIX7p2a_UZaPLl_1N&-cU;?4kAI/0GbO&#haLsWn
%gRH@4B=Do.UP0iOL>&+'a5!MfF*hEbF*SV`hTQaZ/tA&N'@g%*dE'!]?SPB0g`%h;iOL-+k(Ik%BiV?Q6n:@.pKd7e>l_nM=2I6,
%C5p)bgREJFM8m&FHa?D,j:%U6S)h2>frlp8[jE/N[W6`DJLtc9p4ceOgK&0i]jYlB0r.`pCP^]BQ.h_aETO&V1UT/Y$"he5C2`8,
%1Ng*HHf+eM:Z&/OM+Z`aFK@!GX;\$`O9l6+IpkZCl0oFriK0bBJiGLkJ]J-QK#"Zm`$(]\pC>0M>g'>t%?&`C4;aTFJT]c$BNRcU
%(Y0d<PUm?"&W3-G87W$=5pg[YKJ!jZ%gZd+UeWa&*smUUXDSNh@mr3`,_\o1%aF\b6HbO=N]Zr@f<%55(o/+]8$*/q&!L;VfSa!!
%oKKp*Pm&Rq>QnLD.b[^8;[ZbC:]#:G$Np3@Z!@HRA$n'5-77[tLe)mTWHX:b,&+=8^-Yi/.!!K+L)/MI$1"k,-]B!-mDG]G-\-@D
%c3e^rWf*.60G]_/j>9Cu?ZGEO_Jfa\<^c]A6o'J%:>KV5[Sh6+gVSsSm7?jl?RU;.N)p09'$*E(bG$<%_+P(VP\(#RB0Edq(QD>f
%An\u@rC$%?Ao9b8FKYfm(H2m_,(2#Ha<02]K7Xo$2sLKA2sUO58l;DkT;4Kd:I/!l+>"<[fagPPe9GtI8$cNZ!J!>K((k>h'^jt2
%QIt$W!/iBH%7LFY(gmS+j0bWg*[i*r4[lZNl(tVc#["L7:`5ju@dVF+dZ.s7RrrIc,a:`<Il,:K&0qG+>%9Kk[(r3`IS[a.UQUme
%/?<=&FgeDQ6i]^R4i--dICi=I",:(:g9Ffq+N2i8r.Gl<pbsZF5cZ,;9*Z6_J2\G397\N\:7Z_UNcni/)FjT$=;O4SS12>]dfYR:
%V!a+DP0IF>9;CqR!2>uP3Jh>$.?+Ue+#hf"YZ]f<#p\si>--Bc;%FqoKTbiW-E=E#_K,>!-=0DKnAMW2!%m]Sd6JKHJ-(H;NXA=g
%7^WD5$=MKhA0c.Z/g+YtY\.g^W2.89d>t]6Dofm0T>9/@HL8@F$qdBm9OQA/K"[FLalF^=*%IjI!rggRSe1N*9DA]3a66&@hk=0\
%q*DA&W6\>g`=IZ[!]t?TXq:P.mNCo(R6FC(2U1T_UjVWE$'"+Y-$7R.]nJ[B["-BU^g/3W[(tt:R<+!2KI^5S"^2::"erFJQ%3rs
%NEcsl8f:%3=JbkNj?s"j"RGtOqG7MJ\j6U7o\]k&mF"E@bW(:JLl!oeAI[6E@t`@rj4B/L>_2B(?;o)*`!^*F3d)n87mK&.H[rpV
%Y(N74S%Ab+K#,Q%8M^\`nt<s(-CI.-P!V![@'ian@j_p5i;laejCe:[X2&<YoV4DJ52d0:A<.M'&[I+<fW\ghcToM>V+b<(1j'II
%.dPk5bqAb=S%snC4;q,DIE[(;oKI5l2l@"__P@=X2lYN&p.L5f#!-f&DBOb&hE^MN42K2/n5SItN7&ZL'gm_D&-B+'8/rsk?kmeH
%1PV2*.$PcMd\*#,NQj"'K#B94D[\2G*9nZ70QDS-%Lu<P4=aQ^.<(V/EfdniUbW''fVO.NC3QZl/o6h.2L7!K4>eaWQU=Lb"@=='
%QBCfsF-n]#brl<iVlR1G[[/AG[9sIb2^\d-M:Wk5,.@#HL96%[QJ%!+X7Eo3mW&C^Zm7%fp+B5Vck>V!\7o&biRmLZ?:-_AD$urO
%W_^\aTkD$Y=uQLSojjo]$WgUiBph5(.Pe,CiEN\%%Ejr&Grh9P/Fn@=%\[71mD"[I!Y!&t;q/;iM7SPQAoAUhU:LYm&4W2nGo.JR
%Df)\5?jF.i7;)`G1CBdNg@532/_Ie*n;gA,?[%&fF@O7[H`.Pq$j7fZ0-c]@#VuP_S'64&P1_uO2!;h*I:si]3='PehLbi_J4(_8
%Uk*l0FGi&]/ees!'KM]'Pn9b"&6FW9'[*5;ej2!@'DZtL"/AtE.4-'u*cbn96Sl3KKfR-a=[6_*_t&i4dn&s<.uV"AJkKjCbQfgt
%+hnH1"j;'3>n]U6oqNp/6;*'bM"b_gP=]hk\.'_M2TK#H>-p-R!^G7O"?gL"o7lW%GSk'22i.+KM9d_8["pj=*BJaU(J9B]Pt'ca
%*&=GNCthb9le^%ACKEHY_`"K%`7D0s;`"6qSaQ4k`nn'*-5p*Pm]B_Nd>RT5C$O@53*/ihYA@WZR606H'LJM*=^kua7;^"M(T:<o
%#?l)`*a3E?78X?s%0DBtU7-89B:#<M\LB-F)8.o_RC"bLG(HZoRNqsM7$dB4UfaB&7F'-ki;,-e-NJ9VlLXM@8oH%Z55&7T.*-!n
%ig-UTbBD@!FRt<WU2,"nfJ]5&>P_B1a8oAS[e#,@Aq=I\!/re:*M2A;S^Si=Cc"UF!.K/6S"'*\]j^?ocD0S-bXZ3'284Ic/4[&u
%SOnnbaUM7$aPf^h-#CT(:[142n7LEUZBQ!i'O/5Y0GqtK3"0'QfBk3;b\8)WAk7X,C]nX=J/2asTnRgnR$_Lq8jhW["lgZ`csXG4
%TQC[8F*Ae;(Wb(niR8BK8dY2g`gmdo$K,^POlS,Qn1JrtiQCWG^ZmG5eql;Ce!T'O0#lTWXHBWbKQ?!_+s?WZ\oEFA8dZ0qarXk]
%2Si4)Z=4bs@3D$X"UseF_I=q31j79kPA+8u!Fci`g)]*`5rCRNC8E<F#ol.rg59*Pd1ei%^.Jhc(s:nU]^q\d^.[@<G^[B`5)*r(
%0V08kUIb7[U)O(]'BdJ0-EWlCc4sV\;1dD9@i>sW0s4Y0;<_&SfJ0*U^19#6QD=RX\e"/U_=3l<("B2B<D]/Xr!(&q4jr<E1$]0N
%0fSSZ_7F$n`hC#O%Y8MB;(P4kaDf=]hI%:A=DcQ6*k,X6PD/Y\87O=-ZAI0MQ>TTp=1ei\JMEc['cX2/#RU,=5eEe=6_!%-+bgW^
%eOch=@E^JM7\9tj6mQG^AMIMOCpJs[+0=bH!7BHL&+'g;o'p#)ElI0KRoj;uZ_Y.>?hHTid\?WDkjH>3BOl\&+c;)3;ZY/kk(8;4
%@"Dj+_>lB$^blR@V>,PnHai,sN[n?/>nQoDrSe*._LsDBPr3k#.,2f*:mXt@BB5GI:dADe`!@.t"=7i4rKh<eSQSs@+USq!mY34X
%)3^Q?=d?Ie483;<UTU&XMs=u[Qom0YTI`.;mWbsg+<_2l-1+?E^:RPR"u02CB,qg)&S^_'<QN`)o-[.r47!#M_=N1`'&XP5Nj,i$
%=:>0ieIfuV"MPZXQt0-\4jg.KQ]=]o9MIim_gW^l/e%-UK+$-<DtUid+1Zp<&mBN[BpWlRP2L1,+1`%t'3J\MF5VL`!C.&D$Vhg(
%/qr3eKeZk;%hm`'PtmTU8rslT;NhUBPmhAs3lF#\T5$]%3Zk/k")J2V_0K(r_OK7?.ZIoP@#H:l*@m*g#!+F5Q4d^aTS$4+?sBK?
%Tt_"&g#[Kp$Sl%k,C_QN(7LQMo!NUlmIg0R&Gg-B6=@2jcpr@nY@Hpm$Xf'@mek4S:T$.!h,,20YS(Kri>BM4Tq`*m$MH>,)mELr
%'^t.r'!F(W&\<&Aa0`gNkK+6d_\O:5,Aq:O)84YuR=SlS"!D(:4'4jV/JnWF_0O>u![!Y5V+T5SC5&4kIk\0/6C[7F0An@=i@`QO
%T-e[Ag%pf47tbmOZqF!qrMHET+DXd4=AJAc6U8s=,ci^IEI5T/Y38(?94W2lc:a!]OKl91a_XU^-083GZqh)[_kR\q!YG4JTEZHW
%J[iFZ%88h%l=(9EkTj:8Ui:3o1!jt4S`]H``M^k$b_gb/6Uc]Z"qrj$`'"\S8;OAof)4=+eGV^-Q=9,;a1D<tA?6#P5AY!1'J=F3
%_OKiBVfm,$C.:/0KJ3'PL>48n1@Mi8fa:>dc'h1j9X9?`"QsJ%7r2,=N[]8CpV=O;ZK`:&b*Su$,U#(k0>5<sW&F`L$5ZG'CFkI\
%/5/k?6W4c%Ttj@V<ps)Y('Ub1DJXF?:&pV&4NX00&*4Q<XBmueYL))jU_PLKdTm&m`J]MHUFfW]ONL7ii[NeuaNI.!B_"'Z`1iSp
%[;CUR#tC+*kY<9@KeP7bSln5B):j]_/V&2CnVrK$H7.DpC#H^*Q?jP'5*TNqJ9qTN]3*.Y^'!q"kpV:^`ih_.e?.^AMFg,!ghbFE
%,TH@'JcjmGjVnb07i!@6#+4<L4un:qkTGQI?R11l7ZXAq;OhIF2pL'XD[I6f$<H5Yn59OgCdC8Ga'kkZ`g.]J3WLZ:BPZ$p\mJEW
%>)*6m9>lX.0u'!fP=DkSAD!$59BUKJqG0Y\)r\>9[QC?U]Vbq8j([1?iW:Bk>5gPc5+-c["Z@[r'%G%:\];GpN9TkU(F@KN:a?G?
%KH=?fg=^EX5UBY];V>:U=]Hlj_0(>t^B&dc>&<[DB%7[4GX^m_g.s#T(iYM/9#NaO7e<?*PBbM`l!S'8"._EgL"R,;M*N3oJ2@ID
%/0YrkEjA0^MQ@&%,ZJbp@?S;>h#_6r]@CQq/hWA^@?lQ"U_4/TjfV&Z@gR+[+?."6.CN3PmgDNHC^#<Vj:WNR'::pO6>["oNgXbZ
%Bus0FjAN@:;9e^b8$.8m07b/Eh4$mNMaCJOFi^@m3['+%AdSch&dbtodrMnX-/9u>-=!7d827mH"=Zab+FD%k+ZRW++c+/Y,K)k7
%#F5or0,p>MKhTGES&@$oK9[-+B#]+,=#(@?BdL0"_Jg2_arZZF-B*N!RRssgQJb.d/t!Dl"PT>HH\1Nak9S?*5,8L2,b-<hfE73F
%3t2e>c/O;20'&W5Y+t.-#SUj'\-Bk7?@U,pFnJQf.1"ZAeX\)]RM"*s-EX7EktB0=-Q$d/Lq6>,FP'L/[nITkl`0Zr'`&)o<S*(;
%3XI<>@#cS)FDu$M!f*Nt[1U\!'&=`h&M?'_1r@=]5ZmB8<"naaf(;^n#meJcKCqeXNV>ct)A1"WA&Nd.@b1ChJ>$KZW6rJ(GZmWb
%k^oO#kk-A>(N;B1R*LN/+%TBC`+"H$2]7p&9%CsQm.Nid7W8E"LsnUhLNVUt$",&Q;Gg4L598SX;$\([__Q>2U99Ug&=PTl\8EeV
%/TT#8k/I*:fm$HB\64uRdWL&TD=3I/`c8jY87Li2M&NlPp,5KiTH-R($R7VMr9Z`NS#gJ=rhm>5@Yluh!g/<^8/.KR'Cnda2UG<j
%Wkf]59T,qi<sCj@NqZjhUe5^iV_/=%D#Xu;&EbU:Z.@D$+4P_XE=*!1(hVR]ng\\hj$WkP!*Xmq;8@T)BVl:+Tb*_r\BKT-V9]]/
%SgO+CGqB/.2C54YH]\+-"OKHI8.KA#BfRMW'Oj^)I$(9COE;N])@dBa$$;r*:c4&u7t-?F%Ko"@DBQ\R0U>>*'h6o7dHlPN"W.'U
%7R#sgm\^dpY.tEaX,.uW!@\#Tcm\$2H>b[b8N>b[ag[GF1\j<L#X2?u;TVVa>-XKd8]mr@4mdD2DrY=V>Pbj$-99HRL`0ALc^YUo
%N=!Pcm$)A5<*4:qotV!OBpJ.Anf[O_*:F)c]E\tq>_e]R6+BrdfZ,JT<]6qR!0>>AopXm^S'm+qApt9W$RmJ+l>5PhoZS^T6Jp%F
%+BTUMXb-lsij'X"/nUPp_b:nP,DkE?H"GR'#Kd%214KX(cQgN_"eg,(-d37,3j_Kt%c7H0]8Lu9j4*]fXXj]RBM.6SB42=6c+7@V
%^fYTX`+[*%`g)lAa(/a6LiIek%u<]s$Xga^LQ=_&\7P\;/3VR@46BdXPT-!;NPr+9.VSu-ZZuA#:UNDl?nS6'oX[_AB*a8I4qr!Y
%27D"K)G6cPK%-1/H%I="I`RI1<jd$9Qri)fE`^'tNXc&mQ&T><6*Ueb>b7c%7e2-'VbV!P;#rs@3CjPt6`lFqrAami!-^u8IVHM2
%&2^Ud$+c)!lP`s2S`IMX#@sE[KEU9l(=lrU1E?WZ700?Z\<o#V-P^CS^^:c+??61f6,J>r1eN"R+JD!;Q(piTpOGDF]d.jl^'](;
%"<qY0fu.2>L90J2ocC`\Z6p5?RZ>ijK!gt^g)t@k8;&7E<H;9u5"#R)VjV+-*g]9,al(B`4@>+jbohA+?F`3BCQ^ZMl&S1J>j!C#
%k&J.(?`g,BOLh):(RC^$RRrh'!/Dh7aGuKj*%".`]^et"\#GX#0QZ",KS%TGj9m;pKMn?Gs!$5\O>>])Y!ms@9(7q.^(go5hAb4\
%:teA@\,^:P5q]RD/jYLcB/)8\,JG>V6<o6-V6;X/>:3#UO(WJ66=?bj2WFEU&/#)Qora0I7(As3kmH?1#-r8K_bt<B<r&L6iB_Zk
%Y!05W6*#OZ4">H)er(."l)./f<E'qJid9YQiZA1e3lVss6aiN:@.@r.,pZ<;fHE?Z#Ei=l=d<A.,n+Uo8tmqP,3n3b#g\X+]p0R9
%(f15e6U-p_B7iI$G!pVmeOoH7W;L0cb4\*'KD,IJC?W8pdAC14E(PnTFoZH8-ek[8:M(%H5kU>2R&RG`)5'cf!D+9qoRZ"HO;+EY
%-n4heS^`NVmb)u<.EFBt#EKfeqhUMLjQ;MN,J)B&'FE11"4:sH8Y7,<L27Dfr#,<@MnDtZLcgT5Yt4]Rila]C2cC-(#iRd12DN_a
%V,Mr=(j`U=TP>Ggc1FYcGdfeiRASJ)U(';Pf3;RD;OdNXT:''u'+Q`21+Gi)U]])gktU<'/Z+C;!]fC'Zm!d(#\J)``.1uJ8Eklf
%on=4]C?6"4*1hGmqr8EsRtE%8s.d6EncBB8i%a`'[.-,m1p'U5'dZ5$@Cg1pk&\NrMbc56>rt$c)FY^&KWZ]@InWR*%SlKRN-$7d
%$U1Qncn:Be6%+K\:C3$R)-LoMM;&qINj/r4P[u>&QDasfo"a8r>d(S>N5D#6M(;h:NaX:_WD=\cl"[e!Hid!qlg<WG$`]K)/Ju]b
%>N#X\9oTiY3-L^tJ\10ql55.P7?Shci;b5ERCS`<MP/SIjl79A>/5!,J.>k=F:Jo<f#,9^\f21aXc=b'bip'Uemt@38-k.5kTJ)A
%'])C&!@9UAJN6,NA/U#L'8?t/EMh-:)WhA)UH%K`UY%*5BFr4P\-cAuO-qm8eRK.i,T-TlE[2/nMj=IL$+Odg:FNW.JP!Gs@#I@W
%*)Mk2STnLE`YoCq"^W&blX=0&afV5((o)i7)dF\kk$t\l!YT>kl1B\s,`laeaCt`X2P+F<(SD5q2%E<Glm+m;f2T#j$t:mSUC7lF
%!$luWaI`VG*(sS7a#?n&0+oN7\g/C+r2E3uRjbLK+Y%k$E`GZ-(uQrWJ-&Q<>sEL_J7P+Q(%2tbP%ofd97roigD\F0rABHUFsDj]
%7,n`Y_Gs-Y1H$),FdN=!#ACMrej(IWV<i]E<?AMFYS+/A\LiaPD#Mi21GO7_BEgUhlijY,=mR";`j*6*V:6SJbrpfM5]O4lOJC;A
%&C@j<=`GSs@$LCXl@#>3E2%=o(%WIO75;43rWtfMAarC5qe*raFr6,ch[<meM@YM&)Gc:g*/>];a`rBP[j(OiX";'Y+R&rGX\h^X
%[8T@^NHlfR^Bc)c$<g$t\`sg;bo-)tkY=ra&efmR$S1bAN2H4a49^PDbBO4_^ZLhL*]`DTp1)odLetKNC'f]uJn%\PIUkOf4>Oe8
%!aX51B>`ShEC]?rhuGI4I)e<PO:qY-ZKr-8#0t<*Q)e4QAqgNX+Kg1<$srDer=A2lU,tNL3^#5?P=^RATQr^)YoK)8(53q^MW5J;
%cHO-/Q4t!W;(pY=cV&NSSuA4MF0aV@OU7ml+I<pc#bs*@nC.Ie&XORuY99hkJI5irSu!cI"l>8:$Y$H)XW;#/r!ZHC5RM+6Y"6OA
%^j:NW],pG%8r>q)_hE:`#tu]1AX#<6iG)bLpZ<\t:WP"X\/-Bn?r72$B=pJ_7&N.#N/HpSKBOE:40f-k<)Gn)r8)t)p>.=sG"Ele
%"aWuZEVa*?/'FA:')1B\CL^fH@(\Hu;Xme>Lnp-oK9k7Q&t6'!FE-H)\7GtLhT5&hC`8L+S7WH^$UfnOgeo#4f)?;2<\'8&WC<n^
%`XDhY.#*?^J;V3@:W&Pf9Xp9H6C;>:8EgE6ib>j&&]L+M.]!`II"@A)/4qF?apd`+6AQZX.8#<h"us"060)k@g_>TFN)$[A6IJe[
%)j2JgK/C?aOkhI"0,^N.@4e<-1a2]oi0>W4j<=4IYZ1/*;p&GbF;-XB!X?[0(s?YD1/J.R.K^f._QaWn!%SuH.Dd8!qM2q:6K'G!
%I(%`9kQK\J"M%3`CeiPi&o3$(MBLNmp(HLLSB=V:ZP\KW)]C"T1.g146nJ2CK=mafV>Ls+E6/IrWW;rA'/g!T@#Tb!D'eeF/;]YT
%$">'KJ>^j!UDuun3\+N-1iE_lQ`Ja\.%^VN'\8)C#U>1H">i!4*0jp<@(EZr60>g0P:Im],9lQZ-_FJ'/2CAnN85*)Ok%X@URCdD
%i6)7'/ZB[jg8JLJUgZU3P0K8Rb).66D?8N:O@R*@RYmrgC::Mr<"\7'Fh35B@jN'O8lW)R\AXkK0U)XV!2)F7l!Y_C\Y$20LHuu,
%K`)1b##C?S1C4,n^l([5_"FLapPn6bPF4T()$"2H=Gpi-l+ee#)T(KroNYG,=*d+C>h$=Gi?0>Q[RJFf,V8kK;i'o`K_&t01dr+J
%`j0>3$2fLm%m\)ZJSSmV^*VLV&Ca%NdP-/&+Y3UJ"`8(`646"HL9:LVRL094KI_U$(?e9qIVFXs#NI`T8<^1c#ZAXm7i2tD=X;M8
%%tOgW/"Fs&nBrfS/0`56O;Ea'DX$+LN#<KU`5ohPaOUS)DH"q/-mf7s:P,(^G5sdmGe'bgT`e[\8-[R?W,b5o*4R,Ck2%Sk0LCY)
%)V40D!m(O!F8S&G"H\NC,:KKANF4?bI<\qEaX\/.f4$69ndNOrF<W:^WL*EYUq-/gG>Sac-oSpYK_PRB&/&:m9a;IandJPEmFDWS
%,,D;O!2ag=+SbN/<NP)R.uC7]S=GT>3#E1sNnWL@8&pb?Ur*Do4H`$]Y!kSd>S:.Jl_SEp%ND`/**pYd`?Y_JO]l#<bsk1:=p?Mp
%A#dGd6f4$m60Z%YiWcX>`&n'd*f=Bf!EX+P__H8GPR1D^<7!4%L'2,p".QA71"i_](e.?>H&!X^GZu.k4Qrm)lI4bu<5+eH6\'Pj
%/GQWO\qbou($)&'Qq^Sp:/U-T&r*J92?gEY8ptTio(3)Sh,C0"$9T4-%(I9BL(:$_!%c]s6_^h'.q%]6H13kHe=KKNE#0-$R(cFr
%0nOs(TfGOPCsD2h4FQ:u\e,i1J@=4J0N""-HHUO5gBrObTK`lhkgh.?'<D6f?Xfc"d"l^k>&&mnlrY)MN>L)5ftG0^+YXVYiqOC1
%>9\QRP-/P;UICFVlk2./5BRki7)sa/%h],7#tE^B(9'BK/kBN&LBT(+f^O.&3*0UK"mhgi`[5)Ok6lB@TWfZ42_O3/Vs"=J.jEZ'
%-!Q5R?5e>bXlf]"Bs#sbQh5c`)=4#EC'E(NfikUil#S!JD-+"_Z+l^aKmcMc&T6ufou='hl$q'5F!A'/T7m_,J-DIq7b/t%3U>^R
%fd6D?#sC,6c:aDFeAu)SQ9*D!QA<BkX.kV\@Z=J&XA+5@77jO&k7IpH8VdXkJ8OS$C?/WR@GL't-"[SL6=:]1UC=CQ*/1&p1UpnM
%JV19='eQj*U(VbdnVMR?;S^KXZeGg^K&E,Q_=]7?X-iWF,,03X/kcSqem]Io:^h)(4UBE7f!J%m!"i3=Ot+?!`%>D^aOHiV`2o*s
%Vhr:riUiE'2j-Km7k8rC%UR;))Cts1j9?&A?oZ6&BUS&;$1M\jh8sQ/g4KB2ZjLg$ZS=MO9-,q/KP*Yp@Ri+]8-mPEaiBX-[M2k\
%(!;8?K3&/^JO>%;0#UMdf,A9m/@a[C4KF#)H\"Q&I9>IJ>4Id!`=@YE'2at?eFj25KQOP@(SPK+R&3')D%gk8Xnr0;F2tq7>oqk<
%oE`<p!Ia^:/7TP%!h/'t"XaB!>C]H-$+eYXS<cZdWlkebej3@AiIP\"`um1+BFg3VK4Co=Gkt@XL'FS1eIp%8`6H)B%+M.>nt:6R
%('h4C7k<hp!r;3H(C_lsa2mINn*'_2koLT%@2<#Laa'f$?/qZLs3-Zn=<,El]^ip$BGhEFh$XYV"H.p'%s;c/MkMhdCVpsK(0Cl4
%NCRD\+_5JeZTo-D&ZlZ=k4Xf('@H2W(#'[nPZ&8A>DkiWOdJ[,%MO_9'L=LjX/&Y6=u1QM8=UZl,.,WLEHu<Y.pOkQN`E_p\.!u9
%5;JZRJ5#$LWKK6^Bbk\9OG_8DQ,[dF6eoU/j\cY7?99G1Wh5Wj5\!FlS0V5T?TK)m&Ibi9/3t#UTIgP!@T%LXd>=$]n)VGuW^+ud
%;X<jJ+qN*^Kr>G:\8"2e[#gs2+=2bs#qgrl9TAm]IP,dL'Bb>6DSd[_>(mY8U'i6R/K&.dA5IJ#Q5U?8)"'dbU`X,UZBrfd2-;aC
%0hO<11pWm],"Nu0:Vq-R80eI0Q3O#qWc\;@''Y)A0!5q2Ds%g+%p*PP,9XGBhrCDg,WoR@j[PqD*]+n=/QE,\\SR7;P0m-^0HPe,
%4&*pD@O=sf\fc\BC,Wn37)fZo$[j4tBD2g<&mG.pEp-'V95=\nOcRo:BpI'Y)!BhI'B#WX*u(5Gp`g6$SeY^3FAc)T#d@m':Er<#
%(!r<q50>)nAThEsKN<aS+%0FHK`N.],itl3[TMAe1PUVpY+Qo"5g5PKP,c=%En(]iGf7X^$U^uo2(WYdo-bu@N&dsG=C]SG1BRD"
%$3D(R=I%"-#H-MBbD;p<N27;8q0#e9e6%^LMK3%!H\i\\Jr."$q?(?Dn`*aJ(H's'C$FLM?6VUfq[GTuIukpH=KcNLend!Z".WhX
%RH)63_c3D9Uprs)8@9b]0a\hdG#`$B*'1\0O_Vk":.X<%A\NT5l\ITGpf#s'".Tp]3X71V<.q;BE\\l;;POVMD\o39LBfLY;C2dL
%6,VCe00Wl:Ld?A;5E-ro^^8/V^^]S'T_X<J0,ZOUn8#+p8YD*/cpk>+RBqeq;S9nE1%9M+cgAn>)641I4GnaY/Ws.,]/r9f5pA>F
%;6s6pVc["tdd\3!P8);3;ES)l+A3A04Rh7!@$Ye(_Qd]U<[]mi@;^Z1el6FS/6f6lg+cr'apSo`QpntlWKIt?fU)K5,KIA3<D&Ks
%6A8QIX.V;Sd']*$#t$+,,N(/:dLQKbjRbtd%E#qXfY1l!K&/_be]A:/M+LIBI\[=BR;GjjdrVXtEhnn_`I]OmkTAGb-qQ\:SV]:c
%J7?T]W0e$!o2`Z.]8e#uVQAl-2f:qG!+@K5dE$BpMl7<UH=AQi-b*t\%3T>)`Lo\$RIEZGZmI-!DBM)$,rL((i_&0n-t;8*0o)Ca
%3Gnpm$T#_o[R1$W9Y;M5)l`]YA0YN'TpXg:VhB1JaCY+[(10&C9VYm&$;q'I"/7;"Fnf#4**UIOP99AU?lNTk,*:;u+=d,;oT[0\
%Q(6DK_>Y(P(R-uf(q)_XHogU(So+G92T^RSoDt%<0u-><gWJd6;rV587R`f3onn8IC63FG;5FprWI\3+Um%r`&WRI:-s%+K1?-BM
%TgCdr*8l(=6W0LeM1!ua"IX#_F(!Ef-R]C0#]$/:*7/q@eqKgE`DX$uA=G\FM*L)KKc(P<#NDP<9RR+GN>:b8A/1kFD+[bb-:o&/
%KU'`n4OS3MoDh5h7MH*+r"RpoSWJSg.?E+-n67S!"^dP_C86o!>ZuuU7gU64hBHi2q5IA36Ko=P27sLZ&VgOE<1mCG#c=FC8lD#J
%LD9e"EQTD$Aff0^fn@N'!_:$jb5'RrOi#]mSL,s<r=P#sNXG!F'rTac`m/6T,f=oK=+POf2Fg/kocADd"j,C`$qf.kOI!uW0^D!'
%5?LBH0(hhHKl`8T2_[Q;,Iun=AO=0`andT5$WOO!h_jD36-t[lS")\o(:5>T:<8oXU*<ZBn!sTW-rr9:R9_=#*kKQWffK-]Xr#Y=
%O\SG>hDA"FP)^[pJmg_1A#9SS`)$P6ISIX3-$$F'6ISCHJ$ge2AX%iI(A2DNGp'^%&pe@c)G!bC.&*.s9?ohDO9/gKZo@K1=<4?Q
%*[L_4Cm[IWkfVhGK1X_E/[ALkTj`Wa5*#!>=N*VL#bX+T,,8\@&uJ@-591%a*TPrg,lutgMaD#:pfI[E)>\'3E>b>`_6&De/<ihU
%ip\1VTDgX_$:]ku,N.>c>qmqHWK3$]qUN:>H1QnZWe:]30B&"cQ<Po%XAPrFSsF(5nLL._/b]s^H]=g)L]`;7%`;V%:nE1h8[X+r
%Na[#Bb(u9_8-XT'Fj2.MRfh`B9Ci8j\WpA[1r)O7\Wnnj9'.Z2)H^QT-)d!#+:W^S?)LOHSg?jRZf2Tcm$pJ9?'uHp+4Nsa^4D$&
%PH_3;KhDLS^Xflp5K+n1Wh@'.&kBBanf=bO^&K83f>9Yj#S*S:a;TbBm@m]B%OrIO$ER>qRQGLdR%Yadbe3n"`p,q9h%`=+7$6E^
%5fk9i^\B7j<6T#`Yq*AN*Nc_Yp**8j`ImHK[W.d/8A0WL4\;o''QP'^kin4:,"i\8#9Fa2CiYK0>)?+=n)EO$+IQl8&I"X;q,ID2
%,2"eI2dV.V9adr28$'1<n5E;C'/;LhJjO!M%%qgdKXtOOD"L:ANhn^)3,Z(i-FpVhlt<%aCW17jnMWFr^gZ2iFC5fE)i1[O[\7Xd
%$A+4Lb@eJXX85cO0nco3!/ucO#90+5K;]7j@]7.G-\EKjPGJtjO^TW<'bVW\9n]K[qKiRk>S%T`N$S-/HC*2OUT*TEQRa+qIcNpE
%dOBRWM7gGmWCFPX`_,MfT*F=J*<DRQM<0].5$<^[@d=0==SQ*_!S,M`BuN(60g-H!s%VV)EP15<6>0#UXjf7$<cD9g,'qMH<$s@B
%8Sagb8hc>rI+`lrcO#i1,()\\1fEcc<a\P"!mq/r20i$b0MqU#g'bPN<2gEQ2is*/'durP"e`#n&^NK=h&4:BXNr;J\<mDtZ!dtH
%ZBptZ#/uFh-RN+*_c[Vl2ir2_7!m*^,P2II\>5Wabl>Kk`*-E#\g7#c7-t>&*C2(3?<26V7N1Sb_I"kYE/:5gpN4Tc@a/U3%4$lV
%)HPE^iX:(jaJ]:ok6dEm.iLZf@DT5r75/b9RB^BOAqmmZKH#Y0*K`^jAks>e@Acl=Fb:iZ?0oYd(;`NM%Vne=cqoTUcnW/\$cKBC
%HU(461B!0/,B-;G%F2:"GFCH8XH(9!!cce;JSocW3JL/s8a%"Zb_IEA&nXtj<U\Z:R'*^2cq'KC^-A6L&ip%%"8Z`5n4PS5nnAs`
%dERKYJZXS<@@;sm5NE))Z@u25$?qOl,l6GNeg!.$N#2j='hUBMMDA:N-,U9;ja7J,N>uCl(QpZ4'iP9pAfdV?Mc2;O)CK+C,k<5=
%/8<pl\i2.d1;_Zq=UgYdPj%QE!(WsNH_ar&p!&ZCH9YsR=!L"6ZFD'3JV9p$>D'=NIP%L;)uTcF"8<fSVpPg5*B%tPq6`[e]rD<^
%Y+YZf:kkcW-o')Y&I_TM.;5[TZs47Njp*UAKikJajVsF#Q.;=^g*!jT'O!oU1)T\4&B'4&A'SdtJ((q`=%UlC!#cGgog5c8[=HtU
%;Tup3n2Pq],LX9o,h/uEAZaI<n1I-?#.\6=e3Na/!XUufVi>u%F<r[ZM.B%[_rOe$P'Gq9K8sF[S<?gTA4^b<R@DaL3MV3J'oN4H
%I00&XQ.D6l=JsNBi_@2t/QOA*'ILiC<th>EP(r<bj@cJ\#0NZ$1?N9[WF3JbiqH'Hh*C3@?-0tsDgZXPW\CsKkepuQVA&Yd'&o%X
%+N[r0[D!../23Qp6;E-s/Ju3]QZWa1,FH?!R"fKAdb0KO%Gk'[ZOrmpm"l(cdgC8Y&rc$MK<hJ.1QjH`fXSrd27O?+d4a^K>)4(n
%+L8PU0uhf19,h;3mLc)tUlnWtVML+:7;%-J"E[$T&l3*i<IS\ll&?[3"aXb<SBC\'bCQV==HTZ#Ys'=h?lkKi'a.Hi(n@8;?qECb
%ktKR6P.!]m,5l4R(O!^WE@FHMAH$&;>HAD6Z3IR8H7Ls'"giema$uAu=ORC*f8PutWItiPV)4?Vc\$c[T2a7<ObhW8V,(Cf;OPFI
%%fM$efml!m^$r5H?9ee'1-<A5k^8IP+Pm8I!kLa::8?p_X^pB(rBc"uPkC!^?r<:D80#IiU0?R[a.+Ce#GpA=Yjm'+dhWf(!*ff[
%,:rpJ1kl[ANH-VKnmfY9/=C*P'MaW_;Cs+i'*KWhnf1f,;6VKkRW,\nV1aB/7V&l7KGoB"J?=W$]kJ5L'DP+7*KaN,YoIb#[n2a5
%"H&I0P"MD`:dRDa4JV.DY%EP'pn%O!5uYe-d$`7=ZD<@>5jf<2%KI<4D+=n(TUi=$nWtFS_?d>TB*?>@knU.&A!nbY1dDMuoL"Ck
%cV?7)"XsEYatgMpnBR%,g!T;/<*Pm:#LnkO5j/1\D-Fp.?qPJQRKDh6=Ga:`GJb2PbTW72cWA8!OnC/VK]eB2k,n9`"H]Op@he6p
%A^9qiUL\mC!XRV$&kj9UR'@>C0i[3FP4qNf`gtJY7pGN<RCf:*>Tm[q"VXKM&l(9%U12XX+i?Do2c1rJ7DuLn[?H^9ZkI:,"<*l*
%FjaBZ9!/`d/Du?RidgJl]Wo=_F](n-UafUhHftn1QW2,?L]W9(\@d'e738jG?]SIo\%+l_\MT@X,BEHVR'hi-WmYgiOuJ9f7/0bA
%6V/-<\/eX:Y_.?n7(APsB..dU,,r8:UJ$Ok(sFg%N>,cj(,JX=h_R*&'I#`L9'oB<MkKs#i(i/'LT]^(3DC"&KjPi:RMriqeb^H=
%qlS+I9jDGk<e5&.[Z\*&6U8=[5X>E'W0YA5NId?_W)r=<oedoQg9>P)'q0u;@Ui"?.72)]p6+)F"rL_PKK2%`TR[efX8sI)+`lsO
%"[%uj!Me$?,tQc9V4uo40/mR_A31NaB,kfU8CdjC,m4Ml1J-l*).0R3Ac37bE/g$AZ&f:>('@e9kP>\*WPSVX><)E.(brFU%3dgF
%7`$oDE]7om9G!!>K_Z-17p_jRaG*DWMafCbHMh>XoKiQp"BSc3"7hs/(a+R^.8NiTl35m57NI%'9,:!dPSM:JoiM99*Xdg!s%5im
%AILVE$0KZ;_LY>`Hl8Pg4#KUAPQ[Q"C)skn8i?%@D]$Jh-%cW(CHa0M,+UPs&o('GlXie`(-V2hSb;!NJ[=2?R?9JcTuV08$hmCN
%S!bl;5V\/\P%H<uDol=K-S4dG8`C9c4E?aQ3M#YWZ$`#RfY!HAZiIR4!GFfi0,0.QB'0@-jtSPV>C[;hKO<p\5\$cl_?q:-orY#;
%_BjhX+ed89WrpI6[KPqn.*7j'BVc?0nT($<'MjFYWGg07ECd4\6IWlaonltn6DhWGA5Re)U[G?iPG$/krXL-B2TSZ7+B#0n!M<-M
%@]^,.Q7XgSOJNf%6;Qg[J@FUneCX'W5$$o-GeT?-.?o3a%_"%eeS0/<VkaEj;6FhS$Y<+MR*,q#(9f(*HH,c4^i1enHBA%_%?r`U
%;B\dDMmZ,tjeJ[ulF83-MfD.F<^(+^audF;;@0%K^mu2JZb7(F&-:3m%3BD0NLh>WC^8H1ZG/ZQmpQV`.nsItE,IK:/^4jg[^!JM
%7_ta2#!E@TW"u-?-Rb.(aj1Y_FkAMSS[RjP=!2(N5B:g+Tm##`5CpMP=r<2K1XUnTnYf;Y6?4hH[-I$O9#T'\9rO`(iX3--N_q$f
%+$pAlq44o(cj5Ht+X:2A'U!!D6d1+SF\Te%J1!]71E.B&eCm3u$:f@1_XPPWk(S`BeLKJj/95Apq?Bm*B)]RbAI<8t2'QgT,_o.m
%>-,=_rcD`+@0)&>5'IX8jt8$;"sfpIX;%=!#%4N0/iZ@b]Ke>gUX"_KMYftfE$JLAbbX7<6k5-:>'*q"M[5AaG7=n)!EdC-ca%78
%Um"IiAUk$B2qB>&Vb32>Y"fc'JrIK"2.W'Iil)&;%nl:hHWqq\&1A[oSWUR?+@<%%A>UpE<AJ^i`u\85MJ$>i)j7_jl]Vs0!A?`:
%L(u/'3?RO,ef5be_M+XK@f!"l;?l9Cpm<0H99&r!.V<*j$K-cLBK@FKX+`M^BJ0ppL/R!h:"5N\8u4.cn!d(86KtJQSpj]JP9c-E
%h4Rd0;+4^'.lnMVWogJ5,ZRkb'+Wh([0)DE_Q?gp`p%jD,gru%d"27a!3,!hpL:W4g5+EH"2?_p(*R8*(1XU/INailN_Zp1Ht*?`
%"lcj`S`3-o@N75rO=X$rX.X-\_gto1>S&8lDBnD.HO2#u,\<GW81De_@I^VdK9fd(P1q,DW)B#c_i7t1bV0TbT,-=p0^+X?J<"4l
%g")`pC5kc?A&A+WW0':#OH#?SOHH'iD(KGWj-'Hd-FmpCB@LGF8:e$YfkKe]@cW\H2U+_ZJJ_d!.lALDi3MFV-3@7l@MQ_g_b2sT
%9*lor'!e7-/2M8t82dB];0pnr&2ZRbJ:Y1'esD[`-Q(`M0;l\MdL`@eV>Fpk.bmQkSHK(%3l)M5P228\O<o>M#SnN$3Zq%q63e6R
%R0ZYU$d]>QLPE&Ph.RPCWQt_,&VO\E3:?"$B$)8/eSBn&amc7HU1!#sKdj");4RiO#^Ig.bdoZo1.BME?#Q6J+NRHuJ0W#L!]FY\
%>F77LekO#QV@Us,dEW).&+cuDgA%6J'`hEg4L\?SDMWs-8YHlN=D!"?ZDr0jd9g?Ol`AVA)aY5`/XnNs]GRpT`Ak*'Qm^%(:,l4B
%<^n4>RT=4X_P9r.k\/?tWMqBq+6"r:9%?NkQVbb''&%pR8,+ZeKm1h,8968KE,bET1'!Ud\[lUNTLA"c)'OXom9@ZPl?s`?'!,U4
%?FCMt2\=W9?f!LANAsog,[Z006=[5\)2[s:pF1o-#f\W6)?FLaj#TVcW0(G\o6%i2oF`?ca`$+%N#dphao<\>cnO76Zm<;KM3l_I
%/6iB)15[@V;7)tb59_o8W1&sr^iF918\Um]TJ*)kajNjumZ`sA;)EQi&'RIM0bBMsNPacHF*4B>P)b9J'-BC8UQ!B@#rt>fL]NS>
%HHo`2=4Gu6:ka<4$0GcS`Xo"FL-9Pagu]Eh`NMj-F8('Zc>$nnI-I$>Mk]U>9.@.`QL&NrXAC.08kot'UQRj4Q8;!$NF;k(Y3"3#
%3s>qpba_C8`<]pT;a$]f6];;qZtifoQO9i;NI36*9=uY4K,NgT=+!U&B2DA[/qos^JNke)e`4C#s005^h/rDBmK`u=0*k?t/&jr,
%OSWHTP/gtAP&(N0*W19#oGi-E:UG+q+qO4'VRe#D[("3/<=/4);J=-l2rr"Hc5a*!$U5[fC4^;LH9<%D<bYT\G!);+W<k`P>p>/_
%>9V%FoEO&VMC8W@Xsu<#,p%sb1#oMoPe<Q@)6`9RnX:1F4Rj`/SdH"CNfc7UV8BPqh963>?N$*TKZE+ECRBncJP\/UWCB!pkdj^p
%-k.67[)f'cZf'6&DS)JC%n;fPCsR[Q)<j\(3TRunji`4DV,6+3HORSI@g9TEj[GF7O"e>YU(mSgh?j;]4ef]D>2kO>Yhql]jMmeh
%%TVn,:)e628MPIge9>H`#-1p9^8'/nRhb'I3m<iYM%MnFKtt2L]Q]$(oII"eGpF8DWP!EZFtoQM,MkM73"WVY$h'X;3G`C*$h'WP
%rNQ%P$L_8@!rcD<n":[mGWfNL930JB.d:6E;U8H*mniI=nt@5e?,Bbh4L#OU&Y06;)s+]L/ID)jA%Fa,.8]#+g$We_C;ItlaR2SM
%V@E9]@]X%V%BFI(JOU6#i(A-ID,%UX&^t$@6:->C$dkM"Q/R*]FCu/>K^6;_h&/VbD&P+ajU8V.Fc;^UcsT7U6t*[eF<Fk^1>NBb
%6`)pWgU:b+j2[:[].hkTP9cuO9QatJnd-e%r]tQH@!*6f]3[6:]+Znbi.^QYD5">;ZJ?DV"S6LoA@mIn.#88eSUi*OXRGEA+H[(g
%&`$_V/gOH(dbPdmgp_0TmLE^"(b0WO#+u2R`h)YEOR&LfF$mZ'"90acpQb1W-qgZ'W-ieS:I7+hR-kH7:S(O'L$fF);*p:Gq!JQ9
%[)g-DjLYN<P`YDah&QZh5\7RF&"/;<B"J.1'7j(4h44R+']Yf1\i[eB?f%oMm`pp$!)D67G@tlk5m$8;m`pn9dY+4[c4gPE8p:M3
%;Z=;"m1*^[`/u]hG=;*J45l:gcB*;_.]0H+&`&ElG(o=D2'Uu4(pi$Ab_f*D8p4jg1/,tfV7T+9Q14Jl\iX<6a[@Q5*?jY#&::uM
%6H>eVG"d*m83@E-ksBT,*3o4]$Jh7]I]5+dh48Oh`)>jf+S"G4(t.5CP!Gkje(lb@D#F^q*NG$f:U(]\W6`-Rb'$9'7.PS^f^=Pd
%6)k6&]-Fa.K-c6=:*eDld+sPG%X"V[le<n2GOj0adY2G`MCiN/L$l,45p<_$Sdkn$rJ4E-?m_EGK9+^R36(/nA\0`,G*'d:g$UOM
%/Q_S#m1+J:E6X[8%eVJQ+0KF(QM=Q9Kgom&a@$fqG%%ub(5E$W$JV,J)_1\=gDs[q9UBSAFpBQfVDf="3rtQ3<nZmH-7S;,>2KJh
%2t9][[QDBaSIeldmYl5Pb:@[YOI338HFc2U;Ae-"6b5@PE='HITt;P*)8WXKFE`7G&=i2UG:+"c=Qo2LT8r.'!!FHmKn\q)BPe@o
%.s-!^[=ZskU:Z%e(8d'XG6bfO.[`$I*DS7Cc;hG;6O_ANlfmgGTg;%LTt<+&G:8gjOl12AYV9i\G6b*X=r"b550$JriOcuf7<H[,
%h]:!&!=CE+GK/CsF]H.;j-?Z_9Is^Fa:q"fGK6+^Ti^3b1Bb(&bR35Je3CM$.c28,C0BsL^,pu&I573*^,q]FN`hKun'8]OGP]d[
%mgd0mf(Ej'^_%-%b)ks"2f`M0's9W'"HoVd&DF8RU]tGTF=6]\D,56Y"q[P>"J.^-FKr5(1j<2C0(pi?0F5>U3UU?)4EX#K4/C)o
%Unoj%U#qX$:PI^:`Zcq+8,RN9RBS<Vd+armHjfF5Np,jQB#8tm[tDV\DnOHORAOf#&\T4'Nd%KiDeBVJ&Fst;[t?rebX_;KQk78&
%$bIGG%MFC0E]_u3b)FfUgAu4).:/:p/sO_0+h([f`o#nrH055igi[;INOeFa'pFfb1>0Lf'NX=%dV=[:Lb'$_-o`D2#cX="CtnR,
%aY-d+4s[)E/)%.2a06uQ1Z5:5&n^4`&/bG3TPArF$4:&<&Sq?Xrup4M!]io7,cjhgCe(!Y_bd'_gKAQ[BGCu9+!`kPS7TWT8(a[>
%YFT7_.@?^ZNf_!%+_+tCfUEllX$UWX3\mCF.`?M7?%ZWRdZE+Ai6MN\;-l<i'S0f9CM,[S<ijMg/;?&GYFR*ng1+GNHnn9p.^L/e
%'LOG(Fe*n2$Zeh^FtB_Q_=u/sK$^ThG_2cKX#n5HU[n`TN3"$P`--ke'/rdFm0pmZm0^%f@1\;^:IP\cV9Qr6&[*2rUg7;Pm;RUf
%6LM^+B1R7)iX2k0/3FI0r`V["LdU1W$Ep"/Z9mnlm:]Y<`2g7g!7f=-iDsXZ9Zck/[!%00$Z4MEg6p<$''4r#%V#8u.]j^:\Ylm6
%[=^kt'h5QR0J*Q$;JGM@d/k8`[55`clI*3)JM6-$:h]5)UM.ZMd+Z<bdkH^.g-K2$^eAJ0Lg>qL*n/g\0Y4XqF;.)/lD7n/XEO)u
%0V2WSmAMO4LfIUF?rsSJBM<2S#Zoii4ft7U#(]Y<;e"ZOi\eI)VrjF;ak&#C*@(]A;crDqEFE(`_J7,XP*)ZHg<o1/IT0a`1W64L
%/#7@PWMHm8;EI1JA]SUWC'V!t%Mr#)U7YlI<DknN)SK;GUirUJM&0&Oh"Y%M=%VfC'lZlN+glqS/?[u!C56<#$fp)A;EI6lpi_A?
%%T743:MFGmM7@k$4$s!K'35t;$k]S9mhtN^r?aC=cY/)o2SpXsA@/,!R^k-+;*lK!_IuG2kM$_@4.+R?.SVr%9En4<,6&&hm3$!H
%\l.6"VdB?pBkK\$b\X$dV4D%F,)2];%bFLBk>b8=4p+d*0rLR.IU^E7An2>=E6:0'k]c9u(iD`ULWb6Zc4il4j.57:<_>G@LsB[7
%..(ueaf!C6e..u%"6FGpC'V"?,SjQFk_&)`$_An5:aNu\3MNp6=Mr<SCBo\MT,1ZmJhf.?1?,^Z<terRnCjRGXF_Pcg@9LM2>r)U
%0J##VQUZ8fck_3(7^R=UJBfsu7qq@h+pl1hB^JJA1$p-d*MctW\t7JJ>_bJA*=iAZ,tFbS=R(RB:f9BllSFrR6u%KENVPl*e;g+V
%;N2Gi42XbKBNIalJ?j+7Kign50YYE23$PadD5#'%XEOB<,hj&74*^9d+?X8D_cJAeS^Q3m`B]r5L"K.V"Dh0`[PLM60IsCK;%.Dd
%X2K1c2gc:oR+Mml8YeBu`-1YE#sh];[NjZ4@Icn+G-&Yj10>^._^k;LDHDY]kQiF9<["mr+%=O;3gRGKXY`",`-*iE/:m@!YoVU[
%,`A\@G-&q9j7nG_%[Ht)Hrjc=\>*LuSl[)DZRh]uLf[Ag#O`?)dtQB`7H`a4W5Nl?O_DS;3$Pe`=?P/gg!1.(:%LH/.7U8)[LFb2
%Fu4lcG<N:'@4^3QT%VC#S.Cq?LtPOn?pq(pAiimM:gK-Lm0JD=k4-<)8%0W>5_[mOnDgY5L/rC)\/?mO0+5*,,Xf\Pb]ZlB:\Wb.
%g!6lc!X#+>Fp)tR*S?b4N]7>7CIZ8G_9h^n$aUj$TCfW<Aiin<`3/Kqm9&`#FYdL86i!*n:"qJY&O@gY?)A`q,:#T>]b.Rk&Vu5b
%=IAK3o0r6$_JD^f,ADVJCe#BJEetQH44`\YNP0;ciB*d\(_4+D=RXhoT%X[4?18_%e99n"iVXC)4-?nQVmbV]75C[I,F"5hO".OX
%;94EsCIi:IE?YRX1><uL>aR\_ZQ4sWjR+p:[_lp;Xt7e?67nA3T%OV"@*aghm?#U7anJnnmJ'RCVn@1DT9i8,ijE8R)U4nkCIbmO
%]&O1'*LWca%3oIHU::hGZnU7^=^3DTCXje5Z?VF`foA#96@d+5k*=G2r``08-PoUFcR?1Al"la:<N,:U;S][)&[`WV3spnQ?k*cj
%QBe^IDC>'YSQd8H!sf6LCauud:i3TBHFm1l^hk-TGHRVaO;Di/,C2F\D6_]HhG+7i>?U4XTGLm<9ZaT^84(8U[_coP$7":(L#%bW
%6q!4ZdG'f665&RJhN#N9WKb7Vb1IrNA41@V]6's"4/QfRlE=DWl0[&KHN/Wo8EoO4L\s14n#(YVhuENC\[FmlJDg;XXtIK34hAb+
%HLaJca3,Rr>6b,ui<N`&ikHf8\)Zd5Y@#kh55Jaab<l6;kaF_bfIT5bn:P?Ch(Kk!nE.V!bi7)Qpo>#']Z#*0ic"iUs65$=m$EE5
%I(oBZs)&UuoC'EjqSNi8[.&p[0G,r&hdBZn0)ZYV?4ZM,Er>deW3-!,9>"@j-GKf9,Pf4,_9nT1R%GYE!<jCA>oLK`_&Lh<^gK,e
%]R_,*hRN@Kdk+q$*utM8EqG(CXF+Pg`"0WRP:Eb#)>o\);D2(?;Yd3!0H"uM>?&>q/`^9FlYe4mq8qN::#pFR?4kXeMOCbJbhH2+
%mb9^q>%A_[aR`jla7)#9nUFTN(q']c$dZ8gr(noB&\gg8<S@W'&EPfO^G`Gs<8Pfp$Q_`fS5g>0p&.3oHn3u3UX"VA@\FaIA^(YC
%&M)a8jn]EPODT>)>)$q?Vb>4u#/m?-6Ia[5$V`j\ap5hrp+]l'#M2./jn^^)+R=d.6eG!#A;eroKZq,lE;VH(r,!O>V!rBk@oTTQ
%A&K;MjYC)rcRgb@S^5p&Z#KUq<PJ/]TiZ0-e_\JB;pSM+:8/?qnkRD>q&%#sl?f;3V^n<>n[n5d^L(<=>V)L#.#%q.\CJj=rI?TH
%D't"3MN(!2?U]&hi(s;kYX-d2&G]9(\Zpj3F<%:DI/X$,>CN.)00fBm5?3QqO8?p9nO%[:GI/foJa?TN7FWi3We+8,3`dCSo(mJ.
%:Y7k8r%@hHMJ/i'-OFj0D6&%_gAj`[a).kJT)SaRr1Mb!KB;[MhmQcZCLB,-m;N8>s0mcP2iNF(FZ=X\_>D2[l;`tIMP3.<7I*a)
%7LXnJT.\.SdHZ5`^]kmh>soXcp0n6-[9_jAgVXp,qtSKAFi_0sVP]K*r8p6CqNnP[gsh*$HsH[[e,/1o5(E:Feak*e4LWDinkYl/
%55NmMq.9QG-i!kJc[L+[Z[>Jg3udqG-`bR`^-"K,I_D!3J6dR#\'(9?+7]AKIXSWb5CV,[@;q\Q54\<eq&=bEf.E%KRIZ44l<iXg
%G0u#VegGS!Qa>j60.1j0TA/h[]Nh',q!r#`Dp!^ElHYX>r+eV`rjB?j>lF.VbL;s@X#HBko-YSdD>W*SO'Ze;s8DNTk4ODANLo!,
%00fEipRe%lH?o(p\\3?&cR8>l&,g4r([mhg]QnSs_jg8Zjlu@0Z&i>K3Z>ErSTMs0hN,i=(LNcjSG^$iZ=8S"n#B0M=5Vf'h4/@]
%l%?.Pk&]FOSPSP*kinY;c(cW@hQ\.t?8)>!^&7&_]Mtf!d4<Q3WcQg![s.7dq>/A3PU!=n3)S@Fqe#H.Dn]N;0>G1pBah`Om3BB0
%8NFDqI7gYK/[%rfY-'-G9)n+(YHkLXD7X_/QJnfKFl]$m2qOtN^L!PFH?jZpV+6_1[.F7eo]kGdea'Q2C"qa#^4M[&m2tifB?M*L
%:Ze_5T%neWX5(EAYPBZW:KKP@?fbU!TB(pQq%m+FY91r!DSiL#Qb!(+bY@T+b]gVn/iV\Lk.BDrQ^dGa\Mm=NA%9eZa)mf?e<ts"
%btVDMH[_U12kB!jccbou?Cj9oqIL.BPllcm^\^0#p@YHWqW@TdbFd*;qg$&4@/0N"qXqc%Rr'P'!F*fu4aHYqp"@IKnb1i,\(s/T
%\NQR*j?DJ[R6.5U;mcDm*NJdHgLK][f@>cqYEq1dfaS2!f=tkR%W[o*B#:P<C3f[<r8d_#s*Ag1\\+Ff1$_'WRADsXIo!7#?f.C/
%WIOkBG1F>6R1ZX[>e`6Y?%-j@E^%I94+;QYrAquY!,8=.=6EZ:s8L3bm2,&M!VG]b50@rQ:B+&E^b5EQc*mTA*YeIbC"%HjCmkYK
%om\=t`W,Aq3c([9A'[:j:Vro69Y]0Id`2(IlKn*(fee3$T-!DV^<qT%RB#G&1jU3K8DoMgNkLJ^9KlS@,B?l^k\a7XIFA00D?W88
%$'TpqG."\(*,RoWlfY2WB#"5Ic&"7AKAYu6k"eo4mS>oD\0om@2_QhM2cJ_?#B_fYi?[+R;t0nKjZC'5hgBQe[aj7j+-),%$,2=q
%pJ>lk5$qXr\AUoZUpW",UHQouGgNX]Z[D2a>r*q-AC#[!`lqRLgNp3t/>"Vi2g_.Wo=HI*G^=LTIXJh6rpPN=cXY:21.N!meuql@
%T=pXJ_r\^?:%%VZo91W.]S!e.5-@kk$%7&b/(qZ1jhCE.K@u_qf<8LeSR;=T_$Jc4CWNTsp0N_A#3GMC-!:&uQW\UIVq^G\aG6<c
%2n&20HU>C,E;'#9W\bc3K-,%Jm%e@JpPn\KX8=7i\'EP&g:'5Em[mnH+)#fs%o[@!#BTB.kff_?49l?mYV"17W!T>umdE&HJ't(F
%s#c30@1E,g@9FV2[[PR2]4e8$">qM/2kRfH\\)1=J$V7ESkekpXoDp5rVLn-E:*)l>Q;g*:Rf\U?GANc3F,rB05j$=H$,3=:9uAK
%=fhSLN;e)!SFV_>%+Ok+?7V.d=6gYM\[`#4hh/Gqr@l'cFuX-a%KH\T9#j(`c/n,,>AF&;h^6Ue^2NZnQ-0DhpG'LbF#^d\6>%?f
%HHLm\V!G(>.EP)-Cfb[<@4H2uVAuU;]B_hjbn:ulhn[>j`U>/"m;+g1FQN<4E#j4==5A*U0o>;:g%kHNr4MXWFlrVgEd9D`YQ+7U
%r:KT].I#N<7sEL_bH&emo5atJiAY\sq&"9iq!bGtF`RK)afcBO:d.3a:9Grc[drL^\hq7[)9u?0q%rD8m?9GWITN)Q?IHSBTmtC\
%TA?%94K3,hd@K,F:+jjF->fD?4k(91!arGaC!K-"M[S8'A'.3-d[<IB?Q=#3b+rb(pPn\K1Jt%-jNXYPg:'4:7<uhQJZ"PX(M-3O
%%cun7n6D1aVWEBiU.e`iqk&f;.-uN6a-;K;V)*0Fb++C\5#.S;R>YO'#Iu7HPfUS>ogb:*Er)/D;5SHt:b:m!cUF6Y(]1qs+)<LO
%l!qk)RF7Kjg%G(WV)cJaRRqRG#Hb8S\NF]t]L`uIo1U,F35siM`.NNX0#-=Ai>6t>\*lO+-Hu5YlleF.o4s6(DasTV3FLO8,@A/0
%b06s=m\8=mXOed-_5u7#]f,2aK@"C`^<Vnp>^K`<g(KT1CUI<GrP#\nCofcL@r9e3ZW?s/CUIS=kkcC=\+a`1-4I_/%ETYj!-$da
%GMbmW]T"6H_7YciD)>EPTim$Tfne)@Y9tVA%\DLA2>4YU(Ad=_?d&&Ec;/ofIKq`kqmMg:/tXe(S6^$qWZ5S:]iq#_Ho;:PA+8if
%VYUm5TpR9W3<1atlfH+9<ks;S"%.A4$?.E&G@h%HRDD]@TM)b^(Gc]H`i]c5:j/VW(ZlCc/54.b^KKXtq]u2%s6h?2*u5Acj0H99
%aB]?ap<>F?>b$93iM*rRr7jk3is1dd5HR#^a#*c9?&sI'0pfR,Oe9-np0BnT?<t4THCaN`?bY3jVgbC)gSH*=>'bCS>$urSkbi8H
%1rIGN6Tamo9^'C&IZF84p:CjiiaSZHp`5h''DaCOkPhhUQ$[P"G4Y96Gr+Ob3Pa*`ZH9lUBB.eXQ%M+B*sd8a;&kaS(l5]^g`B-E
%cs5foa+*:Ims`9+G5sb8DejWYs3C/l3WAnNSXISRk4nBbs./2bmp\F(!c4?%-<cRRb]ci'5^VoPR:EsPb]f*ChV$PQ]!T2>#_bHg
%H=p<8#oAE((GFXX?9Z'6bbiYHPb#/SMd?#DfB)i(eM"CUnbhaoQT+_k-`;J0S^>:)+7.3dR%VUZ>eeABdaV8WIXKIahnG_i\e-"2
%Tes;MZ\NAjOR7USm#fZ6c5s:E6T0;4mVDVm0_T*;fuC2^geB+2r?jg90:/#tA1MZq8NqsVI_>O<kHh5\jio1)bNGL&?(YA>NGHl>
%ZX"QgBnAG<jF>K.hV;qB*?6ZKo&QrS@@Y]8ja$j[7/trufc@\=5!.eir>B_<:30>tPDdF:<Rur9m&++7?S,(F)1VVJJ%`u?`$G*"
%qG29H?;K2Yj_O>C5?e*/mLIW]f@\.%4dr`ABD9g!\l&1;:2<)f9rZEuQeCma4'lO>bNsJA*A=bZjaA2^E3kA\7D1DI^W__)ID19X
%NgDge??W4]+&AKShDgV2dEC!)H]T9td)=rnV7k=mI<IU:;DT=OfYeJcK7*uoQi_:^K2(]&+(ha6*Hc1EL>Dj$NXn\BYp3KOk,X]P
%XYHpQE89K+A`"$=)2W&l%`]HDBo`eF4'oDird^MfTH)2/3$U+?/d/%5bj15%1nu_kC75'=E/MATH1LmuQ^OZ3YuTm]5b4@Eo(U-L
%3;@Of#t0p%-SUhVTj97P.=Kil%ZL8RYC5:LH`t,c?G(Nr]YSKq?9Y![Oq2EUJ&snR*q'*t1:rV=19b[Qo2s,?k8W-M]:hABi=EE$
%cm^ln%S[GnRgGY\jm;f=Hoc[nB:X$@3qIAP/XNM%\?#$k>@:A<_B%?_^GeBs%(?)Tr"sGI@iWjdk2?1Tkn3\FVY"<jA*iSWpX&X3
%m)PLl)#H3IZQE]N@iU:Hj7dU^]/c:D62&t"B;bKoqQ_&HM!L8RS!3FsY0Np*QHS`7m8.YKDpa=mhctPsqu-,^EoZ,r]B[o-eMfF"
%2lGECLSJ'1T)86JHrAik:[b<)c-Z[4Tc[$90E6(+r9'R2jlr#!gWK-"lJ(P+:Y*@t4AY4c@orPg)/*^+5(%?uFYUj=iFBLcaTOMc
%S#[uNg"#M:0nUchZ%H\nU_t^t6FS!Z=OIm6BZ<ZufX2l'ddEViGC^3L.*'ZCDm"S7F.QI[@6+R)oTL^fKcQJ_9tDYkLo^5e7:*<q
%FFnB/LVlp^C*$<bf;-\39Y/i?cHOC:q[lHa%?^+gi@t1i4A.WBR:V09M4]mF1-=L'DgUK"D]Z)0*o$#NAaR]c\bRkeqcu#8k2tFR
%I%-UDF7X6d]aMTqgY;o^o!.*7*ar[2"CQrZ5.=nn\Hu1m?g$S;gjGZ^YB0;XDSFDEoY`kH$XJ!N(V32/3LC31Zir?pl1X.0pRbMg
%c[WSkR<#AnpA<WT,;#:%1RJ1\G$f8EZ%2g=B]'@A=(91iS8fhb&6E=rSU3KAl[AghG2nNFc\@r$/H>SXk9m/lIBjF3eZ4n_Z^Y>%
%I?LMtp!']';nUWVgof5a6ltTFfgc_QF"#f,03EH(\VhN"GOsX@Dt`&03H`6`f"hj(g1paQ5(-\ImEtOeaf>1!oOO+.0RA%H$Z/56
%P[*hEeKnA@Vqc]$J$H'2rUOtA'#D-,SNhChDB*h=o`r+ohh4[df5Ig!S=D400$<_Eo*+hHF^m0YmD5;cdtr5i\\m13$%).%J'Tb(
%9F@QF-[.GQE<7cBniZqhU:YdAm&mof-+sCSSqf(n5!.e=qJ9=do1onm+]JNhoFO,YCMq"80>si>rn"3ObN1"mBDj3)CtP#6]n9n*
%rfc$BRn^NPTkS]u;WW\VZeRX=3ZCKm@2-sEdCk%N2l[Aug*h8h0)WbUTR<Y9B0J[qBD9#5c%L`<Ver(P_o]\]H[GqlC"kG=5+(1!
%@EL]Kb=riH_=)RiVJ+hYG,TX]Y0Uul?7[Hiq]F;o3SgC@s/4me90tg,]D:aQCo^oT4rj=l@+k:lEJdYc&'+WN9Cq+e#T&^-3$>+@
%..c,:ph/V1HB;dF_0n1e*_(>nc?qb<<ug:YG[(s<Nt@Fek'B*G8>=.`0RG<pcN2d:#7aF<(6/<+e"<Z$p3G[?VsLk_i#sYk]g'(\
%:3(Ch:c8gCd/%PWp$9(t1``fd?ocQrDk!j,<YLP;i-VO:*tM]j\'$pVn/*$=-<PM>&!HJD0q`&>S<mq;h>-V)e\gfqpE)*1`1tMX
%H^FDK!&9WufUmMo&eI[N"F^.qd=;`hM;W8mZhI,;9OUFU8:,YB;%or9%rE+']KuMK'_Z`(QIgUH]AB7]A)CnN/g^]VDGGX??iJ)F
%s5W>-?-P8lir7bW]@80WH#n9-og,U?UNY$9k%/]qbNuEf\]i:!bRS?P*UbgFKNB/O#^guIEr#RN'IJMs>k=$%ol9.]K>%#*gs,=N
%#Wl3:Bt'E#m/#?k4%sqso_a*NiOnK&SPq']-H5P,^>P"s8:UF,Dl3@0c^2s.)%pK]U@5k,])4%e6AV'X.R.8=G]l+FQOc=Ui`0]J
%s7jjB(I)/qkASI@IeCnDg%*,,+$XQWT76Q$ZhWsT%mP;;rnB!<`;_@@5MuEs^]!'fVuOlE?P]MAI(oBZs)&Uuo<5q+qSNi8"Q0#"
%di,j^XRSg.GDcibK/#m42ng)@R12Y`*jt72D7_V?qKQQAK;\Wq095HKQt.#.7b^r_*P>`jr4R%/;/5I]a_9:q*!h>'+,KeimG"^J
%>4;F=%mN&Q!M_"A3IZhHo?lGK1"";`5@0sE5Ka8e_WK>H8TWB<VQk<l*4_/IB9?eKjI7L*@g6XLa*C.F4n?]Vrr#FaMgU%t+lYk1
%VqMt(a*@_mi!YR+3N)n3H-O[E2XsKoO(5sI9Ts9ti$2^l7g'p&gsc1V/iG<\&8g`c=aYG!1=^YH9poags3fsOlGXT)=!#V9ZJN0t
%:riF3N-,lim\gGc?&T[ZTeneIm*PbRX27=JL6#g>XL1&"%c9J^pYS#F[-uLJs7>^ZK),@]Fa-eK4D6086`GN?*5"#ZAjn]Y\gkuU
%dC5fc"DKZq](No0K>GfJep!Z(4dm2]>*B'IG]N0IV[aWII9Q+<e'3O9N2uR-rr1j]J!Y$Ch=D.ALl7>n\G5JV2p8.d5#^Qr\(eP?
%D8IZs]OkBOlS,b;5$2KRr6\g))0QDVGBeTC8)E"*bdYJQ?cB1aRc1UKX7JBJ*fIG,FhsH=b%f^/DSlr+`C/fNcJe5P]M5]?i_bLP
%pT-So6PIX0DN=:/C`qj8c&*"5U+^][epVKufS=qJkfVb&S+kn+b!$75W:QbT@b,hP7iBh+an2c2J82blRP+G$Ajp0tc9Rd\Bu?'K
%o6)r\/u:[!X*P7ce$a8d"?P8)r4ZjK.Dt.:mSsMj/"`8>gYrSBNWcid0!>;>eRJNJ`KNEdXYYFtDtDt2(<aXa]\Qf@/ri`brOp78
%hjaYnG)aVYbu<=Qan*2G;u[lUf,UX7dC[++2BU@rnbIrB.p4G@I\+k(hhRr"]=bA\V7auA==E3k@Y,4!Qph[2CUB*p1ROpi\@/>e
%IW'q82NJb\k`2Bo<,Hn$"gap-7!;b"G&+`25+7tAW[4:Gh,qU\fbS(j(M@mO3pOM.hRPORCUoZ?ZTsp-*H`Dj;)VJ3k/lX;E@u`]
%a4$^GN`o;S=Vt%I"7%1VqNds0B6\Ck4Q+r=-@fl0?JD>uH)n'Lm<lFU4Q9/La^:0;r<.HsjAYJ<r^+fiQU`ndK%OH<&o=4g7!!5*
%__H.V#4ja5Rt$nioQf;]q34+L9f0/ahsnD#PM[=Pgaq$bpN]#e)6`ElI%N&22rj5R+22[CXG3:W35qH^c/nQ9l^'!&QAZ.-)ZGE1
%?kRt(osCqR`p0G-@r8inNl?IPGr<Rdb%DYq3c\d*nsF9ePdjtfC^:s&-/9TRI*hOAdA3.aV@B:jZZ^NF;M32$29Huala8M[7VJVt
%[Te45-\l9#Ffc%GG4W)Nc?8Ss]=Ijed!$%5Mc$S5I$49?Gn8T*E'ADRI<I@?ZJiC-qRi/MD:e;'lUTLec6fkA/5u&(%G,X<RBGlH
%pLD*P]p;Hd]Y)u's1>SoZ8Spi`DIYbY/(>2o(V;,pdsmJ<p"_DG;<-C15!b?'"4:K,)8e3o9/KQ]BQ4i(2\M?hJHDJVJKX[e\C-K
%O!hY!%mA0X0iLu6g9l"_Q9CA&k\`O\6p[-h!IH#U_k]6Y%E6Xo`5*0U:KI&@`NC5;qaS#Mo5^k7>lVTP\!S?7596n/9g^eOZ<Whe
%^/sD(:g@Ngf;S@#IP7!VIa"u[@642ebf,6iNjgoWBfk5o[kb"RQ0:_6nsq`n_Cc<\%*-D\St<[,q"j9Qc^q+noN!L&*oAh[?:V-D
%L+M1&ZYc:6!re:b](tPPb'$WgfB&c&2CukLdDe*1`QIiT(R9HcpjjkU=EWjDYtH#Tfd:T_nbNL57HY]so-#L(cjqtED@S>)K54jV
%*/e->"p6o"A;ds9jDnHHbi7[CX/g<1#N;_iIkB!]>$esGT&,8Zli3J[5!NC5&`0Lh5@5U\q:"n9D(_<pH&LhbR`HfMn^ksJF/ds2
%5I27%e]H(\o(oZhk57nLQ1H-up%n%Ns/XDshS(F7!uUt4k1elWr588;rL'jU5G#R&\`P.HSnnUZW6OkMs8(mE\b^F6:fIVUHP=p7
%\B->tq4#uKVmAm4p'Aqb_:^(.fK=b+]isq3g'o)h]@eEB&&fdGD"\.Sd6>&fO.^jW*l1l?F1;ptZUZ]Co*D4E8+>s8h;An#nm6VF
%X$=rnO?YGuAq+4BiX_9E[Gh]*47ri5l2Eq,fcM'gO$BlFf$^!o/p+)hjjLpdW,=WMD>l!?J\J\t6e^T2SG_+$WNW-WO=F#<JTg_k
%rcW4Qh;f$PZSujs#2Yt2OIKbQe<.(Jkcp%9\Y$.9om=_ZP>u2_i!VYA7UEsZdolF4c18^25&UYuMIeA?4Fc$d#X!7I^`<GqYu`iA
%o?#?_B8aE+Z7_V5<fF(q!<aHg%\>^7RlrFkfTZX4*[p_f$_o7F_m)kI^?4864.23nDcu\40RnPPLJ*giq.XhWFtjl&^,F:Z?Pi<2
%)nfA6aij2Y>I*@Y"W(W_F`V2r]-rXi&$RanN(,AU#1LF(@9u$%cGJ/p6XLd_S6?<kes6M^A3>m'DXieYC`2/YnIADdd\hQP*DYBI
%EBZNQgD%+oZ3,BhVL]:[/LRhVX"$9JS7hI3%q`/SW73s!<_m9h[1K*&#:NA;?AP-ZX_HFu!9I0@Sar^jqb'C,=s!B$j`.b@11D%]
%r@IEJ"C5?kY,Fc+4'de7jKA/Qe[fb-NUo!)Cjm((h\Aj%?sZn"4PPc`jO(?rQFjHIrc+DRh&,1Y[\7UY6YGtN2Ya]i/o,o%-16qB
%SS_N1=?P4j`P\6j6!d3R+,6s\*ugn5];N&a4J?>&o=W9&=Gcu7fC@5$S#u3-<R$d57j&UAmg]huhAS=uM(*=$M[*%)R)Kd&?.>pF
%Hot5FF[HU<2oHJOeiU#,<H5Rcrb61F*L6"*,;L=2&-gbp\ksBt<lG6U_K]p83-O;*K3a:%cZ-8!WEp+u<"fDIX4e7jETsoFP7bda
%B#W:]RIh13WupKYd)iFG0V@tVR\I<t4BV$DNb[=krb38m<9OcC*J_6rXI9[jPZ6MNdX[?[5WHA*Y28cB:Y=%J2,2".Y2,bEN9j]4
%]7E'fGso"RmrfCgSSO.3L>tXm9Pmd80Fjg@%$Q[C%ASX>+:ad+3Yc8_Q./.;YakEr[p\k%@U%5cH0AguZ;KMeWL3]ljsVnPHsi79
%BWC@'\2-R]6&_".U%4aOTl6B#Q:/M7i3]ZTL3bl'@m5kf)u&#M\;;N?:p'(E_!l[Z0\e5Bpqe"XR,\QqI,V?L(Re(g"g]Ad?oH%A
%8h.Zk`tu\#[2rZ\%hW0Q4,Yb.n^Xi>q<]<=OG]Yp:5^cIS)Og>hg7K]]ne=L!&_X?V?_u4K\mbXBX^AHRS=@ug7:<`0_jlE#!4i^
%&0<[F&<!SR]uAMt^F`aicL_\QXtfeLh-32SE,96E_%/j@GCT)OjS(FLd.B$s2ocbaH]5dWMD:JY`\>FMmPX#ApB+@]X%i,=B(9AN
%O8&Y9hSANtDWEFn8%]?OUgBQh%P&cYP/l7FTCBBNZR-4PiT24bBjEr72$^Z.F(B_N?K0Vc$P]mH"[Cp6nLs!n;lAfRb6HXgh^Q<F
%]Jt=28j%^oF[ZRCXKR*??>bfTK!<[:-e/?F"MC2&#seQhhS+@h.uGHXF[QZPAFlLB=mejp93<EBq$^MN/[*3d0%j7`kh?=4Cm_9L
%4YKIQ0?=JGG4h(A&)'qll=b5/NRTdf4'\j^Aj`?`=cHK"nR#k6#Ys4+3A/S3Ouf2"5TYi2HWb"h\V#aM_93nX($tG)d,0c3m-h$Q
%;lF$rX9*Bohu']MH"a9.:A/B2+&?Pe7uTe=cY+-pgK*Lgh+l3an##mtBFTSC0MP8*EqJdk01?NDb*o3"&d5llquu*[J-(4$@r08U
%E^qmfXN.aBDkBAVZE[r`'UgB2'6D>:ju;F"PdlTeF8^u].>4T]pL3*g-KT`2Fra98XmI1ehQBQ1\i%7E()cGlHV;3dG3EjX#+KNF
%]b#n..ePLI.(2*9fBPls4@d.=L;hcUe],KLlE^D?c\g^QkU>9ALf!6/^F3QXeIK8Vq6^N1WAR1q#Ko[2BMkr%[YqR5#kJWHCKP^%
%c^-i=UD9o2-AJdteA`ta(e8mVortKC31t5tITTPAE!t^`Wtp]-@3VW]>8(%jUG!S-oAQP9K<0-b`2.-V8:T72XOk@<ThbScA'A+r
%&4.OO%TCopq#lUM=I\'n8FNRh=&kJ<a_HN5A#gf271mLNn5W:E71nMDg/LM*WZj3$&_X1?<a)\L+4]G?"!GAU!6A4hTNQc;#Y5;l
%6QdgONe)j86'/T*#SK$a6,Mb<8D"U]M4<KI@<s%AXaEDH5&;Xc%mqLh;^fSua&#=Z&do#8Jg"il'/jZ`L=cs_OL5[%iPp+5?$C)/
%Xp%51QAA('8/Oc`f%42Ai@QdHYW4*E2FL!`57k;Oi_!=K>n;j0=I8t7XTh6mfc"Y.Y!kgsk0SqSRmJ@#UQgKbXNU&s3mqlE^*rF+
%;>!?p$[k*7"Y96^--]g7+42eb#=qbF*$LH0\Ip*#dtSE*2F]TY8/rX[.j:(lZo:A2`ZgAKZ9]d/Z=SZ+$Bp._eM,+<$mTSGPB?O>
%-V55ZE*GS&,[A0h@^r0"_^%OC(%g^-NKV3m-#n?pjR+ZaT))=kOh`f=&;bc',)k`pKLjf++VJ!'MSgWs]UUns@Dj'.)&-NS'm61d
%c!FVh_/7q[9odu4,uE%@5foZ5@q2;[$pu>K(rL+:fJljY/iF4#_pr4L8OX6:DQ(P,''t]`N#F+$Dae9KmB,]N(gGk.>)L]KAsai]
%$'W;%@?RiD:(ju<8rCZ0'IekX+sid#7S7DQ7[+;UC,O"XgNAIA8?UB5]L64"/+JcdKk2Q:dVXl.X9d!SgiL-(FW.eu2W_Bg"f>0A
%([W>OOu.3q1kRCMP'joV]YsL%P.SL$GiD@R>d>d*P2@*-GtUj9>SUff%)O7,,hPD]@[I6ZMN>-RM#0YZa[:!:Dp4rr=:+:PWFh:;
%>gqcaD-ZaKp@#9-QVl(DLD84Erg`3]lnGVLe_Ah?IX?F-;s7:>itH%iDAq?>gGlc][qQZaNGK1kkifn)fJpHEXb5"<4D1+lN:)Go
%Nc/WMj61Bo<r@+_FjlDQ*U\c%7Jpsj*(NchFGneR\sHKf^F7C]9lKF<_r_2`C_;`b\nMRc:ZF?/A)8s9?BD?(%AJ9c&"hn*X.-.M
%l[$jfT!PRYqAACslN>GDSoL>lO3T`21X>TNo/u%qcT'7+QZYIO4O70^&"Ri+3TZ]T^8^A8OG^#LfHRZSnP5ATToDdKLsQ$W1_OgN
%@WDXq_fo"ke!,iS2bV*3WA;_>C\,Zii7=@G,C2Rh+WkVsf;MUs72_sR9FMm"]/oD.0h;<f^]KW0qf[OHcl1KLO2]cD@3?U;bQ]Ga
%Ft@G@'kmKf8\^UnlO$,S5`QeR5fE;5;if5f_c6?:jt-okb/f4R>jC7%/KhBCm8ZNII[=f@YhG.NX)]&QP!CW8V^r-!hurAhjJacW
%chd#&P`B55\2F?JP83:M0+UJ]GR4uEm@lod9i@[k4KPj8<AT?s;csE?GbOFo<,AKL\UJCLFuZ@A-&*Sc35s1(><l5,/FSo_5ZAZB
%3Ph'!+'I>URP,!1\`S\,TPVhU$OouB<#EcZ,V7Y_=&p\,6hE,j,OsLWNf+G+1Pi.46UH#VN":S<J7g9sqa][7h&uZ&DD8cN6gscR
%7D1h"%EqT?bp%qmVK-Y?2\b4bku*k*!EpO>ff3p2_U^Y-&.ZH`+R_O>ctqUI%HDCg*2fK7=80eTML;d$L2q>LN0BsXAi=TeC?k=k
%faRR27o+"=UZ?!Z9PG\ks8.1=BYnc'D>FtjDX&C13U,W7&ELh*KdJJ\i)*\&etJh8%)/]B5@O=][9'O->R&(\o.l>LZ#L1fY&M!u
%G_bkD%ePW[bJ%;##<FOI[kTKn-E__OGGf/d@@(t)`PbOG@l"f/#BD5rUX$OnC`H1\4s43i]9VV$Hu9e#m+SemX6^9GBdarB0cS,P
%6I<euf.AI/<'n:;L8[t-"R($f)i9QB4u(eYiO]^[@`??ak8I;=Fg4>oDJek;QM0Cdhb^&q)`#/;'FJRH0MSNE@ktJGbXtXkq;)s(
%\I$^S,BYTA$@:jqdm;6);\qkd%O80X.]Xq_.],1_al\&P;,gc`bRqN:HrW%F!4'Rc09j]ibT't0:W'LIqmJAa=VH!Z+]WYmL(Hm\
%DIXh$\U)k-?T82uh,H2.QNpZ_UUN6bPt1d,Ps$_MA[,l;1a+8ILi1iHr#':R)@H/LW`sSA+4"!L%Xtl%+!?TsU3]k+ahZ-JP8S@9
%/JbG!NUg34:9@u+hl/<ecH;"*XASjP5?KZuqktT@<b!<S)GbcAA\lo^'o!4OIN8p'&4Psa\:oI;62:Z<fl@IC6%>M,VX<+qXXkX\
%,CR"f1T@j'+LG/$gGi<?CJ,=&+UVi?fI0rCi#6Y?$=,1W=SWb=(kd3&n,orjCpTs;$P`i0E?OmV@G*rpBT[LJh[Nf7g:OcPFRHo:
%#Z%KCXqRkDIlJCBq)GhC<X6M#-Of,0HO%gh4khXtV`I)\<!_:oX6$[_9ehl:@.q^YhI[-\.YBWqio#PLKEHDNi6cl4Ea>Fe@,F9`
%!)H^C`Nn`^IUq.(Emn5Nf_f2,e9FW=PIoJTrFbdQB6<79*HUnr2]/fIjU&%pC`LIO[+RRY6[<MR]#8qSHJq]h%APYn[hK5b(WW#s
%);_c,^Nj,Q1G,t_E/$\D12V>_l:mb\UP"KBq8!:aBOBDnVFPGtIEt6`VDg''Tl>7XC`(2iph3;I_!eF^kksMnrMUlsA)TUAo]'E5
%jpoRiDNF%scgmb7MWqn%g7cP"f"[!?TfKDC3O8ZMog2l7qmY)`NAe_pnG_QrT`^/?h[?GfH<Yb]Pk_u+Dc!hnYC0cNC3+WL%e%a&
%rAhO*KCHV4<[>&in30g:eE^KVDQhZsKCF=o!ps^N:GofBQ12L.'FEUkV8j6VWmQ5P<RN5fYP[9q)3UU/0deIKM/*Jk(JDq$bZV1l
%]$9focBOJ,Qe\;g=c)Ie[$6qGr,6<W=B3[d^cE-1lW+(=IbhGf&]Jd])\oR3g@FcuQ8sY:jfnceV(*](Z4Wm"R@765HLs>;,9,^?
%SS'bJriO]n?E6B9n&'GCc19rlo]9<f17*X[WU"4M#FWb$p=3k6Q\2peGL9Y*1AcuAJ'mU9Rf,Y[jY*(G5n:":jR'H4aE>pVb_k#?
%*o.XS=NojJo%$GP5Qb\A_0O>CjH9ibcn@>>Jh*f[q&D/QSt2e8RZ^MWHJHk]<Zi9+<L<q6Cn-)?jVDAcJ@N"$CnKdPmIm=k:Xd4:
%k99NRWnHSFYq(+MR`l)3WsM3aEXf@Z!u7Q!ZLOluWFfG4;YZF"_'!H\i(!'t3#@D:XeIg[TuD\h$QMq4%i\SR?5r%]+j@8nn3)H8
%A%(7*:G!NK1$8'[s)759ieM/n7E<jYB[+JI[$.t_a[<Q5@?Xc->H$R0[sU<3APs4aAd*3n:oX(sdAj&gH8KT0;c=GVZ52Q%R!0Nq
%)P/W/]C!7ChaZ4_b*"**Ths51o!5PpSJs]H!EImD@NPnL6(TOgW31_U&uW\tWX6J4AA3(F,SV,p0bLO,KQ[QD'2@<RW2lnsK))3>
%H"/.u%lp=uj0X*L#RV]$iJ,4<e!5'#)F*"d>o3#'Y,Rhqa`ct?-.]W`+T.?gTP"WIG.ekaSZjPAa`XFrAS!>d8(k*u&F(2t=@h%K
%CWDkhg>3thYU!#VUj6_b=L:SH/AbRBdWj?^$m+j#@9-gFY$2W-22Eq.1]:8l+caF6CV+V\.\E1>Hs_*%.[W=hq6Eh$Lj:!)EIn#6
%<1[q)/u7dA8n&/[ShsG(6sgi<\>RaDc5IuIUW]B+-)&pL3m;`[(1BoE2$2PsHl-*!D9^O0K.nFc<(iW?<!Lm\daZ,]Ko&U&IVqF!
%11aV][S[_7o!)NP>+T,!OhoPY/`c>"3;KFO)XFern2>pq/ufA&_]^*F3!B>l?MsH0P+XT;Z5+u6a`-jX#1Vm*$U)0j_oK5F%!BuT
%EE0:BIJjTRNU_XuSf\H!TuE&:no@DcEAWKO.`\p6%B)O,.es'J^bf&X6oh/b.b^%/%/6-\dp<<Z<N,)&^'-L$$ID+@;*CBUV[ITp
%3N(hQ!B#5K`\$@q-WKVVG\=Xe<M:(a1^d$skO2ZWkB,R=:9pXgJ@g,&k=.M3G0<L_'E9_=H;8Z18B3;'U6`U&TPSkaAXq;?oqqHb
%,)K?#A(L:O*`B8=r+G>boG+Zmb9<-f(pE5/X+uoH:Q$U&*)caQq1sk[.Z$b/Q&X,6#8`(85cXL=ZLs;'D0)U&>+XY#H88[S>db\O
%-roK=Vl>GNr^n,&2/[mU:IYVbqd'tF]c*/'WdbjCUj>QL.+b7":H>5Vk&@aM;F,B9ZUS\MHc;N+6V:LG2U028N680&BVngT\SL/b
%<o&#MiL*jP+_MKa7e)c9>qEj=OuGSXn\^osB2h'=)HUbV>D+,^W&%`).$rOr;f'MF\bWW'FnM%V.PFrVcVmm<EWLkD2Hk["b',#l
%\ogj\0&&rT2[Z$@J&jKaV[#U'`Kl#TW+T(9'd3&aNC"6B7"a48]9S0+EaK='U4WE;@QgJoD`=h+.WWh?^;NX$3\86JbT4)g;pQka
%8$T$dXXRm^?MDa3eGF9,k#lH,5\4dYS.;+>h;I;"eWV_O?G%lNG]WOm5P!?;cAS+^@ck=j3A5!iMja0Gk.I'A04rLfRIanFUQRFr
%`QWV4p`4B]]JZ+j7l,4=<5`<J`6VK&@h=lDMn!]d(6<UeFtUeoZ-JY3g;F<RVkL/`GfZs@jCEf8`hs9lAW+j9E\b;0^#N>N'2F:/
%:1ir,=T!,Qm#(SkMKjqP12(3V\8Pp'DkG\mL<c[ra:6@0#BP4gSDHH-[m.Irp45`5:N%>"PVtOd[eQ'[42&<Fa>UVmmP2E2m0jH?
%reC(=/W^1;l0W0u*5^e2DFe^'nm83&(K]%>.b=K?-,")7HeOY<5&_h@amB13d\]+n""1PgS4K,s8/ki*[jJT)pQOAR-[Be(/mJ&n
%F`6jpe_G=B7"!V<XuhcS]QVh^A.R.GZsTg"G#N.fSQ";+eFjn;*TR_Z<^^u*\,=e9Z%+-:$Nr/ME%'DCaE[$%SWhZY,7@i'JQr2I
%8(=0ElXR8G#S7CEn,!gVNVR_P86umFaeBi4O_Nl56Sb,JDQOXiR*[5ADr?m$IGu$I*IVDRRjP^\ik`uZ&[)hXqC(D5CZ<`VH.M/D
%<@%AE+KhdE8W"62I"Z>U8d=+?=H(_&2fl\"&_K<6;PdjOqr+TL`KKK)rCFn8`?lE^g(\aQ>s)qMjje%'=eTSU?hD+-jmM/D@q)2j
%.pp46_4#JqoU+S[:SDQl0<W'in>giDVNo.hm(8MnP"(Df-m#h1rp&/3Q1:/a\<Z"gl,oqs$Z4NE*]?-00=?ZTi$8iiRg/KeK2/LX
%d8R\djl+`::)'m[ani"S/c'o^[]:Lg73Ra?lXIKKe?Rm&qGmlRm-@^(@l$@Y*\9%GqfVGOG2(O?ZUt8RX-6Cs@T>N-;nooc7EdnN
%r"r9pS_5D4!j&RS[RlSi36Mpe$PLP5P]Ui[IZP<TpVT`D[,D2P2*[=aee:'.:\cRQRkA7#h:A\)Be:E&BGou2J1p(/8H\SnJ1i4Z
%fJ?Zp,6Q08WEKM*Yf@k$\]_a8<ngK0_%&%$b,nhaKDAcG79C@ep.Vu'nXXp0a,T/<H/#o1YsIB!OMT'D6X"9D+bR8-%+mhV4V$(\
%&WaZQB?MF.C#ZtMDA04XH'd2k'9<pPZXG%=D!b!tI<8kl:b6;=eY"e8Ff!X0(r`LE7`YC@gI4aIofU[;iPY/e^7MZ>AUHn^plSQW
%iQ9]j_m]HOk'!!/B(4*Sg'@"[/!>P!@L;>1YpLL!n=iTV3VU`o))p)"0Ip(uL-[nmmp[-8M>d3J#&il`eOFJ".q:*XPp'ZGC(m\+
%7h,3rD!E16<aR<<J6Ql'"+E>MV1rgJ@gY*4mGcYL):/;$8RDm<Zs3>Cc@9%j'3<&JphaRCXDF5PV2)3ZgL"f/%I-tq\np@`n]F>T
%eFmhfC^bs"M?cMZ[XCRq<^=,L_J07UM5/bNaJPX+^\rQjSBnS\+8s71q4!<(ir>PI3+KhM61[*M4pT=S?-mu=KNm5]d!WidRk`l6
%9XkrRDT7@!1#_91q-sc%^E!u*bQp9aC&;#MMVf\$G0O%7RnM$4]DSZK+@^VfLWp[B=Rl6iIEO2C%Y+p)O5j>826q,F8&KYC,G-EU
%a]?/6)I)FCcWU'T6W-8kq#G?EI+;DIcEtBb:_&=2m2`sT4XbqrRM@-K/u"(&$sUtXhH:uUFddB5<HDB76)Kf@[s=g;ZLY<[UYaA#
%8SK`/X3m16Y(7PmAgYSB@h^$(!U6W"YGg]Tf48*2MN]Q(+1C;*4tG?h1JY>FC'E8mRSo(N#G;_VkH2Udn#Gr?NUFe%%814ZC2NEB
%mCYVn\!X1Z=&!#-&I#Sq_XlGgj:mcn<G')JCs<_d.L.a`>Oe1)2?;#h$*UG&M(KfFBGou/J?c_pP1jrDKa:]7p(YN;ZO.)l!p*%@
%'$?9:d^deE+E<4#+TQ7ek>m82.3$>/\t]fiWPUS[dBs,l8Zrs+pk^-&I9O?F-l--\IKXecQ.*227H7^SQB28\U#nB=QWAh#DsQN\
%h9\RDCr%/bl>9ZG[ej6'Qq(OidI6!sR7CWha_Y(@^Xno/O3*44ScsV#XbC96)Esb@0Qp8l^A$T3F-#Ns4W1o0"C/$aa!iL3TR;`^
%.D!66bR2\jWZ6g_SI]M\N:IP2^8:Suql3Ubrr-$.>m,e)jW2[jX6=!]b_S&+n+i]5o1(:5?S@'uk%rRl<=Xs?'?b-66;!"@9J!u0
%71mH6W,A"#`R`LOYbPG)Qm"a_TrAdVb'ZW:L)33b96LZs<J;r1<oq/!0MF;R*<o-6QSW5jd%8hI9Z:2[kEKgU&N$\nWf123_YGsY
%ft("+E%=4TfpX4k#eWKXJ80km8GuU#j=Vr-=%M"E)0pb4.I'r4Pu1T*?*&_AW@FZ*!mstY'WNq22LMEKa&W(I@-t''a59qZT`J\/
%ciZ0Q)%,;'#.N5EDDJ$*/NH=Lk,=>/I@aaC1'`6iT[+VMR=d\a/a1Z"Wg#=ZJj*dfd&1E&m<d2M>`J&8TC<DWP4g#DUZ8_S:Nt^7
%d9GK)^5/Q%D[uWN>Co&`VHQRJj*):2n^E+SG&kqW4D<(hQJfq%paR%2dZH0'=/HN)E/h,;dClAYdT+)bi!2Q?]>+)bnp;8HC&2R9
%2[=b[HdKfL$Mp,MkVEHlhHS?>:a%e,q@%-67a[dp#ci;Hg^Jg!BnJOD8q/X3-ELaE^I-AGEtt;tlfL;K>Co%eN2Gi/0cHBNbU9Sn
%dr'EU,bm<%dn.e)^V)X^I%$GR*VH9hmbi'h4[I=Ep?J6XE]2O::FsnaVGhr64=Hb2bbp=Q57e=laalF$CB\!F7L",%U[&"48s$tV
%_:.t(A!k=J-[cq]mqFVPe*p*d^/uV6@j0_o6Wb(`%,G4uF/CIB\i%Guh^paHf-Cn*KG>_lF?ar/1[r?o&4_$qLW[YJ7";X-g`T?.
%]9/$Nes;ApZn+E;p"Z;=A0@kZ3?oVo0-:#SEPG*255H>605mBqf&b819"RrhknYd%qR'+E2CQdJC(^51&`U=!VfWC6[.pljUQ;Q.
%Hq6lrQ0=T4'=na%%>6]QbJ*5;Gm8AK0g;U\V2N'3K,:gI3jkTG%ks;e/i])Xf^u8Tr_74Y)]q`W/MES:n')DFKnBp%V#gKH9ekY0
%l'+'$CZL)^5%Lu]H$1P?r;HLGXtIK#5.eJLhu2Vmb3<IYrl^'=I.<*oQK6r;3e*@ns-GtJ:EI.Z5PXHkk>sl!(WY-G?GB`mIWB`)
%j77Ndjn86,ocJ,La+aHWe!'CpZ`LfH]f\C,8&*<^r-709YAT@9?fNX+nbTRpa6,A#^W7r#D*Jn&*#>`RNVn^LS=eTlqL`^ihOM;b
%qe'X'ougQh53U;/QD\:0V2`YO0CrOXNdgWrS+E,U]WRR(5Q9^&8>dV,h09RhEC/R7Dr.pA[L<u'a)Es4GK_`?/-"3CjiuQ#jrN@J
%<aY=dItfUphTs@]<aOZ7iop'$s*:!`#JM866J`^uJa_t#hhURnk$@]WV60gAs5%l2hIY5\no+=Tq<$hkoB#9K5PY$R?!dJMahQe2
%q<7VOjRahN?0-!QH1T(qa'W@M'MA/\:\3iBo<LRVnPf+;r8m9-ms"d-l-#9sbCr&&i]kR_UX/jPo?Y.]_+W\bZf@8$B;`XK?!TXD
%F*=nWq0ZR$55sj.qI\JDVgRdp45W6Lgpi!/Il)P7cf).(PI%?c5F1QX%kl-$I^EO3/3a(,m,ji<Ct\IVQe1-M>[RFT1GUcmnjHd>
%I(_YUb"'j#r+i2XHp1^eIoMosj1j^[o_%cDIXJXG(:Wu'j5K9-I'WN<5OVB%](N#B90QRo>$aCBrT3/;5CL5hDp%D/gFN8--m/3:
%=meLE?[aa)jSq3M5,5eFr\l<gI!UTcn?Iq-0$??Z?h<"0Js-aSCN6>uImBm.K-.ouMgIi*;VLo$mloPCABp6H1U^epGpUsVe;a"g
%B6eS`=le--dGVq;V5"XCBBPhBrkEo)Ie'Q;FYmoGAC^s-AJhia;u-7C5I9nVlZ)6_/@_Voj6a1a&!#!-:N"iIDdAhSZ\<kROG#GJ
%W';-X^6S(-s7W&JApS5om_&/"/4l>bKRe6)?'7DTmm1B9YW]:)JA[K;<,TSqhR4auDYMsfjQ>.0=(V3hM\iR`2m<TqXt.T.SY*[U
%S`&f0B_ejnB!jU5U">'<T)rAC_8Z6'"oCmr=5+MdeVi$<J(305LA7CaRoagd!qT9.Db#A,d%auGN,&:RD;-H\$RsB$rI.a.nofET
%?<$ebW@dJ<hpVPid.mM(je%$/?@M_J\L^K4gb6pa-*lK,/4$e$m0<<(^,X2H51tOL"lJTQFR-F&G%J&P_KbR(@K'@]\VILD_W:^R
%X"ej\1Ygj]"M\TurrK#Ys5qZ->+WIEa2gKNM%*4@2a<o3E-:jP?bb9$J&hGsWSCob^>nV?2u.I]HcMSs41;5Q5?;R*GLZTC@,(YS
%img,-n)('shqp[!*AN/9Y!Hop%CjK&?&R2`FrTNm#UO?qaZdL2r!p+LDTru1QRD:h/jB6sS!3eN>-jFdTPrs'm%d@8Ds3@DdBoJ$
%&s'+.FYpm-nLZVUl!fk5H?lu.^:;KQft7,lgX\I08tlmTMNno)l`FT\-qfW4]Fp_/+=lr*k(AZ0FgDU%mkk!7pg@_l55S[td0X<A
%TDbt.pOuJo*/^aT/eY3[qLS\)..$mVR@UU,ci_i`[(H8Za2KpBPPVc"ID3s,i(o9ko/Fk3(JC,8qs*g!O7tTr]d1mjjR[k#VacF[
%GFWTSc1a8D&5olPfO0#o4IJYde)/d=D2/5QgX,lum(I%11J<lZr-mLYq%!`A6DDYF<Au$c(@Sq,%M/n;aG`,$mVdS2Z`71Arp7qs
%S_^dhELmcAZ<?EJX$e7&g_Y3P&"h/J-WV0l_jQQE'9e:pc9T%hM],rt7Jnf)Mm!7I^'"T!M($^r*LS=qn0a_,*F/A%r!"86IgJ;<
%..Q"F(;8(5-Q@^E+9kWi9.Q]+p*%0#TYJ<uTCi/M?pod-HmPr5^u9osoK_Rgl$Fs\LbAX+*699ks"i'm:GSI?)mL5nTh+,<bS-Rh
%0>+*-\]5'<D[>W88P];;&?5Gsj?``?,)"l].p;iTUqls/7go>8=o\^)%jQf.(/"A2WhfEd>PVX*0DU*8iFd&e'u5a@HM;$u+Zud<
%[d&9rd(8g9;0XS90W*07YLn=B\GpZsbgge$K66Agm=B/LjVsJ9HY>WNB\P2kX5.[DCh1<QB3%3E20f#nAqmO/rWcnNpkuoba+!h?
%9MM-Be[ecToq-Pp^tbmSO%_dF)CWHIlaJo[bD[EA/(#'&_B8cQp'S"_O1<8&eG>nCYN&!<[Y*QHJ'Gh>3n/8R?*-#ZQ9G\hcks:J
%#Q$a>CXbQFO(,kL&.!<Y_>"IehQM8EBTGH9W'/bV;^Q@b4JAP#%(+n@5#rWY@ap+2+Cp-g0Z3DaC4'G9+J%KM"YT@7Hke%\(1?'p
%8Ohi&eH_I=;_/V-CFKjUA5^kEUXA+qWDMSXR2NN4c*NR>J<iA_efYhhO2)Y-LIlRnh7t$(Ya48L$nToD3U/;oie7rih@.J!ZIgTa
%&Zp/"5_,u56>pO&m*9>24tKCV;?Q%._;cLP^q_U/9a%6IpP6[EiY+m;VDk_M+Tn?agd#qR-o4t5T(rRD&H*Ns=+UaO"#lU.lb`m=
%;L[8*+T?Bm2^8URK$Y!^:,B`UImd7hcY,"mfFrp%d6I.D^_^)=Ek$$Y4g9_M1bS=Y=H#uV+,M'Z$P3L^741@H)\\-TdO[7rAKBb1
%<Lt:%<$OQ]CP^/4@Xu:[&pAo$<e1^UGXRDD6j]NO,8b;0Bufl1/F]!;;HieI84cSb6al^][A5/MH"IuPq3kRK2+0A=X\RkIW;]AA
%\6gF6+['!JS:XO<b..#<AB):Q1qgu!`2HJ)L.:eHKmoXg[,O1nq\<Z]5*\Us_&[6s;+'#[,U&q21,^ge!/i&P%F'Vn*cc-QLf$-M
%0ES(7/e26X8MOTH72nF2Jm:_<kKMBD"^!:"IDU[GnX4s(+^nUpkC"ZbZj_cfIBJe^qkg;[%N)E=#F5Hc%a,0155IS-CMBe8I(EPI
%$-<SV8g>!7_@!"PAg/YNq7>Z:(g59NV-=ssG;qjb3LuUlK+(=&iO)W)h/S.Q@2[6'`"XUon.nQeJpguEmdbe4[P/g9!f+RRH'>Ne
%6SUns'#q21LKk2lKF@,gXUHMT+r$q=IINUX;@B*(<l'lNEmi8mB,,EVG&j%n50!tghi_$Y+#R*Ill=ACLMR?=7d+h1MSRl\?u'O,
%gj;"'>8TO+8OH's>fi'Ka:oUM0VWFrRqA4RN8Y8;iLh;&[25KkQNZGiME+QS7MaIV2#D)kD[8B@cMHgggY9_QM_I!.)>[B;Bh(*3
%`)$0%YMVYjl%#.2!-.cZ&X'N^oE%5)[dR/!'+Vr*-#+jba;8PD3BIA<f#5%GOGWX\9Ej]+\cn.SQE*,5!?j]VNsI14F%ump+Z0K[
%!S&/2F>,DQ<h;508UBQ&$1/>ri5KHbLkm=M4X"]r\/dND'bb41IfQOl?i^`B%YMctOKQV@8]XI%8&8NR#>Y_-!$K-[`(,5Y.i:G6
%NMM5GDioQ\:;-mBngTJ%Bd=7-JE#p5A;/7Q88ACA5Hs.EoZYobcjTpd!a.Le)+KDMPa?>-gT$hgj[Har5['&,.<FNTH9UR^r+Q4M
%8DV<VX!8fRc"6-u]fS<O?*XG79GBH?9m!O8di,)[N"$sYWnE>Gke'24LPQ:ij$&?s#2UPP.e'-"_LuO`L313Vfi6`YQoV&8N6&F0
%'935fC<('I(J0qigk`5P#7ULUEfe1uLP@5l/(KdBk"$6r=)\n67K(\ST6;+kG/)W57r<-SY?bs,<du+Y?#qgOT=UI&2?$DI1.ERa
%8/oo4>g]6Rfg"^Mj`@^h1l)=!S9*Z\pE,p$`5BK"nOj=iC)'?,goghs,S(T%7e$0R4q^(HE>JGD1VHWPq^<E]^;S!R6b9/Q#9G6:
%o$'Mk8'HDXi7@T#K,mu+2kY/m#:*HN2%dS6,)4;ehp\%D56ju70IW^rL(l0;MdiP:%DYMIVMF(VJJWb(Zu8sO>MT)dDJW&lN'%jM
%\'JD(:<41Np+es?pjs@q#*Ong',CI)X;H?T?JTiU,V9!3O0LZqIC1ia.nZ#<qr#KD7YQumf6mZ"A>_t;1>!/[-]jtqbTQ]ad=70[
%4@pG0jXL,^pJ1j:oUT6"cg!a69en(6\eVpY&1MCUg_;#NhY3\YZI9ksaQ$/9-c:DK+foo0rr:%c,==fW8]/=AP6Nm="s2F->'&^/
%==*&jK3S#@,T/;GR354uk^`P#!lgC#7!K$9TA=UP4]8'K@ST<Cg?DHu@%O#EAJ?R1:8FO;?GZSaSn%CT`K99C4@_FN\%qr95IqNI
%E;nWS7GG4FG::u68NF_e(M!I8nNir/l[Bpc;.d!2jSMQe^M&3drI7qIgho(N2R6V:T\9(3RU$WBe#0TGPs4R,3jg_k<U=j)W_X^Z
%Rk4]kMuPI_./Gdm""DW)\2W\P/[ihu1ER[YZci,U9,??oAf8U(FE>E=Okq("!;#"(:i)?rk<%G1bt@YeY89^+s8H2?5_DJ0gMPP7
%YR1&qh`Thmptn-V5A?F7G3,W*^!a&AhS"j2^;bZ6rJ(l\-QAVg^D>Rp`ISBX_7"hF@MI'F`\0A[1rS)tpFP<[CH;.($!!g*UB91^
%^VLVWoVgL"-(Ol7?%^Dbr[g%_BK!S.qTq^tc14N8nuGKrVZ0>apobooI?03ASTPC6#5o9Lr8r,$Y93b9(CCP"rOl=K[f7C:Nr(C%
%3o/ra^Oc1WQ]gQ!VhhlBe=e!uISZsC*IIqsqKH/is"7@?4T+U(JA2$g8Fd6S0E&ZJlkL$cN[!9WYV3KaO'eHgHYNBWp9l7G1(XAM
%a\U[f>HL4.6\!s]D>A+T]g-&&&UaDH[eEb/:Z;;c5M,Pb@Y<J1GuEQ21AnMs^].%ErL<.(HE?2NrKNaV0K%5;hJ:`YZi/GJ5'He3
%Ypr:L*]8<3E]&KgJ,^R%"_bMtMfl[5]>Y-0>Q9AqK`C/QN)a]@jB"/sd+WTVg8S+f^"8CaC8Y5'flEp&T_&Fu,>hDEbbnd*/j4EZ
%NG<fN^Knf_q?,"poD;V!2o:]JC?K<lYh82@gU08EjCr!CgI6?S?1rU#<j2C!-RS^Tq!_^CgVq0BYP;3?fl+<F/]TlDr7m`Ll=.HX
%)-dQ/>A;WN:+KID\QNiT:t2u'C-##qjgNPd<\!PW^(rd`rDQ7*N21gVB!f`PYPZ&ts-,r3;J^PMc!n:?!cp<T,Aa.rH.bD?/bNhr
%k7Y2J=)IcSUWG+t0,\!&MCggN:@5Gj0+OZT`rZ)'A7%7l3$0-:,L;JjS9V;CKl'd<2Y0[Aj)EgtZ-d8#JXO[\J1]8#Yg>U`^#oFo
%I'J?k7^N$@"Ccap2^:B[&at@^A4$G4]<qTA*BC;%]fVC\e@NUsX^:>eIkLs]rGH:=eCe<kYJndaIqKA*AEq]["kCZXJ38XZcrmD.
%9?$a9[FM=%qBn5JRFF"-WWkO`[bYbrgXTcAf5C?E_XJhkc.:em_d=IZ"nM?<):EPXhoc&m=^cp!k+GdDA;k>+s&uOSTH;,ANe#fg
%Luk1>jg1^\,7foM.Q4lG&K%_(q2540WR@PVID+8:Ui/38`B&m`%Q4#dnOBW>0[[Io)eqJ0r@tmS3;"Zbo`itTA;7iq1=??SE2&cB
%UmL]XV"%*(UX6'n*G(aAgN^$nm3gugg#*mN=*GMOKBT!%@AHqh/p6/ln(c<Qk5X<*e&+,(OTL<ll@E=&)-fY#Ug;u`ckeYFLpP_^
%Ik\.aodSL./c%3GHM-_L<?>S`SKGGM*1Jhc>&C`&naIh6^e$sT#l&/kr2pSP=h4^(Xjd:^U.*jc^G,Q@=<@mZhe>Es7mQ.=\_G6F
%7`DCIDj@$\[>cQ#DOXrX3Bh2qTt/fHIfJWX:M.3:B!sq+H\\"'Pok$Z)S*1-fa!S%2P.m_ce>-Y*'3qgXVMi64%j.09t9jL()=q5
%*-(F18U9c+]k;WX\Bi6Kr'5+Xg7LSeN0*jm&]0Z"ZVSLa[>+KWfFCr:Ior:&^(9NKSD,mrDXq4)8-==rc;0\n9W7d$pG2d(/1!rs
%mV<E&F-rIA)B<SNH@1-4Q;Dud+!-Tb;0!$=bP&-Yp.OR9HhPR%L555?W^+P!X?%G+A#N`^fm,&JWpT)eq0sBtPJi**7\-5iIVANN
%(,TjCO`^oIrho)L!;6u_hp:#T511BCrK0;"!fG.arM4A?d-+B)W%VUDgVDj)"-#k>?-CZC;Yt92i6m\0qh[KjH2Z!dfX<q^mGdkn
%1c4\tX/KOBrRXEG#N@Y6*Vi'tS#k+HLFf!g<\QMqQ^Hu)=+S)"<2Es?X*cjK\Qqe$E2j^YahRg3?40_!Xmsd9m=6g"8%0JQg39Ci
%J?ilC`7NTA+'P.McpR3`c'R0LdhC^<k=Iu-Fn#XED[s?3"H7X"c-1teqB`bon!U-";#V.L.0Pe[K-1Rd7:`Hi*/Yp9TqCE"s."\7
%nK>8)'iiVX@`i;s>9pR2#P'GV45IJbenTV+N&Y/2'o6[f$\)jCB5[_EZ#k:D'&nDY,0b$t!ZIiO;&hJ8^1c29FfN3C'*J.-ML+Qq
%+3Be<do*ILX\^U!+GR(h%?ePLY5/-G=;`Rd@jKY1rR7A6JgI)M5WB,81?@=7dZ>sYAiWS30_4D_%CQ)LN-pED`fT`cq8nqlhm%+5
%SW(e'P,Suk[]u#(i:h\uXKh#oUA.].1u%4)'YE8W,hNaJC?qkPrkfU@?V$Rc5Q.pN:kNn:V9X:*^hC8Zqk;^<G)P`[]CSlKI=;Bc
%hDb@a'#fa+^.A''pcoe:Cjk7.Ii9%4\(^h,ACGF(i2GFMjK)ORVdd@8SRr0BelP6G>[=Or/\_*FD5-i3WHN$;NPXZT9^H1\6_?:'
%s6Z3'ZIgmtrGUCJJ'bsKU_MGX(4eI%i/rD)XWo9=b/J\7Dbb[oGI/FsNL6mg\WK(^ENot`B*5m=:Fl=fE\ab#os-CN;)aCT"QiL'
%V&?YqLtK!To7"_Om15N]V[`m8VMi01^-=Pk>AQ-bhoUQBCXRoURbalVqn(,FS!IF]na[,p6VHLL=qme/Aq<=(aVWD9aP5qh?8:<X
%BCXQ?9(4,'MHt505B23>B<P2##8:tD(h3P[f5P7CVT:rGmGERlIZ.KZbNec3Mg,1H)VUi)g7;uBI]3*e6iSha9"SR,-Sa4uWO5"#
%2I:hH+R#$A>;/:KFF,'F4a\lOc-cg+2rC6bMkqC&KjfIpJ]$@%VVStD64H^*\=!;>Z-uG%9l8s?8K"/\Vq-*lG<jQBgCN\\DpHA2
%.t_$i^-gjKj(/@/`nt2Xaq;8o0t)t!6+`olMtHt&K>1.LG*f2=SY_CQ)]O@#KABPkq2,KhZ8[%D?TLhS/Jc[q2T=``,.$!0H[T(B
%CrA4>Z+9+uCos)kN2r08]Gb!V4]u"GOXggof2Fc3m9Wp3npDgP?rE#1?75K;H^s]I<u5e=Z`?`?Xj1ZoMpK9tX,G`;[VN;(bri-N
%Cp,J5l;>!U=t]!$af3;kF)=u2?p^D79J#DN[;PF.-6k/WF6V<=FsjtCe:!3-X0GtS-caOgch/abWVYD&[orQLZuI*MkgP0blh#0T
%H2@38KC'Fl<gR,"2ld=WjD-k:2pj-LY>lWO)T#S7rbep+Hal)bRJL[sI,Q7?eBL2A9/_HcqoN*2D832*X\>:RJRHlrm-WhM'0].)
%jYeS-YtQ?d*`!k(`YrG$kJ^%(V?rlmj5k[A5FB_[ah,NgoRrTjB6NJ+j/^k4P<u_3RpA56*.(j?Q]!NlW><fECd4>eR5\L&mFq@6
%6LAs&P,V6Y9I8E_lX"o7B^uTk0XJ@#q'9>d[<R#(RVn@f?K8#U`HhE.SZ6Behg#dtG'S_Z?PZa#A3%-P3<dXkWN&,q?=fgrSM.i'
%Z^oTf@]l0!lhsnkLPtPVea1<(fNEYUo^UIogr>Tt>LqKiD1(TTEj`\U@lH74Eao0Z[&dl[n5ujCR6#"(Wg5Fo1Fcf>oX(pkZ(&"h
%gjF*UZ4Mq$[W*4>?ej'Xe-)Z=8u!>greN3DQL(NGZi$,'T:O0_S'h!7hZ+!IpYsB>q)P$NGtcnBc;I;nQ06t-3mD?W0]$-UGLJgX
%b\"58S,O&QFQsEA<@,KZ==/5^kg!0i.oKZQkApDYpDhLBb\t2VMoD[cN%1A</?S+'QIElMj_fBo]Y'FljoS*sX`#i3TMsr-It#/\
%Mm-`JGDKF@?i$N$ojiF**SNq<pMcA#&5$Bdi_4`FD"5`>&rmCLjR64K1aC=*$`i[gdtq>^3Er1U$N+(3_$SE4`A>d.p,t<h[m#Uo
%LFRAT3##&m(f0h%$b8=AGan[6r3PP9bWs@Oe6H9AmZ+0*2nQbafR.n3"/pFAJ)62/lkj<f>I'QDO/h&F==m3B[Uug@lL6Q9ns3m/
%eTQ;bX6ul$UQl[T7-N909AaSAU:I,=I0!Jo/",.:ejV(mbc(e:Dm*C0^"^b++oAJ]G\jE[.:as4(F2R:3JY"9?)>jCK<+E`l8#\p
%4I1<&#abhI;;KEt]hDC6Y(J#72SsfC3,<tJn,%9>pb^T.CQ4Xs0YSrZhr/*cUXOV3eiGZWU,-escY(6Uf),>JX=d2\!`'o`+Hc'0
%;k',CDUujDOD+d1S_0N>leYWJdms/%\bTED\mP_eQs*SUj.5>mlKRh.Z&fJ+c=*0<\<jsj0[e+i20X=S;D"EV_=tfoq;lJAbs74c
%0,cQ.Gr;u=Z8+;&5-25*#MU75f0L*G8U^@jRnRa+*&V,m!K$4_goVX`ah@'7gG'XF+g[BCL\0*`O@hJ`'^fRB:UC]F^l9hJQ="t4
%XWmj_n1peb#.i-4>$Yq+kDm_75ifa!Yk\$=Ho\#+I@EEh>A[nd[=\g(/r!)\F'Dl7M8E0IT:p1;2ik9Se,FT)FWscAoTFH*=+*Qg
%_+JQFY+CsAp&=g5+Y2B?Ur?k\4O7Z[DmO73]=j)oQ@[Ieb,^gD<nQ2LFsV_l__f9%9N-Q%T,ElT=mAS.WhXE[JD[6&HSe)*@2Uk#
%H7;_<INj!Wmk.giCpJ^,)VZJ^(X85]<kJ<]bVV<<n//4Rns?*mMpqlrZVPA27Gr&kTX7i1maUS@Q\>]+7bAoEet7]:G`O.UoOkMY
%T+5QpjO#YJWRE&?9,h$uA(*9SeJUb5*Z#>2,TICgUM6"uGLJdmj_rK>f8&na,[d'bLLE4e^A<K27L3#3(eN,hqL?pidF;t17DLat
%#J0gNiI-&(B$p6"g6\58s/2^#:W_W5["44GUODh"jZV_Zh0b'_Ph@R,OMaVh^M@YupDI;pYq/Q^TeZ4XV\*)JL<!C6?;@rdQbIl,
%X#le7!tN]&d*XK?M3f,*1=Df!b[RrtrCDka;RO+c&2%\PhkGI*&`431@3%o>E>]5"r0]C;bsabkkD58G`$0%IRXnLbVuel`8"\!;
%7!mJL2#..2r)m,j(oA8:_hZ8a0K?OFn+9-HpiNQ6=Cph&VHKBj]*#G8dqZ[-koEGK(%/ZRZ`B#@I]W":;"raT@V3S]<dWNDIUn#B
%Ib>45cFq9hp(ncO@_?WfK_7\'_&,D0^#K2i*m<>=dt`pNCpqbu^'<\K\DGijHLZ"p.4m,[RY>%5X+Bt,9ashWNNJdI9s<[=]?SLp
%fO8Obh7&eu]pMi5=#UMtbuANWSK"ICb9r'ZI6G&7g@KC1*X@beq!HmD#Fm`=.6ZgnZh_MBF?9n-52=K*1VO\d*m70,kPLF$0:!BF
%oKV*+-Bhr\WrA?Pe1f-/X4iukZoR.Z0;8RH!qtO;AH#n2O.hKd5[./><*ir"brMF!C9?O`fr[SYVR"am'?142B`ABOn$el0T$;c$
%g&%nL#Lc)d?D;?krmpTV6IkpTDC_KZJ4aEG7/\06=dpW#7hQY"LK/BuQ^+hDm,M$Y@qkt+T=nH#peor=#N^M"OaTmj-PJ/!&&=;m
%O5MO\@pl;5lh/`@)Z`->VNuYAb(>PNG4%STgYFO,m+3$]3WG8_Qe1X=Nm^&`3;S:ADrp--f2pnBK/kZsHZif3D,,ERV,uCF[^Sj\
%&7PtF-%@Lm.uX.iHK-jJ4bVLJ4pgj65d7XOlP\C!G\lfD'6B+QPD$9Q\kRs<>D_R%Lut&m[6C1a_GS"f!Jdu88fkoP:5a%.P[dF=
%Y-!UZi.@k/6sg<=I+_.7X]:t/W_^%ul:EP&V(U#PcX3NGHb9^"hrKFc@caT<,;bStO,>V:K_q=[@>:Z!R*@"bs0JUm[2.$T-rX\b
%T^-,FK.bs9b`3G/NSZgj#[`5`i.3M!De9LQ=$^+u]^FLH$Qd1$ma3Hq*dqJP.&RGu@\K4GaOSUf7Lg'qj6XlZ^3KYpO69<bf:D\D
%l`OO=h_tql>AH)YrCq2ds-CXcLq]t!54qeO`j)G^<I-E%P1?>RkU&tS5HG@8C^*E,,o^@HY-/STj^d#bH6TiOT"Y/lN<`L9ClBD9
%\:Tu*aPc/6QeB*"nd=!L@X(G&1-An93NaI*>M/"nl$).tZ>nmhOAK[t>R:JlY`k-oWe\=69!n"A\#ZFeh6%p;eCO.oDS@7UPAL2>
%%\"F?DNaTY0ts2n=ROFp&upoQT-%?*.55Rupk@LnMD)1V[Tf-0f^B<MYd;LMJ.D'0(ME!Mj7mcr?F@B>l$74r,JT5!NdMKD'/kB@
%*nl8Cgbt/Tb6KgP$pPH";ea&]MaruA_W:VI_(t[kC1^k&$MEJ$1BL*iof0G63P_Tiikp*,EHU5V*rPulj(qoV4O+?P0LimWV<QNR
%,4'ja;Er&Gqt\\1eEeR+T*J##)b.Bp3QeI0X?P^R[Z25[L(XmE<b1kO@pU-NNZT#(`[5W_/CXU==Z:]<jC'@>]!2)018++*][UVg
%OgP4!$U`=0GWT*Q"1]HEEnU,jM>h^Uk0cGONdJCAEp4"kBP/BmO,o?u[-5O'!VN*%5&SZQ6T^9rb&F?MALl6J?b<uNUe-rQcc>1q
%$onJQq8NYUk'bm$IP`;JKf:@_qSMA>/ReW&?EPIC/EKOrQ`X$h"O'Q4hkdi\p="?rq5r2d9P_F[N:[S&cHWFChONrMBSkllEsS[p
%>4ul9QW3<dE@haBOb%<Z18ncAq>8*?*L+iM14NLjg.*f)J<69]LpRj@g'diPiYeS1e;?:obO/t<=l1d>,l9Rk!jiQ"JqTF?5e$S6
%p[E.;5=)8N>tW%=A..b;S>*Y*LIpX>5;'<Mfnbs/D.?h2</c(u80u&1V^jF$9?XFW9EX9j1!!^f9:#bHj_ATGGcCPLWk7-@>5Dr'
%(1K'Q=._AWSefYYm,YPf"Y1$?_j>KE33C(cUbpFoCX;7IZcp_,0n<fSY42(-19Z&JrpTPqmD%UWmLa0&.?;`+/qMI+?[-Q\[@UJ`
%h)_b4A#PdNaUX?9r:UKap)%"^>:EX/AtA4`K2V$?cZ>BTNcf\]3`qlmc\d8u88X1iDrYSLa`b/E]YV\+Y#iABSifWQQf]odk/+%^
%YuYaXoAO7DFY3DNU*8oL0O7???S,W_O*\i0CW!+R04-=bZV:>.ne.L.O?T\JcDUER`ur!X]E0rJI4%7b^uZR,kSsn0*)n*g%!*%`
%%,Io5V:<[CE5>/>`^f2>_WSDf+_o\WFF:)&Wm5f92e$[[q_5^-Z<g'D2H+g6Iq,`Ofr_uL#h/G9J=2bJd`hJS)2q%';N6a&6m8&6
%Gq<K-(=`C`3pT<GfNgH:8Bl!26g[$kcg@_'0;cQd%?gld'cJHl0\]Q1+&-Y8*n#<f0-9OZ+7V5^P4mLG2D@M*Qb05&N.!b3c?/nR
%hQ;2\`ah#V1mZrk2qDX!$;6(nk;OrMeDGHW^L[E-?+cm+%8CH/I("(,_!eb!Ea(KCU+kCc@"XHVoICL$fsnFcDDs)Ef"br^!L)Q:
%QY=S`7ueTY^H7;-`l@g6H5cH]Fm4'+I5!a4$?GZN$uIBS2raEh\(AGuL%g[5Q%dc/e2d@#T2=77.R/3/\I(.1-]LJ7#l8!Bm$L`;
%:oa2nFHBm/6O$NVAKXngko2EQI4Q2,%mV9ZT$2VW?kU6^e"`k^/oc`JOP`&-^9\/Y0ERN?54dVIB-%p/D_mbZ3>p.[mOa0#[fcK<
%JTg#ZNhu!R97=RII4`&pRN#HN0[S^<<lpUI"2<YC.[];@_G4?@V2pZb%f/edGi+!rbO4L'*]#H2nSr[,V_Gcl1aI"#AmptF;s@\-
%,E)E,N_,JF-YB8hCm@?]r#3l2f,5=\mS>FV>Pi*cIVRYAEI*QZk#H26U2\o1e6e]]Y],&YJ#_A^^LN3$DY>I<WV#&s9g57mdq!aP
%LTrbrAr**<:Bl#6@X%eG0Y<h?>b\CB/8gI1Y&f<hjQ>aUH8bS:RY0o\d+"H`A7-U:gbo!!D!iU*\;+,]YVAA1]$;laEuUBsDJjNA
%\j2\I>W(*$6]kVno`l.S!sG/uK]Ok<?$1.mVdFA"a1q":I1+LC`UhX*bkW[N)fYuN.+9)F7c5(1Cn0CeJ#SLtH4:QoWSF8P7[N7`
%f/9u62Of1LaW_lDaY0R%XiTd0:D8`jVFdoTd2^[b^g_2eqP_hI>&0,T-Ml-.KhA1h]YKH3qjDb^*Nu#@Si:[##Mi'<UhQ:ahNiJA
%qjZFU<cq)5e:]*77@I+m/3EtQkGV3Zot!SR)Tbj<A;N*-e]DpE;0qSu/OMn^o%-5%@7:USEYuo3#<bd'q6rL3dk2sO7Aju&I`R@0
%m\;F_=af.]S\La*3S'#Kq_PGn>@&]E/a]tN6FoS!RAhLVYifV6o49Tp[PGpI394U%h0dqGmBb2AfQRR2D36ptX-n!SDem%B#13T`
%K%$18`O3lM(sSC#W`P+tZfZ=H55u&G%%F[&mJ53;\3#P*Tfnd_pZc;XlIfj,j6a_V]>=B(&SX&W`FcicB)KlubY1_i2@e^g"5cT=
%:BBpF?fi"<_.,s+M8TB#e8FFj6#(RTe_=,E"h:Qn%GG3HIFq7NctmI%[.'7DX7CH:l-oJeYh&+j)d[VCJ2kV6X]@\5f!B#RB)5q^
%\C@N3$MH.9RKFrTEjc\e1T'a)hIs%[2t^,L6W7=r+L'Hp8X!69@_%ialIeINP"L=\A)n$UB0X_=)_81A0EQ/P1<"BR1\T`9XNh<)
%GItAi[sk7kc;.':Rk!P+5cNVqY9C_bdBVq!U(oNf1L):3p8SnJDLPU-jG.sLr(]?WmYfBl0--egPqOeC=h],9fbtAsnlOl1j&m>P
%[P#rF\2AChYfd!PgooSp=Sb"_f>>D@c:Es:72[^LI",H"W"G;PCE3mjYT4]ui5('1FJW-?NpPp9[e(08<AdL_pU>SVL\UeUmnrVY
%eX^$[>AMcil$(+Jd@tWCB2>p]Ff5%:)#UPh-pKTDqos\][3+-EQ&G<2mPDU"X&FGb,/m?\Z#fBg'#otWk1[ehrF3cIZ2<&H9c[aq
%(<cHhrQWPllsb6CjQ?3f_o4r^U7KFH4m\,EMoFLSXF96M-KY*_lGDCm2lma;Y5\e$/p^<IagLNe++O2#Mp:&?@^4Ucd9(42'1GRP
%Ds-lokl20jM=K-i_$5N&j)+_c(dgN1pb6[fs,7.tRFUSk=jc:D2XjdDDr,*a_pfD!RD1CnCuV(FoOgVrM_"ScSnWS"=^Jm.bOfF.
%3"R\:0Kk;G0;X="k6Lc=PJTO]Pcme-drY$!/@HH[>aouk(%>pT(VAirJ/utrT<qQ>9\)T:4sUtn>KBk"DtrK%rgCjb0>C6ALEcX0
%qAK93C=Aee2^,7sq60`$T[I^UIt1X94b:iI7LMl"?90OD=(Xm55-^_DId;N[ccgFFp[h1o1qmp_<CIS3Xe*$KX:[YD=J-=`VoN7B
%4LZJWG]*Fo_7MpCLO]4&/DXW4C:!W4NY<4q4<I4,k+>tHj6fU648p<B1`kVtK0@*)QV.E#pia:ZfGPVs>fZ:=Ltr*G$!WtS\cqk%
%br$PJ^a%RFK5WXXq[:tC1mrukPsAUC-J;SbipndO=BV'9jQFQ/X_9ckpi[V&/\e+PPKi^P[EQ%icb(f.k#U@lC7,*[l48e5)]Eu%
%"dR2r2pc#p4YVsUp6=8\A*rUY!_C+DL>`:VcYjVCPo/tTs7g+'ATK@;?gbA1`DU2e_,_sI<q*)+OJp>o'Yc\Yq,#./$upa^+YNHR
%'g$]MSfNpKl[,:0k'H9oM_X_"hO`bq7!NZ>jq0V"?m0+Hr^:Hk8r#@H.&.$:0_]`(1`!$Q9V+JMV-,m2[BCll3@1gs0!hmjr;L*k
%M>ffZr'tR>L*^;=oB"TVBP%-&(<`7?+Pq9"(0fJYi^u`.J^)EqN5fIQcei3<$fNWK]/a/1@_$^Z#6+b<eI9)Te6/Le#=J2>^onAA
%jKZhZkiBuTCht`5)]Ru1;J\Z%(Jgq%0R4V,>4C*Pdjt*lfM):C)4TGc9ZH&sURBcil0W19ELhT>,tj)_f_f52(%Yc+%q;W8X"c?[
%*KQ'6M2M+m9:IXn2g-.hm&h?:<d-q_/BIM:_Fa)P[TG0B0u[%SB0*K6]X\h_3DDZV<Z<S2b:Lm"@bIfe]3'Nf4WZ-?^TGN,-X,-,
%NP3nFCb*n+a0pm>GHothpe5LR;Jj>^9'KOGBOaQP:;$1^fP0f"1j7`GbJu7(;Aab>?([bQf^2!'3d-#>cc&MSLI\VlH##P9:g)Y8
%4Z//RfZU)"*d_2&G`+HRP&%>3o%@6K43,rC@iNDDkZB@A1HLpARiIuJ3^4LAB32an6tbM.eCuE)NXE5d$Iat1cO65;_=#hFki+qh
%H?=G4\2:eN^3CUA4rk]((2gVBkf1k:I<>@4I;a52Z6MjMlN`EsPO@]*k_06D?)R"`UN]55]@#%W9`;3*_+/8g0Ym!VlXmN3+)Kjl
%h5M&F2L<jo+.JKF:Lc2gdb.a^#eYL2/qPg-;T-V-f4&B/l$i/2D"[;nE\+]3\MpsGj;#\CcX'LZqpu'nm.`T+(qUWSR2W[D>GG]I
%rF1,TqKVWnp<:";@@FI@@J4E:1RW\3+5L.H(n[8?5*![%f:L!q`NA<C5BcTY*a[a;NA#4X@cQ,]Ri5WMl,<?lr6-6ISElujc]SZO
%j4En#qr>YLZ)dDMSZSg[QhsNr][^:\:;dop==c9`H+pmR&arGFq7U!K9W2hi5-_IV\NH#E*f_SuSdq>=G.(:)'1Y*o3cQn.4eK6d
%^V!9?Sni*#q<i]]U@h?3SW$R+EcUHAE\NoOHu2SM4h<V`Yg9I!=)2M,2CI,+l.4q@q+G5gG]GDoH$QVpROibB3VceMY9k4!ZfGXM
%0lo61ff;]!-*$S";tBQ-3OO+9GWh>FC<EN8]q`a"rq5j)e6-Y"20IZ#g6m7`(\+KVm>\`Wm`Xl&9#IXi<,=Vk&=u[u:b>A=SqHHQ
%^9DiG]`U$1qRCN%3IQ<]/5K>*>MIX"N2NPbRB=l)WD']^1S9Zqcfjc`jdDCg:3't6/_?ED:VKe?c8W(B1\]/HekBrV(oNdIWsAXj
%7.)WjS".,0RoMDX\(R$hq(fQ7`iHENPKi+R7C.;%>H/LCB4#C4=0p`Fh,Si7k4'eDKB?HeEIG2.ceWpYn_L`\4ash\hMrCB3tq/I
%SKJg=NZMYiG]*@q/2P<S)nU/aM<<>n^/LuTm?KbCEu-e4@]k)3noM"2Qa=VDj7jp_Qro@roKjam8FO9`-+<(Lc,?T2/J@g0B01s:
%jPa%3pNYpKj-cs=Um`jbPH.J2S0kdh3dm;Vh-M!q(:R&iPP*0iI=?9:/BoOP%nlL[A^$dmp==0FpD1>LrpjUkFrn`PT7>V1/U>go
%kp9,qN4jHdI^.gJG5'%ie&U73=#po,f78_2`5XWg!uTd`R:iLoR4#F?oQJkY;fbuKfd:L9n"90-[p#6le5Vqk2tM1+Q+alhkHi8f
%?E"u[rjFsJ-"_0f%ADk,]u^'E-XpFq2T8BM^+,_`*s4NL[c_'rpO"n=Q`28o.5rp>U[ieU]IU$!iuQebiuLA`1>DK>1Hk$,A[<'L
%ao("S?VW_0rnH50<jT-#'c!tMF]HN,+0";<UH;JU:Y4-$GVQ11YGK\+9SFr0f5A(Cp$"5]d?Slr<d-$lCj,NtJu//5<j7k6aP_)a
%EAsh5XZhMMH`K9ieZJd(1O7[]&+WLhiI,hg3'UN6>F;Nu*%WWT7UmRT<n8$=W_]aNg2RH5*K/r^p#`!mXq_^n\Z*m6EUIFcZ#[95
%[Fd'WB1q+RR(p"sIBG0h5F"0nMS\u0dbD\$I4DLBO\IFR<b>7A`M[bAmW<h,e_9Z7o%_r"HT@?Ah(8#4c#,)i?1&gA/@TArad#7<
%qm*N?gV-hDCMiOD'FSumQ$02FY0QL<c*+"PQs)YASqsLL?=-n#f^6pV=qn/Tl$VUP0n&b?p5j`p.R&FHs72Zd%skFIXd7Sagh,-W
%19G^;@jp$km]=L,q=\k&W8$.P5*XVnF5uGs8l"jBG&j(!a^ji%lm\K@h<u?Fk9lU3q+NJ(P<ZU<V=V+Jf8IMqflO'q3<'[.G,m8D
%L!j;:ZPHc48ZhfFi-&sIAf%@J]9t)9XM)Scg?W(TQ!M`'[pR_4TCU1kYI!oBNOe)Ojc/oVbk&ir<B7\]*3Q\.B6nrLF1F=Ih`NrK
%]%MHlXY+Ndmp1(E;O=kj>DLa<#f<q!h4>,1(YboNNocec7oS[*mAJF6kFEJ+45F&BA[4D<-T/X0S6:g<`qAB@DHc/*G0g)kh;-\Z
%leGfeVm*[t]CksUeS&l=mk+Pp[EkJ&A,@2qf=h-pmVV\@G4X'B#R\i(K=u5M!i@u&LoZr]l1obrE()nT_p`"Bjm[EeAFjKK3dGbQ
%2Legi]%rii*QLXQj2]"+b0ohZ_Xu^TA+u[=10Zp_43:`E/Y$&eXWF">Nu).urS&#Jh0E2\3IR:=5G-22N\KsEQ@=3@3P,\H7aKd!
%bP?4eIe.s$(S>"rIsfou?c;ERogS<2Ui^Tt`Il?9Z1`.In?flLGs&R_]R7uMCgXH&cKs)IGeC_igm480B2[jDF`sL&H$rt5/`4Ka
%P*7TEc/S.Xl/q'bB`"ZP>h?HjW5``L@[@V72*H;,QTR:Mhec%CI9/U^MVlb$NS])l_-ZPJYI`iTpdXMZ\?^F,<kM\n5:Z@bp('cR
%L\ptFe&pp(WBFHH/-idm]F7Y$lEI=0F).OQ;0.fEQ%QBoY.U?4buEf%k?%CVQ^MSO]6O)nf&+U\HY;NTLR3crnL1p"GhbBL]R,%j
%1h0>@TX":!5Q?'+<.AVkC[ud`Z$()lE)g]?DPLY:XS0gVcUZUWfB:`F7d;:iXB/_'F(tU$H#=A_9DO45IaMZUf?s3Ajk&%ZUY"+%
%?J''f9nuZ,r"Qb\Pio_ZF&"*pc-:BNepJr!0=A=!2qH\I]";l<j0;=Gjt4)Mp>=.RMPKR+864KGad^cQh5jrKbY1-P_nh)AHYb=_
%%RqE@PB&@Gn=f578E$JYNmh))gHP7;:pW;?n;GouV/,jNgMoGZ\3$cUmbms`hd&3cD>R*[\nK1T;mfOE.CQ9%h5BOoI<K"o;siQT
%luY_rp/GmfFGf;WNt`NX\;qNmkB95&.!G+'IUL,XHC5a5l-R68Do_Jh)YbE!hFO[W?(6h9C8FD7I"]ZsK0C&dNKID^oG\Z5iS4]4
%*"C8F/WFkA3)I.H;PU/7MBhegl1Y^9EjOD5eSAafqJ3!1I_l8,@-4]ef]WiXB"%:3#(*T>k!OVa[E_=HnUeM_T)@U7OAZY70QO^0
%CCOWos7-/rp3Ei`qqEJgL<_LEe"^Gk.7`3'UJboXpWeI3ppaUVrH"41rV^dmcrLc?m!EF'YCW0#^fc)1me*mi7$#gq@V>>YB;Y]:
%c$/3:NR\s)4f@;nmM?tG)a?GQ2)Oak[h&MKVM/KWHWD_heuF5s`<i"mNq)A\7b7tpPT9Qp+F3_4_l']:rJ:b:5C_8#X`p\rBU5:E
%c.?\?R)AiRaN'&W^VcgpG%#pAo0s^1M_4P%D6<ZPiUQ-)Zh2TR^6U^2"8V2VF+\i'YC6R\^IX][J,P?,hD^M!+R:!X4S.uj5n:YV
%aSJ]F-5;S:o_PZrC_,_?ob2CWqbIW<eJ^[Ahf#,dr>+@-mG^@E+dYtHZ\j""hH_T2`IZ82>I48`W7&Brc%]GQ6n7i7b!lQEVY3j`
%p0!6U0P0,YFq9;r0:;*im=(]]q()18;l;Ij=m9t==XnU(MuT_F;XjPedq6?tnXhn9^>Sn5nU(m[^L2KEHD==A)=jBnImM/J5AU0;
%DXg94UkV*hSmcd@/`43&Qg`eiI4oenq&97)Pk5'BaSd1abqZ*(qPNjsYCR/:7Bje*=3\LqbR]bAs)a-jDMES?o8\,C4Mk^*H\cqE
%IX0hb-2p'UE-^nkp9!RejuFK-bl/DZ(Kfpt`/\WN.EAVnKj-!LX2e#Lf2AAGX*9#dB\r:&!33e[R.J"&H<1!jb5#E;!OKID1QS"'
%;WnP]pl2r^N.D5\nGVV^c(hWF(fosP6HBR;lehe2'4WA",DYk2V5-%>Qo)!2iKHRc@_&Cp4sla`c%Dq[oqO!s4n*6I+2)0sk\#Ca
%p>&NS:>h2Ki[[0A)>N;s;IP(N%lV:ZIV;uA,P^$@grJ=Kob"c@qTF@^Q^SXKPO/Rbl*.D<IXCBk,6r+uD/*M^hArsdM&nIi-/RV,
%R&BJHo=t7c5C.hTO4bSW,);7CqJBs/RG[&e;G$^*AF=N!^Zg\A3UD4@q#(Hqm9q[EdIZsZi*VuCko!lY)Zdd`1NIWuNE#lY?QT4.
%5I_J81'h9cN-R_;f?>=^751'"blS#(Nk]PZ8%<.lWOtJ?bYO*-RK<nIZ!K/<C&C!X@&/b;4eBS6?Nt0L)j,YA(!:';^S)&<ZD?Z)
%!O+g:RH2MtoDDE_D\_1@98h.*b.S?5;HbDUJ''<u$\9uH-D_gBOIj<2IcdN>%i\pX2"a09ZO6t3I?g$(pZ#tQe=fYlR:H>GK&2;g
%(>A1-.=see=G3md=<>8&;@9'#r2KB8rNJ/%pCQGjd3S=O>rrP]_hQ&?p(i>2fhZ?3'nH3m#WkJ:#,D=S_GDP4?uFp'KhW+TL4O%T
%^uP]q6=rKVoS!;L5c7cOWpke]K`n?mhdXVd'V#3,6R2a_1]gY)e"ItIjH>p&21m=ZS:UhQ4^>4GFTfR3"Q0>W8gG/#RQth`b4NX^
%"eH6$#$V5L""+W&;k^'[]E$'.j"HdXJ@=ol^?MZ.82B:HJk@.kCo@?0%@VYi/e3]fe.YT<LR,B!@c;)k:^uIc%0`8CkS\KZ^2Yh-
%"<8!8?pULTqSLN7a)gm'mX5UY&Jcqu$^-#?>dJr*di->^iA7^(0G2N_!=/+N2uk;r!sMrg!RLO'Y`jtFc3QrHV\+*u!+oCI=Mq#D
%R7O'RnYAEL3fmkXoC5>tK.r`5^s[aup7uQJ7:9La^lot0#?4*qd"@<h?$@>6<<IYrJ`^hs=qAF,N'dsd65c-nlKI\A+eO*Hi)7-l
%ZB3Om']?d)+b<KW:=B251N"!>-Q)ni+ffSo"!O3fTF`%B%$&pU_S@G7aakp%E4P?V?lrW$8-Y&/O;7u#KF7i)iW\Hm!h_]1kPu4s
%ei(53+^_*D8-!.T+`hlq>f&5s`=*(IUEG6H%j737:kn,rfBP`B)?(Vg<'Y?rF7<(C%ql>!*,mN,>/SI5OMhYB^'a`Z:bi-5O[_<e
%2BZ!F[T<P%V!i*\^m]qOk@?"5OW6fM%Y<V&P/%.kJnNaJ^`q:BOc:MV:4`L4>C#Jng&Mn=I$)k":gd9J4#@M\_D?hH,9'9l$N(B]
%7$:OWO$Ghl8HO_onr&\QJ5U9Y*m$Ks8KeNO0P3R9aI*))!erF-.fc,+g\)2X-pUU$_,Ns*+Nep?@!C]OTaF9l(]^;=h#U2$&^$q(
%/YO7F0T_RJ_NaO!bRZi]$^?gYoY?'T,`rBU-1$H)$QTWcf>*d9(23aY88&"QP@e\4q2@iW#a#_I&;I)V0G$cU9.1@o*iZ)')(e0/
%d.k[,!?NlR7YXS6a[2_L$%L[N5q[4"=KiqbJ8s#i#Qt%(%?-FV$daj:%"T<"5*IT%8LmUI.H"5L!GRou84K$p5[eBVUQ6>@Bib?#
%)`\nXnPO>eL^Nd=OUf6u,H<B9N>uA7913h'AoQccJFa)k1dVg-Uk10h414(TDifkqfZib%^lkY@PH[P>.=qT>PIad;6Bq]d6$o7A
%r%NpBc8?b9J8eq/i;p538f!LCU%#F?"cUNVUOigKEs$^JTV/k_3-*cE$kNqc)Q%liK2l"o!P7)^*a1YI"5=,]5FF1GD44k*H:d31
%9T`'/J]L5OG*<0JUSataQ*G!h:;Rr8g_qH3+VkT<JX*j]7)76&8SK&E^b(LlJVEoAL^7M!Z`k&IJUegt?;RsAXam_?(?PM*5o8H,
%GMLt$L-e06P/`TP7M6j]-\Y.1l^>:0=<TsAZ&'P8B`M6h,7?cAUNEC$?JpTn_nk^TAp+c2NltfZ51'BT;_fjG'M)#Po["Ct8;CK4
%FtBquL;C+@D'q7fkq/.Mb)Z[\0auuBHl^j:,q3K6@aRki@Rh<<M>";7HjUK-9NFM:QCXjP;$`?=*@?;"1_##q4LB-s&KD^B!5_"N
%l[TokQl:O`8lR'T_3d`nLZfa>0dh0A#U?g'9NkR%)\.k(!ihSUk7N#nB*i=CqbB%bZ?7EhLsN0e$.bWS()5L!=kat`0&IKSd]F0.
%)4;Tq=30S/R.@%k":nGV/&8:IE<B=9=_\NR`9UVH64&Q1:fq7DJ5?>WMRnF>7"f<ZT)p6Dd?^K6K7X/g.WB#dP$R*#!_3[A.1reE
%8c&SuX@Zh7&4c2B)4s<Yk![<$gMhJe6Xi<"#TW7OFUZp`jCj(SU'tskRfg*S0H(O_%ATVJk*<<"&mPlW=rJ/G=Fc/qR[ct6)dA(P
%hb=SS_%eh]@fmO`fE0EM?uSM;>FPX%CMpMn&&toC*L)?JOmWF*ouZe4^c']^W!Z?di.B=1n]5K5q#Mh1Fln38!IMht!7MK,$G_/`
%3>jA].kpNJPdQq,[LpYrBs@".Y)^^K;"E<s"^:$5>4Td=qI!DCo8ThAdi'&2W1"Zh$gg*M&pnj9%2s6j%&36UhuLmG"JeSO2^*'=
%4')Ck&Y_a6s!1cO"I!LmdZFOm87Rj8P85((E2F"o6f/eG_H=0rZVs$ZLn$bh9$*U8n5M5';nfSOalj8[i<le$9KsU6*1:$8DJo=T
%W&-).E1p!)0V_!NR?:rF(l7n$)K;>Xm@#n9q9k?u5T12B%/iL:)%_8J"4:N4(`;uL)0nHt`^Q@pLXJ/"4t0Jg`6$=L)"WaSM.Ef[
%#=:K"0&B[L!tj``8@s(SS/UlhbgmXS_.RrY!$rgWPVHb*([s+Fb:MHD?77l:Ae5I<nSN1uf)fN/9a!5U9=Ib&TTHsl*-a%hU_3n"
%W'QB@ck6o2=2HYI)bkVjgf"`Eh)HNfn:R,0B-R;qh5(Yg8I9+E/;C(FN/\6T,qq#l?^-+mO"9Va^o8B]jtqm23to-Ce/dbg/BG^/
%$8hoJ_l@Nk'YpLL^r$CTZkIGq/I\#s_AkM-+RSn-(S=h4?-qBb#tdt4B7M]Jg(&)##V!=dJjDsYGDL7HZ(6;J#'t/,3r(U0J9mGO
%"-^a?!>oJ'qYC3S>l2O4%a`WO(^nIR!LW>f+[HGkB6Uu0'c]5:^E=SVl%(NB(s#%a(m3;P`]5JT1rV0Rjgp(.'[@UUc7P-fk?Ad"
%UMjN@,9$`<D^_]lM-s,(_Lf=mD5'+&'GDCKW!!Y9$D*J#=:(osc.4lZP'eMFHqo51NhW-sDc0g'lZ6M561i<NB`^B,E!T=V6JTLk
%d,lS?WA+/kHijJ*-7p<K\3rfKSH/J:^mq2VY*5!F6c7bnG3ND(=j<#QKUj*ZKQ/['pjHk'_bi,ro=/^H-5_SW8E`.GatYZnQ*EG:
%g.69QrQke:!;=bS,O66F&5^CkU)D=:g44l8nLJJ4@t]t%9/(/9!=U5M(f@@HYS>BFTqUl#1GKt>Opu2XX$t#C(r]60"&oP`,CpC5
%!](9&0Hp7`.'1c70J")\CT[hsWeaRUOrb`a34BJ/j!4s??'rD4J-+F4Y"MDXDQ$C11Ra$A/Y$fi8jnPpfDlR@iu)k/S(u.LcT"dP
%?d6)b\Zc:C%-\aFEoR6V4M3@OGouC.C1s"@$Aa@i@G77hJP!HUfYb3:_8'rtY*%&4I'XkMJ7,d6ZuICVoanno%d]#U_R_kjI@HdS
%W6u7>U&Rrt>ja-"H9rd#bp6a8R@e.p.;mJZRa\2q,DAZ`\H.H-aAL:bFrl_F-mqTpK%"=[-jICq,hSM.<U>a./#*nSPabWb&3=5Q
%R=Y0=p$!c%bUs3]]'UoSb&(WJ@#K9&4DA6J"j97)D2i&Vf2No;6\;B+AiFT9_O*EC&8bO$0slh5'm[YKhG^+i5rmpGKR(f#Lb(%%
%6N^Na_nmP"R/nh_/@c#6KQ[Mfjt+aO!?Qug[>\_L4pc$.903`Q`7ffr[)c(8#p9<YXYA?g#fqS7M1S9pC:>9=[d<(N1!S:7D_];[
%.J<%rJDQ.9:q:lfF$c#2!kdTLd]P!;q%?DL_sQeQ,[CR3(-$!giH$iB&=[(jBV4W)O%`kgU\N2A)35\(7n>gGJ5%7*=i)#o,;4bJ
%&ST9Jf1#lWE5oST0b,=DVut^3YX(S=U(!"Xb,.9&A6O[YPQ3LGkWso9aH-YgOdae;/#Tnj9/E987.Lpa37ro/8;1rUOHHCAf-0bp
%/ib6//D`^P_HVD$DA31V8L0i'-7*WG'$RbI15Ma>eWTu6JPuu;JH//G)(?<"/M;Hn'A]A:J/p8lC,N@5[Da,q1WncS"=I[iSUcg4
%6O*Y.KVnAT#I/qa65cX'jZKmqk!d^^+[Lde+Zt`ZJReoE!LY+@="[1<8J7j$"<=(rZ8&"_XO)M5TQ;(#D`s5`:WY8Z[:(C'&RmRn
%qim!?).T1-9^89)UokaBTeO4HfbBN50-3@uBuB"hUi[:dTHWNg3A`;u]ugm;86R];m;IU:;J;O9;D,Z%d4J5&=Watc-BJdR:71W-
%$V/#iJN6.%!@t[9+\'C4K4=?KKo'l%nRL!o+]HgdpD@JS1aZ()e.#Lu4Zn;ta)B^O=<M]V94T3jN$/ZSh2Y33!?Gkq')hsoYpe66
%#,OnmJY8bl$d`H-9gXnrbjd*Y;D:nE0a^genH4-N@-;7K9TG0cGaQ'@-KqHa84H*@DP[frTW>8PW6jeuCbh)9Kc%u=c$>DsTa9^h
%nC\ddBMSs%IuaZ$85:S669%q[R3GKG'VGWS*,hT),LZ7dO,kFJd8Efl9.LhZKo/o$>`c>rc7jZBd"%Wae8i_"QU6'F4i!-c%19>C
%R28e%+X:6;@+C8KX2156;E_p^/ANrK@.LFNc%cp2F-D;(PD<#V^bdi*'LK0>QpZM'YbK(RYb.V.YbIMIs/7^^F83rb#;T&2,t""8
%2"<`$BF9+fDZ(8&0R6S=bqrqG"G%js&NPUY(CA<b3enb]7ABV)2h;:BT:MYg+:T6CM`aA0(a[RWS!=@D'6.$>rq1-*:.ZBC#34JV
%+L!M96ak\q'Tp=$@nj4i\P-:"k+.96M^&]7)j(u)XIU4^+P2W)4?FVIcE[Rah4L)kh^3QX;2r*,0XTCW=:-r$C/*u%Mj(4rBu#9*
%h&_PjA4ST#J346X'*si.6TJ_K$riDJ,*5SA53;l.@gG\KqeU0^lM]SteBfu0.*ra=E==U9^cVn(SIao*a@TcQkDM%J3AVL!RpOj?
%F$\q@*2kVf3k")0E(NH>./Shl8Rk='A@A[5WV@UU:hH,D1Wj,#*(-EKe/-][%9R)t`571[C#=KO"bF#)qRqlH6"&"roit/^mjrK:
%MdZMA&)b6T2.mE`MP:pf$Z4f/P8Ihtq?"2MMHf=1=dP<)pl0C`0Y3['+Vtj0d__6P=_+Fc``4ieSBuRPT!jZ'+?f%/JZDNE3?Fr9
%DBZMuMHdRGj-H%FOQ%GkI1>A45\F\:*%d\^ok--"[0l(,S`_NfCr&`-^:%G^`D%$Je\4+`!`N,h,7,mT;Rkr#DsDpf7.P4L@ZJ!:
%f/kZ%++U=I!KA<m7'0<O1[Z#B'V2XGG?58c?"ao9#+Z?XEd>'#n>Bi^YZKCR,?'M.Y,&krgk$e$K?/:9SrI-5bXI*bAQ%;,HMVf+
%_P:3h-GV;F*X.mX'7!!MZh$01<<f=g$TRt!%OhGq)+1Vb+^@VJC>4uYn,W#rJ-M$=#KjiHMC_8S#(d;@1I<\B2@tQ#Do(Y5;*9Q0
%?42K'TquCVTg$efCf+5,HPi0Hi%l^Q!]$Q7S=II+0I.cE7lIhAfh>CR5[;$?l4Gr$dT1$m+\\)BN%cE'Vd9HmF;3jJW&P/b0$nKD
%ROXrJ#j)k4?u+"L=,+R?r+_Du4sba,\-Gs\_Dn<p1hP]#6qijUP.S+H*^Z&9TNJbD*'(F(.)PHUB''6*eSe,ClPG[W;)q<SBLQY@
%AM-#QVKd]\c9drEQpe/YBrLf0i7[]*>s\(TnJkXTjHA;HNkQ0t,[euc:56T`+_Ca(;D*r1K;PiVTmMht4V?[<?oHiV4R)?iTa29s
%+l_4Wdj:85/o;73J8?Q'=J6+R+X&X%n@FSgq]<!G-;R26@i3cEq1m,9b^k$bcJ6,7e(VkY:g'5Rh5F,;O]ETk9T0)hVhq6Xnkm#t
%!"uP,H3:L&P[:0RJOpE)*9!^/;/HQnMH'!.%?OsaPMfLZ?6JhF)'CUZ:+084Ku#AI"pYJDA7m9*ejUgCP!K?%aE%n*g_N0_j(g0k
%"F=<c+DX'J<6TZd2Elsd(!LaT6Xf9lanp9Ta#]t-8koT=+:0s"4WBXjkt2Wq3!a5V+f/hB/W*+tcfP>FVc!`>^59LqCZ\1r"2/Ml
%$,1N'*ZW_.a:!:U,[D9WTVXR2(,'']MC=lbF;^alkQm4H!D<%k7Y)M5I[;Q7U:;(8'6%Pl>RF!)E10*2b*Ef9)!'&0KKZ1`3l'.;
%7J^,5(ITU_DbL`7A>jqkjbYWbi]n_Wq,ZpN9$[L42LaNcO;>sR=!g[<2C7r8N08'\G@BjZ!7N?i`LQ+sW0f"DI1jl):Ln,rWGe^>
%Vr=NP%;g"=mqunG!=XY&m6Z5Y`<+7"bW>WQq6mn)M;YraTn(*FJ0s%#jEcr'9J?_A@4cUOMK1F6'YC'>Pla5aR&8<!8d;.Db\-j;
%mS%SX&uM&bF:3(BQJMgsdl1h!BjqopR%qeX()4cQG\C*8nj3^o-IkO=79`9K<EMhFnrb_3RDcY?lXU%8?6g.5a[jo^`p=BZ.8iWm
%/MP"fi>JEB,+3$UP^p.q)djTL:/s9<*258?=Tg:Un<'ZKI4K$=3?TlkPd2qn89(*BK2>Uo#sli<R,NpD$aZ[1&u.Dg@T#iKKYY_Y
%:*'[u:<HaL&I2tpmU5,!U&"'@0]G#N(]n3h*k@5sRQ!D5m#r;gOOEgEiWu&Ofq7(76?!?!Khb1.dT.pV'ZNa2T@W*<67hiT7bhkp
%($JA\Q9:i2:7*$fI4+s6m_N]F$%%I&^kc.I'"=r6AunS$6uq&BA.2t6f@N(CG&9>sJQg@Q,Dla"e27ag#>7?h/6.S<4<O-P,%A@S
%?9jnl.Y4J$,%f)u/eNr`(-#aYNos:?Qm+4U(+^l"Zq_%>)UB7;$gBu'!HBF'I'7VpO/jKcLQYe<fGMLQ*f1%7[iQE=(`YD'_5Lnr
%m@:d&!619-'g@6][t.S7bc%WeBPQEZ&uhW=J#r)pFjHF=-SL._:"aj&d$S8jGWjL@(u,g3T@X/sD+2,J",eEtS7o[*RU2&lMVP:=
%38_T2lkrVB+k;i$N%s?3;mAB#8!oet_$$Vj>l^)o<.[S^[&,pr,hb.f!SLq<+X?(cII!W#kd3oC'Bdf`90p5c(1q&OjOLhU:m[Yr
%3s[F?XM59&_bJA)Z8s36_<m3gmb&G-LY40o8QDW?'.kioFB>>-LUN$@Qq$-`Pg"gNTA8L4RPYpgiWq,aE&&.6mu@`B@5*X+XXH5b
%3F@s)N)Z8%\`"=(oJ[K)X`)M%JP[)I1f7p,SIE=`*/Fcc?:9E*2/Peg]0rNL92e6XEjRhT@Yk+Q;ll"F!(Pfnk,:s:)P]qE2Mt)Q
%+G+Xc;Y=7O#hEoA/^?L9`@Y2UH\F0#Ku.jKVs#IL#<t4*8.XLH&1hZRe\4F@bf3JiM(13jTV5&u2`F_[G`84EA(4ThCT5SMW;[.!
%\"9ts-45u9nX%MGU<,!]fWP9r3-9/=W0CLSPbf'm->0)2.:4PAf.MO?=`9&1RS';sV!?<O'IJ'`f'8'NM(+c0Jf1Dl'rd(9DOI@3
%!B$ai!%Vs-7CuB+EYTmU^bE3l8jh03$6hV@irKm$@jkJ/l.4n;_ZR8C\8A65.Q40&Z`q8-;s#&&2F^"_=LbrK+C[N.=&QFL_Mk_m
%9Q>jh"g/1k5S).6NFrj7HJO)Y,r)5CPg(?biL,\kd+-qB#jGH#(e,g`<0F5gZXhFQ1\H[Y:7+XYe3fgd$Mq<8YRU)2Qo;p<F@"!`
%0OmJl!bSI6$"gNt#klK%('CuKr88I'+Xslg0Oqm2bb6'E1`<h$\Ye^8Ah$Jm"IZiIb_6U$TnWQ+feeK(RSCC@8YK+:q1dVN9r@e0
%#ST*(N:s+9G6^E*=@2sSW=FSq)aY%5R".Z%.PW_g<*bFW%.)9U4lW=f1R/C$h'_@(:n0FX3fFb@jiUFP&1/a'6<lsu7@:0r6kkoB
%1?mP&B+IeioHq>hVSt]=(D.GRI_Jog7cfLq0IDP%cZWt<g6GKUMMW!F#(]L@F$o@trQ:P!L-)"6BuX_bZ!`b2:Ub1o9qNqWr@IGT
%=N;taZ%u[J+ml!h4pG%K8%F+XP%A't-F#l\F;0W^6W<PklG%12dWaH!\aAK6C!."5/7<m)Js8(n3JA`<+!M,PgF*`l/X!QKkQb/X
%k*2?jfk;:9fBpG-^t@Hm@S'0"3(F]tf<^*%;`MZKQXeVl!YaZ`Vi_q8&;%O")_=Q=`<>BMRkcQ;US,bkQIO\*M+QUp.@#4k"L9*f
%&OduRJXIpn)H!137[&J8U4^NbPHI(ZF6^7^W]hOMQXf<O=\G9f:f'9sQKr$'>]LXI7YT$%&JLAh)0$")8->'I[P7-sktnVuF5^1M
%KWo#bb1tudTl]lPP+/WabgqPBMELbJg4:WNOrR1QcN_ZgYp!,BL%`Nd\V]D+XT:)4/thE*(*&Jg1a,*;3Yf##)(e>K9P&iCMK*M`
%7LY!a\)oI_0Vjpb3TDT.TTH_:]6'mFB]o92Oq^0Z65-Hi2tWup9e]Ghd#!*CbGroXF[D9m2H@qo6b@7i%S:`nO\QN!J7,lDjX<m6
%dPK+SgKTuX@k+QKAUuFC+M3qS@tQ0XKOF(?@)ZuAg(fr1Ub`t4(>AJZRN@g<0L67KWU/BP7:;k3<0Ucm+>i%JJd$\&W5-I6Y5B-<
%Ea+Ra@k`XFTc^f(=@*6]Uc^h;n.`AoIg"W:ko&jr)fB46b%>C>lrCh4YCM"dKJ7ZYcf?K&+AAN%m_+3<p1hEEl_:e#ejj^hifX9T
%##mTX&O]R_MF-"j,M?V12W7*h:g+[h1[Ys;BSno9:7el$n!M=B"sq1!FKZI[!pM<YR8m\Fb2d!XL>pM?2)e)]keN_(,UmNa(JN6R
%`]_iqfcb%sE)QplQXcDjrVXI^GG5hUNKm+U1/gOa?+DH%4Lu.=7TH7o%&Ng7O7?b#B:^V4YnbPp:b#\6iX'D"OjTG:rj%d>oF.Sf
%<.nl/SlE]O6AsX*$"Al^j.&kkmg5HjB$1PFR^!aY6r[%MH`g8oh3CI./T3uZ/#ljo6?q`WO?f5N)eFn%kfeE*%<m@-WY6OoKA:-l
%fn):X"]/m'Y%\cs'0Y]5Yb5q*G)Qc^D'2IZA,0TU,IaA`d+$44k9aKkRETm8F(4&sgR5S?mQC$$DA/[l1'qA*(Ns4QT:;\Z7B\!s
%An&71*8:W+;en;&JSU0L[(X$RKPiEf,1NP7::KVd0fH#NbJM?M,o@`f?+.F`N#_/fM>7`13GBhAD[sl^79E)=!`imRIW+-(<j-h.
%fd@(gcM\$g/^-$@T]+`N,9N?9Tc6:^V5<)ZXiL0+52!E-47i]-kpjdT3fJu+U$k8#Jb/rX/LOrsIBu*cGi(:o=:4nlVHOPT8;TA,
%=6E-$XU?[*f1]E/fA:n:P[S$5<0/!k^1L@#LL;S`UWAtBe:KE2KalUI/o7edF]X<Dj"4e?o7rV6'p@%*/!Ek^"]8"(\T)13=7f17
%jmGf6([/[#dDkQ"YojH'1tV@`mbHb(CQqe+0.CllLO?MT]XCmBa8iZoQ+atg_/uuHEM&IVVeh!A49Uiccr?IPD-:GkCm*T^a_V3L
%muaA*e/S#Fk40R"AEMZNpjH-]U7e<9S+%^VS8mNEH9cCEfaK[3.kB+Kprr/g@V28!gL14<L`$YWQ1s_']7!bu6Jm>V#9*BLm)Dro
%6`UL2hK<A7:TYHM#g%ga'^`7TK<@=XeLfQ]#"2,kG99(Im6AI`DpjD?oHL%9PLO]1"D4g98P0'.$Z1F9n,H\%PTl?;L;C9l8iV$+
%J`9)Idp/\9R#b"?$Vc>H\Nu&u^Y2Z6L+9dd_+cmC](r>hg:$++OLqN,A3t._0lr1[PT>KqZ"bnQ0&)&E;J!=Oa%l^\`>rVjk_[X;
%Qt9.q9`*Q#&I#MlPnq6aBi>[5Q/snr,.L4_U,tW<TWQ^@jGc/(Ki8ZiN4D/b_d_'Ds3QI)DIZ=#Ugq@_T_JeH=h3^up#0sHOt6o5
%j3_oN<$u2XHHK?q8.uD!KJ'pTHo`=*p[:\re(l7c"f>*Y\rR^sWEH=`Lr+^fiKh@$GY?,jDudRgZ5:3Z^p>n`b#De842mW$5TKR%
%#[D=iH_$HoV4/`ul!b`t1Ll)/M;cR49O60W?/Z7&V+GANr2!+4RHULjpI/Q,^tn-@_ITN!beqJ(KV8iNO^/)D?dm_+$J<iCB"<0$
%3s[HMAlk3%V3n5Rogl_A7'HQ:AC8Jm7=1$KgSc/o3?"*I3MD-:J&lJD-s^:>2[6[s-1EH>2*).or%PDb9p$3d#,XN4_[9Ro(XP,:
%N@6*60mqk)ENkI\b\;`"26Eb&%RH%93ZQ*`F"='@kUr:=CoRi?QGVLs^qb2&BJH=*GoPiMbtNsrHu;1PVOl@>=)-NCWtr]!HBZS&
%)![hgl9SgY>"BbCHIsW2X[Vc(XQAj,\j]-;e;M\s5/Il;\\Etq9i6CJT0OTc&pg5Z#%?M[=XR2u-dgjOZr*(1>h]dc]+g7%#'WjY
%d%s,S4a]Udd62J#>W-LXJHXqhU=a^/_$b&f6(g\fMFn)qJisi0JOm3LJg_[tV7bqCqJ^(kUQk2#KgqR6Dh\r,nYrBW)mkAogPb6g
%@QKBV=^-Pc$(uJB6EE#=kWcf&,](l@Uq=??Pp.5]LDU,*m_oWVnGuPi`((0<LH:g%$:Cf9"*_^(Y:"*al9b7APkC$[3T@@dk2J@$
%bVKnH$2VA!/X(IG\EMTh9?"oUPbrKDjN^;f@`=)q76dV\;DF-YKe>/lb"_*^\@MP/OaeU`N&UN[qg\u9.e@DoSMXJV]EN6(ZFr7`
%g*h(9kGC'Nmjs2GB,!nsl4_gF/0bY'9^%=0lFEjja"9pJ+W?]W0t1LE=Da"B"<"ZPMs?^W`m"0?]5eYW4r`-9[?S`d8H=,eaZR[s
%-F!`fgNR0pqY!ZG-"EdZ;aT_T[D7S7PEn?5D3F;]?Bt/bau5U3keRo+Q2j+8AFm&L?<T+(&6]o0r'7G\8LkcCoAiK!0:1Ai94/*o
%n/A(kFL5+`p]36XB_5Ba*m3F7,)+Dd2E-X,6$[mM[AGgZ)dbK)@,H<=-k#:i!gFNKP_j<na=*hKj"#EKV2gY$0,6rHb$5t37ta@!
%[\XMO3Dt+8_cWTJq@7&!&?Zt59Xt-V/\GjT!"qZT7,N\R.;>MU<7_rfI^Qb@LUMj\%-b/49UX=+j$de/CrXsO%M@/6Osbb]&Qi+8
%K\T0EMBnU3]Y1O:QTf81mRIisceO2X,[o[Q^ujc;ThotJ2?jdjM(HY`Kmbt>^nD6Skmb+EV?.hDYsq;u,/bRIDBiqi3]-!];&42R
%-,L/o?d&M&)5tNL%j##P_=nSYB\!%lo\LA>$8>IX\-KBK?S+7ag=D%`5h]u`T".9;S7bGi)+\P^#cCq,\']+,Z^nO5?o3h\)eQrf
%dG(B6JEakgh*pt!Ld^:O]u4N853P-(p)O7[aTV03nb+&%YYH1,bk)_W(7n0_7.g!pW-AR'@jC'>(nJ9Z'uA_<8j6R_0K22*1RdhL
%P^QXD"14rH&^(I8bm3[X$m0lFs*n6[dOJC_S[gDPrt(ZOej<d)0sbG8+@/AHHI3l&6kW*a%38FmX!FBg0E6c:fADMAAXrDiY596`
%cL;9pqkNN5hAjkmd;0:3o);73pH<fN@g:bb-1XBTLnU6qBD27eRS5t(BqC+E.hM_rM2n//JV!u6bM/"@#82(BZUO(TcfR#@1D!im
%)=Hl;#BRYj0!TaB7t4!+7]9/AMPplrLX*<cmH=WY1(?eN8RP^DWV_H)]BMS$UALK'("Nh-P3kI_\I\$Y;9nd`O$G6]ciV.afO@#I
%QlfWVo<8o)fB_N6SHQPU;#,pS6&Y\pA(r41oOD$*5VJu^\Whn&FV?_uFbAIL^d8^]7,P+L4nc\iOH_'8J0>l<C=/?:GIs;a(@?c6
%b-K'uO'=c!BAtAfP?u*u%82XOoR+5<f;:7$q4:92]f%6UB"E(MNj)s\D%_])im;[l`'u/!BR.'%e*N/>\.f9ne!k^H(RmGpO&jBP
%'9'];p"^Q$:+]SXNmo-O:CYL_bo,h2kpAQ19J8n67XD)PSW_J,5?Gq4';[;gC,j0DOq86DL22BWpVeu^DM<p%=->Jgb11`O6UAk:
%1+NC,8?j)+h's68AbK#^,RnTo6td$Xe?X=W#d0E*d%Cu^XtrQU(e&.F[n$O,qIhUR(B(^P.1BoJOu.bGl'nSTY;b@`N)sHL;:Omr
%HShB>9^HY>>C'cPS.JPd,ZQ<RV:?k-`g;jjI`Z)6aU3-#c@&?f9fLJWO*jTGcN_Ig-A@dhXUn@Q)gU72!`5Go=J_jmc:?+$4@R1X
%DCK5D7m^ViO+9'\jI+<!*lO)uGAg)RKZdV`!tYseLJ]\J'W;VN:bjML>#2mn?GF/OB"]7m/kX;=V)%XZKIhgd,Z->948V,jK]bI_
%1*AcA\n74TY1uo-\>c-GcEA96;'6JBrpX?E\N7)\P87r:otI`-pm"4QIiq\'q,EQc0tWXPBZo'G=kWCTG'PQ6M?\$IL5u+@@'rJu
%0'2%VfII8nL;45g'G)it%6s+eC.f\en(q!N7D)>m'lm"QWMPD.J#[U(E*4#[XN`c^8+MG^>^<k!-@,F]"OP(`!\5[AN0cGsU5au&
%Sk*!hq%GftBjF#7V-.t$FuQI+m+/,7CO@8G5Z707,arKG`KOd0AhX"&WP">;geBptAOBQ-U31D+rKL(8#HM((#9'+fJ+hH#BHU@A
%*S9P)/ifspP`uumG_c9#M>>Xl,5acb/5&`2-at931>J9Dmd)GCai6nHC319F9^8_#((kk0>$F/3l*&8=KI:?+7]c&V'&LS[(dg])
%0XSpW+/5+aXJ<6Rl?bN?4M$D!^sfTT;c3UGXCPC^ihWX?OZV"+$mHM0'Xgj3;Vqe1Cpt)[%DmmCmlO[ZS<Ig;UsHE<*P&-n;kFbo
%4aBi&3]12D!ilg.\1j^,(&>i<3qmGgK_AtFHe#nF7"ZWe36,hR2cfP0?e%CS/$M>k5;q9CjP>a_.W=pQ]Z[>NJ0]mVRURugN?]n^
%<#;;**]D1UEUVrl=d_*fYN!6HU15ptLCemJ%s.NrNtKr:=R4?JR_+@Y5#Zie'%49OA]u[BD#Jp0;i<8L8`O6_C,Y_6,Jcj3,@sK`
%4N`,?\hhDKV^.95V-4L'iO[#7V+=*:DnKn)&K#!g;6(ig]0+Hs,46S^Zp>g=][U\HXLrDO/LBhpn8Z)tc+N"279t(l];=059I7gK
%]>N@l#tUKW$M,-o1:O8H%#L;WFebj6GmC*&gfppmRfH\0R=p9/&gh(O9s:mnrT'.7jEIW%q!+7kTLSM"07?jBCpn3Jc<kuolC8WT
%S*%9e@'2jOK?\C\@@E6H`OoPAP&c-J\a96mWpmn6T&6JM3h*XUHkq\746#Dg`eW[>/G@"0VE7h^64%AXbKR9W+$%Od"]V>LPg.qq
%m)1An`<sGP?q1_85rk:=?/9FZ]i&l9:Eid^cLWGQEVk,RC)*&Jc!rk1!2>`-Ol#-"P7\9<jbcl<SW!2`X=jOp3H[=.OO(a1h]0Iq
%+&pi]Z'DRbBtfAgrpat##?D2M;T5j&=.c"S0m6.b/%($?a.Auc3_b4g8jE<=O3Vou,U%=dm5\=re%-3j8AY=*X'C9;&Z68@M1[`]
%N$l'N9.FVXC/QM00ZHHMm<F5Fo7-AjELQ&;YHq#Q<:a-g>.Y-g+5ZTo!Pm?p#cNO&,&GQ6kbleOd+c=MjkjNJrp`oG'V>ko4(NeQ
%Y88&sLaicH_fmJ;A+M`k/Akbe9@])aVjSD3dk>!ff9Q)bK$NQOV5n(N?sBiDB19i"Cd6LTNb2Qm%nH2$,\EY,8je86o]2Ju,1VTb
%MN%bIX7$W!k]D6/^4Y?aW0*C8$0AVpG=mopBTBq7i'pL0!$OTn$j(Y](-b)sGD5I/:R^!WIt^#V>-3W-_'\#iBl\5%WTf%<q*lj!
%nhS*5WPfuT#f/4=Rhpkeh"-0gGof_oBG'.2.+ldlBuF=^\RV3,iJ>a%)1))AC1ajIj?ZFR%^E=+!Id*9?R.r7Z@OaSe8OVS<k$?g
%]/^Xi,mACjUg@rNC-':82?22]L9\.L^B0t>e4?p+Q8`L-ra:H'Qk$U%_RqAuPMWKBAf@Os(/#KH*ko3<YB)_Z<qm.8==5e'`R0+Q
%#h0ISE]f^hd5WE0TUnITfZ'l7j2PHHaO?4/"BH`X-Qtn\V\H9JPDDV;Bn%hskc$ss1)[r1dXqgQ\)g5o0b`'QXXVOEbSal"?N#kH
%E,9@5;BDh46c3-RX4AAMO^l@!@]/o4_qOuBhqBYH)FXL24^#F54?PjK\+1SXNsoh.h!jUbX4]j%B)PL+eA+[[1XD)!EXIiPA$(H-
%L0KU@Cu!a.j9iKE]Z>?Cgt>H@66ldZ'J7LSgJ-+RE4;d?7PhNekLPAVJUg:gH"Ao<\EaEMT-H3r."S#d*3E`U;W>hcq+3JgUdDdO
%`b%7?'kZaViajT5RF()^^b*:H9!t'BW`A0QA-jr3*apsBjoSu==5G`"kdOT@nHk)Gp.13!n_c%*SD*Bc&kQDtfem@lL5`GCk/aE\
%o-Q`Q"^ZkP!rGubSd@:Z6NRQiE,o&SZ(!g@VEgK+"G1RIM[LOtUFB4WS6kKhS&)aH$.-)Am,h81+W,RLOS1/Wb[4n(g$bu)qFpt^
%ZDgOF$NZO_bp5V@&ZL'q7e)^V7jqarg:G:'p+[rD.rJ!,4Vk>oE\?uO)+GQ`R]Z(S]c*0kjXLDASXOq*NCf,%8riK=@Qg`#4cA#^
%BgJ0?b\FSQ#^Q+iEQMkt<AVPX(*:*Q72B+/--PmVFhJ=qS8KIr%'p9iV&Gek.<Ur87IrcH&u]A7?;&N\2"(=Y)V%rLRJa6\km)m1
%(uAXiKc@I:]^4Zse=n:l;U7R&]o7U(s&<YW2/u,1g3@MOa07$&o3Y%Z,$)m3F[-Fo0,kI1cK@bGmT.:cT+is^%Di.LSEe5DS0?"2
%&0XWRenH@/.Yk/=ZJ&oV>lOB2HMZ"D9Qm+iS.top=rMsdY`^;FU*ob*DCL)SH*1Og$%M\.AQ#c_Te<ZIL3iji8?m\3QRu,BMaUDR
%'-23ANJ"K6Z8"h.1B-hkOI1Q9WHGdIrU@<*Z+>"R4QDf,2FhLIB%>capWBq''R31@>$%sB2HMCDC6_=4G'q]gOnK>:/75cTP.-,I
%*.O&U/\F-&,48uuD.Cr7Z.1d\Qnq`ohr;=$l^=9m1HfT%>r<XQ7'ub@D,m<5A`W%\af&!010X@^g;:,&j&t-*cNNZ-2dIk$ICI.=
%^pI"FO!grl7iUs*&XZ@;Zm?iud([Q<]CR`XF;aD4[^IOG3.9%S;ri$:\&_K?HtH.T8^YbX)$?S4#6P.)IG1,,ZP40pW*&I*5:aK/
%=r5S-rCsS[-3Mm3G,q&)WBl43GcdH]=n`b:ho#8dA^UC?h?3#D2fGi^ilSjA[OiU2\#LmiZGQt*,*#ab5_]@^$8/JcBinaCKCY]e
%$fl1SG9$9Rc2UGeU,ct+j#`Zmj@U4=58p;L[lX2S=t7kEa>l9+X^T0qONX8le"0LKD;NmBb4=:K-&KRAFSIg\dX9C2TP=tL:9AkT
%*^dp^aAe$I3,/J,6MsN@-+V3<Q"KHH".Q5hmG%_bF$<<:^oSV6GK/=68!0R#8R-BsbNeQDm.LulGl`OFs.\M(bH_Pb=CKs6nC'&j
%qF2aH`@BD<e&$T_G??OuH)ke#7f.j3;kpS/N?mbh<q!tWne)Fn3dc%7aTkI*7:$LXA]\+i$-BKA&dttLQF-_<#cicl1Cmj:5&I,o
%HR.)!Gi0ma0bMS`NZKW9B%I!ER3YG.ZZ6T>r)Z+GjK0`HFm>m`:H"uPV9E<.)<D;.@uF/<Ksi9ZT!1HPA'I/>8qm<j/@j&$=U%.f
%WX?a`!HmlG8l$[r=D95I71:rcA`gO]c\!QDltQ0Go\A(SO]2Fm&WmO(BJm9HRdLKLesqu-/sG9.a)`sIGdaOG/SUlNFs$72_9QgO
%%mnm[Af\nq9"(3U#<!GflL4c\gnIKlb&WI,gVu_*'EBl9*\")<ddo,(JjQ\4-pIiU<?*^nF,s#7L<Wi!EL!O_!B;@T#-f#aeCfbV
%8a48D?">KJdu^-V<sg1E<,eaNPO.Um]JfrrC;o2P_4Cn0kKQCUKVru$8;,.C26Q/Y!'j$dq`#$O3lh3]?+Mi-ACWee#[BLYHc4Rl
%ZI\(^4FR)\#sNNVh*nY*iZu+DOD+1kX&ar<F;K3TgR1P"8aV;aAW9Vr$mTAnmp95WTuD^S1FhiGC]J2=f;2:SZanK4oM=Bqir2mN
%-#W+tLmq/=BK`I7ZqK'i0qf(J2f$aLNiW@L/8OeMgqhAp[`3(ff';gr^1I2!@1V:WWJZX;W<eAs\o(V4V/(Z(Xegml(8h<5_s't:
%8Y:\\\cj^A/"qsiVr"%PjU58#d6,&V[F_L!a>:ZW%9FdL?)Co<PZ*gec\!gi31u_-W?^Q$$>m]G2/3cRjYET/F,u'2<eP,+e5K6i
%apZ[9T,fJMR3/Q"OYbRYdZl^T*Bn#YnL`()CHF@1Rbs&M6s!gc^phR*'`Q2g<e/bH4&1NW'UtueP@=ng79a/`Y#[h*l((F&cKeQ9
%Zi`YCU<K)%B[[l2(+`)2RAr9.Pp`_j`-m5<YqFCtqrfc4mnYBH/K0b5@V57Q`J[^^@h!c?-MeEld/0QXp"Zc"S^3OCBK<tc$Xm8<
%F7fD"F;+lQ\G1DS&":Iep$,eG\Qmjp[)Z`K1V;f,1I?@XA6,t;IL5jEl^kWp)MNKFb>0dSg*V.Jh(Uj;&BIksh%cY1PU@8;G5$sl
%)1KnD^1V+.SadPsCAnQBk0,u"oP+MLS[kSQMLdXj5/)cY:gj's)@p:Qh$U1uEuE)g7I7taTUKE]$4i7_(uslc!,YLnefg21:f0)E
%]4I>M1Vj(GY)XYGRLt.,BGhH5#`sf:XDR2^e0NS[R$ptcrZ&sbKa'$U>5LEPgE.h7,.<?$+!4>C:A8P57Q*<j80Stb.lFM7A<?&E
%'/IAJq5j'1:j*aGXn4K7'$[d0eLJHf@_.hDbE(`n7SI-M+7@GZH<))q;mZ_JZ=St=P+W[jG"(T1gj)*/$FC]_7nB"q-550jO%m1'
%hK'l*>!D$U;G*H8T\lu7'21a&<!RN%>,d4o&-92,ZJ$EBp$8-nGbm>Ao0Tcf[1-n*23J#B>sr(YiL@M(10Zkc+='A1d5A#WgX?ZJ
%\_<8L#5Y'71MfDRl%@#]WRnH?>^<%Zq;rS_#XaWe69IEDMOFphSZ8.(f7k!2RnPE>?^BdZ$H$=2bNgg9#!5,sWSaXn>SppOK39GT
%#("KHU>rpnXR_(8Y"#r"kPpWd2/Z2E.Z`)dmnWmY>GfEHct1g#Q:tOgH56X"g3.X_Z?!eT,)&W7@j?s^KLQq[EjcZ0g9$hSb;#@o
%T.X?I+(%un%+)nn'L.<ihF-g[5.[Y,(oUd.\Fu:g?GodJ`M.Sn6S;TVBWZI2!`7l>Q;sCeAoG'&*r>0*gM=e-*_Dl-o1]=KgQ(+s
%Tn+^kIt%A]?M&/-\`X+-C,H<J)882f`At`#&Y]*L,QQ?LhSVFu!f@A`>>!,heNo3Z<R^;V7N,5O;N[d7JXhSe8B"`m(?hODh)p\D
%NJF?9\<pJF3@&Nu@hk+W/$KsE5C-F]ctLjdpT6$6Whr?p_sGM9X'dKWn_:0\c6Q^%5kJ?I_'9&LG:>'.>]sP!NJi0lU#'Sp[N@-u
%kAe7_TdfS]M?tXrX-n8*k4^Jd'%5X!Wr`0q5fF>ZS$A0b-Ggg0UIeRN[55BYH:0_?r)9Ws^4)r`!#1.<*Ak+Eh#m_B2%uGh?&`(t
%rL4=Y*,k&9YqoWS*mQq\c.on@74J\G`1$;eF3!h/6X0!,6:)OhR15$>IeW+s`agut#Ar0Fa5-UUF?NG"fIfSV&6BC9R_gB3DO07q
%9H.E(U$VkDep&o;S+C0>ooaL[R"XgKEZJ3pk?OF)oHH]\?FR<D6>b/h=),W/)ZJY7DO$3Ha,V/Xar^R0r6cULY4iEQ1.lu764V/j
%!:10=6n_^&>ujl*UR>+fh34V2GLte"1I_@ge$PA+H?"gm[$5\k`2Q/S7NPCuIUDg\E#`@Nb?HFIrfT<g3*LI1qG9O6'<,Z:):*QF
%"YdCbWJ*%AGco2GRL5HOa^(f>FXBU!C[5lhaZ+>[8o#eoXFY7=/Z"/1(7^roY[u0FUEfF\j4magF/?7ifNum#.];6Q`g)s:A-1-Z
%.E^TC/hoQj>=c_*X:;h0aK>#cL@sqKX&nuqeN^nMXlDFLXj(jB<_=b3_UN`P"4rY#jJA)lFY87nAOE[0CcOYPiSJY<?5**MD7rV"
%F/W'g[3c6JD]3))a8"[SY>SL=G`U_PWb1NP<;!)ZdHn-3fX.AC;l(?GZ@.P?<HDc4gR8eV.]G^=ehV&(>t`Gc^2"dMrCWsC^u8h-
%elk2WN[[d=lH3t_lH4G`e:]tmZ2Vb6A$UCaROb7(*ph_cB'-c*g3?cQgB=32r).l8!ZqV2#tW.*`,k%T-bo!fC_BKjaj[f*1sHea
%:@R.`O.IM"ikj/^MXspV=tp_>Vnatujs_4*kh(VSWqe9h'R=A%XuAHUmUmKY[S!QF@8bn9^$R<=TePAW"\$ST<<Am,ncV;NGM[0?
%!Yi\_L<bFZC)1#WFI@iTLVjU"d!eAaB&EUOm`-]D2:ok^.;*,oBl2I_+L%FI1oZ7*?Je#f]2gGeXIdtgWrbp\7'gb]c.AegJ;LrN
%9qX(57@)Ktn=Jdj9WtUqW'!bXbK6@*(ai7Y?U^HT(%t2C'mu5agSF9O.>ShSr_tofD2<9:F#d6Iaii6e5,sA98CP;U/$WfBU`Ho.
%3mM5C9Uu"R*%F&7/5h-b</jacT&H/ek1-eO_QjN\>P5$o`sK2],SHhU\?`0,k+6rQ1s8@b=8RDHQLta]OtHhN99ZTIS6JIj(Quq7
%]7p(*;5dU9Y,*WT<opjdMOBXSS,CJEnt<c@02Q@SlaEiU!5RVdh8IRhm9URQ?FBWYD7uTI'<4u`*n_*667@<m/33'"SR]'Vceulk
%89'%Q\CX6UH`la@Voc7cLtc6A/?bm?onTXCI2"+_I^^7%=]+'4]["g,1V5g%acJ8>'I>Vt:/V9KU'B1rP$>9VTS0EbP<(P.d<E;1
%$-hL#aW]_4YAE>`N]K]iL1>KId(\\\6qQ^90WLaPF;;j9$MtimqWT)6OXjWdo8'K<;H-'o.<`FlQ)dUkN%'oR%i;;i+MW7h3Q/m]
%MlhcdQ(8jKV2pUaZ(W#)89MRjmUeHIShEPBRhSA5-]hrb`eBE:0p:e_3LmgCRZdDa6_Xr;2a[d-,#msZM/)crHh>!!i@mHZ!TYB:
%4.!VblQE]uo<_&glHMm_LnQC94e6\knICu"F.d>r]8*G9in9ANdq.PdISlq<H_mSIHp1%q3M:t4"1\t=9B%)Q&QmY\!5]k`X?C^V
%55?mgQ@Z$(eBY$]i(jjKn16RjMS4?4F7-H)_b5<-+$P",,l!?hmd$X+<b7#F.6X9pn,C4BT/>h-js=$V&kl3W-1W[BgWXfQ.1'jB
%a^E"me?bmhWFZmD`b9$c9'ib/@eHk\etj/aNQUUsR;gk?J81LN%_&G#8U;>mFW2;uX^I,O=ZloqO"\J`'UG_IQt#+^bNPXle/2\3
%>61daR>7i6c<91U'l(mN5QO5`.bh=bT[<.[<LH[^'=IdfnnG.Xd4fRnig+CD%8K'PLGr%gc\J9GP:A%PU=Eb!UWFYWU.3M(qA/N'
%ZK.Phnpij&nH8lnOnJoMEs[7EDR$pI<$0uJ<IgfVlPDG__^151j;:jfmUHFQ`[ti_PspcD'1&QI8h+W57r$]cKrQE9WLnGWc[_\q
%Hu%0.;)_MsMBpL4jB[F#*^8<"P]S;]UH/`2gK`pKJ[_L'Ng@sgXKD)Qb6XhPP2.84hOJdS.QCWo0\6FnS']u9'2c7(!)ZfhD3`+@
%j"S_'<Yg+2doKfdh,T(YLfLsDfSL[TO$.7C_L6gT^HHU)`]W3o7hM#u[+*@s8S$c'@EU0CNcO;5HAgCLA;?Ln7d`"+g^SP=!lW9f
%PPZ:7X!8q_+V)985l]4q]$magVGBD$akU$n&tOmV,:#b4U7bqnbC7S:RRLptC;Qur,bP5';q7k'I8rS5^[nuldif)sH[E6Wq#-IM
%RgskXR!G)c\Le+>TL/*kLKd>iePit7baBL1c6C64U%)>.XuUJtW+RJC!ga(;QjfWUbW(J#c."3tH[3-W`78OeDZYa1lD#WQSM@0,
%IQSU)'nW2*4`;C>O.i%pb"26Z5Q(5aX(%;FL62#;.!81?P3M;Z=*S:``i51.a1>h5iPqE`(6XpkV(GW@0^SNHZ&)q^+2gjfQqJ10
%4oD+@D&f#8+@Zdt5`Wi)FcPeu63$0B,]H>A2@=EUQatYq;Mj<mm>OU_pZ(4@1+II)?9+4<\)*u5BQ_Pq/<_Pcr>pEp*0Brtk@(4[
%"*Ho?N;dePhen5_5$53]4SRmco+lMN==()4-h88DLqXLJ;5p[]+5A;HrS\993-0PDGR0?epe/llSdPT7carWaB1aVM6*G+iGq;DD
%,5j*36J27N->?-t7Y]-Ji0:"RPb=jfc&o`g:Pi24Oif.*8(?"fm7#-D4Ij);1qtBA4*+sa2J_EaAT>=J#:-mYZ?D4<R9(Fmi$DM(
%iV:V2Htf6M[;n00XaI^!^8+#3mab[C=.kt8&WLn-6J['Eod'I&$?.nWa49PFQ!)<eh\!oZ3lu/RP8g8rlP3E&VZP&7rXYI02'Lu(
%XE<"DCR>?@nT9_$9ej#*L)P.g*lDO'G%`OgD1H@Ha`e0A80E4f2Xcfa.$"Qq;M)ZJD>[j[Q"bBe-Hc:JQgJ*Ud"SqJOV;g'mho0$
%@o3n:f5A$bTb;P6Qr8+OU\0gsMEF[L.p?b^mV9Cfd):HYE3#i%be5(a-9-DqroBAi!Fp,d(uWUG!#A,>.'C4:c+jc]2\W0b@I`ij
%q;HP\'nM='%I**QC%l4m<M[@>QD:5,;VeOS(IO\@P'oIjRh*!/Cu&!ue`$)=+GtYQ2Tb7*Q'9]3)LB8BOH^R"'*X\.B!E%U?RoV8
%oAu@#rgF@hUTDZ:2rCBHK'H6(HE4Gn/2Un</C9h,fs*";"m?\YkKi=<=kD"-E)\S3r`m,pGGrc`W*=fEn%?n$4nblq#9bl8eJ'Z[
%rUT<@AXClP:G2H0'#.>%bQE3R=;)4@E1.9.'DHGn'Ui,RUiVaaOhVm74Kc-:8(*X?J3h2$@`JXK-!U(,[4oAc*t>LJ=FR+^i&T9/
%<^Z;j'eGmPb/Bbc7bK(h)q@O<Nj"Qm(CX@DY0U*4(Uk`Z!D#jhLtb$@fB,C>Zc._*@.3KAiGL4Gg8/G`p5F"eUQNPSCBEsi9#O>Q
%B(NVt*PlR!2eugSP^pcs,G)eC0eT0A56ru<7k.S`bIs2.O1i!38#!2iCUZ:+es:2AX35Fl*J$C:0E&0)"$6!th*.V/dBZFMf((jW
%JUN$CQWKC9c06L>Jc6@'J+\T9.$poB*"=2h>.a'h<ZOYZ;ucu!1q8g69+"IJGq0_hrlDiP^ld%//m>>"AJMhQC_o8D-+7?RO,r4(
%c-s\5^bXDMVo%0W2a/$Uo2pHm^n'+4gHHG;AI0&kLML99?4[;TKr]jsQt&N+`5UKom9lN3`</;7mX/\eGu>3P:0iKQ,4YKMXf+Td
%P6(cl`T$!oi,Nc,3`Ur+1`+5C2F[IekRXLe?O7CKYc9RS,R=jk)A"@":eT1o1+E<L3,Ic\1k^G2&i=fe3+a:t:+9oMS/Er*=SHOk
%,^IMA?RhH`Bqp-'XPP$XMi=Lp/<+f5eD]Vh:s2[^$[hQ.?22/.O$039q8bMV=_^A!*5-M(:Jq5F$tJA6S)0-[OPNk@']p<s]TIf+
%V-cf#FM,IHl4H@aoW3N*&0Drlfe%&d4H_Y#cXX7[a@5#A4pCUGqW2@e7W#A_+8>9QS!C?b8R#'caB9pn>s*p78f'O=f4l#-(X]W(
%7([40?`.l,ZdIKq0tYG,Cu9.\^tM#KSsnr\;L+"XII69(o^U)]HP.fZnCjdAL+"Zmd8-I(U%K2BT49+4pQ%J2pjD-IAFf2-i$NPX
%)Q6aL\_^Hf@DCZL3J=ZcL8Y.&CBM@uqR`FCIK.3:]IQ^H-i&2!UgdGSq_$;N6\?E'M%8@GOGsQ2M!ZHa;maPoo5NW=:Ms0@'0Of-
%RQqcT!O(91PD(6R&sgKe8nsf2,>4niL=#sb9*,eeCXW1OPpCF0JMcaU(+:_D=^Yr:+;N/(QASP#p*+Gf.9]S/eY/M]d!/:%@SlGD
%I3qdleXL!,IEX$B<hLHk*i5Tel#=U8FR#I]=F*UPY_9Hg;?Dm+n-*%&Z4j?tp#l+TWtg];:*)P?cRkk`&.@IY3,p<S%C(4"/7=3p
%iM(3%HIF&B18-?->b&jaZKQ38THT%*7Tnb^s2SS0oc3^JSF8$>j1I"\@\r.$>W$kY6',qERPCn-k'Vfn^oP,o2HR4Qho#jurAb;1
%&MhWN+lpNLeSHe3K/BA*B-m6(`=#&3kuVtH\u7'e06II-7gKQUCbJ[&>NFFd1$TGDljVQ(,/faF)[!MNM#P6b[RsY0l-6-ShNfS,
%:j:o4:7c_^\;4+o"2HR*`$'!8fCE]30TI.JZc4SkEA*A*8hIra,PEEOc5>-),+F1YK'B#IkS_f#'S_3p6H`B&Q%,pSZlid(rM*].
%@;n6=<Sim_JZ_GHE0_*3X_JoE0636n."nV&?&)i$<t$bo%a!0aY$`>`h<6mn!@.-u]WR`)mqTsJg*b##K`YQ'i_eNYA6?PaZ*F&7
%j(:0U-pBKTm;U(Pp/"h"#)l/'efNPAU_GnF6,[GE/_J<iA2+;l&g(`Aee8h\H'JD+*P%-(kJYSYpfQ)C:b,EdQIhCSFu8$"9.:73
%LlQ32Q)/JhFsO'Xf"3uL=W=?R#iMm#F'6\SaLrjaf>sk6K;i1G<F!^3=KkDc@tH`$g$b'6%(HOj7<[LU)>Y!J]\/sa9#Hn;ZpJ!`
%pTQt>A"*9=/&[rXDf06#bHJH)*e\F-II@Cfh-l%O'-%.W_iusS)mKS^Ws^:.IYQQ?BP^^24+!=t"B+T.%:=:n.BF&;aigmT_q6-c
%)q04jkYl:7Ocu.1BL>(fWk$?1dejN:_"h21qq%`qgrD=a?l_=<U>]mS/`_V;N'0>R6e8THBNnnme\3pT5qg_;plREdlqJqsH5"l:
%gYtTAWFY:umsC"*H+cH$X1,"s2)2"ghWCh%4DHLeX!]D":l\TSd:7/W5&"#NRE<oW>fcdSY+eK[Vg(54%Vm>+GRH+7Os<:6L7BPg
%*O`,hr"N@eHP6YNCM#-ALL1%8jl-)O["7n59FJtF'ARsI^==p/FWjFlcbcTEiE`ftUF;:+f5WSNYpII.6M81DdV;S9o>S!O;eP.*
%Z%9'"rYer`]:<k^%UNW_(;;H3P2;'/3O@=@[gjYuc?>6;_-31C)IQQ^q5/;jEem`J<cEb]]\)3Wr_:hk2P%IjU]pF']=U5h9ZjJ:
%]g;V/1hhW^0@rhS:T=H3QbL$F+$%W8ai%s-RMPBn)&>?c8tO!h%92M")M8?^K$/-SJXJXiSX;+_>X%`c(<$q>"_"@Ul^I4aGb#K8
%`0[QoStLNM7L/\,B.\hHW(NL'Sg&*ATJ1`CLrZV[:lseT'1MqKNeA40\@^f^GHVC?3Wn>9-qd7:UqRnW=\CAORKIVt-t3Ik`)pNl
%*[2Vchd3;Pb"aVTI>U^7_MT+TZYX9+D:'&RLJfasJjN/!IWL\h'BBWq%N-SZ="'UVod5EXa5AfS#iL[[V%uHsPI<tbT@VKG@IMX(
%@4,MP<`EB"cSrCA&?[g`63X%g2)/QN3<eh!IP2Fia0rKO"2'_pDel>Do6M@CqotQmB99CAZDMYPpCb080dHf`X^m^M.Zgm&XbJBh
%X;5Z)q\HN*3oQf09Jg^c^>6:MbW/)sB7h`llGe;"h"DYMqoZj=F'E-'20Og&RD(FBC')gofh)84.,!b>'B)\A@O>.f`0CLC@7SUW
%E>ckX&(siF8+62INE92j\7G+ib4_#cK"f5aet>MH-D"FQrEAQ0/c4V_ja"?kB#LLt#/S5JfC;'!JDg':4a9Q%'IM>KT(X3jiXH,+
%.8,?*WY`1ZX.@;u>"HC\M8;Ft,uM37CL>]ta>=oNl?R]):Pk_c0J/"dmhO#lMhu7]FPgc4[cg7'-bD\'=?RPFbjK4QMekFQWOdg,
%\/f2Qet67\c8\Dt"]9'FSO7n)P;:51o53]Tfa0sk6U5XoSiDfjF'++#;Xak#[h;N^;E^W(Q$FMYGOr*'Ydqh)L,cnOF<Cg,elB+R
%(cW,6c$RXSR[u6oZRgPcl89/i3O(HXOg_TqZe(X\4+U$pV!P#/X8sT+=n@qT2sV4^4*$RrY&dh31Nh.k\!oY?edlA;YNoN^pmYaS
%Am($A&PR!2n?FfR?LjZ'8a^BsAP<h8!KVJ#'5X?O[*&k2MIOEL"uLIC\5kKg1@QO$,)EGOLGer'.A>2Z1uu$LVa#L&_9LDLR3(I`
%jp#<m3;]o?`lD@n./]f`5E;AddTP5n\SN&0rjWPfH_AA0c32UpUf'?sfV?K\L5]Cqntu*lXj^nT#g,Rl`f;F<-X"AU:+0cJ4)>le
%C,br*C.n*#/a&Q1Ti%\JJsW]2:-uj!+4D#1?(:,)'=#?`Ga=KDCC6t)T,j?/6VocpY4D)PnaIbu9V"p'WLBnAKI64\ETN6_mcstI
%Y^d;Id4i`<mYc+=)a\cZs!kJa3uN%0,?rGUa4WIs4VVF)GihMm>_/:*^dm8ON4]U:4YfD"Na65FN7]Om2'k7^H9&qhcZL_01r:;o
%:T^TWoPNfScB';?+W[+!/ihsJ>RQImT$B\K?rBoi5<I6;Fbl&Xq/.,s::D"LpX!*h?SdFcplt@RJI43TnW].O%][pmh909=YsXO:
%9BG2`)"M=_*f&if!.G5M=BcmHA;of1A9K"0&1u5dZ]/D[`LLZ>@\b#7[7$S`pqUDQLH2lo1U]E@o1<C%Nl:!"M*<VXJ!)#BorcEm
%H,>O70%Q/8;D@#&ZiXU"%M34fEr.$Z<^t<K=f)<dKT=6P7CNt6<XlpCWK9CjF-(sTBg9ZNF6s/l&48CPb;=&QoWR_d00*^?pL`&)
%(#FM-=A>I*8;lo+K7CUSH9"oPrM3dD78<Znf2ZS3lo=W24gs9_PXMX&HB#5(8U&nPiH^gTRep:I]FA"&$0,DHR]Q=o@WX]Q/!J^P
%ckseFm7&l8PRD>)2Zt\-lf`fK>XOi9X#?l7P(TI*lCG7_Bosuh8]Q6Y,n!MS@cW2lSDg)CqTL5Wj-=t0F09D(+l,i"P5nh3"Y%?L
%aYRehfR3R/G$_LTomCMBH1_*fhTu#b&OMlEgm.deP\/rW\REOY\RpldfGhma:[scs51bcCHi&/^cC80rE*E>BT.a,@Kp]lk,KjFZ
%i^Grg5M+:;/n_q<`l^OEdh>$m'LjLBRe+qY];7-5s*9)%Uono;KUr",6iT9sqUIfY-CoLrI@HjH6q$S<`IF0*X,U])S1gL`p:%Li
%&>a>G4b13^.r->#V5]60?fN2HB&lC?#11^:k*g<klBg%ZDCpS.-m0t-ih-?0'W>SUQ(J^rWQLn1lTMmaTS^+23aAP/LoF*+0>X0Y
%r,9Y_].2EqWeHfh9CW[AbsR(l:b*<O!e?>&`$r[CX=Y08\k-pWYmcn4+TeSG@%eukWk_:Z00]2>Y0QH*#hB'OKV'uTd5X$[nj:\W
%;U.lhL=3CcPdb<JpNAaX[LZ:Hbi#A,b9[?`53pTr:SR?DT+ptsbrVO>Dq[s?@\[RsPcUjd-p<3)X]5X7fj!ea5sEO`YP4eF!=9'%
%6J0P76$=ChK=>nt*W7kaMK3XH&;E'q$oMZK^Uc":(u'$@Q\pFpl738B.Dm?).r91sDo_-aq"%!mlO6*>R8.G6PoM7^aeU%++9?rR
%:/OoB`Ebr8q#.&GT0b=eLnA^b?uIDW,#6UjlJeg>]<ObcH^o[i8L>LILs!s]($5?A(j,fs&')$gkNaoq5_d@YV^CN07QGmt'cOl=
%bu4BB5<aiE(S;qk9kFV>e$AE[Y.\Ck]0A?d;D<2D');<Q#5bm1VF&527"WLegNm-^P9)uCOn^`#:P<4&>E+hk(4W]Y<.O+rs'UbL
%#gB'qqpD(\neE%9dC`pT)^,0\\XG*],6Ka87'#>_nN:ju,HR1*.*Lr7LP>Vl,Dg4+G"^T4->Qi+SPFB`"r?dt[DS*j6-%=+<=T=/
%1V.rTkP'f*iP4U0+CaXHck5^F:<"M52K.q']mGK3^(PX;pihoITs[L+A$h2sMcU&S;U2jPB/XM1c\_!*eiU:i_I*W4I/0nb9i'fM
%!'aiia5;:?VgnX>h`q(ChuE*Ts7:`dJ,[&ErQ@u$s48p=rpAUW!e9u05QC8?s82-.s6p!fo'>aopW(&Hr#`\$q>!g9qX\'Drp)6;
%pA/-'rqPe4J,/E&J,SKP?iK`Es+q!k\d//l%tF<aJ,fE'rAQ+f`>n~>
%AI9_PrivateDataEnd
