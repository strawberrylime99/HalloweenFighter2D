%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 6_head_2.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 150 155
%%HiResBoundingBox: 0 0 149.6769 154.0904
%%CropBox: 0 0 149.6769 154.0904
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 3 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:32:30+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:32:30+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:32:30+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>200</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXz3+b3mvzVa/nFaXOgmS4g8n6WmpX+nozgSpLOEuUNNqtBIhFfDx2wMrAG73Py75g0vzFo&#xA;lnrWlS+tYX0YlhfuK7FWHZlNVYdjhYlMcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirzDz3+bN/BrEvlTyRaxal5hiFdRv7huNhpynvO4O7/5FfvPw4QLUkAWWKWv5ez+Zi0nmjzh&#xA;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&#xA;7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:76bf2023-5528-0445-9af4-93110b4d178b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:76bf2023-5528-0445-9af4-93110b4d178b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:58f487a7-5cf9-4aff-9d4f-4781a66fa0b7</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:76bf2023-5528-0445-9af4-93110b4d178b</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:32:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3.280569</stDim:w>
            <stDim:h>5.568493</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -154.09 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 154.09 li
149.677 154.09 li
149.677 0 li
cp
clp
145.759 73.7774 mo
145.034 63.8218 144.087 52.9844 140.243 43.686 cv
136.537 34.7192 128.695 27.4839 121.505 21.2163 cv
114.335 14.9668 106.132 10.1353 97.0931 7.13087 cv
87.2552 3.86183 76.9046 3.12062 66.6233 4.08937 cv
56.0735 5.084 44.847 6.65333 34.7181 9.82667 cv
18.0579 15.0464 7.73175 29.8306 5.43585 46.7842 cv
3.94268 57.8125 5.78253 69.1958 5.05987 80.332 cv
4.18292 93.8618 2.52179 107.586 2.69073 121.148 cv
2.69268 121.351 2.72393 121.541 2.77081 121.724 cv
2.98761 123.262 4.66436 124.584 6.31573 123.677 cv
6.83624 123.544 7.29425 123.253 7.59112 122.77 cv
11.389 119.593 13.011 113.775 16.6263 110.716 cv
17.8372 115.386 18.8929 120.088 19.7952 124.833 cv
20.6233 129.185 20.6233 133.859 23.6116 137.345 cv
25.2347 139.239 27.7112 137.485 27.971 135.54 cv
28.0989 134.579 28.3138 133.655 28.597 132.756 cv
30.7718 135.972 32.7396 139.362 34.1233 142.941 cv
34.9495 145.079 38.8294 145.842 39.2669 142.941 cv
39.7698 139.611 41.6927 137.192 44.0853 134.917 cv
44.5999 134.428 44.9427 134.126 45.1487 133.921 cv
45.7015 135.13 46.1761 136.483 46.6536 137.525 cv
48.4114 141.359 50.0853 147.31 54.6263 148.811 cv
59.9241 150.563 63.8909 145.046 67.9544 142.744 cv
71.3968 140.792 75.6644 139.979 78.4495 143.49 cv
80.055 145.515 80.973 147.693 82.9573 149.446 cv
83.9847 150.352 85.2054 150.473 86.4183 149.892 cv
93.5706 146.468 96.136 138.067 101.51 132.677 cv
103.272 130.909 105.18 129.322 107.239 127.909 cv
107.568 127.683 109.327 126.198 109.467 126.185 cv
109.957 126.137 110.306 127.043 110.806 128.113 cv
113.192 133.218 114.743 138.75 115.149 144.374 cv
115.364 147.358 119.398 147.995 120.373 145.081 cv
122.927 137.456 125.137 129.71 127.449 122.002 cv
130.517 127.004 133.285 132.175 135.352 137.696 cv
136.349 140.357 140.253 140.019 140.389 137.014 cv
140.895 125.855 145.714 115.489 144.604 104.505 cv
146.439 94.3447 146.511 84.1148 145.759 73.7774 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.807843 .917647 .988235 rgb
f
142.707 100.763 mo
142.853 98.6651 142.981 96.5571 143.085 94.4434 cv
143.122 94.2612 143.154 94.0777 143.192 93.8955 cv
143.219 96.1978 143.109 98.5005 142.707 100.763 cv
cp
137.735 91.9756 mo
137.642 91.8125 137.549 91.6494 137.455 91.4868 cv
136.13 90.3579 135.283 88.645 134.745 86.6524 cv
134.827 82.4102 135.082 78.1724 135.48 73.9473 cv
136.082 76.7666 136.616 79.6021 137.034 82.4536 cv
137.307 84.3091 137.51 86.1699 137.735 88.0303 cv
137.883 88.8047 137.992 89.582 138.062 90.3618 cv
137.953 90.8999 137.839 91.4365 137.735 91.9756 cv
cp
136.256 100.857 mo
136.097 102.024 135.968 103.193 135.842 104.361 cv
135.762 104.125 135.689 103.887 135.606 103.652 cv
135.525 103.422 135.406 103.237 135.262 103.09 cv
134.94 99.1201 134.77 95.1426 134.739 91.1646 cv
135.258 93.1421 135.987 94.9336 137.006 96.0078 cv
136.732 97.6206 136.477 99.2363 136.256 100.857 cv
cp
131.542 61.5029 mo
130.671 58.9688 129.638 56.499 128.73 54.188 cv
128.625 53.9224 128.515 53.6592 128.408 53.3941 cv
128.422 53.1221 128.428 52.8496 128.443 52.5776 cv
128.484 51.832 128.064 51.3799 127.527 51.2109 cv
126.282 48.2051 124.958 45.228 123.585 42.2754 cv
123.552 42.1519 123.517 42.0298 123.484 41.9067 cv
124.433 42.9668 125.382 44.0269 126.325 45.0899 cv
127.318 46.2066 128.785 45.271 128.929 44.1035 cv
129.243 44.9331 129.534 45.7251 129.801 46.4512 cv
129.884 46.6797 129.955 46.9111 130.036 47.1401 cv
129.203 47.582 128.637 48.4702 128.985 49.648 cv
130.015 53.1406 131.044 56.6353 132.025 60.1431 cv
131.847 60.5859 131.686 61.0396 131.542 61.5029 cv
cp
129.802 86.0005 mo
129.09 80.2676 128.594 74.4951 128.36 68.7134 cv
128.951 70.1402 129.591 71.5484 130.307 72.9287 cv
130.312 74.6402 130.345 76.2881 130.337 77.7822 cv
130.31 82.6001 130.457 87.4214 130.657 92.2349 cv
130.355 90.1607 130.061 88.084 129.802 86.0005 cv
cp
121.278 34.877 mo
120.381 32.4517 119.333 30.0801 118.057 27.7915 cv
118.581 27.5508 119.061 27.8692 119.491 28.7759 cv
123.493 31.4839 126.389 37.624 128.403 42.7422 cv
126.05 40.1016 123.7 37.4541 121.278 34.877 cv
cp
122.687 110.076 mo
122.969 113.453 122.395 117.798 122.27 119.852 cv
122.07 123.159 121.659 126.428 121.108 129.683 cv
120.737 128.456 120.442 127.178 120.214 125.863 cv
120.43 120.498 120.968 115.175 122.687 110.076 cv
cp
116.927 84.8721 mo
116.902 85.8804 116.805 86.8823 116.637 87.8784 cv
114.875 88.1856 113.958 87.6397 113.867 86.2617 cv
114.322 83.2691 114.857 80.2881 115.575 77.3316 cv
116.049 75.3789 113.308 74.606 112.57 76.3648 cv
112.329 73.4126 112.225 70.4522 112.21 67.4912 cv
112.352 67.9424 112.501 68.3892 112.669 68.8257 cv
112.952 69.5586 113.961 69.8047 114.404 69.0523 cv
117.214 64.2754 116.162 56.9859 116.157 51.5064 cv
117.143 62.5928 117.804 73.6841 116.927 84.8721 cv
cp
116.928 116.712 mo
116.767 116.801 116.635 116.899 116.496 116.996 cv
116.766 114.909 116.854 112.876 116.941 111.805 cv
116.994 113.41 117.083 115.009 117.208 116.602 cv
117.11 116.628 117.015 116.664 116.928 116.712 cv
cp
115.667 99.7925 mo
115.388 102.306 115.15 104.824 114.903 107.341 cv
114.426 106.098 112.287 105.871 112 107.43 cv
111.87 108.129 111.742 108.828 111.613 109.527 cv
111.512 108.024 111.436 106.52 111.394 105.013 cv
111.438 104.668 111.481 104.347 111.524 104.056 cv
112.297 98.8389 112.826 93.5977 113.554 88.3858 cv
113.98 89.3418 114.469 90.2456 115.038 91.0777 cv
115.204 91.3203 115.545 91.4614 115.817 91.2818 cv
116.271 90.9815 116.66 90.6431 117.008 90.2798 cv
116.443 93.4268 116.022 96.6026 115.667 99.7925 cv
cp
108.746 100.834 mo
108.495 102.812 108.215 104.786 107.867 106.75 cv
107.421 109.266 107.099 114.286 105.515 116.286 cv
104.493 117.578 105.083 116.571 104.935 115.102 cv
104.741 113.176 104.789 111.134 104.797 109.202 cv
104.8 108.448 104.817 107.695 104.835 106.942 cv
104.971 106.163 105.11 105.384 105.24 104.604 cv
106.712 95.7061 109.404 85.9058 109.24 76.877 cv
109.215 75.5308 107.491 75.1294 106.78 76.2105 cv
102.72 82.3843 102.715 92.1983 102.124 99.3623 cv
101.746 103.941 101.557 108.542 101.705 113.136 cv
101.742 114.262 101.676 115.563 101.733 116.851 cv
101.63 117.311 101.533 117.772 101.427 118.232 cv
101.17 119.348 100.93 120.48 100.648 121.596 cv
100.217 121.384 99.7444 121.295 99.2855 121.383 cv
100.834 117.542 102.776 113.061 100.776 109.208 cv
100.217 108.132 98.4368 107.833 97.6282 108.802 cv
96.5237 110.126 95.5413 111.499 94.6312 112.9 cv
94.8265 110.961 95.0071 109.02 95.1673 107.077 cv
95.7396 100.137 97.0892 92.2598 95.7581 85.3159 cv
95.761 85.3023 95.764 85.2886 95.7669 85.2754 cv
96.1126 86.1128 96.6067 86.7969 97.3284 87.1885 cv
97.6976 87.3892 98.2171 87.4429 98.5823 87.1885 cv
98.9329 86.9439 99.2513 86.6528 99.553 86.3403 cv
100.073 87.4986 102.014 87.7569 102.274 86.2349 cv
103.827 77.1084 105.383 67.981 106.752 58.8247 cv
107.585 53.2559 110.234 45.3438 106.777 40.2461 cv
105.986 39.0791 104.273 39.5469 104.175 40.9507 cv
103.605 49.1397 102.829 57.3135 101.805 65.4585 cv
101.265 69.751 100.766 74.0708 99.9007 78.3125 cv
99.5706 79.9307 99.2776 82.48 98.263 83.877 cv
98.1185 85.7027 97.9524 84.7881 97.7649 81.1323 cv
97.6722 80.19 97.6038 79.2456 97.5608 78.2998 cv
97.5472 78.0488 97.5433 77.7935 97.5315 77.542 cv
99.3226 70.0874 101.237 62.6533 102.37 55.0713 cv
102.611 53.4663 100.602 52.3965 99.6419 53.9209 cv
99.3314 54.4131 99.0452 54.9185 98.7708 55.4297 cv
98.929 54.4063 99.0989 53.3848 99.2825 52.3657 cv
101.504 45.251 103.144 37.9116 105.581 30.8667 cv
107.798 33.25 110.236 35.396 112.964 36.5415 cv
112.758 38.0962 112.537 39.648 112.353 41.2061 cv
111.894 41.355 111.511 41.7368 111.483 42.353 cv
111.241 47.7217 110.539 54.0132 110.916 59.918 cv
110.87 61.5396 110.841 63.1616 110.846 64.7842 cv
110.859 69.2417 110.704 74.8516 111.403 80.1236 cv
109.526 86.8687 108.709 93.8164 108.746 100.834 cv
cp
84.3626 136.576 mo
84.4798 134.32 84.5491 132.065 84.5149 129.812 cv
85.0804 129.316 85.6546 128.832 86.2425 128.37 cv
86.2005 128.576 86.1614 128.784 86.1165 128.986 cv
85.556 131.524 84.9681 134.052 84.3626 136.576 cv
cp
78.1927 138.628 mo
77.4046 136.305 77.9271 132.575 77.9837 130.826 cv
78.0208 129.675 78.0823 128.527 78.1448 127.378 cv
78.4681 126.361 78.7601 125.255 79.0267 124.098 cv
79.2884 123.961 79.5433 123.832 79.7923 123.707 cv
79.723 125.031 79.7161 126.32 79.8021 127.61 cv
79.2776 131.285 79.1741 135.03 78.1927 138.628 cv
cp
72.0569 127.802 mo
71.8089 127.446 71.4505 127.224 71.0589 127.11 cv
71.0335 127 71.0062 126.891 70.9798 126.78 cv
71.4485 126.844 71.9349 126.835 72.431 126.772 cv
72.305 127.115 72.18 127.458 72.0569 127.802 cv
cp
68.5716 128.388 mo
67.8538 130.245 67.1351 132.103 66.4173 133.96 cv
66.3724 132.678 66.0257 131.485 65.1761 130.505 cv
64.7649 130.031 64.1995 129.892 63.6565 129.979 cv
63.7503 126.692 63.7327 122.177 60.5149 120.954 cv
60.4007 120.91 60.2737 120.891 60.1439 120.889 cv
60.094 120.544 60.0452 120.2 59.9954 119.855 cv
61.0862 111.966 61.8675 104.045 62.8304 96.1445 cv
63.3392 100.164 64.0989 104.095 65.2044 107.853 cv
64.9427 109.565 64.7132 111.283 64.5247 113.005 cv
64.178 116.181 62.6185 126.285 66.7562 127.924 cv
67.0667 128.047 67.4202 127.889 67.6497 127.688 cv
68.1946 127.211 68.6409 126.616 69.0403 125.972 cv
69.1595 126.063 69.2884 126.147 69.4231 126.228 cv
69.4925 126.561 69.556 126.893 69.6351 127.226 cv
69.1858 127.44 68.7923 127.818 68.5716 128.388 cv
cp
58.8782 99.21 mo
58.5628 102.243 58.344 105.293 58.1302 108.345 cv
57.6663 107.803 56.8099 107.708 56.1321 108.007 cv
56.0569 107.204 55.9856 106.4 55.9192 105.596 cv
55.9212 105.452 55.9192 105.308 55.9202 105.163 cv
55.9212 105.023 55.8948 104.896 55.8548 104.776 cv
54.9515 93.2051 55.0433 81.6582 57.5726 70 cv
59.1497 62.7329 62.389 53.7368 61.3509 46.1611 cv
61.8812 45.2603 62.4212 44.3643 62.9671 43.4702 cv
62.4407 50.457 62.2737 57.48 62.1019 64.4771 cv
62.0814 65.3389 62.0589 66.2124 62.0374 67.0903 cv
61.4847 71.0454 61.0648 75.0225 60.8235 79.0283 cv
60.7942 79.523 61.3245 79.7744 61.7327 79.6831 cv
60.5023 86.147 59.5608 92.6641 58.8782 99.21 cv
cp
64.8362 27.7847 mo
64.7855 28.0689 64.7366 28.3511 64.6937 28.6284 cv
64.3675 30.749 64.0794 32.877 63.8148 35.0073 cv
62.9564 36.2632 62.1155 37.5298 61.2981 38.8096 cv
61.9671 36.1401 62.6429 33.4712 63.3265 30.8037 cv
63.8187 29.7984 64.3235 28.7901 64.8362 27.7847 cv
cp
56.6448 34.5977 mo
56.7278 34.3716 56.7991 34.1416 56.8831 33.916 cv
58.2249 30.2959 59.7679 26.7568 61.5032 23.3086 cv
62.1399 22.044 62.9778 20.043 64.0091 18.1817 cv
64.9856 17.773 65.9632 17.3648 66.9398 16.9566 cv
66.9114 17.2583 66.8782 17.5606 66.8392 17.8648 cv
65.1595 20.2266 63.7054 22.8438 62.3675 25.5005 cv
60.846 27.5894 59.3724 29.7095 58.097 31.9448 cv
57.598 32.8208 57.1165 33.707 56.6448 34.5977 cv
cp
51.054 47.0825 mo
50.6106 48.2622 50.179 49.4468 49.7708 50.6397 cv
48.6898 52.8276 47.6126 55.0171 46.5355 57.207 cv
46.1009 58.0903 46.4925 58.9194 47.1243 59.3633 cv
46.0648 63.3213 45.1819 67.3306 44.4319 71.3667 cv
44.389 69.3071 44.3792 67.2466 44.3919 65.1875 cv
44.4398 57.4902 44.9183 49.8067 45.4417 42.1289 cv
46.0794 40.1831 46.762 38.2529 47.5189 36.3511 cv
49.3655 31.7075 51.9524 27.3716 53.6575 22.6802 cv
55.9036 21.6445 58.1663 20.6572 60.4378 19.689 cv
59.5159 21.7051 58.7571 23.709 58.0872 25.2222 cv
55.1829 31.7871 52.9632 38.6177 51.3626 45.6128 cv
51.2503 46.1006 51.1605 46.5933 51.054 47.0825 cv
cp
48.5745 79.0611 mo
48.7923 77.3379 49.0286 75.6196 49.2825 73.9048 cv
49.6155 72.6528 49.9739 71.417 50.3558 70.1953 cv
49.7444 73.148 49.1507 76.103 48.5745 79.0611 cv
cp
43.431 37.5772 mo
45.137 33.9478 46.9651 30.2617 49.2493 26.9785 cv
47.888 29.8887 46.3655 32.7427 45.1663 35.7026 cv
44.9173 36.3164 44.6839 36.936 44.4466 37.5547 cv
44.1185 37.4771 43.7649 37.4839 43.431 37.5772 cv
cp
39.2015 40.5142 mo
35.763 47.8252 32.6507 55.2832 29.5599 62.7466 cv
29.6038 61.8403 29.6448 60.9336 29.6956 60.0303 cv
29.7982 58.2324 29.9163 56.4321 30.0403 54.6309 cv
32.0159 49.9795 34.2894 45.4463 36.6683 41.0015 cv
39.1829 36.3057 41.9339 31.8887 45.4026 28.1304 cv
43.011 32.0996 41.1155 36.4429 39.2015 40.5142 cv
cp
42.1858 86.8687 mo
42.0433 87.8237 41.9046 88.7798 41.7737 89.7363 cv
40.6497 97.9185 40.2845 106.146 39.4173 114.349 cv
39.2064 116.342 39.2405 119.314 38.2073 121.087 cv
37.4251 122.43 38.4056 122.372 36.7015 122.478 cv
34.7991 122.596 34.8802 120.456 34.4485 119.019 cv
33.2337 114.972 33.0589 110.676 32.9437 106.478 cv
32.7923 100.962 33.0159 95.4981 33.5628 90.0879 cv
33.8216 97.7695 35.0384 105.398 37.3948 112.76 cv
37.8323 114.127 39.7689 113.558 39.5189 112.174 cv
37.6058 101.556 36.723 90.8877 37.3235 80.353 cv
38.6448 73.4487 39.6497 66.4849 40.9837 59.582 cv
40.8939 62.7324 40.8548 65.8838 40.9105 69.0357 cv
41.0062 74.5186 40.9944 80.8799 42.2103 86.6572 cv
42.2024 86.7276 42.1927 86.7979 42.1858 86.8687 cv
cp
28.4739 26.1148 mo
28.2103 26.2534 27.969 26.4136 27.7376 26.5835 cv
28.4349 25.6455 29.1663 24.7251 29.9866 23.8511 cv
33.6585 19.9414 38.0931 17.8804 42.931 16.3882 cv
42.9144 16.4121 42.8987 16.437 42.8821 16.4609 cv
42.8401 16.4756 42.8011 16.4746 42.7581 16.4956 cv
37.7239 18.9517 34.0862 23.1533 31.096 27.7847 cv
31.0931 27.7285 31.0931 27.6724 31.0911 27.6167 cv
31.0394 26.2686 29.6614 25.4902 28.4739 26.1148 cv
cp
27.5062 49.5357 mo
26.7171 52.19 26.0687 54.8936 25.5501 57.6221 cv
23.0892 63.6436 21.1077 69.9312 20.1526 76.1904 cv
20.0862 74.2373 20.0306 72.2725 20.0228 70.3027 cv
20.3792 66.4165 20.8831 62.5415 21.553 58.6846 cv
22.4124 53.7422 23.512 48.8433 24.7659 43.9868 cv
24.7884 43.8999 24.8138 43.814 24.8362 43.7271 cv
25.7757 41.4893 26.7737 39.2798 27.8558 37.126 cv
27.844 41.2612 27.6966 45.4009 27.5062 49.5357 cv
cp
26.1829 80.5913 mo
25.9134 80.4175 25.7845 79.6514 25.7317 78.6777 cv
25.9505 77.2896 26.1653 75.898 26.3763 74.5034 cv
26.3733 74.6719 26.3655 74.8403 26.3636 75.0083 cv
26.2962 76.3408 26.3108 77.6724 26.4095 79.0025 cv
26.887 81.0327 26.8108 81.562 26.1829 80.5913 cv
cp
24.4056 103.184 mo
23.9759 100.849 23.2366 98.7671 21.7786 97.4199 cv
21.7884 97.3867 21.7972 97.3594 21.8069 97.3272 cv
22.3333 98.3965 24.1614 98.6201 24.4417 97.2017 cv
24.8108 95.3335 25.1077 93.5777 25.2073 91.6831 cv
25.2444 90.979 24.3148 90.8716 24.0071 91.395 cv
23.9612 90.7871 23.9183 90.1817 23.8802 89.5781 cv
24.3987 87.0679 24.8108 84.5283 25.2083 82.0122 cv
25.3509 82.7905 25.5081 83.5664 25.6839 84.3399 cv
25.7503 84.6323 26.1107 84.7598 26.3655 84.6304 cv
25.4573 90.7529 24.9212 96.978 24.4056 103.184 cv
cp
19.3841 89.4556 mo
19.3382 87.209 19.3304 84.9634 19.3665 82.7197 cv
19.4183 83.2603 19.472 83.8003 19.5374 84.3413 cv
19.5501 86.1626 19.6653 87.9707 19.9105 89.7569 cv
19.7591 89.6231 19.5784 89.5171 19.3841 89.4556 cv
cp
18.4739 55.1206 mo
18.0579 56.3189 17.6507 57.5195 17.2552 58.7232 cv
16.8411 59.9805 12.4466 72.1924 12.9905 72.5366 cv
11.8616 71.8213 12.7239 60.7359 12.7357 58.9014 cv
12.7737 53.1831 13.0618 47.4746 15.2747 42.1304 cv
16.4817 39.2163 18.0921 36.5186 19.8489 33.9121 cv
19.1526 35.6284 18.637 37.3848 18.3753 39.1524 cv
18.2698 39.8677 19.1155 40.2739 19.553 39.6489 cv
21.5237 36.8364 23.1116 33.853 24.846 30.9566 cv
24.2689 32.5791 23.8958 34.315 23.4495 35.813 cv
22.0062 40.6597 20.8148 45.5674 19.8636 50.5293 cv
19.7942 50.6338 19.7327 50.7481 19.6888 50.8843 cv
19.2386 52.2847 18.8401 53.6987 18.4739 55.1206 cv
cp
31.0091 39.3482 mo
31.1253 36.6431 31.1858 33.9385 31.1663 31.2354 cv
33.6273 27.3442 36.5296 23.7798 40.0999 20.7627 cv
36.5472 26.5786 33.4974 32.9429 31.0091 39.3482 cv
cp
46.7698 15.8027 mo
46.9056 15.6177 46.9837 15.4341 47.0169 15.2568 cv
47.222 15.2046 47.4251 15.1524 47.6302 15.1011 cv
48.7356 14.8257 48.804 13.6192 48.2464 12.936 cv
58.5062 11.3247 68.5667 8.37404 78.9163 7.39552 cv
82.5267 7.05421 85.7796 7.36232 88.9495 8.24757 cv
88.4378 8.95411 88.4144 10.0132 89.3763 10.4326 cv
90.7015 11.0103 92.014 11.605 93.3284 12.1983 cv
92.9144 12.3081 92.5755 12.6865 92.5442 13.1187 cv
90.0052 12.4497 87.4651 11.9922 84.8733 11.8472 cv
84.6839 11.3286 84.2347 10.8989 83.5267 10.8486 cv
71.2356 9.97316 58.9622 10.1987 48.9271 18.2017 cv
48.2659 18.729 49.137 19.8648 49.8362 19.3799 cv
54.094 16.4224 58.8089 14.9151 63.7093 14.1787 cv
63.4905 14.44 63.2786 14.7139 63.0726 14.9976 cv
60.2649 15.999 57.5355 17.1192 54.9564 18.3106 cv
51.6409 19.8413 48.7542 21.7725 46.1888 24.0259 cv
46.1653 24.0376 46.1419 24.0493 46.1194 24.0615 cv
45.9251 24.1621 45.8099 24.3003 45.7269 24.4487 cv
41.6927 28.1094 38.4564 32.5742 35.5999 37.5444 cv
34.8226 38.8965 34.0335 40.2998 33.2425 41.7393 cv
37.1341 32.7334 42.6194 24.6528 46.7698 15.8027 cv
cp
95.0716 16.2642 mo
96.473 17.7774 97.8665 19.2998 99.2571 20.8262 cv
99.2415 20.8403 99.2288 20.8565 99.2142 20.8711 cv
98.2386 19.7905 97.2532 18.7202 96.2239 17.6943 cv
95.6712 17.1431 95.0989 16.5913 94.5052 16.062 cv
94.6946 16.1294 94.8831 16.1963 95.0716 16.2642 cv
cp
102.535 16.5303 mo
101.063 15.9609 99.5862 15.4024 98.1009 14.8687 cv
97.469 14.6416 96.8392 14.4258 96.2103 14.2168 cv
95.6546 13.7446 95.1146 13.2549 94.5804 12.7578 cv
97.2523 13.9776 99.8997 15.2407 102.535 16.5303 cv
cp
101.887 23.8735 mo
101.902 23.8355 101.915 23.7969 101.93 23.7588 cv
102.636 24.5337 103.344 25.3076 104.053 26.0806 cv
104.013 26.104 103.976 26.1343 103.938 26.1631 cv
103.249 25.4058 102.566 24.6431 101.887 23.8735 cv
cp
93.2523 58.0864 mo
93.3929 57.5532 93.5442 57.0249 93.6722 56.4873 cv
93.7835 56.0147 93.6214 55.5669 93.3333 55.2339 cv
93.9349 50.7813 95.2415 46.2329 96.1233 42.4663 cv
97.4515 36.7881 99.1751 31.231 101.184 25.7647 cv
101.761 26.4487 102.354 27.1616 102.961 27.8828 cv
98.6868 37.6021 97.1585 48.2666 93.2523 58.0864 cv
cp
94.7171 121.271 mo
95.2552 119.919 95.8831 118.605 96.5892 117.325 cv
96.0452 118.674 95.3675 120.033 94.7171 121.271 cv
cp
66.4876 111.703 mo
66.5823 111.955 66.6644 112.213 66.762 112.462 cv
66.9388 112.912 67.2825 113.12 67.6292 113.14 cv
67.7669 115.126 67.9915 117.105 68.2845 119.076 cv
67.7884 119.066 67.2757 119.406 67.2376 120.025 cv
67.1771 121.037 67.1868 122.133 67.3978 123.155 cv
66.7288 124.411 66.0579 124.14 65.9915 119.983 cv
65.9485 117.262 66.136 114.491 66.4876 111.703 cv
cp
72.9632 86.1924 mo
72.7171 88.0186 72.4651 89.8443 72.2386 91.6724 cv
71.4974 97.667 70.9095 103.68 70.1282 109.669 cv
69.9378 111.134 69.7142 112.589 69.4808 114.043 cv
69.2659 108.352 69.5726 102.672 70.3538 97.0225 cv
70.6155 95.1231 70.9349 93.2368 71.2806 91.3565 cv
71.8333 89.605 72.3987 87.8828 72.9632 86.1924 cv
cp
86.053 82.9898 mo
85.5189 88.2857 85.0608 93.5884 84.6858 98.8936 cv
84.7308 93.5733 85.1712 88.2627 86.053 82.9898 cv
cp
89.0169 58.4937 mo
87.3382 61.5181 86.3948 64.8945 85.4124 68.2925 cv
83.6575 74.3589 82.2513 80.5166 81.1429 86.7324 cv
81.0872 87.0459 81.0433 87.3609 80.9905 87.6743 cv
80.9749 87.1875 80.9554 86.6987 80.9456 86.2134 cv
80.8167 79.5112 80.886 72.7901 81.4271 66.106 cv
81.4398 65.9404 81.4593 65.7764 81.473 65.6109 cv
83.5911 62.1133 86.1351 59.0361 89.2425 56.8823 cv
89.1663 57.419 89.0921 57.9566 89.0169 58.4937 cv
cp
93.5179 66.3731 mo
94.2249 65.1026 94.8655 63.8067 95.4681 62.4966 cv
95.3118 63.9414 95.18 65.3892 95.0765 66.8389 cv
94.4739 70.0933 94.0911 73.3931 93.6858 76.5459 cv
93.4065 78.7163 93.1741 80.8877 92.9671 83.0606 cv
92.7054 83.1533 92.4593 83.2935 92.262 83.5215 cv
91.2776 84.6646 90.4896 85.9287 89.8372 87.2695 cv
90.3792 80.5923 91.0062 73.9234 91.7366 67.2603 cv
92.4173 67.3428 93.1253 67.0781 93.5179 66.3731 cv
cp
66.0569 46.062 mo
66.1565 43.3526 66.2874 40.6436 66.4524 37.936 cv
67.2894 36.6455 68.1341 35.3574 68.9944 34.0733 cv
67.9788 38.061 66.9866 42.0557 66.0569 46.062 cv
cp
82.3958 23.7969 mo
81.5023 25.0806 80.6956 26.4058 79.9485 27.7588 cv
73.4778 38.7007 68.9524 50.7359 65.595 63.0108 cv
65.6165 62.2354 65.637 61.4595 65.6556 60.6841 cv
65.6868 59.3189 65.7181 57.9536 65.7493 56.5884 cv
67.7337 46.1704 70.3577 35.9107 74.3851 26.0122 cv
74.9827 24.544 72.68 23.2261 71.6937 24.4453 cv
70.1019 26.4141 68.5628 28.4219 67.0628 30.4566 cv
67.3831 27.5239 67.7962 24.6035 68.3509 21.7002 cv
68.3665 21.6177 68.3821 21.5391 68.3978 21.4566 cv
69.7327 19.3555 71.1868 17.377 72.8401 15.6475 cv
72.8392 15.6465 72.8372 15.645 72.8362 15.6441 cv
73.1097 15.374 73.2376 15.0586 73.2601 14.7407 cv
74.805 14.4717 76.3509 14.2676 77.888 14.1172 cv
77.9349 14.1397 77.9749 14.1714 78.0276 14.1856 cv
82.221 15.3276 86.5755 13.7227 90.6556 15.6045 cv
93.6439 16.9824 96.1175 19.9209 98.3499 22.5108 cv
94.2122 31.5659 89.9524 41.1504 87.8724 50.8657 cv
87.6351 51.9732 88.8606 53.1162 89.8489 52.6773 cv
89.7952 53.043 89.7444 53.4097 89.6907 53.7759 cv
86.4935 55.0156 84.1087 57.1553 82.1409 59.7349 cv
83.7601 48.1558 87.0794 36.9766 90.6702 25.8184 cv
91.1067 24.4649 88.9847 23.8897 88.5462 25.2329 cv
85.0081 36.061 81.7435 46.9815 79.8392 58.2026 cv
79.1273 57.5923 77.8616 57.6826 77.4398 58.8726 cv
73.638 69.5967 70.3118 80.6011 68.6204 91.8706 cv
67.9192 94.4756 67.2776 97.0967 66.7083 99.7334 cv
66.2835 96.8755 65.9202 94.0083 65.6624 91.1138 cv
65.9153 90.898 66.1204 90.5991 66.223 90.1831 cv
68.9944 78.9605 71.5569 67.687 74.3528 56.4702 cv
76.7308 46.9307 78.8265 36.9619 83.845 28.4248 cv
84.4134 27.4976 84.9954 26.5776 85.594 25.6665 cv
86.9153 23.6563 83.7435 21.8613 82.3958 23.7969 cv
cp
70.5814 122.366 mo
71.2464 120.065 71.5745 117.599 71.9319 115.691 cv
73.012 109.922 73.6663 104.097 74.3255 98.2686 cv
75.305 89.6192 76.5384 81.0244 77.9856 72.458 cv
78.0696 72.2642 78.1575 72.0713 78.2435 71.8779 cv
77.9241 76.6485 77.803 81.4317 77.8401 86.2134 cv
77.887 92.2676 77.8196 98.584 78.8509 104.611 cv
78.3157 109.909 77.804 115.208 77.0413 120.471 cv
76.511 120.327 75.9358 120.416 75.5325 120.897 cv
75.0618 121.459 74.6585 122.049 74.2962 122.658 cv
72.6458 123.096 71.4612 123.111 70.5814 122.366 cv
cp
83.8733 122.074 mo
83.7044 121.051 82.7249 120.879 81.9603 121.222 cv
81.6878 120.891 81.2269 120.709 80.7562 120.799 cv
80.3792 120.871 80.0169 120.959 79.6556 121.048 cv
80.9046 114.245 81.4046 106.787 81.636 104.989 cv
81.8372 103.419 82.056 101.851 82.2757 100.284 cv
82.2952 103.961 82.4944 107.64 82.8773 111.316 cv
82.931 111.838 83.2523 112.177 83.6409 112.342 cv
83.2659 115.207 83.1937 118.085 83.7347 120.963 cv
84.1731 123.297 87.598 122.603 87.7064 120.426 cv
87.9144 116.259 88.1478 112.101 88.3939 107.945 cv
88.8978 105.839 89.471 103.773 89.9222 101.822 cv
90.1106 101.006 90.2845 100.142 90.4583 99.2544 cv
89.8987 105.552 89.9183 111.863 90.0325 118.177 cv
89.971 118.714 89.9046 119.251 89.8401 119.788 cv
89.6214 119.833 89.4085 119.919 89.2308 120.106 cv
87.6878 121.724 87.1097 123.936 86.6741 126.148 cv
85.9095 126.569 85.1663 127.033 84.4437 127.526 cv
84.3499 125.706 84.1712 123.888 83.8733 122.074 cv
cp
104.952 19.9849 mo
104.805 20.1192 104.655 20.2564 104.5 20.3965 cv
103.874 19.96 103.25 19.5205 102.626 19.082 cv
103.403 19.3818 104.177 19.6831 104.952 19.9849 cv
cp
107.526 20.9038 mo
107.909 21.0215 108.305 21.1406 108.714 21.2593 cv
109.078 21.5625 109.355 22.0444 109.534 22.7256 cv
110.242 23.4087 110.849 24.416 111.397 25.4863 cv
109.635 24.0571 107.802 22.7153 105.942 21.4077 cv
106.54 21.0957 107.067 20.9307 107.526 20.9038 cv
cp
110.544 33.0059 mo
109.01 31.7969 107.613 30.2808 106.322 28.8262 cv
106.347 28.7583 106.37 28.6895 106.396 28.6216 cv
107.766 30.0967 109.149 31.5576 110.544 33.0059 cv
cp
114.341 32.0864 mo
114.352 32.2153 114.363 32.3438 114.374 32.4727 cv
114.072 32.3374 113.681 32.4038 113.522 32.6958 cv
111.453 30.1455 109.271 27.6763 107.026 25.2588 cv
108.234 26.2495 109.422 27.2651 110.559 28.3482 cv
111.842 29.5713 113.098 30.8223 114.341 32.0864 cv
cp
113.832 65.4961 mo
112.506 58.2114 113.659 49.3887 114.014 42.353 cv
114.028 42.0952 113.969 41.8828 113.87 41.707 cv
114.03 40.145 114.185 38.583 114.341 37.0215 cv
114.411 37.041 114.481 37.064 114.552 37.0825 cv
114.316 41.6524 114.217 46.2285 114.148 50.8037 cv
114.087 54.8067 114.999 61.0337 113.832 65.4961 cv
cp
114.536 23.5547 mo
114.538 23.5586 114.538 23.5625 114.54 23.5669 cv
114.617 23.7075 li
114.816 24.0674 115.296 24.2617 115.69 24.1441 cv
115.758 24.1235 115.826 24.103 115.895 24.0825 cv
115.934 24.0708 115.964 24.0513 115.999 24.0361 cv
115.675 24.3877 115.42 24.8428 115.237 25.3887 cv
115.217 25.3921 115.197 25.3892 115.178 25.3931 cv
114.68 24.5645 114.151 23.7681 113.603 22.9951 cv
113.942 23.1685 114.251 23.3555 114.536 23.5547 cv
cp
146.889 90.5469 mo
146.74 87.2852 146.44 84.0254 145.961 80.7954 cv
145.957 80.7695 145.951 80.7437 145.948 80.7183 cv
146.309 78.8545 146.624 76.9053 146.409 75.0596 cv
146.086 72.2979 144.124 69.9575 144.023 67.1338 cv
144.004 66.6275 143.816 66.2534 143.549 65.9815 cv
143.609 52.4209 139.208 37.8008 129.27 29.2901 cv
128.363 28.5127 127.013 28.8218 126.361 29.5942 cv
124.402 27.1348 122.117 25.0508 119.443 23.815 cv
118.106 23.1973 117.152 23.2276 116.456 23.6582 cv
116.674 23.2974 116.63 22.8071 116.33 22.4326 cv
115.564 21.4751 114.038 20.8037 112.514 20.2671 cv
112.527 20.1607 112.526 20.0498 112.491 19.9317 cv
111.323 15.9595 104.955 13.5332 101.729 11.4888 cv
96.8773 8.41456 91.7679 5.11818 85.9612 4.31886 cv
79.7933 3.47023 73.2278 4.71827 67.1497 5.78077 cv
59.6741 7.08741 52.1312 8.50343 44.8226 10.5552 cv
43.6536 10.8833 43.5345 12.5376 44.3196 13.1587 cv
38.43 14.7261 33.013 16.8067 28.5394 21.2988 cv
26.7288 23.1167 24.9446 25.2105 23.3782 27.4785 cv
22.8372 26.7866 21.5706 26.541 20.8773 27.4888 cv
15.3978 34.9819 10.8011 42.3374 10.0267 51.7891 cv
9.62042 56.7398 9.88995 61.7793 10.0989 66.7339 cv
10.2132 69.4448 9.24932 74.4712 11.4642 76.5215 cv
11.8978 76.9229 12.428 76.9483 12.9437 76.7124 cv
14.4974 76.0015 15.2972 73.9077 15.8314 71.6694 cv
15.5442 75.354 15.4114 79.0513 15.3997 82.7319 cv
15.3958 84.1802 14.9329 90.2949 15.3597 95.3111 cv
12.2435 102.216 9.96026 109.613 6.03741 115.991 cv
5.51397 116.841 6.1087 117.6 6.83819 117.801 cv
6.70245 118.222 6.55499 118.638 6.42413 119.061 cv
6.19854 119.787 7.33233 120.293 7.67218 119.587 cv
8.61358 117.629 9.67413 115.685 10.7776 113.759 cv
12.2142 111.844 13.7991 110.061 14.3655 107.593 cv
14.4163 107.369 14.3929 107.167 14.3401 106.977 cv
14.9778 105.868 15.6243 104.763 16.2815 103.665 cv
16.7239 103.729 17.1956 103.591 17.6058 103.146 cv
17.8558 102.874 18.0892 102.599 18.3196 102.323 cv
18.347 102.315 18.3704 102.313 18.3978 102.306 cv
18.4007 102.307 18.4036 102.308 18.4075 102.308 cv
18.6282 102.316 18.8323 102.271 19.0276 102.2 cv
19.973 102.12 20.4651 102.53 20.4788 103.459 cv
20.6565 104.212 20.7952 104.974 20.8958 105.743 cv
21.0989 107.028 21.219 108.327 21.4134 109.613 cv
21.7903 112.105 22.3958 114.347 23.4837 116.618 cv
24.2278 118.173 26.3665 117.25 26.4739 115.808 cv
27.3909 103.509 29.2034 90.8804 28.8499 78.5518 cv
28.8431 78.3047 28.7073 78.1206 28.5296 78 cv
28.5628 77.6655 28.596 77.3335 28.6321 77.0054 cv
29.0355 73.4038 29.2239 69.7666 29.3948 66.1328 cv
30.0267 66.3623 30.8792 66.1807 31.2112 65.3828 cv
34.4983 57.478 37.7845 49.5669 41.4437 41.8247 cv
41.6302 41.4292 41.8177 41.0264 42.0052 40.6255 cv
41.8909 42.3198 41.7776 44.0147 41.6692 45.7105 cv
41.5267 46.1807 41.3792 46.6489 41.2425 47.1206 cv
34.5228 62.1104 30.7669 78.4815 29.8978 94.8657 cv
29.4798 102.746 29.1702 111.381 31.2601 119.076 cv
32.012 121.847 34.7503 130.078 38.9778 126.591 cv
40.4876 125.345 41.4065 123.264 41.9905 120.877 cv
42.014 123.922 42.0618 126.962 42.1224 129.989 cv
42.137 130.707 43.3206 130.938 43.4329 130.167 cv
45.2571 117.6 46.0335 104.777 47.1937 92.0498 cv
48.1048 92.6939 49.5335 92.5654 49.7825 91.1802 cv
51.7942 79.9976 54.1507 68.9116 56.7044 57.8692 cv
56.18 60.7046 55.554 63.523 54.9446 66.3413 cv
51.9808 80.0513 51.8021 93.5205 53.0013 107.065 cv
51.6731 118.002 51.4935 128.91 52.3187 139.917 cv
52.4271 141.354 54.6644 141.879 54.9954 140.279 cv
55.0169 140.176 55.0413 140.073 55.0638 139.97 cv
55.4095 141.413 57.9192 141.103 57.7425 139.57 cv
57.4739 137.237 57.2425 134.902 57.0335 132.567 cv
57.1302 132.275 57.219 131.981 57.3216 131.691 cv
57.5325 131.097 57.7913 130.512 58.0589 129.929 cv
58.2259 131.112 58.3929 132.295 58.5589 133.478 cv
58.6839 134.364 59.3157 134.721 59.9905 134.692 cv
58.2347 138.118 57.0745 141.722 56.5257 145.674 cv
56.2835 147.422 58.804 149 59.7142 147.019 cv
60.1341 146.105 60.5149 145.181 60.8763 144.251 cv
61.7288 144.746 63.0189 144.667 63.6605 143.706 cv
63.7054 143.546 63.7503 143.386 63.7962 143.226 cv
63.8148 143.234 63.8333 143.242 63.8528 143.25 cv
64.0491 142.732 64.2796 142.162 64.5179 141.563 cv
65.5062 142.758 67.2815 142.295 67.8382 140.88 cv
68.3939 139.467 68.9495 138.055 69.5062 136.643 cv
70.3401 137.305 71.6898 137.197 72.4612 136.159 cv
73.1448 135.237 73.6526 134.245 74.0716 133.216 cv
74.7366 133.116 75.3431 132.702 75.8978 132.043 cv
75.9925 133.256 76.0726 134.471 76.1243 135.689 cv
76.22 137.966 75.9876 139.848 77.8265 141.391 cv
78.3743 141.851 79.0931 141.658 79.3431 140.991 cv
80.4036 138.161 80.8401 135.186 81.3206 132.225 cv
81.5208 132.219 81.72 132.156 81.8968 132.052 cv
82.2132 135.992 82.472 139.935 82.5765 143.903 cv
82.596 144.646 83.6761 144.814 83.8831 144.08 cv
84.9085 140.434 85.9085 136.782 87.0335 133.166 cv
87.5433 131.53 88.0101 129.036 88.6907 126.728 cv
88.7776 126.685 88.8685 126.641 88.9593 126.598 cv
88.9095 126.959 88.8587 127.32 88.8079 127.681 cv
88.6751 128.431 88.5804 129.196 88.4866 129.963 cv
88.469 130.085 88.4534 130.207 88.4358 130.329 cv
88.4368 130.329 li
88.4163 130.509 88.3821 130.682 88.3636 130.862 cv
88.2972 131.52 88.5892 132.026 89.0364 132.362 cv
88.2366 133.867 87.429 135.369 86.6253 136.873 cv
85.4944 138.987 87.4837 140.777 89.2767 140.401 cv
89.1204 140.665 88.9661 140.93 88.8089 141.194 cv
87.3401 143.67 91.0374 145.749 92.6253 143.425 cv
95.3138 139.494 97.6878 135.355 99.9476 131.165 cv
101.297 128.662 103.266 125.977 102.067 123.1 cv
101.954 122.831 101.794 122.577 101.602 122.349 cv
101.773 121.705 101.934 121.049 102.096 120.378 cv
102.141 120.192 102.18 120.004 102.224 119.818 cv
102.476 120.534 102.846 121.185 103.395 121.721 cv
103.781 122.097 104.401 122.306 104.93 122.126 cv
107.426 121.278 108.886 118.168 109.804 114.652 cv
109.856 115.023 109.901 115.396 109.955 115.766 cv
110.023 116.228 110.067 116.868 110.126 117.584 cv
109.9 118.815 109.672 120.046 109.445 121.278 cv
109.172 122.756 110.825 123.588 111.794 123.05 cv
111.822 123.074 111.846 123.102 111.874 123.124 cv
111.94 127.392 112.216 131.629 113.055 135.69 cv
113.411 137.414 115.776 136.833 115.924 135.302 cv
116.162 132.843 116.388 130.383 116.615 127.923 cv
116.696 127.04 116.699 125.059 116.877 123.169 cv
117.077 128.691 116.298 134.246 117.961 139.659 cv
118.281 140.701 119.772 140.477 119.83 139.406 cv
119.947 137.259 119.997 135.094 120.038 132.923 cv
120.158 133.344 120.264 133.77 120.391 134.187 cv
120.714 135.247 122.358 135.341 122.635 134.187 cv
123.992 128.544 124.902 122.814 125.246 117.018 cv
125.469 113.255 126.603 107.612 123.955 104.522 cv
123.146 103.576 121.844 104.242 121.461 105.181 cv
120.545 107.426 119.922 109.707 119.481 112.009 cv
119.512 110.115 119.561 108.278 119.582 106.56 cv
119.687 97.9483 120.545 89.4214 122.113 80.9522 cv
122.333 79.7569 121.241 79.0493 120.364 79.291 cv
120.944 74.5645 120.95 69.7666 120.828 65.0117 cv
120.625 56.9609 119.759 48.9692 118.846 40.9805 cv
119.106 41.5435 119.366 42.1069 119.624 42.6699 cv
120.574 44.731 121.491 46.8062 122.388 48.8897 cv
123.266 52.2324 124.099 55.5952 125.036 58.9204 cv
124.504 67.4439 124.091 75.9981 124.564 84.52 cv
125.001 92.4126 125.78 101.194 128.867 108.671 cv
129.075 111.381 129.186 114.099 129.146 116.829 cv
129.117 117.34 129.101 117.855 129.112 118.388 cv
129.162 120.845 132.805 120.83 132.918 118.388 cv
133.018 116.231 133.006 114.087 132.918 111.951 cv
132.998 111.848 133.066 111.743 133.138 111.639 cv
133.414 113.265 133.809 115.411 135.103 116.48 cv
135.066 118.626 135.063 120.772 135.117 122.918 cv
134.871 127.215 134.234 132.977 136.219 136.884 cv
137.097 138.613 139.514 137.641 139.625 135.962 cv
140.176 127.68 140.204 119.356 140.8 111.082 cv
141.445 111.875 142.969 111.661 142.992 110.359 cv
143.048 107.286 146.098 103.779 146.6 100.506 cv
147.104 97.2227 147.039 93.856 146.889 90.5469 cv
cp
.713726 .819608 .803922 rgb
f
77.0882 57.9697 mo
77.0237 57.9697 77.0237 58.0698 77.0882 58.0698 cv
77.1517 58.0698 77.1526 57.9697 77.0882 57.9697 cv
cp
f
138.666 67.7715 mo
138.508 67.2886 138.11 67.0889 137.711 67.0899 cv
137.534 65.3443 137.289 63.6113 136.977 61.8945 cv
137.825 40.0908 117.629 22.9888 101.567 10.8662 cv
100.466 10.0352 99.3831 11.5825 99.8558 12.5762 cv
101.214 15.4302 103.45 16.6787 105.937 18.4776 cv
109.525 21.0733 112.396 24.294 114.925 27.9219 cv
119.935 35.1079 123.187 43.3198 127.684 50.811 cv
128.498 52.1675 130.611 50.9414 129.809 49.5689 cv
126.054 43.1372 123.246 36.1416 119.47 29.7197 cv
121.475 31.9688 123.337 34.3174 124.997 36.7764 cv
126.168 38.5122 127.166 40.2754 128.037 42.061 cv
127.401 42.2866 126.937 42.9917 127.378 43.7676 cv
129.484 47.4751 131.103 51.3814 132.313 55.4087 cv
133.195 60.0752 133.632 64.8911 133.992 69.8638 cv
134.033 70.4351 134.548 70.7539 135.009 70.7027 cv
135.254 74.3482 135.258 78.0156 135.043 81.6582 cv
134.914 83.8418 134.714 86.021 134.47 88.1958 cv
134.367 88.2261 134.28 88.2979 134.259 88.4273 cv
133.357 94.1724 132.542 99.9155 131.639 105.646 cv
130.446 111.27 128.93 116.981 128.969 122.709 cv
128.975 123.519 130.07 123.608 130.327 122.893 cv
132.91 115.728 133.778 107.716 135.211 100.245 cv
136.544 93.2993 137.668 86.2793 137.995 79.2056 cv
138.093 77.0928 138.115 74.9829 138.063 72.8819 cv
140.091 80.6201 141.052 88.562 140.751 96.603 cv
140.387 106.321 137.786 115.361 135.286 124.678 cv
135.097 125.382 136.128 125.853 136.486 125.184 cv
145.585 108.141 144.532 85.6568 138.666 67.7715 cv
cp
.545098 .6 .572549 rgb
f
129.254 90.4697 mo
129.19 90.4697 129.19 90.5698 129.254 90.5698 cv
129.319 90.5698 129.319 90.4697 129.254 90.4697 cv
cp
f
123.125 93.6856 mo
122.002 103.129 120.85 112.569 119.791 122.02 cv
119.755 122.344 120.323 122.424 120.367 122.097 cv
121.644 112.634 122.826 103.158 124.039 93.6856 cv
124.113 93.106 123.194 93.106 123.125 93.6856 cv
cp
f
125.746 67.4165 mo
125.638 61.6719 125.577 54.6353 123.153 49.3442 cv
122.86 48.7046 121.931 49.0718 121.909 49.6812 cv
121.668 56.189 123.295 62.7017 123.016 69.3145 cv
122.733 76.0186 121.885 82.6924 121.286 89.3721 cv
120.075 102.898 118.414 116.378 116.896 129.873 cv
116.826 130.484 117.893 130.634 117.978 130.02 cv
119.956 115.612 121.95 101.219 124.14 86.8433 cv
125.12 80.4038 125.87 73.9414 125.746 67.4165 cv
cp
f
114.495 65.1953 mo
114.129 57.5454 113.059 49.9258 111.07 42.5239 cv
110.357 39.8696 109.532 37.2427 108.599 34.6558 cv
109.95 37.499 111.262 40.3657 112.476 43.2886 cv
112.922 44.3609 114.694 43.8867 114.24 42.8027 cv
110.499 33.877 106.565 24.7373 101.294 16.5923 cv
100.955 16.0679 100.002 16.229 100.043 16.9312 cv
100.231 20.0962 101.36 22.5684 102.705 25.3755 cv
104.675 29.4834 106.383 33.6904 107.687 38.0571 cv
110.144 46.2822 111.325 54.8901 111.672 63.4546 cv
112.406 81.4873 108.816 98.9424 106.403 116.695 cv
106.294 117.492 107.396 117.857 107.646 117.038 cv
112.7 100.509 115.324 82.4756 114.495 65.1953 cv
cp
f
101.49 33.939 mo
101.008 32.5357 98.7698 33.1358 99.2523 34.5557 cv
103.389 46.7192 104.942 59.3721 104.762 72.1895 cv
104.589 84.4385 102.405 96.4844 101.947 108.686 cv
101.913 109.563 103.242 109.729 103.466 108.891 cv
106.698 96.8472 107.612 83.6851 107.498 71.249 cv
107.382 58.5859 105.607 45.9385 101.49 33.939 cv
cp
f
99.8548 62.8833 mo
99.3099 54.7417 99.1829 46.4175 97.7132 38.3779 cv
97.6712 38.1519 97.5247 38.0342 97.3538 37.9981 cv
96.222 32.2529 94.5774 26.6734 92.3431 21.4487 cv
91.8216 20.23 89.6605 21.1211 90.18 22.3609 cv
93.9681 31.4087 95.6683 40.8921 96.0325 50.6685 cv
96.2015 55.19 95.9944 59.6983 95.7483 64.2027 cv
95.6819 64.3399 95.639 64.4971 95.6565 64.6958 cv
95.6722 64.8643 95.681 65.0332 95.6956 65.2022 cv
95.4212 70.1509 95.1263 75.0962 95.2493 80.0498 cv
95.263 80.5855 95.7493 80.8926 96.1995 80.8794 cv
96.055 86.7305 95.5355 92.5713 94.5921 98.3701 cv
93.7649 103.453 92.5345 108.393 91.1565 113.291 cv
93.1868 104.575 94.9153 95.7847 95.7562 86.8682 cv
95.7981 86.4229 95.0618 86.3233 94.973 86.7622 cv
92.9651 96.6812 91.1741 106.626 88.7435 116.456 cv
88.5472 117.251 89.4671 117.675 89.9905 117.332 cv
88.7894 121.39 87.5315 125.439 86.3499 129.533 cv
86.1556 130.205 87.1399 130.631 87.4847 130.012 cv
96.886 113.139 99.3685 91.7803 98.2806 72.3237 cv
98.2903 72.2481 98.2981 72.1719 98.3079 72.0962 cv
98.6761 77.7944 99.0442 83.4927 99.4124 89.1914 cv
99.5032 90.5996 101.71 90.6084 101.616 89.1914 cv
101.029 80.4219 100.442 71.6528 99.8548 62.8833 cv
cp
f
87.5062 99.9649 mo
85.9358 106.646 84.3665 113.329 82.6751 119.98 cv
81.3919 125.024 80.5638 132.249 77.761 137.15 cv
77.3694 132.1 78.6185 127.163 79.6917 122.194 cv
80.7874 117.127 81.763 112.029 82.6273 106.917 cv
84.261 97.2432 86.2249 87.3399 86.4495 77.5161 cv
86.4661 76.8027 85.388 76.6568 85.2064 77.3477 cv
82.4095 88.0088 81.4935 99.2661 79.597 110.128 cv
77.844 120.17 75.6126 129.86 75.9192 140.118 cv
75.9427 140.895 76.8831 141.612 77.6077 141.086 cv
82.1829 137.766 82.7786 130.548 84.1331 125.467 cv
86.3226 117.256 88.2815 108.986 90.2405 100.719 cv
90.6605 98.9439 87.9231 98.1861 87.5062 99.9649 cv
cp
f
89.5071 66.1773 mo
85.4534 52.5869 88.1624 38.542 85.6009 24.8052 cv
85.4388 23.9336 84.1771 24.2031 84.1273 25.0044 cv
83.2835 38.7691 83.053 53.5171 87.428 66.7505 cv
87.8606 68.0581 89.9075 67.5171 89.5071 66.1773 cv
cp
f
84.5882 58.3032 mo
84.5237 58.3032 84.5237 58.4028 84.5882 58.4028 cv
84.6517 58.4028 84.6526 58.3032 84.5882 58.3032 cv
cp
f
78.0052 25.5151 mo
77.2757 58.5816 71.8763 90.9971 64.9583 123.27 cv
64.845 123.8 65.6106 124.016 65.7728 123.495 cv
75.5687 91.8838 79.1683 58.5166 79.5052 25.5151 cv
79.5149 24.5488 78.0267 24.5503 78.0052 25.5151 cv
cp
f
66.386 33.9287 mo
63.72 47.9229 63.0345 62.3257 62.1565 76.5215 cv
62.0804 77.7564 64.0042 77.7529 64.0784 76.5215 cv
64.931 62.3555 66.6517 48.1997 67.0071 34.0127 cv
67.0159 33.6636 66.4534 33.5728 66.386 33.9287 cv
cp
f
59.5833 60.6939 mo
58.056 73.3174 56.4271 85.9341 55.0472 98.5747 cv
54.3919 104.572 53.7288 110.579 53.2669 116.595 cv
53.0325 119.649 52.8362 122.727 52.848 125.791 cv
52.8519 126.7 52.9485 127.628 53.0716 128.56 cv
53.1946 130.73 53.3948 132.896 53.6683 134.95 cv
53.6194 135.732 54.8841 135.912 55.0433 135.137 cv
55.8157 131.394 55.7659 127.289 54.9095 123.519 cv
55.0599 120.641 55.3851 117.777 55.7523 114.92 cv
56.4954 109.141 57.3812 103.38 58.1487 97.6035 cv
59.7786 85.3169 61.18 72.9971 62.6771 60.6939 cv
62.9173 58.7222 59.8196 58.7383 59.5833 60.6939 cv
cp
f
45.4134 104.014 mo
45.2308 108.352 44.1409 112.78 43.139 116.993 cv
42.8616 118.161 42.4456 121.603 41.7064 122.553 cv
39.7923 125.015 40.3382 120.287 40.3069 118.942 cv
40.1409 111.66 41.4573 104.249 42.223 97.0215 cv
43.8812 81.3775 46.5335 66.0142 49.2405 50.5332 cv
49.3831 49.7192 48.2776 49.4009 47.9983 50.1904 cv
43.6448 62.46 42.0413 75.6489 40.6614 88.542 cv
39.9642 95.0547 39.3099 101.579 38.9358 108.119 cv
38.6116 113.804 38.0062 120.077 39.8763 125.55 cv
40.0032 125.922 40.5003 126.238 40.8753 125.957 cv
43.0481 124.328 43.2991 121.756 43.9495 119.201 cv
44.6439 116.476 45.1507 113.705 45.6839 110.944 cv
45.928 114.09 46.2815 117.236 46.5394 120.361 cv
46.6575 121.794 48.9114 121.805 48.7894 120.361 cv
48.3245 114.848 48.1419 109.226 47.1585 103.778 cv
46.9739 102.754 45.4534 103.054 45.4134 104.014 cv
cp
f
42.4456 49.043 mo
38.9534 60.1035 35.9349 71.3032 33.4856 82.6421 cv
32.2786 88.23 31.3001 93.8516 30.2581 99.4707 cv
29.8167 101.851 29.1175 106.999 27.1136 102.446 cv
26.0247 99.9727 25.7894 96.5444 25.4515 93.9219 cv
23.9778 82.457 25.3626 70.8779 27.8118 59.645 cv
30.2493 48.4649 34.2269 37.5298 36.0423 26.2319 cv
36.1829 25.3594 35.0159 25.0161 34.7093 25.8648 cv
29.9251 39.0703 26.1605 53.2734 23.9544 67.1465 cv
21.9788 79.5723 21.639 92.6255 25.2767 104.792 cv
25.8929 106.852 27.2249 110.442 29.9788 108.422 cv
33.4358 105.887 33.3802 96.6211 34.097 92.8091 cv
36.8343 78.2398 40.4964 63.8706 44.9544 49.7344 cv
45.4583 48.1343 42.9485 47.4497 42.4456 49.043 cv
cp
f
137.227 138.445 mo
133.863 132.771 131.006 126.857 128.688 120.64 cv
127.941 118.636 124.715 118.777 124.759 121.172 cv
124.924 130.134 122.301 138.627 117.113 145.776 cv
115.349 139.166 113.204 132.689 110.621 126.337 cv
110.032 124.888 108.514 124.425 107.279 125.455 cv
101.659 130.136 96.7981 135.617 93.0062 141.883 cv
90.7317 145.643 89.0208 151.431 83.6663 148.004 cv
80.5296 145.996 78.6585 141.902 75.6898 139.617 cv
71.1898 136.153 67.1155 141.567 63.6224 144.319 cv
62.1302 145.495 60.6448 146.682 59.1439 147.848 cv
55.4603 150.706 53.6536 148.447 52.0823 145.015 cv
50.2249 140.961 48.4163 136.884 46.5843 132.818 cv
45.9671 131.45 43.7855 131.576 43.1302 132.818 cv
41.2679 136.353 39.3421 139.851 37.3802 143.33 cv
34.388 139.452 31.9524 135.252 30.0872 130.682 cv
29.2952 128.742 26.1048 128.77 26.1585 131.213 cv
26.2034 133.248 25.6302 134.859 24.4358 136.13 cv
22.1517 127.431 20.2083 118.658 18.6448 109.796 cv
18.3157 107.931 15.8851 108.069 14.9886 109.318 cv
11.5198 114.158 8.05108 118.998 4.58136 123.837 cv
1.16143 101.771 11.4466 79.5899 6.92804 57.5103 cv
6.49737 42.9585 11.345 28.5825 22.3323 18.6226 cv
33.5081 8.49269 48.3841 7.19435 62.6702 5.08448 cv
62.7835 5.09572 62.8978 5.10548 63.0237 5.09767 cv
69.0345 4.72072 75.094 4.08155 81.1185 4.0547 cv
87.7874 4.02443 93.5306 6.08693 99.4505 8.98341 cv
109.909 14.1011 120.048 20.3276 128.184 28.75 cv
136.478 37.3369 141.954 47.7666 143.593 59.6265 cv
145.348 72.3335 146.533 86.3623 145.185 99.1402 cv
142.533 112.242 139.88 125.343 137.227 138.445 cv
cp
149.348 97.2354 mo
149.866 90.4473 149.405 83.6851 148.967 76.8887 cv
148.539 70.2603 148.309 63.5708 147.238 57.0059 cv
145.3 45.125 139.317 34.5366 131.012 25.9219 cv
122.297 16.8823 111.271 10.1397 99.9827 4.80861 cv
95.1243 2.51466 90.1204 .579113 84.7171 .159192 cv
78.18 -.349109 71.4251 .478528 64.8577 .966809 cv
64.5589 .869153 64.2288 .829113 63.8626 .886242 cv
47.4329 3.45509 30.9319 4.7007 18.389 16.8389 cv
6.97784 27.8814 2.06475 43.668 2.99249 59.2974 cv
3.01983 59.7603 3.17608 60.1372 3.4085 60.4336 cv
7.22784 83.2735 -3.98993 106.334 1.58624 129.275 cv
2.02569 131.082 4.30011 131.067 5.24151 129.753 cv
8.7005 124.928 12.1595 120.103 15.6185 115.277 cv
17.2044 123.595 19.0892 131.844 21.3138 140.021 cv
21.6673 141.318 23.1175 141.802 24.2513 141.216 cv
26.2103 140.204 27.7142 138.793 28.7151 137.083 cv
30.8001 141.077 33.2933 144.793 36.2698 148.289 cv
37.1116 149.277 38.8108 148.932 39.4114 147.884 cv
41.2132 144.738 42.9603 141.563 44.681 138.373 cv
46.2786 142.08 47.848 145.827 49.7103 149.381 cv
50.9075 151.666 52.7054 154.052 55.5579 154.09 cv
58.8265 154.133 61.8724 150.755 64.2112 148.912 cv
66.2776 147.284 68.5784 144.831 70.93 143.619 cv
74.0413 142.015 75.7005 145.382 77.7142 147.518 cv
82.1966 152.274 86.9896 156.994 92.4271 150.479 cv
95.1106 147.263 96.723 143.198 99.1771 139.792 cv
101.708 136.279 104.653 133.126 107.858 130.239 cv
110.427 136.909 112.575 143.701 114.253 150.662 cv
114.592 152.067 116.609 152.673 117.596 151.545 cv
123.146 145.202 126.74 137.72 128.123 129.633 cv
130.517 134.876 133.278 139.926 136.456 144.79 cv
137.328 146.125 139.75 146.099 140.112 144.312 cv
143.3 128.565 146.489 112.818 149.677 97.0708 cv
149.568 97.1299 149.457 97.1817 149.348 97.2354 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (6_head_2.eps)
%%CreationDate: 11/11/2019 10:32 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`r8R"e3Oe@fbAHEi:6-Lqj<t!+g$`jo^N8C7WM/kKX3_3VW)k],"dd3/=A-H;a&c&dG]EWObnmQj4h^gn
%qnoJtY?l_YMr!?q:L<I<oAj-Oc'-sb\'L\]qTEdVr5mDPb;Ind8mgI<H[^>5lLg&_Dg(qk@:T)$(]VDIEg>D[IqO-(qH#>Gl-%g?
%DrgTPhDkH]^]3DEI\a@Aput$Brq>)ZhnOI8jNY#40E9YME9d,"ZJPH$g[C`t0B?`[fJts@._jaZDu]XT&'s.s1O&.fo%,fbgYiqJ
%Fn`N:d.0?'b46[qA$JE$-(VZ<*C"cChg4#4^Z"X1(NrZJo>MM94N$IkH.g.^^\2i%]CQ$0r0/kV*dmqO],+7Ls7uQd(d_L%LYEX&
%4b*%becrn./$E%*I+@;b95XW*)+e/s8k\^_H/Fdk4@YnYR_&ob[(*cuX&+^[ZO4tEO3__Dnr)=R^O>[tm;%oFldp'hI.mSu%(Orm
%Ee0m\GdXn)g'POoiVDm,IsCeUNI5>M>LNWPc)Yc#T?DBCNGb=PTu]p@a8`V)rp]"A\$p9DqHlDc!TX'8?![<qIf%$@?U+AP/Yq&g
%Hckfk]7'L1=9!pAlroRAH0Li@Q/iTWXh3^>U]?I3=ao%r86N4piZ>Ts^NnN15RP4:EW=k\BAYn"q26$ZmcV!&RgHiWrTp"r+r%em
%qL<n<<Ls,rrl<l#3o\DRgR#TpSH&HTRqYJH=24PDO$:8Tk4%X>`o_XGF"`aAV9H:/YJ.F%Y5dGKj;'t-B-5-JYCHFA/pR(&2h(\g
%\,*`5obYr(OC/"XorB1Kqpil>IeEK`:TqNYohW'/s)Ir.c)]GOg>D7GpJ:fnrpd>N:H@6TIsCqQWSBl?4jLTao'Eu\^#Ok<SZcsU
%qHLLrs6Tc6aRu886nPN"d+6[h+)dddqJNmLT(e=.Ie!?Xb9sK;r5H2)YFkbA^Nh%%[,)EChS/gGKC11Oo:9t2n%s.kmf/RdVI)LI
%;87SRo$/i>p>kn9^V"mkB+3Gak<Df)^3Y3MqgWM@FiQ08I/E'jT?cn>XWMrB0:oiPP:SGt0>I=3oRd'`m:#Xu[QW]p%o8c]J+i9q
%-f=meg!edVoafs[C%mBaYF^fe?hjSEdel3+$<KFPTjRfl`BV%^rp9Luj"YVu(XbImSj'pfnuprc\UBk;@G8JFq7E!I5BjlZ:,r7R
%d@GU.HbKBmm*isSQ_#J;r:fiJ0;#O_/j3_AX770Fr\sV:500X?T#p',7mXi]S1jp57$PNkTDd5#-7ZV&T:`e2gL9j<&'s+fY&j3b
%Msk'#m_8VJPOEBLF8D;3Y.%)3bDJ3]=?li]gXe2`hY/\d;h"Q=aZ%OV[JY_00k/!jQgP@ScWfW1gY8(cR*4m&?AIA9S&^ThnaWC9
%.f%eG^u*']03IT^riq9]`P84!+8d^KQ/Ns;R?gkq5Dm(FI(b%.M/G)^bc]h-[Y<RKfC-!1\(K@S`'/l,Zn/]tm"hi0ni$C65O(tk
%-[CjHdI6Ts?:3UZIp=;.$f*stpr*cI^O(G,GIubGIe*&6XIJB)>N&ePi*44Y6H[S"r2mBb4oWHNe/01E-!)0$77aM"LPrb)r'-5a
%?0CN!8%]>`rn>K![$)KM[Vsb,5IKU=>&9o.k2]Y0W?1B>atIM/\]3p8.lZQ47k5dL-'q_#EVW(aUE'.^\&^Ge-fp^_p2Yt1OdC/7
%a!i%j32F5-nu,MdOX$\NLJKZMP)D8>SDlgEH.CQA4<eC-&;(rd/o_1Vi?ZGu*9<4-#q]+:8rs;;,T/*cIpA*'$&cRWEK]AG%s%$u
%\G#KU^A9#Y?8?f:[?jXR+)q\dK#?ESP8m(Qp<mArknNr.&W%]%G"I_Xj>"/0I(1+U:<QLpKDaCUf5`\h<K>9J/^]TOO*LTds5iIc
%Mn*j&l+_W-c+j-Y90`,/pg_@$Inl(rq<pWKrufATIP62RpMDPc\hA*"IE!u-K,j(f]^Un#-TMZWi,fQilRHoWaUnP@=,ZEAHJ4>u
%8!0Er*&nO>,%<hEJdeUmiT"k;3/T7-jOdD&Xt+t>Q_IaHRP9+5>p<X;Ye#XTS]Xh/*9@.oo)I<^2#1)3s,6f)J`&dM7/f<'UF]uu
%2if&;,bF'nBfsJ/4^NWZAJ)Js,+4P;/tJ)"BC^=X&rJmtVgWZQ:]0gE4$&Lb/7#_l:2U[>as)+XG7oH5,,n:klP(+sn0Hh5#Y,IS
%R6*.GB=571VmN6B';in\4/S3h?]_HDdL1hX,<ZcPhH&maUPPb1=e0+TY%<9(AA!MQ?P/9:CsnY*dQp@:MBj1EO4Q<7,@2XmL_O-Q
%9V"TFS4paI>ubESgYm*2MYOenOA="iGl[loj7RDA4<EUE17c92n]7UPlKA"c3$%,-T,X1b?5*ADK1\R#Vqp^;j*5V`a-!.'E.B&f
%r#>tSKIMdT-2BCn;@4@rmTP8S6?o:cinb%X*HXT?fI"ZG`;&jI&SM#H95!T?j@?5n)pE&s:XA8:WDk$N"V6]_J=jMtfhj*F%6I<k
%F72*9_Ht6<;_N29<]knrF3ghCBm[^]B(ocO#OCGmO:c#)UU.-mBjB["FLrNj_p.-Eg.)?41n>%APU"jX?m+MDn4GGQ\DW0l5GCXa
%BK=J$Z?"%UM"]s"@">&BnBj!bGc>ha0MorPULk6X4GHPlm0u/NL7d;"O3CN?&9KUk3][6J*\W>iiH!>)d&0tM7!Klhp^t'u&lC+%
%%:+sRPD/#38U@0`iR-#TNY<<E)\Y>RWaj0fkSU<"%+Ll+iBS,tJrE!<L]g##?p0ToKSfpD`l3W=#E#EV%IL\+*iY`+r*Yf&=nY8[
%7(FTn[k</9!bWD;;E2j.TH"G5Ugg/GMG2=DB_",.dLV2)A[4tj/=.]OI<7ji%O)S<E_B*Y/DV45HG%>H+u49R@6'..?-?`YI!V*]
%O!9]gL__U$=CV!4\<O[/*AU$FbDP>SEg!>/6+Q,u;KOoR1LuV$J.ZfU1B`WWCkc?nO>iH]_W#PeSPcq2,jF@)"f!^d#8nC1&m-,/
%(C+4a(+on`/dBp4#"k2**!V:qEH3hPjP%h@9X?"#1cedG@?MU!@eV]NWgP,p#)Q926qe%,,^V=;@#Q?e73%9u2*]U_W&-T!R2jLG
%NMB0k(`Eja+@g'Spo>RJlZV3hRt8KneHjrQ)fXD'^e:R)8)?drmZ4kLEmgQ=Vg5%d1OUcV!C_V$'[[dB9aWFY8`LG6[ebT&!J7.[
%\Ea<Gf_+^t!;saXQVUrCI^Aq&RaA*S""q%*m8J35\g?@T5"MEUR`t\^k[>hs659A%/)_US)0S=\!G`lqa'gK/&^.kDkXk+E-c2?@
%N('_%:`jC-GUd!tg:aR*W_OcRBVXr[FXbHGC,/[I(95;9e`!J\^G8shnuI[e?[1a&[kG;6<*`RHe5TCea._L'C71N3[d^;k;cTa<
%:=Ymb]JA!nWqcG:?4X;X<"X:b\/m"ZDYeq'HTKsD6Nk3^3Pr`[hK,L[5rEuGOmbHUrJ01u^>IHO462D45J')>O?5Yi]S@T$ms*_-
%PAfJLVZ_;d?)sJ`Y:S\b#-l<MZg;7SJo:,N641-D6'ent=l=l_FdX.;1l;S7dBlT?=&N`(dF9uD%]3O.6+<a8GG;fKNK^;^.^]a\
%2-I#mWTIleFmZN(Ac#o!WBmEDfJ(;l6]A0ukbu1_@`R">0N5%lA&4,/<D1R`=[1VNS6_V8L>stJj/gG8dA@.C[q3&`DUNKqrmuIL
%[iFr)89YPY7q+aX*Tb+->n=JUIF"\%rK'+Tj,E^q*dl!5s2Z3Fn]u]D42+@_9_tQBR)?N>VVrk;AP[^uetD5j,Xum@.4D5SX;:=]
%SXA/gG"\[^!lr^9=c@G:-[d0kTeg>c]7K]lPcdqsX`D[?nR-7kktJ.2TiDe9!1)/DL0:jQ\s#'pMeX'9J6(T:eM>&8'9,mJ%U^7L
%;:dUJFj.Cnfk;A5UGc:gX*;iGd"ULRo,&hL0WfHs0ki,Jj'D'Fp>^Ump27#,6-&.Mr_));?Nkq%G%_F0n;-_H1:<P8ZYOObJFh[f
%A?l06gS/Dk`d#<c/1/nd?8NX<VFhkQ(j;*%cRc,oKAG$/-h5ERfWs^%9Tm;hmfN/&/1=0l"i>.j56\rN$]Pl\"G"%##]@a)7F+9C
%'mabW5SgaH+Y7<7m^3cJ2aeR@!NP9[Mb%ti0pkpi<!t-UW-Y:UN'>;ZR!&XFT%N+LdG#;%JBtWL<jUsGHU(g8jkRG<I`)l=cgekl
%\pUTAQ&CE1[-"&PI)mITI*d-AJ0/mS*?T[sJ#5;NNH0)]F1g2L@T[Nr9t52@S't5h^<'nV1'QM(k'.RP!@4+pn`U:5*Y3ULTU>eY
%,PVT/ZdH8-"?cd2!q6?J$*[@%:'E\>N0Pj5W=Ys.S/ZFrTM;[>3k4tsBQF56$#RuGVSSa_+*$Qo`7[FOKfKn3<2`a3:5(e((58jn
%4TTnE/2h6"<cf#U:hNYY*g]#nCj&T6oNKe"`Ft1KC&(RpCLb^5O$d_HL/_1?:9e$=VgA!7eR=cHC:Zu:a$J2BnY6]XbnfVNO#S.g
%F.E9?ooM7q)"I<=2tn;i[iS%B4cU%:%M(S\NXn2>*]WK&+a8>'\c6sCG]WIZUO:W@T/Fc(NUj(:pfXA>egR.Jb%H_)l0`4'AY^MG
%s)\-g+9,!r-kr)D(%HX=i#4&jalS87V]p2M/T*iim=i;[86,FApHs<L-!2cB?!n9#2BHkhgs=44b/qs^`2i7%</!u[ldli]8+Lrg
%Q`K%Kfj&Ut]7/!OrEqI0Hp3+n-_J1kP)En2faf4&Y<&FeUi3B?T967U.7&"H(/`;DH*QJI/Q6QXq=EbsO([kka)S#/4Qs9PrCeV4
%M2ai$AS%SIL#O4(ZGnK8XXPQ?s)Lsb5K3RX@AS4E1\"eWZLTYN\WH5W(Z-EIIi3MbB7CL*&%G!_B%2=AHhM[]f^JdG^%Vg[Ll7TI
%LpWdKOA3Sd-1#th+=i='=2MTUM`ZZuOt>f4()PH8&_nsI<ZDqf8,+PHel>P5O=p,G(!s&k?d6Ef6m*9hX(+>Y`<'%N"K7=d9@4%:
%"E-)I>D/UcdVd6!ZRM2H@sP/A0c12?(<]q4SCJ9<==1UmZ:Z$<Wg]]__!0+b:=]9lD/O*p][WO@HBRN>@W&4.VtLPL?l>uc;4Y$m
%Rpj0ke*>9$NZ65GIJi<9aC08D.G,6QO[c(Mk-AlcHKSs^8'Q1INt!^hnMji7lppJgl0%3Cj$(Y&4iAd/Dt=K'1fO/8O?;<5qmb\X
%*T-V69or#cjp3kFdl0h;dGVQiQnf=q1th?=eEt5^O6W@W&<j%_%f/N4V2*MMSXgu-9fF:/0UkPc;^\,j<mj+sdSk:UGC<r/F\gOZ
%,=,/tW\m5lZcjOIIi>m*Y2R3[F#6ZRC?XHik1:A^l="]t!oaJAC"U%Q\IlW#(17J#:s]cX-'o#B#-!"qOcO[iqI4He^W/&VVd3)D
%pkKn9&oH:mnU"#[ccY_1:GlMu3Vn'OENG:K1RdsNL\YR`.Q?*lB[0b5\tMXUGl6bB/faE<,JE-YEl\+9UKfeDq&sspe+T*&^&*mQ
%52`O:3W<OGYntV8T,M%IhSMq0q*/]R--qaZ[G4Tbr-OJ(an#>\m!e*jMftJoq]D!U^Of*e.Qonr"^Mq<-*MUn,LcZ*YdD8>ReL`n
%P1Xh[=Qpf)lB"mbOO=n>\cX78hHlnO/Wb&\6n3AM6Uqf',^6m/)6I;oIGiHi!&Pc#K,t6Hgll1-g@gUiT!c*)i1jO<kRN'oOY7es
%a*W:,TuVZD4.ZK+#?cfI9ibP@Z\TWLTXLh/SO_n5dit[\Od/J96ddG0e0&H/d^A>1`,l<f53fOG<dDW(f!Xf,4_fuu5Isd9F>L;P
%oqq/U=!%%gUTU4'!*9H=JgcH+cW[,ZAZDhIlm8[p"fdie4'Fh=cHB0/5I)2:"j9]M<$/37H>iUuc1IJ@<u31jWM\-2lY'[P@)960
%:u/,M1EEDaGGVmuYi_X\<=<RX+&+Z@L76@hVkZpU5!.3GET]j[(bQg-hS[%eTZ2HE6-]DSj7/n"SS-"-h1seU!GB*lnK7Re)bn5u
%@*pk\(VXLqCR%J[WHfW;JW$U>[6@>Ld:5C;)o5rre4IF]A<MfTO/WnoTs-(X.7BFc:l#eXeWJChl7?2HMR(WY/ZbemXJ\`MKu?(b
%lV3^h/>L?'TN;&KHL==0GNeOreL7Ecd(K`8)tPdpnr#D"XNAs:%*rH1%_sg?!X;Le5LtKIH`1%eLH1'+"c6sXXiIlcB:G'n.8-CP
%G[A=1W<hd0ajf.p.W5JlDi]8s%lns0Q_kh<a)QFW+a8=s3H%'@kD.j_:><f0TC;P=a8:P<(jh@P\1Xj"(#'pW.k"\<p'!._O(.u"
%"4t]D$dj\>]u(QVMWm7[,qXW,&<sr-UfH-jW4=,=(TR]M;eaf2TqG,'F&l$j(KH"$68\$WWS!M:C^Ve?1"WkLU.s_aHWl6"Gias,
%RDk^PY#/*UH<J5b4'J+$?J/b[Ik>,l^Vq4a--1;KZCN/)OWGFF9#E+T[p-%@-BNe2gSn]6`03k5,.#!tHQS(P1pa]#n9.-m'.I=l
%BiTfV`>co,/EZ7a4X='I<5Kg2YZ35PGkXt7Zm,s>i56?c31UlqnA_Znd0\[9(]js4@c;Z'P5g('V_*T:5='VWT&(HO,o:R3qbt6_
%(Ca//1igVmA,P\lGE-_,fGNdla%IcU>pK=(`jluE_b=!^@F<!0+"&k`NeW/Rbol=!feCS0=H,))ARq+;h_9]F?Hoe/,R[(`iJ&MQ
%Asc8;1Vp5LkuE]?,+4jqk#F@>:;_TCB3J3NB>FE]'MkoXn$F/!U`N\ae`f3M#hC_8B,)'f!U_#7b>Zc*V3STZ-tOTrl9Qb,1bpG/
%c!mCs[&i5sCgf=MN]Bk10aPB[j790='6@RVlc/-sPStn+NQFPHRdrONf>R.>?NYnm=R0-9_4$lq&XLG:<og_5DE6H8r$FlLYuHdl
%dfnqV>?\_qFC@/?kEE7m`GrZ"3.Kiq5(7Xf-[tIO`32\LZU[=Y"OcNjVU4V_?kV-\]!6eJELfiK*.:0(BgUo9TfPSd2PE#m9q+9`
%R;2';9#H8fP6\Gj/a"0JpK:NM7>p&9O/.+GQ[FkE\!RKK3XOMK,)j#YQDBaYFeltJZDM0nHBBW)H5KqV*Kt>J`L(C1S;)aED$772
%oRZ>S>'=5L_lO`nYV%#a<eOf;*l]q-A[SDrNm$6gfOEY\gE(8BlB',c+,@<F%q_*:a+!rB6gm"_Nf*YcWq*WX8!QJgF%YhN0orCB
%[7mLSF52r42"cSdYU?7kU)^r[O(Q@1&h83*fq%2tf4MRlm/jp2U0Gl[#p`0.#qVP<@(&]T9qjH@j[a\cNB\g)O[^0K%h[#6AKbM>
%5ZVDih%We>Q47XL!.tPR.)"SZ6YolKg530:h0h3-K<3/grqUr^J(o2F)gOE9apmKK1`##@84BGp!m$<[:l8%<<"^&V6db:@:^_BN
%Os[M&-8h1&QjEd\'ndle"9[7dX##JkdNblqFIEfHT?%4;rjdhZ4,e9Sk=/\q)<J-pc1,bm1oJh*]eJ('D[3NRq<#W)R9A_@o$7'I
%4r6[3Da$8J+@)&Vo[(`PGFoYBp%h/D:Q0G1s&W6ZFo;RZZ,(!)I.b>AI0WmlmiERe"u9jq<Zcg@0iWUg6K+NRr7FeikT)$HOfDMb
%A@3Wrh,IW\XXt"0p5C[7k%\kEs(M1o1B.'29oCi[`Yq23En!TV_p."(lBlV<3U+(u)R@)^A0X7-*G_oHs&n0r1la\YdLVb1X#.!q
%b%t:aq!_]Qk5:S;i5-fLZO-8o#DonGleV&/%o'/jGJ3'Z-eO^+KllQ5O'M*tf1Wkl]@l^LC(9aG4oBOi#s-=jG9(VD4M#mpK8"]k
%JNL##+ng4nDrD(NH<XJ7Gti7Ie@?pa?=9PNEqbCsYHq*f.4oa_;&Lb<aqmu'QC,S4M+9qf[?^_ID`I8$MVJikDNTKkqH4]4Ert'D
%Vk4DsqV+"2m=$=pSWhEPog"@Ij+`M9:&.eMBhnRhp11V<`*Z7;74;tH7@Ot4jodBWh::+=(ier5&:Dq?JoNIn\7_nuQPuC>;M2IC
%_,EZS%SI.X>?^OP`8GtUK'srghjXsh'Y=l:/gLUMjM<p<q6P(O&!OoE%1\s7"n.0IB4f&n!P^M%G9MK\:Y9Lok8^@/N`aRkZRml;
%P&2)^cFIYtHp_*AHd6qZcBpGYJ%=SD#+1IXE5<GL3'T;jMJ/"0"uNi3]T!!^mH2e3H?e2j]a!9*-=$B9A+3r5J3Z<b0MM0R*k:65
%W),"3%P,[_oO0D);#Sup\rE<Y%aI-#Tf._rM?i$4RXSJR@="I_h&DhWfqsGZ,qaX*Fn&c.ir4[V&hqq[hI9&J;tB#sol<[:luurk
%fF>[<Hg%IO6<=%6OQ\c1WI3VE'SC:47qC+]'sSNh&+?sjY[-4Q0/;E4-/+A((G!3`r#Snt,t<Z"9ifKKKoTZd#;!ANkR>\Cf8-!L
%FFDO/+,b_tIh;gMk-G?"eP%AGfA>;[)fq1,RO_1p>XrpON1MQJ/ST;d%U(eGY`6[!N'4;4P@>+H!umLD^#1V`8AVZJj(<>ZljYlI
%]dD0^]:[)kcgO$SGL$RT;iZQlJ5![&!s$HkRGKis*_?;pAuDM%C$JZHb;8RaRGU,@gfG/r%VPN3GOBt['k^>+hf=9K]sP_'\qK(*
%?Qjp@9D$@i4sDrllJTEt;G).G^rP5!kFdmDGZHIF-V>5*M,EH!bZkN(NJY#qjtBb/J(/=!G".508KWL?k&HiPQGZbKF4mG[lFWcU
%a!p<&l&P'JDDfnKS!0lbH(Ue_bsO8lLB6%e^7!V/S=+l_eE`OA4h(4?N2'iO_'i:69]S9\aP#PU1Z_*P4H>_II+gsr1tr$`l$gPY
%1t1F)9pR7F=YIrK(0<&faDeqd"[+ns/X&:5H!T>s1.?_Ub-Yb?,]7Y0L`SU5:;UU4Dom!D)_V%1..?9c:TrPHUl!T+Qo9aE`Um8M
%-;D-%%%5:*2FSe<hGs18<P8g:(P'So5CPH351WUB2_;=Y0<;K[UR,E]&dg0<anE-":Aj^t[hY7$`HJaPNEr[s3iaeOKF_*o>BdY^
%6UQ5)ggCnK$eWVl!j8gt<G"p979#)@4FYfMP_#[LZ*uu6f)nCN)5Y[D;XsA"UknYAo-TN-c(`kQ:n2)ngm:0TbuR:DbS_CGmucII
%jRnTrk06ck4mH73aT7YgDI(]fF(+f]3MoD<\`;Y#=0t1bE\<-tbLs06&)Q9uCDifdB8*KBfN'XNNFRQKLOF.\=A(<EQI.[Aa0V"b
%D,S8[A\kTkPA2M_G3SMJDYr:S)<d%^],6*L(%CKo%@\@$jFg;5%6'\CBmP-1Epo-!e[);/pc^Pe7GX4tHno'QEjtF1YkQ<*ZF"p(
%<^WH!T+AKf4H9dC"<KoY9qA2Aa3_ID2ag:[kOB&8MZMqVm!!iq?+T3_'<S&]Wik(Tm8pIO80Wp6G:MCO>IT.441HeW6auT855[&0
%*hq+MAK#J&XdAo**"59k_(7N"12FV^J:5f++)C9*MoK(XXZ(T67\\ZePfm/F%i^RDop7T/adWT'$>#Xp)O`EWD<%PEXf#cNh6k7N
%$3H;_R6^h@@W@:jG!b<),t6`M3:g$*037CZ2(_pk+'f9YoKC(:2l5`FnV>Al@%4jo?p1(b#0ut@>N;#.RsjQSD4%(0kIR?Shu99M
%cM)0qjpc;+L,S@021<XcX.Z@*h?+'gdcH[q"_[O9VqLLdZ'CAY3LPiM;N`AfrgFO'>JE3m?@?$Xl<#J4]Mr.!):k@Xgs!U0j4LQ\
%9gPR8N3iePk"q43d:Dfa-0[,P6oPuJX80*i4Em;S,=$\L4^4Hkj&K3*S=;G]f^:XVD8Sb\F\PM7AS[U3X[K9td7VBmDA&\uDfj*)
%V/)7!/e^^/hK^RhCT.!9og98<H4.G6$`:AWS3B]a4icj-*o`Yk/Cr2L1c^lMA>>nE1Rk2X-maGU2eIuZ0hqNl=Dl?'*K,%Nb/QYo
%Q6/#9^Y*"cNRi4l%W+G,#PUJ+B(m8Ro\>V'O2)_Llq,+llZj;^6T9>U(QVDO'Jadc\[)7k:YT:QWHE*&1O]/?8lUdjYi+UAD9'CA
%5LJ<!AO*Vcg:hQWqLkn]];XId[si$#>]j5^ZhgN'Kg;7`hR7[0Q3;0b-?!d<^8,"4@%,O:XlaEZDfI,]SRG,LM,e/ePB'9826(1u
%3Dh"h19a$H:0]4lf7h4%i+@W^YYf4\Q+F;4Y*'XT>A*1[Kg-FPf[P.\L$/--mS$[7l"KK7A@MdOmtEmcae)tmbB_E,VW<7!Y*X4k
%Mf"aWOh4rF]GR@`5JaLho:D;C_*<7t9<RWDY_."a>Ip[)JM9G9^lY\8`[d]i1@_WTE!ChK2;o3?K?Af1]XLJMHcQ;bJNM))13nC,
%LeN1oM-q7Rqb"dSP6i2EGmrk5SB#Ujaa#H#d0(GrNp&U?k:rMsFYh5(E?-8S>1?9A4-/jCbO%F/o,,fKCu[&^atg!S%YIu[O7m-k
%SGU1/jFiW&UQ>76md%s?@m?%R]F4-irlT0.ARLgUqguts,g<RP#YBn)LeJdHnh<_T.MH#ad+F4'FAQKR\@l]],56P'Mi5]]N/RV+
%msAd+0t/]6rGi/E68Ar[O'iA'Gq\sdms!SX48"pjMfQJjf'AC/"+/pJh.GZX@\fFh&VROlW//D1rcQ7a.s)6'/^*`rc@+p%r<8s9
%CQuf[c-3UP>oOpbI_>8d$G$#<[o8sXFc^&9.TSq(E$q_+eRZ;`B$T6b9]k>N.TReo]=,H'2d>2-#,:QKhoq.j94S"$@N!)8S32/4
%gQ<.AhbVKgn&#j$pgeQ5XeTEgq^AN1bi2jaD10%hrRNo4hsk0c(hnR<f)7HSI4&]E[;47&EIi%=qel#[D;Xf(`\p`XGC9>0lLCD;
%kk71&2r23Kld^0&24^pDA/JF5<b&8+\>)e$_Ls?-QO[#Qp(Y2\0sLR1\"O!_[HMk*X1:m<r)d6*/ul5J*h'0cmq.rmCU.eD7o(K=
%bcbC0[(E.^/*O?oS7]9F9>q43V@I.dPpUau;SF,@HV5VY%#$R)etZq0=RiOW]=0kF':N;eib<uket'B"d.&0uEBcaLV[c*g^r&e%
%3U`Y)mtO!oA%ea!Y)#F%$Z;j8h!P2e$)$W8aS?m-kH!C;mfPQ6i_=G'!QsiQc[b`Df=Ycs&JlQ^mV?ep1YZrH9DRsrLAP,6qr:1F
%Z-j%Q5%*"(1E\GikZqhGH^1OH`qp0]cW0LV?2R:;AhQL*>:H''XRA/s]ofc1C>(q9(NtN45af-P$8uUX9a#F$L_[5H.[s(mp&1P+
%\g%ecW8h@+_m\^$9>nGRinaLo?B>PW$/791hS@0P*rK+@C'-paS-bJdI5ge<8OE8kZZuVQn*Ft0qc[@\)uAG:5^D7J])u>^CG]iY
%jg(.h\`<3Rj'<)L?/58J&nH7jnXHY3>B9Y0)ZMMLb"dku4.?Ei:1?02'6c1M%]56=+=HS[RReSb"-nlCNo#lW4q3klRF,?IU??n6
%Aok$RjV\^9!QsmLT_o3p^&t&+//+Xeij2=+QAN)m`4moiq(M3.?f%WZ\4sDVruCSenU'nHp`Q]2_&#g6N.[Yj6SIdPO(U*(lkE,"
%J&<ZSE<e?.2C<tap1F.cW9qJkibl?a#@24]Epn)6Kfm$Z\bngdHoEkM6S@h'NleHF4h3327THjl`.YkDMiMKfrc5J9l4_t?4X]%b
%r6qu2[stmA5C`7rc^8F9It,JR5%@um0sJt@fOkWZ1C!Oj"8e%.IE'&dqmN-eNmBKN=XH>U`+KMF;dj(^o(?p.^&6m_Z^5U%^&7Te
%5G)6Sq)=?VrUr>P0'Mc<Gk1"AmH^+u`UA<Op;oP4H3FPfs)mLP\gl_6m%fiK@UA%HVKUKX??RL(WuSs>MDr9#s8;C?q!Sai%kCH2
%rUI)fn,H2_rkG<&0@C<AhsC@4IkA9N*qQDhF%_VoXFB?g$T-adi9o3dk4*&uhV@1`k3YlLirB#WqXp?<Z_q`5]mBM8oj;pXd-XF(
%IfJ]`oA*3GIq9Ymp$%rYDdL-VHN3'jT;<LArkl)*[pT17p?A'=mJ[Ssr&=Q2q"Xm[KAP^g?iI[O,C+#6K!?jY47%[hUDSD[6s3>I
%lIY*o5<dJACqDEVH52a/G:nQLP\[[5$KVVZYgNrqa60!e\>oe0ZHfp0O[Ei%="Z<m`JJ$<H`C."dS[!L3<g(,RAP#f,tX#".JDXO
%[!IGKVO`Y@WjIk2#@*-u\&b]5p+d.nOqZ$(9P#k/nOc!_92!"!+ZF*A=5njW]i=X?Pu$uE/RF9on2o#/=)j@0[r<)$ZJGJXVkpGE
%l.,]3&FX.bL)Rq3J`EYSrYo"@[9WqIj$2p4V<Zj=(<jV7Roe!e]:.hC+ta7)i7cjaS69=9c<hmF8\5nEZ:?!+l*;-])W8G)+1A4$
%\crVXk1mSQin"[BU5!WUI.SVtQJ4J;M_rLja+Z2)jUM'/nsh&a/FT!HR_4cqNlZ<1g24")YI'e4FA:1q07JMC-h"Ima:ZR>iuf?b
%!i0<Q7XOAEKT]X:4urKi`em8O_!m:OhGI;cm:\DQ6emjc@CTf7?*A@TN:>@A?3Hn*L_?!h0<aQ?[f^q:/SK>&M`_*tlnLGq-),Ea
%*/,oQe_1Z7\27NK#&i4sQc_iN&5osX(nd]VG5IYTm$BaF3LM4-0(P%7:th2u?,mcTJcAIki5,P@\*KhiqDtiNMC_>HJ4_Q-:-R$N
%]uih\ld:B2K1@h&B@tX;Q>rjrg52(>'?-TQ?;IG87.qF"rc[:&?&?mn+miUk.I6R>7(<V8>:-H,/NMTSk(J-0JqhoIK<4/4bG,JW
%7U(Lo$W3dka2@h?Dg3,]W->mm9d5jGQ&KL"S6ohn^WN(f&6a@W<r#OZ?jZ;GI^cARDktQf=uS)ILk!V7P53^/dW&LL#$BPDb1/-Y
%!<B&/8PoL:'e?,&P^J?)Q(i[XXh\A@fjBU3JO.5<Eb.lFT+G1(/<)6U+e/.E/lt=i',_3`.K_.)aOMIqa>rL-G.J>AJ4Mb!,#_!2
%ktH@[-bZ-?/FWss)G42OQ9em!YG/4H.p5I?Pn*Q)V=N>o"6<E%Lufcm;%br]r,cW.+>(ddNtnE9SLK1C$<1g_dC*$,7J&F6<tVDD
%F,Sc%it_5SV)_&Dc*>CZd3?b'<OKFAD%W>3k;4j<d7\nol/b@MJ2f.UMU&5<EM,j$8X+_h)W7r89PAhL9*tMO;%m:4,01DN5]4B'
%.OnZ;$lj23U3q``RrT^-G`dHALS^;">@\I`>[g<k?eM9[PsX"EXI+kd'F2$dERQS)94^-!0N3UgI]6QqY:1Z?"_;+uf*Gf)lqSF-
%ge78D=Kp.MAL6\EB%%Ap89np3+[\*+a`K%-"NFtN##NV%M,=Z7".Ubi(j'K/FMo$UPRQMH&C&d5%a>`?-PKa\]BCI@*\&b`2gZs=
%.(%(iFfC\q&UR]QO[Yu%NWEo``G9"M@W^E<T_7g<N8A0Ub@&qP9-[bJH9cd\XClfJ`]>NCrj6#^;D*/Enr-KB#Vh9LjqNbA_Nidq
%>+j;4$/1Y"`+iHV0&5FC6"GR!'oNQ*<%CV"#]lUu=JdJH"`r*h?l-*%jmsXN@J"h#@7jP,1^?P-,X[6!n$,<9;l"tO^*IuiopeP]
%7`gRs&',A"G="\A8V8QuM^YjXEAH4dY'/#DB.o+&i2&a9V*T._PQaO8(PT*CTm'p06",)l7o`k:/JZ)[0,g\kI$_L"4KD$]<nD5N
%TSI*;EMC*n`bZ9-QA9$cJI9WTFn2cV(;DD+QpaU]p>n[5,(A5USLG)m]U9U,:r3S]QM=ED(0AnM^*[de>BPXq(#lMM3RH?cdOeOn
%23DKrHfr)FCL#;a,qR;\m8Lnt>#LJ90]a!'gE7oMG09(oI\LpL`\:e4ik#cg'K;9ZZOD]3ciinD(`a4C`[aKuBWoVHE3BBH=ZbEh
%0J9Jtqri-mQ5J!qnj8HoI&D`/j>k5cWcTO<c$Ai9c&74E_\`Z`CZY.UX2FoB\p.["n]MI!:rtCHd&[ltQD;d[!](fc:FqE1.KAcn
%ZCJtEF%p1L(/_[VdnNlnN6h@*T3/,W7N$R;)NI.<_O'^uA6`%'[/3`MB^ohml\ERpSeLm*Ufj"H6E@_Tf.PC2+d]aWQ<Y)p$I)ng
%12'gm#7!V$L/[KRZ8@#cO1>XT4PHP?!s0SQ545B@$OsB;7dDo_kY4IrQYJFW/D5hJ<t;WnQOl<W*(LDn9k7FeI8T:(o.f)W:egR^
%`$-\Bb_B/!;_a%q^)S)*0WH:UALfXHb2gQV"`%)b.4fKf/YZ)lkD5KN[HhQe7C!n''c#qIZrF-'OB6j9pe1/`Bq`4(*a3]/7B_V\
%-1arf=O!9#e/\CdpMiK@*@`&#(qcXob:M1K8sirE8Z<gZ3O_[WP"\gH\X]"-UUqbAf%<l!?G3/_>8pOf'EcR;HteM;<480%91rB7
%GBm^mr1_HTafLCSRrBlT?qGY_s"6n+KBQUQ%(6p'HjhmV*1l;?ZYq3h!.q*1oWtTBrDI5HW/g&8.=TARD%^Oodg6HeAoctt:dkXj
%\$#LffrVWU82mq)QK0Ge=7:)b6dO^qQB^c)=EO+U=g>&^hEc`\eAclL2Q[YgSNK[^\PVl?Q`;XR@I]6EXI\ZtT(*;M^+U9Upif\F
%lH_IK%"CPoTA"uq4u9.8Ol;\FbljV-qZaLt?*Bk:rptR5`D:uDSQk4'nRoJKs74G#B.q$UrH,fhIer\l(VbImjp=dH#;-c\.j2ci
%#*O)"XG]XN"phJWK1MpH9B,k^L'bk$N(59l)40Ea0$S7cH/_DPj//Q5T\*Z5(W`<ZA>)#6!VNgpEpQt()BErQ4<1B9MKKF&L.i"1
%nJcVMfSb=+6&$EMZn!ZS_!5!GZ/@W"eZaXZg_Ob[IcmWtdf8kKTCd"?:l-]FY0+BAPQabsdc@NHf;`s0_iZVY<I.1V/,1&:qV%Ps
%+WN$9==ECplJ0e;<;O*_X;hP8^FuIigf;CO+td;YiXcQfADpE"!OmZjMd4'aKCTjo9k5(XNqc6OcU`[J^p#!iS5^nF&+8.>]>B-9
%p<]@4f:Y4D`/`"Bk7)='>8qZ9Q0B%YEoT9M5gir+Y9Me72K#hP&?Daf%fD9;FUmm";PJI'WS%8"/-$8P$U=t^r'NB[M\78/JYu4\
%"r16k"Ro;O(%;;[T9`P/:LC<JpGRJfHih![[]#UpT@t7LjO_RjA8;CX-%/iMAsWp2(2$U3,!(!@:l9L<bj>"m^#Lof>#Kbp"tgqt
%CG1nek*'ohX"Z)#Vk@A4[a<kM-M(_K*=IPBHOLuM,kH&h3+EDP$Z#rLQ6$NLb<tY$PpWbBV:X[02h6uDf''7^IHVm'.4l_r1:!qa
%,C1T=3FK*WMan#F7?!n\(*G2B87cm(1ctKt49buWEKgVjJO'eui_.DI01Gr9/A-)tkG+D"GVr:^5O*%KQqW^H_%tHOO0\ZpCMQZ3
%*$C2L4=@P[Wk9mU8WTr8R!k\ja'sW>U"WhS>6GX`BTYk9:G$O%`I@`iY;u^U>'.*pf4$,Ud]!534_CQBno.&\PX+H4%VAfS^K[/'
%pCk9Y_Z^Z/`/D;Zl_V687M8l;/Mna>dKHt1B8BlZEMCDe@+1bP;^2(hmgehDV9.YIBjMsCbu%_WN2-Pd13$o(*Pa#lSG[8tX8oUP
%RLN;MS\T+Z(!h$?H<n`$Ys[1oSeLt1;+\!CW3IoA6upZ&A2(X/"fkK91@Lp1#WKrjGdo3.lK,6d=t0gH#NUhU;.2XUc^GHp6lF(I
%Q<=IqM1F12@+GlY'lVMrbK/-`G+UZMn9Ni-f@FL$`JrFTE[JMIVA1D7=ba]\,E(mGA5)6FmOn>Ei'&'8l*82n%nK?!QHGL-Os*\3
%=GhC@ETo1^)5%$e;bTJs)FVEB9\.0H$Ha.-03Z_(U,1$3K0STLhcO/F+:c?sKN2WDI&qEj'P0_:$8"*iAB)KUD%q63Uj?aMl&[;6
%ifqVs#1s:O;4\o=\;\"t-N^u+>Hsq"6X^7V.cs]O_#Lc1Hr:J*]>8g5V#\Cf9Jm4YTDD8G!lcsBd0SdAqd&26RI_[R;S??@<S@dL
%'f]W%NM."V]NrSNLmHV:4)'_nR%WWHcN78W,";,P.sb9'C/H?R:/9X<9MeW+1d/Z!);uk?(,7E+8dIDs.lkBt(lXOj-q`?HD)'O#
%4JH3u5/t:%RdKL*2pVTk]\n.a!rN.FS>]We[oWQ*B!`KDG+lCMn8L>JZUOo0O%rqk`#L:Dnb>qfLm)RP9pDIOSd5g6/Xa86c4J32
%`'n\`^#$tP&P&;P\&bZQVm7:Tkq=mS_M&uFHo4kJ_6,/e.k;k:VCXq9&Yic&V\3BcU0,)hV/B7?*JY/e0Q$']<8+i/Y2]*TCTLd:
%>F*!!YbEr?;.sI4rS!EJAVeT=1LF@=UH'M^W8F`OOr5FH)==,R>nBq0Y!3V=LHq$H9@rr^r<m.."IV=EWUOACbL=ibQsSL*O;9m@
%0u8aW@H_;-5Xj\dGeJtp+Y?ZQY/&f2dNAXe\1-"10^M,o9oAq8`T.b29h#r[K;cp+*MK@5Es,BXYNNNIQ]V;%hgkbQ9GH-a>dtH<
%#/IOLW6VbCiAq$s"mQVZ2Z\T.eV<`9L5))=nfBKMj>irn]C]SbWsFM)R`VD,EMb2%7Y:rOM#\j5>i*XL%':FhJguA<MRakt('qc,
%@Zb)]6`S>(d&5-'Y@&I/-1\s>W/(VP:^F\3F=suAH]*2dCge^m(e7""O%TM7KF[8pY,?N!B4(`^"u?A4-X3M^7HHUuqn0:Y5QOg1
%M<2N<1b:'>M$W,C-o>?4S".cUM=R&UE#BkraUsD\(/('2RLH2_C=Gn3^:]79(Cf>[)WPQVQC;IY;H/).lO^_D_C/C"c8dip>9P5=
%`@M!?@)r[FJ1D(^!fITY)IR(G/TOmXkq,LL$5^lf6j,tk/K2Rk):q1OaOCe^G"(JZ,7'5/jta-`ao(u=^dJDSYo&G@AQU'F.@QW6
%SH.NFSHbIV6IC^L`SlERPN]/@91:gm&b9V%_I+>@`$3AKqgt7H;1>oU(ZZaL%`/5t7W\Vq#eh/c99]7\W^(EC0VZNB_-3/E2`S$:
%Mh7$C&PX\J7sl2/TJVH\-l0r<'ZlZTQ>u2E1aGe[*)[*]i0CV[j-I_BW)No[0NJKQWk>m`>$R']-,[\h[$RA<fUH>l0sD+-,2NZP
%7iM;3h\8Nhj#utU+r-O08r^qXYgWKHg*'g-4W#l)OGWgC\;G9Uc6m=_!'CLVPNZ]qUj=RW&.:r^YXQeoka2AF#n[c:FbeiN%6LBt
%AZ6"c\rmd_;TOK&NCKc'A6Wt[pEf$CBM@V'GjQCmA,H>SlZ3'a?$M,pJCV(%LQLHgBV6>W+f>0qDI/5u(T7YYgCmFVLp(87NttS#
%ii0?Y;O\i?a-El`TEEjKCe`J\Oc!V7,)efdYQt+!)/t@"`#-_[HW7T-UBN<02.1b["t=TGn'>ALVU9XL45]o!]Cg"pdKeQE$R<VZ
%"=GuSBj#O"Ysu*\gPjgG@Rd\WKq*9pMCBj)C`K`o&7Lh6IF1cY#d"QkaMBui3nN.+fKUR,C=.oq,SQrB-5JR.oKcMl0#DS"*.?EE
%$WP+g@4(J&d@?B\1W"ADQ293BJOWa@Pp'WA;II/'Lrgtq`,tY"^g'%QM'[rsP8H$nb)[Bu(h0q:,"+t]\0/A;In'@4+oV[5NNR0H
%I#jCaP[n(l9WqjV#;;N_FV(<*k^-e%U_]io%_O;H"6=/a(hBk/K4CbmOs+P/dmDe?5"YTbJU7^lTh2`19P-a2KKR%*QNfq<jZBte
%g3(2?M_7RVU%CIl)5?M:l4E.+(e:VDS+8l)2))1c?5:^8rQI5A/6;NX_[h<(8&#Y)RAi6O*AVI:=g,BorRcNX\oqrl8d#A45VDFb
%KYS.?NK>(>M.+c^oG74Y`EU>R7O0VgEhaDiV&>1SJp7ae0/B!IX=n$'d/Jq('kh%6NGD1_s,-01WiM-3(L>LJ4],XUl'_]Q!L?8A
%(UuoYBDAj=+:f!VW22R@Hn(HcLKeC0B.[80&V8Q;\eV\.:*C!1C?T43\/E7Sp.:JL:$>ZiQ[kFR`?aCuRFi_+$6m8.%>/m\RY1ep
%Iafpf`$&r!/HWgH9#R)Kmgcc\DH4l!\sYng?N_F=N#:N9KgmTJ4jT3i^ftQ69ZfNFK'!4@1(n0:k)DLNnRe.*R^U8$_9A.-fTBf1
%eDjgs6oR3AS=#'t;]V"NK(i%K*!^2?.6cT)Sl3s(Pb^AS-M9D3(D,mgoNk=*HUgpd$i;oOgbFlpXTI0uk"j'ON86OK%=tZLmM)2=
%Lkr%-S3Z*dSi3i&,gdS^+I<W^p"Bg[N3u;gYo%5E*.VWX"Hq7?H.kP)0k52I0H0^"DulC+_Y@Dm>TYgHL;CKQ>Tr<lboG,)Zjg@R
%>0s4:L\HU#opV3j.^O<KMcOS'"P'gURP!4PEB[M)C>_]f:q"lIUnXPhfJu?e?rAYWBQ-aPapo^4"`_o3]YQ#>Ca*hMfH:9\"[6'f
%-S]^^(LF$%5%SQ!QdfFIZL"si[=Q+(*"LR)["cf`arHqQWB$)t"'&&]d=3?IE1eY40FijWMN>gYRUHb>(^'P0%K?NhTS3IjMg:$0
%<jnp^WM.^G!?b@eBc1o<B@>ne"LDK5_8e277H!&1I3dH#fhmgoHqP4`IbOHcbt.#NO<M"=n<!L>=Kpc"UBNA/1h8S)2HE(On^*$`
%'!hte)`-fARHchl7'A#t,8tFF7)qm,6#13TiTiKc!%fs#B.-ZELd<4rWi6ID+#($T=9TC"%9QlHir@C'%U!<Bd$]>TbRbNu=qou7
%lCc6b=?Ck_&SoM*n1jL'&[+l!%Z!;H8@[O/i[7n]H;/ir/eK85R^GRp6PP2e8js1Ee&8h[_0*QX>;&tJ83Fb@N\?<9(`>ktBmAm<
%Wt<QL9S\-GjT%t6Vg@',;.setrEd<?$m2]7H!@-g/Xf1^GGY1o(9Y)Uj_'_mRUa,L1b;d)F)iDQ0JtUo:O(T1"n0ClKe>cN7#$s2
%3%m3%EA!'e/;j=)]ie<QI[E'Pj01iVGs4RXF1*pcYPKJ+%=T_O!ZcrLd]?sYqQ(4(\WMN!iJ'cL&u7d]:'lZh6=G<W<AI_`/>8o"
%Ugd2bl?38pA6'HWW1(&*84tfY5bT7r)Tc$1RhV.]a;^4,9aI[Q;^EqrSrg^DZp<]Jpbp>aUi[kVH:\gQ+Fbhr_I6?,*/LT:jAW$g
%3o4WJ-9@r/F0]0u]-Zd"C.;]m"E)E84+,Gn!5/Z*+Q!L+!t_h37?)sH?sQ"j[p,4l+c?E^2+.L[]4%+XS0qJTfqOu=bQkST^^gE>
%L`KY+ck^#A7';)!C3h7[rOsd4K]Lei"m@nV!6KGCV9CV,kc9`ZBt>ur6=>>JpGDV3`1V.Hh*M:eQ)G&sYStc*N2HLa.]1i@?=7G;
%@e)+:6H5O+b`XBY,mT-);'_9c<4BYu`L>]h,$Emh__bm0)KQ&OX^Z"1/9*q5h&TpVeA%SP\tlA9F?JX"CSht-aH/p/>G`W>1%(Da
%o7F6_'64`u`Q)ah-k\%l2t^/eEug[%%+#0kL))'47:KV$0@^iV*L;^LEkT@/JUC*.<I("O1<;/mI.'!35l/S.7RK2072#q/Z9_kL
%PWkdnTA:i9,LdrS2"<Ko"OmRaT!SpE)b'fJ"Wt.F__-WhYc(9q1ETEC':m^B,[erg&=C2Ba6rJ'C@a^P+TS,GONVC[,%X!T8FUB6
%Y5)Q6a`"QRTH?SNmM$A\Re.i-@U19[Yp'>EO`!Ff&nXdAFI;$7d]Q(s3HZ9F^!3M#Yu#!U.KMdTAn%Eo#jBbgg65s_*BG[1i!+L[
%Sc^eAADr4%MUXdG1^F/G"4R*@Z<goNKF=7-_'9Q@_-\i)&qB?C^C0SQkj]t]pBHeR]en5moH":sMr'fs\RKh;Lm`$c-;CD`W!7cm
%e<-Zj39D"9:5+cb[.g;qURM$M8YokV?mr'mb)2(Sh=B!#8,@GSSsEDnFNkG"!\D8N3M9[`i/!(fo>Q;-Ht!gIdC3B<]3kF!48!GE
%dKeRp//r;cXs/*9:+qfnMT9a(>R:lU!fC%:-4X&=p_Nlb)k$oY:h-SA3b1SeTm:>VGpF"INXLi(OhcgThL^=(jU?D]\W#/io%Du!
%H7Y_FTJ>fU"BqJZT!@^\CFeE1>k6-`Y+")4&VD4mN>2YX\7a5nY4U!HF%90V_"kL).KRrHkQ0,,"fi?3WUfhU[Y\YD[Qq876kmt?
%!^i3;!=uOg*[,.\O"u9T%b\KY@+Tb&1aKJ?d3=beq3NF=CroW<VCX?ZXU^UE"9iHH!>!Z'!G>[ZXGG:W>ni`:hFgYGW6gul-Nf8n
%Mp+Q7:JJ_h)G-RbP7"W<Db$IRSVLb5YPRRied]kHVr>hO8-%$-R_9=/@0otKlAdfdXl+YQ<:-NRJ&q`>I'?pVLpWh*<!csr6uDEZ
%-*r.F40qoETX/2T>;6e9_7KiED1PhBfR4bLfHH9#`oEHqZrk1=<?.X7'%(o:JK;]F/-KWPTe]i>[q(h;NR@T9!>)VoQA6/EK*?3M
%Ct[d0pfj*T<-^P."N?U+HP!uKgA!(L"mf\Y1YH7&d-XYIB[Q@42$16P"7m2QYh!5+'2%k_0QQYpO><*-2BYH93ZX5HA_p,,b!@pC
%r?-c`i<pbp`7d=Li>CK;4@$*PnBrQ>>%Yp84dh]Z$d]D:WeZ_'#6qEjA)J7P9;>c$@+6&%&V7^-n4KKYpNR%6M1KsW,rIK[AENV;
%>&GZb$9,o.Kdge\AKfcef#"Xm1mld*b;6LH:PrU)UI79%BL,(a!\m''/a/meg8``qE8[SBUaNIZ%Oka&G!DS7G<rmF^t<2@3e\TV
%h9>!a,;UOq*iLca_;%#W0O<LI.s&'j4mV5uTrEa%HYGjsl3+bRpl^X42/O?t'Wsh`hl*/6(+;@sYo@<1"L"@qkp6uWWBF;hc.Qm=
%k-ZR82um'J0,;`65mt;+Y@PUVf)-`/VO035+^fm5bFbp#!2Vc=b6!7X>_8T6ogI@b1#!/I2,]I3TG1IIIW)XRGiW0g]M)V<KMUGu
%<'N.6#SiEuGsIn@:h3B4l4Ae/#iHjZNmVs]0+4\?5<%$`iQa`UUQLD8SDqIY!)Z\"5i"6\P%f>i"LFVa6e,RZPSc&1(#U\-9,#OD
%3AD@'SX/7Kkg[S];S%s!#QGmke*rsVb)EeB/WU=C,((N1/.uu]9hRn$;G.t/gM8^3Dp/XaWdk+NqUW$.m`2J\(M&m<?pKjZ>F,%D
%Bu/D1_19^[J#@#2$W6N$!n7cNMA:$M@UILP?;p3aahqQo_KMWLn"=sJa\qX09(RTGWY-IUq%m6j;RGdgLb`.\m5cB:N/Yi0P_Yd[
%-')D`Arnq9b3b:XMSoV)+He;l`=R>O21k[2J[+aBMgiYQKm-tN_iOaak[]'pVO]'R3r&Nq@lD5R=Ek20@\e&jb9dMACI(=rN:Wg<
%1(af5,9lYk@EnfPZQ4qXfo0/@j=ISZ2\<o<K#FD)G[Rp]l"FHpWWQ[SL5!<e:\Xq(#4X_@neKTiKigni*Ak-;4on44>XlPgFh-$:
%ZcfnV&3`gg#.2ka7N2D=<")Fc?&m@D"PKtYe'sasL)RQ%^l:A]EIVR^]1%;#!A$$X3C&i^B$%>d,.O;"Ysa\)BoR2*G.a=d^\ABf
%F9GLplMtc6)<3_Ga2,/_f1QF+E*sX6jg)HnU7p*,`],Leb8hZh5'?+Y+DFP%qNn8mR(a\md@`g)78Sb6:qW4=!0'+P[ns,:[Xbl"
%7>r,OpIOR[niG_E.&COVC1N;F(.#Kqdpkh*WSf90;KIASA@]mp5SX[M6H_,4ZDRA8og/:8TK7`kFQGsMi(05jY<^SK+9F>U&ZMNn
%-mX<I@Q[mEf3-dsK#l#?-D:G!S[9%"/]]WRE+`.`JS+R0&4"6;Gp^j'/%),9<*3XtSRu#*`QC\*kfalqk)=_JMG2@u8=VPERXU&u
%=oefk\nrf1Zg:N.$UbMD`aF@1D<8"">0r?dRd#$k#7*",;g*^T@9o4aT7WpKo9?O4Gkd9\7UZ<b?7=aeAZXXbU83@W;BSGGTm2si
%lnn50@u("cjl#C;0JZmM-%qkLej@Cr/O$;2e!(ol_gUKS!jn)'SJS=.X@t4(1oO\"rE^('cZC73.BUu&Uh9c0p67o^_h&JY7eSOq
%]o?VY,,>6c'?`0Y$-iot*FK<66U;K<f32\.83?C\O-sPFXUmKG>4F;0N#*s$kZP+"1bBiF(,dZs"gk42M[;'5DH30ZWf]i0^^:u"
%IC!On4\.M%AKtCRZDJe(XTAAi9O9NlR1S.1aG:U+Y6H#_)P=ohorRr0MNo:cjqj><"O"BjK*]*t'Iej\M);nqaqDk?l*R3%0odo5
%T;k8=WK&qlF9R5/bkX[`OV#?"3\//D)if+1)]1dnC$G2/Z67_TUcs%/=_B\Q:1;)\JM:%\Hf=(%3#gE[m<eI]*9n<I:4TVJiSA:,
%5!sS)']E#pNf85(DKkhJ5CKHD%;C.g]A7h?$S5#eqYog<hgTeHjN['N?cs1-X32mik/jrr?QWU&pXcTUrA3]/Ieiij&)WpB^$U:F
%ZeZ`'-iSFCg?Cc$n5-Gd72(T*pb0!3ct?%r*FZL*L"^!P]I??9WJJ7;8MM><?A;=31Vf(f_8BM0442!Z$PJ=/=t*1@9q8Iba9@90
%.&D#hcer3VTLKST(\CUXEZ$I(oE4>q9I2.;W#D"Rf4=p\;,9M]`HmEj&37VJ.%<Z<)uG<KdB$^7=-/mQ[@ifHs-a;9(`(5X&-*d]
%GtLrb<r$X#@E<fG)i<-ZMoNs-Gmukq/D8Y@qJ.6GGB'(\kJ<tAU*emc[im%4%5meDWg8mT26*_%A9sUq!0P"Dre3E`3WK\Ed=;^=
%RQTohK"BX&b/i$M8_jC#P]=]5FVCH5M=D__Ke*c$A(4X8/IhsP0ZftOATT^a?0GRh7?`md"T_V._!'dF^."D&G7nEBBoR*:jG&80
%Acs?^eb=S&27^_I/2i.s7dJ0i![\VgBP^=Ff'!Bj63&^`?QmW+MD"d>@A5s$Y0>fNZ>b5IXoNWZ5R&JYE'p<D.n[jLq:0f-!R7"k
%/86Z`gJ!J/+^'`6GI33/d"*_he4aPZUI)X<]`pqjP%;s,L(coj[*MSocTIO$?!HYPZF<fV2^d8.=>F>$KRQ>s<j*$\!a[f>.n5(e
%+i8K-B1gLE[@al#)J/tIoG3O3_&+TPonj;!OsG2DqL8==8M5='N`N4^C+cUFKR3\D,=K`.aGE\6/5C:G/u='^=k1>2'VGm#p8it8
%g?j]%+rnUm5,UlY(4Mn[lQ))lVW]4T+n[mAQ6ihO_H1kW3BX)UK-:ko9hS;M9AbcS9kt'&kf1(V-W@;J,1I]Leou&[92Q`<]tBqm
%n.oT$2a_05g(Hq.@TUE*@toTgQ+U0UJg8UN-p=1W/!lTNBb)(5k#B3QdH[/H.m-S1VFBTVA"8FC_Tr<;-aaOrqeufI=fO),^#kU`
%(J3q0=<E9`%(dQJ8FJ&/p%+8do[_GRoDjmi%J^5t`5'-`<?<R,6i6tt8g4b-ZCaX/)e;dN1c_[g#$k3UH;H_Tj]m@n#PtlE%4CqK
%`1T[?:C!Da/O`=?l0tE9'=Ng1UtVYAFBS8tH`fdHUbZj%[0%nG/L_V>oE!?:%l+h99k5L/9S.$o8W2c]H+&j<>-s#rWZ7ks#g.%>
%$=U:u&5AgOLkQ<TCN6'udu8Tq14FM)"LR:k@_b0n_kL"8-C4lK5T,n1#=h8T$N0:[7b]uI?pNklK"aUk/A;oP1/_;hUIFRc^TDB$
%Y.RIXl<*hW:)`rl0Y>,_Kb-<a>_oujcqLeSSX,?]\da'(Qm<(a]<#O2b-sZ%^1ep8F,IpKSO=KD,,c9!!h_*IG-\.ULF%!&,r6f]
%(-F'jd4eHp^a^MMb`,Zm&2GgZRFEou8VcM?l"bb1Y!Xg+a9((i2-XTm7!o0L\?`UgBWVY?drQM:'L=P$!2q*DF5.&_7/2!j:R$=9
%HoSfuD^A#N0Wf4O?5mhcpic;qA1I8,VkXnZPLrLO.k(!*no3Sr`WFEhRP.B'f$bW6"-?gtZR%:I>(d]M<%NY'%TVJ%a!D=,M'PVO
%R7N`tg'2ne(]BC!L<0"hMIGGr8e2$)b@P?cejUKi1aLbZXP"'.%O=lu\J9Yu,YHu9%Wtg9!i/SM>f+O\h5(K]YmM\J<L5);[h6[)
%7BIIpHE\NBW;tH!cW_1("JB<[;:.XEQT-G,Y@`FhW&*k86LZ`Q<KFsMHjj]35a<(J(,srP,s)^3G[n0l"/lL2`Z<*Bi"_&Z&;<Q=
%Rj0bJ5Sog@(a<Gl2&o/G5U$r?P$!,&Z9T]_?"]kQ!mH'l"Lda\@l\;^(+N'PWBKK37;8)WR6Rr=andK>f4JbX3#Ri=#HW?mU;5AJ
%RN^rOCcP)PhA2cST^P3&@0,eURO57$aZ;gf==j2a%(p(pH3`j[(t1_rM=2Zr3:X&:/[<)Y$4DccoKqR&@J=i?lUJU;;i,\11fNRX
%hU,d]6Wk3W9l.n[""&XE*D1?PJh"**U-ag3:l5AX/\RLY?9t>F9ZGB%K'u`4Znu&VHtq+A.d\@S&g14`[UIQ_WlS'n8%aYB<D\Cf
%it+aM\P$>ECO^],[Nj^&hI"nV!<fRl*X@$7P(OsQ5/`YdXBX^!XrTb5"u;=tL:]c2Ak(oS14]#^3p].C'8UgddHHh'_?4+`:2rS%
%#"P@PQu[6;,aNhiU^:kQ2jj:H0GbV\Aq)m:[4eETd3*MFm)Z4E'h%,i.97a5[bRVI3'bU2!0r:m*>T11XDIO,%+o\uM&ZuqAY^/P
%@O<'N5j(uX7EI(^%iAQJ]k@D5'%(6nH@fsZRAG0YQ$5@^GG-3&>TLl3(X+MaEL><1\lJ(s[MQ-XX@13ndkVh4*p^jX2@E2l\I?7^
%7g%b+%1W[opj$"M[1^$ioK(hlBiQHH9_nglAa(dod9+\s`2Gr*`rj\=FGfSqk9'K`]CKlD&bkgp9[JNPA!17tZ99L<>)[b:5(0;n
%bd\IJ<I!OHL'T>tE*CFOQ:Y#=88b+]Bm$)UC5XkLZTs/qX*Mamd*QRQ4dc+Md)$#uk;'E-NP#_Lh1G^K=%s[2=#)C=;@c\A_%"I$
%'_fJC'arLm)12KdHW$sI#mHf?ApoT&:uDpp]/@$u#rS<'/,Y3b2""/3WA0YMH3*;lH2l*HS1/.0k8E<&;K<eVqHVQe2Ra)fAM]e-
%dQ(CUb_dV\bBDcCN"I:g750=EGubR`.upi,4i8,tDe%)+]Nb_]hU.Z_lAH.e7VMiP=<ncKZA`'Q)_Vdg!mfs#V#tRbLK]<$(6uiU
%%8?WG,f=(\1&Q-ZC-]mdVf3>++t[)l(]_o<[L="rB</@L1HYfd-ir*11-fW-UGO[GdGZ>6>?#N$bu`Ng(0!u$-+HD(&R*%@g@h,)
%9^"L!#-V\hU1Vr[@'+-d#&dP3dZ0FiCHRmCXK5QF</XBs/-KSFH]KE>5Yi[B:"j.I9h2)Ge3OIfK9SLGO-SQ@30^M9'9H2Ym'KFL
%aTkN9.P*aJQj5+SIF:bO@<N=jK0bC68;"Jbbq+2aOTk=KO9hcFa68F\2-l<Z";4T1?mJ,r$cE'1"Lq%I/$-H\=(^l3>n"io=U+"#
%XPT,.j.;SQNF&C@$2ekm;DlQ"/Hc:&4on$6f4K$X,0co_XK%idX`]$1:b&X-;H'G6dV9A..FD=$;2#9Im@eWX[ap'Ub30DI8rFH6
%i#.DMU,7uHQtTX#E)0sgLG?qW&KP@gBQegQ(/bM_0u$IjQ5I8G`Bj34fTDgB:dlT?R[27E;()?71c*Yfc(u/GS6Tm<4FfsIBJcLT
%IJBYj:pHE6#%YS\A/.k<&^mpkdDF+$f*T0mQPQ\t!jk;j3QrO*VCW9E<r\4$0I.;gRTY]pPZCi)!N\ZPS=h(l,-.?<#^CKKn4h89
%7LSH&J8heP%OlJ86`4#4R1@FDH((,u"?rdtJQ$)jh4]&1Y[UEESj>K]r&?"<+e,@o+Vl'IeeJTQ<&""K:WkFW5daVb!N&L+c$mKr
%JeS-aDG_!e^i8Q!7*JN=rMiHm;9VdB>l7\HSE^>7r[CJ&'hT]+N*Ig=3,l]K/P@&Z)lo:RqPIGeE^P[K6l&*Ld-R/%\"$g-Qt"'C
%;#Y/E>@e8_aJu6Kf$hJ@k5,.FJQ;u?B-Wq!68#.K^p^+8a-H:pT6=/(3!l1lb$!H`("6eM!C[Ci\mu2i3pfPCQ/,&iMcBi;)&?#2
%3k7'CP7J-FJ`[*,-naDYO$TttMEmh`iQsY\feTok.u,X3U,?'Vb*7U-<U1<IlmHO7m*Z="7j:S];K!3'd>[9'_eIUGiR.;j:i-pk
%(Zs<%Ud+tm2&Cs42m8JLAnQHB6t\;<?23Ah/k69]:>b"`4EI?6K)n_B$*CNao]lh:Z=&_HJY3XrA#WWp2Qe=b"W9l@c[m%"UNRY.
%n%S)FG)T0RK",.\&M."<]??.WfPY)CTR),#GNa![_DjWmgr'99QK-LA_IeI;BdaW]9.E*W$j_`4OIk"`i*#C`2V]gg(;f-D<p;Ta
%i.=DtL$CY?*DC'NB:RN-lT&'Y*TL8fPt\PS-^3ALGQFfZ_>_tm6Y!@12[38olhjYPpg6o9ggcrkF>0U<-8B\dA.(2nW=`=C&R^'g
%akVj.EllIckr@m:)\n<=;/3P<.*J>sQ><qA!^@iJMrSD&H1XX,b$9<_KhqcR@8[]J`3<.u;VJ24&o1uM"36CL<&81>MOl()0Tle,
%?q,*uXPhT;=\FSOUA3lPRZ/beA3qcWJ?>"Ki)JXo"@JJbc,<`hRA+lj\s7r(>uR"K%WHkAB+^i\T_f?5k]0?c?("d!PX?'lNFNT?
%",!8O#MgSVANl#E2*DSa;ImGnTT'U$1:Jt+05?/,=](</\ahniL(X\;n4Z4Sd/eoY@7[a@7Tc@!jY*_S!_KMtHtC]/@I;;RND+\8
%_pRdb=eqF8MNYioBo*Fid]MsRj(F!q8_RY2M>34LT%HA%CM,cR4ZaT%@RPs%;.I]SL$I<t=RBJT%NYo/'dYt;lRj/Z73J9t.05h#
%(TY9gr\I*%%ZZiP<Q=@MEtl-P!=>2lBb$@EZ^Fd28f+r=S>`^!f^uS+YSTPmGUDBcl9nN8_iIC&/qJm7p(I<hq2D?4Bu,,GSQ$9*
%0>0_s,3bEcr1:e@Fc@N-3AW"TnJj,r`_0B(R0YbJXakAEOZ1:gU$n0+D^HdjNpF+qR'.omGJQo+)4Q947XR[8>BbUK^KF#>Pb<br
%&^nWH^?GEb8\.TV:lq*XRZ<l*3:.Jm\gU%"3s)@lXU>OY=LRjMFf$ua>iF0Flm3<R)N4$X)4WO"F&FBG_le0s=*(ClWbEI.W+n<f
%)@"0p$cTnu3eA?ka=fOQd*E"ms'c:/#\R&WCfnYd[Z-G2WAn-6<E_jANrQE_HKGoSOYVHe:+9M.gNYE01[8/l)50#4:Qf^>6?+\:
%EU16^-f1l.")[8?Yr:2[XXrG0!3@_5T@q.[0qap:ek2Zg>ZNIs,k'uVRAn-0rB]F<#G"J7=ZOEe1\,L=*Q-#?NiU,AC+FM<ViBlb
%W5H[!FQRPTDQt`)&r.^n!,TARic'9-dB_%:%Lroc0=S=I%8LVOK/FXg<c!42%Hih7)JMPW%OWjDTBMg(^a`HD[\4,UQG1`a_c*n[
%j%^Fdh\"AF)np9%2_LD?`986u@2T&"[W$,BPl)D%33b):rY\csF(UQ]hPnA[>8uB9<B.fP'''s03&jW:Cb&@B/(3Gq9mGVd?>_%r
%8,a*W8@CqFNa(PZE9K^KTIaVOko^<<TbO9`>G?*+2iph3o7TJn14aa='+Sq<=`uck6geiIiTMQGfV+?uIAR9?[Lc=H#",mk!Oe.s
%$,RQQLC^uT#D`%>@dZu%hL_Rq)`p$YQr?$j#B*%@iI`*i'U(eA#<+X=LBQu`C2ifB7#=0A"p`bG&\^r_i1Sdr5j8M034FY6FeT'F
%"d['/(0bNmmL=pOoq2NPGW7%C)`@E?1/ig@ZgX.87@Crurln!K\Y1!Y]k2/$,[HN2FIYf-\`d(7n?liF%^+'XC,C6Uh@&!mK-$Nc
%?1>_?o\aEFXt>8JS4!\)>8[:rAFdUO%U4C$@aRH0#<t1>[2-&qchu_49:aUoOWU)$"\<P:5r_HD*6Gc>JoI0@Mt8Gb3;6NbrFmVb
%LLJCP]a[1cq1;1dh>+lY%)r/J3^G`/FR,P.5raBr,qh3+E&M\1N#nL9Za"7j6OsZ?G@Zajnd2YK#I8X$r8:6o;^^Aq_3rQY!7C33
%i!B6W*k2(*NeML+Xo.*j+h-._#:J?2&VdL]i)m'Obr+_$Ytca=qh?/^:_'ML#!Fph5\Bg24ZG1.@V+gT4ZJ`1&C_/4E6!r@TFj7M
%3']T(L2Hb&Z/"P>FFJ1!-?u11SKAh'=rY68#C"t(/,PSR*.]?cP&0s1&LSc-f(m-R+kc(Z.R1G?`\-e?+5E&@\#-tPmRaMtcfi2:
%,/haRH8AS^`_Hb%37bWoUrOF#E"Ed1;YP<[E%@->keX[G]/+nTD'o0ur8?nc3^:,<Q/M8X&$E*++4p;(f2(UHi;0EO_pc"`7WYqu
%>7BJL*h6Mpj^ukl1Ebo&KPU5<jR&a6Ds5#CmS$KK*o&7pUg**"J[)NCBhJsH=A=A9:(Igc:*WT+*ZX?BDCE)i#PTdHX+$lM#I7"V
%L-Z>F*a'ctTBX0HFcC@qkeRQ*//GdiH/jK'Nh#Wl_m:WZ2u(5:6M#*aK-LgZFSoS/#:G./2)7_nK9LDES0o8)E&rC-:?qc8g/?,:
%&&)A]i<Q9E`a%EH%o0tjh$MX,_+?l#R.Ir\K4>%K^sMkmRCa;>3TCA-/u&h4GCFMOSHVViq8#@5@r1He5<'Dl<^I=GE""1:'t4%u
%B\"b04$bi%":Efg_Qd&P/"$^\Z-Y'n;sjeIb.Hom+:*a9">JtU3*MTX<\"P["NMZRBY+q240j5bmYi9Y<(Jm4Poq'iZjQYa+<5Ko
%aogH+_FZCaC0M"]*IuUHQO\W:aurI#HLSM5Tt4Y;LYn+3X\K?9fX0cr\A=T'#9qrkE4]Wic$!^gig&W!'8,JF]\5.p3!Cko5mr\n
%/ts;\i48#qD`GQh&52eZ7L;i6aE;Z,1h=iah%G;aT#,U(c3NdY9E@LniWEiFPBYpZ^mTAi%@K7!3%GQ)YC>U97rt=6ebR!`_4^[(
%)':hAFM"F[+*co(FCEOI_p72[$(VNq2N1LkY&rTY3>QmO"&D'6hq>g6q!ER;F=5-"Ds,Hf^r_=(rq9+c9o:S"WG>.(k?uK8NEMGH
%F5r75>?cJXM7W@XN7Na2)pck?L-,(;^'?p)d6^_uB`.7o/E;f?,M3R)\%)%+s3;7L5(X+]=a4,G2,f(Do&,OA7KlQ06o[B$$QPHO
%jE%1"B=6Jd"O=,E=[gc,^`BJT6T\cZBD=u@e2AXm5T@-8Zn[-<kU%u^Bk@FE8Y,-="HE[:ka74B\T]N*.6A8()S@"Wi3)N&ZloLk
%qm,4e;h:,j(!32@$CiaV4FBL"cCuAQ!hB[g-EpDUEDh@oRRaH^m4*b($_5>a"O7>rYRGV#E+2MDCl,sL"A'6j:'=<ZRV<<h&NEoN
%=\@2#^_pUW<pE*2"G@/@[q6h'DJDo"ZVCWul<,#3)^95JcesF;%lgZq)K;5P*-@4Bs53BtF+\<FO)uF^d^;sLFrkV.*jVYS_ZS1d
%6m\R=Qj!-`7>^`r!CmO(f=*m#C,.DYjT.l0=P7TR!I(UhK0cj&!U!Cl'Gq??6#n8TT6\4T*i$OeirQ'D;9ih7!JbBfqep@s^bKi=
%DgA5]GGM5BU:Hru#8k</Tg8e+=7tcoUB-/;5[Kp3%ldWc"@<;'\3p6SNRQ/TNYZY@DJ6g+Bo/gnHW&^0gVOF=E*Se3*c,N*q+O\R
%FrG<<2QXa\1uOBfX6toM*8da+/Y*'8r0o7eg9?)`08[<FF;AgB3Do'&$TM?+EuS-qE&T[Ul7Ck@#GbN3(3"Tu_$D,a(3!==&.1<2
%E:b!h2?jQ!j'GmMN!,ZpP^K9HJ>3>cDQ@Ldi92Yf<c9G&=bt[M>UdJYqMpg=SH@Rqj[7m&J?tN@\5RpaL"eq:$?3GH<..C?:1),t
%Q;%LE=;$=DcB\O%[SANrDfUB7^D8nn*8onkACAlL!KMka#ghK0=+0/P8cm:ZYflX("ItcVl2)U8W7A)f(qRfi:7=r?*Gd^Nao1GJ
%/0kH[gcn^2%1[=_KdGR"*8hM\.f.Elc=Aih.<fA)f?eW-GedT4=;a6Z8o/9KZLWO@fj`1F"3s.rpOMNki'7I1h0_QmNjiW)H4YYf
%bB.cCLqr9R6q`//.kE_[#Fu,?2e0P>L'J\]clt8pN!GmLO]B)c#@-<B90D588$fL@FWPLU#$2RZXpp1^DHXaul`;KO/Ds2=@qtOg
%"e8..^.g0:7)l_s6Y?F4!aW6.b`r>OTi<=+kq(bO<U&r11CH/CREBtMh=f*^G;j3N),;A.]V,A(*NFMGaofrc:P*GS$!aMgBm7fq
%i3!u@5\C.2dN=>@3YOJ(%HV0V0S)#06l)B>":ctWp\X8Mi+Ptg^C:i9R[FuCRDA=ugHL'u![l,\io&)bc:gToFe&i/&#HtE@023`
%lMbUj#ol<+NnqMScA2kM?oC^:&.p57ktL"P-Z8<1R)#,fejEVnlB5FWnk'%FoHfPm2[0r*k(`tmgG"17T9"MEVZM&n8F;h:-**l@
%gU1jr^hN\c(fi,*a/F7(.ht#W]XSpJL'h/d0!"g0.`'=n.dRTZ3-4DC6+3(r(CfBg<8cUN8a;TKS:(u#\k0IW6[S-::k<t+5k('H
%*1^-`"e>u?2Ku:"S5Fh>D(@6GPmX%p`tqc+E"5)1JdiGS6?k)kZ5Zd$8G#rnRAdp;.OrVbfaTEMeo7HSkHaZ%-K?0):k>qSN9/Z^
%$61M8]%KNM!bWOAhL27&7hqIj)&O/LbKICo<@7mh>@ciCT?4n=]!UQ[(H;P'Mq^0qi"0uNRa))>/\ls!(H=(uQC/+#i4h!*(`,0C
%d[6%r/oV8^L6W)c8a+qB@8MNM`>l:R$68*!H['W^E+\5_T=7[KiuGW;)^]N7[:`CtG:%8m[,dJX*5N&S%N?U2I$@euSHp4O>K,9T
%#ol(<3X-NQE,o?JStT)6'*')#pC&Nj#dD06SI1m9A`jJGFE+YSkHa%J=*N-$Pma*:*[Z#P/o\2%U2\9ZcF'D8\"dM[jQqt`FZ+1q
%YeG%n#0uED(;nE%cHh:9dJ:THq#9`64[,5DS10Zo4Z@cHNd5iM9eehNm835GB7/XaLS8f7ZHk0MaKUaIl+i]iW&lXN*B98*8]7mm
%"34q)4e7U\i(OBT<Y.W?!#m8+Jo(4t\Jd>Xk:?V`])3Khpt[V%oUYhsS.D,)8c\OnI,Hh-iHYqtE/6[q9a;b"$#E_5\D[N[J((eF
%I,GF>Z37?%J\.LuZK20Y1XLe@#EELdk^Lm0A(m,;IS0p+.lG;[dt+iZaj1neE'AlM"e?,Cc_0A\keNI=!VD0e3cKD$W3RLei!eYt
%lrQ5e\E4uFED$NH5Fr"iSIM+A!0^PI)`Z2p8cs1Q#**:NGRQKLpshu#f%IhZ2jS&XG\.%JF*69*g=X2tm<RhKb\Z3^4%DKjc3E^H
%\NQqVN"$cqThM^12K/Y?26qhTfYGm$;ND8)39'Gc_\ue<LcFHLEIfnpAZ9<Ai!<r%S5ptUjJB/BTJM-XgBh^i":ct:LUco*UL=IO
%V#^f*(s+0cZ[bDk+V6_+^fg>;rQ5/tCp/mO"aIAe1Bmq@0G1_[2[nW)FUd$-%,bgH0eilOa5+X)'g4@'K?T@$8Y#i$<Y!:N[KPNB
%,3i8/DcCW%!UB=7%%=sMfW]kC\L&,qZ%&O/T2_YXr#:#rTP*)$J&>SB]U;ZIB-N4]EX(BUV.a)mDtr\B9)HjrY*lk2XP_+)@ZfE"
%oXb5P,9EZ<kc39<_H,*'2Ns<$PCB8q.EXa:2d6itgQI"QH<D=R8AF+t[YaPo]H=@,[uB4X>]LC)UDD1,A[:oU_ek?FAD^M!kc&[0
%mqS>P&$g-7O0s:'oh@p!e5iGb]JTdIKB\jJSPk*c9]'YuWe`BXZN1oi@/<>#%?W6kG9a(r>D^)QoEEjlGeTYG]Pc)DULq&i\?^K,
%^KK5qB9I27bd";bhhY5Sj.d98A)gi"1OR+/h9:$Zr8&^9_=[-ehM<cZO>cI^fG,&^1P=I%PF'olkOsY]a\8J!WP&m'-2W+gp/]t7
%be5g?2k'OSKA%7rAD\?UhTV*l_9Rei)pJcu%!$9n1iMLT$DjG&LfI%dEc716/BP*NhGC/T5<$gCpp*0AC*WFaoE#1,S_(L,[Mg)o
%Dhb0BPo_ZS!0/El\V&NR\3DkBQJ%bc5;I-]ZSun(;Z+](9p?`RWEWtQ"=k8SA3Hm)M3!;@C.mrRonsnHW4fI_M6@dtC2^3'FJ?7o
%hDc*]Z\-r#%?6V.1UB$/WGMmJ2d.%T);O(j>T-aJAo;O]a@HHtgto7f(o\V4hQT6^;VuMAdn$K!XPDZ_jqf.kKA.=s>'[I5p/VIQ
%Vj6#+pq:TpE-mf'0H7q+KMjO]N$E-)hR&$#&ZW&$hDEJD>04JR'oO^q\Mm5:<[)A$]`Ee%rE:TCAr^!7IO4`3Zrp3,[NYAldt*Qk
%-14f5+!TO_^$,_Dj'k[LmF6c,/%N-@ULE9Xel1!7[5V$I&2"sPhFo=prW8kg7Po[Cs38dE%&C-&^GC53F.#$MR(YLV`V+LX\\/<%
%e*cVYhXj7%6"K-O`lA_-*8KD2GY)#:^#:=N2;V5X'*P1)2em7fYRGkTHSb/rUbcV$k2gQil-/"gn!Ss;@J6SK:QeF^p'/5rQGLl5
%mC;DHMeC8j/G&$;e=""<Gt,,Y6gY?G;5qSt[5T(!U1],4>Nn,KZ@8YD#)o=hHZX"@"#\P"m7lN&<l9[GRjBdS`Wih0;*ngt2em9D
%)=d_Y[5X1r`eXl-2nFNgd"^3mXX"hM`83UnYoQ7aWG*Mm`0T$pW08,DS_0G$]XJni<ap!AoM!Bq`851TAZuhp"1$P'N]+i4`:[4q
%d##H`P+Y_XYr;c+Sm^AJm*.R*(Ym1"Xmq'H=(ZA3qMA1`1UB%9<t_-6bh`WuB$aKeC2\jfR#o#?p1E(s.7AgCS&u<9c^*=T.Zo(#
%(q2GhU!IW<p-oEUa:5O9'99Ur9BZ#ggun5^aM!unmT_^rpElo<R%odjF1u+V#.ZZrPeqK/m`c((7ae;Cfn`[PDXY3orOW&i&$CS<
%$IfuJ%C\:f&eg7Ej7[)Q*m#9\[l;EQ(UIIMDJr63$uP,"V?:&X9'm(s<4B!`:j^+<,%F0Ap=9e_:Fih3^#R70De<a&g(MW4n'p4<
%l"B9rkOuXeV4YJ#rtC[7($Sh%#['#]ocOn\GlPX6W7'WTCr7D`DZt,k&-@t-A-@HpXb]>,)=AN&CUoa>9,\SFBmDBl'*IR1ZdH";
%!\^WD^aN>,$mQHJ09O<gb^rOP%L?>al5gM\(eL93Aj-h5%p@^.ON35l)Ft4'1`VtO1PD&?pDeDD]rkRfTJ/nqEfXB?8foCl^9JKb
%Icu3)h're/)S$3j(f[l9fVTFk.%^.uF;G/Pfj_Ptkf.@K4A8Gc9+[6ZbZ!sII72LmZ[IP-DGfJZo*m:[$PM$#F&*W3HJ4-EpJ(_U
%$Chjt"B60f4^fl_)p)fUOM9`,2h^-"<iq2G`JJ+4AY$E];J`2pCpo$<$ega,6,$1j]GRgZ?6kVdd[*BqMM%6.4t+Y[&C5ZCO"M?I
%nBK=1+8^oK1!SL"[-1g&81nd&C..o#@$*[`mfiqK+E,a7TPi<a16nS+'0]!/MP#L#F?s([>-]6/Wi5IIdZ.qQ'E\>^J1VtrBIV`U
%!A1Rgd/b"c1`D5YCbWX7C;t$Z'0K)TJpN;b7FOn<=V7lQ<M;016cIcK/YsK6RPsK]i^bJUjSihW"!C,ATXDdWWb?rDYPk&C;ar&`
%nQ8i6OR$^eXbZt9p3VD1D>SLM49l;*]!Z%U-pWTj\+g7_"S$D05_)m*^m5H]WW@#rd[(#6MOZa%6lbU2Ubn&&q6;Q&=u]H8&Z,dO
%'hI-q[3V6Z@$a@=qZ0)FMfKHRZr7kT$9rF2qd?bA]+[Zn<O>l7)580COpNGnYt\21V1n$rWD1$oYi(@L;#skYIA;?EquHs0,9.G[
%FH(#CckO:"$-5ZsIU#.X6=J3oDG`uXB;6Pa;;[In,<g[dF7e13Wu.'pT:!Em)$P@;X-1RrOuQE9FThWI"[!sl+dVU,3f_UM9YNm#
%(@m)k.o;k5U5L*#'a8d=?sFlOU"hrfBet1-^hoOn77m=3d1RADa\(cmQ[0$hP%Xla\Uh@`P%]EsEAQb^<sVm7q?jSFZ3j!:5q2p"
%3Z>OK:mEelI^)N<'?Q(44p]a8KCkiO;KRO&cKN(N!8F?.173%ekn+SAW6-$]?cEANe&SX,FgqM3EP/09^PNcJN-+D]dZ8ot7/$\6
%79g'X1H0L_$3Z!FQ]bqp*99DDYtQp*(*nTI%)HVN,f`Y,6G`ht,08+$4]d3Z+Qu=:"FS'6+NYZV9I"'Uq64;H[[r&/iCfTU]P-RW
%el:526^h<KV)Nr?GBbs?T)4oNVW`Hd:2`lB</!mMQ>][/4meRK8IT_%pt\1H0ti.nPBVVJgYo-Qr>;@i?n6s?1Ecm1Koe8feA*Qt
%c=[P;*De.IU81(2;&c!-;?Vh^OPUgVVE*-l11B2AJ/fQ%g3?Z(pep$&A`OtX'1la@<j54!"kE$?.9tLV@r1dB5^@*L/2)dK0F3>"
%j=MV@($@8\Lmr`$^e\$GkA2eI?u*Ru3c7\":_U#uH:2T0\I;[G>qE;k-W]>S_qa>X>\H]*M!SEC-D2[7AT6,&ikhtR,JAhPMV8h.
%K2nP*;*rTRO0rj.P3U.]bnmOoB$rGcgf.ffgVUF5GoN%sL[oO>F'.K*pDcN7<ni*E/HluKWMc\7,nb>6Dp@,s!^q/E+<c\)$1]c.
%?JaCB&&A`n;i8p)6=posT=!V\0O(c01Z9FJ+M[=GL$4JS*VN;U1`-Kf?scAOE=c^d!&g8>66rma?>.WB:\rF-Ao\I>-G9Wd$3>uW
%=@`Pgg?9;h?sP0-!%;kIN@Q/CD'?%l;^dr#0<Kk7![mR3n/"R!oMS@D,X(56l@rng9ac$$+gQXJ["dZ_S#;D,*EEr"#6^CC.%(TR
%SjIlDRL>GK5e8:u(@"CeR"Ub6Y7^6V>UP`t89#S>fPQYX7^QiCg')r,f*H]PWoacDj7+hK12[ZfPnTcmG\@\7mQ5Ll[k<mPX"'+I
%XZ9oe_qDJjWn4qZZ.H-r-AQG9_2,4'$`7P,T0(lt2iPFa#u!1a-J_n:BVH=+1"+RVc#KnV-skTDbVFCRP:;/OGI,63k).lM]e3-\
%a:GZ9KKZ]r)N1=&&/kZaF[\1TEmH@*(NWM[-o-*a\2.i3W9aRc=#EPPJ;Gi;iCU:D+,ZSX-c#C`)G^@uL=GDF8X8.+Z@)#Llqrkh
%QGb@TF-l9k.I#t,2+?-dN3R4X?ao[0`fL;*G&?CINQ_IEh>nI/=?AXgnN*R>@b>@QHiX*64>o.c)g]EWeX]4X%@E3t)Ja`rU03Li
%=ZV`h5EZtc!g1Ba:eTH"?(]Vtf&=l^X^ik,gaT[VD.,,a/T;Q:aKO?(TUF7i)U4?NXk=!8,QTL@<'q&f!&-.R)O,urk6f3l`1b"h
%q*=0a4Ql-!E%d<Nh8?-8`fq,&UPq8^X;/P&YTq7qCuAUgbefY&]mnR<+KZ;o(8in'(L<!-,?Q0p<=.d&bsXhb;g%+-h38Tte<N20
%P\brFe7?NVm_V4I2$t2STnUH^LhZ4MRjZ[pTE<%a1pf?[c%9\HWms^;g(QGng9h[)gnH6JApfj^=>5u]06lYA5CJm4%Is:F]6t+D
%;IDUIBLe3WqaEFD;C9\QPtY@E?_&^YStZ@kfu>impg[R8<he$A7'U5iAUMU3-nIpnSoc(,V1[__SL^X9a/bjkQhV#E'76Om\RX2*
%[UO.4CP$]FMN'uIBcR92n=j$F$Ba;5)83jEi3:q6ofR-4$muGIYE?h2[Ug,U0eD.V7'ChKjoT$VHR^pSAIoL</V&"7q1^fFQU2*,
%YcEsgpVWA06B")A$A_7"fZI[9*8+j=FZrpXMZKQWWup%7b2hTpMWK`?_)ARDS7Y?6CVT._^8+3lA's+f6dWmUD*o!L&Z5]#:WrtM
%o=tFLgk5]?`.2VAi_%T9<:bUmHai,sN[n?/>nQoDrSe*._LsDBPr3k#.,/C[Te;sJcc@gqTn'qUL_26Z&<s9loj=l0G@jkJKd]at
%],Rj@N(n1jB3!f3mbF/:IOV:l_.)uZ'S<XSoXa)!%YB?jS<gN8_>3M6*>l_"9qHK8=@Asu_cJ!c:X#FZ=miL%>QrFUH:`Wke2kIl
%6=;MJjA\W#$PN5@+CL@,<VAhM-=8edaY5RY_%$9mpp`#bgC>i041s,@-@b(X#"rXg<Ma!H8P"HBWI3o!TM8gJdE[=?Ylt+^X=Q>^
%i4'JQ(DOl2D*:R3F&b8$Q75+/!(fmG>ZW\VEU"+u%",&]M<TDLL(:F.:^#rar<dIXl_lXtrIQVa5^'4cDA_TMjBG6<c%$:%7=oBE
%7YLar#\B@cXY%V=\W6U<!*Eo<P0;J.$+AI?>=%JR=UBZ0)F5J,RD"WcLG"*CijnY2mld5un9%6D[)#@r;28WmVhU3mN%3K3W,07a
%!E-Rso1H[<YXdp&JKN>V=.Ud(#S('`E/_</).rMIlXpEb+UimWU$l@uH*q#kC^9,`dgLP"HBfsWA#L,co)?JH=p]&GF1m+-/;Cc-
%K7999Q"TDM[N6%#_:("c)>'Da:4fQ1M.8Q^rso,nH]YJOR)JA$GIaIFa=i\/PrLEC%RJ+kXsLD+R?a"D\^<SqW!n_J^^*3h)hT&R
%`!,/s<]2Yr'W[-TaJ"f.)3D_Ge\sesc$,VscP<'%f.efD5n4VE!ZFb^-kQ,@HlsT@Q<<a"]2JA20j079f,X5\P`W-kYl1esnPcs=
%aU2sd?_?&sEMsc26kd;i],5Rhr5u\@3bBljWASH8@5>q?64fZb&KJ&MrAph:_;>@p1<HP+O=FV+5*:NN35>(uf;%1*-n/CXZ*1Dh
%!jaRH!=V\*Y_E38D-O\X_-7VTHFgB/3BI7HIdeV0<]lUN5d5S%TY<a:"-HWo#YB4XX;*B0NfLPYnNn]]JVp@UT-5j8M4huFS.^`d
%6IiLZc6O6$R\2`rE"p11&9qg[XCkWg@^H.'NQ*n41?k?CUSNJ<<a"^-@/EcX'a*kMo^-*2_tjka1Spi`OrD(BV,Fd[6RX8bWH5C?
%+-:<_9+)5W>Ej%k9H@8tp_[Cj#Pd?kVP8\S^427J)At](W^q-,1#Fg'Zb@kj/1=V_GJZurPd1JgO<97K:)I2a>j26i,bV82:[*=*
%a_;b.ln/kpd`),bqG%sNlB>XHC+c(3;<pFiTl,PHL=u!^)Y'C7[#V%q1PlL$=DIZt&GTf(R2=M?^e7KOpZ<Os3\[GOgKg%7HU*]E
%bS,;=EGB.(8H>#pPt5J-"_:W,*!b(%')`%0@;3!_>F8Dp!94fn")0ub3+BZ`L+3euPT.l*Z:s7LK;F3c8IT_##T%)K80n=k2uqAD
%TWs;`i5j"Y74YYb^l_I4Q%_g'>'(.F-1"[-"h;'=15/^DAs5hH\<XZE-&a.cab&=?rhnCHQ+em_oro2/AWf]2(f+Q5'FD/jX?1%&
%iMRtdh31LZ$:Zo!@ir,X$,-Og!-E,t#qlWk-.F*%VWia>6CTDDkXd&L8l*X`P*^-gCmo<s-6pM-[M,GJ4bN)5;hj3Y6\Z^)F,UY4
%[3&L;35'-=aqlfFMf06KS./LsaI!k.O^6's\>5D>SdE;30I_?:!gkYG/o)fi!a($fagbkZ]Fegq?L8'!?_*B?&,MA7k`Kh]aC5ZF
%3p\[k$oa(L-G#:g1:W@59-[-#%H897UO2qgn(6)WdA.n$:K2P0fP<rYQ^G.W7\qaea.6VNd3@j:OjIN0%GrpH&?`(f%o_[:0NMI,
%Np.gjA:Zb0FOJ"-D$q>DRaaed=%IFke3ph-CsWG4o)W:)7oE'spK5m++XS<C#7oB5I5KdgJSRXn%uh1q8VgO8pB$)4+eV:4e)>!a
%R@jqF-DB%h<*[6#4CL8q,(C_85nJql!o.<gc7)a8,I,u:'cXsq+<aJ^<?9YI,:A#,0M+\riV[e>o1's;`!so:R>SRF3^@B@8Dq(Y
%N46k[#FH=fHXu/26/uQK1.p0s!OoU(hAO??pE5<h7ji'0U=e3GnUYj+=Y5TjD"+n9$#HoUmJ<I?G)7O!PR'Z(Jfmp$Q;>RT&_TE>
%D5meae1`JWC0VYO$p*6lM30:4Q(PW9jK\YF-paB0I)]>cmse1.'uqaGKO^BhK?L=>0oQbH)usXQJj]Y6NM)\#Y_PPa@c9'Q[['*E
%b]oT+9B<JlLtS#[g?_,n'+dD6nKKuhZ)?]NZr)W2)=^.a@R/@eA8!qnCaIGf8j_&NDBAU&;EGHfi44F:ikSYGM,kI-.n6iYVAEM(
%)]SU?(V65>34T)D^o\r<e-)QIbX/(la6:4e0IPh<;^^Hpm`sku8Kde9JOq.D?#.DkFs\Z1NqKd6BtTFdV/5DV-CNp_"!D>d_)ud2
%PVa]uS$Q&%4]>e>@FkT;!2ii2)p3fW1NL,I'_3;-895e\dK\Z6+^lInoNKqDQ3'0(B@L^S-Z;U%\siFXYV2fF%&gLt/'p)I,RJlX
%.tV/K#dk-dA;JETgq/qfedXEDE/c-#46Df2QQ@OW:s/\b/3T%:?PeCLV4TG;\E_EjBfLJV)"0*B=cHA/$am8[5bTW\GFjLO82fdk
%.03qtYnEfDo,:\:Z5f'n\KJo^V*#k=,qjcL7iX\s$/h-J8$V\g-gm@CNDXS$nhh'':8jrtJB[$?'0atGE.PQ]U<r3]jddP7`qWBK
%dFHlIVeIQ=nd/3(,3K8qJGUKGnlXGj$"7._Mo]0-G;qV`]N-qRTa/Oh$upQY3Z,sDet5"&3Ca5Ug#O81C^d^<P4[o?PQBP_Z21<m
%<^>$I3[NuF^926b_02"=Jf^#!((q79f2u.54jJ-`j:hcjIc=hZ*1U!,JHIE!XE_tr(^C?`*n)Or4bA@`&6Fl5Fkm/n]_.HG_>>_;
%&JBo(SR`C\JJb\Uj4AYE!m@0'b\0%41C;WAZ>"s,Gp<oa+BHTuEVg:^!1megQ$HUIR3dJAbOGuuRQ#lcJU6GOKWIc)J>PO@?#Z?u
%\=:P;&q.0N^-V%9[Tlpd.VL/3Jcd!UW$+6#G&`ldg%*9YV;A(MK#,ZJK+eS]2j#b\3"ei+*rLq8o0CHG6b!m<p+*sH>5D8Bi-90V
%lU#;)%H%;h/HiW6U:LIf&tR"k[#Oj8E!pY#SsR16`,(tm8N`Td"UK[Qp=kDXP<_YIeCM5]3YC>.G,-X=mhj-g;%61'H!9<jL4fff
%Bt=)eV?a4)0(5ao!Eq-GLo6jt9iOu03/I$W^PdRE"R-b1kR?-b?A$4p7?rs"!FgiR$lhfY<Fo0^9p@?9_((;QUku%2QQeO^K(`5c
%9OU0i^^U0>3hHi_$/-!Q$!/Y)#GCXOi@*F_\IRI,<2lS[!_&T!Tu/0&C>&^$)4kZJ:-=q%493o-Eakoo,%Z9g70Y#WUsfR+j$?S!
%)PNtVT6=*_ij`Xm!N%!k=<BYCo^!f'RZX((nr;j292Qs&0+UI[kp1\/S/JUu#k;QgP:c?#+X-D-]#>lT?]$KI(#DV=^`eBo#hd-q
%&!TfmL19As:4oQdHo0;*-0!bO(hT47,De>R=C,ok77qF^O+(\m5tj8V:roRXiK=[E/#P=o9=C3;7L8(BkKnrK0-HY(,nL/jeKC\-
%L=[5JpoBZIFE)Qf$1EpVaDMKVSG\H=%a,5Fn:J]r\'i:V#h-.IKiaKI'o(tQH'lnq_^n")&9R<t(i'h2*"oiS&H=IB'fe7eP;CXD
%e1LHo&jX&kectdbJj(J;en8O0,pdGE9KC*B+B+T*/6\b`=NLZ+5B+<iC,$'2XsC/hFZG2IS>8?&8>iNQ)Y"+fBs5!u"#$TRo!Vp[
%'5iL3Qo6g",iRBeectQ>:TIt6:)-?Tb_H:jCh2[?%P!':^QadpQtl`3#m*/0(",*1E*EhThrnrC'XToii%q9LLfopeiZKBqMPGeX
%.oCO9,mT[a]ERF/%?b92r_44fnA^kc'5Em^oT/"-PDitS"J\7&BAtCO2*PX+1fTN%:m#8gi6%0E81e!T^aA!F@6C75.L%6a14q.c
%a`9XD6?M48AJo8KHkgm;BWQu?#pd!3An$];:2b*:[$m&t3XJ?aH)/n*[Z`tVPout6>hO@^M-kckJCcb7=gF4o*FDaa!],YGUlR91
%J,tc(;'LK*3,gEkR3(6VH+cb1)!I-5/F]P]6#<:2Jq^/mmDr9NR::]QQiROZFa!`9!<SEu_H+<ZO@ZApp+?f/[VT_E,PBY:L=hJ2
%%MOg\ZjKkX$-q12,h?B:Zlbsk#$M+gR$P&XnQ'q^9#4-8$KSWL7^2P]9@(QG+eT_F(pOmqSn50>5T%Q<Ss3-&kVW#NC')B-i]rN%
%?U-m2\n&d67"A.k/#i8ocGGFXI8nF;*#-BAQMW'-4I3r:*UfU@X4^o4U3nVM0e#:/ib1G+mW0A&W$^O.!oJmf1U"(adt=G(]X:3X
%[F\.W+Z8DI'`9/:==Io0l0#'>i&55h4/4l'NCcePc7H'8M_^aLA+10T\h<"\,lO09%XI-*HeOO'K-<S3-E/:6[L/$d1&6t!7.\J*
%QO@n,c^YGk9?&!W#ClolYjrh'BL,ArSB8'(S/F:2"';XOm?eb0\:_<f2)BKjVtWESpP\J3kj%f]HqYk1Q@\2o'Z>#s*`s,6W$m[1
%<&ufC(KaR/i'k=m"$\Htc$Q1.`m;bM_aPo>IXta5a<?MZ[)5fITL<%6gq86;Q38[n3I$jYTG;]57P0G@7^dK-*V)!S*<RaXOguYN
%ir\NIlKro1P:J'd`=EdAV'Ia_UmFsL,_i@Nq;%O$6p2]o.,eKk]RiQq,b=H,]b$b*]J(h<^C6idM!rD/Uf'V^M=>ioY1e6+m+WhC
%L_],>;8h^S6*2\Rb"1<G40=Krfn8hS:eAW1#pPO!Q4I/:lUY^+hUBH36fOCXA9fE+bHbhU(3,d?Qn/e#:2rp<e62ZApfX^a,,H'[
%L)MiJ5bJr(/c[@.7m.;k&i&??jp5C]%3hVnBT&eAZ:5O<8uRtDE:O0!P-?@:n0p0+%gaD&jJOC@iZ$h*D?Q*.Kl^0<<\ZYW8d\-c
%nSLg[,S/?$,"HgSTY4lpL4lt![a9]k:OuT9KTLuAYJ=&To1g`aA^F<,g^4l8X(*]]WQ7=>UoFiRW!UL.,Qk,]KVo*2aQjoTq[%t[
%D"61n/"dPpdh:^s.C(s:LInQJc74EN-eh:]mr0a@29]MPhJ?ki\B#q09+\AlgCEdtSsAk><5Bk60W5'BO%e1;P_1\'k-UDtHa4nt
%SgT>JF98%/'9$rg!U6\1+jmqOFC)+ZJ"V0%0Mkjr\g!(Yaq<"MP]B`Tc%>'.Z36TeW_BRW&<)FT^RfgZ8[?EJWAA]fKL]&r>E3=H
%(P+4Q<4/N>>\Tsn$'BrK,tg-t67OL30Y%@+Ma/<a)epjg6EAejQ;C#;5Lep1?At.ce0n29f&.0ZR__f-$j2%JOJdkf/ED9*$607q
%j:V)1fGZk<g<V#Mj8ptQ"Tm;>52J5]#>Sn)`+K(3;.2&N<MT_t>\aV'8()H]iEkaL6#]]aQA:*Kf\.)uRujlD+&3urG7`''Xj@bZ
%C`:Ks\KpY\!^?Z"P6A%Zg%^kH01/PD_+MWC[=kaa`"]S`eI!o+'H+I`!,*i%8._p,SlhX1-2=;_/fou/6m,482BYO*>9@9QA7^m"
%'0cU01p(^`?bf=8\?gu>7mUH,Wjnm\)_kr8J.Nq9cQHF60XshGQ_9]kPWfCk52QD5>iOk>Y([L5h&mS36_VX/_/nOd#b$+@]YXq'
%Jn\>bb6oR+`6@c76k_g<$B1XNZ8@0@5kj5Oq'E4L"C-ke+NQ>UK@>[aOJH4F99JAfF5B>;%&;G\?P)3%1dOZWKesfTW5pbsOgJ=C
%i/3W%Q3!Au?%LqWZW=>[PHH1.G&q[b!oRHKa?+-p9-50E8s9`(I.Kl9!P0$I4`Eu#M63,MR6#0.`c-#G!u-qA0Lfes8N.S+q.^eO
%@#V&p)\7?eZ3R5tQAQWs@MA>9=F)BM5mCT%;%1LlnPU]=+]1P7E#B:Y+Ui1mK#D33?=Og<%Heap@,PmAB^qb%Ju_\.+&McJOphB^
%H*Q;ZU?Wd03`_>t<a[gcq)Us4$V2,?U=^1(-7SVun]K;s'Qm3:;Ch6M">JbS!#[h^&cf.<P7EGhAupNbbNH_-#Z?"9V86G.:gj,h
%TuI?BSqQ5?4g6fAO7;e(fBPh=VuYOh"2dMuMWueR!Gj7l%YF[:BVAY*fM&LV\9s-i`^:unq.ZfS;R'_?O>L9?(M3=Bl\*&M8;lM@
%^hnr+,tbbK\W%A)19aEu'`QTrO:WH0V*%9g?mZ_1Ip/Z9&@s!Hr>cZH!+<_)$0,9M0c%!?MA_n6/Y4WBM1NO(Gi#rp\"064oW3jZ
%-^JQp7XJhL,.4!E!2m5.UL)CK+_Is2p8Jd#;eBg]Nht'U!46%REl@rhIM_]$fgiQ[$e?9'cD:J+'@)He#(ICH\,[:`@N/IF:un^=
%pLT]LRj@XQBK@eD/lO!Qa]Rgr,?Q!"9<="3HAOLg8[()ROqo@GJt,=J81,Q)^]CmCs/D-%'o$_'#F:`3TF6<^pl@2KP&M+ehTk&:
%+U/G%3`NK=6AS7t;8ajIogo0?$d<K=3!k1T)@"fk8?QFYqhU'Z8\$N$0O'HD83nu/!VIR#X'3t%f`=K?/P)lI<ti&r;'JqgMA!6b
%k+<t1+,&*E]&-$c!?J</Grp7"mqK!3*0V<uTRbuDO.p3WCF?ou4a&3bM/!P&FO;SV8^GE?j=Y`)'GI&IeVP<_L`mp(]-\Uu6J>=J
%YuN1kM@El$cissd9"PWrZ!M49+gKs_(\"L-ddI>L&bf^f)f*Dc/f-ShH;$_$6;uVdr".<$b$B[l;.?!j.(2jcRC)Ai\BQ&cc?4DW
%"4JJ#56gc9MmA:Q(^Of0Wt_'06uN)aM'qLf,B6m.c)E<O:fms.)2&6hI34*cA>24P?4W'qf&5dg'cS'a_Gj/Z3tO=Qj"XB"!m-)S
%4^/oQQ6*0(G7*E;UL,jZ?l^JeHbH3K5Gid,R"ngX&L?P1$?qJfErIjj$=Rp"2t4rtn"=5[S9HV?W"U]lb!4Cd_(CDY5ctQ'3*K]9
%(c<@gBn_YZQ-KG&F@<K*fULVS_G<S/O&^"7=AhmkODHKY0goIp%67*1Z;CbH"L!t\*G`ph0dC[YI#?93_o1Z9M6CmCJ2gU"B&PKN
%6N>,?Q2i\&kG:f1+K&A\SNnY[6WP,C[170iVj'h?i-F^On>h"EncFe&*H70PAUN`U$q2k[g9Uo^`.GEKn;0a$+[d\MNkU\nPGnUT
%_apoM4,H'jk7jXKbi#Msi6XfB<eHVR)CDs2i\37TTD>>9+\\C^MRs1YTPG9?N/0*Jd'dJP"d)+,X]T=+<+39M/WkLDKumXZYLHt5
%,fD+]I*p#q`ekn$!'U_4>p5=Q'Nl?-8uU;A:e@Grd_!"id(PuK,X#D7ac:o(7XpJS/s>^_D3Z&o<dE&6YdRL[&EL,SRRot=*Q!%(
%6LHZbO,02l!UG=O>,^*WCCqFCfIZZOTUssqBLun%?co&eR4kZWn3fH06`3pR9449BF&%7H.Xb-4>2bN!&:.B57F=\(#p[6O8Nr+J
%I9&UCT(j^pKTt/<Yn:.OU3mMtPnaL>]T\SHhV)Fa#L"#'5.H2r6io)IDG-u2_obtD^uH"K2_GN@qU_saFj-VN(c(6X-=DffbKgIX
%Rj\PQ0ORm-V]M@[RkH"Hi\?a&jQ5-!78[PP(+[OQOmXN5^^2@I:?i@Wq8SJ*l!MqV,Gq;akBi'`'^dpDm/B;6+CVsh0j(cq`!p[C
%.;"SR57^\P`ff=*M':E8%*'c0@+nV?*HC<,p.)+t;`Z(Q1R@k1*Np^Qgu2%Kb7&>V0^9XZ+B&lT*m)N_S4\bn!5;a#$6:2'O@Ycj
%S-BF<5J6cM+X%'WWVeT=)uq?7K*"!1Mh:(1,.qI-jMJ+*DC0oq<^IbIWb9U0MFd7I8&`:0#sYmPqdcc`Yjs1L]!k46.IHO'i<G/"
%F@XSReXp;V77kO4geC[+)bKR1NI`WTm-qf?GCiu;,mhV\AQb_^oRsa]:0:GsD6duc!c,i('e(e4W+$MW9;P6Y1h0n\T8joW?;r@N
%c3Y4tENOi@`'W'Rp*:'?"H@r@84l)\'TgcgKes5<7Uc1W&I<^_J6"$Z/0lQ&WVV`,G\4BU]hct^cH;8E:)457'V^(bK:sOknTH89
%3!+s\6_\$JE6VSfZgKl+UmnZUUYN?_V#uC]]L4!j=Y?FDYj7.^m%!">&N,*3aVBFH=_5Gh!RR:&Uq2-Lgm$=X'oFMq:SNZ-B>tp?
%T'*Tm0J1K[KA$e9n1aBaW,JL"Mi`pOab=2Yo:HZHaWQr+qc\C+,VtF'M((t5C^c-&^sq=IiH&ZY@nqKoO+V;.Xbf;@hgq`]$dqrX
%(KGKZLBRKI`*Q:.,[f7/naYkJ4*\4,j4Yah'$pkKrknd]/T*):B2=A>r>?>e<n8c&Su=rpO[YO1*2NjO'p;>'@RW7GoV,Sf=NZFE
%O+n#+b]&*mR1;f6Q6l*5K+VXoJ^8m=-_6naGTj/F@W=ZnO]`KT65N;>,*Hg6pa#j'RhTI.U`G8T1,AM?=>a-\c]D.cG-rbreX.Uj
%(_Tk%oC>Gm"jd>[4W%$9T^l$#K69L!7]&:WQb[OU\.j<j\uUf[JoPKNH6+AWOEuhp1$,<6\I#*B!7gR*KL[!t(fGos>pG`&N[RJ)
%dN;Ki4N&\$7%&<S>@nNuEsirgs![&3LIDPWK63QlV"@/6JiP<RO&hcc!uO+peW:4&+^YE,J_D(U+kD#(.24%;$Sa&<Da7JM_o&PX
%V>aj?-+VMUN>9`!>2?t"D2dPA'9ie(ZR"kGgau@Q<drYV^BHnfVJ^GRYZT88&31nP&rMQOBt\^'OJ5k5N+I17e9L14mptb^UUXW4
%X$eul.='B)@7WG61^Jj#`/g<9GS!4O8GP+H^Qcgm2@*"rJc+'$Cm@j-r`dmQ1$!oP&kM5k-#"Jn[@rCk$8"7Ca[$8a1"+po,@Yeg
%np6DmT<M`*)5/R57h-kS:UeDW7>-C12Y]8;j'i`2.3jB"9Sn^kI7fk^`Vss)^iYNZ99]R4:G*!Bl/6%`3+qHQ;9!0l=p2;M5-[p>
%nVP/E9Rcia"=k<8lA^=81N^UC!2i"=f'-91Np"Y;#,r4^AA<dbJm*&s5dEkUU3Kk=J]+a6]!U6k\F)5;(*F(u)E8.Pq*B9-[NsB-
%mQ$$L8LPf]=s4a`hUFED^hjRCG:q,R)!"_8l-KDH`T1(>+=ikd,\USND3^bdL4V8O+a0DGR<Y#7n]cqa&@$9hI<K1*#^oN*!Vcj;
%:/8[;neEbd,lCj'Y5T-!7&kk8%S.Sm(<Uj&G4bchFC,FI*$[G!Jg"nDNjXdSiAdcTA1Oln"_mDC7:Cq25Vhs)k8C<220W+5Tb'YE
%DZ_;L]`$ifn5;!9J]4eQ>'@:(MV3nIKbk9"KA+=^.O"HlhY/;7i_dd.+JG]'IYfUYp`+NhTWlNmNbTk07D=[eb(F5rJOU>i:?5IW
%>_lq>1u3BgDDWr@jrUea^;3TB,u2D>cj:&A@53;h,noQmOgEF_JN/tT(u`!L[[Z@;'!S!b-ES$#S]9FJA-.O?B@;?.5].^Y_UsU[
%PpcnnSh6T)Ej"\'H,gKE8c^Um$6O(t?4EVi4G][<A"=$WW(`LTQpuh$XB%lB,W-12VWmOu,]c7JUbS%f6g.fZ(QG;ts&-"E]_R[+
%R7O7Fod97t.]"'RIN'f:-[cnl.s1u*i['mHmeUH?Ar*Q&,\,eO70Z^UA#:"(#fQ@K0`O(s;oeE[gBsW+9t!sS-s=B'3K*)Yo2;-p
%J0_76_CNGf)Y%D1V*$,%MMgm,_9tlfLKK*VW<u$0N7?oSZ,8ika(R-qeki20Ltk6Zg/ak7eJEbIN^c.s"E\9!LTs%<&E7.3TZ2^8
%.*,_,<Z)T!Eh8Y?,n+EX(uIU4<>"UMF,eO.>iCid)DV6s7hBHU)=!C?Y7\/mb]O&ZKR6kTd2H`#.g^^1Ur+@5<o)4Vdu$#\NAQ_N
%MJ-*p08V@GJKpp.Yad4;)R!fSWJ(N!RM<TZ'kYIWR@"lW7M9SUqK,+8Z'mgi,_qpO&_@JHculT<CKh&`2)qZpWBrs$c9TG:8hUb%
%HL:ec3QUhKRZ>08EAff&EnkBcN3G>YV[C@FlNOlaL#a(#aX<clA256e9M(U;<EHkLj(#[?$:?%DEqoW]2G3090F[0CZ,/0=jNFH4
%Hpfn<l3=[08q^b&b5IDH`5i]d,q@\5lB(4^$X/VLQnVtpA5ju1==VI$[?V.fKTu'_*&VbmrEMnEGZRQR0Ud9;N\4)CHt]%76'KBR
%J?u%o$gQTM5g'FC[q%?q``&VH1B8DcU@44f*S*/B0'iJ#8R.5XA]`qd'F#2A!c/=s%f*N*_JSoIfFH\\BUhO>7!@5,U#jlE3VBBn
%i44I-P<p.MQD)5^j$k^rRAHRMimVpB,a][l";G=U-BrFF?;ss@12;HsY#&dD=j(4&pH]?$ZAprCM>^03b$65e[fU52^srh#`mb')
%j%1s-bJ<-<p5DQ:^6;C*ns-U\,Jq&,4W*7?ND]l7#7)UETUn((WR@'Q?mLmME=J+1_+N^@Y7*IPBlH[>_3-+\nRl`?/*Dj$H;lF.
%>k\QO$WgM9,%7$/Q\m^&2mc\h'Mt/604.G4>"BR;muT3!g);AtlH#?j25Gj&hML,?Z$$5G?Z[S)9>'fBOf6.TY+lYk-(@Z^pIL*1
%_La%[`RXfGI'^V)Z3iSuVRKt.2I=rl/<+$E#@\U_ogi^ChD][XOj6FL:9l5s"A^Q#3D)!"57Pc4$I22Zb[]ZOX4Q9-F@Es;=)&mn
%5_7#=T#MUOY:jaG.Chs!,*5Dh-(?).IMJCS7M3uZKh+=oX]5+qh53,Op_E"XJTE=,4"U]36=WHe#06Rn/:r.<L0"p[).IQ:&q_Lp
%FJUcff1Oa(!K6TJ8R9sXPK0LBc'.s]V/EP)nB2`g?KnTMTG5`SSfJbQ^1'eM\6Lgj\u$*,^mEJ?c92[B6@;[&Va_k:^Q^p)a\-1T
%j#Q`BdUiU<5kMq.,'s>6d)t\\O/);4k(%[mO9k%[\N,Y8n$\C5:\5%nV,Pr$6A%^8\fbtq1Q-"-'-)(V6l_GCO2K!+"\i33&--Ym
%<0+Bh[*TXbS2SNtSB?m-S$HRn@8T!A3_?`<5YVfW.*-I?M+5=YctUAMg6<3OiYms,L(S/#1'4m.1A.ME\52$-Z#rHL?,^j&[G<0$
%!YQn^!_Fkq>!NAp@IT5QB=XH[7c8at8-DX)_a8!&0?TG-mJsdn3'.+F@(%(%,_:-UqSlm"`!@U#Nh$b-;l3WhG)^(18C.>o8CJ(i
%.R#r9g_Q[c-n*:"@_t2g8n:H0a&-\n1*9=_=ob5u8@3(G;hHOD8SAI8gL)>I>29Wl+>S^O2EkIsO%%Wt&/(Qr!h6[If+L??p5W"O
%>F%:u-]aDk&d]\&_auP%OC?.,AAh<,6V-&]E>Wmd[iTD*DeJL(3cKe;#o?8`I7Q?F]SVMG++t'o[+n'?j:r9MQIekuU=2lEXUo/j
%L=Sq+@4JfSOL'H^_M\N12t=lpMq(BR23FnXEU9ATcsK["o-+MU1?%f`XVQ33ML@X2$/FYQH0<U<P)[Q5;dn60b,@qI_+NQ4_@tm0
%i=%#@/E:nY"i1]B)%kh2qOXD%abZbd5)q6MP$fum!&[Z)EE^R?)1KoYTM^O?fIF9j;(dIg'7r;kh]KFm>NRb&'Gl4@>\ImAH<9Qb
%<:@:SD`)O6JQi;\-/2&K&e"g63WTBf\=d"<QSetJ&trX:]@>GcN,->JfiDc5/rGW;3MZp(,M5Y$?Pm1$)%brk+FsStN3NS;OGD&^
%@hnK,dKPRrpQm">PE^rVVn_#[&X2T]/=pjk>p<DZXHjDCABZ<uLLtqIrfm(K/Aj>;5/oo96sC(9iEtk3#c@n,05oh-=(B1u.Q3+D
%n/;VVoZ5k$+Yl>'NYCP>ZlF@B<[&J@&M4p;;!RS;C!d:l>S(.SE=L!1RUCX_:8^3GTrAiA-Q.%0L+HIED,OC[0@XJ<aE]<^2Z5-P
%3Ku8^i$Fa`?O6ri(%>d^RdJTMm8=R=.][^U/h#8[_nKOr4-^40S?D[`&;YGVGY+hcH**PfKj+,eZZaoXgBPrL.qD-/G_[?\R4m>W
%`GB.t0EB'?VG!Ag[(I]38Y30)gE_VC)">UL<p"M@]>a>X8mq6gK$j_U7KoFkEP>6dR[K]c1ml>!#]0T3BG#]eB)mpf:'iFi1tT4"
%Sd:Ykg4b2H'<Vfj+5%:26_Pc8m\,n<AB)f(G#1:9P,>r^YJ_Tl:('c0lddS()%2i>5EeP3V2W"'C/':<,PaEWE7uF!Fb!#Z`WUZM
%SVsm:&6ZH[oK\^Oe-\@4rrV&?CK"THa88u8j5B`*?D^QiD)pC[lrU+8R@TKNO@Hdp[4RV+Z!f7Dlr_&d+R9p.$Ne5J)!O?WgGDaX
%a@_.G0eCm&c'=?YP,RE4">.V*3El6G#q><G91^F_$3GEP/BmfccpIq,UG[;+eMVZ18?s74GKBab8\^$8goN>hNPN*P(pl+ePhX4K
%EZ#%5U)ESSOJ?!<7\$,Bl6SYnm*oIm'Qi'3B3p.RQ2\kLl%Ibnli.+]_J3L5Y099M:;rtt0aYtD!7@gU0.@K#)`47?(5j]qp,Y[&
%>^cr5biF!!5!U>8`eTLhX\_QO[1+hqK%;dkT)bGkXitU+$rLdFi@5i+_$e."8!k)F:04KH:U%p2-0Z@Bd@0k5Dj2]XL"(p[_3#]u
%nS>DtReY?sD2/9+K)==pOIEeO+<$>tDR!)i-5h?=7_.Fs:%AA9Ul@D_@Opjoe\R5UbqP?=)\Y4_6>Fn^[4ELab2"p'j98p3=$Fg)
%XcQ:5AX!3:Gi)Vm5bBN'>.Qata9sa)a4-2Vg5?a\#X9lJ;seFu5XM,oe9=CQ*eFZkiffe9YZJrreK9-?[4%VteSe"<MQ]fJoEDl1
%8JtR)=QY"0b?8n6a9WT6#)VT:_Fkc62r\>!J1NSS9<4G6>q(:Og7mhr1oqJPUnGCdS/P"RLGr(;=t>lLjLoIm8ID;l^3]WY/PM<a
%-?b#BPt)R+q6&phLoHiT:6SX[ED/?6,Ld2[+pte[,oW]MfontMC-`4/>QU^]PMM/U!b`fjrs\hZ"B^>A"^?r)iqS3q&j&/!rpbsc
%&/9rH3d$<%`JAN\bX8Ze-*;cn)%Hm\F`9X:Lq/M@8+%[j:m$uZ7NeNa;h`32U(:FJPtQ"IUn^On%Lb:B/MP(-,^rpEkJEl^c2ftp
%X^kX_<iIr#+cZltVkHTVGXFAU%RNX*HFL/XEK<lsKUCi'=eAQPBd3f$Sn4h)LP_-d2VBo+\HcSoD6;<@fRqA1o9oqifni]3h[V<u
%">(pa>YE.qP-W<M[34.m!_;Kd>=$X2U]C\V10IsflC;70MnPVfT1_PEig0#-!NC#_6$3eOGj,?0A4^r7N^K-)i?MHP'^L8tXU6(J
%oOT47"YDtu*$#s;C364N(oKP2Ldr#>rSb8]GFBt96r^?-p*@PN%Z>pu!uIi1^.*5X5U,9_3&'[L7*63,bB1F;Wdu9c%0MV)?O5;O
%EGf45Zs#BpH^[,Xa$`!>Lcrts_J/%W1/nBa$1ckTosc.XmNdKe#\'4tfuU2UF[U_9's4fC+)D3[N3mEH"RomA"r-+5Z=9CRo/Yc+
%D-@g.e7r0hBa]tgXeMRZ_ka04S:$.-81IUieQbEa=%R'5?6%q5";]iS;^0JcAAZ1-ccQ5iQK7>:Kn9r2-YJ)@QFCcU+05-]YY23\
%_0aj1!8]tKMgfrl(c:5OXcRo>+pa1El=;0c$f7d(MBNh[UhKt)8W;sL-)*kXL!J9No?^-d\0\n@;_iMUOsU-tZp;NJ1X_HU;C5^J
%+0oi'ON8i5pd`_\_Z,G9>bc%33WmR5BdEM/8qOd=Xs?XrXgqA.b!se>Gs3nuJ]0lF:,`NDa3W;,hFK[G##9R<n;f=Wj!Eal!@%e6
%%d5okZ!C4FMa8*O<@!rq+W<_88f@?D.<(b`";eg"29jtKR6%C6&b)W,+tnh^Y:cZm@T]qNH*K\qA1BT.E/dKhFBZs,+Z4uX"M9t$
%?g\UR^bTshJJBDc@86E>=q!,01t/U=rEUn[Ji*&#Ub)&-N"9Nf^L$FVSY&22c+"I>:'U^1?rW3aHN1nZ2L!X+>Iu*oe@cteh5qM)
%!CH(4&P4$rkt865]QWf5"k.PR&O"O]'oG,l2k'#lbgYDu>?<,l1J"2_bMA7%%ln^LN\10RaJ]ERmHO.KUfsTtl.PTGlD>p#Uj%YD
%->nMW0@CeUHRY['8@Y\LGa<S*G/T?[b#%YP(1t4VVo3@O\F@G'k^"^@r&R=(aHR%XdW@8q9R-5/$5">?-`pf$/d+McA>^@9i1]I7
%$(s,"#h'uaIa!C6Hb/Tj&j.".^9]s-*bV8nRH9M4&!npSC6h2;QgZ[$if"cEU6ZTq!^+?tiegY/ms$>cnFqb<%VghZT#,pmR?8G8
%niKgYP<!L$I4*"lTi0d1N>ns6L&$a(#B*Y1n)uH(`[=7JL_^'PZLH]_3mk.8hW9l1YbgpI);)oMRZD^^%,sP5g+9m\#3N.`kqB\n
%#5,mjG:U=MaU.`\V7hM),iSEPoe'B=?`BiFa\"^+jh*so#K_aUN->SDM=AGUGXlj&ghrAF%_!_5bDkcSE2>gV@qE9i'rV9\>9UU'
%Z'[H)6]/.+%6(B*FU&gRpjjsG*O[ii#"M@2*=<)bAh6>o``.]a+jliH(_X"G6?HiO_7"'nFI+ZAMUaFj\jM)^V%JFGNmiQ$J]`'n
%O:7QF6u:VLl&HiUT'jI'B2"JQmP37_!QZXe+Sl>bI=TjN\F+[bM!RmT"G%At419jkY0(p#J.p/=ooSPN;P>3cFE[qTUpIe5]7WL,
%+@^Hsq7)Mcd7SUq#]eh6'tQJ_Kjq"-h&1_a\/9S,4%$/t;U5gJmL9#c#iA^t4.n.0QD=$,!BgbR5\%Ae!'Y[+\J;\;^dJJhB&U?X
%jO#.^hiR::0N1<XVf[+sDuu<l%R4JRp6b4W!)3SkX`Saki)#A^Np,m>972#o<k:@[dK2CB$f.AiPm.PfA%F`hIRk,u\iWh53%E`)
%,Y@h#HF>o"@1u/FYh]oAMsQ*a[Q?k=6)^0fG"6X5P1UMX44]4<CLbS3LG156;(L=j+j2Q"2jNe@+]lP8O6H"^q'HcKFE`D2CI@IQ
%mKahgHJ:11SK[Mci2$h;ST2U%1FmQkLA@[koQ5;sBb="7]7\%[HXKBgB1W/i6;MgGR'ZH9Cj2g1E^%HKN1`B+mOR$4Tb,?+2.F0B
%+pFqmPjOL`M@>db[QBURZU/j`@QN#(m]LK/d+uf:@n@K:74Yg>[26Ed^'BAI:3nr4SG"1*`IO@u$4K+1]Aja'Q^-s`0\AZ8-Y9p-
%bd:X&,IT]#0u5_K[QE!R8:A"Rh-&`I_%[fmh'!G7>hau"%Tj\`:b$:*Q>WYba)#sMKecr>4kh!](n'5cf^8l9Z<LnP,FG:2k@o>\
%+Pan&=kN-N.s=6aTt<,+W@tI%h*GM]VX*L7$qk#BmgeUMJArl<#DMT++D(c&)U[@AP!O'$$f.@En6hs%l[Lsi])rUtn.c_M4.ruQ
%7'+bk6.ZHImtgBAMHQ<)$Jc`p*iW\iFE]^Xa>d8cmL1g<gTIHd1P>rABnc!#d+tC'7RVjG8]&?G&`"J'P%dqkme@bh6&"b;k7l;m
%a*`(jk6*3?nD+t#Mq:u)mYk5M\hUIO+X'bm4l78mP(d4rn'2Kk\hP^_G>S>#I]Ij?33$Q#O8/,OEqd[d<qu)jp,HYQ(;;j4'AVhJ
%HbMQE1KrD:h#U#2gaPUr45@oF;,t-oE"PX0)F.uF[Z_Vs1"2]?=1(3=*>h&#NY-O(@+3*GY0bsD]t)e%gqb-&VWYIIU%$P@.IN9Q
%LQ[tGE/0l`P!9\53uEmWJ0+78+_8I$n3V&+)Xo>o)`aY%K9uu>Q/2u`6b`(WDeGNEWCHN'&3JaJ$GDur#XQP`L#*:@+Yt4fgL3Dc
%""ik_YWGAa>0-)EdjR"IcYa!#7AP0.Ek>.7mtKP7m2CJDBB5Tkk]#.I#rh"TK2kT;_THBo1K.D@HV(7emN]"sm%N?nj<17=,-Yq1
%4"%dR2>E9+%^0QXEZN&lOO&HXW_/Y@LI5JI;hD%F_(-pQrC<s^oDXMe?OQ'C6'AH=4gQ/Kp'a<Fb%t_48YT3A1k(PIaE!RYZQ3JD
%#/#,FJYun%@QQpQ6ALMVm9jjU4KJmp*U:_!ZDeDi_0-9J#t[Kn4+][1`'en<+A`3(+g7I$PZY1GgT_ULoXo@EY\9)CmI84CZ)Z#k
%bYnqT@+TPlYq4*>1#&t;/dC2hgBg3QEoICk-EcbF7utq;Ubf<"\.IC4[S5IE-+5T<n$O[YG(r:2#!E\UKU+M0+%EndG`[)ojgDu0
%63t+0YFQimJVu%kG-LHuYkr2FOWb3kF"=nHL<0e-VmW:2!>DZbg&Y/3:P;rG[50,P^XCgR+tU*,:MXT0UIg[p>!%Q)ql$lFOQ<"e
%T%4Aa!EL&bg;1-=+A&E;K1$)`Ph++ks/8TNRKpQk#=G2m1Q8%G]0^9<qb=sZ8o"Zg&HXbb[3KiHk'B^:B>E`^(=5ne$)s8C*OFJ9
%=2K32A[S;96m5TB[=_c$!i%KPSKV6\fClRp"rIJ4Ytp4-$]3L1DP*A5)C8akXEK[2*)9qM1W4uam0]m7?V3eZ_J2TAL\O`#e]n`$
%euXteTr4(%;Fp0X]p9hB+fQL#_Dkdkm>-4GAQMIj-u&<cd?E:P8gI_6m;V)unR!TMUK>5gBnb%H[]m9!$`P/,YqD,Z:J'p^l/CA3
%:-2"[#sG,UYpA>o)=7h5=A;n+Znk+SNkT/5_tTYMZot0)3najtglTpD@VY&BBL`AccjQTh-(SsU)!t^3-`])coJ7@Am>:`sA@-uV
%+m;O4B:O;D/#Ad;*AOm[7[/(N!K%_?8ip9B=e8\TmJ%)d+ig*r#5O*%YF1M-]Yc2YS>4u<dpfg!V&_/nOuZGhm>Q7PG?HB^$m@[,
%=eW4?od6:h"&_3sC(HQD0rZ236BPA`m@Xua;_E=#pct)M\)rLt%Uol#/$0g;_L,['m0LkYJBNc#%UVqXn\T'sNj/q?b\P8bOk941
%rkYh_P[59i[6n.$c5Y0b@/r@76m&85UP^<.?_Ok`Tu=<n[!%OSZ0?R<4)l;7Uinj?(mH#&g0pro\jB!U#d;QbiXr.1%Q3AR<Dko)
%c:Bfr8F6gAH)"Xg[0+Rc+W"T2[DVbHe)H25cEr9PYHZa>Vikjt=RG%c,D#?OeIGrgoQNoC#8@8[`YDrE+VM"fL"OZrKu:"1G!n(#
%eZBJ=_;=ZUE+<?=fHl[FYRoR*h^8P<L"ME5'84IH&_jQ+K?7MTfFG++Hb*K+[\G(/$s859NdMO,lf_IA`jaCS(_PN=i3EL./&ZUM
%kE%6p'&0ZLT8_eT@QRQ[oC?1DmGO"^!I8"*fZpdI<[1p6YoUJQoM6903u"6LYG)ZaO[l,Lcf0c5%V"s1(M5`r3&StL7&CfpC>(SI
%0\atdp>5JdG)!8@(OKaU6Z>4kDBiaTEIne-:7:K?iBVNK@^[Kq/t'`fZQ7kRoE,h?42R&fRN#GX1#QZNAA9\>G*!7UV_[!uff\)?
%6Y8F'nd#YS1><Dn!Hhd[Ainut(p+Yj'*L\CcRm@aS:&cFNgT3)nI`CAB=;<T44h`5fad+RhDK/rCe"W%TQQZS"HJQLq=I/#G!mGs
%IUHTm,L.+I>77bXOc6+3+gW2'(s"",W9m]f6T4YTD27S96=W"9[U[!TB7"AT/9\jB*)YIQRtUB3W9m"$\t7W958D;%g5\un!^*L4
%G!mJecE8=u*Q3dKGfjiXluQV3/Bi8g&sBl]OP(,M+hFs5gBk8Yl?[&(4G,dU-FQ9&HR.KY+h$E(q4.$0+amZT`JE-+eS$dh$EkK/
%[crf*`-,[[i\ZU]m>0aoN7#LY7qZh<Uom^i=NTPc&nX5^1^a=*-^n+7X8-Zs[@LPf=[&V1G,2HQ;HKR#,=qpbW^kQ^7-uBRdXjJI
%crjDh._2+s@s)[Cg^YGTXKebcG!`Ue%d<:\r;sHR7,GJ/N^-p`KoYBaLpb3.(OA.\<,?-B[tA"/D)!?[-6ig/PM6GV*@Zq\q\OE;
%&eP^MG!p7=<XVKt;gLM<n"`hgdjS^em#hso*UhFIqX'ZQNN9g3!N!80n*0c]l6E.7b9-<<r4em(S,;0jQd<&c$3C>pI!'T-:%$D'
%maRFJ.R.8=Pi"7kQ]FB-l4s=NahJj'^Nod`[e7aDb?l(^[mepHn`+6Oq8XR7Msl/opnKbiIq0=e^VX?;d-!!prsaJT^\L\*SRoPg
%r8Po=J,WNUGb0EZrO3kuoV@1:XG)LM;?$jTMKS10..V\/DjBA7cUMd5^Koj<nhKr'W#j%sXq$K+eA;&.3=[Ia;!l[24p^#,"pP:L
%!TFR\\FRYYpRcC"')h#B=HT@3r,1U@)^Bh,Q(M$$rQ3uioTFO*g6B`=]nOS$)r@=[%<!EiRU(D9OipQ"Y%o5bU[a5/[Sk>6Q"&Ua
%;K1O5&_/*&LddmO@l]:Y6&GWJd`&FZ=Bg$YV<*J96&kXsqQJ="J;,J]\b`_-Q(mhU/m[rp$KS:oi2Z5^C?&OW`YinWN"ufWQn<)c
%&<BrhL+:en#_HmIbL&(eF$<l5<];-R2%lY/*a*1Q)-&j;hR/F7;E;8\0e1e9!<lUbHlg."MC2W(:*aB<NJ->Ql/cj\Qm@BHCEK<l
%r>6d182$=gidPcb8a:];rf)WlO/_]XNsWLG)m/g??CH2K.X)Mb^mB7S-HjFHN`P$VPs&F;]SbThhuEZGo&O9UHpKJD^r!3krp9rD
%Bl6!U**$epWr4EAErgdUO+Rn9re/@bnin'tBLg+*MU'i2J%k$r=oS!PO8_M3aSi&uX:[\:-ZMYG1)e6J2-*,YEi1C#-)5PS_'6'Y
%p]#p6"3^/-Dl&7jg3/W5\(8"12mj*6`-0qEMWF%%n)KJ//MgK]s7?,Rb@h=nVlLi`@-mpe;"KF(d'jK4O!8h`3)%"8E`FiYVlOM0
%l-P5Pd/VS6=?]n/:]T/+_mYJ:6ebqkJ@2hD]Pi-VK7>!CH)hF#(X(;bnrM],qd9ADG+P3"pnLXNT4*%qqYcc,^:JX)jIaInq-3j_
%Zc+<l]K![Ms7djhi:YcaDf1lEBl7SDrq^0uRF@L8kKg>uEZMBB:]KhQVZ00af?J6;QMed!RQh3u'>m=h3B;Sacht65&L^RAO^J'V
%I*F:TOOs>^:AfG3r9!*oNp(Q]h3jVQZ_(R\9^#2rE*(k`d[>S[kf5o3f7g7Is*K$;F+!ZCnp15Qj/[$h46Y'"DYLnQT&%&Nd'qEO
%]B\M@s7X@nkHA3`r*XF2hV%K,]u!-dReF_tVA!n)>lXT]I!L"K]R;?l=1=2ZD1!]OZFBSgo$,/*V`-!</>oT%iPW:me)f,(2eP(I
%gJn$BCTmQhhp0Lpokj?ncICuR'5m9kO!h,tJ%8nbc^VRHVju-bcgRlTfNu%2mX"^*c2!SKXun[@fkgOto<rSO?/mU<G+6nsI.Q)_
%IOC>"G'WtL>eO<ITA3[W:RICGdJ[B_B:%@pj6/&3;nM>9G?8^c:R?RE5'chlluYj\-?X"bqrR(m`N-&kB/e;Jb6*.r/[*nni6s?F
%0,C2)=1LK)rQJ?RI9g1N<GnG3EdkaF]sp8J(R=TqY0L?<QHS':=e.3eqfS<ri)?'4Eq<RS^<=cF\bRj:hrSlsT%M)&S+D^*2E.Tk
%#BQB([_VV75*p1Ka3.hUkMNs8H%,GP*4dU)%'P0THbA_2<Tj&"o.QEES8%]gKF>WcnQkhRa7D7E:9"E)Rf@^)k4S&HPKW"R^"[J;
%H,=TK539k6^;DaN8fspDp#eD9ldN;_hJ9<q(GB)JDr.c=%X>1,c+Y4Z/iV%.;ruR#oZd3Roq29[lKWD83Fu[NJ$Lk'FaF(Z?<t:Z
%3Or)gqOd,SIhOR^?GF%"EH8Ygme#RfMF2UcpoaI9NZ/#I9M_k;YHIouf9b5Fe0>(Z[qU8Tk@U:a]=NQ!nF`8fqrKshoR52cq&\3G
%'/]"S:)Jlgh;NM/9^B]iHX*.q8\LL?Xl#t7n]fV;jit,GrffW1gh2#4#N%=;cNe1V4M$Wi*??/I*uUGnYfoVuY4U,tU)a'-!@HS/
%IWcAO!tXd6Bh^S@IbrZ%;'4#2pL0O)B@I1$f/LpGVeFkXGGoIVY0Uul?7^#l`*j2AAA#fOZM19V"3/N.FN)#jk2^?Z^L]SK&+^E]
%(JjLnjE,d[]`)W%OZZ0MBDP)ESFc9D?SQ3hgm>Wb;GP?*qj`V5Z[B4SB'3;\@7"o+4NZc=.GB#mF`i.\]j1R*KW*4,cXS_#'5H+%
%:S+2lR52\A_-Ke'o<\%P.C$O<\n=40<3lmZGaBr6^@p[&ouD^<Roe4F?='10rA;=rg;@^IXN's?NBIL-ofsg*qq@B>H+g-1kp+9)
%SQ%PVn(W1U]]F,+pC=2[*bp<LE#.f9C"W0>nHc2m-R?1Hec"424fRkA@,`8AFoRM$DD)69n4`&iTc?0"%T'A]cY06`VP`eM2J7Nf
%U>#W0Maq1br&A+f*KIRsd$_LZX5*n9-3Q9"^-&s=>b6GS4C=[To,4\1A68a,G!^08mepAiac9/d0@!n=3^5W1?7[aJ^-$[`O@N'P
%.0!GOrR$T'Gl+$%O&HJ:o&*h)OaU<s(FQc(#smI$\DI0D_5DH9B@ICk"s6IX4[mWWQZ$)CqlSa&c,ID8odQ0L#Dr10_5hW:]7*(Z
%*dr@WKH-fRX,AFK7so,SF#dYYDm#rWW`Qgu6aP#M)uAI-aY_!*-I;'q3[St1q%RcgH"pF:GVLq0mD[cSq6^(4oA+QOr9SHL1*Nk$
%o]5rBbH!)Vfn2e=eZ$`mb6dc]!c$[QDoqelG&$gAY.Aarrp.[E'D>6d6>oW%-Q]_ejK?'N_;6'T=F'^Dm)/4S2L^*VS\/:W^G)@2
%c_$icSGb4BC\?)GhCMDScRpP]TKbTh(H_b,[O5e77+mJ+g?E+i7%)Jk6ZHHQE$i`'C"W0>nH^pJVVpO[W@6K04\8(f`2nNfO!tlV
%8nSXqkW/-;PR45KJ`NP!>#bBkMt/:_J^_Z(M__+bF"YV*Mt0&,Rn&m)@Qo<IPY"JXhpqRub!e==9XuQM3cc\boqCQC9U^lfhs-7[
%(Zk9Dje>H5bb=D"qi&rC@SY1D\\*RGf]??Z2L+)S%'Oq'%M,)hE$jR1^LEO:n>Pga5QA27^*"cH&,5E63lLW*MT9X)qUml:fqTd!
%^*CeEXOlm7fA`m`-4I_lf4M]Sla;AlCOa(DP1a)e>is`QP<*Ke=fZu'>&?1K*gNugCUI<GIF)/7(_QUQ#P%20)j1Lpn9[O.#8I6/
%\'a$@;*/]k#t$CbUNmf<ekB`m@6ulHFSa``$&O:IG@cb^0[rGHSGdMSrlt8\Da3T]k&K;0o%E-rjbpIgm9GpO9W2%9PFF3P@;ZLF
%h:5Ih+tOEaV(W&RL2su?\Cq9lE+iW-Y?q;?jn@!D?mmfJaocbM2Y1BI6J:#!+VMq8FSWe$At+J\q7iCfrr:=8TC`)3QN(C`0JtJp
%]7J`@nR^TOUW:@<pDtru]?/Bi6o9?H8c7&Ko-("$n*#)iTuUF3^-mG0NnJXTI!Tr*lKWN+LO]87S"BJIqJ;LUi+_H36#(rWI\NID
%V9fVu!tXeC)`")tg\NqqKA#]WCl=42qVZR2r_Maq'V5-m%TVr=p"@U5Mri3J'BB-ha2o\.hOfdO4&c^TN-lc;`CFo=*b$8ONcTP$
%aZspDh]2Zej1kI/s4m_Fi4c>T3W;+\J*6Uq4*>-^_jKK!F8U6Bs1XEaL^:5%5+?4Wc8"3>FTCg>^LWB#c8"3:k'L`NHg9&UDB]ek
%kinXD+XUG:c<e/.o6U6)l8"heQW&(Qg+RX"]AJq;k?#FThSo)mT3gC8#G.Fe<cgY==+@G1X'pT0IrkQ4RnH[]jnS@/f7!OFdcs;H
%7#04O*mGb3fgE1Q*jS:&(HZubAe3S]+hOr>2o4.9h..J:[W=Bq=S/6aFM1pcI[7+Sj_+B355XU0ZX;"\cBgJ^>q_h"G'/4R\M^NQ
%qp0G*%&XF"b`i&i]6JD'NHT9J%*OjH>(pr_GF%FfD\N(^K4fDpVYT51=8$:ROZUf^q*H\PcW"$hk-CV"4b'k%c"HtITE"^:>7d"R
%/*fFQR<^r(+-`tBKE#W`-bDH.[p<JcKD0'-qOHA346oAh#<T'dfJfWf4'lO>bNsJA*A=bZATk`1NgKKcm)%!kNYhB*d/Pj_?M=1!
%3]g[9i-<qG<d[#T5'u<TqG&\>#OOg'Ud,TSVj-mM=7k2)YY35_fO,@k5S!K.Cgmam_$i6,++9Nm-?dnDko"[AIl]b9Q,eo$op]kp
%cF1`sk/22"&!hW.*+pOorAYd0,c3^g*:J..gA:tmqLNZ@BB+rdoXGI"mP(h#qU1>:[&[d7_;H#Up[[D@eZUc#c"!fsT7As[=68n1
%8T=1\lk>1!T2/iEj[6X`>#Y:%m2Qu9iLg"]4n`3/?+kLQH?k/!E4pW_;'d=<T)Y7-r"/;smkVM9o.mOg1\4_jZKE1\UV!3_1#WYP
%YL"^V`stfRj-p@Gq"="LUjP4ODJ,M[;`aMj3A$Su5.IZ]9Ntn'%)O%=K--O(@g6.dA:BIsq_8TE:35oRN:[DR(fU8bq_@g<VL*!'
%IeI9qIZ/]ERG!WUq_8T!O7D2acu)T*AWT(Kqq:3sVnVMP(ZP;Po]G64X/iQU\`NCo><>fRhco`Hb;U5EkC3FdWSDann?+fpH1g"<
%g!/b>n)<IGNT^:aG!;mDUSi=d\`RQ,im<`6YEsaL?N/9?jlP`kS(l*W]B\/8"AdUb^cYEWb[X`ONu;VEb!(2mI<@9`>2`u'lcB8f
%PFJU%BA(i'H81$uD6\_+YbW-fBgT9M+^!/,.qlppg=WeV<mpE+5BhYfH76h[hqhW<puX]BTYkjYcKHWSHjVqd?^l.33"T0Yh28jW
%8*L02r""RTmaXFsFK\9,3LFol.@llj^%N\8cl4/nCr9]VJ36I`\!^f_k)#^l^bS"2[;UEOLi4?<-Q_%.nR_+3GIdN%\,0Gehra(U
%gjGT\DfbMeDS6E"ib`Rb(&?L#F,r#]C'(WVI%T/sqqQiRS$-o)F`+q=c.BN%3]CF/5'^TY_hB^*V@24Uc5b&^DV>/]YB9Y]V>H=S
%X62]QT1h8r+8^KSZ&oeq\/EM@%(e1'QrlV'+>e$BO"2sFA'VRs#Dan8_p1Cdj`Ncf)7slXT4^Md#aYM`a7GMDT0HP9kj$^?l.O="
%s#S8#q"j-^o-n!\I;W-PDBb/6_<dqRrAg*ZoG9'kKA8nVcF`mi^c-W/jIEeiB'Wi[>4"1u*hPVKh=g(.nmp9uGBu$d&/[RDX+`I*
%=%]Xko]hSjj\tS2X2!:ems][F$&RSFl->p69fEPD\GCh`ol!/Dam1n;02>9/;]"QjnbE7`]=K_bQM+_3V<LC[O5/]2gk<@bo"SfR
%D^L1clBAiKfJimJC3cEN2UU>DG]m.oU6=@6-I5&I:LBX^1jq86QMIG6r"(?/B6jh)VDU;@]bf\X5QC?*e`Ch7jg4rM4Z;ZLa54Y<
%>Q;f]g<HMN#ADiIM,a;EngsN1WQmu\5o<%s9m#hGnt#&uK/ST.SI>J&,q.[8e="Y0g"H>,;`!Cjqfs,/a`'$)clV(pIbseBW"3Ka
%I@)c#gN!rsIIR-iLFJ\dk8c&/PO#QEQP[h:d/F8m6;Dagmf2PHfTM?BcYgHW3SWhcR1I>$5$7OWE1EYekJM:(f$\q**l8*B!"R*7
%#KhEP*rai;L`YWFCiEa@Sqk]6LGL"_q@s7G+s%O(pEN'OR^q8b%?fp0,L#!OhK-IjgOTG?R73nNg%;0l\UE?0a!nX&4Eq-iEUSsk
%Mj)rO"I+mu34/[RJ,T3q),1@;-!8IajkD+t^X^9_1ADn@`5fbs`9hRU*BZg2P6i#]hLf?$Gml)=&*INX8U%mt:\Cs(h#.Hd1@aRK
%leZ3d*C,SE%ef)BWs"(g0L:28P\@jfSO@G+\_6kVAu;f-+/D%_S>ZbEKSR!o%c3k-C^U(:(X)-ZS6bU1s06JuC_m`d))ip-ShL+l
%WrI)2oWDeq+*%<u]3T08^V%*>rUqAaaAKQ_(@s:CS7VEG_d$ec<b@,ob)U\7*5X39E!6/`I<,/[`=sYQ4^@T>cLl2?6A)uGHJHd7
%4:"#P->BrTo^)G,1cnBVqu$A>^>Z`jHC[tc+""ttJ\L'&,Y3F[r813>_k/TS=#)&D!^o8#F`mLSDM8WZ:K2eUr9<Qgpb*_=o[U"j
%%fc(2h_'Aj3mZ]HVu5i3`O"ZaRm2AW/3a+/ULs&pY9/8dVYjf-p_s04Z@BUg%=e8iq+q$]A\TikZhSS2TE!FmT''I1s6[iK4c)nb
%*a'0$U2rL>FfBMA$cn=t7j/$pOCt7]8$+lnc&ja&N.l+0np'_i/bJTd*2O4a@b@c#]$bEp%9:IbR^P:M5'GtA@p!Ym+<5gI5i.!0
%hs@"O)ogk$`uc?%L]Nb?*5BEaqW.+3R.KL!T<:t]T4Qbp@Iq>8UcE0.doa4qNa,,`ZcKX;nkJ.+SIPD`j#jltjtH@eIt(AqU0j"N
%OM;okUX%q-*p9MIJM/uHk4JW\VAS-qM/UNIRXdVi-J>oE8&WK0#X1(N_B6AE?i2)$ed&PVra\.W(g13Y]h-J2Yr3'P(rTO2-BECB
%9cOPaLd..:YOXg8Y4IQ[X3S2^e\QdFK*JPH>a'XrHl-X5[FKhEoE>>Bs1*QY_iCj[6>ka8R-$&&7`dK>;*nbAFko<Cf66hpn]6Br
%"@g7nDliN^*$sXfhN2?S"?-`f*0,)H`5-d^IQ0"T[:TZ\Q'i!F+5Ae:kh:c2Ge.I6SoMUGbMPP`kjPfu^46.P7re(@*uEi7a(?3s
%eeb?tn,[f5S$p;+j=[7TlH3r7)nOVBX?+gN@7>Q/65NOHe>C6FKl&cs"]ZU\?:-J-a^Ag\c)&.hFTqT'7Vh!\hH"7\0P7HW&JGc#
%;&c8]\*bX_cb8*T20i6Gic[gtABXdWe#%:3br/&`dG)+Ml!T:Xn\ZlHc>;1-V^jhc60!brN*3tT?'+$Q:7>I\$e:*'oO.<@b\G/Y
%nU[]eP(2fOr/:J9\bfu5$^s2DD2SpI8&:T'"*%kbc*LlbqFcgu5'/-P[es:q;/0$7I%QaXa\"Aa4EbuU>%dcqhr`U9&M(luOCr'C
%I/<8L4eDT&5eW\;lE\G"1%DYOM>nT+QcF,g5d0X4bt#<OI/,L_93)^g?e=#EkjrDO*RZs<>EC4ZAA!g]#b>t^VHnXfgNC(po'c(1
%aWKKGHFg],dSX$UU:]ei?EdD!=@M&Gi`+lN=l+#ZbiiJFgOVP+Cg%EkETVJEdEp)8O`+GR7[l9*2:uC6'4Z"0JhPs)h(^'Pe_2!G
%gYoBY$EabngX.)(6eSNaH4&9EnanE6>7UJeCtiuUqkNADPaAl$;si/&G<Yt2b$XUsBS%U7l/WkLa5>r1ar5*M4Cq4m:nW*PoA5Vk
%mIF%>?;3U6A&ilMnCtU$K5IhQF8rSl%^Nn-n\)u,hj\3QN>T'j<DE,G"oa9!o"F*rI.R3P%ujcN0PM?$\Gj4QI(jk(o&S>AEPW%&
%TC<]!k9%,R*HoE)h/na[m2;;(fJFA!SN$,m533e.7sQc6gS_<=]/gI3<aAtMK7fOeg4<'8E`U)oL@N/a9=pS$CU0\>2Q/ZR>kG>:
%@Vg2Aj_'4j3[R(\(KHg#7T.)cVY@jmnj1V\;%.f<[p@?ZV<n>lAR5[gW3Es%T)Zg<A_Yn>$Tf^H8([<BlUNnn1=3-/b>c,chmM6`
%VX(g@5[rV.7pS=Uo."Ytr9qe:ZWSNNaR,O@F>g"gKR=,OP<5E0Jr`[Qr(_tsl]BWYB!CU&/[pRa5,N-bDtkc(L'a6JcG4%,\bb4R
%XiD+4g14\G[QO0QZ"8<pG,F'#2=_F:Xf%)Uag*s8>JtP4kkY[;'D\sLGm`+$P8/M(4Ea);hp,95)8(12G<WXX0$4.XE$K-:.d`L$
%dk(&I/6dOBOd07J7bu4VYse/(I`!C256A/HV5`MB:$(mS#rfVa$/Vaa5C$_D3Kqea3,hY5++J`cqW?elX.)<GVQ/3ONK8F6f5RQ,
%[FqjiG^F6gP>>Zc+^^9$=di-\Hqq*2UJ<_L9=JZX?EEoS3^6e,<M&2`rL)F$D6pdDD/pVN<PIERjZ[dIKDLZCB';o,hG2,chYtMS
%]^LhtP(#BnK3RaZq66F5D&k?h:QM]^c=oFpDpJ?m4TB#=rF1%u,AsddF)q*SI,0C!VmcSPM)a_FbMT\;I$)R[@fAS*\K4!6G'S*\
%2*gqL2WMM3\[bjL?Zt=tT*[]&*pLFGT0<4([2I_g5NQTEN*kK?X`u#hn3^<-k1eunB<Q6V3E(PXRmA-2F8YOB^,^PChVgL0<Uog4
%8bFEJE\Mt<k4RElls$!.MmI>Ap+:_q^.#T"XnW[d9tnSiMf5j`.,SLdi`e8"m;ZLI`Ur#8Mlh=$XSj0R`A#ECfF5HOGCT&cn)BZ-
%d_"_Tl<a)njBa[XgV)f/],-D&A)ps4p;"Aogr6soVRdSgqf+8i=']!RoD,i)q2??((Y-]A]?NQoG7jhCia"C1]Sht\HT^u/F=pJM
%M0C\uhSoB]0".7^Ms]k:S@sjTls8Zn=ZqAt?l==k)P8Cih?sPE`N0.HhSMb-QBBd=r-\'aZ[DP\DbX's>&0:I+nB=D7aBtd2ZrX!
%c5(\@o(ePT<-]>%Zi0(:m`N^3LsRNmS_pg<?[4CK5.\RD!9ph8c#\6m>o1/t8id<QN@M:h(jOE'][?U.g6aXJVNV4/Dq$@KOrSVK
%1/7%%R.X))TimGTo#UAaFOCD1%F;N"fJ#mN4sVN=@M<&3"QY\h#+V$W.4pc5cU'%PJ!>_HRHTZ/k<kZ;3lD=4[W-*RI$SqM2CVV^
%%t,LeL=QTZfleQ\c58^i>[hps&),ef;6R?19IC:I'\e=D3]]ec=W5s>=_L1Lrl#R=Bd%t&l?&,nH'A$7C_jE>+*eT'rN<f8K*Ybd
%i%]@DUogn-\^RuDR.J$Lq(,O>pI3hZVQmh^mX7uQLh<o3X8V':j#V[Cc_`r*jB2k6-EjogIe(-4D#PKBa"t<&md!]9CAqku:W6J.
%LFaNB>9;(f6>W)igud'h5+^2CSuZ[tY:-^6kCXiQL`<jK/lq'&6"^:3i)=O+?`a+$a3UZf76Z+U[oUEJC:YmcI/$WcR?<Zt0A]po
%H(jE)XNE%'jK<=s4KNW?[8r;aaRY2EGVs.*fig4.SsRrAZVI$6nA@OrE:npHMN]<d/gG-mAQ,<[i1[`6m%8*")`<`rGeA9l2CSh.
%WaM;A_>n*2[-6VG]CI#'?Fg-[=k$<_/:*dbk[AIOY;FYY((AL*<oj)<V1l41&kmtY]D<X:5&%V?eoVM-^;b$<;;AW1mmeGQ9smr$
%?!]qE'iWA60$6uC:_f=JiptN4ScM\n*fA/,U!pALKirD0k@/2,ilYVlQb?^/,&]6`LKSV>1)kL<b@gXR9MteLU3M(5>WupUf+jWB
%.dGl8($/)/PgtjKn>?+'EiNZk6bD!\ao9*s/<Pd(D9q0t%lQOiZ^dd(F*(lO:<_+B`<R-K#b.P%`S).t-fUHU7*/LiN9Gr=ms9)M
%H'me`]=[:F(/OtbU(aLo$0&>UK\[?5R/Gh$amYMY"LO^f-d2Z]-Q9[;]R+b;DN7JF%FL$ZKq1^]9Quie6p!7e0cJ)ZO&!V+-:i%]
%'>W5#@05=V-b.SA-ZEu1:G?FIi<d3`^[$6--bl#<M9s9jiZ+T#O8),u'VC2&Ht&+3giIj0Y7d_d?(5:<c/L*R=>e>_\WIKZV]UtJ
%D#)HD2G$9RcYp'FHn%^`]tXjI-0*V<q9WlOO"7?!Dcoeg*lp?$5KWW)8)iE\)_.:c;^U-Uo[Mg/b_p8]LBT1haW]<ga^j.s)K@$U
%)qW*d.9,B=ht[bZY4%)[%N'en(+eh'=M3uI07p+`'1.kd7E!`YITepmD2F$i;84;.NQA/H<pEC[)_8eqVcA"OXJ.\UI(gZDpmJ!2
%a8U>1SoRLpP7tW__CnsNLbH8enf++E;81b-mJ>n1G&GE0cYC7m%Tc6HA9SmP%1`4W!KI#l+Z..o?Ge-nCF/;IK0J1A0Fh;.[]h^%
%Rb'a*jl7dAGBksUBZE41?adPbmWO+=HABbG[>c(7#eisn3gI#8i8c-Z)9LGk@KseY!Y,.1"Qqi#lI?2lSnFN3^O?*?b;PP9o9\o0
%ftQ2rJ_"33,p";#>eWK.fp:l<;<\iS5FV%LU%;tXH+12-I!_nLEGeJSDmDmQMY>n!!0SGgi]cIQP`"?$e]"T;co<QHk\BTu:rm)X
%'_Z>5%QE/S='ACKUl3j=nQF6Y=h-5B"/gWLC./NnJN*3262AI%>71lckY!X[TX%"m,.\Rif2Z6cf!-[OfV(EO3B"ii/o'&4g-&Fn
%S/5`p`1E8j-u(^ldB%Z:Vn&g^oAqIe<u;cr:6^20pY/e0rj4/1ma\fLL><^f;Uaj-XUJC:L&4MmaM7'=>+H:X-$`>1FIB._o*O!E
%Zo5UoS_f9GT:.1u+@kl3Tn,D?W1GQ88u2J<W19T>o&8q5<CNd`,+"X';cM.jla?#Rg-'KWAIb@UJF^qkki*[4JeHPp#`@CH-:LbZ
%Q3^*l.>!^@78VEu#YNeb60U9r:sp@.-uo.o<VWd1'L.PLpe;?bp`:Y.BhJRTD2=iU2U8=P2JnJIW1SAU6<P7I'lFGRe<RMolrjfD
%D2t<WP0kt@TrbH1d_]3t-tu<_-#JO5[$tMQBla^%D[<%Q=IB%@XbKY]fc7&pY!l18Q3^*p.>"i\8k$6MJs$=Nmla*9U>8`);>e5)
%qMmBJ[bXIjN9`Pt@`'mMU*Di3TZ"2tJ0GAB21T-o"An[$2@!(FL&fA(f#)HJCb5%2.iX_B_f"/#Rfb(D##GNc*GIk@-//5+THoM,
%\1KZk'$&p3+catCiKKp3$q\t((-MsMH=C,$4h:/WO/K]k674Ha)*/)oi<qa$c(PeXcFH7),W-n33%F8#_q<)(ZD/qTP@8#m]?,i_
%DXl\oRs__[P7P.W*'6_<F>>E68=MpnBc&lK'R#-=Z'/#?T]:TN\B9g=i:?RSMn#Id@nZSa.Q_D/`;@%'`n^:Aou`:HY?e-oBFcn<
%dVT;\FIN=ZBiEq8D$c^HfB"E"dVT>]KONqP:ta7IaN:*\j1Xh@M4DKnOV<^(X[GqNk/`B!CZEKmD,u=$0((`?,$>A2DmsYA@Fu41
%8;"]LdLZVWZeGO/-#O@g7!Z7c*`%0]KMCZ.@G#*XWSlUl->t@#JB+B8K2JFTO@)*e>4hB*Q?(m.2Yj#:>OpGdk8UbkEF6TZD5p`L
%CYpuEhIKl6FS7?p8/"g$CPV9>[,JPX/_SDuIb*9.42.Q)h!pce9'4&*-N%a"@N;_DL3Og_%HX7RD=WH&@MVjX)Iff'_2o(soBn1t
%]V3%!>M@gk`*;[HpY`[OLN_ajDX=D$fo!E]_onG%jDi`=go\9LU:>2%]m:eC]jf@62Ym-uRmqJm6,(kSR5[s+mlV3^CHiAKjNFTn
%X#Zf!cKCej\Mr\DchZ@W24qLOOfW1@lP[fj7^Cn/OdqQ8B-cf\c/kOZXQNjVpQE]_3K[NdLBI/7THs(8eN3grT/XYM##1Gr<7@N3
%)V9AW`YS?0i1rQXp7!9K5CbfZKhmU_Xc]r2h-JHNDVRe>Y1^Nhhhl9,WWcgg;O)tc0kH8S"1ReO5Y5\:1>j$RZ%PSUm/K&,4rItk
%U74P5)9Qnh%^IP[]bH"Rn8)*"/#6Q2ZuP"0)LbYJ4fp_tOVLS@c6mqgm&1Ahl`Rp:.+AdVF$Hf!j4UFli:7TJ<DHF%EW4J3n!01/
%<7g:LI82s'LRt.T$!G&\=\b'6VT;tNpd#au;djKuDZO91^OlmJ0N^7P\OR#N\OBXp<46L[iN"I[Fec4D.l**We0/an)`NA/3sIJ1
%)$56hUn!a7P@Yp5^0Orr--nd4#J./9j//mEq(aPCrsr^YFZ.GjQE_=Nf*6J)e<!H:B+!cq!)Q,o2hZ&sI_o(?4KD4nUW1BOAg#=?
%WiJ*O]c9OF.QAR!..Aiu/Ep43!C_6:%+iK6F0n&g+nNec)]d!h+#&r2Y8t"(pM7Y`S.<SQkS2T"Ej6f1DNUVPCRuX`T(#a*At5_-
%RlV!;229Dt9k0\-%Ep=gXA!fi7b8J/.1*YEN.e8R0P+..\NL97$c]VP1O<i;ri!5P<?1gCH8X34^9%#\p?n?bYU-el_IDP-el:_;
%H'jBXg.ik;&4^XYC;Y5%PAuYCEV6ZK5sn2<Y2dH0#]VOf6eQE@L[mM$BJg_d@5L\`NM`fUN=%e-'mT+Q^KuYfqfQHZKnBJ?_e;dN
%6KJSa\#?f:$2(kKU/:4hr.b[;BY^bE1O'5$CD7+X1u5%lngui>[OY4R>MD6RV*.u^afX11oQJLJ7'&_TIT2TiQnAe^^U/.f<#)g:
%-#74rK5uMS9:n^BX<;mOV(dIGM_2fD7A$WTl:/$LL>Eh-DPZmWm"lpe<Y$gg8aWCKe^G;[eEBlL(2c'eo-IO><3I98?eQ:+il3aV
%k[O8XDT8c^gTHu.]hbr!eN&"Y%)!i7T2fDtMn*!WRkZLP6)<@tg46eFm:?B.q6K9P*I$StW]7l'?FHH:h=<B,S#R)>YEa[pUF.qM
%SJEMP2$\C\7BV/>5j.\fb8*lQ@5d%q$JU[=,uaM)",eNYauX:fePk'm^UQb9gVI>="UlPU>ItcU>XBORB>c^,d%s39#]M0AQEA\5
%$Va\@&.;!W?U^g'"/@6Ifs%nCYns-b.^$kE7^rugk3k*Xi!"=Z[se06>://kXtEhPKLe\1&_tHY&C>=>+=gIRGu]MC5]='\X=0Mc
%G&dNg7ApD$:r:/4*B]:Z%@t\MeU_Q/"[dS6gd.uha#8mnW=I:Z+BQ%kC8('7>7AJRhZQ6^5b4OF5"ZbPEXF%D,+kcFoPD3oGo*iZ
%CX>Q&Pe*u3lVq:6NhNT(b?_MuP'F(>b!I?8<bk&Mp;QOMWp1JZ")IAbi$N+BVl^&ah8Z_dD4Sqh4A8&?m5,f61k+I]"-*FBJ=R>^
%QI0>dB*M\\gVFqkaJ3U-@l0FX,?q(gqnYe'fr>@RC#VGnFMY=QBs2JYec,7-AM=bqar1TlVp'nC*/0okj;*,^"\\#+^[4J'&rQr(
%.76A#*;6+5l1PO:n/*n`hJ9gQA'5JZr<5i8NkeqA"<OLPBkraE/L=&brNS(I?t7=,iT(:"$g([Ir*.8Tn.kQ>h`']PQM8*HbdTT,
%?qqB&dfeeiJXr\FCaiWCAX\,P@%jC@PTlh[%+5:JKacV3\"j>+;S(?d9:,)Ef&MU*eMI::j6s0WH<]?+cfr<HQT.6BnYT]MZ/2U7
%Yk:F1=e=4*V4B'c1I.o'X(UG';D$EO&c\>h!i4A12R)8]e.N\:)g0mVG$4LS(`:iOgtM>hPa5HL@or04IV72)cWD@D!!AUF1,Z$@
%p#pZj<]8#l43qM6JSF3o?HZ3iLZ*%FDL$8NqJr`/RHm][_:pfuUWiBZ#NTZ8kB`B'*bDKER2o#.UM4m.c&S[3*p(f"UYLH`e'r)b
%L@YSU)"QmY1k\l!,gRU:D's'U$]QG^+,"Kiap"3J3Yp2"[$OB$>PS?kdWK(nb!NBKX3@u*'sgom.XTZ*!C$,M;s7/:@`NKnQp/5.
%U,Tka(2?S=EAX\^9(FCsj0g3c)9ls@e(D609@.fO=\mW@Y-sSN@.1Zn'U^n2)N:r["U>9seaeQ=PaALM.Pr7cGZoiBAVb7pATpC2
%YGgg5iQtnT_\oD<]I*7Mk'e"DoMA!jf?2H_"Y;&4$[egU*mVC)!Qq"Di?l!\4JcW]g9*cC%EbJq.VdMFTR"6]0]3`nfdb'KZ?&>p
%nUr@La`X';gPOI2q@)DQThpsKYgQ.eqCj</,3bI$,cCnKYk4onP#r?p`J^b<`dl\8<`W7-40DLl6:uI#G.jc,-0/Renr)'ZQ+Q6Q
%hIpieQlnqSk^cGq@EfTEK!@I`(g2f7Vd-:R]4(l?euKaQf^7s,BsBN1akW^hYg=?,/OhC>.A'b2L=9#BD$&jKd*!1RX)$*d2EQns
%L=W5bVObK&OC#Dq>Nqpj:J7]:mh4Z9o-*ME_a-O10oIdNK.5AKP$;eM'k^Dn81EGcs#JWsX1AHl=L"nW"_mN!aP]/kTr\t,/eW+/
%STfP23D!*@aGm:YOJ!Cm'nl\sEJGZdgpW[.gBnbk@'PTj-Cu-,U$j'tn/^/M#cp"O+RWq85o\S209o#uA5O#j'j?jm[<XaE0?Mbi
%)GLsj<aT-KGo&<>EfZH21%MTV"Wh$O-.\C!g[+1:kVWTl/FOYcVae+kMI/SI13b'Hf$XiUCjjfEh-6p)VDW]_Tip^kn)J_Z`9PJA
%4+e!FSf@c"I._H%ol,rND%JR)%d1LQXYVFX4:9`,55'G^E]E5FRb(hP6`J+I.t$,%e)NGmJ?>1?E,<%A9Bpgci2.RAGoc\pqc)Hn
%4<&Md7#AcrdR4\E[T%I=8i'jZ?Q-pBCmf^2`)N)gn_=/;;8i5Hh4<YPcF0\e[-WN2gJW%snqj8K#$IL#DgKGHG+36c4;aa*:p&@"
%U&luA*3t@CiKSIP/#oh[Fhb!H[(+W.iD^o=i?AU=I+g$V`V,J5hMAMI0+HDW$,-SH`J$!*9FqB\7FbMFSk`\^B^4jClfl@Y:TGtR
%S5(bb"a.HG64qcV;)t3DLU2"LVj#G6,K]MLDpm)@ZeX'Z.@%8[<5Kt6@'K<GK(;K5m>WK&j`kf7-\79\`8n>;85eL>hIs_M;m'A+
%%9KI1P!LHq=:as"s(:A$?V`&2b84XZE]OeofC]e_:+(:a\l([f<+u9o<**uuS[)R=Ro&6.0CU(uOa3f\^=&D>?-q.l4Br>D;GI[h
%`ju(r1Y.n5gI@0_:erG@Fg\MY7AdhTRF'XWUQ&TD+U^l_$ZKY@l'1S2R,VMQ1l[r0_)*ppYS9b#GiqH9aY0PjbbnC>Mp9f$aeQ5@
%AG);<.@X>7?#3aPVaFg62n1ATojQ(?*H-j/hH[bJM]DM[ZX`.akXU$p3Ueh;a3<3kF*>ct*A_?Kbh4^lG0HHs1M=bPfeIPk9Zh_N
%c0I(+;Y7$\B.NNf!1%_rI*g.j*p\3&\JU7Fg9aT.6u^t[X_[QE8.@>MPA$Z`dY?pi[Lb?n_/F,Xpm1W,:?%k/htu.p*6h8]Ps8K8
%O$HMGm;.ssg6n/aB9%^(kL73/#%imM;6t==r1"EbkJTUaSG7[0WR$DCGb<bn\0366pHBTa:4*mrO,`S*Hd.CCml`&4iZQm_\Un_@
%M;NoYY`][WQqd>`PM`tq.t5Zg`<k'0-e*l$_nA.*hD$V=D,-!2pn7JjpjirjB5-l<-e.NtnS)`A]Ql_UnMS;`mEQid_$AN(bm2d3
%`LBRcW6)5KpH`YAm>;E(L;S+"m9<V=].#8ES[7>=XSCe0g'(,:BTc-*LXf7?$#0\gD\/[@klQHP'LCC1:DJREfM:P%c!+j(Vu@_n
%T+65rgZ2l8g@jCbG9k!F\!+3iB1k/V:i>mpOYkrN`[7jrKCS;C?N3KXh9gFaQ&iX8X/.G7[/\nB6_Dpfq'r^ffIS&HSnEJc=olUg
%gSno@27Fsp$?SID9h6QlDd>!hCE*GlY-gJ</eE8/8PP,<pLghg\:OEX05c^c$tJas_PM.3O.'F$4kfK0'E+[)b`(V2F(39<]CoC4
%gFQ]GB#*+#S5^^q#^584^qLMA<kC99?!@1XBd^L:nko9'hXB:ci6-J7kgmb]pX?EcmFloSH+lT4h6t^tI`<Q%o:Z,$aKdL5D\L9B
%fWlp3]SU(.I-l8=XHq82(bF7$(q@.^K%hhpf-j3K[(g%U83KdO?*6m=iZ\'`aZ6Ul^:GaP[f<EQ*VZRH*$/7H%u.Sudg%X^Z6bt4
%V6sI=Z1Y^4;rF*;aDmJIb,2iOHsmC@/R/;RFs/%'K*.mfP0nS&A>!SaD9KiMQ3/_"B)YSApioEKi'7Y*__NL%1P8+_>u0;h<#WQg
%nuPG(PJ*(jNB]S,Xf/ql8+q\<p;U31N%#l-aiF9+h7NTF[,U+h:bQLa?'dY&icR"o1&l[(SOdGi\1Z\0SQk3Va%dGASLP_?o2bZ:
%-[ODr*Nu#H_u+aW$0f3cO*Y&kLblb3=-.QtFW5!&\uJrR[_Z/E7=,X5h6=>`D+Cd)ja:rI`jI8G?t48a(`@,[EU3;:ncGDMUD&8E
%0n(5e1aQ;qDXE?S@FV<)e:+U+@m)C!87T8H>e%15mF(8I8NY=:QB0`A^UhIC)nfGBMK\C;^0;U[Bug(pnko;_X'Ia&]4S1s:?`Zt
%R^/EullihW(1/Vi_aO=SpPd\CGhilGAP0"q,\s/S<ijGJ\,,A!m>ps._`YX&<hu8!B[,6dgF-@^E#W"'Y)LV&r&+:X=P*;YX8pp<
%ApktB(2n#;A'Fs[r]\C$k>DtQp0XB*\QCK`ce2)M%c4/;3T`QHr7a6os6*tlm>QZVj5A0AGV]idP8OUD`kd!q&cW^RDiXV]!tO1D
%FE_Ehp.",qn'Y[Nf:3i:cqE_ob$s/L6,s>dU-USTc)%rL27LM)!3MKH53"N1![V^<%3ZL*EQ#JC2&b)F)^$g"]M#@r=7TLdGCJ?:
%*/Mph'/["8H[EfBZj.!RT2lT'`%g<U=pLY-=DqqG1:ij.d$9/u,e0a953'4@.\(FR)T/qRe0"i:*1*ppYRT^Pr,kn`l3g&i:^A"/
%c:Tte,O8)Ud&5EZ-)`2bP>?X.'O<n`SJ^9ci-7cu8hX=J4I1>,-ld_?0*b.]2[)mQ90iY?fiF<^XUa&:L?moC'CrB&X=pbNT++=d
%,-YEr/j)E794SN5@;E>8RuJ&E>g`d4Xl8:H%HAF#?pA"(8`XiV%-]lq^9"+mCgGeqO#PgsALTp_q6oeSl?oFS:Iq.>2K:9Q=\?@I
%lUP?#EjGqb$Dgn!&5^PE",j;_IIP_Va\b=oi"bVdF`ori$R^-Z8l!R)iTp$&O-/.>75k.N.Yk,WoP&!H^b=daN4?g'6+a=cKLs*:
%M*N"ZW(`p=F-3q,B_*S!H9%U9<nUO0no/IsgLR-oDIUf0;d+n`V-1ROg`s=ul*$k2FQ2rEf5]_&'qhm1I'Dp".e!s*@82bS5SR/#
%1c%m^=T=gR?I0IY1(G+B<>"7"89KoHWen!CRXu8V1iY_5]\L2I+cN^Cf*i2r<=XZ2QW<I-d19<H7T#nkWeimc>Kc`V"ht_g@2oS/
%^dGH&\HSXX313OJ*ipWo%u$c3lfFdY(+<!;WZBCYB[TgkFjQ^\hK5M^.hN\J.0OPlS2<gl9rKEYYdf@<*A_2"6/BuAAU]!o;&B\]
%?TjK\&-X-`E1<kfnkHSYO1D9N%*6_p3\j\UjZ?P9DH;u6i)g`i.osXLTSup*j,'pZ+F$Jo5FQGkN'j1*/(aUi6'LgYDTOnB1e3H.
%d@t8T^WsZi3ES*CMrnEpie%RRKhV`F-13Jp(<%lAU6:7S(r7Daht:ASo.U?Bm9pWLa3DA)/J,>a:!gT8^$glPRo%VL.pcaFa,@fh
%!`@tSmPnMul$u^m7IATLd:aNg4^Jgqgh$rT(ZRE`[;)P8n)HiABe7eVRt&Tgd8Wuc>W[`Xh>P%-PMaQ.;<UY@iuBbaO+:*_'JPDc
%^h=2p4aFdCUKX"o&hp?VQ%0IZc$!*G_e9T86E:!a*3NZq%2q-g<n#s`-")tp3cN^5q:H<6)T6jd.)'2LcTaX+O8uun*3;0WdnV8J
%GC3&)$l9)Z*\R$&jTg9X2DG!/k$U#SRqHl'(WBoX1;?akU&7DVQR87#MUC;hgTcakbOZ%q_q$?5"^ICR3XG?V%n+*dP94](Vr\jk
%A>)<M8%-*t1)mE'PX,YV'>$k8O`s,nXd1.NI9SA&M:34jhQhk9?@J6`pTBJ/,WGaVFX,1V5PD;@,t7uITl%FpSuaDOaE+rg=cYP7
%cM5n4O!h;-(Ou=d55n_Z[,U,LneE62I)'W"N3L79a)>`F="f>]<iJ`,1[DH1l_!cb=Bd3O/9%fp!99dng:D^JU(r+FjH%EL0S6U)
%-11kQ+&c=iH6EgI<4>XV&,B#$q?`?j;Ni##?0S&e\^3)1[![L_FM>Sq1O`/7Dk!DneJ'M,HeBi#D]c_D*.M1X__:CU1%;;!XahUr
%/)RroC9q,jG"YaFnFn$=]"7h%qX!c"J+o-S.]9b%pb*_=o[PJk>EXL5k57sQn#q6=mlYh:J+UkGc`_e&/rm-m]RIEdo&TB&VrdU2
%lg*`WlTa8"Nskd8V^LZjB3C/-H?j\6O8^a*o$`:s]Xg+,I#C)+VsDZ@AY7]orus,V\,Bk8E*0c92Y&O#Edi%MlOWu<p#bo.g-84L
%Y@$/_o0IR9[QH.J-uE4<I@:-3EqH+[hjiSoj`RtYrTPC?7lh*)lGf%WNYD9'Ie1"%ZXpYN5)-Dc^LM`gJ+EX<RGPT)Cu4^\DY<ZT
%s(D,tk5Dr?@HI1,,*#uJq4EFfIGjFr/`b_r&bsY3s7_Tqhn7-=^XO!+q1!UZKQgS,Sbu\U9>8%6m<na+j,ZD&J!X6O?Li"o<'E<+
%5<8\1F^OrK?f(^#n`a-.,_Zm1o^dJ,r3EDbIem$7-%@p:chj9JIerWrluF81M"m$OeEA]<gAJ;GDXc)`s6TOAp"AU!<EGO5hjiM=
%HTiMgMbh)J\\?bjc7,BsqTcQG1cOj\kFW/)jE#S4ki=;\kYGbNo>Aa,^7T4D+,`qpG'7rPJ$s1ir9N\;DQ^0lQ5LPY"F6`EDSBDJ
%?KIsG3W?G8'0[M?QTqHDn`aEP!r@*9,!S9H%ZB(fp??Ph/O!BdU7_0-=Q"MTj!A%`?S*q'^]+(MrL^f0ju;Dpo=$7L>::Tf`EDUn
%7pg^"puHoh\NZe%0`F!\OF2A1D=FN`LG$b4"5iYZiI[9g@Vap8Joe@&*=/#6UW'((#q9`h_tTdA$W]2/oJ7LteghnZUQ1=0^W<2I
%fcmW6:Bho\0--$35!/4,o`+Tbo98(mYG5MV,I9;,/&ST&R**b,rgAbt?]SFkCr&QJ(iQ%sI;jS*Ir``hH0a2^PV)NK#+!f=aT7#+
%mT\BDnSdlQDPjmdjj#r+bEB4@fJK7H:@\WDG[TL,`o;H3QWLJ#&R>@RgX]m8[D4l+aN_&>YKHG%(GB)JDdX6m>Z[$eG(0FFGClm]
%UZF_,S(6MsKjGk8I0tAT"W-?7([NZOE,Ah?="dn;r)%*n)reUcDdM7.$d;,W]c@:M6'$Ud0rjc9[r%mf/0Ld9<pfX\g6)$f]D&&R
%mn%A)BDnG$=,4fQ?SDHWbOY5ikKd^ZU>^Q8hCTl\O(&F4:M_ubM=\\P54cl3S1cj*#GYM<A[a1bSJT:u0+@HmElgJ7FV,tps'C]$
%K:Loo^*i\=S,NpXebM.Rro`kE%6d8\O\KY2HG'(<jN"=%+9),mrq\_5cV<L2bOQZl(Ve.SF5K(19]!$cNVp%bPJ*aZ56os2^D=$0
%Bm]kT-2d`HU1$r5fAUW$Ola8:lFJmL:57[T`J=Yk:%?mA(l8c">N+.\EHZU/cgKfas*8[k^Ii9bdN8&*r.1EGWUUF'Z8!9Ys)Mlu
%72?U]q*Nq-'Tf)!TSlNjlfHrWq;OU8AFJrMD-QH[bE,&@.oo]DXLI?52m-ZH;O:Ho'-C`gIUG@l#agD##J4oCISY?qZPoJ7YD;=p
%0uhQ=f+3:<'K(Z'm#?qAWfqni5<'!s^IVsLllG_KoagG-5KIhac0V8*]l'IWALm95`UWbnjl3<e9TFODqRjlGS+Br!BE!DShQs2L
%,tSf"5B"L<#D<lpd8e_&h$jXO`I%'9!sCq'11SUbqqL!b<@nN,G%^NoDVU(.cTkAd.t)#0Mnm<T&M-j<G\pRCT(J9YIN:lh!\Jih
%'@Tmq@1%(CmQ\m?qnIpufCp77.?^9#TqJkR^kq_ef1=lZ<Q1c2=#U[DoGkp'BMne&d,JaShutUC'cI7E>Y?DgF&Wf6V"/'k%6iSI
%-2>i\M[q?uoFc`E$pkX>KB(B9/YPQ*+X"kt^VP\lo_t1b`"+a$9%"4PM[oj:".c?ckD2qZ])8bk5SbOB58,(;,fBGm&W;4D1^RD_
%3;<cS@p.&=qdTd"2[&fW,c?,XLfF=Knt>t0&OPujPq;q:;NTc8UP41,/H>kPLQTH'$RP^T<DrbCXo,BPQi'(Wn2%QC$K/m0]mDR!
%&0BA.>P5]tB\`EW-p/5WYj(c6qt=A$mQ]O6Yk9"5+J$)2H_?jAq*nrR*nnpVg@gHtC:@F/NU3#2bfZie#&bU@`!Hh7Ij"H>s6uBT
%fIq`/WTgae>.88Hr23jLi#?h;Ocs4Pn/Dc[U*",m\<\!mXB)&E*%_4I/s;q%n34LES4'J4WqAD:\7n!;WP+rhkYTa9G.$%[>'_B3
%68ieZLG+eC]ghCqs![T1#D")N)N<RhPPr(jJbBqFLtYL/31A=ig/3=+RXt/o`Q)_g>E$-!*JB$K#A,s0B:TI-+-=cen,aF%,+cg+
%eK+RhE9IWac`'*Y7nnh:NNAsU30HkD?6>.:IZYG//q(u#8B9mP.@gGjI@)M&pYG(n3-Ke)M[lF$(r)]RQBD7WXRs:gqI)q6$R)*)
%%k'D?C_`Fs<]W>c^t)DW1Gg4tQaClG(?X(D"+7Gkci=8(n;k")6I>/t6fK$Kq43aj"r=2n^`sp[n0LmF%i4Z0iSXm6?Sb$00]UW.
%FtaHYLC;D']Wf.9r$7Ec&X3tqBEgi%R:,eS+tCHB1mg\t.70ZlT6LqBSnjZ;4XTj;+>3/'M''bNF;!"B*X`O6%iNi#Vjb^U<0#-p
%NEfVE3'`bhKb;kF%dl3mj_6Tfi*%Y;_%>he"B$567*/:-BOqK>1*Xu1*h<K,aeX<ncUQW2I)TW3Sn1PU$BW<WGh1K25$gU`A'sRH
%4:0h.M%KDS"K#FZecr&1d?QJd*S2$B?9(24kF0>f:S<J4`:mG5?Csr>/S.KH/'9d7n8S_\UsVZ"ZHYq_NV4g>^fUUgMHDgu%>-d-
%dU3W]E6_ho8q1*97NN>:h\U/)rfTX@#ggS7'_m'W&\K1D_M7i1+I>Y:f-Y($aTA(U9'9:#*4KjD]#XmS[ckMIJB;4[6-r+daF)n,
%WXt6ZQ9*/'9Rnb="H]jFBLQkC,s#DF4:NOIZqo;VNl4"!TYT`tOA=aW6P<%:/JUdb>bOhn`c))9"\KH@"k';VcZ>Md4HJ)0"scOn
%&0s#Ldd>4SN0'0TZ#&AAfA_RW@"J9OF[MKp&W0MJIW0sLWJ0dLlX37M=m>,>=[a=n><+:j50#+2hi_#6.UQkUG7J;^6T,*.pdZ!K
%0n[<nel'$PE'Ui3dPX1L":GDCa.rqq"ih$Re.#lNf,;[IC!de.$I[:Fn6JXG(IqWI*%;A``>F$2D])&k6d`_@d8uCWgbtJ4$:@#&
%cnj+m[reB4r!@l:laMsH3[!Q%5[5.N,fEtJ<SEN>'MQ><3"Uk0-rW7O(Y;o4[Ko:'M9g,b'Dhke'r[2W(-FKY/jAgg&-A)>Ll`f<
%B2sI#;KEro:sIrb#6P)*g@9GNQQD"7b'/Yen7"7l6q*9cS<.8)DT3-)`PgH`)o/Ic/AU5[@F2LudWObrm/d#)"aaN8GZq$I!"keL
%53g<p,s7M_+$QYn_U'#u^'/'<BnHYW,nOsEip:i!NQa"GCB_".Ya/O?k4u0S)$1o`Z>a2-Je$Zf04d#L;*@:hMfdR$[)@03q8U&4
%Gbc-A?&+S7h8A[`6puQobKuZ%GBQNhA-!++-u`QXdCG=,QC1&I0o2?uAi$H\EsAlh+t=GMI2':Wn.t7e7:.N09_a3X8-d!XRnDB<
%$d3W%Mek1'iE25<[]F(]O^u#KNj'6^@+]spK,ebk1eaTFWK%rW8$ZO4Jucs.ohWJRg1b6QrE^E_[Fp\UG-UR>rGfVsc$?6PFYt=W
%r1EOk=='\4)pgE>e"L4'5NsWa8[:F*&.>"uZf1NM5?LL6LF836##qu?>t*PP'b!I(:^Rt#?@X]QO&2@cr+A_W<;R`Z#-T\"Z/h"L
%.<pCgM249#W7(<=*@<to]&*HpL@pBBd(&cS,['@.7/S*^(c%:;#9^t#i!Br!h<;Ts`Cc1Tj1b[[R24RF8P\245<*%!Z\l2LHiJ^=
%>ET7::Bgabo,!2rZ3>cl=K!`G#o6ql\]?n\d=9&k_,KgQNMAkh!atQ&`<knsCXufhRcN98G"eN.)!QLa0)u,='MO/])^>(\ne5@M
%,bH4UcVf\]P(lGO$NKhuPJ@W!#!)Gu+6u-C3LQ'>m>Bd#&1MCMg_;#Ng%V/TZ3,qOG?q#FfuYp4i"/@?&-%.?P*$pHi^q&&rK@FC
%9a2Zk\\9`M%kpVuZNdo,5=mV<E!o+'7+222Ns(Cf<^_0=Vk;ePP!)^<k$h(R/\]c1Ekje'?]#StLEFJSiHU(KhKb./o+XQ`O7aLW
%B^>fp1]?N4'Z9`fmhBWj3o-K+f-fYkT3dKPbJsjIL9LK&N(*8As2k##L;/\!6iDL:Vqc/Ks#./gIA#9fT:0%"^XK*g8sOkXl#g`P
%qGXZN6)d%re8;W":bVg#>>Xs+kX-lJDn%ak<%YQ%:[nsVj-aJ+ZR(7l>dFk!27g>-[n(EI=o^cG3#!;X_"l:LDR37>im3N-dslkL
%2k[ulZ.j-I9!AX!T&2ZgV"ih.bWfg-JTg.Q>.r@e2Vu-*B`F%kFScRh:/<c/GCM3Q4,X1Ub(FR2>/VhXBoIQ*I*iL@X6d0K,IZ_#
%s!C^1C5iR:>Pn\(JC:3-GF*:>$Zlh9TDc7OCno\YC?\))XZ+EVe]P'RBq,)XM;l:1#k:&%IWs@#HlDWYSFN)trP*gVIpONSr:Ten
%!SdU#&390bh!9'OYQ"gdmpA\]$_8L(hGAuZT_UaIrcdi@/Eku.4o`,r\b#="IfoQH+!AZepq68!R^36S/h&qJH<fm]D?&WtB5V)1
%rkH,u=&R8\rGc%kX&\@mkg*Hh/cRE2k:(dEro`*#<R"1H5B"k+rO:FO#ZZEN'(t8ps8G)Wo^B(=>AEflIS.j;=;pCBn$Qrhf`#W4
%+$9GU(_n;JO.*b*\XL@g^OHcp!gMNU`B%>+h-pQ3Xae2s_Z019`[W<Ingg.JB[,A:G,gg2mrd]qg1f,bVHPDe.(peB8/.9hl`&L1
%43u_tUY6dBDccIlrd\o;]`&B.NGrF+g3FSs/9\VTG3og?GT)siFA^=[Qb?_7ea*4a8\"`f4a^AiG-USi.m@!(p7&0jbAtlUT4)6,
%0%Og/_6qY"Pu]JNQ')05S+X2j7=@8"VT#@ZFrRPmV=M@ZCU*KZ5DAaL8@mDi7_?%kdiNt\`9o/r.CQjbB!GVZJ[q9;&M_^oSEq>e
%QMNGt8QQ+'\!82!S6Qt=1:D!6>B%lYg2!lu*'jOb"8:=q^23L_4uc/-Sg-*PnRAs7gSe"`k+/<fiO\DcUXL[o1R7t@>GtP0Tmuud
%cNEt<@L4]IB)/80`;%u&7We8Ih?S$LL'AuJC&bS%Ea8QiG9gOpFc3)"^"2S#/d2peG%aOufja!F`Qh>1B+_adlIBVQe]6p)4G[=j
%=fXJS`VO#NeZ3oj-T<]4lam05240f;m:Im)Xqn@WG.TCDL*o!![Kbn3ro5/*+CG./6X"Bsn*U2PN%dP+F3lE]1.J^QJ$%9d:lg]^
%8&/qD`:?[0o%DFTObZIa'cYu_#`MjOI)Z-S<9[8f^0^.-d^P_-@N@m@LDkQCGb`h/QtP6r%CI5Sq_<Df3;"ZbFU$D)A;20S)<h3:
%=OE'Le4ht+deG-%;<ZQrQ8249D*1trlR1ceg#*l#=19"I6e`[35)e!kd[a/2oZeHtC&[SW5!=;B(b'F&XZu;0T##!F8_VGf(&A!0
%!-&bnjUW]h]0>>&X[O>RXB5E3;WSMag\IO9bHb:BYLRe(o+#-U!1[#QJq-)1o4NdHaO2*UCn:PaL_b")rOV?>@st<1I]!L+*!)2:
%AhPMJ)\o+d^K$$DCE$&%h<&#h3Bh2qTt/*4IfJWX:WD4>1Y\PQ]u*O$aq)$=NSN3Rm"<>M)pdNkB?egG%NYMo<XXoVSY\*S-J\G6
%Mi-R+Nk"hTUn%1[hD;ffgh5\6I\8U#p?,5>&Md]J69*D,p5+$if&3aNG-E[u_t*Tt5-/[ADJo%$jMQk:#5l!%T.&Tc;"K,(AcB5C
%8sX5Jf-3!50KDQY37tt<q"g.)U&&Fd4=&TWZ3pBMp92I/9BSZhn]>g+L[TAc5fKP#3ZhL7W*^q*Gq)jpmHVL_IiQ.c`.NY2SY9nL
%B__<;1i0siFU,kaVsE^Mp(63?ce><]dM#:POZqS&MTY/YUi3]gkYe.R04I-"^uL1PNC`JCbL1`8qeT<kdZ;TKM*<V;rQV:n[QSTq
%iqJ*_2"4;AW+3F;f0d"Pi\mDLq*UpHXOLU4/=iD60KA3]R-6psJ\GhtV%;Qc^72^hXs?k(eVgQj?[iut"Y-4sG\I)"5T?u'99*BH
%]2F&BfeaQ)lg''3XZ79k;#>P0jn@$m6ob3l;NQ62I),-=KC0*J2UB+*))4N$Z?uM@M<Y0(:XP=li/2%VKYaRBCpfHo0glO:mHo7m
%;_U$L`:g+'$JJIhC?E,s67Y6]DfOFoekNJOlW[i:nS56mA:n.^6d%Z7bKl6Gdqb'Wru9O&IS1=#(`eXrYjq3Ob@[eRrOn^<f[!XK
%;m6-jY2l+=MX>>9CA@rdI,/V#%&S*r#N3MB8Eh3@\MiZDG5M`6J;s`j.&>$_IXamUWr/@J2!M]pT6E6DmKYQ=*M+3;`oH50>Aeo1
%^@cY)1?V87*rKkb.i6"irD$L*dpY]8WT7a$d2sc[^UHe=-&C+&;mZFX228i,1'<"%B-X)Slh!f?n)OIa\Q8U$g%]`Km7P"^;(6pB
%#*n%(r.5R#Lo7sXq-*PY)oQQ@i9Yq3'b@e-rcr$l2_]2MD)cQ:/^74rhY^-T":FHFU'.X%=3268rLPppr2s!\[E$;FnUDnZYU.br
%$2]36-FGCJfWtNOgZB%CQ^F#sHJ]nX`u@.(c`M=8j\E?gYP-4t0C=enj.I"UFX&urB/VBN+nofg=8loFhcW_0W`:]VZQF=rqE\Ng
%A68>pj[R1SrL!=@:259_lp#V@Lc'&AV=XYr;;5QTdJQ`dP[BV4K[]9O<SQDJVVecYqN$t]kSdVK^X]&$eMdjU1/,ELG!OnZGOU@W
%7Qu`s`q5cpMQbYI=8NX90KOQ?E^,q)K#\]18DAkD"#377_/'&tFRiqsl<@;mf581t-dg9FmEk9#S+N9:h[TP%La_YJh4MVjkG?`2
%h:d,L;1P<8@P5Lpd*h?-Yk@LrCc4p*i8/j2.Q3T51_b]C9a2)SJ"(WY.LJ$q<G7N'?0l[^AlBYZ?W+o,po-,Wl5`^njn;(=m@1F:
%mE2)&]'iJ*d<HPFP4<bKMfJsh6B&$UA'jZ-IuqD%E:D?KG'B@Ch-'S&]<Mrm3S7Vk?E]`8=8!uE&kcl:WQ!lmm&$6,S'.nAf3Y'b
%*ZMB/6>Ugk.U+DM46-0J4g2mA<_q;4GMJI;mH^aBeTS._(\2SoQk6D^juApeF7+&!).-[^:!Tgmc*f[6SLli4e#Y0>a4duPAiK=k
%I^$MsjAq>I[FB4WQV:.;I[Fo_EWHjM\\c::J%=.T4l9f*bIQ<uCNI+OhDjda-'n4+YE3hGcSEi>.K!(lm_RR-I6-)l+$TIt#?TOA
%j)";YlWFJI/_mE[]bG?b(HT[i6uI1B=.!<p4MWe,YJU7o?8)%lF67-#X7c(<LWi[UqrD+A+cP2Pk/q01D09Q(lAPt"7<c&HO1.jY
%C%<jb;;$b:k(;ddo[2GrK,8N6XRonhn9I&lcBl4sl0OU\\%%Zo:m6a[md,@22*5qYaB!XDbGUh>:Q+=TnHFEB-1VT$:HZ%(k)4]#
%2L`D;]A9Q!l4Y[HF7$ng0>2cjq1]iEY:a]V.@<RXT&-QG)s+'N6u$@ShLE46eU2k\o:XP!nqK]J/;Ru\Ec/4)$CLF_WrAE,.LWZN
%Hk?ikm%gNAAuh?2^]2H'\CdBTc#,(lS`OKO%j)h6D-Z>1AO"q^9e;i9XqkP^m"WMcDG7j3QM&H=*m9g4dg$=MeT0duY3-4ESlW9?
%EAP%eRkHBg(1N-D2GU%;&%=A&21]J3dccEY^Ef*Q9BN.KZhtTJcd(\AGr0di2h6M+S]()>ITGT3*`H[DZddE4ja$Td:,?'.N45/D
%lnm'=ZPb@RVS<6gSN=\i<L7*"/<d[jFQ]Zp'j"c-kApDYpRK;fb\t2VMoD[cN%UY@/?S+'QIElMj_fBo]Y'FlQ3p2+mGD0-6)Vk:
%rqq5A(L`/WGDKF@?i$N$ojiF**nj%=pMcA#&5$Bd@Q^nX[WofiKHnAkq)a]uc+)r+L"1ADl,6l[3Er1U$G9PH_[4W4-8Nj8p,t<h
%[m#UoM^gnq*"&QG9Vd!`Kj7noS5!o&r`O;W4OCAd2-1TT];+WNc#2tp2W((f!:&t9T=8;94%>Y3QE6q?UT/MT<X[B?Xa'P2+(")&
%cI,Chg2>4tec"!,ZkCALKT>H-o\HAeRTl5m0-JGU-$($OIaL[e51STTm<'qmGFR87A03]37r4G?Kl#lDJgBS.kHL8OldT'eE8B>F
%?"VZKa&;@A!RnhFWdD:aQ\d39Fg-P97QCteB?cM'IG_195L"B'>,.oJ9J!cemr5SBd:kdTCRpn@d5cEY0B6O]lhu5`<Ym)iJYs%=
%87Xf=eE5kiSb;LkA=A+b:2J7XFmgf`l(e.#gjC\2?/P`)VUfndGc1AIH@!5$/EDG9F-pPgiT.0eN3r/^c!=J>e-kGYn@^M_IX.Ei
%1D$>2M_(_QYGS`o<i2bBL\96B@(V'N3f(X%f0=YO8Z&sLNZ'UrJ4-jUmT,DIah@'7gT_Sn+Z#=mL\0*`O@hJ`'^jtc-e\h3i'nG`
%b:C:'X!Id_n1peb#.i-2>$Yq+B914b5ifa!Yk\$=@QC8"rAB![]@t?WC'PL/>R[)AkI.hMk6ak-02@"nh)rt>\GbsCl9qM`kp5f3
%Y54+B#:m2"GP/="n*dIK*/`238Qnj.`q(rLI[_'fg$Mf;Bc/=)Umu16@7AC8B3-;01/'LZM45+dJ'FX>bYh75<?H)$"8lql\jnPe
%&XMCLdS"Wbhj_e0b.Ght*h+^SKZ<]ka[L8^YgmW@+J&cb*$/TI>5iQlA!*5<EqX3AZj>Fr%$]nni(eRD\1C%p0u=]?[/Mm=`d98q
%U-G-4I^M_a+ch?i8t?afYI'FW4uTr+Y)X+IG[*@eODmT9NM]hsgeIeOQbP]@?Q[;"PCRB(*<p^SI.[`BN=`+E0p88Zom`g3U8cc@
%Mh#Mr%s7V'_Ya%/GgZ.^ZnJ#Ys/Vj#:W_W5["44GUODh"jZV^oh0b'_'^q;HaC6FFh_d=Kq[B[s=;Icjd$T-gdg.N5_dfbV0.5NC
%97M@KX$)q9!tN]&d*XK?M3f,*1=Df!b[RrtrCDl$WLDWW#a[C9Dp^_PLi8-)Y`9uZ\;UW!r_+6YjrtlFF2UU^@Z\#4bs8<le:EGE
%d8,,md9_6LRX>*TriD&&%+C4.iPX[k(n=g4GPWP4I(IiVX:"J!e#Z9Fh#U]lBg#k/oF<46$?t=dRFO`=5Lt$XW-drP0##2geQt/?
%+'B_i?a`>&F76BHrIr9L2r6Jt_KqpO^r?mun&0a?-SfnroO/u9buWQAf:`$PfD@V`?bG/`8kZcMc,-X)eNeJQVM:sf``>m5VUtBq
%h.C5HlnGjBm]W%)]pRA`=#UMtbuANWSK$`FQ;8">rq5V=C!Y*_HNH<mj0s5Z*H9k'VY$7VcK#MNdd8_Rq/ARYT#nsmnQ=?\4PuK9
%@^3<0jSuP\C,.f(XQk:l8Ia.]Z`:-!9q,XZGS(tS(U3pG-hI*3oGG0L%CA"KL!&`)4eDg;TZ0%LT%PUSig$W0ShMd)8,H(AHb]7G
%n8/(3cJEJ&4d[R:p?)5Fiboiu+]PRNkI*-l$E,4V,3jC5b1[P,5E`h/3NVc`>ZSl(fuL"<a3ag^4F=Q#n>3_X%E\co,5[,M:F9BV
%++PSe*l1oAa1tUIfB]>_2ZeB\9J--`Pm%t&n(`C4\%?"'n(/?`3U]imQIkQf/>YAdEV'PbhTF*8YHPb!%VF8Pmb*0eCNIqo?[APs
%B7$]/![0HL^Z;ReB4^Ts;fA1<SVJo2d3jM%"UMP;Aj,2J16._bl,5-Jga(ipY&;_IimqB,LPY)ZmsY4\V@#idiXRr4h,a(hZ#X#q
%Z_JN;'^48^(^2O:MFI0FJAISco[-k()6E[6>HXR96<`[&m.gKYC:Ydni;654n/k]&3^#ec3Us$R6UJ<7BcL_uC5ghn1Aa:_C/eur
%m$9DL"pVY67PjgngRFV96GCjZQP8=nclYC>bM/MSKDeeHQPZj;-Kp&:E3O\28q]]a?oQ6n692O%b\lM,k<L6sF6V`Oa[s3ks-Q@<
%:X@Xppg<?i?-_=d$e&<q2*Ch3B/BRR`T=&4X>W98;>nM?V^$>1108Ls8"\1'34Jgi3ZPID*:9)/N+'?4<rA8I@3b)Z\]silrQf:B
%YS(JVoE`5IX<^%808I*^p>(p2\6`1Q6Xl;=nZ'oTrF"HuVOX-)2sqe-cWqP(8r\bpK"sA4j:a?GTs(fb>'HChe^O&+QUrm=Fo7Pp
%0<"]B=?i@q-HCY+jSVi5Dl4M>Hh4"c.b=OhUJ!!=L<U=6OIOdW"VJ[r$h9/Rm[snKX3;+<!2jmXQ9IE+>j(QuX,B2*%h?SLRsfD>
%RjaZ.!EAa=*n9AMBd-nJLo2s):kVT?"\1-c:$)eHo=G.Ke:Xaq_#+o3alhXj89OSb\(NdWW;>MkHKfEliG9S5rS6F,g:qol%i@"%
%@._n>C3qT"JH\q9_^>9Vddbi2-d/+e94]&3\_]?hX^/"ljL2LW"bqco(94LXlHsES*)DS:(%0'gDrE7rhT&bXHb&3GASuX!p\AAc
%hr/kFd6]'n!lP:tU3#biBJC%YG0nEDf>f67J"(4+m>L2<\,.YAc4H!org8+]Hn;*o2ms6q#JKVHF5.8m1hu<198tT/E>*9Xo)=h"
%@AZ41Rn#9q'^Xm"&$VJr@)MffN9`(.=Xh]62BQW>o,!7(%@LiX?^e`GI6o&aAcho`,ojUjhHS'>XY+3h"(l&=Da\b,^:JQ1Z4E_T
%2*[["3"=BCJ%N:f@onS(JNAf"A93hu/Q9mNcTTiFl"h[;\&G+joF_?6adRiQ9/30S^hYTp;<gWSkju4KDY@'%c#Q1WNtX03)rW29
%BQjXDf"]9h4<2F<:o[Q_k$fpJ"nl7t;;R&F,]hc`(YZ'/7*FIG0eQ*K/=o%'$1Q4(b00(uE[qCDJ2gaAnsAIdjhQ2=*ZG8hW]mT^
%?0?#UrNtT#@e#ec:R_J_Ms"5_o%JqPQ&NuW-(R7qqr&\r)X+*,kOd>.B'7te5VchNGksLif=bbaGC)4@hs`&gLpYEk`)f6k5\]X>
%]\&u_T3FJ73j83dW0lD_%Z[glp'U0[(gDDm.9D::Sa*&(;X:U6F+sgXrV"NYYVqW9;$0=Mg/8U0`mre+l#*SJ`lQ$";nlP.4A*#J
%AhTH^_l)h*<c2^EiFP/pmE0W@6e_->\sD3f>/!`Roo=C=L=6B&^0Ft[RJM!d,s'R!I8jRE:[a!u6$=W$"_qfKcMbfcQa=c.ZQrXm
%:_u]2R$5<pkYA64V-]15$W[<l4utn?5/.gC;9Rgkj&;dNFhTrJ&[UNSLZuL9og8MZRCZ%<)iH#bDY8EGR&5oLbe.JPio:\`0H-KR
%4[)nEKl$VJZ&i6oe,rBYXWou:GMrNE27MNQIHN>4DGQgQ0b(R+E"49rBUjIeCf>'JBQ>p'ONrK(nSjikLp+(M['tLjJJk2qgeI0F
%m*fZlVUJ''h:`ZT9QnlTA(f+K@t!LAYZ*#pI`&H^rI(U5>6YYa`>a]lO>@R3Z^&uCH,%%WgU]CGL$@`N(i11h?\+<a`f5Ce]3.G-
%#"InbQlH@E\]3uUjOd?%]/,f.fJjsC:SXM^0&;Pb%qas"5qY?\U$X,<7UePopGs.lE#s&#DIN2mF\[Db-^6Nfb"j'dY!RO2UiFHX
%7=SDB46G$PP^7a/*R'A>+Tj4f16<rDoF4Sp+3Ptm"&Of/-aTEnQoSQ.ku#r?QafFhaR>W'hcU,&N'QL)ca*;aR7E"O>9%]6-f_b^
%]uBL,G!KCncqZa?Yr&"qWUKSfY@Z<UF(:+1#5\5E._2ir_"W1E"d=lulm1(\qY5<pTWb/JpUup&lu)g\1%V]7(e<2+$H$XP6h9qa
%#$-"3Pn%CbZD_^-QpaM*C1]MEWYE&-f5RmaT@&M_rmWQGCEMrt:Q8R':63f>]P=QC'TQCcqJ.l((=!H^:Y"4sGAP[ac2M5tQ/8"A
%aj4\9a]Y5-@B<25)'Z$(PJJ9&fNg^*bjOUSQ`)DiMd,5PlWbSr\[f;YSkZqgk2:Oo1j(,F)*!sMm[Err2YSh[\;+,]YVAA1]$;la
%EuUBsDJjNA\j2\I>W(*$7?Li[o`l.S!sG/uK]Ok<?$1.mkJ,jfO+5oTqA,qeMW_%2q"Z?%)g)8R.+9)F7c5(5ColNuJ*A'4obo6i
%;Ro:nO"S]NY%r@ZD'o9hP!q\gP$_70)j/Z*SgGE^9TrZQ7rqY)!/nD0qF?h5dTUGaG-2o]>c:WE`s]14Z_+5CM;u#8bO\3kiLl\)
%LGZQ`mVSq)\A.8k@9(>^786=))5M!F-Gh"3EK1B[<Ms%(WKA/(8N(bsW&g>A2bK-ZZXmgk>PVID5-1]6=q6jWB$f$!Oa#PiR<C;>
%-ot')n3]tKj$*=VQdt89f_OjdOCO8`^-;^XZ/p)UcI-TG+J_ZkS!dHs%!ulh2I?Zp@4QtHLI4hfd`n]'R6DR<Kme;5`YQ[KZ'm,>
%pU8Y2BFnGl-7#]"?!O_;K@,)BU3a4L4DR.Dk4?p'c*1?ohk!''J@dU]0sh1'I'6?>Y+Ac`*,cXrh[SF\N(AkN(Rt6+NdI1bGeE/t
%2@^?A"5b[*Vh"N^0Cs6$_.1JJ;f`$d:qN9H"KC(Bd;N7.(#Z+W1h_LfnR4B(5VoCYd_\YWYKG`3jIb#4J[Jfk`UKUs!RsF/Bse!l
%Z(=*O2q&;d_kgC^;6YO1gDiJpOL)&DQnajZpI8qH^T!k%+.E$]!.hhD8t*C2)p>o'=3h?hP>i/O*$\ej5Po^ah,oO$K+W>QOX[GS
%S$<32@!-)N]A(;a^%Fb+E.1]:h,H+!!(uqHILQV/LlP3m&Zqukb]#^(YZJLlG4Vb,-83#)jED4[E*m&iGj-%SW-ik.bjr`:ajt]]
%P.qnG+4&ZF[WNCWJQo;#JQ;]AjaQlo`6u\g]bV@nG"-NE.*?L#iqr'$7uaHHh"S^[$at[T%6SkhSZXeBeWKf8_3@.C[AkR_H[k@*
%E/;hYq]6LP>2AGn]<t\QRXS>^)D)jDH1k4<=*L*_Ku*58NUg#S^#'g>=o5Jk;7Tg/j?E24Yr^E*/5lE,)S:+*/ReQ:@]j#7gFm/T
%'t[84hpas3@^1;6gu$?2`@dIC<Gm8(4^9NP-ebQDdDO8^[T_IG`S+s"CslTR>[>udm=r$ccLi9qhF6n40Y+XJqW!W$@^5]V/f'qE
%)ND_52c6pbhKFA:O8f/eR[@>s+)D5X@D%T7*b4E3%R3W,^d"U1>%Y1R`[dL*_?Sl^l-3EPI[HRu?h=$RND9=nOabQR?uZ@"h;cMq
%QfSDK[7n?4K*0YU+/VPJn>162s82j]`DcO^MXn0SA9o#?RDDq!LMIPV]*a"Uh8Sf-&7EQMpa[rH"-[l1"$b!9qJ.6YD85&5-i!"4
%rdOZ[)Lj0P5G=F+:SfuJb.@sgD;'@(2ZT+dPPPC";X4X"N\aj@b4X1S[Cn>j1@oSal/T5_8G^Ph"FO#&j@eM@='/HZOk]0#>J_<;
%'9*/VJOFf8p*=\uC.IF+Y83Z*;fVTQ+2H=l<NS2qO8=+hi_noKF.)j%fB%ZK'BkJV7gG#DGk,7&E9?8FJHLBBDZb1&7M47/3s&l8
%J8`;*Vm^IDr_g(^7i1ZNp?pil)i+@qqa<9/K;4\s?10,Z>3=i80R[&+REXaTa';fqFRnth2N_3m8`_=hk;-nACOMh#=fBQI^0T5D
%!u09-(3;Ajnc0"HP:pjI`?'A6+DpIZ]iE)+fC]</JD1.C$[s;7?.d\B]N>*mO85-eX]T&Cg\))B)Oh,36Ktb,06Mn8>u%-hp%+L\
%Kabp3kI2KFY5`eo:>W*c#A!T**[mB.?@(pH$p:Q!k<ro74LcU,L`AR^O>:rsU,4-l_]*-Nd=Y/\Hb0S&$WK\E0-AcnU-4:>Y9d[=
%c!@ATAnPcPrP=p9rI]q%O4[Q>bf.TabHJ1ub5-01Q90/=Gh^nRCh9r2.igJP(8&,TNQ$+fhdSALi=$;[T.VrTgcKq:^Ob6V#0n=e
%Cp'?06hW7M5Kt@6a!P;kP;`lSZ.[oMCg8;ZYmDM^GVZ[^akPItK!Q5^?E%;Niq]?]Ch@H;)+ts.An&*E\#6LAlhkfT=dk8hjr\B<
%R.In=&/-)!)H1/%nX/U4ka4<>Zl.?!A%+1"gpLY.lAgaU"a<,<E"]dB/XFS)9X3+.R3,X>hV=$kS>I?;Wst2IAJSluZ0^#n>qA4n
%*fh'0hc=7Q'<UTQ`a3F3[PcZ0a0pm>GHoth6p.nBWAe8kV0";4['AZ2:7Up>fP0f"1j7`Gc,VI*;Aab>?([baZ.jp-FmT+[RuN\.
%&!(1bo@A0QTsD<OHYO>.Z'S$p4ncI+nJ5p.-.cUEjg2EuG?1l-`\r^fdBQ_aB65mb2E<hsFFH!6aK@LtF.J0b;.lf:33'pB.nhba
%4YLW3#.mg_UPfM>ld=gnimR%*qr2HLqfI'>>.EC/7lP<DlD*+cl[,CRPoY)@Y^Xq94mAOZO'Xe"culo`3dPua],N?8_UK*S)fi</
%!X$)q[;JH<qnWJ3e"&PIA"uQ]nZbZ0j_68P/"M[E*J&Dfe3u(R9rc-6n651;/_r'DN3+-b?]O5k2tt>CO.=)>p=W)RD#a@I*BS^F
%c&H"f`M^^n_UdpQEPL-IX$.T<N]kRfB:*;4EL;.mlV+/ta%,l)*lb*iZ]F.'gU3r!B6!6_gl%`9Nec51Dr]#FXk7kV-`4o8<I/P1
%-ZS:.+3o%-j(HJf[INSYe,Agr_V!E6_p6i^pre)`2r<i&,q!/[4Y.A;Qos9^Sk/LN_#3%@2C<N)SX<O5SQqc-3"JLmCJP12'0BEt
%pr&;e>b/AAm@I,/emI8\.aKt8nU,Pq5LFd*^J;cu7<`e;V/e8XS:#0J])LpQjMJX@RTutkdFasoe#-E646J8ValCLreE#`->%t;+
%eD/0dWcp>RaIOV)HZS_`WQEH=gsfSOrd;jO]h(sN*\:VnA[\&qeAg?BASV6kH"H9B2Vjh5m60i14m7gBeEchJh,O,[FTnW#e8d#s
%SU:^hVfepSVGkf,G<0)54J1I2)**-#31?AO^+P_L/"<[.l$C@se(r7!BRD:./][%\M>as!]tGCm\a:[&CN$aYHp@F)M4\]ucf4]D
%fN,YnI#QOmhs,bO1Qd#WbTnR>`b+j;mVQQIh0k\o=6%i!K?7_Fk+Z"lSLN*If/#(fS#_rpoBn(?O$DJHAC.t^/?Y&"'"NAP+gF+u
%X!c29cJ+38BP/OZ]FuP(h9eU6&^O50NFc^5@:OM)Bs)_=S*q&+Z[:fZf^-T%^7$Y2X8M="l/c`!ZuQ"!2`J"3R.D-VdW=[/\$NWI
%qEo>le@Sb&pXa%>F"bYQVn([EV3=S`Y',tSZ;aW&5.,?ujOWSf=n6Z]BfoPR3a#802]MGcd7q#*5Bh?SRL^lXhL)c@IQP<RcrK\(
%-_%U:5`X_!g\u'3R@[/,3U1/A`ED_g"_Y0R5N\J"k0BLFJb#<89IqMKVD0&5`,9s/UlOG1@\`/RLm+\h77h$ZU9VF^.OX(fBdltZ
%$+\j8fB$',p-P@s,hHS'HK<8YmBJ)TcQ+m-G2r<HleS23I6Y';DSkpDot:5?\>*\`%Mj35GI%T7[H(,pRhpoYpO$SclW,[Y4)RQJ
%GJ(l;9\0Zur)%AaS"9%Dk4dkAH1')MhI^DJ4Yr:)d=Jf7f7hHHOZkrk]$mMPFBuY8(R+jB[B'6[?D5N[[G.g)s)_DXpm$#D`pZl'
%g$J'r"\\1IX^EZKEJ)Hr`SI2q[JCl'mB+N-<k%e?biEIg4NK`=L%j,;i;?tsG%%7kENlZD(la+A>$5(>W'7U)C<%bsF=`GjeXMJ7
%G-/!9b>!*pO)m87Mj:WnWPrc&3EpO$a1S8!luR#Xs/EZ9<",qi95b?-pSk]gMem-RV@l\l(8&aK]@6;P<,9r]bHktgmH%<MFL/Wl
%27'Q8GI`>OYhZ7d-<K?lZ7d`O]Bu)Q^"2oV9!L(>>A:R(iTg?tgAG^>=&Z.idhB":b3M\N*P9"18ZUiN/Y0(M4JpFGcQ:N\;oL-R
%r*Q$OiBcoiZdj*MRG5s>=JjV$@gjZQgmq<q[+o!5*d,)afn\#0Bl<j]=3:8b]:Ia>?8@q\3I=B]>5(*Kq>&.o>!<VD`:GA.Z#m]<
%o6O9$3d^9/(?_=,_J]&.Ueoe2G1L+1n^O!d(Yl01`-63i[@<$DcIuJHhHkECXmC@O^\tHerfgbrJ"<Q'DTj/?/T7HFn`PmqX)`CD
%3F$?<`d;`MF1F>tfK;3D]%MHlXY+Ndmp1(E;O=kj>DLa<#f<q!h4>,1(YboNM<18^7oSZ?mAJF6kFK,=SaJ&\1>/5YPFC9Pc7HtY
%'E7%@DHc5,G0dh+h;-\ZleGfeVm*[t]632keS&lEmk+Pp[4e/0A,@2qf=h-pmVV\@G4X'B#R\i(K=u5M!i@u&8Efj-o_cFE\>#Sn
%_p`"Bjm[EeAFjKK3dGbQ2Legi]%r:RNanj9M<!N=Aa+Gh@=%D;Z27?YR44bgSRen3(/?KC<Y%sZa,;UKhJGlTmQ<)iS3BX/T?lMb
%,7H]*V&pdSc7Xa+dBiPaErK=Ih`RP"-)ML)+('36(Q&$/ruuZ.;S'BKP/1_2=F7P_GhQK74J#hl?G>R^gK3C.1NTt#*cJ53\#&3P
%GcDaqc;)kAYHLU$jdXmsEY>7[=km:2h4,H)D;R12li+"je75t7Z-.pWRQkk6QTR:Mhec$ps/pbKPdldd)nl,b6bM43??OH1nVtt>
%EFnh8XE_:eIoPcOllVH-&,5fkVj5a0;L>9_=:TMdGT!6'e.GdDk13#,U1YR?.gKX`?$STHMHAV.a/eX+/i2%(G4G&fXhU,Cp<Ls1
%%keHol;:-\n[Nd"H2%*^BuZao6"BG!J,]-5WW(=`fA,]e@dW)aiMtJ]h+#<S=mq\9Sr^#fYKs>kNRUT\=g,K.k0j6%kIFTo0BE^r
%qF+1Z?UrFLQX<g\Na?(2ARVo"2'#FLnl+PZ;4_u0bum9aD/QMWZfY2#H)W*\]s6/fdG95OR>>^s1iL5/ZM/ON;&jGn<3k4a:#;DK
%mq2L*:42%E*"Fn!h.+/i3uDs6_K?*Y#p7k2KG8mHlSs<HTD"r`K:;1iJIc)eQ`f<-D9)T[iU3rH\:a6sI!=Q)[d?;aBVQ`k:Xr3_
%UtDi1FJ#QXk1P<J::6#;fBJ7lmA\eVknMP8+"9*;E$')bB6Q_Q.!G*@rP4;=oJ/FId\26Nh[]B")YbE!hFO[W?(6h9C8FBA5/Ln#
%TT@&qA#.]6INnqCS/m0;UB):;V3,X/#:`eFC@nl9EMQq%IfI222iFe=]iO:I?TYsl'/"M31P`BY7Xm+`fus[<m(o]k&,c[^3[;>X
%$\#fPq8M#1V')48jDql`)SYS;jT/u<o3U\T[ni"mSRLZY8'1*qNk32!V:be8SI7OKEP(r@k9t'Aqr_L_X\7k3n"G0E#0CY2Zhj1H
%lXpT]*iJnScKLhF9`Mqtn&FIKeJd=.VdeEK(E][s5<M=k2"'nC&-(:ZKjps,<\9lnWdjob$1f+VpiL2ECP3?nNr:;d]RB,)doY&u
%`.OMN5O2_/]@1RQb>7NfCGc@@_&j6apsA&FGVm`!%.JM5`Bgrbib*+DeK58s7L,K\LMlUh]HJ9)T0>:p\;1(K2t6KuFK,)fh[&.g
%IXD<%kBPpQGOGo[pt\<gJ)W>ZLhrg;D`P$bTKi'Eb`V9W0t:5!r4mfsI8]`BKWheAs7h=R5(1X)idH,sW;mV;1@oG/p<0+$qd)*8
%[fD7ak[g$=$?/`,U%[l[&mo(i]J44E$B\[LfdGPQ5[Wr_f]u>(dL^&fbO&o@f\J1ZUDc_?mh\ZerFX#umXY.cml/;Y6(%V&ohFb3
%7N#aXHf"c++b0KmnTVL^,Q3cDrZ$6=ebQ\%oBoktH\_@/h"g&IpjZ2i%oB"mIM=WZR+ghpcC_cS2J<oC)M_WVrrOu@4F[7X.=SiG
%nZC(ulBUiERuQhZiplp-IJ]?*pIN3`]u/O4V?>.c4Rea:0<?e1dRf99f7m4a?`sgG;X@GFT6d];7^6"_r'JfDj-KdGJ+YMYHcu&_
%qOa&E^Zko5Hah"URf-.J%.s=S]_RM;#LMu=l43X;fmaF2ofjU1#-;t:J>!:=$/*DYHq,XMN=k.?lVI:d&@bj9l(X6\k"kU,l$E<,
%MIR0EbjhHPN#2H:7r7(2_0#go!K4/Rr+4g([A:\=nfM=/%"2dD%nH-<dF,p.rH\b*0)alrVOsm-b+4KPCcBF4LS]FmnZA"7*'!BA
%q!VMi4)g.o\UtqNdA'1@e3!SsGoH]Cs4^o[U\C,TR-EREEX:?ncU%HF'Du!DqMI1\#26o>(umQ2"b'pP5":JQ+f8$G44-"5ci8R2
%D8K)p!;kLV#e$:dWuG]Ine_)]iEuRO$LK0'=/ccT6Ms)+bj\54Pmg(=!tlUOQ9!##JB;=%/H@+cd_h-,9AtRrpd#!Uii7Yj;TA,G
%^',ki*%$(SL_9Ql6dkW0Qq8bL5HO2p$s5@mE(F%VV=+QB?)aX8YHJ$f9R>.'RA:4[e_&]!PKK(KV!qb\3^B'nT4h9\h9eea;0S#W
%8]Se3TpO7pJ5*Ge:Rr^]n<0pV^'qDJU$kp(a*3_uLYnhlYWJ0el2X#TEdXH-:bI8\Kh.<<+K`oB*MnsN93[1Z].P(oFJMZXJ1B>8
%2"bO&fFN*?5+nG_%\r"Wj)O%^"mro&\+B)VeUS2a.00SXK@=h6R0_Rni7a*8LU]&^I+l#i/HpTu*'g+8DgZm?Edd3^3*1n`mYtTp
%10>slE`:;8_ZLa7m:p?CT'J,Tf?,2WRdRmC!X&n`(f.:7!<G)Y+j@*&l!DfScZ0CUq`qsB\N:dlYi$'`RuiA(DFRU.a"ZV%MIA]Q
%#5;0>-Ap@\B*SfuV@"5p0&k+X_?S4/$k?N%3$]K8O5uTa8#ChQZ$Vi@4WS!1*tH*L&JZu9JqBf],?`uK[-%d;i(,-G&k5s,OV%tq
%NT3S5Lc<,8$9^e=oTQNWOF+n7NX,n!a6Nr>FB9jGcjdObK/?%OhkTS[!"e4\;ZgtMd*<r3QtM"G+UTon4]'SB<5>O;]I8Ckj=V]"
%)AFS6fC$KN8gSaKJsjZ3e#1K9poZMr,7]u*Ye^2Ae/Qbh+(ba[OOPnFJJTRP'OgIB#=qAkFchTE:Oil`%Dp+r8G%s@7haH^LRo$p
%9YH!#<Bq3Hr%<B\1Qqn;R#NUJ,f;qp%1F(Fo$0Pf!G+kE'dO$,#79FE!Fs#u"%*o%N:N+hJFl/[mHeeFTgr;gB&NjCJR'\.[.&K3
%LT`8FJZ.#2l0S_knifeo@!0md<XU2NSOQ"X!]CVpB<D<\M">$qg`6O*#gD(mM*5r4VkLUcQ3A+u;"6j2BBst5Xs#>pKp#4[oMN^2
%6NV7ij:E6?#'`Qr32Q+hl&I9A,?p;pM(8bN*p'(4G$l+PkV:;t82n>7RR)*ObX5W4G6(qKqM&X,7#3WbK+Q`lNe&ndPkLae6=o?q
%`.[@b,0o`Bcp@I'e.CcnY%75>Rb!+S6V>9ME&KPZSO%LF,%PWm>Jd6<BH!U>i,0FZH2o8mLC=9F2G+:k"sF7q6!-](*]OYp%bf/r
%)+A(N?mr.AeS,)h:%So[!L3`.cn;+IR+H^S)cB)./fu#hG"m1r[S):0e0T*T=9d-'bGXKW$j-Om74`-f+pgnS@#tgii%A:\4dH@+
%a?gsZ%AX<7^<a)*k_[7]8k%hI]1^S$!^qX86\<.:_K6&NMU6a2IOO!m(4]*cVG4@)fPFC.kWlZs`@Jfa&=7&Z.!','eh#$1TI:MX
%BX>3"i*7D`0Ym@C4MWb*p0dsGB][%D;A/_V8q]o992q\)q>j+nT?N[`<Y3LR!63Xt)e<WZO9,Mej(f3r,KPM5%F?*d!AQ8S.^T`r
%!AoL\a!@'_1o'aNXWS-@3#6"6GpmA5lm&hBZT-<S]Jr`tJen[g)E/6N_b7uW5m7?V':N5%MV&#>/tEZlKPt8NgEOWD$/&\hBuNX4
%=Gd4):O4G<&-P*f\,pu>IMg<=Q6<=cP^nP9=GJ'o#%?RA@kTm3>+p(N`#"%(+>D`h,Ba<Za&W4s-cl`$Z;Q&qTI<(1R"_:RQ"5Ol
%"_sh<:c`#5d>e=GdfI9i<'"\aTi_:LB,CYL0,]lP%XjL>0!JYQjrV<G5bDI-`Y9A.5puiQ#RXA`AJ5hq:rOb4E'&1I'Tq3>Z@ipS
%KYPCO)`C*h'8-Jm&V)W'U=9Mb%>cd":oVeSE'3P0J/mY'd<\*P7nj$M4u[V8ko$Agla-d^qZpUY0&84E+NjA:XUQeXVJnq$$ARe1
%d?(lHJ7*&b3d,\N,_Zmc=@oX*WH-WdG>V-SR.Sd&5o:FTG'7717h[jITbk$$p(b^]&@\<Y;;n7ro)r4lP$+:)#+c76*ZeL=Uc"g=
%7s6e0]OH0O+A[7%n/"-IOim8l^le$QT[a<%5`J$CNnm!rL$T>'MNI(rL=Ucqm<[j'TU14?$8?S8>k1"M'1sBf&\qR9&;b@9df[Fl
%"bC&U=pJJ."On-mJf>U=!u._DR$*$*X'nVn1!/hd=@nBE1deN5cPk%h2XmO%K+pUZbsN$sJiEkR6ht7m\7d1N-NjQ&dG,r+'KF:D
%^0,-n6QdgL=BF^^E,WcFE.if4+kYT#>#9-sLM#le<*?#hcj9gb-3G<<$IF;.Ym`0QAfE/LJ;baaBl209_(OBLkR>;oXrhU]9i=c]
%*T@nI\A"EN$2=`'hI/qn-:IGoRY`"7j;mm5aE*H]'I`Q>m9(eHfToMfMF(#Q)A9K?d_JgqHjiS=)*gGq`hitU/d'Og!UPA2HGG4J
%3$HUBH@oUolj9=RE41`ZK$6[3&L=ME!Q^'*=g"M[C;p@,:@!WlGb4>uga>`'FW1pI;X>f_QGI"N)^&XB[#@JN$SmY'(<2b4.4ZY8
%Js[gM$&(Q[)\$s^qZC/J6Z%p>*c9!T,*8Wo2ROh#8Zid85@:](W252^ciB19#e1KUQJ,9m<2kBV&odO":bYSKoaEMj)Fh&chO!T6
%!O3Pe;4r_1&?$nA5qWKjJq[UoS)26>4K(a<hiJ6;4`3&pA8(0CR?5*Skm*=Q$?T'O+CS=`=%H;b!FlVjBat6$*Z#-'$li9p-Q$*n
%5ZK-6\J*WF-^u*PNhjQXQmCu8?lmtQAp2\j1h_DG[*L+9F?,4;8Q#fcJtpFIe>QEDEP2D>3IL+r,qgrH_8$COduYQ!ZtA"6`s@Q<
%69XBl.glR2R&4iP+iAn^`$:'GODb.5(K_5lm/U1c4pd/["GV3)[P3RC+H/;n@=dY:%`gINW:eqs*UQ6Y$!2e6rE3s\"3jslh.UhC
%*.P2>$kin`edhUoL'5n?q#u#\,M#24Y'n9p&1"[CXbRr04MnH+3@K3[2K%H9gB0D^Pt<[Vn0&kmkWq#!AtJ^P(G4K2lhLW7\/n3U
%&C-;'L*i"KcrONV8SH;_<\^6]Eg^5KMGKE/ZpbKWA_&<7=\Z#KTu"2qEh1G[AecU?/q`k\7sf7'lQf.($l#RNp447J-t4@Pd=lFm
%5)FFG"Bn0sJZPt;dn1LG7hua3#-c%%T)e%VR"`HW6P?0p;jnF>n;L2@SK%?Yg(6qD'S(c@Z\fF'.Ec\h.C1(^@Z:Y7;)[1N_8+*&
%L2`4TSIXAA*$PKkf*=1Y0]B>e*3cm4afV.%0\Sf;'S4Y8)45HOJV>*C#r*F]W[QXHa_#K_73c6W.=7MX[+:#0(lBT0KGmnc,8T34
%TP"aB3'QJFN/fs_&0oD1]V>nnLb&`J[4l1u2YBWZUY\J7+;i2:J7H?s:M57-G\irRZ(c5H],Td-7,&t#9t;5F%Ii]#"EPhkM#a;!
%D:WMD3ea[/'a\L[>u>,GNm_pg%RE-31*XYmSu($=g!<2;T0sh8SEH>++NRD*)5)>s<CYTMi,9O@"%#>;XtGTTa+f'-cq)BD<WXUY
%)2tjF[&0UR()Cm)3p%:Oj*c^,.i9^8"rBH@c0/VMoKOq]I%sONf</g+ODKT,4R&8d#TXO\\=V'9]a-M;4t)5;WC%ju"Ut!]jb\#<
%\;uRZ)or42%qL9L<4<0r"bOUcW)alnKses;%*U6T$/i4$-Xm-!buNkHL^\Z.aY5VA!(9[E@XU:J[^f7!Z!E*H3juT8,>bNtkrbU)
%8KWqH5b!RTU_ghriM[=/8_?(d-G[E_OIX`)fr"AC/PI_[l=b3F;huA?='iZH^DHB#Yr;t,gfRsk[Yknqf(=,KD+k6CU(C#p,R[K(
%ZI"6\_BJdV@s1]Z^dg2E@l;CIJ:82'8"Oo%cn$2k.Wq)<$$%1Ki)gG=Pn58L)+`(A#K^7^R-WL_+WcM0S8n=$9_]mgI>o*OQXM@O
%`.?tm7ch9V'\NW4bmR2R#J<+:9c_[sNINnJ@geY80J%rVP@sX:X!5PMRZt[2B:Xb]Psb(TJ-"+'%.ci%[JQn`QjI2pTq.`FKj^VC
%R3;Z6)1qUu)E5!T>SS6g;j_/6+cnFq?m9)Cqkull[m35qccsKq(4h%Q-.+f!N[EFFBeZh=0_ihmN\Cl0od;-!+2a=($k/FU%R\;)
%ZUO4jP(A?%W(rR?G-pXm0gTb>VC=uSW4P;I+f1.3//tSjf5%oK^bZCD:uDq#)58ua0jtLjn_-iENDO.`,$WF:"66Xr4-6V$,4J/*
%b_-NYTSP3)\A=4;gtRnf*<`]KM,A#SkS7Ks,6!eI,NSG?b\'mapf'Yp]eHZeO6gbCU^Q)PQEFk/8m@\RqqV@70hLr1BQBbmbqRL%
%P.RK&,"D]UCacU"4$#Kam4JJSZNp,l1D:q.K*'1KL!2g9Z-3iJ1]^$p*S0*27rh?.*>QQL.5G`q7fc'\H1oTG".2mlLc.V"`%"BP
%+9Z]"\YOa=9+He$gDRkm'[+LP#l'^C$!=de^]KSfD%tP5#&b[)XZ8_.@0J]b&;.T\V0s,+!&FsbiTXRZTqu:a-(]j*)0dDP0V*ji
%2o.i$Uglq)o#a,@bn,Ul.89TU,Tf;jBgoILM#)W1"I*Gj$&)ki"RKeP8eoHfN'mHU3O:u*1h:"'K=4XUD=/]<kJH;43!tBoD%;.!
%jchoJ,!CiR[.1O8XN8^4-j?aSjRI[QOKO7EQk!po(IPdBG8QK+Nijgg4\F0oO)TqrgnXYSK,JRI0WGp+[79))$kMDkbihka#7Ni7
%^"TA(JqJ4k.58-p*8b@W./7UH^>i(Peo;9KRGN>3PFVG'2?FKr8F\)WYH/QOd;'p;\7-e/j*J@\N;XF'@a)q%9a\c-NNGeGQ,Dnj
%?NBBl(l!;i6'3?HoahfGo[Y@YKLQW/[LqYbmt]13=gU"Y8:4/M,-@X.i*[u<4/gm?VV"ARBJ%X]_'j'8H3IElll9$!oW>Yp;.GC:
%,gA"\3+hJ!-&`]h;"35mV%aM`AD7/G@R+Z[n@?<\beRlpGb0Js^9RDh8B>I9+Jb8_%IG+iJ`C?M/nIfj(.cL25O%hQi^h+G$B79t
%@:D?e\U\0,8.)M0UlcE)5%)DpV_p4$5h-n-RpA_s$55<_GA>1f1l0NXe0.6aZ!ecOCJUK)UdBKI:K!T+WC0TrM9sC=LFj'fKf5BR
%/rLoQ$@rRDq>u;\*//PjZ#4BT0Z63rV;?U3CCG[].)MA-$EIVrIH];h+:q43HqN'ca!;`i6"n2ZH.36I[ane5S]Rj=%*Em"Qr&'-
%+;"t$K[3@K3%lLpWM)h=(bF>GLj<r)_;72n2\h_*!P?2c013Loc5fO/K[D2j`\=Mg;`CBI&YdEIMdShEBI5ZP%@S[j'oan!6f[S_
%jp4qQCe[i6M%R6'p9\U5Ot,Ne.NA&#D:F?_`\hY&_H_Z:q4]G'R8?ag;]f(26__CfR00O??s<pWb92tX(iNG[Q4a6p\0aA?c0Uhr
%'`l33PC]tK?WtBVfMJ&"V;t;d_E>lW<&duM'ce82E3W#*WW(rZg"e8,&@nY'&W7mf?,uT'm)/<.%?!l$EO@B`;8gaFUVKd7Et%@<
%PVJ1\/SO;s'.G*EG&4"7.u;agVQAs\!me_cT-?t`[4@2r.O2raPC.6T`j!jI@+`&\/Mbi^UuY74!aFCnn]$6ica0Bq$`u8%=r;jB
%^br-Y;KFbH7B$Sk6/$HUU(-m')EI)]OC9W7;o_3**Mr$eD##XN0rpA,!5S^Pig:#]%#jd![!-$-&pnE>Q=FN(.rOUE=`%t*>*$*p
%>mdJ77S+i9R,3t""(HA:%\E4_*40DcUkNS6#Cu&TDkob@R#4-DVROn)#W,=DARL'd.K]FhkXgK)7Dc!@iGpsjLtqZ_AHj>GR48<r
%28qMsEGU([[*AhXQ'@6GW1kf$V("r,'1($6&+rE#pU)HG$7U^)d1Ap[P1]@D#"VRN8Mbl)@lPK?P=PJi6_dOo:?/@)b^Ku0qimAc
%BfKFYPlf[&%"7Q5_q:@1'.1,fV/HFti(7U:)11'F3Kds_Xs=b^G^+b!WR(&S8i:iG`a?s#8^6'WangGt+^T2N$&]ab9I3c.R'fQo
%1(hU)"OIjhBC9dO>%:`.N0r.W>=<o`L:<Q13MqY\.o/Y3(@3UV==M$uL/Bo?P@D6T0LHaG,/AlCWM;d6AO._M'hV\_icF'U'G@7"
%3PeiZ+;-nJe;t+BN+mSbV];(%$n3lU8L6+*;&:(5oGjo7fYmA@-5jD;oVS]6_3E&s#::5g'TYl$5I]W-:I4)<d[Vp;Y6AN=8SB<&
%HnNs&"be;;KllCcW7N_=.6T.C!Z:)E_)]BFQ`7<"'2!j6KJ!c/`aCDj?#VtI?9@lCi^QNZL8MH>0TD.CC=eJ+>`PpXN7*C'(*p^!
%QGU^>;/[/5'WUoS.(=uo;V_LFnM'g=9m(?PR4Zd=#Y]H*Ji$.DU<]H"14kB4\8DRJJh7,L#"d9(i-InDJWHV%$4IKj`Z3>Xf+!9>
%$:l9^N,g6No,[Y@[mtuQX&,eHJs,)QaiM"&;&a^;km^F&_ds)`-nKpP3Ye*o6(+4>+HV#+!@^Zr"`@_[UJg)r*sQW)KZ!?5c9u/m
%WYc>I!@q<s%@@5fTZ`W(km(o@\g3m:4GCfuMd=0(IG7u4$;fqr82H5MHrEl($1^>DcN_Qh7lo5f`R>?NWTiIh/gccmkaP+1i%cp;
%aR$ki%F8'rK3DY1Ok_/O((_7cV2=kNN-:*I.AeWInSG=i@gs,?]AO;SN413n@S'0)@B9I5ON`G/."t3g%4LnF,>=pI0UbQWq,Hg=
%[7VnkQ&%;iJZU6M\9DBi+%<BR/ZDjD$`2P<r`GpqV@#!^9CX<to#/LLmt9?U2$-DY2HBjpKS?\%JhYf_0GEnCYY1mR@#F)a)_`*i
%/qZka,Sq"/(tViQ46\7oAu&7:>3j4M.5-<]PR.KAkTMW2TMc_^OVFL'*#g4iRu0<1St56b/?JBd9H^HjJHa2>pDb]K?/mI\QoLF?
%=R"$U-ebu*)uG^&F-*SAGK1:-fH?E=e$_)uPG'>I&M,\F0TY=a@P"R?CtaE$biV*D=t"<D[Km'kZGu2%V6.^7,ar++-S!GOs6_*\
%A;O3_^I]H$=FC5Za$_+Fr!mc^d\j;Y`P\cTU##>4>^1t:OE16,E$0g*k^fie9N,CB9(G"'Qf.5%:!rcfj$fFE-ke'b+lM)B<#Yp]
%K\j)o>u=3,?t`R5$'abG$-GR9M\X<d+de4-U-.>KU8]m:7WaT/2.b(]*3VU6*X)1e-k.V!&R)P[^2<un3`e=],"loZa7Y\5g,l*#
%`t<.pZ&Rj<Q=m0h'qs'C>$.)a9hXI!Q"%+S5Rs*+7G+Dd.(9ToJ[q52KM<mI9E^(^(k;pqKsbe17A$Q^:q>/$FQc$p<_pP'PG8<p
%MPC#JUEp$.&RpoRfFSK]XqsS%cdAU491ipr4?.'"6OIBFGm`-lT'.qhn\5.*U;Qbfp-q55Rme_8.sZGlBlT1GMP7eHR1APl3/dm0
%Ff<PaQji%M$-+j@QeI,^$-G2Bcs>Y`"BH14Po"^B]M4He'-qj)[MT]'^heWH3^^qtn"/jCEA_:TJ%"i[900(\"JL`1qJ*ec0LW.g
%25,hRZ;MqcAJ>;9C(G/U-2Cd=S,t9:"X^0uOO)#_C(fiJ#+753FO@L=+L.l8PMcFa34=U63u(VV<:tsgr\WF5+;*fC4*P)F.i-\/
%1cTbP'6,8u9lnW]K479.4UnHj0SN!f+>HbbMK$L7f13JB(r`4ED9>@3bQ>HrY\10F8&[F(,Xn:=_kc:*"rbLYU=9LOon65g1UX-P
%j:)*m.:+GMHaS\qnT>4r.=A5s[Co!o/E.9KRb1iCKisJM%.I]iG#K4jpM=+tf&XRaW,$2lA[S7b=/IqiKXm\i,Qg^L*E%a&G*.F!
%)I^iS0-hTY0`,:)qgMr$$fKU(pl<@YHBa9Eaq4btSJ'fHLq7qr8h'i'.Q6=,OeG@S@aZG+N7eUrl1*hdD'c8q@"9aoPO<XiC0XG.
%n9l`:B[VH7Gb@B%Z_bd9!E;#uYgFj$PRYV?VDkg:4A"Ue=U^ohLE7>.+iChPQb4"sas5hM#-&c>;ENlV#AHKYE[HPM-9N8^gOYK%
%FHR<V>esg7XAp6K.i9sMmg.Cu'/ljK&Bh!4KaEZocpk_a)l'QD5DW]b8F^u$@iaBs6+Ok[15sqLA-3[I^Sho@Rohf9A$NnkNNu(8
%P7g@SEY[,$4/bV3;aohI2&=&VLC;BQ?f'kcd3j'rLZl$b$`_aN$6hSWKsfA4,D$JK)aQpUL>b[HWWK9CZ4gA*91rh3'Q=\VU8t_M
%*1QNt26=:]a_II\"&m;jPr;!uA/YZ76W4;D@$bg2+P>^)7KKFJ"oH#U"Tl"7_DQR>J\@,%a'i)0/hPLF+P&l"QsD0f(C]=:HO@//
%lhODH9:>(::b^l`RdHJAPO%b<.oUeKNY:.NadUEkR<-6`im`c-,`Z\$D!c]rA_70[<%hY"/0E+^P!>?$[?3/0$W%,+]YFZZ:$Et\
%BbB&gVaFCGO#^T4$9EH;1Or&)'*MfnMRd'PO:9L'iN[f:UC=E-37*'3bVP7i7[W\2"XRT*9u7/$m:Bu&a&lhEW!BPkVPOS^iY&a\
%)abiTNuXmZC[OL8TNhI::uPNlh7\@00UTVQ*"Z\3R?W),&pk4K^ciLcpfM(D\Sm"di`*:@WJEFM$:G59JFEqo>Gd@;igL@qRNJJA
%G2EQ?T83&Td1'COe9:B0m3Bi[BZDC5I89]K;_CEHZ$Jq;<]N-?l75g3Kj%]dISe%L+L7\]1'"Sc8.nK`1*>!ja#MJ]U!*\gL3.9c
%<UhrjO5q)@6*:frCFpt4?B%!rPo/u8jl/I]nr_6#,k#+M!,3WaOjAZbD]'uZ9SLqi%(l]Z:n9G.6"nLqJa[SY#Y%;*JoKqRZ5XNe
%J<;=l2Ge^!#(\HW9_k#B<ue3&.l=Cri7PUY"Hu":i9e@rb[^'`3uCejEdNHgnoZZ3)VPh\!:P(-VV4o;`KG`YrQ+6>CF<@p!'I&k
%knL5,pB3gagXaBe&*^eDSIp4Q0%IMB[]75(G^!CsNZ-j##Am<(;t%NO[j$R+%#$=AE0(BCA?1B'j[)n2-qPng1;hpeLk0?"2%M*k
%#pc>WD8?dKb&TI-Eb-rBN0/kRfYFRYON&Ip;qZcq!7RLmfP,q"D8]XL-\5\pb(V#lZm=6<95!(:Lc&K&A"^'n#iu2P(+-nsR?CEc
%&GkO#!K<PRb]>'*Ub8Ke9]6?qK@7.H`*_)cR'C*`\jGC3UXMA.Jl)U,a;>7[?o6DXqJsmuFCYZ#I3YSeb^j2-cD"%D3J!^AGej6W
%B<D;e:bkX:;(*6MdSg^Q^OanZ<@bHH3-gMW:r)l!aA]sE@2"'`2[1\$m2K&Zj;7YN%Nt6rQB%IbEZJ#PZaGa'JP$kcL6C$Pb"J4i
%6M8O*8I./R>Z1Zs?#h`TXW\nMcX)VCrPnpMbST^[m(0?6lH-guFaW)JLgN&j*s'd+RX?.l?O@8g\/],b=i'i1OJ.r&VWrp-g_0(<
%Gu@-J,M3qLWmOqA@r=5X6XesuStL09%dn=u$atV1>']SP9;)gM3?0orJd!/3LA'99V0,o.PFcPA(PUh#JAhiNG2\T-\i,LM$I>FB
%e1e+CJO-0Km;&b!3!L@!m[f6`oh7ItE*PbNP4H"/#W7>uXDE&+CLt0"_me&Ki+=U0"p$4_hd"\uPmY6]NeE??*;.FU$#P*\0_&6[
%;E6UHRE1]0bGq.^;'Lfg)Du-LNEl2uAZkX9IUE=@-PWe8fJa+M"G?C21"`73$Gn4F7Bh;hA&+U]K6jf3J`o!n?uF#2;B&'(>k5"Y
%4WRSY'M9RWJ9IiUN`_lH7OXgga0(hK"0g5)D3MX\K1K6?*?D[u;2DM<?p;'M^3&b&j.[#5`5$&O^t*?ID<fK$3s4T3MCq7M=Mlb.
%iRj5AO).N,V5dpo#&XDG0aW'rbQT?@KQ>=c8]MW:!X+`?7[R`2NBmeF\.L/LHmo(h[4EVCd4&B4'U"EP#k:g?I>,DDo#ZC%U.@ll
%i&pX^#K7Ha,n)68>Iq4HnC[ib)dukkar`BD"9p+H5"CDpE>!ehPmU6N\E9Th^sk+_$U)HW-pcr[RTk*HZ[%KPUe!@q!j9L0$?0iZ
%(P'cl(c:kO$9s=ps+f3!kdh[(D,/:5rC#6u_#dP4NlfZE55?g_mMc>RQsN</+u%8.F^>+&IPu8)@[)dg!N["2D#t)69hSn1"Ntbl
%\LAV+Nl7Er%c;j/Z#iSUQdI/cai@S=^pfmTq6bI\?.cfhK5h95DR1;A%W)P+FLW6?YP3'o)89T(rFk/Q*$-ZkF;a7nq12q$)<9as
%Q`^4D`Ig&d)htTef>#tD0\-FB))ibr?K/d+*@P=Y@!0+?1-jd`1,^Q=)W/Nm`"ae<8hgKOTB@&\R-Q,JXDEh`/34R_9s2YD+6(g0
%0HmtF2T31H68=o6daliUm[@T]Lh4;jN%cl(^mU,lLl$G8+q6V$=:sV]Vh@Co1YkcR'H0gl(We]2<W_,V$DLpeA(1]gdcZuG_H_/#
%hm_^KP4-M$JBHIn;QTe`&)ZY,oq\:,G)@b9NM^oq2A`!mj7R1K6Xu3>g/`;"^=@"(B_Lu/,>SMSKjofL;aA'BpBkI];'"M(E.eh:
%Ja8b@+kchtUK@^aiIH'$f$.j40DK_#%2)LJ#EC0;6U^BT2JXLlguW#Vq"^C\"83]al@D6+N7OB%D@2qbhD,mB;/5U,-U-[?+tpj=
%[up2QN[1MDFLVWjBR3@rjYHFh011&-bGXf?pl[rkGRM])Y9:DFJE_-\?`6Sf$Xth$n#A&sohE(.Y9YSAYQ/U\O^,`XY$a0lb9s:9
%6"Bo9EX01M+\*X$.Aa)<!:qWHL0%qK]![9T&?_Jm;'jtPSH)>T64-W[[>#7C*pqBGT:_+8%sYQ2K%c.kbHX).]o?(q<a(tZ!fq)U
%aG=h19?FZed!/soM6EaH,;)N0nY7@3pd"X?2N'QhNFd4GJ[rY+")jlO<LK=ppb%IZN'K]*SghgT?mOu7@LRUUD89fWV+KIKYCr*d
%Td_g?!b(LJJ5[/LfTN4aV&'cOA"jSghsWjun!Id>iX:um3A[[o6O1r+FSm*ZPo0<Xdb1'Tb4UabAp8mA\-aHfh)DOdTM".3):@2)
%FDFbn[(e]0a:,lT+^nj==BT%u!8"k"a+6XAhnlcin5uk[@=7%e!blaR0u%5CJ3[<)"oL1f^5_1[>9<+8K)ID!J9A`fCD:$V@oju$
%h'5K'@NIn*f)\_7_5Tt8,1)<mKMd;s2%_5`9"$2+cD7<O77A'N(StiE!"?Ocl.H,5!#nuS,;@[WE[:IQPe2)*gJ*\W[rS^1Rch\7
%KP2DX6O?mCUV,`%-^:ah&QmN#jrR,4qe?Ym/%_B-C`NlPd7k_j"lRQSCr+Pp=Ise]!a+.J`f!PZO(^*L!L5/CX=0;sqf%]?'`<LS
%."d4t?%pCnd;*?t(*%SMAEM#kKTVU0b\24=<*$W.]8n[-h@pl9N\*u`gbgFUpeEJB<,s]IVTL@bp]%_q-*=U%f9u5`r"!uqE#C4$
%>nJfudk3<kWWlJU1QspKZGB<l.G9FTI@[QEZ#:l6i$n5eHZg(IC;,G4[DX\kVf.h=*5I/'UR#3`q"dtY'GuT&=A)m%Rq8[.Ti\al
%^I&p$a=!:#`pgBc](PqsLkl>e&'/P<,fNigWXH'U.#"e_&kaA[#SUZcejr&NXpK9jb9/SB_jbC\P^61N3uM[W0qQ;4)C:]7pk"Bl
%hKGH#;<*<!p0e*o^d)7:4]p26!\DNgq"<(5Iq]ZB<@T`T7p"20jFd;RlgOP24f8ZeW+5.]JG@ED$dh/9!@Wo*@"q-/K,lA5%4UT7
%V]UrH2Vi\>5qW;Jd[IeRTpuVYl*d2D@f&FjCX'!03:*I27O:P]<H7(g$EVR34K5cC7ll?J5q,[)Gdl*d92(uKQ[N+Z)rQul>%<Q<
%JJl#soh_V"&*`.^r:&M4]L=q?Kde4g?Hlsga$0J94%R^*grf2W&fh9gl@8Bloo_.H:e7L^=X3YBA&QN2XEP2C,*/FgB3q7J_c$34
%cAfhGnAj$uq]hE=0plNJk0(!A=T@RWR^UDH1ZaR1c$"a$7E_\!(gE`ZK43QSH6UY`C.,I(LUfb,ipSaXrYZn=$'\2LY?c;"]g.cl
%%<pc;;;ff'R?oLK5[Fq+pK5U1R1W&t3M=grd6*0CBdRSghkAmr;kithD&,8Ij/LTlc5?6@VqJO9\I^^mm#ijV`Rr8##hrpMNSm]Q
%'J:FZTD../eVROhZ)Q1l3JXg?!*AmmLauAhOAB@e`c9(o7ed:tblI\7[TD!SM0dp(KHV)uEiDbk'EV\0KGoNt?*S<n)N]WqT10,p
%Gs<lh$F15?eA>M9ACtn39NWFo)&Y4#bj)QF.B'%"ch"PDkcZ+5\rb-&J7^9mr]KbVVY<"C]2S9Pqgg(TR--gq?E[sYEOVM53#L+R
%On<5+b9HYP)OmcRBJ=Ih@!L`m3\3pScn5`P)4UjM.g^hG=5/<XO9@[(2DUuiGIgXt<Ph*?X/W/nMCX)3;B9m"dFYgsK.o]$<`*pR
%(gW#tik3b$#cX8DasJ9fAnjEsG#bgS%0+4a4T[)._iP@,"UlM.8ND<G-?L/N8AdOFVbJnT9>&]jc(6>`j7EJJE%sUr%gcR8]CNtI
%g19R\")M<p*&@^1=8GN(/-NsZ4g%[\.ZA!S[EkrZ&J(K;"k1,XhJ8"$=V2F]68]C9L%ITRh0DN+Yd#g8BXB!/iZ1lqR@=V/.gZQ6
%+?`u`(5EK3YP7<;p57'6J2_8D1a&KR'GJ?9P!/$HC]^e+gjJUdB6gBZ2Q"+=&Y.XdRA((#LXM@'4t-L)h_TE%W^I'@kpY*q@iH3f
%i^0>Y.YLM&Y98g.pW?_04DrAXhCPfdNRU)U=\9Vhr.<OqX`Sm!GHe!aO[^i*C0#(o95a"(!SdKO0j@[T"K0tR;E4]qXr(PnG5ZOO
%3T#$VnW?-90i,Y_QB#SL&cN?OCJBMSg^^!KY:q]"ptb73EjhoOql<`/+QSC#Q#Dh>lh?a4i3m0PC0hnG"<_hI&gZ\Zd'*P).a=6C
%g1F>C7Od/SfDWiaahjp[Tq)Sm:9&L\@;4M7_$VX9l;>DAYUt"JYWg>'])jt.=b<++f=D6@@>Uj)TNKs8:dkFiO@eoT.k<>?(bXZ:
%<EY?+=(,&b2RC%8g*2qB0HK&4JP(n,^?"_I+T[1@!*S$Ef#cVW,du:Zl7)$b8l'N5C9*.X.T:EKjXdi=^>A_BkeQse<NQaYL,M*.
%TERC:)=CX)UeQ@FYncS6c"LuUQ2=B+K#MMUSo_Fa'f-b<9iDQs\rr\Dm,gL].0Q#QNj87/FXsg)=]cn*PRn4!&9b(=&D&)0c+1\i
%aBkkc>c/QkrCGcPd6SY\^kMh3C2d>O)h;_o^5s"%Mg2A!C-DQ3DY0\Mr=I#[g0#9A,[iKf;Cbjm0g'V3#)=j"_Re+:@RSK\8u`L+
%03pYP=;1,]-XXGM"dk7k;$s;A/D=nq,Wmtoh8u%h#)Y6H`hEFjj,CS<mRaLWk<;g\O.S6$MSCDWBA@bSI`AGL/".+&qE!g-C]r[<
%eSJY^*kOtQ1^qSM2]3?pQH$A/KJ5kS!&SV;am]\DKmd'1ZKAVB"9uZ[ApAlrMIM"TZa3e,!B/@#TXZc?^&Oo`AWds)^)fA7q=PqS
%Pt`8EIpII;BVj7Ihj09(Wgu]Yo@l`6!Vf)q/sSs"D#acBir/`+mK8GZ80HAOiU"2VmPJ&H8+c?ofom@k_4KN^QsRg6=!Y!`?d%JA
%W?i&!/8^I3`j7?*Q/W\<MKDPOk1e"'Ju5P:NmZ7q1Lo$FPT#4[4_C*l"FR3Beh95]!1kEL_W.@7)i7J5a$H]r';0rQCiOMV69q6Q
%1%W1*?k9&q(qF-M,oikPQ'B>00XiqM9DaM1PEe=tH+GB;o+7.gim,J&PIJ@PKAHbH".SpAq;j:l*bRScd6IGDMDg@p\@&Ph_:Zt`
%.uHZ@mU+lJSI`n!;QO=ZA'"0DQ[u_JU1K80>V-Ud*+Q<<;<V:0Ph480V1'U+35sTEQasH'N;?UO'fR?1'.BX:L4j$M9&-QamAeSS
%AT-b-f0JK8(qj@lYd>BK*?AW%/om2BpbiO2HGFL%rh6kmrlN;2%V'+!Te_iT0`[#8k<T\f3[EUcd%NLm+h=s%#gOsR?KCTJbT?R@
%+3/OFGAJ0n[]p]tbHGulie:AZcH%TX1i2P!^P5Of42D3\@RkSsj0`O1*`R$,1n^J^FKm*Yp_>omZ95!UbBUrH";'Z6?0\oK:SddC
%`Bd;HY,cR_Fo\@pfi'nf@cPE=DQ.![i1_O+R2YdHmO)]K4cAlb<,NkNJOAV+6lAMX%+(;?ZYR/I_U"KHhIQ;2E=>3KHHRE7NG_&:
%=3rc]Q9,!YeW>7CZ04PgQ:u/[jM*GS!ZP-cENG<1ILZSJ0i4(i.Oh,*'#4@lUBh9]:r7#K@i)6^@Dkb0.B54&PR,(_\?!iF3Ws[.
%'U$KmdREFVl@!]MH(j:2P%!-D4Q>"-a(&lBi[S\iSpTA83jGT(nY7L5&i_->2Li=i+4h5Xj!VT_8j3NKdC3JoB+ak3_B'hr`0p7j
%Oe)E6643n'==>u&:I\-:cmXRm?qeu>@IsBOl"Y=YB"Pu'?'<Rf<"qt?aO;/mD;]-6\oB!r9\@2O\iB7`_6Ve8\tPa^>40CtnaoGi
%IXY*[iZ^d=Cb4W+JlW&B%[iNQh`CJNH=Ek(NZqP/**it9'3+EGI(K9DO],&P?5O?;\.%UOIe21SY0!Z5rZl'I"id"[MP+0qVSWlu
%?Utc\M^Qh]i!q[<b4A3u.p.J2=Yb-dGh.?Mi'dU)'MUG"Mh6%'<LIr^WmXS_\O]r!-4[%'6`/CI#n.d;I!Y"#:LrNpK[g)r:jZ[J
%H*@Fu\It#*WFuVST#F#JJr[`ghU5h;^ae!S^4VB:=e6P37<P/g:i"`e.=glI64aF[(0g;WF=5k'mfKct?&5Vm]NO+:.F"J9Q#d.Q
%&E=U6=UOI'?Z5g"%9?@J2?gpf*$UPInpj?`E@$pl)+Jp6\-:i:8:VE4UReF;O=F8q!m#=&0%qqW>683I,cD(*K&B/E@.NW8VrI$u
%De#Vm.0'p2/q:S.HWN_f'\8)[lQl./!>(r6!YH`mKi_Bd'GhNVeD^P,WtTi]m"DHNN2&X&eOUi`dh29B?-OqtU5,rd(J3?ZE(dbm
%E<A^EL#Z7>E$u#s>R*W<Fc3o9T]Ki7W)P)%I#:H_f*m_RDC"kAlP0YY6%]#CJ@OHnR<jJ,J.`e]oj/elV++W\8+<]#i>T!+nAODq
%8%X6eYM1C5,jTE]58S7V07fit[jc\0VI]9<$(6<X1%^\NN.';U'9Z9LZN<su![l.6,*^=@s'=L'ZGooUXm*K1C#0S0<"1nG)alcW
%3t:L$A=f`cF$]`K4cMHWdTnA]rIUaUJt0^ScpNWNc#'FP!p/1!%!(D.l*(huG41\Wjad>fVb(`&.OGA`%U&heLOum?kBj?7B`'WF
%CI`t0h`X#3i.6bnPqFW1Y1hY2-=MA2B'*>LNS9YRHE4u52S(D<Mkf!("PSLX[",_:"lK,BlH2!sM\PE\1.J]PZk01\Q*+HZn:Eo[
%.l/,%[,Q)rYZ,3>\j_YokRs#gL_T+qRh'oK#iFm$o]rKDjq2Y'5aE\:1<*MsH6e:Z^OFCDGg5p.D,Q,=\::EB!.rM]h!47MM]i/V
%98<IZ=m3:$pFe>%jk7#AVu24tU)lE`0g0%o4@AT$PWZS//fsobeoNkpib;uZ9Z=sPJ6q7Q2>p.#XQ:q&;Xr]@>Iu8NVGge[JS&R2
%l=s02g=DtRdIU7Y1gS('>h<'qASoFF?M:McNL"pmA#V(VVkU[)/f:SfK]+eH/+n<AMs-0:rcQt\Ch*gj=8@a>*td>%PVi=b\'/[(
%gUjm`BDLCK4hA8FQDY6RTBPutpTR#1*5?#j:_T7i'fpLYArkT&aDNBJD^=0IGXX,b`RY8k()e)pZ9^c^O\,uuH_0Fn0K3QM2J4;@
%33F2I-46?q8<O"B;Pu\ci2`YK=&IhtZ0&=&:B&?Z-$Y4KA.sO3e&*CUR@SXQ'Y7/TG>W9Z6`VR%OG-,dquBTY1bV;-QO72k0F097
%M;H+a&,U]k9o#-jdY6Yn7>Du.5uU^e,k2.%l_B:F_c@@bE#OOs#2HSS3>ACbDWN<;;l"RaEbiQ_@aV0\60)?AR$FstEc6Tf$`7HP
%Mpbf34+6JnT]ECemDW.]+Xq<G)!i$nYgnKHfXh.6ghc[T4.Hlq%gQ]lA]uu,8mn98P49oQ^k<+Lk:3pllKaiqr%W"F\Z*!]ROf?s
%$DCK-YUtqb=`4)I9JS(FUdL=+(9GreKG)tDVJ@.-WK600O9%&h#@t)A4++Jl!2E8R.NRSt&2%,H5mm17hIKF>8h/q5=+#2sd?<Ps
%UB+IQQ9m07)(!L4/;uP])G`qXqb9,aZJrf!9c_WarU>pU7sP\3RX>uqVrWD3OMDZ+PolrK;"]cC>?:pclLuNTfN&-=*@ur@BnoW&
%kHSM+I+7#"H[lO-g]F)%o!M[/%IO/RBcY'+,M4+*5uCUtF$YX1WLYDfbZ78nY23QgJ;*BmB+KB6Hh[Y3I9O@Y+lR$4Ar7WVPY\dS
%*$a48]33_keYQRr%t`5'+*UMCd,L;N9&jE%4XD_<1N4%\H_nEo:S%\)GDUABqiqN^+QP)V5DkDR$(Rceh8C'd)6@T[-dsn12id!u
%JpMc%2+>>;YIsU>n96DBaBK?Y?f+U'8?nLcdcOH7_"0ZldG%Ve?=`,?^TW#*g=F/h<98TpLPAjUQUR@dpL'=;q.Z)MP$r9S2u_KF
%XEg"d%'Q<CP+I[8MZtK=W,n6.@3_!.@!/Ai:LWPSMH$]a$2N']21Ib'A!4uQ=]L>dM[CRm%",Znk$Li;4thbc[o9G4.U[kKJ+;!Y
%B1r:t5&i;TJ2sSi&?-;:!f6[D6:9/H6%B/[s5i$-G[m34JN`0*EN>Uh+i3ETn`BW;jr:E5om`Bd7A7aKk2S3]'8hfEP5.pr-ZG*E
%npQZ_I-2_X\h^5hT;>['2eI(ZD-U'$S!%-%]b!$pBp&0nMW]#>a=k^bKU)'"r3H"=Ylcg-rm"3Je1m:ilT[Q(T9?G,SR,1PW2B>f
%Tc07mNZ-)a]QVSRJ5^6_9VH<lWc(rJ"miTq0p_nV!/<hj;VuXmdu4H<_G/R9b6?5"OclhH_C6]ki"0gi5g"%j:\U&g&eD.),\*cC
%es#:\(C\[B1l:ADS`_eCb_dtI(MKM?+B?mqJEFt:H4uHj<nZ_B;a$H;R)o#"kan6jMZ)JQ=tN=2DHd9728S/upn[+p.g^Ypdu/<X
%WAtVm9J7\4F1?q.MRAa*dAD!@Dbp$=-Gc>*[[sNa'V+SGi=p6n#qF<+,T$Q93gMWY`sY3-C&[Y$WE2/OP,`Iq;NmNeH/uA+-O!@'
%?/0Gc74-ul?)B4c*;g;!W1_Fm'ru2=YZS3=mT#D>m3X>A("-0t,#FD6p_?A^(%GY/0-=3SV0&_),B(8mOTJ9sl!ApK[EXLOZ(Jnp
%M%2iKbhkk2<!\QGE^E?'q]]EoCr"I0JQXa8cE.!?2BghF*7AH;8#;U[O(-hZaP0\a'=:2k>i3tuMnG2f#3)QY7p$ZDVCONPf@io<
%c:U!GKgfbneFq7P=E.33?P![?HaRP`F[i=MH@5@nAKLteF4W$!-@p4\cm)QGlbg+QRX]XdbPo)aH-Ee<P^mhq&2q.kp$TlJT94eE
%9t(3-<?Ok*@_YP/#WV>G0E<,k/.8`Ti/4[nfVXL.dPhCV]o&22Y%\74!jop?)Ja)r0J%WdEhN%X`H>Y-S:utb<RE_Or'u^er[k9c
%M]RPnes;.#P]%`KV69Y+(IW6$YUL2%gBM`LZd$"R0G2@pBHP6VUn!RAXHDQhJj.l%OVD+26aO`@h<2'r`i^Y_Q6U:rb#a-K1M`?-
%VE]NV>sD3Q*8IqV41\Wd!j.Uh,*q9C&m*SZDaTT5\NRJID/oiU.4N@sAt6uaS&pVE%%Q,,2dQ<\[\>7G(0#NN=Kub4g;C5KZa'6q
%*JnqcnYMt<Cq1&CXk7$G)A=WcgY8s"&Sa6ldV^nj$_nsr)_5V_0qGNfpNS;scr@Y-kpEkhOpr)j]"0=Z;t@c_OC):<fLHLC9i5bA
%AT:k0%S`eN946^j!Y4)0%BeE@OBM%BO`*rK#sdK=e"+m-@KL=sl>*n$KD2XpPRhR%?ugu9XD2:kM=bDWC1b/VX0bQ`Irj8H*P(X;
%rejCY8KV1J8P#L`=ul<Dhrt1BCb%AXXE#-6gl(<cEAF+tObH%Z5"o\:(,gB*$"f>r72r&"D`,U#m^H-r$i/TT[dpnHIoV(&L?hN4
%2=n(_1XU138mUQe'#>8RN`3Ea0Lnli&sf!_3]7Mr[j<b8ko\OK7>Bo(cks@W9&&*!]CkZ!.c7*c"8Uf@f+P@P/e@sB`A3G/W4)?J
%@QB`j.#/1d]tjjJ'%=e&pBsKb'PMs&\*>"AeH.a3HX_\PII&360rG>L6s9u.\`Oe_8_@EE$;)BdF&Tjq9sPKJm\^8f6+CO@^jtfH
%R.)e3LI.K%#(U_HIl4$X$:7LWGO0RBY*.M^(`mE_@9QI-O'3kC34pmB?]YnR3Q'>7BpQ'Rh+^Ugl]-kh6+-!SM""'qRisM%4]M_c
%i,O2>BOuPBm^ZBr<LFFR*)/sa(:l&i;F[Hu/NRo=<M5*l6#+L/&1L<)iNO2U$u*LdRMeoM,%O(_o@on]O9nLuZ(@pO@p(gKo#ug[
%7KEBmrY6`]P1Yf@-Rq&4<,C/J_;1DsC-=RgA/U>\Q%)kd"A2$EUH72'Ohao<*?;Db(pj9$$(J<hg-3r"WK6JQ'"N]SqFp!]M4QA1
%:cW+j$qq^8$Ji%O[lph:;XU'6U4D<A.DkK)INbo=TFcPs1W=9GDb:+q0ar9Zf+UU46G/t3*u`QK>s%[AM^?$Fra`)E\bn57^?$W1
%-jQ-=]o[)[pM_n>!BUTpQ-)+>DM9!D4$PU.UWtNRA(pfbrhT+8M:\JGM2ka8CW'!(&.Aq"1T;.to[+]1ll0a;H)Tn%6\@KeqQsk%
%N>!M.h"F2)Q>SIMmeYu8E4d"[GoS"Bj%t`@Hj)_4Qc1TLN*>lWMinc9XOV%_4l$E%kG6m)Mp#[SC,&L%9""J.F5'"p(&s_sl63np
%TV'N7o"/"NZ:B@#ibb1kh1d+(*up#uIm!#oBuck%.:'VB0%ff32`d\7iIdef$ueh2?KM<:,.9Rokt%(k2^?%&F_,<h:Of[?jftKl
%p7^>bgi]a-4+?BA/*n&]:Wl(j9^m_"\H7fAT9U_#pI7^glfcN/Lb:"e%I$qH$.<P"4HoQ=Vh`&T&jQ>P8"p]!qV.X10=e\^Y$P9>
%i,>>NnD2"JHJ]D<&S,+/WL5GH(fOjqj`9B)kmSdoc9XW@Q541ZE_G-G-+,5h1i%,!\m`1JP=duK?WDU*PQqmEbH[\!SfH"5g:6$X
%p?f__GAJ&T+qR?k[Fn(6e",B/P&`qr8f4j_pE-Q#9'sTqmS9kd3q4dbI;;<Gr-?`c$^Vm_U?nea(.";''P\/X^nQQ8_\g'Ch\D7,
%o_WKAdkF?;2RL"8]RpR$8GE?$PF-o^4Fl2jBLcmIjkk\#ICF`/l1QM$FQ`Cdg`e!P?ZDfUStLh1=[82H)#_dI.kKkZG=rseEn9Mi
%>-kN:$.15GWS+.Nac/BQ'1KWK?J\Y6dar3sO;nEYgBXRiRQ$%DE_*f=W/(9;I_2(+ZGiIa8&%+TPfPsFF*4f)jZr_Am4,ap0WC5_
%UG1cuDE7WX^-&p\_Z;i9@DLkg2uC5eYR0o48hlcaA-dnl71KrEH+_\q9V>tCKh!,^RPbPg.;j17;i**49"^7\9E<LKrA!lJp-4pu
%1&^MY:E`';7%P`!,b4Y$OqJoT%ctDa,cHq^_S4@sN`CA<8BBIX\[GD8@*i+-75``ZVJNfM&g8Tr9rDRRh:fIb#)7JF@XFaC;=XB(
%l8J<q>@&SV!4-)a%2GV#:iMT>'GYc0N-+_eX,cbi\=sK0K5R6RRL+Q98])JS)*22%$GSH2?o1nX6U_(K-,><NI!?Z6ic5,*e8d=D
%'9<2dj?'8%,i9O$WKsH@$j8!s\6(U5GdSA7e]2uK^pNdpaNCEadt5'UHDjef(ft7R1><`Af9`C:9cF2OoM\e&;a\#,,HEOMG10VK
%*3s?.ZmtA;kjZ[O'`P[EEatO@.!?sj4XGcT3$j3OJD_IB`]<T(Ll0DpC.o*Q%,T`4B;UeX95)Y+m#d%uR4RSDR6=t;9p<'BYJ1Y\
%IEYooB0Z=AL]&Om&&t]+#=d?#A-)qQe[e$I3\!s)'V,Y-*/nf<Ao-Vgp"#^-0<PlGFj.MiV2'`g-+g%BID[0Og0ksdm,F03RqO^2
%C/ImDIEH<ibB(Gq>,9OD6@6I.Ud2*%Jd*MaQX20l0iqba1Q"rD#pglDSW/`IeYEXT=t9,E-0PYFo?g`*Q/a'`D'WY9jZ4L]c+":7
%.\J-I`c`W&Y2SNp+lrIShp,"M0L2Q(hf)mE-mT-f:UKMD5tU8A)^d\[J0%jPD/kmd^+B[TpU:YD%cshB<^bb)Q:\/$B2jJR_MOnO
%/<(/%bU8WF5<def'0f*XlV@kMJ7h"+[IrXhjV!3!JG>j)DSEH:i+\iUZ"4RN/@nbg5`U^r\99:B7)^kg'7k3L>_EZdMdr;7&Z@o.
%7M?VCdfe6IC470,7b,\kKOaXIC@M?X]K(,L?G#Xj0E3\pW2Qq%6[0s[\aMO`ep'.OBl$aXmll,iA)I4Wdo/0oq<7(j^\l37^TJl9
%Sl"@>dB]2(GiNLSKJ9bghu$7`%U&]%O*Do8(pqhCqO)8L#pdP4]!\C8GuJ1$<]1%6@?cKZ275RPLDZa*>L+RXZ&EX(/=B0]YYHJs
%>EqEh.S<rrC:ma`ZHQkTpENV0e=r.:f$4cY]F$,?lR):<^Qc`s%MR>XV#c7`9Z[cqfn8eK]@(+8o..u[KJfl*oLAmc[QBRUg;LFc
%)q(s@[]PEDl>RB)9".ftc%(%2r.jL(>;b+!a<I/BM]+BN_02&?,GQCibb0`uiec_E/];%sbHu+K@"!R1'Z][lF/]kcb[Yp38*)Ds
%=_oHgfTd.#1fKdnF)=NX<a7RU88Lm,T#N)MPH9p9B5Oa&:fV,3a<Cmlb[3T3\j4M9L6=@_jV3("To/&qnc0*Fg,5*')_s4f/&g`_
%Tb`V^=N*fBSZbUCXk<nHpKXdKWF7clhhn:5Vm'*pAgM3QlT-9M"`6nZ$pknIX]jC"UNEP1)-_!paRED06ci;C@F\fOlbH:qit*$7
%Tm4RUZ%QWA?nWR8IJX/IrFD#:Z<a`8_h%R7:X9lZRUa?aW)O2)-0<3=59bLEl&AV/oON*:l:/(a#TEro&lKH!PTj,!`7X:>1o29i
%hKU'[qg>S.hlFXQ'_J7U*BH7`5*.ZaDa)\s-T`3%[g\RXb@gG#MRkQ/kG^PtQUU?tEM[*\E-J0$bEc`S7J`hj=b-R"Cd@%%"p:*[
%j-Ms[c/NH,cf6"a@7-VEh]+Jp%Lb)D.nFVqj,P\\Bff+-.@m4ZRIqd[J!VZprJ\?I/!N"Y+l!/`9H&kQKf;+`]=\aj_T<,PKAltI
%Lq$Q;1%$J^Y]gus&\2/+d&7TE7kClB&QG\W:;\CEg]:qBm[W$9:`L2;VBb2tr]4V$`lo8t(>,iO[ZD!2h6Dt2<hoD3;"pDSDTb<?
%duj@kWChEC/6JYAr+8:%6sTBRLTq>OUj2e+FcYYX;2_0spE.Ybk>-R&ol!W+c)l'J4B<O8pe.;<G%=`4dY?"hjARo?Zrjo9N,&^4
%&Wmt^/&q`UEE/MXb2ksXBEtuTInF_o9E@:X>*7jR*cO,6[@8LhotBj5cE+MO-qGfN]qTRaI3&3(g\5uP7)Qh,B&+rsYSdGX"_gZW
%ALXXkVH`pFriTdel;[EGbtjbG&e6SF=R!mU+qPXne*b\)A<"^&_g*:0q2fR.;Y5U^\<9[sj@;Ee+o/A!G4(D=l5L[Xei:S$*;It3
%OB2n&2Dn47TboJm'0hlk&=7XD]SKB`7=Q>1)oKPQ)V1sa]4lK>=1Jk\5a(O<(md]OColP_]MZetcg3N;Pu\4mWD2C(1`G^UUhG&R
%c"3%_B*N%4aFdD$>2cj1;9>/+IX;ko_/uL%eTB2T@!jrLVK3CQ/TJo&k,+.aY]j\<c%&8>fdG>?,B]u-ZIDX$fVFL82oi(E2uZY"
%is53T);P;E\$qh1AP@l].(SQ!RM8X3^Rb>+"]2&u&a?@F3d/W>TW"d.0u;Z7p"4Qf^ti>B\%V"MauE8Z7TQ]AXUCMIUnf9+Gp?R\
%HH*C8%Url62&+!!g[_!M3?\-57_<"\<Hbg,c4+Eb>$4sR<F[KJ:MJKc+*aL8H-mfe4fpRp6d?m_@9Y#T_pnfPFfDgCAlc3),D(X1
%=I+]_2W1Sd4]`c$E2!/tA;\pW50&p%GB.Bh.H+hL&))Xfe?^FKN,idFb,XPm-'D_Ib$g.h0et8Pl_fnQOK$d5)OKaHXK1l(k'F03
%?n#-k$@;T3^Ki3Q&kAD+`,]r-hXt#Ml;`A1fA*(ST5LZ?9;&RmQR7sVT,)<1)Od2LP,_^sf!@"i.:DE_^%EjV8'm\tpZu!F;/OW.
%60VjQSB4\H7P79k=iE<+0/oeMX>M/gcM'%uZ,;$cq$s4@F@<_KX_o%M_hspf:GX3-3GG$LQbQK]P'.`)!.[$A)trO$k6k_l\?2_q
%n$_[+<gNgXE@Ii@;Q^;,689B01i.`%9(9sA'j8f%^%?"QSPr/)/bo_R=k=+#)>g6+m7a'R=:6X@U@rO`ad5K@PWc..e3(<Om=[i9
%has/5)CEPR85*1MLaXEsG'>>T7YV`TFeE34\UfIs30Nm@Lqlt&L-r@@6jSAdpW#eh%7%J_/41';`WAN'D.3%hS#Zh^k!Ad5R&5Md
%Ok@_%RLq;F<gadD,uHIr5&a,2)&Nk57f=]if4%@N%uW_mII=-s9RCc'DgRhX3+>1mj$k,QcR)9p+P\W_Cg=mt$ed]21>P%S)'1m+
%^I`HUhk/agqt4`Z;4AcU,M"X&)q/2oE(p=\^$fbEeJE&W%a>K+&la]-p6JT<)$+//l(CmZSNp6F]#jTJ3=3OQ''.liq?*Cb9Kt8E
%X5O:0L7aq$"Td>9i@A7knXcdm8-EQC),MG=&aU-3.0l:J"6=45i@,:-`nrXJMH5?*:cIWIUQ6b.RR)]Bc[RHcU'3H]4c@')6p)da
%ZrA[WY>`Nn]S1Ia7"s[4\A%qQ*R`$OPBk5+Tj%O8?Q,_/6qB^2[M#;FnLaR3d$J2<!3]<TSgFf*Y`plt)Pn4:?5`mHiQ]"SdoR7(
%+-_e+dk[?n@jchIi5Q.*:>fXRmqei,Rs56L47-"R?oXQqI@JG5"0@bQF^ZgT[_1q;=T7:&5Ys<sO,KHdp%J2WH\_OtZnpm:>uL0M
%onCs<c]r&S#":7;pm?96gJ%r]%Oic._GtLeQ*#"o4.&s_^SVMRO77h3ksS!G,GOP(!!t:,m&$HJ^$O76F?<S6%$Q!lb1b?Q99D,s
%Q\9pb3c_J;Z=IrWL76:d`e5n!D3:0F_T_WYg?`Q5'*JE'oiRg'WdYT4qY22.\"f>k0U81.!:stY:$c31W3KYD]c=?f#RLu$^n?%Z
%[XI7j>%$Bh<SL#fSb)'.bq#!K)K3h"X'@94Kg_=,fJW%oY)+o.+Y*u%F2NX0\\;t%NCG-D]sTK#5/aS"SGU_d,hQKM>&@naM,3+L
%[lp6W>qTTN<n;\>R>5;@O\sGf?`'QfP(nF^AX^$`)u:FCa.S^Mj$HCBCKpJkmHE#0^WV-_pg!7.GY5TkTQPr;8Bd!9TJIiOF@dm7
%OH?K`51"K!4fu+ket,g,eSNihZ0'#ZLQWi'A%0*$PU%O7$QtB$`+l1o+;)oA.mcq.6kQ-G2m7%c3MPRjRXLjhE8lu.<\--.l-@%,
%m'_A4/+oVe0RVV7*<%cqT!A1cEf4LB8Di"Do?hP^48$pI^&%':JR!P+2=R93SK(1'Rk&rYk(Q8M'Q]dRii`B.E-'96?TJSs)H(j)
%M:p_Hc9:A!DneZn#HCID;U#UXD.XkJ8fpVOZjP-A"r$e*+0Su-hMEn:&P:lW*U]BYPG^(g7'81M:KO>1=&'`P#BAQ=b^,3QR3;cR
%<K,%g;%;4NPmh9Gg.a_8C'Q$^?QsfX:YC*U:eIa(#mYtXG.0%cIn0obH\t.'JBBXr??3Pt(kc,W2rBc5_)ah?h2Y7408jQel.:Eu
%omA0$%#7[k$b^!UBS:p(/-8me_W"BL\dsBKjRqO!m0P\J%2UZ*i*RLCN:;QJJo%07nht21(b6D*]8u[haRl8E46':t?rUolYZ)Cf
%-,it^Sp$V@pZp5OrEc3O6hn]lA9`>@s2AhU21hc+3a::*@CqN;g=6h"#^X:K_F(ZP)TjP98'6=sWec'.e9^9L6]+uX*nrYIZ5W^g
%^QRu"A7Ye`cq3mAdq)Lj)uc%9m&L_\^J7!de(s^'l]fmiBD#j/K41Jd6-4*]4NMQD3__Y@A2"[M7ms:_-).XmKOuOQ]mH1slo`J4
%)G=Wh-%2.O\\#X-]"FYVR`j6%Ct-7mdRfP63JTGL5#9e#a3^qe;F+ZC<;VU4ZBK^lW.3?6QqOEuZ7J@he1W"l4+5n75*1F]^gs26
%"'F#Mpi:;pB-A0FhCq`$Z0Sr!H4kuK[jO"!>"q-cp)L'k.HguS:<++Ih"Nj,0UIt+1jse=dWe"]<cm@-Z?'L^9)cG0;p2H.=a/J:
%lPW8acCC*tU`'sH;WkY%n_n$l_H%EEg32+r7UE5gAktJ0!Y$FZj!M^4[82LN7)+G^(lS\Cn^eKJ.IUKj*8lWBVbHI$!XY,GD:,R-
%J;5[>o];@W*'h4r4_i%[(9*QAgo`ji;ERpCfCQmAgejO$hr#F-(=dg4<k<G3SOb#ph3+foLTlDf#!2I@X8mc]GL%!E%Y9+OMk%3r
%O3ZLaU'UF4;mii&jJSdR=q%n1M*W%Cbs4aMph+k"E@7D("%MND@L=qVM-GVKW8u]PR;oear^%;s=r9(h!RCB2gQ4JKVBc:[]9jCT
%5uC:Xg?(qDAsg63>_TeXnq=hbqWKOH<"`B`]5:A.XmisrF%*AT1I`jB/n:%M"dC`($A;Z4d-04h5]HQrcOd#RR&N,Nm6JQYop"G^
%ph\d5Ts-*Eai6?4GKojgZt(VODN.EA(j$"@?4qoK[KX_G;$[[#G2l/m(N+'HO?KN6XnBf4#:WOF5#(C3Ok5W8()J.6q2RB\21gHA
%&5PP>:<Nq\U/cJ`j+_*U##HY;^F:sB?!'=SHiRDG?qFfhm\Vj>B+tOI-6JY)UD,bWCM4\</@0A_&'Y(je7ktZho?Jf6S-A]`l5=@
%p.>*#*AkWiriu%kK`U,=&$@C$bG//V+O5@n$%fmFGWF.tEZXJP9R)49qmV%YAZc^d`#LP;MsoKi3E6gt-oFFqA(Z3G"=`YS=u6!<
%OM)NIjMk,'S"teCKHL(L#_rK@hn8`@'&X_p;lbUfah!/%Y7E#4>pifAJ,,^$r_VMO(7;<CZogg?I:JTI#Hjbf#;u6]?=1P*('+A%
%^5rCJpE'HkiTO*;L&upc\1nn"oj>).7';5>8s2VsG76(HHQc(S-d00L)f7b"8pR/X'B:o6TMo!OMmWM[dH"&=<t)9:U8^M!)72Vd
%@8geSA,+ZDQ4DsVOBku:=P;,[A8m]4#-_2G@u12#fkh`YY,VEMF^DcT915't9As]*[buX8/gn-`7eroTRDR**(a[a"qDtpA_JL%U
%,07t4ZX[`T?cBto&`]nMW7td-2WZ.gF'E"0>/hI2WHeTP\]V>(1+sB4n;&R1G7Z#Cr/j`:/"QCn8e*'j%gt!^Y-F7V;T6C#FnEHl
%\O*AH*o3J/-Ia,0/k_h#>Sq[+X9Q&*e8[,A6)@t<"-gI3R3>&m-*.l9bBW>V+K-&JD%"S$RV=*$lme9[_CZgFH#<Eq,Mf+k8n>LK
%b8a;b?S\!V`&FU\LIt04%G!f$kaF=r9Euc@VH+3?&Q*Fs-'DRN"g"09K!n?B^Rpet-r5i4lI*Yi7^.qb:K#`?@W@8T8TJ#I6AL^W
%DJ!j[<C%A0\S\6s6*Ebbc/Rpu6?mmZC,8K97NdbRJ."tUln)/FI5/dAa)#tdFJ<fL'm6Z=rNsHTMUYA:.S>`V;(Ljsdj"$V+UOsV
%!R0*'dAP+D=l\T:2fq!;p;`ZASJb4uGudEBoZfS_!=g[(iJTKbP_C?YM-Y,(XMfCDi7<.M<s7ch'WdaL/!Xj7b.,%\Jh,ieouOZ^
%@Y*JeI5gN'%%ZV9e6G-j+q.7WV/>+]Bk\+V&LCLO9EIA!^2OudZQRoaqWJ`UdPpc;h"Ia#KmNGn_Q7!<nK\*Q,8(K:4dXG2\8SaN
%<UqI%WhM++::F<!*SB\>F_C-"2SPl*9"2:m<$p'ZM`a.lTUNY=lR(\XeUNSlp1C_++ZgD1YN%)YEEeZdiI8l=Y%42h^UAEX?!%t$
%T"![enfQuD-46s6Q5FFp"dn\-kqaKc-s[+m$WFe"M/b/(O85IjE8-W46-^iTQ:C*ne!Wu$k-F13mf:hVfg=[<S*X6f_@JPV<sYms
%^MS2J,p%i-S_S684fl*;5VZ!4E@eWncD:ek7a<gpVcqt/QEY!l/P.Q7!#n;hq!Hk.fkAWj+-[+F2.XI#;jNMkZ/@=U@cZ.ni?r'a
%&Y'+7?<ocK_aR9TVFSAq<TcNd7IEPtpElof11,*`8:4FY#*?sZVB$^0_R78^$X?94*6bgl2q2VXq9XV*]62IRi2pfBhUIof@]Yi5
%&1#aU(BLiH'oS0>,oF`o!:K"9<+79)Ffmd_iEGsB*)?$q)d.DTW#"p6n?fR=Tq?:d/WG5R.kb4,-8V-lD9EGY/Q4f*S0?u0WThC\
%ag4DO!Y(&fO@jp=Q0ju%;nT#hgOJLrqf*&?JY7E;jt?IMg3SKbh_DV79!^Pi5!9=^T&H-;7#SJ19E,a]3NFg#b)qGglF7K*KrH,]
%UF9&4rhAZfUh6ZT][AFr.F9rC/!Z4gku+/[,tOE!jpl2OPDRH!:V2C9qde2L@lT7#:B(R3]:_n:Zh0d8&Nd$CA<sb]=X\,RbCPaY
%C9s-FCKVi9IJc,m<ZXPkG\;X?-Yei7*N7MiDdfD;hEl(IPQCu,>>7.dR[!]pP_/(ag95_>.b7DN,on.C,'4fBdJmHC/lB/)+g7$]
%?8KC$jY;ThEX.G[P:Zf.3PuT]:j%__Fe0C*V1DJem7HRq;_FMdo@*#3(+fEqV1>_8o"=bC8a5E[o+Z&Y8>O/%nhba=L=H\kWnDJE
%eECiPVb?P"/F'Bm$*Zsbe-@6KKZ1phT2'eWQ-aRXgTPcYr'gL4Je:IH+pQb$JM;CN=ikQ7Ip]?-bqT3GCYQer;hfqC8rjm8/aXBX
%%:dSKj;3UW%"%$WlEHE9dk0#GHC`?.7_(:i<ON5SmY@c#Uh_n.<Z%#)kGD\'*QqJ63l1*sd%*X3fku)kL'eLfB\5uE_a,$%p2p#X
%io[I?3tbdhCOlde.IR%*'pWC[,o_JUjud[]#(`'o&YNib29r0n:Li%o<BU,Lp__Poa?]k)K,GnK?C"s8Tu3\poieu_\57a5m.@%#
%e[\S/^nAYU<UJ@:^</bf;1W.&>//cG^fa<_%r[PeT<(XUn@Ole7E3C2e+BQ]=aU,9]`#hLGl+Cgr:,PlpmW@Tps!1GrVYinqu+;-
%_pAA]bHHEg=0I24r9p8-pWNU4p#gi%pKrCJnV?$#n`TrKjmD6gs8EOYqY<q%r5\+f^&@BN?iKhu5Q(B$gE6Ig&-!.bpsT,XDgq;%
%s6G16pr!+:;6j-h~>
%AI9_PrivateDataEnd
