%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 6_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 117 184
%%HiResBoundingBox: 0 0 116.9573 183.4605
%%CropBox: 0 0 116.9573 183.4605
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:32:30+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:32:30+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:32:30+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>200</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXz3+b3mvzVa/nFaXOgmS4g8n6WmpX+nozgSpLOEuUNNqtBIhFfDx2wMrAG73Py75g0vzFo&#xA;lnrWlS+tYX0YlhfuK7FWHZlNVYdjhYlMcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirzDz3+bN/BrEvlTyRaxal5hiFdRv7huNhpynvO4O7/5FfvPw4QLUkAWWKWv5ez+Zi0nmjzh&#xA;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&#xA;7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:76bf2023-5528-0445-9af4-93110b4d178b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:76bf2023-5528-0445-9af4-93110b4d178b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:58f487a7-5cf9-4aff-9d4f-4781a66fa0b7</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:76bf2023-5528-0445-9af4-93110b4d178b</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:32:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3.280569</stDim:w>
            <stDim:h>5.568493</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -183.46 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 183.46 li
116.957 183.46 li
116.957 0 li
cp
clp
142.276 83.7122 mo
142.123 83.9222 142.033 84.1297 141.975 84.3343 cv
141.853 84.515 141.749 84.7201 141.685 84.9705 cv
141.292 86.5013 140.907 88.0184 140.384 89.4085 cv
140.4 89.2161 140.424 89.0247 140.43 88.8309 cv
140.511 86.2557 136.511 86.2586 136.43 88.8309 cv
136.377 90.4906 135.633 91.8709 134.395 92.953 cv
133.568 93.6751 133.612 94.5985 134.079 95.2933 cv
134.075 95.2943 134.071 95.2957 134.067 95.2962 cv
133.428 95.4286 132.652 95.4788 131.898 95.4115 cv
133.459 94.2484 134.392 92.2723 135.108 90.4647 cv
135.506 89.4603 134.672 88.2689 133.711 88.0047 cv
132.574 87.6922 131.65 88.3934 131.251 89.4017 cv
130.775 90.6038 130.233 91.9666 128.989 92.3949 cv
128.991 92.388 128.991 92.3827 128.993 92.3758 cv
129.412 90.8099 131.054 88.9661 132.263 87.4832 cv
133.075 87.1165 133.407 86.3612 133.365 85.6121 cv
133.413 85.1043 133.205 84.6449 132.851 84.2943 cv
132.552 83.9417 132.137 83.702 131.628 83.6678 cv
131.218 83.5951 130.788 83.637 130.392 83.8172 cv
129.74 83.8446 128.906 83.6829 128.475 83.3563 cv
128.025 83.0155 128.044 82.0282 128.108 81.4813 cv
128.227 80.453 128.287 80.7537 129.167 81.0594 cv
129.898 81.3138 130.554 81.3763 131.289 81.2689 cv
132.293 81.742 133.761 81.494 134.286 80.1478 cv
139.355 67.1683 141.931 52.5736 137.002 39.1287 cv
134.951 33.5365 131.774 29.1092 127.802 24.7533 cv
123.985 20.5682 123.208 17.0731 126.206 11.8289 cv
128.328 8.11752 131.268 5.08968 135.437 4.64535 cv
135.757 5.07797 136.256 5.38754 136.947 5.40951 cv
139.608 5.49545 142.257 11.6761 143.452 13.7298 cv
145.105 16.5711 146.577 19.5091 147.862 22.5335 cv
150.623 29.0374 152.52 35.9686 153.192 43.0125 cv
154.578 57.575 150.895 71.8739 142.276 83.7122 cv
cp
156.56 38.1449 mo
155.282 30.2127 152.596 22.5462 148.926 15.4105 cv
146.92 11.5111 143.858 3.94662 139.158 1.92123 cv
138.893 1.25179 138.315 .700037 137.412 .624353 cv
124.742 -.439124 115.205 16.9144 123.921 26.512 cv
130.429 33.6781 134.662 40.9598 135.514 50.8631 cv
136.295 59.9369 134.235 68.8597 131.102 77.3177 cv
130.93 77.3119 130.753 77.3206 130.565 77.3607 cv
130.216 77.4354 129.119 76.7933 128.622 76.7464 cv
127.736 76.6619 126.879 76.8729 126.133 77.3685 cv
124.445 78.4881 123.997 80.5604 124.134 82.4622 cv
124.267 84.3026 124.872 85.9852 126.594 86.8773 cv
126.862 87.0164 127.147 87.1385 127.438 87.2513 cv
125.768 89.4388 124.206 91.9036 124.734 94.494 cv
125.332 97.4271 128.524 99.0365 131.26 99.3895 cv
134.369 99.7913 138.125 98.6702 140.58 96.7279 cv
143.668 94.2845 144.614 89.6463 145.542 86.034 cv
145.552 85.9954 145.552 85.9608 145.56 85.9227 cv
145.617 85.8602 145.677 85.8036 145.731 85.7308 cv
155.76 71.9539 159.257 54.8914 156.56 38.1449 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.156863 .113725 .113725 rgb
f
106.22 155.109 mo
100.471 146.767 94.6495 138.446 89.7462 129.567 cv
87.1603 124.887 84.8146 120.064 82.9425 115.052 cv
81.3341 110.746 80.3888 106.242 78.8605 101.925 cv
78.294 96.265 77.1017 90.68 76.0567 85.0828 cv
75.3478 81.2845 74.6251 77.4901 73.8751 73.6995 cv
72.9649 69.1038 71.6222 65.1073 73.422 60.5955 cv
74.2804 58.4437 74.8546 57.0252 74.2901 54.6444 cv
73.5099 51.3592 71.087 49.0872 70.6788 45.5965 cv
70.0089 39.8665 75.4298 26.0116 82.3907 25.6126 cv
84.1515 25.5116 85.9659 23.7743 85.2511 21.8582 cv
82.6183 14.8021 75.9034 7.98031 69.3116 4.3934 cv
62.1964 .522302 50.6153 .884119 43.0714 3.14047 cv
42.8165 3.21664 42.5968 3.32748 42.3937 3.4515 cv
39.1134 3.26107 36.1505 5.48324 33.4308 7.6932 cv
27.3907 7.67904 19.7062 16.8324 17.337 20.9051 cv
16.3556 22.5941 15.7276 24.4696 15.544 26.4159 cv
15.2618 29.4173 14.6915 31.5741 13.7159 34.4432 cv
12.0021 39.4862 14.7267 44.5521 16.044 49.3826 cv
17.7052 55.4749 18.797 61.721 18.6485 68.054 cv
18.4942 74.6263 16.6661 80.9408 15.0538 87.2679 cv
13.961 91.5516 12.7648 95.8485 11.5743 100.156 cv
11.2765 101.024 10.9981 101.834 10.7198 102.498 cv
8.38096 108.064 5.83995 113.675 4.41709 119.562 cv
1.76963 130.514 3.19932 141.945 6.02647 152.711 cv
8.34385 161.537 10.9142 172.327 18.5519 178.155 cv
21.1983 180.174 25.8253 182.578 29.2579 181.208 cv
30.9855 180.518 31.7403 178.871 32.3243 177.104 cv
32.713 177.091 33.1075 176.993 33.4825 176.825 cv
35.0089 176.142 36.4933 175.883 37.6808 174.778 cv
40.4454 176.584 43.2091 178.138 47.0118 178.708 cv
48.8204 178.979 50.5929 178.978 52.1036 178.477 cv
55.3751 178.5 58.3644 177.912 61.6007 176.195 cv
63.629 175.12 65.1192 173.216 67.0411 172.143 cv
69.7667 170.622 73.128 173.554 75.8224 174.687 cv
82.4073 177.457 91.0743 177.127 94.8653 170.878 cv
100.403 173.278 106.582 179.192 112.275 174.456 cv
118.66 169.145 109.306 159.586 106.22 155.109 cv
cp
.345098 .701961 .74902 rgb
f
63.1046 6.2347 mo
62.7755 5.83675 62.3565 5.5975 61.9054 5.47787 cv
61.628 5.0892 61.3185 4.72006 60.9337 4.39974 cv
57.7648 1.76547 52.4376 2.53158 47.9483 3.89779 cv
47.6358 3.88021 47.3273 3.85677 47.0089 3.85189 cv
43.7071 3.80551 38.1759 3.79672 35.7296 6.35433 cv
34.9425 7.1766 34.295 8.23617 33.7462 9.41732 cv
31.9337 11.0453 30.5597 13.0619 29.7423 15.4437 cv
27.3976 19.0545 25.0343 23.8221 24.3517 27.6673 cv
24.2218 28.3949 24.2325 29.0306 24.3399 29.5853 cv
23.673 31.262 23.4474 33.0501 24.0255 34.6878 cv
23.9581 35.6024 24.0919 36.5369 24.4591 37.3739 cv
26.2491 41.4539 32.0743 42.9525 36.0314 43.3695 cv
41.8253 43.9798 47.5509 42.4686 52.7687 40.0208 cv
55.5372 38.7215 57.6827 36.6883 59.3312 34.2113 cv
59.9181 34.0243 60.4308 33.6234 60.7364 32.9349 cv
61.1358 32.0355 61.504 31.1117 61.8399 30.1712 cv
64.6993 22.8509 68.3731 12.6121 63.1046 6.2347 cv
cp
.494118 .713726 .607843 rgb
f
62.9855 6.72396 mo
62.961 6.66586 62.9298 6.61459 62.9034 6.55892 cv
62.7169 3.85531 59.3507 3.30746 57.9122 4.92709 cv
57.4034 5.11752 56.9552 5.47982 56.669 6.05453 cv
54.9376 9.53304 54.9044 13.263 53.7657 16.9207 cv
52.3341 21.5213 49.5138 25.6351 45.7687 28.658 cv
45.0694 29.2225 44.3526 29.7694 43.6085 30.2464 cv
41.0616 29.9935 38.5274 30.2205 35.9142 30.7606 cv
35.0294 30.2703 34.1837 29.6737 33.171 29.1795 cv
30.9679 28.1048 28.8565 27.7596 26.7091 28.3534 cv
25.4093 27.348 22.8663 28.1463 23.6739 30.0892 cv
23.7052 30.1644 23.7413 30.2337 23.7735 30.3079 cv
23.3839 31.243 23.545 32.3934 24.2257 33.1639 cv
23.8448 33.8577 23.7882 34.7396 24.1095 35.5018 cv
24.5206 36.4759 25.5226 37.2464 26.4669 37.6595 cv
26.6163 37.7249 26.8038 37.8109 26.9981 37.8856 cv
27.0274 37.974 27.0372 38.0701 27.0743 38.1546 cv
28.6065 41.6639 32.381 41.9613 35.7862 42.1307 cv
41.0655 42.3934 47.0606 42.95 52.0831 40.9823 cv
54.0773 40.2015 55.7608 39.0404 57.1534 37.6204 cv
57.2179 37.5628 57.2862 37.5169 57.3487 37.451 cv
65.086 29.2376 67.3038 17.1478 62.9855 6.72396 cv
cp
.443137 .647059 .541176 rgb
f
62.4806 6.79232 mo
61.6085 5.69271 60.2149 6.94174 60.3839 8.01205 cv
61.131 12.7337 61.5108 16.868 60.6817 20.8934 cv
59.7745 21.2806 59.045 22.1414 58.9991 23.2088 cv
58.7716 23.4251 58.5821 23.6991 58.4669 24.0457 cv
57.8458 25.9056 57.3185 27.7601 56.8146 29.6551 cv
56.1769 30.7415 55.3771 31.7567 54.4601 32.6712 cv
52.2667 33.7913 49.671 34.474 47.4073 34.9207 cv
44.8614 35.4237 40.3497 36.5116 36.3448 36.5784 cv
33.6925 36.0155 31.0948 35.1864 28.6935 34.2093 cv
26.9659 33.5062 25.4073 35.8441 26.3224 37.2933 cv
28.7833 41.1888 34.3263 42.056 39.9562 41.7401 cv
43.7804 42.1859 47.6251 41.9144 51.1964 40.3709 cv
51.8634 40.0828 52.5177 39.7371 53.1593 39.3538 cv
59.6866 37.3602 66.1505 31.7103 64.7413 24.8021 cv
66.6935 18.7396 66.4112 11.7484 62.4806 6.79232 cv
cp
.396078 .509804 .45098 rgb
f
42.8605 11.3377 mo
41.7921 11.5438 40.8644 12.1043 40.0343 12.8377 cv
39.7276 12.9578 39.4366 13.1585 39.1896 13.4779 cv
38.9747 13.7542 38.7677 14.0291 38.5665 14.3036 cv
37.9796 14.2489 37.3644 14.4745 36.9493 15.1263 cv
35.2784 17.7479 33.6866 20.4408 31.7472 22.8758 cv
30.7296 24.1536 31.0489 26.141 32.5011 26.7205 cv
33.0841 28.057 34.8282 28.6702 36.1837 27.9325 cv
37.5099 27.2098 38.588 26.1126 39.4835 24.8211 cv
42.6573 22.411 44.6036 18.2718 45.9776 14.4549 cv
46.6847 12.4896 44.5929 11.0037 42.8605 11.3377 cv
cp
.623529 .827451 .72549 rgb
f
54.6427 173.401 mo
53.8009 174.049 52.7765 174.201 51.7442 174.101 cv
51.086 173.146 50.213 172.357 49.0987 171.63 cv
48.1222 170.993 46.9942 171.661 46.669 172.596 cv
45.1065 171.236 43.7823 169.655 42.6554 167.868 cv
42.4845 167.358 42.3009 166.826 42.1075 166.285 cv
42.3614 166.086 42.5148 165.748 42.3321 165.38 cv
41.6661 164.037 40.9552 162.753 40.0831 161.53 cv
40.0548 161.491 40.0206 161.459 39.9835 161.433 cv
39.8692 161.23 39.754 161.027 39.6339 160.836 cv
39.3028 155.643 37.5724 150.865 35.9649 145.801 cv
34.1358 140.036 32.9523 134.131 32.1075 128.157 cv
32.1329 127.601 32.1573 127.045 32.1935 126.488 cv
32.2267 125.98 32.0343 125.625 31.7413 125.408 cv
31.7276 125.301 31.712 125.195 31.6993 125.088 cv
31.5089 123.542 29.087 122.842 28.7101 124.683 cv
28.5714 125.358 28.462 126.032 28.3692 126.707 cv
28.0958 115.119 30.1944 103.308 30.7091 91.7352 cv
30.7286 91.2943 30.0079 91.1829 29.9269 91.6292 cv
28.1065 101.667 28.0177 111.769 27.0665 121.837 cv
25.7882 115.616 24.8146 109.382 24.3185 102.994 cv
24.2423 102.012 22.711 101.994 22.7716 102.994 cv
23.2882 111.485 24.3663 120.024 26.3927 128.294 cv
26.5987 129.137 27.673 129.211 28.1603 128.691 cv
27.8106 133.183 28.3194 137.671 29.0948 142.134 cv
29.253 144.213 29.4894 146.288 29.8341 148.353 cv
30.5646 152.735 31.3839 157.719 33.5919 161.772 cv
34.4952 164.903 35.4913 168.005 36.5939 171.064 cv
37.2091 172.773 39.4884 172.462 39.836 171.025 cv
40.0665 171.393 40.3419 171.727 40.6817 172.014 cv
41.3937 172.887 42.1876 173.614 43.086 174.11 cv
43.3819 174.274 43.7023 174.256 43.9679 174.13 cv
45.6251 175.815 47.5577 177.254 49.7735 178.394 cv
49.9815 178.501 50.2003 178.55 50.4161 178.56 cv
50.4767 178.59 50.5314 178.623 50.5939 178.653 cv
51.6437 179.154 52.7862 178.539 52.9435 177.498 cv
54.6241 177.426 56.0655 176.75 56.5362 174.857 cv
56.7794 173.879 55.5909 172.671 54.6427 173.401 cv
cp
.258824 .6 .627451 rgb
f
80.9522 17.5594 mo
80.9649 17.3265 80.9825 17.0941 80.9942 16.8607 cv
81.0538 15.6248 80.2335 14.7616 79.2228 14.4242 cv
77.7901 11.9417 74.8907 10.304 71.7394 10.5272 cv
71.0196 10.578 70.5284 11.3084 70.9073 11.9764 cv
71.3175 12.6522 71.6866 13.349 72.0147 14.0677 cv
72.2647 14.577 73.0714 14.7962 73.5392 14.4676 cv
73.8478 14.2503 74.587 16.1898 75.0616 17.3197 cv
74.7286 17.9041 74.3858 18.4823 74.0401 19.057 cv
72.7706 17.7625 70.3194 17.806 69.5851 20.1175 cv
69.1876 21.3714 69.047 22.492 69.1388 23.5809 cv
68.8722 26.0199 68.6456 28.5711 68.2286 31.0492 cv
67.9542 30.4442 66.8634 30.5267 66.7208 31.221 cv
66.4376 32.6131 65.839 33.7894 65.0987 34.8709 cv
64.589 34.243 63.5411 34.0399 62.9972 34.866 cv
59.5001 39.1297 56.1827 42.9705 51.7481 46.2132 cv
46.1778 46.6458 40.6222 47.8265 35.1388 45.2489 cv
34.2296 44.8211 33.4962 46.0384 34.3468 46.6048 cv
40.9064 50.971 52.0909 51.4954 59.1446 47.9281 cv
59.7511 47.6214 59.6358 46.5584 58.9483 46.429 cv
58.1944 46.2869 57.4396 46.2064 56.6856 46.1517 cv
58.7394 44.4393 60.6651 42.5628 62.339 40.4935 cv
62.6632 40.4818 62.9913 40.3446 63.1788 40.077 cv
64.5001 38.1888 65.3761 36.0628 66.5606 34.1229 cv
66.3839 35.9984 66.0128 37.8079 65.3644 39.6546 cv
64.9347 40.8768 66.4112 41.8978 67.4415 41.4149 cv
67.3224 42.7659 67.3175 44.1312 67.4825 45.5101 cv
67.5675 46.2118 68.5421 46.4403 68.7716 45.6844 cv
69.9425 41.8382 70.6163 37.8773 71.8634 34.0492 cv
72.0108 33.6458 72.1524 33.2391 72.2862 32.8284 cv
72.9581 30.9896 73.7804 29.2635 74.7794 27.6073 cv
74.8761 27.5091 74.9796 27.4178 75.0636 27.3075 cv
75.4298 26.827 75.7735 26.3407 76.1212 25.8558 cv
76.6974 27.2479 78.714 27.9515 79.8409 26.6668 cv
82.9015 23.1776 83.6944 20.2303 80.9522 17.5594 cv
cp
f
75.8829 114.025 mo
75.0694 108.004 73.7755 102.044 72.5938 96.075 cv
72.8419 96.1151 73.1085 96.0213 73.2462 95.8231 cv
74.3771 101.397 75.8019 106.98 76.8321 112.482 cv
77.1495 114.179 77.463 115.946 77.8126 117.733 cv
77.7003 118.029 77.6993 118.375 77.8741 118.732 cv
77.9591 118.906 78.0421 119.083 78.1271 119.257 cv
78.4171 120.653 78.7257 122.052 79.0938 123.436 cv
77.9054 120.336 76.8155 117.207 75.8829 114.025 cv
cp
72.2687 90.4622 mo
72.4542 91.6532 72.6671 92.846 72.8937 94.0394 cv
72.4571 92.6473 72.0548 91.2489 71.7687 89.8241 cv
71.9356 90.036 72.1007 90.2489 72.2687 90.4622 cv
cp
111.385 171.14 mo
110.826 164.345 107.442 157.876 103.023 152.638 cv
99.4747 146.49 95.2521 140.659 91.0187 135.158 cv
90.5118 134.498 89.7247 134.405 89.1036 134.644 cv
87.6759 131.942 86.2198 129.251 84.7726 126.559 cv
83.3536 120.928 81.586 115.317 80.4796 109.657 cv
79.0157 102.164 78.1456 93.1595 74.2062 86.4886 cv
73.6085 85.4769 72.2345 85.7933 71.8614 86.7948 cv
71.8565 86.8099 71.8526 86.8236 71.8478 86.8387 cv
71.838 86.8289 71.8282 86.8197 71.8185 86.8099 cv
72.2989 80.0877 68.9396 74.4534 68.6534 67.7738 cv
68.6046 66.6375 68.7472 65.6102 68.9962 64.639 cv
70.0489 65.0911 71.4347 64.5179 71.5118 63.0443 cv
71.5841 61.6458 71.4103 60.556 71.005 59.4256 cv
71.3605 58.5233 71.6739 57.5868 71.8712 56.5706 cv
72.4073 53.805 71.5675 51.555 70.4327 49.0907 cv
69.6788 47.4539 67.2237 48.6419 67.6153 50.2782 cv
68.1446 52.4871 67.8458 54.6668 67.6017 56.8416 cv
67.5196 55.5023 67.4278 54.1624 67.3536 52.8231 cv
67.2872 51.6234 65.6388 51.7469 65.5948 52.8284 cv
65.5821 52.8265 65.5694 52.825 65.5567 52.8231 cv
65.5313 56.3768 65.5997 59.9222 65.7521 63.4642 cv
65.4405 63.681 65.2188 64.0462 65.2823 64.5101 cv
65.6397 67.1156 65.9864 69.7498 66.3341 72.3988 cv
66.3507 72.5882 66.3614 72.7782 66.379 72.9681 cv
66.7511 77.0985 66.6593 82.1551 68.1085 86.2679 cv
68.1407 88.8221 68.2247 91.3724 68.4024 93.9198 cv
66.8663 88.1287 65.5831 82.2762 64.5899 76.3826 cv
64.3468 74.9412 61.8155 75.2625 62.0118 76.7318 cv
64.7667 97.3851 70.4552 116.996 79.8292 135.631 cv
81.0147 137.986 84.3351 135.921 83.3116 133.595 cv
83.2687 133.496 83.2257 133.397 83.1817 133.298 cv
83.6261 133.986 84.0958 134.656 84.6153 135.29 cv
85.0343 135.802 85.5753 135.7 85.9552 135.358 cv
87.7149 138.74 89.5958 142.041 91.6935 145.161 cv
93.7579 151.361 96.3487 157.562 99.0704 163.619 cv
99.1339 164.834 99.3263 165.967 99.63 167.044 cv
99.2179 166.953 98.7823 166.951 98.3058 167.109 cv
97.589 167.345 97.1446 168.054 97.3409 168.808 cv
97.8819 170.889 99.9513 172.527 102.016 172.908 cv
102.37 172.973 102.708 172.93 103.004 172.813 cv
103.097 172.91 103.179 173.01 103.275 173.105 cv
104.345 174.161 105.945 173.802 106.817 172.876 cv
106.879 172.903 106.941 172.929 107.003 172.955 cv
108.533 174.248 111.583 173.553 111.385 171.14 cv
cp
f
92.294 159.861 mo
91.4894 158.21 90.6856 156.558 89.881 154.907 cv
89.2823 153.678 87.1847 154.542 87.6524 155.847 cv
87.9825 156.764 88.2481 157.835 88.8116 158.637 cv
88.8927 158.753 88.9894 158.83 89.089 158.891 cv
89.4425 159.633 89.796 160.374 90.1495 161.115 cv
90.8351 162.554 92.9933 161.297 92.294 159.861 cv
cp
f
89.5147 165.478 mo
88.2833 162.114 85.9991 159.187 83.2599 156.912 cv
82.9151 156.625 82.4083 156.633 82.0519 156.84 cv
80.7491 153.846 79.336 150.903 77.7735 148.015 cv
77.7267 147.927 77.67 147.855 77.6105 147.791 cv
77.2355 146.643 76.8761 145.485 76.5177 144.323 cv
76.5802 144.335 76.629 144.363 76.6964 144.366 cv
80.3624 144.54 84.9073 144.471 87.9864 142.211 cv
88.7022 141.685 88.5704 140.279 87.4835 140.354 cv
83.8224 140.609 80.4171 141.951 76.6964 142.046 cv
76.3556 142.055 76.1026 142.185 75.9181 142.368 cv
75.6993 141.651 75.4815 140.936 75.2599 140.217 cv
72.8956 132.537 71.4708 124.002 67.5392 116.939 cv
67.2511 116.421 66.4571 116.666 66.4474 117.235 cv
66.2999 126.156 70.1573 135.528 73.0724 143.847 cv
75.3097 150.235 77.6046 157.367 81.9991 162.666 cv
81.9991 162.667 81.9991 162.668 81.9991 162.669 cv
81.9962 163.764 82.0323 164.824 82.2267 165.903 cv
82.3399 166.538 83.0577 168.038 82.919 168.621 cv
82.2442 171.439 77.1905 169.036 75.5499 168.37 cv
73.7433 167.637 70.5831 165.243 68.7062 167.247 cv
67.1886 168.868 68.587 170.947 70.1065 171.857 cv
72.0577 173.027 74.6075 173.693 76.7286 174.513 cv
78.5733 175.225 80.5196 176.267 82.5187 176.347 cv
83.3897 176.381 84.1661 175.711 84.4083 174.909 cv
84.4386 174.806 84.4562 174.715 84.4747 174.622 cv
85.2267 174.657 85.9776 174.696 86.7296 174.747 cv
87.4181 174.793 88.1925 174.327 88.5118 173.724 cv
89.1515 172.516 90.0304 172.133 90.3204 170.743 cv
90.672 169.057 90.0909 167.052 89.5147 165.478 cv
cp
f
76.4044 156.231 mo
76.0528 155.614 75.1173 156.163 75.4532 156.787 cv
76.5841 158.894 77.6866 161.016 78.6905 163.188 cv
79.0167 163.895 81.1222 166.637 79.3468 166.033 cv
78.5987 165.779 77.4659 162.426 77.1144 161.761 cv
74.5636 156.933 71.9161 152.16 69.2745 147.381 cv
69.0323 146.942 68.5343 146.864 68.1231 147.007 cv
67.0499 143.894 65.9337 140.792 64.5343 137.812 cv
64.1837 137.065 63.0245 137.598 63.2276 138.363 cv
64.7315 144.021 67.0606 149.518 69.2052 154.959 cv
70.5899 158.469 71.8897 161.949 74.6114 164.657 cv
75.1407 165.183 76.2237 164.655 75.9366 163.885 cv
75.7374 163.35 75.5304 162.819 75.3282 162.285 cv
75.4024 162.415 75.4728 162.547 75.547 162.677 cv
76.3253 164.047 77.9571 168.74 80.2784 168.468 cv
84.5372 167.969 77.1339 157.515 76.4044 156.231 cv
cp
f
69.6466 162.015 mo
64.5372 153.821 61.4132 145.263 58.6876 136.038 cv
58.462 135.273 57.2677 135.597 57.4903 136.368 cv
60.1065 145.449 62.7413 155.203 68.671 162.768 cv
69.1075 163.326 70.0147 162.606 69.6466 162.015 cv
cp
f
59.4454 130.701 mo
59.381 130.701 59.381 130.801 59.4454 130.801 cv
59.5099 130.801 59.5099 130.701 59.4454 130.701 cv
cp
f
43.6954 166.403 mo
42.9269 166.403 42.9249 167.598 43.6954 167.598 cv
44.4649 167.598 44.4659 166.403 43.6954 166.403 cv
cp
f
32.3331 173.326 mo
32.0548 172.201 32.17 172.915 32.0216 171.597 cv
31.6261 168.092 31.17 164.543 30.4864 160.999 cv
28.6925 151.701 27.589 141.467 24.1417 132.641 cv
24.128 132.605 24.1085 132.575 24.0929 132.541 cv
24.0304 130.953 24.0089 129.36 24.0372 127.762 cv
24.045 127.337 23.8165 127.07 23.5216 126.94 cv
23.339 120.957 23.2452 114.973 22.9044 108.994 cv
22.8517 108.072 21.6017 108.109 21.4981 108.994 cv
20.5968 116.646 20.6476 124.503 21.0958 132.276 cv
20.9835 132.496 20.9151 132.76 20.919 133.077 cv
20.9669 136.482 21.3771 139.944 21.963 143.41 cv
22.4483 148.236 23.1886 153.001 24.5314 157.607 cv
19.6017 145.639 19.8946 132.365 20.3243 119.52 cv
20.3468 118.834 19.8741 118.477 19.3487 118.415 cv
20.4659 109.028 22.2618 99.7054 24.4942 90.5418 cv
24.7989 89.2894 22.9767 88.7991 22.5733 90.012 cv
18.0245 103.69 16.0343 117.78 15.756 131.974 cv
14.3927 137.032 15.1593 142.028 16.0587 147.045 cv
16.3273 151.597 16.7403 156.15 17.2755 160.692 cv
17.4718 162.35 19.6231 162.329 19.8419 160.692 cv
20.1378 158.484 20.089 156.261 19.8907 154.035 cv
20.8878 157.228 22.2862 160.346 24.3731 163.377 cv
24.8409 164.056 25.5968 164.106 26.1437 163.804 cv
26.2481 164.331 26.3536 164.86 26.4493 165.386 cv
26.1075 165.551 25.8009 165.787 25.5548 166.079 cv
24.9054 166.053 24.3155 166.574 24.4855 167.378 cv
22.4669 169.042 li
21.0587 167.234 18.797 166.127 16.1856 166.118 cv
14.6446 166.114 13.2208 167.74 13.7657 169.295 cv
15.9532 175.538 21.7345 179.743 28.4601 178.969 cv
29.214 178.882 29.9464 178.474 30.4259 177.898 cv
31.7638 178.061 33.2452 177.268 33.087 175.683 cv
32.9903 174.72 32.5362 174.151 32.3331 173.326 cv
cp
f
58.5177 68.1883 mo
56.9435 69.0418 55.3058 69.7323 53.63 70.2865 cv
54.2511 69.8846 54.8722 69.4832 55.4933 69.0814 cv
55.5939 69.0159 55.5001 68.8543 55.3985 68.9193 cv
54.5616 69.4539 53.7257 69.9881 52.8888 70.5223 cv
49.9659 71.408 46.9317 71.8651 43.8898 71.909 cv
46.3751 71.1414 48.8663 70.3407 51.3175 69.5457 cv
51.6739 69.43 51.6378 68.8148 51.2237 68.8553 cv
48.6437 69.1068 46.1583 69.8372 43.7472 70.7786 cv
42.8106 71.1444 41.9815 71.5599 41.0812 71.846 cv
38.9161 71.6991 36.7677 71.3416 34.6681 70.7957 cv
34.421 68.9422 34.1876 67.0872 33.9894 65.2279 cv
34.2501 65.1751 34.2433 64.7542 33.9454 64.7542 cv
33.9415 64.7542 33.9405 64.7581 33.9356 64.7586 cv
33.9269 64.6741 33.9161 64.5902 33.9073 64.5062 cv
33.839 63.8426 32.8038 63.8216 32.8526 64.5062 cv
32.9923 66.4632 33.1358 68.4359 33.2911 70.4119 cv
31.3185 69.8118 29.3995 69.0418 27.5704 68.1019 cv
26.754 67.682 26.0294 68.9139 26.8487 69.3363 cv
28.7735 70.3289 30.6515 71.1893 32.546 71.8656 cv
32.6153 71.9344 32.6993 71.994 32.8126 72.0286 cv
33.0216 72.0926 33.2286 72.1527 33.4356 72.2142 cv
33.6769 75.1019 33.964 77.9949 34.3312 80.8724 cv
34.2052 80.7977 34.0782 80.7308 33.9523 80.6532 cv
33.0782 80.1126 32.2745 81.493 33.1485 82.0291 cv
33.6202 82.3187 34.1056 82.5911 34.5978 82.8543 cv
35.0577 86.076 35.6368 89.2708 36.4073 92.4027 cv
36.5646 93.0404 37.6515 92.9261 37.5821 92.2435 cv
37.2911 89.4178 36.919 86.6014 36.5235 83.7869 cv
42.4015 86.3714 49.2657 86.9735 55.1241 84.0633 cv
55.4884 83.8826 55.2198 83.3734 54.8624 83.4422 cv
48.2569 84.7186 42.1837 84.7659 36.2628 81.9149 cv
35.8165 78.8177 35.3468 75.7225 34.9142 72.6219 cv
35.1905 72.6903 35.4669 72.7523 35.7433 72.8084 cv
38.3712 73.4154 41.0958 73.6156 44.0821 73.2435 cv
46.0128 73.0033 48.088 72.7069 50.1495 72.2728 cv
49.5616 72.6483 48.9747 73.0238 48.3868 73.3992 cv
48.2599 73.4803 48.378 73.6839 48.505 73.6019 cv
50.7814 72.1292 li
53.7218 71.4652 56.6026 70.4998 58.9552 68.9373 cv
59.4181 68.6302 59.0128 67.9202 58.5177 68.1883 cv
cp
f
64.4571 111.262 mo
62.3585 113.146 60.169 114.904 57.9298 116.598 cv
55.9669 108.93 53.5089 101.346 51.3116 93.7625 cv
50.9679 92.577 49.1075 93.0833 49.4581 94.2738 cv
51.756 102.066 53.8185 110.009 56.3937 117.733 cv
55.4718 118.412 54.545 119.088 53.6114 119.754 cv
53.2687 117.997 52.9425 116.237 52.6437 114.473 cv
52.3946 113.003 50.9376 112.804 49.9171 113.409 cv
49.2003 110.778 48.5831 108.297 48.1778 105.766 cv
49.4278 105.809 50.6837 105.806 51.9454 105.731 cv
52.462 105.701 52.4542 104.979 51.9454 104.934 cv
50.628 104.819 49.3155 104.692 48.0079 104.548 cv
47.7091 102.264 47.587 99.9193 47.7511 97.3621 cv
47.7784 96.9281 47.0812 96.7137 46.8985 97.1317 cv
45.9181 99.3866 45.5499 101.8 45.4981 104.244 cv
44.2159 104.075 42.9386 103.883 41.6661 103.657 cv
41.8575 101.235 41.9835 98.8221 41.9884 96.4305 cv
43.5226 95.9271 45.0382 95.3778 46.5235 94.7928 cv
46.9112 94.64 46.7423 94.0047 46.3487 94.16 cv
44.8985 94.7313 43.4425 95.2235 41.9796 95.6698 cv
41.9767 95.2821 41.9776 94.8939 41.9679 94.5076 cv
41.9483 93.7347 40.7784 93.5286 40.586 94.3211 cv
40.4356 94.9427 40.295 95.5692 40.1632 96.1991 cv
37.1222 97.0413 34.044 97.7039 30.8995 98.3685 cv
30.669 98.4168 30.7169 98.8006 30.9552 98.7825 cv
34.0069 98.5511 37.0343 97.911 39.9962 97.0467 cv
39.6026 99.0423 39.3087 101.081 39.0587 103.136 cv
37.9161 102.888 36.7755 102.614 35.6407 102.296 cv
34.7823 102.055 34.4151 103.392 35.2726 103.629 cv
36.4718 103.96 37.6749 104.257 38.8829 104.525 cv
38.0636 112.086 37.9757 119.9 37.4523 127.253 cv
37.3819 128.25 38.9142 128.235 38.9991 127.253 cv
39.628 119.981 40.88 112.484 41.545 105.06 cv
42.8585 105.29 44.1788 105.472 45.504 105.598 cv
45.5489 107.501 45.7481 109.41 45.9815 111.266 cv
46.8321 118.026 48.8429 124.499 49.6163 131.316 cv
49.9269 134.05 50.3341 136.758 50.796 139.451 cv
50.0284 136.356 49.2804 133.256 48.4112 130.182 cv
48.087 129.038 46.2423 129.226 46.2931 130.469 cv
46.6251 138.546 48.7638 146.72 51.1935 154.394 cv
52.9981 160.094 54.7003 167.039 59.7696 170.712 cv
61.1105 171.684 63.1974 170.06 62.6271 168.516 cv
60.8888 163.818 59.4103 159.039 58.131 154.208 cv
58.2442 154.501 58.3517 154.797 58.4689 155.088 cv
59.0001 156.416 60.796 155.908 60.5929 154.502 cv
58.9552 143.134 56.0323 131.942 53.7931 120.651 cv
54.8009 120.069 55.7872 119.453 56.7599 118.816 cv
57.087 119.777 57.4181 120.736 57.7648 121.689 cv
58.0606 122.505 59.2687 122.191 59.0753 121.327 cv
58.8126 120.154 58.5343 118.982 58.2442 117.813 cv
60.7335 116.086 63.1202 114.207 65.4347 112.24 cv
66.1105 111.666 65.1222 110.666 64.4571 111.262 cv
cp
f
61.3399 62.7581 mo
61.2618 69.2948 56.7023 74.7586 50.4151 76.4124 cv
50.2218 76.4637 50.3067 76.7362 50.4962 76.7064 cv
57.5489 75.5941 61.9698 69.8631 61.7149 62.7581 cv
61.7062 62.5179 61.3429 62.5159 61.3399 62.7581 cv
cp
f
47.4347 60.9383 mo
38.2804 61.1722 26.5987 61.991 23.7814 50.723 cv
23.6622 50.2469 22.8966 50.222 22.7931 50.723 cv
22.5773 51.869 22.3185 53.0057 22.0167 54.1322 cv
21.878 54.6883 22.7364 54.9256 22.8751 54.369 cv
23.0753 53.5618 23.1603 53.0545 23.1886 52.7493 cv
23.2345 52.8431 23.3087 52.9344 23.4327 52.9969 cv
24.0812 53.3245 24.8995 55.6986 25.4142 56.3944 cv
26.6827 58.1073 28.2384 59.5238 30.087 60.5804 cv
35.1935 63.4998 42.0694 63.6278 47.5655 61.9051 cv
48.0812 61.7435 48.0079 60.9237 47.4347 60.9383 cv
cp
f
53.6954 58.7191 mo
53.3341 58.7191 53.3331 59.2816 53.6954 59.2816 cv
54.0577 59.2816 54.0577 58.7191 53.6954 58.7191 cv
cp
f
62.3429 51.0101 mo
60.4776 56.202 55.9308 59.245 50.8663 60.9085 cv
50.5909 60.9989 50.6398 61.4036 50.9347 61.4149 cv
57.0069 61.6473 61.9269 56.9305 63.8351 51.4217 cv
64.1622 50.4764 62.6769 50.0809 62.3429 51.0101 cv
cp
f
40.4454 64.4505 mo
40.381 64.4505 40.381 64.5506 40.4454 64.5506 cv
40.5099 64.5506 40.5099 64.4505 40.4454 64.4505 cv
cp
f
41.6954 75.4505 mo
41.631 75.4505 41.631 75.5506 41.6954 75.5506 cv
41.7599 75.5506 41.7599 75.4505 41.6954 75.4505 cv
cp
f
113.183 165.443 mo
112.496 163.822 111.225 161.417 109.241 161.169 cv
108.437 161.069 107.829 161.367 107.452 161.862 cv
106.489 160.264 105.39 158.736 104.338 157.213 cv
101.31 152.824 98.3175 148.413 95.3409 143.989 cv
94.7667 143.135 93.6612 143.38 93.2511 144.038 cv
89.9054 137.336 87.9464 130.54 86.1573 122.968 cv
83.6417 112.319 80.4249 101.851 76.9034 91.4949 cv
76.4464 90.1502 74.3331 90.7044 74.7569 92.0867 cv
75.1905 93.5042 75.6134 94.9241 76.0274 96.346 cv
75.0528 94.1634 74.1065 91.9891 73.3937 89.8031 cv
71.6202 84.3626 71.2286 78.7283 70.9688 73.0736 cv
76.6651 66.3768 72.8282 56.1712 68.9366 49.5184 cv
68.3712 48.5516 66.671 49.1878 67.0733 50.304 cv
68.2374 53.5355 69.4464 56.8519 70.0548 60.2454 cv
70.2833 61.5208 70.3605 62.7684 70.3517 64.0047 cv
69.9532 63.3509 68.9405 63.3075 68.548 63.8929 cv
68.5333 60.6556 67.7706 57.3245 66.9425 54.4012 cv
66.8058 53.9217 66.0646 54.0106 66.0675 54.5194 cv
66.089 58.2284 67.086 61.8538 66.673 65.5814 cv
66.0626 71.0965 61.8282 75.9808 55.7023 73.9227 cv
53.4366 73.161 54.7491 73.2078 56.3565 72.6712 cv
57.4796 72.2967 58.6319 71.8494 59.6231 71.1942 cv
61.6417 69.8592 63.0548 67.7718 64.1271 65.6492 cv
64.588 64.7352 63.3067 63.9769 62.7501 64.8446 cv
60.3985 68.5111 57.3917 69.7699 53.7755 71.6942 cv
52.7921 72.2166 52.0226 72.4139 52.1036 73.6761 cv
52.1202 73.9354 52.2355 74.2225 52.4864 74.3436 cv
56.8575 76.4515 62.9591 76.3719 66.0694 72.2806 cv
67.4747 70.4324 68.1788 68.304 68.4347 66.0736 cv
68.6212 73.7244 67.9142 81.5638 69.7999 89.0389 cv
71.6036 96.1922 75.421 103.98 79.3478 110.176 cv
79.4552 110.346 79.6368 110.437 79.8292 110.468 cv
81.2228 116.039 82.5138 121.637 83.7403 127.254 cv
85.4972 135.299 87.3702 145.143 94.756 150.004 cv
95.2101 150.303 95.7247 150.036 95.9298 149.623 cv
98.2589 153.517 100.575 157.418 102.9 161.315 cv
104.379 163.791 105.277 167.461 107.522 169.379 cv
107.51 169.463 107.516 169.551 107.549 169.643 cv
107.604 169.795 107.659 169.946 107.714 170.098 cv
107.609 170.135 107.505 170.168 107.399 170.199 cv
107.499 169.134 105.977 168.295 105.063 169.154 cv
104.933 169.276 104.842 169.41 104.746 169.543 cv
104.339 169.445 103.932 169.342 103.53 169.213 cv
102.662 168.935 101.811 169.413 101.329 170.108 cv
100.232 171.694 101.238 173.66 102.914 174.313 cv
104.77 175.036 106.367 175.455 108.368 175.087 cv
113.262 174.186 115.077 169.918 113.183 165.443 cv
cp
.223529 .54902 .556863 rgb
f
86.2755 163.176 mo
85.7237 162.699 84.9894 163.045 84.9151 163.74 cv
84.7765 165.041 84.8263 167.793 83.6622 168.834 cv
83.2306 167.901 82.8741 166.95 82.5655 165.942 cv
82.1329 164.529 80.004 165.112 80.3507 166.553 cv
80.5528 167.389 80.7813 168.221 81.0206 169.05 cv
79.7657 169.253 79.3634 171.181 80.5548 171.939 cv
80.5499 171.946 80.545 171.952 80.5401 171.959 cv
80.5821 171.977 80.6241 171.985 80.6661 172.001 cv
80.7442 172.043 80.8224 172.084 80.9122 172.116 cv
81.4396 172.302 81.9288 172.403 82.4278 172.397 cv
84.1612 172.486 85.839 171.715 86.9161 170.159 cv
88.3204 168.129 88.2022 164.841 86.2755 163.176 cv
cp
f
80.2208 155.714 mo
76.5567 143.836 71.7315 132.797 69.5187 120.453 cv
69.2608 119.014 67.1437 119.647 67.3487 121.052 cv
69.0909 132.983 71.7589 146.201 78.3146 156.518 cv
78.9278 157.484 80.5812 156.884 80.2208 155.714 cv
cp
f
55.4903 137.597 mo
53.3898 127.732 51.3419 118.135 51.0548 108.002 cv
51.0274 107.039 49.547 107.033 49.5548 108.002 cv
49.6319 118.096 50.7569 128.43 54.5636 137.852 cv
54.7911 138.416 55.6222 138.216 55.4903 137.597 cv
cp
f
62.8136 163.652 mo
61.5606 160.776 60.4483 157.905 59.4757 154.974 cv
59.4962 154.983 59.5157 154.992 59.5372 155.001 cv
59.6759 155.063 59.8526 155.021 59.8946 154.855 cv
60.2023 153.651 59.7091 152.56 58.5753 152.086 cv
58.3312 151.245 58.0831 150.408 57.8673 149.55 cv
57.5743 148.389 55.8331 148.883 56.0812 150.042 cv
56.9122 153.922 57.9552 157.738 59.3487 161.455 cv
60.0851 163.416 60.9347 165.324 61.6603 167.268 cv
61.1778 167.143 60.6056 167.062 59.8888 167.046 cv
58.4337 167.012 55.4923 167.042 54.2345 167.82 cv
52.6398 168.806 52.5577 170.714 51.0899 171.857 cv
51.0636 171.878 51.0538 171.916 51.0304 171.941 cv
50.8116 172.006 50.5909 172.065 50.3663 172.102 cv
45.3937 172.906 42.8575 169.522 41.4747 165.472 cv
40.1983 161.737 39.8976 157.755 38.6056 154.008 cv
38.4532 153.568 37.7989 153.742 37.9044 154.201 cv
39.1534 159.632 39.0177 165.985 42.8663 170.435 cv
44.1651 171.936 45.8194 173.112 47.7247 173.716 cv
48.461 173.95 50.3185 174.004 52.1319 174.145 cv
53.6651 175.291 55.2315 176.26 57.0235 177.084 cv
57.7169 177.402 58.712 177.197 58.8937 176.323 cv
59.6651 172.604 56.7794 170.786 53.3009 171.266 cv
53.2657 171.271 53.2315 171.284 53.1964 171.289 cv
53.7745 169.633 57.7296 168.829 58.8653 168.962 cv
63.0606 169.454 62.1085 171.875 63.4083 174.403 cv
63.9132 175.385 65.4454 174.899 65.4425 173.851 cv
65.4327 170.127 64.2862 167.032 62.8136 163.652 cv
cp
f
36.6524 142.806 mo
35.6515 138.554 35.2589 134.009 33.9454 129.856 cv
33.753 129.25 32.8155 129.344 32.8175 130.009 cv
32.8273 134.38 34.2325 138.97 35.2735 143.186 cv
35.4942 144.08 36.8624 143.702 36.6524 142.806 cv
cp
f
35.9337 161.587 mo
35.1622 156.303 33.0167 151.286 31.6847 146.122 cv
31.3556 144.845 31.0587 143.561 30.7706 142.276 cv
30.545 137.237 30.3185 132.198 30.0919 127.16 cv
29.7765 120.136 30.1329 112.671 28.6603 105.777 cv
28.4542 104.812 27.171 105.157 27.0724 105.992 cv
26.2735 112.772 27.1964 119.98 27.5939 126.838 cv
26.9855 126.638 26.2403 126.93 26.3204 127.739 cv
26.7472 132.076 27.4112 136.32 28.255 140.513 cv
28.4083 143.759 28.5616 147.005 28.7149 150.251 cv
28.7706 151.414 30.1466 151.708 30.797 151.12 cv
31.4356 153.423 32.1192 155.718 32.8546 158.012 cv
32.5392 157.952 32.1876 158.2 32.2521 158.634 cv
32.5177 160.432 33.0597 161.29 34.4278 162.463 cv
35.1485 163.08 36.0626 162.473 35.9337 161.587 cv
cp
f
34.4747 169.631 mo
34.1915 168.443 32.6173 168.31 31.9601 169.152 cv
31.6935 168.108 31.3507 167.045 30.9366 165.925 cv
28.9181 160.471 26.9698 155.142 25.8829 149.417 cv
23.671 137.778 22.2179 126.388 22.7706 114.517 cv
22.8273 113.293 20.9405 113.302 20.8722 114.517 cv
20.3038 124.588 20.6739 134.783 22.3937 144.735 cv
23.2667 149.785 24.7413 154.791 26.1144 159.724 cv
27.3224 164.064 29.6349 168.45 29.6788 172.939 cv
29.1632 173.347 28.5782 173.654 27.9444 173.898 cv
26.7071 173.312 25.4278 172.82 24.0567 172.408 cv
22.8331 172.04 22.0323 173.25 22.3116 174.303 cv
21.7306 175.164 21.6583 175.708 21.9259 177.064 cv
22.0724 177.803 22.9288 178.438 23.6759 178.396 cv
25.2706 178.307 27.0841 178.06 28.7735 177.561 cv
29.1192 177.759 29.4659 177.951 29.8097 178.17 cv
30.5939 178.666 31.6231 178.171 31.8741 177.33 cv
32.0128 176.863 32.1202 176.409 32.212 175.961 cv
34.089 174.619 35.1866 172.609 34.4747 169.631 cv
cp
f
51.4356 73.9305 mo
46.1407 74.5145 41.048 75.2596 35.6974 74.9539 cv
34.7023 74.8968 34.7071 76.4398 35.6974 76.5008 cv
40.964 76.8255 46.5401 76.6981 51.5753 74.9661 cv
52.1007 74.786 52.0626 73.8612 51.4356 73.9305 cv
cp
f
80.1183 17.9964 mo
80.1778 17.0667 79.5313 16.6151 78.8321 16.6068 cv
78.7325 16.429 78.6271 16.2552 78.5128 16.0863 cv
78.1358 15.5291 77.2745 15.7367 77.2462 16.4295 cv
77.2228 16.9911 77.1876 17.7786 77.1153 18.6805 cv
76.7843 20.7015 75.9669 23.2181 74.6407 25.1502 cv
74.5118 25.1541 74.38 25.1751 74.2472 25.2396 cv
71.0997 26.7733 66.9952 31.0487 65.67 34.3802 cv
64.0616 38.4227 64.8731 44.2406 64.9728 48.4354 cv
65.0089 48.4305 li
65.0353 48.8094 65.2862 49.0428 65.5841 49.1117 cv
65.6427 49.3646 65.7042 49.617 65.755 49.8719 cv
65.8839 50.4495 66.7462 50.202 66.6358 49.6292 cv
66.5577 49.2708 66.4903 48.9105 66.4278 48.5492 cv
66.4327 48.5091 66.4503 48.4798 66.4503 48.4354 cv
66.381 43.5545 65.7901 38.5799 68.8146 34.4754 cv
69.8272 33.1014 71.0392 31.8939 72.2062 30.6571 cv
72.9337 30.6663 73.6202 30.429 74.254 30.0389 cv
77.8985 28.6795 80.0655 24.2996 79.8478 20.3011 cv
79.9786 19.5399 80.0685 18.7699 80.1183 17.9964 cv
cp
f
75.9454 15.4505 mo
75.881 15.4505 75.881 15.5506 75.9454 15.5506 cv
76.0099 15.5506 76.0099 15.4505 75.9454 15.4505 cv
cp
f
61.9776 37.2738 mo
57.4317 40.9451 52.8595 41.7982 47.2276 42.097 cv
44.5724 42.2381 42.2403 42.7401 40.9073 45.1932 cv
40.7218 45.534 40.8556 45.9173 41.1153 46.1302 cv
41.2648 46.4876 41.5567 46.7821 41.9776 46.8836 cv
45.0314 47.6204 47.6632 46.1829 50.38 45.0496 cv
51.9659 44.702 53.5392 44.2967 55.1046 43.8314 cv
55.5157 43.7088 55.7667 43.4144 55.8966 43.0745 cv
58.6153 42.0203 60.8126 40.3109 62.7892 38.0858 cv
63.2892 37.5238 62.546 36.8143 61.9776 37.2738 cv
cp
f
20.4239 94.7513 mo
20.2286 102.386 18.8204 109.637 17.4464 117.113 cv
17.3546 117.617 18.0411 117.81 18.2149 117.325 cv
20.7774 110.184 21.6603 102.295 22.0177 94.7513 cv
22.0655 93.7288 20.4503 93.7235 20.4239 94.7513 cv
cp
f
14.3849 107.506 mo
14.4376 106.992 13.6505 107.006 13.588 107.506 cv
12.5304 115.961 12.0763 126.107 15.4259 134.144 cv
15.5978 134.556 16.3634 134.575 16.3009 134.025 cv
15.256 124.919 13.4239 116.775 14.3849 107.506 cv
cp
f
9.37706 146.161 mo
9.4503 146.947 9.50791 147.736 9.59776 148.518 cv
9.79112 150.207 10.087 151.711 10.6876 153.051 cv
10.9327 154.892 11.2179 157.024 11.6886 159.107 cv
9.3087 156.159 9.30577 150.667 9.37706 146.161 cv
cp
8.52256 127.99 mo
8.58116 128.482 8.63194 128.975 8.67393 129.47 cv
8.68272 130.916 8.69834 132.366 8.72471 133.818 cv
8.5753 131.867 8.47666 129.906 8.52256 127.99 cv
cp
18.6769 166.332 mo
17.2081 162.783 15.8214 159.273 14.9171 155.623 cv
14.9337 155.439 14.9132 155.252 14.8175 155.082 cv
14.8058 155.062 14.796 155.041 14.7843 155.021 cv
14.3312 153.065 14.0079 151.071 13.9044 149.002 cv
13.6212 143.387 11.9708 138.096 11.6241 132.507 cv
11.6007 132.137 11.378 131.866 11.0958 131.726 cv
10.8741 128.31 10.4132 124.958 9.22569 121.795 cv
8.87217 120.852 7.56651 120.783 7.23643 121.795 cv
4.75596 129.402 6.60948 138.978 6.84288 146.875 cv
6.99034 151.859 6.03721 158.548 11.0499 161.451 cv
11.4884 161.705 11.9483 161.571 12.2657 161.284 cv
13.1495 164.127 14.5157 166.622 16.798 167.776 cv
17.6739 168.219 19.1398 167.452 18.6769 166.332 cv
cp
.478431 .870588 .898039 rgb
f
14.4356 105.009 mo
14.881 103.542 15.3556 102.084 15.8839 100.66 cv
15.4747 102.139 14.9591 103.623 14.4356 105.009 cv
cp
22.2491 87.2694 mo
22.1886 86.4661 21.1456 85.8465 20.5226 86.5545 cv
20.044 87.0994 li
19.6983 87.492 19.7814 88.0365 20.0665 88.3763 cv
19.8683 89.7406 19.6603 91.0565 19.4073 92.3436 cv
18.9874 90.9852 17.254 90.8802 16.4952 91.9871 cv
14.4825 94.9232 13.6222 98.2425 12.586 101.617 cv
11.3634 105.6 9.88487 109.544 9.93077 113.751 cv
9.94248 114.883 11.6007 115.124 11.9103 114.019 cv
12.2355 112.858 12.5616 111.649 12.8937 110.426 cv
13.4347 111.096 14.7511 111.12 15.1105 110.035 cv
17.7862 102.314 22.8956 95.8861 22.2491 87.2694 cv
cp
f
23.3292 64.4657 mo
23.0831 62.6073 20.7384 62.1693 20.0372 64.0199 cv
19.7081 64.89 19.6808 65.0687 19.7931 65.9925 cv
19.8605 66.5482 20.1339 66.9608 20.4952 67.2313 cv
20.5401 67.5365 20.5802 67.8421 20.6124 68.1488 cv
20.0323 68.1717 19.4806 68.494 19.3351 69.18 cv
18.8302 71.5574 17.7335 75.5159 18.3644 78.4183 cv
18.1993 79.4032 18.0148 80.3866 17.8077 81.3685 cv
17.4308 83.1624 20.1788 83.931 20.5655 82.1283 cv
20.6202 81.8714 20.6622 81.6131 20.714 81.3558 cv
21.3644 81.3299 21.9972 80.8118 22.1944 80.2127 cv
23.9249 74.9481 24.0528 69.9193 23.3292 64.4657 cv
cp
f
21.9679 49.2889 mo
21.961 49.2562 21.9425 49.2371 21.9327 49.2069 cv
21.8937 48.9881 21.8536 48.7694 21.8146 48.5506 cv
21.8761 48.5633 21.9356 48.5838 21.9991 48.5882 cv
22.214 50.0492 22.4171 51.5125 22.6026 52.9779 cv
22.3741 51.6268 22.1896 50.3387 21.9679 49.2889 cv
cp
23.212 38.6556 mo
23.0372 37.7923 22.1935 37.5062 21.4718 37.6815 cv
21.0226 35.7889 20.5646 33.8949 20.1095 31.9945 cv
20.2999 30.5819 20.1114 29.1649 20.2608 27.7547 cv
20.3722 27.2894 20.4581 26.8158 20.4933 26.3202 cv
20.5177 25.9686 20.4366 25.6844 20.2872 25.4652 cv
20.3351 25.1859 20.4034 24.909 20.4659 24.6322 cv
20.5909 24.6112 20.6085 24.4569 20.5206 24.3924 cv
20.548 24.2845 20.5626 24.1756 20.5948 24.0682 cv
21.0841 22.4095 18.8302 21.6283 17.9249 22.9427 cv
16.6808 24.7484 16.2755 27.0658 16.5401 29.2171 cv
16.6134 29.8045 17.0099 30.2909 17.4962 30.556 cv
17.6095 31.2479 17.8185 31.9178 18.2062 32.5384 cv
18.461 32.9466 19.0167 33.0985 19.4591 32.9657 cv
19.4884 33.2996 19.5196 33.6366 19.548 33.9701 cv
19.3585 32.7879 17.6583 33.0052 17.8771 34.2269 cv
18.7501 39.1077 19.7335 43.9642 20.8155 48.8011 cv
20.5001 48.9657 20.2608 49.2938 20.3409 49.7376 cv
21.1036 53.9476 20.8702 59.7078 24.0177 62.9417 cv
24.7814 63.7274 26.2677 63.1532 26.2267 62.0267 cv
25.9405 54.1576 24.7755 46.3651 23.212 38.6556 cv
cp
f
44.6466 57.9842 mo
40.7413 57.6805 37.4689 56.8114 34.213 55.2489 cv
35.545 55.5208 36.8731 55.8577 38.0978 56.0433 cv
40.0821 56.3446 42.0773 56.5448 44.0714 56.7743 cv
44.6251 56.8382 44.794 56.1053 44.4903 55.7616 cv
42.8126 53.8563 40.5606 52.493 38.4835 51.0687 cv
35.7462 49.1912 32.9874 47.3441 30.2384 45.4827 cv
29.4376 44.9403 28.6847 46.2406 29.4815 46.7782 cv
30.1378 47.2201 30.8087 47.6561 31.4864 48.0907 cv
31.4981 48.1385 31.5187 48.1883 31.5548 48.2391 cv
31.9728 48.8338 32.419 49.4183 32.878 49.995 cv
30.8917 48.8241 28.8595 47.764 26.6007 46.952 cv
25.9737 46.7264 25.7101 47.7176 26.3273 47.9466 cv
29.8331 49.2474 33.6495 51.0741 36.3526 53.723 cv
36.9933 54.3504 37.8439 53.431 37.3126 52.7635 cv
36.6866 51.9764 35.9991 51.223 35.2833 50.495 cv
37.8439 52.1204 40.3741 53.8099 42.629 55.7196 cv
39.7032 55.93 36.046 55.8265 33.211 54.7367 cv
33.0538 54.6541 32.8956 54.5745 32.7374 54.4886 cv
32.7784 54.3651 32.8146 54.2352 32.8351 54.0804 cv
32.9708 53.054 32.2687 52.3314 31.4532 51.8538 cv
29.964 50.9808 28.6896 49.9622 27.5392 48.6693 cv
27.4425 48.5609 27.2569 48.703 27.337 48.8255 cv
28.2413 50.2132 29.3253 51.3826 30.5333 52.5116 cv
30.7716 52.7342 31.0304 52.9495 31.2413 53.2005 cv
31.4864 53.492 31.5333 53.6639 31.4835 53.7694 cv
31.2247 53.6151 30.9679 53.4715 30.7062 53.3079 cv
30.7032 53.3192 30.7003 53.3304 30.6964 53.3416 cv
30.3273 53.1556 29.9317 53.2542 29.6866 53.5037 cv
29.0255 53.1971 28.3614 52.7694 27.756 52.4696 cv
27.0704 52.1297 26.4649 53.1517 27.1524 53.5013 cv
27.7276 53.7933 28.9972 54.6243 30.1944 55.0682 cv
33.4796 58.1351 38.086 60.056 42.6153 60.3289 cv
42.7149 60.4027 42.836 60.4471 42.9689 60.4427 cv
43.5294 60.4378 44.089 60.4032 44.6466 60.3387 cv
46.1534 60.2054 46.1671 58.1024 44.6466 57.9842 cv
cp
f
27.9454 63.4505 mo
27.881 63.4505 27.881 63.5506 27.9454 63.5506 cv
28.0099 63.5506 28.0099 63.4505 27.9454 63.4505 cv
cp
f
39.129 76.5628 mo
38.4181 74.9676 36.3263 73.7738 34.9913 72.6888 cv
33.4991 71.4749 31.9855 70.2874 30.461 69.1136 cv
29.4024 68.2982 28.3468 70.1121 29.4083 70.9149 cv
31.0616 72.1644 32.6974 73.4364 34.3097 74.7371 cv
35.5362 75.7259 36.7774 77.2108 38.3214 77.6126 cv
38.9728 77.7825 39.3731 77.1126 39.129 76.5628 cv
cp
f
48.6046 86.4022 mo
43.4024 83.0682 37.587 80.4754 32.1124 77.6112 cv
30.5899 76.8148 29.2364 79.1273 30.7638 79.9183 cv
34.6632 81.9373 38.5392 84.1463 42.5011 86.1151 cv
41.7306 86.0677 40.962 86.013 40.2023 85.9451 cv
39.5978 85.8909 39.505 86.8221 40.0626 86.9808 cv
42.6192 87.7103 45.0909 88.1702 47.712 88.5057 cv
47.714 88.5062 47.7159 88.5072 47.7169 88.5076 cv
47.7169 88.5072 47.7169 88.5067 47.7169 88.5062 cv
47.8204 88.5194 47.92 88.536 48.0235 88.5487 cv
49.2384 88.6986 49.4737 86.9593 48.6046 86.4022 cv
cp
f
45.7276 89.0076 mo
40.9337 88.5579 36.3106 87.4207 31.8077 85.7347 cv
30.3087 85.1737 29.6593 87.5755 31.1476 88.1302 cv
34.0206 89.2015 36.9396 90.075 39.9523 90.6615 cv
40.7159 90.8099 45.1378 91.1102 46.9122 91.6136 cv
46.6212 91.8382 46.6505 92.3739 47.0558 92.4583 cv
47.5157 92.5413 47.9689 92.6497 48.4161 92.784 cv
49.1485 92.9813 49.7472 92.43 49.8038 91.7269 cv
50.004 89.2254 47.6114 89.1844 45.7276 89.0076 cv
cp
f
42.6661 97.0765 mo
40.4552 96.6248 23.7423 94.8392 24.9649 90.7933 cv
25.214 89.9671 24.0021 89.6771 23.6993 90.4442 cv
22.4737 93.5511 25.7208 95.0892 28.1261 96.1102 cv
32.5528 97.9891 37.6339 99.2171 42.4552 98.6419 cv
43.2667 98.5448 43.629 97.2728 42.6661 97.0765 cv
cp
f
40.2071 115.797 mo
40.0216 114.942 38.7228 115.157 38.711 115.999 cv
38.6456 120.614 39.338 125.122 40.3146 129.588 cv
40.1876 130.094 40.295 130.665 40.6446 131.049 cv
40.961 132.417 41.2999 133.782 41.6476 135.144 cv
42.0314 138.989 42.4308 142.829 42.8692 146.664 cv
41.6505 143.578 40.4786 140.475 39.506 137.293 cv
38.2286 133.117 37.1925 128.891 36.38 124.62 cv
36.8106 123.954 36.6808 122.934 35.9884 122.488 cv
35.4942 119.598 35.1026 116.689 34.8194 113.759 cv
34.6993 112.517 32.7667 112.481 32.8507 113.759 cv
33.0567 116.91 33.3683 120.139 33.8019 123.389 cv
33.7179 123.776 33.7657 124.196 33.9562 124.539 cv
35.4776 135.203 38.4269 146.032 43.9093 155.087 cv
44.3683 158.514 44.8731 161.935 45.4513 165.351 cv
45.6856 166.74 48.0323 166.746 48.2628 165.351 cv
51.0333 148.587 43.7091 131.935 40.2071 115.797 cv
cp
f
69.255 149.311 mo
68.0499 142.816 65.8175 136.379 63.6202 129.992 cv
63.0733 126.816 62.587 123.663 62.0167 120.652 cv
60.464 112.455 58.9981 104.035 57.0128 95.8778 cv
57.8282 96.2191 58.923 95.3118 58.7853 94.2889 cv
58.0987 89.223 57.964 83.1927 56.2716 78.3787 cv
55.6446 76.5975 54.3937 75.3475 52.7384 75.2713 cv
52.7345 74.8499 52.7296 74.4285 52.7247 74.0067 cv
52.8185 73.2484 51.6339 72.9813 51.3048 73.6224 cv
50.5636 75.0701 50.6319 74.8504 50.2521 76.4305 cv
50.0206 77.3919 50.8702 78.2791 51.8468 78.0247 cv
53.3194 77.6409 54.5421 83.5057 55.3419 88.4725 cv
54.5069 88.45 53.6046 89.3778 54.0909 90.3944 cv
54.3058 90.8426 54.5206 91.2908 54.7345 91.7391 cv
55.8214 101.083 57.798 110.53 59.628 119.783 cv
59.0323 119.756 58.4034 120.23 58.6114 120.979 cv
61.2706 130.557 63.3233 141.012 67.6075 150.006 cv
67.6124 150.003 67.6183 150 67.6231 149.996 cv
68.0968 150.823 69.4483 150.357 69.255 149.311 cv
cp
f
55.8692 53.6868 mo
55.3312 51.6146 52.9747 51.9993 51.1876 52.8197 cv
50.8761 52.6468 50.4962 52.6165 50.1339 52.8568 cv
49.4689 53.2972 49.0802 53.8563 49.1837 54.6854 cv
49.1866 54.7083 49.1964 54.7274 49.1993 54.7498 cv
48.879 55.1761 48.3927 55.4837 47.8888 55.6366 cv
46.5069 56.055 47.0958 58.2274 48.4874 57.806 cv
49.7716 57.4173 50.7198 56.62 51.3038 55.5326 cv
52.0489 54.9456 53.2853 54.4002 54.1144 55.036 cv
54.9864 55.7059 56.1075 54.6034 55.8692 53.6868 cv
cp
f
59.4054 63.4593 mo
58.4884 64.0218 57.588 64.5443 56.6642 64.9793 cv
56.0646 63.5526 53.7442 62.5067 52.7491 61.8021 cv
51.588 60.9798 50.4942 62.887 51.6368 63.7044 cv
52.1524 64.0726 53.8673 64.9051 54.1339 65.4891 cv
54.2189 65.5184 54.3028 65.5477 54.3878 65.5775 cv
54.1368 65.682 53.8849 65.7865 53.6339 65.8909 cv
53.0187 66.0911 52.4044 66.159 51.7618 66.1785 cv
50.0382 66.2308 50.0401 68.7884 51.7618 68.8558 cv
55.0685 68.9847 58.8136 67.5389 60.336 64.3895 cv
60.6153 63.8104 60.0245 63.0804 59.4054 63.4593 cv
cp
f
70.3507 19.4491 mo
70.6095 19.5291 70.8614 19.5096 71.086 19.4222 cv
70.8312 19.6883 70.589 19.9647 70.3419 20.2376 cv
70.3097 19.971 70.3058 19.7059 70.3487 19.4486 cv
70.3497 19.4486 70.3497 19.4491 70.3507 19.4491 cv
cp
73.0694 17.3792 mo
72.6739 17.7904 72.2696 18.1981 71.8673 18.6068 cv
71.8702 18.598 71.8751 18.5902 71.879 18.5814 cv
72.1661 17.7762 71.8819 17.2874 71.7481 16.4974 cv
71.7325 16.4066 71.7345 16.3153 71.7257 16.2244 cv
71.9308 15.3817 72.1046 14.5223 72.3263 13.702 cv
72.6583 12.4666 70.9269 11.2454 70.0284 12.3646 cv
68.756 13.95 67.5899 17.6444 69.5714 19.0579 cv
69.7345 19.7606 69.5597 20.6605 69.5216 21.3333 cv
69.4962 21.7874 70.0929 21.9935 70.3956 21.6952 cv
71.5665 20.5404 72.6124 19.2435 73.6993 18.0091 cv
74.0753 17.5824 73.4708 16.9627 73.0694 17.3792 cv
cp
f
111.052 174.801 mo
106.826 177.166 97.7569 172.875 95.8868 169.242 cv
95.5831 168.652 95.129 168.352 94.6417 168.265 cv
94.5792 168.09 94.5147 167.915 94.4444 167.744 cv
91.8839 161.494 87.419 155.731 84.3155 149.701 cv
83.1378 147.411 79.6847 149.432 80.8614 151.72 cv
82.4884 154.88 84.1749 158.006 85.9679 161.076 cv
87.3458 163.432 91.461 167.938 91.2608 170.773 cv
90.3849 172.311 89.5099 173.85 88.6349 175.389 cv
87.2628 175.576 85.8868 175.623 84.5079 175.533 cv
82.4591 175.47 80.4122 175.183 78.4073 174.771 cv
74.6544 174 70.4776 172.928 68.7599 169.123 cv
68.4454 168.427 67.919 168.124 67.3634 168.093 cv
65.588 163.463 62.8741 159.253 61.3038 154.517 cv
59.2159 148.219 58.8858 141.484 58.5118 134.913 cv
58.3653 132.353 54.3644 132.337 54.5118 134.913 cv
54.8741 141.293 55.2413 147.774 56.962 153.963 cv
58.7003 160.214 62.6212 165.514 64.3722 171.728 cv
57.2784 180.537 45.589 179.241 38.503 171.334 cv
38.0245 170.8 37.462 170.643 36.9347 170.722 cv
34.5587 164.401 32.9649 157.832 31.7091 151.188 cv
30.1417 142.899 27.7218 133.807 29.5235 125.415 cv
30.0626 122.905 26.2071 121.833 25.6661 124.352 cv
23.8087 133.001 25.9728 141.964 27.5304 150.514 cv
29.044 158.816 31.0558 166.922 34.2491 174.724 cv
33.6896 175.512 33.1564 176.312 32.3536 176.939 cv
31.3478 177.725 28.212 180.213 26.9474 179.179 cv
25.9776 178.387 24.8019 178.662 24.088 179.339 cv
17.0655 177.893 12.7179 167.261 10.5304 161.429 cv
8.31553 155.525 6.81553 149.307 5.546 143.139 cv
3.7501 134.418 3.58506 126.377 6.0167 117.754 cv
7.9542 110.884 10.3097 104.11 12.4786 97.3104 cv
16.4591 84.8319 21.4747 71.6683 19.8673 58.3382 cv
19.086 51.8538 15.8517 46.0062 15.3702 39.4784 cv
14.8263 32.0994 16.8692 25.0404 20.8878 18.8812 cv
22.9337 16.1107 25.4278 13.6849 28.2062 11.6253 cv
26.3546 14.2259 24.9806 17.1722 24.1847 20.3636 cv
24.1407 20.5394 24.1241 20.7059 24.1222 20.867 cv
21.3487 26.7103 19.1075 33.578 23.3253 39.306 cv
27.0558 44.3714 34.1612 45.679 40.0616 45.4657 cv
47.296 45.2044 54.7452 42.5794 60.5665 38.2586 cv
63.0196 36.4383 65.0108 34.3587 66.0841 31.4539 cv
67.5841 27.3963 66.8214 22.9242 68.7188 18.9632 cv
69.0313 18.3109 68.9737 17.6844 68.7149 17.1683 cv
68.8849 13.6898 68.586 9.48568 66.8614 6.3182 cv
68.9591 6.94662 71.004 7.73324 72.9444 8.77865 cv
78.336 11.6844 85.2589 18.4495 82.1163 25.0501 cv
75.8487 27.826 70.1466 36.1541 69.2149 42.6864 cv
68.6573 46.597 70.1954 49.6615 71.8487 53.0658 cv
74.8995 59.3504 71.5772 62.4813 70.4562 68.5125 cv
69.6622 72.7855 71.1837 76.8607 72.6778 80.7899 cv
74.4688 85.4989 75.339 90.075 76.2481 95.0086 cv
78.0675 104.876 81.1017 114.415 85.0763 123.604 cv
84.8517 124.105 84.8233 124.702 85.1456 125.324 cv
90.8839 136.376 98.9435 146.432 105.895 156.748 cv
108.183 160.144 116.787 171.592 111.052 174.801 cv
cp
28.6329 19.4647 mo
30.3448 14.5145 33.6622 10.4339 38.2579 7.73617 cv
39.0079 7.29623 39.2667 6.61117 39.2052 5.94613 cv
43.7657 4.44955 48.5704 3.79037 53.2491 4.12142 cv
55.9308 4.31136 58.6495 4.58431 61.3312 5.0389 cv
61.3351 5.64584 61.586 6.25961 62.2003 6.70052 cv
65.1124 8.7889 64.8878 15.0589 64.6534 18.16 cv
64.6456 18.2625 64.6554 18.3543 64.6603 18.4491 cv
63.3722 22.2782 63.7648 26.368 62.2384 30.1195 cv
60.0216 35.5662 52.8282 38.6917 47.505 40.2303 cv
42.4454 41.6922 36.5011 42.1785 31.462 40.3275 cv
22.2335 36.9368 25.0919 27.7547 28.5011 20.993 cv
28.7745 20.45 28.7843 19.9242 28.6329 19.4647 cv
cp
116.882 170.538 mo
116.007 162.628 109.787 155.371 105.485 149.044 cv
100.267 141.368 94.4513 133.813 89.9024 125.683 cv
89.9923 125.277 89.9649 124.828 89.754 124.367 cv
85.8175 115.746 82.7853 106.76 80.8087 97.4891 cv
79.8907 93.1824 79.4923 88.7244 78.2579 84.492 cv
77.1651 80.7469 75.1192 77.2381 74.4552 73.3714 cv
73.6642 68.7703 76.0831 65.5658 77.1397 61.3724 cv
77.8868 58.4095 77.4142 55.7489 76.2413 52.9764 cv
74.2101 48.1717 71.8605 44.8114 74.4493 39.411 cv
76.3009 35.5496 79.5665 30.3641 83.6944 28.6878 cv
84.2735 28.6649 84.8419 28.3841 85.2228 27.7288 cv
88.6505 21.8324 86.1388 15.179 81.7667 10.514 cv
76.0597 4.42269 67.7813 1.8641 59.7364 .778162 cv
51.2403 -.368323 42.9708 -.721838 35.0899 3.11361 cv
27.5401 6.78841 20.2599 11.9554 15.8409 19.2113 cv
15.6534 19.5199 15.5675 19.8226 15.548 20.1121 cv
12.9366 25.0828 11.4103 30.5443 11.2901 36.2215 cv
11.1437 43.179 13.9288 48.9759 15.38 55.6063 cv
19.0753 72.4842 10.2774 91.0565 5.23838 106.852 cv
2.79893 114.499 .0333056 122.161 .000102428 130.286 cv
-.0321241 138.165 1.91807 146.112 3.92784 153.678 cv
6.66124 163.972 12.1173 181.854 24.6974 183.443 cv
25.2765 183.516 25.7159 183.358 26.0304 183.078 cv
27.9503 183.703 29.9415 183.112 31.9122 181.978 cv
33.169 181.254 34.4444 180.471 35.5314 179.5 cv
36.3439 178.774 36.8663 177.85 37.4923 177.008 cv
37.7071 176.867 37.8927 176.683 38.0558 176.477 cv
46.92 184.023 59.5724 183.65 67.4522 174.219 cv
70.0099 176.741 73.7394 177.88 77.3438 178.628 cv
81.8663 179.568 88.8399 180.976 92.7765 177.781 cv
93.9405 176.835 94.6563 175.635 95.0235 174.326 cv
102.098 180.247 118.192 182.392 116.882 170.538 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (6_body.eps)
%%CreationDate: 11/11/2019 10:32 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`r8QG5q69HCPaukgH2QkR5PacoIXh7nSb'"MjpOqunu3=.Oft)')D937`Dq\/O0>/SnDa0'RkJ*_H@#Je
%pP2hr?bQI<(V@RlT=itXk/k+'RjYhODP'.Cop=M6q3._+Q><XQQ+jtXpAFXHea"#IhX'=+C^a\Bid^`0Y*'a^mqaXas6>:pI<k_P
%NP(k<)lN_spV5M0O-EZd5Q/X[hgYIhq_t^N]Qs59jo>/p:;-X,em!WLqqVqaL"u#24"&'Ejd3U>m6<i2iV=F@k&*=Trqbbi45Ai1
%mXFmN>/'0"=WZXK/9^6l>TF:Pppn<Bf$j'd%=e,aY`&@J0>9F*).$+[b:Y.;[C6P!SHkhLVgM)0i9OJ%]m0,EcelLX&E:8cgqNRO
%q3*bH2Ya+R-!][M(U(KAG,_TN.O3'Y>Uf'?KogJW`N-uR](;U@H*fE=(m=gF=1`2^S(f$Wh>ZLP]Dm?WjI=oU-6:^AhgG7drtd,'
%/ml"cJokk>MKt&%_XDu!If&s`?9W]\+.Cm6FGPG<lC6PkEnu&:S**Qq1fOGEs6Yb04F-nmm2M2f=3lB3#le@8Qi=VSrp\q!:]>YJ
%H$7T,o"4@.?iK$7s55uN[T%N@Ob\0-*Kt6o2&@D?GXBV9kPG?1/9Y7Q!]T?;/t3r=_&"<a^O,qGgLi0hd6c^g]G>EaiKpa?IC%4P
%iceE&O3bA:e">4kfS`Be]QnSqZM0@M?QX_Qc)Kgi2dbRlVjH9\?G4/$I#idFAN%5dM>$kt\+\SL+8h\bieR!h_q=JODdUTicX,VN
%O!"=$IojDaiqX,Ub?qu4otu!gHMPmj*^BMcof')Rl#uecDP+Xgoi_RsS)*Q4l$pl@I^],&kPOZXYFdqBHcWtB3EK"JIJ:'lgeb`V
%p$GM(/(a?arP&lR?Bg$)V=b&HH@#DImIOE:9fLYp*cf:SSj.MrjRnPJ(cVBcZQJ9f:SaW6>N3TU2h-5%4[jD*PA]>bGg>"@hf?U+
%X+rh&f?[d[\HU`Z]RKI==0MX_!IOhD#O:)GYHMjDcgA@4puS,dh`Ukdq)tkQKCAZUP;duS2<OVo2rB[&d!r2]N*b,ELOApVan+]A
%^4#t@]0AH*]%b"!iVPk,rp]4'o5XL4^E67?J&bpTb(i+ObJ1ddVcV3:IK*b=Ao@E2]'%bqkI4gtp%p\W&!K1Nqq!KNpJUnOmT8$I
%k8thH;m1JM\,VeCg:6FrPN8)1St>N7;teG3B5E&TSn$%F#+s<Kq=MofRCr8BW4/Aij^4U81ALOKIsT.'75t8<Z^5,^m(WDVfpg`=
%DSCGe*A#q#Q[a>Ph(<875P*(kQK`0fdH220k<FIn=shGiroJOM04-s>k*`<:^Q9a2//[X"h*M$c$[mMOqbeJV\R!ePYhO[!psD;i
%I^E?+?c>XThct%&X1cD8(.UGZINS'3^LaZ*I,ls0d_qZ5]:XJaJ,P4A1;1o7hZgNChIP7,Z0SmOfcA!r9k*69$gn*Yip2Z<c2RU$
%HB[tm?6jskH[M".d'qXL=,H<2GE3kqn\a\]T&9P'mWYk,]_iQ2k'>-Npm*6$QLVGGZ?$>%CLX>kr/L`T0fY%`Y!++gd*fkIaK+D"
%5E?mlkNaB`]FNQmg<$V,P8qWODq>F_[H/aL5mtprf3gb6lETcXr1]LGCTP7]E`3HgZm&s^Eeu(VQZ(qEb-B95Md/&e;N<bJ08I_D
%?IFfQVf\0`OS3_9UJafTNg-7X508aS0&FZhM?c0&<F^sXLmW0K%!)-Q`$O2lP8qV^O@)2ZZr#j45otiGA?<HAEC%/`/H1CE8WKQ1
%aK_)lg<3"_lAHX,alMR7?92)8`%CHd%X6r.EZF2n98Do2;rjuJ,`3Sp,rq]`a5@#=fl#k1/Oqf2nn5^BbL(Q63AQZ&6p#uaipifD
%Q_PcYk/QAXs72F6s6aMOrRg#cNu]VI3C+kN^BaT7K,iM?^&5Ft\%N46^;uH1)8iZhEhH(p_DcM*j>b53dmYsnX2k_q7g'6+/[@b.
%BfC&P7=G_ei'`BXL]o(118Ig$O2$h;.'drV@o%B]Y4rT9MK4tt_XND(M0qV+l69,L.S';UOT44]s'NssjA2'@0Co,HJcjC3q=>G`
%ZBQZm4FSQ=G`kFjnK<>TGl8eP7H?4^A3r2dF@&0^aleXT./o$mp<d#,n]s;bkX7V?FPVC+M*E*C'q7bO8H^ArUc'*n;clH)PB>P&
%*(?B.m_gNGe`&cadNUl'PhFUJ4&5?p6,'p$0-'PBoMgot>GX!6,*ku9FdB;BQ4^]jnHq%#75Vld8RKV2#9!=eP&Rop?JgQtG`e@;
%;KOKGFV<AK1'OFp<KY+7LVr(!ipVmn3\_`<!W5lWf>mj[Ga(;4F:+qa,G0jlTBjtbFHf.BDIa*";#hFA.MWPdG-dg$j3;9X7ukm3
%!J8\fF!*j^VC4crjO<0_.;TR,CCr`9iK<,UHS8??cinu0Rij'ij2[3KSFLYPS[#)S+/pl20WV0:4f:ZC;MC&E4@!K[IeM?(8"!%0
%lo9:8^#MKgHPn&'^!)=8nGl>04f9d,m0Q^[h2;R]XHV+!7Z^o8cFt'jEK(@Qm;e^,2hr>c*uP(+F>=,!NatM.JWN[C/'22WJg:-j
%L`Tipj[;>Uas"YIg6]^0!Kq?;8'<UFV:M?W5V4pTRT6`b(c%Mg2sf09IWh>I1/DIHd(r]HkQ!#U]HA8Nb=+3RT4/ZLiJ%'d8*#t/
%7&;RrF>Z*S(5`2Al&i9)7mjmL:2!=;9^p!"N[\>.A#KG_:jX[H"'*8G1'Z8P&d0M4og%(?.Mb,`(DeP@.%Wmc[-%L8Uj>)lK2qJS
%fb<T`jd)k#])6[WS7Soti@Kb8E]>>,MNs>Q1-&"&alAIR59t98aY&jb>af3sd1Jr0LeM's/MU\?FDDTTnKLJ]aOEe7jWIHE/W[%)
%kukS]MF:ns>.E3mM:pYC;YFRBa:Lcm.uoP18Y1Y?jdO@adH/<jO@?k`7``Ei&1f$3)1ps;hGee/MoW5I7cgA,UlPToN4rC6A7Vo8
%?ua7m*->ms\0N')(gM,"-s>DH(atEaaiOsTCGSU=c&s3tk[_qm8TGN%h:!XKAs,P#,Yed]0f<@#m*-N$0p9`pEAU#3r(tk;dd0M:
%E]>j4N\]F!BJcfB*1`)JYD1u<gOZtS"qk->,B27O^g/l"0:De]Gp>2X5N4$38UH>ek)K5^oW;X-'FBq$6t_<4.B\%ENCs9*l3m"`
%#aUq<Xr$S9f>"3cn..0Z5'_/Fc0eeO6Ee68\C`FC:YcoPQA?@S+GnZa1@l$NLRm'';=k[+KS*rLfEkCXXGO/%LTQY,/GC?_-a=JX
%#]C>1(8W3AIAG-GWH=hKpTeD03fR+3NOAr>V'o!8a[kMqW"Si(LSqlab%0n_Y:dP;iLLe@^>pV>F^<6h;c1LSLPh:pASTND_Q/Ph
%<LkU$<HkJ4b#!Gcip/gU4iFd+7G*maHCX?3km&!ml#;t"&HI=D#T&PHc]PX@e`_EO^@s&M+*,F!ITJc#O?5Z(m.QN.meEIH*e&LN
%j*bQ6^5Wes''OI[X`>&fZA;j,`%"^1ZBk_%]#E,+.F]sT=k7J$JIAd5ASN(0-mI_BdkZJ\8YOO%;pWZLR!+`!h4BAVM>B\!:86%5
%e2fG:A?kR"R\PGb[EiTRm>"91#+:oi_\ejO0tIF\U\8;W*ERI#9X/Jo"Z+/!/N'#.rFhC7G&7F%Nl*i:ZS(Q5RiXEBQJk`O8],iM
%?gA<\El>:/h)VDSM#lFVPQr:Q4lhXr4cf=16gj`01Z%kNn/WVK,Bs((5Q<J+pb%O]l'!T+%dt1#L7>904nXY6K;)/)(su?\TWH_K
%>/\U+@W!RI/X9?E*(NM31"&phoSL)2cCD`=#2ZO\\k\[$au(!TK=Q9*1T_:E<`+YR=B:1pB$GA]:>X>LWa4*U>(MH/b7)uu1eQF\
%J8Nq/?-h<V1$>!;UN+eDg1[%ZhDs%M(QL;rA!l2l[*nonUoEF8GI?&WO8F(R]=$K#*M;fq06P<b(&ZV8Tg=4E,LYVpe7P`,Y/M7Y
%c@<`q`VucQMl,;Kiro[mQrLtKd;Z=X.WsNTfM13bZ`KT*G#Pl?`&!$TbG+;V8Igru$e0C)TJ-B\#eQf/'Fa:Z1fiNG!9Uj9\0Z>5
%4U3Q?kd`PP=k%>BYb9OXf2cS?&8<BoW1$@2,1TQ0?rHr#/YlLBlBSM,qAes6g(g!#@[#tDDbFUB51f(&c(<DN!H%e%F6e#G&PEs*
%`s]rPo!(Yb/fpV3RYMsS+c"kC60Ag[IaB6^I.4]HRI8]bb0A2UnRaG4@C\rgiPqF+:.H2u-BfUp'QhBbj&&2IOD$htUF-b%4R<B+
%AceWci$Y2D7c-6?oE=4]^_:Z7^eTSE($Ib8<i.";6C\7!DSSu!2T;ESi9!D"bmE/NZoNc.#&c\S`2TLCB*UF3k#A!PThYbQ(%0j]
%'XeYH"RN+mfVm2"d89m/SOI+:>kVj9ffe<@CK2;hUFd7Zj[0ofNBr%V%^G[D;H:+d`GP^KlHuM1LKV3gkpBCN#>MhNO%,?m>HE$3
%icKjuEW5"L6gcpC`7r2cgiK"BH5pMh3'R*s4QMSc53TY+i2d<Ah!r5Dro^iPc-9m\nl_`8egR.Jb,;i2B8uIbUO:W@T/Fch];'))
%Obu:"ch7<dr%FJ5:h5Ga`:%8hCSX'?QQ%EGMTfY?\-6$B(]JFu<T2E^&+Oq0@(Cf0JOO\8Gf3a+5;To%-U53SYHjWq'e]Hf?W6#,
%alf4%Y(CS'F3XOLqDFc7K@02Yq#p,WHigcK/s\A,5Cf-8lAUI[^9tt07^f=o"Nf%q6nr?:`Kgb<9Y&:.c_$glT".'*a.3S.T\o>7
%1SH?G2@<<HQ&.gAMM%_G)RgEiVNfm7b=/-&'_g(0Q/[qO`-]VKb.h?G6FofqI#F*bA`UOprC'+:i!sn!;?,nKg#)=0^\?4NhC"[5
%/mb+ldXF)?2@2=-Yj[^*X=1qj$1f>lmMNr9ZCkE(>YG5iE4:X+EF;$OiN#LO=$^+Y]$,M#5drLr2$^;tJR!l0NqlWi$WNB'TK48J
%73g"i]ZgRs&Un1[].G8PVHA/(jfr"/?m%.-/8nO0<_i^(RHUBe.VWFmC6#:qV`,h^<V'.u\Z*jE;L<$@8Z(s5\Z)$ig+u]\AZ-eC
%Fj<m%L']A*X$7snDDZ#!nY=PWLY5t2?q22,)MuJ&bITk%SYO:I2:lt72Rr7qj*9Oe+1^F.T:>_<q^f)H&?"I!bs2!M9\m$BmWbYs
%j,VH0I,?G55qWV9,M5sih]Ne,KBF.^b"Tn(AA9?f[hmLWWdbpS9VNRgkR/Dt*_rn\G)ctfh2Fb;C`7"`STGcR8b9/Z:Xrn1onhAQ
%4]Nkh"@:;5eeCEr15![GC$7%VL'LAsd6-ZlTlUU2?X'2&LWTK#La1->@IG9"7KD1GJ17]f5srGR>VZ^)V"Td952*j<Mo@.F*lje@
%G!4sG+*s#>Zsh;$mlC2,/&,jaeUVApkj)*dYt"$'B[Zo%k+>eUgh`%F3G/fdL)uW?nY9U(E5[*aoSt0>*V4oEEoEt[LYVDpgKT^3
%mR-F;J@"+qplBjD?8/^5C3\uh$SO6ts0.'@4A3]FE^S+BmlC@pbO8fEqjH1lg0r:pIn4JW$8.%3o^K4'FBsQc]]T$N9`Ic$dL%L=
%hS4V6@aAn"V/oJ46V;Vh8m=:>%[85bH\IWk5ggqiWRu2#*DN2hh!m"-[":a@JO=&Md!QB5H5KJ":PP!IgI(CRf&GtIO)jKX48<5S
%^3n!Bn+k4`*rhAkGQq\#A/VO/=`r!6,'NI,g89aM*hdLIMjVd[<[+4I8ZRqLK;95Qf;<a)dj;BtW7N(njUo[=f;bV?W&]2%kYB[U
%c-T)7S%>A$H.6Vj\pdNW>TrSDU**W(CQYW^WNr\3Q`-JlW)fe`B_ca202m;saD-MG/3hfcIB\=g^#d-hdr/Dp?'m%9RSF6mUOhZ\
%"kVTrFf5)^FJ']2Q0LiVRYS1L/Z`*&1tb89C,TRmN\VXNlptd0SKGCP\8_4i&,2*:)Z-352>]Ira,_9bSfO_Q+*,C,SFo(dJ)i\/
%1_!*17GFJ?pmV#]<@2FWk(-V>0!^MfqDe:=O8V=\"G`[J-NPHR8LbcDVHTdM_Qo,s&68]p+\pNg7on*=ZZ+/=b!u99Ya.&NShet5
%'(\Ai2dP.BN%/%^>59Q2\Kc7QTu3p3USPUkpElhTbf>ge0A8+b-<#sZ4Hl$i!662i(dnE'=;0]\Tjl+ajqPBA,c7EI*npagD+`Z^
%/;^goGnJN%,,i[2;g1m8]G4\b4n>j?jQM;(RX4`Ma6?lbh!pru]_+7U+*,C`D'*tL^>o)1mh8<'lp94^]!,XCCl@5RTQI0d(VoN(
%##K_#='7%H016aCoF=gH/#Mo_QaH[M6W!cRP#c9EV<3Z>?`Y#*9VkmeKRu,8bum'G>Z:_*$dl2RUgdP/Yq<3D`E_.!M`-i%ltIW#
%ifuUNAJTL4\40&DlX^h&mq?R0G\)Y]rj@PNrYB^"Q6>&sbBAVB7XAa`.Li<Bhep,JR6UrdDPrLt'2LAtLs5^mm<p64d*1L(_:o9Q
%:8EENVH")J(N1QPYaDU!ooN:l;$i"c_cF$5iS?T#dZ,k@Je)5,i,iEb^`1%S7jiQ-@L*slMhUU;8cAh7T=,G3qul8LH[9a0Q<_Ai
%mSEeq>VnPXdE!?SN:F6LhDr`L@q2%P*A<iEGE)6=)s:g\%l6olL.)U\J"4^s3uSI;2hS3$AA]gZ@l;DBQB>>4I_uS_HSruYP:RQu
%Kc>c6RUIu5blkX"VH5MCMe$FcRTJ=@3Xl2VS7tP(T)nOj:cuGR^!h:tPBpo%<2]>$,?W!*SQ/?7"Lrg"/l+dFPud$ZU6LLfWX"rN
%dE%gX2N*Eld'ADhZA%D)39E2_`ZXU`NQ\4<:!A1IY8a6l;/2JG2^T%iC<H",>nau>Igl\S@]aF."D`$a79CJ/>*7]s\E.Q(n=(8#
%`)8bL:)BRMCh`Q_dtQcESkmdT'Z^1#ir"?dq"WD4T(o_.'>GS#cQ38W'1f%IQpRilK1TSel,Edna)sG"E:aH:V[8X/K^'--fnA)S
%1i;qsA?)b1.h*"99HMFC\"%drh.Km('J4d+4d,5e>k1$YhdRotlQg/!M(mqX=HZRVeWCKnbF4TVlU@OAlX=mLG"f>q'k=6aE>fTZ
%[h7-hcj-^<CY=!$%^TaU_n(5#=qQ(3HPjeRQIVFe4"b`<@>f8dCjWfPW'_o(IN73b4IB..*rGIP%_^mn4"BB*X30<T*`Wj;bpg%*
%`]UORe2!S<cZ)Tme'o?1^n-dJLiNJ_4IR!`8Z:iEATs;m?CU&N[L;RgLi,)^-'0ZT-Eq17K@qlF1l9NEQQt`,2?'7B6lKLt4@Clu
%P_Fq@!*PFAF]1s?=uNU%!":&:U%F)[%C'=rCF@O3FSFHN&$dD:qrdPks)$Z`Drfl-.Q<`ud9(pG+r-X]$Qq7b5Uel7;+Y:L$q7YG
%5qUI*8t*s6RFGX4@O;3d<=kH1&e&$/Xj.dK8<:-`dV21hINf_5q<)3^A/EEY44%-n%P5UW^,[7[R-'WZTGQ`orTt^c+lAgb2Da[S
%?/@S+f]U+"jNV=-*<[d2L`T_[l0d$;ZX2O&rJ@f)p]&BNZ*#0W+uZstKs*[b^$d'Oj5&`?fK]X8bNe-V08@X<;CL=AQll23&&%#a
%.8goHMQCuSU77&+WjSZHg7AnR_-@H;p)abD;T9eCZ>#Fjcr`ZV?&nb0C:LfY80(Xs3@?ua:.*SkQ>E@PZXYRfkWc,;R)Y9/;>MH"
%Eg>e;6CD\k'd#V5a.30M*aI?N@5`\.o,uH3HbCAIlCk3MkH:/AmKC-W\WAEak)mh-ms=47D)XQ58Zb:-[tc%9-pacAnZLn(R7DI^
%Ha&Tm3,lnq.)]Gqln*Tn:N,P+4g,00P<.:ug^@pt=meI.iH7&Y4Jh-L/h5o">PVaN`"I,n3Upcr]=-.;jp`]06BPIRg+>(!:-U8(
%FA>*5n+<qp8q/oMT\Y[I[rW0cYT>2)D;:6#Xsq-N1!PQia.CLuQM@M[^BfOqWG$>sfpi&>\@_T`#:$CB'7t.K68/lr"o!t@qbi'q
%=_dFa4a9R)`aMHTDbCJPRi$Nk6L^PAi-SCRNFMWJa+^>IO$%[-0n2)6pL/*P\&#oPT]"X&i66"^2rM.LpFZU<mKpMMiLIf-bRr%o
%B=7tU<jF<pff;"9Q>^H;@*_u:c5Dh#o.P=C^]<tG(+r^A#3X%H8.htDgjfTqNjhjc^>1p*64\#3\^uADf7YXrILKPa$P:C7*JV[b
%_?5!E$PdC[dpY[JLHb&n&?>ak7CUZchn`Gc4k'ZJ?LcsC8^hU92b^DRUO-L7.GL*6]>V\WVCoSU?JOH-:'0Q]fip!VBhH+pUg?f1
%Qi1eq&A')&Gn43R6cc8l"VQ5r/!UXXK4<2%m"gVSX<Q4^mGZk:*VM"rng,X<UdWsWjC6*[LYp!!]Ys#QXN?>[\'T,2q1&W-#b?OW
%p):4-R][14raSfEmk9:NdX2g=[[ILKk1Z<ZFCS(/;KLrVSEm+KNR;f9\g<=Ga$K#<#.Do]T<Y;:F&FOjA7201UDH&T%4RZFD;7f;
%R_?Q"^=Pd,E;.hkn+jZ[qsHHFB?IL+&Wk,$A,m`T3n)hqe-"sma6_=J.8?AUDgBA$2"R1aNVdIBf&>upl-B7R^Z+SdrECo$WgB#2
%:R=m?ngicSH&5k<a%$7;5ool):.jd=%/?4%kT'6"(=2:-j?s=70/;`sP*p(dV(n*ud/:k?l&WF#a3MbF3U%cM`]R!PdW4!_GqRhc
%?@>lhkVu"Z3o+d]_l[NSG&q[],4@<%]6S)Pi%P/Cd5M_CL,8G)RsI6(\E=W7RrMEO-l@Z\RYcD>%lmja@&D`CRE*]1N_c-XJS%!Z
%-/FW,JS$q_\]Ib2,3rfc`Subd'c@M6Z_0enY[s!\,-MBe8>ZYH;OQ)ELVuoI(=>JSd7N!7kUee)Do7;/"6I5OrTTSoM):?`$e#;W
%UmN4Hc(p1TKctM?aJL@rg:M+V]rIEMoE#RAo>cn]fuI:]iJ*&pmU`elC@j9??:'2H-/$"5d><A0pU9)0Ze,ahVm4Fq6"cI:KCH^7
%D!OhtCM8O-J/c]VDuj0'?GKRLW61'uXG@5RPfJhGShdO73;+,$m<W.g2l$"*>q1:ER1td4C>S#KXB?7l*/_'2MYj\,Yh@1?JN8?-
%mlf*'Nk?ERa1OFT]gmLo0fbnIa/r!\IkL*e/]Ui4.!IdYn;?pP8^?G%H9#21ik[]=HS$JLj/gTB#2AEsUiB'^m'&-<")I/?e1qs*
%ms(/HYYAjlX=P2hDGgp4fIe3Dg25_o1'>40?l(%!YQA.EX'q1oSXf2kT]%5]-r"Uj<pi++XEo'?"lH5TV5V#3Lem/k=mi`3$2.\.
%?'\Np`+mB"j7=F\S&\CbT"nhAV5a'nnJI^=jG%?ij#l0AHSM0uR/N&+\4cRDEh\h`7FbDm_#;E@*(`O1jA(F+FmBg)H3\YJD<NnW
%c\LCHha;KhW(c6rU@iQAK7fkR4.,+V7V9m]*3]sbr*ukBI*pTiYk;Vsb=IjZKlS'siaLk%Xo?b'5'\qM8>.RJ?:.ZRWGVR?](OQ(
%Y.N8p:I+uD.5M5P;_1[@h+jp(\"j;b#%q8Bk/D(@Y,2BgnY;#9JA+P+q5+js2ZBr6'l:38*N[;f^qfdFFDK\&B!Y:hV%%J[i`nEa
%kh@3Ob5&b'cFa0Qhp>ukXJTnr@hnXC_L!D69=fN![G]:.lSR@%3k"T6/16XD=\@-'d9i(=C[5&WafB?\8f\:nT9kF.1;g[ZQ('dY
%F<(2.\LE=kLQU.QdMtjl.@Nr%XX"qLS`hE\B/P1iS`c%)Ad#&n^1XL1@_<'6NcXe]"P_bpVJV\+Y-)K<X)-$Y[?[]@.pAqIf1eSR
%qi*42X)q&ken)_>coY#l@h&+f[XRF+>&V7/AAQd(RFB2*\E?uMfL($"Mo@_<J0r<7RV[(fA7h$I(o8KSpVq#H2l:<H"Nud-Y%+a)
%6.u%2cgnt#n2D;fZdH@E_kHIqo\^br`9a(JJY$($oF[ICJj!gmIm*6%Gj%UMrSeD=S3hsj4'2-jqe7!#5IJf(DPh@0=Ga%T%MkSi
%^[:f?jX7Wd[g\'n;VO,?:nM^WC_q45ldd_kJZDO]G?2I8[LhZo`S2/HeWKnBguQ_>c'OZ1$;=C0^=@UJr%64T]/*.F-F(]EF](s`
%Y""\X/151c8-TjNeVPeFjLW^J#2G0!"#c&(Y#9J0bZ,9#Hg<4'VsjqD+.F0EXmitEeXaf33uuROKabG@iOt>N4S]ZWH9(G>acu^a
%hXtolI'Kf:5B>B!R285tj!WLPEo-Cc2#'T0HHDF8&pA4(F%a!l4qM=>";nFEfQ[Q69I;r((<uo!VC$[7Bi%qdSbG$VGRo(M1iS6'
%:F6U6#*Fa<.M5A7H=)O(A27R<303#\MXrgQ,<:hH4IUeQee+J9pH5>%W,?5C4K`1)7>n`kFQ`1bGIa87GTPmjP\lr06<QeNgL5%o
%o[1CsMfW6-QCJMlG4\Y(a*f!(H0j_AT6J,Ba'\XZ\dZe\E*lFeQ@rBV*$In9"d+YZ7NQ/u=Ckr7$6!.=KFWkJ!OnCI9B=s5D/h9J
%Q>r&eo6i:Z46Dj*Wa?5Z5Y-Xgi=V#7+n#Tlrr'"sBW(iMAPnJ3gj8p=G@9mOY1lWT=,\tW5D$*T!#;au_nYV!CPAq-[:OWTbde8?
%\\DN/DN1q]\XD,oVJ?:0hiDtF9d*S&p3$cW]FIi@5fIK:*U\T'URH"ChTXZbKumSi9uUl.J(N8<qI]'Jh*CV'kF;;;G%p;-<@hYT
%RZhC1G<9h3l2.G?l$\p#&tdCNZ?;B?EZ\jmSQU@+]<-"\^>JdAlT8D](F)ZD_RdJdV=+PHX`ePb2_OTZCu9)Y]C#KdcIbVOr/Qg[
%=Zr@_*o4Qnr2/4mFhQMsY,:f5M$sKEdV>j`'R/&@5aW*/rmIK4d@R(6/d@V+ju1_>VA:25F#A1+QQN9Ob!f<2hF!M"nD+LOG"oD>
%kih7VJbeu>Rs):5A-JO4OOFUsD5fK\eC9&.]$^^W=j!)kBQ&a'M4q/ndX!`e"Y8H;BD6SiDF,#\7QaDl`4AnA"?PBA3US99n^N,G
%$$]S:46Jc6kM<B*IB;$7`t_J8HbmtVT%cEd/ch2b"ZbHBn9gK_omHff?+`bS+[F^dq&.P.qjJ>'.cLLtaaGbdAS,/LF=FtQc>Z"k
%EI[n".TW!(aTq1DHj3!9%DD'9Dm'e]c$5kSmC=]qY)>MYg$D.@HRi[6SFo%#Y;c#15tr:ho"qR!+".eh;o'f_Z&&J+'!XdS>%Ma]
%ZG%Ef:3Rsm$?]UTGhCS0FGY7O9Y>`0g^A-G11>OlhAc5lc@[2h5]+=#L,6[:T^RV!/kJUkD)P0topu&`D-uU%HUIg["=Wa9EHe)!
%DN0C1V-LIW/U'=KBtT@t]8JbC?@j_h+F^XSE(c3U;r\r(>hNi]F_B1=_Fa*+HK$QSfYOpL)s"q#9+rbMB:uPMhpEB@gnt0O+u@qg
%<qMp._/,,HTKH`$+@$f."-fDYb'*iMT4R#g9RN._cSG#KRJ>A;.0&Dbo?4aF't;:#n"2t]-@V$T%3MD=1\d]$LiJM4IcuL!jRLG?
%S=P6\iGTQe,OV3o_8[b)_;7lc#ISui8DHqkqk2+a:%!E^]o]/d+d[]"POE,GIE:OKaYDH`\L6!?h5I?>PaKh,GgS85_I)_s8:?*%
%^#t(GT7;1\k4\7eqr^bHrY[M/oC(!BfOkWZ1C!Oj"8e%.IE'&d@pko`Yg40=BA`D=hXO_q50LlWRJ;_lI4>Y!>/("'X-[2+IeN?W
%Z^9SKr9(De56'd8UYgO@hZ`u7(Jio#\UFES]_MF9h`gk6=0LPtpV6-d:KL!_St0uo<Qn+k`RM&ZaNH2HGEjCt;XqcYqO^"O"onNe
%s'b#G]0H9ps8Du>huC0mr^FD,pRBu'ri]o-c!t)QHYs/<T@NDCH\(<@&)@,0dlcLRf:/8be%EB99Dm])?b_&2I.m3WZWAfP]`.6b
%(V2cOhsXpcHG9:@orkHL^-6u:m*2T_?gjULrNgV+f7/&=r:]I6h`cJ[ZeaNtMZ8G2)^#)eIaG\Houhj:G9fu/5qnV$AV[tGI2&I&
%MC8j)8,\n3oZ&>*O)6hq:p7`6o$2r.Q#a"X9;,UA&ltG%q"VLc$$WeM<7^kg-#tCCm`L6\V`6EtG>InS762nu2THr7/CRSd]Hh3R
%/&hMBKiYBRfsGfT?^2DTmXRsXlk[.>gg9,/9la^RP,[fE-!n]+G\P9$2<6)9iC\J/YEt,1\FN5J^;VVM&Ul)Gi[QSOlP?Xt=LPg`
%osAfU0YNpi$K@WCcqm*^2/rImc[R0T[C3+9@f3/&W`5PDeUfg6Gk3E]Dca8m8&Sut$=#[)MDIolfD2Hm3b_[U<VGXo-s[TU7KYbt
%l,.\07G"3Kf:71(<rC[F<R_RTPE0&2f5c6$@Z^k?mC;Wh]Y$PF:7fqqS)ldh:6RW"f+FF28A!,hpQ]p.Q``p6m);b^oAmTN)EC,%
%D]GPT7"BC'`+UfPKM\s)h^<&D`E;X9#T0/<a?.NoU)hKjFGO.a4:HFMW9]^$Q4^i7`/EP0(/_rsioTj'ol`SRVZk<TJ!"B:Rm#o2
%Zp[l2Mkb4p[p!"1+.'ttdGR`gohl[,"[^?I)$@71`GQd(O8Vs(+t(hBbsgK/(J;:P^$GI154II/"C,%Omrk8/8m_hs8<G3T%o=]E
%f?"8$Y?1P@@Qg/6Dt(gplO7!db;'PB<'.@*A>8kjf'CGbNQD)CbMQ(mW[mVm18N`a4(Wi3Jd?ROCs.Ks]-W6%aIJ>F>0mi8BTSLl
%IsI9Pb\1e=D^!8fo6?Y;ndQ,I*;,?dX\#>:Y**dANq9;&kZ=/c)+#kBe11JI'.i+5g$a*LoSmt'9^Ch0!qC2s>r)GK8ightg]/iD
%8@eS.+ohW9+Xnl@V.-9cNfm3.U/J@ZV%ktK2#AdX5;7n<;Qah-i"JFMMP[RH1h<pVcK-O3AKlbX94^B-!4c9$#<=0Fc;&R-"qYJr
%8n@4C.\/#lk+qa8L]osc:d[g4fJ;Xuq,R&eD^?o*^XD()\5ZeHE.FIY"0jsV,"c;LM4Y9[)l.&5qQXM:UbcSd7=g?@,MJFj]83&u
%oI;%B@W#&4HG#u$W&3]$ZoL&?4^)CLW2b$-TIllOoUP(*3I7ZC2SHaO(_ESK?dW#A/IiJ/.Z*^L>m#HiN<tRtIjoqU->LCj?NaLu
%)orK@;FP0_Q\"0k:R(;ZF&PiP&22K#o!$WLB8`iXNCusengh<d[Sj%bKG@G5KArP)/oLMsEiCSp(hRNEdP$k9j>B@/YCLHUn/<H$
%Nnl-ON-gE<!"0QGWiUmPb%t5_$Rm_\11Z3\314Z\M85KpaoKT;4#(J9H[lc@"bSF%R#W"NS<>&n$)6,LbFuI5n77-/F;K?n^dFqE
%q.:/V&qq+s^+Rt,4^q411U8DCgbE2rW-F<G;N.b?!jj!iS^H3YFrBWbE,!7K9+OR3MtJXIaB/[Ye=ZG-7EX_P7@m@++!HBDbaa9)
%8@UG06OQl)-pbICL0./#^kFlJ4,?S7V..h<MeZg;&Rk)`#KmebTO:MU$LAs;]6lg'0T81k-;:CrQKI,HRq.=/m6.o!E/HLAbEjL#
%ZCV_d_'jTVp&S=Ui_G;#,\`?OCCqjN3_h$6f[Z!Bk3ODa&\Kqk^GJKAS?fqdnY-S\3qP&k-R_Y!ql%Z\UST0ek!d1pJFAZ1OCpFb
%_<T_`'(iDe0i!t"c^7ENcLS1j/Pq"$]1sEuf]&6o$^6B\_S1D2?GoXoTeke=R5Yf>#YK?X_\/U,a5STFdb!RIIB0N4ZpJ#`,mW/X
%<k@B"ZmO3PDst?jFcB&*["P89Y'k';8P:Q("f@e6AfCkAekT@R`(uU-a;>-*9RIY.S`6Me@$VrJ)4EhI!2CcJgN]RY)!uIV*U]2#
%+DZbE)TJV=F!$sUdh3n:6s_9>L@=c=JNUtT<gBh@V)^1mZ$C>NEu4u[G--.`BQ_rL5o3>@,(B?])_)^p#+BZ9_fGBP>@<3'k_Wlu
%/*4P%7[EZ@G-6[<b9C\&@_0[]RdjNFp(L(6h'cbd?,KO<;#'V[Mi:;$Sp"Hj"YF'JE;_In_K,e9M_rUT;J:23n_3(B1?:37fTL$e
%;k_l;<sC7Wp#'56bAaK;=-gkpn1f,1O[jcJ@6ag'_8dR=I\@oche9]X"hfc6qGPQBPpIBSkfTUmn.MJ9PiIR.VMS!IYqJ^TF?[]K
%#-*NoMHE88QeBa.C+AA-aHpB=%7W4NZ#$8V<gh`&X^I,<3e^!4V+!45jW"krUip#QVb!-6W1j?!NL#I0'_89-$\(_h+YC(Qa$Zo1
%Y3:#5XCNBp&?@gTSXP1<ofb!aY![o\'8)WNAXTB`9*s'?4=M#`,j1K88WmeF5*tk]DKL)udi)G*b,^k.H>A.*O(*WbOY:P`Q-'jU
%ChX36mk0Z[M-mX#314n$AeT&.$7nbEj520IHk<u,Qbh7IKo_p^RD[LDDt`Qd$:)tfS:5YSY$]=f"4cpH1rV,YU.lg@@QL3V^eBbn
%*NBC]lIH[l17QfP'^;J1`KD3Pl09:LB';7&bEB0%#`DHL/h<6qcoXd;Lt\4,c),V-^Q[i;+r=u8jANB33%SAJT!`WFc84=NdJ)b^
%"ojSi9`6ulL>aeAj\rc&b%CqO1bp%l\=(.]B]$W!^$G@__LK91^\I'>Z#cs.3rWsipKtX[rTrXT]:\Ncf2&%<nDa2GhE8WrkJ5'2
%BEa(!d6Nl?PBAT/^]5P/D@d*h@7d!hbV6m.MX^u6.H?RreYTec4&7sfESOMM&el:DquU#cJLiV_0VG"\</t7b8Y`'+Kni%g=0^&e
%hN3R;-@V^B'mh[^3QSELSp"Zk)HcqF0,?[JVA`L>OP?K]g[G(4?2@q-iKN,8""J;ec;f-kS[+p16CPQPm96pc@Q4u)Th5ip@g.AB
%7:5pj-A7#*!"/tD>b*sfRS"[RL6WuLoCp4'QFlEA;8ad):`Q2qP:TsR,2cK5GEE9#I8CtPXbdGg_\%C?i#-5?#8gK0JWgEem(lts
%BNI/ifH.U;lPal#R+QC]i4Qm#FDHN3V)#^c?Z)A]'1f\bo2VU@bf3BN)IaG(d=IoeYg235>Y6i64Z+/YK`rUYBE8CtLO[BWGYqp<
%2"7m:c(G+gO8rUEVZM;ik0rm9jlu)2q;0+%P>@hfeJ:#`oi$3)Sc!eZNGQkT[\W@a`pAk>bMnJ\;FDlc#tbe*Ng[SPZZgeo=A,Zt
%`5'>:@-rZR_L/Xa?knFXknMVtfG<1f_dn5_WagT6H&pndL1FVN(MBhcE.O!6bL49/D0`)9T[G+:X7SGXlNRn5`Z!ZuU^pa!3i,9`
%77MI.?pno92?tcKB^t9d["o;.f`IrQ%B5:]LLpcuS]@D=4cZh`-SXbX7=6Oeqo&h+P_GI,rd5DY#-[/\rC;8f*Kt3c2:t7Lj\_<c
%@Vr6HSHFOBN9@![=d><W2!L-f#I@3Jk?(Ds,?3EUFc1de%P9G-jf&EDXk8\!p/NJJ?Ai]eq-*,Q=umCkZH(1R739a1LCskue\MY%
%ice&%oR=Z$Gdp"JL3TtIA\F>[_am*eU4n>T?(.F0n-m^F1/>3d!c/d^?qNiEqV;1DVDK/q0[2,dYrR]BN0/449IA%YWWUm!Ss/%@
%PSJ^l7'j^EYS5[VU>i_$=KdWC+a,8<`H+?f2_#+l&2fcmSOa5oRLEf;[pV)96KUEf']EXA*=k(t<kTK=9hPZKrICEc/1SkVkZK]N
%ROA9+eM7M@+;)t()pB5;W8^PJBc22b`U;3P#!T6FmFn#q]suHN6-dDmca9E71!B&&IUmF=S;\n&dG76`!Sg0I0g2s)kQ,Csb>R#V
%68BfY$qi<N3%dA6+9PSNAr8#c:4js>Q-$Vi7mYg;q*b\f8p#fUGjm(DjVt6n#K3;qJ[!:uOcPdQMP@39<M>,$S'4uZZ],#^QrG_U
%1`[4*6_&1bbQ(l+4j"GV(7.l7ogGGhD_"k1Ijb^+;8o&?%eu[)Lem;EAN*`;\.i=1L8fn.i)@D48&.*=0,e9sG/$]*-$,YG7B3i_
%TLrG)Vue?JW\JSsM7;f\*mrCSD^Wel(_cN]p/sXR6)9;XAOZ(19.fGIaiUNoSdA!rNi"1+,U8hth]epd>mUPpGU3UI"bRDM!_(3M
%YUtSjLIW&[_T01<;R=&Bo&b3_SJQZ,>(D)&NtYMDs7QfXac'8qh(J=X(*;n@I(&5\psFr!N0n+//KQ!k(3*5hWeln'h\3g,X<j&h
%dM[YIN4;CgUXttQ0&fFNr"chCi)H$&/H(9W>e#jtR'26Z,hVdCF_,-;hN[-B+C[0dkYqVb:DBigVpp\5XQ/dN&uI7OQ:`+J`)XH6
%@#^G0FN`,,$!)/&4UQ$7ZsR#MXUMHPD!#MKE&:)'#PG_%?8<bd25<;KYmY$`an:GKm1;gOH0H7)Y()!rM',a;4r%BtDg=CT"Og#5
%&^j!Y1+$*82[nNd!2rFn)m<<t-_uHrd1po<=;k^X'K=""'o$!BZUrQZZC&9KWlaIVHk9;'U*J1;FcJ_emIbl$mkQZVjZ=$(KS]al
%Q4%o2df<K.(=egr.9o@cYsA9HnKrdj[+_a5_pAs9=l'7XOuu7!EL2-UAJG5#6o2Aq29n$IfP'b>2A)TMQcj`DKV;CU:/FC+;DB!+
%h#]lE74^2FE_(=U'`,1>m1o!*]0q,#&f%ZZ'FJ7bQ-Q6"G]-H?N@bPb!9:$Ai,L4(OjHDm`:Xhjn-gl+_dI)lqIBt6U8WGEF.\f-
%%Ob]l3jBYALkZ'Z4V;+-!/2a.@$B&B0Mt$_""lr/5<2%BcseGF9p7kC8<%r[d$GQ2ih@SY;.Ej*`)?2c?Ab`nI3!q6<u?W@fJs3"
%@4PlAYF#KD"UnPm#]QVk:gieo?3>";^.$>i1;--@6fDJlMho0iX@7aY4l\S:+.5/6a0(4<Es.%K^g-#E3LO6h!1;uc,Sl"E\I8l,
%-q+ejX:rAg[F5+s<%*'4YrGuBFqWUgBrMAN0L?iJ;Aa3PS60<)A7&0^+j-uHl[h5%f0MBH`J>!(#f/Hp@;0bs<Y_Qm%S!gM-<SI>
%p]^uSBi,Gi-)(_-reN5F&<mB=#/ro3Jg/mrf.p+WOG9QfP!^^M(qal)@bgOA#*k'R*6'I:8X24N=c9?N^1=`uM"]9'&:7?7/dAaM
%:;g?[mmr)gl^Pbi@D#*:=em5T?)]Or#ZeOO<'0/VWs8_r&2I*i$s,1OchSh<&V0%pEtUX<JlId7#\(Uu#.CJ@"s"?W59V3PZgQ1e
%^L=#SU+B:f79?c=7LFFfXO3t'S8@L#m(NTc%ZLdC!j>lSA;hTQH@68']F42t#dCo6rX]_?*Y"@O/B!d&dEQG]l2ihoG^CW,$1V$>
%jO#/d5s2Q`?>;8ApUCje&9K%!J??r).T0.1;M6c<$MK"b4p15WL_tcTI#gnOHF2UaYm,"t`?7T%qu%CK_)*)!ET^OjICHp"7f%YI
%D.06MLu;ej,qY&C,M%\%ELS];;9W^>Y`Q1d9JNAsOGuUC%3hn%TeEuk';;gb)`a95;!49o"8bT!:G#a)O^qpCe&2<#Ld&m0bs`K;
%PG@Rb@=cQ<,g6Dj-CRkrHq"rKTi,5:/C4Z\W\S,/5RNJ%&i&(8Kp[m,)ORS'3jAg-@hL#`=SWP]&OXcC;M5=T&JmjenBZp*1rS9Z
%W6s-IRdVu:M3=ruT'6suqqsoLXU\gI#(9;6SCGE?h19brAq3"'#_NP/EH'-d68Bg'F'<7H`@"5A/T<B%4Z)D(R*!PXK9-=?k0h$n
%]R0rc9tLm;CsaP#-Bt+"3CC1P9c`4U)WPKG@oGQ^]EZAud&WmdV4SX'K>e0^@e_+Nlf^8o1G`#9[R6qZ+R:m$]H=`r8(Z$<5`+E,
%!m%3DLCb;3Xq=Qa4>@8uRbe*1Z$=GOab]"H5]5)g\27^#7hDl?r'a*(Re9+N"585ZTE6\R]Q%eFoO!_$;g#J[qk@kPYpV"P1L5'0
%._lZ'kQ85lq$`lR(?FEt'X`#fLem,qi,J!Uj/aQM/gBf]<O^s'`[PF!8.E7k!&p[_a?GG9TF(QhpCcuD\sOaj-50TO=[<0-UgXg1
%7[&pa`K-IaQoKa.X$pE`7Yqtgjk[a2`iWtn:,d6Mi/>B<P7]$%ZI!9=]B:';$@#4gO\*(g>0spt5XqK,fY!=o3o18Y6dtar174JM
%&j,[.LO-UkLZi?jQP8sEBW<;_>4DN*J`@k)1<%<2_G_qQLlujm_PCKciW<S;L>M7<D!re;ARQZ.P</usTN*,HcMS!:OKi#fYT_A9
%aIRo=)A+^SPS7`C`R?.lKd<*s"lp9tUgBOaMm7G>//CTIP690jL-Un?+\t1u,A&K%"@`KC!\PVE?PpNcOmAbh`%ZEpO=LJ4Z'ci*
%M72@N644]3oC*gkWF#0O6tOrPHI5?EN1a@??aD%_4O+2t?O^73$d+brPZ0Kh$Tj+L'27[;'b0Sf9A-#7U*'qLR5YsoR8!fZ&0#/1
%ZG7i'l6M)om_\;>go$**o9)/95aIsa^,?PtJ]$I#JC]fB>a^5.2)Qa:EM0<\./Ha#$P#")&B<[J6h(a+5Vihc$tB8ZWo8GX&[ZKW
%A218AgWK5s4#JkK.fb7F3@uJ9mnC=JR:$d].ercBTa:R#ToT=\-9LK)SSuW%_,%ZaW>Xrj&2L%^!?P,\'FQf=GdJTJL5$+ldDcMA
%/0<NL?=J'YH"1G,1/hJ6Om!N+HpjasRHQW02J>gE,CDXe#G=M_kmU#G&huqQ9JtA:iWEf$&?C=JVZD]K=8X//h][md!'8S)M&F0^
%6&S("=<04Y#]"(60OcV:(d:E<1ZFZ+aT9dZ$45<'>Ppmi7BafDbU"HD<jT5jCl!ZS9rY'WAsug\1:RfRIHuTE*f3Bhd.([%%jM15
%0F]\+F;;Z<M<PT@U`=mkk>Y6(/./M=V;Ef5MW"Y<-Z@0BUdalgn?-k?dDFFWXSbc_6?<S1JqbSpBhf.k)Q#tNlj6J"Xl,c&][2@'
%OiXcT!9`GJ,0gA>Qpl#0W],k$bn'DXE?&"-+jW[BI*S$ir)J6"Vnio*=eLE::muOn?_@"b1cKI%0\il<7=l4Edj`,[="):RU.Rl_
%JL.\1O]3lH;Vc5`P0D&M!`a=8$u)\1"";Z/?R+52E0I$E*dIiCW!NK)Au]AFb7jG*OVWbC']4Y5Lm3pq8M>pp($%"O;)h7,OomF=
%R=$KL9ZL@3haE7LCJGX]A@H)4;9`dUOhbfOH\X8#(n_ZG'BD5`FT@"oWMkr`"K^q0rcSZJ.:c:`]S8s"D)X!ZORkl@,$U:QJGHtr
%(&.g&$*cij!SRTkON9<+7SW>^YhsY9KoeF/TE+p[(EiNkZ'6,<!e&T23)(2Y8dGh:p7CDqL_s*OZs0IO\Is$.!EPs5NmX(56H'WX
%`!Zt_8PHk;;TP5hN*-bs[cF+..Z,JaP3NhXYZMRo5U7jBI@,`t6">ot^/Z`/OsLTOZ+D5sOS[Qb8saY-JW>L*Gg/(_"rZu&Gft3)
%.E3B,AmR/,GX?9lUA/uX#t8;,nts.d@]gr>O9)qcf?f,&^I[]AlD<3d\AQbB8$7&<,EQgmUFIq'=9]XTRIC)$"%YWo_.Y5EZtKML
%5W/n,L!h>jn?^l&DM3=hN@*L/Sq*70f9;MOGf'f[UYqm_FP*Fo";\BoFlq_`HD8kLP6C6?'*?WApXhXC95P`K49XRU!chEQ=etC3
%(^XNnfJS.0+o.,+*V=ttg7<i4=d+<Q<NN6s.TV5<510o(<PiR/M[hP5:YPJt-Dt`kX1&tS3>SVg6mVi3_b:L2&HSGK7=-e+\3id*
%&_oWicuWTlSh-CN>`lUQL'Bq/EaW(c8_+8#JoF"34Er,\3r&$;6/p5Hrc]M,)*P^Pr8'[O[$QNYOPU'_I*qgh5?BE)"Yk)cbG=CP
%):\^`N]Qa<*66i$go1i_LA"qqF];9].B,._*"6Dd9j(?`Zs-kjlU_&Yg!eB,NNQFD8q;Ut-O8/e!$&8jC;*fSKMS\$-Mj%oHhU/t
%IAadg7f%YISRj#tdT$F2`9Chg;XmjaLb$<X69rp*gr,oO*8fa_Aj_bi)JY429o!P`+Z(js+HJp"`,VJJ0bQI.eQX`S\XXhh,aT*)
%76Wdq8rj,i&N#5JR6V.Egb[O;FDXHoSP-]mc;dft4^ntU]s5Gi&bet&bE^pe@I@eY)E8h*;C*HS)Eg?3Zs].c1fYUSdl-_)g(qbQ
%Jr&D(<+(Nf1>m_L`?W;prD=n<dik44#OHc_P_Q!B/6ZR^,6-)EN%K=tgm#dSZ.5N\KqJE_+lHdt3T.!^K,%8;V2IZ=b^8T2'bso9
%nRQ$)BT[T(q5J(q7jI73I8XMIj6[,:Yk*tCqc/,/f".Omj>;6%)[QLJ?F)R75:jW#:#5>/Z5).*O/fnCo.N*hRLdu-$BZ)<O=C8>
%SYuu]W+7dtA7q28*-AWJA1M6n06igKZn3uT"hUt5!B\4ScZhR9JJLnGWJ]a-<?h8L/[2#&JqX1V-raddo9SakX>*m#/HCA<dINCY
%BWqJSL+PJL&qB4&SgnZ6J=r:XC(C@_;&^U2Y^g"1B-phV*P*96%4sV)Z:<afBOH8j)V-r#A3t#0&k3Af$rWsCecqou>,T7mW6Caq
%=ZOR#VB:JQ1OK3kLfg/0.3&HfLBm%N'jc1h>g#fdYpV?V@fcGB7J/A*o"Y5@Hjj8tA8/E/!K9'L+X6D7(LDq4lQ/hf1GM_PTVQ1S
%Q-B/t7E`qD9&YLa[P2:;Xt2uQd97C\M?]:@CjCcdj%3*!A<a%5)_J#0<$5f:Ym!:T;-VRs*Y,iIRe0!Kf-06+_sYQ$pb%Bs'c<EV
%=f8L![@>j>?t;afg&i)01RK,:(8e/0Ch8WMWFt%W-oA=CEA)0b>+L2Q&7;^t^S\-NLVf;^k8X(ma9'<c0Qt?mS)C]<._TAE,.6S`
%TfII:f"C]e$3pP=o;/0!.qiAclBSGqbF2d+fG'MR1^$J`@em>F*M@KZE`jOSS4iA#ZC],U->'jj[mnNf'U7T,cL7l9*08mUL6nlt
%QLN"cM<[Tc'VXNK57`P`)2\jF5oh/3"p$jI`A*gApLW;?o&iKR5280^E\oPVPuF24#p<t4(8uR,>r&N8O'n:&Ei9mMN=t9*V?4C6
%I;+:91a`LFV:/=i!hHn>=%X9,m,7o]GoGNq>++n]U?.NR<J1n$PXRoVZ"]%#>&%b=FaMAfnr9'r?55009&H)gd/DT3n:D)?!":82
%G0:L?-S>*s//W=dnF&39H6I$0<e)+*8?p#@=mQMWhJ8!31jN1S6.dfsoGobA3E[gq5\WD96<,5J.fWsN7Z*L;$;j9.Y?_A9RZS1b
%OReL^]&`Ahcj\>l?+Csg;iu<t(.>IIU)648VFFD>.kim<FOAE:U$s\YH2+Y:#b?pXd'V9?=9h(*H-BmQ%gu1L>E!ZaAD%(dH7`gO
%Q>q@1<$hYIGsio!/Zeai@(&FB4.DAuJ=K%Dj9C4'9TW?j)%Wea.if)c89H$`c`jWTmg1)Of-!8T?+rX/\.C/>Uk=C[bpNJtSBE=J
%YqEMS@Wjc`'Z-b>eUWt>^h?)CN/D%X]us86QQZ15C76'ibYSBX!4YlR+n!ZmB=B:N3e1cg0F+Q)`@P.-9EZ0=0U;u"0Wf??duKdD
%itjqsKT8;IHQAb2,%Ea5kW$)<l?Xl[&IrVe\m/;18MlYmhAD"oA%CX[a/:Oq'-s]Z7K8OY!RhkG0,df'WX.mo$&UZ?)5**^pD.MO
%bSCcAXGAU+r>nP$9O9*Z!i=C_<K4*-_]gLqEdFgC0bo(i5\^eUOt:f[(T:eO=_LqB7Fq)PY!0q`#?6HiLp"B=*#o:Vn.g`t!^pFN
%-6dSs#_`E.5`CIKjZ4o];\0iBb9Rce]TZA?^',CO(@I-]2peWi"p2j_/'m9:BVe`dSI0-@ZdUJKW`]'F#+ZW!d%%AE;3;/g!/\&E
%9@FEV9.QYX?+94>@[8%WG_,);bnr#$XK<K9<!sUB7Pk!\oDen=ABHO/-`lWsnl*o"@@gB*"V8AqgaF^]a9r0A]8UkO<Ko=:=:3!F
%/JJ^oSXftVJ*aC(WuO7X(Ij.[Xb>'-d9>aYUW'-2FILX1GdoDs9Ro#6Xn-"%J<d*FOTr4OUYdS2kaCi`/#>-"JFmXX^n,Qp@otEo
%dE!@u]XQ9>7YET`Ddn"3,f+a,XojU`Hmm&;n60Ud)/2U4pb@tk]bMaS74TEKP4:l8#!M90Q_jpseA>f$VLTF>CGFd:hlUXW:c/kW
%&Qh>OUMn_b[Kl'ZW,+j0?e.&eYr/33LrjF%3"pn5"rYg_l.)F/=Q=IiY+?@M=g8T-_#2'tOC25CG7]=LJKb7p3K^35:K^#03Lt?c
%,0'.Amo+AM1"?j@L9;X1NB+ae-5%L>8S<_oJ&B\%I08L7-7rM0:):c/OjjV32XB^!gaS373"UhEAhUfE%;3QsU4&)OL-sdked4%=
%5J2>;d:W^qQQhsbeWCFSg$S3Vl)4""[inK7J%'cCG(HLS=5SN+qqLRWT=h`5k%hNEDKYcnh`Q2Xo'=2on,E1VX+)J0dk>(CqVf'X
%VmkJXJ%#77s287t:cl@''cq,@WG#a<&-%?l#5X:8\K`YLY>AG^NAor)-l'"R3[k8D`QKsXE!@0-,']KUALEq6G<nPM67\mH[#$RS
%$FuhV%&K1`lPU\d):W=DkCR#T:bJMSP^Xb2NN"1W)HGfQn=&_$5O(fgX&r/;)Bq]H(hL%0G@R7a4IYq9r!IICTGFo?r*NA')8dYd
%&d%!d+\sQ0g+(th1CSQ4H6^fUD:*U=4g0DALF)hD?%4FOkq5a&p,n^!>1>rfrALIIU7m<j?.G*9[RPDIR7n.?"X)5pg:qSs70hbE
%0H/<S9Ts*P>>R6t;]0ja,H2VIRki:aW,<gO-SZ\'^6%H-I>g2pVT#7E*@;ZRVi5M*V@1(QZtN?8YTTTr$Q*.he$fU(i_Et,40:6_
%JD<uJcAZ/l[JCr+TdJAnNl?b"_Iu(m<5=0=(6*0&b8MBE:^@&Uq(%,$6IB?d/POY!fTd?06l)rockX>K%EO'1"E#W0A4>`"1V[*H
%31q-fS0a.`HCILR+=(_WpPq-D$TaBgK:3,6F]>;@Ut<EG8!5E,aDbVPK(_3>jI,1/TkfRW7eW-_q;qgl)G<QDK$^\l_<U]%:Vc9#
%B#Q/P.RY-Boh=UQ[.^iW?Gd1:MV\E_/f4]P\m>t86^"7j?Jf\Y1s&0>c-_D+5g>#URrAmGA;"VV)`dH1K>i]8`hi;\4f^U\KE@BH
%h4D"c;nF'T98(3Me*#6%f"qs)@(df5^_C'"0Vi#&ca#r>:&(_@.YidY@k^=1Z=sV[B^+9V\S3Vr'A`G,jCBa+?\J8Cc2-i[H7@!H
%TpO@E&`08+nn+iE>?_0.7I3YAB$=(*]9;og7W@Ga(8^1MB'&Th0C9pX`LKQq0NqbgA;/(ge[29&ClD<_;YYOqjeOeDC`a-1+\UA)
%V:XLci$)mK%I:pYP$usP#jHa@TRIr&No!sNLE=6.UETZ1L`#oR[)rK)G_eS7=%U=R;YK^<DM&?iQ6rLEd%H:H=q?K<Yad3tnNbuT
%Xl0E_PSc5Kj6;(m[&%H82B?,2BYnqtN)[D'MCtr9B@!uaJQ1cKU38d*ZR'0-J3G):l9U.+UPWetS4R[Z,&-S;3mT_4<K#GT9U2B[
%*'r9&:a(d`#,2F2&@'U@@P(>SAXZK":<"ptOau"&5Rc;cE`b0`bN,ro!\!+"j5A!l?@fjsdqDru)%=T6=O;8jR)Sfo77KnMGI4:h
%pp\f@`0Ie\73)c.e4Cl,*G-*IZ4LJ8K*tQ.+.A%0U!jWP7(8lY!gA:'A=&R?8GP.La>_@SDGIGrU6DN#:B]4":&pNteP:9fiNP_Q
%]OZabc%8II/fI1d$<STBRCU]P*^Zac,Ej#M/Em_:/:Gdhgi^^"#?a;rZt>6_MMSH$(KVAR"Kcf4C3ko8Q6L#))$![4FcIE7S-U4_
%kD@WjQ4Km[nZ>2n'W0FJ`bPZo!8ifcSP5m:n8raRAeJ=)Gm.dY668lAbZMZk5kCh/aEj9WIfRoT@C?=$6]:GCOc!^H^nE5?mC4E.
%/<L&A-PIq-:toARntQ03^^upJ<A=nE>NoR(Fh%otb.:.(N.rT>Q8Q:jfms8U3k$;pJ4'_!_kG@j;Lm8RO\>I/[C^M].onq=[-I2b
%p,:ot\YrLq8.QI=0GT,lqK^8YQiOK%-7TpIm1Le#pXP4!!-Q:E<!Ze7V!9ZOL5u@P)5siMdc*`cX(3RZ'Q;3=C]G29f!sbM%_MkJ
%%&0uIEcZnG&a09P)ae.PTS<Q*&P/_7<"b*b?5BKXV!BQg=b+&DMSRg!Hn7bsgd8to.CCNdW$q&=..\gP-WsefnCgPf#:C`OkCBtD
%=;:OV82EY>L+OcEh:i!q'D,R$-7lsG;:>Z6-Wu3q$B+$&NIc9^:[c*t"(N7J,k6<D$R^B<ZR$B387>p]P[6mc4m[XCFPY$iD^s.p
%QY,Mfc9#2\ALQl=V25ZWG/.WbUdI_V8l0)B8lUTY'M=KqTV_CgegkG+L<8)9=n(6>M3b#sLehk+6DY]U<!'ufbVh#@8ekK$k(jh9
%Z3mUnGT6da.!H!AGO9=0e91t"anlJ#,CmRph;_lR6ul*le;&:3Q$$l4_R0IO_*B?qgMg6X`luLd8Ht8_?&(S!C]`#00H-M1<d;Cf
%c7(BEe_hhi#ZFJNT#?e1QSa7&p]f2r!TkRng[&jVWV4;q58n)#QQ:>dUOn;l2T;]Wc'DQj*X=+H)5,E^Yf#IoR?`d2PQADa.?UAk
%^5Nan9[&0"#3\0aU*uEuhuSJ2Zkj/O;^.[s<DS]N0=*K2V=KXZr[q12K<+#LqL[B(3tBa97CS-p_"QbFQ^(*%E`tp7a^b:Zb[uD4
%/XHL*iFkLSYe_JK"[=XJXB$OsQsRhF-`sCZLe1s([4K"F0,i$ePo(5Ap36QUOA7N:iVWdBI96DB/)i`VPmQ/`ED/,=9"(X.98cZN
%_5GVdOr="GYmPCh`"7J''2E=Ga>.IE'$2^^-`mlC<c)hG?l!DeHSt8Z()hM$\Hd1_$X3=Uls,9GZB;V)\pFtgq5T:HoLd,W9^6'/
%,.I[,K&U)R[:4\j+G3J*C/:j0+JE2,cE(rh&dg`fCq%EM25/%=DhT8FP/dIb1Gu$b68(V&1%1`[OY[.Mr&eK%:.hYk<M-=\c/t=#
%WGG$;><:pSRTXXK@bL1]MD8S9YR!]P0[FLn@)W_$WFm'#r,'ZgQ^8'\c9(lC8U]"Ff-h(n"cFXY;O4T2BB(9>8DooK^3$"Wn5)bs
%hP.:mUOc!$RUfOE.#+A>;@P$7mhCdk7\lm('*A5<`g-X8q.t2>Ckd`')'sf;5mD">E0LP23BDNjI>dABVtoV(hL^V6ZimjO4@2]n
%8DE"mOpO9!dbkil7F\CW(9BC<cJZr^;q`r=@#_(IS<Ys)NbWRuKS@3XI.)'n*U'K`U.Lg_^?N^<SN:F-Dig,0qQ\Iq",E&iErqLs
%SXjp14o'V"?\P=H*V2Om[nh=L-d7SP@5(6W(hle_U7#R',dK\L*YRFrr"sjEWhp.:Qp;jq+,kkdAq;r"LB'8iH%jfCl,q5`XG\74
%36T*"K%4'\F56B8U=!b@4FquW>,ip[TS:1SfdC/uo%GXT>GR[OMH.%t^U9**(eVbI>\_F26Wu&c/L=R./#j.(WBHIUdFNV_6l@!h
%=)$&+"[#.L8sCZc!Y[0O'^f[Oj=j'6/#$P?$dGhmg-TNT,j*_Cb7]H:X>n:-%6G3P!ifo:6IXB93U4OIM.WV'Tt.P)PEUp,Q3Rt8
%"H@"m^(8!N)CdY/`.1O+N3'l&2*s@t.pA=.krQYIp!TSB8Usi45DRoZa-6`OaQif1",:?<7Pj@MRF97#3.Q,WSJ+t5?"EW7'`kKj
%&\\S*b@i't!t\5Y`Z\nGGj+c,3n&YJ+AWZ7T>2gS,&iF@X?6&l(fh'f_D@!<R3/=03+UK;4iDr)g:Dk:LC2%mi+X&5#cP235/;:)
%U=h1:;fKU'eL`7[%N$ghS;90T[pN-l+H"k:Mi/YbKN%h7`]loV]L$=#L64!?('cHoX^u36Iq.#L>2N;[;f3uqLr_n2#F[eSi0Nu8
%'iW<n%*CfZ@]QT((g0k(_0T;[^jI6^1=41:nn`u#:rpV_(YI<gl*uoUo[@]X'.:U0=?0#Y]jggh-D5%g?C,I/=f5Qi[Ba".ENr+Y
%4N$/M;C?ZXJ+CG7,LDsr'?0(&oeGZ1=qM%i0-#;9.9hOmB'!tX;7%[.5aep>YA/L&O8VI@Lg?J.qab6h7d<^"4.6bP@Q9@9,WqO0
%*ic>/jMK\5RhSBnU?81(kiT:9_!Gm@L$3?-V[G_ZbiNL]_Wa/[KkIPfD(rcI.A:m-Kml0.>8HSq,nO&8GUujqa2XB4]HAGuiE7k0
%En%7%jkWuYglBd]7M+1p5(_n=E-I`?%bhFd%oa&niXQt]9c.LJR%%2#flFa:7+dH[/Ic8XBM#$*RfPg;%aq\P*'B-"_hNM,ej>b:
%bUOXr(gO</^JGq@\V&#*l\r0=HT_V7XCE5c]on6'k[^u'&hcMX,1sXKChO4mpVrlKCn4qU'E:]4K6uskJe$q-`$E>tR;?;$2)R_d
%2?M*@249pg>:s%r1*$UJCnlUP.n\&%'kLOtb]:so=5YGODK4Iu-''+(8stU@W"9:92G>SEQP`aQ>Y9@.>[hPdC#HM+O)!ec>LAW;
%!_-&g*R"daOqjKj/8H[H5SW+G<O4EVP>"M9(U/%&!h9U&S7'EYXI2&k+B-d-?+6!dY\U6o`rXJ(j=DKs)0B3e!aUhcW%7HhQ?#M?
%XDpo8DI=#4p7PW#Yfp`WWMW0p=,Mqq)mjVE6KT'GrC)]B-n?d103>l#ekj6!"J1Ik+?G$l0aroi_?_YkXo,"q6QiB$Q*2`B/$-FP
%U60/ND)ciI/W1;V:f1,83%Zj/;nDYX@f1$r0M,L83tX\4fFqI[C$gk7\S#Pb6]B)?0PW.!Thlc!(9@C,gqa(9]:su!C#+IFWsBu8
%.4"sMrF4<DfRF)SdD=3cWlfSBH&_qb1E\t>.a<MW@lBP9:$LY\J.je`(7W%h&G?0]#gXcd9q=f^B_X<]f-O6J`a5A].%a?o4=s[=
%\s$mGoqclr:*eYYT&4V!U95)=12"T01nLIRc$8I[.21Z0^D.<_0_3692Y::\r6;$Jgi;0D"7m8Hn1IgW4(E>.gPF0hD!MQbn2JO(
%JeHS;1.&Ph`>;h;1J*qt&IL:W=4;.F';sZ\9GbZ=E(9n.[rm8<"3["EYKiB0Lb#!!K"Y\=9OlIU1kV!HD,0B7ES/gepM*I2=uD:l
%)c[=p?c/PhGG,k`9h1;_)#4?u+8S!kl!H!8$/nQ-R163AbdLAH-P_DpV+Sp%`UR<$?dG8%/5c[KeLAIqE>oEXECO5,3[5=Dj@M+e
%:+-UL->n7`q8?JpG+];837d6'Um35G'nDQ\k;/Se.L%_N^fj</ONYcmNoW?o0f,(S[Qd=<l(Ct30.VhQE^h+QY[^eG_f<($6uD#q
%pU'JG)0P_!REce4f.E:76K2s[*.Z:X9,rtQ-X,)H_ngnTpuRf"]YQ$KD6Sc4fS[qWUu<:+;Bp$L_r7Bpp_02S**<A;d5I6Jg!Vf?
%@sDaSGh`VCkrXKcG/G,Vm)I$8NYpS^-7f6A`YQj:OchpR$RaNEb!4nnB?i%@g,i:oF).O4UC&BY7Y4lT$4!JCMesaIB17,/UBrU/
%aNL\RiQ+5-&]p=egi7*L(_3)b*0c.N.NLq9+I$?BHqP.`rW_qmFImG";C54YBYr`1-Hcn^Eld)(0H?W/*'<diWQu:;a;.+b_-dNb
%.DSui.mZ.)l0pttr8@'.8BfoS_-=-#Bk%Aq'luu[jP[.R/:<P3K45Iln_aUAs,`n%6Of&>MC9)#bi%F51;]B7)&uU[#q5a[#3XQV
%^/!29TYPU#eRD/\cFr0JTH;V@*"U'mFJB&4>%VMgD>'OK]-n>[f"W*e2`Ht2Xk1c+Nhd'2T8qAk+W&s,%_fAffYOt`<K0HYc?g^]
%B$c0oTF5*$Q6%$jgpL__K9I\aGmf6HS4m8Af3ui5:+R;SoABj$WRaD%n!P8&GH%qF1%Ks<T`F?E+:'?oQ6TQ,6kE*LEcHOS#j37E
%X?Z(Ti@p4YUpo:f-XSR,Y<+s.M4qGO5UQh-Mf/L"+UA>BWoW9]&'b@hT@&:4D`1WJDs5"<m>gOQ7Qt8Sq*6k,R3.rUAEnge5<,u0
%(Eg;[*uohRb2\d0gp']$V3N,B/`\f/r8=CJ28\jJ*ZU(QWOW3r37]OTF5P>s'?WV+fq8Qt"NW-DUB`/Y=0,)DV$G&(!.qeu%dph]
%$T)>U#7$&Tb-3H^30kL(MTub#a93%'V"9567;LpBr8<T^F_/>YK-P?R>*:I%39!>Zb;qjI.3oj<<TOJ;eCZ(=nUl0dkLMKb_*+b4
%iu(!>8VFT6>&VD1a4TXL#KJm7OS!cb%h?I.7-_K]%rPqk'0Wk6G^%.<Y0DXWN?<P]=m$%AV\4BKq8)aski3RGq"b;f%9u,?C3[>`
%aCpSLEf2*2d=\c`Z.ob6E!?FcR;e-,S@kC,km]ecbFL)^dt;unKleh.3&"Ca4Dj?!!NRX\hW_k-`G#ITdt?\Napgcuo\c=[FOdSe
%i';HWgG%j-aWmj>iA3VVVQLMk)a-.]JAi]k1iHXG`/uj)E-R[:rWYSH>%lb%IW2(`L5nL"r8;+IX%!:bIW1G[POi>&%o.n@ge"%Y
%>[(rGq8(ZU2uMTUd[9@Tq8#W^V)t@h5<.oj(3=q+IW16r&f;NO3-,m'.qee<ggu_Dk0=M*\?eG7.mH"LD2`=[jp/q9_Fj%.%uqfE
%Y/6JH*6l'kBdX2LM*N4G5rb/[@O3fr3#9(/C!)th>^88V)[,+2N<$uR%7dHSf4njtMr6RJ#]4d;E(?4T`LRToP7";/Z4_h#R8uW2
%&;5\=;gG#t5re*t95Q1F\-$[gm*\02?Fcuu8e55E1K6="i:,K`UXdK&!LqYF"ueN*o0@sj'5j/<U"R^"?G*R+FCOapPZN4o"fHm)
%4D;R9_aS["'Kl+0mgUXh#%@o=d3uhf)7e&<MMA5.V-?9*`)E%@g\JW*R42P-9RPdbHLgJC+#q`0\KOo7"(qdho$u'6i+NVmTfO8T
%.i<AX.cUV$Mf/9ri<-:=Rk>+1E7c&`32*[0dtTSld?P2(0ukKACuD8tjuXOW*P_PkQL<g9rpBV$)*$;gaktsS^IcgA5BUfll5XWN
%[4uGp?uEW>E,1@b.oEc^MUC-3HK,mS_/Q=Of(T0#2-NOc#`ZU4P\'c4H3>2(oG2Ybo\Wg2dmm5c,7@;*Zt:e,=<?60c)AELR0^j2
%F+M5LK7(sDi2h*+M86[P.B?!#'=_O0F_GD]i!fYLNnVJU%VWbgJ2S`n(>T+*.a:ZF1oXDZM87MH"W]B23;6/O.qPU[7tZ#<#i,(n
%L,MHXG[FKVFt.IZVBT0M;h=O/JVS0B^ff.h<1m0@dfahd+\jM+<qD-t[9[>TG_%[(RD;ta"."M`"AXotPq<S-R35'Fh2/p]82C]a
%-3>Qq-;01V&NE.:e4Q8;S:GQen^^A:c:tE4He+%h8Nf]k@7(1Cj;E>ak5hL25Qe1\J:l.0p&A5;E,Mo)ifVLg::`>uhp)=!ejJ#q
%Cj<`5Ml9%N%$TTjTIA2/4Q'm]pA1'[>YW57XZYNT&M)V<4Q)6"A2%[T4Q(T:QNH1J-V1C.lSB&2b@<B]@Q`Su1<TE/4Q%n&FoT\q
%%lbmGpFYhji/UdE5VtDVhuH-3,rB;Nq5PLLD)C1T*QW$&jT4PeM*T/?!I)WbVK(=8^sPKOb7+oj,:tVbG#-7bCg5OX"-+lf^k3(*
%31ibLdnU!?_hL$nSHdl3C"8cZJE&^K\#$E]PCJdM=rS5rjs>!`QHfQW,UZ2iB)uYg@W'*+!q+(J8t?-UmsnAq_#dB858`A>ao]j<
%*C@T^!fe<Hfu@D#GMF^LS<8>cR?EUf%WM'u_JN;4!ZYLbeESUh3",7[N[k8m?JgmN^JfYEV0p?g$?3FO'mC"([W#HL:'&WUPcAXN
%_!*@pgTlYY&ker1dFhEJe(+iFpe;6;p=Eb$Ooq5eQV9H/3P_m2&-3[hi2ViC=\6DS%X*-SP(;#%.X`CL(Ua)s(dg5B^e*"s]RpXu
%34U-ER>']%L\jU,^;0g[Ts1?)R0/sG77H*:^mWED46=a=i#8%:'+_V="=o*0>`!="93**Q1g>plGeb3\k8mHj#99[mZC>cg_"#ta
%<Y$BnI$mat%1tS5T4hpMC5#)hlC\fAj(>BZf^OEd#?kZXO7@a!5I.;uo71U=H\lAti+Q.LY0I-Pd,<%JcF!]#aXml[A=XG=K*@bO
%@n\K2Y^eN$`4(R,SB)O+BBUo)9VBRpM7KpB,F#3].%LO3Yq"QmHtEC,+B-rHWS>-ioBlel35\>+Kf:jHZpU*3>^=+fs%0Gs1P'>L
%-LIt($/AOU%d6UE9_otG?Y9FqV4kP\)^]MnKuh-[RD=BMl$e,Q#okP>lF11'7l0bR3YOIo@GAiK9]/>780$EQ^mSn-Z`Z*8o:`NM
%2GE%j9&6,A1P'%lag!pp^_q,8)9dgA*$V-<3LpHrj2A(u"qrufe9XZ$:gLAB94!IjOhTn]l,I*4fDI>\E#U-Ck491HmSr,)"fXZ6
%ZXgHXFh<qK'f^'f(rJrLmMHZLH)1RTJerX+h,&YQ^h#C<>U>d57tnXM!bZCV1!%qOm@lm/SI4.6,>$]hJ[7"]75me>A8#o;%4Z>c
%$jb]fJYU[D]:`)R_re,0PVXe.TP_Z%[Sh[_p\;Tt"jXr^?a-4*7gQ<[<d'*&*/WN%2\Qoc=@HfS0"XCQc5NjmkZh0Fc=G_j)_,f-
%J?f$`;h61T=?!kU<8ai&e%<q*i2At@.Ke]4B6bA=Wp4-QG`/YnmkYh@?C/**k5pF3CN96+$QOc$6drT][09Z/k5shCg+m`#"8k+?
%#3,bT<uTQXap"pkd]cW#,70oF+q,r?[$[UH;h8EuF:XF-"jY>>jmtA[E1B9s@D`5.XS,>&r6>GjLR,RcJKpPUdpYTHNfR)]V\=V+
%GcNg90nFs)=3"]9"\oO9dPGtpE!!gbn")fK%KTUtW)J8rYO%e<N\54XrEM6ci9G3k[W6pT`l"UTc394D<YTG^^q!M<rH>P!O.76]
%Yg*H5#1iNcfYA@F_ID0N_"md[4use\*T-m&Yf@"?JMUl#^?:4]gbJ8X[40*#XrYZ5oSa;#qCn.O7/$GQ";r!',98a"$[(W$UB>.,
%3Jf^RI,LC9V5Me)&"Ml,eI#cA%Ud1b:65o,3*2ken=0ZT>*ja!"2F`0T>"8(NUq_-64'=aQ4KL_,WtP3#7f-/UZp\=-\2_B'/t<s
%k\n%uK+FJ\<gLOD5&f*e:UYZ/BEjnZkeJp4#i-"PE(kTka`$FZEM]PbG<0]O0_ou]#L5iD[%Pm!iu,4/#9C>F0Rt3a6O-?s&QSOW
%%\-u*Rf,h`%bFrr/8j^fiQ%-i\$LW!)dkF:B*/AW:hbGtfYGm.#*6S)%_l2ha#Y0Lj2TLU$dWYIBWd@7;]?Z8Ys$DqL7&JjDs,3>
%gY'@_2n(.lS[!b+4d7C=_ZgV/Y!uG')&kP=8F!H'"%O=PHru"/*"drG-8'6aV(D:u$66m@QIEtZNkA?B&TfAhAil]'M84ZGjq(T8
%E&9,>Xu,(P!$`?bB,5Hb0*G_h#ro!bX'[m&S*fmRV#YGBGK+"j#:?1RrIt@.Z*#8IPlVjV3[ViHm^RU'WM4#0E0/a-0<#V8_ob9U
%hj+8T:dk9)s,G/Q3^B88Rm@]i!uprP37m6.2>1t<nWTu[PCJ5R%.pW*mVg`NKf;rqmn?-S:X6cQYS:qIr!f9H=_YX]a#-e>N:e,m
%<\/:GOFEOhAAj,m)dO1?9@ul5c"9l%FOG*7-q/D/rFQE=G$EC582';H#O+00br/FJKD,I+jd,GKQV.h*Dq*c,YY95SDn(esN9hJk
%(Hn$Yp0DOanNll.r39;KW4pAeRG,gUNONM-Ah\WHUf2$TRH^3c9GK:ZD`.Rt)GK%%Tcp^QqJIQYCb*mlSA*q8):*MJMUr<+Dq$>)
%&6G09j>SU$lV-l/Pr[E\iZ"!eA:/KNDf!)P@"rUp]pm[bKAW.d31.FNhA`^G+4>o")nTR2B4d6PA+C90khP%A3gj](1UT.CVe!R2
%eD?);P.>e6p-pi&@ShEHL$X/=g7(*C/D/WpH_ZupJO/^`QKG=)?_K=+$aE<<6gfphM'_t_gD^J7p?.1`)daB%>A_=8N*`18U%<Rh
%gK%fOm*5$AYgOac'Ys5A.!H5L"8A^*hD0Ekr(#no@.kr8?]&3Y]nu<T0QkS*NF9_WSZE((2t:nW>&C7PZ$u3f#.6B*3q5)F9'qV'
%RSNL@g)DC`D0@U[Z_<MeHY2t@1UZVCp-oFB-A1'BN_:TIbKT?J'H)`-S_G+7"XE\mgD^n66g@lnD]22)LR$U5d/3qjE,^0!74W:7
%gtiB(qm:Bj'>O:d%rQ<+)eNS^T27!aO`=okh4)tl1.(Z!h4(9E81V50^LH_E-248C`_(mn\Mo%XX^CDThTQQ>frsJnN]%8;^c(91
%A304bXMiqPl9h@/\Mr=EA6`rm]q'K=D'epWE&=ZOhKhdTU\8:l'#K?Tg7&Bpb$SQ+hM<Ltn%Y:DRt27hs*&'nF=o@^#I?>oWn@:\
%/%7HGE8&!rgRGpU15O00hY:1SR"O/J&MFG@[5\"/U;gDPDh>c(ksk'"#*r[.C2X;?Q?:.5c+G%!2P&M?p-&"d2U($bqFRu,bhg,O
%a>2D9]cB&fEq,+ARq;S(Ji^4s1XBb.D5b/,4=^#KVtPjt8b?gqHRg+l<S"A'hLKTfGE5MdD4kKEWP&UcdV@E2Ha=t%aOm0Z-;(5<
%i(!*n2^A=:V=k,AcPZ2Fp-okF&)&^aUQn57S_0F0/[hF1,rI9MNS"kj"*IL/U_A(gT(fZ<bY%4rPb'?"S_+l5\dWakDa=$-g!PQ,
%S%'N?#<K+K=qYr"+SKDTc4d:KM7m&IidtC&]euAmlcSQg7mE,NG@pOqs%;9,N7f/Dh@,jq61)pY*##V:gtmu/,DBfMHW(g!rn2==
%;^HIf%cd8[1A'8%gtl]f#e?Z&B#69HC$FF0R/:,0#.Z\!`LRBLjPE;t'QZ*ODpDDme0+KTMc+e;aLsTBh+1`".iZmYcL$&3]71X4
%n\LK0:k;fFYi5:f?=KW`DVX)"dj$k?kOp7umUGnUb3c<fLS:j*hK3.`>H,<pQKknY)es:.>\"9-eD;+<p1^AsVKZ:Ul-2oh9j<5&
%opsg+3W2WWmG-QB^\$!!l@5O+\0;sZ$6cGSWZG\;!q0K`&61c=Kl&e[kcGtf$pl(WJrChVX;,`2-c<VbE@octCe;Mg2(]=CB4>6h
%G;^Aj;;d/9#T+l2K40FBk9UaDJm"0Ah#X3B7,7rs)'c*oc-/ZZi?>7k"7fP+9`ms1PD2H2I>6+SjIYCl^"7D-%ho647da.>6KuBu
%f/NCIf+5P*Y?PQ=8g@C<(k[]('\h,h(<+aOSaO?[5$MjT!8UbZN/*6]GR5SBSpBTAUQ7rLCppNDeLcZKEk\6dG!WukD!hVi7SipN
%khZW=?%K>6SUg!7V'h5@@j<uC'%0i$qh?f[_5\6t]f;-JTr_1:>)KF]S^"UI@mN0h4ieEHT,6Nf_2AH%;#7J28TF5t_?Zpj!9.-W
%ma4Iu'YYG'n7+[[4/SEMNu$P%!Qi:i7#a_Z$S:iRpYDM#"lt[>!7]9)5c.FYBu263:@V7ZPqGU#78*?,;&(rp>h[T,QXTr&&$SL@
%)D-ZT31qR@2`e_uMag'2JIMh96-XZABS$K37o3!DXCuo//1Ud&XX[;)B;epZZ_b%h=jpuR=r[i[Ok_%<EW?56!OUG19bf66kI'1\
%E6>+i,p(5Z)029bWtc4sd=+lq\8C+UPimQ?=1<@S('OuKobKdNKcpAS$4,#D#h[RV75a#J7f$"j8s*'8Sqs.IR$<>f5!RU%:^^pY
%0Z*HIUB7F,U6]>2)!o\LHU!$/B2ME5R<D1I6K,u0FWYF#GB^np]S[J?2FGsr8MZtb4LU+3XL,3:4gg,J',E^8/1Nmm]PfWgKg25\
%@>(BWP-.Z!!La',2?=[eglDia==EN=gFXmhn8.`,/a=9qEPs6/G)fljD\[nfkn=^I25=PtAQ:KG8J6g$WK)Kn[X]_.4i@uI6,t]@
%P0%o]ej=fsD$B3G<-7XtTq]=4*/lC95En6#4)LjU'=^am]-o,c4'Fu23EZZZoMTVd:D,6%1H07h8J3VZ3c=*8i!SG#<aUF/6<8Z9
%/P%01>t6-+"0,6'd4\P"INgdL^^%\:IuljY6AfXl_APKr!FWN];$Jfd+[';o$rpHJoue0qFo(m@U(16I4HA#-o/H1@R?<Nc8bs#1
%Np%NlY__TfBBJ@E5_3<^nl!npJqH1!0pYCCd"8&)N?K,jPiUK=6qDP&<!<#"^?6uM)$KnONdsq#"=2ZqKkZ3V+WiVDf[_j?0mkEK
%QkrKQ`1"h0G=]'`^%<YUiXV$(e8l]fh\<a7h!*(_JuULR_=C=#[\s(%,)Ll2*5<Eu,,R;\Hh'pNF#uK!\K@U=#&M8?@4$XmX:Q#"
%M&KJ"h>*#'V#q($8!GiD->I$H98Xjs$dosrb;=u881%$c+-;*W<#a.U(1.F(V2QDTDBc%g_$Y@"TV1#0.YS8"AW2V?$Ref1Mrj&^
%'*a#LLqI:E^#C#D$up@7!Vkn/m@<S*$#D2\6c[GC!G^UO8<8RD4I9KWTSmBiiP_`YDj\/lJ.!q8$B`#[e-*.3\dWHp<a7UBH_f7i
%:/TbtB<^Y71.paJn$1H'5Z0aJWVOD2f1]?pOIM,$CKpQL/T8PtjA;GnAIaWGi1<="f4t2dUSRrX1%c5<Y!f"%iiUng7Y%FT![NFr
%-UAfn`lhT@lQOosD+YD/5felck`^1;!+lVID^PDB'BIbNTFdZVZ,7W_KE_Op#jf_?,n@f9!5KrQ?AN-8cO8!CnOXhVa@m)\gSFRO
%5Tq84#n(J*?5q^p%BKrV"9:k#Vf=!cW@c'=@1'uZkbWD59]/=Q*ra#)Q<oG?LST^\=l%HKX_D4(0gle=Rb"^UA+MMi]YhnOmXX5Y
%)C=tUbYuS96Z^)L*D"cbd6dd[$Bri"iAKUXS*OV5*%>b-$+nIPeqb(n9tS3%obp,W>1L8/HTW@h=iLmp]lN*g$P+g5c[CRDi7<T[
%@9'.d\2B&cBfOl@;t[_G2"oYRc/c*'.N#F5Cr+Uprc>"7rJ%R9/V/buetdXC(JXP]4@Yc#[Q2Wu'?)J+Qs&QHG;=kKk\c]Rfj%BY
%Z.B./(&<CrS?RcL>@UN0!^_N)U9:Gl?1-BWk[JFe$UmO'%<j/d%$b+klDc1f!&0OH4?P(DkX1JRo)uQe9]HFEh2qIq4K6bu8X>E#
%QTY\]foikAC@8C`1aUs?U8I,mSh[[uk3J>IeJN>BeZS<;TTNC8fK0(C%;U`33F:l*8IQPtOUlsaT#]ujI7%q?]=RS^\cMC7=_!FE
%?Soq</PB^hj@=5X<?Q=,&o%`BZ0RT7coShm[ZrD?KKI-gY:U1&Z3:^?(\r3c$T)p.8#$r"Tf!d?Rj=Y\R;-Eo*WRPL=bG/LpftYF
%LH%,X/fuL4KBM#q#jqle[!VRi`0aGSI?\a7KXCmV)KmC:M[d<,SlrSo]D&M?$`%p>c/LQ,pnE\OFp)SkX"'e_\=!WDIB%0iTpq33
%KY"IEQ]b&sPa\]+`a'G&VFCSR41)4/$8INGFRs#](K>q;KnaaU\62Xf9sn0h8UCMo:V4'pQ<Q0Ld#>/+!t0i=q$$57kGRds[io'"
%E4:n%>7-<:#ONq&I_Y(N5g%#jZB@e[kGrYmf2Ipl2;=Kf"FlAGek/n&Ppgg7W/NC_%#$",^m"0g]6#`SVK2nul?F&njq>GFE+4lM
%3-WTX_H+kiHqggt=Kul00!.L6)dX6%;'@^M18?e\"rpY_[@YG+R,MR!rAE$UbI26H227rsPirj#_H^KmB2?LdWXM2q]`ldN.,WB`
%pelpA"Enq9l@'SV9Sh)/63.Z))I$@'QQr!dU<X"EH8.ZAG4e4L6^`=L=0Z#83S5\0RF<^$DXCN=c^2$&IOr)-E!R@bTP]K/,2uRP
%o81"c@3/MnR@F1/HgfN*a)PYu^FMYNTjJc_:RFu?]k[0b:q"]?6X;mtSrmMl632X3&L1O?+=LCalb?\?n'%fs$W*K]FuNO^)4TE_
%cDnPEgpo(R@=f@Oi0f>0OuM[+q5($M#)gSZ;[CO?e*E#!3sZJIE*C]("R!CtF^Pc%20mc(@1eXq%UXp+4Y_G\A@]T1E"tJGkTp7I
%;<nKL$\?7sOAd1)/4e]GJUg<M<S8%&RXFA0,fA+W"?5ZPio@o&:*!T,G'L(^:&`3;%$m"5<Ma!H8SA9G;u+e"5b#OrUR_M]@fcWb
%X=Q>^i4'JQ(DOl2W?*Cr\LO."bEO,(J>=M4Xt(C<3-C$u#!UQQM<TDLL(:F.:^#rar<dIXE`<srI_ce66$B=dDA_TMj:`i\Aj?U#
%,/L]],=6ktKX/emeeVf/>Y"d.!%]s`jRT^$K'i7)<Y5+B<^L3%7aOYNB!5_2TaP7iGjbLPHV^OuI,.X?D6OX`eDV7_WM-'sUC-]P
%.N>TqJ/%J6]FqD'lk-gMi5`4DQ067"K#8?F*$]?:L)I\VqO)nF#Ql2YkW;m6?7cusgVJ0\oE$,!?DU9D(eVY?hEMi[/"o[[Xr$Sm
%`GcW-cqb=dnn``qeg&$kGhOGiK7;:t8W^?hi`L*Ws+c,r4\/[b9]Gc#]3Na3jHmsSC,mpn%RJ+k/s4hQbY$$]gh<;s</*m`?j%VE
%NBn"9iW=+J.iXjtMUfZejNt#>)3D]ql!g=Iju^iJkDF1.f.efD5n4VE!ZFb^-kQ,@HlsT@Q<<a"]2JA20j079f,X5\P`W-kYl1es
%nPcs=aU2sd?_?&sEMsc26kd;i],5Rhr5u\@3bBljWASH8@5>q?64fZb&KJ&MrAph:_;>@p1<HP+O=FV+5*:NN35>(uf;%1*-n/CX
%Z*1Dh!jaRH!=V\*Y_E38D3NhYi%5::4l+cSS=KX45Br>S.iuhb+BZ=#:g]p.JOh:rKVZ3geqt7S7n5%3]TC90T].EYB?8817F:+4
%:5MCmTk[M[1C6O7-Kn2J*/-(%"J/aZlP\93(bL8bU[a>&9R8'aPVd?OPbfE+[L]3:1#QA)h_#["XRC[%;`]dZWU[#c.WqdOKORi@
%3]Ggc!Qi?o[,Aa/7JR/+e<'okNr^SPJ56Y`.QRjoq\MhsOjR[<MA0\Ao1cPLl^NLFJq=__-bL-[.9hlEq/P'OKX'XZPn(T%!ns+8
%PjT?QSCSk"mLh5u?-I5`n"c)I4rJO>k0gd\[JggPl:-#9R-fp5&asF"lZcSkPILULV3\k+JPYF"H%AZr]EE@tDsm/!"(QYih*m1-
%#8G:s4JBe2Vfjtg"AfD+M7.6'J?15bj5;saU>Gr8/1ic)$aXRU@([\++RQ'>7gqAt:aP+kEhdnWQE>D[@-M'1&d+[a_M-YV;MdX^
%%Y-A?BIk>F3-);od>G"1E$SD&ARUb8(>T%*$+n`$!A6!h9OX3?fsE%FSE-hB$"F9\Z62*>s!bBUV=+d[4\UIB9QCFMisEr$,,$oJ
%FiV]ar3YO_HZCQ=_5QLAm%`,r_3[CtJF6,ViC0H@KK<Yl1n>1DBJY>E]bLj]daN6Fj<^=\9bX\VejqO1m0"k+cQISQPT`$/O<KG#
%*$`Bem0Apg:+mQSnqBcUig[k@B7lH`11nOOA61MuY16-Zc\17*R$9`X!DF=4QSjtE!A)'DA6cE?]Fegq?L8'!?_*B?&,MA7k`Kh]
%aC5ZF3p\[k$oa(L-G#:g1:W@59-[-#%H897UO2qgn(6)WdBl3lSuD'>Z.Fr=/hq'7NCmPUN]Y(%UIE[T,,)o?)Eol]&?`(f%o_[:
%0NMI,Np0SHaT?N?l(ir9gD2ag25uRSY)qi_WJPT9fq8pHjo`J0O//4pn$/a66;0We%N_]IqImMX!nW5f*Z?9kP7Y(Omfa+G6U6VH
%VSgkL1-l]j9gZ$ZD/fTCo7Z@eM#;g'"[O\O#]Pu93O`ku0bV+3V.(Z/!@5TtTW5mjET@8,&gjTV-_-fhDZ2$eNOWC73`Ao-8-]FF
%*!ok/Q15X#jT+m]I#i*VD:#dq.iG2Lrd_W9+)d/!KR8g!d\@I5E)Gt=P5%:(OK93eE&RL?5Q[E+V69itDO4J"9eCq;6kCW$bjl)9
%,pF;lW,8TO*ApNKWu>%D5(emi?=K^&F60;P$@-If%S@;q/>'2udt]$pIDp15#iQV4gu.`QEt%(s!!`L-J07_)I3WF&%d]l#S63;F
%K<:ur&2Tn)ob)O%"Ca9s9PsJGpB_+uK6WLudb*#h9\Lo5QAkS_9eddT4>J`5,dn?L7O=aC&3#[J'WE)YIdl,XIW8aHPsd-]Zk]@h
%$.B87p5P&ZbR<6&&l,UF$ZOP4OIC\6J6?P"o,,0M)Wi<8ESJUEP.S'nK-V"UYe[&tR4_XIR@S&W:WIe8m53\>a&9A<EKb5#6j"QH
%@)4sH8sD.Z&=^")[QRPteR@&31B==Q^)P4IbVO:P)\hia4@jN6@aYJ>=s7;rX7TTKUm;'E12#*PMC3=7,J'?>4g6T8TF@d*Pq13;
%USJY$DH6nViXfiF7*#q+osf3#e#XL#_Vc>('R.bOZS"C;#,%4V;cn>e6,"rW[7`_mSoE4'.;:bh(DuTnl<0*FdgNRh*'g2HKm0,B
%4\.KsMCAR9`N^&N&b?oB?EtQ7Q+8$WnYJ>j)C7%e!Cn+n"ps4RrC=-b==<O(F,a%7@.H/fbAL0K)ZZ;FgF%BKrS[g!ToDCBbER4*
%E#@V&&P#o49:_rR1s.1:NJX/Q8-847bfF9o9.,C<eL_th(#7d3!:X1F8;80"].h1b=mBB?+'=$XUuiX3&7guW`3:uG$;&[<'2SmP
%LW&JEk$%jP"7)2EbP8ZOT`s1BmL+>+k#k5G+C8Pd$%&3,.**hE5lJX?PW:^?T`u".5dB<+-X[o>>^/r;K_G`bl9ef:HIR'Jf^n/M
%_1VJ^\0E71@6;RXp&ZsZ--*4`fEIR(M3u\4S7WD8`FRF%Jb)>T,XJMpe)L'E.KDTU/1^>%,Vi!sB9qQqC,Bi5f`Uoim0QqEM?B=H
%3-;uZ:?$.4pIk//9)8ak$W=O>"BEfBZ31Cl,Z-pPV!R(p0s]o+QV+qc8V4e&D1`K/7Q6G_QoG^NFWUI=E:Z?;HpbCZ$2,mc6X'=e
%+Q.K_9Qd&)7K^.#CC<E\[AY]DN^RM725q2F&8iYo_Xl2WfeQbZ8eR1tEWJL7W;SX6p*:1^"1@g)MG?RLU)iJ*i&_.KE`BqSCn@I#
%d?*jj4"XMUg@V%<^uZT%4$`,N#k@Q9V26ZO%L;O;n9=D`J05lm$_8GFc>0ZZ[&=TM-p[,1Sq-u8Y,\QqYUq.0Cp6O+/nlNpj/!%-
%Oe=j/N[YC8!19He9'<NH+@/)`4Q1$$q>aKD1)skP+P4I,JLWPL?(bk0/p+V!6qoan2oCjHeVPZ[L'OCJ8P[K/>,2SRVoXB6Ncb+_
%EBHc!;'V<iqU82S73)&<5/7ln)XE$rNLkR:8i(MZ8%oR@C2FXkdE;X>D)t7\+D6FF&46:4q.,Dr;b2^,Mf,djq3U*a6\RHt$ucL2
%3C5VYeH;XHJY<p,[G+!t3'NeqQP/g`4GK9$e4?;C5*jf)?BNskp.%>'_&t'E@OPbdODmbrVNoW"bU$Ie'dEj%b]?;ucjL+kEXB[7
%=Z&b7L>hfZ(]J12&7$9IH,BI='sa<]-7Ahg]Yj:A&A6pUn?'(f35RMS:uN-86\Ss[C*)MY`\<<H2?[;I35uk**f#EO-cCL.9goOe
%n)TFL,'=8WWYV75*c$E)$pgKu)XB2bi0"_^25V@''p'lf<#.&_$`rE?`uhftWEP7tROa4F>[<@u-RYlh+k#Ui\jh&K9\Sh"i4o`#
%Q+S[cb_03Z!iA\O'M19-RC.UXl-no7K2Y4%+nOXm-QAJaR=gBif.Z7G)Wk5=D1[9J?%mA1&_tsT^c/hD&-]1r-MYgL)e.B/SiB7H
%MrNqCbXrT+8BClY2/e%+7"]"fK7=Ph%D6\Xd=`G#$2pVYkp3%V/&>m1a-jFE=cJK12@\2H&6'nm!4[%p%oS=O"0`*AC`#qr[>KN,
%]$+Q?6F%S-PRsC1?WkAe&75TI)&hgL?inHPTU?XlL=7)H,t[\_=XO6,2NMtV_KHP_[1_Q-JL_\c1%>Xu#4NN9-;/NFT]9gf=C;?<
%Qh4.0$8;IC5"an^!XFa^0%8i".BaNo&d)Di+:J+H8._7=Y[AV(Hol@K8>[6^/7sD6:n:lVG(>*RR]mOq(aP8ZLqQH6+dHmRBVbVG
%`=TYD`*oD1L88c'P2M9.7UdAb62L[dD4ic5LhS=8+)dDLXV@i>X?^Y2@g$$9[.I$#*s.lsNtH_)lrb*N#)$utmn"u$LJDoOTdEU+
%/Iphio`YK*X\2]"8-Bdk]om[`kU`6;gdf>ra$EQrD7P/5cXU+jddd=iZ'l]Q,0KY3(mEq],*'[li]bCkLh\\O+RlLh4nC-20Kht<
%^ftT=;L@e1&5m"E8\m%]M3WZnP('RF"R^;b]J[86e<n1mi69&1]I9O(4U+[_U?aS+6.2sIjcE!X\YoC.2]*`<WKgWg@]SFS'U'Wl
%:,J#jE4J6#oZZ!m[q+8+HN6#*$nL6*NY^\D^mQ`8`0l0412u?Tf8c8mJNJ[g?Sd>dHi!5aqQT0YO026=bf=6,@MrjN:I-PPjafjo
%Ll13%7AVfHE.K=S"CBT92Xp;NhRk4NBDe992dBmFknhDeL)e&Y9KP@Z!(t2ka3?,jC99`)0aH$&'-r.<A(6+_Ch.=:fc`RIe1m&:
%)4<!Q0eT[OT\cil41UM`;#G:k?"sNiPOpV&T#>S*0Y_u+Of0X<'d_XnO]Sb8KVUD1TGO>$Sejl8op7u:&+LZCKN+s"+;''@^f>aM
%Q$p7i&[;C#.#L"_0W:7J9c8e7EMp4L0RGK[*%Iq4OrtqtAGMn[[Z6"floeXE3@&KF6C'Pc].BGkA.b^WKujDDiY8k$7\-s%KV-d%
%,Z8@hCT&ri!!J2<hu]RGE7E>j-4ppZA<%45fcX0RJlFkWQ8PBR;aR<;Js.i!P(Z7q_PbWI4sYg6Oe8@ILi7fB]+IHV"QuXQXC?:7
%Pn]CQinKP?8KO]'7?6_06$p]j%1-f!D4q9`T)u4''g`sN^B.%CcTA!$PsIoKEtU/\<l\<C;iuV\86$N-;-P%;O:8@f&Y:0d,-QJE
%lmEL]ZGgIWXaj0^9hUSk<ftYK3_WulE)mS3]!]5)q$s=n;o:-jim!3IM2P%XD$_C%IG7'EcEgDtM(6$d$Oj$8r$)k5"Qa$MKK2bi
%Gu'aEb4>b@OA<U?BnB3B-6Sio0-luFL!IkAljo=V!X9!I6s#&(6ob=;RSo/<YZ\3c>*^:P?BrVI&qU]-pXbVTX-G4k=mCt%&`Jl&
%bEeokogRf^"BDR(2m0Mba+R"$KT[XN.j:/m4db"+\4%O$J.4@N9-J#X[3\cajpuUGKGS,E)`:5eZ8K/1Rq=@=!lG#2465X7+UbiQ
%ZN>nJ*dNG;#dsq5OS6!q"EK&0N<4[s8K[C?aTEnHHcp%%OATF<U/dukX'BEGMau3:=lE]O!C:[%kE^mULtLDs24K]3n/kCK_KQR:
%03)\C-oR&reQaWo(BQf$("3Lp41"H/d9_R#(4qg+q+HCF!5oSYZ.015r"L$[!WZm`*(UXD"J/_g,:3,],q^6thj-NrFDX:i<c!2;
%;3@,46;@@h37,%L$%2h-Xl@VMU)X>^Of79**cAo`OT@e-4?S74IDFc!'jZE#P#2!UE:`l8T]Zq@(Nh<o_!;3HJ/Sbp:'dEn(IZX*
%PO]&*U^3i+SLuRW4:j<hT+ap!\L9.`K$)LIecOZ_Vra8XEY37B-:*`+0F"EgBd$']ba0NuXlm?T=r9`6&\]C+%qpQVn-Wkj\58<#
%YTdd//)Z;HZBbNYc<Z"ZbHk6SITp)L9^V!'F9KCqG`[.!(7.3GNg(k22YcEs'EWA.!d`df^_0j)AM\J]R#U(g8d6[j6"#Z$if\1;
%1@g\IY[EEh%N>q,8$WAro9P7Q^g[uK"B]suL-Z#K[8@@Qd.(!\>Tls1[r<2tS08;WCB]R:G.kmLJf;or,f.8pEG4m8Z\#5RNuq3o
%C6Au+np.Luf:qOO%Q[XPLEnRCWdLA3bQT7#=]&uBB%&7&\adhk(DM!fPu86>1]eM53IhMY8dPK"X@\18@l%0$f&cM]FTe[,U!hjO
%,Ub?pUJPG'")inU'KrZXViU?>Ok8kfBW(pbD?IdEXVB;i`WOjo&0(iOC!]2U7^8@h'l`s]'9.c:Pk3@%9=2ZuKgF.36!]`2$`k!C
%6Qn%AT)lDIns:chWoc3C<6;p.5u[PWVa3Xkm$I8cEIaHb`;OD4\jP\5QL+(E!!N?A*`!X9C5fEJh,DPM"DmUUJSl>Rm"jha96oe:
%h4SCL,Wi8A.l#aN!t_I))uqt#eJe+DrXU`9*OJVE@%&iT$[+(L/d.j78sU^q2tOYc&'7#PX^/0fQusbS&"7H4`&@CsYe^LIJ.p\Y
%)MKAJICq5F"Q(JuLITa<M/q9-ZC$TI:,IRa+gJtcW2#\],F/IJ'-KjpBbf\k_E^-g&HN@q[J`m\S?"?&)a1FDMud2i/Alt%+dReV
%&G1,M<t$g&E7U_W`>1d>6B<<S;6Nb&Qs!g?PMd\l^1eEhT-Ch'H1)t%=srFKPe_)eL*6`>TE`nu!3L!1X(2GH;7.OG,$[jt&k7^O
%r@(@_)OZ)D3.)94?g3"a.0Ob"ZKGrk;Vol1&ND*rBKuU95orJ<4P*>Y=*s:/Fq`CI"R)R[Lm+EidE,\bTID3M)laQ5Je:@:G]leF
%VM)=QaC;2H2A@+C)P@NZ&sRP_G%//93(%/k'eeKJ"f1#`*$Xgg$9+9h9.h#B*-t:HD2"jq:\Z*/S!CSk4eoqPohfOpJ2:oq(N>^&
%k,mt?n-5a[&:P&O],,#rb:jLS$s+l;&W#9FC_BOjX[_<W4IY$9bWoSWFCc")M"Z6*16X<W!V1PU9XP(#J#_/J!#;A7@bH=B)&SEc
%g([(!'^s`7J@>)`[<e`95!/U0_[=sL1:l(!qXA"+7tl5UKnLR/mo6f4>a4iPGu=p+,IrA,??c],,N?@_JO,i7EDZY.c4+YG'F&Sp
%pqkD[/&A1S-ql.EbcPt&8>7?'28\5*^(Gf<\p^YhHc)"eMLoASEJPbN'5>Nr6BR6O81&SH<9dS$L6!4/PN,Speeoee:JH4jCBh_^
%MDkp05nNl_7^E5ZM**Fk&dLGA,45S3OVtIQ(p8";RlI6L$3JOhLP0%-o3*fof[9dJ8QNitNlFluK<%..:dlpKb6"<g.QrIK7*3i#
%nmX@S+DD[lolqjH#O.aFe:niG2'3fA8C2+5&jsP>(IK1>7f>-X'K^u)F%1..@1mZR+iT9$!XW^:L05'*eD6"Y7RRuG44+]*#?dG\
%Ab/M'Q>M<mV4'%Ug!Nn6,SIm?@C[m6&qhHE#GDd1FT>ARl%J[]/d]+uF,HcKX#8QB&DQF;n^'];T!:kt;.u4"9a==f8qA+Oa_3"=
%*H_YJ&I>qr`&o5U&d>?E;J;b9'<FW5ggIJ8-\?Yfc_)SXV10qLNb#jL/)Z83N.t)*7S@-ZK6'e<O",QSE*D4]1_=t6Ldf]_;$eJ_
%Q:X9"'Ra"IA"NHDO+`bNIBaAf&YaXaH'K*KCqPsrQepG*GmDP1)EtZ_Jj]Yp>Ad*6!lN/\5JZ:k+#be\8c<F,hE'dr:(/"]=;.pY
%R,qr`oM$#&1)R5F>GiO4Jt"D<NoDdZ>3+f"=[c1t2&7^bH'.M@DSQQ*i_JbLR/+a_A*I@MCa5gRHfoa4r"SQXkj8:7Os"2HZ8#If
%]u1A!MCE.t'0d"+NQ,/@71qs;Pmk\]BOKOoN?*$&kk7NH'iR.:JMWVfp)U=]lJ1>oEQ\c0687[EX<:FRXrb^,N1<M"/c`UkO:!!L
%^lV*T/=ZnRCHoK,N$0>KmA^"?Q5flP."_R[W/H8i)^;q*aQ14AZ#1n>3`\Qdaf9"!/rE3i%S+LRlNoeb0Df:]19g<t$G*];P*C-6
%J8g-/Ek8#XWTm9aY+h`P1[ZS=S;j=hZGo.q-?aXl^H97_j-#(*c*FEIDL01T"=L:Mei$[>P/,d+?U`*F'WRNh`DW\`.[mUqpJ4;>
%FYBbZ.-H6jZaa%%Bk!cO.=3QRT`g@*[n'+U'GQYX,D@r_s$gGoOq@tGs+",t4"MYSF].lW<Ue4KPBrjmCRp_8SX_5H9IWC0^]m.t
%!oiT@]Q"&g6\\"JCuCbk!bU82"A(O`/P!?k$VCX0F*WU3T!MZiSRC%_K@r9$AKtpi6'Ef'26tAX2ZfX0Z'FSYdW8>b_cJ7h'L%?t
%7\1K=pj&Ik2Sc[R6O[]k"Mhpn$_k@t\h?B.&geEP):!_(==8`+G405:Kp0_;g*NU=A[!m3\cPfcDhZL\8]I:uO<4_^(g@Z)UqQq.
%\JM'>$neR@ZjmE9Q\`>Jge#:8"nD-IYWI*<p#Aq#%hd4o5lS\%,;!ere$Gsj_u>UP2Cn).!Dh2fj2dre-]V(,ZO08O?*PRn,C34i
%-nJrJO[hcmFCmMJnP"_64NeB5ZG?f%e\L@`Um"PM(q^F27'S_En]7d>6_TF7AeE-CH$ifpPa`A!9V`\bP;4od)-AasXNuu.N-;TX
%;:X;k_D!7:>it.1NXMKb(j[m13'cT'i!/M#1lP+R`%HVuJoN77WcV;]N<J:i9(Y5<n0%B>EF[-eX`>(I`rN-uKa<`!/23k$c+6@u
%/KI]O\lO;_!UpYu$kd.6_/,N6W6?i4"T5$b?QBn2Hk"M<if__3d0Sm5J3I.VWXWA&N)i;$S;2J,BEr9n7"e\2Tr1_KN%Mu@KY7D#
%M$sp$%[?gBAX)7RY;B9>k@eu?,IB1g>>A!A"O(%P^ZB?aWj_K17f4hDqD!,Vo7t;:QA!<cH';'(j@\aOPCO@dl=MTR92afDbIj%@
%o8hmW@BC1,KV[['o7S:O(t'NDV@u1+>JYq/C-]qF.JT`-cF-#Pg'HcCG%FQ@3V[MiYJuY/Z:c=6a-NNP,h7VnW[Y=9*$bb<!6.QV
%"-88gJ]d:Eid\h"$"S^l$m%ErKK\-8RhZMR<nQ?jaGu0Y/>S4)H8?j&9(j]BaqXa%OT<ibhCVS;&3dWQA>Y!?7Gs]0T10]biFrnZ
%>56$&ai#P:5;N'!581,+Pc-MBcHX]NdfQ'9fN>%Yh)h2eY8F'-R#q7Z%LHm\`<+."Q&=R8R0F;=dclq)Vf:I-,V;8$+>e$Sp@<k,
%"DgZ0%GZ"5UQ\MDUpNHD!5,:H*eCpC+E(PS-SWV5DX#LJ(WGH9`ZQe"ZQs3lQ#2eZ8qqq@i'ZilNAC#T1#eZ;QQTc#,l6lMZk3),
%AchH21n:(hFlb,Y4-8rII9QRu-Ab\*oc9,RZ7V=0=RG=i&*^eDjuGnM&-YGP-ld"=`PQUkiQ,&-`<t&KM2T4Z*J%b`mE[Rh+):5H
%+@76/"Q'DU-@,L-:Z8-Z7K\QSagLJKXVJ/YE=+??<!TgjgJj*\.sTrU.2It2/cuDC4n;6Vahm5V,6NWoNcA#K0e2a"r)+R]o*dIM
%?umO,$K+5rS#5GiMf>G*+Z9"Mp%AiDMCNTi-AP>mL^]1BoIegkmM@l&I1h?G.?5"#gMFJn/hR2%R:qbb)"'6;7OJj//3K++Mun#%
%nJ0&%'WshiOR[/_N0eTcJ''j-OB)^=0i@^R6h>%(e_re&<>b%4n3^cmPeo74lt!Lj![Ob%0JuRS:Ec,6Jg-2:j;pYVd^j*KQ2R%i
%`T,4(]Z<K%Ks.s3n#fQg&b!36P'YQS_73B55UKfH3TI8<<apg93^GM:r`3PpoeU3C3(G*g7t^WPD)l_Y0=XRZD/$;@g.'0k:?=%$
%f??m1!X"Um[L',?")5]?c'S!k5Ue2"(BdAUoc@QGVPG[Q>qf0?#K7/TV&uJG^fs0k$6aElq.PsWM5i3/FWHHded:Qc5Rq:P7No^h
%,X@=u;c&RhbcEQJ:?4Mlkt2f<>%)d\Bida1\'-]rmr3trQ.(Qb5<+6sMp"q`jF3)e?"'l\kTns,b)Y%D@pM\$M^9AR;7,V[:/!1h
%S2Se\_C2-eA\BA'TEgL9C;=km0PS1o!MgJH/8J,d,?L6MHY-`!W#J=<@Hc/P3Q,\+UlcX?l9nl9(dcinNi[(@Ct.CIet`W^V)SPt
%ZR`^S4R9N_[,`@YcY,?@\&?tX4Nh`BGr*>&=I^iPB<<!6VAGD*W$L7-*@$dDE+DSX%'$o(>oOm72-(P4l&rsYkHe#P-\,Vj5E-D,
%BdR1N/`S(e),W>sPu&YU1K!Rq*$Ie[:b#?$mSSa-+'d0="NQ0-,9`gKai74U#-4k:(a>cGO5[%"6gWu&ZGsLc>61Le#O(C2'[2?P
%8Js@A4:*u?>.:0mbmLh:0QnY@Te`2PrLEuIkS/H+[-Os1=`R[6VbH)b,Uc;$2l&-hn.]8GY]e*k"VkpM+2E'X^-gp;3[(fHAe'Z)
%CZO!GH@Y/c\k`ZE8.n:HJ]<[WQnh<#6cGtbRRf+sL^>KJE_Rt>TY.5)en!87\QtoU,-mNNW:,?]*b6:4:)!MocBYqT2;JV4&HPrd
%e/D6nW/W1D$nMLA"5#CRh>9r6mE/LrUdg#].=*\h*?1gZ\do?Ci'BMCbYt>gOhjR6/)hHoVh12P$XXcn*7Ni1S:W%[K&b24X<ctf
%%XM)*&mY/;cjNoY.Zpr1ThE@oJ/_[n<XL6KN0g^p7P,kpfltN(;Jcl-7<N.bdi)-#Idb5DeZs?#V-e<j%njS*d?1BEi3&ggO!U8j
%f_7pm8&BjYp55pDFnfR"fjkh</"#1FiS/T[f<@)`.3+02d&ff!47U&$Ru2;G,'8u2;'C1I@-8rSM#K4ZRjpBB#r@X%CTLip9@4LQ
%JmPF1Vu[&GRsQ&`Cq[Qi&Z4V1!K',lD-O:pU>f8%).4-Z*DqWY-aT'f5IK8<7Lm07]eXP%AUUK<5ZDEuaOT3NT9)Jq&'=;JJgj%q
%:/GE(,b;)[VWh8U>9RC:rj5ZAG/NB\.7j&@raMj2X:Y<8#-h6U.l\p\[")f07[C5[df_;TN0UQFKFmXL1m2q+K7OT+<75V.&[,P6
%T=WTHAId`\oFKA^"5Z<8_S7:A!?oh4lj/ZIo0MMhGScGIkRP-`NL'#[ahfG%L&TLLlPZD4U+fl73.dPe[DiN53CtD)9#8PVj7e/&
%/M[S3\.GZ1=oql@$n"f-E\43[A&Y;rR:]P8:5r"H/L+(*"==KH**K"5YUO[_E4.[$KRgR%A@,cu)M!csXb]Za8IG1uHmH.\8?Jpp
%NjuOP<g%t9MNpGi8td"s69lAMUZkpaAr72qT)]Ki;oZ&gRF$ktUl%6!mM!kU!#M#>7gVb[SZoiuQQe0$#d7`N"Ncnm'rYDJR4/b*
%5Rl066\gQF:,99^.0'^t1:`eAcAiOjdI;-T>F`nBe<(M3kPu64P%&/[V7@>0!phgIM6U**_\S'P+dJ&5=3>$8odPQIkDm@?Xn9"(
%OJfd%'^M&rcLf5RA:R&L#i0G49H7T1YnS'1<9+URpIQ@ES^=K/>OgI9];6!B+_ALo'1s>Z:,Hm`@at],_`TM0;($WX`3SL4PE>"8
%'5\?`%F<B^Be2q(<sWg^E("qj_"Y:MZ,0sm;G9f\.U3s?kR@*M<6Dk0!ej=X]QgJG*joHaO'Mg2\O55b1ll/lEqND![>Qf?dVl@Q
%2i@)mpf0:@8JoX\*EPP2K7-3W\4#41'KI%neDA6n,t8LUAf@=3$8>55)(*8i)&b==&Kd37]+a9MkWU0"PP>$L/%K4dP='?K=3$#l
%#-W7DiCEQLC\(R?QQ!A6i**EXns3YhW7M>(.)6#:P.7SJY`]:bMVY,C-=g@#(="8#RCFY'VW<g_KT':lR=/Lo!G4TaPCiuFBJILF
%!(%_^[uOJ(1J&B:$Jf'@Zq[T#'Kl?U#*#!dVdf1T_sJ)Y>%"akTLHjo/+q8JYLfDPIYhXG7`i\QaFn5bJM$dmI0\`\i;_mj*;jQ1
%Qs.H5OW7[P@@81IRl<_^Lr45Lr.i4Q(MG,#@2%%_&IbKWJ!h(c:r!7NPnqu%4JrJiLuEHuP8'I3JTd2R7psE$KooPM7Iic.ecIjm
%KuBj<V'LgO"s(>ZF6P46^pO>n)4tM&2+bEg'm(q+Fm(G+e[WN2@2QU.).Y^4o1:):l(mj4:g<7nDRL6od1aj[=YFY33:!].)2[Ao
%H5pS3E:4LIRH_Qg'Vh$JC$*k7QL#oC_@gdN,S"7u,A1/Idg>IYbI8pObtA@8$ZI%"J0r516=FP>G&GZ7*WmXo"W3q%pk>:?1tHhB
%=Fm6X^6S=Y\7Er=,SZ\dFWgM$Q@Kt_,oLb78Lfi?0:1?XnPj0ZodtJ9%]OSSBUW&4??+.jaAhr&/BTVWe/_S*.qg`%^Olfi%J!F&
%LfA+_^o,Yl=K;OdAP5]-A1:!MckH7/i%;Lhp,.30O&\4NT!.3d$74Sq_emSGF]t?h.HphHPj;OPU$RUFF1G`"!gWslcT#8C(f"P9
%#K^o55Zo<^(#kNfZ.*NkI+4BK*VWU]@N:N*Q&h>pnkQER<'mN+E+d/,CbGrT7"@*tK83Z:USinngAuGPln=ImHPjZF8s@m5S/[GR
%9/AuHD(I?,;(sDe6-fTmWl8Yi$&YNbnh\6[*B$VXVsSfm'hDKlO5-7#W1C?q:LGiW('`gA9Q]7%Ggn,g+ZUD_P'["/-"9D2'.R\#
%\:SS$A(8T]LCh?sIV8$M1]h-6aN2p>KiYLf+m)&:\gHDM^ltIWR153#8p1cK_@[j%0YDCYH/[b),mA[J7ID]uhdD>mbTD))9VF&6
%7UusgjNr`jMfmXiT<;ul/:\;ek>$WYguS[dJ4+L;Pl`ea!/reX"m9PL02PBsW,j.0EBgE4DBs"PR8ht/aC,ZYMb^<a&`HUTY!F3a
%!:./c=Z1,NFHS)J%.M(0`nCRl</K&Oe]C-aO:aILL@!>p]U1tZ@B#f4D^tu(!X5C61QqJD6jOO"b`mgp8uAcjfYa^XnI2LJ6P<IJ
%IB,bC^e9cR@7?&bcA0!$291K2E$8nVR/SPIP_"*)4sgQV;PV"6MHSSs!dLFkRSHGlC*?=kZknNs6`KSE-L+70;Q3=GqkfRQ:jVE-
%Vk;MV,Y;KT2eZ3:<7.$#M@PB.Wk%FP8X1%2KL7[bm6DnjE,/IJEVc7iM6s?"Zlm.15jC>^]biAP2IcC+^opI_77^Rc`E4[O?UuHI
%UXSQOhj=F1JbZ>$:@Y(r0b0Xt8=$)QX.X-\_gto1>S+B_gd]^:pC^/u8BNh8OA_OH_W#(Q#Dl^IP1q,DW)B#c_i7t1bV0TbT,-=p
%0^+X?J<"4lg")`pC5kc?A&A+WW0':#OH#?SOHH'iD(KGWj')ONCuqg&T2CY`,6c)YAZ)egM31FhfeaYY#@`4#Xji$VK?KGLg(Lp$
%'<;DQ*F?Sh>"U3R7*(7KZHU7p+PE7d8*OSh6.#C-!t;hRZG*]q3PkJ+Hat_U/e*Ah'AZ.\;W1)sl6IMAdKuelP3e2KLFh]-8$Mb:
%ecAWO'fr;Wb=%-n>(CKM3])fGkXJGeV`kcM7hCj^iOGY,ROO"[<3I25,f?AeMh6oj(T+"B7Wf>/,35FW0^I:XaqR"^FM2[oJKRSp
%"-+(&#hYMaDILs=Xdau,9com8U7E%;*p-hg[.-9s.KZgWGtqC'DMWs-8YHlN=D!"?ZDr0jd9g?Ol`AVA)aY5`/XnNs]GRpT`Ak*'
%Qm^%(:,l4B,U:Y_9rg.Nn0ld93a+@6C?is`L\Qe';C/=)&dl0A6<is=#eq[inBRF7Bl6Qj*8LIn%"Mn\XtEp,-kUcG7`\t_q\Jb-
%HCkGS"R?o;QgFq6%0X-'QZnBS,>OMWjD,;mBFIoh,B7&Z4p=dl_,r$Y,61GI>c/t^2=`8>^(-Nc?:)Ser!#p<f\oAer,:!b%E$F]
%9>X>iGY*>)_IYtVUIaAd7JdDk,;O>"W_)F`/D$b]j;TQTqEhcV/BtQa:.ZlR7?cp1^g%!X"!K\\-qk[H=*Js8l"Cnnn^56=b.*Cs
%O<Xme(]ZRhkIecW7D18W<S1B8?quGi$t3A_YX_H>]DNk_pbcp;gcqF1ZW\4I?TKP)U1jGh;Mm#[-2X/J/(@+eP#DM8W8paPjbsdL
%@ou"#CO,U7:-eq41M9pr@K\EeW?+in+\%,sg9n#sCC@6eNI36*9=uY4K,NgT=+!U&B2DA[/qos^JNke)e`4A-r35&?DRt=5pOn-E
%&;6tY(#pH&8Gt7ea^[#18[a?)%fX.LHB(+^-ec'sOb`^$;r*R]g68gb<J!>c'H4:4%JfOU1Ipfa_N0J2RUB&iNs?o[.a:T3Ne^QB
%D*h$Ef+Q'@XcVR3H@p&f7?di[=-X]M&s("lR.48r9&@k1N7[]dGg-R3T(iq(:PFR2a2f3f;W1cIDJ"S/YC9(e_W10^2,(rB5cC+;
%<$NGHFBp?sPQhY,>3++m=n$*#VlhD`K+[3,gN2:m7QQ]8%QX#tq/W-?.27%&*^_U+QiSjTGu5m',KqgD.#%\][mC(EO6H&*Q?_F=
%m!"R0\ZmNs6WH49dtZY%;@FTroc;_q_5^P'n*"l_Aqg&@%Pq[D@RQ8j+YYMVmiA)8r<hjr*_?Q?.drpZ>th0lM"f1;%RdJE_L#p'
%%NCl9_L#ol5O<g-_L'lq!WT:/GL2?q]H4?7[8t^W.d:5SV4Or4hP&eYj?l;S],#1=nAIqD7s$*5DNsT"[j9JHNTokMV*KlIA\5hp
%."RM_OPQ%$9H3CC`E:*6)ckq/"-"N&^m40pgR<5:,Gr'_KnK^f(8<m#.`;(Dkft:Z$.jMI\hf.MgNLASQS7EWeM1OE6\>uI&V]J0
%dt)Ulb&fS(%%6NOCfAZ%a,_H@G@@^3VNmD61"Dfqa=!o/q?P,jJCRf4mX!!2lqYJ%JJYaV[Y</4b'%EJ'?n)]OR3NUTcbt0G6XA/
%ZbE?LK1%I;7W`kM\<'\;8p=nREhD+oh&XF#0i[B)$pY>.N'6'h+kJlVkD"A.#6%DOmjm99:mP5,;>KX1SqM3Y1#3iMT00+.$Jc_1
%U4aMmnD+uQBT\'gaEIlV.3[_M\iU6YJ]`.k+#4RXb]X5A-3C)G\iU"5.)nJAFE`Hc^:[Z#h45^'!M$NNm`s`_K*9OUh45]RU^93?
%SLG*iQ0o-F<r)31[QB^^'1]d@h%A1qm"@a74%&-rW0kGF7s$\QfG1hVeqeilA'B+O0InnU/(pI:b:kq8Q0o,*=2N^QkjEus-53(p
%GD)V^+ng#%KT8F5m?m=eOE_i9dY7,73+D9C'tQKEr).0R\i\rZLo&PU6/ojH0Vl=e,_9\t:NsjHZh5hbGGm-7^5]fC6%.nO=111W
%+d0l]`-+X=$;sSHgE!O6)([4QG9X;(L$h^SFJp_G?/J\V]9AT$OtK^l<bt';06DDd%gok<oQ238m73t0!AisS(jsPNa"^%:/)-V'
%Y_,>=b'&Q.8R0Xf[QEh1_)5<&44M#9ICQT==lNr-'H474+VS!`gP,#)=<%rM.Vs<pDQ)d>Cj1D`10n[B[Q@kO1;16&h$KHZ\&rka
%0M,^!e+t[^\;?!HYh^0tm"Dl8GA!FE?XBG<K>_k+f@/OnQGV#**R`aENCsNe$Jc^gbQsdtU:ULQKA_+n\iZ&4_*W@ts)^YQ#9X<2
%.kGdd5\lR>=J<?ZXqe>#&`"HAZS651\i]+=;TXm^mVmK7EN[aG).JE!Y,AlfKE_nQ$Jh8H]0jDnL]iKsKS<PR\iWG/e#MonnMu>U
%$JulL.ABb$q<i4I#uG<o]//:ZYH.6M)6[:f@q$TK6DbTG^,sUc$bZo)SKXYK@oiBmT`3(3<r)0&<6K;(n_G)DmZYbonD1qIEQj:k
%I!5cA\C7)DI!5j.,hKBY!CoE1.7:C&grPm\<OhI9&SO$ZJC&25P8]fCe"+ieV4Ql\$m8$[#X!=8l!gqK1j<2C0(pi?0F5>U3UU?)
%4EX#K4/C)oUnoj%U#qX$:PI^:`Zcq+8,RN9RBS<Vd+armHjfF5Np,jQB#8tm[tDV\DnOHORAOf#&\T4'Nd%KiDeBVJ&Fst;[t?re
%bX_;KQk78&$bIGG%MFC0E]_u3b)FfUgAu4).:/:p/sO_0+h([f`o#kqH0YMmgi[;INOeFa'pFfb1>0Lf'NX=%Ou1.+6l(P@'HE5T
%KN(\L2YF_(nk3#9%ghOjMU[pW(`%gQ#$b/._MgSs!oomc<6Yq[6%S>d@]c755G\0[5UQl$KGEd?m>/)](eRb>4%i<]XeMNZK-WsQ
%Z](:=#hq2o[Bg9("k+.>&^hIVA5$eEHaDa@<J^$=7jaHpL"HmDCN)s<)A:d:r0\ZSb%h65,*34Ym7aFrMNukT`R(LF[53M*Hd$8\
%:F:ouA[Z*?@Yb3"Y*4oX@IAs)NeMU1pn$/6&=Sjt:TuZqF_<[[FT*DROgW)\fZp^4i[-.[SRHarXmk$^#,)n+<5]>Og.Zl2n_2qf
%g?"UO%MoBoj=\)gL3*YQY41/]_XkS2Y;J_&3$ceOnCea,/&\%1Ng9iB]LlrE:u+5GDM?ZePUui,CM/I-OLh%7c@eZN-qCXf&C^AN
%C$d%b4gdGT*@(]f0VYt-BgG"I8o"Zg(>(%;SK[u0f8aVfpei.AL"=O'MIu2^XW?ae%C7Ib*@+)[b`p\=fX7+40s-uIUK]4@UDOVA
%0*OFL[=bZ9nbgOE7pUs<XNG8_]7L2U@p1r]\EY^>ZuuWj"@fXlM1H%kfD'6URVNff?`U8OO9ch$@C7o0KhZ`EeW):/,>VaUUX_a0
%W5<:^Lf%qg8F=c&8SKWLG(O&DOO]HB%Urid/u3YY5Jse-UiqtZHF)g,m7\f=0;Nd$n[&"oP1n;6i0nhCe./pk\;CZn*KIBWOE42h
%m0r7<dgDunUu$crd`tr-EV596L&e;%X>&?G,$7@m1YUgb:"uJ8d1.16KLKe"BLad7F()GNKLG$Xd>jC8V\MZ_R+8<=RWA7m%%?lX
%rY[KF6-Km^V6i$R^&4/Dc@CqBfg[2Y42V%e$pCF-Y+I8kX.4?\#,mVn:-4++`0/`ra;EdmP]>!rn'Yo)gkaAgQNP@".?o"q43>+9
%P]hcmS^FN8g>R@A:R_Ba*B(;1b28T9%Uu,&/@9TI#LOt:4B[')8q^Di6u*%4L6n1V%ME260=5m*AS/_h`+t.3-GF``[6qu:"[D.W
%j7UK/q?-b*=Ct/YNUkes/HY*pB^IJRSS+[Xdb7Pe&r<a<g6kcHg-]%*8A!Mr4ft9b%XV)8*Y&TNN_&QAe-TESUiqFCB/9"5e..6P
%o7JNl*Be&2)D.b.L7,^%Y)q?<A`&RWZ&m[JI"c9S6u$@4TuegdG5/$^gD*aNGk"<I4D)"=="F6?db4`@5b)hJfM75*Cfhjh1TeN&
%<an.b(uX[[M="\hpa3L*YoW1o89J$jmGRFHK!I^Z8%o;HjGeu_=Gt"+YX3/]=6)N8<f$/,#UBLQ+grU;7F4(VQFuai1cRtCFtgEW
%Jas/Q*S`Y#MlO^=XN`-Qpk[Q4Q2J:B=(48$ULHK[=!>#Y/=tCJ=&3W;mh>ZKL"?f'kN&\B`-14(8DmVj&_fT&*p^[ZB*bE4q45S@
%,?.B0@>3BpL9UETB=9UTKtGtngDPV7_/^JLgPHT&LipjV7g]L$lOgHDTlA+9?C:-D(8N%N0\[1g4DA\H7E9qJd?=I60\\l[FI^Ki
%-Y;mkrsbC`/B]7l!6T+J?jG24NLB0iP@1b0<(mi3*C%"egMudUO#pgZ,K31>;U91"@X"uE&[NM#a1Q1ccYQ)STqHOrJcq*q#l4*^
%b]ZAs,(<p.[Nj'6a]f.Z*Kc;Vq'!'bBc+o;>,^gjX$\f=_JP(sLdGT2jL/R3>A&:t4"PQkB,je'Odh$q;lK(OP$Ce"a.J6"88UjF
%*s!E_C-//O$"qkOg(*,.'R7c:L[9(jqCKj6//",XgQ:(uZQZoc0\ZoA8DEg]G'F4<DG4l%FS88>a$OU_Qh!/u[6sf'Cl/h.*NRS$
%rY/[#_JRaB?\n*j1rX/G1#!;ZPo-9MfoFA;8kE<h5-^9iHR-gY]P/,_4AI`:UfR*EH>5OPJ?jPlWU35h_kaG%D+B`jVH&\Um>0In
%=JQ+ALnM)UN)am[TuZHR$Fq0B:fq4+amFar.h1_0<rE)DGspN#L5nN*]S2C0m>/0h?5IoL),tE`V72(`FK(XjAWr70LrjLfh2W1=
%[/CBE*JoT.-9Is2,HHMDe1&'OM0IZO$I^D5O6i#A]cHRiSbh`@Y)TKsD?6TC>OUgo&*bC9\'#lakPW)es-roEc^2tc,mj\V5C@Tr
%q+^;):%$Mp-Rq>erfl:qpm7%+qW\gqXd+At^4,\MASpasYElpUoP]Yjq;]N?iq&3qC)5_,qXI'o55rVS5(A:$)PPJ]I/b/bp4)\+
%r]A;P?22C*MuW^YB(8"`me^oerocq*:Fs=M\>Xn0D8j*YB,#VS]XQ&RlY!!$o%u(i@elDh*`S3]$WdR'?e`Ep,WQ>_cqs,X!'U\F
%O9Pmn_ZAa+oXOJ3`V6!Cq%EYi-s2V,0Do_L,9%kVpm%INH2YkCTCe:mZ.bGb2napeTGua^ndTL\s-d5C99ICnriU#\YG:WFR'oo:
%Pa,]q?R`L'j+p=K5%9Z;`E8/ZDc#HnXE615&_7_hD/&fOXe8/])Z<`O(I1?PgKa^2OJJhfQV/,WM?5f=/@b!BL"c;Igc2(SL='J(
%)`+a2#4[M7Dl@^TL*4RG]c8Uk2s8X9Z+9sUWK@a7p;fSLc`$ENn?.1uQcd.PO&<H:$n03.iU[V(;EUA/3mf-mD^6<P9J=0J@p1=/
%>l,A'lc0jI7XDTR(\`!f-)pM3qDT1M5GlTT4sopeD7&#DH"lQsWn^0&!ajf@R4KFi3*L`K<;(F1o.#4DIK0&bbEIkGo**+[!"69I
%q6qFWVRc#GE)a)^W:m9Jc3=-F57TT-q@b'&b5Z9o+cVL,'qMPCs*W"nZi&q*+8psEObZdU=X/BS:Z@BmAMfKsCTN><j\Ag;,boGR
%_'6'Yp]#p6"3^/-Dl&7jg3/W5\(8"12mj*6`&)@97Ip*Np[Lc(Q5M6?s7q)dA[DYre!5YD)#M(]X*MTRkZ`h+7hNC@*2[$W\Z-Lh
%doEdSFD/T8kl9mV/0Cu(-ie)Q@G=5XTkuGp^foJ]hR>Y<_7u'2]N'a"NFciCq8_t'rNC]243pWLr6_G8cS3$srVjuQ?X5g%o$:gH
%r0Dj/D"5V30?u6B5<d12G^];GS"&MTRbQN*^HPeKk4Icgq=EpK>R0WTdso!Bl2M@qFn=@g-3*M!jq!+!`:/mr:<qb\1V[dP"Nls)
%jB)@.?aGYCjL%1F'>L,%^Nhi5,Pp2EGNS#Xm&-1/'7*Rugf8QqFQT2/qXMnfFlDW+s'D;R*+-CiI%ERmphJRH%XRc!g\pT-B/d"A
%oPO6mY'Tp>^]!Ztq5]i05FB'pGP6DNYOKo2VLA!Kl,9&Mf0?u0?XB<VmiDl4eX`I4)rF5Bm+qWMHuniNl-7='b:+rbq!bH_FF!Q8
%c.UA+2O-Jig1rnH\$PZtI2b>_1UVMXKY'>>j2pWK?`oaqo-Q-@.;/:qo=O9-[b'?+]3`4#F$A]A.h>BS2VYt!h"K!:C]*;OmSXsU
%Dn^Y\G;:U[QZl6IeZ7g)aj&B/KLtDMh="?eG.C=+Nm9CB[B#=8GP1+pFSXPSP?0E`:8d_t;MTG0?_1S0]XiE;Fu+!I]VD['j`U;&
%I/:hQ`T"6".^pe7TD9tGYKL^qb3dYXcHfS&(Y:&1U2p7`e_09/Eg`CNX7Kn?^FjR@Hn+_nDSF<=GIdN%2rE`Z]3OdK'DiVaF8doM
%jsG65?uC&7(>,59kOM@1GkoPRr4A:Cc`_eg6W`B"iUuYJO-b:.lFaiVrl+Gp1X1B?E$6&^^8l_]GlD=08ThgLo3Y;M]RG9PEd>=2
%GPc59:KVM\V]<7nGBi7Fl,+4;rd9K9IG4DIHgPtKil16Fbq6QdJG8olm+XhoEmm]A<F.7Qhjg<Ds7r:jXtH'-;^Q,T-TeY6Vt]ZE
%e`H+dPC)u+s2hG?2^(!:opb7`-`>/V:/B053-<3%n#BaX\.Kk.o^qGHlM=k;IC];C4YhP:S(:)TDV"'eWuK[p?bb:&?f$E%h`#D@
%mu^=#6)4GJKVA1u*F=NGZu56@a5om[e;NSCqH_elhcu^XhE7:i:\iJOqi("9i-V?dq&kZg7i)fJVk[bj,6O,?QMH?lPs2cdP[iT-
%^k>q.cYgU1i1XF.XU.MPceJ:Vl@[dY5&><"N;DK,qM+h;'TN"]%MeERp"@U5Mri3J3:&r%N;#;'pAS$=L[jpU?1DjI3B>jZDj_-V
%_n6-0a4#A`3?;HZYCB_b,S/>WRD.&ikBsqkYF)YD*m.bE.Ap_&I87f+=[(SdZh#`?0VLFPT&fLZ'Q#tG\iN'i?7u8%6Ib2'k:rC"
%#rV&#-dU,q9UXl1i3"F$q:YScPZZd.h(p-SWnE%h]Zl^X?i0E@qW"."Roe4F?='10rA;=rg;@^IXN's?NBIL-oo;YKp9cQ[np4*@
%dmoK14/m+6hm`?5Gg#(4mi>AA]W2Kj^fdn*VIA@@`ZqSQT9.hh=8-Lfp8#9LJr+uMebq^-\\0!,_)%c@LN;l(3'b<g4JSSsR$tV$
%gRS46Me`:`/09L&nDf15FZA)i6>,_]X`bB-Qk8&#qXW_<Ed@Z?npG^Dc"FE_P?mkMgBk^(qtG%--TaM/^,UK<lMT^bH*P#pq=<Us
%5or&2UASZ/p.$q8j5"e!5>Eq0bCb/D7.sog?_$3>-3S`-id1@Z"J=E,S5D?J(joCGmO;m'^V"E_mC.P61`-&'eYcA!+!f^`"L$,0
%m.q$ZH1^>M'692;Y:c[t+7ZUAc/jVX]XaJOW*\ko&'["*D!6?N-drdERln0dl'Th_k>T0=jJcF-j2Jq^[MNT>kL9"nc?Im.o<ZX%
%ab7>+e!'CP0<_7KB+H'><MqIQ/gnlh$)iR8glh7`m*tO`?$5Jor7@.i-L@FRK\i5(:HWITa^'%'K"Wt1Z1@IhfS@'dD>a=73dJE7
%Ipk\DSj,HO3W!AcfBT+m]igk1Sm>%D5_")]?gn>Ofq,Ql-H]Y"cqYZ]-H_Ru*/aXQJ2:%L9uF\`N(97l1'K%D:.<REm7AeM,A%BI
%I8%1";`\tJ8'cbLU.d6m%jVs&d\>Iq>a.`e&"Gh\>a-\.R<)6f>a4u&g-!M_'_;@dU.eH/ql\Kl<A)GYA'.6.d[<J-W"2$-A^XiM
%qc83J\L=A:.2QPfB+AM)5@g#@&9DS5c/h*q`\-HFYefoXAU)HUEHpCULGKP2oIG+\"cj#*nFM/,i<s,3r:%KCU-h&XVKi#NUn=1[
%Q9@;"ja3`Gb^/Y?H7dEgD8Hk.H>V5KZX,^!^%UXT/=Fbja(;D*0r_K[S$gt*Xjq#nm84a:ZW<R'g'=b1L(U+$FqEQf[iq.n"MZl@
%HVaaYGoPRh)l7g!9c/J-)pR,NZt;Y2#SXKUV:4<s8k9pa].7[`K:s(Wk3S_`o5DoMIf!OY237XCQHq1U0415TDWe#>AO=(6T%n]J
%$$0VGm&m5^&RhB#.=F2V0U1nb`RS#)JjTW-H2S(h.!KlI#"+fp:u4L)mP6G-,a=9o)^;!B7[GdPB=:s1OT2pqjT#62s#L,JBDEVb
%n#"*9G;kW\+MR33C%SnprSGF\G;o?.PDI3h-Ad4UG<Wr%rZ,:*54k5chNu;ZgbJ]/T22XC?<t7ip[GBDCsu=t;kNGT&NhYY4%LqW
%_,'^p[M51hADj/PGs`qN@9YrdI5(QSLM_%9;'5]Gc2S)uR%eYOhP&(T\N[WNH*P#MEe5:hkr@AWhtsbMIYZ'3SWW@HI.:&RP(sm1
%\EDWg9JXt"kr6Y4kP4Lp`d`144Lf<FH&hpMn_ZA+qc98UaY;lPmi;@uj1fMB4X'rDS'NEbP&nik:E;]ImOsu<^2qMBNqqPdfUf[]
%^7,C^5'hNf=,7/!LpImNhRm/Y]t2Fbc/k1\ZhB;_p$T<Nq>&REGB`TTm&-1/q10okJ/+X%_pojqb\EN<b26I=aQCq#<B5MUcZS-Z
%T<u0A*mpZ<\OWu]D"`tXJVWTSd)F9OZIqT'HcR7Cq+WR:AiJD_Y3k"=-5QPm5@#q/Q_.h>EVWa$LsLO]qWsQTX7PGtB@k>iT3Y`p
%>],O:ci17V*5h.HGNR$ISmB">fg\%_>)).\?*1t'Tf^Hhr3qO^Zb`t0G11hY`[gpBkfB=WVL0O'NG#8m%s-E"\XpQ>T&qj.qTo1h
%Pq@e`mZmI;m**,6YRen.hSXiMrfc.YU>)iUO260"Bmn:pURcP&m":k[IdEP%SK0Aij(3DHb`8%CnM314B#i*l4Ef[q&]]fU@H`3/
%*A@;;".^GcpMde3:+JN"4J0<,+FU/SVh=[c4]7r0a&>TWY:KJ9E7h"!3c)$W.3Jlm%Q6$FjBr1]fT/5??kYWef^oTarBD=[+dL*.
%D"X99:<p;fYi`iCNt7P)59+;]VYrIoB-a?;4rj$:h:h`.Er(?-0PBF)_">,JR-l]41]#OY^9jqPqSD)(IJ<<nq:2Z)8^1bGb+F2F
%2-8o.NCe*Yjm3Y:,+hY=.cj%0>$=l$YjEDIp#2P?^-20rHX4=0nToJ5h/L&T5#EUJg7J>5IJaZF!,j[*O7P-2D_pueag1(Kg7u9R
%4Ybn+GH]@B2TH;%%ca#bSbVmEq4rC!I;W\gEDnpiE]G_<X$4%omS$hm;[gM`g4LK9+(GLZIUmnd3;YE?kY?3gIZ3t4pbAZ<@J43t
%m7m?%pAF9tR/Im!2D_Z]A+jCPL`bZp\Y7iL9ZeK)m.[j8#>T^#%55Zmam%'lq,^X1;f^(CGB\5/2SZ`b6^M^D^<Z]VAQ$)/nDRYq
%lLO5PS$SU5D;N1X/K2t6mHf3uhaUE1WcQG4"N6uU:L5^SEkVCC2p9Cn.6"`$kBGIcdg;VIK7S<>d[A.Yp)c*;d$/tRiqhqLMRC=A
%G1VoaCaM)B;pM\Lh=Y4]9A3h[cX9=#=OMk?4[QBK.9=fSQ*df36`d*>3IgH!)t^9Q5C\$$rSsC=]RgXB.6+)p9^sRuY^C<92;pf*
%[J)3BRN84<D"Bk2I_&VPR*rYpFlm)[]r#m`:A3D&:dT)Vr3-Wci</X%h:uS-*L\@)63>?sLtBB.M'K`[]Uj@aYK*!;1Z.<V]A2gu
%c$Z"MDfbMeDSFB?\%2/aI#,8B$!-+s^WepYbc1ub$M/[`^[?.VVJNulc.BN%3]CF/k3LfMSbqK)GmkM#n<bhMP<*b=(V4;gCqe?b
%a-H'WY-+ArFF>q+=F]]3\]70C0]?Ut"#B5WjC2R!rIN>2*B^LCN/p!Z8fStV`""m'Ga-gt!+bH9)1A(c3?_N(f,r=7:4N7Z+el#=
%-`:T9^]!ID:Z:W/hp/-EWV*f-Xh0EPdKd+>-MHV![aAHdn.'IT4Z`&ogB$3u]p!O&L7,/r*GW"6"F>Il\9-K#kKB&hoA/ZQ,XYu3
%oWAt`KO-+<k0pA(ZBS.qqlKd+=2"M(jWl+'F/:sJEgpqdG&[*Z]B\:,9Tn"GY$[]h/uL>En`03Ep31Xh1+hn0S4h=fFs"94gUIQ:
%n)SuE0&B8/UX^`926h-&0%BGSs)"LBHgpC)\jRjX"&,;1ANkN^`maS5ZrlI_hW9Mh#s?[(n1^uT$1#89VuHLaYHBLEP:W@!TBrgk
%=$H=!QJMC5B%(WUm63eamTu^3mjcY(n!**R'HMj(1ttD/rZU0u4ud5Nkg?s1+'X?f]hY-o%%WsFD`]fi%_eREJW^Eh!tXeh%Hutl
%c]%^.G1VKuo<9f*@FPOshgLldH%4\Ei]Xh9]6S\,S-85/:ab=GL[P/6NfPauq>BUAS!11\I[U"NguF#uh[daV8pNT?pL>f"LZ9O_
%:_)E6S:7-TBB.sCNJH^`T#h32e`_9;]&Rblj.1Y<6*?$a7D\p.&W(,&[mPcnHHZZ$GCoQ/Yg%@L^dMe^k^PMhWClTM2u[g>DCZ5=
%_ID<tU[-nb2`CbKiuei6^ZJn<^*TQ=J@,O'H+pq.ZM%Ks4>)9TYsNiNqhhmhm\,9RaETJV_V9F!N$jYe-0*g,R<I#LYMW8Aln3M^
%!J='.]%jm+=`4NV,IrU.\b@QST`e'9h]='^n6m[Vgi%*(I]8_am-"[g:Cegf68d_qm@o4lW#qMGrr0n-qCcL547n$hgC2iUKL!Q%
%acGW.J"Q"U*'M!9g#bde]\@=jg>jo*/l05F82YFP(<p;pAr!_:rd'sTbfn5rOB1'):6S%i`;u"7hl]a-?b_uFUp,VirmA8?mTjM1
%pKipX)4h(A8'<1FerlV1+.Hkt.;tiNT?fHd[p?1YMWMHAZ$]&KE).+B5CEHKVYT2sQd70"&nM*<+25=tr$Jm>Lmf\@5@4>2FufJe
%O$EL+<G@6gpt]j)5@0oDDokq,p$:Vjo#8iq5Ah7/J,E0Mq#8m+5C-9-Y??74s!l\dhuAGGrSRONs3@oW(T(>_\bOMNC)5.eYJ:,2
%j,]d"A)'r5,e)u2njh9<AoU,I1Ij@B0T]q@%nBqIDVHE!gMS:D9fPainrt`uEpJaS2ZILDXECL#>JHj=fg=0,UYt_#L(?5F?#Om/
%*.:1-++/%bm'(9kj7)^$O,e_.!6TeO?Xb=0o(Pf$q=DR$f-enjZ>I(Tq;?bN*&W^iXBdYQ0!r'naLKBrDLA@g+oct\-eIHuC;&Zb
%T9R+S(F546XmRTu?<S?3WH`tI3'QKsrX5S_5G)c82n9Jn^`Q8<BO'I?@cU#^+.B@O+1g)Mr#seTK3<SO17iXSU5[\m)=c;QJQTog
%T=$TWC]<LZYRL<U1>lFYn7[6^(po0o9q0/7DZC0@ak[dum/;72]l<lU"*sp[IC"QtD&@u^_I#"A?`]8c)N5:I$b>5I>aB_<f;7fQ
%U6RA?KC1SQQ^o:ZRcHAdOrFmP*`;6T+$JDdB"cl(\2mK!olL""LYZ,UK;Vqnjr#!$^\n&jO8^cDk54<`IhW]kr,M9*Ir(EJ@st%c
%$Qic;6Bh.WrhfD1R&hWF<OV-?G:CUl#+l\rK_U'-+(2r_@uM95RlJgu7;gfh$]%1!V7\o1<F"bb>F/M3BsToo[V=Ol@FlJFQT,HA
%;:d*sC@TA&Jc"*_XkBPVZL]COdW1gW6Po62mSIYU0&"#u:A`l3_W]t/*G;itcdVFX[(2gFLd#Y8;/D[H_s='S]07%2%l`agkl7#M
%N+k<T2>8AWO@sj%b`Q\qcE(_FP8/%/0u(_>9l.=@Ni]^87.OT+D,Vc@2Qk"8"LRP4hrj*/ng=X6(/K<aG"ssiqJYsr21[8)AKB]u
%G&_p+p?t/9r8*g$)B3ObN;Tl,(Z&A=ptmfRbu$P`T@Z$@k*+RR^AJfu-8uq>Gth?77e_]nH$,sLi\$;+pGr_fn^)RdPF1MMrUWN#
%Z]g*RWB@j_,P8T!*8)se5j$(<V;BE(aYp1\6%u4JL$*NtN?@k3TT3mQ<eO_Mq-@_koQ#SDiUgPg/9VnSD!Ro$U]!&UhIUQ*k=7YW
%*J<"<4$4s.Qi"l\"i:i1@ad<.hQjlWL_%e.`!,RiU<AJ;*9@s,>@6=am!!_'TAV6+]$Kigb:oa)i_6dkA.:F;O(V-S4qOgA7m@f7
%?@F6^_>!c+SVnG:CDn$=#2:qX5Gd:KJ\U;nO/K_$8R3CQQ4r=e;qUUAs2,BC>&lF5Gl?TV7La<=[#7l<Ic"Bo?bCi5nnP_Fi;MY2
%GRVU`%pMg?]40?/3_S&t$nU7rA[QW*qW+uHnQ'j.0=OY^SB5e_AG,<B7lNDaq4o)<A]<ega9sha*lc=Mj<973T+H9).Ej;'gV0u.
%g+JY=f>4o_YRn,IOQVhVRl-7Rn!hU5IF5SR[S$_)Y:!r5Bo,?LcPC^9$T0mcb+?e3T5T<$6#CGU@Q:`lbPEqM@ptp`>BX<3XtsA8
%j\NarCQ<APju&_Kr9qe*b8]0tQW#UdL\HM(]R1d@-[B`\PY&r/Ul8?Y7kgFCk?o]mLbHt!:n''#%6p]+BQF!@bKA>rDK+jTj]dcn
%^9pPsa@2]rH/#opg9hUUNfB0nkjCQ;AC[$s!TP@=A(UA8Ij=Ms/+WV9@K=Q=F1WEmXI&\KCmF0P20eTdG<WXV0Zj@ZE#m-a)g(er
%Z=t*M%[L`U0!`c<e>c_u1Y,*Gc>RqQkXT#]VDNG.[4.&QCN/ZFRGc=^oogc-0X=$*"5h&en`QgJD_Ac;]'8g(Wa`ZjoQ\/q%9M7\
%nm/PGHV?E%q1j>Rc:;U:3cDV+;(%jaA[cEs?E@BsneN4JRjp@7[/SJoE`a-Ig=[t%MK'bGs%^*94lE!Ib6]us,`OFYUJ((6_WZa7
%0t;A'iOB@M\Qe.4FtU7H`%4)8^:HA'm1?ulqrdPJS)s=$jlqd"`;\*)jn&(dqr+[2qXZ"bTKb)Ze)j>/p_NmB,1kkQh_%^MV#Uf$
%b\#Wh-T=!-lc\_.o.pD[c6N;>la,dSY;Tm;j/5!KI.?Nl^D.RG++=L]c[<A&l0S)f2.p[nA2EF:D2o_;f/I?geMUTeU+60!.B0Jg
%:#<iBhn2-7SK3Wp@rZZCcAojSa0@$oZ5(Dh]?.>1DK.59#N]'H_[SD@/DBXNGSnJ1a<1Gr*K*K0I+J9,a'tFu=R66P`V[DoK4AoE
%Hc<7'WajGj,KHPW]oGOr`N`Mb+!\h#f`T9h\W:6?WaF/f(VaGPdC&<>^!KdZ?8q@(WdBe5VY-R=>Ht/F7Ghs&.o(Q\n\j%:<tX^m
%]o$_$.R&YiZ!I)Rg2;'ac>LUVFXqKjXI_XsWf5b_H(h,76I<?XU5K+4@GC<_)7^^,cR/iF2TjLaXco)\;R]h9BuNf1mIcKpYSjuo
%Cj!X4OdeJeq>TLPG'\GTPG^lOfAQjc0Gu5W5HjK-lB<r,&&n$2q&kapE8Cnl)LctT#?fpZ)"N!ujL*^a3RadOig^dN;eitq8b=$-
%Yk_tX$UT#r2fd?_a>AlR5@g^>e9%]R\/dXk!OFZ4[XkW7X^QK1jA@YG$Z[f\e%q:b&l(Woa/(_kKebX@-HI\"+7a7:)U9_#%:q)[
%IdFBBJAo2Oc[X+#ZqAS.l<VG)dc?NdSIo:d'&.8r<uBT0PP@c#Y'K*'dt_uTW'dk]UI194:3;=5aX0eiN7pAKM+S0/fP_]=;;QSh
%SG`1p&7_+<)assH_'Y;lqGW:k;ePdV%]WjeIdE6AZa[rSf$AOHh*>,lPm/?HK-ZB0=>!c-S*_;Ag",tNj7CXG7@q7>pG$Q+Odi,s
%2LaV`2HocYgTjkbG[N]M5C#F3nd=1CE:?B"1U22KVmUn7Tk2E\RLRc/.f4Y^kHTBd_T9JoE@5BnOI&VDG$6GP'sI9)nU*lFOn[17
%ZT;^s6$_4pWf@Wun?!Pa6T%k&`>3__n+*o0Y&C5)#Mo/X96;2\(U-#AN'`mb_4>7l]]a?5SX)6/2WOF<)oZ@n0:XPtS?0b(J0T6;
%%%>uGhSR@_O@7@'d"qD<H`qKsAj4t2:,OFXK6Z0[:7W0NXNE'^U&9m>oi+su??Tqp'oVWtTtEdmg+H@lQc5Z>?/BPS5T,uOeOrbF
%IInY#GT5J-1?-"!RWTof\8,)\#@`b,'[[NGDMo^_]"(gFXhighSd_mhXqm)^_mp"<c,b8oMgE=O<qTTr?.q<+<i+8jq7"B.V57*J
%Q%qL,,BJuI=&GTe/JFAPHY)?/VWt>>9CGgLGpH,t<PGkUT]CGu/"=T;8oRs8[r7GPgXIi6m^.I_)bX_9g>$aoie%\9gaqXP`#P>8
%UD%]jikpUJ`(eX9Zme%u[R;K8Y/4U8-c225KR#N(M0=*jM(P=ugS,?uM%[`ud0[-.3&16:a-0j\_2/eoLtt.M9ebDrpV\E6QInU\
%'UtcQ@)oO/jrUc6dnL9H%*.nSK+kLX$/4.."=6THD',8*11QQaD%BAu9U(h#6l6%Smetl"WNVTF7-oO>IL]+888obi#YqaJE+0;P
%4F#.-/eFm`>akd0c/PY\e1-2>1GjN\>TEW.pKBIblm@!YP!S/G$mkaXHF"<G)JdscE&;^RYI7fQB/L!A+Qib'<8>[Rd!LEZ*8uF+
%id[+O_0LmeN&>Mg9^%KtU$2qq@_R8uECC-lY,`'&?Cob:f6DG\-e#'\YRpsQg;CtjB6Whr4tWCmXd1*m<?'ZW;9`GtjshA,>oQeu
%\A7u`K7HP&.NEol:_)r'LrD5_;(.)0FKR2#s2qQ/jff5-Ls@^L1G;dAZk4hZ=c%:.?<gh\+2mR#$E3@IOhRF;JSehU/i8RD_>UjZ
%73CH<lgVY4S$7h$r:@#06DuO54I"63IFuGqh:/7oBe:E&B\Ah,lhcq]pOCl]'"d$Mg;s4-#%0>mXbHu5C]ioR59Kh4Qf0G!;e#@C
%-2QUQJLZ.M!d)hs[bRGmhhN1Qg:qtANH7pI3e\oMb[K6Gk!b[C;1^Q4a-Ejd5aNA48#XZJc/qNE?@=`Mi<8#fm.&oVlKjorFhGgQ
%)(XMJ.fqD:UmJ^)S&WSF[d)sSH%*4=H+*V%McgVEF)G9$E79eq[JfqbX$m!jq2=5ipI9VkZ>OY^-"jOcG!>P[7iC_uU`f!K+=7TJ
%[qaT\<H8mWKR'.pNQ_mn=V#_rBrjU"1+rVrdtardEQZ>%P$M)0=eUTL\7hm7:9[`U6?R>CCiDgZ<e\G0)p7b4-p\,P?Xjt>c%G2L
%IbWS\od[M5@9G-.]2l1icq3ThA>ZAio9D:Bp=:aU[%6'Oo:UCY+cp1jf%6ACHQQ6@AUQ?//t8kIb%G*G\GF*M[k;.4el9>iepa_d
%WRfE99UUM^#c;uj!oE]r'MV/=F#6=gnWT[rED&,7D2P4/:!o38-(5H*78qX3BM,p-1aS-rTaK[o1rU!#.=P2P`P'<*9&(C\.0Dbk
%:3;u\[;ehr`N;X/2N2k.nQq9RkdpBOXfb)kig+7Ma_hqa;c_LUX=`3?9o3)K.:mE+_\;<##[>#_-(`P&Lo7>6P8fJ0C-4r_?*!L[
%G#LLLDN:XaK@_:slhbbMMfniJ7o[p&EfX10-\HH#3#4DlU^C/F4\F_N0VG.-4q=Ne\2g3+&$H+8`#CQDW+7,j90d&U4Cp54EO]R<
%<dUY4#1[t@Q4:D[T$mEQ:Dm,Y`!u7$o[)Q]<l5hn$R!W-=JP8Y.7'^Io_WM8VPFhuZ%H`4rSMo`orX1L0\o?Q.K8->H>JM:PT]ZR
%RNabK/!V1$D5m.u24?;!oE^pK]4$V12f/'O`_E&\\0[TlenE4!dN`XeVSkbWV,hnU#22&('$XnG353"&NsauhCX#:S<9pA%Rj0+\
%l;=<*_;:%lF4Y3Z90K]d@TH,bg;AlHUb0uYZmhFV2ap[)Q=rm1AWEK6BgX_RFi.n8T[Y49E(]l]2k>V#,jB"hS0F)mQ#On.BM,`W
%QspgMVr<2:.IuSVFf/H<)SSZug-I9deYi[]?e]$=Gn;fuU?BX&^@ca1>;_^UC+Nr0E:A=]PZqlci(,H#?kbaAUstF!(k\X<EV(O5
%+Wn.67s]OBHt*pT!_c_29/R+0-;@fq`i7"b*P<fTG-3f1]52H&9<e+p^dY@W%bJ>I42/Bk\f6W5aeX0u7,:R)N"rX4LjSs?:c;O4
%I_G](1rN+tH&/_GLI9KSQ^ZZ`GeLfNgY:IF`*7-r&)b@nLN_ar2XROBfiS`nqf!@I464;&eG$WLMMi*Og[sc;^@I.nb9sF$?TjHc
%UH*ZDDtQB4_iX=L&cZW2&7=MAX.-.MZ[:!aShmu;k=s9jh2a:sHNpjK!Ng!"lP\&q#.1Q$a;NA$d:@IIJC\d^pUa5hSt+IcBuET%
%/*ldEW7cBn\EEMo@plpO:VX4VXTd/SF.sB6>K^KLir5&<ih:49iR?dX93,M4lb8N/X>J?G[/^r7d)0I\'/2rW14NL^[]E6^C-*3,
%QnW>:mm8+t?'jaA+3[R\A<`6mAb1q8pn4d,HV:R":bAcIB<-'>jT8jh?WWda_f)TmV_s_n8t"-X?A=BXNuD^n^](g<:qo`4OC.Cu
%ZPC$%mG/Jg+rd7GbfCLjFfS0tWNO]'C8*k'e%(M),cdB:Xm6>'EunuiXD&T0p1C!E%L!nkSV6EnE?BFM&KW;0ekc:7;gBl3O,JlF
%fCZPd_+KW\Z0bWT#['=6o-]<Y7e6@j)9g%.l$<>[:6O[;hKT9^Tq*NAjq_3'TPdXHm7I`tVCM4DTC&6^2dBXhYk;0;U9Lq=<lTDa
%n:4`'>d=C"'RfFR7IGOV(9Npdkb#MoI2WKe`e3RhQ?kR[<e@DM>(sY(4#pfo#?9AjkteV(2D*65\<hAfh!.-aqLg=?IW'(Hd';+E
%3#rIT^cSXPjC6)t4PD,L0/I?>X:/#qEceeSe!nBmB=,&M\>C:f[:KjK'dIW:1_MjM`?qPn@7>u&^$j+F'KNM0Zh_%kqeW\A27p=U
%S'P,&fZ\6oPSpDE^Cjt<%T`CMkX%0>K3N.3c]XVW">Ui)oh\uL@FB3Sqs.k\[GpDV)l2,^G3uW@:Bd\.Yb<XV=M"#F<T2)V%cmTX
%k=>)k,E4&XbL)]baf\u5T'X1<K,$1qiid-5+<6q8)b+m86n4[Vh4e@^[4)"/&<b0fB7"1JRmd@@)FQ;HlUsdKbN<-?krG,%-m@3(
%e=GtIhqjr,"J&[KO6Q&%h\UoSk'g4YDdgKTF^[#(;;thZZ.?5"do#N'3oO=,.T1uadrb]S3:=.Rpp;Ge<IhM\;=pD!:4l$A`REP:
%RIJ`8_S*BV6Y^9=3V?CS*,cVS3R4eN];he*?/k^t4"%(H/Bf3coa\1>Ft;nGVAb?p\X+U'Hl]3oW[]IT<eX>-)-Y7T0kgt%P,o`_
%Ji]d:f+!H1D7Y/4C1!R7b4BU?)h$X0jQW_SXS"G,Y_2Shp5PM%>usf;b,J;JU0;:uk;1<bICN:d'.[<cdMA:?Lc#Gs-C@&<;&0kn
%Z:s`:m8o\n3Hb4!3C\.e>`A//>f,&QD1q^B,&EFi(:"j$]lDR?=\ZF1h\7<8=?C516tHg0KtReWf<=)9:/R'Cpr-7>D/GeYHl!:Q
%7^0Vt:L\I?!V/tMH:7[!r3IfBQc_n'!0b+C_i\'GT3gB3rASO-#'@R)M>:)aTF+IfB9F"q[XU8@4k<7DC>\AC3;SA\]`6pDm%A!,
%K5b"KB97S9HXinPGJ#khEn#BFEo9G8aEnm"Etpkj"4oH+L[,]"&<t[$__sh_MRohPdgQ,qo]bI3Du/P&(gD\sX3KcO*H7rd%h:e*
%=$bkN@d.6bO%1g,7TTHlCW"hp5+>&g..>mkph&elhDil8UX'-V-dc*u4raA4@F.m/)o-*tDELMniFkaenp^L66/6W61PMZ=egJ(Y
%o#bLprXDoP0Hm?sXeB]Yi+s7U;+t^tikYk$bB/4(gO>ABV316IdK^-Gm-[N7mS4jKT;>6M/:HG>Q81V+oRR5qA=CsPmZg!*DX*Ut
%V[jJ/FE8JOBPVG.*nX`<F>2AM%tY2@DZ6bK%q)jS0&2']_ej\fHNJqkP6^72JN8!`:*+Z49m>LUJc3b4&.T*3B/?Nga:3.pcpL:m
%gKTQ'9'UpEehZ(YV8j6VWi6*'V@NO,>,GL3RJOF:,F1d3%[a+9N3W:TI4'Fs^"k*?m7aLVENNI;eMM8OTpFu1M#V=]K!I8lFF_u\
%erlI%d'moI__IW.:$Y;l20ZKV4J?>gY^&c#NZk"uj%6M:Xd,:\Fejf=95J0F?JB``P7:3d:@VMY@Qk4hdW`luldM2AH-0B`EX;Z@
%\NJt*rC^q$1mb,QA,fFgQ`&'h.<BdWlsZ>G9XBLgp+XbQ.?CYpjUSpC;s"\G[r$HlA)q#Qn()*'7^<Bl(H0dB'F%^Kq!>d()\Dq"
%00VoTi"2,D2KhgLVa,Eu^SIB1`j26VgM2`l#!c1u:_r6a"%[jb*Qf2/:)7/,4]4=9A=COj(a%koJu4Q+f$mBi<q7-U!'lU;Q3=W1
%CBcT)OIm8u@mVT+VP>[NP[egsGZ*DF/;mf/KF8Rn"5<7u&DrJtmR$)`XENcG]j,ctjd%.4HK"C8?D5g=ohrgCGKRSA$ZJr!8k;>'
%no+U'Ja_(l2mMK)#q`L8aNGW;'_bU+5Euq]c:1P"%6t*3.*5K?BML3`.@s'?\tf9@>>\*!e1p0N.b+)T$b#;;r,=jV>S<>+=@lsC
%j>Gg?C+?!57'48OAE3UI/sQW%f;L-,3aklsIX1-f"Z31DW>UNKH;+qYMBeF([berBXXRt@Xm(SWRN14nXrBM4'k<Hoa6#pm1?dqX
%6(O+UEn>Y+[K'%KV"n\5cnd0i)$?d^a6V2n3m=sbE>WsjOHBWmee]X[XL4ea/Q0bbQ?M\iP$I$iUFoU+C!!_V/^&-g%sOu>d>(XU
%KiU*d:+aJ5`nGm=>N*fCP4P7$mE5/ae7"Tt)tcl5\DZVtZfUOVCkY9l<Zd=oX2)ViOpW/OS5_34!ifU3n@5Pg\Y!JLdH[G3VCe4T
%WGT\6[0UQE9e2QtiPY.*\=3FJk;&3M>GFu?<$TqYOu,$S+t:#uVN_V:<^mEBWO`\Q,6P,Qad6SY?e=O?dCM%<gE%s(a*+_-1#-A;
%hab"5<%DKpb0ef_e>r%[+4B;%`i6ohW)_RBCd)7k(opp!;]7j6]4#T='NXn\hq*qHh\U/1iIr<p:]dLB7ba.@g54!=1fZQ0ZS4pM
%(CH6pXWUh(pte#.:?]>^3`Aq;>uOO407;U@9[aXnG@`K7i8/F!`C^jbfVWs]kFk\Bmu&C4$(Y('.HYZ1BiWZ=9a+J+EXlV)Z6%@P
%QD62nVcYH7Z^e(P=uYo1Z>]Dd`kn!f5;mb!9A(?&6;P(LYkkcaoR9)B2d9%>!%s4gZ=1/.!9'GCb2ApWoR*t&M^t'Zja9tbC%83g
%o;R3V)ECs^4#'4rk4==%P1gFMm&lpU[[p:Z83Kj)3h02UBKF[J[[p8;6Se<J9Kf$%,DFf-9g,*=\'S(poUuV-rc1#jlGLsYj`lCU
%mQ3RPb4u`K)HtIbTW-pIW=cNZU3&f!9MlbliH/<2dSuKrKX8<,=_h.N::Sr@_MW@tiD=@=Gb0dhqj<Eg\Eucs,;WQM-^8?!@Kr(g
%.2tQl:"5R`k7]sW?*tUDK5j<2eQ^O<mUD`aPVoX\q)hBR(4E(N=_(aG8VR!>(=\MhpP[HdJ9o[*Rcq]P5Rk"J2;T@Z`CH\"KXDMg
%eKVWA_m*I2%J6Qcml7`IJBF5EY4MTq8Y*(lTk_P;Xui`(W.e1t`KH!`%ObRK]6Z_bomj=V<pOKN#?3mP][jctXbP;ua1<3pR'sR\
%Ae'mV,*OreYP'40IAZM$.6M2LO.!jpVXV)IomN_,Qmk.0$BLUlA#AbJMjWR!iA"8UI!?>H\#-k5:hk0@J(HNXnn2J..aj3h6U#>L
%%[V=h2D3#/Z8N!t&@^c=X.sp\'Ja3c!5:uf("](9Y_Ur:Q3G%*^#Rl%PMCB^Yds3c`/>R/O'.`4)p;<u:MdO.5&=lWM4YY)eiZb.
%Sf=%7)b/)t.IhIOr1"E"\5VAlI]#@UIc,E*A)W0,pjq>e!)hh:E5QL64?[(Er5eF#^+gGj1agYiPkZi?$*,NFh'U@"am\&I'#3PA
%OqM\jpM%N^iPE3'DjM+*\"pqQS54Q*]\.q%pjr&$mZdM+I(CgQhS,>8pmPK;WtWQr)gkH;D8)p:&?j36Du872hp^`>Y5+[E@JZSh
%/g%f5c\EUPT&t_$3?eAf'&rB!f8p6OfG">6XbHah"D)lLdJ&:pes]W_;?.\H"ea-RQ+'I)Lh4u;n=TD<P:c>[N3RL9/\`YJmV4h/
%YY7XA*m:mM/m4L2nZ2%RDYoCl9iSaBn(]C2gD,"*4?m!*R*G",HsC01gH:OVOA2h!=-h1=5#n^oib*n?CY/NU*4h<P48=Q'=aB?(
%L;rP:HZZss0kZ'>FeI"#T9mSFTerL15O7FN8I"-u/JMmJ<V]8a/+5uT_%&$gMuIq%5qMRmHSjiQDXG&>ZWTJ,J,K;cMJ_,JY-QJZ
%,CllOl<JC6`h14^;V3NB28A,C+fl0g/1G2@NJ:g$_BmR2]uS+:nko:ZpIf_Y&Ee>cI6Su[kh@oZ&Gm[/Zn.@>R*nt0L@88P/u)],
%=KNlZI<Dqg)W\KB?"YHdCOU-,+F/B`Y<j:cfZ/W`a)b]a^:l$T[f<G7-hk2b*#;\@%jo"nf*@Q3mQC=k=]iLXQB)U<f6#uY0FGI5
%D&\*s;)Y9Kk>/uq,[56(G=n.fR_bE>\R\>f;qCV\dVO1g!/K=YSH!:T+&?Pf=iX7GT(;o3j9Xkkk\t-uS0O9pa;L3'$+2tCWn]AS
%)jXX6Xq-F*PJd#>#K:FuXQkX_`,Cdm<W83fQJ[m5I'jt/U,]nZScZT^/I4L5\(V>R[P(M1`*Y_+cE6ZG>EMF?6;Ee)G&oaYI/I<p
%@l*,RHF@D\4<%kPkL#.Wn)NmX8$*=/%%<)WXnrRW"gMg/Z$!;%HrXR)G&QS1C&I2>^)kXMAY]qR%h$-A.mON&FnnZ,rN">1OSt,6
%NDsbR\CQliaZ""-,cAktI+3VK[Tu$LRuuEBMKppoMK6&s7;,08M`(=?q9bZ:0QEjHX(C8A<`Cnkj2uOMgajPThnQb%LNm"gZr_^2
%eR!(/Y(teL=FI=j&(BTTh_SFSUNPHI9!e4S>Sf,2QC"&RQ$'@CWF#4TR+Za8gCWqoIFYL&0Om&`fD"%>pA;tr29In/^Et&Ho7jAB
%\JPtHg,]T,T1ZZ%lg8M7Y6IhcT`88-EfNurebP\mjl6<1rA8$BNLHC?rc>liSHJkP3oE54i6<*`1Bu]pJN%)seWBfiJbNher\Fc8
%*:huI#2Y/OGAQ`6"g[E:EO^n-b0A:+*.2<O2SGFrkSZ8ggCZQ7O`,+8HgV0B!*1O%BB(k\6L:\Y+i`Ln(h;C=)NAP)+nKO5`<$d@
%ch_IU`=7kgTQ;NR_M%'3Df<p)1tSiT:oPtkOfoOT,&gs?(n>An`\3:S9_#p.;2T8n]6R\1NUJ][ku6le6MN.%;S:T(ES,H:(C1\L
%pb9W/FJ2V)C/chsHfHRZVcCACdmj/qB1:-8hZ_CUhK<ir";Hg)cXL5O8psrtX5?t>fc'1><E0u:e=;]AM"4^k[QBH"aU9KWSI@,K
%"4DLno@P=Z%GVCTib]U(K41-3F3DHR%g2CnA.;7Lq056L(4*PJ@=:/4Ej>`,0kK[KdR2&I(u1Rc07e+ASF\H@FAgR81>lNA?P*bq
%CadUs)AV6Y<VS&nAL[XqVq2A/3ucAbJhAJ\?p65[=4b!d>hn#\O,=&FB9+#b\;Vj,9eRK9=tf?k<jAY3pl`P1QLA)s["hgYR)Q/T
%(O96=k`X.65a09ZS9Ibun$SuqcAS<?o<[+LMd<HPS(@#th<f7[\2LI[3=cD]k5$U-)'(cO6[Tk7$l.l?,WC.jS.u\0'fe":U5Q)>
%XQ2dNInq.Bn5ZTL@g92S]W?aEYM@Z!1.W^rbpDnM&TOo$c/o2_E$0gJVRM\]S9lPdj1;$4m2reTV[u_1.cYpBY)o^"phFM+[,Z64
%(aP83SLk<.a@H$,?G5Jhpo*+^7C`2*<DL;?205S.a:9o'>AP:dVfb,V@_*c0,h4A`W#JT(%Ydh\8$1k?$Zp$c"\#a#0CqCik>m8R
%NulI8L5DqCg8^4FUTOTX2,ta+H".O>KD]Q57ipf!eOQ=uUO:'O"o`OB`>D^*X2=D)<B3&%UPjH:H=$0JjlD%IT=Zjl17lBh3<tN*
%JC,KIo^(kp3F4P_Mro93*&%/-i^IicJS<aO01oI.73rK30]GN097a$e2[,rC@?PZOc+dP@(Hj`*pQjFF-VeQJOM</HjL.I7ihl9C
%hY246/Sa\c/L!OUUhJ.p*$7:H'MHqf$dt@UC6kNP[=,98bD_.DDW=M1/8DbR:$0>9=EO#`*`%3d`/8#2+6r#kd=]ApdY@VFFq,;4
%_4pZB//hJTNe0]PC;k0h#X2k0+X+95#)e(?'f/mdA3n+F<g1k]5%dcp.'MQ[QT!12Q<7!+gW;O+(u)<$M%u`V.rBSbY@G,7SPEqf
%q"Ehq<YX/6qi/2`kbc?M/rF/\8d-H0q`(NiW$ibcR`-AD&dgK%n$MB9=(M;]d#Z[Z0?<TdZ0IUrU*K7rNQ6:cb"*.QGZn9a6O;u6
%pHJ5CU)&;8EUUB:'16?/BFp3p/&JRUgWO$`[)IRaJdd@V>G`q;0.Z'@ah9oIiJ8H0O'V(1RX&-9n>23SS-C.hD%B-iq;TK1IqQ[>
%',jm^s*C9b"+'_I78+p:s.IGHm,?!2oG]pj6g-lgRh[Xur5r2@RL'pj+kJp@fs&&l%AeFcS89#'i%B?^>]%UV%XuGsRK4(]A/RAg
%>BNIe-/(V?e$Q/[W0c7$UrfQbh_hiBLU;-QNUE'NKKeq(V#_VFifNkB:_20$;1877>;>#^!]C.HWj-O<B`g@8dWmP=D!F>`k*:>"
%Q7]j,C9pEVp./*nnFn$=]"7h%qX!c"J+o-S.]9%fpb*_=o[PJk>:]aIc2!k,hd?EYhg+]TrofQlT3qQ,>T@+cH2VdRjiQW+:Wr(C
%f@S?8f71I!*uFLO:J]9^ca"aEp%%HK+8oF3jeiKqG]e)7p_NU_:Y25`qEDACr^C/5\,Bk8E*0c92Y&O#Edi%Mk7@Q8p#bo.g-84L
%Y@$/^o0IR9[QH.J-uE4<I@:-3EqH+[hjiSoj`RtYrTPC?7lh*)lGf%WQ4s,/IWO8\feQf7+2cdmh_DnD5Pb?Y=Dr(!S%!d[>CF3.
%ru&P`Gs<rh=F#>$LniR+ro`+M54J6t(@pmt#^g:*s*L(Qhn7-=^XO!+q1&.0KXY*lSbu\U9>8%6m<na+j,ZD&J!X6O?Li"o<'E<+
%5<8\1<F>Q+?f(^#n`a-..YSN7o^dJ,r3EDbIem"a-@\$;chj9JIerWrluF81M"m$OeEA]<gAJ;GDXc*/Is-51qWr>!WiO>+DpE7/
%4eE7D`M_U`>i0@EkEJbJIHTu2c&Fg[q'X&bq&CG;3]YAEqGWg-r:%"NmjB(*a5YR_S_]h-T.QNrs8)T(S*R,IAO_CY6(Y$URr=Xk
%=8=7jNdpHgK[30Sj\KViI/;I-JA,='aH$k@_r@hjI6(V]MpE02ki_mN(:YFYGf^cF=3JeMYJ7eVs/0e%q+Z/5r9]CA(<X[GEL-LJ
%d?e2K55F)3Y0Uc7N;nkE,bH,e)gj-qU!#4;^pgsD\DSX>Qu(s\LX;H:ho_9N-;VEig9qt#nGVP)im])Ep97_Mc2Tnd<ZC^LI/68Q
%h9Qj^omJUj0Ri8"`:;N+B;5F0?_*he-@[$F>8`j:6!Y@_/]1P:^@olh]`*64qI^0gWl95[XR:`$oDFe6p<KdUo2E*EcWP<'g(!)U
%0eZog_L3rh5Q:AJk[qE6/,.nG>F)(%;i<ncN*Rr`#i:1=/Dm+;k7K7`>+6>rL-OJ%-:;\Fm8i<1fmZb/q=TX^YEq2P$"'hcaF?99
%J&=@aeb.>\T?GJoER[=Y%r\'A?Zs9)q:PrK8et[$MYubYl^L-(luGJkpZ9Z#HYe9/.!Vtk^qS9m?r;ktr9(M*P`H!dl=STGOK'>s
%5/)@sWr7Lu(3\9tl$mhhr;H<ZcbD"a^OH/e(+1$gQfe6eiUA7]+C)m/K<$t=*98oJCr,q!UNJ9%oilUO1=EfhhYG#BIk6rA_c[da
%ErR62(d,kW:(KM(n(I>_LJsanoB1TU:Z()?j<*'n#,fM2T2'jJ])(BhhsIV^j8Ib4m]e>#nojQ8r&>5#A'O'T>Lpk;X#8QllMbk/
%mJ^nklE.Mhmo70mD]kkFZ0Q?f7E,lkZ<`e`gW:!H[5"DmAQ+!M*K7oAW3(#S^,W_eJS02sq>\)ffjCR54)#6%B)[g]Zu+hB\n#;-
%WRG)2Od0Aej8hZ@W)65)S+bFV]++ANIJ1e>h^=nVGErt7!@<f<!bK&&8%rs`9:!0%&tAYk<o=5FK8m]iZO_6J2#X$@?tV>\qd9AQ
%p:dT.R3YAr50l7\*tTIrU9`3I!Wlp&hL";`JWPOYpN/XThgQdoZUtkEGKfd)S_^WcI%dp0i?L,Dh_>DSR.tUtp&B6Q#fRci`r;&j
%Hl&UIM]X5*T:SUQ)iX^tEkiLklu;j:-!n+Uh]VUL)tl8n/+@g4?0bOGFt.0Gr)nY9s$HaF$XjEU=<QOOSP3$'D[-]urHIbs0S0ia
%?crsR:BlTrggQ(iPk4U`L_-8V7jUU<jP2G8Fp"7:D0:ia,[OTkf8)8W/YJFi5"?"\%mc+Q4MX$XpiKmXBG)JV.)tc0(I3c%-/Pp(
%'Hc=!"<YdB+J9R@U(9k#KQ&%<:XBJ$`Zt?ln#>P)n0&J956N2L0.R)up_od5ZhRoN4j\IH8<4XBkgH*BJO5%RIj@)S6&,!G&;u,%
%M?L(m*qr"qK'n3=Ma'rZImHp29QKtWKLkpRP6^dL6jUUn=0h`;8AUYmV1jC//H>kPbt-f#64&.A8r=_%Q%)SXaa`-`O5.TFJ/>f)
%c?6lhGZ]B.ep7h"F6<e&n5Pod9qS'7\,S:(s5BPP=O45Wd]#%,#J,bXX-`_OTm_EaD6Hd:F?1/KOhK`r=o%,is6\k4.DisTmteZn
%+9),'^!]E<RQQ#"Ft2IsJ*;RfH_[`&El&[]#E&#lHE@ZXdmFA*E\rKJ=?skp_C,`)m8+W[M-?NQC,LBSdreL$P!O$5JYoKM8u3T:
%PUu<_2/msMp4'I$W.!g;6EbYGE,r(sp^O%VX*a,IO$SW$]s!j%Ct`3@>XtjZCVO/"W73n_W!cOT@>$ct_so2AK^j1M3lAiC>i^f6
%'dtUK@,Rac7cl_]#M;n;bj_=V,WA*TUl[_rHG6X!9"n>L#2do'3D'fH5_E"OE5$`EcFQ56TL0P+m)'lFPC<K6F4GJpg));G0R3;7
%5\?5!Tjm'08d>S(fP8iZ!s<"VT=-@\@@EK#i/;9/"u(RY5DD$-N-=(t'%b4_^G)P:[n&+Q8Nq$bI@quM=CC"o#;6Ye)UqiYEM.r'
%0T#+jB4$hMoG37T,kC=.gh21XK;$af0`3":.`,gTR#fn[KKe6SnK?1VKZh3`+hT3CJW%Jn^)r9\8bcb6/3k%k'V,5&QAc6m(GrdR
%=#NGdTZWHFU)N"L?4AM_nNI.YMRs<9XTB;0nV@g+)^Y"C_mG_;I#CNSVPLPK53\jY4Z641fIN)dH^KfLWclk4d+@nI?:,.AU=J4,
%/4nAR$%r+$!oq.m[D=:_\l.Z@:C(RW.o4VeXpL'`"DV=4%oFa%Cnd3`)mWgJ[eZLX%Mg+"Zr'KLDBpj/I59A4(4H=C=P)17K08dS
%LI$m9H2S='omUoU1guP=h%OZ##RYSah4M#H_j=l(i0AtR0Z7T/&se2jD8+n;Z9X=u\6o))H(nr/$KQ_$>I8</pu)\7B$`n0^2kK7
%<J[H_V&gGs&tlHa!@03D>%'=@&tNsN49Zr;g8>3X8)bO!OD1=^9aH-,)oWFr9?#:GY2Co`j1'].!i64[!pNQ95&WmF-)Fn:#tT`b
%+o'-k$.4s1(a1+1'=*=I>`3Op_#esR.uYTNK]5tZ+!0HCC>fiD.N"7DU%FQBX<N\RTq#_ha)N*Z\"jc/nTlMJc2ioHaK?WjIrl8>
%2]-@J22QZ=IBj$<Y3:ij=>4DJ96q^ZE6Q+T\peJLF[e.+&(,+f"f]mUJ0&"uQm5SSOlEUN(o+:n1WGR6i,gY:l`!D3h)=sa2oZmd
%4VU?/(Xe9up_WqWdr0t33[!SK6_"H.$#p!D8fNpY_%c6h"7\p=>)Kf[7CZ"9+TbMViWl*<M05Fa'nSiQ"HSP.M_A7ZKE//;,,@cS
%KdqT`W&]qGW93TBK>)oEo!BE5d/21ICQFhf036OkGU*UO$2IVX]5[pX0laXbI99Jb$ZJ(E(c3k!F?RW76:UN1$MFhAs0PT+!$\3_
%53g6ncKL`a84rXe(C<VJb-ump53;8VX9?BL:n0Zg=Wt+-dTV4Z)]2rYV>R>/S7W%W&BM_>bqM3V:jMS-@lr3sTY*g>ogqf:T/iSa
%n%t9a(\)&nhibRh0ChM!J==[/)1-FJ8@rC5oU.+H@%-:aUSbFmTc!)c:/nP;e^/U?=>ksBMrPk9L"7=8VWRZ&,%3eoHUBi%Jnuo$
%>VHPRcEe_L%88bD,cO.3F1FiIgh2AC(#ETUJ!>R*CcjCF^/1s@*ArR,@(:fhBJ&N<LAS4(^p&1A(-$%b6bBHerLrfLJ8^n2U&NEh
%KW+G@aHs.]&OflqV?*0=fDto+oTYM&fc;!LJkaOEiUaO.KTZrYcUY#!;q9"r:>E$4$q$c9B3+NC!$@OLU,\).^X2U>[4bB8aI^>h
%P!cgX+9Tq;,*I,C>g[&(R.tXdHM`I:<YIEbENT*`RF.IZ?\4(W1J)mrPPY$i'-I^@kl1i$/,g@(9MZRWOj7bRmb7kNoS3[+Z;o<2
%injYHNpW#9,>SLBgZ'pu-Y*SbHWd&f-"g83H1[XDX!,uC]!7,Yo!do(;hhXZ=?P0o"SUBgC9K$[o&c!P9PmcHl$hG%!'k^b"=KE*
%+W(&DiL>J\'1Dj:;Munn6_cbts7Z@(HpWuQ42(`0oq1el1+-MI'tsPj;Uuo".7i0Ac[u;B%O;\CFn(0k:58WJLN)6unGc!2)&X%g
%:E'5e4)%O?ADi$0X0lmE!2lW'BQ1$/P9bP\2rg]*'HM/]8AJ?5M?klooWjs[A<56=]9j7/M[oEYhe/OR04blt`6T;1fm&3(hft1/
%o+V:u:Zsged=_n_9D>/B;%2WK]i2:<D0H1N>p#:uI!@C.YO<Pi)SGM44r._mqB*GT2#'o^*:!Q3ST:d]piU8NE_j%14Z5>LIO@pk
%jU1skh/-4doM_I<7]ARsfP*/K:b2HU>>Xs+i#=2o^Mn,@WD[Dp*iIjXNou_u`KhLTZ],TV=79Z-SH?Jb(]s&FK*/AU!h=+Gm52tN
%:OZUeRf(o5XUYeP$_:%n>(fV'n+k3/:(%$L@K&R!oX-24<bpetV>fU_`:.F;:T*s6iT,6sIJZ[2eR%I?;!r9!9*(f$Xtfq&rhL^g
%<e\jD%YZKIrf^/YXObS!D>"W:!D3kQSK5Sh&(&kaI-+50fm9Fmg!U*`>&0@o/*.ji12QfJ,`9>Y&aX:$r9UMcpb_2q39)BaqnIUT
%Ip=DGs7169J8P<+7#q-qFk`J,bF_&trDQ:0^0SP0)sU621d@nfIg+`FK)TTPq9NO3pAM1E!rDmTOQ:8+?MZnKlj\Do9Bt_\\PK^5
%gQ0WBHtiJ-HX"@bR#1T]>JF4^F><FbXgsaIMX<uQ')9SAmrnG-EA-:"^V-l9T43;on,W&+r7`7km:W0Wca'aYeEGB['H8's1sk4<
%D,nEWrR(>qGP]c*'dP@A)r4PoP/c4j5DN5>b3i'1NgEA9:^2",+0ZURG;!R(ls_;+U:J"h[eo00V-NE%$lr=$NEXq6.n'Q:eeoEa
%Jhg^sFdmL9\PoJ/>!mY=$=;0Lo50o^h;DTu6edn"j3U)ch5Rc]^Ji*Mh`S%LpBJ4qG!!rdkIXJ_oY1(hDLl#GqEqa]:`7u&1qV"o
%F$B@5Rq:kOXkN2M$]SA.<YM0)EhH=*eoIF^DnF[.1!*G*NFnkhIbX@gd!kDR6>Cosea52f?&%QA;Y&\2/BgqaeL<B`Xn!%Ih.R8&
%TiU5bJ(q?_UCl_u5PVmn5P/?I97omWQH_`0cFI5/l.-2ikl5hAhE'>fc/-bO7i@KQ:_ca<d&Ff=.MS=s,H5[m:9.302[dDpV;GYg
%eM8]JpE/k7%mQ[;iORen4Z@m.+'OY[NkWJZ5;(X)^r.k-?ReE5Q+qHrEoh&6:or6JS_iO-0[UsP*>3Ll;#dB=54%Yf@[D2=;CSC;
%39cV3d0i"9[77Dt4/b!J[<D$"k'SM_#dC8Dc'2p"R]0>aOQj2W4h37+a\ehd5KD]C#AA[9rc=O8>lX8e%t.3?TWm,<((_?N>ErPF
%[<L-<r7aSH[L?Vj]2ARkkg[t-,ao)5:3?i^/$qP$s#6tMYYn[UF9(Q0NDcI),-=QK5$#<nlZLFXY%J!npA]Sp?7/MH_0Wf/o`CQ?
%#>0_35T6>0Ag61[]KU'-S6F6_CUK6Z:+@hX=nqXlEr0P>2O1=u(]cuc4K(C[WEGoVSbVH?><:3fh`<oHpnBK@i':N&pG&9=A[G"^
%c2IcmJQ%(Y$h_q0'C/Ab;Q\ZK%qX<AIfl\@!;gV_e"mqf=lYi@X,2+W:MBf(.S<"B:NQ696?m%?2JBOBmi+Y&\GKT<p7&>DeSW(K
%KZkM>OhVf@:+k&>:,RL"$uN1"4LnG7p*.WK?5jBu`J/D[LOX\,g[-AprF+MDaJ>d4O?6C^SNY*OJ"3n9$m'i:*W<gid=6)Bcj3u]
%.YDNRXadXT8H.P']5L9`Hb8QKa(n1.7dfFEC1GfngkfTqoOj+jL?aa>&J%n-p5?1m/.@$;4F;JEf%3-qD=Z6<K8P`pI(u6@-pKP^
%k'Gn-gf'u8-rrD_"_>nEEf+P7^O>_4jZ-1+p!L:a:KU+9<5>-7Ijqarg[Ek&&!f"2I(*A^.OJ`WIa8o7rS!,%A"d.A<Vk#@rTNVO
%*Y^GG%rCiC_nS(&@3(B0djOiR>]1RcLC!p+ep?G/Slk9;o\gQ^<(>1]IBeKPLD!$=&bFBS*o7oN6um3L(>k;/8$`8`^0f`@oRXR=
%01NphXhJ!U5:<7XJ\PDX%Fa]/*kKl<\,#7/n*?N4\b7ddl$Tslr\6XV6p%sdoL5M^I1WU[e^UEr3J#&H<bNh/q/3hlW.\pa^@BYQ
%_h]==Er9b2jiTa/VZ$j.:C"OJD3I9[eaGG(C4/lRK_+X["hE7$#Md$Qkai?ik1LP,,DPDLFq7q9;2q:I.>4K.#aP_t'7>VWAh,SI
%6^1%eHn@R[?te>Vm12W#Zmjb0RBIA4XmCUdM8OM7k*e/s?P4TD=+()nlfZ-'>5"?<s7f^Mh'NHu?a3)l99OhFk\q4?NJC;52Oa$U
%cfIRPIQjNu>4l*?-0MX;BRM=/9CI\qo4Ir30U]&u"!<haMSBU3>G-IL;kL8sFR0B*+^H#dlU)Rej^0R:6176k^Uo&?hjBOEn6@%h
%*^;jA;WB;$XgJe(3ENTL_-])1jT>4j?R]c,3iFGjPT5Yuq?)Gsf/<rD"L6[.Cp\X%NM0.D9V7sVd7C4Pg>-68.lh"F>dJS1W.2@s
%<k6b0YEV47K6$\oIR/hM`)BI-HnKf>%:ZcsGP9pRMMGDMI6Y#Sf/IYJD)cW@.F(emhV<:L#R]lRU'.X%<QGs5q3j4hr%;()eVAJN
%nUDhXYbe0l(\[lL9PR^D>Kd!nD&_Br?Xcojl[=UT*3]B55.9%)PhW$$XjT!Q5.*IU&,euAkDd?@5-f15%Cp,"^@HIuqoWrbXdZXq
%B_J3=k2-Hgn*EY.BW3&XAM<3EL6Gg0/Gfqu$=_76qU5B>go,(`?>k3;'1sp70SIp=4B>WmD5Pplo^^c.(N^*<Ol*09OQq`-%N$Ob
%9\Uq5-eim`GWhD094M_f:U&0t'j(8Q#?Z(kl_RoAd05Rc#*902%e[dTffQD9MpTSTEN:`q]iGO$h;='D(2/J(]@*A@<<$duDam-/
%=6P#Zk1\/3-Ks%Wo="c(I1g`1k*q[qT)2_&T$'Tu\.7rOf;B8$;@WrKYWp7F@IGkuDP'@k#,a68$#C@1SWqmYHM3,YnM,Kmp#fKt
%'Rcs'hg57\Cg=RbW0PXI'X$&[LTk=e%JHM9_4)!GZV^,"4*i!EmksJ31jumGF>_iVl7fQY*loo!Y"Z$#N/?ZPn]U^eBl[[VE&P&=
%a*21F/$7?ga8(L:Ca1$kR@M>t$]4SU3aU"/Onk:&eYR,f4MQ"rZ+\TNQ?5=RD[0cGL_7sKB:lI?1Z%?<_G+KcAT=U#?>4?SF"kk]
%_H*`Q[bBr@+4g.p<Ye-c0N1[uQ*Q7b`5B3t[`[beU!Df@k4Q].-i8"V()O;5WL(V*410OiH&ODUO`!?57ShK/[0cb/IJ2OP."4/0
%W&FDHAH23MFd,IfHp2=q]D:cX`TR0lb'Z;@'$nj^Fn:ftja3ALn<Lc#h<ehCY>9;P[Sf2V^J@(;16;9`%:J774Bl9!Y:GOS';p!r
%=EHWGo5N0/^W'WelfIeAH8^!d9c_N>eEnI*$KWm6A"G%-V-HU[:M(ZemD<=IN/u$.4#;*NQ-@0d5#^]@0:cp<4>)jjKkL=a)UI5X
%4kcm'2cnA.lKI&Ook'thY)P#/bdQM4h:1$7pa^5iC1Ui6Oi'"jiT,;2<A.(Z`08p`F8FuJ=k.i$IEtiodQ3:Nca.<+;Keg`!gqFM
%'n+6<npE;N=+EYMgW@RjR7b&fpKm2-cF:eo1@'iCVn!Zin^3KcqP>*5d[A*LI.="[3U[bSY%c[fqA=$_8PP9(Z!=;-[9lF'/Z#);
%e>snAPOb$[Y",q,F+qU'Hn9`o_J'_`E'pBs':?ci%^-9:7slc#kl+aJc#)2.R@2j$*R-hCf7AP"]_KoQDT:!T5:#&MVoco3o$bkn
%SS#6<(iM>b_eGcDH6ZV1F`.S&13nDP.Y;%`QHn>"]!I[qZ;;A&WK]Hd5/jl&F.9AD6=F=[Xbt0rMeh##V:<n&WKZ$T/T%DGI#]J6
%db!Y,d&DDT41e_b7Tct74$]o,cb7_X>,&D?*nklaH[hD5'1u]g_GknsADu%0&rmCLjDJ,u,V@;"ngginj0>!/5$b$a$=pQ@huorj
%iou3.H&Kq`XnSSS7$To?*"&QGLaTfuq.u%e]aZt4s&o#pG+^-]Cof0-FbWgb)kHDDCq_pS51G@cJ(BK#lj.1VCSI8DMlQ2rWT5GI
%Ro>_FF`<HnHAg8*8uji0<VDR`d7PrZ,'7Y'VJ\=0dG3aJ>om-l1QbsmdKM!%m&:2EY:lBEh4+%[5'+ING\j]gc=b9Qk9NV`3/?%+
%9dNS^K<*9unfkbj1m36m#abhI;;'3s5*&]OY5Ld'2Vbp:5Ae&?n(W"3phQb5g)M^`'42;4DfE"dhJV+]WpQf1d5cQak>.)=YP%Us
%:miDT!M2KB66b0E-T<Y9_H@t`5c/PrF_ki>[<#Q$8KHZ)AETu7ah/YPIUZ$JNj]l;.jmjQKmYN*5D*Ycj'M.'_FQIAe(F3^j(eQ%
%%_c_!V<?J#E!Bd9>/?*\n]Qb@OHmqEe3U2sh;<+bYQgh@6Kj'BksT:Xr3-[[oL\\Z_<oC-*oG4Y]cOEZ'f%qD]h_AX%&ei3I/\:=
%p.-,'!F2f.CWYS*?UGIA#1!C?Vm#tSW7BEfDW[m^"@V[M!fN\1`g;jGe$#agR?`)q>2:jlk$m!(.(d%#2Oe'taXR(OG4RCn\*]6b
%=2r[r%53:qFkL8(*@t9i`QCbl:@G<%+0abLEJfgt7W\RYkY6f6B!tb0Y9fi`QLlZGq.2H?R9>PX9/+Uu-ejknps1cha:.a;J#^C<
%Iij/7;YOjZ%)UG9W79gC?H_$gJU`$ob[H](PgJ&(+k^P31q)-&%:lBQ#m\LQM3bmjoiRk6\=>]c'.j90!s>Cd@W85gcaYMock4,1
%BXHVQ1r``NiM&Q*Q2VXF%>R%c6n!1]^gCe#b<9[q`je'faSNfkIY<AA6>8:$@fL=l-b/g1q>U.ChOF^BoB%`C-cB))E7tSkC(MU]
%g/ma81fQ=)C2X\<c/=.*I7/<e*fF;\r>"_CcJ&/nUU1QRis2rBNOPX1p#tKhjgs8qMQ`i3.reCAO^rC^fQd-8]Y7fWQmP.0o$'oS
%[*0&@YroOd9Wp,JqI\=JCjHNB7lLN?]@8'3C5g5)ID@TGd1Z0t0k*`)m3YW=UiCmAm_2,;8Ml*C,QYhp2#,KhdZ?@'n`V&>7QM3<
%[)H\_>31;Bf[MPPAWItfX&^U)HP#@9gaPRRWi$?p+#^sngha^P+/u$!c$FhmZ"KG9F_p^dclsi;T>f77+'ZtHG)iG$(;.=_cV^D(
%fn\7[ASYH9B$u$g"nM4u41%%m+%fb0G[.SM4gW,Wnr8!3r.+L$pGmLMI9T8`e>G'iEbjnHPlJR':M9!IM_1a3P^mK1G?D9\g@HRM
%0TA#sE\]A[RZ$Vkb%i4,ab;[gVJES+8tB9pcY#2"Z-bLJS6dTa+/JPZbSk3AO#;8(4HcJk2gaq5hH7AaOKD4>%R/A/0L4l10.frt
%Kuidd;@5PDk<s]k3<,rWd3^`=*!9775K0FQC#2tBTh.tJZS(bL3l''Ls1OBSme#QG]!umi28st=jn[2n"$3+#3o6=^b\*irRlrlB
%>Tb$RJ)K\leC2=Aq)b+[T6bf;:#tZcp?]bj3Z\C%>._ppVUYfGa]+D$ht*19-]%V]":!.[`?)iaH"8Drn<duQg;!,QhlOaY=#OX)
%4E)[RkK*UHm+Ln03"kEeI-,MB/Tl!6G1(FV^o'n.1QRk?E&#o:h>;1RHhjYSg-RtR0DtUnlJ68IBc_U<I`.(%ZZBbpbOF9c$m4@e
%h06Ul`]a:U/admgS&H][Z!%**r`\fW([f_ZqFS]=2js=[$$=KZYVjmFC!fY%D!&5J$Q8%e!G?J!P;3N8ZdB9qbqImeI5G5\UO!](
%%V;Q+fT.\X'OJ[SN\gpN2U@/0$Q`diIEc9kAN+bA>(-OR52#L.Namg0\i;K,GF=ufqA&Mu`p`:*bE)$CTp_Eq<.ou;0&-&O1eira
%Rh'-27o,+Z/Xehu9U1?`XqK+j3e)364d+.A]6F7AGmSeL#J.:MOl"u"!Hi\eZK$NhGR41.LF5K7oRh:]6=&g$c8RNEg"I=jaSp#@
%.!'d+/)3;+j11A[[8?e)G#g9YmMboCc.+;8re@nEHd1JhGY_@%TDGd8*O;U+X42C&-n9uod>aQ"\mH>6g%:@!6T2rg>u)u"aiUcL
%[Fsn9C\mIG2XXcUZ8$Y.i!Pe1+G6"S2SF81kiK!Kpu%5NAU(`OEEk/!2o"=t:;.UTT8dJ:%g]#W`>'LL%beJg[(>_jXP)`QqI\i"
%[*u9*R+sfMc-GGH>_9)Kb[?VZ^eJ9U+NClr0r=<n0VQX(rjguVPQHL"Ls0LE<.(8@Z(:gBq-Kt+Kq4OmqK.8>5!Ma^*6#+%GH0?4
%^Rk:WZLZcHkf>\[0OZ!#lFtfPcX#"EY-^EY`:-+p3Ygg@^2Q''c&^3<&1h)p-DpY%Vbg/A42lbM=,sR*m<sqn0AN`G+'.N"kJ6!$
%5"qmHotsb$!Flk'>+Ai3c'g7e+LP-aZBm'_9h^&@r&Lu\[U>?#mDJ;Uq9",/F7Y2rBP;S'dYt7KA^-..n^58PmE#&3S7P=,T66ou
%9cTC1=6=^uT)8.#SsLA@f/#$ElsM5&B3u/cE^4O>h/$\?A?>O[Ch%IG7E<*l;n7")E3rOSR>6QQ@Z#A=H[pFh$h$#egS(0-9nc`O
%J(i%'OfK:B+#G_:g0AG(c&`UCPHQ9?1FHVK\`'oWo<4i%kR!aQ["S75Gc?SEZ^<8g>r4bg&25nkIM_%9g.UhYk;HBWd`jt^1"&!3
%1GcGEE.,A(UWk^RT7`O7C>$4%=]DZLL"1\q70^%ZaIntSjR-V%C7oZ,'=jULi?!:OI=r<'K1JWiU:ih#(/?<$UR'H`C1\i7_Koh)
%,M@jWB:o\i$kc_p"5W86m/?msrrGafb2R6=8[cG&o*NQD1Is9&]lBbEnp7\@/JmFS8]?RbpJ_3AF0b_VZFJE._DEC\(4t=1WHch"
%?=/[#"#!Xq<clAD>tmJ"MgT@+q=;EM_;iC8L)n%9UL9q;VKkquN`+RN+JjX<>('"[Su0!SMub1[Ef$^/SUT6tP!@^%Zi:5"\O300
%,^k%TF:jc"hY_G><,8fj-_"c!?47RT4.6(&Q<mpKh&^#UYKNcb^oS4*<)@BpoQ\ZD^l`MO:Bmk0\S9oE"NaA%k,i!n0"UJrR^X-%
%hskHj9B1fLf&FpLif&/q)JNeB2t!<iP#oMM6StT%pF!#@^!!7Qe7&*MlYJPgn)[0<-'k\sQ(OgM%8qthQ+>DIGmH1[M+^ZDPIKO7
%$XCmuO3Whp`BaZj^`Y"U`R(#T=\M"$!>d9lC34]<bWNQS%T(@*U#T(F:j&os^)d[&]ecYDj0a:"TTQl]an:?3A[ctL,#$J'"(klf
%Mc6B\,qp7NEA]dTjS;L7qB;J6?;Q&D)-TP1cgJXN5\b2Q)/AWV4LHN]5+)UZeSPdERBI]^^haZ5I5ns']hdb*]XY^N^;njHF%WT@
%Y@E<#2g\gn+8KlEmE*kO\6]&DN:B[.E$VcPWio.3jqmWcp.nd+WP@U1I`VT64+B]hCM[UWFLliTn)%t6AiHoSG^cs'ch\TMe-ci9
%l):paDDoY9f"br^#*WQ34'S=;MB"^8I^`srlg&2Yk\8PPQ,T6OeGf*q$-:*+&[\*rXN0M0iElCk(#F@^7H@MkP%Wk=Im@`HWr2W5
%k/pI/Shpqfcfp2gY[^Fu6`JX+;SaoR(bhUlc[D4u8Di'6C*VF,>Q>-$i-=Ad"Z$Of0KG)<liNNPo"".Oi%(j9$6rC#b*1`]jNJi9
%j)k]M.`\=;NSOd0Grq\&CM:a1iE.#TS(.2efiKtF_qC0+4p1cNB]X%ZAAG[$70SmBRbs.sbLFqefR?Uf'CX--f?@!-ruq?R*?R`%
%I0.<%MZ`PDE#Mc&1m&,Weha7CCR@MHH[L-[b#Km4cE?)1V,")d<c;_=hV*=gp-[lkM:3]V0JAorA,2m3](XPX#)2[IggfI.mL<Cm
%G-a+K:Sr:_Y&gpA2f+d-FV&=#D?^A]j1'So,^.e"%Pg-!p''`=oYTa(p*uP-NGkmLY%85aVV/^&!DT*p5R,MGOh7LJT?Wo,&U3,+
%*Rs8lP?6H57WuJXhoTb0:?Eu=SZTi!1FSF0@K"$pD')%k(L[&s?rrm@n*68*_U2/k;r@N6HJr\:4`rXkqM&@04A%R0R1]3?'K2ZB
%Y]le%DS($*?-2Gc<5XVMh5dPZHC`?pQ"6!gMr[s<\=L]U4&6NM"/\Ymki")C.)9;p1]"?2=Bo^'hTY\fM=]hLl"Jp,9^efnZg;Au
%m,G+<^#/:SHQc,<AETiBc/2fN+0hhUJtaS;_&UmfH=c4MCn/CjI`:Ue5\_R!6'BKa!ih8.;t]-;cYOI9o#?1$BC;+3?S.%uN,I"+
%e=jP>>+'Oteh9'i"7S[<ohc6Jk'?'&$[2Mi3oF*bRdX"f@VgAXPde0OljN%jq5,MT0uKTRY0N<JCtME+gYn7SePtRKGIkgaT4'rH
%+D6Vn^fX<t;S/E6"Z2%\&JI@1$!gfFXSq*_l+D&I:cN;SA`n)0YYETFk&/HcO29Y?4Wi=/D1&7AG;#SiL,do0?bI>if,0W.eQHSH
%8nptq\#6+']"Ym#IinHoP(*OXJ+OpDHQG;F`@7GH,D#.)bQCD\p9]/%/1^m)<@1!N/@'K3M$BDD/emK@P<DqFAfuM"gB,rPH!u>`
%NX"G=RE(RJW5Mm%1t>.Q:C`[oogHXQ`D!$;"U!&Y_I1AOY1+JppACdol@34,MZ<nR)CfIlC;O*@KipFlO,m42csVf[*rPB&R8eSp
%[Kf:[[?""$Q/.8PH[Vr9KAYN:XRE;4W;3d[,4)1Y3<E$Wf6=8dE)(LkGRnIV9u.6>Z[I1#o-;jOWaq:T2P/Z`)rSI*%.M[W)Gmum
%&t%bga5bEAF.Bi^2%QT:=PK90BAge\jhNAGmo$?8cc=JSU"q%2%^q.uoI.ji8`JLjieR3*<*X2pE5Au4W4iKI-<'"qYqi\Qc+DCo
%]N3RemG?^rm2t?JgV/Gs?Rjgd>,U)U<Dmam=eeFG,#9;][E<[Q(E!(Y:bOsi>'l7CS$h_>*gR/@&+26g*NNIk^`p`.Y-Il\QR.UZ
%8'JCK^]%W\AtehKr^e,@//HEOc/(qd2KlgA`3XNsCM"_s(i(GHL\KOJ>C9j,(2KIeZ#R$lYVNu*dP9;Mp=8WJmWnO]5JF_Zr;HBI
%A$N#FCb.J-0cZ*GDP1YLjAp0mpYPqc1bjKV[D1#FO3naBo*@]J2>CZt+9"&9XJT&KX*-qlO4Z_#S6Wg(_&j=(oZu;uBmg*`\Np0g
%o3buEs1)na+'k,nnXh-(B.DQs:&&4=(^FDA"aa&>nCLVPs,!ItFWus:JU^@'X5S]]Z0*,;J'I=fpDaICUH/6"/QIDE3noBRAf:Q9
%cW")Ops3IJkA9R(l#dX=.):=k9`'mi(B)_M`k^;mI-EKgQ$/_r*Q1kI&S-n\S6sK`;[L1G4O)>rZ[8[Hf/?1roX#/(T"N>`8*;P1
%Wb<rqg#Y/G28U^Z$ZlI?e4ArRc`ZkV5<F0On(jP=KAV.`Q>WfQ[8D?K8$h@pIP*OJSpPifMMGgGh=:Nm6/rOuhn(,'I_N&%^0aB7
%J=Vg2`-)!DJCkn#)mIkLbo;0t=2W%qo6<[8\+%T;6#XT.LaKfb\/b"=SHN.kT3iS6%a)uTl.k'MTG:0J*aWdEfqmkBDS0sI]pcZ5
%GNn;do$#8BGr=DJ;8$BmB1!p<TqFOIr!HWoTaM(QqQ<_c-*2N#Rg080`A"rtj12;iNoHhiddOrs4`>/Vi_,i.G$(b_be"4YLGHTn
%%2*e4J`9bo0(/=FMBU8^hT(>!\R`a!f!>gkHYjR`b=jk&Gs29Nea$-r4_saEaZLb;%kOMu9o]qnUpR[%7N((?J@W--TWpbIUiZP6
%C5TE2Z1bTh/>q/OSkX-A0>0MNGG;hc1&i:6R:<M-Oh&n5Cq..O'T6Nu"V>T&'8nG\FE"(om_G]sYD6Ud4(kb%l$5'Z`,8?eRQ0`+
%]Z,GPhJ*2Mn*5#'('d5#+i'^^OiV%mZ/P6=q:Nb^Fsf35a,@2W%9u#egr8>kCgu7*ND2%W/n7hj_a\HgF!2-Rmgl=+1FG+/Z.Z25
%;_1e9SVkZT<0K'*AT'fQg:@pW,G!4!miJNs*+.KWWL8m<QtEh0=Ko*U@jWk[@e7XFS(L',KZ=d"Nh>UhdaH-QD##@P&6l-?GUu!B
%SW.257rDhIn^_A)^\>;P>8q?a`R]7&,I,MHDCW(p(qYdp/B=YtHfJj([U2^.@u'C),'N=D*QLpd:W'HD`_8".ELXo!A*iLI=N>=Q
%CKIdQ,<6DfSfA`ib%JuHfR8$Z/,%UDFCNSVhHK8WrqnY)fM/He?;%3"Z-J<C2B5pSFGEATl0[I"oZ6gsjQ"q`E'1Jn%F;K'mY8FB
%_SS!>gFk8*Y^Dns(_1^9-ANE"lW:ts'8=EaQ.GcsE9?]KE&`?R.>HHXf5&9.=)5Fc]B*laHr/S$%j-!jNeYkC)!EGL)]l^VN84s[
%?XW0rKlqmTH40ngN&7_nRsVt4:=GUj<[5M;XjN8NZ2?R:<@sf&bT;@[chMc>,0+tV,^:cF7i(P/mRL:fSh<L<3ubdVCPQ5FAF&kJ
%3O3k:01LtnP-ZCr,?#7#f;:Pj;V3M,7Oeq(0-a9ljqCEE;Er5bNjQi*&#7%SbP.bF1RX$Gps&*aW40#,1b*"U0;I[pp2tIkZPa_,
%AD+ob)GeV<DT>Q7keTqS3I7-]?QHhK44tQ)b`?"hhJ[<rN]u@.];*WrC18a&d)BIfZ15/kXg*+p!mL,(6@DOM;Xq$2SaiP][!.!Z
%[edN634?MgS/OK=M3Y@;iQg-/:$qb!XSc$t@o'RXHXk=td`Zm:>S,p/cfP,q`:uuH>j1.#nbG=k3PJBcTs6VlW_PIm\'LZ3j%&,c
%amk;fe`(hiX,?G&MS'q4B293$h:\dVM=L<(m)3^OmVG4[>ULj6p(skYd[L\#Z+bQeT%LYY>+R^U:,XJ;\rYSZpZak)nZoQO44/=[
%=[m*bZ':2A-LT.3UbZ\61AMW+-?K!:ZcR'GOcr<._stjLX$UO+][>N'XJJ';fh$)l:JIW8V5_"!HuDVqD(SI6hm=%qX0:4Me6_.F
%4E\)p3M!`s`&=Nn91Ltde8$Xtdpq(_piL!CEb&?ZB4%R'f>R:Q)BZ(TmuKC7e)u_5c#g3k\=.lL?=-HO)Rl('WMt[=\0!PFisTY?
%`H_+%]8uF)A8C_amB]j+0\d_-5A^X^G\?dOF2Tku[j1,T5JOogZT-^LSB821eX>5kHXu::HB6C:mW`X3V>,F!4'Y!rSt-m+MU1S`
%g!jhQkOiq?ZZb5n4crfnp?q3fHhKI>n2T0N\F:.$o]:6_N>HAeQ,b4HPLr!c4AD>^/WM.bS&]<$g.&b62nZsCk@P57MK;(/7*]AT
%CH$=Ho,U#=EP-9I#NR;r?MA>phW/3^dGr7lcebrYjLpPuhM?CHO?N8oqcnGiR$`l8:LZ;6Z(7jSQ9:[`AEsD;RiOGpc\a:&@.gq@
%'7]AVRe$F<7,2-ajD+[+k2tG`Rng']jiX:j?aiKOpf-skcBXd.iu*,dbkH4*K3t+q(&kT5&;];o>n;k)k;o$@81s1IZ#Lg,(2)*k
%*Dng=D2U:oD9M_GF@Vcu4Y0YjR5&tL[lYm/ZO`XTSXJ&DH9/a@!d;&Mo'*\PF`_SIX,==,RX-jSj*LPo-uGj(<117BZ[&EDQMbB$
%DDe;6]8XmEHhT@!>[(tJS!gVh/s[8rK'ML@P8W%ZnVpo/gb\3bPG[$Z4YE28as_4XYW+F'>s7);T?e%g5^Y/ecC\/ZS+G1*,UPPf
%7Q5+B"d)s404_C&m=h>%p!uJ*FCSdR;t*Nu]u^ks\<;-;0((lgee\_1e^WUErP`&_G547a>ad9@-$K]WV<%$ck[q-2+o0R1l=Of\
%R4V_um;,P$0ATrN,7,nYX3L1rg"FU@o$U;!H?m!1[C9D^cX`AHc%9)dgKg@S8SLAnE]?&p>:I<L2cHuNlfSs8>ZOe6o(bZ<o\oF+
%oe]Nj"OI,D.;edj0Bp`Yf1Oqr=%C]`<XE7aRDdB-c_UK@V9EAGZ]VdOY+B/ocar5>hVDmY2g,jkm.KUQ.bhVj50V9203*)X@!X;H
%Hkf<9Wm`Waq2*RuG(*lfdH#L$cc>k@DPt/dS"E<Ub1Y]bFa\!0Vcg\S.rDK(`i!!UT%V>hAbTBSCM/^=V6uZSg;Ed2dH8l'C23$J
%rV3[_=ar3-Xc9<_^U(1E)2W8O*^*hJ4J#N<2CE]%gRH<CS!2*L9#6&IXEM$!K@]j!o%(j%cE5!@eF_>PalV"F'T8Mu03-JhmA&^A
%^\sC'M!`.R_rFKajXtaPjiG`mbMlNF2mJo\fZi8trpJleG@pS,pH5_D58H`^esESOHafQ8c@5-V^:PKJ)oMQbAo\<WftWTKWIr='
%4mudH5O!fa?uGeuA`n<uE3:sFI(24]:cuDDSSB4bL9KT,_9qi5dGFf^ma4Db^3DbG3Z0qQ?Z+.2?Q?68+1I7GSknEAP+?DR/o@69
%O6<*0Vp^>;GWJP^g`N.p"Co?IXo"sMR9I4O3noWi/t>'eDjSc0GGG!sH[T-]^V9>mMcc[!Ikgu5[<usN1Z,]ea\?VXZMX@fjX,Je
%\LcVPQ`d3KV:\d[XEnl/<GX9na0$*90[9:-c@#0YGlMaK\oC]u2kls7DK]M+pGZ)8I=.MD50hue:GR?&3dZhC9o8Q2?)Go=mqsa>
%V8DGBnZ&h+EcP?n=P5beFP$9\M[Kc:Hc;3>a^250>s'M=3utsB;*&O"b>Mhk]hh`c%o;<cP1M1uS6Sfh`.fWiHc_1fV3Y7D\E@Y2
%V>K)tZgRe`r<e&45$rfl4WM4bG]#HLO*n^Vn@1FOEq3=ZDRHM(C20HRIlr3`Xm^)"@JZen9']9.=7MWTk/2N9fo4P*cR7D1IVqA-
%$amt/IS`,pZHCA[fuqgeb2VC'bDi.OW)$*UM0a&k?.DSh?Eu;\':m._)F&($(7,f+^:-2PgcN0^CGt1W%@H98\6G-"VsB&q<fACU
%Xd-it8aCP'YI:@Km`f.DU$!KOMmWEp#L8"dO!_MTgD<c_m]PU2-%=R'*XlejLAF)YrHDPba4lW$g&15'j^B+cp\=$jH.]S"`*sPm
%3I7d6.mo"kAZ53&)04%5%(.T+r4YpQkh!jIIAgF:a+($a+2WG";87'/KSr/9J*[>>_FH6m6cX$^)#i9ur<<K*XjJ/(et?fR5#`t4
%l,-$$$p3Z?TirP<enr0q4qu9N_8O_$FkG,=Vh"r8.RR3^g8lu-/(f<ciKKabB!YMig"0Tch9mN#GTASqeVAHh0KZV1%kuXi<B'>m
%$`^Xj](K_6I!O_8ZU7>N1rID2<jar4g&9A%bdciL;QVUE*#U`RoQQ@ZKhFGm'^FdHl`54^_L[bOeX&Ki8R#Od-Ne2hTu4R!p@T>O
%]*:6qGL*sO[".@[\f^9thYBk>*j#0P>e@7UrN#*\_R=fFLW]HP%oEdpHh?F;5@N#gU"q`2'Mk`o?[m%3p5NR03jda`_?hO/?3<_^
%I-]b/=4I5bK:3lHlO^4C]2<L2*a=Vj8f!f3IR)um6]YU5d65+ga5]01%Pia8IFbi1q<%2Ekb'a(cjd^T2h2##iM1JmHg%S\*FHQP
%'cXpc6ic]/a&e@FNr#>mQ_0AWcQ9Ck"0W#"A.uY*CBN=>qEo\O*1>XsK:CEf2uNF!-WRoLphHl!gDArAiF>n#n'emAH([-YRD1X`
%ci#?\CXHt/"\>F_0<;1@JSV:[eM!P[p^C*hNT'B#&H<Cjqd@&)kY(i0^&HA-%<,@Je7o[*SZTbIPt272]jTR\(G#Jp#LjE75<5<Z
%_X%N/molpH9-?UYo)9.*q;Z+I^VVQDl)3&#a3ZW@cG/G02s9b^41oLnc4=:"s+?KKNtQm:Xe7\ke5jn;roc5DI_,m:3:NsD-^a_l
%na#X=n\`VU06Q,[[tmQ,W-8^_O'aR/bI>F)7N*oJ%F2[E*UGmYI?3(]_!1tOSWqc(FYMqPq5SBaKhganZ27G#(TOn:%i!8-Id'5m
%B+K't[7j@Hs&1rXUHW(oGH1@6ZQBOF^)fM$2]jbn*u_k"h19urp:!>qrWe*MT=#.M0Jp%H67-_4hbZp[I>A4,q@c%1">3aMFOBtr
%o7qV\<3:=G_6Nl$k4mdp`f#<6,IVO)i&ZVMJAkT9rn@,*>#JdYr<jQR"5b!JAdCUAm7[B,Y=.STnZRG1/2kXi-<kV5dpZZ,I<t4(
%4UZ/>CMI>]hCZ)tNZL!n-/RW_bZ";/ZX<b/QgS5\1>ToLA.c+?h_F7W;i8:!/r_^],LaC([PSfm-05&D91N>np7b?STDaNEg46r0
%!;>^iaL1E/bA2$pr)`[`i3.Y#R4f3n2ejU2.*ou.(PFRA'GO'98Jp]k+TQML!nbYo+Q7*C!6>N\!>"gad2Kc"XbTO$f2KJ5g`J9P
%K:a%%L-/m,n/4om&kWLc+@"h)J/F#J8f+W\I@XRC<$mQ9Ele!68Vhn2=??G[@B0CWYUJBO9I-ur@5?1K_71EG0k`!r[8coYD2'`u
%+0RR.P6iRp%ko*fk0hQB)3GKI,HsiIc4r6k4l`H=!G2tY+8?-5'1Tee^nu@n@tA[V@6[Wt"RC_MJn%_='dg/aJ=2d;Cj-37,7N/c
%qdF]?i0n]i,C5&^B/bES&gj<2D_-hP5/JR=W+##Nm)jrZ">H@D%#gaJBfJq>_2:4s*gd(YP8t-i_<fCj%Ud'`/mbMF+;sQP,c"4'
%#"W;4Bu"4t(`ZB]B8^iAA)fhCgfUfL.6;JUp]ti[!"^KM'>Oat/]Yg8!i@]lF_?4OL6r3T0MM:cG%2502aKcON@P?fK^eIbOa+Ah
%gtm%r^^()'BhR6ZJphr+5aVZu"A/lcT3t8f4._NPI\lI_#QqTA:dbA9<+*4iET73<-3?F6_15"?V)]FG%22i7Kp0Cd!'1Yo/)p\t
%%Yl?Y:0TRMa`MBH!snrk6SK$i+qFJR5!^H^6kDn"!Y4VeciVi.1+OrH".>%^,*Vi071O#(4_BiE_pB0rm#g8Yl@%eU_birC'6k<e
%4Bs/YZ_eDba<>^l57t[l&EY3?C=eq$4JFC''=]XZ)rR(/R7/n@#G]Ya5^j\;O)DQZg`A'["HG-kW.AH1JAr7Em"'k)@U-^(6;_9?
%l\#]9/+L,)+;\nXdF'_l\/NHCDAj?&[g/'I,S]<@M>LcqQUo0u&VV;V,af5m6fWG?OV"c_:K"I5SeZdd,#eP6.3iY%=9GmM-pYfA
%;,G%?E=;Ad40u+VFE%>%%5oF;ZTd^iBGa"=.cF<-,XB/=#uI-a[q-Wt"rqP<aApR[KsNHe#;?F"R.(Vj#GDUE8WiL=e40&HU5+\X
%T4(l?boYfa+9`V.TjJrh)*^BcmjLSS^+g`[N"9#5rh\(P!J1<bS<*p&MSl.h,XJSYDSHf25uPS63%=bEQk2?r8IIR&3.8V"Jj?c\
%@#gf94Fe1Rk\Flm`s7P:8GeQ1B%#+ZJ5+jG@H2UdYV?Z<%P/hs3*lXiS2a(i`#+)Vm;WMW>#9FA*3^UHZr\A[i"h67^`s+U(XJes
%F-?\("-*M$9V_/%dA$a\JdeeLK<R`iNBM^K\OeY,*#1F],@1O[";t[H#X"8\^pV=(]*FM><p'4.%+('F%;Dao8-.*"Y[WW'jPsi<
%gVVt:=j)VH6&^E^`=Wi*Z*m9HpDJ*bb,R'VC>:B2).tL`e,j<N0^gNHH5u^7.<gf86mZ"D7O"7>PeG'X/Xd@TKelI*MAFcu[YN9t
%&ZVXf$3mrV'cIE5/PP(R$Bt^);'>`\+$iu$4+jDc!++Wu)f<rbJ\Lkd<ZRqEKOttE+b?@r`NVga7MB/K-j:&0!G2BXK*nK.nGqrI
%_ON/,69$ci`4oqrp5@B_!M$S%#F<7--A7L^r\L07/"E=gg,PWG4Dm^j265%S<;D),Dchh"0^'0PR-0**[#,AcKaq"UY1<^kBFnlN
%C6Eqd_SA.IZNMHUD@UK,cjt#7TP*Ws+kYL<!#**0AdT74+l+pf_OS`@:c!>k)&q_%Q31us!o[NN@7-b]Z?nt?b&tY)*[bA)RL^r9
%S4KAk'3LMq2BT2M?u7qlC8rX.!$MJ7&gAWR2Nl"8cpgorFtV-,Q/#OYA5u'5Q`Lp]W^U%3#,\eH'k^on1BP[_1lqpt/3V%!!9Qu5
%e/Cm)kM.sa&gUb_!pr7)PDQ;r5b/N"^pcoSX(-i/.0VD^'EKmi3%7)U%E'Zsg'*W+:/%;^,CP1WKb<W[dm0#Gp-KW-0Sr7=6Xdoe
%E:a3(J.'5U!XhG:A&U.,0>KP"9j"[BaFHPn(P+B((!nX%RgRI_KH7D+!V1gN7h@n:[%^$]TN1!T7YfKNFpQdQ-oB>[,7<"*C:e^e
%SVVJTX745%KY<$(&P>\U"L&apfW&9Y3MQom#80[6=Pt-,@63H`?m)(4SQ6?tNiAgOdN4)dUQsK]SJit@'hV.:b)fAR^B0,\!9jb3
%18HHe%bf9"1;ZX+Ns)4IRDQb`&L_5+I6iq>6_d)Cp^nL*-'1/SHfXMo;_T%>&jJWP`j,u>%*",Ghc_ir+n,iJMt"f(7i;(N<[&Cq
%]bZ@2;C3)a0ODiQIY`EgI:plX&@#CF1pCmeP"$=]ET0Ku;,Q7tmQc?f=D7REN<":4'jdJC[u_Rl&lcs*5jQp_,@MG4_EnSt.\(Z)
%8HPRR@RA6BLl=GbZAJ*_CF$n"cd@"c*[sON8t\Ua\J=TPgAGo%aqp@*@2!2D,JV]a_Bt3IUbr4h^QoW>G)P+c67c<fJ21(0/,L$b
%QtpHX@0&hA>Dl%rTUhJW/J[.RRgKeu+T$Q'&n,"+s+dH^pnnl3<hnjr=3:p;Sj5[W`retsc9W9r?Xib[peB4MO.DICOq,-p^ksuZ
%]>Kq"+4>,_<8og,Uf))mUmjuM!&J.>,DSg*(AcV$ZMOq6*Q"f`$Y#4uo?i7&`Lj"0#+4D128LDYU)12,[S/72FMc=2!,sFh!p,-b
%TQN^:&X9-!^!XL$0Q;#W,e*kXbfUiC4Lc.'$7p$E.,fQ]7@Q]sP[NG,a[gYkO)P54AumeK(cLG(+:OPn7(UA5":CETht-KU!\tOm
%"j()(3JeRqhZjYRj=qP4iSoF"Ci=Era[/>s>*IEp?@X:25\6uFZiMiuKVFgsQ.1X7*/E+H,V_rDhf:1p",sJ21n%&br\Rf47U(Er
%X`LDfJYuu[Bs':\lKFlH+rS<=RP(;(i/Hk7^jp96RrYu7YTuB[>/Uh#KIQ:^D"MVQ;ktW,S6a;IH$:AEV"R-c2^fh:i<tYK3qHa-
%J7W7ffLkYu[#M07.Qe[\_Z_)B@/,G"Zj\\'k+jXtZdTBNK@52TNAo1?3g/KuICL(G6>P!ug4V;DOUNmblUW=A-gQ_&)RT0#67TSG
%?tnB`)@[MKr'ukO@+;uL3Xf%loEXSu9,eG(g+$3dHA5CJ5gH3ir.)pT#m^/5L!%bcdF,kHhK(Bk$\2Q;6,1e91tGQW'pH,m4$GTc
%"L<X:=Pa1CL45ti)f6*9CbWqCE<NG+[NY_L,[j](Ph)]573RmOr.%,E,eDB:@4H!1^:&V#@icmUd>ULYKgYp^X3b'<a+SDlP/16D
%$cdnf[hT;%%$6-@mVF@jS,`V9X97]\/a\\6/Q&E]2j<<'FFq+;KI[,A0sho8MA'Kr)Yc\FUR%M7AdYoL6:ET6=]$OA,)@L0TS_f^
%2o0h0XjRb]:'+cQjYOLj0SPpK)'(IURd2lGLm!>dc?OEX9iR;taWs7U"k2sBNd/#\%Yg)k]+o0D0!2?SN"e7%N-19Q"MdU:;Lr>^
%/L4B.9P<`ie:Ts5/_HH9quSHA?4mb`8O.hlB;W`]SR?OWD4OtJJOdO&FB"Nf6Q^8]-ic4d+C8HX/W?b3"H4od7*tC$50$JT?m#:K
%8V(t*/J$&#(`]oFB)K/1!:9^E"DSJZY@'%e>Bu0iE`*)G[0d(P!!]#l@$s,B_%Hq]?'l*(bZ9o.9_oGg1J%@s>8YAM#o)qO^]:nJ
%`'?/'IM_38#?0\QU,bR'"V?74BKIq&U:*5uJ<cZ.GfAVNq1m`KM.W:Hr$H-p0JTLBXsm$a!073e=<e!pQ4,JZs-cIq_`bkXU*RO*
%/.&(g:9eSr-5%mCb<LRr.nY=IS7[u9KL\V:<Q';.[%/YD'QX[JDPf;[6tg[rQ;iD4)EOB<N0'ghi/t`@,R*7-OQ<eM,.)lb-,C^_
%%fmP]8Sea.'dPoNp7a=</28b/XJZN'X?D>GYh`PD9Y%YYOTlZc@<XDA/I?,<>ho,a[=om-6$#WI@6Q#eO@m%b'9ZT+5eKG0!D":(
%"-PL'2,U]V@W[;`R'miXiCpl9"^4b-@ojY+`j-/dDLirB.!f;*6GU!I>@HEJP6Xe9=H91^&90TtmP(`@CqL2KO^UG-JUhl;'J]3I
%A-@%P1WU(;Po2HDjBa;$1Z2qS.Ye$4p]pRKeBZ#<8?>[U$<<&R!qfaDg+^h6WTXI2&gnM#W'QAZa:7:A3//#nG5sPR-p2V/7FW-D
%&OB5iA'-]/B^[+c0`nf#pnRq+Re(4)SdeF61iodC%Nllo$s`o,.SFk+-h+0k2GP3'-4hX\Zj'@a\&8^u`be(M)Q1A9H:ePP6r1`<
%N1V7m"L]uA6b%lnck-:LqaqD*Ldsp_3Dpe#dQfkj<ZloKJ?^tgG+\AC,bitH"l,!Gos5*BM1Fpo9N)67_k8Uja@)=;QI4G`Tf\*-
%+6.tlpS_@Zj>qt(+:j'#(Do!$\/3:U^c8+)\JOCc0Woti(R'rrN)!B:G!Q[P+^lK-@rr!QJ@#L=nkc%T<ks#>!.Z3BRhg\^7[uce
%0c^Ig=?lkEF4An\M`#1>Eaa:F4=Wj)M0!4SdZUs>&dngS$KJZ6rPOG!`cYhn``>Yb;o/gY.c>sm'BHIr(1qtZ#3ldW>FtmBDjX*)
%ZFJbYWj"2!V<\TfiYDaX9h!5PrhBl-@+[K2(d<KC#kUBQ#:#@(0uk(a(:ftM*lW7XCH@;+.?'r`*erGup5(lYIMaS'GE>b#$e)eR
%M+![fnAouBQqnJ(_GI;GmI$`#eWa&,\IJ:AGen?gO#D0!j:e7dMEg@HlVf(Hck7[r!SaA')*t>N!$'XE2_#u4]91-H4>;'jR^-2.
%6O!c#qP&HbF@\(=Ao]S0C3p/PhT&;ORZGlTP5utW:bI$RdL;tpO^"+;WE:GYVl1I8mPHKj*sR'oMNK<F8>+q8.4<T<$Yg4c?idU%
%(0VG#=fRnO,/=J=Pu.fc.P'#OPV(j]ZF4$fDdl7jq_lfX1<C'.r)TbA_V>No[",MD?#,TJ_Q^)G.4RnqO=$%ne4+Epb/rYM!OiC:
%"b^MSbTk"6'9_)72!%/HfsgJVKF2/<&;E*=eT=-?,nEV:67nuD&N?C),.e^k1</okgg"7g"D0rQZK^M%+s<8qJUN6<!"*Kb?-\5$
%+Zd6T[lGO"d9gIdX%!X<)Xpjk@I/5X&n.XDj0Y&415'dB4t-`Rpge'OCT^p6`S+Urkr%U!E&^RLKL3p3>H-2i$T1)55[_;;TnYSB
%Nku).1.jWi6D"DP;1W1bO:IKY=pKktJD6GC`a?8&$VukeIqP<SUPGj85]4*Y+3jQnJgEG1!9OKd6jTY=O:r1'*6>\3#4j*&.PYAK
%RcLCb.+\X?p_4%Sq?'<$&,>F[;.LRs\^1F8$IcZ5OOL?LKfG'NDfgPIjT__'$F3M0MG'R=70^*\2h9$1a45L]iY*B0<"7Q'A8L6N
%,"/<E`/k-(\M;jc\Q)`H@dSUWYG$:C,jFO<0^Eop(^t<I*nE^*[XI9NJRm`lD9Gc)TrT>!*Vp45I@+TNjWt,Kfn$3X?rErmBL7G>
%kJuj.bWR`L\dS/l#R9kS't5l7*<alR@CF3!9l\c*/.cA)#J2Z"`lOd+^D+6<.+Q_\#h,>n@%@nRIo+3/^efl-Tb;<9>]665Tb4;G
%mOWj03L,S]?m=/_T9SYaSd5u^*Ph%POV>TF7A)5l;\[a5h"eY/PL`,?_SQ@dA"Z'j(f;hEa&d:b\J@*r9[PQP0bXaV.,]po1;d?.
%1_?@?*h\9#2AOf'__;S0O_[0i=ViZRJ/gQ8/]/Dag1H)b6D<\>M)9X.S)OlZ$q;!Bq?OmW4#)%.6?.]RM29R7e]q!6ePKq9g7<kJ
%EC`Uk)'./PNo\bi<9T%hWYuMdg5\^gB*0:3\66U$k)nUrRZ=DA[%Q),[M_p.#9?2s9Qkr`B6H^)#dXUM>I.m5BNlE+UsN!L_O73>
%0Ul-4Qk(g&l`NU%N3m^EgQXTbLfe-1@8lJ7`1.1b0ZN67q;)HOD??0Tdafp;+%XO.c"ng0P`P9gL4=`V._3;"k*ECELi#ISfeP@8
%q3j\cjmYAGV7NJ]/pn,B.'rOlCsX47Dr\;-.K;(nB>P3C"s[D)%MS*H&Nh0k%%LPn'M#O8&k/M10MNqAI\L[OUaeCS+6cY*\;B4[
%?r9MM0$91Y.LM\SSBi9t+H&f/&/AVTX!l'@$f%/D`)%Td;ZRe/+>+YXf9@9dFD,&KB9.g;@UR&X[\EQ/[dpDa/dMRp!>l6>.@7hH
%.L76g`ba-@e!NP)R&q.PAMHJE"r?>fjr.`$-LC+i3FQVnP[K%PPKuQ&=3=(FR,T2=Edpo4.4`Rq&9"W]G<mD[B+r9VYU]sR[%PqW
%;2l^\>n(jLD<;)hc*Z::E#]7$ciOsYo,.6V2Y`+`Eq4hk3_[\MOgQCi"'o_&-(3-qP.b$5$M3$![Oiot0LAE$R!A2c8:P/=A8GOB
%=DeL>6PEU,S!KcOA7qQX_pG8H#=>2L^jJXsBM/St9#lf.bf&8IX2&//0m%6Z`CJYPO`nOB_+_Kef@Zkf*gP#)L6Z$QrSZ$f!L!Km
%=*0gXAu)K6AN64"nddQ:&S+OlZmu6TGs-7EYjP*kRolRL9Nr6aUd3H6R+Vq5F#Fmg`V)_f(lcIaNlAK+;j^KNVbPgl8?CCh=H-pS
%E?i@*<o]<Y#&h^s"c]qs?oTPCBEl<dTl4]cI70%Ye]t`_X,hpP-N\>_kpW7)YrO=D+L5)dL3UW*)M4r["//\q8J'&+18IPTEhBK&
%72Y<N9\>b3$kU6@=?5]aMU\2=+2Y*tl=L?J(G&CQgW-h6k6q[Cb'GOH$LIq4;e+`W)>#j[c9P4G<qrDsC6Mj_%%[g3jbt/,l99d>
%*@:205X]D)qI3gB[7`#;"]`i.F-K4Q;%ci`:)ef,-585"4"1(V)+&U>jp(IVFG]p#1^QL]#t[gI5-,>+m4N%1;$F#r&9##VPX<&l
%rZ8rnf#X+U53-<"_1D8,MK2U^hXdSE+]Z%Sd%o,kG=g!m$7G,TE7J!UHWiFsp./n-OLp9hT+cgXnR:1_I$XEB^]m43KIabHFJt`B
%b\[58-C;iX7@iFnH]aIHJLH!N#u%R#!Y]0c!m5k)]1H)0!a8B@U,IiG)s.h['b]3f;&gLjg6ti#1natCrJ2$)S]4^I:?,rI]%b(C
%M)P^7R1,p.0X<tZ3#K.K/Vfa9)4"lD;NX$Z!^G)bL7HXO#YGUgO<u8Ij;3P+BobYa*6"E9E]EPM&f+OT>P*jIK5H;eLFe<Z_&X@`
%`E<qmM?42HfJ6+*5"LW?-*rPhBP5OdTkW.^gGG0+S$HI4,RYuPOKp)5hWNtS1%!-#d*cR8@Mmo-l1t`7JM;fi\ijTh'3V"m#`Ph4
%<15(rO7s+)T-cpr:(V3"0a&;]@a;IeVcmltWWN]5S/c%e;ufCQpiNI5Y_'+7!CMs38,s>2kB;ngC57*<XV9T42o]A^b,DRU7ec=Z
%O;Eat4fH)^We!^!Gd[mul3iQh@!mldKrJ%ELhZsa5#(!N(,^ZY8`CLR`T.:;I],,$HfKM]e7k@LWAlI;0VFA>:5'f?m5IuG'M^/`
%\/,gD9\I#^9"AOT:2d<]d.XjT]7r@&n1ZYk.(e^2[4%IYe#JXr6<t%h&B!<4b6M9ZL;c`UTWgC'Fc1fNA1W?GOGXUs(gtKF'^l9S
%S&e"eI1".PN%"n<+f067WM$*N5T6iV@ZEd/ons+;BS.HBb\]*g0Kk@LHNGW$Z6cfpElK+O;q<Ip7#:PN&nNA`#tsXl,WOn?1u=6h
%;.$OYKIuQ0TEnQj;RI-KC.KIu05caMMTW3NXRX]Qj#0<(Z.b^5J`gKbRc<FB9mKj*7tF(S'g%M:'c8kRg?\t5nKJA6o`Ahn<9qh8
%ToY`[R7Opq*YupsSZmmg<!Y5rH6eTWjj.Jffh&G0_0<MQcM@Xb,2IPSF!)\J8@\j1o2/XfN0LWL3!3J:cn<DY0VIode`i6FA<W0f
%@4Tt!GVEUr''`1WnJr%_;_Z+^a%$V%,9*7XR'B[Oo;rIgM0dpRB]ONcY@)t!-:ka,-]IRG>J^]1#:?OA`JBp(3&"3lm;>HS,L%VA
%HF%^/ESIL6NEh-V-ENneEDW[T_qPdW-I1"kTt4tq.$_6-Z1(d(3K4Hj,lO;@B"/Si<'K@1BK9L]0^HOWN(;L;K#mlM\7h5X!9k2D
%0W6c:(@cA0;+\,\'r<q+WHL&J@)3Ls-XQ)D[s&6]`F1iec2$c7RR*jj@%\t\@8%&o/`)9h8CluJ#GUPs`rCHGRSh5a#_DRUX_j%e
%MM27n.fHW,P1(];[Mie.1WmV.iQn5KEpegAZLMAhEKS`o6c)`#?q\NpO6&kt4G?'9Rks#Sh3oU+K^&\Fd.#c)^]A)B)LT=PU\f=E
%<FJ#@>r;1YAcksO<3qDk&B.(s,ko4`A:q:-R#qfE(CGT+'.&,S=sV$u*n;B@?`Fn2/P)WiNPbqRPqml592P%J@+C"FO9jhYrH.Vt
%W'hIg"tuJiaM[@EfG.Wm79:"YAS$pO%gWjPgA,P9@)@MC'rnbDF)2!O.$%!7*CeWl.o`NC#f))oj_=V)6:qkuTt1ob(t;EkR@ma\
%[g8#RkZAWo$"rn5>S(29SRr*0<@FDa7,<]XP<@@D@#bACVB@EqUT9kdY_*ecN:/A'8e8lqJcb1%N,BAmr>\ZH(:N0IP%#-J;B&pE
%UXZT_nu4<p+=X^p0u">V>C]^f">uM!d,!dd#unu"g-`PB\L&%ZU^IBg+EuTe[#oGbmXb5)9KWAR5ng-OGU+BpIY"rCJ3-nAn(o1C
%de=$`U+$IYTmMJPc_Q7MD2A<%SFQReLA$:@1^4G\YSf\Zb#2o>Mo(>a1n4k?e^G@#&=g*<hG9or5DJhFQdP?UX#kECK2Oep[DRRJ
%$Y)f8JMj3Q%BfpR\l1"/e6\-M$7CJe:5*35oqbi>"E@j:OX==r*7o#q0c7KG,RL7Kk!56.Ya3dK^&/"h4[su1(,2*2YZHqVXqS--
%Imo]uXo4,`E9'rk;.B%3RPXCY(<I[EXGWA<NWo+j6!/c"#lt`<(^Q8TgP+NjblR)ecRBMs[1?5QdMM`m*X4qVh;NHt9AVd/4I=8H
%!S(O$S'b+h/p,VKARR[[4\Uc:;)SC]6Fk'O,QNHp7e2YgHo1fKOu1#ba,*lN7m%N0V(3u#[$J(;Df(]oVi<Lt4UPhA9I[!u"^Q"]
%J2!uF.(`QQY'=@]Q1&`XMYNR6qU.D3m0&q/GmoR$kL;"US`+mKFs.C-nqrE[p3OHYO$.Fl.cdl)P/*@nBp&H5!AQL%(oT-CN@'M<
%(RA`[0!h@Qj94q%g0.c,D,Q7oRX&>Ae0(*?l%W9qX@tppdC8@H+`3_]CEKOZB.Mt.`Y2Hi5u=_kAU%S1cJ[L5*GR.DV49;H^Bb\u
%MZhgh5/XJZKOIS192XQ#?C4]p(s>:DbW+e+Si.rD.D1(gKkLU0DO@f]G;KD2YN3><8N=^(TQGM,Vu)D-G8EY=oMA'k/S;mhUjhRZ
%2eDb53f$ssiKYh&E#8jt6%WuFEjVa>i2q'*Ljl:-N;D8PYd$^f:2uOc/!?'+L6N//s'Hb1Tf\8m!a[.\,`+LUL=/\/=I6fBTr@^j
%?EFnJH0nRRaN>c9%$gcI(XL$I-$jQqQ0ST;NFbV[G='p7f!eLEO1G%ni5YV9.L=jWUbot?eC`hA)37mK#;#=amDro]eUZTn^TaBg
%hJcu3%38!+1;HLI$:INYAXI.$dUc$b/3Sa(1Fk)VVF%lXUr(l)#RYDC$B7QGJ<G(,ML@5<>D3jFdQNQJi6=Y(n5OIEUD`-Me"$ct
%b:?Fi-C2@oq_eO_Qbr^]XT1if&+EaeW@>J[/6UI[n:fE%b%MT]@lT:\)i&U7^*/]&I%`6E@Vf9Qbr9!_JR.83JU5],:bkj!N+8GU
%]).lP6-=8f4'7Z&!Ckhj8d8u_XjQD)n89ki%sY\o.>>B=3<n?M-(_mT0$?R^)_OSKYk/F!(eI%B\!M?%A<jN;Aie/_.'ugPC?SUP
%F?,h"EQi\3*[sDs'i&8@!t$TDd\Q(nl(`W921`H+K61`V"-'ugo)[U"r.s<6DQGmoZM55[CinQq/3W<N"YRE!<#!$oaAlnq@;[gh
%H7;gnL;OR`E*#]Bnnb=Z=YC4_WdtOLOV)&L)HS/@G+GoN4+)cNfQ'H-HG_3P7<UY&$:ADp.^ITsq!*M#l8*6!%$;W3)%>pk6j%&F
%.B\2fi:)3;MhBG8SI!p[_QZCPGJj)rTJ-sP29UU]*N4It_0Np%@6mg'fXb)0/["GAq6mddJi]"%U6faHp%8b[Zlm>iD!>lZ6^cIh
%gu,j(Jg?W&\k4%Q3kmX&"X$?MfNhs&?#^\L+]cKM9\A&R(0[c%P0DL+nWg.;ViCgQDQ6VMR'8?S`)SVB]2(js3RI#pia%4W0s"WQ
%*&g@%3<^id<harmaQTY:-A$3'F\-6i6u^bAdHCiCDuBtLPM/seb$@uQ0,EIZ*)_P.Iu.n'&l%TZ'/Z@C=<9/?n'0c*G:JReA<A%i
%'8G_jO>ackG9$E!A)?oC\"H!B/]H5VQ6A#1nIi0Sd4HFCiWX"AZpIS4!@fcj@1X\OMHU:sh5U[kU'eqc2d,(-.]+pQ.6Lf@lSDGY
%A;='%(IR/1GWFN"oun=IF-rH73h2XF(3"[bWlkMo,?XEV$4d4C-k^o&/cul0.q;j1D(BR5?QMcT]\SM_!A\Q%F:B6R7orrU)%88c
%V5o0RQO'SO%`>nl-rXKK5;^#MkYQG_5UOjD._$b=&WL"@nH,?W0]CPmKT^>*_46#W?.dauIH\3IBgH\Pg;\laJd:LS=cZ5_c]uIi
%BhN"p,08<f\i3QT_Ou^@LaoX.9;XG*mWRqGW[MBPY_B>,.Rj(G)#Df,8TLp0eZRKSZ7']>b"<(afrMl$QA[F=/]'1c4odmF[UHQf
%25H-tjECeT*)>LZ-2J#.m4g0jpIVFDCfE/TY>!<T&*V!cGu7kWTSho&CW>OBKXIYt0X?c,0PR(/DDO,*I828:TWc1Xo>'&m>e'B9
%,Vc*-X'+5WF0"n3&6?;]bfb6sBLH65WA530:t3P*$*bg[O\LUtmTGVD5meO2eZF`ZKOZXoGUgSM_IdBH&At63^+p+1@HbR#*9hMA
%kUO/iB(V%1m]J-peR(;1<JBjh!*d96f1!be[F?Pi[8hQ.+t?s^/l7@#-,\=G]YNC)E%_SB<GJF>39Igt/gLqhg;_=F*+)oJi8hTG
%Sd_o>7p=WUc7*fW'8duOY6<3e4K8NLa+eS<ea1L(mV\HQ]HVZ5"n/2lAZK#%bs&]c7aKd*/R<qBPkJN)*L6@DO.nJMf5A*HV#a5B
%E*p>#R]Kt-JU?_%%hX=X8hAjdW05ljYQ@bQeJ:g(]mrIGH]_MM>q<_O2-E?2baH8[ZK(4jIHrnBTS+Qe7>D]U\@[Z2%2`["K'gHf
%d="`hm^/rtMYCORPP0Ekc4sI27iT=@T?Yh7qZ`.qk-$1kbqZs_m==h,O.CrZO,QoC0STGp#oJ`E+.Lsk25C7WCQ/\>3"SLkra/me
%d],s'Xu1-rs0*j[3]KR`,Mo,3NZ]=gJY4eJegXe=lB^^)n_a4,QT+J>HPP&'Ln2(3^W_Xmp[VQQI-ENWFT`?Xl)Eg9mj<oDMGF?u
%p8(q/mp,L'hE"JF>a,6FBk68t@3WoGg0maMThDXrBVn<IDC-;=*CfScYs8U7[12H@K)-$p09?6ZI^YZ4],*\iOK\gR?\'9n/FpDY
%>Bk(%d><"!YXYMm`*@HJ7[bGYml=l+Lt;$coDNW<o:r6f3.QXg6J#&g8K[GImFC/[C)SfV]Ab3t8T%DUd4iaZ\"m2YK2DNYSXb:1
%FS&]?1('YtH96[2,OXX/\(2"ZRF2kg==5.&nVm:,>og^nm),`f5/&)k4XAP?jF4T+fY#gbrE<\SMY+2.VItI)<1nZ"PlsW?TkmA,
%060Xd/[M=e^gIN20dE0:4IuER!f<A11E[b_d??1(WKr^B<sumbN4\;@]8c'VV>[(b2=IVjKY4lN9Ii,s@#b\Jk<!+6ejZgY"[:+=
%<ca5b0D-&"4Hq%UqK50lWFB;kA,'Q'm5Y#N`;4K-V5OI$IB*3RGan,!eO@qh)dW]Cn=b!mSaAVJ=&.^-GdV7s)S:M>Rk)OVhDiNt
%eLH2<7cH4iA..pN-RWdn=q1^6DSu<m#K353@%*<:ctQN/1I3:eet<GXjgk_>KUA#^T/U(8+o+BpRCc)a/=kV"<gp5:?[g>W[2].o
%,IukmfPtcH;YXI%+\>?m#4E'EWim$bULeT-=nCrL0KHRQKFIAPp9@dPOp%N$aKbG<NdrUK??rBsNeRsbWXoD+oG36PB/i483#-7@
%4Z!-gQV"ur2o8pSM3Ua9e/a2[D'c^mX>Qt1*17<\or&"J\#);6\"hR/f/661.;ad(&D5!ncA\'VK^Z?%`-a2\/6!2C(_L(VgX\I(
%C/V/UfdB/T7UH(BlI;edW*`)4B+F#5":djo97U,c"q6u'pZ-KgQg;RlLQ8aO"2G[R5GW'6#6#fjKS^1ZpMa3@^P[i'*&F@.iU\(U
%7Xa.H+p.[UQkTNaM^n!LDFi%4'l'XfClFdhhfH8H:g_*#.^S&9iud,``t$u=&P)SpcfX3;R:c';@\hZBcSgd-fH.)9N>i%kh7]CR
%E$6*^16*LB$=Tj?f0F,@?<s&!;TF)SgsAfA(^@inG60jKTMb:0s&<Fi90dYNDEU'd<Y7tZ\hVT"J:`<WDLf<b;LS.STZ)H^(TD[S
%b/&2VbSmsd?pL"k'baepF0n6O(I9?%PB47;*`3s"/V6HrB6YMI@8fD$RW+VV1-lW"@lB*U7+qj7\RLOm'E*`\R&M?_'maCg4=qMH
%SfoT;dU!'b(^UmAT(u9.'1)k8DF2diI[b^9,K4U[kS$6bK^kp$`Oqej^r(_+ks[t`^(`V/&+ssC"Akpah@W]?P>1$s;[&G[)Z`62
%baDA9,36kPnL58`!)3IKOub#1>pJ,IFcJ>FP5km[.;CElE''lt`D2#d=(h+$G':ibRK4`(K#OX[i&b(<j5p64`?a!i%5)X6XKH@J
%6W9Aa8-/+Q4-!'ieLaNG%MDMMGf=s[bQZA5d.!')h3,?pBLQ?C=Eu'ALnE:=o:dAZ9[u*&*dY4@fG`#l>Z;Kbd+c!lCK#6H]Bc"n
%o!bg]27hiHdWHjP!YSE5@#km$WZ`nU'r^YW(6-cej63>o3L2-a8%0>MoSW>5@qdAd"mDX;LkegWYHb+'RD7*N.sCFYI;H)of/2<@
%Ea3Qu,_fF7s!pa)k#)@H/mgOmq!,V>UoaiSPJhOILQ7i<1gdkRo>i5B'cnEESijCT:S-'>-qhL"7']tla0<9./2F,m3TcBqG"Ut4
%Ci)OWqc3EBOK/t.^s#Er0J"_W;/#+1!Gm-YA&4OdIs5kZ`)%uN;4D#qqsoMB7.3P8OA$W:O@I[<&@\e^Q)#.'1R'WqB]uH(GY>j)
%eO;rp(Yk"$**T)LX]2,"8k<K6:sq`8i'#X]mpX3-?X:r!0LI.W5*8fKnU[MNI];pL]a)D.,sU>J,\t,&n>__.&a'H3NOdiI-qtNS
%<6MeUqafiHX]$:i+\,lqX+ofWUJlk,:8tAf&g<rTE$68!)fLnt1+b/GM(lEK8\qi;o9$6LWH$<MlB4gH3g/A2L3>I`!T"rn'g3H)
%+dp-OEdQ<]f+@HjT?fZ('QK8k\&F\C'+jC,+kH_9gAs)1@D86V0rl,?U#^$46!?;"L)(#q94"?.:!OPV0N9)<IVoL;_*#Wd9/-T%
%(=Q6(`X"HiJg_`dE//0_07JYrQ2-W,>(@rm=7Q-?f%gMZ3>-a7)j'^g(RX.">9D]Pd+#6EiX)>cWN$<sI5PpbA0MWf0'OiR@%d?"
%fokq=N2`O)/cRAZ6'0D,?GlWE55'eFi>5!+.PqK>(18C\"m$;ZQYKUcE\d#T1&]oRiJ6FZOsC&flJ/t-_`h[^Sjc`ef%S''5aS8`
%mSK]@O2hTr)\-,9Act\hfM#i<,uqf*G=7E!G'?RP"TeQ%1a0'7+WRD,VFKBc([hLS6,KO+"Wl%+X.H,2>KLrhW`J>p+9m_AFTF,,
%\/@Ae8jkhJEhh;2AJ/9W5*7Bt1Gi%m;2L;'Z,\,sjku"gp4Ak'IS5<n-j/'Y;BFa=<^6Z:eo9u"AlIG08qo\U:EKa_j0jU1c9Ss#
%VVG&i3J^PRmt+:L&C@+UG5!d.AH<4+VFO-*L<ak>s.AJ[N.@t+N'\^9a9g1Q2Sg/f<QgA%+hb/q?[@joFMk_e,t'UPK]F_d+(IMl
%E6-1C,*uHWpuY&"&31>?5GeQB=0Ro$M*%eIV0\gE!*Jg[a[cn>,s+b(QD^BZQH1L$h(g,IjSXc:-Vs[^>cl(8ag2Meb"`\@$qHX"
%0ODiW"VBs%/IRfEB7MS6Z=Da;c7qC+!%1^&Q$\;G'94f0q"i0PB7+!J*2$hN+?GGgCr.o\'7(@#pkQ=B&!lFjq;i2iHj,uU.lH*_
%'EK>.OpM@M$(&[l)h'pJ2(*T&&+#Pr\bfu-*;1McEfq3ZB1bdD<mi*Y<Adm3K>_o.L!68nSfI(k\3:NmM>H9ok*oA/B/_-F**X'S
%;bM4IMu_Su1A<p%>Zo[PWm%7MZeLDEboCM;h/.l;W7=?eC+I/Q"B>miS#-N3=JkLqbnnI93Dc!:XOV9k?R8j>0q/Ni9.H>O[k,CP
%!_n&VnA?)Sj]>Au`j$e^MCr"o9=QkDc@O9p\$2PGBQ,l3Dh%Dih4BOu'"h.X(8NdVeW"W0a/[-KcZSn@I9^([(g3&0dbCHYMft`l
%j:>>,MhWI#.4Ck/qO:QkWA#C,<cVhT4HKn//gcu=KEGt2:kUeU0)N>^YS2t(`L>W%56Sc:=AtsLkLE5rI*me.nEEA<W)HWpMGQ:K
%8YM*J4hhp!6m"%M]G@NLWRsZtH#>:d/Q$HQ*r=ink<kq9KH:qc]nu60>`j\aF81NqWa>:pdlE^CMhMI%*Vt^XJ+AAqhpnghC[C`]
%^+_*lfc:!"bSU.uqK$#j\=DsaGj$sWp*W(3r?F`=@9`i`o2gmYW4RnpTThECZ-&f4@ENL`g/h.@(YLm($S.m\HPumAFbSTSG[;@'
%o1ooHMS4iTH%%Ht"qag]j&0b(ek2\Dj#Yd7$Qm&e1*CS::tp(S)1pYK)uKR]&]1D9*`1)IjGaVE#R\n0BrqYR6>"LuPPeGo/D_&7
%NB0'[I$;OM.Z&\l?9\Eh/I^C:,]Ye5=@@N]Ig=)e#aS6.,-p,MB]dI#0kiH1`%M1I%-;nKEe:&4.:F.c%[m4<AkBufqC1(_2%]VL
%3kB9NXN`HJVl?ERE%1UEY2N?^Lm=?0JSM"b$sm2H>7f^$*J`_Cl3Z6dFiCrI%=6euQ9NsGP+'`s66Hb"koM6?At`_[iJUpPY$r>7
%[c/2PaXp@:FR^QW1KO=`jG'C>>6rc'0nFmm>1I3O2,]YI`/9tQrbe\]7,Z$0paOeg&U'DgG2AZ'.?rOh\="lM=9:pc.WYuD/-,$?
%a_\.`VkXY4M[7tT<G+<>?NmGAbMl)-QK2pCG'dK0a9gl&>#WFO8<FTJo!i0b`Ybd%V>L[fTWG*upM*qc)3\(KI]76N\J]NIgV^BF
%AWjN%Q9ndEJCMk5AD&R5/_N@A0/_jJ61PL$7F9bO[fgecAe(e`Jg"?rZ.G9(<llV\kGdGR*j6h"n=bo700u9u77ClSB@#g+p1cJ0
%?M(ZfodH:B)\RHF$F(hnBW1)NFitB3Zg+mA6If1LG`+[hqYmI`Q94)*"g3of+7Cde<V8sck,O(p\Y\$OZ/PCGbE2T\>P5HkV2FBi
%JlG)9p2\oD&t%*\W4iQ@[o*3R)^G<#cL&bQKK?HqTo(Fci11MM-Z;PE'%HbB](=>_m(@*@0XE'0;rO_P&bRo"8/f14/mHZT:&Rl#
%N0D7A^%%YGZn"cT<6."r%Nn,#I8jnBT^G[>'jQq9#=#B:cJnfXRbu&n5ps"ZD7E/anFim\!9kj@m+F=4/8sh^1<hk-o+BdYIQ.5`
%"%GI!V:L6"YG`J[,F2fl@['&VQ35'12>22"Y=EJda=ueePdY'&JQUS>!bW=?Q67ENIX@7m^rX08;3@Lm'4A7nAK.qFTc`g$%&?t$
%D'X0/S[T1,H^MteZ8$WM<>76+PfT</aP,2%3-BF9!MMQ=[oo]p9L=3+=SlijTl=[5#PmtTpqCX(!jLJslN0>j#AI@Xj`[WgNm`!d
%mujDQ.Ap$/!3Ps3dXIrs"6,8>L[b,Q7hX.M</o9p2%^9<).6J8pGb"0OE0D=IcS%*78-*,IHnTW:*PEN/M8_FOX4&(C)V3Q^d>Fu
%+R?XLUD[8@:=7MDd^8+4:%9>If^qi!)7JQLQ4u3Z6+o-<JkC3.[go8&)'.t@+#iE,J]B,H-6>jSN"Za.4o>TZb\,H8DoT-;j@Qd4
%K12A)g_H%S(89?imM1gui/7<F%95p<BnS\7\moGfn8$%MHB\s`)<iVXUUOfuWk90\PM^%hBsi_$GWqaSl\<q0H9A44MF_Asaik05
%5`nh_]fSFu&$oq:3$0#HSYQhQhI.koCXE!A4Q)X+=>7p%2%phU@4Bh\BSCEHFCrZ!%1e^K*UD?*X^:O%#d1?[PQ?Xll/^J\B]m6/
%1*?-Kj3a?JbT19+X2o=[:%3G%PB&e(`1)o,HTfeaP);`KAFb+M3+?i(8a"aR7BidBi?r%)OX::fWV#Sp/Ui/JYq-e?SSdrHZ6pGb
%'_aF(CF"1N=q5cM]^ABU_qnN?iFiU[RZu!%2$Qana%2P(+)+FC9Y0<XO]s;g$*$]>GON92(=Ni[[$US.TO1;MQgPn7ME8`(>HCY"
%,-=OqGc\7X`@*SO0ff<3&c8q8SL^uNRGY.1B.uaQmLS?CC[3W39=\08P&nWb`b!F6erlF-:YEi,Uh\1/-]rLa7M%"ap?>f,A/GFs
%JpU?T.VY+^;h@Q9Y$&E1YRsH%JZS.`&udDb0,1$7VEP(NZc$'GCJ&hem(9kj+?)P-qOd'cWi@Il">t'q,O8aD%15BR.kj4n't&2l
%G3)b/pft)SFCd`8&<pCj47r@#hSR\p4%cWAVl[gYFV@5QnA=*UM_m^*\m<P#TcD+!:`dig,1LiP/dJBa*6GY:qKaKW8^3T(Xh!Z5
%Zk#+Dc:R*:>dB\[GICE7E0q5>16?,4)h82KjF7$/H3VgkUQ\5OqG7Me2RE6SrQ668;6U`2&5rNofdZUYZ'M)43YE.2O38%NeP"_q
%_f2QN@&PJr(ol0jmoZ4n%@ERH'%+gpfY26nXeBeF=b5\n,aeKUfn1Id@f.c+1@ue.TM5&GqeZfTJI']BfZd\/>!4#7U)6(HmsmbD
%JtT^K>H&[g51V1:Z1h2(-2(oEi24<*N2cO$SR,W(Pa++3fB*=RhM32'VTthbiVg#4:QQ#_>g6nYO@4fd[d^UVBKVG`;!TZ9hl!h&
%d(,$D&LHstq1NO)5OZIlBgXAAJT^)Y9[C`9FFH\j6LJ*/fk4'r3[VD'(Q'G7E-;N9?DjB<$1%JV>O5a-Zpu/sQ<)^<3,(>SmgbL1
%^F6K*HbAe#giU(FgIomM1hnIaO.i!VTJbTudj69W`\`PCW(I?'?;*C-$Tm85%,1lZoR3b,C;N%'P)b'+?`7IZ!?)oM,CRL1%Td^C
%aps2\K_m+'B"!&V2p6ssc</!L.6?tNIK8n(n+RWOg9'aI$PjBFrKu*'!r.O*>Xua%9j"0*aeu`\0+pD.8A!J.:6A6g%a!rU).aa*
%RQI@&[a>Kt'4;S`PIkN`JYQp\Z+JHU\<!Q=:#lRLHd0RiYn?PCe_N`q!`<ppC(+R2ae)a:4*uY5JNQSiS_[)ui;jcqKS+l//Y.:,
%0Z=su3m]+/6S5^BR&DOVPI(dK6ZZ.E:3cWi)AndSf*e^Kc:sl7591Za<s9[Y1oK!SQm$tB2Vdi*bgG\O!iT)>X9GQC(ceCY8A)K.
%*E&57p`\;el`Z/3eLrfIb6IP-0%37?Bl%\&9L0'V2trSnB.!K5,,CJu&s*r"HP:4N>3oB&./ctB%j@gDmm6@U)U!IEkDdDp'-EY*
%Z,A&_(",04I:sleJt-q!keOuFFd\M+(MrZmTm5A%>ol>d24ufXP;kc+db>O/%00?:Oc8BHBTm3ra9BJi'5Uoo)sY[UW7OqU'Fi$0
%#)1@raR,&<Wb4*&(>G&8:JhiJPef<P-mfQ"%8>2[3W[>3J0W8Vl$5VqMbOCeFqTk\Nt.T>6O,NJKqJ]XjBFh774ioK_pdA>b>tWR
%%nN(lIj]j/`@4GceR9<X^@Xba*q3J9+]\%<-Qh6jQ8p`Mb"I1Ck?Q0bP49]D@SX3"B;aQHW5&bDkUK*r1&'LD01uK\T$81qK/Nu?
%CPn*bqUhOhihQ'U[q/7KJ'u[!_J)Y!UA<:@"^>#7DH'<X7oq[u9/f)<;:0oAlseuJ3?FW/]i0ghIOrX?8k1&UVD!qo8nQ1]$$Xd;
%n[k]TjF[Z5V/8(ZEra@DWW*>=`N[@'3JmX(G.S-rQXqpHKkn4%\C/>rajAtts#AK:;72!,Gr<n38dGpV6Mk=4h>,SQ-I%fukPPB5
%auU#ZfIgk?&&^<5pbA#dVX#gPC`iN<OZ"k/%jtVk<93Hg.a8Sm48La'MNLbQ,V+\T%B:q7Z,L<7an;HC,WrB;Ma:L-Tf64.@gO]D
%K"U&m2l,B`/i#b/)d>kN]^A*72>R['FBl*Y5G*fa5F0*%[>Q[X,1iNW(^aUNZX=o/i8MgG!S&kkKu3&u`^*[!K)/rRb#4o:5tdf\
%[-3XIX*Q<\]!h9Xg>W/sXCFrsaNN4k0ZR'*dY6[.pre7Y79sY]5^hBj"Xq=X3M/s,P3%dl-"%D/c[/8e%u+E8=aZ+bn0-->;ShnX
%OAlYfS:5:^kUT8/or\He\iJD^k7l\QTm9X0X-D[-(D0t&!OM6+V68@/l4RR"ZcW9RX<`YunX(k#UCEcPh5nd5B8G\0f[`amm/3.`
%1L:f9e:#>A12tVYIQ\n(\"h9%6c#pB6eV?S'-U+#/Tta6Ze2-Y%M.?<>nVq-&UjRndU^4&oZSTV#mEeC<LBr?MaG?Fdn>?']dgpo
%'&h*J;5=JKSeqK8er!ZB-jbiEbN!%7AdTMV"fj#WB,!;sLZB3^d%#(8J$4f/!TU_@Yp3Ni[(&a`@&sZ\rcU?`OktJBbG<d?UBR9\
%s&]@Z@P!_:-$0d&53kRNW1f]a2ls-j+4gYir1i0K<\-T'r#8pPG0B@a_kLO(6>0C=!j+r9(PjkfI>Y->VoEJ"6oIi1G/e5d^%3ho
%-c^u'K-7564uGWWq6M4!.GcD)b`:4u-s0<B@$E-tehbiV;TigS1+0hY/Q$?/PVgbOiR;"&s..U4e%Ir7E==n1Y"t0$A>b-T*>\8`
%I5l2f>IeuEQqCi;*-R6iCpLV^8\#UBl8ApMZ2r,)<0\4ZTWhp.o<0,H[cOT#Jb#?q)NWDmCjX)6,LJu/2-MPO%(qVfZceeTZ+#oN
%Ek(<Ip456::%Z;AgQnLF+PnAaISuJ<AQ9(ak>8^0nO)/6*4?=_`e'6gKpGVbp)2U=_3976R/P)e)Mk5TcF<.mE,=*A1i@^rk[0mY
%.DCH:S)e+W%cV1do%8)/-F8MiK9KL1o4m`h5C9K94pM+O)!fe2GI6u83:lEL:CbA(T#1&rq$l.,V`gcjZ>*1k1htYCIar$$LFR'h
%J:uZJT+j"[:hk:bUTf<Fmo#S(MS_i*!%0Cr0gA$G4&G%mnZHuW5Dkkkm0,SM+)H<[]/jXS6(=:OOujt.BOXuNJMVH!F>-a!noa3m
%Gi\89:60TY(Su7c(k/_kT>li;qK2Q9k5n[ROKqZ;5%FC9^Kg`t_$$4EZ\STq=!(m0mK']*mH2\#m(af<fHIH-@LFE,Sn22^)Bg(A
%.L<nY[I^hgC@5pdjcH5r)SYT2?3Fr/p5c5:#/R"NY"[=]k=3og'M"a?XsnNc=0tCX;+'-id/8J`+B)XPQYZqMHKG@'@qeT/:R"!;
%cu#?QPIArYj3e8?gXqch\DZ)_&"NK#W\$-*-sEe_g5!!1p=MCWP'a.ibbnG$A;?QrHZV$p]"-$S+QHUcrmZVgNIgg9Eq,(Ka[9Q=
%O:7d@:9u)Xmk%0jAF]8$W$:/k,jDW^fr_s]_`*cd'?[Y(R8=Zt0`RI/\q!gX[A<@Foe)WD6I/CFU8Z^@:B_\Za_h-48!s!I[Z*.9
%PVIMDF-K7Y>0=[6HDL6:4Fe6;)791L+md*hl5:2cdbaEg#-h>Q86QD!)."+6VC2$/8)MA7/I'OD_(*\4!7=dah*#1(&Aehr[jtOg
%hW/-o:XouUmWjS_a<hm>aAJ7_0'Y(&QH(.mhFlKj"q[p`f`d+1_BnVG*NAe_8`/1MqHipO:)!o*[DBhg]82@m*\nT4noI#ZHSV9S
%>*2(dU:ilC7K<7B'`]P3P'6q5#tjW-Y*[NnWer=7m8,;.c(@F+ed>L[V^.d$lVK$u9_0SPHBEqm_<U^L5DNGL7[p6fcjHB`)N-IX
%YiVog2-H;G^9ue^=ZVET*=V;ro,)>Tp[cI9_0-YAN]!<P,cD]jOJOuP_*:n/gqn7!U."&g1:6>CdpNW1pQFoLB=bCEYZ>\>$t)nu
%gtbpqT+2#n;J\i[PA])=L'$qa]O_t3RPVueL*F%04ieG,mNZjIU%uaA$$](>m0IMD$S)4^TXt^aO'Yo*k/$<]l-ok6TJEP?ZV=q3
%."T9$[nY?+Y]en0"'QW0)1lWIj;Xajm+B/$BX9=C?d#<0>>pBilU;<iUL%Ls>4kFOX!u3=<0S<&S*.D#Fpn?c_Wt'Cmgpe)R%@G.
%MM)E@LmVH'kj0I[6<Lt'oqo;p>E!gA9S$"$C,f/A.I6@1g>Qs1b3n*"<h+$=Bo@C+olgi7qI#tUgr7t_rrQ09,G@pBd2.>eGO/U$
%#qI%?:?7buG'^OR,ubsGQ]'Urk&ioGo67C+aSP#'7V@e>4N7Y,lF,7#h'tltLU='9`!$VoX$;F#:,Be&SOgm/99R/Q2O%-uMN@)O
%fT<!hY6W++FE(k"`<)0u1$MGuoKR%>ht&3la,gYIOjaHo.GP2KiBR=en(1IrZ*7^iD,`Tg;8W8j%o^>AL2/Tq'O+?H[WBt:br1?3
%b'I!h1\hp02b[Q?7$OV]7luCBiKuW&'oj'[gKc+9(5=[kWI'jgXO\VTc&Oa^UA!;u/?`4]nP)5[h^J\T04pu_6an9C8ANuDl)7\o
%4HAu%!5<fg>-XhpHj8?SoL`k*dXh_+=]EWu0*m]tQH13O8()Ap6_f7?M0U3]B^7Gt,6jFS=?A`$]0oPT6a?_rEgt>/R1HQ-L)E\f
%NGS#j0k%I+GkpIuA$%nQZJuM,qLi-D$>O#<'r)?0jQ8U\Eqq>g970S>6SoYVUR$.JHMS))Es2=\.k_mi(r(NFT2lpoE/>s-WlA+0
%2U5Q8n\iY(U+^\8?d`3I2ZX+^BV&j82M)^c;!A.+$LI*IWS[FCb0S9D5HTcd7%TmS/.'@cdcD;P0n1nrS5^+sN8h0F.KEidPaY-U
%TjdJ&mr&*/-,q^#'*/Y!AkOg;-AKA1R"PUs@ps;'!hCC:do#2Z2H(PB'2QcG2%-823s/X3YF;*4pV%"EF"kL4]Zp+-//L4bo!FpD
%"`LMiSe$sacrB43fgLeU\oI5)MXLCojJr_pUH"Z,cH5ks`SF)]Ei6;fQ'JS?%gVC.ZGuUq[3e/2XB=J^O#2qd3m]9Oe,Z89?IEY/
%gJIQA"H7AmKp@HBcIi/Z_`HYg6^U:cWf%t2X\!O"lXDotrC-<jR/ir/*Q<!aE#lZi.kn35#sorY:fIOc]R=jDITe"Y4P)go=FZ-n
%eZ9l?S^L'25G*",+U)_L2HSbWFIq%d<In\X'Gs++mq^b:<jaNp=0::Kk^q&nDS.f$"[KCt)J?DHdaI<iYBqOo$!X^'3c)t:QEZKp
%cQ9CJ"qY&![$82)*XdZ?S-m`jZ98i-`9g6pR0$-IY@OZPZ$EOU/nl6^%BciRY-)[_,teu=0c#.OVb6*V>lie3LZS3Q6a7WYF"6p*
%;S<b!]p_$c9[/-mR*VVRN^9A<pRK0CqTu3LN#1I&KVeF<5uN/t3?_"ZC'd!Y'/4cKV\\g4_"cW-q3b,OjtD[i2:O<Q54bUQY29RL
%hI=S:3)2,@C`^!2\me9HCueW6)fL*?=XWUVT$%._ZPSG.0((O46V4t2SVXX@hoV>(;Nu@HNr$>X)-fLe>gB2eP]s^DE)Zm$OJ8\o
%8(-urT$/S^i_j+d&<;lA,V4b7nc4i[kH2)fV(9[D'L0Y0Ajh&XPaR`^#^b+OH?PF81d=bs`ET9,f5(cPo92U)EkpAjSPNO$USUdA
%H%ddea%6LTHn2JGLY=iA\6.!,iK@C,RS'>>&8X6kpTTTf6nq]UY<6pLpm.^^8RN#?knA:a>tk=3KYG<1e>L<l>Vh67o:kq-Zlg58
%+3R263Qc]</SAK(%#Hh7)EK05^ot*2bg$YgoO7s_M+Sd(@jB%2>3k)QW*GCHq0nXQ=RI;2Tf^<&bemO)GrsDoXCX;C5cTY'#L)<"
%D:5U^<9B@gC<OhprAMg.V\<NJCY;Z/BW&DCd!,9WcVNrg/Ljq0jp!*Km@Nf]Ps*BtB&?aC3idSn[E0<dd#6.ga*QejV1=3dB1TrH
%mT[jso!=4iJi/]98\f[RGY.W@m9aNLe9\6]JG"qF%WrZ+[kmkZ?`"<lfT/N-T#7K0f27DSC9<J8@qMH2-/<4>KX7\TUZc&/qdA*7
%i"OhfKQAW2I/&JhSo(2NHfj!:H\!`umY2rhY(1+p2`*KDrc*1`G6RWd<\;tlOZIAYgPqKegSJdnT#B9k&d];=A-c"5Gs<T(DGZG3
%VPeW=;@dUc*ROGg`1NhFiUN;Z,9\tQ:EmsNNTKM9>0X<$Ibs-0Snb]sFFY3L##l-E)=C_"kf+B,[d:kUMQ(n:IgrBFG@ao-lh;RL
%Q"2`E]1YJdL,r"l+H-Q__C/!>@rnWbl6oe-^0Tu2!?O87G"181`"Fb(o[K/C;pcI)'!ei$1eQ'O5a\OW.1Td!l7Hp^c=O*mY[<gd
%VOOKA[U<l2cZl.ddq<4GA?;"!M/qCrfZfWC'nALM@^#1Kdr-=8]5$(cR?d;$ITE_J#Q`F9[gB,enW@BZQ8:u/@o#6tZ]gm6hnT%u
%3P0O'hJ`Z^R_3G#4<e[OWP=*8Ie_X9b6s1_q5JMiQf:k6qOYXkQ0KhL\XZdJ"@9iPf?-R(&9h6cP)6HL0/Lr7`^[2&<+i`#lg0ld
%Y;fLA."DEmr1L7.#"X6]*,bV1Ob$a`_ZC+9>VZB7`5`6\\KEpi/;=VRj)iVe.LC9uCENRol6'&?CZ!0eH%13T;b2ef/.ORLN!3E;
%GA1jFrQ\[jHJMVB&RKCAeFURb<;m.t%Oq'9"M(<N,_r;j@_/!2*,E:7/g1`tHA)</^E2`,F=Q;ngk@7<hP7ZD\<>RjKNEl2hB$#,
%@)e6bCh>2(?Yh*MVl:XX/t,.g#U$gFdNjFNH$EY;-%0c\8'CA6NLA+fY32"Bg:n\B;ikrR?c:PIU,s.[ZTZji2-HG$);eQiO!`%F
%[Q<E&Q?-<e]g5rk,R[T10f<dVT),ea1u,;dJQGKU"--[3-djDuLJQ$/pXG=TEEEE)K8:g5[8*>l[H$bXM=tYa38RcS\UTT)Z:RO4
%gT`T]dhrD[c=/:egXr.<h!Y/`qU6=;7ZbSih@G%SnkX_FHJTI<aK:mB?BNm;SCFXZooH3m5,T7A@W.<\L6j,:Xmm`<L0#DGV#<2l
%&M3h3:1<eSRA8i@gSQWJ14.H5;4^>8FHg.p4OA8\>0$DCW?(!#;fd60T(l39\?M)qlf1pr6kHG`?%%BRm9F(7-I@j<gftrR)j7Wi
%WI>&%iTn6H%jQ0m?'VK0iX:I!N@eKF>lO6Jo8Ol^MX;<@q%N"@7;>'Q7*Ea5[(^'RVN'AYRSjFJ<CVVYG&ia)P6&QD.E\[G1\,r*
%GfDtY,HFL?P36kNBe'Pl<_/UDel&dkp]dmHNHWkhWGkfX"*'=d/\uMG-2Xf>_)+SS@lm>oo3<;[)OQnn6Y\R'[LtD_W%I?UPgK:r
%l%-WN/Wa;]:*nWC?.sc30Lg:XdCUImFEQasX(E?SpIKbP)QPk6pUEVur\46T8$^G9j4LnT'03keW`n,N0p;"3WZMAk/sWZ'cG`.U
%FBi.5<2MW5f1NIGR=Fa^O6qCN,8^67/o><(RE>4L?E]`&0hV2XDrLdA5V)ZehJgT!\ulKu\rh?qA5lVRm_V+!Hr<1>@UAU]XL7qk
%#Y%YCg@\"&SCREiPVMOj?>`Ag9MgVfFoHbgM49Gqd(:b&/JOK1/'=b75NA0c'bFg+i@SGuDIjkL?rQ$0AFlZE1RKq6-&8O)k]iZP
%X'fX[JehY;q&=1CPj_OW#V[.[P"e)RJV"9#jL*]bUU%r-P6pd,A"ti7YWeo<6#2p;p>q:kDh6K(7(/c.=6E;[.B+IFlS/>6oO5_u
%Z]@hQMB\!?'fP8S(pY'C44c$,<[tq>Tn7*[69n1FN/AYS%=F^R1UfR29!ql8Bh9^e^^W-T5-#sjOb!f`drGRVCeEcS'oup,KEY)b
%&2rc78Nudh:)2kaig[$Wq2AVd<e`B%TA.D]a$p:>5[6k=c3Ghs5hOi5G6_QcZq%-2()eYXNSa?*XT/eM$%,e<MIYBA*s%)R>U0QF
%j2%DU=a\'&bKfUkP-L=DVCU]6E\h9YK0\"@=_\gUYIlP)7JVkEe.BK`U]<7&BV%^_RXT-2=(t.5=KKZiK<7XE3?mLq<Rj;d+Mm/N
%3U957Oqp3p7$-*Do,57'-:-[6K\SN0h88+!I'6LfUWjdde$c`4M?/<R;',SZ[(s[qJrr.\"n(GVS]EfkF/;DX8g%8,&krhF9$("_
%pP^FOI0M"[JG>\Bc=h7]\XP7cab,JE%VH:)*Rni\VZ$^40V?Z[!_\;4Y'kInOZE`G@SW3iC`$&I,>UA<oco>ePQ-Vs#Rj!R?iGee
%GWC("Fm#*Bhn/9$3YbdRU'.t.-q37*"TR#9P.p0dKd;IP_FH0o%YaiBaFNqm22>ITYG0RQC'?:;Z$5L0;pgq!eO/sWq/e)(b"Ee5
%UbHdXT2LA#ZI70fBq+_i*#$R.(4pQUWr>cF@9A[lj+r=`'caWQf"p_3OVHK3l@e?2ba8dkLRkGq&+?LABo&O/M,YjOA"ZU?f_Kqd
%6Bc+%)p5V`'73g;-Kp7m+$6hp,Q[TW*g%3[`GgX%ll=69XjnLF^.afr[R@g@c*X!^OsR\M<6=In.KWH70_[%Zlb:W;W3+^9AfOBN
%<='7/78!XkQl[KaIMcrol4?mN6d6=&VJm,WC,QYi;'/o@gGWROKdA%X/'s<;)`RSHgZ_+_q5+`bZY@(,<Q9kandTFLgA=DI/e_MM
%>1HRSmA;J1DqS4Q1E(jdDd%%&NNK\t$c$puKO=)l#0n9B@X.]>JJWKN1:9KV3Tago2l0;R8b)X(4Kh(=W(G+9!D9GRS_(L=\4[tH
%Z,jSDXXaQje,;'N@^L!k`7S4Sf`j9:li6OZ#pTh6AKU4Z>g7S(lZ@/NK$ts@RAeAR-\fW43uU2[TMfspo:Y=([I[DO;%b(6=bk@!
%h`46/(?S5d/r$n-EHGAcA_3(MZEh=jlVoPppmu7&/MN;d8gb,F-1Yu^<V.B7-QeC/$@eo[?'kZ-H'lB?<o8uMlNJ'q3eei4-IqnN
%]$cG9ko\UW)6!u7aC!8ULu`[j*B<pWN\dr=0"qe>g#^!tq[YU5Z!e>]7D8(9[WS^Q-/i_^;2A5SNVntE>"gD3qps`-@(BjKl#:=+
%l!@,k7FFf'7+<AT&sa;p7,^J;h&k42\$&aGI;NYMYl]G2qt7+ei6+ZZa&5%]O'K(h<kMo?4dL$"Sic8rl;@L1pMPFqh'H<>"`2A*
%i*&0Z-#SFncDcqC*PqQXc`D0Yq>.YW%gg!FAN&gH\BM1$G*Ign>+U[GkqO>N/5SZOI4e_1DTK-K(K%`kWgQj.F?j(&D&MnF;t/.#
%O^Qrk.?[0c*98ri.dY@,S>Xu-96.PZ<N^r;Y$&0NXUiMr2@78,eg+l%meITma-\FaXC8Nj0<kkZb&qRtm&JW#2kuOG,GQ%RdI?Cs
%YB5ENga;5H>Q&l]SWJ,cNCH1^Q,Z0F0i]6L-KQAcd_G_$,8k"i9q8e<$"UpTC4!*a6`P[2M"BkQH#AZ>+dq?m"E*\-G#?[,YmRBU
%4H$t,hD4a(;r7c5VV\U8E2qfaFW%oBE$%:GJYK"+,R=lNB1*iABdjB96kfS*Yo>nMXIeG9+=P^^L3OG>-D)lE[>T)#*i`!FA$WQP
%b0WqFop"/1QUh<P\@PjJ4I"S]'P1:f$jKR@<48*k9knesUU!tk+%pL)@<H.@e`9,Y81[Y<WUu>%e@TCNCe""g:kL&L/nu/7UFTBg
%Rl?c<TqLYC-$@8gC+=dWdQ$WHVVhA.@-fJ+1N:^:Kac"[e,7sY4B<Vd[>%gnCM(O-3hD;MYW5Lapl:.2,&,?ic&VMdK_b8(4iMJ_
%#=?cg@isLhiJ]n+a?1@[k9N[`3Zs'B3a!N#,jtA)14BdD`LFt<h"nm]Fc=XY;;p_?<]NI^lsb*YCU_f\^4*@0ml1gb%dVl%50P`0
%!Tt8[=p5H?PM(A"Upl4?\8s'=f>*Lu#!p.$aYUFp;?B>;6%)1MR_rXqAA4,`U6u,Lb2l-,;rkh/j7)<=4lreYbEKj2rh?oX[cc$6
%m>l_lpTNLnH>ipP$T.AS6PV8VU%jZos.GH>JZ2#Up",GJ-@,X39'[.S;<"3jgEZos1o6p)jG>HoFVaCs3Z1m#"IP>Z,\4f]6pul*
%l'=\<]dtV>::*,cfdMJ6IRies3-MUIo;StJU?WNX_1NB&(d\6S84X,\9C#`VbuATDF\=':\J.o9n/r\NgF+E/b$[PL)m+8sYFpHY
%$Y!$D=GYh*@;jU+9H,TW;p>`XZ6/Kl7Abb8PQ;&UN6532qsL$9Bii56)5oRKJG7bUMi=@O2D6*h*&E%C\;]c4B^q[^'54F.*-1_h
%dPTTm7A(c4PH+Ump76aVb.*"'L!>u3[`Z9$&B[NlN7d&oL@Kquoo`U40H7)K+B._HSG>PU''1Po:pi/PXt>]@U^X:Y3i+f.%9O_*
%/Q=`ngeIl/X.kpYZ_2!m(GAG8b:!l9^FlqQU3]TMofXT0n:6(*"N]u9`g=4E'M"^[j?%2Mi,;+]]Hmps=Nr7qmtsd_&u]>TT2qu+
%<W&dq`Zl+*^c&nr72No2M3870]81W4\[seTGnC%@".`cOC)d?<QhQ1Ie):3.PcEoe"fSn0T-n>oR\;K018GqaK#htcou)T203oiR
%8P\LakS[NNX2^FldEJS"&PsWt9pMu4dVXa0T]?N8M@rJ\+X(W';AUg[.mNV0#>1GW_*<c2'j;Z[4$h8Pd`QB+L""JtdpWWZMkWX.
%Js*34V.bL=RQbZt#ZEJsA[t3%JltQ3;[T!IZbGpsIZ$Z`$1$rV1NJ;k^Y*%M:'nnpOFp(pAuLcBTg$@\1:;7q]6Y[]d<-KO/M\:l
%"qMGd**?f&rEqq1XmCD\P@.l?39;X*;WFQj%,7?-1*T]+GQifJk/^^cBPU89fr'QQQpk,;1dHUs3CABF]A@;4qjrs2;8"!L,Lp?J
%gbW5fV]@":g<BX6]cg^[,'+[%Ukp@Q:Z-t'1?bB3HT[cQS+a@.#VR"D':4s-l+&(f&r6<8-W8'r=>d>!+A@s)YJ2-+G+/i4[8mZg
%Yq*Ld$G+F@J3T>r,n(B-:@T8++j_3qa<.eT:tam/f+<RdL=Xd+WWM+;'aHCt;`+BpcMT+L!`l9pY71pqbAZ&Xm#8TUL*UF(QBVU=
%J[dH*g;Xu7OrO/fMa=Jm_Xr^;pnj,,2:P)JqJoD+3)sI8B4Y_d_Q>-7d]fD@BaLRZ\r1'-%Uj21`FW7PS&<-!S6SrK<-sLPb#Y&W
%d6#d2!lIO'AZ$'kla*"jc#Fd!>3NI?6X5>gBFcfPUUEgkL5;#C!:),TEp]]@OOk9WpWSGJ(_/ZMqp94(%-#UB`btd5\sZ)"LW82Z
%@lTW"TOF>65AKngTtPE)/@HL)g4?)HZ)^L`6;S'P[8qJM_=GnT'V-I/s2$b$9`kB.FDEeYSg_t-9FQL_;0%?m6&h9bMR=g/QhBiN
%MV;JINW11[9<t<\NMc)"_m3IEN3ccA#lC>]J,%[2>M>T8?$7VmIC>LCFOd3V%`A[q$a3,-jl):@(-C?;FjuL"jk))#GG+-),[Xmi
%`GgWP'+B"]\iJ5$Fft8Kbo`oA[]e+E?Sl!M:tZaJ9NE#?GO*>iFogau4bE5_6oh->:g!kF;W$n5SfFu(UWR2J3sE6c0YbF6Mj/^O
%obAk+'oS"UTPe.$diD!B<gBaW@dT?2mW.fm>[E\Mp[nGVqkTO0h,mP=MU6b`r!LS:G!kaY+rP7!B<S:S"9#L,Ps1(SgI_8E3e(,2
%`Kj9"idlURA^uBaXoXI@N;[s6W.`+P]@jri7Dk'C/"%Log`NNC1:`$(_b>sQ>@L,#VT*q&g-&J=r0<c0#rh-1GCTL8aKuT(Pj@g_
%[Of'>!>fd(A?%&[o,'*F>>ZF`cT"usBH9Y]1aUBoea`sakdM<gM;:lui+6KbaM]!&\IiZAUG0*:.eNG6h$/q6gN]mG,ME.HFT3u4
%HdqI[L>\.qL:dKE\_T1MPA+#7E/N`J:^-,bSVDRu21coCq/*`DW_j6bl(i-GH=N)T8_89FO!c-F;TL^lJ\\-dV&$@k(s1Fca55K@
%7>(_odn)M%+qh,+q2J"X#6E,7gP(N*^rha8gZdO]]ir4nCu*h4o*e-V/Nr/>.9YT-MtBdm-L-Aql:.O#[-SOR![Cm(`&>KDFsuf5
%f*+gC4Wn.S8=lE,=W3qJ\X=MlBT=5="nUf56Z#GG.8=1&l6:<kZN;`:3=KM+N(MFT05i>%/FCjY9]FP%%#uRkgoZGm0Y>4l(BG2h
%m"dG4-REm15rEIGPXI.Q]m7%2)-60ACJq"78DGjbH7W8uH/qp7UNR$R::t@S-G&4d*?+2Jap*<:2sdO(2iX?,P$!IgDAI"!GL;$E
%0r2#o'Ge-upmBg3D`oPNgF9smn#`NI0DHC[TO,.1=P-0*&JAU1hqFNT@?g?uAH<At-.*6O`Uqd;\Ae_7mPS\i"bQK2?urs1.Q";^
%i57;tRArSA9;Z=M'KMslL[bGVTrM/+St\?_aPeMC!k!c<riA_]&GFCSAJGE^M84UCks[=Z7J&1HGPd,Vfsdt`mShIIAZ;[n!eMOM
%#M*!B&&.p^2P^g/9?B%^qQd`'/%k$+%gIk*GrF3U>mqdkX.n[_M+bb_54SeiHTT(31PMJUh##AHkqS0a50OejCH43kr1'/aF0llk
%,D6TJp@E-tQrM-aG-n%LTJLe]B4EBI,$Rn:39&1q[jY9K9ruja,LJA'=9OCpFGdA\rc4>Pepp5Z)\K4S08)@;Wt,)ok2JY\lj4Y9
%`Cl[r(;fRWia5)dm4p=kNmK1Xofb!]#!UP%Cu.^`$Hq?e^6s!QqP6BgC`D2uq1G,^:Lbq;#kKA!RQC/WSR7,-qI_l_TE(bJ??&K2
%"jk!KZIR8mZ`g%E82^TM>s]kqln:o4S<A_XCQ,"DknAI0>-g]\"*AX<a\<(7.6ab?OF/"t-*S'-A`>&T4JXSGh`-c.rUSQe/3QWZ
%G`!`IKN@Qp1@UfeQt1,)hkWYrq@.lt=<kc$WtGEpgQLY;ME/k&pc63s"78P\kRD3J_/,H[#PpRJB<t^UM+co90r=lWlonLCJpK=S
%?FZZF.(`Q5.HK!69&q,lVc*9JOk$NKK/eK)91WU2MSYkL"'u*F&@%q[C7lS?O]]W-JJ+#PRj45hW80@SDA.=-"r/B+dG]>!(M13D
%-_n4$$^epc)C>#8>LkF39=fE9FE.H,Cc#,oA<7:h"Y-^'c$_cnO5T\<I/>l&p=k)oY<W!M?iL""J,8cOqiC?`s79Utoj<1DJ%u!^
%:]L&*q"'"7jY+CJQf!;gTE"6/hgbLO?iL&Js7u?B07Wrdhu</h5CWRgYCHEBQf!;kq`k)RqleoVr]gDUIkcP=mKnCBo0<8Qs7"L0
%r]^i^(1$~>
%AI9_PrivateDataEnd
