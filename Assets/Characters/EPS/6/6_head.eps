%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 6_head.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 176 193
%%HiResBoundingBox: 0 0 175.8319 192.7007
%%CropBox: 0 0 175.8319 192.7007
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:32:30+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:32:30+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:32:30+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>200</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXz3+b3mvzVa/nFaXOgmS4g8n6WmpX+nozgSpLOEuUNNqtBIhFfDx2wMrAG73Py75g0vzFo&#xA;lnrWlS+tYX0YlhfuK7FWHZlNVYdjhYlMcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirzDz3+bN/BrEvlTyRaxal5hiFdRv7huNhpynvO4O7/5FfvPw4QLUkAWWKWv5ez+Zi0nmjzh&#xA;qWvX53e2tXe0sEJO4jjReJp4rT5ZYIR72k5pdAtb8motOmuL7S/MWoeVpIqejJDNcvGew5tKRyFd&#xA;yv8ADImATHLLqxaHWPNHlP8AMy6l/MN45rLzHp62CeYLYBLeYx8Tbzlkoqt8HBxQUry6bkVTOXqj&#xA;tzTz8rfzI0P8vtP806BrEskosNTR9G063X1LicXyFlit46iqj0616Dl1+IZBmNwCy9/zY/NBlF3B&#xA;+W8o087gT6nbQ3LA9D6DLzU/5NDkuEsTKPeyLyN+bfl/zVfSaPJBcaN5jgXnNouoJ6c3EdWiPSRe&#xA;+29N6UwMmcYodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeafnV+Yt35d0620DQXH+K9dr&#xA;HZHr9WgG0t0/WnEV4e9TvxIxT5lgmir5G8iaBAutanDCXH1pkkPqT3EjCpneJebyO3bqqDbrlgqn&#xA;GlxTOynF+dnlm+uKHy1q97aqP3MtnFLJWh2qpmiHT2yPFbMYq7mSWX55eRppUt7271Py7O4Aj/Sd&#xA;t6attUfERcL9LMPnkuJfDPRH+a9W8s6vo0uk6pDaahpNyokgvFFLcN9olmUkLtuJI371qMTJhZHv&#xA;eJ+Qfy41zWfMN35g8m37aVocLPbafqN/GtxcNHT02aBHQKBSqqxIIG1a1wQiSdm3JkAFS5p15h/I&#xA;PzW8gu7bXZNREfFmttQ9ZI2I6j1IXPFWPQACnj3wHGQxjnHcjPIOl/lpo/m7SV81aNd+U/MVpKJN&#xA;Mu/rks2l3TqTTjM5bjVmqULU7Md+JjVN4lY2fTuLF2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;KfNXmfTPLGhXOuap6v1G0CmYwRtK4DMFrxXsOW57YqA89uP+clPIU1s36Bg1DXdRIpDYWtrKrM5+&#xA;yGd1AUV6kV+RxSRXN5hM/m2+803kZSC4/MXWVWXU7lwJbXQdP2MUC/aHrdCRv26kk5IMJkVZ+n73&#xA;o/kn8qPLelxNfPanWdZmY/WNW1BRNMzDYkCQ8YxUbceRp1JyYodGkyMvIMovfLGnvRLq4dS3SCGK&#xA;JhQ7f76Jx97HhpJNY8jeUmRIJCZ0dSJ7KUirrQjkyOK7N9GAxigyIeIx6RqN35j1jyB5Qu2l8qzy&#xA;QtqU7EstiA1biKJzsS5FKd+nZjlfk5HEKEpc3v8AY6FJodtY2llYrJbW4SKKBXUIkSL1YkMTsPDr&#xA;3y0BxqN2WQWa2AlE1rKPRuKo8QoychvQEVAb2r8sLMAIXzX5V0TzPo82lapax3ULChQn4kcCq8WG&#xA;6MK/C38DinccmG/lb5o1jy/5jb8tvM1w11xiM3lbVZdnuLaOvK3k/wCLYQp+gHtxrVIU3xlxC3r2&#xA;BLsVdirsVdirsVdirsVdirsVdirsVdirsVaZVdSjgMrAhlIqCD1BGKvEfzl/LD8ttB8s6n5ts4J9&#xA;E1aJaWh0qZrb1rqRuMKekA6AczVuCg0riyG6Y/l35Xt/JvlK3TUY5L3zJrUgutSJrLPPcMOXps5N&#xA;aJWlWP8AMe+XEcIpxZS4j5M9S9KOkTn1bmgL2tu0YEQ6H4Syu1P8wMCVK/8AM+m2YYyEskdTPICo&#xA;jjABJLOxC7U3pWmNsTJ5J+aX5yeWP0Ldp5e1KGfWbiP6vZiBw9HkIUyF1qi8FJIJbrTImTKOMmVk&#xA;bIr8sL/8s9F0610Ow1mzub5CDLHFKnqXNwftsCT8ZLdACdhkoAMMgkTZGz0R5b1dRMb2sNxZzken&#xA;AZHLrx35UYcK1/28lKJvdjGQTS3i09/UkgAjlY8bhTsS4O3qDu3g3X3wNitZlACoqzglZHanIEHZ&#xA;WOxPwnY9xv33UvMvzx0e5Hl2LzdpqmLV/LN1FqNse4KOonX3RlAY+PH3wSFhljNS971vR9Tt9V0i&#xA;x1S2/wB57+3iuoa/yTIHXp7NlTai8VdirsVdirsVdirsVdirsVdirsVdirsVdirxn82b79O/mX5X&#xA;8pJ8dlpAbX9VTqpeMmO1Vvk9ajwbDHmxyGolJ/zP/PPQ9J9PStEI1TUzERePayKqxqoJKNOoehBD&#xA;ckUV9x3nOQa4YyR3ML8p/n9qwj/R1n5ctLlnr6iw3Zt7iXrQFpVbnTuEH0DICYHRlkgANzSY62fO&#xA;XnswQ6ppi+X/ACrE6yXNnHcC4muXWnFXkTjxSvsPpNCBKd8nGlmjAek3JW1XyJ5b1DTE04WiWkCS&#xA;JIDbKsbHgehIG4IJrX59crcaGonE3doDzHpP5eWumehqVraWtuBxjdFWKQEfyMo5sflX3xZYp5Sd&#xA;iSxvy/8Amb5+mvbXyv5e11JobR5ZdOv7uLnPNGkfJbaRpVPwgKe300AGWjKac+cYxjxSD6G/Lrzl&#xA;/i/ylb608CxagkjWmpW4/YmjIEqGtfhYUYV8RlwPENmuQ4Sm1zqsGlatDHLICZgIXSvxFfUVYnIJ&#xA;rsstC3+ScjdKx3z/AKvHeaTrGlzsVkXT9TguLYH4HH1bnHL9K1p4b4g7p6j3sg/JaWSX8qvLDOas&#xA;LGNAfZKqv4DKnJPNmmKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+SrF7/8AMb8wtTsbGd428030&#xA;j6jeRn4rfQdPPpRoDT4TNTifcLXZsCSN/cy783vJPljytqXkHT/L2nRWEMl7ciVox+8kIjiAaSRz&#xA;ycivVmwFrzbwLxDUr/yhrV1IzQNoOphzxniYS2zOD1Yx0pU/tKKe+BEYzgP5w+1nvkDzNryzNoWt&#xA;RtKyJ6lvqCfFFLGKUJcbNsdj3779QXD1OKNcUfkyLzn5jg8v6Mbt1MtxM3o2Nqp+KWY9BtvwXq30&#xA;Dvi04MPGa6PL7jyjdT3S6p561RNPkuBzSzd1E/Cuy8N/TH+SB+OFz/GAHDjFpzpfmH8rtCcSacR9&#xA;ZQEC4EUzyb7Gjuu1f8nBu0zx5p80b5Z/NnUfIusanHp9l9f0fVZ4NXk5ckZIJ0Hrsq/zlmUAnYcf&#xA;fLYTpyIQuIs0Rs988yWD6pqeh6ra/v8AT5SjeoCKBWIkUgVBoyg5aY2Q1HqwT81Y5NIstbvCSsU9&#xA;jPFCwO9ZrdoexqKM4yE40U4t6eu/lxpzab+X/lyxfaSDTbVZR/l+ipf/AIYnIOUWR4odirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirA/y0/KDy/wCQbzWLvTpGnl1WblG0ihTBbAlkt1IJqAxNW2rtttik&#xA;m3n/APzlVb3lyPK0FkGa5kOpLGiCrNW2WqgDuw2wFBIA3SLR/wAofyz87+RNCn8r2sy6xMsVvq9/&#xA;b3AJs5hCTJJdW08nxL6qUCx8SQag0phKxJBNlhnl3T/MXkjzy/kvzBGCzBmsZlJZNwWWSJu8cnEi&#xA;h6HwNcjIOPqoCUeIdObI/wAxPNMej6VaXK28U2qIxTTGkjVzDI4+KReQNCBT6aZEOJpcZlKr26rf&#xA;Jv8Azj2+tapaSeftXubfV9WhkvotMhRmnMURQOZrh1eONh6i/B1/hZw1zdlGe1R5I/8AOn8lPyu8&#xA;neTzqFjc3NprPIR6fA03qtdSFhVSjCvwqeRK0p9IwkClEjdc0v8AqTXPk6Vb1B9aewkjllYDnV0N&#xA;F5f6/TKnW8VZNu9huj69+YvnCytrG11afTdI0C0itx9Wd4wfTTgpbgyGRyB3Ow/Gw5C5+SUMfMWS&#xA;n9truteY/K48l6zcNf6nPrlho8N7IaytazOZizMfiPEwrUk13HhkuKxumERxCQ7n18qqihEAVVAC&#xA;qBQADoAMizbxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV41/zkIz2mq+RNUc8bSDU5baaXf4W&#xA;uowE/BGwFhlFwIYF5h/LPT4tSbU9Jln0yWXdbizkeI/FufiSv6sjbgw1UgKO6G0fyiLTVxqt9d3G&#xA;p36ii3V1K881PDk4WgxJRl1JkK5Jj5m8rza9Y20lvN9V1XT5xd2MhUSLyUggFCN+nT/aIBprwZeA&#xA;+RRn/Ky/z3W0+qKmiA04jUFWX1P9bg0nDl80plhyOUM2IdZMftfKeo6jqp1/zZqMur6n1WWY/Am9&#xA;eMUY+FAD0C7eFMgZW15dVYqOwT26e0FtILhVWzVSZAx4qEA3ZjtSg75FxY3e3NguqWGi6FpWkx+X&#xA;Lq4uLiS/Wa1treT1DdSyhVSIlOPIVChdj3G9ck52MzySPEOj0b8sPyF866T510jzP5guLUWsXq39&#xA;3p6szSR3cqSRpGKKyN6YKNy50B2FepkHO2AoPoXCxdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirGvzF8k2fnTyjfaBct6TzqHtLjqYriM8opPkDs3tXFILwXQvNuu2l1J5V8xILTzFplYriGQAi4&#xA;UfZlQnZgR8W3zG3Ssh1uo0/CbH0p1q+uWNnpUl3qXCyhQUN0tafFsKKtSTXwxcaEDI0GMeVfM/lr&#xA;TbXm3mcX6STVt3vpD6qbCqkSUcLXu334uRlxTJ+mvczSQWDRG5hIf1ByRFodzvUudqYuKlV5c0BJ&#xA;PIgEhQdqDvU/rwMoxtivmLzAwSHSNOga+1LUT6UFiq8mnkk+GhUfsDpkgHMwYCTb0v8AKT/nHeHy&#xA;1eWHmHzHdG61q09R7fTom5Wds7khWUt8Tsq/QD40ByVOwJe2YWLsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVYb+ZH5WeXfPVjGt7ys9WtQf0dq9vtPA1agdRzSu/En5EHfFNvDdfPmbyYqa&#xA;D+Y+kx6t5ddwtrrsKF4moapz2+B/Y0PzG+QpxpaajxYzRQl15N/Le+t2vNPMSi6oKFTQKQalOO1f&#xA;8oHG2P5zKNiB8k3l1PSrCxS3tzzjgWiivGNQPEmmwwOGISkbLGrO+8weatRbSPKNk2qXtR690Ki0&#xA;gB/almO1B2FflvthAc3Hp+p2e8flb+Tml+TA2p30o1XzTcr/AKTqbrtGCKGO2B3RKGhPVvYbZIBy&#xA;fIPRcKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoPUta0bS4/U1O/t7GOledzKkK&#xA;06dXK4qw/Wvze/Jw281jqfmDTry1lX054AfrcTqdiCI1lVhimi8R1Ox/5xte9eTQvO+oaEJHJa0g&#xA;gu5bUEn9kSW9R8y5GBJjfMMz8lfkp+UvmEfXP8TXHm+OP4ntfrSpEu+3qQw8ZUPzYY0gCuQe16Ro&#xA;2k6PYx2GlWcNjZRf3dvbosaDxNFA3Pc98KEZirsVdirsVdirsVdirsVdirsVdiqhaX1leLK1pPHc&#xA;LDK8ExjYPwlibi8bU6Mp2IOKq+KuxV2KuxV2KuxVJ/Nvm3Q/KehXGt61P6Flb0Gw5O7t9mONf2mb&#xA;sPpO2KQHk8l7+aXn1BeXt/L5I8sTf7y6dZj/AHKTp2aSY0aLl4LT3U9csGPqWqeYR2G7rD8nvy9j&#xA;ke4k097+daGW91GSS6ldq7clZhF/wuSER0aDnkeqc2/lfyvaLws9Hs40G1I7eJAfnwUfrwMDM96c&#xA;jQbZlo9hasrD4lKmtD2PXLOA9wRbAfOH5ZaAkg1LTIX0LW4nU2t/prm2kDMaf7rohr40B98pnGm7&#xA;HmkFfy5+cXm3yqY7Xz7CdT0MMsQ8z2kZEkBJoBe269P9ZR8uZrkKcmMhLk9t0/ULHUbKG+sLiO6s&#xA;7hBJBcRMHR1PQqw2OKojFXYq7FXYq7FXYq7FUPqOo2Gm2M9/qE6WtlbIZLi4lYKiIvUknFXj2rfm&#xA;Tq+vXBaLVY/KmgEn6sJJIYdQu0rtITMsnoIeyqnKnVh0BAYSn0G6Z2dl5vt4U1byz5kl1EUqul6l&#xA;Ol5bXLCpZPrFWaMmlEMbbH7QpUZIx7kCZ6sW/JXz5oegvqukX81yLmWOyuptOjt7i7u/0mySQ6kT&#xA;FBHK6/vIEY7U+IHvkGx7V5f806B5hglm0i8W5EDcLiIq8c0TkVCywyhJYyR2dRiqa4q7FXYq7FXY&#xA;q8Mv518/fmjf3t2fW8reSJfqmn2hr6dxqnWWVh0b0iKfQviazgOpa80+EUOZZTqOozqV3AmnkSJd&#xA;ui1qwH+xByRmXEARlqjSyJEdok+Nx4/PDEWaQpyXf78SCgLOfTX3AJH3AYDLe0qWratf207rHLVL&#xA;dbQyig+1JKwcf7JQMnKZCQEHfLGZb7SrqT4XZZID39S4A2FOlJFJyEu5I70luYpZ7B7vgGurcNba&#xA;jA4DLKi/C6yKdmFOuQ3ZDnTH/L2v3X5Yasl9bF5Py91OcJqmnkl20y4kNBNF/wAVEkV8Rt145EuT&#xA;CfFseb6LililiSWJ1kikUNHIpDKysKggjYgjFkuxV2KpN5p85eWPKun/AF/zBqMVhbmvp+oavIR1&#xA;WONau59lBxSA8g8wf85G6rfxmHyVoLoj7LrOsUggA6ckhU8pPY8vmpxU0ObCLz84/wAzraGSGbzx&#xA;p4eT7T/VIRJFvuI+MdD/ALIY0gS8kttPOWv3EoMX5m331gmtHkKIT7I7cae2Gh3rxHuR/kfyr5w8&#xA;x6zd6dqPmC41HQLAJc3F60tzP6M0jckS1hLvAJm68+DcAeQo1MIiiWTZ7hpnkDyDZabwjsbVw/8A&#xA;e3MwQvK7VFZJjzZ26jdjk6DTbz/zZo1loGvW9r5KjmTzHdlZLnTraQLaTWvLjK90VChU4tRHK8ue&#xA;y13yJHcol38k5sPye0S8FzJ5mB1PXNQCvd6kXaIvUcWWEIw4ekBtUcj3OHh70cZ6bBW/L7yhpv5d&#xA;eeF0+ZXli1yB7bSdXMkvxNGfWNncxljEZAqFoZFVSRyU79YGNN8ZWHseBLsVdirsVQ2qXhstMu7w&#xA;DkbaGSbj4+mhanbwxV41+SFmIfy+065uPjnvBc6hdu37cs0zDkf+eaLl+MbOJnNyLIJohNrVuCKr&#xA;awG4l93mYqo/4HIkbsOiLg1K1U3cAes5b0gadWCgvQ+3LJCVAopCMR+kLGv2Q8khH+pGf+asgOae&#xA;iF1GRjDfSMa1mtC/yVyx/wCJDDeyQpawry6lJIDSX6rJMP8AWgcSrT7jkTuVjyV7CGNtRvGNSLn0&#xA;pCOoKyr1p415Y1up5Mfl06GYvZXaeto2rxm23p8SMvw+4ZOQAORZ38wyT/nH7Wb1/LN/5W1GQyX/&#xA;AJTvH08SHq9qfitm+XGqr/kgYHLu93qWKGM/mD+YGheR9BfVdUYvIx9OxsYz++uJqbRoP+JN2H0D&#xA;FIFvkPWfN15dX7+YfMZOqeZrtibeFzyito61SOKPdU4/h86nDyQTew5MVv8AVtd1u4ZZrhmQmjIh&#xA;Ppj22+1g3KfTFNNL8mggPc/Cp7MOTH5DoMkItZyEppfeXNFtLCaUWpmeNCwUAciQPYYkBYyN80Za&#xA;XPnGDyumk6RqDaVYsRJJaw/u3lf+eaZf3lT/AChqKKDelcaNJJF96qfN3nfUtKm0R9cvbS+t4xzs&#xA;pijuyAChiuSv1gxnupkP0jHyUxAN1bE9B80+bfL1/LqWnX88FyjBbyMMaErWnND8Ljr9odzTffAL&#xA;DKVHYvqH8nvzPh866fetJafU7u1ZHntxMJ1Im5AOlQGT44mqp+ffLAbaZQ4Uy/M28tpPKkV7E6i+&#xA;sLy0urMKKsJ4LpTxU9uRjKYDyWB3emZW3OxV2KuxVD6lZi9066s2PEXMMkJbwEila/jirxT8mr2W&#xA;X8rNFLmsjxSxCn8sV3Mg/wCFUZbE+lxMw9ZZPZyA3Oq37GkUThB8oUCL+NThB3JYHolWkK7XQZ/t&#xA;CEzP/r3Lc/8AiCDKwykrJcyza60JoIraN+FOpLCMmv342itkQ1o15HrEatx4kqvarxxoo+9xk6u1&#xA;uqQl8G/S1ostFaW1lqvWlQf4rkCFHJEaa3K8tSNv9x1sz+5VitfxyfUe4Kf0pbPSPQ7Vz9m2uK1G&#xA;+ySMvXKyy6r/AMsm+q/nL5st0NI9T0yyviB0JhPoA9f8o9sB5uRiPoey4s3xj+ZnnWTzPreoeari&#xA;Qy2sU76f5YtAf3awRGjTU3+KU7n6fAUR3pPc89FjdXV/9WDmS5cA3MnhX9gYaRxULZrpOiW2nQq/&#xA;ANKOpPb5ZJpJtM6qBXv2P9nhirasXP8AL3I74qvildLgNGPjBBC9tu5rhVZq2nHVrBprdjHremqZ&#xA;rGdQOTAbmI+IPSn9uAhlGVe5h+oSQyz6fq6qFh1RPRukHQSD4fwYU+jI31ZkbEdyZflz5xm8heeE&#xA;u3aVtKuFeO9tYSqmUGNxD9sqtVkYGpO2G6LEeoU9m0GWHzb5g8uaRaRzwQ2sxn1qzuOJeJdOkS6+&#xA;L02dOM00sHEg7hj74muiMcaL3/ItjsVdirsVQ+pXi2WnXV65AS2hkmYnpSNSxr92KvGPyhsRbflL&#xA;5fZv71klYHp8MtzLKPwbLuH0guJmPrKZl2Xy9cop/eXlwYxTvzmdDkP4WPVF20KjU9RKCirIsSj/&#xA;ACYYxhI3KDyUtHgRr25umqWM8ijw4R0H/GmIG6ZLLa6kg0z1xvJfT1Fe/qTkfqGC9vepG6hrcqpr&#xA;llICDwt2DDfaitX8TjI7hMeSro0x9WN2G8OnwIR/z0Lj8MIP3IkoOp/wuiMN5OJp03kkB/jkeif4&#xA;kF5BkMX51w8mNJ/LEkHEd3t78fE3+xFK5FycX0n3vVPPN69h5J8wXyEh7XTbydSvUGOB2FOnhi2B&#xA;8QagUS38t2g3jjtvrLL0+I1l/WTh7mJ6ld5QUvdTXLf7sl+17CpwxYz6BkV9ruj2Nz9XurgJLs3p&#xA;UY0DCorQUFeu+G0CJKMM9sLZbnmiQsyqHZgo5PXiN+p2xYrbq9tLOMPczpCGPFXcgV+WKQLXQzQT&#xA;orW0iyBv92IQR9JGKEy0ZHFyjrsFNHB6nlUYVefanBw0LUoU6afqcyQnwUMOn3nIdG7+Ie5A+ZAs&#xA;iQyjqyV+/cYS1wNF9Uf842eVxbeUX82XZL6p5jPJyxrwggZo0VSf5yC5+Y8MgG09z1/Ch2KuxV2K&#xA;sS/NzUv0d+WPme6rxb9HTxI3g06GFTuR3fFI5sf8uWf1HyR5f05VJkisbZSBuapCvI/ScyZfSA4E&#xA;zcilcZDXMNgD8SXc0zL3CqhkUn/g8oZeacaP6Uo1GYkcnkuJUBIrx5stfwplkd7YyS+wme30J7ro&#xA;WSWSvu5Zh+ByAOyTzb1CJbW10aB/hWNBLIf+MSsx/E4ZCgFHVCRzpcNrd4orHHZrFGzDcGUD7j1x&#xA;jyJTXJEW8Qt7TVJiv9ysVuPYwQfGPvONUCg9F13EVt9Lt+hYwEjpskfM/qwSCjqkP5e+rd/npI0R&#xA;rBYaFOJiezzXxIH0gg5By8Q9L1j8woDceQfMtuCQZtKvo6gVPxWzjp9OLMPiPUSrHQ2Xf/cZ+Kqy&#xA;n9WHuYnkfereUFDWSAioLPUfRhjyY5PqRUc2jprmtnVHjjt2iEfBiCzBYQqhBuS3SlO+DvZUdqQ7&#xA;qw8m6QsoPOTUIdz/ACKsgH4Nj0C9SjtSiiu/Mmm28kayxRWZkZHAZSWlZTUEeAGHqgGoti2tdP8A&#xA;OLWum0W3ltllurdDVIpjWqjrTahp74jmp3jZZroaBml9uBH31yTW8+vUDeXfME+xRtTuAtD35R/8&#xA;1ZDoW7qEo1gH6pb8uoiSvzocPRr6vtD8kf8AyU/lj/mDX/iTZENsubN8UOxV2KuxV5x/zkU0q/k1&#xA;5iMdeXG1BoK/CbyEN/wtcBZR5vL/ADv+Z/mK21IyeVuX6E8rm1/xJqHBJF4zSLEtsOQcVPI8uO9f&#xA;DjvdLJUnHx4QRZ6vWY9JtIbpLwoplmLRmYGtUZaL7ZPgpxrY9pUk6vPOqn0VsriNzQ0ElRLueg2Y&#xA;ZXDr7mZRpi/3AWdtXeR4kP8AqooZvvUHH+Fj1UvNR53cdqp+JLdIVp2eeQA/8Ihw5EwUtDh5Wt4z&#xA;geleTMWUdCiN8P3GuRHVZFUvkmi0269QESXErSMvas0m3/CkYyUc1GXVdNu7xvqVxHP+hIZVvAhq&#xA;Y5uQURt4NRsJ+5NGvehf+cfrP6zr3nbXmBPK8g0uJz0Bso/3wX5s6nK3MHIPXtWtTd6Ve2oBJuIJ&#xA;YgBQH40K7V+eKvgr1C9r5ecUYm1uYiK13SSSgP0UwjosuqN8kbwKtPss9fuwx5MMn1KN3oyXd7rr&#xA;x0a8sn+swmlQyqObIRvX4a/SMFMxLkjNUvfrejaPIFojXiMdtq8Ph/jhPRjEVa3UNOt9Q80Nbys6&#xA;iK2jFVNCKgsenzxrdRIiKc6XpFjpoZbaP42+25NWI9zhAYGRPNkuhOB68gOypX9f9MKHnV5Jx8iz&#xA;MOt5qEz7d/iQd/8AVyHRu/iCW6/8KcP5FVfuBwlrjzfbf5S2n1X8sfK0VACdMtZCBXrLEJO/f4t8&#xA;i2nmyzFDsVdirsVSXzp5XtvNPlbUvL9zK0EOoxGIzKAxQghlYA0rxZQaYpBYdd/lLpOjfk1rPk/S&#xA;1M801nNLJcuKSXF6q+okj0r1kRQB2HjgTe7z78rPzktvMOoad5UvoBGn6Phit701DS3tvGvrJvtu&#xA;N1+XuMyIZBLYuLlw0LZXa+dfKV3rmveSNLMg1O1hlklaiiF3CqssaPzLM6M3xDiKb+GGxuA1mBAE&#xA;im9ugS3jSUVkCLQjs3Hf9eVhgUpdDPrjxI1DGodpR8QWsQEZ+gyE4K3Z9Eu80+abjQf0fonl+2+v&#xA;+aNSIh0iw6gU2M024pGm5JJ3+VSBdMsePiO/JB+Ur3zZb+YNa8p+cL9L3V9HaC+jvQFVJLeZVc8T&#xA;RPgjkPUjvTCCSzzQAohgXlHzBfaBql95u1OOvlHztc3qW8xBos1nMZIOe23L4418d/5TkRLn5tuT&#xA;HcQBzD2//nHbTZbT8rNPu5/96tWmuNQuD4tNKwU/TGinAzk9LxQ+C9T08WM0UfT6jq97p7LtRaMK&#xA;AU27nEJl19zfklgklzEdijsD/n9GSi15ObLlop9RRxam56Gg98kwUpYYp4wJFqisGUfLpgVp40aZ&#xA;Zo0Qz04mSnxBN9q/TiqtFEjMErSpoxJoN+5xVHxSi00zVZAQRDESGHTYNuMKh59fLw8s+XbCm8re&#xA;s/uJJXP6qZDo3X6iUu8ySDky99h+H9uGXJrx8331oVh+jtD07T6U+p20NvT/AIxRhPE+HjkWxHYq&#xA;7FXYq7FXYq7FWCeePym0LXfLS6bo0UOhahZXH6Q0i9tIliEF3UFnKxhdnpRvoPYYptgHmH8nNR8o&#xA;eUNC1zy7E2rebfLt299qroGMuoR3W12lPiZjxChe/Hl+0cQaNqaIp1h5c85fmndt+k7S68q+Rkb9&#xA;/bSgx6hfN1KUI/dxDxpv/lfsmUra4YhHzKpeeUNe/KjVJ7ry1pNz5h8k35V5dMt6zXtlcKKclFGa&#xA;SJgT8u9OrGEuFOTHx+9kH5O+S9X/AElqfn3zRZtZ65q/7nTtPmqZLKwU/DGQacXkoC21duxZhkWQ&#xA;AAoIH85/yz85eYfNelal5UZbf6/Zy6Nr14WRfSs3kWQPxYhn+04+HfpjadurN9U/K/ypqfkODyRc&#xA;wsNHtooo4GjKrMjQ0pKrkMBITXkab1NeuK2yDRNIstF0ex0ixUrZ6fBHbW4Y1bhEoReR2qaDc4oR&#xA;uKvij80LR7HzL5wt2FDa+Ylv9uy3gkkHQ+4xT1+DH/Lr+jrt5F0rIGp7NX+uSHNrlyDLyDzo26k7&#xA;f0wsHE8DtvXoPDFVyM0MiugDtWpVhUH6MVaFWY8dyftMO3fbFXeYKweStSnrx5gIfcMRHT73xPJl&#xA;DmxbWoymr6PYU2srZFb5rCv/ABtXB3Mr2JQelWf6V85aJp3UX2o20FPaWdU8R+vGSMfN9+ZFm7FX&#xA;Yqk3nPzPa+VvK2p+YLlDLFp0DS+ipoXf7KJXenJyBXtikB89Xmqfmlr9vFreq+arvSBdL6trp2lk&#xA;28MKEclVmU8npX4uVfnkCXEnq6lQD0L/AJx+88+Ztej1/RfMF2NRudBltxDqBULJJFcrIQsnHYlf&#xA;S69d9yckHKBsAvW5JEjRpJGCRoCzuxoABuSScKvnvz3/AM5HatqOsHy1+W9us07FkbW5lDIeJIZ4&#xA;Eb4OC0/vHqD2XocBKyIiLKUP5Y85XKxz655y12S6cByLa7eCFX7+mlCB9wyNuBLXHoAkWoeZvzP8&#xA;s61psOkebtQuY7+dLZRqT/XR6kjEICJVfZuhoK5KG5pvhqbgZEfSLeu/lp+dl3qmtR+VPONpHp3m&#xA;CQEWV3ByFrdlK8lUPvHJt9k9fY0BnKBiaLZhzQyx4ol65kWxbNLFDE80rBIo1LyO2wCqKkn5DFXy&#xA;5r/5i/mJ55urjUtL1W60Dy2JGj0m3saxzyIhI9aZ0Ic8qfZ5U7e5iS1ZM8YGur1H8i/zL1PzNaX+&#xA;geYpFfzJopHqTgBPrNs/2JuIAFQdmoO69zhBbbBFh6phV8mf85Eaf9W/MLzKpB/3K6VZaiveptnW&#xA;3+jaI4p7nl1jcFddjlrT14UavvxFMkObCQ9PuLOoJmlt1ZgCzAk06bHJNbcYcBuZDlj8NPDwxVsV&#xA;B4DrX7f8MCqytEqKIqhxX1Cela7UwqpedU5aLpOkj7WoXkETD/JJ5N+JGRkzx87Ypq1z9Z81X1yD&#xA;URQsU+ZYkfhj1X+FNvyW0/8ASP5x+XIKVWGZ7lj2H1eF5h/wyjBJlj5F9uYEuxV2KvLP+cldRFv+&#xA;Vt1pyH/StaurWxtVBoWf1lmI2/yYSMBSDW7CvN08NjpkEDMAlvAA7Hbt8R+5a5B0+MXJlX/OM+hy&#xA;W3km78wTqVuPMd7LdJXqLeImKJaf6wcj2OTDuKrZU/5yC1e8nsdE8kWExguPNV00d3Kn2lsbYB5+&#xA;n83IfMAjJwjxEBqzZfDgZ9zyf8p7bSjqeqa0yrDbSS/U9Ojofgt7YUH/AAZoW9xkMhs7OBmJEYxP&#xA;PmfeWdavqiTN+7PwgUQfPqTlbjPM/M96svmvy/ArD9xdfW6V72o9QV+bbZdhHqDkn04Znyr57Ihn&#xA;1HzL510vT9GtpLrWYL+2vZJYFIS0jSVS0sjj7Aof8zTMjUTB26tfZeCYPHyjXzfXmYzt0Nqlgmoa&#xA;Zd2DsUS7hkgZ16gSoUJFKdK4q+Y/KNndaXPd+R9bi+q+YtFRvq4H93dW4PJZIiacqqf89wKyHA1e&#xA;Ig8Q5FApq8nk/wDMDRfNUZ9O2ScWmqAdGs7k8WJ/1CeQ9wMILdpJ2KfWeTcl8+f85NaWR5j8t6hT&#xA;93f2l/pkzdgeAeEfSzn7sRzSeT5sEwT6nIzBZI+UcgruKGg+4Y2pHNktp5wtIIVjcgjuaV379Mnx&#xA;Bq4CndjrVhdqHilHuOo/qMWJFJgr+otVKn3B22wqirK3WSSrfDDGOUre39uKpZ5mumn8zaMjAr9W&#xA;gnu3Q7cSQVjP0MBkTzZx+ksQhblcarN/lLEP9iKHELLkHp3/ADitpX1z8x9T1NlJi06wdVbwlnkR&#xA;V/4RXyJ5s4/S+sMVdiqhf39lp9nNe308drZ26GSe4lYJGiL1ZmagAxV896prj/mV5wi8xSK8Hkny&#xA;6XXRhIOLXdwaB7jid6bDh8h35DIEuNqsvCOEcyxnXIb3zn5ps/JujVWW/fleSrUi3s1NZHY/6uw8&#xA;encYgMdJir1F9T6VpllpWmWmmWMYis7KFLe3jH7McahVH3DJuW8b/O2NrT8zfI2pyn/RZEvLUGmy&#xA;yAKwr/rh6D5ZbgPrDh9oRJwSryeX3eg+cPJ9/e2+nWT6poPrNPBJEwEkSyUbi6t9qniP7MOTTSB2&#xA;5OJi1eLLEcR4ZoCTzJ5xvf3VnpLwsesty6xovzUcSfvysYJHo2GeCPOV+5uHy7d6bY3fmDUJhe6q&#xA;IpCtB8CLHG0nBF8PhzKhh4BfVw8ur8aQxj0wsPoH/nH3yxp2kflzYajCRPqOur9f1K82Lu8hPFCf&#xA;CMfDT+ap75hvQVWw5B6Xih2KvIP+citD+r6Lp/nywTjq3li5iaR12aWzmkEckTU3I5OPkC3jgKmP&#xA;EDE9Xln5j2sVz5fvJVA9N4mmjH+SP3q/dxyAddpTU6e0Xf5t+X/Kn5ZaBrWtTB9T1DSrW4s9NQ1m&#xA;uJXt0ag22Xk3xORQfPbJ27Ot3zL5x86+bvN1zFc+adRlEBla5tNNt+KJbgii8B222qxLZWZ9zaIg&#xA;McCaST6NvEY7lTyMjtzYjwowp92Rsp2VZIfVt5uENXVloY1HLgQwbanTpgtKHjhsJlSS2me1nhQL&#xA;LKo2dvELUE175ISIYmIKqNa1SzZQzLOCaLJHUMfah4muWjI0yw9yaWPnjVYassErAjchCKiviMlx&#xA;hh4JWQ+Y7SbXbq+v+cDG2EESSg8jU8mr1pviJC2RgQKSBdVVbe4jU0aeVpGNP5j4/RiCicC+m/8A&#xA;nEbRBB5S1nWmUrJqN6IEJHWK1jBUj/ZzuPowMj3PeMUPnv8AN3/nILUodXtNG/Le9hvZofUk1O5j&#xA;gM45RnaGNnHBgQrcmUGu3FgcBLLYCyxuPXNW/Meyg17zxqoGio7Na+WrFWhty0Tcec7Matup6sfY&#xA;jpkSXEz6gxPDEbrLrzbq3mO+j8teSNP+uXaAJFHAALW2QfCHkcURQv3duu2IDXi0pO8nt/5UflXZ&#xA;eRtNlknmGoeYtQo+q6mR9o9RFFXcRr+J3PYCQc73M8woeUf85K2i/wDKuV1hQfrGh6haXsLr1BMn&#xA;on6D6v6sING0GPEDE9Qk13q6wXdSjGOVULtH9tWp9kq2xzbPFAICT9FS3IaG2NwzLTgyGOrk0HUL&#xA;+BwJ3SXXIpVtXSeP0hIQogYdENR3+7BLkzgd9mcf84uXd7N+X15bSEtp9jqlzBpbsf8AdBCSFRXs&#xA;JJGNfE5qi9kCSATzp7DirsVYJ+es0UP5SeZXlIVTahAT/M8qIo+lmGJTHm8J89ubTyYEmcCRNPhi&#xA;flWpd4VQ9e/JsrDrsO+X4vU5vyF8tebPLvlW61q4v7PV9M0Sw08SWcscdBBFXdXjl35yN0ydOy4q&#xA;ef8Am3/nE/zPyaXQdej1KP8A5Z78NBLQdAJE9VXPzC4OFlxpDpn/ADid+ZFyzNeXen2KjYB5pJXP&#xA;yEcZX/hseFeIJyn/ADin+YFsrxWnmDT/AEXPJiyzKzGlN/3b7e1cHAFE1Gb/AJxU/MgLW31nShJW&#xA;v2rhPxEL48C8aSyf844/nIt16JtbKaKu1ws8Kx/61KJJ/wALjwJ40XN/zjB+btlZsbe90662oLWK&#xA;5mD060HqxRp1/wArHgRxseuvyh/PJZVt7jQJZ25Eq3+izLX/AFwzKB9ODgZcau35LfnJNaSGXykj&#xA;EDiJBLao4J2rwEw5f8DjwLxhl35Qw/nz5H13TtDn0K7k8s3d2ovLd41lihWUgSSpMpIj4j4qFuJP&#xA;ucmGBovqTCwfKmq/84yfmJo3mYzeUrq2m09pGNtdSy+lLFGxrwnUg8qdKpWvh2AplKpCiz7Qv+cZ&#xA;NLeKKXzfrd5q8/2p7K3f6tZ8ieRUAD1CPcFT32xpiAByD1ry95Y8veXNPGn6Fp8On2gNTHCoXk3T&#xA;k7fadvdiThW0zxV2KvKv+cjpVm8k2GhijTa7q1nZInenMyM3yHAVPvhAsgMZz4YmXcCxu7ijutQu&#xA;QEMlSOJQjkpQj4lUkBvcd82zxg5JbDDqIvxG0qwBWIWUjoR9k8SCevjg3ZbJT5gtNRMVzHey8rtl&#xA;YGXkW3GwA2Xio5V2yEhszxyAIL1L/nG69s5/yn021hUJcabNc2t/HtVZxO0hr7lJFOax7Em93p+K&#xA;HYq8I/Onzzpvmu7i/LbRlnnuf0nAmuziM+gkEH72VA46srBa17jASicuGJLDbjTX88fmJpHlWFfU&#xA;tvWF9rRG6paQnkUP+vso9yMiA42jhQMi+qQABQdMm5TsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVeGfmbcN5l/N3TtDib/RPK1k15d+H1q84hFIHcRcWHzOX6eNy9zr+1MvBhr+cUMsUEkjPbiO4&#xA;hflwiZzG4o3wkbgn5jNg80u1S9tpIRDc28kVxGV4M+5pUDdvhJG+BQEv82Krzu67g0Br/lIP6YlM&#xA;EX/zjhqBtvOPm7RGNFuo7bUoE91rHM30tIuazKKkXq9FPiwx8tnv+Qcl2Kvi381/MGu+Xfzj8x3V&#xA;hbHS5JndYoqPxmEsYT6yFJKs0n260pX3yJTLGJii90/5xv8AJeo6P5Wute1y2aHXdfm9ZvVThKtq&#xA;gCxIykAryPJ6eBGEKQBsHr2FDsVdirsVdirsVdirsVdirsVdirsVdirsVdiqnc3MFrbS3Nw4jggR&#xA;pJZG6KiDkzH5AYq+Y/KmttdaZ5h82TsRqXme9nngU05Jbxkxwrt/IGIH0Zm6eNRvvef7VycWUR6R&#xA;/SitNd5ZPRX4hHDUMOtKnw8ABmQC60qT8kWLkxpMXXegpyYb9PpxVNNSIubSBurzW6safzR/CfxX&#xA;CxCQeTtVHlz82/LuqMeFpqwfR7w9qzmsNf8AntxJ+WYOpjuC7/snJcZQ+L6mzHdq7FVjwQyOjyRq&#xA;7xmsbMASp9iemKr8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirCPzt1Cew/KjzNcQmkjWbQ&#xA;VBp8Nwywt/wshxKY83jb6ZHp3lzQUh/u2s4lJ8W4K1fwzZxFRDyGafFkkT3lLfJmuGbzldaW6qsM&#xA;MEUYkqal5o60/wCGyEJ+ohtzYBHFGfWV/YyHzPEUtreVtpGjjcj/AClFHH3jLZcnFiqXx/51yGa3&#xA;qGhZiT1+0RJ39q4TyQObDPOWmPeaTMttUTLxubNgaMHU8l4nx7ZTmjcXN0Wbw8gJ5dX0j+V/nW38&#xA;4+StO1lHDXZjEOpRjYx3cYAmUrvSrfEv+SRmveoLKsUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxViH5v6S+q/lj5lsoxykNjLMijqWtx6yj6THikc3jsd0mo/l5oF+pr+4hRv9YJwcfQyH&#xA;NnA3EF5DUQ4csh5lgekObP8AMC6AoHnghuIyelYHCD/iOUx2mXNyerTRP82RHz3epebbdJNJt7lN&#xA;1EhI/wBWUFj+OZBdXDmwz8p5El8oXmlSn+4lnUAncFGLEf8AAk5Vp/pp2Haf97xd4CPgpJbi0lVP&#xA;VjLQqztQ19h32ywdzh0eaD8lebp/y386m7uOQ8s6w6w63CASIJq0julH0/F4ivfjmFnx0beg7O1X&#xA;HHgPMcvc+qY5I5Y1kjYPG4DI6kFWUioII6g5Q7FdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdiq2SOOWNo5FDxuCrowqCCKEEYq+ZPK1jLY6d5j8jTEi88t38otlao5WjyGSKTf8AmBZvkRmb&#xA;ppXGu55/tbFw5RPpIfaGHeZYX07zbo92woju9rIfH1R8H41xybTBRpvXhnH4/Lm9Lt7j655VeFmB&#xA;kVgoFd6j+0ZkjcOsIovPPLrHTfNWo6LJtFqZN7ZnoCzD98nzFK/Jcx4emZHfu7POPEwxmOcPSf0I&#xA;nzfpV1dWfr2xMWqWTpcWrDYmSLp8+Q2+dMllhY25hq0eYQlUvplsVaK7tfNHlqK8lRS0qtBew/yy&#xA;L9pfbxH0YgicbY5YSwZaHTcPSP8AnHbzxd1uvIGrzGW50uL6xotw/wBqWy5UMZJ7xMwp7bdFzBlH&#xA;hNPR4MwywEh8fe9vyLa7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXiH55/l/rUesw+f&#xA;fLVtJdzrD9V1/T4BWSa3UfDMijdmQfCw8AvYHJwnwm2nUYBlhwn4PF725uvOYi0fy9Y3V/qksqej&#xA;6cTKIXUg1ldvhXitanpluXMJDZwNFocmOdyqvvZRd6d+ZXlh207XfL97Mx+EalpcJu7eXagesY+A&#xA;kdtj/kjJQ1O27HP2VZuBFdxX6T+VH5geep7e8isX8r22nrJLa6hqKMk88xA4KIK81Q7cmIpT+bpl&#xA;WTLZFdHK0uiGOJEjxcXToi7/AMhfnTZOIbnyzHqoQ0W6sryJY2p3CyH1B9KjJjUnqGiXZMb9Mq+C&#xA;no/5Ifm/b6dc63FHaxXl9cPLN5bmlVWCGnCRJkLRCQ1IIJG3U12FccpBJ73Ky6LHOAiecRzZL+Vf&#xA;5Y/mLbfmLYeZNf0xNEstMgnQx/WYbmS4aeNowv7kvRVLct6dME58RZaXTDDEi7t9AZByHYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:76bf2023-5528-0445-9af4-93110b4d178b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:76bf2023-5528-0445-9af4-93110b4d178b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:58f487a7-5cf9-4aff-9d4f-4781a66fa0b7</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:76bf2023-5528-0445-9af4-93110b4d178b</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:32:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3.280569</stDim:w>
            <stDim:h>5.568493</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -192.701 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 192.701 li
175.832 192.701 li
175.832 0 li
cp
clp
159.538 126.456 mo
158.887 125.623 158.115 124.864 157.172 124.355 cv
156.58 124.035 155.268 124.01 154.927 123.629 cv
153.856 122.432 155.654 117.838 155.939 115.858 cv
156.812 109.78 156.787 103.706 155.772 97.6849 cv
156.841 94.0013 155.375 89.4061 154.545 85.7957 cv
153.229 80.0765 151.582 74.3123 149.603 68.7855 cv
147.944 64.1522 145.873 59.537 142.719 55.7137 cv
138.855 51.0306 133.405 48.2415 128.212 45.3099 cv
127.66 44.9984 127.132 44.9598 126.671 45.0916 cv
118.893 39.4808 107.75 37.9515 98.4159 37.3958 cv
93.1396 37.0819 87.8544 37.6053 82.6034 38.0804 cv
77.5917 38.534 72.4697 38.6893 67.7411 40.5658 cv
62.8749 42.4969 58.6367 45.5863 54.3808 48.5731 cv
51.249 50.7713 47.9667 52.9583 45.5224 55.8968 cv
42.83 57.8358 41.8359 62.1424 40.663 65.0599 cv
38.2519 71.0565 35.622 77.16 33.9052 83.4002 cv
30.4658 95.9032 31.5077 110.485 32.0283 123.312 cv
32.4843 134.549 31.7284 148.95 38.8661 158.369 cv
42.3642 162.986 46.7792 167.026 51.1113 170.844 cv
55.2118 174.459 59.6064 178.637 64.7909 180.549 cv
65.3085 180.74 65.7675 180.732 66.1601 180.601 cv
68.4316 182.25 70.8896 183.62 73.454 184.781 cv
82.9872 195.329 97.4013 188.532 108.044 182.835 cv
115.443 178.874 123.207 175.289 129.682 169.869 cv
135.275 165.186 140.292 159.709 145.314 154.357 cv
146.85 154.91 148.95 154.235 149.345 152.456 cv
150.041 149.312 154.163 147.111 156.197 144.816 cv
157.777 143.033 159.19 141.091 160.172 138.914 cv
161.938 134.999 162.319 130.02 159.538 126.456 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.494118 .713726 .607843 rgb
f
63.3163 133.409 mo
63.2802 133.199 63.2568 132.998 63.1992 132.774 cv
62.9755 131.896 62.5507 131.055 61.999 130.249 cv
62.0185 130.07 62.0195 129.883 61.9755 129.679 cv
61.4599 127.295 58.7343 125.467 56.9023 124.096 cv
56.0888 123.487 55.1474 122.641 54.0683 122.66 cv
53.54 122.669 53.0927 122.868 52.7558 123.189 cv
51.6103 122.614 50.5195 122.117 49.581 121.719 cv
45.3945 119.942 38.1142 119.586 37.2031 125.496 cv
36.3583 130.974 43.745 135.371 47.9052 137.115 cv
50.2519 138.099 54.831 139.404 58.2138 138.716 cv
59.7949 138.618 61.2734 138.185 62.2529 137.282 cv
62.2665 137.28 62.2802 137.28 62.2939 137.278 cv
64.3779 136.983 64.4531 134.687 63.3163 133.409 cv
cp
.745098 .917647 .945098 rgb
f
121.106 125.058 mo
120.86 124.604 120.551 124.223 120.215 123.872 cv
119.977 122.754 119.256 121.643 117.893 120.564 cv
113.262 116.898 106.399 120.458 101.952 122.639 cv
99.1308 124.021 95.1308 125.836 92.2079 128.379 cv
88.5029 130.17 84.4023 132.814 84.7773 136.228 cv
84.9443 137.753 85.8144 138.735 87.0302 139.36 cv
88.7597 142.285 93.4394 143.184 96.7558 143.076 cv
103.273 142.862 126.785 135.532 121.106 125.058 cv
cp
f
59.9736 133.242 mo
59.1347 131.878 58.0048 130.329 56.6767 128.858 cv
55.5224 127.521 54.2529 126.375 53.5038 125.837 cv
50.9794 124.024 47.6044 122.025 44.372 122.344 cv
41.9892 122.578 40.1318 124.118 39.7372 126.293 cv
39.1572 126.113 38.4316 126.53 38.663 127.244 cv
38.9999 128.283 39.6337 129.181 40.4238 129.975 cv
41.6025 132.016 43.9413 133.199 46.1298 134.16 cv
49.623 135.694 53.8222 137.202 57.6806 137.238 cv
59.6659 137.256 61.0283 134.958 59.9736 133.242 cv
cp
.901961 .992157 1 rgb
f
117.981 126.837 mo
115.984 120.845 106.012 123.87 99.0956 127.847 cv
95.7294 128.723 92.373 130.114 90.6181 133.105 cv
88.6581 136.445 90.6767 139.368 94.1347 140.307 cv
99.665 141.809 106.036 139.566 110.877 136.958 cv
114.2 135.167 119.515 131.437 117.981 126.837 cv
cp
f
57.1152 131.667 mo
56.6064 129.526 54.8095 128.082 53.0732 126.908 cv
51.2011 125.642 48.7773 124.054 46.4101 124.314 cv
45.2851 124.438 44.4394 125.065 43.9726 125.903 cv
43.163 126.197 42.5605 127.031 42.6132 127.97 cv
42.7265 129.96 44.8945 131.771 46.3867 132.825 cv
48.3222 134.191 50.6025 135.017 52.9521 135.291 cv
55.2704 135.562 57.7851 134.49 57.1152 131.667 cv
cp
1 1 1 rgb
f
112.536 125.565 mo
109.733 125.133 106.674 125.737 104.133 127.173 cv
101.913 127.222 99.7919 127.891 97.9999 129.396 cv
96.2997 130.824 93.7333 133.882 95.9882 135.96 cv
97.9814 137.798 102.508 136.697 104.751 135.983 cv
108.262 134.866 111.344 132.781 113.693 129.951 cv
114.803 128.616 114.68 125.895 112.536 125.565 cv
cp
f
85.8359 168.969 mo
83.9824 168.287 81.6601 168.473 79.789 168.998 cv
79.3583 169.119 78.9169 169.264 78.5087 169.466 cv
77.3632 168.665 76.0966 167.863 74.873 167.488 cv
73.8388 166.649 72.2353 166.279 71.0439 166.618 cv
68.998 167.2 68.4814 169.322 68.8915 171.166 cv
69.2626 172.83 71.4169 173.449 72.7099 172.48 cv
72.9472 172.366 73.1552 172.195 73.2968 171.96 cv
73.2988 171.96 73.3007 171.959 73.3027 171.958 cv
73.0986 172.328 73.6835 172.74 74.5331 173.115 cv
75.0117 173.916 76.1113 174.385 77.1054 174.128 cv
77.5146 174.236 77.9159 174.369 78.3007 174.553 cv
79.0048 174.836 79.9394 174.496 80.4443 173.987 cv
80.4784 173.952 80.496 173.918 80.5273 173.884 cv
80.9462 173.827 81.3251 173.606 81.5429 173.2 cv
81.7411 173.188 81.9452 173.186 82.1435 173.19 cv
82.6327 173.669 83.3466 174.492 83.4609 174.645 cv
84.164 175.594 84.9824 175.9 86.1318 175.732 cv
90.0976 175.151 88.6992 170.021 85.8359 168.969 cv
cp
.576471 .384314 .447059 rgb
f
160.134 132.347 mo
159.835 131.678 159.484 131.042 158.986 130.493 cv
158.684 130.186 158.35 129.917 158.011 129.654 cv
158.522 128.947 158.722 127.9 157.961 127.242 cv
154.147 123.945 150.975 128.746 153.948 132.18 cv
155.503 133.975 156.644 134.796 156.147 137.46 cv
155.768 139.498 154.351 142.085 152.59 143.178 cv
150.199 144.663 148.58 144.869 147.478 147.796 cv
147.475 147.805 147.475 147.813 147.471 147.823 cv
146.979 148.265 146.642 148.789 146.328 149.37 cv
146.227 149.557 145.82 150.143 145.614 150.534 cv
145.494 150.407 145.356 150.276 145.323 150.237 cv
144.849 149.685 144.406 149.107 143.932 148.556 cv
142.598 147.009 139.614 148.653 140.395 150.615 cv
141.381 153.09 143.319 156.132 146.431 155.57 cv
149.133 155.082 150.943 151.889 151.056 149.301 cv
151.085 148.624 150.804 148.101 150.375 147.753 cv
151.521 146.358 152.738 147.116 154.462 146.125 cv
155.165 145.72 155.778 144.943 156.298 144.37 cv
157.8 142.717 159.563 140.757 160.322 138.611 cv
161.041 136.579 161.017 134.32 160.134 132.347 cv
cp
.396078 .509804 .45098 rgb
f
78.9765 185.324 mo
79.3056 184.978 79.3925 184.461 79.2021 183.997 cv
79.2792 184.075 79.3642 184.146 79.4658 184.208 cv
81.9384 185.712 84.5419 186.681 87.2099 187.111 cv
84.4531 186.982 81.787 186.291 78.9765 185.324 cv
cp
141.015 155.22 mo
140.98 155.123 140.936 155.03 140.899 154.934 cv
141.1 154.541 141.169 154.079 140.996 153.578 cv
140.834 153.104 140.503 152.826 140.131 152.69 cv
140.011 152.495 139.855 152.313 139.649 152.146 cv
139.575 151.988 139.481 151.839 139.369 151.702 cv
139.259 151.461 139.121 151.234 138.94 151.038 cv
138.199 150.236 136.963 150.08 136.187 150.938 cv
135.209 152.019 135.548 153.341 136.388 154.075 cv
136.438 154.345 136.501 154.614 136.58 154.877 cv
136.608 154.972 136.647 155.06 136.68 155.152 cv
136.673 155.241 136.666 155.331 136.659 155.419 cv
136.439 155.29 136.181 155.182 135.876 155.099 cv
135.371 154.535 134.617 154.223 133.835 154.529 cv
133.41 154.694 132.986 154.86 132.561 155.026 cv
131.29 155.522 130.893 156.768 131.154 157.792 cv
129.346 160.504 127.221 162.853 124.762 165.029 cv
124.951 164.697 125.129 164.357 125.285 164.007 cv
125.51 163.502 125.132 162.777 124.501 162.987 cv
123.344 163.371 122.149 163.596 120.978 163.939 cv
120.428 164.101 120.657 164.927 121.216 164.798 cv
121.879 164.645 122.509 164.51 123.151 164.427 cv
121.284 166.606 119.032 168.46 116.7 170.228 cv
116.638 169.945 116.266 169.737 115.971 169.989 cv
115.005 170.816 114.117 171.881 113.184 172.883 cv
112.643 173.296 112.106 173.712 111.582 174.136 cv
111.348 173.532 110.604 173.102 109.974 173.293 cv
105.637 174.601 102.207 178.074 98.1503 180.074 cv
92.7343 182.743 86.3154 183.678 80.6034 181.509 cv
79.3115 181.018 78.4658 182.522 78.9091 183.566 cv
78.8534 183.508 78.8056 183.445 78.7382 183.394 cv
76.414 181.656 73.4286 180.847 70.8417 179.573 cv
67.954 178.151 65.2216 176.424 62.2988 175.08 cv
61.54 174.549 60.6327 175.739 61.3105 176.36 cv
61.5361 176.566 61.7822 176.745 62.0146 176.942 cv
61.6484 177.424 61.5849 178.147 62.0888 178.736 cv
63.374 180.236 64.9169 181.463 66.7206 182.274 cv
67.4921 182.621 68.1347 182.343 68.499 181.86 cv
68.5702 181.895 68.6425 181.93 68.7138 181.965 cv
70.249 183.131 72.0263 183.977 73.7577 184.795 cv
73.9853 184.903 74.2001 184.875 74.3798 184.784 cv
75.1269 185.13 75.8906 185.412 76.662 185.571 cv
76.4784 186.029 76.5556 186.59 77.079 186.844 cv
82.0556 189.262 87.0185 191.288 92.6445 190.222 cv
95.1386 189.749 99.4374 188.858 102.185 186.965 cv
102.49 187.322 106.554 186.361 106.204 186.477 cv
107.931 185.903 109.737 184.905 111.331 184.032 cv
115.341 181.833 119.12 179.155 122.726 176.355 cv
128.484 171.885 134.827 166.577 138.548 160.075 cv
138.598 160.083 138.643 160.1 138.694 160.106 cv
139.804 160.238 141.091 159.574 141.33 158.385 cv
141.375 158.162 141.393 157.953 141.409 157.744 cv
141.416 157.746 li
141.415 157.738 141.413 157.73 141.412 157.722 cv
141.476 156.862 141.322 156.089 141.015 155.22 cv
cp
f
79.3036 158.314 mo
79.2685 158.213 79.2431 158.111 79.1904 158.009 cv
79.0712 157.815 78.9355 157.631 78.7841 157.459 cv
78.9404 157.678 78.9189 157.654 78.7187 157.388 cv
78.2529 156.785 77.6747 156.463 76.9775 156.176 cv
76.1279 155.827 74.9208 156.402 74.5097 157.18 cv
74.4072 157.374 74.3329 157.588 74.2861 157.807 cv
73.3964 157.626 72.4804 157.638 71.6269 157.228 cv
70.1845 156.536 69.0488 158.464 70.373 159.374 cv
71.7402 160.312 73.6728 161.041 75.2089 160.125 cv
75.5849 160.41 76.0087 160.646 76.4658 160.752 cv
76.6562 160.777 76.8456 160.803 77.0361 160.828 cv
76.6386 160.829 76.745 160.855 77.3554 160.908 cv
77.496 160.914 77.6337 160.914 77.7714 160.9 cv
78.3788 160.956 78.9872 160.866 79.3925 160.324 cv
79.8632 159.693 79.7109 158.921 79.3036 158.314 cv
cp
f
126.061 119.271 mo
125.337 117.502 123.297 117.57 122.537 118.808 cv
122.365 119.05 122.257 119.367 122.249 119.763 cv
122.246 119.794 122.247 119.825 122.244 119.857 cv
122.244 119.859 122.244 119.861 122.244 119.863 cv
122.11 121.304 122.25 122.658 122.518 124.076 cv
122.55 124.243 122.601 124.388 122.661 124.521 cv
122.667 125.953 122.523 127.382 122.164 128.826 cv
121.854 130.071 121.41 131.267 120.955 132.46 cv
117.872 134.906 115.544 138.215 112.017 140.297 cv
111.424 140.647 110.819 140.97 110.209 141.277 cv
101.106 143.218 88.8661 146.342 82.288 137.413 cv
81.3906 136.195 79.6406 137.212 80.2636 138.596 cv
82.8183 144.267 89.7128 146.924 96.746 147.163 cv
102.321 147.771 107.769 147.338 112.95 144.84 cv
116.579 143.091 121.097 140.132 123.305 136.321 cv
127.629 132.23 128.217 124.533 126.061 119.271 cv
cp
f
69.0575 132.48 mo
68.8788 130.736 66.1611 130.017 65.7431 132.032 cv
65.4755 133.323 65.2011 134.657 64.8095 135.916 cv
64.4911 136.936 63.9765 137.773 63.4667 138.661 cv
63.33 138.778 63.2138 138.914 63.1152 139.064 cv
59.1572 139.949 55.6738 140.365 51.081 139.156 cv
45.8769 137.786 40.4179 135.062 37.3603 130.457 cv
36.6865 129.442 34.7548 130.062 35.2607 131.342 cv
38.0449 138.378 43.2812 142.326 50.5683 144.275 cv
56.3525 145.822 65.7978 146.805 68.2392 139.752 cv
68.3173 139.528 68.3154 139.312 68.2626 139.114 cv
69.1503 137.071 69.2773 134.617 69.0575 132.48 cv
cp
f
65.6152 115.333 mo
65.4296 115.377 65.2441 115.422 65.0585 115.466 cv
64.912 115.332 64.7743 115.199 64.6142 115.064 cv
64.1835 114.702 63.7353 114.53 63.3075 114.493 cv
56.831 108.683 48.8202 102.94 40.5878 101.459 cv
39.3271 101.232 38.7216 102.906 39.6786 103.46 cv
43.0839 106.405 47.0947 108.565 50.7861 111.127 cv
55.2216 114.205 59.3222 117.653 63.3232 121.268 cv
65.4413 123.181 68.4521 120.8 67.206 118.273 cv
67.2031 118.266 67.1992 118.262 67.1962 118.256 cv
67.3066 118.111 67.4257 117.981 67.5214 117.812 cv
68.2353 116.544 67.0527 114.928 65.6152 115.333 cv
cp
f
117.069 98.7347 mo
112.544 95.2684 103.043 102.538 99.0439 104.809 cv
92.6855 108.421 85.4814 112.574 81.8359 119.152 cv
81.0829 120.511 82.5839 121.987 83.9365 121.252 cv
89.9404 117.993 95.2382 113.536 101.226 110.192 cv
104.137 108.566 107.109 107.059 110.081 105.549 cv
112.533 104.304 115.35 103.538 117.461 101.771 cv
118.52 100.884 117.962 99.4183 117.069 98.7347 cv
cp
f
87.9618 166.433 mo
86.5458 166.342 86.1044 167.897 86.5488 168.904 cv
86.5468 168.904 86.5458 168.904 86.5439 168.905 cv
86.5468 168.909 86.5517 168.912 86.5546 168.917 cv
86.6894 169.215 86.9023 169.46 87.1923 169.6 cv
87.5771 169.976 87.9628 170.35 88.1806 170.854 cv
88.5322 171.665 88.2568 172.548 88.1474 173.38 cv
87.8954 175.3 90.6581 175.66 91.5341 174.297 cv
93.3095 171.534 91.4286 166.658 87.9618 166.433 cv
cp
f
87.5937 174.329 mo
86.5751 174.218 85.4081 173.902 84.5204 174.584 cv
84.4687 174.624 84.4325 174.676 84.3857 174.72 cv
84.2909 174.704 84.2001 174.683 84.0927 174.678 cv
83.1161 174.625 82.6249 175.763 83.0468 176.524 cv
83.0976 176.759 83.1786 177.05 83.3554 177.286 cv
83.6161 177.635 84.0126 177.885 84.4325 178.001 cv
85.1943 178.212 86.123 178.001 86.6376 177.378 cv
86.662 177.348 86.6806 177.311 86.7031 177.28 cv
87.0048 177.311 87.3046 177.352 87.5937 177.376 cv
88.415 177.445 89.1171 176.627 89.1171 175.853 cv
89.1171 174.955 88.415 174.419 87.5937 174.329 cv
cp
f
142.038 123.497 mo
141.736 124.156 142.077 124.772 142.569 125.043 cv
141.272 126.687 140.131 128.445 139.245 130.265 cv
139.676 129.026 140.085 127.784 140.501 126.567 cv
140.601 126.275 140.537 126.038 140.398 125.86 cv
143.956 120.174 145.443 112.744 146.174 106.343 cv
146.662 102.068 146.637 97.8036 146.168 93.5882 cv
146.825 96.7 147.386 99.8231 147.889 102.913 cv
147.915 103.075 147.971 103.213 148.039 103.34 cv
146.08 110.087 145.011 117.005 142.038 123.497 cv
cp
145.277 121.968 mo
145.492 121.515 145.692 121.054 145.899 120.597 cv
145.975 120.764 146.06 120.931 146.166 121.094 cv
145.867 121.379 145.57 121.67 145.277 121.968 cv
cp
142.136 85.639 mo
141.626 83.8709 141.075 82.1117 140.495 80.3592 cv
140.886 79.0594 141.039 77.7098 141.003 76.3368 cv
141.431 77.3534 141.832 78.3827 142.215 79.4212 cv
141.634 79.4027 141.044 79.8534 141.268 80.5755 cv
142.352 84.0868 143.106 87.6639 143.559 91.2757 cv
143.148 89.3294 142.652 87.433 142.136 85.639 cv
cp
132.313 62.9203 mo
126.466 55.9945 118.187 50.6087 110.491 47.304 cv
108.115 46.2835 105.609 45.3758 103.03 44.5697 cv
107.57 43.4032 112.413 47.0633 116.144 49.2586 cv
120.231 51.6629 124.225 54.349 127.733 57.5497 cv
129.504 59.1644 131.094 60.9144 132.482 62.8114 cv
132.424 62.8426 132.367 62.8792 132.313 62.9203 cv
cp
101.517 44.1014 mo
96.0566 42.5111 90.2685 41.4413 84.4843 41.0726 cv
87.1865 40.6781 89.8954 40.3509 92.6064 40.1058 cv
92.7284 40.0946 92.829 40.054 92.9277 40.0106 cv
96.663 40.6205 100.351 41.3773 103.983 42.3075 cv
103.366 42.3797 102.746 42.5077 102.123 42.7176 cv
101.464 42.9403 101.322 43.5995 101.517 44.1014 cv
cp
126.103 51.2249 mo
126.957 52.3128 127.731 53.4754 128.482 54.6541 cv
128.428 54.6068 128.373 54.5565 128.318 54.5101 cv
125.849 52.3905 123.192 50.4989 120.434 48.7689 cv
122.353 49.6346 124.33 50.4071 126.103 51.2249 cv
cp
154.023 115.537 mo
157.811 107.491 157.465 98.0379 156.74 89.3631 cv
156.079 81.4486 154.502 72.8705 149.273 66.6712 cv
149.033 66.3861 148.724 66.3216 148.436 66.3929 cv
147.538 64.2977 146.251 61.8299 144.369 61.0536 cv
144.321 60.9276 144.261 60.7997 144.182 60.6717 cv
141.809 56.846 138.616 54.0267 134.995 51.6092 cv
133.136 49.7191 131.109 47.9998 128.85 46.5492 cv
128.471 46.306 128.075 46.2171 127.691 46.2362 cv
127.143 45.8289 126.562 45.4759 125.934 45.2098 cv
125.357 44.9662 124.802 44.9793 124.324 45.1517 cv
121.02 43.3143 117.521 41.7962 114.313 41.8123 cv
112.658 41.2332 110.944 40.7269 109.138 40.3055 cv
102.413 38.7357 94.5312 35.7713 87.6786 38.0399 cv
87.3007 38.1644 87.1884 38.4808 87.2636 38.7616 cv
86.2353 38.8871 85.2089 39.0194 84.1855 39.1634 cv
84.2236 39.0941 84.1962 38.9867 84.0927 38.9867 cv
83.9765 38.9867 83.9521 39.1244 84.0156 39.1878 cv
79.2509 39.8622 74.5331 40.7289 69.832 41.7879 cv
67.5029 42.1932 65.2206 42.7303 63.0214 43.4505 cv
61.6044 43.9154 62.1962 46.1395 63.6415 45.7 cv
77.7675 41.7269 93.8134 43.7572 107.437 48.8197 cv
114.057 51.2796 120.293 54.7528 125.554 59.4979 cv
129.293 62.8705 131.988 66.6878 134.537 70.7669 cv
136.361 75.5746 137.9 80.4652 139.088 85.5072 cv
140.88 93.1195 141.265 100.504 141.967 108.232 cv
142.032 108.953 142.951 109.078 143.21 108.4 cv
143.249 108.297 143.278 108.19 143.315 108.086 cv
142.055 115.034 139.168 121.121 137.199 127.988 cv
137.079 128.408 137.418 128.79 137.796 128.856 cv
136.67 131.668 135.439 134.412 134.153 137.178 cv
133.667 138.224 135.132 139.132 135.727 138.098 cv
136.01 137.65 136.275 137.192 136.528 136.725 cv
136.544 136.699 136.559 136.673 136.574 136.647 cv
136.582 136.634 136.583 136.619 136.589 136.606 cv
137.064 135.718 137.494 134.8 137.888 133.864 cv
137.452 135.503 137.263 137.166 137.406 138.821 cv
137.555 140.529 140.396 141.255 140.669 139.263 cv
142.397 132.672 146.518 128.702 150.748 124.208 cv
151.011 124.188 151.283 124.098 151.556 123.906 cv
153.453 122.564 154.219 121.228 154.43 119.806 cv
154.553 119.42 154.566 119.016 154.488 118.629 cv
154.455 117.656 154.246 116.634 154.023 115.537 cv
cp
f
128.051 151.16 mo
122.912 159.506 115.139 168.064 106.085 172.22 cv
105.961 172.277 105.951 172.465 106.042 172.552 cv
108.169 174.583 114.666 168.622 116.323 167.327 cv
121.81 163.037 125.93 157.986 129.244 151.858 cv
129.668 151.075 128.518 150.401 128.051 151.16 cv
cp
f
140.028 143.043 mo
139.62 143.396 139.232 143.771 138.84 144.14 cv
138.866 143.106 137.85 142.292 136.911 142.557 cv
137.21 141.597 135.833 140.696 135.041 141.499 cv
131.509 145.082 127.899 148.584 124.258 152.054 cv
123.937 151.938 123.544 151.961 123.276 152.178 cv
119.059 155.609 115.661 159.848 111.306 163.172 cv
106.932 166.511 102.23 169.334 97.4365 172.02 cv
95.79 172.943 97.2587 175.455 98.915 174.55 cv
102.635 172.517 106.991 170.22 111.112 167.517 cv
111.221 167.561 111.351 167.555 111.448 167.458 cv
111.586 167.32 111.716 167.173 111.853 167.034 cv
116.497 163.908 120.758 160.237 123.359 155.8 cv
124.942 154.321 126.528 152.845 128.095 151.348 cv
128.24 152.038 128.861 152.669 129.578 152.609 cv
130.636 152.521 131.611 152.079 132.523 151.445 cv
132.872 152.405 134.382 152.888 135.087 152.017 cv
137.206 149.401 139.652 146.996 141.501 144.179 cv
142.115 143.243 140.795 142.38 140.028 143.043 cv
cp
.443137 .647059 .541176 rgb
f
132.737 137.189 mo
127.367 140.6 123.139 145.816 118.508 150.13 cv
112.897 155.355 106.573 162.197 98.3593 162.055 cv
96.9755 162.031 97.0019 164.096 98.3593 164.187 cv
105.92 164.697 112.467 159.987 118.27 155.689 cv
124.285 151.236 131.173 145.743 134.309 138.76 cv
134.74 137.798 133.799 136.514 132.737 137.189 cv
cp
f
65.582 162.536 mo
64.0702 161.872 62.4277 161.592 60.8681 161.054 cv
59.0038 160.41 57.3388 159.511 55.7499 158.348 cv
54.8115 157.661 53.8876 158.509 53.8232 159.437 cv
51.915 158.622 50.0029 157.811 48.1904 156.818 cv
46.9833 156.158 45.4033 157.532 46.2197 158.789 cv
47.8837 161.35 50.1591 163.285 52.2792 165.458 cv
49.6855 163.257 47.2275 160.886 44.829 158.391 cv
44.1044 157.471 42.4462 158.504 43.12 159.605 cv
47.1913 166.254 53.5312 171.128 60.6025 174.199 cv
61.7431 174.694 63.0273 173.374 62.0156 172.367 cv
59.6982 170.06 57.3525 167.785 55.08 165.432 cv
54.2128 164.535 53.1533 163.58 52.1454 162.558 cv
54.6406 163.791 57.2968 164.664 60.0263 164.699 cv
60.5898 164.706 60.9404 164.311 61.0273 163.857 cv
62.5077 164.201 64.0058 164.257 65.4111 163.843 cv
65.9472 163.685 66.1747 162.797 65.582 162.536 cv
cp
f
56.9228 50.5789 mo
58.6093 49.617 59.5966 49.2323 59.4452 50.4207 cv
57.7021 51.0521 55.998 51.7621 54.3378 52.556 cv
55.1679 51.8158 56.0322 51.0872 56.9228 50.5789 cv
cp
61.8984 49.2708 mo
62.2314 49.2791 62.5634 49.2806 62.8964 49.284 cv
62.1503 49.5033 61.4052 49.7245 60.6718 49.9715 cv
60.8046 49.4803 60.8603 49.0277 60.8144 48.6449 cv
61.0458 48.9984 61.4267 49.2586 61.8984 49.2708 cv
cp
137.574 80.6966 mo
137.121 79.4613 135.821 79.3304 135.052 79.929 cv
134.344 78.6366 133.653 77.3529 132.962 76.0814 cv
129.968 66.0946 121.302 58.3973 111.684 53.5121 cv
110.176 52.5208 108.576 51.6341 106.895 50.8343 cv
117.356 53.516 128.092 57.3192 134.875 66.0565 cv
135.433 66.7738 136.54 65.8568 136.108 65.1048 cv
129.232 53.118 115.383 49.5687 102.769 46.8065 cv
89.915 43.9915 73.5038 40.3646 61.2245 46.7816 cv
60.706 47.0521 60.5361 47.5365 60.5927 48.0072 cv
60.2382 47.4857 59.4677 47.2923 58.0976 47.6654 cv
55.3408 48.4154 53.1357 50.5477 51.0331 52.3573 cv
48.1318 54.8539 45.288 57.4588 42.5898 60.1737 cv
41.4306 61.3397 43.1484 62.9832 44.3691 61.953 cv
50.2421 56.9969 56.7577 53.3485 64.1337 51.1581 cv
64.3281 51.1004 64.4784 51.0038 64.5947 50.8866 cv
64.706 50.8734 64.8212 50.8465 64.9413 50.7957 cv
66.8779 49.9813 68.8583 49.5374 70.8661 49.2997 cv
73.205 49.2621 75.5439 49.1976 77.8818 49.0833 cv
78.7411 49.1034 79.6015 49.1263 80.4648 49.1478 cv
82.3779 49.1947 84.2949 49.2664 86.2089 49.3783 cv
85.5409 50.6722 85.8583 52.493 87.6865 53.0106 cv
92.4531 54.3612 97.4443 54.3822 102.236 55.6161 cv
106.968 56.8348 111.413 58.9232 115.429 61.702 cv
116.821 62.6659 118.092 63.7201 119.294 64.8255 cv
109.962 59.5877 99.8574 55.5448 89.3652 53.6312 cv
78.2128 51.5975 63.6357 50.9754 54.4413 58.9437 cv
53.7646 59.5296 54.4804 60.7811 55.33 60.4715 cv
61.2206 58.325 66.2958 55.8226 72.7021 55.3539 cv
79.1659 54.8807 85.7245 55.6014 92.0546 56.8924 cv
103.005 59.1258 113.21 62.7596 122.755 68.4183 cv
125.479 71.5868 127.794 75.076 130.029 78.6659 cv
130.714 86.0785 131.161 93.0941 130.56 100.592 cv
130.447 101.991 132.558 101.942 132.716 100.592 cv
133.039 97.8177 133.409 95.0194 133.468 92.221 cv
134.693 100.525 134.691 109.35 132.815 117.448 cv
131.007 123.49 128.126 129.319 124.742 134.447 cv
124.251 135.192 124.327 135.965 124.699 136.582 cv
121.144 139.311 117.729 142.226 114.027 144.76 cv
107.955 148.915 101.658 150.406 94.4843 151.301 cv
92.0624 149.698 89.2695 148.506 86.9404 146.753 cv
83.9697 144.517 81.2519 141.972 78.2773 139.739 cv
77.7236 139.323 77.081 139.584 76.7118 140.06 cv
76.8163 139.271 76.8993 138.488 76.9511 137.727 cv
77.0409 136.415 75.0781 136.465 74.9355 137.727 cv
74.707 139.746 74.1728 141.529 73.4902 143.275 cv
65.3046 148.272 56.3798 147.529 47.082 146.54 cv
45.6835 146.391 45.3661 148.731 46.748 149.003 cv
53.3144 150.298 64.6747 152.274 71.498 148.307 cv
71.6337 149.286 72.788 150.063 73.624 149.123 cv
75.1855 147.367 77.2167 145.136 76.9218 142.614 cv
76.8857 142.303 76.6825 142.033 76.4257 141.899 cv
76.4618 141.709 76.4814 141.52 76.5136 141.33 cv
76.5751 141.453 76.662 141.569 76.7861 141.671 cv
81.7206 145.72 88.4931 155.386 95.8193 153.996 cv
96.2372 153.917 96.4736 153.469 96.4355 153.063 cv
108.622 153.671 116.785 144.801 125.625 137.476 cv
126.432 137.928 127.476 137.948 128.244 137.149 cv
134.104 131.064 137.327 122.58 138.425 113.536 cv
138.618 112.574 138.784 111.598 138.897 110.596 cv
139.47 105.507 139.217 100.334 139.318 95.2225 cv
139.419 90.141 139.341 85.5125 137.574 80.6966 cv
cp
f
124.52 103.633 mo
121.023 103.858 116.544 104.395 113.226 106.284 cv
108.167 107.74 103.18 110.304 98.4921 111.702 cv
97.5038 111.997 97.3339 113.248 97.8769 113.901 cv
96.0156 114.979 94.1718 116.087 92.3574 117.223 cv
85.2861 121.649 79.5292 126.854 76.0624 134.574 cv
75.5195 135.782 77.288 136.848 77.8632 135.626 cv
81.5058 127.889 88.8525 122.713 95.9999 118.454 cv
98.7128 116.837 101.46 115.272 104.225 113.741 cv
104.705 114.591 105.652 115.172 106.923 114.882 cv
108.993 114.409 111.048 113.904 113.087 113.355 cv
116.887 112.601 120.723 112.006 124.373 110.665 cv
125.247 110.344 125.822 109.645 126.057 108.868 cv
128.491 107.653 127.189 103.461 124.52 103.633 cv
cp
f
71.5468 117.699 mo
70.8232 115.08 68.873 112.894 66.9628 110.879 cv
65.3583 106.597 61.122 102.943 57.6601 100.214 cv
52.9443 96.4974 47.8398 94.0501 42.0019 92.7616 cv
41.2773 92.6014 40.7284 93.6678 41.4697 94.0252 cv
45.874 96.1507 50.248 98.5658 54.2421 101.41 cv
54.2118 101.598 54.2118 101.798 54.287 102.022 cv
54.62 103.01 55.0243 103.698 55.7577 104.435 cv
56.1591 104.839 56.6318 104.909 57.0478 104.779 cv
59.1464 106.7 61.1816 108.688 63.1318 110.763 cv
65.5136 113.298 67.5859 116.663 70.6513 118.387 cv
71.1113 118.646 71.6894 118.218 71.5468 117.699 cv
cp
f
116.879 92.8372 mo
111.81 90.2708 104.652 92.8924 99.5077 95.0902 cv
99.4335 94.9647 99.29 94.8768 99.1386 94.9271 cv
94.8271 96.3519 91.0868 98.7899 87.8066 101.786 cv
85.2753 103.743 82.9325 105.955 80.8085 108.475 cv
80.4179 108.938 80.4716 109.48 80.7402 109.858 cv
80.2421 110.545 79.7538 111.237 79.2822 111.935 cv
78.4677 113.14 80.4091 114.255 81.2245 113.07 cv
82.914 110.615 84.83 108.419 86.872 106.359 cv
90.4316 103.679 94.2128 101.284 98.249 99.4095 cv
101.057 98.1053 104.031 97.0189 107.046 96.2957 cv
110.215 95.5355 113.555 95.6971 116.635 94.7005 cv
117.417 94.4476 117.702 93.2542 116.879 92.8372 cv
cp
f
68.5341 119.519 mo
67.7568 118.479 65.9882 119.45 66.7529 120.56 cv
67.7275 121.974 68.6689 123.381 69.4843 124.831 cv
70.0917 127.802 71.4433 130.519 72.082 133.47 cv
72.3915 134.9 74.6152 134.561 74.6064 133.128 cv
74.5751 127.876 71.5585 123.565 68.5341 119.519 cv
cp
f
63.9618 122.232 mo
56.9716 115.41 48.7245 109.391 39.1337 106.73 cv
38.4218 106.104 37.7675 105.403 37.1552 104.705 cv
37.1425 104.123 37.1327 103.549 37.1279 102.985 cv
37.121 102.108 35.8788 102.146 35.7919 102.985 cv
35.33 107.434 34.455 112.464 35.1367 116.916 cv
35.1367 116.925 35.1367 116.932 35.1367 116.94 cv
35.1367 116.95 35.1415 116.956 35.1425 116.966 cv
35.1503 117.014 35.1523 117.065 35.1601 117.114 cv
35.165 117.113 35.1699 117.111 35.1747 117.11 cv
35.2558 117.374 35.4833 117.54 35.7314 117.573 cv
35.7704 118.468 35.832 119.359 35.9658 120.233 cv
36.0419 120.73 36.7988 120.672 36.915 120.233 cv
37.4199 118.322 37.3232 116.378 36.9208 114.475 cv
37.1503 112.768 37.2255 110.997 37.2275 109.224 cv
37.2841 109.245 37.3242 109.281 37.3876 109.297 cv
41.5888 110.365 45.6064 112.667 49.6503 114.274 cv
54.6923 116.279 59.1318 119.451 63.249 122.944 cv
63.7363 123.358 64.4325 122.691 63.9618 122.232 cv
cp
f
66.1406 158.104 mo
64.5595 156.306 61.5908 155.306 59.3993 154.42 cv
58.9042 154.22 58.4999 154.611 58.3534 155.035 cv
57.4286 154.666 56.5009 154.324 55.6171 153.982 cv
54.8095 153.669 54.3007 154.395 54.371 155.08 cv
53.2812 154.164 51.7284 153.604 50.58 152.789 cv
48.6923 151.449 47.0995 149.852 45.58 148.115 cv
44.8759 147.309 43.913 147.598 43.4003 148.262 cv
42.1552 145.582 40.9589 143.018 40.5624 139.96 cv
40.3876 138.617 38.5927 138.216 38.121 139.63 cv
37.8495 140.442 37.6952 141.233 37.624 142.009 cv
36.9452 141.594 35.874 142.396 36.332 143.303 cv
37.0029 144.63 37.7128 145.928 38.4472 147.209 cv
39.8691 150.848 42.7558 154.141 44.9599 157.315 cv
45.7626 158.457 47.5117 157.475 46.8495 156.211 cv
45.9658 154.522 44.7275 152.874 43.5488 151.192 cv
43.7685 151.228 43.9736 151.151 44.123 151.01 cv
45.5976 152.632 47.2079 154.225 49.1074 155.308 cv
50.6015 156.159 53.2392 157.303 54.8437 156.347 cv
54.9589 156.278 55.0409 156.137 55.0615 155.993 cv
55.0624 155.993 li
57.5077 156.94 59.8574 158.406 62.3525 159.17 cv
62.3574 159.152 62.3622 159.134 62.3671 159.117 cv
62.7929 159.198 63.2109 158.972 63.413 158.643 cv
64.0507 158.9 64.6923 159.097 65.332 159.196 cv
65.3964 159.331 65.5214 159.436 65.7177 159.436 cv
65.9814 159.436 66.12 159.252 66.1474 159.049 cv
66.3574 158.797 66.3681 158.363 66.1406 158.104 cv
cp
.623529 .827451 .72549 rgb
f
0 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
46.8427 153.866 mo
46.8583 153.866 46.8583 153.842 46.8427 153.842 cv
46.8427 153.866 li
cp
@
83.2577 179.931 mo
82.2128 178.956 81.3066 178.164 80.0566 177.489 cv
79.5449 177.213 78.8915 177.455 78.5624 177.885 cv
74.1503 176.015 69.7968 173.896 66.2001 170.761 cv
65.8837 170.354 65.4648 169.997 64.999 169.75 cv
64.1005 169.272 63.2079 169.695 62.8154 170.396 cv
62.6181 170.178 62.3857 169.983 62.0878 169.831 cv
62.4404 169.327 62.3329 168.472 61.5995 168.296 cv
60.7656 168.097 60.5107 168.063 59.6533 168.03 cv
58.7509 167.995 58.1806 169.062 58.6298 169.813 cv
59.5966 171.431 62.579 174.683 64.999 174.137 cv
66.7441 175.668 68.7216 177.015 70.7743 177.968 cv
74.3534 179.628 78.1367 179.875 81.6601 182.001 cv
82.9277 182.766 84.3642 180.964 83.2577 179.931 cv
cp
f
39.2968 109.485 mo
39.2353 108.434 37.8564 108.272 37.5009 109.242 cv
34.5048 117.431 35.3779 128.166 35.7841 136.728 cv
35.8495 138.107 37.9716 138.123 37.9404 136.728 cv
37.8368 132.171 37.8876 127.618 38.206 123.07 cv
38.5214 118.562 39.5585 113.99 39.2968 109.485 cv
cp
f
51.9736 89.3167 mo
50.5322 88.1732 49.0947 87.0501 47.6572 85.9574 cv
47.999 85.2752 48.3495 84.5638 48.7031 83.8304 cv
49.1493 85.8744 50.5175 87.6375 51.9736 89.3167 cv
cp
98.0097 66.8841 mo
86.662 62.2044 75.8242 62.8582 65.0204 65.93 cv
67.9443 63.5887 70.8818 61.2723 73.5077 58.7298 cv
74.372 57.8924 73.2109 56.2777 72.1865 57.0184 cv
67.5322 60.3841 63.0458 64.1683 58.7109 67.9784 cv
57.204 68.5228 55.6962 69.1014 54.1865 69.7098 cv
53.7118 69.3978 52.9589 69.4061 52.5986 69.9681 cv
52.4609 70.182 52.3368 70.4017 52.207 70.6185 cv
51.9833 70.8197 51.8408 71.0716 51.7704 71.3421 cv
51.7538 71.3719 51.7353 71.4007 51.7177 71.43 cv
51.6259 71.0472 51.5058 70.6751 51.3486 70.3192 cv
51.2714 70.1463 51.1591 70.0057 51.0273 69.8861 cv
53.1845 67.2313 55.6601 64.9081 58.4511 62.9247 cv
59.873 62.098 61.3534 61.3602 62.8534 60.9901 cv
63.0361 61.0765 63.2529 61.0809 63.4687 60.9598 cv
63.624 60.8729 63.7792 60.786 63.9345 60.6991 cv
64.4365 60.4183 64.5654 59.9046 64.4394 59.4456 cv
66.2421 58.6214 68.1542 57.9178 70.1816 57.3421 cv
70.7109 57.1922 70.8661 56.3905 70.3417 56.1214 cv
65.4081 53.5872 58.8945 58.2342 54.7753 61.8905 cv
51.6015 63.7352 48.499 65.7015 45.4023 67.6732 cv
43.9189 68.6175 45.2841 70.9837 46.7861 70.0409 cv
47.2812 69.7303 47.7792 69.4227 48.2743 69.1122 cv
48.1279 69.3197 47.9736 69.5218 47.83 69.7318 cv
46.2743 70.4754 44.8515 72.1707 43.7441 73.6356 cv
43.9863 72.2879 44.206 70.9369 44.3935 69.5809 cv
44.3964 69.5672 44.3993 69.5526 44.4033 69.5389 cv
44.3993 69.5384 li
44.4228 69.367 44.4492 69.1961 44.4716 69.0247 cv
44.7548 66.8597 41.1601 66.4139 40.6757 68.5111 cv
39.3486 74.263 38.913 80.1913 36.8906 85.6952 cv
36.3271 86.9627 35.7646 88.2352 35.1699 89.5018 cv
34.371 91.2015 36.207 92.6512 37.5273 91.8905 cv
37.5409 92.6185 37.5663 93.348 37.624 94.0824 cv
37.7841 96.1126 40.8075 96.1722 40.8281 94.0824 cv
40.83 90.8172 41.2148 87.5999 41.7411 84.3993 cv
42.2714 84.6112 42.9941 84.4569 43.2558 83.766 cv
44.3935 80.7542 45.7314 77.9354 47.2685 75.3192 cv
48.1259 74.3387 48.7392 73.0194 48.3163 75.0145 cv
48.0068 76.4779 47.1757 78.0282 46.6796 79.4725 cv
45.6708 82.4115 44.621 85.3368 43.6992 88.304 cv
43.2392 89.7816 45.2753 90.4134 46.0165 89.2782 cv
46.0234 89.2821 46.0302 89.286 46.037 89.2899 cv
46.165 89.0028 46.3124 88.6927 46.4618 88.3788 cv
46.5742 88.4642 46.6855 88.5487 46.7978 88.6341 cv
46.3847 88.953 46.1894 89.556 46.6757 90.0213 cv
49.0722 92.3138 51.5859 94.5096 54.371 96.3202 cv
55.0175 96.7401 55.7577 95.7796 55.1952 95.2528 cv
54.9921 95.0633 54.7841 94.8807 54.58 94.6922 cv
58.3144 97.577 62.1288 100.359 66.1464 102.576 cv
67.6542 103.408 68.7538 101.236 67.4306 100.372 cv
67.4365 100.365 67.4423 100.357 67.4482 100.35 cv
65.3603 99.1986 63.3339 97.8773 61.3408 96.4745 cv
59.538 94.9222 57.8749 93.1761 56.3495 91.5536 cv
54.7792 89.8836 52.539 87.7816 51.5517 85.7201 cv
49.7206 81.8993 51.539 79.4383 53.5663 76.7855 cv
55.2939 74.5238 57.3075 72.4935 59.4511 70.5746 cv
64.5038 68.6073 69.6757 66.9041 75.0644 66.3001 cv
82.7802 65.4354 90.2187 67.4383 97.8349 68.1732 cv
98.6376 68.2503 98.6298 67.1395 98.0097 66.8841 cv
cp
f
64.249 104.457 mo
64.0976 103.802 63.9052 103.168 63.7021 102.527 cv
63.3749 101.49 61.8163 102.104 62.3105 103.114 cv
62.6044 103.716 62.9013 104.305 63.2421 104.882 cv
63.5654 105.428 64.3886 105.062 64.249 104.457 cv
cp
f
98.1445 75.2503 mo
84.245 70.4862 68.9482 73.9007 55.1591 77.3763 cv
53.6825 77.7489 54.3075 80.0213 55.789 79.659 cv
69.8378 76.221 83.3622 74.5086 97.7519 76.6742 cv
98.6767 76.8133 99.0634 75.5653 98.1445 75.2503 cv
cp
f
88.8437 83.7206 mo
79.371 82.723 69.4433 84.0287 60.0507 85.3163 cv
58.8085 85.4867 59.0898 87.6869 60.3495 87.5262 cv
69.8554 86.3138 79.3281 86.4354 88.8437 85.6424 cv
90.0878 85.5384 90.0702 83.8495 88.8437 83.7206 cv
cp
f
124.926 79.433 mo
124.544 78.9095 123.927 78.7401 123.392 78.8495 cv
119.101 74.723 113.095 74.2718 107.351 72.1776 cv
106.365 71.8177 105.657 73.4564 106.63 73.891 cv
112.127 76.348 119.489 77.6649 123.086 82.9002 cv
123.221 83.0965 123.392 83.2386 123.579 83.3421 cv
124.618 85.9007 125.676 88.4852 127.107 90.8123 cv
127.687 91.7547 129.359 91.4276 129.291 90.221 cv
129.069 86.287 127.225 82.5809 124.926 79.433 cv
cp
f
128.718 95.179 mo
128.653 95.179 128.653 95.2791 128.718 95.2791 cv
128.782 95.2791 128.782 95.179 128.718 95.179 cv
cp
f
94.7939 112.728 mo
92.8251 113.653 91.2099 115.18 89.5644 116.581 cv
89.4833 116.65 89.4033 116.719 89.3222 116.788 cv
89.0966 116.798 88.9677 116.947 88.9306 117.122 cv
87.3427 118.475 85.7577 119.83 84.1708 121.184 cv
83.3925 121.848 84.5058 122.912 85.2812 122.294 cv
88.6689 119.592 92.9775 117.001 95.5478 113.481 cv
95.9052 112.991 95.2353 112.52 94.7939 112.728 cv
cp
f
86.4745 108.278 mo
86.455 108.24 86.4355 108.202 86.4159 108.165 cv
86.2353 107.82 85.79 107.669 85.4277 107.763 cv
83.5878 108.237 81.8163 111.425 80.7968 112.918 cv
79.9765 114.12 79.2919 115.466 78.5712 116.786 cv
77.1132 118.012 75.9765 119.972 75.3368 121.372 cv
74.7216 122.721 76.3173 124.2 77.4902 123.033 cv
78.9804 121.551 79.9033 119.725 80.8661 117.898 cv
81.2675 117.497 81.6357 117.09 81.8867 116.514 cv
81.9579 116.348 81.9521 116.179 81.9023 116.031 cv
82.4824 115.013 83.0712 113.998 83.6874 113.002 cv
84.124 112.297 85.0497 110.035 85.7656 109.541 cv
86.3232 109.501 86.8232 108.942 86.4745 108.278 cv
cp
f
89.5663 152.26 mo
85.2099 149.064 81.8886 144.256 78.4179 140.165 cv
77.8339 139.478 76.8212 140.482 77.4228 141.16 cv
80.7128 144.863 83.8105 148.844 87.2099 152.46 cv
87.0517 152.484 86.8867 152.51 86.7363 152.535 cv
86.3925 152.593 86.4286 153.035 86.6493 153.199 cv
87.4423 153.786 88.1191 153.92 89.0878 154.029 cv
90.1298 154.145 90.2284 152.745 89.5663 152.26 cv
cp
f
101.244 158.686 mo
99.9472 159.394 98.8632 160.394 97.6249 161.202 cv
97.0341 161.588 96.1982 162.284 95.4775 162.412 cv
93.8954 162.693 93.4853 161.824 92.7988 160.704 cv
91.1435 158.01 88.9345 155.589 86.6962 153.379 cv
85.9013 152.594 84.6728 153.821 85.4697 154.605 cv
87.5204 156.62 89.3486 158.771 91.0214 161.109 cv
91.8144 162.218 92.7431 163.908 94.1454 164.365 cv
96.9843 165.292 101.21 162.195 102.463 159.905 cv
102.893 159.118 102.032 158.256 101.244 158.686 cv
cp
f
97.5927 155.179 mo
97.5283 155.179 97.5283 155.279 97.5927 155.279 cv
97.6572 155.279 97.6572 155.179 97.5927 155.179 cv
cp
f
159.25 138.585 mo
157.319 142.436 153.239 144.357 150.774 147.773 cv
150.076 148.742 149.734 150.112 149.013 150.995 cv
148.391 153.603 146.242 154.196 142.566 152.775 cv
142.073 151.997 141.642 151.187 141.272 150.344 cv
140.151 148.027 136.701 150.053 137.819 152.363 cv
138.606 153.99 139.804 155.546 141.198 156.735 cv
141.004 157.17 140.78 157.593 140.535 158.004 cv
139.911 157.759 139.188 157.849 138.603 158.536 cv
131.293 167.114 122.737 174.475 113.001 180.184 cv
101.984 186.643 89.579 192.013 77.0507 186.493 cv
77.0341 186.486 77.0185 186.484 77.0019 186.477 cv
68.1728 180.57 58.9501 174.953 50.6533 168.32 cv
42.6064 161.886 35.2841 153.352 34.4755 142.647 cv
33.7079 132.471 34.3202 121.972 34.5507 111.777 cv
34.789 101.237 34.2001 89.0892 36.9941 78.8031 cv
37.498 78.6102 37.9257 78.2064 38.1181 77.5331 cv
40.4355 69.4159 42.7001 59.6229 49.3466 53.89 cv
55.1542 48.8802 62.8808 44.7645 70.0536 42.1561 cv
85.1337 36.6727 102 37.7274 117.019 42.8426 cv
132.882 48.2445 145.109 57.5755 150.05 74.058 cv
154.536 89.0223 157.009 107.396 152.402 122.553 cv
145.485 124.526 142.817 132.556 140.372 138.705 cv
139.421 141.097 143.288 142.136 144.229 139.768 cv
145.923 135.509 147.538 129.575 151.803 127.096 cv
159.52 122.61 161.987 133.128 159.25 138.585 cv
cp
156.667 122.181 mo
160.268 108.955 158.499 94.6873 155.93 81.4046 cv
153.518 68.932 148.7 57.1561 138.339 49.2518 cv
117.333 33.2259 85.0849 29.5702 61.4892 41.5521 cv
55.1484 44.7718 47.8593 48.68 43.3515 54.3504 cv
38.7333 60.1595 36.5615 68.327 34.5536 75.4359 cv
34.0507 75.6288 33.621 76.0301 33.4218 76.6971 cv
30.1679 87.6078 30.8066 100.484 30.5507 111.777 cv
30.4111 117.939 30.3749 124.104 30.3681 130.268 cv
30.3622 135.559 29.9521 141.064 30.9247 146.297 cv
34.8124 167.222 58.2577 178.893 74.5527 189.645 cv
74.6425 189.72 74.746 189.787 74.8603 189.85 cv
75.1689 190.055 75.4794 190.259 75.7822 190.463 cv
76.2421 190.773 76.6933 190.846 77.1015 190.771 cv
88.7743 195.031 99.8554 191.702 110.746 186.005 cv
121.975 180.131 131.934 172.14 140.291 162.642 cv
141.015 162.91 141.913 162.821 142.413 162.207 cv
143.315 161.099 144.054 159.937 144.661 158.684 cv
147.083 159.369 149.596 158.64 151.442 155.405 cv
152.558 153.451 153.013 151.28 154.48 149.502 cv
155.847 147.847 157.672 146.599 159.208 145.113 cv
161.978 142.431 163.884 139.082 164.389 135.224 cv
165.167 129.28 162.631 122.917 156.667 122.181 cv
cp
.156863 .113725 .113725 rgb
f
153.856 137.54 mo
153.758 136.872 153.068 136.314 152.46 136.143 cv
150.991 135.731 149.676 136.138 148.513 137.06 cv
147.666 137.732 147.81 139.186 148.513 139.889 cv
148.798 140.173 149.119 140.334 149.451 140.407 cv
148.995 141.289 149.347 142.543 150.232 143.011 cv
151.223 143.534 152.367 143.237 152.969 142.294 cv
153.896 140.841 154.105 139.216 153.856 137.54 cv
cp
f
78.9062 156.008 mo
78.6445 155.055 77.455 154.208 76.4462 154.611 cv
75.5507 154.969 75.0624 154.893 74.4091 154.083 cv
73.7294 153.243 72.287 153.377 71.58 154.083 cv
70.749 154.915 70.8993 156.069 71.58 156.912 cv
72.9384 158.594 75.4999 159.271 77.5097 158.469 cv
78.5117 158.068 79.2158 157.133 78.9062 156.008 cv
cp
f
90.0146 170.347 mo
90.0683 170.416 89.7861 169.36 89.664 169.07 cv
89.3867 168.405 88.9833 167.845 88.454 167.354 cv
87.3652 166.344 86.0439 165.519 84.5185 165.51 cv
82.6884 165.499 80.6435 166.186 79.2118 167.445 cv
75.5771 163.855 66.6718 163.156 66.9462 169.277 cv
67.0605 171.84 71.0615 171.854 70.9462 169.277 cv
70.8818 167.843 76.4921 169.43 76.8007 171.018 cv
77.0185 172.14 77.9003 172.55 78.7704 172.441 cv
79.7763 172.826 81.0429 172.519 81.3769 171.175 cv
81.7128 169.828 84.1474 169.203 85.2109 169.848 cv
86.2909 170.504 86.413 172.178 87.1865 173.175 cv
88.7617 175.206 91.5742 172.357 90.0146 170.347 cv
cp
f
107.168 139.074 mo
103.881 140.753 100.301 141.824 96.579 141.758 cv
93.5302 141.704 88.0751 140.927 86.288 137.831 cv
86.5488 137.596 86.7441 137.257 86.8232 136.793 cv
87.8896 130.599 95.5449 126.174 100.967 124.463 cv
104.085 123.478 107.454 122.853 110.709 122.613 cv
113.808 122.384 115.902 123.941 118.632 125.045 cv
118.935 125.168 119.227 125.195 119.499 125.152 cv
120.983 131.343 111.944 136.635 107.168 139.074 cv
cp
123.333 112.731 mo
116.949 113.834 110.362 113.667 104.059 115.163 cv
103.993 115.179 103.93 115.2 103.865 115.215 cv
103.56 115.24 103.261 115.267 102.971 115.3 cv
99.0283 115.736 94.5615 117.935 90.6679 121.015 cv
89.6757 121.665 88.6992 122.342 87.7538 123.068 cv
87.2636 123.444 87.0146 123.934 86.9413 124.438 cv
83.9589 127.609 81.7138 131.238 81.0009 134.738 cv
80.8134 135.658 81.2138 136.382 81.8193 136.81 cv
82.8954 144.396 93.6581 146.512 100.511 145.463 cv
108.532 144.235 123.021 136.819 123.902 127.473 cv
124.237 123.92 123.068 121.309 121.061 119.426 cv
122.635 118.674 124.067 117.611 125.279 116.074 cv
126.532 114.482 125.385 112.376 123.333 112.731 cv
cp
f
54.8124 136.965 mo
49.7802 136.485 44.0468 134.848 40.9228 130.598 cv
38.7558 127.648 38.6904 124.381 39.9286 121.993 cv
45.1367 120.467 50.3368 123.603 54.414 126.504 cv
56.249 127.81 58.2392 129.106 59.6181 130.91 cv
60.538 132.114 60.8632 133.582 62.0654 134.528 cv
62.1923 134.628 62.329 134.699 62.4658 134.768 cv
60.9413 136.67 57.704 137.242 54.8124 136.965 cv
cp
66.3984 127.878 mo
64.9257 125.212 62.7929 122.726 60.2724 120.683 cv
54.7968 114.579 47.4736 111.927 39.7802 109.317 cv
38.1513 108.764 36.5849 110.823 37.5214 112.255 cv
38.3681 113.55 39.3242 114.689 40.3964 115.69 cv
37.1034 117.299 34.7499 120.599 34.8554 125.289 cv
35.079 135.244 45.7294 140.092 54.2743 140.942 cv
61.8183 141.692 71.1767 136.53 66.3984 127.878 cv
cp
f
117.271 96.8924 mo
103.391 94.0418 88.956 104.421 81.9765 115.982 cv
81.6669 116.269 81.3525 116.551 81.0468 116.844 cv
80.0712 117.782 80.3925 119.001 81.1816 119.695 cv
81.9589 120.747 83.7021 121.101 84.5009 119.618 cv
84.6982 119.251 84.9072 118.884 85.124 118.516 cv
93.9609 110.459 104.648 105.236 116.464 103.113 cv
117.336 102.956 117.908 102.006 117.932 101.184 cv
117.94 100.881 117.927 100.604 117.899 100.341 cv
119.033 99.3968 119.103 97.2689 117.271 96.8924 cv
cp
f
66.6308 114.202 mo
61.8974 109.333 57.0829 104.428 51.3906 100.664 cv
48.3847 98.6761 40.4589 93.2889 36.7607 96.5872 cv
33.1152 99.8377 39.1972 101.887 41.2919 102.871 cv
48.5546 106.283 55.2695 110.647 61.414 115.8 cv
61.9355 116.237 62.5165 116.352 63.0556 116.265 cv
63.3036 116.52 63.5546 116.775 63.8027 117.03 cv
65.6005 118.879 68.4267 116.049 66.6308 114.202 cv
cp
f
98.2177 130.434 mo
98.1347 130.434 li
97.0888 130.434 96.0859 131.354 96.1347 132.434 cv
96.1835 133.518 97.0136 134.434 98.1347 134.434 cv
98.2177 134.434 li
99.2636 134.434 100.267 133.514 100.218 132.434 cv
100.17 131.351 99.3388 130.434 98.2177 130.434 cv
cp
f
49.8847 127.101 mo
48.8007 127.15 47.8847 127.98 47.8847 129.101 cv
47.8847 129.184 li
47.8847 130.23 48.8046 131.233 49.8847 131.184 cv
50.9677 131.136 51.8847 130.306 51.8847 129.184 cv
51.8847 129.101 li
51.8847 128.055 50.9648 127.053 49.8847 127.101 cv
cp
f
169.397 73.7835 mo
161.126 57.3958 147.032 43.0956 128.927 38.7362 cv
129.095 38.6834 129.259 38.6209 129.427 38.5697 cv
130.177 38.8846 131.079 38.7972 131.808 38.097 cv
131.906 38.0028 131.989 37.9139 132.075 37.8241 cv
136.529 36.6248 141.094 35.7933 145.803 35.4061 cv
148.735 35.1654 149.278 31.3456 146.49 30.3289 cv
135.66 26.3817 122.246 27.2059 112.971 34.4808 cv
112.094 31.3646 111.061 28.2918 109.873 25.2884 cv
107.62 19.5936 103.927 14.3504 102.209 8.48373 cv
101.359 5.58139 97.3876 6.86313 97.7997 9.69955 cv
98.498 14.5204 96.912 19.2586 97.6044 24.0789 cv
97.914 26.2323 97.9843 28.3617 98.0409 30.4857 cv
95.8661 28.8597 93.5077 27.471 91.082 26.2752 cv
83.0351 22.3084 74.079 18.7455 65.0331 20.8685 cv
55.7294 23.0521 48.5029 29.7376 41.8261 36.1776 cv
34.3368 43.4007 28.6064 51.8709 22.5146 60.2498 cv
19.7636 62.6747 16.539 64.3182 12.7187 64.5457 cv
8.99505 64.7674 9.15032 69.7923 12.7187 70.2215 cv
16.9824 70.7342 20.2001 73.3792 24.1757 73.4627 cv
21.7294 78.0042 19.4159 82.6224 17.1503 87.2523 cv
12.4413 96.8763 6.44915 108.197 6.14837 119.108 cv
6.04974 122.662 9.35149 121.336 10.4345 119.581 cv
10.5253 119.701 li
11.2402 117.723 11.8329 115.709 12.4101 113.689 cv
12.6337 113.53 12.8329 113.335 12.9902 113.098 cv
14.8495 110.29 15.7226 106.52 18.2314 104.173 cv
20.4765 102.072 23.5527 101.715 26.1386 100.216 cv
29.7529 98.1205 31.4687 94.8285 35.7997 93.7269 cv
39.5986 92.7606 43.5888 93.159 47.4404 93.5116 cv
53.7861 94.0921 59.0761 94.8368 64.2197 90.6292 cv
67.3525 88.0663 70.1103 86.1654 73.9325 84.7489 cv
75.0947 84.3182 83.8466 81.0702 84.3574 82.3622 cv
84.9687 83.9115 86.3154 84.8499 88.0331 84.4491 cv
96.7236 82.4232 105.658 85.8421 111.458 92.5081 cv
112.821 94.0755 115.176 92.7191 115.284 90.9237 cv
116.202 89.9183 117.292 89.534 118.553 89.7699 cv
120.324 90.2025 121.579 91.2025 122.318 92.7689 cv
123.438 94.1058 124.257 95.8451 125.129 97.3392 cv
126.224 99.2142 127.264 101.125 128.324 103.023 cv
128.908 105.001 129.321 107.028 129.219 109.062 cv
129.099 109.596 129.043 110.129 129.064 110.64 cv
129.129 110.64 li
129.288 112.1 131 113.346 132.238 111.955 cv
132.883 111.232 133.738 110.11 134.638 109.376 cv
138.382 113.668 140.139 120.816 141.059 125.984 cv
141.499 128.46 145.455 128.364 145.967 125.984 cv
146.652 122.804 150.342 122.289 153.055 121.888 cv
156.427 121.389 158.883 122.861 160.154 126.097 cv
161.796 130.277 162.038 134.705 161.488 139.126 cv
161.151 141.833 165.822 142.485 166.283 139.775 cv
168.296 127.934 171.024 116.255 172.68 104.349 cv
174.131 93.9095 174.252 83.4012 169.397 73.7835 cv
cp
.807843 .917647 .988235 rgb
f
68.2255 52.9471 mo
60.8154 53.6331 53.7226 55.6414 47.245 59.3495 cv
41.3749 62.7098 34.0888 67.6234 30.998 73.8275 cv
30.6542 74.5164 31.4658 75.1341 32.0468 74.6366 cv
37.3661 70.0887 41.2939 64.972 47.6367 61.5423 cv
54.0156 58.0926 61.0117 55.9701 68.2255 55.2909 cv
69.7138 55.1507 69.7304 52.808 68.2255 52.9471 cv
cp
.713726 .819608 .803922 rgb
f
43.9228 58.0741 mo
41.9072 58.8133 40.2275 60.2777 38.5605 61.599 cv
36.6259 63.1312 34.7734 64.7572 32.9814 66.452 cv
31.9687 67.409 33.4863 68.9129 34.5058 67.9769 cv
36.1425 66.4735 37.8251 65.0233 39.5761 63.6541 cv
41.29 62.3143 43.3251 61.181 44.789 59.5628 cv
45.3378 58.9554 44.8144 57.7469 43.9228 58.0741 cv
cp
f
101.597 10.7401 mo
100.458 9.80112 98.7031 10.6629 99.0693 12.2113 cv
99.8603 15.5443 101.648 18.5858 102.586 21.9066 cv
103.658 25.7088 103.42 29.5526 104.236 33.3617 cv
104.573 34.9334 106.97 35.2376 107.706 33.8153 cv
111.103 27.2484 107.124 15.3031 101.597 10.7401 cv
cp
f
144.097 34.8255 mo
137.333 30.9583 128.263 32.9461 121.51 35.8104 cv
120.051 36.429 121.092 38.8963 122.594 38.3807 cv
129.841 35.891 136.006 37.2708 143.369 37.5116 cv
144.81 37.5589 145.317 35.5233 144.097 34.8255 cv
cp
f
160.313 86.305 mo
159.708 84.8094 159.059 83.3246 158.365 81.8592 cv
159.245 81.8875 160.041 81.0023 159.514 80.0155 cv
156.083 73.596 151.604 67.2518 146.303 62.0956 cv
146.468 62.1834 146.633 62.2655 146.799 62.3573 cv
148.105 63.0799 149.268 61.097 147.97 60.3534 cv
145.655 59.0287 143.146 57.9872 140.544 57.2474 cv
132.353 51.3519 122.693 48.5545 112.174 51.9129 cv
113.501 49.7162 114.794 47.495 116.04 45.2357 cv
116.132 45.0682 116.165 44.9076 116.172 44.7533 cv
117.739 44.1707 119.269 43.8436 120.931 44.7376 cv
121.316 44.9456 121.651 45.2362 121.986 45.5267 cv
122.252 46.3539 123.074 46.7303 123.825 46.6463 cv
125.116 47.0985 126.44 47.0936 127.816 47.4051 cv
129.054 47.6849 130.771 48.43 132.103 48.2972 cv
134.916 49.1932 137.63 50.3436 140.224 51.7118 cv
142.834 53.6859 145.401 55.5892 148.292 57.0208 cv
151.713 59.7811 154.784 62.9935 157.393 66.6053 cv
160.831 71.369 162.756 76.4168 163.937 81.6756 cv
164.01 87.0497 164.3 92.3548 164.231 97.6971 cv
163.249 93.6463 161.675 89.6664 160.313 86.305 cv
cp
130.082 58.7704 mo
132.075 58.5609 134.091 58.5623 136.124 58.8075 cv
136.747 59.2074 137.361 59.6258 137.962 60.0785 cv
138.114 60.1932 138.257 60.3163 138.406 60.4334 cv
135.734 59.4676 132.948 58.951 130.082 58.7704 cv
cp
127.371 55.0736 mo
128.37 55.3133 129.359 55.6034 130.333 55.9539 cv
129.873 55.9671 129.415 56.0008 128.958 56.034 cv
128.44 55.6864 127.909 55.3705 127.371 55.0736 cv
cp
104.044 54.2694 mo
105.816 51.5208 107.513 48.7225 109.132 45.8807 cv
110.298 44.4271 111.34 42.9002 111.994 41.118 cv
112.657 41.7367 113.254 42.4149 114.067 42.9251 cv
114.109 42.951 114.155 42.9613 114.199 42.9784 cv
114.145 43.1092 114.093 43.2645 114.037 43.4364 cv
113.696 43.4447 113.358 43.5623 113.077 43.8338 cv
109.763 47.0374 106.758 50.5457 104.044 54.2694 cv
cp
165.335 76.286 mo
165.119 75.6981 164.367 75.6512 164.076 76.0926 cv
161.538 68.6385 157.451 61.9476 151.926 56.5677 cv
151.902 56.5389 151.89 56.5052 151.862 56.4784 cv
146.484 51.3563 140.288 45.8822 133.406 42.8778 cv
130.72 41.7054 124.606 39.6341 122.565 42.3182 cv
120.556 41.2289 118.778 41.37 116.836 41.9613 cv
116.457 41.4964 115.79 41.2567 115.224 41.6419 cv
114.423 39.6122 112.404 35.5965 109.875 36.87 cv
109.693 36.9618 109.522 37.0809 109.359 37.2166 cv
109.001 37.3831 108.679 37.6751 108.446 38.1312 cv
108.18 38.6546 107.893 39.1615 107.621 39.6795 cv
107.388 40.1151 107.168 40.5331 106.952 40.8758 cv
105.917 42.5238 104.877 44.1722 103.787 45.785 cv
103.744 45.8358 103.702 45.8866 103.659 45.9373 cv
103.459 44.4852 101.9 43.6805 100.637 44.057 cv
100.627 44.0365 100.628 44.0169 100.617 43.9959 cv
97.6708 38.2372 92.0195 31.9964 86.4267 28.6312 cv
80.7079 25.1893 73.8847 24.5418 67.3837 23.9476 cv
65.9335 23.8153 65.9638 26.0433 67.3837 26.1976 cv
73.9628 26.9134 80.7704 27.7122 86.2831 31.6981 cv
91.4199 35.412 94.3495 41.1112 98.998 45.2459 cv
99.0742 45.3143 99.1572 45.3529 99.2382 45.3954 cv
99.1074 45.6981 98.9218 46.1624 98.7353 46.6688 cv
98.5732 46.2269 98.4111 45.7855 98.2617 45.3382 cv
97.5663 43.2567 94.8232 43.7743 94.5956 45.8343 cv
94.582 45.9505 94.579 46.0643 94.5683 46.1795 cv
91.4462 44.4456 87.8388 43.1981 84.4697 42.1239 cv
87.1855 42.8407 89.9306 43.3656 92.7216 43.4486 cv
93.6611 43.4769 93.6816 42.2367 92.9277 41.9295 cv
85.5136 38.91 77.0908 35.9603 69.2001 34.5067 cv
63.0136 33.3665 57.3398 34.7811 52.1923 38.3612 cv
46.3808 42.4037 42.37 48.2245 37.5058 53.2533 cv
31.621 59.3353 24.288 62.9115 16.6572 66.2923 cv
15.7089 66.7122 16.3954 68.3802 17.3701 67.9847 cv
23.6171 65.4486 29.9882 62.8958 35.3115 58.6624 cv
40.4843 54.5497 44.33 49.1175 49.0419 44.5331 cv
55.7529 38.0023 62.706 35.7894 71.8271 38.2625 cv
74.2294 38.9144 76.6357 39.7201 79.0566 40.5013 cv
74.0898 39.1786 69.0087 38.3597 63.8915 37.8324 cv
62.2265 37.6605 62.2812 40.2015 63.8915 40.4105 cv
69.8408 41.1825 75.662 42.4969 81.4033 44.2337 cv
85.8964 45.5931 90.1454 47.8778 94.5781 49.349 cv
94.6376 49.9544 94.7275 50.556 94.8495 51.1532 cv
94.3642 52.6644 94.3349 54.0628 94.912 55.7347 cv
94.9169 55.7498 94.9257 55.7625 94.9306 55.7777 cv
93.5937 54.9657 91.788 54.6405 90.3837 53.9349 cv
88.622 53.0497 86.9706 51.9881 85.4784 50.6927 cv
83.3173 48.8177 82.1357 46.4608 79.0302 47.014 cv
77.3495 47.3138 77.5693 49.7704 79.0302 50.2005 cv
79.8613 50.4452 80.6659 51.0706 81.4433 51.7923 cv
81.5077 51.9627 81.6161 52.1288 81.7919 52.2796 cv
82.2441 52.6668 82.6884 53.0589 83.1288 53.4544 cv
83.4228 53.745 83.7089 54.0072 83.9911 54.2489 cv
85.1952 55.3685 86.3593 56.5272 87.4579 57.7655 cv
88.9804 59.4798 89.7275 59.3451 87.4863 61.0311 cv
86.8437 61.5145 86.4306 61.8104 86.1552 61.9466 cv
85.9325 61.3099 85.7021 60.6756 85.4609 60.0448 cv
84.6327 57.8836 81.6767 58.9251 82.1659 60.953 cv
82.1572 60.9554 82.1474 60.9579 82.1386 60.9608 cv
82.2138 61.3109 82.2988 61.6581 82.3798 62.0062 cv
81.9081 62.1161 81.4794 62.37 81.2597 62.8392 cv
80.5917 64.2684 80.4179 65.8578 80.5566 67.4618 cv
74.3798 63.5374 67.0136 61.7332 59.6386 62.4115 cv
54.7529 62.8607 44.746 65.1336 45.5566 71.7342 cv
41.8408 73.1678 38.3691 75.3734 37.8251 78.8519 cv
37.7792 79.1449 37.8534 79.4539 37.995 79.7245 cv
35.5253 80.6947 33.1962 82.0648 31.0829 83.8475 cv
33.7363 79.5233 36.0908 75.2269 39.8163 71.4608 cv
44.5468 66.68 50.2392 63.1346 56.5341 60.8153 cv
57.8193 60.3416 57.2851 58.2801 55.9609 58.7357 cv
44.2519 62.7669 30.0126 73.0819 27.5449 86.1258 cv
27.4667 86.536 27.6367 86.8656 27.8984 87.0609 cv
27.8427 87.1283 27.7822 87.1903 27.7265 87.2586 cv
26.4628 88.1717 25.3124 89.1449 24.3574 90.0101 cv
24.0888 90.2533 23.8368 90.5111 23.579 90.764 cv
23.8447 89.6869 22.6191 88.8021 21.6796 89.6234 cv
13.6767 96.6195 7.79974 108.923 6.88275 119.49 cv
6.76556 120.831 8.88665 121.411 9.45892 120.188 cv
11.7402 115.314 13.3906 110.184 15.8222 105.364 cv
16.1298 104.755 16.4589 104.159 16.7783 103.557 cv
17.4697 104.003 18.5048 104.003 18.9091 103.134 cv
20.8779 98.9115 23.6327 95.4041 27.287 92.5106 cv
30.5038 89.9637 34.7382 88.9564 37.7704 86.3446 cv
38.6181 85.6141 38.1445 84.5511 37.3456 84.1082 cv
40.0097 82.7108 42.9658 81.8636 46.0439 81.6971 cv
50.7597 81.4422 55.8534 84.5746 60.1933 82.1698 cv
60.9628 81.744 60.6562 80.7635 59.9726 80.4779 cv
54.1445 78.0438 48.0087 77.3202 42.3378 78.4471 cv
51.3212 72.9622 61.2988 71.1722 71.8759 73.8587 cv
74.0986 74.4232 75.04 71.0213 72.8232 70.4237 cv
66.0839 68.6058 59.1181 68.3133 52.2783 69.8065 cv
51.456 69.9862 50.5136 70.2059 49.5204 70.4686 cv
50.5868 69.3163 51.747 68.325 53.4697 67.6073 cv
56.6269 66.2914 60.2187 65.9657 63.6113 66.0565 cv
69.5917 66.2166 75.1337 68.2118 80.204 71.2142 cv
79.3671 72.6859 79.0908 74.7806 78.8984 76.4666 cv
76.04 75.4012 71.373 76.2938 69.6835 78.5199 cv
64.787 80.9422 60.1972 83.5428 54.7841 84.764 cv
48.6249 86.1532 42.287 86.679 36.0917 87.8993 cv
34.2275 88.2664 35.037 91.0291 36.871 90.724 cv
43.0732 89.6917 51.9062 89.952 59.3242 88.0223 cv
59.3534 88.2064 59.4072 88.3905 59.5019 88.5706 cv
59.5536 88.6712 59.6064 88.7713 59.6581 88.8719 cv
60.0185 89.5623 60.8017 89.6058 61.3964 89.2938 cv
61.3964 89.3275 li
63.9824 87.7005 65.788 85.223 68.6357 83.7484 cv
69.0986 83.5086 69.5683 83.2835 70.0429 83.0692 cv
70.7802 83.7337 71.8408 84.0189 73.037 83.6224 cv
73.6533 83.4183 73.9355 82.619 73.4296 82.1341 cv
73.5898 81.9305 73.7538 81.7455 73.9218 81.5775 cv
75.0829 81.1922 76.2587 80.8441 77.4374 80.513 cv
77.6415 80.5648 77.8486 80.6312 78.0595 80.7166 cv
78.8466 80.8622 79.6367 80.9857 80.4306 81.0872 cv
81.4501 81.1263 82.5556 81.2645 83.4775 80.6454 cv
85.2011 79.4891 85.0732 77.8675 84.2968 76.264 cv
84.0654 75.7865 83.539 75.4593 82.9892 75.3519 cv
83.0107 75.2523 83.0253 75.1517 83.0478 75.0521 cv
83.0917 74.9847 83.1044 74.932 83.1347 74.8705 cv
84.3466 76.2069 86.5917 74.8451 86.2802 73.0135 cv
86.12 72.0736 85.7431 71.1195 85.1513 70.4266 cv
85.0634 70.201 84.9775 69.9706 84.8964 69.7357 cv
85.8613 70.4784 87.3759 69.9642 87.832 68.7591 cv
88.287 69.1698 88.9452 69.3343 89.4579 69.0433 cv
89.8534 69.1063 90.2792 68.9813 90.6572 68.5658 cv
92.3007 66.7586 96.5868 61.6942 96.4345 58.2645 cv
96.4902 58.1717 96.5488 58.0804 96.6015 57.9862 cv
96.7343 57.7533 96.7831 57.5277 96.7939 57.3104 cv
96.9863 57.3514 97.1796 57.3685 97.372 57.3665 cv
97.6943 58.8636 99.9511 59.4622 101.225 58.3763 cv
99.3583 61.2704 97.6513 64.2689 96.121 67.3519 cv
95.7568 67.327 95.3867 67.4828 95.1523 67.9124 cv
93.6552 70.6395 92.1181 73.3441 90.5175 76.0106 cv
90.371 76.0311 90.2304 76.0926 90.1191 76.2059 cv
88.9101 77.4315 88.2636 78.9798 87.7324 80.6004 cv
87.2695 82.014 89.3632 82.8441 90.0986 81.598 cv
90.3652 81.1473 90.6269 80.6947 90.8925 80.243 cv
91.165 80.7215 91.7851 80.9686 92.3144 80.4408 cv
94.6796 78.0819 96.748 75.4769 98.6054 72.7235 cv
98.0722 74.1434 100.14 75.3163 100.911 73.8841 cv
103.027 69.9554 105.154 65.9222 108.211 62.6278 cv
110.918 59.7118 114.281 57.9222 117.704 56.0379 cv
119.649 56.1009 121.57 56.4798 123.529 56.9276 cv
120.987 57.5951 118.548 58.6009 116.31 59.9906 cv
114.618 60.3377 112.915 60.7386 111.206 61.1795 cv
109.348 61.6595 109.504 63.9217 110.763 64.7259 cv
110.459 65.0794 110.162 65.4432 109.875 65.8192 cv
109.357 66.4979 110.383 67.5121 111.061 67.0057 cv
112.358 66.0384 113.674 65.139 115.006 64.3128 cv
120.916 62.9632 127.097 61.8221 133.068 63.1053 cv
139.716 64.534 144.821 69.1419 148.6 74.5951 cv
152.222 79.8226 154.924 85.7567 156.989 91.7503 cv
157.688 93.7796 158.196 95.9124 158.683 98.0599 cv
158.258 98.0619 157.818 98.3011 157.642 98.6732 cv
155.504 96.8739 152.981 95.8944 150.131 96.2972 cv
150.127 96.2874 150.129 96.2796 150.125 96.2699 cv
148.962 93.3685 147.374 90.6288 145.497 88.058 cv
148.503 89.076 151.209 92.3348 153.592 94.7992 cv
154.278 95.5096 155.716 94.7845 155.335 93.7845 cv
153.212 88.2166 148.013 82.846 142.221 84.0477 cv
138.478 79.9427 134.035 76.3954 129.484 73.4964 cv
129.545 73.2494 129.54 72.9896 129.469 72.7577 cv
134.807 73.8871 138.84 78.4413 143.962 80.305 cv
144.901 80.6468 145.684 79.2704 144.942 78.6205 cv
141.002 75.1654 136.443 70.6439 131.176 69.2083 cv
131.162 68.9261 131.03 68.6483 130.762 68.4837 cv
119.426 61.5667 105.85 70.3202 101.174 81.1419 cv
100.457 82.8001 102.863 84.2708 103.643 82.5853 cv
107.49 74.2664 114.273 71.1351 122.101 70.307 cv
119.859 71.6673 118.325 73.7889 117.178 76.2039 cv
114.812 78.6317 113.312 82.3841 114.069 85.7464 cv
114.03 85.8875 113.99 86.0321 113.951 86.1712 cv
113.489 87.8055 115.968 88.4706 116.482 86.869 cv
117.569 83.4906 118.726 79.0399 120.981 75.9945 cv
122.719 75.0912 124.742 74.7655 126.746 74.5794 cv
131.537 77.7435 135.473 81.3695 139.067 85.3582 cv
138.867 85.4857 138.666 85.619 138.465 85.764 cv
138.069 86.0506 137.695 86.3534 137.341 86.6693 cv
137.247 86.5135 137.149 86.3646 137.053 86.2122 cv
137.671 86.1004 138.232 85.6151 137.935 84.9081 cv
137.027 82.7474 135.066 81.3817 132.761 80.9886 cv
132.586 80.9588 132.414 80.9564 132.241 80.9398 cv
130.299 79.6581 128.032 78.9789 125.583 79.2655 cv
123.585 79.4989 123.56 82.6659 125.583 82.4295 cv
125.828 82.4007 126.068 82.3846 126.305 82.3788 cv
125.744 82.66 125.193 82.9569 124.657 83.2562 cv
122.877 84.2494 124.464 86.9618 126.254 85.9881 cv
127.785 85.1551 129.451 84.1898 131.227 84.1395 cv
132.348 85.0472 133.3 86.2352 134.086 87.5472 cv
134.431 88.1229 134.731 88.7328 135.02 89.3524 cv
131.743 94.2127 131.462 100.83 132.592 106.499 cv
132.91 108.094 135.209 107.381 134.987 105.838 cv
134.381 101.609 134.695 96.8158 136.793 92.9808 cv
137.252 93.7581 137.775 94.4872 138.448 95.1034 cv
138.986 95.5956 139.745 95.224 139.809 94.5399 cv
139.941 93.1224 139.598 91.556 139.003 90.0116 cv
139.863 89.1517 140.706 88.558 141.53 88.1991 cv
143.803 90.9183 145.99 93.7826 148.235 96.7601 cv
147.615 96.973 146.984 97.2328 146.339 97.5789 cv
144.909 98.3456 146.164 100.384 147.593 99.7245 cv
150.291 98.4789 152.678 99.0077 154.672 100.398 cv
154.059 100.331 153.416 100.319 152.733 100.395 cv
146.602 101.082 144.468 106.568 143.397 111.859 cv
143.077 113.442 145.391 114.116 145.838 112.532 cv
146.847 108.958 148.075 105.194 152.197 104.328 cv
157.009 103.317 158.544 107.725 160.555 111.085 cv
160.723 111.366 161.001 111.514 161.296 111.567 cv
161.591 112.656 161.854 113.754 162.12 114.85 cv
162.639 119.528 162.028 123.976 162.155 128.688 cv
162.173 129.325 163.077 129.63 163.4 129.025 cv
165.127 125.791 165.605 122.092 165.342 118.282 cv
165.447 115.773 165.062 112.85 164.24 109.962 cv
164.292 109.919 164.331 109.864 164.376 109.814 cv
165.228 110.3 166.401 110.129 166.569 108.916 cv
168.03 98.4076 169.053 86.4364 165.335 76.286 cv
cp
f
153.849 81.3255 mo
149.129 76.2738 143.177 71.8573 136.873 69.2328 cv
136.727 68.9808 136.594 68.7269 136.438 68.4759 cv
135.57 67.0804 134.778 65.6473 133.996 64.2122 cv
136.204 65.1351 138.355 66.1913 140.432 67.3949 cv
145.802 70.5086 149.801 74.9364 154.576 78.6927 cv
154.785 79.1024 155.015 79.4994 155.214 79.9154 cv
154.638 80.2298 154.191 80.7166 153.849 81.3255 cv
cp
152.553 90.973 mo
152.224 94.7357 151.858 98.4832 151.389 102.229 cv
150.883 101.266 150.304 100.321 149.676 99.3895 cv
149.643 99.1898 149.619 98.9886 149.583 98.7899 cv
149.572 98.7328 149.555 98.6795 149.544 98.6224 cv
148.953 92.2904 146.292 86.0472 143.396 80.5345 cv
142.146 78.1546 140.626 75.8216 139.035 73.492 cv
140.232 74.1141 141.394 74.7699 142.502 75.4456 cv
146.47 77.867 149.856 80.8338 152.955 84.1019 cv
152.542 86.5638 152.69 89.4051 152.553 90.973 cv
cp
150.362 110.488 mo
150.218 108.448 150.201 106.381 150.119 104.325 cv
150.339 104.523 150.547 104.737 150.771 104.93 cv
150.856 105.004 150.945 105.052 151.034 105.092 cv
150.827 106.85 150.643 108.682 150.362 110.488 cv
cp
166.532 92.118 mo
166.301 86.7855 165.414 81.5018 163.735 76.4793 cv
159.703 64.4198 150.163 57.7811 142.345 48.3895 cv
141.397 47.2523 139.852 48.8685 140.737 49.9974 cv
148.017 59.2909 157.153 66.4559 160.642 78.2206 cv
161.925 82.5492 162.477 86.9251 162.678 91.327 cv
159.182 77.1605 149.07 64.2279 137.143 56.6258 cv
136.206 56.0282 135.381 57.4867 136.279 58.1029 cv
140.479 60.9828 144.275 64.3788 147.557 68.2108 cv
142.829 64.7884 137.275 62.2235 132.42 60.5711 cv
132.251 60.5135 132.069 60.4539 131.88 60.3929 cv
130.904 58.6986 129.862 57.0423 128.643 55.4847 cv
128.042 54.7171 126.962 55.5721 127.133 56.3631 cv
127.352 57.3758 127.65 58.3724 128.009 59.3558 cv
122.09 58.0702 114.2 57.7835 116.103 65.4325 cv
116.353 66.433 117.851 66.0072 117.641 65.0086 cv
116.37 58.9535 123.555 60.9364 125.748 61.4876 cv
126.969 61.7943 128.183 62.1478 129.386 62.5257 cv
130.259 64.2826 131.276 66.0013 132.357 67.6898 cv
126.065 66.0145 119.643 66.3221 113.926 69.7313 cv
112.862 70.3656 113.81 71.9872 114.895 71.391 cv
121.214 67.9222 128.424 68.9622 134.948 71.6034 cv
136.229 73.5052 137.489 75.3802 138.58 77.2415 cv
141.909 82.9227 144.182 88.4398 145.685 94.3714 cv
141.378 89.6527 136.083 85.4525 131.65 81.8963 cv
124.954 76.5233 117.212 72.7206 108.551 75.2918 cv
106.935 75.7718 107.618 78.2918 109.248 77.8231 cv
118.966 75.0301 127.605 81.1898 134.498 87.3548 cv
139.163 91.5272 142.827 96.7557 147.065 101.309 cv
147.19 102.151 147.319 102.991 147.421 103.857 cv
147.435 103.989 147.478 104.098 147.522 104.204 cv
147.789 108.701 147.509 113.177 148.641 117.611 cv
148.934 118.758 150.8 119.148 151.337 117.964 cv
154.465 111.067 153.376 102.1 154.096 94.6961 cv
154.307 92.5233 154.564 90.3543 154.765 88.1805 cv
154.825 87.5389 154.869 86.8958 154.921 86.2538 cv
155.56 86.9798 156.189 87.7162 156.81 88.4637 cv
156.882 89.0829 156.953 89.659 157.046 90.1288 cv
157.543 92.6576 158.005 95.1922 158.451 97.7298 cv
158.624 98.7083 160.114 98.2938 159.943 97.3187 cv
159.56 95.1478 159.142 92.9852 158.723 90.8226 cv
158.827 90.9544 158.934 91.0833 159.038 91.2157 cv
160.577 98.242 160.861 105.471 160.975 112.822 cv
160.986 113.618 162.125 113.771 162.355 113.009 cv
162.4 112.859 162.435 112.708 162.478 112.559 cv
162.48 112.882 162.479 113.205 162.485 113.529 cv
162.5 114.43 163.833 114.639 164.073 113.743 cv
164.954 110.451 165.617 107.056 166.046 103.619 cv
166.42 109.321 165.108 114.598 164.808 120.226 cv
164.763 121.065 165.933 121.307 166.336 120.64 cv
171.068 112.83 168.944 101.563 166.532 92.118 cv
cp
.545098 .6 .572549 rgb
f
140.016 36.3846 mo
135.969 31.9222 127.134 33.6434 121.888 34.1673 cv
120.49 34.307 120.435 36.4632 121.888 36.3939 cv
125.005 36.2455 128.077 36.1541 131.178 36.577 cv
133.913 36.95 136.494 38.1336 139.237 38.265 cv
140.241 38.3128 140.622 37.0531 140.016 36.3846 cv
cp
f
98.037 45.7337 mo
94.3124 43.2122 90.4931 40.8128 86.747 38.3524 cv
85.8749 37.7806 85.0712 38.515 85.0126 39.3221 cv
80.9814 39.4574 76.957 39.7127 72.9413 40.0843 cv
69.8769 39.4237 66.7275 39.0902 63.6181 39.1712 cv
71.1044 35.7015 79.2773 33.8758 87.5488 34.1776 cv
87.9804 34.2147 88.413 34.2518 88.8456 34.2816 cv
88.4736 34.7577 88.4003 35.4281 88.9843 35.9139 cv
91.3915 37.9198 93.287 40.4203 95.3339 42.784 cv
96.1825 43.764 97.122 44.7337 98.037 45.7337 cv
cp
94.2636 35.8939 mo
93.2509 35.3319 92.2382 34.7713 91.2255 34.2122 cv
91.371 34.0804 91.4638 33.89 91.4931 33.6854 cv
92.4169 34.4217 93.3408 35.1561 94.2636 35.8939 cv
cp
105.332 41.7489 mo
100.789 38.2298 96.3388 34.5765 91.8818 30.9486 cv
88.3212 28.0497 84.6044 23.8211 80.4697 21.8626 cv
79.9081 21.5965 79.332 21.6463 78.8652 22.0697 cv
77.2148 23.5672 75.746 24.8885 73.6894 25.8661 cv
72.9521 26.2162 73.4804 27.3416 74.2304 27.1512 cv
76.5048 26.5755 78.8017 24.6996 81.1699 25.4945 cv
83.5878 26.306 86.6386 29.8206 88.6874 31.4486 cv
89.1581 31.8226 89.6288 32.1996 90.0995 32.5741 cv
79.7333 30.3392 67.8183 27.9593 57.4374 30.8109 cv
46.7031 33.7596 39.1659 43.6566 32.6083 52.0506 cv
31.665 53.2586 33.1952 54.5843 34.205 53.6473 cv
34.2197 53.6615 li
34.6825 53.1395 35.1435 52.6078 35.6054 52.0711 cv
36.9511 50.8084 38.499 50.1229 40.4091 49.7069 cv
41.3388 49.5042 40.9257 48.1664 40.0234 48.3055 cv
39.5058 48.3851 39.0185 48.4955 38.5429 48.6195 cv
44.2001 41.9671 50.2538 35.2669 58.9052 33.1747 cv
65.3495 31.6156 71.6347 32.2118 77.9462 33.0277 cv
70.5634 33.9481 63.4833 36.2274 56.7695 40.1273 cv
55.5468 40.8372 56.4091 42.5208 57.6835 42.2953 cv
57.8642 42.2635 58.0429 42.2435 58.2226 42.2152 cv
56.6357 42.7542 55.1669 43.5374 53.9462 44.7445 cv
53.3427 45.3407 53.9579 46.3709 54.7665 46.1546 cv
59.1493 44.9818 63.5126 44.0296 67.8984 43.2664 cv
67.997 43.3016 68.1015 43.3289 68.2158 43.3426 cv
73.3574 43.9583 78.3808 45.0492 83.2743 46.7508 cv
86.831 47.9881 90.2197 49.9876 94.0478 49.9974 cv
94.9286 49.9994 95.4199 48.6278 94.5263 48.2284 cv
90.3554 46.3651 86.0624 44.7772 81.6786 43.5116 cv
81.6406 43.1537 81.4179 42.8011 80.9628 42.6097 cv
80.2792 42.3226 79.581 42.055 78.8749 41.7982 cv
81.4482 41.5423 84.0341 41.327 86.6581 41.203 cv
91.8544 44.8622 97.0019 48.68 102.454 51.9373 cv
103.63 52.6395 104.629 51.2933 104.168 50.2235 cv
102.53 46.4237 99.4882 43.4959 96.5038 40.5389 cv
98.955 41.7611 101.496 42.8123 104.132 43.8099 cv
105.248 44.2328 106.298 42.4979 105.332 41.7489 cv
cp
f
92.2411 54.8758 mo
87.0449 51.3309 78.8925 50.8431 72.8066 49.8548 cv
72.0302 49.7289 71.2568 49.6151 70.4853 49.5072 cv
64.2695 47.8656 57.8993 47.263 51.4413 49.0599 cv
49.3554 49.6405 50.2304 52.807 52.3349 52.3006 cv
57.6708 51.0164 63.2118 51.3792 68.6435 52.0946 cv
70.4345 52.557 72.2099 53.1424 73.9745 53.8045 cv
67.3427 54.596 60.7812 55.8246 54.3661 57.7083 cv
50.2324 58.9222 43.6435 60.1029 41.0351 63.9398 cv
40.6425 64.5174 41.4033 65.1996 41.9648 64.87 cv
47.1738 61.8138 53.2275 59.7664 59.413 58.3197 cv
48.4218 64.4012 39.3525 73.1595 30.9228 82.3895 cv
29.832 83.535 31.538 85.2494 32.662 84.1288 cv
33.6093 83.1849 34.5517 82.2367 35.495 81.2884 cv
40.8954 76.1478 47.0624 71.909 54.289 69.6869 cv
61.4531 67.4837 68.8163 67.0433 76.2079 67.1131 cv
75.0947 67.3182 73.9882 67.495 72.9765 67.7415 cv
70.5439 68.3348 68.1699 69.0819 65.8183 69.9422 cv
61.5693 71.4969 57.4042 73.2943 53.3632 75.3285 cv
44.7089 79.6839 37.0253 84.9261 30.1083 91.6551 cv
29.6992 92.0526 30.2197 92.7035 30.7079 92.4334 cv
32.8447 91.2523 34.9677 90.0443 37.1005 88.8646 cv
37.0898 88.8812 37.079 88.8939 37.0683 88.9105 cv
36.5673 89.7411 37.4062 90.9398 38.3749 90.6102 cv
43.4902 88.8705 48.5566 87.0614 53.5536 85.0013 cv
58.4365 82.9881 63.3827 79.9901 68.5341 78.9281 cv
69.9355 78.639 68.9638 76.3309 67.7841 77.1502 cv
63.3212 80.2508 57.2734 81.681 52.1464 83.4598 cv
51.3671 83.7303 50.5868 83.9998 49.8075 84.2708 cv
51.3945 83.5316 52.9804 82.7918 54.5663 82.0526 cv
55.7177 81.516 56.873 80.9808 58.0273 80.4427 cv
58.7509 80.3119 59.4804 80.1966 60.2206 80.1048 cv
60.8212 80.0301 61.0947 79.4872 61.0312 79.0272 cv
64.4882 77.3748 67.9052 75.6395 71.1708 73.6478 cv
72.0214 73.1292 71.4755 71.6136 70.4667 71.9774 cv
65.082 73.9178 59.9228 76.4476 54.7909 78.9906 cv
51.7743 79.5721 48.8769 80.5257 46.0458 81.7669 cv
49.9286 79.3416 53.954 77.1478 58.0995 75.202 cv
61.8085 73.4608 65.5986 71.9945 69.4501 70.6107 cv
72.4072 69.5482 76.3183 67.5062 79.748 67.18 cv
80.5175 67.201 81.287 67.2245 82.0575 67.2508 cv
82.0517 67.2293 li
83.3749 67.1786 83.3593 65.0428 82.0575 65.1883 cv
71.9872 66.3138 61.8027 64.0169 52.082 67.6068 cv
50.6659 68.1297 49.287 68.7318 47.9404 69.3939 cv
52.4472 65.4994 57.2421 61.9701 62.6415 59.1996 cv
63.3661 58.828 63.3368 58.0619 62.9482 57.5594 cv
66.8212 56.7909 70.6943 56.223 74.3925 55.7674 cv
75.1699 55.6717 75.4745 54.8807 75.2997 54.3163 cv
77.6318 55.2415 79.9462 56.2835 82.2568 57.347 cv
84.54 58.3978 85.9501 55.1224 83.6025 54.1556 cv
83.5097 54.117 83.415 54.0794 83.3212 54.0409 cv
85.1347 54.3402 86.9062 54.7279 88.5527 55.2689 cv
88.2021 55.4207 88.1865 55.9583 88.6044 56.1048 cv
90.495 56.7664 89.7968 56.6732 91.7909 56.5355 cv
92.6874 56.474 92.9833 55.3827 92.2411 54.8758 cv
cp
f
108.748 23.2264 mo
107.37 20.7386 105.277 17.5643 102.03 18.4515 cv
101.159 18.6893 101.297 20.2122 102.252 20.0858 cv
103.107 19.9725 104.264 21.2435 104.709 21.8607 cv
105.143 22.4647 105.425 23.3353 105.705 24.015 cv
106.229 25.287 106.669 26.5921 107 27.9271 cv
107.522 30.0321 107.531 32.2738 109.006 33.9676 cv
109.403 34.4237 110.067 34.2127 110.368 33.7923 cv
112.478 30.8416 110.285 25.9994 108.748 23.2264 cv
cp
f
44.1191 69.0125 mo
43.5175 69.1917 42.9169 69.3719 42.3154 69.5497 cv
45.5029 67.8143 48.8046 66.2523 52.1825 64.9964 cv
49.4472 66.2147 46.7411 67.5409 44.1191 69.0125 cv
cp
58.5829 78.4251 mo
56.4658 79.4759 54.4286 80.6703 52.4306 81.9334 cv
52.8857 81.2386 52.7382 80.0799 51.7568 79.9217 cv
48.6533 79.4207 45.662 79.4212 42.706 80.1039 cv
43.287 79.7196 43.8661 79.3265 44.4531 78.9608 cv
47.37 78.3123 50.2753 77.6239 53.1718 76.8988 cv
52.999 77.0291 52.8232 77.1537 52.6523 77.2874 cv
51.329 78.3255 53.0595 80.5648 54.456 79.6248 cv
57.3788 77.6581 60.5849 76.4203 63.9941 76.0628 cv
62.1445 76.743 60.331 77.5575 58.5829 78.4251 cv
cp
82.9921 63.0868 mo
81.9921 62.4686 80.9853 61.9305 79.9736 61.4627 cv
80.62 61.0814 80.6083 59.8602 79.7333 59.6288 cv
76.6308 58.808 73.5556 58.702 70.5195 59.0462 cv
70.2773 59.0296 70.0341 59.0257 69.7919 59.015 cv
60.3993 56.7284 50.8554 56.3495 42.4238 62.7049 cv
41.7245 63.2323 41.8085 64.7274 42.9384 64.6048 cv
44.4687 64.4388 44.3964 64.4715 45.8574 64.0453 cv
46.3554 63.9002 46.3867 63.1356 45.8574 63.0057 cv
45.7939 62.9901 45.747 62.9789 45.6884 62.9647 cv
50.8163 59.9164 56.4921 59.1214 62.2392 59.5892 cv
52.4472 61.4198 42.8368 67.057 34.4062 71.9085 cv
33.414 72.4789 34.0781 74.0345 35.1806 73.745 cv
36.0527 73.516 36.9208 73.2655 37.7919 73.0282 cv
37.2568 73.4134 36.7236 73.7997 36.2031 74.2039 cv
34.7421 75.2567 33.3515 76.4452 32.0458 77.7914 cv
31.1513 78.6668 32.4931 79.9857 33.412 79.1576 cv
41.0507 72.2782 50.1972 69.6917 59.7968 68.6561 cv
59.5761 68.7518 59.3564 68.8456 59.1367 68.9452 cv
52.2656 70.2977 45.5273 73.1615 40.2118 76.3163 cv
39.1865 76.9251 39.1435 78.0433 39.6581 78.8158 cv
38.955 79.7186 38.3173 80.7191 37.7724 81.8558 cv
37.7597 81.8822 37.7587 81.912 37.7499 81.9393 cv
34.6396 83.5609 32.1171 85.7977 29.4277 87.9598 cv
29.2812 87.0189 28.0175 86.3265 27.2216 87.1878 cv
26.7665 87.68 26.331 88.1786 25.912 88.6849 cv
25.9667 88.4476 26.0204 88.2103 26.0908 87.9754 cv
26.9033 85.2591 28.539 82.8416 29.8808 80.3724 cv
31.4941 77.4056 33.6552 73.7005 32.5292 70.2723 cv
32.1581 69.1458 30.7509 69.2542 30.3427 70.2723 cv
29.3544 72.7308 28.5204 75.2391 27.5517 77.702 cv
27.2743 78.4076 27.6396 78.9022 28.1738 79.0995 cv
27.0624 81.0062 25.8232 82.8255 25.0742 84.4061 cv
23.372 88.0018 23.5048 91.4759 22.4706 95.223 cv
22.1044 96.5492 24.1523 97.5116 24.7607 96.1888 cv
25.3281 94.9579 25.8583 93.784 26.4677 92.662 cv
26.8749 92.8724 27.3622 92.9081 27.7372 92.6209 cv
30.9628 90.1527 33.5292 86.8182 37.1572 84.9061 cv
41.497 82.6185 46.5947 82.1229 51.414 82.4539 cv
51.4921 82.4593 51.5644 82.4539 51.6357 82.4456 cv
48.7861 84.2821 46.0077 86.2406 43.1943 88.1224 cv
42.8583 88.1092 42.5185 88.2035 42.2743 88.4452 cv
41.9433 88.7738 41.6113 89.1024 41.2792 89.431 cv
39.8993 90.7987 41.7021 93.2767 43.3954 92.1732 cv
48.0409 89.1473 52.3779 85.6908 56.9716 82.5907 cv
60.2158 80.4012 64.8398 77.4588 69.4101 76.2801 cv
72.2284 76.8592 74.8359 77.9388 77.4238 76.1082 cv
78.3827 75.4305 78.1581 74.0247 77.2617 73.6356 cv
78.7597 73.3036 79.4462 70.8734 77.8222 70.1712 cv
76.7568 69.7103 75.6572 69.3358 74.5302 69.0379 cv
74.4716 68.8412 74.3857 68.6551 74.2724 68.4867 cv
75.7822 68.2806 77.3046 68.1019 78.8495 67.9657 cv
79.6093 68.054 79.7226 66.8617 79.0253 66.6624 cv
75.415 65.6297 71.9179 65.515 68.5204 66.0287 cv
65.2704 66.138 61.9687 66.3372 58.6913 66.6947 cv
59.2919 66.4989 59.8954 66.307 60.495 66.1102 cv
61.2538 65.8607 61.3613 65.0433 61.0556 64.5135 cv
64.2118 63.4203 67.3886 62.5072 70.6484 61.973 cv
73.0605 62.1502 75.4755 62.5838 77.8798 63.3177 cv
79.3505 63.8456 80.7949 64.3978 82.2031 64.9588 cv
83.3124 65.4007 83.9443 63.6742 82.9921 63.0868 cv
cp
.921569 .964706 .992157 rgb
f
92.4306 48.3685 mo
85.5234 42.2142 74.3534 40.8914 65.4697 41.2079 cv
63.9521 41.2621 63.9394 43.5892 65.4697 43.575 cv
70.2558 43.5301 74.9462 44.0453 79.5468 45.4002 cv
83.662 46.6126 87.4296 48.6761 91.496 49.9745 cv
92.3935 50.2616 93.1464 49.0062 92.4306 48.3685 cv
cp
f
95.9413 46.0663 mo
92.5878 41.1996 84.6796 40.3558 79.3593 39.4691 cv
77.7109 39.1942 76.0595 38.9803 74.4062 38.8026 cv
74.2402 38.6483 74.0185 38.5448 73.7177 38.5589 cv
73.2724 38.5799 72.8271 38.5897 72.3827 38.6078 cv
66.7919 38.1346 61.1796 38.1766 55.5595 38.662 cv
54.2372 38.7762 54.1992 40.6991 55.5595 40.7479 cv
60.5761 40.9271 65.5849 40.9242 70.5966 40.7596 cv
79.0439 41.5179 87.2734 43.5555 95.3456 46.8412 cv
95.7685 47.013 96.1904 46.4276 95.9413 46.0663 cv
cp
f
100.249 37.6253 mo
97.954 35.0291 95.4218 32.5013 92.6689 30.3929 cv
89.7304 28.1429 84.249 24.5809 80.3466 26.0096 cv
79.4413 26.3412 78.9091 27.5643 79.7392 28.3075 cv
80.955 29.3954 82.1884 30.3607 83.5292 31.2831 cv
84.9872 32.2855 86.3574 29.9115 84.913 28.9149 cv
84.8925 28.9017 84.874 28.8861 84.8534 28.8729 cv
88.1923 30.0262 91.7978 33.1449 93.5575 34.7762 cv
94.1044 35.2826 94.622 35.805 95.1357 36.3299 cv
93.0185 35.4994 90.7558 34.9461 88.9863 34.4344 cv
87.7079 34.0648 86.4189 33.743 85.1249 33.4422 cv
84.2499 33.0931 83.3642 32.7699 82.4579 32.4959 cv
76.9931 30.8456 70.8447 29.6551 65.1327 30.4081 cv
65.1113 30.4081 65.0888 30.4066 65.0673 30.4066 cv
65.0673 30.409 65.0683 30.412 65.0683 30.4149 cv
64.9833 30.4261 64.8964 30.4286 64.8115 30.4408 cv
63.7099 30.6004 64.0175 32.3158 65.0673 32.3329 cv
66.2109 32.3509 67.3378 32.451 68.4579 32.5848 cv
71.4462 34.4408 74.5058 35.9994 77.7773 37.3192 cv
78.7421 37.7083 79.162 36.1444 78.2079 35.7596 cv
76.4638 35.0565 74.7851 34.2762 73.1464 33.4188 cv
76.5302 34.2064 79.8486 35.3109 83.1747 36.4007 cv
88.6161 38.1839 94.7587 39.5257 99.1074 43.4505 cv
99.331 43.6527 99.62 43.6815 99.8759 43.6068 cv
100.43 43.9217 100.991 43.5951 101.271 43.1009 cv
101.863 43.2391 102.578 42.7415 102.569 42.0892 cv
102.541 40.1371 101.498 39.0384 100.249 37.6253 cv
cp
f
102.006 21.8607 mo
101.567 19.6253 101.471 17.3792 101.588 15.1078 cv
101.677 13.3934 99.0742 13.4266 98.9394 15.1078 cv
98.6279 18.9842 98.4911 25.1009 101.454 28.0677 cv
102.064 28.6781 103.056 28.2035 103.095 27.388 cv
103.185 25.4969 102.367 23.7015 102.006 21.8607 cv
cp
f
133.719 30.4364 mo
130.683 29.0843 127.026 29.7069 123.872 30.3607 cv
122.182 30.7108 122.905 33.2528 124.583 32.9369 cv
127.542 32.3797 130.56 32.7923 133.486 32.2142 cv
134.267 32.0599 134.477 30.7738 133.719 30.4364 cv
cp
f
118.799 69.4193 mo
116.029 68.0326 111.331 66.8773 108.588 64.7035 cv
114.716 64.7435 120.131 67.3563 125.351 70.4813 cv
125.691 71.3133 126.032 72.1458 126.373 72.9779 cv
126.363 73.183 126.393 73.3856 126.458 73.577 cv
123.951 72.1073 121.397 70.7201 118.799 69.4193 cv
cp
138.053 81.265 mo
135.658 79.4813 133.198 77.7855 130.685 76.1751 cv
130.594 75.9486 130.502 75.7225 130.411 75.4964 cv
133.53 76.8006 136.023 78.8163 138.053 81.265 cv
cp
149.53 114.243 mo
146.916 112.774 145.093 116.636 145.595 111.829 cv
145.758 110.264 145.999 108.564 144.439 107.563 cv
143.747 107.118 142.482 107.536 141.98 107.253 cv
142.095 106.776 142.184 106.295 142.261 105.813 cv
143.085 105.89 143.938 105.357 144.033 104.258 cv
144.967 93.3172 138.466 85.3441 130.175 79.3929 cv
130.527 79.3631 130.856 79.2196 131.09 78.994 cv
132.155 79.6966 133.214 80.4081 134.259 81.14 cv
135.064 81.7039 138.32 83.6956 140.977 85.6214 cv
142.992 89.3197 144.35 93.5169 145.343 97.6585 cv
145.321 97.7284 145.308 97.8026 145.317 97.8871 cv
145.385 98.4671 145.417 98.7074 145.759 99.1849 cv
146.599 100.355 148.222 99.6244 148.013 98.2347 cv
147.586 95.3827 146.936 92.516 146.023 89.7635 cv
146.076 89.7093 146.128 89.6551 146.181 89.6009 cv
146.472 89.3006 146.47 88.9256 146.314 88.5667 cv
145.981 87.7953 145.412 87.0926 144.744 86.4359 cv
141.971 80.0331 137.509 74.639 130.666 72.1346 cv
129.946 71.679 129.226 71.224 128.506 70.7708 cv
128.365 70.4232 128.226 70.075 128.085 69.7269 cv
127.663 68.68 126.43 68.5775 125.733 69.0599 cv
119.783 65.474 113.626 62.5116 106.261 62.6996 cv
105.514 62.7191 104.882 63.598 105.351 64.2835 cv
107.025 66.7249 109.589 67.3929 112.216 68.5706 cv
116.214 70.3631 120.114 72.3709 123.91 74.5575 cv
125.301 75.3582 126.673 76.1903 128.035 77.0384 cv
128.201 77.4442 128.367 77.8499 128.533 78.2557 cv
124.191 75.3485 119.479 72.9505 115.145 70.9437 cv
113.603 70.2293 112.241 72.4915 113.797 73.2508 cv
125.726 79.0746 138.472 86.6288 140.485 100.401 cv
140.42 100.376 140.37 100.34 140.3 100.319 cv
138.622 99.8138 135.213 102.903 134.603 102.513 cv
134.119 102.203 134.272 98.1668 134.145 97.3851 cv
133.909 95.9295 133.542 94.8612 132.847 93.5848 cv
132.196 92.3914 130.662 93.0897 130.524 94.2137 cv
130.509 94.3485 130.509 94.474 130.495 94.6068 cv
129.659 94.578 128.817 95.2201 129.191 96.2059 cv
130.008 98.3597 130.641 100.495 131.13 102.746 cv
131.256 103.225 131.557 103.498 131.907 103.609 cv
132.167 104.351 132.56 104.981 133.191 105.403 cv
135.846 107.178 137.716 102.813 139.216 103.444 cv
139.821 103.698 136.9 109.573 140.279 110.732 cv
141.803 111.255 142.036 110.105 142.349 111.637 cv
142.67 113.216 141.48 114.768 141.992 116.482 cv
142.147 117.002 142.572 117.497 143.125 117.615 cv
143.857 117.77 144.335 117.738 145.073 117.635 cv
145.215 117.615 146.115 117.129 146.942 116.613 cv
146.909 117.106 147.092 117.62 147.559 117.904 cv
150.061 119.426 152.102 115.688 149.53 114.243 cv
cp
f
161.638 85.1815 mo
161.494 85.054 161.323 85.014 161.159 85.0272 cv
160.492 83.9823 159.846 83.0223 159.322 82.2103 cv
158.315 80.6507 157.2 78.9134 155.963 77.2025 cv
155.973 77.2074 155.981 77.2122 155.991 77.2171 cv
156.821 77.6336 157.851 77.0467 157.818 76.138 cv
158.981 77.161 160.083 78.2386 161.063 79.3978 cv
161.204 79.9671 161.31 80.5526 161.42 81.1356 cv
160.983 81.2122 160.627 81.7015 160.893 82.1898 cv
161.17 82.7 161.466 83.1624 161.783 83.5912 cv
161.852 84.2035 161.91 84.8226 161.945 85.4549 cv
161.842 85.3651 161.744 85.2684 161.638 85.1815 cv
cp
148.624 62.6302 mo
148.415 62.4286 148.197 62.2357 147.987 62.0355 cv
146.709 59.9417 145.489 57.8128 144.359 55.638 cv
147.991 59.2972 151.367 63.1917 154.317 67.4432 cv
154.909 68.2962 155.459 69.1956 155.996 70.1102 cv
155.341 69.5868 154.685 69.0643 154.025 68.5506 cv
152.432 66.4251 150.554 64.4852 148.624 62.6302 cv
cp
152.883 73.3934 mo
150.849 71.1908 148.552 69.3573 145.957 68.4852 cv
145.435 68.3099 144.911 68.452 144.514 68.765 cv
143.909 68.1937 143.297 67.6302 142.678 67.0741 cv
143.315 66.7562 143.735 66.056 143.382 65.2948 cv
144.25 65.5623 145.18 66.1419 146.19 66.8314 cv
148.25 68.2372 150.211 69.807 152.139 71.4007 cv
152.738 72.2093 153.31 73.0326 153.849 73.8734 cv
153.523 73.723 153.203 73.5575 152.883 73.3934 cv
cp
143.6 75.4818 mo
142.79 74.7323 141.974 73.9915 141.161 73.2464 cv
141.052 73.1468 140.944 73.0457 140.834 72.9466 cv
136.632 69.0965 132.394 65.2884 128.148 61.4886 cv
129.923 62.2611 131.697 63.0335 133.472 63.806 cv
134.522 64.6009 135.573 65.3954 136.596 66.2298 cv
136.505 67.3299 137.663 68.1844 138.664 67.972 cv
140.008 69.1302 141.334 70.3138 142.621 71.5526 cv
143.021 71.9383 143.409 72.3377 143.805 72.7303 cv
143.795 73.7015 143.786 74.6727 143.777 75.6434 cv
143.719 75.5897 143.657 75.535 143.6 75.4818 cv
cp
137.076 56.1786 mo
138.867 57.7484 140.671 59.3441 142.441 60.9764 cv
142.207 60.93 141.975 60.8944 141.743 60.8768 cv
141.257 60.8392 140.831 60.8939 140.448 61.0125 cv
139.314 59.4295 138.154 57.8197 137.076 56.1786 cv
cp
163.565 76.7972 mo
163.433 76.662 163.293 76.5316 163.154 76.4002 cv
162.127 73.4798 160.604 70.6869 159.003 68.1571 cv
154.688 61.3402 149.746 54.4388 143.368 49.433 cv
142.607 48.8358 141.526 49.8319 142.274 50.5267 cv
142.672 50.8958 143.051 51.2845 143.435 51.6668 cv
142.837 51.1937 142.232 50.7259 141.613 50.2708 cv
140.778 49.6561 139.793 50.826 140.256 51.6292 cv
141.592 53.9476 142.911 56.263 144.25 58.5658 cv
140.539 55.2049 136.741 51.9413 133.027 48.5829 cv
132.012 47.6649 129.998 48.5399 130.541 50.0301 cv
132.05 54.1649 134.753 58.0414 137.413 61.7923 cv
135.917 60.9876 134.415 60.1903 132.911 59.3914 cv
128.935 56.6722 124.752 54.2621 120.383 52.243 cv
118.912 51.5633 117.643 53.7787 119.113 54.4139 cv
119.55 54.6615 119.973 54.9256 120.406 55.1766 cv
119.269 55.3006 118.339 56.6078 119.428 57.5926 cv
122.771 60.6156 126.094 63.6595 129.428 66.6903 cv
129.146 67.4164 129.264 68.3158 130.076 68.8753 cv
135.704 72.7523 140.806 77.2577 145.279 82.4295 cv
147.635 85.1532 149.801 88.0399 151.755 91.0643 cv
152.81 92.6976 156.999 98.0951 156.487 99.9178 cv
156.28 100.656 157.046 101.627 157.856 101.287 cv
158.057 101.203 158.257 101.12 158.456 101.036 cv
159.06 100.783 159.515 100.337 159.52 99.639 cv
159.539 97.2372 158.103 94.8158 156.725 92.6449 cv
156.857 92.4129 156.916 92.1346 156.861 91.8851 cv
155.692 86.5711 151.27 82.3343 147.075 78.5941 cv
147.086 78.5155 147.102 78.4398 147.103 78.3539 cv
147.127 76.183 li
148.731 77.9383 150.276 79.7479 151.748 81.6156 cv
154.609 85.2469 156.794 90.0404 160.358 92.9823 cv
160.644 93.2186 160.97 93.2718 161.253 93.1986 cv
161.956 94.744 162.658 96.2914 163.424 97.8192 cv
163.593 98.1561 164.096 98.1224 164.273 97.8192 cv
165.844 95.14 164.818 91.6927 163.187 88.5096 cv
163.456 88.4393 163.69 88.2479 163.794 87.9085 cv
163.989 87.2664 164.124 86.6224 164.23 85.9774 cv
164.525 86.1922 164.829 86.4037 165.156 86.6097 cv
166.227 87.2845 167.447 86.3856 167.522 85.2523 cv
167.75 81.7977 165.909 79.1834 163.565 76.7972 cv
cp
f
135.689 92.8783 mo
134.183 90.9134 132.29 89.4198 130.296 87.973 cv
127.999 86.307 122.861 84.3055 122.716 81.0941 cv
122.643 79.4681 120.088 79.4681 120.185 81.0941 cv
120.372 84.2411 122.485 85.8021 125.009 87.3485 cv
128.325 89.3812 131.305 91.9779 134.679 93.8885 cv
135.269 94.223 136.164 93.4969 135.689 92.8783 cv
cp
f
110.916 72.391 mo
109.709 71.8026 108.423 71.6185 107.112 71.9964 cv
106.544 72.16 106.044 72.4535 105.577 72.807 cv
105.337 72.9891 105.013 73.1854 104.839 73.4286 cv
104.816 73.4559 104.782 73.4637 104.756 73.4852 cv
104.105 72.9618 103.158 72.8065 102.548 73.5633 cv
101.91 74.3543 100.588 75.0658 101.442 76.2752 cv
101.898 76.9203 102.515 77.1639 103.285 77.0247 cv
103.353 77.0125 103.407 76.9837 103.472 76.9671 cv
104.064 77.2982 104.776 77.4251 105.496 77.2567 cv
106.917 76.9237 107.832 74.3724 109.33 75.1029 cv
111.14 75.9857 112.734 73.2782 110.916 72.391 cv
cp
f
29.7284 58.4828 mo
26.4794 58.5223 24.0595 60.5897 22.373 63.224 cv
21.9638 63.8631 22.0253 64.618 22.3525 65.2469 cv
22.2402 65.62 22.1454 65.9998 22.0898 66.3997 cv
21.7919 68.5379 24.8915 69.5555 25.4345 67.3221 cv
25.6288 66.5208 25.9062 65.8275 26.4726 65.2171 cv
26.788 64.8778 26.9511 64.5081 27.0029 64.1439 cv
28.0722 62.8148 29.3593 61.6493 30.5409 60.4432 cv
31.2275 59.7425 30.7363 58.4706 29.7284 58.4828 cv
cp
f
8.97454 119.686 mo
7.94817 114.741 12.0859 106.524 13.332 102.921 cv
15.082 97.8636 16.8691 92.8192 18.6826 87.785 cv
20.6484 82.3289 23.0107 77.1771 26.0243 72.4417 cv
26.2206 72.2455 26.4111 72.034 26.5878 71.7899 cv
26.7617 71.5506 26.8632 71.3133 26.9159 71.0824 cv
29.3554 67.4701 32.2011 64.1141 35.5888 61.078 cv
43.7587 53.7572 54.2197 49.1234 65.2079 48.451 cv
74.5898 47.8768 92.8486 49.9842 94.9589 61.5863 cv
94.9902 61.7591 95.04 61.912 95.1015 62.0521 cv
94.6757 62.4012 94.2519 62.7562 93.8349 63.1351 cv
88.8642 67.6444 85.5243 73.5174 83.9052 79.8944 cv
80.205 82.1253 75.8603 81.2083 71.9345 82.7064 cv
68.7118 83.9364 66.9863 86.3646 64.8574 88.9212 cv
57.8398 97.3524 48.3798 90.7157 39.329 91.7718 cv
36.0204 92.1581 32.8388 93.3831 30.1201 95.3084 cv
28.7968 96.2459 27.8183 97.5296 26.5702 98.5121 cv
24.5595 100.093 22.5097 100.139 20.4413 101.352 cv
17.5527 103.047 15.9003 106.116 14.3993 108.974 cv
12.54 112.516 10.7636 116.106 8.97454 119.686 cv
cp
12.8281 67.8143 mo
12.1044 67.555 11.4033 67.2572 10.705 66.9525 cv
16.7421 66.7743 22.0654 64.828 26.5029 59.1341 cv
33.7031 49.8944 39.1738 39.3197 48.1542 31.5506 cv
57.5536 23.4188 70.4003 19.3543 82.6269 22.6815 cv
93.9247 25.7557 99.5341 36.598 110.362 40.6986 cv
110.811 40.8685 111.213 40.8719 111.554 40.7601 cv
111.135 40.9998 110.85 41.3412 110.702 41.7352 cv
108.364 44.2503 106.213 46.9281 104.334 49.8231 cv
102.857 52.099 101.755 54.578 100.327 56.8739 cv
99.789 57.7401 99.1601 58.472 98.4853 59.1449 cv
95.3632 48.2489 80.0966 44.8065 70.2773 44.3983 cv
56.9628 43.8451 43.998 48.6839 33.8915 57.2625 cv
29.4618 61.0228 25.9404 65.2704 23.0048 69.8778 cv
21.6044 71.0604 14.3749 68.368 12.8281 67.8143 cv
cp
97.8593 16.7992 mo
98.5136 16.5492 98.995 15.9618 98.9101 15.0243 cv
98.871 14.5887 98.8476 14.159 98.8281 13.7303 cv
99.1708 13.1214 99.2392 12.3587 98.8163 11.661 cv
98.8593 10.4369 98.9999 9.23569 99.2343 8.04721 cv
101.06 11.327 103.643 14.158 105.579 17.5477 cv
108.621 22.8714 109.5 29.5038 110.465 35.6986 cv
102.955 32.7904 97.4472 24.7337 97.8593 16.7992 cv
cp
126.532 40.2962 mo
126.61 40.973 127.049 41.5609 127.962 41.6981 cv
154.606 45.7054 172.545 70.6956 171.767 96.9041 cv
171.338 111.362 167.688 125.853 164.603 140.062 cv
164.225 139.42 163.805 138.874 163.294 138.496 cv
165.123 131.774 163.548 122.098 156.336 120.163 cv
149.836 118.42 145.321 122.104 142.435 127.107 cv
142.12 124.675 141.652 122.26 140.995 119.877 cv
140.14 116.779 138.699 109.961 135.486 108.396 cv
134.874 108.098 134.068 107.971 133.467 108.396 cv
132.419 109.139 131.603 110.101 130.949 111.178 cv
130.143 107.892 129.326 104.608 128.424 101.352 cv
127.382 97.5936 126.029 93.7596 123.074 91.055 cv
121.476 89.5926 118.587 87.6756 116.331 88.5941 cv
114.996 89.1371 114.018 90.5897 113.29 92.2347 cv
110.529 87.9886 105.951 85.0326 101.288 82.8783 cv
95.9159 80.3968 91.3417 80.8831 87.206 83.6424 cv
88.5966 75.2669 93.3154 68.8626 100.072 63.202 cv
103.314 60.4862 104.747 56.7943 106.905 53.2464 cv
108.917 49.9393 111.286 46.9164 113.919 44.1165 cv
118.066 42.7284 122.277 41.3675 126.532 40.2962 cv
cp
146.81 34.5047 mo
136.879 33.4168 127.093 35.7264 117.534 38.7381 cv
117.221 38.1405 116.609 37.6722 115.926 37.5667 cv
115.924 37.5633 115.92 37.5604 115.918 37.5575 cv
121.956 26.9378 137.961 26.8949 146.81 34.5047 cv
cp
17.8534 110.993 mo
18.3779 109.99 18.915 108.916 19.5429 107.925 cv
19.582 107.787 19.6493 107.65 19.7607 107.522 cv
19.8642 107.403 19.9618 107.283 20.0605 107.163 cv
20.0829 107.132 20.1034 107.097 20.1269 107.066 cv
20.1279 107.071 20.1288 107.076 20.1298 107.08 cv
20.5868 106.523 21.0253 105.978 21.6523 105.568 cv
22.2685 105.166 22.9677 104.96 23.6454 104.699 cv
23.622 104.638 23.6025 104.573 23.5761 104.516 cv
24.7206 104.102 25.9218 103.83 27.1308 103.178 cv
30.0273 101.614 31.6669 98.6693 34.7597 97.1878 cv
40.0908 94.6336 45.37 96.0741 50.8935 96.9593 cv
56.8661 97.9168 62.4882 97.5101 66.7743 92.8587 cv
70.0956 89.2557 71.413 86.492 76.7265 85.7484 cv
78.9452 85.4378 81.0195 85.2489 83.0263 84.6292 cv
82.9101 85.6224 82.8427 86.6234 82.8066 87.6268 cv
81.8769 89.1497 83.4159 91.0179 84.9042 90.701 cv
85.2158 90.9066 85.5751 91.0345 85.957 91.0174 cv
87.0546 90.9686 87.9394 90.139 87.957 89.0174 cv
87.9599 88.8163 87.9736 88.6165 87.9824 88.4159 cv
87.9892 88.3524 87.9941 88.3055 87.997 88.2718 cv
88.0087 88.202 88.0204 88.1322 88.0351 88.0628 cv
92.2538 84.5975 96.4462 84.6654 101.988 87.7127 cv
106.453 90.1678 110.478 93.307 111.653 98.5003 cv
112.09 100.431 115.044 100.382 115.51 98.5003 cv
116.256 95.4915 117.071 91.8045 120.728 94.3758 cv
122.99 95.9662 123.877 99.9085 124.566 102.416 cv
126.07 107.882 127.354 113.419 128.743 118.915 cv
129.199 120.72 132.284 120.922 132.601 118.915 cv
132.893 117.065 133.28 114.539 134.498 112.872 cv
136.196 115.383 137.28 121.322 137.749 123.405 cv
138.772 127.954 139.051 132.522 138.85 137.167 cv
138.753 139.394 142.314 139.923 142.778 137.699 cv
143.905 132.295 146.049 124.428 152.75 123.943 cv
159.95 123.423 161.405 133.886 158.864 139.128 cv
157.944 141.026 159.768 142.654 161.601 141.865 cv
160.835 142.194 162.113 144.444 162.737 145.484 cv
162.887 145.521 163.036 145.586 163.175 145.709 cv
164.464 146.852 166.185 145.932 167.668 144.798 cv
167.909 143.607 168.15 142.416 168.392 141.224 cv
171.807 124.359 177.033 106.623 175.584 89.2616 cv
173.633 65.8861 156.614 44.5697 133.833 38.8119 cv
139.651 37.9413 145.537 37.89 151.452 39.3646 cv
153.075 39.7694 154.684 37.9456 153.711 36.4266 cv
145.137 23.0428 123.738 21.2064 114.103 33.3104 cv
113.292 28.1634 112.444 22.8817 110.398 18.2171 cv
107.796 12.2845 102.173 8.03305 101.07 1.44467 cv
100.796 -.198395 98.1093 -.551423 97.415 .967132 cv
95.829 4.43149 94.9482 7.87338 94.8163 11.5287 cv
94.7997 11.5672 94.7743 11.6014 94.7607 11.6414 cv
93.3398 15.8885 93.5214 20.263 94.8613 24.2948 cv
91.7499 21.9041 88.1699 20.1278 84.4091 19.0194 cv
74.7392 16.1703 64.2255 17.5262 55.2675 21.9754 cv
45.6659 26.744 38.6933 34.9598 32.5722 43.536 cv
29.2021 48.2586 26.2284 53.4583 22.4306 57.8543 cv
17.082 64.0457 9.88958 63.5296 2.49114 62.3324 cv
.258722 61.971 -.967841 64.6405 .950128 65.9876 cv
5.68939 69.3163 10.9296 71.7933 16.5956 73.0702 cv
17.8945 73.3631 19.29 73.7137 20.6523 73.867 cv
17.8837 78.93 15.6679 84.3553 13.6503 90.0091 cv
10.9638 97.5374 8.16302 105.062 5.80071 112.701 cv
4.23626 117.763 4.00775 123.101 8.96282 126.212 cv
10.8779 127.415 12.6562 124.91 11.6054 123.351 cv
13.6796 119.228 15.7177 115.083 17.8534 110.993 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (6_head.eps)
%%CreationDate: 11/11/2019 10:32 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2Ac'2T*ZgDe8W=du'NF?8'cM]+S!@:=LeE<<.ZN;g+$7Ne4X+e#,a4.4AVR--4_&Un2`Eg1G5N^P
%ft[CBjYtLlI_1+&It"X1cF9>Tea7tWH08+_O!">]-ia.umr,tUF5g1.0(J9Y+'ci4l,r0#E*]tg_&$@(I.d,e(Ul'TI.@'`e(a?+
%5J2=AlLjndfH'tfjQ5eg:VN+O4P>.*qu$8j^[1[?T03(Y>]]kEr:S=@kI3CR?GCaUAll,T)roP_p`I5:X5jK[459)Q^Nq%t?f&MB
%,O[#S`p#_`r@dp27nP:mTDmm>Dng_orL;D7hE6/XnpgTHVdBD'kcMV4rU,OA6>lLTSX8B7o#okZp7IuTnGJ80F17YcIsppp*H(CS
%GJF"b/`60"+qO6,S/qGZl!8LVr7p=^b@u2#L;/LLga.Bo(LJ0PN1_O4[nBkQ*UEiWk5f8l.:86$q"iNb0:oiUoCq]0L:H^`[kGIB
%roD>+%_m3VIYg^-.<6*tiX9V`;Ai)5k*p-f\[T6;.:8oXjLpb8=5?N5YH;+W?\2RkaNa+5cYidRMqrltIIbYMCD2cpf5JBNpA^$f
%pmSBioR5nL\>mhS45oou4MQ=C%kjQgOY>6$krQi!H1fGLF1H2!dEV81PaYSWo)J*95<O5imHkj\!O&*pJ0Fp2Y.=)7hu<-)f2)Bl
%$\A#nT(9M^DI<D%ec4Phb=fsHV&FMK^3Aa]CV0!J"9FQS7J_HqOlBjE`BA0qEV$d;JKT=`'*#Sqcb=i$neXHTh9T:72Apu>qUmgN
%>`_H7rBEL/Wic9mn]0Kk3o\DRgR"[VI/*R-S(4T\=24PDO$:8Tk4%X>`o_XGF"d.LV+e;[YJ.F%0)skuj;'t-B-5-JYCHFA/pR(&
%2h(\g\,*`1obYr(OC/"XorB1Kqpil>IeEK`:TqNYohW'/s)Ir.c)]GOg>D7GpJ:fnrpd>N:H@HZIsCqQWSBl?4jUZbo'Eu\^#Ok<
%SZcsUqHLLrruD&eaRu8;6o-DRd+6[h+)dddqJLFc4msP<r8RO9QVUrVpksF8?U+EbIe,u(Bt5Nb]RBCl#Mi<(k<%oDhM(-_h>]&S
%XFBi(8,`;;b<*1@gQU6-rpo@IT.sa"TDq0Yqs*k)mJj_Ff,_X(oBi$FIlb?B[=7UN^Nf>3:U8-u^AR-jfaIZ&V2*Iag@gU]5<O5j
%r7SQ_T7$C2B2<aKf0=Z_VqiG$]m;m2Ic:%m8aG:(=1IfE&,l(&0E14do4QsqR#bCZHm.>;m-4,r0E:nIS(i]i+/]#&QbRmHrH%]`
%m"Fs@&Da>;][tp<b<BcLFm2KgbC<;`q=5t]k0c&o^REKRk'r"Z)2!>5k*\p"HPFt6ch[,b:IH)uqUn*HA"o]es7t>@YoS!prp]:!
%m4pV-^%`(,mI&.^4o+N31M<6Rj`8QB[B+'-($k$IJ,<CrbPV;#qNP@$Ie(`>=Y5+H98o5ld\XR.r::^#rq?&^4Q^[rXOhI$s5rjH
%Ish18?00FZM"mGm]jeDDpkSITnLlo^#Ce75AVA!/B%Pet7qq^]YP54bd7mXpZQ$B)D4roANI1$3/Tu:B0i>9E3R6SIYTpm]aP6'r
%s/7luTB&H38&*(lGn#1[rGdtP+a!GaiYOhlrpKULhsGmeqT6p!Z#6/BCk^3G(ja$U@P6MMr2o]1!rg2hZkP[BV6gdi7EBW7ERBl<
%s6&pIlZ/QX8D!Am>^JJ95KRp3qgRAkdsC8hV]Nfrp2[ZdC<*c$nr$OQBrQgKlV0O`dAr(7/N)'\ICYL#.*''C/P7Pga[J>E''/Q$
%'pik"39?nTLV/s@*gKs4Eo`bO#[(b-p?>&,;`_uCYF9d#8#1_M;NsOr(@bRGi^o/?4NJ\<'74P9e0kjG8MX=4rqInt'4&-,EK]?!
%%W^pt\.8(lTnOs$?8;brFc]@`+)q[?_r5P38WKPcHg.cJFGbIRLd[N'paer+nebWi]t9EejGn7#jNl[gbL(Tkn)Xn;m#iAd+7]-R
%s3&fP(\@5(X8haU2uaq3\T-tSnAgP&s-t3oo&#)ts$;\2rEfJ.n,$DqFC4.Nqgr8/7lepBGi9T%:3%?8_!*$[f1k<1Os:$_Xqo]a
%o^j(_NZp[m3H-1\7)XZi";t)d_T1QTE>2P:aK_X*>rV\;01EE$/S"QD\jX7T@EjXnSa')O*9@.oo)I<^FSXDHs/Z'IL#>3Q7/d7B
%UUoa5c/V;<M'k;_)@uCOO4U"E=[as$81%kg813KIRsa([K]8'6knkH8M1=B%7kaF1V!IaBjIO@n&]rf)P6ahr8aS9<Vs$OcZZOqF
%*^uT0m\D,#e^H^QZHH)l9Tp?;bU<5#-sp8V(CoOrH7I(MD:4b@&PFd`]#[uYb6ZqFGXWLb.N79uV(ZDUUPsR68N9rsYAZfuJk/QM
%.Cp:_3f33KR=\#AWlj8n_r5PKnb:'PSQLpC!<-]Qlf7th4N\[U3lP%[;,1-@ch6OA3m+-\2_p)=-iaY[Q&:Am^Y,fNj3;9Z7uiVi
%!'t;n3=mA?;\GeHnnIZk'K-6Q[0Rk-n47Q;]c@h.F?u_TB#k:sq!fR@BDc"-BC%).8#j`Ob\F0(_!-rZ<$>`d&!330T=oC#;'sa$
%4&0+'mlAeT?H.e"YAb[D4FiW:c`)e9Hbu"ZpL;!0lf<GT&S+t<Z`cf3>iPm-],[`dc/Al\7g;48SI@iJ,MQ%&+QO4*8hq6ni.uhH
%U.662SENIG3FmA&qf6p85giC%BGi/0e1su?.!O^N=[a:U+d71u_iDFhB92:%o2Gns*DE;i%Y0/O$fZ09>Vm\t.@'uH?AL7`6uKP'
%1^\:o=/4edTf@"S*[sa,1pj=HKZ:sM"OEV'R.:tQL+30*[ARIn:dpls@o+0i5u8b-%qH]S@_m\:EM^O'iosE0HS0h=Wi$Lp==%l;
%HQmm4gbP/LOM;riCDe*i\<b$'3Ll7'`C`]9R9WC[alAW,0I:`kP=$hOEbU[s7Rn`_+>Rpg\&<qOd]H*:-\ra&Of=NMb<_rj=ruGZ
%du/<r&rFOnjLEiMM:pYC;YOXCa:KXM/"V[A8Y1Y?jdO@ae`F`n&1:fb,NN6E#SrQ1)1ps;hGee/MoW5I7cU5*V2li;N3QJ)A7Vo8
%?u[T"*->n6>S<'%%'I,Le0=?@%2;UujCF"e[@&=pAk<\NoWi)H,WUb#mV.h@1J&2g'!DLrQl7YLp1B?#(s-BIGT%`?I]2MYBQdoB
%3P:au8"&d!1ceZ'Nm>Z6=$ppcm(hF2",SV0&\&c<i,4p4QV@F?]TF,g+*!M2V*1_Po1%bPqGsm'M?M$MU,,3+'Ni)47MgWaL5L<Y
%Ju*(hlNM[gp$_,Fr56^E:L;h*Zhr=Bd&V*f0"/sjo5Fng,ne-[aJ-)Rbl!+W@4sN*')_tai?2;AG!ZfBlQU/cBe'l0bIr_q8aHU6
%_OEuQ7B))>+)*M6.UB",]rW*O:(n@UVsQ`l.EW9<1/U&4Wl.'NiFsjX10MZgX,HFKGh7lA=E:aI\tS8bWMng:;oQl.1,\63iDi=E
%W_ShMW]O4*FfN,DnVs0S*b*m&+rnaE3DObQN!#"4lL:,N&V+i`L_l+oc]P[Ae`_EO\bE&s+*,F!Ib-dMO?5Z(m/E)6meEIH*e&LN
%j*bRAHlF_"-.;)r>3.#U`JIq@`@=g2ZBk_%\g>]2WRNO*=k7J$JW$h`'l"T5-mI_Bdk[%l8Ysg);pWZLR!+Gnh4BAVM>B\!:8Z<N
%e2fG:A?d2QR\t]p[*N3ImAEOQ#+:oidhl:,@WVcA8+"P84"frOR:=&NMe7o">&%o;NME\9ZYMADE#e"[>jJ\([-9m*btXPAY;BLW
%s0Wj:/Oqi`nstEeOVlGn7t'mSQ:()mhXfrL5NIjn39,FJ#N,'f5B=e?r:;#jNpkCE.t,i6bi.@Ze*nl'AP[^uetD5j/4O`F.4D5S
%X;:=]]pRQBG"\U\!lr^;=\NoO=8G<i6>t0-E!,R\-pso6[E:?C`e1gIV_bFfVcHZN!Edp'):k8<1n;4X>?&55"ge7?MjBd6T4jJ#
%E<,mCO+s7:X(0F4bsp`l*OX9U>J5*TJM%pTR`@+uLM<U^O-QT*45SLoDa3[AC%'W!+*;nEj1j(as&JPiDheMt,*,-QX&,:b5._SC
%!''uf:DWi"\h0=nl\lW"`*uUR(IZ0WAnoh8LM8[No?<),3nR0EEY?\,MQM];_^%7DoNe9,K*?r8TKq-=mAFW"Dl']?LB'$[%DaX,
%UZa^O\Ot2M'?Hnk,D66&2S?Ijj+^)L0gO8oC([G*WWn[PO(oiW$<=8<NA9Sj(t51obS+3+?M(Zo-K&qsT%2P9>'iM=s5i%I?2]R*
%N1]-aj)k*!+tFIj^hCt[O7\N$meEIH#QR*QO?5Z$h#C&l*#dr$k2popQc62cjI:DS:H,2H%"4JaOC\dqj3@*B+p(<B*7HVR$9]I(
%"@3Cr:f$QoctB7p>mP`Xnc[kW\.`8J6CeI**Z6J,OAd;t"#r6tVEp\\;%.F8+jf?Yga'8;"ud"JI/Je!7j6.YE[o;45c6r>$?doS
%\[Nu',NoHd;e*((UTpPg!.]BRb)X!ud:0G/_P,S]2Cq=%/PaKE10U0ArWF3MlS538C3LE)"am>jQs'T()6.;9<,E[5m2eK\;;Pce
%hW7;/,ArP5+28e9`u-,Y*rb;nj7Lp_.'(DY_8kLXLYVDckM65Q>r^o*%mK_PcQ-qA5&6D/)We:pq5dFWeK$kiPg:90ZUXbl;*NeV
%9r#p3jOO;.pts-lOuWkLVJ&?p?7*0Ob"MH)UZ/8q>\8n<aJ-B;QOBc"TB:TYc_CWd8#-MPd;AIeB?fJ\iig#mlsdOUI[-pPl$)0V
%.eh#Xm"2j,U"@OHkJ%tfCsii+_oLpRpj;Q<r$JsVesQC=@`GE()eSrt')S*MWgXPGa(Q((>aQ=3+5F0E9g4(+qT8>sqnmF1W?MlL
%/Uotub$%`A&2dUY-q(=d8;aKgY50H@jR-A-$K\1qT-gYhJ93-p93,*m"Y1D;?()-a62'-YHTCt]Lj6iYg,>`*e(o)Xj2ZW;VsV/n
%0L:)t4@,eACk?I9DAls@,6M(?KXh]W79J>$N0Rs?\$3B0#+jaj'slo8J2kDIM6O.7\qG0npS`U[A,'dZ]ZL@t&[FH`;frkSW\Zn_
%6s,=9=<Mim#i$X%`/o.d1X2e#HB%$k>/jqq0O$,I<HD2:!+D;ZU<+m1AuTO*WWK(W1HSV.;n'<:h==H6B'MsbmtnTSR\)Vr<24$'
%,"HdHV:l@l<h*3?:3PE+cKaF[-RX]&?)M@+RR`s+`gY)^4kcI%b8iIlFa\(FiJYbH_I5ZLa%JWUpDs!2B$2>m_0K70n=c8]B8>:4
%:><f0TC;Qh=)NUp)E(*iWL:Id16)Rb28iI]OJBpH8#C/cdlsd]3^ZT8*]`GENlq^+2`a#j#+BFA,%*-b[&6Y[9s(4:fQF"T0^nkV
%D!R4`P@oK?k#H2S?soBg@fA3+'jSY/-0Js5FOJOHL!?eQcnrW#@0XX^B%!pX#]h5@m4H*f=eME2?qW,?"q4E,Ag/>a@.hLe.fUR1
%3]ZSRQ%si+5pF^2,9MErjH$D?U&@pmk*`!J8"7O3WAgSDs*IlJXHgrQp6_:iX[2p8UN/JGFGq#rFRP@LE>5rnH14Za*:<Zc45O[u
%bL,3qa;l@Af)$HeZ0sXZB&';=Q`dge&p+$_)gEg9A8E\Re1CW^j+"B4r[#1K\c&6Cf%L!4amEHNV78!<4=p_B(SR[uH2]VKrt;QC
%^e1'iDkN9GF'Dc2*)mi<;ONWp(/DFC-&LJbTVO0$F9t@8G+:oi/'piTGS`,=^nU_ATec[^I1Qg5(f59LL6:rZ6gf3MinK*HHKh(a
%pgH\'I)m>sq9=[9s,lbp#%Sfd)/_B%Fj5mZ48;'Xe&4:Cco3="VXoq88>no(.O<LdBa)qml(-%?$*?B0[7=8C`,aG*lKCBGNZLEr
%;g!1<[F4`FmV#Q@NS:/$T+h9,#eY^:Lt9mMUhXJ@XD8e%WojPcNN#!C5+U$C<$+?1)I`ln:UX4EXIslXq/G0^Rhf(,-46`LdmEA2
%@!ZA"FYHYJX8XmqW5ikRL=*6dTe'1O9,8UD2UR8Jc.H&e>oi%naCiPa+1YmoE.iQKs,M^Mqk46Pq`BkZNuiJ9*N+*'ElSETofgEG
%j?%69%82=BgRqgHRea*\->B19JQPDpZC]VC3;Gt'rBP3&LS7Wo!@*[t.NU^L>,$bgZAbUk<W56,:=N?8<n"(TE6TlT:A_H)QEm`d
%1><KUo0BB9?.uQB.U.F,q'YI<,B_gN^oLM2UqXb9-E(b)a,nCrg+]i[;i`n$PD(sra!;%[6il=M'&r8O@`]YA.<Gqg9M9:a[KSkL
%Pe9^n&oGPX,,S"%:mXhPmZplW/%BnPjMO.A(kl:bHMAQ%l!9)"nX\jUof/NbElU7Y+*W+Hj80hb'1ud$6.Y&X=>;;671<3nl<4K/
%0RQE#q\'(`b0g[FL(Cu8.d3/gH+ZdRrl-+[E)0'+[$+I16.dhk$Q`?F=gNd52VH>X3Q8S.!X':5@:r0N[]EqB?nmPL[KRFp<F2r.
%Kd_g[m^OmU\5UC)9.KifX'#C^f&hfj%N+D:Mcf%YECXpRncQ/`B8C,nLBaj.E6@_<egm'nADlAUlBimfUl^>PXDchL8)aU+/8c<;
%K95:b$CGU4eY%9r7e-V=q0GpLM%uPFE!S@<'8mR]]b`3daMK1sn5Tll01H&VnS<DlLA*6R^d5V8pn!?'5G7r=Y*.cl9!@%!S!1/=
%+te(hlM'D7iDgJLh!rT*5<ISiUY\!h`jsmpP)4Y>8:S*gDT;E-dhH50H<Bt&A>\#,:sclnAA][^7[Y6S;+@mNbVJo3B$f=k=gg61
%U(L]+Bo&`+-<&bpYj6"L<?o9"AnJ#f2,(%!1n`-^QIPDl0`M<q1MYbOXiEH$LXo!*3fcIWFUZl)`IoJO4[O=''sq1YAStP515Sj#
%,a0r$R1mAJ0i8Zhf'lqLYac?H**8pj#eMDCnnCQ,F("e/`opiq)Q);La[;#uniIQC`UDnq,D*R1lZsbkR[ht@QH#q*jgQs]3SQaq
%-:Sg1>/8kV,BStuX[-ji(lf[5,eYICgb18)+*`F!?X<,W?\^`5lP]44;:%%KFSa31[.lPH6oL0F/>.8nVNV;+Qr%WWTurm%"!Tjs
%:`H%(Y<<bkC<P,Ldt<K-%qb?9c97KPZRfF?(;I%9P2V+"ni[cG@SMA28C.hs_MDu:8P4ijAkL8qCW],LQ\[CKLXDsOZ*Fh?(fTgX
%e$K[@NM-!#5&g=#b0K><0PeZ^XNSY\'k%fda*C?l=fj-`UUtkH>ARDPgZ,D%*A[GLj7&Ap_5n:DfT.+okT+<i;)LRB<W8<SW0'Vh
%SPjfBbbJi</^nG.*4N"-9tOgElq+14-jMHEUKK=2KSk=[FshS![95+s])_;PkVfbO,0:I/!fLYRR-ddBPN^8?3KbF\it':#U_/?t
%6Nf2;=bmn(O;1ns2oV#SAHUZk^`W[m8oJt0&0"ZVFqQAlJ"P!W+=m#rIm2c[htA)j7NN&<EhiFKSHZMN;UHqu!&>c/Pi@l=PpFAd
%:iq&Se,k9(Us&+d8Iaf7AjX:0"^stK_8%q]lAVEsoLK??SRt:V=(DC@s'.%AlsdqI#6sMLJ]5.=2oifTe!s;HN5Ai#^R`:ijI6h?
%B$EA\QZk&Up:3-jH-=mg-38uDU5'LZ])/l(>-DkOreds5N;q%8Z)f$e7;Qqr$X\;NG2GS$`k08]Y^oK:QGpo%?OW4WV,4\b0L,7E
%*dYklVasgh/$dk@MJaoHX4ESkBLbOZ#'2Z34+9$a9,W6WaJMCt6":?I%lkQ'W8ZlI+Uq+jjID1a3t5?M=L+&1hN"F7@JhZo@\-)X
%7id@Yb!ha8$Y=0Z/bngDFfb1Ac@ZLo0[(ljEulU\HEVP1:Eq^(r7pt.o:98j+W&S'_`VtMj'=>:U?uR54/k*Yn+Q82!@?qd2r8\i
%-1g?gE=WiU&I7a6"GPLoNP1$!*9h<-TpI(AD5GN8!VZX7<KXnsR.(;!<EZ0[:+e$V`*<"GlA?nMY]/ULd.Vm]s"#*a4G=ug"LMBD
%i1,6s7d6FnG!G2'j!t#pS:GcI'Aq),BYf"f7'pYq7_>JoWlMJAr&p'N[^3nZ:&RL/Ce7'"-^(SF^_Cuo?ghC@[HiM(Run8@K1Wm(
%A*(GSi-^h/]M/oC,m<84Uu8_Y"lE#_^,I51:/^SpWPD!.qk2t9;Xd0t]]5MH)jgH+Ek&Tp_=O>Xh,*$ug$impD[Gi;#iOMPG$B`C
%%]a([Z!@=1D1OPpfp:U`S==-62mcShkH%2:N(MLoQTK(mJG!mt/m*]0kJtS5&Zp'.J-M@#[o!.>h)sCX%r_?Uf7:KbKW?2D9O=e.
%&BKVIL<4n]"*Zj8'l!p$@6n%o4rd!&WrE8l\']9S_-(D6e-6LknDKe$VV`/-QsQ[[&&oqp[je"pM2U7c?$r!OGeE"+"O*^J[ou\X
%.f"+KHFZY[*-YnEfF>[<Hg%IO6<=%6OQ\c1WI3VE'SGg_7hjHb<O!=n#k.KJZ")`mW%$aR2;+!7(G!3`r#Snt,t<Z&9i`a?a+7aD
%#<:K]%L2&RC;eD5\j#?SO%$lP\-R[Zo3$b"C*o14CN"+>NB'R&buIg*>XrpON1MQI/a7@:%U(eGZ&R'*N'4;4P@>+H".PPoUYrCn
%8AVZJj(@DIfc+bqHVL:FG<a@LT&4mCh`W@FRW9qh"D$Ue1'!CfS`suIl@JTrF*;<pPbq3@[li]"Reb3lk']*QlYq%II-:Ll?ZGdm
%nLYPjeSEL$V_6PNr!N6mE@E=1pl+,RW.Y,m8NG\!!?ZA!SV&)n)Ha\C]dR=e,pf*T135%?1aeHE4^>(Uri"S!m#6miP<L1)bgU;r
%=q4b"cXg=7=5O_r3j,2@KC66$iDq`dLH2m^OnT`N_`TbsE#O8EkZ\^)`\[4)R!L!`GiTWIRrMEP.%#_2RYcD>&%Pf4?qn0d167W1
%*1o.:!mPn=9=gbc!mPgHEg*?>75i6XMT$=R.P`!JB>KB6@*>@]7:$dTO\??pUbXM>%[ie+3RL2!d7N!7kUee)Do7;/"6I5Or>ClI
%R5C%p$e$J#UmN4kAu1>CKd#cfOA/TnC@A1qmT$"jA/'R8Qp6$Vb<D4i%mMYQAM:*\<+D/$N"QIK.,"=%8m_GeZ*tI7*bRQ>S`VP+
%#G"j1%`/H$ZE62o/YO?%!cG4XJIC,QnH,l!79.p+b(?Q':O2kOi$f=48TSg$hQJ;]E\g@\o;1I0R7WP)Vj:$u`KEZpc(R,?TXZY%
%!h6=9*1/NAo%kV+jXA:qG:]5YhKuW=*%M7nm^RC2n'?^D^ZAQt1<LUJ(VHL@=d!hh/7-VfQ$Dj0YJ$5>g@85-$A33c6Lm6>0^Q/"
%:(qC\`RHX]kO3Y]d]cG\3%QTt<c6=o7G'45iS&5-HY!Bcj1qfe+CGAcH<8!2-T\fT-_lEc9VOAW4^,Djbci#=<>U%TQ<dL7`JIA+
%W`ebu]a=C==^79LY/G''CWGU*/iSid_**@i&8PA1C#^r?i5lGUF23(66O@3eq7-,[52n34o-p).;@up\C^]tf?V;RT7?fl6manRF
%5jBBf't0gjpcfjL(OZhABsBCP[trTcism,b,48j)Ri%Qq>]@JBkjjeBp<#g6YJA^nHXB7:4=HH[>SdniO(n-N2Y>+\#snu1RID,`
%1/DcIVmWY)AoZY'`dJR)+IP!;!&DOA.]PQ9Q,f1)Ok\fqQ`B^f[4GC["mb]RMkP[+8(dX7'SA=CYh9b-ZSro+a0WRsq>PJ/h"#'`
%:YhiVEtmV=2KTej+,nA<Yq=7I".ZWic*CKsfQ+t]k\5a35f/h/q4qfBRJf'X[YJs@j^VIh-6m:TaX`GORM8k.^H/O1qS&oX\PRtP
%;K59?=EgW_ZOS#skC.Q&'gu5\Od88\3g:mfZncp8P&sgp7(4q#(@u1lH1&3!Mu`OupM=tMNE9QAEGiH%_03;ueM^)(=-p;D7CLcF
%[?[]0.pAnHQVBegqi)b%Mfc(3Crh9lTb!`Pc5Pu]D>c/?[)%?tfn-2O1T-;7i1=S(is>1W==fcc!Alg'dVP\R,I9:"Vbp%fojGuZ
%D.B#p9sFPcjZ41#*gE4F`[j>j!e5!<F`"K<j)F5Z<I4-?"CcPXK7SSX15lfI#6dWGnG[aI$fGG1^%@4qW,NJ,o\?utr&q-i_$[6o
%Fh;#0[r8?9eL1Y1:@@"_r4DM5rOlD>,V,i7)[E<;\7i=/\rCjuQe&r@VtE-P?_1I-N;4*&Mmm:i!!dE4k3(l"au'@".:(h7\MjF&
%Dt6%.VKA#(AX5A+V\E4-7TPfg2*rJh$fpTkPp13RkZe4-B#jul`=>s`3(rB`M35JoQB&$8#D4+f)GdL)]UmZEfd]'Hc!?#3[t*GN
%OJb5:'C:%UhXcmZq&d<9jgt$%[S$P?>qagB(nr$8_60-j4YK6VJ+Tn1>hKd!#OaCVFA)!'@>7O-Tid"C:dDj-iaZQY$ijpT_C(KN
%Pm,W^Dj,qMO9\;YGF8>>nc3A8RJ<Qj_)/=hQ&&3_'/kI.0jKe!H5tN]\K8reBEAZI7W^f.f42B1e]fXPO6[cgd@u(I]'JllmrH#]
%iUn%k8(kmb//1%Dh[YiS@Z:"l?C^o0ZK-\#[:>0lHJFjL?]Y/3o[g_5Y/aoFD2&J#V;T(\nlc[WZJZ$\MCaQW*&dAlQA@sV[\TRq
%f0JPmaq/N=g$04EIdPFYCfn\Grm1>PFR5B!>uSKX6@b.+_o"8IK0nE&^A[q7pX)b7jiX<\m^Vrdj6se?G?q[8EEtHMbl%se=o_O?
%iXGjuj/c7l#1o1&Gr"PH%d3hCdC;'Vd`Tfc[PM3]+T6c'o4\q[%<HHc8AQ5f`<'!iL>(T]=?!5$G3@,_]j"a0Mec7r)>W0toqfCU
%nocr'I385r@D6$=qbL58(r#.ng%4$[S5B'2C/0Kp<rn.RAlmYH8d;heZDu2$^?+1:[p.^-H,J_a08>CI-?rtT?\6^MK#Uj'[TYUB
%n;V8AD>eY4pH+qNNO8@?5(7&8Gi!agqk!+4h7fp3eTQ-o?"biF$nP#OZW9rY;6L"/6Bq8gJ1=!7MI*h1=T4]B:]m.ioK:FLgneA,
%X=gOi<EX_\9fBk4CRB-UZ>DqK8108<Y@$(l];6k_kd6&6eo9*(MA&BP"3>-`:%0W*q/RJB/WhkE'UDkTLo)b3`Okj1hX9#jBS+on
%V\M%nm*r]M*UeP!pFF>T1k:Asn?C8`Y4p:LmtSO4a*L<s>S)Uo(YkJ5F1V\4-%L$;+Qn(OT!*14Yn,bb(N5IX#Z)"4ILTu*IEbDc
%'la8KjLuDm1:&Q6\s2*dc>Z"kEI[n"<NNP3,p0AWnei",2tX7gG^GROD8uGkg0Rk"YNt1D=uL^>g>5HT>0b-Z_q,iQ><tt&8FjX#
%n/j%lQW(_$>%83H>YE!:=_j;I--5q3coU'HLfLD6@`?6nk$^g!]4L!XqrV4H$]tbM1\]bALH?#q/-*'YUDqJ]bCdMJqR@doA%1-s
%!iteVDf,AT?eQIqh]kC3hiGMS>n1X,DCjn\Q#=.mnP%tK%,G4Eq=G;1Gm*Z,Xas\sr&$A2@D\:^(128DN@^U<DPefL@Yu1"40q4J
%gp8i$6@')?G4%G<6]1b'@7k'"#L/-4kAr>H@f\"(QnSeB`m4YHB7TOn!9Ij]pad)NA`C$i]M0aPFTKX7H2%7-/lgG?ZGjlIOKXMu
%UOU/dC&JISBLTj!aVd>8_GTlKjq=hfJlT\F1^[mN6&gJU8RR1aRJm_3qf%\-S$)KOQWop6qcnFj:[^Y's,\Vcc-6'HbK#fF[O]Kk
%Xt.(\<NA,9U!Eni1&\srmZpClK"J_ZK_qBkHM6LpmrnTk:S.P'1MuaPcPY;I%.#bSp)*u0N.HDs^cl79T/!Rr(t`KYp+tRq=XH>U
%`+PM5N.HC,$qsj=rp?bQ?bCj]o$+M-hu<Q:CKGr_S&^S=q]1/&oljb*H1U1loh4i7pHO'&jI]blJce7:](7(P<UkEZd`GRi\?no>
%?ZhKt>qGuT,k.VhNN`">J,B]Rqh+mcaqJuKr2]hos-(4tDe]0.FMmN*]79`cDYMCc?M/Y_#r8)0m_!mtjuX+/rHcpThsAsaS(uK*
%]u`qFhqqeUIWKo1oZa^D0;#oVlg>S#4iuUM?bLd"qs!dWXFn5NIIlgMX4L_IT03(YFQ:u&GkV(/legS`IIjf$hr0ImLB!_bs'L6%
%],^LeIlDNrceUrBSEn.(0D(@Ekd)JUMUKnV,WG\lM;DasN@D<:k\AfH(p@soc$Chi.o=)T1B=%DFu&$Z*(jdjkZ8s`dbq<Vm!=O*
%_g_>ZYB82i\Zn.`&S7B-EbC`87BR@%D\mc46=nWkVfGdabe!s07C.2YCUq.&K9kW;H6lKM85$OWcNqrsY$*A^>2khB+@.XqI;fq,
%]R<RWU*INM1rNC7o'7@#P$#0)+8*!g'f!CJ\;K::m*O*ggi[T6[(q/9CUNi9#\*_0j/UnIhmJ>%fQm'8qJXuCHq2%bnHrM_]7r+W
%)V9\D/37LsdT$V;_^&NR@R1)YGj3+p<CGH3+gb-:(H23FUK,eT:6U`^nnYeLpSgc;]QS=CJKSkbY*8$jq.=ouK%&e?jE3kf'@Lbk
%gO5pS*2IAU2@&acj?.]@f+LTPi/OLRJ-_6sR2G=6N"AU)jnn-*X-=MD!<L(oS@kVu,21F\7Yc5Tj^GZ/7pW<?Z&J1;'/+s`E2&#^
%--5Ctlg9L7c48)?J!"B:RfhfMZm8UgMkb4p[p!!6R$X[#dGS<"ohlYV#9dZ:Mud+^ZeMAjd^[ebaN68)F-Ut)`S.L`ms;]eM#;J"
%&JnKh]3QeddasUE;IrGZ"&t0*Fn1+7lV0RK>*!:>)a(FL3l@9OMi:"*eP9j!R3_dEom/N5,I6cKq:ga5FX94UJ[>Z%Vl\3c']H3V
%D4.VK\*S)JR1o-[%LoD`#$K'gQR<ZnK!l0f(6_G&J;8iZd.&g6dGT<-Q:3:j.N-k+3PVR]^WN&p&6a@WhY9m7?lAFWI^cARDktQf
%>5'-PLk!V7P53^0dW&LL#$BPDau(db!<B&/8PoMe%4e8sP^H(7Q(i[XXh\A@3F%F:JO.5<8n1KuT+G1HWgt`9+hRDeWE2qJ',_3`
%.K_.)aH[DZjLt1H45Gf35bu(AO]=n.ktH@[0>3uH/FWt.)G42OQ9em!Y>T%[.p5H`Pof\9V=N?*"6<H&Lufcm;)::)r,cW.-nT>e
%Nt%j1SLK1C$<1g_dC*$,<V/,F<u%\HF,Sa/i"boPV7@kTc)JnTd3?b';mkqc[YR]*F*`r2kbY!-oEq=#5b&TW6YA9bGYk38,g*lD
%%1#BZ-8`I7V+,p%W/2XF&S2:9+?*\$':#\,#*(W*;8,EA9fWeQm%iP#@C_`?(0Q>PQ^Ct;=*?$/V:]kq)l@'E`Be9Eh"8eN;HXJ`
%bg[bX>UigrCPiC(!SQ,a2.C[!h'k^MH\pSZ$Plp7XG#WV@Tig@.5.eYA;J6MR;TEj^mJr\!6WtV0ks"$J.lJtK.bE9NYk-R;BYlT
%U=mT1Tt*JYA:f_]=+*KT6_u)aD@a]!KbjKu+k?-H@Sb0'MC91o0k-,UG`BR<N1i<WZlU8od+do1)=/,YBu5d$%nLVsodnE;=9iEe
%T8lQ5b2nX`Sl$FK+bm8GS;M=-\?aaS.oa).6+^$L=A:<]Kff2oMG17N@F7B!C1V)k@3.30b7k,Q@SV4VX:qX?4s+e^B:ifMVVFR4
%F)^27$:L9T*a</772ks_0$CT&k<rc58jTh47$b?m'-\&l)J%NAU;UZaa^c4"g,$d>]d,d.O9Xs9%`si3*/p7-$Gj-LG@<^%@0Y@S
%9jSkm%DfIq)Q$#PQb8#7X%Nh$f3sc6LLlEaU:bliC_C`RLD=NS$7snRo!$E*i7nkj&^u\eq9\KH:YVR!j^Ej%'B9?jf\p8,:CVAb
%'n$s'%edV2=%HL<^;uH>D/Ceo])o*k1s=YN&9M4<OtJ?6FjIHk%6J:G<PH85;o3@'TZGh9X,Hb0dK'NhJ=28_6EjDD<"=kV&lG;.
%j:*e(,.=%DMN6(jQeUJ*)$[Bi\8Q@ng,SiSkrLCNU+Yt&OYV;sJ.32P`j2TQ,qR<[L!4/l+m1N`,4&M/4ONGu5GBd%QpprD__>$s
%N!qQ/"GZ"TMRL;/LXD<cdjsOp_a]s`piaB0Cs+#;=(8b_W`nmp5E6Cm'AY'H03uImBMeKprD(?Yk<QX4f8>leG.<!g/E%n-mmW[V
%.B0\c]6N`6$lO)R4)?>tj/LDlFXVlKe9^U<`+:pYm]3M^4$kDa8EA/!FVkYi=n$E$SR6&$/Tb1"d@iK2=a/,,:g((9Mf'O"!&#K!
%9KA+MAt$fJ)Z-8Y7H\0nAY?WuX+Wo@FI<T?XJTG:M0sS,csTg?)Tu1LCmE,%djiqIW`*$\:g-8^1sQ[f8_VPAE/J0d:+@a?eS&Z!
%9-LM8]'u'I&^j!mI6P%&lAAmab=^oj%'c6W`N)#oe`c%NkW2[&4>D(P9pSq^\XYCf`04(bb]7T,3Ctu#dH>OV.@omeFBW<Mb@U4,
%l=fQ]kt);f+S)?\U/KZRJh8S%L#MUDQis>3e]Y$e0Um#3;.*OQ)ZQsCkC_u(]*u+`/URsabT*5:6apt];?2<Gme*njnDdDY)lSe[
%U+(Q5'l=Rt&CUpp'kVLGlHhp)(:UH$=P0^`Th%,M.$ip>9@rBH1dfUJ>?ie(+tPd#\u]#b6LQ&7+mO,4FIUjLr(_ejMHm**:hnIF
%kco@YGh1^^3A5W4:>_Cr(]6?E0_OTk)lC@mQ;8Gd.%_C-djT1ZiFW-eUO<7!pTE,o$ig#dr8OV=a3LgXkk)4;hgbIaos:"BmXDb)
%?U&u8_i*EeHLh7eT*#m)d0^/!Vh$+a-gP5BJ,r!<h&m=[_NHqZR:1^;(#onK;oU-\VFu!&G+NqVijbt$A10>Qq%^1`"'K=J?pFh]
%W02m9P=A?=$P/$XY@3uS]ce%V9`.Xk.e[>IF&6774<;R:1pHfk5qI7U9f9"[+a9h9g[G(4?2@q-iKN,8""J;e/kpUm]s=<Q6CNOl
%m96p#1E6^Rd%lHHZ%Ba\@]]O=&Al7MJ;&S]Y0J%n9r3nTa3'O<q8Zqob?a_0.,kjT-k=Xt=V`VI&TB7V]>t0"4t)JkejP7DiJ>6Z
%n;K2[!t6]S_F]Fo%cFM7Zn"6eC_+F?oc:V29^Lg[S2[s7IVI0:<2NaXbK]Wh!_ISN^5@$%fso^A6`d"*3q+pTeiCC$c^Ep8TOn;!
%huFtH(4Zs)qM/mA(F;O=#>^iG$nAI^$/hY).c:P@5.rLJT"\Npn*U$,q#l"@h5QgCT/mnEb-./`.+SfC9DYe,bUsdC,0m,:7<GiY
%:l9L<.dZh+K'+r/>#Kbp"tgqtCG46Bk*'ohX"Z)#YFo4@[a607-M-7o*=fq#!eq4&P'K&RS?WRA"Z?E6b5_dSQ`5/'8s<A\dd(kS
%4$Z=RCNNX`51GF28rJL`N9k#iLu*r(N`[jZ'$pYm&L/^/"\9">Eh/a2bmqJ!J3ea5S7I2s@*h9!penEkM\1If$SPf`q';gG?7h98
%O8<$@VU2.)Y_BI-P:Sr:g3Qg^#7.(AcWTY@-8,a?1*A(XAtS;4\X;;EW4!N.('0+0>%Ef=;_&hlYoeH8X%pUG(>UP5[G$JEF;dF+
%J=.jE4IhN6,nPj3K,GHDn!7SMrJ^1NE.Pq9$"EAGH7?%QObB#g$OmES1dgZg)5:2DS7ln2fJI9XPXqL/])t1?H"Cs21iErGmO>:o
%7a_;mR5d"%%UbJ':4>E)<WLh[bm(5b:11PhMW_QZ]e8H#fV**rcO#$TW?g+]e6!K1+us?$175u9K%27W=U<ANKUZOp!o+Jmoh'=q
%Q3P5'#s"b`<*1QqZY%-t;$JeVAJW-J,+u>#Qo0Oo`LDh8$M$$Sh5@Fppq1%ECMUBQi^W5:3A]R+d#&IT/AkijOjst]1?EmPG8GZ3
%E$#P-o[r/s#Ge1Vf@Z6r2C(m'9/04%/gJ@Y"&r]@MCBrKK.(u0al_rbTPUn2U'5rk3l=WRplg:"NR_S?i_Z.1=Cp()a%Btj;-*=h
%cpGWEAh:UJ:4XcdWg@mt%[k`g::X&1J?A;^jU#CSbG^>F,1)7W'e=Sm'S_.:@SSckr(gP8-Om;c403("$8<I;eD^W#WScb]?l['#
%9e_$Oh^.]R3DZ@ne_BanV7g>;JJ0rl(cm5dg\"g4BPG`#PNG8l$$m*Y/>/g`;FHSOTm,UpS2tY1EZVArL6@.`)$h#"#\W\:LhT^f
%6GPTff`QE6@)T-3;%<eHMkSGT&I#6)1%+.,Z+%om4:eC^MXNtAn.4GsU2&fI5lj*9d;$&CKu(bQ^tk7$(B">"3cgPuF0)Yni'Ym9
%:9%#G;3LKs+uk+\AF_'.6SOi=(Fa@tH8i`1*,1l!,.@oLb&Ua_^X,e,(NKNIbtsB.]:Q70XGkMqZMYP-N.r4@b(0/A@ZBN?LJ`VF
%*'QX-[&)7"B]GPkMUr*7Z#Poo7J]3cMCu,'ToFWsCJ1Oi+Z=ttHu4k7k(rf*@CP#bAq[g/ZA0WI5tj<9nPHk=!_G.#IHT@E09@Up
%Aa7pG_M]9`:M6#%H>,0%>3JZ""<6?TEL7UD'o?_dobutGZqrXV$?$_RK+*^uVHC1aZjUG'.Jd,:aXa*SN%W0V;3bcT6=!m["JjaX
%0+@l`+9Pra!s(r[.'R3lE+_3@J7VYZSS=G-FT`<be/o`M"pdl&%I5q]%5F424^]b]F$plVl,QuY&.h2cP=o!?9N-V("qP5X!D7IE
%]U)2,=uGFF<<On=8k%Me&qj9'U;.t.<*-!EVp4M"?m"5On\\U0`.Ci7KO%P<>oW=jWZE*`(eOeJdEo`$;SXMsJGP]".@q+g=MT^.
%b^fB.(90c"q&\Z^0C8j<^_HEM3A;!R$VG^h_70IP9c1YmVmg'.HtE@`L5:<PKHd).EoEH6K;t"Op!R8"0-\A86[5?F\=/5M()X_!
%<?K7B"RiNL$<=?P%aMsma9Z--$NLPOZGI43aqLJaiWHgtfU.&ES5j*GMpdBt`A3_jJWX)n"u1GdFjN<-F[V7<'fkC^!b6bkbj.kZ
%^YT!Y(r.C4K,M4Y%W[etM)j,ni/QH)J2nM^]sq/a/f6[<m[CL>KJOGg:Ne/q[L#\g=Vf[,e9$N;X3KpkLYrCC#I#&m!<=;<Ai."M
%pZkP)g>l[1Me@XL/C/8(@%A&:+^H:\;!sD>1(6H_&8+fj'GhM+QG/Z))MU'o9p?Vq$,kbeZOl/_a)n7Z"QM1:),%!B\]@rXN-A@]
%iZ[#KcU-tm0tJ4S#!!96KtJW>IP5UHUPA:[H"E+q6?K'#C`lh#r_a\sYH8iS(dZ52I5,!G\3K/?Zm5XC'@+_lZmns:*"^&G;2f<g
%Et(/W!e*I("D6IuoR=hU.7@=-6AiJm7>qrOTNS$eBfOes)q]QFH5mh:q?1-:7`ZE25kOmm!-f=:&J/@CrV[lbpcTNDLKTE^s'hAI
%@amh]!qGtPPVV7!R)u['e:Mp[IC[j>8/ZCnX<Hdm[K'NqF]G63g8,'bckIH#IshOV@1b3uF86l:Y4ZVI$Y'Xu?A_$@>kZ2ofRdfo
%hrE"kIemr1)iXCiGMBu*abepi-7([MqhTBhFkgTQFqca$,qS,Y'2qRR,@ohs7=tlHFQeWkg*C?Ki'ndM$.QNJhSB+&fi*f09I-#C
%__eX6)57YI8okT!qrI"R-<Qor"rT4J^IdRPjA6E-;lDO[%LY,0U1t)S1QV[u[3eR*Bd'@KQU^-&WD9NlgmH<A.9:o9@)NV_PnYB.
%C.*j@)ZH/oQ]Ch[$oPW-<V&@c2Goc_0eg:m@3<-qZ.2.!eu8%oSWeA)AU!'<M&@F3,JbLT>oZ!`V2u*WgRK&5B(=!k:Cce=]SA,q
%$8\(f@1_u8b?Pr&KpV8dWbL&cMljQ9ab8+61hVWQ^SsSj7q3O@@Vj0lM:]PQ%XM,3YOjX2FKem+7nc,MFrgNNBP+.,^ih-5*FukG
%K(n<piTT!@#F#K(-@f@TFU3OAk*dDMa:lIa/a4kV'5Oh2PCc>3!oug&N(XNoHN`k"b[4m;/QlH!3hZGB!>T9Vi/MMFUAp,;R&6pD
%fG?p(M`oHqRH^.B;ZW1T6l1*GjthD=<0;rk:m;n/&>.)k_;j+#``^WR>t!WDX'rt-`[PF!a;qsQ!&p[_a?E0NTGd]#pCcuDZC#0M
%-50TO=[<0-UgXg17[&pa`K.U,R!=8nRmg_P7Yqtgjk[a2`iWF8:,d6Mi/>B<P7]$%ib5^9h$XWo7D,JZaQ,)X/SK;]OHCq92K.T3
%Si=R*d'Ps5$l5_1Uk(Z"T`OTp+M,P`jhs9?Rd,^1(;,-?E#bZBVYGOGGY1sL;6oU`R+:Lj>X5C:3-m`Wm@?YY3;.>M\RQ`k=p;4t
%c(C((R>,hk)Zj<#gaP4X#n^*13J#1kJMsb^,gdS>+I<Z_%GD4rN3u;gYo%5E*.VWX"Hq:@Gre220k52I0H0^"DulC+_Y@D1>TYgH
%L;CKY>Tr<lboG,)Zjg@RHdnutJG4jq%@WV,.^KT7McOS'"P&D-ROuM<E?SNcC>_]f:pr3RUoL+pfJu?e?rFUA27P"dja`MoJiIFT
%hI)LX2A8&9Cle\?$D4E#P8FP7$a3KMT*dL$bNc;5=n^SFg-FR$%YsKd>!qFk@h)8]e==IqJYo<;kWb1_37*mU(l-QL`CCUBbqKD2
%Mue=)LAq9Dd)#gF`Os&s/)/P3eBhlI!"^(3[#?uY1[B'oJm#@Wi8YhE&brh%*uVL\n^JdEhm*E<T+4$4$IUpXA4Wg(4JY.h(2Pu"
%BL*%9%0[6:N>58l4LAV3`9[Qr`lpJSVYU<<d4<B7Lec\\drA9&d(:2dpj13q5`8=bR>TL,@ZX-KlDfKU#:s[7<WRnL!u@4UpcgUM
%7husBFJbZC1P>pa(54`Q3bWOFf$4k9`*2.;5"9uWiftD'!@]9$$.g,#r'[T^TZI_g,pHmNMRJ=WLk614WMi*kRb0;L\.3b3CI^gS
%`$6hspp*krOb#ofNgJ&&$K8YAF9m+h*l*I'Wi#q7L#2"@*u%u!n,]SR[q,o0dl\P]/)=:6E4)5e5Eib,S0G\?A'+;1P67M5WDNqJ
%_UIo\GUGC&F<OO-$EQ)"H)6.LdifXi'_cBhZ_ZIU1iJoIYX/X"5!nFRYr(LE`ZkNoIONML*JB3rXCM9bU(=*2;5/g(VF;mGUd1AD
%$&60'AUY=n10Or7Tr$)2@Sr?SFp""?<Yc7F<_?aj9/RVQTb70ja]<q]'U90L)j!A1#cKLWV'oH;OhZa[5ie_o50ZKkFC\*laV:j*
%J#S7@@8bSfM5eYY;lO:ghI?=n3i#&_Z="o(=7em<UTm8i[q4nH^?B!W?3Er`mtB3l#[4!t7`#eBXrk^=3Mo]qU;2!_O[.W<==,0R
%R8ub].-Ca)JLrA@"$dN/LR&:S"kXr[CS6ZUhT9/T(s31/H$2IWqMd*mnt!+O).iqu2%V`A(Ih"&$kW-(k'i+'1leqe<01@AL6)D9
%d1"'+aq(1TM@JPKL5'4chdS$FbXof*MZRrG.^Y'WM2\5k#9O^sJtIj0K;T7/O<J;]&]D/YV-1+B!A/J=KFRMIH:I/)Xu=YsOFs3o
%B%S4n*XQbQN\n_"@*6\$`WArW9gf[;Y;r:IX?bXl=$t2SA25o**I8/H8GGir^62g&/VlKuJNe+f_]")R9,U`T).sgtQt9^uRg^G<
%A-A[$SC!u:KFul[0G`r@cnVWX-?LK^,A]4,2Xpq""Se+d%)a)S!$-cT[%P;hKdG[,VUV#pVs9+FlV'(<B2/_+h_J[8pb&t"T^iYE
%cNqT,2.ViTT4&uJ2.N!NZ&Ia&g31gRU1nfY$5ZG5&Qc4hP,_Ur!rGMITN;H+,rluX31mSD&P^Qg``@"6Blg:RR>=H8:ktGUkp$6j
%%>sinfPlUsMBfW^hOs&I9KcN<iOC(S%h0P2JE4MYI$:WJ=9RT7(3o=>`:WQNCPTj#]D_1b4:6DiV=NJ.'""![\rbbN+ac$@;En56
%Dhj^jp1;fsl@NaN-q>;'>)mZA+mr;9.78GD>ohJF7nP6?,7d.ED,XJ74<9`Sp,^X:>7%[D;Q";r\Ir9nf#[sc3WV`%[$iW`/`@AD
%TS^DEqVM2!:Z&-iK98@UDJ.Wn::c>@OZ:$J7]HL4$#q7N=9p<YJX\VuKB$26b@5,t9LFfEWp*=g22(+g)&/0'N&WFH.RjIeZ?cl_
%3gVY`R?TaBVoWM+7iAO],(dh=.hcTIOpB"<]<88lYB.fEhmmH9HU&!kYW#T"39#K\CSfE?X3;U/<<MFU;Q9jf;c<ZeNu"fpLo/>T
%8(o;]6/)Io:(U8bK*i#a<X(\5iW;Hje/rf:C3jF^L59.(RF72IQ:6^*9&s?JOKkX`1,ical"p$k6m3sD>6oJ@Ae'(Onn:IVG,\DR
%MKpj"Z(aO"17en*$8""D"$\Y=o4TJ!U/)]OI_6\P&p>=ZID6](a'(DYK:IZL@j;">.qnWGieM)IV0P&W8@F-I&Q#m%8,ae>8FsYe
%;'FA>,#T_;TbFiM#M$ZqK'^]ZJV276R;Bi9@#&r_7,&ol>d4)d)R)RKo8Mig)/-:.RAMr-?R;E7ciQ:d/Q`;*JjO%W0Q5&c/K1An
%aT<Su&M4MB:'M*aB%XC6+RuqOq,DW$"9c].<dPCnLt_VPKE^^O3A\W`lHnopDJ7GfOYm3L5QgTkd'2#.+VRK>QS<ILArncJMDcSG
%d5i;.6"AcqaN?e,2>nYNSDahu6H%Tj5iJ*g5<Q`SXmjaPi*'a8M`k41*Xg=*/o#p!=!e.0n1ekkZ_c&1!uQ1#6:BaM3aRXWlOcoY
%1GR7lTVQ1Se\_5*Vr_M7V/Sda>F;^.=&u'OBWV\i-%ecVYrkD>nZ4,S1.p'V9bp]=.M+E.fRb.oW3,>0%gQE5bBbA5l]C[;@/&\!
%Hl'`u.Z@*1/5t3Mg+@-d0JX;^m=>W))9e(-$e*WnYqeh]1pCjm'Ui3]\<f*!X\QZ9LbIGL?dkA#6fCXho8WSqA:`_B(qX4r9ao`I
%NF"A+OZ%6Fcs2/\CL2?GK`cjZq,5=n'st2loh&8t(!SBUCl1dd)?M5kZ2E:4%T'_=\Z??ec6`7"78IG''=6MF>9i6C'pR]-cL5UN
%*08mUNgFHT9DISm7.hclMGWieT*N;k$q1B^TFR)TK)ct`iYYD1qm(/Zq/\>t+7:+j3?"=<asg)U";!F*$e.>'/t(9lAh_DD3E1p6
%7Z$Y%;ZYa,^,3[-RM1>4dV1-oJPKL0/#<V&G4>Oj4AG8^Xiu$jan!O2.`)F"as&"<e?q[I/Zn`G\q=T^L!Ip3TF)NDAa!E8k^FKY
%fHJ-p!Wu&Rh6Ou>9+/HL$O0iGr&_)_]pLW0.ma\RUfcT1/9Zf/&"6r<9cfiO#ht'!^4U$!ZDHO_Pi`&]<$al4nh7EcUhJGX&7r5/
%g3#ZR"W<F;.1[^X9-1hJboglQQ.mN<'o<016"F1NWZh"HC..a.,%KY=(]Aq#$Lbj%LEFQnd)l%i9fpUYFn#!L^hec(i-5Uc@]"3W
%b9i%lCJdI-N:Wg<0bF]4,9lYk@EnfTZTX3#fo0/@j=ISZ2\O&>JqR'54L/.l%Q&,IeWDOJ_nn^Q-[Yo$KD:s[q#Y9h6EHuE%N=%X
%T)^-U/u)go]%h%Xg#ZI;#bP^/"'TFAUCDc/.L+KpQ_SXT6hXa51c;.uTa!+NE2-/pgn39FhC4OIJRp/^8#T<uQ7NCjU5rIp9*?-"
%ei`-[^ru!4M]Z@o7j+)1%aYuR0qM<d*.6(L\WhUM#IZEoY,M4C)G2#gN.WW_meHSQWGZC$X>REL?a;RtqL\W6K*km!6(9bu%;%'l
%1^`I'9!).H!ofXP0kRdW+K:RHl\&?4Pe*usM)BT]"Q`NVNs.88Jo;2kblMk<EgLp"WYUnSQ=Wm'8akX'KC""OFU3Q^b)=-QR4o.Y
%JZ'_W"D2<k;FcR?8,s+;GdpX(Za+o]OcdCP635"dBdMbCOC;n_cD5agc0Ad]J;g`?9V-l;l;c<4Yf8@Yc*FFNQ&fD$R5"ihRDp/1
%R%OVE\7iT5r=HTJ!=I7tgJ4h^fqF?@L`YE3_1KJVb%XZEW$,_/e*fa:&7@i%XFiZE?'ghKJu/tJP_q&;pl4E*@0&`%.,\>hf54Ja
%dQh4i&>Q[14A9nk)L27$_#CEU#]sDj)/ckq6I-uoU#V,uO;H=/8e2Qm^2Ph.g;pYHX&T0YVNrMHe3;-+Dht)'\rWqWf'!4aZN1%2
%b+Xc&`J>fbH^O?[:9tcLdKmOCjVa6bk=)lj0F%$?+:Gu#/MUk5*<kHC9JR)YLg6HN4No'\8#6DQ)`3nY7qC,dAd,&^(,]k^iC2WU
%C6MIO&kN[;6%c(Reuc@cl/np\6jmAQ1k`+kT\kRICIU8sK"D4)dA#mUTEA<UF-s+]'d#lL&k'Ne@qeK@XQqs(^q2joMQ!%9e,-$o
%TtHmj4*hM!pgWlp3ol[nL]^"G&;\>rGFFAA#Y*BJ+i`D]Zq'#hpjl"0Q^<m>YtcS;_36H3]+K7E1H#_rTrH]Q042WMY_HiKUS$LA
%pS;p5N9sF0?;pJ6_S`2UVZq9S`'a71]3kF!48!G]e,/%ihO@eYC&6BS?iU-!]A"]ODSQ!NY-;,954LR-T"Y'unERX#If8Q(8al;p
%f<9Yumel<tpX>c%rqJ_Jf*g)'mob@"RWU*K<7Sm9TrjG@@qP-7bM=,e(1ZB13<Eq_m%pfu"1$ot(hGZO$u$;9bgj9<:!C3lTbsJg
%g,7U&)%2.';.t\^9!@mr*p*lG1m)iF0/Y5GOdi0h89\Pn8Yno,\.$"sqtH.t'$;\i;nRk+&O&\;/E5L<-QJ1Zr=Zksg_?[jD(P_=
%<'\I-8>_%?phV@Z'P2-HmtM^7]N;e/BT;F:?>e*Ti5&jD^0Wa)$V@qTCYi@tP=A?:Lp,]jPZ0KH33I%#;TdRdXu;L.@CcG,qF^W$
%m\o=L4;:6e3gaXPXCmIVAn*;8:MV;"")(WQR?5omK`37:KA79K4KslDB>Lr7'Y)%+KDLh[/^/=1GE!A48r=Ae<,hr6MeDl%@8>TL
%N-VTa`W_GC$JLm[N4d^q!]&9d)U#D<&6]pQ-\i%r:sbrA/SS@^,6S>S^bC7l0MALYm%]8kq>e,7K:Bs!%0O0CfVJTdOGpsaKoTst
%*Fn55*sDm+A#d#6Ys`Ld.iO(O/`tp;-=T7GZ?T2%TtQHnonN)W)#[!g710u.$sh4D7u]Y&>T.^$[F<4RdOa:G?rq!_Lfk;c'ffI2
%53rT#h8$*/"\+1Oj1U!m4\fcW>8oHD!2Sg1+ROb8:p0*n+Z(H9lKeu?p0Ekeo[8o(=9I&X=MG1:!(KG6QEu\eT0-5Gk^Hi1s"^gY
%K0^nN):n1D$Sf'D&\CFjN&c;mNGL3E5RZ.)+q75n705gtFn.(VACX(]lCr<D82UT=,e6WB<'s=9Nm1jF$(0qr[j*8![JV5u+)9C$
%B[KIM*XfZoS;?YMAX58BA_tiJ8M+CQ_DbtZK%ZF%=#5H'^pg6eT<Tf2Q[S*()*)afiPT>ON@P?se#V_)q:HO^ihc/9^ro;d`7R6n
%6:.!<MsI=P-,E%$H5kFjTr#Q-`t6\rMEq+Aj;bkpL5-hd;55<7W/);cQaFm;Km8D<J6,=\+]7sVN,F7V8sUg-(!rV3W`fpj-a9*k
%1@[WeG,aF's-+?W=l\as;m`B9WAYc'ZtR="[>\(s'T0&l?>%UWUk)M-D5)2="g_iQ,Chs#3Z:8<!i(TgA=Q51N=osq]K4@sdS5YN
%cqK_"ZlDrrbtoRBQ4BVqZk0LhiF4B6;Is$.Y>3*@!0Mf_S3RM8a%CFlojr/H,QX-Lq/L@a1p=^PY%b7kYRF!34ui0T.VA4aBT\G*
%l5_Hk#QAR_4)*Yjb"9VtA9H>A7u,b$N\#k9dGSN_onR.R?0J\L'[^d]]>u7+&D7dE,>u5b!qKVQRCcNONp%bRa>6,iW"T/BEG^eC
%2)m.D.kd;6;6pg1\Vl31Jc\sZ;.b9cJqoG%q8f@d!D>IA02#X_C[O7Enq/Kd40@0[]-?5bd)D!`'iAaPOIBM(XJL`AGm6MKBq=ib
%-mumPo6I)&S)qQPAUH"*)O5#Z]D:02)o/qX?RJcd1d%>"J=4>V@U;p"^Q=57-8QEV0$nu[,-mg&_&n4"@[Ja0q9U=u=JSic'QBuX
%cT<b9&5+97_T>3g'\#%nPCi"J1b_=pDcI5K033B9=^<XIRu8oI327_?Nb-IaEcrRVMU&=0,ToqcpMd'hRM6le@cS.c:)bfk`/7P,
%!H#D1J\@%&AuTOq&CQ17!DEZi[XOfhM?uPk@%sBHeh1r?G[K84"]/ho6A=?/5cPlX@JC\dQ@UM9AM%f,\Oq#h5k2j1`s,?P'TG3"
%lbG$4l6H^0/2p(4(4e(lZS=kf#&6,Z(kG()Y"E0naj*0uAmK&CaWerW<!;pRk$pF:i"i>!9;r$X5t,KhVp(c8Sn*87_<YlO3B.n5
%3<uX6`M10"6^f1`12JtmlJ>R7S=o=;11:@SNLD2u4NTWP;HPLEILa#'G^9V_*uNHl-&M(8?T@YXQn@:T+[sF\.(t_PHJJIhl+2_T
%hc6C60.k\aS9M>Bl;Z>79+sDXm=<<O8;EA`Pb?1cPb\j8.$P@\5YLQWX]O$9%?n%)Zf$V(Ot9<D&YIW3KM"<3W<A#WQu,q_Pq'&'
%bS)WRAJJ/fnMgYL;=5'bmlK;HWU0u$P4od$7g+An]>qf18E?F7W"01[.i[&!Kkgo)Jq6Uk\)FL:NJ3L?OpiJH\kRM_f`\%?@5N;,
%XU'Fn]N8?7X2.X]&6Cm&GS3Z`IF\NZi#>Ae"dk2VD6q!jVV5*Mrb.D(?[(R29F;tag/P,92d=RA4:Y2n2aF3L@>Dfh1TMAk.0Fb2
%;^+_aHl4AfR$\3#%+':J6r>^t^]OdBkpRGMVF37$W1G-$?=@Q>9'%)>r*?8B#?Sr#oEDQ/Fr[CPMd[?IJF,4-/h<')jL!,8P/i<&
%REYdH=tTn2_pO#0@>@4%$@Z:s=fk)p0tiTkcWX>j&<jg.CKX+7?Sp<>.krLbm.gW<+IuuU_YFFcqQBac<lBE6.MK1_o1Up@9"(X.
%9?sKfi6rKGac(S_=G8[D@Yi*W$*U`fA=583M<#G@P?%o\X1!=!0T.cDK:7!X$]Uq44FjuG7kK*RFtQ-4`Q6dfh#dq56IWkMH6r/L
%-M9'(&_qnQ6#eQ:>-U=EOMN;P[3sKSOAN/Q(Y6&t#mD@n[TdCfP#)hU\&+2^=l]MRR6"7aTbjC$R.nq>a>F,1r&eK%c:Y5A<F;2`
%c/t=#WU*(f>6j<uRTXXK@bK_PMD8S9YR!]P0[FLnBZ1R,Bj_d1r,'ZgQ^<UBc9(mNjg"%=CQo$rJOP_f.EgB*ZgeY?,k+K6G6;L\
%4Oc0W\"kRpBOK8L-5fi?MW(J><!,`FG_Mo[&S^M#_uP=RZ":dSTidj3S)GLn7LA!RO9&N(4JdTpNWC4fhkGG?CVIBOk>3meQKXmZ
%,IE,`[-](kRF$"%%:7R_7*V`?_-5IW%,S(.V&^c]epJsh=]r)lW>=;4/-KPu7ZSe^5Yn4U:"j.I9h2)Fe3OIfK9SJQb`t@/30^P:
%'9H07m'JC*j9$`W<L+[8bQF-e+mYtU0KTVp_'$^+Ue+jJAsPTAa9)0`8;'q4A+W3-RP%-=!f<ja1(p=L"lb%S,2=I+'t,fn.l6pW
%/r&HHX:t2]<c?+(n\@eu7^#\["TCDqBq"+7('9,#T7A(6BX9[9M.TYg<n0tCeiLNR-l#hR\LUShBsic(e7:/4W'Z05NDMZ(>O0*;
%Ab:d`AZ%s(G_VrW-qtrj-<c]a4OVm'@>o5.7*!prRU+gYL"$/pb\sO8b7*75ih-E3lpsq\W1jq2c#0b,Zk`TdR[IoDk1Zk2:+itY
%*^HM51n%#35(X_2<,<n<!L`Eo=bRN(KQQQ^ZnO;b%tZJ#-)\.BJ6#3*LY5&8PQ`8PlMki(L1Gm*1[B%Kd`T]lJ9;-g'3&LJA.*0'
%!a].ZHkWoSd6d[7+IoNm6crXBd-2!]V@taOSgGdKJPW:6i"SU_GNdj:X;I4VB+g7\5>DN(aJPq_L]n$c%g<%F'oY;ldlIpL:i/(<
%JE]t0fe41@E5I)^/1P*=(bVALLcHro?W2e(ME0mYCR>K_=8bD(5=Ogg6>8iBOXl,$%k^tdAa*-CA(C-Rhpe)rDC?*Q`'Pj_RQXU-
%QLh-l;p6);b!4-[X.l:)=]La'HF<6nq*)Z,TTqh)fa6i7OGdg+YcXnRE@(SJVo)I]:4ajtEgF.[_t7pqTP2/JQYZ\*Vd11IZ<Kn?
%Yt?-$_r=6c-P&[ro"j90d%%oc`T<T^1$DV@&I?lJ%_^JY/ON0hEk%8\>*DCJ9NfHgZp*HhEM=eu\o.:,&m;N&HB[9IB#L>ZcEei(
%O/B+9C9*`30_`C1"VQ?]\L7lt"g'%(4$.+!3h,*m_@J#83Eh5XL&le_R1!"6$ug5ZBUrG*?Veb/"abV'"I1qfY%dR]]TS'eA0c@]
%$YE@0g3'L0qeCZ9.='GLid09JYZr(6/i2?m]7K3tl2aB0@DJ]Wj6Qef'+6'i:/I8_Rh;s&UJ(qF\W1&R+=PZ(#$-q?B5q>3E3I>d
%#a:TXV=P[Z$_72(eT$g8R*<.eGcSC,F0Nf5`j(g[R:qRT-G(So!`U\%rN!hj`aEe)%'%N8pn\&^^T9,6^cj:4?qs9e@dK?$(1pNE
%,P5Ch_#.5s\JqlO/'<t<3TtN''oZL"C:9odMc2FTG?\C)T9-S%F0h2gHR(%O0#"&G-ihmRWJFeg=K-6gm8\1`ospoMkJf]cR1!iM
%5S=>>8JQ>$1H7s,E,)YPV*k;\6MFO*`fs4R+]Vg`QH9GP.WTN\+j7-&i[f^U8\9,u8g;'RC!%D#35:Z`LsT__I0g1$H)@;gbc=jg
%+c3GC0aY@@6.FP>DNVaj+/`"2O2S18)=KIso0c+2(?YQANDM#R.ZuG$^1Z"n_S?;GM9$f#J8d4OM;I8$.l=C+V,]l*WK3=J3is.J
%hTX*_[-'=eUTTnOMA`?@.6P8/(m-9'qT]sC)[oEg(5G2oNsta+(/e=_j'a"^g"6i\0as!Z926m7a(AtlJ!iBC+CnQ=n2N)5E*sE3
%KJKA,?tO@YI>Ro8O:iQs/Yf2%f7W67E\de11o&J=-o#<iWSWjlD?i-u@qVe,CJA6@J;E\g_V*FqUk"1AP=Jm['k8..qN:?:<5[1:
%%B;Lh-N$tlVsZt$/a<'5LF_U-5pgYb9L.W`>1SY!/s%h#DY.-:i<gfJN,:r>A]ruT9#dEfD*K^];%2ogQ*rJ,#ITQdN5i<o!!@_W
%N$]r=%4`[!Mc"jVoKAC[R3&%E1O1i@2`(!X/]r04N<FG0:j#tY(d,$=l20a>l&*!fW?p1i-Ghk]?)JR11i,fc-]Z*IG(*8/Wjej>
%*8IK-3r'Zu`P)`1^hl,a*6,oM3<.@O#u1G/#u(\<;TW`W`Da%$Op7mF>V&lY7OjGuZM]$n.F',K!*+YL]Ge9LA/&\+[H983EBp*@
%iu!I/?u"]PGCr](2e**Hd"u7LDD!RniMZ`m/3@4FM5+NF1C("H6j9D>>iJ<2di#Kh'$'\NR6)Dt.WMq:Lq>J6E.o=m_B"Z;`?=FR
%GBfd?kKg*EkK=:rE4g(r/.iMM,NSoA^0BT9Hp#f^_&Ejo%)ag.[,E$#C$h*A*6)%E@3H*COH:Ap6Q-F^/]++sSDh75=GjP\$nmp\
%0c7fL\&@;m(f&s#e?g1/E+Cmgb<'0TO.!3\J/DKM[meHuN%CK$(G#NE/"AW+88')EiQSDurer=si#2oBN@>j;VEOU+.%D%:l&6t%
%E[*6P&;;A/LdWLmU2\G\EF:a7U2WpE19#@.KnE3ZdIJkd3;=H6V_WM6Th(S:]qGaf\!em1SBE("\&3.nP&Td78#<qs#Y2<7;@Y$@
%\4?Y/P$J@1),#_q]&<mLpH`9V5nDhIV+DUf32r9d4sL=$<Fb!O*#oZV5`I-M3;SC5m2KeZoMIr3^gI?Of9R#_XI-gi[?Z<k:M+Q`
%%2[`U)B9Gn*kPTlWPQ,(*!4WR)P#jHR=K2)i2`/$27PQ"60V[?#u'[BN:`SYb-BN5bmf]/$dtZmdmtXKr'Cn-Zu"C2[@($S7M!dk
%+a[hLK9Mr9?MKg-*6m9HAb(J;-inT$P96;g?J*k<b7@?!)G'J\#:HL:,KohM+'a#hZhcEIK6*^dl0T`%-`NCZ=nddrS7\Sg@3Gp>
%*c%iA*<b=TN1$KNi<L`;0WD5\5<+Ln\=^PZ#Y0ejrNdXQ#OnbSji.hV"qI9QK6(rh<\87R_#`rKlu>KY@J5CG2X`Lf3"sE`#rd<P
%Aog!U\q;(EJKN%pQ64ng:sS6X*ulln2OjX&V#*$dn:_o'M\W5%-9X?>.A_+Cd"<"S6'^-!#:BYq/:XE"-Y?G^9RWT>a-$FS]#bHM
%\M4IKint%HLe#Ul/O)4\)]agP&+7OB&(G.ZK;1kNj#?noSpPUFYjd8iE5YqC/O)5S7"i_f5<();4'bkJ#M7I-Qd5BB"0$?GT)@Mt
%e;ELL*h4KBg`1/fA!LQjFOGeOST?&>hU$n-YTT.@DpX,@RDat(>[)eEis41J_XGJT^>*PoKBlGB5-Odup%@P/)F+#f$%i[l5BYNG
%FQnq@S1N`e@Q^CjB,>'gRIoDG#^S8b)Eg'*4"8SsH>m3q;q.HF%n[2n(OC%.XK6^$dXqX&;]pJ7K*.%\#h5LPa#T+uMJhXo",lDI
%=QmSPm#necdY!`R<XH[qo\c+J7Q>;Xhuj%M7;ceqpo'#oBDg]W/;a:!IW2[@]USiW8-=eQIouK^aWT2o%$LPH,TS5pabCn-%Ni6F
%#!]W+[(>aZ0:-SO_<IaMf6?_:PAj-<68a42da'ppIM[HPN.;NX)F$3&(LsX]r8?@APbI6U&+7!75j\qD3/DF1D10Y>Nl?[:d$#Ok
%6crYf/O)4`F\C1L&C(r?64STd/60V\ecar6kT&$8#=5ljDMC=]_BBg0N4Bmf<b8GaaoW?pE<m01*X(Gn/0E00&VQ>TWMR0;KO^EN
%6/N6,K<A-uTEdbBks]CR$UM9-E#S,l8J'agVs-MYhOGI`)g62qmE!ZnjPYP_>H*f*SB6%!_Hdgmf:ntl_$jY&Z9/P)nC!S'Hd)pn
%!K1O;Jn'Roj<lC$)*-Om:@J>'')nY'JeKs2K:N_d7Is0]K]%Za0\ppAJU9.N^sH6SJ[=[a]5N)T9KVBk9S3kG'aVr`^ZGVgF/0=(
%pqU%KT_hY*+#mGG];H)[GiRY&ERKEUcJZ\KK+4>/N)>KcFPrQI(1gnVcQb,.fYHtNm=2Ha-dV@%+3qsCabEIfp-JXOMD"b)91r:J
%@*>[3=d((Oj,J^r>=)VO](Js[eqVQkcd3,U#PGR?#=,BD6;g0ar9^=3j%l^GYT^1+im*ni4%jtt#V'e(iG"G*RL1%##BrQl.WA94
%_XSLKi3:uZT5,oq<kBqOi8!U^<@!2'gp<G1p+n%7L4=;8D.<VPZsd0()\Y2hDB^m%ekG!YWH2:"^sQNn*GZj<m[X\cb!?2kL>XEk
%\0!d@D2?!t^9"ga<8aQH7C)-M!p>IC&)U37Z`",-^n:b,$1*pDS5eFJjq4Y0]?28c!bZO-J[<2u/-CM2S/@Hn>9\#A6'=W^&:r;l
%AfAUV#b7ub/0u3&i!_><.h*\A!lC5A>AGF%DJDo"ZU"^hl<,#3)^95JcesE\%lgZq)K:<6*-@4Bs53BtF+\<FNsm(Kd^;sL%N]Sp
%*jVYS_ZS1d6mJF;Qj!-`7>^a!!CmO(f=*m#C,3B7n:79&XDGZ@J9t=Z_4]KNJFfaF$B,4[+Lr,eYBdod*i$OeirQ'D;9ih7!JbBf
%qep@s^bKi=Du$%,pS=emU:Hru#8k</Th,@3<t4A1UB-/;5[Kp3%ldWc"@=FG\4?NWNRP]GNYZY@DJ6gKBo/gn7oGqbD.+e$33Fe4
%%lQ9&HmU:9#7WX%)qNpV)K8KL<I`!iNpkKQQGEVtr_4/CD-4TAQc*03"q*DSS1&N4"e70igkLLdgs:tF"q*EJ!N?iu"e8nK1r@:e
%"e8RRKS#0e*'HcsNQD7i\Q;fp,69/J,p-h@i93JID,lPs**pP5l7E0!$h8O7$O&Lrhik?q:k3nhHmi2+E4/XZ%gm9aE*K8,!R;IF
%Wc'?%kplqlZAB\:9;3!Ffi!@LeqqEA9b).9Qa7@I!D_KE-693K^p+F^!Lb"dWfMO58AKK\G'Vr-JCAP=@io6R[/)Wu6T7$@8^keo
%K+/&F\K?HlL#`5hqa]qcaT2mFYb\lg#<7EpMLMd[1RUs]b$D?(CM:;^Gej8#=ID;08o/9KZLEC>fj`1F"3s.rpOF/Ei'7I1h0_Qm
%NjiW)H4kehbB.cCLqr9R,YNbd.kGsE#D3:%2e0P>L'J\]ckA3aN!GmLO]B)I#@-<B/tMN_UKQ9["qS41K*r&Hf*4Vj[k-I!F]K2M
%(2tUZ0su8D!mW'RcrVdV7)l_s_dELX!aW')b_63?Ti<=+)(a^)<U&r1CDLjj16)6qL[A;&mr$R(1Rpj<GXDR.4&l$mPm<iPT*3mQ
%'=_(YddC9pJbs'/!J:]K8Ui#F)bf1o1mF>H_Z\8`&6X5^'0*3Qh=#89JYPY:rAI@-BP(T'?in@nD#<ub'0&iQ&dJpoE+U$:X;ajk
%HmnBA%21^s;YOfC9]-asEpQOJE(4)'#.%_>LPR@(c<p^o3,r`KaTTmO[1UiU<0ut*=r&<$Ub;mf\hTVg2*VL/gkH-*q0W=@#8Oa]
%60cP`X@4^0h6(<V"]!f2V79?QHUbta=fB-(i5OMc2cS]BE*:F=<s`L<;.4CA^mSD.%C3BX]4;K!TE5Y\85cori9ZA8d7r%();<hg
%P6sEs"+n!]i97Pf/f7RGYdmu=oo'4tBNt/703$lr4he-uJTL>F(Mp%c&]3k1fA35(8#!K8c&)iJXJ3":fA35(B+7pc3gZ,@1E6)`
%L'jFc?nB&6<8^;-f$,fO'fbO#o^6KEE)`M[Q%<q+Zb25Y<=L^&]L>]CpGEgJ?C/+Uhu\\,CN96+$QOc$6Sl6f[09[Zhu`)<g9TiB
%#P`5]%E8R3Xu*$9KaV-QUiE(07hRkl7$ps3BJE"o9a-PscojJq'f\#@Q-\3`^i9iiKae\TZJ#\cnHT^e+'QiS"HHlE:598j3'Kqd
%T0WU?i2u#*`WQdC>TJG+'f\3-8C&ug^^1"e]mD(@3!<>lU-SrX^N+:JHb-`+p2eo+JZHEIqn`N^(_;hA"rB7&=AcTi!p<`Ap=n!#
%4E>Vd_Zh&>)Hbn+@0:.a#`IYL"6\jbp_\D:GC9F7_&a]B#L8Q*qOSWiE6l0Yets9+\99:pd5*t*kegMX&NT!?&nG*8O*'=(/C^4,
%N=MIMjWrj<n:>()f9&fu5&dBO1b4A*3e.['3C,QNi*;8Q_/gBBl9kQ1&,bj^Ielh<2pMZR$716!><["pP46+3+#lZ\N2DdLS-1aO
%:#,5hUVH%s:-NWO=]kebpqZi!4PB:VUD[a^U]\Xo,'6'6^bP4J,ep/Xa-E*&5Noo9_W9kh*B5.WdXjaiNb?^ZSTNf4_Z5#$%37Dk
%6r_i83cKiD>6tZX3*^NeZ*^>0LEB<Dh8':jCk0X/K+/f65be@k@09"U)*B5b3;dM;*uf%SSf:<Y/A,Qs7s":WR+g3.M<tK/0s''D
%nTLLO\q:IIF)u\+dhs)ahF!]?2f.CPmTO''Og0J4Kqob/12t1j_1snY^_(Q7EQ&+,U_MG+W5'"hkTqlUi5eQ&*Pl+bn$Wn`Q3\I4
%@#8UV!Cqd#D4pt8#+3I[\7PbsqEc<JP(9n(^P.@D]\?a7>70k;HY6"VE*sl)gM[qE4mO"Y=;\j$U17X@i1@Q9P:Cn'!"LbGjs:H<
%E*,+KpY-=2=,LZnpqK\:70dMQIkta>CLG'Z%Hj0b\AnN-3dstl%e=Q-SUmATbP_lsWUaXnrEY4-Nl`/a+-rX<M8/#U]7osJHX&@L
%a&p*=A]5k&%I&(r8k(p7^X6%qY_4U(heXVcbolsSMc,cMdVlQ:@(.H\L@hc8I$/rre*JU-Dt&4kVVEqUO)i?6pl/H>&!k>RpC4Sd
%SWS>1iM*5*aM+-\3^1["O[%FO):^Y`/TY9d^@Bb_bY4mPJojTo\n:eN1K-`$l'i-tJ0r`(>%i_.RD(aS(&L>i%AtlUI`D!8^#F0u
%jr62$25Z)h)u7b$m^ab@`lah*6Lg%+"Yr7G_)F:/oe=9Br8-7GLWT!Z+rj;6619fc;M]V9mYtL,_)!mh]eOehI11"3BV!!s\i$lS
%!iKSD+4T/)gQK*k:$mpPI`/&U7LRoD-FGdRjB/XmiV#_sK*%7l)_F3T\\CIFW#&p.dY?NrAJ-VNL"dOR(&$gFfc+96a]iW#hMbd6
%i*l,$GM?/.6gW(eFL9I@7MNZ."=SI,HNX#?B&5:i'DtA_c"-MpmU'a3R(\@IUG-i6m#>D,_bSdHg7.jsGceF(hH7Pf&X1of$_@']
%EM<*G8kg[Z9C7]POZ#:h^"Lb(ftD"k7PhI>V"R7cK-lf:RuU,h/'FC9Rj^$)!=$"lX:%M_-au#c&;J]DgtjlN>)<Wr2kYF$,]IdN
%UI?\O2Vd-r6&3*lHP=.)4\Ta3EZ5d(=C7b$9HrN<)S7r1TkoDI$bJ>lZ^;PLDgmBJFWpLV$-#Sj%CnEJE33IdjPJ)mM^9q8hOZV5
%9#*@GhIJYQW@l-FMX!R)#IueL!+]>Nah>B6n9lJS<cBlJgtm?L5,7g`8eT!pPM2K4--BS&eD?!.E::P!ZSqt8/H-a8hWS3Vc;%ti
%%TKk7*>WO2_VheJ#IcX?;.U;AF*lqW$"-MGDbn"k0%AbIPDC,qWP&T>;l(G@2]>eQ4fQ+4pi-%ffpd7I>\s\O2sbnRiG=mpC%[[#
%e!Rh"09Baa0RJ.a]&hBYZT$)*\HE@RDe>Tgm+Y?`_g,5HnNlOO#F"B)V"RhM%]c[<W4`5lkjBLEg=nm;]MNqgpnZHEU%W(i%$7_c
%m7igA=i$*O)fJ4DInT/<Un9C$8aVKiTHCOLp-pQhL'FnA:NNt>La=o=dRJ&0]n&5D+Ynke$-rk2&S<3[-;)UKr'B\/(0q+LYr<eP
%h<\fBlqL`GeH:HV)_DpgAJ0>G0Gb#GXbj_oLZ5(9R(YAKOP7S<9h.F3C3Rqh:&^F%B,Is66G3OZQ'9pk+ZUl[Dn*Iu2b"/%jS#H+
%K`/7=p81IC?6.&Q9k>0!?b!es64e0)mEL;oma<l#]eT8l4A9d6ArD!XccEeVl7(k/jPHE1(oU$oN>AA[glQl(_YT\-W`OA<Q%Rig
%Y'9muJE)84iLg7[7Ua4%c+LtgA)+T-=f+]0L;E7Onm,o%lb`%kM2/>hgtm-\X'_g=iKic;<?#[k(gLS[):[L]U(2IBp83&h\EV8,
%g7,MRZg.k(2fnh`\iR@7msaN!n'qA*V/TEqelP1=*E52CKEU0#Qk37&I"cDsAE^-<NXS5sEe95mYcJRZLaU*R6ZF^012KP"+uLq_
%#%qCU*Hs4Velgpb[0RTqbCa5V@co$M=b9e<$/H2e917S\Jf-AD'@"`k!oY<'Rj7K+&PW@!+d7Xj[sa"Xil]>^a56-neHZG6F<gOU
%FeSG9MB<daOm@eZ8'nBD!2YgY!/s3D)ldai6&Xae\5%6V+J16oCOg;=<lW%q,eO6ll+fFSJ^Ghj/U#lMW9G'd?9-oi@_3ak4Z<%f
%EMKFAG]`BWd&t/e_+m8?=m66&n^pB-K7rk3kIr)JGHbgNF>$B7;^gt]]p<+X<G/cmlr_Vp6kAjB_WSm_2=Mf@/<mk">&p(EPjgtQ
%2Lp$1OF,JkPTk3:"+D4;C<(F;ld;GR,p9b.K;]CHA!'4Zi4bZp]R[Xl++Uq*+3@K>.S][`h(*p]W`"VZ<4%lD)-'Po`MFU"H79$u
%p&J;bXO0qVMZ[/2E2+X/Z=Gd+%G5'A*Rp)#N[B"HHpmWAabls^_Qk@neXJm:G_V)u0O%.2Si(B9WR[2/(<QNs-jN#!'L?Moh,Mc'
%F'e`,"/egb<YDX<Os/H3[TWt<)"%&+Mqdsm6?s%XEcl0<Al4)GqIg0c]F`#r8HAiq*>)L:Yc%c=fgoJ-9I]Ptg_4\7$a\88dc\Z^
%!,CIZ)+Ku7BN-7"=437J%YJ&UFRKGGjZ)?IQ>*6R+r#L]>kc'HFn[#;`2dRVAiE+@OsC]5,%-n=_+G*Y2,KbF2.=<7bG#'F_#$S'
%=nj3K(hP`W,3^#r(8*+,@2"cc`;R2rN5`r2[G@R_#1$mG[]7%b(IriSCZjoho2[:iR6E?V=YgEY<`UN1P9b4J]]odt@h(UEkTQ8]
%9fe<fO\EJVZPN+aBIcuQUS<Yg$5E_fi+Q@=qOu\1g1rKmSB,Q9fgT'>hU)rtcRDKMUmD8nJ!+IGRCSHl8<RY;eT#BM%B^8VC@r<T
%/S#Seg4E9*dWKYP3M7j5')c:))CL[]"agl_o*=MIXeb.b+e6r4'*,I6SMHRP#jDp7B5#F+Y$]0SWRo0D'm7"fiGlN-R(o%*aGfcX
%:=>2RE('F#K14QB3AWU<#7:TdPF%GE'HH12Mm5r2UD>,oA.6:fTd6O%-:5QOTH_J'$6rW'bol4?Erpa+-QpMP/PIC"$i.#8`V,FF
%N8_s6_X'+%'5K)`g`aqVN7+3:ME<p=;U9d86<EeCEi1k"$ECq<"Nra'g7F<tM'PPOEr9etLm[$am`@Q,c0b""jF5>$)mC&EL7&SS
%YsLu$->I'+o\_N[QB!AXSl*q7RAc\$/1H1h3i"](Q>'*:OA2+P59L19W&C64/\Vq09,Tb2rJIC+7P!,fJV%W\WY@(%Q8(:E/ttHc
%3QoSh-O^&"$$j]bHGqng(uj\L'CaINg3_St'A-JFLQ7jf!n>/(O<,"gGe.UiTSmBiiP_TUDj\/lJ.!qH$B`#[e-*.sjsE"r.kWrR
%"4Cs5Vl4IK1Ka;V)("p6pK6]M+K9pne9p5PCF1VHaA#%![4Qc$bM06`H'G4JRDU3j\`XP#[FtQFBW8dD9Ka\]/!6d"G\[Vo&Kn*C
%!"!)`8W\_4$1c[@H3e\5Ro4nd&2L!\L9)C;J_>YBRgK,i"Sq^%-q%]Ym')6pTts8R!rF`>M1[K<!jF,d(F#9bo0RM<+mVKWRE7a>
%S+Rg2-q#=9@3LWcCL^JRO`d@b!2.El1i@sh[=u+O9VGFV?J6aB"A\%Di@g.!l(sbh89u\:eIBdYRMP$&6Y$e.BcYAY2GYR6401"$
%%L=\d=Y_)84GE\g1fl6_O`X;//_#iU0F9<7?6e=5q`uRROlA9\YhM9YNG+I?g'(off*H]0VWJ?@j7+hK12[X@PS9ZlG\@\7*]nHF
%\#tr&X"$i^XZ9ou_qDJjC='YhZ.H-r-AQG9_2,4'$`7P,T6oD_2pT*N#u#HLB&-\%C8)O-1"+RVc#IHf-pcP'bVJq(P:;/OGI,63
%k).ln]e3-\`"065KKZ]q)N1=&&/mqLFX8p4b/c2&(NWM[-o-*a\2.i3W9b^.=#3DNJ;Gi;kt/-L+,ZSX-c#C`)G^M$L=GDN8_)3^
%Z@)#L*)MaAQHUp\bE2+o.I#t,F[apON4Ed`?al&t`fL;*G4"2m:!<[Zh>nI/=?AXgo/a'H@b>@QHiX*61,h-4)g]EWeX]4X%@E3t
%)XDeHW`b?qEJ$iE+3=slJ]QeAW$UfMY#"=JlgSfH<jIr&mM&lW[P/QA(,u_-jHo6dd*-3pN+PV7enbJ,P(4<[WhG,n!19,i%8'"J
%Es:SFim;)EI%YQkT(?nE\/368iSi5t@nI($;9#._edC>NfTG5I2Xi>D`c:,7mpC2R8aAd6`G80:`=QPH#hI'T<C/!P1D,`G1u5Z.
%2^O.`%:p&'V3kX=2-I>H].f=PN<4iXBONV0@N)lDk/fG4VuX(1%IFXEZ_/5+C:2HQ%Km96%W00:[qH,A).03E((=dF$f:^):Z&!e
%6bGV@DBD6T'H'],g/0-oIPD7]>_qtc-'MBU=6GIDV^TCI[P<aIrZ'OaQ)JdS;='ZH)./:>$8/BpPO8ObF>/*>Es4GdGSS`j'#28%
%@ZPUjGKdY8<m2S39s?6PZ#LU5X[f$'?51R[+Yqh.@l2gB**+#dSB(#aiFF,12::&,[VXq\VPTcIkS8$Q>[Ye=5fLaC$pk#j"jlZg
%hp?!1;M_#7G'2C$IMfCbLs]j%!>,X,>?T1:,Fbc5kCZdJ(a'a/qOs[XY'bWSY["Fng*YC)dk#9Pm8p(/?$<e$Ms`bKUIH#4)ua4<
%hQ0;/j2`!bV]#J$]uZ-N'>TPiF83ZX-/H*J>Wu&STknP(end1!*qk2"1e;V8r>4Y,8*!QJk\RK>WbUVF>R>@[7:p?W*kn.s+sQl_
%i6J7H"UB,A"VS?P'?l75cSWS*]MVbTcUDt5=A5<S6;SGg??\Na6'.1_dusDN38\#D"+uuAag2HcMhn`apaTh?M>7f2b8kbWX5J7g
%0*uTU>"@4J#V611SEboA5m#pO"AH,#b+<:qj@dN>)5\`(\7%T5*uBZTlJTOd_csfmnjfijY_3._.d_7O67[;Mb(jj;g&tFnm2WVX
%'**hsA\eZUa/'?[TJ369oe=5,<U!IcV?D_V,W4h*?-/2JWC*13n>Wie9]q$bFF`b/+ump6=*RZ-UXCRa$arS6Z=B_N_a*B2T-uu`
%"$/sf$+=C`&c0ZnP[0li[NOVl3q?>S@%g.;Q`mM)Cp1=WK$[T*&d#*kJj.=5HQ?T,>l]MqF6?W]HTJk!l]17DK9[RS%`]\e%39R.
%<NrZ(fmqTSUj+QUQ$AR&O3jF"5Gg$84AUD;*4G@p(i`b9bilakcO;'d(]Y.8hn^6%C;D%F%aK-m(\jZq.TN4_:_IsBrkZZZ$#Q\`
%]n!:;L:^!/I[\WKBBqpn*YHE.dk3'eoUD.AJulX#a)VRf56UWF6,FOM'"9gTjbiIN^I2[8bBYOV#Vu*sM9ND=<`4D.7f1,s1-Fh%
%,64EU$u4]4(PqB]ftaC^X=j2hLMeE]J/$:#(BZ6Jhe=,r=+"5_N`g?4Ei>oJcsWS;J[d)e!su6?`1!=QQ+C=YaYJggk'.]8KT,SS
%m>((fT>F#l<d7RAqUBDC6d=gARdfFq`K4<c=6=q_0j?q8X]Z;DP=`1oK&AbNi.u78f.eQ^rZ:j$8QHja<;Fu7M'U$Zq5'Ff*q^jF
%8`?D#I>t'8R"YhR?td]72&)ElS+LS%Dc*b(l,H3Uli_;'_3=4gnPF*(_<SF\q?l$f6sAOn,i*%9<kNZ:3`=)ZKiDXc'i+ip6XEM<
%JgPDW8h>8p<LYJ.8MHSi6$E[p."m^+nBC0#c`g`oBE?m-NGi?<dQ<ScUk/E=/G2!,I43'l!V[6'G-R-;I0\i$dSUEENF.B;WE[=b
%'U+-u\_3hj82fV,"UDanau:H?N\!_K$o#L"Hu]Kkd6S&q^ISEcN#kVlUc?hjDjn(:h\7UW'WfA;iM@)Xfn+UmO2F^?N%I8sF9#>S
%d+5"jFMFd8U^d]SQ\Z7<@X]hU-]M[0afm!IQd4usoq.=B2o9XRCj/R4GY\]Na4%>^`!&[_[JY.QHntH?$Z&Gn-)d#SF,tek(t7O4
%/kVp&TL]j\#sG^V[Bng;J4d=DZt4:^A6#<C#M07pr<E%*BsGKYQrR>jit\NqBg7kB@_b!Y.M:j.)pO;HCrMSB9*Zu2)!JmM0$KoK
%8d#K@!2M>7@hHhuOcqY[<b+@D,GBuF$^9qbkS?EVfW@UNE,hR^$EG`%VCgcb,^2+<(e]CC"hEmr:U-`GI:",^@1rKLP"U$::LNl1
%$+1qX4(bq[V^4R`P=s:17Q&M%+1;(S^'&`^FDi'(0+(u2e01$Ql%B=/Rjf?@X[oCUSsH]/0B&^CRW*th7Z."Y-V,D,#2(@t)1nUl
%)1m+W0gZ;uIUEK@oWjT.?cYVd^.B;c2HWNo@qM6$FsRg\>-4Uo9GieA8_G=$^k=F]=Yo:X^_3/.`[+j.)hI_FeXiH1eN&KXTFYag
%*XQJ:/G9(>_bNS;E3jdsU'pcEKBoJH1r@2a+KiO7]%<SFIU,)N9cJcQM<`A"Hd)i^&sLnrW:VCt\.af[>!uXD&isj.i=jZDiOZ&f
%0SM[lA(>_]Qu7VC/20SX:-,nmD1TT%PM-<*$AiY_RL#7M%2rYc4s2EM8?*!k*c$'L_up5&i5,8cO2cMiE/f\6TeYOj#r-5o?GKAm
%"Oq*n3]nu>'6HOf,kUr_()LpM:RKF`a<*rQ&B&%4!&kd]F5'_;,I-!-.Q2kl5XLtFW]I3p7ns%7@?QLo_YNH[k)VjUL`;YR1DP%l
%FF_`^Ohc*<)/kXA%PTQUpW1A/#*#+[P#8gY&%Km_n]j*h\-GSV4ZZFB(WG5XM%?rqa_G5eB7iDX,d>BglM@.<G)7O!e.RR2"@8d'
%/>&#2,-lc[g9qpT;8]cNWc;V.1[')P,t=mk-U2`NaCG*k:kCZ>q2D_QhZ'8:.umOn#feXZ#+&DZ@i-Qp2uq;,"Gm3J)aQ9&?k7tL
%`56(,Cb:'iR.3#4QcNqc&@8?IC9n/U:I"n#`/E]<`h&K+dRGCgAAf9uM?-<3OeL_VZ'@R5.LB+-\9[/58F8\3KBEI0MZ[Ig,[+WP
%XVf;XQsOa:Df"KE?Kcj$E,l+gJ<M=7e-)QIbX/(la6:4e0IPh<gJ5JJgmtPh,_=m+"X]MYFNKEblqFI-3nDbtVsuZ/QEm?JRq+#s
%)?<V:$g*jUU80MpfUSM<m?n<^%_EdL!B@4Ph,#/'Srr'hTTJp+6(7*NP;W]u$46T3V:Wj:[1qP]3MTnZ4F'jDdFHJ0JUJ[FAO)fg
%>_/Ia-*>O<ZQ]YjLJ[:Z6AE"Oa1[D!B&,-S#1lD?\78j5Fm4H4!2[o3_UA#]no[6s?2=m!KW>SS8]0N!^j('#cYAu=?Ds.N!")FL
%]^m]@6*aWp9F2OdNg1H@R+Jk=P3&(4bQT_]0BE5^.!Yh%39'E^8-$-c5Dl;X3cW31CQ*99PHU*NG)JuH!6?_J52fH-%i:T@D%q;%
%VS"^<_\aJQ34^#4l8/sH;*I9\9]S<%&o^'G7NSU63[)_JD@sF[i!r6^JChq51A%6lKcr(p;?nHB_"ptW2<Uog+Ia>rL5hm-8<WtB
%J22X:,Z_Z:h[0W-=Jl:-`n,>B/_Eg=?dJm1cU'r"nJVd.f],Xq5u(8Wl6e3]be\!$2/lq,MA<<T!TP<]_IFK1]LS&[+6(GjUTSsZ
%SgQ/t*k\\n*?ft>gIX<.(Pj4b3I\Z^0!O\6`/LSR1m;<!-CZn!S2V'($"B0i'XnTM!T7[(=dd;VO]aG!ZQ.:fUNnZ:*iN.X:WSu*
%*74>uTaS#E&pNrW?_X`)dPj^&ONN8'W.JWE,ri[`M&NZEAJ^,YOY*cL<9e<m&e&Ai)k9_Y\qtgN`0!lroAEu/Rg2jR)oB!RY[7\X
%daGT+!QTOsWXC+1)ScMY>6o8K7<JoW,W^j_8WEM"E!pY#SsR16QJ";rP'B*Q$P3A,mC*\:-\7?rW3(8DF<\R:m7::Yh_C4XUDfG-
%o-EFYL4fff8\+]EV?a4)0(5ao!Eq-GLo6jt9iOu03/I$W^PdRE"R-b1kR?-b?A$3E7?rs"!FgiR$lhfY<Fo0^D(/n$K2iP,8J=rC
%01C,G"RSd$9OU0i^^U0H3hHi_$/-!Q$!/Y)#GCXOi@*F_\IRI,<2lS[!_&T!Tu/0&C>&^$)4kZJ:-=q%493o-Eakoo,%Z9g70Y#W
%UsfR+j$?S!)PNtVT6=*_ij`Xm!N%!k=<BYCo^!f'RZX((nr;j2CSOFV?64o?dn0B=3AY2u&E;$W-X5Z&6:0a9FGiT158RZJ._M0Y
%J3sUg&[I7m*[mQd%)pSoh%$I)n^1%FP_aPC1!DJN7M9S-Z+SraMU\N35PgcS"u5'J6Qr4VKM+?[Xdn6Y0%j^6(a4uNSjNj9?9g3.
%9-=G_W^069%'M=sn5h,qki2*U'Aah7OPLm53VacY*L7Lli!#0mDl&H6&Z08r$Ekiq.Lad+o.ZdmL08o0+m@Xr1"IcD3$`T/+oYtd
%.WTKS-YK4gWE\jh[/fUb=<#b&#l9e4=J(]ZQ^#"^1$'7QJ4s+CZ=o(u?mQ=GrkS2!eRB6D>Y/2Zl>d:p3D"W+O\T!,2<#9WdU$hs
%#@:6/jDD_@-JSqE0PtR#8A_XTX:<rZT2ruLS19[1R1BN^fuVC^*)m'SIP)_o0\6AD'*NF@.\q-Ai3j[2^<tbe-tm`[_.QO#&@3_T
%`'H^l'LrC:<hf(Q8e*8KGmhh>)C3KCr0oBVi/KOP-Ia_FkT@c8-Q0m0#tBP,cGW`(C4+74BrE)*TH_JX^m--iOBT"2J5*gj_g"MI
%<=DRLAHl?QP3%4gK]pAOathOupaYdUcr^e\'1d!Ec,:GVSDN0R8Xb^^3XJ?aH)/n*[Z`tVPout6>hO@^M-kckJCcb7=gF4o*FDaa
%!],YGUlR91J,tc(;'LK*3,gEkR3(6VH+cb1)!G-(=l<(EK%NJB"Ue2dgQAO'1;s6+0`r,?lKnAP!sBmuKWTL>+H]Vjls1M<WGH?8
%,PBY:L=hJ2%MOg\,_`:\"D;O)''h4Xg(2PF"0I,D9M=(=GcNr?V-kTW"`dfa,M;i?V.X94&C:i3N7\MIca)1Z+H0fY:J.TNFIIOb
%21ab'E?IcN0-Hp)?*`HV,/>VqQ.5[rBAl8=4t>\X%Z4_1bP`*'*m<Q.Nq^k[ea+t*;8*jbQkUVREAX7&pGi^N<0QhRJT"!DR9*OA
%ks<`$hHH\=g2!U<O;d^_$@WRXX;&%)oQ0:1\BPo^cKJ#"@hKH-1CG`'U5YuA(d%tXY02%o8\aDR6QS8NT(Z[M@#.XU<b_qsXb(%\
%9R^M6d6'2$jT8`91M=V^P&X"Y!T3r3XF/&M>*'BuB<pk8B*QZ&^m1s,4(a3OmNAZ]bm[qIl2;.XrLuA:\2lc.+-T9PAY=<4"gK&6
%#8W";.Z37%Q-RUj"dTi9GYp-J^s>Yuo:DnOnT2"lE01I(?Qb[PEX8EomI8U+-kVdf2m4@([/q)]*'?kgO9FF#;%$j>Of]X9L\qQX
%a$9uDA?JJB\A3E@HFk6ej@Y:qn\^')W>1dod`X%a'#W88r9hg"U7RHHP]/9F?GW?IP0S<'?AM@%?5OF/?O"nB`-5`(;Q6C@7/4Fr
%=7*\&p?e#2`!Z.0.,sm:TN7@9AL-]_S^tftm(mpdW2/EEJr$4ajb&lR3YImcpN1E;OLSj.=l.6dZ>:GC7@[s(-4<5";qt7gFk6O)
%IT@t\8?#%ZTuIK@&1E9c$\4,O;,>)s6qk+S3C9*EK1P54;XlSJeqdd/$'ipE:;/ta&f)c"T/+=]O:YkkIYq#H^&_!r7M%QnS=:_-
%MU>!r;Fl+kDaT[5H'%/)3O1^Mm3Q7!,cmiLKdK3;$G=ef#^M7)$7o1>n!*BE"s&EB8\i,D*Fi5H70]b7<Fl.uD/no01;Jc:G`$Hr
%]`+V/T2>=*(8%_;!]g?@/O;!n75cOZ0Sq[&=[eG<f(Ka=4.OAf%C6n-2]EY]/i'Q9-&>[qD$P>JcV"!ZWo.&60W5'BO%e1;P_1\'
%jtoZl4]rCJcP+5`3WW$S#t?qDJ94i)OD*Jb3\OR>5>XNM(auHt>nKO=jToO78i\B;B#/M'=b=kC<@1d<#Y%5;?V`kh<jKeWWAA]f
%KL]&r>E3=H(P+4Q<4,c_\C*he'-[l!8sX:rKN)"E?ucY5(4eRL2Uk\WKr!DQQ;C#;5Lep1?At.ce0n29f&.0ZR__f-$j2%JOJdkf
%/ED9*$607qj:V)1fGZk<g<We2a9>m,$3[LZICsJD&"Ll1/Y<&/7YS7+<fmlnEigK9*_F[hKmTX$"MmNt>947u@V]2tCdQ"UIlN,f
%ha'6:<1tb8fJJmoF035b#lF[%9Ik)Lbf7+[HPqE=#Z_l+0+l&&&6$rq<\(QH;e5)!!2-<1+@3LMG[c5aPi.mo\9K]V>68Ne[/iQt
%Z1S\u791012=X&l5gp&foEDn7ME?`PEYRS'U5E0$\.N4?"pcsSn-lVq!JB-+F:!gr6Kq^jc0%0=SkH_$e?r*SY8\_hC+*%A+a=K%
%&4(A5at&F4,+++-]"C<!5g13t:,E"4U;.$A.SD!g$ZmJ^P[F"(7DQ<u"@8Wq(n=?sKd?=H?]$\LT(=RL@2QsQpjs&ATF!s%/#;Ff
%6:IK^MPQfEJ1Et/=pA@qG6NROcW\<aD07-Z[@<B/&HE'r6/GIC>l*YD;OV^[i1!57#gfsbk^cA.95M;+c.$032MRtW)5*?"JMC&\
%9=iftaB)idJha,`Ccq>1aW?\l>:OLjMbVD/@-O@%"rVC17PPlMa%Mh>KgZ+#_IZ8WL+oj6'dP-\obt^RC,k[D"9VH=TuDZ0$EcQU
%IR*"q8MUFikJ`$[MlM+`kZC+lP/(n6no]gF(Q^=]7Bn;/9rle,`[ahl:t.X.8kIsg#[kI0!&AXE,lh>X-63_Ybub!NQd:<9&Z#,R
%8qXa;TYU2Z6B)Qc]G6l6oYB%J5/Pc=?E5$=T`So>%1EoX;H.QP%q&U-E"MZ>5muKe`Fa^%^u\3_1`dQ4c;.(bd2"eZ#"dhYF]!<8
%YYGH4KsWgg#2GNc?_X?sRbMLQ,m1a^:#Sm="pr\^T?Dl*!G6oqpSUIF%\X86ZG49Y'EDro4COb\0ua9<:GH>mYf62;\n.P=,G$hH
%jf)1#K:Wg?m)5'h`+Ue55butP!8t4bCXc#R5K!tRcp"jhC!(6DfWk(Z&:h2>=cV.lbjWD4,l7kVG/8K7esZ.pBYlbAgYgDp"rG&V
%:2D.j'T/FRn\4?&I$94))GTB@b%9>K@PX61d0Q%n`"K,FNa?1S=;%]0J0^ha<KQeX"6h(!"?=3Hp-1ETY/2l1oY;(q#';#m%0'1Z
%=;$W\d+]FC0uUlD=bhkM>6n(44c9#&]fmlQAqAW0Js.>PVI=FlMW?8L]oRt_SWjL\!jf9OL(k>S)GgqG[&Q!cOrZeUeUjTSE&DW.
%(aUs1V^O98AH$<&n3K$^V>H7J&CAhISu9CtGu'&]i0`;m!<il:Gn_k%>WVsmmBJb+9iQHNTSlho:3nff-[3[bVO6jhW(u[b7LTU^
%ferSm'%3'iMlf>!:i,W9J2V@;:tgWUM=k'4%#G-h]RXW0OFAj%Lq!sGgfP1B\QnK?kV3[W'q3i?iJ3M4<ph1(N"XUh8$Qn4cD5Si
%^hrM,GHT-,)jh[4pbAH1?Bf"P_a$IC>c$@H+F4F"8N];J)Mur6BQ!,k",1mEPsKX;g@m>C9X_;5aQpYseJ^RKWFA3s<1%EWAI%4,
%?p"X.;]p?^]P!-)g<ubHlCA"Pm-#5p.p0j5k[*`ArK$1a($8p?&q]2W;rOm!;9j[R8KfXFj9Aq9i>o:aM"C$<#'GO:62?9s2n6h'
%(s',D$V(T+"J`u30WbmA\'eD%M2mDC#^^Xi7ehi(p9BMB%84hm$BhO1+biN]U`kL"75g#GRG_(CWFN%J5%Z'8N_^6jB:-1k2=VEa
%)%ah<hCMn960KC.bn<8go"7pn*98r7\._D%B#mSS\CMg@ifnI4#X#:2&q8BWCV;uC9*^t4=W(R-)FG)FY4aD4'sXD`$[cEaoFR`1
%,tHk7MoeqLUg^(Mj./RZUiQl?)eO'>HuNaB6*!:D$k3kT$uqXQp!<P@ljtMh)9(Eb8^Jc;'I0=[,d]-@AjKs(G:Sst&QK\96qa<t
%A7;d1bptYR[M<89C;+@l7q4uL8-#98jfX\9&;mP0KM&2o!Dl@`'@OM&,j=+1.?YaTemq99Cnnbc6Pi==`[9e:TiE-j*A!I*"bKu+
%UR>Y7e00c@+QQ92o8&c*'X02\TnSq0YSN@@K?Z`T#jU)+K9h1Vrja"0P519BJ1'nB)ELG-/V.mOc8bnhWq8TnBn\e"5j2>o(.BT>
%-&_h.-M]JroN;3SH/bS]&lN?9`C=N0M"3jm<E9s@nP2tgH>AH#*ACu:ptuJd&dcKm\Ljcf$nGEX!09Wtgpf$`orheLl^11&0kAL:
%9u%ZWQCec92c1.-@)/dYSU,5^DSD&hMT8h6OdC!!'h+,4=KEq67Cnhq!@O7j4/kGPjr6OFV12@KNL6%"SaRlq;n1_XZhju!JqWg>
%`aI'b&i[TTVO0A=r&dY1)J^'(8IVRt1*!'^JSA1CG/U)LgE3Cq9^.35c<05`GJ&s7F,*!!/Mk0K_5MFZJkSVCH6ajoE[irX!;L_'
%.Wfn86R$*IE#LR7rUAf&L4gDN-h>_gEWDW&$jtd_/de%cM"$QNP7,.F\sW]d=:&giX.D>`-mHVl*#/RZ-iDc6m$"]s^riE#kh[LT
%;VKq-_@7."l&M4/W^"J6MNX"G\=9:52Nm(A)?X-2f\qD]mKBkT9+m7BbHaIFkm;DES?SkogLSu0!c,i('e(e4W+$MW9;P7]BZ@dA
%592c8]r4i'S.dBri`ZM^M1r+/m&_sp&i9[H+t<Ie:d@d:'[e]5)hmZP7Ngpn"'V8^Y`P7'8_&l$_)&Dll@!u]F]ONEEjAe$V%ES-
%)[n#!Lpo21`Xu#U)%m[jJSX*LR!%!m,i+]m*9G0l-ljGSjWtgjc>jM>JmD.\B'0;`NMlj\9s,>_a=7k[#_:LE<iR*0cV6t??_Ou-
%p`t_6H"P:ZkBW*B!7Sdn0rXIN!"T_rM#'U+^'NC_Qs;%O3<(F9SIBPl]s#Bk:,::3Q^EAh_8_#h$;;JS'g@Bu)0>@9IN306CeY%q
%q@5pT?BCa6\>YRS3[E?b,5-V/-NV+!`5ednmbldLO%ZT;83e6sq%Ejh[(&\&c^ka[q_K_UXK5J+4Ag`i,E"%B3(aY(.O:R,`JSVn
%kXE%VY`o_i*Xrk4RGe.d1EDYL/5,'I"s_2g".o[Z:-([Ln3U4j`SuEf,I9!2KeA[[73pXKnS.etDGliVO`hjBb/i(F@+AAa5!r@*
%g=<&g<F[Nc_iV*CR?pE)/q>!NkeW)7!0s1.)ls_$0J_`%]**Qj`hhUodTp]H&r]I6dISd&K@F,DN@@*"b"X9)"/pqj,!=kh^lSm[
%lPdUHF@8^c>5_k5^dFVI8<fMIZXl%g1:P%2n;hU=F]bI/2+XX%91j\%,FG5-qImjI2Lr%g=q/Sm*qE=(*N73p&RrG/SjG^u[Le'(
%p'.<=1-EcA;!JRW;3FScdTGIuUX]g4d)JUo3C0&E0Pb7uQFd=#g</k&n[BY)a4*i/*u55f&gA^a9gV^>/$8P@!`B`5S$C0i8WAKX
%o1la>5Dnc\[7[5.P*.cK'8E;m8:t<;:AgJr"V5(@!@bd\i0P':gBO?c,ET[oPt;kTi4h^o)FGRe/qJZs>ET2R<#^^nVU1KIO;t%r
%(aJDW4<df2.^')6rs9VkO:f&ZGiW6Fp2l4/<^^V'@=sUc4"aR=O>6n$c'69tfr'KP;s[:M!_gXZ[mWeQpuJ02R1;CrJTHQp)J*0.
%VaYQ?i=cSF';%8^aQ09!9X'+GU>?/82a^Y?$ZPB@A"A'kms*^%@ZW'J6M=&3,cKf?$RBLe.Z1-8)G'cuVb?$@_KE&EZiG)rd(j)B
%b7D`/YU-8,E6g7t:-oh\dL+(rn><@6"E&:2]Q7eY^`Y#8V*b>i'U)`=K</V/P+[A+[T.o/)%,)K&$bFWb/CX)Li6=!Jr#t]kd)eg
%6Kj&j$,ALHE,lTBQ*5/o5f0_tC&1b%&uc6'4!8NR>:AA`mHFKZl+Rqq3C[s!"[gih*,?A0_JrE2aAu]f$I[^dMo#lCJRmp1cSJTD
%C@85I66V3hhZc\"H2GQViMC!Q",gI,[HqS/'se]r$83H"#ITQG</]6VGi)^S(6:d7!sq+Rnk3N8_WS]Z",0I0EE"GC.e6mC>TP0^
%$oF\dF!A@+i'J]YVWl*YE2.+j2>;q"p'lJ..WHXZLJC[%%#Y/Y0%lue(HEF_&r:$HNY.<+CqE7k/ckj;BTfG6mPNci-PJHj4Hg86
%!ceD5'ui-GY!bR;nSJ#[QZH/Vaub?><XO@3;>=Ndo4eieiB[lP)!b`%6Y3Qf_DF%7A@4`*,cQVS2,/Qr+di^i,)q`G*^]>D\nEpc
%rTA4?j3<Xta@&(CYI>hHY#;83n$fQbHIA_-\5Gg^-=1.Aj/u0Y@YWMr5r'5T<b+Jg1M2e07j+[!KDE9!3HZ;p\4HsCBsO#X7`c!4
%jXd.XbY*'["-U%"$*OI6BuH@_Qh$Y3.4W1N"A:!4*b#;MUacp]0N+)>`=<!H+/?Nb>=4Y_+`[\\BTk]<W\4?p*K><p$0]Z"%V'oV
%+iM>F5`H4O:lrB7X>22!j?,0]8f5iW@=//k=%0L*bV_`UE.r(mdtmfa3.b7jb>=PdIZ::3@BLj=,i$ScNn-a2>tOgL,omIm[-F5X
%9In\a2UXk-.&(-]]d1=b#EFaX^iHS3BtU/@U_X^sCJk9[=-skPAn#AN)bIPJkgL,(`+o"AOW8Q06sMYf6J'2:XDK+seDRR^U^@R-
%3!12-/%n21la[8-j<2ptBK?4(`7a'2bAjG*1W&EZS15(_XV^2u(Qr:,,i8qL,EqqBA4j]IWk.J$)^!Nd<Yub>P/I%WZVa%:J71]-
%N>6nV-=8qgj!2,Q;)b_E:a.GH;=92Z+\&n:.T,0m;27O]>gRd"a+P$L+eqBG`_oY<X0#nL,,C`iiM_l+m,p^@`k,\a!Mc%fkih"?
%b_O20))R14#rkR]\"N06$FGaGFs<u\17f-WSH7[4'Rc%Ll`e*+E`qk/9]Be4-qb=7UbIo"'OY^\G0$ij'lKcg^inYM6fU!a+gT!t
%%Z+P.jOC5VJEI9N:C:Z(&jqM,`f4An1.so#`@'c982*8a#q3`49dnnl]Vqp_ACLgo?(oUhZBi>*mt2`(A0#_d'Dn9EQ+:Weh$Tee
%!EUr()H.$BN@2[R/-Cq8fJ=`-qbBKFb#an)7YGt7H8*D\)l3bM%hM:i5s9)/;l)",_+5h%iYj/AJsF7^?Q!r*e)6I\JgF'Aj3QM^
%,j1*rH;lF.>k\QO$WgL]Og%TS9?!BN)d9=D$7JT,Q`h`*/L1eYGK?+KD%2^uF_&_F)H+D#n&4\FZ??>H?Z[S)9>'fBOf6.TY+lYk
%-(@Z^pIL*1_Lbh^MQ?Dmph#*1A/0,8R,3GRgNZlQYV^q\*/O"/X[bE6n\2i/MKCa#FHSda+aB/Xk:"0&r\Q$m.QAXZ1QRN2XBpNP
%d1uV3?E&XW!<j[:HQ$C1]tUicVW8d!MEiY.>I#]Pi`FMF?k`V^;2CMcZ^!")[G1=C%_i(Y12p!"IAc0l<+rASe_jQ%O@:i6am]Xh
%.74M=:h$XSSZ[(3kupY_+^gH3ZrIoc_rPed8FpBk@]<S5&H&g<Yuc6%3%+s;J7lnlQEOE>">8;bQ*.*>&FcMQP&ns%JInGQdVU3@
%YFeI[]%0Mc%c]SA&(5%lhE^_M^ES"*+jeBu#`kbP60<]B(Q\pd%_4TZQL?0B_C,26rmE7])54m@0O9c"Jsf'8`X.Yc8KnX:_8g!E
%pO]7o1'dli&?86(!a97G-VfP>/Z8/L`MP2SAloaBND<A',>]$V-49;`=e\ct.<M"t[Pjt8J@J'ZZseV+J;f#\LePKR$MOjS,dr_(
%XfGQa\@1-mP(3[mPsCL)Tb^Hk5SuVYkuk0$M@oWU!"qRr`j!gXd#53*ME=)k'@%'f(RT&0#t^e\YeKXo+u-q?Y@D2Jacu$)W*No$
%.2"I&%FXl9LPjDQ1:IE9!"-k(\X;m3NY:$mn8VE3SBM5fOVU4G!"s.3@VRTn\J:P7lo%t&YuZ(d(5U0XQ&X*kb%$S,.>3B;NkjeZ
%oX+g`VnHRSl]u,-oZ<k=J4'GEh/F!#*+YGA'H&W)j:ILK8K>a@d&ffBn_9JDV%-`RA\nTa8fn[@1iK*teH[884=N3d-[A/!ZK8KX
%OQa%bD%ZmZcd4^e/5.?k#]^]"7!N^epU7`>_I@Xc9MM<4>TA+S%.olcb.NN3KhT"hGcO7S[:3L(>lqLG6f,@1O(9JUoi.<dM__<\
%Dm5B`MXX%/<B*?;(sBE0=$a'CI7?W77,Kd73>mt/hT+"i7M6,A)PBP,0M[KC-H#9i)Dhd5+-TU7'BLG%4s@G"p\gd9\ReO"6ZM'd
%a+^ApYBT[=8+h=Ho;7@;%GWFP/_MCp9/$LulN@n9i.>]8>h0`o8VDE/mS[C*19M&oB9U\9>SJ,UE_$d/7^/6'^+d>&1Eao`5lq4s
%(h4!T+V0uFa"$#8U^J#nmOpl[VH#)QT)Nb_7SL6hZ$=:IG)9`]YZaB?,%IL8H>(=MlVCZu`%kSmjC9`O6F=_I(B1kYK5bSps7-p8
%IPjSgX^ZoR%^2#!9TRuR)^5s6iAb9F6fQ/pZkD&rM.k9BL/O)I9T*4*i.BlZMebSLdf]ckE'!)P$;J3!43=EG0P&;B8?K0AH(c9p
%JXjbI@ai(iP!^+>%UOatoTaCRg&f!I:U?U\Ug;^^3gJ5VF;L0VggT(oN89d.17YNCU_&?(dWe?^Xn>jV>7.e%M.c4W(UjjDoiB.m
%`:4=#N\b%PGDb(tFC>0,;,!<5F(onmp6%OHM76%hLG7YKZ`MC8KQi@9gQ]M9V$*Uu\;^h\'B4D50JkRI2eXn+JJ$T;N6idH6I,WM
%CHEiD^sQEE8pV[d12%I:$;J#kOF1S3^^c']N4F]hQ,noNbNtmH.^YZ@(;1?9e2f0<9rqR&\7I4%.f;sUjd.af%]cuPZl.!C6%m\k
%q5FHa.Q&R2e*1,=eUbfI-)LpQ'Ve^m$2k\0Q<\2%RQ]NJ.NJc?=7S,#P&JP&[Um37Xj69tFFZ3jorY2ip;D]rgot8h97j6XS1b-V
%-Sa&%jL8irXHAbTEQbRgC,K'VC.b4\HRibaNl]Vja%T$L-Witj+]K#_ZXR@OQ\$8&5T6c@_l^)h;acf9J@\,A(J+BcN8\BF8SeOT
%NQ.Wf)5>nEQC#cC(_k5fB7V&Q@Pm'I78bf7R:<'(S#2k-G!5F(Uoa2YDGDS/c<C5qYSU=JK5kHL\o:k9C(uknS.#s#]m[!q0r1HK
%'sq(J_7%rMC?4qQLg_XFZh=D<!AQcKA8?lc.p:U<F!,.%'CcCeajA2SL;siO3s\pH#S15YhDiBbE,iIP!^=FEGF#%C0L]d>&%kc:
%ck]M(Z3Eg>kes[D\ng;$=10+b5R?e!-UDM8Ee7si,.b`c!LdO!`Z!rjF0q2KW$ZB23>%IbT2Z%SOu:-N.W.r@YR%3sVq&)/n0iM4
%TTBt?F^4_nS$kXEacoX,Gi4![D$#-c6ttoNA0EVI#TQc1G%iU99Ha8;e5!E\Pl_8C!`Innaa4:;KSiQ;b/.I2;ceJ8@F_)s#$/J^
%M(?<S<MD/),tQ1_,/l>#6XA!+j$Q;G&2ZpOrtJe^^q:7$'*MjFd9g(r/F5t04OFp=Vkdb/&>ouk$cK$<<-WX$od*b?e0XR3dn*Fc
%4n[@ScY?mOUbT+n[&Q6gBZkTg#=D28gi]']b)0]GTc9\KTFk&2[49Q`IF"KQ>#l#7&E"0DFe%f)$l;/J1&GVAf-\9WUb(/-//H8Z
%,a-g-C%dU+b^c?OI+E/4pecte#L,@Vb>PB@:c-)K5cbGJLg+>+,O(>;#prUsAXa9&.Eth#nZh;17':RPD3/j=WQ]qP7]uu-(l6++
%MsjmfoZ0$X8$eIsCX4K<7O5o,iVbU_80;ck7`[m:85AV3(,bOMXT0NQEn@D=W5l9-!b9Q^e(DRVa<d<lRZ6))0u14uC-q:'A]]47
%$!c/?<<V1h0B!$c-'VXYA49'mB&[!UCefPVoWkSABRHi]#2V+<?Wu`b@!mmGg_N)?L-W_7m\9f^E$IYk&eK<P"B/i&G"7Q[QLs,\
%=F:hKJ1.N,*E;ZB,")Sd5W9Z')THN6,:SRMT*`F\#g*'bgsJ4.PX?Xpf*m"hiDGA!_8_$6;c6tt3XHo@nk^<nF_`14MOnCjhDj%N
%OJR[47uAr&Cs4lJ0PQ^$9u<L!&'coWc3e"ko<3,epmqm/!Eaq9-`\:I7)GLjcjE&i1Hug]e\$q+0<q6of'7ks+c;DJc'\Q<%,$/?
%**?7c'4j?T*3)_r&SRB*eXBH^'P\@'/K,rnFlh[Or'aM_P#QK/Kj5pt/U28gh\'%9k=g^h[j;[tDLPUj^p54eQRro9#X(0mA?`^p
%$i*o<c\#MTFU[-MFoq.;!aG<?43!p*Vb0;H22EA3#-3rM3%oNKJgc@]/<cqCJ0m"R;j<(Vq%Yqt#L#Og+lYn="/f\rE$S*U2edht
%iF\l3iMB5\Ucr>J1*D]V,k6qirIk1_RCPf;UiZg,CXYiF%@%'E+^I[*Am08RUm-k5an'mf/cpr^OIU2&-BFe"42$bu1^ooLki!Up
%>fKFX&HYE1J/lpWhI=*khA1_nm&NZ2-UT_FYUsG=,H&=oIM#i_R^QquT$PnhXc.c`*><]q[!d'G72Ee(rQU68C*Za".=u>7nu%[l
%`X&Ou/0NTQ]_ZZH+9@drZRo96Jf*'<O!hmX,=43R>1VT=KiX:)^6Op/hNRKG%.i($^81?VW2CN"6I<iiT,3IOEF80a=Pr7Y\pJ4:
%KS$cOKVuEsiupZYr@oM<@k_1[[Y<<Crk2]cN]a$`g,PeI6[YZ.m`7NX8_L[)6(U@L%9`+Rr-6;N,Bdn^a$W<jYc4P@K99o6Au0.\
%_l;BKTdRNhM.5HkjEQgD@,"<dV*MmtV8fj[A$I7j4B@3"\$IdK2*E6l1Z?1a?_ZkcnF5`\Gp?6;4A4/J9UP>7V\C=;*`#tW6sL"N
%R`S;^ik\"6V%Q%-n.;Hc0)_.@O7m\\H4i=W;80A"#9INR,FRYT!tU_O#ATPkJX>g[o\tfIn=l3b<<>;"r8NT3q!WGX"Ru/ArXN\"
%2kIm8(R^C)Hh'6t[?EUfaF,GTi1X'+Oc:<]C5)JD:'Y\ab]e/r.H;'dH:/-lEERPT#bC0,XESq8)/Q:bG6W4FS`V0R4+fL(\Maia
%SUie;B_i,*SO*4YpYCMsY&sgF>A<Q!*D(K=@_HQZUp!bG]@KS;A*(?j]a)Z7L5^=.ee6quQ10gt9Xrn,h]6T+W0\IPh;LtW'$&.<
%LFZ1&,?l>',I*Uogd?t(M@DMG_K?)%7JMEaeK)(UklsXOG9%"s&S<R^GK*U:o-)MP5o:6;pHit7&AbgBJE\[na;(ac`,pb=,>'0f
%diG=gklR.7DBKfPh20d]T';7W8"T.c?tW.`.G\L63s1R?:dO^aP5>6[ZZ+anOqHB<L^=,9Cj0\'V-TARc2]5ZGO$F,*Mc"f>j1Sa
%/4jK&:Nm&#A3c+;mdb?@WM5[Gc4K&#\I%(4`'Q1XkjAjE%pY&VhjkqB4fRV!I!5eo:PA0eh]5OZ=NaS;mXUm^FJ(AE*<;]oWS@j:
%*FPUp*4,.j)=hI'LMt7X#FHq`j&<NN$93UZG)%.p'mn/J#Cn-&VcLAj")o[.5=]g>L*aRH>:\O#+_^tI["[qni(AV)cnX@I+[;b/
%4l)YX&0-u'%['lgms;E(P[P4q^9HE*eVidI6af'Dk!>r5_KJFk2j2f.[QE&rJ88Z=G)%b%1/TRTSKZ013B*5k%O"ojgQ1RdJGCN*
%TlbL3TM$I%FE`Cu6bVlSm`po=*q7U3m`me$m?n::SRHuH1HjQbEE^:Yl0]\aiZ8rbh-#n+[@sM1A'EX&$/6K#Mk"]q01Jd1H2!Tk
%N_kPmnJ\[g&WqZE'?YJgCdeP$$JV+BXI7GkM3ncqV7Z'J.Wfn*dTFqOC=.njB^LNAY4"Y"\!*Bn"=O/(<&%c-SH=G)g$Ui>k[e>;
%1CSGga@Y(Q0JeP9HGju^4XR]$b'&R:(T@pH[Q@-0/=8aK[QA"DMefr/h#WF$!_S16cI*.:rKus^YY_34D9mA1/4QKq(UcC+PO,/_
%G6F*Dp,oJG!ed%f-k"e#@Dtut'=p9cSGMd`h&Rc<CV$,*cEJ";p?n%1%VT*6E)>cd#\$9mX:a8/+;k=F]?oAj":l9Z]De]Q\iTmX
%#[_#6])u6+7)TGg*H\EVooA8(TU:FIUX7g_mu^4S9Qu9@Mi;_Bm`lA21j(t;SKTh'BI@nGL@,NT1EmGO:(e=SNTfdQPt\6qGK8k`
%$7^FI32_R-3Tdrk3@@(cL%!<3>J.,]GA"R/eW#E>$ji>2kkXX+P:Z>UI!:<qer?*eh*M"'qlTGFiM`((52s11aPA5-=lHuFg#JG7
%=nqCn9Q6momJ6/]bXemL]*"(D\5S,mGIWbkUT/:hi?HW`C&js`;C==UA#;>]Y=^t**>h&#NY-O(@+3)*-T$$PD_C`7G;'<8krJ0@
%-p2W>ME@WXTqnM?gnEkqjA1Kf%`T\CTL\p'#aqnL][5E$#(-gJ7ZQ^"+D/K=V72)qODheYgR4pTWY)ob`/]&A6>pKJ64i^1TsoY>
%aNR0HG*ii\5RY1EljaY\(32Lj1s1d+ZeGM!&Lh%Ogb+i<HQfk&]>iaj)0tBH3o"jk_Mu+n?knlgYVOnJbS4+>?BR.aI7+j+4VSlu
%*/%9d"?,qcF7Mt)K+A:Rn;>_\lPLCkHj3hU<Pj\W*!5/m&ld*d?9s/.5@UaepHPJN>!OGAP(XS8RI,g:B,F6?AiiX\'!7n%nUi)W
%QEuO;m0MH'i3fm"49a1IgC_jM3b1p##CEf;@9&-N:e)js9nh40[VKhU8/`,q&cA%>-H^*/JKg0aH0n;'`/9i5NlBABkI!+"7=36o
%LJK7R<FrUKSmmKZ]<7?YARY"_foCc/1&.?n:(WkZ'2PhhEHPnRH?B-/SWU=tL"O\TA`>$dZ(5<J026]Y%"h@bH7EA0/SuguN-OaZ
%+RSaBCPN:N&98Rn4%$R](FQk=YjacZqeHY'+V'?M'4*c<A;/[bg<m3VM-"EY!32M9_G+_29Zck/[!%00$`WH+m7_1MM/l""#;LWK
%Q.?G.gf)tVg-Hpu$6r_9QkffMWO-i1BRu/kg)8llFmZ^$JM6-$:h]5)UM.YBB^K3BBp_>'m3",M@&C;S`3.'aO(mti(u8'j*Q=,%
%H7@K$WuZR6N9=8C46fEP@T?GjfG,qk)UmCX_GtfZVmS=r+>A\$8dnrq]Z,0me6LHNq-%@;K1+X:$EK^@/o7g,<]e$[N')gEN`H\\
%UC+&m+\&T%OP6D+P1!6!m0(+g+fccc*Q5fS>Y+7<IYME88aRp?oOcL7g6kPY?:aI&j(Imh-+0LL^btM4e./pk\;CZn*KIBWOE42h
%m0r7<dtH0[;K"ltBkJuR\9^V+6NC.#-B*,&#hIDtN-=uFdl+1<ZpR>&@?DKag/1Pg>SuiV+VB$/[%jGgBu4NgZb!P:;bfQ@6.;FH
%5=7n%L`(fIP]k'GQbQGP):/sOgLruhB,I:tTr598oonK_Q.(c>!#9OuBkNO"=Rqmu)8eP+1<qoV>rjQl)c>>JEZgc+L!n7k-[D&D
%d`rDu1R\WH*Nh?sZl+tZ@8hNGr/F;8+;TjQ6>HgS&=mjXPJmd,7(>*E[!!!rGZebJ+;*c-6>K(fAd2L0]QX'bienUZ4*6E]n7,cd
%?B;ar5O]2<AZ#+J.'FZF,&lCped_f/Gp`A9XW:CeJbTSSSI$U>4f#K<[#7Z1e(TZEYU?j=iP;,ILsuo-S^8*DC.EMs-52G2m;T!Y
%5H'b!d;qdWd6_S\R)p<7K[^J[qhA@3L"$Um.nkjG;EL'L9jV89_bVT3Y-?WrMamj-0rl>/>3YL?eda)4if#D+G![H^_h?[fZjMRk
%M=$+.J?)m#[Y)9PS)D<)G-FU`eR9W0K>11fapPBoq'HB22^5\?/I%ET$F(UXOnWsd&DPSE8-Z.^Ce$[HTQP?-H/i+CE/]V??uT6M
%jV;5d\8t1V<Jg*FRnq&o&[<?+q0De=`--)i`IL(S6>U:;4KB'tT%FP0-i0_KY8rMGa]D>rmDpN7^p?!E[Y%[EeqMf&&5Gsk4-:s]
%W1&sfK\;B?YkP;5[PNkr]@\po)1qIrEZ6afM%bi(FinMj$4!Ts&[NLOE614KR-j)QU`ZNhgC\lsBl7TQa+0Z,P5V[?gHe/JSB>Xq
%Ab1$D%@QT7b9J\@b%sRU#Ln<aRI,fo@'jNF9FqUQ5IW?$EUl\^4(>WC`CK8mcYUX2GHRDIZQ73/]PCEkCe"W%TQQZS"HJQLq=I/#
%G!mGsIUHTm,L.+I>77bXOc6+3+gW2'(s"",W9m]f6T4YTD27S96=W"9[U[!TB7"AT/9\jB*)YIQRtUB3W9m!9>Yf4WT8I/MD+>ur
%!?P6U4/.fCB@i7!%cWcgGfjiXluQV3/Bi8g&sBl]OP(,M+hFs5gBk8Yg\&d6GQrM49PfK+p.2p<6>X]/ni>g>6i+H3M@m$4X3kV[
%'OEl<D:9M4M!`8?`G$/DgC_Di(o)f<Nm?WV8R8A\Z'*(Q,g:GEBbgb4:,K/M<qG3pC-/tVZ@#-@m7:m-Uom%$8!3qN<KF*GLtY^.
%U]kgqTX1_Y<H:0pa6MH5g^YGTXKebcG!`U%#5!(;^VF\-Oa!t%,EN^[Td+kF@VrC%L#,Q/'jFi*m@Y8$.]-b0A0`=-Ea)t],D?_H
%s2&YD+sNc'Np,lOC*<n+8oI5ZS[Od"1s4Gq]4=<Ja1HGkIQOEBj6EgP5j@[eH[>^EqEX<4nq[-'s6jV#k.^lej`>9qJcNX]?X@#e
%SU5IB48&BRb)];Ib\nBsbG1-4I)USNjkl*$hn4D@g\U]gdpH/P[oM&XnPQXhm*S>JlFUCEIIu[L7qVGI/,[p'IGX8$?h(W*S,`-<
%=n^%]YJ+-;kC5@ikP9>ZIIlZt`sFr7";BagrXH:NldDD&jRr$!.`\`bNS;O)]>TWhA+FtC4d%I'*?9KE#P4/?31rN([7^Vs+F$6l
%(`3YdLc<]@ar=F>ICA61oV80h7?5+OgW;rD7f;b>T2^+7al&f`P'Sj"9')Q!_IV"&Dc-=b[uc*aY.pgSjX5Q023HM<GX]h\.;$jt
%0lLDJ\8UD`9#s2*Ols\cNo=nQir?*%0l.HQ(7oAWq0fB<7f42'=(rI96^6>qIVhVR<8Pfp$Q_`fS5g>0p&.3oHkL=e;.md[Z-\Ju
%=>PSS`8hl;>e_EfZ>D6bbL"N0F@iQO5[8%L7%HKHd.B,oHn`3K+602<E:%.7Xrd`QZ>TG"KUifQ-DXDDaP7^@`uidRhtAe,'L&[J
%N6:g'N*%=<>_\163T6.Nq0`,[$ca>fj_GqOHM'1"mCg.hokZ+%&rj\nG@DoB`u'h;h]%hDSTJ2Wn%.ufIX-3dEVb&O0f6\g9fN+G
%"2Zn(SIgf22@e8d("'RB5P<(5##Tk:jA5TDN@gsREMT?#p%P(sq/r"<I.Yg9W"QW_ooV,k,CC,JZmhc$ls!sge15aCJg;5)dg(fD
%52H5P[LXq(MnYH#R^DH-@;`2aQ#CCVi.u+&[Yj/1s6n?*eWq((QiHkub@S$bL=;EB1Dp#(]ru_!8Ea95P=H4t?Q>qL'tL=]b0s@t
%rcDhl+R&ji@OrV'%O_<nn6t'?[%V=iB#%U)7GbL:SADt$s1D?e]Sg?9)YqEls8B-N3BPP]4o4B+qIc2PT7$CPZS/MRTCU<<X8FRL
%o]bZ$IpSXPk'qcK5OeO9LGq/iYA%lej8Sn"qTR()Zh*A3VfEf^X&&`^ntuFWr7B2sY>4nS+#eZdga7c:r-Wnk7\BL!b9Ki\Hm6?%
%=8A:jF<Rj\)4gQam.noL)'.,fp:E+6:X=K;Gr)3SjhY5FB23+=3MR\rgg(`!Ie`B\PFJ>J2j_k^-QZQ1qqOJu??!OVrUT=;oo-VE
%T&*I#5PqqY5<FAfo([QQHhYgWcfc)bqU<)1hD_!MoB,n)2s7**-`=G7L&C5edAW&nUdOkLIU'Utq!-r&pug*d.sC^WY536cp$L#W
%c,hl/53U^9552Omo3$J\4hWYZq4n>+GO1+Ff;F,/55h*4H)](LUF4CVWcQg![s.9:o_"^F3Cd>"E2Kqop<D`:hgE&U5Q0>R8n7A8
%D]eeG9Zl&Mm8J&ulLarJk3@94V"B`9pF88:gnl#\B,R;p<Cad:H?4LTqUb&n="hlpk4E=fLN^C=SmG^8\pAdJ1N0n<VlucTFo)Dk
%o(hO.eYgSjDGP.7b>iFeQe-8CgS_*B?`nE&Y)i0Cjo!<&Ze#`L1,i]DQcn05?05bo<0k/OEgL"uEm%a+\]ZRK\_N[pp*&5Rr'S'?
%c0ENhgud`NYW]bIjdXQCl-H9jhnD4%IeCks\gdpnYCH:n]^4rakOm*kcVK$Se*Q68(P:W+]B[uYkARf"<!R4ss7Q03ldodiQUfeW
%\)2B#N90b\cB8!OLM-%F50VF>cZc>=kA?9nf3VN3?G&J8H-:(bi4]+)qf\(5gb^f^Pujk2DpFEIs8:2E=-ohOF!bMt-TeY6kP+H0
%e`H+dj#cq;s2hG?2^:-<opb7`a![eBSfFBKETiE)hc7G:E?d`;l,hKOeb-]VnoFV]H=R$S3j4V8gnN8I;`Cog^3[,&^\eQKIG_DG
%^.1*+%#t+u1PXn=GBb,do=D3i*gaoU<\NTBlZ[&QI!p-\H1PjD5NP]0mk_].KC>5.kCYU;*aD7oNfK.5Nss5r=I(1P=8M,u;3$(R
%!&JKr5IhYqJVSEVZt::p5Af`LW"3LTqln>%1[9VMlPnt^F#<;\4&i`1f4R#q02?HJ`*j2AAA#fOZM19VH]4<[k_al]p$p^9J'2jl
%*p+dD/tUoeam&T[o_QU,N9!9.47bDb_jle^q@uYhc[E?>B'#9D\^/Bb--Kq*Dg%`6'5$lKc]``?R%fS<='+QTf;GPH4!X%^d.<XK
%P8Q7Df>l4`hTVDHo&-Ytp\EM<nXN_<6/===<iXi35.o((Cg['[htlBHfpc'pY?kP+?i;t%#hm13aJ-]J?B%)Njn53;YkGIXMt6_8
%DPn!f+*L]@fY2:m)=a$1g#"lidWf+<r.)+]B2-:XDi=p'h*3-pFfFf\^?nL7rsTS@5cad3QudU7R"K$@B+F%]3H0M#D0\T<9e\MK
%J%%H8ZPM*jk?0nQCZ'scbNa&ReVqf/79f.+W%fO,q=Ne=jlPb&\#8De-hD^TlTa'&s1Xm5>e>@_epk!ce)p8.f<<J\:JNQ<05nQa
%IW^`B:9uGM=fqYMN;e)!SFV_^%+Ok+?7V.d=6g[C\[`SDhh/Gqr@l-eFuX-a%KH^jQ]?EMR`dA@[ab"T^Wi4*IGa=2.[LYYmph)R
%kAYVCN6XQ\oTU4R8CpoZF-;UZfWO@W``1f"brJb,G1VL]RjBub^O_S_No*R&gY$\mkfWKWi&^GYY.F.4AeNjVZh*d6q0D/8lcf1X
%jlu;o]`+,To91i1k+lW#*o0ho0!?m?bg/#BL#9Nhk@</DiPW:mf(&Pha1opP6hq#$3PM)1fZKDilI$)fB/jD_j^5;([nk`Qq-A.6
%qNUu5)?"p]r9WS4k?2)kO7)XPEI<%T0l$mil$[ur!ruq[gb,!CHZ;>5Gt=>OF#n@jmY_1m7%#nAqn=d+?ma#9S@g-_7JjM@W@/:E
%2=TZMjeBu`bb6">#G-i/_mDOf>a/BLCB&?P*eZ[qnrRlhk&b4W79OY.IZMt?60=o/%j2["Q4hkp[Jlh>;,/010$9^0*/[15kd`+J
%k$m5WqErLr3I+0+.!%Fj.(fIBUGRan;_r2An";O]3L>L1Si81;CRL$s"/e,KM0Q42Z-+eF;##a:rS.(=',0O*HhJ!kiqYIPj0p00
%ll<7r_3$D.&S5S%CNn0AERAPXL1&DEMdBW[g-Or15@8'F@]hjFF6s[*\nJK?X*rW(D)'T_Pd.Z1[7.-Ecrt9'&c-q]na1`DOr6XV
%>=5\$'`_LIdG;9/>.2h;+]u2#ZAh=h-8_bW,9'K@rQVEs`5/dlZGo'FC8%iWrcrhhp%e-]hs[6#ESo@<g#_hS(MB)h\LL+;:p3WT
%Da'eI\M8>P=&]'JYY`Q6^)R+ib4Y#<eQ0J;6N]]$r<dKl[s)Eb6Wq3$hF!WI1G9LhP`8rf,,+?mQ`nW2[TT#[s1;Fqs8Qg4F8k&m
%o09>5:Q<QcDBO-hI+^I-k[AK-r=0Y"h;mbE+rW\5,lW)Fq%2$MGB?"Ecsn\T?Qq^Ua6^Ee5.S7LFnIfQ_nUN(9i(^WIC;d;n?hiU
%+LSun5LE9];J:fKJVSF2%@PV!D>bII_<c@f[`-3TIIK<Ts(Ct4Nm@T;LFW&nqX!A+`TbX;'BB-ha4Vg>hOfdO4&c^TN-nFZM\"g/
%4N'M'*U!-(P(Aok^Erlk`..M;rjr9j_0oP29Dj!js"<j!GO!C=L9\[HQh^"^s*Y^L&J8F*Hof`>>[kEol2]OZJ&r>p?"1N@bkKE&
%p=uM;m7\r#dF11h6Hlr)S@s1;k4RufX35>5>gD"_CVSM%ms[D_5JR'Vp+Dr/rV5q15OeFNYbEq"3;p\=XG.Umr6=nmCbEt<Q/fpZ
%>kdX_8ZNfh!?Fe=HaJ%=((](>GfUp3?0pPo><HGSL[;a@h[F"5EKb8+g<SMb@aT]%j7V[$jepd(4T.)Y`+M;@IJWQgebSISVq7im
%5J=Wl^>'XY?MnHJ3/60*m`a_k4hGr[Z]0-IZjb-A]39o.7X%VRoA=0VcN__`fM1u5)6`DQTHeZLS+=*p1nL\P50RS&kBd-moH^(!
%f73e_X)()GEj)SEA7t&tN."O:p(%(soq1U=&D_MhI0e])=mL-K+76-KAKU9Gp1*!ElJd%k*&!61AT>@6NgI`TZ8c0>cXRc/(3.!c
%(P_pU`UU7[2pfP6EX0Y.m^1ukan+1)#L^)-GrfULdK9ZAGW;P,GIjM%%Yn>)VS`V-QihB5mpHfM5RnR6M>cYU!]I<YNm5nSg],am
%4]6RlaB$(OqY4lB$u7jCp\8.LpVUu:@bQm\EC"'fj2:DIf<)_N+Qjgp#BMdU#YYa:Ja![9\tC].kY&NkVB64AdC1ciT3qQ&OOQD"
%Wr*a5;bL-ihO"EN?d:if..[0BVG]UbX/.\O&)5B\;'5eJn(V@@[F`re(U$VQYT'`@T?gKYLUQB\@NRhQ42AJPm_c[Gm+]`H<3klP
%LA'PCBTGm__sJsrNm4grPJd0-7ONXFHTisP:7p9DBAB$&]KDaOb>fY><HmRWYW2pH%dh(Cc&],[/O(pR7U5j.#BZk(GX"[p!;m[T
%qQT`Lp@bA1BR>3u@k<(fI@HYDO0SI7%`FFuiS;dtNb;pb4nSX)aZZQ9m"Q>9qY9.6q#&=9ZT5SXo"/*f<1DcLoV'Ge(LQ9Qs#d@;
%Gkgd23d#`@mEO>/aYrVHkSB0@rcWHKX)Fc2GLa7daUH+]+-'^#roO"KJ)6]%T$4aU9qL6BhbId.Z47*$Gtqun]%VYT5XTVdiJ[$&
%M`K>q+5:'sB!@]Y>g5:PY'/ET"Y=AG*P?nK/RV.+](H'>P3,k4$Wb]qXpqY!G3Ae6$Z+2eEr>k&c1MTccLVB(9W-g#IPSsAYf$%>
%=kA</ERipJaD5d[cEPRnE;8[(bsP+tRamgY8b\\&R3gO%5=,[i+nGRi*/5!FZZL8X=a"JMp_aAhM^)R*[O7+1k2CXGZ+V2bf$8<&
%>OHODh_iSoDRn"D\%1TY\(p,s]C7!#k%7_X&,eE\!&LZf!%TVp\c'+cc'Yfu3k&AWQL!=HSQi7<bB<75a6"OMke]]ud*:k"_-H3d
%/[4>/[i\\_s1#Xdro<\AS7DMkhrc%!Bu,at_#h]^qiZl*"nW$d"*a7E&dpncJh(hk\.UmigquuqpB-M^)e\eg2WTO!q-SV25<eo-
%e!5`l?6,Z.h>I,QZTNrFDgjjAj/(>iG.$aMnjjkH5+:/s6eOqY_88:T?1d'fS*pQ/ZhI5?\Jo.c%X+f$?5)Pml,1qd&"YFM<mA*$
%a0Q2*dF5^2BJXt2jI/lJ0$.!TkO(/)`NFO]bKF$Z"QrC$rqL?AES/+l%sHL<)4;bRhd!oU4uo1G.*%B%(YIWpNS1\G#BMNB-ea",
%%WCB>m(MHZ4hGqp.u[N$gss?_)7WM@kP9$Ph;*]rGL[uhkoF1&]J&m@o.uu8cfW2%s7AK>KM(0j*eK/]c-9AZKfJbOs*Ss3Grj.>
%=oZSb)g:=QmpOhNs(!kO(=V[R2!s^!Wr0U%/GDo=/k45S(e'?WFRL=BXm1Ok2MrQG$icnH.,X:==jGC5g&8'P1ZREjBcAJBE&-q0
%*oDKsg@iah%q^$6Qno9-EYCojnGD$s3L]]?*@fq+la*(I(T4U4r=A1HSF=h\s3pM3,pAnQh0aWu[ad%;*0,AnYjD8G3(GDNLZ<ib
%V<)YYKF>p'*0Bb&PiZ^Dr3Po)4ie#ai4^*mmmhRAc@!:VY;jT<nZXFO+!;cT_Y&(cO@0Ts@J3akSccFS%NLkWX;_&`VE\)&mIS=^
%cIm'r_*_=`H[g-C*9ZHrTPPUdU%R%8ldp'sBKBNQ_/c,#hDSO6XX5*T_=pbL52LcXgb/?J_.."<SmgUF4\3TQLObQXrk(odl-<AF
%;a'J"GQ.\r9K]i?\p%:q#7r,jKDi@T.KQ4G9[MZ<,T?/\-P>-NDYAOYR5sWt#AHsE-Yc+.iM#Y5K/]_NR_o'l`Td&&cE;BTs4Fdu
%[]:9sN18iLc;4IgY5`M6oWDeq+*%<u]3T08^V%*>q;rgMaHNuG<m*6[S7VEG_d$ec;.bTjb)UY6*5X39E!6/`I=1ke`>g4Y4^@Rh
%cLl2?6A)uGHJHd74:"#P->BrTo]#`"1cnBVqs=6.\`(3eH<jE"hbT-kHhr=UOs'_^Z[XdUpOBo)?HJ9W$P7adjjiJE\J7H\4BD:*
%l&TJD_gct(d?h%/48d-;J%bX9l9'PhT(8ph<mONJh#-\>Zhj%98'U>2?QOXfVYjf-q?m7&Z@BUc'n?+qq+q$]A\Y<?Zhe/(TE!HC
%T''I1pW]Io*lk/N:L`VKWXC^KERr(Y"luPc:E&-!"*kZNpr(7k^3S^joj_E$:Kfl+_A7HC$;X@I[&['1D-*/HHp\LOKdNZEc8:"J
%E,b-f%YUTq(s)Rb*]2VqD8S=qIItq7%i@S-cd>CeUlYP)M)g("qXOFWq,t/n<]2&tO..LkPP\rnbnCmsgKA&l4n28,4.QiVn"W"U
%c9Cd#GPq?une_+RjRH5&4L%(/EKk+q"[:l.LpQt3R,RsfZ7TGE68/Fi0MQ?C$JuC>^ENC!F=mL=`?sOSd3]sZlFZ)uUpmH7f0pSH
%cpfsUb8BN^aZo#`ma4R-#5i0Qn5ooXJ#HS2Ra#?sDAr#Y"k/hd.G8V2YVBS"fn",7%0LnU_1Q>)?!AD+gqmDPc_""RW>gd0<j<%X
%&*1%Q@pPJ9F($ViHt+.<aS8^mLGiqcVJus\Oj8U51b"D+%X,P=JT*AGG5[$uc1YGt0FgmfN6a:4fmihpUQ>C,>N`W]O$8H%O8l`d
%mQWVQW4"lkh1ZAY:Maetg2*AAeLW4,IsGACXitJf-F%(VO0-7ao2cmkj&d/POXd;MT9k.pTo!VmR=SNoot@Kna,ZBUkFQe;`mM\+
%=*^uX]UX7VRRS&s*lN_4?$tY6Zi/>GQ4:I=2%B:LDUc-a)/\7M-iO#QmJ,Y^Q4$pjkK.7a`k2AT.)c%>92<Jb,\_B^%B9jrBu&s4
%Qo0h:3Wg]&3%lVF6H]/N[;BR-oNtr$+XOe>4ir>r!Qthrk2hqRDV$dIVpV>Sn58G,20nA6QWJd\l8&,sq*$r5cM5Z!c!>**(/)#;
%!Via&O&"R1]goEdlgd8`D90IL%ZAU$]iBdd*Q-JkBh,)mqJOr5Nr.?CO0DlpMQm#k]R,X[09c@^k+re$jS?]@8mOI@;M<=gGn,h#
%%cVTH'$A*'D:Zj*V].2eWp@12o$9unMQdAjMVM/KW:6UaDJO)/4e+Im5Sq'1^9J6-e)Y_P`R)e6QHL!(Tkmqo%Hb8bdRdWHV7Sq[
%YdUTf7sYe0LSa?Y2`o3(U1s,;:5'iEac-CJns1"C7so86,qe`cTib]Ja60qBod-3m^uZmbB2oV)LLRYeg43<\Gu_s9D":7[c;']r
%4<#ZR_Xjjrr9),2\&!%q2uF?p>FXf^Mn/k)ap&S^pq+65B_H3r"0THAc`8I&"@`ds&)ZPCaj'V7onVuT28<SGY"is1I<543p%me?
%X4,T&D\mo?@kaIghg0+kM,CnL&6[aDY]h22C5M-T5J&du%cnPrjXIBf4K;X'?!bM[QgruFk*'L%'Qm"MA+FHmFY2*9(1IQE*&MrW
%Fre&$$X;$OVg-fr/Ao-&)J=="B+<QPf)>U&0$eIr)mS\7U2!mq/rcWXb=4;=KG,:^]!gt:mR]1BPnPPfOfQm^qV:&f<u^>]/UK*i
%c^?n/H*Li)TkP%<3]6]iad08Y(g;s-_91!^)"O66j,g\%BT?PXG52-X=QQBL'k4TqYiRF6#pUO5)u6Sio[BlpCs&cQMto_fkIL0@
%nYJ`s?^cbq31fjcpB9O-%[:2k7=LuCok9IV?^:m)Ml'_bg>;P4,(DM57pc]i=jFLtI63\fm;/%H_tU<`kHeCZP5Lp^GHn$=_Odit
%AsG#Wq5P-1H/CGncV<8T-'Fnl)]i_c,;:WhRQB0Z<$'rBi6jQPi6==Uj2]j>bkn&k"38@-d:XgSD_Ac7]'5DrWa<Bho!l_a%9H`I
%dq4Si\*&d?]Pm:pI$!E11b6+a8>YlSa6W%(8,'r\]pN%eOrLNm.Z\#Frn?,f^>%Gg<k0*h2ghN.K^NhVhrfY1\rfJ6da<bmE)g^E
%j3c';E*NY8Cm,C`\_PaJZhibHlKXn:6hpNET;UjZT3f8l4h2/[f`*tGI"&eI5.jfuJ%e;RoV^/F[CQ3HfgsEgB-Psf-f:F8T1ehf
%rgD$@YE*U>:9Q=_DpQ`4R5p?#?a%eIs1d9Hm;8Kd1r.)6DuNf8O+6pgX?Z=$l&TJ\Dlu*!K.!-S+)5lpn@u[tH`hhV3YYTapDup!
%,AqNRIduRnfu`5R>eGrP=)ma[IRmea+LeY5=0^H><G]*g'q5<r.^iQoMLN2sm`VYEIp]Bg;X^3b^VQrfk'7^?^oM_SpMTIMDL&F1
%'n,U%2X*AM'uOt`.]/237GV>bYG0bRYG/Xe=4,=e.Ycj$X&sdlmCIYJ[FN#.#&ZkPn(DUM:[(l$]iWU"ng_q6mEs_@@KnBKh;VGI
%8$AZ?jAe$p=)ma[hPXG;)e=6pl*3#7qDfO.og7#P]oq]9?G\*<bK/EtHG27Rg*e%+&%bc1C0<>-kFm1L7NTEdjM^8^'5j:%jQfY!
%#t8_:o%:p[(0?AbA?C]ol1;cPXZi-C,K8`eUHs57m3[Z:2K2O9UuZCBaXPcUIE(J95%@:WVX2SjQRN-05oB?02<>/<\mL%HXaX=&
%=td`NPhk#7:!js5Ln,sR][^M*q)T@7dAX9:@ltH2QZ]dE5WP)G%SQ8+$Td;[)F(>&;'%>WS1R"\Fukke+8R+8b>b(Z;=!gaWn\*F
%q('"I;]bdC]Ei#C<e(ZsK@:(s7A?a3(,oKHelq<H;o^;e*8a.!-EK&L7q8%BD;=n,a!gDg:6,9hgiuo__o47lBB?UY/1[&Bq:Op,
%eguI/pgdC:7tgIfcN/cbY2Z>B3pV4Xc1S0mK?Cg'GTS8:m2rg*ekK2mH.;%"DfB%DGAZi1_p=b.Of_Fbh(3GZ<u5XY4g:N8P<<&9
%H.'/agdLL%;r$L+>!AD(El+FqG/J6>4c`md%[WK>M&bj,2dtW:cMt,;\thjBkOW]"I.Ve-U`f60]je0fg6dhdh*WdEhm^)96T33#
%=LFJ7aJ82$XJo*.k!BjS%#$B#I2NWo4PE5JjREM85+Jg$^:<)>DE(%)3a:DbhP`IhH'@sQKbr:uE!$aGeRnIhP0A<p3^UT^K-O%e
%mBEE^MJ=d//)/__\mT=9&Im/>Cl`++R+7OeII+89?hQ58]Ui_\hH[GlSb%LgGZA+!p`Qb-gU1h^#kqX=ijtS!Z?918#4g]k6^KZ1
%b*RMgk4?p"Z.<BtbEKG&WV4DCY@e(S.@!E;V0/ofo-BB@:gl[Q8Lu/9n<<iDkG"mnQYja-BLVBQQO.Z2.2oQ$3_?;bX8XkSIsH9E
%Xa3+(kE-.cDaRE2f5sK*ON!LCUon[)OY#pZ?Tm8Qg]#$k/<Pd(E\HC.%lQOiF1OaeQKZ7"SQMU"+&m?Vh%6,RP@GT'd,(oo-Yg60
%+[d\gDV(WsmeoO$b\B)aM(P=u[m_[u&g`A*U(^s6FCOrjO(Q..U(bmp&tSO\.6><"nSa:[W:s^=SS0rO-WW;>:>!/]-d:r8`+U.Z
%4ZF$HPb<FtP^ooCM%ZUJ35Lm"0S+RDF99`AND9n6'6erndHoI?3mmZKM/J/FgdcI\fbBujQKZ7"S[djQBA=V'27>D3.[nnK`NN;.
%"?X7>%$HXk*]=*:F4_c,,(#F5GpZ2^U$]N^fk>@KXi^/gk;uAHepdFdBbL&'c2mdHGaM2uhbj$U%;@b![Vc^@F:n4Nf&:C>XSftP
%kH.-Sb%%`ffSQAN+G;+$<i8nMcR2fW3d#q!WGDic1TC&9GBl(Ue^^7VK3+<<s/hX?7FhRNcoimbBuF&+>J$$Da9HJ;H**THcF^&p
%oPF\UhQ^?fgf843HREp"2tc)N%GOgAl=be-$HlMU@XsE3&ZO(hc:>/Pa&i7=^0%R5FD9p(m.IFgCtlcBW`e[fCE&f9=gb',Ie3U%
%2-7HN2278GEg&/O`CZ^%(B([so;#paltT;m]U"Uj[#>*bJ\i8kkC;1M'"cm9g?A2e+"g^dB^i3B]d_S2]WNMjL=fBg-eTUr/f&@s
%.LQb1\rJslhOIj(PO$KN5)%!f_o\2n1qAUMD%?/MiVLKsN0nV]'pC)b=*.mBZbD'-]/.>B]X?RjgY:9SMei06P@ZN#](]5/&DbDR
%d:_:)Ob0r?0i-n:PTVPWF:H1tW`a;<`O$u<CSlY31Mo>d6T5suo3"p6$.1="8_tFm.QTS^Neq):XGB4'm96/*6@$/<)RZNsCp8)W
%pBErP]k_k9+SS]USXRno-ehtXa.edhE>;l64Y>PlFE5s2H->ibfqO]%l.r<7m9hWUEWinR;CB?/\+T<>ij9VV5jZ0oA2Xsip\JaU
%@I&&VmfDo\Qb'P)Z%Tn!>Sk_$#Y0#Xrf_D8D2q7N]fYC`ohp^X2nFc`?Q6"OMH)=_iHKE]eOqUr>^uG`]k"HUnl7?F2.$_fW\Lm!
%;O1Dl@OYY+K/<LT"]NX2@#C?k9X/2N0ZDZR_%b/P(^Eu3$e&L@4?NqI(qUrY;HoM'9UU8q&\d.1MB<%$r-C&nm=)fXMD^lU.<WF]
%YmJOuR5euafc3[_Qh;VkZ9I3K%etcdMV/P7Ok@PsQr:Y,)GCG`6#.<2=^-,fD..cF`L>&f'O*K90K.n1ZH4JS@jr$1R`87&_\<<m
%Zkc:h)e(6/b*p7HqPgc9h`D:DCtP>3#1ho1*_L.`k#)^o*8eY3O'ouEd#M)A\C<m`I$7rqfb@+7>Cn;9;_Z1/#c=EB_%cF09qs09
%OLN-PZ+8FqZ9c#]ig(%b3L\CHBM,E"ctiL39\a\OV:Df)gB,D>@?$OA24X!-.7&S)i[it"9JIiZ&n2qU\aqnDk.Xaq.54R-8%<p7
%AKK[i3(dE$\7$@'eMp0.jj@tGo#PI0mGfV&b/7!hJ]Ka\F8Z;]Xu#D#>ao*-0o@/B4=Tf6c$C'-?KfW[*pogQ8mH3O`:m?l;#sqY
%?>@l)W:8FP#a#IT5),6WMApWkCY((![_-c]iA(#i*_6^9[@:YS@R3au.!kHD@jk?6NajK;0?5d]9amW3:tf=dV6BB-22'BoGl1;u
%:?!YWVYEa:&3i`p9)p8SMP*XrAK'tsKT_ip1Z/Pq)U1f!RUP"pK[OTl"&lE]KG$l_7?<UUI-]28[n7(JY;D!>Tk*Y10pK-^H$"Js
%q']u5aJBnG07*F>?THph+1-)^Ap`Qc@obb`93Aqs2(RFug^5Rlkia"><BRKf@TT)%Godm6#M,J^*/q,]BYD*mUKcH)B?d5D#/t)L
%kAD:!fPM\h?9TFQZt8IQgOE!dgbtXW(b9ei,lMe0\\D^3f@rBuV7hjU]_,V$RpFWbj7ORfiU5p,nn/V])S<0,gZ3h.jh1;EM\8tC
%q!-@FIRVu]8aGbFQfHe50!<7(\fUGIauVS5Fp$e#_f.rV]XkXW1:ig2mNnWTj#8M,h;`)h9Lec.@_JF:0.>BZMY1g8h$],5Jms.)
%);P[Xood`$r\M.KVfOY<\8u+\\R8(?$bO@InqJka,d6@c22Sb.b.8n;Jh>Dn;BfZ:hS>C.\TT*C>5W'*7aqW4M/C:M[(+\ol;\.n
%j\_Aj5N`a?+nkVD53X"eTYr['\'&9!=c#A*A+.%'I$B@)K5BAK&F^.[od4"u9;pCM^*G]3nc046^Daegpjkol<eO7a*i-,V20D)+
%:#!38DBsrGY8[c?gJeE3Bj[H+jW5NJ`MU`!cAM_V`gQlk=YNWoR=7=jY4(pACU$Kn`RrZ_.cnCe"8-53&G`E*&?$Y5VNYE7GOf.M
%Zj2LZ,PI4C2Qk2[U;DogIBP90fT(]pY0&`@;Q&<WP;]_hmt)uq@1!W9l`IVNR<FYu)DqmY\"F'%Yd+AU`,Q/.FS]MQeA@[3+,l7r
%9=74-JIGADCmiBnO%UJNAOrqtHF-5AY&;c:$9!pe7Hrn;`&(G0CgM"666$'@k%ODXCaPMp:6!sYE`3o;@f('l_NWCqhmMKWZSgH%
%B9$.9#Y1L@OS@X:>9.g%I2#FGUGQp"lW1Q`aN%Lr+EpVe0e!3YOFFR;5,ih/H:HX.UF5er;._YIYQVj!RUIEn#-BUo70=$1\BVLs
%9M7#t!6UYW%)/T.F*_W&far&s.N_0Qen_'@M(`TCI"*+&L-RF!ockE2ZXtH&/L)8p[?Hr!=3^`U+a_0fqJ=qs;Ie9A)gg+WDVY!!
%btPiOO%3n,*"D-t?ABUa4dtmtV21WB[l2k:(Q[ajn(qHg`(`lTY-#U>>=N['4N]ps="pZj>%g8gMYG#qnoS(K6#$tKLo(BPd"cMf
%EsA:2es:j9XmI.bdN2*a)qU!WH:-l)7A-$Nhl6Hrg!]*-_49i@.`l:!f.X4A,$DTSW8Z(_U8u@_F^^ZU4)GQn/]q9s<O*9D+4Y,k
%gW1.+kW2FfY@\=s1c<2UArnZ0Wq#o9TkGa*WLOc:ePUIE^cC(pNk"/i6K![1C'NA-Q(g(;RR+VLb5**kcMLq/e8HkSVo8ilk)Q)#
%Sc"p5DC!6pf+!H1D7XrNZnKb&npK)7?T+R'ic+fb>;X`<_$nO14gU,A&,^!=f23Th>jZ1$?Kjc43A!V_T((6]_.?4GehGC*1.\f.
%3g?G=[8[rK=^Z71a6hL=(rqbZgJ6JD(1hns,@H?.h==;[aS&Ea>?8$%C?jk-8crhn8.-^I-cAKH*83W&m@*]*MWJaZEH*10)rhjf
%c$/fE$F!SNX7*.5?P0-A;WWu(Qd(GcPY)//9n[dh\1gHL<I&E!r#7M_c0'K,VUalLMX[G<n&/DsT7s2Yn7Fmu[24if@3G$R\$e?]
%f_R"dPQ;]`?0KS$QLTuZ`^&t`d1eZ*l[;-JOLT!`a3eeE^noGrg2^Lq?)Q4YK19)s<F!N.l"+jFp%3:Z><N!0D[NOG>K*SqGr5a1
%T@PNcnK"n.chAT8_8s%;>3Xbk`o69dSh20-2mib68$J19%eS]CZN8N8qRV!<aa^YWY33K0\nK-:1_>[:F<Ic^O6nM'mbhnS"aD_=
%;;C32mX$lp06,I`MJLE)l'B.*7A70N)glV49BX@1mRQN)*=MU+CS1[Pm_3f-[]BK4!Y.G1i:ed.H?`Qp^U\N%aVq[!f"h/3?.tH!
%E*MSTBQIub)q\-$F<G9"pAtKLDZ6c6%<OIE+Pesfgm7^6?9iI&g;&k0YbV^ZB`ktB)q\?8[+\O:!!2Ok:h8]&'P0_ik7(hm)8^=L
%OuM<6hEW!D1#;Z-7s!Q;M$"a:hd4=pef(DLY&2.bW8K5V0:gNc=*1A^du)ApAkcUcR8ZZ:>.<c)C#Z]n/VPhis4]GhX>OC+@.d0+
%9CO,*hQ>Q+E)p]0fMP)^XUQAsBpc:cEJ!ZP>O,pVOD/3tM)$ldNqDO\agG6;QZerPquZHs;nNmCQk.*Po^1o5ouYCR11dFY3<1/M
%;OOgiVAtb[BrOd/.T;YUPf:VK\<n$Je)Fh?.T7BdA]cSa3Gk>*!)DAX=PWF[-W@-;7g)L8>8j56+UitDfB(D!1hEs('a@H,StiV!
%SY%t3qXhg]P]4de?7`r/.I#&09L^1*JX.M4B7Qbc-1)/gkWr<bo*)%ocEI!g.EuJ"B/G=22%!bj1R4\H1ZemLor;.&DVud5[fug%
%ZQa94(DOfLZ'47P/<!HZ,!4lnbsEMS1+YBr%VWaq@sg@!]*k1udFk).j`9/XB>Er(GBEiAjEuMJ[q.C9V<kiHLd@#Fc*fai^]\Dc
%HJiDDHo.a4oK#_KDhEY@+,`mR?)J"C&Kp!J-+U%>>9k\l3mEXVTNt)4FN0QNQI*19:t,HMiFf"Kro&7r1Z!jq,`-Yol\qa=MJ>YO
%'F1Z#)<]i0U_pIme2T<3Co=afCfi$M#2I.%iHo60B<<Ul;41jTE*@)uhtg<!@>;Xf(EZ#Oj+gLliakKO`$(DXS9%8mO@4$=CIA/F
%YsOj+gD#6s]ZrA$2+Zm"L:K8]jkAieSX^=ci;crEc5"d)Ml(Ee/P4YJVOub5O?P_jAJ(MuCtl$\iqQprV4$mn$aL=$I@X69d<'N$
%J=Opa@+>EbdPB#?L>5ba_Q$u60ZBo]W^N-Rc?3qL9/+Q]ZVV:moaA(Fkp.u@.k'?IT9N=-J5QI*:QlHVr"a'9CZq5<]#fP(@BHnn
%!^o8#(p8KfZ@K'O=_?J.SE:C'`cV/g$(;ondO;rFca-Qa(UdURD#MjU`>)gZ9.+b,.2cDBV/QhrW<i;K1iB^@0tbc,^5I0X=6g!6
%9*an]4HmahYBpj^#P'?[D$3r`[QJ>5)EZPlI*ZO%BL]n8WG0!;6AaqEr#5_J9g(gf#H5\MWQ0)lT7[Em0qF$O(+bc1ngO\]dp;F5
%cuU,K3S;'CZCKB@Ge-=GcKTlJYpq<fFB4j0TE:<,5gO.sF1UZF,K`<3bI%&:3k.qt;5',;eKG72O:>S2QLbeAfUZ]m2VECQ-e.3+
%nW?O?fsuE*KCpVuau?bRoVM0i//1mhN3YLQhXo)ZUucd]1l:.l<o"Qb8HDF`3mf[]XliYI?&^>PY&8S$SeSY;3N)_/o9!Rr=+ZfS
%Ksb6e)7'p3HgaN4-L%8K]<fo&!4GCmK\a(8`T?A.A^GbRI't"mH)r4T&4H?Z+Viph((T`G$Un/N7X@T7+)^?eKoC,qPXc=@*`?-V
%1nbsgZ"/f+V-5"2]6Zr/,-%TUaZN8B-r\Yo-WK38c<<kf!c0ht9.]^ob"&5<9Eq%eTak!bN^A]bLJ]e%B9^St10/0UcR:&`LY0q[
%Sl$UdQQ;/`POcEF.^,n^S5Ir\"*U=qOAB``J7>7A@aXCP+bMiqU=qlt(jLU#!t=CWC?r<"X(d_1CSGt5N'aY+F-FSC_HIQaV9EiP
%E%:Tn>hc>&d&'pj.$TcO[d2O;Sn#O`neJ\:>C<Rh;q]Zcb+E]Bji,X#]%EHt7!Vc*P^NIN6p\q1rQEnu3#OcY]>;0pX#"8EmW_rX
%o&f5fIcS6se/\p>a$SUe:j4J?*NOn*A"i<mW&kd[NeP&S?UKtaFiQi)nGuO3]J\lc2llm27kpF2r7OJ%JR8_maTq4giiR)r#<-1%
%8kr*mM=%n#=]Z^8O<Gn<c'em02]=e=ld+\!]:#rs]WJlB>M9`kM0mNqn#m%+1d?.5Il<FMd80U^[`JdA//dsc<Pt9Ol/-Oa$WY*C
%fd.ej8Vg^din(k=%kAfPi,fk_`:m$)5sftfF;cOFpJ.Xb:P`qEHXjD.krod?X3^$S`a#`dF8t$Y&AJB-@@@br2dn>_Id`#EpatqL
%a-0jFb_>`5_L4M;hDHIjpH5u\Su5FPI.)@7>s`r-I%$0/DeCH9LYjI&^8@73h$k&VGb;RVH(XqdGe_At2#F]HhPVs/STpcmK_YF9
%Lc:e9im!Vt^EgbdL8k92QH9i!,-R=3HCtJ(B.?s(CuZ^O&f\J)d8r=n=.RM*9e?e87[$.tqFn??7hE\2^N]Jo3H-A5j;F2WC/#bN
%.2eGBn(-3Dgt?i?QI">9D^KLC9>:E7H*Wpo)9A_g[TsNCM08W-q)mt!e1);!2tFPp'68dcT@,'"3o7GQo#o'UYA;CD)%4#R!uaYc
%4:D\Igj=<2AB@\iRE8&4@+5Wp2f<4%EjWh+dpehSoKT*r?fZk%BZEOtr@5?>XNSZOO5H#KfeR3Dr2p+?G-+$5Rd#LJS;b2jmA-o@
%-m,q5rr//9[F+/aN*dNP/h#H(j'cO]9K:oP+14=^5P7f.KR"WO57P.<#6!3TX\\bi22V(RPcfMZqH=d*LOQ).,u8s#<n__l]PZ6a
%8ClO&h^D@+J,OJk`bl'/4BQqgDO+'WjMpnc<Q=*+mu0UXC\#:A]?OgBXaLd_<=55W,NSVW2)m7@!f(#=Tn3JF2C84_X%16c;mrRo
%7gM174UQL=(mneZIc=Tr,I/K#jl$DHi1XcZcYN>i:<R1FE:8u(TrA8$E`ZajqLGqB&"(#E_7]??ap%&n?WppIO.Om6eD,"1F+\M.
%q7XZP*O@qGP)m(K\9I`h8]=3eYgT`bBp1Y]\e.*j[t7t&#BJE4->XkX++<<Q\XCOPNG5i6+6Tcs.3j.A%dW]5np*.9LsMs1f7+ka
%p?I"^5Z!QOm7-(:eLtFe@'07)_)gMOdsi"ikfoeBcuD*EU3_E^X8k+6f#=EHq_nc%5O,qT(]@.J`+[bkP.Z$$r?=C:f&YlbHaW8+
%Bk^(P];aA8SPGe\([Y`N'^K4&5&PlBl2a0*psihU`3klZqR(lc4/(C[+1:"@\uFk;\+]*_g^MY<CdP:[4D\,I:9B:3d^=!2Xc)_<
%moQ<LRS5[Sg1jBaajlpFf%/#d:\C2#1+dFM%Io;j.qb^eb_==4l#,8.qJ]GN%c+>1#D9V%cRG0^e#Y-q[/Qo]YR$`PfbiuRQbP3$
%rhZbcA,KEkD_=dds6&ah"o<,dlk8Pi,5lot9;I'em":/e0@4nNo\BRs[m8j,(?o2!mhY-!K8T:Sd!&-YJ(N%k6[i<&Z$"6iRCZY/
%AmKV"ZpXk4oTc_lQQq^r_T^_o!m6KBJ/c5cQG<iXP`3ZAXJIA.?o.-='c)bhm:D9s2!Xp]0O:-?Tp:#V2lJ-.HS/Z5o4%3[7TF>E
%n*'0+5pqb$@l1g_>V[:/^kP-*<HOdJ?Y\rEL<9sts&N784#k@iIrK2*`\0\pr)a5sAQ+sT#@_(X[8L^R$60JI#G%TsKpq[C_9H;s
%2dO6YENOV/NQuca>1"^CBunj*nr$T#fDl>SO`:54<?1Uf8YP))Gi*3fM6U#c)b031j)t(<!UNJf(dJ'm3LN@biQ>\5!6g,u_<$:D
%GW.jW^H,^&g/?caZfRr"/a'/mcumnU;d0_inoA7u?7DS]2sTIHJ<kI]Sqltb)_d>^XG*+\!)k"^A(bh8H>-[tJe89A2lD6&VVo`W
%jdqSF*s[haVrd<*!rqAg_Gqdf3.2LDZ:4;Odht)jYZRjVWGqK8<=DM\`WDc3E0e9V?(_EMj)n_P#kR6Ml'LeFCk*n$5G07C1usYF
%2>K#."`cm"aW#*?_tifAm6fpGo,9f]dkLKU\*GEerP?"3VSA)$d?2mb?H45,=<YpYo!Wb>GgN=sCN:7&a=!@`'?;9E[I<@T"hs8d
%EO6ig9q59kW7b?FD$qYXbpQk#Ko7;'(N$8smY.mfRa<8h(,;fFAXV\E;!@dqPB!.,i`J(C"(-0+5p!Y(RWt:C5fa=Jmbl([#ekR'
%2'!l/"ZWU#nY]B,N"u@+X_NX_#.&?mXH2)a3hTb5>B/f$;Z"^sXD/uq<)tdU`:H=(%_0dq$Z;i]/O<V/@Q,'_^3UpI!tu('W%'(i
%Ua[ErVC3_*f#Fj&B3,f\g^ChGUf\@0QSj\qI/0dh*4uPUiTS1Z(mfoCN)$D;A/HLu,Zbq?9La*5.@3lY&h4fQMOn,PZ:'S98C8&!
%=s?BW;PXSC^2&iT[Htnq,44c$Uo7mu*C?Pmk&rmcjPE[,W*/Mb-M4e:E6$5<SOSLRIIhDrH114@_bIr2h\7NfgX*;S[,"gt]%VG&
%aPJ4>A7c((7cSa^JYH6j2I#+Q(pTbf77&o3NtcT1YrL3Lr[f?`[RVS^"H)XHg8!?)APHjmf7\<?V!'ud7Eq]#;6rZJQ:TEl8<VJ(
%,*#U4HhepbPeT!25h>"51Q3#ZdrJ/8-"^knSOqE.g@rgK'VTcJGLYb(fb,a6JK8S%6!u([)CWJ=O>]4fhk:jnP?H-N]tHGGM:*a&
%^+$3KW0AoMkF0TL8`:juqd%hIhT9R9C]8d?as$tT/R=e6m4/\H5WH&&#BH079BqA@Ksh%H9;bO7SC"pN_SM<&_UJ)#d3b^.C9,Z=
%JnZZJ8BA0td`X/U0N$oUA^aU<2LVVG##8rkq48%9N^Nl!DM?L\&)/WGs,;XVNd*e^XYXM-D\,EddcH[Rc%tl3QA;.p]MA=iQB118
%/2$qp/>`5SC8k3$,8^AF5&p,115QrTr'S9;(hsde05!k1:W%A(L-ithms-f>/6!r3\6$McG#;''<0iOLY[#H*-\AgPUm25q&_Mg=
%8U.%r$*>!Ne8sG6^"bhDJ0C(fo+YnJ;WC[D82%V-oSPjbh]-L6Ho3K0l)Tk0``CpkVQD984n4uKD)W&e^9*a>+DG\$4NdD,j]Vu4
%Q!HTl\&Br4\>:V[q"sem?<r#.I<Kn"^\dP2Q.&r#r0KnqIJJd#f#kaUIJtSnpK'TWG94Ce++=(?o;`s.=%Ck\?GB`nEI<'0j6?7%
%X6\rHf71I#+'8$::QNiJca#<Up%%H;+8oF3jX2RfH?JgioaS&BT<(8HFae4<r/84HhtE9(_dW41g;q&(bPC\QXZuU8eXMbhC]>r&
%]RG.lcNi9/g%)MoU9nq9eReaGbL)BbG]S=TQIj[OlVIMiHD8lMVf"U'ml7#Uf5KNSE4-/kf#M_fq01%9s%iWDJ$_.Q+.IJ%^RMso
%jo5`rhY]Pj?WhZ&Z\kO0>Q3ga]KYiXfG=&GYR5bja8^LY*T+NQ?GFu)@/5:rSV22i[@R5"5"iW'q=X[XoqRR3q1"`4^Kg>J3)i(*
%3^5h(M+(eI>@67bEV7G?feS6oroCD5qYY_E+8t9"qFpm/G+SFiJ,T$$n_*"r*YIoajf$R>rj;K6hqm:fDu\M<na!NFiN'+6T>*Cu
%g%KeW0NOfnI=-ILm@A;^Fo'Cm:Gb#ui9)0m+67Kfm)ed#f$U,2FQS?SbP6P!@=>4@q:jTI3WId<l1;*]^V.1lqFP:0BFs6]]"7_"
%o].JD7F1M-SY#?HBYF=@D2M-gRMX=0V_@W$_sO\>X_477=5W;le]7N3ItA987m12Lq<=s/bNH(D\m595Dbfnno(r1:(&okMO8Ji+
%pRe36^DM@h^E6gTd9[[i)\kn-4iB8R7)hT\AY+HkG`?[Y8UrPKcLDF=6`O2YUig).K\s.R2u_dJcaF"Xo-;h=YP+=\cf:+p;&@8#
%TBFW#FHoqba+Fo_Q]=NTT:L0QqZ$EBq=1ZZf?pgfO]`XQaY7NKVXj>dIqIa6fAkFH?#``D`nP.;&!"s,:N"iIDdAj)Y_@PORO=fb
%0]!b4!sU"*\$Gtmhqf%&9Q0=@STiqV-#$TAWA`[XDWME)`WkQYjOA;n+`e4?#.NP%Dd/DN'7?\m\TtXP<EXeDil164)q]fsf+mA]
%SY*[US`&f0alu#c2ljnp$b\`Oq\8h2$SK`N0%a5\hqD&j="dn;r)%*n)reUcDdM7.$S4fa]c@:M]cI?X@T;APDqdbW=FdG^;=4+W
%g6)'g]AH&bhild2cMB-kY7?Q,^HVVfc_m+:4b#)B'+O\/o54kSGSEd^mUEfE?(<PXnsPQJTR=T-3Z-]L/\>:+Biu;AI:8L-Q:pZ)
%XG\dEs7^7:*oma-qjua'g%9cT;k8F0kC9(p]YVY05I-+T:6.=u*rg2%p&/74h-YZPmrMF<_m4[1gVn+%j4sBh27%LC=X/Eten"6J
%qp3*eqlePNGM:og;$m8O"-Kd_-6d"Ls.QbWi$-ou#s!=up6.Dss+ced4[f/g7cFO"<k("oS6[2RZb-)#J)216YL6UEZj2"8J'UmD
%[daf4Z8!7o,]d`Eis$eQ%<@,MU.-j?Mg=(=h1k%N^A)7-mZUAe43K[\JFj^bJ[4.$-baR@$^\Fqi:-KG!^A@\Cd\Trie-&G9tr&>
%fL:cQrmsMZ_AM;Ls6GHS0T);d7J=_i@fLrOhQs8N,Y8idTD+lO%h]odU=*'W+@$_2]giPD#YE,09_X>:\)3"_b`[X+kae-thEAJ`
%q\]u<)]:g`;`702&3i^c^H@YV?SM1La8mpnh;S)-Oa%JprroD%fs&dW=Fi-19YFMem8hWqpo=UIrX8Z`+f-WX@=c@$4[u;`nCk+d
%4m<=rr&TcZ"<)1kHo*u(*%&"I.K<DngOCG7Uoum1.H3sUOO<)-i5GI]f5RVVdUH,'ZQ"]:HB7*%[#"`.BMhq9G`O='!#[E9,TW:d
%`ph+[?5F:_DtJO9&,EsC*u\LOU_oSuT9;)<&O6brUj$!/O6f5!&DmHd&g&U&rg.$2%lO/TSDMaRpg>4-d!855O+eM"jaS!MEX;48
%Q0@uZ):&89=:BSN8`2)\$.$-upr&;?pW!X%D[>Xc8P];?&?5Gsj?``?,)"n3.p;i\UqkO\dDEYR('&pc_arb$KG+8^PnZH)/,u%6
%P5fS25B@49!+,$B]/P?PiDK!M<UW#&et!n?_GbH/0n"Lsjo3H=rMP!SY+B,FUf2JN%s/I:hl$t=6i6P1[f'[Kg?hqc7eTK)B&urm
%K=?n[V?mXnIj"H>^\HQ5m$BrSeC</MX]opTs/AKqb`045aS>Y:4OAaOeo,]@QAHV_/(#'&AcWbca\XMWD.>2='",HPf'E+hVX:%e
%<^D5^Tr)VmC:+Y]<%RN*A)MB]:G02k7d[Os(]2I05`fc@:Nn5DYBq1$O$SW$4nkAB:"gY\*fF&Td!hnf=D`/<;&?)3I-_VUdK)EK
%nJQ@3+J%KM"YT@7PfC0N4oA%5:bjfPWBS+VRUVtHXeeE&bG:s!UX?u7m1AO;f4G6Tq;tOH00i/PVLmd:Gq%%K5>7e=kQ]&YMq:l%
%?@GN1JTLJ$OGXkDjW/%>A0tIG'UsnZ3]nP#el&2#1a$u)ZulN[o4b0)^92!\!!=)5V5oG\[/9ia\423KEMS7HYXfo>76YVIF.ap;
%=C@^0#;6Ye)Uqi?iTo`G0SSi1"_U^_ln8p"PDG\?"D:#6#=GDW@/,4><.rS20TOd!KKddJnK@=dFN`XcOEt:H(\kMYO(0n*#qh"R
%!e^SEd0VLDa=%ao1eWg5=bet%Q)DKTC8?W3%<6Ys$o#3B_JV("F^P;#*`4+?;$(Fm#_j9dg+a>5"[9Aenn"GQ[.J`SaOWQ#QLk;&
%cV1+(YK;4*L?QXOe_qb<.G[4F&GJg#-DX.IK2YTgV2T1c8nQ9tc_or2P8Ns!o[&Eh"COjpfu2L4LLe/oCu_*I%d&d.g8L]]4-G]Q
%4rG:V/!(f,Q5>u!K085M@M#;RhI$IYIpAL5*bNR`M`,spbIedoXmO4!rE(Rp(#d#`prl"OO>*hso0/?A^'ohp("_0'I8a)h#7T7Z
%"3\O4X^IVa+8m>RI;,]J'\tA6KOff;V3)',@0P$c1D,l8I,4?MN%A\8d]JPJ3ufC73LuUlK+(=&iO)W)h/S.Q@2[6'`"XUon.nQe
%JsDLR]C=2k>[&&,#_>@Yf2uG0I2RnS16O>O/Ni)tI%V)ffKWOW8lA)+:)/3HQnVDGh\k"]OG%Z&:RSPH36l_gR`Rb6$&mc)<l?p]
%[59rM1t!Q%JfO^:7UYRjYdLkQmQDPO/V%q;mj,`$6,OSg".=aN#"I)O@ahD7Otkac1E7+)U$i0Ki?a%8S77KmLQTRJoY+ePH:-&q
%E7S*OgtjsO^'I)ISG8,5@6R1?3lFhhTs*??,3aWF@fULWTLal33*"[o!Xbf4-QIq49%6\MOY>-hEcq^VXiZ5A-M@[T.Sq57/U2*=
%>^Z@k,6S;>&KsSXcD^duUujohTUNcN%L*.2nU2Q!:XUc@>50-n%pl?7NJL+<g(WI8LtcnO>VU6,<WcIS"q,B0E#:DaKlfJt84#f:
%577*V5'U80!WWg)'-HmYX^Fa>d>'A5P;&6FagZdo5&Kg4N<I*-:n6@$XHD0RBrup[#M.[pSge"RRNVYt+:AE4_s$T\ne+]->LbO*
%]L[5U84sOMD/R!Z:Q\rdFWGKil3a.kNJIQlQ_cM3md-$YaT<;5;;f6;U2qD6X^MR]fH>4/Ra%dcc5X]BLo<!em\<n\^g!U1"hp[$
%R.-NS+WW7.2ALEDArc+<,I6^PKO[<2g9I*k7?Zar)`(OiJ78I\%W])LcnL/_V&DF5`j0!^Ju`Q9l<b"pBr@Y5pNpare7N3;m:,+\
%qTAos2)do$WN->&j8Y>s@oOY0ZiNn=2'!U$rKEi$MNclTK30hL3>Xl/s1q9!4?SX'0qbOh-j=V*(,-/R6I(PJ;#rj8+/:fRrQgm<
%W:gtK#1]'M=E6sa'NF"1+sLS6MQ\-PqV]rtrdu6B-Z230g)lDeU$iZb.hFFG-7KHJ`5(:;&-c_<hiM<dIo4G^V#_Ftbk)J%,k.N=
%*Z3$h7D$OPs5:oZ,f7W$JUdRp"lb2O!FRQ*e:eOZLbOoqA=i#K^L>*S`-ZXeiK'4rH,@cM#%16egSq!^U,:!(%rP(uW%cZuIU<'T
%fkD(h$oUNE$03JJ77TO-oUhlo:QgH%GmaTFrKBL$,_J5WD&oDO1cNOHAE[(dr^3K_4`XJ_[!CP]_C+k9>*6k%2GT#*J4!H/4T)sV
%91FYh`05q*q^2hfRLD<_F+'Z"5JS`tjU?%_J!+?Xi+@QtM5CCC*sicW7M4T*S:5Y18bP]7g5@s'[J3LXncA=bI4:p^(&hZ.beu$A
%HKR:XcVk6t50e5FUN$[sch*to;%2X6]i2:DlZ@nK?([?KI!RO0D]^&X)SYY60c"?_qG4i/2#PNF37Rt`Fis)poC&sOl3#;Fs4$D0
%pmjIJ<N>\"Vq7o5l)S9sK2R-_W7u,#TO.QP[%QX3ck!6HJ)T7_;mk715>?WP*7$7tRk7cbkF,s!YL1T0]1%$eciM@3K0un@!hA^q
%mku]H0>:bO:&X+[hLGfO`GW.j/&<RfH[bR:PN%)V0`RkM#25?7C@t32g3E?EUAGl/l1Q2[S=4,5mX?[p4,X1Ub(FP\.q04;2T@C2
%?So^T.ebK'bdEu>hh8"-X\jXdZ_(V4:jQ+.mLi9DJ?H`NZ[[hV2O]W/Q9M\'HF*NIXo)jrY3E]a./nK[YjW1oZa6gne"AqbN1ZX.
%J,A4)H(hJ3gX!h?[f'tQ3UX6/lZAW"If]*6D^Eeb:(_PcW'`ktr1$[b/,0;aoN,8Cs"7@?4T,.25i;SD,^BWeQi:?5p>F:D3PJ+'
%mtZ>%mGED8k3f)5s6a_q:,*FXbAI3k<hYGF^YYDrq3T_Tr_flH^Y[dFe\6_6lg;6[Iu4-/:^!.=&\m,[5COr:r[RecV++h[Vpt'b
%V1B-N?FpE%m>n^MZ.!("W$#f"eEjTdeI:%.rACY`:j.>FFhCbe`<qu:s+84Cs7Bbi.lM#1,FTQbD7X*A<%GB5C[A:ZC"@X>=t(@<
%]tmf%$Hdnle8*I&kAI\)D9)A)<P5+li7g$;^VRSq`ceAQVq>F_e#g&oIo+,5^c]&`n:nO@ot%83pK*oQm/Pq[LBVQ3)iq\l@l:^P
%D"UtlF$BCW2T+%`HEB!5()j[1W[436ZCl6EhR9)UDl;--Qk\7kUK+BphD]g6G$b$COPYeiHei;@98>^5n99`EcGE\gh(:LBm7IfL
%DRO%+erH9e?T'M/Bgcs_K<O&#fV;"j%5/T'[YcXrk>(EP="b&Vs-Ei]f?(aCp2N8U8k5JX)Ou&W>D6on.5^Wk;WD`PG-TG/'nMdq
%^V^h%'j0ZA5Mku3I_Jq$9;>X=B`^"Q[[RjLr=\RO\7@r/'>(W$X2^1#s6.JnQ!1Y!Wmtn@rm.EKU>HFILcSaVr)W/(olh1V9;Z$t
%<`"47%`j:d"eE&IZW+"J<a37`VgiaYS4R&l=O^_kb-meAFLt`#p=eoJ>Ss'n\ChdjA,+57Zp;A)3^[(gn9[0G4tB<'fGsO@LlBu0
%os\]7"8+?sG6H-U74dma/"[iQN]fe)WS$Fc@PD,no+h;?;l*"7qKfCS8De<NMff_J*GY)Sif.,[@%MKc2q3$?qd]7ZEU$?NlOBp3
%a:*Qk,h<.IE2&cBUmL]XV"%*(UX6'n*G(aAgN^$nm3gugg#*l#=*GJ^6e`X25)e!kd[a/2l('msdel>@I<t[c0iHq+>CYSOGQsM^
%->>F5)tX;/!TGXgara<YGC@X,>)Rh[ZX3S88<l]tDs%pB>)pjr^K'#?bWC2D")q.8$3Ir12a8gG8!`RnB'])=K4kj@hlk4P2qEbq
%m<>"\nJI)[20V'kfVhp&poQ;.]sdIldV[Hk,f`Dl3&DG0jnFi8r+)\Z:M0LQ\p'N5;>DAZVNEt;P'ugZC#`>YqQ)jV_kEk*[FISg
%HtTDeY6h];`M+RPK-Tft-RnN_WqS'J*VUFsO<:E\;>]s_L(Q1J0gZ^m2#BZ\X#8+^`ceR?r58*LnU4Nsi7t3OGEWOf65o@RG()mU
%c@hYTHS>!:bu1iHlb4-s3JY^*U;=\>XiK%[A-pdVoALj,*$qM5^MNpRCqk'UZtH!^B6a2XV[?Bsb,Y&q22:sMP+AL[V:r'^SH$XW
%4%VO_B[dpRk(e]kBL0N?**IJNm!lV'%U]eZrr&pXl6AHse0!r(/YK&$Sko2p$]QbbMY\OZZOK$G37*KBhR+oJ-ah94"YTb`]O0%k
%k,uH:(#-/%DI*11OG3u=eLKjODZB7Rm=DdlB1MsJkU%hQf-*fM=">+-o1Mc!U74F*1oet7i`3^^]%jG6;)m*aXlOE8)Qs;oU"4I%
%rcCCAZ(jsP?gYI'I6cIB(uafHJ.JbV1?bG*lckdN^SWBqq6).L\_"e*gqGf4^(<!\ff(]3L?OEZ*ku?^3^`^AFJKI=Q4/@!p_8jm
%G&f!cW'Zd1^A=@OU%'8658@2FVIHQ;^0;ki1'dA%%QiLXD:WHM98ki:m1kFnO:-QcZHq>(o4.%W=sV&dN]!9_Op!U2LSHhF4FGP^
%g$2Od/ggkso+grJCVM,rE_]9Hp:!Arr.,^!DDk#i;n;/qn6mVDqE:-[KDoR\J&)cEE?H6TF;aZ<%r"S"J$YXl]bgM1h$pdhKc0[r
%c]'+.nahqr2nrk[H93"4F!Xa+r,#pk(VoM<:0D)U@7B^cjCl!L+"2<I[n3eMLt1'TZi,Y8L;&a)"+L)Z,G>>-oLb\CjFGWuXnG,g
%na.+HQ$2>c;Yp;"._Tcq"XT$@:OSAr[IA`*LtVX?g&Ged4PX]Kf-?c.!s;'DL9\("BqB)4k'*7?:fq':-#e"?9"+N_pU#e>GGX#m
%4Z3M*s"gp8/Id-^YlD1B;TiOi=S=sng\cd),poIuhR<d/nHP'8F))df\Pk-3X*o'K9=ptt3,$6Xh8kTJR>m,Aa?:L3Q%-3Imjoj8
%W`:]6ZQF=rpk?N]Q!J)./N4l^m)QcrEDl[dAcJ_s6*0=F0:hRXNS5-eNTPF?U&:@$+e30=WS7>h1]=34fABrLTke=ur)S`-<8T6G
%a>!F!g&ZI\e\N3E)u2$k)UiaiahD4c>j\^S^nA$c.//@N2L(08J@')/)i,rK%po,lTp&j'XhJB>HJQQPIjH#eTH2aWC6O+EqI`1q
%@RQH(`U9qJ>j%s7!o;RTq5"'WT>Y&fq*drckJ>`ekH`blD1I!)rMd;/b0a$&p*U_;m/:eTmAhYbn5Ot^2Js<mh6c"f7dc%rnMu&5
%NL+qr'RdOjd!klSCi$^=W0Qd4'Q,a6@TYDb%XV'5i*D/D<GW)t*W7(Uml)6aBmR8#9[2rUI?`R?#ZM:W=/"4r`oYA"`)U:2/2at?
%4J1FD'74egeb7__e&#T>^0-9<:/,>9`FNUTT<.5KkecW,g@C8/=kLH[gf\Lgb'kM[GCjf]jf%?bEmM;:=`8,!nMWD6\hr1,XEM&I
%4A<)m\/fM"<h%phj8-UclB84iAS\:,E\<cMI/G\MG3&cPoQ,`V"oiVFRsVlkaNM-IoP8N[PMS:a4scNfBWmM]@qV4mqBZ&<II=r+
%/:BS5QleNeV[$;Tl/QUNo]oWbgF_3^0"hs:<Ymg=f0jM"]N:J(X$"0SKWi8kh-Mc/E-(/SlDsULKnmlN2uDZCZ6>1^:ZTZ7qe^Ii
%Ab+%R"H2\YD]`nen7gl6[o(h7BBFg/Z1QH!BYuC\]NFF71u\%*U7<m;K;n4$]N\W5O,Ji_Ap<r4Z'q4G.:fKmRH;oBdAOs(\bLcK
%C5Ml+p61o5H1OJ>>oUC_W82>l1A11&aglTS\sM8;RWu^Z9Wp'd4pdTG0:q%%VAnX=f0j@dESc2Y:=X`A^@NJqmICHS]I^:#aDu1)
%Ese<+-`d67n1"gRm!KBTRI-fIk%:Z^]"e8[p2I9"^7*k[)El9iL'f"Ca_b;Id:GPs]M0rJ<j!3_C%R/"?#GV=QBq3f-m$Qs519`G
%7+H>?AQmD_!^3Z%HgG?d-T>C;ROH)fQYi6^ito0]$8mBK][FlUUd#L8KdHV1kq'S\g1P'ipLZ72_)Hmrcb79fEdj>;<ZY1_TX3.r
%@c_n0Q;05>0oWT.;/R:cQ._+^E78.qRn=]1X/[G4MJ$sRK^N*QZQf(=IP.OZF3f]u_u/(i^0$mFbNRBr_:!YtDE3.C<:6XXa3$L.
%@kNiGdf.M1.!2Iok0NKtH4cGOnIAF^m7Vr9TUou']0j2DjrTQR'ga@.>F\G>O"R#l;o4Z*Rf"1!S7^jXAmr+'IQET!4(g'c8qF"M
%24WUKCa.=:Dr5&GGjC!\GGm9PMaP<;MhtDOWfX9fN45c%i1Dm1Ad2GiV<7(&EH`[V]\2\#`9+\\*'h2!rUY1P@E0eFhNG;=HW9YJ
%_eNUpU,AKidYF1bP.*93X1$ch??JK?(p1_a,XTQF>5E-#&^;oPh%u/a\!":]B>8,VJ2u0<kj<LC]m#t!.:aMY"-7;a.YV^#on"IR
%-g._"WU&&:IrO6":0hJ_O%3.;('2n"3i[P;[?pD5b]U.C_FAb\$YR_Fl[@Zn%%h.DCTW^s(a^$[mQ6piDKM<Xfik;N8T`6`mITSi
%NV3:b(97fVYJAVBdn""2M:C\LVOR8K)J#:eDo]>"f"-'jfC[JhAo>>KROX[**[]K]qKSq6\9`J6;(Ud\K6*Dl.H0Bl,E0##Zcuc^
%R*Z6(E:COp?[d9iE&/'#e;Hdi:L$V3K<.a@V@W!pRDF%O`H;`GPL;[CRRsBc/rgi(c%&3+%IR8XrJA5Sp=h;@;B[h0\VKh<m>sq"
%//7NLj%m#o&AX8TYa-cPqppl02L$+f49ODP5cq1Ho<ZL!'Hlu)$s<FT/?t_nK"ar$c)rt1[G!nM2]'L]a18=Sosqq;?;8nX[%#+(
%L1u.MZT=\WDgFu;YH'j^qS>d@7]r>Kk5G8OSO6Gh4\:QgpfO+`O54F$>'>6-5:lu6Z]nNC/Zc20WU*4[>D?jH4.2rK_`oq*+g][^
%rmXHmquFK+;>4aY/Aa/SW:\MC_,k]g6[j74b%$V]PgJ&(+h;9h%(=mW%qMQR$&?Q'NL%=!oiS":\=@tN'.j90!s>CE@W85WcaYMo
%cnWBQBsdjr1rakniM&Q+Q2Ykr_]b(q&PAT0nQX_g8fsP"0s8eEZLPGL&0^"g:`<'71q9%S#qg^S^-=f?G:*F?]K6PN$1ZOfS2N^4
%)TG=*p=92,L5Mj7lRr=:)*ZF/cNs!o@kin=:XQo#XSk@8V0trW5G/I%]H-C?:G;/cfC%coI&5%nM1Zd;;Z0m2j1We.qMo,qRL"nP
%G<:f2Z7nD\b4'GWrP%pk]33tCoGMUuDMF0p\PKlf(m0s[KOkpo-1494`/q"T9n@7Tj8KbK",lr?BF*op!f5$5nE%ul+`/jkd6C-[
%F=%c;9@40Tb!R2RkrnlRNZd&VY>:>m+O6U5<J4elOZn/;g]E+LX7]5;UlS<\)MM22?=950n[1GDMji&r(/++(I&V):4e>e^o_.<n
%7tnP;*p9D%N+KD`c0Rq9aQo2[d-BD5/8p$sEQsL9c'GS?BKd9n#IJ\a^r^)S]5%2H0qHQig<8*@r"%EV3nn#SgdXn/9:0="QfVtT
%4\o!Dds.XgVit%pq8@0WZ9ET%>($']VHtpQp"@m?6>eRo++*1jq2=?u_mFnV]2%)OF3U9VO6$*'h-L>V2jPmUk,L65_ln/D$rB.C
%cc@oV(c`Y\>(c#8P"[Em(7tGR[7O(>a,j="D_\5"RWhf?1T>)0`[+qZ#P\Jh^Xn>?]g"B3/oCc.9t=)GICV<"J.ANcNjiZ0$G#ED
%<Zb*S(N?/J-_.lBH?sfos+I`Q;bmq$M4D8i^:j;?a(#BTldr\LN1L/%R4]*EH[KCAP,KHo@-AS2bn42]7]3SR:\g$IrC_V5DC+77
%F\<1d"+)6hQJ>9U?S!:L,CpoP=$F[?;YSf/VgUK*I+h7GqfJ),(K9eXIiPr0?^T]R0,ATnOscRImcPRdH0fP3#q+TPc(D2C^ip$i
%@Uf)u^jb%.nGJVZC#@\%.^_Ntc1*I_CXH?h][,(HVciI3b\m&ETQ^EgXd*&8aBlkrZR;<RA!EH.SB]T$3aCI/MnY!\IehjpO(YJ3
%<%i:-U$T4N#Dn_pigUnKfV_!df#7o6_,EIjY6>?Km%oco.aMMQVqQOk,TbB3QY+;#Y>S:^?3T5)ik^#Io$ln9R`UCV72QZS<Msi(
%TrBbYo?$A!lD[X_7C,(ue/9+e3Z63#(N+/'7LT#]n",SqY<d[-^b9VEAe+N96![g0mb4<A*l>b]d4#YKI::nZV[N=U68Q69X.KKR
%*6b7?ZR7-rir*@2OZu!9GN++S]662ah^hH<Xjuq52ndK6>8EPMqQeiOe490Na.=@(l%rY:<f]G>RrE9@@<FPA1H=)!fbhVMIBE8r
%-c8F)kAm'ZRJU?tn\@bYNR8sN=0Rhf)8$sO1>@"K?K$31$kJ1lL<$>Ya7Y(-$_)N]lJ8t&Ccloa81:kuXos;qfZ>LQoKutuc*csp
%\#ZE:h6%p;eCO.oDS@7UPAL2>(7Q9GDNaTY0ts2n=ROFp&?:]OT-%3&.55RuW'YB&-Pfeqh^qN/lur\7fNDd75R2P)MmN'7ET0$/
%Y?P<1oK5*tOl+/K8%sh3#oc-0&+)Z2DOW!Djb)e3L*)<"WO1T?`M88p@:F\P@$u<p3B]&\KmN=#B`Y$@HCWaV*+2`onR9-'\@QW;
%&,q%GE@1)14AHD(0LinBV5`#=>hB,dUje%mp@G-@adGqj57a(&2N2[iF-Kn@=FJ8-D&kD@%F$J(>ERI2NHoM+0m6O+)kFKmZV7E\
%ZYoJWahu9VlGDu\bCI=Eo?nk;7b.d"/IY)2gtU4c*m!`AQclOmNq^;XCG,"\kd\,!.[SElNct7RqtTqg8rIS7+&EJoiT'&o41*J8
%W=5+3?a_^aeCs$_-V_HOI6KiUB#lFRaYsR2R9-WOr(';WKf:@_qSMA>/ReW&;6D)6/EKOrQ`X$h"O'Q4hkc"(pX=Hsq5r2d9P_F[
%N:[S&c;(PqhONrMBQMFZk7CAh[HueR0'W/]i`[Ib,6QU?A5LG`oCm<eF\k,'ao$#GBHOp@!CChh+OX/XBJ33L`A:-BkS8N[QJKfW
%ZG'IZ8bR0%"_],#!=:>ZJ8Y=Dgr%#1rrf0-F_NJb,$SIDjV6fn3(u*ZrGeP0b!rc9D&_MUUgh9k7k+PR3F-o5?!;.-?lBShMa@?J
%>e1nW0@usD^e<4u<PRjjXehY5A0F/8EqO.1i+_^Db>)A*;6\JV1OMdWO4/Q&Lm/,?C$dpoFdC^+2[5AfkS9]g:?H\;=oE0?f)?U0
%jW9PmRH!ukkRo;grIl&3<9nV+Vd&>lILHst45%G)QJZ#"h&bUWD_'r7d&`GEFAQ^8p3FrH^p2eRR0qNbo.sk6#Z=l9gtT>B>I*(e
%2/b1SYj9j.Q7%\jmA8KoV:kA&HF/slg3e-J:L-WmNbCt1*_b,4qcCtml(d*Tce<@7^rr(fb:HSAY.R0#)PiGZX7PShn1i#P,d0I-
%:#3pP/9!V-4??,e'aL!p!lLN2(.3:dFXd!($s^"Lkcp9GnaQ@VG_fPs*Z^k&KrXb#M2f"apHD:>SZEXULX"=S>&>gV.(e%(&Rh+l
%*\d2K=dgBN08%[9:$Ak0Osjki2ii[Zb+]qb8nT1/!P8^E!3*L<BBX]'iH'A:r/59n<Q!mJ;ME-4-d4K:p5^OYEt@LtQkp9WWK6fm
%I7^L4RgmRQmH&5#(SdTtZSRk1P':\KN%r^S+,skkduF$g\&)%:h"_9",5(]$_J^<BGo(BIIRB<e.%dW30(Ac*V;0YHYp`:'&(k:M
%0`;?3F>dauPM==hW\lJ6:Vc$NkfktsO!D]*U>MNPgr@A0(j[+n>]o:S,^h@&IgU5dBbYD3VAb<eSD3@;XMT>*XieNGA*TT^r(e_X
%:mIY8^g)TXiKM8)%g7<c#^4FkFXZqZBKDMjP=#ORr+.!L)!Mtq9mnjbQk)G**hLT)U1!,6'rFGsO'U`XFWnM@)LQ049Oe2T=+05E
%0?u[81u>)aVfFPYgY?!A^MX;KFT_$L'-'ZoH^FSX5PnW-I3^b_3+/Do+0C\V3sL)I=&^lql%P[]\4RhbO!""Z2"A;+H->X<%j!M[
%4,G\6h'Xqi[PT7JO(Mdba-5aqFsDqA[Z3qDKI:B/VJVSbp\YrT<V[N'f^;Nea]nXUf7%Ji>&ekI(?SV4D7jiCb1'df_6@m-R")-m
%hS3QYrbhEW&ukN[j@t(uqb<:98KYt,KUX-:g,p8.+c5%Jj2:5$Y&fH2,."d:QFkEWdM&+N9C(9l]4hbX7mU'd!g%tS3TR?2O(WMe
%6,YpndYEhXM:?ZcTpaZ6*-?7k;c<kB7-CT?egu^>MQ8rY^De<Ze06Gn$1+[MP<Js=VKi$fmaS^"[8B%nm7a.5JA)US+HJ:[6"U7K
%EPf`k%JuLknQi>LU+;LU<-i(h[Wc$+bAT34pQ@'?@ZgS/MVF#iNqG6f3+/3)W]uZA)?j6e:"DP/1mccsA%-OXB];@T;EeFF`L6Zu
%I?#>OSR7sIEXrE29L#=eRdAmsHA26ch@iq49N'An,a_#heo**%!ZU=$:g!D%7?AG0&WgOEB7R"GWH=p-fJd#hL:lWOL$Z^7(oZOM
%P0jbcRQaWY4X8E.`Wnr1D#f%+M1=;N?hgr']F?rP4WAFC&^C&_?no+&:>/q+D%2/?M0q+C9:0/6c.(n!?oDh4OR7#.M-@LdZo?HH
%UT^oj%`m?JGq`8Tjn.E\H4^U\$cE1G25,qDQZY!F04.\^(5lhMkM1Ia)7CD@C\c`VV\=#njt;D^?lIqgPJ+#0UEPZ,$eOhOml*_3
%9m7DCq6HSmR@WU,RbuaW8:1hn)p(;N]K^S-T=Y@M1\+5`%?NjBG4lNDAnOTJD&$-&X/]*k%@5Y%h*_@iU_ZT20<)Z8IlEI=>2KP8
%H@9ABMiIuQ#MH$*$E1mhp+5#n5>2NQ>4k>#roIs;!!Pa8[`2^pAA6h<WV-4eId2DrlH9/1p,X[;nnMD\pG,u:4%N%A8^MF8Hia03
%kLjre-,'mZi!i2R\B\s2+2!0Tftm,p(H;'=&,!g88I9Q=`>en,eXQFn,WI;82SDVfU8D@Rla_S[l@mWT+&t(qn1Kj\8VFm-M-8c5
%@l0kLj^g-h(JcA]A)U#YC+O`pCW"lW,ru.;VCi*Sq>ZcXeU&9/+(KXL/0+#pEqCd&E(T'dlf(EoW)VRH_k@IHK0p)1GVGDc1eZBO
%I]d'O+7WN7e$OIOlZ[<(cYr\%'n<:Po]k79X'SN8.qXbVNJfoGWn".3c/2pu]4.Q5e84S4#B&+ACjT,6ej$^kr-k_Bob!)r5IneZ
%]l-O\5E;+H(]XJe)-b)J;s,NNOR[QXh[B0;1O&AIj^jRDhcgU-$cVXZ.Wb6d1V,.RGN85eR2;KWl\DMKH`Pu,<nOt^,M9Wl4V]<p
%[Te7ZnOG]*I@lG<B-p..nYo4s/V2X$n,:Z65F<eC=5*s!$pKWXn]t\RrRBfDp]::K'!,YFX(u<9'2R7GXe+C^9uDb.8bt5m?f'GR
%58WS1N!L2#nBX8Hq"V/-J:EmLcZF+K>4>s8":&:+#Q)gXn7aq;J"e>uRnT\liK"jm20-2brj"'4e*J]1c[u3ZT#X'0W<u>M\IO"S
%A+XU]>A_.6T-sEs>lK3JD$iKAiL`qXpf".dJ"#2HYVrUiq[Gfeh5(#MZ.+($RH'8@Q?'Z\;J`P\Ls5ePIeriA"-Pi(_ZAXn2u1nS
%_A-)dNT[`rig-f<pdAVC:*>Z?NBcsgL=kIqZ)\&srfeH&nHZ:?HWBCVg7pj']=?qtpfqG1l#f#Fc31`=s3O'l&Y;,;,Fj%i1r+Z\
%a4c'7d1O<>if8QA*T3Eke]FptJA9T=j,jL-U:iY`B&g,1@%W6%F)\K!M!NkB>K^8V*i9Gu.he?Kr2?D+9dLn=DA0SBQW/F.Gs8R#
%\^pMCQ\ETKlJ"`Z1I+h9@52C^,7gH?1@ao>>3rL!#1CM_elu^eI9g1[$+S56]\k1.gP&ob`d6`2rg82ggkmJF]5?G7WNj!A/!M)*
%pej%AeE%s5?U'&9:rlHAEIR3s+oU"CG4KN64!;/epHZ:5p<m.]UYo"_4XW"+iP?7s8*&lbKp8R;n^<M`%W@G+7Lh=bmd2?7/5RX\
%4F^I+Zh>Bi^6Yk^1j:NlR@To1pBPJ0oFE/.5N8HeCb@n4?[duq<7[]%n_BN8ib`>gnWh?OY&qT'f_!D48:5aXr%1+=&C(ilS(!'<
%Q@#NIn1W-mc+s3DT?Yn"@)tM9psg>sH$gf"13'W3+.^[D`lE=u'Hd(#M^MDLR(SDS/pM1%WKm<[Hocc,N6c;l-KBr8O\C/ro_(+*
%GFa5D-VJO0nbL4/.dk"<+2h=&YK"OpG:Y@m-T\CWQ8[cLG4[]\Zb(BC=PXSZYTVQX$RbK!pgUdm`tV<DSGD^:jitL6b%^,q^=ltO
%G\1A2(XHEIhSo("mBLnEs(sX-52Nl2DsXl$j'-T<FF:\[IM^mI8PI2!-hKn+TTlUuO#D/lr5:Z]M4aL58)i^VfmN_g/qpRNq"=H>
%+29t;?cVVreSMm?H?^.-S@?Mt&!c8Dpf"NONPA/3lg`S\MmmqP0=_jJ/"aMo]<cm5,ed.BNJt;$4!PE,d>=!bVt6+77!?NgRHogh
%O*Eb*`=]q0?=B97ot7Lh''r@gN@Z\=Y"+d*Mb>:qm>JH9m*jq@8E"_bNbmKee46sNfCqc..Q_\3Y^Xq93U*+VO'Ho`culo`13.RQ
%^DeW8_UK*S)gnH)!X$)q[VeQ<qnWJ3e"&VKUE`:rZ-`lgnh`C5/"M[F*J&F\`'lA[-:D<"GV+).QgPY37TU+m01U)qRsUpr7p]VG
%qs5Ud\po,N7us9@F/'PHe!$Oc@;BD\\6j'5<ZdB/8"]V.1JBUY36XRGFsbXu@j?=N%qCg0fuLA9mFp$V\%))nVW&u,A)[+:gXu't
%.mB9DZ,s7nOe*NH8Xucb_q@e"ln#]O2Kh65\j'5#(qgi7f\(QhHb&V;``h3+jEQ'WLW)U?'Bd!^j,)V<R,>Np`jkH6'B;`t'?fDR
%n)7r-mHNPCHtOre4auH>=2us`]'&+_op</Xb&^:<5Mt;cO1-1QY7pFu;,0g!<":7<'<eMEl&RAj/F9^DM:GcJNQm;;IC_;@F8jUT
%31cL39jAa@PpVAp9hmfOe^[&4GF"c_btXg):3=eD-KhE#kEGK/-98V]Y]r=!fkS[ONP2+0jSniCb2c]BW\o(VHeOm8ckhP\fBnR0
%amR@;$;/4Xj]$UWq%0,nktj$,V4N>-<5,S]5.(JJEpC/S1bj-$>qAcO2I"p7oo,fH\s][_l,cW,4?]<2lqdN5gWS%r\"2UPg0:^9
%]q9\O9V668c_g0#nZD'0nhElqrDjHYb]rP-0pA-;)P,87\[RulFnmf!0#jnI#8>AAbXJja4&`-qY@h0V2chfkk1s$HHM[.Y_1UlU
%@W?glPfV[-%uK,q>Wm)8F5BY+7lo[ekFE``k`-WlNd,a4DDX/m$QH^a968@YfmK\oS)#T=7V=Alp;LkD?K>a+9.sq!,E:`M\[h7l
%`14RrQ_$k=^7EMceK:6$Vs7I0h-ZfAbe584TB:H\QX2G0\_9X?M,HLIqUEArP$=h_B?AWiV6OQNlXW.]he^g*7lJ?7r7p7>Bg/JS
%WqgILrH<X.Te#7Y:H!.SJK35<g\u'3S!lr&H/`B,`EQ3YK"'Fh+8&ANF(\hD5U`f:'=74g.1?G8[Q?Xu;Ff23Cnp4]Y`ks1=c$^Z
%XKfKhb/`CSC!KY@$,53=fD/J@p4Ap_,hI:;HK=\,mEnK[SNCQl/Z8&+<o'C(I6Y%eDSiYYn\"f;aH<el%u\$^]@hj2/bp'#o-,n5
%cY(8/Z?e7VOW?1-;2LX-XpWMQ&[dqLNiSB>]kLK<Hh>hBm#8,\Ahkkt@/&uuOI8>]a+m0/\l><%laQ@m_OnB)g(1)3<117>]63P6
%0(TmodVdA*SI-j9S\;@;BmmZ0Ch5CX\6N@q%;K+Jcf+*E.M$fICHp$:S@6:er6nPg?QB6o&!gfDAni+e$O_ZN3/Fc'[=sP(;er(M
%SAI\7in.;F\L=e"KuI;7ZEneG]@gMlS8D"RG)P51OuG7uQ<(?<[AEi"o#=Q^\=R#QHap^ac)k5];p-t^l-sV@WLUO]*SX2o2O.C9
%?/'*IVfJW'jk[&,NTIdq*@-3t<in6a1,kPJ=]sTuhlQ1P[eEj\L"Y6R]2]8@kP*Qi=4=mN>WnMoO0;Sj?Wu^hmEJ:-'X)99I-'?B
%IJ.pZOFEcP5(Vnsnsg!sHEWa=QIjF;B%BF-X`bRl.,!\LN6%mlp2]l*gYL(;Ph&TNA*:NtcJRCDj>QaqakY.o;``OAh`8j*:Ft,g
%R:'VfIrZQ*kA)lW(PTu;k>#H*r[BDb<aST/V7gbZ/\Wp0>#TLYmFoSP/l&`r1LAp@HV7&Af=c,R]:Rbq^T=%ljd4S+BBkNsZc?:n
%)sQVOkDb\+Ed$J'>\e7Qp\=1=Ecj4DH$&t+Zh\]H?/D%(]BX4//oOOp%]dP[KP.F!4Vb=W[SqAib;m%m-IXd*:T%:?44>a0]!GYb
%A9X&0C4,2)ZP_RoplA4_Bq<#m4]A,f]<=lZ\\7'!@<!rElg_ZhOl#H]>Q/2ST0F&\pGZ-UHi&$Cg[7B*k+Qu1'Ug6OHf<I69QT]b
%d*mbKoD@D'MKnh*:P8J._q3_.c(k+"`6$E\r*ejRG&Os7*$;^d*!aM79?6o;;gZQGh1sG#9_if&,]gB$E,p62H>q:r?@4b5[jcL3
%o<c/OqCn%]5+Bh;@GpB$rV1>PFr?7"S@'H)oB1Guk4sBX0su9*pp*i48DK:%(V-$!d`'HG%kcn]g;E$he+UrGna&U6nhiYFIDm6g
%1KRf?nb/u'>?\b4:6jkkg%!eXol[7AHkX7d:;A\FMn9@nS!/K"m@36Xh7o4D4aO^V^O3Pnq(jCBachqdh8U0#n&jfhM>M"tdC[^_
%fZX6\<OZ3QgF->D=&r,CMO1C@8&a?)r]t8gE.>WE=ukCl[:`*ej^>QUQQaLA*HkG#DJ^(<HM6m>E_uJ`Q.OKcl)NP2<-:EJRAncD
%Mh_gPrN6"%GBVhiG^3C+O+N:La1\7)]>p751]AX0)N.Dgo<5&fop9j6-Ej<`CBl3p=1-'92B&I=HG@,_Hutp(I;V2cUgCopHKF6F
%QhFcIc`LZ).=VoY07'_r3cb52r49I]o_NmW$_*-tWGo/*T4HQ5o":<(cMGY#F)tWW24mLa9.fT!NOJPAmd=<(7!oZFGmj&,e_AbH
%EMOTka_H/[H#q]RS+5)ke)LttE3Q&)*h/(pK+S@)U`>=?HtYSQ;Y\dJa/LTeBchXTW7d1?r8@64FU]F247;8=GDF_h*IQc)]*mf)
%D?#G](C`BRWckDI@_3QE5#l+dfn!8'g;Vt$l,<T#<,KQ77<JH;`C::10hqW%D?q&t%Y!(AXLLbRPHg;]%1N8[9Y[9PIrG$iXZCQ@
%2Ib3/NILX.QXL)H/Ck`E>/Tuj%A7Yu"qsK/1git]DA*7)=(=+6g8l-l(JV[%n]B$bX&Z?gc0MR(?MOmD]RcKgg1-mBR$lXQ#8lgD
%WgaOt"k>Z=?K23=^-)51fcd17RUP8t]@In7m/H)IB'o1rl1VS^NXVIek#[V,\YU9gMiC?6rS9OODW'PumIee&de<F]aZs'%kcjNL
%ID5u(ec9@UiORRd((`W(pOf$a4.hr?K/MPGCGo4/I.s.gCV*r$XD[sq+f_5UO2$,<a#,F_45I5Xl*OLiq[ZHS]Q&m+LGl_E32,Ec
%DZ\%m[iR_]7I<l5W;67q%W8sAbso&;e8E!$F2/dX#=La>o_9FJmB[0&4J"Lk+BrZMB5MG7?Q:,J%Q[5nh;E'o6TC1"4utX4L]6Qt
%nF_]]WVP:E"Rs-NHj*[9Gi5!6o`[ARllk[ZnX<9B2UUj"-EoY+5P2.H,MR]WE3%Rb"onPn8_%_k^=Fq9rXHDcqNt:$qt0;S!@SFg
%k22ZqQU-o1]kB=Z![L[;QW5pn^brNTg:,C#I"a$H`ise<KR^gKT5=6(IE<S9f:P+#+jN]HgW`X$]3Y?J)G.d6(JL=sB#T8fJGOld
%-cbgER/MR.D<m0N).^g8hZ!U"J,ZP>GIYU:rK8)u*.!@iq6tbCmTdJQL\JL;q;H,aIo=]*:a/uU'K!jtg?P0QT=kFeBG\K'LL)k<
%!].T9r;'KmpuuDC[lWuV=2H1u2S+["a7#Ahm9AT-,7U"6%VO[f%VD<mJ]I,,@!.$c:.jl_2OngcH<%J?@^g[]e9`c)MR@cn#E%Xa
%^C6e3X+r^m>Gc&`s/_aj;'.LH]/B2Yfaie^5`_PYS'Mpr!"Ihhma+'WqtmU$rt@_2^fgsR(n)9t+WEG3mjKKq&S'8%re+&OJW&W]
%0)CrOr\P.WY1J`73;1.K3I^U\nY2ZS&_hNEi&Zn5!K4/Rr,(AICIs6Ym6=^3%K4S^+3*fJUUe76qGdgW0)b0%VOjeVR!ZG2DE9?8
%Z_-)8fuSa!DO[*IJ9M68:SPmgE/Af6/*:RDkPXduqi;fss%Eq>P!e0!q/KrIkSLTD@j7^UQ<.5np'6R'A,$GU4qg-Z+E:;+ps[7T
%j253qX68Z\j'S;Fko!lYO+D!!M-\q^Z-(t^bJV*n#A:cC$rk#P9F.1'0OsJ"K":%P"T(b+#(?tg3[k4`J7'Q"`#$3'X9B@>YTPC&
%f!-uQQc[VGHis'EN@dR3J&p;n!X?S.0J7L(YRkCIPagMl#n$a3oTCC(\S2rX&mIsF3Y3c1PAh7OK^!$GKs86jOpR.V-'Fk\ganY7
%1o,_[R,Y!T(K*>S4gZ<S]'e:iR5D"/HZjRl5FW/((.lU^m>!%kX`3HR.uu4<cH_SFGsG%Ii(7;(9KE;mcqH`e<$#mI!t)S(=:"4(
%g+H^t,hKEL0M#sVH#\@+^l8?<8It;*8Aq$1cm]54k2Y#Zdp9d3pd-S8njm3r$\7.;<t[eSWVeFQ(uS'7JBZ&@Cq!'($8CcL"rqRo
%,7nb/5W$@l8,S-9)48af^n;--K&b0j1W`&u%Lu@SFjfkE>Rd%A_"Ve.9IG7^#mOn7\tZ`D\Pe-4!W+(Zm[f0X8D=j+J1qM\-CGb"
%LL!f%08-/X/e+0Q4uDq!i/Z.t"pPcmYX%5%U(`Ifn^p5#!X9JgZuM`u+A$5Re.*UZ%5-S7!QOY2g^PaD%*Y,b)Lje",c#MZO`Hrt
%cOlKEk7[pZ"@JPId]\]69]I`^@1Lk@^\*VSo8p>!DG@nB:+_%'ko;i$+Pe7KLOaSc&'\$lPWmJq#R?@e$SYs(M.[t5"[p:J8-Sko
%DF&:P!Uku:mLn3:^p)g["h8^^.g@arB&Q>>FW(n^+p6#f5f27#mNhrGH%6,km\@ik&<),J^gOo@7hAL.J>a0d6_l)^2Z2f],]t0F
%KIBq&VLU$]JcQaB"pXD4?Wm[O"!QSQdiINVdP)4$LYXp1)=j#Q+?4>)L2aF"`MZ0B`ta@&^k&2)a:6c0E08Mf$[gi_#j22O`"CK<
%8BRG>:m%puJO*!,N4Od0U.B,@nB3sa'F6)G9,u@j!%IChZ&6Sb_BTct69q7N!r@]>Ea0+^[32j3,;bQENX0`83CO35ArqKr3?GLK
%+A[U9iBHYW8$!i._9%!E%2j2ZA?N"e!43oOEhFV9^KV3kO>MpVM0Xn/:@\Q",`qbRLN6[@ZZMFr^5##p`(nCT+QGY'**]ECW<H^6
%90@1UTi//D8`ND$@3B7a&c"nT8jh0c!p52+1+S+',8b=8aU$fqk^t_56D3%_F8uV$,XB/Qn49M]:*kH:$;lXWmf;al!%6qXh$E<H
%dip';#&3M1+SM3iK^KADSki1LU3[#X^emIl+pM@PgjB65mtI^(6Wbe-3d`UmeB&tG1^o02"$sgG8C8(&,BX)rbrH@f*%*0cNgtp:
%N^,-@h2D3mlUYsqVt^H9U,3#jn>)-C+p:L@D..rOD)Mal6<HPYYR%c?"%dRg<0@:b==@#;,Krja'S8*aYTP!>Br]NbObO*(dYa\/
%5\M>XJO\akLXm=#g@Y[4!l8_A$B.5E6+q#?)q>J>_i<"XGh<4t@:uH!"1_%"Lg\3$4(o5GXcs0XZnRU'FrDsfekmfi/B6PN6'O0u
%mR:gPp-"7G7kO*_RKTFna0!\lmdNNI+rKO`%nXj9FX.Rd;P:`HWJP:#ggYmd]5o8aW7-dbKE=^H<eJcHW+qGWc.q#ECfH7_G1n9^
%!Zs9BkIs5$;m]5Yp.8ZAQP*2aAtVc@Y(8Mse6"+iH9r/KoM?G;;(/!EnqAht.q*Q_JHP:DYaG`!aO2`XCj.ick$Z&t(s#Mo#'SJr
%XVZTb5%+^R#bisF)5h#%"$uXSlI+DE';Qa0`[Vmf7L]BLTa:p>N(0]+!^IT*4nq;k$OT0h=N^mEKRkEQ3,t0+0YB/O#fgiL=-*XU
%%l\,2k+3;<E.SF6,lfI&k\tE#(t2;p"7]4`#Y3LT0>iucG27`4TeH\mk[:'F;)JFaSH0@/!dFpn)668Ld``,Y$?D"t-B9@FXI/KJ
%3Ijp2Yt=-^RQs6'-:_:g=IO1I5ZM?#TqOkrbu#DuMb='mHd^?.Atbb8ptR7EM*Hq,$91LES?GL*0P!&u.Q5J!.(#g^IS_thkSQ')
%RCNrIF<q>#J.=t`Hou?mN+$ck*\*"SOKj@VMh"krNLj#bU+Hd;O-.+>*jOd\U;-u!7eZ\7ImXbqXJK>E_2\BPW(';XTuCf['[cY2
%OQh]aLXJtC*]()o)6X@BJL&X$Ef*M6Sl/!8,FCXJb/DXC`qU^Xcj69U;2SgKj!k<]I4+d*FqPkT&&jmrTeR,#<i6N=CBFj$YL#s<
%,Xd"gp)"2Q(pNH4JIu8/VEl%0M3!pF-7?r[hm\?06<WGRE`BnXVs"^"M^-ZL1qPD4,,07G5Qk]md-q?M*SAq85H]:-"Au%11_l!T
%d+XnH0T2_1!JunnNYlDl>;FdbS,sN7*YVTR"AWD#BLOq\Us\g#f`u,kZpoTn<Vqn\b"hj7EKJ0PkU@r2HmA]W&J\]E>5ecK*`t^\
%:;#P.Yc8,[J/t%d,Q&]J)-U8H+`kQh3YY=>>:'hV(C+PL5$1^KM;a,8",=3,T:)RMmhch)!"R*kV1[[#!+CuiJphTJ5(T<cG4E]\
%H2Jh(&jRGMF5N]%ct$cZ>68pp@8ACf-"e?VMa9**:i<P!GdBMKK+o[)@Mr0SLr%dt9L8,KCFYESO2T"s=+DdH%P#k7'Sb/r6XV9N
%:@Fj*`gMfj0L%C?h3sMJ/370ni4spY<b&pQOfm<-ZA0k1@EI%,3YY6NW>Q>g#_lc0(9#<d"8gZ<PF=#^h$&@Bfa:t`$O_[I+)mL-
%ABM>>(jhP_![A9W"cT5[TEr1^@@(l+2/lG9<W_"pB!f2O9I)`;X;oE38F`9-OiVemQkCHu"Iof^CGBnYTu^E]?iu.:'o:LTLDDTQ
%lr7\7s)=b`@Mp5Kh/'kf+P"A,a;SIfB7k4;?q@]FS-.W6JW8$L1)7[SP7#E7@VFDU%tj3p9VB3n.5;ZQ!$d7:PFj"jpkClsH8r35
%L^_=cXi]N*c3cCL.bg(@.SVOCUY>n=gQo&SJq;5?aj\)_,-[9+!]DNtUV&u]7c)SIS31!K8.EXB*cloHA9m830l':SnOC53^c]rL
%)@'M=lMUbL:2*>YGk=g?64cU'7g*$10^5:_c$bNq.eI"CKo1DnDJ18COP,@Sa[/h&c?T]\&"HC9U0r0Vl[[neP/MqACbQ/]65"d&
%E(D$qh:NU??RC$X@uS;j_7;u%%Pd$2%P>J\,+]7kg^.dY&5e1s6D09&82Cc-%;?eG8JI9i"*$UO$6)CNa9!KGg$YLs'TIsc->qj5
%8h"=Z8s1q2miHjr$Nn#ol6Gf,6-e4N6#U`V@KN1C/mX2T)9ER4j!KGQPmX;S.M.EE!85rB&U^p+SC<-j64ER51aG+pbdoJ.k%Ln1
%==TID!0b.&0F_A.(l!qS"I.-)hO5=('%fsT3KjqBc7$MBOTZ?rmZO!E`,N(+]E?h2D?pGY]S-M]"D0mZ`L-)1W^mQUKZ4;5@fq))
%^nf>a+r_dQQk!\LkXNZ:<!CE'jM<:L8A,`s+H8Z+!cdVOT9+FT'.a0,U^^mU''L$(ihU!Le-pH]!IBLGGsa8TkmWq'Zj;<?qJJ7/
%%LLk8:*'c"qG=sD@*gs=0ff=>'3RBSN'`LIKafUS&8<#g)dO.id0Z\K2DJ':I-G#QEX%o\_KW6*CA0Cr'H/Ybc",bM!GgR:;[A9/
%!mD1B`<YuZEs%%P'[T1(k%M/s*s!":d"E$f@R;Ec-VZZUYgGeE9I'rf!c+E;`99]f?j";Ged)%"A=NYKgdfBb\3Q2TMl[8mNM6gs
%JrVg<'k/cu^Oe928:pNP0GGO*db=WIO7F<q9r4plAPrdQ$1am7ds[k\%)@B,D8Z_0KsF8PhblZ6@MCB5E0W>d1(9t'1,(DLf:'ei
%m>e9-C^#u+>o!.16?#K;S\`C8c+n9Z(=IS]<R_^Me)\?.f1S_d*"6EG,>ce1`7h^2m,#Q6E8?5)16MD845Dh=\54,?0Ym%09pjRI
%5l"8"cfKI8PM!^m58U#]8c'hWiF0Bkp5Y7ilPiH_XMJS)M//dh=-R@78@1mC6i.S3N`"`^E#jZ>0pbeHiCMjB&tuOBf2C=QU?;^(
%_8md-BP)op0U(9MK#6J>PA:Ir=<bs&gjmK>TVs13ju-EF?nc^SQttD6AniS301,k=g]6]K:e1rr_KV1GdXf[P=Q1\AF>Y:p@4fUl
%7Z\mZ(1A%40AG?f>Abdcg_IWOpF"C"(nQoE^prq"0Oo[u.asr?P_$YJ^aKtU*h8'o5uT`ZAKo#U,Hehi4-LKq-Dj(j?p)q>'K4JY
%[%V.Spa"Q;_cMM5&'YYU/f=1L'7ms=E$o+kQo;sB6X`_0eK7q_(bBj;MTGiofe[+TefYeH>]u;p-aBBJQa($7h9Zr'+YjsYf-hbu
%<mcjQY.t=MVef>d-^&)O)')2*+p0VL-Jb&0=[]P/0h(40Q?b<^5Sjf!pdFXf0G^Kn$:Y%cOtd!6!BC>a%HdtYfe,"Yi3K(jK:#cM
%7\:b/)e$UmiA9RMg\m[rZN4m/?`!o.Yn39YckuM+F^U8B5]B8q"#-m*$hGf"5VQfq)OGBeEeUb:P8aL=)NZ47=?p-[@5*5dhL^t<
%;@f*H*efGR76s9d.MKa!JW4VoBHIgR:m?SM9#1V=F'E:q,TJ3FNA-P(7@9et#8+KV/YVFM$O:V^.\!UAMbKP9`f;:4%!ZGn3XCR0
%5tg^GZgnP/JH)T3b=kfsr*pQcoPJ59i<KdT"jsb9$:*PeS>]44^n1f+Oq8ea,LrZ4&6R8EOuYY3CCE<tf`E_OJRqRof\R<3Yc".2
%aqhh9*KKd"0MMYpCu,D&3s2h2HqaCP^?jpZQ9n4IOs6t51)e$)*2V>HF\n0s0MUip%RXYr8>.tY?i^H.4Nr^dL`]e]Q(Bd`E8eh8
%`m.'Q&;E;;dNZ%#ipWJlj[;"k_JDEXGTp*"<f.h8c"+)@TaA`'ZM<CPE;QM+PASIP5nU!dZk[>L8X*_&1uJu/\0RFEouB2,-uQ\!
%);=.3$;YX-R"7i$f[rQNB2)_[&W7>n6D'05N)a>Oh=t.s*WSW-"^9i88b@RBA93g!S+$k((JdL,^n_C(JOrQ=-Rn=($k*i8<?)WG
%L!\su5u-13`n1r<S4_3kQknXk5>lCNW@`t(VN_99'qID)2%>5e*>J."^R1QRE1'@Xe6pRm^cpjr&/J.h'6b=IA>Wad=r<ka0L!(9
%)rsG$U!+([oHK>/j9MG>SO<^?>>T"X43S\<!GC1PMR6<.M`^qSjYFX@TKI#5WmIJFO:NhBL$Or*`kX%o3a&taNKQkl]=N125SCp<
%UcE^%#!lWO#d\<*>>rf]o+8q96=3VM_\<4->$/!aFr[LcDI!?VW_p:,:a%bJ:mT`^2W7kYK*N)-_%6obZA_/k.!3dl5C>C_?o8_^
%?^:469Q8C;'%L*u6(q$&`',t;FrpmR$+)CM8&Q*'Q8TViJ4s`NLbhVrX"^bh1gh-;&R&A3OFgjU9WAAh5p%m$1a3GZRY>/S*kJ.1
%qW6!g"C82?=I<&O`gaAQ$2uqD0Om(].]KWi+`q4B@86lgKN?[/p*EEI0GFC2:ESpZBbL6WM)K#P?5,=e!s,8*4l93n:qDX6/.oJ+
%RrR?%QNAJlgB:ksZ_E+nhdctEaQZ'1bf7<s5MQYq?$)!N;re5#ggk=*ZrOUi0[K*Uo#A[X<LEdpUWGm`g4Em1[MaWYV;6$b*RQ-]
%3RqB5IP)QZHqO_p+:fMJ,7JS-nL?"aJ\aK@I"M/bl-LK5-#8Do\49Crgmk)O':dOLX^ca5;W.lh>s=1^TkBjLBL`^ee:pme;M6SX
%Tc?j1.LMCl)Y5WkTgN%bTlD'0,7-qJXH.7aZiLfs:^i4.QdQ<tH:HtM72;&,%p`k>@$2_X!->On_@ND$MNkjB93R;\&7_.5-E52j
%@:7"J#0)qk_D'CA1Vbsr/O?VV2l)HW'oGUlbUfQ'O0;C>>2]Sc?eD4mVBbneq*M/$!#UM;+`'WcG`s*\AB9+Pa&-m\Ja)S7Z!p>B
%=(XgaCsuF"GhUFa.%<c%^ah3#_C@sZ5cE%'g;Q]Z7OZ&;5B-cm(WXL(!=sa4;S:ijVC?+E-UC?+AY<KJnUB\LDG5+cAdKV;`@(ei
%50l/-%9cpRIH!g3)SuZg3^9T\Ck4u6RdajS0M17:[>^=QducMCda<7C.kTFX!PU6gT!kAb@%:AHf43lh,)j&V75U!`a5eDEM85SF
%N.T?B)4%uohmG3d4iZX>iXm.K_[)W5OTn+Dd%n\_(2.`:&OtcF9Gl[U3sm*9R00MBFp'*u*hfIJP@28D6H1"(8$L(-$r+m/^nI<)
%94O;rbot';4utk[(R;=Y*t/Ir3LH([FkXb@Il);%0Z)`6(Wf!Wau]YuE=tRYnQ\Q;7%'K%,Tp%QJKpW;2g"b@A^uVd`?Q4@8N)Oq
%.3i$Ckp1c3UL]Ht>@raE4_7MM`!np%/@%DgYja75:gt2qK^UK[.&ra4AF%pIm)`^eU(n_p,(>1^'nl;-[22r9WjK"LI]s;n@Ed.m
%J4_k[_hQB<\=Rj^=])"-^f]f'`.79bA0eO_i!Gr=Ke5#K@abOTK4-=MBPFK27@;"5Rut88B'Re'(0%ku7AQVc(6-H`1b^!IehYi"
%XWec=ARM8RTnrdpf.[<#aLI(TPI6?JCWUZDmX=NXrCCYA]iGgO!"]rI=+Dr<0`au77r``nN\,jIeMMjMgD*bUBOb>$U_jYt[V4@Y
%.8S[bJ=9M.UBtcKKW/<.7A+$M-/(L[0Fhe6IJ02dn3WTdE1S%*j^<`L0K>G6#<lKZkT?8O%0hu`d4?t!Vb./S)h6[WV*J6%d"NPj
%X3cpC,TlQ(=QBs;<d/#lM@g$!2W!o*N&3jTV.)e#%N09hQo8[pcH8)!"Y^^'MU9(n7O?BJ.)ppD%*[iW!%6L;:^gtg^$.5XBVN@`
%_Z3XA8kkR,.XgUi@KB*JcT8kXL?:bJE&+l*-VP@PR#(!>N1./b=:'cnBO)6n[:a"h3I6>YE$E,lo8Ulo%osPbVlE"&Q'<_4!h50P
%S0AfW;d]h&I4FNKQpgR`+WQkVb//76-hi_1>^*"NV[2E!o-'L#ro]ZlNk.jge!:e$=?%uF@NT!:I=S"FFkodj%[PErf9lus9rXhj
%gBkrmTi(pUo#M+14]bu[VBs)-:i@sR#`:5Y/9!:oLZIS-"(Gb+)W'FTOq80QWC"4<PB!;MUX59%iUVA-M_oinI,QcZ?be`/de^g'
%pMG>WE4J1aaC(mF#kQE%Jkh\Yd*gKoOlRZ];$^).K(`kg3ea`@LEk,;S&T';Pa4*V@'JdX%8UECQ^%3n=]En)W;r!"/RDC#Np^:_
%Pa(kCRqe9ri&j*.1JDB]Z[7^F!&M'_p5EdBM*X1D%&-5UIpb*&Cr?Cn;2gZ9ShRE^i,FnW8#`.u>!\qPmd*Y5O:;nNMJe1,'o1/s
%&/5n+=BD$i,UKG(`g5>RIij=jGXs3Yc2!`#2.BI=P^>dkj3lNN.*knQ@sOaVD/#ULc!:`WhqFC$n0"t01Z%Z40l`/F2c4EXBk2'2
%OSpGG2:.r:V,H-]+^.R^8IP-K?5I^g_PP$O`jT]g1<?N3\uV^d#)bNb</Ak7pDhXDaseTrGC]g:FFdF_=@qPq9Kbs++p-7Gg;_(!
%p8i+b4sSmSTRoW'Z*7-[(;:,'VZCB[;ul&2h`8kZ#:BrR"5hlW5W0hoU$<:iRu9iCAkSl*bG'6'0?7']GrWO;GnY`\YOT^Z_CAr1
%b>YYg<*C5m,,<j=rIf)]k(Lk,=hYC5D%7:7bL]U(W_KsV]Fo#>W)uT[Z4W*GGreMJC(=Ju6:mZg^k+''$_%A-9eZ]':"ZP$[`LAu
%J<_lp/W;$"0a]L[MdmeHY9%-+J<]"YlqR-^KQ]J8X<fjjct6f)<C3(!/.<h-K)7g9&KtXVc"J+7.^51_7#Hj)+G,T$J>?jI5JR[m
%pa"-2'rX2!*WlkKc4Ym@/]jIXFH!cab'`W?A<Ql?4r(uR1apouKsn:T!Zq]Roor"LS9?0_b.uOPi/KP`0EhZ^"mL3tUKpZ>E'cNM
%An`dfk^YK:)Rq!q=Il87[DlH=8@O#Aj=s\>15\A+mN\N25t.1e<sT=)jcS?=$?elB1g8ii2dob*D1*?-$V;`r$InkL+u'F!iLVm$
%JeJP](s`S*HF::i_d"B![B1&Dikq!1Ks#5+DqC@k1sjep-,)+DUH")5M.p$m5==Q*%VfO0Eqs5IKs!5\p?nU%d?.q\N\bCj@3V'l
%ai"<a+N^Fr^lgMU'fe0O&J(7\!Jph=haXJr:FQm4d:cs"iB(4c"rUGN#K0i8MQK6M:[0r'$oC5*U2"Bl,R9]lW?GgS-)MqZ@$NBG
%(I`=BHVA\!Jr2Pkk(XG![DKXXY,9&;PltAKFNRU0`5GchcH(7IOqH#?-(CksmW*o(Q5K?O\i$]%)<-ZT6j-GtML5e*EL?).BKnot
%&\MGI\WnV@f[#Ul:/N/d<rW^=K!=m,JHl7n$=cc.q/5(hoLAJLYbZdn+rI(0'c<=C,SLV;/klM'VWp_hc+sGi#6r5(R\GR*[IdWF
%>'TD?1UAinO[$fZlpbACKW0mI=GSk3l'qI8`/5mR&dKSH[U(;ri[.8&i:S8Z]-Gs0&Qm$W7jO18+:=VWfVb8ha,_pHfb1mCU\##3
%9Vt=I1)89/B\cDdk+FIQ##;W8Vufan^'),BAp\UEU<Z'g]:p?<a%cmQ2N^:&&-OH.F@P`BG;bo0U7]5ORA/[QD!JW92f=eQk\*o'
%&[Mr[I.!ppB?FM7j&A^&2:5ANNA.5(OV.l1V(Fu3g^5lK+AF/R3'4%>0d`]-@+.>6M]h`8Gt3O<V8nh\$Kr\&kYjh39%KN[$c7r;
%]i5BZ9PfGf8u)I$nD.pj/4^'6W5_P!OQ*_4b`mGsaO>;tL=p>Y"4Aa#k$kd*N@uNtlj/#[iMM\hDrrbfq6Mkm-PN:CZ,oSrV+*gi
%QoYLYTFuV+OtXIobAC/qL,OAY:8;`8`p#s['!>%7rF/'XS,l);ZjhJ8`?\.R+;>=JE.P=8F7Esq`U9GE5'Z-cH.H<e2^K<.96M6<
%g`.u)R3U4JQJ=XLZRna<H+"::5hne"N)Z4>3,Ia1^prMZBd0rF_`k?``6l$$NJ17W`M<ns""kQ?=_N2Y6!/q/*7MS3``io+ZC`dT
%+XJPFE-QP!Wo`u?,'`q/pnSNUjk,04.V5=O)@C("#`0CA1tDtfDhNNZ^rD:[$MD"Mq@^+@F?^YAL1D.XVW[*!4C/;&p(jX<,D9="
%]RKg@0S2KapB[!tl'ZlA#W%kKN>Gbh8KeK[R1;\:GJ,dXY)euC/t^hOemZX9iKQe^&7E^e&2:dX\q$IT#9aClc)lCH4_Lr0%&:uK
%A!*4rHegfWX59450uY3fP.8HiN6p';J9[pf96cGg]7;>2)$&:I9N^t!auut&5aWMTJWY'f-!X!3d5'Z9auFq'()X9M,#a.$&kWGY
%*`9F8j.G(<k`@gn;efaW@7]I3C-LS0glN=Ab"L7?d_6QkqbITm-?_$M.!e*D;Dl(n0_7tj7.a++:?,?$Q[T_r'.)?BSo5@SZ-"=u
%?/ake;sgE#0[I^`0F*U=)?Qsi;A1$#cHpmSLB,!6'^]CA)Qf/Tagc-l<A;kPku+%W2[0=PFMN<Oje'&>lt^p9+GeO0Z8L/<f#i"r
%\39Ok"<j=XTL=a,V/H@$;KR:cJK,1FdjVY^0Y/E#_VA)`m=g#%!l;ei#kkfI22&i5'MNEgrB\7A_48Y&DYS0LF&Ra($B5fkH*"Q1
%+o\7DLZ'^X5rTYrK+!HW.W.bYU:<9A+o9d#.8%Q,))O9<!+G1u&E_YlH&s.Jd>,(PI*Xg_Trh2mhZU$LkZ4b;4&UF`Y$-UL>C'l9
%]rHTK>cMM772_tU1M;HR?m\[u@?:`[CVtXnkKY(GI(V(%r+dNsPga&qbrq74PJSXsnR2sE?,d-*9kKt$$/P8/I"/s?S1ldBhho%5
%/EW3Pct]?ZOBFhW!%cQa<lT)rh]re+g[[7:,W":cE%2CcA<c"Si5oh>:B_GkdSt*P!m`Z&;e2l.^h%TW:80L--^C?e*+ZM5#[tG(
%osDpiWlRQd;*D%(--W<X:l_d,]L3o;6&.$KeHY(B=/ge8P8-`N3B[@/>7:T!VYI$q>U``lLZ(5O:p+&PRr6k6Be.e_iGRIt_PUH"
%0aVn5<;#S@gk?rLbfL,lTLRd1.*ZHt?au#O17FV>+P:#`<Zua$9%]W'aA>09C[aG(f]]Dt7Fl?k+\YHV^<FB/$(lJXLFu!+]"C;>
%b=l7+T"7e[37s_:N,q'X@,`C:PC]j2"'m9*$n8XOp?cj(ONIX^QJmOhE(-dmL(G-SBe]@!B1H<$fh`QB[D:_U<^fs?\_.K'jP+?W
%37-FSh,Pr@9YOXunKs4L.QaB,MFP.6AKgKWNRrek5&U!1<BFt4Y1D=D_B?4J/eoZb1qpU:fK60.L:0i>&<;J^F+ql1G)m[F;i@R_
%fj+]qMg:P"ckHkspC)IF,`(R)^:S_/14'HG/!`n)QYugQh`aQ+KXh\R9LD2D4:6lN;!Rbs'\Q[(Y[H]MgGCT]0iTX"g`JnuJIS)&
%7$6g&q^uBs[(BG5ZjG%i-!8e]b:u)?C.CWWRYQ8e7#(,E+D.-k,>dV+LG_U:BmL<W!,[^[J1dCc1o3TYf%E#^,)BX6ND*8f?VeQ6
%KJe,?`Z7CEm&t5,A8:CLC+3CFTOK_g_s8B)7-!ec;QD5;dHcTd@D:EV5TDb1L?^.^.Iu)qcSk1m64?L5NRja(7rq=oDBer2C-BC,
%Z6-ClA4U0C..F;Z2C0XTo;*[31,d@/96aH?fIOfe8.A8hA:Q?`Ha<$depj$C,4GeO13?Xq/BP[qQo8"o)60.P^]MOPf:0[nfM6[B
%JBW=o'bB*b<cGM69huC3\4,LWXr-l\J_R`7LI$'aNDY;KOS3YtC$cnd#a2J^V]QI6Qj]TC\pK#@3eVLu/aOM3h17!#g68=gZ/5N2
%&rK7V96u0*4;`XCN.@=[7e8B)OXcRLO:8OWICKP]7OB!=(:KmiE&@#3d"Q(fPicF'<kN^O=Vk0-$5_hr6I0O8ZG9L_=q_XS0IR%@
%gH+tQ('`a)X#J(8V6ZBnUT9MJV$bBWL``G=Q")j1^G+jb7G0AtaU+l:Yf84T+QPp_P63b`8jEo*@6lU=>`Cp2O[BHeZ0@a(I*<[r
%Ce'l++7K<smQ<=4jYCaV@Cjfk5/e)B,e6X7NrM=XDltSC[]YJ_K)6$l9$Ul;N@E:+Xq1klb"l.DgCg7-gM;5nLm=CKP)KjlfJ-IO
%Qub*6o/.g>"!RLO[VCQ=?kY5p65VQ1K7cOpM%B_'UE0(#H**`.!@a#u^]BP_UmVPEO]X6[l<.YnI$^"!^o$m"(K</e^1?.=b12eP
%^bF4r(?^I*[AuO5-uAe++VBieCMcBA!%dEQ1`Z6jfi?Z7_Pg?'2-.[HqWWN'g3^ocWH:F4ct:C@j)>c`l*#l69%O,/Hs<!$?q^F<
%_ZF<,,jJt:Cm6%E+u)ZjX:Z)eTJTe,lk/+.?j"AAU4/iRF"XpPa?tb7J3Slg>V<4K:]PNsAm1I#%+SV,-i<5d^J2!teaLNd+("T?
%k\bKQ00bkR[nl2H+98'a7>"rekYBq602Q[VBY@@,k/1`ogu(mGR6kCK=oj-b?&d,=]+Vf88YE-7?NTLt]*RXVe_eg;$gN;*QJMTI
%c)di&UXGN]"Gj'8N.3AoE`\-RTTH-A_sCVa$4DPr3Pa<nSO<>Ra\qjXakakC)BpMB;.,@"HI,r^jq_;N6Z"Nnq?rJelsc'b&>*tJ
%?e.PQ6?99,-mHU!DHAj?-idW9,FV\N*K>m^#^Bb)EWt1_\kVZ/AC!3"L1i6H$.7!>DP#5u*,,9FG8',j#<Bg;b:[B3&M^:AUnZa[
%J5re)ocrh<B$p(hGT,DoU2C#$&;aDcE``bmS`3m^Cf_:X]?9970<A2Q2ZFa^kK]<ZeLG:qhN12[\KpYc`N0<W2OYe>T!4=f`l?U2
%>CX0J;iEau?1ja/bRW%8Te$X<,*&'b>Ea&',Ct)t"qI&p%=^LL?fh>a]O=>Ge?9rK8G#?:_kREY+@ZH?]+oDt,[Gpj<7+\X"W1c)
%AO?_8:`9*WX)*T8HI\b;Jt1*N77DkEW#;aIFh2_<I>]ofQ7Jo9o#2p%6W)B'jK;fP`YqhI)/$oqkC00/-2C24a]&B@TIMl/$a:g!
%9nD]#ao]eDoeY!_e.)lWVrX4aeo-Zk$[,ul;j=XMVU^fja=6E@YYlUZiUHLj?)'oP&<6O%;*a]>31$hWm'!YcmVWc-"_p25c5JWT
%U1oW;>:HS;j)N?/QIZUsNhO_'$Gn6CeURm.M]"-;9G,3IqjN$6[<]8hg0@P]1SQ37"!`7s#,-s>$$pY%'5&%8/V.g(c)[P)5gUVc
%,VfF_U;i[0nMWML9`gD*;QkBA8oo^!)_p.\VXnJQ$qOb)kY_VF/5qKAk[L,'/#Zn+Ya)BF3+&/:3!R6C.gJB`XnPat30T!%jW@sE
%Q/^T[8.GrZ98OMqTE:qN#\m?=Ufp]nI8$F]ar6R2p#N-Z\JfnanXO;:kWk^0ZBS)#Amk^_:m*JQ;ePiPQoL0XpVXa5YdO;1&jaJ<
%b:YA*hc#=KAS2L>n]Cb>-NF=D("4tBReOUKKrJfBA3E79,jmFV#j(7jRV[ZMMQ!0IDP'M]1sp[,0&(c-k3"&*?dWhM''^a$l9bR[
%Rp)3E<_IE:2"UUENp%5En0\NS,p2,iPOk+8I]S!5A?U)<JTDU<[9,DuU4q,k_qW\,bbZ.Z4XU:@T(1i&UCd5,eSd/I>rkIAEC2?J
%3Q2Z*7:(gE=gK9lqo)ac6jfIB]HVf_fB`Fa7udhUc'hg;=0piRkPa]cPXs6H^tFA8-7I8C5,s^,Xj68'Z&/oSlaB8r(Pla[R$tC=
%<.3U1"9NZl'+-%b4*0DFP6UTfn>>DAmXScFD:K\d4Xui/>CH/0^%WW"4qlG[6a%joXHL)kpacXYX@qQ(@.IcT8V?RWQ^7*;."Y#(
%CCMdhZ/R0NqRKX>Rj0;0kq0Jg<6$^9HEaf8mj@[XgV/mREJrsI!!A4@3q%G:K3.iq,oKBu<DVQ*I9B-E'aX>-%'#!af8tNS6jkTJ
%[?j/=G](Ia+S-Ji_&!J&q<8U@V!\c?#SQTqd2lW0"c?(,dW]%M0J)]-=&5I$"aB`!q.C6GPVFA+DFHNt3gmlm/QE#YMCNPe0YtZ0
%?e?d'6>@)p@7qSGQ_XIkDJVD!cIq!U9t"nkmp\X"AnJV!./W80+e#-dQ<pZXA^qn[BZq^f,9s>`GN0K"^4pE6onWafd.C:-m;AD/
%HWO&:-fS:a;RdB]n[2plnm'$$m@N'@nN[U*WYX?:A7Q2TYML-\1)gQ"Asr\Lkse,:nshcI[NZ,9d?eLU#36nP5)dYf"@grp).^Zs
%S#6c>XUoX+6.M^t787N<`@p,,.gALR!X8`(2Gu71Eq"%?#C0=g2rNbc3m]E'%S$q\+0n4:6A\%t!QcMnR_:D"KcJd2Wd.%1g_K7e
%)Hb[O#^(AaNC88<m_f2'EeGsj)j#5(DfX,%[Up[<0O2Um)a]_$(E$g5rmJA#nR6iL@#DSdjh!3b7.*_5,mmgm2V6"Q^E1=p#!R%>
%!MXUX1nCg]3/;Hb9iKJ_03gVkB`8o&$k?B5>JsHlcS[Muq;[=h/ZaFC6"_9,hXFB3+ZKri<:3]kCtD"KK+'r&&W<!XIk=[pOSO/4
%9%Ufqq?/Ka=!JIMcPlb!^QRo\$3BB>PV3I+^cL_EIpol&aIibe:*g:%]Q#>*`Z!6E/WMi[,Y9G:JaslZI)!=<:N3Z87E6>CV#=T4
%`j*-!["B[._8NJ]:>)_S6g"O5q@j/]3u)7\Qp)^5Wuqd0%K\*In""ldNanl''iq)mF)=H$F[i@[hrY/6=t*.(iA6?o;0?Z5V@0+t
%.Dm*&U^72@ip-Y]O9E0`J.a+<@nX+Jm"]:cpCgHQNZeElH]Df+[l&YW?',5ge*kD>!h(H^Z(eP<Af3kBlHJ'X_j_&P5e&oRd"i(+
%*'8Um*S1S5]!GrbrJ'fL=1uONULo,qIJ6^#=)m*)W@?%G0j'gcWEKd-O[,G@l"Eck2o-c;OmT\Z>Wu5Rg2>n4-KWk1'.LkfG=s4I
%FF^@8$$4Y^4OBFZ'(ofFXhUEhgFWjl3n#Fs:D*JT]A1Tn.Zp4i_s8m_CSPXjdWf?#DA9t\)MOp[El>EZ-Lc*MGmF#oHumWKM,V\p
%RfH"(&s1lSljA<8rO:%n&.!+P=1AIU%5"t4mM0RNQl%DEU]QUlLQ8ll,uEs,`d\b*s.P/iP7D]`M8R0QZ"X7Y&sT+unc('R@5EDD
%f"\6@#Y\\-9sXDPoZ30M(4_Zu\3s1E"(eJLk`A)t_+l>;bkVf@LeRS@:t<V885YWQL^!%j%7m-H2FQX^=iO=lR<?RqmL<&enI%%Z
%eYEEQ7<TN?M]qM_qB--279N*FpBa^N6K)<CVtHo6HCF3V>+QFaPql2Q`!W.C"j'GOWGOpBhDU/o5Hm*'2`:.0P-VGOX22-LW4f8J
%=k9.d0<77d$EhAMW/>A:d1I4KmG[B9et4_o7C:->'7c=1-=)3tX/'mGnsX&MqDG?2Mt"4*.BWrkQCD_,/7qD:3G#OP#SOog\eCt!
%&OQ^eZ&lodNF5s,KFKBP16I9p)JtFXekAm)EE*8%p9/PpG:p]UY%@3"3i+R:_FZDGK(9?_pqm,10obPI/uK#ZFm\G#'7-$sifCYd
%7r`3>aCi:CaBl&W)X4:Qg9CafDTQJHTJ@qA/AeZ*Y.n==-DcPYAP7IT<)P1C_(\4*f4su3/jTD\-`Pd3Pt[+21t?num7Nie%jNiE
%m6%f9iAd&I^@(4F/.:n]FpI:%ZD+7@,)2.4B1[Fk6<MInH.\%;>q,I*;u"jPKg&+3lb7;9\2a4N`WCP#*"2'!anPm-o>)E/L[1]M
%G"YMja#AeLi3UU]KI9(Bj05[0;(6d%LnD=.#Y*e6-p83!nrl@FJ)kYeWM:faYhE@")>?NYMMHKa;u1TE@fW1)moiANOX),[E.H,Z
%h(qaf.QVj]hbYMQ1;[&`To#pqm?[)Wbd^ee'tprHaYZ6$f-u8r+RD\8_q6kk*)W_84j_PPGmR@1@oP';I6Ch0@sp68fM!R^1uNI3
%UHFAE=1]^VWbAIbF4mfJHpf*F]))kQ75SW+l&35q!VAOQ1cT)j7geR_nVd!NHq5geUVS*FG4B=YHNOt>!_KD+f)eZ8A\!%>rGoY<
%p/KtToK(c2n;K^`j)"GmPs>rl*NmXtPoid);O]%n#t^9ke#/r&?V0Xgms5dHb#*i9NU"%K<<<a4hGQ%!F9N<'b#\bt1IOlUW11+[
%EM$MVIo77h4u"Y*X7U(e4Pf]tmV`G![7uFo<'#2^c!S/L4!E2t7U8o_2Ac,Cd%M*X^No/X&4EjFddKC][6XN:N:)%-csr@94PmF9
%!33OEM8LSN&E=6\hU6=YW6jT1/HfP.\+e><j7#[@;oB9e>@a[8.H[+,eD1r&-d2-o/=7a`U)[,2^@U5cOJ.ocr!n30Xsp)#U-C1X
%bl.TnBJ2;2XUsG#&]tA\R;_="&_Op04mZEm?Xaj,RiIr#0g8U9d-gutC[CnpibYl_Cb;M%Np:KspNj;_Pdc?1O7U+>dl!2n0PcU8
%'4>4*0<+LZ.>)op)(n)+)YA5^;LGHQaA<6G1>D\K5P!MgOQ`_5YW/pZ!r?,I>j0`%XD*4YGO&%/ZiLHQ)pU6;l"42bm:'O$ENEp0
%WTA@H[=CCgh8naOjRAH&5i9J^1m(PP:ck6$5ZF_mJVRB'!*P*ag,)a9FbXu<+$J?;P*0=uN5F67O/.Q59&C+1kN:>2q$VR;Q1t=j
%Q&ED(XM@R-N2IpZbbf@MJuIs/oZ3C3&ZYa^W5/0RPH]YJLWS9dAl%M5PbF>MiG%]HnG:EH9!9qn-V::ALW*=sl]olJ^&*/a]NtWG
%eH1,77N\lb?t(X?fU@^'3Wd^XC1`c(dhCiXnI2pRS=g/8Auu\TE]Om^)k'h9>\a*p(flJ,$]H%ci<'L@;Gf\*e=KtOlm`g!]%AkZ
%=k]qN(]o>E!A1BjXSY9VS`HuK.Wgp=J=a&1TjGEAWD_m49noX_D@J[_YV+2#&;ZUHekhr8Y&:*l\(84rI`@7]cSg8)s!6;rpQJ"W
%<KBXLX$*\O*mX)!61#CV-YUJi<8,`7\NY7p:6E?u5t@-IG(/M@etCX/(Uf`,Rk7np"j*:I1fJ9BAO!+Q+Ap>h(fS;qdhBW-MfXtA
%h#f!KG04b57;c%f7o,3(>RTU+OmCAc\-K?X#pB4+'D9t4E\+0p\=Z'M/r\g_0gNYib#bfq(^YqX2I`0>$G%78ls>mTJI0Yi(od#3
%Lmp7sl.Dc5G['No+%s0HL2]"sI6CWd:"OP#H%-Qn<jB&HI@:_OfZk%HSaW#;_)An9/@"*:jbe;:=4G7tc/Srd&'DcROo<%g/5UM?
%QPZbQkesX%.$TlB,J1W5b/4L&U7F<G5da5U^3@m!-r@H\!(g9ir7PethG!*q"Tm+.+l]XuqK.IsLgkTA!K;CEZ4[oJ]:"sqXVUuD
%<oD+CRn4J;lUAn<l6[-t"?KE8J>c)M#:/N%OpJTVH5kef9.1<n.aCe.ljC#G'T-7D\at+-[V*M_o14.s_$NnfHq5>9,35\m3k^g/
%QHCF3g_>I\E*%kQ'5)I!Z%aIrqeUa$3=6kG!;Kk5kY^6cC'*42mrO$tm-e$eTZA)`W0q;:HJ%@6.0#6C0+bGp:eH"eAW),4,3`UQ
%LT/(:YlTt23f5GNFt-(p)tPQ*,/@ETP`O<,@//DbdN_Qqa-pRCf'OP.19lu[M[\.WDr@?d&!E^1hbQqlZ9"%[DI5[p$1Pub&l7C#
%m>Y:Y]VNZ.g/hoQ?uC/k0LO#X)22dkkNukdJK]<G@\4]>qa,pQ:N,g3)DfKDW?K.8oJ/(k1O_[+r3Dm9p>5>EEI-3uVs?jM#IefT
%8b6L+GUp<@J</F\lgba.8WP/>!X?="9n:E`%MXa`MOgW?d=1q49-F:HGh;ocUIS&Rh`l>AKDTM12iG`gnZ4I5T4uO4`/1/tCQcX[
%o-s,lFW-4<6sa@18MKkV?09VWkO?U,?]PbUXc^q3rHu(k(Fb=+RlmN;N9i5CSE*t#BUIJr;#s@pIOF.\,3ZOKL*$E9RagFq*^+d[
%6esKUNc2=E%l4u]eT!a-"=*gBC?UE9ToFOrI4TCd.+ba6LeA!Gg0!?p.NTsVe\!<EmJ1cT[OpMcWr7Ve^<nXO(V/P@LY)+YDiFTl
%hP"%N'TJ0$$N[S3f_EN.FYc=&7s2,$LND7W!]i[F@hDaVEiuBHF=6Y<Q<@KD0Xn5qF87/P'21:SKV"d-:2aZ0lJ;HI]mM>>TM4-;
%-"7jIDIF\VpZmmV&TTc)o9-"+iG4->`/Q,t3"j1iP)Y,Pkb"X8)e:=2U@N)F</=ZiL4YrQ4pXYHWaCbu>8%8H;@eA"!4#V!,qf6.
%%:XYEktfg,_4r*h'[`/b8\^DDpa3S<;5pR6"8GVhZu<s/,o/]RUKdC3NL':f]%*b(4^MYo&LgfReeAJR=aIuj6!H'kjFiPr79+<g
%"ZmBLGeI]r9,g5t6r2EgiET-!JreTV(&LRj;6d[NmL9>5rC(g8MNP#W\anTYZ2%BIfMdZ2f]hEXF4e-VOOA,Ph`fn7eF!sf9'3Wb
%-]XYn;T5,FqAjS1XnS:u]=kH]$!GT4W!$F%lFD*M=.h!Mgt#]ND+tE%24mXfZM`+tLr'0+<oanCm;(GE3,"!767;@s0PWab]+mIQ
%*2`"SU"iOEK#ZJh"M1W_?``F\>R5F8H>cNS#4]iFYm=rh%m!FBDhnJVJdLMS=9`ic5C>a<i*G^jR77S9RukOe67#Rj[Nq&(9R&*#
%BUp^F+rPOY6.p'aoRN!?h0UqRN$]H#P3J?kdS^9ap$+/B4'lc=kejg*SZMhi_)tihO_?c:NKCW\<jeKU;6VBI`._gJStFifEteG0
%r+@+a)h7Ad9@@r%8^INW^#G\HA/amc;9&<Lg@=nZRBUNe[gAB77-cu+&=HefU:beTTe;SS^R#pV0m7`C(/bkc2C6F3#i:KM?J%_f
%COA=2dPHg-"*OHs:^"`.VtXJ,rZPt/We"Md%T+c)@'2BI=22%iJ.T%@/qOJMg-'UD"@u:3b=b([gXn/$"^Q:)^O>a,'7@ZQ2E69E
%BdB:LD6Lu<!')"pkV=t/DJ3\\pikn\:9sm=LY;_$s8=YKT+Qq[QQPn@J,B)tJ,_6Pr%J)D[C3YJ(!S(N\8_hHq/,oQZ$j<5^KnQl
%jPp18X'`4$s8%fViIAmDpb,u]s51P.j1kVmjm*uGmeU;jci<b^erTk$J,8\BrssM:J,TCk@O(30>HW9C>tT4IMW'V@j3-98YGlLm
%rA,bEH^qKA<[SGh<drZ-=O/HEEnId'eOL#L)Gm$6T(#SG5:ujL+=/ftON`k*2RgfN?pnu@C(3E[BBfaW93EeW1,P8WQ*QE_':LA4
%j!pbc&kpgYgdIr^'5V[__H>>sIf_:]\$S0PE`WX,6jH/[J2nG!VZ=?2H!@)[b-?<R*e9<SO>Nn,`/T>4(#+0aFD?E/%XF06EkA4$
%!sOhl,<.atj$eM[l*fq<I'PSm-qb>V(d><SU?R)_)VKS"[F^RQV7[^S3]OqJp02q17ihnt`:?j9E7R'gQ^kAHP+!6THKY`FM[lOW
%bH:'mF)g>@*cEB_A$T-DMBPi-V\G@R;tmPL.RCB%,Djr]K*0&sTMN@N*=4_,YadK$+"JZ!&+g1/'8[3raZgi3Sfok_PB=G)jfphK
%P8J?bQuBL,KC&<=LL6`Q5I4bKZG7a77Y?5g6qO-.=K0X:GZ*01LVMWp"%6H`K5k^mq:F`,Rr1mZ1@`pcQ1(sEd!b_+;4HA2Pf'_$
%$1c^Sp7FE%(r-e^H0"GWp?PK_0g1:pEe6&+HD8f9;a2<GW>1JS3qsh2g!m@J7kp2#gmU[C;WPS<8(p$o?p_Nf&KQ$pB7UIA0.OXl
%OP^sW+d\#(0"fl#6kJZTdjRH)hfrdD199/3BKEN.R;bZlK[uka-!)>k,VWTP>tule<0O(OikQtb98sU#e;!A8)?gtY24EdFb,HV9
%%E;\*R[=Ck#,W3iVGIQ]bhW("mXgQ+*^[V:AONca5,^-4-W/Dr.l"Qi`C("./iA-a&tI_<kB!.4WTlb7h&MUqAsA;&cR4F1#"Q:9
%8?iH0TtKo<Abi(hfnuZ[2"Zj.<5HB&>5@!-A,l,]o/?Uk(TJTdXJQ4DOWN6a,epBffO"hB<F,\+jqb95gj]BcZ?E.L>OWpq2"(\K
%XO\3MqY!"_Oi@C,GZDpDf/Il!r<PI-I@e#c/kB#G2/#O-FgW25YQ!$Z"7DiuJX*!-cFMQbb5N*P"`]&T>AG;hZ5A=dlm6U^Fl:)G
%X?./S]**cQ4)$e%GN5=1k5#Uk>8aqjjV>1WNa"qSAUGY8lkD+oWPg,sj/tg3HL^*4$21s'B_5"e[n68r4%.4F5S`S=Vb3&Lem)]B
%Dm/OagQ]XLc#G!/9Tpa^Anrnlfsg=gJL)4KBe_cc7XI&l9S1PmJASHWL+rd#p"ViP3@--(9YCH3ZuhHI2KpVM&bgH+-MA-J_I#-W
%<;^E/oLVrBe9_?amU#p`.N]V`Xkh?`7fF_7N(Z*9\"3b!&uU^Mm5nZHhY1c)!ko(,rDE.nn[m-:fWN-Lh1h1:1q^M_2&FpgZ/QAd
%68[-h,hct)msZ?HgARW]<6P8a&W8KC1DhUENQVW<3`to#DgGjX8WVou>,iJC?V?=j!YkH7!%fBL!^q:@,QQKMM[g%)<h+?p#3^Mf
%%9VbSIfH:Ag3CS@j0!(cjEeG"dX>U0^S8%\.md@-YE"=bQ*tcaLi)mulRjg%aH%9M2r.+:/)`r6S2+Fk;]kmo6M8$*K/Rs@3<UB1
%B:q.cY+Jis[1]$M(QGVo[/RT3VH^NDS3HU;\&QcXBd-t"Es/0-0j7c.M`(R$4_`?JL+mimQ3?G!crCn4&TH&VhQlg]`!4><)65_r
%=p"9kSE2TS(-bXE/]kHQ"!OF`7<__^rZi8?()"$in2]3aGIG1?eIX'I&:Rm?KctH$nC=$!<<S3%3g>b(W,AQc>TW3%9.F:.ZlhhM
%eMu#f78e&k5>JZ[3-:M>%S(NDl"_N2H5!'0jt^DJ98W6o9eafF/k-RS@#.-4)WM.A0p]"&<^0Zt40j]k^&$sX!bVpaWB%D`4Und8
%B_u(Q+Z?(1p<$<C:qIkNdBhFsb(!>#A\H8iX3nD[I+./MJ?cP[J'c`hf_/iOD>.hD**Ogj]>4i*S\<\P.4fBhJGH1%,A>B6-u.fS
%TQ/`mB)9Hlc'meaN2A0[Q`:J0#:cXEXQJWRm=RuDL^M>l)&p`D>.`/#$XK.Y_NnT#X/.bn!mQbPqKTt&5e;[hLSH=phN%*(]$K^I
%ElQN/@]AmHUb&W9]3^Q[:sXOObK%]V$2S_pO#;J\:,l5WCS^?Oco5Xm%YGtE*$Z4)rTBfuFKKa[fL<;_VX,IX<00O=LuN9YX[cIW
%Nh.p><'f@Pb[Id]HC'7Wabk.80+SPACt.*OWRqj'MG%qk^)RLEcf#j)o]#0)X-^@?W!]jdZDlOGo=;?je0Ar]`K=&#Bd3I0/?-Ok
%X;kNp:c0H_V*YG?5c^M.]9Zo4@[HopMSYJ."%6LZ#J_]:D8*B6O)3OUk:;;%hK\qV0jQ?FT>._O?f/]130.%U`f_a9?DaKQA2ZB]
%Z"`C/?c/HGo/1BE$bjhfitF/HUk*_ISO]dUm\)J7KtT'R9i8#gC9ml9is!Nk(lW-2mjYX(^Us*0hn8#XQ6Af@j;IW:DA!:(P,DWA
%mZ"_bMY3o*MUT^5%t%#Bkqiq$PccG%`OSr1$o[Xba&Z8S*lQJ;G?\ge"N.a(LFu7X(3[h:K7-Fe'o@hG31&()7SrNB]O@/"b\RFR
%f.[.=jhDP)c(Sli1uhg$TFdc>,stnA+]ehYSHKUl9t"$>5Fh5H'ObdelkZ+rRDqsC/1uA)!-:lc'eV_)H&n<RU7j&Jg(/7TF0m%\
%k0'(E)&,F_F%;d7DNIuNL9tDA%KF^#ma9q,4\l6SfVPp?KYI/"A(:=+!gk!`[KWYodFh4BG;B75r>?)"l=;:IOF3\gistWg3JY4#
%hFIMT"_.4s">l1B=oksGHPVLMMQuL_T6ggMpI:8D\<)SV3Dr+pneU-[,miQ!+.bt(bng,=E;MapPA9Ur!R\S]o=UOah<;.K/a9TW
%aR",kXoZ85,b3krlA6.jX"=MF]Z?dU:GhIQla_QU3CYghOcg(a`E^Ul\6=KCLNYo+g7DIpS>^!saCMiNZ?_>%8/%aEJtaZG[H'U2
%+@i407LXp8T?)?^/Ft\3&lmW(fW3EX$(8S[h5j1kWkZo9&9HU,X7sX<'aD\9XKFT<Ma[8iT0=1XG?>Jj8MZZ0f()\SZB#8339?8]
%KC]146)L6'^[F)pG"P8_DEBI.IbiQ1To3mbO0L.4hf"j&/GJhFl^U1(qAIJKr9N+p<e^\4#b2&1K1&CKUtis!qRTpQ7tj#@pLn%e
%AM"Z=\Bi4sP@A44b%;3`"f93U'ATg.bBm^bBo1:LTaD>7R,IH8(&qAYWSoLs,r!?ir<T>SFhEM<>Tq?!=\P$rC0-q!]EE7JI=M/N
%ClAbJ^YN2!G;697J+LRB"CZX[Nsrpq#XSW\kZ'7;eLOp@']V2N.Kau[hB"*J:^BTOip\,F:6n!Hp[ge;gV;Y!gObQH9gbCQ.8E/j
%=>lu;e]'GCGTiCiAp;2WQ_9%g4&FJah@[_k1Q$F&XA8=kd:&<s%R)htkBYbbMr1WQLQe==K7t]<`cVZL&H%\l_*,6;79tCAOI#cf
%<W/PU?psoF)1HoZbn%4G^5e]k7p%[8[^QiWB8$<"e<-C4A["1n51qIp1lpWkJA'Gnj^`hmC6\<$I>X5c(%">gourmZ%JW*7jr#`<
%FoQPZ#*f%X+@#S;A(Vd_M:?$u$l<l-dQE7N8m-nOol(m2]SVmpb>f.62(pKfA8/,.)GWC3MBu]Qf-)W*N\Rj>7>n"]KBDL!Qi_@N
%>6ml;A:i)B+,%A<K`YD&QKOoEMJ1DE'E<kD!ldUj`g/87%3?EL44Z*8bk>tKaGG`+7(HIDTP"A-4Tn)8]kdHgUGj@0D$gQ;fD<jQ
%X8#Gl9.O4'9hEM.6t@(5bBg:jqYSHS1YA;$>_A*Z5lTL!db\dJ]l`RgeW7CB=3?8+q2^l_cbW_c[\YZGY>Y%C]d<#>%Dsbe;Nbc;
%a7I!+CCJO(/JfYXp#eph7e_tH:BFTuc1Vo/Q+eXY3^a)c8CEM4[_QSWU(ID$pZq\KOk;Q*'K]'^3Lu1AKSUY2U,2SKG2,NeB\OA'
%^.6PE>2RG<I1E<.[GK/QSb6*=BM*Z7"@cggcqqJK(7Pc60J%-Lm.#g5_3.8p?6a9@pKX=H'VLX`[UcPsEffNuDYY499rdZ:/#)!`
%?:B50n^pRsju!p0rB4Cc.>NCZjAEf-DHKg2`Y#jm$!p"HTl,3.O`rWUJ[SHJL/tM6^JQ>Q&i:TeorY/aNCO5k6SDA!=L6,YogV<4
%@X"=L,[YaYZs/MG"B2SUpfm2")0,OT'\`ci]D;#0dL7h6I#l%XCR!sgH,7pI@h,Mf]DN=leX*ZCrm<[uq3-;Uql^!V?99&K3f1lk
%M8>=2Q::uCRS%b%SC%NPL#)mh(*MK&+2Zc_(aYUuo^1&>OT3d$<L@)7%$NVs7P9g)l/h=\$k#DOPBT@4Vf2<C"D4Qe;_-E0>)S,!
%F'1;[7,.\(++fjgLi5lp)9\=$\R26je3p2A@]-G#Lpt'\X<UkSa5ToaX]b:ONp4Ip8qY:m)aVn?%oQe"<HRGN"\sN"cF]<+Arib@
%fEF9P%q';WhA0Ue.eamf!Gdq7Y2J\\F#GE&eUkZ2*_.In)6!Tc#c?@64\I.pOod&^'VmKnQAKiV]!LsElM@H[-87<Ub[rSQ\72C&
%D)H_NZ_#`EJ`'</KiCg</HgCT;,^K&P4Fea#?8!J5uZ3]6L1lP$R!Z1dQXB;02O0gK[)9RkjQ2J/4_XM.9Za[m->XrnN=AA%FrU,
%5JH`A6$/kKch8`_7ajb&[-p+_[5ca4%X!Pb4r>"a(toI!"l*(C1B1E91d<jiK@>Q3#I^U#^-=QA,GTTl?DY0\me\_@7Sa8k=:H8n
%SopH+K02g,#tdN7Ym8<<BdSk%I6Z0R//qG-:HEWsRMgDXeMuF4ML>L!bo0m6kHokI]9-T_=f.%8'LontH7q%3jrV(na>;j&>%hR/
%21Fl^(0bqIlR!NXQ55Al8Fco_gY'E\Y0hTS<2`@FC/?kmlSW!:-u#ep'pG]b%NJ[B_]`43GUT:Ce>,RI;6TT#,6=_3(i\)YLK,$5
%-#ErIXj3$k;rh^N0_Wn9]#5P`d%_OKM/esb5sNnL\$uA7mZ<$IP;juKkWSpL."SGVNdG9rTme]9'j=l4NmZ(G>PU7(W@0\g72@n=
%TMRlG;?!5h=!a2%Ju)[2gurgZI7l&?9V-i`?r5G8aB)9g7oVC@gIoZdDM_^d)sMnrC(dX-.3SN8bK&lIOjU'kL$jBH@F(PiYAr@0
%I'q=eeK]Z,hTT1-QG5H",iXK,OBb-V8pab72j#$t<U4/Fd$nIoCW6t'9`dANSgUU(:VsATGMX%&,7[r/"dqgCn"F3\DfL#\bXcRQ
%fB-M+IkH[U#;pA%Y_au*F=;5C'?PuU;E%8`L.Z.Wm,L]p_2_W3-&OQ@TCBDJc8Rm1q4qK0/#*,op?[b*N(GZ>@q.oqDb83_&Tgs(
%:"_ik!d]4)q?SQK&L:P3nm$12@3F@'l"!8M0_Q7/!hb9Z[@OLd'okAe"n?;9P?*3b;-[fi+Irc2he+92XWf@%l<49R.NC+1)nS$B
%Y2"1jXVInr@10)mmH?jd5T!eS6^_JRVt$%Dg-_[,8*L"BG</>7ANDG8Pgh!_aI^UZEKIiHILC8MZpaD*V58d@7Zf_Sf"=PRa*Tk<
%p<Wj>jlD^g8707_ledB:Pb].ZSGFC!j<4\%8:*e\#2dn2NB*8\Jj:lJ)lsfL=;#j]fK2oCMffPRFeZ\HN:6H5h5,'$_H^U'#DA^b
%%?O:EZ)jURPtNT$)J,r^e'!T@2E).@F(/!q=qLue*QgZBdh)g_eFDm/+tNi^1N%<C@VAO:&uY'M3mHPE7m$%I;n#Me!od.&M_$(+
%[8NX409Yi6'SFqN(3b!#pihM2YA]:O&;K&m,&'mEr5YT#[R6cWD\Qi!`3RqAk<hC12aLe)/PVlAV4Re9',<*=SuZ&OaAu`"!AfLC
%<O9AJ,_^CeV$Eu#k)^\^FKq^s@Xm_@jXAHia1D<40;hQYf9_PIXd2-rA\28%\C#7G<]Ac^Wha&pEeUP`@dC+39hiYWkp\)fcM,M[
%)?;INZFed7^`Z&khuqB3&X4]QLX04CcW0BS#;)]F:Rre+pV1$;HGT8Eq9_I'pjZNNCpLC29%S/\N-`(/&t5sW;ku#;So_"hC=pH5
%I5KuEM)SYqgMVsola:*-g4A$pf-`^S>/)&J>8%PorI)pk[rM_s%E#ak`b,-l3REh%MrL5Knjf0`@QU[`>RRQRPX$?;3HL"b[NiM$
%XsFgS*3gUYg'c$=@F'#'3?[/C0Vb3^%7m#]8&+2ia8RQ@?TV@3VGN476V'4@<u`g@VJ?5uOtO#fm^Qor&/M"1LmM43:B4g=q4kWj
%"`\)iKSQmV2;%?#j"T;NPO#kUkIW>*\)[\EK:lKnL[$hV"++8kDTtW4b7YKfi)7mc:J"m^;t`XO[Gq+EMj?dG'R8+$@gR^%B+,GT
%?5nCJkm=oFPpQ]=LaO6%GAYMJr7fDuNu^BZB^X!&MPg&un=n(Z,3s]LYUb<ogKn@NdV\mVk;:M=YM!b7OrjW>$@giBXnR1?.3*bY
%?V]8W&X0/,77m=FC2(Z[>Z#<`3_Cnr*bhYjUWN/5*GJPR\?!\)Zt\@\^@_=CQBsgJJ@N]Y?:X/D-QOPJB0.M-d8&,0e>Zf\s8?`=
%s8%o\J_o#FmOqumrSs>@>M$G`='K?"_%NDu0qSuLBbq_?BPB3]7n$p%NFm_lQ^0<pF:lNm>1"0;$/HQi):`J1P:sA-O'@&.,^#YX
%_>D6@q&r-XW.'N1k@'htWcb4CSEi:bd!^ALkC%]&W$C#W79\>qWrnmRCPVTrWE1!3AhhWL$jCrogGO8i"b\htCg0LjM@F'sTD6=P
%YF/TFhLLO%,so266*7b18f[',HMXP]J@jC#?WX_$cKm9F[Dk$"DfL"Rd2FOc](4';AZ/"?Z1MDN>iO9JBs0Gmkg<"s<;k=OMeZaP
%!3RU-Mb:=(@1t8aZ"Qhn+jV9Fb0H<)nIJuXVV?,inn!'IIZrD+Q>[hh>%u;Z@uN5;lV@j@!8WJ]cPdorYIi0YoAq2>/P&$HasRWt
%RY>?'nTatI[J]l-!Vd!*>k(2'!Vc)E=+c*L"?C%uR0J9^1&Mt0##d+0Y8kkc:PmL\>77d)P>5=5c93&]A*h;*)LI?o?>SQ)/4<[R
%'J^lsS_dDi'!5rDFC'Hm_.HDM-=LV%A$>gHnmZB$&9SX?iB4UAX;PclDm)ZE"2@"-GA&IJq\SH5A8ObqM5[=0:41"-ja<#tl][JK
%Em<q1bo\JaFpHuVa$q1Wr+loGBSmOKTdrmt'?2THJMDL.m'%iu]-6L^.>q%+ClJKk-6pD/F?Kbhr;G22U&AW!`MpFam&;YHGN%bI
%@5*#DGF*(a'%=,kB%]"'aqY\*S+Md"A@gn74;<Hq7aDh?<A&58Q7;6nc4]MQ>5qUsk%3COkl*,L?+"+5YkZbtI]i@SgluMPOnU*V
%M't<C>]GuFM`UrU9!=k/HaI\dR'5%Q_LNYMZqUsg)8juB`$F0Yo%.nJEjZ>XO4lHYhalJ#Yf:a\,kf"pGW]5B%g9_W]DR!0%E/%&
%p\*o3e0hqZQBorb[k"CQ5Oc[Eb7>1]Q>cL)pC4Bc&_3fq6[?*l,ieqs/:Vcb#Df_CdSqVmWIp,OaMUcVO.Hp*iknrL2QC:*cls]V
%8`VAh2'O[Rhcos]<HIC:XOJbomp@pqGL0H!bN%.l&EA&HF8;.V%hs\^X=!.+f=9*Y#UUh#DZ9\ujkl#*$5NsM3nV']R$7ZgA3NUr
%;&=Kt^am#&Y"mTOL`j"gp,qnXqWj]#<ij355"!n'<7H+sKG$W]>(,l*fV!)q=F,?qSZhG#?i*6`>n#\/Ygf2f-i('2.-0!$\?C^]
%hRs"=5pa$EK;nJ^rOFCLW,?8\&,[Wu$M`]ZKBP!$'7rf&(tW;;/koK,+WZlO!J9RH1Df79*<0$)1-!k=p=PWb--B&9IK4driaIk=
%\[\3oW\"O>dP$s!$Gno*6p[V&Jp<(MXVTnOhH+Gof^`1^PoYCnj_:LD/3::eRM-P#eI13F*#M.LJe(rC$*@u?SqqD=bRu:a7Fo@e
%NOH05JScXh]Y>i<DqbD8WYmB;ZCW8rguM+(*Ninrr$\'I5TO&Mjee!O+L)hJ;6lQWM&=+qBsZV-"]arc;"?PMKD+pd^Gbj1h)Y1^
%Um_M$'T#;RJ30h]\t3XT%@ctVB1oZ?TZBql/GTf.=>k1Jl7D&7@6_Z2oqlaY<l56_6f-Z&/Zn4]oK>uN9eocmaOLV?m&=/H_07`7
%me;>Nm]'rO9&ktXg>fG2X`@"I/rNL]2PdPM^Njb44rEc<80nuM:g<e:_h7rQDtlQs6U1\&YVXF@cQHB/(G].5R'/.=S3fK*fXoZ6
%],WEd<n&]>Qp:D\4C^U*^XWbmVt213.c:4,6hg=L`#3"-^\#")3o]if3b!@H185t+If#C[4f4j;2>GlkRjKd=W[3%Lm9IETd#+<g
%D!J1Ki%lEme72dNs7E,b%'RB4[epOY*2mIX<*:S&Z19W;O&]JfR=56%`N\QdU`[=cBS!GZkEkL:.Y$=?J,V1H1>hodDt;#bf,qK_
%a.sUJF]R>^[!_oJmuW^9YR@=ZOD]UUE1pgc6!5'BP-<tt630\;#@^ZJOJmb6;SfGbl>);%lZoD1Gtf\41R]F&=:na$*:Ri(c+[5k
%p=[he%op'HD,Q7"q4Jpchh$?.QWsr1[N%ELB(58ARVEh^\K_i'(s!poi"t(-[lA`MfPWUm@RIj]s&CMA'3fg3S%%aCdA_\,&b)PE
%g:6CRguZQ8W:\.tXhC\l4hU;mCt'=YdOeH"N"T=8Tm>lf`hfIc_H$+XSMKFO"3jJDk3,M$q9'Y="8[TQ;e,FJ/o?BJZq&IP_!gSQ
%nP*Q&;%B,lo]WZQg+)bp.XDUpgaVNp%7(j>Jt#]hd2O"Bh$eFs-?H^PaiTJBeKrjsJ7Uj7r=fFj#3`Wt;C4\f.^0"`IgW8VV5FG\
%o(,b-[4JinQ,^Fj`![L!a,H8Tla$.8T%Z<Yq\"<hpp14%B/h5N-L=_E+pZ1[2I\@3<`tJHG.M+)3`ilm2s=C(AD80D*Y]5HNUWZI
%eo-tX"2OPCPq6.X%@C)%qnd>a1]q;9)%tlcjZ;^8a3.kn87[=YEZkEU5?55U6'#i:j.I2Fq(A=PU+r1M16AdF&N?kQiY#ITW#5%e
%`<IkO+k2b@o_0*%-m%JP9>&tb'B^"3JD^Q'+XHp4R-]:6R#DE.2L)CDqA86I\birWq@.El)G5/X<eoD8=17P0ETGBe!tQuMn_GT&
%8DG&]T2b-&Zok%0ZGK^5k/&ra:&10L8<&C#E;MoU0f<RL4d:h=H5&%A;NDNbnOZG5/9WafJ1h_r\ZoGq*,(hFpGI389'flE:'q!a
%<eq5S?"BmaWt^8`>1/>=nQq`Iis>Bp`-^pTgbrk)oGXoRRW=NC#<7<[<D]i9R7+_Ym0C=HC$YE]HiTIcfY5@kHq:3o4$j(i8eg&%
%YU*HDU>@@)"13>"^,3jY)lL[EIQ05oS4SHI8iI$]2a?G^4[rl;Le!g/,2=38)%,V0Fl_Wu9Jr,JlK+=*&Y#Ys&>6uiVY3(9UG;'l
%*+uMkAD6)1f7]oFgII.AMLFu(Rd,dHArkgPK(J%4JH[P-<Hu[SpsW+nLXF6+6?@dQWWrksQ!'k.,qZ_rnB;+Ii8uA"C;L7M67C;<
%C32nB?/#i(#bKWX0hB4CVTpZQ=CQqHJ:AjI[RR02b;%@Y65`k4h]Ep\&*)NQ;UJ)iELgG\KEGXtR?,L38;u4K.YoiFEBZX75MI+9
%Sj`Vnc5PGpP6r!P>dA%XO&/:cGh942<<&Z=:CLWn#cg7J40N\7_k(On]N]ZC-W]5\l<g.:0F^>'Dg>K\[WRg"K(HRtn;?/mKk9Cq
%;3=d\aB=qh7]M_^'WgUL<"]OgY-$Z!0W5?"[gCYD[Q@Z`\f8nVQ7:>)dF&Tdjl:e/rD/L.-Y3@l_(I-AmYY-h%TlOES@U)XN99aW
%YbW5:1Cs?fE``S\UfJFhh\iub0iBo[qPcU:flN=Ahhf63$5k-,Y\jnl'O6fqcu%dRG1S0R"L-#)WYK$a@G4.9;tY1F?bT!''l]aD
%Tbo!<6f(m_!BNg\+'j\o<Y1S1C(/berD@fSWd'NW2phfL\jQ8`*<[uk,fI2@^DJNl@kCHDekeH!QNK-oN,r7u!E3l.]8bc4JLP\J
%ERUU3DE`09kdnEcJ8.=mp:$f(`]W`q_8MRo0+pb$ijFIOZ$q_bcu,@[6s"4V87%-r]W^s]s'9O4.E#@@qJ-`H.TKH1YHt4$@u.f'
%M9HG6*cIGRQ!_?^b-mUo?C']M'.SkOs0t\Bl8icKq.*%0k&CT(c$G9/9]hN%']mgX;I*e:)&"`eKG8We<^=@=LQkK-aIp4dr'`\I
%aqTAG'a=_%c_RB=5-!,q958ub0V@P($`LkHG/EZ0oN@aDCPa@#_uuq[B%12RmmN?K'1A^@Ze-Lf2(;CFAp#7BcODs1A7.Y\VLL?\
%$nCXRBGSXOV=m-Vp/D!VN$$/n't7Lr%&'`%L_R]Va$hPIa>4kX;*mIE=DFp#+*[?-UhmqD4\MI3+s\5+()1Oier.4to#'ra/uVkR
%OGp2g6^8c>UXUfq-1qm&)f\&d_\(?!r6aK8XCGFZm;$KUWi=+YRngFC<<^+HGd5Q"Xd$N=oSZp/P[6X5dXq1,f].c2hk,A*MgA%k
%BV-%e.pJkM5G.eU&%TikB\8GC<"(5`La66`1$TIQ<0q:pBVems_uZ+%!JMTe(!uM.bSW=b2KMQ>'8li%D!]ABYq$PmgLAL10dpl&
%2^@pi<J-1s'^I,LA?e-&].CK,ImkJRhpQC)`%*(G53Kj:SRa.-nL/"QgA]Q74@U)*dEE`'(MV\>B+jSpC"2+oPpQ@c:G0t82,fk3
%A]3<AQ!SlK,i31U%!RQsc?hO8rF;M;Sg+UL2:O.`<!db;G1Ys`9!d.';?Tk+Sr^1hN%md1=O;n/\bpW:q2q,0dL9gQSAgjg4,(QW
%-C?BTQn0:u\1KE;\ll8IdDfo"DgqSe5LCgBJt<_hT_-Ys*]BQ#9H2\:!NU.W*j*+Y[>3\IU2SOrJM-ocZd(]]0L@1*<@+_e[($TA
%H.:T'S?:0d#j,TO!6\eXNOjN-Y1W&-JBF%h/@Dbs,TIO3.a#7hRih`pM*"ZoqL&jlr-$;Ud6CIt1,M)?oj,!_F+t1@HJ(oN@U2?#
%=0N,]eieBUl?Up:!8`Ro,l%8]C=Fo5)0kt.2,YXcNW'PTg,6"Lm,hY[$p2Of(sVfb6aZ:rYgZkZH):L"7DC]31auR$RKaqm=T`\/
%3&!Gq^M\lM`;q<c(_&O/`jjG>AeE&uqV&2GL#Kl!"3jF+nOMnQT\Z94TCV$RjTAMN71UEW'@jo786S_PB?;6d"g@2G-8_]SadZe5
%b?Uj05nlT7=CW_63tLT,G]"e$l>g]mP\pYfos34@B7audRoJU-N^<mj'K>5,3B_-)2rs$\G5njr39M7D+Eu9"YlhDmTBTa$H-;fc
%Ai/9>EGAN;p3I?;i&k,Z.11f"mW0=OKs>-LqP!!ta85MkkJ<ulTVLWN*^#o&EfTQ=(\T&R>'#m1<lBC0HR"B9oDkBkX#CtDWBQ?2
%+2LlRjso1sk6^naePG?aeC$qqfWcII!R^O"mJ"d?,eQ<-cr07aiM>HIg^r"H#AnFJ=;LeFENa#i=p[3j9sl[0ddc$B=YnQ.NoCNt
%#^GNRcVuSqG$o_._aTBN/QYB$%5DSdJ!jJ[/3.RT)$1"Xli&$=ig:^$\p74$h;YDr(#Q8U;/gam9nG)s'0S)!k>>(hhfejOoda@r
%+>m5fZ>QHM`l_-<$Z+^G19&1g`NX*W\;r67MrnOk@sdX&l"<rH^`Dm5`K.!9VE'+[p&-GrPW,qF8Z2V-<gQTd9QS*8AE*]E9uT*C
%;e`=$%eN<HU[M9+Y.@0A6`YeG:X-NHiT===&'h<Q#/jX'4NQQr"pR/(cLJ5M>q((-/,f.1^6Z?_MN=]L%jp".Duh;&YnXNn%uZjZ
%ZccOAO,Hkr/'R<7r'iX9g<,=>0`q<W]ct,@RnXQAPB9&u&ZR;^M2ao3!)CH-.j_ZoC?#R4%!i<CqP.997,Y,$$CK<:_iVNdnr)Kf
%2]`=B8OSJ""3EGgNlW*T!]Z$6E=I%)A2*G(KhPXM;T]o:G/ctiFqdrFpJC;NY>i:8/;Yb7CIjtPQ,<1QZBXe'c$;OHr2E"I?8srT
%1^9SqPG"qub+H(hq".VH/)I@a`T(`9HE=Ste:nZH60bJp/[9ZjV\_S>eDo5m!kTnMCsX;O`_O5d?Ph\:o8,+Nc*(9`["LJ#8Adtt
%.0'g#R6TslNSlL,*)4+&E4?]OL.]\?cE]Z`&S&TS.>8ub;_KZ`'IAf*SZHPHU2&>:dMCt[Y$OVg/!SN]4UP$k/JjKJ,#oMJqNa*-
%C7'cbTt/#47u?EhfK:&#.`3*l1I&35-sA!V6^nDLK["#1Dq!B._UJQJXrr^6`fB/iG=3[/LrSmD]c3fSY6ad963Mk"2e<JIOdH5=
%0';dYg/kNqVR05kV7TtBigHPL^/)_$l>si@0/H3`\XIRf#:Y/Vcu=IuSG/s4`R;2G:g4MfQI3rN^Cebp`R;Y+em6*a8X36))4)]4
%W#o048a*53\6r.l;".&ZB'$Z[`-rpNlTq<]nj7,%0A#91DgFKF=uX73l\-E[]n5[L<2s=#Qp&j6^<&S,n69u=:-"ZF9$&J1&MbFX
%hk/,8(9*V)jbHI['O\];K1qV(*JP$j+H&]J>*X#H9WhXGS9"5=D$kS+e-JOs/\P!A4u,s4\ob9&edCJ#VQ*/(_PDEl.LY1=;e6qi
%:t'q]nYqIWGXk^3XC[KafG5Ck\XZA>lcd,ErRJE!a`eKa_/QKYbl:tUr=`&Z5JXgQS4W,]U<('2Afn@*&l+:T&a.b0$<C57TpKT'
%_"Qi!9-RKIg!/2"&tu.L5Ai?i.Cr*@#g`?da'3&=K5f&&],[Fa<fd&*I4O:`-LCjSOm?g6^`OH4658oWNHRGi"n5;SIT;L1H21ND
%1LAJPb0OFuF?Y)VFlDSSboS)m8g8]9.1(Y^GDb?#'cC=+Pmhi:LuE@dDb:ZJ!)VX>d=Mp7Nd?Z39kBM38pnm+\05'T8QT49`Z7^7
%_9l\&LKZf5VLoFQN1>E+;.rp%)ErX,IIg?;W4XC_?O`&@eP>81/ose`'LQblW5p,.XRj/3V/j4A1Aqs*Lh@$p=UA6S)V!$MS#_*]
%;_qpYSjE2gJ>@c"DcVU^Du`TV^heLH^-S9-2%Ql`m'-]jNlT5Z0*KoZlYTO<6^Inifr\dZ>3"gB/t8'_3#koD'$T;Q7,W<4FD?2B
%C(9/C2:O.OODj]OGfaq\`@'7kdCXQb[A*4"Dl;+N1!>f";R-s[<prMr82<L8^o%>nIoP#i:9Oj3kU2G(9p4j`KE')I"!nKdZdf>R
%2t.K`na3Btf=)Q!9Spkj[_)(LI*O'e63b;,Jr)>CNTr;]=mEg;'nTTAM0/,g63g1#L1mKSPTI_cN(<Xn"$Es,g3c7hn;/KmlcJD[
%!r>tF/RfE2q=rTo?X]"C</KDScqE%>/g$2pM:@VQ^29&!mN=sEfccL(YZ4rKhB*u8#_HqcTo%2?H!4l+mpc.1>19VGN@+<o8,HQp
%&,+`<G?cHS+:[]5Pi\6bXc^s8>6(=Ip3Ru_V:5s$4G#?Xm4sqrqnDo2-q*UK9rN6jaY/!F_Y.m7DG=:H*,AX!*r9onab,^l&RLdm
%\3DR#qbST+dbI.:Akc[+;FZ?$5pi[&bu!;%HK:5>,L94.74%Z!BO\+;.>3Z3gZjBcJ?6;=&!0.]=ce'6fgij,M>[a2YJ]$uZR$1(
%iI$oTP7X%i(`,]L:n@'[DkV79G;_$BTk'Q.,.lr!Aj3qVAqQfglF-!_AVOd^ZaNe(JeTVRmT"6m*ZH2E`&3,Q"`0UoS@%<B:S(FY
%rn9Fs[T=`GTkNk%?qD&"5S'Q0+>$a!K7Ojo<<3C?%.)K^Dim=*a&EbG)";Lsh*bCs@0=e&?&a-R[QRCR<_V(M+q((ehpTt(_^ZM:
%`!QNKdosRU=l20Gjj=)1d'4[C7K,4l/$`?ETN!tR[(!6Z3QH\"&2qjJD$^ckC`d'se$d%fRFAgAGW$\iD>*q,Fr,^jd/3MT*Lk;c
%7KC*\Lh$$Z4<*u(0E]SsHU"8&G5g;3!K!5Ka:GM&kT2cZ+;O1?"i@aD/r&bE&pk&=Um!!QT7ug[[=itW\@LCR6pY0jGD6mA&+:"V
%VM;O$$\6'33t/C__ZT]<&S9ThMW98k^Z8"c;GRX=hrA%GogW@ZZD5Qg*mt2Yiu19J2,^..gc^dY4k[2\M[SJQ22[EG/2#`pB7`?Y
%icUOR\l?*/1iA:4nn-fm32N#Gi"Q`+K[4KcfbHBpJ*-<j4o\'fm?.u9ZPPi&QIZ&YF!CgZ*fV_V&,7Vf(r.5R28?VcH+#h?pmct/
%PYmL\gtS'/+QBNhZ)[LTR`Y-,``O4:i9^*O?[#i2?957,U?p@qs".5]g:!"Pq.T4fqlMq3*IC2VJ5X)b;6cF?a_9\iV&hXngP!(B
%?l#Q3X:9C%,l1O+/(6ZJ-SscQ8;K_/Jdk3diNtda$.dT'jkXD*W+h$DM.&-!&\,%1bPUd@[apF)m5k4^_DQDB[hR'6mYlY&LtJ=E
%*Z)D!diZ3d1f65o5o_%&QCY_Xmp5,36YbR@;9NIq5"F="%7fU*Mgua?d8D3E\DqrA@Wolt?OqMZ<&6V:7n]<%GtQ_9'MIYU[6?(O
%p#lZjkV,sS=EhI%pFD(j&@%o)n^HSGDpDF=_d^4!nsTo6dCr\aK'lT"Kf)i5Pic7,#$ocKng8qQ`$hd*=Y(5k^ajQ#N73ZFc_>l6
%,r4?qHOF+k;`Bt%eP&R(@HT'bHnFe:(:6mLeQ:YZN.s>U&-P6?WNO8+Mlf4jh<>]eCm'[r=<5Cbb\G0-l("cs$uiI8k\_V7VLe#P
%H(:VqUtJZ2E(,Fk9kiFpOcAsmkQg`X`q5g_0iQ?81$-!mSA%L%DcqF#Asn]'b;>$:"E[eGORCLX>Vk3QhF]uUP.3l@37Ogt\3=I*
%VB`d#RS0%YklB>D]((W=.*QmNTSF)k\K=hrP1_T.^TlC?Xk7"f+YC]5[NM$>*=lbZdYhF_?.)]`RPeGOV#]8YArY4nbII$d9dLpP
%:/75SmbNX>X[YY'Vq:ce)R(bdT.[*9(S'_4hTFXVl2=2?l,I.hH[U0.i0dl!\k0KGh-hfcBem*3muRb[BM^j-[BC'lD_!RB<VoTY
%,bFgDLF>+smUHIRR/3$=i<Zu$C3[+<#X/loJ[)n*$%[b![aC%uA1-:KmIjjl=JLMO0#q<nm1R^m5DUb-f:c"MJY3'BGdg;@qt.[W
%pV1SM>;7Dc&DJdiL28^s0QC/EmG*4UaR.kkV+k2@,e`NR)UnU3!LZtEX%DtNQcFtM"Wj7_i7rE3%KHk$-J-=H:iNRfS1%rk;LIP?
%!V@O8_K5N(!)5L8.A0Zse,MX(m=?sTLjPnrRnJ'5=p5F\J[#is;1A=9BranH*Igs8h+Q[e'cH@I:O2hZU>a`Tlg`/b@2Zt0p!0g[
%KHoa$(PsM[50pq8T_6Sm2UX9sLuR++50Tr&ENa\<r,rc6V"FkfM0*H4Ns%NS.Oi7[gSi^AC26,CDKc/lMXHb()B(MRIM%lUcU8q\
%$JD[;!L:<N=^*_r^l5Ir)K@te`jZYV!msMD:8$m9cfMAJ7k,3fBM.K;^EAZ/hItuD(rH)7:<L#&W$..Y8stD])gJt?][)KjWr6VY
%^*K=]K7dZsJieQjCM80mh!C)He$OW3kiM&(`WIRh.`aIbg0R&nKr[UQ^bMr6bB>OS6/sNr(Acr#0jN`->,g<hWeVngOYCJZi1k_t
%-*B9"C*)nl=,UB>D\Fl0AJ,<GEbd&h%b?TeY"+%VVa1R[q7R8lO%=iHCb@d,Zt51Z]>gWh-%$UcWQ44%GE-0*^k)++rj;'ObFSH;
%(J'#0DoZE/0p)GM92YC]/EZirTtVl5IYb\'4JOCm>\s#B`]gB3c&W0*2^AX3225Jc&m8#I]I.'cGP\n)8@p$e;!k:GLYoQUTkHJS
%(m*e;AV&'8j]"a!rFqmUV<.\*UuH2ZAH!0XP81^gbJu\eT/?R&TT*8V9m";\q$AicN-#1^9#+_CN;_^"T90@Q;&M]_00BrO;gP!:
%4SpejL8pM;!QNUW!OZZE;*\f$iS1ap,/-)kL=s*sK%kMfe`Y'F#dnT^DPj%A##EqDEu]<o"G)uY8ADK9IPeE#]R\(Ze/$.iMRa<A
%WS[(,3FEk^G#[/">:.BcGs-g3d@S'*CB;+P:rgh3_eu,-38UbKqDEJa.#TVP+*+eBg+O@Dc*)]s:EC-d=rf*Ke2Q-BC-_Db@fum3
%N,,:]l$,J1kUi(ZZ!7=lMGcT3k$hTSbDg0MQ.\gM7\CS/O8WXtkZdk\dp$%K/6.-u-q#k:@/7A0mEdCS?]MjWl5QDCjeH>I0+R)V
%&?FXC[&[3pkAoraq!NqM9+@(D^9"DP"f,uWn6`o\:?"dXkBpt!VN0kf'93B9?-,R?\e#eL%!7uV@K0HhJO;5P+PG]$Dm+n-FPM/,
%H_'k^'e9Lnl\)N0QU-$_DHL&9BJ)iI#^(sSX>4D$3#(rHgqR2+!aGO-IFW?8;(6o\VaR55esXSB^9"U7\RIPLdO83t1Vm&I#7>_c
%/"@L1ZjD'Ugj6ZgXbj$$2W0;,g66oKO1p"A*X-EV*[i&@E78lQM1.7ZTB]nOnqhtZ:n9Trp1:Bo/GOI9loc>"Xd4BFqGj6r\'0\G
%;.dhPX%G?Dl1&'4WbEA$-UV/T,P5i_n%2ls=@>XU2YXIUM]sn"/(IY(YZd,<TTCV7_^X*&T0^Fg+>Ksb+[gZI8:PdX`K't9>j?*_
%-6gu!Y#PgI>IO1/-7l_3cVsb`[n:j;A?i^_/rK"N(BkR;[cR+j88?:NfrbNe\2DGH(\3IIfljjFk^CXhfM:6UgpK`s3];FZUpQRH
%Blk$&V=iG9/U?G*_Fo]G<$R$"V_$.kUL%EZh'gM+h6tON8Bj]r(t"`gW,(Hr@A(S$@^%g48X<@@L&tH-fSbJ6>CiR5YI(8m%STi#
%U=!mSQ"B\H7_rS-Hl?V@>^]uu88\]?;UoP.F<I7SkH@/Nk@".i%UOmiA-="_Lu_?)"LF`!-&-?N$qq^4F'e9W8.Oi9U<=dOS>m4a
%gSRXXT&c2d#WLg^NTsfY2:_+%Kp8,8M0G*2kW$hX@%*`CcUMrJc5nE.2pZ?<85,eFDM;^0=eKKARO!lN/@NOP]8s6WdmJegIc8M:
%*Gs>1P@YUkMar`HaTn$QOV`-N/(ib28:>ft8Qg\J7\2K$0j]8bNiPnjKKJ6CF0#kta&1DG$Z]'u!mU;J1Z-]d[2P<GFP-I:"UZB^
%1`UN2SsEX_%o`4_i@?K<1eP]2jNBM$X0N1&;4[RbZs7J_=i"KC?P'J<V`Y_PL6f6`,t:B+N9R)>XDomNKLnhb6X/[`*4):o&@K.(
%^g\bs!$Q3V4q=`Sf[5n5l)'NE=j>[8m&b>&rES]>g#?tb%d@pu/"\\1P`o;C]%1^>4#4X*$qX$>a<"i2&j,=4$tABIB'Dghnh9FW
%YM[8SRjF,PR7#IN`O0,Q@"84`IoD`k>JQ0K/.iUb;<\u7"/9=C%5X[c]FIYZU&sRQC/N#XLM7[=`.\i($,W2uN`5M0eL*.md4,oR
%Mi?X+SsqD;W\#e^o-6Jah?'drfI@BpB>"M1T=EJDU\)p-P`?$V(ouJZ/')/S^UJqYfGM/&emUn@DqAZ%\%u0F)7aC+j71p2_bW:q
%3s"-IO,5QRU*lb&%QaXPL&Ht^l*TJ(E/kn,`-@iU>='i?^cV7B5Aj&d.708-'I]q2Gl0j))HZisoS4%Y\E8OAU,\ocqp^i<hrQhj
%X1kNi+p.r^+YCQ@njrQQhVYLtd<D9_>3M+kR35H<=)jKj5VnEpS_GAO6<mj;-]B_&!`0"GO&lVi4#\pS86XH%=DFX;I6:Cs+%D^$
%(-<7*$?0X9#\bgM1NqbQ!eg)I*U#'`#Q6EZ-7X'e+oCT'kFjTr*)8jJ30E_MZ]>@j<C;3/Z+='u3'(9p;1d"Z0IQ?JopWdhj]/\(
%=*=!)<-_1(i'-@bS]-A=]\BfTV3dgmNFhm]e;K<*8-'=.Z__Yrnf1G@%'P,-g]kJrk_?+4[]6/l_<mcmX:+QV_"a%)d^GDg&\0K9
%W-3&Na=A8u^o34+mC(#(9JG&#BiGO'iLKSP:]!ka@\eV.Lt<ql1[X*R/%/[FBkJ"M/a5`t'L5r<J@MZB:8ck5e991Xh](Yk8n^gm
%VK"$?k3/D:6O`]J0Qq5dW%UqFP827]PkeHr+U(V`)TY_1@]%*j4,YCqAg4ncN/7F=JE6>cU.f_ORkm"F6YM^+kJ0!#?!_2)Cb[u4
%[VoqELN>oZfhf7,FuMujGYbmjr)M_%U!_G^6>F9od.)RKZOA/K6qr;hV6<?hT^8U^h9^]=k>Zn@FtsmoYIFtFO1tP;QL$$!V^4f>
%Z_[XNoqHh"F!i6Y<GcJC2$B10&9!<j?oQ69/-3jN8r94nNX@s^CQSk1!'k/.+.8u.@]JQ,"SuIc+2AB*.$p3fV>.&QMt&"E$_SfS
%Q[TsITVo8`XnGN6j*VV8OsLZm9[dHGoT%A=+LbZiHW<O5Rm$fQ$*!dqp\smPDfKDjZ13hc85'/cL^nYL5o!fKri`Mb(-Sh("o<kX
%%:*>/2P-g1%PO.]f4IQp[+((-G=_P/Zh/Pae;:\*[+@hm_(E1/pH+$a5_8q@_`uBG6g]5o@)H.?3ENAK3CrXAdVUuW,N_D+P1)l]
%3O](m)MDZ8Ue*0$`>%>P\u%g^:k:o%B]gOJ:nY#Lr7o:K8uGOC'4]%YTMcuB^j.Bb="_LqofG?pr[LQZ<EjF/maJ"qpANrb>9\rN
%"$V7'E0GeU)?AUTZ!G#sG33`<e@e-^eEha^OHm$_HCTai0#3s<)ZioHj6_CG9>HG8.'7!dr&U<!W'Kim*^-7OUYb.^]Zh!M:iP1>
%%7mi'9/IPZ1YSGkLSd'S83NTVI;?`k="5"9jJ(bR+=0If8^!rOljc1k4-oBSM5+tr]?ZMo5M8P?[*;pLcVYB9TDnhs$8V,_\bP=2
%)^7\2+C%K]=_W\d*:FF+=WK!<k=o-OCqOpe[Ra2U$Y]#:g.0ZCES:>,BCg"`'U++>]9n4<AYk.Cfgf/,7?6f97d^iub#&6DKu;q7
%E.9kq+&H&f7:PnNKd_8]50F]'QK:Ac#$He=%6_V!mOA.kgpogr(_Z26dmSUiAP`>DdY61J?eneEH_$g3T,upb)lJ!YS)(8c+i6RI
%^C(*:3C,0Cfi%r6I&(:l1f*e6LTp]6cUSL,BO4d2gH'5d[#[6)0NF8V2eaUhMu#`"%3:fd*^i7]mtcWnE9=_oHW4!D<QDMk(\3hH
%XS"_gbfQja':&Y@gO.s,6JU\STLpk\W0U*pFbr6iF0TB_KLXIc"9qb!g0j[Ca&?\dDLm+AQm7Ikb'RbDnE6S'M<J+3m%OA4S[J0%
%LA"?Mit;OLBO*6Ic!$UhBZE`!@r@nZX?5;6XGP*"b275.c;;8Ec]7@.`(9j"$K0X.R-QbB::<MI,h1JBKi);g^aYV8"comCF?)<-
%3)HYPS*FZ14k+"kb<05LODE#e<Tes6UGa)KdC$i$(\6;;Zu>>:`2_YLW""@7ZAG8?Km*<&?R\\n*)uoBl.TkZm[>?DU7rPhglO3^
%M&V`<F:9:"-bJ;2LXW5`*_Ab_"H`>$3IrccnGiq[>""iAnTK"$qUVNGW["r1WZ)G,?[hil#qkbd2;S?ll,BQ>/W?\!0<KTp$K'so
%k"[[<4B?$-Rh(^`VZgqBr-R!h)&6L-2d>LKOO.6HF30i(3p*i,[1214MN_IoU(&ReHIPM8\k8O$*jKfRh(dF/f#I>M]BGUA#PXDt
%J_s\2jtJ=gPBAm\[0Yol<Q9IGLK=XY%@=8ancYZOg0Zb_F!=4YEgi]/HD>^FV6WVs"]\$9jCWtQ^I,kc0:M<?7HRO[M6)ufe5'`I
%fTMj2\u2rc"Qrb:**;:I)R?/Oa^\9ik.5\>iO0@\=*(p6BH/ND>M>u8`pJ=\Uu/oa=AnY@oa?=f'M]O$r3-/t\%l_2=_3@-X)"8S
%bQ#$ZW@$TBAc4^8[!;fgs624Anl#$JWNNplAd)BR@AFAF)-l*Yk<@b=jZEnS*JDo[OXgOB^_*,#.e(g"jh+.Y5)1@n+5E+,Nl_\j
%<aqa%SKe"0?9DN>m2HQ9n\m^6[eT\ErC8;eESMr_WH5KhXHLhY#gL^PjI-5fNMlBO'<_dJCJf&Yg;`*a--3`6HW5\^LmtHs1PsGl
%)XES5*/q;@;/u9MgUisH!Rr-@2R&6XMZ*Lk?Y'Ssp2mLjIeq+&Om"n/92!r0]/7)f>rn$*<m^mPh04h6kZQne;\^)Bd(5KXB1][C
%VbPf5oJBu29P6NrKW8C;0l[oTQg.0RG.Q:]6GbLrn@?eJQohGf;_*TIZ0!2AehD3@%uQRpRkG&pe]O5eG2Q,qK<U(cK#IQNr@b(u
%b12eET+gb.@t[_r"G'CJ!849da2DlJ%[dXc0X[uU,.h7D+oVoI#G6a>jB9DV(nRui>bnE8&#']iB9M>Bn&@1dbmAbr)[)-^H0Ltn
%?'ehrs-PFR16K@&4oV_fe)GlT1l\-&i1VKB[4m$,ojJ94<OO75m$pjY\]>^o@!Dp>[gn247I:HS]]ZQj@"0(m,bu4A(2fQEZ`@rW
%*#-j]'sK1QE^I</)FdD?a.n/<GHcKHco&,=0>1qqEiJVZhCGQWdD,H@HmL@1lVY&!Z&42F!GZBFmApjnA$^AjpqOWp$&.0E%M5&<
%epu>!rd8D5cJtYf]F%<Y7emU-Ctea+C]!qPEL5HVk4j&;gO?,C,U%dUebu;F_bu,0*t.Hn.G(?61g^^_KR(p8qID@,_GPi,hc(cg
%F#g8>_%VAsgmI=.0s.<3Eo+G,d3Y+j,4BPt)^D;QYLV@=Fo%-*pu,7Mp$Din>tqAAcF>@J\NXDR\O\PjUgU@,n)chP\+[QXh60%S
%rYcY!eZCW(fqg6F,@lXL&<gPtN560C;RrnUB%/5!BDV]OKeVCMDKE3ed;:F@;UC?!=J.lMc&%a:d<#V"==Od_kl#4.:u<Um3J<!I
%AT]3Kru>?2h3nI&%$mN@R:!qQ$eW<FV[>%Z\MaJuF%.gZ7L9Qd^nPbN.\os(Cri$%,!aNh>Pn6p%ahP:Cl>mnP70]ISCQ2l7OB98
%^d3R'/\l6D>rtd!):==lJNtZ(\1EeD".QiL1e3;n3/ckj3-OsX@-KMsGUVh"0cECVoKt9XBMBu0A/&'9Wsrpi<(>M=?]E':M$h+Y
%jsYcLqC%QSZu7Ht8W[oQR>=VXhDI>jd,:9eS4_pap$&Y"8atCSIW!cP\$;I_RhdNfHl]sI9sSKir)k5E3&[)FlHkKS;Jd?P]VT>M
%7;u2[Q8fD(B/d/&$Ir+s&a>Gb/NZ=bXd=iBh(4hpiEdfDHm<@IKr!l4a,b-.UmYCJ7;1FJR?nn+*7t-kd]9ig.1bNGC_i9O+cuD.
%`ZVi[)%qUcOgLU!R+Bt0T.o!c,<f*q4`KA4,U!I/\F.X$NMMSbk.lkSlOI&"7+--YibM&^[&fjVV9gQ#F"iX^M*+b=\g*5Wh-(k!
%@AN$.B\YA_VE@j-2RsJfRc8-8cOH798OPF.S2YjqbZ9bo8>&HoYqK(=.kB+XXL7<9bG%JB-@=%or?_UWfT,9qUT:fojH(:_(.#\[
%5J<?e2uT>Xl`gMq,O";BSZM[p`#(-D!BId+B(PN1P135n>ephCGKH4S_i=,?R.k2e48/.hpY;NZb.Su\SuRebJ6[-[?BLL?IrInj
%8a_Q(ZL.*i7C.;TT&/jH/>!+>)S0J^h08bQI@perm29dW*OLVVr*35$a8[/Ud4VO3&A$Z-_rG<E<*0jAlm7W'/70+T7^(pCakr!D
%hc_Bo<an*u&i?.X'S%m'"N^7[::[J,LrkXGq(:.&JX^L.mf-<f7Hq>.p[*PU@^qPs:\(VUC)X]0b=B?3#.LZPQ3ipkHWlBqWX-eN
%Dd&9'%;jn@cE;B:p^k<jFt=i0b2lD+CDBhcgHJgl[?BG+Mi1GgPTRNl)UkUS+Bb//gkM1M&mB,om\@XK5*&];><?tQ7@+YGkk(f,
%'X+5:gKcV#2B?SMLmWi:U4us_:?s!ac*-S]3.B29llml=cGT2$\)_;/MA]IG(a`(=nQ?-GKbiEOjb%m>Zk4Vg6nJT>:b%ZHB`gXh
%`+50T/Gb0Eo"EOi^"KT!q?LqO=g&?,ioua#a.<8.(u:%(:UNt(^\m,a.U=.AF34G[!DRn`ih0d=1':d[6MN9#s+g`C;6:fbK1gTt
%QY!n;A<.jKaHf5k3@g+,m7YWB8o<?eM:A7bfX383\9jq_a;*QZZ<sb2YQpu!"r#m#HSdjF^O*Y(*,JZD9Yk8olZ:qM=*Y$tk\-0`
%lVq8OVb'LiS=2C\l7KT+?%L9u=.1jE?.6*NZ_q$RL?.hoMe1(bs6&cs-'Q'sk#Q_p-(/j0Q;$;!C'iL,RPuN5<W)uZ@#f&)h,6IX
%+`'=SW9h@F@7Z'5@#SrJfKU_,pWT[m(,-Rq:/<80<S*1gp+8']-I&9EG9<kPL_tiZj/+m=!K$6h"'KSEJFSomHUrMi7M98YKM&Jh
%4L03eUYZ08o2`'")O$'QPb)%.&_LFCZ<8HE!R7-L72cF%1e&>5=qsVgMM1M`f]I232j2XDH)Hr>+,,*FNcj=q;S!d#T;266K23@*
%>h!qS`=1A4;7!dMJSV6IP@8[J>?FdX0iSo;eK!;dQiV>T)5%^RjC=(7WfH0;GZ(Z4gB:-Nau\LY-j4;Na\u])8!";'ZZ6N$."nlW
%TqhnK3cT'dG#@_O%Lca>HD:V-l>qpb1VnYq><+DP!_WF$7./INP1P7IGPmm>SY:KdM6K3#W?I;D:lV&d1208H<DS2fhucQk+u'ZC
%%OdL)\rh^%(;eSd1>N/LYSlpq<\3A$/;f5Yn?)tT4=FC@LC7=(h<aP['+;H028-0CcnsLM!n,?bmh-@f^4(h1QEE),,Y#u)UJKY4
%o;&tHSlG?f.rir"NB[[FY5F>6J>:M03@Ar@kUahs$mDI:^:R`VY#ZDr?*Z*[]5sa.+UfSa=_*P0=IsKS4W+j<k^I1J^SefWANECE
%lH5\`K8Lc%\Wi'Te56^G)r0d^S\p1U3bPD+0.N]irB?*Sns'Xkb_+?(gK"G\k+1*]?!S/7"u"W+U1b1^^RUVR`Vm&'c(Et!<,8E@
%<-%RhZ9Ym9$SqHIVgU,,;$2]W:cZ'gGYhF&)5pEb;1*@/(q"ggPK\mE/STE56*Eg@Yj8hAU=f5pJ\F\O[-.!h@HtZ<c?/YF;SDAt
%7stA6^oj)?Qng"m*EkNUbu[KF'-_UXKo-:"U[?c6-E_@7U?I30%H;FA9;^dL(gfiAj/O2P[rnM9`"kl?nQe<eIC^2&8D/rj@-X)e
%?A4lN3^"Yn\;HiGc1N&4b4^]01c`i/g2]W:ZdYeA"MbN1S/,Kt@r+XYQe]r&hXZo*(g]hVfP6SR3h\\Ym+1L:Q"E?GL=qd-fVku9
%gZ.VTX_\6@lF56lL/`q1T&UNk"a_A?&B7T>!l3ft]72oa7l.Yb8Z`qpQZlS;Y/P\-.[L.)N"I6!DPT%5e!)he&tf!.IB-7r\k;X-
%E1VD=UbO^0](&Db#ej1,BS9hf%kpu)o&S?:g`"45m>-5"L\SZl*-u7m7R)#qB0VL42?W;b%fVP[[00"h'<*1-\Si31SEWg>nWnun
%?*lr1bEFio_o>AW=;Ktn%0?^r&T'HHbl&!cr,b(jR!DhZ/d6?KN9r"MK&M%Id3ai-8k`H>@S2fR6e5l,qu6R2iTSY/B+g$D#FW92
%m1!qog83&I2;GoP\'HM]Ug@_T:\<Y73[mZO&c!qsOC"5$)R(g</D+aMMp`>m7,jI+X#$`a7_j=-nnY'sHqY0>Je-$5*0U[Z&Sh&R
%9ZSRGO0"T!cEqL6U9Du[%O,F&<f!>KM+s2mBU-_bS3$1-DD@WTNb`pVI:l3c>r<mp/=@G''q\-&[m!?iPcElO:aeu:DA6%+;,/!U
%Hka;T&E1FjWFZS1__1(Q/A\tqNc*Z4_6rDqNr69Mdd.b>$s<>.)krg?-BK;\2Ls^4JHo./&XDRT%!c%6%qC;QMA!s#rl"!qLu0QV
%'U64fF0\qLLaAdD+s9qGLQnjR<#/'o1gICUl)N>%=&t)=UC\YLs2>b`.$VtLa=?7]F%dWOKqarPM>WJmV)nuj!>R5;WPeTHD/+f@
%1FP_&Bca1O!'#g?hF\L9#An6dgOW6D95PeF$Nc>F?U'Ec%MFVD\9SXRHep+79O'1P't3FsO3Hb6CJi1f2e;1F_8TA\/]K)ZT_7\M
%NUiX?`O)ZdWm?pL#N(s#V3D(-A[Pq(?H8@pbRW&eC"JA.Ej9.*id1&9\ST@,\Ocj%A$``u3;&SN6*smI3O>W@[:=4W5E<?mVqo[j
%8c"LgeklGX+la#MXB9KGQ1A^-SjbB45uCskK"k[h+"]I@h#^DRW;JGgr!pTu!\""rjba4$oQr%&.NCLRWO3VS^S0*M:U^#ON'?X8
%];!tO5flO$&N1"3-g5i(hq:=_T"$GKplfIGTRfU;::5tr,cD%GBn5^VZ>4Z)@F(u@e)0E&IM?FD41kt1J'E6<d=(,,EDd8-fQ8fE
%C\-ZK&a:\tO?b=c70TDhQIkH,77].R<K<.i^4-TAm:0?rP6tgJ;fB]JDn0VX&EL/Sem9%[c>ZGcqk5k4C-cH>Cbipo04$"jZqo,X
%!3Tg-J+Do\>K:uTfFY3lI_Y`.7%QAALH/&+91jFkO^'RT.C)O$m*4^t;A8kpkCWG$O<Bh:CWg3@Z4eZf<2[!05VerF(c1=?^S?Qp
%06&6WEa!;$@@6`]:T@u`KHa""2c>*,!0jhG\=9<_Rq:cb&Lc03@4BZ>Q&t%I1*rM%)>fjNF^KL7(TIXTb<V).SC82rNpoK^6M.U,
%Mj^ZXPNI:8:U[sgn8m0@TOt+SUs)+>J-+RKbB03C-<6MPT2\*WRF_5nkL6NWZ@]>mPt%/$98&On*L"FF/HE=.C3:4jQ]^LU0'mP6
%Bp+F-RfC%sdXI#^.I!*!os31uDg\,oKc^L0F<n([$-G!AX\CfeUZkb+>R-jo#_YTXaAt#ce.)dq*uB1'YBqsAF71oU"',Uug9Rb@
%0rgD3V<C8L7IJ;r_=3;Slm:J[A!VcO\aH&J'jlDb!^:Y2YB*CB8+G"sO"*lOdhj@*>!r(de?S5_*"d\djoR93?ll;e[J^%Ec-ebU
%pQ&7'RYCt:b#Shk-\BbX8hC"<@J^uN(rm&=__rFkU:L,6Qg-JoP3(:ZU/6hrLJ(1P]rBXS\gNu(@mq%HA1Zh=J7)!bj6L9<$'Nso
%A.-l13k\WH6[:)Alm`uLEAb3p12K'`9a7W;/_=l`on8mYf#D_0p%PLY>FnVdOX1:g]7)eAmqI7?WU$7"C*Z%$LGMXe)nfYk9M.E(
%CfR]EjCF#$Ra7i#l@#JF:-W9)XcpcEboM&')[lI=ZX*k,ZFnI]3B]Z3Bs)c)Fthj<Yj!GZSW]3"?6Yqur+YJ0[]"eP'WGD&7%@"0
%2dl=2o`?g#!?RsL\L$4k\^De\[XZq"ig@hXa0tndCDqfN/$EH%LJII&\+[=19Z^A(m?BUUdJZf*4j=hc6[#m;XW]lOf&(n:NFq03
%RUN&''Q@%`"fRl%N3)pKL]mAcNs<D>C[2jMOVVGI@b4+u\Gu^OgVFJp&5cJc9WF>O&CIq)I`eLHJ7IngXX@M:j&64b+<P@)2o)]$
%3#eCuAVBj?MI,mC15<oG/k%fMSq[F:G;+C]ZbS6@I*f/oV-gP<:.[)&bH;IrCsj6*#]sfY5gGHu0%BWlr<1;C<Nd#>%LUgjl*Xao
%)HmXULehcsqWB=m7Al#EA7'_B;BE0Ch]+N;V%R'm@nfFic?1b_ZlMSH6srWFDCI/=lq6_mf=]0fjHt-3"<s098^pEZObc^^o$(is
%j^>Xg*O`3P?H[_p4/*f\Z9bU\Z7G8/n*$'33KN,=^*I9rOC7;pe-SnMjuRUR5C2FH:+)bR&\k_92K*uJH_7kC&]9u/Y8d4K/ZEkI
%"]\m]:Y?9Rp3GLjGD?;CeOGLB=jf&V;lI(./HL=blBn4#XU.91X8is%'ur],/@48NIu#DFrD+4@k:Q\.9-Md[R"R+`&/j_#oROZg
%V,EAI7sO<7%4`/9eZqIqMl9I2\\!K4YMWSN/H&"I.)C>7eK@gKPM6bF[HXX)(DGi]a>B:ni?o.XR[M/4MEObt4*M\a%%VB%iqQfF
%Q)#Hn*1ogNel^D`%%*?pA!T&`kR$_%k3ceC@]b^d.U-PMNthGB8%F)TU[)N)8s^"B<d0Hm#&m/tNst^52u!PkX4P3!@*L?=a:R`]
%iW[lQFPVA+lc?T9Xb"E#et*^1%LOUE0C.7b/U9rQSWq213MCiefUiYMp[)@4GCTE:$l)gu&O#85Yd@sMo<*GTS_I^K7]5dPXCnBX
%XJ;GbYD8!Yp5kOh&D;W9JMF+<hULgbhc,19guqr=r:"%adB-%=Y4c`J[9@6'#j#`p"%kHh"\iU36Z<+2od?B<JK5<SrJF]&m:Oc_
%?haDo.P#I[a=1hPN`,79.J4bM^,']p=HeBT70rtJY`]qb.(V0ArHl\sZ;rA/FsCO$"Qa&Rbb]>63/S5Pq*8t1,r(V?-=(]-96Kj(
%gQ:.TYsHikO!hOu7^2?!XD]@-N)e<3Y<lDf1/YE>iSt#6<\fR]JKI2rs17lq^B61Vq$/2/[#>G$*s0"%Pf78;:L!oJj`NpRcYG)b
%WlZOU2L"c^FGUt&[fke@Zf]TqQ,qMK\pSQ<9%584JUOFZoA33B`PNX*)a?;crJ#9Wf4]kZQS?S2p)a@<Of(Qke1u.,4=Ci67i`YB
%1*WW@8i/Dc:t'nW\!1:"Wab0<i>DUice`[N4'h74eZYPc%@ldhBa#cTOWpi`4gsut5giR%#A<B=I\*#%7Z?dOL\"CWn6Q#-KDFj$
%5-,4fK`h-W_5joiaKa8ZkfnAVE#km*(edrMp7H0WkGgig%b2V&b)H!?8I*G:f^MZYo%4O0pCuYMC4Lie&E_dD8X,@t=O!&1Uka?4
%*"FUI)sb!LJHpZ1G@W5+baL7%J8beF)!MZ?SqG7m<fjdDh-dC2HR@s>iAIV_b:6ZhPSEa]bh<t!@Sm\lD*Vg%`TLTLk"R0i^uWG'
%,7Kqh2%kK2dU"IqX(VOL-cS4*SnfnUB[:5`aHDgrmNm:+W'fg=@%8i2BTRo2G/@^0%G6DTB6F#tS-R=P9"h-lTH`e]\pq`N%nKbf
%1SLo%m*eO\M/JMXZYTY6W?3m2r<*EH=\mW*]>:P2c\DpY'hZisQeoJ3KkQF^/m7YkKBH@MU5XUF3pi"ZZP&:XB?d[INK$ECSL[DS
%""]f:?NJoUOJuKmT8Nsr5JIHepqVl+fSfTS?1HCJ__Z?3Lub96jJC!GUinCPc>r.8q/Cf+^r(UBj^VGAMg/+QACB_MF(2NBo8m7a
%+V6!.-IWG,<2+V^\$OPn%9hY24c!\VLX,^.C0G&TR7PcOEXXb*CMu[)iOW-c4$?Ia;RZJtN/_.._tdtCqh@LaGK8N=d9(a^$a[rP
%;,4\_[N#r#ifCA;M>hkd*q"7KEnTblXS^1VY8N6=#ECo]5B=9QE18O39j^g@5.;$dTG)S"LeS).GB*7-"$]!0>n!"'4`I<DGp8hm
%GL+B-ga>:';Cs-PH*S9h3[J@+26Ppp2]e5]&<#;^)dp#>bGQ^(YBZ$FklYCAUAcrIAMpUj@3+;h=ih)\oHd'FZbQ"lm&pVWBGtB#
%!EIP[$h<Q7X/2)":=u9Ai+sRFM^I@dn7nnQP"Wio@9Wi=5@4ZJk0+tAX5'NOIok5/@g#=EHQiC'D4O=X-!,8Dk7.A3E[%^mD9i#5
%[#6gZ)XN$kSf&[fZGGfaP-FJkGHP$&X=Ac*`DK+e]lE(%m'HFihr6Gb5*8"k.5VmsYr*ut\kV*Q'bUK[`N;=oGpPSc'dJ%hZ8`3_
%-qQITr0C&RY%`Cml$[JA&qRYp<<AB.7o\rt<Pm>NpY2Ug1I!K0@r_cXc=>Bd\jQd]nu?'0AL/9prVDScb!CeDocTS9m>R`lk\#$n
%VZsHoSR-AspuUK#Du>f\k:#VPcQdnD0juXtc^V@m=onfN^cQ"(D(mQ,^^`KL2)FU`F`BrX2->9V4,IFcngr7m53WLG/#<Bd]X;?h
%roIk;#t=?&^E^4BeCS@d90<Z$XPOWe\:_OaN'4aH&ZDCq_ilfsV.)Or<bpg/Q]KO#X1;!Hj/)YM78/LIT/K",cJi6%PNo,GN(.Gn
%9lbLQ0&QuLV($Ht`m]i)In\bfp?O8>RiM%M>Q<YtB.04_l8K#UjNA#!B;6=u2-#l42t+,+RjUQX6Y=:Xk3Vs+7i%\\"C%;,8ZEOM
%*&n/V8[(jZ_1oFE!X*6UD*f%A"ALKY42=X`UkD:Nhhgc^B*Q(p^F!J8PC8KUW\QC3j(uoREJgVXiO+('pP-,`9XCjMR=p;Ej```J
%UX*gG_d*#3!0_hsHf+aZ#qNONNt,d>'&Y4G*Q]'-oBSLp[OrI70@ZG>_^ZhP>CMIl6BkC/&aoSFg8;'Ha0Nrc:KPl&ic;`bk1sBC
%$8H7-U]l/l)R@NR"2XS/XpebKJmhhY-YS^tiU\Cc+jNOn3tRp9eP.3j&$?&YdQ!C/ds]%a-f#mMj5b0Q*KXGh??GaDJs,@bdB7AR
%NK>q@#V!H0rgrI93Al&kj(gZ[aO*Ds1Lb"l6W=Lk0PA.>8BtQBK0Y5QQJh2&G6.)&5.>.64B.ok/r'OSWbG!HX<$mDWjXjEEd@[)
%_m&^[h&'bHW/l+"/iI6^Y<[N/c7FTE?cP2."AV\F9m,$U)+2#m#iCiO+F*PEHe($73l\.WqUIE:,pL@5=pK<-U7Cp^lg<r-=&J`(
%[QU?822WJc49npgX;HZEGY#6b1A6dOY(a8HQIl%_-8-rP%&SBLB5XmM6-QhQ;2X_XiMA<YNJA(5IiAmdU>@gihRo,I[N<UD>e1HB
%HofeES_?D>6*l*+>V7fR'l0q]M9@G3=ke*U.UiIJVk`FUa^0X+D"&ZU.n`Cm(IafLZR_X6>O_/p&tm;+=mHTRl2C2kN5NVU.g^\"
%R)2c=4Y`%W"6GMfJ8*T:r`0lLnjB3JSgo$VR3f0R)(OB<,8PES-6fZ&Vp<C=KihVNUZJ/Z1[_%9j*c\rKENZbFLtE+%)1RoNY-Do
%9CI7+HGjm3'G4:U4W\9Ch,ZhfSRB2eJd4TbCa<4sho,9=RkP-eRM8'WKN9)P+h9RS?U!TdE_Yd'=;*8doXe2)NL168<(OC9,j#j&
%Ug&m%p3qXA/nV^ZT@P5JTW5Bg"Lt/YX=:;D#j8_NN[I*m$k)5^+?kmJ+&jOQ\.G:MieN8Gm1EfS*F9B!#%_c"h4XS3nGXRL0J<A*
%dn'%d0oK@@@gAX8O#A?q8KSTENT`NnePQDhAJW*>_QAgcq[9MQ!f<1WQD6)`13E\@!VWN>*H%sCBI;0dn_[AF\#.GgfsrtlqRDkV
%T?1+qPEFqR@%^SF,Yr3M.PZp'^)lA-UQb_bon,`K!?3_5b5K1SQ.5E"V=KbbWb;hFMQA2"X[q>!lA0<hPT&Yb""L>Vn\cYZLJL'Q
%8E=MQpiQA,?/h.@J`UQB3*r1iGdngX1(A'OA[Kes%0fnZGol%F,)btqX%Xn:Ls(>^[ENMZY,`#3CMnJ/-b5_f^f.G;6o19.hR@G:
%LLU'%H7@0mS69T*b=1Vme1aKdTK9!_Zj?>@,-\(1<J]X)oLo-*n'aM2DEs$cGoLR[cNhMSn(@]0GrhJ73Q_2QMMRbEH7.;5elY6.
%D)cp-;e%#;08(LkX2&<(6_aF_h#B@;@t9laG#]fVT3N:(W5U`i'UCVZP1%=h\KQ(S;)"R\2]B;+bujH%060DHMO:"A;fSfdG'XHn
%_sKp=(76(=7"gJ'9FXY8Hoq>m`IIFonGOe5'lh4.nE,Q-T]oK$Z"//Z(r]/c08YCYIqhW9k:gaa.KVZf[e6:^!p\(<a#o.mdS(j]
%5da<6mo(8U23j39OjIjfk/WV:^efO6A&L?ao,J`G*A!,h5H:spV2gKUkLr+K4LXe8)P>fqb?53[qG$ks&d<Dnr:[f%n1AIGm-\or
%]Ir^Ir8crklJ>[,$up,a.A_jT^KP\F/TDQ64TIi^A4$&?bQ6jcD<+,X9"pq!-$W'`cj(u).>=U3p#sR$\';40TqARef/\St]N72\
%FX(pB$FA^S7\o_X3lb-m;kPqZf$G[fh8`tB2UrI&,UtiH?;RdB<&QWCS,8f%'ZC>[>qLOrk$G9,eGQ3)8%gD=Z;[b'!Ii"$_!YV8
%'jeLXc1bhp6b]Sc,tBKX$g6^Z>/ki&[A.3Vis;Jq!r!612jKC+K=%#EV`lmK'qBk(Lmb2N@Vts/lUDoG4N%93?+5Mog!Id#*ptS!
%qcMC9*a7Qp_cL(nMrSVOfQN>1LXI'QU:?;c/.\BNkg\BiXDi*Dj*>@<DWg>-TJujtUUR@f178EnNB\HkpRKk.[YJsiYaU5&R-i5G
%UZj$;E\.GZP+7u7cpOEdX>T+]X5&T?&at&]UX%T\G,ZJCQJer.H":^YQbsQL9dbt,m=E9GOkU8?<-r_jb%V?n)j(mpW,hun.V5IY
%8>D/;UBG/7nWD@.?`22(:Y[njfg/n5K*jJ/.L!m;>o&:ROaIbZVR/n<MrFGK=@`S"\sir-=dVKW;mSa)PVbsG-pH#L-s!<rT\=.<
%Df(@9-nn?L7I@uG$kU#C]"m0[k^^*?(:qJ^@*#k9lk_<V,rLRqbGl1^c(off%CE,JK69#BGq:FH9m+2k2oE9a2.FXi>Zj.&!8uFR
%;U9*`aoiO./"<A8>Z6A"=s57f4tK>Gbj`-T8jhESYGGDEmtP=3SY3Z&3+<\.1^tKr'"%Xo%aXjZ1i!o=(-ki>hFa&"G)<b*)!JW_
%o$)0_UQPGEVH'qS:;+WZ.*5.&iJ,TuZTtCGQG^*E)WO+<@p/>2h"8><D?&[7C73U:I85!hZO$&U2koCAabfN,Ds8j]#=PdB44CgF
%8Trs:N9uhMDk`<].q%@/@0<?e\u'R1QUf_SSH(UT;d6B=*k,u>n"Rt]:1eS'a-^TO54DMf(*62\-cI'AQ5UC9&N4Gc0"9#?2`s\#
%rUOXg=]b`5?`%`\7s^6d?W0`7Fp]IF*k'W&VH$mX!FDD\A@<-,q\0V^_D7b,nM7&)@Jn(23b4W#p;Dnh7A)HHU_q@&7RF't/i0kB
%JV)_Vg*O/$]9lquFEI8_3;DH*iN4IJFJ^NQdptm;4B,OWLS[agIe!XkVNQY(fI=.`V$(2L\FW;_D2n7#iBMa#*Q1#4i&@(ECXPc,
%h-GnbX$']tDsss48"aN<0g$jfg@IF,BF_Y/_iN[/Z9]`t7r&W!oARYZ:ume[(c!-!+<;]8$A4Q60]2;DNc9re7<gICYMW-ThV<SQ
%f!B2n4QUR;G7-WS8$4/.>dmf)Smid&/\.Ij)7Xo5_,GEYh,:fPi?,J3&gQF"GM_P&oum,f4R)9MBh5hSNuEINW_"n$\t7**Xe'Xr
%ED0/:E60R>+">Y76bmCWBmmq>YW<#B%OT>[,SU=NinW.\SM4WLlcmd]2.i1oYc4a8BYY;<q+2ZTYY-3#7`BBaK,O=V5V.(;"tDjk
%)]AQ-ZPf-A]1fp`gSu$:"&!Pe%,fobZp?S"O_rF>[K<g0_eTF:P#(<Me7?U$UA)/ErBE@!,G>k6DKdL9E<h_M\S9d/d+L;)Do+;r
%RhB(5DAch[n!_MXBM%ZFWD=NKT`$p&`T2R1nee\-05/Q&,7._\B#Req`MFJfX$5P/duQPRXX2C):9qFMo;:<H^h9PV@$Vp2YfZKZ
%G9RSuq>7S9=UB@&.XH'&,0JbXqA8R/dH-=_qmH%2EYB+)d6)*ek1V#I1E+(_k<;HdGa/#C[-*3'L/N>:83f3MgF%k3Kh.s">'MKU
%Yt9/&*^9XSf=,425N%Q1\4sg^@Fg:P/,/i.\.<j4BQ(ZYTg*`I7O`T/:pK]haiiA90ONRsG-c'*@Fa_b#cm0d=s1\2Ps_BRfC*?Z
%O*sd6,<*g+X'qD<:f"q_nN/$#5e*$_-XsLY*jV#_!g?F+p!KCk&*I(Sk(GWeRbmpfC9oaAj<K.c\l5qZ@$G^)2;d1&k\3HD2CZ[-
%;M9h?#,EC*kje_]QNhHB)GJGe6n9XDjNFn/Hp-F!g:"aIn:uJ`ZL)V#,%1_FXmmNZb'#X#p9hGFhrLKYO3h\XUFh:;md,NDV)TUs
%c%)hFK24ladS3<4HMc/'9XM,@V8*Nb0.@s'<gCk;78kgR2GS]-2l.qhd3Y13`[`I5)Y&I&4^4)L*Z.KgSI9Lo=[6K#r@'f@N?frc
%0.qI(PN21em5et[kl#YSkF[.I9i4DXVD0cm?B;s/@Nq>VBE#TuF0MHP>V8%sG<A08XnZfBK#]\(lRQ^qfHaL%FWa6;rZhZJTWY-3
%?.pMa@]4;VR&mmkp&GSo\*J[;f"bC_oa:Po8hd-12`Y\c%:<(UqIP/!R=>!g?Q[9ubK&4uV:nT[<9!]Cb[T+3cB[2C9Sff'bJWVs
%'Ms[J*M3cZ"kh-@_3!20YUuq+:gSpD!9qjQG'YI;L%Fuc/;`;3*SiGX$g_`1m5'WTF#49pSj^LY2^F9uH_mXB0g/PZb#-)F6G<G1
%'54$qS!gV82;S8-olU?F4*Q1p_#Zog%E&gH6[X77F'!'74(2)9^lJaGEdXM!6V1aK`gj3rP"-rW%3rOJOmZp4521=,DacTZY4ZG0
%0;T&OWnStTl?LRU`Q_gcWn8\4jEp7h9//QeIEJsRcL&jdZZTdF#ZO]40eG4:pIck:#g(QhmAW$J98Y8!p/J11)TSj0n1pna?tUM[
%mIoVo[IRat4[e[-Jn_L#InubS+ka5FAWHHBi;33Y98t:&B>V@[b,`W,o&jNfMIhKTSZ2Pof<tm5=R3%ogJ`9*mHFe`p?6O9$eOPL
%.>*%)SHaFiAdXi3^MAS[1'L_10>5C.%J(3P15pk=MKm\)Gg[8!$FL1dM-#3n\h]/RYo-gDp1j8C9MXKTDA2b^I2VCi8S,iXk1[0n
%0+rVfS.*<j]H#M=+?`(8OOp.^1!FL9Cp<'b48e=gDW,7@,d/.:T7""5gJL6,>=9;#9)6TM?*2e@3$R4pU-THZ:X:8$FYe]%/t&Ro
%`Css_F7[Q%\%FU5b,kg$4rkm?(lATQ_9ItVA<h,@0Q&G^(%LC%QaV;QF3l<_d#XC9mdmc.:g2)GBJ08k1Bu$X^i+I\BrZT(f7BsY
%JL4j+rPEiCAPJ6b<'(uH/+WeUqT+0])M[iiZ=)6Oh_7N8!3nEfM*Z$)^K:.gR*5m)@a5_$m*@o;`[T,b<&>Vso!u!OZXteGh'tQB
%m&Ne+f)n8%4(2aRQ<m4IY^?VT_oRG+,hK+cA-qkAEakib>l9="!)X:Bq42Uu-3p1Ec]8G875eVZe31pOPh^ca,dNM7j4=OJogh+h
%I5=u(h[sW[9HPmZX:hkT-,5nNL^Hm)29)7D8`jD0;'nXAq58-rS;89FUTQ;a\QLQ<B(.GJ1*))Ei>0;Z$RMl^!Dk9tT!\S3mBWU_
%[['Rl7biUWds\`fAB_S&1t[D8T[#c*!G1D4U`<IZ0R(2W0/TqEeZ(CK61b)tGX9)d91Y<5`>Pad.erdiC2hV)0RK>I9M"g'OCm!O
%Gm_/oF;%-oK;\8uUpt+k];YR#OMHff'^ERk9[kktOk9kInh=@ame,EOHKmN4-\Ui)`RCNS(1hfd_qZWiL^_E2k6IE!-6E*kj+PJ?
%9nRFE]1bUf^t.O0GddIB2Qb\gi8u1c-QAr'k2>O3`$pn2%PL+-&g8B90d&Gjr1f&!N>bju/m@/?-/t?o`^-HXb5EB4a#Y6.Do?&D
%^;j82"WqEn>46uKO"unRh3&,5A7ZXQeoPs5E:f<g;rEAH_A[396t+uk*=JS#B#BQ_?``a'Y-BKe?2nW.AbS_U>S?\E[;fPM]Mtnm
%bhr>l(Z"1X^RdW3/f7UM_(95YY.InJB;c:Z<;>uYk6MnGbW*^Dnnl=iN&)aR'Wb!N*Q2VW4d1'LXX4B"!4hM&.9'5IUW%+L?^EWn
%C@1ZamD1#N.RZ`^!Z+:$obC<1]g^f)\?<?^'?c*RGU]K:)Op=qoP\O;0%#=scrUL/iZ*Uk6]k\gC%c=t^tPkFLA`kI<2t9SmELUm
%8%LH>M?]J;hDuC#g:WuU:CNotD])n%N>]'GR:@S`&Ep)+nW)Ws?fA5A!1&T&7s&s-P2rWdX!`l/[[l`=GZ!fg0Rbn#4p^-o&7d9;
%G"Pcl4R6rH>n'pY?3L%X:[HZn]`tM?H$Veb"`g@U?emk'^j%ObUd$u4`Tb,n-*ecSQ'Wd<T.H,WLstDe[)!G*N"?_c'b<#Xf\l8X
%#*[^KdmMAPK/Hur])=K_FYB?J\5LdLdXPWA?Mh6di/auTJYCNrW)APiU=(ec)kC>npDo#hY6<DHlWCWZfe^]a3ceCU8d>O3O+i")
%,pUNjliVC2*6fa%)&+),fVPP^L?CUF_6V!&*#e;DlIPRL.]J(&o88g.MR+R%9WHsqcs32>'t2=oc+/,cLeD=k!'ZIKGS`f@cRoMf
%(%?Z+\M(i'RJEY<!2*e4140n,*)km9cZt_cI56K*:?YT=:J$ih-W&IV8n3GWk"O4BFhT%H/5L`6lZ9+)c#L9fF`lA*o\i=)Da<I+
%'%gk<Ne3oCUBWs2hQd'Y;%18&ddE>@i*e^oHs2oN)H&m\PbfH=W<KMOqop_%RLRCYM/LU(hr.t!D)FRh<"30Z,dtgD2r2^_F\%SH
%rq^#9M[=rcZ]!gbW#R`d-$?)o%,/Q<05ItmS-(X:^=5"HiV:lGn?"s1,lAeQC,[Rin>K0fK%2k$F<TX"f/.0?iDpC;73<^'1/i-A
%E4,2?!9<MRqp[)A"[MQ.Se!%KA3e45M^DBYIc?jI4.'(A7cUV'^YjGHediu,;%h8&RXnd)-jJG2.uQOL-0`K;h^N"LYsr82>op?T
%GunaAQ^AdYEmgJQG3*sHdCR68Ko:A%mhVgF>\L6MmqXrcU4nn3q[0EIg>W62fa<oAC2pGk?#B\jhf)@5e$5_BeKioX]M(sLDH2S2
%Kg(Z"1gVn&_q[sNHohrQM@%U-JIlK8fQ:!PP/c9%,=L%g1YdAN@V]SM1,!$^[QKR=:r^6'kCe>:mXXUu*aSnd4-s0!prf(Q6m<QP
%dgKI08gD<m[J@a"7Y@ZuDhltcQsLNDNi_$XBTG($s&DI.$htdQ?1*n&/`nYnSK7[O:(&N^h^5'PQS><XnNjfBoA_(1!V(Z&'4?T!
%q/0#XWC_iBq+a0bhU&qg;!-m$d3##E,ZtPkrf&N&(E*>L[@1bFBJ`*rN7-R[a2)U$"$15,q7+LJg=ao[-+KJ(V#*"=?=XCXHh$@L
%V2R\AT3$Fd<=eJu)9!OqqopT4/mRG'(i.=0XuYeU9>_4X6+m[)OqT)!V.uqL)8<rC;<dWD]?VCVZ1?/LMV3S!)19rH$#Cd51qGE%
%*l:abf](<n+k`k0o6Lm4!^u#1k'`YYeJ%\@*I-dk$53a->)b$H%9S'nhES\.2)8:m_'8hu-*l8hOk)obs5_mB8u:(jekb553o1<_
%X)594W[a*b+9OYED/t(?cl\MN'Uf^.@W=2=WnKYVDQe=@PiW+&b9NuVZ34JUY+%8$-L.URaQ,-/6eP4Y3,4L8Q;n[6$aAMi*HKqH
%'nJ)`j9^^G]XjWk'FJ[%>Op67>*%C2a>,IQ>th_7#R`2%1<,^QHb=P^;k!BJKS2">/dbcjIqhQ>N*9OC3^Rslc%))CelL<<;:dO\
%XmKDO8D<:lNAO:aJ`-bKh%i-QL9ojme;0Y""Sla[M\#eahNdqf.kC=PRB^-.\NL:7Z7Pb3DA),_P+6thR'tV"VC)]gI/j`9iDVW:
%Z&*1ii^eE6%^GuH!Vmei%Ni5#Ls`2iV.r*90Jm[/2Ff=YWEj=Z-Ap/aD/2#T"g:>e!6kcNL<=tCFogNoY(2'@[E4#rHXb5V=&'UD
%X="j:f4_TH&?mph.:cR%I9N5![VjhbF;r@1,t)/Mm&6/"9k&8NI1'VSEcXm2c.8/IF_$Q`D%du9^^P,T>g-;fN)\rD)<%XNgS\-P
%>ZJf]h\O]c+l_u_cXhjs$8EYH4"PeL3Giu$L`!Z!"b!>9U2"L^);`QE7Bs,%YKL^6YCG=<&fmVj7'9$T4K!TB*t9;dn5DnJO/&=F
%['#cfZ)kFQmk(/@GjWAqA"%W(cEEb@X*<tq.';1N`@i6U(iXFqDgCS%F:q-<,&q8)%"AR@9<@d]K+.*$';sH!m/1J^Q;[.@O]%Ss
%3C=7#Wcd:3qo8uPY<FalROAYf5#";3m\<!G=]!<VES4Z4?l1W'AP$#'FAg4`_-Q^OE]+%a@qS%?k+e,"E03#5F0$W[K>C5-UO3hL
%Ob1R>MMHr7OdrjMb_HbacpQ/^4aVE,2G-V%9e3)RGl1Vc(#'3[^annsq#7B5b",!/BDOY_nU`?5J+<XRHcaSY"#GRCR(_0h.["#"
%CI936c)W,VWWk\.PFI-oTiE1@\$0%TZ4mi)6u6H$ja!`!.o[W,l89pLDFXkOS2aE2EfMOBSel*nm!2%R2>732Gl?,%DV`gnLaJAO
%#b<o!U1O7Q:TjQ+3_o2dUbi"'[u"Qo-AbIM%*Hr8?&]uH?rY]oP)J"]-]&_+_i`P@cCu2WG:sX(?D`kMGVLK91r$sHg&t:0.`Kbg
%ec5h/KG@)?XI`$4$m(ZNB5bB0Y<tjbJ'i_F[jPgD@(Q%)>@4^189$_h+;WLQ9umG1(>;=.odGc,B6UYqGuUQ`%`3$=ZNC!Bo7>b^
%_m>^^rl2-P4kK7Y,4I6<nIi<\M//FsW25&()@;(oipHK/JbL"Q[.HjLY['h82d/A1T/n9cB3JFDfiaEbn^To*'"/ZpQH^Ac[Q2R+
%c*EfR0['!F1G`YP%s$jl4EL><eL*#>a`p>E:q+l23"4$dF5u<1m^r^%"NSbb3-BRgNmT==##7nTat]oC#H`@[5Z;R^csrjUS&CEL
%Y`RS!2iTE&+8dGK[91LTA=13e.b:.r$*V,mCXi^CNLe$9hmr/\T'hV>Os4]A;2NZ*U4Y?E'(PrU#MQO@^V"Z#R,`?ZB)TE%?sm1]
%cF84XQCiI7OM&8s>$-iB,0L+iJdn6"XO`f,VY:J')lCl/($8h.[5Kl2_V%4U^HM5#-2eYhS6!XN6bH0Qhc*"pZMaW&6\Qi[-UA^"
%8"/FX/Ip9-)9e&phOgKI1Mq%a^g>?a*kp@nC#@_DQAru>((o2EaPCL3;'%"`KpF%cm)J!<)Fa&I%&?H/^5ULk]5UP%A1Dkqhtt+/
%Do>\cq=_%NB"n&rg0:*&X)T4Y2ACHOSRX37aCVit:4WW1hmbOlH8K.#s4t0!qWkV?rKf2;rMRF-rU7JtgOGUjp;]Dtqk(V&^X#.E
%i=GAbhu2$u5CWUpT>1EPs8)Zbmsk)l0AlfUkI9p[r9(imqYdUis82bE^&@`tk?i]:bKlg<Ief&>r%D)icu[!Hhu3'es8Mc-qgXj`$7u~>
%AI9_PrivateDataEnd
