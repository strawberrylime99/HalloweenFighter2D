%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 4_arm-left.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 51 101
%%HiResBoundingBox: 0 0 50.7340 100.1660
%%CropBox: 0 0 50.7340 100.1660
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:29:21+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:29:21+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:29:21+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qg9X1jS9G02fU9UuY&#xA;7OwtV5z3Ep4qo6feTsANycVeJ+Yv+cjNXvFf/BukRxWAqF1zWWaONgNi0VuhEhHcMT81xpTQ5vI9&#xA;V/Ma/uLt7zVvOmsXepHp+i5jaQR+0aR0T6RTHZO/QJGdZ8pXty0+sWeq6veSmsl9ezvJM30qy1+n&#xA;DsgmXeE+0HXNOspVHlLzVf6BeKapaTSuIGI6K8cn7th7GvyxoLchzFvRdN/5yR82+Wp4rPzzpEeo&#xA;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&#xA;XYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c3e1f62c-7752-164a-b484-8bcf86992ea4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c3e1f62c-7752-164a-b484-8bcf86992ea4</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:26596d96-37df-4fbc-9705-6a00b35527e6</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3e1f62c-7752-164a-b484-8bcf86992ea4</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:29:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>43.789067</stDim:w>
            <stDim:h>43.051119</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -100.166 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 100.166 li
50.734 100.166 li
50.734 0 li
cp
clp
48.584 86.5647 mo
47.7217 78.969 44.8203 65.9382 36.4434 63.2541 cv
36.2266 63.1848 36.0078 63.1579 35.791 63.1569 cv
34.9766 61.5905 34.0459 59.9699 32.8154 58.8562 cv
33.0605 57.3274 33.3066 55.7981 33.5547 54.2697 cv
33.6855 53.4621 33.4951 52.7395 33.1152 52.1589 cv
33.1221 50.052 33.0752 47.9543 33.0635 45.9196 cv
33.0293 39.9865 32.6416 34.0471 31.4453 28.2258 cv
30.4707 23.4851 29.1172 18.5534 26.2275 14.5871 cv
23.0996 10.2932 18.5742 7.3171 15.1211 3.3132 cv
14.1533 2.19015 12.7305 2.31954 11.6387 3.03195 cv
7.51856 2.53976 3.81836 4.99386 2.62305 9.61544 cv
1.44824 14.1584 3.35449 17.9026 5.39551 21.6452 cv
5.0166 22.2902 4.85449 23.0959 5.07227 23.9939 cv
6.63574 30.4421 10.499 36.0783 12.7178 42.258 cv
12.5645 42.6638 12.5088 43.1457 12.6123 43.7263 cv
12.6611 43.9997 12.7227 44.2468 12.7773 44.5061 cv
12.7715 44.5075 12.7656 44.5085 12.7598 44.5095 cv
12.7734 44.5388 12.7842 44.5695 12.7969 44.5988 cv
13.0215 45.634 13.3125 46.5861 13.7012 47.5153 cv
14.582 52.3215 13.1748 58.1027 12.4854 62.5984 cv
11.9883 65.844 11.3574 69.0598 10.6338 72.2556 cv
10.5986 72.3542 10.5557 72.4426 10.5293 72.549 cv
10.4248 72.9685 10.3057 73.3718 10.1836 73.7741 cv
9.68848 75.3659 9.02149 76.8093 8.15723 78.1799 cv
8.11621 78.1472 8.0752 78.1145 8.03418 78.0817 cv
6.52832 76.8776 4.40039 77.1955 3.44336 78.9255 cv
1.91406 81.6892 2.47754 84.1623 3.97363 86.3835 cv
3.75586 87.008 3.74609 87.7116 3.89063 88.3952 cv
4.39649 90.7829 5.6377 91.5666 7.71289 92.5695 cv
8.03516 92.7253 8.23535 92.8103 8.3584 92.8527 cv
8.37402 92.8742 8.3916 92.8972 8.41699 92.927 cv
9.07031 93.6862 9.34277 94.6379 10.0967 95.3772 cv
13.4004 98.6159 18.4033 97.927 21.2295 94.5124 cv
24.7861 90.2165 26.5732 82.801 28.0381 77.5207 cv
29.2119 73.2912 29.6289 68.865 30.4033 64.5432 cv
32.1152 69.0266 34.5449 73.3508 36.7324 77.5578 cv
36.5674 82.6496 38.6738 87.1482 42.6299 90.3596 cv
44.3076 91.7209 46.6758 90.9626 47.3369 89.1257 cv
48.1582 88.6184 48.7168 87.7375 48.584 86.5647 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.972549 .972549 .858824 rgb
f
24.8867 84.3132 mo
24.1553 84.05 23.3682 84.1193 22.709 84.5539 cv
22.4902 84.6984 22.3174 84.8698 22.1709 85.0544 cv
21.0176 84.4724 19.6094 84.4641 18.4229 85.1618 cv
17.6445 84.593 16.7441 84.2639 15.7539 84.3493 cv
15.7285 84.3518 15.7051 84.3581 15.6807 84.3606 cv
15.3545 84.094 14.999 83.8606 14.6074 83.6779 cv
13.6875 83.2492 12.7988 83.1662 12.0068 83.3435 cv
11.7793 83.1765 11.5459 83.0251 11.3047 82.8923 cv
10.6572 81.8313 9.68848 80.8869 8.59863 80.4006 cv
8.53906 80.2658 8.48633 80.1316 8.41504 79.9968 cv
7.4209 78.1233 4.5166 78.5246 3.64551 80.2526 cv
2.67481 82.1789 2.79492 84.5095 3.78711 86.3991 cv
4.22363 88.0925 5.07617 89.7375 5.86133 90.84 cv
5.86328 90.843 5.86524 90.8459 5.86719 90.8488 cv
6.47852 91.9602 7.29688 92.9538 8.19336 93.6804 cv
9.43945 94.6901 11.043 95.2609 12.5947 95.2536 cv
13.1738 95.6809 13.8066 96.0163 14.4854 96.2258 cv
14.6055 96.2624 14.7246 96.2849 14.8447 96.3127 cv
15.9814 97.2673 17.4023 97.779 19.0439 97.4997 cv
21.2813 97.1193 22.9141 95.0241 23.7559 92.6731 cv
24.9258 91.7937 25.5986 90.3908 25.5713 88.9065 cv
25.6104 88.7736 25.6348 88.6355 25.6494 88.4948 cv
25.7324 88.4109 25.8174 88.3244 25.8887 88.2487 cv
27.0928 86.9802 26.46 84.8801 24.8867 84.3132 cv
cp
.572549 .780392 .741176 rgb
f
24.2451 86.1589 mo
21.8457 86.6945 20.2363 86.1701 17.9443 85.7297 cv
17.2881 85.6037 16.7607 85.5798 16.2529 85.6506 cv
16.0752 85.5656 15.8721 85.5271 15.6455 85.5944 cv
15.3018 85.697 14.957 85.7995 14.6133 85.9021 cv
14.2705 86.0041 14.1426 86.2839 14.1631 86.5627 cv
13.21 87.7321 14.3232 89.8137 15.8945 89.1701 cv
16.8252 88.7888 19.207 90.4748 20.3564 90.6535 cv
20.4941 90.6745 20.6357 90.6784 20.7754 90.6941 cv
20.4053 91.2619 20.0225 91.8215 19.5996 92.3518 cv
18.8809 93.2541 18.0586 93.9509 17.3701 94.7946 cv
17.0303 94.6301 16.6953 94.468 16.4141 94.2307 cv
15.8711 93.7736 16.0293 93.3137 15.3955 92.9528 cv
15.1758 92.8274 13.8779 92.6662 14.0547 92.7912 cv
13.1836 92.1755 13.2998 91.0251 12.0098 90.5998 cv
11.875 90.5554 11.293 90.4519 10.9531 90.445 cv
10.8057 90.0393 10.2744 89.2111 10.2266 89.1545 cv
9.89063 88.7526 9.38867 88.4538 8.87109 88.364 cv
8.25391 87.2849 6.76074 87.3825 6.36133 88.6374 cv
6.02637 89.6906 6.02442 89.9118 6.06641 91.0207 cv
6.10547 92.0407 7.07617 92.8313 8.04004 92.7961 cv
8.1377 93.0495 8.26563 93.2927 8.48535 93.4929 cv
9.18555 94.1325 10.585 94.0661 10.6641 94.1125 cv
10.3545 93.9294 11.2354 95.4787 11.6436 95.7712 cv
12.3154 96.2526 13.0322 96.2849 13.7861 96.2092 cv
14.0879 96.7019 14.4053 97.1359 15 97.4367 cv
15.3779 97.6276 16.6963 97.5793 16.8438 97.7224 cv
17.3604 98.2243 18.3389 98.1818 18.7969 97.6179 cv
19.9648 96.1779 21.9121 96.2146 23.1455 94.6565 cv
24.4922 92.9572 25.8027 91.1911 27.0234 89.3982 cv
28.29 87.5393 25.9453 85.7795 24.2451 86.1589 cv
cp
.447059 .670588 .647059 rgb
f
10.6123 83.4421 mo
10.4922 83.3127 10.3896 83.1701 10.2754 83.0368 cv
10.2275 82.7673 10.0918 82.5124 9.82715 82.3142 cv
9.71777 82.2321 9.60254 82.1609 9.49121 82.0817 cv
9.18359 81.6706 8.8877 81.2507 8.5957 80.8239 cv
8.11719 80.1208 7.12891 79.8938 6.40625 80.3733 cv
5.84961 80.7434 5.57227 81.1941 5.37207 81.8274 cv
5.12891 82.5954 5.7002 83.2561 6.3457 83.5485 cv
6.76074 84.3845 7.27539 85.1692 7.89063 85.8786 cv
8.74707 86.8659 10.1826 88.1599 11.6016 87.6057 cv
12.1631 87.3869 12.3877 86.9524 12.4326 86.3845 cv
12.5244 85.219 11.3291 84.2121 10.6123 83.4421 cv
cp
f
6.84766 85.4714 mo
6.68652 85.2273 6.44336 85.0578 6.24317 84.8527 cv
6.33496 84.947 6.22949 84.8147 6.21289 84.7775 cv
6.28418 84.9377 6.17188 84.5681 6.17188 84.5666 cv
6.05469 84.0305 5.41211 83.6735 4.89942 83.7009 cv
4.88965 83.7019 4.88184 83.7063 4.87305 83.7072 cv
4.69336 83.5988 4.50586 83.5056 4.30078 83.4563 cv
3.75391 83.3254 3.22363 83.7072 3.0918 84.2312 cv
3.00293 84.5788 2.9834 84.9304 3.14453 85.2609 cv
3.25586 85.4934 3.42481 85.6755 3.63379 85.7795 cv
3.68457 85.8498 3.73438 85.9201 3.78809 85.989 cv
3.8916 86.1203 4.02539 86.2243 4.16895 86.3117 cv
4.65625 87.1345 5.46289 87.7619 6.4209 87.2566 cv
7.08594 86.906 7.26367 86.1018 6.84766 85.4714 cv
cp
.74902 .909804 .835294 rgb
f
14.3477 87.9006 mo
14.3721 87.8039 14.3838 87.7077 14.3828 87.612 cv
14.5234 87.2849 14.5596 86.9167 14.4277 86.6213 cv
14.3633 86.4729 14.293 86.3269 14.2188 86.1833 cv
14.1865 86.1301 14.1689 86.1018 14.1582 86.0857 cv
13.5342 84.6276 11.2236 85.0642 11.2988 86.7307 cv
11.3145 87.0769 11.3438 87.4367 11.4297 87.7775 cv
11.3379 87.904 11.2637 88.0417 11.2246 88.1887 cv
11.1494 88.4646 10.9561 88.7678 10.8887 89.0774 cv
10.6895 90.0007 11.5186 90.5026 12.2227 90.3581 cv
12.2471 90.3664 12.2705 90.3791 12.2959 90.3859 cv
13.2764 90.6569 14.2783 89.9484 14.5166 88.9919 cv
14.5693 88.7785 14.5801 88.5525 14.5596 88.3337 cv
14.5547 88.2854 14.416 87.6359 14.3887 87.6482 cv
14.375 87.7321 14.3613 87.8166 14.3477 87.9006 cv
cp
f
18.1758 92.9382 mo
18.1123 92.9416 18.1172 93.0417 18.1816 93.0378 cv
18.2461 93.0344 18.2402 92.9348 18.1758 92.9382 cv
cp
f
46.3857 85.6638 mo
46.3027 83.8669 45.9131 82.2893 45.1563 80.5046 cv
45.168 78.0271 44.6621 75.2575 43.9072 72.801 cv
43.6406 70.5398 42.5703 68.4118 40.9473 66.7619 cv
40.21 66.0134 36.1709 63.1189 36.0566 65.8586 cv
35.9961 67.2819 37.8525 68.3713 38.6318 69.4343 cv
39.5078 70.6306 39.9229 71.9231 40.3145 73.2678 cv
40.8018 76.447 40.791 79.7927 42.6514 82.4192 cv
42.542 83.9528 42.4092 85.4812 42.2393 87.0139 cv
41.9072 90.0227 46.2197 90.4113 46.3838 87.3498 cv
46.418 86.7102 46.4229 86.1623 46.3857 85.6638 cv
cp
.815686 .768627 .588235 rgb
f
32.3193 60.0144 mo
32.082 59.1125 31.6895 58.2121 31.1953 57.3396 cv
31.208 56.8 31.043 56.2463 30.6328 55.7942 cv
28.9619 53.9567 27.0322 52.5178 25.2402 50.8166 cv
23.5283 49.1901 22.3252 47.1394 20.6152 45.5393 cv
19.9522 44.9187 18.959 45.5036 18.9551 46.3337 cv
18.9424 48.7819 20.4707 51.0993 22.3633 53.2219 cv
22.3564 53.78 22.5186 54.3469 22.9121 54.8029 cv
23.5811 55.5769 24.2891 56.2536 25.0322 56.8825 cv
24.0859 56.6784 23.165 57.1584 22.6953 57.8947 cv
21.9365 57.906 21.3594 58.4152 21.123 59.0627 cv
20.6738 58.5695 20.1758 58.1213 19.623 57.718 cv
18.8779 57.1408 17.8193 57.1125 17.1563 57.8503 cv
16.54 58.5363 16.5801 59.6491 17.2549 60.281 cv
17.5059 60.7585 17.8398 61.2097 18.2168 61.6174 cv
18 61.5427 17.791 61.4538 17.5693 61.3845 cv
15.3848 60.7009 14.1689 63.7448 15.6465 65.1369 cv
15.9668 65.4387 16.291 65.6613 16.6221 65.841 cv
16.626 66.571 16.9854 67.3083 17.751 67.7922 cv
18.0986 68.0114 19.1475 68.3527 20.2012 68.7253 cv
20.1055 69.4943 20.3887 70.3254 21.1631 70.9397 cv
21.0918 70.9328 21.0264 70.9255 20.9736 70.9148 cv
20.6709 70.8542 20.3945 70.8596 20.1406 70.9065 cv
20.0703 70.8684 20 70.8376 19.9307 70.7985 cv
17.5977 69.487 15.7041 73.1862 18.0313 74.4875 cv
18.2334 74.6008 18.4424 74.6945 18.6455 74.801 cv
17.6152 75.6203 17.4346 77.0349 18.2393 78.1423 cv
18.3877 78.3469 18.5703 78.5134 18.7637 78.6638 cv
18.1055 78.6403 17.6387 79.03 17.4385 79.5339 cv
16.5566 79.3855 15.7305 79.0944 15.0498 78.4983 cv
14.1924 77.7483 12.7861 78.863 13.499 79.8327 cv
15.5605 82.6374 18.7266 82.5461 21.8877 82.8444 cv
22.4648 82.8991 23.0947 82.6633 23.4932 82.2492 cv
24.1748 82.1965 24.8369 82.0451 25.4492 81.7126 cv
26.1299 81.344 26.2813 80.5105 26.1523 79.82 cv
26.2939 79.4109 26.3252 78.9201 26.2041 78.3361 cv
26.1025 77.8435 25.9131 77.467 25.6709 77.1623 cv
27.3828 77.1276 28.0928 75.0993 27.1279 73.8147 cv
27.3145 73.5788 27.4824 73.3181 27.6172 73.0158 cv
28.2041 71.6975 27.9189 70.5466 27.2168 69.5847 cv
27.2285 69.2859 27.207 68.9636 27.1182 68.5998 cv
27.1143 68.5817 27.1064 68.5666 27.1025 68.549 cv
27.2754 67.9904 27.1855 67.3303 26.7119 66.8108 cv
26.0801 66.1184 25.2832 65.6862 24.5967 65.049 cv
23.9492 64.4484 23.5059 63.7834 22.7002 63.363 cv
22.3662 63.1882 21.9824 63.0827 21.5879 62.9914 cv
21.6797 62.9367 21.7686 62.8728 21.8545 62.7971 cv
22.2061 62.4841 22.4072 62.0764 22.4541 61.6477 cv
23.9238 62.6042 25.3936 63.5612 26.8574 64.5256 cv
28.0869 65.3352 29.5352 64.3049 29.8398 63.0651 cv
30.5772 62.9572 31.2754 62.6599 31.8867 62.0949 cv
32.4512 61.5739 32.5 60.7014 32.3193 60.0144 cv
cp
f
33.4092 50.1394 mo
33.5352 47.1291 33 44.1193 32.1729 41.1623 cv
32.8096 40.0422 32.6484 38.8425 32.2959 37.1457 cv
31.8613 35.0515 31.2979 32.969 30.7051 30.8918 cv
31.0684 30.4587 31.2871 29.8845 31.2588 29.1921 cv
31.1143 25.7204 30.25 22.9372 28.4043 19.9987 cv
28.2627 19.7727 28.1016 19.5896 27.9307 19.4348 cv
26.3906 17.8479 23.3057 18.8479 20.8145 20.6584 cv
20.7773 20.6858 20.751 20.716 20.7158 20.7439 cv
20.5703 20.614 20.374 20.5373 20.1602 20.5217 cv
18.1172 20.3733 13.999 23.653 14.3008 25.925 cv
14.418 26.8088 14.8271 27.2839 15.3896 27.4992 cv
13.5137 28.7707 11.6338 29.9724 11.6426 32.7507 cv
11.6455 33.6848 13.125 33.8088 13.2861 32.884 cv
13.5049 31.636 16.7197 30.343 17.6416 29.6208 cv
19.085 28.49 20.2275 27.219 21.2959 25.7312 cv
21.4316 25.5417 21.5244 25.3484 21.5811 25.1574 cv
22.0137 25.2854 22.5 25.3098 23.0195 25.1931 cv
23.6904 25.0422 li
23.8105 26.6887 24.2227 28.0212 25.0469 29.1941 cv
25.1748 29.5715 25.3027 29.9524 25.4316 30.3357 cv
24.5107 30.6887 23.7988 31.5295 23.874 32.7956 cv
24.0039 34.9768 24.4414 37.4734 25.5137 39.5427 cv
24.1758 39.6335 22.9668 41.1091 23.8623 42.654 cv
24.165 43.1745 24.4395 43.7102 24.7246 44.2395 cv
23.793 43.3503 22.8311 42.4963 21.8232 41.696 cv
20.666 40.6838 18.7959 42.1789 19.7373 43.4919 cv
22.7793 47.7336 26.7012 51.2942 30.374 54.9773 cv
31.4844 56.0896 33.5205 54.7522 32.9453 53.2902 cv
32.7764 52.861 32.584 52.4426 32.4053 52.0178 cv
32.9697 51.5886 33.377 50.9172 33.4092 50.1394 cv
cp
f
22.1953 11.9616 mo
22.085 11.3322 21.7168 10.781 21.0781 10.5319 cv
21.1328 9.59933 20.5078 8.72824 19.6553 8.34591 cv
19.6348 8.31124 19.6133 8.27755 19.5908 8.24435 cv
19.543 6.98214 18.4541 5.69503 16.7246 6.60079 cv
15.5762 7.20284 15.1211 8.20284 15.1533 9.43966 cv
15.0264 9.60275 14.9004 9.77169 14.7734 9.95089 cv
14.165 10.8127 14.1924 11.8298 14.6025 12.5984 cv
14.5195 12.7092 14.4443 12.8239 14.3604 12.9343 cv
13.2939 14.3195 13.8975 15.8493 15.083 16.427 cv
15.041 16.7194 15.0391 17.0134 15.0898 17.3068 cv
15.1396 17.593 15.2412 17.8703 15.3799 18.1233 cv
13.584 19.5661 11.791 21.0085 10.2783 22.8025 cv
9.30567 23.9558 10.8008 25.9392 12.083 24.8991 cv
16.1924 21.5642 20.7031 19.5691 24.0693 15.2912 cv
25.1973 13.8576 23.7852 11.4943 22.1953 11.9616 cv
cp
f
12.6299 4.78781 mo
12.5166 4.68917 12.4033 4.61984 12.29 4.54952 cv
12.1973 3.90743 11.8477 3.29659 11.2402 3.07638 cv
9.94434 2.60714 8.52149 2.24679 7.40527 3.29464 cv
6.5459 4.10079 5.68067 5.6296 5.84668 6.82736 cv
5.97266 7.74386 6.53809 8.56906 7.49414 8.76632 cv
7.56738 8.78146 7.64063 8.79659 7.71484 8.81173 cv
8.22754 8.91769 8.6709 8.8298 9.03125 8.61544 cv
9.16895 8.65109 9.31348 8.67208 9.4668 8.66964 cv
9.30957 9.17697 9.14551 9.68038 8.97461 10.1833 cv
8.68164 11.0427 8.42969 11.8552 7.99805 12.5891 cv
7.87598 12.6443 7.75977 12.7248 7.66113 12.8488 cv
7.38184 13.1985 7.26074 13.363 7.10449 13.7819 cv
6.80859 14.5783 7.44727 15.7404 8.42969 15.3259 cv
11.0303 14.2282 12.4082 10.5715 13.1963 8.07394 cv
13.5664 6.90353 13.6367 5.66476 12.6299 4.78781 cv
cp
f
33.9941 45.7551 mo
33.6934 42.6838 31.4912 40.6267 30.5518 37.8913 cv
31.5137 37.6721 32.2646 36.5749 32.3398 35.6067 cv
32.4766 33.8137 32.3418 32.2131 31.9932 30.5881 cv
32.0908 30.3952 32.1631 30.1799 32.2041 29.9426 cv
32.7891 26.5852 31.3311 25.4411 29.9316 22.7502 cv
28.7949 20.5637 28.7275 19.0505 25.9551 18.4309 cv
24.5635 18.1198 23.9883 19.7688 24.7969 20.6897 cv
25.2432 21.198 26.6797 25.4084 27.2285 27.6189 cv
26.7813 28.1848 26.5879 28.9358 26.8955 29.7185 cv
27.2725 30.6784 27.542 31.6071 27.7344 32.5495 cv
27.1973 32.8005 26.7959 33.3195 26.8164 34.1071 cv
26.877 36.3908 26.3857 38.7981 27.041 40.987 cv
27.1338 41.2956 27.3057 41.6359 27.5039 41.987 cv
26.3662 42.1184 25.3203 43.2702 25.6699 44.6467 cv
25.8027 45.1701 26.0469 45.7268 26.3721 46.2697 cv
25.8809 46.5061 25.542 47.0349 25.7559 47.7404 cv
26.0391 48.6775 26.4736 49.5305 27.0537 50.2224 cv
27.0566 50.3029 27.0322 50.3532 26.9629 50.3518 cv
26.8369 50.3498 26.7227 50.3669 26.6172 50.3967 cv
25.833 49.4797 24.9854 48.6281 24.0703 47.8083 cv
22.3125 46.2312 19.9287 48.9025 21.627 50.528 cv
23.9883 52.7873 24.9932 55.3776 26.6357 58.0505 cv
26.2002 60.0998 26.1592 59.9162 28.4111 61.4826 cv
27.4805 60.8288 26.4063 61.1936 25.8682 61.8889 cv
25.8242 61.8879 25.7881 61.8845 25.7402 61.884 cv
24.6055 61.7121 23.6182 61.2067 22.7773 60.3689 cv
21.0605 59.0266 18.7783 61.5769 20.5137 62.8899 cv
20.8057 63.153 21.0967 63.4167 21.3887 63.6799 cv
20.8359 63.5183 20.2813 63.3562 19.7256 63.196 cv
18.4688 62.8342 17.6758 64.5837 18.5967 65.3982 cv
20.1445 66.7692 21.166 68.2683 22.5752 69.5803 cv
22.667 69.7468 22.7813 69.8972 22.9092 70.0324 cv
22.6455 70.6984 22.8516 71.573 23.5566 72.0271 cv
23.6914 72.0485 23.8272 72.0695 23.9629 72.091 cv
23.9268 72.1604 li
24.0156 72.176 24.0928 72.1872 24.1729 72.1999 cv
23.1533 72.3532 22.3594 73.4807 22.916 74.3796 cv
22.2725 74.6311 21.8359 75.322 21.8418 76.0095 cv
20.6328 76.3083 20.4814 78.0134 21.3174 78.8591 cv
21.2705 79.4065 21.4873 79.9934 22.0381 80.3396 cv
22.0098 80.3835 21.9814 80.427 21.9531 80.4709 cv
21.5703 80.5446 21.3301 80.8073 21.1953 81.1301 cv
20.3242 81.051 19.46 80.9255 18.5879 80.695 cv
17.3223 80.3606 16.6621 82.259 17.8174 82.8386 cv
20.0938 83.9807 21.751 84.3591 24.2188 83.5866 cv
24.9922 83.3444 25.1465 82.5603 24.8564 81.9367 cv
25.1865 81.5525 25.3633 81.1018 25.3721 80.6193 cv
26.0127 80.1858 26.335 79.1999 25.8975 78.5515 cv
26.3936 78.031 26.584 77.2658 26.0654 76.5686 cv
26.0625 76.5647 26.0596 76.5603 26.0566 76.5564 cv
26.5742 75.9734 26.8008 75.2199 26.6455 74.4592 cv
27.3506 73.4338 27.4023 72.5075 27.0596 71.6672 cv
27.7285 71.1296 28.0313 70.1257 27.4678 69.3742 cv
27.3945 69.2775 27.3311 69.197 27.2617 69.1071 cv
27.3623 68.5554 27.2666 67.9704 26.8828 67.469 cv
27.2607 67.0236 27.3936 66.3674 27.1563 65.7902 cv
27.4883 65.7268 27.8115 65.613 28.1211 65.4401 cv
28.624 65.1594 28.9727 64.759 29.1895 64.3171 cv
30.2061 63.5578 30.4453 62.4587 30.2539 61.3132 cv
30.3584 61.3449 30.4541 61.3796 30.5664 61.4089 cv
31.9141 61.7609 33.3252 60.2775 32.7764 58.9484 cv
31.7412 56.4392 30.6367 54.3869 29.125 52.2873 cv
29.29 52.1276 29.4014 51.9416 29.4736 51.7365 cv
29.792 51.8083 30.125 51.8562 30.4844 51.8596 cv
31.0918 51.865 31.6201 51.4406 31.9063 50.9392 cv
32.2168 50.3942 32.3174 49.7951 32.2842 49.1726 cv
32.5469 49.0578 32.8076 48.9187 33.0635 48.7224 cv
34.0986 47.9265 34.1094 46.9377 33.9941 45.7551 cv
cp
.662745 .564706 .4 rgb
f
21.1006 16.2443 mo
21.2656 16.052 21.415 15.8737 21.5137 15.7317 cv
22.2607 14.6565 21.0957 12.778 19.8457 13.7937 cv
18.3506 15.0085 17.0537 16.3039 15.9941 17.9192 cv
15.4189 18.7961 16.1006 19.656 16.9258 19.8918 cv
17.1934 20.1545 17.5645 20.3112 18.0117 20.278 cv
18.1582 20.2673 18.2998 20.2429 18.4443 20.2273 cv
18.3584 20.4206 18.2852 20.6213 18.25 20.841 cv
18.1494 21.4777 18.3779 22.0749 18.791 22.4636 cv
17.5391 23.5442 16.3545 24.6491 15.3037 25.9504 cv
14.2393 27.2683 16.1621 28.593 17.0889 27.5485 cv
17.0957 27.5564 17.1025 27.5647 17.1094 27.5725 cv
17.498 27.07 17.8984 26.5793 18.3076 26.0964 cv
18.4688 26.071 18.6348 26.0158 18.8008 25.8938 cv
19.6104 25.299 20.4023 24.6989 21.1641 24.0432 cv
21.7549 23.5349 21.6484 22.7282 21.2451 22.2819 cv
21.2676 22.2424 21.2959 22.2102 21.3174 22.1696 cv
21.6162 21.6096 21.7236 21.1399 22.002 20.5901 cv
22.4404 19.7268 22.9004 19.0344 23.0967 18.0612 cv
23.3203 16.9504 22.2305 15.8278 21.1006 16.2443 cv
cp
f
20.7461 10.8215 mo
20.7363 10.7946 20.7266 10.7751 20.7158 10.74 cv
20.6582 10.5451 20.5488 10.344 20.46 10.1555 cv
20.4639 10.1496 20.4668 10.1443 20.4697 10.1379 cv
20.7686 9.50753 20.6904 8.59835 20.1025 8.13937 cv
19.9346 8.00851 19.7734 7.9045 19.6064 7.8171 cv
19.5918 7.35665 19.4531 6.97579 19.1797 6.53439 cv
18.5772 5.56515 17.1367 5.49923 16.3945 6.32589 cv
15.3359 7.5046 14.9395 9.45431 16.001 10.7526 cv
16.0898 10.862 16.1963 10.9514 16.2998 11.0427 cv
16.3311 12.1804 17.4824 13.2375 18.6221 12.4084 cv
18.6807 12.5046 18.7412 12.5993 18.8154 12.6897 cv
19.2773 13.2512 19.957 13.5398 20.6855 13.424 cv
22.2402 13.1765 22.2305 10.8396 20.7461 10.8215 cv
cp
f
13.4668 6.57443 mo
13.3076 5.96066 12.9922 5.41573 12.5039 4.99093 cv
12.416 4.91427 12.3184 4.84249 12.2197 4.77218 cv
11.9971 2.83077 9.54492 1.02316 7.94922 2.84396 cv
7.14942 3.75656 7.24609 5.17843 7.82227 6.17648 cv
8.13086 6.71114 8.56152 7.08517 9.06641 7.42501 cv
9.11328 7.45626 9.16504 7.48361 9.21484 7.51144 cv
9.10449 8.15499 9.31152 8.85958 9.75391 9.33517 cv
9.56836 9.55099 9.45508 9.84542 9.46973 10.2155 cv
9.49609 10.8581 9.7041 11.1809 10.1172 11.6433 cv
10.6016 12.1853 11.6279 12.0642 12.0645 11.5388 cv
12.707 10.7663 13.2158 9.6047 13.2344 8.50851 cv
13.5479 7.95773 13.6553 7.29708 13.4668 6.57443 cv
cp
f
43.8359 68.5368 mo
42.4639 66.2922 39.8418 64.4821 37.4756 63.4123 cv
36.3301 62.8947 35.1035 63.9138 35.4639 65.1379 cv
35.6221 65.6745 35.8164 65.9104 36.2031 66.3147 cv
36.3516 66.4699 36.5166 66.5432 36.6826 66.5573 cv
38.1006 67.8601 39.7646 68.9289 40.9004 70.4704 cv
42.3906 72.4934 42.6855 75.1169 44.4219 76.9773 cv
44.9268 77.5183 45.833 77.1208 45.9834 76.4743 cv
46.5967 73.844 45.1953 70.7614 43.8359 68.5368 cv
cp
f
46.6563 79.0661 mo
46.3193 77.0066 43.0762 77.1096 43.3564 79.2429 cv
43.5254 80.5319 43.6943 81.8205 43.8633 83.1096 cv
44.0264 84.3567 44.0791 85.6623 44.6221 86.8108 cv
45.4619 88.5852 47.1348 87.7492 47.5 86.6218 cv
47.5156 86.6325 47.5313 86.6433 47.5469 86.654 cv
47.915 84.2312 47.0479 81.4636 46.6563 79.0661 cv
cp
f
12.0479 15.26 mo
10.7139 15.8601 9.77637 16.8713 8.74609 17.8816 cv
7.85059 18.76 6.61817 19.8318 6.48438 21.1472 cv
6.37891 22.1823 6.99805 23.0861 8.11426 23.0651 cv
9.52539 23.0388 10.665 21.9187 11.6729 21.0412 cv
12.7061 20.1403 13.8164 19.3249 14.4844 18.0998 cv
15.2725 16.6526 13.6924 14.5207 12.0479 15.26 cv
cp
1 1 1 rgb
f
22.8994 32.925 mo
24.0313 30.801 20.9346 28.5564 19.377 30.4963 cv
18.4629 31.634 17.3408 32.7053 16.1699 33.573 cv
14.9922 34.4445 15.4766 36.0212 16.6211 36.3635 cv
16.6445 36.466 16.667 36.5686 16.7022 36.6721 cv
17.1523 37.9943 18.4268 38.8161 19.8125 38.7321 cv
21.1582 38.6506 22.2832 37.5725 22.8086 36.3942 cv
23.2217 35.4714 23.124 34.4177 22.5098 33.6657 cv
22.6406 33.4192 22.7686 33.1711 22.8994 32.925 cv
cp
f
14.3789 28.2776 mo
14.2031 27.7458 13.8506 27.4909 13.3984 27.2131 cv
13.6563 27.3513 13.5859 27.2946 13.1895 27.0437 cv
13.0391 26.9685 12.8828 26.9157 12.7197 26.885 cv
12.458 26.8278 12.1777 26.8269 11.9092 26.8327 cv
10.9316 26.8532 9.94824 27.4714 9.35547 28.2331 cv
8.78613 28.9626 8.71582 30.0949 9.48926 30.7317 cv
10.1963 31.3147 11.3682 31.3679 11.9883 30.5979 cv
12.002 30.5803 12.0723 30.5026 12.123 30.445 cv
12.168 30.4118 12.2256 30.3664 12.2373 30.3557 cv
12.2422 30.3513 12.2422 30.3498 12.2461 30.3464 cv
12.2588 30.3425 12.2666 30.3405 12.2852 30.3347 cv
12.3936 30.2976 12.8496 30.1135 12.8447 30.0998 cv
12.8643 30.094 12.8848 30.0876 12.8916 30.0852 cv
13.0479 30.03 13.1973 29.9597 13.3408 29.8742 cv
13.3418 29.8733 13.3428 29.8728 13.3438 29.8718 cv
13.3789 29.862 13.4033 29.8576 13.4502 29.842 cv
13.6113 29.7883 13.7813 29.6862 13.9258 29.5876 cv
14.3428 29.302 14.5381 28.7614 14.3789 28.2776 cv
cp
f
35.6084 67.4724 mo
34.9473 66.7551 33.6934 67.821 34.3047 68.5944 cv
35.7227 70.3889 36.9375 72.2732 37.8916 74.3547 cv
38.668 76.049 39.1738 77.7131 40.5371 79.0271 cv
40.8672 79.3449 41.5078 79.1594 41.5781 78.6916 cv
42.1963 74.6096 38.1787 70.2595 35.6084 67.4724 cv
cp
f
18.1504 66.5637 mo
18.1465 66.4143 18.0029 66.1975 17.8359 65.9948 cv
17.5068 65.3117 16.6689 64.7678 15.918 64.8659 cv
15.0576 64.9792 14.2773 64.8371 13.4434 65.1716 cv
12.4844 65.5559 11.9941 66.9426 12.9248 67.6706 cv
13.2393 67.9167 13.543 68.0959 13.8809 68.2478 cv
13.9922 68.7458 14.1836 69.2341 14.5088 69.6228 cv
14.998 70.2082 15.4922 70.5832 16.2744 70.6462 cv
16.9971 70.7043 17.7129 70.4607 18.2002 69.8986 cv
19.1172 68.8435 19.0693 67.3527 18.1504 66.5637 cv
cp
f
16.3047 54.4006 mo
16.2578 54.3264 16.2197 54.2497 16.1768 54.1735 cv
16.1689 54.1613 16.1416 54.113 16.1133 54.0637 cv
16.1162 54.0564 16.1094 54.028 16.1006 54.0012 cv
16.1006 53.9323 16.0986 53.8493 16.0986 53.8415 cv
16.1543 53.0661 15.3506 52.4304 14.6572 52.3742 cv
13.9355 52.3166 13.1016 52.8137 12.9961 53.59 cv
12.835 54.7912 13.208 55.9973 14.3564 56.57 cv
15.7158 57.2483 17.1084 55.6765 16.3047 54.4006 cv
cp
f
16.001 44.7478 mo
15.2324 43.4597 13.4102 44.7243 14.083 46.0114 cv
16.0273 49.7351 17.4023 54.2126 20.2725 57.3342 cv
20.7129 57.8127 21.585 57.3542 21.5225 56.736 cv
21.0879 52.4206 18.1758 48.3952 16.001 44.7478 cv
cp
f
13.8037 72.9162 mo
13.5146 73.0197 13.251 73.1755 13.0176 73.3664 cv
12.0566 73.1931 11.1074 74.0002 11.1777 74.9914 cv
11.2148 74.5891 11.21 74.6677 11.1631 75.2277 cv
11.1807 75.4338 11.2236 75.633 11.2939 75.8254 cv
11.4404 76.2282 11.71 76.5598 12.0186 76.8523 cv
12.3994 77.215 12.8447 77.4592 13.3213 77.6506 cv
13.5176 77.7595 13.7266 77.8518 13.9541 77.9123 cv
14.2305 77.9856 14.502 77.987 14.7617 77.9416 cv
15.9834 77.8957 17.126 77.1599 17.3897 75.8405 cv
17.8037 73.7692 15.6797 72.2453 13.8037 72.9162 cv
cp
f
33.499 67.2971 mo
33.377 67.2048 33.252 67.1301 33.126 67.0686 cv
33.2832 67.0007 33.4395 66.9265 33.5947 66.8396 cv
34.8125 66.1555 35.502 65.0705 35.875 63.7976 cv
44.7852 67.8195 44.6553 77.6906 45.9756 86.5227 cv
45.0273 86.3078 43.9785 86.7893 43.6104 87.9865 cv
43.4229 88.3767 43.2354 88.7668 43.0469 89.1569 cv
37.9404 83.1091 40.5801 72.656 33.499 67.2971 cv
cp
26.4863 60.9216 mo
23.9883 58.9309 21.8809 56.5119 20.0547 53.9001 cv
18.3965 51.5285 16.9639 49.0066 15.6709 46.4196 cv
15.0078 45.092 13.915 43.2912 13.1104 41.4655 cv
13.249 41.5593 13.3857 41.6516 13.5264 41.7492 cv
15.9434 43.4318 16.7266 45.5061 18.4355 47.7307 cv
21.5811 51.8254 27.25 54.7673 31.3535 57.8005 cv
31.3721 57.8151 31.3936 57.8225 31.4131 57.8361 cv
31.3447 58.5266 31.6553 59.0568 32.1338 59.3884 cv
32.1289 59.7688 32.1055 60.1301 32.04 60.4421 cv
32.6543 62.2209 32.0801 62.862 30.3164 62.3659 cv
28.7686 62.7927 27.4912 62.3112 26.4863 60.9216 cv
cp
27.0176 70.6237 mo
26.5742 71.3332 26.1846 72.0715 25.8496 72.8376 cv
24.3193 73.9367 21.1191 72.904 19.4805 72.4865 cv
16.6436 71.7629 12.6865 70.5852 12.1289 66.9553 cv
11.958 65.8415 12.1914 64.5168 12.5215 63.1843 cv
16.7119 63.882 22.5254 64.8562 25.5908 67.5861 cv
27.252 67.9196 27.7275 68.9318 27.0176 70.6237 cv
cp
23.3008 81.738 mo
21.7695 82.3064 19.1758 81.573 17.5762 81.2883 cv
15.6563 80.9465 14.1572 80.3713 12.6113 79.1184 cv
11.8477 78.4973 11.1631 77.7976 10.5576 77.0188 cv
11.0781 75.5305 10.9229 74.2385 10.0938 73.1418 cv
10.5107 73.2546 10.876 73.2307 11.1924 73.1237 cv
14.8926 76.2307 21.4268 77.9055 25.4277 77.3864 cv
25.4756 77.3801 25.5254 77.3625 25.5742 77.3542 cv
25.5557 79.1867 25.3301 80.9841 23.3008 81.738 cv
cp
21.1377 93.2146 mo
19.5439 94.7775 17.7891 94.822 15.9756 95.7854 cv
15.8975 95.8029 15.8193 95.821 15.7402 95.8386 cv
15.75 95.7541 15.7607 95.6745 15.7695 95.5759 cv
16.2988 94.7585 16.4795 93.4011 16.7773 92.4904 cv
17.5772 90.0417 13.6602 89.2102 12.8691 91.635 cv
12.667 92.2531 12.3457 93.0163 12.0469 93.8313 cv
11.877 93.6955 11.707 93.5656 11.5352 93.4558 cv
11.2813 93.2932 11.0205 93.1545 10.752 93.0324 cv
10.833 92.8518 10.9072 92.6687 10.9775 92.4787 cv
11.1514 92.0075 11.3672 91.9094 10.7168 92.029 cv
11.7871 91.8322 12.6572 91.1042 12.6064 89.925 cv
12.5645 88.9514 11.5645 87.8396 10.502 88.0349 cv
9.59473 88.2019 8.88184 88.4362 8.24902 89.1491 cv
8.02344 89.4035 7.87891 89.6731 7.75488 89.948 cv
7.08984 89.7893 6.43164 89.4753 6.17774 88.821 cv
5.98145 88.3147 6.15039 87.6189 6.69238 87.424 cv
8.9668 86.6067 7.98926 83.195 5.83887 83.5251 cv
5.40137 83.2234 4.84082 83.0827 4.19434 83.2419 cv
4.56836 83.1496 4.29199 82.3571 4.29981 81.9494 cv
4.31152 81.3718 4.35059 80.7585 4.50586 80.1984 cv
4.88965 78.8064 5.89063 80.1213 6.4668 80.8093 cv
7.16797 81.6457 8.18652 81.7194 8.99121 81.3786 cv
10.0615 82.4255 11.3037 83.2956 12.499 83.9196 cv
15.6582 85.5676 20.9795 86.3933 24.665 85.6071 cv
24.127 88.424 23.207 91.1853 21.1377 93.2146 cv
cp
14.3389 52.3337 mo
16.1982 55.5471 18.3516 58.6032 20.9375 61.2614 cv
18.5166 60.4323 16.0381 59.8039 13.5137 59.3293 cv
13.5322 59.237 13.5576 59.1374 13.5732 59.0481 cv
13.9629 56.8195 14.2061 54.5803 14.3389 52.3337 cv
cp
8.04688 29.093 mo
12.6982 28.0046 16.0938 25.5642 18.9922 22.4284 cv
16.9014 26.7053 14.627 30.9909 10.2764 33.1438 cv
9.56348 31.7629 8.66992 30.529 8.04688 29.093 cv
cp
7.14063 25.2131 mo
6.93067 23.6408 6.78711 22.0529 6.65234 20.4665 cv
7.53125 18.5217 10.2998 17.3005 11.7939 15.9734 cv
13.6191 14.3532 15.4111 12.424 16.4873 10.2038 cv
16.6279 9.91476 16.7412 9.62033 16.8418 9.32345 cv
17.2949 9.10079 17.6397 8.66671 17.707 7.96847 cv
17.7246 7.77316 18.8779 8.70626 19.1738 9.01583 cv
19.8721 9.74825 20.5703 10.4846 21.2148 11.2658 cv
21.4805 11.5876 21.7344 11.9152 21.9785 12.2487 cv
21.7324 12.3977 21.5068 12.6018 21.3174 12.8767 cv
17.46 18.5017 13.8867 23.4665 7.14063 25.2131 cv
cp
5.72949 15.4831 mo
5.45606 15.2214 5.11621 15.051 4.75195 14.9704 cv
3.74609 12.2053 3.60547 10.007 5.78906 7.26925 cv
6.95215 5.81173 8.88867 3.52169 11.0674 4.04562 cv
14.5156 4.87521 13 8.57931 11.6162 10.3757 cv
10.0889 12.3567 7.7002 13.7824 5.72949 15.4831 cv
cp
25.9014 19.2829 mo
27.7295 19.2741 29.1484 23.2375 29.5488 24.7375 cv
30.2109 27.2219 30.0508 29.9094 29.9736 32.4494 cv
29.9619 32.8733 30.0674 33.2141 30.2393 33.488 cv
30.2344 33.5866 30.2246 33.6828 30.2334 33.7898 cv
30.7461 40.4016 32.8682 46.7981 32.2344 53.4074 cv
32.207 53.4328 32.1826 53.4597 32.1572 53.4865 cv
27.75 50.4055 22.9814 47.425 20.2715 42.8083 cv
18.3438 39.5266 15.4121 38.5705 12.7217 36.3415 cv
16.4277 34.2653 19.0488 30.9685 21.125 27.1203 cv
22.0361 25.4333 23.7813 19.2927 25.9014 19.2829 cv
cp
50.6611 89.7902 mo
48.8174 82.7561 49.7783 74.9172 46.3008 68.3308 cv
44.0791 64.1213 40.5381 61.3161 36.2188 59.6584 cv
36.1543 58.4714 36.0059 57.2912 35.873 56.2307 cv
37.3252 48.5813 34.8164 41.1716 34.2275 33.5754 cv
34.1982 33.2019 34.082 32.8942 33.917 32.6369 cv
33.9434 32.5095 33.9639 32.3772 33.9688 32.2351 cv
34.1016 27.8357 33.3721 17.8806 28.0645 15.5363 cv
28.0508 15.3674 28.0205 15.1926 27.957 15.009 cv
26.6719 11.3034 24.1191 8.3298 21.4014 5.57638 cv
20.6533 4.81857 19.5195 4.32101 18.3525 4.15548 cv
18.2705 4.03927 18.1758 3.92892 18.0645 3.82882 cv
17.5967 3.4089 17.1289 2.98947 16.6611 2.56954 cv
16.2969 2.24191 15.8057 2.07833 15.3154 2.07491 cv
14.707 1.44601 13.9609 .919641 13.0781 .543664 cv
8.76953 -1.28983 5.0166 1.84347 2.46777 5.03048 cv
-.861327 9.19308 -.461913 12.9646 1.54102 17.719 cv
1.75293 18.2224 2.09668 18.5529 2.49219 18.7497 cv
2.5293 19.1565 2.56836 19.5617 2.60449 19.9694 cv
2.58106 20.0544 2.55176 20.135 2.53223 20.2224 cv
2.40918 20.7873 2.5166 21.2624 2.75391 21.6403 cv
2.94238 23.7209 3.1543 25.7995 3.5 27.8464 cv
3.73731 29.2492 4.06738 30.6272 4.69434 31.9113 cv
5.41016 33.3786 6.69434 34.5139 7.19531 36.0817 cv
7.37988 36.6604 7.73535 37.0261 8.15723 37.2238 cv
8.13477 39.9763 9.28027 42.7429 10.5986 45.3464 cv
10.4902 45.5979 10.4307 45.8874 10.4395 46.2175 cv
10.583 51.4997 9.99707 56.5442 8.93848 61.7067 cv
8.39551 64.3571 7.72363 67.0608 8.63184 69.6218 cv
7.04004 70.7077 6.2041 73.3537 6.09668 75.0944 cv
6.08399 75.3059 6.08692 75.5153 6.0957 75.7238 cv
5.66406 75.5949 5.20801 75.5163 4.71192 75.5256 cv
2.68262 75.5637 1.24902 77.1189 .703126 78.9567 cv
-.0517568 81.4973 .25879 85.3195 2.41113 86.6833 cv
2.12988 87.4856 2.04102 88.3664 2.18848 89.2541 cv
2.52734 91.2995 4.08789 92.8464 5.9668 93.5661 cv
5.87012 94.0207 5.91406 94.5139 6.21777 95.0988 cv
6.97363 96.5505 8.38867 96.1984 9.55859 96.9123 cv
10.2607 97.341 10.8379 97.8352 11.4834 98.2326 cv
11.6465 98.7194 11.9336 99.1594 12.3936 99.5227 cv
14.3135 101.038 18.043 99.5066 19.9561 98.6989 cv
26.4131 95.9719 28.3398 89.153 29.1279 82.7795 cv
29.1807 82.3488 29.1055 81.9704 28.9531 81.6442 cv
29.543 79.6911 29.5176 77.3571 29.5742 75.3796 cv
29.5811 75.1462 29.5449 74.9441 29.4902 74.7566 cv
30.4375 73.6174 31.1719 72.2341 31.5283 70.8542 cv
38.1074 76.7658 34.4932 88.2824 42.2764 93.8957 cv
43.0693 94.467 44.4307 94.7024 45.1006 93.7443 cv
45.5361 93.1223 45.8965 92.5236 46.2266 91.9177 cv
46.9688 92.2727 47.835 92.4455 48.8711 92.4216 cv
50.2432 92.3894 50.9775 91.0007 50.6611 89.7902 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (4_arm-left.eps)
%%CreationDate: 11/11/2019 10:29 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`SF^XMas)<a@HWs9*^BMC:]C6thqrm4kIdkL>/\NaF\0*Y?f_hCY$/!(\`(usX/A1p\:+28Mq>/(hL>M'
%iRRO$YJ:+VmdSgU06b0Vnu_iPamQ4akKdN6A[d0gjQW;uRd4=WYA^!q^V+pcqSeXW]6q#j0mq6(s5A=88oB0oZb:bbWu'4VjmANr
%nof%lSGn`0s)L=g;HeADoH/R4qsC`Yhn4F/k1Qf%s6F;Wp%h`mDuJebG>IiIE\mM\3IWHmg`:>5q8j/nhrlk?lWNf12a?'U(B8OO
%]C4,;4g3$!+NIus6iZ95B^!L_*WEO>G5#qM]AJ<JeE;5L`=^GcH9tq]1!-W4?/Y-5!%gFs9<ne0^\[B;PLk<`ro#)XbPlJXik+AL
%hV?i3a)Vo6Tj.G8($2eqD>d?M87#>,]?7kM?#&c,3F?t_`d$%.1s+Y9?%T8'd4-u^5<c^Xb:e&=rV">l\$&LaY$\s>o%F$r16@g&
%_REgR>Y`OmrVI\.hnK)FQd=O07qT1e*T#\dqW@L^]`3;IS**Qq0N6m!s6Yb04F-nmm2HZ9=3lB3kfQCHrHH$TiPi!mr:Li2m$^*!
%GMh5jr55T8_)HO1Ep1QTX&o)I<9p]t#T:E&U3s?::Saf=I;oeQU#3N<rIH)=+VOgef?_0Zp@9"OjPA-tnMV86q>/c'lWbie=7uUg
%YcBh`C&O++^@]F72n(Ge%ls[_iA]5e>-<>G,p%J\q9@mK$OkAUpubuGdn?*DcX2*9^KplUhoRI!ps-U6%:B//Q!EhF-#WYUd;S]%
%p$49&ruf)Sjm,u4I.s\.s8;0PURtkBoBMrcGQ6^sl'kbXA\c(6rU-<W\,>9!]:X,`n,DhQa]#a*r-OrTp#OeM5C:E[jZ?i,me!u/
%/cXN(qiL,4*Je<2DkO51QTs=jJ+_W>@m09(GPpIrPF#'On+_f\_d>Y*;1A+)qJ!Vh::u#H`s:F!`905H(>ac.SDF2s-VV:$aJ44_
%m,adBYjKQu2h-,GqTg"_kKeXNep[5flLt85^?^edrqZ94dm'D\doo!2Y$X;:o-[[PDI7karTFF`kM!i;F_uKHQQMe]J,\fhf2'-X
%e$GsarTbQ>s3pBHY?j@6GJEYEnYGu)r"ZA^a@!`?l\g7=p&*M;0?.MaQ7o%\SiqLNqrM2"IrkK@l,0lXrUP.c[=@UnKq32^!MVjP
%ReM.*J(^`ZX"HP,IeiHs.:58McWke9p/g97f)0IU.=I:Rh`R+EH]Nc)lT&>OjbYC<?U+FcG>(tXo05Hd.H\P9b9*=h\R"C\Wu'[0
%UtpIpV^LBXEp!!M^Kb]F^6TLN?EntYo=(o7ZGu??cDUU2ooj<ca_LVZ=^o=,OY5H1jI`p.pU@UbjY<+VA\AScrATcZrSup.b>n,@
%q1-5jg^7)/LOUl#<W49Jr8;Kr9FW*>bHs)\WT*=n?gh?OU74h0Zg5)OD4roAom?'%/Tu:B0i?C$;[rJP*V&emhIcfd8%hLj,VP<E
%qE7$aCZo!hO/p3BTt<f+^\Hd\GL(4-DYLcp:L8L.Fn<7W.t#MQI*;:h8D1P,^U4iia5?ZQ)M=fpjQ]+,#VBn5\>W'Gs7?$5FhUUk
%`9VC0YFQY+43;JYqf^fb;d4.=`>4n\:6)0BlETcXr1]LGCTP7]E`3HgZm&s^Eeu(VQZ(qEb-B95Md/&e;N<bJ08I_D?IFfQVf\0`
%OS3_9UJafTNg-7X508aS0&FZhM?c0&<F^sXLmW0K%!)-Q`$O2lP8qV^O@)2ZZr#j45otiGA?<HAEC%/`/H1CE8WKQ1aK_)lg<3"_
%lAHX,alMR7?92)8`&I/n%X6r.EZF2n98Do2;rjuJ,`3Sp,rq]`a5@$^Q5_hZb>F:Pr7NaTE\nh;Nm&_"d>jl\Gl6e*jljdD\T.E/
%^O5.f^\_/,5P@&2A&jFU:68$Bmm6sQ+NO/(07U/!D(c"&063k:`\?b3*9\$Jn;SD83=^)fF:jJt.WPX5&HP7#MsO8dg5R(BOe77G
%3"]UD@R1<P%&js"j)=!<MC]e/fMeBE.t5F'U0QfK0RP'M,%$G9\qlTAb#/-XjT"uFs4;9Jq,?DTMu8'Ui'9+er]Gq1LtA/8*^:9/
%4NX;FG`Y.:]`+#9,'')?1*N,m3[(-@jR^A:'RrMGqrfT'pu`ZAF<Vf0\o,9Qg`l<S7Ip0?,Q\WI;O\*H.4c\%8\4:#NZq4RGJp3$
%de3K^8kTLH@B.PU@lha+"o7F-]l;%OdSiHoD3_gtMHDp-eQKoO>"7^F`[f.*("!<--@I<f*G"638Aa?^G^Ueli^I=68C=ide4F2s
%aV9]^<CI,$*=dk"Lqc"Ul,7t6#OkMP?6Ap^j&,4mdj^e"O*iFOI]cJ%dnpVR\WJ?%70-dMW)Q0,g<G(-N]3kU*'$%f#7*Z6c[cWn
%R%ajdP#%8pV6E8LY!r+.KL^nEm_)HE5o0Z]D1\9CN#t7sEQ6>4FN0n=I\aQf_5sO1oUHDR8ej*^n,Sj_pt8l<*G%"^YiFe%pPon=
%lt),8oeIn(`</([pRJ7N[O4a_FtY1iYYIpu)*rF'3r<*F`\fA6\'&bPg`14)I:N=Ge&`_#3KagT#!tKSY9\aO$]aHF,C4H_Q4s3F
%.u+OoBO;5[#"Z<3+"bB`QWf.O"1?oDC0&a%A&r3;hQUL.pt:)la?5^g5mL>fUB@1InUc!*/f2b<I>VT$KGWX++-Bb[&XC5gd+.>>
%=XXcMUdrQ?*Y%N%32&(30u4O$3i7:UNhHfq5jbNf%TF#fa;@m38._!kecT&FW*&Os>[44HTQhC*d%1X'Om;2L%p$fAAP]*tPZsl&
%lgiXRE0e<mKsMa'b2JFM.TT09aQ+n3-BCM<rK,*'-G*7&EbU]i7n4i`+>Rpg\&<sEd]HBBa,:oh,#]j$Q@h`][61n?Ve>8j-k_Aj
%B]3EQ-"_(R9A,6R+[ZsSX>hg^-[?UGP\Vm!7@+ZD6PfJ!(a0,?6a2BjAdF\5GuNrZ/0<Ek)3p+LP!0@\0`#6uOHI@'J]/dRER:Oj
%iKA0@@W9S'TO`>g@A#Ru-RU]DY0AN>1eWEkUQ[PS-HT+1G#+<tRRn-+O>o*g`70<'Z8Zh-`^hj``6eifo0Z659!]b1al1In36H>u
%U!^(OEca3o^D_^9D?oU@)+\R@NPJi/!I*?&]O^kgjGh[QreR$h-g`@3RQ'Lje$kJT:aAS,&Y1)nV!.B71bJfBX"Ut!+BWB5]3`:.
%?2pK+^d#JZq;fN^2nO"1$,$[)i*s=R5':M2>9[D?K-XX$ailu**d2!;7+#AG&e:Y$@4+GTYU751*4A0LZ.t7nT#=q8r1?B97B))>
%+)*NU.UB",]rW*O:*UKeU[:<h.EW9<1/^+JWl.'NiMeKF10OMFX,Cn'GiqN)0=f2(>uu*s<)dkXU#KTtR@83*n>`3]<N!u7eX\2&
%1=Y0\q"i<C&$]tN&U%`q*[a$eqLQV43o&ga"MinT_SmbVF/81h21"/BmlehlLYVF6hpi6!jGja8]055:4$Ml@LEE/WGi'C&DhH,>
%T\%T!b";6J,(=A?X%YCo?5=sQ(/HTZ:qI]X=hBe"0$$qWWF82iLl`]Qb63,;Kgm.Y4YuP7g/T&5HQ$oPl5S85M)qP4ld/Up`O_OR
%NWr\=5-%hp+"!BoA87,6@r*p=kR*-+g7'O7>hoE:`O[c>bSXQle81<@UJ8b][2EX;%c]Oo\uZifHI-b<L.gJP%Hlu*X[dWZ&^QJZ
%kFcuD#'Aa"*dlK1O?;%f4PJO#\`5csGi.PtGC8n@h!l'Xr5Z>-]/7[+:TB42]N\b^DR*=:e0e]7MEXU@6s#e.Z<G.\&MMUi\XdEC
%<*Ckm*$(Th84R[J-fPb"EsB5qGeZ`43b?klf3B.'k2r5[Zq;0=73MkC=WM+A29Vs\Gsf'>G#8W\"Wg\r1L*/l-tVE=[UC8#4`a]F
%S84RQ`_eg4UNO"kk=bt`36j@A@=f$=9(sEkVNO$teR!/Ymal1Aep8E[I(nXUe/eQhn5j7X"p"dd8<59"S#JT`(2!V,rs_a>qk(GO
%RW`J*(ECA&;@VeX_nfrbe8^7P2gP#=Z>)GQ:#0h&cO>[_MlsrC3DB9%:uB*@_?<[Xm"Y440W_b1=Fig>R-TLbQJ>@0*4/tEkLKoL
%;7dFWJl_2D>G6%(UlcLeC+coM<(@[U8bGT]OCEpD=1ZE8F1dQJ=((0I9qE07/WgA7>cVKpHVUmP[.ReOXkW)1/7JGr0-$n5`u8*k
%G^)\n*dYb[*-0()SOW\T6&47c_<:f1\ms>?2`E\9S%UA-jX/f:)gAkR*G+H(9SOfkclI%b7hH=uUA5XeSl"Y@YU9^F$%P'gT7B*E
%IHsSR'9FRA:V`M$3u.$[T_$6,R=^q9E>lX'!B1JA'T8]<Rh('.-ZG9rjpZ,G]_V=7ViF*6*TU1e;h7\t3Yh!\\8uRcfLjL(Yc#KM
%UIJ`^7f`U4(7"9,fqZMupOko;<Gbis[TK&c%qW++#6"'O`7AEh<RpLO]*3S^8"Ws*B'H=mRoFMM2!l>K)H#@-Z/5/0dh+LYq2\_j
%\`8JXD\%&5cZ+9sEKo#6pu(3%O@/I2T_%T&ZS!5<`s876TBD4n2kMtMB8uIbUO:W@TB_H/29KQknl_`8egR0YNi#ZC.e<3rfDkU8
%^LW?kOXXHG^R#80On,#IDQ%e017-\R(1bg!pre@jKhlbS`91!LjT<j6(=@!Z&SKAebj;L&r9Qb_b&0gO\FdC^9p'cJT6Gap$GMeM
%2<Va?f5/kG7`3:0'=`D[$/?l<=Orl<!+Pf)1E&aZef+E'frCJR,Y)bb`LN>4>9;QTjX-TaIt$s5k5K<>G:L[dI`pWpKX-ip-q%'9
%-43Tu%[&#Ogeupr;KDLb(PVEYgeSSaMFT]@mj0J7s+6LDkq7,K/OK/tOnWni(D61f44J+:rMR8?J&dWKhG;mQT4!8\G^4m3qq2,*
%,huA9^./C5U'Pfdb_r^8@i-`<Jo5":0b#,=h'-IMJH9bDY9IC\"a(.91@J'@h9,6;*5"lHEY5T<k#5D6:fTu8lA2YYNA+/t2A<Sh
%pk^0][Z!&4@d,b9a(cKEJ\Z*,]N*3Z4TU4IU5LA!UlhLR3N<FVhMgf#btm0XVDcUjm?sq$RD('2VJ:QpcVP(:To'i?3D6at-EK2/
%rg`>bd@Ab-O%tTQAp9et*H<'5,T:GNlh79$N[Au">hAf(i5-:kj+YC"jGoRUDXKUSZcpufS:^>js567#FjCQ.j.3W>4$MQlIBVE/
%\MS,_?rJq2K4Gr2Snj-21Ef8PrJjS-?;16prb2cqM0e6U06CHF35*bn3ASs'1D0_pBr!n7dV3A@c,2.s<JPkO-Y?TW<1PiY"?!Ad
%;Zo8,$mP;@Tr[)i*\9<Ao;&.9c7Nj]D1SQ*-MJ`-N\HZO]mH+c!GlBLVSE6:%09[RaY7+ag,BZ?BEtRk(8q(W*-6/Soot5]kWpE?
%L-6WnkN)B=r3#ut"/_3UY=BVR)Q>Zj8cO.)IqGNtZTX'*S2I5aH;opFO,i29&aqm24,tk9bRZn[Kqk4]ElU7YD`QO`&%U^&c?c,C
%5P?+E_9DJLiMGil]Yp??_ZjH<//_[8%5l>DkP1Z#^OOMrB5YItLH3!H+h@P%\.kgg_p_f9FV.gJRccmjr@\1E/$,Olrrss04h$-1
%c9\9:.HLRZD;h9P:m1&0'h[0]8XD]<@`LKN1kA,:a1IG\$5VG&%\3Vco0G(o@6i(#)+LcG&%U_'MlR@Pb,'aYi.i?Knf`4ik;OK/
%r("K])3B9.A[pT-eMT:DfYIf-Rk!!7KYBGu@QGT6M1do8X[5>`P#`]2S)-_1QdG#m?@-4J7kA:YX,c&3k32?14&nd06RuG\lAg2P
%;6N.JqFL^,Kto3pJnY+a7B0Ccb.>T!U3^.=>+)ssjjWJ,9_Ip#X!(NJr+&In_$[4:Q4MS@^M.\1@A8iu3\@_!#,VV@>^HS'Sa&Gg
%JU2E>WZ)C_*m.ZoY\*FQA.rgYfo1&7b&l^N,Foj!IcQOJ_VsrHgcH!\m"ZY3m-d%X5C1t-G+@E;a;l@Af)$HeOmfg-1b9(OD1clf
%CZ`60RA?7>#@\^`a?!Afj5^k:p&h]7*/6qR"H5SmWHdp"C69DAb;,AM<;?WM3)O$'=\YsB_DSAB)su7o>0>'8b%+FAbQG-,FD8cN
%Wb_]Nje&L7Nmr3,%^0&qP55[ES"R&A+%%BiBZ%cW9Kg8^9NL-Q*.oeM&-_]99o--2MC!J6;s78DR$QTTC^YX!.=%Dg,he"9780&*
%TIuR)h(>c"<cIa*aN*k5UDJ5jlJ[(0Vfs/%a*4-Hf&M"(a;s`VIGFAgNph&%:FM4-#?cuN_MV3q/V:H`d\UP_!5n[^[QcKcXXq-s
%D>;I>9L5kLcJr3Yni%%Eq0P_;V4FEN/&Hb?>4=52ArRE1g13-TjV2c5"UHYI_iBn;D-=id^nMWdD$qoK<*li-Kd_g[mPpP9gaV8%
%,o*SL<Qr4Q[<^bs*<uAl+r9uYgsK8VHq,aB).FKJT`M2NS?dXVou^hI)*#-s3bD)KaeU(8l^P?WOgmY4M]2k=-R:a8!p5qP2(2hE
%OhAJ=^)kck@Kf7J*.eW(`?L"[n&.g[ZLA,`HkD"[M9u<Ar)t/4i&uuAE"FZ<^1S_e%k)q];Fp<kUf[!Kbs>KQ&XU*op%rdWn5Me#
%G<@\$c]3>7.!L]2E@uIJA>7s=dbeo3S+/Yc1dr5s4Y6MN1/mOQ.-TLrZ>Pg7UJ-]u.&0p7AsrN*1MH4,/=TA>?pkfK(h.67acn^t
%m!>%*`Q0]qR9=92Fd))I%&e6E,rL&Sb^VqKoU>MLlZ#\bTf#`=cD-A,*Q*##0sM;JmNK2)"mo>oR@B%2-5*="A26V!ErsuF-E9DU
%)P5+fQ;ce1j$Xf<YZiq:T5$2;#DU!2N#kHf@Ii6A4N+0I^I*0=r*K@[+NTJKY!iu)aa"V0Brl&<IN.:4ZgGYK@WW2ToiO:]JF9\=
%e]UZ'L80)Z8]ssNpIgG9#N"D!=4_fYfD\PCH:0lB'XUXYSN^NjXhG5kO\MVj$YUU5kp4-n-WHW`<#u^Q6\K(cC?*dMfoqPt[SEq]
%4I@gJ0WX)Om]gl+AbAs.pjMj,\efD/pK2j%R/j@QTH,ArLhgHk8r6S=8k^mR8k,s"M))2gdA>MNf`kK9WHQ3o=:!_P;#<U%\GiR@
%k@H]uRP>6:no8A4kQUB_*!9AFCJ+$)gc^BDeh+2pn^a?CR=+jNGg#Vb<f)1ia,`4PN[*qiR%LK1J'3(98Ye;Ce/fIuaI5rKFP8mu
%/ZDHCDqG/=;CWm5!=\L3<_Og5U*l5^8KN1pQAaHL_##7cea/SeZ:(+rU0/"=]4B>83jW1RUdrr0K/+$QKV@uK_2M8-,";ZF7Fos_
%0dUMd^pX7tL]E.W)]grVL;g6b8.3f#BCe7,ML=lbcZf;rIE0*bLBFR3@(o*?!UbeDF@n*7b_Q@tpgcc=Og-SSh&Zg/5US'r1-9#E
%K=Qo.&27'L=Ah[DE)!c%A#LV8d`P1[)%lb&Cgc@sM`Ho*/0!tAB:V,g(t\QFGW93%;sJp?QtuB(K@kj)F5kruXE/T2kPS_[$_reB
%T,i%cTZA:&B]Z&%:CGKpIA?H_`]E#W/$$Y#IY<R1i3F05qV_%\K.Mt*O,mZN))NqGO2&FH._eWME6hsAlmFpfNg$A3<NI^Vg(B3[
%.^#i'QA0("7[OC$27VCj2#KuaJ,IBb72eI%%3]pUlD(<:k&)>b9Y'>Vo\;M;=l3>eOWMf.[90.&XDVJc7ik1bLJ5ijRTBl.[]NSX
%pb3_0rl]S+@2"CK"FA@G6sK-QDYU2dVUhBO??3Ujm)nBU\oa<0/pFtoV-gUcm!'nc#5R'rIQX8+S`[r(NjiO?h*(2B69aDE*S6qq
%HbH_on:a$=XXj%V-Fce8>SD'0YYeuBqo"0>fr4J+Q92UTN"^-kM^]<4b[KVOUS7)/9)k;<S9PB0D@(!caM9h7XGkRf!U[VMc\<nI
%m@8]M58)l!8SGqdTL?/,6Un\br2Rdo-iP061>>skYGV:C'Xjm5c&#tP!gr!8lK]IL\9:UQ^?Gs?31(E81KNp:%8LQ8_;"V?.3TO`
%,mD%8/bj3mn@].EGERRH9a*G4h$4r:P(Gphi#Tl9fsogmal2(\#LA$SG=-p;Zf0_jh\t:^&AYn*lo'W?%b!.&/E`YY(787H[L?g3
%gb`6LTrio0B0A:g9H)3kgi3Dubf<kr?k"$E*ucFn[)R(f)I,>[7KN:-o4SLp]^=lg"7BJ/Y'g"!Gd/kd+<PbD-Mn)[h!lppW"i!]
%'kJE^YSTU(rp(9S7aHJfB-$YA)anqiK5W)2^Fe:r]hXRTND69d;aTpc(VcHNpb$i3J&=>SQtp8OZ)"0Eq/V[F3Mg$T].lV<L1'(*
%FO^mFX8Wf(oUW*`54B&>5rZ%n12=.Q=:;NlG?]1AZ1,o&QuJ6%D9%cs'ji&3&$,14UVj>`/*>VRa0F_.(>L$S#3OWT`6N/053Vj(
%7DZ[P#_G_@=bPIC-Bsm5Df4$`3CuifPp^UTUH18%cP>]11ccT]Xd^0[7UpkdT%;.XYm?GBNCo1:n<c/1?s9sX1V%2m#+PKr'5>A?
%:ZK1PpR^ick6.;(a$N9]-=;o:J7Rn<DjsT7UjjJm;q%X$FXk/f)>DV(Dk8fRWsMsbZhpX^pHS\8ZR>B`\Nm3%>2hYM6Li.#OMBj&
%HK?1i&KCprn6\1)V7SPAA+$(4d)T<PX-]"`-&fUWW,kOBXp('06s;qK(Fu@Il8B_G,K&W=O$FWT36b";@4UNOCf>TO>u@9T'_U^4
%a)qj#RVCI"ajl3[cVWujTp^PN!:3249PbTlbeJ&\ouuEe>C:;-;)+hR'ImlFnsqo(CiP&pEhd7g8'<kUD5%3&m/WJp5N2j8l#>]1
%99kF:QfSs?/!a1G3+1'a*Z`%^8Y1jQ0(:'Q,/?`\=u.-22`Y&0%in%c@5F[fj>ad](]Fr0pN$#+=7.B_6u">J)aoftH7V"=-JfGk
%b[hreU6'*XWd4?=?3\gc5\/(\58n)TCT3(.(>??deQT!#b:n5K"W!>5qcZE9rd!DUMG)9)4'\>r/lr:K<>H(]#:m*^4'et^+he"q
%0T3^MCuomB=4s;t1T%H%.`>7,5O*L9^f'1E>G/CiJYCkXdcY_Opj$CJ7/Em.P=Mli;/C;%c8$g9bFZL].jG;]%$&!p88gNZHH7,u
%js]sFoe"5FJBAnA0'W>FYktmL;^J3onSl;pg7KZOQc&+MCfuT"n*o\ON6mTk6<>"?Wu$r=0u:*3^,QS'V&*(RBUlit=\?RiWSt(e
%?s's22&'K2FSKX\IIG8doYuGfN'P/cGkJ4o9b)8c_C'tjRnTP5]ffK.pW0T(fi8i9T:2(?m`H_;R4i0_g\)uHHY%>&>.kQL+jZ1p
%LKn^<7tl9kO!0abcI9dCB\njjU*YllG_bY)J9#)l4$MXVh=JaF<`0]5=)A?>.p$a:&OhdC(%0\U><qHog_I8kg\<uTIM[DCd:o:0
%NAldHbP_n\L*H%nQCA_Z2.(=<53VQu[J'/[@kYaNS%UI";=5.@AZUfFNQ8F&9,m`gblf2DZ:oKP9pqofn^HdS;mX"%>2qdM!D'*3
%+Fm.j3(7sOTlT%R,&eKkH)[5KX*(tA(9GQ;/qsH(*b"6$;KUXf_e)uSc/*QH*mXlikPN`1EQair5'<2MbYa1;h9_j6J']_/qmJKU
%"uq#uRru'+^?(;Rd*i?jJV5W>nk%Gb1]+B)Cj5-rb/^`V9L`VC8WuYo9a[u(?QCJs^9&l-//3P>.PAgOlcrIIk2=X,lrWAI+OV6!
%=p%?;-qU4J13p<kFI79HRuEuir)n6843j<-TK`4DX\OcD.]b_Wbo772GFP)1@3W4mVPUH$2+uJ#U/nI2V;bi@$.8-!\n%qk29Ase
%#pVh+4;Ei5e9fsHTa,;F"^dGs;qknZ+/e%g@s)8lnP(PMlf\>;*(t"OdF")E:"!I7P!IhBZUN];VL9+/2eKU\`OZ:cj.ANY&"CAl
%Cp;2SlT,N2[\)!#HQWm+HO^7+DTU6q?k*P;UuD:F]F3Yk)nkm%8#UA6)*71jg&LK<D6Wrf3k)_h^3sK;W^]!NE,tuej56,okjI7^
%+Bh?Rh`*lL_H!pJe8;9k^U+3J3j%4@rR0=bT[+Em>J*s/!]Y._2`EX%;Q_H&:$MLTo<n+t30WgV0Vt8W.^RVr3Mj5(<O/p#W"C3k
%=<LZmXq[#a6K8u'1I;T(.(6`[h,uL78W<#<ZZM_S*t3U7C-8o@o6OA[-EHKT1j9Zig]E6)6D!c/:U'0H]]US>niqHPbIR2_[S$P?
%>q]hs%+1*-@+WSIcV)[D+2-td=8#2;_)]^kh,=,8R%Y+"aAua0'i6TPpfLZY"2L=nn;3r,A\iKFgSEdkj8m]E*G.O(4?sfQ-9eCs
%0TGCH-/t-1KT4nPL@Zh=j#E+\4I5SP!Y/C(FIqC]QqjEfRH=%MNfb&.lDDt"a*6D%FroUfN9='HE>Apn):`Y\_(F&)q_BhMI:69!
%6HIm.7suHQFl__jT1=Cf"a;#;jgXJ00MB616025^Am')+,XiJ:-4Uu?QmH4,M(L/iCrI&K-o(q\?FDDIHb[#.`FN)j7K1X-]sR6q
%>F):<3J7AU)2<o:0F!6D(OZ,S]C)GbqTG-m3SncAouGm>^$iOM1N?\Td`hXq_HHq=`8V4*]&Tk,\d$cPj`rWE5'5ueK$h(cb2VJo
%B%r`V%?Q$'hYB!^>lE=0.8]Lp8?i42X.a^H'@r.XZJBd^BC?T_F)a)QX-*Ef>@6ZbX`&Ccd<D1#k/Z5QZ2[e.N8\PISituua9e^3
%VrjfL@1#PQ1:t][;)64@PZ;j<nZD8g^>8X7lPm"qGVNH^1r0RcrYh$8'/[/O[;"I,^c/QI\,#F"mrpg&)l`Ej5(7&8Gg:VWqk!DK
%DVs";C:h*HcIX?t$nP#OYuX`W;5XG'6Bq7<LFP`>MI*h1=T4]B:]m.iF?Ik!gneA,X=c"><EXSX:"I4+1JHIZff#P!Viq8Gf<9)G
%h9qK%FP9&V1Yf@6iWN+W#;YR:'0KhT?]Lnp-'BU0_AZ)5dBjXiGh8PCgE!m49e[OV1dMf@:>HTIGRrlFT-20Q#9kMQ@AWF_pX#LU
%_k-V-?;hhF7%s&Q2cG'@pOKjY;"bXbHk4$a<USB2!M"9%-96h]AU!6K5l9qa?F6_g$P4WY[5aM@D7S)kr:W.gr@H"fnY<'cBa,k*
%Yj:it&=GHKXu!`(9%5cZI>52nWqa+WrhO,3(SU5uPg+7"pDgp(aP-hTD'6q.]>B&j9O(<rS$^0^!]Wik$<_/0bpCI-IaC.3ObbI9
%EO"M3>P$2finZB[mX9.0aG%]gm?r<>i+"bXI]NOW!M^UZ"NuG3)u@&i+apiQ4Fu%,p:%JYXY9&NrU1>k]^NnsJM+Pl)E*n%fh/a/
%nT^r$/r&dHmX0<eZ93a6c.9Z^3W;^3Ii*-9Vo@8Y9`kbNZ((!7]9m%4e&H3c'DF%PUl_1!b/Sj"Db+l?##'ltBWkRdF$9i83EC\$
%N!Y+:AbZ[1IKh4X!Dn62M9dsI=XH>U`7nh^?PfC5QZpb/mo!0@-<n-4%f)Rg4o.*bOOhb9M^BXf6-f8!(\X$41RE'($DrKk@2+a3
%K,On4PJ@BL1]8EFp>I382dPm)0"3[JpUTo_T&,6-rZP(OS!j!oQhMlJA67i`>aKT.W`i;06Jpcka0Z5(\Q^9N$1@MY'CLALl.MQ\
%^YA.J5C**<bd>X05@\)n0sJt@fOkWZ1C!Oj"8e%.IE'&d@pkpWgWt,bB:8NG';&jq1C!QP0JI5:qR<Y7Ie!9fb;[aRIf&`/c`[-B
%S&^S=q]1/&oQOY)H1U1loh4i7pHO'&jI]blJcjp1\oU&@(%HWod`GQF06%e,]4rNC]9(iKNo3LJ)dho\rqI<-pBUYPPpc#!pfIFg
%s!N<rhpV?;l%\#4G5q?PQJFK\H.DAo,tNMd^[pjsRdW@XpZkQFGdCaqDK8PEp*MH_It)tHqT\Q`dl5TZ]mTDIYIe0*p*>.&J+`+&
%m\e[OZ4?a-oZa^$Y?l^lJ+E6XdZ%W6iS!hWYCD'!oZb^*ItoQR)uac'r."N.mrHo2s'=NE4>dA[=I,6np-SLNN'8bd/1;P3CN@lG
%TBJGHh&&Mm$;8K&(W'1p[9>5;EWo';Ba3MUo1gXfeUg\%kM)9CTes80(RgrT`3A,^eLMI#W)VFiK8?g,;n;L_Ud_F#qem9S]g?;Z
%cGb02>"H7-/k**NjOS?uR0PUkM<.@,ZBpl%-(j.m-"#2aS$[i!nNjfo.f/)G-[GS)Y=(nUSS3h[\B(jX\;FbKmXE[7dT+*TCAo]=
%GHsS'%:Rl(nP_UNNNC[aXoaFLTD#<`F`(7gk$[5oX6@<(c12keQ\?r/mHc=J/?rRFYEJ+F?&_q=UCX,A=UZ/WnDL,RgJo"pK*G\(
%mTirbCPPqf6T@e(HBDRXm@B/()W\<d_AD_4#5pT.:6TU^pWPTkhFLsCA3(q%2V6bdg<Es8->Be&5=*SYpKD=m#\CYgO:Dg&dP2E1
%^%;n'af^#`S:),^`?QL5GfCrr.'&/I1n2l9DFsCQgp*QU=1VL'phCBoK$ROe#tp2Cf5oNt!PP!=1ctV(Sq1eQR%)M:;7S9=_A1j@
%D2E^H)QuP]2f7,=AY^(I.9g<kcr(XkIEXnK9:^m/9G96!H,j2=m7R#RisYb"J#<ou@=c)GFj_af*S;T*Q6\XZV&3Jc+)&>ojWf]V
%BYqEu,FbbjChYNF3)i`A`6+4!im1i4-dsstqhm"T47TAS`+R8TFt`9Jom$lgg]au8'3=Oe*,ZsA6G@,!6YrM`<q?7O;2-j$X[0^U
%-r\FO@K+D.4:H;\45RFnO\35X`jIhPYHjg.APQbAXh7T5r235mKQh%CgJuZ\dcE6dRhlCL^L_T1r+deH\1MY%XDB$@lBd>-!7Ze"
%VuW'>Pu9Y85/iFPd6<jsi%WUGYJg@S+Q>u'Z6b&t#V@Kk`YQs`c2'DdX!!^b$jJ>L!>P^tC(VKISFej(h2)t6Un&orW?\EbVS&@]
%hG5=2pk1mA,qWTLTJ,A-d9"#HX<da:L\p"-H0rHLEiKVfndpX+M&djj3j`ddQ=]@%MU@U4Pee+=.Q3?$>:St`H5b85Lt%6k7;_>[
%MYa$pS>4Qqf];d?O_(;fg0K<=Lec<<R[<4$V7tXTntKMWS/-K@B2uB":o('9b.i$-n6%Rp1qrma"Fcc;#qp]=A-m)q2df8nQ*"Bt
%N]0*u^-g+=3>"Wk8AE?c;TkX`Z3iHA0dY#Hlr)J.U$<1i9LTJLK3Ggql'KMgZ5d8>WBj.k<3D>7'G7tZZE_;_KWmFZV[P<J-$fYE
%=D4\>')!i^BaH>d]X5bA+WBBO\s4TDA$RNc-ti"eW!2Ph:6ZJ%\hmhV@LR6KL@?RHB'V+*jpJqg#qjY3oFV*7Q'UL#4VUO'>3,Rl
%<6P#l4Y>"$U/5gLJ2O(\2)7fZ]']jNH?aO$DmS20Y\V%N&MGb"+MBAXZTKIB*L'ENg+O0iQTGt.7]Ccg(re=P$H=7Jb%qS?;!F\W
%m7J7*26?ipmdTZf1;T9670bEEQ)-p&\^)6H;\Xb63U%rrMcfB;q2iKJqE10"V(,Z;K-P;t+i:V\fHS3^d_IMCP!$p6:*^%=j@.f.
%A;Q4++X3&E6'eWAPh>1ZRI"Ba46Dp:Qc)D`dNJM:+?=Jb![G^C6<NO"]<Ip#0Knct.PHjKMI;ni%FYBm9AW",eYEALCH"f2__T4k
%;-lFr2MjE:_m6X7"_R-_H!"R7?^<<<,,P\DntC=@5Ac2$P_Wi,9T12Ei<9`bI&\9HX6<2`PIL:g\jFgPEESSIBPUi:Q7L=N8@,tB
%o3U$+0'UdsQKG^NWF7/+WQ5mCEf-6$&/88/AT\SL;*#h0(bdc9>mPV2S'$:bL.#Qc!dOm,NehQ4Q(hcqfB%1c=+Z")*U[YZQWDC[
%FLk4?N9Cn"Th$'8e&)C\*+N,O\e:=k]_KG-`BhdX$j>4jnp-t[@=JDc4>DchjbI`PA/H1ted2c.d:[<I)%NDhQ:8!As)o>acK!Zi
%-F,4]W*P8E-ECn$BDpIY/6-eeN4j<B8"i9.bP*YF/h))"IAmpfGdYH^_dj)"$%+DS/5&R.e_S/ZQY4C$bM6N!XpImXAhRF-[&hi2
%K-;kbWHMWO)Sa21gkA-;m88W>!K[I,GLZGBL0/l!obnV<-6hbK2&fM\CrE%uLYBX=L`TKT,DMU519JR1.!<r5(iL:j-Mf3$&J\S`
%6S#4:QpW')NX[f^eW@eVPo<k<EoXNY26,jS(-.Tpd3t9$6qictFZ#[5=cT87$?S./.b7M=X1g4a-$b0Ncs@e)Xh)*<f>Y%YGpl%]
%k"Kr5%Xut*\0/?m'b4"J?;d&"Q>/#u9J>q3<"P7`>:(^hVCD@HcHEcGh2tHJCoJke?;g$i%4XMu!TlhbZpdqD>>28t,qQdB4>J74
%dH9G!ejYs#\<SJH,X%-:Q_a4=oWDI(>Dj7\L)OY6:NO8'[hC1j5uVk$g"!]`.C0I_a)fWB^Z:81M):%QKSBOa3HB8@+p=rN=+&)*
%<ngHHRp$M!Eg3E$G;u%bkO:&rb'"s[3dJ<<=Ooh-+Mf49@m2`=eqs<"SgTD#W-OIteX#-tGXZl.c?2.nG_\cGQ\u[X4";rWk8YFq
%^EAh<m6W4n):[-VE6R9Q!`,S>"5ERQf?Xj)q*+`9Va&5IXn(]NZeaMgq<%@VQf%4[]&-jZIJUj>hnOL/"=KfD(Q5"&&E6.]8NKYu
%`M<J9KNPiP,ZKFCEW.c3"QM#P,F#*b96+%!ju2QgnYF*C;pe-4CbYDfA5NQ:clBiOHJ24VG-**NN]Ist%b4q*3X:"!-AIo_NOi*U
%`B`T/_iAuqQ'H#jodd[Wn=5q^=M[=AMmdH:o@%pJJ,+jqHFF?^`0EAbj^!#OJgLk>nlE27e[g[t8/R"04f")Qr/DM@m8',]%Mf*s
%'_HEgmc\C8I9[^lNWdVa(K4K)WoHJZQS:dHL^$SZE2e\E>=%%5/n"B=Gmq)-1(4R]r$?u.Ud5u.=:k^3.[7.BGAX'[iBUgukYA3p
%clHS)a(9hn"ujr3%D%kJoEouVELoiHl)r63O_uro2q_u&<RaGBIR_.7LNd_ed6.-PC]G.bJ;Bs(+G:j9+e.FZM%S.Ne##'V$EQJo
%GU]3kpjnf.bH$o+Y?0h4)a@"[JR2;[eBHH=m1"4/lfC"02$;Tr^+1)-9*R#,1TF%ZS\-3r76ESBp3P$@nX3i<WP/uI(QX*S(Wm*V
%aZ=uQ(m_'u:p482B^ZCoq6?u\"iB=`L(>,aGr]3$Ym/)L2?GI'%gTK'Tlu&\P?>$:lYrsF5Y)`-FB=VhF:mc%((h?#g!tZd]b/m:
%YZRR;UBAje7SmV'O;9[K1--GE*IMuNK*(d,ao\3NTSF<QV.As0,61RV?Fp");+qk?RO@bMosJm8VFfBI$Ybqt=al17[AJ*W&4SCG
%PM0SJ?5Cn`7og\T51,p20u8iGD(jHl!X_#ra<[%K(-&a35Q9;:SUbu;\ln02YnLj9<.N+41K,'73$TJ:+EUTg1G"@>/^;`@$/a_#
%!f7fS`SQmQ;I0kY#q^uL)A74-K%e$s7'F`mdGbM;C!_G\&Uith#C)]cA8o@AY7Sb:.'><pdK)+k3&@ND@$>h1IQ()(!88%0#-5R8
%@(2&OkIP*80'7i>TkkIi$%:U-,hPB3=;H*)3G<+^R,-VNeL1fnpWu`iRq6\(g_<oaE`b4O'nl;`E^mC60V>%Oc%p).$tND^/;/RB
%5\k3jCC$\m2sI5OjCoCA:R`9t]Pb2oCU3]o7dC1;'Akt%MA!lZ_dE2$`H?,TVK>7N(OZL,*t?0\f]&P/Uno\:AP3BPO=2h7`B<+h
%oGE2h:k>#`VP#mXU>T#ulXCq>AW,Xd/a+_4).qmETCe@dX=bM)LZ/HR.^MT.<]VagZD(ES()h'GA)YZj$9V`p]sQ1/8<aU(b%3=1
%Ck_U3:Cp`87U=LWJR6!k=OI)@0EacYF/h7YJ(c)1WJ?bp?p3OJJDh?B)?t^fr?`Teiu#LDK^mgq/od6%GnLjkhQDJ\D$?[AS?T$5
%cj:uSY2agr95D221e2"Kcu[iP!A+J;,'oIg]dkbDW"UO+Vs\jX-n.-ESm[\>E"[YYQkjfj"J"M;*+0Qk7S!k#-#^T-)!W(^;6UBL
%j'GC'p3+QIk5f^3n@`K9rW,,V<3?)Q.tB!'>)d^;d+_ZI\=<'BU4;)k-a#46NYT!IHmi1:8[YNE8lC+6":)/s9\r<Q#j*o%+utTg
%De?M8,>Ic6jAph1=cTi\(E.>Q64RD;)QJp-f+Z`#PnA=@Q61a8d4h:n$*ZTjXPTIF2_)%l_Zr`"[WG\&D-R`UnbRbn<\DfP9A_+!
%d2DX+Zn]pVD+V)i`+H6AYH>Xg*"a:Bn()j-N0)YMp/&[[Laa_'+,[Np+A(^lCOEbn"YqBU9HF"0GVQnnl0&aR05X0L$_>D,?q&j)
%F>F#l,&qJ4?H&Fr(90i*i9aufOF^9a'Pg_dG+m,,7K:M>nqs@mUC6WY<98ss:fGt+!i`W[oA.1)aFKWG5QDED$LCkIgkec.@+eX]
%BA02$*J)-1onUSW!5d0!_tjg06d0+e&"#u[*)X^]qQZ>d"N1krjO2R<dhH5c_#r@YJ.c-?mq!,d<fK+*'gYL3>S))e"CW%MaKW`/
%eR_VAdq6!hYRg18q-coq`.Ci7KO%P<QeLK576NQ;0U)QrUS<C]V1;'&#PAb^;`qrRY^d7:R/uW;/Q@S$nf>r&?J7H5J19^#EaU".
%(6nGZKQ.#,RP97d:1qC2q+M=/$k`I!#Xq":V9Cek##ug(lD6jT?:9[/L@@TjEA\>$bqjYpW]p&t#i8os'WPR(*1VedO:f39('#+(
%A;)8DPm0R+`<UVsYVGqh3@i;F(8VOqMe+F`![G#e%:\sgl_&Z:lA-Fl,'(m>"NCF_RFgP2If0=UU'$T]$qB;5/<HV@:!Bk;!,p@^
%"3aW9kf(O#E5C0uFP!=b,+QITH*g4QYRPP\O_'Z'5u!+_^Y5asndo%2i;aW<3WL9*hi*;dao,CCTJehJdGgR%/PG+C**B+-5tI>u
%-C"BP^'mA*)T3L-$Y9X%A4p:Q3-@S,OsWd2W<?]"b#sO?b@;Gi.Y;XWX+Vd!hHXSCY/^@%iSl$79@#rk9ej3rfEO>JDhYhK%=YL!
%$DW@G*dM=ZMG/,g`ag2ol2FTJOKYc-$lD:O7"$dp`OJ.qPI*^XScd80oX"s'4Vf/r"eupeU?3A99E>!DL^;596gsu.SPk9L<.u#l
%abgoaj?^+AUXF+eXZ*K]'(e.?-M.VWG)_S<IXpYT3<8P$]Ybu0lIu,&8FUs_:_'fC;uT3EYJmFJe-+duM's[g=##n/Ml6gLeCo5J
%c&g`@8m"I-JSY@q-L7[&7BoJt`h4d5"9/-*\AKM"%-I+D.UDAfJeuEFYe:a''Y3T)B<VQgBY;BVDuK=aqDK2T"7EUOOl@R:PF7ZB
%/@pmE,?i-)`b\."UKPH#c8m]!PS-;@%TtWEYY'\bkb_(-ecp$Q@%KWSC[MYu+-A^oBZ3B&M:#$2$_/C:+KI=8@CT*n^2&B*.V"Po
%'DS&1:.b!o@6B69I;Q2R,:ok;O>-hd0O@DjA<Rd<3dPLJY+Fps'#]c$N0n)97gqiq0j@3],,@\5&7*1<,Q?+&ItOFa=1;kWa2fT"
%Z7^I#="run(X9BLLs[.54gB'+$WD3RhNaH/nh_O!1>'R^0iJG$OL38HTktR;,lP*c]nH.,Ug%7S1F!;p*akC/"/GAV*F(Jh3af3]
%QR%tqHCj7-dIoMAM">;=UK*7Iq&o2G(tV'WMWU1QAt0>H/,Y4^LVU'fh[%KN<#sU$RC7aLf3IfololCp41>29JqF@PQZaB9@#2?_
%8.G..0PG6J$iIs&/`S*$Or"/0;%)F4N5Zi(]E[sD),4nt(U4H`s2BKqZnV!h[3a7N7<VATeOJn`Y3EosW3FKfc%2ho9-g/<gnNpe
%I+h\aLPJ^UdN'GoPtQ_HXYYsCQ7TY(_!>(XMH^pqO9HaaoJ-L'N8c&Y,g(WaoIJ`j^e=!&P44l5C_:4^&R^]T5s-#Z637oeC6i>g
%&2pU*JRKHC@a(-^#MU*)Wb"0GbTVQk!Y8!pN:=nTUD<3gB?2R\/N$$FjW8)$o)]"3M)&Q37\8gg1JA3OgLJB6B$*^3a>4q'nLblW
%RiPj2bep*QNlYtOqkjUXK=&]6+7BS5WG!JJd[^].HC]j"M"MX3Y:$ZiUSsN5I@O"!(eB9[Ja>Gh-Y,Q`DOnY!5h@0'$I3<Q`)KZ1
%T^`dnS(JF<BT<gh9*gW*D2'[_g82&V$oL`h5Vj;[8SWo@m@]K,YrE=4%K$OBJ4tH$r%:C?O.$Wti8$Z$&G4"TNbBcnL+`faBN36o
%Hc2h.c-$Z`=hErf.lB)6C0?#1Q>H(N+09rLE$[(a>O#$_d82L_*$S'1WL$R@\0in?LQ[OH3+um[@$G4\&NE'mO9*K*T<,#U(co/7
%Y>]M71,dBMlEC=mG1ucG5i;kWLMHuq6fr?!%SkU)SB/X"WhuHQ5ERTYd$-g5LVjS?7q;VE0F0In!IUi#rrGU9_?#b;]Y\J8gXGT?
%ctKT_&1ZkMN&\O-l#LEg=g4j_itm@mn8F"E&o=!&W(1sD,msoAm<YR?UiSlDOBMg48:=;cfPocrJf#CE1)rb&/"j+kBZ#.Qf`gGr
%R<?SEFWErG=-W1dNOEJoj.tD%2)UE`opd%Q(7D$U'WFaD+H\G0<!S<lR+Xg-!XbJ&/1t5uIqX:d/2@4h9Ksh8#R^hg$?9Ntd,Z=N
%SNXiG[:E_@)#;F4=!f0t6m!j'>]4HK'<N%`-9j2NLlbcag*3gG$:6SGU'@$"@bo,`3oKY4(Fj_V*aq@TQc2(G$m`\H]QDS%#j3M2
%6bnn+!%+474mfL&Zo45!YM^mb%p5C8/Q7`Hc(i+edX=Ol=51"N1W^$L1#NEXQ7Spo3=oqm)O[fW4RKS/G@L/1(Eu9l_b($$QQ(`?
%(IVaK`Vlgn/?1WnbaZRk=J:C1+//9d>FP(`r=PV*5Eof3%`1SIf!0^Qeq_]/a?d^__]fd$;BS]3"@HOi0L(FE)(buWd*bB]Z)C6:
%]7ER0.glV^c.OnKV&Bf9:lg$aA1PGiMFr6V%EP1h"B:egOqfNDaPTBh+ECA-)eL9l3g(i',`5Wa^D')p0I]U(`)L==WDkVnD`)qV
%*E'($=g4%EP4_4#UTm8i[q4nH^?B!U?3Er`mtB3l#[4(!7`#eBXrmPq/PN"&7=jtI,([,WYY7=-'<R..;9f4)"'\a_#Cn/>%P7it
%$a;o@f0C94]p$9]hj"pCo'Cr0oG_(djL`B/As`ns<Cbt(>o5"60L49;Ren7;:cZsATn;>te:e$-NFk.>;gnue;f!!u0Jk%0q%cUH
%@nndk8JKg?K0lUeP"8-D>N!D.9lL2sXRPjj)DVGT3J.$,Yr#+>32"7YNj(h7?dC-+da\O_*cg0rdgR1+a<TXqdugLEG>+EM_-#V%
%\VZ.%j#&1uM&"+$qPoIaN_DbDk^m,.$PNF_Z*1*mC('#291L)7hI2C/^86dg]Zah&A=-rBpR;R6rF?&+Tq'K($%r?4+>=R'T?tF#
%DA0Snl4GqCGaipZC'%X9=pEsq,Ckf+O'9n=QbjA;e>C``O/M9":?tRdY\-]:9]+W8p\6AKH(a^>J56HlAMn"\ZCbMMGVs!_r3:q9
%2qiH%&#*c^$4:E?q@Qf6Y*,ee&H_i#2kX4YZR%4bb]#a[f-?`S\rEiKB%5sFW%nsM!2'fX1!iDnFQsV.afs_6*>M(`"2."HJXLhi
%E5HT`l5gi^"9HVqC&KA]0<b`!"jQPpObi8[YEoHM5Bm"^Km7/#p_*1F"%gjG)X9Y8%tsF@mn<UaZ+LmkbdB*fVGh,,"$em3aO>/L
%Esluc6:`!JHdUA@9mrh5dP,\qPgq['7E*_nH"jH,rOZZ;9.Mp3Ar/#=(1NgS:p0t?`'UO#@_i[@YmQr`>H[GN0E(O6qDK2T"7C>u
%NO25X&Ng](QcVe;@lY^8":#;874W<jLT5ECMgq-(9nI)X0ig.PZD!$"]JP7'&r@4@Kgs$Pi'^Ua_*I1(L-1Z)7dLibm-lDd(/REG
%(j9Hl/PpK6=Ei6%(%HE!q;sb?9l9W\5nNb0$3NfR1MJFBH=qrBUT%qbHsB:/J7r]i!9qm_<=7,QH$iEB`%u(2+PR2HMJ#b:+j.rX
%#?hn(&2WuLR6XK%CgJ3flTJ/bP1m3TO\(E-9+s(hj=,.K(73$ALIr84!jmZ3LM>n$ZRubh6tqu?$;E8DV'f;CBMHL1JOQ8$k+Ut9
%VI:O*UegVSL"VNr,>c8&6aH/^rUj:YL1ZOrn7?D]!,-Z&hMD*6"KOA%`uE-$E'HIbp/95Oj8`mX=>)-l>#7Ja">Fql2Y`r.fg(Xi
%=XnC;feS_mQjLF`>lrE^^ap;g^5`Ea&B?onnOs-j/7GD*NmCd`kW?/eNa`A3!jnUsR4ZWeZ:hODBRR5f#[0X>6].YT!k9,Vm-mRD
%Xiksh]H%'*@S3[a#[g&;HkaF!G-RR*Cb^(rFso;VkkN4;JQnduq$C_:l`cHWV>3b$3I!>NREAYOOJ6EZ%`b4tDl.1/+IegK&44\3
%"V;hdD4[YE%.G>[T\!4hkn.kd1ZcTIbY4'$kQ_pS_oU"'"'G%IE"/#-d4PVWlAUFQ^u&CA,uUgk49a!J5Wsa_RMf-]o6V6)2\RWo
%)rfMePVp(Y&FDr&@G!(K9^8tG)-W(K7BqqOU)n6[TH[<cR%_P9oMA"o<U4oin5=#L'3SUrPckM-+4&lW+Pp1-CpIWC_N*2bAoiQd
%)3J\F<#EqhDB)iIY3rW]3SL=$F`X;(e3_*eZls1,!o?7kai=7I[LOAd=!F/Qe5%4q'Hb-C%5VmRf1r@<OpR#qSu[P,m'U!fg63s*
%!%c?\MIrr_L#&e2ZJmHOIM$!e9H)7h0L:NVcW5.<dN-D?J\Z=Z_,&7#,&<R5m0;>a.7[<5MQ8_O[p!c6Ej$BfVCl&h-Z:?3*uRt0
%MF[Y.+AQGq1+3BMLdW-an;nI,BKG":L"",8)sR3<kFg#GaM_+SET/6oW2Wmlm[81=[(\YS=\d/6C+qM;N#.oin.tYm$"hST(^ua+
%9CW=1l=+!I>tD5Qrt":,GgC&7``n:c7g<$,4qLX.$+\$P,pI$%V%(uB2&j[sAqkY4^]5m5CKa+"@opGR1<]hSTZGb;9738:i+oT*
%^u`AHe$SCoW-MMHC'Z''$9)M#0BdYa.JD-L@BfrD]?nuMd(JFMWV?Iiq7m89M%H`cM_,eq>';>_)6LSq*=umR7V"g-6Vcs1a"K\6
%8/l^5G">:qidk8EaVKeD#ecWE6%,rPfQbk65@]Da].iF,a*o4S1;6*(:(q+Xr;>\3RpeN449]XXdQ*J%'*RO,THROZq9`$,#R'3#
%Oa+7;k'qp7%`RgO7]li6(0Q_<#\#PT@SpYuYZe,M1pA4TJM94(_Hso'HiRN+pmcO'$>JHcXJCpf)VR$?!$lM9UL;*QghM`"j]k^i
%T-dP?>&"/7%=p5`L8FPq8*O91m+87OC.pEN%9rnk7\,4B5I6p:U-RuDQC5N.TLp$,A6CSu>gU>i,07R,`]6gV?;?Pgr!3rs!ibO/
%J@:8mnXQ?6i**/HV$'1GY`7mf=ktIQ;!N:8*0uQFNfP9S\o^Z.[&+W;9@a;@?]`$9:naj4W5Br1hFqL27NUAiW7<Y-5[:W>`f0V<
%,]tkfSaZuN;R9@\Z:5@_TNoY(Yp.1en.c#(3C$6CggscaMM5W8AJl1bdsJV$+F>2,*C:m[ntL)B,g=/-+DM/nJJjo4e57D(&jQOR
%*j1anXDCWtAE5D-:]U#\>)E"iA=-Q11TK:sZhbLE+ChK8PNSU(>1%FAX>.poZRi.djeEZ7AdgtH`kFo2->3E*cC-C\5K#1VJ:_n!
%[M+R%FsuASU5([;Ye[TREnF;BBLj#coXiKQ"IP9"]>1#BY"Qo55uWM`9%atBr'kb&Y^dlM'QEIqennA`dQh4i&>Q[14A9m@)L27d
%_u?`Xn8r"S)6UC\6I/,:U#V+JT2s?R8e9q?^2Ph.g.8TrMcBdYVNsXhe1Qc1YDAlb\rWqWf'!4aZN1&Qb+Xc&_2(N)HPl;07^EpD
%dK$t;jVa6bk68@*0F%$?+:Gu#XYFF`*I6Yb9JZ<BLn#9`GSj#l$^DY&XOg^G(6DB$Rh_:l>1BXmKGT'GW_Gh180gW3"V$L+=gQg'
%Umn-b&M8B5dh'OMJ:8^iY8Q:m#]:Pk7#RpDK+;:KcXFD2<d\Gs8e;$p$VNj=AR41Z"Ps<>'L_%NRbg8?$0C8jg<kfq`tuEbeKMt4
%7iWAWJj;0Tr1]TMLgVL!'k7(M8%\L)N$"FoFEolL&F2_^+$A5XZQ!n^0Oj'-(oj%<nFAH,%;Udn4o-$+Fc0EN^tAYUmPRG*+Zs"e
%E2lu07Qb4j]DJFs^/NpD1qiqFm_.9WQDS#;s7Pi!^Unpbk4Y:JjU/WMjV*.8jOq_[&$N_Eldr?>RIj7hI/W>cn'7Q^G!GrYmZ7A]
%J%\,7oU]'-W*-$mM+'T*(YTek1FD7EYhZoYD)!s*PTui#`*V`)(m#Ic_^ND??q?46@BPoeBO]g%$,m1PPbuhTc<)LUJjM8X;ECpm
%E%kp$UPYKKHDs3@N0[?;JTNiJOq_Y1NQ]+QZ@DnQ-_[VN4iM,k*8tClbp)#(IDYMfeh?PDaA%4hd)tp/9a,&9Me#EcJ<,FIV'p,[
%HoK8'jLsi<6u0.uj5p!I"s+bMm-Afm[?.2r36g4L@+&^c'CkbMOHPKU)Z"SV91mkUe^\7e4\QZB87-*2_As@3J;;!T5R0)>T(Qnc
%h/#brjCsULD?+Or39-dFM9qm5G`_ehQ3[+<l7A;<LB;[eA5JmR\s\s=oWHT98P-aMJ1<0ZFE("3,0Ym*M)"J+`]+'@6U<diJs"[M
%HU*=S>[oc0)aXq-p#JpM'+.o"[O!M@FG)n&!#Xk%&7u5;Q[Q4p;'01IAoJDd\@t=3!4t'1"-O8+U!So:V.7aIC;&PUAk[311`#=m
%-:NQKXMrsVg-dLU5SalF-FDB%TjEjf"/?r0Z=kE!M4k=2kGXMUSkFd?/Tr&c>H6eS'C9Hb))2Lc^ENi^f7uKiY8`iDUVNf>@D(2J
%V.\30cWYZ)1B8kM$V7m;%$^((70j>oOudr<^O=QV(VMXq/(O\X(Y3NA4b/Y,U?-4P`$Z'2-b:7`d_GFUl<k/1:kj+>ej<'tG/Q!F
%%V&8+;^5KS5L>#TN^s7NFHOA#HC[1A&m7*NX1G5L*`A!6&;eT--)dN6Do_";[000Fj4f][WE=T]l45c<]=7"#.$''g?;Et6M_`JF
%Te^P'$)A?A/)csP6c&+]hQ%R2Olor5T$NdhbKIW,LQ!!i.cJ9YFj6'a*iE)gU@PQD:;olbkCJt`g5*"^3.ur9<>V!.F%_+CV"HXI
%%ms!E?&p/)pD&5TH,r!lCZumd!(W$'r.?2&i*Xn^%i""HrW$7N&Vip1cQg"11+6:oS5qn-/uiSJ.%\4pY/%sXIG;/a'Dtd<cm4UK
%"&@70U8?RcGgW5lgVkpGm8>@DXEpF#f:iIIRCA%,!>WhEP`5\>JEWp:)%)<LZB9,R_)7+G`H1<,gIPBt>!k)GNm_qNAN)u10NoBN
%-I>)t6ALK,3)PrT7_Li#^H=mc>&sZu?m!R#dAS^^b5r!CN6@97,GTMfrcV#2D4P5l+S0#-hk=Kphhr6f.BVISU3>JP<jr`DhPM!0
%/::>CNI5i8?/WdjL`HpW6sY:U-JF/K91TZNL;"$h&dFJ(<\bl\gE7Wr1m>I1`Su\KU5h>J<!t_f:_m+ofi<aD'"RRr)%ne7*gO?N
%(b$k@Pn7Nh7Or]hR?in-C)F1N6ZfX+2*Z06+dX9]!H$5Q/[?lN^&hSF=^2QGeci&;3K@:#TUBEm<0>`lDM3$SHp"#K9#"OnS6j4E
%&uAHm<js$O%CcFd48O(TQ$U?sd0Z13CaJ3YPkb]43,pW^!TsO/QR3pBBb(%A82#_N&ss1]_M^i4Q9bP,WpmCUOpJ<\&gWu@UeF'k
%K0@>7r^R&XAGT?G0^rnTLOn";1:/Lr,)nAsP3c<%liq)-&ub$LMEh4U-#aBM3ibgQ;C=pdiT&GUdKQ^S"VK+]b7iO_Lh#SA<Xg38
%=:i8I!,Ci_/W4'>cn^ueBV;b+S.sg]1I;,l)>?rNGSuUCa']`J#..s7b)/cK)f;a@SHr')1#&r6<!6@aNoN1i$H+]U_BR1J&Xl.]
%$d<DqOg0HU%O=LdOU>#Y/3\>^TG!HkZd<4`jut6r>Bf\D*&V[C'rRnXT(J\M[*,2fT3.[qI?hWa1US3mN6%Lkf"PTji9MQ2&9Sl!
%S0W5q$W'UFG9NBY!;ArW'3Li:*?lp`Q?tOphD%.+"8<=bBqUX-pQ7,!pf5P(=Pt?VKuHl7+`[1Zq`3,J,@A3b6p"_DWH1)gBX*eq
%XG`Ak2WWTnP<k<@-+PKkQ.[T`+\#9V7=p)VhTK*+T[=]*@qTDiG:OtCRP#dJ[:oo3Fq@OX&?@M>Y\5LdA1<ok?:;pcW']K`#c+3M
%,r"5a^HGKL&TB&b05Q[L!`sQ+K09df5nQs9i^m2%X`4^"%NklVR7M86?(i2n,P*/u5^IPnp)pXI6p&;"F@ocr!A?F1\=clTUJN(,
%3OsAI9>4]["?,0W9`#!\M[XI/^R_7U(K:<HOL\_AjAh-G,')BOX-,DGDUE\KTO_\c9#JLUMhbnF2Yp>Vm(0)_NX#;7;@G97'93s'
%o;IM?A/9_$%'J#b1]U4+BX1]&5rQF#dQEf;4.c8[:lu9kNaq8\Af'en9^<MN.WtgHMq;37,3?m[)%@jPp#@fs"X^T]#%31\!V+&3
%LBJ@i]I^9jM-OP:*UfT,WfeMPI0%p)oG5/S/8&$n<$9iR!GF_Z`H[+.&,c'*q)>F3qtO,;BZ%eDafm2HSrtZW7_K"u51<,9g^D+O
%]Q"KM";XZjX^r[!Uo?p2\'UYP3`'"f`>O50TL%qp]OP,YkdBOob^D'Vi<-B,)-Y-OhM1:_5lfuH-B?M))&G'-LFJ/>#%S+!HXYE]
%"_rSs4oq]IWE+S'Jk\;4^;W\mn-H;T)I(dG)Ge*_IRH^FpSZ?eR*#]J!;4CFJ*'2F'K#=NN:AqX\IMSeY%fka>DAu[),4r3S1A8b
%`=\#>]C.5hLloOu(r=!MX,2HD8(aZ0@1;_91$;kL/d+0&kfY:F7>G6F1]S7AOpjrc`\*mCQO"^bBCboIJMt;2/\u^jb$p;6-N.V@
%@54MoIQC+ZT]Eaa3/ST9Q7brA!,*6S#)qZMeQK0q*eJ$h!,_rXTXDU5)AqQ!n.G:EWjeM\X6Y$=.]1Q*gnO<E/R]l@Hd>>3oUJI)
%=0rZ=ZYEUHehfI@2lfYea%1_<Sk=$(egrh]`MF4`!jhF1`t<NgVilrbD)1m`,?&aMTS:$E8tP7e9(*3/8lj7E81Jb*g*QCP""&F2
%Q6(1m"-q_,l(st*3spYW+N7fc6!]:YQ9C>N!r7.5KN%GOoL5dK/kB@OM5YkW&u(ctid`*Pga)"s<o9f*1\\1-L?.>F"7le!Dop4C
%cV'0cY>Oinr]+\lRcK&9!eY*WJ0E$MZT)ibAl:*ZeP?%n3kf&O'j#CS.8pak[>;2SBJ$<a6A20.:c_!KlbO0EFGO1u7>hlL$q2UB
%RRdcZ[&d39Vm2B%)!.oVNj15o]=qteW<JBN?`,PM%,S;L+F?!485K\mU(IZ*95!Fd'E9>HR;.E;dY^dp0"+q)5bnuKRSilEr6fAZ
%fLun[1>ssn$7F=/l.E1Q@:lD&"CK_QMq03U=s<haAe,n\(5O*6s2PTdOpN&OXN+mE.kBW[eff-1:m#m_e^%8!]XgN+->5'-L%Gm@
%3*@2UPe#_GdjsWU#A/QM9h^!;T2^Z_.C-8Id(<^g0dmFU+<G*CS.abA9iL]r$P$q;$3hJ"(jgk4AJcP_g8auLe"qt7^L0aO$3+#7
%W/*HA\9)a8k,@'a<@*5FAu@:7IOl%*o`H*3'W(C.V%FS7XqY%Z\6u_1V%*B_<Qf*);lrg*TgU"I$_\PRp.U$AcEC8B0k2mcs"oY9
%ZA)h!<E07hC#K0cI=TL+.tc!N&^EZc(Xl\u>>qH[9)@"4];\Pq"A`Fe/8b';l*Hb-U'5mLZ3=d0G,<g5DC*9@.Y7'tM^M)eg_p(4
%#D\@*Ero,OQZ(HqTN>hr+AfglkaeSe)-WJo_j*X;ROeMOb!NhBoa*kV'/^qVBnl($OX1mE2[Snc7WaOH1hr3CB_m%R[L/-)F6dX?
%+9@:eMo)-Vf1H+NZb7-KZPf>er,=EXUP/uOn*h-b\PfiO!%4[tf%Cf7on7-aYfE(q:l45;<372\<tb%TN222@_2QN6]8i/#?Zg<L
%7]..j>VGs[Q7Kl/A]?fJ2_[Bk4huk8FLX/9S/l!T@Y&(5n`g`q1IAN,PR4$0Poa`G"@Y@BcY@Li/9VF@mM/k4@Ic1SFIZi[_4prr
%FWBKQ-F9j2c>)e?*3?H+ENJh*-<d1.a_j\_!7cs7s(\d30j*3MK.=3MIOS(j0.@=tZ-Nb<Qr=W](cu<7Kc/Fj#d)he0Yc.KDT6M'
%A7`i(*;$Lq$HB7t2-X%EAPk8,2-XC<T9-S%EO1uoH6atO0#"&H-ihmRWJFeg=K-6gm8\1`[BZQZj2O9_R58YJ:D*pM8Hj2i,</7q
%E,)YZV*k;\Hui?5`fs4R+Ve:uf#\5;.WBBZ+j7-&i[f^U;7gu,9#AKKWQH1c35:T^LsT_[I0g1$3MrORbc=jg+c3GC0aY@@6."8:
%DNVajT1,TF*f4/O1>Zio`eb(k>F>.$2+""<W(=X-q4:_V#m1ic-6e*+!5c]/,[(R#XAH=qQW=QHUt/V]Z=pAEp1B1OVEMBHk]O9a
%;G9>E8`AX8`/%+Oep!&BZbaF&D6`Otr5`8ACa#X_1EP\MSW+(5,/_3pZ/gR)F_k6_p+LCj%ts;,&g!rn(CmMjOAMg=!6k(n<F958
%)5KY*8'@h\j)sNF$J`jU"O3l%#>0s.9WC%JMq\8-eC[o?qH?8=$QpWUPAiF&+t92Da/!%.5fFReM12+F7b."8@(ki#WX7:DhP!#n
%FA$q/cf'bm7Zb`^)&(AANg;Q_V(8?8KH'kj5e+\P)e7XLGKKD7PEKq+Fk[GN<trQa@&<7Lbs?1k5,5Bb42AYh/>EMD:rCE]l!b?6
%FFDI\?)C+?a@oo7a3@;JG)J+]'I1F7!E@n+"U5Jg>Pc&p;jno5E,#^QP)1lP7<d,f:)^Q$W>!<\=$,<?3Rqlp1_+D&24T%'K4<_l
%@c0-b5n7Dc(S$!=kCf^^Z%OHW1T=nCXPtth7S0.M*%mO,/L)"NIp%4`F,I:p)*h3"'JIIC4;c$TFY2j::`PQEaZ)>T31-/Eoj-_o
%Dq3Kk2K[q\S*Q5<Q>fe'<gK<&CuVB1d*)N+,uHr\/!i5YpN4F!<8uR0+E=<3:*mWU*9,-ZH+:_O@HA!>eRB)tPrmdM`cGeBiT"K1
%F#[L8=I'5L_i\s>2W$*+3'NpI=m$5!#6s1S>MAQNVmNhI)@g7-2SYE0F%Ai]Zlom6P8<(PFO"i5'eDf.:kiUUhrp$XWEJ5#-OcpA
%#\r'&?T>>1(X"mLFH;io%"K1!34D=KrerCu=;NLfN%:DYZUecu<8l''NUD`TSDY:lEfDLfS>ImHPpi.;l1']Z]Po)K[h=B>s+j&g
%>G?)WX`7`.FJ<_N(,Dk2&;>a5MUCuH;)n=iaJ[I3_P'Mg5eWitLUW^'4.OJ;GIPJ/FHUV0cpsor;hQB"#Up"2+^CfC>KO#NiJaVN
%#Mnm%_ttQ2GGb[a_:#-=*Lp*Q.@lTR\"^.s5n4B^8YF(U)]\fDK(]X23;P%t7%c>gK58X9?RBB(:i.MOoRe$O>Jp7t;1jK&b@+J1
%/N#N^L-pK;:kNgO*#$\Y)LQ:fWPQ!qG=q=u9OM'(Au+>>:l_qi1H.:V/kCIQ:*YHtF=TBHg9P,lf4J&@)Eg(KL$Y3n%o.^/Gi;kQ
%E&;XfQGF),U'0O/%"<.NH!t'8/O)5"BHYQP+.T-1$X(2VIW4,>cK`Hk&'fk1Upkt!S>9>KADInb36fO`q3<(mH`XLOZkJ,10P6L)
%L*)q5_5+g5r88iTidLs"+<2uEp!8@8*5JV<QQ&.K)`W47&'hlA=LGf8#7%UtZH!jYK\>Mjft:sHE$gaI'5ma+biW/\k]VDo"F_b[
%>CLP3691B5IW2ZUgMHA3PO@$._cM/'/68S/)YDriVj,JT6Oup?#?>Ag*h3caZi#e(S=!Te1A-nR*(p>=l39>[j2NXsLn,V-+<DuL
%[f#&cDKI9f5I_pO4A_6e%uqF-NSj5X47:XarQ5Y2^_(?R[f#'>'+lk_r8=B4Cii[B+'_`SQ[$L\mR`sRe)1K*UfNFeo\^u,ioXpf
%)64`eVh6$1leFhTise.2#R_9Eq`6mMPt=[Ai7d2H)*bVh'7MlhnF^Ca+'bF1n9O.$f@QdYC]*,V-Zh7crR@h*l.RAW3EjKUL2]Tm
%c7[+W1[)Xm&9MI"20s64G#G+po\_?GVPm6#mZeL7Xn:Pe=BY7&V$@7,VEfC(#6u$B&ZAG8NcQ[/']%,gHPY(1^X@`:fd1LQTEcj*
%X:g96o\c+J7Q>;Xhuj#qMql[lEBt7.cM567=VCNLr8;7^GrPN7OTlX`riksGP<l>i)'o$o8NKPjP79`9*BnKkFae:HWFb/r?SC7)
%K@<D%Y&EJ.-fL<XKPLGCUn:l8q-Eg40`jsTB`-f4>n!j*nUknL;21N$5Ifb!!i<$si#oH_[e6%1*/b+RTa*eAL6T4U>CLNJl^"E=
%+Ije\L$Ss$=K71BbQQm,kSBsCGCjeqh=POqKL7Qt(iqVUXianLPm&^jit*EAh$Lq==[!UF7M&<EU`.EK&<:=*"ar`L%_>EsJaN["
%U_bVjXT[Sm^hL#G#=3UrSu+#$G[8Nih6;OLDb#gg-O0lm>&tS:i(VDu&ai?&?*]2s4#;-Ob4<o9_/iO]m?nc\!Z(@""ih)hd1'"C
%giL+eSDY9@-2^9."=IgB3]ei1ZK@Kk$,I3L@Cg=="*\:QJ>"dhJ[=[a]5N)T9KVBk9Uu]a'aVr`5P'H$3REQHI,M)6d/Br&%id14
%h:%)h]Q.r%0^-;\B5lmac3@#_`i)=-3q1'-MnH?HV]M5oCuBO8p:jbAP@OEto4MUlAA]^CH`-ii72PpP[ABgCYiXHUX@[uRnOCBt
%/\\;Sh0LM>CW#@qBBTQ;SbcRJ"!H0.+fQVArq96Un]0l+C^AKoh"fBJB8KD+5m<9"4>#!MWPDqfE(;a[![hP'*1tL[%a,=P3E(L8
%g2/,;k>nL^,3_eZNn)XQSM>[Or1c>g)\Y3(%GLs<R(ujH':>aU1P+#N:3@ia7tVOubXCCE3u+i]SI->Gh@1ZJf68(c&:rki=`N,o
%^e(#QAC4-Uc5-X*^7bU@;%HKS:'FB+fI;M6WPDZ],?EE>PsO=3c=CPhB8$ju#!*DW0d]u17,VU-,`-Uj!iI3d1l.P*S?//1-0dnV
%$o(X1FWtc+_M,s51D)T*[3k9D-NY[g/<,;l&NGtenA1Y#S5o_$\BY0d3_.d$DgB./_)@3A3Y+47g8KE]%ld]&=js\8!G<sX'%&I.
%JpW$B7!nERUP7Ce>97`@)4.f&J>5Q7Cq&tc4'%K[T\8gbo;Pt%N!Gjq\Iu$j4Q%cOd9qn&J5aW>kHj]/__fmA2`EkWQoNm1][MBm
%;UkirgsCQR$t5IKTE45VHM"YnJAZOQYK`@<S1>rg+bL$T+oe%OC$,Le$b7lK1uOD$`)PAP.;uJ.@0[6$Y06kV2Dj?>-7MVM%6+e9
%f&1ZhE(?d*GK']En'p-Yc2pc?9bqJ\=MU>k`*HJ+$TO??.!;'aS1TZ0%4_gr)]L;M(3$ti;Cr(\35,<!KT@Vk33.-,"WIh/HAlAR
%K*C%MYH2b6!`!?"512F+d=Vh9<Ab,&F;7`T[hRaO`+qB9']=4a8':g+!Uc3C+`AgFfh,9".DXWRD4ruo3*T4Z^81h-YN0QD-A"c>
%M*aUC9*%dl-Q(l&3Pa<TMk*BKE:R<jl"K2Za$N#oBQ/L&5&t3\!TuJqj`sK#:<TX/I?7aalITDPh;eP`9dfNB2B:Z9Ie74fOol]l
%+0#,A#<7CRP3uolE!d<pI:iRn17R]r40sHQBY$l"i3!`p$m'@6[^@_jH,.gD0kTGHB:tlD5]n,eTE<8R^**Qu>;KAELqrOl3k71;
%i:MJmV*V$p(7hFW:'?THZ!LnW"-+F9OVpC'"&Ag9Wnu#'Y4:j)T(.?+=kU;G&%FrY.gn>g#"0iJ/DuV4<YPrXE$gMu[<TRjc6O"Z
%-5LPEA)*TJZ[ai_/mB[bao[T"WY2%J(3%9nFSG9m"e:*:A\Y$Yqe"*b)`6I]-P70Od"'RT<PEG6!GD?Y_7%VlY18uJ]4NC/=,f86
%1P%@HO$nAd#oo7cnhP*M^_mk2$VtC:#F;7arH0H+Zm`!4L'\jEbR<`1i-9ol+$VQ4'BLHYE+]5bVBO3qc32FJdb`V1JO:o0J%!W*
%NZfaimU-*/`.__U)^]N[Lm$qC-?+nW\+Ub7i65-c+g"%Qaf[4@,m$U5P/jF=K*bfS_goXAR)#-97mOXaJNFXCp.WeqePaoa=uK@<
%[!cEm.i#R(<'96,$ChE/gl6JE"g.ilebjHQ@-/OGp4`pE\TPk6>KaI5#4ZdbE:8`2F\;n`^'GM1,[HP+]lc94^qDNHGY84#:93`5
%:'D,s]@Km*W5*tm'c5Rr"jYub$S)rO#G6I]L'enD]TudT%4Z<BHE5gp<8_.!Q"@So"r0+5\C.*m=a<)mEK>%:^f^]Xo'9$SNg+&0
%m%RF0Z]7`J5#[$-$;IK.N!l0;A_a8bPC_aGZ?!\*ADh]<g2`_l*.k?4m2IZs#eCL?k5s6N?pU=kS<n!6bQSLGhj>@A$QNGd9ZJY"
%\;!Pl8d15#FDcphW5-eiNnR/1NcEE/4?=3:1\6mXgSho-%UFbt'0*;O1TBn+'0%(;nk'%F@"qF3%1tQ`8hHZ1"HMEBip=Yf%\?oG
%K+/PT3A="Md&Fee!0=g?"r0*#=CIq!"\uh<F+ucf\CpRsfl2MC]BS%l"jRqqPI`dk3*KE]\E*eT>1**!dBYlTG0%Q^)`Sa<hm["r
%B64E;@:o]*kJR)YI,K3rs*):#+3Xu8PY(_C)a85]]K=]A(a$82./2+F5&f`':q@7lkEcfl=@eKpi63b%SJR7qS4Vffin3aO@ksCB
%:.IKeVLqhuL`ng0%?ie<2LOFfNLI\)(4^.*rf%Hdm[&D!:Am,s#L3Z&JGNJ6E12sZ]E]N<7%]F8K+FIT2QTX.n:@@LkunQ\E/%Lu
%!n[7`>u*T9nq!PRBYpDEa#"u^5Nom;m7AS<V$"c'RUY1=^tHTck7&Fk+2QBW:'ZelcuL.Ki6&q;HGg753'BZ/fag,_L@K'Q.igTS
%F-3`;V#uJp:P.EJ##8ubafM$B*,%U6!P2\A7l)#F"rfQ"C*atfCuC<m9/A+]Z[nm^3c7W.CuE8*4S'D%2K6=",G/jd"*`PUT%%l%
%#*/FSVUu=s3.SUZ=[?S7i+O:5a+b!BEHpt]%5)Tf*-.FV^mUFme2&Rn">a4V.hao5;HZN:RD><ZKXN0.#8W[o>^=-4Y_9U9J-,n4
%A/(P:^nJIRL`Ic!XST,LjT'5-f>j0Y]\2-ZK)lsZLt_PA#&qVoL?qtGE4"hr(^%;.mbst!Sf,=0B#hQ[:&kbS#N^D=!q8Mgodg&$
%._"UAFo$"\9jeEHfY?BMP7-!p^JW$IWmXZA%DFXFZYm=g@4rAP9W>c_&]Hpo"7O-*Zn:f,I.h-JrT50Q9\hGSDe*"UaDF<@?%S4O
%&(5B<<U;8F/*T!^8P.B&^X8bijdl%5/I:!G8\ZF^X:HDKhs`JW7/7;K&(m+N`p[4d3=*AsMs%l2g%iA@2T@PYD_,/c<'&]V[8"[H
%ff/KB>!8YW-DP-e/(6H6RXpmCoM(EBWBk0oD`0CO`0e9l!"<NpIA;LNaHl)&O]8Tf7,Mt[Jno!]hp!TV2e]p&ZWoh%=h^$UXR*)G
%aZ!8_=BCAu6n4;gd0[OlnZIK^^>\g(AigEMD\D#:qK@1'`0PdA)g6/dM@#lB610`S9C/EpHUI+0VU<Z<h?]X7rOu3W.rJ#BhO3(:
%c2<A`m>VmemgX#Mk/af8B>a+rAd/DC\Mm]\[rQtPdSMU8.]!Tb2p*D3jB$5;-reik)eO#9=WhXj&UQ<[JV&[&leQA]N=E-O_pcFo
%Nu1^o`tP-$60o'9T:1&KlqQskR5]cOS%*qsIV&4"b)aEh/[IBf'ao2j*n9&ba2)Q!V=qq*`K(kchH9![f*j1;2caZSd9C@(S;=Q*
%_<fF$7`t.efc/2c[Y*9Q/I\'VDJqQgNN=Ze[l7/p,Q`(*Dcdg7e.6G8=<J$ODn3Pq,h3l8DJqf3$]r0?m>Vm`]\.7N.g57gb3_q$
%hD[[/]ub,YNF@6%WL-)nOYq<#>!pC;eQ6p4RV!_FjPKfl`KukFRjJt&&N8_,!5c-mXcn)f7kA2cP']:E/1:PROF*2U^rN_nG:T[(
%Om_;eF9@VEYpK-flG9rpgfqVBY]>*V.HufFRjgo7(Ck1u-Bop.JPgb=R_ZW:AnGrc;HWkSRD%"Yba]]thAiJ'q`Cn7hLr^ZpNCFm
%qP)+T137g&@gQNQDJr%X,coMPn<8YHDlLDV!`Pp7[5T"+L-;KK)>I=^)7)9nEk'hFAoH>rber*fHdh7-aege>"(*1o?t]1VgiU`Y
%1M1Qkq/Zl-bhgQ+UY3,Mp4i1;eDm+R)\+4BZU*u\F<"=a^J]C\`mNU*3jlGJRVAVl-LaU-@70G,Or,<OKA)eCTsB7h[5Zs$q#?Z6
%)b<2'`.Qb_>sLVf_sE@`&e/tmDk=DiNZse=[#d1T9C*,;8I^eWlqM`]gQ!s<Yr>O+VW;r1Dm\^`fSR9Bg$<6?)e*aFHE81O`850!
%cmaV"Rt3RqY\kf]AfZa:DIrOmGXAJ^ZSrp'7&o(2fphmiM9dkfDhNEmBIX7p2a_UZaPLl_1N&-cU;?4kAI/0GbO&#haLsWngRH@4
%B=Do.UP0iOL>&+'a5!MfF*hEbF*SV`hTQaZ/tA&N'@g%*dE'!]?SPB0g`%h;iOL-+k(Ik%BiV?Q6n:@.pKd7e>l_nM=2I6,C5p)b
%gREJFM8m&FHa?D,j:%U6S)h2>frlp8[jE/N[W6`DJLtc9p4ceOgK&0i]jYlB0r.`pCP^]BQ.h_aETO&V1UT/Y$"he5C2`8,1Ng*H
%Hf+eM:Z&/OM+Z`aFK@!GX;\$`O9l6+IpkZCl0oFriK0bBJiGLkJ]J-QK#"Zm`$(]\pC>0M>g'>t%?&`C4;aTFJT]c$BNRcU(Y0d<
%PUm?"&W3-G87W$=5pg[YKJ!jZ%gZd+UeWa&*smUUXDSNh@mr3`,_\o1%aF\b6HbO=N]Zr@f<%55(o/+]8$*/q&!L;VfSa!!oKKp*
%Pm&Rq>QnLD.b[^8;[ZbC:]#:G$Np3@Z!@HRA$n'5-77[tLe)mTWHX:b,&+=8^-Yi/.!!K+L)/MI$1"k,-]B!-mDG]G-\-@Dc3e^r
%Wf*.60G]_/j>9Cu?ZGEO_Jfa\<^c]A6o'J%:>KV5[Sh6+gVSsSm7?jl?RU;.N)p09'$*E(bG$<%_+P(VP\(#RB0Edq(QD>fAn\u@
%rC$%?Ao9b8FKYfm(H2m_,(2#Ha<02]K7Xo$2sLKA2sUO58l;DkT;4Kd:I/!l+>"<[fagPPe9GtI8$cNZ!J!>K((k>h'^jt2QIt$W
%!/iBH%7LFY(gmS+j0bWg*[i*r4[lZNl(tVc#["L7:`5ju@dVF+dZ.s7RrrIc,a:`<Il,:K&0qG+>%9Kk[(r3`IS[a.UQUme/?<=&
%FgeDQ6i]^R4i--dICi=I",:(:g9Ffq+N2i8r.Gl<pbsZF5cZ,;9*Z6_J2\G397\N\:7Z_UNcni/)FjT$=;O4SS12>]dfYR:V!a+D
%P0IF>9;CqR!2>uP3Jh>$.?+Ue+#hf"YZ]f<#p\si>--Bc;%FqoKTbiW-E=E#_K,>!-=0DKnAMW2!%m]Sd6JKHJ-(H;NXA=g7^WD5
%$=MKhA0c.Z/g+YtY\.g^W2.89d>t]6Dofm0T>9/@HL8@F$qdBm9OQA/K"[FLalF^=*%IjI!rggRSe1N*9DA]3a66&@hk=0\q*DA&
%W6\>g`=IZ[!]t?TXq:P.mNCo(R6FC(2U1T_UjVWE$'"+Y-$7R.]nJ[B["-BU^g/3W[(tt:R<+!2KI^5S"^2::"erFJQ%3rsNEcsl
%8f:%3=JbkNj?s"j"RGtOqG7MJ\j6U7o\]k&mF"E@bW(:JLl!oeAI[6E@t`@rj4B/L>_2B(?;o)*`!^*F3d)n87mK&.H[rpVY(N74
%S%Ab+K#,Q%8M^\`nt<s(-CI.-P!V![@'ian@j_p5i;laejCe:[X2&<YoV4DJ52d0:A<.M'&[I+<fW\ghcToM>V+b<(1j'II.dPk5
%bqAb=S%snC4;q,DIE[(;oKI5l2l@"__P@=X2lYN&p.L5f#!-f&DBOb&hE^MN42K2/n5SItN7&ZL'gm_D&-B+'8/rsk?kmeH1PV2*
%.$PcMd\*#,NQj"'K#B94D[\2G*9nZ70QDS-%Lu<P4=aQ^.<(V/EfdniUbW''fVO.NC3QZl/o6h.2L7!K4>eaWQU=Lb"@=='QBCfs
%F-n]#brl<iVlR1G[[/AG[9sIb2^\d-M:Wk5,.@#HL96%[QJ%!+X7Eo3mW&C^Zm7%fp+B5Vck>V!\7o&biRmLZ?:-_AD$urOW_^\a
%TkD$Y=uQLSojjo]$WgUiBph5(.Pe,CiEN\%%Ejr&Grh9P/Fn@=%\[71mD"[I!Y!&t;q/;iM7SPQAoAUhU:LYm&4W2nGo.JRDf)\5
%?jF.i7;)`G1CBdNg@532/_Ie*n;gA,?[%&fF@O7[H`.Pq$j7fZ0-c]@#VuP_S'64&P1_uO2!;h*I:si]3='PehLbi_J4(_8Uk*l0
%FGi&]/ees!'KM]'Pn9b"&6FW9'[*5;ej2!@'DZtL$_pgM.4-'u*cbn96Sl3KKfR-a=[6_*_t&i4dn&s<.uV"AJkKjCbQfgt+hnH1
%"j;'3>n]U6oqNp/6;*'bM"b_gP=]hk\.'_M2TK#H>-p-R!^G7O"?gL"o7lW%GSk'22i.+KM9d_8["pj=*BJaU(J9B]Pt'ca*&=GN
%Cthb9le^%ACKEHY_`"K%`7D0s;`"6qSaQ4k`nn'*-5p*Pm]B_Nd>RT5C$O@53*/ihYA@WZR606H'LJM*=^kua7;^"M(T:<o#?l)`
%*a3E?78X?s%0DBtU7-89B:#<M\LB-F)8.o_RC"bLG(HZoRNqsM7$dB4UfaB&7F'-ki;,-e-NJ9VlLXM@8oH%Z55&7T.*-!nig-UT
%bBD@!FRt<WU2,"nfJ]5&>P_B1a8oAS[e#,@Aq=I\!/re:*M2A;S^Si=Cc"UF!.K/6S"'*\]j^?ocD0S-bXZ3'284Ic/4[&uSOnnb
%aUM7$aPf^h-#CT(:[142n7LEUZBQ!i'O/5Y0GqtK3"0'QfBk3;b\8)WAk7X,C]nX=J/2asTnRgnR$_Lq8jhW["lgZ`csXG4TQC[8
%F*Ae;(Wb(niR8BK8dY2g`gmdo$K,^POlS,Qn1JrtiQCWG^ZmG5eql;Ce!T'O0#lTWXHBWbKQ?!_+s?WZ\oEFA8dZ0qarXk]2Si4)
%Z=4bs@3D$X"UseF_I=q31j79kPA+8u!Fci`g)]*`5rCRNC8E<F#ol.rg59*Pd1ei%^.Jhc(s:nU]^q\d^.[@<G^[B`5)*r(0V08k
%UIb7[U)O(]'BdJ0-EWlCc4sV\;1dD9@i>sW0s4Y0;<_&SfJ0*U^19#6QD=RX\e"/U_=3l<("B2B<D]/Xr!(&q4jr<E1$]0N0fSSZ
%_7F$n`hC#O%Y8MB;(P4kaDf=]hI%:A=DcQ6*k,X6PD/Y\87O=-ZAI0MQ>TTp=1ei\JMEc['cX2/#RU,=5eEe=6_!%-+bgW^eOch=
%@E^JM7\9tj6mQG^AMIMOCpJs[+0=bH!7BHL&+'g;o'p#)ElI0KRoj;uZ_Y.>?hHTid\?WDkjH>3BOl\&+c;)3;ZY/kk(8;4@"Dj+
%_>lB$^blR@V<A>fq7l:0>B:e)PqDp:#l]U.EJ-/W6C$0&)EeCkmGi8db9tCfE_K.T+L!;(KF84j]$.AXEim#2ldFTSJHXW]@"i60
%EjN?W1+RG/^97-E<ZMnjP@p^'PXVY@NX%WO$IWlsd_5kI].8;;&9B^Sp46WaOnK9'Kk`b*J"foQ__,m34:gX%!F\jk#WiEF`<;9$
%*P!^l&:8tY75dTf'5a1cl#;eoC(c+;p&ji)@;+7E6C>4Meb^i0j8oNYW"E%+?-\MX#i;HLTc8P@JJCX9#N<]A!5u+I&-P>X;@$UU
%(t7't0S/DeFK0.UK#@YPRWQ%l=%MB$+jLu#<#ZOKo0O?V^ihsVS7hRHU8bPqd`D+i[R^M+A#41_7&M><;hA`g%$2qOCs+XZoTqil
%]0*d8+S4\unlGp$TrL[:?g^[n^!>IA6=7u4#cuS_qC'\TFj*!j!=TUeSR6X1)>$D"4)1Dt<eAOV!eWHiFOjl"_7iBO"',ekik:j`
%&ljZL_Jg"EQo9`j4S_9^fHPoW,](^^U\EJ,e!'E4!(76D#A_D]"bU>I36t`6i.KIY'T!_q[BPj=(In*jkcJ%?$2DSX\;N3-WsN'W
%Z9Dgb&RcYAm8B+`\7m!0aP%R>/2rCb6bpba,j[64EI5Z1Y38(?92p'lr%9u?6,qci-F5:lQ'>XddP3JUN/0O1#XISmK,T!Q"lfAZ
%2D?!_]8JhnTc9sd+GFm=Mh.1`DmbUt/&!H;a6^;@3E/r`BJ<;Y6/3.DJV;\0@a3MAF5JXhA/WBnF7]Va+_*ZCqdDSHV[/EK(#G1b
%5.-m?<&;.C>PRQ/1$)I2Q0I`u<\#St21$NU1<C:u&tGj3!jPaN4-nqNhLkSYaf8j4/mk&2ObD@H^XS,+:i?E"'HBj6CFkI\.SNY=
%6W7TuTtj:T>(%nhMh9JM2`<_3:&pV&,0?Ds&(q<r<o"8N.h"?JBn_J,FI0gIM;mLXW,i\,V",hYnJ(IKeE&M2W7!T%`+"s-[<7$V
%#tBh"(eu4oKeP7bSlm*"):j]_/V&2CnVrE"7ORILA`1:'Q?jP'53-=p!5F2l>qBMghZ7ks$ku',nlHuYl5"@Ffq]a5DR/L/MN-l-
%i4ug)q$,p0;$DfC!@E%V9Fbbd"pbh<(J19^d:'#3'PA?M9p7L$D?Yq%%4h!C6n*de2Bs=7jfm2?A':4^"+ZX>Zo&^M__3K"/lRAX
%-":Dr=Pq9R8L7Ab1@6L7AT0_Gs!K)ANJQAog)ZeTU8Jm2j&t54&cs>E>'`7U5$<6p"Z@[R$#7FtmdRC^F*dKHU1Ds[RUfiu0Ofr=
%3uLcpW!$1radXfRWXA,QE$n3K)\@e$`J/&7;JcGn=/6>%rKQo0!Tt<27%@1n1b["WO[pBA*NVqDTG'gT1ODG<)(=PH:rWKp73ht*
%:=^gsOo59?KIST-9X<8Z=9'r3YUXM*KgWrp<`teiPLI@UphH$IQ[g1dC=Bee@S7I4^-L2c>4@kM0&^5$J_<sIe:t3q=P8G$k5'0q
%/k%9-eNAn@eG^i6&f:Yr]kJb*.!1_NLFem+&0_BsVJr1e,,&%`QHtl(KPP/J6n#Dsd`cW65ml!qa<%Qr#_=a1#i[V[$o(TUJL,uu
%b=7eFTb9*#-?78_@&8O8Q#RkqPq7T([$04M?oSK?AVWeV'?2/*c(\DB9CP;(0A.c1#dcNrH\1OLi$?U#/u8l#,b-<hfE73F>>5\S
%bi4210'&WuY+t1.#SUj)]EZjK?@PTI\jRsH-4&?>eX\)]RM"*s(9OQ5l#Xsd.i<33LtYlT%+nIqf.7_+kc0TZAGQSU<SL,R\e.uK
%^`#oOkn)FS)%K/2C*T6!,e?EY,!p<.BSMZBJ?[ZNW?r1'/ENE6'+ft`#O@R.)XiBq2'S*:Rh>BdLfqpu!eujeTLp0P&SWDVTF6W(
%U$bjC6brL[@6#PfIiq`W&rRJ+ggjO49iGM[`,9LlfEb4P$#pl^lEF#'3<?4W8IF_h^JE$,Ih[K(GZ]^:<:i%'!(&J3'%^,l]L?Zt
%^q?&l,9(P71iLr97HnPLi3r-q>N7]Z&!C1DFJ8ubZFrsF+(tnBe\VSe#(PHm^a?,J[em%AQ^G*R%=uSg&1!1Xp'LO@1)h(/D2Q.M
%2,+H[N@P+7_8(CF1")mYqPfB>*nri1'')(ECTNKer[2hiEL[).3///,E*hWF_`/7D!Itq.8JL*$"Kg1)4VWJ]$^Z"?V=b^8k0p,5
%,-?Pabbg,kboYq0!=<iZ09S[@HWlG$)hlq-)./UW"r*UuVM9`a<W^1;,ZG3ck)l:1ZieD\Sf=U]%a:c4BSDk_Cc"4^H@]R5fuV@L
%d/DJ2aVF">f30"h$BP<C$]SU:A+WgNS:i\9>'X1iG;d0:"G.F*QrGiieQ-KuB,]m\Z(?,#NORlOPUq6-P)YuF!(794QtK-MP/[W6
%F106"B*t_$m!<%Di3Z+jTj5Z",=gW6PP=!%Rd1NK2@+2SUj]>mCF,0J)Xth<;;;j]hNUWS2=#Ts?V!O%:hL/;TP$\b,P9gY#_L#=
%e2k[4+YW0?GHoStm8q0?N?jBC^+66:4\u?UPke6[H6,Yl2@-]`pVAuNW^EnaiJ:cI^>#T!2,6k!eB2e3Kdo%<GrGAhfW<>p"H4)9
%:5hfhCUh#f3@67t7Z?@pGsG>$?2t(f3.+C4+>!E9D!A3#gp,u[ZWt?-X!F%fTT_8615k!:@]J8C!ct&l6EeRqGG]>Hj$OJM>B3B=
%QD%:#-V05RRO:W-r'ONGZ)a]9_RpKs&RP]**!61I3uc;gK4Yps\3*t9N77sq:S%-JUB?*aEf_-p%)"u*o]H@A!Sej'`239/5g[;-
%-0R,@Y,uBR[Sm!S&Wh8R&e^"e>ZctKc>jWK'Et.Y_D,U2:6VZ."$9>\7*Q#T#721fb:!rcJqWt3/k:].mK%Z@HR\HW^PZu`,U.%T
%e\kc:L9/o"FV27$[O2YCRuYrkP-t);Zp>89OUOemX5l6qI>A5\82K#C4Ief?al(B`4@>+Zc(KBU\D3[;22qa3)3;ZH>jE[(k2BZV
%XB*J&86o&)LF&mNAs"B!^`eQ'Z6NosVhpfnYImgQD5nm"bh=rXTjVsUq1=;F+a<)m^5+HRUoZLCBTZ];P!#P:DZp3&IUcY!8mQ-4
%(LV)'Lf96"'%BIZ(8%J,,W5cY`"dN'`[Vp.lU32]nLQ:X$4OW*7`(`"6=Q[tpo50!6n$cOXoP_:+=fr>/B-bNPs60"*d#HUoq>(j
%=p6nSkhH2B04p$<T.Wi[;/nXQmtJMLHisT:Qs]%cflCD_`Q),HO?`hUL\(uV8E-YT/&=-.0X8GHM6`q6W/l]X4\(+t>&$`>5R"q3
%rL*t`$j'#S&`j>%Q08<Hq8ma>m=AFGmsD(a0Qr#E9l]CTUdQdr5W$BBmF=cRZ_Ri!qFOH+;Hf:n0W)pE,`Zud5]JnW#uN"5Pkrj0
%H:8hJCc]?Gj;R?:a,Q[=`(DiFq4lf&+giYSK]qNKkVfQ-:QRA"2@(K*N4cGbh'jU;T#IqdV#5"gje9S],mH>^E#g*k=R(IgWPDIA
%UY8GGCE,"Pnk7)Lf0"djVGp-\%:5@g/R>0LDRuU8Q!b.:%P_KL.S.(F"3\h):$.V`VMYre3S$4?+YX6/Ao^J]J6=a#l\;,16AN<X
%3CFZRA=i;iG_GGGTZ,%Qbg3M8!.l"L#!S;1*bUk;'fs"%<2_KF=3SR(c59UPabF2:#KKrCaQ&@9oS!.'.Ab,%WDCf5-VCiZUM9e_
%jfp_Bc]Ie@WNiTM$R$r*>N:oWXo^(a=j!HjC4Vp<M"h)(X"G0_Yi\R:$<NR(g;uqN;htjnR^SBH!/pP34#kSQ[8OI;K:-[/>em_G
%;'Lk4/upngRm&?R0a(LP(c!*A#dTS\Rl.-8HMs:>Y%"L:_Bqh;0N?-O&A`3H%"+h^!Emb^BL9q5Yp!.BV@Nn<@8S!HKLq"E)C[P:
%UuooULU\L1`Xq$\@=r6`WO/=QF[H,P5rttnp.@"W,]G*(6?_DL9:Lh(0aK7l9E7C>;?s0qb5p5u>W0eRjBfg@,$e6R73PeDBM+(U
%U9ABC%EP^SY7*AU?sj&XXe;)LUINTL>U?f/A$Sl3'"pHNkqh'c+Os)GdfuL^>fX]75T:h\**=cF8qE!UV.+uj`*USVR4>uT8GOZr
%5;O9=QF_Gb?V,UX85L/e)?F"!:ITlj7"tjQ;;p8,X$SS\J7()F'S,Ib]=A"H,g1kC7)pF4;FBeV)@UcFepp6TgaK&PN>)j9NAo>o
%=!7amfO,uU@1fm8U"'?N"-o7>ZN'Go\^3sd9#(ep[P11TooJ^c`:+qC)>"cN(W;nVZY)NAa81g\;Ldo;p)%NGc.N^pNm_9"5hiST
%-%n[:;>QR-q`nfQLPA#Cjuj33Chen.M)^Q-o1D[UZXl'WN((,B"Yh>M#"0GjB/t@"_[tX7F<L(Ua?A";"dg>VD4oK!V:AlW'nk)(
%/h-Qa+L0AA9%)%*8DppaaBPE$6&eH2%)FKr`3VRq11K_e+M08t)5R2!>7Pf:r:[K>b6C=gWc"W!JCl>2-H5%9[1ge0,?ukJ,oq%b
%ln+WLj;n:2!5lsgo[/8\#WS#ZLH*`j7L$##NS:Wm1iN\>okS..l:CAn;XYFXl-]1gOnkA<6>Q`uhbt*0iB4=n'Nn9Q\*.pG'eZ_d
%=MTiDd0al"_OGa;mED2dm=pNm0`;'``)&f<KkZ=?%R>l\r4%"U;6:G/+P,IRC4]XIm?k:(2B1?'@<T`<OECu-?q078FGpU/#H5,T
%nP66_(_f2>GaB>"aX"QYOs_ti%F":dHmIt`=[`Yk@cS,;$6eYm([-S:Pima'EW'G[rBks&2Bh07$:oj-)fX?aHY)*[77?K-%uMRV
%3"1+Efi(B"?MLlcAnDS9MaJX&Y9f#r$<^\K\ZI*M$+i_E^DmTi/0W1eq7:C3`lB8u1E)G\U;\R!WQ[DMIgJ??*D!!U,1]S%H2n3b
%,JXIJ7H(2C@8%jlpgfBrB#u/n3eBC_ROrkS0rK[sW<=SU+=%8O;@B*Pe,,4<@Rkm)<ZsX-61%8U3GSaV7:I",PH:RAF;3Ve,Y<#"
%bqF*J[gLh^`b7oq95-1VM#J*5V2Z&W&Gm2EWjpn7jf_?=)OkLC"(QP6AN(>AW.K,V!>)ZTYn'D:.iRY$_BIA+6Xr?Sn<GRh=`#$u
%!b#8a>W.IU:=`hdCOiaK+P2V?,cl2LQCf'r0bA7]<(^D+)S)1W@PP;3jQScWjd51_CV7HU$G\kU@7*j$`^lKG=t9!_P#ut#+;WB3
%6on$rb0^?fZQ+\;m7jJLEWu=Bm?<'O_A^f:@AH_[J>O[&UCqAY/@UosaS`3`j9c40Lktroalh2F'q$Uqk3e&paR3W_fhD5dn6ppK
%en>n%mSW,"8Ag+D-(?D.PncHLg]Hsh:e/;?<<Z$henStnW$6URo]ZupN1Fe7-rJ+;&/)1HhGagj"+]f9Vh]sWjF5A]*!U]LOnL$P
%)BqI.c:/Ad"^X"m"Kj,#]W\+@SBU=/Y5pmXJ[L;7OUeI5XW]8;8^Ct%H_gfIJYULBNrTcs[4Q\_+^sCqJjP.Z+IleETIHVf1mVEg
%NPJm,quB\i,B3%O`j\?_l%<.F<Z8\Z9aD+l9L0V%mEi^G;5#K?J>U,5"Q;u2M$5q<JmV^@ikbD,#c,Sh"p@Z:ejgVn<EUTs`".D$
%9e2a\(PpKhmOU-9;32TN.W--_7ZJ?$+N2@=25o(2$uT(l,q()HV/HJqT?dL`0(Eu0f0Te<DNOLhU!VnSj>h0F"O4V\?=BWD_)/6c
%b6oR+`2rLlLF.OV'Gs,%AZ5fJJ`4N,r(FV+"C-km+NQ>VK@>[aOJH4F6W*!sESa-$%&;G\?P)c51dOZWKeaZ.<9+oJ8D:HdE(*=N
%b5b6!2FHu1Y?%lV)dQ#dmH2H'$%R[(+Rc8R+ajb=,u$F;Ls;\C"R'"loRN.@(0`G/1M,9BNSt^H"t1fa@#Xa;P&<05o2RST_&QCA
%2BM^TA.M;q/KHd#`?s^RYk69NK*o+tUDV:MUJiLE+]1P7i!]q;&14ijK#D3S:1G,,%As_.0^q+.[!9r#_:<2:&#alP8;7-?F=d3q
%kdj97NZI2S(77fr^.qPf!Xa[`-oM78BpAJLGie/tMRo]XW>9_8!Z5l:J.*Gj#ln)o8V]]T1KM<Bjn01-"K=PXdL\#V-no/+:h'V1
%DhR6e,I"#AO7;e(DKR6^;ugdEJSCiJRd)Kr!PDJF*!H4ScpkK:Z'eu7E;:+[NJBufo@$T11tdnC5uMto?'O.QX:kY&Te)5-JZpHc
%QRHR+ju1pmai#et;ts:h8O<jPf6e`]J6?9urFo-?6g0,Vm-h.Y"TTJR:Di80N3Rri;p=#"D"6RO2bXpo`:J^^?FPf0d'4dXSQMnW
%R-g^NLsgTE!.rd:NI!&RLR?0ng8@t*9j+S%4-hT;!mnBdaq=N?oj-4*A09d]c<,"d3g9(=/N>+e)rb#Qhu[#r%pR-oKd(/Z][+1m
%mj+lf9$;L:EnOEtR#Ik:1kOg4\\t5@UR,41Q3;OJ+K<c:.`cmgJTR&!!ZYV(F?_X'Y/2lqoY;(q#';#m%0)`n=:1'T;""gd(h2F]
%X@#L9c%N$K*^tOP\5*I!R:18S_+>2ce'N0.,.WTqpCS">Q$-S.@('[bOFh:F"6r1&<jei*WWS'URZUR3XsS#mZUC\g'J3p^I".SE
%]F[A9)1EkX":VYXjE9pbo[@1[3#4Gd635P$*_"75f2dE'47#]P'AX]4kb;(5PFa^CO?;&[;bVEoF=4L",DLm@lrnd1$#*%0`E&XJ
%-oQ<,5T;[/B^J.S`-UfjL;\Zo?GNm&8A>s#7/4Y,2c`S9>T>gFH7VI$KVl1.p`ZH&'jlWV;.?!j.(2jcRC!k?\1J]lepVgg!m;eo
%56gc9Zb26.)@1!\<sh4rU:1,l`"R6nOut=Wk,'[c:fms.)2&6hI34)habKKhGs+-bg4Q:f<GZ?!$<&O]m6JMsbf;tc$7$.NpM:=)
%>=Pt<odN_`NcEINJp!$0maZmFs.&LR@ii?NN?gN4.ejopq>=lr'[kthDP512kb)KVSA#dVe-QlqjWDXSJJU[^+P2@o*%eB-N#Ibo
%ZpMjh6>(in3[.`PmEP#;&LV&?a""MV/1IJF8@C@1(a:\sL)_NSfdMGOJeq"PNjYa6R?9Tl?:AOu@H-k-`*9aO7i\RSZNqEOTmpT2
%9)tC$o26j==48_[<Zi,[+Y,L(>DKkJ;p(pZn@Z2*pf1Y(nH+\%")q.KAUGP4$sCqumFd(@@R436pr#Yd+[d\MNP:S]PGnUP_^MY-
%1Pn68i"WITXPbT$i6XfB<eHPP)CBD3EL7Z(chs7!&/NP/`SH2=d+/OQ7RS%`BNm7:K$9nU<\-*PW\E7c4-=uRNQGKbYOl5U7Yjp!
%q4a8tbnWMg$%*AO]1aD7.'f_:.\U#N5UDOf8FPPQ62,OtOn@R8P8s\7NR!T?/s>jcXd'iZ<dE&4YW?tW&EL,T>"Q_!*R]086>j1b
%O,02l!Gd<E>,^*WCCq:?fIVu<TV($rBh<"&?h9s9PqTN[n3gSP6`3sS9449BF&%7H$@P`ig>S)J&4T]V7F=_+#rBA_76ZtnI25(X
%T(lu[KTt#8YnC4PU3mMtPoU(AGq10oS[HH1%[\t-I,KU.6ioAQDG-u2_p29>_rHjr2]RQUj(hcR3p0@8%%20='<oJYj_"_g9b[^[
%(pGJ/V\,GXRkHRXjtX;JUug?778[PR(-B\'89Y]uirg$8/,]^SI,iDToe1'f&^/V9o:89uMXVR,G'>*$OK`&:1K^uS`:\),.;"PQ
%?OrbI2es*D8IVRZ=#`Z8"4NrYmYFf^YWka^=OIK^K!DDdDs<9qE/-Z3QPg?f@+I>?6)Gi24c5Gk3L(Xk!.;C$*BH<5+d"Zc":ZjS
%IX$\e6UD48A,0i_2#pBJ"pJm@(Br&BA9c4Xab=)Bh(/VMm"@8p<R7+>1m-c8Nf&DU$"(/WqdcibYk'7M]!k4FC$fd=i<G.gF@WH2
%eXp;V74H8ihG$U%.k1"!O+AiVm-qf?GCiu;-&KF+AQtjQHG\Hj+KR$C2HdJ'J[K"$MR40J<&'l"V,O3f1h30V:IgFf0<16bkCa2K
%E3#WgZ-]nD]b,uqJjpkd,cr-q$HUO<NAO?/7Uc1W)$oMW5c^(h()#(Ul2$MpGZM7E^JDnXcH_PQ:)457'V^(bK:sRlq0!P13!+u2
%6D@jGE6VSfZYj!!Umo#_UNkRGdK.3i3mjmI(.Zj\G!.RISJ,6dU';/c\R87/W_@X^!*U$Tl#%V,2^KbuL#u"dPK74_RB_L=k;g0U
%QA$2c:tn/6*^74Zl5T!b,%Mp,EhSj4r253r18ndY^,01VWD''m@PUgcD[&U2@-[6\LcNs_0df3HbJ?*VejL^])aIBj"W8bQM^g_>
%;hFro@P9-ROt`ti`;"H.*?s87EciTC'$pkKrknd]/T*/<B1If6r>?>e<n8c6T'/J[O[YO1*2O!S'oGc?Cdg<qoV/iDCh:PI7mhuP
%AiRSG9oG`.b80od_$Der+m-S7P?(Ks]F`X^YrJEHaK,b:ToHTq&]HYBIN&3MRhTI.U`G8T1:$Ni=>a-\c]D+b%^jG^e_!F/0I6!i
%VXqmE"jd>[,8a8ZT^l$#K=+#a7]&:WQQU1^]G+gT\uUg&K&O'L4c^4\8A.IIR/Bm`gk7F:J80<P_BTNu%&lLuXqFE$8!KgXd2s,(
%4QIrDA=7]s>?2CeEsi$Ms30Y-Ma`M*K++3YUl7fCJiP<RO&gjI4W$8Uh2k=nTj@oVJ_D(]+ng9H.28Re$TTVDDa7GLe&1MSV>ajA
%-+VM5N>9`!>2?t"Xc1bq'9ie0ZUWMap+=YAQ@Dt-]ELkkQ>Z9j@Bn`c6KEg28LQ'/V010W5`0#n1RHeGdc7%E]ToVjcQ%7>Y7g)Q
%Uub>:KHY&tdNBC(P;m/Q^k8"h5fp4Opn^C([R"T\#ir14AZ^o3Lu4q6N@>B;QU&ED/P-%9WXVBr8nc=,8.JMtN03f<&J;&WQ.CTK
%s+Cgpa9ZXS4E<+^Hb)X'.l&sJYeeMF*>bbY8/VI#Ao_LJlr1cc.JBYa!N'A@>I#LsHu`**9RAFN`&Ua\Pqjs:dNZ3/Ll$gjM,,+?
%<:Vho-<S)t;6L+mS#Ip("ZVLHYtr,fG<A$l(o0flOSt=P$#7#i%*9EQMW.e<$m^:5d&#lrK"G)U=b$W?B](T3ja6A$fTK2Qn8f#E
%P>F`EZpHJIU8]XTJ_L5KDr$j00Z^YHl-KECg#Q2R+=i_`,\USPD3:JaL4Z9=6YouO1@ZnM&t>/J+EHWjqJ>b9+nS(""Q0r,3&sRr
%b$2BQ-fNhVHMg]h,Z5AAB0bIt[ZKBV4OEttdTp_6F3NPb$\kZY"P1l(L#\iC;6@Wo'pQ6B(PNSb!m+.)cSJWE9'rc(66V8?fEPM+
%l2BV>Lf1LPJ^(@Y>'@:(ZIt-uKpN(FKA)&=eY)OAdJ$,!`M8O<5f-'Qr"<#8LcOtG5\$!f*n<lCML65TjpT9n"-"_]S>`Um\.HcZ
%BtD\(Y-]aUe/kmP^;<[n,u2D>cjC,B@5EH1Oq%8:;7"XbJN1*t(u_u![[Ye+'!S!^-FFT+S]9FBA-.O?B@29-5].^Y_UsU[Pq31j
%Sh7/9Ej"\'l!k!5V#V>GKb$'u?%]'V%q;KS==8_C3g6BTVNPX@Wtbsa8POk6;g!Nra]soAWJhPc&:0\o7AZjI^Le:CSf`6?M0+VW
%DaWAeV,S\rDe5d;Uaq(;\W;87]YniFY>82.VV#'<1)Bji<'YS5bg[7FJX@#Yf)IZ(e8]SLCE^']ad.8mV(0"#B+^nN?Fgf;OJK9Y
%GU41t"28S8Pii0Q;3AR8=;n15O=N#q<.X7bOd\B\Fr2Y+R-b(6)S/lROW2A3>76[o`WFN=;+Y;hJF6+l0\9qO6<m1co[pAN"kCet
%.YH_KbnH#<K]0!E`]'!&'h!Dl=sJt9/mP0A7]cX+&]A!\VRiSsCI%7oEudh"iEfQ.Zq>5ek(:@8bMeOO/)f`]A]7j%7N+f775V*I
%QbjPt^l_J'=O%'sN@l,7C14ra-Uf_0Kpf2U->%tCOb+OL4robQXB&+8WF;]"KY,&7\h8/*D$sdI-ASuV<G3d,)!G(-klp'LcTRpI
%#Pn;AVB^(RS.0p[3UX7l7T^[P:^,jSo`E&'6?3L"j;Xe&A2,0d9IZ>p='+q"nM4rmKqXVP3P9i&)^TV.(^>rJ=Q,TYn`@)>5GFX0
%FTYhS-,MDN`BWDl0scR7M#qm^4s\/+K(^EK(5s)%).cDu[YchCD5G)\.HPX[8'N#_5A--:qMIuJN+O*'@u+&;+"AXTcm80-i%/Tu
%Jqc2lcna&%2-CBRnW`8+9E7S\k^0+2L\8oXbMo/"LoZ]7/6Ub)_Ebt:J??ZA+hndl\;e3-gAueZ`bBN]A;ADLC;-g4;m5BcSgtXA
%.?l!TR7[lED?RkA<=50E50e$i_>GE&TFfj8TmVL`U9\!e=W>k6KhREG?3[10%t]%fFj)itm&sTZ^K%&j<WJ*bE4sV69J)nqShr7-
%%6X>lc\Q]3>=l4Q?WesD,4q]K_'!r<PTK$@5p2!hNO5rcQ(^Sm,>kNJ2bZsM.tneR0^(K^_'qAJ>F#E4T=%h0S234j;6`[MmLu60
%TsQjn_HMXGQ"U4]ZrjCD:m`(QDbZ0o81Lq6O>!H_)JG%DadAthUk8R%9&-IUmflt1(eX5*GiPVF;2)hl`ulF-2P%)@OV!S,"c_j`
%=8M7Pc2t>o0'#JU]`l<_o!5E,B`sV[&=\,NO*#OXI7#h+j_R?K,^Z7PnC3&\UBDh<e"CNWi/Ar*4>s@Il3?FK/&hb+;@?>($:HfH
%2!3G:I:sp#aW1EsJQ/'b=&VN+Y@93$-iuH8&.MEI.p[U=\#DlX\,rE\#Yl[oVsQ`KB^EgjjB,KF75,7On-Xar6OZ^d@^%/LTlcUb
%=t*Z!@$1Gqd1CK?ic/['o47i0X'7+dr3?O3=#qik-j?u.B?*W1Y?96V0%YuG[OQqALo"'KF3fJi&>)qM9dL[\?h9Z=`_0qSo/Va?
%dUiU<5kMq.,'s>>d),.*LnjQ-^&daV+;)s@EcW.9hlW^^TBI*f9;ek(KEd@OF@"ml<YgrA-NrS-Lc?dd+/b+e$_"NF,QQahW#fXZ
%BVR;63->qESB?m5S$HS)IT&3`3_?`<5YVfW.*-OAM+5C[ctO]V>3-M$iYms,L)F_+1'4m.ZLk"p\52$-na=KJ\q9#L\(rr?"=-gF
%"Hl^k[=B"o_Vc:`cZ5j[N55GrO9f#FL5!p)?F2!ng];GfnEU'nJ^nq.O9F8DlPk=&&gNA)3d4&T9Nb\QhDMa0U-Jh1+B:@CkkJtj
%Ea+V,TV*ioM[Ak=.$5O0(e:jMaa?>oB`Wks+OR2i9F[:E2aUGnh$,AaQL8YC!g,@9ZLR`]\Lb$NKokfZ&_OaM^6Sci[!.I<h6P:n
%0mU,7O@TAN)h%o'HPL./77Ib%22(%=P(7O&FR.<ir-$Y/B`M4*RG_I>ksN;u9i"`iqB0=9a4V,K;HH7;>IpAY7&QShCE_'o9WaMu
%_A%$E+D1^fKT6/k\"UhLMq(BT23Fos3-NXd(b_kQl%fCp9Xqb!eY8(-Z*/p+J_S$bDr$jPZ4V(>'kZhac`2pCXQ5Wj4;!#W_,(ca
%12k35&8Z9W&J;0Xlkt\NN(@^Pj6.+##mN0p:a6Dda4Ulbl1[j\)MO!.[8OUMjW`nP+h3a1h4Z@,APS.NiUCX@6;)r4LO0!,HG@.=
%j2.W"@24H]Cb9d&0Ea5t";DR.Jndq`dMQ(XKR1W*dT@/4Xpl=_CS@.Ub;Q6IO<TC;A1s@!@=SAj5a[af,RS3>`f^<g*AY*a<PUC>
%(GH3PT9HW^UJqpirPaCY::=0-7)fg^M.A3Bg-X/Z@]#9:B]dpi:YEM$2I*$<@r,[B[`-#trj=k@E,(4/dL-;p)De6kYsG1?f19)B
%6ggh,a9$>a:0@NmF63X0M/:g4[&=*pWP`)?75#?o6#`YH1a(CaJH9dNXn!`kW]8@#.d@9JRB&%,7Tkkd:ldJ!c=8*(koM:mU!,e-
%0?IJ=8iUfb#%,BNfiChq[V5l8b%`$0$VE;EY]#oKDK5mu:=jSc#Xg^f]Hl%YGjV!FNEV:ZZZjtnfET0<.qD*^G_[?\R4m>Wfkb92
%0EB'?Ak8Au[.KNp'MhijD3Dg\oQ]FJ4*+Tah.$7>-*VYD6#-M6;#t>sShFW/Ale(!:$+/b6<esX>,5LB)8OLc<XC9q1mb,'Sd8'q
%m6X.5$!.@hO).SDTi$t5pJ=L11@sVuFjN5c)D-Aq?AV$AT,)<=XBVm<ASbo"r(ImnQSRk:X0iPH)6)LZL=6A&W<5O<2(%81)-e`K
%JZ,k#V?a+8UNYi-r>4sh>hsKbHh>>c*='nlnhPo(Dp.CRH+uE-c>8bfJ2GF1WHG*)M%sg:@E/G8"BEc-?]Z,-`CLM;hkl798ldF[
%%F\d/UUBYi9+lC()aTC%7#k;3AjXX%_,=/;Tn:(N'f3202"V=[dV'.4]Xg^2&Lk-jl42KS+R/SRVOO,'YnB#T)M=>fLiV6P3gW\t
%.&u.F!]d:"BZ(47U0dCH`E!(!<CWm'46@8Kg$+ROS5uSZ[Js$10<@&9_dt1+E0DM]'U+WK$kTg9q\gbiW.Pjbcsgu4gKs'A''G#]
%_^p7LmfPBJEdXh,eddC'WjX)57*rLliY0+kTp8aiO"%)G03s8V4Et:ZisaDqiod<Vn-Kl@ZQssO.9\3N&</H5[ZDDi4ZH>,-ZLa3
%>n__!YjJXq6?&Q$8Q'Vr'1;p8d4JB;d%g^sQ7Ni(UQ%B$2//o'M-*FG8Tetu<AU_Pil4@qMi_,Lg+A3kO)fI;)L2?ca-FuZBe-!C
%//`#N#LPL(-8;;hPa8b*/CXh@JRb_$0'ssB$%sD/g8XeSdNB]05T2^/Gn32od.,4M=kKcclKXBmXBII,_!3j(EQ-Zk9(W;""=Y3h
%Ufc2qBZO=lI)lR0JgQ<lT>Es`Qo>XfJq,C0qFdlVKl(^X-eb;/Pr,R!i\WqkJNPfS$4h'L^=61EFieu;[8I^]8:??eZWieBBe8TT
%XX]A]g@B+3_%9O&\#gFFZK%<kkXMKkBLHBKX[4kifWurfQIU^*,e*tJ*@JH8_ZeCVXT%J'[0a&C.3#^_MoG2oM%k-?>5dJ3dj$9&
%R!$k-IM=TX5q<JfZIEP('[:S"&5.N]ieEiT.!jr\JdE/`fk(@b8h3ooHn>,e-<Ib-2Foj.FQUAXA(1Qe(l6,VEpR$JoZ0&.5dQ_j
%CX4W@8gM>0TmmtQVN2e(&TSF<Ou'\/71DJq&Ko"]I*H\k7SG=H0_T<EN?(]O38%ikXMbXf"P_A($*a`%-,44_i6#*%,/eZgKG1_W
%:i\E:.rr`e$eKu0Es`n`QYcmljVpoJd*#sLC$p%onLaHTPPJH5!Ys;q+8&0Y.nQb)JAB>N=<^DD4)u=HV%55qk+c$*6toX<TOKGc
%.4T!3L>`ur0NPM![DFnGPs@H`;!a7Y*M_(73@(>FWN[`f*d(R!C`J*^V=ZW[O8on:&&j*&[O+VD(g1J7NLq*pZICSd8F`*uN>:Ul
%-;CUjPH^r&K6&TNZ\$iIqCA'o^*?!6!gXtT[FL'P1>tu#BS@RpQ(O>CC:YYd9<;h*C?<<i&B-'@k*H'S%,$/?lrdAj'4j<S!if6P
%1XOWT<bq!EUJSPcB[O&_WQce4nh3m5<D,9;:rj@ag5Hh<paq&NGL#8CF-A-5&E[V<!%^c`FkKGSM:@_F63^*O>KFjB57_oDp+^eF
%gBkY788L"5n!J_sSuNQhY?hF,10C*k`-K2r'LXZ$@p(XJ">ksTSYAN:bcfCh3aa"T8J0S82fMC/N^0o"J!1YHT5I,$&g#349Bnl&
%/cu_(9bRKMg/%Jc;423!:!-jO\Q4t0hbZlu(=M>SBpLWc8kN58RQSn$efq=9#fZ$t@Ij3)]$i/Y8&N8:N#qLdk%23$*$J_0!6>0]
%k:O+mqJ@sd_S1m/F#$-n$Cfh*4U;DM()MP^=#F!#pNi^fC1dZYl1g?Q=kf:);IhR7g#'GETggMsS0GI4-%@u$B8hoj_ZGEq9@oLl
%"U2-3S8H'!&]CoNH9BK-(_N3Nf<YFZag?XVnu\--d8.ai1X093Hn"5k;GSeqKqOWd5;*l(_m/(u[,)L7])1=O#R,?(#Z#Y[`^>?>
%qI;dRa(2cEC^[Eeid8L`*-jqJZuJKrL\sVA_NF)hf?2ZE#kABrBZP5GkJos7*3j!059;:hJuq+\4;b%uBi[9<4IiuW'fsdTL+"Bd
%7#i'$%CVfA=UGjJ'l#j(4;L"d`a`X0Grmf<?I_p4<?j+YM']`n$4jn3OWKogiE;UeB#K@(?6p9DnT`J'-K7?7eP(.d!=p6+/tDu7
%K8298C?^L)GdOC7[NiV@&`m6OET$AFZm<!EF5Xn1EhI$d'R7`\@2*@qJ/>W,W"@l!jqfXBk.dZm#iP.Pr>jB#4eBlH(Klk>47YIT
%[?EVQc[@1ci1X!)Oc:<]C74mX5mM<tb]aJ_.H;'tH:/-lELD+@#bC0LXESA*R;==bG6W4FKB<9m4+fX,\Mc84SUie;B_i,*SO*:[
%p[*e2Y&OOB>A3Ju*D(K=@(g?WPckeL]>dH-A)Y'f^B_l9qM]V-ee6quQ10gt9^lqamg`Y:qW3HRGAo"Xi`Ok$hu_G:ABSM-,SniJ
%GE?;#@Y9H$\aD_XLcB@I]#1s'h;EhJY!jQYdYsUXcBuIfhC#lj84+TnSr)kD1>'&"1#4.2>d6<o9R"!T6u,2&]&Vs=\NjT7lUgqH
%G9XJ<a)o@g,>WMqYVW/=P3sLDSH6eZW$&YZaaJ]iRCV`Haai_Q_utW-[QE=RX^-YJc2]5Z^3-(8%T8uCc?+77QDCk$UUu.H.Neq;
%GNlW!;UIgTB*`Nb]+Nj>`'Q2Cl0\sF%pY&6hjkqB4fRW@I!5eb:SdFeh]5OZfZR.emXUm^EhFT3*<;]oWSB8b*FPUp*&I3B)=hI'
%LTf$J#FHq`j&<NN$MXXem1)?k.JAkj%KK3+:+^R3#2i>%Ih(]1$sS,D>:\O#+_^t/[$g@-^nj<tk`G5XO<;o(Npb2'#`_5q#>(]g
%G9,EYg9?DYT@rXgl:#m5522VOo,q"+B"K;!)bKBOgDtW/^pPn-]0i#%Q)KE'cB)V)S=<,pLQj=Jm0@`W^jM=VTlbL3TW:HHkjA]s
%LORu$h45_Z4Q*%lh48Q(g+stb42^nmB0*Ucj0XZ>d+q"I,s9PP]<`c6C-kF7a.0L/,IT[U(HLBk:5ku4lg>/8*MF%dj#(5V,9d;j
%-C!nXfSW@gA@=R^=>Q\`'/9US8pAnC/(<=r6Xq_b.SVEOUU=aG]5@b>geL>m'-)3P;T+*RF:&F?A@pkAA!D]7c7mp;+t$s6_j@@5
%U'GLYfOKMKY&&=GJ!'_LA\5:ea+>`s@(ScPZ@oYBgE!LX,b^IUmOZ7Pd1=pu!"3Al`cc0B^g^i"F(W#t0ZeL^G"45X@F*F%/jQp<
%KJKmi)0YA"324#@c=ng_e(m<!g8aQ(mL3<.B^bZZmXW;'":(@_NZ_p:cPk0d!Ko`f^,+T988r"7]Bao,TXt:;K^]^g\iZRm8Ob8[
%h*KX">47"0%Z4DV2DX)/oH'uBL3.W!]uW07kjAj67-h:V]/,*E%F'^sc7n%I?q*P9_b%_bX9%,tUf(olq<iJJ;aHi?%d+PR.>N:p
%39LDm2"TN@DfaE.q<j2CY.>d]O<GcG$m"4G^Eac31>eWGTQOg8I!8EejF/V,G;uU6\I\K'$u5OYA=!&Z@.lQ\7:s7q!u'JS:HQ9P
%,Vs2eZ/#FN5f+suZ9*<lXJj9HGAm['/I`i0>MVm^b`M'akc=!/kRJ"D7ct%>GHg=@D+?F,>]26</9`cR]]hED@`UZSI>U+Nbb:l0
%0\iAbQ/k`/i"!aN4.liVG"A%*00I_<R0n<LLdhm<m3$#WIA+-&`/nn"e(^9?DlNiO*Q3t%<Mm5]80J97]$T1t+CsU:H96Kck!1`7
%*UF7KK4]-cg,-s2e$7X.D\4:%L"n<Ae9`OO>B/\AMi>;k"!)b0RW(W34'9It,V2W40JeD_\WbNHi]\KC_]B/F8.Is9-N[Lr]Q<X:
%G(]MqlL9V@c0cDaKtIUV<COc^4<+F?T+Y,JpDuVOlX"%3SG,7E]@oLt"d4NRlBpspZY,Xt<+\3b:(lrgU%*aZ8%,`4R-b16eDmsC
%9KWL-&_doG(HQ(tC^5<nj^FF2mEe?MPYIRu%^p.l/4f%>gCa@O+=>6H#D"(\oQfgtX2KmLfoF>(VW5'?R72JDCPPt<M,dumA"@(b
%)8!&:QXs[pJD#sBFYWZOfhN*IPnQrt1uZ#%*BcB3:sR/=iCn'#G\?"_.^>OQHESC[g)262R.O@r&6dd=Hl2A,iBl8[L"?eEKFi0:
%?9:Nc!uFJ?G-LHuYkq'(OWb3kF!G!Q_d\>PdG!!RJ;I?@m/X/U5(jm&g6l4-?YJg8&JjZ?UU;nOdNZg7XW>?=I2#jH8CC%G7r&?d
%!%SIkm9j*/OJL7W6)"fH8o&'qJ(-BoSd.HD#=GAr1X)R24/0-8rMF9EV6tro#_ADlg(Cq4hg.h/B>E_3B@'LL$)s8C*O=BB<l065
%@C;l56mG`@[=_c$#,<?DSKV6\>BdGt"rIJ4Ytp4-$]3L5DHE9B.OAFPXEK[2*):+R1W5!Lm>0;Q%j`GrB!nDa6i<n,C1i?"CIY+C
%(o`b,A5YKTY@YkV:ML->0Fh_n4//?UfbICH8h0Kb3`8%<Lr;*K*B\d/rtSEn7Km&IN(E>D$VREXPM4t4CBHTkPgn!?*ki\8g-P!u
%kU>hW,nX5!BP.UdC;PeSc4IfQqMrr5mr+YpmMP=Fcq7F$qM]S3;_r&U4%`%sSf-oDBmi-R["DN;=J[HZSB9^?T#a-E7QZEoJhE:2
%`bC[P:tcf6&[U2)5\XkuTST;:["J7tp:S7Va(p243TRP'W)(W[c-2.*),;(4*9/ZR2T#tPmGJsTj\2PY1Yt^ZAYHIeK]nA,6tlo#
%-Cm%X;EJ]0&!XgPW?&oDOdKkMTF[bq/pO\s5a;Vak()"m@SJL+XW8\(I%G'>#g1AEbCJ1SDbYWLb\MubYmZ$%CIe-?C\\)4@+])6
%.#mfOiEcZ4)pm;I!a<o:+/QB?MBia?VR83'kHt,nG*'/;C-,T\#p"2bG!$b3PT5e=@AspO6:pPMYKp\;!N@(L2:`!I;EI@n82Zi-
%m0kLjUE,KN!G1/M$Sdk!@=EoEEBn8Ol:dD.=mb]W.CRF$G)5.?5^:@bLUU=\4/K=eMLboj19mA]$.ppU[PNo[@2<<6U):[g/&ZV8
%2gc@qOOt%d8YeDk`--t2#sh]@[NjZ4@IaW@G3m1U0j#d2_^!U$Y"-ER$j;^o.hg["O!86Z*F%Cq<#Q_Y@QPE3Q9]_`fFHj[P!p*p
%48.g#EI:#fLJE:ZhhB\miM[SikEUnk/=U90j4+ar+o9.PFQTtudlI4R$F(Us,\lg"%Z'KpQABZq[PNS8e+ug=M@lkcY/?(KNeXe4
%Y%+mrb_<[]1#!Rto>,Gd0\]/1N/2W!Ce"g;Wp9\l*MIGo4J%u.(`$X%-o9TiI_=7cd"7:/0V]rkAS/B'K]kCLfhU8`)?/qXgKCsT
%?ilSGNkc.g!uj#M&LYD.c`!3RQo_s!B"$a?-U$mJfo?agZ)p*"4#X]lh$f\<cp$St<HlZ16kB^ZQRPJ`8;WF(Dnp0Z"<uh1AnF-a
%I$)'!1YWM`88d<t[Nc4`\O86]*IDqM`h'a.n/bG?%/\h'm!!5^7r=%#0)1A-C--I"nG?a24-A$qUUK2Y7FJ*B,F"5hO".OX;94Es
%X&!R;EC1'qA[Xu!\M/GDAihmWM=9#.[_p].?(%,JKNb0c4(^QZK0;.=[R3'%,i<)Y[c9`#SatL.HsS_MJCfh;BJb2oY8uT1)33%]
%G%@'$B,E>W&]L"PURBeq_;[dQ?+N5)OsPE"b]`V81BAO]1gO"[oktkYSN*9YT2B>bdb1k'.oY2bUk!%,")9olG%;A&_&OZ_/3@@,
%geR(<=uRY7!sf6\C^R_D:i4`GHFn0%i3nH_>PHJVaGXBgJDQ;g>9%d_\!'D&<`XN.kXAQc;_i8HOq=n./[O2o_MGXMB"&us&^b+o
%oQFcQOFfNi[j1E<P?VHFAaGOb18)+O0AUBuNoeu6rH/Jr^"qsEmse4W.D9#5Oh[^lrVZ-Pa1n.ZcoY)9+SbK-Mt:l8Lp#1!Sj$0M
%iUZ1(Phs/;q<4m2r3o/pmI9]Cc)YlgO2"lt[a;c@g?OkLe`-0J+'"4@IXCY5ookH\iq(dsWtG3@`=IIVDuVcpl$nl_[tS1:\bNB.
%Xqi\=msb'*a[]-B`5HDX#\W7;YcZQErgY19L\F7uIf4Y5YOo;F4BPo:4U9dfal-tHk\F@hT-VGX"WFsX._l94)H+De?ogQIJK?F^
%>l=*eL,[MHNe/!+Gf/u>03K0L_iK7EjQ.c&Io7ZeCj[auYBpV76.\4fj_LGSr\_=aPUr/nr'T((>"?IF0l<bS.4`Bm]Md[+j+s^4
%IDdJYZ_8Af?_PI=GogGI+=q_]^>[?J[=TlbCNOKk6N@Qm]'&j*6S2$oSQpp-d1j[*b(cs7>j.0NKc=YYfJ$DY$tIlTR6a#GoF=<m
%mgoWT[Zfasd*:fsWS-*X][T3&5'p8&l"^uYDgGJk`_5LQb0-_g?Nq3TD?"nf>A9\1;***tEc3'?^.]ohl"(cIHsCq7Q0ZU1Yspdb
%9GdGE%4A.Jao*.cLG)Te.k_Psoeoq>SNPfpq,m&1)hBqd`CuSa0q>@`1b*i1)SCsbG2N>[r;>bpq-lWE1r-tf2ui"B_Gn"8&<84u
%p=4U(0t;`uFiV<:;0P@&=8CJ%44JoC84BGWcTg7TlQguQjJ2`S-#u68,AG(DGU;ckP@k!J\&O<(;smTg[8_7.0?j!-Fn\\a5-Xt1
%]";M#kh]&Ak#UoPnoa[23+>%`[u083s6n'"`Koa?Q[c^'EZ(s0ro^<Y?SHYQH`6CfRF%l*59<7LIW:f;<TK$HaB'2*lIDR@K:r+>
%Z_;cN3hQJW_>EuPU,D]=@Krph43P6_pV5WNL4A'Y6f,g<23n+"GQ73B^Rgsm><VfGe+..=hOjf:jn#Z.?7bp8TiHQZ5CL!8q"M,D
%oCS)>dgKKRr,d@pHp_s:)>BIfj(jZ^SXdF(>`(UN(SC^*r2TWar7BI@YF#1-O/kM<]SZV6^E/qPlSX0.\-0s==/8@d+`F]H+f)M0
%@1^2E]XW8F@3BmPD@bm[o&St8<te&e0AP,tV@;V]$01f/HUG=<l$o#>=,.UDk:b76*aWZ/h;3roEkDA3r8d.fKWtuhhUX)>s8.kL
%T>#bsoV8sFGUG-kN!^C"H.j5+RSLN,^AR6lFEr>J]R;En=1?IE\bT81A8`R1q=WFma&bdG/uPf'rl*V1e+pt,=!q(iRoF]PBQ&.O
%pEul&`\t>QCMNI6$F^Q4VkZ2o^KrPmFe+i`PV[W-rO)ocm</<a/sgLZ:T#1Pq8/!2B%&i2S)3saNPGDj2PnfJkF6+5.j*m6r:Wp,
%nToJ+FEMR`iM1L]me/+l3T$VO#A4pWg=AO']=>R;?N0?_kk2!?j!c4A1n^u>QY.+IY:nb&>YWs*&+gXE]P`4M:VU#G>^SHAE]`:Z
%bc]a(0!ErngEfqHc`Z'HbG4-sS:5U#o&d2:Etc:Qm*+j_1H-JS1Ac*u0/rcKZS+97EjIEc7e>+n#&hdO-?!eM@.qU0S$p+Ugn.62
%cJe?GjlpumNa>ug2Q*_K!CQVMIZKh$F`lPG^%c(4l\SY,:N-U9QZ$YE5Fl,!3iVi*CAuu8op[lf8*>Ys8%75ro7Z6!@`ji1@Z+me
%PVGkZl7]TEeu*AGS_%0a042Fr?JVh)p3<cjc*?Zt/iV=6;s!]Cq"jXHnh7bm^,TJk:\c]F5M;L%3dlD%0$`?Z*SkFWh+tI:^'U&:
%Dlta#*ZZoK4$G]r'$qY*^9)CG_BV=6l1)aW`T=l7p1gp$4YVEcQo7FEDV"(@1^r`&YHKnPQhR0"G>4PR5I.:9B[m'Q0GXW"7<dBX
%)odn.>b6[AUR:K#Dpu`$k2PJ"lM7f3b+BdD287Oln%#I]]ek$V>tX%8JW?;I$qriejs+nNqWMg"Na:*6'>/p(gk:`>Mmg%#-6-m;
%C`;JE$tcuhYUPAa(k^^[&+c,:)Y]RM.bpfBPH.btbH!(;fY'<`mr4HVr2KIAq=6,JpfH>mSSX7ob_P5-3l-#so^5@Ha-XumT9kqe
%]sMs[Dm[R\4Wa5Ijsm##$J.tO.G=6YP;.-Dc_f*+]uh]r(sS'Wq0Xkj)p^,h:(K"EbQ",pom,nH9]f_LchcbNMj*HU?T;E&XcNA=
%jRd+X/oRrkbf<^u2IR#4j-&fp=RKCC4IEg-EV]I]`Tb@f'9&S)F@0Xt[e"8#0ds41C;JWSZ-:AV4aErdTH88Shq5)Mmg8fUrRp(4
%kgF^S%DKk_Y`h8gY&B7hf\Jcc\976-f<O^6GQ.dZIo!]RJ"#B1m*3@&@5.S!nE`/#_598g^*]4N]"d'irCMo^pZj@OKf/AKKOqPU
%g1nK4m\6hlPLPt]gjJh\kkogRqVC^aGs!Zj[/,u'NUPU.agJaADtPJ^5&J"nH1Un)k]hB]4MUa`kk/7'3Ro>RB<h"t1\g"thirV\
%@\DikG?Tji\lq<[9"1:Oo\BoLm\^@G[J`+\[K&#V:ce"^H7ltFBrUL.I[fs]G($Del!3(<]T3@rSc.77'*e'lb>Tb;+C/<D9dr9c
%A_['I'0bO.`KWa_@XDU`2HaMfp_u2\VSq<O\ugC@#t&tm"^FR#g=@ra:+Tk$H#e3lXZl2qH\4=A3F<h%W9ZZ33^*K5@S1ohn'Z%^
%lMTXh_Y6%l[IEhu2';c_oe51QY`;J.48NI(*_Jrde^<Ks_cEqqerV6248ggu+9!"qE;N-E?GEU.?7m+&QnZ5j02AZFI[r=&Ep6Uf
%Mkfm-ZUl,"cO][QNrYR7Berhbm"C"7r0Ss2V@7'D_A@Q(M)+<Om/"_HKU!raE:W-h'HPqgPbL9Lf"g=d</WMC0`,n_m!12*"OhBe
%C/H<0WnjjIGnftfnRJRfR51/?(1jX;Gors/UT?m=+$_F#,UKb^CAh#[U)ZCp>*LIgfb]QmheQ(9I>_CglAr=gjnLR\U.cHK^?k^n
%bgPif:!KJPGmCIVc#:/Mi-CM9]]LlPJ)D%<o-#1I/[kHZNs`Yko=t>#"YjG7]]TRJ5+Z+[,(;>rcdi-?*Zb(I*DpE\]lk4*(2(<=
%@1$V[2X@bRYO.$Mqo`Q6bi[X>1=qieW3]No[G$D<eRi=Y;&O/U<h$MN#HcPQ)5/.]OPep&.@Djnn!]EqWs%@nNUFN?l?O=CR"BT&
%c.cp9AjWm2'<2XUd,.SJ8F0Wo/Sj^*TbdLejS.d#2lB/qr4%HPa'Dom-g*.K02KkPF&`]"TjBC5Y.g9V\^A$4>G(a(@A0&;A(^r<
%Pfr1A`C@XpI02i^o,;Qr[h!'T6^bbe*ahOJR27Xlb1`Q^O\iK]b89:s>:iN>s'75)s*p@6SGr8hoFHk8l#GCJ#BCX!QX)D,*Z(a3
%HZ4)9;kH..BRF`UpnnSa6S.9TP'chpk?N2E7=O6Vfld7@Hu\lVi_B!]^V8R#Vqt:CD,V$/bG3fb/MJ>CoZO*ERf:@C79b\)9Gk[E
%E=TurG'aXenm[5+paqs7'?2^pkPhbUQ$[UuEqS^6Gr=[dfu)9YZH9lQBB.eXQ+]4'*sd8a;&kbrR#&94\)!N_TXiNicMu2chqcNV
%D?5!$f@KM_s./brF8kp9"uDHObk^-Vs#]Cnho9t1#1utK9sc2/SF;IBJ9F%]1?X&JSF<!>]sFt,F_Q7_&INr*p"!B(#nFnqbEph!
%QHq2/PA,)%A`p/m@U#W)@sNBHn_<Fu4?`N9eQ'3=kqQR7-]E$BK<88c'3+f#ji_0e9jO%%bBI4cmJ9DT)rVAL8s;b%8''fufa^Ek
%*XQ-=*$LdrA93Fj^6[XZ@rDj@XW?-H_dm6(J+iKqEd@XeZ4`LrV1\R(kDRZ84h3OX?@@"-I.>n/jjEnD]_3=0gVtu'9F,8PrU7k]
%p!kDC_8.nN=)Mdg`X0OcSu07sN1]dGh/\nFM\E\gc_2Sm>+>):3#^+C=mtOZTAlHW?66"#rph_W^J5Q_V!uOl:UXkA:Y5pJD=8$#
%>5cS:%ae!glskhm9j401ph4H\aSTAG]cXk`<9M'?*-dkR06?&_%_U#:QT=R+5*'!&=X<L2;&I;[k.o.mH_>H<jUQj.m:jP[;s1JC
%!Mo26H.qQidN\paGW`+8GB2*oJAX9&dscpD9E@0+Fg-]O+9s^T`,:NB#+O8n^nt2cmJcAFJ5dRoZIQ.m3BGi\_jV+V*BmSKrG\9h
%R!.M/S<91^pi*m@]=%58jR`OcDpH??Ja%.t0\t^"cKInWqU2g<km)i>o\HRC(Djj2,W1Xb.t7WceD->(1FBrp\$JjQML7.0WK\39
%CM?K\_kqK_0S\J/I=(=np:>MEo$-_4]A[f+@\QKO[lsaKa7phS!,qIO+/^p!CL?5/P%Dr\g8"8dSso/HgK3SQRq%@'L[ioJ62Yos
%@T#@[?FR>Y\1*&U[@C:@<A*(XE2G4k.0e`HmD0;bN\Q/<5I*7<SDtH5jO<ID*2@c^EJu>VR,]#FlfmilStG$[Eu\]A^<@S;R,]$1
%'$'cd4LD/a8JPcsh*4!8kL,^an3UA$*FBhXIW]WcV7'WXGO'e%m<9=okkt;DlSS$:-aaof0Ab9Qc7coD3k7<.'KmF\dCAWAPLE*5
%)dL(Y_,U^R&;P]qHF*P8jmld1bOaaCT%iK*D2mq-66p>b@%O8)k-:uc`sad]AKSY!]JuBiXmiX`NFW*[ajn@pZg;.JUR8l\2V>i%
%=OIVD1gsLI&1hOQ'f9DHXW:Re.qs@HT=_lC4]LA&qs2FtY#!LRg<ZGMN.*N.VQe&5[7P8QSqLkIf&S[n8gi9RJ(jpCYNdj-HVGF&
%hNW@])9c@P[2Z)uc4Kek'+Vnb'Nr#Ybq.VY8Gn,BQ8oM[A)!,2I.__/n^q0/YA._Dj^qk;qn$J6k%8OLp?#t*DYE3nL[ZI5EtbXr
%a6q28_TJkb^^@D4[p/jeKMOM<F0dqe]5t;?2nO.;4888Do,&IYn<b3,8V>\8LMkfIRpEV]E9[Anio7r'QUau7ouHLH4Z:`?$(esA
%aKYW/Mhqo8HU7hDpUChl53@eSZ%oh%>9)GY;-ru!OKk?aoP$)AKOFW5Il]_RroLJ?Lb<!U*M6U8naDYcKl=-n31U\Yf'BcPmO%Kq
%n'+%b31bQO7XrCogWNmpkb=Pb#CNlL6-cGKB!r2XW7B`9kjd?ddVY&:02GWnGK34;%"Z7FgKJ8(7]#17cS!Mb;Ei(o)?4/MU\jH/
%,U@t?V)s0QPA]^tE;Y?*NGh-0ad_V>QUf*>WJbeAq<Yo2dkE,tddGAj1nA=SOU&OYS$;XIrqGL?H;YZ`>e-sI)^jQ1/PjjQ-AK-Z
%f5>@p<75!djEW0Fl&-4HVU)1%1B79601$uS>S"[L[,r^:pIq+RQeu.WS1c6m5-$p$@Da_4ll@XheXt'_h/(enJ>V.n8<k9sc>r*4
%l>.1%Ki'\]7/-[)hl/flCSU+@L%$0gJb#@,SbW\bKACJCBdOgI^MErtl$j+H[)3s30:T*^N59=K$ramXVV6^>)#S94@>a4GAW)H?
%kjmg"e_+sU[/XI'OOF<C]72k*[Nae]PH/V^:,^+'k/21o&!gKc*2b4Hq/G,K[58tcqr".6_#ZRp5afs<rBD7q0nMNO%IU7Do.[ac
%J%isU^;XE]LrVs#r<O!lB!/UkK-Yce#d_!lp[#00[cbFoAl7fBf);R=DZ=VPj-8Ac0AM?%\FW5Bfho?:"I+nZ34/[NIf8D`MP`Pf
%&o?b,ntqJUgM5_f)17J[ioAuZijQCQp)YI=kl_B4k<Ukp4pI71LPmp)AN4&3Vgd98mf#?RR<Wh]F`4VCp)lkG#Q&T*<<?&)pd!_$
%8i5K)/g@g[\(USRAu;f-n"i2's%jB?$289QmCbgafG+#i0:/#T4h9?Wr+"?mY['pnA6^/RFLqC2WU\$Fe_BrSI#7_2gMKlYr:Tpa
%ptNJ],7!n9>0P0+J!SdFp2cXi=de[+.QcF#E<ohii!=^[H$'&JjV0%q*F/2s0(a/H7Y@7mHJHd7g^?2I514U+krJC@md%+<mISfU
%fu&*iofAFA5"pgp"22Mk8W`rDq;4p>j'U)='J^rV!^o8%F`ICT\dKZrSuV^-q=D^Rs'M@Fo[W8T+9(;EJ"6IZELP`1II`<R(=/=#
%Y<I50/O"[T;762X[jN8'kPqRu?fSnAp!4.ui,AWSrTSfpm'h\J(1/]nlbBL>MtH<W^4#S"e%5,L^f4<=[&0f4HsO.<1WlIQn?HhV
%ng(<S6'R:3TDiBdJ^><Vd,N2XhP$.fp;$LH/Gci`hNci]G:5egK8g,D1OaSRZ"n73$&@tGjS]lI\*X]CFWR,;q<7;q9VD=Hn.f!P
%a8\->2h/+-q=<ag8[@_!2BD]kX+RE-Q*lP8^kKe:()9mU^8cR]?UOhi0R[2=%t*CXs8FkT7Gf3l]KdB:gP!OSq@YIO!f)R/])RL<
%S1_!^_[!^`9Y_`De_%CI42f3a#X24%P1(N,=Om16['^EVn\`cDUK_YJ]&]X@3o-QS4ZVZOjbqT@=4,cr0MhI"RIDcJKK"#o(]E)t
%DVK:IhRc-Y+f9DLnD^g@<c;2qUNbq_]b`<1m14&V*mu).MXUJ^Gb//iT$kmKgA@H]O,^inVPc=>iTM:lDa:b5oB).hR^uc\:KdHD
%DiXIKH?aF5n#NoL_XY+@CL4O+[Qh.LH$Hc+I\(W&rnBZ/I.Rs&3^:9%nkiY>r5mrRs'.4PgA4-Y(LFlui4m]'SNh(uFZS]_5&cL4
%k-3)rUY?j9[iBrZYgKjGTs4]*OQE>K=@9_g\lTdMeXYlY>?4racmHT*NToHlig<cGX7.-uE*u$ZX"DS*M`':e4]pI#f62;`"M&MM
%8'uA7L\-m4<_&X'a)SRU@l(cB[->G^*I9j'U"37Y\VWp88L:fOk-h^=f@:D*)KD;`N;f$:APCVm.(Z<j$bACK8I)i(C!DMF9[=+%
%`R,\/B@?D"g/"1l/=r;Lco+lF6JZ*"\o]$-[NEpq80?@eTAJ;RU;kga1bE2V\6@>KW:81EO5Kf=LD(aKgU9;MBmHO.&aP(h<M#7'
%9)Kcu]X.kIkO[tf=FZM2`KsB)>`t9>C%8X?8n3fO]?C3Cl+XQZ4M=NgpN[\*:n[J4^7bqG6"5KuD5k)V0ror4_:#iGQSm.L/>:Y5
%,-k]qTYfa%\taIhG]@"A:.m)S1D4/6`aUY:EE+Bki=<!=VQ0b^8!X'6X[<Fi*c.)_lC)a<e-F!<S2>)0i4\)0&__lkn3hi3CA_Q.
%1`kPY]&e_YcIOk>GFCg!2%-!)cE/_fFS<=gJj2sC&WKS9Lc4YuoHBg'=gn-.9`#?!RpO(Ckp!9JQ[XGom*j0?(YA[BD+L;k`ZciQ
%F-(L2Ok'D2:Hb6Ge10,tYW1'q[0KD^>hX](0f^L\6^R+75?;NF_j4RJ_sb9&J$F7ilKIn]ECS:6caXBqo8aiO$p-4Xf,Yta]*5Vq
%[S(Jdp2?\<F;o#O/Y+k<OhcYdR^@GO7':b1QKthQQ7>k.j!O%sS<U>hQ9qTc3FU>CLIP"TFP]@]5KfMN)i"U\RKJ2%LYF/hRBCo:
%q^ifq9e5@R1+92(O3+1\WA7qg-L/U-EEY</bPSD9>LGBLZ*B#g>&VRN6+Z_k.,X!<m8e;?V;7#1`HK-rk@%3ISQBtRcMf/]M9s=d
%dM7\<!M0<u-7sB_SK@E_9NM#8/q"Z)2N(QVYu-YoBTf6"pIf1W[*t0>9sa5slJM#dLJsh4ZsO)$jP'r/'3@qk>IHr2U:p4^&^?]p
%7>5lHm9AK$#Z9[/7rm&mHV`5`/b7'XjkY>CaC30^T"FijcYkO,dXPH1?r]WY4^'Sj_Wc)7hl"Wb_=5QK+6bi$k)uYrJZgij<ehW4
%ARWnRpj/\G]O%.Xr%stgBb.SU(QUO<r;??bqWuspX01$NW75%rNI-%RJ#0!Z[D`0;<)ej6i#e+@S;pBK]:mM'FgPad`bK>%SrNZ-
%1iN>8e*4>bYl:*GjHWr!T+,h>\Xn3A4iRH3a%:^#%qZYA)L/5K5I^4qrEqfM2mXRLCZj5cOSA3b^1e^%n`f#O`@7pDnBK)DbL:Bq
%QS4]G<tYc85=ali:00$&\%:0ucB7o"Abh,</fju+_>fqEp%[d\bG/!MqS>Df2X['0X/k@DH2HF^M#]</RJtt&ac$1#DIYc7-XR<V
%n]S!%F4g"Y5DI^(^0U_co&f5#?`J<]eJgld*FJ__f-`4.**fA8./kh1WSta;&]HE,hjb\4_8J@$3!U,[@,_D,9VbTF$7;3a_*kUQ
%QtZ1@Qrpc`L1"I-m>cN#-G&pl9WU+O#G:9uK8F#?0X:$L'CYkO28R5=O3PL/T7_t2'M=>Q*(k%uLCtoq0aoB)m=u>Q>saBcE[WZV
%T28u'br%";4`$)teuO/67#gJ?%bLZDYs`MN/?uA0`=aO_p2K;,),.,@%OP4g%O\u;374l:-X&Ha'Ba>oI>&?F2o[5+SgT/0?Wt"6
%o)uXD@[#+,/j*5nEhj,\N.^HNo]Br.rQAKf_6ac$%N8eWRGkE'i'lj]D]@d%F9li)<,R'R#2(]8hFuCSXGq6YUda+Hq7;Y'V]'k@
%)YL8t1f?-U>Fq<uU6>)T.Pq_D!Lt_ofh)#68O'Y+d*J%JbD0LM6_hA//a$>a.::2Z'p?GTq_IDE;&Kp,0?7D)4K?!Sdun]ZK3+b!
%l-?Uh+?cTGJ6[7:gd%4pOQRp(%VVA^k)6Qh83a/E4HHYhY=Y3)p@VOZN_e9\r4/Bca^],JZqBpr>;*k5pf`_4>LOTc_E.Lr=f\Ef
%&(0X4e)(sNgrLa,9;T&KW\>IZHrbQ_AAI7fUq*[;J[J4X!T^b7&Z;%`mh)c2jLne=7@&+-rq7,b/d.U(oPYn"YYbjf=F1cCRrqtV
%$_#@-GKpDTHRC:cFdr@$2I!aJ`[@s?61LcLP+*9>"iZZSPa:PXc!)sm)N@a$?)q3n32CS**2c`fFE(2iaZT,S7R$4bLD0*7?#GfE
%1fRrQ(iUN!KEG3Cfgq^+RMJQF"ct7uZ#Ln4E.-/>lfEcb*V;:Of;-%4:?U9,0k+tnF]@O8Die$DD;868Qg;a4h>0]?V/nSO&8*A$
%!QrULKqU*@X+=KQf*3`8*o_&ql4uuM9o4]pX6LfJDn\"X)M\7>%Z"gl/jq!D9s!I"7sm4?/Y??Op/'FnTdn28m9sAFG"n0#2c99[
%A#!+6;I3,lE:A,\;9Z"m\FoY%H!ZY^gXr74\qEBG)>)rk(W#0l^0T8d[Hq+_]:M.%bni6KC=A'E0d3QRQ?8H0@JZWcGGU-,5qdDh
%QpMj&5c_q#doMG8%3h-<#6m]7ETb=:O<']hPZNj>aiiiQVTntdeTIp*6)aCqG?*$sBjP`_l-bVVW7im[kN!?heaR]^?]]UHHXFb2
%g9('EmUJgX'K^Ze8:7WZM6#a.OI-[oF$a>28:4MGM7QuVOJp_V,cV:[M-QdZ(C>q16UJXS9L?TK[Zus,OB&e6+joAp5b+.%B\"IT
%VEX]mia[$r_J)=\D86BK8VD:_8^rZ@.1+[8j-7LZO,f5U'(.@i#s1-l&KWbR&T_][\KNiW@"0mgd&V'H11P(7h2mb<,pD5n$&L`.
%ol0J#Oc](f(m9ubF$emB',"n_6GgqQM)c`!TCpHJ*DE`Deg2]D`QpQ1Sek#cS%P<))TL=U7#3;),'OH'+Y75g]orgm4(Hbb5eeL<
%ZYY%f:ug<nf3,(sNd]),%g*Sag.N'U8t%qJO_G'?Q@V&dOs.A1j"OJZ/LP^l.h+2sn?3EE*XWLoN?o(kFiu%odQ>!,1@:li+\dP%
%Rl0Gi(ij^],%pBr^O_G31CHc+jI*gr>ieXM3jNc_4IsiY*+(mHs.OE,C-?jJdX>$q;C:VGL=Rp,:>.L!CB+/R!![L+>93YV">.[W
%3Q4j@#p.ZW=o%jS0"4fZ-RE.>.'eP-X#gG\f>QcZd3hYTr\oK[#K450F(hql`9!3OK`L4hM\5m[[a_HU]CY!746)u*cJ#3Kkhe;<
%_<uJg<pI#gLI>JS$)CW./uii^<a[HKd/PF9IK!(+&.''Go:2%\YR8odEd:0XhZ*:fQqdqJSFdbh$:3&K+#0mS1lINSOaWhYJhu6D
%DjV#<jE9$\RiJhXWUG>R>OQo`qgJ,>[O]LFSOG;5\bB1n?Om2M7:$GGmZAMeXZVo]7WPUC>'Wis8jMBE7@_qf9mUF5p1BDf=aeQX
%=b4(>hMOU=j>M#%S`Mt!C`.7cH715^Y`^(^:n;(L3*VVco$P+K]q3Rp>@'.,OXGK#R8?qjOBEgKU?=nka>i/5U6/a/a9I)^H*sYc
%jE*gejdU'<EB)G#m9;L^%UZ=c:PYeo*Y?Ujg-[2?[.7r^ZdrjOcKT81/p/\(8][3nTB/l%W'X7cdTAa5_"f<_r8q=.;N5tPmcefp
%(7c.t:5]#%$?a`fn7?Ia8PRmG&ZM7oP?.*Y\kItr1hTVHlj9sFh].1Xrh7afIREtM:JIGu^EJ"<etc*[(`]AJarNt9'=i@X4pc#Q
%-fki%dO2qV.)La6TD3m3UqAuHI:D)@qS`1%knBWW;>R(p':^q/6i+a&9:r:\GcMMWF>\K0(Z+Fo8*Q6.%cd1Q/njIH:KA7&/U,j;
%4u%M7qF#3Z8tTe@+DuGE;>MQ@9:q1*.1=b*:\*XM^$R4rdX<XXk(Q=iP;O;dGDB2orMNG[%K.8,'&7EhOGu)3kie8IW1bHf.Lbkq
%IU2rkDoeRGebk8j&C`C`imt#',[`N*TB$k3oQ0eVqBV#Ca#JLQ@>D![T1EP>Yb+9goT]r,cfpW_dhls)^rn-c&\IC$cn#A']pk04
%G]W"BI,!aXmek;HC!Y"kPEIo1&)PLW\.+:YEldnd-[B4o=uk$%f!f[Q/oad83Lh&Q!>VaHj/VA`L2k2U(l*,0L=AdGWKXKQ6g?'i
%WKYp-;^Yj,LDHD>;CCj@m6!R;1Imh^<>"SdAr[>rO&7]'F!E<]D,4I)jk0(PEA'i;cdYNgT0!W0Eg/`7UMlM_.;Esh4Xj7Q61uS*
%ads?uc^o7G*0Nr:[<'"$D3p9:<cm7RIF>2gT#>5.nt]ET4;eP"9AFU^Uir3MJ<<&>QP"T/P=C`RR)'6rP7#,2ae7jCns3'7SGH2V
%U%k-EH,g'19hcY%0)!1*APu-3Mu<BI4t]^8Dise_F%\B;`QG\#i[(Ze;Un)@9uFiX''S]!o>q1m3S4]#NtB.MFm7H)ANA+`qu%"C
%^)t4N#.4biO7eaF^2'Y![d0jD[d0j>D4(1Mq`iFAqeH'DA)6jVUq87i3]Bb&lMV32^>Jc9hWS+THg!LI]f5<HNclt'5*Y)%qn&N3
%7Gbe?`gg*OEL$^:CEMrDooF&2?>9*3-1&,sRreAp`pdKl5fj7)5">BUqgeko?X6oBb]V]^*VWgZ^&B&73pt$la$$1scR@="9(e-@
%4el!&.+OBQML.glSu]@C\;GWZ#re*^WLR'h!CsnZ4jkGTIC:s;ah+Oag1T<k5d2D;+#8e22puR[b/Qua-+(lEAYE/I,rI>&h)ISb
%/@`MZ4Kp_IX[A(]71itQN+71?3ek9u@Ei!tiR[X>*7?L&;I#>olheEoBtsYu['F\,_MG9[m!10o/#C#B3U4`8qaU[d.??"LTDlG;
%iNlE>(gO`eF@(+.%$JG$Cfp;=Sl"<=2,G-NjnW$8+?s_$&'$0;1e!\OFl/qto1YM8(L9IXdVe;?iAYe]ai^W84;>?ii$@qpUVa#C
%9T(/A:eMFh:lbAtPuKnrmmYW46&DnTSX7s11-:lUDG^n:dODZMkT9!,2)2j6Pu$B"F4C&lZ&[Y"N>,aZ#$PPu!n+XhUH:G;N`kT3
%r+/_)YJ<eCZnXm!i$CbdarCr()K:;8m*c(eP)2o"C%.,T4h9dg<q=c@-E4p1mKmk5F:_&5Sug)qp2F-iD,HE6(5"OWd;^3<:6ba3
%.%kbC]lc:#KYs_^jP?k[2sh&hFU!j21DH;J*]Y1]LO5gE#EY%W>_%idiSBbR%s3gLltagM/*4g(I3"J^6#90Gn\(FA:"07,oXWdS
%=M]Kj1H%d"*eAm70sjV2MIf\'Rgd8nc`.1(R-pNO][ZlF!3=EB%"6'\#0V)TI$OhE]4%`,])*Vi<t,&5)7)pT]s`R&@ohG)qp\\j
%3-7"LQtV8=e.W=([$16]5M]@><UW"X5uujEI-g9\LEF,I?>mg8F_f1'/Au0?Aog9C._/+;U-Ma:Tj?8N6(FcnK(qrSYh6/T:+(S:
%.B'W26G)Zs#im9FEXM*_q]4O@5HtDd]@mM=ff8GdF2DQFQ)ahF%%j^"X,`G`.\S:S/MM?OdCU!urOGeKlPUDKKopi9dYlAeEf-j%
%ZGTpcKaOi+GS:U#YL9`N@KOA,ZYFIPD'5`rWR:5Od"`:PWk9pl;7B2-+.\7hDBLb9%(!nWlGNFo^D.^/p,4gqB`E)=+NUQ.^KV:6
%b8+d"FbVFqk_BH:n0U&rH!F.DmoH0]UTlp'b?KY>nfF%R)lBQ3heI;YoSanUZ^k/:24_uph,,4fQE0\;!(Eq)=,kN2RLOS:$)R48
%olJYA2mo;!K1K+Q$fCXnfcY[s>EjcA+m#jJh'=6RW6T<)"s>%sdKe7QNK*1?CoX.O9fdI($'gJjhm]<5L++/LHPR/nn![8A&Po6`
%*uSoGZWsfH5.tJQl9AuRdfmtD>W3NfMt3bYN(#FVa$Q^-5I(q@P]@K=[[oU;!B@Tk@CONkn-UX,c@]iM=6_D4`i=7T)LM5F#mW-1
%aa7s\h6f2EeO_aGo/#UWjjk8mmLH]q:C[pk;0qI&Za<ENRdF@5ccWml?g1rW#6[7@D<^?AUDBq.fRqlJl%IU&ngX.0mOTFo/m*g(
%/%<KSSi][DY?"u?)L@3NHr]>Qp1>qfolY$cCT"MFHoB3U?$Dp:='Y,^:FqBBo\.+@'^O>/2R<#,%Yp(i3?q!u2bBQZ328W^2uW!L
%<AXJH=Gk$6*.@/@NJAUf)d[I!fQBj1Y,oNR)eO/QI+hD/nA2LaSK@a7)dQ*F+P_TYJ["@qG+2c1[h]@=7o:i,*kR^Z?a7DYG:h(Y
%!d?12G`\f!9uR/mG:eeta807r[9ZH&;Clc/TPr(L`<+][d^XDFQu?c4qYi2+k$!>H<a`'FQtll6<%G2XBk_q%!]\H$HcSn'h"Q^1
%lC>G(DWk5DV-]hPZZPB.*_q-`'F_qWkZPL%@B"m_MIK?q3#8Oq*V).%^mcAeN0j7IOhBI^9%OK'%pdd\>h,X\b9\cSoOT#Ecl"s%
%GD+C*K9Tg@5T;=Na$tm)%Jj^T^%:394%gqq)!St_m?SV4U^`tCnu"3RWr(C`M8b@bgunLW+Y^#-`G6EMq(MkCh^smAO'g.[.!$KQ
%5(o6a5*U6s/^8\lF!&Q[LU&hF2#!]fZ)'Ih1rkpEf[;Ze9622trq)o>!f#b,(Bb43!6%Qm<cG,H9&`Z?:-MYAF;%^/Zr\^XhFk^&
%kbKM5;VX03oDekoQ#;M*kTHch,="7LM+)*o`$t&>;=UWKP-KUXeg-a7jru_aTX4HIerK%rciNi7K/gtYX*M=MQ(etI;OLKuq4^*(
%RIVmFXL1?&U+>^O5L8=3eXmS'Coj(]^8Vj"g*d9+#8XdI1<TYmJS06`LN@i)!kSiBmh"-BK1i`nG;B\'nf%O440S/:8Tj?02E1eE
%aJ_A&:J9a&E,f'W!QU\Jh'V"SE5J/+B]DPfJ\CcUT<h!EQAh<+e?2EU8t+t$Ki$.!?>=CUE,N4oTLIC-5\#]AIA'^=-2T`&G'J#4
%i^.`1)b+9MV!hh=Fd,bhTeoteAT9aZD;*:J3/oE:2L@*)W6iF[7U!Y,Egcb\fk/Vg=qB14j_Hn:Z=/rW?g#TLCen*3_5b)TK1hDS
%nZbnYgR,[`3]%au,W`QK%>]Hig)8>W2T*#3_AeJaefs.>cYu"FWWi>W:BtoVTFSa/W`:CHGAD#taEFH+eCN$%d1B<V@mi<qHZ/`s
%-f(JU-L!q+?=k']PYao'`B-kY#BOh7:8TeWs$Y`\SHZ97hF:7CK-G27<_@\BctT;ZjJ3dBa8B,>s+eE96>L><Ui_;,h1nn+CnM)V
%8^tbY"`Bl+Ejo"J=R&L/nQPc*a)l>kXT5Mu*6>)NXZ`j]h?l<)9#j=M<Nth@Eg["u?e8a5f=?@a<mo^='<'sc2Jqk*b3`VnUD3Y'
%#2NX%QblH4oNft81d4CmPm/rA3KEP9k<$j79,e"/a:6`jeE5N<O`jO2n_rjok3bJSDP\^iI.k9aI\A5]#7cld?:a('4LYr2&2f`6
%B+Vs/%CR]r$#*o//!Wp6O(\1QTII24S)j)J3GGrkR#gG&c(c*XLh53?5\dVo#V#g;S^T34eolb[q/chGM$0:L_B^P7V_H3'9#@Ti
%#paAR&(.`rUM/6$Q9NV?%9@QOgHY8#c%e)!3J*'Hc.rLK3!u=FGd`'U22$,.K`SI3<%$8DM$94sQEGd.kVcr^kHbI5=uB_m2S9BT
%cH9cuGB#ZHP)77C*$k$J[T>%\r"\^-bLpFLfp#Hj*Wn)UZI\YSFd=Ul;mP`:=eW$,b1W$Q[Vm'aZ(9@G@=rG+.P%)e5+B]kC$Xid
%$*teOn7h=]fjrR#o]9lr\Kj9ddjEmI:Ub^0OnYh'^#=/P*_t@fWf`f*O-_aKmGBY*?uliI5+HR;Y)H533_25UFVnGDJq#qRP!6>u
%RfN8'!_p;Q^(q9_IGUKkZFN%>^G*&^?G6/V8pW?/c0Q$>MYa.g9ml^s^DMj8>Aa4I'WP3ah@tIc,>Zm(b=pAq^t3rtV.G5:%%""%
%b8FT>g`ToUY)=g$oOhIkG1(b%_8NdjZXhcZei#Qg,kI/4O1qg:C2S(6]q/#6_7R!XJbc5,'AAX[Y1_.a;mP@4D/i]]%EJG*FPCl&
%2?kgHAr`?9O]N@&GGE*)-K^\P3G)`\R@%J2k*UucAn$dgQt%K*R#*hH3X[q]F3MQB+!<;YNCE9+C#/Dsm@5';T+C$n4I'lD]RQPX
%_UVXA7UjU#C/\3Y3\p$(7U:Yb*WO0A1BR@fhlO?ubBI7:qkj62hL%QLN4A%CpWc]N#N*R^jj/_Q&]dP"\&eI@R4I3.,)2Amdsn/4
%bX;lWgWfulErl2D!<;g%i-U$Q20#O#!IP]-)A^-_i_I*l!'^`O[2T0CpK7K'!`/8*>J\%%!W3.PKQ.$?]ae:Ul=8E[^or0&N^!8D
%!<:unVme7-0@?\+q0OdkZmPRT[ISNkQh#>Z\bnV)TCV_9.12<Z\/K^/-cM[aC@Q-_],H(NnCVaMam<[0Bt$^mmCEr*0(Lic^s==r
%n!/dH[8m`n[L/R0TQUja^b^Js/`;_KAW8A6UhGb>6DY$(UaNVY.D%cEZ:R5F.1Z@6j`b4C*T%)+kl<TOaBNSj[*j2;a7j#aA^cq6
%Y@GlF^ZT5)n3'W[SI>?CaIQUdT:UF(=6j$5P$""DQd>9+5-5saVq'CfeMq2,&<7=a,D=m79CZ'D[WO*/dFHt^.1&?/oW/6o4NpK'
%LRu/J0ocrJK>VA.SVmfp@R%Lus5CJWPbFS_e+#6&).n0_G-p.#(ql2Z%'/sHrJ/]phpYT,4jUkn5d8sQ0YALh!\81YlbZY%ZX,i*
%s2sqMgGCFecf\EF1Ab<P17r"I*8C&J>pCHHJ,"EV+4E`"mQJ>L'.ELmZN`Ucno\^\cX-be]jAAJ2Ckh>Zm3jW\TKE@`RWBplf:bt
%+<l*FiVol^V.n0=:;q:S5-T$FosqS=52MH<n,L$S+a8fVQjd,[pL`'](Pd1qNN<?:f#e6Un1/g(>4/1qTkOq(3a#PE%nk8-$XfS'
%<`uU<9'FQY2E*5hP<AV7Qbj1@^6JCg\aSL1qr6g_hDVDLrqFK[OA?6`XbL;%1qh@l@K#@lY$<s.[>*B)4PqJ))bo5BTNmG8Top8`
%3inMU[njMXq;$kDa7hmWM=e]EjfS9GVbG*"4h_H)ZfsL`ee+&=hfH,Opn"G(Y3X2MkLSP2\b4;11)[;s4l<JkSe%j[PL87N^CQBO
%1oV'AI)J2[P>\Sc'6=X3@l]"b+5b6>Mu!d27;(Do<.d]9H`.66GrJa*nD4T@])o1M.N[BZHSYJ^HnY2=f)7uf%(gO1BhB4HQE?[u
%/+V*d4.Yc]@2T;2].1fh*.>S<>hIFbaMu3!HuT,bUO,7FUIWKUWg0F0qNZp!I:Bfp5.H+:kc,W^DWT9*;D3u!Yn!*Ao!jDf_e%S2
%P'H)*qC?'_m*@`'F"8o^Q*H?$Te=oL>?N]@D:NJ.L7H7FZ-L!RIV"N7Y[0NME,0CL?Pr*mp+,^j[/0H)Yp91h3bh^QPk#C:h.LSb
%s53f1kP=;D'$]iOS6hg>(]W[Zk8E>uGhY7!5NhgB3QM0`F8Ri8h$e<_KA=]oG;I=r%!)(Z1AirLh43H]0$%=Z3Hl%')_gFb,;$a#
%e[UA&LPG-'n.GQC(f.3W"Q-tT!07QJBrg]D90NO+8P/"_Y6bq;R'"u9<FFgUA9(hJl&<p+8m9OdIn=Z1*hXP<<*[,^"+nE09rHcq
%^VcQ0#DM*,*L0629Z_:7Jb>2-MB:\[X*>o(.`Cd0;rfX>8WQ5eaQg+gC#6.MJN=LB/JUmE=sjP7>I*$"H<[,Z+LC/JKuOIrg`qF7
%\8Z1D"Z8$:PuiF+[9Ng[JdN^1!fI,a0!QlU5cf2d'TV%PPICd2&S8bJVTr"S2N$X#S[M`2f#^Pi7g%7NZE-/BdJ+_J01m1u!KNDj
%TN_oW@'[Mt?^nJkN4%7`2!r#4\)5d=Q,n<]\s2K-W.?&E`n4-O2plAR2ZP:%f2D0pSBVZAb%JY]>'ss:Xu=+VKS/aDa^N+*Ks@Tl
%TaKUWD5NE7i@'IW!!_2ar5O:1GRT6`L#Y+_\3d9V7H9>9^"J%2Vb0WD[YdH2kfl.KE0Z#V;^t-ciIt`ih9i=[f1Nn]FNK=qoN0#!
%,VTiq7^=@LA`i?^<KD:?`A+Lc:g2m+hYD--S[j7([$/MMc97o2`QgWK#NnjEO32*%5r0J$I2>Fgi5;"gS/m)+qN^pd.j7sNVoobc
%E6q7JUn9)l=WIV2b\!A)<.NK/OtBl!BlAplD6t%#+A?BMn3uFR3Uk+'d`ZK]S$-\n<U2!Ul<%nXBDIfe/Jc:/M?,VlYgt2FU(q?:
%?rQl)9-J&F\;!F3HFG*-<<<$9D0<p=(Z_f'S[N0B7[n5)>2[MgSo=D.Wg2Lu'Oq0:>=,0HO&H@LQg=4.W0E3P,TOI?-a1<J+(Uj"
%Wg/+UV4_6sd7R!fR&3PjUKWMIJ5*lH7=dkJ8>XT]_NucVWJ9Ln&rthMPG_2c"9u_/6-30G$]-[S3bpLErJ`h8MWRl803.ZBijUpH
%1hV^.9[T@ZqQM_DFh=LiZs&eFW]"CFEZ*RPA;VY:[OtM>+/TuV;0hnoBff)5'K,VY[Cu:=muM3F]Q9r@CYVFJ,2$AaIaIg2\/lrR
%gg(O]G&j<*4D:H;k*4*pA2!XfZ=$Ko_7E;PQPoZUh$rbEY&o<-?D?Z/:Hb6G<+LkK2hlF,g,W7,m^XOJ/luTGDU:CFoY,?7?'"#"
%=4G>^3M@2jn>l,[QRcfY</ot_'fiaD)`+X>J"'CLm'869Rm+oJ<)K"8$1/kA'C)):8t4>[l`Tie3bHErDKg?sm?f<-j,Ek6!ICfA
%[Vr"UDn6j!-S:74meaFc'STZPM)7gAPU8ia`MGi")$pO;ALGO7gVM8F<<^;;NJ%G&N$4WQ_YZkX4Nm1iJOr/Eqeb`3aCL!tVM+]7
%lGH^0-t4qlMP[&aiOedDafKJ/>OCZb":ag(P@&PkD3Mj6',HT2iVbI5cCA#XEY.*nl:L/M%*8S.E%MLY<knI[)]qhbYm0r(/!KCb
%R\fX(%>4PKHkb@k[o9IgF8A)9@8iHj/`-RKL.k:(Dj./jqR9gWS`frh6?97`V@#ERXIRs\?8nPog(1I5m?Ph<#2A$8C//EUZ_!9*
%c=I(m3TADoD)J]hgPe+$Rb3>?1Q<;_iQq'VV!lZD,T7ftcZ@O-C0HVV4',hGo*0fkhMd-*GO*@jPiTJG1A@#;V7&:smqC/35kH%P
%VBFgc5CR`prlsQHq,Mb0Vb^=<piQOCSp^1\C]7N_s7X_%Fo(R1J,5coGu$X#q"#:<5:m\,Qe-.^/\X>.5PfYN\bQ$l`U`S`g\u19
%s8)*Go^jE.n^js>NqLihdjRFd\Add7K>k<=00W[T2JN&1O5Vb?1;<!#_i)Fl[G3#*iif7M=1A1eqhse#="F;%pNZ;pet;\kZ`s7?
%q203Ro<6Kh?XF7ko]>c1eO`qGb;Z&BZ8g4WO?VLi,J<+CI:'b"C#Nlq0!(-5fAtiZIJJB`s4sATh)mW7q0Y,M]M&:h5J2;,%prFa
%I'nc_a'8Q+@3-NcG\db5G$"l2ZfV3MjM9C9Z8\t/"^(c]>sH3\XP-_S/Y+3F?2\cSI.QEo:]K>J`Gar;)\/-o%o87HIpngJHIl5"
%T.E2).bUUo_Ol:K:7km[jjHqsBq47f-`:[no@M;p*M&]Rj:W&S,"IW!oB5d2qsFe%^%l;r7rM._qiA<JIrTmW[H[O0?n=M?k32AN
%dkdo7lM-c+IqW`ThTnFS?c_PPftl'-da=]0k=c[FoDF'MApl3orVkmCPlGQFldN$j^Uq(ipdMnfh]PH3lJh*`jmbc#MI,4J><Uro
%d<beug(^1Y/M3W6QS6hLrU$i!D.K:4=5W#D`Q.h$Ite!,7m.pa`U`]mr5G//cWC/2gLY\/>!LnOnD?Q]\M$_+pc86BMr#uaa3iuT
%m=jN6;1YOl6YqBNANk3=VD%Ej>mM7:U_IU&\2r9(>E^&c$>aPp5".6OS$db@iU]e.kmCt!VIc'>Pb^2Ug\CE!1qTA3dd$_>pL8O!
%_2RE^e'>o,hn2-9qEt6CR'o+5/!E#_L(2UrJ%kL"]Qs>GnEuo#\>U1\m5*T(LSsAa\*TY)fB0!D6hej*K@$]fn$V6W]c$8+ZMEU#
%*f4d3)i&IsS[W$!g88bL!08l1f).o)5fT`nRcokZY8WlGm[?AqZmJ/On(Xtcoj@T&Q0$UN?bTZL_'XQ;WZ_=jH?r;Xi8X<8q>53G
%=rc=kdt]l3!hX\Qg$-Tra%De)>A*cNb;WLpkh"pNpn./Yf6>jKo20IF7tH*8UL94DCAd7lD3U%a'_9MKrB=4Cl?n!V?<$ebW@dJ<
%G8Yl:B`-o8nh7a1cbFr!65Cqdgb$d_Q,)?V/3sDrm@$:[EZF-tT5MI;6CbGB]B*>,]/&Ys@6F>%0V;l'GCS14Qot@p2$WgG$eP.O
%J`!fus+$_&rT5cJ09<=,1@gL=`L<I?p!6,m?!R=&\*nK!hXQ%WPrgP?\+D<0.?8K,44[*^Z$D=V;QRtm;"n>1D>2qGf5J(1hba]p
%^PPK6WJPKH_Damn'TR"aetHeh$4`LA;7O(f4o548nH!ATGg0kKk=:?p/jB<ep!N1WXZ8qaf:Md?#AK[M<t*3jBMd1$X`\$J#p_Ol
%FTb</]$@[fC2S.MD3u@<3@9+IQu$''fbL&J!@?g<!bK%G.b1qC<GKuTXQ"l6^^ht#)pnpTa'a*ce*fg9G#mXEr,j*60ZNlJrq`<A
%N3)0gK=uGj=:N^QiWf]sk825[N4jibYl:?6m<^iHY*t!mmi(oq5$<HO/.PIZQ]&&50KF;6kjoko2s7jgcBuVLs/8\P%W)>.hcu`M
%3^aOJ#gA`;e'k+RC%Pp3qf:Q%3$H!G'haF#E3;'OgIP(UrVs4uT&%L68YY_OH-_oY+QP,SoMtHAH1/G"!(f]e&>5WZrc!Aa)\JK@
%"`fZM[qBXJSic,ZdjRa+)*T5XX(s[nGZ,2-oc$5%82"q0N>D'!">*4RHoDA8N/BUA,X%Q/`f)6dE.Ram^W)',?\/e/8c4E$/:+!3
%NOB*)5R`4>QW^&5lpJEeAA5m88uqt<(bq."?\o`74)+6$5^K*pPZ@h&4&XGjX#Q22M"rRKnJ<(gs,C+hNR/qi'asNAOhe;lHg/QW
%jDP=hhapTCL(L?ZTB&<::EkJ]h^_k/%A^eis.b9t%kRb_s+c`RIg[S#XXYcKkZ7[al:_,K>POUjGQI<n>HMtsm1:=<?^eC@+a!."
%:DBCX1T]j4e*H^7#4=_31\:8Z]-*Y*4aWikBSCcClQ4c`0=:*^CR%Ym@Q1T>pLdMjHI70<phGblE;BfKYP3s)r5W^>1JEe"4B=NY
%s7N"1TYTE_91DZHOl2o[4L1d5r^sV;^J^)i#W)q2\4B+nJT'<+,:@KsZV%?S:MdTPRVNWbKD%--BiQYU\><YC&6T+%/$T'6]uKG\
%^DE*r@494)#3.XA4K3\mC6(Z;\32c%co,aE"(C3>FLC!U5#gg<@bc\%0Of\u0Z3E(lZC'>83/!2$XDbN-lm%R(1?'p8Ohi&eHa`(
%kOCjEQ$IagH=!TSN<,)VKb?>ucG8u%<66d'dF-(%&1$<0>r_0L0Sp:5+.0qe<p&ogLZaBZ3_'iP<4ie$g"QOq9br)p-K:<a%LB;(
%q'bGEOFC&o[]X"HL6`bCJ.<X`^]4Rfl"_I[m62C#f>ulW(c1AZUl_8o+#c"r.*<#8g=O3X$Uh`6op&q[gk-\BiVIN0fm+;Y$cLpF
%icYI@=W"]cctOgDrf;kmn/2bV&UT,V-^#,R6_gGa%TetG6\i1ui"A87`TSSWll?HF"rp&Z^pGD_8-I?n20NOoiW)u0MINTJ!U^\P
%0O\:G/dBr&:8;B%TR.JG$&B5)N=t10aGsZ<7ALl$d95B<j3/I1Y`Y7H\gW]CH]BZu#XFuP7X8@)j-q3c+,a0Tn*nZhj<Pr)0+jS5
%!Ncf+6.(rQY3AXu19UaH&%JJkl4`HS&b3o8k#K8F7WTW5rJIn?#PL-E5LOeOQEo=;6H8n5XD=mK(.G;DfaWQrjP4/TUMrMC"A4/K
%S44Q3as<]51;ofJma'R_iJXs9n1);/&+S>(Ua9GS)s7NkKgpg8rJGA2aM\dXa8oSTB\.:oQ$_.qR%PPYNfph#7+'i=5Y,Jn:g07e
%&loRG0H3<7cdsgG_oS#7.K/O&]Yab*_s,Yr*+VHH$*U2bkaj;X$d1N4+JqD<K"!uX$<Bc&mS_31/IG(&^`hXr8[.GIL15gp,`HAo
%!4`kpTa;L%*3G/FW?N%SMEV/:=K.!-$gY#e6@%gnlrh:IB=saH1>t3DnQXG!BjmBpG3=BF3b2<RK3u1qN#N26[PEnjO1Jj0+C3G(
%8[)ULE0g,]VVmi8'm8?b[-NZ^%/8tE\cleYJe1(-Hmm8jk#cV*=cCa0s*Sgf2Zt-0B8Lrqm^=i/,)Y`,7`n:Qj69$'p^'/1qCNnS
%%Z*3W&/U%XKXc\6V%"lH?j_(oJHVc:/]Cri,2FPXO$M3`pl#e?Z0@FN5^c&0i3C[MFT<g4":-"Z+iS3AWrUPBk!18dR_saf]*:/S
%0QoQMmm:eu!b*4`=A9_HYp=E=`2sSpj+b'QibYa.Yc98ji,IU.BNto/#)n[tN9,O/m$56\Zqpo+,*XE<8n>&38m9UYi@A.Y+ISR7
%+dm`3iB^WRKH$RD],t0#ZSU$5+\r<ngm4N\,6c='![3YZ".N_@pg/4PYHaY`kttc_]=Of7LmYV0hXPgD6E@76DFn+OdmXD<\K%0F
%G@u]<9,9dZM#mooLs?HE>0@WT!,<<jigS-%L+_]0EeLBq3)3:$%Ib.t;h5H,&ge$n2l&efaen'H_9=]@?q%LCQuFTI;L;Gc\Oa$]
%-i9t[hIY>hQ@nO@gb[/pZ!?NTD"Qi)E!9=j>1C;*maFoo_sY7H^epTfgM%Dg&!^K3po_.Jl;(\[L`?AlHl8st;5A>K)R)5X%H)`3
%VmPGoG8Ll!2EBs<kO1W[8Vr5COXdqA[>q%*mahMp+]6=K'g*ta8*0UrcJnil9eTKC$>"i^,VGB&dPV1C#+UK?fnBc-Dq/:U_l`8'
%#</_-DF!79F@idZ(a=D4,)4;e'``n((d%i9TT&p.UKI%n'JkS&!$e&f*eN,L?MkrH6eSJQ^UX"[r7IN-(jRV#Do,kOIW,SSZ`ui&
%.)Dtj"3F!oM2qVnWu.(GYAOC^OVRqTa',"K^.)>o'rOX[IIL_bX27F%Rm[5VfkD(h$oUNE$03JJ3(Q5!r-qKoJKt\aneD'tr0'rH
%,_J?/"]#)3DNd*FaKOh+LKI[ajJF&6o>H7_b75d1h0%[S>:7=:^`f4mmeq(jP*$n2nYG.$jJ5(9PCWs^0"rgW\s/HM#.I@!,j@(o
%R354ul%"sB!Fs5$,.rSmA2h24O4C2@QkNDVnTpFDR4%2k=[`[P'.IUR=)diXF,Z`hkja&5k=A,'(V#r/U-!?'kKgh?Zrq6iH9to0
%PXBhE1$0Q"+#N8rme8FOA`rnc^9?&`>:;J\s+ba>X]FJSI@HLKRXOq8d6[:aH<`%'kektU]3:r4MJm?rlD"TT7[!h[ipX;Z7A"mT
%=sa.UpI:]'`E)5Cm).k.DAh>Jae:fR.)C0$:;5@0d[Pk1@%SD)M2`/+FDGs0;6G<:ok`OL^KtYtBJ<HQFB[3VfS"b#D]3Rmr,3V<
%0:J`<?0SUt/%7#$GOHaPYOS5[o$H@ZE4p\k>Hu_MmAa"NDYmWMUM-ebIaS.h+kB]iB+b#gbK9cYW4K%\bHPjW'2/F!%k=,e_T<>8
%e_PWDDm@uAU]/flHT#&CPb'De+)TFbr@<`a^Q&Tn4X,>uel@)9oLGGAPLKKFIe\D!.*VV_F0U74ruORgq^fFg4,oTAJb],OP3>TO
%Lq,IoTce#t:9"76HijcQ]<17G(Fuu`s7nUHn,EEO]T(61s0"H[d*RjI14MOTbAI:YUGMWtD?&MMQD,H=2!1.ZqId30(IN\c2:qD;
%Ys!rY)AIkaQeQkg\>O:q]g(EHDm@,Tj"E=soudgDlXusUDmHM?Xcb@3F4]W+V1B-N:9+_^m>n^MZ.%UMW$#f"d!0>k.TrkOqg2E[
%T^;XnlZfCNMIeKNrdr*Ws5h3.P[2Mo7l8iJg316`Wg'Q&07E__G,+cnWg2Rp12EOmih-]^:N&t=oA$=p/$6PA<Wt/@GPS[@,r`?c
%U;!a%qlt(Sf^;^BeN^"lWG<R,70GbZG2>:)\'D0<0q%sr_hSD5(@)KL`J7(CDPR$YoUPNp0<eTV0%R&im^:EOj^pC;V7$Jk)RYk5
%`I6LcL<$+:IN-O@\bs2#9<nGcS3ghi0D!b/`4P[*dn5JXQRnlF@]OS%.(79H0R';Ba8/uEPPr\%G6s6WNk]'"AR"$c@$=6s9?*:B
%@M@%t?%%"!'t_imb5mfLZ7h\qS.CY.P@n5;:;#5Y^c!YVRX$9[EO\cE=Dp-V^eCT^@11U@/G+uFn$rfj?S(0HhC(NGJ/BA3NL5`T
%M>(mmZCZW(?!>!Cq@5%UlLYh6eP>Y;>,uh0T1d!g^E;/CFfnjHXk5g.Fr%DW[T9Al;10F.ab*^iY1+A6`S,d;q,V8Y-TB;<1c!"D
%"ufJ`eS&PuQ"'0`eOnmhmj*[JB(m:Y?gaZio(CU;dW41$b:`EI@=l@.n#_DekhE3:<iLM?*l`+.JD"t!jfM#JZ_PutpT\B]eiVDG
%(pDTkMZ;S5dXt//[FbMUD`15,)N(m[2>CGH`i[iHcaoG2C"rUb+aT\=odB&7]%.7"L-JM_f)a=hU7',FO:JjtnT/;Zq5m]hP]9rB
%iQ8sGT9.f?K=@gbh.$SHD1>Bo0N,5DG<58lGAcV8$ifK;o^GRbUqiS1VX)9I\sLegBfG](oE@tji[iYR+&&b[I7gn^PC=U[<r!P&
%Pm>r[q\NP,T$81g<E`,@4+'U%E)LZ_!kt,35:_CWQ>(t`CF?k_1lJtAlE]<,oq?:#SL.m[%n-DS^RSQ1Q^qmh<Z0UtRs8tAQL.,(
%j.eO!R>^_QFq=TMA@C5gB)C&g\!KZ`q&sroO?4,thL1p$nJiTuc5lk4cdDdHC7u6RZW)8&KNnIc;6g&8&U3)q<:G@e4-%o&'1VEP
%#ARc!rq*I,K^;d!&G=Qm#nco3lh6*CgK5<l@<qSA5-1r7DVO6aaa4aG%JXp)^S6*o6;8iabOe`n/q$gg]G-JgHc[_6_=%$ALR72r
%*NG1?rI*B\8mVOJg&@i#H>\4GcTYK,n*k8_$;`H+X7f'7kip\o[i^Oi8upB_rZ=XKVt$FQ;7gJ1*ub-Z#n?3>A=Y?Xs64jaJ3?<q
%pTrF$&+me<1=E()5Z&C`TCgADl5`J2,pMKX%6T"td$WnN[Cgi^C7i`X>l&Gc^S27_?%4X[[V^0C](e9/oaLc!<R`_Yro9\V?"'5K
%Nr6WJ8XF3G4dOBs<mX"lQ^DI,2hA\W<1tDP.t9L#WDu]gE2jYBl/-qI?5$:)[=7$.l$ts,8!b41g3:)JO0Y`H_O'J:&$9\(ke?oZ
%c'MVKVC07VY9sLaf>.^I^,bCF#[$]bS!ajUoL!d4h_S,hU&6?c;@"RALLCmGMTBB[h%N+So]+NfEsdZAh:V^+<'d"ZXd]''OjM5l
%aL=-FGA=9`ZhZ1-icrui+L5l;r'ee^\bYF/dXGtp&H=-/BRWSeckmd`@^#=k7E\0,?2;%$kh=?ae5NFIP$H*h]dpP*'rn)@`:.oU
%DDE'R=71VMbC+TLpZ5VPIp->hYQT(7$:c7F7f<-Nl;?[#/>kf&7K.UW4md],7_Zc]]uPBqr+&H[n(>,#9#p)LSLkBO[]u/,i:h\u
%XKcKCUA.].1g9)R'Kb4,,hNaJC@e^XqSO7>?V$S;5Q.pN:kQ15mb6R?!NY=NXntTdgF]kVXnG8]o_BAhhnJ%cPUK9h,pMGdi<*p.
%ZaHsBs4+&m\<YXK8%.fr#*,_nqbAVbdo<A,^"'UpL%Q0X!a!u'A;bAU:Rc$HQRhIg6bWBl58/CrdaG$$qgU[S[4JbgAcIt&NF1mV
%@T&*LI>^?1YPUjS\(6\+gSJA]P*cnig)[;NDBn<07Xh/ZCg:dDmTGm[r2Z*2B0"XGc!&5YrMZ4)0*LF@lq0?QW?/BW'(^Rm8Z`Mh
%rML,/Z)3Sr[(egaC0Rdk)rJbjdS&;LE#P:f9'a+6,Y^ob^H[38f?b0+XVqGD^0+j)@IhCE?1N0GNAlgJ$9>aUVPe[-IDrA!g0\iM
%7H[mgPQVY*n/,X8);h[%/#LBOGjXCA:4=(iqNfZI2';;dQ"Xi^G%e96%JlX\T+1aW&Q.6s422DLmH83tFDLjNQN@;<&pFZE(G5TW
%]3G$$bBi2d%G[HA:W:@P%XQ!r5KU]Lmr-Zm?U^Z7Vi#jgA@'qVADF'5nirq/cgar95M+V^kY&&Tf'>8-j4]b`X`WEnE39,pLF)!L
%YSZI.hLuf9`Ho#LOo->Md]iVHl2C%U<PPla6#LNk<-d,%R9m'6P)DE>(DCj;o-:T\e&c_e]JGgYC9>-2c90TTlcZ9Ld?.\AQu3H"
%UXar;QruIR=kJmq1Rj^U>>)*-P$'F,X`0(f3=l>\r)<T'1)O8b]hXVAbtU+N9C30P%FZlQDPgUOeTrV?Ye%<S1aadY\a')Z.A'@r
%4FEN3Z[;rjRf)a'N&b80jI`T\npG1-o?u9-B@[PRNtVnIi,(J-#>_X$[1W>5qYYcGIeW)?K-n/ga*SVhRDW;+q!2(pgW`tTbrm^e
%/^:ZO0,+0'Tss.2Q1@(36hjj!^"I\Shd;qACi-.p3cgpAm,T543U=N&m;TeX2IDg5(.V-d5d9HqmeYnR!M>*Ro5!Hq<-Ba=)U'0p
%%Fjbh:5e3mQmR+tSL>4FC2Ys'-uW_\1.,Mq,.g!`40b"h3Ej^.hSp@lf*<@09;UW(I]?-WmPc6Te1?t>RT=S#G,BT!?I%,V(.Y6*
%':3X*c%FtVgq_Rjm/!K-C%Uc^eP`8N)L7a<hjU)o0:291A#A#T,1A$DZ&.W]((XQjYIBPnF(V4W:..pMWTL(9E6)j2IWT>1P-(/.
%(V>I/c(Uuhg>'J8@5:aUkX^0i64YW7>iU->m^RX!_s[f4B\\=<&8Z&HNt:0R>j)j7=%?4AA=pp7PU"Q8nn,\?#.F*O`OXsheAQV?
%VpY:Y22sps@%-#VIne?5'+<!)maKr_@DfP"9bqX6B`*gm!<o)"'+52%8Y0::R!/Y'bg4P"T=1rf1uf=gGWT'iVh%n%olpdEaV*7i
%r'%Qh8:mg?2Le*Xc<&_X;P39Q;W]\51m,PFhKUUdM^*jWI<W%W\!k'7a;dC03gng?dT5Ll$RC:^\N1[[:?D)al0[J7N$V-04k+fV
%S;\67d]HN!BP3>&rB[,N."uZ!@hT4PZR>I2E+G?5E5O#_Zgr3dH)]>?4H_L)-]<(=TrPOXSDa2'7(*\5^W0sTf"4fJ;.U7SLOs5P
%-g';UQh*)#%G'&<r3I#8m6D'UY-Bg1f]g^%Y'8_d@e8DiG+mcbrb3m:YX=XhYN]fa4f[B4UWW/kE-!T)W;"UGGJW'Z^=$aj#*n$?
%fm"eY,;D5;=#)`#N+d*Hl?4%JFsEPbHSS#;"mi4C#Hod"R@W[1eoL2-4Ufu_?$SG3IQ8WEqT1b!A8?Mj,T0j22WrDmX+pfKmhPrQ
%^cEr,q3C-:$I#n:LVcL`pG41VO6_5OXot@D4"JST]-s,8Q.tbH1:u+Tguk^)W[?+RFg9-1#1ch=IEbf)L0oJ/pW&B:[O1.gce&,s
%&!nEf"FN;<3PNqP.DKC'DV+L/ebRU(42Cg9Wm2T%2'/'D&(c]^KlHJpVO<nZ$C<J:RYAl'2I@NV1T,3]Dc*5#r&X1W+@`=FXdC0D
%(tf$p3Br\[Y;OA4g[,_W5no>MZi<"Vc>9!ke7"duM=)></012<S_WAn+mVuKj2:]ibfFpf9%[KW^)9R,dRHJ%f.4X?lL*K;Scl:6
%F-#JJl95\mFeqs&4=n_Z,54i_`D6^d(?W#tD_hW^9D)Pt\lZnrV6J'MIUcl1C3ctT`opX\c,4e^[QiPN)TpX^K/B1O7DbuM>c`t/
%V;o1%Zb*fVcgIrs11E4#=Q!\Af/^:&gK_Tk$UErm5,d8]/@*CFggU[rJ8'<kfqnni5I2a]F4?EQe-DIj&&4[5mdU]GKOsOIRCT;.
%USdVZr8tXp^a=+NTs6aIo'osfCpffBA>d6MHcK6GQbO++R&).>S6];3/HU+u"(gh.E2Rm*\1C%p+i7i*Zt('nj#r]Id@\ZUIsRpL
%O9`H)V,"Al/T##Q_5;(.X0[V`5KrQ782q`V`m`.Smj:'2Kl><3a+s3Q,[d'bLLE7f^66<H,D<('N6KbbP!<ZZGj:Q)&MQrJJM)=>
%Gi'R#>r6tepLRu3rcFCu.=(iA2R)^`]WZuphG^T3c'S3o[sKD2nedcjG)_K*5/Z\JQA'$^1sWkjBoJ@GhD#dmQ]k)=d^S[Wok0IB
%?l.Yk*:6'Z][Rd\OnjZAB&b3*`aZlLWnYcRiKD4Z.D!,,nL`-"er^(HQgruAT1ME(>g/smNYq"S*7F!/)/,<43b2_^oZ8.?]N:kh
%e+Y!1T7g-r;5Tr<^OOl9K6*g`:4HdaO#Q@I98l$O1b1pD2h2Z$Wk0gJ\%SKGjdXQSpsNu_Rn=Y8lCNKm)I'S7eP7a/)d=F<?a`>&
%F6B7(q1ZjH240a_;/Nj`DiGjch@j0i*m<D>1AgaL>cujc\-1p.^RFA&1OHimPa7Fcc-/)h=$_0SchC*H$nNE[N33jA[N">YJc5Dt
%GMd"J[:2Ut>[5P7fB6(bn(]lY><:KaR*3TOd[m(Hp'L4Z%U\,\[EEi*ft3#eA\>8IQ#;?X9)H5'H,=3(a(%DNn9gkW'=2m=O63W(
%WQF5bZ)[gU-8eKgcDpRb2/UXM`3\Y-5D/q/10h=HUBB`>f$W'51Zatd>C-kDJ3*"@F*qIX5??W3n:Yc^5MCV(g&%bHLM-3cE;"bG
%l+o3]ZT"0%Ma)>HH;M"qRGZ*N&YP;l4/2_)0<U6Focje8SAULQK(JQK=RP.QcuudGc;3<!,^QV0W,?n=:1Vt=qpEcsira6Gcm/>.
%kNH+7mV;,KE?i8sbuSnH(HHFhp"&NNEBCeUA%T/%jh*Y;'+6>";kDD=p<`hq'5us0:KJ@k]=gcj]R@*K^248`k5"C^2qZoqCP!+e
%ia;9.Cp5mGS#t5%F2<9h>>%NFm0j,%1V9*@DqTY8*jnq<;6J>d2Aau5BQdl8rZ\68Kj/$sa")+.ca(`flnm1<'8soM=$Oj$Tg75L
%=[-lA@k+@Z)%=7GA.DY_:LM`!\+nBK.\`cb9b'p*b`BL.$M](fp\'Naa7^IGR@JM$KFoA4[Hm]mRMoZoT?R:9:Q9*@T&!>BcGDi5
%l$*E=I!mk9Y["-Ah=@9',tnLR9keZ3]=5BTlLO:QgBCmP&GEOCNf!8h$gU9-?-&pU)S*8'm1a5ED^ogq4$"i*D]^;Q$HK'F?Mq!K
%<mIU])p=uq.oe_1ojGK&R`"6C6rlCAqOi#nfe_PI1Ru4DQ%REH-CS,J?g<X(FH?,_2TDt,U(tH)AD"ug<.;M<If!n=mTKq&0mWu\
%$C3&)"trC?m,lQ&Y^Eu,HABEe_o"p[ECmBPAt;_W^)OPNNMeE&$)PqdPoqdSgP(K(I@o`)WTHqKHKf[Ye$1/X^N'%;T3`;^Bsr=M
%M+nH\2sKRu(uJ@?._SRN'<8.rTC/==.F;jjW9*rQSsWqpC3t6mCq%lq_G88&>rj*AT:KNd%jrt;\%:8/:J]e6=nuo_FQAoNR'6co
%Fl2K8kH=&;TsQa:O5Yj<FLmqJ`9b<ZIX-0aRpaoQ3&9&B5D=Cjq(VoG\oa<HDsq+6IJ/-_mU9hlA/bCEr53d!>Wn$g)),+-kdf*;
%el;8G(.dfqS*UpY%S+N'=oL6[.[r-7jjl_Hj_X0F^The"0JkUD;ea6PO1+2iiUGdAo$+u>24S5II@PHY/YClQ:G'h-5<X5T4$51P
%^Kf*q!3q0MkaZr^Qn8<KmChV&Wrk`2G>jL3>o"OVAtj>1%,km?*c_c%%sJo=8aQTE5qdW@S8F%))E!f->lDiH[Y\0J^\ss"Pc[ZX
%VU5f4#!;WQ!B(;m2I,Il8i?5*V*H5@511)+0.':kA=g?Kh=Q!a'*81j'BjXX,1*riSXI@7dVQAFAN%R)L?0c&Q=d=\G%%bW`lE.V
%7Y+`dYF"Bnl=+o_'SirEljbePArDAtWJ;B?SW.aM\p1H;?:#GOH#jO2.7LT[Wn-MCV/Gq"5$c9IkDi\SQ917X(jZD?M#'D(b=/(.
%F-aSUhrC?%<%Q9gV4(p&loZAb]T%5/jt[ejg+TVJbMRCr/l*rt4FO"<i1&cGkG>_CAfdfMEAeaOc:`BE?0gTuTHAEXnuuXc_9#=3
%ED%p^`h"hID%]%XT'"\Q903Va>&6[SRDNCP7/KMhTV#8V1)hUoX`n7TaUDG4l#1-?Fr&TRp?M"ZhGJ/&C$Y@1?Nlu&V7A\Zm#Pn(
%C?^!'[$np00tWY8*b41%"k`2c[Ih%4Wq=Lrns0UNRL]_N3>+;.Xf]uiAZ.:8\rL0I6OX-6(FsR0]<gWO7V9)]g<IM(_0g$9nn`2!
%HFt52ju:l[T3(2/-%AEAUcnHAX-qe%L!.]VgYnX.iUgGQ.$YQM[e<[LN__OV*7U:O1HWuOR+k5?J=7CiOWR`aHkL^HOp!9F.Zjj[
%3=.6kcH+Ghr:;(N_.'>Jqko4DVq9olC=ug5Hn#i1/p)j";L[EU.'n!%\t%Glbhls\g?]hk[h9bpVFg9-R@!9qf\fR4N5f7-%h@BO
%j]ps5@6(eVX1ObI>=Z9Jm_SuiC2Um+Rc#?8C5na40b(RkgDnT<ErG28AfJjZKAlM$IAR#,`Vn'Z7skb.B@Q4s)J4eKnlOAJJPW2s
%)U08CS!>YH)"(oE#'0$tqWdkAo%\8br=bJcl;*qeD]+'/B<N_4,Fb)LSLbi.nCu3ur5R9\=<;>GZ0oV/jol%TAC0!WfB[!ICLFLj
%J]Y1k2H?A3N#b!;I^c6GCMTi#k\8Q;Q+?5[bhi-e1!%>S!OSDbW_Z=OrEd*G'u><I8M2YZbb(&jrs>NEX7E$4QtpuKpS;fM4[EH!
%JfSq!*(mn*O9qi;8<3e:HLAoi`qm\M;]EeR9S]8PpQ$Xc;(tqa$D[Qua3J[]HF^8&*.DN8N*ui=?[:XL?^uCXBY9@6:??.C^V2KC
%IGGCslO)@&7lZf(n1OD4IeK&^C4C\?[`^pc5?^'SndP;BYGbjW@l%=&iZ`Gg34,##C#XR6r0l@mloemO[jD=,FW\Hhg0B]O4W&rS
%*fadJagE,RgDVD9-3>nc3p*FV3iA<`Y0(;J`+Cd4,]E(F?2LU@lbr$2>*p,NQ(d<WB"%E]#^_9srUaU]qXtq6,eM_MSs[jjN*I*p
%Zt\/D:M)iA,2Df%eG<&:%S?#i*q&4"oBgVK("q9"_>Ikn3A\=^1q/oH^RJj(EW@q=2?XmWPt16\s*-H2&k(N'1UCG\*hL-jcSY3.
%jh4E<I<9S!1=>niW]>n[\a8VmL2OR.H@?Wq56lA^g!Ph*\LJ["Zodqd*aL:f0"&_pqa'+q/!*9SAiDLI^Na2IrJ'-LF*R:W8's2d
%Io*_+DY!2#WY]!^$h#BE/Au#njV>6<=`*>9_K!@Jo1PrF:GiK`R&c`;-o^9hRY03j8MkFa>V7&BnDa4\[Pl)7=&.(;lhUFk:,WDm
%g*YS+GAk[6=)X.%eM0Bf'9Z`5Bj/9WkQ#FhKB;3kTMkumOmWHG2K])"3Z?8mmiE+JV.[kbrj&'+?PHeR**+i+6'!f,lMAcJ['QHD
%dHMR"+*(m%'D+`>92D%]o9YX^`u<?QHNFsm1MCEQ\a=!18=.CV4#2R/pAB/X\ccW_7MaYeLE*I/)NQu?#oe;HI=FN-(+Fd=ROr)o
%2HG`L&=jsk33<Km>dpfJr^,kNE\Uc\BftLT$W""OW)5-OT0=<I]/+T\ZNo7[<Zg^64BW,5\@I"_DXaGV,&OD;gF/<YR*'<+NE&]$
%D/\EDi7gm'&`EW(o>9![plLag@]G=hWn3FF+>qp6qK8RC#[C@I"`5s653sU;BRG:&DWZ4.;<@6N1<6ds@',b3f":-j!3ql;>Uk@u
%XQ<24NQh?7DlH_\$?j`C)dOlUEOI_/1I__J\,L.%2^PI'SuL%'&D4%^Urf\-Z/"qal""^AQqDsVA)oH(B0T+&lAMWI0ESF;1<!gR
%4`qigXj.B)F$7.DZb!>Q:64gN2\jOKJ5X(l>sX'`U16?25V$RXB"4Arg8ge_\GB&KPDX6)$<n/UE8SSZnBrHu:kd=!R,tYE_p-$]
%W,OI.4e/leD6";?JSSJV"0;>a$VC"4a3r#BSL,*^[eoXf-q\DLiqr'$#PGT+gmG&'Jo16Y>n8!8B$-+F9&FN8fp+b\[Ansup\r`^
%pCNtSp,si'<nVf"FfN\i-1e:,2-r*lo&R&ZX)'YBK>DJ`p!R?F[G0oV=o5Jk6)du`j?E24Z.bHJ/5lE,)ESJD/ReQ:@_Pk?k7;0@
%(-@TET@?0(;Q7N;[(DpC8Y%FaM#?njC,EP-*,<`2&+6n22T>$+.b-Qd;T!NtIq`M-W=r9u[k@[dGL#%dQ\SX#Rt(A+7k-B>Rnom#
%8,?/`d<--TU"V'ar/pmfVFg<Sf%q<t%tcJ3o+48R2>Al4#QOFO/(pcAMI"X!,;r@ka&fHSn6oj\r[cijf%0B;=o'p)_V%BUF2p1&
%4>4t;T-a=i'CL](Hl27k_<3T4maF=H)Onc3;3\8CUbe5(a#LNmhd77IhA5TpEZ;V,5_'kMj.E\X"X`P7)a6qMqK=l#Bt`Mu8,27H
%iHF1&'L*;jT1EPhj'@TB[(D0&D-FUu%7$aqc2RfRWVHfT-g4p/bJ.W:@WQNoA>c>K1P`/NOS%4G%eq*Y.bkKY>[URZ:k%G!>SGZo
%T4fe&#u"k6;NErT-FS/Jn7!`S4_FS@quJA)>1.`1qOe@scH^\Y23j_]Hs)j+B*-oZ5BP7sKLbe)#fiR`/[4Qq_%pEkTHA/:EC3"X
%%e+VnlH$t&^n7[AEW6FgdEW2KZaQJWfFZG@pC7s+EOhWP/(q9#rQK_9EB%0i*g!b'dIb?BogF8fH+kuf3#uAJ?L$;3o1XFMl1M-H
%m@pOi=NoIFaB^2B%mRg\(419.")2UBl\uP.^95b3"PdN)?8*%Hc/ido#2`%&r%\/_^6+jdkd6;d;LNu5<@C"pnYL,bW!d;R^SYt!
%^RV,;iq17hKJY=um-*8O[Qo#>mXT>GI*6>r%=gtAqD=>*MY8[D4<d9+/>R)V%Gg\Jl0&HlV13D(k2'p)`WB/'/b&Y&$u8RGmH^=L
%S>Io-5.e51nGZhOM>ffZr'tL0N(p,QVFrSArpo>Q.[<5\5eO4(.^ceC_3O`+!ui2ol;*CVT>%2BB;0AiG'ggI`,Y80(&eA_Wt>Pc
%k``""";nET+au;&7%P;loabESU]r1;gSmJ&EL.S!^r=4_4.*ZTNQ_MUWR8]=7;AoCcq'.7bbe;PHi;XIjRMn_C?i+oPY0h-NMWKo
%Wq34JATofHg8:#G".d8mGWX>&2*A@>dZXdb.Dp%,WGlQEUnVG2R[Q6/?)M:-,s8'Sr:#P7/M+!lU_]$S+&YaS2Nc/-N9=-MMh.?s
%@CS1^>2F[59!&R\02lXJc%4Bae6=9-=WG"ED(eYCV07Xe>&*LY;b\:6D9::)E-da0IXC?USMhf&WUlU)N'4$j:QJ37HEVL[\ij#V
%WOq3hK2hZR3LIB205RL,)oYS;GrSo#^!*"[VA_P\Q.0U6j>GJUjK&6Y[GkEj5Vp%&5F``2mN6j>4mJZ\/I)/Pm@i;6@&l9A0A+h`
%9[g2:B%Hjsm?,fqfpV\Js2%<HY(*Enp=c-cgct"0^>=tMCKG;ZrlrX:Sc52NQL*M4mFD)p3ld$SB)rE_RAolRh]/G0qX7`ulMK6l
%hHrEt!F>u!=8gD"E"/`0N#_)5re&e[^p%'k*#Pa5SIA14J9T>X=ZE(/`Pb%:;JZlfh9Ojf/F>Zm&*14OG6V(YK&qR.PNVamh9.rA
%E;27S2/kH-2DT4d2>[W9]>`>djl,-/i/)A7_))8erS6EuHT:UNfY=b;5<(EdHPi9_??mM!AiH:c<U/dZ0Y4oB*F.61V?V*e2DVcl
%1/ig0'.7O6J$M4%G`nY$)8)J'hAn/m$sX4tDf%TH52Wg+#+M0KoMB;r%?#ppL/59;LF1kI_#3%Aeq\>p1GL_q4hNJ5%IOa]<Z^uV
%LUK,'a+b'tH>2TE^N2GX?$h#@.R-r+d*p8,mSNMhoJ2pd(Zk/-F*V[`4oE_JQDT.TG\3:J$nkU:BP\0^ki7Z]XjcJ0nDWltr:'O=
%b2%"kW64(SMRjY-k>0ODDc:-n,K&o4WKF1&o]_/o^.OI1m`f'uA2bEIA8UM&4L0=EYW-Z$*GpgA^HHIoh!;;'OdF>#Ruu"fdNV<$
%ObNV\B_jnR*S$:D)4c6a4/7Mkg!e>#OHH;non25NbKF@/[(P8N*3EcS4ke"qoT+uB/#BN8gr/WJg"]gL>J+jOa&ZO<mBPL>F*[+o
%4a/Z)gIQ1?<>Q-bR^(IJW5aV`Y7os\iJW8,I?f:&?X/lBj/ZXn1;5^&.#soW.bE^)[Gp<CF7ng-][OC$Ql$ch\=2>aj(;bD[Jt+g
%IiI0=Ces2/'.7"^XbgM:HYDDQ.ni`\qY)^74?7^DOIbIUCYP%o;iQ^W6@67(\Pm5R9V,PWMTO;K-qqA14eGF@f+4LOVM5j5VTd7`
%Ah(.cH8;m*]5L@`X%P0iH[2nSopjlgS9fNA&(2-EMlj?-^8n)s*h,,`HK08B,^m<c2jc48*3H)Rlh/tRs14SeT%`):Rh!UDC-)*t
%H9Jqtdh1'l8*edU5`TUUFnb_b(`glF"la4R3ET8"j^>d.3tNArjA1B>4e[Hg9[&7B7PPmuf_3rSRm.a:A8B.lM]FY`B6PoY@.i(+
%@m9Ngc#>j21;ObFKc8ji?(^Z9nam/A<t5Xgh&I7DA,1bgcuSJRjOERZfJV?)E>8p8M5SUR;"gOJ"Ba/:h8rC4q)L5^f?Yf?jluPJ
%7omn>gTiC8gM5_n]VD27e#uem\KQ)P]ecNX;\+G*SK'S7Hp#$>6[$)AQa>-GqJcJm7c2`cC\fnL)`H`C;O_@$9U1Gbf,LXMG_&)K
%EiUp4g1=5A><=4kh!/W1grO&<GePlD*EG+bSt^e,,p)U!`bq"]5&Ni:Ku^af[PA,Y+3mU+N*"@!AnIA+;]rdi=(]`-O3O*XiB/GJ
%Ad:80NEMZR=e<n$8(t;)q5_cno#^aLCo8,?bQXaDC2PKp<1Vcl/?R/3_oo<qfDG0oq5M?>h#,$6H#.rApfO!"3?HtCDltUq0Y+L:
%>+!Xn>qKl2N3=hgS8TPW/2XEPiPhdqh"0OBG3`m_Vn'@M=BqHA0=I=gBPDd*AU5e8`5pBCkYQ#nr:8XeUopnm1ST+kbnS<5&"/W:
%PP`SQ8F[9Ss6$:r[.j9Wh.R"pludJ_+PU^t0SY``Di]f]L2S^*%Q^0Rh#6'OEIRELXdh=3g[4q8:-+r\3dJs1S$uT,L$@QMC*=OV
%Ntm[-;jfspr8ha?jQ*;R4?NKY/T4^^O-]6X3pi3^bh2iNRL66"f#G.<R['qIdalS,`)pe4Lc0:Sq;'WnlKMee@J+3Ep96H#\?W9(
%)&mp+41Zj%et/V$f)"#<hd0Zg$r!`E*'R]259<lA2F_mCg)KYHf>ej-Q!sm5ZeF(P%9mJ7o/@Z43B%I<1?4jb`tqNU@k;c8[8>-1
%[LS@uI-W4CS(aGf&!,H_?+ANN;$5S-06<KUSb1M(lq[O@i&_bRDj*8dL$+S(r`C/m?!FshgV)iVGP4p9pMYE;Ehe,&-Q4"WC%gsB
%o[s0,oPUnJ.%\Z^EB(YAs0@'[IP>%F4uuf6hS2.^hAL)MVYVqn%`?3'\\m6kd@J11cMcSHGj0J2.!r3RF*)l8[!1"\S:*S%fCS?R
%lZ$A!pjTaBF>B.F^qeDjk2H='j?+FI5AAq,'Me>de^Nd.`9?RP_t-pnCuTWbSE6r7m`qsfG^,f0<q"@I*]Fn]%ju!.k:_OobmS^P
%*l$>=&(_WZlaqkoZ2%;_1,i/q^V%3p/mP6Ud_dc`ea3"Rh:9p0_<+bXY\(%L;%Hq#UsAG4X(M:n-@Ku8\60b^k,*7s3,q#,fA:Cd
%FnU30IF0JY#M8ArMi16K-cP\Rh1O_Ag@!hRm/HG@h/W78pT?B&[pKKO4*VX;FO4V9V8gMYZ)f;pT#uDVTN-G$^)3olofuN#kKgK"
%>&JN`?ECl,mWVE$hsR-*Qc+O7@dRUe@//mC\_Te>MS8lQj6lQ_nRLsseZ-d8Z.\F!dEG%e^:fAXl''sUXZ[\0::r\H+4fSHUZ#DP
%q)G!$cg@WBYr5\9$YsBnXRaehqQfUr1jAH[Em9s&lQ`1P8A-^o0'f@u@(n@0d[eDSW]4]ThCZr/H*B*Ogc`0XD)N_=lS-S!Ge9VT
%:Y(F%Xcu@X>"e+\j4;Jb=_Wp+h+,/pL;Z6`(MUK+%Y@:**DQ=U[O\0CX1OCe(\lHCoO(Lje^sJHfDh[_pitP52nsaH?[:;@pH?7&
%E:2I-:Fu?UaPgX*?0NlJ.Xdl.8tUHRTW_Yci:$!=qu6CnWV<fYkkOlel[?:(1$[qG6b"PQn]N2^iZGj-pDpYU@/.3Jqt1BqHfM63
%=bEl:H=*LRV&qn<A_99jMUd#[[;Pm7FeNc[%jm;AW5Fqt3Xm(-<9^I3dq6S5>1*'@*M;+<2Oh*hahIc.IOdS@K%D\t=FI+qK@u[K
%I"9$l=EWXf=\uN^pJud`T.`uiEHXl%Lh7L7e>bER0=u^ZJ3!A:=/PZXP9W5'R/PR1A:>s4SRT9;Cjl''Kcg)o<IO[aPdL8bF#)*C
%&j"fpB]$"EgGQcLI<b2QZN\:.e,<ZeoZh)-H*HGCEUCcGp$\JNnSNK.&!aP04@I^UmbtVcs7iJ7`HLF?Ed(cjr::.@Cu74lVaKbj
%-_+"Rlo'CTrEBf)^7t<K*n:,c=U2^uX[^!$H>GHF.X>D3qZA#a++!hpO7(\T/flZJEKD\/mBa7OatF6c`s801LMlUh]H/'6:EQ.n
%hF"UF215?HF4^3S-N\PE5/)WMF4g00]D@+!IeJlrT6O'Y-Caf'>8u5_dNA<eb`PPi(u2(@J&-V!I8]`BKWhb?^OJU'T0?j%o00k"
%Zj[WR1@q,teoS;mqd)*`D?1A!e&s4VA`0$BIJ)?--,.6\HXk\m'Z.UmZ;7q+J\L3+f]u>(;@dDO9!-*=Z*RU2]b3uSmh\ZerFX#u
%mXPqdpQOY5+O#;MqQBKp]`^+O4n&E$O?\6GpcI9jOa]k2Ih"WTlMOl#H$:mu]u0_RmelQ3r')Xp]-rfB?OE5h9Pl)Qo4P7XFk]?h
%`h$8V^VJ&H*l%^).=SiGp8uV%Ge:j<Ct(QDLr\tNp[)2Eh]iSspC:inRLXM4_lh&HIpdDMPtjs<YhGRer-DAQQ"$Y3q"XQ'="dTi
%m2maFGPomClE;8kHuGFE<;s4Er^VCPD!t?jULl_)3aFmt,&]YTi%?j6^Uejjkj7cOCAgp6R4`7q4CDi3c%K?gE5&*3bZZ*Pp@Te\
%1'h,9s)cZ/AFl^En4]s-:r0EKIa%>WGDm@:glL+%qZYRpr!cbUV<8q+5?pi2llZ8DqH2)4N16aVIla#Kr2F%Wd*91Pr5WKUoeL)#
%^"f]QWt('bm,tj<f(.b1G;ZiaK&?je+2s9ZiDOU`f??&Gcfm[onK2]LplFr(>YQ7_47j3)gi3/N_Ef<^OFA[I$i^mYn/_HGGl/_l
%^QjaB5odhXI=D#Srj<6.ScJK14qM[;I2>sN?hkf5jZZAZ9TYR6@!tm#dk]:OmffCG_VZ6oI8RpkIKi>O>,Mgf"H3qkFFXa-9SI1(
%@9.mrpf</u-0u(K`jLGR$@=:eNWS6EL59;jC&FrD#Eu5B8%j%+1n)3W>(coNUsbBYIBnAX>S'DmKIN`a(f)q7[HfHoOeu!D88BZ]
%mEPeK,#"i$iPra1ZJ@D;68rt$=(rC!l>G$"#[MWdg"F8"(JIq5J9)>32WQ1i-tbLfLU1DtACh\:`=OAhO-U9Q"X9-t%g=2Dr7ZFP
%lP/tIdr(XI@W.t!90jd05eFtkP,F:=^,Jgq*T8cMJO<Fj@tmqA1>uHZ$nbiFn_g;F:b>"JHV9_f_?C0*88D_>\&;W;'*_kHIm>(F
%-4F]&%jfSAIL6pH]#3f@$63$#E9I>*;b3Q*=qJKV,.n5EL2jTf*XS3q&B?"t?"dG76+m:TL(VPc%sSsd0L,gidaBZuPi"JkKS7S;
%#S'5Tm_D%H3M7n<T=P8p8b7`J9`f%&`jCp3Af3mCR?lb2A<[?O/jgjN$]Bs\LS'Np4+n%l3XkjfF)3;`,bbk?"t0a%U,PIE6P+>n
%pp9!;2*e"XF%3A>k^3qr5IV+VQlGhT_A&MqKlIE@>B8Pb%Z$-YEQhp`72BLFl`CJE#_Mko4Lq=Q(/1f]0Wg"``SFOi4:KLikq7?^
%_;3gf.(Fm5bekXl\dQDYgc[tA6TcKE-7$F$0tVUcV!28JE9nea?mFju%8P^KT9bVH/O@A^.hP*MLRm4\'*KIRmR.bN@2Kn1c/:FG
%,u#Kg4S+((6'.1ZP>hTE!GfKMJQB"=F8THl78V6b1(g=XD$X+6*/MKV&0s8WoRaHdJY<Yo"Pblq5`l$JO[D6eTE+M<+;S\;A.4,)
%0M`B+:5C;q:iM/Q85Kjk>7g:T,iOa%Cj*o#`:Y?/jE/neF-2U=JeZ<Q":5ZD&.i_QifXDWiuC?1*.NKoJ@cA,@ut#YiIhnGA\^=F
%S/F*?6J,;,LFfep/.A18$@u7\iYUes+sioqU((;7KM<q$E[X1VE[MO-"Mog8Xs,g,M#qJs7qIqJ8e%:#>73`6L*j4=%tY%j@R/EG
%dd:'k%S/K$d]-Y0iW'f(Tc?!Xa91F2"CaE2GipPu+;ThOb90r)h]U@]@0?Xk5fS].+>$D#&4fEkH13(:C^D?pTLoh30N\@n^4:)e
%8eXI/q?R-k'a[YQ^c)5t-qCP`XR$]n?BG9Y-V85I!Mgbk)@j"8:^+^0LP4diA0+?5e.C&I4:g'aY#llC9M!2U<T*'BPRE+nM+G%2
%N7BkE'+9@d%S1kc>R+C6)TaCdeMQJccYP#V8FoJGX9%@$CL:bkUn&:0m^g:#ZjpemJtl.q1P)mq&^a%g#uMU@"el[=V3sPQY[VhW
%q@KWVGRsEU:^s=75sQUrN#uF=,T`6]V&))q\I)1F,)U(AK-TD:+uK^lKHJGfR.^G/MfBGdK]=gn&\2^9;Zc9-^X;X$[^-gkO8cGY
%!\uXl5U&HVFp9#In:?@b!O\YaWP!'Sl<HaPV3.uL9h$JW%2a;Dp_`>tD(S87G(AWVNArA-$,ig&"bk+I';u%5E<q`4h'c-$7ohBa
%X184`OqT"_C(l+##Z.J+SJDAb-uuF\/d$d#nRdPS!D-s8#gPd%MY;m<fEeQ/,e4Id'/:?('4I5>!b_%R7[/(kgf"hP3QbfaZA?,I
%,`*(A\J9c-155r9?:k3M_lOUs`_]b3"FgIYj?3kj#Z`Pa`$:jm\dGhgW$,*gl;nZg!"&hf,Z&&LTK.Q[g3PcWoRKXfe3q`QA&*H"
%03Lc?"TrIa5;6L_CHSG,g'C)Tj<P>Y&<mJd5,#?(%FEE-U.gZi6n*)#!&]=mCN'ut=b)/L@U:<PgD(u7'T6G:U<'>ZBr"`kOt!H*
%,hO;A"+VP5q\g0f[P.-bTp#Z)*H>sSO,b2s6<@eGlB%*dbunKeK'&67l``hGNB\^[-igGdX&4fcS<=J8_\>DI'e&QAj;Xh15Tl68
%"O`D7EJH$N!KFA4.BqeF:]U@LlC#HAn#4ARZjfi/^bNm<JIkj^n1\f^..!7`W\>uC[\:Wl[ij_D(:'E_D9*qpI.099r;ZmL9j'Od
%SHVFnK2U*dr<`uGJiYAH/tnQ'/P+_?JA<cn(8Sg7$c7u>,FB$nTG>@i#:T$AA6B8,2F8Jq+VN"2-RdngTQGd;7+#$dJ>$Cb%m\4i
%arQHCN"e;+lT$>c^ekRJa37Y@a>gbb_b_L"$:2[7'u5Jt#=rqC8O.iMK:-OC-#d0i$UT-#,W5`;2(FL\C;DK$Bg2nD![A6njjJ^s
%d*?%/hei]\T5/3J7968eV'm]@K8:r;K09-+<=a,W!_X3e&10dG#oj=j+s7G>Kg]`#9Z)?/>+mMneeN-j+gG/Uk*"1.!\&s>'LXAj
%"X$iZ$OR!i(D'"`M/*i06OkIDARl,M'\4Fuj@7If5`mq]_1#5k!`CTs]Z<XE#\63/.tERE.iL]OGgU@S,P205NMSfL/<Ch0BKK2I
%NlI$#G^q6i_a=u[SmfhmUnc<0\!A0WSR`Kb+G;i_</`UT@]L,2%Z$e)c3R]CcAA"*##iNU*t[_gC'asF/jaX\[ADN;!]cnlRFNf9
%Y!(@H;H?$hAt28Okf!mE61MH.3P-%p"r)SEGnC<K-dujA&WdSFTj2R.7O[MWnZ9V4+;mW!&1/E4k9Z%=OaJr!]YN!V<+p,Y/"aUH
%dq%ql<jh\FJ5J;+>I9`nNBr)C(J-+n_/ON>_+<@T=RsH_OT:4_oXKjTMTFMp'^:\p`$=B_EL?A-aG<5s5RQ\4)CrrtM[9GRV"V'Y
%M%YL`K]lh_e5OKr?dO+"%=i_9]L!.2^(A9hWrtIjd[KTe.AuuE`,%g&bS#$dL`A-7iT1Y::#M$e'$Md5cnLc=JD#na@2GXfVF@S%
%^ur$"&PO\=>SSp%P]MZ``2KLqd$#e7#8fp2OI1Ua8Jr0$$3GeJO;>dBlRU>h/ih`+@6B4-0Id&-Z4IR0:>87,4<u2@JAj]g&3/`@
%+qSo-OQ#Ui7&7Kq)nCSh)%lbkeoepQ]T:=EZ64!NiJeai#tUMH`Ma,1AVhuQTfWc&8kZdY1PejT+KJp$'m^N,fhu!B&!B8jitY=?
%K9#I622U&'&D?h4!ufIl?OW.PGsV!4forqNF9W*+[F*k+5r&mH.fkn#a9a\r@;bb?:pIhTK`hJ;3+2r-0N):4+t'1!5\5'q87cFC
%)p,5E#?@j7M%5acOq.p%`E;NR"hG!G$:AIFlU]d,J0a\0"/o/qh#]H<B,<Cah1i2^%58%hl!sftS)41!FZFB1Ob8Ztf_Wl9]aS&U
%W.VXb!Z0q"'9NX>$^%8jBpf7eL!o3*i'bueM>$g>27',#o#&;"#LCn%m7KZ8AkdV+\fBi%0_1f%&:'k6f#rl2ZFk,V52p*8o=tP7
%1%5`VY?NJLnK8#qBbCjCC(jOYB#ZkC7YJdl$3;^iA*&:-/#'i)&;G1h$FtjA*OGsOUdo8eqA%;-#K$?U85`jb"2<gb8\h_+!^]?L
%'l\4ZYr`fQ(sDFNST8aI,-U1V(7-FR!Qrfd,7mtHdSB'ocUccCcH+.Qh`!fZ;_5d6-]o+^@aN;-2KDKR,_F*T@p`I7&KEiMlJ&(!
%#F53t!1=B=+LEC<D\!2^Y+1Wm@K?OdZf3oS/t2$D%ZI+sMo>`7(gb]!(Sum-=;M6BRYt/R_0nF@laX.Z_HK"?$3B'l*nj=*jTSct
%.K7:U.#,Xt`6mWK3t/b^qIh.;''QSC6ELf\OG]hi4u(tJNA]E8$HO#*[h#l(q2A#]ECsjm(L.MH21_F)FuE!@92#FJ#<o@P)/P+;
%?YZOHdk;O<[@g(S\1`eN)[8WJgFt<l#\)"_`"3a4#^g4m24LnX7ac':_+<=U>s_!g#6!N9/4`9>*"N2RC-:!)`!EpX8Y>Z0h"MO\
%lj^"OgG9S!]=qZ5><sI@EfR\i/?"p^.=`r8$o!7@r\gE;q&,.ab(90N?GWH2Y!51.Gqgud3U]+Q&Y20b?j:[b;V:RBdk-Gi"]NKG
%hpNA)jU:K9$d:OG2?pojH8.#3OL#:j,o&nk$/1%DQ;.Jr`'FK_?GRgQ(<5qa.j-,F+DDdHEFKk*l]cFsn;0mgWPT;_.qLlV:h\sN
%eoN;O,"ITD#F;2PZ6[@*OVUIdeQ1NpQn3DREMrc,$3"Z["NN1'2<t<?Sk]N!+HP3c/CQ5/^dAp;"Ti'daDP<l=?94H\Eu@n"bYAA
%QP<l8AdLCs9F9&OZ(Jum%>Vb0j*W[!EU/!dl.n8[HnQ.G*74Yi1'-kkR<Q_=j"M@^Sq1pl%2Fe\->C?tk]mGHQSIp@5k*,fDk)T+
%I#]35Xa"`),]NO@>oahQ_O`Sd=&,=pmS"(EDOD%"JV@Vcg9j^dJY?sK(D2_@eOUi$N%2b@$g%UtQpLseLm+a0/-o4W1DrGs=M"eR
%-Y(>!KeBkV3WB4e=_9f/]2r\K>;lK+PE[;UgA3#IAml6]!pboILcLa=,38n^r`mjcf$6dFc]EN*2#]LZjCQ5]!!7d*8PVo!gANhn
%[N`ff+:UsL/@;)j&5>:OCBN91X^rR\A'-!$#j"W;FNTp@-mg<ZUn`'F#pF9mQ;*a0^2FPFjSi?."H,:Uhp*PF(6_9B*m-1rJP\uc
%"JX\-nUuOfcoSu#3^g6&cEQNJ6>]s-6#Hl;kah?![KBX-d6J!d%S.\;%_)m9KqNtT7):L+rr?1E&V[0+X?E4BH\]a9FFguR(Cptb
%<G@Df\#)b4BAQOh)*rgo"sh92V_o$C]SA6+aGLcC!ZfbgR&Ms%X:("gSY<\L__M\U("H,KfeEo!,84fC$(u*]J3eD-I2_/'[O)2(
%8)Qa,)O#!G-3qGq'VS?:3WuV^#!>[$'!#pbe\>M#)f65R]g.3@;/RA-/.nf^Mj#?b1j]r4ll*mQ.9EED4k\L+eg\,:$VA/qJ;"](
%MSSqOA9;UG&YKjMO]UX'No:48m9uTH,&RCtLcAN&bkMU<Z2o?,Bd;@CYTo^h&hofY"6j`F4WoF*=sadoU#jWlGuiK=?Rbf+;G0oX
%5u[L.7_SlS%`BghNgbb#5ao]cOgC3"11<K(BpC@pm!U"Y^KAZ/o]iE[KY\EXlq"La"PP$CQ:HXdG,EX%O-hMR0T*/F=:#Y7d&#GE
%i<qXGbQ:.+8JVs[;"?kT(taKOV?Bn3:`5OBpqR1G2&5R64;6soN$:R\.Lb-%MS"FPCb&UA!p$]Ei0-f/<Bcp]f[%P-3L?o0,8<&M
%O,aCo?u]a`mF^r11cM<6,\:Nt<l;JF<[eZ?G)f-:%-De3(.qeLK(2\W@0"'q:k9:<d\64,8rf'f[Re\Qc6Y#%<hp:ofoS#*,gdph
%Q"fP(:i_.l:m136C8KW)7eL=F:k3<!,+[DPCW*$RYQ1G.3S->"WD3]64qrq6Am;/[XQZCX<IElCXj178'ZeZ3XHe^2E##s93i-XF
%6_J$+QEh^,j2/^L5U!P"!C`jc"qohd%V=_-Yc&"F(9Y4_#R6.P151eP)M^1Y,@CW^P]H..NtYf$+VkqS\WAG<"PVW_;n02JKOj4i
%7H71gqi%]fqBM@`)a]J2'[4UT6_b[8TY,54Lm\/6SO(%F$`;o)JnYXJ&kptG_b%pa-!7+0S1tQA@:6<%[P+2Yk$5O&Z]\??K?=aF
%I0`AZWoOOaB5eYkA!@KjQjBc>L@n'\=#Pnc`M%;0%];Tth_:l&7hkr90\`]X/*I-D@@t)dYVa_,KLePcSnoOW;\Rl>J2)6]"NJ;<
%m_BK/5jSWr6Q5?ZRA3VNRR>8cd^6,&`GhmPa=t"D&c!*m3"?+D%irl:a%S(I>!V1FE=.=2d0+#=/<,i`,4[GMH3]b5YW!?Yjd^FL
%9]4KYU;QESP5qJ.D6+=WIZc[+LGTQVj#6>\$*4^-\hK@$kD95_.)LQoOeb7X`\mr7ZiV^a+N5.j<GBht+JB&B,pie]1gjT?RNB?B
%TpSmr1bC*_Tj2<0eW<`@(+/U6LW3AOH.`p7F+b1of#5?@X;87[N3lj8>EkBC6)Y&/$S%%k7Te\\M^`To1]njh`#35f&nk-4=B(r@
%eV-8t!'m7*c;LN=%^%(VjO6"BL3qrC0!u*nXW+UGE0RS+EPQPJ8[KBub/aeUKQ%N9?j1=f81n2u'R5El;@.f28nqA5["6!-35H\*
%PR+$V:1FI5Ln"W_YkH"JTE?G+JAt,-pl06Te;,WQ/VOUM#a-[^Hn%,6Trk6A[VQQ!Gqn8rD:65MD[!'SBtN4j`HDsq7i]-A*30[M
%@Scfn!a#@+#95%2#0]sUj$)cL15Brdpm=&^TWkkdSJ$k[0QMhCCDWWl6*Dt?Z#7N/Xg'thL-&2BP'L^PL!6t=R),T`0Z@=!L&)KL
%On(5%%*AfCSe3;`\SW0=05r0a^C+F_/R/2g@B:=k%-0,NetI+_@hl;7Ck4Zc/CAE'1!.KKPY;krLQQKm3)M+,)2#SeNAVXEe@&6p
%"g'@E`g.d9(au8X5@2UUg^C@Me'3hSm7:Dg8>XsLEJ<34$uY0d`#:)j8mlaua2UXua^tme/$UE'KqcbhS&"=]Kj,=C?EE;mNqkS7
%ma%FX%mu6qXRZWK8CA=\U6U$l6l@LMd8RF)6%p#!=@?=.\PNTD@Ec[P,=]I#H@TF@&fk+2Ydt-_S?6NmQuY5k?lm?-;;`5t<ue<L
%j#^!NgUKur=?@kJ'U#Y.N/M&)QpZp,/X.c9Pen&``_,O;_SEeqDX2j,43*5+UYY9fFV<(92fZC6'j_4NOEOh=IF^aDNi][C/Od\8
%'bFDEUOAhQ7HOiAiNMrHd.FR)2?r#hBjVi^$F2>3LmMYj/$+L"L#fBN&.:c5d3t&PFJu]5e-,;A#TgSF8eMq=IO]Fu.9Jum/=(C!
%Il)s;P(`q61KidY96^LMLS`VX\hlGjHrIu#)trLoB]HnN)N!+;#V87$a/3YaVB!Yo?Vu`!(*d#%dRQ_<I2ER[Ke@!\SWh,o=JBT7
%.*t[0RE.%_+9O=8GbJsl;#)>f5RKPL)KN,d'RAfFPiiW]4Gn`>QB/T4,;+RPJ]KQtbj<h'NX/H9LNY0l:Y*As)*nO,<f!ErV]5um
%OLNc9$2gI=C+##s34(AR$g5mjU>g$Aaf`2cb2<l!dW;4o_/abo0Ye-<@6\W]8kS=DP&H6#;+WtZ"[X=HSoM'P:o8okY2CHt/ubYj
%Q]<Jq0ZM4S`@gh>_,kuD!F!8kd&A:'QA@N_,CM82C(LE)j4dfU?3ZQ&L6oA#N7#liU;9YR73IbN6isZTPdShS=_U,ZM),m3$llea
%'k8g&rFI*c0A]5lhb(LNUUUu;/@,"LJ0'BI'9F'JA.C/9j;^J-l.QZ6cuC\Npa.X!KdN\=^%dU-g6=J+XK7C0VM-_i:.`)-jc7P%
%?N_u9h;VX.QnI09?sBgj-OBt[GHNYJpAh=F)7bX6Le9oaqrsp)0!Oa`U+*B/)!eVHGNQ6%85Xt!"CkGq\'?7a?3\hY6X(&KmQOF"
%i?q]#?jmVPH=98hnI/eijoeI*h:b.@0Iroo-#>+dAE9p"L7T[ZZ44p6VKu!U=G!pM&lLMu=W1"Fa=/h)B1I0/L]N^nO`n10&;5C(
%@;E0cZ0'q4=O?X2JKWYoQ1&dq)\/Ar2'QuUQ__;$KiCK,!KIq]9H63lXXGMT_YMU5L);q9iAtn614K=9fqUs!CD/aW_1clT<sM._
%/4.26mM"6q3t.U/@@>2A&R$mNAc*Q3a_[b<UCq[XnZ:?c%,UY4Yqjj1'f.[tXj!'oO;SFI=*d]Z#6#qlE"e.p<N*$[73e)0ago+)
%a@W:aI@mL]^K;:^EBMd5JU@W\&]qQ01:!7>!3C#a!X5=K?(-XQ]OOYR;hR`7s$b7=O?UNSGKskl;jK$?U8q)<$%kBuBFb3U(i/V)
%ZkB/7&0+1NPU1d9q$I@j<60qN'&((3`1/qq6&]W=)I6ce$Yi)8E^bD:U+mX(&dQa'P=BmAFO?A(a7EtGl5;#0=cJ>NaVD.<gYT/Q
%H\2kEMNr#sFgG":R_0%3"\I8nYkRu*]<5BC4]SQ$Z%U&l(DTqr"H%)pFlbe9-\YrI8)6!g>)eM!$/0/]_C38&i?O7[5NqNZC;kQ\
%,2G`r'P4^YTlq-5V+ZQ.Y;.4RgZj+oDoPNAVC5R^^sC#EO.<&?F]Xq[&>?^[l)muni0W)`,0b[kEC6UrEjbkN)@l![d#\`B7AGmE
%2MgiDR(G)n/>8f]WaggUiB:O[XTads_DX:&rBb;9'fmNfOT6VO)dgiWDhFe#&qbj$<2B[0M6nCCAT+A9;?8Cm>f_b#g1u]Umr/Q1
%,d^RsE9,GlpZ*?Url#1.5rYEtoIufZ?%*0^G8Nn\]E;`o=]jis[3EE%S+*siRlA]]Ja^2:l#oSM0&b7$7bSfm=9U/6!l`6g$`!Kk
%.UJsW/;p*cE:oofF:;FmG%EL4pEeiCF].6BmJUs*<(N@GWQlt=3n8KHOLYb5```M4!KnY+n-Y-k,2@oIE(E8d%o"cp=)LGAcW7+N
%E?,EVF7%g=9Ah<hQ/rWQ'm-1rh'_ihNi=EUf<R>/&KE4XY0&.+pnj4bZF3;cM5@brgmiGa$`nA7Y`h'UF)#S`*n`&#.&=5&$,"WV
%Mg9p6!ZJ+_D;bUeDj:u=4:9l$66ik&==/2I"^Qrj/[\&1F<u3a>Mf$-'\n%+2^1eUKg&dt"`/9DPe^Nce7iRp@pL)1oL!`SMp1g<
%!07`<6Rsmr3h&2V;rC's&;71V,HN'Cq2@OA)tjcLUA?#lYFrI)jBF87Y(aQ/O1^E?R_HMP$W&'nbUQ@lMC?2V*%@f)_Pg-(g6*k[
%5p0ZMp&bsuN`H8D(p0-!s5Fa'&CSpj51'%k"N-laa.deuMA#[e0m*FkiH5T'RJW^=KoVLLTn)/@H`paE_VJ;VU%ZeE=NuiX,TT=Y
%%@]r)16X]OUTdFF4)^[R@n.TQ[_<85%b_(AlpV/dU4r<;\nHQO<=J1j.71/2;As'4E+;n3_Eo1/*&iH!omZVU4ua_M3fAnF"QWi3
%N9[n=M?<63"?]@if/@D1(DW2C!,tRIkf_=_#8lk8SP)C(U43m[9jr?q!577)"TW?M(R7X(Md%pCC*.i=FK:AfH:^&g8R!ZoXjUK`
%=30CX96+,$aa]AHP,Nou-BTC(MtJQh1;fC3MuH<7'AZ!oU,]$CXe`q?60N4mgLqY):42]d?=6%*Jc4a6P8Mj2mXYK^q2'VsS3nUh
%b6&AO;t!OSmN$?WJ6L-Mr%+n"6hDj]V$!r@I#O'g"'2:7Oi4C3)2Lggb!b[c'Xo5c1*a<`:IN$!FD7I'$1J+Md#Km)-l8!,!UZ&6
%X7"ubd_<SK[<OG5\8t@[2Ln/]Rg-3S7EudWFpUU_2-FpDX56?tC^msc_"^eG&<Q'H.30nJYmGA`T/#k"Yd);]No_O(C?]cpQj(oU
%7'5fk%n+JcSi\,L!Rp&`g#pXGV*r#(jepNe60-?/kq@r-=M%PIf#AlhV6LWP]R(IK5Sq8JN_IC)3HO9bRWJ5+M@P:Y;).HGas:'\
%$meDXR4]eh1"@`>G(eqr)f_"X"r0eN_/*`^C2'_GaTVu"eVi8>9-P4]k11p#&/J&^qOqI.k/r)=m,[r9_l=p>&>re0SQj,.L^Tru
%jebE*[iVKpeTM(Q;Gn48o<DX?q?f7*O9@2LbTucr"f]"mEneV/H\^=.()DQSM45?>%U-)UE>'gEFYHT^RP85[-4*tV5e<IE[s)gg
%Zqs6IB%DAbKJp9m"OE5Y_8AfHB:U(HnBh?uB6PX7=KZ:D(r--?Is;2%PDsS1>=-=5.3g>O!N))UZjD[b\7>cVb7Jk6Y,,+s?5p4.
%243`<Y+.e!T+E_Ka9QWML+\M4K_D*#;D=IB&>=)$EAI(kr:gU*b"qo%&!_=k@Mdu23<ItPGA`$i(;4g4_Xe\[!9:E0S4crTTe.8f
%Gk45rqlt6-(GfI7g`ku8V+[Y+_d30Mp;SM1B!6MjB[E'YTpUdKIn7l/^2FX(mXntj,6U:5F0W'5Y%;#/,"_od+a4$C=Dd6]IM#Me
%[u$@8mIGu+WfZDA^i3LKB2"DG83X\7P/TCIUGkLn4"-l>4WY0_K,%M:*m7/i'bhtKh1c*\"22#bIJO:X5G3>1.)%3#pE:sr.X_a0
%Q4ICA',:V\HoVu;])"\3=;"YCL7V5XI&qF(1D/onh1@R<mMZD$gsntn"Ps?ic02\Pjq;S"ArF@<MBFJMUV(O[-*p4V'gPTurUT0@
%,@7:QSt2ZD0gTO97%]#_i5/gGM0RrFGlmpaH36D^<uaJk!SsW0hdaLG>rJ=5P!8@O__cGVEQ27'!+#Aq<4dsM&pX#(gD:_Ol`=L`
%8d4oDJ@9kP'm/3B$Nc6&]\sRYV]dael*"2fdXY6nb_JQb=>c%R$8N)9LDK(\KMd#1DNjO.9MUgm_^kkBMJX-UT8`?tkXm9O`jq2>
%_L\Z:b$1*+<6p)7as;N_KI\DBk)Ojh"<ZB<R<lI*89?533/NPYb)k*4,>M90p4/qHCKlm4%O@6PV'UC<A$ELM3#>f7WgL74l1uB?
%&*pOI5UP2)]R:qsdOfqF'U#7ncE'GG=c!cIUcLb^A"fUg3A%HJ>]C3YUU.jPitCo4nl:H)Y:XS.4FJJ[GO*j(bSY9HC?EHHW4V3S
%2L^YmGigS>+?n5'!ajc)$TBtA'[V9...5B&i3Mp91sQBfUtnn0K8nk+'I`'R5/V?Gmk.lD',bhnWM)8KW0U'oTD%;rK.3n$nXbEn
%<aB,dL,i<Z1h95_)!bf5nM_E0_-FA<HcI\1NKU!DZhL!ZPo_A[*aLMg?q^ln1tTkqh73kuBcIl2f^@<%`-O@hlOdDfRgq\cCu-Ue
%&^$RLp8J_ta172PUQZs.W*L?T+U(!BE(NJ0Xr:3kdSMDd,nl&JH[WqPSbqUG5WO0%OC<s\^Y1'W`5.B^h1`f*I:+j=#U;87@6D7>
%WK>QLZX\*p7bQGsDJT(mq[B/e#:V/2@m7.j[;9_[B!5HIR4br[,m";X"(ta@,"A'?qDI]C>ofj:XV$FJe&pc2R*AfB4`09O8smha
%Y,/ba7N$A^j4gL/m'DArbf6m$GD#DX`Q4rhK(uIF+L!PVq.uDgGS`12X4&#D^rSsG%7ZP/H@sn,MkW>/dsf0J084="7bUj_\K!7+
%J>1]WB:@8jMQR+UD`ZShD.mGDW.g0UY/*)]0o>G@PmosO7q%UoZ!2lLCs,ER776t=CP7Qk#mt,4U5HS"%siB6(3(H31?l(`+]g;J
%O)_;Ws52P<Zs8ofj`r!KTdC3uUfm"hpRsJWKRaOH1Qt:d<\PQYLuQ2D4I:9ZYGs??A5ZRDpUAK%B3jB;F7Gr-<9D!]^Ief<*C(;T
%KP1V/YS)9,)T5?Nb4cOf*$kbjJ-nDVs0(pJpe2[m\WHToQiH+`M,:;=XW]pna/tfaNuq9[I!Ba758Ye?8&q=1!,:C`'^eq3$"m%:
%%gnY\65$k/;%_W/Fe@%LN1)m6m_^US5J?n"$m6XPo/)Dp/[N$HhGu*l*S5Yb&<@>G'?><@9c*^=b1/4IB$7HC[?S97)o4R),TLm0
%?X*P=5/u0!27>;oa[aRdXo]&RNToDCr"G'eE`Enac>QHs'8ZN2c@E3&[l(q#e"e=,8N0l"$&I=3BS*?[0G/Ku(WMAO1G`HjEY,d[
%=Gd9]dtFQm>8P(9'cI/Xs29%+/7AXdZSPpZrn7#\k/3DJE$M;A,m-Z4Bh1ZO"io/92MU5%bSAp>>h1].o"Yk%Or-rrM*Qk[Dd"7U
%G_7GBHuEl%=:_bW>&G9dlqd(em6J";:RPJlB!/:9?3=e\\:@qiSB`CYS7<oc=u@skFsWCRq-S#AG4%63[JTZoYJ6:fLiHZ*ht<]j
%TKT>jp1lXN&^];k_:W!QG5N_3]3A,4n]/sYDp/Ld;/nCh=UpI4`,;'+)3WHp\*hP`E?=g7X-\-:R*=%3m86i;#B9!<VH>;<V6flX
%R17>FkW;G("kDP-:/&_#?[":>XrYL[?A:8(d\^6uIAttUaPM>r&$:T<-Ipn?l9`[eJgn>TqU&1L`i7nRXR<":HM6k:Y#<q]%s)us
%Ygb(i^iB8O>c\5q:Wo=;2)M^(mHST3d]lPQgMBcKR8cr4d#WtZS3@!dp8FIi(PoA.#:Oc86;Si"oGo#Q',Ig-)DoWJ3(sD(C'RiQ
%lN?KPDeMu?a;'_M[:*ItX)J#QWP!@>(+i)N-o:tW_(b-UU7B(k5V$$\("fn(f7NcVL1OM68Mn>1FFcJDVOZpZ2X-;JQ;^0$,.!(5
%GIEW/_C#A=FLr<%J`6lBn%p>8=(k`X@X$YBeYUL0Rp[ji8Oc0t2tm`3-&@e`OPKM^mReh^eB?7^AI4)!,/NN2k?H1E.\>dC*.?n*
%!(&3J[6r-"9i-C6La0@h&@,H"NU/CY;SQ"@@>rqo/_RrTk6!ak(\PV81N2_S4KoRVG&&n@V*Y^7\%d)ADjY=!VpX>GST3r\<ht@R
%bAX?k"hfpGTHsT[lfgJ@;/!0Z-/f;HTtl%cIisoHH#X#T;GN<uk14En2$fhl+8n&i'85#,\'$tqOTFfsq'WIi1M1@q:GFGGp<@E'
%F-Ma]e[#$C0XV1t?sGCl.>3S@Dcp)*'/4b@-2`(_WuHCL`_BphMrX8[_Qf-AfB,q&@_I]sM9oOAcFGk6K";tK-@-:],h/[/cB[(2
%RDSb$58M9$:XC!IduDrHhb0LE];GE@?t=s0QOkH7P#fj!BpMP(AC]bncC#Z)U,"s;9SuG8_%]M!DAO4YV3o4:%p&'U4_P4h2Q(Y=
%8IrBPIip=BUMX-IT5Lfnc_57XP_X!P:g6Ji(oXrC[1\u>DA>ErS8O']OL4puIcu"%Ub*W4q+')a0%7ERO]Tih.[efM5PehfP/;`e
%%oJ'6fa*?n"[*@cEE1VMe#\KXXS3u";]Om^YOjLkXtsjZCu00Lh\Ir2'K1d-;'g9\B>Vb;-=rGJ5ncIt\lMCB!Jut6j;)C)*eqkH
%'D5"VOL-@c1H(4:M2We#,7J]&TsdV&#&U6HP\)Z7R7@LrmV>.M:OhLY^DFt!08n!Q$(T@EF>K(i6*E6_YGOob#g'JVYk\W\M9t(o
%N?T*W-0('13N2DcSTh(V9-pNW:IOFqQ%#/O/4AF*`s3a:X('>8gCsFt!l^h5D`R]X%&%Po8=gc+AL'0@,K8iRbHm3GM+M@4KMlN3
%#Ss9=>>tYt^;I">"rGLTOeiFa^_*XqNc^$t!/nF:pQ-g*<4Oli^O>M<Y4!Kj@'^okk_V;c&#^cu]?WgEDP9\U&F>GFNOWOfhWG?o
%S%.4ken9?t!KDa8N*$-h_N(Y?H0BrdQp>%:,@g757Nt)$V]Q]_"r"nkhr9qO:c!%(FHe?=$ltuLrN]rZdh7=YpK,>;Y%Ij(Wsf_n
%V3r;?[=_>F,24&H:L1#4j-Z,7`VFB,@3g0*<&U.&IeHm1i!>id0a+DH@jXd@<Wc^KE(@#<?A>pe;Cro;7J2JQAfc]3$O]e0<-h4c
%qsjuAo7Wh>b;OBp9nJTUW[1ofM+H%=PuSj`6n#(-@r'l">=S&AP_br!f]l#!#q)F"4h"!"-glqD$=ffd8kFYp-+Y)9oO@&$E_L+3
%,O/kE6_B28a/UZ5]#9r,!^`'Gi7PqlN=/HIhB3dkTUFNDRcIQc0>#S`cM5+nr=jO2H$H>qcH:AJ=pcdTmH/=nT)"2(=-54Ok0n"k
%R*3./=nHj>2$`:?H3cF,e:_q7@P5r'c\!M)'Y,dWM0u"?8gp9L*s*fdTr8q,2,![JJ'F#60k^gTCZgPVd?FDr4[0K^8K&M6ZI9nV
%Q`?uZ9HM(X.r,bAT9N%2p3fQF@]S,n=q7au9:+k2'Xh+f/8sDrOV&FB;cgjeEkZZp?XD\qcG<HM:[X^2@>E$5j&f4r'm7eRA89YY
%4aJgtV]ZJn[1\AC3P7gf)EG1Z*D4-'3DVsSC]!P$D]hqU`=M3?o>;LNKfKqGK2d:o\s.HDOut=F;XBtpZUikTg[1+]%q:5H4;2Yj
%>GBso`.#>;]Qk#Tjrl-g_>;q>pVH*mBDS:rO5N^.1FR0ii^L]+^0&OW@L_[?K^$iN*2cm'Z.h$a6F(;t=/A5;lZBK62'Ak=dD3e:
%=J>]5TnJ6m&JiI+r6L<'KSq8`\f6FGgrg<9@TQ"'fRT<%rW2(nAhrHV.j@[4\OjeQe$i0BoZt1OGD@TV`<dH=i)`TF^cZ.OA%D_d
%S6L/E0&7mWVBI2C8BNq=8Taik.%l1qI?EbH#(&m`\]9Ufo1mdkd`^jEA;es&N9)P#.@3V.=(IkLZZJ`Q((od^YcE/I1$kh&UpQom
%e^F@C='9Cp*V'p,6R<nW"L<+!YH9_gH;Am`c!:m5Ak8`)E"O`,?2SkISq7ZLTDHUdC`0pnB"39?Y$afl_greEcAl,agY$8G&kL6*
%%&Y)DYV^*7bZ.V,-(aDL*&_*1KFQI&`ghKH;sI=h:RLm""B`Soo":Ea'P-TN)]qchU>F_dWp4'/nP6kl`*H$]G[NF8dCYs>K*mg>
%j77>4l^]6M*ie1m;q@^$;a`LZYZkY2>T\Hgdk/N+s8-Jri$t/hO[aHiTu'd'R%W.R`Zu@RZ.#;*/RhgNDO'V=:^7Ui5)YLFHKFCL
%YqmJU_;1:12b2HF$I?,KDcB/1-<h3]U[mJR95QYe4KXPMX!H+C(47p).YJ,-QkE1)2J\0jX[p0E.GMqkYW^/g^\>?-Ai1JLk8G3j
%0@\IqfTZi9cJ\mXLChI)%OXZ<$[$R''L;_C^cH&:j4T5jkHpH.;\+`J=Ie`d/<SF<<j*e'-UCm_7U0,8F'iPu"L6YaB0o078XrC_
%V+jL:YV!c,rmpOdV70%#M?/S<\l@?-kcD!b_'IoS*CYLYFbZ[1;l>V`9(miKr^o!PBN1=P9;*C6ghM][J[1TaIBQRthHL:diG#le
%'3F^VEp-!P&rSr<8:DgS$U'IZ0M0GV$0hjoEep938Y,G<U-!\%j'\>uWW"IMYsIh/a&'45daa+NT81[Nq&p7)$8U1'$4T@/b0\Y,
%8R&-,fqNkmC^YcMc>j,j1L0Hsh,ta'%`@XH@WKit@1T(W3>`f,[<nit8"$NF(/UcTnBBc=IoBm@LF&LP[8-J$-MsKAf-?$bUg6a5
%&PpfZp]I485.nRV3N(^pET'HH8m1)]!1n`+*'fe-OY7Oc!@Yek]hSLdodO<HS,Z<qDV=Q7AgIGnEU'auJ3AO5SC^O>]XO!4AMi!X
%IDjF&!"P8g]7Ltpbq\-](T^)p3bn2<Jl<EPC=!H^'&4/Yj!\c+ALduQ.,)>Q3A]6&osBbtJ?j>#Vjc7gi/(I?7oY8a:h@gTjeOD#
%!YY!GQ"`fe(s!jX?$RE20*RY6F;AXjl.M0_#o?:H$Iotl?\DGf;AR+$121@.9]cW7;C)c/c/IDeM.6e;Db1f.PV<DD>dDH^6OaLM
%P#+ptJQWSL;\lC-3a@ApHBbIbLaq>UM\ZOG2rRs$JTl&"9cn@Q'li&HI#MU9<[77aTA*tbAoTBi<D\7[SSFE!1&Tai18ZibI*%+5
%+o=+jo\)Z'`_D(qk&lC6=*iNe\h[UDkPf-Aak"'((kfO=QF,FQ70"5Y.>HT!>LCD#hL,5kchAZqf/t2ooHR'02hAq&emj,I$(-+N
%YOuPM;E<Q6rBY4E_2jeb0Dj(>OhD6?AWGuZWHAn4dpFZ",2spXjOCG&m[%n3!)b4MBR]=^9pZp7?[<<&5PnF?D;p_<_-%u4'W(,t
%%PW0%q_H'#on&WIF*53]KI#SUF&n2/:5t7O^hmfD@B>1UC=\)#L@o)2=kg4d^u;)8bt4Zd.#EuHnpG5`5=E!9&M!T"BH1<LRq[Is
%V=g@s8[oVtb./&5IO&[&`#^u1[p%:mAFi)qi-/h%pcK<PXk^doM6FHC'T-&*F)N@,7'lbQIK,Cb(uY_=NW5sb2Tl&iE)]qU)I!)s
%p_=0];6oG"[K>S7^)QpP$4Xir."I0"\8K7?9t,k2^?(aPUr?mpN"E2nK%<JI2a)<#5[%?8nC_%;Xg5dC:VL%BQXf/>Vamdk`i*u9
%^S)NJ9KD4%Ys&Rl7i$F$qn[-mk,Ur<j%APfq**9@J^--;^7-2qNOIlC8^<BOAFeK1>SD'l=3)+>m2Q^s988Q=A\,%1eU4E*)^Isf
%Uh<M_FgE+@fh):$]q(^"(5.:^#E!Oobo0?]=ra8*aNbRL\RS4phJs:GfcugcRZ$7L-n/T^7>nsQd'#qRK)f.&GD5n0;k@41PcN8<
%G?$oE&me;NHB[O<!Y[,P9)n+rBNMEJB,FTGm'kJUT16:""NlYFKFa,k0:FEMq+2G7<4?Qm,YgChGC0K#jno!94]g?@/V"Pa:5]8b
%)B:ZSp>Gk!cEp\fItI%7C&81CI<D2V^t`'M62rDDG7O;[+752`rS43<ZOaLiB)p`8c.q!ZI)?%M3XnsqN4+dfU)klEgAlc+:k@q$
%TV:SS@LJ8,D!7YR,)8clCKtiaBaXDT"7.<KRmn-J&ll_L8YYWQHBMTr(g1*@Ce[*SV(NKaQ%U1Rf=E5-MdV<*;N&$ton*!,!_\cF
%'QXEi&8cn.@crPC+pl?Y6tG6R;pl;a&<tI*ZVS@pe=s)pq0`%VAL6pJ_CJ-f#Co,+/(aq0#I%/6TugqP>Qo(dr70^\V-Z>g6k](Z
%njk'kMou)J6fr4k/EW*9k%('Drr-Xj7=1TVp_o'fD/ql\f2H0FUdEBES#=k)@;j94mndKfgG&ZP2unM:QcRNiC@CL#A$;3\$lBm=
%-`M+-(WjadTiTd0MsJ-(-<0;jiB02n]@ndfP)uq0JrqSZ26N]9L)Eo%H^QDF9V%7Qe2#>5&:aaJIE/*>=Nu.NDbX`9_ba$EkKOW7
%JBC;tpQJ66)+X+^m+h\g4JeuO@Ugl+#k:oCB^"D\<fe6^_+6kFm0]A!4W#@C&S$5r/G]B-P".5J4q^`;+>(*SI<&Jg3!(48-G/j-
%`]0<cle>,J-lhCr&X-/'/,nisfMu+i0VhiTJS\/"GN>jo8H!T%p]t#K<:<RT0ta3tP?L+YEZbfK6gorTp?#6l7FmJBj;hRLJ&i0r
%"[XJ78oK?.7[[50&,*i+Q!)oR)*[bIgV-S-V1WeZ?#ZN%h&MEqnU]+jjdI$')sSUbW$C7V9C5u#5A<'"%.0o_<kTkV([2-keMGu.
%h8^]gju,$tq$il75l^0<RX>M<^/r@H6XndaGM2f6^O0g8/u]N^>!+gr\3C?>AAnhF-E.N#\F!fV*79cYD3)mjptgMi?gURn=s;9d
%70k9KZK<Wc3F]ddb]ME7Ri[ju6U\DheNoQ8J_?=l"$1/\eZS_ASo6<0V)Wddc$;lckU8(H0Bsqt&_iN=#9eLaa)LclDel`(gKWpF
%@pOJ#.3Ct)VdN5_lDpej8H'^b7?]GJOnI['S?*K(eZns,7O0S#cXV?>haq4YC<rYb=n84S.:F5u*+#,(aWXUR]Hc598<am1$VMi+
%Yt,E9'JF[lh;+;EW*#luAuI/6V"i`0!k&-aMCn\Cl@DZBL81PVe5qk$rNfXUfJpr1g?C$k2H5Is>g)ZZ?'TApg5F,="V!NAZ:;S9
%FX6)d`=c*J.KNGg8<5#hW3A#c&)()6[O'*!QUXjBRO=Jb#2Ss'Da+*2gLl<Ee4A:KIEM8O:3(G_H6bH;Q-Ge\g1EAXaKCO!(*s@'
%p];qO<+LqL#oq3ta?!D28L9!kZ/.Z:dFp[Y\u!>"L(SNP;)En[.47J;,MDXh%qQiYarHssVr>p.JnMgnk&5^VP`8qVE?7]/TUoXl
%oNT<,`?)9)&D*L"ZFu!/DX5$`r$9KrFJcDfI7$!TcJWNZf<ef+)!si]n6r'PK'Dd/l2<Dk%`:VIAj"nn8pC'L]ZU367e<iQkoT;a
%'I[N0^-@kPqm+iIM<lu+=dH1XJpW`Z6mUU8*m8HA:auiqK]Og_>i.,5\64u7_HYd&3.WZgNP+73F\[+7Ql0Ot^ULAH`e/AJ[+)Cd
%Z/0Ic6$k'FW71BmM5_d/YY.#C#&>aTqKPf&R5W^VHQbqW2t_EaU?>F=SXc)PH8.48&`&KRhr1V^-L$L*J[4UDp.$J?6fin_du]UN
%0=o-qq&#h5p5C1cRcQ7oVF=_4a&4(BQ?mC3C6SUlX.Be'L.]uKfWCY(;Z##u^-;nXSHo[bWA<h&JiLHG$#5Pu?;Gp[o+[[)]n\/>
%]"Zd"d5RgTDO#e:dK^or2iCD"-@P[bVD#8kSJ^99'o'I#pgC3s!FfNUB-(8=SV3=\F&6I_>H%;QZ\$GJA<B7DlM@COq'8(OX#,cS
%Yt:g&>lY[G7d&4`AeKWfHL)oIKfTV_).f&RbUBEA+IN!s^JddGGSS]GZqCa;?1i>#V9/n8g.l_BKbr=WNlSV"0[`XoO&0AT#0/ZT
%=l>r3__rRdjjQs"(4N]:BM2tR<E88JU'4@[05AX7QkF]<EFnr1>O5iN4.qjNVW;&AXrM4[j^_&SS$qYNg0#]KU_m.<!,B=XDb8.M
%S'ClUWDL'J3F<Fj2bEA.o@SV4p6h&;[9BBVUHMY<-n(lSDo>+n-+\YRAPE'X6h"T%#qT!VI5^)!;TgPT4u56ofEkV>Widm@pYh_7
%)=\PVT9U-nWOH9MMid/LCO7m^ll=a[m3egN/otQBZL0nLq+M:k"Q>\G<ES+e(//"CNj;ZQSMY%8dG_,TT5DDG!->[L.*XV4Uk*OO
%`4&6\q+X+]%':;Ja<eV8UWNI:]3@%L6n?C_fob=\?h`B_LWPm`F:Bnb%j(.sY8Jo#jW4sBlQSa=MLmTGrM\pM5Gqa%;3)Pfj_?!e
%iY9Z23M!UcCruG-++pjbHi(_5en=oR35.XlR2D9PoiDr9.VIW[bAb+/s&OXlPN?D4*U;&'E1o?a`[Xn)+UDr>.Ti7<4X'pWBC?PQ
%Z@#C$fn"^SNCjP2nl>#=bXD#-h7^!up:CDsUp.^;'j9$5%:g-t7n&e,a-R&7B^q&Ab4Z^tn>rq<@lbE(U.:!;-gSXOF3((HK8VDk
%l*&H`ngUSsHV$6;jd:FRIu9E-3lY8;C>&Xo0ZnV?-rn5WPQ>%%LF(7]Oq\!:+[,4bW2q)_DaueBV7MOFSb)b.71bn-p=/A@qEXN\
%c;(OD)uRrr^KO,s`?dp>>,F[_"Js3]adlOgA^r;WHICBJp9^<*L&rQ89'eVlQ"i=`(6YbPjGf/p-q7_"RNaPB$4!e[>[Shk>q'c^
%ogpAcE#LNcL9R`2-HNY?mAD(B/h,>V8abMj.nQDACl@t>OEUjRSEq.'8llL0]!`oVRf2sRe[#3e[_@#I%!n7WXicM!/<tHI,btKY
%Hgt7$"BG1IGF+[K3'1jFH:j?KETrK_YYkLON9mZU8!67EC2Bf;cW[O3!Wat)S(IA@5\a.jLHR-E&jt-U+4ZXj9>G>!ks1n&UEU6k
%LTt)M[97NC(EHnW?F9%3q#id@+;C5^\_#Dg6fL](^S71'ZN^Y*$/K;-l^[Bi.pF.']OiGt%2o3bea^dABg?(e%$NaJnIQ`Q\V@8T
%5s&HP<,Xq`rp$-4p8;5Hl$W>c^\ma$J,],EIePe)Z+p:MnLqZUq;6Yqj8XQ,jYsr"%=Im\5Q:<N++O+V5Q:9G0>IM::Oi62Im/AY
%n`QP7f095dlT]gol'K_GqX6ZJo(gb,rr%oXM\4`dDtrb4hu<T3rq]^r%h:hr5l~>
%AI9_PrivateDataEnd
