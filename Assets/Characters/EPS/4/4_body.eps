%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 4_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 72 104
%%HiResBoundingBox: 0 0 71.9030 103.0932
%%CropBox: 0 0 71.9030 103.0932
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:29:21+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:29:21+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:29:21+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qg9X1jS9G02fU9UuY&#xA;7OwtV5z3Ep4qo6feTsANycVeJ+Yv+cjNXvFf/BukRxWAqF1zWWaONgNi0VuhEhHcMT81xpTQ5vI9&#xA;V/Ma/uLt7zVvOmsXepHp+i5jaQR+0aR0T6RTHZO/QJGdZ8pXty0+sWeq6veSmsl9ezvJM30qy1+n&#xA;DsgmXeE+0HXNOspVHlLzVf6BeKapaTSuIGI6K8cn7th7GvyxoLchzFvRdN/5yR82+Wp4rPzzpEeo&#xA;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&#xA;XYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c3e1f62c-7752-164a-b484-8bcf86992ea4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c3e1f62c-7752-164a-b484-8bcf86992ea4</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:26596d96-37df-4fbc-9705-6a00b35527e6</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3e1f62c-7752-164a-b484-8bcf86992ea4</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:29:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>43.789067</stDim:w>
            <stDim:h>43.051119</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -103.093 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 103.093 li
71.9029 103.093 li
71.9029 0 li
cp
clp
70.2078 22.8082 mo
69.6336 18.6153 68.3279 14.8355 64.8494 12.2291 cv
64.7742 12.1724 64.6931 12.1212 64.617 12.065 cv
64.5262 11.8092 64.4012 11.5748 64.2351 11.3824 cv
60.5828 7.12117 54.993 4.99031 49.5574 4.13582 cv
49.5476 4.13484 49.5398 4.13582 49.531 4.13435 cv
45.7596 -.434492 32.8621 2.53963 28.6775 3.48348 cv
20.8582 5.24764 9.94901 8.57674 5.04667 15.4742 cv
-.456263 23.2174 5.35917 32.5728 6.68436 40.7042 cv
7.59452 46.2877 8.43534 51.8834 9.31034 57.4727 cv
10.0408 62.1402 10.1414 67.4263 12.1531 71.7481 cv
11.8963 71.8316 11.6414 71.9439 11.3963 72.1207 cv
8.81522 73.9859 6.85819 76.3004 5.60135 79.0084 cv
1.82792 85.1661 .961706 92.3638 8.52225 97.3926 cv
13.0994 100.438 19.0877 100.021 24.3523 100.358 cv
30.4803 100.752 36.7078 101.374 42.8367 100.72 cv
45.7273 100.412 48.7332 99.086 51.5857 98.9771 cv
54.1736 98.878 56.3513 100.326 58.8357 99.0406 cv
63.0232 96.8751 61.6902 90.2823 61.4461 86.5308 cv
61.0476 80.4219 60.4822 74.5655 61.3015 68.5445 cv
63.865 61.8238 65.3611 54.5606 66.5838 47.546 cv
70.6687 40.4888 71.198 30.0518 70.2078 22.8082 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.972549 .972549 .858824 rgb
f
55.1424 86.2652 mo
55.0945 86.2833 55.0457 86.2979 55.0008 86.3189 cv
54.1404 85.8048 53.1619 85.3941 52.1336 85.0489 cv
52.4412 85.0274 52.743 84.8951 52.9939 84.7091 cv
53.4783 84.7012 53.948 84.689 54.4197 84.6456 cv
54.6004 85.2281 54.8347 85.7769 55.1424 86.2652 cv
cp
63.1463 58.8087 mo
63.365 58.2271 63.3875 57.6646 63.2537 57.1231 cv
64.0232 55.7061 64.7508 54.5963 64.1834 52.9249 cv
64.1863 52.8243 64.1922 52.7247 64.1834 52.6197 cv
63.9119 49.3707 60.6404 48.6192 57.9002 48.5592 cv
57.1375 48.5426 56.5096 48.9298 56.075 49.4957 cv
55.6306 49.4044 55.1678 49.336 54.6717 49.2999 cv
54.6648 49.2994 54.6599 49.3004 54.6541 49.2999 cv
53.326 48.8551 51.8758 48.5743 50.2244 48.5069 cv
46.8074 48.3677 43.4607 48.4659 40.0525 48.0513 cv
37.0623 47.6881 34.2234 47.003 31.2098 47.3707 cv
30.1961 47.4947 30.3445 48.939 31.3465 48.9351 cv
35.9851 48.9176 40.7361 50.9156 45.3621 51.5089 cv
46.7088 51.6812 48.1404 51.7794 49.5506 51.9385 cv
49.3445 52.7476 49.5457 53.6392 50.3963 54.2994 cv
50.7097 54.5426 51.0271 54.7579 51.3474 54.96 cv
49.6404 54.6993 48.5447 56.3458 48.7439 57.7911 cv
47.2586 57.7095 45.7693 57.7467 44.2693 58.0225 cv
43.7332 58.1212 43.3367 58.38 43.0574 58.7105 cv
35.1453 56.5914 27.407 54.2457 20.1717 50.0733 cv
20.1678 50.0865 20.1639 50.1002 20.159 50.1134 cv
18.6834 49.4512 16.9607 51.4151 18.4646 52.7344 cv
20.5447 54.5582 22.8064 56.0552 25.1892 57.3428 cv
25.2889 57.5904 25.4695 57.8155 25.7625 57.9747 cv
27.9949 59.19 30.2098 60.0382 32.618 60.6583 cv
32.7722 60.7164 32.9246 60.7779 33.0799 60.8355 cv
37.1531 62.3448 41.4978 63.9991 45.8465 64.9444 cv
45.7537 64.9781 45.6443 65.0074 45.5594 65.0425 cv
45.3982 65.1099 45.281 65.2174 45.1863 65.3389 cv
42.5467 65.4473 39.1853 65.5025 36.9187 64.483 cv
36.8777 64.3511 36.7859 64.2359 36.6131 64.1749 cv
35.9295 63.9332 li
35.076 63.6314 34.2263 64.4874 34.7713 65.3121 cv
36.8211 68.4156 40.8953 68.3214 44.2752 68.6441 cv
46.7752 68.8829 49.3025 69.0782 51.8133 69.0323 cv
51.8318 69.3482 51.9412 69.6812 52.2029 70.0186 cv
52.4822 70.3795 52.8152 70.6622 53.1746 70.8839 cv
52.9597 71.2232 52.8494 71.629 52.8855 72.0455 cv
49.9236 71.3233 47.0144 71.378 43.9168 71.2872 cv
40.281 71.1812 36.6746 70.7105 33.0398 70.5909 cv
31.8455 70.5513 31.5476 72.4752 32.6287 72.8843 cv
38.3816 75.0655 44.4099 74.4669 50.3699 75.1212 cv
51.0193 75.2799 51.6697 75.4361 52.3191 75.5943 cv
51.3777 75.5782 50.408 75.6353 49.4012 75.7623 cv
45.0935 76.3048 41.493 73.8057 37.2742 75.7022 cv
36.4168 76.0875 36.3064 77.2896 37.1863 77.731 cv
38.5252 78.4029 40.0594 79.2427 41.6277 79.9508 cv
41.8279 80.293 42.1805 80.5528 42.7117 80.6217 cv
43.0066 80.6597 43.3015 80.7008 43.5965 80.7393 cv
44.4353 81.0289 45.2654 81.2506 46.0623 81.3443 cv
46.1336 81.3526 46.201 81.3541 46.2722 81.3614 cv
46.3084 81.399 46.3455 81.4371 46.3826 81.4747 cv
46.3875 81.6558 46.4168 81.8428 46.4822 82.0338 cv
46.7625 82.8497 47.2049 83.4996 47.7693 84.0386 cv
45.4578 83.7008 43.1726 83.6124 41.3738 83.6622 cv
39.9881 83.7003 38.6961 84.0255 37.4246 84.4302 cv
36.3504 84.6783 35.2644 85.0841 34.2137 85.1353 cv
30.3025 85.3258 28.2517 82.3365 24.7527 81.3843 cv
18.5496 79.6968 12.8113 83.4508 7.12479 85.2437 cv
5.32792 85.8101 6.18241 88.1876 7.79862 88.2349 cv
11.1707 88.3341 14.0838 87.4967 17.3387 86.775 cv
17.7312 86.6881 18.0916 86.6324 18.4519 86.5772 cv
18.3631 87.1285 18.5447 87.7115 19.0906 88.0933 cv
20.9998 89.7393 23.4607 90.6739 26.0525 91.0821 cv
25.7937 91.2911 25.5701 91.5689 25.4139 91.9439 cv
25.4148 91.9713 25.4158 91.9981 25.4168 92.0255 cv
25.3377 92.1417 25.2742 92.2584 25.2156 92.3751 cv
21.7459 94.7657 17.3689 93.7593 13.3904 94.337 cv
11.8318 94.5631 11.2244 96.8082 12.8211 97.5074 cv
12.9471 97.5626 13.073 97.6177 13.199 97.6724 cv
13.3181 97.7247 13.4373 97.755 13.5564 97.7759 cv
18.3455 99.3419 28.7527 99.2852 29.8162 93.3643 cv
29.9676 92.522 29.6453 91.8135 29.116 91.3267 cv
31.0476 91.3399 32.9627 91.1075 34.6951 90.6846 cv
38.6502 89.7183 41.781 88.7545 45.9783 89.4258 cv
46.8933 89.5723 47.8387 89.8092 48.7967 90.0611 cv
45.5262 89.649 42.743 90.085 39.2801 90.7628 cv
37.991 91.0157 37.1873 92.668 38.3787 93.6187 cv
38.7908 93.9776 39.2342 94.2955 39.6931 94.5899 cv
38.2654 94.2149 36.7527 94.085 35.8894 94.0914 cv
34.0623 94.1041 33.8426 96.0958 34.6912 97.2486 cv
34.6609 97.2418 34.6287 97.2379 34.5984 97.2305 cv
33.0281 96.8458 32.2371 99.3013 33.7273 99.9293 cv
35.241 100.567 36.8513 100.872 38.4969 100.754 cv
39.1336 100.708 39.8953 100.583 40.6189 100.348 cv
40.9627 100.74 41.3963 101.052 41.908 101.217 cv
42.5262 101.417 43.1482 101.46 43.7635 101.213 cv
44.5164 100.911 45.2635 100.25 45.3152 99.3907 cv
45.3748 98.376 44.8816 97.1392 43.6873 97.0284 cv
43.5076 97.0118 43.3055 96.9898 43.1209 96.9962 cv
42.8709 96.0382 41.9217 95.3692 40.743 94.9219 cv
41.1443 94.8409 41.492 94.545 41.4314 94.1226 cv
43.491 94.0826 45.5242 93.7071 47.5945 94.1568 cv
49.4597 94.5626 51.9519 94.8194 54.1619 95.3717 cv
53.6531 95.5933 53.1726 95.817 52.7508 96.0103 cv
50.2644 97.149 51.6326 100.484 54.1971 99.9029 cv
55.1609 99.6846 56.0164 99.3829 56.8113 98.9971 cv
57.4373 98.8575 58.0437 98.8448 58.5672 99.1485 cv
59.7224 99.8194 60.7293 99.0513 61.0955 98.0338 cv
61.3387 97.8795 61.576 97.7012 61.8103 97.4776 cv
62.6258 96.6954 62.7049 95.3926 62.3875 94.3741 cv
62.1482 93.608 61.6316 92.9864 60.9617 92.5562 cv
60.7742 92.4356 60.5779 92.337 60.3767 92.2564 cv
59.6912 91.7784 58.7947 91.5733 58.0096 91.9258 cv
57.7869 92.0259 57.5789 92.1334 57.3806 92.2554 cv
56.3006 91.8008 55.1824 91.4376 54.0408 91.1373 cv
54.8387 91.19 55.6248 91.1632 56.3885 91.004 cv
56.7019 90.9385 56.9812 90.7945 57.2137 90.605 cv
57.9285 90.8013 58.6287 91.0504 59.3113 91.3648 cv
61.368 92.2423 63.7263 89.8336 62.2283 87.8912 cv
61.8045 87.3414 61.408 86.7925 61.0252 86.2398 cv
61.4412 84.8785 61.0789 83.5342 60.406 82.2462 cv
61.574 81.2447 61.9685 79.2559 60.5115 78.2423 cv
59.7176 77.6905 58.9187 77.2442 58.1111 76.8746 cv
58.3592 76.9215 58.6053 76.9766 58.8543 77.0206 cv
60.4607 77.3033 61.6668 75.1622 60.409 74.0518 cv
60.4685 73.96 60.5291 73.8677 60.576 73.7642 cv
60.9441 72.9805 61.2986 72.191 61.6404 71.3956 cv
61.6248 71.3926 61.6092 71.3897 61.5935 71.3873 cv
62.2722 70.0137 61.3943 68.6295 60.1912 68.1055 cv
60.0486 67.6461 59.9646 67.2652 60.0437 67.1319 cv
60.7918 65.8717 59.492 64.6895 58.3221 64.6573 cv
57.0213 64.6207 55.7215 64.671 54.4217 64.7535 cv
53.698 64.5342 52.9109 64.3941 52.1082 64.316 cv
52.3738 63.7989 52.45 63.191 52.3211 62.6085 cv
55.5476 63.1861 58.7654 63.7886 62.0984 63.504 cv
63.9744 63.3438 64.8611 61.211 63.864 59.6949 cv
63.6502 59.3697 63.4051 59.0816 63.1463 58.8087 cv
cp
.815686 .768627 .588235 rgb
f
29.3562 62.5689 mo
29.2957 62.232 29.1941 61.9097 29.0174 61.6192 cv
28.9197 61.4605 28.7869 61.3082 28.6385 61.1593 cv
28.8308 60.7388 28.7469 60.2252 28.1785 59.9669 cv
26.2185 59.0767 24.3914 58.2369 22.5642 57.0816 cv
21.7508 56.5675 20.7098 57.627 21.0681 58.4537 cv
21.1453 58.7755 21.2224 59.0977 21.2996 59.4195 cv
21.324 59.8463 21.7273 60.3653 22.1853 60.3936 cv
23.2683 60.4605 23.7029 61.9664 24.3367 62.5943 cv
24.6433 62.8697 24.9744 63.1124 25.3269 63.3223 cv
25.4969 63.4171 25.6248 63.4879 25.7351 63.5479 cv
25.5193 63.8131 24.6277 65.6573 24.4832 65.9571 cv
24.073 66.8038 23.5887 67.5982 23.074 68.3765 cv
22.6853 68.8341 22.3318 69.3218 22.0652 69.8853 cv
21.6346 70.7965 22.1014 71.6881 22.8211 72.1192 cv
22.7967 72.2462 22.7713 72.3741 22.7459 72.4991 cv
22.4256 74.1085 24.6619 74.5318 25.2527 73.2974 cv
25.2713 73.314 li
25.8426 72.0176 26.2234 70.5958 26.7937 69.3082 cv
26.9099 69.1397 27.0252 68.9683 27.1404 68.793 cv
28.3435 67.6026 29.7293 66.5299 30.6277 65.0977 cv
31.3025 64.0216 30.4217 62.8497 29.3562 62.5689 cv
cp
f
17.0838 57.0367 mo
17.2488 56.5269 17.1765 56.0943 16.9773 55.7657 cv
17.031 55.3458 17.0359 54.9107 16.9646 54.4503 cv
16.8826 53.9249 16.7224 53.4864 16.5183 53.0963 cv
16.5271 52.7457 16.3914 52.3873 16.1228 52.1773 cv
15.8162 51.9371 15.4861 51.7467 15.1512 51.565 cv
14.5066 51.0914 13.7556 50.7012 12.9734 50.2799 cv
11.6443 49.5635 10.3904 51.2813 11.1648 52.4332 cv
11.8455 53.4439 12.8308 54.171 13.909 54.3546 cv
14.1443 55.0709 14.1853 55.9039 14.0906 56.3741 cv
14.0281 56.6861 13.9344 57.026 13.8181 57.3756 cv
13.0398 58.6368 12.073 59.7423 12.0027 61.3741 cv
11.9383 62.8536 14.0096 62.9415 14.6092 61.8331 cv
14.615 61.837 14.6219 61.8409 14.6277 61.8453 cv
14.7556 61.4571 14.9236 61.0928 15.1082 60.7384 cv
15.7517 60.9283 16.5418 60.5723 16.3748 59.754 cv
16.2908 59.3458 16.2898 58.9732 16.3514 58.6143 cv
16.6394 58.1124 16.9021 57.5972 17.0838 57.0367 cv
cp
f
53.4871 41.9449 mo
52.7254 41.0675 51.8084 40.2872 50.9012 39.5411 cv
50.5486 39.1856 50.156 38.8634 49.7185 38.564 cv
49.6912 38.5406 49.6619 38.5172 49.6346 38.4937 cv
49.6326 38.4967 49.6306 38.4996 49.6287 38.503 cv
49.5174 38.4288 49.4187 38.3482 49.2986 38.2774 cv
49.1023 38.1636 48.9138 38.1002 48.7351 38.0723 cv
48.7869 37.7911 48.7205 37.5108 48.5789 37.2618 cv
48.6648 37.0889 48.7615 36.9205 48.8367 36.7427 cv
49.4148 35.3756 48.1707 34.2252 46.8387 34.5645 cv
46.451 34.6636 46.1678 34.8448 45.9461 35.0738 cv
46.7654 33.9586 47.5271 32.8111 48.239 31.6641 cv
48.7527 32.6231 50.0603 33.1109 50.9392 31.9879 cv
51.1453 31.7232 51.3474 31.4908 51.5486 31.272 cv
51.6551 31.2242 51.7615 31.1734 51.866 31.0885 cv
52.3318 30.7076 52.7371 30.3297 53.1033 29.9361 cv
53.3953 29.7428 53.699 29.5611 54.031 29.3878 cv
54.2254 29.6358 54.4236 29.8814 54.614 30.1329 cv
55.8904 32.8389 57.2508 35.4073 59.0808 37.8731 cv
59.2644 38.1202 59.4607 38.3453 59.6502 38.5821 cv
59.9197 39.4254 60.1941 40.2681 60.4519 41.1187 cv
60.1892 40.6568 59.9109 40.2066 59.575 39.8043 cv
58.4939 38.5142 56.4851 38.5372 55.6863 40.1431 cv
55.2137 41.0933 55.2693 41.9971 55.6101 42.8404 cv
54.9012 42.5059 54.1678 42.2882 53.4871 41.9449 cv
cp
44.5017 44.0147 mo
44.4685 44.0152 44.4461 44.0313 44.4148 44.0338 cv
44.6277 43.5826 44.8435 43.1456 45.0701 42.7242 cv
45.7586 42.2818 46.2722 41.6158 46.7478 40.8575 cv
46.9109 40.5963 47.0623 40.3287 47.2058 40.0577 cv
47.2625 40.359 47.3933 40.649 47.6238 40.8883 cv
48.3191 41.6109 49.0271 42.3155 49.743 43.0167 cv
50.0096 43.4039 50.283 43.7872 50.5877 44.1339 cv
48.5584 44.1241 46.534 43.9991 44.5017 44.0147 cv
cp
68.3406 44.7901 mo
66.8806 42.9288 65.573 40.9073 64.2224 38.9229 cv
63.4002 37.0318 62.3767 35.2711 60.6902 33.9898 cv
60.6648 33.9708 60.6326 33.9625 60.6053 33.9459 cv
58.9646 31.7281 57.365 29.4303 56.1785 26.9864 cv
55.9431 26.5011 55.5447 26.1983 55.0681 26.1314 cv
55.0388 26.0474 55.0066 25.9664 54.9773 25.8819 cv
54.5564 24.6768 52.6551 24.5303 52.1521 25.7603 cv
51.95 26.2564 51.7166 26.6964 51.4627 27.1163 cv
51.24 27.067 51.0125 27.0748 50.7849 27.1387 cv
51.4138 25.8985 51.9666 24.7149 52.4138 23.6544 cv
52.7976 23.1148 52.7312 22.4703 52.4109 21.9454 cv
52.5154 21.773 52.6258 21.6031 52.7293 21.4298 cv
53.0642 20.8726 53.0926 20.3282 52.9265 19.8546 cv
54.1521 18.3341 55.4373 16.8595 56.7996 15.4464 cv
57.4822 15.504 58.1736 15.2613 58.6697 14.5743 cv
59.4236 13.5304 59.9803 12.67 60.6336 11.5601 cv
61.326 10.3829 60.8269 9.31551 59.9353 8.73396 cv
59.0652 7.96883 57.7586 7.67244 56.8103 8.49764 cv
50.0779 14.356 45.2791 21.6016 41.2283 29.3424 cv
39.0115 32.6676 36.9851 36.1197 35.1619 39.7174 cv
35.0281 39.9825 34.993 40.2384 35.0291 40.4727 cv
34.575 40.7349 34.116 40.9644 33.6521 41.149 cv
33.0086 41.0426 32.365 40.9259 31.7264 40.7623 cv
31.0896 40.5997 30.5047 41.108 30.3523 41.6988 cv
29.8846 41.6251 29.4178 41.545 28.9471 41.4552 cv
27.2791 41.1353 26.3191 43.775 28.0066 44.3712 cv
28.1346 44.4161 28.2625 44.4454 28.3894 44.4849 cv
28.3885 44.4879 28.3885 44.4908 28.3875 44.4942 cv
28.4109 44.4981 28.4344 44.501 28.4578 44.5054 cv
29.5506 44.8385 30.6306 44.9801 31.6931 44.9522 cv
32.617 45.0445 33.5457 45.1051 34.4822 45.1456 cv
34.4842 45.1461 34.4861 45.1466 34.489 45.1475 cv
34.489 45.147 34.489 45.1466 34.489 45.1456 cv
34.6238 45.1514 34.7576 45.1617 34.8933 45.1666 cv
35.784 45.1978 36.2049 44.5572 36.2146 43.8565 cv
36.367 43.7867 36.5193 43.7115 36.6717 43.6358 cv
36.9226 43.6212 37.199 43.5416 37.6365 43.3907 cv
37.9412 43.2852 38.0984 43.0577 38.1375 42.8077 cv
40.9051 41.0567 43.4402 38.4097 45.6316 35.4957 cv
45.4129 35.8853 45.2888 36.3472 45.1795 36.815 cv
44.8123 37.482 44.4373 38.1446 44.0506 38.8004 cv
42.7508 40.295 41.7312 42.1041 41.1502 43.8765 cv
40.5984 45.5631 42.4383 46.5181 43.4695 45.669 cv
43.5926 46.0694 43.8894 46.4068 44.3836 46.4742 cv
47.2342 46.8643 50.0984 47.3082 52.9617 47.0728 cv
53.8797 47.5484 55.1355 46.9356 55.2478 45.8941 cv
55.4803 45.8658 55.7127 45.8253 55.9451 45.7613 cv
56.4207 45.63 56.7342 45.1968 56.8465 44.7159 cv
57.5291 45.4791 58.3299 46.1641 58.9978 46.7525 cv
60.8855 48.4161 63.5183 51.0001 66.1062 49.4854 cv
66.784 49.0894 67.1736 48.1319 67.0838 47.3756 cv
67.0388 46.9884 66.9617 46.5938 66.8719 46.1978 cv
67.0271 46.2408 67.1883 46.2818 67.365 46.3179 cv
68.1765 46.4825 68.8719 45.4664 68.3406 44.7901 cv
cp
f
43.1521 10.9088 mo
42.4588 10.1505 42.0135 9.25057 41.5984 8.31697 cv
41.3279 7.70809 40.4597 6.56062 40.4236 5.90682 cv
40.3533 4.68416 38.4763 4.29305 38.0096 5.47371 cv
37.4734 6.83016 38.3289 7.58601 38.7713 8.8326 cv
39.1092 9.78572 39.2898 10.7042 39.6736 11.5675 cv
39.2156 12.1207 38.8885 12.7574 38.7674 13.4581 cv
38.1092 14.0587 38.0183 15.2393 39.0418 15.7139 cv
39.2342 15.8028 39.4256 15.8922 39.618 15.981 cv
40.5515 16.4146 41.4402 15.8209 41.7019 14.9137 cv
41.9031 14.2149 42.1502 13.6461 42.7576 13.2159 cv
43.4207 12.7467 43.7586 11.5719 43.1521 10.9088 cv
cp
f
48.7771 5.46297 mo
48.2488 5.12361 47.6316 5.11678 47.0984 5.32137 cv
47.1013 5.30428 47.1043 5.2867 47.1072 5.26912 cv
47.0476 5.29744 46.9881 5.32625 46.9295 5.35457 cv
46.7517 5.44002 46.5887 5.5533 46.4373 5.68025 cv
45.8865 5.59529 45.3416 5.75203 45.0183 6.274 cv
44.6834 6.81502 44.698 7.71004 45.2879 8.10408 cv
45.6609 8.35262 45.9793 8.52791 46.4148 8.649 cv
46.4617 8.66219 46.5096 8.66756 46.5555 8.6783 cv
47.0467 9.02791 47.6746 9.17781 48.2469 8.89803 cv
48.3055 8.86922 48.365 8.84041 48.4246 8.81111 cv
49.0203 8.5201 49.4988 8.06355 49.6238 7.3824 cv
49.7615 6.6324 49.4099 5.86873 48.7771 5.46297 cv
cp
f
34.9217 18.4669 mo
31.451 20.585 29.2664 24.6676 27.4168 28.7252 cv
27.3474 28.7515 27.2752 28.7691 27.2117 28.8057 cv
25.3142 29.9053 24.0965 32.1163 23.0974 34.0098 cv
22.8836 34.4136 22.1355 35.8712 21.6394 37.274 cv
20.6931 38.1475 20.0037 39.1617 19.2478 40.2574 cv
18.5555 41.2589 19.2723 42.3839 20.1726 42.5216 cv
22.1014 44.1788 24.0633 41.628 24.5037 39.9263 cv
24.8094 38.7471 25.3474 37.6778 25.9578 36.6431 cv
26.2068 36.5562 26.4363 36.3897 26.6043 36.1163 cv
29.0379 32.1593 31.3894 27.711 34.4607 24.0777 cv
35.5847 23.2603 36.5623 22.2686 37.3494 21.1046 cv
38.4871 19.4234 36.742 17.3551 34.9217 18.4669 cv
cp
f
31.1961 10.6915 mo
30.7088 11.6402 29.406 12.4278 28.4803 12.8497 cv
27.9207 13.1041 27.5613 13.8477 28.0037 14.3946 cv
28.1892 14.6246 28.3816 14.8194 28.5769 14.9952 cv
28.4412 15.3761 28.4021 15.7877 28.5994 16.1676 cv
28.2312 15.4576 18.9568 21.1353 17.8953 21.7921 cv
15.2117 23.4537 12.3035 25.2115 11.0564 28.1861 cv
9.44022 28.838 7.89335 29.4063 6.55448 29.901 cv
5.1746 30.4102 5.95389 32.4615 7.34647 32.0323 cv
14.6931 29.7686 22.5838 28.3111 26.9295 21.3121 cv
27.0848 21.0616 27.1482 20.8072 27.1502 20.5601 cv
27.5906 20.3087 28.033 20.0582 28.4666 19.7935 cv
29.9637 18.8809 31.1346 18.0816 32.1892 16.732 cv
32.4568 16.3892 32.2527 15.9669 32.2088 15.6304 cv
33.5144 15.0308 34.5916 13.6212 34.9685 11.9083 cv
35.4812 9.57674 32.2771 8.82527 31.1961 10.6915 cv
cp
f
8.63749 20.9366 mo
8.62284 21.0079 8.62088 21.0391 8.63749 20.9366 cv
8.63749 20.9366 li
cp
f
27.701 4.92488 mo
23.9334 4.54158 20.823 8.32576 18.0164 10.4698 cv
17.4275 10.92 17.2166 11.5069 17.2625 12.065 cv
14.8103 13.4595 12.2312 14.6905 9.81717 16.1739 cv
9.5994 16.1524 9.37577 16.1744 9.15897 16.2613 cv
7.8787 16.7735 6.15995 17.9327 5.57499 19.3678 cv
5.3953 19.5382 5.20585 19.6959 5.03006 19.8751 cv
4.14823 20.7769 5.12577 22.0255 6.16092 21.9566 cv
7.06131 22.4791 8.45975 22.0675 8.64823 20.8692 cv
8.64334 20.899 8.64042 20.9176 8.63749 20.9366 cv
8.65018 20.8765 8.67069 20.7926 8.6951 20.7408 cv
8.73124 20.6671 8.77616 20.5958 8.81913 20.525 cv
14.5047 17.377 21.4627 15.3975 25.867 10.6656 cv
25.992 10.6207 26.1189 10.5719 26.2478 10.5006 cv
27.5926 9.76326 28.3181 8.90389 29.0642 7.58748 cv
29.6346 6.57967 28.8621 5.04353 27.701 4.92488 cv
cp
f
68.4148 26.9068 mo
68.3963 26.65 68.3533 26.4083 68.3123 26.1651 cv
68.3709 25.5191 68.1883 24.8941 67.8269 24.3673 cv
67.5652 23.6553 67.2498 22.9762 66.9441 22.2896 cv
67.2351 22.2457 67.5056 22.1134 67.7351 21.8551 cv
68.2879 21.2305 68.2146 20.4649 68.1629 19.6934 cv
68.115 18.9835 67.9168 18.3199 67.7273 17.6363 cv
67.4637 16.6827 66.1834 16.1519 65.3006 16.525 cv
64.7137 16.773 64.3445 17.2115 64.1892 17.734 cv
63.3045 17.5777 62.3738 18.0069 62.1316 19.2149 cv
62.032 19.7135 62.0164 20.1969 62.0515 20.672 cv
61.3006 21.13 60.8357 22.0201 61.2224 23.1734 cv
61.3933 23.6866 61.5926 24.1646 61.8142 24.6197 cv
62.1775 25.8092 62.2234 26.9249 62.2078 28.0596 cv
61.6697 27.3565 61.1385 26.6475 60.6306 25.9195 cv
60.6971 25.4781 60.5486 25.003 60.0681 24.6124 cv
59.2478 23.9439 li
58.1131 23.0201 55.9724 24.2252 56.7351 25.7159 cv
59.0789 30.3028 62.8299 34.0518 65.4207 38.5386 cv
66.2127 39.9083 68.0984 39.234 68.5096 37.9937 cv
68.909 37.5733 69.1785 37.0128 69.1844 36.3521 cv
69.2058 33.9884 68.8396 31.816 68.4588 29.63 cv
68.4734 28.7257 68.4822 27.8179 68.4148 26.9068 cv
cp
f
32.5496 95.8126 mo
32.4851 95.8184 32.4939 95.918 32.5584 95.9127 cv
32.6228 95.9068 32.614 95.8072 32.5496 95.8126 cv
cp
f
36.4002 18.315 mo
35.0574 19.3131 34.2127 21.0357 33.2 22.3595 cv
33.0838 22.5113 32.9617 22.6583 32.8445 22.8096 cv
32.6433 22.7467 32.4129 22.7691 32.1863 22.9249 cv
29.3601 24.8658 27.8699 28.5455 26.364 31.5274 cv
24.4519 35.3145 22.7556 39.1915 21.0349 43.0675 cv
20.4051 44.4854 22.4598 45.4322 23.1951 44.0909 cv
25.1258 40.5733 27.1492 37.109 29.1092 33.6075 cv
30.3221 31.441 31.8982 29.1314 32.7762 26.6964 cv
33.5935 25.8199 34.4187 24.9488 35.2117 24.0489 cv
36.284 22.8331 37.8211 21.5235 38.3972 19.9918 cv
38.8435 18.8038 37.5584 17.4537 36.4002 18.315 cv
cp
.662745 .564706 .4 rgb
f
43.1971 9.84773 mo
42.615 9.35994 41.7537 9.35262 41.1336 9.79207 cv
40.6199 10.1558 40.3611 10.773 40.114 11.3292 cv
39.6912 12.2852 39.2244 13.0733 38.5008 13.837 cv
37.2898 15.1148 39.201 17.2052 40.5945 16.1119 cv
42.0164 14.9976 45.3377 11.6417 43.1971 9.84773 cv
cp
f
40.9197 7.54598 mo
40.7713 7.76814 li
40.0144 8.90193 41.9441 9.60457 42.1453 8.41512 cv
42.1902 8.14461 li
42.3025 7.48152 41.3435 6.91121 40.9197 7.54598 cv
cp
f
48.0535 5.17391 mo
47.0369 5.60457 46.075 6.20516 45.532 7.1993 cv
45.4471 7.32869 45.4012 7.47615 45.3758 7.6324 cv
45.0301 8.07332 44.9754 8.74422 45.2351 9.21785 cv
45.614 9.91072 46.2957 10.0831 47.0301 9.91267 cv
48.239 9.63289 49.2566 8.95027 50.0457 8.00057 cv
51.1502 6.67244 49.7361 4.46101 48.0535 5.17391 cv
cp
f
33.4666 11.7403 mo
33.8924 11.8453 33.8513 11.8687 33.3435 11.8106 cv
33.2088 11.8409 33.074 11.8707 32.9392 11.901 cv
32.5926 12.0518 32.3328 12.1529 32.0506 12.4171 cv
31.7176 12.7301 31.5672 13.2428 31.2303 13.5836 cv
30.8152 14.002 30.241 14.2847 29.8221 14.7252 cv
28.9969 15.5948 28.6707 16.5133 27.698 17.2535 cv
26.3201 18.3033 24.9002 19.2872 23.449 20.233 cv
22.8611 20.6158 22.6521 21.1534 22.699 21.6754 cv
17.9431 23.3546 13.3181 27.4722 9.36112 29.9244 cv
8.15213 30.6729 9.24295 32.8282 10.5437 32.1646 cv
15.5252 29.6231 23.2244 27.2823 26.5056 22.5089 cv
26.5242 22.4825 26.532 22.4532 26.5476 22.4259 cv
28.3553 21.3492 30.4744 20.1353 31.6131 18.5484 cv
32.1629 17.7808 32.5174 17.171 33.1707 16.461 cv
33.6697 15.9185 34.033 15.3155 34.3523 14.6734 cv
35.0398 14.4141 35.4041 14.0889 35.6873 13.1588 cv
36.0428 11.9947 34.3758 10.9693 33.4666 11.7403 cv
cp
f
27.9978 5.71297 mo
25.9412 8.58309 21.2976 9.90584 18.2976 11.8394 cv
14.5974 14.2257 11.2098 16.9078 7.68924 19.5372 cv
7.06229 20.0054 7.60526 21.211 8.36209 20.8116 cv
12.3377 18.712 16.2723 16.7598 20.1131 14.4039 cv
22.0115 13.2393 24.1717 12.2999 25.9871 11.0343 cv
27.4598 10.0074 28.3123 8.76424 29.699 7.56014 cv
31.1482 6.30232 29.0183 4.28963 27.9978 5.71297 cv
cp
f
57.4207 10.484 mo
57.0496 11.0294 56.6873 11.5792 56.3201 12.127 cv
56.0242 12.273 55.7732 12.4879 55.5076 12.8477 cv
55.2967 13.1348 55.2117 13.4576 55.2146 13.7769 cv
54.1844 15.3277 53.1599 16.8819 52.1355 18.4361 cv
51.8152 18.2359 51.368 18.1973 51.0388 18.4053 cv
47.5086 20.6314 45.2556 25.002 43.1873 28.5499 cv
41.0349 32.2423 39.3562 36.1456 37.8719 40.1373 cv
37.4695 39.982 37.0115 40.0357 36.698 40.4815 cv
36.2869 41.0665 35.8953 41.6744 35.4344 42.2213 cv
35.156 42.5509 34.8484 42.8399 34.5974 43.1749 cv
34.3875 43.1197 34.1648 43.0289 33.8455 42.92 cv
33.1248 42.6744 32.3963 42.5172 31.6414 42.6817 cv
30.0183 43.0357 29.4031 45.1226 31.0486 45.984 cv
31.1336 46.0279 31.2185 46.0723 31.3025 46.1168 cv
31.5555 46.2486 31.864 46.2979 32.1658 46.2701 cv
32.3728 46.4146 32.6541 46.6407 32.7976 46.7095 cv
33.1931 46.898 33.6404 47.0426 34.0691 47.1246 cv
35.24 47.3482 36.3709 46.9566 37.3494 46.3424 cv
38.0672 45.8922 38.2371 45.1348 38.0506 44.4552 cv
38.489 44.504 38.9412 44.3062 39.1941 43.7491 cv
41.2185 39.2945 43.5691 35.0196 46.0213 30.7882 cv
47.1404 28.8546 48.5281 26.9547 49.7703 24.9947 cv
51.7859 22.4151 53.8211 19.8507 55.864 17.293 cv
56.2361 17.5357 56.7517 17.5406 57.1248 17.1236 cv
57.9441 16.2095 58.4383 15.2398 58.8553 14.0855 cv
58.8904 13.9874 58.909 13.8824 58.9256 13.7779 cv
59.3211 13.2799 59.6551 12.734 59.9363 12.0977 cv
60.5984 10.6016 58.4178 9.01521 57.4207 10.484 cv
cp
f
50.3426 39.5533 mo
49.9627 38.9918 49.5828 38.4307 49.2039 37.8692 cv
48.8299 37.317 48.2947 36.7398 48.1209 36.0948 cv
47.8435 35.067 46.5017 35.4508 46.2586 36.2569 cv
46.0418 36.9757 45.1668 37.1607 44.8738 37.8458 cv
44.574 38.5469 44.8933 39.3082 45.6287 39.501 cv
45.9832 39.5938 46.3279 39.336 46.4422 39.0084 cv
46.5867 38.9527 46.7263 38.8868 46.8601 38.8067 cv
47.0935 38.6651 47.2996 38.4874 47.4803 38.2818 cv
47.6004 38.4757 47.7176 38.6666 47.8347 38.8375 cv
48.2185 39.3966 48.6004 39.9556 48.9832 40.5147 cv
49.5887 41.399 50.9431 40.442 50.3426 39.5533 cv
cp
f
44.6258 41.4346 mo
44.5613 41.44 44.5701 41.5401 44.6346 41.5343 cv
44.699 41.5289 44.6902 41.4288 44.6258 41.4346 cv
cp
f
52.866 26.3922 mo
52.8172 26.3531 52.7674 26.3145 52.7166 26.276 cv
51.7674 25.5391 50.1834 26.1012 50.0906 27.316 cv
49.4763 28.255 48.783 29.1412 48.1756 30.0875 cv
47.5359 31.0841 49.116 31.9708 49.8504 31.1553 cv
49.8533 31.1593 49.8562 31.1632 49.8582 31.1666 cv
50.4666 30.5352 51.0652 29.8868 51.7283 29.3131 cv
51.9451 29.3243 52.1658 29.2955 52.3777 29.2198 cv
52.9754 29.0079 53.2957 28.5704 53.4324 27.9639 cv
53.5564 27.4093 53.3152 26.7403 52.866 26.3922 cv
cp
f
66.8474 18.147 mo
65.8396 16.8375 63.2254 17.7911 63.5808 19.5323 cv
63.8455 20.8365 64.2127 21.8096 64.9656 22.7979 cv
65.0808 23.2183 65.1619 23.6461 65.2088 24.0865 cv
64.618 24.3761 64.1922 25.0401 64.5008 25.7208 cv
64.5974 26.2901 64.6931 26.8599 64.7898 27.4298 cv
64.5525 27.7164 64.407 28.0748 64.4568 28.4864 cv
64.7127 30.6285 65.0105 32.7496 65.2791 34.877 cv
63.656 32.5875 61.8416 30.4512 59.9275 28.3536 cv
59.0066 27.3448 57.2342 28.5128 58.1472 29.6129 cv
59.4012 31.1226 60.5965 32.6773 61.7781 34.2423 cv
61.4324 34.1881 61.0965 34.2745 60.8328 34.4805 cv
59.0428 31.5108 57.2576 28.5621 55.7068 25.4552 cv
55.1023 24.2432 53.1346 24.9019 53.6853 26.2066 cv
54.9812 29.2735 56.4236 32.2794 58.0711 35.1739 cv
59.6267 37.9083 61.3211 41.2032 63.8504 43.1334 cv
63.8777 43.1549 63.906 43.1632 63.9344 43.1802 cv
64.2586 43.9508 64.5125 44.7291 64.6267 45.5172 cv
63.2908 45.3809 61.9773 45.1046 60.6805 44.7149 cv
59.8777 44.4737 59.1844 44.9498 58.8435 45.6202 cv
58.576 45.4771 58.3123 45.3306 58.0447 45.1885 cv
56.7117 44.4815 55.3445 46.543 56.6013 47.439 cv
56.7928 47.5753 56.99 47.7027 57.1814 47.8389 cv
56.8513 47.8087 56.5183 47.7799 56.1765 47.7486 cv
55.534 47.6905 54.8953 47.627 54.2586 47.566 cv
54.7791 46.7388 54.6394 45.7491 54.0887 45.0616 cv
53.9822 44.3804 53.7019 43.7408 53.2029 43.2437 cv
52.5887 42.6314 51.6433 43.0313 51.2742 43.6651 cv
51.0203 44.1007 50.909 44.6427 50.8201 45.1622 cv
50.6609 45.1788 50.5008 45.1866 50.3406 45.1968 cv
49.2967 44.6885 47.8396 44.7725 47.5769 46.2017 cv
47.491 46.6661 47.5691 47.0518 47.74 47.3795 cv
47.4119 47.4078 47.0847 47.4395 46.7556 47.4859 cv
46.3328 47.5455 45.9939 47.8267 45.7986 48.1793 cv
44.6375 48.1339 43.4842 48.0484 42.3504 47.8658 cv
40.8924 47.6309 40.531 49.7452 41.9392 50.1021 cv
45.3787 50.9747 49.4617 51.983 53.1258 51.4024 cv
53.9734 51.4635 55.2869 51.4713 56.449 51.6192 cv
56.4793 51.7374 56.5174 51.8555 56.5711 51.9752 cv
57.1599 53.2779 58.1326 53.9874 59.1355 54.1397 cv
59.5076 54.9146 59.4363 56.1558 59.2722 57.1285 cv
59.0301 57.3775 58.8689 57.6734 58.7713 57.9937 cv
57.6726 58.0509 56.5994 58.2843 55.4549 58.7008 cv
54.6355 58.9991 54.2107 59.6387 54.1013 60.3331 cv
53.6394 60.4537 53.1746 60.5743 52.7039 60.6837 cv
49.8338 60.1514 46.8523 60.1314 43.9441 59.9591 cv
43.3826 59.9263 42.9207 60.1187 42.5789 60.4278 cv
40.9051 59.0987 38.6697 58.4947 36.5828 57.8927 cv
31.7449 56.4976 27.406 54.9107 23.3748 51.8135 cv
22.2644 50.9615 20.9002 52.5655 21.9724 53.483 cv
27.7849 58.4566 34.7361 61.0875 42.0965 62.7574 cv
42.3103 63.1363 42.7 63.4107 43.3035 63.4405 cv
45.5594 63.5523 47.8416 63.7633 50.1131 63.7769 cv
50.1238 63.7833 50.1385 63.7838 50.1492 63.7901 cv
46.118 63.9869 42.5672 64.8629 38.3875 64.0963 cv
36.9265 63.8287 36.533 66.0352 37.9705 66.356 cv
40.6433 66.9512 43.367 67.3013 46.1072 67.3785 cv
49.1531 67.4639 52.6521 66.5059 55.1385 68.7911 cv
55.3396 68.9669 55.5525 69.0635 55.7635 69.107 cv
55.325 69.7208 55.0916 70.4766 55.2068 71.1758 cv
55.198 71.1685 55.1902 71.1627 55.1824 71.1553 cv
55.1228 71.2481 55.0642 71.3404 55.0047 71.4332 cv
54.781 71.2071 54.5574 70.981 54.3338 70.7554 cv
52.6541 70.5919 51.7498 72.273 52.4451 73.4771 cv
46.7722 73.2608 41.2303 74.2017 35.5506 73.3008 cv
34.4392 73.1246 34.159 74.7403 35.2351 75.0069 cv
36.3963 75.2945 37.573 75.5753 38.7576 75.8292 cv
38.5174 75.9766 38.3826 76.1861 38.3875 76.4864 cv
38.3894 76.5587 38.3904 76.6309 38.3914 76.7032 cv
38.3953 76.939 38.575 77.1705 38.783 77.2662 cv
39.033 77.3809 39.2097 77.3765 39.4763 77.3951 cv
40.408 77.4591 41.3562 77.3887 42.2967 77.4708 cv
43.1883 77.5489 44.0701 77.6827 44.9568 77.7525 cv
44.9763 77.9517 45.0564 78.1529 45.2166 78.3204 cv
46.7859 79.96 48.6238 79.4581 50.7185 79.3599 cv
51.0603 79.3438 55.1824 79.379 55.3445 79.5626 cv
55.5437 79.7882 55.4275 80.8873 55.6287 81.3184 cv
55.9734 82.0557 56.5955 82.4473 57.2097 82.9254 cv
57.7244 83.1163 58.1531 83.4258 58.4978 83.8541 cv
58.1863 84.0172 57.8758 84.1827 57.5672 84.3507 cv
57.242 84.8726 56.7488 85.2115 56.6453 85.8946 cv
56.6365 85.9527 56.6414 86.0079 56.6394 86.0645 cv
56.4695 86.0528 56.3006 86.043 56.1316 86.0362 cv
51.8904 85.8653 47.7576 86.2471 43.6267 85.0518 cv
41.49 84.4342 40.95 87.7676 43.0066 88.418 cv
43.0867 88.4434 43.1687 88.461 43.2488 88.4859 cv
39.3611 88.5445 35.0017 89.7779 31.4021 89.0904 cv
28.0838 88.4566 25.2849 86.4039 21.7625 85.9512 cv
18.1297 85.4849 14.5125 85.8223 10.8826 86.1451 cv
9.47049 86.2706 9.71073 88.2672 11.0691 88.293 cv
14.9305 88.3668 18.9685 88.4796 22.7527 89.3619 cv
24.1756 89.6934 25.492 90.3868 26.7957 91.0684 cv
26.7869 91.0967 26.7693 91.1182 26.7615 91.1475 cv
26.6658 91.3306 26.5701 91.5137 26.4744 91.6964 cv
25.5652 92.4063 25.7947 93.7291 26.574 94.255 cv
26.3367 94.3072 26.1062 94.3873 25.8865 94.5269 cv
25.3904 94.7647 24.8914 94.9976 24.3904 95.2257 cv
23.2205 95.7227 22.0496 96.1168 20.7967 96.3707 cv
18.7879 96.7774 16.5369 96.9879 14.5877 96.2242 cv
13.8387 95.9302 13.0037 96.9927 13.7723 97.4957 cv
15.6521 98.7281 17.4705 99.3048 19.7361 99.2027 cv
22.4168 99.0821 26.0623 98.4229 28.4021 97.1133 cv
29.7976 96.3326 30.9178 94.9532 30.5281 93.2686 cv
30.4685 93.0137 30.3709 92.7857 30.2566 92.5718 cv
30.533 92.649 30.8103 92.7237 31.0926 92.7691 cv
34.1971 93.2667 37.9851 92.1905 41.157 92.1617 cv
43.1043 92.1441 45.0799 92.2203 47.0515 92.232 cv
48.1785 92.441 49.3015 92.671 50.4334 92.8653 cv
52.3875 93.2017 55.073 93.1885 56.8709 94.0211 cv
57.241 94.1925 57.4256 94.2452 57.5125 94.2515 cv
57.5271 94.3199 57.5887 94.4493 57.7547 94.6915 cv
57.9793 95.0201 58.0008 95.523 58.2605 95.8902 cv
58.3191 95.9732 58.3904 96.044 58.4558 96.1221 cv
58.2478 96.2027 58.0203 96.3443 57.7722 96.5479 cv
57.5408 96.2716 57.2488 96.0997 56.9392 96.0191 cv
56.9305 96.0162 56.9217 96.0142 56.9119 96.0108 cv
56.8513 95.9962 56.7918 95.9835 56.7303 95.9761 cv
55.8357 95.7847 54.7683 96.2545 54.6717 97.2691 cv
54.6209 97.794 li
54.4988 99.0723 55.6053 100.024 56.6805 99.8311 cv
61.0242 101.713 66.0789 95.4493 61.9265 93.4205 cv
61.9031 93.3184 61.8767 93.2091 61.8465 93.0811 cv
61.7185 92.5543 61.5486 92.2198 61.2205 91.7813 cv
61.034 91.5308 60.826 91.3204 60.6013 91.1412 cv
60.9763 90.7525 61.2029 90.2139 61.1492 89.5474 cv
61.157 89.5489 61.1638 89.5499 61.1707 89.5513 cv
61.1648 88.7989 60.9803 88.21 60.6717 87.7437 cv
60.5594 87.4146 60.4305 87.0938 60.2605 86.8131 cv
60.2508 86.7974 60.24 86.7925 60.2303 86.7789 cv
60.2644 86.772 60.2849 86.773 60.323 86.7637 cv
61.2224 86.5416 61.8592 85.7164 62.0955 84.8736 cv
62.7117 82.6749 61.0486 81.8443 59.5066 80.8834 cv
58.2127 80.0758 58.2976 79.3282 57.5633 78.3238 cv
57.2742 77.9288 56.8181 77.6378 56.3289 77.4063 cv
56.7469 77.3477 57.1609 77.2691 57.5642 77.1466 cv
58.0545 76.9981 58.5555 76.4415 58.5945 75.92 cv
58.6336 75.4161 58.5711 74.9971 58.4617 74.6148 cv
60.0408 74.066 61.2273 72.9512 61.2771 71.566 cv
61.2976 71.543 61.3162 71.5245 61.3367 71.501 cv
61.951 70.7838 62.0994 69.7764 61.7879 68.8956 cv
61.2722 67.44 60.6824 66.8961 59.1678 66.5396 cv
59.1306 66.5308 59.0896 66.5328 59.0506 66.5274 cv
58.9207 65.8809 58.3797 65.2823 57.5994 65.3106 cv
56.992 65.3326 56.3933 65.3492 55.7957 65.3497 cv
55.1717 64.8311 54.4715 64.4385 53.7078 64.1754 cv
56.451 64.1651 59.1736 63.6329 61.7674 62.6788 cv
62.7215 62.3282 63.199 61.5059 63.2439 60.6558 cv
63.4324 60.4161 63.5838 60.1534 63.6736 59.8692 cv
63.7371 59.671 63.7908 59.4625 63.8435 59.2535 cv
64.0066 58.9122 64.075 58.5802 64.0515 58.2686 cv
64.4519 55.8267 64.1414 53.0079 62.7703 51.0889 cv
63.6853 50.9478 64.4109 50.1153 64.1365 49.1368 cv
64.95 49.2296 65.7742 49.2896 66.6316 49.2808 cv
67.6902 49.2696 68.2996 48.2193 68.3045 47.2882 cv
68.3162 45.1973 67.5965 42.5455 66.4607 40.1158 cv
67.1004 40.3214 67.8631 39.8751 67.8172 39.0733 cv
67.6453 36.0782 67.6453 33.109 67.6023 30.1221 cv
67.9129 29.8546 68.1023 29.4625 68.0027 28.939 cv
67.9236 28.5269 67.8289 28.1261 67.739 27.7213 cv
68.0369 27.5059 68.2801 27.1895 68.3953 26.7535 cv
68.7566 25.3878 68.8133 24.0938 68.6385 22.8385 cv
69.1736 21.8922 69.2957 21.4019 69.3377 20.5196 cv
69.9451 19.0577 68.1609 17.9312 66.8474 18.147 cv
cp
f
45.8689 97.4703 mo
45.2537 96.7476 44.3338 96.859 43.6951 96.2833 cv
43.0721 95.7217 42.9529 94.9332 42.1629 94.4703 cv
41.4051 94.0259 40.5262 94.1412 39.6863 94.1949 cv
38.3875 94.2784 37.1043 94.3067 35.8035 94.3096 cv
34.6355 94.3126 34.5349 96.2525 35.7049 96.3746 cv
36.698 96.4786 37.6883 96.5772 38.6746 96.7354 cv
38.9754 96.7838 39.701 96.8184 40.1521 96.9293 cv
40.157 96.9957 40.2547 97.17 40.323 97.4151 cv
40.3621 97.5587 40.4217 97.6998 40.4842 97.8394 cv
40.3133 97.7955 40.1394 97.7598 39.9558 97.7383 cv
38.3152 97.5479 37.492 99.7672 39.0506 100.544 cv
39.7488 100.892 40.282 101.574 40.989 101.85 cv
41.8943 102.205 42.7996 101.658 43.6453 101.36 cv
44.5603 101.038 45.6599 100.838 46.1609 99.9088 cv
46.5916 99.1075 46.4461 98.1495 45.8689 97.4703 cv
cp
f
47.5984 54.1436 mo
44.8387 52.9888 41.9715 53.066 39.0457 52.6143 cv
35.5467 52.0733 32.1433 51.0855 28.8123 49.9024 cv
23.8924 48.1563 19.2019 45.7496 14.2771 44.0269 cv
14.364 43.8668 14.2908 43.6304 14.034 43.6358 cv
13.3084 43.5059 12.5838 43.3756 11.8582 43.2462 cv
11.7976 43.2281 11.739 43.2066 11.6775 43.189 cv
11.6795 43.2081 li
11.0486 43.1134 10.531 43.9254 11.1101 44.3946 cv
16.491 48.7569 23.1267 51.8927 29.6404 54.1519 cv
34.8797 55.9683 42.1951 58.5753 47.5164 56.0426 cv
48.2605 55.6885 48.4803 54.5128 47.5984 54.1436 cv
cp
1 1 1 rgb
f
36.9783 79.608 mo
34.7752 77.9224 32.9207 77.9952 30.1941 77.379 cv
27.493 76.7686 24.9812 76.0352 22.199 75.8419 cv
18.2625 75.5689 12.1971 74.1705 9.09745 77.1182 cv
7.81913 78.3341 9.18534 79.9537 10.6072 79.9322 cv
10.6062 79.9595 10.6053 79.9864 10.6033 80.0137 cv
15.0223 79.3262 21.4187 80.3492 25.8172 81.4049 cv
29.6678 82.3287 33.2879 83.7916 36.8963 81.5914 cv
37.5701 81.1807 37.5906 80.0758 36.9783 79.608 cv
cp
f
23.9178 27.2286 mo
21.2967 27.3551 19.2293 29.3331 17.3924 31.0308 cv
15.4275 32.8472 13.5389 34.8834 12.2459 37.2408 cv
12.2644 37.2418 12.282 37.2423 12.3006 37.2432 cv
11.7439 38.7501 13.3084 40.6959 14.8601 39.4361 cv
16.8142 37.8507 18.5701 36.0269 20.5144 34.4224 cv
22.3133 32.9381 24.489 31.7105 25.531 29.5484 cv
26.0848 28.3995 25.1287 27.1705 23.9178 27.2286 cv
cp
f
53.0779 6.88191 mo
48.0613 7.84187 44.1629 14.047 41.24 17.8472 cv
37.6795 22.4766 34.2947 27.4478 32.5086 33.0484 cv
32.1121 34.2906 33.9402 34.9415 34.6814 34.0723 cv
38.4558 29.6441 41.4773 24.6099 45.1551 20.0928 cv
48.0584 16.526 53.2986 12.8668 54.3826 8.31697 cv
54.5525 7.60115 53.8406 6.73592 53.0779 6.88191 cv
cp
f
23.4412 16.4053 mo
18.3435 15.9224 13.5349 19.9737 10.1297 23.3692 cv
9.19608 24.2994 10.6873 25.9429 11.7039 25.0792 cv
13.6394 23.4342 15.6931 22.0714 17.992 20.9805 cv
20.0086 20.0235 21.9988 19.3741 23.7986 18.0299 cv
24.3728 17.6002 24.2517 16.482 23.4412 16.4053 cv
cp
f
16.2205 8.93123 mo
14.0906 9.09822 12.0242 10.9913 10.284 12.1246 cv
8.87967 13.0396 10.3787 15.1534 11.7869 14.2486 cv
13.5486 13.1163 16.0301 12.043 17.0681 10.1495 cv
17.3875 9.566 16.8367 8.88289 16.2205 8.93123 cv
cp
f
62.8172 19.6744 mo
62.7644 18.754 62.0594 17.9591 61.2117 17.6851 cv
60.4744 17.4469 59.7742 17.6012 59.1805 18.0098 cv
59.1746 18.0001 59.1697 17.9908 59.1648 17.981 cv
58.8972 18.168 58.6765 18.4078 58.4773 18.6676 cv
58.158 19.0543 57.9138 19.4918 57.7752 19.982 cv
57.7537 20.0616 57.741 20.1446 57.7224 20.2257 cv
57.6756 20.3902 57.6238 20.5548 57.5945 20.7188 cv
57.4842 21.3179 57.5135 21.9864 57.6873 22.5679 cv
57.7254 22.6959 57.7762 22.815 57.8299 22.9371 cv
57.9285 23.233 58.0896 23.484 58.3142 23.6905 cv
58.5711 23.963 58.5847 23.982 58.3543 23.7476 cv
58.7771 24.4522 59.7576 24.7247 60.5056 24.5567 cv
61.1072 24.4224 61.4998 24.0772 61.7781 23.6168 cv
62.2527 23.0875 62.4431 22.3092 62.5574 21.6329 cv
62.6697 20.9698 62.8562 20.3575 62.8172 19.6744 cv
cp
f
19.9558 90.8057 mo
17.7127 89.2349 14.9168 91.9039 12.4217 90.9844 cv
11.2351 90.5465 10.0242 92.0787 11.1541 92.9605 cv
12.6004 94.0899 14.1482 94.5967 15.9939 94.4713 cv
17.6795 94.3565 19.8806 93.7047 20.3514 91.9044 cv
20.4471 91.5377 20.2693 91.0245 19.9558 90.8057 cv
cp
f
67.8299 33.8477 mo
67.6228 35.5123 67.3767 37.1685 67.1131 38.8214 cv
62.9021 33.878 58.4363 27.5601 56.6072 21.4928 cv
56.5457 21.2877 56.4568 21.1187 56.3582 20.9659 cv
57.7439 19.1768 59.2254 17.4566 60.8357 15.8961 cv
62.1326 18.6558 64.0867 21.0367 66.6072 22.797 cv
66.7937 22.9268 66.9832 23.0098 67.1726 23.0728 cv
67.5418 26.4605 67.7117 29.8614 67.74 33.2764 cv
67.741 33.4893 67.7781 33.6744 67.8299 33.8477 cv
cp
65.2351 48.963 mo
64.6394 48.7379 64.0359 48.5347 63.4305 48.3414 cv
63.4246 48.1617 63.3992 47.9791 63.3504 47.7969 cv
63.3377 47.7471 63.325 47.6978 63.3113 47.648 cv
63.0906 46.8131 62.2791 46.4161 61.4832 46.3873 cv
60.4207 45.7999 58.8689 43.5806 58.2859 42.9473 cv
57.1316 41.6944 55.95 40.4581 54.8347 39.1695 cv
52.5584 36.5396 51.1687 33.4825 49.8738 30.2979 cv
50.6199 29.1339 51.366 27.9708 52.1482 26.8297 cv
52.6004 26.169 53.0603 25.502 53.5271 24.8341 cv
55.9012 31.1109 60.4568 37.2877 64.7508 42.1773 cv
65.2273 42.7208 65.8338 42.9171 66.4187 42.8873 cv
66.0486 44.9171 65.6551 46.9425 65.2351 48.963 cv
cp
61.9646 63.7384 mo
61.9646 63.7393 61.9637 63.7398 61.9637 63.7403 cv
56.4549 59.5587 48.2254 62.1441 41.6277 61.0455 cv
36.3103 60.1593 31.2703 58.1392 26.489 55.6964 cv
21.6599 53.2286 12.6765 49.565 10.1424 44.6055 cv
9.78202 43.9 9.16678 43.5469 8.52811 43.4649 cv
8.39139 42.2564 8.2703 41.046 8.16776 39.8331 cv
15.5564 44.9459 24.1844 47.1895 33.0828 48.3536 cv
43.2322 49.6812 54.7869 49.0172 64.3846 52.9332 cv
63.5955 56.5372 62.7683 60.1343 61.9646 63.7384 cv
cp
51.3504 96.4786 mo
49.9207 96.1851 48.4383 96.2467 47.0008 95.9967 cv
43.5252 95.3926 40.4793 93.9644 37.742 91.8663 cv
37.7888 91.8243 37.8367 91.7842 37.8836 91.7427 cv
40.159 91.4903 42.2752 91.5425 44.8523 91.7037 cv
48.3797 91.9244 52.0369 90.9927 55.4265 92.213 cv
57.5369 92.9727 59.1892 94.2252 61.1765 94.9273 cv
61.159 95.0347 61.1414 95.1412 61.1404 95.2579 cv
61.0867 100.788 53.4705 96.9141 51.3504 96.4786 cv
cp
34.8416 98.7051 mo
32.8074 98.6055 30.7742 98.5059 28.741 98.4063 cv
30.7742 97.3267 32.7078 95.9986 34.616 94.4883 cv
37.7801 97.0245 41.0887 98.2676 44.5857 99.1959 cv
41.3435 99.3414 37.9754 98.8585 34.8416 98.7051 cv
cp
6.86014 91.6353 mo
7.366 91.6226 7.88749 91.5645 8.41678 91.4464 cv
12.1931 90.605 14.6306 88.6724 18.7703 90.358 cv
21.4285 91.441 23.3465 93.0587 26.3084 93.3985 cv
27.4978 93.5352 28.6619 93.4703 29.8162 93.3096 cv
27.907 94.6719 25.8416 95.7842 23.3172 96.4488 cv
18.6502 97.6768 7.67167 98.253 6.86014 91.6353 cv
cp
17.4031 55.7017 mo
15.3826 58.9224 13.4002 62.1583 11.7654 65.5728 cv
11.0555 60.2989 10.1424 55.0606 9.366 49.8048 cv
11.0164 51.293 12.9617 52.4468 15.0154 53.7086 cv
15.9041 54.2545 16.7967 54.796 17.6912 55.3331 cv
17.5877 55.441 17.49 55.5631 17.4031 55.7017 cv
cp
29.3221 62.4166 mo
29.0867 62.7799 28.8533 63.1436 28.6228 63.5098 cv
27.9265 64.6168 27.2586 65.7408 26.6765 66.9127 cv
25.8445 68.5836 25.2185 70.3321 24.8416 72.1485 cv
21.3035 71.0787 17.614 69.9512 14.1365 70.1041 cv
15.9402 65.6221 18.4519 61.5059 21.0193 57.4136 cv
21.0408 57.378 21.0515 57.3443 21.0711 57.3096 cv
23.8758 58.9 26.7449 60.3707 29.7195 61.6168 cv
29.6033 61.8013 29.4734 62.1837 29.3221 62.4166 cv
cp
59.7166 76.0953 mo
55.7722 74.8116 51.6961 73.2686 47.6189 72.8448 cv
41.9226 72.2535 36.5291 74.6592 30.8035 73.6929 cv
30.118 73.5777 29.4168 73.4229 28.7029 73.2452 cv
29.1492 70.9869 30.0574 68.9224 31.2185 66.9014 cv
31.781 65.9229 33.1062 64.503 33.7078 63.1334 cv
37.1336 64.2852 40.6736 65.1041 44.2791 65.3926 cv
49.5271 65.8126 57.2088 63.3282 60.8484 68.2427 cv
60.8738 68.2774 60.9041 68.3013 60.9305 68.3336 cv
60.3748 70.9009 59.8943 73.4898 59.7166 76.0953 cv
cp
6.31034 79.1446 mo
7.08768 77.4683 8.18827 76.5738 9.36795 75.6129 cv
9.75663 75.6343 10.1707 75.5299 10.5789 75.2486 cv
16.4031 71.2271 27.3181 77.8394 33.7469 78.0025 cv
38.3201 78.1187 42.7351 76.4254 47.3025 76.8966 cv
51.4881 77.3277 55.6599 78.9688 59.699 80.2535 cv
59.9012 83.7242 60.5652 87.1978 61.1971 90.6285 cv
59.8172 89.9586 58.5691 89.0518 57.0252 88.442 cv
55.1853 87.7164 53.2439 87.5557 51.2888 87.5626 cv
46.2332 87.5801 40.909 86.8345 35.9363 87.8804 cv
33.2869 88.4381 30.5642 89.5416 27.8279 89.4893 cv
24.7185 89.4302 22.5164 87.6387 19.8367 86.4371 cv
18.159 85.6851 16.5223 85.2198 14.6785 85.3668 cv
13.5017 85.4605 5.7244 87.752 5.8201 87.1192 cv
5.89432 86.6202 5.7996 86.1939 5.60233 85.8458 cv
5.20096 83.5382 5.28006 81.3633 6.31034 79.1446 cv
cp
31.7078 7.75594 mo
32.116 8.95271 32.5447 10.1407 33.1316 11.275 cv
33.3855 11.7662 33.6502 12.2525 33.9168 12.7379 cv
33.4646 12.7745 33.0105 12.9683 32.6248 13.3966 cv
25.3582 21.4615 16.6101 27.6178 6.57303 31.7442 cv
6.10331 29.8092 5.51737 27.9083 4.89139 25.8663 cv
4.74198 25.379 4.6326 24.9141 4.54081 24.46 cv
14.1014 19.711 23.1658 14.1622 31.7078 7.75594 cv
cp
10.7146 12.5313 mo
15.3914 8.90682 22.1609 6.47176 28.5369 5.12508 cv
20.9685 10.7305 12.9988 15.692 4.60819 19.9674 cv
5.40702 17.0626 7.71268 14.858 10.7146 12.5313 cv
cp
35.6765 16.5196 mo
35.7117 16.4752 35.7498 16.4327 35.7869 16.3902 cv
35.8006 16.3804 35.8064 16.3756 35.823 16.3624 cv
35.8787 16.3272 35.9109 16.3057 35.9305 16.2916 cv
36.365 17.0416 36.7996 17.7906 37.2283 18.5421 cv
36.8338 19.0596 36.448 19.5645 36.0779 20.0367 cv
30.7205 26.877 26.1892 34.295 22.406 42.108 cv
17.6267 40.7105 13.0769 38.669 8.99588 35.4981 cv
8.85233 35.3868 8.70584 35.2994 8.55936 35.233 cv
18.2713 31.1475 26.8514 25.2218 34.1101 17.6265 cv
34.7566 17.545 35.3328 17.1549 35.6765 16.5196 cv
cp
34.8015 4.11971 mo
36.0935 3.98348 37.324 3.9659 38.5291 4.02303 cv
38.5916 4.62068 38.9344 5.07283 39.408 5.33894 cv
40.3885 7.49519 41.5769 9.54305 42.99 11.4478 cv
41.8846 12.6319 40.8435 13.8863 39.8592 15.1295 cv
38.825 13.3472 37.7693 11.5694 36.8152 9.74812 cv
35.8787 7.96101 35.367 6.01912 34.6863 4.13338 cv
34.7244 4.12947 34.7635 4.12361 34.8015 4.11971 cv
cp
52.6346 42.6632 mo
53.5476 43.6671 54.6795 45.1964 55.9363 46.6387 cv
51.0388 45.8868 46.0066 45.6534 41.117 45.2178 cv
43.1355 41.5943 45.1775 37.9805 47.3142 34.4259 cv
48.7019 37.4005 50.3318 40.1285 52.6346 42.6632 cv
cp
53.4724 9.07234 mo
54.4607 8.9366 55.0086 8.25008 55.1658 7.48348 cv
55.9978 7.73396 56.8269 8.01961 57.6541 8.36824 cv
58.993 8.93318 60.2215 9.46932 61.3855 10.1378 cv
56.3846 13.8526 52.5652 19.1959 49.0847 24.2574 cv
44.5652 30.8311 40.6717 37.8052 36.7957 44.7686 cv
33.2888 44.3673 29.7849 43.8712 26.3621 43.1173 cv
29.4217 36.8902 32.9471 30.9312 37.0701 25.3355 cv
39.1023 22.5777 41.2527 19.9122 43.5203 17.3443 cv
46.0301 14.502 49.5144 9.61678 53.4724 9.07234 cv
cp
47.0076 5.5323 mo
47.906 5.7701 48.7996 5.97371 49.6883 6.16805 cv
48.3699 6.80037 47.114 7.66267 45.9138 8.66072 cv
45.0086 7.39266 44.2029 6.0782 43.5115 4.69246 cv
44.6551 4.93269 45.8113 5.21541 47.0076 5.5323 cv
cp
64.6599 12.7276 mo
65.7322 14.0347 66.1258 15.5543 66.3865 17.1978 cv
65.4275 16.066 64.6512 14.7887 64.0887 13.3487 cv
64.0672 13.2935 64.0379 13.2506 64.0135 13.1993 cv
64.2283 13.0411 64.4402 12.8785 64.6599 12.7276 cv
cp
69.6863 13.7193 mo
68.7088 9.95076 66.7517 8.34676 63.3484 6.57527 cv
58.781 4.1993 54.4461 3.06648 49.4969 2.08553 cv
44.2478 1.045 39.9431 -.459883 34.4549 .134844 cv
24.6033 1.20271 13.3406 4.60896 5.94022 11.3848 cv
3.08866 13.9967 .300573 16.9556 .0281118 21.0084 cv
-.347865 26.6187 3.1453 32.0548 3.48905 37.6915 cv
3.52421 38.272 3.76053 38.6959 4.09549 38.9869 cv
4.88456 48.7559 7.57596 58.3292 8.06522 68.0777 cv
8.21952 71.1607 7.47928 71.4185 5.53397 73.376 cv
4.52713 74.3883 3.68827 75.5499 3.02518 76.8135 cv
1.40311 79.9039 1.01932 83.2769 1.70194 86.6788 cv
1.73026 86.8199 1.77323 86.9488 1.82206 87.0718 cv
1.76542 88.4024 2.17264 89.4498 2.88163 90.2056 cv
2.74588 97.2061 9.51151 101.023 16.0047 101.307 cv
17.0047 101.35 17.9676 101.336 18.9021 101.273 cv
19.1521 101.658 19.5857 101.928 20.2273 101.96 cv
26.1805 102.251 32.1326 102.543 38.0847 102.834 cv
42.5388 103.052 46.9783 103.585 51.2273 101.948 cv
51.7449 101.749 52.0769 101.414 52.2703 101.026 cv
52.7273 101.142 53.1873 101.263 53.6502 101.391 cv
59.1306 102.911 65.0613 101.539 65.1258 94.9107 cv
65.1258 94.8902 65.1209 94.8731 65.1209 94.8531 cv
65.5574 94.4791 65.8269 93.94 65.7146 93.2725 cv
64.8836 88.3101 63.5603 83.1539 63.5974 78.1011 cv
63.6346 72.9185 65.1726 67.6812 66.3055 62.6583 cv
68.4763 53.0343 70.743 43.4483 71.8875 33.6343 cv
71.9363 33.2159 71.8631 32.8521 71.7185 32.5382 cv
71.6551 26.2847 71.2605 19.7901 69.6863 13.7193 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (4_body.eps)
%%CreationDate: 11/11/2019 10:29 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`g_/YMjgoNY(&:o;O!">]-ia.umr,tUF5Bo$$;\BN_$+)+YH%L%Qhd]$a+S5hYFba_iqDK'04)D>HMd[8
%LKDf/^&J!I]>J!J]\NJJag^i1-bHR"T0IhuQehZ:PG`nrCT`/P^:nmdr:]:'lPE@Rm./]D`pbi=reKt(._,TZcM$i%Y?jcKQa^ni
%aQps]EV`I[s3(B=8872Udsq;omC1EUJ+NNYRqJp2ri_sQeE^IQ^%I`$h`]@oaN`cjjnPhQEd,1pk9iJVJ"t?FX_5a_hu%;G>Q!+/
%n%M04pUi!!K,frk%fM`pUS/boGPL'Ag>0O&msZ'r;4mI!(IpU*lNqji`?`4lG(I9s!4;Zg0?G8_rT_!2:L=(sqtCpo>ka$.(Z.B*
%o&eL-^UgJ%/)B4=<Kbf`[Im1(,^EOliQ?N1G,`RiM\dNEV-]uH9eJoGh"th&X\s6;j0RLTr*oEXDkDDuqq?_`qXp=2TDed6"NAJ!
%pa4;q=%`qXIfK9eT&79]LR6?DaCf+n2'(W4]_^da\U;2=T:>">-o+`inc/!85<O5imHkjTr`@Eq_"dn<=-rouhu<-)f2)Bl$Yae/
%T(9M^DI<D%ec4PX\*DA%D-*nVR7jO1?#pTEJ1&:JF1sl#U11UN/T?>kmrJ.-P440]r9mrVqtA^d?aPo=5Hi&\D#!,XBA]eSU%hpD
%s5V#"lL_"I5PFg!)/nBe^?cm$r7?_]9[daeqTY@Oo]bHrLK?,_4Q#1kH^R\`AZe1Gor\19r<Ig"\+noDq`6W_rS(Co_6]K<n`*-S
%e_eo\^Nfa1r:62X?iBKMY?q5"X2g9MHMu*hJ%FJ7O5$RN?G2X*s(;#;J,8'nO.Yfgask+&_s8[GjW=!]ER**uBA`[S*B05OI!rWU
%ho`A)BE.EfXquL/WbK.t[[ph)Gl.EhGLMQE]SG;4Ms!lB5'aj%0?+HNrTm&MbnK?>op.T-p<=[$FAEL@n"a04(S5\ks0nLPrTYPe
%qXq1]GAb7*-a2G*jjiZ]A&+[#s++qZea'9js)\(?4+@"ggG_q.FFI#$rSY;:n`7reA=9uVq9AZ/(\F>8&#7aam3,hcGk1e.ZYs28
%q<h&)T'l<UJ,'"=]0ErSomGQn_XGO/k25]1\FLdRrUR-Froqu)BA^H@O-s4dOR@Dfo_Im@J,TAkmDG_1e,K$`hn@P=\bd+b_YFFm
%rmY`?lg=^`T/Nj`oHa7o^SduWq34$`ko&5_NTXF8^VQi?5sB_g9IB3k$L4bVI/0*VU'uMLm%<,h;:3Ygr9U8I&%aKEGkU9CSXZfh
%Hj?EipZ8$=I!<c%e'Ir4]k.%D<j[.kqYAIp^6ZkZ^OJ89o#oW\^3M'+jY(/$&M$>^FE`grhEp,WhS,5p>],o$3pcRt4FZp`Nuor_
%;Usn3roS5O=R@..YrGh\QPAqA^L],WI,ls0d_qr=]:XJaJ,P4A1;1o7hZgNChIP7,Z0SmOfcA"#9k*E>$gn*Yip2Z<c2RU$HB[tm
%?6jskH[M".d'qXL=,H<2GE3kqn\a\]T&9P'mWYk,]_iQ2k'>-Npm*6$QLVGGZ?$>%CLV70r/L`T0fY%`Y!++gd*fiIaK+D"5E?ml
%kNaB`]FNQmg<$V,P8qWODq>F_[H3]XCn^[ejB1]H*p^P_05@Js`p0TT2ru/P.jC9*QWQRoq*pC>*;_:ra>N!*jd8F/Ek&dC-/HX^
%8k1lOBeP6(.b.MZ81D^?PK\jDif+qUG`Y:!27=ooL`%SY+GZ"N>f'2pa`.^o3TP6J$WW3"jFK9^`lcIH(SlDpibs(3j>d!g*.']K
%]mQWZ^;tkl'W4M4ku@HjhnUm)gl4D;EKjrd*O_;0OfoO_-urjbjG6PPK+"2RDWEc/7l_(MB>7]pd<JVN168e14+]ZUnY?,NUE_GS
%`o3iqns)06mUn-Mf\bVJ*@LhH5pGF*#PnCP*7t)$r41[n]aX,=aH?06_lsYlTM+dk2fbGL366["751mFa:0Cb":SQfZ:!kj2f]m,
%IL^DV7#6\U"XOF0Uf)l,^QIP)Z?21<:O0OSp^pkjEg:FWn;27DHpPX7,#WS68,74fs52$"?d$jX:R1r5o)AlF"47\Uo,*LnPU53L
%IO()$P!c)9+Fj*0r?7Lrj>)X(68lGt69^s^kD`%]reR*<d9/['cTCRY6p@nuh0qA@9-<40Rn2F."=Ar#2ArYr=@C#iFP@rY7@[oV
%`$h8.i]`s^P(HAp.PpFY:@`g!^:Hig*:f*]<02B0V([lRQ;2%7QEdrc&\=+p$8R'!1r?Lh?cknE)>PbFE4A)<hh[59OdI=jF=f7j
%'%q=]"f$0>Ohkmi_r3$'muB[p0d#KXr)8[.a8POQPWR$0$E(feT8KS>ldOg7PXBq<A.!TZ!#Q+o'bR![Z_*9<c"S.fNm>KBK$a".
%+@Hd<-pj3[e)X.NC_40n&O$KZOlD1D03!&?"bC-P+=@`\a,`WYnT-:QZ)<[*W@i*CX/S9GVaI7XKo?a/5\:(Hp=<eFR7oR+3-ic^
%j$X9%)'_nib_]Hl!)Cg&V^eS2#ud;KM[:K,PLDfeOBmjk^)!PbN=4,#Eh!UuLDsnK)$&'+1'ga;A4(p!OAEYBa^F%Y,Pq@p*aPH#
%6pJi:+i>PYQc"FVP&A-,b:qnOetKrG/N8]Y<OD9517>U1m+<8+G+UrR:Luf<_,T^`!%<*)+<H<]75I9&@Moa9L%sXtjH`G,V(aiM
%2*+JJM?>6jOg9X16b>BSBM<59nAM;d.:8`XVueYLHRaaP<Q#2!#1Xk0"=8Zm5h6Ms(-EEM(FgCQSjkTEk5on(H91SK<UsbT'Bp1l
%QDiTMr,i=9A["hd/;Jds3$aWDQ'*ON3D6-hj,cer,]]3m/sWbJRUl->&P4s<9O,am0k%D1CD?%',"IR4e4G>T+B!A7O0/!;=h6eS
%6t.<C\Cb2Gg"YLap0r0c&4J3%Nf2%OSq[F1R`e:Mji#B)7D8akaMH(3/0_D<K&oAV<-eq1a0g"Yje@m5Nrp2W^/u@cA?\U4EQDB)
%FD4je,TO?3>]Uc2=l+-8.#u<haUFAK1J9LJOs&3:ABfj#EYOAddj1o)P!g36:(7gj2.2O4boD9hP0=V[1d]^i:t)2flpt`/3&<FP
%1>QAP1ou9KSW2U3L>]5hJ\,e(&mJ<[E7\sB>rMd;RJn:R,;m%si[2c=H]"HXNV^olX^hSL$'J4TB8AAn\9oT^9*!]2$gn0(QC?d8
%([tkb^S_2'%kh9RH#``+mTXHnYJLaYfIjX/h&5FBL_oq2M:QDso+.RNS_+3FoG=T^K4niK#uLi,M6J"UXcPt&pEH=ZYnro9D\=c?
%V'86SUs7hsFJ3IDZ=^$rNDuR1[KG'V-qgM\8EEsP'),@\VnW)OAF7RD0"ubmSJU+rj<dfJ?-Q5F;8jQ2MNb#NC<kMLX,9YPSLQ^$
%GH1/T:j]8&lT]_Z`3rN3fTkEASF!cM#8ZdmE0h(I!.X/;(QWgeOgYMFk^>t8pF,bXEl\'+=$Q&54$NT/p5hZ0pn74"IXJliI:l6f
%N>%iqk]M!LEY?'kLgM+>.T=TtQN[`-`R>2De1Lu/eo##L$aS8nC)G>H,328C14`b'U!ZA/cceJ<G*N9fSqc$WqF3>;U<]af3],At
%Z0nKXUOh"(cYAd5LIn?IR@7X'(n1pg\cSV$p1B1&=*MGRZ#5L(1WEHI24J.TBTmFZD$Co=_`3[_0'bur*]2]=iDR0W_g2)clOhuo
%`3U]E3N*sT!Sqsa#9S(OjGrmrO7r97meDeuhY29a*?Y2(GPoBDs"Ws:/r_XNP:C#OmhV:FS#hl<once'U/-phd8d':XOaUZ`6373
%DC=-iPu\847n72HdSZP,M7A5aSAFUthQKef:78N42&F8b\Tt)/XV-@h;2>6T<ehQ)c#W)EhU!jS?.8pZJVR7K%+e939%c1SD:h?a
%ceR&*kF-"XER^$&BUu9^3R^50N\epiR,Glhdf%4^WT9(`[Fa/oqfUW)[GD-/TC;P.FiStHr70Jo6%H`qdc8L"Aua1[`>J[$J&@Jh
%rhjXlVVN0N"UD<"<5X"/E3P`[FkgEX:#8"=XI9WB;n&:81P9/[U?aL)%[4U7e9A-i0EDjn]:o0;%-oK%<o=Mhk.2_G-$L%d#;'$@
%\MXFke8BrDT[gX*<bU8"Bd<n]RS,4VePX:n;Z0HEUfa>UQ*)k<*:ICk'ps8UPNPAQ94S)ffBQM`T%!$,D>ffBlZW+:9,Kn6$chN&
%YsqbH*hLcJLE>t/LYVDck7I]CclmU\n@ARemasD>c-=N'AhT'N\Oea=`gq!B7iD.MP9J$^FN9m2;+(PKBKjG2-PUkhlj88U!hbS3
%-_SdTh`;GC"QTm)'6#>7:5(_DkWCV$VBDd'S-EqM^eKG>`M2SSk!Pfd$/?f53J3e*Da&WgWM:#;#<<O]<1m0`:'E]ombD"\[M&38
%m&@8BW6n_p;#ikP7:ggNp1U_a4lOb'<>u^K/Jb8G6Q*"c6%;!,Z1Sr3<OFp-D?6BpdAL$#=h:Wt-<2&k9tSH,7[,i9XEQheFG.nY
%ro;QsmPn[ogV_k&F.D*5*+ee&557*"jH)Geke)9#X:'g=n\ODfkIKWtc"E%,=egAq.%`B>Vn1o$NUg5II+B^<29Mi/UM5sTMELj`
%p&BI<0:AS3A;XF+mq%)dUc^#k)_.G:b[n5m"^/2Krc0/^iR?QmnTg@,\U\dQ7<I:/`*%.G1V5.b5J%K1ZC=`,0)_q[;rf"AkFGt_
%Jo>4Ac2$i)24O5jdI?]%"R_k/!k1`RQ8N8=J=+(9N/!J/[DmYb[]62-ajF<\0k]XfQ3Xlm\]O$\T:\6;\N_(SSI4q\ht$LtTe%KJ
%$;m(RM*_o6K;?R,[hQ<KPhc5\7A9VnpX=e\ifVO)HcaFQ^L6.i\k?=VMidmKjLq)^7798r%X"7<s68t)hsk3kpXAim-^Z#/?Ci:f
%IPsJM#re-Rmu`1&.)K3qo-,aR(rf1RTNbN'9ERe([tn1,?pG^jX%6>o6!Zggb^3;S[k`=g#Hnbk>_K2=q,A+;<0\&g3[-+D,Kph6
%blhnrIUYj[/L/N;=F,tgZ!,.T+>@"NDcLjZ:B4gkkb?0KBk42XNiE/Y2^:Cao2E-/WQk!3HY2P7VXKAPWLBI51K9!<W$4`Sc;JM6
%#qJcO5:8O11hZLOUXLEBfj1L`7iY#;M8l"-\io>LUWFN6f6'88\F@JtGi>kK\`9NYS,86C/@5!\Vr5545PWT!h6TK:Gc0rhNmDos
%h^^WO/e+9pfMkT&+;m\%k8IgP9ZYUl^EZ[d(XkRJIi:[JU)l>Y$QYQT:9Sb_NXRc#N'tHt)JN!<F;e=So<:k`eR@>-M:pHC<@<b/
%6-ZI]'LC&#K?3t)kUO)s#><@i4R&f<EsnIE>G.sNao)L$,KurlmiLU\!8CY,.Bl''6bo!m1(5"qp5MI(g;3'4`@:g.a./ZC4ltWE
%HB:\)@F*!_3Vbfg^M?'aJ8+*.lVY^-7dA63df1BNT38/KClb8MB+=-\*gPdUULUfQ`-[R;N[)^fo7N*EiMbpph!n.o>E8FF6gj`"
%Zejm?O+#&T0XH.AGj0M^0/;YiY^r-'9?,P'6d>2j3W:DLmpEEuRG0CK@F":j88eG7/qp:sn?`sQ?%eNVk4t'3s%C/U$7fiI^O]!d
%cY[*eF&8i'8pNZo><(jWPU(R%Kp&l0dNoI(fPqBA9q[X(nLe@ZJjoEb6Y?DGHk6^4(f59LL669+6gf3Mip)/WEp95YpgH\,I)m>s
%q9=[9s,lbp#%Sfd)6Po$Fj8/TG4:(:VM]L;Tl3\aR*J3&,,#K<X,p/1U_QGPVKW[%-+*NIf,e)V&^+>/Wh]<e3I:Ve:=[b:cq;oZ
%\t`SWe8(,VISp/N+n,i5+Bh!FOfF\GZECI!W1Fg(<i5:uq/eYN;gnSbC5<TU5M8q_Y_)/Rjhit)Dd$COQmec!:(+2!Ja%^hfA8c8
%Vu"_]TH;pSl:/[[LU'r4XBBp-fgHco2Ii;<1*-2W88#u6+1YmkE;4bjpPskEqk46Pq`BkZNuiJ9*N+*'ElSETofgEGj?%69%82=B
%gRqgHRea*d->B@>JQN.0ZB!K33;Gt'rBP3&LS7Qm!@*[t.NU^L>,6niZAbUk<W56,:=N?8<n"(TE6TlT7f0TtQ85e<1>*?So0BB9
%?.uQB.U.F,q'YI<,B_h9_lHh5UqT4j-E(b)a,nCrg+]cY;i`UpPEe*-`uka,6im6g'B8AP@`]YQ'Y5#)VPUaCgB+!a9&?ErM72Ag
%&_!R#W66JcG>#!L'jSF8o!(=<k_3?3HMAQ%l!9)"nX\jUof/NbElU7Y+*W+Hj80hb'1ud$6.Y&,Y[URJMr:_1FK*q0_!jOFm8"-q
%.n_N`)a<m(;p[%lo6?V/r/F'?rgo9RBd]tDMQgHh(-G9e=egY%2VH>X3Q56&!<NYVYbS"'>?8!\Yis&2gB*9kPum<d+c>9E43hCQ
%GKREb8VQJA(%^m-D4Yu`LOoH4Ldh:YGBB,nh\"%TL0-okBYZ),VsN;Y]lKN+"qGOKN`d#k122QgqPNY.,VIHfieG;($&MEQJ@VOW
%%E]K*,VQBhY6X`^=M[i@LLA##Yt3j040d4o/3JLp?c:lE@Pkk>^QqA;GgBh)*5mbhmhn^r"3R7E'N4i3l'6UAF&80-`9$D_rOuMn
%4;H8b*RB]7Z_QA;b+3$PSBDp+RHSjSoQM8;Apb+F9bE+K%h!lWbS3,W$G&0KXIEb<.$J-ub%R*'=lt1N%%;N#b@Zqh(t"$VL7"E<
%1?Ha`],mhN1%L65AsSleh5!(@"6uCj8I_9mo3Y<V^#m#WHCU1FBT5uho4T@Na)ISL9Ip=VHcRg86+`C_k%:?PM1hl6R>fP7S,bI*
%M5nq.L?Gjrjchae30D3'lkYT(V]&:RJ`3dOUPD]]R!^h>%l%hAmuUfg^R'EZ#kDH,CQSa8EaD1:)QR&(hhJZ&D#<^k(gY'X4k<@E
%TR1KholAN8iTQk/dW-&BrR0^'JN*B!eb,O/[D*Bi*YH^>"mlsoVpC_sX)EV^A/"4I!h./P3f.hJ$!!l0Q,eRC&E2;qgA!LAp1.^6
%X]$_Z%jjskbj)[-HS!uc=hPM$I\/cdmY+p:4]^HL-:$lBBSVEuigNu4;PM^('%>$mP*,'!U.jl]FD5nl[Xf0'WZ?'t(.,JBeGdf"
%Y!6^TH'o/KAdlSgHsBheH@^D[a+0K+RZ]`bGE60jFc1'_]JZWT-D,`,hJt`G<T5(snKSOWj%)6]k%Ca;h_H6Q''[Xi[0O]6Z6n'V
%ST`>!95;r*)tq(=P_t9;!(/l;'iR]&kXf?0P)!A5jeB0kn32YG27k/r/5[auB\%gh/t"PQcKplBkn,fPTM.`l@H]gA0VakdLsZ3*
%OYq8[9F4l\Y\a@K,!_joL;sb.@52OFdK4ObffTeN,2`:\o,[jJhskXGiIEC:R'4n>J9rITSIu;Q1ZCYK4rI3hA1S-X\&Ucdd)enK
%bRU&j@.%JN":S9AQ4sr?>a);8)!XYQ['J+o7`9a")d)q!@SUGMb=4S?=m$8G`\kIj*mU/8P^8u=k$%`N+>tD#SG4uuleGe&3Bu0Z
%_C4KiB1EsF-ut+b=ukj8e&&Fthe;tFZ-N+Db%e2a+(6?O\EnpQ5'Xd0+:I5cj!32A##3;+j6nXUb3r4VgiJi)q[!eHj5_Xe($gaY
%G(cTZMX.:MV'4Qa&Z3BL%IWp3%KB>G+$[&FO[d]"6c`PnqC$*g\Q_TF;slXn4nh]=ei/n2Ukc9d/QV("X.,KrOiL>q+d6r3k1)ed
%D6"Bn5"s"es)K/cfS!ZkJY)HUdFNZX)h.(GWV,GWQ^mIH]/$pY/fj):b8p%tkne1q45NQ26%6:u*tKbcVn)?#j"6ZhGE7*TOH2A?
%a#,9`?E`]IHsofhlO#eY$#Yqff*'k:CfFR*4u)#=2QAm9jUNmmj2>0t@`lV%F'(HmBP>#ddXUBg-_<Ye>6<M112ouQ/#.2]5eHLW
%ZXHIU4"$]WO2SMK&mDL\-kU=OOO:3[^ZmPuM8.*&b]]<IX/Wi>Krq=fF!B;-!2d9<qK`AkY+65XDgF`(%OMARN0X9<K@<t<n2<FS
%8dNFF8\o=<$bi)IHuD@@SYY1j;h9p;pHciRUu7:rGfMOg2D4`4Ek&Tp_=O>Xh,*%RCj7ns[g)RZ"Rtgc]?T<)_fX*7bP>eZ"_Lf@
%/]67%2pIY,BWGOe=c^iGPD8Z^GMKt6o5PNu=G$h@a2UX^X`<-H#+(@Z;#n>d4PE+4Du7)sJ@jEd.j'3K?E=MGaG1djaaV)/G<?6J
%C'E'p79PC0lpVJcs#NTXd<"3]=[tX)"qb23i1!<eDi6PJY>_3CA!8@rPgI%\`UBZV^.VefhsaABk$$GB/1G:*^>,Mj:2-'nDG1VR
%+W,J8?1gS+W]pY"I:k'q&%mO(cqWk_N7t?WejAc_h%h$>/A1O"-JYCbgMu:``Rfn&_^`=;k]!WFME//mEGYH$"ZH^XJ[tImZ1FEe
%&%_aM;/ktWK&G()(1FY?#pn`fS(i$p:6JLrjb]MnW(r?"F%*YdN=NuplQuhEd9*$GVfd&Y/-9?iUJdj'4Q[)%Qr\(Z9J2dI_</J`
%7+uVSe%"lB^$#:\3<<d8Z-X)Ead6N<+B^bSgLeq;l/0PJeFY1aS]Ykr`r.acRjX3mC4b$qm/H7prQi7<lj<Vp0$pVbQ8h[,:d";!
%j=be8?Fe*H":%45r)ZWcl0\uTR(MQ%oW]1XlK.(p$0*Znl<KL?CB:7dOd=Al`JWo@]$8:@aDa0(,ETo-:,C==fZJIlgD!tB<tsjX
%7=@5QEF$JaAm0A!E]#'01DIHHB]e5,!5$W;'3g2Io<4X04gVZ](13PN<6Qa-L!#j@Hm]Fb>F])ugut0Hd5$_XRqR@b42</uO*H4f
%3ZP]P;WT+gAU28SMIdM?%bS+\7gH80P34$m$bT$-#V]/EedR>P9o^":6O2"1fZ`P23=]uFL&V8:^"iSNQ$\?EOdZ[,##V1`*m;g(
%M)U,3F'6S]-tM&DC>QY(Q\"c1&/k)[O%.gC>3b($KspD\[?bS"15oO+JH[@Q^/iX<J)9q.imP0c%TfR5bLJmkQ%ak[_2<'p:024E
%Lp)=JbT_!,><-$*<OSjKN2`n7$LsA$O#ijfY`q-@(23)]?mmt/oJp2,INFmkOa_'%jAE!]'\aUbZOD`gZ6um0b/f,oK-ThJdT_aE
%*cf<63Qf$*IEO?*TQ8)T96u(?m/ATW<66P44C%B5p1HtBjfj%k>?9b"4$7jA,IHL4ckQc>l@l$R9JGh;02;Ubl,D.-)X$R6QI<!3
%C,i:G(fkNP%7So%*WFc0hg7*\]l@Er,7q'\?G3CJP67AGnB%?^-BfiPD\#n:4Yj*bG1?cRVl$;h]<[5gk)3C1[_3"@?<LR"<j0GV
%aKspu+d\\=;;n+^@gJp1o<e$)RWmhIBZ]9shB@5#TNml_NfU\CpO%"UQ'=_f<SPFib*<r<6kSKTL&6#Y(6EhIGD0nt2ZD$XhaQEi
%FBYV:j3==kEkd6ZTnkdtjX*H/bnhA(&%_[KXhB,0fZUMlB(*o6PWOS>)=-9jj"[\8dY9r21I4R*//)>W;s(&rr3X'.e1@c7f!nLA
%!0Sce#U!%s:/ThBW8+kX#i#Vs?E3/,C0e!>"mb]RMkP[88(dX7'V./]Yh9b-ZSro+a0WRsq>PJOh"#'`:YhiVEtmV=2g"9<+8!_O
%^+IXC!D_P!B&0PcD`M;BoX)J^+CRpSI+#F\bl6obgKckKnhD[CPEB!?dcAe_P6,Oc=,4nuDlZJN$\b4>MG#_B\hfV@3I#Wcqpi5+
%LbsmLej.Y'8eNSA9V/@3*TipV-KA_rJ(C1RNq6icW/nZ*X-7#*$L<^no0rl;h<(SOQjBjtBrS.Lbu1s7W7<D%WVG(>6?N*a/m55s
%9et:2_T:(c:ISb&p"m-+kWrBj_:N56e@(doa!nO]=P_UsHkVFW3]_d<a&8@BFED&*PB7Y<,Z+6TCf*-gC#9':NENDoZ0jp2pnuI/
%_^=k3)m$Bn\rO\%mAKU7*XK^NSqDTc>;Gg_R"KuRBm>+jmfIat7PF`"&Ls;;L5n>sp:pK=)_=4]cL#MHDr4ZRW_j6ASD:mHpikgI
%\pLmpLfRF.2\&ZVE7Jb@FW9Yt0<Kf+:2>&S^GNA1kjudJ(2q`d!"RfFc&Ku7P\UV";nB]nHu8d5cK)Sn9^*n/at.[5:+<>8Q)lMa
%C4o+^(<G$_.n/O1d's;8N0"-"MX@QEGF$HQ&gMbh/01YX#D4+f)GdL)]H5UoaXT@mc!?#3[t*GNOJb5:'C:$*ms3$>r/]_-Eisep
%Xcbnhf?9Qu6aYl$f_':Ao27F?8+1cGPs#b'E"6q^\(!SQAnV;aZ;oP%"VaWW5#rHE!-"e^Hm39$=YQE@2JICHH%7_jLY5HM&!.!X
%M,,T59]LG+M>1U:@3[amiB3"h36ia/O6&KmJ:lDbS`f`0VUMJ]B)+Ql@q8#d\nQ9LnXXm7SO[oGj*?l+SAdft7ePMEE(fiN^<DLV
%?W`Va&@-KO;4kmW*Vk!IkL#oG_4AVRq/*\ObYiCe:jJ@[=V_u#8Wa1=M8Me(Ar0W$@S7%H>Od@VM@9NpQRtkkhQLd90c?9sOoP$$
%0C:j`QDLTg%O").L>h)'N'SWU"lK=XY5;n1rc2RINd'9)rGd$hn%5aW9O(YX1ikm5YSI3RYrKY9mPo!9Y/.MWH(N6j&)Fe2?o2b\
%Z8fC_flj6."/Oh8G<S_E=$QD%$5C,_;QN.&C8`0@KQX&YCj4a[ft2s[>b"O-C?0lresH5FleC5\oUY07q=/WBlp"K$A,)LVB?tc`
%E^K$fWB'3kQi[nmbc\6oPRMRSAQ>:(I-\DHDn!I<qM+;t?47Vp:%6$2^BUP'"HBO,D-AkNn;V8AD19+aqjl$b7dBo3NuqLfT!KKo
%^?>EkgNReRg?u,@o6#lu",kTBXAosYe7h18&1.>(Th<_(U/rrOQ9XLie:=D3*KP8!GNkG9X38XS<E@sDPP+G$$r_=D[S>uLkp1iU
%orFR*\+F27S[OX/$o`%&3'l'DJW.1g"A`1CQfDatM56!%Yf>+;1i3CHhR."jG/nJe'?ip.:!ghi;tgDUh?,e+-cki-JVXVW=Qqp1
%4gaD.YigG9f+c7?;<WACc.&?>4l@pnP^N]qhZN@qPrnYe!%2'b8^8JEfj4Ckd!kk\(Tf1H!^t.Y/^@p>>HW&s^O=CH5Ke%rr+IQ\
%RR,%#m(.QK7&CF,lO7^8'",u/T:tY_.XnOY5AAg;7;.#uA[@p"4bp4"nhrd.)bBP:Y4*M]':2Y6-EXP0!6u4^6Io=OEs].d+1+de
%,[q+'>c`2&ei\&2GdgAZHf*TdEZm2HHfj0(pfPgo+"KTn_!$M/_=F8fL-@4]8De8B:LNjdrN0pDlUuRls*Fksn,%*KTZ_54L5i$7
%[aHaO4J$9"MkRb@4.fi2/<:p&ZSc\pN^$J&*sQ!'C%6=Ye%igllt1S'/uI:;ZnWN\`'$a,.AUULZ>ndL)cGIh!E10ug1sa]SBo#f
%NYS3LA&9?R)*S.eT)m)Y!0j*eij2=+QANpCnMZg1f**T&jk]OO]2TNSaVO?;6bXmrO8]S1V"HP=U5=\GO>D@LKtZR;bU&dMJgoYs
%(kj4&TLQc;,d>,A9`G@*ICMi':"T98b:QHVI4i3pVtV@$J&miBB'+N_jo*:UfbM%Ff4Ed:Wg8m:d'n8I1$uhbmZpClK"J_ZK_qBk
%HM6LpmrnTk:S.P'1MuaPcPY;I%.#bSp)*u0N.HDs^cl79T/!Rr(t`KYp+tRq=XH>U`+PM5N.HC,$qsj=rp?bQ?bCj]o$+M-hu<Q:
%Z`?:ik4,5(I`L=LrS88chRpCIrDL<'r=@dLq57;ti5#*%m[R'S7JraJFRiGU9AIM9Y+!GT/nB0k,C!,V`n1'Z5Q1idrB^Hljb^T6
%r`0!ss2j0u\$Z-'\mb?&h*:nBAbXGZ?M/Y_$.>Hrn%=!ujuX+/rHcpThX&j`S(uK*]u`qFhqqeUIWKo1oZa^D0;#oVlg>S#4iuUM
%?bLd"qs!dWXFn5NIIlgMX4L_IT03(YFQ:u&GkV(/legS`IIjf$hr0ImLAr27s'L6%],^LeJ(Jli:X)0ZQDJ/J^!M0AUX+fG$VEqf
%Rb[PU-[Lhj2o\[t_G]sMKlE;tXk$.=>_*MgRK<3Y]TWYG[@gLMq0"')-k5UeKr1b-1$j*[ou]]a.TJCI+JLF9<:7CEBospbrnE--
%Y>EoZF"q$e(=MW$9@<)A\[C4!k!;^^@_%Z$m%l"7a_,j4a]C@\-8"1KHk<KJME\Q@8`%2#/("rX-Q:to0(S<DY+f%,]-$^QF;6LC
%R_K3hSa=^"6eF88r)D!l,AX]qWrQW,Vu<VpS_M\H3S8TJ.f+'bZ[>9]A`3u$41gA+9C1:+X!B`?=6!<SkeefS(.1On4F$,.G*PMJ
%TY]6MHP]`\g7_Nr&5JFM?KB^YHfnk##'oUGn--J;6,-0de)["[4Yois2j2c)R>shMc#rcGG-dO<8_WOM:QY2/]p9Qs65a\]U]X#8
%FNh[:07ALMZ7Ff[B4&V[nH]C;T!??uass,+c";'R>EV)WGAO5DPqJ@7^08I5i%l-G_U@H*opk\u5VK#=bmo5cB:t_Wk,,LR<,RVh
%E!<^S>G<4+`[fHp9q1fR)6!d+aqbis[$8OI+1%%,;C<Y9dfdoahJj?(]+VgCpqf5ahl-``=<R'US[;!r#PL]N-&E./.7Vq2#?n<4
%q8d#.RP8[La<p3]>FN_j%M_r)Z#XBLq"*)&ag@&KrZ]PC:Ah+Bn_#[nh2=@+I@c#rGCaSRKU'.qLRZATO=sea&DLl[Q+VTlPbH<7
%CX?uCb*;LBR(r2$&&TC[Nq]YIUscE/EG^a-X"<I9R1gH)/+:t;s!\U4iLSZjG*V]ZFLb*2k!]@ADjalds-cP@D@>5".iV$iqILiN
%!;.Ka.KH;SV3I"':[t/W[#_$u3/f]k.ks7BLj2h#Ce<Ou6;*34YsgK[ZTc[r.YqX[K7Q[,5fE`6>!rTU-b[f#G9R5&BdZM`lA-p\
%.Bhm0pQLC:4s<`i8W24VkR72doMofU.nRM(iBFbN?Ft0,S>l[r4@CAc@L%a^%]p\GAXWD"@^MpeA["USMTmC"Q3t6[T#UCP+uNhI
%;4DmEU40$tkNK952YfL>AD*o]G*ejRU(d0hk2eULWGa].]I4U.VZgGT=d:QK'PT%Rnh48NHkq\JNA#c1JR9a=_Fn5==[F(K%G4QI
%Aa>\6j%W=6mgsP=:;d\sddQb2e?W_FX?qn>9ZciU]+h\OW&fSH;pg6WTN3[_qIO]H/-d#(C66jsPq1oQ70KfED!^X0+Y8Z0.79&@
%M;A4?(0[`>K`0&0=oo'\0.eqiLrMEBDP`3*Qu'nFb1Sj2C-d2s'4h?"/kq^n(djgV+oDY@g%rmc\O,drJr=^eI71k<V'YqL&&f08
%(AYZseabk4:WkQ"-ktGk@#_+0NQb:ZXuc]l*Zgm"g[')$ll'hW`/@8!88jFZ/C2C>#A)DWp.Iisjc2d$;(<Y2L9\smJoO>k1>>/(
%<4XJD]2FAc9e4#548_0r9X(@&d6W\*ASD`bmP>*k'Et.;:-&aK,$)='53+DV5#3M!WJ[#(i5hBuLbS3Z[`EEF2"8\T,gWcf'8aOR
%H-u<d=lSF9Le&e*OC`2>,rReZ-G.p\N]H7g-1MS[1e>A<8<04G^khNT&=,BL0'jr69Fq$!b0-QV,1u$H_mFs_P.-Nc2/0nlg'n\e
%Y`(;3PaB^`9d7mRYUhA&JQ]T[*nK!'Q_b(RLhX`?HtZj):YVR!j^FQ9'B9?jGeq91TBaJV.f.TFjR%ArY)p"W>a?Z@g=fT=jU/@A
%dO]>*][q:c9=hK`V)b],C=l*N.e3b?S0DPa"@^m:=^AsAPRbbO#0]bg(P84;VK-(1+V>T\5i)L9,@]DPV<Ac`Fh&O\Q!b_MLV"JE
%V3Q*DSZ^ES,J$9L-rPfgoWWm/a&lB-Y(WW300ZXdEKG5Y!s*SII%G"ofH3Bq:Wt#3q4S`W)+Fh!FTTI$oN>C+L;W53A^N$i^YMAF
%oD!L3M/:?ZC0+lUaf:g"=[2Tn9,682@kV-*;5d=do)4K*91ke!?Rc42?L;_10Nl86!oJnmb>M5OFZ8jEjV]i713_B6CVj#Dfh5BN
%/Z\R&@#3!FWngaB`p`COG9N)=HdlIh!+`pd*Hch)+]dK6]nQ^(M9,Nkbm'FZ)mSVLU%[sgU;rMYLgd0;9WPEO8mQO&``iYIM8"jL
%6q*Hqd)p)Qk)dZN@fm0025IKnV8cQ(gc2EDN@HuC71Q._1eQjL&X0#6>n*]&QK+p<!aUeOMR=/hWile[8KK$,[+E>cX0/VhFg8#Y
%*m,%p3Kp#&K4":8/r6YtKu4RVQW.OaV4($`dn;eP'uVB\QH;^]Bo5*@o5\_jGGN\+>AD<]QW/9HK1_26J9d81D%W&U()(Lu$&e7)
%O,Sp&[(//aFV/4!DC#W@8PeC(-0]dg]k`tNetRkZTn\uQe!t@Mm6h:Hd+"S7G4i"Fb%q11nQ[oi0=dfO+q8!BTqT7qNa*U)#f5fW
%'d#3#eM\-+VA@.6*+eC"*KFaq3IK#5ZCM8Z:7a'gQF5($88sC=Qk.H=FX"SakD:B!C*)G6[3[d`?4id:F'['IhP&?kjl-IDNXAJY
%3QHm508S^g]+E+t#5'f.*-8WX^scuS_"PJ-p%-%M^(8!Rl-HVUX#rHBD"m[2^3T\DjgVjome>=/TDn?>pTNF9_9(lU`M.#LKXfDp
%P0T860e'm<+kCNB#o-l?SH$ee_>&oX#j!MqP$HP6\ICVr4=P:*<&>4%)iX[r=d4Ig1^>_-Sp"(n?)pPlUX"RK6hONccGAA!M'43p
%UFm:.1!hr%YTo`_AL/6sr<b1n4K#%p<j7\?U+P-gr:F:k?iK#JhJE?EEM^r\GupQBTZKNh]Tqkf[I.K`&dG%%&#j%BJ)`t)qbnhp
%K7s:5"he0341^kQ+4l74,=1qq`Di/8l8VYZ--T1*U-Xto>\YJ@<Y0J;$^c?=*^d&d$j4BZJ'$UdBb1Ld<^_M&$75&T?(5M/3)J6K
%\eFBJFGH79EEV54_+f#eK<D%+]`MPYS0nt@\h!APUta,5:%fK7'm7oTT2Di<iE]\\1ljdW)ZYQq+Q@&8#iUPgaC]Zo@RN'B[->i.
%!\9?4?AbW^IN[e%nnR:NlW*c;`Xe8/TGQ,o208FhHUFA%H?kKdc+pc`mn1UdP(Cg9N2fcD-SGcu&PnFT]q2QSI&:"=Wis@V`?SdX
%KsJRCZ;+dBL?7Y6e19/eg3^_JIdF(EJM;A1i<+gF?B,h7XMJk,NBk\8_Z=V"W84,p,hB$g3aCtT&/)u$h3FcH>sp`M7DqVaG-t^G
%DZhs'//DphkQ%uG&JWn"U]h4,N)#.?#@F%BTYN^NZG7hAkb1Fm.9ZPe#XFW.Q`g=8'N54>k"5MAI4ZJ'C!nlk6JCNuQ60RQXf7in
%KMd]kUion+QN]51Od-0X:NYc%9Q24UgP^34JAMdJ1.gT,"cf_;O$E><-X^8=DO1*%lpP#<'qhkQb`kO;cA75g#[Pus$k)'=9=+8>
%_KU775[oImZ$0cmPh3fD6;+&,L4ij$TQ]f5dAo#t[($0R)RNmE7,Rjs!M6/F)-el?/&\\QMQ;\uFF[%3c:k5?fHd&Ph[PebJ9F>e
%_.p1ff^5Em\SbNQM`Dr(-sOZ366A-9#rW>PQGoCc%U,;0B",6W29J8J4Z!l3Af2U"2apc\*0s;l"l]E1SC&l;b\--B1Lce$".@[p
%$Xk.icrqC4)T&H4:&8QAH()_?e#!=5YM8HuRd@_td5jS=`-9P7U-p`Zn/$OaE?1R..:(?W7@sV97ftJ/[Q*IOBrT9RfoeZW,YAJ<
%0i'b]4iSTH<+'<q.4@rD.!V$!]%BM=fjabG$i3J;L7*;U-U$Q1X%N]9Tf@V-b,g_dQ-P8]XQWZXKnc)@=Eq03!`,1_05WNd&u@sc
%Egb,O>N%`f'>tZQ;&AmnTGMMs<cig>$is5ES8&Q/T=0POl="6_=O4Jk?oWn?L&p42^WB!]3/0()@Jk;`9ACh7SjZ#I\*K\Z>J[6>
%-`j=&F97<.laS"`dMd$Oc&ihVoGmR-5YFD=L`U+rn&e9TlGUfdWOn`.8d^TU-WhW=SAa;/VF=bs!U"\R#M934&X!2aaW%H9L,t)[
%'Wf0l\CXWb]j:3kGsIo:HnSZRIfPNC<@e+C$K0$b<hnJ'oJRI+m\YB?kTBTIM5uT&@tcKU+,UhR;JiFjP*Fi;_#^V`P;go-K"6iM
%8.MEHRi*j<8CRJP\Q.QeQK'OpKn`jBO9:lRL2&!don7I!AVAp)ji8KQ1lUWt!j#03X#Hs+N=)cIn,X0!/Y/2")qW#.]KT__Q&Bb-
%de=&KFG;pcD%*dY>8"%HYo.B?CMRlG8&PZ*]CfJc,NL_W4VY./@`lgcLZ7\48<S8_)W.]IJP:nC;o_':?;,9_3k>IC9:HOA6>&&#
%=:mJ#h95kt86d+;="u(uKrWN8Ge7&rA7-*1`L7Nr>q!$NdD)uS]HXAtk^n0n<I(;`eC8W$5cX5EI/!(b1>q7U&:fFj!]u\UGG<Od
%=>grFR<C#a7j,'%rSd8nJ?ZE7Y^XL:&9D"2"/_5D8!J"[I]R)q!AQtu\TB^S1e$&1n3AlDTL>-iH^TP\<F\d#7F4pe(W>,26!-Q,
%1+[H:F]fFTZruc2m)-G'Ib58JZ!\7Q@2G3SV=o.P;3-\g$mbo6W9E/Z.H$?862eap'[Q7W/E"ERB#+7R$WWq"Hj=_bQaRAP?j\s"
%*#OKd"XQ;D@9`ed-4F:GdoeA%519Td6UX.!64qRR.<A4I5ugI8HKieC(Qm^O+ZrV3>YW.7o8I"5WXjLuK(i=`Kdt_8#NoMGA;%.R
%"b6ab=lBX*V1DHNnGuquCeVQ3cH7oU7Hm1u@Mt)[^rWTGK,?c33bTV'3[2VIL`CI=JMFrFk&i\P?bZT.keJGZK+YX&$fi^)'6C5g
%^`0]1!-;*fH?$2L>VL=6h)/oG#\PhX*pliBC]g20A6EGM:t$T1Y;Y]u49X8%3.Su(%KHdN2kseqEkbWiW/V9V[!3p"bL6.i#M*Td
%&CMl!$0D/B0>e?c#&sjd6<Smag!\J-:>M"dUkt7%.Y/GLEY`->nsBWHMI7FD.Ubo62]#VTX7<o7\9Ni'd^'L3;iE=5[R![,>9WH+
%KAZ!a_PgnU7p]>o+qn7]0c:6t]"_3+jD1e$"%EhW;-s`51%*B`,V9UYkC@Ud4fs<8Ns,eu_'fMrW4<*Q'*(6?+p,+=d!NN9V\GjV
%<?Xe4Z6DaFH-iY?W&1#\lOE3p"?d6S$%2lY>pEm=+!>lX%KO-Ln*gUe](Z+7')Wd[Pf#&jP^h**CGG)U21^"!,"`13<QsOO,&0D+
%[C0CV1F2_)'%RV9+BsAuagrs";=%260k^pfJA48Mm]_KaK=QAj9%SBri.\E?CbNaM75"K9)/R,G)Xh\/><dPF^(!R.J@fZ,Upu6=
%A0rTSMs_h@Lt6R81##RLBU5laZVF1KV1aqi6P^+TXO<dq\nMhO[=K8WQmY_nRX5/67q>CI=tu.M@W^);!b[<Qa=>G')"*T_mi#Vc
%aquDJ"TBa:;j)Mt(f-i'?Q1QC#`G]<AB[:GN7S[sfqa=hNa<WkX/A"`"E@oa,GnT=&VCZ_bZ7Vp#cSCP7+^qSLqbdbhdED1eLd6Y
%0sZY!XG`\7'b'ut7C0*+@^H>f:[FV$_N`l-G9pjO4H0W!%!HW0b`kFL,].U+BUcsg8O"eG0B#&NkuO1nbQri_#?^-:^aQjC#?OX3
%%TmPp,tTGJSu4S9[/E]>i]J.>BGG#U5"N<j`c]Y/U3WT-)5i,+$9r"p+gC:r2aT;V<<os"VX5Ml2&EnI]+7E`c7M;<i*ZW-V-Sif
%(h0W[;M.(d%,.0,!^Er7b;dV"j@)=OeAA^PA$JN8YJL-*7amh!7B?UFIkdSt/I]:3D2ImlOW@AC[1W;1CO365.P*A]F'pK5&ddb'
%\#B*2T/IJGi?8oCF9dUtjc\P@lV-??--InbnG6.oiYKN_A-#41]o2qMUU\B/M)(_1rCZesnC"n8,^^pP>=;U[";mqC&5PcZOFY<2
%R\cB2KFOtN@$jE?(pi>[_)B<8C)Kc*F,8b4^dF:t,<W9YBSF(])6sTo9?iSj\Hc<b]YHd%U5[a;OXE3H$kl"Wp6[V&R;rp%o#ul8
%]ShR/B#g5Oo.XjX,I1MBrb6rD+>#@fa8<_P.[l0VFD&Id?74_6@XX!flcEu3.-bAP+"*76#1B/E+M5qs$(6m[>Gn\KcumF#Jhn;W
%1"DL%BY;=5-8pQ'RUZN^&d"k8S"YbFG%iKC6VWaHd#<]EOr>K>4/aB9/5?=;"+LA)+Oa[7^C-1iUF*o5GW1^7"T>Tn,FXIti<qs[
%)HHCu*q?49o.i^Feuj>H8r\e&>*`O%-!NLW#O>_+>Y,=GQ9(701t2mpLBnPel6R/SmYOTiTqnD*%U,8Z(hK+0"ATLIA:Uu$-Yqum
%L(<XgldX^fN(ro,3ikT4ST__*&GUgoiS&h5O?$R6K9J/M-Sf\7W[T@m:ZMln1h@6<iG_0S&K*hi%)NE_!$A6"It/-<DuaE'Y;"_R
%p9Zn=1tjG[KZZ;,,ED4d]%i]](+^s1p][>sr*,kU"C!37l4KS*ab%?)],mphl'r;?UfIL;;BHS\2B6tK+GPW*%#<6M$7IGHg9=mm
%FockuAfWX*?&+R+'d\5qU[=K532nfL9oUBF4_G"m7Af;X7HtL?8>Jp:e\U5IB!r8OJ3p.7Mb@.L+.D(1M[TSHdnbf<_Lb(36C_-u
%1cYhWB9+`U/QioS7Xd/QPmPP5d74NMf,Irl7&rb[aUcTA,%O`\[YSaUJe1YUW'P$a=>r"F%QJn&Ko-q.7p+..AMF]?",S]@0:d2"
%_Kh"&&FcJ8J-kC<:O=W"Xc917/%CJq"'-dfb7pa@o4[WrFC3G4eTS%l9_(Mk%/>F/--L!t%YPat7OII.:V3aeS_1U%Kh.?IYgNO7
%jTZpS"jr]+EPJM4MsAOto4Dt^<[]-;8*G?GQ=g%pItX`9&*6reKCD^+FmNJ-oq=3$EmQMqYR![L'M-\%_9c73b`AJj7LObn['Yrp
%/8A)=DP30:aoVWEF7p#VWC?t<e72i1fa;\^U=(*."#?e]!EEa3A-L-ini)[HLn#1:L7*j^Nhf6"M4taG0*P349T"u80iaWh.[<]J
%>>=!CLX^*7(2RNjA3Ef7BWR?3D&I\U07"J.(BG314(373Jl\kLOg"tilc9!J$WAKb;..%k80Db.//+-:7&qM9P]MBN^_R[[!MBb(
%6V@I6!c3t>2:+femprZ[G@cJi4M.6drC.SGq/3I%).iqueIac8(Ih"&$kW-(k'i+'<0"=iW$&V`FWgcdUD]*>PTN62'H=su$k5d%
%^;X!kR$3J3&d>`)T[50G,SH:*(AP+9'APhu.m/6IL($@XNZc&9/Bs>(%VW,Z,A`J<f/$$cFL?[[LE(Q`1rBM8njn#KFJLA**E-QV
%0G\n"DBbhMGg-O`@Kl>"^?T11,En2i\tI[%JqUm0lmq@tg4HiPda:RfG??)OD^hG20=+ab).o<*r?_V;58h:N-muB8!b">P#`OJc
%-ZnjagOsHtHA%8)hBnhERK1s'Q@X:u#b[sNUD@t(V6C(<[4-7\j/I@!dlNZqm$SLgdl7$R4haR+*iM1(i"H04=UeN0lmEVV?Hq+[
%Ik2c=NOBl"K4ru0K#1ZSI`,6fX/%4GKYTe"%Hpg/Cl+&[1Rq7ponXrmDI]`V)7;I?W_>f,!3!e/%.k,4SU*_O12OHf8&Z(q5]>"j
%@&BMHS8__q\qc"E5sTHu>/*Y[$S6mK5r1WJ,[rh0l_Qo,ce\SE+W_La^;Ts+5SCGjL:WK'"!N'>qbfX[/FN`sF7%/Hl-pU$!)S\:
%o!BCWgd9eq&5n8V??C<h;]dHf1lNC_A[P68;=V"t?J=^9s/t&(dYa$e=lN&(Kif]-eE[)SZ-[7"=KmHSXF_eqQKrnl90[j&^(!R.
%J@h@`,;%>D"HULcAMR0R=AFZ&_8/H'd0e[IU$<WTia6:bP@,;DN)`T-CoAL60?kW#6t4)STi!NW30D`q0[RA#+jVF#&N`EF4$6,r
%"V_P*L0^34$^BF&f%kFb7=:Y!^A6&S;qjHE&;7a%_S?cX9NoW)hH=:TBIXo[+.#kO+IX335^KeFPsR<-*oGF)nI4+eaEE/kiYb^'
%LpAeoJX48"`(^,,-;`/7S(@o3HI%h1Up_gXA5XWOdY*Q2H-4p,`MKiiTb<'P!,Wn;@@B47XNQ52;;.k)6;u*Tl%p,i>*JJe?r:U"
%H0G('Bp_C8knAJC@J8aK#aDRbOR2jEIm)AoTc)oJHl3k0!*W^82^1I;_(&18nOBf!g^fIG^!uX,3C'#Der'lt()2i[!=YNt%6g_$
%2@sD3Q3nUR[Z"`IAcaW1QU%o00ZsX3YG2+[`%fS_4Hk=39:2]9j7?7pq@5*]UY(0P!%fTuAde3rm*_si=s#<rJelc)OQ'rX!,dNC
%4$4.*lS>%]Dhik9R*o^[!Z4cR+,-qL>qBV8>>-'K*QegC3^0i=i"g!6IKCG=3\4f.C&S`7%c.UlVK15lUaTEE__J+6S*='9aJPgV
%KTJ!;!CV`GS*)4?"8moZkd;.3H3@Kr9R3lj1Xfh7qS>Vn0_4eM!#Bqj>f1)d[#4sD3b'<Wn2D.iM%o7s:I-ck:sYf1AqlSpr16@#
%bsY1_L,cUqA^.A/7(^iM)"rgkPPT*@L=YBV;(Q7BW5fi/W5qp\B'?K'4d8fJeTr8H]TelW6rqn_jX\7:a#!KCM"_W$Rqu6*YbSUq
%fplG\7c`8*'ui%s)i#3+X8?^ENcqC7h4,lM[1I=2D2;AdJ@?(sZ8'+kXi#q2PmHOloi&p5`<S)?_i1)C[?E)RA:c#5k:3/cHYq?H
%p1+L8!"8CpU)>Ip@JB&PXE_pW?UWN\P6NiH9Ft\/ZP=LRF9chh+RkmonC+\7a;QC;])fB1b0^ofi[W7BX]?F&goH0rWJd)3ad\.P
%7tq_OifQG9L_CY`%*CjV,*<'14QOI9RZ@,RiAC,g7_1e=3TtK?19m*CS2^ftC+:!tHR<#RXY5`CQIBlQ)GH,'j+X?3]EN^tJlsoX
%#/d:d;LAP:\enL@(K0VXs20+#hD8?'nQ)CGOhk%N&&a]$6>j&BM$R:"Bg[#ic%beKRGhHe0Yg<<Rb#jafG3n-%.aH--o,th&g&JQ
%pf]3cE&mFV1p)'IC0jqk)T#%M_@9Z7$Td-[MENeA==cbj0!t6k1bUjl.R$+34to<',/bu2@S91JQ<ahp7Vf25#6^KX&Qt4dOOLf%
%nI*\PdRINQ*>2;5Gb>g?ZGiOT6>r_j:u<cW2VrQ'cWHn10$JV9Z(D;mN3CU8e&5>n5JMKfB%RV%:Vg7oFH0nb"9Eg#BZQKZIPb"N
%!WdR7,T\P=q&a"Q6ZG2WOm@Of72FqgJs]5n=;2V`X;3<,%I?W.+:QT#YZL9"+2HJN5,V]#6<^l1.k.9HL,R:(!"#1=.%%7l\!gcL
%3S+t^Vb,EhQJ0,f6XYk1@;3Eu;*($dqmC1-)Ulo,!uCsI;(!OTcYR7'.$-K?AL9)9W7&X9=Va[6(UPl^#Vn*9ER*$nQdat25Ji)6
%5Uq+$TIh?t4K%C&\<cE+.01"jCh(%]<qf0BPWIY<LF$H@j5\1X/mT,9Xf4bhP-k>>(Z[4f<+r9;lECSP2cCTeO[o-]C:28$&D+">
%0r+[g8Y&O]-bKMWe8/-EXO4p0.$nt#XGASGI"ah#%a^@iG?G`\@UWDQ=U%=GoH(/!aPI/$LCf9E]I4a>$1mX$L`-=_@"p!PFd*/c
%"OKDmLF_II/"9HK)>VH$'L9<p<[,6])5\2;N2eh`X?Hgia;?GRj>gnM<]$?SCCIPu/Bb%qq'ZH<)+2c@Z*.#e$!I=cZfXp0&$\bX
%THIOLmDNJ"*QiVXki'c'/F]aC*;3>>)H'$\rGM6-!@D@"0!H_)l]Ug;d$.t1;RQ`>^X:gb/7?O,"e<2`FW4>F1f.9]`2G7%%o]$i
%#+g>2YWo0.4P^fCL9%G0d'M,'k]ilAVc@i-dXueS0:Y^d2A3.`@T@rDWF_1r[>Ug;.q7_1mNX6Y2>VjqC]M8BE[YF"0OiGN*_*fO
%d4@b?1dGtgH,_,GGlb&MMue;Sa9(j7CQ'-F8"TK1PDm0i,3MBF*_)=_6DXlLlSY$+"_?-"Ad,&^(,]k^iC2Y+C6MIO&kN[;6%bqN
%euZ:bl/np\6jmAQ1k`+kT\kRICIU8sJsur^dA#mUTEA<VF-s,%'d$S`&k'P5_U=NR=k@j/JTlYh"]7:BVY<kh6?tS^G4ZuunO;nF
%FiZ;f&I4&n+:sMm^M"r,+rEmaKc#<WdI)Dbis-n_?!^8A`&a%1#>[8DlpfbZN7^*$L8ni=]R10$_]#7tO+)gNh4iI,0Xa3YHVMn#
%#S37GSEeXe&J*R^mXFDun'nfi:%*S@HZ+(YV<M(=J,T9!mr"c1\c(Z+\\`6,q8D/QH1pgp_lN8*qXpn=-G@k]?bcHr]CVr0h+rO/
%qr@^p?S>5;]k8'$C=]@t@Sm[9Ksh3^N/>(i/9e9o>E"P#jTm7LZ'RL##%Y]r0Zn>=(t'UQR&adGR[A:b68:eWV.m;n1DU>.T[4+D
%PYUN^*6];MBHlVk?><:hULf[=+Pi$V,_[.:j"g+mm,(%m8LUWA:N79s8,*p4Z\Wg8T5Zo]oh52iE`8VH['KU:;ZRcR,+0&Fi1hGk
%.E^?oh[M@MH*;N=d2HlLGe#u@JHprVqg)Ot/L9R5:@n0AQo&!r7""qkUnj`YL43FYP#A_XFg[W2&(:\)dT>/;E(<>%i1VhCd(rD>
%B0BHq2]G[5H!2Gl)aKlJcM4>U,4m6;*ot%sjahi=3X_h(TthZq):YRCDJ#aR]kaug;Gs_ATSa*o>o_>&#]o!#@a$p91!Y=):sdLH
%@-"`l*g!'Bf3"'PL=!eN4ZQKWKRsu!D+Vnh*?e5b!/C;"KNUXhAKNKte-FWk);IUqY4'^P^b-);J7Je#.!/ugknl4k=t_k.),m%O
%NCA/_8^SY+CGGRD2A$<XOMuj@$12k7W)oeH_!":O/6^,6@d&F;3GRWCk>J!hMk*?2Q>66X"M5RF7a-J2Y=QLpojLY3lNUt?-nm,=
%)"7,kkukCeZdrI#$p]^,!n&\<"6I+#&OJjJUs<<(Dr3Cn75)p5MD[ZDL%UpS%q&q$BK7"ln]?F&M=/B[oIiA.3Z*MOP[WC>[1H9K
%*O/7j_jJp9eB$4X&%#`X,LX@A>pM,"?74()6rm%WW\,cVLK%b;7,kLd$#4/<gTe;'/HHO@pib_/.[FFpqErO(mO``6b%%-3f+SbQ
%U<N1?W6AIM!i\WT9)*#B:b]MEpSp]%jS9Rfk;-`3o!0q9+f!#H9)()D?*e'qa6D-]W-iE?;t3c\H/Re[2I^JE%Nuuge]"B:glgS>
%BtXuA_pFQTf4,*NI0H9m*cd:t>.TJ1^epjMs.G/bpm8A1",1uU5Ccg,`$&%Po8%::$qcg4V\RROM^hm@MC5Wu.kpKYhfc-\"TO]'
%1eH`lJ5`hOBW3m1?F4C_G-R!*]+g,TX'TGb[A\XUk&$i95R"J?AKu^h+?JdRL'"-,Ch0&-E/c&UnXMYd2UYT`f$I*UUU2",g!*>:
%N0X[B$+(8Kd,AFc:/ken;6Na70+X1qef6p`fZ/#72!W9FZ9SI>j7;6gaCnn2^Ko<%>A"f^aF%+:GGpnJpS()G8um0CW#bZBea:;?
%[ja`d$_Pp?,9Iq<(HA]3@Rl%Y;:cnYM0>TA&lM-,U$i&HKL'.8Q&J902@.A_c"(]eYrJJAW$>(@eUgNrPf;0JG#dM*7'=15L.':<
%8*)?A7LBK),t+03d0^p]VWB%d)?qbW&=kA#c-P0faQ3Y05[1U-MsQ=WY<Wn*(0:X@F[9bgNh_maB]^04<MXbt)kic-+4',,d]\rI
%VjHqU6tm@4ea:@l")\+rNddNmV;C]`F96%e>D[V/Ac>";:)qJ[^pu`%V2<9>RKJ$>dYhPB"Qi(0n7%N;APg19.Qm+.,XO&E":6Fh
%.8s't?r-?fs3\UnRD)ZU$p7bY@:45g$uO.u8E5Y`,Wh;L]><0O"=cIA,*7=C$/EFlc>$7-e;9;\pc,[nF9*mm5m4R[nc\YEig@9T
%<C9:f('H<+JD0jFbG(@(Zj\92)JJLN-\_<FN)0Ls`][9,?3[4j0c5Y+!Gr^QZ=;8A7[pGh-NY!#b][e&'g^E\j1#T3!jN0.YfLj+
%KOth[!](c_A8Ion",RU\Ur$(DMbdXpW5PLt/2UL[\W;W`f%k^)7h+6?`G$d/-U"CVmBS/3-^H,_?Y/`\9J$Js,;SG4[BE[Hpj,Ie
%6sYO!-V<.K!gFAj>t?:n^qEUo"I:E<LI_c1jkbuJG77:9_#4@F)Q4qOIH1b`IMK18(3iAY@54!Q86e=EIa3&kaOb>[d>jQ*l<MUr
%=tF55l_:54%Jb1_A5K'h8ZkZ^ATg[FL_1=nO^OiYpTi@#B_7&$fU5n3h+ENiVMg7+D&Pa;*J@An`%&th/=K0G=\@h4(Ql!1WfVHF
%!i[Sl$-[V\Di`Ck"C0(G$elnV^m3a9?k5YG:difgG`n>7CRi8L!sl_.-IUXf=6RZJa?3#uOBu4J4c!nUdEXEaS^LP`^^JF:/u[=Y
%-klqc:+i-VP&H[DJIVAYds_>[,"(,ODl9T.`KWS*AF>d)Gnm*+Ln$BBWoVEj>;RB+.+oK2d]fsnih;d*NW,.C]C%,1UHuVQ'LPR<
%KOY5M4DLT=R76$7K<)?q%00<NRd=$MOA.C71f't=NbA>D<9/\4iu%WEf`aGIe+uMBMB0M+i\d'f83(]o7K^bBrOC'`JI*op!LVhZ
%5l@k&+[H8r0+4j^,1i2ga1E_$WapoW?\#O8]nJ*XbLr-t'aXMX!#gqo0j`i:"$_38r_4p&5!G5<g2M%*1+Z&+VdrGY;6Rg6ca8iQ
%pO]XWD]H\,JHZ]^CK\_6Bke:&/MniW%[:"2ECO=OBFoMJn!Fk/HEF^_F'f;Ypjh^9L/tUB[pcjp&-2O+M50]8`e@+O@EKe(!SN(a
%?5U(ZJQa1K:V^^@W`:18@$Am;Dm9o^4@3kn`g/KU`m\j[*ta[UrTQ*qVD:Ik5lEG+T6ZPT"V(AlA%YQ/Xoh[rX.%;qQ=6b/7MAue
%k6dY\EPu>>m^n?2@\g467PHOBC>rX?&U(-d(k_a'bdj(,$N\O7qJo/UdG`\*%6t)T,_K!\Z--e?,m$WqRCp7UTFLBe95ra^Z5B?f
%8O&YS=Ni1JT?^=D-op`1NabJRV99MS!*[C.!FtqAFd?iuLYs$rJ6P;DBPh^Q"pR(KHj"kUl7Jq0l?_<=MCGn8[qIlj9@ueihXcm:
%4X\\9'eMl(X;VkU29jG)c"^220bRlRVimR82+rsEETr.1^heDeEPrm]WT9dFRgd$qaAe]kBH_;UOsg+2dX)(OP1=UTP"M:9FpU>-
%J4X+%V+2Qt5c(qcHDr:9NWNWC8?j"G:`#joAIg&l5e\9PiKX6WI?CP,$PJgl,,u`DKP4tK38fPl2i2g6ebA=Nbe:*9+h9SU^c[5!
%>;C9To?sA\CQpr4Inj1I-Foe'^nB@.?qBkB/<3r1R?WS/[1g<_Nis9l`Dp/Xb1&d^/Kubm=plj\&0\#9PRc*lH>l7i*?nR!d38`V
%6W$I?-B\ED/aF,=Bl)ia7_(%DA*aTJY&E#\C&oUBfBLHkK=@pAaBf<;'%?u_BEUZNdb-YG`'9)jVAc/=[%`bJMli9M&8;9,AlQJT
%^[rEo2Nu(09R)Mt_?i(d3qb(-R$m2"_3aiCU:!RC<_,H1fgEfE"X;%Qs02Z\A:d9,lZ&?@b/u\oFU4NO<+K9Fos5A6Y:^F$$/3R9
%+oMKS:=dE.AM/5koEmY.JXIWV'9f'(-WM@0MQEm@oPPLH%*HFCLe!jTVZ\tido8KKJqMdgJcUW6`h)+&)$UAF[]2O,FQoOQ0,RW,
%_LL)f.Uil)/tJMg3@_LF<J_iUg$+EQ*t*a#rBS@e7HqHOBgd]<.tn`D/m,5eBg[A[eT+jN<3&r8-kV9V67<)-4]C:)o;`U)bSUc2
%5L!Z<XJ$J6<L(CH>55m\+5ep$b+S<AKQBu2`O$H6f$rroP5b+&DQ4?t_%Tp293])=qCEtdBYe#AC]R\:?0Sc&>=ih>8g$76i^m#q
%G=I)Q_;QWcSA5fWjdYotkZ(du#h1LIHD`2rL6cH5E$\Ag-At-WZB28)IDV'D6qrJCRc4-7A4]8U9nGHq&Y3AjNLD+TR_BiCX[;*c
%gcCo=8-#CHU+kfn[?A>lCp/QVCkehq5FfsZBHb7W48aeFY#K6l^r\%!F`rIf4X"#Fm-uA5<8r-R<NF0[Psi8-,H9X)0V`[<Y%-SL
%<up(VdA]SHf?6@0jiVOdRILdA%87:3%kuuQ*A1&'B*Xfn=<Q:;]XgM`N0#V#AO:'%V$EIj6'2Z*Z^MjrM]K]iHUZLPR(UWm*Tn8E
%Yirhu*CmYmafOfeZ^Q5(#HOq9*,E6NM:Um$Z<Iqp5d_fg^D^p%$l8TWTZV)A?cj&^9+$;um'D9Rk*3e0`_Mq<@7E+36L-N2b\oA,
%Rk\,"=W&t8#CUE`K(1?`bn_%*=k(Z9c'DGh-R<SLh!?>J*f3LWMm'&j$32tX.O(2r<[q?HH^.iFD/<qE\?V*0jpYJAP6:qV;?7f^
%#YpNtS6@IZ.1nfZhjd]Q0r:(-84=?!F`IPR$='*/aE"AM36NFCe8AR$P45\kW\VTqc>Vbp,'4]E?NL:7NiAs-o.$&H80Y-T9EK*>
%&2a*R>@at^B2PY*7q,PWN&M]_ET0=I(?YQaNDM#R.ZuGd^1Z"n_S?;GM9$f#J8d4OM:TNL.o`YKV,]l*WV)O[/6XR*]pYUWBod*j
%H<i+\'GF;?;Kt/Q0d9Q-p"a*TCbRP7>O4E`5;Lk)>=`JqN/+rVB4F;fa=o;_/30D#*LdhFrCbq^"!P:NKZ@f_K`e@],a9`(!&OR_
%eX+p<"t@s9d5%`EGhmY*!]MnX5r1"8JJ)HNPNkm,ic]hc20Kb)^=Ekh!f.-.,b.T"8.'&*0r`bN:bfsrU)teU;)LHf=Kf<"C;TY?
%GN_dIh3+AeF1@sI&S*Y0`WS,iULh\pkmAjQiC:Qs&?[_X`n33A?*aCQUh&8#h=^sB'ufYp=D9j,F&:VIcY..\%P[B2b@lJ?e?C\p
%\erC&?/IG0Qg#(h16YegEAJ9+h4dRZ`COr<!*-LNJ\_H3QG0QJPbs6eS6CNXA0O]Wd9SS]PD3pLlGR\pe^!o(::47_NIr0M%4>N#
%T\+I^(q<:1OM_q2"m7!(3MG\E/>3C/9IcG>X*Djs;,SbVLPr!$b=KVB?^>'FSDl(t##Ni!`J\^T%n:P.>t[4''F3\j16,*X%]1Rj
%IFn;5>;^Ss%@oK0k.7@R,odYMQ"B,7RlDl%1ipH98Q:epasE)/4e4;`PrQ3:8DNI&;i*.XL\PmZ*j2_W=Ll=h[2;;KjUV$ln_>")
%pir4P*0/W&Q6elWE24J(c$)f#NfPPkep50LJV!UXQ8ZCl.4oD@L;VZ$c**r%*"l-oD+MS'U]pN,SMM6f"\[6$Pi:<D2`bGnC6j,"
%$,c!hJspl#(QRk%`U]$+h.%c_"!GT!c>A],59gO`f#>crisKGE//$Yu<B,&8UH>4X-b)Wt>[n*GVeM'+,mn9RH9@r/0AOXlX[M-h
%59^]]Q71O.CE+0$SL>JBKhNs:7,]8Q@^LMU'Ft*Hnu6`&E%"U2:iC$aiN4HM%d.lRh<cm9SKo1:oMMU6']I+K6H[,P#T"r*<jF5A
%3+M4B5r\`"n30Ceh<Da[YV^'(#:C7-8n[5CX_985OFr0p&ub?Y#"S]TTRB0:N]r=K&a7Hsi7]s'Q\cS"<*KYWrEoimeo8>ueDR"8
%EnJoO9+B1[i=MY'eDM;W`rpLZ#+o(2C2e%`S^P+u':@@c)<j(=P[giIbRKT.$dtZ-dmtVuh+A0k[VXU4[@($S7M!dk+a[hJK9Mr9
%?MKg-*6m9HAak>9-inT$K--UW?J*k<b7@?!)G'JX#:HM%6C.).+'a#hZhcEIK6*^dl0TT!-`NCV=nb;q:,?p1IO,9_*c%iAm0)B%
%N1$KNi<L`;0WD6;5<+Ln\=Z#6#Y0ejrNdXQ#OnbSji.hV"qI9QK6(rh<\87R_#`q`lu>KY@J9L^2Xd%US;CeAKH!-8ZT/gE\t'o_
%JKN%pQ64ne:sPo&*ulln2B2SPV#*$dn<G%7M\W5%#!Frs.A_+Cd"<"S6'^,r#:BYq/:XE"-Y?G]9RW`Ba-$FS]"nmE\1n@J@cmt$
%Le#Ul/O)4\)]ag]&+7LA&(IEHK;1kNj#?noNdGn[^[d"%E5YqC/O)5S7"i`E5<();)dQJ*#M7JX-(aXZHW'%X2#+mMW>4G24ZH#d
%\2d`2`[]$]l(A:%3k(4CGXDuO_Lb2@^.o2VAJ,Y>\@-X+`Xf5sK\qb2I(`\G#M5jdI%L/Mp%@P/)F+#n$(VN15BU^c](X3YNYZYn
%+e6r4Z\u*D%!ljs"<EnLN?4V&SJ:;t4h/\+.B:jLHR4Af.m5jG<n9BMl+mD$.1kA#_1BR>"KKq'j.+7$75sksT#Gg%YOpa<G"LFB
%keY@cX+]Ff4ZK=A&WRen3!"QK+u_>s>gUEO1Oa:fQ:1]V5<)h[h@4pQU]H415HOe@A<<i]#"a8_Oq*]IAA\pQLQC4^SKD*@C0CAK
%f1S(#i,mD7leD6O8N<P.Tc--Tl/rh'ITLu;N.;NX)F$3&(IK]cr8?@APbI6b&+6s65\V`53/DF1D11OOa'unXkeRdi+_@gnQ6.*k
%\ts*g#j7%0+ZhtLQ7?>i1I3u9\clfjSKM0_2glVJi=LtK`nV"nX"r:AAH@_I3.qQSGCjd(QB0"U&VQ>TWQ)4VKO^EN6/N6,K<A-u
%TK>G!ks\6^.m^ZIE#S)k5nIA5Vs-ea?5GCs2sfJlgQA8]ah\"Iem&D<30Wr!KKBibQ`Qn6c4"$lZ935<nD'70HfbL0J;$+!_6LmH
%FFt8ipDiW2-[5i)$3/C$_20&?cH_<%XSJ\s6?'kAQu:[S^`Agl@-C:3i9Yd\mMd6-duLs^;s+6q"bQ<qc[=Ya%eQGU+#kbfFFPe#
%"%S8epU&l]YM>U"$p&@[);I3FZ[pS[0l#+$%QlJd,-Ph@W<_QI)u(GgrGS"ijB2EKr#$A3fl5'jhPn7]d7$9BD(4`iCq6r.CJnPX
%]TI/KM_?SX[pFs>g+[j5)7mY'VuG9A!/NL9888Ei^V,kCr,I#c)oD4_GJ<_,=lRn#:k9i!:Q)Sl.WAK2g_%f0^e'q"a/=!0_fCBW
%c;``'G$Bg=\^`.083.Eo@l8CBB2%4ls6,Ks`WQcb_mY(R-?'aV"D0..9].b,;dG6qd9m+u1D)V@:'E.ZVZKA@GCp1Voc8cF7,W;s
%<a9etE71U-=gV+Yo0n4cDlCHSe,r[C;h<C#G"NoQ.WAG[Lt/n=AIs*;1YJ23=lBIKJ^+BnN6.>:&NH1$8KuuI^hH=q%:UXc-`\Re
%M)l5.6]BMeSHta9E+/:f9E`X8X\!ljM82\G9-[k4"O?'GHuS6LVq"$7Y4I0rcB7f">97a$Yg)0ic3$hQ2JV-p"&@E7f!K7<^_r'/
%7'mAdi#\O>d2kF.BOUW2Q3UYh`hfe"i+N]QgT<TrN`BUDBJr!2Hn(HairLMuY!hS3%lhaB1tZ8"i7'O)q.r1O0F`1)bmb1C-4]c%
%mkis_<4+tJ2`0Fm6^T/VBYaGD*kcDIi346CCU<+'kK8WHaP[)CaT&,Wg3LK]6E\K@%CdW70bnk-b$/[dfKfV".l4tn%1P:h8IEpA
%"&?ag20bYrglZ=$S[!_*4#OLDZ[e6hPD*0Z(3&C^E>Oqd!mW&=8mQ'1B?Ob%_o`&K`l:WA"e>%3</\Qo:9Ql!iT&&^c70i$_8ZP:
%*[B@X?ibK,/$#2&J<QCaO#.>co\dT'<K.&"?,b=Y/Hn*AnQLr'"ZTiGOg;`#J30TTaBK!j[Sdia$?3Fm>Gt9tc5)YED^iKd.s]mT
%M'*F(U(G`*;Lm6I$-)a7%WM-n@OI<@S@k1^3gr(EYn.HI)B@\8O'GgZ^j-E5H/=^7drHpd+(Q1qqDB*W2`\ZFe&f7T%0nl'+2+(r
%j8au48*[h)!=kg-Uq<#sS3fY5hc[a_bbdJ`c7IllRP#6a\Ea8JK*PY<D66H3*cNr?N7iHk)<g6):n7h2W.;1CDhu4!edPRi,&hpt
%:@8Q'35(qtBb5$57;(nY'7o1UXI%T/J>3?QAB']#J5\\<WjhSMCHQs#B0>*c<]7,+"0U#/ao]kr!R]"@$TM[f'a93nS-`\!/`*^^
%1J,NoM$9Ej(cQ*k/Ds3pbEe!qZ@F0aWe;dk"e;hIh*$-t!@K!gfe9>Z^01'q"q<Q08]6<A1uP`.PqQBf^fg\/YcT^4CUGMVY*fUO
%<ML&f9]/V@,8"9q!f*VG]SmdVE(5Q&_UFpgJYhU[J"6lc/^!@f@0/qTo>3O%3$)M_a3RH;7/9@ngmPsGBh5S51P,.kZo9m:i/gRe
%T<0o#@u/734.*f$E?Q4DL'\hDU?">*#or!DXo/G;3:kXG88D%-Z>3*>M857fjK[sh?insX0]6mh-?/,=&WlE[i/Ru?4k$`J[1mbq
%Q44QgD;Q2J8d4W"'b>Sd!b[*$GGEtjJLeNI28<BBR/'7+]qGL?DI#!<f!=\;5s1\FgcH`Ph,8g107lVO8QTG9DqtjPE:42@hGSp"
%djhu&;h;jKY-jKM.WD%t`J(`uJ[>+G_Fb!W_5CYET`R^iYN8f.K*iTThC:Gt'f];aA_A]J5m>OPY-dCt<o2,4guB>'E)qLor45gX
%,NW#d]BE5PX<Z3+cW&i$6;o?9irWk=)0`+GADh]jXIS`8))trh[TqtsLS/F&qh>IuK!%Ji\\PTV=A\/^kG?lfF+FGk2s(>)!_6<1
%e+(QaXs)5t;Lp&!SQd9H.WDb^UGc&%@iTS$O%ol(b^AOD2C`[96W[^6"HKSW9PXLN"O;dg]Foc?R%_u;6NiF1;TksOJKoE?34gnr
%K-sa@?pb)m%LgcAF=M52^gli)5m7`!<g]gaJ^^ghSDfJ\DRTLK2I,2*DS!8sJMY<`UoquHNYYY0DRmQn<qQ?6Zn.9.*V-G[#*&o=
%pMJQu)'-S'f\+(9q(Oun+8?l6s';kL#P3L&AWjdjL(E&omuFe)`WrXeb'io@%ikF"P\rn_q5"33(=FEJ3&:qbk=)-JB2UaH3&Z0B
%R*;D)dub02koeL`@YbM%_dlN(%3IQ2ULs"c"e]%cJ)^XGqk]q!;u_jKJ[7ZLT`15fS>IPon%f5=d3k^Rhub?X%;QV9I,O4,\s@sZ
%S7,Ha^i_h[f+UrgI,JZBRP<s@0oZIp%m"Z'HP4G=l+h;8VV$)RE4.IrGs_h^8$K@ndt-NsZs3hV\FM>(*cXOP:(Iq:p4EjF@JlSm
%8d>jX>\#C'l+l8uP@1l+JJ/u112CM)#9$EQJ8X#Td7ab*_$1Ca>04fG)n=qJdL6N0CuB!0NZ1n9)`Y)ccTHrM%30<LaJ[eG^`>AC
%-T.I"J`AnX.<`T5%cFKZ<Y-,f3*Jl<Yos3>*$0K0K*rY2LE%WnE$hD4oo'4t_2O]/aoma;<7VY'-LbV/Tl#Y%JHb0I<uu<;/>94'
%i4o=;)$OXgE2YDm@L!3!X8]/,3P_-Oos(=nDmjl0?iUEYU:1#T!Sjr_+o@N**%a2u`W5G:HT8"!B*N=:feG.Z'7e!C6+Pm=!5),r
%rQ>/"at5Y>Sc5*E'3G>Up2;qBjMEeJDq+<@WjIt>KC96@XBY+2fLpoW;sNgF7'TP5_#(>MD+jd9T7'jV^U_BB;g42n)d-2mEnc\)
%Q_7m-KCg*g'g#(@9)?eE;UT[8DmUo]GpiQ&$NbKUdVhZ0lb`tl2a#>C;1=/l"#f8,n[k,\%`3/6i]45:G.qn)NU_to)[dHFPtq$Y
%D:A#@p5T!T<mR_Ya_7*rb4L\&Amf4)I1rDTC=&C5S'=VA0rAkI!!=-5he8],Z=WlM,ZSY2d5RT0i7]'pGB8Yn%@V4b/=-oLQ>bhC
%/%b+@nr8npes556OU>WHFFnFI]^&s[Dtq#8fa`YlRm]6'^7F+"YpCL?L><f\@Y/6)OF(L.')UnJhU"<OBll/=2Zfmf^[K\/MVF<)
%GGb('1I#>FH_Z;]H\:%A3H?\'fl2;5R6cBimZ!OpXk[9W1t2o<8ngZ\NA?>:q3B\R$5N9tL=mMQ(<B]s`86GZT\uO8H8jSZ@mfV-
%n8tn_,=WB_nH:7a&:4NRVe4d@HP?<Ik07<--LP5u?^\TantRm]bNt3r`IaY^#IQM\EU[.KWP,QcnKS7G2\nIE28`&RNKor-oTn2M
%-R*DN0RL."Og9=Gp-pjGm@a/B$\KdYgRF3r,:gs]m7e94M#a+$)qG0;on2!<('m:m>Ae?t8Mu9ggDeN;![M`(H_X"[D`6D-$:4Qr
%EdJJ7pWX4dDfQe/@p#@".OL9tA<#E7eke+gop+@&VHHG?\Mq94nRX$@V?t77KFPINJ8hVtlf?pH&I[9qjPGnT$VJ2mjPFE.n?K(5
%h2:JbUcZ+Gh#LtjCrsA]HLPbtpJu5iXPDZY8iia@AkE]QKnJ*K#pm`$@+=%h-?/FgRG"'\'Gg^mAoDcD1M6s!2[?A8rXLHf2dp[Z
%]q*oI^8NfCbhV(M=9=kBgY3;n#qNDBr$8#V>AA).^f9Pfm>V=9@1R*k#!S>p`pCs_*3M2jfc0WJo5HV3hR*,NZ>%P>^_b'IfU9Dn
%2r/NEN7j\3r`k%9ZSs\dB_H;A^#;('om!D.L4`(iCf#I/*J[YGYLMEZEHHDc:@2nkAm21I$%109fMHq$,R2?BT_9^)W3"oHm>X%L
%rkG<'#1Cg7nY#SF(XN]H0RKR[6pmNtS#7jHUPL3R/YnBY&pj_';F@5nHP<"F[Nj!glqN_9.J]Oe)_JW0G%,ATp:Ar)L=i!**ifN,
%Yr>i!FNPa"AmimtXIG'[=bl!g>FE/^Se151lqKu7O_T)Pp*Tf3i\QPH)kl*sR`[q`c&`nYZ8^RqN#O!qBQ/;s)8cC+EdL_2Ej#u5
%p80V;fra&dBH[YlU%W*80m@?rgtnFq>TO*[2m^Jo$YSPW7.h781idN[<t*S$pI:'=G](U93FU`7>1G,BdE9c%IFl)\(VoRWQ#KQN
%>,/=\p1@W?U+pQ@hCR,#3CE!'-Md(=p?TlgXbhh,Xk_cT@#J6g^#>:B[T+8]D\u_i%-c9u)PZq>V=pd1>e0+D9^PPYK%]gfg7(,$
%9O7&@hKQa,ds(),U/JKF*U=%UWs5RFA3p@d?^MC)3dcWu3+V6T+H?js+EE'm+L%p^EJQ![]gHckf.q/6_]gri%gHZU?laGL)V.dD
%Ks_1'--LpLKOX*j&m9fhO9s_DTh@f0"+hC8W>!P#7fqWmX.'4^=:n708Kj:P6aM2qd'D`(j,Uh)FfQ#e#3eVF;<pR5_dq@Xp*/*!
%]aq;NAH>CJ<rj.jMDc1'e:JITdsdkU_E^:hCtA[C=KRO;M+Mpu,1<'.l5cX\86Ti<Y>Eb$MO\_$TuD1@_Kp%d$0+KNqs`h+$(tRT
%Z\"`ul=-S;N5]9O3=QVL<uh*l0\jLE("']SO\DIM;g2E&X]1k9[]j7-3ta]t(CHcNj&NpR"L:l#Z=lgLn5@+.V:bk.=\nJ57ACR2
%)&i!S5>aM>R9P^fh(&NJ`=54p8083jnd"pFT\p"7NVWY)c+60;;H.AI-YZ?G;c&`384uBEp4H3W2-sPAdB&[D!+6>A7Dp)rKtB=;
%-$D4.^`n\+6W&CD#1u5dGjT0r#KfP5:Q__lH7:Bq!`lEQ</,%a=F7BN[,Y<<At<*F$"]7S+,t:@"A&X$f%<\3/MQ@qh\0tOW+71q
%b:4BMSSbDB&V/8X:U%?Gh_(/VJ0A"'G,uG_#dO%<5N.;=rf%6jd-:nhdXahEi6=af;IE+Z;s0a.UKs7OL64YaecekXB?DpFoK]/Q
%WOnmjA9/USd\qLWJ1,&-:1BW78g?[]a3A`KCfYb(_FV=s(2Gfqe,r8tTd2b/M<_1LYZs?!M,t?+4L$Fe5RY5C1m!DUTR^I(UB6U]
%;/H?&!Z3fr)+iVE$clEulri'p.V\BgoOBK<)ffr:-a7cS?9<'?K9GI4',WU%?uKUV1-%o=LWZTVJ3UJm-NlTN'#$ZP0fkK>GA,Po
%ILp?"l>opHnO'"E^^_?C.muUd4%MGMVN2D#9f'C0.Gm3j6K:(/$(^]dDrFJ)/Kci.E#2(Y/[.9Rk1nl%iJLZCJ_!.gJZ(.k,p6J`
%,F8M4;?kN%<iLNl3DmQs_)d(-5*SBkD@jZ&4ZEIM]6$mS1CbQk@c@er=i9pU(a4%uppHh+=!0Vcf+dg8nH,,@Nnm;'&J0ud*al4.
%lQBj&k3bKc?uY[7dYrd14D6I88S6>$U_&M/(bM!5fZ?NPGQ:\Gq,tGp.^0cnrFh4A:\Y&<fqX78KPVeR2QYQ^1QX>=.8uTM:#3aV
%auX`;Zcg&S-EuJ>O+u/*+#Ddg]aro_c)H;p0Iaj/9rbY"rDFhrJW:_b)[IXb2irCW:2k894;GCKU\"b,`K4LTKKuUM&r2;^=9[OV
%N1m'M$Dg7W1h\4N@l$c8+L)=&)["8?LH7sQ9\^_OK*,'lcUns[$J_J:*9:u]W=6TMG%mVBg79^I$_(^dNLgM+:Q::ojcC,[JWP]#
%AL+tK*+fV!F3am^kpl(jmH"Xj/XSoGbt.qNi\a8fLi#8@@B6&ZA[^R9W]Y3e]A.oE/I;cH]o1AC["Q"!DAlP\3&Z,Zf2,4>gOa(B
%l4YpFkS`ioer;pm4^"c[_H#2]=sf?#MG.eip_GH"_t)kbT$CmWMgXHS6g3-:qlcck!(/L6'K*$]U2Jtmg"SuHW,;Y^KMa*_*lc4C
%>MJHefYMDs&Xku+Mur4,G'j:%$ast#r8SIOf3P$\SWU1p*iakt"2P90b6TC(_TW"q-M(Q"A9Q9,c$AhN+54e0%`6trpL$60+HZs<
%C#E;:h4b@[$cN5K71Q58,m:2!`789'`Nn^(FV%7)7(s`A_C1^VMFiT!LYQ%gd*/V+@?*'1(6G!9Ye4K;1_RI=b2Vi>i0#!)o)['6
%a=fo%_6P(Pf*'Jfr?r#:d$!?Fi]WdsAC;GHD?C3Wc10A@(+i7m^lS.,6'#4"]HMVa*l_@&%3iK+i\LrQ/L&MhLJHdYKi2>ZV3/8F
%LWjHlg\+S=\p$")g==I/YY?SaZ#sm!e4fj_Vu-FIYr=7cM8n,BHRfn,o\qu&RQ@l;cBT'^.pJBDk"^+UKi$uNQC-?1;-U<W"Y(8_
%JJOc[LK7Vh;,dT`K0Z06W2<kgfk'AVDMefj7W/`[-LD5,?(gJ_-A_^VO_$X;.G!]MO`U*s\3<UH#sd=.qE-m>d[NgoO$/gm$F8?J
%\><s.ZJ@>`h)qF/kSg$I[a!t#QG1ldEkp5.mJNW>=l@po!+QIRLM&VRk;5a=)i]sjJ01B'k,*PoDj\/Jo-h0No+>,8NA"Wqb7Q=!
%B+j8qE^NhLEd/43$(J3cP<.&O]\0`Y/>\"]`>5X/%*#RV%KdOCFh8#<F';)/),d.c)hFJ(TS8eKB]1!4-K\H`da7bo_757[1mfm;
%.%Q"Rgg(3R"nK$IpiOHA;M'=]ET`"_!r*[W,e8gB]F1<6\FR9+YIY+;Fe[.?1a`!lMm7F.CLjIqTcCS1#fqFoDHrm)P!Xi5ZA4d0
%9e_g#XOtNu(s&RD!CJrUYS[^%NEpYtA/Z7`JCoR1FpGN[:lS2W>3SV*!f'R`[c3TW1^26bY>PH1L,/Q.msO;rn'\Zg?6=-qO.fbb
%N$ekt.$B%okQX;p`-JYO8ZV$TF%+\ZPi+FRQpq4.N,.!:<'$9mG)WAY0A-bf-)n\DmK:(C0RTa="Z>Ri("D@Y^VOkuO*!@*bdtYl
%bRJqoYV'%_ETf$W6_GB)'['>s1>FX[2qS<S<ZAH<a6f8QA0Ln/db)aOCuR=,V43_5'lUro@*E7Z`Q"nd63=h(d-`=>ct<&NLnOrp
%FjfQ((pcnld:YcH&IB@[=cA[lS*Zlp#HN/*5W!ZW6[M1gI!f##>d6<A-J"U6/89"h=1uqH[-2ri])-FP)Hi_MLa"&&<.ORs\R8he
%=<O$$0YiVaE(r]).D#Q&hV0s/EElY`h\DjbcsIb9:RFu?He%DF5hY#IV'S9f4Y+RmL&qEB&L.kFJ=pGtYCH,5HSaua]86RmW4TlL
%HTgG$F]E!Rk0<dLNeV:t/uk\_@e-T7K!OUih=4kX5sZDa9A5`jI!;t/$t?@dcTX$6,1>?,X\c,Ik"h3kGM!)%K'*0J,TnXQ*FWS(
%Ya>E2W[!i6$">P!YfN[kH_O5u0-*eC9MIim_gW^l/e%-s+bXQb?G1:J9<M[,KS69Rm;dZ/<q&#4&)@Mu$*5i73=%hr!"d&j64aER
%9-JOG@n`6S@04bTku??5"Gm.)2<f'cWK>-!6_#t%WO=3KkCka7JF.k637%"o6rT;EdO=es[R^e3A#41_7->kg-p]]m#"TI8[Ug?h
%qTC"G?(PA,OSNo;q5XP#cm4dtf=M]4YICumcr[Oe!in2150C3X*HM`s!/&42k?$Me#/(W7NZ)S`Pp!Dn^`ZA]STPcLYclI-JCO^s
%GVA6F7$V2A0V!bTVCeK(:OWip[YWiY$!T41ke6]9$m\1W!"hTU_&DlZ_'%D@c?#9fpn77/<MIK0&pEjF_T6$i]iF6A!?YGQGEE)X
%25)PHeq\'),)h/P>tQjh2_BXb=aMZMjVIB9#T26IKK[=#DK!&.(#;B/M9;uehkfBWaOo5n1>@sp8bnVj*>=XZLo:E7!//'@W.@HD
%+KfWo"-Z$U]@_`U\s4`I;E-%0%(+f;VfhoBnSRAKB#d'UTqXk=K8CKUigtr:,fJ7LCVF[fqL0S7b:rXYUG"k=)=%=X&).sd7>RJ8
%n>=4uWSJPlRb:Ej_ABtF.C[I'9Rk[!>!Y`^fb4[U8[]1ni&lu1Li)G3Yp9kM*lOC:<ZQg7q9nnl,fI^uV+t9VH4usIi+QS,@qc'H
%@=eOtR^-<1"]j>(orScW$<AD-f]`5o!F1)0,^X\s'JCS2FZZP*0\eph'eVi$>m>'jMMIrOPq$*2j\)9,.H"j;b@sDljD@YK`@.Ep
%;h["67Z/T1:*CU20JWd&=Zu'ger(@sJ:"']NJ^D!-W60aE1`Ak*XB+aV-,Og04AZ5$Q7N>5b0>+`K8UI<@FEL<?+=[.7g#!D>Jcl
%@lc2$n82%:!BG:%6/lI+#p'YA6^il56H&jl&nkhJ=K3RaRDsR%XNgTG_.#^JMEDPL$DE\9aG5.'lu^+so&\!o?mPhj9h*:pMb6b1
%P[J]l(n!#-[k`-T86)9U4%aQ3glC+g#mk`!+ucTHa/>'`BgM'0=uMRt!/[P<h[YK=et./<9aPon3q8\dr9M.g*kf06RJ).X=dURq
%f](E+L6DTe_3J]WjpJ&e69>\4#nm1@`*mAb+^175>6*[uW<6j!PrrNk3JK-ukEHq1Mm@.FOp4Pa/!Ch6`"=WGSrcPK$@)W90gK4\
%ahX%&22YFF5CauPMCT'um'RZG5YF)<7N6=*:pPaS(1u$]FDqk"N=t@d&7e(DHN-o[WCl%aLjGEkJ!o@1*l\k\4[h\S#j[M9D>7hE
%:\WpJ[";0"o@QS#ImP];&HLXV7ad2]<sa#jU1jfTK$\*:#C7m5C8IiiCro=0.@VYNTrjGhIbP0,Ln6p+La>CoPbCDTQT8Z6J_CVc
%+e2jsZK)CYLa=s9A'P9/-"O*9o;Jg&+^D(=e=Hi];(sGG6ir`0"sIath#^]1+-Lok<q/YP^$45a<5/VbE?=a$:!b-D9Td:8J99FX
%MATb;%nq'gs($-j4dSX*3#gp9Qq$iH;u5*'6IE/+fUf&04L*LsYV*1o9oVbP8rc!LGb[^WFWt80Q5Vrl>S*U03Y#*P,;<2)-\:M_
%=NLV[1`<)V=PFTN*&X^TE3>;d(8Zinak<=)7b.[Y@ZR=R5jYbAG="tg+ANuZ:W@(\(BW3E4<AB0ga=7WXmZW78u@+WD+mHqKk,cf
%.%5h#:MgC=Qh,mlN6(pJ<!>iE<X<Z.@6(f6NA2'X]qo0_2ut;CBqVKD3cX3`Y`^?4W$hL,*Q.eP#TDZ1)$X$ef>mptboB;[2jNnK
%[H.D[@XaAS]PZ$.=Xt5`lg]M[_B86+irhS;Ep:u.)L,9KD3FZZ4-6NZ7W:9\dm*u(/>]NLWG\&)Z:up%a@$RbMp1l$q'@d8(oV;P
%_&YC-$Wi<<"0]PVHS7,%V)e@NMaAK>5D'U03Ql3>NV*2tF^K-Y!`D"4'fU)<jVu)s&\nEt(*H0_i,8b#e:BasJeJNYFg/:H).MaW
%UgG=LKg<kZQDMhIj?<SNF:^*g6Q1;TN_(1DfTI+ZPUQeNSO]Q3KB-&7_l+h[%2.fcT;&[paUas^W%SY)V35MGRC6Q]4(3GdA)Gq[
%bIl4#,iRekFF]PjL=?:#!6dd)R)^&WeMJZ4N8%+aQ/%q4*u':aK`rfgb]Lsac0S-)Hofj-DQ!"_5*iLN%o9Kr'+KJjJIV4P.8eN\
%5]"_@g%J*n<JOijbQ+/6ff,-'=_HgZ)\hia>Y&oV@aYIsXcToN<I1c`;G.*5R5:k4ilR\<Lot?<&*s[<-j/aNjU1X]-u"CLRiOf!
%3.tH?))C8a4o?p5RWZM?(q>\rEQ<97eYNMn!0f6g$;8\iak$]iG3M5Y-X:db8fE`B"m3FTH<0(UoKoZ2#>f)+j.0gm%uSWC@S4F<
%EU:VW`4UiJ99s(n1)Ikg5*Q:?UZ;S4i/#:k,QYcfs"'HWqnsLjXte*/9YNu:fe#7!"!Fr6I3PQB+"f5`g*lU)/9tk8LH.OTEHF(I
%e7fdmUO7[CR&G:^,euWT739'E3[)_J@1i$0i578Li3fnR$pA9I@>`77e\Od>Yl<-DcT+$/a<h.KiQ]_",Xm2X5T.?X&o1a@:B^k1
%XAa^'j6aF4(2PA+0,O_XB-AFLGg1pgluA>dTVa+;ob3?7CN.uo%34#O@O5ba^c4lpn5r/:kRf)iLN#8"e9);SoAla`KDm@;&X%sS
%SQ$8LJJb[jj4?ff!o';7b\T=81J-0WA((WJn4#/Y6*-6u')!Iu!$][(/+[]m=XA\VbOGuu=uV*!Ja.9&6IrLVJ7^nR6ZAT[]UO\+
%M6U55h]R&-.Lo*J"jJ5aE.C:g2.];#/l!'9>@)TS1tn0>)9gem"JK4F'D[66,GB5B+hiad&#?9c6th]j^QL^TV/HM=NdbK<$RI[!
%^]dhE#ia@.]*'u(S].KuNPpS0Kt%K9b?/?!C7QbA4J'Lq8:dK/gITt\5Y+Su<aQSoL^6F2dM3mJ$tSIuL8ENb8bo,)iB_Zk>T_\l
%TN-O6Nm8Z<ojWZ#qWZEr(DWj#pg3a-`(*(SNqnCSO=fWQ=aXCP#mh:gG"Bq%J0_9I]+SpQ#nn9EP,M$BM#)?EdW6[I:Jt[0""F:_
%kiX_rC_0.cN[R\BX[F7]b"nn0C_,#VGX#$$L9V+CD2L[c-REN\!MUI'Cp-SXR5I,-ePC3pQI;L<J2'J>,]TV9#)_G,8r+CZUsu#[
%dOX=eBCc/$+P0^;4DsfX,?C6FcQDgL%&pX3,Xa9r7(;EVI"Ik+Z9\cdBB5=0l:rKGngoO7-KUjm/.WcX/2=p`K^/os`)7,Q:'IM(
%(tEL/?/p0DQ=!8(47O/"R8P8`2L&B9[rdbdeFlBs/&<>T*+C=,<02&j#F:W2R`m'^9GJcTEia=Q+YX6/Ao^J]J6=a#l\;,16AN<Z
%3CFZRA=i;iG_GGGTZ,%Q/C1PB!.l"L#!S;1*bUk;'fs"%<2_KF=3\X1c59UPabF2:#KKrAaQ&@9oS!.'WMR\PWDCf5-VCiZUM9h`
%jfp_Bc]IcJWNj/]$R$r*>N:oWXo^(a=j!HjC4Vp<M"h)(.ohL)=EC<XKr`BOmGt)8.7=AG:"Mp0J44gu*?=:9>,g8._+_?R/n!D_
%.$6o*QW5!o9qU"P(kO58%%.V2"PLl?bo0P,]m_Ref<Eg-@1so.(b0'8Lu>]_#/8L@J1P@C1a-JVfFY)1o7qsOYUGM4_Q6-;NKb>X
%;Y(Zk6embS@u,'?YX(+k1g3_n3h_%h+IuIGHR0L<&ic(O+hR:7V+j>M(^(RF-30_ZWIr]tjT')u/fWpd9!;]3OY/0:U6$o21aPO;
%d9!c]#38j:=,*4;0JJ(=<mXOa;'Y96Y*,URR-^#e6uS-,qSICg8@9)kZp?)Zf<OfQcj#:E#8TsU;P<&cWE<O3Z'Y#YV@#!X;Ed_6
%cN4?3V(SC\2pu"c&ekP]<^7Gq;ir1];..4,<;:XdWfTn/+BZhj"e[ogIdR1:aYI9Td4n1fe.?tn#"'lp)UM$g)oWN'OhtP$nV3iY
%'iNtK%7XeI(.%fu>&Boid"lBbq]AV!$`u7e"KXk+$Y'<Ds0R_Y$m,P>6&uV)60q`4HNp9cXRA_0onQ:XO.doIS1Od&./a;P[&lu%
%6:_4rV-cg-%s/S9B_\?3hW(7WVRH8lM"=_,YB9D$4*IsJ=@E$m&7\UI5fD&p>/KG^%+.d=#6O@OgbW5=JE]AJ"a[:J>4$H/5tI""
%P(I$D&h=En,lO6f"E"U%]JmD8e<o=8&Br!`HrXcW7LYjiACkBVK9T_abFsrdhk'OOh-e<#V,hmKLol8=;G;O=44-/G_W:i)dPGOR
%hNE.SmK)5G0W]Xl+"bQjJ2:>OLbjZkADkV\W#[BU"*Y;X^K(QBO7`E!omY;Z*aPBZR?,H8`&?!?4U&)1c3'P&OVPiTMb[nci;uZ0
%"ha%8D%PkV]Qm<&cMT]UDRdajdk?eU$oN]8R!*`>!0i;_O.02^eQRM2@L\p*-:e2Va/fHLfuV_SZU91rXCE@V1FcJ%@pED)5eUHa
%GB,"KT_RK_]@70]-L#*+4Gi<;@".k4,>h7X.S@2e,EH52#YA[A5VGO'4>4p9lS!nS+6#Af$)r#D5U--_J?/D#/,OK=,%:e':_[oh
%@F-OJSh^rQ_PafH0RGK\*%Iq4OsD5#A9jm1[Z6"flm#g6E[]_KKIh'&l`t@G+,`,'BM91t(8n[=1@+<*-2aif+H]Q[=@8&c!$G*s
%!#GVMKqk5o0o;:UP;tssAV3P<#Z?L9>P<k^:'m36#Yr*!8.l[a$(j!%qiD@u7t-=r+[,omm7%XI'7u\tZ&6q#<`2J7MJkkF,e9$!
%(HJc_"mmUG1aMFa["ThpIgWj:<X<u,r<b)U>jmpJ=!erIbt5^dfH"JT9go8d+C/OY6u?r16ScH77XBr2Lii[DfM<oCAW+l8>619[
%R$Jk]XWj6uFdU)ci2e-DF_c=1lQ&a^VhS1[`1%3q&f6s:mNmZkN,8fF3mUFo-+`#<0/0=+n;g2o&<qf%'';#BjZQ`Z/'emI699Zg
%V[5gQRXfK\U6)mu.<Jn!@Xk&!&hm-a,J#(X'Zq$7e<G,UK$Ao/f!5IIhc6(L+X%[7EIU.I]NV9YPGQR[*>'@G]kf]u=^M:q9Mj8C
%%HGSolC8E"Qr()!F![WfU'Hld!+#fn#^E,A@OWS)[^Li=_Y6Ei0&ae%a[V7&Q#$mQnYR0tV8+bbkRM`]=NEhskH)I-O@L@+5D$!\
%&u=Q("bBq:7AE-+HIBk27d@e2bhhn/!+]&2MeEji^adqSdc-D]>ZS@9H9`$$lJ1q9&.r.$U1Y,P2Z=pL7/.8/q5"Em&]LWPm$_\n
%r^,NJTOM)UCM,N=-/-NRe3^CfnGNtC/-%C.D/?UI$U7(6XoJHj$3q2s.tK&`kXZ#/Bo.`Qj0p=r-:8^`ZkZdeBiJ&CO\c]U":d8j
%E'dnS8uoJ.a='PE?6lP\AV;!_AlO9l,7iD!=s#H.9gtDAQm@p1(#41#"6d;6b=,bG-&B,u18'@gQP5PF^]b<,pS>I=81B.)=?i,g
%803Rij3J61!4aL3JqD.n#hB'pLSs7#FL_[e(6]l^1DthoM6rA??KOUPk14V17;WI.fEbgqncq!;89fhD*B7$Z)6?B_aU5O%V!MXm
%VK5f]q!qLe=MLu@,aNWFj)bF>_0h>ge<Z1[#*+inSMnFK;%s(R/HU768RRIYQaW;CD61`r$mbuiP9;PKH>uM8)k$Lo9NX!h<2Y_2
%^*D<`dWnL+%:HGtGlfN[1rGsfY1b:YF6MhP$!0Yscn.4EJhr(:D64p8fripD7Sq"e6P9eiQ%0V\3\.`:N;*F=Y854k+J4Yth\KMl
%#gfi/4=#L2<9<E[AM0W`aGOG*0Ul+Bc])"t^7_EOWg&[^UCk:lb5l/;:eC`'@S]$1R[^P`[P"b=W$=k#$'g6a+[LYs)hf1T(jIPf
%V\jue21:.UO*%EATqMO$]+%FI[F/#mR1J5hK&@d8:P1R:22]W]X+8B[QtST=U7@jA>,!Tl/.@]]$gOJQ?=9<8(^ahoHjt`\;85Lj
%=#IJ7VFi1Y$(A`'3_^5r?pBtcM$(s',OS?cdN(XjZt+ZA"XjB'Lj6cr=(@0um%.\K-=DaE#J+K@YTo_uSFY/Y\j=Z"89SIA<arM(
%"s?P(3<9ChX#91=r#]Ap4(t6i_),`2(@5/C>R3ULPq#;jDq9,@+-M&*>J":VZ0G$&+10srLi%r\@=nqq!C(BFCD;YrrUIVg'"jF(
%*Z?Wn--BfRaC6oj3me5!LZB)KU5iQ#NE?h[9n4L_V,`WK#Qs<:70GTceFl*aEj!85DY1^W1BqqEYRLP7VH=1c6;[+ZTbq7si2f:9
%M_0U\KH<R2U:O,-Qs!g?PMd\l^1eFo:Q\o$o_XH#ek*J-,qrP]@7W[=VucQ65c`Vf.b+Pf<%UY@866J6KNTKtIu5#J7_V)]*+"Go
%Y7/1.&cr8@3V#"O./bu)"HLG1RS^eAO@R^(cF">DeK2>d_aLs=!P2qZihYb^)!!;lckI.b%Gcj]_2'6X4M)@N;aT29<3]FO)i>(G
%%F>;S$!Os&40`+=S0>/qMAPc`!n-N@%MA]E_MojuP)Eh*6]Zr"XjGSk"[@Z^Zf6ls1.k5=+2tYp30Vp'!OmbmhRbEO:LJGNiQ$J_
%ql22WR0E_]_3I=uJ`n]$-Lh5pC*ZTuUUdMM$l%8Y<sIW7B]$iQ?a?Lk5[FuHWV597:DFfeTYaZ$Ccd_4"7n6DRf^]ajuloMd$>9G
%<db>)ZX[5sXC*'DU3h<]pHPR&e<l#pOH:`c:Bb+c<B:(^-\\oeMAtdM,!'D*&Z>($#'GO:62?<4D;`B0(s',D$V(T+"J`u30WbmA
%\'eEPLlR;B8:,FT7`:-#p9BMB%84hm$BhO9+biN]U`kL"75g#GQ/GY?WFN%J?=kHYN`QfrB:-1k2=VHb)%ah<hCLtt60KDYbn<8g
%o"7pn*7Qg'\._D%<liG.i79&iifnI4#X#:2&q8B_CV;uCb5e%H=W(QN)FG)F>^NoPMHJ5k"[91kH3hoT;PW^A_.9Q2d4e2YnOt,;
%1,suh%4er'4ZKg1T[f\\L5$!S6QDsmj"in94+r</7WC@q&p-\g`JE^Z$#N>4=caNNh28$u6kuR\E@90FZ8(%Uk*6u=gBoZ-2.&2H
%UU_R>,_8b.E`YdW#Y!;S;C,<.!2q0k$0b`#&p/'T'M/h<2;&S'gZ\T\kTWUEfVI:N[*"#eK;I"m5`j0"[$$B!3i)9OK\U9M*YC2b
%!nINhZr"(8eflS]YZVeV5sMtodZVu*5F4`-.US>Rn3gSP6RO=X,r!W\3@DU4Ps-TUmI3U`#U:k<U?JDPKGe1@,+h>n4tE9\:OKN>
%6H\T-fEeSb;*KfKapnO1]T\MFhV)Fc#L"#'5&`eR,(Z79[j>%*@HXX4i:0?s)\,6`p_oI-c?YWf6foB>"KX=Yq&'3]'*Wpo#->tu
%B`t?lk0&^YH&Sj@H22Va;:O6X`K"t"d_3R.35J#<8cJfAhtV5.rJOir`3OLRHnUVS,5_Y9h-W\c,ck)(%+]5JE<D_?MHSuXf>FN+
%c!&(T&jn.6$HFQ.?oh93*HC?]p.)(s90+4^0UDD**Sh;:mdR.D1'<+>bW5tZaAdhn7r^:?Vp_=JJ8Z7"6\bn#,gn#tTL$KP%kfYI
%8;KQY.R/oh#/CPfTYM$%U7h=:$niJR\aXC;Rmj!1S^9j+l<1HO-;ltD;)-E\iTp2ST?L:>Frj(<pD->`f'X"ZDNIC`GLS*Br@-;t
%P]D06h5#_1OV1I`(s(.D%M/J]-^\IMOpJ-l[M=[t-d59j_O>4VP@Z6NX<$V,UqK$eMV1r[SLUb9)>iEC3c_<K;5HZ@-WHIe>6Uj[
%Ks%QEXY>D@1]l&KC&Lk)5^jbgUga*Y$JUok5Z%I_>+P#aOI4Tjf8k$iZa*=%I<r&=G)gZbZ</fW&H)\M$nVe,\$PSD&PrlN&f%a(
%CYfDcFk73Nh3>;e`T%_u%M7dNM+4&B3200Pl\WIESD^[b21V@A'n[E)A\oAed$iTZG6@*?.B2P^1fk$V6kQ3>N&CMqcf#>;/BeZX
%g("/QnDOOJhalW@+WC`O$cS(_5:,Z[5qT_C[J@[2AK'qK;iibZ1Ea71;hn.;bTTQsSG\I%#MU)"'8`N6!)^9CA>DmOWoUN^$20^A
%]qF.P_Cu.Mn`dDB7(2dM;C`Orcj)i8_uM#6DN`JTVo6LPN/BMDlP0_%oH<28U.Qen;?O64742BG+riCb;-XgD1?-BMTgCdr*8n?(
%6W'FdMgX2c"IX!9F(!Be-R]C0#]$/:*7/q@eqKgE`R;)K@[fJE/Uto;$8X$W%`CpV=o&Q.)CsBOa=9Z7g6A[RCo(MV&p>nVH">h7
%kQ-DMN$n^'q'ihi3["qW;]`2:&@Z%R$F)):eOD@2E*A*i7gUfDhBHi2q5IA365^V*27sLZ&VgOE<1mCG#c=FC8lF:+%k@W$nruGG
%bWM7EWsP'%"bD2RQLh/p,"8S!##/?#`ZlD<*#6gj.m^QDN1J@68>buTY6+)VD2sPdq`XQc$<"-_*0dZdTIc5i@J57MJ$=oq>j@To
%$KiD2DIA,U7V^*Qb(PFN/*j\>(?fK`^M>+OJtsJ]2u3EV=E#W2E^JS-'G\1,qWK1I7BsFlbNtDaGj$pOAF'0"KO3<36olK*H.+f_
%833V)#_qRhNnIJ&+Jp&RnnSS].?UrR&=PKYq5[ehPYhq\>P+sNjal\08/STXBcp!TTnmFi/NF'X5mi,sdbZ)j@WeF9HBA&sY[ISN
%Tdu<s%OPU[\#<n-L5$^,GWE(i@MK8",CnWEac)C28shBQrcBF$FNer%Q3;k:/de$2i+8$1BBlBl`aqPA"Lf.$Ytuq?M8PBHI`B\:
%.i9l'NIZ(+FiCWdV_L+'l.>EbVrneIF9rVd?d^)`/[nh)=eekl4>!1V`30T\,jm+kH]=6n8-";I%b"a5d%5b>8[SR`a"TR]AOK-@
%'E]JH\eYmf/HG@uXa'u#SA\'U#'a-ADIj6^;E7C%#'S[#$+aXqBEp91Y1"p8cOqJ-=U>BYG>=mYY'_!O+4Nm_5(SHPPI.L*Kkgo+
%^9(2[TAh)XWh;NX&kBBanfH82hZ&i.CL`rG"p\9b</i*+p8V4S%OrIK$LCk\R6,Cc=J6t$bk1lsF7l6XmKt-PZ:KdgTOj;C07Jd,
%'e:3Tlq4El7r,5o]uX,sM4co.D0Su29!8eSDl$T!$FpQjN:b1E;'h-f"-3jI2EBnsXlQG%GO]abON]N-Lk<m.qC7"'O_gJ`)]dm,
%b<ft2&c:r7r"NGr6qe)]TF_u!"/mm+U@/mU)gr<S@k3QONn\B^8M)OqqcRTqX;L@^hF8k+3%R1M%ZCI0"7[,G2AE<)5u@)fH&\/3
%<I[U_6V&^2^mHNtYbC;"6k+AP6P[U%)>qjL/?LUc9KQCZ:]O(%,(,iVpJXWFJttqIUpu3,]<j1//S4sm\9RZDaGW`f;oEudo'S!(
%)Y&7q/#=VA)2p(o"D$L<Q8<o:Z4\t4ed7MEn@,+nWrHNT8T4fA7Pn6IgQkdYdD8ODBM4PkoJT<AE%5K4ULmiD':=lW[7tll(e>mc
%Cd+*H"BnZb^*$MrWV;K)0Vqa"k^nqc4=G@i./fP#"l:0/<!\U*a@D^&8lT:$kj)n-Z;*Z/-?>L>1C>9X-38F/=Fu.iAQG'^EMDTP
%79@?FedCFV8@p@G]k+;X7L'a4<DFdis54/l0.p1/;Yr>GG(mJeUm#aN.m$oZ2sX)P?S(;XaJ.5SFCJCXf!LPD&k3HB/*j&$"X@ts
%<!/G-Kh8%t#*<"jYj=pnN*Ke'm$W]5Tl-[aL8ds=j:JBBP=B<>W>"6.0SQZf*ECi\fVlo#m7A$28dP\_<`aTuGh-pHBZWP(5I9TF
%g_+7PhcYt$Xd]o'`tD@&3,?4C0YNPf6RDP/kSRIHLEf_)B$f(.I;QVjf2uHpA4R4!T?ftuSH+BFj"sg3V-/3A[*4TpAn9`5<^MYI
%bXCt33CD#,TiIi(h4kL;0t<nT#`]'57T)^0P)ZT<9NGAs0LSMn+2^r3LY0q,A<"<4>61L%#O!#a'[2?P8K0LC4:*u?>.:0`bmLh:
%1j1(DTe`2PrLF8QkS/H+[-Os1flC6o;\j@1P*@8N)bLr<GRCZ4=?GTqJdT!7%q%KWn'F%R:5J8@R7#ug)EIJj*oOS\iKHSGP/L=/
%TQ)1nVQ<\B<:O[B'+*e+0`d!\XpO2/PS]V@R`sKY[OW%q7.rAQNI;AVK</S.BjlM?\alk+/[kdp7"FTW?=R^N[IL&\JSj=b!..22
%Hf%Dp?2;X+oSCk\@K_>=Yu,h?qZMHq*]2<b3`UnIR>aP=,2=k4's&*Upr]8i=9b\a'Ppnb*.QOO,roU[d\C96^tgA'01'BPAAUB]
%/sU)O4LA4m'Mt/605jRD>"BR;muT3!g)=X_lH#?j4f!].hFZM'Aa]h,^DKQa[Wpi/,>j02?,n'/>;i%Vmu\0BKE\LE'j(:unBM*A
%aY)XT0YIY-\+-c,@;,jC3"XhQ=H@QI&q*,(($07"kTkML6LZ8:c;B0*rFo(d<H(D?Af_oC=ET6hdhUnp?E&XW!<j[:HQ$sA]fre8
%VW8d!MEiY.>H0-Hi`@iO?k`V^=br@kZ^!.-[G01U7pLUB)$HkC^=.6J.Pu>0C3$C/a<I",<-SS_PT^5Y-o'A;c;6RFFKLe0&?n]T
%g1go*@I^iaUj4_FZ.1F,#_#p/fIOWM*0^M.^p@Mqb?(cZ!gd]A9%R$/#fKUZWO_3.5_r2cl*c_5f?\#%?0e=CL\Vq0#ALLFD]jAb
%?]i$P'PM'$7)[LK+Q%]o(Q\pd%_4TZ[dPQB_C,26rmE7])54m@0O9c"JsAd4`sI;W.3]6o_8g9Mqgt[s1'mrj&?86(!nq=H+ARgR
%Q;dUa@oJ[e1MdDr7OP1$&Z?!;'*Yq,/CA.`'KSqk>FX&-5[5Nhg+Yl'5XrOi7$c[TL&2!:'(:iSXfGQaE8,4[76gpn8g$^%:^^q[
%+:Ojhngmim`<cB;!/[?p@p%qGkXA]R`>p)q$,6rM(KbNE#t^e\YeKXo+u-q?YB+=Zactm%kZq\f.1.ms%FXlILQ9\U.^oR1!"-lS
%\<ud2NY:$mLiHBuSBM5fOVU4G!"s.3@VW-C\J:P7lo%t&Z$(?/(5T%8Q&X*[b%6_6.>3B;NkjeZoX+g`VnHRSl]uD5N6.i+J4'H0
%h=)YV32eN@.l).DW$*GTP6?h+Tj*SdijZ7;9*;[jaohq_8fn[pBR6C^eH[884>!/'PI_rIg!]75,Wb<\RtO&E1UTsr$WG.^Jt*"7
%&NUDHhj,<6/64.Ce3p<gj4H_3@(`:5VBZE^1?%eu=,T+S`P*CK"E"U&]Q\-4a[X5A<1('pAQEBt?mT_*iJI')#_nKrQ?bQpJm\i\
%N/2G0Z"GJ*1*W^2O/#@,,T+`^5`IU.S/*nSVVa0eBG;XS-Dbl5b!j[*6?"=@qa4G"bFB?'_Vs+^KpDqH&,#p7omV8ZVM.YP_C>gC
%fd(]50Ea5t";DR.Jndq`eehL\KR1W*dT@/4Xpl=_PL*"9.Q40RO<TC;A1s@!@=SAj5a[af,RS3>`gQlo*AY*a<PUC>(GH3P?]qcj
%X&KcqrPaCY::=*+7)fg^M.A3Bg-X/\@]#E>B]dq4:YEM$2I*$<@r,[B[`-#trjb4FE,(4/dL-;p)De6kYsG1?f19)B8+*70a9$>a
%:0@OX3:d3R6oJj*=u:i)eDi42U)+0H+Loi4)Na9l^]6Bb:3i!h;]TO!'m0Y6/6*Od<E:@ue71(lo@QTMqF=.t.!*bO9/;j=&l)\9
%^mFS+[SrBsCKj*&ZJ(*%Jl7Rill2h,gJU=ldl!a3!g-4r01iRZ?Me>-UD>*Em%*e^[R%.S$CR"ZhP%u0jpUoY0q2;u$pZP))3SS`
%/\P[J`=nP^Rj;tZ"!0JGcC@XS\(JDh$#Ep?crpEf;uiAKk6m!;RFSi6PBfi\ck^#D(?lW)#&poW;o/k]c1S'3-\@OJ]9#j&_UX4s
%,?ke(BU!&Q4XB8[B"hNa%[s:^X/0a^.re,Ie&&5DFmBdON/^MbT?3i+;J+`n[C1ZF,P=.>E7uF!Fb!#Z`WUZMK8[-!&660WoK\[N
%e.+X8rrV&?95WRm7t7VgEU\?%02j:l[[_5>p8c[1bYC_78>BF^RL3V%Cfnji3u5%GW-ZJZK#DU@,<\SGRjQ8r=fDtA9T,`JCZV=W
%,jN%OJemC&*3FV4KTp\4V5+_j"bA`c(1qo-kTL#'d2kDpFcDt:;JZTf*O<FFddLU<2`j`C,B.NW"te(2jgMF9/u)fN1kUnoE`@tE
%L_CIk^#Wg`SH`o!Jkk(nbU\d\diYtXSPVC`s.@)5=D\J$b=m$:[RAUn-6YAe+Hf4k=s[WK5mo/UZ+,C&YB/3Lo0\=B(;I3M!?(u!
%5#c'.LI*LkgCSEMBO);A$/iqPb,g?<'I>h3=5aDq?5VNY_fWE`\WR"X_'4)hUi.qUCZQ)$;5V\U;BrIP7r%65Y/S+ji_NXa*B$.g
%mW0aIC@6+oBL!cQ`C^6$;ujq,j[*pnPm=67D)=3aPD#Q-#<,O<_b)Cr9[p9PWC<`@ZH2M`GLrLM(P$X5q.uP/69<5O;'pN!I:I0s
%A#_q2l0?;U?'#XXVM=Hc?D<fPpgL4oC2YU3&cr64YqqR;&4?dET<+92]h50)rn,,g7IpqhIR=`L]R?hK?bf<rP$pe:A^-!bS@-@l
%N,TqRP*kbg4Ht\J,;CMNaASeJ[#/#=Pm2K-/XfF+_eLDk)fue8;a[PRn0[EnZI5^FhYX16U/4>ECS[TY_B_]_@5hk"GuW1WmtqU0
%R&[^_Zq-H&a+Qf=6L@#_U2XmJU2e2E4c-PI2RFUC,s^`TftA4TJ2Um0cQKAbJ43#^Yf0iuNaG>QYbT\4+5`Fd6%QtUgJ7:6Qn](S
%Gt=6t<kG#<L*M4N"'cDH`8!i0,PMgEW(>&h,EPf,WP[e-d0GM5j\jhUjf$Uq"2g*q$[cA*&jItQF(*E?k5YV/<iW8b]@7a]&BBJ'
%BrIF`HH8Rs6-)UBkVa26r:j<C&6nZ^lSTS8D5>##ZgBUC0JVQtP>/@q57eKECSrMt*aG$/Xt>2T40aYSgS#9Ucr*3P,skXsP%>E3
%"f^Vu3(bjY$A-:,RUDeTao9`:k60gLm,b\F\MOF=:(/3R8;/!SWfqtKb90n29<pX"*3uCO0>ZeG==6LN<>_B<//'H^BE<kH(sjs;
%ZPuJESGGi#*^M4J8)TETBpK_O;8$#_P73L5/.+9F6C:[I)Dt%cM3*MP^oU`R,u]aR1\A[_%0TgK(iZ;G6GUTuEsn0YC#:3&Bu]'N
%$gk#<p9=N'ViC/e:m$8SaE+X*EC2).8I;L1`3Ss?O]>,"7":%.X^A2:fFXboA_Hto^l'?T:lGM"MKPYpk<qSC8MUBbd^!&?$BIO@
%U8(/pU8G)`I)s&n.92OK/tnB-,d[_.Npp6S$h'T7RHCqW_BI.Lc2^t4jQa%)JeG%1B7p\ZhRAT-<IZ(V''s,t?FCMt2iu[$>i%1?
%NBC2RP-7.UTeTZ?bf"eCq\2FQ,\'t6N<D(pELigleBG,Cq)Vn)H:\\rnf'P7@n.YElG#mu1e]j'/-uhui?e.?)j^S^N$aC2(@<LI
%O/U8[W[;:2Y[!YeMJoF=(^oS#Yr'Xm4!g_>'MY1^")AM$%#!V^UG-t@?/=b)PbV[H,Y!ji..]3#;N;;B@fYS?T(<`P(&bS.<+0-&
%JN4UB0njIY_]AsbDMsFgnS?jU\U-J<B=0MsZ#kB7=%1lqOA]UF/D8pn=J826Q(0&.7O<OF/SC$()T)W.>t`e93s>elXIO.DM@me2
%VKt?VL):MkC"KZjXt@#42"Ic5/C@85$T$%7?$n*aB2VMU/qos^M*EX1e`3pks0TKjgiW;&h%:"Z?4`^rer5@e+n`m3,`g&h-.s&?
%42glFkrJ<jSnR/;+qOL/VM6>eB2?\$<=/4)8nc:d2rr"HboEuu$U5[^C4]/C4W]P]X#)=i4!%/Q[L#+]>tYkF2^-5"N!A$CMC\o<
%Xsu<#,p%sb1#oMpPe<Q@)6`9RnX9b#T#;7I:PFR2a%27bWUMH52`"mZX05EWn9@'0%hiq+OD6+(eVFG@6^LOJV85Nf(:EdE(-L="
%WU!.F?psh9p)J>T+s"cVLE(PX^)X(S$3ac0@i30&1Z1]=0<,/"K_^=[;Y]_E'a"/W7"5HL7$"7MhaLT,`h*)<?0u/t)fjh-1O,kJ
%G@]_<X'/rGA'i&]$1f/>B$0neN#pA5?sFK(4$k=k$0tlg8L@Xkn"##8bb4cfpWall7'=eOHY6^r)k-cCHY:\im!UhO]ka0hs&Ri8
%BL`\AO'(jS/*/:HoWGUMcWE3rd-j9kTcrH%MmYrt@O8Z33YT.Fjh$/3KRUHdh&T`-ZoD*p41IN^N,447Nl5CQiuV*W?#9#7$J-;3
%'G1SQ<-R!GU`1:.h0!BV7%1@lh&0-/cA+f3#&-V]h@%`%5mH)P"/`]sO=OAPM!5C.N+e2!9R$CS-l8gUG6>sKkt]/Toh9RW3V%8.
%#!6<u.HqmPh&1`jJdS6eOPC(CSV?C4Q]0#R6qe/:@CtR5d+VLQmL4&dl!"\OmN<5Oi^.j%?qEEFHb):0U]P!nGF+?u.2At,GD777
%a\D!e+;Tj.6?d&BHJi9!q<e[%mR]Q#jL[4(Ij0;Jq<id=`*SJHG6dacPQQp0mK!%C8`a":mJmnHjHtYicB(PS4FBN142=Mr)5#@5
%;8<^@Cj5Xt9<lNRG5u;#E,)5]1B<2>rc:JOB@u3:hcf:4$qUg<Ub-\4"tg>l5f[tjLA[,[oQ5;S5]B]64%NQ:^['S@d"Y77q8.;F
%<%kNj%b^7YR0TEp$JQTKh+2!Vf^@B:!j7M;gE"_DW'mauGD7ZdjP3_G4/?*fDa0u."6Q)##c5-X"C2A>Vn40q*;XNmFE`JXo73/[
%FEb_:CX5]<mL8DSSa#D,N70,>8p:MsQghePm`psuWXV,I*HTNW:Y>*^?0$APHSL][XLkZPGD&:.O4T3TNeeCFRS^FS@Oj3:;V:D*
%@a0So:;dR>/)=K\Y<mF\%umDjW&Cd1K%=8lmeRM0E]Y0'5]GH'8/25=dO?mFR-foTN)<Wa42YS6M4Bgt%UUQ&7??*hYf?mu>hSPl
%s!%F#b'%ESNs/Hq`--o.A-m)h[Q@l:84';[h-#K+U*$_t!>`h"XmOg0JAoV#k/)9h@$9?1m>bS;_Od\(?%?mX#\@GV1[Na#EC+k^
%SC:SHTt>rqFA:B9h&3Z<d,#ekh#WL.#S%3t*C7mTSi*7S"!iNWHl'@UOl4)CGLuk:7!AkY#iR9bFE]ucPDiV;]7[7$[,)DN*>Gh6
%D%sQCkWMhcN9TbLHBE3MdbPdMLo.>Q]/,*E%IJi:c7n%I?q*P9_b%_bX:a8/Uf(o,q!NAI;aH-+%d+PR.E?g[39LDm[.)lhDbJS[
%q<j2CY.??mO<GcG$pEJg^Eac3$K%BtTQO`kI!8EejF4.WG;uU6\W?OR$u5OYA6/Kn@.lQ\72EU!!u'JS:OBf;,VtVLg$XA8+Q8P.
%fc<1q<`Bg:4#d;DQ3IoS/ToJD1M433qPr$Yh15UFkT#0:%Q7TdG!^8jp#]`0EX.64S"AXmL;HkJUpre6**QMq_]=&08cDZpmU.TO
%"+%n(LQi,B_@+&JBu%3.B]P!+%Up4/=*cr!%/ImN]q&l[VAdk:61!f6'm_ro'S;FM$b[P`6=rEU\&/GZ%^`Ip_<rF#BHaj[9r#ol
%4hDa((/a'kamDDd]bb_$2)kNCaN/]ed)">-#rh"TK2kT;_THBo1K.D@HV)WupCUOJp/#]rEY),/&_PV)cH.`m%6c&9_]r&\gbC>e
%Gn#G,We;+43!@5c-)d7S4G!Xd^Vnhcmsdt([=M'[,RH!N1YWLScS1W_b]];B,hb[Sis/#5ChFV?gC^l.^h[SNGRC;q[NhS$FNBj%
%%eaMT_l=:&ToVkqRgQD@CtITIO>J5k,PX&\9U+-=!_"4Lo%KL,M%qPI*Li`scYI/#MtWOi%^/P=X3,8!3lMX<G$QIKbJr<LZQ1"N
%@dlOeSKKa>-_=^[_KBKPH?B.ZS<:M&L"O]?cGWFV@QVL"?CLB;)()&EoMia?>1tNT)"H>=6JCOdf+&:D&98Rn4%$R](FQk=YjacZ
%qeH_)+V'?M'4*c<@YNI`g<m3VM-"EY!32MQKU^?BR8W-RC$c<@(/ic5g6p<$&`ni"%V!FA.]j^:H).mH[=^kt'h5QR0J*Q$;JGM@
%d0:Pd[55`clIp7("!>[<U!VL2B$lR.d+Z<bdkm!2g-K2$^eAJ0Lg>pW4f5VC@!#$FF;.Y?lD7n/XEKDb0V;]TmAMP_LfIUF?rsSK
%BM<2S#ZoiYT%;0eK>8o/.5>cbnXAA&963h&jD1%2%MF?1.BI]I\?O(M=RGl[1@c,[4'FecO".5SL)@=16>D:<8kDZ![1i19VQ>NJ
%Fq>&AE$;V6qAGT)-+0MD;9tsa[54(=]TCj`j(Isj-+.5^^btM4e./pkKSg/:*KIBWOE42hm0r7<dtH0[;K"ltBkJuR\9^V+6NC.#
%-B*,&#hIDtN-9Gqdl+1<[)5-J@?DKag/1Pg>SuiV+VB$/[%jGgBu4NgZb!P:;pI@d_6#k_Itio*&2OJq.IE)C."A)#1S>t)[F'fY
%c7hNr6VhD$pQOuiQ.(cF!#9OuBkL87=R)?C)8e8#1<qo">rlhW)c>>*3KVCO6>:)FPIeq0BkI_!)9mi_%dm%TD$HeZf[LrjIq)A<
%LkR%Xd+Uc-7&O;ZAFY4#&T5i*XW>?K?<15k8;-fOd+T(rR0f2lY8uJgpu7"Z%Kg2Wr0Z)rmZH,l#QDQDc'2'DjgE">#b3iJ[DN,h
%SqT@#CI]+2+ML0XB0s^S%r(DRm:+Q;[!!'Clq-Sh3%udA,.5<d-Zk'*g(@Y``Pa!!3ui":&#uFKN1?#F[#iuZ<q8^A+ghEp^*+;%
%+go5c$Ie!jeBXjVP?1lRn5CdE/$*oMifQKNb\DpB<r+nS[0);;"QKioSIc+[0Hmk\XhnLI@QU;$^ic]rG-EoQ'ASu-%X(F>3\83m
%M"_3A=Wt3uhZRBY7`9K:`F(E&+h#95nt&Si@QObqaadBImDqd0[#^5!DgX#DNY/N:$nb2G]L$FiE":!a.^:"@o>rsU,.9id5Fq78
%Cklt/%&ibI`-.HkZ^UFLM<tk&@XPcVg7dc$Hkhq!N][p\4GtFn4,>1l?'t!fiRG6K':!$[W_"X5R-ePmHgc8m42Y=5M`nD;+ZLPp
%[h5s;"MomrVp'=[E1jc`1#!9IQd"KDfoBK,`dnK'*T>&&eqR4I%"oKMfe3`>*@+%nWQ]P62UCmMOP.pb4TZ:ib]X,45TeXGfoA#u
%7XIVD"MrUXFUPMr5<e=O8'H.PpkW5@RI/Ync?1pP[R9qZG>7@jm>)l!ZnG@>^l]6QTAGCWNX/%k%kPqJ`;(U&CLOXrP*+OKaD=?b
%#',P9C-2.SOH$qmgYk;ickm8'mF^mYfq-n-Md>fi8(;_C-K4\Je93$-Y,A_g:IR%7[Nh#t!08V;*Dsn2ZYN*K#B<BD4Ctrgoslc)
%(1oWd$&S+/A@BD-&7&G+m=\Z=m<WA+>_>0u-FQ9%HR.KY+h$DuH(FN[TmU0)`JE-+h.SWp$EkK/[Mb)Y`-,[[ib')_gC_Di(o)f<
%Nks^I8R8qlZ'$DZ,g:H(1^a=*5;ZYDX7^Bo[@K:MCnFR>44;fdW2ibLOedM=eK\fjU374dBu(c5kU\f*Q/#-uYrXfe[fZmCHYb1B
%SPX1"!PR;G/oY#_jLop(#inE-F@:%;X=]IDd+c[<@OitB*V?(!`KVpCN$LeBDCb'sUbJP1?eFa:6prlb&\T2f/Yo%7l0V$Se!=%%
%7N$P`Q]1.qkY$+<[pus,>^tQ28oM1&defZd7nR]d?f]Q/s*jt9me]4U51_kn&0UcIbH&gio8%;TTUn8Cq=3.!q'grGq=p^<?h</Y
%q7#DM[r5U(H[YJHfe4lSgT#&gpi3Y:r8Wj,eT\cUr6a8[5;K:c?fS=Zkjqj4rJJAgYPb<ubd(SVIeC2#s8@Gll?WBbGMdfGd?B6N
%=FuD!Wr<I9(&QFO;<7E>hC?RLT8i9(s)s5(bKJu0TR.qG>TEloD$TZrj>`et6ao\jp`Msl)Aj;b#=p\u_rZlYmloY"-Ml.fYTcSU
%q!I,g)^B@ta\SqLrabLolD2._hFcn!T#+s`%8TjsL8U,_c)s:-aQ4fLco$s;d<J+(>:F108hod@.Iafd6mYeSZ,uUf=H;Wad,P),
%$o)Q1eiQ"KEp&3]6&if?qR=lrJ;,K0F8E<g8Q0mfQQ^T1"nJ_"iMmt9HK13.j,=0]7Z2t/bf$(jj<H#?;!%N`6',r13UR=3S55Ki
%mKVaK7RHb#UC'_&UWNhj]Cn!d3X=8C7cjJ%THNQTf0e1^o412P7#T4$O`:4R^&2.hdn8Z\g<6F"?cImZd`Z45\=XG)Us<WID_)mC
%9U2fp9^($]BXRU*EiWhO\W^h4hRjLX=^K*e[eeCMm-/'M.Xp9's,Y@HP?2DC<tn"(XP@phDa,@<F5%#[W++d`m8jmP$i!YM*,H2Z
%-U`EKs4V^Q1cgXrFKtiCM_2]hns:GJoRBhsglM<Q)Y%=M&pL]3Z[qCG@n"ltGH-6?'qNe]MnEBPrtDgO/AG9b?&E<9D^P^0C\Lm*
%VL&Cb0obY(,.[RMqtQq$b7'][J,Qh;10Odtc]s5l0_U!CW:,J/d&.@<*^tm6ELM2RjJlZ;='*fGeY*S-T`:okA,0e\5QP8F&+<dl
%)t*+4$s:,cOn\SkI_gMms1D?e]T6W=)YqEls5U;43PWYEqY6g]l^qU3J,8!YSpbnWr/?+H>NP>KVpAD9r9MnPAcB^tq$!tJIs?<]
%p4h^Q2X[bEVUq?P4MQ,iI4"B4?%)S<QT+k-idYipI=9+br1s/+^mc0Io(0uB>J91N/XJ_jnr!A/?fc-J0nd3jB+3ddoB/%cB+.23
%g[Dtk4?NT5jirb3PRD[mS2l5tf8O_ICNi.UqVaZb:2c/rhHiClYBYH&m<&XYHGT"JO3@-a2`&H3\p@GQr;>Hes8:mLbEMD>mDD#8
%5%@R%kYLg,Gi*W&c.hP+hHl^XSt=b%(\4V2B;==2-NgZ`O5ofuX059::4>BrZXS\+mqPO_=5Vl)hjeR_l%>\CiH9W7^R-medFC<W
%Rn$2_I:,:0]K,l4p"=i.btE3))*PNZ=+eEa\p\PLB5cX5bW4\*Keo"=[WaXuHKX$?rn61I;]::4IeV(TjJ/5PhYp*L?CtMqgg".2
%paH*;qn:.t0=U2cd924)Fu>A"YMNTXT)J?YjRp^fdlAYA25$N/Q`!og?=1B+^R;Q:*p>1hH/8H$T71eR@eJF6b3b&[Zab&Q]"Ae[
%DP(/o^US;;Y"u?uEq/8Aq4#Fabg#p_M_hhLcJ4AGb2USr^>._k/\^$"b:UG5*mGAq(q_m/R(Tt4K/jceDVbHLF+5fh3lbktT3ZjA
%o&TVs02(T1*&)L7me:tZ='+S0c1<U6IQlBKk8=cGnFBkEl\CD-gJ4aN[[R5Bo(L=to97AXmA&ES]6VD:HTpW6ID3TTGKq&fB_COM
%<9s.aa51U8Wu!GGSDChf2]V<ns,(;JaB`\P)5kXCZdZB"-eEkIfB]K\Zcb?NB)O)=ZW-+Kn*/BaS"#U'NN`B(Y/WDq1?-R5lPCqH
%BA];P>g*N<N\B;?\1Z\OTZm'#lJh+*J,JkX]0e_:J:=%J7_*Eal+^pLfEGWqh6p[>#DKm1g,/\h9f#/3rqDANq!T67_e.aZp,q@*
%,g71GI(+Qk2TF?MkEe-Rk/C9uoPh#(XWDl9<';>!dIZR"!d>&pm!WJRp;+$SOh9%3GKY$nRg,8=(&[-)Hjj8eX/.]6B_uMu3(II4
%q`T[N6(H=>r*F`;5L%Tc5OD;+Sm7oF]R4jF1FE][:ab9D:6N:T'd#,:^*=Hok3J6&Xmq_=E'-fApb%]c6`K>FgY)7\B:-en[!(SM
%[)_u**qV%M.\HSFf?C6Dg%1Sp0h[eX[aFHSasYCMc(5aIHn\86:TpoRNj$dSrd.,ckHWVnRA1W_ldmN1cem%D_WAX?IGF#K(FO9E
%GmEGD5-@ei).Rn5QY^$LEo6`R_<fFIldmen0!9Yn@0Gtk)mZEI]iS^)6$YUi$eE%PAPldKPBZj/l=">uNU?W:SrmqOSGg-R/rbY?
%i!3Kj46n]hqo3l6h>K-e>F4c,*S[0-pWkP`&%&tKLH457_&PQn#'20tc[c04Co]?1C4a!mqn&u`T=(Wk^Wth9=9Ce3=B:3PX_&"(
%0%t&!8W=V0c)33j/hbO'^-0(f4.R0D>5u^I`qR`:jP&G1\,MR3T/L&H^Nk6IEdIHEm.0:W-a+'OaD"]:5HD1VRaE3qs/,_S*!<TR
%\CX>`hpqS(PC0t[8`,/>ms^W9;`gL*C'O`k&#J<XU?D)cmojK'Xl!`=MgaLJF#oWu'(9="<9J4DrJ\QTqXTjg2+Z>#YN?N@nZlGK
%b8HrCk%`28HF:@>1tsRd@JgS)9QT32Eo##)a,H]ST*)5@=7'`>04l!)]f<d:Qrfo(Z+IhWS6qkYbc'hl4h3QNgXVhbm(oO1)V!m!
%jc&YL!c$]'n#6%!%Vg7YY(h(>n]T%X1\OX/6>oW%B-+L%jfX=p_ql8[Z1@B;3JQ9QgA(MM%J'@SnV%k@HiEs@k5=CF6`ZRAe?_-F
%4F]5("9%JXhV\tGZTW#h8sI#.cqYZ]--Dao*(p"cJ1FK/I>31-(ltm6AI_Jl;Mq2YgQPO"8'DlrqNu"pjp^BKNh-?V7@@Rf*_7m*
%X@9Ps[4%*Q*]SRA[4$)#Zdb^#[4&f1C%E`g;9T8AM_[q^m(6GN<4+-PO/Wn+c<q.$U-A3QPZcmQhm`GlX[P6u9XQ9i#'23)r][YF
%LKIJ2lW`43C[CUr*]A9"X9u/m9,o!4`Sl3##CVM9^;6S]0Dtb*^]/nQ0]1c/K]iunY;m30"mK[_J7Xe%I//dN1Q,SOMdD="?CNYQ
%MdBW[g7m1/6Eg@`3_L60m;\P0BDAE`<a2rbLTT)BA*m,2CPu4t[+YbeeV4s8mrslNhR=r%0a5<L-$rGp^h"J@I2f"o)pOb%AK*5U
%BXDA<ZO/Lg&S9>HbUQ.'>e;M%m":uIqYL+sB,=o^SG`6^%XK2jD(VAe5!OC6I^u#ME`<A<qX!;*MclDdK55](W?2]fMO?8d!rt^!
%5'qF['sQWC^ein#"rteQK3>ud(,1sX(t*9``I`cKEG.]bPhkQoQ2/W^.hhLR2QQcU5KeQ%s7`kt&$(KMES6lfEYlZ\I5?j((T60Z
%i99U+5'Idipq[[7cPt/b=N8*#pZOuj\a4a&r6-1fn+ukPlIG4$2q\`AlKpJmoc*SW/eu4O1:i+f!]/h(5A_pE)1E!!['OGeN%o,f
%k@b99^W3Q10/a`$hkBj1@gmF#mS>oD\L6"l2_SO/h97lF%e+S1D=[/ofm'tnje0o?#6J7['Sk`m-6hmQD%EK\B^,.no"RisG<b]6
%3rg>W\$`m0J!^*%P5fs6_(9+69E'.Ws"=-)pTYd%!Og6c1G-]pkI[VmTKS@&/32T6kI]f&mqcgd?!?.2KL-bd]e^I6L')Gpil0Y2
%B2>]`ZY=J@BBQAp@TT?%p$C\tlBg7\G]E`CbF<mqP>f8Sc5>O4#<T71AuP:0f.XG?1j;r[0Agj,\*k]HDM1N%.*Wg\&g:I'A:"k2
%HR*^<98%,<O=_'Mqc\G)N4gN2[W,tB&!Mi=s4NIbB4mR'ALm<;Z[<=Vs*44icf\@GB/cGgT0<5@lMBR^CL2@ETC(VTDJ+VY:]C7h
%e_?R1["G,b=K^H0.Z?0<F*<]G2D]e?\9>o$RP2tNZ9Nu%ghCWJ(ZK*j;e:BEbC5Iurqbt<TCLN_rn$IP6-K\>XT)gDk4O[]:u:mU
%nY>cLm-YG@k/KT>kg?L)\V-#e2N4pPG1uhuDb>-Y]I\W#-1J2C?C&CM&pRO\0>H\TM_L%l?8N#,pra:pfk1h;$,#%:n?P-Xpiu(O
%p*P=^XZB5_*C5"I5SK3VQ1ds*q@[c"V.Mc)Y_b@_#Q"uh0aHcI!Lq`&0e?]G3uZcL$G67$*?UBc@n4!(c.=?+>B<oiiOHo5bJ#'Y
%$PLp;*0(C>diKTkGBC=frd^MgTH)2/\0*Ig/d/%5I+JOMBgH+[eM@)2E/MAXH1LmuQ\D6tZ$#0S5b2)io(U-L3;@[j)+9V5B/#VA
%U0T@Q3Fg]b%ZJEsYC5:LH`t,c?G(N(G(\UiIJ/&c8j9UFrtWTL+o23-o5u.Q1U(e)k-:(\0-8iBo?a(rn;#b"kT$(%LF.fHc&=sd
%ErLGe4e5ogZba.3K6_`#YEl4q\?"T4>@;L\_B%?_+'KXo!F("`EK%EG0b2:&3VYR'qZu0uF2kH&1%s2I4g[Ae`%dQ;`kHkh-'#7K
%0b,Ihn_n_+2^bp]a<%sCG'_K20>$1s\3;pd3P"qUl?l?D\btmH!S,rn/c*iUgK.bDEW8/%h0=27Xp0#op$L$"c0;\#iQ-qsFalWj
%Qo2>"e[l`)F#3u=k_G?\B7IHUqldJAQ`"me\&n<T)VaM88CkVm4O4nh@orPg)/*^/5(%?uokKMp_TR*]Or8'_2ck(GZE)f@@KB-U
%@L"Po8IJYKN+"k9YbX9[d"7OiEG._@Utl3(mK+@":k>7R^V0X*m6t>ILD^e2cqifB'R&-C2TnfSOAP?#R_4qOkmZ>E%u4N[eNB^L
%Y??K<Qu]AjK3=)Fp*5jL)^=0X_dW=j,"jl(R:V-hM4[Y\Z3900CjQeND]WgB*o$#N<UD?Ogu?NEIb-.-gu?R1hV@,8/`,:Z&3`L#
%DMAo%fY+gc=BRK`=CLa_p<0(tn];PjDK4hTGA_E`(3aY9k<=0#*eQfr*g8rMCG6"Rd*5d&MbCN$0&?Q<\pFA9ouW_6rNZ6@O,^MS
%L1d^j1@2a:@V,`@J^D1Q4KcVSO1F1@*$DE&%L;`QPh5j6AF(W[I?=t!+^"^c5?s_Krq+l96s$Qf:=!j-r?&?iKl:jX]pKJ0f'@Le
%mUl#\+3Zp;3M&Uk7Xr7k431_"kb=R8#CNlP6-d"[B!DhhW7B`9kjdotdVY&:02GWn\#1U[%"ZgV]38l(7]#17:TlCm;Ei.qRJpYs
%U\j07/0ofTV)s1t0&8K,i:I8d)W-KGOuI<_?_!XXc!?Rob81EW2[s7T/a^BE9Cn!`+*kZV\/BY^jM0#J]q(EXX&n`S_o<S(:hLU?
%D_o;eK55Zg,V&%!@.HFEq=MWd:X`tJEg_E'a;:N_Gc$8S@9R_.epAQ8rU[d1?X98JZ@(5QZH%]*H.b8]G3_@q9Y89NqZ'@&4-;!W
%<1W.-.FlBc3XDKoZ&.oI7D;cME6q)%UC6$F[K>PPSN=q3\cfY&pX@>GpjUp$8i$;]\7gpdTV&Yu1E(o!h&,:%LMaF*UG;QB*lAuB
%qpQ#in&b7uc-'1$Z_77-l@bZLd,"`NnZ`fP?_$#$I<*%Z0!cOXH[N'aqr'M).5-J:I]TC-E'+7.jT#e3q$5&_2BMkNG_csmKkt^8
%NLkpQ*Ja5L*qV#oE^`)C$LUE?8@3?L*?$3N@n)j!'ti^[D70NO-8MVks0Lrc<H@t\iudIN[W:=M/B5@f\mCrggW`":3/BrfYPHdg
%hGM[B^fl?W4F__0a4bGhn[K"A`sVA,n/ZM\gd;=-Omut:Kt$e!),D:U9#eb;R<C?UYC<BufNmqE!sY0<FL?8[Zec077rek3F73*1
%;@3+`It*\r^kZ2`E49blpIicT@7NOQH[>I\Aon\-g+GF2KDMi%m-e8N?2s$aHAD$OIJ^m)2'\6'F7R5ffmh5*5E;o'e^rqVgjdso
%QeLLRD_Fo$3Cl#JPZH%D=_<Gqbl2pUbKMN[m#Y9$nP5!0ki)S4i:#8FQZ$3S@8baq2?2l,+*VTZf__Vfh$hV^YbU;)mFIG,66D]2
%%SPYB^URB.SG-<m98VcJPZU,r)r-PYkmsEd]4o"ZoB#R9L.#0pkkd$:0#,\U+[jQgPolXsG^_[NQ]FB-no_JRs7+iN?i=qdOl%I7
%nuH+ucd#kPr:/fZp%cWM2661pq=p_ojhK(*/,W2BrqYt`r9]!q5Q,5\rN\3'l>Na'qu<,8oDIqC^A7Q!-cqb<W9J,'FXD6$_>:B^
%7Cc,_5+6X;cU)Q1Jm@*AUDSS%$*>pP%B_hT*I>85O'LkrC3WtKD7se7LFV@*ZKruBk=6=IWEm:+5WF(F?9WVmrjK_<Xj=o6O$>])
%!>?m]3IZgMoZ9<Mn]d]0I_7jiI\(DgQ-BR6PPjI\1tJgu,8XP<=]AWHq53\QILZ,1j8<nf4n>_!r;2]K(O6)r;LX2*4n?FXeT(R$
%0CT%`a8EOKL+f&M:U]A;>R2\7&#O(4S)YMuj?!JdR]aUO\sVY'rup+WK3<VH1B-L)fVX+>bY6W2DBQt>G3.^GiPss5NJ(l[T?;g'
%3@;C[`ib'*2/Q904.,L]Hs.;WBgXhn33T0dg\/MS3t13K$hq+N$uNmEj?*8Cht`2p4Lr9jiFXN.5EOp1G4=/:jaS<X-gt^R"*1(a
%RmV(O27PhG7JO6;.rUn6\esa]mC']IqQ8KE([c3'*8:6O4P_bWca[Ncm2mF"oFKV9h`_#7UU^0]O/qaKcXn'Feeb?undDgL(N8n.
%S]e3G4'e=m*`-n(*-n",i$7(o9;M/!!qnneA"g.pAPhKco6CqijBt,n/bE:`qXN.uerE^ul&K!f_Y@RZO75mUqBOTO/iW._c9TtB
%]baCGh!q?9Eas<X9O<diCO=QSmagcFg2Bi6he%:pEdQG^b8*5]Dc*!Zdot.UD:XP\PfZWkm^iBD<$cE[K@0]RWu9B.#+FsO$MeIK
%D.`?l[<Wsn9$kMOOAc(4d2`C'niT<]P]pPbYR*g*gK5I_C9_DWepAaNX7,U_a</q;T0JpnYNh)(r6mc(Gu8#kk@JOYZE*$7pO;K!
%m)S8ck39l$NqlV_Y2a#m(B4UdY;p>f#P@kIfR/q\e_`R1b/!W=G"nQ<S"CufWQEJ]8i$Ao[^s!=<BFH$o+s7*kk9gX608RH05slR
%Sa<OBlI]5,Y:emM9%9;36ZK+8<-VR^GB>!g0D>(u]WsjfK#^219j:>H.W<a4@m%/nl],eJn0K#tA@dM>E!`;Y#4(galYOs>H)9Yk
%^g?<s.G=qH'K-r-L.;T(Og;At4FP9(Q4lGARh?N]Smg6XH#`$GQ8e6cim(&Dee<>.R%n?!RA.qU/'m7>r)h,GQmY#YO+Z7'E+$.E
%(3_Z8%,T]N/&]!.nY`8+b-&op1Foa.?EK'i\DQb[a)`?W?rMCg0PPB)TIu6@pE.,q50;(%lh\NnNEY3nB32!MIG\?p?bL`1o(m1q
%MU'25E#C4in$el,G%/p<3^_Kl$d;mm(l*18iMsadRK"NoVO-HL&u+F9>'sNZU$L%_VI!DYZ<m&AXD!Lj%*g?TH;@tnMl,N0Csu6o
%/;75B1qr=fI'ISkG%4k+eccs$:"Gd.)Sc<TUXJ6&aRAO8UPEDejG(MuYD'uQNS=6+/%[DRj\==K`?ojOCP-?I6On)ce8Ol;I@%J4
%ndb-ZO0S/BUFpg/ep/kD[;BRJA(oR50dd2h&b:579g7L@Fl9#3s8Js^kmH)Y1"dP^[^0*'R(BB,ZZU+Dr=g_+CRVp#Z8.Da-*7+?
%I-C+ELGm7_Qbp>T\i=<^@I6=jAT-W[\m(42;3GL5^p%dsenoa)5DoBl7%We4@f+9)^.$o2JUDF//TRql_/n5co@Y]r8cDKjGH>MW
%ZmVoO=ZP-og%`\$^/6\6nmj;6I%B/68^s*B=.+-1j/of-r#,sXDt8H<ld\e&AH*RV8fYbrNfQCh4am4mS#`$mm\]:#>:kn_I+E85
%*G'qd/=mmr-A$`gSoHqeO1K_]LK%UFACJ,K;`"-t`:q%Up?STBRr5V4r,)#ED8+=33B#q`^Aa_`$f0j=53)r)N$OBFere9?n.ttA
%4pEWP)U@Za_qcLYhWJq65g8NBj/]3gRLeBCo7*<:I!p2:ip?;,@UfB/jRW,c\d@n5p\OJ-P+Y%1rMm?MLS&MT?PBsk5Q0a2j?ac8
%nB\b,qtfC9k3VrMqtB#S^mXdfs7Q6dq>[V,Z+^*7Xp2W8p!)Ae#kAM`L\5Gs3W&@Ec-8,\eDSJ]0SXm8^A)'mSj1iRE1Mldq"p_[
%L(ZF6(]X4&c2$T:=Bkoc942`G/:LuX7Cm*[^nTQt=EIaKMscZ.Me5Ui0o`Z_I0CD(mi>M()W?<IotH!rn?0Q9>6Be$&6QU:@lFN+
%[legP=H!b)=DZ6#N%AiV/D=u/?nq(8?npLaYScL,(.Y_+E08*XVeamOI)aYQT,WG!28j.>NB`]L@dG=tDGt(cp1'.r5#rkcnpM?X
%9M8pd?6Y;V;e49/Oi8WPGgDL@DNa5j,j3<(ns;MK2Lk3tPDEW',omK.5#Rd/C`,\^LY"nbQdA4tn9X8%%BSY+V=>L<*EZ,t\V>*p
%4q>%jSkk3ijU"k24-8X#:ps8G6m&f+q3:,SgZOi]$k9D`44TYQQ0kqlosRFS[JZcU[&qPOrjJp99aF2u)4/[+dh2o1##N[m(M"]J
%_l)"A]p>aiF"f4.3P+csAYZLISO#+<jOpAo&Rb/=T9`:Ce>^Z3-@$pr9mHo`I1oWK;n[aNN7lp9hYCfp\EJ`2b%stBY>j[$jshqL
%WB?fJhIcpYjm>=)jNqc7UJ1;dKR)$K4j1.ZdMuU\E'SP]Sf4+oEp'N3=(:73,XGFQhK]hS-f6Q6.kB%g#<[Z,bW;tjLZOruSX7Y7
%o$lu@\_)e@bEioA)kS_dRH&Zs)HH274b,Z1AE?q3$FWCNH.\R`F_,':MS+"R[;h]7o/<Y\aVJGG:`(;#)DHMcEDq8?A94pDX*fr;
%kZSF"\%5P<`Ol&o,tOUtPdg4LMdt>L=fTm?GrIpYEF\?TRnqM<%f:+:k@&&Vjr*hlEVY1&iEGJ5a_fL$6dim<P8oW&jhpEUG#P:f
%CTc$b*8<AN?%/TDH@L:"4R8c(]t5KW#4bMJIb%HNq$aPZG^_u81Pd@uY0>1(;*I0^.*2VT4"#m:+TuF]h*Uq>CNq+L<<k.a]ku/?
%Z2nE*o(/qPPFP/=meJuo[rPbp)Jt6UV5bnDh3I_R@mp"NdAKJ.-%/dLZKcJ9K-SSMrB7$F;[GH2>CWjJP#m[%<H[u6K07(gX08KH
%35!p;?WU*%[]R]aJNTVQ7C8;9;MbB<X0ZQ=A_#o8b%Rj@o(ZLkGICrjAXCDZ4Qpb$GjeY"5F54d#q*Q'n'"5N1SNdOirBIHQd:f/
%L+Ai\m.;6.kIW4I=HurO8V8a4L,;3aR[&=[>?'gf]L$d]TlElonh.Ps,7^qtX8S7Z=OIi$hHk49+)YuUk%mU`/?+IP26ir(5-WOi
%fp%r0Ro0oC95:18TH$@7U=k]uL_#]<n2j9;C^K`0EWg*<RV5?S+O3VSpe@`E\W8nFrE)Wc\=/k*&!WMR^G.T39t2?*@5d6pG+Y3/
%G=bO(\Z(GXTW*cMEWkbkEWf*DIN877"P4NT"R[;@M,7(`9fGU;h#4LuEuupC$.J&ag*J[t0=_Cu.6$5@P+,Qo'DGi+$oc%&Mec7_
%U07Fs_WlQ:H>*:YGr(JcjTR2InXA5fRK^5n[T#-YFt&CH2Qk0n2!61;Y2-h)c<:s)**T$s%%^lJX>Ya5;V)\B1*6_*AW/76R/,r(
%l_,jHd6[I_HXr(OS^^AF#j$6/fP"9FA#tSFa7<Ltl#+S+i5C(%%(MQnH\)@q[(Lu$8[AgPLAGX.+)3)N&t5P3JsT/(*iP-0g#UD(
%GrF<E&oMaB9Nd\5QhU1.+4&V=cKXii0Gk!=n($L*+iTQ>YFhHJX990j^1;][0"7(J5=+]CY0'@0fH%7V)^=q5W.c+Qs)/0;M2g-@
%o+l$G;^:oH\WX'2#8eGc(:;E"oC7c$j1NK7[3'>KJ(kkS]A!qOM#.PF0@EI#19aJah8:WWYoe@UXGhc"8ur.Fr)lV:[>bRZ2VH`K
%[5bksm2n#(BanMfnc?)9RN8gg?dK]bTk%\EO6]G45%)qJffIo/D6O<D%R8jQ[lqJ([efO2RNC<rQ&N-<rRLqGO[>(\XZ'"$'SSZ7
%]@8-h)^OXuqH2Z!f4<'tmfgkN[VPUrUV;BRpO&jl"!R8d/]AE:ap38rPhD"6)1"'Bers7['-L#c_ij;i.,M$`]/Yr7V<+2HnuA30
%-RDJV(1eJCMMKSZP]:llTsL>V<tJqZR@i]hM--%JKei'qRg/CEZTlH-[\7O.C;&Dt,=`JehBR?fjk#X"X\E!&NI08A)ji(o[8nSa
%9i@p^hA:$FN_haFemP:tklWs?WfaT!_1n+(?_4kJG:XX]%,T.<WfaS]SjLsu^1sJ1H"RAs06.oe]lorGqe+$E/3+F*:qf*o=8YE3
%;7>O^k,(t`A5KqlO?qQa5hV;bfp"\Z4f@P.4(V2G,u5RAGN+CgPO\d-gkeV;?g_Gtl=<iUUidWnZ<Iqh21.>TS8??;Ce:+4aI5Y_
%@?NM$Ou-lG'uM_>Z70F,9?Ld<`aiSrUt^tbfoe"N"OJu4Z70(b-!RYu=X(DV8[;l2Y,'g6/(p.:fode0J4,7cRsR+]M>7X.381X]
%fYO__FE!UF:c1k/Cs%oW8Wmo4Ogki\P.2f.i]#sil;S;*2mtP]Ce0Y0Rs3lSr((&`,IMZ(;gQCXqbE3ZR\k%.n5[JBMJ2nR8C/mk
%_mip7,PW^O,AlY.,BnV#n_AmlC8>B0D#<]r)r8NX8Bj_e1*\*93,%#:S!u=+kn>:idmgeq6JH@6cup?PZuJH`enr]j8606KZ=,Ye
%7GO2`NO1,b&losLnDQDd_S"HV[%Uu>F)#3e@jAW"$g+n<Y'4\uaf%lo2Pq)?"3HE;ZT0P1B'2-(Z7.6.,q#uA,nd&uGFB.9_j&68
%?)+GLO[6V!n$V*g4)72M,]651prs*W3Q3<OOYdg<B=R,X891/gaEI*4gdJB!KLi/S$(TXP'-b/$7._UIc_hi1I&^dH>fhe<LrA+$
%,P$kL%E'Cc3;!i'_b]C?`pu_"Z$!OsL\J?U;S?MLDNEikefCT!"Z%4]bf83&AcJE>Unn\imBG9t%G-<8&WQ69I!Y\gNo,7L$p7ad
%'BT"BKtNnP(e<qi.IQ;]WGK":rVHI7BSr:hH&AkILJuW.QVWWc9_%uXNo,9"bu;:*RCJ$&F?d1.J@#V]q6R=G8'>ifpflgsqe4o/
%m1HNo<-H`cHhl_7c'DF7^OM4iY0H)A<IAFY0lN`O,pPF.PiIN2?[R-AF0u]r01FSfOnQe==GjK+[s^q=g']V-!_g9-;_Pr9$S_5T
%9`93.Zkm-8V*t3).FF_mT2!:cQo,>R&4.u<b\Ar\J&<PA=F9I?pb>h/6m6XU0#S^nWsel4b4f\>>:MsB6YNK<]&CVVYbV_BEg$c*
%%BVE\Sk3S4DL\R^?#/0"3h`XVi>p/3cM;D+V6DS-$A_(FP@8kk.MEb>-c1t!_=g&d^SC@H\oQsTVn1&l7AD;mX3mU!]2dh=>3"i2
%,u-d'==,b^DLuWY[E%sWqJLUl1EFZFWB?f`?7X<8KmHlC:"74cXdQ)u;ST.Fo8&b<9APo#^I+si<A/"6']gp-re>q`H>u.?SI2K#
%=gmhcqXL#[VnCKi939WGmCg6M9!b9-fWWLR6osC\E+FaIfJb91b5pfa+m9C+-a`i3)l^*\%C?JVbIYoNd1&KWX3f@7K,'p9g.Fe6
%IM/H>Z$^DO7r8VB2<9#pe_Ht?pR)8Y"Q)`2U@u1F.bmo-ink/tq';np4hWgZ'ZLJl:OcHqSMkN6p9.;GVe&DiBtEiR5d7KPdIk!9
%Kqh]dM#5fkmlDH@g+8bSB$'o6:3e^ZO*8ZB*oZf`g`\1ne(I`.Y<:5qB"5H5I5E;u2:(c/NOD[mmZCDJL!"]&G@P'QPCs*]>#\di
%j/BD\]b#.'$62tBc34%\/qJ"EVS7)5f@#*g?dh*?G)5Y90ho,k3hP!GmEIFMPh5f:N1$RCi/,-RS@gb+?Wsr4f%?sP%il.N9fieY
%j*m/G_VpF`jFc^;6dk$WjTi:J]'6[F]Wi>iniAlhd,Z.3eke=gI5]=3N22]Sa]T4Ug<a\OT?-13!fAMcBEE'RgRXCV[Uc5?*eWF`
%IU**);D9CIFmK!dhgI_o$,VF/Qep6fNSmbJLKZ2X2M@Io%^-R7cL\X`MJ&EV("J69S1^)E6B@hm0+>XOdB>.=HB>,/ZD7%FC`Ya2
%"uh+*Cpgph)FE+J'+Y6-liTVR6_l37*H2e]2JlQ_LM@t)$Gm;#R(2G$_JICRICs?OhIfN`L/9tafNb/ga2(KRO"9["KhmUM=q$uW
%rs9Sc;B"?ok/uE<L-g<t)H`Phjk3TCk9l8,LHL,tW6/edAd4!O*o!!RK^;%,#7KXq.<<D+,4Ln)Cg8IQR3gXS7D,VL@L_mf%L$+<
%ZC6YJ>ZXY7`(':P_3,dh1K#:Bj<dE:kWN$V,;L44^4Cj_?#SM?e;UngO2Ze;clc<U@&qXS@;c3Um;?%$BS@Uki`*WMa#1Pg:7877
%s&:4V=c<,%BOE<>_Vf624f&<;#Zg"OfO`O,^kVOAD">sP)r6cLX#+J_Y>BnMAMfs&9S86B6so1A%W:#/8$=TXpTN?/FZ?V5=Z@uH
%1habVSM>!,*USfZ4JCM!NdD#\6*oh_MFO&S%!OL?XrBp4KB<R_$583(8-1>7W(XOFW\Dc=d-g/[Z+#&gYk!_]YM)-!chXYSPc3j(
%\/@AbFa20H8aIhMA:):me]-;/m@MQ94d=Rq5c_C3`_YsOi8h;nB%Hgd\&SDhhN!?9rjYEk\CfP!]s&I/4]O\5IbN+Vr13B\"B'4:
%W<[?(+g.i_1BYV0@:]n%_o$*(ClYeu>Nu\^\Fu_VP@+'X43<G7#>dKi<Z>cY<gtFE\!7'1B8b3U<=\qE>tU0]Cg_*S2L"Cc>&"90
%>Vi&8e>Qp92g-`h.i<MTa3np.Cb?N+XmNL5W>;uS8@Na`Ug(?A8@L13rOj?0Q>1uI>%"<F=K2OJ>:m(UIqb8"!mkr88RuEZmaIh4
%+I0lnqi5Cl=3:]pY^bo_:Hb<F<%Sn7F=!FObO1.&VWVaBcBmAuY['O"6Th4)X-FF^2i5^Pk&eqZeuef:RCKCr9=IR4s)"6WOCc#>
%_m0_O>A0,,cH:RY`H`=5]lMaqF6fBXBAAmq2>KeQ:G.WuMaH\/WdEmnB/*tlLKA8.`Dg)[nn]HUR+I5T[2$Z.(pTlTcVCW=?S9#?
%9/"Eg7$O!DPbf2XYi88J0?V_$ZLjkBdA8/#Zp^7HkgD'1V55!iY^0/a!QQqV1ID&/[Xo#/e9+?R:7_M;AH](:.2U%O3>G$PoL^(/
%NdP$1Q',4?hla#E!T<upS&3h18HT%Y:7\gnF@Pf#_GP(OngpKCWt`)FjZM]&dIM#+*p)2>F\(g843Ym^b25hV6n't#19&[\7<Gaj
%"h-2S&OI>@;Tm\U=a"PVp(K=P8ZIcCGZ1M2dmc>^Z`m.iW@J'Q".kh#S4rM@5jL%E^'@hc%]B#H":jNm0rl7D8ipBfcJ(+DE%>pA
%-r*Uq9/(4k>b'D[BT:IHgrqi%caYc$*TI8TE6om'A'qBtOC/`/5(nfGSVQ+-'ZrlgPB\8TkD%_A$\OlWkY5dN:oHFe"X1>q?_#HW
%&BKo?C$Mk^6ff&aF`TAcC;5H<(2&iXVG:%**n=%q:*>kD2b42qC>kLH(JcVBN2FuD!/)/6EIa=L8iX7.ehQqV&CuH;-?aQS0pIV-
%PnU`GME@.kUTn7eYj3<;j#,O4d_WAY_l+<EBJ=[HRIU-?3#rdcP4=qF"dq1YgSnIoN=ekq=SYdNZ<bp.Jpk(ic"*%ge9T2C>"ipV
%0d+?0eKgci8a3J<<r!k)LUb+U+jZ@9.03Lg-s?GU0l"ZQ>ISQ%7kXg%f&iF&UM\MAh0++L/MDi9!ZOab[ZNmU0^3c2B5D=j1AWF&
%V[h8:9rS]4Xj2%'@T?Or9,hk^L)4&ZU8uXC3M5p2i8.pODMoR3g,RJO4Y3(r`&C6KI<!oHVGpE*<NH@TY4HePAYmqCFs?;fA*ooJ
%h.NoI-rp#qEd3pZI2DRB%B#H`..g.?'jMs[^(S,cNj<gq\7Y'7&LI:Y1.f^%naZ!*jq_[U<4Vs;r=o6j)2D>?OR1b3s1^&SE_s4X
%FqB(%%Vhs4VRSjE*!*\#[!dHK't:3\8uPIKje2$pDHheUTPgIoNLo"gT[$^soe=1a*n5K+gX,XO^#bp4qTDO]bT\O*N!bPHUg1Kb
%5+mV<I9O'm(SoL5Td7&feJ@H+Mqf[][Ve+*o4JMaMiFj0OqJZ:pmP!f9XBJ_hY&*ZCcPLV;9V$`W,-;o8A_VT41Q>1q0Y'"'1:UL
%.]gdn*)umU#5r[BeF+\1US_.h;1b(c`HkFioq[3!cjm^=FIB("hhgd<RA_JJaMUr)KiChtoP[@P;uU&_W>lbAicl#'=?WI#;Up[s
%H_`#(;-KM3538T_q_:1?7J.Kc,IEaYN`Im5oqYKgVi@<XE`0lVR]J3(f<umjkK-Y?@k:n#jeP3hIkm3bW_c3R&#Ip4ai1NV<;@q9
%?*O^Y8Hil#G&U'<P:A5n&??,:-P`T#lO#6l(&kam.tcjV<^1c^Bud,%08;@D"]a2/7]"Yn5.dHc=k>Ki[a9+k9oufT<$%WkSLdnY
%ee>ZXrjq(-Y.E<5UghZF92884n.CA_[qtX7X%b*9^33^eQkm=d<VY[Sl9LqCO/c<C.Vuc#eF>J_R\^DGq7F'V:5@6_DW!ft%;dYt
%*:HL"hH[bNLU-Z.PiM3-ab>u>rlX%5;NB-f(K-9IP[blu=@bFf;N?Hq@j0r983%G`NlOo;nP2Q6hLKK6[>8NHIl<TgJQ'cEo&5"7
%#tX4m(kMNMC^e;UcAHhjE=KHCL3sTS"(erkrORg#`e6#)?2$F0p\g=0idRr_D=83]U[QZ,jj1s;$(d!]\&a@!=Xr;F&r*f5dXU<s
%/0kY!gFe3K9B#bGq#1:.^A"n06/d/4CDmo$pVA2k-/*G@L$rW`4Z8(cm^)Dr#+^3e=9\U$L$r6=&Z2c>DA0+ggrF:\I,FMIC#Sr8
%'C<DfT&-[A]nW-Fk0VSMn9kjog0*B]]M%41Qs9>LR`1&?5/heU+L`NjeBNn8\P:JLfoKF"5&Gc82#<GRY="74m9etehc0F>Qcf'!
%npQiU%'K9BU^1i(g\J15d:L]*LA4odN`2p<NN('O+WIg-al$hPaLU_/[&1aNaYrr#Rb0Om0#&@CmIWUA.!6c5j=9Vg085WrC8^g"
%h"?s0Ri$7&n$u^fH;E1</u?,L@6A=pHqIW/>+q$[Q]K_DZb?dKOo_M@1^SJ+0#6Q^A6i,KmagL%n"rD!%JLs.&_PP"flX"0kIG<'
%kcL?")93)R@2umX`7&jK*8b>KKTPZR8aX&+3LBLYRgk:'E'&WN%F_e\qliXU])V!i/19acDdIlo&R`#U@!"Vq$_"_rXGgsa[[ZBR
%qep_.dnXO_T&\F7?fYg9RX(O6m5E,-pRaPi)TWBHRpYjZAk8CF\DJX_r3eFoNY\J(f@h/".UIIk%BF'I-2P%'GrL.%Xql^s=dQaD
%D%!K'J&><$bh?*og^XpU#CD0,,TGgn/\1ENcRMn6YBn3fOYurBL:;t;2gloR=3]HgM?Y#._QR[jH'o?Lk,:3aOg:s`h]<XTV:ge7
%^+0oXEH#AtX"9R&,t,PSS[de@Lu+<'(A6"coC7c$Zdf=YU5(!V-t`b,;`iHLEKi7+^^I3OKeGhRE.,'PoW6iFQlKgNEl;^5N"s=!
%dUA>e]S4SCbO7n>5.sa8D`d37RE@V3E$G-Z]%0UE6b2N0&2qq!O&LhgjQ$!Y<i,-1>^8Q[gZ;AZo<K@ejeLr/CfpHBo=`\(+!:5[
%/o]b_l2^mBFmH"fa<a1/NQm*`q\KtOCG)(X4M.)Fp2"\;LOm+1W]"Q;rRgC794M6i\paTh4@'7#7csu*P.H4W^Qk=XAnk\]?"n_U
%b")3polaCIbW+&*Yo4I!qYepZY`j3+%#f?)kl0U4pK2Cp8'<<L[7?^oM<008[TJ`Sn)$>jeq;aP*aR!IG3r>"5j9FFSSchW>$J(4
%`G9BJ?5]ML5?O,c9j^FlL5^C`mb5'cZ@;iDFtdNF-W7*Q8^lK<G5&Rq]&>R(I^h'iVt&C"K5'-c(0eYZXeTLq9gpq9Yj"=jZi:!u
%O!XD4[#\n7s6AV2X0^@V4TBDP],TRLandYns8EL$f)O-0r>2uU"n$8Z]3F4](:^s[mdBTjr>2uU-0`/TE-EN.h4_C6'BMua0#>'j
%BM<>.!E$]M>2ij`Lo/f6De"RHNR&r4*QW.d:,3l'ZSngo/Y*?WodibE^,p:[>-V)3Y)BQM*C_`t8qP$W[3gC4p$4^U@7ltm\c$ut
%n%KmNJk%Q7ki6E&a`<7n)u*?cIA;3^e=0:ehpDh-]\T4h9sIN:k9"H'22Se&'[h!fMLAXh%I"e,mkcKe$c*%\#t7LD0oVBca46C7
%$Bg5H=YX7Y=]'=Do;X(!*5d;4CW+#%J<$IR``5!D[pIp'7FZW`[r![8CjBg=kglWu(=RF"dL"ST"pHClFhq;.mg)$%Z1`_tf+uR^
%#J2ZoSsuqVGnt3>+eNu5j4eL1PK9FKGd<KOJKAXKf"bOmI*^K8d^4"-b?gGSXh"HaZj!6PM%a_k"5UC!iUCUlj8f19WRKHMfMlP/
%Z3B_HG$a_=!a'uFQ<+R7_.-0g`Ia9+^iE"mZ=K_1egNjJEj>i3fSORQP'XYDP+rpq9"k\+7SkLOS@/5t8GJ&j]?*[m7[N`t-N+e6
%3sKf8g+eqT<LDiO/ro.EWblf5msI7XcJ1Sh*)-s7Hc0g.]g%rTVbWLQMJ7T#lITfi9HR/(6B+0k'5f8$h.9J!Z1^(5=-4;TQ#NN>
%jXM0QF>5[a:Y"<&?(;^.P.4XqPst'eC_&T>Jkd`E<EeM:/GWXq8NWX3K/;Pq.G@g.9J"H"K<k:e>K(V'AfG->7("M-:\#G"iN?+6
%mX02rZ#K8O]t>kgT=h993Lc(1igT2^p9`*nN9sI:eD&[c%UW7Z;@B$p/-ULlW$`JS\keQ%>##7Nbm>*A5WF/YJK/'n;)O`E8h&\(
%jUSOFV6#E7Xo.m!Q'-!/**&hGW`$t],H:\,W`"][,truU.IH5"+VrG4fZ6I&q3*YsFXOLB'0=p79?Lp>)%BJ5c`V_"1.FpVBZV)C
%)5@]n@q7LjM:tZA,J,73<(c'Z,%K,=aV`!PknE`j?1j%ll+3BP^E)M1M>DRrhqmqVhhuqFrPh#unaP./7V6/*kRM(RPDiAK9?,'!
%bnuFPn_R26Z/ff2@"'hSe+CbOf]S4'cIfDdhU*_i9$4*s"t?=Z5PB?i@jPb56kIQ[[7eg/??/MQ;pL345>0:8aVk&;3MY=,36<%<
%q'7m5nfj14ooU4oeU>^k2L[,gc:HW>7e\Xd!r2L])?C;C&(p#?Z6a57kBP@9dH>`SH`9"M$P-^qFZuglFunr4a7$a5Ul;BZ:Dn^Z
%W)_@D#*fk0Yh?FT7Qbs"f:5\Dlu@\YOp%WuA]b-NAY_QSP3dm4$a[tfl0mTpKsH<H9@ri^)5>e/dbhK%UZJhOrAtG[B2>lF;t?lM
%5_%N'$`/q]KRA)'';:g4^I8VO8"![#-WD:bPX9ZQagB<MoZpW!&s)dN&A->nU%.p+dtM^mI,:0I'@M<[O!=P3hYDE9SL)_QfB\^i
%1X]XbQ6qan.\B-$iVR`_mBfTKKF"?upo0dGI\eF>qh2tma84EEkLlNW:fpg:@n$.2X*T(b6SKq()Ai9YIu)*YA6NZnQo;?G9d2>E
%1h]6"!MJaNX`?h,JM/I]okhMlZ2)nQ!VO=4`p!3Hnd^Wq-52c<B$be[Zps*PY,blFfgT$q&MJ2RS@i&Za+4k\Tl5=R,V.R%o;dlB
%[`#&0fJEa4J,fMkX37]McS'5-HTueMEe^ZNs75\M?bY[;[IS6C?bFY`qpc5WR4%I`O$<C;q:-!gX5iNTDdKUGG&hm!j4X+jX6\q]
%f71I#+'8$::JWSqcEf9UrUTkc0E$5=jejW<H@9kAq?HB-VsDrHSY,@*r^C/5n+t0$iim_\pW1,EbJhTJXZuUXe_AQ>C]>s[Gk:LW
%T+?[_ZK5isMK4d$Y:fER?]KU-\$m/4kBU@(^%q;]X!@QOq9t<f_L$aYhs35i=u]``$gV<t2>MHD?iF.+It+gan"-$CI(l(6hW=bG
%+5ZoZ%prIbI'\^*a'8Q+@3-NcG\db5G$"o3Zf?NWEo<F2fpe>>!\F@uf8oDbX1"4Ab@er+2nr[h^%qGu:]L1NeM!9e)\/-/N\=.&
%IprXbIb0oFIp@EuA[Y:+KKoDtT0>K3eOr,TWc=6;S6t@Uc<ieaH#eAEP"S4@7lb>VRQkZgfs`nbkdu=fI.HFtFSMf8bNEfiDmirD
%%uf&:?_:T\CjY<7=.MPHh&i()GOY3"L)9DA>]t40Sos\'ni?<\B4ZNVfs!Y@TDnfek(<VLH0^BlY.qZ\^A:F8aNu'N+6r.RS$USE
%Hk\`a^NOq?kG._@8$sd0rG,_)hjhC$QOgRClF)h'3a@*6cW6\%lhq,Z\/t<fa;8KmcRtj)q<E#!T>!>/:Wi"dmoTFr:gWRJo/qKI
%^AMI0b5ZI%I85,tr,5OWq=G6Qi)?$S?'b9oHp]j0"XdHmAC3-UpbJT%!!\5pIRTGPgPp^Xmdk95CO1FPV>)A:o/LZ*1rSqK(O:0g
%>NOE0al(/5VP>$LCZh7Fn\9?tEUp1.FYmrHB%A;O1(@HbWVh/2T6^&)lg`dq>B*NB`nP.;%ur=6:N"iImp)?SndbUWCU0Ea[mFIV
%_u3lL^\k]6U7:D<6b2g6gTi)AM[h-la)nH]+a=OOYG8P2SO_PLBl.1d)uf?02&Yt5hetr$rn@+H/AHN$im$-cCr2P)$M*(-0&G#(
%\@Ojbqq'M5[5b`bY7KOh$%1D0Y:e+-ENE]ac#0l1Y?nlPq4iCEDM\>*]Qnp\/[-2upN@8'#<`Dp`Mge+hR/@6Z-^KZ[GS0&8*Q*'
%IM^O`:ML8!laMhf"uQ>Lk3UDYT3Zp=r4+@Rgpg^[GH6V=V-&<T(Y]DXip8YGCHgDQqh8/<@!:kJluls9ARR^r_D$Hj:@@)BM_KMU
%pM(*Xj;1ScrIKH2e,KG5FoKXXs)iM](,$p4aBNHdHG'4HjG0e:n,N7Orl.$K+&Cu.bORg0Mr,5h\aLPSB(+BX7fHMlaZ`PqIg=`r
%s/fVBfCo3'9)/.MM!U:nfQH#-"ZeQWOmT^og.nO'W/^WQiFH:kd6>?>I"9oX?Lt5hb7d9e=.fNEgQVS9>"atNTKVlO%aqeFD]"Xs
%dA0ON7+UhB!'G9NqF$<P3cq74bB^R*ESQnJm+l0W.A=*_bt'!#'It\1em!bVfT+c\?!`@^I#o*<J]2#,E8;.Zh)e?G-Sa7BNA'hR
%6O^gKj-TQ,LV>I"RR:<Q`^O>o83_nP*/2(5,YKib%XPqeLCUd8jLi!7#u^fSYg;45(&68Cpu:\olH:uN*;^ZHq&TDmkIhST)"_RB
%]6Y/3\g27/\V)"+E]R<1?*0Nd-@\^a+4K,6o<uOCnL6:G.C-e#c4GQ%!Fueg)Jd^iLj0;:/=76*Ebq?`pIM/-6jG%mn5[";B_#`&
%6t9-UF8ucNHcLO/7ku0kA(M6K?:ZdKs0MHk?-OWdU@A&*c^Ff`n/r:-Q):SNEd7%9#YBP384'1d\j,!-reANG8[sQ4mFg7+kKZ*d
%N!Q8>$m1T\7Yh1Vn.\%:&p\"0idI?T)gpk6ra18>+>W".q*>]UHjGfTkWG]K-h&LFU"*4a+GZ':Y=-E<A2sTJ@PJ:e+b?\JLDM=$
%a(k><+"NGf+fKl<3W0m`V"0"u#PC<<&Aiq#AGJ0GK!51r/c9s/!>,#jN"l7q.,f)E8b#0Wo"S(0o)IL^ceQB1J/:8sp3!Q+GZ]6.
%<4`X6Fm&Xrn5PpoVU&&Agj^3Os)cT(eT:).FDCR;JSq4DCSdVLBYV:.[TBDng[-b7AFKNDXF0rOp\+.M"C^9U&&_fS(]X8k^#E[l
%)F&YM[*.n'5P7PJhl,k$S;JMI^[ig^qOpppX-nNkE[dTs1En+)+r(uTmuY'#8_j0T>cm"dS$mt>%6gNR#463;g+8S+ED%nQaU9kC
%I1>n"][sZAp@gn_Go0.oXmsA:m<@lfHJ2k*,&Zl0Rjsr:2kCH;eb$6+/j,G8m6]SsQnT/+4YXeDAa:&EO[_CL_[B`1MeEbB//AfT
%U+&Cj3RnB(W!af4"02h)HT2C*GL>XM&Q^CVJ`.JoI'J;$iXd\iQjST>q5$&oItU.Dcjbr[or]qB+UfnrcT)2,7)]NGSimT43*GS^
%RuCG&59RaB(F$&$5j[pfeho!0TV[C_UP$TI0S"^]\s`mj]C-5dCW+iH?qdb:O]$n%I,$FFnW?`g/EH!3_$`ZG#5+5q''R+?VK%$o
%i66e5\dQG`-h;Ncl&.7$K;$af0`3")(#^qibX_"k6D*V93<&'AEm)98s1C<2JW%JnIN2#-8`8n[]jh)[J>;<2KOHWn,edmPot%F=
%EI]NdGg0*Fno1cE0$hT["uf$*%7WVW2NZo1-2JT-^aJ_*_>&s[4/Sm]^`U9n#ZR.MN:I%lA8<9#96h/3a4"_bC\e'<6ZchclL8Mb
%"k,Vk#kpsp-C%):K2^-=V9Cli;M*.DO+)reb8HCaqF:)gKt>GSJar\plrTEg^;n8;gl]SqA]hG+8JU\mLn:k<=;8#X`#Ao+kkc-J
%(kqR-,>dO_ip[P\"egROBSurO:IY$@G\Qr/X;/C:E8a-24HO"b`jPVkQc[*0KuErD2u!MTCl0_'J0%q%B0!cgYadE6U*$"];-Xj1
%l#*IJnQ?QehT.(4!"r<FXU'r[`96HPB4,7=qc%HU,i7J["[3*MF:&6jO]]J9WAqKL$>IC5Q7Ib?:n$;oO=g]PXdH`-k-[W$M%DWL
%Hl`bUh3FZN+X7<RfYU"YK`f0qG)oZmMGt1F;b\>r+^&R=A&BY[P>G$NBg/SbirUU+L$E]K`:tou7==[R.,HtWOUg%[jPZ@_!b2If
%XfX56hP2.F!_>9B:(f,1f7ljM$u"*5Mn352niC7uj#_?P]n/)X#>(%cJN960NYMfB@Z8%4(QDq<+mEB^d8c7A]l!*@15bid,Aj8W
%i980Kp^'0,oijg0*>3Gc+>+!Y$#p-H8fQ2D_%c6h"7\p=1<$SI;>-0Z6Qg,<JNk7ZPTKJ<<1lFL>O^9Y\]+^c&-AZtLlc('k>Zuu
%;fa&p:sIrbLHP_E`X@#R78H>k)0j(^Gd3\q,%F2X:WR/lDT<3+`PgG!pL)N*(>s0$V'$bE6Fra",U$[n*s[.Xhg8P*!WWi-$TUKN
%?!/\3<\4(kI#EmcUi>lV,a6PV4=HL\\,hJn]9*OX]-+3jqV?^^c_Y88:m,DrJIoo>J^"H]I&FWQe(@^ooI2HA>s6V67`+YSGNEPe
%MkI3tT1N;n5n=R#k-B(UhOP\8/m/0;-42q!96;5JVIcVY6M)HLY1\bLke(4Q7u.MlE>QSD!8\oJ.e*s:_F,OAL3+gXfi5[iY]*;!
%Z,j?U'94A1C<('I(J0qie,W_34bioJ3QV3>ID`-#9'(W!qEPf)=)\o-UAi\^T6BK=G-B?t7r<!K[ooXmQ@CpQ]B26*T=UI&2uZVK
%19;*cV"JC>YW7LKi.%Q#N:tB]#XBq[EmBBbhg]U.&eE;YWp!=1-;p#:haeT=7%l89nE:G@R3/(]MuCti?E!Sff4<g3mRUMNFA5&V
%SkhbMH(i[5HZb_NYj6W8_%%Cq2kY.2oLQ89#`/75L_qn2Zj..O@.4:)K.?l(:U/oo-t^'=!/u$94f$C1]_I*aL,,fC\%)/Sgt4fI
%0_/3$h_'D03$DK+fSbHpe5ELV"3F!oM2D8u<t&9H=#Z_-8.0se_\OX!9UT>V'rOX[I;i[#XMRO&#@.?1A7nGP$J5p3-[ZI\@.te&
%s)Z]L.FQQk:Z:36IhJc;A.Zg-cg!aTF##*X\J;gX&1_OWg_;#N^["2En#puC,0s>FSIGArLTodKs8QSqN!p#?)\rD?Si!B[1@W*)
%%0E1#!3;p&1Up0R8Wk-I>=d0fL(:_?,[`1.,/Qu4h<_#&m'.J:(NX&#$(N(0Hd!/qV-&k3iC""kit]:Wk;gQ.;tP?!c?#eVE=:RF
%FJCp;%-PsM;m]P=[JN9rT9M]jH84P(+!3?)^[ChN(<(@n-f8"js*5:ulMna_j^tjuc[i4h"3nRS<,\Q,*C$Nfb4K,Se#F,HX$W_<
%;LSJI?#L:I>54Xm;"UaUf2gnGE,X7*>\FnF-9aPPB:&/5Q7TUgocf>rCZc&l!kgVX!;tV[?Ykr,BA6WPohtUDYNH,0s7KQt6%eDg
%]A9RD_^=/cIPZM<_LLl*J'ff1m>=])C8k@=]mCRCI?"96]+5pBO4ILD^D33>\Xj/ihR:060T'H]itngN)IdQKHPUV:[@I*NKW=oA
%XT[Ao5J\&,oW[--+e8H1?+nL\rYD!*eSAMD]l0[rHL[h:qU$Wqe%_%orp,@Oh]q,nB3i?O6%?fj5<7R"l\GN'Ku31p58O^[p?t<.
%\BeW^eZQ[d%E./=Psf7h"jFZR%L#/iF%ZE"i#>eFhebOV]3)W:nB\iMIK'h>j=PacqL?cCLHtoHQk8\7fU(@lrC:Mg?J>Cn]e(7N
%r$1:;g=AJ=-+Xril`Jj+IuE\Cr"UA.PeZ#1;qX?gqs43kVLOL5L'E.A60_fpn6\Bn7=UM<`G_#h\Y&bF)_;G?\9FDWE,:$2]oS``
%2F[jAbJSY(=Y+3ip@%HY<IhCP>HHkmgb+i,h"hBo'E+761K:Y7P981W:M]BI\Qpgf3j/Vjj]9(KZ.2J:5j<F<0l^"oXJ\gGmQ@u%
%[;p=rY?Ak<qE;Qpd+oYrld<Lk\b.du:h[8[c,q,-n^K@Um396X0"[ZtUXT3B-_\,dp[DUB>D:d@Vsme0fW-ql%ECK$r$!(9FeMuQ
%ora"g/N#",-abP)=KaV7..5i)e/]m4ESG.@8u;7k?OO!&mO=s`#L]/d4l3#&+9"<>pQmG*JO6\k?S=6/"#+r43?SNpZ'5.0VY=@7
%dD#1hYM8mUO.9J??S]'+'H1r9XibFW>3J9P0*gjH;gd9bj*Yg1N][OrE8lRp)7ED>d*+RCNPi/nKj(NS!+m_[%U5lr@%i)JGgAPJ
%q-jX`[<hA>%`J.pXN,GT9>(#Y;Y1Dlm*bg64E+:!=*l&sWjE0.Q"m/OrOEV9oXge;;.g9Eh[6L'm`o9ba]-IF&uq"V*dJ=_hUQB>
%^/-s@2`fJipZ,q6r#O,qM]1qUfk.p[DO([`::&W=$iQ8/eJl2CoRD.:#0>D'B1U5=I]n(EB8$X!S,H(_OYO(?riKH(5X!!!4ToB?
%,*o_(V9b1I$p;J&WDIA3#%5)1lRVsaVb.KCe[7^_OM4^J(9/e2>1DJO`>c9ma#r[6Y-2^2pIFFiimaU%fBZQmO;\$_aZpe9_hi!!
%;I7N3OiB'=op&:[l6t\ggr,D1Da,DScN\;b\[oZa(u+JOp0a[cRI51V:[d)eOll\omaB!3NKF;>g'0])`m_PY-:ti6hk2WA$4pjD
%<r??7^$AUu<Z:UWRFUlC5cQr`ITsSNdVs#'s/k'm@,Bj8)M"$/;\8HK%0*C?*a-&XR]Y-=%AGl<ICCj+h,kca[bkdci=CI[?Zh^!
%$al-tNSc3Qm^7`rQYpgsOrPRO@Gb=!+MW-qk9o;-5FLn7le[(;7HK<[R7?W29(q-%UlB$Wkd1!H&,M=cf2`9=n=?E(^F%b4(Q414
%&!"0sSts$nX5:7sG1:*a?@JP*XS-:%Qk;)\0g[]nX*9DFTMjelNbr35pkRu$nU4MHn(c^Z]?0pb+V"3d427M;B0sjb]pG/MqL.YC
%dXEbjF7ter9S:%G)iq0UWI%SdonS;:4%`6KJ(ah/d!TPUBJ2PP:B0gS<Z.j'PZ@#oC\7:8V-6ZK;Roru3WG/8[o.HId&>L(bmt9`
%eUWB333m^gf`-',/\iDOr;0W4j[XW+WB8P+><l%'5G.Sm(2@\Y'QljgB,c*nE1er-]k_onT%#rn'tEnrnpX"LR(N?0<,C=U\TRF`
%6L#Nb=0&9/])BZ:2g`D"T,m_pXdpqA?i)CF?`fuFbV(]uMJiQEe#5r)LfaFjl=.)a6K(lq1fD*eC:jbLKM(X*rmLmR`/ZH1I^SWB
%q#P&*DhP<p"$X*SAC*^*f:+EOIn`^lo3Y9#Ej(H5\:&GF>p7#Gff(]3L?OEZ*ku?^W^-AYE24$pOUAuSr"P9QAu[M;W$@l("8t4`
%6fVKhIk%Ik9o5o_^0;kiiWJulLTPaM2JY.`,t8lXnd7e9bD!]Efk#($o4)KW)C39$M)CaZOp!U2LSN474FGP^hIr1(/gku=o+gpt
%/&*?2E_c'2c#8;NnH1Lnh5lqO`cL5Hi5=!YrU0j!-Kq)a`"ss**IGY#8=,J=r?:j5no'gmVtVBb]t;"%^G$niiORNP4FVab`VOfF
%>A^6HF7,XCK>29ij9#+ih^N>Wg92ngPoTHDq?)HFpGN>d"L6[*W]0rs`m>N"VT2L4Ca@M<Xj2@\4#t)[Y0hWqf=p'MZd`f><(`dT
%6)jGb^S"!"ii+G+^(roZ"u0?L3W!0CMMGDRrd&*mf/%AND)cK<^7V*&]p\9a4XdD8L_@5/=sdI$kBkoNo=It><?>qha8_R[_j3ug
%2XLJ2R+/Fg@a"`uD<ns`^Vlo^fD?>73*u'9Hu?&2.CY1gC:S+THtdd]++'!7Y8b$75-o76%Cp+7^@JI.p7:<`XW#`a1]($.b?kP!
%?eL],BX&>ZAN/cMNg#nR/Gi3`$=Z^GI;++ZDUc*kX4=tK$,tM\$fTUi:Z^__S*;g_^Ae-&%:)=ojL7`$V#"\SI>5i[e+Ul;nJ9t8
%?I*9Sd[6Hr;rT<N`RXsF!uRT">-T#?[)$72!Mj#=JY&7'pu&Q0'0>r#h!/*EY?"rAqcBMc$/2*+.bEp/Wdcr!01J?D=(qV+bdCb,
%%FD5bQX:(2oL\BqQs[4BHgYb,IkD]5qfQjr^-<>K90)>H_u:n`LV:Gs]6tEJlCTPH1&n@BX.?\g>0m//1-W`SV=mf(JYFeU+.@-*
%S;hAe"LZ[,LVi`<b5die^VaBJ,Bt#6C_UWtG";93l+7COJ"#6]/lQaO9-7ctf0c*]h3I3sM@m8'4*m<b5@#+q/"B=NaO/i.b]7dt
%okF-)QIo;29T>*E.tpr<fGq*Vc-YhJn`o,B>+49Y)V\S9G)F+.hVSf5KMk1/f?-8>*iH[0jggl1jRW4JUUAn2oOhR#jghK]e$[nC
%B-,[u\!H2Wq(Q#U==iT4WNjJSF)@2f@DX.r1,9eRXL<2rf,8]c4dCJuDme$ZL[D##U)E6tjOE[5k.*O-^JphPn2B]!*Gmcl*eKUS
%bH(842KeT`XM+"5YF"EZ<j%d%>H-4bDJGuR1;6q<J8#9r.sJJ7S_V-UBoo;H=3kJ#1/I<(;fEoV0QK+@.uLI<jnYaX;]Z2[h9+S:
%hULN5kZ_r<[%>?4LX3m&_s*j50B0'0lG,7(o6@R.0C&N+m$##ORno*dd:?j%l7TW;*BRTLQ91:g-Q>EKF2_VI"[?"Mq1l("Sm$@p
%KqMQd^727[Cm6^*Oeo>IB(DschDuX)_[T9jcYYd9R)[@@>VE!j`Ne%U_Y2bYn9VK=$%eSrK1n4^lQZ-[/)h_1\W,/H?nN9H#H-!#
%buV,+"ZU%t]eDW5<R+Qr]iX(.q:<W-G("i'1d;^hHupXCIVFNPK5CK53Iar<SFu?+Y%c\1g'DM/d7b&/Z!<_rZX6(!/S8<9bd8\C
%PL>aEY(sH,1PPYPPsk2;M:3=>ieBpr-8:F'5Idl[O6#<C]_s[:Rc!3"fr=liO63)3lTi:!??1$?5NV'o*Z+0.V[N*;V<=Bg3mDog
%0]$\:]4mp<Ag:X!Fa".$I,P'0Pnh,W,*TVbFQ^fK-"S^QF"r*-HVW]EAiAQ;Ku2J]`nV[)c`cGJ(XklM`HHQG\@A(nng0Ga3k.?q
%Jki/#r7Tn(-cQc4D]cCD]Q?XOX/Y6M41+U*mboj,,*]sSKo+mMd+g(B&rmCLjDRKX,brXC<gK6"VdhTrIC_hE'^A<>^^3b2,r>5X
%jukX"\)*$hLFPJm*"&R29.k>+=)q<'nM^"jr3PZgGb@KH?XKBdC(I2&2VO^_fR.n34fES&J(@:9lj.1V>H3j8O/gJk<*gFaD+nK4
%beZaIhOC.]Q(-#IYIq=u(U&KH&u/rP21<([M!!itmoGN]2cI9[kFc4Z!2""Nq"D:ehS%$IY@J_56;MFSQWCDgf5m+NT:Ef6VJ6lA
%]7ZUHf"sjfm:^1lh'-5F=@[Wq\,%jXL:R$@;:nG.@J7)-EP:hq(#dV@HaPSQ+%=:3[IXkUF6ft)6akFC(_WCgQ[A_Md/$pi?ZY>^
%d9#8jK*`g/mGu.(`J0lTnHrfqKPsAh-<Js2V:Y@uh*u:ZZ7s#0"$DOERInmMrGhYoBYCX5&,4CXRe`bG^PXboaA:?1r0:,8HNj`4
%M=SWP[o#'d0hSjh@X@ZeC^Xe8_H?Z-g6h5D[pN5>;)kG)K;ZgjHLq'=#1N38FP#Goq'[*9c#138M*;Y03LY:cO59H-KS,PTgPNi^
%D$0u\XUM;-n)&QZ8,sUAoP'ngmZX;E=6o[]UZ)=tErQhUr+n@'\6pS1Rm*?GY%9,Kr=X!#JPD/FS""3B/+\$L6/U+.*[baYrb-Y(
%,ZEOg;KuN7>t,:?V95T;5.R9lp=?Y_`;Rr#>)jqaoDZ\t9ie?-\!HR5,#GjQnB1L394DWu]+i-u@@I0jglu4AB*KYmQ?puOk&AN$
%a);cmHTXY2@2U+94[6UmkiplRIs]SaA!;2&d+BB_\Tk7c[bBsU`7*XtrF7D!b?p3TbY]$Yc5s*E(4j)KJ^V1JgaV\0Q\>]+6J*9;
%et%Q8G`O.UoOkMYT+5QpjC(8>WRDi99,h%!@Zqbkl55Yka1;-c$&=2^GaeHbh/lG3n_<[6nR9'l$(0l2@;mU4=*JW;#be7?,7Cl^
%m[l=84S<H5&MQrZJM)C@Gi'PM0:G)Dqr1bjIp,JAPWXC[)q]BchH-%MhG^T5c'S3/i4Ta.3K,M2GE%T+5JueKQA'$^1bQGqBoJA2
%r\9`8Q]ph1V/P89lHZ9MJ3A#'GI396ihaYNN:\JK1D_]a0,>d+Wcg<OKM*6XVs*PO`4&-%=@Wuh>fMCLIO5M<F"raT3F\d?Yt1@F
%B:r6GQr$KCdO.51GcuZY8NhS`J!O+I7d4+Qi8JYh%*m,;48k:*3n^U:/.:tLe#\S2h?$mQ\EU8#3r:/n/%=o@alPO$0@=oAW-drP
%H=D^_X5.T(0=F,P^MJ[+kO)i"lO/bhHFRb!7+IS!!ujIt]otTST#f]Qdg*:;Cpqhu]E72EYh%@X_;*!F;Hd8?1p]7f<rq]6ZHtOi
%2mdrf2SPVUmaOmF6O+!?n%R%GX+do@]tBr]D(HrehmmaC>k.S3*F)=@OnS]XZR<R63I6%]f,j*LAF:O\jiRG:=1TCV-m%_de>YYK
%4!'="JEQfm9$Z8=4p?GD8PLO%T2ki.0r\TMG?2+-WG-G?'$m6RquZTLlY-8M(`u'\[t_>gROu4eh!mCt")=suXi\hQgdGk_M^OGk
%\C(9hcJD>[4Zo56K!Y2M:Cj=ZS\=9j^%bOHUCU@?=1QS7)$;@V\0pS9r2%puU4+A=^2mE=,If-29k5?<nh!N3(]N[2Psd:e:#.<1
%m"t(3E^(UjZ$ZP3"F:2Xq&DOjh-6qOFPR5lBeu%@dq';"9XB0AESU9Eb/@V/DC)26r8cl&h6`q6:HT+NiP_4rRBs:IphkRRNp`G*
%gMcDQ?LZCRht+97mi*CfVYr1DCX-.Q]?=/h-X#m]b-#q[TQ:TpXcZc0W(t>G;oc"nA!H9nSB^.i3h"fnNk^BaIdo#rN[Dqg<%k8l
%TklYcqoP[u_ODM+.%iiWk4p-=_,DPTY?;:Jm%t:p9@%"r0/WXhj$Z:.SY$gl\Qg!?pgrsn7N_D`V5I@LcqI1s.`-uQY$8;d$r)^9
%RnmYrX/AFp(=2CsdpujZX&M2KY]=eJ3OFsQFmf0ikV_]:*X9TcNQhCY18rCff,YfP_*cl43BSJ%UG(8ZEk9ViSulYWF4E(>Oo=P:
%;>0cE?atGV-M&TtCJOf2[T>+omcl=_S#[8dr=*Zis-CXcaKDVQ54r@Wg9IR=S+LC^?Bl$cURPqCnR8smB%&iq&(qf;G$V6F/LSG*
%eu!L-c,mS)ZZ4;`OH%X4!*?Ch"<"ihjYC&L:Ys7EZKrYGUC<3M?&n4TlXi*Rl1&uXp9O5\jT2()]!r(M`^),IS2:a^SMf65c.jkB
%%(FtbJd\&<Dn28N3Kk(k-WA[Y#]Purl&5(KQ_S#&Aroj.RX\pg*i2-:3MKSq;^OLT_SjaB`;*`O=,!32ApSQLf/c,j*ulT1noptY
%`_Xpo6a?Q$+!(/(%OS7Z<BW0cosnq.bSU"$(,5Y_J55jFSt%k^c)lrMljt^H%EBfAk,2$O4uXX9<0rYd)m+OIWm<i0h*3O<T$Dl$
%T6m)%#M5"M4U)<F(c+CjgmjBc@"D9QZ,p>Orb--=PNC,@V6U9">\tSF<mR*SEgrOg!^f?(ZfOYmob]S?N^ed7=)Nd_Dr<1qqW"Xr
%SQtHQ1qc#`oDI%3n*n!6i(>S:"2kt0U3$1uE%V[^[bo2<f7lc+hbD_cpI'Da>@!LeB*_!hnX+`PI(W7uG%(tY%sm3pk-uGcC"-*N
%o<g5UE>-$3EVE%g-rZ[.bb,ho!d=.B#&NEZCcFYH;0qr\8V+%Kq++/G^IT+ja?9(iqjEA^-NjK_-ID4/dPH77h:__gnm&'>@lD@'
%7V&DDQKPE3pL(AmqT!Z5`dq=eDO0H[ic8ooPXi!0C_&;&A.&.El,P8%S]t.5VJs&#?:#/G3HGaG.7(<WlK6kNV/FM?3EsbrA5>VF
%/@Qo%3:[-X&Ij>F<_G]e_0PJ-@Gh(fV/gj13mf'S@/&acj_`LC10<:OU&EDc]_j?#j)Us4ioq\Q!8j:t]e%J_2KCJ\LpOWGIo3kn
%kZP*-L'E3qb)a_3gH/\85AdHd`5Kj\VbP%+\[/@sIVm'?9#bK8P0P/GKBN:a%J8-7F*dF7Zi+bM+ISor4T4ZklgCMHfj:fZf0@Cu
%,&Li+a&bRi6##c3^:9qARpJ;34KER6W0lD_p5ZEQp'U0[QrnfA.[KsD*UBN=qo3-4k:?oZ"jQH)E-3Ej.=7(_@8i22l^+[D[_&s0
%)'cIL?M/J]oPgKa5BT.S'g5h320,0*%kh]+=3?"_1o*;/a"-DfbJgOS@HXS!D)eljjbq)HOf:O2?K+lmdtcK8RIkCh(hU6UQ_:4q
%Dq.>n\<oT(SKbn-K.8-tISKs&TfohH^[Q7H>d+p2iPCqEkkV?"J6MXV*M5*@Wq5W*on4:Y/kYRRYH=T2l3k(8]fpX9fr_E<#h*nc
%J=2bJr5A(q&WB1te-llDbEZo?qJdgn1hV-%dTK);a6peF5\b2Q)$\r-o\:EJqdLI[<T>(G_Fj4j'4r1V#D]&n\VG8Jb_q82Koc!I
%H:dG1lZLD_mH1Q%k<kk:ZTXmD<4Ao8N%s$]*tDj@d^?L)\!?cS@d>BmMq$X,$GU-PiLR`Wpl.6h;*8,FRJ$$Wk&[$D7ri1R^+XdO
%8*O(tUsiafTA47I:p#;rH42.@IV65MFVHo\'`DoDkLS82L=+JKk0!9SKB`?VR1k[?:IAeW$!g3LjP4'g@hmifDHX(m5;&IgTDo4o
%or@TC#FK:<UAq$/aF-Web^gdU@NA(I2O"]L`E8`5Q$DQ8'ZU!(Vl:0fOu"70`.R*L:DD#0Yep/XlEL_%U05TVT7l*)"VV`(b*AUt
%c51+7)]EW.Qr?!dc>Dpn7:3M+qRVE)nd1>Qm_)8A^Rop3]/H#qRd2]ThiCg\'cdCjh^^1DeAU]s;I65]N^i`S8t(!3^V"-%o)"K9
%QgNif]'a&F?CUDI[tg0Ob+l4`345>HI9XZ99%&oeitJjnTm_(fkGj/n8T&[K<ogB2Zthl`DQPl]64<CjYr]12eAtTrlX@PII[GC1
%hqYnTMsbKV7["5Eh6H;DZjH#fj[gO>RY7.oK%`3Ph'%X2[A/B@:9J_j\frr>3Lm_(Xe\HGQKQl*WHZhX?O_R`c@d;BVfTpbP98-5
%:4\4JBVZ/R1SY=Z\_2:H]sQ\BD2aOZ:aS5):,JhE,aVd7_8pI(5qgHuo&mil3^;I1?EX`,5OD3o=2ri"B?RE6ZU)qsnf$RdVU<SG
%^b8I8358nj+um1$e516=j;t]HS=f(O<QsIWAH'7fMhP7a^RX;l,-,9<9fNWMAmm\:bYa?$/ESu4*1#m]X,Z)-l#&=t[T"^tc2*.9
%]hEQP*3Gf<SCMWjqs@'9Urc>SDXKS:GLrB5XQgXtW!Q$LM_nr#7!&\mcJcpgZI^^Ze4:%#,b$t$<#q$tC\NlqZ__T])uk%,qlh>m
%C,oBOg-JN_L\dmc1@9Ib=*3.#i.i9W7pYaU0?_[GYk-Jq50"ShI!5o5A&E)Y^%n3g:Iphn2`!@Q)>;irAYo`F_e',+%Yl%+V!Cgg
%P?g*C$N'7AX=]S?@l71Ymr#9CclbA>9_btAFE-]Rp':3.oCD!JiO&TSS&mn42PYREIrk=*%.;F5H/B[QnXV\s]mOE$EO<,ooks8:
%@mo$=H`iqnRL,P<SsZGZ[IsLZa1sW,r\<@0iJ[X+H2*b(VfKA("=c?/O!$;aPNH_gYQS32*X?O900\_L*b]S&mXFk@TrZ>n%2>=3
%[t(km?Ub!hirS4ip1_&?.^>F*:"Ri)j8GfT>u@hM0id[.6(bK#0UOS\06ROM?,*A.qX9pM+p<J1L.[oI)AgT1LmCj2PG;(ie/op-
%"[Dm0.U?7Nm"#anm3>P7jYd_^?I.p'i3tXdlapp;B(kTd*d1K%*!%J<lap.B3%I$J]LT?'-=DS/l(5SWfqI^R<ANh&2OWGt7_jGo
%.H%$I1naEY752pJN^k&+d;f/+3-m](_V3QT3Wh<GQNO;d5E"@_4Wd<=#Bh%g37o.jdA&,g-&M)oM]^O0;XklcqC^Fo%b:1/_0EOj
%^Fp,aj]63^,@7FNF1_1UIX?kFr3l'&iOAB$VqS:1Wo`lb@b,eO\B*-s9!u<;rs]1I/_#YRp#]Sok@X,%[YMggooo9sn&K1.+0eB,
%PABO!pMC5s`t<C;_EWN(A#%D"CAjq<16G,g442nSju.4n\0uDS]5,gL8n"O+O?%^@*nlcu4,HAse4Yb#[=dSoh;rfZ=kUOc,MYHN
%4KXRFDDhFgj,ZT;i\$Qg9TBQ/'&soZ>!fofhu0>I5F<eV0/rXW"ah/)ih&^XqPh>eOa[";0O2jRQWJH$UJKN-0:uLa9u)Oh1&<\U
%='XXu5Nh7VN""m8nBYBXHur5U`BT:QB0+h7%JVV@LkF$O_nG4<pb]7+J"e>u*D<6,i/^HG20c>do!0M!e'nkNc[u3ZR__4&W>\I]
%kn\Z6(A-ud[bQ8J5EG?\l29AsgGjX1^d!t,peUWYqNH+:_:jism5=s0G.mAMLo&*)a;f,;ANn^;VrZFWUs.%Vn"l*%=s3&cP<RoO
%r&T<l4F;ob73f@fNk?O:&O+TETG'knLD!C3DI%/W\`(_7n*WR`r:(#rFE?-&NQS"VRQeLUo82_UbgYled[^\da8_oe`ZmTpYX^\K
%El#P_Dhjg4SY8?fFn1iKfH&lhYgp#')h>\&>iWY'4JLY9ph'Jt]AS3q-F833'[!JIPZZ2#?Q>jP8kYqIr617s'of+4henUf`Ku;V
%B`2af203?s1,#u1WTCV\8u@B<]#/"&L.:Ss6##uQ%CFbt#7RF$?"5dN=SoZf$PIDO@!Ehck-nB7N#_7"s7g*dARdNY>\l>$Ml#.I
%XK><F/E'7X+AiqR."6gH`PY<&@Ych0%nRMK?Adcele)Kq]s\<kAZCsN4<FWclKpU"R?$toaZLb;%kOMM<KGr08a5FW).dc:"6SI?
%K>msmP0*S3X(ftO`nK$kCH5*ra]rG)Hh%'Ng(XF;M#!+Md"Ic]%*]Jn'8*-hk<pM<Wdo>`fgK:`UQ$cEZj/KDGs.O^fK":O9[6+k
%7-o<4d)9tnpbi$SHE/*5J!e^LC(^s.`t6"S7NtWe-3cuDB+mX2\Xg[CT=dsY"Mi!O$bMe=9oR>CX,6ACl=FEKIooK?DU,'kao0%L
%@d<%:,Va_4Inlg-V^E*5O-PEPpU[i+&?VUqO@/EoK^9\JKH?]A8=6BMRm\B:Ru)*0>:-'Z[?d1C:>@,WMFBY)`5:_POB>cCfM*of
%/3G8FCEf1fbYI:5fup)D7"2L'S64Hk>>D8Z1p.JW]8`N&k&_uAfIDj8-?b]<'8aD"Z_#ga:KJ0ale<n/m%#.E:--^RM6m%X5&kSS
%J?d/5e_+r(\Cn&l-16fc<9!o<i%S"hCCDR38rHo1Vg>&-GT$2*'!JY)Di+=.C,PN^4FKl0Vu3s=`-S+537Q#c%ut7V7L-u+cAi-n
%fd1QU\i"Lek\V-u#,Tt$KkUbaoBaJ)\2-$,3&b'R)I+74bRZ<bceer5:BuZ-.lWr4E;b*r3k0=?[QD!'g/`h2ec"4[EVng1nD&YI
%Y0tk:_:ulGmGRpn9`6ZSmLN?Y@=Zt'`q<_L03lP3g1/08B^i5d4>a((Sq\RApSUC-LZ$trGodI[;4/C2?OO!0q7F1mU#gpiMkSqO
%`pV4-TsleaFo&Bt[!/p]L5qiAVMEHP-H:eCUW24g@B\#t.R+ug%R']YcS3U?m3)9_e/D%G%M.t[4UdBGAKQ\k2lf`lhV@8bYYH1Q
%%S'U0Do7L&NPoco-cUnmA9rQH4*di]&#NM<_l'Kee`!QsPJ,qlm*Ok`_tN6AnB5+<1YcZIVFD2>*@qsE)*Qa-)G,+l_#3%<e4*+n
%SK+'T)-n6(GRoQSX&&Ug,MS[q'-i8uC3elfY^JEM;gip1.6UbVaRefThFQ\#pc=il("DI"95/l42>Z#D<PdVKkj4nN**o_CdF]FE
%2(+lggLi1IdA,*gL!bhWebdaG=&G`RAUQRBbFPM"44=k@A#$0Tl*9LDbh8@E\PA./mE]'tAN&jhCjl&^1q%V9\28A4)/kJiFIoq]
%*mAnMlud+BG-(YJ]S+^PCiLUQSpH4<`_BuU`tt>bp3;$tmVI7iAE<M_m;R1FlDdZ#05WPS`iC!'N41U4K+ha_EcGP8S(sJ=[^Hr!
%Q>Tm*M:K(?CLSsi;OTT"aIZ/^eJ"DcQ,Ou<B&]p2lH,1D>B2JVH9!frY&eNF95Eg(E_R%1-hg-sKurq4q.B33>.C#KWE`e*[d1Dh
%abbkpl_GWRDj,6XKD3LCSbJ6$REANnVqYk/A7;]"P'l*r;p"ak!To39`c$Vf;uXr9cIDc6rGjCF>,b3_(0a.)kLY'$Wd#o_;m5pK
%Vpg:+UR160Oi?C'0KYhs:@Gid:2a/TlI.-W8l"8LSSh6<U^iun4-(1a.[dj&:79N,C23RDJ^^DQ:W?1/-X62[WP[ff>,o/2X3M,k
%aSD7gK7j&hYV`.gZCSCmRGHQ)S@LW9\=!A<e2)#i2tu2(G^A51a$VN:OtNh\)st<^n)Q3IlJ:o%mF>TR0sX!'i;b$E->(35iP^p^
%06l72\/tG)?=`Ar[^LD>O1\K@^:u@foG?ihWkXt83VUiH;lbAHHl2Ws>=2n@,'R.Q7SV[[XM-c^HU272?:VoVnp0OU<.h*\*YrnE
%['N?30HZ7RNUu5(3h%+,X7H(*9=<i"9.+'ngH%A)#5)^h4/.dKFshBOqU*c1;j2d#SBNOP:u&1@Q-@IG3BB.42>>YkWd0NJ7t\o6
%AV+Ti7$WV02k+HraeJeJPa_9eTN+<iZb:](cEF?-_TcmdKboYg4(2]Aq)KAI?1oMX]X\hi7SarMIf=%F\gn9nkD/Y-Z]g[GrRokh
%_$#RtV:F8jnl'&,EjU@RNk+,nC4/ig='+O)\Zs`@;=8aGY&q602V0R+Vt8d?OIfh)5$-n@Sr2k*L%&hdrpA\(DIIkU4M.gW=diIF
%.6J=]DGQ!G(E+5r/l&Nd2A[0MpXb<bS!3/r[hmdi!fN%1@ruF23r?4i\C8)sg21Zn/JV<`E_FYH+^1Jj?(G+n#BFYVE-rq9>^Cg4
%U_>]=054S!XJGHao>gLfj68r-H*$K<T)ZuT-JIq$Ai:T71NSa_*Qg4-7?!pN;`g0uS+a<,Z\RrA7eYeiocuJDeg]^4h47Sa@lK[q
%?(X<WF,dg!_u.aB@O7WQ-R\K*=,D%51AQ7113WNL>+(k*MH4oC0?5U;]C"0a@Wl3h<DSB/X6UE\36ga]89'"L/NM3`o:jLr>&LP>
%Z?Gr+?X.rKX?Nd_*GmF3V^Eg_f8hSCg%FNA[CJ$>nTQl,b<sC2_kX-qNMi!2io^%(ASZAGioXeCTNm:<GZNO&j'hP,CZ3jbEmCf)
%Z1R,.e&g_Cp4Pu,CbJgEg$PQpMSK+[R7lllK?'m\[)l\CSEcf=S_*\<ghpkRASsGNj8$<RK:T!t\,=G%T)Vb,g07pqlKm?8Dqb)F
%l\Ec7\5FF(hi5WG@%.%LUmX1ZT@rfGQK3++E"^GI*PCe[D]I&e7un0^B+F>?Dg!KH7u>'_jAC0/1k2kk42-(6fRC=pSh-HA*G6u`
%B9+\UQhQQ17rp=2qIW$`Cd0LhT0/(pT2-giLDY7s9g:f]T3d0qK;ZtL`Vc-,]7)ru9odPj4hb_Kc]`Rj_0PJFq#:3fdLRuDL!%<P
%m*jP6`R31OrSf\!Z#qK:>*G;Bo'tkJFE>3A26ftO>\-DT(KX]4NQ(5%F_VVf\XqQD]tZbf5MWiQ+'!q4<A6d!]8;H$Rn>A[I%*/\
%cJPdcMr;$gp6<4Z;!X[aCe_Rth-@CHL#M_%X2<<Ua_B^CH1.ua=l7uKT0(][]0@a8m+jTJmgk<7:)biR'G"F-Z<6!h09j]1j)\qL
%kVZ#:-^PKX[GgB@hSM^Y>g:P74NOq>ikt3K=m+c*@9Gcd?`lW]*ff)@^9m0^-b3TRHeOs74aF'A1n,5&2)/1c5G#Qie98:I0RYj+
%`V&E3X5rSfj)KM+,oWnO?;>P*i2-,%-rfC$qdK01,Kd3BB<R5sbO^LmY;cI'7Vus()QVu?`)Wp!j"8cYJlK@rYpN94:\Te=%H#n\
%C?utthDOT?`!/p,(>^Y.\'t#e?o&s)jlUUKqP8Bu)6C7n7NS<'?piO/k)6U[&I0bLlA[-<B\O1upsiZjnOrdo+*oW>hAkbT_<_-L
%213((\<gF14X`O4j80nT>r[%F]2'uhBZSS"\Q'\!1s6!gVt,@dG$ptCDWC3OZj-O*<3?\;$L%6q'P[`[NsY+7G!ibf[.)7V@)Y9T
%R2S&&dD56iMu3/Vr-Q+5d&9:_H>T<[WmD7uiA,Z)a$QU\:oSHLJK>M#%D]pP!&`EW5eE$Y(!?[oHJ5GS:b?Y$hsnh56DID['`%FR
%<i>_G$XUlt@HFcF*K4X>o)T%WYj2'PG<qMF5c==-5@:#Yip;b)&BunLYutf5?ZuJ?!42BEYB9Bj-V+$Y0_;>8akTc(gP&h1d/<=&
%$TIQPZh!tU-u&#Ek@C6f,';K3d(Wk>cYJ';qXE;+B+'M;Vu+<Ukag$npVE<e`oW1[C>V1PinEf8*m<laG_iA<gnSd0rc(Y6$Ea#9
%q>R0froXeeR,9mCVaG6:/"BFVm+$[Jh-1D^^7t<K*n:,c=U2Fmm<Ym@Htq5>b;ir?rW/.B%m>As8,MX>&!,mV*+TEdIb(r*rl*jl
%nNggPTc8A2Y7Cm'dmrSIpX!4E3kg'*^9@S1'*5bdO09\l*;)GcY.l*7T06``-XIIDaX2K8Q35l)qSW5g3O7Hg"ue'??gurKT2bb)
%iN(5?n)'5MViP!"]MIuKXT6=kbku+eq9l=l^),&</O1L+H<Fgm"C+lNW-nKD`)i>3D[a756MrL(m$$gcTJ,s_pA.^ceAk_V@^CMj
%BQ"W70?6u[qZYG\^KL*!4.rb7qoSAU&8".7IG9(]<Wj<2T(d_"aIb\4r#K\F8ACsT5DPhZFoEuM]K;JKhVil9GCK<*rh#GI4d>0r
%?OE5H9PnoHkKdH:la;XYNIA"!It="p4F[70;uC_ni`hstfX]$IXOl/2Lr\tNp[)2Eh]iSspC:inRLVI+;9rbG5Hq`78gbp.<9[1=
%I_@5d8tfNSHKr0"f*[dXlN`=0*P_6>qQ#B3hcltUjo;EPs%sjlgY3HleEhrWVl.R2jNV<Ggk1@M=*MH@cMl\(f)LDbl*8gU",8.=
%-=gVAo,X['f*?ugf:VQS+E4U@dmY@Bc(F.7e(*_l)9;1@0uo@30jaLY5@XNX(L0K"2dl0@Sq$D1E%S&nJ,G'=&:M;L*^g,*e'YnL
%TDI(Dh7EX,IuN::95l4^20./S@A!Mjf("%rgihG:@ftR>ZosEk1VtHpiie`InXm.;ro64(s7hYs%^%"2OBq_I@6a8W7tj*%Kd$C_
%Z7k$0&&WV`/)]rQOFJJmIsTb*J+NU)GPl4Y5!9#7T*$4g[KeFg]n+Tri6)4i:^EW/+#Xn+MGcX^0^q\2Q-tQ*>,IN#!G[:L.:6hD
%YTP7/&25BB-l$Fnfk+$t-i@9?,'F3q#t;Yf;#<F824bU>/FoTKR.cetl,X9DD0I:G+p4>d[-]HY:bYSBaA+@P+#1tf?eEJC9&YE.
%!*2&kXtG=b&J1a#WGn(mV3K@9$H#\;=+Y0-K5hZYWBeHt6OT*OZ7u3ElR[1VT7+`aJI_ikmiY.)L)0r]$5LBf8r#5p#Zq:qd+h)X
%9AHR\9I^<](p*db#4ZBb(^NtG&Z'G,g8)+L2"t%\El+sd;^"hh%01aZ*r%!hDCl,@;EDZdUe'H?WcN+GduUC/fS<HtSm/(f,38Pb
%HA"+WNfQD;/Nfg>%0t+j!R7u03"S>$[F?X-#VOnbQ;Qj%e\FH_%"F!NYYRfBD1nLF$l4u[R3M9Lpd=2n#@Pu4Yp2BRGhk+ipqWb(
%'Z.]7I'>mR=oenPi_,175YVA(RIUL0R&9r+;T!aQ6/FmY.@geT+=@MH</kOQ!#-a\Uf'\%)i!&('EJQn$jjgj4tn2i#:JuV;Y\%U
%isBI3N4-bHkS,St-Ra!p1^r>i6%/:$c9240fdLF1'l7)Xnq?J.dQF8n&OEWIUHCp87Zt1lR?XEl_erI^CtAq)Ba?1&/f>-2e0JFi
%7Z3A2JLY&2l18S^$nOaL0XM)[K=)(%&`^_770+MPefH7%D`AjK>T8A8k;P+O7_hht"ESfO9oB:5n2(4-&_kk1ki?.Q5Y3L06Jqp^
%NrX4j&1mrJ)'TIiSII+]?im2=#kNTPK$_XOOD?m29^#Ypl>9FDG'MF:"XhHS&)n+#rU?(o+%L'&@AJ33k=d4.">+[kmsD^u9)-Ng
%^M]t[.KpD%l(_,fTr7+,!ji"XU/D8N2Bi'%4U;SY#Ohb:!XMt/$A;6:`&A$DT`^VQ!;-X5#S*SZc3%I:d`glPZ`jm)rs/ftT$[!N
%!GN[F!P)*]dL(:@7.u^i'\Wfpl:([dpo-d1_mru*S?[018R`m&52#@Y@1(<&&f6?b&X(f;@8:OY9.Q0&5&)]2Gg?U,6R!LYd*Qq@
%<X$lg_4c[P.?ks/"u)/1"9UM#q>jBe!EZpW5d)GmKTh>8[KHe9()A)TORmQZN!Z`(=$b&lTK!#YelGFpZr_6GiF#'I%'rhF"J.9C
%?+Vf/4M^_X.,EH?THam/>P`M-)ML,r%W%%ILVQBC\d61f8:K/iP;E^`X(?m6m-qPIE.)7@brd@"8O*iU641gq`:I]b!H=PO/qeCu
%pE5cQaHm;>KTa@)+H:c\GV@RT4.&9qK1/fLL-Y$dCFWH<J^?-/`3(ak-pIr->l#dFXMH_k]\C%1Zt'/hMA%O15uq`Tq*b'i$\VR\
%!NuigGgM"F3:[IZf+L"p!.uF85JDhE-4]SHS?B(pCRdGmXMGZMKYL-Y%)]0\Nc="g#%igOk6AW`1DieOWrSB]JO#HfJF!VB$<e9Y
%<Zch^P.UTV.7RLL(<YXX"NE;.BKmZ1ADl0eT$r!N+%DAn"A&W;Q"$3P)=7J?&_SJ']-="$9VUX1[AO4P7`Ys;P0a\R"rc-B"p(ta
%fKhbqRSOPqWoWRN-7gC/'eFriYTQ+eKGgO9%-5%f%29g;E<6LQAC_Rul9;RfDEK*WBI<m+/J:7=Li"rEIGsf.a[*0/!]GsE57nJN
%k\i*](iNsbdbFk[D(@[#Xp'mqS0@!@U$ZXtcaR"XO]C28M*5<U!E)V>TcsFAU/k*>@)*>W"MdUId/]Ad!hMN);0blL8WZ=A==AUP
%e5sl-E+iZf@3AM9`^:hb2Okea3Y)>t'?F1*JO]0d;h9l/P.tB@TqNWV$t<Y=4;!*#o+/\@9c9WCUJG8(J4U?mk)T)TMFK;K8VF+)
%G2].NBLs$h?8Dis1pln0jos-=)Cpb`&8/c^G!p:BE(Z4'U!L%Jkk*M+6c4Y7_a=i)B;\19P<h`_#f*gn7P/!_N?^s[Tql`q*$OE\
%d:l!^<eUsJ]FpBsd`qtTZnPm!`Tmqch\EbS+'LbJOB70g&(+)o+J6aGDs/-pajB@rHkR-0HY<MEHpDE.OdcHq0N,hKW().U&n$jj
%"<SQ+[O$_<_(A"h>*tMLi#<#$4fD[MB7:%uo[,!o'oKC>8k(uQUfa6g(gtOi&]bM?]q$*]CBu_h@7-(m)8!4n">C^-#=HrVI0;O&
%=DERg=DoDQ874h60SCInYU9^^/G,2J0T^iq!K@ekmG*R]'g2/N(5tm&FJ?iBlmJM:+f44+K:Lo9oK@`?bN*5LZDWP+_9aBfYicaQ
%R21t?!n=D@Ha;R_KOd/[*EZ%r,B6X4FEXukd6qAI+;"GVH`Fja5(PQ>/e$b:L0H)E40bH*i)CSo8.D4M':S*GjS0rt6(0LKa0Th,
%$Wr;=q')#YV1g;=7Ip\.cQH1T-mT>dq][A)$+bfd7a)&:ne&DEbXTkr$`(jq^bP/L$JZCa*hHfh""b=RJj@,eX$l<Y'L8s"+:i1S
%=d9sm6S:tRL%W01)@3&=P#VJ_'9E)/Kj7Zc+st1<%YRGTH)M::0aZo6937QF=4g9H/Xl2XQ&g>VoGjtU'7g>'O]oj4W[/dL#sCN8
%A0):^"re.boLK?6(D9"7/K'7]9GiR`A,BH_NIE!2I41OOZITR$Gs%V:?q]96d_%ccDA_gt,*3)d;M`jJfHGd_Y4+10ooX71V?`36
%5U&W"q%O^'8@5$oM<`/REgdIe&hR(TN8>--KVo-PKWp-lj#L$gfU=rI@")98ok""'AZ)o!7$4;q.1u.OdZK]t$31<6&6(D4KQKTr
%1l+shZ2""rK7GiWfY[<tV^*\cetfZ=k\?"l'*^?]@#W,32);I:KqTQI8-!HsT,MIO2+$.P=>'dY)Fdd>B*^iMp;N,Se0.,+6&_uN
%Ra-_7R0j7GckT*i&1#&d.bZk@(XO.PT8<3<_7N(d3XX8.-em#CBHDrijnm2'j8ao,$\D"%HNnU_`8L\6OetS-8g?'#KE-EWB:AVs
%*@2blYmngP7?A3'iPYEtSHXB@=DS[@B`E^3`iMT`2/,$(+ZYi$+:eJQr_N>:[`JSM,7"`(R=bK;6(eMein9`6^*&4J3aK\>LnQBQ
%#padQcSmRLE@_Fci5^6HH\.pKRTm*/(l''9+c[*@C7uB8>ZYFf_i6o]poFqo/;RL3&3>QaUINQMjT+"_U%@t7WU>;0ap8?o)>)K:
%`H6KNm#fBeLdGD*4?.ooc)[!$!XtH:#SD@2$Q-ge\IdRN!hap`0esj2f*(.mOs=-;]e[JJi$utoAHOkZ&),$r%(k?23l!*_jFWB<
%Tdl#h);;\Wc;"UXLr'<mV^^DS+AKb-(e^af!m%.N!!;-Eb]JeC.6^fEDUp3GNM@L,DKmF?N>$Rd2f4BMEY&d"8ro'jHllO0nuZkd
%^C@Tu^]C]B"EVR1W3qLjMom`,A)HLq"Y?n)m?V&4>+sbCP6Tb+/V?>sC+'D/^d00OJN=n5#gTL^0dqrVeCRa)>'^?hBEkR:JL^a8
%.k`f];*%P'0LV,]"pr)8oSL5r5)gCi4HHIAU!r#tML^Ns,aL6c0tr;`=Ku<I)k]:3+DE,1bSHV&qaNbBh@MA0</nm-=_N'H.++0O
%J=#*6@L+8jdL/BSF9=<J$SqEh2=?VmO`D.iM]aF8JO*rY4b5L+;5;IC",N$i$]P'S\f7OYap(r_#:%WJf-/1W"ae.#]6MK<K=rC.
%>98QBdCs/AUX7BNE3`s=*TX0m%CZDPl*(R;6,;N7Cm2BUGsM0L`Lr;D]"m@QR'UFi,h>><3,j`jW>6W1YkedUkhnq(LaafG.9+R!
%0fFj0S.WCi0P;rXa"e7dD(274C@on\_:Z+l'InaoJri=h$J@mN1CE/^#QfY#R:)un29R^^,\q=L68f6]LDb<p#9:SR!%Y=0(uUMh
%!JQJC^^J7LPd]<B<tpig_Sa`$Cc$I*efneKAfb?J'HWEb&6XWab)j.Vnm]oX?,)JPMBj[VZ=$Fkm+=gmOl:#*5+NVrZIB$2$1a2F
%q@FlnU_c.16\ZX"NO0(ko"b7U/49rn`nja()u=s=;8C"P"F4ZG\@<7n-$)o(Z3K+jj`)mS51o?NfK92*Y4+#S:e]BcLhL==3#Ce?
%X@=H;Kru<5?,9q\S@.hgho8dGXe^UT#!"\%%<dFPm=W8$Z<7PMfQgnJTq)uU2?`V7%cbDtU2<6=NBhO@!PDAQMbI-Be6l++eWN`e
%gS$s7W6jZN8ALr.6ZV!F$"t6S1.g.&N#g9U_Eh#:"X-'.1!+/FpB3)^/8BlY)&>dF0>c5)j:/=S!g#12MdgI\2)/'cG,$P:g_Gcu
%J3eW4")DJXNDaMOeXNb$c2W%&Zo4#-(>lVGZ>H,g6E#`3#,6AV#2E%/`nE>5&.J,$$.>n-DD!X&`H1f<Vh*70MKfUO#*q(jAQsjs
%i,i:Yb)q6QaT3?7[jqs1[%RdMA!NPP\\f"!0d15/D6,r1;,j9-Pb)0c^b,lohGc3I_XZB8^(cMT:`sRT!"mSjQlSV8Ns:8t>QW.-
%0:"@#6Dbc&(6g5"aXj/OMI;GO%:8"8*YXr!KAj=GP"f>S!6oF269a+ZCeo#\6`Xq#SVl'B&^'6)-rNSW;oG.o[pH@1&d4nc];e\0
%-^:qUL=qGhBbOZr;BfY,)n+jP=Uq8iMCFeXKI2fI$jt@2-'1W16D9!&$D(7,lru9qPI@/#5(c,%f\llg64">^O%,&bn/OVb'+B&G
%LC?g7S=[[DidlZ6!t!mf!2'?]#ssZYo@?H+!!j6QNhI_rR=4QFj*="NA7Ed&UEDND18uqrJ<Z(T3?Ns;-9i+tQ8P'?#aN9$=UUuF
%N)'mj*[SN+(:Z.-;"i;0?uVe+bt$'A>+(PDUt*Pk!J;R.`EXL!b(@JX)6dX;YtdJ$HjXtk#&HA!'DQG*l`Ra+V\pfqg@ggE'c"Nq
%m&o;,I9p<3.SI`S)#9j/.ut?eL_^e@Q0_<JqETR7(g'48XMPBL,MYFkFVTcn9Ii7F"SC>c`\9!%)Abd56aChtE_SAL"hp92$RNc8
%.4Q+eOLIPgF6Pkm)F@.c`OdsX[,$/0XiU6Qcl0e?SeD4Q.24]2CI6?Z2$6T=#W/BR'b3MpnP.su%U=5K0F2Jkit+ni`?R'[CO>fR
%GdDm22VZ.7,aR$(](&$9_WHt8o]KF=UkC80d2(_?er+9%64:ZcXHVqfh]0#]U)RX`LoW>i=RB7:MF=cO#1b+b<@d858m7c[(hs=]
%_F,6'rT/)G#OPhf:,:>SOSj;(L"_)'OW)WANCa/_"S%ph%ULq.HYU>G-^7]B%2E"4e;pWEoK<,il2l!`IDa0dLuTS\%a8&ZUt3Vt
%e<oQ4\eUa%5mrQ+Du`h.96^Xhs#JIq%YSue,M+\YhZbU*PdVfkR%VdZhAkkp'KL<0!1Oi0M_U+ULm4MX7dtM->nZct33bjKiC\,m
%G[[jEa:U!\f7hJ]7@;"A`pjhI@_h%H)'oL9[l1uKRFj1p`G%m\;9+jBOFLZS53GH:#3>"!iu8@.F$j*E7Q].CpIQeV(u.kj'a@8r
%n]m,SC_"mOI%/qJdR=0GBWaU)`%fgPMGB`__cF-!`!.RoW8Prr*FXEBMEddTg-Q:CA%dZeD1KfBk6aYDk?C^_UM-5$)r=a`2O^oq
%OfQY,Wn=Z;<5lR%G%]$l6l!'=>`mMojX7SW%X9c"/BBX8`*niAM,k/S>u&Q\1j?=/6rP(q1Dmq@<\YN:W:SRppa`HR'c[8Y(jIMo
%CYHS!'cRiPd\aO-N.[e%kuks"R2EGc6SGhC)t]&ZSY@B7aehKhH/PBM*a*!35iamn&\AAYdC,22?(Aa(XMW$YME-^Y+jR$N%?%<T
%685K3d8uEL,`^pG1^Z*lU*6f'_P>ZnnMk&+0O2\';a,%(]m<GN+_K*.b$(qU7:<HW@An#2Ll5*VpsXsa-<PX__/6Oo0L+`&hWHph
%3\Fk$FbX[*ck)+;hIn#=VDCT=/sgDG3O"1*OQ@6>A&8j8V]J#/]>%<!;f+fgVEG5#9WGbZ34WFG7%k5j8-iU0W%9K_I*UrDE!_6W
%BQ)I]b%7IN[^@.^;ppt.#XP)eHQXk5]-so"N&JX$7*%5f"LD-m5h6?\>m,+YaKR(QQ69:md7&aB/CMnq$>hL+RAU2ZUoW#Q?+H0h
%>W!j.e$(gN]WJPp31T1d.%FPiNRHAY_s1VU>g%r`obmqI$klBaA$h[.J<+i0ap#&T;O.O[Z!NHBfH;<2^t&\nY+?E-dOncpU*k2'
%lW+!S[MUke`FR/=^t%#KSkp8.S7Aecf.Ggb[5aPnV$1WaH]njO^1W)W;8bh"`(@sWoSAF."f><e)bLX+;co!-NBGIs:1;Sdc:obP
%J@1L"e=OYe$dWQ-T9In5'2/S<!nH[#<$p`I`Z$B-cFRLS.<-2@8)'SEWJdh06*Tf^h(M)--j4#`N%c`9dBS'h=O;-O`^gKg`YFns
%de8\H#m[7C_7e5e0M[Vd7RF-n]nchF##7aUA'HE%V%X"g&eH(76T]f%]2#;k@q$7uZ3$kiYf,sN/N:J0n3kJNR`f!@</U:2aHU"A
%/$5%3jXqXo7.Dof&D`TQ0&BZ7Xb[li\N55)$!a-Y1oUR0Z;o+:&nAJ'ZDI7Y/RDo.ST+7k?pT.H'8`OK#<'H<j=.)#_0ViE\P6P,
%[d"V5K43kGYa0j@hk^)\KGe2#>+3tP_OM'1_$0O9Q%pM)@ma!,L3XPG@uF[7Fh\b*%UHFC023!*.#aoo2.4*[m]J9biS9fN`!=/R
%DC?u4DU9dSRg!5PA;NYMc[%\s=8`4l-takq(r7FB.<Jrgp0g[N+Tk**dT4Y[V>=E_mUHdqN^;R<euT*]ZjAGH/%ZhDAO9L,_7'ph
%<pbXt;BA+)'`t^KM,b@DlFRV)W"YII7_BoP_ae]jl'"ZU4o'(H&DQK[+YMnHhi*IJ'[TG0FWGJkr?R"?2G2A0A'Lmtr`%H_PCd]_
%?s.=\pJt>Ij#&JuK@\b-'[K;P"q8qBlBWS^D!Pl\^Mmhm'M/"5XR@ofj]4:5q&NPVTI;0%BhFLl%o;c8%+$E>-lZ4r\D.o9:D!4&
%Zbsl@A^EVb8(WFt!3-n]/I[ZXAn72#]"p8G@=-4f@Y0Kt2R-YT2Cq*%A4<7K8p00U>VM*thZhp,Z3T@BTQ/.V!#-2/fdscXGq.r6
%C\&GJ=O8tcCMYRJ-%:Q+j3rmij:]^2Qahk(J^^P;?$WRYq5O`BRr=3E"R?,CfjE]QF=;T,ncSVX.31^e#S='<i%,CN)RpOE@9lnA
%6e#@',gka"H%Rf2X%B>_ZT5im)LFD4CH"0VgI'kMI5[`P-I5'c0O#Y;@"&8&*iDQ7/q#,rC*]d7S;LVT-_dh$l[2;9O;WV5(fqB)
%M5eQu;678s-G[tYBe16%YYU7te%Bb'4,@Oi9I;D59eD\kQbHae$Cq,9\i"6_l9R+\_d54gLiJD77HSe9$\,]G-3t;9(5(W'3W:)s
%G6kX"Vc9X5@602qbU8uIOGnLu!9QZN]=7lW+9E.X#c-Km?FMj!%Q>f>(L_]bNF8p$,`X1<E0<AW_Jb0d0Qo?@4--;l!ATu#[KCiS
%`S?#[0&63K9-iJN8KG5^&]SpOBm)+boMKXPBoSZX!f!j$f<?JJ#TUq(TUr;5*\]9f_mhM%s7`ah*'"s;"Em@WA+>1[FNL2;q8T=J
%;m$*%$Rp`Je2Ofk<X;1r[_*DbHl2s'PIOn.<e^._86%FLV14A@7o5F+A.T<3m4C\,07ne+]d=ie'Y#^Ma+>">@9c3PFVi1YlfOeD
%&q[S0@VH-kQ<:V2M&`US^qpfCQ_8[lDJh-6]"D\XGE%3X&qHt"2`IsuNlRG4^-G"rD-Y1*;<gTYhG<Vi9!%1<GUAo.%&8/I4ElGr
%;sKB'85AJ\;'BdHU2:UtgioQNPU$Ipj5MuX<X*&6Z--2f^-r:=N-rsK[;EDZcO?q1U><BB:c"V$3!m%_?h-Vk+29\A>!N:P/>[Mu
%>=q4:hqPFUJcubDbFgh!a;Y2)_7)dH=)`egK9i!(lZ2\:;aR8uI-'@F<&YfMM^FR0)0h*_KOh@8Pqh[/mT>@q=T)rB6G#r!=!:3t
%T4<W^-M*k8(`^+V(r[?F_"@$NI3Y:,(X>-1Ph<c7l"%iJQnW&NWi][*>$GW..-V;CQ*trD@%380*ZAZo7%>dtYsMOqZ,t7B([q<I
%TtTiiXAHrj.HN>4BbJkNXO<D;&8JJ,QOW1c/k0)5cX%.i.6`^8+tf5!><`u&FM/o1lreWK$UYb:\KmQ*I)uoB73]2[hhD?7]2\LJ
%"0/o)fd"KKAfX]A#kI#'f?U]<#Wb3lQeir5;4J,)6"&#t;IZ9.8Um^,`YfI?Q6C#OH-/LPnC<+:&YfM&bL(.\qH0jL*R&.NMD-]>
%"bN%8N%0iUU6*`L4<[=D>=9M9cKCBt>[pQrQPG,T^/rQ:`7D(fp/VntT39/>']P-!1%+5cM=OqpE5\T%&h->k<PQsc59sO@Nhb9+
%O`Xf.E`:*1Bm<c@E%oO*g,Q]$DKa-um(?.\G&AS]`@BZ)k:UX.mmJ#FFFmV'Fe9EDL.*kpTd,=P?b0-^`H_TYDLK-u,i'oVi.tZq
%Lha;u[dj-if#L_h950=U=V79ba*4IgXj[BXa5SH*]7+uXJ>4G>rT!:!]KYS$]aJ`hdi[:qJV,-sCH;*Ci;f2C&LIHEL+2/]185s+
%Bu*IY$I-eF6.u_5D*-">3PqTD]t9u?lI,364)9`d9Z8^G3r>X5[Gm?f"@q/YJFnh,\RE`NQXJUk"4cG<G^P\YPpqIt,Ksd,]6'P3
%U+=m1<Ou&o2]t((&M!#XSuq'1/G`4VF$p\`LTbXt/AQVEY.Nh"4UeIF<$^&2dYM!N@;l/LMM!K_iT$s.BU9FU"Ok49-@L`E',hF#
%acOlg.h@$l8((u8mL;b0pqYt(B=Zl/)bj5tJ\?sVE^3Q4B[c9R'/1tf.=u&sCDF1M7.\Of>O^DTlhauON:oe)KT?mnS4LZ3*2MI;
%L**7O9nZc8&)BAd*u^Rud`-s9-Z#cNcOrmE+XV'Z*)O%s"kqN"@9&eV_-g]Ik5m1#<[rtDg$Smu,#fD9m"Q<9`iZ1SdfhZ)>,4Is
%aEQ9',V3\cg,&(e7see2.ZDSlFWVsX#_`UQf.KQ6EUXioAEbj0&`"\<OY7TXXH"uHTGY\2.EWVb#X)i5`\pO&&VEZf4f3'I9k[FZ
%84=dIafOFT6U6q=9>k(S6?'pFH,*@eJAg:l-<?%@NKh,cK[N-]Xr9d'U5rErBPTaSN=.,.[':?bOs;Y/b.P5B!t/CneNFPG-$`%a
%%$@?R(o5dfLKT#^F74fR7qX4sC_4Kj=Wj+IfZ9_om#9&SGiMo-0<BneUc&#P=7T"1`PiV'JG!V.CD"->Yo"MRSAD>\fu,9PLDs*-
%EQ[dGAH2NB&l?PdAE3'o]e_q!!LjmiSPlmehUZ^Wr$da$G,](^Cp4c(-*OPMJqH$"CZ7)u]NJ]'LScfSA]o4m,Si92m^[C?I!9@-
%.X#V^-"<(<!P?&hL,(`F7;o5[Z&^;#@1*''`:KYD9e+31>;3KnhXF6hKDB$9>U@lE`a.5YmTr$]>7Ea5+rI,d4pg7mg,S7tnSJj3
%ClU(b%jGl.IQje8RU"V:TJeDC)q'ot2E(i3V6SccCgbUEeFld>U`p21_VNsgV>UPjj-t2>VVofOnh#gkd@<X(Y%f%3qIl@9F4VUP
%Zl@'WgkctFg1n2\)T4!E$I@RX$Mf!+?HglL9mBMi%QgtDpC?e(T"A,kpUpWd2a;8a3T%"f%/]b4hE,KNCQ1)-pee$\PnG>n,HS_B
%.Zj+&?qCA`N^O(hU`:qi2RBM7_l&'u3.QNe_L\C2]?3#H_@@H&/;7K?E$<SJeJ6rDO5Cmcl&/#YA386l%gL^]$c?[QB-J1N2nVqd
%lpX5U)*=Q"gdPGIi$K:hEm@.iN.aoR>6OEdAQZ$_YqP-F(dctY!J39cM4P3l-=SAI@]aF`!=@6P\:KICH_/9%h(]neMTI!i\.\_$
%K.M9CN'f:@\WNUJoIPMC\"Lp9Oh8tPI(N*!gd=>)4(Nr_G3tOY5s&4cF@4?`1Zqug#/a<XRVP5?gKS&V/Tu67;NS\_I3RqFKs4BV
%R&'Rd$KDNgE!Q5->`XTtGu**Ti6!hk*IImK$u2X`o\eR(F#<F?>;u)K4u>-N,nH\Z1UWk/ruFikL*HTCAn.c!OpfhpbS8chO,>q(
%$eAFl?uelO(V7+'8RW/j%QoAsAu7gI>Bghf-Sdq(f75'(0/Fg]5B50l9A2sBU:nO,=W)<=V7!BKNeA?n!8/D'H`gME-K8)V,[MH5
%pCf'5XEQu'[[+UCH5Tumm<,&B0O1bJdD(3m0+pCAO-S'8_aNk,A*"HO/Y.;=nGsg#>2!X%?:ArUkAgG#ROn!Y<9IeE<?]P5XMtT0
%CTQ3V1HpE1iX'Z\Oc(;#N+E4Ei:8npM7@*mL.t;%WlDhSZJeXu$CBq3mi4pD2^8STQ*ei"Off0cF8VGh7\NHdU$gBW5^%B',iTOh
%Ui0sg7UXOLVBW8*SV$S)r@,&7_c5P\hhpG8$KEd?kPFnG4M:S)h]%eBZc;8pcN_)mB4#f*D')@J09.%14$E;b14_BX,Ki`Y[C%k`
%,U`8;(`ukh_1FG(/g.1!:o'RG$L.42.N77^-1G2&/pYGuU\;DP>$YA86T*ZTdSZ't<<9=_30Sqq&gM2:q"tCh5[ah35'XegJV+S!
%TriPoasE]+kF9lqOLC`[H_fLTQLh_(YF)>!*t*.tS@gNm"lLo]PRnL/?LpfZFS"4_pPn@G?f?]US'1JMQO40@hc`I2Ti@8n]@eg3
%Ton36C_;%T;>Y`:P^Pa3=@F]\V%1@d:+.I4ful[B;^b:[+]kg=/.@b*U<iZ>`DYbPN]M36LeanW&dScuXtgQY3YUq0'9,GnI^eAr
%ie/OS3K"h-oOC)9q"?u2MZ:3SSi5Q_+f#UnLMD.-.^IR?2siKA$QZpc#D'LK]pF5Z8-qWkddf-+P=@5YW<f_?Q3`Od^tdBR!W"1&
%/<grus#\$WK!T37?si11etAo(]j#gHWYMe+MB,.0*67/DMVgB]<Xu2;.YP.64nl#^d$*IH/\5&_XB$)K-VH\.l!N][G)--s'V!M;
%Khe[`$HcMOo/Pun0]/br,C]@O6g*g66Z2kAd`],!%'GAGD!AOI1-+[l1&n!\BaZJgH^4]70]0I<>0#`^GZRaF9FFnOL:GGC<bTcS
%)%'U&,.OS\?85i3T:@WQ"TW17:n1,OSn>bm6kV[9&eAC;3K_8KO5S3N[N^E/q@)s8*="4/7#sEKYnN;0G/Z'T^FP(f3&Q=G(Ru=2
%h;bY1CCH[-<[0%gs(eE0Q<.`UKiYBGS8lCQ)<GT;<+Kc3Lt=WpMXlQo?dVliaK<K\NYeUEM8)F4Ou$>7#UrDRHM<XM.I'1T+VsUX
%@RYrR!Yp*pLZg@4eNTROeas4VjffH-A-PG(?t]$*\L]</iM'e7KsEeJiO$;<^hI0mDX;qn(";eYWNkhie5IN*?#6mUs8UfeUt(VR
%95e1!s5@f%\f3]8q3Wb1:^[C0dR$\&:*cg7,Z%Hu/.Lh#l[H`+Ii4BlgXIRn_Yq#PGB:)HHp]lkl<[,LOFfbi)!@ms,(^C<8LtJ3
%7M;`*#T"j_2:GgYc):*KZh8aUkc':?8e\6Pc9_sJ-6C.<jGE0_C0YHuP$a]nX<B#]E&K7l9.d@DnTuAA>N;'"r8A1Lj)=qjj.H@n
%NP7$tl(C_=FY5C"Dueg9KRpJaVtGI7R'1e:1(=E@D^Jhpp+.Br(9!N//P7Z$^2:;a.hjIf6%!I:\;K7='Fdku7WfQKg/ILoN:#Kb
%T%3Eqgk+LIC@G_t9M#(IKjja1.TrQtWfEC;C]\m$S,,E,PAUl<Ws:2i++?ouKAK]t]7!W0T/ou-Gb*[%LSF!0U(kkJ!n#2Om.iu;
%U3bY\<%VKr=d:<bDf#c#g6=cpo[loJedg3"qH_:UOJkn#?&0^=),_moW]bWT`iN#C^kWDXh?'6O^%dm3*dd:S?HcMcda]-Z.3)o@
%4^sQ`\f]^ND>21onagZ0O4KhI6sh<5\04RXXF*I=s-5,m-oYYPcDu0:.kkJE=PU*ZVj[4HR-'lm&XFTsN@k\=.Xo6"NLHZb.;Hq;
%Z)fEaR>`uKReOg7/0dFsq^r^9([]p$=g><r-h7%_[hc_N@ULS\r>6J0586\AP$TUa!Si!<M60$`WW[]"dJT2DoL/p9Hn4V<+:9dI
%a$^(ENe4H^i;)b.4eQSq*"rS;2#R-q(=pS52Y>\L$l8j*K3WYTo?LMi))hCF"?1Uc"j')r(iT\hYEY:tLg3$M6H0LK)53DDGhg.D
%6F_W.UiLO")S<kK.>BXj"aHJLQ-)QBT4eh-?7VQ*@l/^2:'O&b99q&fcSkQ7$k\eTDqTM^Nen6U</F>"f)@PEmUO4q-I`b?/6,"O
%fPis[W5=.\I_-1R71QK?/?sE,q[2:is0iemD^>aA*/a.e"<gM@L8'Y/6%1KjW8IUnM:[bQraQZ+1J=U;\UIWWRgWpgliBM>&j1cV
%R_hFq.<qV)_%Ip''FpM]R\(j@KUG.H-*.8M6l>A&<&*r(a*b7tPDFsk35#E>bJQsc9*Ji%4IJ\3gq@aM(:-Vk6D/\h'J9NM+&M5^
%MFX,"lNYKZd;Bu':SC$MkWYlj8[OfQKC8$bd7+@ohHZ+n^7g.3K5R<`l89\JVn)S'9-S+sInFoR"E<:#'K7gB?#JVn3_^VFP47kc
%l?F#&c$)[9H$<n:>8?B'\Y\`i\Fcs2da.9"QC82idLDG1'ZOS/N+mrdF`7s;63$:s<)kl)]aOklL,dTS[P'4GPaf$:90=iQm\h9i
%jDB4hOJ>^[#g%n&Gi-iu2m3d>InmC*A$U/8S''IcS<*"S8]V<MRRoaoNZ<C\0bR&M#*+R:C^2;8Y3@1`<3:>KCHWk:`35Q+'T*-o
%dSZRfTBTuM']Pjk[BH;;,X*Eq!nP!cI6(+m0ZP!%;Y`aUkgi\b+RLe@Q'MK_:!"!*Em9TGDk>ar?d6e!rNaND<t?s,i>,t/Qg(9l
%h@r57.7Ed^fcj[o`o342g3MA]?k;ab?T:]r._,Qepa6S2TjAN+%eBjm<;t75<C$K\]tUmH_KO1,`LSKUm9d3+,:j=N>1PDNlJM@1
%HIkl$USg>uDGNd(.l0W;7;2o/OAGl6D(oqX4%Ge+Zq!j_oW1q3AIt=LK@p<h82*)6=uf`r>R=XafK"$P<;6?[.[st98hCkkb`m[[
%2&AJ#Gr45T.6Odo^)/4NU_RUSEos3[ZkS-?@RnBOTKASC5AR4I!`E!A'D.clrpBai/S1d272326*]>g^L=,p-rPap?0*j6=S,e\f
%<0kN&XA[^qfl:d03.gknm-_ApO(?10&CKo8>Z>c+o_Hn.9lgP=8?I6D'&_$omA7LhFtc'q3sS<+KraYX`C9ROZV!GOI@)D0\qc30
%?eU!G=5UoT[?.0bb1l)Aj:<IM-G-n&c7PrEbZE%/=__`I&/M6O&=5Q+Jk9\WD!sMXYk>4YH?h-@`(B;7RV5@e(6h4q9A";t%_Ta\
%6X3KoK\[`@c1[q)jp#qqMP!.4.=;-0PSn%R1C.6<9@j>'<#[Z7_<RIn'a>K$.Q(=jk3?=$F.-2,'h^nMrFrcU^XL$XFnJSA"VQ?n
%-XH/k^bDj%/1YDaOk/`*&AiF]\p?T2A>+dB6J8=8XDDLMi)?:S:%ct7NB5-eF$4?XHG[r?-'N;7ha,gl\ID;'lF;A]H"Y"*KHW0E
%]MV]W!mgotM,R9r+De'Q1?qP]ItZ&BKI/dYg]n1lFuP.NcN%^O<(bt^4p?0S%fk7F*Q>STCdh'>I/Mh&n`Ggb>6!'ZZ];cef.?L7
%9SkAueJ5r&S<tU9[A'qMQT9-#am(-o/cEW)rJ79aO7/_K\,[&<PKfu01F/UEl2s>IgfAB-bqd;i6q$AiPU,!GmEpu3ie3th>FS%d
%N$(Pl7faXab"D0n!`M"628jfUY#s.g5uH![LeQ9UFjT(noN^8X2#5*1LWY36=MY'2Tc.b_Y@C425_KQ4ArH)>b1Ytu#RWnlS)jf!
%gfOLC]tJW*,'DB:#uk-qem&9B,jqioBgf%8q4o=,YmL&R9d9g[WPU'&.%[37CQo\qZ:n.Jj?sA+cL,Q_.U_797XdrkKcQ_V#_Ws8
%M3)h`ggE[LGR%A]FY@p;d7`#fnG66YkE,%/c7o#2?(c(K=2H:mZn&!H>\SBf#[4Q*-`G,<e7o",\`Vbr:PM>3CFWe1nYrr[J<[U)
%-`&e+Lc\W8GUOk,$r(sMXc1&Wp`=Js*Yh$Lp'Lpq67NX$\<S=Ep#u,M$D7M7K[d%r`,'@ZeTo*XK)/nI>%aIOrA+];W(W[sh.u.k
%%1dHeK.mI=:@$4';irr),M1QLl_5hp+E($r=Oa1ad)ged9RSro9lc@LFsB>N?^qc',,u54[>).-.5`s)jCaL5]OI=0O[Ti>&W/T4
%'NqQ$EaC)$;Dd`hc8)V<jOH:8W\%p_8!6SEOicWU;VhsI/T(k;(.hj>mLI)s2i=-9F8K,eEbpa`S85a(lEp3X&`Tpg\+Q<>@$K_/
%Fd-P1dFFDX=,W$T5>\LOi)a!8Vao:l2Ui\g[k:>o-s=Af:"j1RpS^/#PY1U3mcus_XDo[1>VfcpN_9j^2%dmRjN1;LkfXJCF'2Y4
%;+Cq%oR^^4C>8In-cY:m[L9S!9COkT>.$H\Xh]RsgJUpRpdhl4<+0k>9.pWU8'bKn-l2puUD>I3$;q@^Pl1Hc3=#'R/TVf,8cbdU
%qHT"tWaI4p7kEDsJPt`AdbV_[>M>Kq:@:1j,/;\+3He"dK/3Y*XpT!1blMUJ?8eeWafuCkJUu+EU:4fXLu<WSpK`VFQ"!9hUM!_h
%lgn;h&DpY8F^jQ$+RV)T"O-uRe-kc+ESC77m@j)1jb0)+e7E`VUp-e*s4tuok,e!tVndHO&_4Gg!:S:)SK\IuE0)I+F&NiQaC@Zh
%k\a()`bX!:!-i*0+o9@HI1rRsS=AZ7e'cYN19+9G4JZlRFF2(6$5?pNb$a*Y[g4081c`n&aj._AQ(dF=m.ajQ<F][A^@=aE+uj8J
%AqM=kA%U9*l4ieE&)"=:&2IF=XtAEBSn1]eOk-iLZM&DE)+j<Ar;;H\,X\gCL9GU=lGM\@Wd`/8/C?,K>mrsVcIF&R/f2t=Fm#%Y
%/F*FEp)7I_[E&2]b!6_4$L/,5&PYgq`<8hhKF<*m5/jXD#ZZDIWUpl=X^YaE;9B2o=Dmo?S4C#7W'Au"]##\Kj7%df<?q?XY.hN*
%LR>66X>42kP.]6eTHT)G3Mo05!sk0L#]RA47i4>P7RQ6Zrjj8A*>."6%a5VgiVT[jqbrP$OeA8+qKDEO6Sq%:)jUtJ]c7Ds`Yc;h
%3\dd+"/OMX!C.KIqE:+-b!AO,&u]]IdYfrqm"^4,>oVcI%*`+V(sBD=%6.lG]0U]p^]IrE(0Al,"G8ceSp@E9Jct1FA^@$Jh2N5g
%.[^ahC3luU*6W)&W$auf>G>R:JJ-g:LN&T9V[[0ep0frK?K/g1p8]5eh3Of\L@p'i,f/lUP;eJHXi/+*T7hO!^5:7DhZE?0_HJ^H
%EVVqQ(tGsV=k6%:mjkRu!+B_.?(Atj;k`LR)>!"/XcgTj1hFRS94/HIc@tcuPu7`M.obuT2Jj-cItptjE=s1?i&\,3FSE")f*;t0
%pX`7am+KFk/GaBB]:_s,R`X((=W6TL+A,4mj'YQ#c^kKZJSnoo`[gB@3-uL9nHui$LO8Oh4Qi%-H1a:APlrD_214FWd3>T-B0;M%
%EZuO2*n-8MJM2!$jHr3D!ujShWW81rIpSZl3'IWLBu*B#r6\R!J8BNo.VI50*HY3P[U?1[r,'+?CD.c`"n$E)\_r*d-Y"Q!VgsKa
%nuUAM>]JpAfkGk^%+GEq&l9"7QmJH<IE31TeqZc):.=lpEcfcW[hKYBH(Z73rbqePYi]-eQjF/h>F?a_RT8Wh^cUg&_&$c0V(\3?
%!:d<HHj0kCA($&t&`i\d8tn>INtJf7&h!q?Wb/P*h6`_g$Fn'LAW#5t[!Tk1*i[8)/@FY@qZhZu=fMOH!KX"S*I:1L<WVuY_Puib
%jma&qJMT"(:SZ?R\EBPYBHSKmF)6eaVeTL8,!i=eSaK"kY4F/rDAptuU,Q?j.Y`*(Ucc^:RTW1dAgY&g1O[+j+[2t<EZ[Arp91D,
%qmmUp-Nt_e$mu[]4qRp&b*_q"&'JK[\:.ReUo*(33:2+]Eg0)jf+TTcgr>AuQq>OkTf+\s*_p2V*f2NOg>e^toPfs$`7Ar$8ucU0
%)J51jfod,U#(*,UDmC)b$QH/aQ;4lS.>B8#-94=u\ik3[.$pcD8QSGTH>`J=`PqXjO7.$omP^RnQBV$>&!?:?iKr+>2^+[hiC0Kn
%rl+c"'t0d$20*K=`@'*mSRZp7)N1/?%>t'YQVb8T#)<Uf+*o2J%,F-:s%lO\kAb]+/Y%`kG3S[/fj]+r?k='5PY9]14o,^g_(UP.
%RmJp*aBBCd6Q\OEg[3%dOn3.Ci\D]1e?'Jt@sJ]``#iaB_rZs8g631liOD`9;=+C>MMHhaL_O,,l/2'P8.S1[?#so:'Db\5+ZqPN
%-7Oh?)V$2V6e/&F;pP!fn1Elo0>J(-NoJYV,%o+i^M-;4N64/4?%D*DIHXObC")Oq(T5t`ef]0^-DtlJB]u66HBW<k?HFUk8b/_K
%Tn@>RIn#_hjLY_T?<%K?@S9Z#*m*)Pk&_=C%&g&)*7prU>i`Dl"^B/`O_&K\VHmqGOSq&KT(7%goG-fi3up4SVi:U&f6.>Y'nqM+
%`CuH'XE69PH%H;eU%e(GH+bWn<DZ=@a0G\.op:@C+UV(EA!NpEc\ACL,=Qd^U(Z'.]6g/B\H=lQpQF,4b>YlA0u_4VOSLC=IBmF8
%*/4TO]A,8b8(<,_q-!SrSF#89BR?'d99)ZJkqS-h,7U4n<3Nb]*HVYJIOGG!Eu&rHj7,6mOe[pdRA:Z!4enK)!N\Yt;cZpl@*$=d
%!/C`TH-PWVh&*^ul2nkP9M-_C`Uhd/9T::]k'sU]3(%`e,a;fuSCFM=c?U<f9.<C8$HToL/ctDf]klJ3p"XCAH2fDUa/X&GV-h"t
%"Q$*`8<\J8<G@(PoVdglpTcc.`tIY1jg&&K\hBaa?.:D1Zl/6ArG&!2phFL`ZAk3U/K;Y$FmjE6.it1l5Mk'\SM09o\";o#WhVMR
%p9="O@o%:Q$=/g'a)L\Q?7Z>@Z/R6&Oe=]T:p*YY.0r,E-qhM5%Clpu<`T)>ND(bQH1o_GfODoU(n18H[FipL./PN!jp43m@h["]
%EN6_W@1Z.74=7W.N!)&s-5Dlb[qMjujBNu(_fBC0juOg+9.Alf"g:J3L@T-Y;&+!&]GStM>@9h(,m^!+5Op+m(E.+<lH(n6j[8r<
%>Ob:S>-&JaDPKo:ZcIb\:Tl[K5pC7/&VI%io6hFUMg54@HVQ2nl*6Vh]YKp0_9S]m4=;GWWJOO9V\"YqD>[8QBMdhn<]jBf&0,J;
%';7(i:9H<fKa\D$kuAaME6(er:fTRM^lqdag#Hh[jE1k<DDs?;Q*PKm+DctZ(>1Ca!T=(jNm)o+\tquSNYZFG<LamJDP--RQ$P;Z
%!/Tubg%HVC0EnV(1s\oWagJ")\*HWY"lKRSKj`Co#kZk61:Pt=;5>3m@*QD-[o%100l#Z%%ac(4]R8BEG"M:HW'.&%H:[&-'ghs[
%ZM?b:d)[.iF<sCVBg3BfLQ7V9AgNNNXDJD`NV#q,BS_51-WK>qIcpL!,WA%U6sX<q>l@m3ZhM*nZL#A%N=O&R6I7JS([3ip"EAeP
%$8&Dq0X\B4IjLPai^X7IZq*I>(E`c_R?d;ECbP!5d48H*"dFB0ll''^Xoki81dka:%B!:K/oBtgpOeYIq()B%Rh\X-d9--T+]Elp
%FbM^VREKlgp+&R":JsWINtTipILLY6f3T>#cschLk`pu%L!>aC[_s"g]uhUi.cH8`<j=[ZfhMW>Ymko:ncVC8%gm6TUd\d0%KY3_
%I9fu4DAHRIAa;4QRk7iS9--m@G,Kh2g/Y,\ZYuQt8!hPEM<aBA9ID5g$oPD&^NA&7RY-u8aK56nF'HK'J>&I+Q>Z`ff5F=;!8O/j
%+N,+WGL\!`Ecd#QHST0PA6!blf&-p+RZ&'#IQ&'&TEh?<aTDMd?+9o2qq8f9]X.]jn9.iAlEIfSpo67FSit9C6m_'$U#n.rYE.HD
%S+\L+AjC2G6`5tM4$ue;>scn.`;!'QF4jk)eT&?YoM.YAc%As6=\p)LOkr\d^*=1%*h(Vk,!'R3-bHHrRkC*YU0`u7&F/Y(W7OGo
%_&@ok`a,'gdDPdAUu"a"6'2O2GSuik5V!4G.<j5m4$D'?Se<-W8pQ2HO#*X%K;*6%<#\b:]J?9F9)C:f1GaOlf5p3cRt`S=)hH1j
%d%=6R"tCBD[0JK:*nKK[qg2B0@R-c]7c7qURWNNPRK*fb]O[4IEMQ3R;!:nK[]<c8C&6IGmauJ\LpS6?HjYU9>?7VtV(Ycb.A5G6
%q;b!k$VXIPOr>fR%KR><JT[20o2L#Uj]l!0p:_$;ki+>`mOR?:GkRp70df`O)m_o:JVpE+BTH5aSehDRi?Aq*Y0XFc":9\Sj>5_#
%C[M57P;7Rc&5%<%_fiN=q?#KKfo#J/fgGZ4,EpelHjY!EjDKA16`(='kJD@-=:UQVVB1$qC)-%&EgkiL?N*HVP:,s>.gt?^KrnFG
%C'&qS!r,.[fVBte&'DreUl@@<^GY(#g[5#oWj.V"[gaCsp>jIHap6Ina_5klN5Q(t>R[aQnmDXM]>-%)g`S`6?E(Q8!XFCJ?#]$l
%pVkD0ZMf.5cLtJ;]ds')eHcB>[-2/PoSYo7^<1/6Mq<i2Fr*0-e)jYq`7T*sB=7[#]3fj#gQ&[5L4LFG*$[I5jm-MsWSXapFSRgb
%)=@L/=,N[h*a(<Y%Jk?5#`p)'OH]FkCn_3"<6<]WKq]=(E;`s(JBjpNZ-;K=]q+!HG[7t_pLVh5;qb1IVmmF*W@%:+,i>;VBA(EB
%gm]OdD3iuFDq3Qo<P5kG>c1lW:E+c$X@r*Ob'`\6]6aQ-AU>Z!pl-8m9+KLY4HqC2Q%-dG.r@@m==8knNnb#$h/DRG?7orD_Ug$'
%iT>\u+WNHk0Tkeoo94O_eGZ(XB>Q,ST47h7_9/PS8RM%#`t8M(gT*q8%7PIC+0[*,p0Od+dRQ)7k`BL.1'@e879=aoa1HXI7p/#,
%[_L3a.gcb\T6`tV#fj"AUDd"b.iQLsrB^9b;!_^1h&e"LnB0u6ICcu*\[R874IT;/S)1c<qboGE[0]='VAce\NM0X9H-bR1@=K>Z
%On;O^Y0iXBdW1pHH,E'*"buk`^Ita`KEb=9d&eu;"%_]\WM#?nn8+H31O(Ijd).h,%+1OP6`6sjLt1(]9WQbR*M1;UJS&]Vk$&i\
%daC/%m5[#c]%<2R4%9OZjNt0rWb?2cC/Cqnd(15L#L=5-]B@+_)Bto]/d=&DCDgn4+AW.@R[E[q+B(JdYqlSFoPdAAfVk49N;>(k
%Uob]$UUI4u<,Q.t7#`d0#InED@-,jX];otjEi))!B[.l1)7"=Ret&,Xr@B1/Af_l6)+[oB3igN^iJ:0U,9G(b=k0t09g)GK3h;&p
%`3N+kh'/o?Via2fJqAg+jlHk0/*>fHP+q-&HfWFRc@`Sf1r4l9dG40dd@QhbY\F,Ce_FZ/\3EUqggTA!BQs.i4"1um7ZP`:pGH-"
%Cfb.:M4=q36Bq=)>Tne!`G9<,B=LhcY-;CkZ8p$L'N;AM;;F'0qIu"g^Kilf5e9%#mq8ie:ie2^37FBW(6<IF<Q8u"[c'\%KfosT
%l'pkg']"PQl6Dei22aZrFm3>qYbs&D@(8Q0b/^dWa<m8#UC40]mMZF#J[+I6r3d>2$2TY:7!.S5H_,UU43P/YdoG3-hZ^a0\Xr8q
%l+*G`-1)u(^bi64GHS"Abc'd0l^gT09_Je8p?CVuU#JWUr?0&f$C8n`E#Z[F9uGfDD&]KI5'/D/k6MM['QMaOXYcBPnQMD8FOUm&
%b@UHtNj<K.8+&]g')i.5`$8piPYaYO^/U@m:hpV)\k#.NYH>QrWdZLkh1`R5PH<P(aO%4I"FFN)gNG!,I:,D[VMX;'@8+ZT'hNW[
%%Au"D6^^Gh"/$QS2V,dep)oLT&tu:B>>kW-Vdm'uL'DI2+8D&fT46]DZ:muh6BDMX%Xmlt9D\M(<ND6m>%]F!Gtb?MhW+ZdDgb65
%P*?<GDM:QmcFNLhOoT\uHS3"NL`LY<Z\$1O*,JNp%`]TN+i^/Q?@9rn%'UC+#teoEBkXiP,QXEg%^FBK(I&N[!huV#hZRn2_Y#gP
%CFg'.=Eoc$b>H&42h1K7b6Xe%LlNs6O7oe!<)E<Z:8&2tdM69T0kOAOaf_WI6(2[(Out$,QqH5j#6A4fil-:_d`J5P=8*[6#&!Yk
%c.GXs"I-4;RG:nbAua8^fe[GFpGGjFV$Y[`7MS4%pnsi$Nm,,,"fd9W-qPm9*JK@X)ed$GLClf3qa71f[1eZ<G82^<FLOfrmn02G
%`EoU>Y.khE&(mP0[4I3F;%V9%&e>'H%9Nb@**%T>+CZEf&kol>eN]?\T%PPpN-X>,-AVfkW6TMQUrKL9HchN*^6%_7.&9HX`J+%d
%I%5Fo&20]e1Fa=k%IPqX:`W'\p48L&9X*;je3N=g6`YSag,C/80fju4fp&R7Xe`Eg\"B[ql:tRfK3RG/9l@/(]gJ@EDQdFM!5kMD
%4uG8!;W)-*@mNu[W6is<)S$^mi1R)nbKm>6/j<)Gb+%k&ZL!U'R4,SD2]g7Sn@>mZO)d%R)/.#ao.I6o1BWhO3,6#Us22BpNCShO
%/=&nqTGd/P(Gj9Mqm[l]4!o6>X%P-/561?U;D>[404Wth=olD:m!aDeP-Y'gq*/TA&1>fmQGA?'+lYBe_=f@"OA5a7"qWkA5C>9P
%Y!^_lC!l:[Yp`P3"Z,Y1'/$!'=leG2Q=d7U1meHbON8GcaCXId>1.;hajb[/%$#%[Pc\cE^K1N2Wa&JBkXe]/Bgb>16[`j_bG@0?
%g?WGW2oW+oO\lbhK#Gm0I:m$g,/!#p\=AMcO>o;oB_,"l$NMBW4'?^<kBFl'a9,csZa;ESHmR[Qf&W%LToe-f-;>;a@2gH1I%'^p
%VSI\HS-*&BRpJSO>2+e$c(#'eSlIK:%P$/:?FfSM13C^JaIoF`D9[8?8AV&THKV\nX7HRuEWI.f="\d^n##&J-b^]-H`BXr?tc+R
%9+,i:A;!tM&o8WaRL-TmRQ-9ugq+Qt;*.fO[Y]:>#[gXkpM:04LKk.R1[`b;JOGBY?Wtm2-5\b,ls7r%$>'/N1kUs#nBaL89AN9?
%$8Nl7hbkjE$8/!UN1lGX?]NtIkH&r:;bODefhGob)Q@<)0BtAPWa!%;JG7ibZN!l6JE-N'QZCV,%08I4AFNud#RMBeGc:Mle:,6g
%;(n;g#`i'I#eg[S*kM*#EL>:_^9BhNkKU_dk!2s*4cog]>`$]\"kVrNUC_4*n9!#nQ7`N/M6rKJc$aK!6V:f0P)'YYO`DEs[/q2Y
%R_`@=]Rk@9HchZVW$G:u$o]h;<Oc1kq=H$''$%.P4(&h97PtcA\EkO7\@9Yif5^mefM3RKWi89TVHJej$tWa9(=)Sd&J#l@p*G9G
%YE-P`q&Na#oib*'7Ub:%XcS\u/#14lnRo>-c:Jn'E?H^kQ.#%d1jo&?hE3)\Z4UDjOggq%CC&V&"cH\/]TEQ#P(<lu]TEPb#c3W=
%45"6R[P:W)ot$M[0EocgMb^QgS[@9E)6\jNhl0JGO)3"l&<'bkTqcn=9c7>u3[:kH*]u-1U671&$[HSo;/cfF7[bduVdD/$r+N3A
%1Y'.[grXtG4"sJrqfo9*62>Sfc)&Jg+bnR-R?!C26-ThUn"0=O^[c:0i2Q;1="i.LW\17I[@/1P93JZ-8_okhMTi^O`Rn2%FYL^^
%3E,q<9J;=#<a`B_cGtMo5tZ-5_&<#LVq-3.PmIXgJRgcnTEhC/4&B"HEmY7]b2$l!*3ItnV#87GgB6E#AU.+,bOc%Q>rd=.qW_4@
%UT+rZT.s5Mn!b^!mT0LAkO?uHD0D6&63-26L+lK>Ua*?>W4;I6d&r8_W.pF?C<B'ue"r,b8B@!.7@K$Te#.UcI0"@<G9OgKO;?>>
%$k5WcH<Lk#!Uh2/-&i8c@-+HN^+fNVL<?#g==o+.Y'i0!qO?CAhM4a>'bns;R"Y%t]Q,6qVkjrJ].G42,ZB_NVP:30GQ9f$V6)mY
%6Gr:uPWRJlQ))7MQ:dh/j'I;f\HVOJW=99F[$WAd].qn6cEV`OkRXq0X%&*Va],Y^$2<p">/guu(+_;nB=*#37S-u-WM$mU:(5=C
%k-9%teS..-/VPJn.FiOG-#-Kg$7gD?@Tq-bg7Mg6h-[LudN%SPau!/UcP3qlOsXa(?'Hs=fh&PQU9V?RA$]/'#PEo3Kk/CBc`Qr+
%SlQu,?^^1XXW18[/B\2Wd!_m7.,7DUG>"](%2K]QZ&F\%/kKhmU='^"mcK@%08,+$m/!j*A"KT60,hY%h@:]gLpkmh)9oM2G%$#d
%ASu,i@DW8Ob+HD(!Q)_dMcujTf$X[Jgdt`(N!=YN,-MKDZNf79TOO0-;-[,`iFu:kma'>\N7=VPc/YWf:#*]M=M"'I+6o?]"96Xc
%#=SgKUobu'6[+`b4c%lAd):7a\sgMPNe^/,,I@k@d8`b*^sb,T&H^$[oI=h&):L$W=[n43eK7)V=glIq8%afff7>6,`+\D<ED#UN
%*;4$1SI)0TYVgl6J74@BG\YD[aSYd'jI'Bl%3`'t?5[tfo3eE;Dk>?\ho"@MD_K@h!q-.!iE,#m_L;O%!>7gd0Pm]"6<8&V?NZ+/
%#?Ug%#:hnb.9kU0-@.(5VEhjE:sd@rD2^?;]7SKEDXt0&TbeDNI_MFXg*poZKFab9;_c*#c]VmM6_VE>GIeAU-l4E_$bLeu<O.OK
%!X*UQ1:h>k/EncXi"a/fm*7,\WNFnmFaC1=@XsiFkLoWhO8&%9)E+Vq!i8Tuj1%a$HC@Tn$R_Yki%_3VW"t;&8NN2Wekn&U<UHSl
%=7<--K_;'DJ&6M'#T/g`5a+Mug=/6OSSqT9P^2"+-Ak56XFJuuh9ak\$(W$G@l6%WcLj,foT`pe&M/HMRX*e![Qo^+Or;pYOC'7&
%i7K@&2EA.2?G:PS4g:(]_f>)FT7M]YRS^IZPr*+:[66PX65t^H2[3P2Km)[hb/+pQ?js._kBQBgj,2X@#N>GEeXi1HM)Z&BJH/P]
%\PZJ^CY4SS@PZKPKK_st-@.\^<kVM_7D-LSGD.M<Gg0+M^Sm9Vl1"ehRs!a^j1cU%#HjUmJm7_%\e//(Elaa@;\^3Rd;]o4fP>I6
%-%M,#HPLW]RB1'lV"Aa0JHeJ/AOk[,!NO%64h"N4&<;*#'cOS>_sfSC7r,#kj<;rF^T59fOsT'Zol.%OLUmI(EDgjSXs!!9fm>nm
%c6H"2I)XZ(U&:AEpEBPdcp"=%>n?,<&-Dh@'@dD@f7D@!W:HWB1iQ&q!"E[5+E1(Cbo;W<jr+RMo2o]%icE-qRWaRJ%UB;B0>n;l
%%AC)F2iWs$)-5_F27P\^p::M+#%5hIZ2=\M'+SjuHhREIA6=?iWEaIgK?D\8An2`aYn7iod+<T4RF3<Gc!GDl'nG%L$I;O](\lg&
%m<39QE-MmB&(#*7ps;Q4IT;J0M']Jn*]\XUI(K!G-ip#bo)_\0JT[/-`:l@C^Hu$iqRpk8<3qH4c*;T+d2iKMF=\"])1&aZ?G@Pb
%Cq_7@X4NmV>u'Q6dr0=-kM/fM?a%l*!QQg'5TjDL3^1+(-]O]I"%Pt!(lOMYM,sP-\D8JmTrP!8,dpogTT<m6a6)FV5Q0Eo@OuiS
%L#J05P62AH#FdhP$2B[$27a+51urr1oQAK\*^p;T`uRlO0?V_F3rW#jE#8[j8aW^@ku*(mkj6*%9.'RI$Y^o[J\#l%S5*I2gF'!Z
%s./jPfpB&/.U%V^mCV9Tk]^)G+jM:fE+2H<;"8\cML^A`aO&BFpH)lBK0"jGQNt;O.a"K,:4hi^$sII.(tC`Moj_;!EfPJ"(:,!C
%!5p@(+,&B<g;-OJH1BlhP,U%I+Y!&8;H1=i$uJ%hrfLEk`3t9MT$ss/&lh=0N1/D"9uNoed7kC8gWU,M$-Z@1^=:S#V^BEKOBujC
%UUeeoA1:j(bG6,`#L9<sVmd-oMe3;CQ'8>/@pMAg.\Ai>j]d['9#LpuJQM@pY;HJS8';$LmG+F38LF;03J)CIL7II)6F(V'[o;Gf
%L$pI#.L8g8amuKFl4CCS3YNs40m?mh;Gq2aa.`FmHuu9HRa%(d%!U5t*EJEgi^//td"\r#G.E"jSYE.2,O<>+CJdg0ZRB?U$.g/i
%H?3)j&$6+bkRrO]dAsojdiePb?iK1XMa"2mRb+9T&F4dfhi^A9ok]CdcqWFH%*`Y_Vb;df0[rmoe!%3gj*Ji9ObVh-etd;cXftp]
%aOB+73SiDX#'R)tjhRtPEmb4D[X^i2ZiD*Ab#Z^jlR)]OiGq!/YCsT^(mu?)q`M>/!d/Isj9Ghu=84gDNlLkFD:o@%N,4:Md'M3L
%\4FdL#kgfUlCoUg=sB8p%LW#[af_iV!'**(a=mNN?VbZok*oHGm\Vl'q%R$E,50Q^9.M$@nAfq<-(euH(\Ca*1`.9<kqYMWIO;[B
%8GoXs+mUkrBS<f?O'D!3>?W'bPsc)^rXs;Vb>6e(`d1sF0Ck$6F3F-V1lo.KLV[i0GGcmtVk`;)ftk\%UH!$P/)PiK=f*4fVqA@(
%FTM/?X):`N,qrm1^9T(WTVHGV,RGRWGMKj3I`YJ#K2jg#22)VqVS$Ja-Qa;''L8@\IiJ,QpQ&=TQ?rb5^IX_"q<N-*H78=$f^%h:
%3$8='$ksY/K:Y'3gIPO(H";Q(d7f%gHn^KD0%gaY\+)1$YFAK\oc3hqCjU5bL`%G((_ZUi[b/APg^\"4bp&260FQSEZEtlLf\c/3
%%do,jV/O!`Tt;+iKSkLsYLHlmSD_Cg8Y8IQ@3m@X)6&jAZI4$jGH.%fhr"=CQ[c@BVc/&qG1&"F[-S*UpahK4H@m`)8-@5F]f*ki
%O8a=B@A'62GD<"d`G"`koHH;uB7@(+$)[ejFXkdL.YTWoc-sj0B<eG5!>]Ih0A3FFJqV"(C8JPZXGOh8G2`_+:Qq9V20q(/ln98U
%/'^UqWi9ejY$Bp/o9A,uF]q6$An`5.#ZH!d'0u>:LsZOr_dG#IhWGf&D:IGa-chm+X]k$(\CG18of"Pkh4IB+-k%S<PaqR7;9H%7
%3?^JnKRm#G66`hdC1jWnJQ;E_/a:4u`W807AFg_>.Qm3r4Y_gB'Y6gq?Jrn(Fp0fkSQA'5)nA+dK6#6g`5D^ReHaS2ng+Y_1fL6Z
%NN*oLYYq(%(!Bt6.h9H9'bY8PF;UAV'u40,F(SbkjD3\*!mtJc&@XW4-nD+ciD<O9=aX-&_!"&jY^`D1Yg\2%@9N1IZY-7`.%)e.
%19fP*-u]!YKQt)\@:ED;aDI*`"a$k3&kh@@)Ti:R2HA0'H+B[k'%q6fA:&A<3i%e;WAD5mOMK?]9pTDA%1ekr":5H1(!tIc=N@]_
%`$et#mDei(Lf`%3@up](V]u#1]epOej06rQpTaPPYV.;!F!B8Wd$ctek`L=i&hmln!-C?=LudGba:1j;Yc([Y7F:b7QgJ(YmU\q"
%Phf)Uk]Y9a-b0NtDhtbs"tUje'MOCh'mP>\7\LZ,I>_=8^]!`[]A@VGZ?Jbm^/Nj-0.,>'[O`dr1<[63E'h`"Y`aul2(67G!&r=W
%5f+\9j+I_W_SS3:\if&"(FeP>/#GSEpln[:ZW$"uUt"d-2"p#MM<b\'RPe^s"Z.K]J?>&7(VDJRB'?k2bj_Y"P@rG.#JuNuAjmi"
%GO%`OV(>08Z9Zp!e+%-E2%$90,M&c5&fUK[,I$H.+rI5E4u=*\&!O_2:">E,4G_4YoWeqFG*%1-\"GhUIl*\^d9ZS'0k>+<9K>Kt
%bgK`7S5$OQ^b:4mIp/nA\h:=er;LWtaI@Ai_=a!g"pnYU*(0gQ\7lDHb;Wj"<%"_9DblG<3cZ*Q.0G*$\#L(V_(3F@UDC9=C)@:`
%0H[I:/%Zs:*0*nO,-6t",eLZ+0Go<\A$.Wa;^dG<R=\IP9_UG.LIt3V0Pp3PZ=3]L-)59-X!/mbl/,`A9BoY7Q&+P>Q4e`62Rupi
%A-bZ45aCB8-Hn34(Lp,mlg\KY(5Tf<D7jVE,;`mV!(_G%d\gZ/G]Y0&MJ<3(X'Q1([3^$O%p1k#i33M`qY_@_Eu5;8%(u_X]j"+7
%dm*.DrU7Ve]"k;T5?Y]%Co-P7WT]cMTX6>-@O32M+\E>qXTFYB1?&mO%O#=cHH_d$V[YY']eS;#6".b:D967cDU_#d#D_r[)Qdmg
%J42e1BWS0aLmb,&#2PA>++LgE]H=^.3rs\-#3+9;M%osOah@N#9Y)c38]tqF3m`M90(d%0RJm=,;]&\q/UOfp9sUW"=XWSVeo\r?
%:MQ^M!pOFrYp+ku=DMKh5U+"n+5BqZ&UY0?'M.3lA_=SiA$F[7QBtI'i#>$3HRqP4>M5ap86Vkccc'C9b]\XXIGNnE7B54oJM;,S
%R<pgOc@FL]Ak;Hc>K.ZmA.-E0&Eqm3qsMFl9-,b=lZJ3trB?/Mq5.#kUIou)KOF6&K.8"r^sc.R#7f.sZm#Mt;oc/;L(P9/\ViMr
%ai]TE]iJoPS[7t?@kNrHa!%^e8]r=dJo):f@>N58nJG-Z^_0eQZi0$!^:SoTH\b4%?9IX0lM"c"5&O>Br4A>Fg\R$hLU,cmUTQ3=
%64C#58T]&:fFq;6+4"^B"/Y./Cr)Lc:g6:W`NZF5)oW>D+?C#">Rj?s>FK8)SJs8'[WOX:famk,nU.tRHcK*2N0]ZurA00_>MZt;
%OXgs.^2-/(k%,C$2/>N3dF9F/nf2.*d3]X,1YY(nFtGj:G??Sa+5Xa.'Lac4(95G8l^T,a?gHqpf9rgoQrAoqjPR]&G=UtP"!7\.
%Pl(H+LYEiWL;OcaK4?.ofXbRbFHNQK$**n7L)tH9hJuQ%9G1mdAnoE,aVm)o'Q8m+R[^9U?9ocX&7H[o\!9Xe(NQ\*<bH3fOI@^Z
%:HL4CO!SiVW2_DFZ8EqVGY!6/Q(^USJBS1b[,#aMD9e?W3CSdLqFT_>aU729><#-Lc:K6hN^55Z7S6'WFPTk-+)r;[,O'd1e$&c;
%,S@19=Fk.WlCP1dWHp1MJ(+R6+K,Z\M(X'HqW"Om[f`8=i2WM:&j8YgB"j#knU$J]]itLk#?@'Y\764)^D[M7a7=3(.hYJtD`X-2
%O2nhHo6<%&SbqHY^&#<^]/1iHNJ9@FS;@JEIIbr5'-\RgR%dGi5E&bWV1V\FbC?eM0ORGi9P6kIq4$JeKW!YLh83/iP,'2)2UU!0
%7olRtoMB5g)BQgPD/tU'&l(USKim?N4M,hF1W<\5"E#qq@+V3C4;)Eg)WB.'ZTn[fYD?DM("3Og&S7jR^%9'7`YQc#6#>+S%u%#d
%Jcq'#Q9X<;Fr*`.e]kn%($Km7Gs*fE9=?_OPY-0#$cTAn]>\"D4]O_m'p(a*7=]/1>e:sO?0Q^6(rao.Ylncl\"p.+1_]O`d1p4\
%9MC\-[6Rtf])e_5lSiMr)id&W8Ia'X(f@,M!^$h#Oo<RIJ+r\*/A'aRrD(+RF@mSlXdn)r372n.a_nF'6^<WX9arLtU`rY9i&CR(
%a%GSRR0/K.7?!+3l>r_(FTHBABC?atT%^&IleX1qTb:.pZ4:='T,7]H-<"@-dt9.78]Fk@(jsuYO"+M_Xd>0!cd\"1HmriQLDE>.
%4K35#[$Dj28kT]<@MHhIPq-?9A8@G=$9UJ/=TRkVJ+6GZicPb+9Vfgd1(7iQd'-]r++@cU;Taik@^r+f19HmPYWe.cj.)1fH/W\4
%:k/5#Du3J:^N;[=k&3K`q4E-2_k6qqC[BsVL\Y<Vi@k6(:I"fm?[htN^OH^jnN[!Ek?n5[Y<W![s7+:95Q'KdJ,SX3r:9C,?iGYl
%p<3J`rR8fZJ,SK4s6F$@rT3(Cs6X1m01Kp/4lMHOr.k=Imsk,Mrs,DhA1.~>
%AI9_PrivateDataEnd
