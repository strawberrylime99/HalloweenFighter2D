%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 4_head.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 142 154
%%HiResBoundingBox: 0 0 141.1729 153.5114
%%CropBox: 0 0 141.1729 153.5114
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:29:21+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:29:21+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:29:21+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qg9X1jS9G02fU9UuY&#xA;7OwtV5z3Ep4qo6feTsANycVeJ+Yv+cjNXvFf/BukRxWAqF1zWWaONgNi0VuhEhHcMT81xpTQ5vI9&#xA;V/Ma/uLt7zVvOmsXepHp+i5jaQR+0aR0T6RTHZO/QJGdZ8pXty0+sWeq6veSmsl9ezvJM30qy1+n&#xA;DsgmXeE+0HXNOspVHlLzVf6BeKapaTSuIGI6K8cn7th7GvyxoLchzFvRdN/5yR82+Wp4rPzzpEeo&#xA;WrUC6tpx9ORh3Zom/ds3sCmA7JFHk9r8m/mB5R85WRuvL+oR3XAAz25qk8Vf9+RNRl+fQ9jipDIs&#xA;UOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVTubm3tbaW5uZFht4E&#xA;aSaZyFREQcmZidgABU4q+SPzb/NkedNSSTeLyfpkzNp9s1Q19MtQJ5UP7H8ikdK170Qk9w5vL9U1&#xA;fVNbuOMzsa0426/YQdq06n2x5qKjunOkeUERVlugVr0H7R/pkgKapTJZLb2NnAlIoEUdtqn6SanJ&#xA;MVK60jTryMx3EKsrfZcAD6AR0wJBIQV7p11o9oLbUW+ueXXIj5sectmzAca06xmvbp89iOTMHi96&#xA;QWser+WtfWfR72Sz1CEevp15A1C6d1NNmFOoOxGCmXHtb6s/JL86Lbz1ZPpupqtr5osU5XMK7JcR&#xA;g09aIdtyOa9j02OwT5h6lih2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrTJGrqhYB3rxUkVN&#xA;OtBjarsVdirsVdirsVdiryX/AJyQ1meHyjYeXreQxP5jvo7W4dTRhaxfvZqH/YqD7EjFI23fKuu3&#xA;q3N5d3SIFgtmFpYQgfCnEcdh/kgDCUAch3sh8taLb2lsk7/HM27OezZICmqUrKdqHB/ye3jTFDgG&#xA;J36E1K+2KtsasKdB1Ph8sVRdhJC8rWsqiS0uQYZkbcMGFP44qwXVIHtNNeJiWn0G+aBG/aaAkFSf&#xA;mD9wyLdzPvXaZr135R846Z5l08nnayrM6L+3EfhljPs6EjGTHGej7wtriG5tormBg8M6LJE46FXH&#xA;JT9IOBkqYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqtlljhiaWRgsaCrMewGAkAWVYLrXnWeO5SSJm&#xA;jgVgUiWnJwOpbNfPUyJ22DeMYpjf5l6td2fmizvgZIG9CGS1J6pux37bNWuOoJ4wfJswgcNPRvKn&#xA;ma11/TVnQhLqMBbqDureI/yW7ZmYsomHHyQ4SnWWsHYq7FXYq7FXhX/OSLOfMfkiMHYrrD8f8tLa&#xA;LiforiOan6S+Y41aUWkR6TXDOfc8qV/DCp6+5mN3qE9jorSwRqZOaJEX3XlIxG4G+wGSJa4CyraP&#xA;eap+lxpmqcC8kSTxTRCgMTdW3/lNQcAKZAVYUbfzA7eXJNWaECRDRYQTRi0gRasfnXG9l4PVTo9Z&#xA;1O3lt4tTtFghuzxt7mJuSE9eJ8DjamIqwyXT4VecimwVmA8CBXbJMGK+Yog995vAGyfVmA7VMJJP&#xA;4ZDvbR/CxvV256dZsephQn6VwnkwH1Pt/wDKm4luPyz8rSynk50u0Ut3PGFVBNe+2RbTzZVihQvr&#xA;+xsLV7u+uYrS1iFZLid1jjUf5TsQBirzjXf+cj/yp0qQwxajJqtwDx9HToWmqa0AWRvTiavs+C2X&#xA;CWP3H/OUFircoPJ+syQN9iSSNYya9NhzHT3wcQTwIjRv+cqfy8urgW2rW1/oktaM9xCJIh8zEXk/&#xA;5J4bRwF6noPmfy75htfrWh6lb6jAKcmt5FcqT0DqDVD7MAcLGkzxVpmCgk9sBNC1Wxyq+3Q+GQhk&#xA;Ek0vyxDsVdirTMqqWYgKNyTsAMVYR5s8zRSqYYm/0SM7kdZG7fQM12ozcWw5N8IUg/Jfl19Tu/0x&#xA;qCf6NGf9GiPR2B2P+qv4nJafDe55IyS6Jp+ZflBtf0f1LZa39nVogOrqftL89qj+3L9Rj4hY5hGK&#xA;dF455e8x6noGoq8chiljPE8vsstd0cd1OYEZGJsOVKIIovb/ACx550jW40jLi2vzQNbOftH/AIrY&#xA;/a/XmwxZ4y97iTxGPuZJl7W7FXYq7FXiX/OSUfG68mXVaBLy6g6f7/gA6/7Hp3xHNTyL5egC8tNr&#xA;1E0qsO4+L+3CFl1ZJ5iEo0OzEVOcl5Cq8q0rSQiv0jDJhj/QreXbm8u9WuL/AFIql5ZwtaC1ReIj&#xA;SMEkbk1qffEJltsEo5yJ5LtFVebS3cSBAaE/bcD6eODoy/iKayNq2sCytZLL6jY2kouHd3DO7oOK&#xA;0pSgAOHmw2AZhowH11VPQqw/DJMGJau44ecLj+eeOEMe/GNlp+OQ720dGM6r8On2ynqsEYP3YejD&#xA;+L4vt38poni/LHyqrihOl2jD5PCrD8DkW080w84edPLvlDRpNW1y7W2t0BEUdR6k0gUsI4k/ac0/&#xA;rtioD5QXzj5f/MnzZNqn5keYpNK0aGSmm6DbrM4Cb0HqLGYkAH2nPxt7CmVTkegbAKe0+XvO/wCQ&#xA;3lm2SPy/cabagqAZIiizMB/vySQ+qx/1icxpGR6FeEq+p/n/APltDC6fpOFyajYPMv0rGr1yHDI9&#xA;EiLB9U/M3yprUbQWug3vmNZPsxxWHOE13/3YF4in+TkRhkOoDO2GW/lT8wNI1s+cfJ+iP5cazHqD&#xA;TWuhO86g1dPSUV4sOsbH/V7ZkQzxGxNsTG3v35IfmxN+YWhXcl/bR2ms6ZKsV7FDyETLICY5EDlm&#xA;WvFlKknp75lAtUhT0g77YWKR6xb3UEyXcBJCChA3p9GYOWBiWQLdp5iQ0W4Xif5huP65KGoI5rSb&#xA;JdQuoZTVT0I3H4ZeM0UU3PcwW8DTyuFiQVZjkzIAX0UBgPmTzY84KVMdv+xAD8T07tmuy5zPbo3x&#xA;hSn5e8n3urTJf6sDDZfaigOzOO237Knx75PDpydzyRKdPRI444o1jjUJGgCqo2AA6DM8CmhdhVgX&#xA;nz8sbbWy9/pvGDUTUyRnZJD4+zH7j7dcxc2nvcc2/HlrYvILq31fRLk2moW7xlP2XBB+ak9swZR7&#xA;+bkg2yTRvzB8x28QW2vneJNjFOBJTwFWqQPkcmM049WJxxL0XyT5+l1y6awvYFiuwheOSKvBwvUF&#xA;SSQfpzLwajjNHm4+TFw7hmeZTS7FXj3/ADk3Gy+U9Bvk+1Z65asSenB45VP40xSOr5UmieCWNHFH&#xA;t7+WF/YgjbCg/oZrc6at/plvAX4COSOdGAqeSV/gxyRDVE0rfou3GpyX6syvcRrHKgoFJVOHLp1K&#xA;40vFsl48vH9EWtm0/E2lwtxyK7ME5ChAO2xwUy4tynCjnQrulKA+I/phYJpoSkXlW2orGnh0wqwP&#xA;U5+XlnVpv273VZQnuqcAP+JHIdG4cx7kp8wqEQKDsqqB9FRhlya4c33l5TsvqHlXRrGgH1WxtoKC&#xA;gA9OFV7bdsi2F8//AJp/pLzt+bddO0WbzH5f8kCGHVdPimRBLPKzSSBA4+LdVR0AJPAjbrlc5U2R&#xA;5M4f89vy8ELWvmKzv9EZBxkstU0+UUNKU4xrMPbMbgPRaSc/mH/zjvdy83tdNLuK8mtVjr33qi7/&#xA;ADyJjPuLKvNP9C8x/kxfSomlS2ET7BY4miRvh6fArc9q+GVyj3gp3TXzH5l8iaHYyPd3UFpVfhlk&#xA;Ir/sRIasdv2anI0DsAovq8m1j8x9T1S2lm8urHpGhJtL5m1WiKR/y6W7UeZttvhPgQMnHCBz3Pcy&#xA;thvlfzNqfkHzHa+erCzvrjy1esbTUp7x1SXUGm5yPOsdPg+Ico6+H2tzmXjn06sJC32LYX1rf2Nt&#xA;fWjiW1u4knt5B0aORQyN9IOXtKuVDChFRgItUsu9BtZiWT92x/l2/DMeWn7mVr7PTmtovSUlhUmp&#xA;p3yAwyW1PWtHl1C1ihjm9MxtyNakHb28MsyYDKIFpjKigdK8n6PY3Jupz9buweQeX7CU3+Fem3vk&#xA;ceKET3lMpkpxZapY3rOttKJGj+0KEfSKjLoZYy5MDEhFZYh2KuxVCajpOmanB6F/bR3MXZZFBp8j&#xA;1H0ZGUBLmkSI5MTuvyj8tMzNZvNZ8juikOn/AAw5f8NmPLSRLcM5Tbyz5I0nQJXuIGee6deHrS0+&#xA;FTuQoAFK0yzFgEN2E8pks1Hz5o9hrqaPKkrSlkSSZQOCNJTiDU1PUVwS1ERLhSMRItkmXtTzL/nJ&#xA;C19X8o9VnG8llLaXEY9xcxoe/wDK5xKY83yZ5oQJqerkdEvUuVP+TOOQP44SgdPczCwlBs43602P&#xA;sOuTaUR8VQ/X28MCuO9aVK/te+Kt8lqGXZBQfP5YVTCzuJVS5unq3oQGvsB0/AYq89uanQNAgb7d&#xA;zM9xKPZ5n/41QZDo3Hmfcoy2Z1TzDYaaP+P27htgP+Mkix+I8cMmGPm+7PNGrHRvLOr6uF5HTbK4&#xA;uwp7+hE0lP8AhcizDwH8rPyouta8k23mq18x3+keadVlnurm5iZZYZKzOE9e3agkrTn175i5Jgmj&#xA;u23TK30n/nIKwQwrc6DrsCg8JLhZopjT+ZSvAV9jlXDE968QS6Xyv+c2qyelNaeV9OdxymDevNJ1&#xA;2PBQy1r448ML5lPElF1/zj/p93eLN5u1tpJSSTFpVjaWQFf+LAHdx4Fkw+OI8l3KZL+Q35MBQDHf&#xA;sQKFjO1T7mgAwfmV4Sl8nk38kNBvlMtzbyahEemrXcbFQNwPSkk4/euQlknIbWyAY/8Am5548rat&#xA;5WvNE0qU6per6c3O0UyQwJC6kyPKPg48fh+EnrksGOQlZ2SS+jvIWmrpnkjQNPWUzC20+2jEpFOX&#xA;GJd6dh4DNg45T7FDsVcSAKnpiSqX6hqcVum5qT0UdT/ZmLkzdAyAa0xpLy3eSeMLG9VQDupFDjhh&#xA;e5UlgNzqeoeXddC0+BKq4I+2tf1UocxBeOTftIM50rzPpWoRKyyrFIeqOab+x6HM6GojLyLSYEJs&#xA;CCKjcHL2DsVdirsVYX5x/Max0lJLXT2W4v1BDydY4vmf2mHh9/hmLm1AjsObdjw3ueTyzyuNU8xe&#xA;cbYl3cPOJbhz/KDyZj75iQiZSHe5EjUX0Pm1cFi/5o6X+lPy58y2QXk8mnXLRLvvJHGZI+n+WoxS&#xA;Ob4l1pxMzynrdabaTdt2iVY2/wCGU4o/WyXyzeLLp8SnqVDV7bAA1yYajzTQkh1jUEqereHemFDZ&#xA;IGxNI/4+GBVyKK8m28Ewqr6tOLPyfq119lpImiX/AGY9Mfi+A8kxG4Ydq6CPVNIs+1jaKJB/lCJa&#xA;/wDDk4O5nexKN/KuxOp/m55Xt6cil8l0QK/8ewa4J2/4x4JLj6vt68tLe8tJ7O5QSW9zG0M0bCoZ&#xA;HUqykHxBwMnxZ5atte8qJrzt5mm0CLSNRfTo19M3Ec9whYOI4CGDOAoJI6AiuVnHGXNZ5ZAgRFsg&#xA;07zt581rUIrKz89RtfsQsdpeWMdu8h6UBkWhYnsrZH8tAsJaicRfD8iygP8An5bD6suo2Su9AJjG&#xA;6yfQq/Afux/Kx72v8+OoYN5q1XW9MvJE1zzdqd/rg+JrLS5xbJH/AMZiF9NAPl9GT8CA6JhqMk9w&#xA;AI+bHdI8zec9Y1W00qXXb+WyuZ1iuUtpXaWOJ2ozPMqUIUHem1MAwwvk35MpjEl6/YflP5DisSYY&#xA;4by4IrMJlEku/U1kqa+NMvG3R1Es85b8TzX84PL+m6JBZPYxLbTTM0TCH4Q0XGpBAp38ccgFOVoc&#xA;kjIgl9k6Hbm30XT7cmphtoYySKfZjA6dumQcxG4qpyXESAknp18PvyuWUBNJPfa4CfTtx6jnYEfZ&#xA;Hy8cxJ5TJkA6w0WSV/rN+SSdxGep/wBb+mWY8F7lBKeAAAACgGwAzLYpN5j8tWuswUaiXCD93J/A&#xA;5RmwifvZxnTzjUPL2uaPKW9N+HaRRVT91QcwJ4zHmG4SBasvM2o2zhQzpvv6bMp+7pkQSORSQHo/&#xA;ljVbq/glW4HJoSoEtKcuVdjTuKZn6bKZDdpnEBGavremaRbG4v51hTfgvV3I7Ko3OXTmIiyxjEnk&#xA;8q82/mbfX6PBaE2NgdjQ/vpB7kdAfBfvzAy6gy2GwcqGEDmwnTtO1bzHfpY6dCz1O9Oij+Zz0Ayq&#xA;ECTQ5tkpAc3unknyVZeWbEqpEt9KB9Ynp9PBfav3/cBscOHg97h5MnF7mS5c1rJoY5oXhlXlFIpR&#xA;1PdWFCMVfAuq6fJYvbWUv95ZyXulXBHd4JmYf8TGITLq35Y1NLWMLMfhQstP1jJRa8g3ZNFremzK&#xA;zLOqUHxFmAAHua7YWFN2mqnU5p4NGspNUezha5uvQKfBEn2ioYqXI8FyEsgHNsGIlFaZd2+oW8dx&#xA;akuJPhUHqCNipHjXJhgRS7zoyNotlpQNRc30NvLTuB8bn5A4JMsfO2KX85uPMV/cN+xC30F2LY9U&#xA;fws6/wCcY9LN9+a8l6Vqml2M8wY9nkKwAfMrI2A82cOT66wJfI+o2t75t86eZPJVlaWf1jU/Mmpz&#xA;fXrzm3oLacUJi4UYM/8AZ75Erw+q/JhPmnyp5m0NLi2kuYdX0e3u2sPr8EjyW0F4gH7ovKEe3kWo&#xA;ry+E+JAOG08AuxzfQenr5rj/AC4U3cn/ADsX1LhBIzK5FyYSoYtUoTU7mtK4XVSMeK/4bfOFj5Z1&#xA;O6ubv9L3sOmadpzRy6xqEqtchZp2IjDrGHaeV9yqiq0qdt8BsO1gYyFh9JeWf+ccvy/m0i2u9Vvr&#xA;rzFDcxJNDKZXtbcxuoZGiihZOClSCASciSVAA5MESLSPJH5lan5ds9TaXy5b2qXKC4k5/VpXYAwh&#xA;j2KnlT5ZZjJcPW4wQCBuwL81PMUHmPVbWDS5EuRCapwIYMzsqIo7EknphmeQTosZiDKWz6D/ACp/&#xA;OjW/NPmjUPK2v6ZBY6ta2/1qKS0cyRcVKBo3qXo49QGvKn4VhK/i5UZCQscnoV02vNMyxx/BU8CO&#xA;J2+k5hyEyy2U10XUbkg3U3Ff5a1/AbYjBI81tNLPTLS0FY1q/eRtzmRDEIoJReWodirsVcQCCCKg&#xA;9QcVQU2kaS5LyWsW25biF+8imVnFDqAyEikEXnLTbS/jso7dY7WSQIhj+1uaByoGY0NQAaA9LMw2&#xA;eaecYvNd5r9xztJpbkyMsacGIWMH4BGOhWnhmPkEjI25MCANkZ5d/J7W9RkW51uX6lbncxfamYeF&#xA;Oi/T92XY9OTz2YSzAcnreh+X9J0SzW002BYYx9purufF26k5mQgIjZxpSJ5phk2LsVeP/nZ+fNl5&#xA;MgOk6A8N95nc0lQ/vIrRO7ShSP3h/ZSvuewYEsoxfOPmDRPMWoXVxqmoSrJPdQS+ZdVgQG2SJLiR&#xA;VUryWvOR3C0C/h8WAoxzEiduWyE1byNrOjXa6dqNnbx6nJBb3NvYiR5LmT60xWOJEi5cpdqsOgyL&#xA;bbIvy1/KDW/M63+swix+raUyLDBeFxZ3k2/qQiWNg1FH7Y25dDTfAZgdUEofzFrWsaHaxeWfNOjq&#xA;L3TEddB1W2nVb2CKp4Rm5g+GaIduQqK/RkL4uR2ZDZJvL/nEaXFFHxLyAl3kapZncksTtvWuZMSA&#xA;HHnCRNoy6812WqazpZldYLe09WRw44KrMnwU2HfG91ESAUim1WBLvUWRgxncKjVqCqCg3GIKJRNB&#xA;9B/84h6Ky6b5j19wD9ZuIbKFu49BDLJ9B9dPuwM+QD6GxQ+R9S8k/mMPzT81al5TljfV9B1ibUUs&#xA;SyRymPU/3yunqUWRWjorKW+XXK5Trm2ABHeYPOvmyPydrvl+T8s7rTr/AMxzyz6nqHG6lgkupqGS&#xA;dEeN6PtVVWTiDv7YOMd60j/L/mrzBa6DY6bB5T8w6g1tBHCs4sZEido14FizE06Zb4sXWz0cySbH&#xA;Njdlp3mOC51qz1jyHql95d1qaG6a1ZJIJoriGvEo69jyI+WQlkjfNzsMDGIB6M5u/MH5269ZW+i+&#xA;WfLX+FNHtYkto7q8ZfVjhRQihFYAiiimyMffK5ZYhsEUqT8pPJXlyGfVfON2dSveRkvL29lKxGRv&#xA;iNEVqux/yixJzFlnnI0G0APL2n0vWvO97caJ6WkaVEDc2UhjWFImtIOMMnFagAzPzNR+OZuGBoXz&#xA;cfUTqPK3tP8Azjb5f1m613WPOH1iZNFuYls06pHf3SU9W69OgAVGUhaL+0R2YZYd2EBUaP8AY9yS&#xA;+jiu/qzghmFRXoflmHDJwmi2Uj1dWFQa5lRkDyYt5JXYq7FXYqp3Fzb28ZknkWNB3Y0yMpAblIFs&#xA;G81+dVaJrSz2RtmJ2Zvn4L+vMHNqOLYcm6EK5oHyJoM1/qQ1S7BMFu3NOX7Un7P/AAPXHTY7N9Au&#xA;SVBKvNfmLXNC88yO91IR6ge3iLH0mhYAhOPSnb54Ms5RyEtkIgxepaLrFlq+nxX1o3KOQfEv7SN3&#xA;VvcZnQmJCw40okGijsmxdirsVeBa9/zibpVz9Zm0nzBcwXM8hnKXkUdxEzklqNx9NqVPXf6cFM+N&#xA;gvn38rfzP043V7rNzo1rp93apY3d+l0IIWSOUTLRJ/SfmWUfCinpsMExZB7mGGAgCAxvTtN/MPzB&#xA;5sjdbVbnXPMVnPBpdw7mHhbovGS6pL8ao8XLiWoW5bdhlIxj6Q5Bl1elR/kn+d/6GtdOsNR0jSLO&#xA;CMItus9w0op15OLd15E7kpj+XjdndHisM1b/AJxz/Oe3uDOLe21qd/haZLtGanzujAct4O5jxqtn&#xA;/wA41/nAiC8SOxtpqAi0a5BcUFAKqrJ/w+PAvGk1/wDlH+dduxtbny290E2jdRb3KgeKsrMPvwcC&#xA;eN0f5N/mtPATJ5LO4IRlaGBgelSpk/gMeErxhnH5Ky/nV5I1yy8u3nlq7fy1qF4ou+cDMtt6tFed&#xA;J0JVQtAzBqg023OTDA0X1BhYPDvz/wBE8xaJqFt+YHlq+m02sSaZ5imtkDstq0gaOcqQa8G+Enr9&#xA;mmRlEHmyB2Sew/5XeLP17HzBpnmHS3QyRXF+hAZd/sNb15fScqlp4lx460D6o0WEaF+aH5j6xrh0&#xA;/TrywaSRZPRc28qW8vpAFxG9eZoN/ipkRpIORkz8MeIhEaNr/njzl5guNBj80RWVxEHbhY25RJPT&#xA;NHMc7jn8Pz+VeuSjpsYasupnGINc2RHyT+YmnQyvP52e1tUHJproRS7DqeT1YDJnT4z0cca+Xcwu&#xA;ceXr7UpAJ9U8+apbj4JVRmsomI60YoqrX6DkhwY2w+Nk/ohNvyI/K+287+adT8w6/pyzeXLRnjji&#xA;d2Ky3ZK8VUxlVdI0qW3puvXsbs25EY8EQH1faWlrZ20VraQpb20CiOGCJQiIiigVVWgAGFCG1TTF&#xA;vIwUPCdN0b+BynLi4txzSClkWpXFrJ6N6jBl6OOv9vzGYlmJ3ZJpb6jFKBwdX9q0P3ZfHOeqKRKz&#xA;xnvT55aMsSilSopWu3jlqGI6z5xZSyWbCKJdjcNSp/1QdswMuqPKLdHH3sL1HXri5kIjd5JG29V6&#xA;s3+xBzGNnctiY+XvJGoahItxeKYrc/FV+rfR3y3HglLyDGUwHpdnaW9pbpbwLxjQUA/ic2MIiIoN&#xA;BNsE/N3ys2paYmqW61uLIUlp1MXWv+wP4E+GY+qx2OIdG7DLennvknzrqGgahwarxMQtxbsaBwP1&#xA;OOxzEx5DA2OTfOAkHvGlarY6pZR3llIJIZB9KnurDsRmzhMSFhwpRINFF5JDsVdirxPzf+Uv5i6v&#xA;+ZN5rllfadJp8qRfULvU0a4ksVUUeK1t6GOpYcuRp861rCUL6sxIAM28h/lfZeWL261m+v59d8z3&#xA;68LvWbsAP6da+nDGCwjSu5FThjEBBlbNskxdirsVdirsVdirsVUru0try1mtLqJZ7a4Rop4ZAGR0&#xA;ccWVgeoIOKvmnzn+R/5j+U2vm8g3Uup+WL4SC40NnBdElBDoYnIWQUNA6H1PurgpJjGXPm8nuQll&#xA;Klvq/laHQ7qM8A851K1JbpQ1aT6a4k+SPDl/O+5VsD+jby21bS77TbGW2bkqx38x5CvxI8cgdyrf&#xA;tDvkePyWWIyFE38GQR6vbeZL1V8xatca7HGw9Py95ftrlhI3YO7pFyrToD9IyE5zOwFLi00Ib9Xp&#xA;+iflv538220dhd2I8j+SRtJp8XH9IXKd0YKOMKt+1y38Q2Rx4KNnctsp9z3LRdF0vRNLttK0q2S0&#xA;0+0QRwQRigUD8SSdyTuTucyGpG4q7FVOa3gnThMgdfAj9WCUQeapXceW7dqmCQxnsp+If1yiWnHR&#xA;lxKNvp2swTKOYaGo5EtVad9jvlXgyC2nMvoi1kEjUiCN6jeC03P3ZlChGuiOrDbfyt5f1aUAXsje&#xA;mT+6oEcg/OtfuzCx4YS5FulIjoyPTfLGh6dQ21qvqD/dr/G/3tWn0Zlxwxj0ajMlNMtYuxVplVlK&#xA;sAysKMp3BB7HFXjH5j/lzLYO+p6YhexJqyjcxE/sn/J/lP0HNfmw8O45OXjyXsebG/K3nLVNFuuU&#xA;MvBjtJG+8cgHZ18ffKYTMDYbJREub2Ly/wDmJoWqKsdw4sbw7GOUgIT/AJEmw++hzOx6mMuexcWe&#xA;EhlQIIBBqDuCMyGp2KuxV2KuxV2KuxV2KuxV5t52/MrzDbea/wDCPk+xs7rV7e1+u6leanMYbS3j&#xA;b+7Q8Sru7daA9Ke/EE0yAVfyd/NG5872uq2+owW8GsaLOsN39SdpLeRJA3pyRliTuY2FKnp74xNi&#xA;1lGlHzn+dmnaRfXmkeXrB/MGr6epbUWSRYLGzA2P1q7f4EIP7PjtUHEypRG3kEn58/m7ql3BdR3F&#xA;jo/l6S9isJNXt7UzW8by13JuTycJSrldh9IrDj+bLgCN8tfnl+c8msXOhvpln5jubR5E1BBEYPTj&#xA;RgvNp0ZYFjeuxZcRkFX0SYPSvy5/NHyP551GTSLjSIdM8yWPJmsJlhnU8COZt51FH4nrsD3yYILA&#xA;xIYp55/O7zhpl5qN55V06xg8p6DeNp9xdXatyvLyOglihVGXiBXY03pWvbISyAEBlGFvSPyz/NPS&#xA;PPNnOsdvJpus2IT9I6Vcf3kfMVV0O3OM9moD4gbVmCDyYyjTNcLF2KuxV2Kqc08UKF5GCgeOQnMR&#xA;5rSUvrSzXCxQo0gY0r0FPHMSeUyZ0maQK8TpIKpICrKe4IocvxQ236sSXm3mHS9W0LUDPCzSWjnl&#xA;G9TtT5dD8swsmIwLfGVo/S/P9yFCSssh/ll2b6GHX6clHUzHPdBxgpynncbcrP6RJ/zbln5zyY+E&#xA;mOneZrC8lWGjQzPsoelCfAEZdj1MZGmMoEJvmQwaZVZSrAMrCjKdwQexxV5x5v8Aygsr93vNGYW0&#xA;53a1O0bH/JP7Py6fLMTJpusXIhm73mN9o3mPRLn6veWzoK0UONiP8lun3GmYco1z2ciMr5Ml8rea&#xA;tY0i9hjt5GltpHVXtHJKEMQPhH7Le4w4ssonZjOAIe45tnBdirsVdirsVdirsVQHmHV4tF0HUtYm&#xA;XnFptrNdyINiywRtIR368cVfGtz5k0L0Jtf84+X7TzLrevSm9i1CHWAHiRwALZ7KBmaL0wKD1F26&#xA;dtqp2dgabgyb8m59ZkP5gajo1iuj3dp5edLazhDqwmcNLDIAdy/FDxJHhhxihztEyhPLml+S9K8m&#xA;6VqPm/V21lL6l1pvkzTiVWWctx9S74/vJZS1V3pT7IYrtlZlvsN00v8AOumebfMl9pOmappyWN/q&#xA;i+h5V8nW/wC5isoGFPrN0sYHHgtWCnp+0KAqREerz6psUj/PNwvkjQD+XXkrlc6nJA935h1OMUml&#xA;9JC00hYbqooVRa7Cv7W5iZCR3+kfaUgdervLWj+VNE/M7yB5i8oSyppOrenbSxTt6jCaWBoJasP2&#xA;mYnkvZq022FkMlyI7mJj6VTzVZ6L5f8AzX81RTaZf641nKur+XtDiq1ktzewLLd3lzTaOOF1FNvn&#xA;sMnMMQxXydqPnny9dw/mvPPxtru9EF4jAUubNpFSeldggaip4Fa9t4RmIkRDMiwX2ll7Q0xopPgM&#xA;EjQtUrutb9CUxekWYAHYbb5inUFlSFfWNUm2ggKA96E/jsMgc0imlJdK1C7cNcyH5faP4bDICJkt&#xA;pxY6Zb2o+FauerHc5lY8IG5YkozL0LJoYpozHKgeNtirCowEA7FbYzqX5eaNdMXgLWrn+X4l+45j&#xA;S0oPLZsGQpK/5aamjf6PfoF/yuan8BlR0svJl4gT7RvKMlpNDNdXAkeGhAQHdh3JP9Mni0tGyUSy&#xA;WyXMxqSrzLr9toelS3ktGlpxt4Sd3kPQfLufbK8uQQFs4Q4jSQ+QvOep69c3Vvewxj0UEiSxAqNz&#xA;TiQS30ZTp85mSCzy4xHky+e2t7iMxXESTRHrHIoZT9BqMySAebUDSDtfLug2k4uLbT7eGdfsyJGo&#xA;YV8DTbIjHEbgJMyeqYZNi7FXYq7FXYq7FXYq+ff+ci/zTsLy1b8vtCnE95dyomtXcRqlukb8zDUd&#xA;XJSriuwFO+0ZGmcYrPKWt+R/K/5Maf5jl0ixTXltOLXkVvEs7uGMcf70LyLsAtd+tScxskwfSObM&#xA;R3vozn8kvJGo6VpN/wCYvMCAeYPNLJc3kBG0MCqfQgIP7QVyX+49MyIQ4RTCcrLxv8q7fW/Kvm7z&#xA;LH5d0fT/ADBfaVfXFtPpk5SDVIoIpGjWa0mf4XQ0o6rU9PEHEpKK0j8wT5e8y+Y/NnnHR9StPM18&#xA;Gt9LiuLaRI7e1AqArsB8TnqRtt4E5jyhICgz2PuYZpPmbT9NeHz3DrMNx5vNzLLfaLKJBHLZyj02&#xA;ti5UJXh/nsMPCR6a9KTunn5fWmm6l+a/leHy/dc/Lt1fS6tDp7V9WyltomlkifoAK0AoaH9csQN7&#xA;jcImdmef85T+XFt4dJ822ykM8q6VrEQlaFLm1dvXjimKlSV5xmu/h4Cl5DXEpJ+YHm3y/wCcPyoS&#xA;PSLT9GNpsBhutH2/0V7Uq3Cgp8PwfCSBUfSMw5n96G2Edi+jPLupDVPL+mamDUX1pBcg7GvrRq/b&#xA;b9rM1x0wxVr00/lH3ZHgHcrXpp/KPux4B3KuySuxV2KuxV2KuxV2KpP5j806XoNt6l03Odx+5tk+&#xA;2/v7L7nKsmUQG7OEDJ4X5y846hrt8XmeirVY4kJ4Rr/Kvv8AzHNfOZmbLmRiIig9Y/Kny1caL5b9&#xA;S7Qx3l+/ruh+0kdKRq3vSrfTmdp8fCPe4uWVlmmXtTsVdirsVdirsVdiqWeZ/MFj5d8vajrl9X6r&#xA;p0DzyKCAzcB8KLXbk7UVfc4qHzj5j/5yC8/+ZfLeo2umaOugqtkL64vFmeS6Ni06Qs9qCsdD8Rq5&#xA;/ZqRQ0OQMqZgBifmqw8ueU/MWifofUfr3kfUHa9tXekksckkAgl9RgFJWjKTXpvtWtaCeLiA5htj&#xA;0tlv5F+QNU82Sade6qQ/kvy1czHTEatb24WVnRiD1jiL/Sfh3342wxi+LqWM5bU+oMtaXyr+YOmx&#xA;f8rR8w+XdJtivm7UtVsbry/qUDPDLAtzbepeSF4yDwTjUg+PLKp876NseTIx+Y35q+TPMj+VL9If&#xA;PCwwG6aSJCl3Hbq3HlLSq18Kk5UJ2L+9NBD63+bvk3V4z9Z8j3kVzuZudijsxpQhjT+GUzjfLhHx&#xA;ZxBHe1/zj5Y6Hq35n6zr+kWa2un6bp6W4iWMxcbi6lJ3Xb4gkTLmVgjIDdhlI6Mv/wCcmWiufLXl&#xA;/Rmt7i8Oo6zAZLWzT1Ll4IY5DMIV7yUYcRlpa4vmzUtTsEtbu3uPrWleYbSKSzMzxNH9ftqFES6g&#xA;39OYJ8Jbv1PxDkaCCSOo+5uD6w/JLzz5e13ybpmjWcrx6voVha2mo6fcKY5kaGFYi4U/ajYrsw9q&#xA;0O2XgtMg9EwsXYq7FXYq7FXYq7FXYq7FXYq8q86eQPN2qa3c3NpxmiuHBjmMirwSlAhDEEU9swMu&#xA;CZlfNyoZYiNJn5L/ACksdInj1DVpFvb6P4oogP3Mbfzb7uw7V2GXYtPW5a55r2D0LMlpdirsVdir&#xA;sVdirsVdirCfzr0e/wBX/K3zDY2Cs901uJY440MjuIJFmZFUVJLKhApiUx5vk/SZrCPT9Jbyw96/&#xA;nWEyW02kskl4Jo3YhoPT9NFEdCWK79T1O4jKAkKLGMpifL0vd/yr/wCcctC03ToNT85WiahrEodx&#xA;pch9SztBKCPTEdWWRwDuxJAPTccsIDZKT2ixsbKws4bKxgjtbS3URwW8KhI0UdFVVoAMLB1/eR2V&#xA;jc3kgLR20TzOq9SI1LED7sVfPvlXyKvnGc/mX5l8zXmi65rZaTTYNHkWFoLYD04o2Yo7v8CbgAVH&#xA;U1rlE8sRsWyj0TGy/LTz7pWr6prPlrzjp+oXeqJGlzd6rA8VyiQghVX0yy0P7XwgGnTIE4yNimz1&#xA;CXatpf52xRyodd0rUg4PO29BFQgb0Eka8x9+YxlDkQ2xZD/zjLHI2m+a7u7RY9Tl1cx3cabhRHCh&#xA;UBu4q7UzPxAcIppyc2D/AJt/mWmvefLe2R7vQdJ8oXtzbjzBBGtzImoIVT1HhG/oh04U5fEDX/Jy&#xA;ZYggbdWNafZz/mZ+Z2laBrurWmqW1wLqWbU9LjMEp4QO4Zw6IoYui1CjKcURZNEW2yNBk3le+urD&#xA;zl5C1udyNbN7d+V/Mjqf7+SKRoIzJuOTceDtXctv1wx2mQg7h9P5c0uxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KrFggWVpVjVZX2eQKAx+Z64qvxV2KrZYo5onilUPFIpR0bcFW&#xA;FCD8xir5VH5X6d5Ta80/zV5G1vzRLG7jTdZ0uWaaD6sCTG/CBkMTqOqvUfRlchLo2g2wWa980sbi&#xA;1t9T1vRdFjQ/VBfC5d3avwxs1vGKCmVjGBuQLZcStoc9vqX7qa281PqQBLy6fK90DxH2wjJG6ge9&#xA;cBxnpXyTxPdP+cZ9A8x6dB5mvtVju0tL+5gFi19CbeaQwo6ySmNt9+SLXvTLoCg1ZDZSn82/yv8A&#xA;O2learvzj5FtxfR6rT9LaYI4pHExX0+aoy1eN+XJgDXl8R26Ta5QjMUUz/Jn8uNfi82TecNf0iPQ&#xA;1gtms9M04en6rNIf3txJw+ztVQDvv9JSbY44cAq7TfVfyEgvvzCTzNFrc9ppa38esnR40FP0ijIX&#xA;lDk0AkEe/wANQehpkeEXbbxbU9YyTF2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxVJvOPmzSPKfl2817VXK2looJVd3d2IVI0HdmY0/HpikB41pfnP82/MnlW4886T5&#xA;o0+3iglf/nVY7OOZYwrELFcTvSdXIFduvUZTkycO/RmIgmnpHlz8zbHUfyqj8+3kQhhjs5rm7t0P&#xA;+7bYskkaFv5pIyEr4jLmFbvMZ/OH5y6h5ctvOFh5o06EXqG4g8tW1tbzokY+JIpZ3LTeoy/aHY+G&#xA;Y+TPwkBtjjt67+W/nmy86+U7TW4AIrhgYdQtB1guo6CWM1367rX9kg5kAtRFMnxQ7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8m/Oa4sLrzn+XegapPFDpF3&#xA;qNxf3oncJGzWEStCj12o7SFQD1O2RkdmUUl/OH8vYdOmuPOPlC7TTNUcU1O0Q/6PdhgWPqxg05Hr&#xA;X6eu+YuWURtzj9zbjtjdvp1/H/ziPq0zMrC/n+u28EVaQwHUYgyCvYemzfTmUBswJ9TM9e/Ib8vb&#xA;61TWPLk8mg3M0aywzWExjjkDLySqOWWhB7UzGybC7BTGRSv/AJxvF1pXmTzl5dvpHnu1ktrwXJ2E&#xA;isGRiVGwapFT3+jLsMgY7LlG73jLWp2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV89fnNqPk9/wA49KTzNYz6h5fsNLaLXOEMkkduLlnMMvKMh0o1Ksu9Olci&#xA;WceTz/z9B5A07S57jyJ5mnjhRSF003hljdGPGgif4xs21dxmICTOiNm4cn0pD5LtP+VTt5R06P0I&#xA;p9Iks4FuKErLPARzk2py9R+TUHXM1x73fPXkrS/yiuvLKL5u8zanZa3aCS2vNHmvaW6SQsyL6Sqg&#xA;YqQBsHNOmUTodN/c22U//ILU/Llh+bep6T5avhd6NqWns5aYMJDNbSAosbShXakbsSB8+gw4eKvU&#xA;jJT6Xy5qdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirTMqqW&#xA;YgKBUk7AAYq+ePzB/MDSE/MTTdb/AC71uzvtev0bR9YsZWAs5YUrJHI0z8YwQfhDgkdO1awkLZgd&#xA;7Cjp2ped/PGk6FZeVrLQ9Yt7mO/1G6s3t3RbWJgJJGaIEEVZaCpqaADKcMTd3YbZEAPr3Mlx3zt5&#xA;g0HU/wAtdWbT4PK+j+atF8zajImhtdrFFdW9xc/EtrJLKpUpWvCrfSOmQkC2A2kH5ez3Wr/nzoi6&#xA;mlhpdzp0N1JDaac6TAsIXH1cvExjHEFm27A+OVYIgWzyHZ9UZkNDsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSzzPpU2r+WtW0mCX0J9Qsri0in3+B54mjV9t/h&#xA;LVxUPjzU/wAr/wAy7SNdETyleyxw+m6kKt1Ct2nwvLDMAR6U6irxk0qa9hkKNtth7T+Rn5aa5pHm&#xA;jU/Nup6LD5ahurMWNjosMhlIVpElklerSFatEAAzV6+1TEEc2MiHtuSYPif81ItSh8++Yo/NVu17&#xA;qN1eyLpySG6WZbNnrbSWLoWgZeNFKyIelB8VaQJLbHk9H/JH8tvN93r+g+YNX0aDy/pfl9Jvq7i3&#xA;W2vNQklQxq8yVLiimpZuv7Na1DGO9olIVT6RybW7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c3e1f62c-7752-164a-b484-8bcf86992ea4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c3e1f62c-7752-164a-b484-8bcf86992ea4</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:26596d96-37df-4fbc-9705-6a00b35527e6</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3e1f62c-7752-164a-b484-8bcf86992ea4</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:29:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>43.789067</stDim:w>
            <stDim:h>43.051119</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -153.511 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 153.511 li
141.173 153.511 li
141.173 0 li
cp
clp
137.429 90.2282 mo
134.984 89.007 132.434 88.5695 129.703 89.1832 cv
128.547 89.443 127.533 89.8546 126.522 90.4528 cv
126.377 90.5387 126.213 90.6666 126.043 90.8092 cv
126.234 89.0265 126.587 87.1964 126.688 85.7599 cv
126.882 83.0294 127.101 80.3004 127.34 77.5734 cv
127.812 72.2081 128.32 66.861 129.13 61.5368 cv
129.811 57.0587 129.644 52.8317 128.714 48.3903 cv
127.886 44.4371 127.395 38.5709 124.167 35.8248 cv
123.526 35.2799 122.764 35.1237 122.028 35.2233 cv
120.46 32.3243 118.852 29.5099 117.14 26.6334 cv
115.556 23.9723 116.017 20.6813 114.086 18.319 cv
112.242 16.0626 108.918 14.5792 106.463 13.0695 cv
103.146 11.0285 99.7295 9.10999 96.1104 7.64954 cv
81.5479 1.77406 62.6768 2.83119 47.6592 6.3224 cv
33.4766 9.61976 21.2217 17.5826 14.2168 30.5607 cv
10.711 37.0548 8.52054 44.194 6.48636 51.2565 cv
4.21195 59.1564 4.33987 64.9318 6.91312 72.4996 cv
7.23734 75.9186 7.668 79.3429 7.56644 82.7794 cv
7.43167 87.3624 5.98538 91.6144 5.24027 96.0905 cv
3.85062 104.428 7.28323 112.303 10.6299 119.777 cv
16.4405 132.752 26.8867 142.149 40.1992 147.095 cv
55.2451 152.686 71.8858 152.177 87.4317 149.133 cv
94.9326 147.665 100.418 144.78 105.859 139.469 cv
108.773 136.625 111.445 135.14 114.954 133.307 cv
117.388 132.037 118.608 130.307 119.401 127.693 cv
120.063 125.513 120.417 123.192 120.902 120.964 cv
121.539 118.045 121.745 118.136 124.274 117.015 cv
127.825 115.441 131.132 113.375 134.006 110.751 cv
135.923 109.001 137.826 107 136.771 104.237 cv
136.308 103.023 135.281 102.665 134.602 101.729 cv
132.722 99.1368 135.295 97.006 137.316 95.3395 cv
138.207 94.6056 138.518 93.6378 138.443 92.7125 cv
138.761 91.8204 138.512 90.7692 137.429 90.2282 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.972549 .972549 .858824 rgb
f
33.4258 96.1364 mo
31.5284 93.7067 28.2237 90.3527 24.9356 89.7496 cv
24.5586 89.4718 24.1846 89.2282 23.8369 89.046 cv
22.2725 88.2286 19.6524 87.7711 18.2442 89.0499 cv
17.4287 89.1969 16.6602 89.5988 16.0664 90.1906 cv
15.0752 91.1793 15.1065 92.2052 14.8233 93.4386 cv
14.4034 95.2701 13.5176 96.9777 13.9082 98.8976 cv
14.5264 101.934 18.1475 104.45 20.6153 106.038 cv
23.6172 107.97 28.1114 109.15 31.6826 108.88 cv
32.2862 108.834 32.8135 108.742 33.2852 108.617 cv
35.376 108.963 37.3701 108.457 37.5 105.605 cv
37.6407 102.498 35.2549 98.4791 33.4258 96.1364 cv
cp
1 .996078 .952941 rgb
f
99.6309 87.0363 mo
95.7334 82.713 89.1289 83.3175 83.4707 84.9904 cv
83.2852 85.0382 83.1006 85.0934 82.916 85.1456 cv
71.7656 82.316 56.6631 96.8722 65.8721 107.334 cv
70.2774 112.338 78.3526 109.875 83.5703 107.919 cv
87.2705 106.531 90.3506 104.504 93.46 102.119 cv
93.6367 102.057 93.8155 101.978 93.9942 101.877 cv
100.002 98.4899 105.393 93.4274 99.6309 87.0363 cv
cp
f
47.3477 131.337 mo
46.5078 130.948 45.5283 131.022 44.6407 131.165 cv
43.5371 131.342 42.2178 131.648 42.2412 133.045 cv
42.2578 134.083 42.8907 135.099 43.9366 135.355 cv
43.9805 135.366 44.0293 135.363 44.0742 135.372 cv
44.0879 135.384 44.0967 135.398 44.1104 135.41 cv
44.8819 136.077 45.9815 136.092 46.9082 135.791 cv
47.9356 135.456 48.8223 134.672 48.7989 133.517 cv
48.7803 132.585 48.1895 131.726 47.3477 131.337 cv
cp
f
65.4092 133.144 mo
65.4395 133.01 65.459 132.876 65.4502 132.745 cv
65.3926 131.871 64.6739 131.391 63.8672 131.359 cv
61.3741 131.257 60.3789 134.756 62.1241 136.286 cv
63.125 137.162 64.6426 136.843 65.2364 135.659 cv
65.6153 134.902 65.6055 133.975 65.4092 133.144 cv
cp
f
38.5928 94.1813 mo
38.503 94.2228 38.4151 94.2706 38.3301 94.3243 cv
36.9619 93.0099 35.5225 91.8429 34.1729 90.8893 cv
30.8262 88.5255 26.8526 87.0797 23.21 85.2472 cv
20.7471 84.0084 18.0655 82.6476 15.6856 83.151 cv
15.2657 82.2516 14.3086 81.7487 13.4287 81.8258 cv
13.4346 81.6847 13.4395 81.5431 13.4453 81.4025 cv
13.4649 80.9093 13.3321 80.4996 13.1016 80.1735 cv
13.3916 80.1207 13.6719 80.0099 13.9209 79.816 cv
17.9473 76.6784 25.7549 76.0631 30.4463 78.0426 cv
34.9971 79.962 47.46 90.0543 38.5928 94.1813 cv
cp
123.393 77.5441 mo
123.762 74.3644 124.622 70.1329 123.758 67.0499 cv
123.222 65.1354 122.367 65.1964 120.995 64.3117 cv
119.344 63.2462 118.073 61.9899 115.688 61.9425 cv
113.419 61.8976 110.879 62.4996 108.472 63.1505 cv
105.228 61.6578 99.9805 63.1061 97.3662 64.1959 cv
96.2119 64.6774 95.6065 65.6027 95.4912 66.5753 cv
94.1533 66.9323 92.8145 67.2872 91.4766 67.6427 cv
90.6563 66.4562 88.8906 65.9083 87.6446 67.3248 cv
86.5576 68.5612 86.6289 69.7584 87.2608 71.1705 cv
87.4463 71.5861 87.7246 71.9415 88.042 72.2755 cv
88.3467 72.9586 88.8623 73.5187 89.5606 73.7687 cv
89.9746 74.2223 90.334 74.7282 90.5205 75.3751 cv
90.6807 75.9323 90.7158 76.5392 90.75 77.1495 cv
81.4395 77.5333 72.7129 82.3951 65.2237 87.6022 cv
62.9658 89.1725 59.7266 90.9552 57.7803 93.337 cv
57.1182 91.7872 56.333 90.2721 55.4512 88.7785 cv
58.0616 84.7975 63.8506 81.5402 67.6494 79.192 cv
71.8946 76.569 76.2666 74.0968 80.5742 71.5802 cv
82.3555 70.5397 81.1367 68.0353 79.3584 68.0368 cv
73.46 68.0397 67.7012 68.6769 61.9239 69.8517 cv
55.3467 71.1881 48.6944 72.7267 42.0039 71.2286 cv
37.4395 70.2062 33.3389 69.3839 28.6416 69.2247 cv
25.7754 69.1281 22.8828 68.9005 20.0166 69.0988 cv
19.4209 69.1403 15.6075 70.088 14.2334 70.1657 cv
14.2168 69.9284 14.21 69.6935 14.1875 69.4537 cv
13.9307 66.6676 9.9639 66.3976 9.30862 69.1198 cv
9.11624 69.9196 8.95804 70.7179 8.81741 71.5158 cv
8.58694 72.3038 8.47269 73.067 8.47659 73.8195 cv
8.12698 76.8297 8.13187 79.8463 8.5098 82.9264 cv
8.53519 83.1368 8.59378 83.3283 8.66605 83.5104 cv
8.63773 84.6774 8.61038 85.8444 8.58109 87.0114 cv
7.36136 90.9054 7.49905 94.6588 8.47562 98.4591 cv
8.04105 99.0299 7.64261 99.6417 7.39163 100.3 cv
6.94925 101.463 7.00687 102.911 7.3848 104.088 cv
7.9014 105.694 9.77347 106.072 11.0274 105.363 cv
12.2598 107.747 16.209 106.432 15.1436 103.796 cv
14.8565 103.087 14.4629 102.37 14.0889 101.651 cv
13.7315 100.878 13.4102 100.107 13.1289 99.3375 cv
12.5869 97.2614 12.918 94.8981 13 92.7985 cv
13.0303 92.0104 13.0616 91.2218 13.0928 90.4332 cv
13.919 90.2936 14.6992 89.7326 14.9043 88.8536 cv
15.2227 88.7379 15.5117 88.5485 15.7237 88.2545 cv
18.9844 83.7301 28.0918 90.2033 31.4756 92.2682 cv
33.0196 93.2101 35.1035 94.9923 36.959 97.1466 cv
37.0528 97.5953 37.3067 98.0148 37.7842 98.3375 cv
37.8692 98.3942 37.9492 98.4279 38.0332 98.4801 cv
39.4248 100.313 40.5742 102.321 41.0782 104.272 cv
40.9278 104.334 40.7793 104.408 40.6387 104.514 cv
39.2285 105.568 38.2041 107.084 37.3311 108.598 cv
36.6494 109.252 36.2754 110.124 36.6084 111.083 cv
36.9248 111.99 37.9209 112.717 38.9033 112.601 cv
39.6817 112.509 40.3291 112.248 40.9014 111.878 cv
41.4668 112.272 42.2256 112.293 42.7813 111.547 cv
42.7891 111.537 42.794 111.527 42.8008 111.517 cv
49.2344 112.024 56.3584 111.657 62.711 111.082 cv
64.6406 110.907 66.1016 108.533 64.7832 106.845 cv
61.8926 103.142 60.084 98.923 62.6817 94.4909 cv
64.7119 91.0275 68.668 88.2785 72.1641 86.548 cv
79.0274 83.1515 85.8438 82.5875 93.2793 81.7535 cv
94.6709 82.7018 96.3682 83.3659 97.6944 84.1813 cv
99.2832 85.1588 101.5 86.3175 102.613 87.8444 cv
103.199 88.6481 103.522 89.4669 103.669 90.2921 cv
103.075 91.5397 102.546 92.8234 102.266 94.2736 cv
102.154 94.8493 102.24 95.4767 102.478 96.0421 cv
102.11 96.84 101.712 97.6237 101.343 98.3815 cv
100.496 100.121 102.44 101.436 103.944 100.66 cv
106.01 99.5929 108.287 99.8956 110.46 99.401 cv
112.165 99.0128 114.01 98.1505 115.616 97.299 cv
115.875 97.4244 116.142 97.5304 116.408 97.591 cv
117.122 97.754 118 97.838 118.691 97.5973 cv
119.683 97.2526 120.401 96.2184 120.621 95.2096 cv
120.83 94.2482 120.579 93.4191 120.025 92.6876 cv
120.128 92.4269 120.228 92.1549 120.323 91.8663 cv
121.867 87.2599 122.831 82.3634 123.393 77.5441 cv
cp
.572549 .780392 .741176 rgb
f
54.0625 137.944 mo
51.1739 137.955 48.2842 137.946 45.3955 137.994 cv
43.2871 138.028 40.0147 138.523 37.5498 137.922 cv
38.291 137.287 38.917 136.574 38.8936 135.54 cv
39.9698 135.348 40.9258 134.306 40.5967 132.876 cv
40.2412 131.33 45.9317 129.651 47.1436 129.455 cv
47.6328 129.446 48.0557 129.449 48.3477 129.454 cv
48.3887 129.455 48.4746 129.455 48.5918 129.457 cv
50.3799 129.883 49.8653 132.214 50.4893 134.277 cv
51.2061 136.65 53.5908 137.354 55.1367 136.042 cv
56.0078 136.961 57.6553 136.312 57.9668 135.13 cv
58.459 133.261 59.5742 131.208 61.3379 130.227 cv
63.2129 129.183 65.2334 130.087 67.2364 130.478 cv
68.0606 132.17 68.7764 133.646 68.6045 135.947 cv
68.5215 137.05 69.2354 137.824 70.0645 138.102 cv
64.9854 137.119 59.1221 137.925 54.0625 137.944 cv
cp
112.814 113.815 mo
106.748 117.549 100.222 121.705 93.0977 122.88 cv
86.375 123.988 79.3906 124.173 72.6074 123.675 cv
71.9063 123.624 71.168 123.813 70.5674 124.181 cv
69.6319 123.726 68.5576 123.599 67.6172 123.965 cv
67.5391 123.968 67.4639 123.965 67.3819 123.976 cv
63.9571 124.411 59.8086 124.491 57.2647 127.148 cv
57.2617 127.151 57.2578 127.155 57.2549 127.158 cv
56.9483 126.554 56.5137 125.989 55.9024 125.493 cv
54.9629 124.73 53.9043 124.772 52.8848 125.305 cv
52.8223 125.338 52.7705 125.371 52.7139 125.404 cv
51.5498 125.139 50.3047 125.033 49.0489 125.034 cv
48.7442 125.02 48.4356 125.026 48.1221 125.056 cv
46.6866 125.111 45.2647 125.276 43.9727 125.479 cv
42.6426 125.688 41.25 126.119 40.0196 126.761 cv
38.9532 125.836 37.2344 125.584 35.9073 126.861 cv
35.8008 126.963 35.6934 127.052 35.586 127.145 cv
35.4922 127.079 35.4073 127.006 35.3086 126.944 cv
32.6162 125.236 29.1182 124.264 26.1162 123.221 cv
23.6153 122.352 20.2491 121.248 17.6621 122.377 cv
16.8291 122.74 15.9102 123.473 15.8291 124.47 cv
15.5801 127.51 17.4805 129.672 19.5684 131.664 cv
22.5684 134.527 25.9229 137.318 29.5879 139.292 cv
30.6797 139.881 31.6172 140.227 32.5 140.321 cv
34.4424 144.313 42.0401 143.589 45.7725 143.679 cv
50.2451 143.788 54.7227 143.79 59.1963 143.837 cv
63.0264 143.877 67.0508 144.313 70.8194 143.549 cv
71.166 143.745 71.5791 143.875 72.0547 143.904 cv
79.1582 144.332 84.3389 140.387 89.9531 136.632 cv
93.0801 134.54 96.3887 133.098 99.8692 131.699 cv
103.348 130.3 109.361 126.351 113.111 127.383 cv
114.505 127.767 116.297 126.357 116.015 124.851 cv
115.46 121.891 115.954 119.248 116.627 116.363 cv
117.138 114.171 114.586 112.725 112.814 113.815 cv
cp
f
135.298 91.4391 mo
134.46 91.2496 133.714 91.1935 133.04 91.2423 cv
131.328 90.254 129.166 90.8693 127.912 92.777 cv
126.088 95.5543 125.523 99.3566 125.507 102.877 cv
125.423 103.007 125.346 103.151 125.282 103.316 cv
123.771 106.827 122.579 110.467 121.147 114.012 cv
120.196 116.367 122.141 118.358 124.507 117.831 cv
125.652 117.575 126.552 117.131 127.325 116.518 cv
128.174 116.711 129.111 116.459 129.887 115.495 cv
132.079 112.769 136.385 110.053 137.29 106.569 cv
138.454 102.091 132.933 100.459 136.867 96.1056 cv
138.333 94.4835 137.351 91.9044 135.298 91.4391 cv
cp
f
28.2491 78.7531 mo
27.8858 78.6632 27.5186 78.7296 27.1914 78.8932 cv
24.2735 77.9132 21.1944 77.4572 18.2256 78.5211 cv
16.7793 79.0387 16.9532 81.1334 18.4209 81.4752 cv
22.0284 82.3141 25.7451 83.0016 28.9034 85.0656 cv
31.3809 86.6852 33.1407 89.2526 35.7354 90.673 cv
36.5215 91.1032 37.5186 90.9806 38.2491 90.5065 cv
44.6895 86.3263 31.5 79.5543 28.2491 78.7531 cv
cp
.447059 .670588 .647059 rgb
f
54.9824 102.959 mo
54.4854 102.991 54.5362 103.763 55.0332 103.731 cv
55.5293 103.697 55.4795 102.926 54.9824 102.959 cv
cp
f
41.3018 109.883 mo
42.167 109.568 42.9141 109.201 43.2715 108.476 cv
44.4746 107.986 45.628 108.016 46.5596 109.613 cv
46.6211 109.718 46.6709 109.817 46.7217 109.917 cv
44.8057 110.093 42.3653 110.238 41.3018 109.883 cv
cp
65.9932 88.2492 mo
64.6397 88.3937 63.5557 89.3893 62.6768 90.423 cv
62.4278 90.3493 62.1387 90.3805 61.8916 90.5997 cv
59.6387 92.5983 57.0176 95.3243 56.8946 98.5475 cv
56.8594 99.4586 57.0967 100.308 57.46 101.138 cv
57.4912 101.21 57.5928 101.391 57.7324 101.634 cv
57.5332 101.803 57.4073 102.042 57.4698 102.353 cv
57.7285 103.649 58.1006 104.933 58.6123 106.156 cv
58.3272 105.881 58.0489 105.609 57.8076 105.345 cv
57.1231 104.593 55.8262 105.731 56.4658 106.529 cv
56.7422 107.034 57.0879 107.457 57.4883 107.816 cv
56.4991 107.892 55.2862 107.844 55.0059 107.88 cv
53.8877 108.022 52.8194 108.286 51.7393 108.593 cv
51.2823 108.723 51.0821 109.107 51.0723 109.505 cv
50.4307 109.562 49.7891 109.622 49.1485 109.673 cv
49.001 109.685 48.7725 109.709 48.4844 109.739 cv
47.5088 108.544 46.8047 107.105 45.1944 106.627 cv
44.5528 106.437 43.9629 106.443 43.4043 106.568 cv
43.3194 106.15 43.1631 105.738 42.9678 105.333 cv
43.3614 103.872 43.252 102.766 42.1612 101.401 cv
41.1201 100.1 39.6241 98.9562 38.294 97.7555 cv
38.2051 97.6124 38.1172 97.4694 38.0283 97.3263 cv
37.8731 97.0743 37.6582 96.9581 37.4366 96.9357 cv
37.2774 96.7745 37.1182 96.6134 36.9707 96.4484 cv
35.7481 95.0778 35.9024 95.0519 34.4024 94.0997 cv
34.0713 93.8898 33.6475 94.2316 33.6739 94.5841 cv
33.8623 97.0934 35.3145 98.8112 37.0576 100.563 cv
37.6563 101.164 38.3867 101.689 39.0157 102.289 cv
39.8369 103.612 li
39.958 103.806 40.1143 104.023 40.2823 104.253 cv
40.3242 104.407 40.3711 104.559 40.3916 104.729 cv
40.5391 105.953 39.5752 107.701 38.9629 109.131 cv
38.8203 109.269 38.7598 109.442 38.7657 109.625 cv
38.7217 109.742 38.6729 109.863 38.6367 109.974 cv
38.5235 110.33 38.8389 110.714 39.1719 110.785 cv
41.3155 111.244 42.9824 112.166 45.1807 112.341 cv
47.1856 112.501 49.2373 112.496 51.2412 112.347 cv
53.918 112.149 58.0323 112.271 60.3955 110.923 cv
60.6035 110.804 60.7364 110.61 60.8174 110.394 cv
60.9746 110.321 61.1094 110.224 61.2451 110.128 cv
61.2754 110.153 61.3028 110.183 61.334 110.207 cv
61.5596 110.381 61.8184 110.541 62.0645 110.683 cv
62.1797 110.944 62.2979 111.203 62.4073 111.468 cv
62.9951 112.885 64.8379 112.674 65.2715 111.278 cv
65.7412 109.767 65.1914 108.767 63.7647 108.268 cv
63.7549 108.265 63.7471 108.261 63.7373 108.257 cv
63.4746 107.872 63.2158 107.482 62.958 107.088 cv
63.2588 106.284 63.1309 105.324 62.5899 104.268 cv
61.6651 102.463 60.0869 101.5 59.6631 99.4244 cv
59.4981 98.6134 59.5723 97.7872 59.7969 96.9718 cv
60.2783 97.3117 60.9971 97.2999 61.3096 96.6071 cv
62.0157 95.0402 62.8858 93.5875 63.9737 92.255 cv
64.8789 91.1476 66.0244 90.173 66.459 88.7828 cv
66.544 88.5099 66.2598 88.2203 65.9932 88.2492 cv
cp
f
33.1123 93.0534 mo
33.0489 93.0573 33.0547 93.1574 33.1192 93.153 cv
33.1836 93.1486 33.1768 93.049 33.1123 93.0534 cv
cp
f
103.279 78.9147 mo
100.901 77.048 97.6905 76.9899 94.8076 77.0919 cv
86.1328 77.3991 78.2754 80.5045 71.2344 85.4987 cv
70.7061 85.8732 71.2588 86.6959 71.7998 86.3331 cv
77.9473 82.2072 85.0567 79.8693 92.4619 79.4493 cv
97.7012 79.1525 100.625 80.1232 103.814 84.3566 cv
104.996 85.9254 105.257 86.7911 107.138 87.5861 cv
107.379 87.6881 107.684 87.4713 107.578 87.1989 cv
106.537 84.4972 105.625 80.7555 103.279 78.9147 cv
cp
f
125.911 69.7565 mo
126.235 68.59 125.901 67.2243 124.607 66.5836 cv
124.025 66.275 123.497 64.5324 122.984 63.965 cv
122.11 62.9987 121.016 62.2355 119.77 61.837 cv
118.063 61.2916 116.64 61.3483 115.521 62.3112 cv
115.329 62.2321 115.143 62.1456 114.95 62.0675 cv
113.958 61.6666 113.047 61.8864 112.374 62.4049 cv
111.474 61.7526 110.625 61.2701 109.11 61.0187 cv
106.888 60.65 104.73 60.9894 102.583 61.5792 cv
102.431 61.6212 100.291 62.049 100.466 62.3024 cv
100.048 62.1032 99.6475 61.6847 99.1739 61.5714 cv
97.5283 61.1779 96.2539 62.0065 95.1729 63.1393 cv
94.7647 63.5665 94.5967 64.2179 94.6612 64.8366 cv
94.4287 64.8903 94.1963 64.9381 93.9639 64.9957 cv
91.0322 65.7223 86.6104 67.0656 86.46 70.2072 cv
86.3701 70.5177 86.3369 70.8366 86.3574 71.1603 cv
85.6817 71.1744 85.0069 71.2399 84.334 71.3424 cv
84.6758 71.1945 85.0166 70.9855 85.3555 70.6867 cv
86.3242 69.8317 86.3701 68.4279 85.1602 67.7413 cv
82.1895 66.0558 78.0762 66.879 74.3809 67.7887 cv
73.6172 67.8229 72.8867 67.9059 72.1612 68.0568 cv
67.7158 68.4664 63.336 69.2057 58.9893 70.2462 cv
58.8985 70.2653 58.8086 70.2828 58.7188 70.3029 cv
55.0137 70.4655 51.253 70.3341 47.5078 70.13 cv
46.7324 70.0724 45.958 70.0289 45.1836 69.9972 cv
41.8574 69.7975 38.5547 69.5778 35.3262 69.4948 cv
34.7295 69.4791 34.3369 69.8698 34.166 70.359 cv
32.9571 70.1471 31.7266 69.9992 30.4932 69.8903 cv
30.4922 69.8893 30.4922 69.8883 30.4903 69.8878 cv
27.9912 68.736 24.0049 67.7726 21.2354 68.9952 cv
21.0987 68.9039 20.9463 68.8224 20.7715 68.7565 cv
18.0625 67.7296 15.7969 67.6378 13.0264 68.1378 cv
12.7412 68.1183 12.4659 68.1891 12.2149 68.3268 cv
12.0098 68.4103 11.834 68.526 11.6817 68.6593 cv
11.3438 68.6276 11.0069 68.6046 10.668 68.5656 cv
8.99026 68.3722 7.54495 70.5016 9.0928 71.7369 cv
12.5381 74.4869 18.0489 73.7892 22.0215 72.4591 cv
22.3838 72.9318 22.9561 73.2726 23.6241 73.3048 cv
29.1856 73.5734 34.5557 75.2394 40.0567 75.4723 cv
40.9043 75.5079 41.3994 74.8688 41.5117 74.1491 cv
42.5088 74.5265 43.5176 74.8673 44.5791 75.0543 cv
46.2735 75.3532 48.2539 74.8868 50.1475 74.6251 cv
51.6866 74.7511 53.2266 74.8805 54.7666 75.0338 cv
54.7657 75.0231 li
55.583 75.193 56.2383 74.8263 56.6387 74.2633 cv
56.7949 74.2877 56.961 74.2951 57.1426 74.2638 cv
57.5117 74.2003 57.8819 74.1491 58.252 74.0875 cv
61.211 74.0778 64.1621 73.838 66.8809 72.9596 cv
67.0117 72.9171 67.1299 72.8639 67.2373 72.8038 cv
68.0586 72.7052 68.8809 72.6183 69.7031 72.5285 cv
69.9072 72.567 70.1338 72.5719 70.3887 72.5245 cv
70.6563 72.4743 70.9287 72.4196 71.2041 72.361 cv
71.4239 72.3385 71.6436 72.3209 71.8643 72.2994 cv
71.294 72.7399 70.7393 73.1993 70.1914 73.6671 cv
65.3125 75.6022 60.8301 78.9279 56.4317 81.7155 cv
55.3467 82.403 56.459 84.0377 57.5489 83.3654 cv
61.6446 80.839 66.2354 78.6598 70.1494 75.7955 cv
71.8028 74.8634 73.4102 73.858 75.0108 72.839 cv
75.2754 72.9357 75.5928 72.9347 75.96 72.7731 cv
76.7412 72.4288 li
77.0508 72.2921 77.2705 72.0875 77.4121 71.8502 cv
79.3311 70.8893 81.1074 71.6613 82.8194 71.6412 cv
78.9824 72.5553 75.2559 74.6134 71.9317 76.4235 cv
67.1436 79.0299 61.8282 81.57 58.0596 85.591 cv
56.0215 87.7658 58.6582 89.3947 60.5274 89.1232 cv
60.5205 89.1559 60.5147 89.1891 60.5078 89.2218 cv
60.6582 89.1578 60.8047 89.0851 60.9541 89.0192 cv
61.084 88.9752 61.2071 88.9205 61.3194 88.8532 cv
65.5889 86.9157 69.5899 84.2238 73.6826 81.9513 cv
78.5215 79.2643 83.7647 77.921 88.6192 75.4611 cv
89.1787 75.1779 89.4951 74.7853 89.6328 74.3527 cv
91.2334 74.3038 92.7578 72.8751 92.4004 71.1398 cv
92.5117 71.1535 92.6328 71.1393 92.7627 71.0983 cv
93.5625 71.2814 95.0147 70.4367 95.7871 70.2306 cv
96.9678 69.9157 98.0762 69.7135 99.1875 69.5885 cv
100.517 69.5743 101.847 69.6144 103.173 69.4752 cv
103.433 69.4479 103.692 69.442 103.952 69.4274 cv
104.248 69.4196 104.54 69.4054 104.83 69.3883 cv
107.329 69.3571 109.819 69.7252 112.277 69.6832 cv
112.206 70.6671 112.413 71.6583 113.004 72.4967 cv
113.426 73.0968 114.099 73.6183 114.819 73.797 cv
115.064 73.8576 115.333 73.8644 115.598 73.859 cv
115.566 73.9694 115.537 74.0812 115.526 74.2013 cv
115.438 75.1701 116.838 75.8742 117.283 74.8087 cv
117.197 74.7672 li
117.943 75.1334 118.658 74.6661 118.888 73.945 cv
119.018 73.5387 118.998 73.1686 118.889 72.8302 cv
119.039 72.8883 119.186 72.9513 119.343 72.9977 cv
119.353 73.1149 119.37 73.2291 119.397 73.3405 cv
118.682 74.1818 118.594 74.9445 118.531 76.2208 cv
118.526 76.3302 118.532 76.4352 118.542 76.5382 cv
118.106 77.7096 117.641 78.8619 117.476 80.1666 cv
117.193 82.4005 116.677 84.2877 116.137 86.5099 cv
116.122 86.5729 116.118 86.6354 116.109 86.6979 cv
114.988 87.7916 113.893 88.9108 112.849 90.0846 cv
112.272 90.7316 112.105 91.4181 112.205 92.0431 cv
112.034 92.2653 111.858 92.4835 111.688 92.7062 cv
111.31 93.2023 111.148 93.7477 111.141 94.2799 cv
111.079 94.297 111.016 94.3126 110.953 94.3287 cv
110.722 94.2682 110.482 94.2335 110.229 94.2623 cv
109.82 93.8981 109.281 93.691 108.637 93.7726 cv
108.114 93.8751 107.587 93.8927 107.058 93.8605 cv
106.936 93.8278 106.809 93.8092 106.68 93.797 cv
107.24 93.066 107.752 92.3097 108.147 91.5045 cv
108.481 90.8214 107.673 90.1061 107.038 90.5333 cv
106.438 90.9371 105.881 91.4157 105.346 91.9284 cv
105.51 90.8473 105.539 89.7477 105.348 88.6251 cv
105.168 87.5734 104.829 86.4264 104.215 85.568 cv
104.223 85.1427 104.023 84.7218 103.517 84.4826 cv
101.965 83.7506 li
101.692 83.6217 101.433 83.5949 101.196 83.6373 cv
101.082 83.4806 100.961 83.3234 100.851 83.1666 cv
100.235 82.2916 98.8574 83.2174 99.4727 84.0997 cv
99.5537 84.2164 99.7979 84.5455 100.116 84.9786 cv
100.109 85.402 100.31 85.82 100.813 86.0577 cv
100.947 86.1207 li
101.015 86.215 101.082 86.3087 101.15 86.4044 cv
101.485 87.7374 101.938 88.9811 102.562 90.2282 cv
102.662 90.4288 102.807 90.5792 102.966 90.6969 cv
102.938 90.9801 102.902 91.2623 102.856 91.5426 cv
102.589 93.1603 102.001 94.7179 101.425 96.2443 cv
101.304 96.5636 101.323 96.8908 101.431 97.1808 cv
99.9405 97.3292 98.6367 99.2116 99.6514 100.751 cv
101.129 102.996 103.32 102.42 105.433 101.432 cv
107.068 100.666 108.912 100.35 110.477 99.5368 cv
110.617 99.464 110.75 99.3536 110.88 99.2345 cv
111.039 99.2775 111.204 99.3034 111.379 99.2741 cv
112.686 99.0592 113.764 98.736 114.724 98.2706 cv
114.888 98.3693 115.056 98.4557 115.225 98.5138 cv
117.459 99.2824 119.202 96.8864 120.672 95.5817 cv
121.625 94.735 121.461 93.6325 120.81 92.837 cv
121.005 91.9083 120.767 90.8541 120.059 90.2814 cv
120.164 90.1442 120.272 90.0079 120.376 89.8707 cv
120.716 89.4303 120.888 88.9791 120.947 88.5426 cv
121.049 88.4288 121.15 88.3151 121.253 88.2018 cv
121.646 87.8981 122.026 87.5783 122.432 87.2902 cv
123.852 86.1691 123.555 84.3878 122.538 83.4757 cv
122.666 83.0114 122.762 82.5182 122.806 81.9684 cv
122.945 80.2291 123.398 78.778 123.818 77.2404 cv
125.16 76.108 126.079 74.7941 126.723 72.9562 cv
127.175 71.6671 126.785 70.4279 125.911 69.7565 cv
cp
f
12.3604 98.9938 mo
12.3067 98.651 11.8184 98.4865 11.6504 98.8512 cv
10.5996 101.136 10.7071 103.465 10.8291 105.937 cv
10.877 106.899 12.2842 106.776 12.3018 105.839 cv
12.3487 103.52 12.7227 101.3 12.3604 98.9938 cv
cp
f
32.8282 126.049 mo
30.4473 122.876 26.1065 121.807 22.3125 121.671 cv
19.9873 121.587 18.668 122.019 17.8535 123.166 cv
17.0625 123.089 16.2666 123.077 15.4629 123.169 cv
13.96 123.339 13.3233 125.15 14.4375 126.199 cv
15.5235 127.222 16.6143 127.827 18.0371 128.262 cv
18.8946 128.525 19.6797 127.859 19.9092 127.076 cv
20.5889 127.261 21.2715 127.469 21.9717 127.658 cv
24.045 128.22 26.1612 128.559 28.2852 128.87 cv
28.6289 128.92 28.9668 128.847 29.2696 128.698 cv
30.3282 129.548 31.8057 128.058 31.2051 126.957 cv
31.5049 127.017 31.8008 127.091 32.1045 127.132 cv
32.6719 127.209 33.2217 126.572 32.8282 126.049 cv
cp
f
66.1074 124.515 mo
62.8809 126.202 61.2949 121.912 58.1436 124.226 cv
56.9756 125.083 56.1817 126.268 55.7168 127.575 cv
54.6407 126.653 53.4473 125.833 53.3457 126.579 cv
53.4571 125.769 52.8731 124.928 51.9805 125.013 cv
51.2979 125.079 49.6866 123.692 48.7344 123.627 cv
47.6221 123.552 46.4287 123.83 45.251 124.202 cv
44.5811 124.323 43.9532 124.497 43.3389 124.718 cv
42.5293 124.493 41.7012 124.526 40.8399 124.552 cv
39.6866 124.588 38.5323 124.624 37.378 124.66 cv
36.5547 124.685 36.2071 125.369 36.2832 126.009 cv
34.503 126.335 34.7461 129.095 36.6582 129.042 cv
38.669 128.985 40.5635 128.766 42.4434 128.41 cv
42.585 128.406 42.7295 128.388 42.878 128.338 cv
42.9317 128.319 42.9805 128.304 43.0332 128.286 cv
43.9385 128.099 44.8487 127.875 45.7627 127.616 cv
47.0157 127.461 48.1573 127.565 50.2481 127.612 cv
50.628 127.621 50.875 127.653 51.1114 127.673 cv
51.9698 129.137 54.2881 129.424 55.6426 130.856 cv
56.2461 131.494 57.5664 131.067 57.6524 130.18 cv
58.1367 125.201 61.4639 128.462 63.7051 128.523 cv
65.461 128.571 66.7276 127.77 67.876 126.519 cv
68.9844 125.311 67.3819 123.848 66.1074 124.515 cv
cp
f
117.265 115.876 mo
116.943 114.96 li
116.198 112.837 113.578 113.005 112.499 114.676 cv
112.283 115.009 112.121 115.338 111.982 115.666 cv
111.901 115.684 111.821 115.699 111.737 115.729 cv
107.252 117.347 102.789 119.026 98.3194 120.687 cv
97.4893 120.907 97.1944 121.589 97.2705 122.261 cv
93.627 123.398 89.9141 124.344 86.1914 125.207 cv
86.1358 125.058 86.043 124.921 85.9033 124.814 cv
84.1309 123.462 81.9932 123.801 79.8408 123.82 cv
77.0303 123.847 74.2227 123.958 71.417 124.127 cv
69.1739 124.262 69.4024 127.752 71.6485 127.612 cv
74.2735 127.448 76.9004 127.335 79.5303 127.297 cv
79.2627 128.164 79.8487 129.386 80.9414 129.241 cv
88.9365 128.18 100.366 127.691 107.12 122.519 cv
107.591 122.713 108.148 122.693 108.701 122.3 cv
109.675 121.606 110.658 120.927 111.638 120.244 cv
111.76 120.898 112.206 122.119 112.045 122.617 cv
111.673 123.776 108.285 125.664 107.468 126.052 cv
106.944 126.299 107.051 127.089 107.676 127.076 cv
110.814 127.009 113.183 128.565 115.553 125.47 cv
117.318 123.164 116.766 120.635 116.837 118.059 cv
117.345 117.484 117.509 116.57 117.265 115.876 cv
cp
f
102.307 128.068 mo
96.8614 131.15 90.8819 131.914 85.7178 135.638 cv
83.083 137.538 80.2324 138.543 77.336 139.394 cv
77.2989 139.107 77.0928 138.853 76.7432 138.915 cv
66.4844 140.749 56.0303 140.345 45.6866 141.339 cv
44.4698 141.456 44.6377 143.143 45.8096 143.195 cv
50.4043 143.401 55.0381 143.095 59.6485 143.136 cv
60.1651 143.141 60.4053 142.759 60.4092 142.357 cv
63.5557 142.299 66.6924 142.18 69.793 141.751 cv
68.961 142.084 68.1358 142.454 67.3242 142.888 cv
66.9414 143.092 67.2237 143.608 67.5742 143.615 cv
73.1348 143.74 81.2637 142.272 85.8487 138.985 cv
89.0928 136.66 91.5254 134.718 95.3721 133.4 cv
98.2383 132.418 100.962 131.489 103.582 129.951 cv
104.849 129.207 103.571 127.352 102.307 128.068 cv
cp
f
64.458 142.423 mo
64.1778 142.386 63.8975 142.349 63.6162 142.312 cv
63.5528 142.304 63.5323 142.402 63.5967 142.41 cv
63.877 142.447 64.1572 142.485 64.4385 142.522 cv
64.502 142.53 64.5225 142.432 64.458 142.423 cv
cp
f
136.99 94.9005 mo
136.876 94.4694 136.546 94.007 136.121 93.5963 cv
136.066 93.2794 135.913 92.9796 135.667 92.7501 cv
135.537 92.6285 135.386 92.5436 135.227 92.4694 cv
135.035 92.2169 134.796 92.0343 134.47 91.9528 cv
133.892 91.8082 133.271 91.9826 132.861 92.3864 cv
132.69 91.4313 131.539 90.88 130.604 91.1105 cv
129.782 91.3131 129.344 91.3453 128.734 91.7931 cv
127.945 92.3727 127.853 93.2804 128.24 93.9743 cv
127.69 93.6788 126.904 93.8307 126.737 94.6359 cv
125.579 100.226 123.798 106.397 124.053 112.133 cv
124.082 112.794 125.096 113.04 125.361 112.396 cv
127.547 107.085 127.973 100.703 128.781 95.0563 cv
128.812 94.8458 128.773 94.6676 128.71 94.506 cv
128.893 94.651 129.097 94.7775 129.342 94.8522 cv
129.403 94.8707 129.464 94.8888 129.523 94.9074 cv
129.7 94.9611 129.866 94.9713 130.026 94.9625 cv
130.298 95.4098 130.676 95.7579 131.169 95.9391 cv
130.604 96.5192 130.106 97.1784 129.8 97.548 cv
129.17 98.3092 129.066 99.7633 129.988 100.39 cv
131.454 101.387 132.24 103.542 131.601 105.241 cv
131.307 106.026 131.431 106.753 131.785 107.299 cv
131.614 107.797 131.36 108.257 131.052 108.691 cv
131.188 108.072 131.193 107.403 131.146 106.818 cv
131.032 105.406 128.85 105.547 128.948 106.964 cv
128.971 107.298 128.979 107.628 128.931 107.96 cv
128.872 108.366 128.742 108.739 128.78 109.154 cv
128.827 109.66 129.268 110.042 129.734 110.112 cv
127.578 111.978 124.388 113.255 122.271 114.582 cv
121.162 115.276 121.79 117.187 123.112 117.032 cv
123.903 117.174 124.693 117.317 125.485 117.458 cv
126.38 117.894 127.325 117.351 127.574 116.443 cv
127.646 115.962 127.76 115.504 127.916 115.07 cv
132.267 113.131 136.522 110.526 136.313 105.349 cv
136.301 105.049 136.226 104.784 136.111 104.549 cv
136.558 102.185 136.096 100.493 134.479 98.8702 cv
135.947 97.9108 137.536 96.9616 136.99 94.9005 cv
cp
f
113.553 121.885 mo
113.504 122.183 113.468 122.485 113.45 122.794 cv
113.237 122.74 113.033 122.711 112.839 122.719 cv
113.069 122.433 113.312 122.157 113.553 121.885 cv
cp
117.267 115.501 mo
116.918 114.229 117.665 112.662 116.876 111.524 cv
116.298 110.689 115.207 110.71 114.524 111.378 cv
114.339 111.558 li
113.688 112.195 114.033 113.255 114.728 113.667 cv
114.699 113.73 114.671 113.8 114.645 113.88 cv
114.47 113.328 113.938 112.914 113.217 113.163 cv
111.783 113.66 110.375 114.303 109.157 115.216 cv
108.13 115.987 106.892 116.735 106.215 117.842 cv
105.956 118.266 106.38 118.722 106.801 118.722 cv
108.081 118.721 109.461 117.988 110.641 117.51 cv
111.407 117.2 112.128 116.784 112.816 116.318 cv
112.862 116.399 112.922 116.472 112.98 116.546 cv
111.071 117.275 109.185 118.216 107.328 119.174 cv
107.208 118.963 106.986 118.809 106.643 118.825 cv
105.029 118.903 102.918 119.045 101.205 119.726 cv
101.086 119.703 100.957 119.7 100.813 119.749 cv
97.8223 120.759 94.793 121.663 91.7188 122.382 cv
89.7071 122.854 87.4199 122.892 85.4805 123.692 cv
85.3125 123.468 85.0645 123.3 84.7246 123.277 cv
82.877 123.156 81.0371 122.883 79.1963 122.662 cv
79.3848 122.153 79.0674 121.45 78.4033 121.523 cv
75.3399 121.86 72.2901 122.277 69.2324 122.646 cv
69.0889 122.615 68.9278 122.61 68.7481 122.644 cv
68.4102 122.706 68.0733 122.768 67.7354 122.83 cv
67.3379 122.903 67.0459 123.115 66.8574 123.387 cv
65.1856 124.06 63.416 124.726 62.3662 126.09 cv
61.9385 126.118 61.5108 126.146 61.0821 126.161 cv
60.8516 126.17 60.6221 126.176 60.3916 126.185 cv
60.4287 125.838 60.2705 125.463 59.8389 125.35 cv
59.669 125.306 59.4991 125.261 59.3291 125.217 cv
59.0166 125.135 58.7842 125.253 58.6358 125.443 cv
58.5918 124.969 58.3135 124.535 57.7393 124.463 cv
55.7949 124.219 54.2217 124.194 52.4512 124.619 cv
51.2989 124.291 50.208 124.432 48.9737 124.495 cv
47.041 124.593 45.0977 124.36 43.2891 125.094 cv
42.9248 125.241 42.7969 125.855 43.2295 126.021 cv
44.5244 126.517 45.9014 126.53 47.2862 126.485 cv
47.0244 126.9 47.1407 127.619 47.7276 127.675 cv
56.3321 128.498 66.1123 127.834 74.4248 125.493 cv
74.7041 125.415 74.5938 125.012 74.3281 125.015 cv
72.4151 125.035 70.503 125.226 68.586 125.447 cv
68.7461 125.37 68.9072 125.292 69.0655 125.221 cv
71.2813 124.903 73.4434 124.513 75.5908 123.985 cv
75.6768 124.045 75.7735 124.095 75.8848 124.127 cv
78.7246 124.939 81.917 125.026 84.8535 125.218 cv
85.0655 125.233 85.2217 125.173 85.3555 125.089 cv
87.4112 125.406 89.6699 124.516 91.6338 124.05 cv
94.2256 123.434 96.7696 122.715 99.294 121.892 cv
99.4024 121.973 99.5332 122.029 99.6778 122.038 cv
100.785 122.104 101.867 121.638 102.917 121.327 cv
102.997 121.303 103.079 121.283 103.159 121.26 cv
103.054 121.308 102.948 121.362 102.844 121.41 cv
102.236 121.685 102.54 122.641 103.19 122.406 cv
106.026 121.382 109.288 120.357 112.196 118.92 cv
111.934 119.215 111.679 119.519 111.435 119.833 cv
111.071 120.302 111.158 120.955 111.494 121.367 cv
110.707 122.244 109.997 123.175 109.18 124.106 cv
108.645 124.717 108.872 125.622 109.553 126 cv
110.106 126.307 110.514 126.431 111.155 126.317 cv
111.458 126.286 111.738 126.19 111.997 126.026 cv
112.195 125.975 112.31 125.877 112.384 125.756 cv
112.465 125.908 112.577 126.036 112.703 126.148 cv
111.978 126.608 111.209 127.031 110.494 127.485 cv
110.321 127.36 110.11 127.283 109.927 127.318 cv
108.954 127.505 107.82 127.795 106.794 128.256 cv
106.717 128.052 106.537 127.905 106.237 127.949 cv
104.616 128.191 103.108 128.597 101.664 129.11 cv
101.501 128.904 101.234 128.793 100.914 128.921 cv
96.9873 130.493 93.2266 132.287 89.7403 134.687 cv
88.044 135.854 86.4063 137.184 84.624 138.218 cv
83.0186 139.149 81.2129 139.422 79.6338 140.395 cv
79.542 140.451 79.6172 140.593 79.7168 140.561 cv
80.2617 140.381 80.8057 140.324 81.3457 140.29 cv
81.0264 140.416 80.711 140.553 80.3887 140.67 cv
80.2998 140.61 80.1914 140.567 80.0576 140.562 cv
77.4785 140.459 74.8487 141.362 72.2549 141.604 cv
71.3418 141.69 70.4258 141.735 69.5098 141.765 cv
69.5225 141.43 69.2803 141.145 68.961 141.056 cv
67.3086 140.596 65.4668 141.632 63.7998 141.869 cv
61.3408 142.219 58.9483 142.149 56.4854 141.872 cv
55.2324 141.732 54.8067 143.569 56.084 143.824 cv
58.9209 144.39 61.8926 145.204 64.8018 144.791 cv
65.7793 144.652 66.9082 144.397 67.8291 143.895 cv
70.0117 144.021 72.3946 144.097 74.6094 143.815 cv
74.7696 143.96 74.9824 144.041 75.2393 144.003 cv
80.0567 143.28 87.3018 141.946 90.3614 137.749 cv
90.8018 137.145 90.292 136.448 89.5889 136.602 cv
88.7598 136.784 87.9629 137.09 87.1807 137.448 cv
87.5362 137.157 87.8946 136.884 88.2598 136.657 cv
88.9893 136.205 89.7422 135.784 90.4932 135.359 cv
89.959 136.198 91.0078 137.442 92.0567 136.828 cv
96.0596 134.485 100.202 132.208 104.378 130.142 cv
104.362 130.165 104.342 130.183 104.328 130.207 cv
104.135 130.516 104.452 130.819 104.744 130.833 cv
106.175 130.897 107.766 130.199 109.18 129.529 cv
109.419 129.906 109.977 130.068 110.387 129.951 cv
113.035 129.195 115.97 127.721 117.376 125.262 cv
117.782 124.552 117.467 123.916 116.93 123.587 cv
116.932 123.538 116.935 123.489 116.926 123.435 cv
116.901 123.274 116.713 123.138 116.561 123.256 cv
116.497 123.306 116.447 123.28 116.402 123.227 cv
116.734 122.457 117.078 121.694 117.379 120.913 cv
117.713 120.455 117.801 120.044 117.738 119.522 cv
117.857 118.865 117.994 118.206 117.951 117.547 cv
117.898 116.739 117.467 116.231 117.267 115.501 cv
cp
.309804 .509804 .517647 rgb
f
36.4229 124.917 mo
35.4336 124.82 34.3838 124.721 33.4004 124.916 cv
33.0801 124.979 32.6621 125.243 32.3731 125.268 cv
31.6397 125.332 31.7002 125.016 31.2071 124.81 cv
29.5791 124.132 27.6846 124.218 26.1709 125.139 cv
25.7178 125.415 26.045 125.989 26.4717 126.016 cv
27.3682 126.073 28.1875 125.821 29.0772 125.805 cv
29.8975 125.791 30.545 126.053 31.3262 126.149 cv
32.9219 126.344 34.4991 126.094 36.1114 126.432 cv
37.1035 126.64 37.3965 125.011 36.4229 124.917 cv
cp
f
14.3838 104.254 mo
14.127 103.407 13.8535 102.568 13.6104 101.717 cv
13.3848 100.927 13.1983 100.231 12.6358 99.6198 cv
12.461 99.4298 12.1377 99.4025 11.9073 99.4782 cv
11.8467 99.4982 11.7901 99.5275 11.7373 99.5641 cv
11.5381 99.7003 11.375 99.9728 11.4151 100.223 cv
11.5381 100.987 11.919 101.524 12.3242 102.168 cv
12.8047 102.929 13.2159 103.714 13.6094 104.524 cv
13.835 104.988 14.542 104.773 14.3838 104.254 cv
cp
f
40.2119 87.7081 mo
39.4658 85.6823 38.3438 84.1276 37.1543 82.3678 cv
36.1494 80.8805 33.6338 81.5407 33.5459 83.2911 cv
33.0742 83.4909 32.6748 83.8839 32.501 84.4113 cv
32.1485 84.2135 31.791 84.0255 31.4239 83.8624 cv
31.1846 83.756 30.9073 83.7599 30.6446 83.8302 cv
30.5059 83.7589 30.3643 83.6886 30.2422 83.6095 cv
29.2852 82.9884 28.4346 82.2687 27.3633 81.8414 cv
26.2403 81.3927 25.0254 81.1412 23.8858 80.7335 cv
23.1797 80.4806 22.6504 81.4406 23.3526 81.8034 cv
25.3594 82.84 26.7832 84.4557 28.5323 85.8414 cv
29.7451 86.8029 30.9326 87.2804 32.3018 87.6036 cv
33.2881 88.4166 34.2793 89.2247 35.2012 90.1163 cv
35.7051 90.6027 36.4082 90.5568 36.9346 90.2282 cv
37.6241 90.4088 38.336 90.4118 39.0254 90.1632 cv
39.9922 89.8151 40.5762 88.6964 40.2119 87.7081 cv
cp
f
86.6846 72.9889 mo
86.2715 73.1251 85.8643 73.2765 85.46 73.4367 cv
85.3399 73.4137 85.2119 73.4118 85.083 73.4093 cv
85.5186 73.1925 85.9229 72.9347 86.2393 72.5421 cv
86.3487 72.4069 86.3252 72.2623 86.2403 72.1574 cv
86.2783 72.1281 86.3174 72.1002 86.3545 72.0709 cv
87.1016 71.4821 86.5479 70.0455 85.5557 70.4791 cv
82.9229 71.6295 80.4453 73.3009 77.999 74.8034 cv
77.6074 75.0441 78.002 75.5949 78.3936 75.3859 cv
79.833 74.6173 81.294 74.0241 82.7715 73.4601 cv
82.7754 73.6359 82.8535 73.8092 82.9727 73.9386 cv
81.544 74.5748 80.0332 75.6442 78.9287 76.4415 cv
73.1826 79.3395 67.8506 82.8434 62.7705 87.0372 cv
62.0635 87.6207 62.8028 88.7863 63.585 88.2409 cv
69.9864 83.7765 76.9531 80.0382 84.1817 77.0626 cv
85.292 77.3317 86.5938 76.9445 86.9287 75.9782 cv
87.1631 75.8888 87.3955 75.7916 87.6299 75.7037 cv
89.3594 75.0573 88.4473 72.4054 86.6846 72.9889 cv
cp
f
18.4424 68.0128 mo
16.9063 67.318 15.2168 67.7091 13.6114 67.2975 cv
12.4356 66.9967 10.8623 65.6793 9.73148 66.609 cv
9.2598 66.9967 9.0723 67.6207 9.43167 68.1652 cv
9.45706 68.2047 9.48343 68.2443 9.5098 68.2838 cv
9.76956 68.6774 10.2041 68.7516 10.5733 68.6144 cv
10.5772 68.6232 10.5821 68.6325 10.586 68.6412 cv
10.461 68.6813 11.7256 69.465 11.8037 69.4996 cv
12.3516 69.7399 12.9688 69.9118 13.5557 70.0221 cv
14.9053 70.275 16.2959 70.1471 17.6582 70.2814 cv
18.9297 70.4069 19.7881 68.6212 18.4424 68.0128 cv
cp
f
30.2491 71.5753 mo
29.7041 70.4137 28.1075 69.9576 26.9356 69.611 cv
25.25 69.1115 23.4092 68.9977 21.6612 68.984 cv
20.1182 68.9718 20.2578 71.4537 21.8203 71.3927 cv
23.417 71.3307 24.9248 71.5026 26.4971 71.7462 cv
27.5928 71.9161 28.9649 72.465 30.0186 72.0529 cv
30.1924 71.985 30.3379 71.7648 30.2491 71.5753 cv
cp
f
65.2451 69.8668 mo
60.2061 69.3297 55.2783 70.9904 50.2754 71.3058 cv
44.5879 71.6642 38.0137 70.5094 32.3477 69.5914 cv
30.4297 69.2804 29.8155 72.2418 31.7383 72.5534 cv
36.8506 73.382 41.9893 73.9806 47.1573 73.7135 cv
53.1592 73.4039 59.7862 74.5421 65.375 71.8287 cv
66.166 71.445 66.3662 69.9865 65.2451 69.8668 cv
cp
f
124.642 75.2037 mo
124.872 73.0695 124.736 70.9118 124.188 68.9367 cv
124.084 68.5592 123.696 68.2399 123.318 68.174 cv
120.495 67.6837 120.232 62.7965 118.175 61.3912 cv
115.04 59.2501 108.898 61.379 105.556 61.8873 cv
105.046 61.965 104.725 62.3922 104.664 62.8297 cv
101.831 63.132 99.0088 64.129 96.2715 64.8058 cv
91.4805 65.9904 86.749 67.3654 81.9356 68.4689 cv
81.2422 68.6276 81.4815 69.7897 82.1856 69.6979 cv
86.5625 69.1295 90.9951 68.6222 95.3067 67.6574 cv
98.9541 66.8414 103.275 66.1027 106.517 64.0597 cv
107.11 64.1808 107.703 64.3102 108.298 64.4327 cv
107.942 64.5924 107.91 64.9733 108.088 65.2506 cv
107.874 65.6954 108.141 66.2389 108.541 66.4938 cv
109.481 67.0934 110.7 66.8068 111.709 66.5206 cv
112.694 66.2409 113.637 65.9874 114.013 64.9728 cv
114.383 65.025 114.685 65.0978 114.854 65.2047 cv
115.519 65.6266 116.054 66.9738 117.309 67.5958 cv
117.829 67.8541 118.353 67.8722 118.831 67.7306 cv
119.758 68.7985 120.464 69.9806 121.727 70.7399 cv
121.221 74.8009 120.587 78.6784 119.798 82.7291 cv
119.757 82.9371 119.799 83.1339 119.885 83.3077 cv
118.513 86.7623 116.956 90.1232 115.411 93.5773 cv
115.361 93.6896 115.337 93.798 115.306 93.9074 cv
112.126 94.2667 108.813 95.8878 105.86 97.046 cv
105.772 97.0558 105.685 97.0743 105.596 97.1041 cv
105.595 97.1012 105.593 97.0983 105.592 97.0958 cv
105.571 97.1051 105.551 97.1144 105.529 97.1237 cv
105.522 97.1266 105.514 97.131 105.506 97.1344 cv
105.436 97.1657 105.365 97.1974 105.296 97.2286 cv
105.427 96.7321 105.493 96.2081 105.464 95.6451 cv
105.423 94.8659 104.429 94.7721 104.066 95.3644 cv
103.096 96.9542 102.645 98.525 100.996 99.6408 cv
99.8584 100.412 100.792 102.026 102.032 101.704 cv
103.151 101.413 104.15 100.905 105.141 100.357 cv
105.354 100.379 105.586 100.354 105.84 100.26 cv
109.006 99.0792 113.168 98.172 116.142 96.1808 cv
116.366 96.339 116.616 96.4635 116.879 96.5358 cv
117.482 97.1686 118.42 97.3639 119.398 96.3473 cv
120.963 94.7218 121.679 92.9005 121.456 90.7999 cv
123.319 86.4303 124.678 81.775 125.844 77.2482 cv
126.126 76.1515 125.473 75.4279 124.642 75.2037 cv
cp
f
104.699 89.8849 mo
104.278 88.9196 104.171 87.819 103.604 86.9157 cv
103.063 86.0573 102.119 85.5109 101.36 84.8659 cv
100.216 83.8937 98.6914 81.9493 96.9815 82.005 cv
96.8975 81.7423 96.6807 81.5285 96.3233 81.5519 cv
95.4512 81.61 95.5391 82.9664 96.4131 82.9083 cv
96.5264 82.901 96.6221 82.8702 96.7031 82.8248 cv
96.7549 83.1876 97.4424 84.0807 97.5733 84.2111 cv
98.3379 84.9752 99.2324 85.653 100.039 86.3751 cv
100.691 86.9601 101.383 87.5568 101.745 88.3805 cv
102.066 89.1095 102.153 89.9249 102.464 90.6642 cv
103.051 92.0646 105.309 91.2819 104.699 89.8849 cv
cp
f
82.46 81.0079 mo
80.2783 81.6862 77.5303 81.9865 75.7188 83.4264 cv
75.4483 83.6412 75.5889 84.0402 75.9317 84.047 cv
78.253 84.09 80.6133 82.6583 82.7617 81.8712 cv
83.3145 81.6686 83.0225 80.8326 82.46 81.0079 cv
cp
f
75.1748 83.4103 mo
74.2842 83.1261 73.751 83.2379 72.9815 83.63 cv
71.7305 83.8849 70.4463 84.3493 69.6084 85.0197 cv
68.7598 85.6989 68.085 86.5787 67.2569 87.2853 cv
66.3731 88.0392 65.3252 88.5538 64.6026 89.4694 cv
64.3916 89.7379 64.5615 90.2496 64.958 90.1876 cv
66.6807 89.9186 68.2276 88.5416 69.5381 87.4493 cv
70.1114 86.9718 70.5772 86.2477 71.1797 85.8444 cv
72.3887 85.0338 73.959 85.1608 75.251 84.5651 cv
75.8067 84.3092 75.751 83.5949 75.1748 83.4103 cv
cp
f
58.2686 108.219 mo
54.5625 109.152 50.0371 110.29 46.2617 110.553 cv
42.626 110.807 41.4922 110.832 38.0127 112.153 cv
37.7803 112.241 37.9053 112.555 38.1358 112.507 cv
41.6114 111.784 44.8809 112.478 48.3838 112.031 cv
51.9073 111.582 55.1231 110.512 58.5928 109.813 cv
59.75 109.58 59.4336 107.926 58.2686 108.219 cv
cp
f
137.655 104.837 mo
137.532 104.32 137.231 104.065 136.932 103.638 cv
136.498 103.02 136.236 102.342 135.972 101.65 cv
135.682 100.891 135.413 100.501 134.903 100.209 cv
135.053 99.6744 135.493 98.7301 135.817 98.0377 cv
136.396 98.0509 136.97 97.7482 137.023 97.0836 cv
137.138 95.6769 136.623 93.65 135.725 92.528 cv
135.402 92.1256 135.006 91.8654 134.571 91.7037 cv
134.717 91.1979 134.535 90.6002 134.001 90.32 cv
131.996 89.2662 129.628 91.1608 128.697 92.8278 cv
128.197 93.7267 129.5 94.5519 130.165 93.8121 cv
130.457 93.4874 130.764 93.2799 131.104 93.1139 cv
131.198 93.6056 131.565 94.006 132.229 93.9015 cv
132.568 93.8483 133.065 93.6979 133.396 93.8141 cv
133.73 93.9323 133.696 94.2926 133.772 94.6486 cv
133.886 95.1798 133.998 95.734 134.165 96.2653 cv
134.145 96.3024 134.122 96.3351 134.105 96.3761 cv
133.632 97.4957 132.178 99.9157 132.727 101.167 cv
132.907 101.577 133.248 101.647 133.465 101.941 cv
133.778 102.363 133.547 101.72 133.904 102.429 cv
133.994 102.608 133.902 103.179 133.954 103.409 cv
134.131 104.215 134.728 104.381 134.936 104.984 cv
135.196 105.744 134.436 106.167 133.905 106.798 cv
132.972 107.911 132.07 108.931 132.432 110.42 cv
132.546 110.889 133.15 110.998 133.508 110.776 cv
135.273 109.682 138.256 107.339 137.655 104.837 cv
cp
f
132.435 111.493 mo
131.852 110.982 130.799 110.982 130.301 111.634 cv
129.787 112.308 129.248 112.961 128.674 113.585 cv
128.59 113.675 128.501 113.765 128.41 113.854 cv
128.367 113.839 128.326 113.824 128.282 113.811 cv
127.624 113.609 126.932 114.071 126.623 114.617 cv
126.022 115.679 126.666 116.702 127.604 117.104 cv
127.848 117.28 128.144 117.382 128.457 117.353 cv
128.828 117.319 129.15 117.183 129.445 116.993 cv
129.526 116.944 129.601 116.889 129.673 116.83 cv
130.105 116.495 130.479 116.056 130.851 115.66 cv
131.461 115.011 132.032 114.331 132.576 113.626 cv
133.074 112.98 133.075 112.054 132.435 111.493 cv
cp
f
51.9942 143.074 mo
51.1241 142.607 50.1651 142.816 49.2129 142.887 cv
48.6455 142.93 48.0674 142.954 47.4922 142.996 cv
46.0498 142.609 44.6397 142.038 43.1817 141.743 cv
41.4532 141.393 38.8321 142.221 37.3233 141.492 cv
37.0547 141.362 36.7949 141.672 36.9502 141.919 cv
38.208 143.923 40.2803 143.42 42.3448 143.708 cv
43.3399 143.846 44.2666 144.036 45.1758 144.195 cv
45.1729 144.549 45.3682 144.874 45.8408 144.91 cv
46.9326 144.993 48.0313 144.896 49.125 144.85 cv
50.1387 144.808 51.2158 144.929 52.0772 144.326 cv
52.5323 144.008 52.4756 143.334 51.9942 143.074 cv
cp
f
35.0782 140.36 mo
35.0137 140.364 35.0205 140.464 35.085 140.46 cv
35.1485 140.456 35.1426 140.356 35.0782 140.36 cv
cp
f
21.2334 122.147 mo
20.0469 121.936 19.1563 120.834 17.8448 121.189 cv
16.9034 121.443 16.2657 122.289 16.5489 123.259 cv
16.667 123.663 17.2412 123.761 17.5039 123.444 cv
17.8672 123.006 18.6358 123.547 18.9893 123.728 cv
19.6846 124.085 20.2901 124.342 21.0821 124.365 cv
22.3545 124.404 22.4619 122.364 21.2334 122.147 cv
cp
f
23.6319 123.914 mo
23.5684 123.919 23.5742 124.018 23.6387 124.014 cv
23.7032 124.01 23.6963 123.91 23.6319 123.914 cv
cp
f
32.2237 125.015 mo
32.1602 125.019 32.166 125.119 32.2305 125.115 cv
32.2949 125.11 32.2881 125.011 32.2237 125.015 cv
cp
f
83.794 125.472 mo
82.6631 125.134 81.6563 125.192 80.4795 125.16 cv
79.0762 125.123 77.6748 124.986 76.2803 124.827 cv
75.5684 124.746 75.333 125.836 76.0537 125.929 cv
78.4571 126.241 81.4893 126.881 83.8389 126.149 cv
84.1953 126.038 84.1045 125.565 83.794 125.472 cv
cp
f
64.0215 107.495 mo
63.1387 106.088 62.461 104.572 61.9717 102.985 cv
61.5801 101.712 61.5967 100.226 60.7559 99.1744 cv
60.5196 98.879 59.9746 98.8234 59.8067 99.2374 cv
59.7627 99.3463 59.7383 99.4586 59.709 99.57 cv
59.5957 99.5177 59.4698 99.4884 59.3389 99.4918 cv
58.7881 97.6495 60.5655 95.5944 61.7022 94.3234 cv
62.417 93.5241 61.1446 92.4093 60.4502 93.2272 cv
59.1543 94.755 55.918 99.2228 58.669 100.663 cv
59.1621 103.05 60.0186 106.224 61.9707 107.729 cv
61.9824 107.738 61.9961 107.741 62.0088 107.749 cv
62.1573 108.13 62.2803 108.511 62.376 108.934 cv
62.3858 108.979 62.4112 109.005 62.4268 109.044 cv
62.2608 109.002 62.0918 108.971 61.919 108.961 cv
61.8662 108.902 61.8174 108.841 61.7471 108.796 cv
61.3877 108.562 60.7803 108.558 60.5078 108.952 cv
60.4532 109.031 60.4258 109.106 60.3828 109.184 cv
60.2364 109.231 60.0918 109.284 59.9522 109.341 cv
58.6328 109.879 59.0616 111.692 60.4375 111.725 cv
60.8731 111.735 61.2871 111.787 61.6983 111.609 cv
61.7559 111.584 61.8028 111.546 61.8535 111.513 cv
62.2276 111.489 62.6006 111.458 62.958 111.314 cv
63.6866 111.021 63.9639 110.026 63.3135 109.484 cv
63.3057 109.477 63.2969 109.473 63.2891 109.466 cv
63.7246 109.36 64.1143 108.958 63.9932 108.402 cv
64.1768 108.166 64.2344 107.835 64.0215 107.495 cv
cp
f
62.2022 85.8947 mo
61.8565 85.9176 61.8916 86.4552 62.2383 86.4323 cv
62.585 86.4093 62.5498 85.8712 62.2022 85.8947 cv
cp
f
66.6641 82.6451 mo
66.6006 82.6495 66.6065 82.7492 66.6709 82.7448 cv
66.7344 82.7409 66.7285 82.6408 66.6641 82.6451 cv
cp
f
120.827 121.409 mo
120.555 120.468 119.486 120.139 118.736 120.856 cv
118.323 121.251 118.273 121.86 118.438 122.381 cv
118.491 122.544 118.57 122.675 118.661 122.786 cv
118.88 123.225 119.318 123.577 119.839 123.488 cv
120.166 123.432 120.437 123.377 120.708 123.174 cv
121.22 122.79 121.444 121.843 120.827 121.409 cv
cp
f
91.9785 98.174 mo
91.4444 98.5538 90.8916 98.9015 90.3321 99.2369 cv
90.4004 99.1827 90.4727 99.1344 90.5391 99.0778 cv
90.8213 98.8375 90.7344 98.2389 90.2744 98.3073 cv
88.1905 98.6183 86.3067 99.6027 84.334 100.323 cv
83.4151 100.659 83.9053 102.085 84.835 101.762 cv
85.499 101.531 86.1739 101.308 86.8379 101.064 cv
85.2549 101.796 83.6358 102.456 82.0303 103.131 cv
81.71 103.266 81.4639 103.456 81.2676 103.672 cv
79.9492 103.872 78.5694 103.923 77.3965 104.108 cv
74.9141 104.498 71.7793 104.776 69.8555 103.011 cv
69.8028 102.279 69.6133 101.557 69.5215 100.824 cv
69.3701 99.6144 69.4531 98.4513 69.8848 97.3038 cv
69.9639 97.0949 69.9776 96.8951 69.9531 96.7091 cv
69.999 96.6403 70.0459 96.5743 70.0908 96.5035 cv
70.5645 95.7682 71.0303 95.0363 71.5459 94.3297 cv
72.0362 93.6598 71.6397 92.8859 71.0772 92.6056 cv
72.0752 92.0377 72.9932 91.3673 73.9053 90.5358 cv
74.0791 90.3781 74.1914 90.1969 74.2617 90.0065 cv
78.086 89.6964 81.9258 88.6774 85.7481 88.3131 cv
86.8682 88.2062 87.3887 87.3073 87.3731 86.4303 cv
89.583 86.6207 92.0362 86.254 94.0664 86.8976 cv
95.628 87.3927 97.75 89.7243 98.1621 91.7994 cv
97.5469 94.3297 93.4414 97.1339 91.9785 98.174 cv
cp
75.1397 107.009 mo
74.708 107.046 74.2715 107.082 73.8233 107.061 cv
73.4346 107.043 73.0576 106.987 72.6905 106.902 cv
72.6104 106.743 72.5069 106.59 72.3428 106.459 cv
72.2842 106.411 72.2149 106.378 72.1533 106.332 cv
72.8614 106.537 73.6123 106.653 74.3897 106.672 cv
74.6406 106.678 74.9102 106.677 75.1846 106.673 cv
75.1602 106.784 75.1426 106.897 75.1397 107.009 cv
cp
68.4307 104.217 mo
67.5947 103.605 66.9326 102.871 66.4004 102.035 cv
66.4883 101.917 66.5615 101.788 66.5908 101.648 cv
66.7852 100.744 66.6074 99.8956 66.5362 99.028 cv
66.7803 98.6652 67.0567 98.2955 67.3399 97.923 cv
67.0957 99.1959 67.0479 100.631 67.4112 101.843 cv
67.4121 101.845 67.4112 101.847 67.4121 101.849 cv
67.4131 101.853 67.4151 101.855 67.416 101.858 cv
67.5127 102.177 67.6367 102.479 67.7979 102.759 cv
68.169 103.513 68.6475 104.171 69.2276 104.71 cv
68.9551 104.558 68.6846 104.402 68.4307 104.217 cv
cp
100.044 86.6705 mo
96.5821 82.1588 91.5225 82.0753 86.2705 83.8058 cv
85.8262 83.9523 85.5625 84.3009 85.4678 84.692 cv
84.6436 84.7745 83.7949 84.8556 82.9375 84.943 cv
82.752 84.8732 82.5518 84.8273 82.335 84.8253 cv
76.7764 84.7721 72.8487 86.0538 68.876 89.2184 cv
68.6035 89.3659 68.3311 89.5075 68.0586 89.6749 cv
67.7364 89.8737 67.5528 90.1364 67.4697 90.4176 cv
67.3145 90.5577 67.1592 90.6935 67.002 90.84 cv
66.8135 91.0172 66.6924 91.2155 66.6182 91.422 cv
66.3985 91.5421 66.1905 91.6847 66.0059 91.8507 cv
64.376 93.3136 63.167 95.3649 62.8233 97.5485 cv
61.9717 99.3126 61.6104 101.339 61.9492 103.127 cv
62.3496 105.242 64.9912 109.258 67.4463 108.341 cv
69.8457 109.934 72.4824 110.839 75.4141 110.866 cv
78.4219 110.894 82.7481 110.207 84.543 107.552 cv
84.5772 107.502 84.585 107.447 84.6084 107.395 cv
85.792 107.107 86.9649 106.766 88.1182 106.35 cv
90.2285 105.59 93.4141 104.701 93.7764 102.226 cv
95.7744 100.974 97.5645 99.5158 98.8467 97.8121 cv
98.9502 97.7741 99.0518 97.7291 99.1504 97.6701 cv
104.036 94.7653 103.179 90.7555 100.044 86.6705 cv
cp
.886275 .882353 .862745 rgb
f
92.9834 96.6925 mo
92.6074 96.7174 92.6455 97.3024 93.0225 97.2775 cv
93.3994 97.2526 93.3614 96.6676 92.9834 96.6925 cv
cp
f
28.211 107.287 mo
27.4717 105.816 25.1729 105.556 23.7901 104.929 cv
21.9512 104.095 20.2774 103.017 18.7159 101.75 cv
18.7159 101.739 18.7198 101.729 18.7178 101.717 cv
18.5655 100.312 18.0752 98.9806 17.6494 97.6588 cv
17.4336 96.8673 17.2578 96.0607 17.5782 95.359 cv
17.8487 94.7672 18.294 94.3536 18.5469 93.7394 cv
18.8994 92.8839 19.0381 92.0114 19.4971 91.1871 cv
19.5889 91.0206 19.6114 90.8639 19.6075 90.714 cv
21.8037 89.9137 24.916 90.797 26.542 91.6954 cv
28.378 92.7096 29.6875 94.2716 30.9034 95.9332 cv
31.7383 97.0739 32.5127 98.275 33.2178 99.5001 cv
33.7403 100.329 34.1944 101.196 34.5772 102.101 cv
35.376 103.615 35.1553 104.844 33.96 105.801 cv
33.1963 105.59 32.2041 106.036 31.7813 106.853 cv
31.1211 106.721 30.7139 107.202 30.6553 107.762 cv
30.086 107.702 29.5655 107.61 29.4453 107.581 cv
28.8125 107.433 28.3711 107.751 28.1758 108.198 cv
28.0362 108.148 27.8975 108.093 27.7588 108.044 cv
27.878 107.987 27.9942 107.922 28.1045 107.84 cv
28.294 107.7 28.3116 107.487 28.211 107.287 cv
cp
37.4063 105.265 mo
37.3994 105.263 37.3936 105.265 37.3877 105.263 cv
37.3965 105.216 37.4102 105.171 37.418 105.123 cv
38.0713 101.35 34.9375 97.3971 32.7969 94.651 cv
30.3096 91.4591 26.8389 88.5035 22.6397 88.2081 cv
20.4844 88.0568 16.8516 88.6808 16.3125 90.9796 cv
16.0742 91.2921 15.8575 91.6159 15.6797 91.9572 cv
14.6905 92.7492 13.8155 93.6246 13.5 95.0534 cv
13.2207 96.3219 13.419 97.7789 14.0205 98.9811 cv
14.2744 100.895 15.4776 102.58 16.8643 104.067 cv
17.9453 105.227 19.6709 106.657 21.251 106.165 cv
21.75 106.445 22.2588 106.71 22.7793 106.953 cv
22.9326 107.025 23.0967 107.104 23.2686 107.186 cv
23.1641 107.537 23.2471 107.94 23.666 108.153 cv
25.0489 108.859 26.7608 109.576 28.4063 109.6 cv
28.5479 109.743 28.7285 109.859 28.9639 109.923 cv
30.1367 110.244 31.9659 110.353 33.294 109.815 cv
35.002 110.209 37.3936 108.953 38.0645 107.517 cv
38.4307 106.734 38.377 105.547 37.4063 105.265 cv
cp
f
93.3496 100.858 mo
91.7998 101.291 90.8438 102.14 89.5371 103.073 cv
88.6983 103.673 87.8233 104.208 86.9287 104.712 cv
84.3428 105.233 82.1768 106.758 79.8164 107.89 cv
78.3916 107.314 77.0567 107.62 75.5772 107.957 cv
74.9063 108.11 74.2188 108.332 73.5254 108.423 cv
73.5576 108.178 73.4395 107.91 73.2705 107.746 cv
72.0957 106.601 69.8994 106.709 68.4492 105.861 cv
66.9492 104.985 65.8106 103.76 64.7862 102.407 cv
64.7539 102.204 64.7266 101.999 64.7071 101.792 cv
64.8086 101.713 64.9004 101.615 64.9707 101.486 cv
65.4893 100.547 65.2002 99.4332 65.3184 98.4059 cv
65.4571 97.2072 65.8321 96.1007 66.5401 95.1159 cv
67.3057 94.0529 65.9141 92.7731 64.9883 93.7575 cv
63.9512 94.861 63.1729 96.2091 62.8164 97.6901 cv
62.5869 98.6442 62.4785 99.9284 62.9112 100.892 cv
62.7403 100.934 62.5869 101.026 62.4492 101.141 cv
62.3877 101.186 62.335 101.236 62.2891 101.296 cv
62.0196 101.625 61.9141 102.097 62.1856 102.579 cv
62.2285 102.656 62.2754 102.735 62.3203 102.813 cv
62.5782 104.17 62.9492 105.543 63.7881 106.646 cv
64.4522 107.519 65.8789 108.757 67.1289 108.491 cv
67.2178 108.548 67.3018 108.614 67.3936 108.668 cv
67.5781 108.776 67.7813 108.884 67.9951 108.989 cv
68.0547 109.063 68.1231 109.134 68.209 109.197 cv
69.9551 110.485 71.6621 111.517 73.9112 111.3 cv
74.5791 111.236 75.3174 111.149 76.0576 111.015 cv
76.2012 111.074 76.3633 111.109 76.5635 111.081 cv
79.6231 110.656 83.1572 109.47 85.7989 107.49 cv
88.7295 106.334 92.8145 104.712 94.0235 101.624 cv
94.2012 101.171 93.8311 100.723 93.3496 100.858 cv
cp
.768627 .764706 .752941 rgb
f
101.612 87.8864 mo
101.134 86.5182 100.533 85.8961 99.1651 85.4786 cv
97.584 84.9962 94.9248 82.59 93.3096 84.1578 cv
93.2031 84.2618 93.2364 84.445 93.335 84.5382 cv
93.8242 84.9977 94.4815 85.1803 95.0371 85.5665 cv
95.6729 86.0099 96.293 86.4967 96.916 86.9601 cv
98.5811 88.1989 99.7373 89.5646 99.2647 91.8336 cv
99.1963 92.1598 99.2344 92.4445 99.3399 92.6842 cv
99.0215 92.8576 98.7559 93.1427 98.6446 93.5719 cv
98.5401 93.9782 98.5547 94.4127 98.3906 94.8024 cv
98.1953 95.2667 97.7989 95.6793 97.5078 96.0826 cv
96.7197 97.1754 96.0059 98.2013 94.9024 99.0006 cv
93.9024 99.7252 95.2803 101.144 95.9795 100.22 cv
97.4824 98.234 101.648 96.7658 101.417 93.7618 cv
101.406 93.6227 101.361 93.5104 101.321 93.3942 cv
101.685 93.235 101.983 92.9205 102.089 92.4142 cv
102.414 90.8561 102.134 89.3756 101.612 87.8864 cv
cp
f
88.625 83.8326 mo
82.9248 84.067 70.8565 83.4523 68.8076 90.6403 cv
68.6231 91.2858 69.3936 91.6022 69.8721 91.3522 cv
70.8047 90.8659 71.0977 90.3478 71.9082 89.8063 cv
74.0508 88.3761 75.5498 88.0255 77.9219 87.4371 cv
81.5088 86.5465 84.9737 85.1085 88.6992 84.9552 cv
89.4229 84.9259 89.3487 83.8034 88.625 83.8326 cv
cp
f
33.5625 95.2101 mo
30.6836 91.57 26.5811 88.09 21.6602 87.8873 cv
18.6299 87.7628 13.1826 90.2736 13.7617 93.7911 cv
13.3789 94.629 13.0782 95.7296 13.1914 96.7008 cv
12.9922 96.8654 12.8867 97.132 13.0088 97.4655 cv
13.7461 99.4806 14.8858 101.348 16.1895 103.047 cv
16.7754 103.81 17.4229 104.524 18.2139 104.897 cv
18.2032 105.103 18.2823 105.314 18.5108 105.485 cv
19.8155 106.456 21.169 107.355 22.5918 108.143 cv
23.6973 108.755 25.1944 109.877 26.4873 109.437 cv
26.8496 109.314 26.9112 108.928 26.7569 108.626 cv
26.2227 107.578 24.5889 107.222 23.583 106.707 cv
22.458 106.13 21.3828 105.469 20.334 104.766 cv
20.3858 104.598 20.3701 104.405 20.2774 104.27 cv
19.5391 103.196 18.4317 102.477 17.5401 101.539 cv
16.5713 100.521 15.7139 99.4093 15.0225 98.1945 cv
15.0635 98.1315 15.1084 98.0734 15.128 97.9884 cv
15.2696 97.3502 15.1241 96.7321 15.042 96.0953 cv
14.9942 95.7218 14.9932 95.3512 15.0371 94.985 cv
15.1162 94.9288 15.1963 94.8717 15.2559 94.7775 cv
17.5293 91.1759 20.5528 89.9493 24.7139 90.8058 cv
28.1504 91.5128 30.8545 92.6666 32.9805 95.6041 cv
33.2461 95.9723 33.8418 95.5636 33.5625 95.2101 cv
cp
f
34.5186 97.1115 mo
34.4532 96.9845 34.2832 97.0978 34.3106 97.216 cv
34.9073 99.7931 36.2442 102.79 35.3028 105.467 cv
34.2471 108.471 30.3731 109.291 27.545 109.034 cv
26.5147 108.94 26.1543 110.5 27.2149 110.641 cv
30.3037 111.051 34.7901 110.42 36.7129 107.59 cv
38.9795 104.254 36.0606 100.091 34.5186 97.1115 cv
cp
f
29.6377 98.3781 mo
28.2637 95.6388 24.6866 92.8727 21.5489 94.3375 cv
19.6866 95.2067 18.8057 97.3429 19.502 99.2853 cv
19.7012 99.8429 20.0147 100.347 20.4014 100.786 cv
20.5176 100.975 20.6377 101.158 20.7578 101.332 cv
21.5811 102.525 22.6651 103.543 23.9873 104.157 cv
25.7256 104.965 27.9971 105.091 29.3946 103.563 cv
30.7344 102.099 30.4561 100.01 29.6377 98.3781 cv
cp
1 1 1 rgb
f
85.3731 91.3395 mo
83.0703 90.1574 80.5498 91.2228 79.3155 93.297 cv
77.2168 93.3961 75.0244 93.3361 73.3008 94.6696 cv
70.877 96.5441 71.1455 100.467 74.2256 101.49 cv
76.9346 102.389 80.2598 101.036 82.6602 99.817 cv
85.001 98.63 87.1055 96.6178 87.0127 93.8043 cv
86.9785 92.7579 86.2842 91.8073 85.3731 91.3395 cv
cp
f
35.2461 129.444 mo
34.8985 129.24 34.4619 129.136 33.9239 129.196 cv
33.1104 129.286 32.4795 129.828 32.2862 130.623 cv
32.2832 130.636 32.2793 130.649 32.2764 130.661 cv
32.2178 130.631 32.1582 130.6 32.1045 130.572 cv
30.8086 129.894 29.8008 130.886 29.7325 132.008 cv
28.4483 131.327 27.002 130.705 25.7803 131.003 cv
25.3662 131.104 25.0381 131.543 24.958 131.942 cv
24.5879 133.787 26.6973 135.022 27.9951 135.971 cv
29.8575 137.333 31.8907 138.052 33.8662 139.157 cv
34.7227 139.636 35.6221 138.908 35.6973 138.081 cv
36.1719 137.772 36.4639 137.139 36.2256 136.603 cv
35.876 135.822 35.2471 135.204 34.5157 134.676 cv
34.5918 134.61 34.6651 134.538 34.7324 134.454 cv
34.8877 134.26 34.9873 134.074 35.0576 133.893 cv
35.1465 133.933 35.2324 133.973 35.3408 134.01 cv
36.0254 134.245 36.6846 133.61 36.8506 133.016 cv
37.2989 131.402 36.4219 129.903 35.2461 129.444 cv
cp
.74902 .909804 .835294 rgb
f
24.0547 132.406 mo
23.6514 131.824 23.0576 131.36 22.4971 130.902 cv
22.4649 130.714 22.3789 130.527 22.1797 130.367 cv
21.5869 129.892 20.8418 129.582 20.2735 129.097 cv
20.2471 129.074 20.2168 129.069 20.1885 129.05 cv
20.1407 129.017 20.0977 128.979 20.0489 128.946 cv
20.041 128.968 li
19.1602 128.561 17.9668 129.614 18.7002 130.486 cv
19.2715 131.166 19.9112 131.756 20.5606 132.36 cv
21.1973 132.953 21.8164 133.669 22.584 134.085 cv
23.6075 134.639 24.6983 133.339 24.0547 132.406 cv
cp
f
19.1338 75.567 mo
18.6358 75.4039 18.1143 75.4581 17.6192 75.277 cv
17.2393 75.1388 16.9453 74.8615 16.5352 74.777 cv
16.3282 74.734 16.1045 74.7101 15.8867 74.7282 cv
15.5879 73.7946 14.2256 73.6232 13.625 74.3419 cv
12.7657 75.3707 12.0528 76.4884 11.5039 77.7125 cv
11.4619 77.8038 11.4336 77.8937 11.4131 77.9821 cv
10.8106 77.7028 9.93655 77.8868 9.66312 78.5275 cv
8.6348 80.9386 8.69437 83.9386 9.10159 86.8278 cv
8.45804 89.1549 7.45804 91.4181 6.42777 93.6559 cv
5.83597 94.9435 7.75687 95.9074 8.39944 94.6393 cv
8.9512 93.5524 9.48148 92.4694 9.96878 91.382 cv
10.0186 91.6066 10.0684 91.8287 10.1182 92.0451 cv
10.459 93.5538 12.8604 93.0001 12.7471 91.5104 cv
12.6387 90.0734 12.7686 88.6544 12.8379 87.2262 cv
12.878 87.2145 12.919 87.2101 12.958 87.192 cv
13.2696 87.0519 14.003 86.5621 14.2774 86.0748 cv
14.3242 86.1539 14.3711 86.2282 14.4034 86.2726 cv
14.6582 86.6261 15.0303 86.8839 15.4541 86.9816 cv
15.8145 87.0646 16.168 87.0206 16.5186 86.9074 cv
16.6358 86.8698 16.8916 86.776 17.0362 86.6886 cv
17.2364 86.8541 17.6133 86.943 17.7881 86.9616 cv
18.2959 87.0162 18.6241 86.8478 18.9737 86.4952 cv
19.6905 85.7731 18.9463 84.7394 18.0938 84.7155 cv
18.7188 84.733 18.1924 84.4557 17.8448 84.3156 cv
17.4453 84.1549 17.0303 84.1608 16.6221 84.2804 cv
16.4717 84.3248 16.3203 84.3815 16.1836 84.4611 cv
16.1719 84.4669 16.1602 84.4718 16.1494 84.4772 cv
16.1192 84.4176 16.0899 84.358 16.0567 84.2994 cv
15.9639 84.0993 15.7569 83.881 15.5869 83.7477 cv
14.9492 83.2487 14.0528 83.1764 13.3428 83.5485 cv
13.167 83.6403 13.0215 83.7584 12.8887 83.8903 cv
12.6739 83.8024 12.4444 83.7809 12.2198 83.8239 cv
12.377 82.402 12.3535 80.941 12.1162 79.4308 cv
12.7032 79.7438 13.4844 79.6657 13.8526 78.8844 cv
14.0137 78.5446 14.1905 78.2213 14.376 77.9049 cv
14.5801 77.9952 14.8028 78.0573 15.0567 78.07 cv
16.0332 78.1188 16.3789 77.4957 16.6172 76.7843 cv
17.1084 77.0084 17.5459 77.2999 18.1768 77.2409 cv
18.8076 77.1823 19.2442 76.9152 19.5078 76.3361 cv
19.6651 75.9909 19.4678 75.6769 19.1338 75.567 cv
cp
f
24.3692 75.1774 mo
23.9326 75.2062 23.9776 75.8844 24.4141 75.8556 cv
24.8506 75.8263 24.8067 75.1481 24.3692 75.1774 cv
cp
f
57.4678 77.3346 mo
57.1114 77.5206 56.7862 77.7272 56.4737 77.9425 cv
55.9776 78.0245 55.6602 78.3297 55.5117 78.7111 cv
52.666 81.3204 51.961 85.3356 50.7539 89.0026 cv
50.7188 89.4503 50.5879 89.861 50.3828 90.2423 cv
50.3408 88.4254 50.1953 86.6115 49.96 84.7785 cv
50.0879 84.6251 50.168 84.424 50.166 84.191 cv
50.1065 78.6002 39.5498 77.6613 35.8711 76.4801 cv
34.1592 75.9308 33.6221 78.6647 35.3086 79.2125 cv
36.6934 79.6627 38.125 79.9796 39.5489 80.3219 cv
39.0879 80.5436 38.8067 81.0299 38.8086 81.567 cv
38.8116 82.3444 39.042 83.1295 39.5254 83.7457 cv
39.9844 84.3292 40.8155 84.7828 41.5616 84.6632 cv
41.9942 84.5939 42.3116 84.2111 42.1592 83.7614 cv
42.0821 83.5338 42.0371 83.3326 41.9043 83.1271 cv
41.8418 83.0309 41.7979 82.9586 41.7969 82.9845 cv
41.7608 82.8507 41.7334 82.7184 41.6739 82.5841 cv
41.4678 82.1237 41.3828 81.8322 41.3809 81.3966 cv
41.3799 81.1481 41.2871 80.9205 41.1416 80.7301 cv
41.9678 80.9557 42.7852 81.2076 43.5791 81.5245 cv
45.2276 82.1827 46.4151 83.443 47.8155 84.3668 cv
47.9082 86.6451 47.7735 88.9196 47.4824 91.1788 cv
46.5664 91.1447 45.5938 91.6832 45.418 92.6862 cv
45.2471 93.6676 45.1494 94.6632 45.1758 95.6495 cv
44.668 95.7448 44.1319 95.8771 43.5664 96.0094 cv
43.4619 95.6017 43.3155 95.2013 43.1719 94.8019 cv
42.6905 93.4616 40.6631 94.3844 41.3848 95.6989 cv
41.7422 96.3493 42.0928 96.9835 42.6397 97.4801 cv
42.6787 97.82 42.8311 98.1495 43.0957 98.3688 cv
44.2451 99.3209 44.8877 98.9791 45.9981 99.0846 cv
46.5401 99.7179 47.4737 100.042 48.2617 99.9186 cv
49.0762 100.245 50.0821 99.9762 50.1641 98.8839 cv
50.3828 95.984 50.9727 93.5504 51.461 90.7868 cv
52.2549 86.2955 54.2715 83.6603 56.7783 80.6066 cv
56.7852 80.6061 56.792 80.608 56.7998 80.6071 cv
57.6905 80.5485 58.0723 79.8068 58.001 79.1168 cv
58.1651 78.9142 58.3311 78.7111 58.4991 78.5021 cv
59.084 77.7721 58.2393 76.9327 57.4678 77.3346 cv
cp
f
24.5469 79.3214 mo
23.1055 78.8326 21.6114 78.8971 20.1231 79.1393 cv
18.9619 79.3287 19.0596 81.1618 20.2461 80.9869 cv
21.6543 80.7794 23.0752 80.7145 24.4707 80.4337 cv
25.1016 80.3068 25.167 79.5314 24.5469 79.3214 cv
cp
f
67.7422 77.4791 mo
67.6778 77.4835 67.6836 77.5831 67.7481 77.5792 cv
67.8125 77.5748 67.8057 77.4752 67.7422 77.4791 cv
cp
f
106.184 75.6759 mo
106.115 75.6334 105.796 75.4689 105.486 75.3463 cv
105.471 75.2145 105.462 75.0817 105.439 74.9503 cv
105.291 73.9576 105.149 72.9313 104.453 72.1671 cv
103.692 71.3307 102.519 71.1495 101.438 71.2413 cv
100.884 71.2882 100.35 71.5075 99.7901 71.5226 cv
99.2197 71.5377 98.6719 71.3668 98.1006 71.3849 cv
96.002 71.4513 94.5293 73.3673 95.5723 75.3385 cv
96.751 77.5656 99.4229 77.3058 101.516 76.8864 cv
101.813 76.8268 102.032 76.6652 102.183 76.4625 cv
102.291 77.359 102.651 78.1173 103.662 78.4059 cv
104.967 78.7794 105.619 77.9376 106.474 77.151 cv
106.965 76.6979 106.645 75.9664 106.184 75.6759 cv
cp
f
108.351 77.8449 mo
108.285 77.4957 107.78 77.5949 107.873 77.942 cv
108.079 78.7135 108.286 79.485 108.492 80.2565 cv
108.536 80.4201 108.82 80.3659 108.788 80.1964 cv
108.643 79.4122 108.497 78.6285 108.351 77.8449 cv
cp
f
130.108 101.844 mo
130.051 101.589 129.975 101.343 129.85 101.131 cv
129.563 100.643 128.844 100.431 128.326 100.625 cv
126.582 101.279 126.945 103.772 128.354 104.364 cv
128.425 104.547 128.408 104.719 128.324 104.978 cv
128.252 105.203 128.19 105.429 128.131 105.659 cv
128.056 105.954 128.533 106.128 128.643 105.836 cv
128.872 105.387 129.003 104.901 129.378 104.563 cv
129.792 104.188 130.108 103.952 130.177 103.362 cv
130.213 103.042 130.219 102.689 130.189 102.34 cv
130.207 102.297 130.228 102.255 130.245 102.212 cv
130.313 102.051 130.229 101.911 130.108 101.844 cv
cp
f
97.3301 126.972 mo
95.6162 127.067 94.6621 127.774 93.1231 128.281 cv
90.6485 129.097 88.0235 128.838 85.5 129.768 cv
82.3135 130.943 79.2158 130.84 76.1485 131.294 cv
76.2461 131.071 76.3369 130.846 76.4385 130.626 cv
77.1065 129.087 74.8985 127.918 74.0977 129.302 cv
73.6787 128.645 72.4365 128.588 71.999 129.238 cv
70.9697 130.765 70.4541 131.95 70.2588 133.781 cv
70.1543 134.761 71.1426 135.562 72.0449 134.975 cv
72.5078 134.673 72.9912 134.457 73.4864 134.292 cv
74.0371 134.54 74.669 134.493 75.0479 133.943 cv
77.2539 133.665 79.6026 134.088 81.6895 133.705 cv
83.542 133.364 85.3643 132.399 87.1436 131.768 cv
90.6709 130.517 94.1387 129.978 97.668 128.634 cv
98.5625 128.294 98.3106 126.919 97.3301 126.972 cv
cp
f
118.449 50.1666 mo
118.331 50.1725 118.208 50.1881 118.078 50.2257 cv
115.928 50.8468 113.778 51.2262 111.623 51.5402 cv
113.974 50.5939 116.299 49.5797 118.6 48.528 cv
118.622 48.5411 118.642 48.5612 118.664 48.5734 cv
118.517 49.0914 118.473 49.5963 118.449 50.1666 cv
cp
108.603 47.4088 mo
111.239 46.3439 113.798 45.0353 116.209 43.6129 cv
115.841 44.1427 115.544 44.7111 115.345 45.3204 cv
115.246 45.6237 115.259 45.9244 115.333 46.2096 cv
113.082 46.6315 110.845 47.0411 108.603 47.4088 cv
cp
74.3867 59.7501 mo
74.086 59.5724 73.7871 59.3893 73.4834 59.2164 cv
74.3789 59.3478 75.2744 59.4684 76.1729 59.5802 cv
76.0332 59.6378 75.8916 59.691 75.7588 59.7614 cv
75.3018 59.7594 74.8438 59.7472 74.3867 59.7501 cv
cp
125.758 49.6686 mo
125.98 48.7013 125.685 47.7277 125.08 47.0617 cv
125.109 46.7155 125.089 46.3702 124.966 46.0158 cv
124.862 45.7189 124.717 45.4743 124.552 45.2545 cv
126.073 43.629 124.259 41.1823 122.37 41.4884 cv
122.522 41.1188 122.683 40.7526 122.812 40.3742 cv
122.889 40.1456 122.82 39.9108 122.677 39.7228 cv
122.72 39.6007 122.743 39.465 122.732 39.3097 cv
122.725 39.1852 li
122.646 37.9952 120.976 38.0075 120.733 39.0011 cv
120.411 38.7365 119.955 38.6476 119.504 38.9513 cv
114.801 42.1168 110.083 43.9786 105.152 45.5514 cv
104.823 45.2614 104.358 45.1295 103.815 45.3214 cv
100.45 46.5104 97.086 47.6993 93.7217 48.8883 cv
92.1709 49.4362 92.7041 51.6647 94.2832 51.6491 cv
99.4512 51.5988 104.82 51.2765 110.044 50.3414 cv
107.916 51.1373 105.782 51.922 103.641 52.7052 cv
102.725 53.0407 103.083 54.2448 103.963 54.2882 cv
104.653 54.3224 105.349 54.3366 106.048 54.339 cv
106.015 54.3493 105.982 54.3585 105.949 54.3688 cv
105.844 54.4015 105.761 54.4508 105.688 54.5055 cv
104.378 54.6705 103.048 54.8942 101.708 55.1744 cv
101.411 55.0924 101.081 55.0968 100.734 55.2184 cv
100.733 55.2037 li
100.471 55.3331 100.199 55.4503 99.9336 55.5739 cv
99.0547 55.7853 98.1778 56.0201 97.3037 56.2667 cv
97.1641 56.2008 97.0137 56.1559 96.8496 56.151 cv
96.1953 56.1334 95.542 56.1154 94.8877 56.0978 cv
94.5547 56.0885 94.3086 56.2457 94.1416 56.4708 cv
88.2959 57.0875 82.5235 57.1945 76.6065 56.8903 cv
70.4873 56.5758 65.0176 55.4284 59.0469 57.2174 cv
58.7705 57.3004 58.877 57.6974 59.1446 57.6954 cv
62.5957 57.6681 65.9844 58.1002 69.3643 58.6017 cv
67.2744 59.0573 65.1612 60.2462 63.3604 61.1193 cv
62.3311 61.6178 61.8819 62.5514 61.8574 63.4772 cv
61.4199 63.6129 60.9785 63.7418 60.5303 63.8463 cv
57.9912 64.4406 55.4395 64.7599 52.8672 64.879 cv
51.5352 64.4967 49.9981 64.566 48.6192 64.4342 cv
46.2754 64.2106 43.9356 63.9528 41.5967 63.6847 cv
36.1465 61.837 29.1338 63.5128 23.4307 64.8165 cv
22.5 64.713 21.5762 64.5905 20.6582 64.4445 cv
19.3145 62.7506 16.8125 62.8644 14.7793 62.6598 cv
14.1045 62.5919 13.42 62.5221 12.7364 62.4327 cv
12.4492 62.3287 12.1621 62.2326 11.876 62.1207 cv
11.4444 61.9513 11.0381 61.963 10.6817 62.0826 cv
10.6514 62.0758 10.6192 62.0714 10.5889 62.0646 cv
10.4366 61.8859 10.2969 61.6915 10.1739 61.4777 cv
9.74417 60.7321 8.8887 60.88 8.42679 61.3942 cv
7.78909 61.1315 7.17581 60.8102 6.59866 60.4064 cv
5.17874 59.4118 3.48148 61.2291 4.79202 62.4694 cv
6.42777 64.0167 8.34378 64.9987 10.4444 65.6046 cv
11.0303 66.0231 11.6895 66.3795 12.4053 66.7037 cv
14.0752 67.4616 16.5205 68.5118 18.545 68.2863 cv
18.7979 68.8483 19.3516 69.2443 20.208 69.1417 cv
21.086 69.0368 21.9659 68.9113 22.8467 68.7819 cv
23.2334 68.8478 23.6182 68.9235 24.0069 68.9791 cv
27.9844 69.5446 33.2901 70.6549 37.0069 68.9977 cv
37.334 68.8517 37.5694 68.6066 37.7237 68.3263 cv
40.3076 68.9913 42.877 69.8097 45.335 68.9025 cv
45.6358 68.7916 45.8692 68.61 46.0391 68.3917 cv
46.4492 68.4337 46.8584 68.4786 47.2676 68.5245 cv
47.6358 68.9015 48.1377 69.1676 48.7735 69.2047 cv
53.0274 69.4542 57.2813 69.2697 61.4785 68.5089 cv
64.4248 67.9747 67.9551 67.6744 69.3789 64.7633 cv
69.4942 64.5285 69.5117 64.2667 69.4873 64.0089 cv
69.7031 63.9401 69.8887 63.8961 70.0645 63.8639 cv
70.1143 63.8678 70.1641 63.8737 70.2149 63.8776 cv
70.6494 64.8737 71.5781 65.651 72.9688 65.6232 cv
73.6924 65.609 74.4131 65.6124 75.1328 65.6183 cv
75.4619 65.6525 75.791 65.6647 76.1221 65.6305 cv
78.6494 65.6793 81.1631 65.8278 83.6992 66.0104 cv
86.0039 66.1764 88.5957 66.2609 89.9072 64.3077 cv
93.4229 63.674 96.9131 62.7404 100.352 61.8781 cv
104.337 60.8785 108.713 60.5192 112.448 58.7531 cv
112.582 58.8073 112.711 58.8429 112.842 58.8864 cv
113.173 59.921 114.06 60.7228 115.477 60.5509 cv
116.148 60.4694 116.826 60.3898 117.495 60.275 cv
117.536 60.2911 117.565 60.3156 117.608 60.3302 cv
118.939 60.7902 120.485 59.6071 121.748 59.1993 cv
122.11 59.0822 122.459 58.7194 122.509 58.3307 cv
122.556 57.965 122.522 57.7516 122.331 57.4396 cv
122.272 57.341 122.186 57.257 122.091 57.1823 cv
122.609 56.966 123.065 56.5387 123.341 56.0319 cv
125.313 55.3517 127.029 53.9274 127.07 51.7575 cv
127.087 50.858 126.498 50.1129 125.758 49.6686 cv
cp
.815686 .768627 .588235 rgb
f
127.036 60.4186 mo
127.031 60.3449 127.029 60.2731 127.024 60.1989 cv
126.96 59.1754 126.268 58.5548 125.438 58.3908 cv
124.929 57.9513 124.252 57.756 123.534 58.006 cv
122.524 58.3566 121.939 59.528 122.308 60.5431 cv
122.393 60.778 122.478 61.0128 122.563 61.2477 cv
122.588 61.318 122.627 61.3839 122.661 61.4513 cv
122.583 61.8727 122.511 62.2955 122.455 62.7321 cv
122.113 65.4039 125.471 66.5724 126.862 64.2555 cv
127.578 63.0636 127.756 61.5753 127.036 60.4186 cv
cp
f
49.8057 59.6398 mo
47.3858 60.5558 44.9492 61.4371 42.5586 62.4298 cv
41.9717 62.674 42.2705 63.5226 42.8828 63.36 cv
45.3858 62.6945 47.8574 61.9122 50.3379 61.1671 cv
51.333 60.8688 50.7852 59.2692 49.8057 59.6398 cv
cp
f
114.606 30.4591 mo
114.321 30.1525 113.888 29.984 113.362 30.1437 cv
113.252 30.1769 113.143 30.2052 113.033 30.2379 cv
113.463 29.9811 113.887 29.714 114.32 29.462 cv
114.506 29.3541 114.65 29.2213 114.776 29.0792 cv
114.841 29.591 114.789 30.0416 114.606 30.4591 cv
cp
105.239 27.8268 mo
106.029 27.5421 106.796 27.2511 107.545 26.9508 cv
107.616 27.0729 107.692 27.1901 107.772 27.3009 cv
106.914 27.5324 106.039 27.7345 105.239 27.8268 cv
cp
118.052 35.3908 mo
118.304 35.1315 118.562 34.8795 118.804 34.6119 cv
119.518 33.8468 119.299 32.8097 118.695 32.1549 cv
118.774 31.6159 118.778 31.0421 118.655 30.4137 cv
118.113 27.6364 116.464 25.4376 115.868 22.6046 cv
115.715 21.8751 115.756 21.2511 115.446 20.5607 cv
114.877 19.2916 114.145 19.4552 113.57 18.5377 cv
112.489 16.8112 109.523 17.4205 109.106 19.2511 cv
106.926 18.0031 104.242 18.3727 101.854 18.9005 cv
101.223 19.0402 100.635 19.7731 100.546 20.3942 cv
100.535 20.4689 100.526 20.5431 100.517 20.6173 cv
99.167 20.8595 97.8184 21.1022 96.4688 21.3444 cv
95.792 21.4655 95.3018 21.8258 94.9873 22.2897 cv
93.9463 22.5045 92.9141 22.7072 91.9004 22.8483 cv
86.6875 23.5729 81.4463 24.0704 76.2119 24.61 cv
68.3906 25.4171 60.5332 26.0055 52.6875 26.631 cv
49.8408 26.2096 46.7686 25.8698 44.9405 27.4152 cv
44.0821 28.1408 44.4629 29.5162 45.6582 29.5065 cv
48.8096 29.4806 51.959 29.4567 55.1065 29.4269 cv
56.001 29.5343 56.7461 29.61 57.1758 29.6012 cv
57.4463 29.5958 57.6631 29.5162 57.836 29.3947 cv
61.0303 29.3576 64.2256 29.3004 67.4199 29.2199 cv
66.3438 29.3263 65.2666 29.4244 64.1875 29.505 cv
63.208 29.5787 63.3086 31.0607 64.2881 31.0255 cv
74.0039 30.674 83.4932 29.026 93.0108 27.424 cv
92.8457 27.6964 92.7569 28.0079 92.751 28.3151 cv
91.7822 28.9772 90.8975 29.7023 90.1328 30.4962 cv
88.334 32.3634 90.5567 35.547 92.9336 34.6486 cv
96.0694 33.4635 98.9239 31.9918 101.494 30.0045 cv
101.71 30.1984 101.995 30.3732 102.374 30.5255 cv
102.431 30.548 102.494 30.5621 102.553 30.5822 cv
101.529 31.1027 100.505 31.6202 99.4776 32.129 cv
98.6797 32.5231 98.3164 33.4093 98.4033 34.1827 cv
97.9824 34.3917 97.5655 34.608 97.1436 34.8151 cv
96.5635 34.9967 95.9834 35.1793 95.4121 35.3566 cv
92.1055 36.3829 88.8194 37.4586 85.4883 38.4074 cv
82.5205 39.2526 78.3184 41.1823 75.2266 41.0812 cv
72.9297 41.0065 70.7364 38.8893 68.378 38.3951 cv
64.8535 37.6564 61.1153 37.6022 57.5391 37.2633 cv
51.0235 36.6466 44.6582 36.3922 38.1387 37.1671 cv
36.4991 37.3619 36.6651 39.7135 38.3076 39.716 cv
46.0225 39.7291 53.8418 40.4777 61.4434 41.7965 cv
64.1192 42.2609 66.8985 43.1744 69.6895 43.923 cv
67.4805 44.1334 65.2744 44.2535 63.0908 44.7575 cv
63.0352 44.7701 63 44.7994 62.9502 44.817 cv
62.9278 44.8136 62.9043 44.8112 62.8809 44.8073 cv
61.7959 44.5709 61.0655 45.2765 60.8369 46.1212 cv
58.8936 45.8483 56.9522 45.3883 54.9834 45.2648 cv
51.25 45.0304 47.6035 44.6202 43.9053 44.0695 cv
41.0801 43.6481 38.2569 43.2443 35.4502 42.7081 cv
35.4453 42.7067 35.4395 42.7052 35.4346 42.7037 cv
32.3428 41.8532 26.7422 41.2706 24.3907 39.0304 cv
23.6885 38.3615 22.3555 39.1935 22.7744 40.1198 cv
24.7295 44.4391 35.6367 45.4601 39.6787 46.4059 cv
43.044 47.1935 46.3741 47.8258 49.753 48.3698 cv
49.3448 48.3815 48.9375 48.403 48.5293 48.4074 cv
47.6914 48.4166 47.3164 49.0729 47.3614 49.7228 cv
47.0606 49.3917 46.6094 49.2203 46.1074 49.4161 cv
43.7285 50.3434 39.6055 49.6569 37.1182 49.5104 cv
33.9776 49.3253 30.8516 48.9147 27.7871 48.1842 cv
24.7803 47.4674 22.0196 46.296 19.1856 45.1007 cv
17.4043 44.3488 16.5 43.6788 14.6231 44.3214 cv
13.7442 44.6227 13.7217 46.1691 14.752 46.2609 cv
17.6241 46.5182 20.8457 49.3956 23.6582 50.381 cv
26.0606 51.2228 28.5381 51.8283 31.045 52.2658 cv
35.3545 53.0177 42.4424 54.4889 46.5586 52.7687 cv
47.0635 52.5577 47.5576 52.1276 47.6289 51.5465 cv
47.7178 50.8263 li
47.7276 50.7467 47.7217 50.6681 47.7188 50.5895 cv
47.9444 50.8414 48.2725 51.0094 48.7012 51.0035 cv
51.9942 50.9576 55.2168 50.8395 58.417 50.216 cv
60.794 50.8727 63.1748 51.4274 65.5801 51.1329 cv
67.0049 50.9586 67.7627 49.9098 67.8203 48.8141 cv
68.3809 48.7462 68.7569 48.4074 68.9541 47.9674 cv
74.4121 48.0123 80.334 46.3839 85.0801 44.8297 cv
87.583 44.0099 90.0352 43.0411 92.4551 41.9938 cv
94.0635 41.507 95.6494 40.9992 97.2012 40.4928 cv
99.5498 39.7262 102.215 38.9171 104.812 37.8981 cv
105.1 39.2448 106.411 40.485 107.87 39.7951 cv
108.404 39.5416 109.017 39.2892 109.667 39.0285 cv
109.734 39.235 109.83 39.4332 109.949 39.6159 cv
109.918 39.6588 109.888 39.7018 109.861 39.7448 cv
109.079 40.0221 108.29 40.2828 107.499 40.5402 cv
103.731 41.7633 99.9375 42.5656 96.0313 43.2135 cv
94.6875 43.4367 94.7754 45.5289 96.1739 45.3654 cv
101.512 44.7409 107.051 44.3209 112.1 42.3639 cv
114.71 41.3527 119.138 39.7609 119.105 36.3981 cv
119.099 35.8214 118.585 35.421 118.052 35.3908 cv
cp
f
99.0225 13.3366 mo
98.8789 13.4088 98.7334 13.4664 98.5899 13.5363 cv
98.5752 13.4962 98.5762 13.4479 98.5576 13.4108 cv
98.0498 12.3829 97.7842 11.9933 96.8115 11.4752 cv
95.6367 10.8502 92.7412 10.4801 91.6231 10.0651 cv
90.4815 9.64124 89.3526 9.20521 88.1953 8.82142 cv
83.6074 7.29896 78.6494 6.15833 73.7783 6.36244 cv
71.878 5.72572 69.9424 5.22718 67.9805 5.19495 cv
66.9131 5.17738 67.3399 7.02015 68.2588 6.56068 cv
68.9258 6.22718 70.1045 6.64613 71.2881 7.23597 cv
70.9541 7.96742 71.2207 8.96351 72.2158 9.17494 cv
73.542 9.45716 74.876 9.68177 76.21 9.89417 cv
77.4707 10.5426 78.7285 11.194 80.0039 11.8136 cv
76.6778 12.2247 72.6856 14.8707 71.377 16.7799 cv
71.1778 17.0709 71.0401 17.3898 70.9658 17.7145 cv
64.8155 18.3917 58.6602 18.7311 52.4551 18.8307 cv
51.9239 18.8395 51.5313 19.0343 51.2559 19.3229 cv
51.2491 19.3229 51.2422 19.3214 51.2354 19.3214 cv
50.3184 19.3405 49.4004 19.3595 48.4834 19.3785 cv
47.6465 19.3961 46.9883 20.2174 47.042 21.0245 cv
47.043 21.0392 47.0479 21.0524 47.0489 21.067 cv
45.4639 21.111 43.8789 21.0993 42.292 21.07 cv
38.753 20.86 35.2119 20.6901 31.6407 20.6847 cv
30.8936 20.6837 30.7647 21.8366 31.4141 22.0553 cv
31.4883 22.1193 31.5703 22.1735 31.667 22.2067 cv
35.5821 23.5592 39.7295 24.0265 43.9024 23.9464 cv
53.3887 25.4083 63.3731 26.4235 71.6319 22.5626 cv
71.6475 22.5553 71.6563 22.5431 71.6709 22.5353 cv
81.4473 22.5914 91.3545 20.2916 99.9483 15.9933 cv
101.543 15.1959 100.642 12.527 99.0225 13.3366 cv
cp
f
44.2471 112.784 mo
40.3438 110.089 35.5713 110.651 31.0186 110.71 cv
24.5801 110.793 18.2139 109.857 12.0987 107.839 cv
10.8516 107.426 10.1504 109.495 11.3467 110.013 cv
21.4795 114.406 32.7813 114.665 43.6914 114.424 cv
44.4512 114.408 44.9239 113.251 44.2471 112.784 cv
cp
f
123.576 89.4913 mo
121.615 92.8102 120.396 96.4235 119.157 100.061 cv
118.837 101.001 118.464 102.014 118.109 103.061 cv
117.911 102.838 117.713 102.609 117.571 102.399 cv
118.425 100.423 116.041 97.8971 113.862 98.6671 cv
113.272 98.8375 112.684 99.0079 112.094 99.1784 cv
111.475 98.9869 110.748 99.0724 110.23 99.4078 cv
107.01 101.489 102.796 102.886 99.084 104.468 cv
98.4785 103.904 97.5606 103.703 96.6465 104.299 cv
95.3731 105.13 94.253 105.902 93.1944 106.766 cv
92.3545 107.278 91.4727 107.825 90.6924 108.403 cv
89.543 108.963 88.3975 109.53 87.2608 110.122 cv
86.0176 110.768 87.1035 112.507 88.3311 112.136 cv
88.3623 112.276 88.4072 112.417 88.4707 112.559 cv
89.0088 113.776 90.2969 114.251 91.4678 113.553 cv
93.7901 112.17 96.1602 110.907 98.6397 109.824 cv
99.4844 109.454 100.338 109.107 101.199 108.776 cv
100.482 109.492 99.6905 110.151 98.8291 110.776 cv
97.8438 111.49 96.6377 112.073 96.5479 113.438 cv
96.46 114.787 97.2842 115.382 98.4463 115.591 cv
97.4014 115.74 96.4053 115.841 95.5947 115.946 cv
91.8799 116.428 88.4932 116.504 84.7471 116.244 cv
81.7549 116.037 78.8467 116.276 75.958 116.671 cv
75.6153 115.438 74.4307 114.447 72.6123 114.86 cv
66.5235 116.241 60.4746 117.219 54.2393 117.575 cv
53.2461 117.631 52.583 118.123 52.2149 118.781 cv
51.961 118.781 51.7071 118.783 51.4532 118.784 cv
51.9405 118.013 51.5244 116.828 50.2998 116.765 cv
43.9864 116.441 38.2041 116.565 32.0625 114.718 cv
30.625 114.286 30.1875 116.55 31.5948 116.991 cv
34.8867 118.023 38.5489 118.995 42.2158 119.454 cv
35.4366 120.324 29.3926 120.637 22.4951 119.159 cv
21.4287 118.93 20.835 120.284 21.584 120.994 cv
22.2217 121.598 li
22.4405 121.805 22.7012 121.862 22.9541 121.829 cv
28.4092 124.819 35.0977 124.342 41.1758 123.61 cv
41.2881 123.609 41.4004 123.614 41.5127 123.612 cv
44.0791 123.568 46.9658 123.565 49.5157 122.813 cv
49.5762 122.809 49.6367 122.806 49.6973 122.802 cv
53.7324 123.189 57.7657 122.872 61.7735 122.276 cv
64.3008 121.985 66.8125 121.587 69.3096 121.093 cv
74.1914 120.267 79.0108 119.365 83.9893 119.93 cv
87.4112 120.318 90.7071 120.842 94.1787 120.703 cv
99.0156 120.508 103.775 120.123 106.062 115.959 cv
109.821 114.665 113.821 112.887 116.696 110.239 cv
116.744 110.195 116.79 110.148 116.838 110.103 cv
116.863 110.403 116.898 110.7 116.957 110.992 cv
117.069 111.555 117.67 111.804 118.105 111.381 cv
120.402 109.144 121.311 105.311 122.328 102.312 cv
123.67 98.3595 125.105 94.3781 125.772 90.2506 cv
125.99 88.9113 124.25 88.3507 123.576 89.4913 cv
cp
f
116.162 125.528 mo
107.918 128.696 98.2754 132.013 91.585 137.993 cv
89.8057 139.03 88.0518 140.124 86.1758 140.981 cv
82.0088 142.884 77.8496 144.025 73.2471 144.237 cv
65.0381 144.615 57.6319 144.456 49.5938 146.498 cv
49.4375 146.537 49.3096 146.608 49.2012 146.694 cv
49.4756 146.531 49.7442 146.366 50.003 146.202 cv
50.961 145.594 50.1748 143.939 49.0957 144.395 cv
47.2188 145.188 45.6377 145.297 43.667 144.837 cv
42.6758 144.606 41.1299 144.606 41.4434 146.109 cv
41.7549 147.606 43.8291 148.134 45.1162 148.12 cv
46.5459 148.105 47.9326 147.446 49.1778 146.708 cv
48.4033 147.363 48.8867 149.062 50.0752 148.865 cv
54.666 148.102 59.1992 147.476 63.8633 147.555 cv
68.6504 147.636 73.4121 148.105 78.1709 147.324 cv
80.2442 146.984 82.3965 146.38 84.5176 145.564 cv
84.5537 145.8 84.6289 146.027 84.7334 146.239 cv
82.1739 147.083 79.6035 147.9 77.086 148.813 cv
76.5371 149.012 76.7451 149.749 77.2803 149.769 cv
83.9405 150.014 89.8526 147.946 95.626 145.228 cv
97.7061 144.571 99.7012 143.443 101.578 142.251 cv
101.806 142.133 102.033 142.015 102.262 141.898 cv
102.472 141.789 102.628 141.651 102.744 141.498 cv
103.203 141.197 103.656 140.898 104.099 140.608 cv
106.312 139.158 108.498 137.608 110.582 135.939 cv
113.58 134.048 116.514 131.954 118.691 129.278 cv
120.106 127.539 118.43 124.657 116.162 125.528 cv
cp
f
126.251 64.8571 mo
125.212 63.3698 122.905 63.9318 121.874 61.2804 cv
121.861 61.2482 121.844 61.2238 121.83 61.1935 cv
123.35 60.4469 124.813 59.5934 126.129 58.6002 cv
126.243 60.6779 126.267 62.7672 126.251 64.8571 cv
cp
122.602 68.1427 mo
122.824 73.5739 121.609 79.3283 121.61 84.8214 cv
121.61 85.1915 121.699 85.4957 121.84 85.7496 cv
120.919 88.9884 119.729 92.2267 118.623 95.4865 cv
112.732 96.6627 106.877 97.9083 101.279 99.9601 cv
104.063 96.4088 105.311 92.0802 103.022 87.1779 cv
97.9756 76.3683 82.7969 81.4108 74.3408 85.3326 cv
73.9453 85.1608 73.4707 85.1329 72.9375 85.3502 cv
64.0664 88.9684 57.166 98.5411 62.7071 108.017 cv
62.9932 108.506 63.3086 108.943 63.6397 109.354 cv
55.0059 109.354 45.7344 110.723 36.7764 110.72 cv
38.0313 110.053 39.1094 109.137 39.8819 107.89 cv
43.8916 101.413 36.4746 93.7936 31.4912 90.6378 cv
28.1807 88.5407 23.628 85.7789 19.5742 85.7199 cv
16.1807 85.6705 13.2364 88.3385 11.0742 90.6857 cv
10.4483 91.3654 10.4385 92.1359 10.7569 92.7623 cv
10.1231 97.6344 11.5401 102.191 14.5713 105.666 cv
12.9737 104.719 11.4248 103.61 9.93558 102.309 cv
9.60159 102.017 9.2471 101.872 8.89749 101.829 cv
8.45413 94.9459 10.126 88.1759 9.52933 81.2584 cv
9.45316 80.3707 9.30569 79.4616 9.13089 78.5436 cv
9.86136 78.2648 10.4668 77.6232 10.4961 76.6442 cv
10.5742 74.0206 10.6524 71.3971 10.7315 68.7736 cv
15.8907 70.7164 21.3858 71.3605 27.5479 71.2775 cv
33.1602 71.2023 38.5205 71.5226 44.0821 72.2452 cv
48.7246 72.8483 53.1201 72.8732 57.669 71.6202 cv
63.6631 69.9699 68.6153 68.2623 74.9649 68.8258 cv
76.8662 68.9948 78.7715 69.234 80.6778 69.402 cv
80.3604 69.4909 80.0459 69.5856 79.7393 69.6906 cv
70.6865 72.7877 60.7324 78.2731 55.2959 86.3239 cv
55.0616 86.672 54.9561 87.0338 54.9346 87.3878 cv
53.4922 89.0758 53.7198 91.5104 55.667 92.8629 cv
58.7334 94.9938 62.128 92.2418 64.4541 90.3634 cv
68.9434 86.7389 73.0254 82.8312 78.5186 80.7501 cv
81.9072 79.4664 88.5215 79.901 91.0205 76.8444 cv
92.7237 74.7609 91.5967 72.1017 89.7364 70.587 cv
89.083 70.0553 88.3711 69.6676 87.624 69.3912 cv
88.0381 69.338 88.4522 69.2882 88.8662 69.2091 cv
93.9776 68.2321 98.2266 64.8156 103.474 64.3795 cv
108.593 63.9547 113.25 64.3908 118.157 62.7389 cv
118.678 64.0382 119.315 65.1461 120.473 66.0133 cv
120.959 66.3781 121.625 66.5382 122.083 66.8864 cv
122.33 66.9801 122.584 67.0514 122.845 67.1007 cv
123.688 67.1466 123.606 67.4938 122.602 68.1427 cv
cp
65.0362 98.1564 mo
65.9072 94.3507 69.2178 91.5831 72.6358 89.8659 cv
73.0489 90.087 73.5674 90.1173 74.1533 89.8292 cv
80.3965 86.7565 88.8506 82.5875 95.8526 85.7203 cv
100.37 87.7418 101.095 92.7731 98.8076 96.7658 cv
96.7832 100.299 93.0742 102.311 89.544 104.025 cv
83.958 106.736 76.6475 110.297 70.2774 108.735 cv
65.7285 107.619 64.0606 102.42 65.0362 98.1564 cv
cp
29.2061 93.9254 mo
33.3037 96.5739 40.5987 102.964 34.4649 107.207 cv
31.0576 109.564 24.1963 107.705 20.9649 105.837 cv
16.0762 103.012 13.8252 98.0519 14.8369 92.5538 cv
17.0147 90.466 19.4688 89.359 22.6104 90.6022 cv
23.3653 90.9005 24.1153 91.235 24.8594 91.5836 cv
25.0117 91.57 25.17 91.5797 25.3418 91.6632 cv
26.7207 92.3351 28.1309 93.1393 29.3184 94.1627 cv
29.2803 94.0846 29.2461 94.0006 29.2061 93.9254 cv
cp
115.746 107.724 mo
115.712 108.192 115.818 108.6 116.014 108.941 cv
108.59 114.909 100.186 120.444 90.4102 121.049 cv
86.0401 121.32 82.001 119.97 77.6963 119.773 cv
73.4912 119.58 69.4776 120.747 65.4571 121.805 cv
59.7344 123.312 55.2022 123.312 49.3614 122.72 cv
45.6133 122.34 42.2559 123.05 38.5645 123.637 cv
33.1621 124.496 29.2422 122.15 24.1895 121.017 cv
20.9102 120.282 17.5723 120.549 14.2813 121.045 cv
12.0332 116.598 10.3438 111.927 9.41409 107.01 cv
24.2344 118.053 43.5381 113.812 60.8535 113.364 cv
70.669 113.11 79.8418 115.169 88.9922 110.58 cv
93.5733 108.282 97.7725 105.435 102.612 103.647 cv
107.357 101.894 112.31 100.804 117.262 99.8038 cv
116.515 102.421 115.94 105.056 115.746 107.724 cv
cp
114.811 124.35 mo
114.828 124.778 114.96 125.12 115.156 125.394 cv
112.347 127.177 108.054 127.303 104.981 128.296 cv
101.582 129.394 98.3008 130.828 95.1319 132.472 cv
87.4717 136.445 81.377 142.672 72.3164 142.805 cv
63.4385 142.936 54.5469 142.866 45.667 142.863 cv
40.8682 142.861 37.8994 141.154 33.6914 139.227 cv
29.8731 137.48 25.9766 136.294 22.7598 133.47 cv
22.4258 133.177 22.0713 133.032 21.7227 132.988 cv
20.3213 131.1 19.0196 129.129 17.7705 127.162 cv
17.8301 127.164 17.8819 127.175 17.9395 127.178 cv
17.4053 126.459 16.9082 125.714 16.4492 124.903 cv
20.2588 124.631 23.7871 124.997 27.8086 126.421 cv
31.9444 127.885 35.3321 128.267 39.6641 127.463 cv
44.7285 126.522 49.0498 126.915 54.1377 127.322 cv
58.4991 127.671 62.5908 126.695 66.7725 125.584 cv
72.4864 124.065 77.0127 123.632 82.8643 124.559 cv
86.8819 125.195 90.8106 125.261 94.8233 124.476 cv
102.44 122.985 109.109 119.167 115.238 114.593 cv
114.814 117.817 114.673 121.054 114.811 124.35 cv
cp
82.9199 148.476 mo
70.7881 150.092 57.2471 150.241 44.9112 147.298 cv
44.7647 147.336 44.6045 147.347 44.416 147.289 cv
43.8399 147.113 43.2657 146.984 42.6905 146.861 cv
46.5996 147.193 50.6797 146.844 54.5606 146.837 cv
59.9942 146.826 65.4278 146.823 70.8614 146.804 cv
74.8076 146.79 78.4805 146.618 82.1143 144.942 cv
85.9688 143.164 89.3028 140.471 92.9199 138.282 cv
97.1358 135.731 101.606 133.596 106.298 132.074 cv
108.994 131.199 112.191 130.953 114.954 129.948 cv
107.197 140.089 95.6944 146.774 82.9199 148.476 cv
cp
6.80374 66.9996 mo
6.80374 67.0099 6.80081 67.0187 6.79984 67.0289 cv
6.7803 67.6925 6.76077 68.3566 6.74027 69.0201 cv
6.55081 68.2418 6.37112 67.4645 6.22073 66.6915 cv
6.41409 66.799 6.60941 66.8971 6.80374 66.9996 cv
cp
58.8828 88.1686 mo
61.8838 84.0529 65.8233 81.0372 70.2891 78.5582 cv
72.8145 77.1564 75.4365 75.9147 78.0723 74.734 cv
79.7871 73.966 81.7559 72.964 83.6524 72.8336 cv
85.7071 72.9767 li
87.5449 74.2301 87.6367 74.84 85.9834 74.8068 cv
84.5772 75.8165 80.4278 75.921 78.7608 76.444 cv
76.503 77.1525 74.3467 78.0885 72.2989 79.2745 cv
69.9981 80.608 67.9287 82.2745 65.8897 83.9728 cv
63.5381 85.9318 60.4912 87.6334 58.2998 89.6237 cv
58.8008 89.1681 58.9541 88.652 58.8828 88.1686 cv
cp
5.81937 59.9044 mo
5.98636 59.6735 6.10843 59.3873 6.15433 59.0275 cv
6.5557 55.8634 7.28226 52.6891 8.26468 49.5553 cv
8.93362 49.2496 9.78519 49.1461 10.9053 49.3414 cv
12.8672 49.6847 15.375 51.4249 17.2842 52.1359 cv
19.0772 52.8034 20.9034 53.3981 22.7481 53.9039 cv
31.166 56.2111 39.9092 56.5177 48.544 55.4596 cv
57.6592 54.3424 66.4961 51.84 75.4737 50.0035 cv
84.2901 48.1998 93.0899 50.5382 101.805 48.5407 cv
105.196 47.7633 108.466 46.4757 111.476 44.7277 cv
114.19 43.1515 117.954 38.8463 121.547 38.1686 cv
123.799 43.0875 125.066 48.3453 125.71 53.7433 cv
122.16 57.2877 116.819 59.484 111.938 60.1622 cv
108.255 60.6744 104.501 59.9811 100.846 60.6915 cv
96.7197 61.4943 93.2578 64.0324 89.2178 65.0656 cv
80.8272 67.2116 72.1885 63.3659 63.6553 65.589 cv
58.3262 66.9777 53.6172 69.0421 47.9795 68.6461 cv
43.3604 68.3219 38.836 67.3453 34.1914 67.2296 cv
29.2207 67.1061 24.21 67.63 19.2539 67.0724 cv
14.167 66.5006 9.76859 64.5729 5.71195 61.7179 cv
5.71878 61.1076 5.74515 60.5011 5.81937 59.9044 cv
cp
13.1846 38.0172 mo
29.292 46.1066 47.378 42.8693 64.5762 46.0216 cv
66.3789 46.3522 68.1123 46.6906 69.8067 46.9952 cv
64.502 48.214 59.2285 49.6823 53.9951 50.6002 cv
40.7344 52.9264 27.4629 52.5475 15.0469 46.8912 cv
13.4395 46.1593 11.708 45.1774 9.97757 44.755 cv
10.9112 42.4611 11.9903 40.2101 13.1846 38.0172 cv
cp
21.833 25.6373 mo
23.1309 25.5206 24.503 25.5514 25.7207 25.5045 cv
30.5401 25.318 35.0782 26.3375 39.8194 26.9454 cv
48.0391 27.9992 56.292 27.3395 64.5078 26.6115 cv
72.6084 25.8942 80.7256 25.1539 88.7129 23.5734 cv
92.9756 22.7296 97.1026 21.5475 101.262 20.3136 cv
102.788 19.8605 104.511 19.235 106.231 18.84 cv
109.17 21.4718 111.929 24.3966 114.397 27.3204 cv
112.294 30.424 107.202 32.442 104.165 34.233 cv
100.121 36.6173 96.0283 39.0299 91.7432 40.9552 cv
87.5703 42.8297 83.1289 44.3649 78.5039 44.3898 cv
74.0283 44.4142 69.7373 42.9015 65.3819 42.1027 cv
48.6709 39.0392 30.8662 42.2824 15.2061 34.5543 cv
17.1787 31.3917 19.4043 28.3947 21.833 25.6373 cv
cp
29.6582 18.1588 mo
42.8125 7.72523 60.2959 4.65931 76.6602 6.68812 cv
84.2119 7.62464 92.3262 9.12269 98.8662 13.2135 cv
100.104 13.9874 101.322 14.8659 102.528 15.7877 cv
102.277 15.8551 102.025 15.9225 101.777 15.9909 cv
92.0205 18.672 82.5703 20.8195 72.4756 21.8507 cv
62.6016 22.859 52.3965 24.2174 42.4737 23.2404 cv
37.5918 22.7599 31.7608 21.3175 26.2051 21.1373 cv
27.3282 20.0934 28.4776 19.0949 29.6582 18.1588 cv
cp
115.335 22.5592 mo
115.204 22.422 115.077 22.2828 114.946 22.1466 cv
113.914 21.0753 112.867 19.9972 111.804 18.9298 cv
113.736 19.587 114.955 20.8698 115.335 22.5592 cv
cp
116.976 30.5304 mo
117.916 31.7741 118.781 33.0465 119.554 34.3532 cv
119.233 34.4703 118.908 34.5997 118.573 34.7565 cv
114.266 36.7731 111.182 40.6769 106.754 42.6852 cv
101.863 44.903 97.1045 45.3336 92.0664 45.1989 cv
99.3115 42.1998 106.164 37.8283 112.723 33.6954 cv
114.403 32.6364 115.838 31.609 116.976 30.5304 cv
cp
129.887 54.7745 mo
131.639 52.2423 132.497 49.1964 131.814 45.5704 cv
130.964 41.0504 128.899 36.0372 125.204 34.3663 cv
125.2 34.3004 125.209 34.2369 125.2 34.1701 cv
125.063 33.1881 124.508 32.2575 124.065 31.3834 cv
123.032 29.3414 121.813 27.4308 120.418 25.6178 cv
120.22 25.3595 119.992 25.172 119.75 25.0421 cv
119.813 23.3732 119.322 21.463 118.12 19.1588 cv
116.139 15.3595 112.911 14.3698 109.362 14.5309 cv
109.373 14.191 109.306 13.8356 109.117 13.4777 cv
105.926 7.45228 96.1377 5.35511 90.1836 3.30042 cv
81.8272 .417611 74.169 -.510612 65.3701 .258431 cv
56.3614 1.04603 47.4268 2.89906 38.8506 5.76429 cv
35.0996 7.01722 31.1836 8.3473 28.0078 10.7848 cv
24.5606 13.4308 21.9522 17.1725 19.1905 20.4786 cv
18.791 20.9572 18.669 21.4733 18.7305 21.9547 cv
17.9825 22.171 17.25 22.4313 16.545 22.7614 cv
13.1416 24.3551 8.85257 30.1608 10.0352 34.2833 cv
8.36038 36.2965 7.46878 38.6979 6.39359 41.0905 cv
5.46976 43.1442 4.10159 44.8463 4.0762 46.9576 cv
1.4512 50.444 .901399 56.5973 .364289 60.3922 cv
.36136 60.4098 .364289 60.4254 .362336 60.4435 cv
-.145476 61.1876 -.196257 62.2052 .709016 62.9445 cv
1.07913 63.2467 1.45023 63.528 1.8223 63.8107 cv
2.38577 69.109 4.69339 74.3834 5.3389 79.6207 cv
6.30081 87.4318 4.2803 95.0299 4.95413 102.815 cv
4.9639 102.917 4.98734 103.008 5.00882 103.102 cv
4.91312 103.361 4.87112 103.66 4.91116 104.004 cv
5.64261 110.346 7.58304 116.42 10.3399 122.131 cv
9.20609 123.366 9.76077 125.838 11.7862 125.487 cv
11.876 125.472 11.96 125.462 12.0489 125.446 cv
14.7627 130.371 18.0606 134.998 21.6934 139.248 cv
30.4678 149.515 45.2237 152.212 58.0899 153.088 cv
71.5196 154.001 86.461 153.896 98.8487 148.018 cv
108.751 143.318 117.032 135.475 122.355 125.898 cv
121.294 125.075 120.192 124.301 119.081 123.545 cv
118.992 123.713 118.894 123.877 118.801 124.043 cv
118.605 119.305 119.034 114.81 120.09 110.196 cv
120.225 109.606 120.027 109.019 119.658 108.569 cv
119.659 108.555 119.664 108.545 119.665 108.53 cv
120.182 101.444 123.383 94.5006 125.466 87.611 cv
126.397 87.3771 127.314 87.0919 128.214 86.7438 cv
128.35 85.3258 128.505 83.9108 128.712 82.5026 cv
128.799 82.4957 128.886 82.4865 128.973 82.4821 cv
128.969 82.3571 128.966 82.2311 128.962 82.1061 cv
129.516 81.5851 129.595 80.8908 129.378 80.2687 cv
129.462 79.3092 129.544 78.3463 129.623 77.381 cv
129.762 76.692 129.893 76.0011 130.047 75.3146 cv
130.164 74.7897 130.079 74.3444 129.878 73.9835 cv
130.322 67.5885 130.502 61.1232 129.887 54.7745 cv
cp
.156863 .113725 .113725 rgb
f
122.226 127.088 mo
122.856 125.288 123.387 123.479 123.76 121.608 cv
124.263 119.08 120.344 118.276 119.841 120.801 cv
119.537 122.323 119.159 123.837 118.646 125.301 cv
118.289 126.32 118.492 127.46 119.543 127.985 cv
120.414 128.42 121.866 128.112 122.226 127.088 cv
122.226 127.088 li
cp
f
118.608 120.655 mo
129.24 123.548 136.662 113.38 140.729 105.026 cv
141.856 102.708 138.276 100.923 137.148 103.24 cv
133.907 109.899 128.168 119.118 119.415 116.736 cv
116.926 116.059 116.136 119.983 118.608 120.655 cv
118.608 120.655 li
cp
f
139.895 101.608 mo
139.088 101.248 137.357 100.687 137.223 99.6242 cv
137.077 98.4786 138.73 98.0201 139.53 97.8058 cv
142.015 97.1403 140.694 93.3629 138.215 94.0275 cv
135.675 94.7081 133.228 96.6237 133.226 99.4782 cv
133.224 102.413 135.701 104.112 138.109 105.188 cv
140.458 106.237 142.249 102.659 139.895 101.608 cv
139.895 101.608 li
cp
f
141.133 95.5402 mo
140.416 91.7701 138.624 89.3659 134.837 88.1383 cv
131.195 86.9576 128.128 89.1432 125.617 91.5485 cv
126.784 91.9435 127.951 92.3385 129.118 92.7335 cv
129.111 92.5451 129.105 92.3561 129.098 92.1676 cv
129.004 89.5934 125.013 89.86 125.105 92.4323 cv
125.113 92.6207 125.12 92.8097 125.127 92.9982 cv
125.194 94.8619 127.448 95.3131 128.627 94.1837 cv
129.957 92.9088 131.467 91.5172 133.433 91.9352 cv
135.55 92.3854 136.754 93.7653 137.142 95.8048 cv
137.616 98.3014 141.613 98.0675 141.133 95.5402 cv
141.133 95.5402 li
cp
f
125.434 85.5905 mo
124.809 91.2579 123.689 96.7843 122.004 102.234 cv
120.427 107.333 118.855 112.147 119.142 117.543 cv
119.278 120.114 123.27 119.851 123.133 117.278 cv
122.834 111.659 124.896 106.622 126.443 101.325 cv
127.873 96.4352 128.795 91.4567 129.353 86.3961 cv
129.633 83.8551 125.716 83.0319 125.434 85.5905 cv
125.434 85.5905 li
cp
f
129.958 104.786 mo
130.263 104.347 129.511 104.975 129.38 104.995 cv
129.17 105.028 128.777 104.668 128.681 104.693 cv
128.468 104.748 128.858 104.537 128.564 104.79 cv
128.414 104.92 128.257 105.319 128.115 105.488 cv
127.852 105.803 127.562 106.094 127.271 106.384 cv
126.505 107.148 126.684 108.529 127.457 109.207 cv
128.316 109.959 129.513 109.785 130.279 109.02 cv
131.793 107.51 133.165 105.489 132.386 103.255 cv
131.63 101.088 128.428 100.022 126.948 102.151 cv
126.333 103.037 126.259 104.205 127.136 104.973 cv
127.878 105.623 129.338 105.678 129.958 104.786 cv
129.958 104.786 li
cp
f
27.9405 98.151 mo
27.7647 96.9489 27.5479 95.5704 26.4785 94.8297 cv
25.2354 93.9689 23.7227 94.5123 22.8887 95.6466 cv
21.5303 97.4909 21.5772 100.215 23.0117 102.007 cv
23.5655 102.698 24.4434 103.036 25.2637 102.785 cv
26.0987 102.822 26.9151 102.489 27.4678 101.78 cv
28.251 100.774 28.1143 99.341 27.9405 98.151 cv
cp
f
72.2656 93.9752 mo
72.2197 93.9899 72.1807 94.0128 72.1358 94.0289 cv
71.544 94.0822 70.9678 94.381 70.5899 95.0294 cv
69.1563 97.484 68.5752 101.634 71.4385 103.345 cv
72.6455 104.067 74.1377 104.087 75.3067 103.273 cv
76.502 102.44 76.9014 100.979 76.9541 99.5988 cv
77.0498 97.0739 75.6289 92.921 72.2656 93.9752 cv
cp
f
63.7852 132.694 mo
65.3125 132.568 65.1338 135.08 64.9854 136.033 cv
63.8877 135.882 62.7754 135.793 61.6543 135.742 cv
61.7578 134.768 62.7627 132.779 63.7852 132.694 cv
cp
47.6494 134.892 mo
46.1973 134.67 44.7188 134.47 43.2686 134.413 cv
43.2617 134.392 43.2608 134.373 43.253 134.351 cv
42.6817 132.715 45.3574 132.161 46.4561 132.081 cv
48.1748 131.957 47.9776 133.652 47.6494 134.892 cv
cp
71.3721 137.984 mo
70.5655 137.551 69.7364 137.207 68.8906 136.923 cv
69.4883 133.418 68.2002 128.617 63.8047 128.698 cv
60.3946 128.761 57.9395 132.507 57.6719 135.664 cv
55.8496 135.652 54.0342 135.643 52.2647 135.51 cv
52.0537 135.494 51.8369 135.471 51.6211 135.449 cv
52.4424 131.723 50.544 127.709 46.1914 128.09 cv
42.584 128.406 38.5176 130.835 39.2422 134.779 cv
38.1455 135.065 37.1045 135.524 36.1602 136.252 cv
34.1319 137.816 36.3565 141.142 38.4024 139.565 cv
41.8428 136.913 49.1455 139.299 53.1807 139.56 cv
58.5508 139.907 64.7129 138.951 69.586 141.564 cv
71.8614 142.783 73.6387 139.198 71.3721 137.984 cv
cp
f
28.2744 83.7301 mo
25.2071 82.1998 21.9024 81.4362 18.7959 80.0856 cv
16.8594 79.7306 16.7159 79.5856 18.3653 79.6495 cv
19.4942 79.2789 20.6485 79.1007 21.8291 79.1149 cv
23.5332 79.0338 25.3057 79.2257 26.9639 79.5958 cv
30.877 80.4684 37.542 84.8302 37.6026 89.7365 cv
34.6787 87.4518 31.6026 85.3908 28.2744 83.7301 cv
cp
18.6006 75.4464 mo
15.5557 76.1681 10.6319 79.5973 14.4102 82.6842 cv
16.6123 84.4835 20.9932 84.8737 23.5674 85.9611 cv
27.8848 87.7848 31.8252 90.2291 35.4893 93.1432 cv
35.9795 93.5333 36.5069 93.6466 36.9961 93.5763 cv
37.503 95.0587 39.834 95.7306 40.669 93.9142 cv
46.1866 81.9181 28.2842 73.1505 18.6006 75.4464 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (4_head.eps)
%%CreationDate: 11/11/2019 10:29 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C=Xuko$P6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7;/>>@NisPe;(?b("eXO!">]-ia.umr,tUF5g2B54S!?PS:2j=08?MbEaYm%_26-lKJg4DI:-Riq9@M\)2[b
%GkM!blgK>.48ecnbM@*.Hn2sWZMWq\q=@[;g$PCrH2;0ak5&0Dl^MP5Df8sqIduLD/mg2H$t&VcJ,!?QOrN?*CbK/ql@h'CH2H``
%]UmmtVuPiP^YI.rPZAhirQ!gQIf&L/2m8jdH1pObs8!U.^&D$_>CUqqh%Ta@ge9n0Nh=HIGK8HfIe(DJ2u:bSHC"L!c-LRC`IH_B
%mQ7e'c`=?6aRNC!d(d+P)Z&uFLO[n(mf!NBp:IPeqOB4Q38tf^:WU^3-Mb'Y$f%9XT]N)!8bV*.=5U]9o(p\i^W-oF\j+uaq!RsA
%2n(jCcK2+B.p_^I8PZnIeh<;NjCQl,X-0%.Q/Ji49QFliiG,@?jALh95,Vp-X\s6;j0RLTr*oEXDkDDuqq?_`qXp=2TDed6"EK,F
%=+$4t_c:_0fEo=miVDm,IsCeUNI5AN>LO2`c)Yc#T?DBCNGb=PU!-3da8aj2IsCP\gY4Y2ri_pnJ,tt^=ShK8qnn>!5PaUs`7["p
%b4!'VIJJY"s+BdqMFU1f?+NX.?Er'eEtM<#-Uc1^r]nV`h%mK8%Jmc]h&hHi(F&IcHi<<cB.nb^6Jh[R(2q[\Q`m$0Zd&c#M5pU7
%_li:sDsRGWgIl1lH#rkgGEDE'++?#jX6&V*?fKJ2Qerch]tjDjO2(*o7_P&.pAEIMp=o6nr12X&L[XTqf^SQP?c`Jt?K/tc+8o5i
%=24aoq%*&>?bV!^_frkAq9Q5c5PjX;2m<5FG5"4=T>#UD>"8FZh=(@-J'22J[ehN:r9b*!T0/BcaPY#u=&5E9pTo)!:qlPom7r-]
%fCH-DrsuYH'S>PGo`j,rHMQUgo2jgD2qIRAElTi)5C*(coo?d(2uN?T+6>FWUn?4Bil'S1IsfU+7=;h5DW+lGcIr0REl.ILLHOkR
%cX,J="l#W]Ie/n-YQ'O^HiEpJlJ5OFYAXBdmCVf]je$JK4T3b)4g"C0n+t"e2h.!5k4[mqhiD*j^TK_Y?IuW@I/2aCoB4H6IJr6=
%5<XA)gV<aHq`jKInESQqEVBjU+&A>Ta'[fJLHP4P^V9K@=3mLes'e*&DYZW1kLn>I[pT.-q_ttpP<M\;f.VXJ;Z#YF=4diB+!CDY
%YBd=\s-J/f\E_M+jHon<T(:uAp<9@GCk"=6A'P#XT@*u?oZ]1[]_<hQ\"<3Q?_3'/q":tCHH/EB2uiKUQXW2G^AQsCS(i('^3];i
%XP2KsIsU\A/S@gCo?6fml"aGLjq[4F5C`Q6->WPYja>3(?U+AKRB2^hO<mB?)!TK)62l0<I=HV@;BBni?.S>GgOJhid6BgDZs4na
%Rh,:XbH50[GPK?*<ZD(#!e0X:/>e/_r+0&8IJbM]Ie*12od@>moJ4%-)qYpPP?krDY2<]$G7YuVM64*8\.@q^Y<VS9qsQc7:!tD7
%On@&inO[%ShdV(?-+43;4bEIJ&$N`pIf"?$hn=L0nlr2bk:Kos>F+2O`h,R1)a<4VXTe1`-iTs^i$^4gqN**l93WAglB:c=4FVCC
%YEKsr3aDPt-caY1EZEiJ>rV]2Q<S+/L$"kgA#ZAPXSXK^W28VpWu":cVB"Z17DuLm&kaW*hoKf%A"Viu\Rtc8*-92-%[WNpU`2<h
%kpXRqmH'F"V4*8].7H7EOr9Be]TM4g%s#al`YRYJ1#mp(jR@/G9=P9U3KE&@LO;j1Tup5a4:im^=F'_o"mMV_p_t8%3KF(]a'OdA
%0-BGZ065tsPF#L#ku@HjhnUm)gl4D;EKjrd*O_;0OfoO_-urjbj:F7B%UA"Z)`^[:;3$;,]3h`&BKW:7R7CGT*C1e;psK,bd?,5d
%j7(Otq9#2ApTp07lu2Bs*@Li5Jjdc]&+\V1*7t)$r-Q+qHPt1YOX'6LL1)1b5aUD_Dr`n"EKC:#MdTdkOW-iO#T1-VA;AU^DWEd7
%r#Fe5M%C=4$VCt@8>QS6Ij<!2AEb5WT(6u/nKYa^jXSl8i=kGgq1=:M7AT9LNq2X)rk"Ns?H^aWh^\XXo%sMbJS9l;Gmm2Gb*$Za
%58$OMae@.-OFR"Lr?7Lrj>)X(68lGt69^s^kD`%]rY7H\UU,@-T6K)<M0rju])?YiMo\s8akOFk#YYe$D),@oY_[r[l*`r=ME&`5
%M,?I;`I0kF,mB\j<G'l<S`K["I!(QX392%CW?Cf@8m`W./=k#M/7WZO,BP0j'kI6"BS9lZ^6F`i1@eEjiGa4X^(D7Q+u)N^kZVN^
%,dQTD$:a9[,(nV[LVm!-h]7>k@Qqp:phr<%+8<h9;=5j].@_$3Hn(k>Y"si%;%EQ8OX]?[!FRU[<((i^c$h^62lCX83B@NQ#XZGT
%JIk,7U'Ob^:QmH.YX.KU7JJ!Y7uAPZ]hm*B(BfV4Jt,)b+$UBX`m;&7`h#MGUq44TXJYjdS.:ZR'f&hZ!1=/gfisd`AMW)Gj5`)l
%NY=#2AW/VA1+-PM"#r=8S>qsb-VS5t0.)(N:/2$36$>+Hqc]6(2(h/'bAfSu*,_EtA,o$HaWNu3OpqR!69YFR,_LXUNp-3^H?=_(
%'E'=0LCB5W?OdSN8@f*L/]37.>)*Fe[G3`V<meosaCO/aY[_VHfmW_<4I#q5#?.Us"/+TBJp87f(X356MIf&+(ZL>pO]sFMQ,;>'
%e`\tq-k;cC8'2Gc%INF?TeWf,_%W_-VL3rTTaJS#mAUp4<"UM!(fZ8]&<mIO"'J-m=R]^'>c;V7GT,,ZSdXJ=lKQ4t<lphB:S^dN
%>G?0(o%,1,QGG2-ZQ'1liK-GW<_B+-j=H9;O$b,iON:QO]2['rBp..>7jR%913"nT`.ZC`X\kn7M]=;m;^W0CK1O\'4LWD1BBf7@
%&rD<UiF7EcAoET#fo+B(6PR)43%c[.Go@H_CG$u'QP2/B(AS"K+U9ejY_^M8#aQ!H;s>kb*nSgXQ&A+p4q:gOqI4H+Ohi5m`?B;B
%d%t10P&TJkE6VseA9l4(TK!i;-SnH!bq-sn97f^0P;O:+a\a=,:QqTC8J5a!3&O7Fe:9ij2ff,A82=,^d0NV@6VWV6ZQkm[iQTe2
%b&iE4dBEsuF>elg)M5S=#O]/@88M._^g4DMGMND7AGUf:NR[1kLmoY;m4!LQ2sN?N[uqJ&,Y1ZBSKZFWi:<-i/cfXd0=Vf@=DET&
%?GM>%s.0_95J2C>jMgLF]5OeX]a?^V@_:DZF_@@O,$sVg,[.7jbWgn)G%)[ad9j*j%\f4s-U\QN-GjpG[R(b7gl$u[`*RC,]Lg%D
%P_ob>OZ%iidY4^WbF5-i1fAl_g(%)KU+Dub,F)c49&*>cT)/".PI3'Y](kuQG@#CgP+,.qFYuZ`72:"d.Sck,WB"T!Y:;S5FfOe-
%h5S7A6g_"5YQ*t^&DKYh@983LEO+W%+'?1R_d,Go!;rB4>Wh"/8(o"`U\>f)hP8kUa;saH?2^upmeH:XgHuI]j+GX(q!n0?pRO&7
%2GS?dT\%T!b";6J,(=A?X%YCo?5=sQ(/HTZ:qI]X=hBe"0$$qWWF82iLl`]Qb63,;Kgm.Y4YuP7g/T&5HQ$oPl5S85M)qP4ld/Up
%`O_ORNWr\=5-%hp+"!BoA87,6@r*p=kR*-+g7'O7>hoE:`O[c>bSXQle81<@UJ8b][2EX;%c]Oo\uZifHI-b<L.gJP%Hlu*X[dWZ
%&^QJZkFcuD#'Aa"*dlK1O?;%f4PJO#\`5csGi.PtGC8n@h!l'Xr5Z>-]/7[+:TB42]N\b^DR*=:e0e]7MEXU@6s#e.Z<G.\&MMUi
%\XdEC<*Ckm*$(Th84R[J-fPb"EsB5qGeZ`43b?klf3B.'k2r5[Zq;0=73MkC=WM+A29Vs\Gsf'>G#8W\"Wg\r1L*/l-tVE=[UC8#
%4`a]FS84RQ`_eg4UNO"kk=bt`36j@A@=f$=9(sEkVNO$teR!/Ymal1Aep8E[I(nXUe/eQhn5j7X"p"dd8<59"S#JT`(2!V,rs_a>
%qk(GORW`J*(ECA&;@VeX_nfrbe8^7P2gP#=Z>)GQ:#0h&cO>[_MlsrC3DB9%:uB*@_?<[Xm"Y440W_b1=Fig>R-TLbQJ>@0*4/tE
%kLKoL;7dFWJl_2D>G6%(UlcLeC+coM<(@[U8bGT]OCEpD=1ZE8F1dQJ=((0I9qE07/WgA7>cVKpHVUmP[.ReOXkW)1/7JGr0-$n5
%`u8*kG^)\n*dYb[*-0()SOW\T6&47c_<:f1\ms>?2`E\9S%UA-jX/f:)gAkR*G+H(9SOfkclI%b7hH=uUA5XeSl"Y@YU9^F$%P'g
%T7B*EIHsSR'9FRA:V`M$3u.$[T_$6,R=^q9E>lX'!B1JA'T8]<Rh('.-ZG9rjpZ,G]_V=7ViF*6*TU1e;h7\t3Yh!\\8uRcfLjL(
%Yc#KMUIJ`^7f`U4(7"9,fqZMupOko;<Gbis[TK&c%qW++#6"'O`7AEh<RpLO]*3S^8"Ws*B'H=mRoFMM2!l>K)H#@-Z/5/0dh+LY
%q2\_j\`8JXD\%&5cZ+9sEKo#6pu(3%O@/I2T_%T&ZS!5<`s876TBD4n2kMtMB8uIbUO:W@TB_H/29KQknl_`8egR0YNi#ZC.e<4m
%li2A10:AS3A;XF+mq%)dUc^#k)_.G:b[n5m"^/2Krbs#\iR?QmnTg@,\U\dQ7<I:/`*%.G1V5.b5J%K1ZC=`,0)_q[;rf"AkFGt_
%Jo>4Ac2$i)24O5jdI?]%"R_k/!k1`RQ8N8=J=+(9N/!J/[DmYb[]62-ajF<\0k]XfQ3Xlm\]O$\T:\6;\N_(SSI4q\ht#qdTe%KJ
%$;m(RM*_o6K;?R,[hQ<KPhc5T7A9VnpX=e\ifVO)HcaFQ5@ES>\k?=VMidmKjLq)^5t!in%X"7<s68t)hsk3kpXAim-^Z#/?Ci:f
%IPsJM#re-Rmu`1&.)K3qo-,aR(rf1RTNbN'9ERe([tn1,?pG^jX%6>o6!Zggb^3;S[k`=g#Hnbk>_K2=q,A+;<0\&g3[-+D,Kph6
%blhnrIUYj[/L/N;=F,tgZ!,.T+>@"NDcLjZ:B4gkkb?0KBk42XNiE/Y2^:Cao2E-/WQk!3HY2P7VXKAPWLBI51K9!<W$4`Sc;JM6
%#qJcO5:8O11hZLOUXLEBfj1L`7iY#;M8l"-\io>LUWFN6f6'88\F@JtGi>kK\`9NYS,86C/@5!\Vr5545PWT!h6TK:Gc0rhNmDos
%h^^WO/e+9pfMkT&+;m\%k8IgP9ZYUl^EZ[d(XkRJIi:[JU)l>Y$QYQT:9Sb_NXRc#N'tHt)JN!<F;e=So<:k`eR@>-M:pHC<@<b/
%6-ZI]'LC&#K?3t)kUO)s#><@i4R&f<EsnIE>G.sNao)L$,KurlmiLU\!8CY,.Bl''6bo!m1(5"qp5MI(g;3'4`@:g.a./ZC4ltWE
%HB:\)@F*!_3Vbfg^M?'aJ8+*.lVY^-7dA63df1EOT38/KClb8MB+=-\*gPdUULUfQ`-[R;N[)^fo7N*EiMbpph!n.o>E8FF6gj`"
%Zejm?O+#&T0XH.AGj0M^0/;YiY^r-'9?,P'6d>2j3W:DLmpEEuRG0CK@F":j88eG7/qp:sn?`sQ?%eNVk4t'3s%C/U$7fiI^O]!d
%cY[*eF&8i'8pNZo><(jWPU(R%Kp&l0dNoI(fPqBA9q[X(nLe@ZJjoEb6Y?DGHk6^4(f59LL669+6gf3Mip)/WEp95YpgH\,I)m>s
%q9=[9s,lbp#%Sfd)6Po$Fj8/TG4:(:VM]L;Tl3\aR*J3&,,#K<X,p/1U_QGPVKW[%-+*NIf,e)V&^+>/Wh]<e3I:Ve:=[b:cq;oZ
%\t`SWe8(,VISp/N+n,i5+Bh!FOfF\GZECI!W1Fg(<i5:uq/eYN;gnSbC5<TU5M8q_Y_)/Rjhit)Dd$COQmec!:(+2!Ja%^hfA8c8
%Vu"_]TH;pSl:/[[LU'r4XBBp-fgHco2Ii;<1*-2W88#u6+1YmkE;4bjpPskEqk46Pq`BkZNuiJ9*N+*'ElSETofgEGj?%69%82=B
%gRqgHRea*d->B@>JQN.0ZB!K33;Gt'rBP3&LS7Qm!@*[t.NU^L>,6niZAbUk<W56,:=N?8<n"(TE6TlT7f0TtQ85e<1>*?So0BB9
%?.uQB.U.F,q'YI<,B_h9_lHh5UqT4j-E(b)a,nCrg+]cY;i`UpPEe*-`uka,6im6g'B8AP@`]YQ'Y5#)VPUaCgB+!a9&?ErM72Ag
%&_!R#W66JcG>#!L'jSF8o!(=<k_3?3HMAQ%l!9)"nX\jUof/NbElU7Y+*W+Hj80hb'1ud$6.Y&,Y[URJMr:_1FK*q0_!jOFm8"-q
%.n_N`)a<m(;p[%lo6?V/r/F'?rgo9RBd^%FMQgHh(-G9e=egY%2VH>X3Q56&!<NYVYbS"'>?8!\Yis&2gB*9kPum<d+c>9E43hCQ
%GKREb8VQJA(%^m-D4Yu`LOoH4Ldh:YGBB,nh\"%TL0-okBYZ),VsN;Y]lKN+"qGOKN`d#k122QgqPNY.,VIHfieG;($&MEQJ@VOW
%%E]K*,VQBhY6X`^=M[i@LLA##Yt3j040d4o/3JLp?c:lE@Pkk>^QqA;GgBh)*5mbhmhn^r"3R7E'N4i3l'6UAF&80-`9$D_rOuMn
%4;H8b*RB]7Z_QA;b+3$PSBDp+RHSjSoQM8;Apb+F9bE+K%h!lWbS3,W$G&0KXIEb<.$J-ub%R*'=lt1N%%;N#b@Zqh(t"$VL7"E<
%1?Ha`],mhN1%L65AsSleh5!(@"6uCj8I_9mo3Y<V^#m#WHCU1FBT5uho4T@Na)ISL9Ip=VHcRg86+`C_k%:?PM1hl6R>fP7S,bI*
%M5nq.L?Gjrjchae30D3'lkYT(V]&:RJ`3dOUPD]]R!^h>%l%hAmuUfg^R'EY#kDH,CQSa8EaD1:)QR&(hhJZ&D#<^k(gY'X4k<@E
%TR1KholAN8iTQk/dW-&BrR0^'JN*B!eb,O/[D*Bi*YH^>"mlsoVpC_sX)EV^A/"4I!h./P3f.hJ$!!l0Q,eRC&E2;qgA!LAp1.^6
%X]$_Z%jjskbj)[-HS!uc=hPM$I\/cdmY+p:4]^HL-:$lBBSVEuigNu4;PM^('%>$mP*,'!U.jl]FD5nl[Xf0'WZ?'t(.,JBeGdf"
%Y!6^TH'o/KAdlSgHsBheH@^D[a+0K+RZ]`bGE60jFc1'_]JZWT-D,`,hJt`G<T5(snKSOWj%)6]k%Ca;h_H6Q''[Xi[0O]6Z6n'V
%ST`>!95;r*)tq(=P_t9;!(/l;'iR]&kXf?0P)!A5jeB0kn32YG27k/r/5[auB\%gh/t"PQcKplBkn,fPTM.`l@H]gA0VakdLsZ3*
%OYq8[9F4l\Y\a@K,!_joL;sb.@52OFdK4ObffTeN,2`:\o,[jJhskXGiIEC:R'4n>J9rITSIu;Q1ZCYK4rI3hA1S-X\&Ucdd)enK
%bRU&j@.%JN":S9AQ4sr?>a);8)!XYQ['J+o7`9a")d)q!@SUGMb=4S?=m$8G`\kIj*mU/8P^8u=k$%`N+>tD#SG4uuleGe&3Bu0Z
%_C4KiB1EsF-ut+b=ukj8e&&Fthe;tFZ-N+DbA+;b+(6?O\EnpQ5'Xd0+:I5cj!32A##3;+j6nXUb3r4VgiJi)q[!eHj5_Xe($gaY
%G(cTZMX.:MV'4Qa&Z3BL%IWp3%KB>G+$[&FO[d]"6c`PnqC$*g\Q_TF;slXn4nh]=ei/n2Ukc9d/QV("X.,KrOiL>q+d6r3k1)ed
%D6"Bn5"s"es)K/cfS!ZkJY)HUdFNZX)h.(GWV,GWQ^mIH]/$pY/fj):b8p%tkne1q45NQ26%6:u*tKbcVn)?#j"6ZhGE7*TOH2A?
%a#,9`?E`]IHsofhlO#eY$#Yqff*'k:CfFR*4u)#=2QAm9jUNmmj2>0t@`lV%F'(HmBP>#ddXUBg-_<Ye>6<M112ouQ/#.2]5eHLW
%ZXHIU4"$]WO2SMK&mDL\-kU=OOO:3[^ZmPuM8.*&b]]<IX/Wi>Krq=fF!B;-!2d9<qK`AkY+65XDgF`(%OMARN0X9<K@<t<n2<FS
%8dNFF8\o=<$bi)IHuD@@SYY1j;h9p;pHciRUu7:rGfMOg2D4`4Ek&Tp_=O>Xh,*%RCj7ns[g)RZ"Rtgc]?T<)_fX*7bP>eZ"_Lf@
%/]67%2pIY,BWGOe=c^iGPD8Z^GMKt6o5PNu=G$h@a2UX^X`<-H#+(@Z;#n>d4PE+4Du7)sJ@jEd.j'3K?E=MGaG1djaaV)/G<?6J
%C'E'p79PC0lpVJcs#NTXd<"3]=[tX)"qb23i1!<eDi6PJY>_3CA!8@rPgI%\`UBZV^.VefhsaABk$$GB/1G:*^>,Mj:2-'nDG1VR
%+W,J8?1gS+W]pY"I:k'q&%mO(cqWk_N7t?WejAc_h%h%)/A1O"-JYCbgMu:``Rfn&_^`=;k]!WFME//mEGYH$"ZH^XJ[tImZ1FEe
%&%_aM;/ktWK&G()(1FY?#pn`fS(i$p:6JLrjb]MnW(r?"F%*YdN=NuplQuhEd9*$GVfd&Y/-9?iUJdj'4Q[)%Qr\(Z9J2dI_</J`
%7+uVSe%"lB^$#:\3<<d8Z-X)Ead6N<+B^bSgLeq;l/0PJeFY1aS]Ykr`r.acRjX3mC4b$qm/H7prQi7<lj<Vp0$pVbQ8h[,:d";!
%j:?Nm?Fe*H":%45r*N2kl0\uTR(MQ%oW]1XlK.(p$0)ONl<KL?CB:7dOd=Al`JWo@]$8:@aDa0(,ETo-:,C==fZJIlgD!tB<tsjX
%7=@5QEF$JaAm0A!E]#'01DIHHB]e5,!5$W;'3g2Io<4X04gVZ](13PN<6Qa-L!#j@Hm]Fb>F])ugut0Hd5$_XRqR@b42</uO*H4f
%3ZP]P;WT+gAU28SMIdM?%bS+\7gH80P34$m$bT$-#V]/EedR>P9o^":6O2"1fZ`P23=]uFL&V8:^"iSNQ$\?EOdZ[,##V1`*m;g(
%M)U,3F'6S]-tM&DC>QY(Q\"c1&/k)[O%.gC>3b($KspD\[?bS"15oO+JH[@Q^/bhMqY%V)\F_>\_prJfEco`3A`4bZYThi5e(#?T
%i[`pkZNsgO<fRu8PqB!k@k'"'69OB"UQ25\/1$=i"^8MZ(s:)OI86,dT1:4sUn=)7Gnb$0`AWM2/;)rrlj7L:13-dJi5g8+oTg`*
%LYOV&NcOSchf;C#W8)CYP2;f=]78!Y<AM];%i;mQrE5;)3NQQ4QBc^a%aSJ)#jjT%FG7Q>H6HuB'+?thMpoIFH82gd`q_]fV)3"P
%)@e8*L6\6-6P6b"LVJ#epR]SoD]IEK#R%5Z=79nVj?P(?HnoBFaWsL-gOkc<Nsr(\?$4!XWG*gHXt8Rrq-oZ%D/Y$>=&tZaeLRmC
%o'H.!aQ;Q(<4F=F(d_s%4Dd38jrLuU>4OY6GK=)!-l6L1j!4!?4eJ6X-"TqreM_E^E[=3g;$=F.iI9Uo"f1"k?""\`NW8V/GL?-r
%SJE^(GdD(sh!a0/.,k_K\VZGOo*#BcK.d1+CG0$Op+gHtg&!N;j\DLS`k$EIGYG0Q[%U:P9Ft)MbCnKoP^.!_5HSfd22ge'2==BS
%J7Qe2!lu(6;cL4>.ebMD!k6"6Q`>>9>*l:(_0Z%C@ORo<&U(l;7Al,0Cj$!:lqI`NnLQA5^-CEl\%LD\;g2rn*/-B(%3><=#JG/l
%Di6DiJC?Ha=Z<DG>L$=S4g"2p8D'(XT6)YEZi<)2G*e5kHjn3?A7V!h1jS`FUqk^\eRA%6gT"/l6K.+(if_NimS)_S%NZY2IW]N8
%,0aPl239YMP!k0SP@lC;LNt8YanT#`T69>-j1H61lD*h$lD,9#_Red_]Fhu'\%-2l-A&:6>3[SAZW(cfCA!Hb.fORS&D_f19@bRu
%PDjXP0J`:G;pe]7]sk*cHB?]^n24?&[;G'uE=2+o<]B^`ho'!/NXh`(Z'6RS*?CR$,TT?'$.QXC>L\XHg,HigA!ZF_XF!c%rnD)]
%@2&F*%G'3G?,tpNp/?9V%g6?bcbVlm/K+BjbX'(:1q^SpG6'gJUR-H"#Sg)X6cY`Jqk*ho%@3VikB8f5[r8?9eL1Y1:@@"_r4DM5
%h7["s6n>8()[E<;\8&I1\rCjuQe&rPVmSUe?Q*,So_IK`MmmFm!!dE4k/QOVau'@".:(hG^,Gs+BCajrVKA#(AX5A+V\E4-8lh5k
%2*rPj$fpTkPp16SBNtXW7`YTL`HG=^4%n]cM35JoQB"o=K>EUCNMfg%?B=BsA<i^Gk,q%*>JT`7aA\].$$O"PpUk$/r^ZF'3ENrI
%<llGolfH?K+klH"m!:\\Gps[0UNaE4arUjN3/>&@>A>5c1Gf.Afd^gN!X^7f+"I_3!'!mj5*7\#/==_0Rl%d54?sgp_sAb7#=sKg
%`$^fUVK';Q7!pbXYS!DGE#uuD*9WHSa)W4q^d7:BcLZB(dqMc?Z[<hG0s[NBh))_7ps-M,c6GH4nN=rPc=3IuU\a@3\0^ub?fo><
%0.]ak#['7cW6aM<Nr2$5oB=N4i6LAdr&.gbAgt5CW'!_i/.7K"Ur\//`*jl$ZUClMYpBR5Xa!/;7>??IbEaGpn(5"XQjh0JaT)(M
%QhDG@b>QkDLCbRR_sm.$`h8FfJoC[<f6t#)J%;j5a#e1PrjY%opKcBf-E\jgR^jM+=:9Y:=Ie>WGFZ'-fAPAg4AY+pL[Nr)0H.Di
%=e+9kCcg+R!RgGW4.iC3Wul[M"U\Q@.9<*N2:N+[_R`T=[QAEim+oNh0$^>'2=eLtlUuZ4p$HW>qTe]Wr-5h1p7Eh#0mq6fZfeq@
%3MH*De=?.p9EBuGAlmYH8d;heZDu2$^@g=5[p.a.IDb^u08>CI-?rtT?\?dNK#Uj'2Q[o7pdV^\2S\)ArD%!A,B\IUa,d;CcWQ<H
%hfF7qmCTr9D0K(1q78tKJOO91egcP=l80VWL_>4$:o.i$d46"8b9(dEC-Y^UNlS]!]Ca:-eRdj:.P't]aa3`"L+0_]gEq%7FHXH;
%qUJ<P>C*T,:0YeRL7>VNS02S35Xo$nJu:0]bAjnu7+0"M=CZ&.R^Re_n(P*p]43dn$"bER->6lEWI"[emsuJQ'BFE'5f<dfXRr(T
%*np4'f^h;XCPq/0..k42AnoZZ*cRGGb.`Itmf@[Ib+8AmJ<MVB,j,`3m&p6pBYSu?McLR4!M\Yh(?[HZ/Q]NJh`b\_TB3RIIP_ci
%c(O,"G$R96,1D;'Fb[A,M:uRScd;Aj'gL<hT<rG.,.,%KZ<>KLT#9/!H(1J(%4$4-=83;jM9Dl+PLeAS!,%-j+`"3c\HH'm%pGkm
%&i#)$/lk)NCEC&T]NZ`>]l3<B\Ib154`g'$Hn=HsNtn<G@!';S@!U+C6Q_X?V!g42-a<HmrmnN]oqf?qs#gFJp\hT`ct0[U_o>S,
%>NqG8*mZ\"`R*G[SPLn)Q:DM$fc%@Ha.K@$%g0!$[.q5=BjfmFFu):$(K9[.g6`=iih!!''[ed6fspM7%4U_oJ16Tum56D?cKARn
%`sPY70jtWd%%dRCcN*&g!6WVCnQ@2&bJ\%]GahD)lN3=No'Z>8?)ie:A;g3.+^Ynt8,n5QdeXi/d6to4a;I57_HueXjq>s7_3FFJ
%N5?0N:nqE.'%gT1VZ2;&5$TB$VX&ZWjd%7f5*oTse,,6M5NKq11\3fko)@^;m#'S^l`tD-<D,qXkZb^`R!.F!G>"_q_;3sh_YqeF
%4aV8IGJ!hF-Vsc$RC;qgB+4,_#5/o:qi$)S`kXcJ@%T0XcPY;I%.(<=q\ekt//+Xeij2=+`kXbQ"stp/s7Y!d04$kiq<$ARDh%cX
%fi=YooD$^O^Z4d7rpG[lDr09`IOSV$reGEar6q]JE8^U8GL!+e,(@j53r(8f-155W=&%ae(UCZq&Nm%;j(nVN+9-rms.FkHo#0?+
%s/LSKs5_N+>?_%Nh6?e$mN;J\ZMWc=YPLDk"R47tGM^"uo:6-SI_BG:Dt`MA:$u`PhW-!^oCpk?h]/7OIIlgUb9sLn]).2!:\+8W
%=0J4aIX:rCl_(FWh`Q8WlLid+-Vsanh>$XbSisjeqY.Hphu%<bGIZYIiBQA_s2tq!Q_T$*n+r(*WAt7(ZF&u&(V5Z:oN;c;60Y=T
%PFMRH7.7DJ`Ydu@=A%G\&?\p6eTr[/.o=)T1B8MhG;A-[(6ls&hl]?WV86HJd.A#"LAgP>?F`TsV97p;7$M8Ob+4kE/TR]?J%O(m
%'e5\r0'94_6J<H!.@T':\!Gdl4K(hH/6=Tl]sP^.q$\o.q5T2)Ua99&&*!7[d0E`:akO:L,s&p36pk4u7=O(0<><W"pS4=GXobJ%
%o2e5jP8tQV#eL;$TBc5rA?FF+'gR`XZsT)uF1YU0#9.Sf7K;aiQLBX>/6maAB30(bM>]JbPsd"eC:q\1I2Jg(@`W55#;:MXY-R70
%2#*M\n%srh41'k`_J/SgMu6armp%El+Kle%^4;P/kh!ptRXDHSB?"ZV7e/Sadh-<'\aI2[DYDL98XmEg$$)WMf2<h`.-$;>FFXXY
%NgUaOV2l0[G3/V^m&LsR*WZ;Z1DY7+=[f]mfo-D\99P(hNX^-Ed`!uY=,V;8I)[@&=B`AMT!R8`kiK1Eg#3J4%!8hrgm"+\b&),4
%Y2E>r9D%8mGU49@BsV+q,IKd-fcjpVQEo01A+m07l9s]DR\744475FL=/'mZ?e>V_4dCO*$fp-HP?-r6^`Fr1,k1mb`TTAY5jS(m
%+'G[8'BT`FfjpX^9647UTn7#,<fTifJ)5K7RC3^\?Y&ueM-kBO5$NcKHZ>sbcVkD6/s'q<Y]@56E"eWQnjNp)@N,c^P4pVj16`Yn
%%JhYER;s>Zo2iZb@@3hHn\-l;<8(>-Y0Cs8Pm.+9F!<tbjdfT:?Y+g8]JKH@Y*-M]/sg;.]LX1E0!e45?W0P:D1NX6AHOA_^J"b1
%TKXVi"e\hrPgWG".:,u2p9Ct+LQQ1u-0>F:&PpQ7/I?ekBM#Hc[YTZSf#P=+"gLa30Q=!"W#-XYMs);HUt=;a:;d,Vm6le)*DrXh
%jjfmnIM/p$-Nn04Bb=PRI3H@_^?Vh2-0\Jlg]s1gCDRJB;fs4KLIag)llbiITll!p/5nc6N0\R_%(7Q\Z$Aal;ILBhe!OH1UdiQ[
%C/^0pe.7i,*1]".-GN'///qU>mLllqFFp+5]KA\;p!'A#(Bjp#[,<GqX0T]q,#'@\rhaI]c_<.fn`:9-nB43oGj1,/95"F<!F)S&
%D#H,.]]k:D*F`p/M&>5@qHY/.>4ucp<N'no.9V+2Qblc1<JRef.XFo2eB5a)^J$8FjT*1l%9!&!EeV0'Lu9#0N?)=MKZ12XAVb=Z
%d2QK06;*T/Y[<em94/q)V+$+Id247[XY^V,P>)o[3I<,C/SGZ6U9%bLV$YT_@u+&=KKhaZ>CSXi<sYBkE09R_NsL!/Zm=PqTie&9
%,2_"K>/!MnBmE/`Kn;AjX:Z2NO]dRhF[pu5_kT#6S)#]L>lu^=G]DsKl#!\sjV\s%TT&`rI]5lKgp+pV9'%;90UA,*0FeCjAp\3B
%8f&de=3;)TBa)"cLVF(V$+<ea3bVBm/1i'iIHFq*U&YnO8On>;`+kXbLE)&rkK/B+<RK57*-m_V&Z37^()]l0#(HB2jB:&T+u'o\
%0A8T493g6Y&W%bBZ>;+e`(%ehA/Dl30uoft,X-gH#3hHYacTL;(bo>2_GZ0GL&D..l!YZ6H$Qbr"P^S&Qko0sneUet-7r>*]0V#i
%Q8-C9o(![)8]4aQQDFa70Pf:^_\ubWZ?0Lf0hp;e&'^%-BfgF64=p)9@N7Z?06gUY;uKg'7:5n[]Y/76'p;URbHg1o>MDcZ>_1Ho
%RcWq-pU[MI8XGaI1rm""%6J8q7D?R%;oEL)TZGh9X,Hb0dK(6'J=28_6EjDD<"@,-,U,Sha;\N/6u3gG'HNs^0"8a3&e&=<E*'re
%ZuYT0drei'7$kt&7EY+j*]B,C(sAr-Q*<+.`@!Ps%WW%h+Mb.FcP*Djq]k=aM-7bM5BK7=_oP*L:1.1a5&1PME#:aC/:+/j^Y?hM
%*oG7#O_n5hm7L&2=]I7Alc4H`WM1>Cm%nJW$5EnT^428b8]fHL9;S<#Wu\>b-;/SYi-USu=\9%'mNu8P4@=j.jpkU99mA-EHg/\G
%A[NR!$um.[[JS+pp`2Q\/gU"$O#d[TJ1UK*UWtML`9J;Df<Co,&QrJ@fq>W],8OQFe/hp_oU'Y=1!DJ:Bf5TQWJf'BGfr?0d8pp<
%W9>uU>$4S=*"r'fCnSVCL,>3ueCZ77)lFFP;+7CeaJ#ts7]Dn&@Zo6DX5Oc7EZA(YTW?I<Z'I^_ol]4HaWmU8pA0#Ie^YDJ/s_dH
%6Q'>jB<kHWn>kEd"jqIkE-Pj]P,^(><-'KsHAO#GJsbWS1-%o]:!r-E?I"PuNc\H7920^)P"KY0;!Cgc0JE!n/YZ.r@Y-0`@I`18
%OYQBa2A[aI0#DGAX[I^dl"U(/,b5I?GO70<>.!cRe1brgRe+e<SO`beR[V^OY28hER;JTXSr9K@-!.HFUd7[%1_c>!OfLha+^!R3
%i^7=ag4gg-e=p'.UF]]a_pJlULMp<n[M*)sajXh?Z5.`k#nBfOo:ajE:?6Wi4Ak0+c%B9$[KMB)/&JW9Y02+14#HfJ>eK"P;1Y]2
%kL_Kd"gNGi(IIrATUnW-@h(F2GT,rgfY2RCIU;fqpYcoQrAf%=Pt/lemJd+.2m8jer-%h`rVlZXdiVoormdJc3;FQ(=;7lf&2tLu
%dWr,N-3Y5/`7bYETcu%Eo:HmI(gf!=TfcmkP,l/N[peHV-RFeBMFN2,K99L`M_^BJjo>V8duMSUCGfgJe@G'fW;\9t3S59+0uV"K
%e>6V-#!)u,G/Vk4X@*/k?fAtUkL<JK$5RYdZt9-*T>!tub<LC&]59eZY11!3n#B;%1g*A5\$B;?em/\S_B;hB+a'mEDnP:LJ'*F`
%YRk39TU2^#7orXRj4^_X,\[1kR*'GN*@H`SKGfY71h`&+92,QE$K<[Y!OE<ZA#M8I@:2(S0,Zks%H7B*MC<FATnGS=CD6(B#7B3Q
%G@Fj1mLU$n/dn1.\;>*?d'ZiM=5_8]o4.noG@eLGFIUsna^.?9U+SLr1CD\n]SfF>k-:gr"/)ju6l[cY+oLg?faKN+N/.\02SBu-
%?j.1Y9CYus&&`j!?EH><]dhpopgN_"oV1'6B!-StDlAk,0<^M?);(8I?-/I>12pBd;,rM;j<[)@ilNp]f5pYGcP1.dop$B(GQb+]
%:f`rZed8FpYWSJ.H3N%iHZ,:qO'QlZ&16j#I)(ifbOOSN2&IsM&SP<n31qi6[2W)6`-R\TLMP]G6Gcj"]9;f[Mb'bQLq(OIXqlu[
%NPO\,`<%V4*Inn[Jg+EL[%JS-dHT$Ei2cGd'Y)1\(AJ":4g^"u-#:74!Jn&NdaatN@`mWZ4K8@ZYGG_a9tCO58@q",njBL\277LU
%0T,Cje1RfmZ@F8bZLVDsM=)@A$#YE2Ha.H#:tVI1-E0,8^p+XOn]/B/"O(Z/bq`XaSOcDO!`\l\RBjoO)=^N)TrU5A@6sg/BpRUO
%p^RfN8B_Vup9(K`np2-EBM#SXOK_@ke./&nH<%tA(0?#\K,..;kZbe`^seMpK+"Q%KfCt\EKr8A%ZnfNR7VN$S&BC=]7I6hd#Mct
%=:KET]3SAuf+%%g0djmLAZL&Nki5,Y_$6XRZFCRi5tdEXm.M3r7TmgFLP@#./>M7aVT>d(_m4!U+M8eX1R^adq$]E%7SFJ,+L>6`
%+UfUt>&/an6Prh98O"dO:UA]%g=3q$Fh:p`PJ%bk=sqCZq!OPNPUL,]rka^IY(MomV(9-hkVIbdBHX1m('cuF/Tk2G>>e"H7#>>$
%jpB))`u&?;$Hu0u"iY0e"g9[a(],U/>:dO&6!oJo0G=urUo/TMFm4E9'IOGmR5OQ?dTKG3'tl*(cu>0d$ZEINi!GV4V2_?>U3)2i
%/s@/\/%eAtK%T'<lCsjUo\s`,MXD"/+X!eP;p>@Cdh_IF4fmuSlPZ#j%*('P0E?Lc2u*^ra7)MBN8O&IM7[<DPGh%FFraOr.i;:E
%KN0ma:*B(M*S2N>>3#"G3>,hRT#3`"BIS`OdA*f,?$WD<SN&ViFk8E88\rgH"H-fDPPAA#[&>Jui#Jr]!4uVm6;jI)GltLo;!7>(
%JlVR_pKD=?[nGR?&#f)OmmRWR&)_H%C?=nj!BcdtC:)`LhT!FMh3?5$r<#8FEKq,WXK]\(6d[)QW_G?JP4ErD3.SDInjYZ-0UE@f
%a^Ogf1W)X$Bq!p'[gJYJEh&u@d#\VOEWG^]:lPUiT!5B!N6n'"r"qh\L(TtKJG"b.p#_LM;1Wj05!ZulV:/=Vj-mK8f*AC^Efk6B
%qED`QcEKg4NIge=9;7[p2M98%D%2NfM"mWl\)'biKY1p(LE^n-9KBZ_:qReM8MVr)j4j5[O=:cPlI`#OMs2fh8!dV0Ber(ZkY/u!
%/)l;WRi)2@M/2/E.cuDk:c5fcD\l'!%#j2C=L5lK$Y;4FqH"Gr=%"n`?'#Sk.Sk/>R_$cV8@?.&n,?T^#/#<g!g#*5@)m<H:37BS
%bJp8;dk6@?#UC1a5<Rd*&=-?9eo)BD@P5iN^f6K[LbeDHO0u&5+GOPVQ`e>rV?e+M*loZ0Pj!.509\)sC<R!a#[/_?K",#-#cibM
%L.)TO/rN&g2QONCI<_+"%pPbP(5tR'm%Vq=e/n'1lERUJT`eaC'cfCh"[!DYW1USkiYe>="ah02$s9-<Th6#ampPSTdaeF&9L1%l
%!s?rTTVNqZN!l<*KE5n03X[:WB6q@)M!-3V-j!R'AZf`&W!]M$0-0o[,#VZ&KI:MnX,0qnT$^2.oqAQVnGWci:^&rDi&kh0N:7Rg
%!3gts.i\Sm1_:!F5/:raNQJZN=]qW2."*LK/7T8((n%dF&>NlC#ONa78*&;;O^jCo0F!of]IkT'lPBO7*LOcS0HuilJK1M"@ZGR4
%Gb]F#@#bR_0.n#q$cYr9]-]*Ei=&2sUKn4ZD1E:X/;rj&C-"cYeRi*KLYt3!#I#&m!<=;<Ai)&5manH?[F)gH(=*,!=W62U^cF%S
%6FoQAU"ga[AJg$I+O6W^-qdA^>P_OCW>j9I1f89a,nP]1c9dIo*n-c[&WFV0,qQ%djs"S\2;XZ.(D"o"H59t.MUBDY2TU`"/*%^b
%n9]R^(c@9Ha=E0JA>1S3-3M(VpQoWMHu8Oa^^*7RlAOUN`r.oiUa6*3*,nZIVcAiDYlI'@(ra9+2:nL2!oPFo6t"RdHLEfZPX:V2
%.\u9#<l@NP&"5?oQ%kK>]n,"+TZ<`\ThjUSCP7Z:"%9?=!J#CQ*?G5^fA7T9K&<>SEgVQJnh7S"/Oj$=-4k)k6n':nMO?S16nO4m
%f%*K2L?'CW_A\"9A.,V!=]\$AMHu)n##2oTnCM<g*>T5s0UM6*kus,`]J.oemA1YqaCW+NK.WH[j#ugXl_j4&\%tTWE47EX'Gh@O
%bbV%Gd=&qOd5l/$Aikkfbn:e4eqkiQPRt-?aJ(tR<BBb@2f0bG2K0lGo*">`F)PIdM!V*0.jgEQN,G(di!e!<=f&Y7_gQRt>pCms
%)2!U1^u%P$8s7L+j!dsmCP)d/@8U$ZN#>0;nQI+`S$WaUd7XR_oi*<)+Dsk^`"X^d@PD8Ifh.,5+Z882kSjF=nV;ko)[nU8\jc3R
%7Q+,,FjW"YJmfb6BXZGWN7OZjM4Ki6R'JgCY/Ca1V\*@!_(H4XR8QS1Uhrj7D6s!_l)+^Q-+o![h$Ps+).=*I!6\Uc(kn=Fi2UMC
%!K/P@,ft_fo/(*9[_Je/S4@'/X^Z+h#Dq'J\.3gb1p?O-j)hM-iC=;@"Ekga7VHD2lG.SaZlN\jk(<>;pYk>i\HOAn*)$@C[-J8)
%6d.DSC60ft6!MfBi$T:Y)(-;a]ElT<=r<T</G9A/242/"BNhaVLiku[0*YCKKn21c/Wp#_Z=Bo;2I^$89eZ3.Kk7,s%SR%.+ou!-
%(,_`Ce&Hu%4G9GpmJudV>S8#oSS=V%AD'BS?GGc+gql%)/-)ZCQP&.f'GoFM;$JkN?g1ku?<S//K[41<M^U*3!/!*:ilPjH'!V..
%ZP4(.Y[OpF%+?U:A%'$3fZ(F$/]6gb%M=(#G\AjAKLZdrX`4"s6WO5+WAu^_pHT+T(Dt4aPS'BDnjLNf@:Ep(*`E8!;bgdlT(u3D
%GOZ7#m.bU1*X5>]6rj]P5:pgoUd_0UG[G\f72&O]mS'"tlU4uCXO#7?4dk[X7D18=j(*2N5T7!:ACm56+VQVSlP)5[\dl8LE(2&r
%VODN,NOO/d`28VaF0'ms6@dR$1NYA&/rdhZW+g8PRaD[;;Bt7:#BdtD`JMBDi(q,lAGQ\oG9M!Te:\YCmfmfdTKb>U6o34KHpMF3
%UM:k,,<jXn?A>E&g/Te0WK@clbOTGWA;eM(@/[-W.qq<&;MUEmL3d:k&7L/^]qhC=4`Mo4PZ/@85qDO2UF`a.^^4J&$r@`7A5/W5
%d(s"4SXTG?Z"[NBLD@n9e'?PL!^CW`>T;$.15@B$E3cA'6m`CC2$HGKM1!-jV@:=$*,[/g+p2M56'u'hi'TC"%krSN%Y-+m'kU\'
%Sp%#d7XG;h:cYFb`:9BiQTGl)Jjfhb^E=5A^FSr=@*<(N4ehO"=YTVbf-<-tSJ+>Ee1/7$l@WQ^L'*JP`6ckmi@rtf!JSK[)qI[+
%/g,)VX@$U"lS&sbU4eS@Zoo'C-e/F'WH!TpkNi2Ua>BH]86mDDM3P!:3`pdFbSFY&;!9`DETrA\6h<BMOT@^[qC+-d=>4DcL_HhA
%-3muHlk)^g,n%W2aDXP\1*JY#qFDdgH=Ml*BXR%]q16(EKZn2^(6K&'&>CTg298H)lUD*1!N0kL:sgNX#R`]-/EUAO+;(L0V3A&K
%3%m!,!hPVY0]APeBob]V[B]@N"]mF+_!9utR=_eZ*Y$tkmOMJNg5_Gj8R?(j!FO3XA3%oVJPa86aFl_8Bt"hi':TfL&1J50<Z9o/
%gd&fg+<%R7mT9'n;8)d6hCO])$74d/#bB;pdYts+O75"$Tf`^)&0=HMNrA:M5*Y2!%N:'@(849\!bj\A)#=Snq,(,5BHaU5Q8Xn`
%789f:%9/Kn=[8WpcCQ12eS"r:HL,Dm>6/V><8&R85R'(hTZTrnXC-<?r[-%pOd"eZ0GBSsOYl;K;7(rQTca\t8PsLNVCId*V3:(f
%X6H,;OF#0nJrT,_X=("cNAV?Y/S"8=71TLm,%-"M-`deCcmfbf&se&jrRg"F@4Hs^$B3RJ$)HsCAHHnDBN8T$EXjcFfV/F3!&PjB
%BIQ2NJ.3.%#26$?SIG5hY,i1tB,;8Thrk+eh^t-L_b?`,3Wc5D_FOua!Q*^Bg^b!Lb)piT'dQkT/gS5I1rD&:njB@C@Y8oVTco97
%[o`tTF-87NU;3'7'O!qf6paf-!Zr1nJfBMVKr5I1O<J;]&]D/9V-1+B!A/J=KFLiZH:I.^Xu=YsO9;\SB%S4n*XQbQN\n_bA'3"'
%`WArW9gf[;Y;r:IX?bXl='a$mA.gX_(\AVLORO'CI7:hK>7c!\3r6qj%Vl4</S.oCAJWH3_^tDmhdc`O-R0H;jb+CD+:Q<qJ[&&J
%KFWHSS'[-kO0I$MgVab%'B"2b1(\@@!H]$'e:J1B'UHP/2Pn]H4B51!>%a"K4``qtqW8j2a*4N-"-nWAHpU(NX!*Ccr<+@]Wu8P3
%O!Q'ddC+[V&5Bc8:cN7=O1:'iPuP_[&D0La!PM*m/TK0HL@\!K*ms&uD/Al'UGg.ZQ&2FB!-OZcJNb9N;m0k1L(/@jW&TAJkRDhJ
%bg_i1'94S@pX%80#Y5G!lSlq3JOL,&BSHbQ6qdi8]ei:X\_I-:`$;%tQ^HYL8:pQ`:`%Q,+G;Co?g?g3jh2dKY'l]pSN<Ma!6S//
%SsJE(>DP?U6H[[3Mlr(Tl6@U?L67+^XL9Q..\:h,97%]Dh_faa>-ZI493_e-&F8D-H6%M\(0\s!$^U:=<R=.kEddD*l)4""\%tTW
%E4</iUd_kPi/p"49L^KQb6`/73*6G7>(N/&<1W&Rr6&ni&kkZPZ)[&M%5ih$V&A?V8;oM\1b(rr-aJ%+#!/),jI,'a@].:[LI^U6
%J0KTbYU^B#JWbB"\sok)Lp(mA2rD/\C:ctEK!717(c^NH8Sblb4"JMq9go0Ij&2l[6rTic8<4Of;M_3mj*TK,SjD*4fhN)U4G*tL
%;-!l`d'@nLR&N<m"DTu.oD3uCn!VUce<WO]9M4AQRZOd#:RR]X\2:WT<2'p<TIg:/9JZpDFa:289"T1BBSq'g4gC_JCGMIi/.*sa
%%m<-7%J+6YIA0Leb^R2FJJ*,IP't+1YK'g*1kV<Q04Q4-5g*s:7c]=N=J_uYhFP),qr(D[Q[8WW#>"I&H;Pj6Jc\grJ>!Xa_$?7L
%#(l3c;LsJGQB?"&9]-*C&r<t"B";=DFYmK]39D*>B/7hC#r>S$I(i3@hk:3s'O.dQTEU%lCgl1`?(*W?l_=VKcluX7;B-,]^s0)p
%LI^?B?,fh)m19gC;d/QS!$c7=UC\3FMri/nMlB(Q6b/mZa%+\dg]@r/:I)g$LP8DMc!S?/_4*a5<6j3J'Lh>03!PXn1Hd5ng!oYH
%&9<LYJ-Za&o/q_:JH,*=]sbdNO+;#6.51C*ApQ!n5IdX57U@,Q^k.VuCR?Z4FtnMEB.QFRroV'JO^d/,.;1%4l5>i9bcm7uhm7",
%R7Jd^&B>Q`XP&kmBK'*&_d:_u;P,Ped!@f'MM7!%om!58'q#EI$pD%lLGEVF>0k*;QVs$=aQbg^HtCt/GR!%/n\,'7P:c)7G-lEK
%RhLb)Lg5;"_KZ9+j3YYbFe>e[d4Y*nRhLLQ(*`1C%8j/>n.t"V2WiVuFneeC'&e55IL95Np]/<OQuNePG#G0'9MhPY>U;4>YK`Nf
%SkS)C?t$cK1h-\@ls@Ag'lR7HM[5e]dX[(&#sp1m[\<kgmQ`B4"J0Z@ITk;9=i80o2rN7X3LYOt>fHNPeV`CLHe%U@FjUgcGr&=r
%aH.TF4S%Y9E?[c45rkl2,gmfcLV,T9e+(.'S4<M58CrVY#@3?Z-FRrP'.3fK9uR0Vc_O42p#Qe0E`rrQK;h^W][0W.\"GBK0T5)3
%@(:;^MGKmD(ZS-P6Acf]IlL6AHU]MAhFb.;1:W52JXE`6a=T;%&OB&AD5_?UfhfC;1Yf#4#$C+odi,e>])l<#@30q"7E04Jio?g<
%?],'i/dMBIVH#9;c-$Gj6Pq7Q\06cY6-"=HZ%jY:M^8Y`KpKH*js;BJ`<Rg9#=bXaKNR>SCro5qZ:c@`B^N4nJ3YnG+q%9iEa"el
%IK>m'g8HO26XhMX&(H2%[TF52kfqT_l?`]S`g\UW)(QEXKfKZ.p(O-`nJ.L9RMbAKk;SIT%/XJl.<pc5cB0ZI+@*+6%G<M^O+teF
%+<Z`$`1r#Drr^Jg-uNZREZL7JaF`24&<dD5M^%24eRGAMJK:^"K]*dap?Fg""8EeQkHrE68.-5C-&$Hfd&-UA+G"SO"Z+`k<`@3p
%kF+a41oVD?;B$Hi#`MV8/?O+V9'6gt^K+'-A""9MhuWm;l6O=HRI0>V"]>T0bQR&.<P"PDbCYT/Jel?=5mF2Dc?\.6EdIZC8!qX8
%87et,ZpeMak7epAf2>m-,p:'UD+p;>l9:&Z;TBa:Y[f;/I/NchV/([Y27;XTZ8Q+eK)A&i$;D7$*B$4RAh!m>o'"psXd7WAigLT:
%B!gG?WKYHiKNFh2R]WTP20r@-j\ej7'euS;Y7O7L!EtZJ0'`R=/1_/\bFlqFhS[kKg&$<b&-C7E(PRJd@33,a;+#j>bg8bRNY8%I
%!#g[`E2?fPATJ2&,Cc,7!f2'K9#S1]_plPo;=t-^e]0oT).Vcr49r"<MPa<\NF@"!AQ]`u+2sm/@gJMZp,+<T5mnfTepM3.+a.Q'
%'Vt''SQO+A6Q%Ng4hMYb"eN,e_k(U/6cs)>hi/["^k>D7"nmUl>uH+YRPN)cb-p6e2jt\>"Uo[MJ9.'^DPN)P"q""S(q#(W@B-Z_
%_"3U-p1KYCVu+?PE4(rBH8\q7*H/=[[#.UWH4UV]Kp)hi7\Y$3X9u0e[4Kb!G&d/$71;?.I:T1]7N[_`%05$Z%V6%V7P#J2_he%F
%R`1)E#3\c4c^5t;0>M^\0n9c<=TDcDNA2[Fa:gdMP-MJ_jLf0F_alOhW77JQ^#mbMJ;d[aXM>OsU1Pu(]]ct-D%`j<+t3RDBQ3Ug
%Raq*Sh&M]>B]7.'L+p%?oG]N1bm7rKE75pS=u<o2F9$*(%b&t7iZfsSJd@`N=;hf'lhV)8n1IP5+=\beo_p:4-nhLINaBX`^?C!F
%%QUCIikWnU"JRX6(X5?7"=*04&E@[gg:_E4r4o,)bKJ"Z==9:.i5oT%h2".H&K:tl:t=odQ`o@a=@9IadEcd1>LY\7`qG13Y:9;V
%iSd[f;nY4IiZYqih(Sa!Sbb7?l2C'on'*Jh2#Z_:YCD'!h<gCb\)2Qb=4jW-TD4m'cX)'KGkKm"^OGk%Uj)[slW6;uGQ.6CqruFM
%J,Gr6irs1qpT25!brQS6/F)3/d+1IS0emm*jmEjuMm;fL*!)l[p/39WJ?3u57N'JO6WsU'F1(@&'D!hI-q7mH1lXD5`^1gb'Uk_[
%dV1jsK/nQ&:#oR+9+B$T[#EEDUq8@HUemh$>R"MurV]5L$"Xk;.8E7k#TogX(@c;/'95ShIYhDtD@4mF<gNc$.Ni5',Z@#0Ho0n5
%79NjV]4$F;mo=9O>,*Yf0=U+%nDLN]?a&e!Kd>KnC#5EdP=CJ!Lp,]jPZ0Khd''KR;TdRhXu;L.@CcG,qF^W$m\o=L4;:6e3gaXP
%XChq+An*;8:MV4u")(WQ)'@C'K`37:KA79K4KslDB>Lr7'Y)%+KDLh[c-1:'GE!A48dZ=:<,hr6MduT!@8>TLN-V<Y`YjjW$JLm[
%N4`3K"#ABe)U#D<&6]pQ-\i%r:sbrA/SS@_,6S>S^bC7l0M<h*m%]8kq>e,_K:Bs!oc:UFfVJTdOGpsaKoW5_*Fn55lNIMM@u@Ug
%Yt/dh.2mkM/`tp;-=T7GZ?T2%TtQHnonrA[)#[!g710u.$sh4D7u]Y&>Uji4Z.$eN;D$dr?rpj[Lfk;c'e*7u53rT#h8$*/"\+1O
%j1V$54c@m?f%Oo,!D(UB5hZBOTNp)!6>/oQeCj0bm@,H5kbU:CYm./;Y^R8R!K;sK/S?:U5'a@ldG;<srhX7-#D5j'19B6:(1M$f
%,Beo_(j#PD)VJ<hJJP>26lMGeMZedalf;37aJoPReOAThOD52Y86e&)5n,Do4#T%"-"*Gdhi=4#`U\p`J#HN-]gXSCGqAUYH6U41
%PZciOQ$I.<+LR#2$/^[Z$>*B1?I]=A4Pun*I)`6m?M:3YA@._&#p2X;CR2'k35(arQ&goE.UEHH&%nF^7Z?`P+XCTt]"%C$>7t0d
%Xg__e(g8]]H41t1Y5m(u6dF(`9D?d83,1;2*u#:hs,pE.TF_Y(#Oj4"3(1o<*mnhd6-7R9ZiV.f;+9e:nH>/!"XY;SgTEE(i1CX7
%->>R_E/M(</_-`9M\]%>/s_W7QU9)2ea)S4(,_2r]M6lcW*m'0C]r)i6q9D]:gc,BNJoY"Y#-GrSl=h*7_3?^)OdXGPa3OB],<)O
%dF(9:JJKFF3aAc*M5j6*lIF#OjWP8`RKJ?HqcF>d7X^\0(.\F:>^dY4)9j]$[qcn!lR[YhR1B]%%Mc>F?F7dEC%[K%[0-H;\t-A%
%2Pm?^iKH<:jJ0WZ!_4"mltC>]lM<k(d4TNE6AjtboNbjf0So)$OqB/#"p+OsREWo)(.WHZFl\CP>0mS+ZFJW1XstEWaH`+9OJl=O
%W8'hZ83m9WKIAW8>/<SI[!ZC^_gj$RU6DFWq3ei)\bmQXBT(GXO^/Rh($OZ"iejD:/kA^_ER[khbrc*$MR:ZK,Erl#j7tf7qUP/q
%oJ4.G.#l*N]%qUJ^^]5VdBAb5e/P!>:;BP4.l"6#b[8H/M1ZZR3#?8B1_EkdF5RQoH83X0^jKf-?7]!Z$jnsnKr5rX7#3.P+Q6iT
%AI</klq(OU58k@_e$gf]JS-Jr%'2(JThSZ+Bq3S4AB1uf2`Nm\5Xjj:";6eEJU9B+=\T6b3\bX]+/a:K/muXJLk&N3T"s2P*&AD=
%C'a(?JcMYL:g6/&=VMO"QGGsX"0GkgV!u*e&IP2V\;(F-bCEPT#/fpbTIg7G<_Q]PBQKI*7"F9Vfo?N7,01[H*7oaC+I5;-(0PO8
%cn#6(?tNo)N"+9U+>EqS<1$9en]ArUQ'cZaKdI0]pJDOT\sncBW.A0O3%_!#U^%X2>o%#N`:>2>Wsi=(WTE&K7-5Jnp(`Je?Opk*
%W6;F,,cQ,pJ9$7U$d"&*\2S/k_"&c:&4p<8gq,<1NoB4C\:7m["-k.GO*op)Y@=rY!Y6_2/;DR\M5uEfc^CpTq>*f3g@<TbS]c:K
%Mkphn?*lGn+l<cs%#T-Ta]/YIbYF!%0nM_@&e)/>?IjE+NSZ?,4#78Y>:ItJF:n&B9gbkdK9/]U=G>F_78p009?A1D,#VH-'bZQp
%+;NujJbcJIm?-+_J1Gnp@=&+g\?^H$m"%\;MMV*?:U79DNDm?1!$N3#7!]g?$Jh'eR4$)Vd];]<#E__'g)3AT;q_QhGelDZ"go6g
%K`Y]*ai0HGo'MSeYQ<Whg+U6HA8%J2m53A-R.<b"bl+glY@:HBOjg10Q+YdjMoOcW,s)3.)A[Ku4>aCMd@W1%f0(F#1ru#G@Yfl/
%E6J<Q7nj[DZNr[$E0^-k!FSMfPJ-5fZKYqdk,D>:n]]mEML9Ac*(+'e]3rZf>/09%YliWb]]QL4.7[.VBHVT%+.(Y30VRS`!&GT(
%L`\N7,cKYaAV&B(j;QM5Gk\"6PmfD3$a>qn\*ugr3P,p!!l5og5QfF``[dR/i2?%d^M--la/:[Y)_R.BL.05XP\b%gl8AA/R8u*'
%?8,F=NIr&lY[G=^/IP].9hchBL$#2]J^UPMc3VVq%:ZO'*Rd>BY;Q&^mV>)r+-<&:cq64e2GA<*![(i-EKjeO\<'9F9N_KW+Bq[t
%$_p`R:^^h'$!?Rd[0e/nCsnaE/QP2h7u6Q`fWljRGl"Q3,=9hg5CKEK<(?'TW'BGC1G<dGTRi_JN7UYCFeJ#@<O:B61+\^8BOXWt
%>X:.rN`[jeI9/-mN"d&D#R9Eo9cU5o_CkKiA!"Hb3VW)b+i&@n?S8<23rBnm!N9CgA5LE(G55se6i[NUPLl-2ZiM4_$-laS(1T0T
%ksppGM]'M'doi[O-0Li9;9Xj'FEq<q5g.e8?n@qPcB?HA&3Q]jE%B!0XUU<=^`Z.&O.^Dg^#_(X?-c_O0nkqO(6(gt#odU5HX8J$
%k<p6$U8<[7<PsErVV)j"=`$bm7KT[]<0FSnB$!n%/tK3XR#UPtNjo0SQ!?.[PJK0uRAs0j/`[@=njG]CH>h_<Z?f82;Q7"O/tjX7
%0^5XBoVc7@W:]dT0D1"O;'68O.2F-;l9[>6m"%P?aO`d'S<=th02g>B5lq]j7.l1p&Bua;#Q,.k-8D^.qEA2Q\X.Fn,St)2Qq+B,
%94j32?<T13NKP[YcUgd[,T!g!(c;*m$qXcp`GpemP>\ZcG2g!^nJ+Ej\;EpRR<hE)7AQbJCLKXH+saROdNR=J%ur'56f]^K>,6[]
%-q]?E6rIEeAY$\$NK"pt.!J+%N.%DQohAX]/V(e;3dk.?n<OdofrJOOJm(DSNBh/\3]fj&pa=J5<$O5d<ciA&Z.8CF,)r8CN6:nR
%QX3%uAs+!m$'13K32&f4a*pGb1G`;app+40Zo/6;$L-_-Hg$j&5Qk6g5Bai(9[IHb4YBZ:=W%IK%\[rqMQD`;I^UHYeKr'k6$jJ$
%UjiB]akA_MbQSNJ?9r3b0GEM]@e(3-Ue1bbOd1'Eh@7A[6!8F:nL4"hPQ6JTR];-FE)9b?0]5dDfFpA!_Z0_f<n.GB/mU=2"_.m7
%poh7t7EbeMV3;QI8*0HF.M5''4+2,=@tAU!+3=5T.%OEfNQ<eoV9n5;"fo$^D<Po>>#+CQC3@Z.,m"Z]#j"=XB+!F7I^NXB)1t6N
%Vcdi$2&%:9W\R[P$Qkc)"'c%6)-!2eE"35cR.^U9RQ;Hjd[u!B9m,G@GQKC.Brb</T>^pI/_KBP/KjAd/%nu,.k*)O$%uqn4A"i!
%cKJ%f3.(jt'6p7]I'Z!@]h0dVJbk'fmkeV!d*f!8XsAnUA.^4g(@kJ-:\_2eW!T_%1OL:$/BLGr8T70UU/MJu;3QZ'e(6sp<JXnI
%>A'-$#sd!F'F*C+<YCdjmBmLrc1#i6LQf7g/OVRHLVN?&Q)Y8t3&r:lcE>Nt-Y1DP4h_&N8fWngCA$5hP)'ob,W.[lAlOfEFf`7Q
%We9%\3n4MqHJ(fm>T)r^1YuQPJa%aN!Ckk<_kd\"li;)?$RAr:=-j2^&[J7,9F*5LoO'Ht.+1D-<g//KZ")F*YK0lQPF#FKiuE[Z
%(B#2Pj!]+*R<>'?<cbJ-@$PknA$&ffd2JQLG"^fuW)a&u=+^sA_;a;g<10l[96oNH8RZS!I9+_2S<B8XfI<"9bc%C.B\c..q5kub
%1M4fV.mp2oTT<qh0RcHifqP2lMjdeOg%#LJKZ#I&S%[n1,>fn2nJ)d*!PjF]7H>*!8qfoPYEDP[N@bSZ2tg+nS7*poP!HfR.\MD3
%_+Cqa;i>3=,m&n^S$QifVK@t-WTXDl:/6=<JVt0M=cP?QB,P6;g9'[A&fu3j<TZ9Vq2Ln5KJ%oF90f/n0bnhB?H#eP8VAs]8\bcD
%K#SjRM[YpI/1T3B8F/s2nRdD3:0blq_S!X^&IN)<7IoQ_pWOOJ(mr)p&K*tA&2&\\d97AqKrUEQZt]jl[D)3s7;IUb2cDOgmBI*j
%YH)5s@KJ#O$4j$\7V#-#^0?Pg%0e.nMgZu47g=<L$Rr3KnM'_(Ci"n>)$WQi,psD,A(+npIu-73+CnQ<n2RP^E*sE3KJKA,@&@;4
%q@`\O+=0'.>"2L0Y<1'-i+<0=BL\gY:h%X\;S=Mbg^\:t`m/&Bf,DM4!"n1XKX7Wk8HB8b-M=qQ.`U+6oE422WeRDTlW&.,9t7q0
%%c)u;>LN+i%Th.;JkY=NR"31t[&b,u>p3c'guu3K_A,Ps(u'eZ9:!>\P`.],gO<PEU);_j.rAp8%VcsQ)3&Lh!=&O8),3qZ)HK<u
%(Sgc"l['uC1-IriB(B[tDJ%n8>EnBH(^]U9T^&s<0R.!YdeD:[dM-\T;bO?]9S@+2\r10>d]gtfSN%+kgA,("WE-'sEH%\QiT+bk
%'`0Ks"1RM#EYp%9i;>r,-T(d[,r?d88L:]O'p%$+9'W53E3WAV)6#UpcgpCi;k-;!!3/)VGVO*r_'mU-CIr/lida-_`mG+3_:6E*
%mlI(cX2YXVTbGK#>aMh'KVJUQZKusN'1^#lAe%onM$e9+\\sWCV__q^'$'\NM)u`".e.*3&7<`(_\I>'.sEtU(5&Qfgu4h_Si`\W
%+"u*2_st=WZ:%5'Ng'XMq/2&,naT#j3c?u;0G)"SdY9\?V54XPE#;faq3<e,6UGO`%;@elZiGTMF+sdt?n'fa1-Ae;7V<-*bn?(!
%@5r[*:t'=W_NEZa=PaXbHd%.S!6!O,\Lg_MB4Tu>\lec@>iEnp77)@!$>46nFD"S3"P62+CJ<^F1i9M"7,b4<O(U<.Kc><JPpdXJ
%7jK;3&qrDbN<@(l'8;(EO@c:$-ldn<N0\C=_SP+p5*aD,%RnMCl4$HI][^QGiEQl'],cX$PD!G$4t?5n+ro9&83%Lqi?AHX8p2Kd
%B.P&ek_:0!h?SnJ4$@frQ6pJ8i1sgWl&6Up'odnXEc=iK!];%Si926qZu;nZd74cp!hC2K>['\m1,4E6C+B=]+3`Zu)U?rk)B9Gn
%%_Gn\WPQ,(*!4WB)P#jHR"0)(i)@fm%Bdsi;gK6k!n7!),Q6bZEier&\\XDM62K&M)CaaA>KO_5Q45pc2RBF2keVNtABt[1E"[9/
%$fBBbURAa&%"<..,p7,7n:QqH$i;u$q8%nV")/hSi$?iVaRVLcKBk.4<^0'&E%VhI]c@77,h6o\l^eC!Bgs`#Y6<h>@u^/ZSKJo,
%0pD5fr8?WD-M;NE#:D5?pCl`niFpW@Il7Gg!+(r'h"\_=^u7(qE:1ujWoX[Q32#)i4jM+rbW[,ijur<g1QbA%E8q192Wk-0\+>4s
%n3_KVnq0">b.4nMK;4.UAqM1qFMC9^^=%XDYp)'WTEiLuV0),EH>l22W%o=ai.M)uj_seL`9`AHWNYsP=;!kq2qYqe2eIV1m/5cA
%nOOP+jTihHUI3H)_&\s%JXU\0E3s:qr.Z<KENcP3=+5)kN`\r[jTe;GLi?M[#:G49UT:Emi0kRr`%uj]:[6`(#!]UF[:27n#:G?>
%2b32Y=QLA]*VA8lk8'4%Ds5#'=HH)0fBL,R9Oa_$f,!i#pqaA+n@S4CY;beFi;-E)cSIeq^)h]-is/pUTsK=9VbR[sf,bgSd6__*
%KJRpnFto;P5nD7kTHb,Qd=[XlP9R]6#C!^77<NoqYG@7tV$@7Fb*o4[4ZHh,"i<>a33YB%5]qBlS5Ztlk_:/6Z^@olPo^pd/nl7/
%4ZI^tPq[T_#KP=O_Ju=U-NLAQjG)fV$^s%q`X`R*P/uP=#=f0H]>5#<1r.K.LQrsO%!'n>+NY-hdU@0fD"tj2n<#f3o7LgO/Ls'\
%HKg/+S5'uDI60YQ$)_km<9"32rS1l-n&c0$&PrNris05b@VFk^+.Ts%1=Y+T_&[_8-uJ&N#I08nXj?q'=A2g'4nuiJUs)iknq3]?
%[l!ITiB.]#A1%Z';FRZt-4%XY[ieDU'8.n)VJh)0*24%\R(M<j<T[Je/79&0LCg0H:(Zj7o!,\\JoFU2eQ>k(E%KHfkSo+mcugfK
%F=.>A]kFB^,m\\p:4lh5#f8+d1gT@^lXGV6L)h7_4*%\h3B1EqR`jUnB6#&LE+d&TOu5)NRDFe_QA83DSt#:ccb/0MY`K)A3-Mff
%DNKJ5T&[NC"OB=aiBJ5,3&)Z0fic^a28=6+#`a-:dqq/g\0Ed5%%W4cS6\qIIH(EBg+bNsl?qNk5Z#2kR1C:^JNd&r"(qdimS@DA
%i+UO*Si1uSQ$^u65mIl]K,Z1[2K7A(7P24"JLBS^jHU0:otYrf"2Em*s38u_*6Z*f59g7X)_Us@47tN]]'-&p/Oc4_/[mWM9a]+(
%2\L"FnRX$3ek7`$)b+a.6T5kMeDL*D!3o!$8I_B`\!OCZ5>I8I6^Z`icBnMl976RA.WAqWBp$t?"V/_.4/*T-3%5O"piJ--=Dj5H
%R0oJ7DCZ;Y[lS(88S8*KXJQKpN!Z$5+5KfKR(r`>fG;iR"O<a2^eCSm$(N>bW[eZ@)Q]TA-3EAeWF2Rh<8_HZD@hB2^;J<P#TW<V
%MT\`u:>/YmMfpRh^*rL?%2Cj\H@Q?E.WCil:+=+Q"jUj(Z+@BE$j&)$-9Dl#.t#,fd$_\+0tFS9![eX,8YeE[3"9T!6-MaTACY3>
%;'uEXLlkl?'7gf./hGkJM86[$2/1At&NHb&Bd@MN^mR<;&+2R<Zl3VnFWPMK3O8X6b6-$![TP`@H,*#'7d\rU^r^oDR[+Bn3+EPc
%LmDH^g]J6:g4KVM/^.PYnpmd_\?qM+*%bW2]9NWVZ&/qoc%ZIn:ZYJ^4Q$@aQ"YU.!G?\:#$[#kS6ABBT8a'qVP3Fm\`!S0`8SGl
%SHdl3WYUEQL'AW*#d]0g%6._FUUQ3e*4>rpD72Rb>WEB%)*Hgeq;4#(3tF;SaE>%e!I(=cVS_amH&HMI4(uELAHmC`T`O=48R^=e
%^hMH*#-ZL+4#3qL1DXqWVrkF0(3&h_Z;>>S!m\G(m_[CT^mX7OWTu+nCg"u!=BWGqfN>,ZJFaeCC,&i+l1G9+HsBgi=f"J6fN>r:
%@jKeG/DuP8AX,%aE&(A_Oi@E^*aH4WW_n;AX-d)(V#Y-O?H[>b!6=Ce;YG;AE2Sp2GtS1`<iY.S!R;Hu$e6]Afn*,p/Hn+^-#[!G
%&O^)"'I#SB$?4][_&0r/!RC[JlpPlEPP:537l(B0('5[FK*,BOOXhpg37#DncW_$$>#(p_KC#=5^BS33-3lME3gk2ri;b8"UGoN@
%*8kf98DQ3a^`aDXF>n8k;lHYY3t"$3flX.IR0?h_dq.M>GF`,Qn:3$oX`_b."--uO0cLW_"9%!WWq1`C'i9)F%1tSVR_e8T"HG.a
%ah8i!VtUiV%772$kY*"=,&l=rob&2bE:cDRbkNn6E9]qool_BqNFsp7N!C?Ib/VtW^_Ibm=hqR++?I&E!Jdb_U0t3U1LZ6A`>]S3
%-AhLUZ%*K*j5pc@"e5m@feP9`(3"q)Pn9duJ2:6&]8+]`humR?q^$C>2f%:+TE/[bM7E&0#+Tk8nqAS)39rd8[WNp9Xk'<(2)Bfq
%C=E9T$(OS:,i\,`i35&&QZ9nGcDV:WGWHKtYVb2)Y;:a)79TRI9]0Sr?<ChAa!5EtpmDGY-m+:u3tjS0%;FC9-?)/5p;Vgn*)`d5
%ZZRU6$o'bc#89'A/gQ)&0S)SZPWYj"JRb4[[GP?nB:`9;Baq(8G&>>O&NJ4*4>u"49]2?]"rqNu"O;BY!n*VHgp&!0B6olFQD/9K
%ZCq>tm2KP;WPBOLiZYL)i(WY"DR:?4E!<bQk*N+O1]ODX2cS_ZXXaV/>..]nLo41&HY4V'>:OUc7Bku&l&#o:Xh-k&m[XBp>:OT6
%>%JLl.WF%q[?bi&"V.oA\Bn8+E:t>[=K0(rq"+qP<8\&@[G8oB:k9k=>NKIk!XGd)/DF_pW5)QRPnoq6b1i>CH[J0ac3c7k?[!u=
%U`A]4(S(o'F_#gmR0jp6BM)iD>i7.dj%`UF$lj2JQ1KDN"39`UQKqf6&9KLAhf+-6cuj"_(V$mR$gM!T]Mr*I/oZ@@`nXs,i93dC
%3aTA42+/?`.W?Z,F%_0P"ca@>e7L1LN.^QWdAapLRBM"p7KnfnkULD9^ld0=8WDVq_"l??=!DSd1NYZoLqrOXCADrqE!1(oB/_/V
%nDrjOCoG.kJO+U::'FAmGjO6BW5'Rl$57P3E;Gij1YgBsc*j7fL'q8B:"NDuE5m-ieCD+FdDCdX/JgCuMS@u.QK=786QXh3^sTso
%^'u#@UI/,l3u^.D+3$h6"2Emn^C0c1?p8P,9[`[jn:<[`h6AlWpqX:)\W<?PJO:N6dZ)=3^Q]kY6@,F0B4dk*]P)EF9I_D%a+b*E
%PI^=-3q@hX*Mck)%+,)lR*5lBi</7Xe-qqT!*&:TDg^Je^\$!!lG%=&E)n@feDKhJe!,OK4nuf9qIDE'I,H9S@;Y"Y%ikOBf5gA3
%1X*uS\BY?IHK*&4%iihZ'*]I:V@fO!5mNEa:EoTd*B:4O'`1W1c5%`kDs5"4#aQ6J3cI36QKt1G<uqRm,Au_\koleDIaEX%N*inu
%l+l8HMi>V,*B<tA''sd"E+/oCB'jEm5Q`JFcj^pRR`XJBfYHHI/,<:["*`O&RUP0C%33XCEFW`n""1P?RE%"fJ`H,;q/e\;\Du`F
%Uo#q+E4gr]`GX>D!Sl5H$6is^7ghmO2Ita%_h/J8E.K7nOMf!?cD6]$Sl(%`R*fqXRD=rOauY.""Q!rBZn2kLYeV7<aodZY-.J1a
%*#N'/UYs>t%eYN@llZ=AeUR6B#C*Sg5.20`c1]F"%,eohe@+6gJ32=>AA9mMUIE5A(r./9%jtBLbQ&,.46@i3!cV7%./2I/J/=*A
%?hqH6\O?b%dsj/e!c)2]rXJ%Z>e%fQNB2MdQ$2_:n=>-%Fj'^mH`?LH9)Y<;./(b#GTW6GD2H$dZS*ir2tsgolAi,u,Kks5DB%$m
%&sS?"OFEt*@V6!O8\`qP8t&NON>A?=n"eiW6,7A2q@2\#IJ=r`L8W]Ob&?cu^o#mBIeRm)626FC49q1ocM%dW0qOMUA)X/[d`K5(
%D)sl%^6(Y2l5A,2)(eckRD/4B%*T-WDh<('%6?:nZ^Id:`q7L[?pKA/)_Em7[S5S<Ul'"8qM*H8>W_!ADGK`561^))jV$Rqnr<QZ
%ATs\:^9KH6\l*o#;Lsdf:@O7&G9+os%DR*CgL9SuP6_EB\'o[K[cBg0Y^9k]9^p77Ec4WX@NV/q)d4UFNGbWe7c9NtpRU#BEEb3m
%cIC]ak!ohpDmYUSDbtd:7uda7)fBRN1FOru^!Y9@Q2<(rL3b"D.;d/>;'rOn^N+ZgTu-fa0RMj'!dUi+fUL7r'KgJDmq1<hCl#bB
%SdneI`/"ISScIj^@W13(eBD-/DhA#1]G\rM`;N@!/$h03IMAYsRCs36=Kn"^T_9]r%UQ1f[5ZYiI`.oQ`^2&eAlu%GYu9&-hGS^\
%7&8';AoBRa;KgC1hIrdp*RrqZ@F/P(HdctKA7_1>]nmpX&YO2l_n'6OIW0YO!b"WJbO&"KWTLF*HNT^DJ-6@"DmX3>c%atW+_[KK
%DK"P/^A5V49l@jb%-nR!`?[4!XKd-$)G3Jt^9W+71^e"DpZ>O.^9$DP1r3:NYT``F&?b\AS_T\p@NkW6gtU4g5mc1ugm^tB5*hJD
%>>]g)F=6g[)h<m*/\/>h&&,1,h?o9tQ.oM=8S?Q09M%R\E):m;Tg\\aN7o5u"Rc4I1OCp>_W(U@m#B;%k3QLLk!0[9hdPX?-4EY]
%[rZoF(KC[%RG/Z&9)s$PHTU45@AW[PT1%1R9C5FbQn$pj^!XVNlp:$`^rMV`R(\oS_ptV?Hc*R1*mTMnRoVaF2N?B/p]=S&40uEV
%VHY[E0mg7NT1`!np1EG)c+XXp2k3C7*q.V8E%m-?%;KgXj06]&Q.d02Npc>_WP&bj9ImM0JPTGY)es;W_uLYoeD<S"Pni)Q^%#^Q
%s0pM75l)?C*n9'1!r>2%AoG&>BW)Sko<cJ['X=I2KsVFr@W.o7C5?t@Do2,&G(a"T]nt/n-,1+?UICNc:@&G2?8jt"&:5)BA+`)7
%p-q],:)V",%*X!KFYg9]lVLi*/$l_)'4P78^$4`.;XMcRhW/$8I"jA&,Li2K;`Uei)3SJrp4h=kEFYdU%;p)66eFV-DJuOCmaYb$
%hGf4n]9V+i/Hd4UeD<kYjt86VgDb4+bJPIsB"#3jiJcQ]W1IIY7deOsMLc],hIoancOIED-`e7YX*S>%>1pI"ms=`s!]WBR&e6Bf
%CD8\^hTSVd1rbO0Rq6mkBB\.-,i;nOIU0Lt2=WB-Q.qc<CiLu52r%<e[VA1s%>0Rt+e@=k6e"<%eDBhX.lY/0WP*"=0Y>%tHS_Rl
%WN2TEqsKf"qG-ub<!l^&@pL6geNhZ;9M"+?$PT7,LTdokLCCj2`0!=k6r&gU"I?G>%e4)>G:9WU>)"VC=JVhU_;IuqXQ.Sq_`A.;
%YSI87A9fkf;!bh_,"jTt18-cPFGZrC5VQ[nFeY<"80C$*F`Teh/#$`#.:gkGBXZ4u>*drbgp-UbDY8Rt+Pk+%C0`69R-a[h?KCsV
%pYg7q/3mq1.KEsTd=u,">0s!gg98t2(s$?Jm2DW:X-N3/0aTL!7+sFm]jp[H8W1je'rni6O]0Oa[+I!%=HC]i@GL'\+!06"!OO@r
%<j366?**[OZ$:(1Va3ZGMIYNTL-&MF,.\R<OsuW<l:t!WQ)_1D(3V6B8"p7a6K.NF]IJ/g5Sct!(+gsF?:t!c1`J\BlcD<$BU$@m
%6N_f(-Yg[YF6h5JHR0fF\:LRjl!o95rntL0'YJt/;'1>"=Vo.YMCM?q,g@ce$EDMXBrPdfIP@dr`f!JORe9Pe!:0`pLfgFKE#/bd
%`9p)"=Cffm-n;I;!'@+sY8p@,5kt]N.?YE?083t+^oCCgb4#fSCN$YGG!'QoXAb$%Te)B(UJVMO+=Vil)S;uC"m3JkHNHq[Q)qo6
%=X?G<ZYd)o!\i?s#o:#;gP,2<0]_NMNn'j(+h$7e-bL#/^JP"4=rdWJ3j>Oe]\,h_$;;mhlJ*%mZjW)G0[f.)\c?L(9Gp<e*b\Lq
%F][(UC^u)')KkKR&EPIc8M&=cBgaBI\@M$[c0F^l(l;>A@a/M@H6>d+P_@(8;4WsfQE-oAnS5pm-^I1)BS#o;#.!_''JPJb<'\kh
%W\$J7!5g-+,Dl;;!>u9!4_qYu,n6H*I]Ptd6S=Do"P1lGCZhg/:bmH.!i'?Am&d?]-7;CE:c[&<nAc=6KV4*&_Dg[<7Ro60%aA1u
%&#-0kI?'1;IOJ/0fR\ZpL$4;4#AL*\oPjrABkA/-ja0KjBKRXmTp&gJ/c827"_?a"mNP5s"]i[gS/Y]V>g_gecs"L?&@D\@"Jk?s
%jDmLcarpQ".b.<?-OTVk=Q^4CLJg[j%73%L#:BLfQS-Eg`Z_-J9Uqe+CUeg2,G\'V^K/kC$A?IiRUZ7C?6D&PYrbNA!l>Q*!t5rb
%*TYH"g`7dS$r1,$RSe$c#;*qNaUD@7'V[;bUP4jN4.-?\%tKN[5Kie+"ZD"++3bDe$(l_nHaGJdO=fP2L)&Hh"u:odAIA%'WLI!g
%=m$9/G.Esr"BO=:d?&\BA*08TpOPE>3E8lj-7)d.8_*OA?V2Rud#m@4"$slt#'*Mr$#XX9V]tkFPhpqm(c'<g&;V&fi\443X.VPH
%0sl$fU%F/(#0fPQCh?6N,^)J"@pk_e:^>*qM>IBqE.D]`=ioYrJ\.//KA90HPp'8G/e&Lo]2PPF@C(otd;o?MWH#2U*-/n=&/(,7
%N20OF_i,aVmPt83?)=*u]f^kJ"`rn;3@R3f]E[U4Z&Rp%C__&sbVktnQ0/TtQQ'n;,s`][GEJ>EQ;Epa9uDhra(CD))TjLD>OW&%
%I6pC04l\]V\e.K5-S%&]\E]MSb62iaO_JY?hkK4L=IpMTe%*\2OUp5g#lRqDs)k[_?mqnDU;iHhe4mS5HeSf;eP1RI0^9q)_q93Z
%CO82I41J!665'Wm;#l$mNXrpA_=l-,IsckG\dK4H1GX.+6^?#++;fZX)54u7Ql,nVADR]VbjKbM3A3S\6Q;H86$Smk*XjG",VidO
%%GY`o>I8s(TpPhQaPetYKHR[V\2m<W=;JTW%Y>"WaOe<O(raor1$OelO?9K^R^k:-bV=jn!`IJcQ?R/:7Y5hd=kk#/>Z.>-5(Inc
%q.44l=LJ=rRNPe4+%9TN=u*`[]Ou;V9U[3FD'38r3Sk\%U8;Q?pp"-MkY\CL2e7ui_`5iL6)7RWHtM?27HD#JcjAL=:b&QH1_R:[
%O?!b_gO?//pQ!7"]=OCM[RgWI[Z2r,R`U'IFMH]ep80,idFan0Drm^M?C]&,;o^f:\T4EhAIC<;h!%S2&.77<&i6"-C+K"h5c#Yh
%d"2r)ct[>IMFp-I&4k:ce[3L_]*quh9lZlJkcNghUn+3b$WLE^,S:#'ZAaPd`>X.QEc.HKf8"'&!N6r8T8+doH8E\6Z0/D_5rMp[
%[oCUX[[X.iRn(sB?,JJ<[b6&ad^L,^%_16#SKB[D$QOKu@'!f(n1;WGS0j)$UG;<?nAFkMgpD"`%<GTp*^r"q4sFdDn`>[@3ML*L
%9S315DQ!n1%SoDC@5E(T;?pB\2qtd(V3Gqsf]';m_-".]@Gi?EDKgYD:?uRM6RoHT,B/hLZnPDf/_gHD`&qg3)B,4u)#"Ss#1MZ9
%V/u-r]*lHg5b<-0T8jae9!F@3m[UL^!+3X(,^6MEGJQ'C=+9oC<Hj#$::+/o`WTXj1"M@mNGMT@PQNiX!P)"VN@T*L;M\.Np@(tc
%$&2?A(#-5+"520P?tb<2(.07BZ&<Lk9]L^3&A-<9mJo0RWj/O(.m7TBi:(I4<nq_RV?!(T<GGpX:aWs8SaZLK?2?ItlN?SK0m$'>
%n`6>`7FLW@h#L!63)<R1C%ZjrY3:1h'"hfqdtlqCEQq[D8uE<@NY.QH-(CU4,SbRPI:/BOL<jtETLKs*K%aJh2],<VOUgQ7=]a75
%\UgpjecdQ^%c*t(#^!tB@Q>o+L0J9^#2=[GC89AO\/dAq/>U$M)LL/'9t\KMFH[?Ni_>dJN;;h>fN=D)8>*Elg)]8og'h<q0pKJV
%:0QHaA!REUqFi:[,!f]hMt(guP?l]6?r\iaLrQTHBQ#;_O7+Qa.lIXe`&_t.--`RjWqZ=P(>Y$?G97;\,7Cjf;+*gB$?/0`(G*c4
%$RBd,#+,u)Y%`\B7;#HAs(1ZTRc?B1CuKS,kWe]t,NK.EWm&UiNLg9qp6g!#b9tt!E_K.T+L!;(KF8"f-#7u.QYYuZ=]Kkn$5C;D
%"tT'1OIOd#H/6#P?e5(MW/_(?aY?^"b+dANNWV?K'%1`&d_5kIHX#gO+QdEZX96?a,4-CSKkrn,ItD4A__,UQGTP4)4PZ[>-1!/c
%('?fsFi:R.JaWaD-J;@0:UFj,V;m^I;j.dJYTJ[^$U["!E+.JZXkkqGOUE!W5/O?m]:>(H"E.67d#C;[^^?j-"8?:.!&:Q+3.^"t
%'S7,8`cSI,-FgT9SLVgI+>JDB-66u.18JpT&EaILWX4OHI#s'mYT6OCk?.ZiDea*f1lD6`/WrABX>Ff3ke,t$--0[`#H8o`[S.o4
%J*DZmbOO0GA\?`Wr7(dLBHkR[le;`Sf@sM9kc7hmJ^kZ(+6Am'Nj4?lJ3i2)o.08mS_ijY#BdDi8ruo*@h>PmN]N+Kf[m'<^hNmJ
%]T_qZ]ZRHKkg"`$dhZ#V,<lGD>Bk+G\?-W\FAD.7#*L,<J;Bof?k#-(?k@,Zk;h!!S6($%.T'\($9NP5?sp*i^8bsq!C']qGEI2g
%Ra@=4lU/*%&]VZ9/h%\1S!Hg$X?DDM3Pk_+!BkdkYf<'Km1"9MUAN"bOkH!Z0-q)o`ni>2fp9iSb-0T6T,:O^7ibt?+S6+L%6WVO
%EIB>VQun59`=CtU8[8aqi>ctpcuO2uk4*N3Voj/+ML1FP"bhI2'/^-8*>'AaLohuSCi3>>IN^&]0_S\n])X-fX9WQ+ChNY[/on87
%S*JV'G&'+fN,IViY2$W+Ei],\]^N;Q<_u\0ejRAcOtD>03):bY@[l(4VW>SN"91-uWe6Wf?^a00K\/9!oFfcNhKUFt>Vr^hYr"SL
%0L5^J9j+]T4>UiLhQ>]fnl@p0f]\hG%k^(kOrZ%oat:D5]lm4ZTt?me.pRb']Ca[3(Cs#+/6TWIb"SJfal@$Tb=Nmkni!DaU6e]a
%Z,2oRUIc,@V\"kT(`>H^XIf(nlU?aJ^qJ.j7Re`<'/<#r\;SL-Ns"/4;QT)%0;3;#$Q7O)8"M.M`K8UEPqSE6<U>,g.7g#!D0h7R
%@pW>Xi7juR4_!]tJja+!$1?c96^W`@6MUOKib;rq=K3RaRDsX'XNgTC_.#^HML6(D$DE\9aG4ROFuj&JfsoH2=@kb^PFg5$U6<td
%,hQBH7\kt<Xn8/@P1:qtNmq;p[tE7]6:0K6cOI5:0f@rR/SH/#b@VA'+L0F:lO`i%m[4a@'[KEK-hlaEs4T9+a4jm]8@qBS/BecR
%CiO3&_asinE0Wt*F*V:rTc=<h#nm2_pgImA_-<:,Rg7sgW<6j!PrPMY3JK#G[T.3%-d"3$-Ol@O<[KQJM'H8m4X$'r']K*`@t;QC
%P!M`9ef\.Yo`-QM<SF`4a^0mC!ORO9C:!sW(J:R/b/.sm#mWu2X&6`9!h:g_:%*Rh/QM'44AcWai%L:!_SLHuZ_p?m%:S'IZOK,N
%q<<oEMH2F2GojSjohY''ci]qfdn"^\kUN89R5@VcKGW?9iBU0_TiQJCcBc+rUU"UN'q1'qo@m$%6M(\l7naePUC8#lGcYJ0(o[DK
%'#NmE"&lpqM-,.h39I<OP![143/?im-Gh(2UioEK%Y@:*,8.eF0lU8Okn_&IS4LXGPN%QeHh1uJ;#T[L`-K^b1dR1U1IW(k#L[%Y
%+_%ra*&,cor0+s>e6Eo#ibT1X?l7_a:O0^X*f;:i@=+`[F2VB@_Rd[]2)Qjh8NH2Aj,FgOf85.j>AErSF@!F>C-PCcO2+k?SN*L1
%Y`a:oB[THW\$dl-3,2>1iERPR/Q*8@P-\I>N6DN[`?%Q-!T.B]mt@'Y5TDmgTCgMj-NpRQEBLmm\5,H8>2'E%8qqj7/PLqtKk,e;
%=#:5s5,I6?0'<Pi)%lZHW="5ZbRi\Z_fAMOqA>(FSuC9I:&kT?)Q;r*:0MZ>=:(0je.^,'7lPo/Jk"P"%%XArCSV&cAr["sS'#u6
%gi@pj0tp.9hW-P3Q6`5Ih&gU*qr=5eS8]"%=F+XL%9sToRj:2E%OA*/&Y'=030:p&Mm;StWnShaBN$)dR0^GnO]ajk^I2T7*OVjb
%gd/ib\>jO[TG_japC\]NRO^U>K94.Ihk1*lcI.ZZT&0L?mOO<]7gR-his(iOR:@']!]U2,!X+?BmMfIgF^P`*hhm-24P3j6$o-dV
%;D40aJgY//@VW4O\W95\*Q3lsON*lXA'tQ)[Ud;mBo3s'kCK=80<l6f2_#,6]sr@KVb$2?n:Tm.nr#Y@W?bYUUobKYXY@HH@c,hR
%a.1NT7,d4t]DtGr%&jP(*ghXN0os_/X'nc?)5g6`9((!c#"]qNYe[&tR4_[JR9Pl>:WGNMm53\>a&9A<EKa(:U&bhUZXB@b,t]*9
%M9X^&gRbCKlEKT*)1^0ch[S[5jr(S>)\hia4@jN6@aYJ>=s7;rX7TTKUm;'E12#*PMBd%3,J'?>4g6T8TF@d*Pq139UEg.o2_0Jf
%E<rr^,%QMQ3o%?7C"<_L@;q2OMEBsc=dKUH"&R/<.4dW;+CF;cg81Dq8%<:UPr'Jp$]K9GoW6'3l%E5C%NsYn_E5fT*[I4t`KYnX
%d]sL\&b?oB?EtQ7Q+8$WnY82h)C7%e!Cn+n"ps4RrC=-b==;r\k8L,N^uT8VQCUiDlN*EmgF%BKrS[g!+U+RkA]d)%3/mC$Lnh#U
%V,#K9)W_X.`^J)c,Tc\IB&p4sV%^_Yl5#Mo$LVkT!'%)s,XW*">o;RA/9NY0&$/!4V</a4&7guW`:.?:'p>B-<^7P<*>5AZRU64$
%%BNK[/u*Pp6OU>dg_]U5bd3Cm5eP+R,5+"F;34`;Jbk4].<BH+Ta(4l5dB<+-X[o>>^/r;K_G`bl9ef:HIR'Bf^n;P_1VJ^\0E71
%@6;RXFojC/--*4`fQicGM3u\4S7WD8`FRF%Jb)>T,[RR8e)L'E.KDTU/1YeO,Vi!sB3*23e7d\IZ3TZ[gC^_<M$'4G3-:k]>)BjO
%gb7&V/*S"K/r8W+i`/9#aV#TOO9?$GOg9n_`5n6C?7PV+70s/S[gc(\(u7To@,ctqeTpX;_T`03o*sY^,hT:'%r(94JUldo1"M$k
%)\(^,XNc+&e=sMW3>.n%eAOh(6b%iW'qUc+b/A+e+A"\UaTVs$U%[5sgQOln%+Nk?.QS1"MJc!e!8fMmQ%L!@@e3"LO+r;mh.aFr
%d&%&M!\Wr?g]:S37Ymt7/ko;BEB&dCKtiOq"9ds+?g%pOE__8+VaZl45QTj[i>FV:jJpA&"IgfJ@"VGlF\*6D+!3prNWe`HE_Kn,
%H,'je;ECEZ!X[QmjU#!=d0H?8PMmqE"1\oe%90=#mfGqIEhUAs-"u!5]GZ`GYH<%)CNoiZTB*paV+&N,I>SG(i^fsX'ZYj%&2cdG
%WB]dG<i"iKbm0Vf>[r3O\C%XD=D:6Brl@$m9.^=0&A?j4h56D.$$'Y!"sLpWOX=;nSO,[(=`fQjb.eWt*\+gj@XpfOcOmI>W?*IY
%ndNLaX.9Gpj(L9u0.#TuGmlK'WKBRf1mZ`t?BJ,ZrR&qb0Sg$jkR/7C,[AchC$"t6F3,1r`<_#7o,OM!oE'W4>QQWf<qTA%@<d4Z
%KtgeO6l1VkT()aSK^<<SaiXQ2hls`nGUI_Er$lPGN\F0X<-SSg:go`oRYU^/1!JX@%7/SUNj2'9a!%/B$1T*9;iuL/GB-/6Oh(]<
%<<?j#_qLbI6dV`a`qkWF\>7&[N@DnMH">&QPsn?q4=b^8nHZ3uX;7S8k"=V?='*SL;_+hC51&P/\jh&K9\Sh"@*]4\Q+S[cb_03Z
%!iA\O'M19-RC.UXl-no7K2Y4%+nOXm-QAJaR=gBif.Wt?%<F,Z2F0T`Y!P1)#]As9i#CJ]Lk8Yt'7As7%5DWR:E1X57;;!/bXrT+
%8BClY2/e%+`!a[B#6-"Y)gLC:UBrg%'Db4=dRcp5;h@k"N\bYiZ5Of@D&TEE0;qDs!-%$j*i'Q'HXIM+feB!oC)&mqFIBr\KOic2
%-m>tWI:X:s7sl%rAU%>g"62sj"jOt&24WO].Z'UTaZ9`!o^tbQ05N#-<%D9M)n<3D*#$'eD#gcEB<l%q#s,5dMKreF4%UN*VuQoB
%l(^ZG/9'NLl7tN*On*g\+>L)p!j]V6M?L2@!Xn.C_RCakKk-&^c=-u+!7fcq@g<91V?pJsN^4kgL=j*p(h21LJ4Ah-;%0]K8K9&q
%YE'#l+UQHH?mO<3'!rUNeTtC$NL6$;s7'*7cq;-3`sUn90Li;>:J9$Pn0+GBoGFhL`1CPFVahTE\t5-aJ(SN(1"6>`Zc.J8UqVA0
%[WT]L$]+kY]N8#"".b,ZNVfZApGaRYW@dj?pj"EK=$#2&4'&]*=@DtV(Lp?j5fD&p>28:#$rKa=$O#1@fJB_:!7QRro=VI8.CIc&
%Gp,'-Pna-?OB<rF-0aTm9Ah^@a?-.Y6&eH0%*gE*`/?C>dUVb\+M'2ckp?:s>7Pr>S9rtNFb:i('pI,[&6f=YUmV)$G+s7mKZaP1
%Uh@u-]d;^!fE8ni?s't"G;Ls#!mY?0+fuVA,<],2HL7(;lFDPWqDC'R]r1ThW:u5<o]YT4aF$Z.+dR]Aq%Ubf>TQu]MPqq`>?!X>
%$PuoC9]/@QBELIPiQZ_DG/hkMG/H`qR!tW3@`T]$_R.3Z#G=IiIb_SfW0RQ9LcK^GRNMsM*MXCgAg:MAbRXFdU5kfZbfF%OMK+4?
%!;1LuhT;#s]]+\Smnsdc9[_*4GnS$F_#3WF8"uT:<KqGU7R"Y_&<b<uJR/Vao"6Y+Y.sV'Iu*R7,,A+*!K$;m"0U?<VsN.aM22o1
%?;\Z*LI&$nCW]3'M`\$ML"V+K@UD^GUBD0#+j1*B[rifM@INI?bTUuL'!f04fk&hn-Ask.-qkD4Q<%uuA^jl[9DDYl5U*$?Z%a/Q
%!'m1o%P@`2$:d5g@hLNT:=^&p//puL7hCTVfs4']@nN\a7W@o%6B\Q$;>?@nhM6aq47Z=7$LnLCC,^ac)<'?bM,fL0ZB@Q&;g]OI
%,ftZq^W;Pn.;1@PUEO%tV(FMIqGZ=;-6_Fnp+*@HnU.C%^G>"$ClSQ$`p+DaC+:u8H)W7q+DScu&'4f%)W<-^+nGJb_L=i1.pID0
%g'[$Hgp@3p9T!X]emT2,J?t+Uf?*_!ju]*U:CXWILc=W=,q^rEhBdt[oPJsN3mUFo-*#md',X[LpdZ[4pWC;h#]gn1o:@LiQ0/H_
%+e=.]ds.W-9gC`i?:_`c'KWG+@Xk%u&hm-a,J#(X,g$_Ge<FuQK$Ao/f!5FHo;YKeO:[A,\A+&O?:hHDA>qA.7taB503aHKeeao"
%'3)B8DHqHW*>9V+'2"R,Y(TbToO)\Ii"gl+!ktV4=:.p3XY$6(0Rp%M-+k'Ffr.c"P-)PHhDBkY'Gq#Sh'#Q)$X(RL=t=P/jH2sb
%O'lbm"DL)a+HQuDBFkGS8,@J^800aYfb9tY5XpI8#Zd&tXE(Ed/07@.AVGK-#6_k3SQd-F,%>=le8.Ig_LFP!#i@p-^K@0YK%MoG
%<HCai0*H_(.OGI,41"H/d9_R#(4qg+q29p1!5oSYZ.015r"L$[!WZm`*/GE6"J/_g,:3,],q^6thaAS]\i([%'jDbg<+KR&:_Q%r
%%Q(;,6=7N$X15Kl-jN%E,c\ANLDqs[A:P49&'lA&+#(3!7@0[7,a9nfDEbf9oN^D;U991_GhjJ[:d^r!$,L]@Jd@fl<*j!d'YuW-
%e)^^q#@cijF.rs`(Bd3(:g"^Q>+kc^[/?(g/cr20-j]AP`o(q_/L7<^q,*ruopg4l$c=AN_A@n#!DO+<?6N#J(Fnta<[@'G"^DX;
%ehR6S\LS5=H.FIrDpjohe8A#V7fXNf#C/gVETs7Y886L\K5Vf&+[FX'TEd(U/?s=q2H,Bjfbc;HaT0:*#`OmL>ggk$7_U&K(5suu
%@H4'=P3bL!]VXTlYh6lV!L=da@?:LkD%slBCj@HCY)o<L>IY(Jc4C1<=[?N&?*>uATSE%J8MKX9**PJgXPiBmis/PtRNt7NHsSAV
%>#a=q6,s=Q*sH7TQ#E]OEukWT<YV$Tfd*CX2bnYp]V=hn;MkO:7K<NC#EYWH.00F,2<g39CrQh7\hjq(8!)F<.Lkf4JcaC[$8k:,
%n0Bigk^firI>"L/]N-sX6Nth[lPV$A;H.QP&)b(4i#q5Z]b\1:MTl:)JBO:HBKS,'S=c*N+r*0T#"dhXF]!<8YYGH4KsWft")^cm
%02^.tc#'hdP(?njVXULc"pr\^?cn#>!G6oqpSUIF%\X7Cg#$3=$32tHShSI?(h3TYUR8:mf])].SJWdAM!'ajH0c7$TP$\=40`<H
%1"o8&&?5=B!'%+2)Kh5B%l&\WZqmf3RPJ(TFtA%o"JG-SQ6Z)^o=M4;aZdSD?*N1QFXI(]RW)$?2YaV__$.&n'ALSHKd(/X]IUSs
%D3E75UZoEZ\P.u6-=a"gNF7$&/?p\ii$?m0-,J:<80UZ0"Z_VtOKF1l!!a?>s&10*.Lb?,%kKGF5SjLFn/l4t-/lpl]q)tS6OXs)
%Ff8uYKb0NrUPM^ql]VB^(7<o+3!k1Tl3Gq=5d"SQqhU'Z8\$N$0O'HD83nu/!VIR#X'3t%f`=K?/P)lI<ti&r;'JqgMA!6bk+<t1
%+,&*E]&-$c!?J</GoV3rpG>tT/X%,1TRbuDO.p3WCF?ou4a&3bM/!P&FO;SV8^EaNa^+J1.4..rWY7IG&OSm0G"k/tKX@Ss@]N<`
%'H;E<TFDkRP]e3n@\)(06XmkH0Aot:Uu)Iu,4<>U2\sA*/f-ShH;$_$6;uVdr".<$b$B[l;.?!*+L[9MRC)Ai\BQ&cc?4F-!n/A"
%56gc9MmA:Q(^Of0Wt_'06uN)aM'M4b,B6m.c)E<O:fr'M)2&6hI36,GA>24P?4W'qf&5dg'cS'a_Gj/Z3tO=Qj"XB"!m-)S4^/oQ
%Q6*0(G7*E;UL,jZ?l^JeHbH3K5Gid,R"nh##a4dSKtG>n3WGKpKs3P")gLIuGL/)hcFXl0e-QlqjmVNji"e\R-eF)'*%eB-N#Ibo
%ZpMjh8nW]#3[.`Pm*4o:i$Y8Ra""MV/?)ZIODHKY0goIp%67*1Z;Gkg"L!t\*G`ph0dC[Y1du)K@H-k-6n?u'5THhLZZ$e,TmpT0
%9)tC$o26lCOOGc?:*::>+Y,4`[172?<[jBJ_"68'iE'l&EWV4P*G?b@b.,mIi/:u^[:]fGL]qWui"M=&6\nL%*;ro%9Vr.B%3r8%
%h^%b8SPt?u0S?FgK0p"Q=q+A=BUI^eLr7`@J**),LG3_n../EUJhAOK(_L$rTl%n*$R157>Hu\6W5<L$hF.3+(+),r]MaAnP7XKg
%o0jlc)CpD-!r+#lD[VC)TubY)<'mu&J4_#VOPZgnK'qI'MPQ$.2;&QQgZ\+rcp\S=Yu/&/BU*p=#E,ENJKU<,BI4T;FU7">#eAF&
%4<eAM"g%;nBVB#OX@6[T@'e3-JpMU\TI$;.Ijp/5AA1G^i/)i?L/(];9449BF&%7H.XdCs[DF#"+S;`HMkZE0&k7C'PC+8tqQ,4e
%4Rl8i#q<4X66ii]7/7tr.Otr&nkN(hH>AH#*ACu:ptuJd&dcKm\Ljcf$nGE8!09Wtgpf%+orheLl^.o;0kAL:9u%ZWQCec92c1.-
%@)/d9Xa4pnDSD&hMT8h6OdC!!'h+,4=KEq67Cnhm"&:N^G>`q+bVqG?V11e;NL6%">1ZF.Vf9C:BD2q"":=CZ07u.:9A0DA0u_@V
%@e2;(GZdpL,Vc*(a`%Z?#,Y\VfF`n!DL\Hc0r5Nr3+J@phsib%c5llu[nI;["Ja9!$8N@TlB.U\aJm\Q!oU]`;PCu1(_S9]L!u]'
%m=u@I0dO]14dDXoOos&<b+QNZlCssIL'TFM1:cmiXIDeS/M!NSACWJK(Ib.p7SC_9lNs'8Q[LVikui9G"Pm9-;+eG^5e'*(3Sd!-
%<;!.k=$b:))0_8Yc:1\o=^rRI'0G"@hcmoJj-#(*c*FEIDL01T"=L:Mei$[>U;5J;?U`*F'WRNh`DW[u'[>9qqe&Q^FXO2R.-H6j
%Zaa%%Bk!cO.=2\^:kD0P>9p$e$4=l=O[9t@ItOtRaU!.)ImC&u*>T9O>,h@\.X5R68\IpG[EcpW:/2Q4VA,bS@"Y-u!V(=[hR!D"
%6\\"JCuCbk!bU82"A(O`/I/h+$VCX0F*WU3T!MZi>J[Hi#'8N+/fRXi#b#!QW0((,]Fb.G#t_-98C("%%:>g=;YVMp(jT`;iTGKH
%gAo^>$o+^J&-*4S08THolFmPW8=3X1AiTf>@@[gIfq#1_(Th5Fd4R-W.>'8UU+7p?pf7)/U1DKi&(rqp`n6^c,kW/`b.So\AT1Km
%VfbP7^I7Dkj\>l3d>O&]LV8CS>8nBB4@h^Z!;R91N3p)l:=#LE&,S.2g8qAW"?]P6N$F61SN'4NbUOm/FN',N):8h47:@ViN]\40
%UbfmhNb:Buj]RnjQOQEGW<PNk-Co71_Vg*O-A]VANCRSd(^aOs22b#6alAT[;f5L#0nFKj:<LB%B407lYs*S:1"t0T6rcU;KOIDR
%\]i5A*>^sO0_A`UEIc2-_%"s%Bc*9/Lg:(s"liMM<U$YE)@=E[Q0<LXi'HW[il74T>3.)qNWE+s#n\4u=C=[FRWXTt>.-gjlB;.N
%!oP4skp=KrK@r#L:mkPG#l$nM^H*oDp_osW`$M6EU(PUH!I_?7<#`X*)6JX(3"Pg7cjnRfL^:9B6VejY)-_n_$$ud&&fDa&*@URc
%b:(K/?>6K[cI(n]7VH9W\"'*b#aco@^ZB?aWj_K17f4hDqD!,Vo7t;:2[PT[ng:'/aHb>'-NPZRe]h3.(T#,=Q['r_k9%\9_HJ86
%#t`7.jp=E'0r.)hbZ=Y/WIb@0e:<cj;t*G:S8GsdZk:AdmE2AdEq%t\?B$*=A=#PJO"Ep*8ZE4g<)[JP3CjWX!0!'6"s+AW"-qJj
%`;bK"'?CGb)*Dpn$%'6P2Cft.XKY"NaGu0Y/>S4)H8?j&9(j]BaqX`Z,lqW$Gdg(45krh5+Yt,q(4gO]IMud&L8RIZCZ,ru,nln1
%r5drss%KYK;52nQ3&a3+9FGOaa2U1=lJ?NnGm,j$_M%9BE/7T=/JLb,TMuV$b;>=UPtm[e4b`3.,A@2<!24t]Ya6;n-X]SFD;_!q
%(nH=8,,H$;!T6[Xo*F.6!.!bU4FoeYE_D/l\0r]51'Un'S0^H'X)+g><AG8aJIf$O1s3bC`/&>4>_7d&PN]>'dmE8NRL-b_cu<_G
%X=LDddm1e$]"%T89G4<3l8Ki"agP%"Z.dV&+4>Qhb\J*45nj`1UN!;?'FUgm$:hN+.oqbo:0\KFkQiFiDh!ePH=(`;"VD)=,ks8o
%1<J9(IL7_C1E'B^9!79AeljeT&Z9U-6#E=(ELTQk]n5uA8[3LOEZ%F3l&f<s9,9\r*Z6ABC)KOL&u-Z.`@p==1=&31$8s:&WrOb?
%Z>#bF]EgHb(/f47=E!*TVl14U@^>G*KugJ85jsjBFhc#Nk`\88QJrb?\BVIOjPgfVT8=oBMW%=jD0.Oa_nn.m^aL<a&78j^6fCWO
%"<#OOcT!pdor#H4#\g+8(__T62DhTA5oh#b:kc/L#!Z'69.<OZ_bO5_,X@N]#ZK4EpCre$+=PYT8a[bo0!1%$;qZXL=$5@;aGW`f
%;ttYPH$>NONHi3tQ.2!]%Ak_""D$L<Q8@t*A0kiDXV2siiGV-h<'Ok>MK8o0H8M#hS'%_Znq%g7d$?"_WGRm$i)n8KHHhsZ-SQZ7
%CRafc0T\bOg&*8E$'_/.HpOtn;XYc0?qRF#d00V0\QA,O;#2p#$bS>rW=U9*PE.U/Pc4E[:tO*NB:XS@%-0+nB,![;9EN_r0EhX5
%bKMGgi^D'*PHKSt/.(>U8@p@G]k+>YHA="U;GJJ!s54/l/M9CrP5@,2G(mJeTTa=J.m$oZ0C)6I?RY/XLn[oDFC\R[k-U6T&k3HB
%/*eJN"[-P@W!4g9$BrI[)F/%G_6PCV0QMl8Z"GCqL:WM#)hpO\,)9:FShuVJ:7[4,#".UcfTEQnKT-lies]R3TbM-IbNqhK&C5[j
%!A3!JoJ;qr^b'Oa36uX#C#4fQ3YnV#`*)DO]'4q0(b3WRTjqUg+-'#dQpF_R]kaAt?"8S^OY/Z$5G*oJ3WTWkqJ!&#9/HD7Bc/#?
%c%rr^Xb7<qR0dmuj9RKGKi3a7GE4d1qV]$;,IC,]0bQ5kP\_lcA['l\L*8n+q%sS[3Q-A!,\t%CV@"0b4M[78:;M<k=t,(NOXC0B
%8aGNh]ifoP&]TiA2,qRoU;&Ja**Peg,OIOnDjFYZq^I`=)@=QL`=47),Wl7_)QXtMCI*[/i!-D+\F7d(%BU2p@5If%ef$RAWZL*/
%K'ngh)3W';U8MuU(oGMTcqs7H\L%s5%q5SIZ!7sbf./L(X#1d&6#N#B["tep0^ANXL^.)'g/\maS$">aPr.;(TFi5H0@Un=$`K%4
%`=+:"%g1H?,2Kk+6LDos(8XKRG:@hla;l4q#.b<V8DlcsD9PqT/!7Y=,V.jm-DuH\`!]WaFBYQX.6.Q)Q3>7#\QMeT)'/@B=<tEE
%';-/EZreM\SO/[#2ZYkE:otF.Ql%3Q-:TR4%G>sHQVqZ0PXT_*bgRJ._1(jkn!."eJ^Q3_P(t@?BQPAs0Y$H4`+-o$/*qU.`$8\V
%P.f;pqDtud?oD/AS-7;F0ROfelPc(D2h_>g%Gc?+ZP2dH]W"G7,=3d2',?*H$?hFBN9F'NZDiF3OtcL[\Amek\.i5r0BeX(L`0)4
%ZFQkf`n'BE)duA,&YKE*P#BE!#`;tXB7Nh^F@78b:M)+WIVQ@VN?!BNH=c$)b5+lVJZ-ptOfQ='4s>hl*g5LD"]L-mS=mf.8NL/A
%9[gD4[R.bRrFo.GG/NB\.7eMjraMj2W"Am4#-h6U/(c?U[")eE7[C5[df_;TN0UQFKFmXL1m2q+K7OT+<77b.Lt=;V:L/!=RDX7Z
%rI_K1J2\%0n?9o>5R=_P42U%13\PP>]F.75FGJYA7a$"NADn4#6@[Z<lPZD4JhUJl3.dPe[DiN53CtFg9#8PV@s^Mj()R/S>R8k)
%/HIF[L(bp=\X$1iZ!pXt9J\4,Va`&5Q4^&%!Y]j)N\&R+fG$A@3*VkM69nd#1>4EK%7!Cu<Wo;V7"tL@4qcb588VS9*-#i)8WnT,
%MNpGi8tkBE69lAMUZkoubnMDl563%BVMnrW1SGUr8JQH"gaAU4!%ot[NY7L?\&/!]?])c-,J9&-&L:;P=.j_rAYr#F!&[<r%im,`
%43?7nU];ekbN*-L41CHqNeWUig>ZX,TT6AZ63iTc',=Gu.EtFt$F&8m-&,UZ%9jr/LK$/q5:MWseu'&lSi["C\'ik@5b@\0;63uf
%3R]@:OoZ1%+EYLm0O^&O`_p?c:m"+9hC!:[G=&b[CrL=*mZonQKp2l[9IP<[375BqMH0,!%.gj]6sIb`,*jgaSV0D/SS4c0BK1at
%8Rl0Y\Up0SJ0Vph"595h@thnU8hi2cWc2tETek&&;CV2]$5>8So&?beH.7_"4a%.ejpl\"dQE\PaOO3teh5+D9#&27hC-5SiE+tH
%-"/@bG$G4-%e^bPi?E]r:ul.T;L9KUQP`:JQt_'h.DRnpAsa"A@qa4;7!se_m7rlRYPX"2:<rNfY2knVRN.1m^H*u(20cg8pHP\P
%>FW*j\CA<r!nWTpP.(Q]5eToX5liU:QGd?oJX&X%=6qR42'M#6Y])K-c,<&U0dVSh+_1_&am9B;$nqe#SEqOu5`7AH!"e^_\TOtT
%Sk6MD;<[ulUhu8m;=O4E)`2$0SVkBB%_#(RCOt"KJqT)N,k]NCYLfDPIYhXG7`i\QaFn5bJM$dmr<D61i;_mj*;jQ1Qs.H5OW7[P
%@@81IRl<_^Lr45Lr.i@U(MG,#@2%%_&IbKWJ!h(c:r%@mPnqu%4JrJiLuEHuPN83ZJSld/Nkg`&$R7!07<1^XQ@PLG6=SDn;NaBb
%KD&&l\b)/+i)0S_7al1O->Ag0TMo!q6Z9Y9NORP!$tH2u6&*iGT+h?h:)Ybl[3__nZ_^KVSp8i33cWoi=`9#<80%*Fj#HXaH`*7U
%9G[o+(r^Sg1RFE:A1,J4Q?\lEEUX&O3QoR8:3a6M^.eoM?:n$tJD7"&1a10-$UZ_VF1heL(`8qu^^)O/0D#\2AZ8VF$67=`X/%,[
%-%g@aU!SIn"3F'A"RJr5adB]$;MiVB\]bP@VgQqB\)<K1Ut08=e\o%AMHe(eVS^Yi;19shhI<l>6(=#7*CMlhQ_1^:8>X</HodgV
%[5nk%[`%f'Q=A2J4e_lWhGP:k?aIfM=Jb'9q+=s??h/%ogpZS$<i\#<,on+fErB`(PWb^K/iW-!^lfi+)<VA/_blA70DTH'-u3@i
%6C\l.Mb/!OK;KpZ\0jS#Bo*h3I*@8.DZrd*-%lU,G?--9p/97)"A#:FGdu9]HAY8!*Dgt$rW5[+LG@Sc1^T/W\^;8$1ddM^`q"-f
%"G<EdoZWMo>)Yq@TLe>o5?$dq@FGp4g9,'pJWuH!aN`t&g0*bA"ST]I@5+k.6l/V;UIHsEaiOMpe_?FTL`q(=W1_,X(2S=<UIHk#
%KG\=l4)5q2&J3ti7^c>G,g"bpQifY?RYX`>:PMn^2EZ^Bg-N4U8%<c[nAZ(&Ko=Cp(%;MFH#$"J##hm@rkKIa$>gqD,&;-CLJIbN
%XLfhYFCj38!JKApG7p_6/glGZ,beME'VJ#%@&QpT3(K0[5W*8NcA<+OrM2KaOfTF4;K61jLIF`c3j"]:KL`Sb#)0\iXQ.H9fsDLB
%8Z%G%^]X$ECD5o1,t^g3-OY2c7c9XPZ:d:L@KPMDV08lPXV=;3'Ti1:8DZ]F+]NhE;\o'VRC`6)&$$Jb1U-]b8R0[>UdSS*99>BH
%7>b[%LUs!5a+oUmhJ84?r[E5ZJU&J(-4%[jUVF0n=kJu@GbQdY:.`?<+\qU^$cK$<<-WX$od*e@e0XR3dn*Fc4n[@ScY?mOUbT+n
%[&Q6gBZkTg#=D28gi]']b)0]GTc9\KTFk&2[49Q`IF!pA>#l#7&E"0DFe%en$l;/J1&GVAf-\9WUb(/-//H8Z,a-g-C%dU'b^c?O
%I+G8qr$Y$n]k/=KALV=.'[:SV&?CEki^D"-,X$0$_1W/kCbl,AV3rea4r/PXa]0t(%?c`$PrUPRkdA27"-N@mnXU&?*]XJhBXX(@
%m9$49LkI`7]V#$=l/N6+#WW/.am%X$U;f>[#nUR/]4QI\4f42Q(d"%SL)q[20%jdaCucXn!OfC6'4M2!9?q;sE+LCt&UZ[QKG1_W
%:i_\['d[FZM/-G'3<bGkagQeoECg6@]OeC_[+%+Pp_J3:'g@t=5fJlRUB.?5,=-Gb&3/nW;e/IC7ufs&oUujJ4plEtPZEJJ.f(n4
%U4O/R)ibC;@l:h0'um6!"QC#HA:HT,kac>.+VE7?L-<ZJW5F3pj1p?tWNSUY"HWn7-k=J423BX_cSAdES8'1f;T"#0`>&G4At3(m
%1f<Qc@8G>Wf.tb!$=XP;YAi4*SdZ>7=FrY*Wua2f_HTU*'nTP"IQ"L3Gob:>@R]UaeH[$['I,3!1BG-*Z2oY5YcO3>b'ZrD<1>9\
%OJ8W&RTOeKC)%a@)C@=ajlAf,78g+Z<-&A">U?'qG]ADo&m4q;2'p\@8gYP5r2^<WAP'$W>::m3H>8G$_=I:OjC@jH%sA910fUQ8
%$,@JcCsaon1'W^t<>:V"5m3l9=IkDh3PkS,6nngSR5Bm'1l63V7>[t*?_R(.JU-H)6la<ecmfnp*6FBD9j42u\/B!Ppa?e/W=N.A
%$qOnC8c5>s5N.)[B!+ug.@l%Og,+t?6R>$*86:tNRF^.B.:o8fniS"]MnidE,c;T8a^]C7V`0d!L4L![4oD(6b;]eg6GSBXO99gS
%>ARBjgL=!5I2*(NA;J5:VG`.3EXLUa(W"(o8PO:#I&>2(AH[DFR)k2[mAil/YS`\mDbdB1,FM0+,.Ih'Il]/oN0"sq!eO_$X"SZ(
%&n%+fS%sp?`NZ4c4=u:)&XmFcZMlHk>!X)&<`56.:I]sSk-%j68`s__:GXVWTTapk-Q(Co^>Amo^<PJUpUArj$L1q/T'fX<LB&Lj
%a+u"%_/q!V(1')tpUo`Nnq`lN_[8gRiYtU78*4NHb19Q!ndJE0aDs6#a$\,lZ""/+*\qKCNBKEGN)Zi7.m5s8:>OFpT(FWI`M?c_
%`s_MDgKoac"VRsf24c*8M]FP4YqhQVSV7rbkpc.k'eVW=-+5rO*e#+2De)IoB5+rF'dgTIPX:&Dj%4$RL^Sc11YJ`s4F$)$<!"HW
%*l>;*V'!&%d@QA(:P&frb&t/U^uLAq,dSJ2i8O7WJsrN4i8o:o]f9L+]V+@TPlQk!^UU!Pr]AsD!W5*T^Oo_LNMj#<"_QhMT)9'u
%m:8s2Eo0GC\?FD+AE*lp>%,.?e%qFejuYWJPjsSB4edYG\1G::KMHV>XESq8)/Q:bG6W4FS`V0R4+fL(\MaiaSUie;B_i,*SO*4Y
%F572l?"sQ@\'j,!4-K)Z`-RcOUp!bG]4@b0Z#\]phLjlV6cQ`k[7#7K-+kH`'5fbOGDBB8lK-$-GIUPD`3HW(i<g:8aB$CM81^Vk
%mNKPO`J,=4iOT,N,5f6Al42R;FFtg8]+0OJ#W!6j4(BbXq2jgc+:JS.HQfsVLg\so@(OMtElI;\1#:fB!MpB^l&O5DFFhSV2inH9
%mR1l$cZI4IOf,fFfGTkuV0bmYB)qK/.Z"'iEZ\\3(9Y8U1*X=D0gX`Om>gX%BielX1Va=Zh0R.c#H:N2(V2[19<tt.Vn7RL1*B&.
%GPSb1<7+<^B*`N"gD.:]LkT<:d+oRi*jd*_I!:<MpS=B"o%b2Y57tW5I!7hY@P(+3]*!?ldXfD[G6!#2UiIu-GCYM_Em2CEB?6i:
%*kifT*FPatN)/^+.,Y4XgDtaa<9u?o*<;N6S6G1F%)APRruBGB)4('gDQS#)L84uldMBDUK.@BD5f[tjLA[.QpN1VV5]B]64%PP*
%ht:f0.)RBlHssW3WYa=pLMV0hb_&_HL$aoaDBuJ;Cj2rm!S>>Ym1*Q*A>3,14%#<BEc*A_*C?o^[ia#R!V9#46L!nD5o4t5l0\ft
%LO.]0h45_Z4Q*%Dh488:[:`P(mL8\[>LV'WR9#5J.bu*j:>>q=\iWOtW8r<:43!em>@G-2F]%I&kf!hm1[i&`h%:!V4C08@4!IRa
%C-pVALona+8R]4EM)?f*G9WnO?0UeRG87\Nq.M2@6FCLG(:<d%GLuS^OP<?&#D1ER7&h(XPH=n=O4iq\`opuF]/'k=ON:#HmP$GZ
%.sf-WLHQuok/qk&qA6+A=111`Hn:XO,IT[E,)^6KYh]><6NTl6mEX,h(#52D%^8d,9=AKF!u<-1Rg[uAJ4XpbCj-#G'_XYkmfJ03
%GUNsSSRKKt%kDaGVJXkM=6T&p0jW9$FE`J90XQ%ZFE^"1&qYa&G=N3#JnL),mJt?O38]GX:*b(gd,"@Z*RW[D#X\:n$f)iMg*@kC
%kjG*Z"g)u:G6c)<9H/]R%XO1811RmWS6f`rX)rQ?(o";$l0\tR6%)q1]/+PQ.$tU/i,Fj`0Pa(##H;6;'tuana&#Uk]>HWtFNQ>q
%*R6YG$8$XL`nB?o<PCQTPcJ[q/7_;m'R\5Na-gJ3=5gbI"LN'j$JulR5IoZ$h]7_l=mdNK4+l=:178lk4.&/_ZQ]e7SUh+(l;)c@
%3s7?KgU#]:7mPiY6aAf/aI,n*\F+;J8=CG^BXcVc%Et4(:?\`f:NQgG&>N_<SibSH+kd["40H%NoIP2?#b:->mXd)SF[M$JUs,O.
%V)$i"k*>"'L#<H\+tK<Vr,r@6YV*T8gR/7n$h-WGkj9L)_L88iK>`ji][5E$VJN7E]cG$Cmo5"tc6.c_jQf-N#D%u)O6Gsb+cLsf
%G!"=s,R,j]G-ktJ)5h,V"5Y5"]ILI_0;8,,DRXeK^WeS*c38="ld1;(F5+M\-7*)3Z@ePoXNJ4%C5VnE/.R$J[mY6J;E5?Af^mD1
%03J`J,cJU.@TT^B=;90l\>lQ^)0n1E`]kcJRN$X+K!oU9>!MJ*8GBNB:(efY/(?B0&SKEDPc2fLQCK4(776)?8WG?7))9kX[V<Nm
%B,PsbVC/esUb?i2R+MoBB#hfh&DNn=9IQA;YoRX^h_H?h88LfcB7cL!Y8mb'5VhE.1S#./<b=E/6^s\!c4h&]0s;Ud9G4DKCr\Y,
%*t!0s-]M\GmYKPVKlt5DT%QjMR["O^YV^?BB/k3ZrZIbo[DR^NcLB)s9iPR`_sgu;iO(HM68@]'L`s.4RJ8Jq[DRX(b:Bb:/eC@j
%?$P`FkmlFO_J9AacN1Ymedr_YOL4B^YFT+-6Ki.NBN`-hX0d$Me]ecTY0bmjP3$%bm0jRB@b9)_);f*?jbVIt@er8<XW8[tVm`M2
%K1(5)7^R=m/I4mFC$d%j!ZRuD1W2NCd^\Fj+6C=8B^H5'BZ@4%g;/6e0T4B56"5M_9PNmM?&Q67e(PZn]#=_3MBO/9P.+q%48;Db
%c`aEne<MH#WiUBJ.p-19VR845X6sFmCM//`?kiL&(q>YeNUQS?\Y`6p[E<4hM88'a<]`ZRfP">gmJ'O6ne>+d>!9fb.]dfJ(q!t0
%e.+X,Pa4XN-g7rH=Udsi+;VuU6>B$_1G$.1C.Cjj2iF9Wc;Z"X6>D8p5E#OkW?&YRD3J!km9g<[X148Fi>ClC3VScfcB')2Y&N)\
%lAY0\m>N>'=3kPm#f(3Q$DX.8Jou#qUE/',;A4CH4*7hA(:bT`*Q?OPL!bnn&tp+24%_OM<uC=4<[Xq)jn(>H]\3tnB?4`k0gj<Q
%da#5bjfanl#'@f-2B#HH)$VL@mj[XCrFC1[jg=&(5_U2!g)8s!QFpg!`pesg)<Y3">rjQl)c>>JEZgc+L!n8V<q7jnV4AbtB.tj#
%G.?Didq1j[LJ@/dni%o'K30N7$`tHA6"lMkSh*'%-,QcEU:#VU_okYf#Dk.,(KrnP1,IiDijD.SM(`1[mEdRg_2im/GWg)9rkL`8
%QC6/oUV(bp(P20I[!!::c8!^:C$hiC$,fnYm>N\Qm3/SPUg7ZFT%6YALHVUW%gN:b8#1<1l@c<:;EMb]1RWJUC5509q*C:qNh/%)
%N>>DR_bAop=%M_/Z>[g<=@hg5^;@6:,.053d,YpB48`'@m0]m7]Qb\5*jaRoeOk=h[!"\h&8,5k[M'hclW8o09N!jo8o.!3"'jY3
%YoW0?fD'M_C^7Qt:`U<\48A]+TWA^ZO`,h*Gp?c[em^<NX:X.F'7!Bo'k06c!m,smM!`8RiO+]+-#`]2%?;%**=OPnTY*U-#Bp["
%U+3DgC\,Y-4sIF&,sO'?Q.QT7W8Ng$<J^#nMe=p,eJ$]RqaCI+iO)&#3Vb-SYoS*8,'Xkn`-)]Ma1<tZ)8`@eIO?ni#ZVP5?X^C<
%+m`Ig1YWee_V<EngDPV7_/^JLgPHT&LipjV7g]L$lOgHDTlA+9?C:-D(8N%N0\[1g4DJbI7E9qJd?=I60\\l[FI^Ki-Y;mkrsbC`
%/B]7l!6T+J?jG24NLB0iP@1b0<(mi3*Lg9#m5Xp;`uQnhOl@U-Z"LLTYrgR^LtN:"A$0ZXcYQ)S+g6$VJcq*q#l4*^b]ZAs,(<p.
%[Nj'6a]f.Z*Kc<Aog<=QdP-bUZr#M^<ekMXL"d+)#XW#\jL/R3>A&:t4"PQkB,je'Odh$q;lK(O'&0#3N^"9#OP5^k4p!jHe945'
%'@*a([2m2B'R7c:L[9(jqCKj6//",XgQ:(uZQZoc0\ZoA8EtM54$8-Y2^Yt#3dW",@j/;@8,8\Gg*(lN2T:L(Nn%f"IgWA"iO8!2
%0>r$ERc6/_R-f^h8rV07Ce&,XV517oT304p4VD?ghD>T@*[dCX;QKV34gghc5Zp:Ge97Xo@8^1#[Ne?Ee#GpfG!t^G/CK,17*o(;
%`[\Nicsq4c$Fq0B:fq4+amFar.h:e1<rE*/GspN"L5nN*]S2C0m>/0h?5IoL),tE`V72(`Ch#1Gb9eG?&X1rV],`>ZB_rTh3t`,;
%9m/pC7og!hW)J"('(;Vo$I^D5O6i#A]cHRiSbh`@Y)TKsD?6TC>OUhT&*bC9\'#6VF8l33s',B<T.ci&Rjdb;r:&7ejYs_?2n;j_
%SuDR3q,@:8i*S\Ikc7e_[j:usI/W4#bPJA;^0:NId(_0Dk)UTCMpFWeW*+NJlc1*\q=l2@q"tm+C4nchnbmD$g],NJqX6!4Fl=*C
%0)kIWR`4mr]C3N5pnK2K5-YA,iM-;\[MA,VT2F\AnD5Y8YFgg2Q2c#a%ngF'G>LGc03fM;IAqkp8TGeITV:)9!IPHk+UnhgL',@5
%k]#VmMsimfdLpD=&?NrM$bon[A7NOg^[dR<Y<Np&P?q-?<aV]o9j_<ak_?:>I)B%,^Ll*4;WRD4^[%?0lY*pTVQCOgAYkd'Y8#d$
%EC<6++0ioY@P#Rh2^n3G<k@M(#jWG$D0b_?Xe8/])L\Zn$_SZcmp'_3O&As6bG>RV7=gt/(0pP26>_)aDOaR:rFiI_N>YkTK6Y=,
%)ld/ti!%fBQfH?;c1uI<XDU:.C*Z3<4gNGA)-&j;hR1?_W>o/YN68O_THNQTcU6>VnRP&Q6pg%m82tK\07R29Oq^*_2+H]](aIU&
%0:1YWIZCo`FY7&$`kl_*WdLp'^/o6Je_\KmX.HH9>DYhBjdhd\dMTmLl?f;3V^n<>n[n5d^L(<=>V)L#.#%q.[&][GqZ1,ogJ3Qj
%.Q.^cIML8@J3W_I_$3bd6KG$Acc.o^d;btVoC_REDu"OA^\ml%s%k"^5O'J/`/i:kmV#Ng"510'MPsVE<!?,S3`dCSo(mJ.:Y7k8
%r%@iT'[b(8>=k2dHah-V]c5mcEVs\haj^:I`ue;cB!>P>kP$Qpd2Eis<ufLnkl:?Qo7iCSY7;q@,'^j^9YDojX(!JQ=4-ln^(H!j
%s/1d[I'br-!3j:pmk1=Dmri.EXM)6eqf`Q`nF,C%Dq-$"@[WZSrpdUMs6F%;cL\)#rohi-B:.PJIfJN9YHFHMq<,"_rg&'1D"5V3
%0?u6B5<d0u]KZ5_c->f:c0]?&?_=D`F8GIor;$"`Xoik;l+^N\o`'aI\bYXCP5k;Ko7t/!@ee"t-g,F?RGYG8!bKM%nu$u$f'K+=
%H*'m+`33h"DdH3&Ld&<*SU%b.qs!4eK\hpuGL`65Sb_H%If+82?+Bb$^R(iWa&d13TB@OB?YsTHTLUZFh>_qLG4U#HhaUE1WgB@X
%gCKpK^Nt1rK=S[BB?qst$4m)L>)W,L-f2MHrpe8/o($mJqcLqCDB4`5nssmDhVO=:2]#hnhOOMLS?cUZ&+?MoQWN)#SDB]Q;sAq;
%^#jBc4$0(a\'`Yd;k$::^V+,AT"JD/ja-_eDt6esE^m5p^T5XgHemPhlfIFkk>RDNo&)oIZ`VL7D/I!mj"LFUS'i.\q<]EAP=[dH
%]R<DT?7i?VDQ^,i9M5?KI]p&`bAFh1FI(mb?$55?X#JY.bJ.AU]R"jH3i,?13jeMWo(;5,e^`ulRq^X=JQb@_lh1O1qSi$Eij8G1
%[jSYWq'rkWbA4i7mF,(\bu_Flf-gBgErOV>g$?\!R@>n2o4;gS/oq\R.e?q`^<=cF\bRj:hrX"4>jfiMq\X3lmP3P[-?\HYDKF8B
%fUh!`nkJ:lq9/@,]9ankYC<$0=64tkp$[?jQ[QR4]Y8[j`U]?Oc$l7'+W*DWX+("lrasnVFhh&L?VfOkIXQB[H+^h7qe\8f=DlH_
%*4aC>Gihcc_\B6PI"uHbg@j0Gm</*]`TuX1>B[mbn+Em;[tEJtVO;D']NUo@3Bt(Ro06Sf>qRe.9[*?/G%R^Kn))TpbL\[#GNrQ8
%P?mj"6>"1%2qK]X:7'k/St&Srk`-bB<PQh!,=%^^l.,U[otUM&Er1Q:A,uQdXcN&.XODZ#2m<\(I^<n+]Ea/)Dq[&*,F`:s7fD3N
%6h.oQ]FLEFh:Qe0b7d+>(XoS\]<j<,\N7@8GrEp>nu%7Y`clau4]D$$O@IQk$OPV9dBWG.J]S/?HpmBp+5JNkZ#:Og_QDbZG/@eJ
%Tj97P#tNarg\NqqKA#]WCieTpqV_)DLACETNVi;W(%03:g!.]ujis#Llp72$G;r1fr`"9\GkmB&pc%*#S8Ir.b_P4e?@qY*krk9$
%N\?aN5:nUQ#ANR!he8'l4s%'GF-b.#\SEPRPjGs,ad>*3B3T:tT&nu[oOcF5Hp3plNMfiZkJu2tjo8)3qE4I6-?D#;B)VSeq:V5d
%1L)!Ve`8nY4$T,Gb<)YLk2T&kS'Zq7\WZ>q?g_-J4IEg-FoCUeebR`k'9&SI]S=XFD"#p,@o-JB<._N]I@6APHb,b3Jpc3BF^t<_
%]dLa&%VL:[TM"7<2Y[;c_+pGRIGYm&Ye#<NEpHudYC5/hlM_):rde,Es#B-6E\IaEK[(R[_/nN7"l&U,L72LblMb[Bp*VGlrQhfp
%'\:'\':.2-BWDH1\VmoM9i,=dE:`>;PKV/2q01$RjlnUodJ?X^e\?#M"P<(u^\+5cppBkVm.IFNPLJX4o((qdP?/!7j>;ecT>fM+
%c014tcRJlR`BZ!cm^3\\GI;m>P$^-kk^*lm],rEqe.1Z#g&]"I6g;+YW4DisD+e`\p"Q:Qf_;L3V/lASnNJ:EFUi'9:[$#t:J[C?
%K62Na0dZXOO6p[7-VWXHeW`GoC3P)>[TR',ru3qcVYK!.\XcI8KW[G0!j3bDmA_*Y-76"23'0?sQCiB8]?Zq=>qSo"jRo.:S=b7U
%2'kD4nE@#9Fa8*i@=Cs:/c=`_3?Q.6%3OG,[nb4u4o&s3*m.":c,oXs_cEAa<L5&b42Vpd+9.4H\:)fFcgRltf1YrV-M6d&o<Xpm
%?RBot5.]44`Q@5p`M<t8Vh]$',62>&P3,H&]ss`+5,M#<.@iI5pVd/GU.h#1IGYm&0GA"):>VLuU4(d[<0Tns)L2+GE`&]Uk"q)0
%"4'E(?s4UB0$9tY[K!ccO2;qtI8%1";`Z_tU<L.rn)Ld#Pdr4)"3<p!UdXo^XZrgjPgd[;M__+bLLO+&H7m@9\_-YYr`F5=:*3Ce
%b*:0kb-&M*.*Wpte4c=S4(sUZcK/Jek=s+gRV1XL^aTb++s+*+]55<Y_CtibhgY?PQnUb[Z\R`Uc`\c=^DZ9KkC@-)NdUY_-o829
%]8Ku'ZX0+T"LDF(p"HM!%RRAtq)V/\F7!t8CJ.@dXOUpbp0haEfiWT#`nINEB!(bmCUIS=k_C1s\+a`1-4I`Z%ETYj!-$daGMbl0
%hF805@,=BE2B&\8h^n\YCddO[\!%F;#LDh\)Z*p@Kt]SEkOSP?o98'\fKmdB^9-M'bNI%bB:%A`.S#n'YEgOp?VJ>l(d,F2WI@6;
%-tZ(Y%KHq!H?jM<'sQWC^ee@P!Z]AMSXI;jAh]GSkgF>1`JfJUZ"l]PPhkQoL&&qN$fgjY2N.K_TB/<#s8Q7$LW.0\\ErVfEYlZ\
%I5?j((T6/;\EN?-5Bdafpq\6G:[?;]R)Zn9ld:J/F4pF'q2%1Fht?U*e]"SifD-Keop]fEl?DO">q1H(V0<0D"Xa#$IbpAW1Rnk9
%ZnlXAKKa5<kGSo'^\b5e/iN!IgS+F-Tat(Dma!so\L6!A2_QhM2cEJ5"$@SOS,@V_2W!gt3N+b)J\W'D`?BM_JVZD5mD1%Mc'<a!
%r-+2$mUuHA#Jbuh[[-+Omi;@uj1k'4R@+InNrRDph`:]50%M6k^pa&TU*Vh?I.u+k[-.FO3T`EDI-6mcSW3$99C'3H;!=[PGBS\-
%E.Kuqn`%gZjjU9RCt`,hff<i_fN%Bh>FqHorH`f,cd.&dH'9=pEXGpr#sDPl_9T-:$**pJoo!W=9jO%Ea7ij5mJBJU)rVAL8s=TY
%HcTe0fcGCZ*XQ-=llhi]A@%'X^6[XZ@rHOSD=$!%h.1!BJ+h@aEd@I`[M"q!jb*?pVlS-m3P.=ZhL'L[I/_gLouZ=H\G#8RgVkn;
%-Fbj-rqGd=c-80#_9k"h:[Vs4L'c[=T'*j_oUcSah6EI3M_e\mT0Z!81cOM(\S+*(AUTrhI`h?]eabPhn^i9ikGrDb9QI><s(#d)
%on7`i>'gMSdJ?X^GDL.K`]aUqdA6Fq]8q-dNNs(<>5PRC8p,<ib`8%CnM314B#i*]GaTR*n+51cRme;Ml@kr3ATk`Qo*oeb]\L?n
%Z9,2`Gk-7U`e!cQ?ChY\KCh]c-6>r3m@CEDZbp4<Rd%&m-Dl;5loWk<'TdqbCgoX*0S<*dW+4:4m.UI$HpB0B*SK^:hjg3RNFC(e
%iuT9nqgLNM85/o#36k&gH[Ig0n[c.&#NYLZj^?BR)1h$l+Y__\?>&o,)1?4#bOgG'.JiJoan)Q?B9J_(<g>lMF_\)%h]%d;i60e$
%&4JdT^f8I3G."]SoO6K70^?P?pO.DT^%T$`n`'64#.ri?q0\o/5.!KQ2>d.lh>uJEFs#mY@,GSYZ'&\E2mc)!6[N;?+)YGZ;f%I7
%RN0=)'0>[Lg%.f2FSae<3n$jgbff+T>d!q]Y.?E+JP@j)GA%M9BRYmXD#'4h0uE:t31r@X_>>t8,Of2:l,2l.f\;n`U$_[/O"pMd
%p2+DR5K<'13"S<oLN>hp3LQ*tp=ShHVtZ_XZ5[,+l]]eePOku\cDKZgbO9?9:jr<!U(:PD\bJ5[qj0n9`l!RUeZ$`mmr$Eg::GKZ
%8%3.opU@L#8UVO@]rTF97hZGhIQVnhr6+d(J)2_0:T*"'<hA2KhbGPDZ47*$GtM]j]@qbY5XSKDiJ[$&M^d3a+5:'s-Eron>YR6%
%Y'/ET)(]K[*B\s#c!X*V](H?FP,;>I1KMrDXpqY!G3Ae6$Z+0W3I^u$k5*+WkBR4OVGhG'5FLM0fO=U0Uhdhu\8(J5j>B"k-eRR2
%3;dm%jtW]Z:$Ts=UjGi#bae%-+/+AE&G]`R%`8P4=h;/g/3>[ar.G3=fb(E9gCm))o6<FgfNsUlCM1B)c$-_Sn!a&12rEc[gY@1G
%Rr<B6?2+tLEtbXra*sM)KUGgRJ/.5Dgj\)B-;<*?SXZg(o6"rbcHXtOq)\8l'D!%nFT+"#kU(H7?nQQM(>+#2gQ*l@Ip?8Bs69Aj
%b-CrumrOPLZs^bq?j:/oIEBIH!r<"mJNJ*]M&@CV`g&MK>_sJEmdV^/qZ4djNALDn)fe9Lr3&>VT:GoYfg8).Y>.j=DLVK78Y3fN
%2ntnZnP\[o]39ClH)(s_+&2+JTkpL=@,W-e/p_Wrc$'9(fm>+0e."3<#<UFMY6jjroPs-(8'dMLX6.%CP=^MEkilA)ZjFEDEm:L`
%QXhP;Eq``8`NFO]lcVjj"QrC$ro@q-ES/+X+7-"W'/E-c^U\f5Ek7dP.*%Cp(YIWqNQJQ7#BMLl-ea"0%WBfkfR#"GHZnpk;AcN"
%\Z:Pr'6'Y2kP9$0h;*]rGL[uhkoF1&4I#[6`>MJ#B@C=XIsT1j:^K856gue3\I%T8&?#O'T<GCMQ]itmoq1TU@94@o#Kq#`-aRMG
%Rs#mHBm1q&jbM!bgcM>n)at!?'[8P`]f5"6eHZ=r'KnJnraSSt^=0&;T:rTtqd$+3_SQ!<2GfRqADj.E^&e2Fm?pfnbjP<]AKJ;A
%-B.fZp:Ci62"/aP<4jU1B/_IsQBS!?&*eh<ma0eie+'[h+ePC_Huj>:eLr^#NdH/Xm/,a$74HQ<j*n)+q/AHL$d&JiOOF`)q.r1k
%ZgeSia>;N-^)B-FUH8ru4s%'G#Iu$"(BsOX6mS53h@:!XkV4=+h?r+\^c'qu!u%(kU]9$>V^f6*hY>,?]<+2?#`E]kO04D)r431_
%)[C@rrAFWOoij2?%TlB.SEJ)):"FcoM8s2s4][B"LTcNgjW6I-N/T+t/A/Y$aa!@n:bj*;bI!K$I/TZ%@<]9Z%iAj:dH/rmbBc7#
%(s*fbcb3Bd#UNl1rq7bfJ.F_ui,3VBpIib)@7NOQH[7YK'<2?LD&45*62fFMp@g5+f7,fmhP'sZhe(Ln-3Q)A:4><4rqf[pj65`5
%br-M\s),GSC6QEF\NKia+P"P1>Vq@aR2sR.qs.ZC1G^Pf6X"'A4&$4D'aH]"J%InTI/RL]PJSBDq+'WE\9"@[hKqERAp>AM*A*J^
%>>'9cI;G>mVS%>+IQlY.hK?NW.@(L.@ei8@\0D=.+$T]`e,8^ubNG-!M)#Uh%prUJIZrYULmf\@5@4>2FufJeO$EL+<I#,Tn[m[2
%I_7_fD95_*p$:Vjo#8iq5Ah7/J,E0Mq#8m+5C-9-gFU(Ys-2lBmsi74rbqebIqRH<$e$Z@>l<c722gYnfAD)TnOHAa'E+%bd4`)^
%fHVJ*]==NHbCB+,%cgE[Bu3`/LM]#n^GTMpF%6\24N/6DnmIKJo6rE?D>pcRG0ksfj;T!ZO-3*%pgMclG\o)R[:(3H)a&@^hmEpR
%nFYb%NdntIb(#FY@O6HnpIia+o>OMW-dU,ED7?bFi.'/p22u=O>r5'R:U[UN\2nY)j#W_?q;:3p\ZJ#8agM'DPO]N(Jb>m->Kr:K
%g2:o#Vr@k`E.#mor>/.IIQlK(0=BXUO$B!Yfs!^d6=;%No1bS@LFtCqIg@qnD\h6&XNZ"i;q'((:Ie.Blp-RsFQMIDi[/bU/1`%F
%<(=OCo8%UI0Bh;.gA9C:J@EE4j:u-&P=?'m/Zla0+<.^r+<NGLJ*Wb;l_BR!n/"di(TX;FL80u?Q@`fUEdTbT4r[e!Toj;jNH*;e
%f@[AfoX/rNDAX]^*2^B)oAk\s_g/er^U=r]bZ)42i5'4+Y&,#2Vd%1()&MYSr;GZ:r[p:qqr]&N'Gd>=EUj!WCmIq6IA*YK%;:f3
%l3pj]]+A8t0mDm'jfJr:F4<(`Z"n#<LBch3[@qBV6K^kMTZV,qCIeZMGBmo2<-,52Dd>Y@UeR#qS$2ABL\%T)-?:;>hY^]G>9:fF
%\X2\\Lp8IggDjY,iSgl!niu'keE5nL5'kuW3:1pg1q;AG6b,@K/N`THAV^,pi1fF'QZZbP3Z6eU9P!%`c%YH$9mSM'5@uc_EYkG7
%T&fV.NlJ.(gOsdPC;J\T+7l^"$13jnZeBbh=.sc(($![HX*mO\T`K#%rquQcGr=XdmsK#sPMGAhVdf6no1En)//W$*)X+Ib4alLs
%*`)d89h-cNB4nh/:UO!rCfTJEa4TJS*Z`Vn4(@eYmM9/YN9-48X[VR0r2nUTh&nF*/Zq(Ac\?Jg,mUR8"1D"'q]gE4ZHN8aME9r[
%=?\RTis*\b+gdPM'5K"uWWO!-QGjm!`fD0!9mmlI13#b(V<P#%d*)#h(4t_em\oM(2HUnPi:7)Q^!-dqFKQZ+l,Yae-V^)V:rhtR
%jmd5eqB7Y3>&5+qe$lDp3T,>:)j*eJj[%!A`3O.4G(")fPJ9i&mEXc6]DRGG^ZMj8G`l'[jnd/AA+JaikX+/+^<6nKCHITjnTcSF
%\ad5JRsuCTOm?i?R'+\+4PKnB\DQhga-49-B8'^6o936[nnu+Os6rCiPh_5$?%;XC;=bb#m,A_'h`$nJ(U%2;]NQp?Ge<_a*eW_T
%_q&nHXr+R9:6Dpn"+0cP//FatT$>8XBq9(.JNR_ugjLgNe/`,tMQ:u@$M2@n&B^0V7+epe5Fc*3[N-,gk`1TV??Kra9.UHV[dugG
%`mYMaeR\7s;M.6bk2lR@[p5Eicd%G?T=&hYoVcSiUYb4?7M"@5I@<29M_1.IDOW$b>8uR21ph,V^.hcCQ?d_uY)D(X=`JY2Z!u>H
%@m<"VeTj.0g8<&1Z7.&6AIchGI'i'JRQGHZWn!Mg:?HM<OC^S74_M%JTkj5GB?T"Hr+T1KOf(e%UtJk->l!j`dGq2Jc,qIp*qoD7
%M0W1**[\@4Mu5tel`hW`Z7HJ&'ttNrYr<CYO[!'8Rqh`?C;*-nqOtQOcSg&T;M4G@\+A9)#"eeiLT=P+:h-[[RV%\CO*kVo73:2Q
%Xgs]M@tj",h"i8(dmd_GVS)2=l`2_RH)#Ou'>.JEIe"bVA9jQR0^q^T++J`cqW?elX.)<9VQ/0NXc@c+eo7JI^!]?-YD:bucLDG@
%<h']KCrPR).[EPpCg*0;eV(V<\ThWo2dA:j@+l+B?[&!P%@c7]9qM+>5ec)M\Hq$OTK_Fi)1%E7f@'2C\%aE4d<P;(1E>#_Ha_$$
%n%%6)&[V9)q!..7Q@o5"m%;JmDjK!.QDZ\$&,SR=Qd="0XbV+Hf:O].!<%3=S%d1$75gY,InejIr:Jb*agi,ci1Kh6p7%88S)s<S
%pYGY5!&Nf#rp071oD_m!@sc\&4:Q,sl^PX(pZ!?EnE\DJ]DUp[p!#@,C@GaikX0b=)ueGJB@#*[>_f%'rn\ftDT#8@`@p,]5!,=+
%MR-6$Ft1d4`=L.k.$q4SVdeB@<(pMdMWpe(MBQeZ.baFd\0n1`m,#?Q0rfR2Q`>7P.f*jS75OE_hYFJs]S]oW.pg3'H556<Gno)k
%kuDhp]o',5<kO<%&%me^%UR+dW`O1"L_&ZKX<+s[_7O?u],.dO0^pQlF3f$!InHW5l(*]DP>cJlB9/s>Q9Ia;3q4Zqfr+WBI>X%g
%GK$VM<W)2`S@sgSl;cmT=Zq0)8/Z[NT\K$bfD@h<(",sGe]km&)!,!?GoI"76f,E!o&92cfhT4q+mW*ikJ>FOg;pf^n7&3M$b&Qr
%O,2`c@&pp\aRe,ORER`Ho)*:^m5)':@BY@TA8oNK9:2PN?Yfh(V2iSePgRX22Q4uK3FeRRWU.sDBTmKuJPG.m;mnocNI!+74QU6]
%G"jL!a;@u_@#F*fEp'R'K05`V9&+H,,o,RIN,g9-NU$0GOLN_GOEXuYK8p?V[U&g+4C$B(Q`])PN+D-B5&Yn;g8jc[\h)__<8J,G
%Z"!m8qDpc]451T8bHdT%7$pYSj/Q>Thcr18*DB&0EHI;JZKaL.W\A3/p92^slYF9,fQ3#*Hk5pkm"[^qY09DW`e:eD"g5]nm"-f@
%^t`'?KA8A^;seHjA`noqL:pNZ1I^!YJ$ltpmbg[5gcKGs)od6l+1GD'9jS?URF4Bm)qEo]Z,&_t-cS&^O]QZ`iKF&>gTjkbHsf&O
%06s.I]L4YB%"GfZ>q5jEBl?2,n7HKYRlAbtPPn8>o>!BQo8rgK^:JmLaihX5SB91EATFQ0R<#c*5(#P`Ske>NGPA+\jHeuh85%Jr
%Yt^h1/AS1TXP>a]H)Fk2.k2Kj`l!(V65Ya$0Z/O:Ck-?F,gUfGhJ;5M#7m>=Xc/NbZ+<G1VqN7DOjoj:?)"@C>6'.YLed;U(3/@*
%A]eep>\C2*+Tl6>ZtSTr^@Gn*XmB.<HdPB0H?$\2TsM+Q>22?rncm1AdLgb@Red4/)I-0=<F>]`_c,^qRQBH)[qXIE<$sb/j_c3]
%`E4s^odP_+0mte-o%Z<h,oGI<47_:!eS"IrMtVb/O-Us7(ap:7>"fCUJW4gCE1MVQ0"2Vb7"+0jc\!Y;&ZdW(e:fYL?#Q7%U;$1@
%[uKe)(,=[UU@oP(6>*$o#`fq@BjKOq1intp:jtXcC&d*LQFK>j\EDeg#902C=jF:/3ArV4-K`t!ie*+_KMA_.\1'<J\&9Uc!m4ri
%-N'1^KR&s;7+tp_@Z./a/[:.3JcoLcCr1(I9hbNPn`8"gCr4cUKR'6CKJe\F(S#.t#:IBchujM=*=!s\ah\9Yp9`brBGBnu3Y=uO
%+MB'p5\I9R$!\RCi&YA<TRBIXU')i[*!@YWrmg&N?Y+='o[/LL7jm^L3^LAg,s%1NkenI3\G)M+>TleK[l-Z)R`/(AX55q;LW47t
%[poZ4c"k5,9l_&hOcQotQLI9.bu-N9)Rh'>_jp,*YkJ(ET!]j-DJ4]hIUE8"oH*h`=l0pG1;LDnNt02V8ip(e<=[b;asgHX@pg1a
%ON+U(Mp<$/;D6<)F%MV(%Z=8t2/A38MMjW0[I^bQg3]m:"e2\JV+J2;PupSc0U!uSd./NSQ\b+iMK%@LJNVj-9>r4-=L99Er1OMk
%]H7[9;\%u(B%hVJgAIk,<I#53nQ?<B88m3uAVB`50<_o4C]+Pr@qTX^B_H`[ht@93][$ge^-KT"k*t?En'fSR68WQPc"@t;%_^*t
%k:N56NDsuPVnMnN_OGPnjO;).p[Q"7Fb\`>n8.aZl<s]K"9W:G[_U)b5/>u>GoY+$MHS-4i[99YIo\pX*A(^TR:7Y8EW,jFcX@k<
%*,7Niq3mn1A'6-0Z`HUOO41p\C+D9l[`fm/9'8,tRg1qaH(0OeGjB^;Dh"rc@(W:l2q]HdFaJ&ks1T@bA2Dkfj,cdYaK+lZR0t4J
%[RO[$16\dO]?[M$EMnDPHM.5c'X:eZkHgmLnf\l3q+3Ie]W''+AS"OG;-$-5Vf"(Si1N6P'$=re2/Jj_-]5*oj^3*e/DH'l6Af*6
%YOoKmp/%#o5UgAD`i^fO2CmheHn\P<@tVgr8cp`9#Y"N9Ri`$YN>fn08Qhbtq8@1gMTs1Dkd5&>_pp9t5'UPB(/8\K7L?mD)s\bm
%72b-')q3NrQIka]S9n7,1gX??8.CO<MkWb"6;#.=V,S1-<].C04fdO"h6MiuF]BTe]t]l'<:aa_T?Qg=`)"*-!D31k"]0U#*'j%.
%EW@D&$(uC0![qb]!$uIgTVP9_P\sD"-/B_pi`Fi1KF]"eEPhd6gCupCmkK?U[KKFTH2o6`:<okd2JiqsW1/)Q6!5.H'lJu'e<RN:
%g9hJag)*0(#-WbXelQ1'_coGUBhJ^XD$luT9d,b.3J::Xn\YXTL4qW)VNhFE0:QJ=XfDJeZmC582[*#Y7k"l(YV*]b!/e6iME?\C
%GZ<I\`^8iY\mSdu;*5f8pkb%+3.Bl9k4jcq]Ga!h)r`6eD2Fn;%IoXuXS9+C[1+Xo*I_RPEc[U")g$0!,h2V2TXH(^LnEb-\EEWY
%dPs_."b(#&a%1XN`+p'>Ibq3CP>6]W(AU3QG]MDS*`)a36r$A4`3"Btm^oDBDN('l)o<q-M)LB/3rC[L1+;GOC><>re.FY8E8q]U
%DVX<j9q-O?Bli&Tf!*8hVB]p`S"r5a190U.)r`3IGX9B&pi&YBITglJhb_h--2&KN*OVc^]bMsX[]cjcFDUd<8km?W##2Z\6'H1b
%cm3H8R\VN$PN'.n"\lR&5ncJARe/HXYsqFl2').&a%=e!DhsiQ5\W)j@Q-eOU>6A<kuNIK.df<3&mGfQR.usI#%j#!N&V*3,`Q.r
%EGc5S3/sAO4\=MtUW6:t.RB8ATg=kO"bLrVR_5c(,Lob74,T6o=gE2bY8CfrNoMDL2Yl8o\"p;gq%PN@*p^eK?_WtmEepF/9NsZM
%rJ+''^3Ecm-@gGNof7q)O+[Q(YhoAnj0uc6*Og!KN[F&u'7DeLEG.6@EG.6@A_8d1lgK=r+c^1+&7af3LSTF&8T,R-p%KKao"L)N
%]_,IuqgI%pcXe0nXAcGTJ$pQqA"RmfS%N&"293+#>SIG2`_Z@"nL*=^-EY%t\fB<kF*9^\eb,:g:d,-UoqI!HqI)?,?XDPnburhC
%(AF?<]fAH+cJj;S=kkfLoaG%f_cG*feMD%7$sW[DP.:=e)7FidiI9DnmcjQ%9H&plXK$Yr#fZaNOhi%!1^Q-%C>O#4'LmI<5sh6c
%JSS@"<*UNN>=)dJHP&Fn?8UN'2Yp"63.=G0#,ljD@b1f!-:T$'ZkT!3/C_>`%:cs*%H!ZWc:GDsn)S<Rj\J>`\;"43,g5AJos)9E
%oXi4u=GCK3[t5&FqH._>NETA9:M]s)CVjQ2pB8b&9GkO_LCKjp#dnNLK#1,]Sumf3'3IW8ajE8CQ\I4UX_[7aWNOZ&#0HL&7%d`T
%=c`>S(DZ!^VXfD/O[Mj84a;D-,QY?p_L+%[,.,/q<fb8dnHKfa79NMf\%]WG%G$phNGZE_8*K3!a"FO-"=O\\[_eBk3"M1\!;a.<
%en>P*rjh1EB42I*>Q&s`@[4?4B(@9`/7FIVX#0:'C`Ad"q>(qh$Q@r38AU0]2V-SGi8?s'_P(4P-2Gp9lAIbX@4]V,5Y;b^BctaF
%7Lla'XiO0.^1LP?'8l:d=KbFtN7.99^h'k\UUL_DUDELm6$)q4%Q_$^$E'Xr9&8br\QFuTp;oQ.]G\8,!CP!86Ir$9m71A"K9t/Q
%Tn1l`X@dkYn.%k$GdfOi)FcK7lHB;@;T16H^_ZK5bNhFJYNH&<.=S-7q-aJbW#[arG-1-bTP4],dK,\Lj$;08AA;]7rMK<3_-&+i
%s56-_N`mH*NP*hUlqeYg\EBgNBj*;2TjBVub^mDKG\llb;eIdO\HT.r'uY#fi8\OS]c4$e^M-F<eb/ZYb>:q>600/0M[EROI(-)J
%!cF1&c53Y2E*Jt)h*Cdk&qfIg(YeRe2@U,bfe`nUlhc]\Got:]fWJ;koZ#/E$T^"25=X&%+n(c3j=<6Q8!lIdGoUEkC.u0((gg'p
%=Q0!r=hnRRE?KX4FLeD"57[B2VI\]]-2E^4RPGN+p;'ap.1NfT%r<=p*)klr/MU>KXi[nl>1?Kc8%Kj!P80Io?C"Zjot>E^#j7O5
%7Q#YK_5??%*IY%I]c*kE/&J4'ngm8UQjtF7(!_R(975Oa\UdT3<o'])I<i7Fa*kMa<h+khFVkdM-<aP-"7&GfCMOV80i(YDFd0@(
%/gabf3<@*ood-d,#Z#qLgG[eLWF%Z^M#hcq>*S-5eDjJo9u"\;rnG8X*(:;cDrUO<=id7h1rB\P+oo&6-O($?Xmb.`3a#)VA1lsQ
%`QSY=oRSPn=`=/t-"o4gd_%/`5V'"Yf1*<3k2Lt=&7/L*g?L@b%G3htJc#g[]FFd.4;1%+i/t],hcj%E#$Ioo*fkD'oP`"N4F$Bp
%pJ!&&[<_hf(:s%R+WYjOqdTTVJS`hf?9W%?s40KVejn]+%+(Y"=80^L^$^,`%+6d!H?GtS!'=h8^T;?d5MFC"[krK@?HQLdeM\D[
%K1S<b!K4cmAThVR'QMl-K*NGb`<WM`Cf)M/MZ#JM<NgeiGJ_e7G&SboLWfdOcS%2:A$pNtQ6?a-hLi=M(k6Is!(Ul1%&\WZN8';>
%BmD!HF<%,tNEC(@J9omn/-k`pgp*p?G^;\+^k.#n`ZEHGl.]U2KMBW=XKB16>6]*^EnZ[\nA3X(SY,hg(M-4?'f_ut!@_p=M__-`
%1BcQIRF6_!#e\bEV8nlHnGDO9jrArajp4(GV:*p7JQjUh7f-\*NkiY,V8LCe\.>CEoX5`j<-&2rHU`>9o%EbkoJS''bXhkWP/*S5
%Yeq`;/JUpj9G5-L-H/>a9(>aIK-Z"Miq;Of8HQ>2$$=(JV)s2"Gj8?V97R]GqeMMS>-QN:<cqkQ<%+%j($mUi\lI[r^3F1`]Y%lL
%eP'"4MnWpQXK0iKjV%(_WQcCThXt53Z)OQU?6#D<*mX(*KFgWG1Uk*oGflLY8Rke?]RFe,bQo,(KITir`mpb(4jTM<#'kL?Z^F*e
%=rE4H1)0=gpmAd"Sm7o%SEj#63g<#$1<jqiEuiC(q3]$(LGIJTb]P>?MeR>hbq>mH`AH2?4J"TugH]cD/ETZEgPSar\:gs)6^0QY
%b3MDoC)08`V'cRZ5VpF=8n,sVL]2.KY/Z0o@SU,-ku00tS61GiYnRPhTE)"fO0Tuq=UY$#RQ-P84%??D[YI,ob><F?@0Lina9s;(
%'Z*\PP`2CmAm#JL?l$bLgSnDoJDL!'8SAK+fdbiNdSPTci=q4(.Mlb6G*.C`IUl7^4=u2r1<?qWYih^$4U?BU_p3/h^mVi565T1l
%$1hKeAT]hLUNEIcpco\CCmo0hfQK7H>GE7LM/PSLn7MCJXJ2['$D`,#9%>gsPC#B-p5>)=jl@>:Xl:W7(Q%<Ed^rBN&5!s9emUq>
%k5AlAf?0T[LL\3ldo8jSeNUdabL%Ge`+eb7C5R#>U@K.dJdY/$"Kd=?b'Y+Lb-E"m.SYTs2&g6hJRo.1L%i!S##7)$>(J:obtQ^u
%Kf)0?"D>^bUGlLQS-4kJ@K7d#0BjK(6G)(sr))[jig+dcN$K%(9*ktk^Ijsnaul2S12Lr/OAc2b1H;CM]imU#e4RfkU6;&6)HU%D
%6gRi7WP[,I<LVh)`t+rD6n;!I@%a6q<P=3YX+LP6FJ6LeMJH\#5:Oh\7s3Y%Wa#$:V0lo+Di!>Wm:;qQkK6EEAt]j1'E6baAD8dU
%'kqd*i'/gI,-UniGLI&r$!A(L/+mqbB(ttV<Fdu+e-P47i)-ung7%`9\<Y-12Hk-d:jl;E8eXk:<20`nH#?5i#mjd5W@\Ft4ZmI:
%9/b,"NL_\d=sDO^AcW7Rb#T:pgT9YOW&:f9q`O%EY9]<%^3K9ujaK]`AM&[&+D:;@2W)SS(bg/0GjY%gYN=&C<tAp9IuKEEh\g#[
%p#*o@_QLX%no?c1nM>ua.]7@UVs#Or01))B4kYSH+]/a4(5HroSS^N\XcRIZYaj"3@2<&I/e(a!88SP0"Wr8dc4Ng4d&6Q&dhrl^
%ic[r`QWTN0>0\<jq#jT/lf"?mTaR;nCht]rN$poS@_-q4>O`)6@6'mb;.'MB)ga[#;IKfjM5OP^=l!5!HC#a4>>n:Y%eLO:o4"[A
%#`UNUa;3@5$)O(V'HtU(A@iZ:BlU$7fee'n7<qqe?_$Cr=C8d%E4d.>!g^/!$:Cj#ET5\I1o,>qZJ'UcA`\UiMjbDg:8b0/]sF_K
%qs/H46Z1\9,-:O4E]Wk(UHa&cF[2ZYHJk%:a^I!Vdj^M4E=[\/:*T8YbNYhH:E-3@j`iO\.sW9]Y;JbG.;A.N8Yr)S*)BrM(Ji/G
%QR])7Gh0$Hj^DAR-dYCU-Xd5#q1P4nb#dn6Qh(Mkc)DP>V7h-q@U6e2I*/J>pJ[@MNa+]_`T=JJZRbEp_JYf;&$<:&l>Zp06//#N
%q+@RX1\j^b\h_G(7/,AZ'NCr.SW>AS`6k>>ZfIR63h@b^H\h?B$?.GII]_Z3C):'Sd`De#>Hnm&qpq#`Hp+*<5+c:iCo3^uH)\0e
%PU-6K4s;s(()p>ll-N5^%B`?.>o5@^a4k'd2cm3V,4BrWkEtKoq@VV5hYU!m1"13foGfYMa%Xf6drRX>krE@%NgZJKVWT?KN=V;G
%j/lb2*\>PE;so6CPs8K8YCNa.gZ4"]gu>>OJG9b7X4lJXDp<i7+7YErAB5aQ9g(0nX?W''\d]gcA\N)0hsi;e'BY*tc?JaI>jQ-Q
%g/[sT(&8^3Ujp]Kq;=DW*rJ^PYi^$'p\]W2Na_k>3=UF4K:gWN++5(*_!0@H_%3&2m9$kA%DI$I*C:Zlmr]PH_;"MR\>M1YU"AOW
%6S6r7:P7O+Q`un_D`0m59`==44SUM#(#MqooAJ4R%/9.:HFH"][lFtJi-ah]i!7Q*S`RZu]MH$!_)G<ai.ls[E6b@8bme2A31mdk
%3M1WdPM,#FRf(i]n'dTKY'?SO5>:h#IV$>+]h^KrIcu3KoAJdoq"N(Si*n,PbkE%-h[\086)%cI8nK#W3@%0&aH^&M.aHY,7amSq
%a==X=T.]?DRiNj1j<M=sjR6B'8!;VlpZ/Zf/#h,&H(OWIG+)]N>o2)KK>C60')s9kh,-8Cb/`mk7hAC\pZ&nd^<0^H'$1@/jl=>O
%XNsYBOSASKLaAa8E3k.$Z-:8,#bg>=Xin\"*IC<.h`iG78@@a3NP'OnTVu`NmftEN-L7&J2-)]d2>R%G/)PPK7Fp5U(]Ef9h&#nF
%IC/$>>&.2S2p4_[++GBcAk@%:d`@o7]dYA2Bm!<b?H2BlHXbb]+2*0ApO-9cIkE4m]XDU6/[T<RbkJJYZ[DEEQ1(J46aD_<p\g1B
%Tmp@W#thtgZ7N=E`brA8[5mQRA\9MtX0q!hY-+'%2p9Z2mE#/$f6>Dmcih<kla+1r"<r.d^:#CJ^&;(;1%'JUj-[oVHnam2\i-4O
%]5$+FXt&lub=>D!X/^,J$q7DJK@^[WVEB?TA:/85$EF0ae.e69Iq3Z8,l3.f!]S9H%pP8;(&4GYmld93?CYX<m\,C]5q#5m_NE7=
%j;d9;5to@$H_Z5,TbI\Oi5hOUpP?Y:>)e*L@>_lUee)DXLCNf.hEBi3j`feq+28'4g9(nNo"6kbUEN9g!Eji3V25f8jR&7VDNigp
%41uoo9U5A4]M6+0HEO;W>s;RXcUR0gfl6E@hoCj@a;%9o]_bPEi5.soC6u2BYkJ'r^p5PY'"oZq*IZYnj1/G9.TJT@)m;b;?^$Q.
%hgZQJ$;0)0r,eqSL0o:m++gU*RT+$q<op+NpM/HJe$AnIZIp&SU0F0R2(ngL67BjmRXG&4dAI5bE2-3E0A<fk(#$'Hja5^g=[%.]
%s(PEWn?CJX0e(=M-T9r66f)]_IBK"Ke)[RS)6Jkf]'gH3es_u6Pu6fp<op/QDe3L]mAk\#d!rF.'-Us0g:4T2AB1mqf65rHf+6KP
%k32c4Hn`kcp,_;E8]8#ZjO[U.\TOCuZSC2607TT=rc;q5`qcg`hcq]Ks6&aH)>%f$8,MI_ruCE5Hr/5i)>%eN]ph=VB$e.-oPOlH
%HSj]1IVK)#RtLZ$"hbj0l4.[e5/OSiE="rL5*krOP=>8YdM2FrYcQP*%GqiT@atXlhO[pq.f`I&%L9=@Vdpg=fB@O2-*P#-jAWu8
%%;YUpo)'`%=1H1L*)T#=qK)HZFl`-pdD3olmlQ!qqk+N`XMWBOWc-"8+TaltY<FE9paNS+Db?H`Y_C'N6\?,jm^?u^_4$VJG9G+%
%ak+,3?4NbhB;O2/<\tYH,S_UUe?f`O)js=/l%!]hp$/Bic\e"jm$+H).$`^3^b=\,"&bH5)ctuje#M1*+\OE"r)Q+#_&4lEh<RFO
%Moe#*g#.ZW!<:4l+!d\Q6]g1P:!&BKN#[(c;!&^hbX^npbgW>FB?FG>Dgs9t+,Ae.g(I#`('l*oH=JZ[;chts!JcrC+WOTiiP06@
%Jm))N(Vm$*KGEHZV?ZSq-pRsfXT2A;QuE6-8T,EUCB8Om:J6nb,2qW^,1WRd9!k.m@9+nPiSX0oL#I]3\<j>)XI&*!J-OH2.`P@M
%e;T6B9nRUrCC#"6Ag7qBn"CJ+P/p0L(O=IHTDt_;EV\?`mdQNto,6BZ=s>oqc,Wc>N1GSgGP/2N7hE/4^OnG>e#)kkO!BCQ,+=MP
%Z*0:*KHknFNljS%db9&fGnB</klV+'C6W_2+;Q8^>dqjLN@SMt3KI42:V]70`TdI()oj_dA%o"E[)rD?k1[,b*SL:.KlNYM6,fjW
%]-I1NSsBS%<p:#0oT=<QdAUiFXUXX8Q5@KPJ<CY/Z<fM.=tfWY,(AOR?3BY5PQPNGaI^u1m#&V/._QeV?<mS<%'H$(5ho78ogV9Y
%Z9M"#1=($>BNJo8-oDjg?CocVD$ltb;+M#WI\Mot<ChD'jI9a!d&njoXADfckti*-D?5Xajf1Z4TTE3-.o#?kco<B:fc%F'nWf&<
%jO]/]7Wc-jk:"^t,oT1.SmD:U#DqRcd2XF#K1(V..S(73Q%[.O6)(k885sWd%jOX+\!2Q7LFEO(#Ka\#V?MhC4gT'Fq<[ufhmNm2
%s3>&IG&s$!CoRg'V16NoU1SG5Lm'tR9Jd[,H]Jho'!KsinATV]h<n13l2!@Of,;afgUC.9Q7.lTK.,.'^Nr$<X,I[F^*rV=1!0,>
%8gLC*X$r^rNYBZWUA%<@</V@/EM?dR&gr:/\_RfE14qP`B<5C&,>P&I5bn(`eV*[@M%_&+\p)`f;;W!6)ME7%;-:l+&gjo0pVmZg
%g">Num<$eBNo0gsM%Vh\mc(^phZn'W3#lZ[Z]iO#q"Si,f/QY,>KPd3D8CpMoF8B.;>>LkaLLTUq690nl%QJGrr(-l:lH^!4oG1R
%F\g3T:!:$U8s8*\YPq)qbZo/W4&q*A-k/02;mf[642ok=mH$$>68@>6/&RJ!Oc?3N.q:KZ`BRe]La1c9IHuiYYmo]K0BHF6cjW+=
%at4,_#k.#::O_p*PW+MYIm#gV5'^?.ih_cqIo'B,G4EHPlo)BKHalEsC=O6*?B/`$MN[NO^S(dNXZau7<JAT5!q.W6f.Q@!S]]C&
%_s)IhIt$2<X-EPkJPr7YYE5CL17Y2Gm[u%!@?ti^`UB"VZWcG`aS/nC#hA,QIp0R)>5H9IfJW&h]\^T"hL+K9]R/<t.%Y3UK]A@-
%j>]\>Z0lJP;?kn[D(=pY)7/!@4aWtRnG)kk?X6rdF+&4WPM?&sM9>(]*ra@'++<g>s-Da'^,^\,s7bh$s#UbJ`ufa#q=CX/Q]'ni
%2m6R@^-&qgq.Y,fq"jj_o(nEVrSp6Dp$'Toq,pbZY?mfklD&jP^&3!"/md?R/\]1Mj4![6ZbFcS)#kd5j1"ttr30P@P'>tor8mk;
%k11XPmHVs\bI)hcGJ&BMld#gl=kN;PbbDc1o'=Ksf9`6SIJN%'jt*^:jm,_B\2_oNaAY$hKQis5p[t#b/Y"E1L%R0j:&Z1)bQ#`b
%ouDCMp9An`n$f?iDtAI5+)g#^`tqc?h^lY.o9TE%R*U,.*ns#qm2)AOm.fInm.f^KpA1Vg!6bE!FV<PBeTUM%q(2@0k-ssDl]4:,
%o`&3'rHcT#iDB@2q#'4FB9ml*[_BEMj5SOkZ;h5Xr9<D?o_E'$+8ti2H;"6XG+SFiJ,T$$ak>cB*YIoajf$R>rj;K6hqd4cDu\M\
%am6:^iMWh2T>*Cug%KeW0G^:0F)l]8m@.%C])'[\:Gb#ui9-^@+67Kfm-*L]lf_,U3qL841;9As=<EGss)rR,c@<9Mp%d4khq_OE
%r@B`[1^NY??/9n?4MAm-d<#5$V^HjU=tbA'S)Vo3jotDEnjS"T\/c?op$C/dl<AYEpdCVG-Q(cfeDhc\/70t^T>1C%ErDWE?03g%
%p%,XCrgPR#qr01$T;+'S(c;'G:Ti#W09#pj$7)5b@N0\Ej.XXOcbR$&6=f[g6As6C!YdT@Hp;H+>\HDZ%#8Oh)uoF+kM,"G[(8uP
%E:li1g8JrMdkC:UI^[=umup&Tf[A0'UY0p*UAqE(SY,g,IiSu&)4@lu>oAAK_c2*!p<S,3rUosQT.RRO(?=eg\dshIo1s8W4)\Do
%TCNHiS2L*T1,U^m0Z*cm[Q"3Q4jhOHeumeRkA=@b2?@os!LIkj5BqsQ-NX9+h]8u7P/Y+Nr=<gNP<QbUh,`V!ftLO!q=TX^YEq2P
%$"'hcaF?99J&=@aeb.>\T?GJoEV+ul+23.1>hK8sk@YUt.g^-2/FohXYAaE=Zc`gJhj6:*m]ZlWUYt!h!rJW\_4hdsps7^';*Gan
%QrX%^WcmJ#\F.&/p3T\AfNGtes4*h5pXdSQs0B<8qY>28S9T%g2"-_<LI\TPi@;8T>fHNu+O,;>"l0Q8f"pS$[d80K`-GcRpqe_7
%/=5/0=VlO-s6nJT4NJD#pH?@]g%9d0WQr9So08S>DpT?s8%rGbe)S\K-U1pCrUAG-p=J3lIVpWZ=I/E#]D,Z\SGV0JB(Cs6CZLQ,
%Rd;&;s#J_Ts0[+E:>>Yi.cL+\&1E;?.,Sr.s++FKk,@U?:Rqp1;$m=<C7E)H%knV<TXM_>q;Uc3"J4GgkPt/9A:Klqm%cf.S,!.J
%BiF%1\n"/^-k,1f!c'3A5oQ!\\O_]h]$R7^?J_fV0CH/Bp?k,t(gUo[J`MrmVCPKo>BAko[U[EWQWIW0*b5G'?p<4nh#>t3]5O-e
%:OKCQ)P?u3LZjCG`m+M7%t.k#22>Z-NJk`TPCDFS3:_F287lN$*V=l)&++7!aDkp`fh)-hh*->3<oD;^j7>4Q`E,^"*;f$nH&q^/
%ei?<l1!-,P=EJ<![l3<WUQQbWlek'"_+)2UoJChKND?@_YKPZ1#K0'g0Vuke[d=K32tA7Qb#r568$O77S)XIohKq.<P@TNen)o[t
%s+'S]&=',uWpk%Rml^qJJ3ZXlVJ!J)gu&)PP?F&f&&$`([s-k-6pDnoBodJ+,-Zdn'$&U3;?';)iYrWl*NG>*@(8IcG%>'8#Rl8O
%.UP[&^dJ,TJVT(=?EM8B(]"/H#)E=in2.i*Jj7!OquZriK5]],Vu6Q@&.'OJ^6/o!d(r)"oK_RGJ'0>t#d3*d30455n5k5%0/B't
%)ke,.m73e-7Se<T]`>:j(OrMOre@*FS`KE]#a).e8KQC],XMe:]oqL75RPs>J$e_6T`kGSs"I@GDkVj!<@,Tph9,aiIEDM1$U8\?
%0;6)+WOB!W*Q#_:CSTU+#d$2G(PSdH$oWN_HJSSD_#:0D(9X6=&#<.9mgO:O/RL%$gdCu3KsnZ][G5Ydq&k%YIqIm(QbBkhY9sS_
%B7D&rqS2gGJ*[n7K@K\\;l*cC?iR)1$M[(rGNMkXYGE(fUZhD4=Nq6oPY:NZT#"JNWP@u>[iKFMPIU@4\QZt]2XLJhN?<<kmH_@;
%/=1-l:LE$Ifjs#5+70%&XE":,mtGZR0N@+:KCKoWZ<R(QdiX2TEIWhK*-0ciGUeMne'ifYn5uj$$h4d:_FP71^^S9HXAb5i6IH_m
%?Jm#7`&IJgQlc6q0`H5C]fCW9!Bf\"Lt'6*!^:t:T`$J[4a[VTJM%&B.nD>Ok:""T/U`!i?44m$_m0(`1cg;-@L6[L?,2fU(R41#
%@h;(.]FZ7SGs]?h@].jX][QidTl"oqo(j]OiKB5h_o;c3C.Q*]^bgQB%/eQ(6jPi%G=pYcJ:D!&Y@j%kLHbOD@3C,qGd<Fg$jSEs
%r>O0e8gp>72joa(_[U5or2@4nr#$^#1FO]haA.Ib1UZ3ALo:TNnRN9+V[.[MMt&J0I-n?eI4"X6!\On#M]_*pKF+XTk5p1m)u]EQ
%WF7Q>'Y[r6ot%F=Du_B6O(,-:*hG7+m2=Hli5R0l^^0/\##[RX7*/:-kiE(>1*GtS52cR_A/57&AL!t`5V^sG=4pKC$Dh%JGJ9rm
%f.]NM([XsB-;53h&Y><p9PKR]#$CBZ8sqN-eq2-s0;+Y:;],06:#Cp)Y1eKbAWso#r*]mUCE6!-d30K%j+B*ugR4:dcRD9.>Tmp@
%=?#4AK05CH64fo2?>fthI,#]*!P]cTTI\`jJG<'lrAi^Q^)UnlY>;BA+[2Jg1C<*uV!Kj>LehLu$ABAXl)lJ8OTToGd@T_*PJ_R\
%YR>oAq17\.&>/BVH:ePl5g;%b,ci1n&KF)nna!Vr?tN-re8BIUhW]58,[jCL+sR^nGV'YCG?ghX=N5@b0a1/_]EQ`[@!jnf\BFVl
%Dc'%L"HXagGuM:)6SUns'#q21LKk2m_@:ZcX!:?=#fWc=+$?6!C>fiD-L?pm:AXdFX-hoK-`;[dEh(#A/SW1g$A?fSEW@=-fbWZ,
%QSnnT-\J1r0&YEX*n^T[2tTQPr`YS*R.TSG;7uj#U95<$]['^"8-dG==-,oH`#97>0S`TNZ/T.oN6t`$N,bpX'Hor'Y'Q?+[]p6?
%'JVWnhb'rbd>a"P'7T01[tmR9,j+:k>SR#[`&1qf%cd]q;m6oHifOjbMJ)aZm3QBM5h)5hBk$(p8#C#qU=<9:&>"Zl?N@/sb//Bk
%8?nV).R<[+3IG!Ae/TYnm$Ti+TA@?Z1qaE:<8\A[i5KFlLl*LP`K4URDW_IKa2HZNmt%KI-ie8f))O"#F?Ld<6H8R\%eaYjM_.m/
%!!ms/&u`PqCR+BHMnTJSi?A:OS9t^dj>.P]RO&LdJE#p5AqS;[88Epb40aoQHKGH9d0_$.!a.L%(dZ5eb"FaSD,jB(nflo?,;&H+
%]_TRZp3b;Hpsu!H;YT^lhj=[GF'1O;mr4&h9,9dRM#mqjLs?+P[*04RLgK#X24JRpS_"82#XQ9\mXeOGpdu;.?[Oqt+;"mn+WUna
%2O/A'(67WA(>3k?K!?Lkm9%Wq,0=kt)IP).a0>Rp#MJ"FDjlqXWB>-!+39&m$EbRWeA%I?dm8E2mWFuVW(d`f2@Hq5nh2A<f:Ai9
%;caXlcMo>#L/fFTZlVpD2@$Jfr/^K7nKlj/!JgnScFNH?q[ZG",4[!W7?=H,pj=X[9>NG1$Dh.Hj+mE>quF]=m!m=Q6FDm#)T+eq
%R=#as2$H5:,S?0b)c_XLWl)c1h:MN7G1qJV!KHE<8!6;,5fE,DL`nRrpRm3W(d%hNTT9'<;loaIMOCV(!$be=#UMK^(Otqi:hCI0
%2Y[3'Rp2$],>SLBmIHU>f4.ZA#;"AiY69b;OBc=fR/"FF`SdfklGbUlB`YG_f]!&-%1I$U3)/u3K:=Z)'h5c!kR%;44%"Tu^k#$?
%Jc*GVi5d:%s)Z]LC!t?V:Z:36IhM%&A.Zg-cg!_>3LQ(gglC6@Lm>A<D@2Q8m!;K9f``GaaHP>^P@6Zacqdeio#(LJ/f>N>pl$Er
%gVl"JBeo1nc4'isIXkEr^,*8npIUMhK3KbP,_clc70sf(XGH?Y:,ffL,^ZU^mDYT_=otTlAWM+g^(`(q0Ut["A%Y/)ml\YcH&=f3
%a*E\u)RmPr9K0Nra)M%54%3A=<kC$7ogq0^V\`kBnaSo?rp,"T@o9niJ+A#arZ=SFWW#,`;f4MZruBZ@5LA\B:\?W'hsln&WD"DB
%40;,;^++5..+Q?Kg[tb.<"$H^%uNRDrPhJ-(S6TjPmbjre&7$^na&0J3KaPiY$QeWC@,9"?(a+]>m!;MfG>L'L9p9LSU.:5`Rf/5
%j8XG-etBp&U"sTembn`F4hhkb8`@F,R_NO$SpnYV9"!/"fA=3!ke>&dg>.Moa%'pIgYW@_em)")Ec9jm$5c4<SahWh(EKchautYB
%i-J/sDZ\I;V,i1XMk<6A5^HOMmgr0A!3Y2H;h'_Cf'9ZH[bc5TC;'C?0)b!qY3TFd'`W;@M!kB71L+#NC![rA`_Wi9Ii\?7?7=%s
%p2dKhIK(?VNoqs:>4)1Pha%,<>=iqF<P[B/l;/$K5H!$2%_dK'rS@2=^Pe@]&-)PHd.dP?8`%>IV>o0*4q%M^_Lun&_nJ8,mm"\"
%HYNBWp9FOWJoea]O7ggkM(XP^qIm>#hr8l!Ilk^ZeM!!X<45T]rq_#Fleg]PTu!@=;#W*Ypog<HU;+gTijVOo4O8Gh%@.2Zgq1f<
%34;%4hT%p3)l&"\j^GjO/=&(oqtKih.R;\c/b\^<DAPoQDZ'a.M>k\f)(O=,acC,<V`,.$gb+pCS_&FFEiWO6fP77-U@^M1QoHJr
%el/J4GFmRN>.HYtf.>r.r>sisptZnEld<Lk\b.du:h[8[c,q,-n^On**MU3\+hO:gUXT4m+JHE^p[DUD>D:d@Vsme0fW-ql%ECK$
%r!jZ%FeMuQp$ROr/N#",-adeiZ!M;$VKcpX;0S+$`Z:gO.$`Y5HnD^3\l_M,&#;;SH@/<i53)O?qb%^P5bZlFY8<Y(!Ectj*"W4s
%fZF,(fD@1[peo<)lb7DtOcrH:>K37o63H`4Wk<MTKc]a`El.6.`L#CEXp:nIj>g$;N#12Z3(B<&1[cSH:=jA!C99r+R&TjB*2-8^
%NW/J.1\\]JM_2TklG])N&E@9,*n/LiiSFr8d5Neb9CoX`^eso7m=BYadOs<VWg.c%k>F"]n"t7rSLr??/$oeu-]?Y(;_=>/W'3t&
%j?]ko=0)#k6M7#,kYtblbfr\P"!(iJK3]q\X>eSPEZs1O2S4"'J!$LPUN_^s0+ZD0q>0CcBt<*hFV"8K0L9-Rh^K[%#.D[hQ)c"*
%8''FP@(%UQH+RDZ%!?1?+Vme+>.ZNio+bG9nc([NH<@>Q("rZ[Xa76K7?Q/q%\G9.\G&&H=k@_CI=&^n6E_&hra`cMc[LGhn-;Pi
%g-?QO1ulpIVS!sar/tAnku=^D1/>td`%6<5$+YIBH&Khq*CR]qG)4k)R2TYJdtp<&F%[q+s/XtPLMo3u"nqTuH@CgNG8j8>G144B
%=Psl9c9eZ._8LXYVHBrWkZ9O?jaVh\H%bdtIPIYWfW>'V\_4d2_j<1[R#4fRnC7sIX:V*Wh#bjPlM_"8*1jlKQi1g)%s?Xq1ng!5
%+S&UijlAb1A6%[!b)f,1+m.3I*^u7PUGhIC9+9nU%fcH94R=GrrFt*Bc_RN;O?:q4SR'@oMbZ<X(/^^3W'BK5rNE==Rc->$V129c
%oIi*;b9*6opH;)nmruH\H0qQRaM%L:I9>m_S1l0u^1)b/TN:LonN`qj58W(k_XJ)jA+Y3%?gl_(jh&M/'d6<HnMn:XHtPdjFM4$/
%kPBVl^=%H^+ER7?;bVhWr>Ug$0<':t+8(DE'K\o^!Irf&[Es;8IHW=JfhVS>SQ6W,R$:V:,AZq2CSb31Ki5Ham_SqDfiomn'Qe*_
%*V2Y=Il3m/%8bXD&c83g[ft,GJ:G=KXo(^c/9PV%oEZipj6)W?3C9iBM5%//q<S*B*tT?Sgq00Pmn)oQ<Ime-DXU[!J[t)bB#VL/
%Sm*!q-`"J5J$k1aVV?S_FgEH3o,5[mC@,!"qV#THr+ZJMF++FP<dYSERndPk6+kWi9,F(o'FLaQToo3==7\:7,ueUioq,"C,'J(M
%nZ-_taq#niH6[fC*Uoa]-\EHi^HR%Mq.k:#R/_J0OF(hl_!N(/GD-$dBA]eL&>C8PHi0IlWWM9X_3%'_74J_@n5DS1R]4"4U*'1[
%)>Kh&0Qc`:p8=VlqNSL)k.=>S01O$l0Pn.t[TfNs/MZ74Puf*6?7u.EcRs:^cdC2+1e<H&'5KG>,mido%S*5MGke"G^!S>0>Yap]
%k:>hs<dmWCjIG'CRbnJ&iWirf\m$g*N9A=o^k\b;qqhX!:!c,LM(_s4#53_FO=hdR4d,Y@q)@'-dsI4l5$_O1?^QuEi*>S(*^@\]
%Z2Pd@<h$)@S@dtTi,:\=\H%*IGKLi9p+)"r,tGY*r]m1U]hO)A6*)u9lHMP`1%^0al1*4eRgCrSX)m1p:(FLoCG[-u[;V,Y/2^WR
%Q."hT.!<8_(R-=K4EX*8f>7dh+CqN9\Gt*\Ltm%Bf/%K_Sr)KB_h$;-r=%6Ac"u##6",11Pebi"1>1YKhpWp@hkb@onlY3Hs(>dO
%HSU$'YlD1R;U7[f/c214XoC`f&sH3umooeOI(^s(gfd3GDA<Q0En?iVddCd4p)5YmGB,KfB&d>BEmK&Zj^7EA43NJ-26')Xp7lM+
%^CZdIZ7C4K@P)38DTqtu-T++jp7FA[`0r=TdeY#'e@/8Te\@:S`Rg=^iRHUXjlUcBl#nYmrr2Ht>shEK[n7X9qIYA.L<17Tp;l"Y
%(>^`OcY)drR$j6hnJ/[qDL]V+%*hVMfF91]i%`4Od]VUq:J=W5nCkV`Sbt6\oe!4GX"N9-/()]HmEf[7lh!9h5F_Kc1SV6,[!sCa
%=tc-FkgnJ20*MXX,k_kp07(2cp\+$qb=;GZ*Sd.QZ/T4ALOEU`T4Hl!oXAPDYG+kl91;TjD&$7AZouobmY@%s3IE<aQYHmBIBiUp
%I/=+,[U0Wr9)BV7f5!#A=>KjcH?"u'?&5a_W:ejbh&iH]G3o0AH?Zqo`LSQ.QsF&0r>_?17'B[Nkb[+_bN/Tc_Ur,PChc=smS7D\
%S#`_gZ]DN4`_']THn8JNUft[uGV*igAs\Q[(Us(cm+0_>p2[K<$s)q>3uei9%s_J3pRHT#nqNLoDGl\Ao2CY"EbeV!^bX)S>D]6C
%[F*8^Y3g-Zcg1.1[^*,>bb\3INuus,.\4J/6#L7E2Rlk+kFSk5qI4b#rEA)nV:Q74:WZ$]e60oXiR?"lFUWc!553uPgj_B>E"G/8
%-i963l(`([jQffmqorG#cbHPd0@.()YK>SL87uL][IaIB&A2'3DKe1QL[3D3;dHPtbs#[0g=`C^6M*S)DDYE/>Aq^V94Ok^&T#%D
%]m78i_l(nkgj3ZtOdQ]OLXV%-6T*`==eX>rAYSAXA2.H`pW'U9qK?a?4ebE0R@U=hjDoG1GU6S^9J2oQ$pDiMMhMuF<(Z3o[[q_X
%iQW'gAnCaT[W8]Ob#Cls`ho6IX%n!,E:aSM0X3aLnYBP11O!lQS?<UI?BYcOF#1YueNtPfAm,]ph(5^ejNFW\V_$sg=sj<\@&t?<
%.^([5aj(S#a^TU*I!Vf_W<R^QI"q6pOlbs+r6T/,.e<,WOkff0)-RHSopb%?8a17rh@Eo@]Sj0037=Oh*(%#;RT$P"6Vo@H?7*n'
%-.%k(Q7&hj[W=6Yq9bHqntLua)#WBJAt^i]N-@LrY3D#.il\q41k1tOjSmi3r#O*1cfI2an<oVJ>g-!cgsY57S`k0(I]i=UF$nT=
%G7=*1Aph&roZD!g>Ia*=6&[H:@'?l52F!>Gh%I5=jjoSQ(Zr8q50?#9Et:'rDtu_.CcGqmO8%hhEjptkUShQ_]f03O:*3&],`iM=
%c\Gn)kotV#\($8.`5LD#XZ%ohftqL(\`Sus?I(bSk">hTR("c3>TB1oALufaYY>$s,Yp2lCh%%efmGj3ZeMBNKVd&!1_!i3E[mKV
%7lTn1fmiX#coY&YEcER2AhLX@).1Kc7E4*OBAoI_YJLr)ReusPgeiDPIC.DiI"^WDD"`D9@K3Es^pYJPBlBtCqE:c<#>obXI'bVj
%I52$Dq0R%/108?OVnDTW_Ha_eL.D`5Xk!(2L*2qST>"MqQJG6ret7SHPlcopnF5gf1VJ.!fj;caCkSD4]J$Bt9<[M(8O(&/C8P_]
%::l^Zp=@)LB'j8FiS>hg);%H)2n/W=;MMUQk>Bk[mpYpsrc,^Aq\A)=<-u#-GTTAr3PG"o-?JLTqEq^>WYcA>e!GE%@VC1lH`jpM
%m-#thoYCYCflhCEj'op.qKN0!9u4:`>Ec,TgX9m6n89I0;csrEi<^RFekGpR]Df<fEjT.TabTb+YfqLCb?r4"C#l2W4*"o^banjp
%4&N`eni#c6+@`=G=A4c^Nbs?K>Sp*U<#_%7rUpV7+:?/2E:>]P8oL:CemOmeM=*F[/ft7l]@j<q,LNDU-:`+fl*6^AQ#Nt5E]]D.
%U4[srY*FRGr;1]q3YK4<07B:eBD<aNe^\tplDV2mJD<?m(-`a5/hRu0hkgp^Q>>/GA\WnR944*]gudbQoZDR<T:g,e1lmhXmXMUW
%4Hc[]GU^S_AX?8HE2bUlQV[$^K"\SZ"*&g3S5uDAiOkZt^<)8_m+*q@=p.G6$XWXXG"GAeB:%Vd79HF:&9js/r%is<1.rkV:NO#l
%p[QuA)BQ)D`O61NQ(FUS$2j&CJ\8[0jKZlj8ndRP/\-,.%//E>:;k?6K)KaAa4js[8'FgHgs-u.M)Kp_JVhgf)*B@?)7P;"3l8<c
%R]X11c1)iI\EV=?V*?!IE6?(IJC:)Nr0@hue:f5n`n`?lCQEQ60b=g$V"$53]r1+(E:I01rYQOA0EKA06O"&fG]bC3K+P!X+gOAr
%lMa@R`CmCX2Z_+o,BWH3_YY*#]P73VT8Qe<rb3hK;tB\aD.)P/pfq*NGu)!E1ge+8J^6q.j<1bT4Z.E>r=#jt=;I3Z_79"&UbPt`
%qr_)HhbLUAQG.dVWl%Pt!IO%-&%.=$ihap+N:\JK1DatL0,>d+WqJ8""A>3XVr7!r`4&-%:e)-`=N6OXIO5NgE&!FQ3FX8(=J3pZ
%/'omZ9IM62knBg75&4P$;@anqT9WE0;7`&WG^/!HK6+Bh:4K(#:,Zl<b<ikW192Y#[f@1nh"4]"Sc+]HQ.u#[jRShMQfpI[1d(Ll
%4gDqkeS[:O(L&#c?hQjfF8)rLonCFD4kqo!U?YALJW1buhT6fd:Ln@dl%@\X2HsoK?@hZ3=R58=@.%J3.4qZ1RFrUCX+9n+=m0)0
%)d5EC)dgi;GNu$4TnA'0GMd#4eO%u[?=(t?2AQqCn(bE\Y'>>U%^)\[8:,fgfot?V*50$ICQJ'61A?j?nmqaX/):[K'G'mmqGbbZ
%NlRkKi;(*_P&pB(:VgCT;No5MB3"t99PR\lSQ5&NC-!?H`,k,B^OZ:W3h!ek`eVp[XeDkrB1oE]GDlcK5co1A27^8\Rj`,siIl1O
%2qri!g&%bHLUd.53.!m_oO+*>fphE`Ma)>HqEVH3Q.sNM0qa\dH_Psb0!1-Gocje8iF/-OE)@OBa?DfL>F+t9jQX:I6ndXr^K2IY
%N9j\f59>*THiT00H3@UN*'IN^>H=?;h$ELa1R7=UAJSNEZ[MRfhY,gK`*RS(-0JXVjPoI\[%fHR4:XR6_OJ*(ZaD+SDLY9<m[W_"
%DsO0)nC"l)o<pRG)^*(rjd5m&k:Os7AZE/%XS39;f=N<T3=!COaK/rp-f^&_j&X#Ob&n&1F*Wt0ju0-t04LAW]F0=daYKOS7JAd+
%m7(hT\TC_oF0chi'^475*s=3@9#U?ZMntb9o\jQL)6E[gVHc;[7'tM?WSs8gL%10SKC:bq^gAWU[5nG&EoKq.7Kd\F<BJ:KdMT=d
%AG*]`BiJm<lAdVo"t$oR`@D'A2qO6\/,<B3:6%`G@<_8r-uNm4p@jk=?(Sh!fUrTr@=RJ0KF!XQ?oQ6m69.25c`ZH2B0[^=e*3Xo
%nSu9^pR"Y::X7O]pg7mA?Hh3T=2m1#.u=-5D^5:J`U0V,XL:=c@J/?ZV^G2b1j?.HLS)sg1qi[gg`NleSaD2KN+'?$<rA8Ii?2pb
%\W,b4h65MAB.(d?kRi=q=A"/R?AromXkP4Aj_@rk:Phr'a3-*UFb=hC)fg9&h7UF;4FMK?+LNi)#(^d@asSR]6W[np2f:E1b9t3p
%2O!(9k0[CNAjst?`7i<IFu]WVUh9I4I,!b]fU3U&:pK/T)4X2Gcu4s>/%I*mS/#IAB4^(MYMH7r:.mB+3l#O%T;E-ZP#qH@dqId>
%kME1?I^>)qHkQ_ueq'hBR_ARQG"q+Wq\'>SION")qcQ_>*KK8_7V?nC/Q3,!-@47@:es86Tn$+/O)c2AI>k2P4fmI(0$g-7JA7_'
%S4j1>NtXY\$nE/N5JGpCN]LR!<)9dB?N0q;D"<eWc[_jt"g_HN+6HVMQQL7;Rn!NI6drC'7Vq`72D:([LC[I(LIQ1^QYHK[WZ.L6
%lC]uI4M14_d\H7B?Y48RQF-a&gP2GDqX&5S&*11Va^s(Y7_7JOfB;lrN:*gNasA#/C*t(/O,o@rC"5uF!U)g&HorDC6T^:=l=dp*
%AM<K2Y?p"4dO!%8B+d"6L7EdbI-h"mo0+-R5FBjtm$j1??"*>eQ8!fN/67jXk4A='(QD2r"O'Q4hta'\p<pRZq9A$39V]XEN:i1O
%:/*:c>p&OOCt&'<G_j@j>4uj"k=srVDDbB`Z%6^')-/MHr8%!T'pR!U.XtAVgd<`gLQJ#dLpWBhg'dlAgaT(;b`Xtjc0f+<7+X!!
%,l9Rl!jiOKJqV]J5e"RTmbqS]IKEET4?oBMO=d^6Ee<j?l6i"#m_$nrBg(>PQAolE;IT+fO\1.B:6o4Pk8,'t=9c^s>aW8ShI#pA
%=.5gKi2-#)EmXMT=49t"H6k<9EqsF9n7h;A.umt@ENkV")82j;8*M-W5Y;.W[/-<L4O%]WRfc2nkRt/8SU'$soRD$bC]F(REecp7
%=HN;-kWC9<^"F3WWjV*QPKgF+2hm4CSS[a7Mf5f7DNBY9\#!QEDq2*f3kTAnG'VAr^erJ6*Y2=Bnrp'Y"Ugf7`*9u]S[ZM=29ui%
%h=7MSMkc%8c2"@1q5NTBC8d9Lgj"'H>I`,P*RTuBg`N_qpF[8cdYFBgNj[ii^6^Jg(Ib4t>^D73)Q"%Gb;8D=kV:;!V_180NSj#^
%/9!=t4?>o_'dqO&!r\Vl(.3FbH%+`6#e47k1rFr%,LQ*ei;g:P*BHAq$<?9DU[&4Fmp2174^M>a+4M*Ee,K4!4_;+64sDQ,K`bpn
%1@l0s,=O:)]hpRJFK\`Nl0HBTm*_Eg@7k/QR3&sJ-NL-V"ZQq'a6:&oG4rm1fW3"PTS8ZbnL)O=Q4=Bp2f]Gn4I?oq[gO;:2>!(*
%f<3^[6aW>pY+-#N]$0kmqG?(PIPJlV4+0)Qh+6/K-Jqkd=,O,PYUi\%f.$W`!JG[rL>k/ObXCuCl"!iOD9_6%YE.2UG^WrkG)k"S
%5Y.fjeipXt.%sfHU\,HtNr@7FD<`NmlmV_dRa/%=T+.Qn;9bBhD[+\fP;=R/(S?H/FqT6U3KnMsm>Y+j&%Q8bZM_4O7Xk=aPh)nX
%Nuqc3Q&0r`j-9Fu^6f!ak/9<FAo/q::5cA@""NihP:;I`%51X#asC[e:l#@s;kGJ*BjcYb6.BB\\4*`eh`_@]ZO/$5!gP9#bK^n`
%Nt%)X$-]@g&*GiokG#0W!I\6@5P5.mWI+)3hsXWRc)qN<L?<djo_5\WE^e$!n'?ju-8dNiSQ(s?USEtMY*(-gpKud_48Jiqbfb0M
%(gZkj%'RqMakO^)f]CL_3h0C"U;!a=&gceAamf[AV9hE<!ke@q`[&%)95F+L52*E:)Rib;*he:5fiT7t3GN*)YP#,,3'YVLQ#H*I
%YsnCDH_\]:o^:@SIbFpIcLRbA&l!sP+$j``pR[Jbmb6&SFsknQ5[BM?gDnLEj]9g))p@hgg!mWFp9039;eJFYJ^ZX?Y/ua7\^M\\
%*ZF9qg<Act<Go7:>;,BQEuX0"/!Pn9PnT-+'ZhY&IkYot6dQ3^Yl/jOX3QcMK@fG+d8,PHfTl""_V&sFibT1uNOf=>P\KbF,OgU)
%2U66n]*OF74#I^X$b8db%*hXkXt"&RD)2,tP/Ta=Q=!C,>ERIASgL*4Q<@<"#'3b=!1UOE#)B&Or+]a:B"ApUS1U"`8$fKT\X09j
%Mkeh/MmHUT@DAAtL,?HacHUcMjmK_OKN0%&'K%$?Aq=R<RtqQj`]7:,=n^PQO;b)aOCZh<!35)LFRB(4CUWk0Gp?ZtZ4BU.Vj;r]
%URh$&IH]R1=JhXMoSQDu!W8&>i2@$tk[jR8$Vp\Ig?2Q_R.!ed@Vg:kZo>bKkR$Jdq.@Y/0uKTPXNVBpCtQrSgYnBlQ#ut=GI#C]
%?U<QmaP%h`0NL!Ko^:jF!=bcEKS6-aTo3]q[6L$3SsM+n$E*R[ge@\bNZ$@tq4"^g@rQXhchl#'SaXemmc?6?Lnh);X*9bO4!W*!
%g2lq7d7j>'m>6Zl:g;gQILLV1j<"K\+25flT8/IFIB'/k8>'uZoa"I%2/1o*$VS98j`/WOoA[Z%ie\uuk3ckh(:pODh*f(NFUM=;
%oi:X&3hAV(B:kJ_TG"<Ydr[bO0]$/OeJ/77(K9uJ&G/!;#(me'q-n!@de0*@WW0]/01$6&CT+&NX)YE"MeMp.5<2=^62`P/=n&bi
%Vp_uL`#]bHf+OM2.^tObn9T7j-bm?_>Mi^J0XGE4pMcQVjp45O?Jhk/_-,0jiB<nM2$#44:%t1.bRRqYW058`DNjn`A-C\SS-!"X
%63A]E>QhB\mWc)n*$+2qLSMo=-L>SDUGHl,FZH\Ls0L@[hNM(<33_/Q_SOegNZLXR01gP@?2UoBQ\l#6e9Aa;GH.5>&'!(pqL*Ws
%0=PC`+7WN7Sbp+8p"MRIkI5jM$bqt944SMN;(\^''skoL`_E$g<N>0JqJS(`D4t!XW]0\;4Z@.@p,srBWh8'ZIQpo7r.me!T3Plm
%hR=ei+(reT$ig.@MN't"WV)H9a@%57mmMLARG5[UihFT?m&icu.ts,J6K[cGHY?'sm3E=h;_Kl*f++*ZGF.&]AS(c(O)Xj+o<^9a
%]%-T9O$=86M7[":0f_.Z8;qJ[BF4X>r9bZ_s1pGs\_PtI([tkCM16RTkbeb07eYf5_/M9<>[HM4NBUbUJ,/1%D#un[NR=Bo]AiYk
%r]*JuAlLb!KR`E1kG*sp/H/eJ5L\T*C;>Vp6(E<d*UZ'T^o*"mr"DNpl<#N!"b03TYJGkAOd@'lT;HdNGTI"?d1$"G>P5gCSSl9!
%BgLXZABW4Vr::d*SBg"D^5_0.!rN`-)>SC3Ud+Z3&a[d;YMB\]d]ODc!3t$u!h&'XY0?&il'0n*RT,]Cl+Q`:>72^)Al8]Ca05+/
%_m>\3<A]lnm&1kT)Sm)H"i<M[4d:2S\TP;3F2O?NhVF#Jpu;lml/o9+)jNp71jsfro82_UbgYledbt=`j8T^c&V\79(57r*(Ym[7
%m;N`31Gjol:>Skn%Ys`e39o/Y%CElL>j&q+7+(ESI'\:Kh/GVIPM&0*$J![%8uuXM0+QD8V5;R5IV)."NlG"YD`>enilaZ;[!jpD
%R^k1tR?uUTeFM@>-.>4Yh.\TV6SnIeTJZN9#$UAu!s[3MXtcD7XF4BD"UV[b0Y@rBo33_,7LaR!J,D%mZE]fg0".7#Ki2btelF1^
%QLL_gOJn'd'Ycs5iaF-#0uTL)LSPDd0?*InrG7,Q?J>YF1=\s7Se$BBp%Fp"9LnuHA0-l.#8U47lAs`p8a5FW).dc:"4l>/K>msm
%P0(n&e[0!bA*rTq[@F+t<%bMj^%`YR(8H?j1&m@QRLmr)TpanU@^*65S4M^92%X[^Rn,)IZuN!r(1@l?f7Sp:S[5fDjD6YE`6R"h
%/s^k)YOO9m>P6A?_jjJ'P@2HqLA9:U&p[qC0fXJBRi%U:m3IEtniec@!#L\KlsfND0fJ@"-H;CPQ\gRs@6H?U3L<>`pBNL2WKWg8
%`:R(/3K^nFSk.'f<Yc>)le[(W["<<b%CLs)WcMthroj8L_FtEp,Q_u?9SCUD.M8fH[D_EOi[-B]/0^Mq$_sUc@W?Bt2mIJ1n<d=\
%M.@ed4./`P08FEYq9e>D@V,"F3O(Kj\4Wjk2MMj6e"(SiX"\R`fNCgA,ka^PH=Hn<>tH$=DsP?HGBTK9kr]J'cK\@(`5V*F`Z>dp
%B?*<tB"rYW\3'8Z')*aYLPaG^@lX!T>22_4eI1c_bG_n9Gb%!I9@S/aX,4=Fl!'lF-.`>7l\3XB:a<;031:^'*?9Pi4!%(-Qb:0!
%f#Z[?[p>@?<+>_>Q5T=eB/^%4S[%_$\_5]ei8RjIIW2iCr\g-l3]J*a\_5JbldtIQ_6'cGh8.pq[N7Q0mahZ(gF#LDk8m<=Q*(T,
%hB""]#Oc#.l%cfl3ES:r$!rB*f7T'rE#k9ZNua^`_8GF)d&:8s)OdV[T+4R;Jp/ltGrXlGWoR"O>%eAihp":m/K[)^%-;XjG)+WY
%]p5:ne!Gc^]rQQEFS*4"4`ikE0fF+o2$SgCH\LTYq=3rskZMde__OTeKC%&`CGbuL4Li#q0K_7YI2l#=X?I)?F.:LnIcC-F34c\L
%)d_<9,_iWc0fH\AdaQ+ga]!]a@&gUgI%$L0*PRt&fc)Qf%UBQ/Ci;KH^YH4X_i=A)C*YOc_.'+#dBfCGO^r)5bjV)hD8`g1acZCi
%dD_6,pM`*tqR$8ZZG!e&0le,,Q:K4*gLh`ieX*b-dW<Bd4Q##_NAM]6YG6qP6'%&>PkIUGUT]YS*=U5QcL-P4dH*t=NQojNF0[g;
%IJ-PX4W9kp(qnR/]cShN'g;Cqp+JpO\^T&AB6rQZCp\=G4Z6T;3?-Epf;Z$crOJu6b[t.AXm[<s`qHPNQc;cNj,L=5cI;L>K/l_f
%]l't0NjW5[QV\T\/M8<g;\.:/\;AGrpqh+)*m_%6SW.Q?N#Y'^*KH.e>nr7WV2`LGGW"NLnTJMcE+1@s/l'W$PC!tZf%/j!dS25L
%Z20c%:$e]_8eYhVg!beiH=CriZ?V&G9Y=@mIrZh/QCLX.?4K\uleL7Ud[GWQ>Z8Q%ao0V5@Ih';^6uX;(9Suk.bC#NmJ?3]Ean%u
%3[quCD/sN2n338Po,a&V;n6Z6FSi/-/.AsVP0_lk.bPk*^`;moq!Cmi9!58a9[-Ab0;nBCQ-.ToYr+@\I_DYVMK^O7om6XY3^$S,
%HC:?G=\MQqZd\1'oZl4UoOdci5(2EtWTh$qe*ZCdeA9UUkOHD^,r:nB.5Q9W9eAReE1,5<anTT8A8?WR<S0E?93!oceX=5_2*WmF
%E,\#TQA5=*ChN-IAp:\cAhK*&DJ"D=rL(..RsT($4?`/4j.R9-aY0`?)st<^n)Q3IlJ:nZhlFT1@Usm,_Z<*j9[&<H_hfbG?LYDB
%EBTEC?=`Ar[^LB(8)>_0.2U!eEj;4>b0B:t\NH?TXiaQ;0T^3W6XsjTG?@d5:Y_qNIs8!fK$8t\NeWnNo@@EM#>]P,/F&g@B9RXM
%4rDfhkK-#<2EBRDjn%GsDQ2T\T7!&CqpB+3kc\U),Q@5WmY"r;Ie<QIWQDqL:1fec..5[18nR54*$$$UReuApe\"?6UVZ#V2F0/s
%U<:F)S'A:tA5U&DV.P-2BU)EID"!sMo4r-$E&4!2iPjg3:0?1SIZB/+QXqGcRsS"EoV<)dkF^n3]CIXpIQ0PL4'=T$T:K7*9RunA
%>+If05;d%'7gk^JQlFn`f&q-uF_*1l)f*\=jfZ)T8uEV<F7"R'3q&%=q=De_kK<_Z;fR6"&7/)T^HGiW/PIggB,;=29+q[pKr<qI
%mE+k[6=[o7Mc6[Gc,GClrUo0qk2cBumDUuH^ga(e(gWT%cFth]mPM,6FrOY498/Y1getIULmD[s=(diJJJq`V*$7a'QX4#;l,:j>
%93N&_/*VHGr%WWrGl!MN*\0@(kPt+CM=s$7RE^K<bhQ`0LGFj$&S!6BeBXl4VWHB<p9<B0a?JC_T&bXP3i-)c]@4o>m&![kldMbR
%Y&Uq!R%G7%XQ21rj@'"B.Zr"X-=>)#`_N.1.s!LBdE55[j`om9\(t4^bYB^jqU=EJlMAF/0!fje;VYT,927=q]P'+5QJ62hXIVN9
%(Y;t@X,lRF8"5G&l%t8[p#F5)G5XF)D/N$hjNbbSGpp4CGk?*knT7Z8g`54bCi(e0gmi1%PRA'/cUrP"4D^U-/_irLkM/*<92BFg
%SQn?s:Pcs2p0o>3h**m&aR/07>[f&u4?i/.:&]1re0!DtH(D^mmA@<nk&tf)T%q"!lqHf\j^6%$jATK#DgglMZZk0<C%!FP+$0;X
%8ptZ.2]<chAbI4/B&[3GB$WP@;U<1q8N=%un@E\REB$l<4[*,A3Oh;dfpudr,mLQ98)_kDr6aBfq!QO>qr.O!Z?S-HS@RFF4h`m\
%hEPm!c+TYB2[eVUqe:'IjC'nFHodBM`5'i9qXNP>oHG7m4Dd85k0M9*p%-jSEd[<AnR]=WT"H!Pc?%UXpZL.p1;$-l.M!?%:KpI.
%7oQbeMq@mFetmV)9jV_;a.(9#c2HYP`'Q1uPoZi/>[?/E(9\D'WDQd[H>[Bhrq^m>E9k)a<"3_e_$o/d-8$?W.`(39D<gmUJ%Ils
%K%o;<;t=fmYBTE?2=Y^2F4i/]L=bmt$;8PiVhL&j]u*0LI;f.7mU0u%rhOYAGMeq'5:D7JD7g9S4D]kt@XW=2:bkt1c_^T7f.=V,
%>Y^OVL?Fot(+qB(C3K%'6*7g8+*LH+3Y*kSbN_qr[Jm[_3-tJsd]+[de:)9&BlE/,jJi"(Cf^2Y`*?mRGkSF@gY"p2o\&RGf:NSW
%P-<2ka7Y.QBXCrh3Q\+MQe$5Q:n>r$LXl!V.)-7`]e7#OcQBm8hT1tAg=UX,<m-P\X'0M_>Gt=$WHN]"9qBk-mMG%*db>dWllFs>
%2<r<%"t]?]hC\SBVsB&QAjW?:c/mIJ8b7*\=D^ck4@K.aL9>mI(MS4@%SCEj)bp+S[jS!@X1ODPQh]#noO(M/3RIAMfDh[_pitP5
%0=PtK:k%3>pH?7&E:3RGT3-3_OJA^oX#s3lQ3Z,>jT58F^d+sU`o#B^%K,gs>T7>kd.&2+e->C^'/\"*L1!kliKrB9ML4tN2/q?F
%M;d>-O6`;1pNgJF;2(_:g-E2JTcZJ8D=F?^Kh?3T;WDa!4Wp75J;*"iC2fu"Fr_q[Q3So3Zrph1>2XD8j-,sd7\a-9o'<K]:@SWL
%]T/Dtb%%P8)6[l.!sj'XfCapeL+9<V:@/47^-)&lmZ:<XbV4+C=_[M8G5i2+=o5j5](t`W,CMPqr9@-7\!=jSTiNX"^O,.\9mkHl
%]`'o`gA:e/)<e+-*;2P&n+RrM%tL\kcb4e9JbX5r+.S;Hq93q&XSHa?5$4ZTh/b'Kmp=tX]`*hEW;>X>qY&kif6*q:C7gg\:FbIU
%rW'k6`\BXt>&.@$KT]iK%OCN"HMI+I[6O2Sk3(&O\G^<sC\?[cZi4.R!H[`@LjXU6nN/_aB,>l=4O<"0>A3N4[[$D:O=+O+BBc*/
%HnDN4#5Ze=kBbJ$h>KCKIZ_@Js7R*,]Z6):+R:$?4S.uj5n6,+aSJ]F-5;Y<r;%uM[X7Y%q%[s]]2&iQ<bfD-^Rm]hqCTKaRt]b7
%+dYtHZ\j%#hHa:cM?B:Bc[,2Z=/C<uR[IB16q[*Wb'FB(VXdRZp0!6U+D'FIFq9;J0:;*ij*mXSr?M%4;cr>FXE:^M^Fut'$GVp;
%.JWjrl*0(3ps1+^/,4RFSe&^)#HVijYLeXS6f.G6%g`"&B8sZY/Y_l1CA;l.ku['*o$'8/I.n->Hb&acfC8g9V!k!Fl2OZ.*+<T_
%CH?t=)Ha1K"FKK^ebffrr8R84?X`KR_h`5RhI5Rg;-:$0%hOcYDsuGi`4lNqDXSUi^,6pUSYMdsm!iDcJX&u&m&8@)Er:5bGa(P,
%I.Yp6]rr/#e^b6Fbr^C=!VKM)F2#+W:Wrc@3WGj/@(*Npr2A9ZKhfsMT?*MJ(q9eZhs]u`+.`AD?`j>7+k'r'K*MfjfM'B+%d,oG
%8ZrX1c*'@jP<n,9\Yk?L-C[6EK;Yd#__TNno4*e&]jn_=B7Iknh(Q9ui,?Ej.m<prq;GLT@K6*50d-=AB0:tSn>E%XO$E='A*__E
%5Q50jWEat][qb!$_o=n;l)j"=*4YCE/&qk,>NgDR5A#RQ]Z"54:ZFZPs89oeFT1ePP9&FI%U4,@Vh\h+q+$-%:PU+l7']e[Vha4m
%qA&Mp6cd$)N'BJl`P6\Ip,i8]!M>sWm@OJ'fX;#;YJ#M85N']e=AXY`J%XJD#bdtlW'`</MTnGO$6k,I>,47o.JOS[d+.pHk!LB%
%l'*iKr1ma3Ocff8)Qlu\O!HY'V=7D+;bA"FD,L]Z/lG;U_5kKDPT;AS,)klcHkh=ieWYI'D;'ne*s%tfQeWo^+:#2q\>KF?2t,LD
%U+!emR0j%b3l")gg7qCl!Jbf5Rn2#M".Vi"f17=D3l!&76bm\p06'4jKSeL0,p%\BK2cLc3i#@S-#lDL;H!9R[maK[-PO?'UX0M&
%38A]H6spkMg,BN@ZnqL*V[5`CChUCQ7j4HboE"*51;L&*E'"Z'f%7QBKXEDYVEn%9J;6Lu;M6f="pj1,';YQA&%F4^-%7TRaMa"H
%/bB&n"ET2Ko1Bu:"fVK7V;iJhi03g&=6>@0%"OMTQ(CT^/L.kgrr.;$XX5>VU'PE>AOns/^n)mGL-T;!-3UC_=Ju>'4Tqh(?_n=D
%U@;/45`>`V;`Z++o`[Q$$uO?5_*WbTc&j)EF+ag[Qm-q;$7UPH$kkdO65p`p,lW\6Kpsp'F,uajJt>@9H9k/Y#YQTYB>DO(MdT?]
%!YF'nCOgFDmKI#kL3+VA$1J@=H2qDM@8?o6,)&`TCeZ\5,31^i*"EF2J/q#\oHFmM*h6Ia,$(?=&dlti7uq=CX;Bl7PgaT2ZYF*J
%#\G-N-=IMRVZ72-Nt*FtTT93VJBQC#'#6r;jD,SHcotmY+gIR+!<SMJ2IPL"3D)aVmas(uZ90!)#@ggP'G6C].?G8f2aLLj/-S-L
%qA*s07,#Kk8YC5IKY3B_&T\#*!u(_@+K^JnKngdYK(4?u6+@P2Js;G><$!cCM"?9b&J>u=!sk'Gn3BZ:Tk@6jiKiuRl9/NH'mVXL
%_9n"l_MG]td0XMV&)#bO*6>-FqfZ!LIj55LI2$]:/h'ro_T<7h'#=f+Y\Xg5og:!J%oBEWUaY1@3"CK>q,A5@!*I2_h#g4+PN+H\
%=qMo=$A$8B/![K;;ara$,c^sn5Z<#[][4c3BFP',?QLm,M[7rf'..[9)!Zq3JC8EN^q"t<Wt^)c'ak5=CJW?gU!<<6>R20-dN/]C
%TZWA-!DON\,MlBja9<`d=<dSq7U,?eSd6?f,9hXc!4BNEHALWQ]9Am$8.;0Z1Q%W/Ttk=WW.([&P>u:a'O*j1+_OH41c,C`":Tt=
%#$@\/5r/h,k<`=E"%t:4&O:/W+pE(]#f&,680q`Np&\%[IK[PdJI#:O,DE''BTN:1%Qp6eg6?,C0e&bMTA+lh8K._6)A!9Z3uj&6
%@\s3Z-?@"phGmli=+=ih_!2G;=ZYS^HiqFrH_O'!9Y(KFf0R+=+_PTX9HO4F;gE1+TcrItaT/l8achT+?k]o35ZL6l3])Rn_D:)C
%!)[,-]M^O^,O7(<&fb?EU!cr:muU%2Y_&8Fg_sp.!2.?6n:P<f0^Bp,,0>).=eicU%;?B^)9nHPd%0`t!!52jB#461=aU6oBqp(l
%L^Jj7#H[1c`f69Rg;OY(T!Q!0'K.Af1b2s.^Jda_j0t_iRDLZ/)YaQr>bO>-)$=`K!<a'3(m$.t2IjQ(dLFGT2]T3)AhjfY6c7;t
%n>qlJ=H#RN+A"OBi1C!_e.#K:e,_60*0l$_imi:>m0r8\BEM_1ZqC^/?%mIn!)Uq)%r)rBNHg*7;UKG_dNnJc^H-BD%iWb(#@<)N
%8T'h4!JYG\qR.p</<]?B*XOUSVL?6&5p"];,jBoeP,X"1>`dbF9h%OZ8\q%3G>S21kU>nJA`X1'Cr*+PW'N5(Hm51Y8G4]J7C$jQ
%p4?'IGt>6k&!Z*iP4+hbLi7L1fh;Sfl]Y_BBXH-qTXVS\=;t'LbX1(.#CqFfdhu+`8<sFd"Yt1:$Lgg.6&%0hE:nb'_*b57Wun.,
%8!4ZF\I#[?J,j89`?Z:HTIH_freb\(VRQ(1'8H.4Q-?2RR!sE1UHqt.[TOab'T60]8e-Xi6tfss-jrsFAu![V7rq*h<q(Hf>o2FH
%8JXG)L!^b^_`6@ojp6P^'\[Sb+4?TADHL*LD`#</,MN-#\j.JT2#nO"!U;+sPi+SN8`C$B"#tMC-40HaMVGqM+DW;jl;g#0&i%e/
%.O=OVZ_Db6$O^L=j>J]NZu(_<1,9AbG_#&kR488T+#1e:Jj&Ab*Ag<$R=J+aD#kP.DKV&%_DVdj#hhTs,1e.dgD1^b[X#+#X;u3U
%R><D.D"&W_gJFhgS!8J@1JZF"4P5ic9+?h4c#=%7JekeKAFr?)?@-k*7,+kXE<1s;X^m2(V(F)\nO9kq.%\[Ghc\"HlLTH*Q9&JC
%!QfRa0[,eHn.FE)Z&fRYk%igWKHBW`C\FU3GU?'"Rf_FRrWkB$5.2>ATf["^<q&V(e*or6Of:]XM91G+#+pLg[tb('bZaGm?!8eC
%R7K4cE-W^VL8n_>ol.ggU+V6aCPdUL#6ZFmF:m9J8G(IOQ\kp%5dQ,7)A&g#1YeZAA<l;"^oOpLf-7Fg\fgh@&Sg"6e-q8Q9W1Fs
%g-B!l!nR`BaABaRA68RZXqZO17Kq]PfXPl7ZDfN[!5aTJ$jj?o:thse#%O5e&p+.F!J7#@8Yr.O&nuq/ocm=n"qIB\KciKH-8h/W
%&I/=<!1!.HaH?S1+CrA-h$g&Qm$\2<IPF)2,O-E!kQuN#:fHHA^tH3u1lA+:+4[Kt)\[$A_#XsSR"?Fp!<C^Z7$Vn!,&-F[T<(jN
%=pm5'0neOI#"6dFe%sP^Sfi+U,I6X"4cWtn*=Y!E_pNcQruR.q:K_n$i`8hE7#&T?$JfjD#+Qk2'`e<4Yr44i)6cg[OEih,&OWu7
%`bM;*i4p?F]K2RS<"Ks#nW^a&Y,JJDXT@2*(EA24IBA4LJ6'OI"U!"=Dh-91=Q+jQk&[khM"VPr'A5]9ieOToBFB6c+#$AO0<dNn
%j8,GYZjG\R.21'ejAgqNTrNVo/nb>Wa6@BT:Dd2#"c3gpD6Jr<]jd0Ig(]>1I+/Ku$6e%Gd_cptcu-?H$,>\t.oPrjAu'"%#gM))
%%2h_IBd!.`AKqsSgRqsPQr$ls#Um1#UB;METcaWCTc^P)UbRTpef&::ndN<R#8LX+G7a5o7K\8M/1t_1aH3>/g'!0Jd7k`j#%JY$
%.-l/O^!3<,HE+'#8!X-H>/N6)7Pa36(q277#m9;q6.]9HLebOdd5g**ehqEQA>i#B1gk3P\M"q:=:PRg$TLhd+9;K>gb[A0(,-Ro
%c3@D+,+oTY>9$f]A@VlHR>/UCJX-I<0JK,0d3%j,$qatL`\AQ;f90o?rXC>[2WfMm'h,u)aFIGK[[4F;#OQt*\DXKEL>jjoisVLG
%C01_"$_RAnYb8(b$6>Ueq#a)0;6.Mm')RqZ,qKk[\+6[$#_LCJ(^5Ju,;>A";AXrrUf%X/J'Z6t0XM<4\C/O._;@/l7tF1B-)'A%
%;VM)"Tl#3Hcgtu.f&4%(m%IG!_?A0HdFOGF3/3G[-X^9nO<tu),2]oh?mJ=%$fGEb_j`r"6)f7'&7npRU$`lGfW?[B.AJ6raNl+<
%mL*q(fT)`8aGLGk"%$:8'0Ipb`BFS4C=>R(BUt>'8ujX"J8p:'_Kb7$XETY-4L0l\-@bZ`FJs!p8";kU)*a((Y'hL&NCk@QCelfA
%;7T5/GHN.Og]?HYGis[D#"jMuN'iQ?$A'qR/eJ6Si.:P^N!SFj+\0&,YS9B#?#g=<LW\BVH6kZ>2C$):##j*7liR4,#`=$s>=`'T
%F0KSl"&6dU0WHN;&e6mK%ns'lf!Gm1;A?nkdhu`*k&?iuhg+DK.7idXEHDVa,%1#*=9'Pmg:*acTBHdhETjsHK=PkjQ9[7A4Q*@t
%@/ggE%LP+U(*cXJoNcjb-m=K=J0?,r#`,:@!ObG8YIMc325J*NA/N7S[i$YpG_0aYUg&]YO_tMnej0TLdR^%nAIuA5%Q%r?d6WE3
%p>i_ML`4dq[6<*@E*-su2oMLa=S2\QM?T.rK["ilNacKh=h"SW*6a,R:e`[HA,%=VOXI@?-+E^:1SX-12us:1@AC[ViX0MK$mTe'
%a(%5eL^Wkf`UO&9?X.g_"DSq$$*BHnK%CR="t72FC5'J1G"i,I%E$PPcoP_+%e`3O;3\KpD(nJ5f'o?r1U[%@Z&B<oYUe6i;(KgS
%+h:Y#()Z"T9!`jM#ds#O&K[_7ilK+Z$c&u.k6XuV)&llfHu7WTaMl.c[(:OmO'4^+k!2S/47FJPY[\N09K-do=TW<>OeQ.;@kn0.
%o(hJdB-q[%pkP(W5so^$%0J>YN8[6^_Pg)Jfb8&i8<I<44eh9gFcuqNJWWf@ZVH;b5.D`Agk(N6VZ7CNRWfE!)PKk1c7=WtCQchR
%0N$U6:C%XLEa'r;6:sO7?:1@gjc(4d>)_jk*]1h[a:Q>#;+Nu[B_,B4_JgU]`Pj$[-\Q>;Oc;e[`j(:%T?4QZK&U:m"uGf7O`l"a
%4?+^LdImo0gD*ILD.j<?PsoZ@cL@V(MU*C\S<FbV\>,EG+NW0c*<nmMMELBDSF;?TQZ&^,Uo`5d7\l,"5g+^M9O2]8)i`Ir2t>V9
%e5etfG=s&Xa>B4'3Gg.jh-gV@.I,:J*&\G0aD/F[Z314bJK6Y.g!\5ZrOb['>>e%(NHOm^Q.<*r*G:?H!hND^JKW!%@ih67/$b*e
%io$9GnA&]^WBLqP/4DECA$+Dn_VD"5V(6*'(sXAod7DJtG%7W.O$iqPjoEI1]-:5/O=!X.?C/pMpsta$''J9ZBGLg-k&KT`+cj7:
%3'rOecO/-;`pV=IPt_ne;.M0l,_nPuL<=B&MLeK(`Sd^N2MgZ1M+V&W'*YIU-cdLp;PWX<=nrd%pUH<gCn-\b';i9+5[s0)V6&&1
%Q^kGU&:%fU@:C@bD1F``UT+>f%=rGKmNWI/FateELS<+eQ=N<4r*`W0P0DS*SgD1:8(Q6((n9@^$1/+95=Y!.U5u9j-%_[!KtjAu
%XA;Z98jt?@7M1=>-qV+W&$E"BelYZ*Je4@Y'i9b-DS9RP"@rgO/&g"m@LGo*g@FWMb[aB43//CrVl0SG)$>X#CfDNVTlp$.BMAaB
%RW(_H^nd1?_oW(V[YRknR+Q%\5Sqdg%[&O`135<.X9d1rYW;Qq7S5n%rVWL36V?d/pt%G%:!ChTBZsZfhb'f.KH[dT>oYi\nZDA4
%;cn*"n@NEc@#KgBO!NpPa3+_rY#bVL/7Kt-mH;j+8e%l%$#Ri1-hEjC"uuOT;.YoSJ?^HCZ3;7(B.X,55nd@W"_*?e>j+of`^ufL
%>"Lbq/jY.:@'Pj5i?OR9;HrHd0M4oAEWJXc=^3JSV!eJlM'oj"$+i[D=f9!@_`@9_9q9&9!3-g>(FK<BXC-;Z(F<IBL4(4Yo)hV<
%q3:5#g]di%F;JS-d8#j4)`Y.3be[f4NU0JQMasS"F/9^oMJN8fEM=67M22;>i.l+j5`bOD4]ho?&MD'A7Poo%?qqlP%GnD?d@U"@
%5*F[X2>8-3Dom^@EB[42&ku@5_LfPAh@2q5,[8hJ"dG"tW5+kLO[nI<)F$uXOs(AL1P*4>#+[U_!I\K^pkVp*Mm2=eZMh/^'B!<Z
%)-_O[HiuKT'U\E0Q__Y*R^o#\&YNunR0(iA*.9Rk2KTY1k&!LmZeph[,oPBBBURMhdT)W1$!Cs%4-D"U]*^W)6os`PfCX_uqI9$s
%L:gKmO,OOFOY&CT!AKSDiLqLT$lj"_O_aZElUo,7e4)QWD&f:g2N1hNTNkkA*b[H')jKC(,OE9WFlmsh>n),!asDql"8@)-i';"C
%oH4I#D-WVC@DjRuk6_8,>f(+7-7+/+g0f6YeamX`#-<+UQ9\X20uDoVBs#KJOgBf<%2%7C4a'OD:jtm4\BU%7(oXj%^<O,X*Vupq
%*"u#S..-/\:8UHfO[YC:gA&*Ub-Sn!&:A"eHU6l-3,')F[QHN\[M>%*iolrRYtVr#jHGN4;;!^1U%6U^ksb?"QGh`[He-TN"f!+W
%!n*t?"2UI+>W0F!HfuUiDAL)(M/gn__k[S$8Ndc4`mTbXh'rQH.N"X(OFh>41Ya#d'\UI1!7J$%`P]u:AhsN0!",N0j=sOe7g_j/
%@Srf*bT-Isk>Zps3XZ&;OpbWElRF+u=V&_QaP+3]-Al%b'&@$_BIJ`BTP=k1Z6a%s#!TL6/M,&(kMf,O<f"9(;KBF/Md\Tl%K'Y@
%U'=IE>^dRgV7>e[KeA^.IC0'M0MHf@ei.hUEpJj>a*_a&\e]gVUa7fh'N13QA3UW`VBT5>U23^f67:V6%5\[YeCZdXg-l>bqpKrA
%,^=<H5GUOZ[&LQ?1.$-iCpOO1Bo%=Z%ME0=P87J8B9^P=(jHlGiAA1*_?6gJ$]XN-&5$P%e;jM*3+IM+S4YbT:PuIl\2u='1g!sj
%'iAWGb=Wt??2lRP&iWucgT[BEYQUfEXo##YVd*p\#4#A=@6p`sK#K`I!gb03TX,25F3DKm=+SQ,JgDX4\?_bQ&Vf9,^p.7U[ac-*
%H!!Z*4?s<2$R`6F(WY=EaRWNM[<Y`S9L0j5I5TpD1blD_ne(R-g7Ej=qcgQCB:Mh?osMRQQ0ET>51d07lLf#f6ZJYU"\VBCI5D-,
%*B#q?bQCqj9]G-`;J$U]f??\)=DU6r"n'ND%?fJSJ>dS++E[Fi1]jLdBI,9thdY!EmqSphc+'JOA0WIUL$*1g37UT`RBcj`TQ0+b
%NS[-l.W]`S+f59GiC:U[8rB['QJ,FC@'Km?'NZZlSKgKO95]<(dR(9^6eBhsB8@sWJSdk;&WYu2>e3PP>`oK_!,#f@c,*=[bCJ"j
%.^&4?o%-$gEZ8Z9W6MYP='J+E$7Bk/(J>gFm4)AgN!TQdr,":pRL[2#,'&\P0UsLq!_i2<6-+@WA-6M,>\&H>rlB]H;cX7bJfuEM
%k\,>]_S^J(i2SAf[WYWcW?Eh_d8g:0&e2?Q"#Fdh!@pfm+Tg#ZG!<)r@QBC,4AT-[KJ%`9Bg8j!%3q@Uo^'jXPSX,#JJe[?67Cj3
%T>4q&aB%1poF6F^_H;s&.HftsW$pOEOU=+jg]cJ8ioQ=?C^[do*U+oTFqTPeJgduW(AYt<-q[!i-%r]'hJqc:eW8YrB]7VI"f@aE
%`?WLT!gpE(JJqo)f!p$+au<d(FiY]C2S;CFJ-(--]#"72+m31Y[c)m"h@_#j4?tYJ^;(R*`juILB^r;Jni:Cu@!KK>!*)9C,cH\S
%3m;5*0!Po2;Ydc^&ZA'9=2B?<Uq!=ndYkJL$Z$7Y(<"kZ8@3jk>P\EteJ>G0Y)!<M/+UeT&SS2Ua=u=TPZoI$iGh3>?l2(<4WeWo
%.MaUWJJ3?!g(31QCI;8C>t3.]2m_.5':ADK$o@sNFj#0%X2NSFP:5Ln&P"%`q-&Zknhb@jn7iWC(]#c$5odD%1DZq5]YN+V]At+2
%kK9+UF-'I$ja`@Aj!D`9Yo8gCHm"A51EI`F>Om`-9+)G:,2L+^Nh'[Y4!Iec3_!7M"!CFBrHgm0CNV.6YsMmc;2S.Xd?R$qXJc\'
%lMsRi0KeXrF:HT9M_/hE.h\)S7t4BM>MLjuD%pg;2F&J6EYGm^-5cu(T#]I5d.(2?^)V'!OIbJpGgN94cURjA'i/<+QD.I^L)bTU
%Hah"-)r8PlG7nj!*F.JkV'8qY7bN;2`L8pJnptntN'^?C"Y=MtLG+K\S=F%q!MtQV$*nMB)>QMV:_Uj+./+`iV67,oSl!G@(+7u'
%2PG//):a66N9Vff2PnIGWA*oUOflJnRBb?RrGK"j=DDTdVA.ZA:dWm_P>;u95JbrY8ka']>4Fq%;>.F#1u"aM\p+dlE`8F-UlBFt
%86_67N,@;!C3c0JQ8Wr_\3LN3KK*%c$ZS/uj5PQjqWZ#6cuSi-Ru.\1b4Q[NaJ;O%R8@(R<#O!X:h"t!So2[WKET;WZdqd4>Za8c
%5<.kYEn"e;_hfY]V.lu-FPq$LU=[^;4UP,R2SBp\HTE&QkA6V>K>N#?$P6gS$)C4Kf_C<=.%Mq4J9@s$A8bXDTM]ndK"Vg)RRsl<
%N/\<\S+EDt=<!Rs[I'hG7\4at[I7l-"(b!G\7XSrc7G0$V3$W1h8M(:<*5uo3OhZn/nO@ZJ15:O6?Di,>s]-iQ!ncdoF_pX7D<%j
%1r:#RJ@)V/#K,-d$^<//Uma4!<g.4*&('05TrePE8u@%m#jpok2C=Huq4&)7HXPPrh]gCQ[3Wc31_ITr]ltTY]=*6@3o27@"/1#0
%JfotY8\%5n4!0@,p$93^i&c1Tm0X>pMpub78Rc.o!u>"ekcU\6ei>$\S.eYBF2_c5`fR4/l8.F/1MjC!-;`S*&c2TlX0]%`#0/S.
%j+,mkY6E[^On%e&g/D91,igekoW5/]5$-rK='U?-Sk3I*<#?g$*g#CI6(#5adQ1$UD`qS:66PVp"-4,^&u,MjNodBP<rjgu<+HC,
%K7N3W9'*TT$55JD+`t[>=C3QEk_SSF](X6i9ormbBJ]HM(mc.T.k#'j1C9?YH!CB$PrIFJ3@Wq?:^q(MbAATQ;=$>5bScPfQW%1B
%[5?]N6hYDW9d^RTSC7iUR*/ag_@\85Z!E?%Cg3iT2d!Z#C5$SE`>8UF?4r$nZ)h!Y_)>)M7Zo:$_[%XAb!EB)3)J,,-rj@b&oh-k
%!G&:RQ*+?s[4^A&!GND(bI/,7[[@rX?H'l&B$N/iK)"aL>5t+_V)j(jMALt0HWqjCO.+e4g7&Im<BQdJ^dUM^MBeq:VOAeIVdWR:
%?c\I6"JnN\neOl+8_70_X?ge4Surf2gOLNA,U$H=(SKCDa;1+VXBOM%!=6:O<i1rkKslfH"E!j%%)s20>OVt89Xb/G<m+po,.,`*
%0]PK;o?$j*)o\n\Ycu^78u5]9hbpnUn61X.FPmMi!oMF6^fPt^Rcl_rMYtHfTMQ;C"<&q^$JT0/>S>dXl(glj^r@"$/Y#AYFsYC7
%,4Vh%%A4?S>A59D=&k,l?tL1*[kj"<q#^C,[rG"Ag\?d<[`QUYQl)=Riam\TUTd``eoVLk`8k<;KN1[J1.XD-(Hq@<YWdt@eK\>Q
%'=kQ5XW^$'/N*rHe.qc$ZP?/r[5"UHba*g4?"5Z7P4(D=[?#6i4kQhrZQl2(ZA??`d'dX4*K6Fk=I;pp1m<t'.4j,!he$"8/q\[4
%N^Zn3O08(Q/Jf2&no2_Wg90#AUV*&aL.<kR0DM4O6.O7U9;C`"m4M,ogL=s9Z9r"JgUC>!OONiXaJc^q'Y/Wqd>aPe>Ds;#P9k/p
%Ma3mYm"p1<%V'n0eO-spTg=%BhT#(P=7m<HL#_BF\BC_k$geZsO'ekO]uq]e*aWRfCoprIU.EQ,%L=s#c6Q7e=QnIdCSpr%6.G$n
%L.1riXiZcu[L7@c*$VXA;-SZ2i%d&eS8h++G3-;*I!!5[r3-0$=Z%#jY3=&mepn+@fVC@TMNq/e7[/cVA!&?lAK!k8f3Zks\D5(A
%_lO"*:5EoC6l!;m,8is/H=n(nW+e@q3T\Y*:2RBTlW$POfbV<)O/+,Yit0q_fabXr'O%?K[q7#pAICpahhf16Y>l6<;B[$8+a)M^
%RLr'QdG*So+"V1M=&K;CLueFFc4Cb)L:MMLI#^o,]](($<Jo/4PkNCNq00dC;9fJ@\0>su!O>9@.q`_\-d&?sTT^Ee+EPQ:KE+IZ
%(^a;a7k'0!R]COG#7WM,.Fb\\(;(I%/dd?!S9Kr!>:t7h:85N@[=uaU/Ub?9M>!Tc)opA;[ksH&UA0T21r7AB68Gnpg\Xo^s/mMA
%MG1rs8.SAd?>Xas>ToHSE<CM]LrhRg"=5%h>\."_*K[NdiY!\VVN=!MKl0)gKD9HN^GZWhQ'3b<0XMNqVe@R(*T1s'>>IiZ-b2->
%OH%RPnN/KScf.nHfcZ$=%4D#"C#`t;</;f9*NH$J`(-S%G+osnU53$Mj^WoUdKPRrcfWT5i5-n]f2jqiM1Wfi-!2M"C!;Yl%FBN?
%(Jt[P4q@0<mc>0G-"m.(bcBL(*6eL@Wf(naW*kRDCBa.&*paGY9oI#LN^Ojd3#1+`EZLrOq*GHg\l?^19PL]?d`W8&l[Wh5EqQSi
%D[#&NOiXm-8."m,N#-N&.pdmilie6.(rH'lMJ)\_%cr0p9a.,:Q%NukJe6t4!PS5=CH=<X0!VHRmM74kK^^H@(G4TWUe&'B.iNti
%/aHpS^rN[h3XX((1s^di@UO,A@Mh0ZS$YVmpne:md--33)jhskd7f1$Dom&njY@<F!GH:j@%YaWY'(0,lo^kde-WTmr4(0TBG%GC
%D0e24IG5DTZZ*^o"ls:f4SN;%f%UB%\Fr?K]JRJ3#.t9^7dbk>(mfm7UF3E.hNj%;f.'7J:D@ZU/bCIV6?fr(]a@FZ%$%7fM\AbP
%^qF!=_Vo-3FfHYCD:+[;:_g:%G*CW\-Ms/QY\bGNeT=<D>VSV76!9rgb;,KH&OP7d6VK5sq;/;EkJ>dgIE\EH5$%BJ,'o3ll?^dd
%XraK$cr@7E`-Qc3?fu/Ml/a/9]lD)(]1=i/(l&ik/`;mDEn=>:/FKlhLdbu^<15*8eb.Y?=hmJnQl(^a)RG&90eKF#NgH("I\%qB
%CFq=*\ZKPs`WQ=i&7,h*G<iBl]ir&sAa><>63BdrFH^"!#j]:Z^Z,,h`X5N#md5`%7V@D"6bmO>(+msRX=i]5bB3]GDfeG9^*?rJ
%N&UrkcQq3RWA*V:C?2Zj/B?,k>,=,+7Mg4,BT0;R6TL28,Nenr)M$)=Qeq4DH"=`<,3Ml2G(?e@$#=fGD+sEKf^#KaGOD8`>asZ@
%n8re>gYqdXLs%i#(([lg$T>9\2RH@*ZmCGP\Ldd$D@bl#KEY2njc:J&@t_PX)/p8sM[jT9#V0HP_bh,QPjV#>&R:3KBh-SifMtRK
%:9-?38iQ[-N3,8?Nf%i5&f!t,L9Z`%hrJ>f>8ZD2>'`$c%+>fRd(%_c14a9E_UCDp@uKo_E([WB&P3Yf9GkW)_6:6(PT1sd@dbF]
%#86_?!LcN0EO6J.UKj24nWe_goH5@eCF%\P@1g)f&o+;:(,q#OX&cATLtcIqcUB2`+>8)p+&ss_'2[EPjV:.FrkR[WFC=Ei][2t]
%@Q@c5GPC<A0SQ.hYlqd`_Je=cguaC^ok0V@6]L/23je"E-GJY0Y6TaS*b39P9[]2_d+*FI(ehD[7R#_g7#T,=bn!Ut>tsR,:@GX\
%BQW$_<J"JLn)N^m()4JY;,n^1G#EKM/HQe#AlfmT2.)e@O3qfBF$(=_']2*JB+$hGpCoVY>+fkYLMkABPD_2W'9B*;32])]?F^jU
%nbsk>?MGjW8/4jR;Adp6f\.<;D^tLO6%%qJfG\R,[f#D7.=*U[2b4EB'7jaU$#Q?Ih).`N?RE.`*;CSQHR"mNo!*es\6;p+e`_.f
%BGqeXJSk'SkXt^HdYgn@.)TnZ3!sTh9,GSY!uJuOI2g"q-\(pN.ZLm5ONLl#pS9=\N's1Lf!YjK$=m8,qS%@^Q>1q0@,fXX`jk_E
%F"&?JfH>THMrgqZDHp#LNllUfMXmb==NBFGkHYZVk:9P:0%Uu'CQ<Ao-_WYM7b4n%DugR)BYlA8$L&1+.&6sWc[[g1R-q:V:gfc3
%Gs+(6G^*!oNs^B9RI*<j7W`JIG+1tmN4-VK>UBs-na!I4D!QgQ^@=>oiuSpKGfu#;YJ:F494)-kW-"gaq"\6BQ-hK]p5)33g!>2@
%<,d^E$lC1>HQ!Eq59fh?Y%I9,d#5`Kc,]Sl&(dtG&t;$:cGI^W5B:Vpej8"n;j&sig*Gl*'AM(,9993j9g-+OnVqSuq+WNT>V.KQ
%;:VJJ8,E7RHZLH*DPV&i"`FoV5o\rP0"#mh\b<5@4;2TjMdh-I^JU\Mh8krpJA_<o>7#*LK44S->V*k6E5//l;PORCJWK5)MFM"N
%#b&kUVQmNt$NMNX'&ZST$c:q@-j(kCJf.]g%>V,arrn&<iSdl]0f<n:N7MTT63t[;55o]Kr6'K0R_s-/6<54[gOA6b_'O7m,qK&_
%q+rFaWZo<sNUlRXDj=C/aa*Vce<FEB@^5iSGT%lNW422[=g+Xc8A]peBgci]`pnRPGDWO9*L_24Fn!-U+*.Y6J4X>;1lm<:?>$\U
%-_CinNrJ5UF90!GeT,=;2#YcqDDZ%;9HhnAMHFB5[B#OP>?o44fiMqL0kc[pZn+Cp_^d4TN9gVHj4\6uTN.;_a[[(Olrd'n#GA=l
%9XiX7KL8'S"?odpPIimC&<E5Bm=0f6BY@:J5tLK,TOuJuYnA>,%*u<)D^W,BjVYjd9d<,t3;X6PWEIOF3Vg3OFk9N>lU?MR`+Dg^
%[2[lJ>"/N<Zq<4;pa_=b)Qp5UK*aXr0$VWD+M>6"Mg$KZ&h'eYEFi_98>iIj)V*r@n\8h[U-OoJj2m?9fao,Q4%ir!>_fNu=9.33
%G9h+MPPA1h[%j<o4M*I6MZ.3om$rAu$_Vs+@6,i%kORJ+b,q;mr5n3^HZpl.*>&$[C2X]Y#anpmjHmdg+:3=W#bQkX!omL5E?q]5
%lDPSkAE";l+nrS/BB/(6?l$63[!.gN[c<egReceXWog[8Z@uD[AqAV02AYUuZKFljQP(iGPFX`924++SU=UpIZt=%`I:ftX[I%oj
%EP3C26K@B5C2"o_iiV8SK0gP$gpo3E#`WHrdVliVKLH!1h"H(LBqeXJL,j__()"L]]:Xu*fC\<tnF#Y6^Tr9kn3cP:^;&qqZ0e$L
%b;Hl`F0hL`fD?DAjj&TPPDJ<f`Jk-f1V)MA0K#GNP@d#pX,arGZQl/s:"Lq&l#'Y\,V0NIYcs?'Y03BX[[%S$L0^Sf1&\kIH?$qH
%Q.5Qf`0Y:;\5C>+P`fg3H@i*joodPp;[&C$+!,H"3=CW*]>Re?.n:!:`>Y/jIAMLPO<D<fVXoC=p,BR+<F6-3dGg,;nbY<r?phZ-
%jIqd:PZ+KOo'ei-=B_lF\OX6(6e#Cs4#;t*KXI/#Ss#6frcC,soF`<5UF9lCmh^#XJj<h$jN:P^FqqsXCFU2r*)c?Y;i]h+Hs10T
%_X2JCI%Tn=XqFHb8UOY2OKm4=hU=GlX=?'d*cP>LKc]=gIK:a@I-m^P[9k_mMU%3?@[4=uDF?<.d?AHEjC,0h8cTp&bdQ",/=.E=
%"MWC;E3._1Y+<:X6-.j"V>o"gl?=)Tm>9ZcQi@F>#8QQjO7'#V%J'D@K#)G)'7QBcVa]ifMk#^UBLVrEO*lE/h<D2.Aq,2Q;gF\:
%`TFKC,OhtGM:*NEaQADi&0f3MI-8"_@?Mr<+,9Qpb)o9i[cO--?"C8c5HPP(J_$(/YF)h?kLFTWN(Pbk/*8l0@OhWp6jkHPmq9Y$
%iWe7Tn]Br,C'iYePtok'kEq5W]f)P@U:&jjlYFZ!1qYrWTK-7>[cVW=^t1CfL89h6qFXY)_2-PoSYR/,\Gip:'08h3J(-g`Le/27
%MWX/0<>E:SGIF^@FO*H]V1"XuI90Q5;f<a"KH7s28HCQU47bL6J=;m.-s^fJn<u;9p"6-D)?BqeHFelZM0`/(Mr!l_VQj[KQrZrJ
%HpjAfXFKf$UK<#]UGW8Ic0gU/2rWoJ1gJr#/Ki;.OQi2<n.8R6*K(t$\mKlAiu<6&-8T-0i@;]GXAO84K#-AJ]n7c2SX.50c2e/a
%pOJ:EMm\tEiR2q%bc@?.mX)!^Ju/aXl2Tmc=9sKED#X[B-Kol\a9UK8[@Dr%SQF=Ze%hQMk@sB&]pu:Vg,mceL"1hSMu[?1H*NQW
%0)P=7-?^@JlF%/e>oJs`GBtD<HX%AtePMu.pqEMk7t5JH>A-J@K'*ojQ2U>'iu$#JePCTdK6729hLu[@gNSZ(9As#0;Q?!M3f'@h
%,I8>pEmS[JgY=UD4XB?'Cb&^,8&//KV7J`7rD?2W3_#5*j^a!GH^*WYoH2GB<h<!iT(/4FcA?Z#E2(fUjX/9cV>Ac%Ob[m[YVetN
%>%E$9-D+6Qo>PY:oVY\@Gs`a\;/Z'+hjL4URS67QqA-?eM-YY,97+jc[8A%TU_S%cLK#"0B2/N%#1F2\Qc4F^e.!G-ihHI0ZC@QL
%Pd>`+r70q&>+4_\]^k]IlHC41pB>-#UHr`KTJVM](WG%To!kpDGd1-3(A^7%i4$5Nb-kn3s-VN,:G]mpBpo1gbu3=mgc%*I2580G
%Q)<lFkR)M%c&4DYfhaffn[1,:P!i?Y71DQ;<O<C/6fAu._g?1j#2%Cg(WM`Dl4*b3gF'Q_BW1=*QX-GjfKm(==.Yk<L([;MqPi3Z
%6oZ/F]%tkgP>I]%kf'^6<.3luC%"ZE"&l&f9U>+%^=QA:lX*kRGFU7B^.<!)%sOnKqtZbgVE_p16NNG?B>>O#jQs"'K%2^SEKu^?
%K(<ML^N?^s3V@5qZ%?D.QF*bkDic;X4nNlAC7/+(s)ZX@*T?V7FD@/XU48mdIf1f6$(#2cR4?ARmtA)q@/!fE5V#W]%L<^)"B)i.
%.rNVs@-lcaRnE[<IS+"/nbC\Q`rmXo$.SUAiIL,Hm_?%[b?gDOO=1<1`)bJ<0L'+efB`!,'-Y03O=2[8IAS0MlF[)>ScAYpNu"$-
%HEe$/5ZcmQqi5McD1km].e_ZJp]QtK)E7"ABl@0/5^[d6OspU6%c[E&dMo)DAc[dmWDI2E!9MeY'%#E4G67?7EjVf\kSh0.]Ka$=
%69'%1SbI_KB1VO[ZLbr%(:U7n1B?>AKT\dEqoPJ9ipc6.@aSRV.3*ajQ[oT+O__eVM?4:^p>S`=U.kF$MLZ'FY.AKH9(3?\PRGV6
%WiJ>2<m5,&.M>0.4:CDJs4E,F!B[mAV`g6'<kPIE^Lgb[$jre^\pdf0E8a9q.9q9XYkf_@V^?[&W!>3[md5W]:g@sp24kRe2Em\l
%Sl;Ud6G_BgrOcoB$)0=q@gC/@m)aPriFXht@Uf'I.OT]gMF5`gP.Uop4;'7\)M+F.Ii7<3q\<,2BAPo;+^?Q6iQhF[K5>d7<md*3
%^K=:t8Z<Itf\!h7m3^a,:*/Fr$L=XA&*#='2C<h@f8k9E)Hmh(N2b^H-&N5Bpb0'!_$fI^97ac@BU!skK=)J9CkqK^V[H+@dLtt+
%'*ZMcZ!i@MbR<=r]FO>7J_rD-PjCDsjQV#d_gr7.99:?]92OJ'T).'++`nS45#oX",FN4ppC=X>rD%)>Kc*ZbXK(qsR&B+dBX#+l
%0Vq>N#oe!q&=]rV>CO4UD+5os\BX%DaflZtlX>V^O[h^m)bI93G=gZ\nfR8N,bcJZ$mi8SPd3FqL,0[+qNaChT,qjNl4CTP/NXB2
%,8&oRNY]4Rh3k*A1RSK*\:S,^-m^3!;)meu75H'hi`kkX9GWde.@:/#>O=$S40dpNdMFM8,Cg3&rUA=Dk8rU0o__\@P65d`9J?<-
%-on(jI?g%t(W9N,+f=(gbNB@VFbFmoJRsX%k#jl4C1DLoRE>OQR^Ag*2HKGY@@uTEB2!#(+YD?'q5Zm;mnMQ5Io$BuaQC[.K?prN
%$Ws=DRMM&6rK"(G&';9tpeJqdoO]DP">?TqVc/.f,HAmHoQWnICMU&ME!PZ=p`[!3Re83u7Prf_*Wo?l3>EC5inH@'#Q-j[N%*'7
%8Zh]Z?d"8rRABI;2`/4-5H!!QT!K4Jp]s8)nd:QQ$q?o6-_NZt28]CZYUam>#GDFY%R1ZGMF\_#/6?6qYblp)E5k`h,AF"2.l#"(
%//?+O]F(?G4XNC$=I&BZY_C8fl/qJQ.g%&\`TW,<]u&YU4>*VU1i"#7THWuRp?>KsY<?bkrM8)r/Dl(n<RNs*H!amsL/IPYNgi1S
%lMP7.eifESf3aU>79+:7$\\FY$5/'NU1cI*W.GCN9c;ogr/$,@`_aH+%cFt$=G7s*QgT)A`5%eSe6Orq`V1G;TKBu+YIaf@J?%!:
%R,[54*grie/-5bq=E#K7^6QK@0913bTcL/br%;G0!$^,)BPr[O'>Vf?5@).>J]8`/a0"/^=m=bCs5%2$_rSV'/9jq!gn^b[d>5GI
%GOF.T7\$Oao^3UeF?(t3d5rHaNSQ5ffk]`sc"CNFS(QO*GNkcnWpR,[4g1\"<("1M48qqSY]pOpYZMdMP[t6dbN&SVm4A[\WpP3c
%;^`1SEX0fuWcPH$T"6=FHiPXB]hR"*o?%6>V;cU8+I+Lq[_d[)[.+T_4uKemK3h#U*(rRqi5Q`.Ta!H]hTmI`U8qqN9G1al$nlm5
%Mp^jJ&"e85,:#O)KtcYlWWee=rJ6@gs1sqfL]N$+;]/mu0m%Z?i!/+O'/Pde2/0)in$MnsRshl?W#LcQ"/qRGq]N.7_Kr?DK[QM/
%:?9jN]U3!c0ehS4a7SQM#[0qs[LHem/ZgW`&^=7pEPAYPUuN&i;T>FHK'AQPP,?0[XM5/iRc^Bq'mLE`ITPlF'O^OCNTOJWGKC:0
%$^!3@kqV$<<DI*$@l=u`'$#-8HDNQKD4&5n3M.9[_?E7m:ZhsqMOKJeG',Dt<q5YHPN#"80,%HZkY8<^lASj5P-?k<8X[+X+g+^"
%jd9L);G0a8^jJmu9BAG4/bY!#1KiAdl/5Q?P;6#hRhS0t#m=*T,k@K^hdbQMYM:HP)HoT`hiFI[OSh7e6r,!:[-Agn^(m(rR.P]X
%LV=9J?d%=/.+F?rM<V:_+Jmjqn\lT53$,OKL-!j01Ie)?e)onLMK7T#RKQhgqC.TAm93rmNfa%NnN(Q*k[C-dGRO/-%Hi1@6i[%g
%rG\'&5V=^=@,*I7p9;'9GdM]E!faYD$l)ECda`D#[UQVa;3eEK\K:13_ah>F`L9bd?8)82K[$V:5f`&E$-0^/'5!`En2\D?6"3f7
%RV@$&--8N(Do=`t+1M3dcP>.H;6-WDKDfsM&u\X=APS%5V+)AR@On>7=0`-C0c/I::J@Eqod1Y=A2WEqf3`gp^_lndCX?9LQpV.?
%Tk<$JJlEm-$W%/P'OXnqo<VF@%D/hBWsNMPC3VtZ3oD*76g[:FYI9O.2?o4(fhF;K<.[mCb)=3N2SlLb:98MXDSUk9475a\N4mZq
%7_`3W'SLge3L4#]/EJ#[SVEgAE&W1jQX^Argp):lm=ac<.2Qf&^_U2X\ncnfnP-7!LB=(.a#Z@I5Iu,=(e)Y$WqpSnM=*tonQ\"U
%%u+#A@E^o(#k)7hc!p+o;Y^O^2`iS)URZtc@NIV1CJt)bGV@8Z!7?W6:(_pc!ercL(@/W>K,:423qT=Q/\pC+dG:Q-3$4ZQ&(L!,
%jrZ!B6'AT]r/a%nVn[Y7A?5u\^?qp$_RfrB,)oUf%2qe>6jg[S^;q/EZka1hND+f4bM+;MJQS@^<<=RqUnCBpk]8p4VT)[=$)W0_
%G/OTbe5eLK3d,u8NY75PCA<#L":l#;jci#j.bEJVoc#npUR.cBb_*GZpL&,XTD`?Yp(@qKP;tPY1VY:V2J'B;[E\#lVMO<Cm,D*V
%:(l&NJ.0o&j5pYQe:j5W+/DONnnUjth>NYga6.+TC12$J]`J+$;*E<HC&5c!aC(aig,Eh2"h'-%7K\tJ&,rAtmZP_+H=fZI=X\<\
%lsfK5/^Qka6_C?Bl'U[FpmK,DoJ^FXigYnKq3Uh`HGCQR&DuX"p(:eT7@k-Ap-&&MR>eVNVAneK^7?EDddHWrA@f?9YA??&L0\ij
%3>:`D..\sIK#2AU*UOmR0-Kp-39UP4#]U/1LB26b.QGo]."`&#='96CmcgG%l](A\p&^1ciTa8t\_lI=^ZI?D#2E(-]1cqajMII`
%"p'2YiO,0qXCi89OY[=b]V)F;;@8g(@Q".\;PVL'%e\28?(T87<NoUA;MJ\i=p%FZ[B);ZK#bE=ASh]/[G]`rY&GPWIdAf:UQh[1
%]$p*LRr`Nj:J&YVjN'66$E#K09=q%WK5g3i*9^fO8n`OkYAOB(!!0hXnJ!#[cQaPMpInfmn^DLe+OOJ'*PQ6p[Lsi9dKOotF=;TY
%>(lCA"<sfP`Y\;<rpli[d5Q.3YH8)/X+73-]Ym.A_QWDEeB7lo4iDRtQ6\`:o08L<0fH#NQM91I[lH[<6FE745&\h?gN+0^Yt=_K
%99`qT\31f;?BT&G.(3uf^5Il?e=Kj`TQIfi*_=VQ`'W;Wr7,O-(-jE;-URl+omAgAcLsF]A&d[[VBV/.T0MTZ6XAhj&md1:Yf_!S
%HiHG8(mLkd3Hi-lN7=)Z1@HT(<@&\?_5nG/Mj91PB4L(1*qeAEc*rj:OrK?02Ui<gf/*7q1f`)MJ6o('R+l_dm]I%%0f$(dFE)f,
%)eeIXQU?gY0AoMQ-_VI)E5B`B8]A\2pCT]NiFsp""Yd4E49<#'j`%0(4I7j39N.*741rd!<(I8^ZamTY=tK:=I+V,1GT:&0jb&'&
%'EU!l0dA$V*m-LVI)GQ5Sqs_R%?3l*76j6=8u+;.7\k-[l+lp](73#%WLS.CT=[oKW-emK#>hLd-S(=XkA=1Z,[kHtemZq/e?L2a
%`1U;H:>TWH32-fph*&8d'keF?/98/^-$@FRJ%Mqu,gskAh0,s98p%FpAIsrlW;"AfDSuO:_o;G-/uDXoDTtDJg2-NSHpu]`XKSp8
%>Ps+Ip-]DiI"o@UQcutf*'c(?q1Rq%3#YWpQ1OcJ-(eL;h$ZTTXr(fIDtLCU$!Ui')tUS?>@6BP+H$iVO]#\'!DuUk)9cMl9RP\C
%V;NAJDACfKmU"2>l<KegCm8.Y#IK4IA"7*a9'oc3_]uL>n"Jh\GC*X?(RY2c]c<)F9/BM,2oT@0k(6+`+mk))*L0_6.23i67c`S-
%S4o(,7^S6+Z5#Jq$X9aZgdW%!V0!$5lYtcc_l=BPS\q0b\"FengpqtjgmTLUSl4j:i$"ug2BLko*T^>5s5(:XBFl46oel+dcr<#F
%LKZ=LUDHha^#(Ef%J<"qU1sL(r6qea#b!Y/Ali"!`kpCh@"o_b%9+$31aJru%/?gMGCU7[n0-4E!d$8ln0>B/.?GgYNAO/p+]GmI
%&dRHHJqf%E0d80WH_esrlDQWO?]Gl`m$LRWQ9%2.U\gk7>=;O?a]<`"aOB#MSJkieN3;(QACl6CNUDnpBo,>.GsD&AAEf1Im-s8E
%RU%5"<K6VQlE'e!@"1!t`FDi'fnR0m'YBolR)'IZ9:_9U;PW&FTkWSR7bt@6!Q?kq*BkcLeON1^,4*5^NRtnsSuFroAo0qnYt;`'
%L1I:!+s#(t1XaU)11aU;(Id3_'N<e8VLd6pJD8eu4tL!mrY_5pAGQbVB!p-jj\5/O(R^>-$[TfXXGTU@o_cP0W^%*0h6"Fk5)q[^
%)BGRA8d7;^ac.PY_C*oV784eYm%*7KiLVIHXd_Db,MsCRML-8&<Nco[&Ya-`%kYD7V<GSelrLY(V;7u=A*6&%+9*(,K+^3?fgYjE
%lPfQFD^*k3koJL8Q02IF[.874XgI.UJDk:%7FlK84F!mi^ignD#NX(XOeNpqE8cEYf"e?9K,bTnG+&(Lk;HZ"\\'g4W?X,D]<7:F
%cSR)%PRkc/+2'YKrS,"9Rm\I5j#)3X><[VFJ</tb/f4e$<`'>Z?1knJ&<YBq6DEk?FYAOP(2=hNPEujb;1$"),IkE51sQE(AGtR%
%QONZ]*55D%K>!P#mP'YU;f=%WW!!M5'>H)kM\#`!;5_-cqM.Mq@HG(H"i-7Zra>ms,6Q@[+XGp8p27:j&D172RE,;C>TRdL#%`o_
%3$m.==$/J)[EZ%urS2a\7KXIrG_EYE690K,VSKme.T^dC/7=E#Dn`nK8g;IEru)J.\8-GOKiuHCFD]'<0;RAP,WV18'=c*qc*pLo
%pqGh(P^J1m"GC5R%q7J4(ff+5/D;[%InFWIIas<WB[>Qm\$\j32VIZ,?"0]"V$B#j*X>&5ZKP_$@M(HOjgAORDu5PEQWCJgWq`G9
%'Qh9Hie*su:QGk[cb-R^`;Jdn;r6:pfaI_SrL+#3FAR44)Ajg6^6e*Q2=6;'Q9b,?V9CK+oqT>/Z+4@lm5a0RdMLSmMkTDF3+I:=
%J%+QqnC5DgU2,*fR5+iZC>*W:/)pc1$L%&i>N)KuLi/dqpnZ8f*+iDYIA#A7h/,:--_nUQk9kAmRoGPI_l86O@40gRi#,gD=A4dj
%FjdlY]Lm:Dd2',_)1ZM=]+=VUAB^B\,4I'\%5^UsVKau0N$`HYMH:Lg+\I0=S;FOGoAO086+'tbEMu_BdD'Lb`#&XFIei3VV/OZY
%kk`KAYO7TM)>?"G_kbUbP.\\^6C*pmqUbf\#\?]i(65"V$I-Z"#LS1@o1eu9U)'$GES^3;r/S4B^s!&QQb`$.9>f\</jVdZf[u2R
%\@r"%QU(TV!ZmJi5p'S24QbO/HZo!Z9>IRfmb8oSoPL%#nQQshh%ePhH'on8mUBOUIL5,2s'03jph(q!hd":Vg6Xd1WA9gf_;cb7
%;l%H`?B=heRqWG'CHOIV/^#m&TOm/gUOBo&a**.b%1$*.C*%-719Q/OrCJ(O$eKONN[$e([-F%GTMRTheOY=MbWeo%#epd<=K.?(
%.h0)`mQeoaMcjYMQl"6/LhP>:e\:K/HD/t<m-FJk**r9%)^LA[.dRopC9lAC]Ll:ap"-]VpQcf'F8'bj^-+UF>4g8b6s?M+kr$U,
%6EfT(mH.cepd)1P+E4Kl8KA05nbZNBP[Cq"fJnon!R$7bjV-/`XmWLLK34WSGjU`_Lfd<-F.m3EO`FWtJu[8+Z)7NVBkfbOo^SKm
%ClgM!GL$/7AMkI-1OA8rFl\_E_A87pk_[B7!s[tB6IRWmNt:!UDI)Fb*!]qoGeQDBi!jRLI/$j4gZaSa,R]nB'=%"U>!TktDWd*P
%SM)n,989+D]jl%"L8ms+S9Q*Sfhed4k_kqj'n9([#S':;5?;Z?A"_VE$E/kpKW?BsgQAJN=+!EuK4V3:NEmr.JCMk30%]We<%;Mo
%']4Uh2u,0'#RNkP^`'f#8c$DF&?7O,J:"*S2D*cX`4?=o6%CapZ[k4'[/b=3*A/I5a%_)uT*b(P@pW.5pE-eq#B^d!Ph9$DXD_;F
%m>!d[V/*>)-6Ke9@pT1:$1=r4<LXH`XXcA&4LI),W*Dr#^rTFB(!Zs<:XZd%PPFZF;-EVO_mT;&8!TK7k7bV8/a>%o8E8ZZE"0+W
%pBZ9$9V\@kiM6G#H25iGOlYndj%^U*h'07N&2gh3a,pG/3@D5PWN?V=/$S2k2XN.>T$20Z4iU>?UP(6`$74e=L[B/29)@_hARQ&0
%_8Nt\6s!4K5;)ods0EX:VoI>OW9n@5-g\iC\50,c:g`lZ)U&lt%#*h_E6+S\H#(mX3TVC,Z\!.cnqE0.)qF^[!)NMTkdkW""^IIM
%fk[q.^UTZ7OhGpDI;CDdiW+2XaIuni!7COh,oP95`5XkfM9t!`LD-]QZS1m=&N_cb?R5<TCD:A_fo#kERaL<'g:3n*a\Vk"'F(OM
%NEE(%FGOqugO%tSCe#DL`^9jX/Fh%$;-`PdJk4_a/nMrTjmnEQ9$J.Aa:*hUk0GA6P.Z=@0-<@\cid&j]W(K"PQ!:GIe;qR$+-_U
%76@<c.jc:hqjKt?,[pu31gn9..Kh,&9--crAdlZJSZ9(a%I1!$(3u:S(aFXdlU!NUXlmjSfT:=/f9Trgd0m=U9/1l)0c)'cGeS1;
%!\7eFYm&N^d9\S)F^!(66"+mr<b#s"ielqE]pSUa0jKS/U#%0i=;3=!n[g8fIllFia$T2)02n*u`od$BSYmkB"6B&N^0PnaK4<jr
%Fgl$]J7574]D:*UkD3SV%)DCfPX8bNk-IF8D)g,"'D[u]rkkMrd!gq=2MbP-lA6"C+)_>U8>3[X$>@]rmuWN37?,Br]+"u6hju0u
%<d5sO*'peVPN!?WlT4"R)^A5F0qajN8BkjH)O(f7iCkZnluqciC*U6>k=ut=XU+!*G/^JuB5+C)YY&\s4Y=U@$I;O"WE)S>"A^WL
%[#9sR;;6&cb+3Z=%8kU\_[rD*Zgj@obHC,n,BdU\MQ6@`mg7X5Zt3)n:`_cAB&C\];dDOTLGsE9W!_0ik/eOc-2]T%C4WAOE>9<(
%"a?i%d#>-Ze"aGVHG%M"OE"2.(pRK]*%3_Lq#ZT[9=<,(Zb?U[FXT3aF?Lr602,H&(->@&Tl*G',iPG=!g>K!Pi-`ArTL\s>Te%&
%q?[s.=-`koBsu.:.%j)%6^!=ojR(/WiD/c$!Er?u)pkcI?K^XQ%qGB#PDB:*b-a)$;qW[i5!1bdo(k.]EA7S#K$j$i<4nttSmY8P
%GO6IfmLejh+sa48qqm*e*lu=(\)@;]<.B'DTJ-P9=UMl[He2*;@@4uGh6ZYdJW]T^!!i4mqF/K?ZhNlcqKcm:V<&4?iH-e3CS3Ai
%55kjo:g"Ksm7((u#jC9^S%#mse^CBh1#i-3>"`rd[5Q_R_:g&I9_%<Pp"gSjZqbA@$d)NN+kfo8+65ThSf7&%67d3G>GG.Y,Q,s@
%o)\%UTe8oDigU>.UX=A53O;]!;!$/Z6P4E(!#RK@l2lEmfcEGFl7YDgcCV&#C@FE2*3Dap=CC@Bh&(eIor/E8!C3V\MF!)^\OCsk
%FS,+GlDn)4SA)e#YAi7<8$Ej%=j\R:qWQYn)hE]a/oSF9M3*R<=L`J37*HN]hZLrn?Z)R+IKk=e'Wb-sMG@39QOJ%)`tJn^do5s%
%Z4@i37r+k<Kq<Gh2sDLmTX*BPl6YRK@USTCk3d$ET=Q)k77$IN2E73sSgl@u'jWi0P-O9hC.(`N?+49T;GosQ]RbBOl"GX)BnOF&
%2;(J4EYt]H.ho+Zh,=7k.-l3o'`j5>O7iYF>&d+/hs'*T;\<-,^Pt(YiQO\lZ]N6V)_,*X0S@;8jD.!:?@M4Bq;-;d@tlI<%BNko
%$au]\MK8km(eNrl&M35cFGI0d_,HX@.1^#WLE9Ns2M5"-r2eR($"&+/#H,FZ\1f[YUB#WhXc-?u0+<($Cg1mFqFXV-U#'hKlUcB"
%;oo4uMb$21-$WgOYHMV1C^;3o,JU$\W+*e)S'g8;b1S'7,:asMiB7OE&KC:rce+1$\FbAp-7[MeV:#0./@[;M9os8E4Wam"=D19h
%3Ur3TNDWMXP+sf>hDjJp!rLAr4_Y>eL04.#'g:01`0DDLT>r%km>$Jg-G%*9p]S\!GOc^SZ$:Q=g[M7),9Dk&BIMd&LH&<G1)h%(
%iIW=:q-9+O&#G%,3.tmMpTS,e6k9N,qVjG,hb!,/fY%U'&q\YQ\=8\GWFWB!E$dHnJL'13?XSP)@s9;U%5,A![2>bXY65E!HXr4f
%=h;X0b,PfB$Be:eBfY^\Ma/%\(93d)$_><&(Vch3+8QN28>nAjB;u):P:2%Dqtgh?]@"J+4U+8_`tO8?-b:O-RSlC-mRl&Wq[tjO
%P'b9r[?CHjaD6hmhnr;TKl]=K*pIssYsu\Ro]`!)6qc5E)P3K%Q;';/aXo5fO=W8?<'(0/IC3bW&:0Kr^t-/kQpm:lqRO#P=9(5"
%nJ!mSrH(/rXPQZfm@+neqKMsamQ^VY@EE-21tlcj9^Y>EO;C(1Mo!Q_Q\jP/[FX;,<^!e@r\U7`3*S#`$NNt,[JSMT(!P@ho(7$6
%p^BV`[t#Qf.8j^f%@m9E4,`%IWfN_,M2pu![4qtE"[cuPQ.R9jE>,9uZG\OhmWTbOZ\X'd$>2SZma\k7p&k@3m+CC,Ys(L_bNnD5
%Z&s(-6<esi,@/7(bsb^8ja/*`:]tO39o:,r-*6*H]PKA(j,(ehA]Odn&m9#T85CN2[,&h&25srkA\BI,]S?lS*ESL!YP3CmHZ(JY
%fr\E)%kH&j_4ar3GM`@pH6PUJOr]*MqMnnWf*$HnKF#g3f&JZb%04p.H\A]N;J<8q]XL)*`\j@E1f>U]HBdLO]0]1>Psr0tWn8mX
%BKU-\PVAF$ooL#]!9rs2=5NJm#m0?0#[Ma?J#B8hP8[_2Nr\LAOk["U8&14R*B8F1O:5lhagR5=GhE#NN.YbsVhUK)k8VD$-<t/=
%,Ka,f#C9Ddh;oU5oqS\H[H^!Ycc6#'[X=:H6t;sg9/TK?FS+'YB32%nDX0o@@=[rY=kTG=7nt/NU,[33hSbI`AHiifA2+,>\qg8)
%0edo!d_Mr$qW1p,*2?1K=\+)P#4*T39UsjLW[MrFpVZ:=el=&NQouZ1Y^UTO"HQE)U5i-Ao*QF]Tu`pJ'L"OnQ9*9kl?hecRo0TA
%q+Ieb$GEF8Whd_NX6U^rbPb%^S_*J&V4b)oOjY\3_fmnl[.FSM"%6.`[4p^%T(ofN&4(5$'a:7:`H6g^<^\h_k2aaj[^*:1R>L<p
%fZ<%7iQ2Gf%7YfH9md@;&CS]3P'Y;CB(4oG^8TXl4YCK@YP^]`Tn)/!0)_a]UPWR]a0gU7hF(Vgch"_jb)P'+T5uq)i`X@G\RfUX
%1kY*3<4oki'@0C?7iTb#e7:hb?Xe;63,#:A\,A$lA(UPhYeKr[_">n0e1mS5Ysl/OeaJ4nEMPXa#[ao;<0C`od['Ss3(4>I,@L^s
%9(kcbqasp+I,JRPl4ndi]p%j+W@a+aQ'$&-=qsa7V\UKZ&+,+K\6Hu,Ra&*9+6<jd*62?I.mYq:3b;ZIbOEgD$57saE&4WF%oJj0
%1r+;.6"4JT`R`Ml&J,b7Qk?q\b[9="hQf9fRQ(GCMl>TRm*MbkPI.EG=L*+o'"Z[A9EK3`W7&&)0!qi0&9m!ge;S1(TuB[4Ho**8
%R#l2hg2OtTC!K&*:?Jn[:u<#S=dd[4jQ6?j+.;#Ip8+$4eRT*?)aRX2BJe3)Bt;;;O*;Lb\/]rAiukD#q8VIJ+45EG>U-[3X\ZDG
%l>A5i[i-[t@!i(``=G^K^Lp-L;Hk-Ap?aL*;`%8&*GR?,@.-E!%GFAJ[@#*i)sc`e&F6'sUWf8b%G=8\g+sR"?Mt+5MdK(^qr>NB
%""^W*KAtD?'VWSqM]JJ[CS7h;ksBl$Y,rDQEkA^:;6-<T1S:G0b:;j%4eWed^_AX&"V4s063-73h#fm8]#(sM(`n4n]*ALOETHkp
%Oute%?b_aaP9$jiKt];g_HLcPDadqBNNDrE0:mBk[ZYR=X9ZJAR;E@3mrZH&I-Z:&l47g>g/anNiuaZl56c3qr@sgAXr=UAfY`%T
%#[U)`bMSc9I;0Tr-2k3+1pl!<%0<@;hdcGtQhHDjU+SW"^l^*)FZ/$!ZTT%<gH1uJX^n3Wpq:3#b;tKqj4UcQEErEemlt*JJ9+:#
%V[EmXDhlM1s7.'Lp%:Uc4CDRi.%opr-7Rp#.]]?EhH!+H(m(!;ecXZI:P/j^9A?j:\o8t,d[s,Jh\QDdf?gMV)qqQ^T?un^F=:l)
%-QbnDiF9<NK?m]r2C.<fWX!l'm[fLuP"<ij4]g*.qi3PY1%!p(d"^1s9s/Kr),S5O.O1N>ZV+j60Q@OdWZMEJ4ec)0%pn@u3p"`U
%m4^cg3eL:?8$m\SKZQ!>(+dmC36$<n*(<ps\&Idmc2.5]Q>66V(iOmdSp+ld@n?>YL<L0h8MDY_m;H!$I[38Q?Gb2\WLJCbk./4'
%9c,*4b#G@DKY+-l$@:&R(qHbaM"+R;\/]!bWY4%7!D7)):bo7*HINQlaCDZ.3GmVGmC):^e8V@tVKj4&\_A1<^\^f%RWSo3.rA=_
%Q6Z&XW2#4R:2e,n;!g)"E3<T6]U.R;p:-e`mMq\Q<*Q(Z[Zt-u+>J@0ocJXbk]ogQ!0,*<J=P+FL?HlGUSq$Hl(Tk13UGBi+%@jP
%?1RD+k@*Qd[!)6:%M`@J?g`elIY)OZ8_Q@3AEY0/-#$[2jN@&og!^uWgiTZW)nGbO,\Y0T%AI/12KZ)B=,2"aYL7+'IrVm^h,ijo
%$j/1+WYrZ7-#V3.?bi^`0V'+D-m[;$$6+ND#_E@S,jjGa%1NgEAefrL<VUfD4sW();i7i.#ChI)OgI7s]W+AU+Q"mnle!!9ekIma
%gj1jX<'h`r7Hhk@A&rB\%Lrp,68h=9dR$8DHUr#miaXj7?rK0s35(97K<`seOBWe=FR&P@?jZM1.IQEW[3r/5lM!oi5V1Oskq$f[
%QFu-$G4]kc^NS5VQWfMD`Zs(.&7TAU5='rtcsV[b8<ofBDNULo"A-$gSRTr?5;aZ#pS1&5!28N(>^J@W8![faU\[FkP9:a%k[[eJ
%f[7K&<q:p4LuWK[_qL?&5sjIge.22W.OMWYeb'G@B3_&#c^PK>l&_PQLoKWpfK8U?.3VAnN.JROJ`GE&'hWV>Y6KFD&j5iak2u?g
%9+=b`hoVLT?aRjWe,+%T`;#kX?tRUf<=3i$1g6u]cTI%i"+jd=m=>Kf8p1<Fl-0'IHA3%aLG@=_M5uS=dABD)d0++Ekb^O<<G_1\
%0Z.Q7`6:,B37(0a,JYiD1'?5ug5%Wo]"MlD7QRmnIdk1Q>2H2ZeF_OWV!K#`ldLKoN@^Q7Y0Z'TB%a8cJT$c1RTJ>)&-'T;(ea*&
%>ltlrl]+GQ=&+gtSDu0f2W13#_[iq6]KP*U^'b#Hn0"%X&=DqWs7UQ8qL<"_B)RIsOrk0[<nA5)[e11O$_jD&/URfh!N$aq$a2LE
%%@)_u;'bb,*dAn$M/'G7R1$rtiI96/j9feA![T$;l/-61R&3JUfF_?VP99kmqWoEnmRIrl^#&m>>YfU06M@3KEdED^\jnteTuZu3
%ZXoXq[+bAi&.8*NH(DgQ+gmq2#iIYq=RPTNNB^&c8&;VG<Ks%ciiX[!F8[<:bJ'V.!p'dbj]"@Ck$O-f"02EsS!N#3Yr83%*"qI+
%ThWW9Dn9"O4c1H%ntq;$A#$cK4%<i3aH$Vi;7E84\@DS0!ce-Ma*^ofJ@J(*`^6M\.GmPZ>>t8\L\_O6'J:/=VV2:Rc$GnN:E+"(
%eWtR1rFd]KGXS@]iCla>`n1#H#]=_\Y?%,R1^j"2-IO84Hq!k?4oGXN\`g]5S6Vtf5KmII%dB*h^>,iRC"\+Q3;tVM*K?nPP]"J(
%'O8Ce8`A"X$2+MDg"N<[m](ol>;R:A#W%%MDM:,D7iEE)4_i&i1lHH>ip*g@+WnNW$'L1p3Z<LJR7#Y$7M_hVCrm8ala9%#'`76`
%+U#4q3YofsK<.QJJKrsoK3g>Je%/Sg-($<^H(p#P#(1!W)gY\ubi@6:';@_E4GRlp4KB>kg1"l`G5N^<)/:.0kPC(/B_OapI7uja
%/LZjm3FS-ZdIT$/onU9eUs(c.B^QI]-f"@V&13<V;oRXamj60^&)T7LL[,/o\GEB5#)uBo#SC<`jZh)j_mbD5Ti)"#BjH5VMqUZ:
%#a%(Ui))Dj6OdT`,HfUV*Rm)2Lb"^B,=D/^EuV@FC]XZBLTX5LPKC8$[)+u_iF@X03(TOURECHl<Nj962h:?3>&bkM2=6dGYouX3
%2SfH.ai*/H8@'?9K@r0)nP#AV/Ab*>TrL6.C%suc'q=aU8aT\FM#"VKT2L`T&=2:ufp.rr5G.dJ^K0LWIY+pBq!E%0Mqq;(8thVS
%(#h<"oSaMP=UutdV8bKU'Gd2V1[tc!,2_S0PQ1868RZ3eX3,`R\tpZ?@;/+`(-Sf^6a/(=>"!2WNu_FV0.J=+%Ym<V/os_cEUo_S
%LnCU@!Kc;[GGpW>BY%K.Ds7;\]0"^X8g$!8S9,J1G`R1;-9P,`i^Qd8:&?SO"2e&RcO0sQ]a)gc!.QE[Y9Rd;9ds9k7%u2$&ld-t
%419#=0ESjZUfKkiiiNS&-,*\b1Ou<B?)spJL[CiB)Q8-7Q2^BkrH.-6^>4Os1I$gmhGpHWgU34oc3uM9Gf"jbWjA@]FTXJ:jJ,Hq
%2QA8`S14mZ2)hXVY&pm$\emIHDaRt8odM):[]XofW7^Wc=Z)/Kdj$_H84tiE_jZjHIFrj'i]:!HCCoo+OSqukEX`-+C<6V\>TUrF
%H(p0sTA/luiF%:;=c1057XL(s='E[;aIHN\@D;+uTP#h>.EXb/oCKA+rRN%GSC]15T-m'`eSGD"@-&=k"B.q<lt1m!?%sk^<7K."
%?TI'(D71i+*OVd7[AeAl[iXr&5#S=&2-rB]HA6dPZm?o+dgMXie;``/E@"cfGnr$`+N'9R9VA939*rr)MJjNOA5QS&b^A_R$a]%7
%@aa*d1^\<&7kU'"C-27Qn02jFI]?:Eq=#`)WZ#/'H>#nD)[M+E(JA_!7`)6:F2$<&&2K^,_77VPBmE<JJt[uep6M?$kAD"!Z`\[<
%-Q($!QiFu)X5<+*m/V/$b6Ji/c64/_o2U,<4iB;>MV-NO8c!*jNfaf^]s//4:KO`lLc2](7R3SAKQ%:8WUOtkFJ(dj]r=M_)TLJQ
%l'f/gK,h>2"@h:`S2.],Ufb%>dKQ/5QT\YrcqD?$7RfOR)sY;[Uc>fTHWac/mk9r0Ujta:\`H=YAsD7jn-(.XJ&bUA]+D[OU!tF9
%aq?I\Z$I&k!=!SJ4Y<gBUUVX1!f,i.dTZS!/;P>0i-R6UZt`mF>PW>W[Y=YB@dqj)c*jZ6U]N9Grlu=UPn[Y"4Kcan!tl:#L#W*,
%+GT^a]@I6UKmJh+Tm==GPbUH<rR5':)I5(>dX)a-KJaARFq5IqCKsr-!s2s*D21#<NRe]l6q5%n9-I=<$e+2-kLk@[p&Mm.O]qmB
%IW`G6$<:Bq$Y.Cp]@T40X8XIhYdSMGAS.$lW+a9TQ?ZL0ZCGa;RT_0dYuH4Pl_Yd1?tP8lL,#&9$7hG;(pZ]N7S.h/9`IoS%QII^
%YH]3E_dYiRD;th"S+I/LQh8LU[Iqp?9b$#`7jO"ZRTg/2MXjf4V_h13X65m_1boE2rhs$3QMDUurR_(3-ND]Y%8Jeqp_QtQ_'6XW
%JasW,IobSoIP&6X?*%9s&5m!86inriR%qUq#T+o].=itMl"Teq(,#^^PnT*GgAu49;,[r*4@Y8,JhcSuh3uXfR`*Ol<7C<&dq]:M
%-nLd,k0c=FZ'Gmdes&>!IJCu)PGu3;:q>7.DU2[ScNHZK[_X*R"%n)%l?VP.0a+I[2/KD)3"@rAH$<.q,QpnhP8WFi"<-R<C<-h!
%)e+qQFuAQ;@pN#&bGPOIg@OF14X&b+Z4<k`@l-H(!YrIt\7%R3KHJMm=(gf3XQiS^]:ot]fUnCPrK$PJXH1t3gJh(%Y,`990OICa
%"n#,]_+;.+<T,CJ?)7q.S$lUgj3TRs=:%.Jp6$%FHig"u\djV;??_o`NSEQ@c0>&p+`:n^dI.eRWR7.n@da0PGJ]Mp=u#HS*-=c[
%SYFJ(PFY;6NE>HV5a.HKR'U3GU?qmP'&F[/*XA(97M$[qWG=7u6gS5%Yo=E=OBo'P!GfBR8jP6$^:H`$Yf+$Md225[3%:J?/mrMm
%V`&+%Pf<5`H_("Ap3uC']d($J'3MnNP$eFRNqa9j"1L:5<E_pB#Aia9S@mKc::S&b$ju5&!-gCp"PP9A*'f19[fC8e)]^"o$+P.J
%\ZW'4:CJ^G1O`S]&u_Y"b`*)LY?upA?$QdlE:Pu+iD\K.e"'J#n@;)Pr6ICo7i,j^B!M$X,G]q;n$g'r;*kI*3u5_soEAPsr-3[=
%mR.]mODhE4"c<MlFtea>:q`?sIe]]B6=Xpqg8+N?"j=f.P-M5(+OAm[9Z!FOD?L?a#i:5i91/ab<M/Lm$N]<[XK?>h!("RA5rHkk
%LA,3NMC6D@k8pCDUt=3$GJXf_c'$2Q)0CP9*ZTZuHZ.<#r;,5?/Ga]%V[2@9(e_WY[EkI-3P=)>T!S,pB[4kuDrse>#"tX9Jcf%%
%'K:'>m,dKl,nqVj(?5oP]F+X9$h1Rsq[,]k;Tm[aT/WH'qT8@\;5aF6EBg!qUOs+$LOr8rd%8]:39`'KP1`hCR%rX=i)5;dhZ<_L
%;/(3N&+@NQSX`1s<e._p!JU7a4r6AOrC!NUPSZ_mYLbL)@;)PH*!Xm+q>c`GL&-su,j,`^M:PDarL-I.e`>#tf,d+Z'%kh@\(p!T
%$P&(^Bt5;:%2g4e!OX;\%j7T[-Am)^\`-?Sn9".3hEFdMR$6uOjq1$DocLC(8$c7VSNJ8RVuH'sS'`p\/UF.W]4Z!#oeu[hY\Y/e
%E`.%+AdSQl&NfgQQ'2:V*i]%mS,E?*=Y2sD?"3r5CRDGL`(.X1-QFV<qS&r(9%"`$SFkZa2+=)b4jUO_/ece@YdC!u+7i%Ac+YgY
%V;s3cj0f'%"Xurg8Q99ePE..I%"TDNHSQr8S=i82"G`_<<be+BjY(Woi(?gtG8aeaQTnAI.D'RhjDF/0dCF"C,RL.K%]_!"J0_O!
%@*?[,Z8o$<*Mo`/ED>X-N8Z__$-\"tL<.H'oi>If*;;b8c^g-B!jP]P/&j_*fpAEa\t0Khb0Mkj#^mIVLJP[8C&b+DnjnDcCM;%u
%TF9FeW(](qe+[7X$o^pjWZLdr^)\a3AUfn+V-/[U9sUXVTY&!K>PiL'VcG&(7aK2IGC^mc$j=,pq+*S,Nt(?@b0^=*5!0`97fbB2
%*\0P"T&Cn6JS2gg9\tSrNab9f8O!M\.B*p<:S-`S$[C[7*.G=T'CM>ti\!e@[qs&656,UiBS2Inhp)bboLL#3b=3b]cFuc$'kKl;
%j#[CQ7OLt"_Rf+M;&+Nu<]?nF;i49,&?YpDC0DOpUF%(\JrTO.OC`R5WZE<A=F275>tAaAO>F\uUP].np?b.MY7Ii6fkA04YP:N/
%@eMK<CYie!Bj/C*]RTTug9^'43j%5.?=ks7oC,p3["$<D5FN&ZV"cC0IIH`.cl^%5UTNW>16<'P))#$#9Z_\PSn:KVSI"<A/G+0)
%38jfTDE?"or8ZQsqj^R9Obfo;`GJ.8lh:c;4[?Lr/CYrae1s<$5U>Htr9dVr08VHXAB6iDbT##$gB4sj62R#Uk@C>1,AU[Rp<4:l
%nKUG#H:\ZJDSTt#:[knW!124@YrJ_o!`,RV'I<%gO"K!1eEG*hC,U5<1h2B&^e^>'nl6uiX[:%8V$]&IcA>o87(=BSA5^ZlG)b.a
%q&3t0bG-5#;DQS'od,UAp?'7A"XU7rbrJ1+&Ku]RN!ZKQ.N(G*q\%*uPZ:+F^+IiXMr#`@=^k`>Ko%4$5@>`8)SNH3mK&t9!if4r
%dP=$4FtH[Mk)j8TGC`"I^-UYd#.=\9^WJ:PDnErJ[^_W,ZIuZSCu1t^[7,3-/%eAQpHk,Nl8VC`V\uC(O@BgdQnrlHG)IPfWHh=O
%#JZe\U"UU,6hG?)8A_-Q[%t'Pd'e;=D5u!;7S](j->`M5ZQY<YVZo35^[%1K-L9;KCi&i=+_\D[<1eCcYaa>ZUOFF2XhE^Pbk-V!
%26&tqT;J=PTlYi'0ta"[n&KAEob!tjHTmL'Se&uI$+A`)e2`4;XE$:r(W\=^kT;V)s$:4K.a"juJdi-ci%ZghD[kA5nR[Uq_-A5T
%I#rpLDMTDu9+%ed3a\Y3<u2(@p_M7q\jBCkQbS%g2c@G"8(m$4W$dr"A$<gC^^r<c;0495$\`,?BiMN"]C=!,M@HsO;0U1N*ari+
%6c?,q.]caj%V4fDhJZkF<64ebNt]VIkjTYj0!+RUS&SHSh+-RUIkG&-,j&kocncEbOdK:W$OPg8R?kk>3Z8Qfl=tF7#U*\9N^m69
%UCAq,4JIjj-=A0aV=#_pM@q%d4I9\X&F2>@m2Dg0'TRg""5s(m0B$2e04:\r<gppS"BAUD4G:_o#Uti*;Gh'T7<lmjSN?32M#Y:M
%=Tg1Jkd-I4KVsAni(bi,IDt+)$$qsAVJBAU"e8$IDMd-R;,S#4"75T'Cm.rBe*J)"o<p4kabtJ`N55iKTjQ>C['@*IC\Q]#[E''b
%/DV?6(558"CV&kZ1mLdWl9-`n3[.fjOuXc"LS&nE<!L\bnZG3o]*pjjD"!ps(+i@^lJXV#?V2"=;7-Db+4&GY!;tq-ieYdnBq9;\
%4MK#)L7dV\PVEL2jEnN-n>1OJ_FGj:\LN]!3-'%j\$4]TJIHIG;usf$jlsLfe>_S-ZLc-7pA\mi$uM2_\H?>]@#7CCBgWLQ]u$t<
%"KH22*tlh+52O(H;6LQ,OBV8.%G13Nh(1;>O:upf3hpnMDa<&Vd_0Pli[#S$:<oE>@m_XO,a,>bW=MD6U5jXRqJ#Z>b[kAi1Q-ZE
%]EGe^a5>;Pm&B"1q3B5un]UPKcJ>$A&&YjVY[M"K#(p$W!nf^J%9L(p=DlY!#Xle%8W6V-)gRMa929bBB\oP[7J>4dTDE?fp)#.)
%0jAWjSKNIsAe$,>)Xh*kNj?[*,m^hKN?A3^#k!<Gr#[<M-"3uH&TInIk"XH>XY^q(p&<C`g#9DiW-$!*GW1ctX>#X[iN&g1e4!Z:
%,@Y`iAZ.A;fL]Y(Soj;V3\B'2]1,R@<b+!PSc>ihm:fM&f:7TAQ;kT&cP(I*\#u(JJYQ-I(e]s;O*ARs&A8F1-nm;YpPF(b?F-]t
%;PFQA[C6A#GN.JrMIh0-m]537(o4ZQLDJHDJXZZl':J"1K9U%.#f.uC37(HmNj)[]!9N>VmSR_u5NqBuiAp[c*\X0iIXkMMMS[=9
%!6/>:nr+A@q?^(dKWG1%kUg?/=S_<L&S0cOTId652#YL4QVkGdNos#;:'<5]V?NJo/Lkk]ecSD$-;3ntV:p/\Y!%61R1a998>?l;
%F(h24[WJjS&eaQ%dGdK&:$2N$.abh`+@sHZX&8D/0Q"j_&_+MD%1/%rVY1M=U]AfG9D@=[2kBtoK8cn[Ni15$p>OLacH2-Ors5+W
%LF-mUP'7&O:aF>D7X%gJ=F]+7r(D/=[D!ZWT";2*e[9KS\.Qm=fPa$'k@(W2b<a`[mp^&scCCr4=N:eu"hkc!W*gi0I-#hSc89fb
%6uZgi3)(:`OMNXB`(p,f#:Q`]i9+;Z-n^dUm$=^Vi4CQ]D9X`TMgIL<iu-o$0<Qad>]j[Vm25'io^p'$Z'bN0o*l$Fb%q:i6,ie5
%>%9+M(oJ!)5[Dl4-,?[ZB<FfG>"pqjW$j!m!=$XVW`>6rhrCsr"Gjq^WMG1\f%4Yf[*MZ&W^2pb-$diu'4;]5O2-0UJ&7Q9#\s6e
%ZQIeTXm%gd1&!k"KaqF:M2KS,iE66'@tc*nKFKZ'ip!-,gEOF>6WnqkTVY\NUV:@c9`tG6C2f)"E[E1``k6n30iO`p:nKG-jZBpg
%6cMt]Dp\@RcA>!LhL0X4OtWt_70^OF4q#TX0gbir`VZi*0D?;4dH-A9aWU98L.q7hkF<Mu8mq/^A4A.S=rI:DE\T[5P@5WR7&@e:
%p=B3,H;]OWUrTnQ\_+nJ!R)Rc?mj@LMd1bk:ZZ0nIsVO]C&sEn&:hor3h/iX8)H0e9d1k7e[km7Xi3oE5F55.Y?X<%0dBFlG?bMg
%KWaSr10c3VA"6*'=I/ibO5?Uto[dW.m#bHXj9[)?J5k)%F>]>lWHn:^Ag29qq5s\dAAVs-p=6Y"a5[0e*jN#FE^@ZHMG2YXE2#S.
%#@)6>C&gj;#+"gd`C[-9&5%9=?sV@"`+kLd&^:%c&=]A:;u#S%P(K0T>CB%W\ig-rT\6n,be&Nm']_!YI3fgn3HJW9p\WA,m92:8
%$#3=Qe-,>)A7'*>D5mVs[7)jN6UYX7`iD-6.MY`%N1Mp,p=+Tc[F3pQ*MXdPe8NqHL.CG>]g`_Sq*GL+]?,MfKY.+Zoph)Wr>6'e
%<TUE<<qc0t3JG(gWj*(a>4%_.dI=2_(Wk)[N^!2/cVV9E'm0gmiZ$aOFRZ2>VRRrd!!&)9S\(V!j&arcoHjTn<9`R>B32f4W4cEQ
%KIr8FY!XZ.(b+k&"d/XuDa>=R"'OthHVX9<8+j==@WtN(7>d77*78ehD=F9kK(j21]u$?Sr:-CT;3HOrhY"%K?H0?p*!\67h!D-K
%<f_*5n))3N,qL,-O!s,iMUPSE/Ki2n;n(:qPk1qf/V\u#UHa;-T>C7FAK'*CB46<`6sUkJ:emkNpNKUQ*'lG'eS2f.I=RTsXC3_J
%CGB#?I][BSC`,<aMDgYV47_#c1k:%cX]3hFL8*PUa[%:m%kdOW\i^ZgA_m+9q[B9"0JtmMN;eoFC:TuHRnXFtOtpX\A?`>,S^T0h
%YH=6JG"_3;BVkI)NT\ee>O#n:MQX(r()TkI_]9,i8W:dV#-mc'C/@U'_'i-pM*LCTe*1@%G,.B[FoCC7dJi.a$)jDpfQ:<$S")X/
%O#bZ;2V.MS*f$dhm^0D3Ju=RG6B,b>`[TE9Y$Ml]&LVtG#ScrCFm5QRhr9Lc'\lj`H[:mmfG,lMKW[7k7QgO\c,JbrLU.sN[L4F"
%=lF58Tc*`";pJbM2T,Od'FnYcB!Mfhi911uamYnRI:\.iDWhN$A08j,n?ZbmoP#``ln)*sYo>3sUt:FUAPKdc^9[Wr/hTIXQpUIO
%Hr/L@DEI">MqI"VNV8bKHHX%QrOkoo;=>0$P3:fC![m^eU<GFD),+HX^<9NN+[ijahTp"Vc:O9)D).=<jC_S;RqJXB_Z&'"4SBlb
%SE[f2s&a_]VaGPge?^i=rD%QRVqEf[bCTe8p)9*\`/N?>o0P:lI&=)UjNDU(#JJ,G0'#7Q9ci<>3$e4(&;!)mNU'_o58DLpZI/N,
%7-GNferFHar*753-2O+321,Eo['q["PDBC1`M.*.J7%W'$U.MOH!&kq2CM:b*NU0W"=8Dib!<Ggj7eL31qeII8H#+b$fq;>osK"A
%XL_]OOtA6kS];gHOn?G]n*Hqco+L^njMj@</sKpCGIhptH2(ZU4;9DYNpq1\[AB>&6+'Pb"^fh<884Vb6g34Fm)QuE24MQ^ed#cp
%c;";=]brTs\bui:#Pg51ieRa,[qe34Y^Mb+Kt'O5>"T.#<0#t'FbD$ejq@qaj1Mu54%)Q8dG==t3+a:q7kd*+ph.Ku/q^CYfR3Q8
%5X0Gr<jbUIs2S(<frq$<:(t.1Ykg5FZ9L.lblZf%6Ac$[=F,L5IXq9_0MeODR.1!tjWZ)4JE?URp/qQ15^+7!VP.LIq)B$pJWdi<
%^M5Lk-g4BC?,fY#NN`;JYN(N09R+YVGtW$MZ1\Z/0C;X`2]^N;7][)drA(nFF@X#$G&^&\N!k`m2k/=iGk@707CiuZmZU_pgsYYK
%R+JN'OQ^]B*sO#rbW=@F+<!"-*1#((-:ujV?2tbaoKrHsO1m]8mNW%4M[WGXrKYJ;@l:u^8q)Uk\_%g?%RoeZ%gdP=8XY>iQF)U4
%L:fATYZG:cDR7D&d3nQe6*.G[Ym:YYMgQhWJ5>T9&=,[-7[GCE+iI>?ccMH:rsJ(g4("c['$>.cXKKOND$f>_o1GEI:aDHD>X:;6
%]9GE$gejQhZGO]6n=]c/(1?9bGT(s1!R;62YHT/Of8B]>ZA@Nm9$c`s[Coo+j6)I!,`Uao]=7*3aDuq.S1V:N74`CQIV4+48'eU?
%6n=#<LIe-!^Z_IiBa,qQSt&D>GXt3]Aggf%6V9Eki\iDCc,nW=pS7-^7abak8s\?ZT)a!HrahPnp#B4?7sgQ6eTZr&c_1+XY-5sY
%HD,]\^9O[I1R_u9T.'-ffA#A'LUE4@h2'r7^3_nn_ojM#aA+qA7,dQ-"G4+U5s7>eNLQ:XSsU49XESC0,9CcHrJ[^Ca4S]2:aJ6B
%>$`]"`q%kLR&hCL<-0[U]J/4)X;kPn$2P.amd?_,KDk,N/f!04^H/"`eD@`123nMUdRFA#k[ppCX%8j2E\%^q2;H;>X@lq>q3d2%
%n!7!g*b`s`k\g!=M<nrs?c6>fR]hlN=j$EnRZ6'A;hj1Cf2'dCf%ddj:&('+oYZ#'4N.n:dTHWFA,T"`7PJ?b4L(SkeJr)RTC=Jl
%2s8O%OaX2<BICG$,:p:2eU[s'eSkV+NWgB?mL?B0`=eTs:$^hK")JVD,giYC[ZohDGF"%3HrZmdE3_XW[0&u5dd^A4J+0T*\YB$<
%*`u\#naPk9"9jOdZ,dB\gH(\`oJ25ij<sh<jAKuSD7fUWdI:bk.SRa,rP9i.;j@GE'Dn\u\8/U5C@0R1f.i1HccY]_kGG*pX,\"]
%qtq`G&^.TGYLlkAW]u8Fa08VY_Q43NEc>al<Ho0!VDG(J^/!@91.2i4D+S!jM_e8>:kf!L1cman[`^N;BCUFt8eEr4DD3:R$:9Jr
%]ZSS6-n59a8gtbGom(KjqXJ\<eiF[1M)AnfL#Xn,kL(sG+u@bk1\_#R16nq9#LqA!.G-6<-.sqI5dcN,n0p93^R/S@Gka,q4[JN@
%Wd1dI]5C:K%NFt\@800nb$>FT7uS:\Bi:u`-T1Zc9GZ%)oel?@@]4VNjo/ILc1#2K+97).RL<3iU^;4#V*N6c(5S7TWI%d)S*dZ!
%>iBF8b#PET!hsNR-<>+b*XBu&jh`UbLRb@=nA$MhXMnnSF$<c^@VE#H[g[N=,stkt=iASkQ)($jf[D%io:XI6Z);1tiC$^:Ck+m_
%93CN7Es!&!I.jjf-5)GerZoZZ!1BE\!mOY-`J,g)!*F(PSZ1@#R;M0%N-r<Rd3H(tZ4fY#Ff`2JXk!tOpR&'(X$F6f]jjUO;Z(<T
%?^8.sR/G-3A\1SE@NU!\kHVMjb<;]>=9CS"\Z[cMnf2tQ]X]gM.k-dXf6(6fjsl^ZX0g*1UW0s=3W7Z1#&-^MVJf%A8Q+>S3(Vkp
%)B3J*__#n^Rj:jf-0D$^/h?$Igp6n]rN5\9mF^"noe.rLps<&&QflMu)AMf%5<7K=CAI;)!sb)1fR<#KUis=Qn1/]m(`E"ERkmeX
%X=O_,0DkEIe_*BmoJfOPffg'C[?X=N\$CJ6BZ1tLjleV)pR&o%fYoBg'HGrqRd[N'dK6RsKIr>jioLc6S.q@O!h!&g]8Ea/&g>dj
%3U%NeUNM'UT5:E_'f&_8Op(\.q^$CXQ.;!^jNK;JGRg*`9':HL39/42ibP@50Gg8;#LWh-[Q7ZZkU%m?5e(qD$VM#Tlh)0mM"d/e
%M<?*'\qt4CYQ\=_q.>u<#Ze^Er)f$8gY#NQ6\6eM]fq3+E;u*5rH*'N/Il./\^k7U;S"1*7P?[-HdKH,K^YN<$VH7U]Y3P?Y(#4$
%+_`gR"<k\Jg`612R=D_[=MVRGNem6k2(u_+3obEHV)3ekKt<ntaje3WQjR>8=8PA=Ts10J:oq8364G(SZ[QtdmQM*@G!4jRNh6,-
%p1<2`@!f<6_RF"[^Z(kd[`';pYn&O![5_<M#;p4<H66$LD<PkH5/T2'SjfV](0O8j6`^h/lL+8D]3/&U/M5f"!R^c/6A<Yp3Ft,k
%IWsA8',P26q)RJ\%)U]32J:\&q@+#pU;D^kYeQL?]0;4Q\6FUO^ruiI(IB]I$?%I9DC`,O<T8jt=#]n3Th.nH-(:l:iH1t*daAN7
%T1+7V/\+Ui:bu"#Tg)m3b1$m@A?j*3Es`tE.W7W,fCZtU*h%%#gZR/\@(GLK2Eoc8,tZaA"eL>d+HO%3/dDROSX"PPS#=0!eBRKF
%Wd2%Z2V%+Sr9h)%obs/B*,^H]\rU_,oSb?$H`5Kt2l1Y;6Rf9;Bmod-Md@?36Gh2[E;T,N[_nb1X,#J3Gjb!l[\gVIY%&?(f;J9!
%<rdMrk2"VFfpbZDTQ`2erN;G.SE#@H7gMQSC[M#hQ`=Nk_$uQgS#YZRmg^Q4O']hkD<6:Fcg'uQ[ni%HUX\0MLpH\$O7l2$P#9h`
%Af?DZP%<h/:[[`C:k#d1!\d+I_P,>dg.jD&;Op3A<1&/_em0@Jd@X^:J!Ek%-#>."P0^TI`9Hs'lAF2;Br^J'6)XW.@]dC7_Cb.r
%nM<p,USs&rjn>H4U"%%-U$j?)BZ]=C1>ko7GC:$?0>m1hWnJ71geMe!=F#p8[8ko#B"A:3Im##5s"rYa7ir6AR(C),S;P^69*L81
%<IcHE;!T0X`XYfM(s.`(3J4NmC<PYL.Y/9J4gdZ6YGoI1j*pgb_aHJ[n8Vc:,>?dkcO[D2-ueOYo;/0%/N=LO/^r$nR5L;u%S[sY
%r.4;5eF:Js'dWWP-"ed%b7(X"K=6\%Ceo7gVB0e-FR@YEMn5irhZ+QFj[6C76m\6?aM5&:h9Z]?n_T(=j5H)5:D]1`RHe[orp<^n
%X=.oQ;d9V[edtq<DWNVqZX_^'r,P7\D1fnMYKN,&G1$6PEFj6KP-2]^ST!0JAT<f:,BiQK@S9D"&Bhq4k<&@WT,RY4f!)cEl:r<=
%lW(K1'q.gomVtge/M_dO5M(&WU%R$PAO8VR7<V[*-3p0,80EGDYI]]-;!lsqj+bcEZ#'1(D#3u.m']qOr6_d_j$((9J%@M/!+hb'
%`9.j`fCQ?QG'^\uCMT9Qo"&mEER>$@BA.Z'm&e/qDZ^3:/JM"K3JLJjs1S"G:1D%m&4I;dlJ3Pm[$/bT]MVKF8ed@\7J(@f7uX/?
%@J?i]]q:bAS>AX*n^4C*o]q"QrNl5F6+G$/Ji=8DZc)<cRm%72$_$ZD$b/s+h1e-JEN)emr-6(;aa[f9&I8'=@kN14`*c7Fqugmp
%X:?/O1[Fhi106W'60Aec%L>@@.DBu8Ta1@6<FbHpO8j'kU6s-V[AWVZ+=CZs#J<jq1B2Be*E9-X1dGq2WN"e^W/=9cmPjpS<*Kt&
%&RH@'Lr,d+RKY<Wp[?[mQnQkP_gg2<5@?C-R5ENFG&![U;_oMAc4/:`gK6JT,6ldfD7c1VZ:jct'b!&?/'GaeD@/,91YJ^XJ?*iL
%Oa]f+&U^\JS_C6-UEK[HMZ_RVgt::6:_?'m7W\EP%fTN'&=8<E^Z-e2'=_hP9bL%Dq,AVP%paEX-*->4<R2N^)!4&@V=;NY\jQ3U
%[e6)M$)tte#O`SKF'loATFs%ErA3>sf7S\JNE3A.BuA93kdfBZ.GT@ff2I;f8(7T*"Jt5A8L=Sd?9LWnMJ)'m6;3j_'(Q-0*aRTJ
%!.<#5c2PBG+.e7]FRdGBXf%Ndf!s!5G*MnH2OttLpt6;;,?1?Th"A(KMK@haDA'g"qIMU-:MORE\B0?JYbLYeHjNgq3>(jFTTQVt
%dcc>`LnhrDKbnR5=;-3,k3L<;Nm\ZG37]s;H#DFI5cs3ZZrbHg6r*,V=p>cs8`@Yh590c5NV`1e447pi1opF%]2ZcUDa+/YRQhan
%:AVTnFb]F%93C9b6d6L=gQq^\[L1!0k?4EQl$,h)1J'+SY*elXar)pj/4)V&L17O;'VC+l'a`S<-;,Tq22.%ICm=g@"<IH`iAInI
%ZJ=+(l!"4mc_VF4K17eR??>OLPlWknc1[1k+K.U1s#F22(ApEAK[s[EX2"o=p@@_gXU:EcW%_tP(2DI4eT\DN'Hkde!ek+fa^h\.
%n@Ag?!T\7+6)i,DUV%NVLX\2DY!c7]m]foH$YV^"20Tq1YtoUWJED1,F44hHSj1#Keug1/c/9prM<0BP'8D^;IU^&7Z%`;`L+qM'
%$$KbGaSXC2U:TJHe,k3*nhBWCS</-J'd^`aHjE(9"DDCkb=^4mA%el_)lHuP0)Gr=(`]./MIT`DSJ]B2c.]8)m=tVQTa\=kl$oXh
%U]`,@:XE"NYrtaE<4[.Co5.!aRm,jr\C*//;W]coS]HJU<J!+qd6fRg"agY"7Lf*A]E7<)$o@*ug5_mmQ5PKF2oC,f93`+A<26qL
%8(l`X?^5m:(Fc83L8sb&!1_7=aOlTQTUpCuAdp?$G`C&0FHFY/nUHuhLh`@<MpeO'k?%APMqWAlrOW&;V:>%ns$.ptCK@@AI\d:t
%2rT]eQ$qt0!#d8.0nAF`O8/+H7*X[:/dJLaK^t9f\XXLSEXPu-7Z7LZQ/2uf0V$r1OrOP-lV`9YXH4+jTgNXt$SL.@=(*alUdmDO
%,jg5dgZ"QK!9LA'+/bS.052TCB_lF?l?c>Sj$!OK/?,#c\ME=/5QckZJteOG^qa`DP&P<M!XhtCrZQLpQLOhq,c2S"MIWZgiMW6W
%5)^c;KYsFHqSu%<-714(-PH[VQ3_(F-Lm0j-?s`n85mJ#>3jr%>LA'Pl+`5g,o+3pWe%osFsi(tLSjX-94"\!jG[t68kbe^kT]?l
%.Q1Hm3P$]]Qi99B+43(-)b(/.HLl@5b,m58VJpTX?MSE*A<:hh,*,g,q$lFfD+"l`bEbf)AsK(F*j?*Slf(^3*X6G?cLml[]>&_T
%!ITn"H=EBI[^,$L1c:$=]r<1dH5AGf"k(e-XMs'8)^e6q0t`/6ES:g@o6h.e525"n&!'%nKN^LGDbo,3Wn+f8_sY,++gi[g7(ndo
%(rV`OF@geQ%'?;&V;BkBdMRTP<O@?\*0]V>0Eg4pXqKMT9EH^1d$,O+1LLb0i<<Zg+)3;U,uXAMqbOe3O'%7##5/?Z:@h,1b..'!
%r?k[955W\OUe?+u="l[gec@p5R]X)Bfh[ghP7ILiJK;iJ-Bqlo`jTgM@jD%l2??Qg#)O'fZ%La/QcIi[7sbaQcMTW=:i_fQ=q&q"
%O[iGj2nX3Ds"K5So%;Vp>]E6gDDCn[qI$e6Z.RS$4s*`[IX+k1AO;(CZLJB[Y76D'nX'Q\OXIC^n-f@g'/js2GjUd6F>7FQr+*b>
%'2lU[m;'9\@_&mHTD\>CW3:loYr='C+6nOLn3kd^E\_Nr,&BTi)Pu)92ET5#@"naj5t$R,5k$,T\T(kl4i5J'mtL=<!!a^`CU]s7
%i4CA("rLe6>en['lKP`)!*<kCZlN.a&+LZ?-8o3:Z_cW.75!OPZ"d/*#2`Am$EuNgoa;/1q#BjQP,?Vf\r*#JLpBW7;Amft.u8lr
%X:Om<VPbEg#Z/f7pKmN/(aeR0UAW0)0s"RO8HGQ%gC]$$QX[)9g)`\'6+lD31el)2Pn#e0WgjS+g3'J`H9bbl-*oh<7Jiqi_5nNJ
%W^N"%Z(,C$BiW+hAb8+Nl9,jA^<dn=+UnDqY$\@FAUU[kfQ.Y7_D*.qUe0bp:_\nA*t.,A!AB"Zdi@f*-RGEiR6Sc%B,[ddG76[.
%)G]rZ%@$+4H6pp0eJ84ZEm>DaG89?^CO-G9)b!?#]hBq?ZE5]3>mpmEKuQ^X1AV6+U^;i,W'X7QSNNEVfXuN^ATaN*0WWdH.>iWI
%i%"C?JCQcFEaKts+Z=6;jLrAt+=o\-7Dl"]T*d!c(^p"m$+Q!tIEZ.]-$>hOe/qYB[8!Djmk@N0WYYjHGsq<;Shmojf0eiNWrU#u
%MJV(SH%jQ,EPkS;G$jB3569;,[7&E0O9>R2%8K:N'97adlP'\96t`6jIHC'SbnViM.>)fMG[lf]>ZFO]bLaB2&_FSkTmUGA;\,To
%AVG@T062G%H4a7B8@FpZ$][s)%$,7/W@9+Hjr8)+rhR=_IPBc%\:D#<j:eNYWS^_?`rGo8!kZm8!8[/)r_XEg#`u8srLlcnJ>g?T
%@6#<m/YR%.78ojcX\\r;)+u8cSE/uLp:2@*Ze@M8dcW_lou,5n4ode@qAN!P^*r4oEtZ8$eK^nEY,\_r/HT&9B^75@mPK0n)dGI;
%(M*lQL+d6(Yoa5WcTJ\)kB<fJ1&OP&4Pk;)B>X/Lb:e`6mjGMk0r0hJ;iVN5YZKYJB3.q62IVHED"`]j=>+J$H.Lo%Tn5]Im4WjP
%F(W3n=NY:qVFcN)$aQr<6M.cF4k8o80\Ei1`EI8-I_)=??O4aI02$]&gT>B&mZ1dX'-[!`\CT7^gX7)FVHB>08l4<c.b3!_!s!Rk
%^7JMt&//+F_bo%%hdnf"hgH'5*$VWd4<F\n8.i1:d"jqBQIG]S:klYB&QL/W8+J[[>"V0X=hQ0fZQ/0$0J73EnOb,2Pp.`+jY]2\
%s#f1tatB'6dV"3kMl>iuEF/\j(@=J7E&Q+G(rX8>aQ/ZLUX_*RJb[u#Cd_=+^C,OK:#JEt4q<h=Li^Y]FdJAV4M4[o^/B()<J?)W
%^;aLjoU`?!`Ui1t-<Q@a+<_FE5[rbPBPVoAht:upVq89?h5#MPIRqnFMoU!FC$JQjLlmF%P@GG@"FBp93t6b#%o,8#Uhn25;*e3C
%"S:AELcS-gqPsDp>,Rm#0jF*J/^[l7PJtX$cD]T$J\&0]Q-<37RonjE9=g2"fIFL=='EPB'+fDfkdK.jo43WB,=;ot7<)d$21k.`
%:E?W2MJ23cL;[2]KP?X$#pLF]^dTbT7uqOIOnm^fq[%\aYa8KQXo@$dj_.1A-WdLT\FT<_]dN"s#;[3,2lXFNn02-PX:B1,>\tLd
%V%CXcd@/N)PnQaudktjNA*9RU)VKimq\DE3@k&faI.'_EH^6u/2O6u%62m.$f*8k9"6W5?!'24dfHR>%m&%.^+-m[T8j7H[V14^7
%J$^"(><.'_a6?Dj2YoL(jqjU8$BA%7PK99DW+1g5\OLk]8C1_G%_J;6#A*YA#Y1hbLX,C]*-ZjDYqp"3@#oHic4K=iQIf'lQ&*uW
%iugfjo1Q'>9@b?&C_>P(a.<6LYD:AHIZF_sm+\7JF+sXLHE?0<!#ctiZ6"+a]U2lGo6<XtbEKmX'_tS5g[e%(44^+>NO-)T5D?Z7
%YLd:Y*\88TLKe!^d.lJ&WX^3a\$+"ITe/ci^`6bD9eJFS6qb2`cTD0c8%X)q,()'-Qi2*;b)2)8mMrgFHs5rA/m:e^a!*<nS*#]H
%G-/40Mg?'VRM_bcJ>T&%#ca4/Z36_;gC63S[%WS&$%.I\pb#q!O;^$MeKaXs,Y;tV6J1liR^g"c6P=<[9FacbB".^Kmiia0?10R,
%M,<-skHBA^C-VPuIal5iZg%!`\PVMerPFS4Pp5pcD</"T^!`FBp;P]6EFJrHjT[6$E^A3$PW;)rTiFkoD'l^:9Tf>^"/mNHGr70g
%KlG!\hBoiX^ZjJABi+H9S9f#?;q?G)LM)W`nZ2[%OSQtj03WYtNgdFd<-Rc@N:+Tq],)S,4\oim`eo[*>:__OH?SW?[PV6tO!]hM
%[:[oJ5S6I(ls/(^b'f/Vb&+gL5E10T#t\Kja9\9H;'++`?RhYTS@Oa<[h>W0'0o`:^,3VKkb$#<'^"i0!V<X=%dIIqX_KI\961TO
%;jN2K;Fem]@G9hk$=tBkBC%69T`k!U*L=?moS/fYQeHI&m@)l+pSAqJ>2P/0fQ5o^bC6I8JkHItEgO#rlRN=u&rlu].&M(0-;$JU
%a7<'DH7n0=5OSFKVO=Gu=jSsp';+*MeHJ;E#^U$%l`/,@!PLU&g,t&B*cLf_l/I2H=%lmsp^f(GDC[GV+L5m*\*0HP>.%aE>!TVr
%1UZ6Hk!9G-9[$/3^+9/A^O8bAFJH$fi.$LUkD_)fXUNjT]<&9im;Ak1^Ks!Er_S\oY`1;Beg9R=ctQYJ)ssI@p%5Sm5Qd*'9+<cJ
%LL[u5lSbd==6CWq%K[)o]KK8BCl)8(C\.n"`oLhMepr'HCQs5BZh5\A1HUcX51J]ie$=T>VXbg(ZqDP(M\%DWlCK(oA)SVfE9Rt!
%*h8]<"ocup&`b"B^&hskqfa\`bC8O2lX*D&+b.Ie\j:/V'14l=;XRPpBhM*E=1t;k!puq0`C+O?E&$RCI2')7mpJUGr$(e_p?PI!
%hYB@WYWA]FU[Su&#aTLup(6L>@`'/8$H?7r!nc&:\Q2O.N86qo1P.4a2t4m?#=DDn.$Yi%mT_n3`C"(K@1L8@-DE34nV\A@>"n^#
%W>pKY0f0)\VjR$oCb&t@dGD7qK30WB"%!7^E2\eOK[EnJBVjAKSE2SZK+rYpL@,*X_peZ$4&BQ[pR\eHHS\b9",]Rm(R-OonQ:R9
%!@H8K!rHB&f7c(os).2ql:PmM)&?QZT=]h#YIuBl-l]scT6*8TMo(;<.b,@CEqg154cN?X^%p+0\^jN6N2.FG@6Bo_YYE+N:$s\i
%D!uM*AiRAD^u:0SBa>?%rg'Dc9Q,'bIoeLN&:6;YW7Q(X"fP)U=9+#AW&+k8`/a*/$\L*\#!3%J$BIjp/0l:A9ftqI=>+S3+,rLq
%=,s/CdIrFbF0P;]FH^RGA-cCZJ`$tI#s3k&"^osMK=`hs^i'O>LJL^*.'+k7J!Aq'QWpO?X%LSQ]/^?7k_'7T$,e_V*k7pWqR1_.
%X<:iHVs]I9WiK$eW#LY#WMIXoT?2o)knE4POuQtN?C-l_@W`r^UW;[nUXdt<Q.I"lBpLp6\-W$lO`doGNr>)s+2Sh&%[c(rTdh;p
%T#EI(?<c%)(4M_E.-'Vn5QPg@kLG:6i0o'NXU7(C;#=YNM2(Td?A+E7U,t/J;Pplh[WMfo\&K)Y;Zi%gZrs3j9#!]!%iQp4P%/4R
%33P*EiSeU%o,uQI>?h`?)AnpU3;>f63l*L5YTO.4p3as1"n"`X>D!C3Q^I<IW2PoPg0Z.S8Wj)8Homi`TctnZThG_6OZrJsnlHM@
%-l/\t@3NqQ/r5+r=Q4<?auY+)/#=#'#X0Nh)@pOY,K];GlBk$m0N:r@L4>kB2iN/p1`gLM&K][,dO!DZ\S;GNMkIOS*b*u1+cDKo
%H)#o68plV-+ZY-,j1C4mkR8JZ-qKdHUaVP-1/M<ql;59]ZeJ6;&-\;E!_,E[G.Z>R7>"''H]S@/j8R5F1&cf1#CcL,/^P9M!rj(:
%A?EfF/\oV$j,pSl+b0k5+$HHeN.jUU$E;8f#>8?):p"@1*/-quWh21`.!+h;QOb>`a]t&r'=i]KY:+?eG-:Y\b><hK6uu_I$-=P)
%=2:#r7uG?%$mI*8a0b4X3>$5'eS%'YSal5[C\2qb#RgRNY_FZ;.[a]]<H>U\HAohlF42q=HQ7%QTe`A+=SPdP9OMdt/-'$J6+hU=
%P8C"<4\`i[0^3dMVLTk@)U9_2EK`J7AhL)G\ppgVj-bgf$UJ'"ruRF0)n_r$$ZM(R_O).*!HUjO#qQiYll_"BFY1NP?%[cg/0!6N
%X,3h.QEha6!j$^?DmLDYbpA(@78b29[4O)^,)K^G[Y?9*PPt/&O1;%9+OJdB:ZMQ`e\X=@TY2!;_!aJ(KI<q%"QF,N)0*:/'9nm+
%6"3r$j8+'/&aDgDmJ<_bg'lKqm_7#IkJ!otA?=a8Wq_s3\t8GTVB*p[$shXF]:kUJVC<W0@m!)oTUNHm!-deNf8T]He(u%Y+oH5<
%O6>sGXbU8JZt>,Mo\"/FU(,o->[ZY-R$3T&YZqL1>'P5I7/Tp&:9ATV"0&Me_fs5NVW?!Q*%8fj$;U`EU0OfY-GIQh5qPDr4`HE[
%I!c4g"Qqbjp(!b=#T+u3'#$:pN7oWZG"NM]3cXF;+QGGaAIQ%I%Pk<uGBE,.TplL&g&EBM%=<t^?F0R-4%dRj:JEATiGmH3YAQL9
%r7+"0_5QIVR)HAY/?dmI[Htt'ga<m=a`Js6,NijGd3Bm#!iF?;72!S-9u&7IjJ@37\,q%CLXg:Y-,MlsViKEU=!/UYb1U8M2MIFJ
%gZjZuhYa4Z'qccbO7)h=$ftCigqB*iQ:"mIpOH5-5hFY[Ao6S8a)--/$CKs.f9/VEH5=Yc:***qK]>3GY"Oiq:`]+C<rsdMY(kn$
%Ibd1,js.8u9I/=4%glQVIP-qBC%4/Mc>fHId"nY/dGVuHGEM.kVI3+/J-3p2QBU55659==!6gK:'ju]Z+Yp[/Ae-M/)rc'K$%!MN
%aHO*LjO98C*B6EaReoM<BS\mt`@;@8^ecb\in5mj$%QUYiCf9a8SaEbfN;_!_m_fSK^2.Y0sSG[<F%*4+P)a<j$I#T6W7^/nPbuL
%+gVH^e.d9mO.Ke_fY0_J#/*ktjRJNe9FE;?*4:9Y3P;pAaAM4k633q'B5Hj[3IEMZLWbX23E(lA`2)cqYI^3(YkDl\Za>TofJYRa
%T=]i4Jf._f:$9Gg&Sm%\7!M>HPRpd-LGX@Mf6"cZV,>+^[DsnJ'@p$X@5Iq^LAkQPIj*c,Wsb/f%u3TVAi@N4LCYpO3FZ#ZTCcen
%eYdkRIm=qmLJ%reP\UX;(*J^/g?uZRhWZqkF9j73SQkA*POPN8$AOE%s1%Wlmb^?Hr-1a2[6M#c*jm/tqn@CPjFU_TMonai[gGQb
%ht?cWc'+/"pAQi6S:l$2Vgd,A5c[n3EQ!1=76m4-3HD"Mhq:s&d$N%YCb+&>nL4h>qC5/*!U*R5WfA5,pdq%C7WSYHAYpoVF%mah
%8d]U%3r,*Ip]#-'OhQ+)F_V0iBD`:A>1MRX2b?P?%TU9C]&ZJ=\i,AhIT,O)VP\i(=\MkT`PY;"jPcK+>s(ic0bcQ`XGV(CkQPd/
%(:RuQ.ma5tb'beK6N%tYF>U/E>_P8_23(Dq,kQ2a)p/pRj@#I#YTVVtl0^$)V=/c+,A4+JfKjAMG)"<L.Ses=pn[$#cn.34>*#fm
%Yp@C_&_gGdn.>(T2mCV;pU7W'C\2PZ<nG^H_Ur'd/&>[Yr59';CQdpC9:<slQD1[(6RJ-iNnd,&MUl9,"NV[E"'RfoH&4#(iWd^W
%WAFUt[YDYb5cn^/n8eUR[YEsJ\0].I]VPi"864hK=SW4F.n:D/S1hh76G!E>WcuZD-0KO2]9N[JmYsCI(`>h[4$49Neg&2:[gkpS
%J0eTb:o/\@l*-)X"=(@r<Y_9!G#6O5Lqk!5YA?NM>Z@]$fJVlMOSHna#EkiPTh"CFe+7SVB;r4u[K>9,&F2\I"3g^u@VoWh6S7fh
%Nfk#k;&QmBTQS3/Y3HnFD6Nok\0B-c:>t?-d\odCOi,5r0:"'oPamXN;S,^`9,l&AN7I83)XEu2]%sh%Jq<\k02<H\ClBbWLt:%K
%JJ;Uq?6E9Fi-Tf!g4;!6<EMTqis8*.(oV<]Q>i%d5":N,G-e8[7lcdbiK=B]oKbtG@X0_=fG_uc+)<?JI%AZi0)NBm1%BE,]+J^$
%l"hY<AM+V;G5>]S^04/BR>ieUfJfIpcG>7[&Kq.5S[?Es&p`VfrNl*Si!quIk3c@%/L"2rm[/"3bc6t4;4t)1M[6Hg7GU-u;S5cH
%R;R=&8Q`e3Gmp<lenD]=9YLMEdMP5cWLX1KTF?gRaJ]"S3$VkbUH3^LO4L-&R_J)kDH"-]M[XoG8.I3a0AY/\!T)MhHDijnh,^%:
%i\l9;L-ODW\(7#1<k?4Omg9nYO[/t_VP#SLQA"BcDJ-E"C4mk9@3E7t(#JeHI@'?BjIsY,-e(:^7V"D1_E43#0tEc0!\"R!3f+T(
%hsZI%4Olr'nS#14Y4cjrB_L,VZRNrdNXIeMi)SikPD1W;pHE(D3JI4giDKO-@dcTHTK2Y*#PYQC7YI>m*>]us"he#QH?o8`nA2t5
%TRej-Lq*"tL#-++T8h-R7S>Ha#r;@?P<^2EbQYM._*StA3&^jk^r06NAV1-H4com7B^`=FL@INC<$1nn2OYar/SQ_,$R4t]m,F:W
%dg_#?"*=."mjT>3I7NR8(d'F!-&;UpL'9q:P^:.&Dd`A4<esqO>p97Jk,r7FZK/UB"o="E#jd,#kaS8OaC#S3"+r`m7CnQi.`mq1
%i4o"jh79M43ICnSP/r",]r-e@Z1_oZXD(>IMMJQ*.EM%lN00.Aa\9Dm%K_FN&g:jMW@/9/3LE-9_BhVE9d*O+A79,-D)N.PE4=Ll
%[N3f]^tn/3a:2`_<RhIXGsc>[FP.h.,bBaH!!tn/1Qhj\cp-8<dhXr8nZ@**AjYWl)($R^90e9-o$^+p'-7?]_R5V:WZ0\a.]K!o
%k4h8qi+YRb+1&X+qV4m%!a27HQYm=H)8k13TapYfMKMiHCT8F;WT7ZNQ!jo2j7:RNf00A#W>^rK2m^H*VuGAtMam(dPmA/0AH_>A
%(`>0lp"5DOKW*><4:mh"Wf<77UUe(<Pt0;hGd]+rJ,uf!^a"8Ha2q#QVX0*n,;-,i7bA93g2_$P$S_5EQOEX'U&P[]K8iK[D/s8k
%(/+QYI*^MAr0rr`_!/e%7BEhJgUe*R36'K%rFCZf<q;F/4Dom<BqV=rWOs*@NEY\Vi)Aod)lG$W!KFU@Ienbl:W^u9l*6^k9_S/r
%8J&pMh:G/>8N1.P0JH+DUtAa_<ir0JH/TC[Kk3NB0oBpUHsE9+=[Q1?.1C^Q1eU=KosG[@0A"1;JDfF!1,I-d4usA`HV*\e\Y/]"
%r3L6S'.W<0?TR/J<_nH12JlQK0m/A8D_1W&N4&@?Ho<Lkb*'RPUs4e]lkUGCZ50NFl/+Ln:=0j'"1QK"+h4-q+$R*^^6O1<2C?uP
%YS<Zr51,Y4lD]Z883VdGgIh,edT@gnn"XS'lhtHnao$Cb@&otNiFIRB`NY92DM`TF`>U$]b)Y!=6\C2\5"rH>(9V`Mq%O^b_*I`l
%5F)XmK"q)=[Zt20<$HtYZr].dl&,("1FO,<kgud3%8<btlWLN.X=@4q#PB`FMGYg_fs0\udk_54H.C"(ZA>BM&BF,eWlpN1["dU0
%mD$,h8(!c0!\TLmf5k?\R4PgW;5D10XR3(#V=mOb8T+4tFA'7DaZ-B2KgD6k!jo(+6"gN[&kDP?Cg`.h3T=lUVVKMl8A9X^+jWMl
%6([<V4=Zo_q9H#C0H?W.N::`.6reZWDnM8FM!<1rM!eHXZ1)iu/ga#o,B4R@C5Bm:7W,p&$'YrUPl3Aj7>$IV*gRAHHE?T7@fDm`
%#?]dIE=umoQNYi=^hLcJ`&Z<ILVp:LY(m*_lCk<6a\<J2b,7(9U8fGR)Pn97eK8'C5$,3^@I"UNN9qZ2*>B@iUJ!aG."#f.7_@AE
%(fM$)$[p$D^AN4m5M<Q?pF>b`+=UL2:rTGi!\Eb'1:Q=i8TWS/l]u)_1Y\h,r7,D$GhnrEa!8EhV8ajRrjmufL?%MQRsprRNZN0,
%Gr-u*buE6)+qf"N/TIVDidY//J+VS!`JiXk2J-cO#HODeR(Ig1QW0!4kXV*nY13F<)O5Bb4akt-[tql:m72ILF@b$M#.JKA*B-jA
%NBnJpA`J^Uj8of`C>A4t;1Tp'&s31!V;IWPRDL-#S?&e?`ENHo/E37%ata'2mM"dhI@l[2L$I(3dAtDla']NeA1f^:]pQ6&%JTi)
%P7G]=R8.%jNtkrXOU3[$3_K?gi+&9)GCkc%:<Qp7WF-efceo<KNAj+optuN#MqJ??=p?T!m<$C_^,2tLn3"/Xpgae?I%@DQ^qLX1
%'?k*1=-c*r`,ig$U09a<^::<Wdd<M1`g6`kNm1'D;.In3i@S09fk)(NEci[nK'H3F<qih]DL[a#Yi(s]o.l/8<,)#gEDFqT>CA+C
%k]Y9jidMARlDgIO@Z&cj[IY]N4lC:/ejF3Y0^C-t>UM?"lsACco,#]M:8K%EFetn,HL.QQ0kkRJqRSDcHl<TDK^as\Mf3j(ndJR!
%c5_B^<h%P'SJ`NY^@m1`?2:[S?0F+_E-q4SCr3S]XHo@H\udMEfVusW&6DtmSjm%p!@!4Y^s^S4*h[F`fmpQtD!$TiGq<CP=@srk
%;6QiZ)6DkTL.=o1(/lZBinq:04_o7IZK.30k[^G[jM9UDHfJt7RUEiV:O7=Bla/CQa\3'#H,JiBIJJD1B8J@,iS"7S\De>6UY".'
%k2FR5_C^L69+]pc+9,qI.0go3a()T98OoEP#C<=cQt_%=A!u-0S"jI`Iq20?B/VSZ"?#F>'Q/j!6s!Yg9?h)ANX9?WNIF91_sDbO
%<.2B4hFu"_kpjDS:Him:qQE,'G[013_8L=:Y\2r;#h?Z5gHJ.hJC8Ta*s=&(qR&HcYgMK%R`#Dke.QQ6j&.Qdn*GEW98^1eZoLDU
%HR016De@,f[:fEBYcJ-Fg\n`)@Y$Aj)gL-nR<k4sZ>(rM2/kjK(-NG,:1OdjQ,B*Ufn:\oUX5hQ.t21MTZ[ATDd\<l)Ts00l7W<q
%0BrIE$-aN5*u72S"Ut`</hGH`.0//D4Kj?ofE=Z<VF:c.OV.Y[Efpuc.B0JcPXatc5@UZFMdc<hMc'@jX$Q:5XQJ^`fX)0IS-rY'
%C9'MTNat3I7%dVi`;tU:q48Ln=CP/4=*DhCHj$b&k5;_fgf+>A;FLkAh;at\LMn7R>:<Da/'+>=eahKN5_e4UWY;pbCK'XPH6kMe
%Td#\/F$U"!0,D)up(abpG&"*"$8$,'L5T,*@-H)Y!KhKAW2"msDW)f1,CATHlq)WXCQ@PjC=f0keJNNW]]HprDZ'XohbpC)4+#G(
%Lm9%XM3ml?gdm<%-<Io@3Z?:eh/0)oP7BO3kUjjP#c:+PFI^]&p#`g<5uI"q,p<o7n<bc&(@<a0bN\[kSOK"t8uoE_6p;tNdL:\[
%eq&ci*S]k6I9R,THE?6ok@J-)c!H5B^ocZA"3+IMGQ+2S+,jV<,VL`3c+(Uts7diH*c4(pFC^n1$@`+q@E?MPDXp9-E@Hj0PZG8_
%ObU+j(OnK2,S5dL1!WuY*7dWHa!NCUoXWp8Y^c?5m'1\/+t=N:.Fd3+*Qf1;\2E$n61o>"BH8O#+dDdRdWe+8ISJOl(T'J-IuJoC
%^3n,K8+4%i!^tP:\W(cpdM4M,S")=tN(k+.CMR/*@*f76O()sLo'*d+[XiIl&;c*OVLgLM0\NYEqZruaK4GuEINIPB]C#XA_el[h
%Kcm!gE#08Qe):#6r/9DYXer?>Mj7p1ggJlBq3C#R)I\iI5)nD%jPcqk/IJ*/iWU=Z?Mn>0+nZBIG!3("erCR9'1&pOm^@id])ro)
%]4F[=B+1<55('cVTRsPXeV/d18d8u=G+chh-&TUi0pQ!<1!]sk!CN^)OSn\'omrjWrhc0tAN#nK6i[R.NgU)if/pFmGCg@Q3MHii
%6WL]_i92ARK.K)o7LlIC9*Tp/`kLi!iGHOHUdHlRo&Y,d:k:#C&@^"L^MEd!AHn0YblF<&HLRp5KuWqQJ6Lds8rnW.D/^B,;ISDZ
%\ah"-daR1mES;2=K13-%!_qis,a0!'cG!Ygk\ac:3Sn.4+.qmPs74QqG]g_oP%h+diV'cqM-\u.XK%tbU%,Xd0[YWm5bm<e-qFd)
%fT$84F4#pJ3'9X^6<,=MZs^d.L(HD#rE.9I98bF*UP#5WOY.e&L:l-;O7p0@Y,NqSZF163`P6KA@G!%T%DtM.0IAFSN*TM<.Ps,J
%15Niu]86Df\CqUDCraS8BR$FqG<jAH>a<(p1#UqW3dBY?-iG5Z@VG+md$B605PDrunRM?Xib)+J/f+He5:uNl)f66>H?Z=9h*7-4
%oNh,hM.Njr1nm4d=,=iG_Z>ffR2FnX=tQ+a08GVYSYBha_WSXWc!<bX,QbJSdT=u'1t/Qepre9hq`b1((O2d*!Yh9*R=BP:js"0(
%`(&+X?s'j?>-,ZS<6_@$>(7:.AOLsW<)m<UOBM*bUn8V%nh+>L6!e+J)!`&ke4;a@M*b#',4IFP5;VE4!:eX"dLkfMpG=9+dQ4bS
%.e"`F+9E-;$A6<pIHSEb^sKZh@htFS5%mRlgSAPWZ('f6kWL5>]Y:],n&lOO]=hZJmr1S`m^do3h6$6Sg7\L0]]6u5>`)8[B-Q:0
%C*[VBJGU_UC3sh,Gj=U'E`HD"[BF:Y;BB<KY%"nAH"LYi0<H]f.3/a_^NVYF-0C_)rU,`[0PHg_MZ<2;0':9J$nSP>brP/onL?\$
%=p&ND$lf]l,1qS@8(gP8SGA[B%9%3_\lk>#%SU!5M5=Sf6CC)bn$an['2ml/D%7;Rs.lU-m6J:lNU=[T&Fb`$3hXo#HnOJm2#'<<
%`F"X3dX>5'1&/Ogcstic8glClA.R0(LBPWDflj0):Nle41@s:73(qU'a<85(@acdIB\OC9>NXD0])rgO_K5%KJ)/;U*ZZtW35)]j
%m53<oq[fX+T`JIX;qOtnp<$)gG<+Qjk9&HK5W-(8JjYn+?.^NVEQAc%3!Fp2coR.LBMF5ADX)OX=\9EiBqP&Q;2WJi(O@_HAIH&g
%ei>@?%B5u`1$1b8^W$@A;$km+QXTj2[[)l>bLFr"Bc<*m:jkf5m6Lk8l*1:Xd^0ga4f3-Kdp)KID9m.5Yp5d!>@m)M-J7ie=n_?[
%[b&DS"Aq`LN3V)<bCA]n9TPPQRFL!Oiu?a9o1eT3A/FYV;=">I]7m/'m;%E-?7oQFq=:GaW^<@@;#^c7j'&*aIP1$/+N62J"cnTP
%YB0GUH`21^r^a'alE)"r-PB$L+.+*1[aV?bC1E[Bp/Z6';cHbqU;kA#\"8C*`qlnb_m%Rn+`!FA#X'Y7&n(ORWrcs[pNZ?4cq%7E
%X(dH!pPF&bYQpI*,CHg\oRMgZY892&KE4`.o*ro$er^O?h4*uOo/j`#F[sek!o<Ao:]%O^RTM#Ul+5tL?(RDA*%S]niRVRo;60+M
%2bjSZa!FlV.65g^K8EMOUb=F9:VZn2]!I:j.#&VA)s',<:gA]kgV!]Xd[g%'_mg'>?gA9.\O"&AgiobuKlpX/W5)fdK-%i\-sG]4
%.=+2R)5qtd%Yl,k0s&j?U<nX^Kq4j$V5=7dc6Zd28%?e?li,9j[U>PFVn0_GmO&N`qmD$N74L:W98fM0F`_pp@H*eY7V(fn<HS17
%jp7W;U6f@G:/52$;:Yhmp!*5r?LqnL"))Vr=)lAB(ab.,9_/n>)W_O2?4X-H*7@eSD<K)BQ*^S&/d&3]']/&LmjJ2n&c*KLF5-7L
%a#D6Crqi(/,A6gH,3K?4\;sGQ@EpTSYH<(D^-u#u-e&:nbKG@XNg\i\h8HF%N`F%mO^d5cMSOi3fa`8a?j,!M6L:N>>^=>-#Z/eo
%GJLXO2L?:Wd-QV.$3PJ!4!B3@R0_/LZ%C&h4e<mdGkGl+jLfp).JQKh*V&W,PqJ%+BM]mG^Psu=>?`'CEEsZ7N\S`D,d?`rAaP^;
%%aot.JlqI'=2Jq/E==]71-!:Z5N"K?4n"T*LrW?.9aa#SRT6W45InklDbO@ZZ(Z1nM]j8;JL@>U4<WPh&V9QLk\b;SH//L#WDC[n
%N(-jB;R6ahdh[biR;FcKPlY95P%qqhKV.T<ZK-BlCo)p[B"0"g`M7scICC1jXj-"eXZVP0b,'#`2g)38[Du&_U%ZBH\TcrpbM3er
%@7AL'G2Yg)"&-!Zn5N$D%e.)oE#MqgnpL5$T-.[.%0Og.;k$-n@HPZ7>2g6H^&?qpKs@%^ZaW0`_nVYt5'T^+H&6oP#+oS0'U^U!
%F$0)!HYA2s_P1$T4rM6C\bE5kCSt!6/]$%?jumtVV1(dEC5!FEjC^?<53'\X@D7t#0&iH;IgVL]EEfNe#QpM\4`bRL+-1BUJ:)Mt
%>[WliS!6cF!(LZ<>*%?^!,^e2e`m#H+QnTW#@ZR>P8GPaSJ1>o9)<R+=1<tCX%_?>'C7em/kHF0\'Dc)=%P@/XJq]lj/pg!++\Qu
%-sp\8-s'AT&%J'k9nALC(<(I%,f@25mpCWVN$n(lQl%tmR>/,\3#sf<GW[3ccAZ6'%Xija4+`_L$L.G#l(_>WMWMj&EPW:Xdk_t+
%8M@-aN)18#rb*]2JHEDs(Ahg(>1VC+W:(o*I&sJ)-6^qaG+A4H[=Y&Z=9B)Cc0EF+Z7=ljYq$DbOT<umcf#CUTl%?Ge2YOeT2bLV
%q_S91H%:a]k/4h`Pud."1<ukhNE3H5$7i[KIHP+=W-XO>U$_>+%*oKcp.tts$LX06p!9:1U2$*+@(p6!?aH.g`>=[?Qb?*j/%:oP
%6[&tJ[5q[G6).J)6On#=6W(%Vac,.h5Go/(eC_[T6f1,`VDb8(_#20s,0(a9ea==0H!rrCjeTq*M&.'QLupGNT]iSeANF&_,CE\)
%F&[2aD%Zl;FIg-rc:[N;ANU@=nVm1CkV9Uc:q:mB4mFaNI`PETm6pX%Tr*WX"QgXL6+'2o!N&^52;J8+`9G2G7q=p^74=DD%:)a!
%'&\5]iWd"=EGOGpD]]A$coo/[CfBWd==gON4P]A0Tn0nhJRD0Dgg*^jn3fW#ff5OK$/WhkY1`_d$ULg")&Il`57F^A_)`]\^VcCS
%]eX28@V\^!mmph(7a9Sf$k1KX%mNl*AYXA$nc5@q>X@($s0V0<43A]>BXmmX]99&\5ngNM.=7'I\;1/^aMFSkMm$7-bIkL?nB@>t
%VZT!.J)0`7fdc)1pFX1ip<dr=Se3E;fTp>N8!eN)T+.2[VFNG<lW3?A`Rp!mW,B@n[9nK7L1,p$]&$^s$F8hY8S'Pk.-RRd/X=6H
%Rd04C1tH?d0]+gJh/6]iV+CjD*&^4(ZZ4Q;GcQZI>SI_M(>3.R'q,7GNA]6SKaipkD_F0l27<?"G"+B8Tj?d,cJP5:PRGORCU<'%
%T;2`eqJ2'QR`B=rgR:<sQ(8(kn#Yhrl?U=VY^*;sZTE*D`eRGHF;`J6;b1Y]+r%R9id\qTLG-$i4okN9JDX>#Z7[WMA6'='><9kn
%r]ZQX/h9A&1bIpO3ukM%Pg'(6GgkJ%\a:I8'1GQXXR'X*jXWhc\L;9I`2OGQpBdiLFG6L`i0aR"naMiEReOCk0bd)DrHu7T^7(]Y
%GQrhppH7"rG0'R/m$[Fo_A/?G)pKeW-YR'B2lN5p$GBuBk<Vs8BpOr_AXEPS<-,S)`$3+bUU?LgIcQI,rXG,P^3]#L;&=U\^=.81
%6!/<Dl0+tYONak^IOu>ZU;-4@f%9rpp2sAB61n*@FQ^9%,om-GrDH.8`ls6H`Z";pIk2Ek0=LXtar5khX;,kQBe.tVnH&-HVP!q2
%j%A-b-^?`<mQfq@eYPia`?*b,AXf)P!T?!bNCuprK[Yu8n5L8+'LU\Y3]A=A'$-Re=$ZQ;gh)a_,N[*g^(p@F2K``8UP%R_n!$lZ
%H((crCa\4!?nrPT+a_&Q69JI<]GjkG=9%196kq-]pBf9Y((5+!BVNNNq@SjMWfUi`VmU*ST+P66$F>Nsi$#L-E>'nm@M2-F@1>kS
%e)h5hi6C!E,/<+I5"9muHb'hP1!e'XK!7qg8UkrYi4BfmK,[COj<l--9Cc;\f>uoUl*lmh:ALhcqpa?T*bmcYp9X/ploQ^Zo;RfA
%nWWkY]'^L3d"`..W9TLuBBa]?@si_jFWmOe&TuQ'#R-Ps0>OC<H9)-uC_f^]b()on5Y:*W?`#t]@@C6+rb1Y;!#J5o)Qd5sWi/4l
%F_4.t%>Jp.dM`YjOb(-,RSTnr<dKJrW8sD?iJefuaTXe6=\d&TS+&,KN(5-^\'$pFfYdr7iN3DV`Q`cIH^>0Ebll)bK-I2Gqj[T4
%aNmk;-7M%;kh>Udg4uQdN'%H0F(p:25r<Q)'Q/t$^G;,PlGd(#+Yd[](`6a9I]uM'EVKeZ#WS[!0-go'[Gk:PdPk+<4fIRojhb)1
%,JfL-`gd.TnuWk]9.\&KPkUa&KDk/)VKBt?/4gq*:2#k-e+JJie0s@'GuJSA>bM>a[<3nL%Wk2Ycm.":VUAG97"YU)Ja-<SaIa:U
%*'4?>NYd%l]0<f48CnmrhZYk5PD>JU6PLrl%q(\<l:7sCb8??M#lj(_1OKY,()r!^VdUnpV?tPtAtQOI;hO4?d\cf4]X"38Or(l`
%B7rK/H>_+m;'Rb8H$F`T_QX$:W'pcgNYRKM,0>:h_BQ(R'/9P1_o1D5)=4+W@>GUIMd[AC97K*(7.[s=#3.FZjkKZ@NU*md!Dl$1
%H'fnMG6nH$[QNd))0sft)3at'*q3q+ipc[&SPu:^FlftU+Cme^kP^5=,GF7'k!`N&'TOEl)eb4'r=O=gIW@joJbMts][?DuA76;_
%en"BOE^9m%&:hAjH-sG?/XKsU8HZ48,+UtZdZ)/S!2nONb,CG>(p)-1qEiDEcH>\D61L9]:MC[j;@"7"\gOP@GT+lhf@!^=p<r2M
%j:XDK(h'i;RN=F!Xk0k'V1flH/TPQWj3',U]"?&W1KKb]e?q8:'6#R1RC53_R.sqb^l@srk;pV5H6%P\5r-eWBl?\p&fiJ727Abn
%=HeG[8hjDaYm*@$)V.s+-Bl61[G.XcD^lG!c?!HBE7C"/XIUJei(V:#UE/[Pfc[E9\#55a&gT:7b!#0*3h[4U#`7g`lO%4@lPU]L
%CY+j6`"iY`$5gI`X,?Q*j46H:i4[I%ZOnc/Eho;FFdL/YVP>quk?SBtfE_(O_diI(UeZaP)1jK$kqO3=pJ($3e<]3q7nNnOPDIEp
%QJhfr&F>3jj2pXk<%o*\NqO6ok/9>GN,Wsn1"-NC>LRodE!PLs)GUhg8V`%)1Sf&<b%1bNE$MPoP)4C3^/-+g;fhEI#mk#O&'qnc
%e);J`5f\9+LXkHE7:91MU!lS\-2DoGg78r4/"-Te61:*XgdXP>kA"\cih7f>TN/qQG]kE+9>t%+Ckgd!(hO@#BkMEpn^OAN`og$8
%k)j+G4:J0*\Mlfk0%DYq7Z=(n#qeUQm4]!WP[YNjm+!sAIH^Lo_W0jD'g.M<N;\V\r&Cd:Gaff12Et*3'IMBM<89?1.X4k6%#MoB
%Go5H^fo`"s-@7?B02!]+Xl?QY"c0<d8\?J:.G=6c;)qq?MFPZ^Ht'1]&*PN,5M6pl0XTnA>ao>6R=ESIS"lZ5Qj+srp`/d)3o*TU
%ONg.jM>d&[F2G#6N*isH<G]iMk9Y6_=36?Ul)O+5qIGWHXF(X*mkkH]\mK[$"VD.ods;9Ckuf/IfW%HAMO'U.M#;mdMD=`[Um:;6
%jDdf8Y)B-Nh[Y@6%"Fp0kR##4CW1P/ag%!A4(FDrT:2nJk\b\ME7Gncl1u)lb"DZo7X_(1rN:7uguCl7\t>jG5U0lJPc,\c!fo4H
%?ME0O2WsO%ck#")Cl5oSNUZ>`bL0iTKE\>\i(YF`=kp(J84aPbKW*)k6sYFF,=*6#0muk0",%f8S7<!c)@uF'Ec()^dsnbE%@d8O
%^g?#JJlGT=jp9=&Ck5(:oYK@:V[B0rndR&]@!mCV+*q'Se2<YS676Lr9UF'X`1S0a+S>:m:Epu%Wiq)6MF'VG8Z::"/qF.qMD_KF
%'Uj@uSP^tD=9<\#D=1N@/U@U+qGZDb^4b5@[;88HWdB\9n,7'Q?sI'p!&3Dh%^:7:"PiZsL7L0S@(l4@Q^9%8*Zd.aqFKX=7DHE&
%MI0YucelI,^\dN5j?`;bXeqPl.;##EUS(PGe;SS1/3u)SAaZSBK]OQ>BI>k0lY\Wcpm=l\,URB`03.tm/%>TsEfV@UJm5m7W&m<7
%=8PZR!;#u;^MQYMYk0"2[`*J_@N7X@<3tNMMtL,]8Upa)`'8bKH@52c#9Q`&,dLd;ZbICC;I"Vl-T5IaH];c"4KL]>(M%dOJtj&'
%RnY"KgO)ktQAO`ugB@-\Qclg9`?@I^?Ch_;LOhQVT4O[+2q>8@:^,&X[\Z<d[gRr)_A4[iQkNdVZ/^kN$VBhRELaXHH??8^DZ^iE
%qTcS5l72,XcjZ.CR3COm^)^d61$F%mO;$9MhD?[Jq>Fn)r9_,ddC4HLAJ"N2pN.gCod9e$NoTD^co$-LN9Qf?0C5>-F2aNG`K*o`
%^&3WK9a&L,NknENeX+JqXs;k#]tA:$PthPE/["LcokfJ"EM8c&gnR'g/.AQia#^G.+6YBdk)jsX2Y^g57L9H'C@s"cR:Q`K4eE-N
%Y(n*Er#KR3QaanMe%]Rpr*9_-BGt[Pn\OMI>aPCo1_<?e5F$d?c9'd'-ik'/K_rQ#hAKC\T8kcpJ$Y"<\S9a]b:?I>_i[prU+);W
%eRA0'+b4]n8Yt"K_8JsZ<n\2VLNNkGK2*J"Alpt(2$Gd$D7WOREVA]gmIN7Y^^kn02q-?:IZ8!R7gW-(KH*Fs.7)2^^R^KaY1<k&
%hDU;T[;,E.>'iY\]V8T@b/%MlMY<sPKujf.FgH7O:_62/^/"C"PrXq-CTcC8bRN2X'9]1*W[MjSkhIBP_s^r,5DX]4#O!M!o`Lc_
%1YpP`:+l]r=VKk9hCKDG_P@3HT-Q6Ye>-+e9F9Fj+Ef.9W=ngO2m3#?Dr-D5^=RT9MPoQZ+28``(oEd;gDO$WJZUT*V4)4,7FX]0
%n>IirFZo`!7:67slG@ds*(W9&]37IO[n`<QOG6?eN+'D^RfRh!I#?gog">tYCsNiK=69##W[E!d&gsbZUbTpVWf7%`L_H4.DRL<3
%[+64cL;mFV@n\4!(b9>r25Z.>:'%25Rn%7l6L55#3i5ik"/i,?qORm6A`D]Y'cJRuU)ULW<aVV9iLWJ02k33d1Au[HQ,'f:G@9SR
%\&XG:aV=2+LC[N@2;!d+?f*2h[57I>k[YaTMYeZMCa_iP=6Dmu=M(0ikN1paD%bgu#j(0f28@+IkjbUOlR`&"fgi`&<^2*2&cUF,
%KF2N<I9S9(2LD<tK,]!,gJsC0r<<Fpk@`?IBMl2Wg.R>-(]'P2`&AX08@+0.318&YVD"ubagXJp>,&7QqP*g"g*U0/hR1AM\ZNbF
%$iXJ(IP^cfH^hImpMkho\Y"VU8[JbZ6Dcbp[-IJD5Mk'o(actTa.q`L:'.ZJ5j?NXn.EsFj/(7p#*Wc3jPm#hXs^]7A+))KLN_?%
%Y_PP3Y6o292GG$30`oTQV\QE_jK!j:eMCg7+S.s,))kj76?\ZMR7[:O$2o#tbh6'bTe'\[OPj.+NOu6Ye]P+i<4<3a"6!b0*bP0-
%Feb\bAmc;rJnX^ihi&aagC$b6fs!X+FE6E\l!V!Jo8W,B6#)7oL+0%Q]^/a52<sA;A<rBre50seIpuX>?hFrC[u[j7Y>LS0*b92f
%!Q1f&q[&.E>;\Z@0cS6ZcpciDK0/e;L<s<r:)JQ+8<F'`+tZ-.U#WjI:J7PhKe?-:M]&YD4=hL>$"FQlrs\pGpkPW6'Ab8'WiMRd
%CfhW%$QB"PW%6h=>>qU[fgljofj+@:UuO%&@`2#`EHauhEfXerC-0*sVLKL+n'9?IK1b379RgkY?)G^^.:G'*\q,M`I?E*0$og[=
%-gA(NR4's/rcl'@5/##f%QeKUl=1-(Q[e4h1'aYX^=fSuQY>5AQ=c]km1ftlA(AAJDI!k-jK:GN8Sd=K!JJ[*b&:Q0Z(bnpqW-Dk
%4Pd3O@GT5??Fl-1\ll_3el!]M9jb*(m82o=k8uNf9nN&"gG':upOV0sn[BTk/+9,(5Js!?LWJa";5%@WP)-_f(-AD$A`igT@Q61A
%eBP26165oqr)sF76mJ;o(sA;$G3L>5QSna'O'E<^l`17+0GPBg?0UI?;KJ\(]X<!ZU;988](jSoEa?#H2j[IW$n^JJY>5"jM*T+C
%%o;5mLBf)"(ab"NFsm0Bo^u2tJ940`EPiW6`#'HSc4[2LH:)_;WOI80H`4S-;ME0a$(.Ea5kJ9)GRAfm7lEHbIf7/KG!>pc=SoK_
%cl\>r^ToK$,t&(-2<g.f*rd(ph.o+3_4!WZ@JG<,Zm$;$=Cs\?)q"*d0EaFs>fGpHc'<c\:(kF];FDpR0<PRtbOH1Kr>oue";A8U
%lF;m/!+It]/7EuD>":N*CoMmEfI<e&Ah!,8?BoAc>(eoRA9B;1[n"2">2uT]>TZU#36@Vinb*;%en(\%jnD.h0.HL"?1^A%r.OOH
%g]_h@DCp93D_ue4.&=a+:Dt4G+lt/]pbDo_Y_eD8!)$?@$senAn>t5JEjETrFa02;`$A,=/5$Zdb>$Z,h?nK6ij<4;8eo+(I!SjD
%DEKO<Id!^RI0[6=r]s%DM^ZJS[Yul#g4_-kMGK"%@+j+?opI28afZ3E<"0YJ-g22EeKOC;5uZ42VfL;O#C%8O,2QW"s0&cEgL%Oa
%ro,RqrUW8Pl+_`>2fJ`rf7,aZjk%9IfAHMq^H__q=+Bm$n>h'6iO;&Nj3KsfqsT"3q3Skkm2piQmiOdmnGD,'0E:ehDu]Lp[m0of
%a8c(TcTcmTj1kQOIkZJ,ScaH7X'bo*hu<0_rs,MFWK7~>
%AI9_PrivateDataEnd
