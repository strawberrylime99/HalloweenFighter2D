%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2_head.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 143 152
%%HiResBoundingBox: 0 0 142.5429 151.5403
%%CropBox: 0 0 142.5429 151.5403
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:57:20+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:57:20+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:57:20+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FUt8w&#xA;+ZdC8uaZJqmt3sVjYxbNLKaVbqFRRVnY02VQTitPFNR/5yB85+abqWw/LDy3JdRIeD6xer8Ck9+N&#xA;ViTxHqP/ALHImYDKgOaQXXkr87/McjDXfOMyFq87SwdxF8isP1eL8DlRzLxBL3/5xwMrepe6vJNN&#xA;Q1LTQh+tf2uWR8UrxoGX/nHwRSFrTUpYpE+yxZGI+TIB+vHxSvGs/QP5weVXDaP5pvOCbpDJJIYf&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:cc5de35a-9675-2747-9ccc-f99b554d78b7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:cc5de35a-9675-2747-9ccc-f99b554d78b7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ad1d1ccb-b4b0-474f-b605-2ebb6a15f7a1</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cc5de35a-9675-2747-9ccc-f99b554d78b7</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:57:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>71.778552</stDim:w>
            <stDim:h>51.380523</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -151.54 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 151.54 li
142.543 151.54 li
142.543 0 li
cp
clp
136.352 96.1797 mo
135.668 95.8989 134.35 96.0703 133.784 95.7314 cv
132.682 95.0727 132.682 94.105 131.856 93.3232 cv
131.241 92.7417 130.675 92.3178 130.084 92.0449 cv
129.618 90.7871 129.016 90.2622 126.673 89.4389 cv
121.748 87.7075 123.048 84.6919 123.819 80.7016 cv
124.319 78.1113 124.639 75.5005 124.801 72.8672 cv
124.937 70.6567 124.971 68.4228 124.963 66.1811 cv
128.122 60.8164 126.976 53.7676 125.928 47.8784 cv
125.379 44.7905 123.934 42.0869 122.651 39.2715 cv
122.508 38.2353 122.365 37.1972 122.219 36.1709 cv
122.063 35.0752 121.444 34.331 120.665 33.9053 cv
119.969 31.8638 119.127 29.915 117.428 28.5879 cv
117.099 28.331 116.751 28.188 116.406 28.1333 cv
114.83 24.3887 111.298 21.0928 108.598 18.4204 cv
104.377 14.2407 99.5086 10.3838 94.1873 7.69579 cv
83.3709 2.23192 70.7122 2.24852 58.9412 3.50829 cv
47.0217 4.78417 36.0257 8.8159 26.5559 16.2729 cv
22.3967 19.5483 18.5945 23.3008 15.3587 27.4951 cv
12.7283 30.9043 9.46364 34.9419 8.49977 39.2812 cv
4.37526 45.103 2.24684 51.6396 2.12477 58.8891 cv
2.05202 63.185 3.011 67.2856 3.81862 71.4726 cv
4.53786 75.2031 3.95436 80.1118 5.72683 83.5571 cv
5.76784 91.4043 4.67946 99.7427 6.66042 107.359 cv
8.553 114.634 12.1917 122.078 15.5462 128.792 cv
22.1238 141.959 34.7132 145.23 48.2708 147.296 cv
63.3421 149.592 79.4646 151.174 93.8103 144.796 cv
104.652 139.977 114.881 130.562 119.548 119.338 cv
121.089 120.257 123.14 120.48 125.113 119.715 cv
130.189 117.748 134.021 111.292 136.649 106.849 cv
138.646 103.47 141.507 98.2939 136.352 96.1797 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.737255 .772549 .654902 rgb
f
59.1746 130.007 mo
54.5716 128.485 49.3806 131.418 46.3567 134.73 cv
45.4973 135.671 46.9324 136.946 47.8196 136.048 cv
49.4876 134.361 51.3269 133.292 53.5896 132.611 cv
55.4832 132.04 57.6077 131.893 59.3469 130.942 cv
59.7766 130.707 59.5535 130.133 59.1746 130.007 cv
cp
.619608 .627451 .529412 rgb
f
38.3499 103.752 mo
38.01 103.791 37.7014 103.975 37.5515 104.353 cv
37.4285 104.664 37.2879 104.963 37.1472 105.262 cv
37.0457 105.38 36.948 105.5 36.8445 105.619 cv
36.301 106.242 35.5452 106.743 34.9837 107.362 cv
34.2634 107.842 33.5506 108.354 32.7698 108.665 cv
32.4959 108.773 32.2185 108.851 31.9422 108.933 cv
30.6702 108.661 29.3367 108.822 28.0056 108.925 cv
27.9978 108.682 27.8694 108.444 27.6135 108.289 cv
25.865 107.226 23.3758 107.487 21.3108 107.021 cv
20.7166 106.509 20.0564 106.457 19.2825 106.273 cv
19.0325 106.214 18.7952 106.136 18.5554 106.062 cv
17.8919 105.764 17.2542 105.426 16.6389 105.049 cv
16.511 104.923 16.3718 104.794 16.2508 104.674 cv
15.2122 103.649 14.3279 102.506 13.5447 101.277 cv
13.1741 100.695 12.4837 100.924 12.2517 101.399 cv
12.0349 101.093 11.8377 100.77 11.6472 100.442 cv
11.6492 100.443 11.6511 100.444 11.6536 100.444 cv
11.9798 100.532 12.2717 100.239 12.2649 99.9258 cv
12.2298 98.4165 10.9509 97.0879 10.3645 95.7236 cv
9.86257 94.5542 9.54714 93.376 9.37526 92.1587 cv
9.53835 92.1162 9.68239 92.0078 9.70046 91.8315 cv
9.97829 89.06 9.95436 86.0469 12.6746 84.5351 cv
12.5676 84.768 12.469 85.0112 12.388 85.2754 cv
12.2761 85.6396 12.741 85.9072 13.0315 85.7187 cv
18.7659 82 22.8992 83.9038 27.802 87.9013 cv
30.7825 90.3315 33.616 92.9287 35.8123 96.0722 cv
36.4861 97.2002 37.1179 98.3125 37.6131 99.4819 cv
37.1746 99.6889 36.9002 100.191 37.26 100.718 cv
37.8538 101.587 38.2674 102.629 38.3938 103.694 cv
38.3801 103.714 38.3635 103.733 38.3499 103.752 cv
cp
40.2508 101.319 mo
39.8635 98.1806 38.5584 94.9887 35.9553 93.2656 cv
32.7547 88.7436 28.0886 84.6797 23.2893 82.5444 cv
20.013 81.0869 15.2258 80.6767 13.1155 83.7446 cv
12.9973 83.5097 12.7327 83.3305 12.4426 83.415 cv
12.156 83.4985 11.8904 83.6162 11.6287 83.7392 cv
9.44655 82.5488 8.48317 86.1167 8.19899 87.7173 cv
7.51784 91.5522 7.67556 95.2436 9.27907 98.7793 cv
9.08034 98.9956 8.97487 99.3032 9.08474 99.6909 cv
9.97634 102.84 11.7459 105.791 14.4383 107.71 cv
15.1194 108.196 16.1648 108.771 17.261 109.137 cv
17.6511 109.456 18.0593 109.772 18.4837 110.082 cv
17.8811 109.81 17.281 109.529 16.7039 109.198 cv
15.0984 108.277 13.6287 107.164 12.261 105.92 cv
11.8469 105.542 11.28 106.177 11.6809 106.564 cv
14.1624 108.962 17.51 111.582 20.9837 112.229 cv
21.2239 112.274 21.4055 112.137 21.4793 111.956 cv
22.7302 112.607 24.0437 113.115 25.3684 113.381 cv
28.6619 114.502 32.6336 115.722 35.739 113.683 cv
36.0408 113.485 35.9007 112.914 35.5066 112.974 cv
31.7283 113.544 28.5774 113.071 24.9426 111.931 cv
24.7937 111.884 24.6721 111.903 24.5662 111.947 cv
24.0349 111.771 23.5066 111.59 22.9866 111.383 cv
25.8162 112.063 28.8133 112.682 31.7146 112.291 cv
31.6853 112.343 31.6467 112.385 31.6179 112.438 cv
31.4519 112.745 31.7097 113.064 32.0261 113.07 cv
34.0608 113.111 35.7273 111.844 37.0237 110.174 cv
37.2234 110.019 37.429 109.869 37.6043 109.696 cv
39.7122 109.566 40.8616 107.549 41.1614 105.629 cv
41.4109 104.032 41.0613 102.559 40.2508 101.319 cv
cp
f
36.9568 112.285 mo
36.9265 112.286 36.929 112.333 36.9592 112.332 cv
36.9895 112.33 36.9871 112.283 36.9568 112.285 cv
cp
f
107.149 101.246 mo
107.226 100.997 106.889 100.769 106.684 100.926 cv
105.52 101.813 104.739 103.193 103.795 104.301 cv
102.747 105.529 101.625 106.687 100.448 107.792 cv
100.379 107.856 100.343 107.926 100.323 107.996 cv
98.2581 109.851 96.2302 111.629 93.7512 113.035 cv
90.6897 114.77 87.408 116.068 84.1384 117.351 cv
83.5808 117.57 83.8655 118.453 84.4343 118.241 cv
90.3557 116.027 98.2293 113.43 101.86 107.789 cv
102.851 106.838 103.812 105.857 104.708 104.813 cv
105.624 103.747 106.724 102.612 107.149 101.246 cv
cp
f
129.544 104.528 mo
128.491 104.965 128.026 106.091 127.146 106.782 cv
126.523 107.272 125.841 107.668 125.17 108.082 cv
125.097 108.074 125.027 108.07 124.95 108.056 cv
124.7 108.01 124.589 108.235 124.648 108.416 cv
124.441 108.552 124.235 108.688 124.036 108.837 cv
123.727 109.07 123.96 109.498 124.32 109.423 cv
124.992 109.282 125.667 109.044 126.305 108.739 cv
128.054 108.496 129.403 106.812 130.113 105.192 cv
130.264 104.847 129.952 104.358 129.544 104.528 cv
cp
f
128.746 90.6426 mo
128.817 90.2886 128.623 89.8984 128.242 89.8271 cv
128.045 89.7895 127.856 89.8091 127.673 89.8491 cv
127.411 89.4468 126.874 89.2168 126.433 89.563 cv
125.67 90.1631 124.947 90.9004 124.537 91.7939 cv
124.158 92.6216 125.129 93.7256 125.958 93.0727 cv
126.119 92.9453 126.29 92.8291 126.455 92.7046 cv
126.673 92.9316 127.003 93.0708 127.326 92.9897 cv
127.342 92.9858 127.344 92.9775 127.344 92.9697 cv
127.354 92.9853 127.369 93.0063 127.403 93.0444 cv
127.873 93.5791 128.653 92.9209 128.484 92.3374 cv
128.426 92.1386 128.331 91.9726 128.213 91.833 cv
128.38 91.4995 128.533 91.1592 128.706 90.8149 cv
128.721 90.7851 128.718 90.7514 128.728 90.7202 cv
128.739 90.6938 128.757 90.6748 128.766 90.6469 cv
128.76 90.6455 128.753 90.644 128.746 90.6426 cv
cp
f
117.377 118.237 mo
117.313 118.24 117.318 118.34 117.382 118.336 cv
117.447 118.333 117.442 118.233 117.377 118.237 cv
cp
f
54.1472 3.76512 mo
51.9412 4.04344 49.7009 4.23485 47.5139 4.64159 cv
46.2473 4.87743 44.7234 5.24071 44.2405 6.56249 cv
44.1082 6.9243 44.3704 7.23436 44.7488 7.15672 cv
46.1419 6.8701 47.3333 5.91942 48.7664 5.5952 cv
50.5506 5.19188 52.3899 4.97313 54.1946 4.67772 cv
54.7639 4.58446 54.7385 3.69042 54.1472 3.76512 cv
cp
f
103.763 129.97 mo
103.742 129.998 103.749 130.025 103.738 130.053 cv
102.533 131.203 101.322 132.346 100.131 133.51 cv
100.012 133.424 99.8587 133.378 99.6809 133.416 cv
98.9495 133.573 98.2171 133.801 97.4841 134.058 cv
97.8557 133.77 98.2258 133.479 98.5945 133.186 cv
98.7166 133.385 99.0359 133.488 99.2571 133.376 cv
101.056 132.461 102.5 130.896 103.935 129.506 cv
104.312 129.142 104.677 128.766 105.048 128.396 cv
104.613 128.916 104.181 129.439 103.763 129.97 cv
cp
99.47 136.695 mo
99.2742 136.769 99.0794 136.846 98.8836 136.921 cv
99.4978 136.271 100.126 135.636 100.765 135.013 cv
100.815 135.23 100.887 135.438 101.006 135.614 cv
100.499 135.981 99.9822 136.335 99.47 136.695 cv
cp
98.0315 137.249 mo
95.093 138.382 92.1912 139.586 89.346 140.969 cv
87.8884 141.678 86.3328 142.386 84.7996 143.154 cv
83.1179 143.452 81.428 143.617 79.7034 143.671 cv
85.3635 142.441 91.3821 140.539 95.3787 136.964 cv
96.2742 136.569 97.1507 136.148 97.9856 135.69 cv
97.8723 135.81 97.7542 135.924 97.6423 136.045 cv
97.2044 136.52 97.5549 137.109 98.0315 137.249 cv
cp
57.8601 144.177 mo
58.2571 143.934 58.5637 143.603 58.7215 143.171 cv
59.2615 143.626 59.8938 144.021 60.5842 144.347 cv
59.6785 144.305 58.7698 144.247 57.8601 144.177 cv
cp
118.47 90.2964 mo
118.099 91.2207 117.714 92.1518 117.33 93.0884 cv
117.525 92.1831 117.589 91.2143 117.669 90.2534 cv
117.935 87.0776 118.056 83.8862 118.032 80.6997 cv
118.027 80.0254 117.199 79.9682 116.89 80.4136 cv
116.977 79.8022 117.065 79.1972 117.156 78.604 cv
117.366 77.2246 117.553 75.8398 117.727 74.4526 cv
117.747 74.5303 117.761 74.6098 117.782 74.687 cv
117.788 74.7094 117.802 74.7256 117.811 74.7461 cv
117.802 75.3003 117.806 75.855 117.828 76.4101 cv
117.841 76.7422 118.355 76.8838 118.491 76.5532 cv
118.587 76.3203 118.665 76.0786 118.753 75.8423 cv
118.84 80.6943 118.996 85.4844 118.47 90.2964 cv
cp
112.719 27.9775 mo
113.186 28.6416 113.641 29.3022 114.044 29.9599 cv
114.869 31.3047 115.657 32.6699 116.43 34.0434 cv
116.875 35.5039 117.493 36.9199 118.07 38.3423 cv
118.026 38.4429 117.996 38.5522 118.004 38.6787 cv
118.059 39.5722 118.183 40.4599 118.345 41.3442 cv
116.754 36.7153 114.676 32.2158 112.719 27.9775 cv
cp
105.609 23.041 mo
105.638 23.0596 105.666 23.0791 105.695 23.0981 cv
107.664 25.7602 109.452 28.5849 110.971 31.5327 cv
109.191 28.5415 107.243 25.686 105.609 23.041 cv
cp
104.356 23.3452 mo
103.418 22.2514 102.448 21.186 101.425 20.1816 cv
102.625 21.0317 103.838 21.8628 105.062 22.6758 cv
104.709 22.6704 104.363 22.9673 104.356 23.3452 cv
cp
118.594 62.2846 mo
118.482 62.2226 118.36 62.1943 118.239 62.1924 cv
118.155 61.5542 118.066 60.9043 117.99 60.2768 cv
117.454 55.8779 116.809 51.4951 116.111 47.1201 cv
116.187 47.0405 116.24 46.9282 116.24 46.7793 cv
116.243 46.4424 116.219 46.1064 116.201 45.77 cv
116.411 46.3711 116.631 46.9692 116.867 47.562 cv
117 47.8945 117.427 48.0591 117.753 47.9765 cv
117.853 48.3769 117.942 48.7832 118.038 49.1855 cv
117.662 49.2002 117.28 49.4521 117.357 49.8774 cv
118.097 53.9853 118.551 58.1128 118.594 62.2846 cv
cp
94.9129 15.4697 mo
92.8074 13.8179 90.4959 12.334 88.0769 10.9702 cv
88.6629 11.2099 89.2664 11.4233 89.8738 11.6279 cv
91.5711 12.8916 93.262 14.1655 94.9553 15.436 cv
94.9422 15.4482 94.9251 15.4565 94.9129 15.4697 cv
cp
83.9124 8.75877 mo
83.9822 8.52733 83.9065 8.23045 83.6853 8.09569 cv
82.1214 7.14256 80.2923 6.51512 78.367 6.07909 cv
78.1555 5.97899 77.9446 5.87938 77.7337 5.78026 cv
79.7571 6.23338 81.7405 6.79735 83.6365 7.50829 cv
83.5847 7.63915 83.5906 7.78905 83.6897 7.91991 cv
84.137 8.51024 84.6663 9.00975 85.2527 9.44432 cv
84.8074 9.21336 84.3611 8.98436 83.9124 8.75877 cv
cp
68.3914 4.92137 mo
68.0574 4.89598 67.8621 5.15331 67.8142 5.44237 cv
65.6345 5.11913 63.388 5.01122 61.1248 5.06151 cv
61.198 5.01659 61.2727 4.97411 61.343 4.92137 cv
61.5115 4.7954 61.4739 4.52684 61.261 4.47508 cv
61.2488 4.47215 61.2361 4.47167 61.2234 4.46874 cv
65.0608 4.28124 69.1507 4.4204 73.1922 4.97069 cv
73.4505 5.10106 73.7063 5.24413 73.9646 5.37743 cv
72.0369 5.16942 70.1282 5.05321 68.3914 4.92137 cv
cp
121.102 78.6416 mo
121.11 78.1557 121.127 77.666 121.143 77.1758 cv
121.196 77.456 121.317 77.6987 121.489 77.895 cv
121.347 78.582 121.204 79.2685 121.061 79.9546 cv
121.072 79.5161 121.094 79.081 121.102 78.6416 cv
cp
120.391 59.9067 mo
120.548 60.5805 120.764 61.1992 121.008 61.8315 cv
120.808 61.7217 120.568 61.7129 120.38 61.8271 cv
120.342 61.1802 120.295 60.5346 120.237 59.8901 cv
120.287 59.9048 120.34 59.9116 120.391 59.9067 cv
cp
121.405 62.8725 mo
121.452 63.0029 121.498 63.1435 121.545 63.2783 cv
121.666 67.54 121.652 71.8423 121.185 76.0517 cv
121.371 71.6719 121.753 67.1714 121.405 62.8725 cv
cp
120.984 54.7407 mo
121.099 55.7705 121.218 56.7925 121.304 57.7861 cv
121.167 57.7373 121.025 57.7319 120.888 57.7602 cv
120.976 56.7544 121.001 55.7475 120.984 54.7407 cv
cp
138.951 101.284 mo
138.803 100.661 138.361 100.214 137.776 99.9731 cv
137.597 99.8994 137.404 99.855 137.21 99.8276 cv
137.183 99.7822 137.157 99.7368 137.107 99.6723 cv
136.976 99.209 136.445 98.8271 136.024 98.6601 cv
135.859 98.5942 135.55 98.5957 135.247 98.5976 cv
135.118 98.3344 134.967 98.0674 134.794 97.789 cv
134.586 97.4511 133.309 95.7929 133.344 95.7178 cv
133.54 95.3076 133.481 94.7451 133.112 94.4424 cv
131.79 93.3594 131.183 93.7085 129.517 93.5893 cv
129.457 93.5849 129.403 93.6113 129.348 93.6323 cv
129.324 93.3803 129.11 93.1328 128.809 93.2456 cv
128.416 93.3926 127.947 93.4956 127.615 93.7563 cv
127.362 93.9551 127.485 94.3252 127.805 94.3369 cv
128.195 94.3511 128.599 94.1899 128.977 94.0761 cv
128.96 94.1684 128.963 94.2612 129.002 94.3442 cv
129.077 94.5068 129.152 94.6694 129.227 94.832 cv
129.387 95.1772 129.72 95.5146 130.145 95.4575 cv
130.449 95.4165 130.66 95.3877 130.836 95.3501 cv
130.903 95.4834 130.995 95.5981 131.113 95.6977 cv
130.973 96.6816 131.42 97.707 132.199 98.2832 cv
132.328 98.8989 132.281 99.6382 132.662 100.118 cv
132.792 100.282 132.967 100.423 133.156 100.55 cv
133.014 101.027 133.18 101.543 133.604 101.862 cv
133.6 101.927 133.594 101.987 133.59 102.054 cv
133.559 102.576 133.872 102.921 134.279 103.103 cv
134.212 103.233 134.137 103.355 134.104 103.514 cv
133.754 104.184 134.323 104.805 134.929 104.815 cv
134.95 104.839 134.972 104.86 134.994 104.883 cv
134.478 106.058 133.947 107.199 133.327 108.314 cv
133.234 108.238 133.099 108.215 132.963 108.286 cv
131.757 108.909 130.781 110.29 129.834 111.256 cv
129.472 111.625 129.106 111.986 128.736 112.342 cv
128.03 112.763 127.476 113.403 126.878 113.994 cv
126.738 114.107 126.594 114.217 126.453 114.329 cv
126.265 114.383 126.077 114.439 125.887 114.485 cv
125.356 114.612 124.834 114.634 124.37 114.938 cv
124.178 115.064 124.183 115.29 124.301 115.44 cv
123.978 115.487 123.662 115.483 123.349 115.444 cv
123.425 115.121 123.19 114.72 122.741 114.845 cv
122.494 114.914 122.248 114.988 122.001 115.056 cv
121.463 114.826 120.927 114.522 120.384 114.187 cv
120.206 114.077 120.029 114.052 119.855 114.061 cv
119.441 113.513 119.133 112.9 119.042 112.191 cv
118.933 111.341 117.532 111.076 117.422 112.057 cv
117.326 112.908 117.359 113.769 117.551 114.586 cv
117.356 114.308 117.06 114.102 116.67 114.038 cv
116.437 113.34 115.171 113.315 115.048 114.158 cv
114.915 115.07 114.77 115.983 114.653 116.898 cv
114.045 118.146 113.485 119.379 112.804 120.574 cv
112.682 120.353 112.361 120.28 112.142 120.489 cv
111.711 120.897 111.307 121.336 110.911 121.785 cv
112.278 119.62 113.452 117.358 114.286 115.031 cv
114.355 114.837 114.168 114.709 113.997 114.72 cv
114.745 113.227 115.388 111.616 116.043 110.351 cv
116.097 110.247 116.111 110.149 116.108 110.055 cv
116.599 109.046 117.09 108.036 117.581 107.027 cv
117.773 106.633 117.491 106.336 117.174 106.296 cv
117.712 104.856 118.176 103.4 118.61 101.936 cv
118.378 102.791 118.269 103.618 118.264 104.507 cv
118.26 105.166 119.217 105.189 119.376 104.599 cv
119.672 103.502 120.059 102.475 120.55 101.469 cv
120.554 101.914 121.088 102.042 121.337 101.781 cv
121.34 101.784 121.342 101.786 121.344 101.789 cv
122.238 100.946 122.881 99.7036 123.411 98.4126 cv
123 99.6621 122.308 100.772 121.719 102.083 cv
121.439 102.704 122.394 103.19 122.656 102.567 cv
123.172 101.342 123.491 100.047 124.03 98.8296 cv
124.441 97.8994 124.784 97.1821 124.623 96.1484 cv
124.599 95.997 124.504 95.8779 124.386 95.8095 cv
124.459 95.6098 124.531 95.4087 124.603 95.2212 cv
124.771 94.7812 124.499 94.4009 124.161 94.2622 cv
124.182 94.1274 124.199 93.9922 124.205 93.854 cv
124.217 93.6059 123.887 93.4604 123.698 93.5967 cv
122.724 94.2969 122.224 95.4907 121.685 96.5312 cv
121.334 97.2099 120.998 97.8974 120.656 98.581 cv
120.183 99.2456 119.805 100.021 119.48 100.824 cv
119.452 100.739 119.414 100.656 119.348 100.577 cv
119.269 100.48 119.165 100.419 119.056 100.377 cv
119.137 100.09 119.226 99.8047 119.303 99.5156 cv
119.623 99.5615 119.977 99.3755 119.937 98.9599 cv
119.892 98.4927 li
120.524 98.4131 120.47 97.4326 119.826 97.4311 cv
119.984 96.7539 120.138 96.0747 120.281 95.3921 cv
122.536 91.7304 124.101 86.0654 123.528 81.4087 cv
125.126 75.6543 127.279 68.352 125.564 63.0224 cv
125.605 62.0459 125.633 61.0664 125.629 60.081 cv
125.611 55.625 125.93 49.893 123.776 45.7729 cv
123.985 45.5762 124.103 45.2842 123.991 44.9189 cv
123.143 42.1284 122.45 39.2485 121.467 36.5034 cv
120.902 34.9263 120.094 33.4404 118.5 32.8559 cv
118.322 32.522 118.129 32.1943 117.949 31.8613 cv
118.303 31.56 118.463 30.9922 118.038 30.561 cv
117.433 29.9473 116.819 29.3428 116.214 28.73 cv
116.186 28.6831 116.161 28.6343 116.134 28.5874 cv
114.156 25.1748 112.251 20.9277 108.857 18.75 cv
108.337 18.4165 107.832 19.0361 107.949 19.5259 cv
107.983 19.6631 108.037 19.7954 108.077 19.9316 cv
106.792 18.6601 105.429 17.4673 103.999 16.3574 cv
103.167 15.5234 102.308 14.7197 101.407 13.9907 cv
101.462 13.8794 101.489 13.7573 101.435 13.6304 cv
101.404 13.5581 101.357 13.4956 101.324 13.4253 cv
101.326 13.3227 101.305 13.2153 101.25 13.1055 cv
101.103 12.8135 100.908 12.5615 100.692 12.3296 cv
99.0427 9.97215 96.096 8.48583 93.5965 7.25047 cv
89.9202 5.43358 85.9378 4.18749 81.9231 3.40233 cv
80.6355 3.15038 80.2024 5.10301 81.4846 5.39403 cv
82.1736 5.55028 82.8489 5.73485 83.5222 5.9243 cv
83.4749 6.01219 83.4436 6.1079 83.4212 6.20799 cv
80.3992 5.1577 77.2571 4.54833 74.0276 4.01756 cv
73.9114 3.96092 73.7923 3.90477 73.6765 3.84862 cv
73.4695 3.74754 73.28 3.77733 73.1267 3.86669 cv
68.345 3.06835 64.4739 2.14696 59.7615 3.9619 cv
59.5501 4.04344 59.5291 4.30126 59.6507 4.43993 cv
59.0423 4.52147 58.4324 4.66795 57.8328 4.74803 cv
56.5222 4.92235 55.2068 5.00585 53.8855 5.02831 cv
53.534 5.03465 53.4602 5.39501 53.6096 5.62108 cv
52.0755 5.79295 50.5691 5.98192 49.1131 6.15868 cv
48.4309 6.2412 48.4729 7.29881 49.1697 7.23534 cv
56.8606 6.53465 64.5974 7.93358 72.2156 7.26024 cv
72.4968 7.23583 72.5921 7.01219 72.551 6.80419 cv
72.7381 6.83592 72.9246 6.87254 73.1116 6.90575 cv
74.1365 7.09667 75.157 7.30956 76.1629 7.58495 cv
77.7615 8.02293 79.2864 8.65526 80.8338 9.22997 cv
85.8367 12.188 90.8245 15.2676 96.0725 17.4082 cv
96.2112 17.4648 96.3504 17.4375 96.4573 17.3667 cv
102.418 22.0473 106.694 27.5342 110.157 34.0102 cv
110.43 34.5796 110.713 35.1416 110.97 35.7212 cv
112.323 38.7763 113.271 42.0058 114.524 45.0918 cv
115.215 50.1714 115.811 55.2602 116.266 60.3667 cv
116.508 63.0747 116.568 65.8813 116.805 68.6484 cv
116.305 71.8276 115.762 74.9985 115.219 78.1777 cv
114.459 82.6362 113.104 87.4219 113.218 91.936 cv
113.23 92.4136 113.945 92.5835 114.147 92.1362 cv
115.615 88.8838 116.224 85.0376 116.752 81.372 cv
116.639 85.771 116.426 90.6582 114.858 94.7949 cv
114.771 94.8266 114.701 94.8916 114.69 94.9956 cv
114.676 95.1264 114.661 95.2573 114.646 95.3882 cv
114.593 95.8779 115.107 96.373 115.581 96.0322 cv
115.976 95.749 116.274 95.4194 116.523 95.0664 cv
116.521 95.084 116.528 95.0991 116.528 95.1157 cv
115.932 96.688 115.412 98.269 115.103 99.8496 cv
115.056 100.083 115.353 100.165 115.474 99.9839 cv
116.424 98.5552 117.173 96.9219 117.831 95.2275 cv
118.094 94.7978 118.355 94.3554 118.609 93.8911 cv
118.714 93.9414 118.824 93.9702 118.939 93.98 cv
118.836 94.167 118.746 94.3579 118.635 94.5425 cv
118.561 94.665 118.528 94.7827 118.513 94.8965 cv
118.467 94.9804 118.436 95.0766 118.448 95.1992 cv
118.542 96.1899 118.637 97.1802 118.732 98.1709 cv
118.105 100.787 117.398 103.383 116.665 105.973 cv
116.634 105.885 116.615 105.796 116.569 105.711 cv
116.54 105.659 116.487 105.634 116.431 105.63 cv
116.596 105.224 116.744 104.81 116.886 104.394 cv
116.926 104.363 116.942 104.318 116.931 104.27 cv
116.943 104.234 116.958 104.201 116.969 104.166 cv
117.041 103.951 116.697 103.877 116.626 104.09 cv
116.394 104.791 116.115 105.47 115.816 106.142 cv
116.456 103.49 117.121 100.843 117.608 98.1577 cv
117.668 97.8276 117.199 97.7314 117.104 98.0469 cv
116.247 100.876 115.599 103.76 114.902 106.632 cv
114.806 107.026 115.285 107.203 115.532 106.997 cv
115.599 107.09 115.751 107.123 115.818 106.989 cv
115.875 106.874 115.922 106.753 115.976 106.637 cv
116.068 106.462 116.178 106.305 116.318 106.158 cv
116.39 106.42 116.418 106.676 116.394 106.931 cv
116.22 107.539 116.055 108.148 115.878 108.755 cv
115.622 109.499 li
115.379 109.436 115.108 109.502 114.961 109.791 cv
113.294 113.064 111.89 116.415 110.311 119.716 cv
110.194 119.962 110.553 120.147 110.687 119.91 cv
111.196 119.001 113.404 116.591 113.323 116.069 cv
113.485 117.117 111.701 119.755 111.069 120.754 cv
110.345 121.899 109.536 122.982 108.693 124.039 cv
108.508 123.586 107.879 123.297 107.441 123.768 cv
105.936 125.381 104.397 126.96 102.808 128.491 cv
102.576 128.715 102.335 128.934 102.096 129.154 cv
97.7151 132.044 93.1653 134.755 88.9959 137.869 cv
88.8435 137.931 88.6975 138.003 88.5442 138.063 cv
86.3484 138.923 84.0076 139.378 81.845 140.303 cv
81.3338 140.522 81.4773 141.21 82.0213 141.239 cv
82.1155 141.244 82.2102 141.24 82.304 141.242 cv
79.5667 142.099 76.7815 142.78 73.9534 143.305 cv
73.7981 143.334 73.6819 143.408 73.5828 143.498 cv
72.949 143.521 72.3215 143.586 71.7078 143.734 cv
71.4451 143.797 71.3152 144.105 71.367 144.36 cv
70.6824 144.381 69.9973 144.394 69.3123 144.409 cv
69.8816 144.071 70.3836 143.65 70.7693 143.115 cv
71.1404 143.056 71.4905 142.885 71.7429 142.575 cv
72.2761 141.921 72.6741 141.147 72.9353 140.333 cv
73.3967 140.235 73.7844 139.834 73.9978 139.415 cv
74.2947 138.832 73.7229 138.405 73.2507 138.484 cv
73.2258 137.276 71.5916 136.87 70.8626 137.685 cv
70.8606 137.683 70.8591 137.68 70.8572 137.678 cv
70.7947 137.768 70.741 137.847 70.6814 137.933 cv
70.6746 137.947 70.6629 137.954 70.656 137.968 cv
70.6531 137.975 70.6467 137.982 70.6428 137.989 cv
70.5545 138.119 70.4627 138.251 70.3787 138.374 cv
70.1819 138.61 69.9485 138.836 69.7717 139.045 cv
69.4153 139.464 69.0359 139.866 68.7639 140.347 cv
68.614 140.611 68.5828 140.903 68.6384 141.179 cv
67.4817 141.599 66.3479 142.089 65.0759 142.187 cv
62.7722 142.365 60.5198 141.43 58.5676 140.29 cv
57.7215 139.794 57.0095 140.856 57.3997 141.586 cv
57.4202 141.625 57.4529 141.659 57.4749 141.697 cv
57.3884 141.778 57.2976 141.866 57.179 141.957 cv
56.9563 142.126 56.7273 142.247 56.4973 142.351 cv
56.6072 141.861 56.2205 141.267 55.6516 141.524 cv
54.2937 142.139 52.9158 142.355 51.4509 142.114 cv
51.3914 142.013 51.3147 141.917 51.2009 141.842 cv
50.4563 141.349 49.4553 141.314 48.6555 140.894 cv
47.7835 140.434 47.0945 139.761 46.5667 138.935 cv
46.033 138.1 44.8235 138.921 45.2932 139.771 cv
45.8816 140.836 46.7151 141.708 47.7429 142.359 cv
48.0193 142.534 48.3425 142.713 48.6843 142.868 cv
48.6399 142.945 48.5916 143.018 48.5681 143.113 cv
47.0359 142.742 45.5125 142.326 44.0042 141.81 cv
43.4983 141.637 43.0764 141.88 42.8299 142.262 cv
38.6126 141.094 34.4529 139.667 30.3694 138.112 cv
29.8894 137.929 29.4773 138.239 29.3621 138.613 cv
28.6155 138.215 27.8762 137.799 27.1433 137.362 cv
26.3352 136.881 25.7493 138.128 26.4871 138.633 cv
30.781 141.571 37.7942 146.179 43.2986 145.391 cv
45.8425 146.215 48.4207 146.773 50.9495 146.887 cv
56.2757 148.559 62.073 149.592 67.199 148.446 cv
67.492 148.473 67.7883 148.493 68.0877 148.5 cv
68.0994 148.504 68.1106 148.508 68.1223 148.512 cv
68.281 148.565 68.4241 148.551 68.5574 148.511 cv
69.9563 148.514 71.3792 148.376 72.596 148.369 cv
74.1321 148.359 76.0056 148.539 77.6829 148.28 cv
77.5432 148.726 77.9841 149.185 78.4856 149.063 cv
80.4451 148.586 82.2766 147.684 84.0628 146.673 cv
84.7127 146.396 85.3318 146.054 85.9007 145.614 cv
85.9119 145.605 85.9177 145.594 85.9285 145.585 cv
86.177 145.437 86.426 145.288 86.6746 145.141 cv
87.1799 145.025 87.6848 144.907 88.1887 144.785 cv
87.947 145.268 88.3645 145.864 88.9934 145.729 cv
96.6209 144.091 102.981 139.034 108.393 133.42 cv
110.295 131.869 112.038 130.09 113.632 128.304 cv
115.95 125.705 118.032 122.578 117.75 118.968 cv
117.719 118.579 117.293 118.262 116.922 118.311 cv
116.877 118.239 116.824 118.176 116.761 118.127 cv
116.749 117.734 116.736 117.342 116.724 116.95 cv
117.493 116.792 117.856 116.123 117.834 115.458 cv
118.035 115.957 118.299 116.435 118.649 116.869 cv
118.946 117.238 119.3 117.592 119.688 117.908 cv
119.926 118.122 120.186 118.304 120.461 118.435 cv
121.367 118.959 122.397 119.216 123.424 118.888 cv
123.759 118.782 123.971 118.58 124.099 118.34 cv
124.706 118.371 125.337 118.291 125.998 118.065 cv
127.727 117.474 129.727 115.642 130.237 113.715 cv
131.152 112.741 131.997 111.687 132.835 110.797 cv
133.08 110.538 133.08 110.237 132.958 109.99 cv
133.012 109.89 133.08 109.793 133.127 109.691 cv
134.239 108.35 135.246 106.94 136.059 105.414 cv
136.392 105.434 136.746 105.339 137.091 105.071 cv
138.161 104.239 139.294 102.735 138.951 101.284 cv
cp
f
121.622 103.662 mo
121.558 103.665 121.563 103.765 121.628 103.762 cv
121.692 103.758 121.687 103.659 121.622 103.662 cv
cp
f
104.869 102.444 mo
104.689 102.453 104.703 102.734 104.884 102.725 cv
105.065 102.715 105.051 102.434 104.869 102.444 cv
cp
f
105.011 94.4492 mo
104.947 94.1396 104.766 93.917 104.535 93.7622 cv
104.592 93.457 104.632 93.1484 104.654 92.8379 cv
104.718 92.9575 104.783 93.0781 104.846 93.1968 cv
104.893 93.2856 104.978 93.3037 105.064 93.2964 cv
105.026 93.6806 105.014 94.0615 105.011 94.4492 cv
cp
102.2 91.6455 mo
102.162 91.6318 li
100.368 97.0351 93.7532 101.365 89.0432 104.067 cv
84.554 106.642 79.1668 107.388 74.8518 110.085 cv
74.5784 110.256 74.4358 110.529 74.3977 110.817 cv
73.1936 110.91 71.9949 110.945 70.8152 110.914 cv
70.5715 110.908 70.3621 110.965 70.1804 111.061 cv
67.3665 110.677 64.8987 109.376 63.1209 106.58 cv
62.5916 105.747 61.5427 105.906 61.0481 106.55 cv
60.5999 105.853 60.1892 105.122 59.8064 104.375 cv
59.4168 103.208 59.1306 102.009 58.9607 100.767 cv
59.1707 98.914 59.1541 97.0869 59.2112 95.2553 cv
59.3836 94.4936 59.5979 93.7397 59.8728 92.9961 cv
59.8733 92.9946 59.8738 92.9936 59.8743 92.9927 cv
60.9954 91.6211 62.1697 90.3662 63.5305 89.1762 cv
64.5632 88.2729 66.1121 87.5122 67.1751 86.4966 cv
71.6882 84.0322 76.8528 82.6147 81.8108 81.6836 cv
85.4094 81.0073 90.4617 79.4844 94.0271 80.5928 cv
96.0872 81.2334 97.0359 82.8257 98.4568 84.062 cv
98.9119 84.7168 99.3504 85.3823 99.7522 86.0595 cv
100.525 87.3608 101.097 88.8218 101.863 90.1352 cv
101.89 90.2602 101.918 90.3852 101.946 90.5102 cv
101.985 90.6894 102.126 90.7719 102.281 90.791 cv
102.355 90.8999 102.415 91.0185 102.493 91.124 cv
102.496 91.1274 102.499 91.1289 102.502 91.1323 cv
102.368 91.271 102.254 91.4316 102.2 91.6455 cv
cp
59.9939 116.129 mo
59.6521 118.384 61.8118 123.678 57.7195 123.629 cv
56.9119 123.62 56.4949 124.139 56.4265 124.736 cv
56.3836 124.739 56.3489 124.745 56.3025 124.745 cv
55.534 124.74 55.1985 124.165 54.6555 123.718 cv
54.1131 123.272 54.1765 123.483 53.8338 122.665 cv
53.4817 121.826 53.1297 120.986 52.7786 120.146 cv
52.138 118.618 49.7815 118.93 49.8406 120.702 cv
49.8445 120.818 49.8142 120.933 49.7903 121.047 cv
49.5872 121.242 49.4529 121.518 49.4309 121.864 cv
48.8142 122.8 47.6741 123.699 47.2932 124.591 cv
47.2215 124.76 47.1941 124.943 47.1883 125.127 cv
46.763 124.976 46.301 124.931 45.8455 124.873 cv
45.0344 124.559 44.2659 124.115 43.6458 123.738 cv
43.5701 123.692 43.4939 123.677 43.4177 123.659 cv
43.3225 123.61 43.218 123.583 43.1116 123.57 cv
42.0051 121.811 42.2693 119.695 41.6467 117.585 cv
41.5984 117.421 41.4959 117.323 41.3753 117.269 cv
41.572 115.984 42.0008 114.77 42.8982 113.79 cv
43.4168 113.223 44.0383 112.742 44.5091 112.178 cv
44.6497 112.2 44.7986 112.192 44.9514 112.109 cv
45.1638 111.993 45.3513 111.814 45.531 111.614 cv
45.6228 111.643 45.7298 111.633 45.8406 111.556 cv
47.1394 110.649 48.2996 110.288 49.4763 111.514 cv
50.0628 112.125 50.4041 113.19 51.3181 113.364 cv
51.5086 113.4 51.7049 113.313 51.7966 113.14 cv
51.8045 113.125 51.8069 113.11 51.8137 113.095 cv
51.886 113.222 51.9617 113.348 52.0706 113.472 cv
52.2693 113.696 52.5628 113.613 52.7361 113.424 cv
52.7503 113.437 li
53.4964 112.375 54.0789 111.647 55.4968 111.523 cv
56.7166 111.416 57.8777 111.701 59.0217 112.094 cv
59.0774 112.113 59.1297 112.117 59.1795 112.112 cv
59.5418 112.477 59.8601 112.851 60.075 113.141 cv
60.471 113.674 60.6975 114.249 60.8523 114.842 cv
60.4363 115.003 60.1023 115.414 59.9939 116.129 cv
cp
105.79 92.1177 mo
105.703 91.8569 105.34 91.894 105.271 92.145 cv
105.226 92.3095 105.193 92.4707 105.162 92.6313 cv
104.486 91.0879 103.946 89.4326 103.208 87.9096 cv
102.904 86.3252 102.282 84.7612 101.194 83.7925 cv
99.8801 81.1001 98.6336 78.1294 95.5901 77.1123 cv
91.867 75.8686 86.7605 77.4614 83.052 78.1557 cv
81.3342 78.4775 79.6692 78.8613 78.0486 79.3076 cv
75.5681 79.7378 73.1751 80.4287 70.9837 81.5776 cv
65.5359 83.3872 58.0569 86.4883 57.8416 92.8857 cv
57.8396 92.9511 57.8635 92.9995 57.8963 93.04 cv
57.7356 93.9316 57.6067 94.8471 57.533 95.7627 cv
57.449 96.2109 57.3884 96.667 57.3611 97.1323 cv
57.1995 97.0649 56.9812 97.1328 56.9368 97.332 cv
56.3211 100.086 57.4216 103.145 59.073 105.508 cv
59.4915 106.507 59.9505 107.451 60.4192 108.295 cv
60.5252 108.485 60.6878 108.541 60.845 108.518 cv
60.9993 110 61.4509 111.237 62.1287 112.264 cv
61.512 111.335 60.6492 110.58 59.7088 109.914 cv
58.7146 108.57 57.489 107.436 55.782 107.587 cv
54.1829 107.73 51.9758 109.018 51.532 110.699 cv
50.7893 109.418 49.3391 108.602 47.887 108.167 cv
46.2869 107.688 44.3596 109.102 44.0086 110.75 cv
42.7 111.684 41.1951 113.13 40.5608 114.42 cv
39.5183 116.539 39.99 119.584 40.2957 121.812 cv
40.3274 122.047 40.4783 122.19 40.6541 122.249 cv
40.9246 123.347 41.3767 124.363 42.0676 125.015 cv
42.0823 125.051 42.0886 125.089 42.1067 125.125 cv
42.8181 126.558 44.888 127.823 46.4861 127.37 cv
47.7566 127.767 49.0882 127.789 50.4314 127.077 cv
50.9534 126.8 51.4929 126.327 51.9343 125.759 cv
52.5725 126.478 53.3958 126.801 54.5091 126.26 cv
55.4827 126.868 56.739 127.153 57.5247 126.429 cv
57.6326 126.457 57.7459 126.478 57.8684 126.484 cv
58.4925 126.516 59.075 126.434 59.6135 126.259 cv
59.2849 126.79 58.9719 127.33 58.7508 127.923 cv
58.5188 128.549 59.1013 129.164 59.7283 128.804 cv
62.2307 127.365 63.1375 124.937 63.2825 122.348 cv
63.9666 120.483 64.0144 118.323 63.2747 116.593 cv
63.2488 115.695 63.093 114.791 62.908 114.016 cv
62.7654 113.421 62.5217 112.892 62.2175 112.404 cv
63.4085 114.123 65.2669 115.222 67.5159 115.817 cv
67.2566 116.093 67.2937 116.672 67.7776 116.835 cv
71.0579 117.94 75.0164 119.394 78.2171 117.462 cv
78.3264 117.396 78.3797 117.291 78.3958 117.18 cv
79.6038 117.061 80.8025 116.86 81.9719 116.572 cv
80.5173 117.225 79.0154 117.799 77.4275 118.235 cv
77.2664 118.279 77.3494 118.519 77.5095 118.479 cv
82.6028 117.237 88.031 115.255 92.6072 112.377 cv
95.6355 111.051 98.4964 109.335 100.479 107.023 cv
100.669 106.801 100.449 106.374 100.144 106.511 cv
99.1189 106.971 98.1443 107.542 97.1799 108.134 cv
100.409 105.689 103.643 102.341 104.759 98.6753 cv
104.688 99.1694 104.61 99.6631 104.521 100.157 cv
104.43 100.661 105.204 100.834 105.299 100.329 cv
105.766 97.8471 106.612 94.584 105.79 92.1177 cv
cp
f
74.5579 137.29 mo
72.8142 135.42 72.6555 132.775 70.2825 131.432 cv
67.4148 129.81 63.6765 129.493 60.4861 128.982 cv
59.864 128.883 59.6526 129.8 60.2747 129.944 cv
61.4143 130.208 62.5144 130.535 63.6043 130.904 cv
62.5413 130.631 61.4016 130.571 60.4466 130.648 cv
60.0305 130.681 60.0828 131.253 60.4798 131.28 cv
61.7088 131.363 62.7947 131.709 63.9138 132.21 cv
64.7356 132.578 65.511 133.094 66.3757 133.344 cv
66.5266 133.388 66.7083 133.208 66.635 133.056 cv
66.2532 132.268 65.5974 131.714 64.8186 131.333 cv
65.1638 131.461 65.509 131.59 65.8557 131.727 cv
67.2048 132.262 68.9036 132.703 70.0105 133.708 cv
71.5496 135.108 71.9827 137.199 73.9231 138.208 cv
74.5178 138.518 74.9778 137.741 74.5579 137.29 cv
cp
f
93.2092 140.465 mo
93.0686 140.482 92.9221 140.478 92.78 140.489 cv
93.7415 140.1 94.6887 139.638 95.6126 139.122 cv
95.9065 139.086 96.199 139.034 96.491 138.965 cv
95.3982 139.479 94.3045 139.976 93.2092 140.465 cv
cp
138.445 100.138 mo
138.503 99.5263 138.104 98.9507 137.471 98.7793 cv
137.459 98.8305 li
137.535 98.1328 137.082 97.3218 136.261 97.4165 cv
136.154 97.4546 136.048 97.4927 135.942 97.5307 cv
136.306 96.9844 135.838 96.2641 135.284 96.1274 cv
135.283 96.1274 134.189 94.2671 133.866 94.0395 cv
133.436 93.7353 131.989 94.1689 131.969 93.4761 cv
131.953 92.9126 131.439 92.4995 130.898 92.5112 cv
130.113 92.5278 130.192 91.9165 129.809 91.1396 cv
129.636 90.7886 129.14 90.6914 128.802 90.7895 cv
128.649 90.834 128.496 90.8779 128.343 90.9223 cv
127.907 91.0483 127.763 91.6841 128.123 91.9731 cv
128.302 92.1167 128.609 93.7793 128.792 94.1284 cv
128.966 94.4609 129.372 94.5913 129.718 94.5971 cv
129.855 94.6069 129.991 94.604 130.127 94.604 cv
130.258 95.1255 130.48 95.6186 130.986 95.8994 cv
131.429 96.1455 132.222 95.9228 132.527 96.1113 cv
133.006 96.4072 133.26 97.3408 134.187 97.8017 cv
134.321 98.6689 134.546 99.2788 135.24 99.5615 cv
135.29 99.7304 135.344 99.9199 135.38 100.187 cv
135.422 100.492 135.824 100.597 135.878 100.814 cv
135.987 101.251 135.751 102.582 135.721 102.973 cv
135.677 103.537 136.233 103.92 136.758 103.923 cv
135.969 105.851 134.528 107.821 133.174 109.514 cv
133.04 109.275 132.755 109.165 132.45 109.319 cv
130.7 110.208 129.704 112.067 128.452 113.514 cv
127.115 115.058 125.714 116.365 123.93 117.242 cv
123.268 117.203 122.619 117.614 121.995 117.502 cv
121.276 117.373 120.836 116.485 120.494 115.926 cv
120.149 115.364 119.581 115.293 119.118 115.498 cv
119.035 115.465 118.953 115.432 118.866 115.417 cv
118.839 115.389 118.82 115.357 118.789 115.33 cv
118.601 115.16 118.344 115.164 118.133 115.28 cv
117.095 115.853 117.002 117.234 116.597 118.241 cv
116.448 118.615 116.322 118.987 116.188 119.359 cv
115.794 118.837 115.055 118.632 114.472 119.285 cv
113.832 120.002 113.331 120.835 112.876 121.7 cv
113.214 120.893 113.535 120.086 113.856 119.31 cv
115.394 115.586 116.794 111.792 118.027 107.955 cv
118.492 106.505 116.172 106.004 115.714 107.446 cv
114.479 111.333 113.044 115.08 111.241 118.739 cv
109.81 121.642 107.669 124.558 107.166 127.785 cv
107.107 128.17 107.367 128.588 107.715 128.737 cv
105.777 131.643 101.203 133.829 98.4192 135.439 cv
95.2464 137.273 91.552 138.49 88.6594 140.716 cv
88.3362 140.965 88.4544 141.584 88.927 141.533 cv
89.572 141.463 90.2205 141.317 90.867 141.141 cv
90.8103 141.267 90.7693 141.401 90.7532 141.54 cv
89.9607 141.881 89.159 142.202 88.3631 142.535 cv
86.3548 142.904 84.3093 143.117 82.3313 143.632 cv
80.0105 144.235 77.8074 145.205 75.5076 145.872 cv
74.6365 146.124 73.7503 146.305 72.864 146.476 cv
72.5535 146.262 72.1658 146.188 71.7527 146.384 cv
68.97 147.704 64.5886 146.92 61.3753 146.504 cv
61.262 146.408 61.1306 146.325 60.968 146.271 cv
60.5974 146.147 60.2263 146.023 59.8557 145.9 cv
59.4719 145.772 59.1458 145.92 58.9158 146.176 cv
56.8338 145.843 54.7215 145.404 52.6526 145.557 cv
49.5437 145.072 46.4461 144.43 43.3889 143.94 cv
37.8694 143.057 30.3167 141.263 25.784 138.001 cv
25.533 137.82 25.2092 138.155 25.4549 138.367 cv
30.5261 142.752 36.5115 143.813 42.6995 145.849 cv
46.5364 147.111 50.7781 148.131 54.9739 148.455 cv
57.1048 149.149 59.4939 149.327 61.6218 149.505 cv
64.428 149.741 67.5847 150.216 70.4246 149.665 cv
70.5061 149.677 70.5896 149.674 70.6716 149.684 cv
70.4588 150.086 70.6419 150.617 71.1433 150.753 cv
72.7493 151.19 74.3303 150.722 75.9216 150.356 cv
78.0984 149.856 80.221 149.424 82.45 149.207 cv
83.5808 149.097 83.593 147.781 82.8362 147.361 cv
83.0506 147.297 83.2659 147.236 83.4798 147.172 cv
83.5056 147.774 84.054 148.374 84.8435 148.207 cv
90.5701 146.992 95.8782 145 100.703 141.631 cv
102.048 140.692 103.503 139.627 104.866 138.436 cv
106.944 136.8 109.035 134.67 109.7 132.406 cv
109.853 132.208 109.994 132.002 110.145 131.802 cv
110.248 131.769 110.35 131.74 110.455 131.68 cv
110.461 131.677 110.465 131.673 110.471 131.669 cv
110.901 131.72 111.343 131.596 111.672 131.209 cv
112.865 129.808 113.977 128.355 115.055 126.876 cv
116.257 125.468 117.468 124.004 118.259 122.338 cv
118.247 122.332 118.235 122.326 118.222 122.319 cv
118.348 122.014 118.357 121.705 118.289 121.419 cv
118.641 120.631 118.979 119.81 119.249 118.981 cv
119.412 118.957 119.569 118.875 119.694 118.763 cv
120.212 119.287 120.827 119.691 121.604 119.832 cv
122.018 119.907 122.503 119.881 122.962 119.767 cv
123.127 119.8 123.305 119.806 123.506 119.739 cv
125.818 118.975 127.897 117.636 129.621 115.917 cv
130.42 115.122 131.301 114.147 132 113.082 cv
132.09 113.043 132.178 112.984 132.261 112.896 cv
135.18 109.747 138.979 105.883 139.486 101.406 cv
139.575 100.619 139.033 100.137 138.445 100.138 cv
cp
.498039 .498039 .403922 rgb
f
121.171 96.4565 mo
121.014 96.7597 120.838 97.0815 120.657 97.4116 cv
120.16 97.7002 120.29 97.3144 120.539 96.8398 cv
120.858 96.5273 121.131 96.1626 121.383 95.7827 cv
121.447 95.7558 121.507 95.7226 121.565 95.6836 cv
121.429 95.9487 121.298 96.2099 121.171 96.4565 cv
cp
119.849 42.6201 mo
119.761 42.685 119.691 42.7754 119.64 42.8784 cv
119.352 42.1103 119.058 41.3442 118.76 40.5801 cv
119.044 41.0625 119.632 41.0639 120.07 40.8047 cv
119.978 41.4033 119.899 42.0063 119.849 42.6201 cv
cp
119.968 55.1772 mo
119.866 57.9868 119.725 60.769 119.785 63.5596 cv
119.424 60.7881 118.773 58.0322 118.342 55.2637 cv
117.701 51.1582 117.428 46.959 117.512 42.7905 cv
118.279 44.8525 119.024 46.9233 119.747 49.001 cv
119.89 51.0527 120.042 53.1108 119.968 55.1772 cv
cp
115.733 33.4853 mo
114.743 30.5737 113.395 27.7036 111.632 25.2383 cv
111.665 25.1924 111.689 25.1411 111.699 25.084 cv
112.155 25.6933 112.579 26.3286 112.961 27.0014 cv
114.376 29.4975 115.368 32.2134 116.384 34.9179 cv
116.169 34.4394 115.957 33.9599 115.733 33.4853 cv
cp
122.341 61.9438 mo
122.728 61.9375 123.097 61.6767 123.061 61.164 cv
122.949 59.5591 122.903 57.9028 122.873 56.2236 cv
122.958 57.4214 123.06 58.603 123.134 59.7285 cv
123.18 60.4468 123.227 61.1636 123.272 61.8804 cv
123.021 63.2739 122.974 64.7109 122.949 66.1523 cv
122.719 66.0405 122.445 66.081 122.23 66.2304 cv
122.179 64.872 122.239 63.4292 122.341 61.9438 cv
cp
97.9368 15.4272 mo
99.2898 16.1362 100.662 16.8159 102.11 17.4116 cv
102.337 17.5054 102.543 17.4614 102.703 17.3564 cv
103.809 18.251 104.917 19.1431 105.992 20.062 cv
105.623 20.1001 105.37 20.581 105.574 20.9394 cv
106.289 22.1929 107.114 23.3706 107.956 24.5361 cv
104.954 20.9805 101.234 17.873 97.9368 15.4272 cv
cp
96.4524 12.3623 mo
96.7234 12.4565 97.0012 12.541 97.281 12.624 cv
97.6721 13.0146 98.0735 13.397 98.4827 13.7729 cv
97.8025 13.3154 97.1272 12.8423 96.4524 12.3623 cv
cp
122.16 94.5254 mo
122.25 94.3794 122.281 94.2378 122.269 94.1069 cv
123.382 89.9555 123.86 85.6919 124.166 81.4062 cv
124.214 80.7412 124.264 80.0664 124.311 79.3867 cv
124.524 79.247 124.699 79.0307 124.782 78.7182 cv
126.243 73.2915 126.449 67.8716 126.146 62.2822 cv
125.863 57.0566 126.187 51.0195 124.858 45.9795 cv
124.765 45.6274 124.306 45.5351 124.033 45.727 cv
122.526 39.1352 119.904 31.6504 115.363 26.6894 cv
115.061 26.1435 114.74 25.6059 114.389 25.0825 cv
112.527 22.311 110.23 19.8486 107.581 17.8481 cv
105.276 15.6025 102.339 13.7256 99.5193 12.1079 cv
97.9002 10.8193 96.2556 9.58153 94.6052 8.41014 cv
94.3123 8.20213 93.8587 8.50487 94.0935 8.84911 cv
94.1907 8.99168 94.2966 9.12694 94.4002 9.26366 cv
94.3113 9.22948 94.2263 9.22215 94.1531 9.24657 cv
88.6023 5.63963 82.9251 .557115 76.1082 3.05956 cv
75.6682 3.22118 75.7512 3.77977 76.1531 3.91747 cv
77.0798 4.23436 77.9983 4.4912 78.9129 4.73485 cv
71.1941 3.93553 63.4973 2.32079 55.822 3.84032 cv
55.0237 3.91844 54.2244 4.00096 53.4187 4.10399 cv
52.8421 4.17723 52.8714 5.05126 53.4661 5.01659 cv
53.7854 4.99803 54.1052 4.99217 54.4246 4.97753 cv
54.4895 5.0117 54.5618 5.03417 54.6497 5.0244 cv
55.0183 4.98387 55.3797 4.95653 55.7444 4.92381 cv
59.5955 4.80516 63.45 4.93504 67.2976 5.18749 cv
68.2761 5.31835 69.2605 5.46776 70.262 5.65184 cv
74.1257 6.36083 77.991 6.3369 81.8865 6.2871 cv
82.8704 6.93163 83.9124 7.51024 84.9632 8.07616 cv
83.6419 7.63329 82.3372 7.24315 81.0965 6.8994 cv
80.6541 6.77733 80.5227 7.44872 80.9451 7.58641 cv
84.1004 8.6162 87.1082 9.90868 89.989 11.5566 cv
92.3006 12.8789 94.3997 14.5752 96.7068 15.8804 cv
96.6902 16.0605 96.7517 16.2485 96.9465 16.4057 cv
100.413 19.1997 103.499 22.313 106.256 25.8149 cv
108.529 28.7031 110.236 32.0268 112.694 34.7583 cv
112.979 35.0757 113.397 34.6811 113.32 34.3491 cv
113.068 33.2627 112.69 32.1972 112.228 31.1518 cv
113.738 34.0532 114.879 37.0571 115.664 40.2627 cv
115.802 40.8262 116.266 40.9482 116.681 40.812 cv
115.599 50.8764 118.074 60.0195 119.284 70.0322 cv
119.321 70.3286 119.789 70.4101 119.84 70.0776 cv
119.973 69.2094 120.019 68.3452 120.032 67.4834 cv
120.156 68.2446 120.873 68.5327 121.47 68.3979 cv
120.734 71.727 120.677 75.1743 120.741 78.6504 cv
120.474 77.0615 120.113 75.5229 119.661 74.0776 cv
119.335 73.0356 117.778 73.5664 118.059 74.6103 cv
120.278 82.8462 116.962 89.9184 117.16 97.9892 cv
117.173 98.519 117.891 98.6289 118.133 98.1987 cv
118.356 97.8022 118.563 97.393 118.761 96.978 cv
118.879 97.2085 119.091 97.3969 119.349 97.4497 cv
119.328 97.539 119.3 97.6294 119.293 97.7168 cv
119.257 98.2026 119.449 98.6523 119.958 98.7397 cv
119.519 99.6269 119.153 100.543 119.076 101.41 cv
118.942 102.926 121.21 103.014 121.09 101.576 cv
120.961 100.023 122.75 98.2011 123.556 96.9804 cv
124.299 95.855 125.283 94.708 125.56 93.3701 cv
125.953 92.6753 124.987 91.7969 124.233 92.2412 cv
123.343 92.7651 122.678 93.6802 122.123 94.6445 cv
122.133 94.6094 122.142 94.5742 122.152 94.539 cv
122.155 94.5346 122.158 94.5298 122.16 94.5254 cv
cp
f
25.3567 137.815 mo
25.2923 137.818 25.2976 137.918 25.3621 137.915 cv
25.426 137.911 25.4212 137.811 25.3567 137.815 cv
cp
f
69.7664 139.17 mo
67.9534 142.059 65.388 142.009 62.3948 141.658 cv
61.4353 141.588 60.4861 141.434 59.5476 141.196 cv
59.3474 140.909 59.1004 140.676 58.8059 140.498 cv
56.8567 140.068 55.1746 141.248 53.1834 141.146 cv
52.8513 141.129 52.5071 141.391 52.3645 141.674 cv
52.1116 142.176 52.0672 142.396 52.1428 142.96 cv
52.2415 143.695 53.3831 144.142 53.7185 143.3 cv
53.7302 143.258 53.7517 143.221 53.7659 143.18 cv
55.2927 143.312 56.3792 142.914 58.0379 142.873 cv
59.7796 142.831 62.0095 143.645 63.8548 143.802 cv
67.2039 144.086 69.8289 142.911 70.8591 139.565 cv
71.0672 138.891 70.0965 138.644 69.7664 139.17 cv
cp
f
72.7971 135.302 mo
72.3762 134.888 71.8621 134.395 71.2913 134.188 cv
70.5188 133.908 69.8294 133.902 69.1663 133.333 cv
68.3831 132.663 67.3137 131.608 66.2551 132.441 cv
66.0618 132.594 65.9646 132.819 66.0398 133.062 cv
66.3386 134.029 67.3508 134.183 68.2429 134.166 cv
68.4534 134.162 68.6707 134.124 68.8811 134.138 cv
69.6541 134.19 69.9031 134.501 70.3352 135.028 cv
70.7141 135.49 71.1497 135.927 71.5095 136.408 cv
72.2468 137.395 73.6853 136.178 72.7971 135.302 cv
cp
f
60.8162 121.302 mo
60.7849 121.165 60.6008 121.082 60.4749 121.131 cv
59.2058 121.624 58.6458 123.174 57.6526 124.055 cv
56.8308 124.784 56.03 124.836 55.325 123.934 cv
54.7483 123.197 54.2307 122.406 53.7229 121.622 cv
53.6326 121.481 53.5237 121.385 53.4075 121.315 cv
53.3718 121.065 53.3284 120.812 53.2825 120.555 cv
53.1507 119.825 52.7615 119.196 51.9871 119.026 cv
51.2981 118.874 50.4627 119.221 50.1619 119.882 cv
49.7249 120.843 49.1853 121.856 48.9412 122.891 cv
48.4524 122.877 47.8518 122.664 47.4993 122.63 cv
46.7425 122.559 46.5354 123.52 47.2473 123.775 cv
47.5642 123.889 47.8635 124.047 48.1599 124.2 cv
46.4773 124.694 44.8772 123.761 43.4539 122.916 cv
42.5217 122.364 41.8001 123.827 42.6902 124.395 cv
44.8377 125.767 47.2029 126.859 49.6643 125.558 cv
50.0095 125.376 50.3289 125.133 50.6326 124.867 cv
50.9466 124.831 51.2547 124.707 51.5164 124.485 cv
52.0115 124.566 52.534 124.433 52.8733 124.006 cv
52.8836 123.993 52.8899 123.98 52.8992 123.967 cv
53.9436 125.582 55.284 127.222 57.344 126.515 cv
59.1321 125.9 61.2576 123.246 60.8162 121.302 cv
cp
f
60.7273 118.443 mo
60.6633 118.446 60.6682 118.546 60.7322 118.542 cv
60.7966 118.539 60.7918 118.439 60.7273 118.443 cv
cp
f
102.876 94.5 mo
102.703 93.4712 101.262 93.229 100.978 94.3432 cv
100.88 94.7256 100.789 95.0947 100.697 95.458 cv
100.606 95.459 100.511 95.4746 100.412 95.5176 cv
99.4295 95.9443 98.9544 96.5874 98.2634 97.3803 cv
97.301 98.4848 96.1663 99.4316 94.9841 100.29 cv
94.7625 100.451 94.5242 100.614 94.2781 100.779 cv
91.6165 102.484 89.2615 104.18 86.301 105.473 cv
83.1018 106.87 79.8406 108.104 76.5388 109.237 cv
76.3465 109.303 76.2234 109.419 76.1306 109.551 cv
75.1721 109.641 74.2014 109.692 73.2132 109.697 cv
72.3308 109.701 71.9968 110.442 72.1453 111.102 cv
70.8025 110.999 69.4553 110.82 68.0921 110.544 cv
67.6101 110.446 67.2498 110.652 67.0423 110.964 cv
67.0144 110.945 66.9851 110.931 66.9578 110.912 cv
64.5549 109.226 62.7039 106.831 60.1956 105.312 cv
59.6511 104.983 59.22 105.68 59.4519 106.138 cv
61.5759 110.327 69.3948 117.785 74.657 115.506 cv
75.1028 115.313 75.1536 114.751 74.7361 114.494 cv
74.0994 114.102 73.4304 113.787 72.7468 113.505 cv
75.8137 113.859 78.9246 113.863 81.9592 113.352 cv
84.1267 112.987 86.6072 112.472 88.2215 110.989 cv
91.971 109.246 95.5037 106.588 98.5183 104.014 cv
101.473 101.491 103.555 98.5425 102.876 94.5 cv
cp
f
38.4021 102.501 mo
37.1677 101.226 35.8997 103.826 35.3191 104.503 cv
33.075 107.123 29.7898 107.939 26.4641 107.951 cv
25.9509 107.953 25.6668 108.26 25.5794 108.631 cv
25.5008 108.613 25.4231 108.606 25.3445 108.586 cv
23.886 108.219 22.5115 107.707 21.2166 107.06 cv
20.0613 106.331 18.9143 105.585 17.8577 104.699 cv
15.4573 102.688 13.8216 100.129 11.7063 97.8735 cv
11.0681 97.1933 10.219 98.0405 10.3596 98.7544 cv
11.3181 103.609 16.5647 108.924 21.7962 110.382 cv
22.4446 110.706 23.1091 111.009 23.8103 111.265 cv
27.5076 112.615 33.0945 113.463 36.3772 110.889 cv
36.9885 110.409 36.9138 109.339 36.0603 109.168 cv
35.3465 109.024 34.6331 108.964 33.9202 108.934 cv
34.0481 108.796 34.1716 108.66 34.2923 108.528 cv
36.3694 107.542 38.0652 105.981 38.7625 103.623 cv
38.8845 103.21 38.6819 102.79 38.4021 102.501 cv
cp
f
87.4046 49.7524 mo
86.8118 49.3096 86.2009 49.0542 85.5857 48.9429 cv
85.365 48.7861 85.1165 48.6426 84.8279 48.519 cv
83.6394 48.0093 82.4558 48.1401 81.5154 48.7026 cv
80.6594 48.4946 79.6692 48.6816 78.8762 49.3779 cv
76.7156 51.2778 73.7952 53.8672 73.073 56.7807 cv
72.5906 58.7285 72.5364 62.2265 74.114 63.6889 cv
75.6716 65.1338 79.3269 66.0097 81.3748 65.9394 cv
83.8108 65.8554 86.2971 64.4619 87.1179 62.0757 cv
87.304 61.5351 87.4177 60.9712 87.4158 60.3955 cv
87.4163 60.456 87.1804 58.9033 87.0247 58.8574 cv
87.2781 58.5986 88.3806 57.852 88.4729 57.7602 cv
88.8572 57.3799 89.1873 56.9678 89.4441 56.4868 cv
90.7107 54.1191 89.4275 51.2661 87.4046 49.7524 cv
cp
.878431 .584314 .639216 rgb
f
94.6897 119.511 mo
93.5095 118.777 91.1995 119.395 89.9876 119.771 cv
88.3338 120.285 86.3894 121.307 85.176 122.564 cv
84.6218 123.139 84.1746 123.875 84.0574 124.678 cv
83.9666 125.3 84.5305 126.457 84.4339 126.958 cv
84.4231 126.968 84.4124 126.978 84.4016 126.987 cv
84.1048 126.65 83.8484 126.783 83.6326 127.407 cv
83.5447 127.504 83.4568 127.601 83.3689 127.698 cv
83.2009 127.767 83.0388 127.872 82.8928 128.025 cv
82.1697 128.784 81.6536 129.15 81.1077 130.046 cv
80.1814 131.567 81.7459 133.253 83.262 133.091 cv
83.9475 133.277 84.7273 133.288 85.302 132.812 cv
87.2708 131.183 89.9778 128.973 89.4461 126.13 cv
89.8079 125.901 90.2273 125.726 90.7483 125.635 cv
91.5315 125.499 92.2883 125.726 93.0652 125.426 cv
94.9177 124.712 96.8591 120.861 94.6897 119.511 cv
cp
f
78.3001 56.7344 mo
78.1458 56.4785 77.7913 56.3633 77.5007 56.4458 cv
77.5349 56.3379 77.5706 56.2226 77.6096 56.0981 cv
77.8147 55.438 78.384 54.0117 79.1511 53.0659 cv
79.2747 53.0786 79.4016 53.0752 79.5315 53.0596 cv
79.781 53.1054 80.0315 53.124 80.2854 53.1045 cv
79.6536 54.2397 78.3152 56.7588 78.3001 56.7344 cv
cp
87.4661 51.1201 mo
87.4187 51.1416 87.3684 51.1709 87.3211 51.1938 cv
87.2039 51.2441 87.0798 51.29 86.9588 51.3384 cv
87.3904 50.4341 87.22 49.2016 86.1736 48.7846 cv
84.7205 48.206 83.2854 47.938 81.739 48.3442 cv
81.4675 48.4155 81.2625 48.5068 81.0706 48.6035 cv
80.8884 48.5351 80.7014 48.4902 80.5134 48.479 cv
78.7122 48.3701 77.5813 49.3823 76.7996 50.914 cv
76.7117 51.0864 76.6184 51.2622 76.5257 51.4375 cv
74.1174 51.6704 72.9207 55.292 72.6038 57.3139 cv
72.4021 58.5971 72.4588 60.0356 72.9236 61.2622 cv
73.1238 61.792 73.3772 62.1728 73.6604 62.4961 cv
73.8284 62.9263 74.0691 63.3056 74.3826 63.6201 cv
74.6682 63.9878 75.0007 64.3281 75.4285 64.6592 cv
75.8191 64.9614 76.2283 64.9892 76.5593 64.8496 cv
76.9417 65.1509 77.5071 65.229 77.9837 65.1372 cv
78.5935 65.02 78.9602 64.6299 79.0813 64.125 cv
79.2132 64.0957 79.343 64.0664 79.4597 64.0337 cv
80.427 63.7612 79.9275 62.3408 78.971 62.5654 cv
78.7483 62.6181 78.5281 62.6709 78.3069 62.7217 cv
78.0598 62.6933 77.7976 62.7436 77.5745 62.8525 cv
77.5164 62.8608 77.4588 62.8725 77.4007 62.8794 cv
77.3958 62.8696 77.3958 62.8594 77.3909 62.8496 cv
77.1775 62.4331 76.9192 61.9438 76.679 61.4321 cv
76.6902 60.2075 77.3191 59.1113 78.0315 57.9555 cv
80.9285 58.5644 79.8074 54.501 81.5159 53.6533 cv
82.0076 53.4092 81.8972 52.8896 81.5935 52.5727 cv
81.7439 52.4482 81.8923 52.3276 82.0603 52.2617 cv
82.4334 52.1162 82.7923 52.0776 83.1482 52.0854 cv
83.1936 52.2988 83.3757 52.4917 83.6194 52.3823 cv
83.7219 52.3364 83.8255 52.3052 83.928 52.2676 cv
84.2879 52.5337 84.7703 52.6553 85.1824 52.5356 cv
85.053 52.6377 84.9187 52.7397 84.803 52.8423 cv
84.3489 53.2436 84.0037 53.7182 83.6126 54.1743 cv
83.2151 54.6372 82.7381 54.9038 82.4182 55.4282 cv
82.1614 55.8501 82.7097 56.2226 83.0755 56.02 cv
83.4632 55.8047 83.6472 55.518 83.97 55.2207 cv
84.4129 54.8115 84.9783 54.5151 85.4636 54.1592 cv
86.1013 53.6924 86.6414 53.1484 87.2732 52.7002 cv
87.4856 52.7505 87.7537 52.7124 87.9021 52.5864 cv
87.9671 52.5317 88.032 52.477 88.0969 52.4219 cv
88.6614 51.9443 88.2913 50.7417 87.4661 51.1201 cv
cp
.760784 .423529 .541176 rgb
f
81.8084 55.561 mo
81.01 55.6025 81.0735 56.8432 81.8733 56.8017 cv
82.6712 56.7597 82.6082 55.519 81.8084 55.561 cv
cp
f
80.5598 56.9839 mo
80.5281 57.2827 80.4983 57.5786 80.49 57.8789 cv
80.4793 58.2715 81.0281 58.3335 81.1975 58.0317 cv
81.3245 57.8056 81.4343 57.5742 81.5432 57.3393 cv
81.888 56.5981 80.636 56.2637 80.5598 56.9839 cv
cp
f
81.0808 60.3515 mo
81.1072 59.5981 79.9368 59.6636 79.9104 60.4126 cv
79.8933 60.8955 79.9177 61.3701 79.9856 61.8481 cv
80.0242 62.1225 80.2092 62.2861 80.4212 62.3481 cv
80.4173 62.3481 80.4143 62.3462 80.4104 62.3462 cv
79.7932 62.3784 79.8421 63.3384 80.4607 63.3061 cv
81.0457 63.2754 81.0257 62.4228 80.4973 62.3594 cv
80.8406 62.4184 81.2171 62.2256 81.1555 61.7871 cv
81.0882 61.3091 81.0632 60.8345 81.0808 60.3515 cv
cp
f
84.8089 130.627 mo
84.5603 130.904 84.3352 130.893 84.3264 131.291 cv
84.2307 131.209 84.1062 131.153 83.9436 131.162 cv
83.7122 131.174 83.5681 131.3 83.4895 131.459 cv
83.4568 131.371 83.4158 131.282 83.3582 131.195 cv
83.0901 130.789 84.2639 129.999 85.0838 129.27 cv
85.137 129.691 85.1272 130.271 84.8089 130.627 cv
cp
94.9539 119.484 mo
93.2503 117.984 90.3538 118.664 88.4924 119.683 cv
87.9729 119.967 87.5466 120.333 87.1653 120.746 cv
85.9148 120.645 84.9846 121.701 84.3406 122.676 cv
83.968 123.24 83.7952 123.945 83.7175 124.655 cv
83.5828 124.963 83.5081 125.302 83.4011 125.726 cv
83.2171 126.457 83.2815 127.158 82.6145 127.73 cv
82.2937 128.006 81.759 128.042 81.4094 128.363 cv
80.1365 129.527 80.2542 131.694 81.471 132.815 cv
82.2542 133.537 83.3621 132.939 83.5408 132.092 cv
83.638 132.226 83.7879 132.32 84.0037 132.309 cv
84.4324 132.287 84.5847 131.891 84.4978 131.57 cv
84.804 131.706 85.0515 131.624 85.3035 131.383 cv
85.6311 131.068 86.0354 130.686 86.0398 130.207 cv
86.0418 129.941 85.8923 129.711 85.9212 129.444 cv
85.9417 129.249 86.054 129.099 86.0388 128.893 cv
86.01 128.498 85.8733 128.566 85.992 128.119 cv
86.0818 127.78 86.2288 127.478 86.4011 127.178 cv
86.5222 126.968 86.2381 126.755 86.0642 126.888 cv
86.1052 126.1 86.1126 125.332 86.6702 124.567 cv
87.5447 123.365 88.6931 123.134 89.9895 122.601 cv
91.2761 122.071 93.013 121.161 94.4041 121.036 cv
95.1541 120.968 95.5506 120.01 94.9539 119.484 cv
cp
f
86.3884 54.9565 mo
85.448 55.3681 84.8674 54.9682 84.0755 55.8286 cv
83.4959 56.457 83.0589 57.3066 82.8294 58.1255 cv
82.5842 59 82.8787 59.9326 82.6712 60.7544 cv
82.4627 61.5815 81.4832 62.0439 81.1082 62.8135 cv
80.4812 64.1006 81.679 65.2173 82.9382 64.9531 cv
84.7107 64.5815 85.8079 62.5083 85.7371 60.8086 cv
85.6897 59.6855 85.4622 59.0654 86.0965 58.0259 cv
86.3157 57.666 86.677 57.3403 86.7966 56.9316 cv
86.8762 56.7593 86.9075 56.5762 86.8899 56.3828 cv
86.7009 56.0449 86.7654 55.9233 87.0833 56.0185 cv
87.5545 55.5805 86.9807 54.6977 86.3884 54.9565 cv
cp
.988235 .768627 .745098 rgb
f
92.3596 122.158 mo
90.3767 122.757 89.1345 123.192 87.9548 124.952 cv
87.4319 125.733 87.2195 126.895 86.8635 127.759 cv
86.5452 128.532 86.1511 129.183 85.4461 129.663 cv
84.8733 130.053 84.4373 130.136 83.9768 130.675 cv
83.5857 131.133 83.8977 132.018 84.573 131.926 cv
85.9475 131.739 87.3826 130.575 88.1804 129.461 cv
89.052 128.244 89.3113 126.534 89.6839 125.057 cv
90.9153 124.883 92.1008 124.37 93.0794 123.643 cv
93.8255 123.087 93.2879 121.877 92.3596 122.158 cv
cp
f
87.199 48.8638 mo
86.8382 48.0698 86.1531 48.0713 85.4563 47.7929 cv
81.0276 44.2856 74.5525 49.1333 72.7234 53.3662 cv
70.9734 57.417 70.6843 64.3071 76.0012 65.4409 cv
76.7298 65.5962 77.3386 64.5869 76.6956 64.0908 cv
73.7966 61.8525 74.4299 56.7412 76.0017 54.0019 cv
78.1868 50.1943 81.5305 50.4219 85.1946 49.4492 cv
85.2005 49.4477 85.2048 49.4443 85.2102 49.4424 cv
85.6077 49.8174 86.0506 50.0835 86.6721 49.9165 cv
87.0745 49.8081 87.3777 49.2568 87.199 48.8638 cv
cp
.619608 .627451 .529412 rgb
f
86.6712 48.9409 mo
84.8342 47.895 82.1155 48.751 80.2034 49.3633 cv
77.9133 50.0967 76.3953 51.3393 75.2219 53.4331 cv
73.5608 56.3999 71.7625 64.5595 76.7234 65.4995 cv
77.2923 65.6074 77.6521 65.0127 77.3884 64.5342 cv
77.0164 63.8574 75.9495 62.4121 75.7791 61.9721 cv
75.3015 60.7422 75.3128 58.7153 75.448 57.4492 cv
75.699 55.0884 76.2673 53.0083 78.6072 51.9311 cv
81.1321 50.769 84.7708 51.7402 86.8342 49.8354 cv
87.1194 49.5722 86.9661 49.1084 86.6712 48.9409 cv
cp
.498039 .498039 .403922 rgb
f
94.4544 118.379 mo
90.7068 114.864 84.9924 118.516 82.8093 122.082 cv
82.1682 123.128 82.2551 123.938 82.0276 125.057 cv
81.8015 126.169 80.949 126.195 80.2942 127.175 cv
80.0989 127.467 79.9636 127.766 79.8596 128.066 cv
79.8142 128.12 79.7595 128.159 79.7219 128.223 cv
79.1306 129.212 79.1487 130.195 79.5711 131.01 cv
79.8118 132.02 80.3816 132.929 81.2932 133.681 cv
82.4124 134.605 83.9265 133.297 83.198 132.046 cv
82.4417 130.746 81.6834 129.679 83.1282 128.179 cv
83.3596 127.939 83.7976 127.831 84.0515 127.584 cv
84.699 126.954 84.7019 126.352 84.8587 125.525 cv
85.2468 123.478 86.0369 122.202 87.8093 120.97 cv
89.5662 119.749 91.0437 119.652 92.9339 120.578 cv
94.3093 121.251 95.5808 119.436 94.4544 118.379 cv
cp
f
94.3377 118.065 mo
92.6272 116.026 90.2229 116.025 87.7947 116.937 cv
84.5115 118.17 82.9758 119.788 81.7107 122.871 cv
80.5818 125.623 77.8518 127.049 78.7732 130.336 cv
79.4236 132.654 81.3943 134.792 83.9299 134.149 cv
84.346 134.044 84.3176 133.347 83.885 133.292 cv
80.6057 132.874 80.7507 128.697 81.9465 126.859 cv
82.6428 125.791 83.4324 125.025 84.0125 123.863 cv
84.759 122.369 85.1262 121.193 86.6306 120.236 cv
88.7747 118.873 91.2239 117.525 93.8064 118.655 cv
94.1419 118.802 94.6248 118.407 94.3377 118.065 cv
cp
.619608 .627451 .529412 rgb
f
58.4085 67.6694 mo
57.4285 67.7207 56.5354 68.6308 56.6336 69.6401 cv
56.7322 70.6518 57.554 71.4692 58.6038 71.4145 cv
59.5838 71.3633 60.4768 70.4531 60.3787 69.4443 cv
60.28 68.4321 59.4583 67.6147 58.4085 67.6694 cv
cp
f
57.0584 58.3696 mo
56.9046 57.9077 56.4861 57.7666 56.0662 57.6924 cv
55.6907 57.5659 55.2879 57.5742 55.0144 57.5429 cv
54.2356 57.4541 53.4627 57.8276 53.282 58.6499 cv
53.1272 59.3554 53.6052 60.2925 54.3894 60.3818 cv
55.3069 60.4868 56.3401 60.353 56.78 59.5097 cv
57.0271 59.1753 57.2014 58.8003 57.0584 58.3696 cv
cp
f
60.8733 57.352 mo
60.8089 57.3554 60.8142 57.4551 60.8787 57.4516 cv
60.9426 57.4482 60.9378 57.3486 60.8733 57.352 cv
cp
f
62.2166 49.521 mo
62.1521 49.5244 62.1575 49.6245 62.2215 49.6211 cv
62.2859 49.6177 62.281 49.518 62.2166 49.521 cv
cp
f
69.0413 38.5659 mo
69.0276 38.5498 69.0144 38.5337 69.0003 38.5176 cv
68.4583 37.8813 67.7278 37.4912 66.8679 37.7768 cv
66.1248 38.0239 65.5252 38.8276 65.6033 39.6308 cv
65.6756 40.375 66.1189 41.0049 66.8284 41.2612 cv
67.7708 41.6025 68.5662 41.1596 69.0979 40.3843 cv
69.1101 40.3667 69.1218 40.3491 69.1336 40.332 cv
69.4451 39.8769 69.3987 38.9858 69.0413 38.5659 cv
cp
f
68.5549 46.1997 mo
67.0613 46.2778 65.6985 47.666 65.8484 49.2046 cv
65.9983 50.748 67.2522 51.9941 68.8533 51.9106 cv
70.3465 51.8325 71.7092 50.4443 71.5593 48.9062 cv
71.4094 47.3623 70.1555 46.1162 68.5549 46.1997 cv
cp
f
39.5037 42.768 mo
39.4929 42.7231 39.4817 42.6782 39.471 42.6333 cv
39.3064 41.9404 38.4568 41.8003 37.9265 42.0967 cv
37.8806 42.1221 37.8352 42.1474 37.7893 42.1733 cv
36.9705 42.6304 37.2092 43.9145 38.032 44.1968 cv
38.9617 44.5151 39.718 43.6679 39.5037 42.768 cv
cp
f
40.2425 37.8203 mo
39.324 37.8681 39.3967 39.2959 40.3172 39.248 cv
41.2356 39.2002 41.1624 37.7724 40.2425 37.8203 cv
cp
f
42.1677 39.5322 mo
41.219 39.5815 41.2947 41.0561 42.2449 41.0068 cv
43.1936 40.957 43.1184 39.4824 42.1677 39.5322 cv
cp
f
27.6365 52.6538 mo
26.0369 51.8999 24.3147 52.6513 23.5183 54.1645 cv
22.804 55.5229 23.3489 57.4531 24.7781 58.1152 cv
25.4763 58.4385 26.3089 58.5757 27.0496 58.2925 cv
27.8079 58.0024 28.2781 57.5244 28.7288 56.8554 cv
29.6287 55.5195 29.1228 53.354 27.6365 52.6538 cv
cp
f
26.1887 40.3462 mo
24.9988 40.4082 25.0935 42.2573 26.2854 42.1953 cv
27.4749 42.1328 27.3801 40.2837 26.1887 40.3462 cv
cp
f
29.0618 34.6509 mo
28.0379 34.7041 28.1194 36.2959 29.1448 36.2422 cv
30.1697 36.1889 30.0877 34.5971 29.0618 34.6509 cv
cp
f
40.3513 13.8476 mo
38.887 13.9238 37.551 15.2847 37.698 16.7934 cv
37.845 18.3066 39.074 19.5288 40.6438 19.4468 cv
42.1082 19.3701 43.4436 18.0093 43.2966 16.501 cv
43.1497 14.9873 41.9207 13.7656 40.3513 13.8476 cv
cp
f
45.4007 18.3486 mo
44.2556 18.4087 44.3469 20.1875 45.4934 20.1279 cv
46.638 20.0679 46.5466 18.289 45.4007 18.3486 cv
cp
f
47.9822 13.0889 mo
47.8767 13.0708 47.7708 13.0527 47.6648 13.0351 cv
46.406 12.8213 46.5051 14.8706 47.7429 14.5244 cv
47.8465 14.4956 47.9495 14.4668 48.0525 14.438 cv
48.7117 14.2539 48.6575 13.2031 47.9822 13.0889 cv
cp
f
11.4768 54.2221 mo
9.98024 54.3008 8.61599 55.6909 8.76589 57.2324 cv
8.91579 58.7788 10.1716 60.0273 11.7757 59.9433 cv
13.2722 59.8652 14.6365 58.4746 14.4866 56.9336 cv
14.3362 55.3872 13.0803 54.1387 11.4768 54.2221 cv
cp
f
40.5125 74.9219 mo
40.1057 74.9433 40.138 75.5752 40.5452 75.5537 cv
40.9519 75.5327 40.9192 74.9009 40.5125 74.9219 cv
cp
f
50.1145 76.6303 mo
49.3313 76.6714 49.3933 77.8882 50.178 77.8471 cv
50.9612 77.8066 50.8992 76.5893 50.1145 76.6303 cv
cp
f
45.3816 91.4565 mo
45.3172 91.4599 45.3225 91.56 45.387 91.5566 cv
45.4514 91.5532 45.4461 91.4536 45.3816 91.4565 cv
cp
f
33.1624 77.9907 mo
32.5603 78.0219 32.6077 78.9585 33.2112 78.9267 cv
33.8137 78.8955 33.7659 77.959 33.1624 77.9907 cv
cp
f
41.1326 70.8169 mo
41.0681 70.8203 41.0735 70.9204 41.1375 70.917 cv
41.2014 70.9136 41.197 70.8135 41.1326 70.8169 cv
cp
f
72.2117 74.7221 mo
70.6756 74.8022 70.7976 77.1899 72.3362 77.1094 cv
73.8728 77.0293 73.7503 74.6416 72.2117 74.7221 cv
cp
f
103.978 63.0356 mo
103.497 63.0605 103.535 63.8096 104.018 63.7846 cv
104.499 63.7593 104.461 63.0102 103.978 63.0356 cv
cp
f
101.013 38.665 mo
100.795 38.7026 100.577 38.7353 100.358 38.7632 cv
99.6209 38.8574 99.1511 39.7124 99.6931 40.3242 cv
100.216 40.9155 101.125 40.6499 101.334 39.9155 cv
101.396 39.7007 101.461 39.4888 101.532 39.2768 cv
101.628 38.9878 101.318 38.6128 101.013 38.665 cv
cp
f
105.694 35.1816 mo
104.279 35.2554 104.391 37.4555 105.809 37.3818 cv
107.225 37.3076 107.112 35.1074 105.694 35.1816 cv
cp
f
92.0047 34.8496 mo
92.0032 34.9048 92.0022 34.9604 92.0012 35.0161 cv
91.9744 36.5 93.325 37.9194 94.8372 37.852 cv
95.5706 37.8188 96.3313 37.5781 96.8425 37.0215 cv
97.3152 36.5063 97.7625 35.7436 97.6731 35.0161 cv
97.6663 34.9604 97.6594 34.9048 97.6531 34.8496 cv
97.5579 34.0732 97.4007 33.4277 96.8255 32.8525 cv
96.3357 32.3628 95.532 31.9936 94.8289 32.0254 cv
93.2757 32.0947 92.033 33.2661 92.0047 34.8496 cv
92.0047 34.8496 li
cp
.498039 .498039 .403922 rgb
f
85.2844 25.7334 mo
86.6565 25.7334 86.659 23.6006 85.2844 23.6006 cv
83.9119 23.6006 83.9099 25.7334 85.2844 25.7334 cv
cp
f
86.5213 20.6035 mo
87.8181 20.6035 87.8206 18.5879 86.5213 18.5879 cv
85.2244 18.5879 85.2224 20.6035 86.5213 20.6035 cv
86.5213 20.6035 li
cp
f
92.9329 21.7148 mo
92.99 21.7124 93.0471 21.7104 93.1038 21.7085 cv
93.739 21.686 94.0003 20.9663 93.6018 20.5058 cv
93.5642 20.4619 93.5261 20.418 93.4881 20.3745 cv
93.1189 19.9473 92.4158 20.1518 92.2156 20.6269 cv
92.0076 21.1201 92.3694 21.7348 92.9329 21.7148 cv
92.9329 21.7148 li
cp
f
104.344 74.2934 mo
105.702 74.2934 105.704 72.1841 104.344 72.1841 cv
102.988 72.1841 102.985 74.2934 104.344 74.2934 cv
cp
f
110.159 79.6137 mo
110.807 79.6137 110.808 78.6059 110.159 78.6059 cv
109.511 78.6059 109.51 79.6137 110.159 79.6137 cv
cp
f
109.957 81.6738 mo
110.021 81.6738 110.021 81.5737 109.957 81.5737 cv
109.892 81.5737 109.892 81.6738 109.957 81.6738 cv
cp
f
108.449 99.1689 mo
108.424 99.7944 108.699 100.407 109.254 100.718 cv
110.213 101.256 111.54 100.125 110.848 99.124 cv
110.769 99.0053 110.684 98.8916 110.593 98.7822 cv
110.454 98.644 110.461 98.6753 110.613 98.876 cv
110.218 97.7036 108.501 97.9013 108.449 99.1689 cv
108.449 99.1689 li
cp
f
105.486 115.184 mo
106.707 115.184 106.709 113.286 105.486 113.286 cv
104.264 113.286 104.262 115.184 105.486 115.184 cv
105.486 115.184 li
cp
f
102.609 123.345 mo
102.971 123.345 102.971 122.783 102.609 122.783 cv
102.247 122.783 102.246 123.345 102.609 123.345 cv
cp
f
72.1214 122.957 mo
72.1013 122.907 72.0818 122.856 72.0618 122.805 cv
71.7693 122.054 70.6433 121.924 70.4007 122.805 cv
70.3865 122.856 70.3723 122.907 70.3587 122.957 cv
70.2005 123.531 70.6487 124.115 71.24 124.115 cv
71.7893 124.115 72.3411 123.521 72.1214 122.957 cv
72.1214 122.957 li
cp
f
38.7195 123.852 mo
37.1233 123.935 37.2498 126.416 38.8494 126.332 cv
40.4451 126.249 40.3186 123.768 38.7195 123.852 cv
cp
.619608 .627451 .529412 rgb
f
30.0769 117.952 mo
29.7908 117.967 29.8133 118.412 30.0999 118.397 cv
30.3865 118.382 30.3631 117.937 30.0769 117.952 cv
cp
f
29.7962 118.974 mo
29.7317 118.978 29.7371 119.077 29.8015 119.074 cv
29.866 119.071 29.8606 118.971 29.7962 118.974 cv
cp
f
28.4192 124.554 mo
28.3548 124.557 28.3601 124.657 28.4241 124.653 cv
28.4881 124.65 28.4837 124.55 28.4192 124.554 cv
cp
f
31.8421 129.381 mo
31.7776 129.385 31.783 129.485 31.8474 129.481 cv
31.9119 129.478 31.9065 129.378 31.8421 129.381 cv
cp
f
31.7205 127.051 mo
31.656 127.055 31.6614 127.155 31.7258 127.151 cv
31.7898 127.148 31.7849 127.048 31.7205 127.051 cv
cp
f
23.6194 122.134 mo
23.5554 122.137 23.5603 122.237 23.6243 122.234 cv
23.6887 122.23 23.6839 122.131 23.6194 122.134 cv
cp
f
26.7698 118.541 mo
26.5886 118.55 26.6033 118.831 26.7844 118.822 cv
26.9651 118.812 26.9505 118.531 26.7698 118.541 cv
cp
f
27.8259 125.981 mo
25.9133 126.082 26.0652 129.054 27.9812 128.954 cv
29.8938 128.854 29.7415 125.881 27.8259 125.981 cv
cp
f
87.7918 82.3613 mo
83.2215 82.6694 77.6751 83.8725 73.3679 86.5322 cv
66.5452 87.5752 60.0154 91.8193 61.0725 99.7329 cv
62.2429 108.491 70.885 109.522 78.2166 107.773 cv
82.47 106.758 86.5325 104.909 90.2893 102.692 cv
93.802 100.62 98.3421 98.1084 99.6668 93.9487 cv
102.063 86.4272 94.1741 81.9311 87.7918 82.3613 cv
cp
1 .980392 .933333 rgb
f
19.699 86.9092 mo
19.303 86.9018 18.9378 86.9472 18.5872 87.0171 cv
18.2908 86.9038 17.9778 86.8335 17.6604 86.8535 cv
15.2888 87.0029 12.9334 87.9028 11.9905 90.2822 cv
11.4339 91.6875 11.6345 92.7929 12.051 93.8447 cv
11.9856 94.1123 11.9671 94.394 12.0071 94.6855 cv
12.6116 99.0674 16.0164 103.372 20.115 105.066 cv
24.0032 106.673 29.8855 107.788 33.4788 105 cv
41.4397 98.8227 25.8728 87.0268 19.699 86.9092 cv
cp
f
64.575 133.935 mo
63.388 133.734 61.9021 133.486 60.5833 133.661 cv
60.5164 133.666 60.4529 133.679 60.3899 133.693 cv
60.3552 133.698 60.3235 133.71 60.2893 133.717 cv
60.2073 133.696 60.1316 133.671 60.0423 133.659 cv
58.8494 133.496 57.7454 133.53 56.5515 133.594 cv
55.6238 133.643 54.72 133.351 53.7966 133.489 cv
52.1111 133.741 50.5037 135.495 49.8548 137.024 cv
49.7483 137.275 49.6926 137.519 49.6677 137.754 cv
49.4007 138.676 49.8591 139.741 51.0193 140.107 cv
52.8196 140.675 55.5296 140.261 56.8748 138.717 cv
58.2893 138.918 59.7127 139.017 61.155 139.087 cv
61.6301 139.11 62.0847 139.151 62.5232 139.173 cv
63.2224 139.525 63.9539 139.757 64.6907 139.756 cv
66.3142 139.753 67.7307 138.511 67.5955 136.8 cv
67.4632 135.132 66.0872 134.191 64.575 133.935 cv
cp
f
44.804 7.47411 mo
43.5613 8.23583 42.3533 9.02049 41.1726 9.83153 cv
41.0457 9.61522 40.8508 9.42772 40.6126 9.32616 cv
40.4695 9.15086 40.2302 9.06542 39.9993 9.21092 cv
39.9544 9.23973 39.9104 9.27196 39.865 9.30077 cv
36.2327 10.2739 33.4998 13.0098 31.2425 16.0659 cv
30.4407 16.8237 29.6673 17.6084 28.908 18.4033 cv
28.4558 17.7949 27.573 17.5449 26.9187 18.3086 cv
21.8523 24.2192 14.7493 31.456 12.1599 39.417 cv
12.117 39.4824 12.0725 39.5513 12.0305 39.6138 cv
10.1223 42.4419 8.29079 45.5 9.74099 48.8852 cv
9.8489 49.1362 10.0388 49.3349 10.2581 49.498 cv
9.5696 51.8857 8.96511 54.0517 9.67849 56.7456 cv
9.77126 57.0957 10.3123 56.9795 10.2947 56.6294 cv
10.1995 54.6753 10.0735 52.5864 10.697 50.729 cv
10.72 51.0068 10.7527 51.2817 10.802 51.5517 cv
11.0838 53.1011 13.114 53.832 13.9705 52.2348 cv
14.8875 50.5249 15.7717 48.7988 16.6414 47.0659 cv
16.9065 46.9155 17.1409 46.7002 17.3093 46.4004 cv
17.7796 45.5654 19.1609 42.8071 20.031 40.0498 cv
20.6673 38.6743 21.2918 37.2934 21.905 35.9077 cv
22.6707 34.1782 20.8284 32.9082 19.5071 33.6333 cv
19.3235 33.5591 19.1194 33.5063 18.8889 33.4795 cv
19.0183 33.3164 19.1507 33.1562 19.2796 32.9927 cv
19.7825 33.2803 20.426 33.2807 21.0022 32.688 cv
26.0437 27.5024 31.1062 22.125 35.8753 16.687 cv
35.8513 16.6655 li
35.9456 16.541 36.013 16.4072 36.0515 16.269 cv
39.0379 13.5039 42.2073 10.9619 45.6404 8.74803 cv
46.4661 8.21532 45.6399 6.9619 44.804 7.47411 cv
cp
.909804 .937255 .827451 rgb
f
11.4202 79.3891 mo
11.4773 78.9756 11.5418 78.563 11.6497 78.1572 cv
11.7136 77.916 11.9138 76.9062 12.281 76.8901 cv
12.6253 76.875 12.4461 77.2446 12.409 77.5508 cv
12.3738 77.8432 12.322 78.1352 12.2747 78.4272 cv
11.9646 78.7182 11.6668 79.0439 11.4202 79.3891 cv
cp
14.4715 67.4306 mo
14.4885 65.7612 14.6306 64.0864 14.6585 62.6235 cv
14.6883 61.084 12.1184 60.8447 11.9285 62.3979 cv
11.7844 63.5722 11.6409 64.7466 11.4968 65.9214 cv
11.3435 64.4731 11.2166 63.0273 11.0637 61.6142 cv
10.9715 60.7612 10.304 60.3696 9.66188 60.4072 cv
9.61599 60.333 9.58083 60.2524 9.53298 60.1792 cv
9.24099 58.2109 9.05886 56.2182 8.98806 54.1899 cv
8.95485 53.2348 7.51589 53.3218 7.51345 54.2666 cv
7.5071 56.5786 7.64333 58.8672 7.90358 61.1372 cv
7.13552 65.3056 7.31813 69.3711 8.68483 73.4311 cv
8.94802 74.2124 9.70388 74.3901 10.3059 74.1513 cv
10.3787 74.3974 10.4422 74.646 10.5237 74.8896 cv
10.596 75.1074 10.7341 75.2724 10.8938 75.4111 cv
10.387 75.834 10.0276 76.4136 9.79616 77.063 cv
9.35329 78.3071 8.99196 79.8149 9.08767 81.1377 cv
9.16628 82.2236 10.5398 82.3315 10.9881 81.5991 cv
11.0696 81.7724 11.176 81.9438 11.3328 82.1089 cv
12.0144 82.8271 13.0794 82.5678 13.6243 81.8437 cv
14.3093 80.9331 14.3352 79.5068 14.5364 78.4258 cv
14.718 77.4521 14.8797 76.4023 14.2161 75.5635 cv
13.9192 75.1885 13.5203 74.9531 13.0847 74.8476 cv
13.0921 74.8139 13.1106 74.79 13.115 74.7544 cv
13.135 74.5962 li
13.3753 74.7514 13.6482 74.8359 13.9241 74.8608 cv
13.9607 74.9643 13.991 75.0683 14.0315 75.1719 cv
14.3279 75.9355 15.3958 75.8803 15.6116 75.0893 cv
16.1839 72.9922 16.0476 70.9507 15.9612 68.7842 cv
15.9285 67.9565 15.1936 67.4746 14.4715 67.4306 cv
cp
f
22.2429 124.366 mo
22.9216 124.414 23.2068 123.711 23.0916 123.154 cv
23.3098 123.231 23.5242 123.319 23.7449 123.389 cv
23.6985 124.514 23.5667 125.668 23.7395 126.693 cv
23.8606 127.413 24.0794 128.112 24.3616 128.79 cv
24.2195 128.852 24.1233 129.002 24.1199 129.16 cv
23.9602 129.046 23.805 128.935 23.6414 128.818 cv
23.616 128.629 23.5457 128.432 23.4055 128.233 cv
22.3938 126.794 21.3909 125.349 20.3948 123.898 cv
20.9802 124.152 21.5945 124.32 22.2429 124.366 cv
cp
32.5916 134.349 mo
31.1712 133.626 29.7786 132.848 28.4163 132.019 cv
28.3352 131.869 28.2112 131.726 27.9177 131.363 cv
27.7913 131.207 27.6301 131.146 27.4715 131.143 cv
26.28 129.237 25.6668 127.124 25.5794 124.778 cv
25.5681 124.479 25.5686 124.177 25.5725 123.873 cv
26.2566 124.02 26.9466 124.136 27.6433 124.205 cv
28.4715 124.285 29.4246 123.767 29.3162 122.786 cv
29.301 122.647 29.2859 122.508 29.2708 122.37 cv
29.2044 121.775 28.846 121.389 28.2903 121.213 cv
27.6428 121.008 26.8338 120.844 25.9729 120.664 cv
25.8103 120.601 25.6477 120.538 25.4861 120.474 cv
25.4246 120.07 25.3362 119.67 25.1956 119.279 cv
24.1409 116.348 21.7771 116.831 19.0237 117.003 cv
18.845 117.015 18.6961 117.087 18.5701 117.187 cv
17.676 116.668 16.7893 116.114 15.9075 115.502 cv
15.7678 115.406 15.6297 115.345 15.4934 115.298 cv
15.0008 114.367 14.5701 113.515 14.2151 112.884 cv
13.8982 112.321 13.1663 112.617 12.9939 113.109 cv
12.9876 113.126 12.9846 113.144 12.9793 113.162 cv
12.3899 113.208 11.8294 113.89 12.1902 114.597 cv
13.3728 116.911 14.637 119.164 15.9529 121.386 cv
17.5071 124.279 19.176 127.073 21.221 129.668 cv
21.8675 130.489 22.9578 130.257 23.4285 129.624 cv
24.2918 130.354 25.1804 131.04 26.0882 131.695 cv
26.5872 132.34 27.1287 132.946 27.7019 133.492 cv
28.0017 133.778 28.3884 133.649 28.5789 133.372 cv
29.7083 134.08 30.8587 134.76 32.054 135.39 cv
32.7219 135.742 33.2639 134.69 32.5916 134.349 cv
cp
f
76.1516 130.202 mo
75.114 128.029 73.1214 126.471 71.2171 124.922 cv
70.6218 124.199 69.9065 123.648 69.0896 123.141 cv
68.885 123.014 68.6878 122.964 68.5037 122.964 cv
67.9324 121.879 67.4719 120.692 67.3406 120.358 cv
66.9778 119.439 65.5672 119.89 65.8723 120.847 cv
66.4353 122.613 67.4187 125.843 69.3582 126.75 cv
71.2156 128.604 73.3709 130.333 75.9837 130.449 cv
76.096 130.454 76.2019 130.307 76.1516 130.202 cv
cp
f
70.5589 128.479 mo
67.7444 127.749 li
67.3128 127.637 67.0227 127.85 66.8958 128.153 cv
66.0813 127.982 65.2429 127.823 64.4715 128.186 cv
64.0999 128.36 63.9109 128.847 64.2683 129.157 cv
65.031 129.818 65.9861 129.824 66.9568 129.899 cv
67.7737 129.962 68.5896 130.022 69.4065 130.064 cv
69.7747 130.112 70.1531 130.136 70.5579 130.111 cv
70.928 130.088 71.1018 129.79 71.0833 129.5 cv
71.2132 129.107 71.0774 128.614 70.5589 128.479 cv
cp
f
49.3342 130.016 mo
46.823 130.889 44.0637 131.357 41.5945 132.348 cv
41.594 132.348 41.5935 132.348 41.593 132.348 cv
40.9524 132.446 39.4871 133.141 38.8582 133.074 cv
37.8631 132.968 37.406 132.157 37.1062 131.228 cv
37.4622 130.92 37.6741 130.411 37.5642 129.656 cv
37.4856 129.115 36.9187 128.867 36.5139 129.118 cv
36.4949 129.064 36.4793 129.002 36.4588 128.952 cv
36.1341 128.162 35.0862 128.054 34.6497 128.811 cv
33.906 130.101 34.4353 131.02 35.2376 131.397 cv
35.3406 132.682 35.0593 134.079 36.3401 135 cv
36.5925 135.181 36.8606 135.307 37.1414 135.391 cv
37.0755 135.468 37.0051 135.538 36.9412 135.618 cv
36.1316 136.631 37.0603 137.821 38.2312 137.59 cv
40.7786 137.089 42.9236 136.009 44.8181 134.238 cv
45.2068 133.874 45.2136 133.444 45.0276 133.08 cv
46.6619 132.587 48.3538 132.207 49.8748 131.64 cv
50.9016 131.257 50.3806 129.653 49.3342 130.016 cv
cp
f
39.8777 122.575 mo
39.6912 122.272 39.4998 121.949 39.3792 121.615 cv
39.2605 121.286 38.7869 121.385 38.7859 121.727 cv
38.7849 121.946 38.8093 122.145 38.8572 122.334 cv
38.8445 122.399 38.8567 122.47 38.908 122.535 cv
38.927 122.555 38.9324 122.583 38.9495 122.604 cv
39.0095 122.746 39.0828 122.885 39.1868 123.023 cv
39.3938 123.418 40.1922 123.086 39.8777 122.575 cv
cp
f
52.4231 97.5688 mo
52.2136 98.4697 52.0252 99.4243 51.7971 100.372 cv
51.7791 100.06 51.7605 99.7461 51.7439 99.4463 cv
51.6775 98.2671 51.6507 97.0005 50.4783 96.4038 cv
49.9309 96.125 49.1057 96.4262 49.0139 97.0908 cv
48.9715 97.4033 48.9143 97.7129 48.8631 98.0239 cv
48.6692 98.0386 48.4724 98.1308 48.325 98.3515 cv
47.843 99.0727 47.3753 99.8032 46.9036 100.531 cv
46.7639 100.013 46.6243 99.4946 46.4846 98.9765 cv
46.2966 98.2778 45.2288 98.6333 45.4168 99.332 cv
45.5217 99.7197 45.6258 100.108 45.7302 100.496 cv
45.7263 100.474 45.7136 100.452 45.6848 100.453 cv
45.6209 100.457 45.6258 100.557 45.6902 100.553 cv
45.72 100.551 45.7317 100.527 45.7327 100.504 cv
45.8347 100.881 45.9358 101.259 46.0379 101.636 cv
46.0515 101.687 46.0789 101.722 46.1013 101.762 cv
43.9387 105.151 41.8548 108.59 39.7073 111.991 cv
39.3997 112.477 39.8958 112.895 40.3484 112.832 cv
39.3113 114.455 38.3758 116.134 37.5208 117.859 cv
37.011 118.888 38.5994 119.707 39.1033 118.677 cv
39.8841 117.082 40.7288 115.521 41.6653 114.012 cv
42.4798 112.698 43.8342 111.38 44.0799 109.828 cv
44.1341 109.483 43.7976 109.047 43.4133 109.227 cv
43.0955 109.376 42.8123 109.577 42.551 109.806 cv
43.4182 108.455 44.2908 107.108 45.1824 105.773 cv
45.4446 105.38 47.3899 102.203 48.4353 100.483 cv
48.263 101.459 48.1301 102.439 48.054 103.428 cv
48.0042 103.413 47.9539 103.396 47.905 103.383 cv
47.595 103.298 47.3948 103.616 47.4544 103.883 cv
47.5764 104.427 47.8728 104.656 48.3587 104.925 cv
48.6565 105.089 49.1633 104.973 49.2913 104.627 cv
49.5213 104.004 49.7053 103.371 49.8699 102.733 cv
49.9666 103.408 50.0945 104.082 50.344 104.691 cv
50.5574 105.21 51.4949 105.306 51.5681 104.627 cv
51.7068 104.119 51.7717 103.578 51.8108 103.03 cv
52.1414 101.244 52.6482 99.4604 52.9959 97.6948 cv
53.0686 97.3247 52.5091 97.2011 52.4231 97.5688 cv
cp
f
42.5823 94.3398 mo
42.3274 93.6284 41.2517 93.9619 41.3777 94.6045 cv
40.365 93.4887 39.4138 92.3208 38.5481 91.081 cv
38.1189 90.4663 37.7473 89.7886 37.2258 89.2446 cv
36.658 88.6523 35.7078 88.4941 35.2674 87.8149 cv
34.888 87.23 33.8352 87.6885 34.1331 88.3642 cv
34.2425 88.6113 34.367 88.8672 34.4881 89.1211 cv
33.4177 89.8432 33.7747 91.9345 35.3884 91.8501 cv
35.5896 91.8398 35.762 91.792 35.9173 91.7251 cv
37.1355 93.6543 38.6726 95.4604 40.468 96.5293 cv
40.8411 96.7514 41.1956 96.5605 41.3655 96.2534 cv
41.6233 96.5185 41.867 96.7964 42.1316 97.0552 cv
42.3084 97.2275 42.5081 97.2397 42.68 97.1709 cv
42.7117 97.2124 42.7371 97.2583 42.7698 97.2993 cv
42.9466 97.5185 43.3538 97.4414 43.3284 97.1162 cv
43.2547 96.1553 42.905 95.2383 42.5823 94.3398 cv
cp
f
57.1218 105.133 mo
57.0564 105.09 56.9475 105.101 56.8855 105.145 cv
56.4173 105.485 56.2981 101.67 56.301 101.464 cv
56.3191 100.231 56.3811 99.0005 56.4671 97.77 cv
56.5618 96.4077 54.4221 96.5219 54.3372 97.8813 cv
54.2551 99.1919 54.2175 100.504 54.2107 101.817 cv
53.6555 100.434 53.3772 98.9917 53.7005 97.3545 cv
54.0647 95.5093 54.8045 93.6548 55.3552 91.8594 cv
55.3762 91.7915 55.3191 91.6982 55.2473 91.6904 cv
54.3621 91.5942 54.1262 91.7627 53.4925 92.4648 cv
53.3777 92.5913 53.5618 92.7431 53.6834 92.6372 cv
55.7141 90.8696 54.1716 94.6894 53.9514 95.3974 cv
53.6526 96.3564 53.281 97.3296 53.1682 98.334 cv
52.9802 100 53.4993 101.568 54.2053 103.052 cv
54.2058 103.073 54.2044 103.094 54.2053 103.114 cv
54.2288 104.296 54.3255 105.605 55.2981 106.424 cv
56.4568 107.398 58.448 105.998 57.1218 105.133 cv
cp
f
91.719 132.705 mo
88.7053 133.401 86.6311 135.355 84.0515 136.905 cv
83.3928 137.3 82.3215 138.03 81.5325 138.046 cv
80.1272 138.075 80.4456 137.192 80.1057 136.303 cv
79.7815 135.459 79.7097 134.984 78.9724 134.371 cv
78.5564 134.024 77.9788 134.328 77.97 134.849 cv
77.9622 135.288 77.9544 135.727 77.9465 136.165 cv
77.2932 134.991 77.2068 133.891 77.4778 132.289 cv
77.8552 130.061 78.9915 127.396 77.6384 125.295 cv
77.0095 124.317 75.5178 125.297 76.1301 126.286 cv
77.5545 128.583 74.9685 132.675 75.4382 135.393 cv
75.9246 138.21 77.5379 138.246 79.636 139.519 cv
79.7551 139.592 79.8933 139.524 79.9641 139.417 cv
80.8953 139.771 82.428 139.252 83.1677 138.971 cv
84.8157 138.344 86.2278 137.225 87.6843 136.265 cv
89.1907 135.272 91.0032 134.739 92.0789 133.254 cv
92.282 132.975 92.0613 132.625 91.719 132.705 cv
cp
f
105.538 119.992 mo
102.034 124.02 97.9221 127.6 92.9993 129.753 cv
91.8899 130.238 92.4788 132.048 93.5994 131.555 cv
98.9666 129.191 103.422 125.659 106.112 120.389 cv
106.292 120.037 105.804 119.687 105.538 119.992 cv
cp
f
105.782 117.6 mo
105.589 117.988 105.395 118.377 105.202 118.766 cv
105.307 118.205 105.412 117.645 105.517 117.084 cv
105.528 117.024 105.435 117.004 105.425 117.064 cv
105.322 117.69 105.218 118.315 105.115 118.941 cv
105.083 119.006 105.051 119.071 105.018 119.136 cv
104.87 119.434 105.332 119.672 105.476 119.373 cv
105.724 118.857 105.971 118.341 106.219 117.826 cv
106.357 117.54 105.924 117.315 105.782 117.6 cv
cp
f
108.386 105.428 mo
106.806 106.863 105.439 108.492 103.989 110.054 cv
103.879 110.172 103.762 110.302 103.643 110.437 cv
103.331 110.135 102.776 110.027 102.425 110.398 cv
101.586 111.13 100.489 112.262 99.4778 113.562 cv
98.9548 114.159 98.4417 114.77 97.9529 115.441 cv
97.8172 115.626 97.7854 115.843 97.825 116.037 cv
97.0208 117.492 96.5213 118.977 96.7063 120.241 cv
97.1839 123.5 101.871 119.903 103.231 119.084 cv
103.957 118.647 103.24 117.567 102.51 117.987 cv
101.498 118.569 98.5584 121.174 98.6716 118.563 cv
98.7019 117.854 99.5457 116.787 99.9002 116.234 cv
100.026 116.037 100.172 115.857 100.306 115.668 cv
101.642 114.676 102.747 113.181 103.819 112.047 cv
105.673 110.087 107.564 108.146 109.056 105.891 cv
109.332 105.473 108.703 105.14 108.386 105.428 cv
cp
f
109.662 105.426 mo
108.699 107.843 107.706 110.373 107.166 112.922 cv
107.027 113.58 107.719 113.932 108.248 113.667 cv
108.821 113.381 109.055 113.062 109.241 112.463 cv
109.31 112.242 109.149 112.097 108.962 112.057 cv
109.648 110.085 110.299 108.117 111.14 106.19 cv
111.572 105.203 110.054 104.44 109.662 105.426 cv
cp
f
123.442 105.872 mo
123.418 105.451 123.248 105.055 122.849 104.788 cv
122.245 104.384 121.433 104.452 120.931 105.003 cv
120.492 105.484 119.995 105.905 119.57 106.401 cv
119.115 106.934 118.709 107.507 118.329 108.095 cv
117.669 109.167 119.05 110.35 120.02 109.913 cv
120.739 110.249 121.507 110.058 122.112 109.502 cv
122.155 109.462 122.188 109.417 122.228 109.376 cv
122.852 109.161 123.34 108.612 123.575 107.91 cv
123.65 107.726 123.677 107.532 123.674 107.332 cv
123.674 107.303 123.677 107.274 123.676 107.247 cv
123.675 107.236 123.678 107.227 123.677 107.217 cv
123.683 107.426 123.703 107.416 123.739 107.186 cv
123.852 106.732 123.719 106.244 123.442 105.872 cv
cp
f
129.792 94.4887 mo
129.296 94.0429 128.657 93.8872 128.013 94.0083 cv
126.544 94.2842 125.894 95.9238 126.656 97.1811 cv
126.886 97.5625 127.174 97.7978 127.508 97.9736 cv
127.718 98.5615 128.368 98.9145 128.97 98.7915 cv
129.558 98.6714 130.134 98.1001 130.039 97.4448 cv
130.037 97.4365 130.036 97.4282 130.035 97.4194 cv
130.244 97.1553 130.394 96.8618 130.432 96.4853 cv
130.51 95.7212 130.392 95.0303 129.792 94.4887 cv
cp
f
111.719 56.9985 mo
111.676 56.7295 111.311 56.748 111.297 57.0205 cv
111.291 57.1318 111.285 57.2436 111.28 57.355 cv
111.262 57.6728 111.821 57.644 111.771 57.3296 cv
111.754 57.2192 111.736 57.1089 111.719 56.9985 cv
cp
f
110.678 45.4028 mo
110.564 44.8794 109.651 45.0444 109.741 45.5796 cv
109.826 46.0781 109.91 46.5766 109.995 47.0747 cv
110.014 47.1899 110.071 47.2739 110.138 47.3432 cv
110.986 51.0771 111.794 54.8301 112.929 58.4844 cv
112.994 58.6933 113.35 58.6377 113.317 58.4111 cv
112.691 54.0317 111.615 49.7236 110.678 45.4028 cv
cp
f
111.504 69.7104 mo
111.097 69.7319 111.13 70.3637 111.536 70.3423 cv
111.943 70.3213 111.911 69.6894 111.504 69.7104 cv
cp
f
104.918 55.4678 mo
104.854 55.4712 104.859 55.5713 104.924 55.5679 cv
104.988 55.5644 104.983 55.4643 104.918 55.4678 cv
cp
f
103.584 50.5683 mo
103.113 57.2641 102.028 62.8213 99.1399 68.8803 cv
98.9046 69.3735 99.5657 69.8691 99.9426 69.4355 cv
104.319 64.4023 104.392 56.8174 104.614 50.5146 cv
104.637 49.8432 103.63 49.9209 103.584 50.5683 cv
cp
f
0 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
61.7571 21.5688 mo
61.7722 21.5679 61.7713 21.5444 61.7561 21.5454 cv
61.7571 21.5688 li
cp
@
67.9627 9.24315 mo
57.4129 5.42381 46.3386 12.1797 37.6526 17.5161 cv
36.9978 17.9189 37.6546 18.9228 38.3093 18.5156 cv
42.784 15.7285 47.0164 13.3296 51.4343 11.6914 cv
45.1785 14.375 38.95 18.7119 34.2713 23.5937 cv
32.0608 25.9004 27.8733 30.6636 27.0056 34.6899 cv
26.6907 34.2304 25.8806 34.0713 25.5008 34.7095 cv
24.1721 36.938 22.9236 39.2104 21.7913 41.5449 cv
20.8933 43.395 19.9715 45.1811 20.1155 47.2842 cv
20.1746 48.1445 21.3172 48.3691 21.7302 47.6323 cv
22.5164 46.2319 22.7664 44.8896 23.0696 43.334 cv
23.1477 42.9336 23.2551 42.5459 23.3587 42.1567 cv
23.6057 41.6865 23.8548 41.2265 24.0823 40.7822 cv
24.948 39.0879 25.8787 37.4306 26.8484 35.7934 cv
26.8152 36.436 26.8806 37.0522 27.0838 37.6225 cv
27.1878 37.914 27.555 37.9131 27.7083 37.6709 cv
31.6897 31.3882 38.4456 27.8223 44.8631 24.4927 cv
45.5032 24.1601 44.8831 23.2163 44.2449 23.5522 cv
40.531 25.5068 36.7483 27.4746 33.4651 30.1167 cv
32.1106 31.207 30.8274 32.4057 29.6966 33.7285 cv
28.4251 35.2163 27.1384 37.7309 28.4226 33.8608 cv
31.9729 23.1606 44.2512 18.3784 52.3865 12.0054 cv
52.6189 11.8232 52.5252 11.4287 52.2722 11.3813 cv
55.7688 10.1704 59.4016 9.45799 63.3758 9.42479 cv
63.3777 9.74022 63.5857 10.0552 63.992 10.0342 cv
64.3621 10.0146 64.5369 9.73143 64.5423 9.44335 cv
65.6082 9.4702 66.6922 9.53075 67.8128 9.65868 cv
68.0398 9.68456 68.219 9.33641 67.9627 9.24315 cv
cp
f
63.5208 13.1103 mo
58.6555 15.7109 53.7903 18.3115 48.9251 20.9121 cv
48.2996 21.2466 48.908 22.1626 49.5305 21.833 cv
54.408 19.2519 59.2864 16.6709 64.1643 14.0898 cv
64.8294 13.7383 64.1834 12.7563 63.5208 13.1103 cv
cp
f
44.8206 23.2265 mo
44.7561 23.23 44.7615 23.3296 44.8259 23.3262 cv
44.8904 23.3227 44.885 23.2231 44.8206 23.2265 cv
cp
f
32.0383 33.8408 mo
31.2361 35.9067 30.5276 37.9922 29.9422 40.1304 cv
29.7962 40.665 30.5935 40.8115 30.7664 40.312 cv
31.4617 38.3047 32.2122 36.3144 33.0379 34.3569 cv
33.3201 33.6875 32.2976 33.1719 32.0383 33.8408 cv
cp
f
21.4925 49.4795 mo
21.428 49.4829 21.4334 49.5825 21.4973 49.5791 cv
21.5613 49.5762 21.5569 49.4761 21.4925 49.4795 cv
cp
f
35.6214 81.9184 mo
33.2859 79.3769 30.6975 77.0429 28.2219 74.6372 cv
28.055 74.4746 27.8479 74.5298 27.7249 74.665 cv
25.8059 72.3457 24.2351 68.9311 23.3709 65.7148 cv
23.2957 63.5078 23.1526 61.2988 22.7151 59.1592 cv
22.7034 59.1631 li
22.4724 58.4678 21.2991 58.4839 21.2317 59.4394 cv
21.0584 61.9067 21.2229 64.4253 21.3577 66.9262 cv
21.0481 67.1582 20.8518 67.5449 20.9758 68.0195 cv
21.1609 68.73 21.3455 69.4404 21.5305 70.1509 cv
21.8216 71.2705 23.5252 70.8862 23.4861 69.7812 cv
23.4827 69.6806 23.4802 69.5791 23.4768 69.478 cv
23.7747 70.5283 24.157 71.5693 24.6897 72.5947 cv
25.6546 74.4531 27.867 78.1699 30.3557 77.7031 cv
30.3811 77.6982 30.3982 77.6787 30.4216 77.6694 cv
32.0584 79.1968 33.7049 80.7182 35.4329 82.1274 cv
35.5755 82.2436 35.7425 82.0503 35.6214 81.9184 cv
cp
f
19.2415 70.292 mo
19.1775 70.2954 19.1824 70.395 19.2468 70.3916 cv
19.3113 70.3882 19.3059 70.2886 19.2415 70.292 cv
cp
f
44.3108 51.7949 mo
44.2503 51.7983 44.2551 51.8916 44.3157 51.8887 cv
44.3762 51.8857 44.3714 51.792 44.3108 51.7949 cv
cp
f
42.26 54.0688 mo
42.1956 54.0722 42.2009 54.1719 42.2654 54.1684 cv
42.3294 54.165 42.3245 54.0654 42.26 54.0688 cv
cp
f
59.9632 31.9482 mo
59.8992 31.9516 59.9036 32.0513 59.968 32.0478 cv
60.0325 32.0444 60.0271 31.9448 59.9632 31.9482 cv
cp
f
58.26 24.9028 mo
56.9646 24.9707 57.0676 26.9834 58.365 26.916 cv
59.6604 26.8481 59.5569 24.8349 58.26 24.9028 cv
cp
f
63.9773 25.7305 mo
63.9129 25.7334 63.9182 25.8335 63.9827 25.8301 cv
64.0471 25.8266 64.0418 25.727 63.9773 25.7305 cv
cp
f
50.218 43.4721 mo
50.1536 43.4756 50.159 43.5757 50.2234 43.5722 cv
50.2869 43.5688 50.2825 43.4692 50.218 43.4721 cv
cp
f
48.9993 45.7055 mo
48.9348 45.709 48.9402 45.8091 49.0047 45.8056 cv
49.0691 45.8022 49.0637 45.7021 48.9993 45.7055 cv
cp
f
43.4133 53.7861 mo
41.3504 53.8935 41.5144 57.1006 43.5808 56.9927 cv
45.6438 56.8847 45.4798 53.6782 43.4133 53.7861 cv
cp
f
44.3342 58.6333 mo
44.2703 58.6367 44.2747 58.7368 44.3391 58.7334 cv
44.4036 58.73 44.3982 58.6299 44.3342 58.6333 cv
cp
f
55.2473 38.8301 mo
54.4148 38.1387 53.4368 37.9512 52.4021 38.2554 cv
51.4197 38.5444 50.7049 39.4311 50.47 40.4004 cv
50.4568 40.456 50.4431 40.5117 50.43 40.5674 cv
50.0691 42.0566 51.1253 43.7929 52.6614 44.0596 cv
54.1477 44.3174 55.8982 43.4468 56.1536 41.8281 cv
56.3259 40.7339 56.1507 39.5801 55.2473 38.8301 cv
cp
f
69.2571 27.2812 mo
69.2468 27.2427 69.2361 27.2041 69.2258 27.166 cv
69.1253 26.7973 68.7766 26.5229 68.4177 26.438 cv
68.26 26.394 68.0989 26.374 67.9339 26.3784 cv
67.5579 26.4751 67.4739 26.4829 67.6834 26.4018 cv
66.8557 26.3559 66.2942 27.2886 66.4304 28.0093 cv
66.5906 28.8564 67.387 29.2392 68.1839 29.0493 cv
68.3787 29.0029 68.5564 28.9057 68.7283 28.8037 cv
69.2498 28.4941 69.407 27.8301 69.2571 27.2812 cv
cp
f
71.365 26.5742 mo
69.4519 26.6743 69.6048 29.647 71.5203 29.5469 cv
73.4329 29.4468 73.281 26.4741 71.365 26.5742 cv
cp
f
70.0188 32.7578 mo
69.9548 32.7612 69.9597 32.8613 70.0242 32.8579 cv
70.0886 32.8545 70.0833 32.7544 70.0188 32.7578 cv
cp
f
47.7713 59.0796 mo
47.3938 58.6538 46.8826 58.541 46.3377 58.6728 cv
46.0774 58.7363 45.8303 58.8633 45.6189 59.0259 cv
45.0076 59.4956 44.7625 60.3271 45.2088 61.0063 cv
45.6091 61.6152 46.574 61.8887 47.1892 61.416 cv
47.5154 61.1655 47.7576 60.9243 47.9539 60.5625 cv
48.2083 60.0932 48.1184 59.4712 47.7713 59.0796 cv
cp
f
62.4758 57.6767 mo
60.4729 57.7812 60.6321 60.8945 62.6384 60.7895 cv
64.6414 60.685 64.4817 57.5718 62.4758 57.6767 cv
cp
f
72.0847 69.0459 mo
71.1111 69.0967 70.2239 70.001 70.3211 71.0034 cv
70.4192 72.0093 71.2361 72.8218 72.2791 72.7671 cv
73.2522 72.7163 74.1404 71.8115 74.0427 70.8091 cv
73.9451 69.8032 73.1282 68.9912 72.0847 69.0459 cv
cp
f
92.0642 64.9848 mo
91.9998 64.9883 92.0047 65.0879 92.0691 65.0844 cv
92.1336 65.0815 92.1282 64.9814 92.0642 64.9848 cv
cp
f
97.3884 55.0884 mo
95.4754 55.1885 95.6277 58.1611 97.5437 58.061 cv
99.4563 57.9609 99.304 54.9883 97.3884 55.0884 cv
cp
f
83.6038 37.2217 mo
83.5393 37.2251 83.5447 37.3252 83.6091 37.3218 cv
83.6736 37.3183 83.6682 37.2182 83.6038 37.2217 cv
cp
f
82.9216 33.7524 mo
82.8577 33.7558 82.8626 33.8559 82.927 33.8525 cv
82.9915 33.8491 82.9861 33.7495 82.9216 33.7524 cv
cp
f
86.1648 28.7431 mo
86.1004 28.7466 86.1057 28.8467 86.1702 28.8432 cv
86.2346 28.8398 86.2293 28.7397 86.1648 28.7431 cv
cp
f
75.262 21.3022 mo
75.1975 21.3056 75.2024 21.4053 75.2669 21.4018 cv
75.3313 21.3984 75.3259 21.2988 75.262 21.3022 cv
cp
f
21.7874 102.603 mo
19.9319 101.655 18.0984 99.917 16.5252 98.164 cv
16.5188 98.1094 16.5227 98.0586 16.511 98.0024 cv
16.3977 97.4619 16.0945 97.0342 15.7337 96.6421 cv
15.8543 96.3022 15.8914 95.935 15.7425 95.5996 cv
14.9715 93.8628 14.0764 92.0234 15.4451 90.3818 cv
15.513 90.3003 15.5945 90.2329 15.6673 90.1553 cv
15.8997 90.2505 16.1682 90.2715 16.4622 90.1616 cv
16.5437 90.1313 16.6243 90.1118 16.7053 90.0844 cv
16.4641 90.2846 16.2517 90.5371 16.0818 90.8647 cv
15.5247 91.9404 15.7893 93.3032 16.1536 94.4023 cv
16.3465 94.9824 16.5598 95.8091 16.9314 96.292 cv
17.3718 96.8647 18.033 97.1582 18.4509 97.792 cv
18.4724 97.8242 18.5296 97.7993 18.5134 97.7617 cv
18.1912 97.0029 18.3709 96.4106 18.2493 95.6533 cv
18.1111 94.7969 17.43 94.0249 17.3621 93.1367 cv
17.1228 90.0268 20.8274 90.9663 22.7063 91.187 cv
22.822 91.2002 22.9246 91.1841 23.0178 91.1523 cv
23.0398 91.1841 23.0525 91.2202 23.0794 91.2485 cv
23.325 91.5078 23.6463 91.5654 23.9509 91.6904 cv
24.0427 91.8828 24.1624 92.0503 24.3635 92.1797 cv
24.6091 92.3379 24.8889 92.3613 25.1399 92.5219 cv
25.5403 92.7783 26.0989 92.3672 26.0681 91.9262 cv
26.114 91.9594 26.1624 91.9863 26.2078 92.02 cv
28.4544 93.6753 31.5662 96.4009 32.0442 99.1855 cv
33.0901 105.281 25.2678 104.381 21.7874 102.603 cv
cp
17.8831 85.7099 mo
16.0139 85.7651 14.2249 86.5112 12.8557 88.0503 cv
10.7078 90.4658 10.7088 93.7182 12.284 96.417 cv
12.4666 97.1919 12.7796 97.9507 13.242 98.5576 cv
15.4192 102.804 18.9568 105.746 23.906 106.741 cv
28.8274 107.73 34.9334 107.555 35.7405 101.202 cv
36.5032 95.1889 24.2083 83.7949 17.8831 85.7099 cv
cp
.933333 .85098 .74902 rgb
f
96.2424 93.0805 mo
96.2478 93.0527 96.2625 93.0346 96.2649 93.0039 cv
96.3289 92.2441 96.4104 91.3584 96.094 90.6445 cv
95.8308 90.0503 95.4309 89.5537 95.0042 89.0757 cv
94.907 88.9663 94.6868 89.0693 94.7112 89.2153 cv
94.7971 89.728 94.8167 90.185 94.801 90.7119 cv
94.7825 91.373 94.9016 92.0263 94.8455 92.6914 cv
94.7796 93.4707 95.781 93.8115 96.1389 93.3354 cv
95.6824 94.3364 94.906 95.2485 94.0257 96.0644 cv
94.0344 95.997 94.053 95.9355 94.0545 95.8647 cv
94.0608 95.6372 93.8137 95.5215 93.6233 95.5703 cv
92.3318 95.9018 91.0794 97.0615 89.8977 97.7051 cv
88.198 98.6308 86.5442 99.6279 84.845 100.554 cv
84.6209 100.676 84.6467 100.959 84.7879 101.125 cv
79.2483 103.557 73.9763 107.19 67.7771 104.077 cv
66.2517 103.311 65.2737 102.246 64.7224 101.045 cv
64.742 100.978 64.7654 100.913 64.7713 100.835 cv
65.2742 94.4551 68.4514 91.1308 74.3377 89.1909 cv
78.5471 87.8032 83.5032 86.1201 87.9368 85.896 cv
91.3914 85.7212 96.3308 86.9302 96.5589 91.2871 cv
96.5916 91.9136 96.4666 92.5097 96.2424 93.0805 cv
cp
92.9602 82.3642 mo
89.0999 81.208 81.9446 81.9853 75.5061 84.3139 cv
70.8147 84.98 65.364 87.3784 62.5198 90.8603 cv
59.7136 94.2959 58.4021 99.9502 61.2273 103.66 cv
64.1604 107.51 69.5896 109.393 74.2991 109.039 cv
76.6619 108.86 78.8196 107.984 80.9568 107.04 cv
81.0803 107.091 81.2112 107.124 81.3504 107.112 cv
87.6257 106.535 96.4754 101.04 99.449 95.4092 cv
102.36 89.8974 98.5149 84.0288 92.9602 82.3642 cv
cp
f
75.9251 104.235 mo
73.7605 104.651 71.2215 104.482 69.0711 104.048 cv
68.8836 104.01 68.761 104.301 68.9529 104.376 cv
70.0335 104.797 71.0935 105.08 72.2566 105.14 cv
73.6096 105.211 74.7229 104.865 75.9993 104.458 cv
76.1467 104.411 76.0681 104.208 75.9251 104.235 cv
cp
f
92.6375 87.4507 mo
92.5803 87.4258 92.5232 87.4009 92.4661 87.376 cv
92.408 87.3506 92.3616 87.4394 92.4207 87.4648 cv
92.4778 87.4897 92.534 87.5146 92.5911 87.5395 cv
92.6502 87.5654 92.6965 87.4765 92.6375 87.4507 cv
cp
f
91.7971 87.0303 mo
91.5169 87.0078 91.2376 86.9853 90.9578 86.9624 cv
90.8601 86.9546 90.8626 87.0996 90.9446 87.1245 cv
91.219 87.209 91.4939 87.2929 91.7683 87.3774 cv
91.9964 87.4472 92.0681 87.0522 91.7971 87.0303 cv
cp
f
90.0701 86.7002 mo
86.0125 86.6006 82.5315 87.4267 78.5984 88.2993 cv
75.6199 88.9604 72.5447 89.5434 70.2136 91.6064 cv
67.1458 94.3222 63.9392 99.248 67.7454 102.691 cv
68.1541 103.062 68.7058 102.539 68.4509 102.086 cv
62.784 92.0176 83.4363 86.9389 90.0921 87.1216 cv
90.3631 87.1289 90.3401 86.7065 90.0701 86.7002 cv
cp
f
19.4021 98.917 mo
19.1912 98.9277 19.2083 99.2553 19.4192 99.2446 cv
19.6301 99.2334 19.6131 98.9057 19.4021 98.917 cv
cp
f
22.2044 101.222 mo
22.0032 101.093 21.8015 100.964 21.6004 100.836 cv
21.4856 100.763 21.3899 100.951 21.5037 101.023 cv
21.7049 101.152 21.906 101.281 22.1077 101.409 cv
22.2224 101.482 22.3181 101.294 22.2044 101.222 cv
cp
f
31.5818 100.537 mo
31.4851 100.149 31.0906 99.9824 30.7366 99.9609 cv
29.5032 99.8847 29.0842 101.135 28.1521 101.733 cv
26.5696 102.748 24.2127 102.398 22.676 101.505 cv
22.4783 101.391 22.3245 101.699 22.5144 101.818 cv
24.3186 102.944 26.2854 103.838 28.4793 103.661 cv
30.0022 103.538 32.0066 102.245 31.5818 100.537 cv
cp
f
15.9383 86.3901 mo
13.2942 86.8359 11.2869 88.0044 11.2083 90.8911 cv
11.1638 92.5346 11.2439 94.0049 11.9441 95.4956 cv
12.6199 96.9345 13.1824 98.5815 14.6775 99.2402 cv
15.012 99.3872 15.4119 99.2187 15.4182 98.8149 cv
15.4348 97.7553 15.3001 97.625 14.6814 96.7939 cv
13.8074 95.6201 12.9026 94.0766 12.6179 92.5991 cv
12.1428 90.1313 14.6487 88.5698 16.3259 87.0561 cv
16.6487 86.7646 16.2962 86.3301 15.9383 86.3901 cv
15.9383 86.3901 li
cp
.878431 .780392 .666667 rgb
f
13.3904 98.0415 mo
15.0808 101.133 16.4802 103.933 19.7854 105.611 cv
22.3587 106.918 26.5593 108.085 29.4715 107.806 cv
36.0628 107.172 38.117 100.833 33.5906 96.3066 cv
33.3455 96.062 32.8118 96.31 32.9636 96.6714 cv
34.4841 100.298 35.2127 104.255 30.4544 105.983 cv
27.9998 106.875 24.344 106.514 22.1629 105.288 cv
18.7825 103.387 16.6961 100.235 14.0711 97.5161 cv
13.7234 97.1562 13.1565 97.6147 13.3904 98.0415 cv
13.3904 98.0415 li
cp
f
33.0125 95.6982 mo
32.8382 95.312 32.8811 94.8003 32.6707 94.4448 cv
32.5823 94.2949 32.43 94.2109 32.3069 94.0962 cv
32.0657 93.872 31.9348 93.6684 31.7478 93.3965 cv
31.2893 92.7304 30.4876 91.8882 29.7102 91.6357 cv
29.4177 91.541 29.2542 91.8686 29.3528 92.1006 cv
29.5164 92.4863 29.8596 92.7353 30.1238 93.0581 cv
30.4212 93.4214 30.7659 93.7304 31.1194 94.0381 cv
31.2903 94.187 31.4368 94.3086 31.5506 94.5044 cv
31.636 94.6509 31.6555 94.8418 31.7508 94.9824 cv
32.0125 95.3691 32.4173 95.4516 32.6482 95.9111 cv
32.7717 96.1567 33.1223 95.9414 33.0125 95.6982 cv
33.0125 95.6982 li
cp
f
27.572 90.0259 mo
27.636 90.0259 27.6365 89.9258 27.572 89.9258 cv
27.5076 89.9258 27.5076 90.0259 27.572 90.0259 cv
cp
f
26.7923 89.6782 mo
27.1091 89.6782 27.1096 89.186 26.7923 89.186 cv
26.4758 89.186 26.4754 89.6782 26.7923 89.6782 cv
cp
f
24.9309 88.0151 mo
24.6458 87.8774 24.3601 87.7392 24.075 87.6011 cv
23.8855 87.5097 23.719 87.7925 23.9094 87.8843 cv
24.1946 88.0224 24.4802 88.1606 24.7654 88.2988 cv
24.9549 88.3901 25.1214 88.1074 24.9309 88.0151 cv
24.9309 88.0151 li
cp
f
24.1404 87.3994 mo
22.8406 86.5332 21.5149 85.5395 19.9256 85.3647 cv
18.5066 85.208 16.7097 85.1953 15.366 85.7212 cv
15.0217 85.8559 14.6218 86.1128 14.5642 86.5229 cv
14.5452 86.6601 14.5261 86.7969 14.5071 86.9341 cv
14.4304 87.4814 14.7102 87.8628 15.2639 87.9282 cv
16.6819 88.0952 17.3518 86.5825 18.8631 86.6352 cv
20.4568 86.6909 22.3142 87.3794 23.7263 88.1079 cv
24.1975 88.3511 24.5799 87.6924 24.1404 87.3994 cv
24.1404 87.3994 li
cp
f
64.3137 92.6972 mo
67.5896 89.7329 71.9036 88.6592 75.3284 86.001 cv
75.635 85.7627 75.3875 85.1494 74.9968 85.2007 cv
72.3499 85.5478 69.9905 86.73 67.6233 87.9243 cv
65.49 89.0005 64.0047 89.707 63.1975 92.0473 cv
62.9666 92.7163 63.8523 93.1147 64.3137 92.6972 cv
64.3137 92.6972 li
cp
f
78.5007 85.291 mo
83.511 83.9931 93.1248 80.6787 96.5852 86.2558 cv
96.9007 88.7192 97.2156 91.1826 97.531 93.646 cv
96.991 94.4228 96.4509 95.1992 95.9104 95.9761 cv
95.3059 96.7231 94.6204 97.4526 93.9265 98.1177 cv
92.0965 99.8711 89.8753 101.451 87.6951 102.746 cv
83.4495 105.268 78.1233 106.215 73.2405 106.507 cv
69.2102 106.749 64.8313 105.331 63.5867 101.003 cv
62.5056 97.2451 64.3855 94.9756 66.1375 91.9692 cv
66.7356 90.9424 65.5427 89.7588 64.5178 90.3496 cv
58.926 93.5747 57.9055 102.418 63.4534 106.477 cv
69.9949 111.263 82.74 106.901 89.1741 104.073 cv
94.7405 101.626 102.174 94.6289 99.5095 87.8218 cv
96.1048 79.1225 84.6389 81.9092 78.0398 83.6186 cv
76.9597 83.8984 77.4177 85.5718 78.5007 85.291 cv
78.5007 85.291 li
cp
f
78.1843 91.0718 mo
75.532 92.0332 71.7571 93.1216 70.5803 96.0605 cv
69.5076 98.7397 72.2493 100.622 74.6038 100.789 cv
77.8421 101.017 81.9744 98.6142 84.676 97.0478 cv
86.7219 95.8613 90.887 93.8725 90.6653 90.9844 cv
90.5979 90.1064 90.2151 89.0195 89.3196 88.6377 cv
86.594 87.4761 82.8518 88.3745 80.094 89.1567 cv
76.8255 90.0835 74.0003 91.9531 71.8015 94.5278 cv
70.9749 95.4956 70.7722 96.6943 71.3748 97.8364 cv
72.8655 100.666 75.4588 98.3833 76.9431 96.9883 cv
78.2542 95.7558 79.8206 94.914 81.5423 94.4096 cv
82.8992 94.0127 85.8787 93.0425 87.2254 93.6045 cv
86.5603 92.7309 85.8953 91.8579 85.2302 90.9844 cv
85.5169 90.0127 85.323 89.9096 84.6487 90.6753 cv
84.0686 91.0854 83.4778 91.48 82.8772 91.8594 cv
81.9763 92.4277 81.052 92.959 80.1131 93.4609 cv
78.6541 94.2417 75.5764 96.4516 74.033 95.5722 cv
74.3977 96.0459 74.762 96.52 75.1262 96.9941 cv
74.8626 96.0879 78.5715 94.0366 79.2859 93.6845 cv
80.7229 92.977 79.7146 90.5166 78.1843 91.0718 cv
78.1843 91.0718 li
cp
1 1 1 rgb
f
18.697 93.5771 mo
18.2146 96.4575 19.1594 98.7495 21.6404 100.339 cv
23.9588 101.824 28.6741 103.326 30.1111 99.9756 cv
31.4378 96.8843 28.1697 94.5835 25.9422 93.1318 cv
23.8552 91.7719 19.0418 90.3198 18.3631 94.0171 cv
18.0081 95.9497 19.4822 97.4995 21.4461 97.1001 cv
21.0681 97.1772 21.9846 97.2763 22.1614 97.3569 cv
22.4968 97.5093 22.824 97.7422 23.1277 97.9477 cv
23.4763 98.1836 23.7903 98.4355 24.1145 98.7051 cv
24.3684 98.9194 24.6209 99.1362 24.8714 99.355 cv
25.2224 99.6997 25.2298 99.6782 24.8938 99.291 cv
24.8938 98.7915 24.8938 98.292 24.8938 97.7929 cv
24.8675 97.9082 24.8411 98.0239 24.8147 98.1396 cv
25.0564 97.7246 25.2981 97.31 25.5398 96.895 cv
25.4627 96.98 25.386 97.0649 25.3089 97.1499 cv
25.7239 96.9077 26.1389 96.666 26.5545 96.4238 cv
26.8836 96.3467 26.78 96.2944 26.2434 96.2671 cv
25.9226 96.1987 25.6038 96.1216 25.2874 96.0366 cv
24.8279 95.9126 24.3289 95.7993 23.8953 95.6059 cv
23.3391 95.3579 22.0779 94.6675 22.012 94.0259 cv
21.8342 92.3042 19.0383 91.541 18.697 93.5771 cv
18.697 93.5771 li
cp
f
23.4236 99.0415 mo
24.5823 99.0415 25.6922 98.0224 25.6384 96.8266 cv
25.5847 95.6264 24.6653 94.6118 23.4236 94.6118 cv
22.2649 94.6118 21.155 95.6303 21.2088 96.8266 cv
21.2625 98.0263 22.1819 99.0415 23.4236 99.0415 cv
23.4236 99.0415 li
cp
.898039 .898039 .898039 rgb
f
75.7527 98.6509 mo
77.0462 98.6509 78.2854 97.5136 78.2254 96.1782 cv
78.1653 94.8388 77.1389 93.7055 75.7527 93.7055 cv
74.4592 93.7055 73.2205 94.8432 73.28 96.1782 cv
73.3401 97.518 74.3665 98.6509 75.7527 98.6509 cv
75.7527 98.6509 li
cp
f
57.0628 133.823 mo
54.8245 134.376 51.7073 134.828 50.6326 137.224 cv
50.0774 138.46 51.5633 139.425 52.5252 138.533 cv
53.1218 137.979 54.6985 137.958 55.4627 137.676 cv
56.6785 137.228 57.366 136.544 58.24 135.623 cv
59.0545 134.764 58.0794 133.572 57.0628 133.823 cv
cp
.933333 .85098 .74902 rgb
f
67.2405 135.614 mo
65.4851 134.365 63.5935 134.083 61.4778 134.374 cv
60.468 134.514 60.5525 135.892 61.5598 135.943 cv
62.9788 136.016 64.3294 136.763 65.4729 137.576 cv
66.844 138.552 68.6253 136.599 67.2405 135.614 cv
cp
f
48.1946 120.282 mo
48.8045 118.556 48.9832 116.717 48.7664 114.874 cv
48.5115 112.707 45.7405 112.585 45.0745 114.57 cv
44.5774 116.055 43.7966 119.192 44.7551 120.883 cv
45.0193 122.261 46.9734 122.975 47.7239 121.429 cv
47.76 121.355 47.7888 121.278 47.823 121.204 cv
48.0344 120.925 48.1419 120.612 48.1946 120.282 cv
cp
.486275 .462745 .431373 rgb
f
58.0471 112.638 mo
56.9739 110.709 54.0579 111.526 53.5857 113.46 cv
53.47 113.937 53.3953 114.417 53.3875 114.89 cv
53.2791 115.09 53.2014 115.323 53.1677 115.594 cv
52.8811 117.895 52.9241 121.17 55.3596 122.318 cv
56.9431 123.063 58.3494 122.172 58.8933 120.66 cv
59.8611 117.971 59.4138 115.095 58.0471 112.638 cv
cp
f
132.239 111.025 mo
131.091 112.522 130.079 114.274 128.864 115.702 cv
126.182 118.853 119.791 120.41 118.973 114.224 cv
118.638 111.689 114.64 111.876 114.979 114.433 cv
115.278 116.692 116.275 118.576 117.68 119.961 cv
116.976 121.459 116.188 122.931 115.289 124.368 cv
107.511 136.795 94.531 144.954 80.0105 146.683 cv
67.8582 148.129 54.3162 148.089 42.0222 144.975 cv
41.8753 145.01 41.7151 145.018 41.5276 144.958 cv
39.8591 144.423 38.1917 144.259 36.531 143.612 cv
35.2752 143.123 34.0242 142.801 32.9788 142.003 cv
32.4661 141.792 31.9495 141.587 31.4456 141.36 cv
24.0398 138.023 19.3128 131.198 15.1658 124.461 cv
15.2249 124.463 15.2766 124.476 15.3342 124.479 cv
14.805 123.744 14.3123 122.986 13.8606 122.157 cv
13.6038 121.687 13.2864 121.175 13.096 120.647 cv
13.0613 120.66 13.0237 120.671 12.9895 120.686 cv
9.66481 114.526 7.33815 107.961 6.62526 100.916 cv
6.61403 100.805 6.58669 100.707 6.56276 100.606 cv
6.6614 100.353 6.70974 100.062 6.68532 99.728 cv
6.16725 92.5884 8.08425 85.6137 7.56667 78.4468 cv
7.07741 71.6762 3.20583 63.8364 4.15554 57.0429 cv
4.32497 56.8144 4.45143 56.5303 4.50173 56.1709 cv
6.678 40.7466 16.2483 25.1338 28.575 15.6343 cv
41.8738 5.38573 59.3977 2.56395 75.7327 4.82128 cv
83.2703 5.86278 91.3631 7.47411 97.8455 11.6562 cv
104.402 15.8852 110.589 22.4868 115.302 28.6494 cv
123.525 39.4018 124.979 52.6411 124.462 65.749 cv
124.45 65.7348 124.438 65.7202 124.427 65.7055 cv
124.577 67.8569 124.671 70.2998 124.055 72.31 cv
123.924 73.9424 123.779 75.5678 123.62 77.1767 cv
123.214 77.519 122.939 78.0288 122.947 78.7075 cv
122.951 79.0659 122.957 79.4277 122.962 79.7871 cv
122.733 80.477 122.634 81.2363 122.541 81.9609 cv
122.263 84.1484 122.018 86.3403 121.756 88.5298 cv
121.696 89.0381 121.809 89.4756 122.023 89.8364 cv
120.864 91.2104 119.974 92.7905 119.816 94.6274 cv
119.599 97.1601 123.504 98.0459 123.723 95.4883 cv
123.87 93.7719 124.795 92.6147 125.985 91.4385 cv
126.498 90.9306 127.018 90.5508 127.56 90.2304 cv
127.615 91.4975 127.963 92.7217 128.83 93.7866 cv
129.891 95.0898 131.281 95.5395 132.76 95.5678 cv
132.811 97.4761 133.57 99.414 135.105 100.527 cv
135.934 101.128 137.019 101.319 138.057 101.45 cv
136.985 105.083 134.608 107.937 132.239 111.025 cv
cp
139.361 97.5874 mo
139.344 97.5835 139.335 97.5815 139.317 97.5771 cv
139.009 97.497 138.662 97.4741 138.344 97.4248 cv
137.76 97.3325 137.488 97.3877 137.151 96.9131 cv
136.581 96.1113 136.678 95.0459 136.947 94.165 cv
137.149 93.4985 137.006 92.956 136.682 92.56 cv
136.257 91.5771 135.233 91.2373 134.225 91.4555 cv
133.358 91.644 132.223 91.9116 131.738 90.9741 cv
131.186 89.9092 131.666 88.4858 131.936 87.4121 cv
132.346 85.7842 130.836 84.8628 129.556 85.0991 cv
129.405 85.1142 129.25 85.143 129.092 85.2011 cv
128.073 85.5771 127.002 85.9101 126.021 86.3935 cv
126.097 85.7607 126.173 85.1279 126.248 84.4946 cv
126.326 83.8462 126.394 83.1943 126.482 82.5469 cv
126.527 82.1811 126.584 81.8174 126.652 81.4551 cv
126.664 81.4131 126.669 81.3945 126.679 81.3579 cv
126.78 81.3525 126.881 81.3418 126.981 81.3384 cv
126.979 81.2134 126.978 81.0874 126.976 80.9619 cv
127.537 80.4487 127.625 79.7558 127.417 79.1308 cv
128.867 64.895 129.929 49.9712 124.337 36.4419 cv
121.886 30.5112 118.164 25.4726 113.799 20.813 cv
109.319 16.0317 104.609 11.0913 98.9715 7.66942 cv
87.2415 .550279 70.635 -.933119 57.2713 .486315 cv
44.3025 1.86327 31.7 6.91356 22.1316 15.9053 cv
11.635 25.7681 3.28884 39.4912 .846454 53.8164 cv
.760517 53.9634 .685321 54.1221 .631122 54.3052 cv
-1.55931 61.7944 2.58962 69.3325 3.39919 76.7505 cv
4.25222 84.5742 2.12526 92.1435 2.69069 99.9365 cv
2.6985 100.04 2.72145 100.131 2.74099 100.225 cv
2.64186 100.483 2.59597 100.781 2.63063 101.125 cv
3.96852 114.343 10.5183 126.488 18.9192 136.6 cv
27.5496 146.989 42.2659 149.892 55.1194 150.947 cv
68.5349 152.048 83.4763 152.151 95.9446 146.447 cv
106.021 141.837 114.49 133.994 119.939 124.349 cv
120.326 123.664 120.685 122.97 121.032 122.272 cv
120.849 122.116 120.662 121.972 120.478 121.819 cv
122.973 122.853 125.966 122.754 128.745 121.095 cv
132.43 118.896 134.813 114.308 137.349 110.976 cv
139.893 107.631 141.952 104.252 142.461 100.008 cv
142.477 99.8779 142.475 99.7549 142.469 99.6333 cv
142.974 97.9385 140.774 96.6626 139.361 97.5874 cv
cp
.156863 .113725 .113725 rgb
f
133.337 102.699 mo
131.899 96.9082 123.371 98.0371 122.214 103.391 cv
121.669 105.91 125.577 106.768 126.121 104.251 cv
126.306 103.394 127.917 102.44 128.797 102.733 cv
129.741 103.047 129.613 104.623 129.346 105.346 cv
128.529 107.569 125.659 108.765 123.531 109.083 cv
121.007 109.459 121.191 113.458 123.739 113.077 cv
128.654 112.343 134.789 108.544 133.337 102.699 cv
cp
f
63.449 138.812 mo
61.3098 138.378 61.1424 136.631 61.0257 134.772 cv
63.1282 134.864 65.2498 135.39 67.3875 136.414 cv
66.5095 138.162 65.6936 139.269 63.449 138.812 cv
cp
56.1804 135.356 mo
55.9832 136.882 56.2776 139.123 54.3225 139.477 cv
53.0379 139.709 51.3035 138.854 50.343 137.917 cv
52.2732 136.721 54.2234 135.827 56.1926 135.302 cv
56.1897 135.322 56.1824 135.337 56.1804 135.356 cv
cp
71.8054 134.335 mo
63.1448 128.568 54.0842 129.997 45.9514 136.061 cv
44.4002 137.218 45.2654 139.415 46.6741 139.754 cv
46.6951 139.782 46.7073 139.809 46.7298 139.836 cv
48.6795 142.15 51.9412 143.945 55.0735 143.387 cv
56.429 143.145 58.0003 142.311 58.8611 141.206 cv
58.9461 141.097 59.013 140.978 59.0842 140.861 cv
59.9016 141.737 61.0257 142.384 62.5882 142.72 cv
66.6209 143.586 69.2195 141.633 70.9607 138.209 cv
72.5925 138.214 73.5857 135.52 71.8054 134.335 cv
cp
f
57.2151 120.79 mo
55.5003 121.473 55.4881 116.213 55.5711 113.832 cv
55.8826 113.803 56.2068 113.688 56.5291 113.439 cv
57.2381 112.891 58.0769 116.956 58.095 117.115 cv
58.178 117.847 58.2293 120.387 57.2151 120.79 cv
cp
48.2512 116.007 mo
48.1326 117.302 47.8728 119.127 47.2307 120.281 cv
46.7263 121.187 46.4905 121.56 45.5291 121.103 cv
44.5081 120.619 44.7341 119.885 44.9383 118.952 cv
45.2117 117.704 45.8484 116.485 46.3504 115.303 cv
46.7717 115.162 47.1531 114.857 47.406 114.329 cv
48.1443 112.786 48.2908 115.575 48.2512 116.007 cv
cp
61.0794 112.84 mo
59.9212 110.274 57.0071 108.028 54.3328 110.095 cv
54.0027 110.35 53.7942 110.655 53.6687 110.977 cv
52.8743 111.05 52.0789 111.525 51.7664 112.37 cv
51.6712 112.171 51.5657 111.98 51.4456 111.798 cv
49.5701 108.955 45.6008 109.447 44.0247 112.184 cv
43.5598 112.303 43.1438 112.633 42.8948 113.24 cv
41.574 116.462 39.3035 120.752 42.1677 123.842 cv
44.6848 126.556 48.9461 125.692 50.6126 122.522 cv
51.0286 121.731 51.426 120.743 51.7405 119.674 cv
52.0091 121.13 52.5198 122.48 53.4509 123.5 cv
55.7581 126.029 59.0676 125.357 60.7693 122.626 cv
62.6282 119.643 62.5125 116.014 61.0794 112.84 cv
cp
f
32.137 104.741 mo
28.697 107.05 21.8631 105.095 18.6575 103.183 cv
13.8084 100.29 11.6277 95.2983 12.7161 89.8149 cv
14.9221 87.7578 17.3914 86.685 20.5159 87.9721 cv
22.4646 88.7744 24.4046 89.7573 26.2097 90.8432 cv
29.968 93.1045 38.7932 100.272 32.137 104.741 cv
cp
29.3953 88.1318 mo
26.114 85.9887 21.6004 83.164 17.5481 83.0483 cv
14.155 82.9511 11.1741 85.5776 8.97927 87.895 cv
8.34401 88.5654 8.32351 89.3359 8.63259 89.9663 cv
7.59987 97.122 11.0076 103.663 17.5252 107.108 cv
22.7962 109.895 33.6687 111.566 37.5437 105.499 cv
41.6438 99.0791 34.3342 91.3569 29.3953 88.1318 cv
cp
f
96.6194 95.1992 mo
94.5462 98.7046 90.8093 100.664 87.2551 102.328 cv
81.6321 104.961 74.2727 108.419 67.9251 106.768 cv
63.3924 105.589 61.7971 100.367 62.8323 96.1181 cv
63.7556 92.3252 67.1048 89.604 70.5466 87.9345 cv
70.9558 88.1616 71.4744 88.1992 72.0642 87.9189 cv
78.3504 84.9336 86.8616 80.8833 93.8191 84.1137 cv
98.3079 86.1982 98.9617 91.2392 96.6194 95.1992 cv
cp
100.967 85.6709 mo
96.0725 74.792 80.825 79.622 72.3147 83.4258 cv
71.9212 83.2485 71.4475 83.2138 70.9114 83.4238 cv
61.9905 86.9175 54.9573 96.393 60.365 105.945 cv
65.9236 115.763 81.114 109.548 88.5183 106.124 cv
96.2127 102.567 105.3 95.3008 100.967 85.6709 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (2_head.eps)
%%CreationDate: 11/11/2019 9:57 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8dXX1'aq!=b2%L5=]4?sDZkQL))&4'B!l`;7EQ"]h@[0FOf8lJ4jrPR&Dj&42]r7>r$gAP0]=GK*0sfni
%pNQL95J6pVfun=.YPukoG<Y2\>=.#^V<sdgbMu*BpNQZ9fl(fD5<nPX/_TaNX&N>i$gL`Pc,itn>rh^6/j6ppqSS6GQZ'T_rT`Y7
%pYR'!4b*/$qk*<eIsLU*pT#\!b&<m<^:Jalr7.E`qr^bHr^j9'r^H\[k1T@\Roce#4F+9V<sotbf=^mN^6bn]#5C"/bLaLR+\c>#
%^3LrA-hlaRs7RQ/o-:)sa%u^1\$t6Yqu4k+-Z>TiHMP=)MGp^.OnI:4hL>2eIj$cJq+eY7pCmAamWeU^:O[Qf7\@4qc]UN,q<8Bu
%poh<eI#"$VGu^.83?F)!qDVJG6U-%^nBZF7h*9lEIM[0)TC^#<7m+]T$$k4C,es%rJ\1LR[/>S1aW>j.lFRj.?N99eLQ<Q1qq^Xt
%n")ahF3C6fEdHl%cM=LlB3f39(WnGs7I@+.<d2+MX,ociE_'8)OqsBN]^dpm]4;YDgE3'DrqY`hs*jk+S(lOA(Y>kJI/3./Qgo:I
%?_usT7['$#/Da.sm17N]?iSTuB5ciEop/;WpK+Q4\U?*^XZ*h:re08doc4!IBDh2>lYg_!Lu?$orWC16kI\=thu3D,(Vb@gQWm"d
%>O3fRq<mt<mp>r'^9_SmPGdcq<DN+B[I0KA&-+g9atJ0m+N;9:Md,*DrSD,`@.:oB.K@ZYBAYn"q=>BmmUrqPRfNK`qUmg.r"m,K
%qB%o]W_WT&ria#BoYI"U[kE*C3</[1=49iHY($$i*drA1c/I1\%*SD?lX&`#9:9,4?[Z_)?2qe!aXqu:c9@*p?iTtf>k%)+DZ':W
%YP!,4lS"k0+M[ipf<9YumM@PVjjiB]5IpdUeK8[Qs5Wh;Roce)TYK1Yjq%JrrpnOo:H6OA^O,q?WSBl?50g]bo'Eu\^>jt=SZcsU
%qHLLrJ*m8caRu8/6lW6ed+6[h+)dddqJNmLT(e=.Ie!?Xb9sK;r5H2)0;&1k^Nh%%[,)EChS/gaKC10do:9t2n%s.kmf/RdVI)LI
%;87MPo$/i>p>kn95JMOC-OeZ!k<Del^3Y3MqgWM@FiQ08FSk4b+4'CiXWMrB0:oiPUT?#U0>I=3oRd'bm:#Xu[QW]p%o8c]J+i9q
%-f=mmg!edVoafs[EVI(HYF^fe?hjSEdel3+$<KFPTjRf\`?/DLJ+ii!nX-lK$gF6q:S6Nnq3UR-gceF.0^W5^r67n%T=\H=-_,[:
%W(jtf^#&`qpM&Zf92C^Xr^V:WQVZ9jQ_(J\eTd*3s#YU#+6:m0cXcV'US-IicBj$0,0Ji1ci3EoM2H3MQY.tjCtO13_m;;2leHm\
%i]EO4].a3ZjL\XAS:9UelRgT;ZD,Sof$Ag=p9dS[pAN21P^e)ZjI9ef>5hcm(pRDC96UX:lRhc-mHmPlbiO"NYJY8Xc/V=or:nZ[
%Q$dF4i(ku7K%8`:08nIar'Lhd_4S#8(d@MWBk_%)`SKF"]mp!;DDJoLY29GlL#-@ln$22ff\%:`/59U5/.:kJ46#Re]ZpHQO*[#^
%8R<ZjoQttKf?h"Z+'4<d6?eJ5Idt>An"/G9rU)VJT=k(;lfNK9<qqt,pm1HJOMmkhpettEHi/_MWA-Ai9<LH(MU9ceLPrb)r'-5a
%?0CN!8%]>`rn>K![$)KM[Vsb,5IKU=>&9o.k2]Y0W?1B>atIM/\]3p8.lZQ47k5dL-'q_c3%R"/*9Ggc\O@8M6@Mgm3Fjdu'9?Zq
%2fbG:;3"#tb9;p=2&/,LMK8J;1EsAS,KD5SjH*H&/]o;I`X+B@iStQ;E"bue*5b&Pq4,euQ(nJ-+AS*)o(&sldQM%/2`siU*;r0`
%]c>X1513M>jM4D80=UZ'WU_8dJR<B+)g@J*.*#XTCbM>'?S*I!jN-?LaQkm4$ncL:\WPpZ*9B0$^\d+rNlIj:Oa3`Kg(ErhO!">8
%*$';Z2\&(NT<Gp'HTu<1a8Q;Cg2Z,e-V1'2ruh>)aDnoNbJ2[+[[.$N(HKo-@i4o*%Wi"`pdU:-*!\KC\d6;u'tJnVLk)2"7<U(B
%m7*,2aNm-^S-Uh]Z(M4cL/a'"nMbJ.7@"F(lmY`^'gL\N;6Fq6(d='7OY97->suh1jXC-MjM-';n$O-0riPbK,6'5+*/K?jT>to8
%V(DH)nKX17P8l'3#PiS)f,o$96nYf:-=jGU-fiaEI,:6Dia7hs5!$k7rcuO)S]F<eY1kTW[toECOhA@hM807Ve0`(U$B%H"P&<@7
%UPP,XSJ^Ip>27.s>#LFg;e:\(dn.8,aB'2BKgWS:SdI5kX7YLN`6uc/c8$0e1.!oT?9uT7Ldj?^kt;oY+<t5^&e<O6lPkru0+q2O
%MQTCF:*P$[VI5Xk.PeO$E&\h+r7s(u-g%0dJH+3\ol5ID*p&D;S\ciGaJU6IkPB9[*TbY?)js$!'EA>i8ju.Gh<_'"G]OeDOe]7%
%J06]H*!d.0.>gqJq)%nF$6+Zd>(dDQGbd=Yh?t&=F?uSP-HHM3q!fR@BDc"-BC%).8#j`Ob\F.Rcfl"?<$>`T&!330T=oC#;'sa$
%4&0+'ml8_3?H.e"068=<4FiW:c`)e9Hbu"ZpL:uElf</L&S+t<Z`cf3>iPm-],[`dc/Al\7g;48SI@iL,M>n$+QO4*8hq6ni.uhH
%U.6#53RNnnElda+p>tdOJ>A\(d5"C?WHG-n:s4inAef/FL.pas%6O9<TA?E+bYoAjF>/t@3WKL.08R[-Em]imVcX-kGTjfr&\7!9
%;(9]u?&al.L#Tm>HDE+NdEo%V',hN''0L97A',VO(odQEe=MQV5S\9jN'VTB"@7lP4cjf>M?OO1`J"X(MPj;\mC<3<WLcl_@$SB-
%p-eaF\Kr`7/q7..B,U&636Pa'*"GQ9@\k?-9[;("ni.oC%uHffZ:j:1QR8,KF@6`O+qrRK92*thh&8_.]ZAJE13F4<3J`o*b@@T#
%HBt^p,*>u`(+qLI@eR7?PeC0>1.78JMW:FOP,D_S\`Rp1F?)'3A<ANq&TTQ]"H1?;L1'h=2jN7:ic-Q@;7U?cl/TP_UG!Af)&Xt<
%=<'(4#@/5`/dY$##1m)a$8Bb6TK!i;-SnH!bq-sn97f^0P;O:+a\a=,:QqTC8J5a!3&O7Fe:9ij2ff,A82=,^d0NV@6VWV6ZQkm[
%iQTe2b&iE4dBEsuF>elg)M5S=#O]/@88M._^g4DMGMND7AGUf:NR[1kLmoY;m4!LQ2sN?N[uqJ&,Y1ZBSKZFWR.?M!/cfXd0=Vf@
%=DET&?GM>%s.0_95J;I?jMgLF]5OeX]a?^V@_:DZF_@@O,$sVg,[.7jbWgn)G%)[ad9j*j%\f4s-U\QN-GjpG[R(b7gl$u[`*RC,
%]Lg%DP_ob>OZ%iidY4^WbF5-i1fAl_g(%)KU+Dub,F)c49&*>cT)/".PI3'Y](kuQG@#CgP+,.qFYuZ`72:"d.Sck,WB"T!Y:;S5
%FfOe-h5S7A6g_"5YQ*t^&DKYh@983LEO+W%+'?1R_d,Go!;rB4>Wh"/8(o"`U\>f)hP8kUa;saH?2^upmeH:XgHuI]j+GX(q!n0?
%pRO&72GS?dT\%T!b";6J,(=A?X%YCo?5=sQ(/HTZ:qI]X=hBe"0$$qWWF82iLl`]Qb63,;Kgm.Y4YuP7g/T&5HQ$oPl5S85M)qP4
%ld/Up`O_ORNWr\=5-%hp+"!BoA87,6@r*p=kR*-+g7'O7>hoE:`O[c>bSXQle81<@UJ8b][2EX;%c]Oo\uZifHI-b<L.gJP%Hlu*
%X[dWZ&^QJZkFcuD#'Aa"*dlK1O?;%f4PJO#\`5csGi.PtGC8n@h!l'Xr,(6Z>oI;&-WS))hCUDj2d%YXl4^E,7@th[U8psR=fl,?
%LmRAEgeP4\.]jIGNfMCoUn]p6'6+>L3J6,s]O.FUSMFuGCG(PNF7W.>=sXTZU(@F2X:@&1RcW%i]V/P/];Pn?!Y;>t)6TTFPd59/
%gTZaMT"1n3c8Ej9j/=!+d5kLFF/FL@*+t_\0YrNYV>H<F;op'KC9P)gpZo21CV:6>52Ym;l]1ulpoC_gK)gHmUrSb"buC<@M_b@'
%s+VnZrD25b9tN:&$P$W#WJ:#=iF"HAlF=a9S%O#Y=Z%5dVJ\DNB*Q>@7Ftt2*%$(MW:++[@0.hgG!l-U(tMo)XM>tZb]Q9l9C=3S
%%U-$^F)(oaW8._f6*#.3XjFR$dRXdC24%K7WhYHfV#$ii8?kM3.pZZW3Sqf`.kpS5-I7V,QH02VY19kI4f?s8gA3Jcf'W)SQ8!cJ
%(QQu+@u[Qp4?TAr%mAo>%_:VPc6E>eTL8/Bi,eoSh6Ca[S"#o-c!D1'Eg(CXNB>sdN\^6$-:<qFk`.UBUPK0ud<pmC:FPj[fFnD4
%"@+!D:I(P3^3(dd$-3d1-f@aMSI0Khd!90'9L2F-3"=g$J=?a[MFGq/c%eQR'=^VIEs=Q4hL,6W;b&"V%WX&CWBd@JSI0NigpsmB
%CaJ9OfMc:b;5:CjUB#g*Motb'm*T:KHbuK.W\uCt>:`OmLGE$PKDp*8@d>bEWbQa8h#]djUJJ!%ZZK3r9r^5aRWa`6N@8_R=RURS
%km3d=r5Yppgi:8g[thT+k;^0J36LN+I.2-#a<>bTd!>B$=VhRYj+G\VcZ@-rS'N#7ZUXbl;*Jc[:Na_()We:pq5dFWCQqV=8(/k2
%'m]Yrom]1)Qcr;T1.<_QpG0QB;P')q%2DZ-jt^/rJh5U`J%1T?n7h<GpcM0Q>X5m9,._VRiiK\_R2sH<gb-OGm&!a99>BfE'Y-a)
%H0:Npi*4l>F8ie#bpNBs1jj[7J\*;%^ho6mAW>@R+Ju>'ULBs:Xg+L\Xf<g9EqC,EbaEa]jhWNIDY!Vpk9l='mLR?XVh.%p\,?%q
%-qfDV6<%N-U(E%<+=XV9/]Fh@-$TB.;(+ZJrA7rZGbd.c?F$m-%p6B(mSXkY,%Q0@GqWf[&.oG_6euA(J%C"#GPp+^rNs94#ptId
%QR@TrT1tDA_G)?CHXn6LMD/,K]EjEWL9ZmmkS=pMe%cRN/Rha#(_B44.MC<4:m[7ro,\XnXUJR]_5fsH(Eohh5*a(g<Fl<3NX/;*
%#kJ1;1P&b`T,?!ob=JrgQ<n'HXHkRX#g=(->Lf7o'0oYH\nJBA)Hj)/UT2,oc,`Z1r7#S$C9tS&Ssanfl$HlWWog5Q%+S`'WlS&.
%ZW*E&_MZh-ccM1dbuoJmkd8E>G1S1q&]^#'U9WjdDNB,,BQ?VfFe+R&/q!1K?9%:AmWe!Zk.]k>bA9>[.6)8;%mDgKp[!u'hJ)ks
%j7=;KpW?3l9>flt2HA3b8B0'8\V?J,'65q_n&X#G`O(]kT>hG+W(.?o6H>pXdjpu[,6LY!,7uW!7bUcgSVC1n4RCKpFdRB$@^^DT
%eO^uO;"L\E7F8Bb+>SEb\dGV!_3/jr:HE7Sgqr4*(22uAE^'Wb#W$2I]8*p/^igK$$7o$#&?mII$j-^5I3Xl8G-LgPEQZ&:0dil)
%:O2_j*[DA8f^nW[:4CO3n(LPp?lD'%HIQr9Oa8gPo`'^BB3$K@gLFpB=bF;Z8*,!nkSPoln_PM(j2c8]r8=>T39p;_GJ)DuQD;.j
%O?5YaXS4aS[dViVAsQ4%03rMT-0G+I2XllBak0d7W*0*_a8]]GrG-R@F8JBfbh;q*amEHOV(e/UT%8LrMpRX=4TCQ.IgK4\@3s1q
%2c**4\Ljn)%OuTl.1\s`$Rab]P!j5l:sp+M\ca2l43jOp#rIf,hM$nhYin8ikR7H[%t[(X")@8G0QM#Wa;rT1>^c*=/ff$=5O?IX
%&%U^`^\Q7:Du#E+5k[L0iHg\ffA%od#9Tm]W`\ErqW>/@l$R"f''bRc$4/R\>(Ld4H7(FQ6E?/nm?(BiZ(,s=3dQjUUW8G`<#sd'
%X`V7U46i)$^%SDj-O%:#!j<^RU@ki.WEP]>lPb,,l?RqqAa5;A:T*e>e]3`PL02:_P:b;i/#_</5$ToBVT%)>M*e6,[*UiPQl]@K
%m1!$=WrG`tlHrn:DD\G?-u7AMR`.d\9sgU+1Y1e=duht:FEZI8OZS:*LVNS&ml78N+*pbi^[l^Jk[EZ-EI.@&GC72/mrSCYhf5E*
%=;iaE#3E_Rb]g0E8M`47`&_k"Ffa07aX;E$#APJC%#m:S(kG@Yn_c.P+uL(#ALrP6ncoMAU:r[oRT>u5CK=:jg964<PaV3/aek/e
%#@bC2dZ.m<f`K[G5>f`IWTt$7?F:[toc:V&6"OOiL.m'DL5@dUHA(7FXMb-!#$J_a$L#O!&8)Lg9C=L3d&eEF/\Ui0(AM]Enht&N
%Zjk?>QnB+>>qVPV>?^-ji9K]lO6%NT0D*]B_tQ,cmlKNiml]d8a79(h45O]K\E!0$hrf6V:`<gSZ52&G'r,5B"E+I?9?k0NLA+P]
%Iq%>>=aD7Fn=b&nJmL1&a1J//Y8i/bpQW$W4,GdqK`,Afi*e+[)C6*)a_oDH.H[?3&6OaC*@2HTZANLM75*fW(0IrC]OFYE;&$4h
%EA"T-;oU[e.U4X-R"%VAo>E.@%.nI,/FqE&UU(+!N``_G`%ob."'0+qAcHr>Q-0:cE,[m]baNd>8OI%>2f8".EIh^;2[nP<89?$Z
%bVcM;:qh0!H%Eq^4fF.S$B@_<"<4e,71/M?M3W6pi=UJ4+pOqYUB06H[6-LdHPT!,+C6UHcUdUK;#[huOQ%WYYM@TrK<jP^/pDg1
%pZ8..WJF%3G\2o,*VI]TmMm2+>jcjY7)*N5^Y:_,j*R/-MD-T-=SUoeVV'9md(L<-h'<q/R2i8)7^J&t1A;`"d+k[)2Oe6nLb@I:
%`7,3Z.;pQcoe=(:O^B@iZdcYQ-IlfI;!1MFCA84)s+97p2=I*ej.+UdCSX"^7iT9*L?kpM@NiPC6[!_^g9%_;2\W#],ZHqJA;j"?
%"L)$&</$Vq4I7WNVo1=1M)5EF[qK#1eS&D%%"I(M4cE:VjL[-lLf%*"L[:K)^&2A*O;D\<M^2Dgo.%W*=Oi<,2T.1[gP=\)kTZ>X
%Z$*\Yh.'*YQ^]T98,%CoQD6G-QPS`p]YVXlY4ol<rLN`VLj8VABV.ONIDut)I2bj(Rn,IRcoeJ[8VEj7W&dYO4=4$_#gXjI`i!OW
%-R2Q,SQ]`P0OaN[<kmbOA*H2#lD81aqs9Ge0BA;bZ2,4l!Epj:4%t;>f>Ni:'!71YQsS@.N*J"KAQfV>9=&-6%BLCFm>05q&A!jo
%p4khNrE7=hbB0+/@i3eYj3ih3$f&WZ#.1J_Ph^8hHOO,[>@cLKX[*s_q=N_:QK,f_')1%>+*$Kb8(pfp5?h.eQLUo:88h8&4YZ#\
%25-?#[!Rg;;OaQ?YQslt<()rQ(uirEQqB\6:F`u?4S7>Y(U[P!pH`o%fe%bcM)'WNZQ@>6aeVLMB"o<WO/VRRAKoP.6g#VE)5SlP
%N!@@\XJq[u9$jkpD$+/W!=GY^4DoraMci-((8/:ck'<%'q;+?.n+cAKNdi>c#?87MI#Z,Ig_6[NPZRpR&I1quabWP5@ppds4Uu4X
%:0,eRG0$H`Eu-VU@&S[]Ul]!BRV[,d:e,i-Q'G*#,5)]'^rekXF!A4u2VN`-3d4sdY49d,E5j`4e-!B<fBR8ZYmL6g`4).;kO.od
%q8#627Nl\646dqRO[Jcfb"6fL(7t3q7dEj/Fh[l_<f;,!#SXJZAM8H(_<ZLS=W$TK+2J.:BNeFYIt'1PI[<C[T#:KY:O)(D-Vol)
%=BB%@,8As5>Z\$Z%FOm.0Fd/ZE4>j\pm3c8plS:/1kN^c6LJmD7o@1Kh*UCoEmHc1\T\st^9M2n4e*O.YsSInh8D.14H@i#R?Xa/
%Y858s>HR\i@63QKQh0.P-4I3eoUH/C[bg?+n5BilXZq$CjE)d%Q-"`%kqJ0'mWd>V^M(74nP3g.o".'_GX)Qrc&HofDok,QHea7-
%I)LRtY!F6)H=_$R$[[2(=6Op(E1>@f-K&3<UWRWOM$^Al;<95YGApCs-f2u^;^Rft_odg+6ef#6r\JIPnJ$l9'$tNYJTLZj)5VBU
%g3olk%9*,X3<AMr,efh5d":pUM.kq(N-7qk<KCihr&saa[^3nZ:&RL/Ce[?f'?TA>0ZDkuf/jghm@4`8dh@=Q0IaMEXPB-\SBb#b
%\*:_-68/mB$@Z2_nD2%@HP;#",R*(p$>^Eg%lu<g"b5UL4-'-CEOcUD_n?KhSd,GfL&u""_n,ra27RiRJ9OfAD%>_KVIPWgc9JWe
%0XHpZ):$O<BsrCV>6TB!H?@H"1n9'+is#^TO0`fA)DjE<2F`R;NT14"\9,BC!q>U>d2%%QgX!P;gq>%>q=%n`@U4LL53sssp(JLW
%j&r<W/!pesau]0'07m%!f.":jT)0#C3pNCsM"$9,hb9Jf>J+BjSJp<'RnVM4K\e"-IQ)E>?1R"SL3F7af?2rZ8P)kOjX0Y@9"XG6
%@tN>B_8pueWZOQ.r@*il4'S\3i#NMaDIQ+He7KH#(2=BK[YXn[^c3;IDGm4r3-):`lbi1"'jb?k37_WZS6P2:[X>lB)hcMP>^MI_
%Gtllq?2q/X\G$e*E+qLo0O)eT&p*HbD7VGL8ZB8k7*]pSVoIr2,2JDOLZ>%M'*I!&XO#PJ\iD2T!A^lVWR2(po7drQX#=iB(X:fE
%F5LaWD7KIWh"Ua'o6pA'J2?:hkQo8j9/6L//=l$B1[9P`mpgNUqNRjPjgRA4I[^)WPK&#.60iK5s)dH'k?i6&K`3P>B[oaKS>T".
%*r-QALV-$YguBW2K:i_R0.3T<G6WH=?$$SQ=GphbEcRn-nV7s(0$2>FJC9fU95+<6`Ul[Vk$r%7\=E1'87N^=)/2*IjZJlH$Eq/o
%$?Vf45+V,OY2ND;/\=$R)Njb3MVUBOF)VtHh<:>b/]4"Pf1irM=kn(VYK]$VAe^1jA^*WWPD>Y[:,#UaoZZ?/)98XLZp:r<i0*Lu
%]Ke7nNne0EEfp%#]OGm"ZAK%qlrh]1"5#BNF-5&X?6iGP(o^2EL-srI7uQT)KBORsB(VB/LUZ6ZIm\K7GCOr#?6W+>k/+Jk'Ifp"
%E\hFh9ju+J(:#@rRJ*ePGH^:C+M@bC`r,A%;>.8\HFRCWXa=3QV&I#UUR+eb5tSMg<HR5mpV!]=oIRGgeS4AjFjO9&i?3NP,29]X
%eJ]@c/)UW<#[G/GNYcZ"/ZLR9.P%5[4QZ+.Ni*::-'#YB>.Ygmb0;>_:7$j17j^[#T:.]a'PeK'2M^9CKAsW3$#I%*Ea[2NaEs!?
%Q6WSggbE`-Epll_E_HtAgi;YChOb1fJ'0QH1<LUJ(VHL@=d!hdXBs2<Q$Dd.cX+d#m5QV<Ku(3D+__o0$p3g6e%f.50sut[q)b1E
%1i/?o%P%pAQ((`?&[k>f^NSB+T$0H<*8&49"K[,TmqUM95URq,12+2>,YHP?K9^eE%',t*Fi!gOBdr>M/E2lh@[=WCDh>Z(<gTZ5
%/$U#`m.btLjlUP^\0pb_6>>^ID*3R8*P!=sni2\SaBf9'(M:GB,OWuCT:BR@APmU#[V`d",tASF"M%IiIbhR=Uu&pn@2le;s7>2n
%dJ"3C(+RdXZY7&-n).S%iXTS2M31s4"UFCH0)o$h04-R012OYWq_AfG:8(q4\p2kP9WPq8ThjN=&5jq"K\+S8H"n9_X_p9ZMsIN'
%mSa[IABG;^a:sP2<4<MjpFRfq\&"K!Wd1jQQ`Fi:HMlu9.%p#@G.oCoVi<oWFp6Xe9aC"S/22%W5M[6e]\2XMGA4r7KfIZn*W#I7
%]lLi*M_f:%dl4X:2ll1Ic<(65XmdB&fTIkZF=fJYs#SDJQ]A1q%*Qb'A<rB8H1]^a^tSY8@Ii^<W`$l(iTI&sP0C/u9]]jr*Z`:M
%F`%O1c!dD*O>M`U7#E=TB.HQ/Gpg2FpfYk6Fm$<q]GUb8U[Qn$U_p;P]&VSY&]&Y"\S3!0Ju`Zjl7-#E<,Epronld"rcOD9h0u+l
%egashN-1OB1A&jjd9&cL\#g`uOOdY*2-DW@D<CJ1$LToT2tdg?`+$!3%\UqKPU7=i*LYS+*C_Iae@dS@e;\1r2o0NEQKqYSHVcX"
%gLp=j'DS%+f%F_Ba5PD=;gNBn"CcQ#_*H<u)>XW_6,B-L]YC%^!BbJ!Q[\H1'i#o>a.4aXTDc,+QCh@DFuRmZDlc@W-jL,Tmb`3c
%L[l,7]it\//#hnT#H1G.C:9&3NHOQRf"b:`[6(Er)I!L>q;Q7L[q\J7#B'+p`o]q:2$Kj+?/KD22Z=J)o%b1\FH]g<Q9$Im'N_&%
%<gFCV66lX@jQa[K,'$t&>Q\k5a8m7!G#tY)9BI^\OhGn'N`5_*_2h<MVcJ%KO6Y#$Q(<rtY!RkI_!k[O;kEmnG.jF?]OXY68+1aa
%=2*<faWJ(ZjiiW+g@5jCH9(G>.2r,ZGJ3([*XOnfLUj6cC**^;1]e*=.Vua!$76E..goti3)^JSOYj!fR*L&J1q\T+5T7/MlmIu%
%8;#"%-^=t7EP8PDHnq+o&Y-m\*lWCEkE2:TEZRrj60j?Po6VP-BiI$tHlgloZD'eD1qN;RcF_lW,<V%W4N]S-@\G?JqX#uH-2M:^
%k/Fka/5&_D=ZcJYcf;a"r&j]Ekg-m!cJu,+2I-N!.C_%04A3OB$]^=EaF_LO@3Z;h7'&/K,mB:1GX;X(L4J%%Q6gS?f=&2V%*Q0%
%s7sBqp)S4t;UmFU&0N79nF-_'TTJo"DuY:<IC)q&\[!X(4)Vb2\3$qh?.Wp?Xt)u1\K=+>$\4+:SDdh!S@(]8i7bJ!:ZgGfmbD/'
%)Ri1=SD;>)44CS<ddP4<T;I^N++$'Q$=3rd<hNnZe.-]>\ku214)a9Jh83\TcDG&.o"Su+97=/>m;='CcL]<YGe5g+T.6-]I*Kd>
%kIV`pU%J<5SFf!=!JsTa=4oW,#.]f#Wm300p"e3.>Mj@I_t>$'L5V0@G[]E8K@4sq``B]0XW&)O7^hbD^YSV^:1nAfFahBOO/sDK
%=c[IXF+2U*]=M<cG?<8h\jV:(7;4X1.Z-=Q1a#JJ&qB+AV.`ZP.i/<2+*/B95Z<T$a17YNoZN<GA`]X9/+91RHMDB4.D$q]-?Sm%
%P/."leP3Y[HEr,t>KCN5S$l:d+DU1,7U9_[V_$rQEO<2Cd_nsa@qe)p[Xo7_g9Z.<@lL(fAg<loBO]esHNG5VJK4CtjETrT_ur3(
%oUYRpg@K47o01`@MW9RBoY'0pC<u8gE0gRI^4MmD!I2?$SbbO#P:k];k7F<QY5A]A^O=@b<Y]TTU?'$(k;'@q=1XXR5%hBtjg[O(
%1_hOcT]?2u>s8?7dtZ_%L::6@g1J"Dd.U]Z5M*lHZu#F[[(Va1=jHl8_q,iQS"QVf,^Eg"p^`UGbGem5f%<@jB8K_6CTXnQ"BjUm
%>,OFp0nhY@<]k26*kFbP>:/4?Dsde>&=KacF70Qc/Eaj1'qdHmFMjMSH-gb&+."7Kml$X_YklZEf!_dTV7iT&,6F,(rO=r9A[b.H
%`_nEnl'=CPcSXLtd+u[3:G5#"7hEGg)Rq*6T;h>k"0V!tpq!eG@,WAS1Hf^o;s[oGQjn)qSu%8XdPF_Q\F8Vj.IPZ8.?PM82(O!u
%k?p3g$;d<K@1](?T)m*\!9H9Bb0Mj5=XH>U`+PK_RnWb7!gN`]mePsMWf#PAMtbO@?PC1Es+Cp2qAF\.7)V(+)*dc1?Li@''$a7g
%PjgVj_@^ugUL7REfO/Wps+B#h>U8a7l[@.AQ6u>iQX7b^qiJucjN2U%o027+roBI5MVOE]Z>NWA91hnA>J00eG2WsU9;Fbfh;34i
%rQd\lHZT)Y]D_=K:]H*9[e]f5%.#bSp)*u0N.HDs^cl79T/!Rr(t`I0m'CX-)=R>O';&jqZV5bd^ciJ;-7rU)qUNbB?9`f4k1Rpr
%J+g5%<M+d4psH:[j6qU!mY`H2hV>ho.:2rOLMrg_iRKG<nGSD0kL3EC^LnpbHkl5cG;6M+-M"GMfj3\FSlEAm[JoXhJ&_M<d(`\.
%ipQPjdD,^2o&p$)XacXSf_oRZci7e6IIih-rK^Z>oOmhYmp;[_c3&:*gbb'NqrQrepG?f,ne1uuL[3Q1NmF<2H1pObPLk<;rEQfZ
%q1npL=3l(T\c.;*d+>16T"TFBqWn*DVgjkIr;(W`T&5"qgY8WEI_,E'>k-_@TCMIOjTiKB;8<#fI7NkX*!BbS>'AO+h+'3rXGF0T
%FO[M99tu1PpXjY!%.u)$-1>(E="2a9]bJU(-t/qiJ</#<R;c488nFQ3=!EFJi3$<uHAWBRIeQgF>bn,mATJ8(atc]Qc:a<9\Phe/
%?"im<Pta=Vo2TKJm1-W?c#/YJbO&j^e0HE-/"+Od>2kfpL6n3R<C:ZP'!B.XnTq1uK.ESTm9@49*T;4:+g0fK^M`![MIjEs;,9hd
%!Rn+FX!$9@%Lk:K>m&,Cp&$nW<bo;S+NAobY=d?U>qMFrNAn&8s)p9CG=5[OY/%HOX#RH(I\"5GU6BaX?=f0]N7)8lA2M)SQTf4e
%=`b)kI*K3G@E#Dj>"&nZ2#6?(IP&$Q/f&/_f8^5G^rm\hlf:'#^00;Kj"u$+Go`%3LpYoAG@,&CHg-upc!L;N3D\LIWKAEin]!jU
%5QjWu9T8\n7gLEQnpPQP<K%ZRJ:QSrMnGgd,21F\7YeK"ahr)<L:U^U@N".*7D&mi@hC"</RDc0=`4Q;Ea$iVn-=4C]%LS28kVS6
%[Q"UqE3$AmqJg5^&e3^)=YH&&=s0VWOYK*o=mYi:qq*QE,'#G5cs5WPGG2AodCYDlli[9Z9#-,ano!&NX7UOBNtb`[p]-RgFIdfP
%om2ma/CpR&o*17lZHf\N\Lcc;6+%@V7ja*XDnV`9gPG2LZMa+.YIY@=/OS7*\5UuA.>VpZaL4cE\Qa*aM9H;%U'2"2N<WP-qj0ej
%b)Eb5r>),$3KJsk/)ThMbYdhRhjQq_m4'"*juC,uJprtFOWh+&:9F)j1;OU[RJh#)8`*(*bHu.n,S5Hlfd66nWMJR_^^[NRJX!3B
%-3=0D+-N?":b#L<kpZ?A0.KEf=B^9n8@-&Do)jW$-frL:"?n!9Uf\O>6piluj'8a===,d?\5WZ3%$7MYFHCRllg/^@@K;O6U-tl=
%W7%+)C/0(>M-/[L!]?4LLb47nOC(F`oiAA]oICsMK1k=6$O=bP3Y9J%,bcQ-OSJ(e\j9McW?3W[90,uU>84$g4JH\lY`%^Z9WoX<
%,N]cLWQ-OSLIuWJ:7GaWhkNW+NN-`;$/-Ra6-j7OSthYKB%+q]JcTjpn.hKog#>8ZVNN?Wdl"pRd?r;UnqRkQAYLNaoL4if["7"_
%/QGcYIMk-%oL/Kb0fS2^%.PP?/e:T,Ha_!Fe@<G]/AJJ`@4R&36Wc&X4X^eTjl3.E-C;kqJ75;Z.K*/T6=*SYn-[7V%^-J]in0eW
%`42/t%Bs66V92E_YKWjiY`SG(,"%)uN0EL,RL"koV@9,f]b@.VZj/Qf<\WacK^":I`$lS@T-0T)^Dr[m"A^AS89`HO"?]XeP&L%j
%/5^)Cn*<k'h]qj%4<obN_&WX/Ll0g*/B-ha,=(SRd2BXBDO82B!LH9g\Fb=D[TLlHN/VmU7f@&9<2<de=QC?rne#=JbKMCPLP.1a
%4g[JNM\<BIAVemD!aN7Qhh/uQ>:LC/[&@#k((o[mF0J>8!".kaUVJKk[EI`#%`@N%AAXS2BP@s:]Ldh`e)"Sm%&ZVu^O/WD/F,<Y
%(lXUoD'+ic0(+CK7$7aW[MD_LUZ5mjMd>_;A'SBn+2LU&oLjhta=.LU(bZ5)WC--kIY,H/Y`Gfs4Ba4dD-f%m$hu?"$[Gd:(9F[p
%+@-O](un#0q2EuPi[bV`dK1/N[Hlm^N@fT^\hJu.-LAp2k!f3T*BI+?Q?b8@NhD%A4=p$%IOqXr07?ROhRDbW8Lq_j=`U1;D5CI>
%5\hRgo(L@U?.ZT^91rBUj4^DcS[>1:?XV#*@^\R!AF5W37JoR<J;dpPbf"]KfI:\f#A+hdOeE*B%59ge[Z+@GNmV1"gYlHF#-rE^
%X'o7:3VUqc3\<(\9B:dNAb]"2)p!)ZAQ@te=ISj@':TdC3JT=#@+WQaM,oE1&TmQ]/E3!<\tP9qA>!'Q0J#_d[0:/%N1O,e]i+je
%D.GYfDs*S1[Oe.r-)R05WYqH%@m@4td>]pTdPW"u$AC.j^W<p\jD"@b;UFFR%bD5T,s3RE]h#I\-&#BD'<b]5+[[l'LFp%`4;F<u
%FCih)=q;*t\.#:hI:[-j%Nfa.&p^iS*<lX3(4=n7k8,%Goo7O<=O<OnX=r+?:g((9Mln%7%kf)P9KA+MAt$fJ)Z-8Y7H\0nAY>LU
%X,'2DFI<T?XJTG:M0q<AcsTg?)Tu/rCmE,%dgF[)U/P1T:g-8^<6c(18SZl-E/J0dN[cO*eS(pa9-LM8]'u'I&^j!mI6=n%lAAma
%b=^oj%'c6Wfr7",<U\t"kW2[&4>D(P<L-df\Wee]`04(b9QG$=S0XN"k]8a;k=0Yc3j#Z`VS%4HV7/@]oI'p2(\uJp;5n@d_3UCk
%q!R^oR.s+>Mj%9[@5d(FU;2ra2#^gEc3Mb/Fr>*J>5/qLQoR:Rq.AMZU]:Nlc08kBn+rm)2GbF?78s,I/(u8s+Joej$I%SPeY.j3
%XDV>6+gY<g6]l8$;(TgdQEK*'BSN+r[k&u_M6Q4)l*=c$$b_/qLT$4.ctll5niM,g-uu$D5qZ/AK#?R_iE87ojZMQD)LYsF?L[E^
%^snutC`*/'=?a,#TmUHK:F!b3LRST4NV3fthn*2Z0Dq16n;Eq:$p1r@UZ5-os7#->f?[cP]DK^!J,T$(%kiD/lHL!4Hk'C4MH2uu
%)\"(W4BWJa!XoWLm08\L&XLB2cO:JGY8E<sSh_q?<F)'JYk,es'$!^8,=/TNa=iWD)9>-c!!DM#8*/C2RP[(j>^/5-Ihh8hlj]@"
%@cB?3;R%#?SV%>4ib;IpU4Ljun7'4TC8t\G$b7kCZMi'EhkgA7T0DMq2P:[al<KTueL:lp/>UBlfre?@/qtTZ&?>Aa3`b`/?M(Wi
%AO8@Y#d@.PbLO.uX/Y`2D-/e21k/k+A\"k%'1H0C%)jA.1s*V2-3A&gE>Q09fa$Une=+H40HBVL%%`RcEI_Id'KE'g_B.L?M0=RT
%L$bQqZ*$B:Ll!.="jS(B7(5)<=t7uOnE%Z814c7511*J]c"u0GY9?qD(EN8g"m[/b`MGuofMf*W:fm]ANY[-VIe\\7L)2.*6j$5S
%h@(m<!X[e]GUhVV@QlBI<h@$3Q1&Sf0_kit;/K/d=$O)OeB+n\f>uMOCeOW-ABZYD\1Gq(.ReIMP+WNZjI"Wd3IAeZMRB8V8dnre
%!nL[+/'KC,"BJr5Sk_SbJo.3p2b`ASXu[=(PP5nX?qBGAG]C_A$l@P%Zn+?[d$BI@%4Y(]]h5KG[;Gsf@B@j^8c$e&Uf1Gb>\%AH
%$V'bX?us+mJJO:V5`6IFOY&h%d#cE6FD,jeeThQ1guBdjHiepA>/Zbj[9njm6s4d!lH_sTAajH+e:6!"dP7.:?%X`)>omSQ+kG55
%g,VD8`HY-mQW8<65a*6lGqf+`GE0WF2aXpc=LSPam*Hr?<1[:OfS]Y&@pa?[k-aDbRBOS)Unpuj.XTB5=leP#GUS-i<?9;f+F^dV
%9CF6ULPH6_Ar%7M=4U#i4cCYn,[+kPfVJmh#L<sp.cWpT/&8#J$`6>aXkt/WBhFT*"k1+N*1N_5ar!\TaCO;SUcO$#i]6hj5Zn,$
%7l20d#!7Cl/h3IYL@r-F'4Qa&<BMZ$EMJ\)"&WQ2gkk*bV9*+gHOElL/7dU)6P44%dID0SAC\k3fsF]ih@I[Fc(`(&L7U7IVMR'i
%=Y6rk"qgs=[DApfN%3\[T9bV;=mS=hC>e]ph6*m%hMW>T'BDi7pIm)0'XJ3tiC=[8_9&(m(#<0f)8LYW&CY-IK-$,?\h'*u.3q9T
%`39sIK]CKj$o1'OAu:rIi\ZIC=.-.JI2%ntQ=%"lY=*#jM$JOY;nfNJF?gh''*tY_)YmM"X=25K?56XW\B0\`2qobMKLtjb7aiMX
%3lEJ6aUGBghP32!CiL>8;,7=@n[;mqpP6Ts&66rRk(*JGMtj(h<d',gN(X2+A!h!J!'^(FHj#C<pnAA?Dtgl^>r(S7<2=iP%]ZlN
%N%/e`WZ"5POEeBtlOb_NnTN>#M(q<B@@m_1'L[iB;-*=l][WZNS=H+\l^=EAi+RFg75D_Or%2A]e<LSaN`U7O>qd*=.8Z8A!S_(^
%F*L*h.X[2%/N);;-#]@[e9Sn)U':;sn2O:Qnoq8;T$1k*g?h4FA)ZBab%HY3JKLGmb(r&Yf])FpBFuWBVOAo)q)o<0^fiL=,Fp!F
%bD;);0RCF#i?F:=c#8_K"\rVhcI-'5aFt!^JGErY7Y4oA=BANmkY53/$mJ0YLe]83qF%T7F%Y8e^cDrI+CX!PBrSIZ9jG['"4gSb
%8@L-uT3t*#fV?g55l7r8dE3#i_.LEi#"N`&Hr.R^mj0bV?8L;&&\B0_S6UOlh@>)^R?t)HmJ7X?PR'$elr2l^oTlDM9/+&d)'LSR
%-=_WBEPp/J%"O5R[IJPXF$a'/)I7p'Mkr]D7WDA.=^fs:17K!V.uVM"U7.#na9PS--TXRg?0;Khg0W*Ls"5Mu?G6LB8=1g0A%?P+
%3XpUN@o8e2QbmkJ&e!22*cD)c9</Nf2[g-MQfUA<.`la")0b>c>#l4H6St!"=5utQKT-0HA.nu9FLf&N8JkVgjoeZe/JW=mgas(j
%<Q$*!,)9-a7A3MHeR$'U]M%=@/Q!)f7\LB:;<_>#O7sF_f\"&;!\fXl%N^r<*XNk::L$]c%*u]j4q)$-XA?9$-&Tih0_]j,l[T&6
%TG,M"JS8.^dM!54"]/mL!&cj."V]uR4lA(`oTLL6!A0Tmf/+@EL"*&f%XiU7.4uOU'/de[6nC4AkbY6Sd+9FcIt^auJt6t%*k"C)
%pki2S=MU"5NW<-!#R(tci&/<ijBL]H/CRgf4qoW8Z%r[EbZZiZd5.qXp5u=!EpS\)0h2cl"3b=_Q]q7<$\4'D9O]^nOissoN`%\g
%a#X76;*,4@7tmZR(Q607@jfZ0PEq)F"s`3V/qq,"^kkLG7J6mB*MWIHZS'<dE#jT6=H)GDJ.R)a)O;`ECK5r>k[6f:B7dNBNGicD
%SJDAP>p>_6mZ7,u$peS=B2C.D,q+p.I4aL/%;AA%-on(9LqtTS+iZ*pBi(c7`aPq]Q;i-NOgV\;mn8CnLM/>($aDY0k[Ip=j@$Wq
%nr>R%]tPqS)TI-bPsm/Xd?PW6JRG>O9=7.$[X'W8"<eHO`GcRPrgZd4&cm4e3%*,&.S057J05Vd@UP+_CX=d:n.Qui0^B4^pD\9J
%+j*[t;KO38@\f(jbo2R6_o]@D_!XkBj3X1?-h,hI6H8d$U=\Q.^q9(GNrZ4rmggSXn'OB\bX,#!(Yu_>UFo@VLpnb+PRq3@9HGd[
%(;s-el_QL,EfV_Z%7(6)"k]9FX!/:t/k$V0VI0r0lSIH/Mhj*TbP.rWX[`b*(i-q\;@HIaZJV:j(/1Ln*d>?kds(-4@&+=CgD389
%M[3'i;UVl75%9Lb*Ocom*Q<tL#n&cZ`"Z-B#h_1Jd3-:U*VuM"2A'+3\<2Dh!d1ZV2m@d"p=,fO'1jN?2bbiBL?O8kdThIa4urJB
%&Jh=(6,H=RDk]6<a_-:s'Ird`_#fV#W%(0S%&C[`/J41@>);G,V1H1'WY8#:2^U7gMNo8<(brsF,t3WO)KA&b%=aB46UUb\L)O@R
%UA5iTRjcCika>bnYRb%sgZfnNCXDgoc:KT]fc><=@Ksp&LbQnX(C.uS.3q:/2Q)8;=aZD)dfT7VhF!KEKpg/D0F2rSAM+FN_TR.B
%e[4Xm`>2aBA4#O+RPR@dhp`gpUG7d00fJ-G`+rac#JDUU=8J>)3`rKQ,DI9A]8h=b1c&'Q?oqoQ%^KD^_>CM7E-1L&!gEs#-@f@T
%FU3OAjr,C#a:lIaXm%G,'8s>YPDi%="QW$(N(YrBHN`jWb[4m;X]]#L3hZEf""M[7^`1mk8H0FX0i_9oYqN\c(OMmn1=J)cV?/<2
%J1bf!Ra:J;@mM.W6;^C"JG<(r#nFGi1sT:1lllM7?Zdl:@@TY"JCMrh#]MSWMsQWU".IT?F>!YJXc#cfB/6_\PSHT:5oKstA2FT!
%=T#+#MMX^QYZ_0aBp=E.>M^B:A)+)MiH-l2#egR,1`8$b,7BK3\9jejX+7\/*1<%<TEWRJ$tLX+Ls6laU>sKP0f3a..>+$;-a=oB
%I&P)tG_g6\HoWnlK;L[RWs.sa(,ufP,#`m%00H)*M'tr>-;<]I+tb"hBB[%#bk@'k?5E6S1:^m;%9`q@lcbu_#oU?t$6'%PLYO=<
%UCe):9f[dE><Hb3;b3WC<^88\5jG`p\eo4L`aU[P1cYQ\BF#l_&b<;]3b$+g6sqk@-f>%]rIsdR&@ju>64AKj"1^bF+.G9bR:mPR
%+LIe=2%T-fTB\9e6W@[bWY_eea9\eWq))B^`T)?MrmefL[%M676V0^6]s)R60YsPk;UOEo\<J"+.LP1.Q$J!ZQJ"[a"L15s-jtF.
%VG:Uai%DZ;c$dae1bYiG$=qh(kA(0N+#k7C%;63=_j*5A=]9Ac'*kP+Jti95^>M7T#%8J]2\[?r!Aq\:bV07jTc3n8(dSN75Siqu
%Z`S%>]2M(l]`LHtSC97Qps,\YSI&oEU4SG5&;n9\(&CJ*A[8'PdJ9(Z)#Uc,Od_EX#pDZN(#U8.6*Xh8JO^)WBP>J+(i?@)_W%6u
%lQp-ZO>ge&+Z%Yk(l;Qr_FHH:Sr&JkC4k*e35X9gFoY]VRa+a*/eN_(b#D:[/3[HR$aC$eF;hBnFN+9Rq&Qc^!2).HPaEUF(pk^0
%M:FnUK<TOm#U@o`L#HP&2^;XsO;ng[Ul]Q/Z,KMG>4e9]^g&'MAi4@^aG))Kd?KM,A>Y3+,D5<4e$iY^k`L+C"W^qco.Vq]#h/:k
%8QR(*Q^A6`:W`^*E)-)5a.gr7=Sf^_Wu+$.Fn2t76!?++#4G1Y'eN[-a3)^R0/U_"05+InSEAltW*sFO_Og8(gBueobmRg5'T!5K
%%<,Wk+Q?W;NEHtiX*V+NhY]'G(<9j;'(UF'cKB"X`aAC/GT-KVScq.\&#EFLrq0D98ol3^%DrX5:aAS_1n>6fI>,Q9.&pgb&6M7l
%)bJ#C-IqJf.`nbC+Aaq.c]FH-1k7nUp,/#8!&l>Vm?'=MK:3?JAYr(#YWO(Y'5<$=8b$YbM+Hl%Re2ak>!`-a&;A#t-ohi;Q-#q%
%a`P2GoM'Eu^#ikA7WqGU'@i&])@>2bZ$5u;LB2]50L<Dd<X0a\Q&6Id9>J,flu0?ePsQ5i`bUA5dWWM`!BEr_.^DK'#FH$<;1Teh
%RLhQf'VI%n#)QReD:J2Q#5`gM<X?gR$OY7!F9.Qn(/('(-I>g7J^\^LUkHM`@IIpuLPS7X8@sQ_Ot0BG&n!Sci>>;b+]M.?6+k"[
%OMp3a/;9$Cad=AO?qUt:XeJ?1+fT@1%uW<]%7IM=dt_YY&2`MTi`jCM/6Ut_(:uZF#-!)8UNB(/)sDOfJ_*ROClfg$KXXWFRUY&,
%A`a/+JLBM*,)VH5S5:J3+E-PG0'52M#oTBDH4;Gspl!))U0aiOLc[..IH5^02$3T>190n#Me.uYQMKBU14]"\&WDHb6Am0%#%WA%
%==ASa#=#gpkXML@fP'8]iX)OiE'7nQLc:7m3XS&c6&/_Q941Vd;J/1bW[Bj01J,BR3?^))F-#/;]@>tob!Q.m+X!-%O@@<@Js#!A
%N*Z%q&sD-cgHe&[VVN[LS2KP$>fF9HWa\C&lm(>:?7!g]\EGWaq4q;WBQEAr[X+E?Rq&/76rX5<3m>N-*tcl!=0s?mL-'KV*5N*V
%#!E3'lH-mL`tbS#BP7q[,R:4>Rq04J+p\uA_h1H'VLuWi)C5=;m=,r3OjW2^bjPud6$m=E$gBec_ABm=olJ+C?4\pE^.atjSP]gr
%jesD"bAk`X`175YASCO$=%>.@Oci>SaMC\RgQWEf:V5_b]oMaRRQW7)f]\bMXoqj_F`Ka\%_rYaXlbNF9DHFTBVKFU^3@?ads(*3
%@&+=CgK?G_,$dY,8=X!5,8H:$KX_X7/-HZh^eGfKcLELcAMu@OVP2"3eTAle)FF&D%.Zq77N<3_'dJ8C=hOt@S]_oA9QD#U;rk:&
%U\%YR&OBpZPmOf_aZX.i:"NFaf=Bt3mp%`Xh'3+ifGc=L*-'<#[9Vse($:ORU4MoU.9-GDWR1gD7gi?H6rW4;4`(kYTP]6r-\s1B
%5m;uk.g$i+=Zf$pe/r6'2'&uJIDE#[9PI%4bG%EP-1W]`aOlZRbY;5F)I"43;$[NU('5PSR01aG4BN2l?+MF@`OqP/=AbbL),CGP
%Kbg)3StDI+Gr1[Jd3fZ@5MhDc#s/[>^0gQbA$$]=5u,=aZ&o$ZjY_B0o"u*AdaT:U,[8+`n>P&64o^ZIV"nE3W"<Z/!N?^Id#$K7
%K1]_X6$?k>^d2VV8@DtSn:Gij7,%dL>d4)d)R)RKo8L^G)/-:.RAr51?R;H8ciQ:d/Q`;*JjO%W0Q5&cbo3AMd/kG(&M4MBNWomL
%B%XE,,Or5qj/MTm#RH;:XnElf&[h.+#Rf;(Eb;Vre=kWjgsDeU,ARF"JHk6aTOFt?67.rZ04Er"bogRIB5KnkU3/L:K?CipSs=qE
%CAL4%3PuXuKS[$]T#*4tIs?KM>N)DK^pVCN(OInn4Vj\4>Z;4Y0+SJ!_8j>K9U8/[(r3(+(*Wg0F5`BTZ0q,r1_Tua$qb8H=NSeU
%=gZsXU_I^&@gc5dm)hZ%)m+g&Y@oVhc^&3W4e<A,6:QfX][;=g9Eem[*a?uY)7<JHkMa3LWC]lrFWFAo1@0HPKC=D:?\,K(Q?<Nr
%>.^3I#tAMpY!#Ti4G11aBOSK`cW91AQ[76-M*b,K&bj_.W7;3!$h5M^o5!&@Hmi6VE5#16Ke-&J!+Rt3\-ZJ'WR=Ed-rPDp&t6/Y
%B$G*eVJlO>0OH;uZ%<a7Y?o>.\#fBoKM=185XW<i+dP>sd/cj`+I<65caa0C/aJ7p@:HYaE,26h9gL52ir%YJ`UV$_C3Z/XBF1<D
%RAbRF8.d<mq=B+rOeKjh*7Q,EBb8'I?6#a)G[D4],CaU,lbf9G/k7-"><0ZZP5q>S@Y)+'dO!B=nd&hf/Vg@Be0m%XBI^f%d$H)H
%7<;ol>WOIU-d\iNEM[b#`=Dl3S>Y=/UQl^8-!D?->XeEQ9N`Y%(7UVGTV[r4<4CIq.,UC0mSs8iXRrW/%Gd(N!ADMJ&&<]>A%+#Z
%ERKHB`I\,W"+O+qWY_DlAHf"UN"detON"r,j1V>B6^*;E&qoX=9A`&,P*;a%"-hpM,?,sUXR\<YA>EnlV%@4Fp=aXSTG\W0"XssB
%X\0_M!6lX'e<Sc30boNMC-a+L/;bVCAnhJA]`M^(9c*be'ajEHS;/3`M9sB>$;ETVN-4X]S&]?"rNPc*]Z!G)8<us]T\"dMC`2D+
%6Y.GQO@M^udDD@P!G4D-\$Hs_%`hd`6#Ig$aTRGhOn$5%Z-q%8N`68#n-f\Ooq(XRHk#(Vg>si\KaY/K698dndsM4Y^q#DU)=)=D
%.;"of9d+nQ<"3N?%?*1J`i'`?f"2ouEs]-ZX/;jNbmZIK!Iu,3'&ro7G'8cFW<677!crlA?-JIC_*i6.$Y,#9"4J1O4RIAR4auoG
%9]ubXZI]-2+u7/ZMN3=)WNMR#&E1D_VTWOnT0u&Gj,J%\16t!cIXLG/2*oZZ>4aIN)_c\+rh;]4VM_#VS"P!^PlVeKFDmjRbA73!
%c&*>og@(0RalIT].o8j_<n5804Y22*.At4D(fS7P#c-S_/]i%"Fb)"XQA(W9:h3;hiTc'^I6_o\J`t77_SM?g%psmd+[?0BBHg>E
%M,6_C%E*M$;Qd@33<bP-^J$rp`&hZZi`hLQC>mI:H3;FW@j$;\Z1:S[K2u_Ue#BRk0K[ObXGW:(@aLMt"O.h])AS[5"ct]Z^,5d"
%]<hVHdWO;>/8!S/N#.9khMf8Pce?NM:UQi=AMhm)7Lp&<6Dj)NHc!?H.6du1)<NAZ>O_,$c&KRAL:g?u\]\*a;+4%YKr%%ng-Y<`
%e_+Zpq8X!BZc^,5I:6Zrg.DW6)m+gS2d1T47AhRtLkklEaTQ9%d5ip]"^%0r(26UW3;U<4L7[WnZ;Ol$%nP"N!:2.i155rW(6.Zh
%`-WHJ@RN`hoHol:9G3j3i&\Xj^k[Lm!3`fMR#uRQM'"OqfNTM>?F8^#,T/77C=':nF(nfC7P/FW?j^REZPF3\o\HN*#ur44'S-uU
%3;R73C3u%[Nljhun7><](g@+=NL7@jKJOd]BoioYRU-FaJ2KNGl0;FAOVKB4"O&MM%1/>CI0U@/(FW/mPnRkXs-+goQd]Y=04Go.
%oKH91*)dkt@-@q!d?sN`Ag/CMO`XW[nM_HThD[-;@+*Kbj^^ZY'1mWAA@'R!`1=c$N<<UfCA,Nff5NXL+kl\SB/nBmC7P?7qnp%t
%'Rb`*E%/Z'?6'pROPT?mQ[\d+I2gW,rcc!KAf"R<Ie!Bg^V0U6p;rfYDn_MflrKHKr7.!D0>B]`qX-"D^\Sbp48n4*=$M(Vrq*Yr
%a\R,qs.B)H"_st0XMR?L3Yb@?lJ]M)ej,i^0mA<4mM0JpZ14\2!Mq"6;CBG6XEYUP)9r4L=p,@W[Hp9po.EQ^7VJVTNAbdr66R-Z
%R\>toBg%*$3J/5EjBU&)%E`7hN7&64].oSH:nqc1#%!MlrC9!WAJOM[:.+(J+/<WfnS[\,N^pF)M-iPd$IjZ.QN(_M+CeM!;aLJ3
%1up)S=^1""@>5ro<Gs-dUFdB;\*#X<i36a!YNrBG,i-FRhOXt97Z3^kYMY)!<&E+OYH(i)b1<Mo2O!B6\c>.p9)BFmW9=4D'Li0c
%Qtc,mB++!:@k&^!CF"$)BN)ng+4X)=rZoL9g_[7YY`DXo_6c09\AKSEqNTCPb]KP&N>>5\$5NbDE<2hmA,6sL:>AF"H)EO>)3>dE
%g6iP3]N3nl1=YA'bH]\2=r=@hLC0DFd%[csBj%2U":>1F0Rnd19.7C<UP4R$!4t"=S&iJ>*P)=)V#_HqN5,mVNiXWLA*-kY"U?ko
%MR0+`88g:5)MDWQk2+K4@R17)GYg2i]oEHmMY%f(rCE)?$Q2\J?-kc*NBHf;.WfO4e&^BD/`3(+=(B@.=V1EE.9O8Ilj7pm^oS@V
%7YM-.]q-Z9Mq3@.g2!&V8C:X,g'(uZ>h:JmBLn<9g$AP&RjP]0V)__a#,o):IM;,MN/S<"B-ScfH*B9Uh7/^KV.Wd5K2@(RXP:&s
%@VW@sG):/TF8DCFfin0%(9D^J)OR7W"GYFljB7eiWX3%_7HO$#C(,hf>W+0"%4uui2E.`a@%nUtNgre^nr$=oW*/#k75%)T/G/LZ
%,/RQK=l'RPH#$%q[>8)phi&E[AlnP0eHh0thkKaj`iNEOp8'o_[$Xbu+%E;HQE9R8]p]_%O,\-/?4&n-]U[J@N:"M+,\3mc\Fc4o
%&mQ]a[pa\%=u,Gj$mE<f!7]=^cI#ihpWs"%C,Fun'G1HIP#ck$&.e:9n1'8S7*9s"d;=t2ajT7W!ZH/X7I*80"I=*4-6DC*Xu2a-
%T+Zc'BfmDTMRF3NeY^6B(/<F6QB>pK6IBAplg2.t23>tn:"0ZO@()kI"OIBA7m4pi?o4"*N&(dC;'[`b;s2h'\n]V2R]1=lQ6Rfi
%)(L<edQfX?(*XMT>cbo$W_>56e]IUJ+VN.j",I!T=:U6YI@4=U8-!4+IN0=Fbq&:mCDq'U/;!tk%h&4D'sm[A[)bdPoo9fq"95g@
%S[e5KV5Rn_P<*F=UVlF"7i"GXBQ,-[qEm'd/p(8`MWctj?!rgLM!VF1&LlTA!VrU\bfqRP7s#AdjGBO5cj>6.\D#'-.NFbqQ']^V
%W*/VggdT+O5ln$>-o3ec_*c;NHt6-mJ0c51PGPJYRC`s>r#cA\Mq2^,>nQTAki0bEMP.@0857EMe5?Fo49M76[*EY9PS<$9q)hON
%eah\k1;9#%NP`'6h0<eP%H-!gYEPs8)kN'b^eA2f0s@7o?c^-AK,G%V(MLN>&QqnNi"&)!1!Gs!HtX*u/5i_]$92"=V]D*lLaA3,
%iFF-D$>LOH8RD$R)Aj[I[jm,`B.H+RX=fj59j&9HSC*F/a0K;93'33e7H[\S&s+MmHT9MX9aZtC0ldRBVfnCZ@)XUOJ6#sI^tqO#
%1DdH6#jK0W!2]fo><d%/'GH"__*g]oX^0q^n@k>'$D>\SLC1l@J5eZ9_sfCR/H]!R9Np4bF-Z)[JDuRANX_X*a;T7Bf7@!GQ9c3#
%=`08H/-9*bAn-XU%Ff>>0`m22QqCiXaiaaNQunmQ-4;O%;%_HlRuc[0JQo'4/Z&0:#8O(@(1mK`ng*P%$soF&jksZ;jrCW!'oN-#
%%r$csbHU(RWI%j"Ee;"5ab0i-2enesng*N48R\mZ].rf8iTVAmIpbqPPpF))I,W#I@^a2V%k0%\L=-HdX,#NWR'%D(qFr9in^:+%
%bBZU9V$pp@Zo#$2h[Z"^MKC8g<=,\L:5K<4JjLn!%(,Y5ep7LZhCog/1CLp$.FHRc&b2hp6`@AEO@k%*L"V2L;lLs6aW0gp;H?'u
%&s#C&($.'!q6'\`OkPhG.sZVQHNXniZ?mSXJOg9.M#%ZYZEeA-;n-uN+W/9gH5l8Zh3](J-clA:X6ZtpO\HtP)+LB"g'S@8_)]I<
%[2L$=!b'6n`KOEpm?/g#!T.;=0>Lh'BUetf1tB=-nje>VrN[ZO@T3o$e#$64]\.=``o@%F3s/G#(3WeB1paL8T/'g+4XG,*aHr#u
%Ll%O=bQ+2(9b\n[#WuL6Q1gpQ?qNhN^$5p0l"-1CWDqaEbhn,3HuO3J6XMOZ@)l\Z^Z\_'"5$qmk->UK7o%6@+F1%1Qe<oDU#e$0
%1E6j[+#Z)(W8QiMJ^mBR)Un"spS:fS$o-uSYa2,pn3phI]+Uk?_&a+P"4AX</"D+IVshdCC.6puV_UOW/riMX7EP7fChYWh2>Hg3
%<\i]A0NR.lK,>f:@)?V0$X"fN9d7-%k+pOYd]+nE#g<>Z@^"o7dm?F*2>:MHCI&=MOIaSA8iH5u9Qq!K+C@!GP[;JAO@_T/=TgZ+
%>>X)_UK/pB$Y8`5=RA\f$7$=%d[Bb[<^M@-M!`dGZ6n(GqQ9636INA.IAY"`7d(#S5N_o#063q_JY-S6f1F),T^$SuZe=+h/="In
%@S>lh5r1$O==i3T=#!1''GeLj#3K&_*3;-:0(fW_OM?c8p[W>J^j/FW/u^Kbr#2C4W*k`u:s(P:q/!]3!!tcOf9ZuS!?Pt^c<F6`
%@l,n(8!=@>)9)*o=fMKKkFKIeb_WWJH"$b=bLeRX/>'&iP0NJ-4JN$u/'%^m%?AlP+@h3JTPm]@jYU=McWa4#KpLX4NCRXg)en&R
%?8A5;6lN_4V21R?_h,:nfbqG*D+ZlZ!j(okP-_H+a\aWBSZiZmNUK#j\-"mZ>Vp/Y_)EC&W`'-Sj:,#X6pF^uDr=HtH;6_'WO(&+
%TdLp9l)V&\W+-mIo_(j0on;!q+:JH'(*a:R68Z%8JOC9pf0^aPOrpGP;UokT!Y\*mon/A<bq'D2r".d50s@hX5$aSeQZY#.(M=VQ
%8$I;4Ar_4E=u:PbOsfbF8P@SZ(UO_j2#@Ca8R@n*EJlZ;;R*6Fij[M/'gnt1MG$[3H:Y)*UnpIp@7:nT,diEU+kg*1N[UYij=2`b
%Uk!)+8r:ta;IH51S\dOLN?#qdG=?V4IA,?e9j:.?JAh@HI9C%KQ5'YXX'nMM>!Ng^5\O=^4%Gk:-dg.;,;b`fFE2E,ea`\aNM+[X
%b4jk]?:2\DOr08eO-*F%TghSnIROW#1L2C'Z<g_A2@7_;l/saIka8Y@"Bk[fG/025ctI#S/lPqV)$dAUTlYgCXGa0/[NaY[-,MT,
%HPnE2IfR@-g,PnP"V7/16"`54'BEk:ne:eo8d%nOQ$%l=%E"&h=a1/@..cJ`!/GBZWeX\q:g7!Ti)%8B'0Ika!!1VNeH_Ho>r;E^
%@gZ!+YI[.kbQ5VXP7oZ@jn>`)&O\?8I<"deJT.V2aS;Y]SQ@5!a=qY2d,MhEX0jKqk\mP+:@"BaFik.>!YJQ@jZp.b$J]ZN[:5"2
%K0f=2=_s?\'I0ZY10@<[+.2L!>R"@L<1](g%LTb6p&a!;3ZV;MT75KgFlFZk!\7ntX&hue`<6l,f^"\P+R?Bb]iK;,.5"X-KP+CL
%8a>B^kYFB%Hj#lOGbV]qZT\T,8h0soqLq<*1hFkWd]=Fk,`:/`&L^Qnnl;efpp$Hi$*d,ZHln1ra[j*:E(;^Y;[fR$PCuHTf0crG
%Lg6<OB9NB'5h'$Q#2Qpm&t#6W[1JnRn9!WEPIVYb6o]UM^[TI4WXT.l3@2&XY0a@"ABTQf^''$[*06q2p"6d;L_jSI2*;7Y<0#[T
%XM"G1KA/+AeHk/\fgi8O)=B+5hI4$Il%/+#7bj]TV$Z2K!-8e],[6:1QO'&mZDF6g#VE%J?o&oRdQr1[PCmMQA(Yb(aBAk5QW^0F
%*.nV7r>Vcs.!IA5Fe*MQF0Fb7Q$&$qX]I:*)P'QF9B$,R<Wr;$K+3gVinbMORB?'RH/a<F@;q9U<m\[QP*j2?.?c@-W2<$th*uqj
%XX8*FB$2JN6`/n:O)7iMIRU6hU7s2sRTZfHnd>;J`%@"=^#[Qc;(6SV'bs%9^kPELj:]@&KhH-`P"Vm9/I`[Yp/0))@4QYe5eoo?
%TS",u8[<qHMe+Id!f5j*ZYDCqFHQs0kQ81f:4Q8oM\?M%N\qJ_).\WYXm9"#*d17XjuC0PNLWFj/q`Rb5bQ:T'm4(o`DR1;KJec]
%^^U^(`ZB5[%$p]?.b4/^lq3E1AqN!:>fb^;]YCBW$=uXpo&\$gbSj(jR(tKi)+4]@/qtOs=r:\%Wg1?+C'Z)m^@IOXCPB/T;`$8s
%Ymj4,X(@E&!\-eL&#U^CA4j>F>E#0`"t"&BI4+#E#('ee.BT020_apMCkrZ@#"FRu-PWRjdpf_7M*#r)A65#b33Bf3?kn6G18P+]
%VI-G$')Tut,s""h7TC>043pd^Ad0Mo7\r+A@a&F^]d[7B%WJ/^c=58S)T#e\&`K.2Z`+U0!=_7?ost8U`n3rV"6D>=L8P4@<Hh>8
%\A%SFh2.q3ddqeq=4B*Z9]jQdJAuZ;X;NZs+_;kQkdLW1'h7$sgP3F8QG8iPN'"2sIUKma(u>EHD.dYpC)c[\NG[JP#6&?T9i-E[
%<^oUrU\LSLHR@u44[MGHnnL4'B&^1%Pj+nZ$18(llF&<!G[T4QpXP\['QJh*9<aaVKP<!KMe6qVYg#b13"ERSq-M=F<i`*;E20Gl
%jD,SHq^rQb\*40=(aHfRr'N[r2#XI$1a/A\-*q"pO4cE`lD3EYYuGETWAsn'o';]BS41R#W]Hu$0lH$f.*ec,8S<_9J36ECd0[e.
%eASKX3hLYt`X]AL'?Ag3QaF&OUB7[*m!NCY8&^!j%Tk6<$?B:[`0%^11M3Ksa7]ap3urDmnR^en?d?a1'm:!9G;u`@K;bp-iLVs!
%4/39-0@Q?,n[c]F6qA;XPQS/cDMc:$nO1P]D`B^1&AR#KL,V)gV%)!p(gF9@Pr,!u6>E;*BfMWi!.U_aL'+Ja.GBM34BqYOB+.S\
%&s#+_3.4:ndr+rtOkmNLh@ZN0b_0O-`7Vr;/Q2.PADtJ<=SZT7iQR]Y6@5U;B5VR.B2mgmf1;!=9]=ndD6^32iN,S2B/JS$)gSuZ
%-li%Q,U1nSKfa13"2gfGKnH[m8Yq%f*/%4KQ>_Vs_;@LAQ-L$Q7EPbu%8AgpeR[@l>Rn<V*JU>QKO]d$.eT2R*8*YL3>`1`+pHUk
%FsRE,/0-q<L*%Dl#DouQ4a7@#->i,-Ugd*`N#]JFNJ.m`E)9402'1Q2kT:GEDlCM"7hI$KSJ`DP>=SBC0nY*n.flIgbi%7pcI[mk
%*#)Kb]39$M_7;KE!n;i@SE&RqJ8Wlp;p.iDY0F[ZH5C,oe+u!JrT8iTXS&$m_3&h*qU9F&.HI4-ahcSp%6M'XZ`;F:_0I\EcO>,=
%&p1qthpR.PRCfm9IW,oG+E(]XK9OCbq`8Qh_21S_Bcd31,h6)>nicSslRm<\5=U*@/efGA*<b=HeT)r$Sd<2I7P;ui"QA-GNV03?
%+<6+jPOpd2i8b7mol]F&-SZ>0'BfSXB[Nr32?_t=?Br1YpqbY!iA5e!m`ibOjUF@4T\Y_ncH%BW4s.l.4nF:^O\D<bis03Tk5n&\
%o7J:W6[@JXK0'jk\[:p[UP7K8K--V*^IB'SdXu&7+uRuF#KJm%FRC)oE'cR`1)olDKE.G%DtMu+m#%(-YOpaT&jT8PfYJReAq<G<
%r87SF8/\kt#KLk[6db_G*LYi:RWO!tZtO=SL*,2jYHI4nIW,FM=A,s]#=k;?E*;?/-\Z*+X/c*URMrfV1Oa:=lJ.g45I`)K@Q^Cj
%-]&Bn8*eE%jVU'"o\`j7(6T_WkeTPeO@\3Zl+sJq@\O+Z(@TQD_6o^#]CCNW2s^D"qG`'m1I&C`*dq;R#@B]hZ[qG?:(:"N*Z<5M
%6>eN21O="`0p\:p&'f]u,876-K9Nd.,/'ZTGI]LuFaA#1Ul]Jj#7&8kR\q`#3++TI_E0n?YW.V-FaA"s;n8UcL*#-VR'-:N*ZW6R
%Bc@7>3-f&"0RT`&a4)u`EMEad!3fSdL?=I'RQ,?-%h?pKaPYn\7gmSR_%2P_^sMV,PolM)En/5RaU_.p@<.rUpqc4aOZTQ6K54+3
%.mNfTl%U:M:)\2%4$P\2VfX:cis-t1gg\Rtaq'LE:]a#E#A<I6B]Y0pS@a_8eD0l9*Hr8ID<2!-Z&Q#jchu^'9NVTapq\\\bZ3<d
%K;2SY2!kG)4:ruP-O@aj7BC#H#ff9@+AKB[KIcMgDhB/PU(P2.]A[F'k$"l<?kFB6&>AJd&FRX1Z+)TAE)Ik0=B:#m/CQ*4)hN%U
%FXdoD-O;*5BW5hp#^68DK3^MD_CP@;?0T2k@YX0&*?9MiEjRkf3+14(bMWS;EZU$UB>X&!2)O'U_2DB\LJA8LS+:=?]\jL.O9[?s
%G.<?GOFlYej1XCScTj&?58kh-0dG<'=j`<g^N<*SNd(o[D*&iL,;TK3SV[lI>u0=*ir`rJ0fNY.I,M(k:qldo%iiiF5#g\IB*EqU
%:M"q3B[Q4=2LOGJHdd[7#7`hJ)^f_cE8!!8/\9A]-g"OlPmokK^jKbs^Z2g'e^C!.bJ0T4,6K;40)=6`of">2kbkR87@f&_[l.hm
%$I"Jg&oMRVAL6Wm9/0Th7W1CV2]1u4hteAoYso*m%AE=$Qa2Q7:6/dMR,6iJQi74_I/4*uE+IpAOk*20%a0JdU)=\*.21\8F=qN7
%DNN24$CoXa.hObM3b9$tB**:YV@N!P$(Trrh,2po^]A<)(=:&(cD$fD9Vn-`S0iBY.hO`ZXIs&M!pAF>@&<3hi+VUt&:qI-_pF,D
%*:M(.b>&49g/K>UFt.IF..H^8'f_+tJ-pBJE14R;.E"d]c>"E*]!eXJ!\\L>3tjS(I)%MaRD=Y6\[!L_-PIasUcT/J%;D\*bXCB"
%eRU++-N[q:O]n^tJJ/SI/DchP^q$F%C!SgP32pP),]&:PR66*4mQBF7)JHp/*cTIdZMo?s"3q@a=Zk,X^e*-ImFup%aa2$sQ44?a
%@hFu^Q=1E]!u*'8K*NAJb[02tJ?-f%[$:k9/Ri;'Pm?*LM@9^6L'O5Ej\fJKhuq/eBRT"DB6fF?>DrfW>"1NEN<^H#U$f\+i;q!;
%iP+EE#2G?@(5V+-"rq"VZ\/Ml3+(42[uCS3[KCel[QNJQ3=uN74Q$_Fh_\(i%ldb6Fh+1HGGHO^_X:!@Merh`BY\V!#'dAG!Tu71
%@G5G2C"TWoYLA"`19J,D(3"Z!k-f@IE:RqQ:i!rMcFbFj_U;T&RH-c8lR^t1=j1_b=hrkG=K/WWo,Wp-0j)6Uo`l^h>ZnjFV*cZ`
%=MW<o,hj.ei/W.qPqs%l1/mb+`W;)@>e$o9;1PFBQs.2"!,!H]bAj?Ya6Pfbp3-j_Vj%^;9**==Wo?bSc5(:*eLA;eJl;7n"ZUoV
%Dd,+36t/_%,!&p8E8!@h(r+/ncMh#66umgApQA*<1C#lT![9m^"'kM].k:occbV6[>7tmY:8RE3m%ROq#%QjD#<6EYR<Pmo!%7N9
%2m\Sci,J]eh)@=/+V^5a2fjLJW2SoA$TO@'FJmo^"^FFDA`<`7SR?$uJ1In,Fihc.Nb42()\4n1rS.LTo7-oX:j2F>&NJX9_<O;h
%N\Al']cdHTpCf+f6ERKU9HA4!E86EF&fVm2oK\>Ypb<h/l:4nJFrkU^B.re6#9;"2`mo@M'cL=[^pu?G3k8f&LTIhV@'G/;@>q2)
%)]!B>M>0!6J.ig\jp[daS-a;j1,2iGE.h,S&>c^`1KL?aLX.O0"Cs"Z-$@s$CYmm?!G=BK\F>4WS9Ck%Ke!ZnlTY]aFXD(0eth+Z
%1P*/Qe,c*HS4S2Uip0:rYV_T2EPhq)W"<*V3YOKW1u7W(1P);i=oC6Pi+Q_/=D%]U,Ad8PR0fB3+,PV3'0%cWC"@DRE'BN[`eFd>
%;Q9Q"FXD&90faC^'0%3h,_Oc(JO;hi4JsudA":':hd?LuSluY=%B<'ED94:?37=-U2Vf3Di0k_l*,`Xsc?qeWd[^a#YopGeHBtXu
%U2JSgT`V.Z)e3!L^`B30+g4l'9^q%ZZl:K6"h:YrQ`C6Fs/<.\<8c!&.gF[1[Tt_GVc/.nB-aH\.WG)MYimFuM@AmS]0QVgSH6Q2
%.WBK5AJ]G<E7isRQ?#Fu%^`@JcrMW8p)[RCWPCOhoF!QVi!A;LgraM2JKrQHj^t4g#HOdSgLW=B^feR?(7iXkgR4"IHp\(_$8@cQ
%G:IR-*:%2QSI1m0A:"!<$63&Z8nDC8i%-PA:0!hn*,gt)o6hqfa6V0>lWi?ZF=hCfE.LC'F_EfP\@)AFl<N8[<*NreE.Iu.ggFCF
%kXo>G?Fdj/6lK)UE$V,u98#S7NYZ]cAh%bYKC7^GWPFpiYC,1r"cdZf.VtKfOk$$pNSg/>q9Y:+,&dZ@F?45o_!t9:q/dg""E,#f
%2^WM5jQ[RuW5-N+6$e8\"\o&Bm+jIr^`gK#'6PdDqN[U-gsO*c[\(`t$XDL^f2aMC`d!m#e[`KC_MZ2^(HC$(^>Fs:jcQl:*nK#[
%dD5Um%3%:%6WaaY)`U&(`^f1o^Z54+$hj@'5&dAmdeDPdJNN#MYr9Sr^pQP?O.Plm6Q_'2NQ=;uPT[k1HDCXUAteY*BQW0+.OPhK
%L(>8f\b'u)nprS;Ufp%md/e'NbR(T6"6XFK%%ad*<9s*nI,K4`o[A$L^N2SX<[\!uhsu?IP_A3_pqS'LA2G<Si$>O8D;p9\*;rU`
%Eq"W9bfUR.c3Nc`ilRJs*6g_^"s#\#&Y](f#EELo,5Ef233LaFqb@CA(+)7akeR!"Q54R'E'/c=l_">]*X9t9DWnn#+em,.d"+!3
%?aF,(^u:`?N5[@h3;e"6luk:+@KT;9m;1]G""Fc,%3%9qal"o+^u8?Fq,h83GMH;h@H!U`*6m#R@qoKU-ar3+a"XiNj6[i^F?:GO
%j6$'2VDC,L]SA8]DV2`*gssIQ,%C^F$V<K>ADi9]K+Da:JKs09_o)`(Um.^I;1TsZd;iEY^lau+3eGW[hJ=RH/J0tH^`;@V"-/*^
%e<L4X(gnVai6264on>Zt+9?-*J+Y;sGdG(I[M7ZEp<FK`i4qb1[bich44Z9"^G:>77E<=`^`@V0-WTf_!"LbGjs>-OE*,+KpY-=2
%(Q,.uq7fe;70fd?Ikta>CLG'Z%Hj0b\AnN-3dstlG4KS@SUmATbP_lsWUOLlrLJcnp;n1s+-rX<M8/#U0.ZEKpUFi#Nj4$XbDJ`+
%)q+0fP`0jKI\WrQB*hd6^Y):QRSN^=(8WGJUu,uS^hugA%I%GPp`TNiVqEE>Dt&4kVVEqUpN"AApl/H>#F<KWpC4SdSrnG2iM*6u
%ahFfm3^1X!O[%F^):^Y`/Q5lA^@Bb_bRC@eJojTo3\u2jRAhCMoZ[SJ5_J;?/Mol(9](i*MJX[9L=6rD46--S:@Yn]o8T4#'&q()
%NVmC"GF_=>YqjA2;LB]eJW,Xbn;WEO*R+!^^NVKg@ISW-#RAhfdsE=Jj?qY*HXg,NnB;;]DbOJH+._.*=sl+cDPm+si0<U&S_@:f
%>;GrueD=m$7gs-N[#f]S:jXugNWhK`DJq?f-nr`UdF,[mq^[ncH6H<<D90Cf-F"i2EdL0I_Z&=EHfN9NH)lqWS'_TX4EOouB%q':
%LqO[t%T[noL]TQ-!9F]"DrCWEbZe[tK)`p))9gsUrCcZ2ZSta1'W,c9]b.>JY`naQp*Ms5?E5Zc2qBX2`1ZhD679KZ=K0!=;U^KZ
%;L@FlUs0B]D`0FMG0eChBVr3YeD=kIct%*BdrB)4AXU*BM'=/VTQ>It\mV=_E-oJ(@7Ygim7eh)k-/lQ".ESI":f<fZtSRGL>,oU
%BV/=CDrUN*q8)GmDSp9!lOun0,VkC]Z$Xq<8k,bnZ?t%W$Y^p]k#X+JXQ84p_,uPu+nl0PY4ZS$gm^<5+o@P[gX0V!$.t!fRnO&N
%QBesa;147B-hjJWJ;fC<\[PKJ^9-JQ$BBk+gKRHFB@Pd38OBq+:jY!l7/74Lg)JEBmeo(#HS^c#ir@<jNQu+tlsTPL5S`&2@HI20
%$r4FDF*l@P<<eSRgD_5-!-<++45qPpV=oY97+?HSm7e.Z.c%&:dD.O(61)q4a-+`8]pY5)eYY-L_nKb)cA(#A<^0/6NS,9G!a,^h
%Za\tl>:uL%HaCqg92K9pB''uU^(%J/S4BCsn'p350SuA1C2]s/Yfcg-g)D`+mdAK%]a`Ib/%%<e:Ke2HC2]EV!#Za*hF%[8(#5b$
%nRf`>\('8"qACM!eDBBjqEZ'4DmY[@W"XOL[)I2&Z)"7NZk6MODkKj?Lid*E_XlW-KNX/FM:+1+^Ctsh7@1hclj_$B2`o_)HP>"@
%ofsnu7SA>.)8tA?b^"e_1U/n):g@riZa[pf@U5D8l0'KmmEWr4jBkK+L,"$"e=/a&3N0V/P%-iPL>/2;A#'YFDJq!lfKWSXDlQ4n
%eR@7i</*TKQ.m60"<f_RhFook/hNXK)fqXp_]\\c[^^D;N80o$Smm^Lm`kQbJK!V+BMf,_%CnDFX;aa3H=\=)ft"fbHM?k03'Ohb
%%Ot:j'K4b'bY(Vd`f8`BAU5V7khP#?hd+HT?+IX+nM%>8gRA[hE@\FUgeut:C.%@tK8Y[3S_@:8e3:"ahXlgY2nbWY]kL+n]=q3j
%1T-kEX.A#Bm[&D!:Amsf$<O$5>p3b/5h1K\8DsFS';A*SYHSIk%)!CoO[07@:66%jQF.nHnRT.R.'DZ8L+R+AUo*7ii(OQ\j3C-3
%3XWO(('11@Gqb1Rm(>_19/$`/TfXB=M5Ybd0OlANU7(gJ+?X1WF$LcsU1k`!AC>F1[a,LgQJ?Q:Z1khIomst&h8h`o>pt,gm/"_.
%jSGSEiH;1P5\]:/!+SjQL16WUd%Yd=YL?boaCgFu)PA%MQ16O_#qnS4g+uO<A+U@)Mp:r1Wk(W];pI>/fIf]sO3KgrgurGo*o/mY
%Zn$)rYS0i=XRq1NG\eY'5skF*A)@iP4'8m7\ec`W.?nu?:.qjWWjC@oFt@;sU'LK\iU^Nk.X7(@(.qpL/L_099),&9)aHOOaZ[4K
%Peo@H"+KSaC<&/Pld;GR,p9b.JZ'1F@t@)Ji4^-E]R[Xl++Uq*(W]R5.S][`bpe)KWmV&bWG'D&0WLkeMb?.#ohl1uliFPN=JM^3
%(C.=cmR@F`AC5'=.^6_h4/a%#*DQ#gq$?77Oqg\EKk3]gW`=bqn-g%IDmkmR4DWZP;i;lo/<]n*;%A+!.=ftf];_M.k.LD7!_sVu
%XMeUO,t"iAD7(Ph0\Yt%(:W\cL%63;jQb<VeY3$e[bg!k]F`#r;#p]$*<BA*Yc%c=fgoHW9IY#Ig_4\7$^9!mdc\Z^!,CId)+Ku7
%BN-*s=4ECL%YJ%*FmfPHjXePG/CR@.6n%uC\aG*plL%CaM-&)6c";cX+A!oEKZ>uJSWstVX/@lGC;PQMQ:1sjJbP-.ZLA)50T9sM
%5ghNi/O357_^6KNM>M8n)%2-]CV*"]%A&Q.X@7P)/ro]0f$;ZYkH/2i14<U5ULk5,XfP,A-V<;o3Rn`2`tn/tTSHXd2s<4j7l'lM
%c!&1!U9-\/Nf#H<-r^o5JV.rrk_F0`BrB5JE<<U`AeucTHUg_B4=;YQP@!N+r(3UdAEF*a,"\L4<l`IT)dFOkdHW7/>0&0)[0<N4
%V!D^TE^3XI+Ss&,eP@G<$MY`Gk7?!r;Fo1E69(_F-NItL0$7SA+f%V%S=qEJ\:,;?UeW#H<n-(8KZEVO@f@]\+>_HN4%VX<_@bT+
%$l3h'jNQE7*@MI-:0pP];/hU%/]KQf$sJ`,U+leGKp!E;R0X*0J;PI6bP,6F2M7YEbn9FOT7A26ZnRK$/`ag((#+$=157Gn$M1!k
%RoiTlk723L\X2.U<nuZ]OF$>)k*r+>JNLP*<DXDW-!7lQeb6@W8gH.<OlLWf6,`C"E_kNuDJk6-,55T3hLM^F1<bC_L_W890MqqQ
%TKAc#ZueR,oSAY7bsZDbAk<R[G!UFa@%$.R#K_XUqZCkXJ84+Ial5sE]9JG1geB&Z+]uQ5%2;dR;l+GAZ])0:ErkC%EO!.rEl&q1
%&s9Y^UfX)(N$3*,3<29LV4Fs+4FsU<F6L+o.6pV?#3c`)NTW'5'm-_)2Omm7k7)L!)fVJs5p<OXOd^fd:m]!m_hniBArlR&ash(0
%n-i?G6:M8Ej#tu)&P/oL.lC\DlC(;f"EIG'Bl+78U?-5oSfGo%\]eKE&);43rE=(<FgMij.&NT1`g'*E9tW?1gB\A@9n7mNl6OHg
%fQ_[WHT_Kn\4nD='*t"'!.E:U&&<"tp<A8?I"M:-$P]<k13V;;Q-`n](kI)QTu96a)$&<"h@#IimWkKd00\Vf)k"f6Gan=H$n)6(
%11;=8ghWZh["3@nQiNf#iA@]j+LQp53_Z5L(;7'bJdIsgf>A[I`R7C6l&bP!40'<h\MYt_0o!aN;UZPMGANj?Jp1="g`6r2;PRbd
%J9_LtAS<\u[KGc_+Bk]c7:?g41;$)hB60V;RNodg+CV`>hAXe9V.gb@Z!J[=;6--EA<4dK36SftUfU<=B&TFPjLOa+$/E*g.]fX,
%'"@"b3=TWUI]?`KNlGD;\sXPH8Hg?IN\-Weaa``#^Y^a=VBmqDfU?o#je@T<SB"0!a#:uKEh[ei$T#u]kt\)e$Jir>1Rfn0/,$P>
%V'8.NJeRk)C25AX8jI&$8CSC)[*(VE$sh(OEM:J;Xl7R$SY<=s<*e$"&HF/`N/&e")LX#SDOpj[LM8jOW#JX,LF6)J1Wf3mkH[TD
%2Hpg'<6\^WS#3!N8(85Y__]<@fmMW([i.UD\D"?]+#G_\*.%ouXC:Mc/B@(H-Ac0+1%GA7_t2O9Zu>.;F'!Q,75nU<,&=:Mjbm_2
%U1NR_K)A/WW!Yp&:I6XA1Nn1E#?lmAgU<9AP]3PQijFKV=LQ"Ri$,pRGCa@$lY&+B.^We4E0CF30N/E4g]P@14DRb3)P8MspCN)a
%e)^\.F7>^3$c0MASotX:NYk\eY`CR-S?Q#o?c.mLGHl^C_(uI#IeWhAGCd+rZrrp="CH7*erF-tCfMdG"#gko\PLb8.s+]fLeq1H
%n5?OuL/O3MgUIUng!hEXBSR?=6Qr>3Mf,+[j+7UL]?npm!&k:cZ)LbS4_[^Mn7gKTgiA=M!1NFXC1+kS-GSK0n,2f`qDQ:X"7Gk;
%FA%2TjIdM^ddJ".!(`M;:KB5bomCnbk^&+!]Oi,3Lu=>6c!#rrV\6t/&XDl4S"[&3'mS/T@$_@XcZH=_7NJ[ag0EVr(f'F[%d/jT
%=4iD@JZfC2"Y2J@h5,6"FMj#G3@[FO>A!L3gOR1VUXo%H*Aa3:Uq]A;HeF]Z]Z.0tP7kRg9pc<Iq<Y*5=Hu0CTXOpT*T\6o$ss>r
%PeaFs>29^!Q3f;B9IM#-6";F'nT&0(?.A[X<A+Q4`iac(D^^g1mjaVR2@&!T3cg`9c)prEp\Bsfh2b!K*tCR]$a^@?6q!OPE'>um
%/Be2(,]aV'Qk9G'Bo"9.B2Hj6?$.\0VYGYoHai,uN[mct>nQoDkJ\&(KF(Z8X'/:#AUA`XQLmalNuSfH$4&a.dDCSHJs+[!rl__C
%cE+$e!=BO6Et2=2DO]F_;cT6N\T;-0@\jX#7AoR6#<N1udVrC<^'*W2X*n@eF#A7:JRK.Qp'u"pC-=;$U/\\@/oVOf&*P;?@8Z=r
%3t$VY"HZP&\L^8_H\$]92HAEDD45k:E0=XE&qV(r"7^A>BVu=`9KVn3I?S#Y!J;[D6rdrfo-:Vo\#Fc=7\EI`L!e13pb;f"(fhE(
%5R:U%_$_/k\l91RGcjZ:au1P:$m;N@L[.Qd1eo(NS:OJD7:A51UnIm,#;j8BG/#5iRN.S^Z!X_(>*'aTN>j3*0DS!BWYmKUW^s?G
%dtl@X#,1DSo\+o@Qg;_"%=j-ZO^,WWSR?fX]bQ47R[k!lXV(2&T%3.oHftMJ,b@*4o%l1dNECDS5T?d-R<8W:EGF^=_l/08NQqa0
%(*LSC3Nj^.%"!Zd*5jRK$0?I'KA`t&"NO'cRV>7[[=;d2)8ZB0)#=`nOB2eoa`_WpZb4'YV,sW/2279uPP5k_p.FPN3nFc7aC;Z;
%2!CtH?$WkBAEsh9*'EUdP/4YB)'m;W>6ujiM#TiXa;uVn0d^me_d0G/54V?GG.%6#,nE;]hCarDQHVtDYMA?/QrHOC*FK!moSl-G
%4Q6E^I4H8(%#Wl[*ot\M<#Le73U("GjlSY,j6);</(ZL;mQh<t'`o:Ie7]Ef7!p+#[^K<0Fh?)r$Sbe=Z.BtD!D:F8&(l?`cM/hT
%jCEs'26KaBjuCo8DW2GGpg$S(<ISNU]8kDK8nuVB8=3)VKocH#BnS`f;r<T]H&22;^.bit(o5?AVGAH\2U3suid0+D!$qe='Di\@
%,HqLg'Yr(["`#NjdPe(CKkO>f)X572kLU$unj=\UZf@a(!Ptej6%+IG"sU0g&X)Q;==[62*$)"XnNn^4!Zb&;5=8^O.tT*dF%RuQ
%$!!HES4PD<1r4,<i@'AA+n3_@=jO<Y`+T2,)i\c8A263.U6L6+Ub)0uY^IqEM?//4A%PjaYeC5)9Go75UunjIl-uip&;j%FlJ-4)
%#8A-+Bu,@=Mt.=uWM9e50*=o;J=%>)<"'<^p+MRo,GW:W'e.Ebesg8gf&$fM$Q<(,R>=`HV//F]jNCu0'?6=k<sAXT$#"*0;MJOX
%Ea#@D]1^)`FKrQFZ'.YWqIJ;WR`jW4eG`67W#H>Z@C80\NC6PM>0$6?R3Vo+/@GD!8:7`:bR85ZTG,h3hq[7!#Nk[Bh*oGm#;jQ>
%4CQ/DVfjtg"AfE-6sDQN5ZJQQESsTRkVjUo98a8,_Q;Gm(p?IN8GfCI&Hg<5FGVuTgh:#YALim"=?9QP`'>]1E+/Hn<&.:k"/(SR
%)N.,jNh!1JZm,AJ*!oVM=dWa'`NT>G_I5=UJ.%-q-*4C+S$o,FPPAmW0UI;4$Yn/fT41GnqS#5E_^,$#,a\!ST"s\A&o'd9GH>Vu
%:J6,I-^UPBN,"s)5&1*2@L7tnkh\.Z?50tCW'_=p1C+SG2H)T^>EM`44YLG@?G]:e1_C(3NAU7]:67g7%'iAS)+'u)'nWs>0gcB!
%IUEK@oWjT*?`6@DYt5pV2HVCO@qD0#FX7FS>4&-Z//XD!8_G=$^k=EJ=gR<-^_6R,bY,C%2ZiA@f:JZ32)pHaTMK9R*XQJ:/G9(>
%_bO.K#d\b`U'pcEPO%GC1r@2a+KrU<]%<S&^TJ0+V@CE97!7[L]k2q?M+)2p<;KL5g^1t>/Y]B]#m7Wcn;67Y#[Pu#QpMmG\`u3^
%9Xhl2(0I?R+<A>Q[_Uk#8Ss-%Kg`Bu9ghOt#0ej-*Y9*6,h3$,O0uV6@KHUNnmHl$7cV/n\45QLE&6K;#r-4D?bfJn"k73q3[-.$
%'6HOf,h.6W9*i%t-S/mujq"7;87JhjJ=?tj\SZ,@OkB%Q'cXsq+<aJ^<?9YI,:A#,1eC,!iV2RRk)VjU#S5*4R#8UI#!cka8E.4[
%N45`;#FH>!HXu/RKBCE^W@2&5#M^'nG]+QLpd('9O&"3?7Bs<niWJR5Z<A*]g#,X.$#Ho3])JV=?"1o6[0.Ze6'*WQgF)'KaD>7W
%[]KaXe2/a^26IA#"p=>-`(66Wb"l:Wo%<pZPT\:T?=RiJ%mR&jMW5D4_D/.%Jb(AK(rhC4%KNj98YQ37,A<n`m%Fu\=LbGbXf]n\
%1S6#m&pZ&3@Q(VFD>#+H#tU_AG``uof[Fk7g*jn*bkRo+0qd_m1,U$s[h9NI-)#(80TZ,GV&`*UnD$9WEF:Da6n?Kg'r0FgdgI/m
%`^X:sL$g;p-WcrCS?suG(*Ecg()k.S`osP%3=0?RG4MfsmVMip#Que30WAT[93,k@B3OEGZ(?,#NOSG_PV%<.P-(6f!(794QtK-M
%P/[W6F*>^7B.BuDm!<%Di3^Y@Tj5Z",=gXaOS@["Rd1NK2@+2SUj]>mCLr]5)Xth<;;Dp^hNUKO2=#Ts?V!O%:hM:[TP$\b/+hZa
%#_L#=e2k[4+YW0?GHoSt)cjhkN?jBC^+66:4\u?UPke6[H6,Yl/dSjXs1phVW^B\4E5X@_hd+a<)Q0GKC1TDU6;nfk4<&WDCt9>"
%!lg+--Uo?C2-aIn*0ZYu+NErF4<POg07X'n*'P\U&=39-Z1QZrmT=Oi=`.X<23Q.#d7G8WR76QX1"H8BJ[s,sU"<kt4&\,_nY(f7
%X1>'%b>9,=';WW9bnD?'rZNf_f[\CV@9sD$Lp$k%NWB-`SW.1D6*gqt>b8&-7d>QtVbVQ`d/cNk3CjQsL0c#PqJu_\!:GqNj3i<)
%+D>/R&p,"0f/9pC4/mYE#fo+9#mnOc/hCFlZQ'-+700?ZE(jDedhZ]V^^_&/;0)fY6,J>r1.jrq+JCuPbL*)fHbc4#0*NEh<tUIS
%7"js'Rb/"dOHga!5%5>\p*=*ZdrCgJZ5+OO2@+mnOs(-@Q(4/E%oE?=BkCS;LQfe/)4XiiB;j4h),q,GQeN1ZVNh-<j)Gofl^[%l
%4T%j2eOoWAW=)UD=Fr#9(0Q4k*0R6L4&U6AR[De!b"JSYVBj8kf!Z_-"f%R.(G$O4V)o4X7>,q/A\B6RMZipBj<6+'.hH[l)cL#j
%WR1i$^tM*dV\\)7W0-9p5##c;2?Y\O<Hqii.U,s>6n.-c/1s0p%)(Of_O^ls@\U=-WYe,l.,'fd!3p#V.n;HJ`TBb7*t8Me]$o[8
%d&%&M!h=IVmJs@*1W7a<QR9;B3$#s3_VZY'!ePO<06Dqb3NpQae"TH*TE)5aH3OBqEE1\W?s?6jfO1%6?.)-ja$Yu\,=-[>)H.JL
%!AHl*Qbd<e5a$:YH%KfXq>aKD1*'qQT[psVJLWO9?(bn1*'-&.;9KF\c1#7jFV;ftklI`3OqY0d(*s'A.5E'',FpPc*"Pq6e-I@s
%rj7kq&][&(%kn0t`qnV5ULt[RdYrGMW&J0VXc4MJH?gXE9df$9jNN\p6ARiNYA@'[$42i-0e>43s'0#YkjW2@!=g8X8'!$CHD#C1
%0GVL(G!"n+a%Nc:;DR*ca"Y]$)C`&0bL4)#Mq"W45PeLh"u5'J6Qr4VKM+A1XIR[K0%j^6(a4uNSO3a8;*Zh!9-OSaW^0fI%,D^\
%r7/q5\i:o*K_NM3A2a`F:B"mOL8=t`]\kO6WO21T__eLBi>&1UKk\,5*p.O`Y_l47"@G71`Yq8eLP2?KjF9iT71N(@Eb7@0\qLu$
%$d^Me[6]4qUeaRAobCU88P.PQT,_ne:asRc(2ZnVm,UIN+1PXV>)^=e.toKY?&iVH-`'T^1?`Ja7UcEMg?\.a5R5h3h%gE2_Q@bX
%e##Tk,QbTZg44,<]EZ@e<0:Y2HoN7i7V6PhTH`XnF*Y<N[2'%;+JH\L+bN,b\+MHENU@!]6#3,"0lt?h=>cL2*$g2+E=<Cj-&QB3
%e:<^N\%j!CL1D/hHkV5DU2d'XJf<2HrNcXkUnZKl_.\qGR=kq#NK5`0)QLh#W(8ZE#j"StUc'e0?k[M40V;0f'a'A9=htl-A3$;3
%+ZbIoZAg^a^C%V/goQ9^#pd!3An$c=6#U_-,d#*tT*-EcH^)tq[Z`tVPout66J8l/KjT?g5h%ct=L++l*FDIY!\9)?P`IS"J-h>.
%;'LK*3,gEkq)lBRp3Mjo0[R3/ZG<)i"M'?j$PoJR\"cuXA;UE(@O<K'e_0V:#7*kd$!W7H5pE.[fXisW;VBWO7dAeXVV$kB%MOg\
%,_`:\!bZ='''lb-g(2PF"0I,D9M=(=GcG"^V-tZX"`dfa,M;jjARo9F&C:i3N7\MIca)4[+H9lZ:J.TNFBX#"21an+#p;b&0-Hp)
%?*Y)0,/>W*9'UhtZg^?"*u4Ag#=UAT`W&>ra0KueU]9#PRiTKmg@p19P7dsANlLZ'50%)fDDF6aGZWstl,j'$&!AQlCQ6bWYCd0K
%C.ss.r$%5)BkSgWkA!QGY$f=tUH:c$8PT]1/?HdJ17L%.n.["W0(TsVr0gh"Fl`JoZleT<6\[(udRuiA'c`EHntXoqk)g6.([.$R
%3?.[XbWBhU!!e$_jZE<P5u%QQag+:()$D/d=0>$[=;`$eK=Lcc13e5C%mR$(Msg5uqXhjV9I:pkJ`cDMLuiRsfG'4E.#qMR3jT/0
%=Ag^.7DEMg3%s78H_P]GccL@J74+CNJQuZ_+cO:F_c$f56sP2r]Rm*5$<.RPn16F_&pQKM/VqY@[W\#YnhXes""BU7\KW'S!p]mP
%m<ZF/.k(\A%i=*!<a[[S0;IT"9NM>f]/LggH9tY0_S$e3"Ih_K3o^Bi+Ze_1@9-W_)+=K9hiUW(V2GBfiV*O][J+"\[n@;F44&VS
%LbfNn?<QudOgl2kXc8%fKDFM'8]?l=&P4.h$SAi1,W&pOl/J$siKbd#Gp?[_D:A8^`+_\NZ9YcV`@[?XBC@M4B=.huPZl!DC<QYX
%JRSbl!2q:coe_V!_uu^V&]-(<6qTt28u1.G7hg#:W0Bbjnc_@CYUE*<PaUB`KFg69;mZo%#mb9)K#j>kg_>TFN)$[A6IJe[)j2Jg
%Kf$QcOkhI"0,^N.@5"H/1a2]oi0C`;a@#;q@&`.3Vj+qOl"Fm.!X?[4(s?eH1/J/=.K^f.Mdmil!EM&*;hRN6qhN1?6K'G!I(%`9
%kQJc0"M&=`fpo.],h;s.'g]!,gIkZ;E%4(0XC<=/ChT'CaL#t@6,[5K435lr<m!)C"kS'O5o"p"<5OB_*/p"6Vb&B,ac]bOSfefs
%#t-gK0ZqcGUpC\f`9g9mo5YTC"7;;&J\i>Q'k*n7Ne""([%e7M(+cq\/]djmb2`m9_2*pElcJ>?8emaFFlr+JnAt$/bLt,9,4K#m
%Wn(o%=7/rKKLj"6OsQSJ+dEd*R+qc4,#CeF)`8@'+_e?l,ubJj+8U'c0?-aFC6YZ-CC#bUc!W")L&jP`W7/XN(32WP"V-/InjrWi
%C^lLL*G6l.j8ptQ"Tm;>52J4r#>Sn)QIc*ZUV^2&X%3Ir\^liXO/1sE_S+A"K"t7HQ:HI]f\.*(RujlE+$h'eG7`%Q<G77<2N;;"
%>V#:[!^?Z"dgB>AX77dh?A>*gJsD)ZQO%"#Lad"IWuYC=.4TEC!74\)O<@d74L%.A9(5JH>W`k</V,_rg45iuf_S.6U+2(SReS%F
%TP9)nq>sMt`LTFe3=>=$;8k+3grM4F!e_D9\-CL[JAH(P\cfttU%GJFk49HUcQumMqH>:5e.%QA2&*WlO?<b#LnM:+jV:6W&PU+=
%\\(2u5g1-rIV8f(7=c$b<0g"X()T4t/\e+)7DQ<u"@8X$(n=?sKd?=H+,Vh_T(=RL@i30Spk"SlTF!s%/!T;6Td%fj7FFq3^_J#(
%0*<o!])og8^KSVQD07/0[$r/8,6/59K=mtfK_.!<PVhX3+Z>CU&>3eNci[#E>AV![c.$H;225Th)5*?"JMGT29=iftbZA8jJiT\h
%D*7G2aW?\l><6X%MbVD/@-O@&"r2+-7PUE#8#K%j6DB'L_&3lU+\Z]f"c:?E]uDaX)GVB;@,S!e[!9r#_:<2:&#al`8;7-?F=d3q
%kdj97NZI1($-]7r?`,;n!<khk'Us^-Zq>aa]^k[u7GUn=PQW%e!!Z[<+@Co^!WX!_dNR#nN"rR>Gs+P96#'2o1kZ5C$I%-Ne/6$;
%>G4'r#]-X-,<UCM>MTPo'gUMj@%+$ZVL$F5!:LX*#=3hX[*c!QCaN6f>e\-Ej.R(Hr3XrdD6[SZO>L9?(M3=Bl\*&M.#[,$+Dco2
%,tbbK\W&LI19jL!'`QTrOq7`m\QhZF?ksT!Ip/*)&A"M\q`?>o!Ph1C'?7R$@r,QI'JhZK><G!o/JEgYn\!hFVbYVKH<*G>'2,_G
%Zb80q;-M9P5gW]:;(q&2&2W!*qpYtM.BBjaa"ldD!8=ST3F[KE^'jh"lm(<>"m_.JB/9IZ"m89i6Tb_q>Q>0,@2i@E:upu(pLT]L
%SL!mTBK7_C0&&i2PHiVo7^,!#QWOuFoTF".P$i20,RH')Jt,=J81,i1^]C=@s/D-%'o$_'#F:`3TF6<^ps1_7;K*>%H=mN&&-E/M
%*BIA?+[dXK..S&%I8[l)!je@!-UI5r_n^\Xj=7%a7ms^Zg4^u,fieeO$Aq+YW!<?,eXfg@%NqK\5uL._R^aZf&t/Sp[$W`ArFt9\
%63M^Jpl1LL0[Rt)VnkabVnjQr/8igf!iCT4MO&CfSH,kefUX!/\ig>G7B6tI4`A=_GH$4lR.+qU:@&6U$jknG[J6+%d[$VbX[:];
%D")+g2K2:8g4e==p"JF7M$6tnJ7fUYIP5Yrn:q`r/4l(2*'5-d/4=?/VRA/Q+f(SB?\FP=@[d-A[S=Q*ZlTUb.ie0;I<g&=b9I9W
%#5$`0ZA`?5#\XED$:+fh[fDo9'6L:;4=uWV[Os@4=9i+LKEn6"++ns_QM(<(4ZK@nK;Uq6ChS>+;_>9A5f*rRa$=JK,S-@<C^E@2
%7^Q@l.8\?NERD"BFc;4Gomo=)SF06a*kjs-P+4]NI#X&)rj,?,BlOhGd,d]<cnZh@h[9kX"H.p'&,"\mMkMhdCVpsK(0Cl4NCRD\
%+_5JeZTo*C&Zq2hk4Xdj'/Ai`(#'[nPZ&8A>FRtgOdJ[,%MO_9'L=4bX/&Y6=u3h88=gg),.,WLEHu<Y/R1(SN`E_pKFEIZ5;J]S
%J5#$LWKK6>Bbk\9OG^-$Q(,Ul6f,a1j\cY7?99G1Wit$#J]<uV3%;-g^'liQ+rIi`CdAf@TIgP!@]T,4U(a@mhoUMm<.UcPPh+l_
%6lolX$<\<KE7K8RBH][B5tMIo'0(_+9T@&)IP,dL$g3K.DSd[_P!Y$<d010:Q;"V-1T7o#99"`W9R#JkU`X,WZBrfd4]o--@[(WA
%BP'bU7?C%AT7l=/O@Tq?X<"*/W7CuG8Yd$J]=9-MhTdR5*aEKd,9XJCqsi$%P+JpM\P[%*#;$0RV+Z@^QcWne)$>"Pit2R-e&"3k
%AeG9K$dr^^AeV77<8:lf0IDC#G0cs1Tr!5kLQ5?J,V.f0]SqS?;FX;eS:blXJ<)1.:iP.IO"q89<es2l8Q,pO^m7DQNAQ&a5\$D\
%BTIh2eU=\7=qRKV&:'N]#/#4/,qls>`V'e/0f4:9Jq?Al3EpAoWWL)`<Bn:ZOVg"sL8=>s/8q*N-msbn3NNNhA$#5W!r=5N!Yl,G
%Q*&L@:;P2A)+X98>:oF:mB!%\YoATAj`I;FM&UDcM7AcK"'3/+jk0DG[G$FJl/)5B,!SNk%6D,9O<dA!YIkaSfj<YB35lT<`egmS
%:Q:jOMMia7<%8WC;:*+#W1#g-e1p<N;Ce&T6@rSrlg6dF,9#@r:Z5jh"<j.T%T\[j#Zm)HA7eT57i)0_/kCa-%q%r(9bp$IL:n[8
%@`FK@KD&8n)G:Ni'9ke6)q7;Bo*lRD11YFaf3C7m5TMq[NE"H7Af"1;G_Vu&TR4Q-mFsgmWsn>WMLt7JOsI0c*?a,[Odb^:<N>mo
%XK*c2prp?A$"kJ/T'S1nV2636q!Us3bIAf0=L2fo'MhMlRh161e_2@n<YALreuM>gJO1*XWE;2]>"(7@`W(&@=SJO^M/l@i0FP>s
%8eVS<>M34h#UO-eU.*N,TqHr64OQd<oPYGP0:@BarWfekfjQ$YXcon0l%3PZS+QUM>jL_rl/ZB[?qMU=#<!E&&s.$EiJf(T(b-d\
%AcpYt'ensV,=oBpCH79m/LVV^bbYu43bNG#SRC%_K@r9$AKtpi6'Ef'26+fP2ZfX0Z'F_]dW8>bdoU4c'L%?t7\(E4pj&IK)dlg9
%+U5=p!oW%T$_k@t^+Vf2&geEP)8UepfI);TG405<Kp0Y9g*NU=Aaj:sF9SNOT8K"'P);9q+^Y_f0t&DA8c8X`E\GL)R9W_5Bq5n'
%0+iOs\W_\T$52CJBm5ALlcZ,*/gR)#JGb6)7U"RmVe8e^L]&)*D-#4<&t\;Q`fW]T:)p)7Aeg1u\me)fB(Vh--u<J5O[hcmFCmMJ
%ED;4_4NeN9ZG?f%eKF"iU6A>K(q^F27'S_En]7d>6_TF7B+`*@H%&rrPa`A!9V`\bP;9H9)-AasXNuu.N"36E=k2.s_([/$>c.,6
%^]i'e$mQTd!hf*_E.`:")FgSd@[A3T_7UIk<P#5jAqK!K&j;9g>Y)OsgmIY2X5&@`0S!n_+i5H6$Oj""Z`Xm691P5BY14Up!'K<k
%K4LBq0O%Qk.WYt!!WO_6=,05%=G%$N\>5'R1kI_;TT<-*C',;7UYV#*kFl2cg4@rt)'S^#kU@4A@LG1E@;eD6,1FHr"/Z!))^W&E
%.ub:h3Ek7S#]5OMQ4oJh$+![`Dt,F+eQ..N8A#*t5F-3XqdHbf:."#p\k+;"Ei&HV8O//BFYfB;-0asHA_tP[q.C#IYZH['6IPG%
%Fi'5^9PG%Hdn(OcXl)K=25'$^'`:iQBA4OcD$9E2].th1*9+Hk=(BATeKp;2@S>-7P%m>reIl&+%[)GY!+Vh<5t&ZV7-4(aq*/<*
%">W;F-BB-?_ObXBc&)o=4)FD,AB2Y=(/dU%]pY$$-2Wo\AW$HN8:]rln!5L2#bP?91=O(_,&toX:SWllLpRG*/Ri1_<8nRH+-lb_
%T*\OP>1=Jlk@X":AH>P9D!]WSi>k_?.gG5N-=jle6\8KZYs>TaV4r3@4p-XK)0AI*;fMIL.1;4;#RqcN^&4Nd!F(_%"+H8=FqVrR
%PZB1:5W!U8,&gT`jLndh"9plCQOXID;+tk=%'ibk97d@kfiAEjA12*r0uU6D//->B,I(AX#pORgU<fui(.'+m8cV&+L6Ih.Y.TI(
%#84bQ:TH_!7j:r!I0LsWC^]>f<X8Kj;nB/lH&`a^AAM)"MSRq7Z#C[^33!_GZ%=`TihEYD7j+5arH[Pj6`o/Z6muT.&DKIn,e[R_
%'N$>\1pGYu>g&/Y=ttAdVsk<bF\pi^VHT3j+o:%fZZm1))+YV/O^FhT(,6%8)/*i,bbJ@`;3C>,kAh`6B:oh?RhPHp!#Hj41efni
%_Msk8eCl/@gGemV]#9Gm*'-A/12I.k?a<,X05<EA+qVdq*$ZH4fliQ_>QXW*cm2aKghFE\:*sp^GSV;:"lomI.u\<n>fhSjin<l@
%0B]A7PWjh`<XO@3;>=Nddkuq"n0!H8N--oNTefhT@2bPWZ<Eq%P12np1emG:ON[l"OiBq3&#"2]>r5a-rc<)LkkU>WR7O63osWr;
%<D#..rAI\K:\lg`=8E3D`(MXoq"eMIAr<](,\,eO70QZj`CuHQ#fM[8Yl;*`ViIO)RtT.S-<o_OPcEY@c6>a&]Q>MT+\?I=n4GBr
%7XWm:.*i4,U*>"OYV]8H+]i&DW<1HN,;jaClnD941#!)K20>f/+ubUE2@5VH`WFN=d7@f=JF6+l0\9qO6<m1co[pAN"kCet.YH_K
%bnH#<K]0!I`]'!&<CD2W=sJt9/mPHI7]cX+&]A!\VRiSsCIIOsEudh"iEfQ.ZpnraQ%HbQb2JFNX5W<]Z=9qM,7PoW+rXM59Ap7J
%i5hi$/E[A(7McLV[BO&lP9LjS_T^Xg'=1$]8APa6T8pu9<i[U-e?Dk!_VJT,>o,T&[Y:q_PJc+<.Q!A&%!8SRoE+Qak8r!5K7&,[
%duh-dc3D%i*-YRF,HQnOVugtiH@]LN+ZY9Lnu^7nZBu.mVA.7IX/l*NGaY_>_U-Ac*8WoPNKQ='$j4L`XRJlhq!r]u+48?S\q-u:
%&n.2biZE2qR+Xg,7"r6C*ti(&62M66$V$)NN!^jM>=Fs][SgOiP]AsBULk"@T*raZIDrVr7^ETO0uPN.%ulc2BG,S'E0dkK6,T0,
%BGkON6rlZd4=0hc'>W!EqAsA&@=>KDZMLIMibB_f9,9IN0Tbc<?u)uiaKGa^DPJ;hG/3"/E>kAZfjQ[l`4%UEl;^!_Es9H/Keap1
%WPh'^7PIM=V4agIe)D\ebR\.a$F*kMau:_%._@R+[6\Y2.("fsAM>&"+G^8*a.1Vqrhabu>I@XP"ji&*f*f:3e,jCF8M^J'^uGFg
%N(E]WP>o0bPpPZ,TeF@j#.\6=oK`-W!_GLfUlBMs$mdYHM./o`@<*i".D5/86-$5=:<=s;Z6VF/XNa@XcKM&o`?KlF:Olc)dSe2?
%FUDD(d0+]-Z!&TL0JQnjRM`Go1h>Je?V7^`ckb/o0i*-e"oGus\6$l1%CCR=PWWdP`_/gr$A5sN5s2Sl3apnj+W^pt>1kF/p=J8o
%"_Ns(aK8ir$\iT[AR34%#c;P`[_o<jl0K\lL1i'Zfne!Hp-aVm8V3M."=*clTPUXdN$QV02Qj=M#+)2;`Wa%R$W.!56oOcrk1G!.
%BHp3m4TZ=K<8+c[;aeU.@PGSG!]mUu/Pft/?%-OtWCMuY!i%LV:1\jOm6FWam)[`<=C7.Y0Ft/P$A']o$r0W.YU,j6FI)/p.9ds'
%OoD`<&9btNEG7u8AH$&=>HAD6Z3IR8H7Ls'"giema$uAu=ORC*f8>irWIth=V)2(kc\$c[T2a6U,8m\WbF#ll94nb+3K+KsAcpmT
%oYS?eHN>SBb3Xq?U[pdc!V%cb&^VP=EuJoQ9i?[@oF(Vo;q<`kK104[+E7N7Me\:d!cq7-*0c&9e&M+c9j;-@!,s)\O0f%sd250>
%'ZDZ%nmf_;/=C,&'MaW_;Cs+i'*KWhEZJ;WdBG'ARL$>[V1jH07V&l7L)PT$J?=VY]h&S*$%+#T*LU)4YoM`2gK'2^"H&I0P"MD`
%cpBu74JV"@Y#^Dlpn%O!5tf5%crn_R[\SdB5jf;7*<7^rg5Zf/5W`D&j"Ei1KFqPRc3TR^b:CrO`\pa0BRh"sl),"3T:Jr!$W6s=
%P\"hhiLLu8ZD/#lW4"[R&#^^)JC"<Bg*FYe?qGDi1^2NKYS(I5mY3;)=[OYXT9#5[,5Y:E$-sWCc!0FJ#p<#ja!fLjgRK.F8':mh
%"H^4R7kepZ@E)>YjA8]@8DY^#(jA<U*c8l7BC1uhE.sM_%ORE(,lH$]7)c/:6ABbh4AdJK7DuL.gIXqXg5.]oJVIfPSMV+ZOt-Yq
%$TKAQ*:UZo4]Y[d:7A/=<!C=ILX*\[8Yo*N'I[M/j[H?gFju:s4UqeR'b5NXei]+TM!M#oCDUP_A_^Z>D\V/en>chLOt`2I40F0C
%#Q'I9E/Ci4-uq'eWP+@f98k,5bVVSE1glgh1JF\'1Grh[,!I?MFskF$d!\6"-h$q"=),pK(5Kccf>**+#-SR1iFhglHh18GQPtNW
%&6cA2lBYf`B[d>:.)6#:QFO"NY`]:bMVY,6-<+4h2U3YCRCFY'VUU\OKoBOqR=/Lo!G4TaPCk+fBJIMq!(%\][uOJ(1FX+o$Jf'P
%Zq[T#'Kl?5K18VE;mAa1&U'"A/[3qqd%Y!HQ%!E/fBZ5c^Vi$8UZ>p$A4!`D^_Zp[5(dfhM#Ym2#JV05VH0rfUk[Jl>,FgXVME4o
%E<K$=s,]53!j+jKCa*%>Jt^]S0@QX3$Fh4gdLmI[la4G-3LiiiP!W(fBI=O;"GSI-(o^M9,VRYW/WfSV88S,m8oZ8#d(r@1Qa%/u
%>[,"1nS5L2PI,+06)V$BL[KalNB?JGVQnlR6&*iGT+h?h:)YcW[C'?<AkSm7,Ot,kob+]!Yhf_TOTaO7a)U5LpJ*H4=Y:+J0o?j3
%Ah>UJA1tn8Q?\lEE<lXf3Qo^<:3a8#^.eoM?:rRJ!,kg:RZQ\?KqXpb\NuF)9T7=6@"oH](IeUJZaNfL$67=`WMCnnP<lgB:h[_r
%J`7nY&p@rQABm=`ksT-t>eU]:Va@G\Dp^(T8F=mCXbh2d't9-]9SK+\UA[u%h-m_"Ji4kH432Bp+?t"!8>X</Hocn<[6"q"[`%f'
%Q"&5Q4e_lWhNCNKhm5h&XO;+XHmLFE..t$=DHlh8e*bFT8I%e]>b@GlAP[,Eb7-NKYU$/n`qb5)E"XBY8:?sSar4E^&@Y>kV,hBn
%UR!1j]XNJ.j+n\WI*@8.GClZe&jcbQ4"D(YHYM[e!i43b4Eu".Sg%'K#Ljd"^Hg69@8&UA9k#>dDDVPLbn0!FZ#hUn?r/\4OTfc)
%Mp[=o'Lf^rB8W5aCmorNg\&c@OL!=W[5jdS4)=kg^g:,[%#2r!FQ'Yre0lXe3>is&7f-@8@Rrcm.VQ)sJo.]4e;3]`Lg_(6ZhFJ=
%!BE>CA8?re.ok=8F!>:''CcCeajA23L;suS4%NH3#S15YhDiDp\G3Ut!^=FEGF#%C0L]d=&#)puck]M(Z3Nm7kTm=M^2)_(=10,-
%5R?e!-V8(@Ee7si,.b`c".E0h`gZ!UE3tl8W$Z@<3"_@-T2Z%S;Dl?a.W.r0YR%3sVqnZ"n0iM4TTL%@F^4`YS$kXEac]LJGS#:5
%DZXFK6ttoNa$O'n&NHYBm*]47QpCFTX.=!D.h**m"f/CZP4oMU#T]P=P_HeCVQTpN_l?/s%'4nF&m)_oX$g=199><F7>b[$LPD>,
%`eTLl+_[%+nL6SbM0U=#-4%[jUVF0n=kJuDGbQdY:.`?<,>K2"'Za3?WUTC(l:\G2WCu+FVN[`N7d=cbTA@@08Rl0fBN9=Wd?a6Y
%%Yg@N\a-UnPo[nu6T7@!5U3"BCK7*K`h#>M[&c0m+Mf?hl8[J1(bU=s@eJ%iY"aF88D15d>V(nB8>NJbe*8%4QiTL(`2q]gnY;I+
%%U+-KQDIWoTP0')J62nY&@]U57aWIT&ko5pau1K+;Hg':k$udDM-T.?gE>UVd[:3TNDU(2@3?1I0<oS,cm.]R"3jlHXZa;G)NbTO
%K`5\aR6Gr<7`[m:8C$EW(,c$b<e(`cnMTVi)DQ*)_:Z*]2"iUXiae6IZOoD5'5VH^-H$s1QMdm;JL`geM@eO9'2HnP6HLN?<g8bY
%(9Rh?jqKdI0A?hc`j_CETU3e"daI:]j'1m3[d^ga"=d.T*t:bp)bI&nJAB>N=<^DD4)u=HV%55qk+c$+6toX<TOKGc.4T!3L>`ur
%0NPM!8R\.c8g#0@./$0hNmVR,*"l,^<nNTEO#eg!2@`'@;Yh:h8-"L.LZ6+N>8&;]N%?dW`_R$H=_\dmV"d9l`engFP9t#$,j]6b
%i#E-lX<@5@rX,Q_n&\CgJ0i9XZ5R^M-JV0!XUrFVo!=HY9m9!TM&!."X^9WkU)7Ipr"?f'+WF7:"3ZREU9*NG5da0=")ZJl>*B;S
%6LCMB7DkjsY+0m\^ITeRP&;nGOK0Y6"YYo*>653$S10lg[T(*ebg4Q7=I/%5ZA!lCW@)>3%$obZOH3Ck*paO+A+3g5'7`$'fOA+B
%0aE\#<>(Iu5mF#;=Im[SH,9@l6nors=Yu*@1l64CU.!MTYL*)+?ljVc&L[,g3$i')+Be!E8II@K2kqo1%qX]GocY9@!Jua^M16<.
%-iB%(bVcCIAMC>nRmr9RW$E2fkt83;bF1L=V/-i?T'$2k&_IMFicLqLH$ioRl&Cq&@H&P%O8(-p11!k=&27SojFEin(>BT&[[:$&
%?U]N+)58j>D/$m/"U4=OMnnjug8;E14]?"$1BOh'I)q5?m;#6AZ5JtpDdKMA,F(kr&R;)o5Fn)r7S&MI!Ptq8lcYiN!a&LK[U@&[
%@TZPlSea\P#gK_lfmhTh>!X)&<_A\A-f]oKk-$DOPk-]1V\PObd)j4u(Q@YL=<DuqD[SM[s).RaJpIu]Vu&@3+[JZt0d=_L10mJ[
%L"?h)]jQ/H4JF4W\3c=5r'jW&Onl=2Aa??!Gm5QOA@WZMj.U(FfWg,P%i$t<VOeh>7]KIWQ(B!,Vf(7BT(K03MMYO\a,>l\gKoag
%"U_C^24c*8M]FP4YqqWWSV7rbkpc.k'eVV*-+]ZT&&4-e*gopb=dj5?KaFrs8g2(3nYA<A`.^IVRI!lt*]sj:3WYHL%r#4sdZ7Q#
%BMYP/-c(EIjZD4<i:2_I,dSJ2i5,50TOoVeGhJ-d'PGX?(U^rT'&XAa(G8>=^S=j9i9q9V*Rk]bT#,pm=cjYMniLs$P<!L$I4*:t
%Ti0d1N>ns6L&$`p#B*Y1mhd`W`[>BjL_^'PZLH]_3mk.8hW:/9ZDI-K);)n:RZD^^%.Z[Eg+9m\#3N.`kqB\n#5uHrG:U=MXV:3]
%8p^g18Aa[)lWn;&I&3"_[9!,A/*@rL4\.anA@u]_Q3^9fKQfgsJp3u;GOUdB0/oc?K1gb2a3&Q1(FXisXcVA$=A3Yg6]/.,%3AR/
%\c[p9ikUiE%bmFoK-R8*%ZQ-41DZ]H@k,ClOQat4%>iGY+hBJN@,#k?FI+"g`Te9ph;O)#XV$9ONh6F8!gW"f+;lrjM:e\sl&IDe
%T'jI'B1sg%h.*HH"-?;T61btVqZ*\'E8C2M&_W_2#m)brGJ"_q].2R+!DY=slQP"'Ud@@PkjAj18S<HIG6`t(5`Fppno5hLU6Y/l
%&EH$c'tQJ_Kjq"-h&1_a\/9S,4%$/t;U5gJmL8*I8DdL_4.n.0Q_X--!BgbN5\%Ae!'Y[+\J;\;^dJJhB&U?XjO#.^hiR::0N1<X
%Vf[+sn,k/p*Ic(-lnR68!1F1`>3YG`^nI.q*7<R[[eS:[<k:@[dK0Pc$f.A)97m;m1#8BD5GSTKh45u+*0oq%P#hDIHF>oB@1u/F
%Yh]oAMsQ*a[Q?k=6)^0fG"6X5P1UMX48+J\CLbS3LGUM2;(L=j+j2Q"2jNe@.9FC@O6H"^q'I1Ml0\gCQU:''mKahgIbQU5SK[Mc
%i2$h;ST2U%1FmQkL@qCgoQ5;sBbO.9]7\$pG[O'dB1W0TL7[gn3G7YZf^@*ljEqnn0p;C7]<?$pKL-rFf8/gSL_QYR:prGp.l(7*
%f^;.:bmN9tL`'#j]"@rJL$h\W)G@V;D-F1JXhE*;ockmGFu%Ksi3],=.L++m;df)LgE#GoUTA9UL<0o<3@W]'^.dOD*jOO0NsVu"
%ZJD5S7JaoemEQ=d$`;:,m1,E&'&"sSGJN4"KMl6jZOB2i5A%M0/<oC&gU#]:Mim,GL$_XN,eI'b4+^$2H_0qT!Q%PTP_JMMY[]'!
%'tQKeSAt+,h&Rc<CV$,*cEJ%<p?n%1%VT*6E)>cd#\$9mX:a8/+;k=F]?oAj";_ib]De]Q\iTmX#[_#6])u6+AAei2*H\EVooA8(
%TU:FIUX7g_mu^4S9Qu9@Mi;_Bm`lA21j(t;SKTh'BNOEc%)X(mAjdn(S0Vpp)U[A,.[=%gmuH!S'iatrE)%"9Em/`_F&%6P$f@NF
%[R=Ddn'61>WZ)TZ)%n^Dd.?)`9<usGnD+r`=uU&ImgeWTgi&JH%S*oXpCZ;R61$k(bR35JbT=g)aMN.6@"LK=C!V!YA4CT&gDt59
%,b-V8]7WW!MQ4O9#=kH;dJuVGV+u>E`_:SC?^5r34"u1%SKmXZ_5<.4Y0bsD]t)e%gqb-&VWYIIU%$P@.IL"fLR+7KE/1#dP!9\5
%3uEnBJ0+78+_AO)n3V&+)Xo=$)EFP$K9ui:Q/2u`6b`(WDeGNEWCHN'&3K_fL#1)tKcoIB6>m*[OI;0nmI3E/""ik_YWGAa>0-)E
%djR"IcYa!#7?i$sEk>.GmtKP7c&KIg1@j92FRXEd_Mu+n?knlgYVOnJbS4+>?BV\6I7+j+4VSlu*/%9d"?,qcF7MtIK+A:Rn;,R/
%G79Br?3?n$.Ubae%Y=.G$**+mO.a;]0<mF\LS*"CD4m'o8\ti-b]^qX1JB)EZ^iBiM0@:npd(#egK@"iG(a]NnCh"lSq?3`m0Mqa
%*AStMK>#t.YU[S7kT^b`VF#)(gGLr+,RoUt#l[L/'BQWS5S6PA]QU/N@`?K+a(B#6o@fVLU-7YH_^gqhW\W>6:,0\=?.[3AZ8$RA
%CraQ,(jsYG-O@u>M'lDoE8?qB*h>MDB4UIM+gs2>1N=(nfZl1aQWA@u%$OL]H7EA0/Su7eN-O`/+mnjCCBk)2#e:>HSKZg?M^uG`
%YjacZqeH_)+V'?M/%g%[`<rlJ[A.:6'<fj<!E;"-#e*-9B1eG=V6r*I=@c^nCM,u/7?f$#4,=dOW3g`0jH8/fed`;n<Z'6<_6b=-
%8YrhI6lTs,f$4j,W,'F:%t#c9L-fZgQpifSL"6b-S#0>Qed`<;"D18A8*jE,lS5N4!M`jKTVIke;D/28B!k"-K_bPgC.DQd7]aaI
%#J5Qs7UoU`6b)D6osAlH(^*=5:PjW1M:_ZC?^baK-"!^SG)utL:1:Od`.^p/L"21o,pQ2o[A28>r2@JIB8BE#<_2U3;CQ</Uiq>r
%bEUP=e.,qr*%n%16pJSpX/'p'2!S69UirUJM&0&OGl2CWX/'ot$Fls=+glqS/>;&iC56<#$fp)A;EI6lpp@nP#H9YUVmJ7G6sMmM
%SKS!6#qLsXL'ZAXpPa9?J($<TB=,QA)e"jJ1>5T!c!2+Q-m91K@C2f*o4`p+%VBj!Q):'k-A,NL,6&&hm3$!J\l.6"Vc!FcBkK\$
%b\EmbV4D%H,)2];%dk_!o.$XYY5p-6R+'?R5-`Tp1Gabu3+\V$N4X2c$oaofK6&0#1PO9&GUIX#Q.!qhU,/5Q8isOAq6V$$g0mp,
%T_sd@m3!1%`'S5EI1Vri_3;hCW^O?S8$mFNCO0,tm3!#'o0R4_:hD%Z7_EnhCZ:6g?98RS?1;?141[pgb9-Ka__tF_Bp@3ZpEFS5
%Lt3%Ld!6E'.'4Li,_>^tXdobEV`gi`K=$P2f@/GFkccGBj5IeLjG;:q9:aEE8npk@I23KW8F:ApYs,+Lg+dV;WmO.JB3<7pm0]g5
%;"b@/&.>HXk#[oc8#1;T'q2ePC58ERZ!CeG6PPRa_IHV.]X?2F.BOUe$mZZkM!]jd^kNS544>Z!AgOl1M?-tk8o+`Z_`,DkM="];
%7&n-kCkm8-&<mo=47Z)W->u:ga'K/iK,%iW4<j7YZpJTL5TgrK$F(WI."_0?Z/ps@V84l1[Y)D-$'\MIm1@Pd=]?]U@rFOKa%+'k
%kiAZ5?&@q[Nf!j[?A7%WZ?]J,?9PP6U/-_D(LB0[SWg7O'&/O=,(XBH6u3+57'$d&SKXMlep!idN)2A\Kb\2])T(@CT%VCC([bbY
%ChF%!#Kpu&CaVM&,1\3L*@Vu,Y"-]ZKYf&,G[\$j=HINq_JDa;nYERd'cdBb7SEHu_JBG`d;^YBS[?Wtr&8/pZYY]<"=USsJK<)B
%2J0BB:4glb;)(?jFaW#^Cr_T4HJB+=*@X0]Q[37*2S4%dN0s"Z53?.7H=f5_#R0V='I7Xn7*)8b@^[K_&b,r2ZQ4&"8D[O;m>,9u
%[i[B[ObSElU4q<]]fK\60AL_qO!li>6Z,!Z]61Q[[_lPjI)Zc+*P"c:I1!BQ8<W;<mJ'VB%&rV"jWhR98o7'41?%R<;VOLmOoeFI
%m8/3`9V7$lN_Mk"]+(1qn23U8(1oY%(2:CPfacVAc]*eK:sL-(pK37=peY:p]QP]qQVB3o[:;-6c(Djg8%<DjisW+4RAT`s7a-$D
%E@&V<@CB[M\5H5VY"u-0M&lu0*BhY6JB&0pQdfdK>>K)`%Og(EPhM.>2D",Ce93)d?s3/Yg5`*PKgf0!LBorac<)C%'7-b*XcV9<
%"GJusQ/#-5[aK]_DDa%c=%),_Hftar75&aNDb$l\Nk3TlaeWAr/%ltqU.`Ii/=VSD6nE4+luo0YU?u=?m79W51t`JS*EatiTMFb=
%8A*E;<gZ>oHXrJ%kj@S,G8dr#\Md]Bh#^2e[m&5qT@>5\DjOhlchW&Ts*+59T.aR:SL=aTI/i<Yjk"cG2gJ6GSuMX4q."lri*S\I
%kfYp_[oWLqq"ih$fC`IBI(B/dTmp9gbo]/f(8$*S;7$&cQ]F@Wp[LacnbF.%eHgT[ik&Rf\,V`noUf:[bJGq3[eRW;Y?AN^^\dGg
%O$@rV&/.\j&MEA+?sBlhr<5Vr&+?W@r;+Cr?MSN+Gd+hSIL`qZZGY39d+<Fp5=pk;$8ck:1k6*'1o,\R_/t2q"$KoG\G5L`/T7@:
%*<ds6oS28+]OYLt%_qRu.^)&Sr0'1@(TY#Cq51'o(j*Yo<5.<?jBo7Z:FU>[aZjlAjE3:c&^sd<RBf`7m4/A>2NF_hl6A34?B"!5
%rWXtR0?OjD(1FnoM_0.%X;05U>bcd!*<Ko1ni^(32C)udn)Z;-O/>0k<An+Tj$I[3&oO5e@)HZ_0T;FP1P:(nau`S5^-`HBgKon%
%6T=2W-*b&_H)Zo;IJ0U+e(:Ph_=XnDN0hi+[?jb$^'lF2]&E;nG1&L@:cd!uEc33C^J$;qm:BI8HsD"9Q0ZU1Yss&M9GdGEJs4^[
%m/Duuj-Qb9[?h35H5j![?=%OB@TDhA)hBs:`(ZJ`0q>@p1b*jd13aPKn%ShBjlOV'o&YI4BRke@h>H"<#h.RO69)!t3)ocT`8C^r
%e/no77/[FS?ff$\hB@l=,8HcQ5Q?,SYI"0"`uk7%<?_sK5-dZU(pCjuD9?[fqUSa\ou`i*+A##bl@hZ5YO;DsgBX&%7=UXJ>.M,+
%K"8:9X*iC0!KNPepK!D]rVq<D;70s>bN6KfgN"16J`5ca__2l(^HL.l_bB8mLEDR$7)(]U]de&&0pJ`>B`75CLdBDfe&>EQ=rgE>
%f\jYo(X[taHSGWRmTnoP]n]ta+6,S(eKOBkR@6VEn_=*=lX.r_o;t4UkgTB@R,4HapU:rG?G0V7cXX$RQ@JaIn]ANuc7ecR50GU(
%IJ1RjS)mkCgY'*O5$>S]o_$o5bNl"7"*X5!^L,jis+p]dq=W!qs7f1WLOhB=]]A7>o65N*Y?NW11?B8HdD*iYls^6GX\TeP04uqV
%?;DDo?FSgEH+c?;nb(.[d?G#_24Q+Jq:C:>r+gLD\GG/KQ_ud_=77bKk#X[Zg@i+1&\[1Is2X6Sc.`P7)dU.X;1AN5hg^+Sk4Qjj
%k3h3!]ppc+>kFq.DnL!Ln`J[#&+@f1Q`&$=k<aW?kA8Y;mpn]WmVuLG]D1[`k2b^ePSH9mGZSCd]__?am,iDZ8fnK//[,'Kg%hGK
%NNV-+g,s,eh#mQ5jR)Lkf?=2?Q^@!%1OA0Z>n%:ulgDSp0AjK*T5ql8$R[EnD=;:YHfr!urpoN%.?2/*h`gWnq']mBGCPdV2p:NN
%S#bi]+/Q_o^K9+AjYkpS3m2KmXp4Iae[t.rj^52ehRl$6SMHp2"5<R"H%'o+k3D?ec*Zm/88gf;lg>SaoS_h3`FlM-[jU%Ym)n_]
%nsWjpI<+HIm)m#Q508i-q3P/qDkDnC2rUg_cJ3k/Et`"4ZS+97EjIDXqf9"r2u@W@1sbMenE0XIo&_8.k$Yj4Ba\b'rOM:Z*%ueJ
%Sq$Y6jQ4oFF6]bF0Qd=9p3>7l=6Jtqb:f/GT5!ui"G^B0q6%a1_tgo]-e/6%c$qm%p\+"-alW'ddI"F!4CPe6S9!])gu4Y_AIMME
%qTBnZokE/jn$UctX&j5+2n/.."5`?NEGPljb=seO<-bf4I<U-\rTA[D\[l$P:AHU05M;I$3dlD%Y:e_hSD7n-rD.So^'U&:Dr4j8
%3]UJpH[9]r-(m?6Hro>hLIZkMe'kAhX6Y94jn3ePH=R$S3c0grh5o(TdkJ!6^3[8*^\eQKIG_DGp*6&=Jk#_-#ugBO4*68&Zsi<H
%`8t-h1lCO8r@VrGYHQ5(DdH+qVu5fL?K56Qpg0nF5"MI3ae]..)<f`MbeW:lANh;^V2t&2jk)L$0Yo:7a\DOI\7er:CVnKme$a7V
%`aJLe%,6@nUG;PWp+UubU2b\:Tu&t'5.c)gZ+QKfLHVT"nK'("hOf[dQnR?ZMgt?kak>6ibBu8jVA"?L8FN8%FSp!$rSnMHH'$V&
%oSrQ$^W3+``E_Nr:uRj72'mSjF#%@1o%>piSQGW?$)?2F,+fCCC#f$>ebSb.Er"T+Z9D'tNl`88kZPYaH$T+$aqlZHmcriH4?Gcq
%P05p85P&TSRS=X:qm^263gPQP+-1#P?<t<kI<C#3irgT?&)E=MNU=CtHO@p]O]o!_FY'liqOP:J-Vt=8WGcV1\+bQ'bMhgV*HZ!X
%ecn@s.bI=b@Ga#`'C>.Z:u"*UpZpK*Uq;,.M1;2SrBF!G?4Q,UR4t!q3Hu#RTO:upd81KM/`#<$c2OM-[Jt@b:Vn%F@D]<2*,RQA
%0_`sq]1Ha288^V@I<'VD4TBSM^-%r%1Ksh#Y/^4\K]Lkca1)&3*M55sS@s>lIWE$4=C0k^mGuMX*]_K>r+E;.7l1#%h;=HHS78.W
%$hmh]m(6H936AY!ORt[Ap[3eC0t"nZUNQVkpfKTF3I3=XG2#pLDuDTY>O;5fT@18tOE_i\U,n(9lR*,'ad8o!W'S#/\sQBC`63>s
%/LPqgS#[unlIG=Bctp&,L@I3A1/3V;a`T]B*#"(tEXK=:>d^V@]UDs@p?M#BHs1sTq<eH.IWi7aR8DLbH?+K2\#Ut>fn2qA25n^!
%b6d(h"Ot<WDQ3FK%Vg7YY(h(>rl`Ee'D>6d6>oW%-Q]^:jfX=p_;6&YZ1@B;3JP.1gA(MM%J"hepqh^S]mP*KF8#4$U")e[l<0W^
%Sm>%D5_"*]2g>D>CsUhG&nN^9[*tpPM)&WrLD%<\i(B5*T4-V9`Y5FAR=^V]Q_N]rp7rDa$*si-5,DGI.>'XFUZ]F.;'qZr#?$I8
%Bi48I/]s9]#>Umh/]s<obdAj?/^!O%g-!J\'_;@TU.eH/ql\MB<%Z8W;lW9S171G6W"6QWA^\'?pT=EoCJdj!;D$%U_&UV#J&j1c
%+kG.:qNgm&)S>p5LCKh6WPWHM&r-]eEB#'";;YiLDt'Rl$U=[cn%TtlbkDVf+ZdR5CJ)N`7f(du@+g_g?bRo1bcKFaUY"M,f-X2-
%XOh't2X@c'cte-FcB?jcHWoRc&g)8IC9pt<YdN2$X?A"BD:WI.<r8Ptg+XcDr=8DQq_f`6VVnq\A.L-j3,bShDkf.-UBsjQDkhRs
%NRgd:(1BNeU($mf8Hjs'CNj?LI5'/;?_@:4H2dL4afjUjT]^=Pf(.MUbN5e2bO&Q"UIqIDbEJDK-=Ld#Y2.X+IR7-bB$+3c!"@t8
%H#^5,Yi*mD:u8ne*6R)iRDD^30U,'EdTu"SN.eKVBL=&0h<=E`q91`)'CpW3Mu<UIjZhr.r@Iudic09LG3=G3#OuB_9V\N)l1[8!
%]"=rfSO>;`0LbogL@ZRSnaFO^qTs:9Hf$#3EQ@FXIQkHVG]WO9qr(nqgSUltUH[G/,'[E`GE?!96Cd8;D'_$VO+E44((HZcL2Grj
%NPXuU(q/PF7UtpL2#eq^@>`A/Bnn24jSJ6*ou6K6apE*=VrM<OJ+(_'q].-kF[eP-pu7Js,S)UAER/QM0Z?:uVr+$ESb'VnRK)(D
%nDM$_jZ3?&kC;[mms>LU-Gu5B^N9BucMtV>onX$\D*FG&8^9?R4UhDYH+[\5q9D"X3Tka-@sdLhqK=%sqWR48\I]DoLpL0dhS!2Y
%^UhXdc/k1\ZhB;_NUGE[q>&PoG7X6Am)R^:q1<7WJ/+V/_UTapb\EN<b26L>b3%.%<B7d@cZS-ZT<u0AT$X/fGsl_,ClXVE6%nT]
%d)F9BZ8k608&u`dq+WR:jtPK.U$Xs9-5QPm5@-"0Q_.h>EVWa$LsLO_qX!COX7PGtB@k=nT3Y`p>].f%cge>I*5h/sE9>8lT3]+A
%fg\%_>)).]?*1t'@5uI%r3qOQZba%2%b#fF7[O&WFQ?24;n`f5j+SuK_d)n6h"*JJdsT/Bs7p#?Z3;s3]X%O#SXJ(Cp-EuYHc1ur
%J$Q[RFIO6H'V\*]f&n#:g=\1&51jT<a1a"Q3Ued/?KT&H*-dkR06?&_%_V_2a"G4[&pVeP%-'!^i+8NDcoLT9O2/s,[,TQ6o@]T5
%d^SL(*HVGKM#pC6SQ=Hk\`e+M@@*GIYe_Z`J/mo;fYeJcK,JK75K5C0:$cP$djseYs)`WV.ZYV'l8N(BS8HMZc%k=#+"[;<36k&g
%qf+U@85+AX38W-?gA:tmqLNZ@BB+rdoX#0smdXRqoVEFRBiiLMK>B#5p@ZPNX']J%R]"`%565nAm`OE+PMkBRfd@>"^7;u<b):GN
%[&/djgGpr+_nYnnHgJH>\pF&7mICIniHk<?U.RVV4oZ8;p`]J6n+1[oVDGGp?fn>NA^;FOPOm.mRIH!D=6L?f@tuCdn]c_Qr,VLO
%;E^RW\$No\.>)oZS6!g50AP)sVCf#$#2p'Z_%/,X0nV&BYrG4Citr$^di<`TUO<2`N%&8(iu!./koSQMTApc0*+Rm?bT+Zjitr"6
%a7sU9[%!7N'kC+r5<F;Od[/eZ6<p.QhOL*cH$)$A[Tn9*kCDjbpD/2@o%h8dH/(V[C,[2?]W4>(?@@0AG&t5HH8tJiES]Nuc6nTg
%FS2d@f,RLM*;\XTmIDp^bPumt]KDbE\ZK,OX0J3jLh%M7bk%(84E\(3P_"Rdm))oV<u4f:'je>\O\B.=\[e/LQ<ilq'Jik>(-?aF
%9:E\[-4K2HJgF-rJnD*[NC+Xo-1*>[F!'&-`sVbBrS@,Wn':M33m=8TN.*N.VQdu3[7P8QJV7e,fAndo8gi9RIlR@HYN@:!HVGF&
%_3B:@)9c@P[3)B$h@TL3)\0aj'Nr#Xb:G`^8Gn,BQ8oM[A)!24I.MG)n^q/DYA._Dj^qk;pUb&2k%8OLp?#t*DYE5DL[ZI5EtbXr
%Vs_em_9/ba^^@D4[pT-iKMOM<F0dqe]5t;?2nO.;486iQo+W1Un<=p(8V9#?LMkfIRpEW(E9[AJe^_hbY>;#8lVH?/HYT>['0Lmb
%OC@l8(D@bO%tk/Ti,L&TI*<I0iW*sEFu["0UV%WP+Cd@HkjrW3$,Q2IrG[4+qU9'b&RE(13Bb"Mp"q)b$K'_<H9NWIXk2rTh+csm
%5+$aTEBK#^NW+N`GEBH#a[J/G&,9c*K:Gk!b\S<d:oh8Ud,X_qV;%S(?_4?fDbj.U)$6S6GI>dEN(V2LT3kleV0n0hZhfScNUE.b
%PE6'qQ1"S'D7X^H^ssOnC4$[E8`%1nIW]\BS@U,hQd60.D]6W+>2"ThQ_kG`54O04E>/'&aa]pg]UP-TX&n`S_o<"m:s8J.[u')3
%_6pln&s`)!0R4__I/;i]Vs0+R\]d9$k)3%B][0%80Whkllb*k-rqTo>XtH')/>)U-m'0u#?M5G+h>0oZdr%)25![Tb?DP`)<G/jd
%8p*%L%`0W_D5%8bO`+5A*4/T8j?iW;X[)\gVp9[EcGArCrA5/t^7VibOpjPZ0%seGkbi:LN5f7K2hid=@9[TcBFK@)a"TsRrj5&3
%HZFOXoD2oV$/5EP:<;Z#h>KPYT3;itq:X$E-YHZD1@sJ7`s9f%+-'9anpEFba'+oBa$XfB%cDl-I\=ntj5HViLDW=KaThLik]n0(
%EB)k9;;^@U=2`R^i-p966o3HLTg9;SAVA_u_0Z[EAijs>,-ttT5F_XO-$Ohtrc-(u.i08D@bgjUlf'2ID?@u#5oa'Xc+e^S91@;1
%CC.H@r9^qR[GP`YBc2:o(#n9D45tFoLCP@Mj4OPCDsotISim7AN5pi3m:81`rD*<q]A3>i$o7A6C?s_h]cB@uj<"$XhQ$dT'(CJO
%rZomA&%dYUIc"c+Q^X>ZNdd)`o^G4BkU&F!?$,Q?oi"fAhn<3"s5iTnL[gFRqndM2+d$bco#(:o5GlFB7p#0EC\&hn5&@]$D=X$;
%Q`&^\U`)6cMe4[sZbopXIm)"eAnGUt8?;*%Vo9g$EI];'pZn$d\$)Y_.I?#^Ir_6DHT)l0IFR;+L?CkTdINECCIujGO%iu:-#]EJ
%T?eS(ql\P]`:@n?/0F*cmR`$&LX6"V1uJ?/nms+7U+AS%rKgTP?g#$4U?7ldO-`)&>n6nrj,^p%;sqPQr:\a#+0No\]Aub:oul@6
%o$tu,5Ah7/J,E0Mq!OK05C-E1Y??7,s!lP`hu/GIrNH-ss3.cU(8b74D=N,U?aG!FJ,S1^++No6[D<lkSSK%4:%ftRdk37$:Zf_f
%2\9V))igFngW$#LD&`jfj,XVO4QR#u\MZmk22f:FSI>+fo`_?lIdc8nYWe(#[W_VH]kmTJ<BbfbHIq,cf&tue`uc?%JB=#T*5BKC
%qW&`bptdY?5@0tp4Nhp(_WF5c=``(LVQk<l*4aGMcD'%Xa>]+IoLm8T+6O1#Cjp0gq"JF_0Cf<Qr[m!W*!Osi`GtkcYODb:a8E=E
%".qMZT5;[u\I_HM+&(/GU#@;,j@]UtR]aUO]%A;++kl"0=aYEKro0;IdspmM2/UfqJQsP,XV5TA@)g&=j3Po-lTDW?W%i-k$u]pF
%X1'+n\/X9J2+LqY-0'nf^YuV$\FL-CI.5#G[_nf@cU5Fa?gsc(=Il?LS>X#U6VMJBQdsqW2@hj.Ke)U/l@@lVGO8ja=004Idq"4m
%a:G`1FQ8;NK@fNpAZK1\Cj=c^fAXNrBArZPfm1C;q`k)MnONV@Sb([\O$AM[:]@m!mf.*h;.G$JC'u\V2aeHEhC<Hm]VfkkD)sEY
%$e+8,kjo`[L?Ae(hmg>PHoi*%@AF6fgpSe8&4`4M33g1>C0bIdUe"s$MJZV/3%q7A*Buj4HH+#eb;7dRDI\$XN:["RNaD.4h;Bh:
%N`jtUU5EjC(f_N`j""1h>MQM?:WGQG)10jNd=mtKXA<A5gSiT,p'jt;DUO$^s"UPjdpVrRTr"j];b1'g\[LnLReAQ5N[_1%B6ct!
%_fq&bO*[9SZjD#52HE%OkSfs(pf$4Yil]Fe^UF_;Y>_'ROu%RYDt>eC*\.CANQZf45(3IO*`%6$K.gV2rYD1hlLK_nF0#0:#A,Vb
%n`X(]h[>naE522&a&jor5Bsi4mFo50gSB0@jJ<Rn?9>niMK1!%Pf#H%T0*(PnX]jT7ij$G^,!I!M4s-b]"?`pCch&;fB![CUVar1
%EiZ3*Kr8L)HPbH,`GN:J0<Q/YM@drEVj,mB]c>5;lF$EhCp5P\Wg)QK7RrrWfhk@I4ZD@tf3f/ubOa4e*YG[#A*78%U$m6SY0Z.m
%/aHW$pYbW6\\S/@FA85@\B0AGlO2K5n`GW(r155g^LqhU[isin2$nmH)^HNMH(X3GqE3djD`06;r+?]6d!^B1XAh.Yf&q>E>&;M;
%X+K!G!e8P:*`%6dl&L_KgE:tgHdp]F)_^\FI%S*7S$Ba$L[Q1i]4&c5:>tiZ]6q/6qtfBuEcFCSi_R&m2Y6ZI%h6-[c#,R/f(KL\
%h2c-XA3JGbCRZX]8iBBs2f2lk%G-!OlbRj!j1u&G/%^@/<\1t;CWuS5I&&S_6>/)\EiA-leTf5a4rd8LFno4qLb5-V3,<fEa/Kfk
%n%S1*QSl6f`1H-%e8rU`L:ST_r4J5FfV^^bb._Z_hi_5[Tj3>9CHI%,]H7OIQagV]-#PfnF^8>3fQR)C:EDuJC@Jtg]+0Q:c=a*<
%PY_:tZ`JkOcW^*HScg.Gmp5q>10[mkL*hCJCc\)E+_&?"*Rj$H2uGMi2CjjdWI39oq'0#prqCg*n^OK!h<0Al/.#7iHD93"1%H(8
%SS*k^qQ`"e>;X=A%DBa-M>Y>mgf1m]%?t)Y=CVGY^!B`)?;cF=Y.s.X47&..T+7GpdnjVZ/=L152f@IZEKPBMUDD\.PHdIFFah4S
%6!j\#A]h-8\)%J`Rh_r1qnS\dl6jpK!LC2\(C)+?j5\H]:Z#H*F*5rugJl.<Vs3`%cPisnluRBmior1/($bUMlkJWH1`t<EQqHJ:
%:,]5tDUjo`=ReKD<Z/%Z2m@7VlS%';LO$/h5$R,o6Or2CmjW_4"&A,kIPAY>d`>K1Hb6thkXP0kH^e_+YJ"kd76\B1jgK`-`M^aX
%=6Hq2_UiH#>+U5W]RI7N]oc.Ds#di>H+n/\][sjrI#6YA:Wm,<Fs\iI&Wm%=7'=R+^KI.u9A^9ZRC@0CTA83QY:mM+cd)`X3R@>)
%YKpPSms5r-)aEG!^kuLVr4PK>s6tG=^ZM$IO(WBLY5+mu=#P[ceD'N4s8)0MV+-.(<)gioa!*Bm\1+BO[s)c::?Ql]*)E*bM/tfL
%_hfau:UUm4oU>o>IS2rR+&"rID@@qjY$9Qs%hqs$^O&X/BlFTse9f4M_k`Z/*5iQ[s4@c8`@[.9QsqU$`RU'n6cBc2OnN!hMIoLT
%;0LSa:pJi):bgcRW#2E:'uq!`GX9:eTki8THe-g4?5s(_27R;2bs,c51"DY#)`Ip8-U7<Ll=1]1KYiq?U7"B+%hV\JRmN!@%Oo[H
%`<Qi$Eeg_;5^KL?6@PLLT7K@+6XEJfQ%KWV.jrLge2Y$'Mn=u>_=dWNnXW[*QcH0N)KXE84GD$.KG"(mgh&PV$)kafRpOn?4433U
%=r`($b>3&ND#:lP>?e8s\kqb-P\kGRou>BI[JOXqjgd/"Nn-"`$Zq^+)<8&s=+9%<"0Y;m"hisbo*:==dB]$t2c9IXj2'8d8ilp!
%?4rtl\.;e(rBgKd2EW/,O,^GC6N3O6E[&N3Ci2d,h#n^^cI^t>[,a(MXn,?!\:18j)?`u&T'n$iDgRl).rlW'_.=-Dj^oWRZYN"+
%Q=i@8.)ITiEf;k1=hW6r>>b'._E"_7#:!.]RPI>-;_UIq/+Wo%\B7.)*T;<s4RFlnF5XEh,Mu")H2SL5FJ<T>PHuJ"\l:k@[X@Ws
%-CNmV2I@HW&?U?A2Ld((pVmtC(S":_%ZlIAo!U!`LR!kmcb&Q/`oJf:,rD2n?t]%5]HK,'?O1C-5Li3SC;eiK6H.Z0j]%u77lFo,
%B]GrbS?_n)8sF_G?'"He.g+pZduDo0D[\Q8_SIDqc;^@"#)?Pl-YX,U`bo&k6]\D5\[Y3p\A#od9e,U@eNqk6C(5;d)X4-aBQ'##
%&&gI"\*:l&meEk)\s>j&h@Me/+Ul_#C;Mk7Yah#l98GdrNMC`Dn:XIO1jP8oOqJH85o"s+6!]J-fMP*"`LjdZXd/CD3r/7^W2NG>
%[<b(UQr'\L*uD>MmA[O2<C>m"BOt+cfU`Z:hmj;/"6U\+'d%$JIoFLR$hXuj2q_lLXt$S<A!"13?.D=7G+6j]l_dK9XNKoqhP(]Q
%oKuY?7YDf.CKbCGeh;>\51,;BBq`$.iaB\;$Le\&OjB.1b,!/g(7Ua_H)aYe2_HD!<T&Xi2U$(Nj_Mfe<"C+::Xn>BS/.s&HE0Dh
%Yk9<f&`gBGN$`X]Po/hWXG?j@i3]Y*.nVhF>8,."`gc@fgrY_<W0[.IOn`<?&i[uo+Yb>ik(L[COSEc-&oLW7_JMn9\1J#D;P(,m
%#mpF7lNrFAE=rmmG6s*XdJ_f4&oG`!`(:8lZmd.Qq6@u(+"IYS:_OK3OV/;oDb`h[>7qQd;aQ'>n@MCc`;:f*_W6A<qksgX=>C!G
%/XZXXG;V2'oa(pW25UT5/K"lK;3I'GK8dbIT6i]r\P,TI4s_rH,T\3YiA]jDr1&t<EtT!hjpWWS</YNjI\L!C=Q3M4G^<cq<]L9Y
%UB"LCk3JJk80BG+o>t*t%\YgTo6/7UYU7]&lsN)[gqUSL>2=6Y1dfGGE/&Lk*[+_;U@dH>`1MF8&06hUX:3_?=A:]JU$P/q9ek9\
%/]*$J+i:`8&j6fh`LHn-!Vt59`Zjju2.3c]n31TO0]?T7QWM(Pn8u"i=Y6>o4;*WlGObrord$`G,#4k`D#@2E1ttJ<Th"=GBfVq?
%baNk=O/M;(VfVWE&F@8A/lorn(m$CcI`"aq/,Qd+Y'p(cRlfobZO3pRrdDE*H?Fucl\:dS5es_Ds+\mbOEb,GT"haQCK*L0/CACL
%fOI:[>.m,ecGpUdN.WIXj>>`5s'ogim!`S[UQ2Cmb&*:gqN<M($>s`/nhg7i=oUIoWru%f^L*4Q>\nd;:6R>XEW,l\Im]D1('H8N
%)k+F+_mYV>%;&Jc0Ohh_\)9rXndVohaZF.Y[J:6UY,iRk_E745I.r'^"1DukG`t]Sf!Z)in8FbX6LG'TDl=Li<QM4]dl*c<Z^t<<
%>fl9(Z#O'0UF<n?lM^&GX;:^EjKD1cgiY&;DR2cIXm4p4^NU)K5neCtYN?+`UV0,RZEWQEr)$\GH37S6YA?)BH?!84D94LH<S[9T
%5#bMj2nQ&hfG.DF5P0_!F&YL%SL_hs3=P$oU@TV_pml_F55-nui/k_BoPdGuhe?r9H<&`J:N.krDRCpMWKLr\2b[3fqn2Hi>Q)#'
%5(*k&5nt"r+):J9`Cn&?&]^W-g>RCt<#$&D=_IWL^22IT/#5uVdb=Y8P=`02k2aXS4@/Q!lOtth5?@KrD9e`_WS%sN[U`23HMYRG
%beYu];K&e&5*:b)djKT3rhSCZ;Z:5)%TW;6q%H!:TD2.VPM\$A@bp2=8Y,?J2Bm#Ecs!n)IBk;KZ9$kmgmgNIS$FC\Osfo3<g+o-
%!c+/cfs'hc*O[=kXP97-Z"7PVZOn*+#[?/*-$^+]AP^mDj^=NXZR9Whp*=HFTCcL5Cj=p(oZ>fL`ShigjU[tI8XoT;XKS%T^7QX[
%Z*4NZ<Nsot;9KYg9#PShT=?KK'=T-7,%7D"r(4@XIj/m<ebi!'iHD^i2E,`:\#8@a[VX9Lq%Kam=_[(ra*d8A4E1:qeNAT@!k9G"
%$sW<?Thh9`9k,ls]/=qE9DTp@IJW%(:Hb<G<(W[kRQN<chTaI$/]j3>ZlUMh\sbbG]/e<ZAr]VQV(9e1U*3QH\DD+`iVJ`6(rgO6
%cPX]A:#i\C:-q[Ho\CLh>>Li`mWW/"LYJ%TBbq`OnaW&._PF>l9t_NNZ6.N<d:Z3l#DfqNWU$Z+>FrF[aq5+=DpnL,Gn[G,=7R\a
%qMk(n<L'`J9klY/PW/+O&gqji2sGZL,bMg!bON433Q[bX9kff/6eWf^c"WBK.;^gUedq;dBp7U7JUrEpXU0rh,VX$OUeP#e?sp:K
%VG0r[S*5.gSkhM@qGbD5Uo9i@P7??!pIh%3f$=qDR<^kdQ1P6em3lO#.%hTY9&^l^iI1,B@rIlUbb@UP$1"`nZ`qLNADb6`NH2I[
%#9c^AJ_!T=CXt/^8hZgo--1Dqm>c,"*<V6p>,e!9`gY\B'C=Gt'C=Gt'Buu"r;-@6BnCcBEItH3LGR@cL:Pu$_/$MA^AW5E-[;\)
%nGk<0^6!USZOZB&r5DcuK4VOpdN.o;I5KNfp5"Wi7GITNf55tihssD*pTGa\[Fq';O10ibd8#i&SV[<R+%Qt6p!q=;>f&XjE6fic
%)r>!UiI7LIgbVFmprXJLHH)n42If\s!g#3-oo)ar=N0#N7eL$!rAt^3:TrQ.hFI!n<`M%\9W>>@=u.SL9/_,(C^[8&>8dnFD53/g
%8Br-^"-og?m$DN%$tR[WoILkl`RZ7ZD-FJ=#7M@W7:e]A-XEC[A*(tH-C0?'o'p,@D.<G4`\B_YVKFmWIi?J%NCn,Km+mf.BjpC_
%hT"k?PAP-(UObPR<[5C:ol2hj1jlb^HsS<-^%=%]iaFg=](&Lbhse.,:u>!4OC'$OM\Wc'r.-Lj7I!ugR+I'!qREp:o3@XH(O[=;
%8)7tA1-naPel;m!>NKn@[<QJP=mM!MnN=B*m(1%(OaK<1d#,9lR\IeZ]sBY"BONa,F^:#hdOC2,\+%0GY:h'"!Pg[GBa+j4G#8+i
%C&qp3rNanCOciEhGC\$T@G@)dK<ftWY;TR`GoO7='BE6'bfV2lRi)cHkh'>M1aITFe9Iuf"oX0r;0eu[,C8ls<.o#=cM"J672cb+
%k()_+@;!ST%bLRL.Qf;X8Z!?$j^OJ$>B/^"gCAn32lQ<+bLYDX#IQ_tVkY,eBm#bIX@//j]4<&Qo$J^((a,SmB_EarA$%Q@fpFqm
%3EGF<=Z`AF'n_udZV6:D:$V)&&<;-BYX,:ZQ.eq["u2iG?E9.QD%Wfm(1oK4`=0,9>KJ;8!3:K0Fa6?1LV>sC[0G<$R;'.h2Q1Op
%PJ;V(5UDFsg;Bc[G3u-29q;[POe[m@j8br8Wkt#-*Q\-2a"C.MI0STNUG/)GQ.`7Y=$CdJi,HZF9l%qS/]?gVVK5'6MF@[`X/ZWb
%VOi\3)^:*JnBI]C6k(mf_4$O@!p!+cl+.-fcME]X](:Bk\)0si!o'k:_=U4BDp(6$1Gu1=U\B2[="&euZF-/*[SA>F2d:T;n`-.d
%o;Cmj7:8f"+FIM&[d$*+X_@N2P^e1DD!SIJWDun,+S`:E+[]V^^]8BnT3=8.,%?11>*jG57J/_f%=sqWi'tQf?t"JFCP^q^Rqa2Y
%jA&b=n8[sBWtm/Q<e\kXoiV]o1&hR6+kgg]',NPhDBRGQe"%.Qa7<\.%O=1r-s>W1X+&Ua;AkicH;Ig4^S2[PX%JECY0,:.7M=:P
%0V<">'PlVkad#RP[i4<BdH@IJ"]eOJQqq"2rULjqD[4I*PV8gpXkX$7:lX>LG,8B>6&\'>:"NTJD-)5U>d9cUJJ3f^;bFb0#?DA$
%m=s_jf=iJmii8]\2T[h7)gp4PK%uW@')IDeT'@$M5lQ_YfHegNfZ+=6WA:ub^tUA0CDA5%pkJNr%Zd0N>kJ9#n?e-#)6mfNM`j,A
%kU@!Z3tREYTur.o>AlSCfD6b_QMDD?j6E4<l-`kj'8'JH#'b`G`^_OUH5j;4'gAf7f8VDc5++-#D8X1aJcL^@)mEL-^!Me@SK^Sm
%;RL[10_:fnYML&8\=dc#&g@G.1\M4"!3:K0F*Sk[`Q$$dNL_Zmm+1Wg'oIifj_4ha2gT%CD\@J0jd!)0&`"Cc)f9UbXL<S4Wc2N1
%#P*?3Z+!Z=j0+^)6!sjt5';;:PttZj3*\+S_npG0Mt$P.aW..J[aZ(?E.(@A-bo(<S!"j"pUrnd5f`<,8a5XMJL=;;YSc6i0q4E!
%>^=,'mnk"Fk44%,b6&fb6"ru;^g.CAUOBD@4CDZCd_V.Q4:&N&HWtaq2S.BCZk!W7[cP'7'>3()+#):Obk2!XIDF.o"1E>$mBAbs
%mrRk416_Qg#3>lb,jO,gaoas^%i@2Rh=mV`;]dJP8o:O<ph`/d[l,Z-=B1n/(Y'C:3lMG9?^o&.qNQ9Z.'L+JdO#'`c+Zn!Xt/#M
%f+RVgfo8hPXIbl3bq622.0:"IDVMQ2kW[.S2>+u0'5fA'1N<T.laO=C%&)%&8.qnL(LQ?NGe$jSXNBdF?HdKle(RR0[[icr,Gt,#
%o&TZ>p"XaHpRUZ!=D@1bH2k\.gikOJSX>NtCr]TuCg^uF4.5,$F'NF>/'W(1K8hD+I4#9MGB*r^:!eq,jdRi\Y-60o7m[c416Ro`
%E&;6"6g+\i0+5IkX4ErP[PanK-`[q7e_d%roV&I.m.0p>0nXjU<c\@l=Fi2E'T]9;b";*H)UJic77)8t]i_jOlESV:%U\<(L=0Ca
%:eF)h(3d/5WKi?00F@nh9s*,gP_(?l>@9+5;<3``T>ZZM$O>Ir;7L>@Pb.t]O%Ejo]E*?5eJZ(?CYa]ipK6`abB.npe.([nFp\2<
%S6)BTlkAS^_O1P:WaYtiD.Kpe]]EU+&oH.&gVc/q:Ui2N*W-6ai1LtQa&;<S)<XC:G6%<M.!8Kir6fs"O\Oi''UYAgFhCSP[^&?Z
%Uk)4_r%*)grTM[[bnX/3OMius$bhI<.]<qVHRlIb3-uAM1o>;Kc6TeB67^ihq6W\o*l[mJkguf!L>EcLrp,g)'ih)Fhuja&G'+4%
%.'."KD/0"D@L)DsUt(WF9Z;nt;@;jqLKtpVD#L%8M8`b[g0".^MI_NT5FL(;YCD>V;*D&A/F$q9%dJsM;q;janThqX(9&\6>*O%d
%i%;'i;2(pES2PqSH[Kh"rN)[/X:&R1iD12^DsJqT$XLiVYiNGKV3g:l_*MA8WLU:(5uGhOd8J@qq9T2-(o"_X9)Tch-4r.F?%Y6u
%<pFXb8-e8P\:eoO9-Q3h*&t];=BVUQX?ADB%kH65+hoNR^.-E.4Kfcd'n]>72>o!r>5jCs-XSi.oPLpA'ALqfQ;:Sas2tb]9OM1(
%>oOKr?9>u"l;tgiI1mA8f>)6(oR/P7m%odcm')rL$qLZ]kmjM[JZ?iGmJs;!bI,us">E!Pa,Q/K^+o@NlrNf45LpA$hj.Gr0.Eeg
%<^>=.(F=c6c=J4d#16<0>g>YhX]dD`I+0Ye^/>D1P]JiH=_JeW/X#4#[NsLS`jeu.Qa8ko`!Sal_c3/R=:p"5q6($ESpPG(eRjSW
%0IJ$X(L]4>S-g3<=S]=A.r.BXp%Z19bnQtP)WWHWX#%rj>1XEH8.[&bH8=ZElLhZIp]_q#[68JGMD^4_Xq(VDX/S/((F+fY;>.#5
%$J7g-2.U4_Yls[1.1H<hfi<3!!bcm2op98P_1bq3?%OQj8;`r`Z((*reRQ_P@gVjjp=A?%Bf[c50smsaCd")i8RHCt<DtoCo(U7,
%OK-mgm7p6?YNlb"YSJXR;lRMkl\9F0J\XUr]6r&jWT<Y:'C)P2Zj[q#W'Opl)U3RX.BV(=cS.PJ5i\sb.1!h9m?lI:Sa:U"rhc18
%W4gnuGbk@57As__OOn?i(SeuWRikj*>u#l0Pp#]aafJj\S4\SX\S<SYqgr7h/DP7s+V\(o;aSu"5BPLl,A4$[Kih(A.Vq^cJ$>od
%5X72rS-jN^FLigA\Wf$iP1H(N%Z7La3OIKq2n1g_f,0&?A'3<d_*l(3dk?rMUlcH&.7*;X(l5"I4N+Dpns#=Ekn.,qVQQF_L7Ba)
%de%':?a;SsXK@-(@9gA_pd\P`(,P^)D>D5AX#GB&dlp]Kbg[RfonI@9@5`&$hKYF[j%R-@Y&'`02eM?7R<iA?hO(9$B'PADH=N=i
%S>eGb90_9:f%qXGR:25KDcYsQ`q!-^'RtmcGb7&!eP5=6N$V;;&dYpa.sT\8n;uU=^^G]9FPbX8QfV$+i3obR\So%7na3ea?AJh=
%DXZOfm-*c&<V_QXHj.e@L-+J6qoi(/1YKWKeEK3g%;)o"\`eGoHCp,P5G4bF53au'HLIV(K<"Z0l85Yi+%2[NJkl2CokoOH@rp#]
%+Ud2fmLU-"D^^"jJr6d1p`;?p.SP<XL;N[:O-R4RXDt.\5N/<r:@DE^DRL7nf>,k>o">PrmB#llO#p(7I#h2Vho?E+G_)bP.0L>C
%7@q*F,#>W9?0`3^pTa%XV_*s8%6Y_BjD")JhSZ5%pFt44cZS]gj'+3S-oQbi?/NW)7SoBiY_BgT=)hGZA@#@c@n>?$BpFh^"RA<*
%f[=9\dQV'E9g4.RNpaaFpS4ot]hb-DgJW&TQ7!JA?"Fu!l?t(iIHCGTHJIJ+DO779H$!m^=l'Ch[`ZXlZre\,nD>?1Xe-DXF]ubl
%DpT0%*p\JaJ]c$#\j9!Z2TTUHY/Ef]mltD*Lpc-H)+F-@dr&kBmjB]&3\_JkMkL-BY00?0?[4i,A(&.^^Z^0fB#>h]mjH+[e#pDd
%kMp1Mkl0W*UY`'[h;ELB:=_<)ZeDR2<;A0,pYpW!B(>*Y)]laXqg=9c>hcZa$QhXGp6`j9Q>`CC%akl=Rg4R)6_8tIm5CWu;ncsC
%ZGX^XQES'LL;bq%'SFA.l2Xm%b6A.ULtB,eqV=)H'nI;^CJ31eZ&Aol7=_&_jf;U+j8E=adc3O"50etcaTiKLf!PP?oUX%+`-#Y>
%7X7'^JmVN3'/M%mb-c'pRR#P*j)5+4h$%dnRM&f&7n,DZ]$e"I!;u8o?(A#bQOi"Pj?N%W`tRm"'?qamoU$$ljj69kC+T2>CcmtM
%-N=BG.PH[l&Dr#(ToqVt`TFDLd,pu`W/WQ=)!*=+,.FTu-k@lD-SbD]IBpW=FknBiE_1><[]T/Mo:J9cqkf$@`8ec0ga[6s'm]FG
%2d,S9k54fAnT2677N>D][Oe$eUPei&hTE'o]RsIo_T//K&K/[_,[H]P"Z&%If'Zmf=9Km1K.)]u4keL$g9",8lCMm)#o$$B>s>iL
%s(FM].!rts7]JpI=M7]n6rWR3W%3j(X7F[*Hc>BpM-5:*;q].&kZ5HjRMXutdiJ)a2_3n8mDi"GCU;7ja;E^dK5Fk_<SjT-S)nP:
%A92G@%@54GaC8,9[6&5WUPHMS\?3j,6G,$A^@jbNFYR(mK-_DQg+./KCu@iT`L_m$b@5Ti%JGBrle=*nMPRVf(M(.]b?)1-`r#M&
%Vq3?Wo_k5+0Wc:;3osgCUpYneemF]2WD2^Qg%8NDT?Jba\\7&DM>jRIG8JHAs#g0u`jhMerH#Q":A96'l2DR\mSQm\1WJ70EAqC_
%bntX\`ncSn2s:%0B!2.DN4T[)mb#l<b@<E`iip!qjh:WBjo`V'!ohQ3\+=hF<B%FK95DAYp%Q!AWr`8Ij)I+q?V4AIGu_!p=$2Ha
%\$/=8)L\V*#>8o-nK94cEPlo/BH/=nEqes]Dnd<76:`WXJd.JkeZD8nXf9.9!;fYe-%`<Omof)qHL?lS!,luH2(iW[2,@sl&MfSS
%>1T\nVle-d>j-#>TaY=8$I'?$fa"cq.\3FOF;*C5H0#i2cUDlB!jfrs9//\=,\E@/7Ms<L?`_EA.Hb/2Wb>ln0PoU%i`_t]4"T"*
%b9jSMN:O`:C^`B'Lu>c([t%>IOClt3*6c99<H#DbD?m1OA-G]?oC7Jq4,+E#?!g:)S84dONnI%)*7$>Bjab\:Z7Q)j@tR\8AntS9
%6=7J-0/8n1iTQa?jKP4B5p.^,<EZXCmV),JE;i7U4$>68i"Q;I*u;Z`H;P1._PI]G<oMmHjtU%rO]?37$!6#cQfE3t!TNErQL_r:
%l`SIc6`h\_7[NL6_dJkaQ,H2Pa5HYWA\,=kiP<b,g6RWtD:[6$\VYMoSoA?1Traj:Nh$EnE(dlCg5O=J4qp1U)MX,^2Nij0;m%8U
%qMLXW9Mi&G[ok/8=FZl*=l?>q)(,f$e]2t&q+=#FQW__V^ds\4<;*:jp#c.\MI>'EZY>^9M5p9\WfM]\eWltKKVAteNE&fR=S6Zh
%_Mu-`g_%)kgMnMA%$IECf@C6bVZT\f0sV>]]QGIXlC1e!p5KI>-Z5semJrbXI$Kt"HX8),/[d0E9O_l=L,Z.o.BgZh9a-&c.><'m
%q-;UI-#JKj\[3P"^%FX^[u>pt!E;ut;L@Iu@43ci.HYj=l?'I7-Y:?A<kMbCdJJMpRZ2g#7o@Z*n3QGD\GBsR*:K)]T!H(mM6MNj
%/ap;,CGMU$D)pd:k$6:V=7kM;QT8&&Vi'V9d@;]_E)K,B;eN&`PUgcYE^cf-D?"ZGnnH];6efZG$k8!6[2gWkMpaskD/X^dmmOSN
%g>ADQC:9prgnr@nHMkD"(WH:4Mo+Q#d.U?.7Bn+U[Qo3pEJ*2]->pCY?c8e\*_giOCM<'#am:-YFT:MF:OXo07^hapSXVtg,[oam
%-&hbl0U`YE^LtE^ms#g"N;?;gQ,HLc9q#re/Sm@>)#9Csj\-L?-d_?HX+f_PmkZD$e@>osQF1i6+BoIJI=`j8pd'KZ`'W2&^g,T8
%Sa4cq4.UK*j4eLmHkDa$emeOdK7/\Y[l(sn288]8,/B8'\n6k*Cp\Z+#tc,#pQ&l6'*3OciZAFr(?Rjl!X9*%R_i3YOJRqb;PoEl
%i^]0jH+APCGiu?Cf(Rdk2L?D^iE+I!TIL'6IA7QN.,5MHbI<AF!)R?V3\Q\)!2<\KoEWi&.C)0H[7L5OO$i2/dJO=iIkSK>H+QPA
%7^cQ\dWMHpHLdVf-eqiLqs,P#%iEtAZn77]qh)>OEF^.]:U;4Mh]j/YS#bp\Tgq.;Q(+T)a)#F>>^N(ZK9eit?XZVcYLJJV>^'c4
%`3/A$aM*R5P@g8-1rrOn8R9E_#!rASf:CC69g0_i<oa$Z"0.?KD9!PXGD/DDU%%7,%Yt6Z*#b6m)VEB*:Lj/`'nCMa3EZ`H.pPIm
%YLSPNGhBm+Pn,S1<lpA=g#V2XRNp1#"Iapm^OQ:Fe`GE7B9tRQ]q7Gd3<RaJJ,/l70Al9V>5>Y2cemjarp#:=b`hek8"Y2.o'2"l
%iqWB+gXh@uSQqca\@c-qFo??+rPuPLE?YAYr8deR/?A8!YKou:d_FsBI_'KV2`F6bDr=ZD\peMIo_BQg?fYdGgJ>g*LW(4C8,gJ7
%c;/?Gr5%9ohOVAeqe*I[gXgZKHn_(E/Q^+sP^?YaFd`:+HM!uI]fWthbNip=p<u5YNq>-g:H/7Yn+f8!YM\-DE4/FVf#R8qo'c@f
%r'1#Wr]kC>T:>S&^0?#ubPrGD]_Qss^9I2'Ae@Oo\,=S44?i9)fG=&EYR#Vga8^M1JT'CVDdVf;Yl)95IY@Gu[@R5"5"iW'q=T.2
%p>_2trSNrC^Kg>J3)i(%5!M(+M%*ee?!lLeEUi:[fcGh[rq,f0qY\"-Q[\d9j!0%644!ep^OH1YjQpn1Q\bEtEn';1J(jh,Df>-l
%gOFBoo(MElpo(7:Qg`4;[U#L9N5_]%T3U8iHfgPo?%(l&+.=-mnFKG1(\0UlG'%bjFnDU&3V1551;BGt=<EGss*f-4c@<:8p%_\@
%hqhUFr?P`\BFs58F`m<#o(4CR75+27SY#?HBYF=@D2M-hRMX=0b?+N1iHA>Y26p#5X)IO]iY-aR5Jd!CUE0sA@ejV]q=<oSQg=\D
%bq_L4YFiR:n_ZZY\M)8!pc86BMnpqDa3!ulm=k)F;1[fW6YqBNANk3=jtH35SHft$U_C'dl1bJdQlX$MfmJN5d=esapkS<%hj0UH
%:ekI\VPdM$dmg)MT72o8pTm:pI@gpSN,LbGEP-JOR2GtY2s2R'b$RZf<b>r\;HK`(b;>KVYPg7q?@P,Pqe$9hWl95[XR:`$oDFe6
%p<KdUo2FM>s(7)Y:9=U8b]&&um4Wtd89?ZD3g>![]Ice)[b2208rR%+IgFn`mL,OLSO\:EBe?i?fDfgERLF^tHES'oq.i3nZMa"<
%X1-7kfS$H[($*-%T>.-sE-6T9r7>tq=rc@lf8$hb!ag,e`VJ0ja%DBHlsZpllIFXY5O-k^LA9*<RlC)o!qT:Y?q5cre>$DKN,&:R
%[V_7iKf75VrF&\fC4(F'];YE.;HqdV^Ld=#T^e)Pb<Q$>]_q'V93IdpEPF@!=8R_FYlkXa[Msh:fl<,*I's4.$PCt+m+-C6mE.uk
%_Kb^,@K'B!gr!82@Ij18e/1<h0:X*["96ZDs!*!Xr0oqNCO,ad0-gM<>AORk]_h6[LT@KEs8)-^`]JVk:ZWY@nia[Eh\=+VkT+Fc
%n(=p8r`H;E5#D!'#M\\H/`+.lpAU%Dq"L86#.9qNK59-7(#[/V>mbEr;fL7+Ln:,2M:kCdM%<Ee_/$bE]0&AiGObKY]fXnSV)8Kl
%&)&ghj</<opkBsF(es;F910jB)F1SqSt]$1.&MnsH`QaU_sFnZ1"lHEA5i'EZKinAKOSKrb'IjMPhiT=WQQfsM3"qD5Hku@%'H(0
%Y^<;4pETr)X784LHAFj(A,I<rrQl?M;0-EdhRH+X#3cB_K;5[FMe!=;hEqfUs4H<(K:Eb0bX(OO)YWuR[K:q^*1suM0"tT-jOi(W
%cgU)43U`e``j?d\:81Zsp=`@'%`TCELc%\>)f5p$9M^j:VU:Ih+3Jl`iIq!EmV,eOK[0hO7Y<<7Si,(%ZmQn`Jo"h$Lq^-B>20dZ
%Q4R>[m\qFt-_gg5Hs%fDQkVP$ecjga1*?LPbX_"^(j]$N6MbA`&=42#j,(q,27*nc"GLs@I/O$2]k:D&8WkM"I\(WC5=g#1Le;"X
%#a!#Pmu[\T64u%:g\p+1p,=0NX!HXFHFIO*n")W(oJ7[@.o#epN6G0kotLVS-I<GWEJ%VUZ1q_"4YV,TA$?m!A\Q:hKa9D_,s)#L
%a8*I^MnTdl'Wto:nA=Yrd->NEE=2L\LAH,"e%[%p.fLea;#c^r_>j7EQ@AueE:s6UiSVN\JAD1nXRP,a$%K!JMB@S<s-<GDrtcH"
%()C3W]\'9/D[$<\UY9Lah@Blt3'WX]VrA-NqY]uYrKiB<:Y3h-HB*F#:>MU$cq1TlUG?cumFMTsp5ATY[p-6Jfe<;lR87)tSj'lV
%-7k\eJ_1ojnBZUNQTrC;eCdd&>7D\SWN-?lM7S/^aWM.>*sIStLKY_$AR^GF8i24!R8;*s1=-A;gK9h'M-=7clZKjEe%MEb<dqg4
%Tr)VmC:+Y]<6Y(<lelderdV<+W."C6@_]JB$OX$+Z7a,nF\`,,0e!^BkD"99DVJr&QtSA[m<=GKeOI"b]u%.;?RiuU0`o#'f#,*"
%I'OV2*oNbp6tp"<YlKCf9epb8WBS,kRUUi(XeeDsbG:s!UXA+QX\e"HgC^r.lkPbVO.Le5Du*ks?41D`+8i,lZuI+-=Mn="qp;Up
%"*?@c5fF*3db]/glt16NfL.RFi=5msQ3t9u%e4[:933f%6W<Zc7teo;0S+cc_jUj#X7(7hF2[sFTMKK6P!]#&@U.f0]J,C-oBdj_
%GcLrllu;k0JquHd3'WpP-Dc=n"S"99h"DjMo)mS^#0d:grt/0A5,6C_@S[R37%`JQDj1[._j+eUh]^:cCKoH3^)0]KmfXa!$P3LT
%720.`Z4YqG@Ab#tZ6A3-<HsFBa>MD`[0ATR/Hu>_CZ-$Gcm<g&+HJLEgFNB4$5nS&7(PPsd/r1HUl=YuOd>b_BOY1i'3ilu5'OoC
%0\5:hO!07+dHi,V6MDo@i-L6rK_/qq5QsSHb../@ACeHb%,Kd/`2o$'LO/S(KrQdQ7WTW4s,+CIH^5X&,\aV^bLs$G+es082UId$
%P9SB`m".MFEpbW;=ZC=R"/S4W%_jHW@`n=C>@9uc-(U[7;o@@!S`3Y&M_N+_4-Gn`EGh<@L!2L(-g=];j6cf-.k9dF+FRU=?on'7
%/Qen-7mH3b,AgG:U9g\fON]JQZoS4EX<:hX2M2Xi2k6IoSgCL;L9i,t%Kp<s'@insb<o,YiNZAK4d6<4dP=QI817<(i$jaO#:h+&
%F=Cea(AO[lJ-[-K2_"Vb'Jj9q@7%6g:hoOdAMCqaBk8F/'VRQfoYY1UC+[)!=SkH(.b&pidOLD>'C'9Yq[t81InNfs.1F\RXrPeZ
%7!8_ops<S[>\C:J[1oc,(sjl0rFEJ[#q!l][]B]p"oIqoWZ/mRSS+a.G_jXQ:ltt%_b1p<'?24Qb`Ukg\eqcWiRPo0h%2skcMH[c
%]@4cEX]SuQ)(;Db9ZT.R^gHl3Dr1V*BqL&g!-*Rn8;U!P_2%Lh*)+IL+G`NWe8i4P0@Ck]%M=Lt'CUB=+Z9E`<D$/c$6hBsY4_i!
%KE.]/@\h)hKdK%nR5rV#B]bE'r]nLnHcGb,ktYnDN(:a;#HMP^,1;.)6JO&1f<:5k-HXhR!3=g_!JgirTRJ>dlS1jI1=H2"Z<-T_
%C7tq66mtcMeCV*[.;;dhJ2_G0Jn1R(o?$+C%M.!&+C"p.fu'C=$9KK5jn!rARbQ7HAYbt2Hsd*JE:E0?7/YDVM9o]ndkbOIaEA#+
%9+`jp:V9=rO^5oK*P#a(A]t,fT]L3A`no)QH'^XD!>bnFAr+bB>$<EjR^#0>6oCH2%@oG6jT&.dESO'h1a$"5:BfU@8=2*TSriZ6
%,bKsL'5!rbGueLgNX<aX1j(3]DD./8pXtr,_?V(Xch8K:)\7'i-s!@Qj(9hMN[od?et`4EGFuT+eEq^g%>!5LCp.,\4B?sbiOe6\
%X$:_`+_pqIMIik\7$TZ<Bt,La@G*lu.BPT**I(#Xh4+l%kO3nRRM(ItOXgW0[18uTl.6!J+]ZUO<BSFE$ftl_B6!s*Xr!OTKt9SC
%2(k17dP1peH^pHofng&1\('BVLRZom+0Jg8dX]WN):2oF0uWts<"-</atndr5DMd[0IW^rL(#U3Me],m%DYPJp'nk*#%$r>"%V%5
%k\tS2ItW5k;IL9=^qY<n!d-iD!/QtAl9Yeh<>]C%E_gfLhlpNcik;nmF?ik,4<Eg.K(p7$X]Ml(o'T$#Vm.S-Cqo3b!+7l_MNbl.
%83_\)`6/?6-A_X/\]'bCTi%H!^]!rGQN?=ncq0h8J"#-:S7E2Vkl$R`=F1aZ+D^Rt"9kBfnRtB5QeDW]mK[poeFW207j/a1&pX(!
%rnF>-Qt^U1(k*rigGltd.2=o!\pl$JJA]V7=V=F3mZRdD-#8>+&5I_!1XtcR)0H1*,&T-/*T[Ck$-#loOFlL\"rd(J>eQ%8U['@`
%,+gQ0,gq>Zgs>W!4&HLNceVO,?0cTf;I,oZ6[X26k+<_K1`ARGpG!Iqa8/TgY;H.h'^Y,b_`Hn&]D8Y_G4gDUhg]Ba;>j7\ega\r
%Z.&$gb4MXbl_%:N3pJV-"K3,d[k0$*2"XM-kV$0[]i6Slb>6S/0#r%^ph!)-h77,8qJ11o`GUh+*"2lA]"t)q-iqV;[We4+l5,Kt
%@oNEt>&QZY\RN&&Y*EB,iI-1HJ<SuBCH$aj-j/kZ:UPMF?#@6d(GU;rs)e,S*DT<c3d8=RgRZ<7$K]+4^D/J]jr394c5-qp[OSp*
%0c%3frSN:.;QWfIA[A":$;c%JmHtT^IXnT;k-KPq`AX0EYGOLjd!E%r;Q]k1O^Z_ROt$CrLg]*bib,X$iROScP)Q#0p]!;Es1D63
%q!I6Z!SdT:QlO^\mWH+cf=un5qmWlp6DoWdDeML(dJTM5s#]9G-M2MOci5UpmQCF5Dnt91"#P9.YF#5q6[QJZ*25b?Se(^=ft[QC
%k2B%hs0n=@P_%bUrH_WHW`A7jkc^?8>5h6^a"_c"^KfVoeQmn+lh,s+rtZ"'*:pDof*hM;T;eR"ag.YQ9"nP+WS%GN!s@u)Fq"N-
%+"csA97InYK!aW:Ze$g21KaPKp[BZJf_mDanQP;q/)Y=D"d98lbEEgG\=C[%G]'1^IJmoY>,h1$@u&T0ZefcR8l8+C%E;jS;?je3
%?Am)kGH6^<41=%LiZ\8OfTrN9$1<cq[SuQU`=@fsDREdIK.<Gs`X.p)2tY7!YM8>bJ+XG<rU2msR,E.mn^o?U<b)$O<j*61c6lt*
%ZU.s!f/eP*TmeMo>1*GhTutW+gOZ)C40<+N8J,+-<j>PJhse&+H0J6N]b*p3]$4oR+o8QDUAlNt+BE<&9?gqX&qdHYm21bhUEKH#
%9hTmU;-\/AlaAqLBK)94Vi333`>6h2;g[o^MZ`2CAV^50Z7h\q*"PRXZ=g6C'JFX1Y`('.B&76:m&o(q2EIra#ZLPC=@0+k'E-t3
%CEC:;(K5Qm1s7OH@)g611ZG0:idDB)CoChVQhG@JfQ$RK]!6XZeh*2&oiej)\J3i_&%`=>3a6Fu<pUh!<u-WcVI$B*d!V>nk_&('
%S[EdM<3.0B>J5?\:UtbrUldhV27SdSm:Im)Xqn@WG.XpoL'K_V[KabhIX$YYaOcJ/AE=#fb5q5qAV/(eTN=Nl`3u_]<U1a:L[hu$
%&@O-!H)Fg@N-%,S&?2O9UK`XBJ&T]7o)I""*`_Ol`@`9]]3-c;;5JE6_<6P3C;#2qX;e^D[Y)ne1$Z]N5FJ]60OJ3Dr'3iT$`jr?
%AgW^JdMpQQ0BnH_Y?h`"j0[N0b/2V'f^6#j4&i@(@RU#(U%Y1X<gCsPihq"gLnskHkk=i2S&WO#6Z()`a*7fdd3`]hpD^aQOoij1
%Cm7/o=RY)qf4uu7/nVfn+.uUT@D/4=][@/+XSH).h84Sq06mOG'l?7PUNu`>+XC4%".$(<rs$jpY.e80rN<=7Fkc@9+lb:Rq.nsJ
%jC4nD9]NV%d(ZoIPY8LQ>GO8C>/R&===h4:o]HIcYPi"=5Abb&KbTLg8nT'=Z`i$ea[lld,3cFooS5f0s0^HF4acFl%*o6Hrl(ZW
%rI[9$]k8e_rN,a`X<%$=Gu,Q\NA^V)VcF?a?O9%1CGbo^*31s`#@]bs)#driQ@'e:2`S6_o%i6AL6+Io\=?oGIcs,CpS4)Nk@Q/G
%Wc_[,.%J3A'_1*hqpsfn9<s65U\XD@["2+gJA5q#>&:rq5."sp9P:m4?De-89ZF+(;)F$alQePf`CdOD*MEGQhE+:S'K#(`/b;?I
%s(F^9#*>oJT_:U@D[3M%#lfA'7eMnH=R,YQkn6fm7b9#9Z\1f72N%>\k-G4RINW=BEpm1thQtpKUOn_ZSDLIE"8At5knVs]#>SS&
%S<8Oerm`Rb\D@/EY1j%mS'OY)d-)f,p"(?_k>sGVm.3kDFJ=sah__@]#Os;$%:*jQP,Oo9`E)Q=?hN"PP>H$W1k44fR'EDRNaJp#
%;LLgd1mm7fgOKg:m:O^4mFR7L[suXuK_&O]$@8n6(V"l\ke7\6mb'ND,DPDLG)tMg;4XE[.>Fohhp:oss&2=og<$$&U'ak_)tc2r
%6fUIKJ#]NA9uU/XHoFW1AI7oZ%QiLXCY!6KbDb(\m1l"):^V^"Z7k#2F0]n6/Q1U._A^[;=TTLO^el(p*kl=@CiuaBf+S8Pq20Oa
%[9p3i"fJ2+qcfn#rkJqL2]H:[WEf)sjKK7Ir>s.i_>^g>^CU]rE?H8j?WQ:G'5>OPIl!WBh&#nQeIAq`KcBgtc]'+2nT2j=S)9'@
%]q(,;\WSNTrjHgF(Ei/Ec<+T*@70Rak%M1X*[l3HpIVS8W7BHtZi*DX%"4g\#3,:$H9r"jl'4<eklGS]>4%)Wj4blg/+(VPU\$PU
%._Tc]"Z;09:OSN![ISl,LtVV)m=3Y:'"?ToFjIMP5fZa0@I1(!R\s?&q42+(%+\KR#uY'4OtXQH4`@(l?)`!^O,ZHrJ#;qDV<(L>
%pA_QsC0Bn*ci,;/S%l2B,c$[Vq\Fb8h]PKSpXYIl469qbg34pYoK1cfK20YBNP_8No5V#EKkCLmnul[!S`aNf[Hcl#m75n^I\AHF
%j]C/2bDf%Dq`4+hP19Khfmao:OD'C%Qd5>IUUJ-2U\UHU.).+H'Mc"3<,I,oR"!NTlgHLan27R@H)jA*Wc'4DjHt<Lm!ug@lJN!/
%NI2KPNTiHpA7(0DcLt<P@+!YCPl&QjQTW8-5WW]u)osJ6%oN3_WKU]OXhGPCH9KJrs%5/U_)eqbeL#^BqIa+6U.<^V`U9qZ>j%s7
%!o)FRq5"//R)C"sq*iJGc%E-Rl*AtnD*W@;4]T@(b0a$(p*Vq@q"D2ODI6tKL55=eUhpo0h6^D97dc&%nMu&5NL+qr%"5\bd!kkH
%2Qg='bY%UM$9&kV0e=2lLV7A^i*D5F<GW*?*W6MspDXTkRQat^VA?<cI?`R?n5Ts!=/"A!`oYA"`)U:2/2at?4J1FD'74egeb7__
%e&#T>^0-9<:/,>9`FNUTT<.5KkecW,g@C8/=kLH[gf\Lgb,19`48q4'En'\A\`_c.X>dT!Gak4+?(,VQ<]aN5*emg'glAk]<h%ph
%j8-UclB84iAS\:,E\<cMI/G\LG3&c01qCKuK"5.Pk+6KHnoAV+rS$&pUc4=F:PiXGg+27FfNI@I5)EXHcTQNBV,)FW1Vn](4h/'u
%+(pe8?]R8#DW,2Ml(r@*]$O$_-??HQ]u&9&jT1)ZHkl)<p3O9)Rkp8-YL_#9*\pOIm$"tj6Q!A+aHbHPgZm50jI,B@-Jcf#52J3V
%f>Lm2UTtKXbk]Rpl(bf:L7Q8.Z-n85K'0+$3F>el;qWOD\%%YD(DDYLmd,@22*6(]aB!XDbGUi):Q+=TnHFEm')@=M-Ta0Vk)6*B
%)nTIUh/67Kp$n<h\TZuDQejopGf'\YY:a]V#oH,bT&-QG)s,2n6u$@ShRm0mC<"JA*^mSFhI)2,"Vu5`c>@`"!HVkYC<hK6=f>op
%Ma1g]PF@r0X_-j1s4+:2@XEJ[]<O2=QCeU#?948(\C..q-JQ1-/=fhE(3jQcLAG1nN5LgEounhIj[u00K*J&b3V,#.k8],G<jk/7
%1V/d>0.os5iebi:%\rR1/bMG)?l6((Z6AIn`,];.rE;8*DqXj;g&/PNNF2/ai8AZ0Z+QU!jggYsPj@Na[Bs%]hRt4M7Pfeup+e*;
%#$PRrUFG!jVnf0-LY/UV$)Z^Mg`<(M=7*([IArj^l/UQ?,53e+op.6H-c\!RFE4UmT"A3%+$Z%&l2@mX:AU=cA:_+u\JU$e.[Tu&
%qitK@--Nqggj8kGn'/$`gZp$1/t0>+UO7bl$N1a<'?d//B9l0B1CTJ^@u8Zn4Pq]k[bFS*Eae-IKrF(5>$D(4B4_gFAoRVgS&7l@
%7"'k@93gfjL073GH;fN&SRoH.[/g6.Gr=@(Z7\"9(QZ0Ql/U$+misaJ;0)a1+na19EJ,@-:4#XbddL&`3t/-CWJT2Jp.6?4k"FRZ
%9Wm)ec[+.?e7(6JMie8cgM?&c9h%7S1j<:lOkiXl2P*XjB`Uk,s6/im/%p.rfdUGR2LUX'Pq%K(jn43^kpLRTbLC\"XP^SVDPo*C
%lc5d"GE[Pc?lmk3gtKqr'ui::6=hCSLP<(sa8*Gf=,((gh6kg).0pQEEq^SL(,n;!LMX(ke"f%fY4h\`kf.pu?&R6eM-#f'_eEYe
%SO@5aE\e^.nJZM<J>_G^1MbgYb%pk;IPWoi92-.;#7m$a3dnZiHsAfthC'01rkUT'Z]stMf+CJUq:Xm_021S`F!,i`aHp8j-Gg?c
%;!LKMVC/Mn[m=)m-I[bCf$%O6KAnqj_F\GOT4X8NXc&qY$o=R(_Zk=ca(Ad6]DZosL.o\47.)3]GroOL%L\!&l1boD";GgM$DO@h
%n",7bJ.5h>/C2,t1LO88RebXsEXEA'E!@M85*f;GBgGPD8$f7UCoqkW_8XBua`236CON@iPZQ?+PZIB8e$/5#G?2a?oh@)roXa;q
%Wps/*1NN/q1iN*>G7Id?p*;4:ia[6t4a*<+CYA)Tr3Zs'c;IuV['7DZVm7fbC`.sFI`XJo)#fph%@O%Oktc`7bn';XMI)?5a<E0F
%]1Oa$'o\U)*V-hc<Z[_]Tn^S\#g#MFA['^&^EYfK%QN7aC,GnNk`&#GK%&DN3RK*k2:,4S:'Od7f8S0F"<A_'Oa?=(6[cVf&l/;0
%;<cC<C"VOp0LG$#7=7]8=m9GF2TFEQ6oH)&%jE8=&PAg,Q3LF>Vr7-To_gL!hGF?/Gt/;?'&otL3A#n\22mY3XfMILFVPA!et3'R
%1JH0WcPZ+TZIhatY@q3beGc)#dlq?(+7KImhN$1;kEkq5lW3U'^/B-V,XESC;Z0U*j1We.qG(R0QjA\NG:S["Z7t(Sb4'MYrHIMj
%]2:rLoEB2aDh^fpgh0r.N6"P>+u5)('_`h0@Th6`VEhYeIXd7CJOt741k^!^!Q8R!q=81PO;8YSkau?SU5;7k;D\I"nkf4"HB3MX
%&k$LmqDA!JlMOdE6PuU<l,/:s/T<\Y>4:fJqY505;-7Dr"bp/!?b6EIW$smfZ1JOGQO7rmj-eFdDa3(h<9X#1j4s9aorRkmRJk2/
%H2Y#hHC]DDjm=]FY.:gOgCi!Dbm3S4JFuYG"F2P>=%sbpVR+rJHheS=s5A:]At-c_D</(2KOGX>=fqt[o/&<]N&S=o3]XU6:[Bti
%l_B67`HP*6om/?pc`V.$Egs''fXii_/=''Ae)kt"SZM#;Q9>6\amn,t[13=X/5pl=<G1lX?eKVdTR=8AO_9%r$9XW^L<0*8R92!l
%4INt<V'_O=aK,<L\C<4V40L\eWG-?1,[SChp]^T1f89F=R2X$U[t28j>c><LgflgI!:%5Wm?t(CDS!.(`tRS=_VY8*_;7s44f$>P
%+kZ[+U^+e*_;8GS?i4Wr0ncS"leGN1:BHkVQ\bN%^9TXgglF!?7#+c8K$2=#FS>5Rhf6;Yaj8hg,^?;+WBksj.'i<orFGiFaT2MW
%(_M-1Est`bJ%^<b%jN3oc.'$p='5e`p!3NVI_5K2l2CHf+f?r<@X7?i0'"jM4cVY`^g"AFoCWiCFtbEnG0^ZRe)l<r?@&GrDgSP7
%![TbF^QbojDe8H&;fA1<]n[`Bd:\$e"Xpf[Aj%Ac)3<%6FQ0!ega%G/=1@F%EGI1Q&Fo\h]eRP`<?ThM*!dt)XlMcWjg=dup2Xst
%dC"*O!`JM%O8*JkP:q:IUUA6#GkJ$o?Tj5N1tAGUZ2(HM<0(*(p7$<2%p#8_4[Lq.nRr116Fc;;%Popuk%m4!rN@7\buurMaI,'k
%*F1%f&PV0WAnJE3DtNJnGjt"m482HpHS]`I^C',oicWj!?'#<s]18d;GkAe+;5#T&Esp7Z7]q1M4E<-B50faijGWbnM+%@8Hp(I/
%CYcDAq>4c4C29r+eDKmVo5@d%Np,eD(K2F+DaO!d\5#i\9!Wd8);bR<b7CYk3LdkAION4'[d./:D^?8:Z9FW0CsUo:>)W\uJmsZN
%!JH&i"R+e*+ICcqHh%NqX(&S3bVD:eod-c5XBX?<F&VQ(*>IPEX$]4Q$ZRI@N5JCS0r#ie2J]I<QapBb*U@l#$`:@mhfA;l0qW"B
%VmG%:(iY\/+3O-@<.f40IY:O//cYai&o)u+G=30dZT>A,r:k/<qI73$BYr%Eo)gndlWfsV&!%CUq0Ur_iihO]Y,qW20fmHOPYB^0
%Y'Oalg2kk&OY7eMV_J'GKU5:=Sle+Da;$&aG6sS7qifJ2j&;s*T:6V3WiO1Nc-??%eJB=Y996+]BCc]'k8n9ak2pZ0^k&`p7P@K<
%[c`5`GTcZ8CpKZd*Dat.1AuLf<48Kel^ag+g;W>EDJSR*@;9InU"YC:*c9_kj,(%9_VOFo/^Q8T5*!5-b9[ZLF/o\\cS#Co%dBf[
%$B;,[&3C`/cFLEZ`B:BZ5qeR1+!'f7RqjYDZ\[DkI?R;\"O^%0Afi*:952e5mfVjk/ppooD23QY23l!Uj3(K3M-@O(s.i5JWR&WJ
%d1&)>5P[bL2Y.7kS0,jD[I=rHJ\JGca@j$mOXSgXGa@osq9.>:$j(;nnF'8le,/CCL&BNe@\u$@2FdCpAS7oB(N3(BTsqSp7lgcO
%^b,GmX%PL&[CG@Wj2aN0K_0&J@fCiEYms69/"+.(*pmI%0Yg5Q4,CN`-f4GpHh!''DY/fM?d%kL:KcR,G:`VNrW9_EN.?YK/&8XV
%,5:SG^ct,a=C%AR\&]B<HT=NC)[s'sFh_9s^TnGGJ(s(p6<:AVkp)OFgmkO[X=c*6E\Ip#ZUI*.=Y<tiba7YC&WijSj/V?iB5?b0
%*Ee1o^Kc3@`.(rQca&bd:6_iefF2*7q;\gg%[#5U5-6uG\'?`jn+m$M)8/B%mpoc!QIX=4lMSEU?LAD>RjjB,JhDW%gg>:48[Uak
%HFe6*lfV)aG:,K)a7@t8LtcEeokgO1*?'(+QhF(Sa1fbX(-"5>SLK&*4?k%p8<DO<j5.f+g6-g=H1Mdr$bKaDDL(4ieR"]X=IK\j
%Y")^,Xj)Wfp!gD1n!Jj2kJ:+L]mmG;SNc<ZpRDbl&%m;#]Z`/(kK6Fc<Bkn2?_(!]"cn+U-[>l-C?eQC'S4G1PgNW3XOsL?()W>_
%n//a#X%TFY@uu9W?]U2jNsF!L`C%#<pDE[).92r-:2IkdId_p]hT:'eIFq6LV:ERpM0?B)0d7%T`rkbBA<s+5`lm9sH4tU@Zm6"3
%oZ^kh]<\@?KJN1[oRPhQ*Iu_r"r\EK0mIS3SprI'[VFGXTN%V)nqjSFVTmN,B'ph5#P[6:0(ff`UG$>hI^=Se7!lJ6g;W9R_sC'n
%O6#-N(O\u!dmp1dc#dHDk,kje.!L+aZH3"CT^Z.d@,AjAWo(V[9U*k(:)E^(p/5eok#`=pRKmZ5EKGVQ7QMK0rlOP>"jIrFXXE%I
%*;&A3Zc>pN8(m@V>]+'3Hjh6ZHEOi$4-DdpR6Lkgpb[lB'2sn/HnJ[i@'7@naK<V%l=9+LiquS3D:"N>4MY'Ql![1oQNr*`/:nsb
%l2jSk5+;3.f]8+r'n7+R.?*VQ*Mu#h9?d9@&._QK5;=j5+:;$lBZD`FMRno,3VC/Y$DoN[Q)d+?hA8#0*0%FAgf$3NbAHZ!#%+hA
%rjmZ(iX*]So\OG5^E7kU]0;As>o[h1htL0nPsYS"^K*0Fam"MMKXaVr+-.N9NASbkH?m^%jprLh00>"F%,E9c]s]bnDi\L<QH,2'
%Is*&pp9p!N-j`\n9MN,KL$naocrHKm:2KZ[Q5$HLoP6[6DOigO7M#*j[5M>NDIr+:9n-8*5Kl>lDsuS?7=R2l'8]\7Dt55>VbPY.
%ntZfVD8OO/6Z&D'Y)q0$qXJ!;2qPT.>EN(D)TuFL$L*DleYVqTo%bu)f:u`Q1Ht$<\K"5nbX^CB92KU=Xn6%3INip*>A3.W.L4eb
%k1!@]G+s'.G\\'pE[@eO(r%"tkgUeMIgQ%QMj$<qH;cs*l0ItZ@;;Q^^=nu=*s$^5DEo:T>(aZtne*FA0Q,OX1rjgR#-+h*mSW52
%V:j^J9eX9+jPOaY8;Te3.l?$VAT_7R$06VF;QFCT7l:W-R@C9<W\g'n>%>$_rG:I[V,BK`i5M,_9RVpAYFT$l2f]E6h+U&0Bq+JG
%Q?n8^S)+fZF\G]aKJ]&`RauC.3!(2bW)-Uh\jasaaUum1F(^$'PGrZ!o[n@lL:Y%ZYD)>\MAW;RYaWs^HC@#q[lpe@0#e,rVeZ9P
%aGDqFUG$jpIGT^D^Rbl<eqiJc1[l5c?75+lmC!3s]#;=NaX,_Nccsu%bMY9pAPh`tbDBE6q6W*0(Se1<*tlZj,'e-.1Ze8cep7oK
%U'nmBV`A1Al_\eYOtU0AY83%/c0*l0rY_">1i)pAo;<6-GNLN4emKHSl]]#_B58ZN[gUgV3q#!sUeQ%LS,'@]<gfNCl'c=&*$d]p
%^9-Oi"PFm/bg0SiNu<3ijp"q\G!#R,>-g#[hmSCm+B?r@YQdbe_ePp+Al=P`KpPcrPeZP*SCY/8ZsI+mn>)fh`'O*2[/q\[Sio_*
%dgoBpV,i"EY^\[f*'h>:YcTXJ0ps]h7V_n3WPA*j2"[UT$@<eQ1ds910)%,'4Zc2.:eB#QNdLlem-!&D@jSi":>cROTt&Bb`ZMjE
%ft#DsDAP8*edqGjq+1ln;oLm$0WI)+CWLHiF_lAbkXA4`#hO,"CXiff2a=<Q;ScW_^QSpgq@^+W9?66]jibj*Q7nh'[)R]]r7+p=
%Gh.V[X\0',DJ`YhbjtcbpT+$JQ9N=^>$*c:M<3r!Pi7eDpW(76)H!KD0u;3;gVL#s/j,Ln=.5t#Cd2!?V2ol&WbL5$5P7+j`TO.I
%O,C\PGC&q"X];R%h\EIePK$1c4k8iJS`Xk;q-C7&IVQ=cRfb$R5IN^)([I]`B7A`>Vtu3<MOtkukMEZoN$!Dj[>Y(]_2,4&pSmbJ
%3llP.T'lj[S!gn``U^=Uc0qb>MhU/84-_gPfGWK\MnAM(qojsoaS!I$KtZ#S:b1m;s5EEPoUZC'CYPsUrqI]ZT>&Xjj"llDnbCT\
%WYSrYkP+u>rssj@o@<QN#(n"-D>`uB;a5F"0n'-&N;.1Ve`rTodDQ\V:ogKQDq"2cEg$FGhj68[n]sZ#1F)h:(&W.!2Eni+0ArI6
%qD7L\L_foU)Ss^cdf07;"8nT_iLd'kf-Z^G=nlJ2>E'W*NPFfepbf[AYNJ3&*REc<1fX]3lWa[DbV=EIaB%&6pu_t_3L@KfI[e1r
%7JJ6,)?*TMe":e@!R+9=f7!fUBfE"U5V9C85j*A:Kr&$-SJ9g/1EnV>\">j5l[YkYb](Ale4mY6[W$q#7H:q\T"$)J&O+TF+:9CB
%U[]_'gCQG/2g2Ueh4M!j5Q1YFDQdfg=aSZ=Eu10*+.pa#5J8Zs6CP^UpjY\F,iQjt,N6kiV$.>k*GYb#7Rn$AM)tdulN#gqV+tpa
%!rSl12BH!d'(+MkPE!KZKFKY1k29pl(Y?8j[[+J64A6ht<[KTtq,'^>RS#cXh'R0c0<+k;o6b.%F04me0+4&ue[LH?Aq6ZQh;Y"8
%ofRbVb/DIB=L#mf3(P!8>&T\2p2tca1uL:0oR]Zq[gTfON:k>Cr%\5W\J7mkGMC,GWNj"l.[1u)GZ-P7eE%sU?^&6P-tF`]35>-J
%OQQ4nS\1H<%d<?R4YSLp^%Bmp-q%$Qc\]kNE,\86&I!L=+_BqR]JQF\K,YMhOb6@FHb0S"$VX,=cQC`dX?D?HY9i?lc!?64AnPcP
%4^f@"rubqQ,<e05k2N0-jk'8uAc4V1c^dX8hKCdu?eOf*9Lg)=VIsd9imYO&Dt06L@"t');AYc]l(,E%^VF_EII@\p2HN\),Q$]b
%UH)lUpdBL?ias>t3h+l`O7>Ue5&NWC-W5<$GoNA\nCHSt/+ot<FT/3VT@mCA`Y/S%RJ?.5m:gt93r^0qQKG()o8g:Ygj@jALpN,@
%`l2V8/1u5r3j'fq2WK+,oJUU>>s%JXmYH*aOR)FjPPB!BZ!9aR`D[F_-GI.*\JJU59g-Kt)_;TI/Bm27frNN4G^cAM(,,$hXiAu5
%>M&D)^"-kECTa"aD\pI_ik$^tl1k72hM<8<d^Akt`f?"MGipIEe)'[er4G%ZO'gb?0_ZF!5!LdlgOo?Fr;KgC`_34b8+F`ICFoH]
%=l,0'22g;cbCm>GIpKR/M`:BnC[nn)fiu*NbL]8D)o^[TBIgDF16EHF(n#\258d%'=1j[+cM7?o[o6NO&T$VFL)Ek7$_&C?mc;m=
%i^2[OA9kJj1pYiLGT4ag*?L1SDR\]J`m$u$AG^\$De-&W,=`70#E=k0mcj8_Ka/W(Vs>QPG=V28OjY`grNNfJ7qsEu_<Ye#Au)j'
%Dr<>*aV-fuEmu-LSWG?tUXQX!g$%3'7/'A[pnMRj,Y%aa@V9fIIdpigp$hct1q1*-2nFJ!'h5[Y?;dQqf*??gpc12jH8.HD3I2@G
%7Ri=5`V+!<n`Y,fR;Y7+0VaWFm*fW\,5jJZZFBBY2E@7T*)#(i4cO`F>L-e/Ie#N8>i35S/T8&VA(_ik**X6D\Zq^DR2S/WmA.bI
%Opc&8fCPp;A&X/LX0IGNXf&FjqbD(2eQkh.`ts))/2TP1^:QP"kY6[+]j#<3lY\a<^9fu,4J)'aNlK\B%\C[a[SkT77jbc-IPK86
%+2=qm]T$!aCO5pSmXBYuoh^+.Lf]IS@e-@90ThlMD,!PWZ8f+nc`STqCM@lK-e@qSf#5l094Qt+@Q$)`H*C><.!da2nQ8dm'91dM
%EhYKOI5X+53LcM.X3R>5b0uj@jPn#8ojh[8.47(JN[g7if?5\.B=4_ijDF@"BC\>q,UQm-2sr$)0<6V%%4@K@nYtS:E'C*#]eG^t
%p:F9!_W(C@%d;!5j2TKbeFdsh4B:'ND,8\<St>4Z[RR,A1Y)'gHoA5oD76p?VcRatam$4B>\A@Iq,3VEhoqZdh`'S"e$\:I*+o&L
%m]2cGgfn573H6o;UMk0k1Fqe^AS,5,<G)dgR`1\QB(^>E<%hS(][Ui%B"H7!X2OZ&j%Y.&c+CpRqFE&t]D!?Z]<f%oib[ejSLBM?
%`Y6Z[IPT:k3Q+)?fr;U2bUbD`m*76.26UW`SO.1:YM:"d]su`3ZfQOrT7&<)SB[$MNaLr2`g7?[Amm;TQem-PS(jr-2!7Wa[@"S@
%522KP8KL(?oc>d"A0Q*&PLL8BH?/\XKu51F:8cC#VqXjSal:mnHEt9<W6^N@MP^-Z_o'p8?Pul8g"uSmr8'bAb[6rXhTc3bWqj.&
%gQFKQQ!X%"alnYlU5B+mZb&HeSNc2]][D@-?3:CDiu:pa%Ua*sHCgsnVOuL1dG&(W9uC+jAXfd+^44;GheHlN;j.O%gs"CG<qc6=
%T?ee7Gbo^sptPN+UmTFJ22%:EpEH[+:W0uhCl4]iCfNT95PfE]CsU"nmeL`Y+]D$G6>g*T7caBh=BANV`]CCM`]>U>1=K7>R2Jk;
%g$H40RGXK7jgdlW^!4h>4Yr:)d6>0Lf7hHHOZkrk]$mMP<*d6B(DCEC>&"^E=/[lom<7gNS1aCL;e\1'9W*K^AnUSV?WpfTq-2O2
%oIlOIGQ$7Hl>nYj\&neZh:`Ap';qtj+TJe_gfMN]o)5E<KpgZ6_88NI,S'*TASpD#qUA]I*N*kO@rZ=chHZ;u[DHB*2q_=rcJ<:i
%<mETN(V<-)Crr.b<D0CGkM"A`;gDlPk[.+=]ffWWVrh#4ZDlrRb&hC-pf(#ESW7Q`>+8,8c`V,mQW(HCc1:;Rbf950jUST3Ei[c[
%=IGZ%^8rmS[Vo4?>2/p)`PQG/V;3U*X7L[Ro;cRM-<H8*`oF+bf9]N!IXC[L(<*=X3a]FB9V4J>4f"\tMbao[^H?.\KALBUX6$`F
%\!aYO9WMI=*(i-"4!V%F^:g%"l?5+m&#H\_gt6nUOu%HsS_W@617>a7HV3I)pH(n@q2+3:53's_k>/8@l$R@1oqF-cp=q)Jc9DJd
%h<N0TTsWG=XMl!Q;ep-n^KoT]hSipSDT9j]CN#'op:;&VA_2##m?dM;Vu6,^lV.7sA+k._Gp>I8rOd,j<R,JE#A`_OkoSa<>cs)6
%2NNljDDn+^X34^GHWQc?eE-)^emYs'JF]da\#9/t`HLO,@l``Gd:@Q8qs!b<H"WSb:Nr+?RI&5h8WE1$B,9O>$1mr!S(@D9h(pq"
%]DK0]S_Hg*'GgF`[iXG=)X5N7^#`TJp\@a-FFRf^]!m1@^$QlZD]X30I\AcBYSTum__;<+#sE\r28AT#Y)$_3Gj<VY*5:j4C`^i&
%-Vf]Qjpt*T[sQT+j7p]<in-J%=ZYDHR+aWNlopY/B$.$H-^h$;Kp0]TeUs(Zn`%`k\kTHYSYtS?dt`eXo@\6J#SU!Hl,SRCZV,dq
%jK/<aS3PWk2p^Z6M5eJca-W@f7H/d?>i]ct8f'EfgqSdaCCca>:YRCda0Q/ubLc[ap(_r<bZo"Aa4mZ;D/&fl3`V2IB?+eSf@QkM
%nkK$/3<@%Q/FG-TDGC\%[VqVTF`T'kHLuA6Iedqe1G^D&achqdh8U-bGNJFo`;R'ukhTkjm,e6?W`q*9D3V2]/$#R\`QQg1ULJ.O
%s.H`D\A)B3XdngGg,#SCZG5/5_[tq)%_F2L[l0*Y4o>"Z3@K7Ab3S<BFB*4)Wk+h6bZ*o]`PVqcr`4L#4$2mo]KE9Q8&<0aj5/2%
%h;_/+)1N8(NQ%goq:F)nqFeG+PLn9A[=aZsX'0"W)]dC?]jKW@5.XM%5.;Rl;D5jS^%-349:M9nF/rDMargEOM]Sq5Nh!j:^TK10
%]tW@o_Id:u.[Y&5-eWX;4R],8ZR4@BDQ\o(k#5u>WPuQadFS<Eh0l>lLi:-aDuT^@H99k0NjRgj=`(>hDbf&21M3aF4oQ!$-QDp@
%YrtW>QuN[2b/%o2LUI:6KjUBnS@ZR5qp:$_c$!p]K@g."A,(<&EBdO7401X6i;F_S*B4Sap9.R,ZQ[@beP7u&Cfb-&VeXF]3tU^W
%]D-fF:@)=`eOHW=`5"T<CrC95e+?tV)T"qJK+Ij9Q135FAF-*Z*Q,W4qqb/i^GgME<ZPL`2Ib3/NBV`Ce$,B,(2Jn3X^U+F%A7Yu
%"p7@91gin[DA,)]=(=,!g8l-l([ZRaj-?+Q<i]OWgY6's^%)h3GQW."CQFI(B6IfE*al2WZYhu!-WKEMHAra=I!P8jg**@:R\Anb
%]@Ilam/A:3ZgN.CFSjfC7tt]Eq:2<PiDbiK`C?]VrpHA9YiFbemIeeFde<FeaZs'%k]$9iI6RsSk5_mcE8Bhm'8S9=qn^G=T$L+1
%_OBri[0s#m^:R,dCqF&%XD[sq,-%>cO2&C'-Yus7G.M>:dV5i[Y9-TnhJnKULGl_=3MGTfDZ\+;G<L>"MqXf5;"O9o*Q%X?1`O^1
%;nMj/c%0id%u>VGkj^_s\n`)dA3=e\6+5FOf@nfU^E=SY#b@fMDXb*I+WSR!0:a%e6\"eKGl'q@eGS\]$@(H7^4N)#4E/QWqLT`:
%G*2Hi\4nA\S*9QMS(Jdd+8T'UOmQL1\5d>B6N2F[V<YMq?Y^I-s+XfC^!%shICaX%!#u5)o3]c9bFhH(?8Yr$!>_Z]bpjYIOIFlj
%mFuD&^;?,H@lV+LKRY.UT.K^=J&rdhf:SecOCY32m:N?Mh(J\5NO7X<';i`t1ZL\iTYBF_$$e]_ZQG";CVA+DK+</[q`eKLc`]5*
%%_#!W0=g&fTkE#JIk*JHkjmOm]^PO=%r]AcPF?rN'=mt9U,g5qXhO-!fkk,LIM'eDkZ7:.0_:4GYCB![:D^p_[<Y9U&sBKPkT1oh
%^RsAlGDUg11n<DaS:0]afPuoV0!kS/f*,JA)6r5Un<W+dZbiOQ]@Gr>hJ9)fXOTBs0Jr7ZAH:7f?-N-$1Hhf<BD)1`h>t+!>I0Zb
%rD;_e]^ZY`o9fRhT],e$*SO/!IigT7ImV6cGj>nA6PJc4A>=\H*N,\l@SGM1TCBuG#dM7IM`u#:J%?/^Y1J`7f_<2%*'Zp5GgOcb
%`:i"'>fZ@RY]rge56jAW9.'"ts'RQ>oUTt8`:27'>iDT0'gfB&s89pe;mcm@D`9(<LP^HQl)g//*/*^^WQblsGL6%/]$(GXG_]W\
%:ZF\&s8(nCHN3o`9Fkcu6c^<tHC,Yrkkj41dao]4C\#URqlOES$r&<fi;`3-^fC$;AM<oBq>'LSf-^EA#2$\"T\+Es=#XHenkXLT
%ps4F\O!gdp"[!*91([^/?4k>Q@i,QG!l(-;PF`$H[':/Q^Odb`!&&4!/4fQ-MO"5;%h\S.K:g!bW(_L]i%YI7#Z=7?e+g(;#+>o-
%UA"5^_2iWc+<";H$#$9r0bY=5!_Eq=GVjreDd*%C/A;JIE']]XPCcFlL*4LHL%pg;jfkh:-5%T3&N$G)P.m)5!eXKG:TBfOK-XC*
%I-/PHA?\N+"^DrKq9TI61h$<P31un[s'TDg!X'C?3.aOr1I;e)?JFBD9IIB8DR&\c'\!\?<;7q.%"qZ?EVu\U^aob?+UH3M\])]:
%kIs?_TB,c)GC```3FIOI"\=l:<pL'\Z=HOe?da,88ma<+8jF((1d=c^\6K=W`NN;M+%W8BaqCX(@:;,J5W*L*5a@].%2':=pc3MJ
%Y[kNTH&-rTKRt(7cWDIi8S6SJO=N.!"7WIXa">@TqZn97C`'jdP2$._UJWmtoGuPW%%toONq*o;LkZ(2"i(5W(J,nuJi%pV*.H;F
%^qQBQ((,]PN-WjLh>dU&-%KH03f*=^>2cqUHto#hkJ./=+FE%"[@d)YO!&\%T;?2E!6#"O.1<ne05qfugc$92e-[m"&3qcPZ[eaZ
%mGA/#0Q!]qaHlH5F9[ZsI1I_Li!8j@O;9NY%T6i"%X??lY_!,H#5SB;js+:D//<i-#t?$W:<,?`K[qOcbQ&OaEA7^X!$RI'3_1_0
%Muq3,$hFWs$H?]YJSAk(JS),#^c9%7X7:n^<@D6CTMg^f"^M8bOql"!J-50fhm&@6Lo?h_`3a)Cch!hR?r\V84<adSL,/mN_/Q4P
%(;PJl3%@1%4Br"s,2aBs"ZBbA36m[0#Eh>;?6"NaU^"QB1WBsD9.-<^kMqMPrO(fV42=Y3Es%s=P"cIQUS&El1I)DT(ht+E&rl>u
%i[,0MK[?B&3$?eF<WWhG;'k#-J-?[\*eRfb@k]J=A_1<W%:U]<+XChl3Xb^MYX!m6iPNKP5s@T95Z0ifqi&+M!Z2);,T'@KGfR]@
%[@+>5aFU*_A/M7S?uo.n6GeloY1Eb<#@LM?!i-*h(I=u65l*f22N%,b:_*+)apNUjSe_P6#E*(_(;]_&li?'R2$,9l0[g$Y!2ttT
%<K[[mH8q!%S?s5JJUJ4(]!Mf:>EoD[@Xq?A$Q:*pD4CmQ+KSefcu'_TC)40_P&%,R5Wf()b/_D&J`_]A5^Xp"J0<-rM1&k)i8'0l
%9_oI-#LLC&"6ktB-=$i-iikFbA$IiU1FIZT=!%/>TQWR:UFQ?B@PjO%$+^5@^;i'>&ssTAih;R/J^m#<UCI\XZOR"N%.8IuC"/KJ
%Z!J"LXe@u&D4748AI?A=(]cjE)5+EHJ1Zc%!dPQs='"!.<'8Z*!/$uA#'obB)C8K0.!s2F'QE0g<h?bb#0-^8:prlh4<,+>?4`55
%WZ*e)$nQL.hpnBk?mWb:/?+$&i%RA+D$?"SBpc7=:(.W5PtG.""dN[O&-.-N)[cg=dF8Y:;HZh(crKmtW5"WU66B!Ji8?#a,s[ds
%QA?`XD$"Q[.PsAoBE9Zd[1q2a@N<>kpt*tg>Na*uih1H]01Y'P+j^A&!<n*/"P.2dSV)=8;+m$j!R3o+)lI)ZV'9c.)ULk7#rRiD
%J:K4JbFl"'HoW&XR&//!>+LI_'#HuCa(*[IpoYY5D?s.gpKaOZld0lqCPr`rm6D`sA7PZaOno>=_El!#Fc%$$1,n/AcqanK$B.9A
%JP6;(+:oZ[=iV#"-9!E!A^4.@#D=qB^j0\\aF\TqAApg=ED$R&KFGm)/*q?a>!cufU&$&;i*1Q&cp@=V891X.2>Ut,VLWKe,^*lU
%"MH:d-O-XWLa$<'\b3&.+Y>Z$?&In`>TRS"YnIKWkdtj$6^.?OOp&dm/:`?<,V;uJD(!dB7U940#WMlb5ir4MSd=3]r3/,2AB"Nm
%Lr-"H,^^BA(bhYYfqN`=gqXA.`&^A\RuGMtd)/B5$Y2J*4:AYf'$q^0-3:r@i.N@a;=:3^-Fs7Opc>W%KtYm<TH,m-.j%-U5gY`]
%9S>8BTFTA-!NgnpRfF!\=PSoE:a%s[TP+oLUqgiQTYR3#+NRX0$A"3//Z+Wc[B^7,LD()0!]WJR"^l!H!BCUH,(^4o^D0nuJ!u<P
%3D%;M(b:GnW.P@G!t3oM9-QU5$^%)>m-*2d'8TJE*Y7K=O-I,i(l:@?FOms+"p=NmlNPT.75u77!]Uq^$Z-i/W6dO..":+*lW[.+
%(C*6uDkS/(N7Md'mh!CYQOD0IO<]DHC)P[s,%=)E,?Zb$5_T=Se00fJ/cZ$/fo6!WZ?mBP`t7t.Tf0_I#:shmQa!J,Xc,XT$->Ok
%UP<?_*?a.8G/eP@K#h:e&=3k030>AaPd2P9NNIcY1^8jlAMb!YM/ZR9^MK^"?Aiq/&aGK6-bn(QJ./T9?G#;6YX(f&oU\0E#_A1:
%5_c.jb/t8F@S(_C/Y?TY:c&`gg3:qrqG&LT3'&cN2M!b]r]gd?\*2fGjALPn8DeaE#Z]+6(!p_Cd+".;6.K$%IU]ppJ#/;"XFZTQ
%'`3&'!aXtj$Y>!<"B+^r8-%3L/;OUf;lqSV*=Ui7CEiuY(+N0u&=N]8+UhKo+^C-H!*WVQLa5lo$;d3!2lMKq/V,bD#o(*=H1"BE
%LepXY!G,;3J^3hg6n2Y8!5WcZO?04+&Hc_$XCWK)c3lo]ci=LhO:F3Ma+7RkM=l7k!XjT[=b@2\m4eh\k`tZl/OCS?nIC.9O@#4H
%6:&L3>]\Mlnka[ahN?T9a3jo2hh&C.bdU.\!`F\FY6n/O!k"r4?(/D=jP%Clk&V=\Tm.Ml8+CpkBNif0qTPX%@p/q6Y[en@_$E,4
%KsFIV*C.Fm79pAV:6Q/R&4CI;6Bgh!`.Nj)@UEZ7#TBB'#A+6(k!BI*U'T/8),"0E<I8C("&]SA)eE]84_MOF(hp:<`]BmAM<A,$
%S<N=M&E`l@PY0uJAcfpf5sj84UA&81BO0T%Yj=!aoc[REXD8biF#*H\P>E@O7bRWQgpbc(1$>42B4c40R%a%E?nJ\lKq!dfO,oaa
%^$7=OnS#!MjTmU$,G"jH'RBD>.DdW$elm2%ebW+oNWK`CQk0s"N>s%XYcpk]4b]jsR\''*9RJ')`-Gb7=&EQr#gKHO#(_H%+ZtZZ
%b`$OmGQPKc]I8Ku?:?6sVrT4M7Z+hnN"grg@"LT]&4f9I8aonOkTO\4M?0Do=A!O1G6Z$=+ML>u"$hA\ZL8r7^;<6samAXB1a<RO
%:NlEN[n]-2c"Ibg8"22>.AX3IQ(h5%C.q;p+p?Cn?ooU"-,^JmV$N=jh)]Z9-08$$)e)-u]R4/C6q!E.^uUgShdKq%F$43J4ltIA
%NbXsrJEOQ:.VCY4N(V*68>-b);Jt&q^]^ho81b%3eM4UkME5NQWX<S)(nWU")EG@Zk_K@mE0cX7,NrKbU'h\r?orDQSK@O,G6uie
%He&7KR<Kbc\<n#(J[0<JDMf,BQjI7sKglI8'1dBiGJ_I\1WU2=C1gL7@-kMR`d%j,K8-#N]>)jore3oM_A[#,S<jD\o'2kloV$7<
%dR(%qMDiG_VV-%,#:B.-).FBb.gVj"[IF;A_qq+hLIV586Z\nHR!s(5;.jVd`N+\"le8%aA=+;p(gng/.R%t"0]s7*R[*\$Rqp)]
%3E6D[L^@Q%I<ijVi4MC#R&?`Z/*_DP\O6[6c(\%Ua./b[f)$T%,WVaO1qI573Hg"b>mZMg(ku67)GidMXfKA+":<"\UBX$.RO4_Z
%X0m$M,M2.dC6#=DKi&Im-Hm;&0!*"P]VPf,KRa5008A<rgVMY_c-N'A"SNDL_^uF7"O9b,n#_!Wb^b>'0f+Es+eVnVF3@YWWfi#a
%6mI!cDH'3q$4_VK)mff82Aamu\e'\05cYGngu]1[aapcc(f(NNW=euQ['N4IA'RXK,0H"S`^Yn8Xe8;jjjQBU-\I<Wmc?s!qJ/)L
%5c`s+Va:,:WJ<A^0Tf9Ajq^684@/^qA$Qr\oor0@E""VZFr!SZadj(l0F`e0<ef:DM>!OH[^c'!+R=UkbXt+9I%/oF;4[`E?6O/t
%WTZdIU-1?;L2I.V+mlDRG#"fNBFX1pL9;gK#.+#/7A^Ec$=,:f6"K6.%h^Z]K#1:Nr*5%[D*3@E)Bg*Mc4;i8[#;LPP;0\aVo/.`
%+%.&lJT!*dkHqLMqk`(.f,hq3LeHnbiPr!BUPKQ@Tt+/W%,-8gi2MDm(sm`2#"(t52nG@niOZZ]n=jr^W0M5`.2UB^j2GLM=lM*s
%3/K(7C!AR*Q3^V'/@'p)p^9BBPJ.((%WRp]&3.eOJUH^D#oHO2K7[K7h@)5b]<ku7!s4V`Yj\=<9@uZ"6Ia&k81V=8)-@[kGGbO9
%#LJR82^SE9o+cis@Ab+'Zn-Ea`WZnZM;9$!;Rii@E4\JdjZ7MRADgV]EuUV/2pa6a7@UL7m\">0Le,=k[0Z!W?oA$O5Y(!-EnnO.
%.;S77C5a7*LuIL(h,oGV9jlA#DNGe?dsq^eK"K\jgg)@59L3J3KM^bKg*@DbLh6_+4lmfrH/ao:D+m=#C:i(KNH.t;]K:[DIjX.*
%3X("aF.7_FIENHW#i3.DFHHuA&.1Rs$5l36V1kMJ&[ik%6.V5h2jB\e"cbq-\XH@=V!ihA_CY:m5n5&=*[h9aR4Ag+?u!PUI@F?8
%GhHe,T1d5\&Dl);+fJ9KKW-7VWc(6f'Fn^k909QtJjB`p$u&.n+;o%[q`87XWO3\_DAX#-\F,*Jmk8eq"_E:e$\rIu=hbH?<Z>2B
%)phnQetcCZ>(?FL9`ZG+a`-u[d>kA`qJMeZQ?Z5ER/Zk?lsHg#30o3E?3]+u["u4CL<0s`O>,4=R:G$>nnjp%Kf2ISXPr(Q!.gm+
%&VbkIE#\0epUE_JR1.gA`jCl%m9$__RR!7:%c"ZM(IeQ1!/3+1;aY9+Ws!rML$_W4=UF66Q&<TCdV&8Z/og?<TsP'QNls*iLYKVY
%iGL-&ftA0;1hMbq$\^hN-]%;c[]?&8#U2lc'O4PU_:"Di9g!$=$JfS$8NT(/82L/.3un9Ip<=l$Q(G;G85/^Qgt!uaasKel8-SdT
%'OhpfnSt%(HF-W=_E[0^1.$t5F'E=W\>Fuf"*FuL3ZsMl3X#8A;KS''8t31QitWDG#kf\u#V_-=&/4J;.BM/Ge?c,h/1pG&h:#EM
%(1N^A'TAgp%aXN%_8;/%1J7p1J)I"(PVGa4`A$,AE/Oufed3Zo3+L`9P$tGN/<1k!=EBCLRae_%*dF7YJPl..W)Vbc/6$Dj2O&EG
%g%5Rq.iP&mEHP_fpl+oL.T]CM;'2Qfau?Iu9PA8NauGZt+@thFmf>I2"0$6`hc>d=hVAC7oKpTRF(^(>QD0_JLTIl0+]S?ahm*Fl
%Io4<'mMFWh%esUOg5;Q3l@O%?<61nDK%dmGQAnja^m&V&.Qk(D4K<:/jO6\2GrIt4X;*VJ$_7K\dR$U/D$c^6cU_85XTIY3!ZG!?
%(Q"8uM4i4j7792BiPlKG45g]G\_Z:r1Q)8&/);Bl5$-]X4mf0[87<N;:KnVFm>bi2cYTbT"u(L^A>#BDJp2"0_3OKGPnYG&,43qd
%<j+r1b.pb@i9$W)B&EbOO:'&/K3tG@@PP,@7Hb43RoMji5kT3.]+_nOHT;?=,S*1%[+#:QNZ:-42lVV0Qks?9+_LC!QSA`-i"&8[
%R_[I68DG(OOJ3bsJEd@K'g13@B<!u.lp]K+7S5.r,4W\,:24H$<DbUj6G"?-$"?LVE*=)!lbMUcI87L`J79J[:jl$)O`/G`887L(
%%*FTWmTg)+XOqQ[Ob1,ZpTCcJ\X9E'pE1%4Kakiu=97$)eTh/3i^XAS0$a,Dm24!Y[SS*3;"i_\j_e?9-Roki9@q>(5U^DJ%B'rL
%cN@L*UkW+](NCCj*QZJC91k-QkNqLg":D@CNf$nDWWP[8e9X#37:El<TmD@tPrgBTSQ7oM0$")Xe-#hZELD+?aGY[QQM5*7aO\R=
%fg@9M2+XM`KlFl-$&f1'/F8r]KtG32ML3JLMPU6-i7d<MOf;UJ"LY!7,>W2W+m)hm:-C??3c(atUutW8^/BCHBHmjVlo=CR=gW+j
%Q1KK:\@H<q&:(?.gb'AP)bXqg\$#ja4ApJBNDU7?2%c5!Fb,K)V;&QSXMAd+2fp"t;:qanQV0*JLgIKgIK\ZU0LDF>@mSgf>=KQb
%Q$/V^-tns9\c+!K94bXh*)r)R9s0ie0GB<bg1'$6*q$78ONVD7W9EJ?:HOXr9SDX:cS@FZSOcsTCp^B5&@o_m10"U#oumD8_K3L8
%TYf5%l1Td]M(o0o<OKOtDQ+297CBSXZ6q7L0WlbS=uZYYlV82*DT6@YPRbn15T_t-K#ho2e+JB5mo#.)TF;VS)M96r6@"(g\!<#/
%KiUj?V.0K9_\k!A$oHufLtT]P$F!_@MDApWWppOBpE:Rg#fLOeLIE*9,ll>B(P1ULE+s,JU4nR^I$A[kZRB_#`DK3\8K\A,?-*5*
%Nsfj4/b;5/<k.QsLh?u7/Tn$9Eu=O4.WH.>eV>RBE5*2J!:9tBJrFg?@S@nL9o$R]2*nje-BoUXI$bJOq/_Bs9THcYOK:VnIRI7h
%e:p]1@QB!X5ldTe3P(i3=ObR]^*&)4PRnR3,S54'#h*2H5[YmieZ0VTLi@[j6rj.'Mo1[CL*G*Na:g:^2-iUg/Fhf(jID)cD4Mh^
%<cIX5'b2Ic_Q5YM5tDa&[0mOsEJ>F^eeH!^,W_PS?feoj:kMdE\13U/OHk77'cp8n0sVs_VrXI;-O@F1&G(.6Z,Zb`Q@-Xk'n,(1
%clR`ggQ6+6OFU#.BgdRoZ6DdcP"t[bBcD))H,mt<<o?6keSTO\P^"7\C6V*8QLC2`I?E__fjIrEO+CfP460l.poYf5L-]sL"ssP]
%Tf4o]CZT(!Rc@j":1W7$ZN,LMbZ3%/.s[e+R<&13bW%g'_aNC"5Ci*A;Gt"TVVJe61Zgro1TK.:[0:mT.SOkT3YA$$C>OOrlp),8
%]WRJ$gbKpC]J7.T7F<0U(!NR)3tq,Y2*jKdSQDP^bJ5=OGm@HFN'9B&Yc21r:_Hm$kK<:u15ppe;+aa8#it2+&]g=N7.`cAi.iEr
%KEilX9dJ.Q#\=NA"Lc_ootO"p)R)Q_\G/i)6"gOk9CcO@G@7hhACA#E6F[@!>e8%&4QHm&"[M#^V.\S/N?I#%%'Z=ec?`UALlRpg
%1/*aM>9&TE!'7@)@T6ajPW^U(C0cKFXj9FL0bpNc4=]j_p/F_1<XA$$!c)T][n\om$/1LWTe9^Rk%E+#eBE!*4r;Woq.7?I80C63
%'t41=oBMU]m.@[.(h/kN%CL37+##n4eSl&9(`/\JiQgt,O)-bp3m=qDEU=m_%&,<ZmYB<oJa`:EKVr(."la%D+;f0.*EOR[,s-jZ
%=Oc&Ln6LDLTfO@NVsm(kft.#qW]KcW>j!nUie?Q]WbIZPWjD&b?uGo3-k=g38#5X1"/moiKERM,.#rKDYMb3>U%#S%)^e'g9%q8n
%lX)e3,\5)nU(-NPY7I<VX;2sD%3aN(=a]N9OgqHRZ^"@L\-jP;]3<S0'UD.t0gK::R38BESQ[7CAec7WiR0fZCF;N7Ttt,eL@oq\
%a&+Jg7jZ%Tf1mbgR:1n\6YCN$B\O%`;Rfs?Q&3%qK>;\-n.B2IgZ]ak9"/`p,@tQS$Ss83J<"Q*Ye3:!?N1:qFh#d#<kb+4[lTDH
%,7Hlr5?Gj@R,^u\O5qp-/pt.1_9)AFZ4a,ghbg*d90"C@(2iCD(>,rK&dr+NQ,uis2+IlrYkod$-3uW+-\sY`8SA*=S2EYF3HTL\
%c,5E>$W;).%82bqaB(<B)?jRsN(X4rQ48ts6sqso81l<]#Gr2Nge?dLe*0,N.\W)2Y4!;*gc>3P*PK;<7h##eV"2UN1T<*JZ0G4a
%`>ot*U=32B<"5Zb'ipg7%:Pl,$LT_io9D1)gnUhsKe\-&;lDiQ,;OsE%HXMrAs?5:%3BZ]")Dhc71=\J9^s:IUD#;&$r2(/HIoLD
%Xft]gUff`#*Y2g:g`7!6'l4EKiI\_`q,P;G)dnf2oi;-3#Ji[E3\,B/"]*/>s-V/9i;qL.BSrp_=$rB+!Z>KDeo;$Yh3gA?H=i\i
%hjDEbO0NStYf@4CC_sYsGdNKi!ZeBVg1g\2grPN0o6/2A(`j"+MW6]LF?P9dBT,%!L<$XU]>+R[.PZlI&@:3O!@5nU&VuTQ#\$o/
%6>e3\knb=,.^Ua/V]\MAYf['--5HqB;Yt^Ic<toG^8fS@;MPGYA/nXFrME1<)p**":S=KsJFM&<ZPH861r_)2UKScOaUeY(FK>fm
%OsJ;<UfiUF*Ra1E3\2Fj%><6J]h9eFKTOG$M!rVn&sTp:dB+Z"Q/*Y&a4)nsKVG4[<8?g[6>]%d_f1LM3'>s8kR\*Pa5c#5<h:-X
%S7K(`a&S^=E(?[4Frn1pUGkn@k0s,O7YN4_SrDDT_**)a(1bADG+Su6DcDc?S"A_dao\8>Q?]haE'$6k4=iFCW#J<DZ]Q[XO97r:
%q/1h?c6`mTB_U<]M.+\Y6]^#UgHGt*YTP?u;MrGdW%tWdKp#6=7g!`LX]?WYL)kS>/qP3.;.i2)YDa$1pS^>05lo\@nXMm)7"C[P
%JJulB$OK%4/r?/;E>6F5J`B4V8&gLp:tg.!rt0P2+b2Y1nL]n=Suo=i`q+iDg!^^t7Z7BS[%-GVi/T4;grWg,]XI;O*hh6)kR=MI
%onhV,i;/-2&P(d\/T'9rRHu$Md[&5G2P!"+V1irJopKGgEZ(_0c5!9]M^V?b!p-Y<VrJr5"gRaVXr"&M4?jSehn;\G%;B&uKqTaB
%<25?p#0.?,iHE'TVFC$:=qEC>S`dV0(QY_]LIG%n+(]]$QL#FXO1#;K%!-5.")$g8W^#W(oI'l8>Be(2O3S*b;gOr;DASFM:MEp9
%RlrmXER.D/AtYl722M]q:\:eQ9hjB%3a-Eo/HWagUeOC2T!E;E)<P=XSZq<Ago==Kq?5rMGS'PhW?HLG_KKS&)aVWVh+M_!XEPk9
%QOBTP9aji$3<HpIi8uBV'JgoRF1+>C6C>A6HR-'/\Wsd`OL$=^-j:)K)aO$F*qM.)`ZAkSM3XLaSWoG->t-On'H?U!/0EmqG<7,t
%TTG;`4psD7N6+?WaA?e03Y-kO_1_!XZ&Htc*a&n:4G)pr$3\5g#6`^#.sb9sYYIp?R5K`Q<(gG8k^0,:2+)thrR&-&kAN'#=_^=G
%GB`UaiQ6HM;,#4Ken:YM_;l!7qZmgc]?10'4&j.Na8N!3%^RgQ=2UL/X9bJ6(1)6IRtX]imMh<d&m/N$g&+mdBFA#%d0aL!%9NnA
%$$_,3i<L+<dk]:B'XjDfUrtb&J=cEb!c*oXk'<J/oVpu1/m?%26:sG7R35Ze4L$#F1'c0VMdUeN;Y&0b;;.TW`1h3k/MIK,EfAbR
%=Pl^9&"RE.Bb?ecYWahhaS%Nqj=05k>SMB)Y.2*u+ttK=jr$eR@F7$sjOdtQAW-u*4e&pt$O_>`B2+0!_K6AiRnu\bZnDK/>t'ZN
%_I`fN/R6@HR-s.HU1b>iB?t]fX:^&#ZHUj>#56,t_bpH,A:Whf#t0Z'ib<bb)^BuKc]*kH>oi]$N8f\s/DM)_r',Ms#h$G,Z+c"f
%I5mO3LF4hUd+mL;+C(TVDZ@7o*4/G%j(9g](Cj60L\o<R3`o0XgB/)p@QXdME+N.0m,%EV\"q84::WiK3?$dEEPCKl95C(>WX[>C
%-l"4+[kWMd-fsD+O<m$L&D4K#cSKq,i<AX>Bga8[0`"g29&@)aO:a/Bj?8:=<dhGCM7+i=,*L]r6#&'sA10$73_tLp#i:UgHlJ/W
%hSQdE?6D@3_8W@O$14r[NeegoU3?^]_i87Zn>5PP\8A?Q-I><0m1_&k;AV:hNSD[C;VP9\O:EQ*j<fGFH^0A!h9`<on8'pud3D&6
%m6#`.!M89^Xs>/uXu$.UZ\P/,rPZT!V\C`m&dT;Xq'$7.!u^5eE!jf$;K-2's2lC=[s8)D1B5R`h(lWn,*H0VSJpLXEX2[)@F6gc
%^0js4ElV[d(T))[2&mC3_TPT(0P;jaP>9nCgpe%07-Wg;U$qlP@L3^S_IIbu,-[sqLddi!7Xrp&(.&V41X$hlV5F>c1Sl8M-7eI#
%L9Jb8<NZ++XdE`sZm4$R[pNXKGTi0u;>HS@i_$a%FK]],Y$)&T,3_!fXA271j?/TuBT!WWO^0R%SjT*XXNW6W.3fnl@CpJs`g-$i
%;2LhckJgL8d4o,sI[kA7+QsWSL%cq!ci@L+;E:TUQ0!=%<kK:jlZ"]r.QgJF.<0pY_$b>K6Fds91Us2tdKEE8*J=[K4I^\*[P#tq
%4d1eVW`9m[dZ(e0#Wm^o-Eu_ho^'G8m(dg;3Nsl@nP(':9COYD$^ZRDKZD!P$0>B;Gs7;OlhhXe`^k<:6-I&%"FRb::_fQ-:H;PB
%o[UJ\_Xl\H@$\$=,0,]ePS4)DF0@@VMq#;qiR0-06Si^Pn]4[5O!4#1oBS`REtMr]rMVVZfRt=&V.@%onNJCu6^njEm4?5`G1GTf
%M(8-8UtbC96c@O\$g`T\[s'*jT-iC.)-u"T?H'uHE#WtBc5],R"`ArETYrr^f!GaDq$5620&rpHO$j.m'bi[eG+(q`_B9c%W!hd#
%:BAh9%@>SBI6r::)Y_i<=bQZuQ5O[k(k3]bRIJoHJVS4#PUZOJXZa9<5j.3!)elB'VThM.,W)UBNDf3"=&f'm=#Hk5_i0X>hElE"
%OZ/5!V:pKRFIo;E)uq^c`e1mjeVA8tHVOU4FNUd3b*\-*6#fDXE<"?67>PY2._rj,NO<(2O38H2al+<&SFHe(jm"i_VAWN]8I:[M
%.a.sVLuL!9(siWUUsfJpba,\6KRru\8?)*O%am`'m]pd@)=8+e]M44+ZD'__medNK'3(:!n5(ak+T,ZUPf/M<]"\jcTZJ`V+)e6b
%l]nh-i*3.SHNu7f@I%t((!gJgR.[9U6<0mk(5+:E+fIlC!6CEug4kPOdM>h\X2(Pt<72g?a.(-=U&p;+5j?W`Zor_(8IIuAY>X&[
%+tarLd+qn3`=%rIhSOI:gkJ6'h)^9%*L:YQKW0bJnKoOR/Hc8=`kAA@@Qj3Vh5MKT%#rI)#YM?/#:7[5X/\,k<mofIJH\o&(b\fC
%b%Y%Q_df>F'pN@Il?VrM&VQF15ThVd((TE9K+7kjr,@*+hOB&a8m?TknJj7ZH$E8T251_m+"T&P]J>I)"f/T79sfd#"ECI*a43e/
%SJ6g:Y%Uqafhb0Z(3h`pVlSN&:P;:^W^7iRTb@bCaiYN:j>,NOY_a\^^lnC,ND3;RSd;';@1XjSJN,bB7[FYl3bT`haNtBJR!Z-:
%GnjV2'SOA]s.?h\f9ITfZGgneo+*.1b.u7<F*G/CN_8f?7&_`"s3Efc797sPPaDuK"rb!g*KdV=S"#s;RE>S`#uff5O:ad:Mm2Hh
%4*C4&]XF8Z#l+e+#,:;jD^['.5Z)Va1jXkgnjHIH_,k`O+iMDE8.3.M%a'/(G(%K/1rlPt(Mec%j)._U&H\\%Tt7NpRTfTG:4Xhj
%h@0)R3S'*"RUg%be=V/QlsebdH\"s3=n!L=r8mOE9o&GpcT1a;%Qm:-9H=ApYF5(9QJUc1FhLMUi%MdgbMrb6_3k*(()M;Gd";A7
%@SGh-q-'V!JHNEcMD!\(KO2.1Dd#XMO'<3hcF4KK7Qb>7h\BAr._Yfd#0\!73^Xa,]>"L6a0@aMKL02`3\ITuU:?bt>nc<6e.r4B
%_&H_ejNa'T06RKWo4VqrXhtIOn(Fsl=<9e1pVe?1e#,,r.mce2*eY:59S=ZoKhtIp5#G:Lr^?m,),_])E_t,^o]*,8f))[']>o]M
%nj!GjOgFP1#U*O%hBb=`>64fK:Xp&$e==o@73U`n$NpFibl`!!qb5QqI2%qd*u')_'M)HkjGG1T:'R8n`B#Z]]$d7GHC1ohG`8;/
%1=YWe`1><n)pL<pEZ2$I;Er<J?pdDDnmm>>+@Q!0bX+kYM1qkO^cLcW3Tf2XA#SM0Vp4dY?mWjEE%u.l`T7BqOYD>V([9t[I";_[
%-.S*r?]U84H/cQ^bC).8Aa#/-UL'0CUrN*LdA_uc&ogH6$KM'X[7t)p0]1_;-,Ju"RS@BW>!sY>2hABig+[HieIB"lL3ChapDWl:
%D+_XKB*l1:5q\a)$?uU,JV]b"7MFH`Zs,d(>T>uBL=TV5B8KsFJ97RY*q4nJ)Ch7Y4ZBdA,#Wd%+LD.mgMpBcHNlg!@3Kr;Kkb3H
%ei._Jeeq5e%LA\k7U_2bTm=&eVm)A>3,JA9SY^sXCA].&(.KH@CZC+Pn$P!hCJYYC!qR-`i#n&#(*=JjOD6CMp(*5!F8Ln&r3]9F
%RF9S:BZ,a$8f\u0]W%b)7![&g(PQ_><+pFF>FR+01GhW6$6U^_6QL3WroVlMIRS6p0hNGt'QI*/:1?1)Ko)3l\F:E"Q#noUF<Yb.
%hB*si0Ug&Dnrk5X1p<hidYMq[Leqc,BH!BXlGl,uY+&#c8qu*8\6*_h.#tbDZ.=G^--(([p<<0R,6iVe.)VFM:1Y+'N]]l@",)P)
%KpK\SG1WNSKlf8LBS<"qWX%@:aqQ"lf(CN=Tp7C.BOMA"gFol\Ur$Lk,.)7d=s<;&WB4m4c>G!c4$GEq3a:\AaEdq85aP`9JG`a$
%NO%;Hg>ge_&JVMlh6Df>a2p*2Tg9a+)d4_L\guX!:cF+sV4=(CFHc7W+(`H*kUpb^<959Z@jn]InI:<[EE>hJkmX#ogK.om/U4.g
%l*,X%P&R'"ZGEE"-=1iE6a$;1n'>(i!=m/]Xa*_I(rhK,6k.JQGO+U9?QNOaNuBhg,6U57a<:3AccjD,6ZlnO!#42H2m=t>L6h)-
%grjKZe)#6,-Iu7-DJ*sKAA0-j="e;B:rk+\c",ht9%E1Le4d9(:oP)6"$B8#lDYRBcnl6eSc[R[$u1,+AB8_4oMgd24j&Nk!bf[P
%*pL+"h3Bc-6IV'f=4MPjgG\=QrP;\kT-#d:3b;7/+j+dS1keX/C3r&SS!`0'7]`RN2)VS1i51d-C%VD455f"h<Ks@3omb">?;*:2
%/?4W.n"&=82pq#KgTiLQmK)k9.,Ru5L?0)c^b":Ift>0(EuA\hCbXD7;"JYBjTpW8Sq)<nGP<!^c^WdXdY<E;$.&E0Duuf#pYC=\
%(/Au#EAn]'QdQD`ct/=F>mM/k2C]7j@\OHCXoPM^idFsA@0804`R>aS=T<C>nUYPb[ajpQ;>cO+di&k'CLT9Eedhka\H:r&OUi:e
%]o[Y%;F'ScdShYFLZn8iKgJp5ad[V.P.h@pS%;/m.#kY6E0R`N?k:K"TWq+3/2lUFnH)M<p@E$$V#p0=Z;:VFN6k^94S2*E'GSs)
%l)JutW_@ur>0;7q+q<mspT^,fot'J\a#?-6?_>s6"6b`M2h;h]cg8-8.!)]?4(\bh4Oh+e?*`%/]7Xt\iHD<[q(B3Z7%*?ARnD$2
%,?LM\]sDm1+I>puN&nu4_IDOGo9l95nBDjNr%*PnYU_Z9EQPp<M`TPtL5PL?8M,LS<#a:\b,(C^5FGB8[?77^fR3)5APr>#?#Cgl
%Te@*\2/eRlGX`6NIi.c-ZNIZ.HYArIHHI>D,N&p&g"o;7$f)C/XR0B!"R&QG<eqR*X9@PQM(@I4PP,Ea.b>k*\4jcCTs`h*d3q)1
%9]EeXJ^I'uSHi#EO4/%AWG!(*n.\(J?C__1NlH,`gGGj#BE^am#lf=\++LtW(8,>+)pe7JD?fV>-6`"I63"aAmDpO_#+>HmcSra"
%1P/cr"Y(sA8)f6lHJGg9k`HBOCe=dQW&1Ztoif1/PSoc!6a'OdAE2UHZ(KY=Q24cTf5nf\b.`>-NE2`;0D2+#(D1A*)]KPX]_kee
%nr\+29uV_FomP+PgEH).PYc<IX->cac#%>h/I%%"96-)L0eCE83Z?k.Csu`@hV2(E`C;U=6EFclT4)Nm3U_4<fsN8BS8<+',.2??
%lTj-5\Ro&aR0^?#YV2Y/<sA+.&XhHfOp(1q,T%([<D<i9!JJ<g4e'q*LD%iU6FZA3bhP%X'rs[[SoD78r))C3;QVqCg2Peh5PK+d
%238dO]$!om@P*c=KPi62d$L[-fs_28I2p/D:hBXni">14<+%;XRP,$O(]m)Y<[6)GZhU;LZAm>FM1mXa0rOY2BQ5f*38t!q%Q=Ws
%W*s\'pqX]\,[W-Y3]VUjd>S-nNaZlDqC+nXFfVdO8=.>dd^>I?4M,$OffV'qA?UVNg`".1<UgM9,[?a=]8X+Tl]TOC/iS?pUnB7G
%anSW908>1XJ8=AEV@1]uJ?U+d>i)k>h"7(LT89\skHi'FilU!fjt?aXi:BG`E>VF+n_F9e-llV<S_9e_4[?N#C8tkt4ZCL=Z.Wn#
%Xttk$aPJ9=0<.beL$%pZ##5V3^d@[70I&3;OU,B449a%kq;.7-lkpr!4rfRq3/iq]=1EcI*WPHuIX#&6E1q";%m`dI?#hql@I"Cj
%R>=f.UdYQ_1PCBjaFc2ndOLeib8W2_QYDTu?6!c[+\L:3BtUhA+B$J->MAhER04@t31Nt8R:qAr_r7u'cg8*<^fR<W@@F4!:c^F&
%Ifhs[5(Q;O't?b78gq)(j+7JTH6g1g7Md)("Nr(%W),3:>N2k,-`L_%]OjK@nNJ4[YWWNZpMDIFNuLtK;%\BT_aL-]c%*N$baKm$
%'lW>YA;K);Op)M?Pc=6,Fc4t(BS6@RK*s>cLh@:<Re[5/j^.B6iAReNQ6jZB#)PT#:r5@^F8b].IJ0K@'dR?0[=Eh`HtgDVkq\)f
%GL1ls>mbGQCIGg;K39SK#=W#'YF<cBr_c,k6&fn#n@'&ZZSCni+(,SbGUZP4N1*A2QtU_nr+H,9?l&P1PWsOg5hrBGi8jjkd93r3
%nh<.?YYQ$*2FFD4'13$b?!\;4_TYht@&^Vl*-j-59J]l1@g]onNrg:LGChgZn)>DI8#YOLll>+BMHbHkit(#ZZiZXY-bc(LR0'c#
%U?k:519c"=9RsQdj#WN;rM^@-Km`^T;790n1/J=#1X:j(6D\uX0n?22!XmlU4K8LMAgMtQBA8_@TUc2;Cn..U:^RVk_T%"*creFW
%1t.Q1+J]RB75>uPU)dZC*Y1t-P(X8U>/i.O\HY.b!drY23'jea\"?jad9sU8PUIgM5!"lqY9JFCF.5BX5uDHfd-?8GmI(sKQ?Bjd
%23@>rBc5ba9QuN(DI`!]Z`-b5enMeQdWhaW/UqZ=rjl*l`,XCS!4+MMT[umW7b.cj[M7R6':kCrD?]5uIicQ?d1bX+*!K0?7@MeE
%5_3tKgl;s553585'l5jua60,k&jeOS7WGd3YVL%l.5t%:Kh"\)7\UeJQhHRW,i/f'r@A6JYRWF?l\#ao.'gZ#F!X.V3<>kFg#&e8
%jAId9gKBITDJ=7h=3beO7=s]+Dr^JC7OlAB\RB]\ZQ2aC2HLq#FDX,rlBQfZPQK=+`M>7&6<t^UlL\D:<gcp+dMhe:fC8/ZU/4Bh
%>JOtdfl/9fI%ZfECO4iAJdNY&*@rqV=eu)1ae/N0^o!8!f*$2Cl:^Bjr%tcN`$HU2U(n$9#sWFjni#)=CY`\_Q&8>Xq]g3:J4-^I
%,8&9>[h[uHFu*Z_*VG_q'_ck]WNdR6-I(-urpXBJbBJ/Un]Lf2hAp>T&QSE)Mhc0Y__o_ZJILFqFU</EI]:))h&tPEI3@rr*2=]9
%LlbjgnY>6[>]8&!(Q`jpqMZQ3;5&gV"rDuqi-'1qEtiK+]^GG?KSZo&R-,/#L[&Fg%pFeg7-6.bX>(GqP_2VX6`CUt<Obn#EWtrs
%lV=Fq&`1Q*Jc^b3P`##M(=<9#;eUV@bo&d,U`l2QL9:O_AZFR@XsKCR?QRRLT0H;`dMG-aJGQAr_;L7^njl#r4`\1;CCTNW6;lgo
%m50Fq?D<F?CnYp)b"JH3dXC;/!CZ!bh97<A%!TZqdsNst$#Op*m@/GN4,mVu@^2Pp[4fL'FOpb'9gSP=IY`?7de;d;5C>E;ft(pX
%dS%_SpQ<*CU=?A38D<B&I9:>3F=[EbpW9sekRM+]IE[RLdh@?,XGcZKb4ZH,^L#0LW0sBQ/`H9(g-#h<OcpBhQ*KRhd;qRCKqqho
%.1oPF4*tUBq%K9h8C$k`@/KK0Mf61b4D84j_>@Pujh^Dd$sXC=$0+g@77=$;oI/jjk4NEFmSb00DN&[!i@44>1ngqS]Wt*HR:,ds
%]QYLW:OQTcmB!cAY#nW<8Lrag(0C9G\l<*L,;TFHonF4'Y[%t,R[$`,3i*h-jPp+1V>+`3muu<?B,?PX;C>JZc^\#lR\GLQ<<0u8
%+BK8(Nq)ms=GrOZ0;X=YQLu\[^#9QXRU1IaoWtsPh*bn?oFfaI^\ugQ[&?f1_8\?I/$UMR_Q^)tDebV@2&u(90Gj)djS#X:(,AMH
%KmbuJB-7!1e;9Hi]!/R6RC/nTU.qk19j<]u2i&Vdbli#'[2Q7`iMO#[(BfLl&243<2Ln-:Sgd!L+[Ri_KID@2lII>$PW7L[Re!u`
%*3R#2+eNZ9rO*>@J2r\SX?b'MZj%"rgip9]@'N:3#;T6A\G=18F/^aDjKd2&$mU_l>gRWqRL$6Lb.eTqVJ?i%%'1(86+TZS4\T*+
%`MiCX<%3j(N*BR=f#?&,BO4@XV7$^(B>"gZg([85L<F&R$(WI$W>PmaEj\6d#&6[Qf4.s)!5BH6#75;8)T<6n<B4W!8uIs""dX(5
%p(@js>i[2kr^"k:Bl6f-^J/@.f5D3]YPbr^l5aQmj`l<02&9+h[gft(G*=k3:)VoSQ9>To;>VuN)Sfu210POQX3dA3G,GT^1gIX'
%=Ek+t!hC?XL&_@(9#Ksm"f0Va,nr,UX+R0I!k+(7'r%#'l#W3.c4FI;f:5>4o:2CNZrL).`_4K>*'uEGfrr+^)qFlhV#+=X9,L'A
%m![&!AB>Z*^0J(r\o&Y`/^"4S5U+_9P#*,(9q0ro;Xgc5H=gIL0$#Mr-@JjM&-I2E:e`;bWIE_K9O-:.@n"rW]bJX2-[8S#3!g0Q
%`D>gk&Rb(E\"fo(U]@4V/KG<A,:ik/EIN!Ndm0KiF^uBEOsiuPhKbEgm,AX!*mJp(a"H<'3%.h1apQPOTo09SYdqp:KG>s<G,Gj4
%dadOc>1)@H`-tB)T%B./A.?CD1@:)^V(7Sd_?j=*G+bV8WRLo"B"l1:.Mf:K9m`Vi[QIKuDjIo9<"e7k\\ot.jr<m.gub04ou/`D
%C-%PB[^dl(Cp4IS8':-@`&L0Qj@[DLF$qU<$%kI<70mVq6O8'2KR+3PK^A)nklT5;R#@&S=>CN!_R_'"UnD\G@sF:fUjAt)=[LeD
%JoEL<E'l.nAG<3)4(N&>PH5H95e`.P788XN?@H1oA,nBJ6:uk5h%\@FIB*EGGNKN0b5@F28`N^$5DSY/SAg+/^[)R?iE$R'5[q)6
%?O:1maQ+6(-"qN2+/"::0as**YU#EBYgi5GBB"JC0"X^+^IMg6=u_`*/e`/R!D2DqfMM5H.^e_+A^?dC5$T1>&0BCg:)"<sUkZ[g
%>>uk!ld;^'@FJDY5SPG=mhFFE&qiHi*%j^c%nAF>Y=$O;IW8;-\C:+nlD4i-:a!Mo%//I:9OhgH:KiC9Hl2KEb;bF4@dP-6c:XKB
%6-URglHu3%@h:.Jjh^('UtXhUDn[!]-:K74S!t)nlo;^YGhJJ6^cHf+7doJXVun>092CqFA"pYk!LlS=N"d36[T^.nKr>5bjkJCK
%Y_4i7F_H!P/J(m!$"p9^b[U1#UWA*%?bnQ\8m8`,YRKNDLXE(]9/LBIZGC?"/2cUuH:Mko)`:ci<90?A!kF/1HL0'YBh%ZG3'CZb
%W)Y-t;`p]:"q`=<I2!B\<ReP^Ae^i&gfb'B%?(-*(LYWCPXEtJW;LVHl$3g2it+g*783grFdW"5!`h,2<ERD_P0*@F_7K*C!8R)]
%.M"`bNEDbp)D*0H&pT#WhPqHh5Utp"+.Y.CBe.;G=BW)ERq@lQZ)&btB8P>S#pgjTi5Jfj5&Rho00G<sL<K,.i&:tkHW@hV\kJS4
%<bB^K\R)2\(BufQ-%^\37m>W%.g[*9L@4C@L"g%TbfOR02lVs5"_8?L\QPe"@[PE@LF?(eaqeHCd4@Aaca-e94%aODZQA2jU>-Pc
%mJ6K#k+dh\Tg9!&/CaBI+m*\Z@95b92^P&On7*l5VJOZ@pok>kY'"o:e#%doMS,$o-5-$jZ9k8:m,ZOG((*<=qSY'(,+uc3*f!E-
%@F)#X"X+s%h`3?B]8$)q6^IF+/_ndDlm0M/^D=@GXsQYZ:t$k&a7N(>20'XpD,:ZTf:'rfo9k5c.+_$"HP:t-[qYe]m<VLA8)aY^
%qV*hP:5PL8clsMHPcM8\_+J(-Wh,e!Ai/t7qJ`cO[nnR\oiB,pMDA5#Yb3qG<\]ZsD?We'S8PXqQ7l_+>@9jdFgSC/SILDGnQ!l9
%'P,8j<Y%:1@2k@t8A*"B[Lq&kK'1&!&g=5'?uF2`?gDoJ-!UY)#$nb;%Knt"KZKZ[kg6mIWCZgGl(^4ST\VM%^l*)W6#/^bgneQY
%CU(F`03)fb_dSb!0!:1S,c%iUk9F)f8EGaA3sq1S-*mW:<a#H?'VY)g>(!1#<QRNM06NA3MHclF^%,"CF$g(o56`ra0.oW<`s@-`
%*'rhi_%!`-(P'HeL6L\eI*T)q2E'?O)#\X?XRlU&*B\.[+5=[6.%<9S!DQI:I7ZF$B4]d#?uXa.-C7)n4"P4j?rS`L#Hlo32F/g5
%7656?qugW)RGebM=1:%P89>A?:"sHN%S@B@Mo2U6&q:CiJeUM%U4-L@VgiH%fh?-dHD@lQ-=A95RBnTrc<[bVk]D<2oR>?)f?Pjs
%_Lf/n;^13poJK]db'G^>?t]9Ae/B)17ETF%)W'sO3APD[B7_6_DfrP\!(=fPgb&g\<7?;+NtnAf8=L<$(f@DE-m>VPKjPLp\[[a:
%BX8HDHPk*+$?9!FR'?__eRMK:*YkMk9HDS#A'cu,?WZ5gr_(.F[W6cJK;<7@OK0E@Glj?9*pUj.el0V(7=*d?jACB7F*+C00m[5E
%iN/B3#2U(FN_qGSBnKLs<%9Fb'h$>n6MIICUq.MlGp1=fUk//$mMRL=K`&peaP?7Q.<.W/XF^*_BIFJ%@9WbSPq")@l\B7Qd":_H
%JSW-I\gVEG!FGfY5BHg:Mp!MFb(/^8dA6Y&'Og9eU5ekR9&/R;RTs?38Xn^T&e(+#Mpe?&Qa^[`,S;W1'SJH,c"5Sb7cb`Wa.b2#
%Z(L_\8\T@JKjjRqj(:qhB@MT:(S+Nr\I/"F'dR7`b<hqEA-]^!Fcmss&LpF5_+.YERY-6(n5K3VQbl.$i_!-a%fKpLh^77j+u+Ht
%F&8_WAAb1,S09X0dV1Re35*><Pf=l?7[Wh4Zikn$NM6JY$p3i\<?[ULCaFedn'NZ?Di'umAB/I;#8r%57QrT1X1P(qRYdcQS?(fk
%c"4AMPuWlZolk4#X(&$6e*R10D"X7DP6["nqoFpNq&FRLOqZ'Do'@uW]KsV2QOfT:]C(n4\15(*ZY)@L_9-p<\IT2n<(aubI4:dr
%P!:JrHa7quI9F\3,EoM.fH;`'n/SP!\7Pq9Q,KF5i_JM'G?-n0a"ACGZ-?TC_7K_W$t?MmgF0*W[=OWuO>;e9;HNV/J>AV\B6i"L
%(\s"Z'I=-;8Mst0Od;nl82/jtSNiTYd1cr7;3_52"c[qBdfjNo:IC;4:s`8'Q*RNF]$Pa?Td/8+AF>eLiA+D>_CaHZSPZ[s+o46*
%gP$a0XtGU<5LfeJ'$_X=.jP,FKW)]8+VZg0XVkQ2L%%V)$L\/'+_lJ$aBZEK61tKZ0lQsBp=PVUA;W!Pi[[]:YCe[]D]-,tKhJtL
%l>O/g.ls_H]:Mj6%S>1`bo.gaE*W2k!0B+.2LLLaDK=iI_s#8TrRm2qW\[]2"<me&4LbFDegS4'.SP\X>f)_,S`1>f'Hc]6HqNXJ
%[[u`gU$^(,L?J_>5W8!=gj\R9^1"I`>b(t4GD8j1)E6rMU,Apm,^q?sX28K3ojR+VN,(E7lp7U([6D8O!PL^G#=`sM=-d\;Ya/t,
%Bk.>5l[AWnF808^S.ZC0BL_(rP-7[kkE#rpb,%q`WE&YD(mm.dL<AnZ4^:d<kW+?>fVE'2.:QU3!=DC@V7FgI0c]kq_YBBZ;1_)^
%4jG_@#mTbcYj49n^D?5qZZ2d@/@ZeO.V?q()j4!q'/9cLqF#3g_3SSX]?,hh?^%!$G+C1lAf3",/)2m-FWj.%U=?S\p*W9Z0KbCo
%1Y],V1d'oD,l>f.f=$oVa148eBt'*8En=#5(WFj]=Sdrm!mDQ\L0]nuLXH:tPiUBui(.&MDkK5M$PS/H.mcapH])sVp>'3Aj6)a$
%Oic^uNh4?%6fMuGhn_;nR/]>Zin7FV\Vo58@.C6.YekHf(0eS5JB4"_%t:Wcl,QUF6\jdd2)+,?0\]UE'm(n@2:.$-7:j)+!I$uB
%ju<lD$52"$_;Man@Z`ph[ld2rFBQl-PPGV!?pj=YAFc@RkG'L#"+3AZ\hMf6NXbFreQ2aW`7GY6O@$@3k!X^ud:d7a5Q3<Ue^l:E
%gq*`>7o]3UL\;^GB$J"pMl?pI!GTE`,qRk_f^i%Eam5q<p*1SQ7+4?<:!IEnkDsAN!B$Vp_u=cnDJ?!P71lYL0Z5+XB7J/5Tl>OD
%GZ"gL'2eY@?<QHSdCCo2qpVjfll8q=5i>W<@Euo.F9pTuW;TDd8j\00R<D9SoY"eaN#)ZSag7^OdiB-:J<!8)hb\!Q:ij37M;W]a
%#aB\IF9sJrEa4Y6Eg>5:];gmZ0Wm?>LE="*l3Jbe_6Z,ac!._HH%IX&CacWpA[A3>R1^[0^q$L3`iYc:8O'fWT5EKI8o'I;`$laU
%'o?F;BaT4u+/9E[MB#tgf"37*32h+/WDecIloR'GZXs\P!3O&Zm[51=g8!NbLNZI]L9AQr)d%87d-3-1N9&p(+g^4n,_d>DTA%m,
%R>B!-Ps+V@+lE(8:3i+q!gGRJ9VF*+48Ght'oEDD4PX0;m(N%qnJ2N>^3:;.kY<[S\BD'IL;c0qZ+2aDOK"tJLC5*7eM`0/!r2cA
%518ca:MBMJJ9auf]:\f@9s=7CqG]@.TB2<H9UXI5Pu^X%JFt$ABA'Q-FdiubJ7/;[Xra=<o4'tSXgR,QiX@YE@d;S5.5/!pKf95<
%_^2a=L9]]?'''$pKeDj3RC<>[@ba$2[X/iVZ>t.2C+f[gJ#rd8Z7B.BE:l1ho%7JSBWSFG4VWZSTS6(]^0\gC>O^+f7^+]\B'HaW
%eVaXibr53'BLtc$-%K5!gaEo69,Y2J)$E/NW\h?'lf\6WSQe_lV@2iZ0;]n^0T4,L4iR7#,\^L7"n;@liRr0%[7pt`7Cu28+EYEA
%dFKgZ'WBc7]^<]fXe%]BYst0AO.0+j3ZQW(]qe^GpSB+$43jpoJj5B1]ARhu5\gKc8mk(dUL?kr@8(W7qqW_i.+dEE`K=C(FB$FZ
%+-kYO)A_Ro%J`PWnSu_rGb94+m!%2J`g&_I86!iHEi%9G*_)^B).hn`,R^_tqD/(!1u>L8BG,#0$)4c`-DtVg2i6_R<pJOZ/r.!7
%eUBeO`)LkoOZ*Xgd>M!_$*@B4X?7'0Fki`OL#TnK3d;(S?IN'oC-:PHQ/.\KL9"pqeFY;WF")%>He#M\K_/sAf,FH_3.NbM*;1QI
%"CstR?aL)XUDHjM'mPu*<k#5VXF-Vb1,Ke1b:Qb$h^//PO,DP=FD=4V\Um3M!LNbQcf4;#Q)Si"F:!tFcXc[Ab%qmCDn7=:DXbOe
%;r?jqe9=397Tj9j+]itBKJ!H!!<\Gg(!2b/Td0GC!*6O8A)\)T'5LTEflOaMnN4HWeoK:%("Y^9&W.o<BCSgONqn"#b=[>X"SlUT
%a&2V.aKo#NP"!^A%E71iPj0$J^1l"^#j<T&]7g*EK'POnl]5AXeb`5n0%FO!PjC"X$lVa!^,<:B&N[MJfU"!7XrZr/j'$10b8XG2
%.:1]GlgMA8O*UP=j3$pr??PX5W'bhkXE#a"4*[(]<dc;_(9>;X"J0,%puHaT2eH6U)7k)jH@2&a;SZn>jScYIVZoQu-$kAXeNQ^q
%Y"T2rbOt,"4phMk.#l7lWf]38JaL89)HITc'_<7X-45HMYGEJl.%W2U&(LAl7?X0O`(9:6?-#T)`j_a9WE3t4?'JYeDn"E6JiBOV
%8kl/X<Mf!>%<#",%`T_XfZjft@)=j`<B4+oUgcelb,\-Q?f=hCdb!*GC^](3m"JQO11m(EY#X[ZQ$P.^CCU9ulI>mtZOF3,-f.8#
%`hS\rfI_`C-S51@f0dF(_N>2!<Xn6'HV+gVQb;U73%Pe8DmNb%lF#7\d<no04"dWk[p,.h]g0O[ZrFaBf54^Q'P5qbpR<JJ_1M;;
%Xfo&A8LWi'\$8&I+fY@ONK&@'?sQQBKO-h`XIMr11Ws=@o25IJA7g!JT%&7r!8Y-@5";j%3T*psXL'En]"o!oJ*C?YQ2ih2Wn:u[
%'CuHq<0fkAZH*,NOa!=hX\R,A4(hf`f"LO8MVm>;jUK`JKP!C!,f@b)%#oBNm<2.B%eO814O]1D9OW-q;^NMH*88T,"Nb3N\/e:d
%WmN5gV5-;;EC\i$h90DIL3^t7S5t:''*<T`:HRW79UA05ICfjd;u;<6.OX$:VH<jdoH/bMYX.HjoZu@PX:Y]"_(lN&PV<hHS$cT^
%eN@'(.ni83*qr3X1GGUqmc9Z/qqDF?It8B$D)A*!Xi(WmbaKkD:')CKDp9L[Ht^KMRRASikI(?pn;=Yn-kPfY)Yo#^UF?f]r=4:4
%M:TmF`XFL(A(Kg&.Au7'3;klu8jNb`fP5;o!(=)lFsaIkG]T[]A:jr)Y`.$^ZYTgA9=leW[M^CQ,mC]#kZ2BokN4U[Q=u2XPJP>K
%[o_lD`:9LRe2q[YR^"lL\F)DHmDYMl%FE&W3l3-t$u#'i3XP(7g^Zod/W,jKHa)@q,sOm<LU?e[/Te3>K&EoRN'M"]UiO2s+7(SZ
%b21PFeUX=MSYgj;3qaOkhg]NHQ[.1GKgT<8=Dlbc%U("I1j`<)&qWOKZ/o;Dn1%$cdNRVDA3i^8j;l:J8Mg-A)KD0Z:G8'1i0i0-
%,^i@j%sZ2U/I!?"o&nkC3J8I%@lZ@3Ao<P4/tgF<W2Ag3%T2PC7>e#Ojo*0mgac?),;bIRFnr#b9kso>ROX"Ci=*-,];6*s[CLpV
%DC1\\j9IJUOu=UG=r="-pr]B#?=8[\o-Y6CN;?(<:8(dal6<r)[t:mImr'pXjEOYd4G>Gb3&O$Wpu>[>)>t\H!iZ87$Bm,r6>TZQ
%;u(KA8us+OqZtot501%=5u*Wrd0eR4=[4"hb3,YT;;dhG[/a?o+>^G]]OY;J7la=&ifK=hKAAmBXUft)%OF1Q9^#]&ntq*JFM>h]
%#<]aQ)h]nB,hCl-K].Ebb,!6&SL4V'TC&n[\OH^N^"E@fNO1W9Og\e'`C8jr^D.c*MUR/Q,0uYQCVrM.La19J9$FF&&t$?@0aN%/
%,%D60!9AY\)thL:CCi//>l8;BD$SICkZK#RO*C[):i&U7)GP0Jh0HqoPCA.[o')nPD:CC0,kh_'Zj?Tk[H-k+jKjA:jhQ#NiSkD1
%IB@(4TtVcR##V>r*`g_;YtT_Z*ViM#05Y*%iincG3Cn'WWHMP_7_5>c:nnk/7P0qJ*eooF6X32tL3k&](W*e>Q^`LOkX@G0nR*4T
%').gTJHjn=H[gFtfR#sS-Cr^kl1QFJ6nUhXLB_H`An,^ZE32pdRPKR?Tfih>Ggn9I;*0Uc<"hn_l"=%Y>KDP0M+%G:^c5*sFcj%u
%#Yt68=iW3j4X))C#_0Y^**2X*p-(usO>\;!IL8,eqfs1SlM-f[0*/m@JB=)>1@4-$FO8FKl0Y5B(fR.t./5J^6Z'^gLJb$q!.7(f
%UPDGRlpO"1X5inr.qG:YMA8k*dmRChO_o`>4bn&c9A[TbZ9A$'V][.Kfe"Q;gI+[p7'4UD]6oU7j3,TM8Hb7=9^@\dig&;$#n97*
%VNWWj:?Jt&kLemF7#:@'05bi\dLOXFECf?1"FPUP^>Hl3TQu.7L7iqZNr,@:22`j5p!>D>S-!qA8b*q'Y;!=Vd'W?-@TU!:XH2'C
%0n4)*6u&t)%KLtM$DH,!Z$'mu)i`8X79%]bP%GF;1paP])[Yf#T]-S6`GkXrQeQ0?gV)=2ALgM#*KiEa.gaYqi6h='lde#PjL+9@
%KoE=[W.u:hh2XZUXl.A-<@HNX6)Ys/R[PpF+[/6`E7E0KDm/N$44X@p$s/lfPTBL!L_/CAd&FoX!hcV^)FXKo?'CV0g,kTQE3Wi^
%MQ3O`4U\jgLPt4%_\<kYQN![9oAjn<lW,"m;;VC&D67nN#:c.;59287-C]97r1TOLr4QCYLV@Fpl\eM]-".0)0kn3[PD"sng9Tl'
%>.*hb"IhNafjaRB+<f/^F#8h]`7eZGm)A;mF&M@KY3ePcgf`.'g2-*Y&T3Ti:5#3!PGFtC)M>49?ImH\8A3]UL$o'0%PYosCVgGR
%ZU5XS(u()+*sVhoQq+Z@^pq-2oZ#G+j$VM`@#8Q,qEmcoma.c604jU=6T],bMNTe82:.^P&gtU`.+UkQm`EPC^(ATN0&u*''r!!M
%#@0.Ng/0j96>p^8e].>q+ot39q6h;\I&A*UHgLGTDAtplDeA0a)Bmn9bja\:3]*m]!aYWLES^\t;*NE$(?j,\&K()*(0Rt:Fc>C^
%TbWi!+G?3\6^1g*^2=-bGaHhp$7/uXj.W0.4JHqR<*^b"UhtF3AoV1B!n6`$6C/n'p9dBacMG'gO4sD<4V@8Rj%SPNqa_Qok0]Bd
%6^(d_D5TmGF>Ao1(V9-J3#-/m#*%,S[6(4,L(_*)lVoUt/066EH0MY0-YKX)cSo/Kn5OD.Q54F?e8,3ePi+[X"j8n'H?*F1<-e^Y
%Cqa+Wq\V&nDHBKS?J%toDKiub+bF^hX-qYA2pE%hY12")VMQ#!E:W5ngnUtN0Q5&9(27=NM\-/N@c+/m]SQ<\R6HWXJFh#PQ0eKP
%MtkmN@=ikKYB:Z$/X9LsoG@mUM+BrR^_.2Q:?-`pC]KM1]OYcFUUa5s#?s)Ejc5,o,lMh%Ku[2-]^8OKKY\V.=pUAMQN^S3X09<M
%CX%6_.p1>nD0#JBA`1)+H\h.@o:R6-jIRGmc%mapSebN]q)oWG+/:#,.e\L==3I'ZlKM*H%Gm`oZ8JmqPAg0Vfdjl\UD-eTG(N';
%VNKV#i]R#8V\`$*/csDg^4pu2N7nSe+8<TbF;7BYf2\22[dHC^ZO7qh"LYF*>)[d$en["L%_\=GXSRBoIdNbn-^9?C()4Lu4oK\q
%9WjeH4\b6=0<Y2F*,rR<4E#ROg4V68m[!L77q&]dgaYG?FU9>P?&8j6G'LhoiZ6Ir`e\V7%/B"E5IuC.@V1p<p9BJgBqUt@_1X6H
%[[k!+/16eRdljY3$@kHaCQ?Rd:58s.UeoT56.6imZ)se/+a./2"uBOe>eA@f;]t'H'*nG2I`e=PF'!IqMnHK4C$g&81juBY7LA'C
%NAhiLZ;!V?BXpEQf.`>Wgc4RT;ee)`iR.%m8\5kdEgN:taIbjb2jbka'[71iS+m'"hVldE5h+8[k"@a7S>qmF_3Gh2H`H5U=^=F/
%%MhTds5gNt2!1O_SamI)k4>*i5]Pks$6Z?R?][oZOr48Pj+Sh\Usg8\`_m&8!]b;IUL.Lp8)4CD_%8]>$uk2_F:P$sFE6)RBJIL"
%Vc-Un4s(6q-akY.8Qri</8`*$X\:dd+JT.<UW!brffM$hq:Zugg,,Z9f&![t0jKmZQ'S>=Z`rl=Qu[dE[BjZ+Iicmj+$NL*f@%b9
%as6QJ;*NsZ!:]Y@c@_raNTTh0Mh60eUu,g3rb(8Ckmg01dS(8$if`SlD:pFF7@'pEgJ8PoaPN+)23SHuB4rV/<+<[1A[@=Z'E[Bm
%0Hqdb;]\!Q/`S==UB[!GO!NfLQ&)ea'\s\l>KJd6=?2^iI'1cW6XZWAGO!(A!pQDCi@1QQEo/&#o]U@PmVW5[975,oTBL:_c!^o!
%pJjp%E6Z'627clpiF<&5D-u7q-7dD%l7)1DA>i,Kd4\eU/Y_J]-1jh75H.m!Cku8.$#=f)dK_h2F;.75V!4#As$sbl_^7.7nQ?Io
%).-NY$mK`r:CEd;b(4_+qWCV%FJ@r$kS'OqHc<-8@A.7#J^]k.*EO\3B2>A%He)6rabl5Ll;"#](tpYL::7n3ECS2eAC:bK8Pat:
%*Jh/gq^I8[6H?Ql`&NDS3br'31nlmR&>9?XoL=M\>lF3;omZ\\L6#IU9Uff\7SP&;#`@05)k8n$U1hHfXR3Zl)+&hV")C=[fe&LL
%@`bl\)cEN?kO=&;%C<@#Z&UutAA\_Pn%99mSB@Y$Y$c*GqNc7kLW<$Kohs+)jEU'[;E+]k\=a5mN@#]KP2#M$Ne%nCe#r`+V2r@@
%+)J:a_kJb9JM-j_#^*[j=)\El@uG3>A0Aga4b[H788(J%@`85_^8SY!e;;l\eH>Tr01Z!-7o+>Pq0W8Km#QV>&dMo`%:ec*k]RmB
%&7!8k/58NDqN-b@R&_Np5I#DCjiS,oIe&lhQN1XUPHIDgCC4!4'DHB"]J'H+ZQZ#kV%$L6)Kb+N5+^f$1Da8POqg@=[HtX7W2>l<
%h7>o?Zt^=jbn>[pPSF8`$Uc0;G&NN`R(L#Kk;^f%?$ZZ>m86H*$3lP?HH?nDogln9oO8TA#.(,N-OjVg.rh7nd#Ph$j]AJDX\O+_
%6r]6O6tp4iOAJiB'e*R3s3iBd"l&4?d^tM>%4Y0d.=cIHGSkO$K$^>*E>ZsHK5*L-Os,^[1d.Gt@_ZHrK2T.7$a1,B.+hU+.Nc*A
%N$8?Ojh!q<2mV4;^BSS6/"9B!g?!A2krT5I]B#`#qfI:7o,<,R1HAoX8M_:k#Eon#mCY_+RBhCX[K6\."KT$uL>#VjG'iZZ!2arA
%^s=p240g@>Ct;\ldKOK*qk\qOR9gPQIFp<%)K<#$R<e/#9l6)*F[+eP\d]T^`RemOY8:JY%mq]+-)TNr]?XP,gt2tO6.bOIAOg(]
%6W*o"8d!Tk]\J<5oP28q%t[6\[p\EkkNCW5)9XT3*M`5j[rre6BL9Y:g.9)OWB14,h,9'ThXttY+]ub^PH#E+OgS)s3GKRTbhZC$
%"6mC.WXYqR$4VH4-U.FQ6'.jcj+o*?r**#]qV6+YYc*/mRpHJ&$`6N$"BumR(*sIU#:Id73`oCFD8aUfI=kDLd^4Gh09<;gdSch;
%B\\E+(/='FG+\pqRWXKsQg>$KUo/?lDTq.d+HJf^g[mI,(H-2Y\pGb!#]\<?4fm7#Dfr&8dnN7M?=VBJcPS[E/q,?b)h_R%rMj46
%A8cIEC!j;[j7[$n^j]0Z27+W>kYcBb'FP33bD'7gE(?]a@]k5DLFc4:^.JJ`'"LrVWU;JRO9ON(8t/LHs)bdp,Sd2QUt%;;A84*b
%[8'f8(o9>g$nIT>?OTBCJF;jr?(]0i?cZ[#@sQQm<\L_cV/*O7dD\qs8<R#kOBDG?DN8niRs<SuIb9Y<NIY\^Q9nW^mL=-@`,K$[
%&e-644Y1;)aHqMrPb\MVZX5lQ7SQOj4nN6&J.&5?IJm!Tor'jkhqq:Dgh`iV5uU@P69+=8J@-WR`D,2-'7lo\VG.9V4Y.th#Gp(9
%Z<\([@rF.G.!5B\oN@Vm:88LLYRg]"CmHcE0NFbuPEbkdOB=,La<rP)2:4?[G<BMPSL*#TCm\RZ[bu6iWQhshSdUkJ&A"pVd@ndX
%[F3lh3oph`s',4_P^"Ga5=cVOKFU@@>3_D?>)aG5qTp0MUpUnG7b6mH9%<[/iU,[Ck7K^p;\Z&tc^eWcT=HN1]Vg=E/!neK2!Qc:
%*uQAuh\"XLK_ohKns%n>mb^P5lpW5"9dYdq]s^oTG/#87PC:E34r1YSP4q3T\9OmS("X\7Gu)"c@IR%'UY/2.ASI`V;-rfJF8r4f
%\!bQuG+!nlm+S\^3LB63(M_P[AO2;fH.Q+e,0Wm,=r8nl(MRTWVhNZ<Z.;_t'B9Ne0p6mH.p_nT;Qb</m7?LU`QAgB6%/YJ4.445
%F48':K]Q'E4KQj`>\SnnJA+c0Z29iMe.B'R^_QJm<j/j)]9dU%8\8YR#h<FDG4[^cMb>o]>QF!0\P0e$gG7OtR[#1bH<AFBAY`L(
%<:qTHW#)]B29U*L'm>W7p_P<9ORQd;_[hQ-i0VHK+hL*Z/e0Xm.S,1u5\#SKTUAJM:Edq*0D3[4Y2JbFTo(Iab#6JLcnAsWEK<Pp
%<^,gP%b3b[P0ri&`BR?iF$Ll3GcR3L.3WGWj$u%D5]EWCZ`*2GO@Xj8c"_al-A?$Z%i^ta160cbUWNQC5iPELI<-K1[r(C`O['\G
%P(XQth]sQ>R\0OgGE57L,=PSeCa[@hH*q5f@C#IF]94$)jodjU,1]1P!4S#i2M@C'`:2^ckVamBd1sg.E#=[%()[5`XN@5_BgG<B
%`[QMj=f).b/U+m*f5c2+/$YaGg4I[6@WjR71i/&J]FB@Eq'KDd'-;2^(fkY;N!@qi0Q8!#Eg&s/A.5mie=&UbPi#@d_m50*_@hl!
%KDJcA.d71P[W_@V=A>)^`1i=OQ]^sI"*Yu$h];:s]4/2l=WnC!;=OklWp/1V$NU_KfXnrY:d!+qV?7)i+%M83(KHHD.F>(c5lSB*
%.,DinNKdXlB.J?kLpXFNTAQd::Z6Bc\rO3cPG,8NcY0@%hE$q'DE08TjcYm?QGFD<f%,Bm(2tA9\2ZV[_Q'3#CB7CX#ED(?T4g\F
%or:(<]Xb-H:%!)C,F6C\C@l15F<E_e=?;J:*'>jPB>_U2Zn^c0IG19EO$-hnB]=-[21=]E5rA:WPV(/j=B04i5_hg>QG2-iQC,(X
%PrI*O5dd>=!kcEKdfCR7Y4f<P$/GLUC9\Cc--u=s7bkTsjY=S+R((PmjWNcTN(64G^Te+?$/Um&9!C+n#)?a2WH#RpcYj@c]4L'-
%=ai^dY2p/fAdB-)oLO7ep;%]ZlHqM)OuLai,eHV6rFDl"XO+Br=_eYt@W\hZ#*F`/QZ9;=eH#/(jm6t\\]8jZjVM6DhJJ/#.!@I?
%Gn'.pa8"kCS^sIaWtuZ56Ti?k>jU`=)5(Sjo@8:*>CdIli"19D#>/SFQoBmAm0>?,PgcIi4If0.W)*[2Z8qtAY)l".'`21!6?OL%
%2nJ\t>-s2gbGikmH_JF6h1SD<.cB^7[o9HS9BPQRb6-H^_IUtms6@!II'O]K'$;&[[:-F_KNSE#NWRo_r_fnZ^Xdd769LTa0tH+M
%mR+:S7J*c[kGZ9,YK&o[eIR6k9FFh*&:"kdS5"ME#7udCD]clcW$!AClE61XM5HeXLkA70V"WIj@uCO9l*-b*pElPs?5"_mU&6p(
%&HDeXUm+E1TL-9:\lC];d8!F?1IatI_C`VY<V?/r8Wnh(U,T1+U<3M.5D>iYkR;)%%!>!@Hh<?!G;hpR7*\6GHXD.*8:AS)D`b="
%dt6<u.8If(THI!)]'ooVl%Wm:Mf*#1]j;VLn<AeOUDj>&;VYi"apR/C/Utn"(^a^-js9.qMqW]M+Gb0qOG3sefFTk7jpUtR@Z+J:
%1Y36cC(m0oat\J(-fe<oT(WXX;h1>!%s-Tdn0+%i\kmTsHF;Zu&/u2WkTjMeQ.+M!Re\g*><JFa^dt@uq:5,"gLSo5-&#cP0?I%%
%4*0UJ"V.OJ$Z],WSpQkf)9_%j@_F691!Q:qTlO9POIdVtD%Q"(fiKG70NJek`N(X\/c)DN7]O$9OrFA":F%M]+#^&e5="$FYd_+X
%+[&Lkrb.$)d1<6r/'enZ^lhNq\i&8bbWE8X%Hub'%&)c.$@L:/SfdH&m>4LM!R86P&jUG0!ufi%g#ga9lJ\Dp,k8oDrR!51ZWhs!
%J1_9;]Tg>1(l&+c"l\#[7+'s^m"tIJg!Uu9f\6g?%)mV[cEJii;#+]@(r;\jXZO$pLAg*-9U!?4E']fFUheqH'$m3)h&*)2=Dihl
%#-!%2&_S6KAW%3=/rSh2'**6g><8D=/;(U3<K\nt[/0XDIC:0o(:NPEODIUjE-+:2HLlZ6dV&q+R!:Om;)pcA-k9[t2-GiaAmdN0
%#T&%mjmO++Q\1c,$/E;[H0TG"6aroo@0d^PD6M>7LOE(/.0siWW.tSj-;YiWHFF=bkg<#D3G(!l,N@m4HHs0:^1"C230^<8*Ap$N
%SrV[9oZ[f,C+u@1%osSrSu:hsc?CA:On`n*OXVW48l#l'V=,`Zj2\6p3UrS<4Kg04D\I8jm8IH!5e[J%:kl&i"7["eSTuut0USZ:
%<Jl<(MsA95>7ITEY:")sHj=$u$7\khKQ&ip/Q]TdPg_cV7(\0ij9*:1GLE+8WXRWI,#qS*P[c-!^'4h&j&AoTl-tG\NtSf%d[']E
%f3#pH9A,P7C4d-(XQ:%_LPZkjOqN)T?kGAJafsMM*r_P`0PJpfX:M[H+oe"lb,<mVaE+N7\oDYt:jtYb=c+t<)BlV!"HUnJZTs/D
%5NN2DXYC_LG9hlT3n1e1ZB@G&!Rp$f:fj@)"nO7]=m8Mrbb<M*8_bUEG*Ra*a-.sUU/Rm1egIt8iV=L\hEk!-!#(lM9UUV`EKFdh
%FBUVq&1Iu@.]9-a6e.<Q50k(#0FgElVj2dXj#?Wt->gZu/Cq09"C>[r<3^$;:'$\9.)k#k.M/hM$::7[Kt:h"70:HuL;=fb,c7RN
%PM%D8a1PDZQ9_%Zh$-<U*Mk\3TTTC$Xkp$@gq$oNlLu]bO%Aa4>HA4[2L7?IAKuoYF*Q<4WYHR6]<VsuP98jg:3Ud2$'SRNQ-%l@
%Fg4lK)<>P%f*X6U5mNa!Fb!uL>DgafAnia0;AKm:Al>^e9,(^P+ET1c2%UoG]kFR,;;c1u#,;LV7@_Q%Y9*/LXeQpEFs35@5`oHP
%E<&*@hE7)SQU1pH<^,eX[YX.D@iZC_pNW3CE^II^eeP3NdA3hYoe1>'9I1=DEKUGd8\+O4;_?f5Pgd*ch0USn\O/<+>(B945;B`o
%arVT?<pA'<=k)ZRj<?;RTZ2dhQ0c"q/)+YfQD/b3&cYp'S"HB?J1?h)*U2hI&Km1Cr6u45d)^l'QdV:9lZ2%\ESn#CW>\)_)4_W3
%GaBeuWA.D\kHjX\JPXB#bX`UM;pGqAMu+-^8o1slf/R33BlbYYl)^2HR.IfTnQs+'=<%I2[kHc)c])Q\YX84^)'8<3SN>^uY@Iq0
%fCEXD#E@E/6<\cI.>EiY/(NYkP3+d28rfQh%YZi.;KMeE#MUT@4KNkJkg2.7G$M4oQ2MPrGT*?4GmHT2^Y(Gl!IR@0?pp$i!:gQ-
%Q[EN\TfRS1o,KmCY;t6J.l:eO@-hb,5f#526=LMhX%,hO8I_$LEak`*ooTh.FoSgKjtk!<$qE7U&dX>(qn,!X%d84_@QYud[l7q>
%8P(.shefNBB\MaijUaO:MhhaaIeY8!0f0#RV56^tC<Z5+NXJ`JBd?`k2GT7-.f'ObQqaOjFX(\&rTq/Jolhdq_Un&Gn=#t7Rr@`a
%B@HiUlII1kf8'fN5SJ&=.;ighUFnkmlb.b?SWY^l&%jNFN,i9X[Gp%cnOk[TQ3@I_KC3%F53up?*KsO:>phqYY2>6hB,`"A%R[?b
%9<UJYSm&"aG$\`8C<o!%4gSj>&EGkr[.hu%@'nnW\t.i\DZbhu;UPr.`AJOD4RUeHV8Oqiq\RSmZHpLT/BG0'a>eTb7/MIT\KAPV
%)_8Cu>\/P>n$f(tf+2sb*VsHfEpE:OeD4pbrm5E#ftan5"G32S6>Y8S-FhT):A6hAoZ?V;-t9Pe.mOi=T.9^EP!E0]8#pQ`*[=fW
%74)JcHc,Pn\/b&g1UQG;O3\]:R*ja^k1l$#l1VHGUmP1-k/-0X=ec.SOfXnIZHa``SF9phK(eL*/1aL:K$)rsf/'dQ@r5<5fq./f
%f'&r8[r%b]obW#f&Ba=ZdIEcVo5O`m'Id->1&QkT3jU;teI`$HAugA:NE=M#Zm\'&RO#QKT=NT=(T`WM+u_'FX,IKNa`(*he:[uh
%IZIAR"0dJnLKZ*jfkm`!MRGs,fiV&1[loUaoESu#fa;0-IZb>i@@5LpX[Ynh5%]fG.$7/rPEWLLrS3QH]ZO<*jE@;"Q.)`!OI.i+
%VMA'X/X^@<%&"j41"ccJY]EiBA=)+f;WpH"QYg2/[fWJ:$A,UrE4?0C_tRaW/+/Z-07+YBW4/D:b(OS.*aGU*P<GiJZAW7(ZA^D>
%eD^`sR,OZ!/ApG,b"!GoJ\VjY0/g2(ms!lXitqiFW251TnLZK3:8)ueg/I.@7_g3V]/5#l;XPF'7/SCnV-(OGQ4;Vl<3ug>KFN;U
%ZT48<_kBYh3(#5&dU'm%7n/R-E'RMH^NT(N8DnTtX*)78dI'6,A!>sj`5e*iU8-DC-.lnUTnA(de;CD]7QS[nO@S-Y0>LIeU'l:_
%&:55$mns$)dZi_)SAD/_r:(M*!Y=8_*&\:4k_u%0%*ta^KW^nM3qX#'":=Mu%FqM4%lKWPoh&\QU#T>F-63T^J6c8K8i*umSC.us
%SMuh4msA]T+kTJaJkEU]&[b<+#^_CNdM!4R8gkp7P*Z?A<]#jeXFRiXgf(ASLHG]K4UR2ge=-1o1B((jqtY9agN^XKV+k>YfUFrW
%Kg%/$EJ,SP%,[UnSfcP(,Q1J:Y+K!_DGA?e]Q?%!&u"Q!5JH5=[37C00FS5VY_ZT3=KtggVgA&8$s8,)dd8D=eumlqm-aBl;[`^g
%]_SKLHJ,#-LIR@K6j]Juf1-ARR8VDXeO(nZkHGuUV!&LZ!_5Qf:iN%VDXi5.Zlf8A=*=^n(GsgdIR`\<53fE*.\MbJ`JlV%WC)40
%hXj.)P#/o9B@`NS)sh=??#$H^_`=f'Hbp)=02I^Um<QS1jI4N6NH>e\=F!"a"D!gHO.j?s9@8:pd0Qj0m]$&(&4QM'ML[ioi;[LK
%&9XW0220`L>aM6j*]M,Oebec['V(IgjB,@j9mg12!n;7o07cS*XqmY-Y&bd]'joH!VKl&[,hiltJM7D$Elm]VEm^$QH$)pM]-Qct
%>2aT#[C?,d4tO@]W3POIbbX"Q+q;.")BM?/NlqUEBob0!!>W,/;]hkckJqUr'K0c-$c?7<b@Lj"XnHgO3fpI*6?Ft\8*KB@-^iM=
%OZH]HO+usV9fX[1>N&06T==?sCED2n($4AVBgbR^U/%%n$I]%]0T.i.2./a!,!5tHWYlUSF"H31@%="#QKA7mA*Ma9Q)fn-nA=?#
%2)Ck>Iu3?DL+Ym4oI9JPUulq8<mU'po:k`Np:)M:'O=EBeE?@5)u8(!(1dRM.1=q`YS&<uoM>Vc3b`&!VG\(qUf2rW]5qZ;0N<['
%'sK=+p:?]aJ#T1^X-/Kq4u5OS["2Q&=A]!S2F)PiT:2dLb[nUbcu$VK-I0d+dLr=g'Pl[5=d]!'d]iNbN@c?U:@9f#7oY_V0?.WP
%CF5VTKC:=OL=R]UM=?7:>Y0uOf.qN4L_rWs7q_uc/(Me-F=\>f1oN&]'n*aA#&Q0!h]\:m)/@@T9(u@2T#uOb2djelOUCa$BU&tm
%)^9+qF[^K"no0:)JYKqo9edl"&'d>He#'A/Tk\Hm$0OLsc/IT<jYk>ap=rQ8Vp!d^@ra4j'QqMi,\12;`@iZbYU\7"*S+f:.*EWq
%6LSkhou8oDCQt]I"AM9u^:FDLnskYR6UWe.O*GTP[mMXs>Y/rr`LtQqUReh0aF[K>hq!jHh":A,M"Y@#>2h[&+mMPeCE%tuU\`ct
%pYs)/mf.3P4^Hq<.0^?2:/e?rAO(s)H<0uqhi2GYQ+$"*Yap6JZPojD5nXI(_23;+\B6ED.,OWGgiU[*IJJ!52=XE+&&A[PAoSI#
%$/C_jh2oL_$ep;e!5?+rhV3)>ANSL4nTgc$H+UZud8QL>#G!cM%e<dkYGqYtBatSPB-(8\]P^_F^!]FoaD*sgNk9uI3'k!`f5soP
%q1\qlM[;_tA[p!uLV"\F'P2lHVA@8(>N]0g+33rh&i<Ipbi"Md]h5rDq<dQ2T=;:&@$e\-X1=tlDZ")k#PdVcn_"3j1TP>8BV*t&
%:&+FT#6F8&6$866;N"GCa?@eEgCh2uNnSrLU1^DDB-&iXV*f0AN,`SN1L1/qhZnmZVb;6RjT-*c.Q1%i:N:rV:SkYG$lKGt3ShBp
%lc&[m;]0>:EZ`0XF05a*E5aTpEo-lJj6;RN^hTp?IU"onV[>iqma]12A:1h'VNV@Z1VU'[<Dt%9YN(p[WIYPD=*&4K:]N2qjY4:,
%&R3pN?Z(t%\I<+0\!qVkQn&e?2k?\M>YiC]aa"$T6)ZFdS%m6=k&@B39@4=&s0Mm4_HagMZ$X%hk^o6oO]_6(78#+=]GCWu4rE.;
%;Q/(BYd\e?(c9p'VpK0U6uFDN&$E9qA.7WFJjhu2C$hoZf^t*Q:u,.V,M@KoID)LG?;Qc['<`oGdL#dC*u9iB/p*V"/mucL)s%Es
%nCMUA^KXHtFCV\Y6:4oM\!$Y@+"[cRSgB:Fo6LsFN\2#(m.Om)W4*MpA(+UTDco/5[l.nOL+95DKu%;k<K9Me?fa(;dT;No/'5`*
%C6cflj1HDuf_)UH<j.tT>Y\$p;\<LHoV6=I9=Q)R@j8:QJ=K?$4J2_Q+rg#'^;`*:[!f-)\#_)Vh,UokJBI76@#"Q+9b]*TO.RWc
%QA,HA4l,f%AP+On:T5"f.%YmkaW',kMq$s9%0MJXYI[pXI0<c.-m4Xr/O3XO:EL=^lPPYd&fGut(8!.NK\cRZ\VqY!Od+c:6DC63
%6FfVbeo"F;%fa1;T:Lu<P\Fbq4I;(IAGhGmSd+n/:q%RFRUd[%D2,L'2A?TK)_WJcS=kMY_aD:^Z;qAoh4/$R@WH,Q*MG\Wd&D/6
%4;Q["Ks5"dqDN7>5[2Yu%VE9jmcZGZS.c]rd_T(Lc0?Ia`NNA?iO]D&Y56E8IB/jjU)!GFHnF,!.Kl\K9,B\r6Pu#<4Nbcl-Q#`I
%eue^0Sj)^G7#(CDV.WA57Ef^(3+8mX_1sR12^\?`EH'1'OEFB>YS&/<24.&\-kYE%l7$TFH'_rN]=[$Z]5"u!e-;4\Eb6*#6I2in
%/BS'jCI#CNA%8AY*!;n^G3+p,ao-O85Q(<),n*hUnEubEI\Zc$]H:\C[o#)NIX#N=cWYhpPsc5!*^N]YInOBF^I91:YK-S126dAQ
%jiY0s@rt?+%S$gZ5q%Li0^:oChsGRF][laEe1WJLJDhVmFrd@Or9L;R]dg+Y.HhAF0eFnp6(;:D88&kb]iA`-6IC^Q<W"'OoGT3X
%^E0gk!e*hu))/g-MBDd]Kqgtl1d",-VnuFr&S51H?TGtNf+/UV5h4eeOcVoe8OS8R_sBfd5l@)/HUufRI>Xd0Ssth(/pKWPe'`W%
%"gTkRHQ`OB%gjHde]N?C7nQ0L(>t^n,bid]#(C3oL6;abKMLpE=<.erX2iG"l"4DlXW@Fe1*:u9:`!c8"%[QF$bpgCX=_V)cK$!1
%D&SBukL+F^CK<0hPu\NT1Xe4J6,bXckE#/,_8\8cJ_,hUhJDCKG\6]uZgTDC_%Wk?"k9(J(d>q2,DZ1r`G,]R!br]L!/Sr0CL:DH
%"FkL'T=pf"aqF+`FcAC<4O@-pQ<GZ0*s`nO8-5VA*:c]>kgL`4U4fPh*jAnj=MY9f@;/:np,/3ae5iDShe9^k@pFnf+>h!V\Bl?`
%kX\"-l>\F@K6=dJaj%_5%,4V_Yj9eaC]mW+kFehRdPt!#)&3po/M"mGiU$0V2g=Q):BJ;R5ua/CX.BGM(c;MaDRrZ:lu&!^98<.Z
%-k3P#].sB7-V;kmI-7"<^j(@D*;.3NF\LB,=fh!>($?nH3cfE(^26M*=ZWC;XSsG1,EIQOY[0nZ6``1(W'TZ>;<2Kkpu\4k]dOH3
%\#Dn8!)Al\AM''*(na.I+h_gH.Bl:FPQ;3beELF50iJ\Foc($;MZC%l_^VE^-5g4=e%_rNV>$j@$*_Y;-Di+hs)9Gdg?/$79nW_^
%=3d[<M"cbiN@N:@`Sn3J20g^k6u<(#;pDhddR'H8QC[HM/Z=jUe@WoZ)f*H3maR#a"PqLuR;4t^U7j=p=@GT'$ZYLm4XbG^f5W[;
%d??WWL9)V$1*gIrH,/E"rH!YfIrj6Q?P`-:r(a/+X*I]DoNt%V+&!Ii!F=#B4bCZE8&SebGQs)(M<IC>Jl#^Q>E`4_oq3BKhr^(P
%(ehQD=\VHg#6XQ*7dXG96\&Tk.Wjl<#WmPKk<3&5;R];)(`_4/VD/%E-u#H=J[P>1hdU8)=CJFpab>@^g+8S@JC,6_T:+h[(bC$Z
%Dfk]L_8%nDX+:qN2IRGAZ2*Ns5C5=6MIV<;!GK3WS$;RLJ,fr_'P0_TJTEK_>0&eB^1sKC^VqX@!.<,EMcL'^IRQ>CPXPX/`,C\5
%iTih,L(cBp0"SXQON3Pm4+bNSK%Y'%!X]?&>>bm!juKoRC9aR&P7*`knZ&sbAZZu@6B'?sLJcTA3J(^jbYb;@"CPN>G+K2kF)=MY
%7Ze<4$?@^54AbW=A5d(D0>s]7^mAj8llZ@J/m/s@6N@6F7M-X*Umj"BOI"Kt$&pPHjIE@a3P29rX:A\Rfk%nC"Z`U6ppD`8KI](m
%-".:)=Q![e,<iJE`]d`#GC1S4E!9Ut(.95V>.5I2&_h=]cnge1(Q^ks&E2fh=pts*`K^,iC-On0V6&G@`5/nXX_85/BLF#,`fORg
%E-l%?"8gM\QD+!4B5OVE2XEneO@XdrIjEh5lX<$U]ho<(`AHf5K_#..f#^*9U6A3pi4,dF(IC`7hkM\*ps<j*TN0B=F@`8C6M@_^
%K'F&h,/5,lj5]0a0$OQu:WYGF"LK\8;4f!IKJ,1:6UTXn6n(K7R>=o+?5:GBL`mrDq/`X9rHm0-k68(-,oe+*oa<.==D4T#GQXlU
%Te3]T1eCVRhq*K_%VZDAn:mMa5aA>9NeRWU"-'g/%f>4'MbRLVr_[.d77)f\_C/K-A-X]?!im((X-+Agp:A-C6_&BjO$9_?,4lJq
%m[M+C\5[Hea1&e=EP1ugK/G,._<Oum&%D:r(^h4taf,LtEm9RY@:675oR%hG,!BI1-rth=f[!k>KmS`(:&Ha=1g/!ZK::)K%#M.m
%IWr\P_0t,84&F/m7(ZY@2Ne?+\hQ'1MtJ)=&:AQS%l`WJl]DDs)&]G'U>ae*Qq%0(l?+-lBSbtK)-5!]DN;TG9-HQNGGWg6!/i,G
%cqDj(mWC.M<4^TAZ;a^sX&cfN`uKbeeTt?g0HcM%k.2bGqP>^9Bpu&]@B1g6:TflFc3^`&;<3[KcRnE#lZlE!kS9N[lF6c';'18'
%:qC.X#X)%4[(l9s$rts%U8?fqc=ji`R^Cc#;6F598sgLj>"K.Y\J8:?cu_p<(1c@OEV%@ns81c@^oHSh?;p\#DD-p@_C0uS$lt+4
%=`_U@[m_fT2jb*]KO,R/(pu?b\4kqBY0Q+9m3i.>1s2OY^Rs4WQZr?I'k2*RH8SVi-]gHLVa*b`la,m)k<qirZaftpeJ?]pmk\QT
%p.][D#g$NR\H)sBF'*Y/qdu/cC.!&ed.DZ8P*?`t)&&VK1T52J/7'6-UQt+$oCCRAL-mK[*2+<,L#$[4,_.s6ife^Wh?hOg>(3Xf
%k5+X^Isq40s)5W8s,V^LZ<J'jG8C0ubDrTs$8#K+/WL'cm-B`Pi@W@4)^;Zgrja]&eT^S6r5\hXJ,HMMgQ2C)J,Y6!2qs6ab1BbY
%kGnAY;2&aR\b[$&f_\^JE%*Q^IW%b>h;:Hkjg`(>4WE3H6;a\k(eMc)?=^lA)0A:RFh#Mf6D<(!U&G0GZ9pCfnt&t?csN>]/G/>!
%9DFi*-XN/T)VG=*Z93Kq@&OU`55,=[OC>E1jq*qghR@\Uf\lVeeCQ<U407s$CJ-Pm?UM%0cTLY4D!HE:%0M[#4P51^dm=#E8\`!Q
%FmiCq5R4_LZk?F=blLj<*_.)GXY.t"702V5I3&0\r1[K"T:ZQ1P$RMIF'jt)p!r.!d3BH?Jf9\+Z].!gkB."ER80Ln$'"C:/&Va+
%Tg5j^g2P^jj3M*0qk3t]kLN0e$Im"L@F^VBj]kkaLUogQ6LT=?o%@<"7,Jrd;H3J`kPdL02kMtm,>7<q:bqFPF/56570hAh;*pq9
%'\$T'j9OLZik?NHIZ=5V1+\!_<:_EnF9<hP<YE/4JFPp%mY?QT`aQc$G$.1u9jNF\o]@f,-jN-!3C%8dgWpd%X/htYB^&5`olc.g
%7/40O%5"eIA]0GLCt_'h6G%k>ie%.s#8]RVhqY/;hqgPX6bj%3F;s9!eiJ3-/\V/r<G5N/qK1m_[BDqmWaGeG?Q1n;)u]SR?]P$L
%gTu0Tg),$#1f%MiN,Z\D\G%(27ndnBe/%pk=,27h#KIbQc\=gPmI-\EEnG<e:'dop3bAA;Cr[^ba9*GQdg0WV4jG-b8QRGg22JSP
%T"<=oh*Qji>XRg!:B(OWL)U'UU?LM36C=c44?a&JV#.>OiQ>U/EQ[-^p_V>%V:[cKqU>)"HNb$(o<AS3O7UgTZa;X.>&sMc/b"t=
%\PKuS]mG(j++QdH:Ula@7`QoR9&@7;YnXf[cZZ-20G>lW>6Lu<akOd*'ZS]27h<Tkog,L(3sI4f?]Y*CJrDt4&f"M[Db!69bL$Q>
%,RE59"^GX5jcu^s(LtLc0$V%_'AS4E9f]35L\B5XIin1?NMkOr'OpG'"cX01SO9FAF8,g8Whk+OWnN1m,E2%sL-Ko+(s4\Z0i0%g
%k-uMIXsn36EODF!/K.p^<cm1?$Iq'=gDK?>>$:8E(Sq_WJnq\s[^DfnjRI"'lHfEMfFM=)]o(&bhHhWU8lQmbkY!@FMq(U_H[<(8
%,Ao?]j26mdhhmHm6_V6[&G0`8En$.WeSDnA!\%oh5]gWlkjm.ZCt:G=9<l)]FG+4Emj$YL0enU%JG#O$mFF#U2u2R>T=q<nkr<Gm
%?OL<T&!2ng`J;AC#7"APJ?@+F8)"bVDT:o5%j#hp)6n;r&2a0h^)m"./blYFg)6_=@j0:+pk7WYp<7_2(SQkP"*YKH!MM$_BCsrJ
%Zr@mUaVK8.=iWKrmJFX/qf.E^EAT-8rBNK`ntIf@hL)%]G#;l+E`]uGD(8&W]k__.B$m7g\@2^jD>lsG]W<d,rG2q#;`8AbpgYVg
%p"GHL-QcnHr%[]e_sk#i)qsN!i)*+bY`jSTG?VIr9.$bQ3%/j4.1f5VPu]LHK*6S]aBQ/9L&u9(G?-bI]4`Eb[;!4VT/Z7=?FpGV
%L6J@`U=C#,9,%VUTlaKANIlq:KL='qG[ZOg6r-n[#0%H9X!]>`aV.o4*XNLQ"j[^+*MF1,0n15t!@V^).]rolM5.:[9/<Q\\d:s7
%RcN5l`E8WW_W3qjq84Ef2551**R08p$I3fFGd#=WVUiLf<J1kN'Nl6f@Kj-mT@fE\K!jq'B%#%<"H?a?MJQF',NPg7[N_mom$@ct
%O1j=,=QF7J`rl/@=!VOH[S*pp@h,eVF'jqbBnSCfhlk9*$p!*%#Tpm(kYMDt)=nY90Yb\d0r?'=Mc<f*TjbfdjfF(kTVq0NYk$^R
%HBH$_KSKCBfcd`S7`Ps%e'`QZc'Z['*MnD"?Fr4X;aHPmE&5(0F,S2C1d_USG%%MUoH(&/@_sa_F1NFuA15/UgCO%_?=+W@:n[%U
%!1&;!'DQG8cCgn+LUue+kpMU7%k3Na/!aa#![-4/V:t*;ZA;]M9t@SVgm$b=.J`\N5h,e7L^n@UV5&VY3eYHoj<jB_J;!X1_`IGB
%G6u=9AsCS/p3Ild8"Qu$HCYETT5dau%O)lrI6_f[MBcZQXR0A!@?"b.3+T[Y?Ng.ecCT&u=gi#J_;^c2'lORDc?)X<]#ed*6bc!i
%XJ(4ZqXPDk_&Hg:nY!WOIk\ZTQNa7t9F.a^V@=Je7mQmVU3\B@_eBcH#^UbUS/D(DBFbrco+lt<em(k$9;5=D.2t*KI`e2tfJuPd
%_\?+(.4X4IEN.8&GgU`pfg3L#i]XMn6",TGI,^+$'urguOPe-:2EE4[AL?/G\.CKN;XSI&junlIkgouK\gPtK%lu(9[_gQIY0irH
%cR6Pj$S:f@mI(L8r?,_qI;RYRS[Kiu#5P7p[K2fGaq!NOHLCn*El[2Jb[pX;O7/hc[l+-Cpuf&4hus9R*Tn`JSjk)4U]nsdna:FG
%chnoSfV%b\h1=N>Asp"W9H&]9C]`[pj@j!)FMl@IQ9npD%8;S(q(O,#643TP2E`!/J*`lG[?(8(9TgTg_dEdC+?s-C&B8]s$_RUW
%9RerAG5CBRoO`!kX9?sJqG_7HkQcj:NdCtIP-C/cE9mom`T':IN6ni])a9Y?TbT25@#B;i[=r&?TR0G)1/btHKc>\LSgK4E*^!&6
%D(%tliiEa@GAJ^_-)PWu<-]$M2)RC%?d*oARop=86upr7MlKo2nB^Y>K7V]r.k=J6_6hh)$=UtWheAGM<<Z7#j.n,#!]@<QFq)Pq
%bU[nY?UC?,2/B-8MFeJIH`WG7[H[i;k/=]%kZr<p7.6RV,2LN8_cXTG6_Z(h?,goRi1H)[s/CEFr=%ViBj1d5Gu;0:T,A()1TeJI
%dMQVeN3qbVp^I?KIEMc7_?W0lE"Qi]90A8iDk;oI'W10;4QT'[H3*8aOA&!_4umZOA$i/15qp#d_c8l:qQ8M4jUkNoL*TJJC'b--
%I-:trl`g-.9EiS%BhYsJ$j<cf.kk'*f_gC<RZbC@_5q:qD0egT>S-6k@eQI8EcIMN:m[Cp>WAEiJ^?7,V2J"A9Db<er:h`.O*'NL
%Zl+?V^rrF2h:O%^1eH.@kRWBr'WP`">q!-u6V\GJePj2C/`kjO"1E]m01J!0<]Nnj`sOD*IWl$<4b9r,\H,1tl)\#o'/GElL0^`@
%bhfEp^t;U=*=**W1gi]1Kc/^f:q/.p[KnV05_rm>4I)!`%^WfhI#J/+=.JiEfnMi03tQ]c(/(>n5s\0%9-NoI`R1WBU;JIsVH`%[
%MgAl6RnD3Lb:;a):n.K]!O#)3HdaD5b25tjlFWOqN"?.E&N\AjZY^G3SbAF@,S)cgBM3XT^tX0b?uD=kNT?@(#FuEodr7\0d*ldf
%0/M$HVbF&5&uN7Lg!Q=_IlhD)("BIW+g,;o!7gpd-tdg$*8=@8HD_(XN>)JT['LHg3LXHso!jhohWKr+72-_pW[:mbPm/3T5XYsM
%23]$X[,%IPTOFQ!-lbR<//61*&A>nL&d2U>*FTLZHUjfS=9W_YCqbci]8'DOYVH?GNCW&HZSm2g>k.oC;<kr0EFQb^j2`8>)9dlW
%HH8gL-B-%-dJ'<9aRNQF'Cap4dN##r^%]G+hY>!uK(jYWD%88<dhbUm(!cn_&g3nY&8g;O!Qi+g?#*!;MYC&]G*D()?i]J;%m+$J
%][!o8iR_$qG^[$)*4aDK8id3Jm->U2*7u[,k_=;:R-&_cR.:9oL+tR/XB?r\$AosjP0j?^\3EpaDY8XaH.O8R"@2P!fD4WaP60m\
%g#SCSRDX:3^:35UC!H^^R)f@hO\:QD&4Qc`&=ok0W!D@<Sfu,b&2%kcYm*YF:cZ)@UH/)aJcdl05s70hjCF*Hn`Yq.DN7.Ce7sK!
%:T6DI:i,WfdqNL=iXC.0r(+j#^9'tEJgl^^pPgTbD,C(LB[*6t(1]k`]*HZb\Zdf2>!E.0%jM0is+F2Uoc@3=XCpGNf*@,@X40l;
%-G]cL?tAK7#-rWj@J!:Z8)Q7d",)W%/("od5picRaRN<,/4pU5aM$K5c+:2j?q`Wq2e3ic+/>U3G9t4[;9D*&Q_O(6gS33C>:";B
%%Y?Gc:07]qLb+t/0q)g08'J)>eRY,$\!AuPZnbh#`BJq@*5;F)9K%uBLUZQ;<Pucsrg&o1SS$Ha".YRa8jM^Y*N/M(QI5f1;qS7$
%Rr+#/Z<P.tfP-*+@pd,<F3;gi9CoH@VWZd^'G+tLb_b:;/P$X&!^jF-,jqF'BT#*2.<`u1j:f0=+N(7]k0KMrB*<t-9G%=+WJYF8
%C.!Lp&X"<^l_b5Kdu6\KQMmWlSO^Rnd!guoc@1-I(V-(HbG:ZcceM;:E:\\b<=15M]J-oV,P6;2pW#5el(\dLK*o5Ol9.]=G?^_T
%_j/59ZVHB9b>2cM9mb0mDL#;>$uO-nioo"3,ANn&'aMamX0Y*6O46'2P07H-*u6Kd2:u/7[(S+uVapu6R:aXYOCV"1_CBZ?.dm(G
%[hmA^pJ7](2"8FTV:2llI>2T#)'rnqd2ZFEh(leN*b$[iFRM^&aJC"#2S3PM?8l<&m3DhTP^]S;XjuLGc,n>'FWicq7)WqKEd/rK
%@B&]YH^U*rO4=^1fs\kT-<N)1NEZIXM<,mJ]1`9n>C#*<l:kam90K#]/0V_hahV.lgN)6-o9`j&2,f\#fP5!RE?4>TeY-c[.F>n=
%W^Oo`1t@ehi"^(d6bGhXEp0l()4Ib_22>En)>%bHb:rR=`-%_<(a]WD7Os=r1]"%ZHKU3E77M<b7pfKq.#cLmKX&V0h?o"g)ME*3
%e5JaWK4Hb<e@P=])VYS^G3h&sinBW^SIDL'EtpMgpe-2=To7J2LNt?b"#?-"XjSD>._)lC">$*)G6i2U460mtX&ESf6e=RE@nPpK
%3Pjj+ha$b"1++TTVXhkce^JB4#nNru<EYJIcBgjlD@Jl12.ok>*kY%nc:W"e(tjVs&gL(l(g?<@Z++8h*7(.ff,*WAm?#NQZA'.C
%\>j*@#3H#@*T/Z\#dXVgL#akTUqFUGV!tj!g[K<l9]r;Y8Mr-#:Ufs\6/J[P4LPH8HF,p\C_$oQ-W?al'#UqUhc]B\Y;&\O%ti2(
%]o96CL2*0]#@W6u=u4Od*c(4KC@a7P)/7Na?CDjk-f;tO&Ok4-GhrlEpEE01Df.<q'qV0W!PrM)F9,7%MOeQ;biUR>.Y[;"1aY:#
%Or?tl``W0.ONXlK[`3gN)lU(LG?h5HegJRM]<pKC?GLJ+TFZ7Ls*'`G`k7&^CukB2:pb+SbIg=p$U](g9=6cJibjgtf?Fe_/D-Kp
%dit)fa*8F%%:>k16YD)f&\2rT^/C=A\E=nR,e'&JVkG(up[_C\eYI1(*g!'qHomT6?>G<d&G&N\@HP!@k,<o=gWUU*i!m:Z)haZD
%rl<HdhH9Ne&8N_>$iX<rMqeSrlNP`aTLJ#:<p73q/EBDV&O,)Z[INMH!>#T&P@0:`C7Pl\(NB7`eBWlP.[=*t[*mkOMcuFR%l#<L
%nA%[,Kr90)fFci>H2?=sIt.&^I(&&+8Ja4,_DOS`PRE;E#Zk^$XA'-M/>]f:g6;0`;-lq\H<5BP%[>^$+;G(clb3OmSTLHT+O_nJ
%jP=DecltX^GC<2A8Z<lFZEO]dm@e\2RYo8V:[Qj%5JH5``bs?kp)]Xmo,Wmk&]R=b;B`enYAJY9g_\(7%J7>hFdfb!J3;npZaFE?
%CaLjo4Dm(rLVbsZ=?CQ]F\<Z.o&bWjRanA"KGc.#cJ);-R=XOQ*7i/A;r%fS\\+=e)DOMh_Y`H"I^fQBDM`nY+NjF0`@LX\q:Z7)
%7K94J1pB",bR%u70q;qi'7)X?ec!#$?4+&M-lL\\%\)a:p'@>i-sDd;VfGj@7/RZiTJqo9oNrM26miEg'M<mf^n.;*V>3ZT`RkAF
%G5.`i4PDB6J_*cL6u=qHIJ9u,-Z6b7hCtauKaD-)^dtM98sDaRL9sM6`H&IAa^F)'djk$/[fYB3+/-+9.!N'r7L.FMV'ajbq+5su
%U=IkN:%Wl"9oNj!=C\%p)\)tkk2k]RH/]oOJ!.u>bDrH*X60Y^@BSL1G54s/=6Z'03sneBNkiq>*lg?2k7a-5<%>S_%3>:dX'bm(
%63rmGV:hd=a+feH9>gj-i2KZ_[[STn5Q`A!(M*Wr+QC`6Dl&nW`0kC?>[/u(KaSj^EV:4#MIHB=LGm**.7^_6nZR#eDP5\:Q1)$T
%e21\gpT)D?eR]ZcXlc^6EOMfI?uBhkc>j2`!<f]?FDF2efS+h7=3II8#VSq_-eotpI`jCiW;!\+oB4/R[NInP$;!NoP^[Jn@<(WC
%;(/o(?Ir(9^fX_/Ydp>n&qbF=HcYGZOU2tB^.2ntV5@_f:41X^fSN+nI"M`<N-[=#_AhXePDN*j!gCmUY&/'SV;NR\GA4"QJ7`Wh
%^;A>kj%MLQ__u7kbV&k)HqGVc&n41EjXlOG8/2CVVEUP/TC'*)@MdF_R<R0Q'Y8u;8p.ROPi#`P%h7g4@c]._Ke`2)9&CW"*$t[&
%nUS%)C:dHrW!WkE83hjjale)c_XIEo\USdS!\WIlEEFG-$,N_N&AZC%gS]XpP3jiW,j"E`pED,p!dOlH/=g5ioN"QEGd%&sj`arT
%fj]^91=>1&Et"_bg3f.-Z/,MPN.]5kp-\;GTA'$c8u3*,pW[$0R+\;jeRBGf]poc[.$H7df@Cei7WFAf[t\?r"i[A5@eE-aN*\uV
%[#UE4g?HKX=RGcIgG'ZX_kck7U^V%FLQo74rh[B%c"A,HJ7Zmp6=Ips7=gcm23TXiX$S5uL(6Ie&ebs`<<<a8;0Vl9(]()3LIE4#
%X:4?1^oEFkq$9jIMa*Q:Y(UK\)(,"sIPdG"`61N')WQ*.:mt`E!U42e#3Q[(0,F*QBY'Kc=KYT.4X_X='PcHM?i_s<KOI4B*/;*L
%n?,8goVHmp&];Xl#T@fS"$`NL;_C\!a/$^JTl#_mXHb"u^`\\r`l</.%4P\aX25h+GZ\L&f@]2=orU`SZ\u!>FFILh%c'u3j)gF&
%`3(YH.&cgGmcYNNXMo-ISA`:*auICKhboM(_b,h*SDD`j\;=VOBh6j6E5e[Fbt*nWLitREEu],^G:1LM`fFh"F,iA8Hr)82.([E*
%7n(=(:%+RX6K^Aff4rOE\,ZibM4E99h/S4oF3Wk;!(&<%2t%J-Z@B+9WT.Hd#%fur(jQjb-+tCSS7%Q_EsNX+]HuetfO*%n"LcN6
%arj$=d:(rXHDS^q&O!!4)GH01c=hcP]2)=-<0^#n=A'[AYsHCp,3i5B[[Z-RmlP;1U-U<QHFZ/X:>$>S7Z&MqF/`Ka\A%g'9*#h&
%6[Xr4g)d;k.LFSS"p:M6URQ\E;s/O^S4+#+0/+bn/Qt&q1krI:k?*Lueh#m;8%<qdY@Qj;[[1n@DTi:q@n8/->@#?VrR-,^Z^H$1
%R>_^6e89(`,p0Wb*sQ'@R@u6*S4h6mQJdm,:tNrqj(0X*D@4*hIgGg<V&h#g9:NU463i0hCO.3eA``CkN+'+^MH)B\5WsI5-q)db
%(S"m=X3jFqCqS#+WHjjL.29B61(idM:=BSr$D9+d!HRIaB7u0Sl$Fj"V!MCXh>o`7+>uP96m5OLb=!.Go[&dA%IH1\g+WrV,PXfW
%e2o"bi.._$blgCKSd\>VELCA%>Cj/MOjg77eufH^2pMQuZK?=PG_dZ^"9$rYjXf=/.Pdb*d55>Q9d7)"\p#9XgZ$2MW%C4ss/<bf
%%5eh$Lo(E3l%IqV^-)qRXLd!4Q.5?_-Vp@9GUiL.&U,uE;I`C5r17amj"tm<[Gat7kFdGb4B$#MIuo&&9Kl#&Mmo<KPPc3]>ie6P
%gI"[NFEtatpkm:q)3auIQod]1KU5>r0<)pGPL]hW'Ji'6$mU6P3gIba^Wh0ucR%7ah4?n3LY?DjiXTs`=NUdbYWtR1@0,4&7&_>6
%:e:k*>0t%Y4%!O9l`6<D#a!h`8&+sWoB%'&3,oGNEn!tg2Irf=B,P4aIY93UJG=g?LZWIq^U[<<i0MNP@MqWSgXZq0YL6">7MaT.
%isnsJ,J0^G'^KbF1Ks/q+F1DO842`/4@fSG"m0D!pee^ae;eN^GLXU\+4]_47'eM"_ADHoZ2JgSie6_l;3T@6@qOBFP2qL$MSd0I
%?jr>5TjZA%ZM;%c3Qi+\$a!s),NG:T!YU;/3qqH^AaB`X'qZXT^.d*:r4B#4rFBM/=MuOXoONsX<^\sTZ/NSucN]/`W;=:hgN@VJ
%FU/$DG_3ekZ;167Ulm7cOHfO1&o%M:@j9]h8rIp(%l[c*\g2Gb,fICpWso5Mjf0.'RFGCc<&)@N<T!n95jBI#gGWWQ_ko_q6Oc[/
%cnYLg8r44Y2>-.83oXQ4j#N[a)ST8D#ng56pJ$)s(hPp6(+U&3\[Por.>`U?,o(9]ZB"DLh4f8bU)kEkOC-*-I['n+h]ll3B<r't
%qpQK+Nun"k\1\5mPLWL&e=sVQV=Uu=Bd/fqph/+PV!6O=CR)]8G*pliH:p%Ae/A[lRS<LdK-pdW0`AP*HX[XcbI4*%b-L45%Z1Aa
%X,bV\)^GHm>FjS7S6?SH;YB4M2t\C5aNrS/cgKnE"4@0JW5aif*gcsKQ*4I::C/'QbN3G(JU\0,<4Po-Y-T@o/R2DqCQ*"l$C,G4
%BTY-Hah&a3Var6H.[0[00l!X`.'#L=EPiaJ[>%mXB;D,E.2#BDo%lV(E`^gLRRD.1j:RE9kk"&="s_$j,<$/U1j:AYjp#d3mjU5h
%D/+uX3Y3*57*tjilZrdr^jSk7kO^eM))\1&+.b(IGZo6#[OWC'N`=?[e@1=46+4'r1WLP?>Ah3P<C$m7?FYA>.9&V'kg$cjm>[Os
%)<WHh)UJd_EFJ'DGITpG'RhrK&+5PW==kc0<<1ZC!D7[p\.fAPT74"jhmtmkajW&@jRdCJ[k+X07h$bc&YBO&CFM'MG5bBQNuHXs
%oSjoYlE%Vq*b^%%AWEK=_of.6$--u4J7q3<c:g,MW_iS^4p+fs;\Ech6r<9^"@l>)3)3.bMIscU99$'+>SEuXY&fkM5^=qL77rU-
%2.`Qbf9Cm,&(tOue(HVgUs".&gB@d((0.6oOd_WjVr5Z<*iVQj!+m=l8sKt,"(Kl9l!)k`1l7JMGukQr1o>uLFkW630?kRO,4,7%
%JTr=7ckZS49sC6[,df]9a;X6<1?mA`b9)HGHU@cj0Zk)h;Gb$-C5;"[_R8bF=<j3uL!XO%9pT[WRUAhS(</b]NIO]:%;=%\ee(Q"
%0!uh!cXFt)FuL3im^`t5eEF/=dHYuD<"%\\!LB\Bfm<=,,+`BCqkX*"ZHnfaOW;D;64t'h(=,"P]0D?%Z,a'0&S#uk/q[:P>F:LL
%ZB7d6D+tF:!.Yh^h9Q(gS1,(3B/7iAZAQC,@*M;pGOjMiLiQbQU&;b<<pj2$#6IT7I'l+gYdpX>#;Z$2,6hA8gbtsmbfR>O2mY#M
%Z.ooe72nuOb!s473PKX:hjZ[##]*'=W1ISI9:NU9G>hU7nTB'f&2kBG";1!l#%i`5Be6Yn$k/tc<)"E%>d;P5.\oAiD#O!Y[sbGE
%#'N4.d@_d_NAA/GGX,);Sg%KHnu#',K_:2)`cdmeRc41bTt[$W7$9[)r57M@JnKX/%l^/OQ&pD_Jd86^5]K0h*5%TqFC>?6+([W$
%6"cSq8]'d7,\Y3hNA,Ls_=rZ*$il&oe#5e)[q'k@lhSH$nfB6BRbjbLi>,>e!T'/Nk"eH>>Wm)NCU?L&)TX;?"eRp+UhU`leZB=\
%LG.g^42oNf7*.B<-JEdNEJlhp!'2n5eP=^,RrORGX]HUYm$f@4:i/<Zi-(SPoM>Q]T#I@$`t,[0+%E^O6^g>uigauY)5G>#EmRI4
%m17"\Xdg>L*%An='BrlkZW)k$5YjG`\<\COd/PpHPYanSf'L-C+LfKd;=>:=oUrteOskY<11'S3DNbKI@>*`G(.?sE9]`oQ=c.mW
%8Br5#679*2e8f`8o?jo%m-cVB21PfT\#t=P6`<],Pb.+^h!s%uef!SRY[6OCCiZG".<];NEBoBqMGgCm'ENntSC-b1K[hN5%Br!g
%,K=ClO!a^#MJj%TdqOuL5W9L/(c=/e";NW3@S5'`nWu\IbNj,(E#%5()"4!Q+bT$8Mib\'HLA!W1:,AaFn"Im)i-N[=c&7BhqfTF
%)<7PQVT/JOi5%6tO6ICg\#%IH+b1R+X>ls#_CT=$(o&KN>@;(E0B.q%ru^Aug[Qi\,@VY:]YRko?X>6*pCbea(JtqdE@\Y^(9:T`
%21,9id@"<O#or6NFnb$0^#W/fc`\nnd-Knl)okAi[,rlrK4n-$W#dP%XYsh+(3N!XG*oM3C/>b<gi!ihk?J3K#L9q7\ncUqK>Rk*
%3_-@=%ZM1KC,bcZ2bZ)p]da7'm%Q0Cq<`r`G!V<TjWd@icQ7WPX$5GW[qW3gjWN"\W'dMA4.ZXGntKk$B;V#C[m1<[kHO^FHBRa:
%pq>Pr36uQ4KQr`b2JUTY;e-tXRa)+IPCa#E3`k_"TmR""lB]R3X9ZC9'1(udN4[5Z^k-=Y\3rU*DZjrWq`;&>37BPB!^'#J!_;A2
%Cknga4&*S<61Yp<>rEGKL?@H,eHs?<a1NFK2GG2k:_*F_O@WbGiNICo<arqOJ;P]dc\qY_1]d%D[E?fTFsrK2PYn&q?qlX0b6`AU
%L_*5je52M9/)bB4\eVr&B?2oBSU[OsCH:spSs[n=T[1Gph^,Q-UhS`S!>lZmchb'S'nNRp'8iYk**XhN_f2p@qs-%s5?#7i.rt<J
%a/4-Z9ta499sJin8i.S`e,.)^p=IFg@]AP!ktB\T1l9aXs,]6ORNcQ?&/P)q'T3KH_N%.JWp^(-+,l%?XF\]9?",&j<<>,?b'oU5
%KLJW'/?eN(+W-ckXp?%7K0W5%H8E`"0FX*CMjK>1al_0EXqQjJE`"l+OkH90)Bb`C_catoE!amoE$'T4F)s@\\3UcZ(sV,Jlibm+
%:HY5pflRf(+<u]O;:c8nm?VQR%:t<7&A]J)UoC%,1s/*s;1L>\D,+JAVt8AZj(,0kp:bo\R(E=Q`qt28[8R5uN54/YG-tqtaC+rO
%-7*^eY3$%CFmE!tj>iYM0GK2&'+hdma)Ck;,PHAjP+Ml:lX+52dP0lZOD0CtU^'<-'9p6BM<p/g"GfSj4#?OsdZ<3[19n*4\c>*]
%\t::4I@b6KosNb*UpT\>j0_V14XBfq+S'bpHWOpRPGO#2:r>ID0CfDk?h_g_\\70VU'(t7\_-YBRO%1V6\kUPOU&4$N%W4_F*-Ye
%',ue[-%u^2aXLEg-LUX/_8$\CH#M-.*5?CKR*sf2*g?uZcU;:Vge:/r5!j"_:`/r#_uBC=QC13U#JPhZph-7B%M&Uf4u)>a``^J,
%LK>.A$l[_pM)n&AVG5*s+c0$W'H).QUG.`8(1&AL55uLhLoHoja!#p/K%Nf2gVB!E=US\07[JCE\Qi(eCETgjh)t>I/`(,AA:<DU
%L94_CLU=VN>>X5Dj'CQ6=_XT8RE?p]+t%T6aJs1>3%C"^CZQH?-a:_RhlnGQ=D0k?;`#+KnZOr7o#Gs&mn4hKOd`'R4aJH@+8pN#
%\8`43RoWupdrA#]8W402rU`U0WHE?1_\^0K7>*$()&-.]-q\7fImb0n\l)Lj(oBbGDlqNDY),V;EY3l8>=3\`OSN.-`&'/NiXVe#
%k45nJKHPdEZ>Uc+59QTo?iM/5DL[@dakqL2TDnBR_ghV!TDnFX+POGsM]?J0#($j>7J:6(T4C"6'Nngbd\Y`LBQ?8o_]Sg$:VZc)
%gW&1?0F!$uHMi8?]uIh$%c#Yt]O(H`J,fD<I^Mg(TRH[kIjYKXA3m$$j!n+fd"R"rb90K']a.K?JST#1gVD72W3rh,V4k@PZWka)
%`Ub;dG[t3D9dI;Fg?-IiV#,+-dn_FDU(UtS<$)`->rl5Ak?/E,_gt&+"0ro5S5nc3VZ%4ub1ekC8T[B7hkq3@bjith4iM$[C!kHY
%T18rQC`HMD/%JA#0K_ht_O_GB<g^ccg#E$'&kuoXJVVhA8'ue5%XuJNZk1#IFY=*(:X*sRm+<L7Eff3ijJBZ(Yn70)mVK[-mISh9
%:"S!UY'%<>F<7*%Br4<l0FP+YECc7`R\j/1SK,1*+-pK*M5c[k)feO2gdV4$1bV-5*q`PhpuA\$e*(/;%SNp@9,a'YY.LL0J[f)H
%lScRcY4]03*_DU9;+4dhV\5.;gj6O4Q-qd7+))2n]LdoM\2gb-%N3g<;e"I2<PiRYhl%'TUP,ST\.a\#4u0O2i[jG.C^Y$eZ55Rt
%Wg"SeVDcp*TF$iCag.HZKG(+g9G3uQB,BeC(0AWkj#!7X;Jf,0@tOc$pO!Z=2gaFj9u5E]_3PCFq_I#k9EJH!.sHPtp8f"5)rXR[
%6K@'2S)T-,if@WrRA;=;GXa&XZD]N(nj$A>BoN/.a6mdVGbO[)c>P08@Sn;&oFc^7]8np('DYAMHUr^)M+G\]D(#9+#bCX'HjQ*I
%#lR+h5@#BSKq#Oh3'NLp,%&dK%lXOg0^VLYi<?r8a[@&CcULVKm=SJR1GHKp$.C&UZ,djl>_[MhaU?*]$`q`)-VUOI*2<EQ[jlPB
%lBFK3-&j:DKb:"9c)jV)%0%0u#\C$,S/;gmFV:od`m>0B%QY;"emDY51p>Sjc8:iLI1m;`rdt7E-<R.#%Oi&Nq]??1pNfga%83PA
%1c@cD:uPLu7n!Dk8luW"!5oZ,"E\L^CJ_Yp4kkOXD*IMD3m%1Zl_st=Q\*J"OfrY$]c';E#\&Eafj+_.!DGQrQ9i$ZkU/O<LK5@3
%Fopcp>]ccQch%`:bQPLO_KnG\mX'_Qm9fM@8/\Y+Ph2>JZZUYYKdY#L+qW_0U26X)g/aYG#]76VSS-M#F*Z\n]^8p1MeBO$7r/g9
%UkJiA)@qD]inh&]GDiSj<*2]s3coQ+/N"J&]hMY/'$=u94HDk,;==K!Uq?^6U2(9H-(9/7&[fQA/0R8=a@0Ji'e(cn.]^#+'Pk</
%4%\]-\eP"/16LDT#B0IqO[SnH8*%%+hcF#0O4("f!Elo5:Lqd;"+aEj;\4[QJFV!Nm*5Kketm/k[+]bc,qb_VDYr:9hp=u:9",oX
%Srj;3?$N0fRNuYmV(Kge5_pb9WB#jI0M\-!]Xn$-*Ys9]f=8[kDG-@-J4YVJ/n4!&"sQq"Tp(j3<58h0LB&OT-;"Uk@)0jOAm`*-
%`u.#mQ4E"\0m5AnSmIi78I#PY"C8_m'UKO^`G`t>T`Bo38!r7%,h#G_a<,NB9&>3`]687H+rdeuH"uQ2J<BHOWB2;EGa[1fFGh*5
%b;1).<.YD\:9=Z\8+Ag-6)0oLY,1r!!;P?D-&&46f6dpF\hXJuj1OPu6A4d$YGM$RbDKh82]%:b&GjD5\Nk2&j`3DE9^AfG4/T2e
%Q[<*&KMS)7YMF7`?gX<-%H&,H&:mtL.3&II6XHkM5IC5(r^C]SQI7e@89;lAK_3+5=%QCaYq>3\;qB:C6/-oq>5OO6f-8(oVHG7,
%MTMq`='3D##0fHig?MR-T`X4"JDH[pE9?:&-.#rT%Ga_%+9:XY#'':Ymk3(5/+Uq()2k,d0dk5<F[O/[cqZ+DASL/1_)"J3PLiDZ
%Q-Q,#II=,*1TaRaaME%Jr].1mr8>;-5Ja+5F(ph"h'_tsYY4:]VtX_9:<_ZRKX7"!fZSnIUnJtL=+h/4%^3U"O*?$Drd;[hY%6j6
%Gu[5T'ZDB"PPtA4*G9h"bk?#+7>MurHCgBrLq/C42n"S@7;0i5OSIbOIGaD*Jt$+6cIaeJ'hI9;0iq(bPDVp&c`#\h_\(f"OiGuh
%?.l.H$a;BJ7@r45InZ;!hqdqL0,6?X4!].4Ulj=Z61RBn%sf$%:Q>n/)*!p,ghK0>?1L9YbU)9lnILX=_ROh$b1(pRm<`1J_3\'q
%:kjF9%\fsh>"t,+oqK\A@i]6u3j&QDSIR@0rWI+ebt9Pg1eA?V:#<ea*8fTGbo6j%?^VlW-ab.s:;3*"f'T%l-")6m!@X%r<i1_H
%L+iOY.2dhnUFZ#TH[RKh%R7JjRpTrr(.KDLgtFIob))%DetG"A(<U7&`g9;#\<`[+1-'%Y.tJ;<VY"U!<_<jO0%D$Ch0n1n'=.)X
%RhXQ(\.c`uiQ$K^68q8k$>NOak\>:ppGg4N]1Y?O%q!S(a2'_VmBj@T`.N3FO10Q;YnbOF\Z"X;S5Ep#H1"WQ7rAMkQ^//b.$&JA
%qa@#K7B1&l:o:HUbPplNh"T'?+hN%;b9<>Ch@"nCD[lm@%-8kH<YTjHYD#]F:$G1sQrnVMrnsF`b_#[6.T`g]7)]oJQV_f60&kOo
%:eu;C)ch6L6,io(/hL*$?trCDSa2cB(%GP`W>:H*C87);7p3*DV,(WXQou\!+&)(dJ0I\]'D'!E8:L3TLrGS$++XJe6TR8Z`1%.P
%BI]JdBkr4[%lo]'IeBT\N:NIIIW2`/UIHiHC!jc>G!]ApWhW-7"`X:G,DrWaLTaF]=(.A/jN&<3W[sA?CfqlHJOSCj0^WB&alG2>
%+.c6Xk)eH*9E^'4a=_D!6op,lhVLG$2t[JS%jfk^-8_W!eEISG^`0Y95V7,gU8LY0_B<rRDpN5V2$C?^]t)/tWeb1Sm::?-Sp?LJ
%L`T*e7)4#Vge,]H=P':>Hcap0?IcT;9j5!!JJ/8KH(jZ-&XM!'XIBb\P,7]O9U:m`m)+U,o>G)#XG:YXL(k\>e[LS'=`W/nL(T9e
%KE%ktPGVO^9Tl2f><f1>3dk!,Yn)&,o326s_35G!P'ES%Z8SOABPjK2CR`u^cuH69,.^N%(7@k$[m;<eb"*"0iaAP\)DEN\Du8ZQ
%BKh#=+IsBn)5]thGsVKp7l!)YKObL%HC5LE+%oJJS>8'2FTuj=J369k;:O4-AnW%c9kh)(;NQI*hhSR2hj&>tQ6eQLg^jp]dO\H/
%3d%<D"ufL=fj\XJ[tILQMSk>].LEttX$R2?M:"u_,IW&GpT/^th[!qE)0gHeEB`(*N<aA"l=WJU0]%@?[uZ1>joZD;'Z7$[AcW4X
%;_X+i*D`6*HkPtJK-GVVYG:;SiK>RV!N)qQ[]1kD$7ipqa8PYhY&@Wb<;bb]+O@/nN=_0F;IjJ-&=dj`SV6:alRg+r$3DX%>&[-"
%)MfClDSXJN46nkhWdX)9>;jaCQ;@4(/R)@:KUQ$lSHecf3"`tl`qZ:]Wq-bihCEg$Y/j5UN(RqZ)XtZA^3;]eIs8Du#CB%m--Pt&
%b=E4N8>\FT.5";#WAOdA>;/>lWP]KPA-?HN6Ys9kID"m8nO5E9jkTE@2+c00GIp.88`!,4P>3dHj>N"'/fD\`IG;&F+A0G$[=H;^
%Rl>S9]AR]L,;nA+GMDl+<hR;_YLn[7ppdS6"MUhFe$Q-.IR&gbl]ab&>F0oM5q)I[/"@BD<,KH'd'EDdpO)l81mJGFlNYZ^h[*HL
%H--KD3DJ,E*R`d&dQ(rCo'+LJ`NcN&b*@gn$iDmAn3>e'btADlaPH8";6aJF't/hIV2j<X]D]B.^*R)9Nu"U-/KJNnosNjJ@C,AO
%8!!Tk+)h&=Y6Fc2HCG0$O]/(,Zcss3"#h@Ooa_Ss,A9,Y/R_PO(Y4toKk'i)a].c7$O?@bD;Y1jO0/gidXgIGlPitpY`D_fY'gsV
%8*l't)@%G:&V+:d-89\?0p0nL5"?NP:'LuP@S?Z6cB@2DX\"@1-1BMP(Jphd#\&L(#>pTE.'L#,;+3uA*Psbgbf$gC'1"&fbEI.4
%K"rZ)73_HaQ9p@8W\oc\r?rhHAK$b,l>$`\X$IF.@sb0le#G?J<o&JpMRscs0H'C=PR_?da=7OhfHucUFrteO6X#0He)qS-\Xu2e
%J03:@P2D8gk<FOY!!$Qhf0\HZ?@>;kB:+f7W;f*tq(TW.I<Br(XgV&f3LY;`ee&tu7X\C-r,iq;F]u_@LTg=5M%$?"qM.1pW(eS0
%Y]PLN<CbP'Q"]9eFt;9OG0sBsO@bY*&S;=L<1O>meL`V1mO-D2UX93mE0Sufa]bF]GV*GMSV0CV-Vn$[H^aQkp/9RYie7F4%2Cmj
%UrAJ[<SFL.Wi<fL5MTPul[ss):!mKTqaOjq,GbL32T5(60,5KpP4MnH,4782<'.,K\kXul!:.`K:=H^LhaR_*79VtUQh-0cT$86T
%*?jQADitncgS"<S><O+,eMt7VeLG>N*WR`VgDqS2(/Smk()tfkFm2;'Y$+e$EYh_]&ZVP*$mr,:2so+kj;W4`bd^/-gp8nn=&`^A
%*)RTk[&TWd3B053."h<436/YWBjL%6;HjuV&Z[01"0VILgV260kIV>^TE_<@A<Mg8OuBLMFqDs=Dg%Jt>AIU4P01U?.gDZJJiiVH
%Y:512G?(Z4oSE:S,7nQJ6Q(Q?^M.(t[EIfi7mC81pUJmn&q+U0gH;M*>m.;5GZ\Tgeaooq.UG&25)S00Q#&r$5Mm=/$D@]tKsuDC
%L$8+>>l4S48ZtZ8Q/5rl/B]6/V].Wl#,I_k-1e65)')T'l;5Wrn_0X2'l^Y@Q_8fLB-BKpfl*kPXWJ$1gF%^8p#fqZI^,4;_1\nl
%-&T&j'JhISB6`0oWm6=%D4\R#;%!t%-?1>B6n2(^Wj?fUq"03`r4R!cT0V'=e0%J^4fDL-d&,^1IQ^;+1/7;e(*c/=!Q\4EOrMs&
%_0)(ji3>QoP-T9)9Htf1Nssg'1T*S<4a-41X$:18l[=<.Z<'Fh'HQ>@a3N9;[*(;nj_IY=dKIHMc9U*,V&M:/!J]rB@</_d[b>oe
%6_mXDc,brh0b!0BVX]]>8DY;L9]76:Ze06nI0``eh%?U#TBc?e8+]K[[ej,^m>6GY``0c6&J-`QoA!%TgmFBR%_25A;dheQ;"cN5
%6X\G89]1KBre=;LphenL+2qrHr-9"L=T_:jX0&G$cPjY@R\Yb$KYpTR9PTEU1ioWM-bF1@b)leT\!Qk%?NiS+:E`WBHr7DEF4^+[
%+:BC_H-?u5(41G?H"4Z<fqt0/TQ@nlIonecDkK'6KJJ!)!f.'GVklUJV.a1n7ZM3K7.#Z)@E0Y(@ec^.04^qO#4Mk9mC6UM^lu-(
%gD?:PWQH>a80jFW'Vdft2X7kZfnCqV3&p<dm);dipujeP$S.2n`%U<eQ\J+]Fu&+!]1W&R.>M=%OB-`tCq9ncg!cH`oi#&,f2@91
%eFWCIrBi$T/COmI,p]6@k_c1A#?18M`[Ts_j"HQoAY&!L"QgdT1IrTE3ulY*4Y!,um`6X"@"H+9MiRfUpe?(7<NC$iBBh`^29]2C
%E$/iQoXm.50IK[<bV4`j(8;d+3Kqfu&Vi9;p,&]qfJB<Z1]=@4T9>1],]FD14c[u<c(fJ[I_q+ha#0>qgJY,J2,$TuOk-;he8'1`
%VT<k:5l<U"2@8UY9aL8R:O70Fkch9/UkSFJ9CKUQHs=PjqhjC'&e^e@Oo#d/"9Df1-?Sfl$82a03R!rFZjhc,Ds4jkDOQqucHpMB
%&&p`n%7?SD)hfNam:5)7#5-P,m`cAN9s,Jg,*7u`WdO9k`D.#H9N-#t'Jmef2dKn%eN><D'!P@pc1B^pQP.p+75'(9;t6ojiibPp
%"V=^ld`eSi/5T)4/fn[bfOopYoemn:T)M^2N]?Q"-A$RIVJFmm@^6oUgI4bY3Ie>pj$@W++/Y1@mr8NI,Y^:NO$iU6'_MdpQiNHU
%5h.l0iauc88l>&>Ai2aPXcS'-W,qes/d]AJV(W=sBNIM]"QII/4%"L8%8D73anN>HAZSAp1#4aV(ECCTC%=RlZ'IJg.3Q1Eb$h3T
%fVk-E9DHQ:IIh,MNh^AY[t8KL'NfM9@O?UP&^%jCSZV1Yp(0b2[Y3D7TNn69I&!?#s!3f3Ct)P&Q-)]X]40W9g`utPnO@a7rVL0Z
%$tOn*p@/M/JAD<+L`3&pQP;i/mA@33]]tuAEk?l5Z:Nfqioj8+f7UF92?K=XSshI6,%6g%e<GVF_Z87*d50"Th:\/RJPGD&/u`<V
%_H(a1]&5r*&Y*9c+To*C5$==F1OuGOmfTuYaSTuA\]icpL3`XS+>s<UUof@?M1gmMInY8qcL4"?C5$gji?F!&emtF[!(KP>>560Q
%Z4Tnpm]93Fo)b5VH,S@nirHjeq]WY`Uuk.,P4cV^7E3AK8KjF5NuCQ.L%*5^l89BnUG'4N==aJL%UXQ.%?\SBoM6RtqW=,2%o"iK
%nBL*3oIYemGUS(i&`GCh(B6,7Yj1B-jc$9FXT6Otfp(F%ZDW3'dBBO(QI;C>[rO](iccbGPDu6J]f<UN3m5/JWm6LPEW:#.LGR!D
%HZ3>I.E'3H5KqX$LUV^#BHemFrE9TrN,Fqb=le8HRJ=R3>Ua)mDnuCK+;O.98&osLA/W'/3*fqWg&+`Yd6hqbXD?9If;T[sf9W)J
%G%\b[[[]N=7&6'uW4@t1P_b;gGYf`R!:LPm;=4tXB0FA8-=%bQ_hjW'2J?WC;S*52W^>_79CcC_"E`r9D_ZLYlc/)2P`?"QjZMEr
%+,BX)OYM#hKHjTJ"&q3-_Ed3"AK<>MfB1XT?^:E6`rD&,4(&7%mmq*TW2,0U5VS2:3m(gUg<.Jh8kT\MQXdO>),7KMkf"@TDZ8!F
%6uWL<#S6Mg;o.#Pc?b%NAN8.7kE8Hp@cg&fB/YZ^MrgHJ:k/',]jL58B8#ON-<%koF!r]V[(*>=jaO?YR>CINaO=EaEu!;4-D>G:
%A!Z`>PruhaVUdUK9_QGu.CW=:(\<oq'i$Ha5-eL<8@)V_rN0;.hC1l\V=\9knhSdBP3Zb7"-shK/Iuh-kVHPAgV<Wi?[hd\s+rOo
%?T^u0Tq0n8qibs8_K?cHRB[bU^m.Cbc0fE0C@0^0>RCS=IjPu^hNd5<K*bC+)C_l^DpW9iX3(boDN.Fi'q)`nD$t2s$%B2^[%>48
%HG>\2?s>euM0f-Ig*"Y(F9iE$]7PF)3HCs<4iKm:Z,C]qi"K:hLK_&\ms:<=i2'tZZIi4PJQde'Ks@a_F@SGnLO63pe+4>N3?7PG
%F'P:t<Bj\:<]PQ5=,9c`B:'ZD070'=/<[(&_h\3]_p@^qJBY@\RkUO5T`(nYYDfDZNQ1T3]4/*ND>fu1>[[FkEpMHf)"&.YB0e3:
%X=Fc:[^A`;#:l[TW%7c0[Z6ceZA&%8#j1ZV5$"X0i'4rcd5NSN2fDcqmo$<YV$DGm1<d@l&SF>+f,Cf;/@KO";UM!B^bQsqIs>58
%hWJtH8Z*Q-JAF;;!ah)a_Kjoo4T&T(bu7-R&pYl(#"n=O,ke960o=i!QP46'bl%17gKCrV.D;gX!@lMHdpE"_<S`&aM;d=q*?:Gi
%pCFfmCOka>pZK?)pA^O,No@0&B'nedo>0]WaIdl*C:L1AHb!6@JX:=]*@KD0%jp8%+&5PTfft:*6i-@)UT+-#ki(YWX>W(Yg<9+n
%g2B[f1'!p7J(H46g-/cqmaM('G<c$UMj*<7nnN(-_,HLjI_*qYr.W[u-eW(&O`/k"A3Ynk`IIeQ-hG+O\I\H5pjAl+&_dQ[%+nFl
%]%j/(>,WuH(<B==gWhTK*7Q09kmi&@YDkau5/U4$R0Md\nu<]f%'j"7F(:`\'r09^Sd#<F0YIr9b<k=UWZ'aCG=@hhBoQsR<e7p4
%kT\b!UQQ=-5kr1mIehqNe:'rej-+F"ZU,,[QP'7hX/>)D\tLecCKI`tmegSF6WAJ7!/t154>,EUV/Lnqioi@7QL^N/oAh]o*JSQO
%,s?N92fNCk&%_1OGQWZ5mXUi5,YdQ&BLD#BRX4'.\g:Nf?1UWSc)-u7=]XET#R\e4joOi:k+JV=@1Ni`Vea8_\SkrS!:#F;;<!g-
%cfULuNclE_[9\WPTml_t/,P$"r%j8.kJu!,eg,Vm3O"s'hgO335Q'H.$)Ck3Oq,I4/6m+MG19s9$\E1aUUHpsbf2Et/"CZM"8.i`
%;3*rX;^pgf&6f^R^k\"`^!2ub<jm8/,Ll'Fh/<YFDbSpV$/+Wt`X]EBnWT?3*#Rhf[7rF+CdP6$92N`VU^'_-q%="V;K,/NJONCu
%f)DASNX>c91eqD,0QnL8jRM!uqd+pe"o.FfMbE4A8i/oj5SCJ'L-E64q)'ttL-k8#fM<KB0[7ueVuum4!.UQ9T!j,gC"=0DFr]T:
%<u$e%o8b'F[gQY%9s_GdTlcG-of]UB2bI%aWuak-HblW.15ipW\)DGO+Nkq<4^=6U0a?`dTR>C)KuLZSTPH..<*ta*:==$VBqTAW
%]FGW\<K)-CD@q:N?"rr)NYiAV'HoEgMG6W@eK%FieC'=3lABKTFd4J-P;(*`KGn5m+O\fOc?,g#.b3'8KtR#Z'ssj;MkhEq+(A;I
%)>2\Ue^gPm<erf'UTt3o*>ju^cp?@:W[p\-P,,-0(BJF8JJtK3&qb-rI'^@CJ:_EM$e#=EUA*u3fujiO7[&P2f?Q./bC0!NRS+pJ
%e:g41l_4A:%"dsn%)ft]B8[J=lpQE,b;q[-aqO3.=3?Dto]gXYkK=C&Ph$bo!qH<9s-)d[ZR)(CpkHOt[-O<[5h6K]TaZ!d#t_!t
%"ZGWXG1tZM3m;npPC_@,mO;8=$C^076YY[BPaeF5&J0K,%XK&h."ME(P%%?@_\'PV$EtlHJo8oEj_0gD)7fR5o8+KPH*qH@VI!so
%OHQ[J**_N7kNGpI-T*I^Ga=DS3$oLHI8?mW&#h$F\:(`8F,X4[rP/V8riU$33QkK>_cW&XWoQ\r(5=uKMTjS6VrT*4b.#lWg-DfP
%[ZNp@Wgq&1SAmO(e@@kZ"FZ6]Jf_+t@QjE9XpmkG"tB5>[L`!R<e]@ko`_-W"U>@4"/Nc-ik<f7Fql!%K*E8`*1*Z!(^Y&.+_ZHC
%r-*_AiNl"!mg$LZ1^QiMU;KsdK0UF?iT?/-HsL&O>qD$l<6\g-+XA4!492$W::_"gJPN>nWl"KDhPf/\6I`1XKmT<FOSrArIUcB/
%"7u3m"<iLdfM9D:P4jJ9R`!^ig,$UDcq$ZW-Y_NnDk\[i(aQnNWCICS3DZCd)WEm14s.JW"ZRG"fU0S0/!/E6[CIf^WXWZ,f[r[-
%nK=ZrGM]8>R+PDG`B039))>QoJ?[[[J$?h<q;K%t?i)TdS[HLnM\R@>.SMN"B3DuG+pn.jAqY_S[`$bCEKVn&?g[dA\46[RkEbJ?
%1.g5[<Qnpu?/b=:S2haCbR'JY_TNPX'aV$I>YeM.M-'U"&HjkLnSrmihY(J=Zufra'k,B@!*srjbfEM_OE,8"'&@K;<m;!nJ=k)[
%F@o@eB;f^@4?O*g+In[J.P]J/BoFg9-/.U.%E_!J-U-b18Lu`WM8!3370H,L=25ma%!nJ26R]5Lnf5oO6HLpQZuRp:6pi$+_(QL_
%1<,OFK?WYaI4JKjUL8DqL[gMDgCg1%Zq'5,7k:;cc^;NgMuSbR^ek2fFPg^oh<W.%Ec&1_Vou"i>gm4uL*-!Z:[u50J49Qu;2<:a
%8.se]3"_o`SX(7DT=T,i?4>a0ots<Rk!hHijek6hE^0<2ZT9C%F1QM4nie,1`@:uEI"6+I_ImEn?65!MO0_jc\94J"ILL4UoEK=\
%ZEA$(HBfb[>9p04c-Ml*g6o9PKsR@)/*AGl(H,o$#jIQ61fPF[=6b:fo%JC&%,i!)lgPV1=nh=mB!kI7a+!<"\nkL\Ph&!ch,)e_
%l3o=IG5(uD,PpuKmE)LGMLe%+E3k*KKRZN$39r3tm,noY61l&Bjk7gkLtnPMfh^FV<fUtP;6qo=e5ErsVnVKU\_YpGoN$XTjnseC
%Rt#]jS#RTFK]M_lC/u/1rH84&I8Kt'[[67bVk1*#)`JM]>C:hS00^G0$4nBMm,\toikl'Bh#)kkc:O<%#&t6ZbjHpMZeS5jiSAkU
%@*Lod(L2*q2'Irt+nq`pNNC;NNdlbuart's_lhSg4hnVl9\93E6EL>N:@4L!KC@^ibE$!0R;i1uI9_qrVV:2GfraL1;JdJ5CtW@q
%\<<S<>UlT14$0Aq!c5b2GSVhRG?SL?c\-'[-p\kLp1oO^GNr8Q`Ek"q9-P/d..C"$,ZhL'R$MlX]d'[4KeZ&L6OiR7)N"Y"ilR_d
%)TC29BfV$k@d`@l8Qoa65Y\]JUI1B"*uGeL)gr^*\!CimS=*9o_P:OJJ$%c?,?7@k,3E;FcF!Z[n\M+djbiVUfct"Y]B!&rCS8$"
%I4IA]``"?RU\B8iOE=-:,-c4,qR\=R4`"(S)`-HGj5H$5c)M9TSe0G_85I]fU,gpLn0(U7s2!I(\H%YqC."+&HJF>\Z.Qf\5V`1a
%!-'FiJtIS`rY+CbJ^ii!!1O!r"7gTeMn[?$>q/iKaVN;p8WS_&UnfDj^Wtm=5XD6r\<5s>mM.V,(<IMc9fOQsCmk,OA].T#koJMC
%")]OXOUM=pKJooL.Nro^6Z?$K-NO_^5!An>3ZRn6%NsL'7fN6RWP;qH#"`PrF79\285/:CdOLYuQnnTW4/_is;Z7:c$"(NImYb$K
%`sV1U'Y+AfKNbq55`dGD*tRu+G>ln3M5k(46(q4VF<"c\kAlo73O$d6Onjm/j&WWW6oH)Tod//PZU=p]PCh-4#MU(5lE8=H_=o$l
%a<cBi>r=I]GH&p'[b7_-HEPfNLY@%a3YZ@2AU0PjYp20SIHcf&aFfrA:`Nq@q>.%nYNnp@M;>!21.AIGQ4D8EP9TO.b"U-O=D!I0
%-s'#/YR>JI2Y04Y#qpkZk7<=BX\8I#J(1[7KA(=KIn98Oif"`lF<#$3(jgc=2\'-SYT[`Nm2rR8Omm+X#*^nBmAF:pZ>A8Zar1U@
%BjC&1^33VIU=YerAWR<L%8&/Uo@$S%>\Is^1abjC1!,ZpBSog#Qu-)AZtHMWNI+*JT3tj>otrUudPP!Ym<O+aqX3HBKA/MEqN1.c
%io%YLD,mSkX_b+(=H3fj4i*j\J'o"6s/8.`ko"GiIF`85_j[>T#ZUD-)Q.kcWs1?JZa)CAVaQ^/W+t^e7S..qs"UCl-N6F+_Y.]L
%Hi-s%GUd40pq&o^$#-gWDS!qX_C0)=>%A0^SM^c?%o->bQt<3CLWp.G)TCD%/'RNl[5X1;[49<"p(,W://G9Be>rbVm7*@Rlms>"
%VP4mt1a,/qhPtTd=?KMta7YA>]nn4^X!\*"Q6qaIi"ks,&;s,>U%+5ldSDWr3GFEi!6^NVf#s9`j(K&]@mbOd]!DYHBCY]@VT7F8
%"`)&u*=;#5j7N"NmQ,pLh0*0@\e=$b-[b<\gRbHT0+O:mhNh$9N7?j^W^`BdB*C23<J+\J;.=pIb%jL)DHW2I8'2<,?(-MK7NDrf
%^3%CPEUcMr3_U5^A[7mO[`NoD<;PIt)^=_qUW\2Z1tgoo9N;#F1LXb5$E5t=4CJXQ!`,f>/b8=Hl>]uEJ/,&JoGCRa-rD\R\Ta@i
%RjcTUiN[-PL$h>J(6*'.m-U.@c-D<dmp^hb^r+t3Xlb2`&S_K+pcrB4,!"&5`@6L?%8!`7!Q%JV(e!#$6Fs<BQ=Csd08rNj5U.Ml
%lA>g3O"_i@PF+3q"g$kG37@@#4^P-"#OC1ibX,]t"<A#_DAnt^[%qCWRr7%`U=(C%R]%A>kU_ntVNV@!nO\Nb-`-\k/oZUJXm7i5
%%Q.KPS>?JAs6?eY#6K723J/j2_MH-b,S3\F3hA<-YUFc"<7b-YBAZT_k/aHLG9i,=n^DC)HpDq#B0C2qh!lP-KEqn^)-]?nP5@94
%fS#Zj04&Z';f%P/Jq0SYM3J`<JY7l!jlhCXRTJS<?\G5Amki-R]U]r'6%a(1m2!LG==f7O\joM+mWgKQ6j'SJYQ\JL==j,;o<q3p
%*CA@H$j\Eaj=pX0+tC/)&$.n6VYk"'IC@I3TBK$'G]LptaMWs08uR>Ts4W1o/>iMdTSRX[aLNUjg.p@k*b`useu3TpHV7iQ)hWJI
%2PAsimM!ra.XHVLLpJhT*^Q4Xf=JcV)bZe8Vk,S1E%Ec&=p0l2l\C#7?M>mSYQ;SIjKN&R\s\W1CEqtl%*jRtH"iE'03&2Df(k=S
%YW6RR%kg@_WNpu(1uq.ClE),?RXF'6KR@DH;r!c6i6Mq'qlQ94m<D8ZP$>:5eg^#:T5W_2kEfRjJsb(u(RQ]_-A`#ucX!THUFV:0
%$2)7akNl&7>r%>*GK>#_UUY_GO@Q#^k!l!I_^0G^c1$s"\e^t>6fSUaIFJ"8H#tXYB+Spq[3NRfOdZio6ZS^$<hcrY=VjbemVi\5
%a51Q'7`?8B*""Z2^C%blbUs(MYg(cgD2?oG"5"%u>m%%]ah=E!rJnXI^PbTOmlk/RZpJ^LVFs`"9T9d5GR5iEn4?kiCd^nlq<1s=
%dW,&+QNPThFfA^EK>L2dg'.#B2&T?ofJ4>%^0Yi',0%R(_6!r@[knP[fGMt(0B@T2:'#dN&]-pg!K$tSb,FBD(XL%:QbV;)s%64@
%N["[`)FC[&=ambabV`=iKWrH2;LPR$!n5r!=U@UI0Fa65@/nT]5c#N1[\@+6I!q)G$2(4`?'&f5?\J2#.hu\ri(P7\P40KJ.WNB<
%5g6)]7Y]Z3I`SDS;q>NEHWS?*VWbU0b>kEJef-%1S`Y!.+iuXH1kd9jA=@iSo)YE,\#s/W*+;kBM8KndEL:nb&j2h%8<_H\?r10Y
%As>&G'a2p%$I_uq(>Cm9)Lpj4%lVjKh05AlLjePJ*)sEUL_Zk2j#+94()sl>H0$R]d!h'A47[b)>oHA$GT>OL9;,aLRfB](FLdB1
%jCF#LP"p%<#jsf3m8gfh%f5u62i9D:0/NOIO$oHgCR&"(?&fib*56[B;X,7MNb>#KScWM?M8Y5fa15o`$s]-:?.>L%5WK1,?Ss(.
%WnGK66n3m>q)R[qY%:B/7;MarE#Y2OKC^9\jX,G&E-htuEIdF.$4%o6Q7Yo'YVBK"#Ef]D-\8BS8X<Y.3=&jR_.,lW=Uu7Zd;'>T
%YYOr#PFl<Oe(rXD/+&dc(n/3$j9LjV#9X'#e1=(pbhMu8gW$U%(PBBmh_1%L%`2@@NO!VZc%.."?0-T1'%"G(YZg:Tk_XXFo`jT#
%8\d`815JtkEbD#?Y8&9Ag#9j#8s'FrcNlU,\%Xks,hD^pNb2>=7;MtZ<jAKQVo<MA=K>Z@"0ck3;UH%1g''V>Ho6h@U$q!@nWDB\
%%&%C.q-i>petDs6\%e45G&U$<S%#`VNrYNA03N6_E"LuacgcPBDiN4]Mc+%E)_'uB!e]-qmqLNDG=T4U[YLgq=K1.0$3I2\_PY+\
%'ML`Kf:/g>i;]4+;mKVp_5ibG!bm6`VR:8MZPH:0MF`R)lZbsfd'u*(pUOo&QmB*_B:VsaF0%li5-nEO)RTYI;n0m@e4&"*)9RhG
%K@BFur3B9sS&m5dasfVMDP3dq5Z28LgX4N7pEZl0.^+e?k"t'Z*N"q0*1OLE0(M!$K#o`9;50I3TRe^'T!V'9i2SO]o"esdCL6S&
%]F2f8KfD'#q@^PXE18keS->A0r2Nm*5S=m"].hVdjO>d$mh?O:\0g>VB<`;*Uj*6g@KM4pgQVOAGH4V+p1c3[BCnYVQrBsn[n&]O
%$V=@nlDeHS3r<lRgE?iuA\ZH.bLCf8Jg=s7'-Ps>C0U4P9qYMRokHC;a@b%,FqlARYt<Of+e*lM-#*Z;=+LJsSQJVZBoLSN!#V4s
%2\j!c`'Dl>j6(^V9R=da-AgJZ'akW8HrVn=-saK*1gqGu@%klQKcZTm-b8qoQL'p`A1Co%QW-Ck$c[/9rdtT#nCg5A!15)=='2[D
%"Yu)pCGnkW,6="8;?j?n.9!WMUTC6g*^"=lT2<F=bf.@Nn!ei5XOX\Y:=3(.EgL/UE8Yrj(`G?`i$kZ5Xc!jDh0jbT"YXI>J@`W!
%`9M5QJM)hCAj#J$62E5@Y_'FK3#aT?N>P/"@_D(/er+3S"^MB[ZG\i`Qe&cGSRY8=`=YQZ6CX)[frg<I)qJQ8?W8&:8.`WBG'6r$
%"kWW21Yu=hjn+2.`[,:2ggIppI[.='LD8.r5e@7po6M0#_I?3[Qb]Dc7eq8o=MdT5;d]Vmbbl$;+;n5;8gL@R&#AZ,<P0Z8RMiH+
%"HIh&72RFZPPlOuS5mnL/ZlYqlgbPsb.r>2>Ge_jrSV8E>L+\fHl:ot:gC?"I#+b:;2&,(nj<]9f:0ck4d,E>!!uR<Vq_MJ.8C9U
%f)0'*o'e`"Su&OI>!(4%T/Ah:8a";bUG\<d1VIZZ>:;[!nt56)q/+:pVgo\h*?6WXV4U5B>TE]dnoLS'2;M?h&D(pI:1D`bW:i`u
%[l7sWcDEo>;Xg^^?h*>SVN,NXe*\Pu[+nX=Dic7MN;H[Hc;Bc^JM\Y8iJE30'<fApI;DWpM1D$,1`PH(;eeC0Q">.9Rnt;08c#IZ
%.6WNbf1uUF3!S$U`BQS?ntR1h>WV@*P;K>6k9OmGUG"0MX1uqWG+^lgPa2Fb=dtsSa9&el`cFJd#?da?M!3S!FA9Er6#"@J(#!Af
%7'sU>K1fNAL+UD5Ah;LbV()mA3'@9l2@bR'$uo>],#PmLac7(c[Qb8cgiY'P;T']7!tt.cF?P(M=K&K[UWVM.CC*44]08IWB%T2D
%B8"3:Te,37AcbO1/Qk1E,%7n&>hAlm1%HFKn=O*,#L5Y02TSFr<H+6YPm.C!23$]?V?a%4lHaUgn9JcBA22i6Cn`gL%d6/@YQJ+4
%*tj\e?fU7sq>7Pm9poc)eP$ec;L*eq35&m`&7!tgA;o%%CX7Bm9kHV=jCh%JA5Z(,ES-t1XjjJ^jjYo<VU-+4"<i?%dVsrW&(sM_
%D:<c\0_iu=T8;Yk8(9.<Wk,k1pOiD+,DE78_m:?hP-:=G>LXA.%*t/FA_b(@a"MoglJdH8R'ZGM;`c,3)H/#qda>ula?kn>H.$=h
%Y`]m_*<f=i6Hh/\6WIce4B7nG#96;&c@Jhp2*b<K3<>?l`ug^nG_&)(dm*_nLdV9GHB?UO3Q2cX7SaRrQu4<WK9+1[fI^CmL7kM,
%AXO4=PuO'F;RpQ(-'$msEiG$$P\`3-,5j4EKP3a"HOl>1Zokp_->d0*)dcMm7rZ*V#)1!D\>a"paE"',?<!g;CnpT65(#HFKU>@H
%_hW,1\11<V^S6Nn0#q==/2^T!DZpP=>n8smLa$$BcMCt"hnMeoEh+$@h`T`%!NaO+EdeIYW1VS5bR?nslJOXK\mI.H3UOon';gc#
%E7%brT@KUPE/JB6@hbR',Nb!Vau.5b'Wdk9k$eQ7PgDmCF;,D7b_L"G8SsafS)_5.V.&"ZM2i-&f/UH3%dPdBT4k.dBj)b6n219a
%LG97*UA+G#W;c.Mkj&pM$?8%<+,5hDBN?&7<3RQK*3^52^3#RuA?39:NV@Q*(sUn!'3OOV7&[O0e&!dNG)O/^S8O7t:\G7O6Q"HI
%,R5?2G9R\&[-:YF!;N4Rg&($'D-G6j)_k7X.%uQdr.$U7l(%uqc>`C@_`p].61\_@i]VOLY$2PPS\?19l;-?%5Y4d'f4q6b\mlE&
%=(m%X5I>A&j^M'50*RGKGA!Ai[5/e50K)cUC"*0cT5lp-Aq6DGZk7*RR[38+oFlM.Zj=l-E6PU^htNe#"CEa'#BmG<lnSk:HI9c3
%IgFh_cY?[D16"P+%lX]:P[$C&l,.2NF;@UBAU1%@JT"X'lPlB]Ni0EhILb&V&*DSt:?+(qBoHhbA*N,!s.6B'n+_#>!sC'R#T;?m
%+E5G4q!f$r\ZYL1EgZdqT7?GS?N9u-rmU]cJ,R]Cs-qpFgX!Y3bJ/EBro1]jp)eb_Dnl2:s8&XcJ+qEqro*UdrP(RHqX$NI1]Hsk
%s82J]55iCfIfB<Gq3U";r9<tUo3_J3(0pK:n/$TEf73Z>J,7^q"/mGap]~>
%AI9_PrivateDataEnd
