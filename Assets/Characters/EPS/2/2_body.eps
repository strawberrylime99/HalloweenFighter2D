%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 109 94
%%HiResBoundingBox: 0 0 108.3236 93.2760
%%CropBox: 0 0 108.3236 93.2760
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 3 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:57:20+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:57:20+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:57:20+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FUt8w&#xA;+ZdC8uaZJqmt3sVjYxbNLKaVbqFRRVnY02VQTitPFNR/5yB85+abqWw/LDy3JdRIeD6xer8Ck9+N&#xA;ViTxHqP/ALHImYDKgOaQXXkr87/McjDXfOMyFq87SwdxF8isP1eL8DlRzLxBL3/5xwMrepe6vJNN&#xA;Q1LTQh+tf2uWR8UrxoGX/nHwRSFrTUpYpE+yxZGI+TIB+vHxSvGs/QP5weVXDaP5pvOCbpDJJIYf&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:cc5de35a-9675-2747-9ccc-f99b554d78b7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:cc5de35a-9675-2747-9ccc-f99b554d78b7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ad1d1ccb-b4b0-474f-b605-2ebb6a15f7a1</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cc5de35a-9675-2747-9ccc-f99b554d78b7</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:57:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>71.778552</stDim:w>
            <stDim:h>51.380523</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -93.2759 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 93.2759 li
108.324 93.2759 li
108.324 0 li
cp
clp
133.884 63.9204 mo
133.704 63.6235 133.436 63.3755 133.124 63.1836 cv
133.043 62.4878 132.961 61.7925 132.884 61.0972 cv
132.24 55.291 132.105 47.7466 126.969 43.8066 cv
119.302 37.9243 105.87 52.4971 113.167 58.8315 cv
113.281 60.3237 114.167 61.8555 114.71 63.3452 cv
116.207 67.4536 117.429 71.6099 117.978 75.9624 cv
118.522 80.2759 118.462 84.6411 117.818 88.9385 cv
117.462 91.3096 116.84 93.6226 116.373 95.9707 cv
116.117 97.1523 115.917 98.3428 115.772 99.543 cv
115.686 99.9966 115.626 100.354 115.587 100.639 cv
113.268 100.945 112.066 103.379 113.548 105.407 cv
113.775 105.716 116.466 108.986 116.318 109.339 cv
115.807 110.562 116.383 112.08 117.429 112.815 cv
119.287 114.121 120.724 114.084 122.862 113.397 cv
123.008 113.351 123.143 113.301 123.271 113.252 cv
124.046 114.09 125.247 114.563 126.592 114.069 cv
127.27 113.925 127.948 113.78 128.626 113.635 cv
129.319 113.605 129.908 113.394 130.384 113.068 cv
139.131 111.789 133.425 98.0859 133.685 93.124 cv
134.157 84.1162 138.98 72.375 133.884 63.9204 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.737255 .772549 .654902 rgb
f
128.584 33.668 mo
127.82 34.0938 127.075 34.293 126.55 35.0356 cv
126.283 35.4116 126.098 36.7852 125.92 36.8916 cv
125.741 36.999 124.212 36.3994 123.726 36.3755 cv
122.323 36.3052 121.308 37.0195 119.997 37.2017 cv
118.235 37.4463 117.621 36.562 117.058 35.3066 cv
125.124 33.7192 131.536 27.751 135.956 21.0308 cv
136.531 22.2505 136.94 23.4355 137.073 24.5093 cv
136.87 24.9985 136.848 25.5747 137.135 26.1719 cv
137.14 26.1826 137.145 26.1938 137.15 26.2046 cv
134.988 29.7314 132.22 31.6426 128.584 33.668 cv
cp
141.089 25.6147 mo
141.111 25.5005 141.125 25.3872 141.126 25.2773 cv
141.156 20.3589 136.419 14.0723 133.557 10.3794 cv
130.434 6.34912 126.72 2.93018 122.555 .0800789 cv
121.886 1.19922 121.394 2.52979 120.659 3.63818 cv
123.661 5.72168 126.425 8.11328 128.844 10.9023 cv
130.114 12.3647 132.023 14.6538 133.689 17.1265 cv
133.686 17.1309 133.683 17.1333 133.681 17.1372 cv
129.876 23.5532 123.597 30.5059 115.687 31.5439 cv
115.554 31.561 115.432 31.5942 115.314 31.6309 cv
115.313 31.6284 115.311 31.6265 115.31 31.624 cv
115.127 31.1567 114.949 30.6855 114.76 30.2212 cv
114.629 29.8984 114.439 29.6455 114.218 29.4448 cv
113.707 28.4253 113.196 27.4053 112.685 26.3857 cv
111.532 24.084 108.08 26.1074 109.232 28.4048 cv
110.065 30.0684 110.899 31.7319 111.733 33.3955 cv
112.779 36.1123 113.712 38.8784 114.546 41.6758 cv
116.02 41.6309 117.483 41.9253 118.953 41.5786 cv
119.854 41.3237 120.69 40.9795 121.715 40.7891 cv
124.737 40.2271 124.611 41.5996 126.408 41.3823 cv
128.406 41.1406 128.736 40.5669 129.715 38.9702 cv
131.094 36.7207 132.982 36.1777 135.216 34.46 cv
137.694 32.5547 139.558 30.1997 141.06 27.4766 cv
141.434 26.7969 141.378 26.1411 141.089 25.6147 cv
cp
.156863 .113725 .113725 rgb
f
40.6526 115.822 mo
39.5862 115.691 38.5359 115.621 37.5466 115.61 cv
37.533 115.515 37.5242 115.42 37.4959 115.319 cv
36.4597 111.59 36.0886 106.607 37.9055 103.065 cv
38.6711 103.164 39.4382 103.251 40.2048 103.343 cv
39.2766 107.507 39.4094 111.744 40.6526 115.822 cv
cp
77.4592 103.098 mo
76.3059 101.451 73.3777 101.125 71.533 100.987 cv
66.7073 100.627 61.7947 100.984 56.9509 100.764 cv
46.8118 100.304 36.7205 99.0942 26.719 97.3828 cv
22.3137 96.6289 11.3196 92.0752 9.74683 99.0879 cv
9.65992 99.4761 9.68824 99.8247 9.78443 100.136 cv
7.80055 104.276 5.73414 108.345 4.23219 112.688 cv
2.74537 116.985 .646248 120.846 .5066 125.48 cv
.428963 128.055 4.42896 128.053 4.5066 125.48 cv
4.63306 121.27 6.74097 117.648 8.08961 113.75 cv
9.50758 109.65 11.4944 105.807 13.363 101.896 cv
13.6038 101.392 13.6194 100.904 13.4988 100.469 cv
13.5378 100.368 13.5779 100.267 13.6043 100.151 cv
13.9631 98.5503 28.7625 101.526 33.7805 102.465 cv
32.1365 106.666 32.4089 111.711 33.5418 116.008 cv
27.5984 117.41 23.4407 122.531 22.6248 128.74 cv
22.2903 131.284 26.2937 131.26 26.6248 128.74 cv
27.3655 123.102 32.1394 119.518 37.5544 119.638 cv
39.947 119.69 43.1262 120.225 45.3538 121.277 cv
48.8621 122.934 49.5247 125.062 50.7888 128.328 cv
51.7083 130.703 55.5774 129.671 54.6462 127.265 cv
53.5232 124.364 52.408 120.817 49.7776 118.915 cv
48.4744 117.973 46.8059 117.256 45.0159 116.726 cv
45.0252 116.492 44.9944 116.241 44.8962 115.97 cv
43.4426 111.954 43.1931 107.913 44.2039 103.791 cv
47.4807 104.131 50.7634 104.415 54.0535 104.61 cv
57.2722 104.801 60.4949 104.919 63.719 104.956 cv
65.9817 104.982 72.2195 103.919 73.928 105.984 cv
75.0969 107.397 74.3367 113.578 74.3147 115.409 cv
74.2629 119.642 73.8933 123.842 73.2712 128.029 cv
72.8972 130.547 76.7507 131.634 77.1282 129.093 cv
77.803 124.553 78.2625 120.003 78.3147 115.409 cv
78.3484 112.438 79.2205 105.613 77.4592 103.098 cv
cp
f
105.007 36.105 mo
104.843 35.6269 104.589 35.2544 104.28 34.977 cv
104.867 28.1445 97.7385 22.457 93.1067 18.2729 cv
86.1043 11.9478 77.2922 8.15234 68.4495 5.10498 cv
60.238 2.2749 51.4392 .730469 42.8118 2.40576 cv
38.5378 3.23535 32.6917 5.20313 28.8098 8.52783 cv
26.1658 9.06934 24.1209 11.5703 22.0964 13.5415 cv
17.8494 17.6777 13.5603 21.7764 9.36549 25.9663 cv
3.25709 32.0674 -.252677 39.9062 7.51002 46.2788 cv
13.0349 50.8144 20.5042 57.0693 25.8816 49.1279 cv
26.2507 48.5825 27.2092 45.9697 28.1682 46.0625 cv
29.2991 46.1719 29.0676 49.5669 29.1516 50.5835 cv
29.3806 53.3525 29.3093 56.1426 29.0735 58.9092 cv
28.5657 64.8691 26.3025 70.7778 26.1414 76.7241 cv
25.822 77.6572 25.614 78.5679 25.5652 79.6274 cv
25.5183 80.6479 26.156 81.6274 27.0066 82.1396 cv
29.6594 83.7378 32.9045 84.6113 35.7327 85.9297 cv
38.1819 87.0713 40.5584 87.5767 43.2297 87.8911 cv
44.3782 88.0264 45.6062 88.2393 46.8455 88.4082 cv
47.1843 89.2046 47.8357 89.8696 48.7346 90.1162 cv
50.427 90.5801 51.7805 90.8018 53.5378 90.3765 cv
55.4158 89.9219 57.7161 87.6748 59.4465 87.5635 cv
60.178 87.5161 62.1101 88.7925 63.0344 88.9351 cv
64.9841 89.2363 66.2776 89.3721 68.1257 90.0957 cv
71.2732 91.3286 72.1995 90.0527 75.1404 88.8013 cv
77.5217 87.7881 76.0999 88.1494 78.867 88.6914 cv
79.3201 88.7803 82.4666 88.5913 82.2415 88.355 cv
84.3977 90.6177 87.7815 88.2319 87.2044 85.4663 cv
85.5339 77.4634 85.9963 69.2412 84.7117 61.1836 cv
84.3005 58.6045 83.5579 56.126 82.7166 53.6797 cv
85.5212 52.8394 88.0188 51.1211 90.9119 50.2983 cv
93.9011 49.4482 96.3337 49.4414 98.3181 46.8071 cv
98.7825 46.1909 99.115 45.4995 99.4822 44.8228 cv
99.6194 44.5698 100.348 43.4731 100.553 42.9648 cv
101.141 42.8486 102.297 42.4478 102.628 42.2329 cv
104.65 40.9228 105.786 38.3848 105.007 36.105 cv
cp
.737255 .772549 .654902 rgb
f
69.7278 6.19629 mo
69.1848 5.53662 68.2859 5.19287 67.4553 5.09082 cv
65.8562 4.89404 64.2586 4.6875 62.6599 4.48633 cv
62.2825 3.65625 61.5178 3.0459 60.4187 3.14502 cv
58.9138 3.28027 57.4055 3.37744 55.8967 3.46924 cv
55.492 3.25879 55.0374 3.05957 54.5222 2.87012 cv
52.0711 1.97022 49.7673 2.83106 47.4216 3.70654 cv
45.095 3.4458 42.7322 3.65283 41.5984 5.31494 cv
41.3704 5.64893 41.53 6.16895 41.8713 6.35693 cv
42.9739 6.96338 44.0681 6.74463 45.2361 6.60254 cv
45.2473 6.60156 45.2566 6.60352 45.2678 6.60254 cv
45.5227 6.57715 45.7761 6.55225 46.0291 6.52979 cv
47.8333 6.42236 49.5798 6.48926 51.3391 6.94385 cv
51.3782 6.9541 51.4138 6.95557 51.4509 6.96191 cv
51.7878 7.45264 52.3367 7.82813 53.1101 7.91211 cv
53.2761 7.93018 53.4373 7.95557 53.6018 7.97607 cv
53.8992 8.17676 54.1814 8.3999 54.4578 8.64014 cv
54.5813 8.99268 54.634 9.38623 54.6638 9.84717 cv
54.0291 9.97021 53.3992 10.0498 52.7898 10.0332 cv
51.7117 10.0039 51.1077 10.686 50.9685 11.4888 cv
50.0042 12.2642 50.0422 13.6504 50.6257 14.6636 cv
50.4197 14.958 50.2249 15.2632 50.0686 15.6035 cv
49.5042 16.832 49.8167 18.2329 50.7771 18.9673 cv
50.1419 19.2114 49.4973 19.4399 48.8303 19.6064 cv
48.3416 19.7285 47.8538 19.8325 47.3684 19.918 cv
46.905 18.5488 44.6306 18.6782 43.4802 18.4224 cv
41.4768 17.9775 39.9138 16.5483 38.1462 15.604 cv
38.1462 15.6191 li
37.0276 14.9717 35.613 15.7539 35.4871 17 cv
34.8401 17.3354 34.3972 18.1523 34.8523 18.896 cv
35.9426 20.6777 37.1628 22.3027 39.1824 23.0669 cv
40.5418 23.5811 42.2878 24.0356 43.8152 23.792 cv
44.78 23.937 45.7688 23.9873 46.7717 23.9365 cv
49.9212 23.7773 54.6033 22.8887 56.9021 20.332 cv
58.4705 19.4678 59.9578 18.4653 61.3284 17.3008 cv
64.8152 15.9912 69.9612 12.644 70.863 9.05371 cv
71.178 7.79932 70.635 6.7544 69.7278 6.19629 cv
cp
.619608 .627451 .529412 rgb
f
69.7649 6.46484 mo
66.4837 5.25781 63.0598 2.98242 59.4456 3.29688 cv
56.0256 3.59424 52.4778 3.29785 49.0491 3.67139 cv
48.866 3.56494 48.6531 3.51465 48.4456 3.5752 cv
48.0178 3.69922 47.5901 3.82324 47.1624 3.94727 cv
45.9431 4.30078 45.9622 6.0376 47.1624 6.40088 cv
49.8001 7.19922 52.845 7.54883 55.7019 7.50879 cv
56.5276 8.79932 58.0984 9.39697 59.5637 10.0469 cv
60.2781 10.3633 61.365 10.5811 62.1389 10.9634 cv
62.0432 11.373 62.0696 11.8018 62.1951 12.208 cv
58.9529 14.9805 55.302 17.394 51.3787 19.0698 cv
49.1575 19.7451 46.8494 20.2495 44.6145 20.7905 cv
44.0398 20.9297 43.7625 21.3013 43.7058 21.7153 cv
41.8474 21.521 40.3152 20.7256 38.5242 20.2568 cv
37.4158 19.9668 36.6326 21.1367 37.1087 22.0981 cv
38.158 24.2183 40.7141 25.0171 42.8992 25.3389 cv
45.2771 25.6895 47.4797 25.8691 49.3733 24.2729 cv
49.8308 23.8877 49.7068 23.2158 49.3308 22.8408 cv
49.4451 22.8286 49.5618 22.8145 49.677 22.8013 cv
50.0964 23.3687 50.803 23.6772 51.717 23.3481 cv
56.2962 21.7007 60.4246 19.5728 64.2351 16.6968 cv
64.2966 16.6738 64.3572 16.6616 64.4192 16.6333 cv
65.0515 16.3442 65.5398 15.9829 65.9685 15.5483 cv
66.846 14.7935 67.5662 13.8774 67.9529 12.895 cv
69.242 12.1377 70.2839 11.0654 71.0369 9.59131 cv
71.7004 8.29199 71.0979 6.95557 69.7649 6.46484 cv
cp
.498039 .498039 .403922 rgb
f
82.3699 81.1958 mo
82.2351 81.2065 82.1033 81.2266 81.9695 81.2422 cv
81.926 80.5845 81.8855 79.9263 81.8352 79.269 cv
81.8992 79.5913 82.1218 80.3408 82.3699 81.1958 cv
cp
105.193 32.6265 mo
103.444 30.6411 101.524 29.0576 100.002 26.832 cv
98.8001 25.0757 97.7317 23.2241 96.3718 21.5786 cv
93.0427 17.5493 88.4924 15.2764 83.804 13.1733 cv
83.5872 13.0762 83.365 13.0171 83.1414 12.9756 cv
83.0593 12.7988 82.9646 12.6294 82.843 12.4766 cv
82.8069 11.0879 81.4529 10.1323 80.092 10.0967 cv
79.6599 8.18848 77.1751 7.02637 75.3538 8.65576 cv
75.2512 8.74756 75.1482 8.83984 75.0457 8.93164 cv
74.4866 8.99316 73.9168 9.25195 73.3953 9.79688 cv
72.8665 10.3496 72.3816 10.9224 71.9314 11.5093 cv
71.6804 11.8052 71.4251 12.0977 71.1751 12.3945 cv
70.843 12.7861 70.6414 13.1963 70.5291 13.605 cv
70.2 14.1787 69.9124 14.7671 69.6526 15.3638 cv
64.7625 19.3164 58.2156 21.9106 52.95 24.2881 cv
47.825 26.602 42.8738 28.2275 37.7947 24.8193 cv
33.6077 22.0098 31.2376 17.3169 29.0554 12.937 cv
27.8025 10.4224 23.9285 11.7119 23.9221 14.3276 cv
23.9182 15.8066 24.1414 17.3076 24.5359 18.793 cv
24.1433 18.2002 23.7551 17.6055 23.3406 17.021 cv
21.8367 14.9009 19.2004 15.7549 18.6233 17.6411 cv
18.5764 17.6479 18.5315 17.6421 18.4846 17.6509 cv
17.0291 17.9233 16.5022 18.2812 15.428 19.2852 cv
14.2927 20.3799 14.509 21.7598 15.301 22.6821 cv
15.1004 22.7476 14.8982 22.8335 14.697 22.9658 cv
11.4993 25.0703 9.19019 27.6128 7.46803 30.8052 cv
3.6858 32.0879 2.24049 37.8818 3.82691 41.2314 cv
4.41334 42.4697 5.27418 43.2036 6.22681 43.5478 cv
6.68726 44.0103 7.21119 44.3989 7.81324 44.665 cv
8.40894 44.9287 8.96558 45.0664 9.49732 45.1362 cv
9.60182 45.3867 9.74928 45.6221 9.95777 45.8232 cv
10.9397 46.7739 11.9417 47.602 13.0027 48.3638 cv
12.741 49.3535 13.2044 50.5483 14.0833 51.0581 cv
16.1677 52.2666 17.8655 51.7158 19.2429 50.3833 cv
19.3025 50.397 19.364 50.4067 19.4241 50.4199 cv
19.7874 51.5449 20.8171 52.3623 22.3264 51.8613 cv
24.3289 51.1968 27.0974 50.396 29.5115 49.2578 cv
29.7 51.2139 30.009 53.1577 30.4187 55.1011 cv
30.3894 55.2026 30.3582 55.313 30.3289 55.4111 cv
29.0125 59.8608 27.6448 65.0127 28.0545 69.8267 cv
27.3108 73.1235 26.4675 76.4004 25.5173 79.6601 cv
25.2234 80.6694 25.6951 82.0674 26.6917 82.5459 cv
32.5252 85.3452 38.4622 86.8457 44.7224 88.3984 cv
46.9011 88.939 50.0813 90.2812 52.4036 89.6645 cv
53.1419 89.4687 54.4758 88.1186 55.762 87.0371 cv
56.1106 87.1728 56.5193 87.2349 56.9993 87.1851 cv
61.7136 86.6938 65.6189 90.1484 70.322 90.1514 cv
74.7361 90.1538 78.4128 87.1069 82.6917 86.8774 cv
82.8635 87.334 83.1765 87.7368 83.6702 88.0059 cv
83.7849 88.0684 83.8997 88.1313 84.0144 88.1938 cv
85.1834 88.831 86.5711 88.4517 87.2859 87.3359 cv
88.7615 85.0322 87.2161 81.2915 86.8079 78.875 cv
85.9504 73.8027 85.0964 68.7305 84.2571 63.6553 cv
83.5227 59.2163 82.8792 54.7134 81.9773 50.2783 cv
82.0535 50.2666 82.1292 50.2505 82.2048 50.231 cv
82.9192 50.854 83.8757 51.0234 84.8645 50.8584 cv
86.3499 50.6108 90.8005 50.8311 89.9324 48.9663 cv
91.033 51.3311 94.5974 50.5083 95.2463 48.272 cv
95.3826 47.8032 95.6033 47.3994 95.8792 47.0376 cv
97.1311 46.5811 98.3289 45.9219 99.4324 44.8926 cv
99.4998 44.8296 99.554 44.7612 99.6057 44.6924 cv
101.928 43.7817 104.55 43.0293 105.93 41.1611 cv
107.957 38.418 107.365 35.0933 105.193 32.6265 cv
cp
.945098 .890196 .807843 rgb
f
71.0564 74.0674 mo
72.3045 71.374 73.5496 70.6973 72.5906 67.501 cv
72.0906 65.835 71.5671 64.167 70.3298 63.1714 cv
70.4578 62.9492 70.5842 62.7261 70.7288 62.5127 cv
70.7942 62.4048 70.8367 62.2915 70.8616 62.1758 cv
71.0681 61.9819 71.2781 61.792 71.5144 61.6279 cv
72.2107 61.0425 71.948 59.8745 71.2488 59.4116 cv
71.1375 58.7207 70.5813 58.2402 69.801 58.1572 cv
69.3611 58.1069 68.9202 58.063 68.4788 58.0254 cv
67.3196 57.9185 66.7239 59.5561 67.5344 60.3061 cv
67.6712 60.4326 67.7937 60.5381 67.9124 60.6338 cv
67.8582 60.9082 67.8958 61.1875 68.0066 61.4497 cv
67.99 61.4756 67.9768 61.4961 67.9597 61.5229 cv
67.7698 61.8223 67.7537 62.1533 67.8367 62.4629 cv
67.6868 62.665 67.5388 62.8686 67.3743 63.0605 cv
66.8206 63.7778 67.4373 64.8188 68.1804 65.041 cv
69.6267 65.4726 70.1228 68.7397 69.9485 69.9062 cv
69.8181 70.7808 69.4622 71.3999 69.1716 72.1157 cv
69.0164 72.1318 68.8591 72.1768 68.7131 72.2964 cv
67.3191 73.4365 65.8655 74.4922 64.3328 75.439 cv
63.3572 76.0415 62.2854 76.4692 61.2649 76.9766 cv
61.197 76.9634 61.1287 76.9536 61.0608 76.9409 cv
60.971 76.9233 60.886 76.9199 60.8045 76.9243 cv
60.7253 76.9155 60.6414 76.9219 60.5554 76.9316 cv
60.0452 76.9526 59.531 77.0117 59.0252 76.9111 cv
58.9524 76.8965 58.5037 76.7339 58.4368 76.8179 cv
58.449 76.522 59.1223 75.585 59.1785 75.3086 cv
59.2063 75.1714 59.1887 75.0557 59.1541 74.9502 cv
60.0339 75.3921 61.1492 75.415 62.0046 74.6875 cv
63.8142 74.6406 65.554 74.6977 66.9963 73.2436 cv
68.594 71.6328 68.7444 69.355 68.0378 67.3013 cv
67.5378 63.9165 64.5242 60.1963 62.3181 57.7852 cv
60.8367 56.1665 57.929 57.8525 58.6077 59.9453 cv
58.7312 60.3247 58.8899 60.6479 59.0642 60.9531 cv
59.4495 61.7935 59.8582 62.6182 60.3215 63.4316 cv
60.9544 64.5425 62.0808 65.9048 62.4343 67.1191 cv
62.8005 68.3794 62.6296 67.9678 61.4319 68.7026 cv
60.4226 69.3218 59.5203 70.0889 58.6921 70.9302 cv
58.6633 70.9575 58.635 70.9849 58.6077 71.0132 cv
58.5877 71.0337 58.5662 71.0532 58.5462 71.0742 cv
58.5481 71.0742 58.5501 71.0747 58.5515 71.0747 cv
58.4407 71.1958 58.3362 71.3213 58.2459 71.4507 cv
58.2151 71.4941 58.1843 71.5381 58.1541 71.5815 cv
57.3767 72.6909 57.7278 73.8101 58.5227 74.5195 cv
58.2839 74.5288 58.0466 74.6645 57.9353 74.9658 cv
57.717 75.5581 57.0237 75.8369 56.7493 76.4194 cv
56.511 76.9253 56.5291 77.4819 56.761 77.9873 cv
57.0354 78.5845 57.6077 78.9609 58.2644 79.2036 cv
59.3919 80.417 61.8699 80.9375 63.26 80.0566 cv
63.551 79.8721 63.7488 79.6348 63.8679 79.376 cv
65.1003 79.5288 66.4085 79.5879 67.3762 79.3408 cv
67.553 79.6802 67.7434 80.022 67.9602 80.3823 cv
68.8938 81.9351 71.5886 81.3599 71.4968 79.4243 cv
71.4099 77.6045 71.2102 76.001 70.8836 74.3213 cv
70.9509 74.2485 71.011 74.1655 71.0564 74.0674 cv
cp
.803922 .686275 .623529 rgb
f
65.6306 55.4863 mo
64.8372 54.3467 63.7752 53.6504 62.4353 53.2847 cv
62.1897 53.2173 61.9373 53.1719 61.6848 53.1284 cv
60.322 51.2563 55.2302 51.6265 56.0798 54.6313 cv
56.8884 57.4927 61.5613 55.2031 63.2195 57.3467 cv
64.2776 58.7144 66.6257 56.9155 65.6306 55.4863 cv
cp
f
53.6043 72.0981 mo
53.0007 72.4321 52.4109 72.791 51.824 73.1543 cv
51.6228 72.8281 51.2673 72.6645 50.8074 72.7353 cv
49.6204 72.918 48.697 74.2744 48.3689 75.3296 cv
48.219 75.8115 48.3777 76.3452 48.6912 76.7554 cv
48.6921 76.7578 48.6926 76.7607 48.6941 76.7637 cv
48.9788 77.4116 49.8215 77.9844 50.5593 77.6792 cv
51.2791 77.3813 51.9109 77.0112 52.3958 76.439 cv
53.2727 75.8105 54.1716 75.2139 55.1067 74.668 cv
56.7629 73.7021 55.283 71.1689 53.6043 72.0981 cv
cp
f
80.2566 76.3813 mo
80.2141 76.4121 80.1707 76.4399 80.1301 76.477 cv
79.9988 76.5976 79.8547 76.7324 79.7102 76.8672 cv
79.7556 76.6269 79.7522 76.3877 79.7053 76.1562 cv
79.7634 76.0664 79.8235 75.9785 79.8816 75.8887 cv
80.0266 75.9321 80.1726 75.9614 80.3181 75.9736 cv
80.2952 76.1089 80.2786 76.2456 80.2566 76.3813 cv
cp
77.9783 13.1519 mo
77.5515 13.7617 77.1267 14.3726 76.6995 14.9824 cv
74.7766 16.3369 72.8333 17.6699 70.8596 18.9517 cv
72.3499 17.0981 73.6624 15.1304 74.7615 13.1333 cv
74.9158 13.1934 75.0779 13.2354 75.2507 13.229 cv
76.1643 13.2163 77.0759 13.1621 77.9861 13.085 cv
77.9846 13.1069 77.9793 13.1294 77.9783 13.1519 cv
cp
105.23 32.7422 mo
104.77 30.6357 100.958 30.689 101.18 33.1948 cv
101.182 33.3784 101.183 33.562 101.185 33.7456 cv
101.186 33.9097 101.219 34.0752 101.266 34.2388 cv
101.161 34.3144 101.056 34.3901 100.951 34.4658 cv
100.982 34.1162 100.995 33.7593 100.968 33.3857 cv
100.891 32.3325 99.5164 32.2241 99.2097 33.0845 cv
98.9265 33.0586 98.6365 33.0537 98.342 33.0684 cv
98.3533 33.0439 98.367 33.0215 98.3787 32.9966 cv
99.9202 32.2661 101.058 31.2739 100.608 28.6514 cv
99.8894 24.4648 95.0525 20.1782 92.3547 17.1597 cv
91.8757 16.6235 91.3352 16.3848 90.8025 16.3442 cv
89.8748 15.2866 88.9719 14.2031 88.1282 13.0562 cv
87.5017 12.2051 86.6658 11.8643 85.8836 11.9121 cv
85.6795 11.5713 85.3689 11.2969 84.9968 11.1021 cv
84.5256 9.95313 82.9529 9.2793 81.7498 9.76465 cv
81.5676 9.12158 81.2537 8.57227 80.7527 8.17578 cv
79.5208 7.20166 78.0398 7.59668 76.7415 8.43701 cv
76.5232 7.65967 75.2048 7.271 74.7971 8.16553 cv
72.283 13.6836 68.4002 18.4883 63.5037 22.0859 cv
62.8523 22.5649 62.1853 23 61.51 23.4121 cv
61.3591 23.4448 61.2083 23.5112 61.0691 23.6626 cv
61.0671 23.6645 61.0657 23.6665 61.0637 23.6685 cv
56.9949 26.0576 52.5525 27.4419 48.1365 29.2368 cv
47.5212 29.4873 47.6135 30.3193 48.2922 30.3877 cv
54.4612 31.0088 60.2947 28.5747 65.1658 24.6699 cv
67.9578 23.2803 70.6619 21.6128 73.3064 19.8394 cv
73.1653 20.0425 73.0227 20.2446 72.8816 20.4478 cv
72.5676 20.9004 72.4461 21.3506 72.4636 21.772 cv
71.1604 23.1338 69.8606 24.499 68.5945 25.8955 cv
67.8572 26.7085 66.8064 27.6309 65.865 28.6362 cv
62.5344 30.1299 59.4773 31.998 55.8738 32.9687 cv
51.468 34.1553 47.0535 34.314 42.5525 33.7485 cv
42.2073 33.7051 41.9949 33.8721 41.8982 34.106 cv
40.762 33.981 39.617 33.8169 38.4558 33.5854 cv
38.156 33.5259 38.0515 33.9292 38.3308 34.0376 cv
38.9934 34.2944 39.6589 34.5171 40.3264 34.7119 cv
36.9412 33.8672 33.5984 32.4888 30.1272 30.5498 cv
29.7239 30.3247 29.3494 30.4849 29.1301 30.7676 cv
27.7449 29.6699 26.3621 28.5708 24.9612 27.4912 cv
24.6516 27.2524 24.3445 27.7822 24.6541 28.0176 cv
26.0759 29.0996 27.5125 30.1597 28.9485 31.2217 cv
28.9251 31.4844 29.0217 31.7539 29.323 31.9258 cv
37.2966 36.4795 47.8943 40.4033 56.7542 35.9409 cv
57.3655 35.6333 56.9177 34.772 56.3118 34.8916 cv
53.3054 35.4858 50.4817 35.748 47.7561 35.6968 cv
49.0515 35.6851 50.345 35.5864 51.6331 35.4072 cv
55.9832 34.9805 60.3543 33.8066 63.8826 31.5835 cv
63.7781 31.8936 63.7102 32.2085 63.6882 32.5273 cv
63.6648 32.8701 63.8142 33.1436 64.0383 33.3359 cv
62.3621 34.499 60.6712 35.9331 61.5632 37.9077 cv
61.8054 38.4429 62.6809 38.812 63.2356 38.5879 cv
68.4592 36.4775 73.2293 33.416 77.9358 30.3516 cv
79.3372 29.439 78.0125 27.1689 76.6228 28.105 cv
74.7351 29.3774 72.863 30.6084 70.947 31.7441 cv
73.3264 29.7808 75.6951 27.9009 77.7185 25.5596 cv
78.2566 24.937 77.5906 24.0327 76.8381 24.4185 cv
75.324 25.1943 73.8738 26.1025 72.4631 27.0786 cv
72.7703 26.8076 73.0842 26.5444 73.3894 26.271 cv
74.3577 25.4033 75.3171 24.5259 76.2786 23.6504 cv
76.4128 23.5713 76.5422 23.478 76.6658 23.3677 cv
77.3806 22.728 78.0872 22.0791 78.801 21.439 cv
79.2468 21.8613 79.8411 22.1284 80.5242 22.1416 cv
80.5364 22.1597 80.5491 22.1772 80.5618 22.1953 cv
80.5759 22.6792 80.739 23.1777 81.1628 23.7104 cv
81.3171 23.9038 81.471 24.0542 81.6253 24.1807 cv
81.5935 24.23 81.5608 24.2739 81.5291 24.3237 cv
80.7459 25.5674 81.2322 26.7905 82.177 27.4614 cv
82.1155 27.5591 82.0496 27.6499 81.9895 27.7495 cv
80.8572 29.6157 83.0364 32.2241 84.9876 31.2446 cv
85.3503 31.6909 85.8601 31.9985 86.4504 32.0708 cv
86.6262 32.4248 86.9016 32.7358 87.24 32.9668 cv
86.8181 33.5391 86.407 34.1226 86.0095 34.7217 cv
85.4988 35.4912 85.843 36.3125 86.4739 36.7432 cv
86.2234 37.1987 86.032 37.6743 85.9295 38.1748 cv
85.8494 38.563 85.9846 38.9434 86.3284 39.1553 cv
86.4192 39.2109 86.5149 39.2539 86.6116 39.2954 cv
84.6433 40.4321 82.6072 41.5078 80.637 42.6899 cv
80.5115 42.7412 80.4065 42.8096 80.3108 42.8843 cv
80.3064 42.8755 80.3025 42.8667 80.2981 42.8579 cv
80.262 42.8857 li
79.9929 42.4326 79.5354 42.165 79.0457 42.085 cv
79.2048 41.0386 79.2952 40.0156 79.2717 40.1372 cv
79.6638 38.0752 77.0979 36.9399 75.8933 38.7129 cv
75.2053 39.7251 75.1336 39.9209 74.7898 41.0952 cv
74.6448 41.5894 74.7424 42.019 74.9714 42.3535 cv
74.7825 42.5923 74.5964 42.8306 74.5252 43.1191 cv
74.2014 44.4316 74.052 44.8027 74.6399 46.1392 cv
74.6555 46.1748 74.6868 46.1982 74.7048 46.2314 cv
74.238 46.9165 73.8401 47.6387 73.6179 48.4404 cv
73.3547 49.3931 73.8084 50.2925 74.5877 50.8228 cv
74.6921 50.894 74.7825 50.9346 74.8777 50.9853 cv
74.5037 51.7353 74.156 52.501 73.8479 53.3125 cv
73.4753 54.2939 73.9426 55.0542 74.6746 55.4551 cv
74.5139 57.1904 74.8396 58.8018 74.8894 60.6802 cv
74.9373 62.5029 74.2566 64.2388 75.1008 65.9404 cv
75.3377 66.4184 76.0569 66.7183 76.5652 66.5366 cv
76.6062 66.5215 76.6316 66.5098 76.6697 66.4961 cv
76.4827 67.2773 75.8982 68.1528 75.741 68.7275 cv
75.4495 69.7934 75.5291 70.8769 75.6692 71.9541 cv
75.6907 72.1167 75.7385 72.2539 75.7996 72.3765 cv
75.6379 72.8428 75.4812 73.3091 75.3411 73.7744 cv
75.1194 74.5112 75.3748 75.1069 75.8313 75.4956 cv
75.1394 76.3271 74.4446 77.1558 73.7566 77.9878 cv
73.3259 78.5083 73.1668 79.0513 73.2004 79.5478 cv
72.7639 80.564 72.6575 81.624 73.2141 82.6943 cv
73.2771 82.8154 73.3718 82.9043 73.4602 82.9995 cv
73.1804 83.3296 73.0242 83.7871 73.1091 84.2036 cv
72.0237 84.5244 70.9216 84.7978 69.8176 84.958 cv
69.0715 84.853 68.324 84.6758 67.178 84.4985 cv
65.3425 84.2143 65.5159 85.0747 63.5383 84.2788 cv
62.3328 83.7934 61.5779 82.5879 60.2019 82.1548 cv
57.8386 81.4116 53.6624 81.8476 51.0847 83.5649 cv
49.6218 82.5259 47.8821 81.9751 45.8572 81.8384 cv
40.8206 81.4985 35.9348 81.7368 31.2625 79.7212 cv
30.8254 79.5 30.3894 79.291 29.9544 79.0972 cv
29.9177 79.0776 29.8811 79.0615 29.8445 79.0415 cv
29.8435 79.0434 29.8425 79.0454 29.8416 79.0469 cv
29.7385 79.0019 29.635 78.9526 29.5325 78.9101 cv
28.1179 78.3223 27.3377 80.5361 28.5271 81.2954 cv
31.3035 83.0679 34.1047 84.957 37.2913 85.938 cv
39.1218 86.5015 41.9314 86.4101 44.4304 86.7021 cv
45.908 87.5059 47.3274 88.165 48.511 88.1343 cv
48.5525 88.1333 48.594 88.1245 48.6355 88.1226 cv
48.8401 88.2954 49.03 88.4824 49.1878 88.6982 cv
50.4915 90.4819 54.135 90.1836 53.8792 87.4277 cv
53.8391 86.9941 57.7361 87.1416 58.1184 87.2036 cv
60.2371 87.5493 60.1897 88.1309 61.7849 88.7598 cv
64.5369 89.8457 64.7078 88.8203 67.9148 89.1216 cv
69.324 89.2544 70.1946 89.7295 71.6834 89.5342 cv
74.1882 89.2056 76.6653 88.2759 78.9089 87.0889 cv
79.6091 87.1284 80.3201 87.2036 81.0593 87.3467 cv
82.3909 87.6045 83.0711 87.7485 83.8992 87.5527 cv
84.9343 87.9316 86.1384 87.6977 86.7629 86.5508 cv
87.9675 84.3389 87.2849 81.5376 85.7341 80.459 cv
85.7219 80.3638 85.7127 80.2822 85.6985 80.1782 cv
85.6912 79.956 85.6834 79.7339 85.6755 79.5117 cv
86.1594 77.2559 86.4065 74.9634 86.468 72.6553 cv
86.5603 72.6265 86.6531 72.5976 86.7454 72.5688 cv
87.7966 72.2412 88.3416 71.395 88.4397 70.3433 cv
88.844 66.0249 86.6965 61.0503 85.4675 56.9805 cv
84.3132 53.1577 83.1604 49.2534 81.5691 45.5684 cv
81.6126 45.561 81.6541 45.5596 81.699 45.5483 cv
87.635 44.0449 93.1013 40.9019 96.5496 36.0937 cv
97.3821 35.707 98.2117 35.248 98.8987 34.7139 cv
98.4753 35.9814 97.5515 36.833 96.5056 37.7964 cv
95.4876 38.7334 96.2957 39.9756 97.3538 40.1357 cv
96.2522 40.7173 95.1951 41.2046 94.4392 41.603 cv
91.7376 43.0283 89.0017 44.5078 87.0691 46.9141 cv
86.6389 47.4497 87.0154 48.4556 87.8103 48.1875 cv
88.7034 47.8857 90.3279 47.3716 92.2503 46.6758 cv
92.3128 47.1147 92.6331 47.5127 93.1736 47.4917 cv
97.2151 47.3315 101.772 43.5019 104.282 40.5723 cv
104.732 40.0469 105.167 39.3276 105.51 38.5244 cv
105.688 38.1738 105.814 37.8164 105.892 37.4531 cv
106.385 35.7519 106.375 33.8994 105.23 32.7422 cv
cp
f
32.8025 31.1045 mo
32.4407 31.1045 32.4402 31.667 32.8025 31.667 cv
33.1643 31.667 33.1648 31.1045 32.8025 31.1045 cv
cp
f
28.1526 41.2114 mo
28.0881 40.7764 27.721 40.4048 27.1931 40.5532 cv
27.0681 40.5884 26.948 40.6367 26.8303 40.6899 cv
26.3045 39.7075 24.9856 39.1484 24.1043 40.1997 cv
23.9514 40.3833 23.7771 40.5166 23.5881 40.6167 cv
23.2444 40.6577 22.9021 40.7065 22.5466 40.7798 cv
22.3582 40.8188 22.2058 40.9033 22.073 41.0068 cv
22.0681 41.0098 22.0623 41.0112 22.0574 41.0142 cv
21.301 41.0449 20.5466 40.998 19.7615 40.8892 cv
17.5979 39.7978 15.7351 38.2383 14.2654 36.3115 cv
13.8308 35.7422 13.0886 35.8008 12.6614 36.1509 cv
12.2048 35.7939 11.7283 35.4766 11.22 35.2358 cv
10.9465 35.1064 10.6809 35.4243 10.8933 35.6592 cv
11.219 36.02 11.5432 36.4038 11.8679 36.7861 cv
11.8294 36.8838 11.8333 37.0044 11.9378 37.084 cv
12.1174 37.2212 12.301 37.3647 12.4832 37.5059 cv
12.8157 37.9019 13.1482 38.2998 13.4885 38.6948 cv
13.3538 38.9219 13.3303 39.1987 13.5379 39.4678 cv
14.5007 40.7168 15.6365 41.8877 16.9011 42.9062 cv
16.5452 43.5034 16.6668 44.3965 17.5388 44.6343 cv
17.5418 44.6353 17.5452 44.6357 17.5486 44.6362 cv
18.9778 45.2632 20.4753 45.6968 21.971 45.7842 cv
22.4705 45.9614 22.9783 46.1123 23.4934 46.2329 cv
23.5012 46.2612 23.5017 46.29 23.5105 46.3179 cv
23.7454 47.0444 24.5545 47.208 25.1145 46.7417 cv
25.1316 46.7275 25.1404 46.7061 25.157 46.6914 cv
25.2615 46.6768 25.3684 46.6416 25.4773 46.5635 cv
25.4832 46.5591 25.4885 46.5537 25.4944 46.5498 cv
25.8167 46.5747 26.1404 46.5884 26.4666 46.5889 cv
27.5413 46.5903 27.9837 45.2197 27.4094 44.5347 cv
27.4973 44.4092 27.5769 44.2788 27.6594 44.1499 cv
28.1008 44.0933 28.4622 43.7773 28.4724 43.2729 cv
28.4993 43.2012 28.5261 43.1289 28.5525 43.0571 cv
28.6257 42.9712 28.6917 42.8686 28.741 42.7353 cv
28.803 42.5679 28.8645 42.4009 28.9265 42.2334 cv
29.1795 41.7373 28.6589 41.1416 28.1526 41.2114 cv
cp
f
24.5886 47.5044 mo
23.7244 47.48 22.9822 47.478 22.137 47.2349 cv
21.0837 46.9565 20.218 47.8818 20.1575 48.7876 cv
19.697 48.3936 19.2581 47.9766 18.8665 47.6348 cv
17.8547 46.751 16.9529 45.8076 15.6379 45.4214 cv
15.3958 45.3501 15.0823 45.6055 15.1907 45.8682 cv
15.3894 46.3486 15.6804 46.7939 16.0134 47.2192 cv
15.9768 47.1826 15.9378 47.1475 15.8904 47.1226 cv
15.4553 46.897 15.009 46.6992 14.5574 46.5146 cv
14.0203 46.1968 13.4959 45.8462 12.9846 45.4517 cv
12.6853 45.2202 12.2971 45.2998 12.0173 45.5225 cv
11.5222 45.3179 11.033 45.0991 10.5598 44.8408 cv
8.59254 43.7666 6.89527 42.29 5.53394 40.5107 cv
4.77076 39.5132 3.04859 40.4717 3.81373 41.5161 cv
4.35963 42.2612 4.99781 43.0181 5.70191 43.7466 cv
5.62574 43.7822 5.57154 43.853 5.60621 43.9497 cv
5.89967 44.7637 6.57349 45.2803 7.15601 45.8955 cv
7.84742 46.6255 8.52955 47.3638 9.21558 48.0981 cv
9.48512 48.3857 9.90699 47.958 9.64674 47.667 cv
9.05982 47.0112 8.47096 46.3569 7.88551 45.7002 cv
9.35816 46.8281 11.0007 47.7178 12.7185 48.124 cv
13.0144 48.4741 13.3401 48.8057 13.7068 49.1055 cv
13.2068 49.3853 12.9983 50.1904 13.636 50.6006 cv
15.1272 51.5591 16.6902 51.9419 18.4255 52.1978 cv
20.053 52.4375 21.9553 52.9561 23.5525 52.3755 cv
24.3923 52.0698 25.1365 51.4575 25.3684 50.6226 cv
26.6438 49.9785 26.3933 47.5547 24.5886 47.5044 cv
cp
f
68.8484 49.1206 mo
68.3318 48.5312 67.4832 49.3906 67.9905 49.9785 cv
68.0037 49.9936 68.0212 50.0005 68.0349 50.0146 cv
67.9138 50.5352 68.7039 50.8799 68.9583 50.3726 cv
69.1721 49.9473 69.1677 49.4858 68.8484 49.1206 cv
cp
f
68.511 42.1353 mo
67.2986 42.1353 66.1365 43.2017 66.1926 44.4541 cv
66.2488 45.71 67.2112 46.7725 68.511 46.7725 cv
69.7239 46.7725 70.8855 45.7061 70.8298 44.4541 cv
70.7732 43.1978 69.8108 42.1353 68.511 42.1353 cv
cp
f
50.0525 43.8037 mo
48.4993 43.8037 48.4968 46.2178 50.0525 46.2178 cv
51.6057 46.2178 51.6082 43.8037 50.0525 43.8037 cv
cp
f
48.8025 45.0859 mo
48.738 45.0859 48.738 45.186 48.8025 45.186 cv
48.867 45.186 48.867 45.0859 48.8025 45.0859 cv
cp
f
40.9275 51.6475 mo
39.0125 51.6475 39.009 54.624 40.9275 54.624 cv
42.8425 54.624 42.846 51.6475 40.9275 51.6475 cv
cp
f
38.9275 61.2109 mo
38.863 61.2109 38.863 61.311 38.9275 61.311 cv
38.992 61.311 38.992 61.2109 38.9275 61.2109 cv
cp
f
42.304 74.3281 mo
41.9343 73.7969 41.4431 73.4756 40.7625 73.4785 cv
40.5842 73.4878 40.4075 73.5102 40.2317 73.5459 cv
40.1785 73.5684 40.1462 73.5825 40.1023 73.6011 cv
39.2429 73.4619 38.281 74.0122 38.0823 74.8852 cv
37.864 75.8428 38.3699 76.8125 39.3347 77.0908 cv
40.3733 77.3906 41.783 77.1143 42.304 76.0654 cv
42.5662 75.5386 42.6653 74.8472 42.304 74.3281 cv
cp
f
44.783 68.6645 mo
44.2712 68.0024 43.2605 67.6479 42.4124 67.8594 cv
41.8733 67.9292 41.3567 68.2183 41.0037 68.7681 cv
40.8479 69.0102 40.7498 69.2886 40.6492 69.5576 cv
40.2981 70.4956 40.9065 71.4233 41.6218 71.9477 cv
42.3132 72.4551 43.4666 72.4292 44.1619 71.9189 cv
45.2234 71.1401 45.658 69.7969 44.783 68.6645 cv
cp
f
33.9226 64.2451 mo
33.8157 64.4038 33.7263 64.5654 33.6336 64.7329 cv
33.1126 65.6733 33.4929 66.855 34.491 67.2764 cv
35.4949 67.6997 36.5916 67.145 36.9109 66.1143 cv
36.9675 65.9321 37.0222 65.7559 37.0628 65.5693 cv
37.4802 63.6445 35.0198 62.6167 33.9226 64.2451 cv
cp
f
40.5525 49.4609 mo
40.488 49.4609 40.488 49.561 40.5525 49.561 cv
40.617 49.561 40.617 49.4609 40.5525 49.4609 cv
cp
f
35.6775 40.0225 mo
33.7625 40.0225 33.759 42.999 35.6775 42.999 cv
37.5925 42.999 37.596 40.0225 35.6775 40.0225 cv
cp
f
29.1775 33.3975 mo
27.2625 33.3975 27.259 36.374 29.1775 36.374 cv
31.0925 36.374 31.096 33.3975 29.1775 33.3975 cv
cp
f
20.1775 31.8975 mo
18.2625 31.8975 18.259 34.874 20.1775 34.874 cv
22.0925 34.874 22.096 31.8975 20.1775 31.8975 cv
cp
f
22.4275 29.7109 mo
22.363 29.7109 22.363 29.811 22.4275 29.811 cv
22.492 29.811 22.492 29.7109 22.4275 29.7109 cv
cp
f
8.34693 47.4663 mo
10.593 49.6396 13.3303 50.5835 16.2117 51.6211 cv
19.4397 52.7837 22.1765 54.6221 25.7034 53.9355 cv
27.1404 53.6558 27.1243 51.3398 25.7034 51.0474 cv
23.9675 50.6904 22.3045 50.3144 20.7966 49.3174 cv
20.3738 50.3213 19.9504 51.3252 19.5271 52.3291 cv
21.6428 53.0127 23.5295 52.9473 25.6755 52.4287 cv
27.7195 51.9341 27.3318 49.3144 25.6755 48.6582 cv
25.4119 48.5537 25.1482 48.4492 24.885 48.3452 cv
25.1765 49.4487 25.4675 50.5527 25.759 51.6562 cv
26.8191 50.7905 26.8713 49.2363 27.2234 48.7456 cv
27.575 48.2554 27.5476 47.4219 27.2234 46.9287 cv
26.3919 45.6626 25.1882 46.0244 24.0398 46.7207 cv
23.2161 47.2207 22.9998 48.0566 23.1331 48.9492 cv
23.0745 48.9175 23.0159 48.8862 22.9573 48.8545 cv
21.7449 49.8686 22.5315 51.7412 23.8313 52.166 cv
24.0999 52.2534 24.3679 52.3408 24.636 52.4287 cv
24.636 51.1719 24.636 49.915 24.636 48.6582 cv
23.0549 49.1606 21.6023 49.2251 19.9651 49.0923 cv
18.0862 48.9399 17.7683 51.853 19.5271 52.3291 cv
21.3464 52.8208 23.0574 53.5298 24.9075 53.9355 cv
24.9075 52.9731 24.9075 52.0103 24.9075 51.0474 cv
22.0369 51.9082 19.4924 50.0771 16.865 49.2519 cv
14.2786 48.4394 11.7517 47.9941 9.55689 46.2563 cv
8.71656 45.5913 7.53443 46.6802 8.34693 47.4663 cv
8.34693 47.4663 li
cp
.709804 .580392 .52549 rgb
f
25.8826 46.6763 mo
27.0295 46.9204 27.8352 46.8008 28.8831 46.2495 cv
30.0901 45.6143 29.9241 43.4082 28.4807 43.1699 cv
27.1824 42.9561 25.8523 42.8472 24.5769 42.5181 cv
23.4724 42.2334 22.5115 41.5488 21.4021 41.3633 cv
20.5388 41.2187 19.7014 41.5332 18.8357 41.4121 cv
17.554 41.2329 16.3611 40.2988 15.2229 39.7187 cv
14.7761 39.4907 14.2864 39.7739 14.2571 40.2725 cv
14.092 43.0781 17.1321 44.3838 19.3933 45.144 cv
21.1326 45.729 25.5134 47.2026 26.2004 44.5225 cv
26.3611 43.8965 26.0925 43.23 25.5388 42.8965 cv
25.0408 42.5967 24.5789 42.5112 24.0315 42.7163 cv
22.5803 43.2603 22.7561 45.4062 24.4045 45.4722 cv
25.3367 45.5093 25.6716 45.4067 26.3367 44.7788 cv
26.7307 44.4062 26.5535 43.8686 26.1824 43.582 cv
25.8538 43.2998 25.4973 43.0581 25.1126 42.8579 cv
25.0007 43.7124 24.8894 44.5674 24.7776 45.4219 cv
24.8528 45.4067 24.928 45.3916 25.0032 45.3765 cv
24.5422 45.2549 24.0813 45.1328 23.6204 45.0112 cv
23.678 45.0601 23.7361 45.1089 23.7937 45.1582 cv
23.719 44.5762 23.6438 43.9946 23.5686 43.4131 cv
23.5295 43.4702 23.49 43.5269 23.4509 43.5835 cv
24.0066 43.3574 24.5623 43.1313 25.1184 42.9053 cv
21.7795 41.8701 17.9338 42.771 15.3528 39.8188 cv
15.2586 40.1763 15.1638 40.5337 15.0696 40.8916 cv
16.6506 40.3686 18.5291 42.0034 19.4729 43.1348 cv
20.1917 43.9961 20.5369 44.6709 21.5877 45.2417 cv
23.4793 46.2686 25.9334 46.3135 28.0325 46.4795 cv
27.7493 45.4331 27.4656 44.3867 27.1824 43.3398 cv
27.0378 43.4048 26.8933 43.4697 26.7488 43.5347 cv
24.7068 43.1338 23.8225 46.2373 25.8826 46.6763 cv
25.8826 46.6763 li
cp
f
48.0276 31.9956 mo
54.7791 32.2104 62.4514 29.5288 67.6287 25.1392 cv
68.3313 24.5435 67.575 23.4316 66.762 23.6509 cv
63.7527 24.4609 60.9866 26.1548 58.0491 27.2349 cv
54.783 28.4355 51.5037 29.4932 48.0276 29.8862 cv
46.7078 30.0356 46.6384 31.9517 48.0276 31.9956 cv
48.0276 31.9956 li
cp
f
45.5364 33.8076 mo
52.2434 33.7466 58.6819 32.3027 64.6702 29.2241 cv
70.2581 26.3506 76.6506 22.2471 79.3694 16.3911 cv
79.5042 16.1006 79.2708 15.6187 78.8928 15.7715 cv
73.719 17.8594 69.8787 22.0039 65.1853 24.9336 cv
59.1716 28.6875 52.6707 31.4238 45.5364 31.8857 cv
44.3142 31.9648 44.2878 33.8188 45.5364 33.8076 cv
45.5364 33.8076 li
cp
f
75.1428 18.1128 mo
74.1428 18.7793 73.1428 19.4463 72.1428 20.1128 cv
71.8059 20.3374 72.1223 20.8857 72.4622 20.6592 cv
73.4622 19.9927 74.4622 19.3257 75.4622 18.6592 cv
75.7996 18.4346 75.4832 17.8862 75.1428 18.1128 cv
75.1428 18.1128 li
cp
f
73.4295 19.2109 mo
72.971 19.5444 72.5125 19.8774 72.0545 20.2109 cv
71.5466 20.5801 72.0374 21.4346 72.551 21.061 cv
73.0095 20.7275 73.4675 20.3945 73.926 20.061 cv
74.4334 19.6919 73.9426 18.8374 73.4295 19.2109 cv
73.4295 19.2109 li
cp
f
72.1751 19.2759 mo
72.0501 19.3594 71.9251 19.4424 71.8001 19.5259 cv
70.738 20.2339 71.7346 21.96 72.8054 21.2461 cv
72.9304 21.1626 73.0554 21.0796 73.1804 20.9961 cv
74.242 20.2881 73.2459 18.562 72.1751 19.2759 cv
72.1751 19.2759 li
cp
f
72.5916 21.6436 mo
75.012 19.8003 77.3386 17.8774 79.5886 15.8267 cv
80.9021 14.6299 79.157 12.2856 77.6619 13.3296 cv
74.2297 15.7275 70.9939 18.3481 67.8879 21.1553 cv
68.6331 21.9009 69.3787 22.6465 70.1238 23.3916 cv
72.7405 20.103 75.699 17.3989 78.8738 14.6611 cv
78.0222 13.8101 77.1712 12.959 76.3201 12.1074 cv
73.1399 15.2954 70.2771 18.7808 67.0945 21.9687 cv
67.6267 22.3799 68.1594 22.7905 68.6921 23.2017 cv
71.2039 19.7715 76.0344 15.0415 80.0086 13.4985 cv
79.2253 13.0537 78.4421 12.6089 77.6589 12.1641 cv
77.6878 12.9526 77.7166 13.7412 77.7454 14.5298 cv
77.6233 16.2978 80.0911 17.2637 81.2595 15.9858 cv
82.3933 14.7461 82.6419 14.3403 83.1047 12.7222 cv
83.7376 10.5117 81.0525 9.27881 79.4817 10.6133 cv
78.4255 11.5107 77.7219 12.4072 77.0818 13.6245 cv
76.0325 15.6201 78.1726 17.9438 80.221 16.7637 cv
81.6165 15.9595 82.8587 15.0688 84.1243 14.0806 cv
82.7542 13.2827 81.3836 12.4849 80.0134 11.6875 cv
79.8059 12.1094 79.5989 12.5313 79.3914 12.9531 cv
78.0017 14.9102 80.2878 17.1528 82.2859 16.7187 cv
83.3367 16.4902 83.8167 16.2832 84.7449 15.7422 cv
83.4822 14.7715 82.22 13.8008 80.9573 12.8306 cv
80.8206 13.2837 80.6834 13.7368 80.5466 14.1895 cv
79.9085 16.3003 82.4392 18.3076 84.3323 17.1001 cv
84.9275 16.7207 85.5227 16.3408 86.1174 15.9614 cv
84.8772 15.0083 83.637 14.0547 82.3967 13.1011 cv
82.3215 13.479 82.2459 13.8569 82.1702 14.2344 cv
81.8372 15.896 83.3289 18.0972 85.2556 17.3203 cv
85.9382 17.0454 86.6204 16.77 87.3025 16.4951 cv
86.2634 15.7036 85.2244 14.9121 84.1858 14.1206 cv
84.1956 14.4375 84.2053 14.7539 84.2151 15.0708 cv
84.2752 16.9873 86.2337 18.0405 87.9006 17.1855 cv
88.2297 17.0166 88.5593 16.8477 88.8884 16.6787 cv
87.7712 15.562 86.6545 14.4448 85.5374 13.3276 cv
85.1257 14.2676 84.7942 14.9229 84.9622 15.9648 cv
85.0442 16.4746 85.7727 17.6758 85.6746 17.9111 cv
85.1082 19.27 86.5505 21.0728 87.9749 20.9302 cv
88.4226 20.8853 88.8704 20.8403 89.3186 20.7959 cv
88.6326 20.2734 87.947 19.7515 87.2615 19.2295 cv
88.0374 21.876 88.6956 20.8887 90.8337 22.5322 cv
90.4719 21.9019 90.1106 21.2715 89.7488 20.6411 cv
89.7371 20.793 89.7249 20.9453 89.7131 21.0972 cv
89.5686 22.9258 91.6697 23.665 93.0554 23.0156 cv
93.3372 22.8833 93.6189 22.7515 93.9002 22.6191 cv
92.7815 21.7593 91.6624 20.8989 90.5432 20.0386 cv
90.4622 20.2915 90.3816 20.5439 90.3005 20.7964 cv
89.8938 22.0659 90.7849 23.2407 91.926 23.6597 cv
92.1975 23.7598 92.469 23.8594 92.7405 23.959 cv
95.156 24.8462 96.3977 21.6392 95.0339 20.019 cv
93.7503 18.4941 92.5173 16.9468 91.3572 15.3257 cv
90.1672 16.0215 88.9773 16.7168 87.7874 17.4121 cv
90.4348 21.21 93.1365 24.9292 95.9436 28.6108 cv
97.2752 27.5835 98.6067 26.5562 99.9378 25.5293 cv
98.6682 24.2007 97.366 22.9126 96.1155 21.5659 cv
95.1292 22.8442 94.1428 24.1226 93.157 25.4009 cv
95.4451 26.4912 95.6858 29.9824 93.8064 31.647 cv
95.1306 32.6685 96.4544 33.6904 97.7786 34.7119 cv
98.238 34.2436 98.697 33.7754 99.156 33.3076 cv
98.0393 32.4458 96.9226 31.5845 95.8064 30.7227 cv
93.9827 33.7012 91.6238 36.0767 89.4407 38.7632 cv
88.6018 39.7954 89.6223 41.1948 90.8611 40.6035 cv
94.2307 38.9946 96.8474 36.1899 99.156 33.3076 cv
100.66 31.4287 98.8367 28.8672 96.5715 29.9575 cv
95.7561 30.2778 95.0051 30.709 94.3181 31.2515 cv
91.6272 33.0781 94.2219 37.498 96.8713 35.6196 cv
102.307 31.7651 101.858 23.9956 95.6213 21.1841 cv
93.1731 20.0801 90.6721 22.8799 92.6624 25.019 cv
93.9163 26.3657 95.1077 27.7607 96.3416 29.1255 cv
98.5774 31.5996 101.94 28.0269 99.9378 25.5293 cv
97.0413 21.915 94.0823 18.3945 91.0339 14.9072 cv
89.509 13.1631 86.4182 15.4888 87.7874 17.4121 cv
89.053 19.1899 90.2107 21.0039 91.3318 22.8755 cv
92.219 21.7212 93.1067 20.5674 93.9939 19.4131 cv
93.717 19.332 93.4407 19.2515 93.1638 19.1709 cv
93.7058 20.1255 94.2478 21.0796 94.7898 22.0342 cv
94.843 21.7739 94.8967 21.5137 94.9504 21.2534 cv
95.3274 19.4253 93.3743 17.5176 91.5935 18.6728 cv
91.3333 18.8418 91.0735 19.0103 90.8132 19.1792 cv
91.9275 19.8184 93.0418 20.458 94.156 21.0972 cv
94.0125 18.6396 92.2366 18.2729 90.0935 17.7812 cv
90.5945 18.4395 91.096 19.0977 91.5969 19.7554 cv
91.5486 19.3911 91.4998 19.0269 91.4514 18.6626 cv
91.3245 17.707 90.8757 16.8853 89.8855 16.6055 cv
89.4597 16.4853 89.0344 16.3652 88.6087 16.2451 cv
89.0837 17.4131 89.5588 18.5811 90.0344 19.749 cv
90.5129 18.7324 90.8767 18.0796 90.7205 16.9512 cv
90.5901 16.4062 90.4065 15.8804 90.1697 15.374 cv
89.7337 14.5962 89.5994 14.7383 89.7669 15.8003 cv
90.7312 13.5977 88.7312 11.2612 86.4163 12.4492 cv
86.0867 12.6182 85.7576 12.7871 85.4285 12.9561 cv
86.6565 13.6606 87.885 14.3657 89.1135 15.0708 cv
89.1126 14.7539 89.1116 14.4375 89.1106 14.1206 cv
89.1052 12.6172 87.5266 11.2012 85.9934 11.7461 cv
85.303 11.9917 84.6126 12.2373 83.9221 12.4824 cv
84.9504 13.5112 85.9793 14.5396 87.0081 15.5684 cv
87.0989 15.1948 87.1902 14.8213 87.2815 14.4478 cv
87.8005 12.3223 85.5105 10.4561 83.5608 11.5874 cv
82.9509 11.9414 82.3411 12.2954 81.7307 12.6494 cv
82.9929 13.6196 84.2546 14.5898 85.5169 15.5601 cv
85.6541 15.1069 85.7918 14.6543 85.9295 14.2012 cv
86.5901 12.0264 84.0491 10.1772 82.1423 11.2896 cv
81.7361 11.4517 81.3294 11.6133 80.9231 11.7754 cv
81.8879 13.0303 82.8528 14.2856 83.8181 15.5405 cv
84.3933 14.5322 84.5715 14.1426 84.7566 12.9951 cv
85.137 10.6421 82.5593 8.81836 80.6458 10.6021 cv
79.823 11.4453 78.9094 12.1782 77.905 12.8018 cv
78.9514 13.8477 79.9978 14.894 81.0442 15.9404 cv
81.3137 15.042 81.8147 14.2881 82.5476 13.6787 cv
81.3396 12.9761 80.1321 12.2729 78.9246 11.5698 cv
78.7322 12.0713 78.5403 12.5728 78.3484 13.0742 cv
79.5198 13.5596 80.6912 14.0449 81.8626 14.5298 cv
81.8049 12.9985 81.7581 12.6235 81.3425 11.1484 cv
80.9851 9.87842 79.0847 9.14746 78.1502 10.3057 cv
74.887 14.3506 70.6585 18.1133 67.0945 21.9687 cv
66.3489 22.7754 67.3411 24.2646 68.3269 23.5664 cv
72.1052 20.8926 75.8132 18.1636 78.8738 14.6611 cv
80.3904 12.9258 77.9944 10.459 76.3201 12.1074 cv
73.3796 15.0024 70.4724 17.9341 67.8879 21.1553 cv
66.6321 22.7207 68.5779 24.7773 70.1238 23.3916 cv
73.0413 20.7769 76.0886 18.3667 79.2669 16.0752 cv
78.6248 15.2432 77.9822 14.4106 77.3401 13.5781 cv
75.3152 15.6846 73.218 17.6821 71.0154 19.6006 cv
69.9182 20.5562 71.4089 22.5439 72.5916 21.6436 cv
72.5916 21.6436 li
cp
f
84.5061 44.8745 mo
89.7903 42.27 99.2581 36.7563 100.06 30.1973 cv
100.192 29.1138 98.6672 28.2612 97.8025 28.9023 cv
96.5486 29.832 95.3972 30.3901 93.9685 31.0156 cv
94.8411 31.6865 95.7141 32.3579 96.5872 33.0288 cv
96.6179 31.5791 97.0984 30.2729 98.0276 29.1099 cv
98.6077 28.2324 98.1487 27.125 97.365 26.583 cv
96.2644 25.8223 95.3733 26.4409 94.3079 25.9985 cv
94.7937 26.6367 95.28 27.2749 95.7659 27.9131 cv
95.7434 27.2168 96.2283 26.1318 96.3196 25.4067 cv
96.5159 23.8428 94.4851 22.9717 93.2966 23.6724 cv
92.9168 23.7983 92.5369 23.9243 92.1575 24.0503 cv
92.9763 24.6743 93.7952 25.2983 94.614 25.9219 cv
94.6868 25.2817 94.7595 24.6411 94.8323 24.001 cv
95.0252 22.6694 94.092 21.5527 92.6843 21.853 cv
91.3845 22.1299 91.0383 22.2812 89.8289 22.8213 cv
90.6165 23.1421 91.4041 23.4624 92.1917 23.7827 cv
91.9763 22.2266 89.2205 21.6255 89.3445 20.5527 cv
89.4168 19.9297 88.7981 19.0967 88.1643 19.0029 cv
87.5955 18.9316 87.031 18.8359 86.4705 18.7158 cv
86.9021 19.2827 87.3337 19.8496 87.7654 20.417 cv
87.6799 19.5713 87.9392 17.7559 87.9876 16.8867 cv
88.0945 14.9517 84.8948 14.4668 84.5574 16.4224 cv
84.2981 17.9292 84.0105 19.3721 84.3001 20.8857 cv
84.4524 21.6816 85.2673 22.127 86.0012 22.1812 cv
86.5808 22.2681 87.1594 22.2612 87.7371 22.1602 cv
87.2014 21.6245 86.6653 21.0889 86.1296 20.5527 cv
86.0901 24.1587 87.593 23.3603 89.8919 24.8071 cv
89.6614 24.2412 89.4314 23.6758 89.2014 23.1103 cv
89.1643 23.3345 89.1272 23.5586 89.0901 23.7827 cv
88.886 25.0127 89.7913 26.0317 91.0681 25.7612 cv
91.9168 25.582 92.7649 25.4019 93.613 25.2202 cv
92.8967 24.5044 92.1809 23.7886 91.4651 23.0723 cv
91.2859 23.8623 91.0647 24.6401 90.8015 25.4062 cv
90.4172 26.6323 91.4529 27.8447 92.6731 27.8628 cv
93.8411 27.8804 94.3284 27.7495 95.3245 27.1411 cv
94.3167 26.563 93.3093 25.9849 92.3015 25.4067 cv
92.1936 26.3804 91.7346 26.853 91.7942 27.9131 cv
91.8474 28.8628 92.3875 29.502 93.2522 29.8281 cv
94.1458 30.165 95.2004 29.646 95.9421 29.9585 cv
95.574 29.0542 95.2063 28.1499 94.8381 27.2456 cv
93.9246 28.8696 93.4055 30.2051 93.1492 32.0811 cv
92.9534 33.5142 94.302 34.9844 95.7678 34.0942 cv
97.157 33.2505 98.3518 32.2783 99.6204 31.2583 cv
98.7669 30.9048 97.9133 30.5513 97.0598 30.1973 cv
96.7629 32.6279 93.137 35.4893 91.4016 37.1201 cv
88.947 39.4272 86.3274 41.332 83.3704 42.9316 cv
82.0872 43.6255 83.217 45.5093 84.5061 44.8745 cv
84.5061 44.8745 li
cp
f
97.4065 34.8662 mo
97.9837 34.3892 98.5584 33.9106 99.1423 33.4419 cv
98.8889 33.5469 98.635 33.6519 98.3816 33.7568 cv
98.5232 33.7451 98.6643 33.7339 98.8059 33.7222 cv
98.4744 32.9219 98.1428 32.1211 97.8113 31.3208 cv
97.2737 31.8804 97.0237 32.4722 96.7273 33.1777 cv
96.219 34.3877 97.6902 35.6421 98.8259 35.2764 cv
99.2156 35.1504 99.6047 35.022 99.9934 34.8921 cv
100.149 34.8403 100.304 34.7886 100.46 34.7363 cv
100.871 34.6592 100.776 34.5508 100.174 34.4111 cv
100.007 34.0078 99.8401 33.605 99.6731 33.2017 cv
99.6785 33.3052 99.6843 33.4087 99.6897 33.5122 cv
99.8567 33.1089 100.024 32.7056 100.191 32.3027 cv
100.125 32.3677 100.059 32.4331 99.9929 32.498 cv
99.0281 33.4512 99.6716 35.603 101.202 35.4189 cv
101.519 35.3809 101.924 35.2471 102.234 35.2422 cv
101.83 35.0752 101.427 34.9082 101.024 34.7412 cv
101.094 34.8164 101.165 34.8921 101.235 34.9678 cv
101.146 34.2749 101.056 33.5825 100.967 32.8896 cv
100.733 33.271 100.496 33.5059 100.377 33.9756 cv
100.177 34.7729 100.505 35.7056 101.248 36.1143 cv
101.308 36.147 101.368 36.1802 101.428 36.2134 cv
102.208 36.6421 103.053 36.4805 103.704 35.9194 cv
103.181 34.2725 102.758 33.8599 102.433 34.6826 cv
102.16 35.2065 102.074 35.9189 102.433 36.436 cv
102.486 36.5112 102.538 36.5864 102.59 36.6616 cv
103.23 37.583 104.715 37.7769 105.313 36.6616 cv
105.956 35.4614 106.49 34.2856 105.419 33.1094 cv
104.312 31.8936 102.686 32.1787 101.428 32.9697 cv
102.06 32.9697 102.692 32.9697 103.324 32.9697 cv
103.269 32.9277 103.214 32.8857 103.159 32.8437 cv
103.471 33.3892 103.784 33.9341 104.097 34.479 cv
104.011 33.6528 104.26 33.1426 103.552 32.4321 cv
102.772 31.6499 102.147 31.8838 101.202 31.9971 cv
101.606 32.9707 102.009 33.9443 102.412 34.918 cv
103.371 33.9707 103.336 32.4502 102.218 31.6133 cv
100.951 30.665 99.2092 31.541 97.9187 31.9863 cv
98.6184 32.6855 99.3176 33.3853 100.017 34.085 cv
100.164 33.481 100.29 32.9355 100.212 32.3154 cv
100.032 30.874 97.8391 30.2529 97.4495 31.9414 cv
97.323 32.4897 96.3601 33.0679 95.9646 33.4243 cv
94.9773 34.314 96.4109 35.6894 97.4065 34.8662 cv
97.4065 34.8662 li
cp
f
104.135 35.812 mo
102.642 38.1826 100.782 39.6201 98.6111 41.3867 cv
96.4451 43.1494 93.6394 44.6929 92.1775 47.126 cv
91.7239 47.8813 92.4744 48.8413 93.3157 48.6064 cv
95.1506 48.0952 96.5632 46.8726 98.0681 45.7534 cv
99.5798 44.6294 101.143 43.5752 102.653 42.4492 cv
104.597 40.999 106.827 38.6948 106.034 36.0601 cv
105.772 35.1909 104.613 35.0522 104.135 35.812 cv
104.135 35.812 li
cp
f
91.1775 49.4326 mo
91.7205 49.4326 91.7214 48.5889 91.1775 48.5889 cv
90.6345 48.5889 90.634 49.4326 91.1775 49.4326 cv
cp
f
79.2083 49.3677 mo
79.7551 47.6216 79.613 43.6753 80.5877 42.3267 cv
79.4202 42.0107 78.2522 41.6943 77.0847 41.3779 cv
77.3836 45.3638 77.3831 50.0952 79.1687 53.7173 cv
80.2854 55.9814 83.5974 54.3442 83.0896 52.0644 cv
82.5618 49.6968 81.948 47.5435 80.9988 45.3218 cv
80.2063 43.4668 77.1467 44.79 77.7483 46.6924 cv
78.8206 50.0835 79.9968 53.4478 80.9778 56.8667 cv
81.6204 59.1055 84.2195 66.3496 82.6531 68.3476 cv
83.8157 68.6548 84.9778 68.9614 86.1399 69.2681 cv
85.5593 67.8281 85.1712 66.6025 84.928 65.0708 cv
84.7205 63.7642 82.9163 64.0478 82.5549 65.0708 cv
81.8826 66.9717 81.824 68.3999 82.117 70.3774 cv
82.3362 71.8579 84.6819 72.4673 85.6033 71.2978 cv
87.9817 68.2788 87.0086 64.4668 86.2937 60.9194 cv
85.2044 55.5117 83.1824 50.3667 80.9988 45.3218 cv
79.9153 45.7788 78.8318 46.2353 77.7483 46.6924 cv
78.6262 48.7842 79.0364 50.2554 78.8762 52.6348 cv
80.2805 52.4443 81.6848 52.2544 83.0896 52.0644 cv
81.739 48.6269 81.6267 44.4775 80.7771 40.8784 cv
80.3088 38.8936 77.7913 39.3076 77.1521 40.8784 cv
76.0427 43.6025 78.3562 46.3911 78.2415 49.2368 cv
78.2185 49.8061 79.0466 49.8843 79.2083 49.3677 cv
79.2083 49.3677 li
cp
f
81.2214 70.1362 mo
81.3025 74.562 81.2493 78.9814 81.0613 83.4033 cv
82.4807 83.2114 83.9002 83.019 85.3196 82.8271 cv
84.7498 80.4595 84.5413 78.0664 83.9226 75.688 cv
83.1389 72.6758 82.5701 69.3633 83.3235 66.2939 cv
82.5413 66.188 81.7586 66.082 80.9758 65.9761 cv
80.8123 71.6377 81.3831 77.3135 81.4876 82.9746 cv
83.1184 82.7539 84.7493 82.5332 86.3806 82.3125 cv
85.3694 79.1909 84.9837 75.9624 84.0339 72.8379 cv
83.6951 71.7226 82.242 71.8208 81.8645 72.8379 cv
80.5691 76.3276 80.9739 80.0298 81.5764 83.6367 cv
82.0339 86.374 86.8049 85.7685 86.4695 82.9746 cv
85.7727 77.1694 85.1375 71.2397 83.3235 65.6582 cv
82.9192 64.4145 80.949 64.5791 80.9758 65.9761 cv
81.0325 68.9243 81.5935 71.8008 81.6941 74.7275 cv
81.7947 77.6611 80.8875 80.4687 81.0613 83.4033 cv
81.2258 86.1826 85.2678 86.2046 85.3972 83.4033 cv
85.6008 78.9819 85.6697 74.5625 85.6043 70.1362 cv
85.5628 67.3184 81.1697 67.311 81.2214 70.1362 cv
81.2214 70.1362 li
cp
f
83.1409 67.6904 mo
82.7693 65.6426 81.9949 63.1816 82.7 61.1426 cv
82.9993 60.2759 82.0471 59.3301 81.1829 59.6255 cv
81.0696 59.6641 80.9563 59.7026 80.8435 59.7412 cv
81.4465 60.2012 82.0496 60.6606 82.6531 61.1201 cv
82.6829 60.5083 82.7127 59.897 82.7424 59.2856 cv
83.0071 58.1475 81.8401 57.2676 80.8147 57.8032 cv
80.2849 58.0977 79.741 58.3638 79.1838 58.602 cv
80.1248 59.3257 81.0662 60.0488 82.0071 60.7725 cv
82.2332 60.0317 82.5476 59.3325 82.9504 58.6743 cv
83.594 57.4907 82.8113 55.6821 81.301 55.7998 cv
81.3171 55.9507 81.3333 56.1016 81.3494 56.2524 cv
81.4197 56.7895 81.4895 57.3271 81.5598 57.8643 cv
81.7273 57.1089 82.0164 56.4228 82.3069 55.7051 cv
82.8479 54.3682 81.5105 53.2798 80.3655 53.1567 cv
80.4563 53.2305 80.5471 53.3042 80.6375 53.3779 cv
80.7102 53.9336 80.783 54.4888 80.8557 55.0439 cv
81.3206 53.8594 82.1135 53.5093 81.5413 51.9883 cv
80.0618 48.0527 75.0134 52.4102 78.3235 54.4619 cv
78.3928 54.5054 78.4627 54.5483 78.532 54.5913 cv
79.7156 55.3252 80.9924 54.5508 81.4412 53.4077 cv
81.4749 53.3228 81.5081 53.2378 81.5413 53.1528 cv
80.1331 53.1528 78.7249 53.1528 77.3167 53.1528 cv
77.5823 52.3154 77.5129 52.2266 77.1091 52.8867 cv
76.967 53.2222 76.8259 53.5581 76.6858 53.8945 cv
76.5754 54.4751 76.6458 54.9346 76.8645 55.4853 cv
77.4705 57.0117 78.8425 57.3481 80.3655 57.1831 cv
79.7864 56.1733 79.2068 55.1636 78.6272 54.1538 cv
77.968 55.5991 76.9592 57.0229 77.8552 58.585 cv
78.7522 60.1489 80.3054 60.1269 81.8088 59.5518 cv
81.0901 58.6167 80.3709 57.6811 79.6521 56.7461 cv
79.0984 57.73 78.6585 58.6826 78.3005 59.7505 cv
77.6194 61.7852 80.9016 63.227 81.8132 61.2314 cv
82.051 60.6738 82.3167 60.1294 82.6101 59.5991 cv
81.8108 59.2617 81.011 58.9248 80.2112 58.5879 cv
80.0212 59.4936 79.9133 60.2017 79.7937 61.1201 cv
79.5818 62.7451 82.1878 63.0132 82.6018 61.5 cv
82.6345 61.3809 82.6672 61.2617 82.7 61.1426 cv
81.9485 61.2407 81.197 61.3389 80.4456 61.437 cv
81.3923 63.1973 81.3816 66.147 81.7395 68.0767 cv
81.9099 68.9961 83.3069 68.6055 83.1409 67.6904 cv
83.1409 67.6904 li
cp
f
80.7844 67.751 mo
79.8108 70.7095 78.0711 74.5107 80.0579 77.3115 cv
81.1267 78.8188 82.9846 78.7666 84.0628 77.3115 cv
84.6262 76.6787 85.0588 75.9668 85.3611 75.1753 cv
83.9304 74.9883 82.4993 74.8013 81.0681 74.6143 cv
81.1565 74.8765 81.2449 75.1382 81.3328 75.4004 cv
81.9055 77.103 83.9114 77.6655 85.2532 76.4355 cv
86.7273 75.084 87.574 73.6123 86.9988 71.6367 cv
86.6174 70.3262 85.3928 69.8071 84.1277 70.0063 cv
83.9636 70.0322 83.1951 70.3447 83.1257 70.312 cv
84.6648 71.041 84.9075 70.0229 84.8318 69.0532 cv
84.7468 67.9629 82.1047 65.7676 82.5335 64.8857 cv
81.406 64.4101 80.2786 63.9351 79.1511 63.4595 cv
78.9959 63.9394 78.8411 64.4194 78.6863 64.8994 cv
78.032 66.9282 80.6707 68.1953 82.0945 66.8833 cv
80.9241 67.9619 80.3171 68.6684 80.4812 70.5381 cv
80.6692 72.6792 81.4089 74.1816 81.3699 76.5268 cv
81.323 79.3491 81.8108 81.8882 81.9363 84.7988 cv
82.0491 87.417 86.3337 88.331 86.7742 85.4536 cv
87.5276 80.5356 89.0022 71.9629 86.2322 67.4517 cv
85.3562 66.0254 82.6326 66.4736 82.8308 68.373 cv
83.2781 72.6567 83.4006 76.8994 82.9089 81.1846 cv
82.8289 81.8457 82.7449 82.5068 82.658 83.167 cv
82.4592 84.6821 82.6926 84.6797 83.3587 83.1601 cv
81.511 83.7192 79.301 83.7934 77.3875 84.0723 cv
74.5833 84.4814 75.3792 88.8208 78.0378 88.8794 cv
79.9216 88.9209 83.3328 87.2851 84.7 88.7578 cv
84.5339 88.1304 84.3684 87.5029 84.2024 86.876 cv
84.1697 87.0137 84.1365 87.1518 84.1033 87.2895 cv
85.3821 87.2895 86.6609 87.2895 87.9397 87.2895 cv
87.8684 87.0791 87.7966 86.8682 87.7253 86.6572 cv
87.3474 85.5444 86.1882 85.0601 85.136 85.604 cv
85.0916 85.6167 85.0466 85.6294 85.0022 85.6421 cv
83.8694 85.4604 82.5535 86.9321 83.7136 87.8555 cv
84.3753 88.3818 84.7312 88.6206 85.5569 88.8257 cv
85.1467 88.103 84.7366 87.3799 84.3259 86.6572 cv
84.2517 86.8682 84.1775 87.0791 84.1033 87.2895 cv
83.1565 89.9785 88.074 90.8296 88.011 87.8184 cv
87.9158 83.2744 80.8157 84.1138 78.0378 83.9849 cv
78.0378 85.6167 78.0378 87.248 78.0378 88.8794 cv
81.3831 88.4541 86.4529 88.8066 87.4475 84.8638 cv
88.7146 79.8403 87.5613 72.8779 86.4158 67.8877 cv
85.304 68.3564 84.1921 68.8252 83.0798 69.2939 cv
83.9338 70.4507 83.0335 74.8472 82.9392 76.2471 cv
82.7605 78.8979 82.4021 81.5146 82.0242 84.144 cv
83.637 84.3623 85.2498 84.5806 86.8621 84.7988 cv
86.5759 79.3306 83.7083 74.8301 84.053 69.1963 cv
84.2586 65.8325 84.5603 62.7324 80.1106 63.4756 cv
80.971 64.1309 81.8313 64.7861 82.6917 65.4414 cv
82.7229 64.9448 82.7546 64.4482 82.7859 63.9517 cv
82.905 62.0669 80.2312 61.5044 79.3377 63.0176 cv
78.6243 64.2246 78.3259 65.1655 78.7561 66.5796 cv
79.304 68.3813 80.0881 70.1851 80.6135 71.9692 cv
81.4177 74.6997 82.9026 74.876 85.3689 74.5073 cv
84.4119 73.9643 83.4548 73.4209 82.4978 72.8774 cv
82.3103 72.958 82.1233 73.0381 81.9363 73.1182 cv
83.2429 73.4634 84.5496 73.8086 85.8562 74.1533 cv
85.7703 73.8906 85.6843 73.6279 85.5979 73.3652 cv
85.0125 71.5796 82.2581 70.8916 81.3049 72.8042 cv
80.9763 73.5762 80.5603 74.2983 80.0579 74.9707 cv
81.2717 74.814 82.4861 74.6577 83.7 74.501 cv
82.7366 73.3789 83.5169 69.4976 83.6384 68.1372 cv
83.7908 66.436 81.2727 66.2656 80.7844 67.751 cv
80.7844 67.751 li
cp
f
80.4026 84.977 mo
78.6541 85.2695 76.9036 85.5527 75.1565 85.8545 cv
73.5335 86.1348 72.3836 86.5996 71.7234 88.1807 cv
70.7253 90.5713 75.4646 91.436 75.2722 88.6611 cv
75.2678 88.5952 76.8904 87.6025 77.2112 87.4355 cv
77.3098 87.3843 77.2385 87.2441 77.1389 87.2642 cv
76.1672 87.4604 75.2903 87.4976 74.3303 87.2539 cv
74.5823 87.4477 74.8347 87.6416 75.0867 87.8354 cv
75.0662 87.8066 75.0462 87.7778 75.0256 87.749 cv
74.8098 88.5732 74.5935 89.397 74.3777 90.2212 cv
76.5476 89.3042 79.1238 89.1626 81.4495 88.7739 cv
83.9431 88.3569 82.8855 84.562 80.4026 84.977 cv
80.4026 84.977 li
cp
f
72.5525 87.21 mo
71.011 87.2598 69.4695 87.3091 67.9275 87.3584 cv
67.7322 87.3647 67.7312 87.6675 67.9275 87.6631 cv
69.4695 87.6294 71.011 87.5957 72.5525 87.5615 cv
72.7786 87.5566 72.7791 87.2031 72.5525 87.21 cv
72.5525 87.21 li
cp
f
71.9827 86.9517 mo
69.5315 87.4473 66.2991 87.8428 63.8088 87.4326 cv
62.7795 87.2632 61.6248 86.5156 60.908 87.6182 cv
60.4998 88.2466 60.8377 88.9663 61.3665 89.3667 cv
62.6521 90.3413 64.8474 90.2402 66.3547 90.0786 cv
68.5452 89.8433 70.2922 88.936 72.3313 88.2173 cv
73.1282 87.9365 72.8142 86.7832 71.9827 86.9517 cv
71.9827 86.9517 li
cp
f
62.7986 88.8047 mo
65.8821 89.2744 68.8987 89.2768 72.0051 89.3569 cv
72.0051 88.4604 72.0051 87.5635 72.0051 86.667 cv
69.2483 86.8965 66.74 86.5581 63.9988 86.3403 cv
61.8074 86.166 59.4656 85.6914 57.4128 86.5967 cv
56.7507 86.8887 57.0364 87.8149 57.5974 88.0102 cv
58.8123 88.4331 60.0159 88.396 61.2849 88.6172 cv
62.7048 88.8643 64.0681 89.3198 65.4959 89.5381 cv
67.7771 89.8867 70.1423 90.0166 72.3626 89.3091 cv
74.0212 88.7803 73.3401 86.3711 71.6477 86.7148 cv
68.8469 87.2842 65.8836 87.1538 63.054 86.917 cv
61.9876 86.8276 61.7244 88.6406 62.7986 88.8047 cv
62.7986 88.8047 li
cp
f
58.3167 86.0005 mo
55.0535 84.8955 52.2317 85.4219 49.533 87.5464 cv
50.4275 87.7827 51.322 88.019 52.2161 88.2549 cv
52.1648 88.1323 52.114 88.0093 52.0628 87.8862 cv
51.7478 87.1309 51.2004 86.5903 50.3367 86.5727 cv
48.3831 86.5327 46.8713 86.6216 45.0794 85.5371 cv
43.8152 84.772 43.3381 84.375 41.8508 84.2578 cv
40.9495 84.187 40.1697 85.2412 40.4607 86.0825 cv
41.1653 88.1162 42.7112 89.0898 44.6941 89.9316 cv
45.6106 90.3208 46.574 90.5879 47.575 90.6274 cv
47.7249 90.6338 50.2327 90.2266 50.2415 90.23 cv
50.9255 90.4853 51.6873 90.0513 52.0545 89.4922 cv
53.3894 87.457 55.5964 86.5371 58.0242 87.0625 cv
58.7185 87.2129 58.989 86.228 58.3167 86.0005 cv
58.3167 86.0005 li
cp
f
44.5295 85.7602 mo
42.6824 85.0967 40.6638 83.9966 38.7214 83.7436 cv
37.2131 83.5474 35.9519 83.6186 34.4793 83.1577 cv
33.072 82.7173 31.9417 81.9629 30.6643 81.3061 cv
29.4465 80.6797 27.9363 80.5723 26.6228 80.1924 cv
25.0081 79.7256 24.5637 82.4434 26.3113 82.4941 cv
27.1931 82.4512 28.0549 82.5718 28.8962 82.855 cv
28.6448 82.5244 28.3933 82.1938 28.1414 81.8633 cv
28.366 84.3227 30.4973 85.4551 32.739 86.0347 cv
33.969 86.3525 35.2673 86.3975 36.533 86.4302 cv
39.2752 86.5015 41.3245 87.0332 43.9622 87.8169 cv
45.2937 88.2124 45.8054 86.2183 44.5295 85.7602 cv
44.5295 85.7602 li
cp
f
64.9221 71.5493 mo
63.8333 71.5796 63.2029 71.8389 62.4172 72.6313 cv
61.3538 73.7046 62.9212 75.1846 64.0457 74.2598 cv
65.0886 73.4018 66.1013 72.9424 67.3001 72.4028 cv
66.7761 71.8789 66.2522 71.355 65.7283 70.831 cv
64.8772 72.1265 63.8186 72.8227 62.3572 73.2827 cv
62.7097 73.8882 63.0618 74.4936 63.4143 75.0991 cv
65.7537 73.0098 68.2542 70.8198 68.0305 67.4512 cv
67.762 63.4087 64.1731 61.1343 62.5535 57.7046 cv
61.8782 58.2256 61.2024 58.7471 60.5271 59.2681 cv
62.8748 61.5635 64.4915 64.0098 65.9944 66.8911 cv
68.1379 71.0015 62.7234 71.9492 60.0476 73.4585 cv
60.6213 73.6919 61.1956 73.9253 61.7698 74.1592 cv
61.7659 74.1982 61.762 74.2378 61.7586 74.2768 cv
62.492 73.4502 61.3201 72.251 60.5354 73.0542 cv
60.3196 73.2754 60.1033 73.4966 59.887 73.7178 cv
59.4646 74.1509 59.8958 74.8184 60.4573 74.6973 cv
60.7639 74.6313 61.0701 74.5654 61.3767 74.499 cv
61.1545 73.9722 60.9329 73.4458 60.7107 72.9189 cv
60.2722 73.1763 60.1375 73.2661 59.8103 73.6416 cv
58.9011 74.6846 60.0227 76.0142 61.2312 75.4834 cv
62.8015 74.793 64.1912 73.8721 65.7732 73.2026 cv
66.6506 72.831 67.6296 72.5151 68.3757 71.8999 cv
69.6257 70.8691 69.6277 69.8379 69.4768 68.3486 cv
69.0095 63.7227 65.7844 59.852 62.0906 57.2412 cv
60.907 56.4048 59.3753 58.3569 60.5271 59.2681 cv
62.4343 60.7769 64.7503 63.4009 65.4548 65.7285 cv
66.4182 68.9101 64.0593 71.5293 61.8777 73.5625 cv
61.1008 74.2866 61.9041 75.727 62.9348 75.3784 cv
64.8352 74.7358 66.2327 73.7544 67.5325 72.2231 cv
68.2893 71.3315 67.5667 70.0845 66.4148 70.3032 cv
64.7434 70.6206 63.5818 71.4014 62.4172 72.6313 cv
63.0203 73.0962 63.6228 73.5615 64.2258 74.0264 cv
64.5359 73.7764 64.846 73.5259 65.156 73.2759 cv
66.1316 73.081 65.905 71.5225 64.9221 71.5493 cv
64.9221 71.5493 li
cp
f
52.9334 75.1504 mo
53.1682 74.7295 53.6741 74.3384 54.0613 74.3594 cv
53.8611 74.3052 53.6609 74.251 53.4607 74.1968 cv
53.5022 74.2163 53.5432 74.2358 53.5847 74.2554 cv
53.4426 74.1133 53.3005 73.9707 53.158 73.8286 cv
53.2454 73.2627 53.2229 73.0991 53.0906 73.3374 cv
53.0432 73.4121 52.9939 73.4858 52.9431 73.5586 cv
52.8826 73.6435 52.8201 73.7222 52.7527 73.8018 cv
52.5437 74.0503 52.3098 74.2754 52.0667 74.4902 cv
51.5989 74.9038 51.5974 75.689 51.968 76.1538 cv
52.3884 76.6816 53.0081 76.7451 53.6023 76.48 cv
54.2888 76.1733 54.822 75.709 55.3987 75.2402 cv
56.2239 74.5688 55.3206 73.3345 54.4182 73.5557 cv
53.6843 73.7353 52.9924 73.9224 52.3235 74.292 cv
52.8352 74.9551 53.3469 75.6186 53.8587 76.2817 cv
54.7669 75.3296 56.4861 73.0981 54.6624 72.1411 cv
53.8543 71.7173 52.8904 72.1387 52.241 72.6582 cv
51.6795 73.1079 51.3069 73.689 51.0696 74.3647 cv
50.6848 75.4629 52.3762 76.1484 52.9334 75.1504 cv
52.9334 75.1504 li
cp
f
60.7224 75.6611 mo
60.9119 76.3452 61.3108 76.7705 62.0247 76.8901 cv
62.4304 76.958 62.615 76.896 62.9924 76.7632 cv
63.1868 76.6958 63.365 76.5976 63.5281 76.4702 cv
63.8215 76.4004 63.9158 76.2393 63.8103 75.9873 cv
62.9309 77.0503 64.324 78.52 65.3508 77.5273 cv
65.8933 77.0024 66.532 76.1103 67.2454 75.8237 cv
66.9055 75.3818 66.5662 74.9399 66.2263 74.498 cv
66.0886 74.6562 65.9514 74.8144 65.8137 74.9722 cv
64.4822 76.4468 67.03 78.2539 67.9026 76.584 cv
68.0916 76.2222 68.4461 75.4502 68.8674 75.2939 cv
68.4797 74.6279 68.092 73.9619 67.7044 73.2959 cv
67.3079 73.6689 67.1355 73.9043 66.8772 74.3887 cv
65.926 76.1733 68.4583 77.6279 69.5725 75.9639 cv
70.0388 75.2676 70.324 74.5806 70.2786 73.7329 cv
70.1267 73.9976 69.9749 74.2622 69.823 74.5273 cv
70.7268 74.0474 70.9153 73.2759 70.6843 72.3081 cv
70.553 71.7588 69.8943 71.5366 69.4275 71.7969 cv
69.0754 71.9927 68.9187 72.1216 68.6565 72.4336 cv
68.3879 72.7534 68.1843 73.1987 68.3416 73.6255 cv
68.3845 73.7432 68.428 73.8603 68.471 73.9775 cv
68.6121 73.6309 68.7532 73.2847 68.8943 72.9385 cv
68.4031 73.2363 67.9519 73.5693 67.4373 73.8286 cv
68.2014 74.416 68.9656 75.0034 69.7297 75.5913 cv
69.823 74.9277 69.8538 74.478 69.7024 73.8237 cv
69.489 72.9018 68.3416 72.7241 67.7044 73.2959 cv
66.927 73.9941 66.2395 74.375 65.6057 75.2417 cv
66.4163 75.583 67.2263 75.9248 68.0369 76.2666 cv
68.2131 75.5137 68.2234 75.1387 67.7844 74.498 cv
67.491 74.0698 66.7571 73.8281 66.3674 74.3154 cv
65.8093 75.0146 64.7932 75.3896 64.031 75.8169 cv
64.5642 76.0337 65.0974 76.251 65.6306 76.4678 cv
65.5066 75.7085 65.4265 74.9634 64.6638 74.5952 cv
64.2776 74.4087 62.4187 74.397 62.5759 75.1499 cv
62.325 73.9477 60.3894 74.458 60.7224 75.6611 cv
60.7224 75.6611 li
cp
f
71.5144 70.5654 mo
70.9832 69.873 71.4627 68.0664 71.4744 67.2349 cv
71.4885 66.2471 71.5188 65.2178 71.3543 64.2397 cv
71.0872 62.6514 69.9412 60.8799 69.0413 59.5649 cv
68.6428 58.9824 67.8523 58.6719 67.2029 59.083 cv
65.3001 60.2866 67.072 62.9394 67.7878 64.1533 cv
69.1804 66.5137 67.3445 70.0947 69.3059 72.2695 cv
70.3552 73.4336 72.4959 71.8452 71.5144 70.5654 cv
71.5144 70.5654 li
cp
f
65.5393 55.8994 mo
65.2844 55.6367 65.0432 55.3892 64.8191 55.0996 cv
64.5476 54.7485 63.991 54.6807 63.594 54.7759 cv
62.9382 54.9321 63.0725 54.6758 62.4241 54.3643 cv
61.8294 54.0786 61.1897 54.0923 60.6565 53.9136 cv
59.5193 53.5312 58.5496 54.1045 58.5212 55.3467 cv
58.5027 56.1514 58.9119 56.7485 59.6077 57.1035 cv
59.9212 57.2632 60.3738 57.4121 60.7244 57.3809 cv
61.2532 57.3335 60.6443 57.1548 61.0164 57.3555 cv
61.6663 57.7061 62.1404 58.0615 62.9295 57.9448 cv
63.6775 57.834 64.2727 57.374 64.8191 56.8804 cv
64.2253 56.8804 63.6316 56.8804 63.0383 56.8804 cv
63.3211 57.1128 63.5608 57.3603 63.8157 57.6226 cv
64.9109 58.75 66.6336 57.0254 65.5393 55.8994 cv
65.5393 55.8994 li
cp
f
63.9275 43.4443 mo
65.9334 43.4443 65.9368 40.3271 63.9275 40.3271 cv
61.9221 40.3271 61.9187 43.4443 63.9275 43.4443 cv
cp
f
77.0247 37.9038 mo
77.0335 37.853 77.0422 37.8022 77.051 37.7519 cv
77.1765 37.0391 76.6497 36.5122 75.9368 36.6372 cv
75.886 36.6465 75.8352 36.6553 75.7849 36.6641 cv
75.0169 36.7993 74.8425 37.8511 75.3401 38.3486 cv
75.8377 38.8462 76.8894 38.6714 77.0247 37.9038 cv
77.0247 37.9038 li
cp
f
79.3313 32.0098 mo
79.3088 31.7998 79.2942 31.5972 79.217 31.3999 cv
78.886 30.5566 77.7717 30.3052 77.2517 31.1431 cv
77.0794 31.4204 76.9993 31.6826 77.0344 32.0098 cv
77.1003 32.6265 77.5149 33.1582 78.1829 33.1582 cv
78.7527 33.1582 79.3977 32.6304 79.3313 32.0098 cv
79.3313 32.0098 li
cp
f
84.0071 29.189 mo
84.0579 29.2153 84.1082 29.2417 84.1589 29.2686 cv
85.0647 29.7407 86.0276 28.7915 85.5462 27.8813 cv
85.5193 27.8311 85.4929 27.7803 85.4661 27.73 cv
85.1423 27.1177 84.2605 27.0454 83.7913 27.5142 cv
83.324 27.9814 83.3928 28.8687 84.0071 29.189 cv
84.0071 29.189 li
cp
f
85.8025 32.624 mo
87.718 32.624 87.721 29.6475 85.8025 29.6475 cv
83.8875 29.6475 83.884 32.624 85.8025 32.624 cv
cp
f
74.4275 30.9521 mo
75.8001 30.9521 75.8025 28.8193 74.4275 28.8193 cv
73.0554 28.8193 73.053 30.9521 74.4275 30.9521 cv
cp
f
64.6775 40.7568 mo
66.4421 40.7568 66.4451 38.0146 64.6775 38.0146 cv
62.9133 38.0146 62.9104 40.7568 64.6775 40.7568 cv
cp
f
53.3025 42.8193 mo
54.8259 42.8193 54.8284 40.4521 53.3025 40.4521 cv
51.7795 40.4521 51.7771 42.8193 53.3025 42.8193 cv
cp
f
13.7825 30.4951 mo
14.2537 29.354 15.8152 28.228 16.6755 27.3286 cv
17.7976 26.1553 18.9363 25.0034 20.1135 23.8848 cv
19.073 22.8442 18.0325 21.8037 16.9915 20.7632 cv
15.2952 22.7373 13.3845 24.5029 11.3962 26.1792 cv
12.5857 26.4937 13.7752 26.8076 14.9646 27.1216 cv
14.927 26.9258 14.8889 26.73 14.8513 26.5342 cv
14.783 27.0552 14.7151 27.5757 14.6467 28.0967 cv
15.9099 26.2104 17.7288 24.5698 19.2586 22.8999 cv
20.9441 21.0596 18.2937 18.3735 16.5081 20.1494 cv
14.0867 22.5566 11.4641 24.9414 9.55152 27.7876 cv
8.60816 29.1919 10.4475 30.8862 11.8235 30.0596 cv
13.0779 29.3052 14.0227 28.1997 15.0823 27.207 cv
16.5462 25.8354 18.0901 24.5791 19.7634 23.4712 cv
18.989 22.876 18.2141 22.2803 17.4397 21.6851 cv
16.7273 24.1748 14.4641 25.8208 13.6443 28.2998 cv
13.1184 29.8887 15.4099 31.2915 16.5237 29.9761 cv
17.8064 28.4614 19.1965 27.0913 20.6946 25.7895 cv
19.8113 25.1079 18.9275 24.4268 18.0442 23.7451 cv
17.3523 24.8247 16.6814 25.8848 15.8928 26.8984 cv
16.8523 27.6387 17.8118 28.3789 18.7708 29.1191 cv
19.094 28.4478 20.0896 26.5405 20.9338 26.3481 cv
20.4036 26.2075 19.8733 26.0674 19.3425 25.9272 cv
19.4212 25.9937 19.4998 26.0601 19.5784 26.1265 cv
19.4177 25.7383 19.2566 25.3496 19.0955 24.9609 cv
19.1091 25.062 19.1223 25.1626 19.136 25.2637 cv
19.2981 24.8716 19.4607 24.4795 19.6233 24.0874 cv
19.5628 24.1499 19.5022 24.2129 19.4412 24.2759 cv
20.365 24.8135 21.2883 25.3511 22.2122 25.8887 cv
22.4456 24.3091 22.6228 22.7109 23.0022 21.1587 cv
23.3367 19.79 21.8801 18.6465 20.6375 19.3403 cv
19.9475 19.7256 19.3464 20.0957 18.7376 20.5977 cv
19.6018 21.1006 20.4661 21.604 21.3298 22.1069 cv
21.6863 21.1001 21.7854 20.0693 22.197 19.0786 cv
22.5525 18.2227 21.4837 17.1685 20.6326 17.5142 cv
20.4451 17.5898 20.2576 17.666 20.0701 17.7422 cv
19.5173 17.9663 19.0569 18.4077 19.072 19.0527 cv
19.0769 19.2471 19.0813 19.4414 19.0862 19.6357 cv
19.1082 20.5723 20.323 21.1689 21.0066 20.4312 cv
21.2522 20.1216 21.5398 19.8579 21.8699 19.6396 cv
21.1462 19.3398 20.4221 19.04 19.6985 18.7402 cv
19.6677 19.5493 19.3474 20.1685 18.7376 20.5977 cv
17.658 21.5947 18.7835 23.7866 20.2468 23.1904 cv
20.9802 22.8911 21.593 22.5469 22.2625 22.1206 cv
21.4548 21.6572 20.6472 21.1938 19.8401 20.7305 cv
19.679 22.167 19.3084 23.5928 19.0149 25.0073 cv
18.6829 26.6113 20.5408 27.7939 21.7859 26.6206 cv
22.8948 25.5747 22.4983 23.5889 20.9338 23.1938 cv
18.7351 22.6392 17.1536 25.6694 15.8928 26.8984 cv
14.1873 28.5605 16.9509 31.2642 18.4846 29.4902 cv
19.6404 28.1528 20.5359 26.7134 21.1282 25.0449 cv
21.7341 23.3398 19.471 22.3809 18.3084 23.4033 cv
16.8264 24.7065 15.4334 26.0967 14.0872 27.5395 cv
15.0471 28.0981 16.0071 28.6572 16.9666 29.2158 cv
17.8113 26.7827 19.9548 25.1157 20.4905 22.5259 cv
20.7361 21.3379 19.3621 19.8267 18.1668 20.7393 cv
16.8982 21.708 15.6277 22.6812 14.4158 23.7197 cv
13.3318 24.6489 11.929 26.6103 10.5437 27.0249 cv
11.0823 27.9497 11.6209 28.8745 12.1594 29.7998 cv
14.741 27.7817 16.9202 25.1909 19.2586 22.8999 cv
18.3416 21.9829 17.4251 21.0659 16.5081 20.1494 cv
15.3572 21.3877 14.2063 22.6255 13.0383 23.8477 cv
12.0886 24.8418 11.072 25.7168 10.8474 27.1216 cv
10.5789 28.7998 12.2732 30.6538 13.9837 29.5327 cv
16.3665 27.9707 18.3386 26.1099 20.1135 23.8848 cv
21.8406 21.7192 19.0242 18.6758 16.9915 20.7632 cv
15.573 22.2197 14.1985 23.7104 12.9299 25.3013 cv
11.9026 26.5898 10.6443 27.8843 10.2795 29.5293 cv
9.76051 31.8696 12.9094 32.6118 13.7825 30.4951 cv
13.7825 30.4951 li
cp
1 .980392 .952941 rgb
f
15.0798 29.5742 mo
15.3396 29.416 15.5994 29.2583 15.8591 29.1006 cv
15.4846 29.0029 15.1106 28.9048 14.7361 28.8066 cv
14.5339 28.4668 14.5247 29.1963 14.3767 29.5029 cv
14.1545 29.9644 13.8777 30.3579 13.5784 30.7734 cv
12.7219 31.9614 14.6668 33.0483 15.5247 31.9111 cv
16.3333 30.8389 17.0911 28.8501 18.4212 28.4517 cv
18.1492 27.9849 17.8777 27.5186 17.6062 27.0518 cv
17.0828 27.7241 16.5994 28.4287 16.1448 29.1489 cv
15.1936 30.6558 17.552 32.0088 18.5212 30.5381 cv
19.9324 28.396 19.4114 30.0518 20.5261 31.1133 cv
20.9192 31.4873 21.2766 31.6455 21.8084 31.7212 cv
22.302 31.791 23.2283 31.3931 23.6213 31.5474 cv
23.3235 31.3179 23.0252 31.0889 22.7268 30.8594 cv
22.929 31.3354 22.8997 32.1802 23.0935 32.7168 cv
23.4255 33.6353 24.8538 34.0483 25.364 33.0137 cv
25.8967 31.9331 26.0149 30.4228 25.3113 29.3491 cv
25.0339 28.9253 24.5916 28.5869 24.1199 28.4141 cv
23.5637 28.21 22.7854 28.6108 22.4109 28.4897 cv
22.1951 28.4199 21.8958 27.6353 21.5613 27.2998 cv
21.1472 26.8848 20.7883 26.7158 20.1985 26.7319 cv
18.9392 26.7666 17.6082 27.9634 16.6384 28.6553 cv
17.3123 29.1733 17.9861 29.6914 18.6599 30.2095 cv
19.0061 29.3848 19.1448 28.5308 19.0359 27.644 cv
18.9441 26.895 18.2004 26.5762 17.6062 27.0518 cv
16.5359 27.9077 15.5784 29.8008 14.2517 30.2554 cv
14.676 30.8076 15.1004 31.3594 15.5247 31.9111 cv
16.2097 30.7651 17.2244 28.6582 15.8591 27.6841 cv
15.6379 27.5264 15.2527 27.5327 15.0305 27.6841 cv
14.7791 27.8555 14.5271 28.0269 14.2756 28.1978 cv
13.4368 28.7686 14.1926 30.1133 15.0798 29.5742 cv
15.0798 29.5742 li
cp
f
15.8674 34.3882 mo
15.8767 34.7314 15.9456 35.0474 16.1502 35.3271 cv
16.467 35.7607 17.0872 36.0566 17.596 35.7061 cv
17.8967 35.4985 17.698 35.6777 17.6809 35.6123 cv
17.6355 35.5669 17.5896 35.522 17.5442 35.4766 cv
17.5769 35.5166 17.5964 35.5625 17.6033 35.6143 cv
17.6565 35.9678 17.7835 36.3579 17.9568 36.6694 cv
18.4358 37.5293 19.5418 37.8975 20.3865 37.3315 cv
21.0691 36.874 21.2727 35.647 20.3865 35.2407 cv
20.655 35.3638 20.0427 35.0435 19.97 34.9795 cv
19.8616 34.8838 19.9636 35.0073 19.8347 34.8657 cv
19.5169 34.5156 19.3474 34.1333 18.9182 33.8896 cv
18.1736 33.4673 17.2639 33.4214 16.5291 33.8813 cv
17.011 34.0078 17.4929 34.1343 17.9749 34.2607 cv
17.9832 34.3032 17.992 34.3457 18.0003 34.3882 cv
18.0247 33.0151 15.8308 33.0146 15.8674 34.3882 cv
15.8674 34.3882 li
cp
f
33.8045 49.2295 mo
33.6541 49.5015 33.5037 49.7734 33.3533 50.0454 cv
34.1458 50.5088 34.9382 50.9722 35.7312 51.4355 cv
36.0667 50.7197 36.3757 50.1211 36.8474 49.4849 cv
35.8772 49.2222 34.9075 48.9595 33.9373 48.6968 cv
33.9177 53.0352 32.8591 57.356 32.8567 61.6724 cv
33.9734 61.3696 35.0901 61.0674 36.2068 60.7646 cv
35.8489 60.208 35.7517 59.6978 35.3831 59.1548 cv
35.1477 58.8086 34.5925 58.6455 34.2786 59.0122 cv
33.8977 59.457 33.7366 59.9639 33.3831 60.4009 cv
31.4939 62.7368 35.4988 64.8682 36.3879 62.1499 cv
37.7825 57.8867 37.3298 53.0845 37.0608 48.6968 cv
36.9631 47.1094 35.0408 46.6255 34.1506 47.9087 cv
33.5071 48.8359 33.2415 49.6255 33.1653 50.7402 cv
33.053 52.3745 35.3762 52.4893 35.8699 51.1064 cv
35.9739 50.8149 36.0779 50.5234 36.1819 50.2319 cv
36.6809 48.8345 34.51 47.9536 33.8045 49.2295 cv
33.8045 49.2295 li
cp
f
33.3958 57.2612 mo
32.8645 59.085 31.8743 61.1504 31.9251 63.0605 cv
31.9348 63.4429 32.2083 63.8989 32.6179 63.9707 cv
32.7078 63.9863 32.7971 64.0024 32.887 64.0181 cv
33.3074 64.0918 33.6306 63.9585 33.8767 63.6152 cv
33.9207 63.5542 33.9646 63.4932 34.0081 63.4316 cv
33.51 63.2217 33.012 63.0117 32.5139 62.8018 cv
31.927 65.1157 29.5476 69.3359 31.2957 71.5117 cv
31.5486 71.8267 31.9993 71.8564 32.3596 71.793 cv
32.489 71.77 32.6179 71.7476 32.7468 71.7251 cv
32.3318 71.4087 31.9168 71.0923 31.5012 70.7759 cv
31.6331 72.48 30.6326 74.6245 29.949 76.2685 cv
30.7039 76.4766 31.4587 76.6846 32.2136 76.8931 cv
32.5164 75.1894 32.863 73.5098 33.2659 71.8271 cv
32.3801 71.707 31.4949 71.5874 30.6091 71.4678 cv
30.4504 73.1611 30.1199 74.5249 29.6565 76.1269 cv
29.3294 77.2568 30.4622 78.4961 31.6311 78.102 cv
33.6741 77.4131 33.9104 76.2617 35.0383 74.4365 cv
34.2688 74.228 33.4993 74.0195 32.7297 73.811 cv
32.7224 73.9634 32.7146 74.1162 32.7073 74.2685 cv
31.2141 76.0093 34.1585 77.9878 35.0823 76.1011 cv
35.3152 75.4746 35.6614 74.918 36.1194 74.4316 cv
35.2029 74.312 34.2859 74.1919 33.3689 74.0723 cv
33.385 74.0459 33.4016 74.0195 33.4177 73.9936 cv
34.0701 73.8223 34.7219 73.6514 35.3738 73.4805 cv
35.2346 73.3901 35.095 73.2998 34.9553 73.2095 cv
34.6682 73.0229 34.2385 73.0913 34.0042 73.332 cv
33.8831 73.456 33.7625 73.5801 33.6414 73.7041 cv
32.1658 75.2178 34.9197 77.2529 35.887 75.4365 cv
36.2356 74.7812 36.3513 74.418 36.325 73.6724 cv
36.2776 72.3218 34.7361 71.748 33.7556 72.6079 cv
32.7947 73.4507 32.6653 73.709 32.3186 74.9355 cv
33.3084 75.0698 34.2986 75.2036 35.2888 75.3379 cv
35.2815 74.8276 35.2546 74.3188 35.2078 73.811 cv
35.156 73.0981 34.4431 72.291 33.6394 72.6167 cv
32.4143 73.1128 31.7517 74.6772 30.7776 75.0054 cv
31.4553 75.5215 32.1326 76.0376 32.8098 76.5537 cv
33.03 74.8643 33.1658 73.165 33.3142 71.4678 cv
33.4475 69.9448 31.0003 69.6357 30.6575 71.1079 cv
30.2332 72.9311 29.9861 74.7114 29.907 76.5806 cv
29.8523 77.8755 32.0203 78.2183 32.2136 76.8931 cv
32.4871 75.02 32.4241 72.9878 33.3352 71.2725 cv
33.6526 70.6748 33.3547 70.0518 32.7468 69.8271 cv
32.676 69.8008 33.9436 63.8477 34.0906 63.2363 cv
34.2654 62.5117 33.5266 62.0024 32.8899 62.3135 cv
34.7014 61.4292 34.6995 59.5464 35.2039 57.7598 cv
35.532 56.5957 33.7327 56.103 33.3958 57.2612 cv
33.3958 57.2612 li
cp
f
30.9275 74.249 mo
32.843 74.249 32.846 71.2725 30.9275 71.2725 cv
29.0125 71.2725 29.009 74.249 30.9275 74.249 cv
cp
f
31.2561 74.5112 mo
31.7918 69.9985 33.4226 64.3291 32.4436 59.8164 cv
32.2776 59.0522 31.3064 59.23 31.0647 59.8164 cv
29.2849 64.1401 29.825 69.8994 29.3577 74.5112 cv
29.2341 75.7334 31.1145 75.7051 31.2561 74.5112 cv
31.2561 74.5112 li
cp
f
31.2556 52.5371 mo
31.3103 52.5054 31.3645 52.4731 31.4192 52.4409 cv
31.9241 52.9463 32.429 53.4512 32.9338 53.9561 cv
33.636 51.4316 34.2551 48.8921 34.947 46.3701 cv
35.1609 45.5894 34.3284 45.0659 33.6638 45.3838 cv
33.4417 45.4902 33.2195 45.5967 32.9973 45.7031 cv
33.4939 46.085 33.9905 46.4668 34.4871 46.8486 cv
34.8826 45.7393 34.9934 44.5503 34.4822 43.4404 cv
34.2278 42.8892 33.5974 42.5288 33.365 42.0508 cv
32.8508 40.9917 33.1126 40.0342 33.6218 39.1265 cv
33.9841 38.4805 33.5212 37.7295 32.802 37.6982 cv
31.0286 37.6216 30.0081 38.9853 29.9866 40.7358 cv
29.9739 41.7256 30.3723 42.3345 30.8587 43.1548 cv
31.5759 44.3667 32.3215 45.3486 32.531 46.8486 cv
32.6375 47.6103 33.7537 47.8115 34.2263 47.2959 cv
34.3919 47.1157 34.5569 46.9355 34.7224 46.7554 cv
34.2649 46.4028 33.8079 46.0498 33.3503 45.6973 cv
31.9456 48.1846 31.0378 50.4585 30.5588 53.3013 cv
30.3801 54.3618 31.3606 55.2104 32.3679 54.6919 cv
32.8572 54.4404 33.0725 54.2358 33.2996 53.7319 cv
33.9133 52.3691 32.0662 51.208 31.2556 52.5371 cv
31.2556 52.5371 li
cp
f
33.5525 39.0107 mo
34.5178 39.0107 34.5193 37.5107 33.5525 37.5107 cv
32.5877 37.5107 32.5857 39.0107 33.5525 39.0107 cv
cp
f
39.1775 42.0928 mo
40.2483 42.0928 40.2503 40.4287 39.1775 40.4287 cv
38.1067 40.4287 38.1052 42.0928 39.1775 42.0928 cv
cp
f
40.8142 43.5107 mo
40.8562 43.9692 40.8977 44.4277 40.9392 44.8857 cv
40.9939 45.4849 41.4119 45.999 42.0525 45.999 cv
42.6126 45.999 43.2205 45.4883 43.1658 44.8857 cv
43.1243 44.4277 43.0828 43.9692 43.0408 43.5107 cv
42.9866 42.9121 42.5681 42.3975 41.9275 42.3975 cv
41.3674 42.3975 40.7595 42.9087 40.8142 43.5107 cv
40.8142 43.5107 li
cp
f
42.0671 43.522 mo
42.033 44.6108 42.384 45.4824 43.5046 45.7676 cv
43.427 45.1714 43.3489 44.5752 43.2708 43.9785 cv
41.8406 44.9141 40.9631 46.6343 40.2175 48.1294 cv
39.6682 49.2319 40.6213 51.0937 42.0408 50.501 cv
42.447 50.3315 43.0169 50.0693 43.4744 50.0728 cv
43.1414 49.9346 42.8084 49.7969 42.4753 49.6587 cv
42.5364 49.7192 42.5974 49.7793 42.658 49.8394 cv
42.5198 49.5054 42.3816 49.1714 42.2429 48.8374 cv
42.2561 49.0542 42.2048 49.2593 42.0891 49.4521 cv
41.9212 49.9277 42.1238 50.4697 42.4504 50.8193 cv
42.5183 50.8916 42.5857 50.9644 42.6536 51.0366 cv
42.928 51.3306 43.3772 51.4321 43.7586 51.3286 cv
44.2058 51.2075 44.4461 51.0537 44.8045 50.7656 cv
45.4158 50.2739 44.8933 49.2568 44.1829 49.2651 cv
44.1321 49.2612 44.0808 49.2568 44.0295 49.2529 cv
44.1062 49.8477 44.1829 50.4419 44.2595 51.0366 cv
44.9045 50.251 45.4456 49.1152 44.884 48.1221 cv
44.1848 46.8853 42.7532 47.3799 41.6116 47.3296 cv
42.0764 48.1392 42.5413 48.9492 43.0061 49.7588 cv
43.8084 48.3052 44.7991 46.5244 44.7439 44.8237 cv
44.721 44.1226 44.1399 43.7939 43.5046 43.8799 cv
43.4148 43.8921 43.325 43.9043 43.2346 43.9165 cv
43.4719 43.9478 43.7097 43.9785 43.947 44.0098 cv
43.9295 43.8472 43.9124 43.6846 43.8953 43.522 cv
43.9163 42.3433 42.1038 42.3472 42.0671 43.522 cv
42.0671 43.522 li
cp
f
54.8367 61.9478 mo
54.5696 62.2256 54.2878 62.6406 53.9373 62.8042 cv
54.2053 62.7319 54.4734 62.6592 54.7415 62.5869 cv
54.7673 62.585 54.7927 62.5825 54.8186 62.5806 cv
55.1423 62.8296 55.4661 63.0781 55.7893 63.3271 cv
55.7615 63.2773 55.7341 63.228 55.7063 63.1782 cv
55.761 63.5967 55.8157 64.0146 55.8704 64.4331 cv
55.8909 64.3691 55.9114 64.3057 55.9319 64.2417 cv
55.7918 64.4819 55.6516 64.7222 55.5115 64.9624 cv
55.8132 64.6572 56.1575 64.394 56.4861 64.1186 cv
55.614 63.4458 54.742 62.7729 53.8699 62.1001 cv
53.5364 62.5771 53.2014 63.0527 52.8728 63.5327 cv
52.2634 64.4228 52.8704 65.8037 53.8919 66.0376 cv
54.3611 66.145 54.5745 66.6782 54.845 67.1919 cv
55.2161 67.897 55.6428 68.5513 56.2493 69.081 cv
56.6731 69.4517 57.3201 69.7393 57.8919 69.5151 cv
57.9534 69.4912 58.0144 69.4673 58.0754 69.4434 cv
58.0754 68.5317 58.0754 67.6201 58.0754 66.709 cv
57.7927 66.6377 57.2366 65.8506 56.971 65.5161 cv
56.5789 65.0215 56.2556 64.4629 55.7962 64.0268 cv
55.3684 63.6211 54.4807 63.7397 54.3665 64.4043 cv
54.2234 65.2368 54.407 66.0337 54.7869 66.7856 cv
54.9905 67.1875 55.2341 67.5522 55.5325 67.8906 cv
55.7981 68.1914 56.2673 68.458 56.4739 68.792 cv
57.2488 70.0439 59.0042 69.4477 59.1165 68.0762 cv
59.1755 67.354 58.781 66.9687 58.4177 66.4184 cv
58.0974 65.9336 57.8723 65.3867 57.5613 64.895 cv
56.9158 63.875 56.0183 62.9902 54.7986 62.7495 cv
55.1379 63.5845 55.4778 64.4194 55.8176 65.2544 cv
56.1311 64.7656 56.4378 64.2729 56.7463 63.7817 cv
57.7786 62.1367 55.4866 60.5054 54.1306 61.7632 cv
53.5598 62.2925 52.9114 62.769 52.7297 63.5674 cv
52.5354 64.4199 52.9739 65.2666 53.761 65.6313 cv
54.4602 65.9551 55.3005 65.8457 55.8679 65.3061 cv
56.4788 64.7251 56.5437 63.8037 56.6975 63.0308 cv
56.9041 61.9951 55.6541 61.0967 54.8367 61.9478 cv
54.8367 61.9478 li
cp
f
25.1375 14.1294 mo
25.3474 17.5962 26.8005 20.102 29.1917 22.5688 cv
31.5549 25.0073 34.6672 28.605 38.1257 29.2939 cv
39.1287 29.4937 40.3728 28.3603 39.6213 27.3486 cv
36.054 22.5469 28.6038 20.0854 26.8176 13.9019 cv
26.5584 13.0034 25.0774 13.1382 25.1375 14.1294 cv
25.1375 14.1294 li
cp
f
4.80494 37.8823 mo
5.61744 38.8848 6.38697 39.9224 7.20045 40.9238 cv
7.98853 41.8936 8.84889 43.0532 10.0056 43.5864 cv
10.5149 43.8208 11.2068 43.9624 11.7044 43.5864 cv
14.8181 41.2329 7.89527 37.0068 6.33863 35.8945 cv
5.07984 34.9951 3.97193 36.855 4.80494 37.8823 cv
4.80494 37.8823 li
cp
f
86.2424 47.9697 mo
86.863 49.7744 89.593 49.7622 90.4031 48.1103 cv
90.9646 46.9658 90.2625 45.8599 89.0383 45.731 cv
89.3782 45.7798 89.2839 45.7681 88.7551 45.6953 cv
88.5457 45.7163 88.3377 45.7466 88.1311 45.7861 cv
87.9299 45.8379 87.7293 45.9106 87.5339 45.9795 cv
86.742 46.2603 85.9158 47.0195 86.2424 47.9697 cv
86.2424 47.9697 li
cp
f
79.6775 36.4131 mo
81.3215 36.4131 81.324 33.8584 79.6775 33.8584 cv
78.0339 33.8584 78.031 36.4131 79.6775 36.4131 cv
cp
f
70.3025 38.5889 mo
72.1726 38.5889 72.1755 35.6826 70.3025 35.6826 cv
68.4324 35.6826 68.4295 38.5889 70.3025 38.5889 cv
cp
f
62.4275 47.4248 mo
64.0867 47.4248 64.0891 44.8467 62.4275 44.8467 cv
60.7688 44.8467 60.7659 47.4248 62.4275 47.4248 cv
cp
f
59.8025 43.999 mo
61.718 43.999 61.721 41.0225 59.8025 41.0225 cv
57.8875 41.0225 57.884 43.999 59.8025 43.999 cv
cp
f
59.3025 47.436 mo
59.367 47.436 59.367 47.3359 59.3025 47.3359 cv
59.2385 47.3359 59.238 47.436 59.3025 47.436 cv
cp
f
64.658 72.1182 mo
62.0818 73.7734 59.846 74.1777 57.2205 72.0552 cv
54.5046 69.8594 52.2771 66.3618 50.7263 63.1587 cv
52.2893 61.8066 53.8723 60.4844 55.5261 59.2402 cv
57.4714 57.7769 59.0217 55.8979 61.1433 57.918 cv
62.6462 59.3486 64.7312 61.5864 66.2293 63.856 cv
66.2507 63.8999 66.2639 63.9453 66.2893 63.9888 cv
66.3494 64.0908 66.4216 64.1851 66.5007 64.2744 cv
67.1638 65.335 67.6848 66.3921 67.9387 67.3667 cv
68.5862 69.8511 66.6873 70.8149 64.658 72.1182 cv
cp
71.0559 73.0142 mo
70.9797 72.8628 70.8762 72.7344 70.7625 72.6177 cv
71.721 71.4888 72.3621 70.2851 72.4519 69.0996 cv
72.5925 67.2436 71.6345 65.4101 70.5637 63.7515 cv
70.5808 63.7417 70.5969 63.73 70.6135 63.7202 cv
70.845 63.5869 71.0784 63.457 71.3132 63.3301 cv
71.3528 63.3086 71.3928 63.2881 71.4324 63.2671 cv
72.2019 63.3433 73.0535 63.0308 73.3796 62.3086 cv
73.782 61.4185 73.8069 60.4316 73.0706 59.6953 cv
72.364 58.9888 71.366 58.9004 70.4822 59.2852 cv
69.741 59.6079 69.0252 60.001 68.3269 60.4209 cv
68.1365 60.1382 67.9548 59.8599 67.7581 59.5762 cv
68.073 59.3232 68.3796 59.0596 68.6712 58.7808 cv
69.4587 58.5044 70.1604 57.7974 70.0642 56.9097 cv
70.0515 56.7954 70.0393 56.6811 70.0271 56.5669 cv
69.9382 55.7495 69.595 55.0757 68.7976 54.7393 cv
68.0989 54.4443 67.1419 54.5547 66.6126 55.1523 cv
66.2127 55.605 65.7835 56.0195 65.3294 56.416 cv
64.4749 55.4473 63.5501 54.5605 62.5315 53.835 cv
60.7732 52.582 58.8645 52.6269 56.9666 53.3574 cv
56.0647 52.2681 55.0852 51.2627 53.9744 50.3623 cv
53.136 49.6831 51.9661 49.5425 51.1462 50.3623 cv
50.4436 51.0649 50.3025 52.5073 51.1462 53.1909 cv
51.9656 53.8545 52.7571 54.5903 53.4675 55.3779 cv
52.7937 55.8774 52.1345 56.4189 51.4988 56.9717 cv
51.2517 56.6641 50.9207 56.4233 50.5564 56.2939 cv
50.5369 56.2705 50.5178 56.2471 50.4988 56.2236 cv
50.2771 55.9536 50.0549 55.6836 49.8328 55.4136 cv
49.4133 54.9038 48.9939 54.3936 48.575 53.8838 cv
47.9075 53.0723 46.4285 53.1406 45.7463 53.8838 cv
44.9548 54.7461 45.0344 55.8462 45.7463 56.7119 cv
46.4861 57.6118 47.2141 58.5229 47.9666 59.4121 cv
48.1038 59.5742 48.2576 59.6973 48.4138 59.8135 cv
47.9768 60.2236 47.5642 60.6055 47.1843 60.9385 cv
46.4568 61.5752 46.4011 62.3696 46.7175 63.0249 cv
46.6296 63.4287 46.6594 63.873 46.8679 64.3306 cv
47.49 65.6973 48.2229 66.9761 49.032 68.2021 cv
48.2117 69.0122 li
47.9016 69.3179 47.5916 69.624 47.282 69.9297 cv
47.1345 70.0752 46.9876 70.2202 46.8406 70.3657 cv
46.6638 70.4087 46.488 70.4692 46.3181 70.5684 cv
45.4353 71.085 44.989 72.4087 45.6008 73.3047 cv
46.1516 74.1118 47.0554 74.5962 48.0393 74.3237 cv
48.7576 74.1245 49.2468 73.6103 49.7615 73.102 cv
51.4314 71.4541 li
51.9412 72.0825 52.4646 72.7041 53.0027 73.3198 cv
53.0564 73.3813 53.1116 73.4458 53.1653 73.5078 cv
52.5979 73.8398 52.073 74.2358 51.5657 74.6987 cv
51.0066 75.2085 50.3884 75.959 49.738 76.2104 cv
48.7312 76.6006 48.0344 77.5542 48.3411 78.6709 cv
48.6052 79.6323 49.7888 80.46 50.8015 80.0679 cv
51.9016 79.6416 52.781 79.0273 53.6462 78.2275 cv
54.218 77.6992 54.8328 76.998 55.4929 76.7734 cv
55.7 76.7031 55.8728 76.6045 56.0305 76.4946 cv
57.0037 77.2998 58.0906 77.9243 59.3757 78.0996 cv
60.4026 78.2397 61.6936 78.0439 63.0603 77.6045 cv
63.8513 78.8818 64.738 80.0918 65.7014 81.2529 cv
66.3919 82.0845 67.8162 81.9668 68.53 81.2529 cv
69.3533 80.4297 69.2219 79.2583 68.53 78.4243 cv
67.8709 77.6304 67.2776 76.79 66.7268 75.9214 cv
67.0706 75.7173 67.407 75.5 67.7371 75.2759 cv
68.4563 76.6416 69.384 77.8979 70.469 78.9956 cv
72.282 80.8286 75.1101 78 73.2976 76.167 cv
72.3582 75.2168 71.6668 74.2305 71.0559 73.0142 cv
cp
.156863 .113725 .113725 rgb
f
95.5842 45.668 mo
94.8201 46.0937 94.075 46.293 93.5496 47.0356 cv
93.2835 47.4116 93.0979 48.7852 92.9202 48.8916 cv
92.741 48.999 91.2117 48.3999 90.7263 48.3755 cv
89.323 48.3052 88.3079 49.0195 86.9968 49.2017 cv
85.2346 49.4463 84.6209 48.562 84.0584 47.3066 cv
92.1238 45.7192 98.5359 39.751 102.956 33.0312 cv
103.531 34.251 103.94 35.4355 104.073 36.5093 cv
103.87 36.9985 103.848 37.5747 104.135 38.1719 cv
104.14 38.1826 104.145 38.1938 104.15 38.2051 cv
101.988 41.7314 99.22 43.6426 95.5842 45.668 cv
cp
81.76 42.2212 mo
81.6287 41.8984 81.4392 41.6455 81.218 41.4448 cv
80.7073 40.4253 80.1961 39.4053 79.6853 38.3857 cv
78.532 36.084 75.0803 38.1074 76.2317 40.4048 cv
77.0652 42.0684 77.8992 43.7319 78.7327 45.3955 cv
83.9553 58.9648 86.6765 73.6533 85.7737 88.206 cv
82.9329 87.001 79.781 85.3877 76.6389 86.0908 cv
75.2214 86.4082 74.9334 87.043 73.616 87.5093 cv
71.5525 88.2402 69.9797 88.6641 67.4812 88.1943 cv
64.4714 87.6289 61.5964 85.4961 58.5134 85.4224 cv
56.2752 85.3691 54.7781 86.6592 52.9172 87.6626 cv
50.7205 88.8467 49.6087 89.6318 47.1238 88.5434 cv
46.0466 88.0718 45.1736 87.1528 44.0847 86.6655 cv
41.6482 85.5762 39.3767 86.3525 36.8982 85.6953 cv
33.3025 84.7427 29.8069 80.8452 26.0369 80.8022 cv
27.3235 74.9673 28.6648 69.1367 29.8049 63.2749 cv
30.8982 57.6504 30.6912 51.8677 30.8113 46.1616 cv
30.8347 45.0605 30.116 44.4346 29.282 44.2749 cv
29.1438 43.0586 29.031 41.8389 28.8381 40.6274 cv
28.7918 40.3369 28.863 40.0898 28.9929 39.8901 cv
28.8616 40.0278 28.7385 40.1851 28.6379 40.3857 cv
27.762 42.1343 26.8855 43.8823 26.0095 45.6309 cv
25.8909 45.5942 25.7688 45.5615 25.636 45.5439 cv
17.7258 44.5059 11.4475 37.5532 7.64185 31.1372 cv
7.6399 31.1333 7.63697 31.1309 7.63453 31.127 cv
9.30006 28.6538 11.2097 26.3647 12.4788 24.9023 cv
13.9153 23.2466 15.4719 21.7295 17.1233 20.3276 cv
17.9236 20.5977 18.8665 20.4268 19.4358 19.5029 cv
19.8743 18.791 20.367 18.1187 20.8787 17.4604 cv
21.1194 17.2949 21.3591 17.1284 21.6028 16.9678 cv
24.8787 28.7041 37.6775 36.269 49.637 34.4653 cv
64.177 32.272 74.0037 23.8882 79.8909 10.6826 cv
81.217 11.3394 82.387 12.1396 83.2869 13.1445 cv
83.7488 13.6606 84.2893 13.8262 84.801 13.7656 cv
88.9358 16.2358 92.6716 19.2456 95.8445 22.9023 cv
97.1135 24.3647 99.0232 26.6538 100.689 29.127 cv
100.686 29.1309 100.683 29.1333 100.681 29.1372 cv
96.8757 35.5532 90.5974 42.5059 82.6873 43.5439 cv
82.5545 43.5615 82.4324 43.5942 82.3137 43.6309 cv
82.3128 43.6289 82.3113 43.6265 82.3103 43.6245 cv
82.1267 43.1567 81.9495 42.686 81.76 42.2212 cv
cp
21.3264 51.2017 mo
20.0154 51.0195 19.0003 50.3052 17.5969 50.3755 cv
17.1116 50.3999 15.5823 50.999 15.4031 50.8916 cv
15.2254 50.7852 15.0398 49.4116 14.7737 49.0356 cv
14.2483 48.293 13.5032 48.0937 12.739 47.668 cv
9.10328 45.6426 6.33521 43.7314 4.1731 40.2051 cv
4.17799 40.1938 4.18336 40.1826 4.18873 40.1719 cv
4.47486 39.5747 4.45338 38.9985 4.25025 38.5093 cv
4.38355 37.4355 4.79273 36.251 5.36744 35.0312 cv
9.78736 41.751 16.1995 47.7192 24.2649 49.3066 cv
23.7024 50.562 23.0886 51.4463 21.3264 51.2017 cv
cp
35.9597 25.6738 mo
40.1106 28.02 45.3279 28.6499 49.9202 27.6084 cv
60.0608 25.3081 68.7942 17.2002 74.5466 8.81494 cv
75.093 8.95654 75.6375 9.104 76.1741 9.26514 cv
71.5745 19.2978 64.4788 27.0884 53.3113 29.665 cv
46.9973 31.1221 41.3733 31.0781 35.532 27.9619 cv
30.2097 25.1221 26.4753 20.6333 25.1721 14.7485 cv
25.8079 14.1782 25.8836 13.3662 25.6087 12.6724 cv
25.7771 12.5386 25.9378 12.397 26.1087 12.2656 cv
28.8005 16.6348 31.2791 23.0283 35.9597 25.6738 cv
cp
48.8279 4.03174 mo
55.0481 3.58545 60.8674 5.31348 66.7844 6.979 cv
67.8616 7.28223 69.0794 7.55566 70.3587 7.83789 cv
65.8269 14.0854 59.8157 19.4429 52.6677 22.4634 cv
48.1931 24.3545 43.3377 24.7725 38.8523 22.5723 cv
34.4773 20.4268 32.0339 14.2578 29.5613 10.2446 cv
29.512 10.1646 29.4544 10.1016 29.3997 10.0327 cv
35.3196 6.479 42.3787 4.49414 48.8279 4.03174 cv
cp
108.089 37.6147 mo
108.111 37.501 108.125 37.3877 108.126 37.2773 cv
108.156 32.3589 103.419 26.0723 100.557 22.3794 cv
96.4641 17.0981 91.3821 12.8359 85.5618 9.5752 cv
85.4451 9.51025 85.3303 9.46484 85.2156 9.42383 cv
80.9597 5.60791 74.0613 4.87109 68.8059 3.3916 cv
61.5374 1.3457 54.6111 -.657226 46.9817 .206055 cv
36.4363 1.39893 24.9719 6.00879 18.0999 14.5283 cv
14.2044 17.2871 10.7239 20.563 7.76637 24.3794 cv
4.90455 28.0723 .167245 34.3589 .197518 39.2773 cv
.198006 39.3877 .212166 39.501 .234139 39.6147 cv
-.0549234 40.1411 -.111076 40.7969 .263436 41.4766 cv
1.76539 44.1997 3.62965 46.5547 6.10719 48.46 cv
8.34107 50.1777 10.2297 50.7207 11.6087 52.9702 cv
12.5872 54.5674 12.9168 55.1406 14.9148 55.3823 cv
16.7122 55.5996 16.5862 54.227 19.6087 54.7891 cv
21.2444 55.0933 22.3855 55.8066 24.1057 55.8857 cv
24.7659 55.916 25.5335 55.4917 25.8328 54.895 cv
26.1199 54.3218 26.407 53.749 26.6941 53.1758 cv
26.6008 56.6724 26.3762 60.1562 25.6536 63.5962 cv
24.3206 69.9429 22.9163 76.2749 21.5476 82.6138 cv
21.366 83.4546 21.6834 84.1284 22.199 84.5659 cv
22.6936 85.4521 23.741 85.9844 24.8284 85.2549 cv
27.3962 83.5332 31.8528 87.9292 33.8181 89.227 cv
36.1267 90.751 37.1458 90.1509 39.7844 90.0693 cv
44.6301 89.9189 47.1301 94.8555 52.2463 92.7544 cv
55.3084 91.4966 56.6336 89.3442 60.4622 90.1138 cv
62.8645 90.5967 65.2966 91.9575 67.6482 92.6709 cv
69.7263 93.3018 71.1296 93.4292 73.1975 92.4883 cv
75.03 91.6538 75.7127 90.9517 77.9114 90.626 cv
80.8455 90.1909 82.6257 91.2251 85.3206 92.3169 cv
86.0325 92.6055 86.6204 92.458 87.0378 92.0908 cv
88.1423 92.3061 89.512 91.6821 89.637 90.2187 cv
90.6814 77.9736 89.1614 65.4883 85.7307 53.6436 cv
86.7205 53.3867 87.6052 52.9956 88.7146 52.7891 cv
91.7371 52.227 91.6111 53.5996 93.4085 53.3823 cv
95.4065 53.1406 95.7361 52.5674 96.7146 50.9702 cv
98.0935 48.7207 99.9822 48.1777 102.216 46.46 cv
104.694 44.5547 106.558 42.1997 108.06 39.4766 cv
108.434 38.7969 108.378 38.1411 108.089 37.6147 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (2_body.eps)
%%CreationDate: 11/11/2019 9:57 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C=Xuko$P6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7;/>c["-:hh@5:D@,FpUS%JF^H_VomJ#dV>m4:L:;*[AA2uk\jgZ"0Pcs.4$!/0T4oO?YmE7Fq]RKPGpA=:h
%YF`LTrV\BmLVH#u\bjX8DrioRG$j&hJ,\^d]D_=K:]Dut>lQ:%IIlh$mEM]`0:oi0jf=)piG2ct&)YQ1EWc6-mH*Y@]o]*EDr83i
%Q]ldVoUl'\Qi$T@d`UUJs7lKGDkDIXk4OoscX+<_?U)H-f>#ISlS!1kH_S9:S,HgZjS5_PEd,1pk9iJVJ"t?FX_5`thu%;G>Q!+/
%n%M04pUi!!K,frk%fMltUS/boGPGf6mI$V9B,QY6eE;5L`=^GcH9tq]1!-W4?/Y-5!%gFs9<ne0^\[B;PLk<`rkS\mX8[)8ik+AL
%hV</0K3tc2YH.=Gb=Qn^qIMF:]]A6n=g"KT<Gi;-Wk/o"<D7DqHnADPQ>2bfdW56FZeN7m@e\buT6t_Wg4\J^op[V,rVnYJDQ-^R
%#EdJSj\'@^qqqGCr:]eJ]R9EB4tj7El+m;\eMjt`jg+PC2p\*m<2O!^J*i1Z4F-nmm2M2`=3lB3\Gfr=Qi=VSrp\q!:]>YJ.<^V4
%j`fV<^APmLs1qe1612/!YcCi*^+e*KCG')cnV!:kU\b-B,'I2G!]T?;0&m0=s+O#=mp86Up=[Vr2#6R3fA]O"J,/ro2ll9]^T72Q
%53&Y<s0hp1]sRFJRl@f0HbVQ?p#.jY/6]3*o-GH+HMPhEeI.>Yp\=&\k0H\g>0gQ(CVO0T_V`HeIe_2PM@Eqmp6AnPlm6QIpsF$Q
%GP18TT)TqJr8m6G5CE4+QiI!KnY;^_J+MrtDKl-@p?A&JY@X6=g&:?2rjVgeB=jdVL@>-2qT2[HL\uRjF7nVIG<^Gp%HTZYhsU-G
%E\7=Fs8S2HAbq<3>&U(9VjBX)5(E7]FCRK&+a<kDq3..@?LRZIEPl-Jqb_h67/CW2,u2+$o>_*l;l&P;kn`-0kFCB./LO6,HH;k1
%rTrX:>HmM:lSj<=p%luOYij>^TU($!qWdeSgqN*7?iKlpc-nnJhpYanpo[sdH1NCd<Gl/moDRkVrTi1Tk]L`haHn!?4Fd@sgXf68
%qpVmL]D_%;^Al[M&$K;&+*YKhqsgKXGPi2YI)n[ir9K8jHM.3hpFjNrk*@ZrH_*BKIf&56^OL>%0^6K^J,Sq^0=?;tIYF>3rW/`O
%opYW$qg[:sNN4Zp8UgL(kp]t'A^=V-`qEKo3S++Hn0rdI:Z"9uaa9)#HL!RuroJtbK3pk?Vftg6FRq^]HRW"5m`Q]D]t%G3k,T<U
%_1LKkq55Uth/_ZM1V[15RD+t%D-jJrrq!V&A[8]3?d>SIo(A2bT#kaC$X$rWG`aW7*TXE5d.b#Y0BFpTgL\&.]DX[L+8t6[8'=p'
%[J>>;\_INmH\]?ec;jie"oR:S=Y't'q9--%Z)$CI-XZ=LJ"iE+0=0uRJSh)>g%B^YqCQl6#;Jd`m%=OVJK=:R8)@kXrC=OmqBR_W
%55IE+a_U*Em#S3cG+lN<&AS#!oln`#s).SCf2#_%MfnX(ALi/O&q%mt;b5TPKKlj[]Z6Z>QPtLO\E)pBU'N>fEO_r?cN!M2d<3/u
%El@9_mB<'#90:78D#8D3n5EP/WPoXADbc=hT'ETKX8J]XRVT!24H#\LOJBWb.(R8/MT[r!*9Ggc\OEY=5:OVmZBrJj,qnLPN`/!]
%ECbF:jADnR,"G8bI3bFq7O/dgj>b,2*:g,77<q;F3$AJdHsGYDDSeu*@lVOQT+bD,Eg.[W`(;^b?N,(5\gK'.L;ulGUHci)QfHfC
%7s]0)jM4D80=UZ'WU_8dJR<B+)g@J*.*#XTCbM>'?gZcXa[`rg7s+;=>i=CX,KFLYb&NMmpWKraNCT6Yo12N],Np?n5Pfji3q?`t
%*.I`K?[;8;Ib)r.r=/b6j2?FCO@]3I62l4mj*JJ,J$8T`0*Ad=Ehn-'0^OE3kRtPtN>s<+%W^KL&WH$*EWaDq!CKqHlqi#^N>tHN
%T7\+C&Rlqn5m`,OW>+=ODr`m8/03g(;kC-BI`.SI>ihD.Hm2i??]_M'Lm4IQ;>r`"J+rNkCH7j]>NNUgr`^L)&.OadO5VK[=n9ht
%7j<d;3E-n-o'[X'5NK,+>\9*laC^c6aJUii]J0`3^ETS(FI#`#o8Ynia""CCA4TI5&c'QnH$a`JJI*O"9nqsJ(6S)3h0'&o&LWu.
%1!4.:\<!PpU`^>Jap^A/PC-`!Y:e62LO:=0'kH0%l-#iXV3>&QALsuqKPk>5JrF%KNGr^^QSQuT7_Xa**3P@S2^0JQ,c6A3?&MCI
%7/!-E_'iShA8p;^E&`aM]46ptbXZpYs/j?-j8O9carP%SKi?un:IWdZp$$EVb+V$Y153@h!"9'sMMP$>fh]ZYjtr)C7q^c\6"p$R
%&0_BY'VS.iC%A)72@/-H#Tn`h89)S](FhK0Jj?S8O;!H?j$t<=ppl^9fMfkP<0oP2ePr04dihVg6H0?R+>X$_Hg@u49VrbPS@n"@
%EMA0#N"Msok!Z:q!%6s$;\ddTKIP16`IncQalsomaKA!F?]3@B`WbRL3DP@!_[Wu6%"N"P)2'D.ZD#'!a=#o2A2%u=&cI/HO"Se"
%U*!t.OPpf=bMg8;8N5V'AXMsblVM#_Q5`?=.b]+UREXD)G3fZ&]2'N:V_TCY?n-;@!#.P%&<F`jU)BY#YmcHX6@A;JEm#c';OAE7
%)BC15`IX6F86Ng)Tj8Zd1aY+-GiD]CPV:B<;umi74Vbkc.cLRKKBa!SJeGnG+R9:J$Qb7b$Pa-c:SSi^EreC$4e;Aa.XAAeM=cXF
%92oe7rji6X1>&FBQGYsJ*0Nk38kB_bS>FWoECclI&in-GQc`G`9euV0La3s.-EcHrR'9`)22_$NOeY?Ul6O5e&1P5Wa&`$./6s>d
%,-_\2>\pX_ltp_kHa,VBLa&0#a$o)8:W%d)c/kbbEaiY%,$t<pjBuR*(6R8Y_=Aaf._UPTj'"L=Em[G+a+4Uf?Ru[B10>g+3+OWO
%\hksC&rp3*Y.4t*/FPP,'M%3EA;846R3e858J#TXZ=_!"3JtcCBp)FO8KnTVVZr!F)DF_UAraYD8S3i>)BijEW9I/nFsJk(S=(9c
%RI2ac)HK.acGo?T6ZCZE^g/l$M(P_>\Ec'2Y+'s.9`L0dOW*$tEKfIZ4iL4g7f?rq<jDda"N`*e1IRZG;neF7,lhfT"nr'$9?hG-
%$i$slhpVW$LR0Zd]X[oPpT6<H=5a?gCmWnSmL421`/B&*6u+ZJq$5<b:2GS3q?p?@6*rE6KI?oQ7+dO;<lcJNHP+YhfF(H-2i/B0
%;A#TddUquJ\koe]=Yj$J7OlbSgO\WfPU4giUiJ"cM0l8?;dXubZM*B](Z2srcAQRIEg*K6Y3)[^W8`h)`Q?Ub2<Sf7<CNgc:6hBM
%4&pN:W4c4$oq/o=@b[h*m)j91:3PFb",lnq\BBX5JA6/YMatGC8DAc3oY)R-H^+C<\`8+QWulN+*?T`RHcR@SI*d-L5<dup^,%+n
%`edFsoK'Qa3Jh'F`30VZQ)SBKb5qk'iou.2C6sQ(CH&Q7"^1+G22l2_&b;]2R6[sOd-.7(BBC4.]1R]n:IFP<IA7].;<Lnn*L^`K
%=Ed]gd6R$OB/Rm+_^&059[0hNN(o$D>li>MHS`X$X#j^d=?"6O).T_5RSC):[)k;>2?OE/@3!<jQZ]&t&"7CZE%0S<iB7(Boa#Ir
%in9I^*7U"eJF5MAK9*SbEl\$J7sk+VGC7FKms@1lNXu,O4+?1]rtos-QU[D88JNt8G7.*^:"IIYqF%DNd3hMEkUKM-<bkehiak/*
%[hJ.p8ui,UUSG.4kpT='6sN&kc<thun(/snVp&?+RLA/lgq;+(<XD-o.)Z*:X2>@PAiXu]Ds.te/ntEh^r*0`L?g3*V/.-e2XI3A
%BC>&PF%s!g3,1s#[*D_@S8"W(a-l'E9^lIol2G2@<-$$kg?\.HrAs?%>47*(cZf;R]&UO4rp&js+@+isl#C9L1Y$-iiX>hM^Z!:D
%s&6Bqdr(08JqI0!Wo:U(37poi3pn]g-?#JY<_Wh2WEW-WR6e)hd<1g%LIpA,l8r*EQiIJHh9^TXL@l<#.rYaoF57D_OunPmK9e%[
%g_t_pC,\I]ct_BP.l;."1_Kmic(u2<lDS/GWW&h3;QN^f9%Oo.NqY9q$HtW;an)79,r,LnC\=c@cY<*'[f4I\FZ]PX-&eJVL#[:N
%=<f=4&'nq66]_#(6gj`Bo*>=\k`@kiptYmCGO-70k2tfNZ^8Y8gn^EYj%_P2UC;R7acL$?]&V'*-mA^`1`tc*'+-lDp&mZ;!Dl;U
%'@:BeDk.2\!qHKP$+LXVVa?p]F<2;M;ijp$:'3I7i2/f0@Sq5do-)KC"E"k+SA@pP2]k9De5;%.K:E9i.aY.kVh1HHGO@$i>7#TW
%p=*2\e7brI-ifpcU9Zp7HaMGlSoEo$WXXm6(5pZ4To@RBTKaKQfQmt*WnO"Q[t%9IkYnP"/7$eJPH'XqVVU9&,KcK-f"2uC3l:#=
%s)I?JG8r?smGVsN3DOKUNj<sN++,%LEl]7CFP]0"eqHKZpu$5noA&luk-IPQXAM/sPg:90;r-uM7es,_5&6D/)WfH(d59!:7@sKu
%rL]/N-$'cX9[Sam]hEC)Piq+J6cDud\]bhu+H,s1+"j?=I%'pU5*$=-(Q^8RLi+/m3,@qpAp<@tB,BQ-G#PEXV;Lr]MVKHP]^s<H
%n?$N03WEC"As7Zt)Ep?W^tk2Mi&8]rZGu59&CX^Od4j"Xf%A<i<n3EW3I6T3k01Kjo&,f_2u3CIo973NpP7e=;aDJs>Q0!sPbl;f
%+f_h';2@PYO;(jXQK$J[P.Q4R.$U@`I[[K=4OTXB03MHR#HV0$GH$L=&[K01]U,rhLkl;kTl)[O5M\L"4+?PjIbNZU";A_mb7d:t
%cR-^[iMI7]4Yi*67@5T6?A-9<_cTJGF:4"bC#B9b(,7<L%#?-U'aa1UW(T[JH&i<r<edg?i)Lt_MicIDT?:VoW\OWT7td^PKR&0Y
%RD:Dk:CLsHAYdun9<YT_<m)<g"D3SRX_Q/H#p:c4>r5\1N@\)S;,uQHAn7fSId/gM[96gNcV-LDoK=of<V'.9L2*q$<TL+(=fT_#
%@DusRk@DVmk,^aqFB[`Z]B^0tLuV#Nd9(Hm[n",Q1qBCD]$A>#(VY,60-'[1GJ*QhF5Lu0A[WZ>'V)Z.#9TD6HZmINn$IMunbJ46
%HfZTqV."EJS#Y]l,i`S->XM2Q#s"I@G@^"4@bO?F:Lf2Pe0>3HU#XS=l'9Q>Ob'C!OU.=K,OMIo:.$OG*d6eI3m>3"1#':;lD0Ob
%W-Qp^,3W0A&=G`l>m8jL@*(Et-QP'dDIN-P$T.N1\K:ilKUF[`h8A"R?on`M"VrM"#hY;5L&lqV^6-K,4'6p939B&XR$6"%V`alE
%%ha^Wm.pE>-bj<UGO;:H0T@'#4mG#X8A,m8qZ"J21Fn`[m4gH\X?k[hUN/JGF:8tGGjgdOEFcUiIdg2e*;05k45O[ubL,0pa;l@A
%f)$HeZ1$<QAsQ4%03rMT-0G+I2XllBak0d7W*0*_a8]]GrG-R@F8JBfbh;q*amEHOV(e/UT%8LrMpRX=4TCQ.IgK4\@3s1q2c**4
%\Ljn)%OuTl.1\s`$Rab]P!j5l:sp+M\ca2l43jOp#rIf,hM$nhYin8ikR7H[%t[(X")@8G0QM#Wa;rT1>^c*=/ff$=5O?IX&%U^`
%^\Q7:5Ooi@JF%n>_t>@WY.7]R%R*_D<3a^noZ_(^e+q'W,h*uO'bY8CZi]LGoM/l,KN92fg*<X\@QEaXFn?_47unbJWB.U.>3U?3
%GLS.(HL4S]:C;V&"C=A.7-eJ;;RJ8[ei!.6eaijmb1%F`T2+Q\WfJ6)%C(NH-X3S]<`$K=I(3eb9oH%['89E7Bq]Z+0KlYug)I!Y
%<<&?re>'WRh.Tp^:tDY#22dMBRqP16AusHYVB_]Rl0PqO,BjP4%Y*s+hJlA%5P1U\J*6@sdDO89j7Mb,meD==hWOZpI)h5D@;2rZ
%)jC_;1Z,U_,gFh$&F7,#f!/C#-_KV-+/k1W0Jr&??j&5V`Il31MptR*QE_-uar`%MM>HMYC0G`qY$"3HBYP>6;J+KY-C[>2*f0Kd
%908G:AID<bs$T"oUole$Gh$Pne9C-5"I4uB(c(nU)^a-Hl4Jb`Z4[E#(h<Z".%hYt6C^2</@iZg6FVQb[.MpZ>Muh^akN%+d5F*?
%@_,MAFh)&JDJ>BFJuc@N5*gsD^!KDN&)ZD,^$CbA^@Rl(*lmk>mWbYsj,VH0I%TGI6>;BAaBDgb<fDoQ&\JjC/iEM-(u@cfrJ?)@
%Aa+n^_h[)W$@9[5*q,8X^MsP%hc%rQm3L(a&b_.5Jqp<^CQqZB-G)8gVjNAl5[Y`RG*GsBb:9q((;6)N>@>jUnqoR^6rCU;a19FR
%:)VY3WGoPP@f@CMbnI;I0[RQMZ,kh^Nm89u4(?mg&BdTT%9TIcPl9@=="Y0-^qoEf0l,c?-4Q)?hmC(X`!)T4gb<t7+jl,\0\<\3
%62BN"j96=joq3?=.l]$;&8]uK(+HnC-W\r`Kh(XkM\qsZN!=OefCJ,.mo^'MK6XZj4X8'u5l&lp6AhBX]lHne%a'rm\D7%^hj97U
%V]m%ij-_WNG18TD\T;SGF1L<W'E,(rrbgcON:12P.Di=Q@H!92R:8ZR62+uQFd$VYATFkA)9jolbM7$'6$'5AfkcfT,J%j3&5tAY
%VS&=)f>I517XgKDbYn&4RoH:o5b0\_WSoX@rX4U]f=Z<2O)n20Xc_mj*c2&G(p:3&M1kqR&)$%nBXcF4ge<qfO\k]nP;*uD'>S37
%;&*9cn6EE+S.`j^-diibh4eob<25:10`6''oIrlHPOHNP+\#3%*O9J?p[X@G6!gX8/WsL9cDq4D@oY&MgCUiaD'+3?UPi6Sa4fbZ
%FH8#U?>d>.*8U3X>)qUP?Wrsan-0uL]&"+8p35NJ,N@COTR?n+oGLS@okcC>Ca.\;5kDK\-P;A&U$=J.nsE5o,!;>k)kX"PSr?@N
%F_[c3_1]p_=oFY-O/;_)X-]R"n$>O4]oYn$a6HmQ"DF>/m4],A>SBb.9!gWW@X;0U131'!P\E:>0$TEu2R$Xa[3JGa6Kg=Zg)p1,
%ok,j<0@O@\N+#hTO%Uui05qH^(soQl;f]q?mP/O_DNSds[g$urjO91->E/rp9&*o@I`.q(*,.p^r+oC/>K3F1,/$"5p;!%ceq@5(
%e*]568SsoB_]IHo;@ub9@#.=Z@O_[!4fRdCo$D0Y>h!oth?VH1B"%o+--??+c$D(u-'K\'RJh.O4efq<P_hpU%%W.ZAsBS40cD/b
%ZDMMs.7),][LIaQ"=TMkn@0W"/8"9;>(H$)S**(<jEpoS^>luq48t4%*)P`$o/.EoE)3:(;doc<7N<hq-R1*tN.mthp,JuS3a#%<
%fccOtb[&GGJ>!=eP!XbOCU2J.6QPER<`V9+LtGL6""XCVb_b[qfk:UOleI'1\AgJJ_\ppn;@iE:>cYU[`$XQ7'AmD6S\*',k6Llh
%(koWum&5O:71R^4.js/$>'SWa)m)=Zf(o;p=Y84t,>?#[QbDn=#I!kBA7<,tHitD0TP7PWr;FT2q-=>]HOfXW5N/;[S306?@U5,H
%N_jgrEF#u\1dp(S_DIX\_;5*ciEsb&j$u!ZdKgb,#eA,U+%6VtG71B[b!"p`kMBpoqSn\XoPeuT`<uQVFVE4`ni06+A5]SY]NQ_i
%D7/B@LZt2t?d=93RkW&5cuU6Rg3TrH_bWEP[JntSP1,t0=!ea3V8GE9\`6sKrM&[ka#g7XaRAilirLIi1cO96]I!15mVraQndu,p
%\-@Z>l]o/;0C7q??(pF=_/3*5RXfa9N@N---RQLO7[9mYgqcEjS9QPk9UT!l%P&nJ%;j]tqTlh5`)A()90g*X#0uIGAX(IHB_S'H
%2GE@Rk6/0hOna)p64;?H-)-A<1>4VI=$<E@nb:\"g!14[2>%cZYVd/4:*c;B^_Cuo?ghC@[<"\(9hu&7_5-"\Z#X2dE&pW$hPLNR
%$,JSP.JRao_06QFmnF)%P8&C_.^2e:53TM<'`='uml9IU`oTBX%ehk@GTIR3)[`+'%IXN!f&5D=!8]kI[lKt"R#X193WI=3^s#EZ
%AN2d7VV1MLD&)Ctld7_&dW#3INZ/gC50h"KCXD#;fGH'323&X&i6q-R$Ga-?7pG39D*Rb5E;,f?jhm.qMff%%q67ajfhZkNNb>%P
%X^F2k.-o68]a-st?`3*GHL<jSl_oTm+MoWMHo#L5D=NAFF_Z#:CbfRk&pfnSptaH=GKGd?)r=0%>Ut/Z,pc:-Q^cLJ.IFFuN<s&Q
%"=*B/X*t=Woqt'LmqeikJTjp!\qqGi;4CS(>,XTsgS2RqKic",KU\3>4-!RIq"jK,=G<(Y*KE![1$9<5N\)?Wi!,l20\9VUG$`Yj
%6.^T;$L[j]&6t[M,0X(DTu:2_F.7'k8Q'<+4HX\*eYt9LY"6$tdG[&uh8I)e)XB3QZu/Wr7=Ye_<,2&Wa1NQ!e#JCsa[NNpf\H4i
%8/puG)YZD0pO(j]-f@ZY(-2LPq2u-d,YMcrgPgG$rVMtQRQdRI;u&#k\=[A^o;$A5:!bqkh*9`+s7o`d4e[AK"^:TI''JKlMFW,L
%r#m`@/,/gpi#ntNs3!t_h44QgEu1C"51\^r]ptT@@Jh9<SP(_Z/YFpIdLr"`=>BbO\,"Yo)(m:b"O`[XBgu89><1#@S&25pM?4fr
%W)'<QY%tPt9Zq<KY"%K#L13(Pbo@]-?oRpo@`r_&rcM/CB,:6sibL?1MAZSm:g#T:n)PX)M\F=!)a3dP>/p)H'.qRI#IpT,&MML)
%LEe`\Wa')J/?`/\Z)f.e!IGUSkQ&%bnm(6uJJZEB!CeQfRc0@<ajD;YkTDnmRi/mca5LmFn:.+DQb,JqE\EP%;KH:#+Gpl^A%A!a
%nYS!N/dp>HKhQhpc+@'M16>fB,%LWId4"lo90M(7d+5n3el%K6L=&XBYb38rf.&iOchlR">^@1?iT`7C\N8rUZ>^@==HRIVl"UY:
%nJ-"q=Tg?b/&r%-aqe!F0pNJN+eJ9";9)T>Q4h6p!j,`=%-;)c5,V&mcQeVtdSJ,W4Gl"S@[f`)Q9fLtp&m9X)*'B`E9+]&HHVH&
%6gg=#8%JAmD`K-L<:78=8ajuZh7r'=.N.?.LC7G9r[c1%**+_*b=XmALM*f%KQ`k#]#%iZ]oY(2$&0Jo`G&^3]pMtmj89qD;Auu8
%%>U2P_ob]RTa9DL_dC%CHV\7H2\,1`"9MW>X*6F;EhJU04rH34A.ka'mD6rY7tt$iY.EQge?fp4<u1>JHnih#[Pu%Z/$$kAlBPH\
%H$4R!jDsiO.bk\^%&#M#Si.WWo8_T;/U<l,4(KuKPRFhTnI^!0Ski+gP-V$tC0S,R\WS1o."^6RE5-;H!`JLFY-8Ak`rGl(]BFTt
%:(*>$]NMUJmWWV('QFAagr.:8q18_B6'm)&[?iNbHPs9Km!Tb.Ei2_d@pM354JpY9g<_3c-3u&bA\r4raum(kT2rFmR`0F$)YYZd
%5VcmT!G%),.B;,/Q2?j]J_T,,9@^[WXio8%?p/s\0bi"/#Wpq.U=7+(2S4QXp83K8GSV,Uhk+eG>Ma2iWOoNGN^B9%L(8Y/K3gRq
%\&Fao_!)flXIIc4/SD/:SlU(H,]$&=:V%=3fmfQ)]1^1F5)/001,;KoRQUF^;IFA?l7dMVD,mQFU%%YOECjbEGG]C:#EOmT^H+:W
%Ole@G)G$;a8KpTeag78._n6Z=AGiOkcar`'EScWSp!NMMF]+0"@GPp@hM>ROgYB.F'>`3V/Tm>\=fSnC[<b7l(&tj:Li0uT-#8dK
%8]J>8(`@Y_WG&B,hV6Tl4\4ljpmNb$g,=$K3!K$rWuHDADdotR7gIE%=A"d:NfM>"Oq+7O"R=j2/aC>4m@.Lo1!=\jeibE#s6[/j
%YR16P#4$*4Y2aJ7q^F\<#6HWlk?stGQ4/0Ek+H*X)W"iI])Wn`d7_6!KF4W=U#XF`rQfrH#0TfEF1[q+gG`0-C6X>S-hhO@ra#>V
%mbTMtU6X7%N<@ZX>W(8)h8[&!95EIce(UAC09%OdqL%hA`ET_qJ-.`UF(=efjdH8"Pcep^?Q4KQ1\pGI;n>Q%1/"1&;i7VQ,qI/q
%)Bk8p"`ebF8eJTd1p-j<,NOB7@_8\jSL&?B`5pdr9?/LZ_;NA2``"BMY=E_JZH>p4F&sO&/RWfVj=*n("M8!cHX8HRs.aeOS1@r_
%X5o>solB36&FK6!G.jF?]G(hSdCW_*AWMKbSAX.1/[Z+B)&`O1C_\j7!<n[DO-PDT!1^"pT1Bl"(/3o)9cDkU*ZtpI@J5o,"/J4n
%ifct;e%"79,!MDgfEfc4303&]Nq5fe@l]Ssi1P3\kP79%kqoE0=[%o4(g57\DAq>VI-4dQk7O<+GTLE8B<b:!;>kYTg_,%B0D"2Y
%(R??pKWH2BeE:gY7t)NVH1^9*E9HamI[_qlZP;12<1YCEQ3BcL;Ii((iinQ#=X$n7fTLj+<]m(.,"'05A]k^spM3u<9SR+`jSsVb
%9Daa[AZ=s]6O46d@<d#"@o16n_7+p/lTX%%^Kap+iuPU8J(u'sql]6C'A!sDc.n@&X9CjX/C*ag43h$'CN+,nSgSUI6[.rO(l_ap
%/5C(p[[l[:!9s7<SPN2*eW7D7!X5c['J!"b)JY$h@GRk/gRU9Ep24:o(M?[O)Yr9uoqfCUqK=e/IHUE<I_8r)qbIsM(r#.ng%4$[
%S5B'2C/0'sVLZT4Z`@m_-%juC=]K)Mhth6VgTBqR^>\pK(W43_'>1R;Y<hD76"?s$S(<Q,Hm@BiS)8,\I]#!1OZL8;j%!.2kH%1_
%mlA/Ip0Ct-[_&U)HsIr6^nS1SCDFf/FW(f<7#=-MW)C"#k`q'Wjc?q]25$p;a5^FL?2E['lEYG-Q'M*jA3G<!_j"GjD%esV3_<_.
%rT^99/Nm6&V_-sd_bF>b:(T:*+JZ(r_,HZjjZ(su,&(L7XKf,R9j>GkGO=(sh6EHr"LA\9'/Zu^e3/ACpHXc9$$&.N+CYBn<r1*e
%&++X$m!0]=28sQ('`)-T1UZCh&%G74AR@aKpAd<_j\C4G^e#>\P&gn*G#s+s[,8U[7B;<U!)[cDMfY<>Q7H7`DkAi@cZ7e_5FRIp
%Al/%!].T]VO_I2O3lB^Q6u=a:B4uXpMP'4o:KfZ'&_c)6fdpcacf+2L]M25O#*QX'/,TXp`8st&8S`,dJ?qYFOL8-B>_9'G#HcGq
%M3pUM(FpQ82%Nt:hCTE0hDb1\>_l)+T"4S"5*kfu`sPW^0Y64:YWV-]ToVhZdW_2*'3KZqIr!fjqU46IruM3`qgR<@kd"Ef@:LaQ
%X`V`,O(TC"@d*7>cDR!Ob9Mi#C^o0_j3Q6MLB1J">(#/Z1pCp3]:#8#M^`g'D9N2EER3'$$L&G,Cts7,L(sAr^m)p!p6l^ZkAr>H
%@g+:,QnSeBL<fk]B7TOn!9Ij]pad)NA`C$i]M0aPFTKX7H2%7-/lfl-ZGl_(OKXMuUOU,cC&JISBHgn*jGY1,@4umgEsZKW?qU25
%7cB.bW)9cR$#Hh)e,M^N+"e1Me+GogE_DUCT1^iul$^Y7+7eL)R<]lpH%0j.G"(i@F]gZ'W[/r<oIXBk9Y9eL]-U@Ii,8!DiVr#4
%T"V]5]A<J^PG`oM9\]LD1C!Oj"8e%.IE'&d@pko`Yg40=B+4,_#56`ZrJYrJQANpCnQ@2&@pko9"-]%SJ,ANm(U'IEI.Q^d[m0og
%m&JCHH2Qm8hsknVJ+ppG2fES@^D&>Ms22<Aroqr`3:Qm-46P'm&\hs+SU;1D&pH(<X![DC$e\hI#bG#.n[8AbO+5"GJ'br4H/e7Q
%J(;=6J+De&/ZjMbDV4o"pQ,>ifmWIZ=8e^pK(N^K47?LKq9B(d^YUf.2uE:1-MK?8Dt4P@q>9L0DiW/8^3TG;jce;Gh>K[L-i*Z<
%X&mVk5J@&]FjSa<Dk=Xfp%n"QPG`nrDZ'>Ac^s$CrVP?IDgo.l4'_=5n=T7@s5aL!b>H%PGC<!Pe/SU$=^$"$$f+<-qQ,LYTQJ\e
%a\@84UA*;`@gr#[/1'ai#ZiJ,C:t>('e!Le)1[do4.1%h$VG!$Dc\-<dbq95BR5OL_g_>ZY?[lu;IsnX,0DZ8jj$M^(:d?0^KkOG
%$C+=I(\:X@+mfcL'[:NX>KcDF*n2G_Q7JBG?<Z?RI"muRHrWOOdLr_$#P!,>k^tCXjR$0a&foqTU*6]!,/8$S.Z.fLqb^-^<rpdN
%q5YXpaUSb;KO"]#:\FWIZ;tbQ$6[?<g94-!\QpeSK8hgnUAoBobBH?Z(9YH\Z`?'l`."8l8tqMm2-sjT5)dp$0k<,VK9nc<='9VS
%)LTf?G@AIo*Ekl@iACAo7=HhtG:jYFOOoL#?bji(o]tQu9tjce1ZL<;,C(;ll%l_$>^'Oh2gaeXUs36D"?B97CT3F@PjuaZ3^<g=
%a%VHcdROQh]CLAjp/R%dO+;c>)2l/&X<QBGCds2i--=&Da+h03l!bOhX$sZ,5%>0N/1k17cWP/koQ"-^m-k7*#.iJtDG!PijgI,U
%=)b4J-2MUq]Fk\1Zro&IO]im'ClpG;93LWT1&KTVFWti]:!d/+*I"3a/((th0C/f@Sk?eP"nHQ_8ZVK+@#l")P5#$B@W\/gT_3Vr
%O"AkW$1e@^CpM?jV7A/;:dMK&.n:qD5B"6,9\YBi0=(NC`36`bT.NFa]sq"lk:)4+(Wa$Y=LhXV\;AE9q4\$%Z&JrjanqDp)9RoH
%#5o=39KA/hq((@l0[*D_Gi+rX.d\]'fB,'-b(>)-3KYJlnkQ=XY;3p,hO4=[=%V:?QclaR?6g)3Qe<\VYGn>X[_N?VZ@S7@?R>gS
%:`kjp!`1@I9'Ic"'JCq)qcI$Q_aq,K'(Z3XLaV<,Q39Ap[%peB>=:h:lf26QJlj?T(q<NL<"+kh7<FW4dd-7A-Xm(<G+qC%Ni:Bo
%nnLpG5D`M#'*:%U["p;d^5u\j?hII*P4U7FmXn0o[0m5\WB(U66R8BOG*)L`d(2MHQDkrV7S>d@#$Ve?fK>mFWN_<EBhY]S;Bt<>
%[Ah1slA%uQN_Z'RPM`-(QAqnZG6utI3^M)+?CmpYqI\4"Mh1tL>4<8t<S?@sOf"9iJ($9jB@3*nq!s1Qpgp0H]_"XS-+&6YJ1Xc#
%[XK)RhXj53%P]p(6k&T0r@SUR/UOqI.b(uHPUsST949?)W^BlC'g3rTC?=HP?RD,^Ee%Sq"tBLK\O'V$7.:Q)`X]0a_W'4=1;p\h
%kRFb(Tr#n(fWWMr-*WL%dNV&5BT//><gj;QaefK>S@oT2(:4<+;-#C7dY-k@0uPLY_Ohs>XhPjE.g/Wp\4Chk7g(qR>*<gt:b5IW
%OmhU6/`.fHZofRk6GXZEeqf48a=P<o\g'K+iR&OVc#/laXoXkY]X[TaoX7lJnr/NM:e(Ct^Jq"6mTANfV=G4-(sC,P(l*bpZTYZ\
%V2Gtn.qOOeZiXLB_r$*f"C!>k*OMbGQ51(p5'*r%;#gscUnb^X@^XDB6Oq#to45_&Wb?)VNk@r<#h.X?M[ZLS"2B4Tngs)eOVj%?
%(Mt7U,qeV=Ld[C1=gf)C@\_soZAW#UQt+EJ&g+q_KChfhjN&bXN#42T@AuW__L@*RoWXCV]KB@IJo+gN9FLVJGmemuP8:7&h&nuo
%b8B8-H23EP,iU?cbL-G,R'l8@@>ujf=h6;DQmV1CLZV&'ZlM2+*gV(-0oho[(Ha8=WI?D$U+^phhVPa,$:ubdAQa&HX_jn=Y!?bH
%c1:SRHX575Ue=?_RcE,"L7P]I,%"a#.:T_O:h8sXeOBC(l%"_$^s'`@+kS5].L0Q'&s8joj:*e(,.<J4MN6(jQeUJ*#mR\Y\>s%C
%=ul?)krLCNU.aR$,%^OE%i`T2N+H#R8m%PRiY.dt#<@Po&7F,4kD<5pr=O/A`%9o7+1e//@:Z$6-SR)AT="i73/jG2(;3WFhecma
%O)O3MaL3XoFsX#TXK!/1oj^4k<7-[\p<kf<KaNMehnR7BUuZ7aV,G\"eIL1AP9i==n@_B!/1$!NG8%/cSfpHRF,)?X-9N$3]l[i4
%Z<@bKL:@Yig3mOHr!jfi(D;##7i_d:5Seb&;<J`6@eG`3CKSrQLo`8[Cf"9?&W<e3C(Ds@H;$>Z(hT5XZl8h9e4&P1]Odb)kc9M.
%<-4N;XfSC/%Z,Qn2UGi26Q4-KC2B0WNRJ6cW1m3mjA9#JUK#MN0hH-3eSpCV3K>R=d+)g/=A'g@qRZ0_j:Tg,H[S#`lKX75(X#G5
%Ta\2p1YJ`fpf6eCK'56p3'8p?8QD'ZWk"?J]u6+45tl<:R@GOjVW`(]0BYfK7lmcWV5CnO8YrmSW:VJBQl#SH(/_&I0u90AYk[YW
%aI)`kRu<J5(L]5\<hdBmoJHPRP0O<[]65'./R%odC7%"Dc1tu/:8@jm:!Mp8=7?!^bVi9<cUCe1Ot563dNGD#)@F^LaOQuA&?KbT
%nKG5AD*sG'C/HP(;3nBAiFmt;_m_0GgPN/ujQWsZ=UVoq"G`q8q9Wq]-h9?ESg\WQk!:V">CscP(#`:WfB#-T*?'?5/me&9W5-oT
%F)2]mJlk4E$__r[:er=R0o)5)4H9%DCu;j25;2rtqs]N9rZ"#/b+n"CG(9PRS(GtmI_5LAIXh=gkmoFrs6@iBS9tfO/;dInL`6dK
%kr`)bP6).(@dOA^:_B#3q9KH_N3=(Z:nBEpa]2W8gT^:fP7ko173b+'_8n9k72a05ErZ=-Bh.:;[@/p5l<JQn<.>YK*:+-&(h2J`
%l;Fl'".b&Q45ssU<hb/qYOH#;F)%^`"Uhjmg9U\&:Z&#KjW?\Nh):o==6a%UGL\,MROk8V>M6/ZlRmo:@1]I2O?-G32dZ-a5@m/@
%=9u--d*'tMUT:BdEG\f<&i>)F9P(c8NY=id_@4C,)DoRQV'Z7]"`Y?hJCt1h1";Z50JFL:QOKIJ#'#0%72._\:r4:/[>B'\",6-9
%40bqSGDM(rQNbYRgdJV0kZTIb/+DZ?GqsrH]/!_^]$5'HA?R.W;&:8J)$T=GhSl<Zo@R!J!Dlku,*!Fh&:XD0Ck``P7RR>SS)+Q'
%YQ>-hV0FKJ#@]kKY?%7/?Bstrr%RpLH;SNV1KQfK2q5sQQe0=0$uAT5Y%5a/)7V6CW%(5XnrfX[n`6(jlT'=4B8X*mqFV0$49F)?
%-nELhlNC6s=Ir8R]n1*p]f/XIa0%H=#a>!"5%$qDj`kdb)@RG7#dc-G*71",g'oN+@_GC;_mO@^+^qJ">tOn>7ANjc6sO85<sqLi
%7UU;Q@Y#;U%R>ph6'3`a>0rARk]CK]nC;dm$JaYi$[`#.*a6LKP-nYU!(9t7l0?Sb0kKihT%&8>f?uCA-=)6UUg5$Qq'">?RbBbe
%(r^_pC6qqG=[8/l=a;^u7!F[1"?/ZT]i_`L..#;)P>n,Wi7Nqcpg[ZR!p6oSAsojA:8F^b!@iH?9NgH8N-Hb%crD+1YTSD(1e[9b
%I#!Ib,\DiKHWSckGs.*3Zm8gg8D'aFC'W&r]di&1M^uT?5msPXoW@!ki+YfI_$/<#66)Ji\B5X[#KUH8bbR:M:#\2/h*>*DBLalu
%X9Lb;h(C1Kl\>)DQkNqaZ;j"7oPpXh?is89=knkpTV]b<G'aTtUF]s46UMH'QI55A;e4G%@G/"e&Ddr=)9nnmI"n4M,Gp;QOBF0A
%&-`aJXgQ!H+cIo-Un<s8Vci@MD//##]%sNkakhppXV9bhI.p;b8eeT?J)Nm5f>5RrdM:SDoGPGm1_A,GMh<(4QF\W4/L_r4U;X8M
%o7Z/P@gk+X"_OX!K&SVCJleAAMgZ;(/XBbNTW^arR#)&tdSmlb\o^1WMA$8rbSp:Zl)Z;UMI%$$BXl0CKf@a7n:XC+dRM\/;*)WE
%QcTZ?(#G]J6#:NYF\tp;HL\FQ7JDSS&.hjcWTJa2BoDb^*`dH:oo)NEL1?Tc(]ZbmRsY?tA,)c1`c(U``*G.]8Q;L3]+1jJ'oXV]
%_Q"MA-]iSbNp@9/XmpS_*/QC9cXEFLZkPockYYCQY.W8Y:7RiE]'GcWUu5p4JjhH38c1/L>1AfKE/n"?J6aiG+Xp6P]E-brW,m2O
%_('hkHS%,0gEgd0#Ln%8pS%id#Oj]M[ISOF!1qDJ2;7FaDe%bbDTZUMrdc/^\B9Uf<nQF%TkG#ceY\c`8bkL]*5G`5GpAk'R*1;D
%j=knnRGf?M1sKs$>6Rc53R6&[BZPl83Ipp?W()AE:KU\!7d*QLILIDi_h_&6_"pI(H?2^7W5(G(+!>"GdV5\fED9]WlN>^?\Oa1\
%I@jn9B@s!+`^'F/-.0jHS&&^N[K]6C7!qhG>ONjo6=)J%6P6pQVOUn@.,GGb,ak"%na6/haHQrcFmN&c`UoIoUJ!;SZl(#=F=(LL
%'lh.<bm],[`3o,]'lu]FW#Arm[u7(K#"ET2XBAuaKef,3r@<fJ/#&Jk0$"8pPp\UZ9jQofUtT/$GQ09?"(&\D!D&S+Y[b4_-TV]e
%AReT.BpZ\Z";2*l+!,>%#YV3-lSf4]0pgub?n09>6lC45a')LU&48:<93:.I;hU,7%qH=S8p%VVQUr#t2<G$A">(@06/4%'KN5r7
%_]jk8QURTDS(1i]5.jPLLFl@8$V$g$G#@L/C6/*)p"7p6:]`>2M@L\o!ZhXge5'=FnI3aZ!^7$)#-:V/:aM"AG;/c:C$U9NVP"UG
%JUqK::sp!h`W]1P_>lJSSHT\g1HjYO7.cZf'EKeO1=n?#</&i#QO\Fh&Lf=N_@nfHeO1rGcfh4(qU!h;G^kEEW.LR]E#uGS7ehjD
%!*I$u'oi8q)@-K^+5f#l`oL@bX=Vh)PWfd6QEc5ON6GH^Ls\#]KD(G,,BE..a>$0r(^%un?C-lOoa?;,%SU=d(m3"G5`S`!0ul<U
%]MUa"0Lphk(Di"I"_/q-?'CS3E!@QJd4U-h2Sb/<Q::KN2'&FhC9oP66Z='!"'CNG!.YW.1E)Q+pM3c[g?;p4Me@XL/<+Re@%A&:
%+^H:\;!sD>1(6H_&8+fjPU.`@/U]52e.$+_ROC1l&r=@SB-G8HO(hFi#f^;S&scLBF-3l?)Xg=RMhbt!4U\MR`TUc=)rsE"(%RAA
%pq=BjN#K]_jHW.`1=;@*PC[,<qb+=a^:&>A?j%Vdou1kbj8PQEdLlS*%QGi`djdo]=F_M0N+-1QRVU8)!UpaH+u&<m^%WIh8g2>T
%'iK-".q5<9#L+0H9#JcZhSAPPd,WK?cmS>:2+#=X!M\3/!5Q59%Z^UjC[VcW_=,c:3Qsf`q%ql"(8EKY'8X+FU6H3r`Cq=)U)([G
%C[7fT6ZS5<@1>L-Z3AmLXK*N[`@aRrK;N#eq!0`o%Z?,tR*56&FKJ%@?5RInp/2;sjKd[8_%o_>nK)ngp!\-NgL-ff\D%cgMMha8
%Al@'_kWWI8BH=Q"ZQ7#DAdJi*lbjK98dO*0AC2O:.NSA[Rl1j^)n;#_Gli,k\MpaB7/#-)'ba.c7Q4$mE/*S/XO:@,iBB9uXq;GJ
%N'Y<Si,>>M--9eQnJ!JG[D;p(Yc'$=`XJZYGV'Mk9j3A;kbWj@HE%WO&2tpj@Z$Em0c2X`CaDN+O;`+)F:E_Zpd7FH%>Gd,h4j]d
%,F^+']',Pg_6=GV1u%:<7VgBF`6Lq+9\CG2=(2BTdtf^!?l''g9IV5SdPe"W[TS!@o[<m9'&H!>DM=M&N%bN_J7U>BN5Eb^E7M>]
%JAi:0P%6oDH($NWgY^L(cD*+S<\ZMoK>_P5>R.qlRTK?REB74'n0<Z0!kXJA,;_2TF^R:Ag((DpF2@aYqf$ZEg]E]G%OQ^2g3![P
%+m'[d296HKTWRH1n.U_hN0B2k?3K=Y/W<=Y(4-2S)U)Q!1p'nf`&aRi(BZ/6_S@,BQ:V#jfeHK.)mM'-VAFTR_D9Rt#GqPROao''
%Mjhu]Bk'FM*^W^sGC]Hf/dW#sc8<gMZKrb:Y?uE&DIK&%(4ao]b6W&CMMphb-j,pbYB2Du0<L.(_IkX/7?eNTJ3b(XnROH_$!@,(
%=c/&'fW\N^L1um.0jEKTCh)8#QJlpALBtU"4>[p1_BTGJ<k*LJ+fg.&e/Xm@H_:Pe$OgPkb)":]H(s?D0JPD$O"#^L.4;AFc[;\3
%]6K-LG'l;)%tg`?,-(n9T,'BrdNVV;]IuCDU5:9iG:$#KFWrF\en=3[T$6ngU0\W/EAG(7+:VKXZKo`,O9lf:FUB&h?&.2a327&t
%;b]9'``kQB@T,gl3EABt+[G>#)7gZ#Qc<Jhe20/cc"IA.W=e^.K0!J]i^@02n0d,q1Aups]+DM:C-i>]G6>BBcl\`;U7#[6^*'eU
%;)JmQ&YJ>G01/]NmA^u)eAqoqAbe2fZGkjOYl<1gQ*d3#WC'6G6bT^FLbQZ@?;f2/T"("*8h(2-TTseT;3om'hup;N"t0k,ZDLB+
%khn)+:<e40fJG7\_[9r-C$076JKHikXpo%RRDY:M3*B1$+qk3]RY%:67)%SE;[-YM%Q>(DOT@;V+NuMDn=^d"#8f`7#=''r$F?jN
%:V0OmUV-^oW1;<liqUfpbFJrO_4lOB?P&+1h\GuYY[t,8*mseL//\;ll]IWuc3YX]C),YMog,ij_gt;c@VBGrE#<GnJAU<>%I5<P
%(Q^Rfefcj"FVosA;8Pg[g7F.]PA5a$e2Y=sF*7OeA=Ce?Ub3737*8J-*@sB^AdbjN.!-B3\9,^iU%o_7a8hkhrKNZm//Y`B`/3#1
%PCp)_p';noP(hk)j>S;iR?/C"IADsD]s5OPZs**jr4lP]6=r)jMo^W$#gnlo)J#_%FX)P)JCCu6W9B@gKEWB'(@s48O9j>)dRdL`
%S<oTQ!Dgi=QuGgn[)\ofg0"3bJu]_P@!2%K9L2i=Ns>&FpD#8bD9'fF,VM!pJ1kS<ZCL(<5cA++AAXr-[+brEM9QE6L_P[S.h-H(
%DBRqD&<0g,pT&VHW8@G+D\gB%KbEs(K[/asBuXNQ7sGsM:n@hO#S3b7a8Ya7+%gT!#7\Q[MbkZiJM`o1%"3iHr$\RUZk->+9,gIA
%U*eFX"tI`r/0IbHB?u[*C,CH-4n^arXT1:/.d`?W+G6*o:h?Lr<j4\0IhQOIa@Yo=R#+Au8=K16-sAq9:_8>uUaS57;jGJ&;TX$n
%eauRX8A4.r_+&T@ee?Sm`Yo0=QEbZ/U5&bq&MQMb'35>\BU+Gn#tr(FIdD!^0U4s?"ib>6"O_J21''C2Zmr@M3<to^Cf,a*!1FH\
%ZkT/b^]oX#")ZQ[:'UTD=&oUKZO7,eDfc#CmhSQa@4'?&*J)[]@AJRl!+G>1mY?Taj[d";$Bco:(D:+5Rc,)Xq&r^2YsH%<d#c3,
%>:bJe3Q[X7;.*$,$E^$n+sEq'JIdYr_$rf<_UF9Sa:L2j#i](-dO\P\J/5aY_?Quh4em*j<u^@JaFVr:1Mi-rO+au98"*oB0kKJN
%@t?#g-6e>.f:5Y_<Zl>GX"NNq1'nhk$[N768GJ+]^7nr6/VlJ>*I[!pLG]//Q85K215f_*@@$`GD_ck8P7`b.E^G[2&-cZt^fW"5
%63f`e:$>'F8(_M7D;kl#$#i%A)2L51!'1HNC-dV\$;4c(Ro3l_SuO/!XYWPaSiIrJI<1J*j1Eh'J]^=[4s;&8eW<5BIY*^?eVmf*
%`tFQmB\Pg;Lo/uW.%E0Z7pO$E8uc>h#j`elJ6jPGQFQ-4_tg*6O(`S!2R[q$;4D'hb!]21J3(om5T^TbWE6GS_hL6p<#i^`oEIG`
%B'RLT$-*d[HY@(("=+5Lop]L*^`j%#1rFr9,,U"-?5b*gh!KS-ifVXK9?ci6,XHckW!hiQ&Af6s0D0D*nm2k`f=jqI:7Y5k!9L.(
%:Wmb%/]=1e+_>?U79;u:ooYD0_oTYj<niiR'i2I'V7ho]n!ZBkXk;j+-*@AQLim`']ahgi$a&QL"\\X/.VPPp\\<:&o[A$LgL-ff
%\D(.EdNVscn49'U-6j7djb1,V*%V4,Xh[XNWm:,draduE$)XE9=OhN7L)NDMdL>\;,Xrai)AOKJ'3W!P".dUQnk='AYuB_i_kZj+
%5S6:lfTccM5fl0!h+cL%`7MQ\S*sT>[G<&36.d,,$lj95UpXIlSJC:IVP8Y5E@FlhU8cNBUdken.7@+rnNC_&c_,-+CaY#eSj<O7
%-n>B@BN[Gabg[_G!];"(H%!K2pIo9lC<N>?-7/499uttMVp%k<>T-fe.T$HYckZ[(VO7P3\ia(,V-UY\1r[+oSlej`2&T0o(53Nl
%LRt-,L3YV=51(_mAj>.45RBL_ahD-Tf41p%RR']dQa)YQT]J%X,P&_bXO>T=D^8Q'rU?c>90N<<"/Pa#]r2KV5lmqt^sIqli.FX6
%"$q*BWPCf4b=K'N-LcV2#t3MLZWsa33Z>4i*:o-01Dsl2KUJi"5$oV1n'D+tMChp9d"4Sq[P2XA0$P<0p!Eg`BFug,.?4T?i+CWI
%_^"]\0&rr%FpJA2.BW:dJ.]3Z;$[Q^`H#Rr`RLU9U"n"hj!/=BDLi#S-_OnM_a5]7jtC0(i6<BU.VET`MP>5S*.uDHR@][rChif4
%#W]d=5_Os$H(Ml-^jgTZ?<cBb8&2OVPS\[%1HcMH+'_bU,;0Q9@)9n!2,'<*],8>^1DV/9IrjS68?qUQ'JpI*oaFH-Am!1!mod$Q
%9V`A?Lgpfkf'LOGZl?-$@BX>uWR$lCBK_q$`Bm%NHG%XWMG+1_L)sRG6Q*:3XlnZY9;tKYA9Anj^,#&(4G3*SG[H$,ad.&V4'K7a
%bm?jO7'8[L@6B1QEG/dl]$FF>BU=%rc&"bc$PE-]L8`W/GRO$f)tRk!3d`>\M/^1+5D:XbHiRY8bd[sc4/pY$-7Dc=XqI20f4N9C
%:Sr(2YV9E6R^%G[G->5oMRT\_7>+AiBg>&$"<j'q>L<IDG9E4U!meC[5:u2XXC5SH)fTSg*)/^JY2]B9C;o_a]kVe[\nDDB]U>^I
%A4R:^*r5DX30BoUTH)H)&nqom6XCb-l$-PN:*Y7+V!GphK.]Y='3dK9M3@q6VIG+fB@8*TqXOo(3A$#d_:0kf?>(h(>L8]`Qpl(*
%0O-Xj`@'$3MfGS8+iOrj5FeY14en8[D^AR.)-fW*5YP<+j;+5NLnLT12H70;Cae2.)=CK*"0D-sBarmZ>lcV"0FtsL,%J)5nT!!/
%YJl(oQNM_5e#F4Yk%+^p+cI*cglTLhT]<__fL(jX`=djk6;-3%o9,<6iWGG-"!^bk6EK`:[Uc1Ifqf6k[.`3r5bJu4OTd0E3NYpq
%^AuM$D:Fj*+Ya^g#AQOM>:bXToO_h@ot:E:j%U?gN"l]g_OQB'qh`\Ap^0_W9oO5ao:*d:LAe@G'YMCUk=Cn5&>7X,L27aj7mgi3
%&<KCMimGW3rrH^n'XtCd\IQ\`A3k)ULrfdV7?R,UC9c47^lDA!_XIsAHhF!"!IP@9F5#_+UkK2]P!V3CB[_>1OMJDcJf3lpX!qYI
%F%mg*RT'`0W==eE"NIAWQI`YfV/lsK?`U''1!L+aDukJ.FV<^5b]\/f!iZ9(Acd%(.UC8]A\gcR5mq1Z+9U(2k</-V3B_i],>@;,
%UpASQg*/;lF,H!1CT4J'&eO$;2Q"Z/Fe;&hWT/tX=>H1(5(7nEdPX>=RTf>:=W9&C62mTEKr0a#%\',91R.tZH$!tu<m,:[EQs@X
%1YV;[eB-co_CJGTbuWB9)EfX'E[dp,MAT:.<sYVa!%l<5QZ[j/(7'Z?APco3n)<Pam!V-A#_D3^Mo*;m0FqNAW$+D/AnWAd7u:&5
%!"Hkk\5KK9Z8i)NOhXRV!Q7'6-/r-j@;=cHW-SQjl=1reN3VqISqC'Y7FS6?`\9L!ZE/qKO(-J(0a,`=q\g3;TEUE:CVDY(&A,:N
%$IX(O:+U#1To9eD*o;jl!mfTC@8F;(+_<LZmm[g!?p^aW!dheq/h'!g9c<(BAR"Zn)pOAZ!f"?a^q%Wj[o#Rc",3R:N7pVg0\+ij
%i;(D'qm4G]dsYY8\CsO\4WCMWN]1-h>",><4c"mj_T;po,LJP*<WuTn=r(gK]/]Z#,)2]R5-e'iUCToA"p"!=LGFSf,8Q:*@DmL3
%c!j(3"8!q+B1rr.(Z7?i(r1oY/-)l]`gDm3jG=s7ak0f@EaH-4@3c^D<,0dd??9ga5Xm>A<aZ8J;6q#O?M*'R2@3A.OVE?]1cY>D
%c"_TeDN;k/[.%X$6Ps#0qMglTAqVr`\7q$:/XfuT3e0(OL["),nW=P:5m5Cb/.DoOFaXK,GS_c+&=!oCHN03UPaBj57k\<k?h?N^
%LE'55EF@u;!n!D,Me4.VJrt.UM"*DDmG9cUIULUPjlL#=X:n0Rn78lNDT&*_LlDLFW+u%CbL^\kX<H<lk[um)/S^gVA,F0Uf+`Xf
%n8KhnWEpS_nW;Spm[&D!:44)0o_s'HpLY4DRXXr.f>#*!me4blgMafl/*p<':]/J$B.q"`]__'"?bcGMdQ@EuorB1K4+DS2rUaa7
%5Q4IVnH-,IHWK+!At=f+(A70(BPX9eR$]tPEq]pK`RoE6Ndt">H`<3<5ZYN+UC:dc+YA;$\QX0NM0Tm_'I0t_RRWc+A"etl$I)C>
%l*R%u_43fN-?:a&V$?$:>"7`]dbU9_;Q*GM/d&<!rr/[aKX-L.'W3*pKTAtgMg.2S$-/fD^Vm;u2[*q^/'IrM'p(.$OsqOS4rX!V
%U9(Kfh(Za.pSp.bXjIoDQeV*MG]6cjYLiI!6B^cr1iL]m8Y\^K`7Jop8h(`okgrfd.:m9o=.@>(0O4Z&IAQlMG>rYa*X\YC*R$?c
%f!>O&ZS@`-V_sXK!OO<9N0!6N6@TX.61,+`*n\N3ZX?rV$J]'Q6%-o>AnJX$]1.]*,m=YXWjmT,`A)e!0IQ96`k9b=isa!<"msM>
%7UE.a!?#WmNTF8Y#VD"dP=#LI-tq#\QF*a@&H[Xd@$n\qQmEGPp<g`FI=PUk_+eJ!q@6d3m*^Cm84MNl6:Y(@N\U.+on!:70u[;D
%=JWEo'FdC7(3AqX'="24=ZiXNcsB4rH:<,hN.*%oU4j"'L+[/3UILi#/ett+fP+l7WKqHtYcG$>`%22mMA3-u+8,iMDI?M(!i&)8
%nQsP+SjdEZC[F"'!2Sg1+ROb8:p0+!+Z(H9lKn3Bp.^`Uo[4_]=9I&X=MG1:!(KG6QEu\eT0-5Gk\aWts3e6RK0^nN):n1X$Sf'D
%&\CFjN&c;]NGL3E5RZ.)+q75n705jAFn.(VACZ@:lCr<D82UT=,VGRPTSAcH*LiPL&hq^mDb!R"@eiHk5Lce'hP-@24;N6g4V?X)
%at.Icb.P,.OBTT*KQ"j="g]_)YA+21So7JP5%@VG0Dj0=10Vo$KFaj.2+ptpS6epJb/_L]'eb95#@:/?,KBH9&/)9J?!M^#/I=%m
%f%[Dm$nW??4bf'T<rhOK+m8'kV0hD,*&SZ*%uQ0oIn?\':l'o%"*g)!*$SrYO6ALCTO_bW=of)DW1rsXGQQ(!!YZ+:D:]\$n5"m,
%P;Jj@3(7&/Q>4n-7>iL/(X#@W9;1RTl?2f*M],,thBltB<%qNS2?N(EU8&c?-nq+27`Li!f-ldtc`-MP,@.]j%F%j49$7g2h$b%8
%BPATX5RS/3*A5q&6rg*%p$-)cndl+@blPb5I4U.BUV9DS$RC6X/jBi+N91lMgGOu!FdBjob_H@MLPf5^03Vn^[!G6#g4=`Xh+h4#
%Ro7b@n4B0-o$LlhJKkOGFu6]?FoA#%BGW]]+[pJlqCXHn(drOMabZ1"K7J?u9]kIOM^(9>3q>[8/a*=&=^:?)<tu3<jN:,-8CT28
%<:6JhUnE6<6BmlWXl(@5>!=^@@DJ$9dE0hgr6/H%>^hb<Zpec=aKC?o$?U9!ECJ5X(Smqk3,0moAtB$"79\la&^#t"nU-oVrG).I
%H5YU4PX](bh/9k`i!/]<kh!pUl4$NZ-X\:+Q'bWLjtGfS`5.B9S-q/\RY\&C3Ud7r]bk?S?p:q'0,CNh"pH!H_UFN<,/b*cODlt;
%1'P&pp*;<f*t8X@l!"n?^pB:I#$.)6d&*n&1sTc*Z=@%D)k7p>TV?KX!XVD^^c`\&X<n*ASJ\njO&NY`(U.?`6pRe*:LJ)cNgYf/
%22(U05lagaW3)]$/;aa!b@%'=J^uGn;KuQn#R+%;gd?eRAO*7:K44Nld$B54.jcic[(/eP,!b\<CrZ`V&S-k_NpFJ2&Bc1'M_$eW
%BGQ.O0XEK%`Wg0;O;NO:.SM.npuH";8kchA6B_S?qksd:h9Eu\eA*Y8S<d'"dY!G*/rMK7@X4.0<<fYOe8fL`,'+5rqhdgnYD4r%
%e7I9QP17/s5WM-fKk/%%g`&+F@!RoXLnq7WmbJ_)a7/^2gcmKiJP$R48%rs%=#!ogJVOpT(.7>?`7;cnk=jKeI/ToTm<E?BcK2^6
%`DVGr/m=^rODb@t#":S;jJi>_AuA%N(dXi0#mORZ05J7Q7W4ZQSXBZ=Xd!L5\qp.2VBJpm5tE:eXMSekU8_+SV.>U2&LjcR$AleH
%OG\(F^jOc5p.0$j^m2RIYWW$n>hM7Mp-9l.77;Q[-WsT]`[P.SJ.N-",/"G0Kl5+nb`cQ;l.'q/K?,ANm0oc;.;abD]\o=>Jm&VD
%6@giPjPi`^q0#=CfRRlom2'._1:5=*G+*/Q9_kGLk'l!G="u1\aD"SS9&=Bp7H8B<P+;V'%1>6K*h$6bkYE)#l^e_L)W](40uV"(
%3+d]dUF(k]=Tfd"\4V+q!&,^na^4WCg%7$mo2I4.GinH]76\4BNhJ+n?*N?CX^?1NfE#eA??98+PU!);1lsiNO3;>TR*]jkJ/O@O
%`"*e,&leAlZG:3$EfK=+]R/),8qr`*"^&sr>POqtS6^tKJRFNDTE49kit]j(nC)UChm=Tqj&;A=%2[&1_kL[g9"))Dobr5S9IlNN
%0,UbZ`^("F=>8^@QA$lRVC%G\6?CT?5\\aaB*;gt#-h8$NbP2\f:%%?pU-ZJ&'3%-BI+UC)lC4P!KaLR3(gAb>f`]^VC[<<O=_mK
%Ki'?9W!+sO"K_<m=p5NG2X/H^(+Z)o,K+b@CfqEd4T/=U&KtlDT0?1`.O4Qee0";]R27k^d(ms``p9G]3`,L[WnD3+)4&EW1pNlu
%Y+V0t7kBtn^8i(q7LG&]"9\7s-4X&r@@):p1!&7lS9oOl&E(3r0:10)*Ia!r!*$0n1+6]O]6lMC,(Kffam2S)g&MYk"Qq?dM_Q-;
%oV5!4`Je:$kq(A8P4MH--tYkN\i_\ITOhpW0UC$cB?=b1#bFlp\.rP)ecnWY@$%/$8'n`DhK#'gY3.C8QpOGbMoI!KKT3A+4YN5M
%F!;'"d8EBWWaW_Ie*IM"X>Zmq,6?A?.`kgrZfJ&#QVLWgbf9Au8)/Ze8hQR>al&YK9\$+p(@hYYH(lB2]f0mY=Zn,TWRTU8QdCp,
%R.OB\HIOY[<-nG;Q[6O8-kHT8'T8(XFWm2Vp-9f0jQds$:<ARE(TD/\+FshEUAD\sLh7EY"+CMpPF,ERI@m[dgrm8GP)HXTbTg6'
%,r<S)0.e*U7`c>=kG4qhOpbG!%%;SGL*WtIij_FG8Z>fl47QP@pkkbE>fEP:9Kf3%,19A`[BQA4&X(j8kn%^6#=k$++``h`/Q0A?
%'W"33+t54nZ;0AM`^UGJPe/,#`kKgdqPGj?(-l>XS\?X0Gfttsm+&<b5qSae7NaN>SXlNNr0(f+WY([m.lo]$fP5[3O[d]27cjO:
%9<Y$u1J&"rKZD.`S5:H+A&"alR@12kHs&*S>+5Y.L%KGR4`jA#+G-]o+$3k$->56B*g\=XXGd6`LX8%I7Fjn.5?e`hl4W'FTY6:"
%dQ[`jA8N;ak(8@`YFmZlQjN=?1&2-';C)CBaND(]mtP8iTI`3XGa/#D8q98e:";T^32ir0(iZE]lj98L@=WlCX6Kd\QS+a*Jh[EV
%r)_^K,3FF7d`I?5UN663PmF+OS\DW/Ys:;!%qPT:Pg1eD7V!@H;J:(.K%4%j2Y8q//Z889[6!E(&qPiiKQ<a=1BhYV^KNA2N5;1b
%dk%rM)N'YW<>hm9Kb)E%!A4JV$nBRm3!Y.B9RD>-9q@:pktaP2VE/]04Frd([+-\(cXHs5(@61c(6E[mQ!PuQPnY%8"MurGSg8H!
%BCmPn*'OGK#s;'i^0)P1?DSBf5lJQnGFGgKBPCKW<t[r;Z3Z[D$i-gR-iDUme:cJN)8;/"Q=QfJ,e0Ted4'h!W(Fk$l0G%s.RYo5
%Xg:TM"<_G3$A35&.gaGFp0*9tApCoV_oZ/D(*]9__d@ZN9%=+JS=C3qB34<K'=)2c*a\t7-'$#D[<cXo8]1ulOrBnq1Fbo^3`b*c
%e\UViSSA:I^$HtGXpfN@)=Ofc_"9nb!$gpYiR3C!G(@,["d1IXX%S,j#hdX&-A7[aHE\7u'^6`'X3&2afJ.3P=(En9aigd6EK7j=
%MuF19EKiPPbdu(ZX1?i'Yf]#HZ.:FnBT5b6]-ZtK<%ES!X20P1?u^)nWm'&iV*+:_UbK=!4tGi):.\,gm$,U-AlM\RZu.,(r)T#l
%)7/FfPp+Urd)S$o(r)fpCf+&q7EmC8Cj?256K/d$c!Ku)Of4MTpkfEP!+<^?,'&NKV8B(9=32c>`g-gh)uHRGcEJ$H8K_Cd(!sdU
%i$;IAWPu0/&ckDjbulnC;``$R<-/.F-RZ^/^r6V7/B=39ZOATXmFHD1#nOYF.WZTfr'nsU6C1"4,p:RrR#8I1Y@8r9,f1J?,iAk2
%6":G:70^q_(6rW\,^-$*GdB[T-SAqI@GYA@#_fRY,5H9@HY*^5$r#TIL^^![#T(C?BJ#1I6Ij4c=u?GG>$q*JU:%klRjf8Dp=P+p
%f@@/t0``"8Knn+i,;Q*"h^ujo"p:'r`P*#U,D/.aKp:06GaNi$2E&L0$j39EOqS2QZ"^Js^Vh-T&@*fYGb!>j33\9*6CC^Q0[h[U
%I>Ro8O:iQR/Yf>)f:D(QE&.S/1o&J=-o#<iWSWjlD?i-u@qW(2CCO]*J;E\g_V*FqUk"1APBpL9'k?SVqLS2T<Q!:;or:*Q-<so(
%L[IRY/a<'oLF_X.5pgYb9L.Vu>1SY!Y)kCNDY.-6i<gfJN,:r>--P1>9#_n'D*K^];%2oFQ*rJ,#ITQdN5i<o!!@_WN$]r=%4`[!
%Mc"lLof\L\R3&%E1O1hu2`#I-/]r04N!+>-:j#tY(d,$=l20a>Bo9F;W?p1i-GhSTh*j+ZC"VRD:)o$pm<l,"<3'$J34Mi9E:Pjp
%ML?:uJ_P8L3K0)-E;lQ'':Sp>&t0BWUlsE8MT9NP-$<+*\6,c<N)UesBDM5E.F',K!*,Rf]GS-J?kd8'[A5TFEBp*@j620U?u"]P
%GF_OB<FZ9fd"u7LY"Mr$_GL>9=a!!8M5+NF1C("H6j:-&>iJ<2dhsr?M.?F8`17B!Q2%Y*LbEE%i<hZ$PrfseMa>inmVkr@c^dpg
%O-f+TiHX0f=X#+$8'1kbI(.&QpirNESMqN.(l2O:Bu:m[daA>83/julr(7mQ+X&_kL,9lF>(Aib3Q$DJYS:qA)4iF.UGIY&Ar4R!
%0V#j%W+e2<iQ,nA/FSDB4_DPd!+Kd'g_M@71U:t/?**r[Y&NOI,,)\KKep1r\hg@*JnlXQ25Y>3R^UjLU2X//a"s1R_Mu4`8ed<`
%,8-,TM8C:B`e!*qM8DP]aJ@6M'FmGY7a&8/iS\VsT1\8QLE^:2onFe5hJ0@_E%Zq$h%%?M8]%`"+-l[r&WUZNU`9etE013<-+aeC
%1R8LmFMeV!mt8R6SK>EI99V8WE)JEgF@HbsMT3L<3B/E6JJo&:E:aYIg,IO>kbEqHJ^+Z6Xt:lGR@(fV[?Z9j%q]cu%Hm%F%1W^r
%LKuL?eDT+$%KYi\%F4K_9L(OOn>Tur#1mJE.D:WpJSG(POa_@=3S&N$gu(`7+T:OaN>-E\XlSDUbD%$BRp"9To\d@uZ=aA)3!m1S
%Kl?4ldEGm##!Y)(&s0RVpqb)5KmauMr8>MfJM[mdE0=rfAGMhm_0))*WuiQN3#;p`h@>-VP%m"?F\`/!1a<h"=+YDZZ,ZXh:(RoQ
%Qq;TCIW4i]PPVl^K9I.0q[%@rE4"i[59#2n!3]"$DZ&F/i:%UI3;7#peaeG9*74,p*bXOIAtKTEo:GcoR7O2M\FG2-Rr\V)g\JYt
%pn9ffq8"'Zj]l!b_9kSeZb[/I\mHZj?g5D3=HT%fd">i!;EFO]4ZK,T<1+2AE'f*!ni(l6@Wo`5e5ps8/.!Gt)slLC)m_dSG(+C\
%Gbbc&nq1G_d@oe%i/UM#5YX:(3*N[II_u]a\5uc*.mGup8$"#inq//^7(B>iK9JX-d8a1qE(u<tiYatj-Zs<$K-/m4=tuVrK9J]Z
%S"oXgXE'8j%XN)qEskR#2tZ#N/4cT)lh'+9-8Eo#CQ!CLr8?:&ptb_]f:-o3E.'4PkF!Ds?]RCRnUn$;d+Q5-;l>AJCQFG:BHai%
%_APKr],8`9TEf*pd#eXdkeYBq8WhlVK=fp,U,kHI=&MSudXqX3A^/\i*ZVDQ!o][k**A_#TK54qcDfSqF@-T,=\Moq8e2DBQa@3S
%*h5?u8f0b@K4F0biOI9f'*),cE^TH<"\fssis1?P8`XgZK;4._h;AN.)IVe(_o`Kb#.\JZOQ6WokqG+n2Z2KTprK#Uq8'J8QB`P>
%]l_.&:+)%3^7?@9KN#GqWpt_*IVpn'GNB(M#Uk7tnUiWA0sku@&'eHM)/AU;i/Tl,Pd^.8K@n2ren9GN/1.HO*rOq5;W]HFq8(I[
%>FK_eE1R=LZ4hn$W?P@u'80kh>EG`;$,VsOe$hUS%abPibh[6F.W_^m(9e()6\s*4-O=p,q,lDi5rbj*C+Ll$30n7noF4)GkW4t6
%\eBa\?F84j&qi=HVnju+"Q>VmR]c;@FYQ7+_[[0k*B@;o*#u1sc"1jH1H>t6\23)eaVpW8bi$Gjb<mW]cV8\mB3oNa=NH+1*'7Cn
%2b:c+cgfk2JnH3ln/mW&S=#H)m&XmARU<WP"@kS.l*d,ngl\!+L<d^BcE8P`^@?b1m?ehJFZsbF+=LUqbQj0j5Td#tJ[9qopSTc1
%E4"hP:E)Leb.[&VTEBt?_2T*h)`V[OUD@/"^_:c?o#_0.H=4InJ`$"Ps(:LjNof0DT94\g%@@"[Sbefi?1_(IQD2[@Q<P<7-3`PO
%)[X!^pp(NTl_PH#%APkRTc4Dal>M(]J68S#Uk[7kgIk\h+/_W5+\Zfok=biG,sH_['f`MgZq+u0!f,mR*RTfQS<SkLHo`''/2tZ5
%9Ei^V\!75h>Fi'WUbdQ`<`=cs`WXTVO7&r`9]1FZC^Xod!b]nT@&DAr"AY.AeWgC[%9Ch1'7k5n<3T8D.W@4h2i,7ThdL1c"HN4f
%`FYqK-Z(>r76;5D?PIb[L'jG>4[903'f\oqV\J-d!bXBO=C'Z]#([RMPFW#M'g?"CkY0pQQsA;WJWgD',gr4hS;&lL+D)g:Z>-\0
%W"X_<`(7#[M80E'(D^r67,ZkMR^?^u#b9DN1_M]7i(T`Y#Bq5.=q*=H3Y+46**N<VjT4NKgFOE14Q*#NU\=(;i++u]:!87rS?[lB
%7*@7jmK&1XmD/mb(1sagH,.s@>h[=&NY\n*h9#if=@EFHB#=_rVfF4?*cQ_l9!geRJ?q@-K.Y(F:+`62cc-%sdnoerh!fi(ic*fG
%:'9oT<=;396N[fPKNUWo#+Vm^dG%+m%blQI2Hq5AY+,cN$m'ACr,3LOSHg,djLX-nJ320l;doEr]Z%=5*Al]a1'9Ykd"(_UUbM0m
%i&#7PK@ahQ*LTsa)%/F<;fc/($TRr@=fA`:!G>^OG@B_ei(S0ce9)OG[OgQ!X=W:ICol,h_"eI2[2:IQo_O1P5-?HpXO87+Cb4N.
%0p6A^(3%=-ZH=$k3125k8E0\?%kcX<eL85\<D9OO;Ll(bYN<8lJE-;C.Jl11\5UP*]VPU@.ogSe!+u\KL$BB1CdG&sQ3*SjP.*$4
%#U6N!$5&g\"ZU@i@#X"(!,$d5Fs8r^aa;.*UR;3($NUj4_#^_8aH`"nSEF:Hk:I!"/Z7%k6$?,+?\:(TP67=3S]j1JE.F/Ld@490
%%WJq-V!]0Ai"-5g\sk^q.9':=SHYP*Cq<R5bQ=r@kq_dZ]2#RcGefTsf",DR!CsK8R#M?@JU["feTnr]$7NO^L'Sc;c!^2e!lpYl
%jPCH!e,+uf#,,("FJ]O/&NF[JHAN(A3-q5dB)EJV3;"MsH92YI`j;"V`WM65A`N&<i!Kpr/DsbP&=qU^J4%mj;(u+fR4uY1iXH8T
%P=0ef=MTcPEH?l[!mUq[CmgY@$TLJP8r1nu^_s3$h8<k@Duqe[rK=bZRl0YPd"!pB6sOt("&:pWq8/C%SFrKWgH$"X<bp.OR[Lrs
%2<o_;"O<f-'(L)kE*+%$bICs^B2j[<4Ilcu=IS[Pf9sG%U9&e_-?(dt0<?s\it8_Jr6,:=P`Nc!SI(gSL,A3W'0%(+HXjqr%]RtV
%ffBd+L6rsmK*e%[(QuUNR(sjh8tOM"^bJU>g2AZr1Jb-.Zj,&,]=-dc#TW)%*h.$U-?.3?!tMeK!bX\=!U3>_mT>S)1HeB392W06
%fhd7Kp5Lf.<8`d6nW6g%E$fgL2qe]U\,oo9o?1-cR=A2g)_,gheeNgR/__lr`7(^$]ebi$/JU8B,$8rNF@CrXf%lu#pWe<I/JU6+
%Xg/<q'f^$t>"^lN!XIF[>\GW&3.$]>XAn*tI/4!c.WC(1>&In1W5+PZX`?3pJV-s%QL1ss<8ak:8rLu+jm>a]4hdTkB*B-qY<*IY
%;N>n+MbXH$3\nDG9EgG+1o2r]/o[,CEMog3#*-16b5"5bJ`ClebB5FV#eCe\Dn*S+kW1Pk$X?nd"a)G:?E,S5(HB3[@r<tQE-.p2
%*Nr`+)BoV@'f_B'\L#+c!_8//C,6Sa`^0@gkZ$KabZ?uHUB8IrF;6]-i5fZZUrMjsi-]4[.hOam)*/cr7,[hg[<t"I3.eVsZPsQ;
%G]Ip82H8Vq^`Yd-VZJ4G4SJ1\<8\<qKo%i*3;q"F)=H_JB%tXC_Zd42VJ@[u3+G'ElKVX4BOO?gQ4'3u7Gi#RbOWa-+V3mTi+QMH
%hhDT1d31&qSIM*]&*'GVJ`$"rhZ\@S0HW8Q-L#kppqRpAmT>rfI,N_Pgdf]c^nD9+ksf3U?V6Dg+[+8)1UBo%?8O]^-C'dNA&AP3
%a]s-Q*VmL=%T9DOL?JUq9]cK2n:>X<C'N!e!312;2a6`C?i'"Kp"q_N3%L3nl>QL6BhH86*dllWI576$5&_.eYVpL=#EJe\CH;1*
%).mFd>iu354n3(+#EEDh$%i^-dtlBLTEE6A-^"=m%NJPbMLDB)B+'oq2g!u*"A9+`*B9WVbB;0_.h;aG&N=gioFOl25Nom#`in(!
%FPq,_7E4>Q%NKp[$$JBL33`K2ZZ\6GTE1;^k_9Ndc"-;\CuFf`Q$f[>JNIa#c*6]]#*.j2\1tCrJJ6f0b[[$n_!uT.I(GjXgi7C^
%;UZL&38R#j@Q/,]!:FT4"d-'@UP5Kb)_uBNiPC:,\A/\raC4'0B2ZlMc`"Vkb\0#=9]3ubAK='L!cPL\g6N!a=C;VYjT.lh''`'k
%%Lb%S;/g+JL\a=[G*%6\lG*1\"2*;n+'T*AAp\/!#&mroC>3YD^`D_ZZ<nKbd@t,[%,d/XLQa36AcN((*V5FT!B@/#Pl#;(^^ET\
%YPd:VgnFo#l+\)mJMjZ?s+YSh/mMod7NF^m8iui-ps).N]&ipG]i954V>eb.'`6r"]FRZ_[`%(mfp@utRsSBrFiRV!O_)KU[ghSG
%#tdZL8AEPPZ*T+cUu,u8,u#cc7Z10/GLCE<+CMZ)rJ'sM5(&H@_p`E8jYqEK?rLq\^O*NP+T+\\Scd/HkPL"g(sg:;Z#J)hl"&]%
%2B<lMhoHmToo/1*N0^HF9]()1#%e(g2aKL$#+_0rg!!D-A,9d>0VH8SN><EV>GgjY;T6'WIDb:WY+>*12lCoVT_V(%EX?_sq*oh>
%ZFeC-hcQ:V>q*K"WBeHn-ht^$]+/HJL>TV2m4e=K8VD`\gZcB`>OiqSfY+O?-?s,,\MkigZ&d2t%BYh^7Q47m,B-9KqbHO\\1O+q
%B52?Ao-4II2d4;:2lOEX,KGD,%C\9b)&*qKhIpW[b5E&I6bO&3PW%UZ.$Ibr?b*kD:gnikR(`$$J\9N&m*4_t$6D73GI)-D2T4G\
%:BrC5@RL5::OmHjYr?WOC?@+S2o0uSh@+"7ir5eLQ._WT571>ubh`V+/D/'j:jWit#Hu[Dg)K>o5@RH9A"aQC1T]*_=K1OQDlLEi
%,1:'.ZSrgA.D'5)D_tDI%Vfph0PE5O^$3$`ZEh^0hF*Kg#gg,q@9kQb5IeC8JM<n6jn>R6<-)0P]`HA25QV2"2d3TZB#F#<&@>4`
%[l<i(hu)F+-F[DAL@kkL@M0PKf%@ZM%4*5u?eN,,RYA,3Hh/a'?WM2cRUE3bfT:F^#hSp\:@?@HZ&noVmd4\oTEK'umS0P\+3R:3
%Xf+EO\s%Ki%7%qPQJC5o#N&R&DZrYKb3c=/Ubcb(VBd<i32jNY:nmjk7dZ1K!r)\`RCsJ/@I\h[p."4#F*96aF.eEXn$$hZ'*bAj
%gUY#^M^jA#bjCCN-%J"c]cHX+YYohc:EjPdV=l5A9U0MFhIp:7p7V+ki+#>kbhgReiG-i0]j]eS%qifH9rjm3S&Xe(I"<i$S_;b;
%dk)B^R(ZYbcR#MGHSb8PB&A?s)pY3VO*>>W31*+[#.:qgEEHfN9'm')7sF^keD:CEVNol)^aH7=%CJ,f@XsCHC2]i"apN%9hKUj9
%s''5V+T762%r-$)!WAZ#ZSu&Z1t7AqH.l^hMHEd*6J@5IYr>K,2+0L12rT%#42S);hF-UrP2D,0dA"fl-h[aTYF?PLLqSZ2Z$N&V
%H_VlQV[R$Q#3J%a\s_3?FXSlPQ.]C%$*gYWhK8B'WHModDt:(W5/Wc$&aIW6W>sFE%*:4IHc,6q\1pm;#.HOV+mbgQ[l7;2pZaGM
%D^n,Hh9,,E(4qVeC2YF=F-i3<m>\[&j^F6t1L&YFE(97i<)55=,PU>J`BXlQDmUpHkD%c]'@r/=<P>[MXmFj"GJ3lt!?<1d#mV3D
%2$t:?Drr>m)WSj)bq_GF1N[MQP4(#8^TQAKRWo\'b3_n.[^_UV)fDWm>IC0uL;?<uOA>2F+_mWMC2\F=Q(-XSeD@PYQsJUK]p[?q
%eCDk3IJ6B!IAd&l.YTD$Z*"YDC7siX-7&*[KaCVQ_cPKF6\aG)ilE5F+t(G;!m=aZLNkT03u$:e/]3l2/5jsf?uRFseo>>t@3#MX
%=Gq],Z9/sn.!Ao@OX6@uREurc\jY%2+IFmH3ml0!,S2$&\iCmo(""k"'JaA^1tuXK/PGLlmaukl\,&?uODa,#[4[\-9Qkho067$<
%qs_0s(8*L)'nA$;BLB%!/SJ!DmFUST%-4b6Fq)fXe]N-(R"UeK,41erhD+k_Ur?sC$<>oVa=69k>&5!#XN0Ip0Q-Ni&!-.L!88/I
%/(b0,/lm;8=?JL)di]f^`Na=e_]>g^&`&?YaV;lYFf2(g9%DU2$Tf-2,LM-kU%!=^?5:+D+:G#!Mj>%^0-u!BRLLC2p#I0"1eQ_r
%T`ICO'=D>=\b0X`]b6E3gd'AFoWc1UIrO9S$=6!SW"2/LX:&Pg7?o3IP3*HC"]af=ZrFDC58[Btj2Ii8c$CfC!;6Cs7'+d6\;LGm
%@X"RL/@&qG'G]8.J0!-uf8_2&TR6n8'Zl60Qbp$P@+D8DAU&re[5V;^4.\<Heu?WN:_q1Od3o5bO;'rqNSRR]!cq]F4TVI>8ljrV
%XHFaYfsY&r!>t4u"H2%.m6Z(.(ijb7a(eJ%&6j)C'4(t(hl)&*Xc@o`*EZ8ChJAu@"f;toFmb)Gg4`+4)!UX%>l_9OV@4\C%l>bt
%\gqMe2M]+$NOnidLiO9m,aN/B1a3W_gg'TiAp&;FN5Vc1Z">d[4cgp&9#>)-W6S!CbLKO\GVrpG'?d*O[(uQ."'PC$$5c5l.Nmso
%eJ=f,J70+QOi74.J;f3!T!dCKOp96%5LuRC+W!Xr!c-u_[I[ER.%*7RJPe31p/Y3?PER83W1<,YpgX\V6I8(Ni>ZkYUEc1SLLr.!
%#LQSF5"A$X585RSm(gHI6M*XUK='*>qDa&\1p`+'o"CeE1nKnrcq,n`(B,T,!]"g!GEF/u!it?nc4-ofY%[JCBJ!a0Lt[G[!n)3J
%E]KdBAJ"fLQ0K`['*WapXRc\]6Rehp"sKMaK+e6n9,D.nit0W`-I,GQ2-dnT&Q5Nf?RtD\"iB;E9eh,209@(9fU\f[!TAk&!="Il
%%WZ0!mLBp:"t)&MbpYQmK,.sbA-OVV$IK]Bd6^EbSP4]i#=(_>TB1F&!h2L&O6-`CKMOjr4^+4Ba;4>T_hr:o!u]"C151#$e4m$D
%XE0.R]A-%t!\<^.BLk;\1%S,eqnScZS1:HEP7fG(UhY810-ubukfE;+JKSEJ"1]fJ"?3g-;j$r38oMLG$lNYD#fI&nEL<\U<R@;_
%(g8tn:jPN$K4^i92RB1b'"]:"0sF>mW.SWt`;K]s3'anAXCUjt^g5+(61-(_aq1X^QNdesh5O;^YZ\uukdc67e@8Ue%QRr/#`6W,
%7a`g4@E&j;pDe^UY0tVK?Cns`JiRr.S.qVC?A%m+fZ%tM[L0TJAfFLHb4C@ub71u.P+WB>]1>X]9;p%lVI@GtA$\[O%HS;3/U.K#
%4s?\ST(*k;h$>:VPEhRi>]n;eAHKEAaL&C0Dpe,6/5Hc;l!3ATa9V,nKRU&3s#O<j0GIG];<(7ol6bAV]kmn.l6\b_(j-JP@;NTh
%[CmW5*SdM+Ta?Cr."FKq`s6"\@/FQQ5<_A^h$"/5)&YO&Th8uP&<+E=N)8LVbR=Jf1@KofB(rsbS/7giToI:W+M:Ep%gE^L&t,tc
%#4AnH/_\"O:eUjcjDZ#=6BKnf>TK\</;mh<#JgO<jQkb8N+2%JQuklFaIUijc.na'jqpHr!NBcBb<%UX,JcIC/FEuR/u_]'+2C!m
%r%^)F/DG_t9b8o+O.n<7/K%k>hQsaf-I%\42NY/t*,ggMdF,B0r)g-7oVbd7)m[NE@@Uoa+OVbf5-sb*,4aN5kQGd/-l#c_)Mq[>
%aIJ!kD*M%(HUhSL?/80agSBE5>K7LQc/_*5]&.ECHd`UpBP^DS[rTka0@"('WFMFX>WGZoZA"]XmW9gT#_h\YM4)U'[2"$oTMgmo
%BYb"%BXK]573s'5#UJ\mC>.d@?%suoVRTH5o[[tod`t\B"fe_?OpD%$=iS@C@Z<Pc3B'`albbQN!7VIWcbkqr]pWF,fQ5`@+Ias>
%>H6g<gJ(Vpbp-t\Y2L7.gMFTAl!',j#@-ZMc4:h]"cg7u0\3IOGa@B4:6WW#d2;ZZpu-L7DV@&AL:O?HO.mRI+-AG3q!pk[*7;'6
%-:*)+2cKr)LF8d]YSk&:W<99?Rr)BO;G+GtD"65r?n>O?0Q<.]\%=m]Vfahb+Ve1e&\(C6>*u:D(@D32@\,G*%?8[KN-g@JKB_rX
%dQ)Qth1acn+A]V):Ig?m-.k^*G>;6jJ?NBOP.TA^]AT*2/&-H2Wk1N"-e^+H@tHAF(i)XG7^f<0b(6%=JD@'f`YH'6.7C*bH[%!m
%"@K01MJ_.&JS]'80XO1TMkL^2fL7_pVK"m*Lg=\-GCZ.de_!j%Q(G?1E;6eU.rMmd;ZP);.Q+G<.$J$-c?Fa6/q"\uo`9:6(qQQZ
%G]M/k,3ei[D?-J+S0ohT[!KGI=*-So$!srtBghI2\7Vj2V,N4[a,%n5P0Hg*OpX>95-RZb_e2#3:ns%P6#A7E)[n+f8;D9,X=J,+
%gq_MEl[fijL[NSO"M3P\YoFK&__!ZjK5JD4[8H78gl<7I(=HP7NP0/O-=11a\k.`bnKuH``dIJZCokc%,g]`qm>g`HD2']t(eS1;
%-`ufl1!>4eI3oX>OeAtE`HXDKaY)k+Yc8KA6t9:_Zo=5ka*/9A'q9hm@\#O(P31>Eeba_cMseW[]+9[iOTjHn-mBj1"ZW-A$PqlU
%"d6D&"3cQ%f/1F2UAM^l]kqg1a-@tK>nQoDrP]B>KF(Xjj]eiN$'ahJ?!>Z$fs>^8Ca^D;'JTXi%L>\Xr;%ee\Mpj$\sk*EJ@Z]$
%n;L(J<``:5A_t)'k@ggVkFt!U/1/D0+Xi7Dh&Q`D&/:r![%r*VcM+d@JO.N1jOa]l77>ik]G7I>`;Bp>jUSnqXl+Ii0C]=+g6StL
%&6MU+3Rs88Jcr=p#ZtV9Ps*Nlad3Jb)5\`(\7%T5*uBZTlk%%@6a,?(q'B)r=F<M9Q$,/P65$q*j[1s.D#u5HFq2BM&HKbRZ4I.*
%i)0heckt6NHC2Kh<B=-g.7%DC8PM8$[T#fXe03*Tpf%n6ds3)G*FLt%$-ogQ("(O`;J?jB"^<7'lr[uW0[Y0f7nQV&J,rP:Jo-oF
%K`9C-AXB1Dk%29\Nr7E-=D/o#jm1_/[b'8<?KeHC$%^VF5Tf)i]oKXY/q?7I\FV6>4bMUIFU&A__+Kel7pln+L<_i=.bNA:Cqscd
%;S84b8tsJ47i9N;*7L3MSg-H*%U2>?N.e=$AopfFB*OMB%"O/-mpHSb[:#)4#Nn+j$_1:EPq#X@-ji%]Ipl`gK\i_EHN>3k%!Rh[
%I5R]Kcdmkf4X,i;Vd2nM(cO%!"Bg)7^iDd>*s+q*+CU<cM;'!;E^f_b?_XhVn[k#J";uQu87l'].k/5RULRb2)%h"A&V/4eGW"uH
%$cM_?Cg]"HFr*6%6RSig+GFmd`B_VkF]ui3'qZu-0g"eh%M]ZZ)GJXo&9gNi+<e2%=S$[Ide=,(=ba35>5A;bOKfk2rNMj_;hW66
%$?'ZaTA$F/<&;.C>I`[:1$)I3Q0IbGXB&.qC\C05A<JNt,WJRE"CdksFtCa&]Edt<P#V`??+r.D!XZ,OI]4"4UY^5D.6*dKf2rr_
%<LBEZL8HM(6_9RO;10r_MnIS22`<_3NX(mm,0>ic&&eqG<o"8N.h(#CBn_J,FI1ifM;mLXLo#tF;Y^shGk1VIl>i$nR_6loYo"cd
%D6.\'hIt:>_^U86&4QlM1TP.O_g2oi"`SB:^/:$7kX5hW#4A4keDn>f^,.?dpa(md@NiYcp8BcYTGWi\^[e4"[u.jP-3^AiZVBmc
%CeU`1#JMe4f-@2R.S.2\0Yon]E_'+`5`"(-83Dlj*_TM/37CuJR^H:J.p+?9=HR5?8g0G)"o465LRh0W>J=>[!3@H=XiX*OISn4$
%SJ(9A&L5cDqGtU2)QE"cBh)kiKA/]h59Z_<7-'*QmeAUO4Y:=f:Wm@5&0S7-o%P>XakANuYUQ/=:a^^5O+6Pbe"_+',h)2/,Ra3s
%&R1dZfl.Qh-+FSeCbCdK.^\6OSKQ=`7i[g1)kr$h[<XH4OZJTt;op81S7CaqBj9[gF.t4L7+,K-?tBrQSN+K?fb79*5TpYg1'VDC
%+rRcKA.>7JfalGm:o,`OPO,[o(-kMPX@=.JiD?h5<>K218ieqhY=8h>#mdi02SK,>[T'*lo0ba#K"k!"#m]Jsbap#P2M?4nau91)
%e>GBK.9aQdk'?<Fp-0^d^^,JY9dAmkTrWi-AC35d&70$+K`aJpKNdVS3Eu%eNln5U:hVW4b\oR/$ILZN*jK5]JML11ij+jf@\EDs
%9*hG^%4q<A-";^*ig@(/8dQ@ciuG'L=U:A$PM39L3!^jBO%96a`ZSg:U0@Ujn3\raR1sQBg7,6.61o#4''DQQdKD]Gc4jFJ*_;'W
%VMGgrEPOsYnkUUad;s#TM6fKSK5#G*5G`j8,8<lC_Y-B?kD6f`KQW,?CMHh[;KCP!`Z$M(XqM*D[aaf/jambDeT$sC++^uf3XJJ-
%@3tNHd:A=K@;T6,E7C[A_RW"->EgHY,\Of&(g.@TM`m/:!jTdLh?bn;JN.qZ4rL,8:'b),np%Y^EM%oO[D";%.%(-OZnWS`(6T!4
%?I:%JI7bdg>g="K1EuDq;ACI^=<YISL?4q'NA2'X4]/HrS,a2]1f2_2S[@G\Y`^?4W$hL,*Q.e@#TDZ1)$X$ef>mptboB;[2jNnK
%[H.D[@XaAS]ZFsG/4i:pH9C,onAfn935H,g>^C'P%D41a2G&:h*Cs3=,<-Y?E?Kg,(1Ytr<4>LKfqq.[1(ecQ,-u\aIYl8Q#&7'o
%\:^YmiMpm/i&)?rmj1H71abM)K94.Ic_(DdcLMlh,JF+Kh,bRDNtdU_`=8>=q8P*`"E4@6"\98Op`!NiF^P`*hhm-23nW0_$o.?f
%dP$a7JgY//@VN.N\W95^*Q3lsON*lXA'tQ)[UdAoAVqNtkCKU@0=_hD0IdB/]nC[lV^Uptnq6*0lAIfHW?bYUVQC][XY@H(Z#=I:
%APVH<U2Y-u3l"T#6YZXb#A0Z,b[ZUgC7:?*`i5/G-$O!BK-Cl>Ye[&tR4_[JR9Pl>:WGNMm53\>a&9A<iCP@Vd/]!ffeCa@&g`P-
%`9-END9l0`FkHB&%)?SBI7(Q,F[ds2K0nFI$Ycb29\LW!'pA9q9!=LSC2(I.F%1:N*-kI$dFG>eJUJ[NAO)fg>_.nM,t[=4fb"@F
%6`>-h+[]Se_=(j0=Z<F8JK%/pGC3Im>rnVe5Ul<&Yk/ouI%;'gQi;Ut_H$K3Uu@,8@(s7GB/NFY-e-:Z!;WKKhDmLfT\-=rV?DjC
%QCSkPR+H;&a`:'Uk(4GjL[ot/Pe6u#*-(b@,X>K*T>f5gT6SPJCWpf$PHU*RG![RY#@nU`:W-60_Zf0h$::r>P'<dBR,^OI7osb)
%SX,s+asT`>M4,e_4T%QIjKYb^'>hC#((jmW4raY):-0E:d">pHVRRUM*K8JMlVCaL3Ca;Wg#O81]GZ$LV!+us:^1loKGp3>;ZT/d
%l]e'cGe:,P"kuW9$V!DD=\)(+??9NeH^s1GW%%:&rIe\')Osd*JNZ(kX@1;>(^C?`*m5rD4bA@`&2$J6]']QF*h=!icsK4$64sm=
%PA4PS&49K5r;)5?BA8W+R8(_9-HTG=Ct^!;hFNC>McFe$_EL?k5bsfbAI_HZX(60][6-g9f$0k6TXrp=O>TT2d#?"R#]80chT`mO
%`)s.+DihOQ(5Kl0JnC,k35?[DR^+/L(T3+X/Z66\)Jt@p$ta>qJl"/4M1!.V&RW-@&77hm#?'+l,.'nF?V)<ed^K8Y8&$e0Kb>>!
%hu^")HZ<fJ?%NuOcJm<k7UeaS6J;dmb?/=b[8)f-*lm7AUqk@SD'\I>+=&:KX07CH"GELRdM3mJ$tSImL8ENb;>Ht1iB_Zk>T_\l
%TN-O6Nm8Z<ojWZ#qWZEr(DWj#pg3a-`(*(SNqnCSO=fWP=aXCP#mh:gDNUMV!(gEqFsYd/#nn9EP,M$BM#)?EdW6[IO&BHp"3L^X
%kiX_rC_0.cN[R\BX[F7]b"nn0C_,#V3&a[1L9V+CD2L[c-REHZ!MUHlCp0s/12D19Wh8@j/>YeW!+Um[8E*0Q$l$a7PRo]=8Z=rA
%UfXART$7M-Jm;f6n@6lPO'$*c4Fbj"0r1+e8;LU?M/Ld6q#i]6A:kHQcc@V@e=AomjB2nL:!,\e=<9N9=^lnK#hKZoM5;8,SaoIn
%0WLZJ?/p0DQ=!8(47X5#R8P8`2L&B9[rda19`<Ab8hc&-LZf*`'dR&4Sn7#B-?I9E;oK#n*:"T=pP]0*R9U@Z?rlsK\mag:d,D0/
%%ai6-R4#X3*[//KCN8o0b;1[i!:L&OJPW,%`u1agKat:/'e2o+<V%o:1PSnWZ6:(=_(jLhni.m'4X'i8C+6H,eL,",';\oh;'ga9
%3NN\T1F.B@C94V[6:a_cf(e<n/!!;*QEk1^RV*uY,6#CNMUc/Mem'Y/iTb0GG&!lGaTi#U:"Mp0J44gu*UN$`>,g8._+_?R/n!D_
%.$6o*QW5!o9qU"P(kO58%%.V2"PLl?bo0P,]m_Ref<Eg-@1so.(b0'8Lu>]O#/8L@J1P@C1a-JVfFY)1o7qsOYUD(*KNX-U)C[P:
%Uuj6_LU\L1`Xq$\@=r6`BsaOfF[H*Z5rttnG"OIR-#b3)6?_DL9:L\$d0hFe9E7C>;?s0qb9#:=>W0eRP[6f),$e6R"X.%BBM&Q4
%6snWelB,EW?5[Y3_n^M[><t&"7ua0#\4WLHA$Sl3'"pHNkmQ7&-e4*@dfuL^>fX]75T:h\lrbmm8V)o&V.-#2`(nHFR4>uT8GOZr
%578GjQF_Gbf1:8%85L/U-379-:ITlj7"GO56/gQqX$SR1O'j[U'S,K8qRH\2,g1kC7)pF4;FBeV)@WleCHs-;DA6%97LFp-`p9D:
%<ChZs2Ah9n=9S!qBXOG_5U3/&m!h,t0!s'2iirQq/W:9XrR3MW0mj7?#!GHB"gM^nm-0YPZ*#INe/u,&HOMc_k%k>H#O*laTP[u?
%&jdeX./cd'IA!q96c0u\o,\-*0t#"#7%D<'H)7;9fs."e`Zj.2]GQhF"!WcFdh4jb@>JeV3Y6O;jIYVY!_a,fcI6P<dV>t<nj7(b
%QPB?AOB?41-0aSL,]HsAjLrs3TZ/6)L0tctii=i(11K_e+M08tl)"<H>7Pf:r:[K>lNT_2.OOC++LVW;8MU$<m6pQe#aYp@8^En9
%HV<KA\HdWe^p%i"I5ET)!mY?0+fuUb,<],27dX:qlFDPWqR&)'IAHU%WV;>=o]Z/DaF$Z.+gusamjX(SE$!XGMQA4d>BDp4$5ZfB
%/Drt3BS/8tiQZ_DG37,mG/H`qR!tW3@]1FY_R.3Z#G=IiIb_SfW0RQ9Lc'FCRNMsM*O?O"Ag:MAbRXFdZAtLjbc"d/NcBXC!;1Lu
%hT;#s]]+\Smnsdc9[_*4GnSTV_#3WF8"uT:<KqGU7NTCC&<b<uJR/Vao"6Y,Y.sV'Iu*R7-D]'Y!K$;m"0U?<VsN07Lkm)8?;\WY
%LI&*pHcen7$_Q")_X,*dZ*0t_;3Ha2OQD1^gH#n7Y`EnrbFrmu'!f04YKO@gHn=86UG5mo>$AlsQ!%bg0B$QO",W7G`#<C7!!%RZ
%"LnH1-lhn:N(LqjT<'>l=Z2)#NZaWYZXo1Gk*/[kNSrk*KHsu'U@9Tf]akDmG3#Q7(#fl<e8>DO1Es=X&uuk?A0lr*Vt`.q8WjHq
%IZYke;p\i+7RP%!8m>sqoV]JT9gZoglrRSoiqc\)Iq@'UfGk&'N864Sh,IpXo$UMB5h(Hs+-HY*1t#<U6_sU7`dU85.pID0g'[$H
%_R'HV9T!X]emT2,J?t+Uf?*_!eiTDE:CX?ALc=W=,q^rEmNmZkN,<oe3mUFo-+`#t',X[LpdZX3pWC;h#]go\nt%ChQ0/H_+e:lo
%ds.W-9gC`i;+TL!'KWG+@Xk&!&hm-a,J#(X'Zq$7e<G,UK$Ao/f!5IIhc6(L+X%[7EIT#)]TQ6Va\ld>NX1^4?FHBKX=l[X-E(ZN
%_mj`J3[[<6-Bp(7>R@C2keZ<qJ/<bt!oBlT=:.p+XY$6(nGU_396`17Z;IA"-!N`-]P.RK.52/1\jN#0(:'&![8u3>a<QbQ+2QM>
%$.<f?5p-tgd3'"1NqDkEOZIG:ZR9&]J;ahN&Zd/s=QN^R>!.n<b6mu9%gW5,SQd-9,%>=loP?k2`d\,F#i@p-^K@0YK%MoG?#rTq
%0*H_(.OGI,40.m'd9_R#(4qg+mhZ:=!Ji1<A#gVRpaI\7"TZnK3"R`J#s>IX7nW8D93aRr^PP4E$uJ7k.^hOhW2Ri_TdG3o*,&O7
%KYB^9<cMc7;%A2j85sTP#WHeJVuRu1*j.f:5%&?!MCq1L8LRjWgjD9fkdeXT7:-EKLq5l-TS>e"'9_Oo"VETcW4]u<.=u895F3$S
%*f*tZcOW_M\KESXK$)LIecNaEVra7e\Ho\\U*.N5)2$Cp[#h(ik!N#.eoT[OD%*2l#[\/6#;e_;G_Imn3)nrVX@V'm$Fh:Ult$0o
%F&sLZnlMko^I_K>9=t">3We5I50,g#91U-,7nJn>)e/Ce$3@^R!Bo?dYf50bgJ".r<b&KF,m+jF+>?92ECi).R/)V5=>7cpVi?I\
%9<nf!o9PCU^g[uK"B]t`L-YuJ[8@@qYbb8F>TlC!\)7Z$c4D<\=[?N&?*>uATSCpN,T(bW!A,@7<cI^LnH17J/Wq8B4rk$F/\:?^
%TOS5;NrlYeb-tB83KJb8.uI';Cm%\g)lGfH?;^Gr.7JeX,Cff]"3Ai_PQ66QSodL[2e*#-?!\%=8!)F<.Lk?'Jc[_d$8k:,n0Big
%(kJeHI>"L/FK6@ST`So>oh6#FBr\Yd#Ol&+E"MZ>?5q]=`Fa^%^u\3_1`dQ$c;.(bObt.eK;<L=\gY0,==46+6<P:8"(=jP02^.t
%c#'heP)3IrVXULc-4)E2T?Dr,!G6lppSUIE%\X7Cg#$3=$32t.ShSI?(h3Z[UR8Ruf](S8:.u@F`:J^^*]leLkZJM>:+XpfbkBHb
%6tne3!'tD.7\,eD6d0'Gm8GO&VQA@#*QsfX!GK)CjbWl[qC_,%ZB&s?(T]PrS]UZ?(7Z&C%IkucDuhNJLM^R]6BST=hN_AuGEUHC
%UZK-V\P.u6-=a"gNF7$&0!Qnki$?p1-,JF@80V5@"Z_VtOKG=7!!a?>s&10*.Lb?,%kKGF5SjLFn=O9LV;TFAp!+,++U/G%3cqa]
%6AS7t;<0+)qkSb1"_K\#:4hDnqLSMXaAkpKO,.J?ZjTe6ZaCX)'GQ0<:_*W7W]dI^*C*$CJu"9G2/u9V,r5.kBJF;`qpWLBKa@Ot
%n/Ef"@%`c0O+W59:P2*_ZFE16$CD=o-sG34Foo>1@s;s\kk6,a(Tg#ooXl&ognbLL@`#IF40^"I0dMEbfA^:486^s$[L-S5Z,*19
%g;#.'CDV"=enL1$,SjYT!hNCWqOPDF_B2ggYp`IiEU7Z.Yn/c!9l48,6V'-d^'GsY`&)U&C`AEkBg!5N><(cYqss4ZQ:DL8%-Y=,
%atf8s+J9TW.0L6=h?%L+8'nA-o!CNJ;dF".YkGX`#S0?#5'ZmdM=ppp4ZK@nK;Uq6ChS>+;_>9A5f*rRa$=JK,S-@<C^E@27^S?T
%'W>Zb\7f!\3^uR4qEXM!:A:\A%ppJ(8PYlb^;d3orj,?,BlOhGd,d]<cnZh@h[9kX"H.p'p\!:VMkSL]CVpmI(0Cl4NCRD\+_5Je
%ZTo*C&Zq2hk4T7?'/Ai`(#'[n<3%E<[PimX+u,47*$uBQ.(iN2=%T6K[:XZOOZYX17;/6#iptU;>I;Y*3*,Q]&MiiBs2]#B!&B]"
%V+SUtVHLj.5Us'+<c/,N%XF7=.@7]_o@bAH=+.dC"<(JKcq9FcEFkfZ(W!npB+(_q"`7E#'9gj3Lea0QrDjt5V@""HUU2)g,k<(1
%;om[sJudIT6OO3(%8()CR(tGp@;7V_o5h0(=?'q-G7u;h(DTi,Lb=e9[Ubg1R6fZ2=DC6'@Cd+r,5iW'PFZMrl+sYsLf(2JU7!%H
%'gX#MHkMaSKg^MhA8.,TTiq[d-':qnn'XZkpMO2(dXu=0Fp-kaH9WI^8CB:P.Q7^:Ej+S4Z#hE+j>%XU,\*JWBflG?G?UA(`(ZnU
%F^>t<e80`ELl*-f(</bhcgI1-,dd3ijj9.4QY6ObOdFJBM99K<N,rs`$1Lfg&+ZiGpnJ7NOVM>&FOF.*%'X<*:ErT+(!r<q52%5)
%AT_?nKN<aS+%0FHLB2>M8]aVDD6^bVAdf+j\=at,5gG\MP,c=%F4C`hGU19<LEUD[%Ehu=4NN@&Et2seeekIcN.AX!Jj9JA<b6#'
%Jl?X[A]E+[``A#1HonAWC@&rL7l_US?IB<C_*m'MrrFY-pi:3L$X.DcZ?4^0?6VU&p^K9r^Q9^3=Kf@TXP$q.%WI:SArRI2&"ab!
%98\WQL/]]=N^;%-FJtWiim]^LO&@KoF@(Re/F2[b\g&-KiD8EDH3>CYFnSjtW<cRdiacXrV+2=%hlW4T*?N"X8=M/^"q>oDSA^@0
%+U7>5r%sWVJ6#JN"`@-Q"jJu:Gfc&hKjSoW/-9\A$#QK<Si+,n,/l?A.L*I3I,2O(PIX<3cD)NGhBIg)g>)eH%2,Z)%U,^/5K12@
%;NB)9S!7kM;W>e>"'M)FiL^)+$>(0B,Q_bID2%!6$$-c3YbkUYAD)hACWC`9BeN;]@Q"roVb0iD@orTSQ5o3c<%1\i#o.(2<^CG/
%Tkc0*&r'577Nbk[XWIlWaNl)j1edoR@Jc3*nEPKgX-4P>&sHM`qN3CT<jkT7:X?GocB1js((6uRU46R'Td9a8Fr&rA";F4W7)a!#
%R^W?1h/ril2e=QGn[Jb!",+4,U/C))NbBrqou(6U>JXkqC&gP`.g@l2b(M\TTJ[laG6@*?.B2P^1fk$V6kQ3>N&CMqcf#>;/BeZX
%g("/QnDOOJhalW@+WC`O$cS(_5:,Z[5qT]i[J?P^au%fuVBBI>AjCGAV@K5UQp[*q3Vah*%^n+#-5&oK!.o5Ea@M_(<68jF''q7`
%4$gE@KOOKcj3q^\&_Ya%Mb,NHTFZSNM#g(LgaK(5:Pjl*)&-pgeghB)kX!4N7?pUfV$:NHMGC`l7C:;&"`[Dlb(q:'L'm1hE.Hu;
%%RkZ//b3J*&S.n-b^i21SY.Yr+fkuZEBrQH=VlfZ(J<!tMJ_q^,lX$t'P:%3*Jfn7Yk/f82--eST2gg[[4,8/OJH8$&p>nVH">h7
%kQ-DMN$&-tq'ihi3["qW;]`2:&@Z%R$F)):eOD@2E*A*i7gUfDhBHi2q5IA365^V*24P6:&VgOEPc%[9#c;0+Pb]qr%k@W$ns!Id
%bWM7EWsP'%"bD2RQLh/p,"8S!##/?#`ZlD<*#6gj.m^QDN1J@68>buTY6+)VD2sPdq`XQcnku`H*0dZdTIc5i@J57MJ$=oq>j@To
%$KiD2DIA,U7V^*Qb(PFNP4`%,$ZreAh_c$b6.1gjS,@_;/@^lT3MC='MMbYQI<6*`U0-6qATgps4ER!8Z??.L68.\*,+Xh&]P3oj
%,TTf%"N,%%NgVAA&5s#dq)&>jPfVP/$V_Rkr7.s/as`&?/c+"bnj%=(,`LB=1m"Ne:dh^EQCNTg+9fOtBl=OpYrYa-4\5QJfJ%l8
%d$;]t#EuBi>?%pQ6c0BQ]H#UEZ&47"&O:93A4F[),ts_9J$pW<CmjaX/-uTSg)sq'K9o$dS>i,M)4(qL&_pR.`-eQ&-Or?jq&)C1
%XC/E62Zh:Le.p..>)fel:VVX.*'LL`V+[2;rK7Z\C:T$"aVpD$ibA2s,^s=O-#ueth.rf;5QW&bE1$?>KD#Fa8ZE6p3JQ3Y-mMVn
%TbmdWe?t+JD#oamDTrh3j="=q1r-/$E[tX]Q-*5B1pG039$ekO5oRZQ]2#\+4A1XOAgJ^Ygc:3T]CK)1I8DEpp]ML1Xe^+$/_W%C
%n82I$rY-H2<!Dq4OL/P&..8l2kl"<A^,G,]bhsTOL8n)Rem9(!VhGIJ[/rEj;!(MX'NXE',W!+ua'?<][C_"rKe*jG)ebY8pPYXf
%9#ZYl2S5,f\YZ]7b[0?ZS4$1XW,6cX$)L^Z^*dV1%mhlN#pVV(92s"Wk.i2DND2"rW)dq<jLb2t>Y*upBLK]!7"#fcKh+*rduBB,
%ULbUVp5&\@%=X0eE?Zb,:/H`TRfV$*9^)@Bbsl%Cd]sV.#fgejh4tgQJGh#UM,k%/)K2C7#oj_@70c9_\UjM_@iGbVZ66)j[_0W%
%\Z.ljO!1<a!an\951n5(%>"dHLnP/cSIBu29U8_H7])`X<[`JD2%`#He,(R>F$W^"0iHdokZq@.NL$mM>[0C;IcNpEdOAY=M7gGm
%WCFPX`_,Je?O"uF4p!M0'$D0,5$<`1@d=0==SQ)t!S)ZS'.#U>0d@U<s%VV)C$FPF+ge)f<dG^].QEa#Lf#rUh$HbGdb6%\&e(QJ
%?T'"KErrJB87)oZNRW<r'pqn!5]jh-:$r`X%$Z4bp&].A>q1NKp#Mm-![XkO!;(Cj&m6TT3tjWuobiGp(R"h^2Cq-[oeNSjTK#g?
%`1ebj3(q-`#1BZ3BQ%$hK[IVi9?LteqB$\Cm)<P995;42e?1LWO`V6(AS"AIjCV[Hp^<o<%U$.WSrP?Pes\MF5f+qD@:buD^0h'q
%):a9!>[c(EU&h&*(+af1"=%!8)1,t)<i?rd\7+[/-$"gll:E3Xm*pl22jcq``K$s8+`,ZhYkFk"%Aa10>?4fdJU#ae%qs'k5!QC<
%8DFhjKATgl40=ta<lYhPJN.F.cS3%o*()$_,]ntrk/3<1"Z,B-WkLAtVJE7e1bp>3pWmKIUeUp-J8lJXr6d.1Hs5Z&F>L4??n7p=
%=D!0[LR]N"[a6L$iU5*K`#,#rIY=!j,=YR#Kp%FtU.eTlWA$_43?Q.)1PaW/Kk-1W@]Ft+X938ViY9UlVNj&Q&pY+/QF(O9_j_BS
%)/8G.<^UF\-2K\:^nFd#4jpLNqI[o^ohS`/eOWT(/8ckE+Q4cbemRm,?OJ@="uh)"JA4J31pfS[LX#01hq#lJ=7lR>'b$]Kb)f#g
%&j;3n_(]GcJu4E$Mjm6k5DTUo`-+j'?a%,@m+,^u#.7aNcm#c^_.`1f+<G&6CKiCWDn<B)X/+iX!0-Je^!LOg/YG"n1c)?F4:GWD
%Lii)H8[U'U=d0s>qGN8[O?5?k%s4EdOMlc@g/t8q:a2*c-ru!?-DuH\_@'E_FBY!H.6.Q9Q3>7#[96AP)4gDm=<qk[$.+T,=tH)G
%:8(<,RK*jM<%A+d-H=/3';H>+L?q"_9<#?(g7gV`k%P@*@)$mupIaf.5jK4Rahnm4]Q>9r0Y$Ec`+-u&/*qU.`$8\VP.f;pr]7]u
%^hg:a3=2Rl@/)WTehnufD[H_Y)M[oUB.)(c6rQt.7YFOB-Ro6p'^Qec(t"t%AQ&bF,[oi?EK*sW\27JG0'JO'L`0)4ZFQkfa4BKB
%)duA,&YKE*P#A9V#`<!.@";)WFCZO-:M)+_IVQ?k7uk(\UG<*MAUUKD5ZDF`aOT?R?][]1&#o'hJgj%q:/GE(-(U`OQK_R%>9RC:
%r\S<p]4(6>1o*,eJ$INU<![qUK@h]f($q1e>/7I3,Kj/iB`aW:`Ce`]63tM-)QC:1_*EfP.d>GR`p;eCVCjmnb[E\jnNklF^`*PS
%pfCuZ+9br:*>*:-SX47[]F.75FGJYA7b`-^<8eMh6@[Z<lPZD4JhUJl3.dDa[DrT)3@Q0G9#8P^j84G*/MIJ2\.GZ1=p!DkN$(k(
%ig*O=Z"$^u9J^JlVa`&5Q4^&%!Y]jiN\&RkfG$A@"C%AD69nd#1>4EL%7!Cu<Wn`F7"tL@4qd=E9Pn"=*9"?\,Xjs"`C_7EV,6bs
%+Wq2bdIOBI<f.LaT)]L19?+3_=jW)8Ul%6!mLt$i!%tM0NY7L?\&/!]?])c-,J;<m&L:;@=.jbsD5J`.!&[<r:E;J[4/q!NU];ek
%bMm!J41CHqN^eu&g>ZX,TT6AZ63iTc',=Gu--]"p$F&8m-&1.0%9jsZL/^&p+"<N[p88H7Si["C\'ik@5b@\0;64!13AW"CQ2qU)
%+EbS_@)ASRN311BTq[:']MB.omY#I@fS\S3g+<cl$7QW.9IP<[pn?r/MH0,!%.giNU92o[&^-JX-R$lO-e]sO)NLe>dTDl/Y2JCm
%i/H$&_##I)XKYf2Br34T'cb783WnCgPqj@WTTBJH(VO#%;(MA53$`HI397bWo11b`Y,B.<]dg?<is%#ZUBjYK?UZZ5KX&bUE><^[
%fOmU*Mi9edOcpAKm<os[@O/ctV?(G-!TUPS@5@eAWBm9jnKBBi4&IWCmLt163S,@a;Hq^eE@;fU%:!R\nG5uMIoc$I2fDm0e0(iE
%d#sAd[ff&`UJ='?!A:=Z`+=pZPshQPln48TU#Oe1EAe0K`2d?W8e!4Ia@Q#ffbXi0?j;9Efh8&i(1X9L+OhQUlW=<QPB$]!d/>7^
%gE`Vii9;m91ifmmMBt$<YY-*SJ^kNfKSl0CrQrclf:T?uM/BalaiE&TKPZQt/c9[<#3"&Cs.pMAIPk_2X^ZoR%Bko$9TRt'&!7%T
%#b8-u+`c]K>)@(J7'pV16`J+5VF<-PE*dL[,r?arBn6;*31]Ucq5-4"X]3d^(p[+L`2'J*:8l2GORq*qD#-XoE@>nThFTJhYnBf:
%.cAKp2;>*%g8-(Y<*&nC>H_#d/bTY&fVqi3iH3<lKg;Gt`_03Ha_BXKC"-T;T"VI*_DV\N>9Pec^cV0Jc@"U-.:tBZK`NSk0gjBj
%V59OFUj0`hDj)FVI_[1@fpU:qmhXZe.=o`:$!I_pN=%oanpJ/*1p]6pCGLs-&_[<1cm&G*a8g+D3[LlCd9N;9H6P<dZjR1o-<qQ>
%5-cJCLIOktgjPD^AEM(sl_&OG-S9`S:5M>QT,)<=XBVU4ASbm,r(ImnQSRkY<bi>T)6)LZL=:JEBa]_rC.uF@1UpQ!"&WW&9Fk)O
%#49bNqCgbY[5%>;Hh>?.*='nlnhU#=Dp.CRA\Y\-S_5IV!,7\`;e)Nf#n:[\@E/G8"BEc-?]Z+b@\e@MDpq*W,:aMg`3`W?=t:]%
%,Z3_f$!L"qjCmXb-DZ#>=@t%d<"QRG6=I<hL)qO()XY@n=4cXb,/n^jh')Y',lJe(FL0FA1]li0A'iX4;/R=Gk;!;I75GdK-V(Q]
%NAs4$e4Y7fctU:m.Hn-Ecb'<.48i$Gdg<FgpAYHcL"41N\BI>W:*lW(0aYtD!"h*BQ^!:LH7c(g`R5N<H_$p$S0('+ZhU*)&'tU'
%nY%.23u!iWD*uO(TQNuI-\*R3/$g-8;\\UA?%jNY4(3Bo%+F1pkDBWA"H0q#,^k:o=t>(6NA?3rO;a6E3)W*kE@pli'7[U!mB?UX
%E1]3`;KJ0<6j"(L/QNe:U]N7"//No58KOOn[*df"L_>/7*Sa39$nJ<e0i>h4U_]MEb9Fj!gg,P%?3&Prjg/gX$L&g/7[`1#oSpNj
%N2[GdV5k[GF[8LTQl<8'4,IDJiJ4OYWkGMk8-fok`m.-36P(D_I'QWcp*uKAqI:&:(<nY>q@-#$nb,P2^4;Om-,YTSbF/qN3GXTb
%)<&6[,Ve=XGUO6s7Uf%&OJPErBbdtY.h1u9>;Vn6L=Jb`jE20X;a[PRn0[En[*kpHhYX16U/4>ECS[TY_B_]_@5hk"GuW1WmtqU0
%R&[^_Zq-H&a+Qf=6L@#_U2XmJU2e2E*Jq/)2RFUC,s^`Tfprs4J2Um0cQKAbJ43#^Yf0iuNaG>QYbT\4+4lk\6%QtU;lBCfbSY]/
%4=&*JdOlr:i<URW!#NS1R+j$8jBdEE'hI"i"B%iB<S2[MqB1s%>\Y4R**#%@@(7q+JM.F"ihn)G/e!'e*+5Gm9!u':QWbUHigA(W
%oek2g&(q4K#T:`%h8Z1D+.iZA0o<):YL//?,7VYQD5X(_M%M,)Cmp@YJXBhL4#J1)i3MEf9a%Wc`%")iLJBfp9*lm\$!C+tQ<C`[
%V4(?@.%P0)#TB$d_*BZ;rM?@:$-'I,bGk!A1^#:g$m,pLKc<U`PCUHj+BTg\Z9*(HZDA'b_<.Lh-U_ZK(nb=h'.GDE!J]PMcnJM,
%)c:%6qFVkO5q)Fsi/Z3!Q5gN7]iNdL%$*G##W</ZQr<c!1e7V'OGDi2XBQ>a;iE7`oYsZ9"BfIVE2:!1^rD7Q$^2oPh^%Q&`o(#9
%g0$`.@Jpp9)qU:I+ot>uk@ca4L.lhB-+#uMbKA.#<]/\Fr?YLOI^OK16\o39Ab/Op08=:.+UfnPeqp]('*6W1apb)EA[Nj#*ei<:
%7uN*j9jKdTOFNBjW[Q\.66TE%BFA,diO8q*^26Td1oF4XLG1qS"(58pX327c8u/%^,@n%N^4gs9qX\*]?lt#BZCM!.J]&>anh"q0
%aAYMNq&3cT)M?S^9Uld/:I,[^16tAX83i@U[oJZKRe[[Zh\MT7:/]#mr!'9dYp5>]p"uPK)Q'!$Q@t%!n<3X0NQZi?7[(bTMtRh`
%7o\Uh<Kf0T=KY@C`A^a/N.lAM=INgGSWZl/MC-[@J[Gc"#"!=@;4'J[Y3tpOb0_n_&u.sEP^+,o.7XZ20`Z5ZcZtH9MLJc'Wj&\$
%^mkh\R)2hVYX_!1gYsDrr0l+lGHYZEXEI&UQAuLOWbD8J;@75p-2X/F/(@+d;QC)+6-5`ob8DP#`isu$f@'?R:-en3.q]Mt0t\@S
%<0*rr&0jLtm995@V*Z\',Mu,8')c@R0[osM`KtUo-M=b*;@#=OpiD$a4W`qf:[>X09m=A,*MK.o"l\]`c$2bj;LaWrnsE*PP&90c
%6[[4LSg0<[M)J$UnrVaBC,dtup8De5Pp"DGKSD%%6[h/IbRlqFnDg4:`nT.pj2"9o9!csPj5JK^NUKI-&lD?V#ru="1t_M"A1:>o
%<N5L>nQ>.6)3:>^jR"MBGYLtjf1`^D,aR*V<-\1\#kZ3&$I@.B1D;+JqC71)O2mIX0G,*&WFiG7NHjqHFQip))Eag0;+j,c_4s.6
%]:K-97[34Tc[j+idZMaoaFOTZWs(@RTtnj#%&5dl#/$Vr7?mk60Y_R($ND-[63)LrkjP11kj]A\]>0<Zd$*@\X.@IK6gd$M#5=DZ
%NbmKY<@c:;$p$@(@D66e9GsIid3Dg#N6B(b8*E?"@D0i?a^e'+]ecmN))NH*hAPC*aL,/qmgREK6doCemgT&JSa.W8GGu>Hhb&5#
%m7>+[&aN`.;SH%#muirb`l`R^ILhSP%2nUIee6quQ10gt9^lqamg`Y:qW5_=GAo"Xi`On%huZ>$Z5'Z,&rZ"6HUol7Z,+=->^)i<
%6l`^7h-jNODK*O9f:e<<BuWJ]B1ukr*tmBIU`g=r01:!g)/PcH9R#/5=0.DodiE<Ccl,cKmeAe=/l7u(#*L.YSVV.LRI9ijjQS9*
%G/bdVkoNdZ)1[*d$DP:sg]prPL$Pn.N6(ET9FuGW]ApTOg/Zho$ugg_>7]ET+;G7C6?d'M8[d4CFE`g;"iQ5b/ftm-.U)*)$pj;k
%4/'9===An2h44T15oW/:GA#!>:[5J6hjm(2'C#D:G6a?Yp2X-H4.msp*,&#i#J_]W.^q`g#FHn_a"2U^L-/Z#i>_@D!G4sFplt3,
%!e*CG]>G.^MEPR`"$dNN;_-[p!B:ebT-Lp/_\QVUek1.!86UNdD5"QtE+r,K3i9MFjG,S+Vn4_gJtpcM6'@K4Y%P@6)`D]s$el\!
%]uWr.A@jX.*e]D"Cj/9k,Df]7]46m-\2M?CG=]'7'"*nY)6s[7F&V>kOE)Y[rJ9kOQuDO=PjXPCFO>l8mZ,Y6kdMS]h&-jO"(&Rc
%h3jR2HY,TgB38NpR\&rm[+`Grl0][6&fqn<h-#n+-/[2-1$<B/K^B9*7BK4V(F,p*])0Wn7jpdrG`CADLe'h3$"^^n[N^n]L$_V\
%ekG;q7*L1mdbXTj.Wfn*cqql=C=A%lB^LNAXrfqQ\!)pa"K23W<&%c->6P3QZe]V]1!7X^B:/$.Od!*,iQFWlkRlPip6ad,/))*@
%?_fnkg$UE]Z![ouf^;Rm/>;IJFpBQ.8LP=^43K<WE+?=<^d=GAfq.R@=H"eL/o5_5-J;,HmKb-gm!7=B"UI&D:_pK$_i>`Z-?OI/
%D)IV\kjBQJ?.8IgGD<4R[!.:IG<k1$JqHC67h@J.B8u-C!6H?ChhCJn,e1)*h=WuQdG4g/6MLlqh&Xkr,U6@Rm\">!X`m0W#K85f
%)hm\iHB2#\A%Fal?=]S,FE`HVU9X%KmL5dTI@AO=)2:3eb_Sf/3(_bi257^8<%>!Wh]8n1.]DjmiLD)Qjd>KHkF;O+(;;ljCl,_Q
%hjnc0<Au6?1*gB;^?<,gQXljmiO^lKZu4*@mgeWTgi&JH%S*oXpCZ;R61$k(bR35Jbat,#ObN8L^]\TKV`ioXOr:Olg$XA8+Q8P.
%fc<1q<`Bg:4#d:59*5Ie(-Cc3))L(TI9#Wjm_Ag3FH4.X#Fd>64/'4FH>>moEX.64R@`FkpqfrgUpre6**QMq_]=&08cDZpmU.TO
%"+%n(LQi,B_@+&JBu%3.B]P!+%Up4/=*cr!%/ImN]q&l[VAdk:6/9nd.eIlg.0Lf$(OA.KKZng3Dhek?*,&ciKAAh&cpDV?Rmrfc
%H?MC./Y^1aP2#eqH8"?&CMs&eOcfBUTS'F8'5l$2#HO5VKU'XhAu;d^pQDI$mN]"sllk7!a[&JZ6ssNN4"%dR2u&K-%ZcEOEQ>:3
%j>@LKWY/@ni=Hk+Pb;c/n-BBTr[$.8H2ggSY75SO+A#\/T%T,`H\SLfA[\r+,ge4_)F#WjA37tjfoE:2"("(4`03,CYoP!9TgQi<
%G-Ene*`e!I%XhkSfi3dp@(Z9$"\D'j4+][1`'en<+A`3(+g7I$PZY1GgT_XMoXo@EY\9)CmI87DZ)Z#kXAebb@+TPlZ>@`*1#&t<
%/pPu(gBg3QEoICk-<tblUIXJXar/ko>_qbUmnDM)-+5U'n&5U:SRE.g8P_b`Tr$#NLCp^1/u2cZH0sNT#U+EN[54U?BZ#MT%MkW<
%G(8m&1;k>MgBk'S@Bi/_C$fS:^r3:\Fo^(;+/5=Qg6kk#?YSm9&Jej-e(P\sBG'?^edc0/4t<ZT,^H2oVmV.FJ/(P\FtbKR85a0h
%+OLB4V6r+t5O-\,kCF0*_,+h4%'sWe:2'$&^M0-*C$d#t6=?[tG/UQ&[iX#P))/Y@!]l2f+n_#-@ob\08smr.XEN*YBZ-pPG-ELL
%?o4ag1PDgs@S^cPJ3dQWqihr-O>tMRp8,<s;=_-;C'TU2i=o<S6X88W-`hK=-lI:;Wu\;`i^X_a4%"s11Ej0D8>W,YOP1"e/Q5\;
%;EK\gEO_+a&cE-]Y*.L9d\pg+PM2Es,[O%/i:4/LYEITo.aU(f6>?a0=@0u\e.0N$kK194UiqLbn8Z<Z#H9MnVmJ7G6sMmMSKS!6
%nInAR6Nl`5H:C!/^I_/d)=9-)7Te`+N-5n61D`MB8k=VA)!ra9>b!M%_5pC4C!%<+1:X_:o$<EF%Uu<./#AeN29K8Tm0r37=`$!i
%ZnkBP"Q*/3_>Rnk?KJQS2*cj8F4qM]-^M>UB#a>!<Z1((`a(WBL)X"D_)[V"R6kV#>Usr`Q.!qhU,//CV&e?\I+f!"mBEQ1;#\J1
%Fq>$M@\L2^4p\92_3;hCW^O?S8$mFNCO0,tm3!#'o0R4_:hD%Z7_EnhCZ:6g?98RS?1;?141[pWb9-Ka__tF_Bp@3ZpEFS5Lt3%L
%coDm<.'4Li,_>^tXe"u.V`gi`K<u"\f@/GFkccGBj5IeLjG;:q9:aEE8npk@I23KW8F:ApYs,+Lg+dV;WmO.JB3<7pm"Eju./Sa(
%LkX=go.*Lm,>pT:$Var9[DPe:fWMI4+c8bkiA%ARhHK14Ph$<m"qlkF`-+Hm@/Yc2c6S+]XMf9M0nARjM="\h\Al!f@QW3gJa0HN
%gEGE$"D*;>NdMLnaVtiHYnr&3@"m5CO2uZ/:5J9S#UBLQ+grU;L"ALL[_2.01cRtCFtgEWJas/Q*Psf^MlO^=m*-p<pk[Q4Sc!TD
%/$U,3;8K$QWt=#g2U?-XX!b>CoSN,&_J=q(F7N=1@QX-O7.;afM!Z=NLim.71PA]UqG("I&ZR0I5@M!q+m`Ig1YWf0_V<EngDPV7
%_/^JLgIVs8LipjV7g]L$lOgHDTlA+9?C:*s(1\D`0\[1g4DJ_H7E7Z\d?=I60\\l[FI^Ki-Z/G`rsbC`/DDC'!Qo4K?jH=TNLB0i
%P@1b1<(mis*FH90g[X<f*d>P=7uEAS`LbbCc0egq,A'$EO1D]U4gQ.@KY7"i$5,<r,372l1#!:kM"lOTfoA%!,]>9YG!n*KgCK_>
%8Ad\Fd6_]j?6->V(N)=I7h?TV+h&Khh)a:hgL7>p53%IQNnboX5)%]c,dHa9mJ'VB%&rV"jWhR98o7'41?%R<;VOL-8:d\_G,RS@
%VU*+qa!Mu"h1j-sp_okW$aZC#MkmLg[_juTF(8Z@Pd:Vc4VhKg5*XYJY8tdKAQ+P4mF[Cfo;D*3&T4)spd/deVC?tK&[NKT>_t1=
%R-b_AY*@GDlOtdOU.<(:7o-H&i:01`-+-qVel1=["3U<TV7%V>%?%e)[2hgG=B7SZ[NfNW@?D>L+bJ"F1KMWbKH@10-ffFN6",gK
%-+=PfXZ2u_S&PVLMho#i%ip56k_5&\m>/0h;&=O?R8e!6V72(`Ch#1Gb9eG?&W>BN],`>ZB_rTh3t`,;9m/pC7og!HW)J"('(;XE
%$I^D5O6i#A]cDOc:?-LKf7rUp><qH?ejk&dPPRi7mIH253WJR2s5&5)kKE%7-OMs=hg]ooq/mb+9chfJ-Rq>Eq_:<Hn1Pl5o]9lf
%>EXIt^4,tAA\H\C?_75%d_Doqk)UTCX3X$0W*+QCbJt^<rV.VDqYW5MC4nchp"chHg],EGqTg_iA`ZsB>Q*IZf;tS,hgP7D`udI$
%Ll"Qf#d<ON?sBlhr>A%!&+?W@r;,+1?MSN+Gd+hSIL`qZZGY39d$He\T-VGX"WFsX)ScS$)UcF:?ogQIJIX;N=FKr>Q8d3X%Y>EU
%HGaYK0A.2!_bY_Zjn1!RIo7Zeeaullht.TuK5Ppkau;G:r+gKS.7GjRq1l,0]T0u^@bs^3F&n0DpI^"ON?]pIqM7k;YJtTVItJO:
%B4ZmJMm2'sfp4]ae-]q9Y0k"L%KSCSq4?'Eohh1#HasR$Tdc(1Pmpgn\Bl0:Kc=Y]=?ft?$tDd#bTIu^H&!m$GOU3#gWOSLkiR9(
%7!:L30/XB:cQ6)"qAN?tR,56;ERHkWp+e,LQN77m2nU3K:7<OT8gb6$pI<$ibOk@L]hFU/a0h72\\="7CS[<?FE'N83(][amb_,+
%I[MZmHPt_A\'\sZjlKOhVXdcn&U<nBb[bu:_qF<FUU$e]_5m?Zp\d</02GoF4^V%p%BsTFRt(;9@@GqGLmBMK%+TeA0t;`uouFlQ
%;1Cpn=8B%ZGDN$S84=?\cbJ-'lR[P]nONULQ,rp&O/rpX`[c%!Rkbq]^,8qZ]lL##Lf2V\]s,TDebq^@qnVcLe_d3Z-MMDS?uGAg
%.c5>dJ0W)(]i?=Zs*l,?<,J&>Equor[Tl:;@/.:ln-b!MD\)Ns0GF<4iQ%]!d4\6nYDV&6(s:B/[!oE$`$":Dl.&m"=rgE>f\jYo
%(X[ta4#$igmTnoP]n]ta+6,S(eKOBkR@6VEn_=*=lX.pjnuY+TkgTB@R,4HapU=dB?9LO5T>t".49"KNeL1BCF`EiLnO\2Glgl4T
%hOM9Q\Xe`Wl]^QjV_?@LSmS+H4()-^rqkeOs,ZrYRpTNpnK0u0r\3ggL6qgcEq*26q/sk,:o:lL5PeH,Rp?FGYOrccpuVGLc-$t,
%dHgLQ0JCbtIscMt@l3;a>n(Gl@/`#n*<4aK&?^KWca2)ij/]YUcgrY.?Yt/G_2)E:]Dpp^r8u7_Z&PpCeL3Z^p[:>]Gl@3oHZT)R
%cC`E"'e]@3]Jn\+STsc"qM2NrB:#N/\'Kd+lIOXe2rD`-m-WiCI/E30e!lPncfV=]iPiDIe)f,h2s3,tgJn#WBQ&.Ohp3rfNGWe1
%cICuRj)6$l%ju;@rc3G\?Z5O6ST@7rY2@dfYe=orh"B?i[hj+G\8pP%A[Ccpc+Dj.G)_"FpY1qPi18ago/larkEiZ-P,m2If-`LY
%f/#T_J*DEcZLc7V\oDhXiMp/mjP-`Ef;E82]fp`?o)*UTLh7*0kPOB*eZ7;'DpE:`D3kKR$X-lG^VHaSS@r$Q[^^@)ir(F2gqGDE
%`Kf1*=3`D#gl(K^m&40:H$0,KYrHe\^?X_%m?]Uf,GqdAEf2T[pi;9G\+k!%0:,3#`'+BDc93LmDUr2*`g`I,_"QQUbF[#Lg!=:I
%hnD3uIeCmI\gdpnh7rhM?M;q"H#rTTMmK&%[JG0'6SQ0#=6'/9ipF1<l@?#!^Ri)doB,u3np(&qp=jJVZ.tqs3HCb\nB@FZL,iH9
%q$tsO]^;uug?\%CM`59-n(8'S][spXfFDqgRqB[>o(q_FmD[3?TE"T\lLO:^cA,R&aj)Hfq;ZgJFnt1^jA+b$J$Q-Fc)?SGoCi%"
%am%KfV^E:%!kRF8G;ZN2GQ]EN4h\G:])Eed]\MpONsq[gkD`?A>BK^[)?tB$=)YS8Qet*&n!c5[IUppOd&?t-@k.J)L[MC72iKn\
%\30;f7PWf&hkc>&p!rm"c*M]cPWq=dCOE/fh_S9Y#ANfm\s0uN"!)`\)45iV/4\d(o[2L#*;cT6Ap=JD[50uN0&"k(RW5_5Zu)>.
%0pqn\_mU]5BFJd^4j9P\B\]5'W,PP8cYm.(3kLfDLHVT"nI?qghOfZ9QnR?ZMgt?kanaM4bAoQ`VA"?D8FN8%FStOmqStD9j?Zs2
%o/GC`r#QCF(/'q=I>)HKeWfEGbfQ6Kb%KIBG$a:jB8gHKMgR^UVN%KT<u8p/B4q6-,O=sRl^5oDN1T_.PNV+IkBu6/iN>B4oCIm(
%3OueTnhV@hWS*4b]T5^oY@G+]rUF:hk10.jQWFu)5L(s7p<X7OeC`WYZ,`NM*iK6X?cTH#YM[G`I0B5IZhh]8I=';][iE]mhEdLJ
%6Z);pY(E5;)>8Jg4MpOc)9&^NGJB/T:V-F9R.pp?h>bA4n)[peSf*/@P_8/7!=H9c)%AI>gsZ/Wf'L^d<;U$8nL1Ji+(d()_pML@
%#'1St[@<u3N9'-MQRA,dB,BHs?(@J2M]&YsA67ggAk$h.mc.OOac9/d0@&If^,S,9HZaLWo='q8#C5AeX7Dn5g)nT'O10U;rc*sL
%=t\TG-*luSrRFKRh2J/u6+D,'b_W5=c5F"lJAI#hEDOu'q6tQ"[JeZpZbFDmDtQ,]b6Nmu0dE]>34jXZ?lj`Ab)@77l`4*.MN<#8
%Y.j"V:O."=k>8kGh&)StQImnj##;$UEAtFGB:i\R:nGu6f9*+W22i>-MqD@+?X1gUcb%ic?nT_XcVA*%oq.g\SGqnj:3lQkdTm=I
%o'188pGi8^nCr0:Hjg6;]QdMq3k>%IjOY8r-m,-A-eC-b>IecU6^hHP%)5nipm2u<m2p1mrN6?MIE)'!N:B&\IXZA;o;nY996]Z(
%S6VZ#R^I_GoMBJq#_:U"Unn]80-%@Ja&ImNB/#)R^,Y%CPZaVeh`&P"X@/J/PIHdNkh,U)']fq5#+e#U>*M%"3L$<%^hZeZR$ItT
%M_]'Fm=-_1UTatu+&ac6SA?ba-qc/7mr@&Db$#MN!S!jf;Bl"@efRmDb3<E97@>s!6a<R#]bY21\(LGWr`Er5:*3Cdb+-9fb-&M*
%/Bo?heBIcTGL.8?r0E*ISi<^eC\\Tu#>T7u+6#TD@[D$&W:10Zs7bus+=>>,pDb>;`:Ib>`,@s<ff<HnUEa-[,Ke6)fC#Bb_P5Xo
%9YmIT(;70?[=chAJ%j3k`E[apk1U\:lCufEXnH1=[Dc6p<6!XdeJ>:\6#3l:7d0^ijL=l#8nLc5Db\=p<!%$l7X*`ZES3f;VI8(H
%b;L9@);hOnN+t`uoJa)`&dR%Var:.bW.hrLs4>rCf,#gLI_UN,a*h18kEjN@?CYA?kGfM%6G5QE\bT\Mk/Q?5?%)!.KS<mtN9(&T
%:p/,N?#9`r3&E=R2m37;Er05[0U)_LjT1*XRsD7]Tkk_&&.)o,\pS'QZd$Yfr85aKs8Qa-chW&TbQ"emQl_UMGp%;sI+^I-k](V=
%r=4kUDX):U&WIl+&c]N&I#)A34*$BGoUO+]\&cnN1&J,G:Tn*<^3Z"An?:\ddo4"YTC#Mg4>!<i81cM?:A!#D&t7e"^dU>CL<LLP
%[W.>I@.npUg[\gK0t86ms"hYK8*BlY6^<"=I=CeYe_/3;'BB-ha4Vg>hOfdO4&c^TN-lc;`CFo=*b$>QNo0P<MLh'g^EroljF?n[
%s18Bk_0oP29E'.Ws"=-)pDV7BL9]fhQi-<8s*Z!T&K,!2HoBH:>]RQ*)?AL_Gfc-??#mYPcM,W(p=uM;m7\r#dFC="+_E\Fk:^/S
%I<5,Sl8"heQZI>qg+RV,\mNc90!9Z6I>A^&5JFeP(Ha\]XQYTT:4KK(X'p`4Is_,<RnIg(jnSC0f7!OFdcs;H7#04W&M4U#,so$F
%&[Fnn(V<)VQ3c.V+hOr>2oF9P_IOU@[du2@=S/6aG^XaYq,t-=cT]MWnbJ5ITDa.dF`DTrg%F%ic`XEH0"9uNQh]5dNo;f>S9a\_
%kHEb!Cni!j/]2VjY#\tu0q>S.r3r*aZba%2%b#fF:7(nsFQ?24;n`f5j-_C__d)nVh"0-1Vtl:drq!m2B+&0LG\-h$4#='Qm"=l;
%GDI?Cs($>/kVbBn0gq(7Xj8;@['O2*IB_2WO*ss,9Aj@f]I\W#-1J2C?C&CM&pX48O'REA,k.O*(rfpK^rnogTM+5)%Y9u&BuS+k
%kHd)JUi4e/3p6jt,6aN\4KYu7Em^5(__*gq@=q:u!BJeVY_b@_#7K2&IZ.\9S(Q-(k#^4&s69</<$"-,eSi/c3T$:C=q8S95$7OW
%E*SKlp>^*sOI5b:E4hsX[J'pequc%gcGg$=l#@k#h;PsukXu<[d]So##D5tImE:^V=2-:3234jiIg52fdZqR+-GdO-Zd0bOHp31^
%PS`_%C!@O5[W>h5L4AUfp=O`ZFnOb5S$O(#L?l2/1KF">mJ3qF`XgH%Gb;2:31YVKq_F4t/:6p6*hA)[`:uRP^-_#8*'5u;N,*#6
%ig99"Zg-fI\t';-SMQY"BCflKl@lhgcFa<=`us024nt_i0c%"T7i',N9,uuBI%#\KA#)U+a-\Z;-'#7>T'i<>q'D'+`%guQb:IXl
%-&usfEJtFK6b>@H<C-?2rNjt"/q)C^0?!P*l-7>hQWN?kC<P^_[go@nIW*Vh0&OD>.ZaJi=ma5HMg%%WbH#Q"c>QIe71Vmp1p6`Q
%q8KG?NNV-gi0pDYLdOCs]K,l4p"=i.4hEhIj1.mehpp@SB10$8#3L3V?llr6J':/FF8"RNl`4*.X;,'M]91<F1V(&bF-^,!DA3I\
%dM=oh!D?V3P%G-g&V;=RZ%<amUl@_\@O:Copi@8(TSEmPr;H$U%rX,l$9HD(i.?D5-`4,cp9e%@_L[ATn(-R-"A3=Zk'oAgEj+U[
%Q$^aobe]Njbo+`'m'Rq7K\d:9IN&d7#8C=P\]lZeZq1+R!gY,DY@H=N5^`0J,OsDmO0<;2n`:NnDYLbTn`CU*DXlj)Df5+-eq``<
%H?1mDaN*_n4i5@A)8HT;5IY#!gl,%;\9!Qi\%$L;41D_@M`^[T'D!%\3rbQe\ljYG(l*"c!aAp@rG_$#cdgS;+0SK&*:&[AT6kCM
%"Z&8n"d!0e/Jg2^kRW=Nmbi(2(4==0=5j4"-$D8Xa.p<8#9[M8_<?ena9f]Rs7kR4jRf@r<[,,$I<'X_oBZFD'e+NOoBXAc.(*Bj
%X*$@b8,?WedEM,#au9)((>_@FU.6$UHp?PY]ao//h(Xb0YX>PdL-Ueq+.$kloR(qiC;)hoR:QY_Y27\qRkZB=f6hme8XAp-^<cEf
%],KKY04uF?>U\G(PBZ92i;fc?f[]b/<0Fn>Hi;sboPEri*+-E>YeOlhZY=+ak$4?N[/7oHhPQjKpJ1_br70P)Bs`3JY!-ZhJI?UD
%OoI<qgc`/j=$r^Fh>ntL6^^_WSF\Rc2D:EmVh]X3.Y25Y#Tfj#2e0N;im^3mlh/fifdt<Zr?lr.fThf:K4VOkPJsn59Y1h^[(@!N
%njCr1m[[6]N1tqYMAD]FhI#>JeHZ=r'Ks#=raRHT^=0'fS=rT[qgC]RN.^SsD4i/lO+E5_fE:tagGP`\R,*a1c?IoARkPb5g[?l@
%dC_^2;":,^TAR;/FZ'W]s.E-.q#T=M591hM&b<p:c.=?+>N7K^iOHo5bJ#'YF-Q693:=gj=q8S?E)7&&J=M+^/8+#%T8eUC6!hV:
%pXSJQ(u90khr@#[iZM=@j.bI\KSW#(f@uub&j9i[fiu:>%bPATE*slrC@j`[r_t2QIlI@Hc>G-K*l;CAqkNK-8\X!hP`:;T[/QMD
%rT5+89a@aGfZs)tGC?Rk<YLP;i-VO:*tR6@\'$pVn/*$=Als;)&!HJD0q`&>>a/qM_tiSAlA+3WmQY*@M+:WOpHIp1!-0?/YWqkg
%,p8J'&+oTdM$A@[70Ii32LE3gbT(fuK=%P3+)48(iM#Y5K/]_NS&50m`S'okcEDF/s4Fe6Cf`D*))ip->b(c5h"]pnl<SgT^;Tu*
%m<5I'rpodRoUCJ4,=cb(XHmF@36UZlLUkXQU<F*]Po]>#3.rmoE!6/hI<,/G`>g4Y4^@T>0(a/H7YAC8HJHd74:"#P514=#kp>u,
%l0GS7mIQ6o`PZuYot$Ai5"pgp"22Mk8W`r@q7iE]q`eFOY@L1gH&037o'5f3Hl#-!4AkqEfoP<__ghLWUG#u@qsY]BrUn\O<u:[<
%ngD3KAbGEV`Q]JhDH<BZr)'fsm[&u!H<^BP=ac#(.b-c@rJJAgYPb<ubd(SVVHNk7omd!KZ[/3mrS9CSJ+P"`fGoTU]2`KK3XSUI
%=0F#Jl)=.'%-12nf@V;m(C,:$>M"mhWAu`Dne?9baLc]XU5c54D65PS[f&9e+n(M?HdnKBN\>:^%Cb_YUN[Qrq\S[=3uH\+H$K2U
%8&mi%!p)Ye0<p[(q8Xeqq=E-tf-enjZYd1Wq;?bN*&W^iXBd\RXj=J]W44m/:#e;5)Y2e+q;\pWaJJe]q"p9G(O:Ys@[l8ja!9I[
%ZT?C(iW\2spm@]JhscKop!G*MWV,+mr4t53L)"#="MTP5^?H:0d"Nh+&&C`uc0Dp)nQ3cTRf9ANWUZqq"1_*7W&&>&ON,-mj%mjW
%X$!aZR$6(i[`3I_[Y#IdL3H2Y.)oXb(O(jA^[49GHA@'!nA=k,_kF3Y6b^HFn=dUacBB9o;dRJG%ri_Y"lDO&7dn@6aZEOK?CB)^
%ATu44Ym<;4;]<rFa$c<b[;FW:f3UH4<,);ZlWj_tgFs"2\'3,R0%b[Na2];#6[$b!cThCWX?QI?lF[)&=[oOdKrV;'chu%)E^&A:
%c]E'=V_dbpUFnM7[gP]3gBP<X_[AGaX?11/i$UiIe-3NJ\@baNDS3m0`,0qOO12865LLm`46iP9j,<N?nqOb7X-I5+f"*u#8VH=V
%2L431V<qHsEE5S8IMo\s9C8jNj)hLkc1p;gT#6$7\3Wn<)`4b,XqBKRB=EkoQ.aCmObm??'WMd)WPRNl\AE;J"&8M8qKtXPZP%'f
%hKPt&9fV]h40G192pSue:IHm,f%Kt/j,^bsH6[pF2KjJM4@u):X7,UoaG\;gQTq+cbI09Go5F4/Vq0srcW=8=2u`@3q`je!p1%rd
%PT#0+gh'ud;EVB;nUFs;R\M]#T\"D+k+g_6rq8(47TL.fD\jFT(u6>Yir'uqm8<L].VBdY/.X&AIMWF5Qeu#uCs)46cOO6PK0=rX
%@^sI+3&3I3ng;EOoi$jC_UGg+XnCN6ii]7r3A7PngdK6FR@g<V6^>]2e9!9dBmuVS)^2OX2KX>#/n)7"Ma$U7BSo^1HS9IAgF5pS
%O,dQnKd5@B9S(Q1(=q[=oGu+Z%XHsc(qIB:;.uG`f=/lEW*Ncfq=JT(IaL:0_-k>e+X\B'MDKO<\-DPXa1Tc8Ms9MG65s(bGm%89
%jPP-+O[@N6qJBp:RYt;++_u[Wb0'j9cfZ@qIP-q/g[\ib>L$ckA$j,Qn9oIRDT8j2+22[C"G]^`3edV2p@A%Ec-)=&B<,,+0`HaK
%?p9(Tp$Amr_fjL#ZF4ITo6r76-)@EefC#q!,.j_=GPRF`b;&-r@;Up6h"55p-s'HCXEf2L]Xu0"kC&\0MF)f'g;IQm%r1"/'K0+%
%[^JEB]?]G82Ba#\NX'Q)/fcjsn%\=scH`3J*m9=)rj<^sc<0M(0'f^f"L1n!.a#d&8'qGa(L,d?X7<RG@%@Yt>J+J/7IIhdQnEL9
%H$R!mZHqi!2Yc1O`j8gW-!5P?raOXC1&Gc*\?,(hfPEVSnGmqpN]:<&A?D5c3qf,`C5361ZF3<WNo'EWr5SQiY][6<bskXPjo:oJ
%4eDQ#f&]>rVFs+NmFnO[bML<AFLRhpZLH$eJ9bR]]c286^l/-D7%RIfYlJ?(h]e+n..?W29qKtdi481Bq<SmG,lacp:Y%@%gQPXd
%XKj(:4f5I+?_pW+DXq<hOaN_SE/E,3^fQqFX5iTVb4BCWJ58E!B"e&_'9gbP-?`f/TK#.7r:KXKX)G.YqVn!E>AlA`mdXGtQ'QjQ
%/m:A#7-IhR+hPej1sL>!T2`).eB+S1)5bF?X%Dq-X/a"Il/a@Ret9QK*pr+eCm4#k3KUGZVg(W(32mGa_$n4Q6go-VpK!W#kjaX;
%8N30kJX<u;5.o5'[XjgrVoMk?(Gm63fB</p]D26hqSh.PN<I9#kK2iWMff]m^$bRV94UA=3r;oqQd<]groa;;Ja;jTDpD*1U^IJ.
%bhKL3TA84l?!hd4?CVBiF.VX2?CsI^ht8n9[suQN!#`Pcq0Rrcro&4=Ia'fa5G#X#\`T4s>hKP*:iFAjs6JG2k8GGF;c+9Z+.:W'
%ihd:Ihql(-5@("A96>01/hYPj%kG6Dg'uHKG#NLfh%F!E-Mg"r(X890@N'0Fqhd$&h`\Of29Z;tlFisNra!o?;o=O\+M;snkACPY
%DL(Xq]Jtnbgfo.\\_e<4Cpq7uAX?-NMfB9eMt%;I76``F31@mCM_EX`?!<<\)->jGD@g1)0V@_js-2K]d"`Fl:#X(EO$0*3=@O*D
%#n?!MYs]Ds-+`:u72Obm?!O+^pDdK"-CLGkHEmsRIsF21r5#F@cpthhCPL6R.#5tol8ZB3A@H*UI!C(kVH2e-PoriG9<E8UFq''c
%I5#Ps4<G4;kIesd5i0K@eaA<WB4,O%*/KT=V^7dPAS5i4?nP[G[adJ:[T1d0gQ=s;/)MZ;6'FG`-O5Y&U"gc?o%58eKWUR[jB\$H
%=Y\N,,=`cUbTt51HXpC7TdcUgU-6"(URZo2eO)$<>1Uk\WN<G_aLN-s2K\TrQt1(rS<l.`)lW.kNY6H[5Kh#7:\\ba2J"@dS`2d.
%"I"0^cNg5SGlgs:#4c<<fOfEo@7a>K_<D[tRYPbQ8sbT>eZX8`gD';*NMR!(Rme\RIuir@HPK"#l7-_G`g20gH2\BMGkk-!;2\im
%gFgYC#i7OhY<7TB#eSTOYOD#O@Zjm>LS%EY*uo.[r1R'_]N*UPU@5`(Y.*0EW2Vo5&r;qA[X[.G?t\B@j`b:7]YOZoL[p0r\]Id@
%c'^I3o:\ks_=#H\`RnTdQ$@T*ep.>+>\p__?t'G4cb&`;S/W]5T'a+o.f53&kWtFmRm3UKqTB>._Rs./+K?E@HBfGEc'4\Lo&97E
%IjL@mqk7(Rq95];CIa8^GJ1K,Z2aCPMnC"M45Kd:=(SEkai<6n$DE"PF*_C]C5W#4$eJ$L38`DIgP9HI,?l[fZ-h)eM0#[/0]1F!
%E/Ej8mt'-6\WkWRro!A/;raUd<gT):Ca&t>lEhu&U;%[c-0cjRBFp`!GI3_BcjA8,fuD]AW&ML;F#('ag/r9dqCB/```N,hk7R9V
%2^Y]lUHJ=9h>)1Vj^mJP]Gnp*W`2AdAc61/R,(-1#$X:NUL*1YeR'BobNPK9Z&>p1aSO*DiF?)i_MGTK`Y+;ae)%898UVD'>+S+5
%7/7h=gS.$H^uH906.]*7's%>V#%lU,%=J@,GKhqkLinc4Cuc=)Sqa>7:[8'@<2#Does8CVGM>?mPpK"qQM6QApjb.82ePdX@S'NM
%M2ETVnR3^nm&!1)h3=kB>7q[IFQ">T(!W%47=:IjL"fn-@S>)J?&=G<&dDcNU;Cb><6TgZna,F2U&prc&etpW#T\D1U;D%W&f#Rg
%U*?tV:K2"4@TK5?btV0U#>J0NOtfMra;?bJAdh"uW8L9Xb+O/QV?2kmAh(Iir9sO<j4VaiWl"D-MR90/mNkl\DG!p9@7aHMWJZ$U
%KSD!cWnk'3D:,G6/.o$K@QcQ!qb#phX=[m<EKe$CH9&k+>3F\qVD(,B=Hho>cKA84]6egmBjL?rcKY/0KUVMI,`,ae]+hS,ca8Zo
%=E%e_UL?<WPu#ZUa[+"f)(.KN/LViH6pru!nC0^p*uuY]i*f?)N?UD@@UV[3?DE3/RApq3UW+V)2d#7cPi\SqWME%3Eb`U_QJOZ_
%,mi<:AE,VLniX9qVO"/\l6>CKY:nY]K7?!t:H>DLmunQ)K;?DcM&b1QhgbTPZ</H"nl_6;f<rq0DKAH2q\,pQ]RA4#bM$0bJnt_C
%HV$3Ys7O)T61UI<a^<*!VM=C-3.ot3ESd<GqHDrDn'8spm[OfX(1G&,?N.F9J[)hXToJoQq/!=%.5E.L6TOkQ6,]8PG47rk2TU3A
%6qj8kT@HV@f;@Ojq6D0qmXG$<1i3VY;a6ph6M0$H?s]^U$7.PS7\%2G9X?5k&;OUN$9)<"eZ=`6F)QCfj0nOKr0ehdA<r2)mJZ\\
%KTS_6K=s4hIM@c(Q$4^c^?/l/SLsY)k=;Vq4*VGdXkc."E]<<&q5c!*Cc.Tu&35oEfbu9],B*"k0G0OG<fCh9!b?IY0naL8W\R%]
%Ah)!51,VMTbObOl'lm4D\L:rh<IA-F72b:MO2La,H*sB*ZSH[rr5qAUb1L69m.HT%oK88(#\$U'ZH8U/El8Bf?CMBL4l`9eZY+.#
%H<o=<s7pNE%r8jOaIIKV^Ul#-(m`[+%ps5'7s")u+6DV8ZB>_i]hhH6DlZ'BK==IUl6H)2Y3QVrU5qFrSlHk,mp>lfWqj!^;3j<O
%ngIk;J3s7/&h.&U.!*icDK?Si2&ihLDF5&UD9eib%4N"%k9Pc@mZKlhPX'NPr.uBT:W`eKo-[9/rUM=RF8D\+p+R@-76-RiXP9+)
%.3[tJnmk\eA4u2u4`_hAS7YOOk/9hBj]KF=anfJqheu;[\BS0?8Ua'j&D`):M;+CRBdMUsc'`B?R;C09X=$^6QBQuYgQF5Sf(13:
%ag$JjYDM^2=^p4LXq$;3::`LG6tQXmIb`CLP'E0iaehbRQ:/iL4A!.6:D1+s8_g1*8Y,-45KB(5NX\RC[!<a2cB4ok,O([XgkHN"
%Fn_FN8XcVl\"Klt1)8[>)%s-0$ANQ0-:ljR+Gmg.OPKf6a)dk&kn3iXkn0+#^5o&DQlaXbCRQ:N,s=$Mj+s3%3$]D'mGmCgKk\.N
%@G5TdR!)Dm2EtqdG!qK4UGe.B+ZEkcWKBIW8)0=InZ.Y5pi&qIIU4s%g<ddC-+u$MiX#"kLq2oXlV/@'*]n)qQptd#+u<]6-+5fi
%U:05E1ZC;<7bm.=8?"6ZVF@<CGFB;(_mILXK;5J]O[05mn$_,@'hOn#,%4DN`,3eWaC.!KMM.s*^V`3I7:N=nM<lA2aA4cWaGM7f
%:S:1,CK;^HXGEGpn+kJn\PHd;,\af7gsd'`\$X5gRQ+2PdQ^?W$qb)$.>_@p/k59tZV<WncRi_o:$W_(l4IA#]"?In//OLWR8u\B
%IeY$RRP]njcZ7Z!ldo8M.nh1d\)6WKQJ:M@gTI"[7Qb,LmD^%;Ie*tp^Nh0DQC2*prr^Mb#b,HD$[4QVrH6E!@trTRGC7U$2U:em
%O5_3Idf%CM6IO7Wjj,:ED@@cMDNfii0KH3ti`/R6D1$FY+$UrcH):32f8/G?CbCjhG=EA>rb8[Q'C`d1",SbH]XkXWMRAd[mA3p3
%.G"L&MR=8El34M?_5prsX#G\V(X2.JZhg=f[27'PV,[>9.Fk"sViA"?XBriX$>hs3eP!uPe'U+m*+Zsb0<33f`(R<_[&J0*2i[J0
%\:-(3`#oP#:J3Oh2pLjG5%$^IK&J<PRVn'"S#3jm<cSDQXjc;_Fg8$mX<P?.7l8-\-AsEd>*ib!LS=XfYf7Hj/P0IN5j2T-g"t0C
%[o7bC1.;<ClGTH-20rMa#E@TB#bT[?7p:gZMJFA!mGJc:Cj9&8/8qE[2:I[MS&ti[C5Q0Q,s@VsL2jW0Ha6nJl6?2$YF7tkd<Mf+
%fS46G;j=V.MXj;l$#Gs2d>P,h]o[rIAZ[,/SJ`t":#+b=dJ6dF;3G8Q]tV<<1Sa&5=618Y*F^3X%.=3jQW2g.<s*tmfHg_>Skpq#
%K+qMK#.FHd#F!_fmt7aZ^<-T%2g0!&']1qWBLt#509\sK[k8fQOGk!XS3721a&\ZPBKms_NTXTF!#VCE%qd$'+]*_SW]2ZhXKspe
%riQm;&$+).']EaD;KaqapgX*timRM/m=h<:(l8(@mI*(Uf\.mHNb0`NktZL]OcO_/5b9i]&2t$Z`D,MsIEh=rDl;">`q5,J0e%K^
%^g((m"ug6`dV@l+KPi?bP7geG?Q$p*5k.9g+l_!$KLkbuTdoi=0Fl:uqP]nEQumkPpIGNf#:-)lXu=R<XZ,rXVV5t"NsC-"F5nYA
%C2rms!KM$OY.Z]9.^5j@6dON2FNKRkBcnD?BJ1H$5B_>a+)Gmo=]>la[BEkCH2OrEi=/hHhmBiig-U1uAN"0HV6Um*<Y__d%rYAO
%Kgj$^rX,f2'o](W-6mjY,qB.DY&;^2BOAjkBLtkQHGAKEmRN2Nq=T3'hTYeT5ZJD6W"C$h=s*W"YL\QCKb9RGQ.8:M^$lWQndeFd
%<V3u9/keq@g!c\.<EF<lU?mN&:4lb]F/#pCiEhM:"A@LLA^hYbkj:.6><C^TqJB,6Q\T;rom7qn;44rV`^2qEq.^'BdJWQ^="C3[
%;g,H37un%_Ip@E2,(*Qf:c3IVAFGn/EXQeE4KK?b2q.ZXkt%C?ja"u%;"gLcj)FpRK=,.$%'1R7ZVBp>D*tD)Nq27g>`EBH6Q*Qs
%)aHuKWMN@BYd=;>.=8oUppMYfWS#+2dI[f_'[H*tj!][REL>N*4/Z@c?6Q^fOXIs^K+N==C0$$6/(_Z9.<ik1:98ZD<S1>\[=;R#
%R11Y\?Wf&t-h=Z*Y.7gr6rq:qC\/%_VBD76.Y#=^XNsfk#=<)-2KBp67lVr5E*1(]Z].?Tqn'.X8aPO;'oMLfN5gdR1q8q'ZG%:8
%[MOs1@3FuF\%h6J?u*)f=sdq0KW@1Eg717])$>-a7V4[GSY9J\2XTT_g<5jD_5eLg*$n!<`1QP:S$W5R$<+024]Rm4@qbQ-Eo1(a
%#,lfB#?\&KW!5F9NcHED43+U]=9fZJ*hjaH]+'kg2U5rRok^%2^Zdp'W-a!a`2X$^D[dga_-S"o20PppK0C,u@!'AK-YX\Cc"JaP
%9KtF[nEp!<A]m`_"k.).4^k[s_],Zo^M.Q\[>"BtbA<3E;-V0Q5.D*!Mj%NBTg?f%%]jcF+Na&_9Bk$EJL3R4_L^UJ;<dUN%BM-R
%1V[40.2fX:aai)DUPaW[fX/#f?JsX69>`ot\QWCK^<[:e=Q!MIh9nDr[rC6GDHi_0HQg!QjT8)c^euehPRHhD\\OLPVHoJqj9;[A
%6tTKZ4q>^=@S,@QGE`Jg;D&N84\U'KlLEZ-8e4jo0_p\k9^c_(l=jM!rM9a*8ZCX$Z1G(aXd(2%p?"6;hITFm%7k1/*h'=9;bPS4
%_#L:/5\9Tk%IAJ![?3p%s0l5A9;lX<;*3%)G<VU>B/\>:$"DM)9Nq)T'J'J+J4\sK&Mn?rj2,XIlV3s&S,r4B;Ohp+Qk(F=o^1>R
%p$'Yr-"Ud^3Io3!dZUoCU`<?]Bk^.A>#LZPPU4>V`0ci-dh6.o>#HDM9?Jh?3O+%QXFP/dBZ,G;2c@!rZ;%)T2#jg2(WTQAq-mZh
%D6$aHD3p.QK>6s/a]k`q/RD'l@r/N6OS$I89L<J35cnHojr1Gj(`m=0XW,Dud>QPEceOC4SA.ls)I[Pq>6-Ne.RmhiGI:$l80oKi
%BjH9EbbpGENNtVaYT#eWE[-:2!0-\A.b4*L6WY[RPR',Gd05p[0JE;Y($h'247%:M4KaHFDd.ISlX;c:pK#ADD>rGZmhX:AUlu,2
%&lYNT6%k:o>HZ5/1n_]PJoL>LHT^?&(pWZGK%iS`e;m&!`eKGAJ<L2KpT%1leKrd7AUQpTM'l2GhQRbK$b[GfBKQmHMBZ#Jh+<'8
%F>8m-S_&0]02/$,h/9TQNg<*#]?pE6]P^naE6'to9i,WB7jUPt=CPG8k0VCPM[s[RBJ2WKS?JkJ9i3ce$mF+dpjoNt_hYL%oLn3o
%;mc"N5F7Xl7YciBY'5EXdV,mr;\;?eYX_'iBt<d1LH$<>fQmP_)a.$=:T^;n<(i.4cdmgaW'YS-F9T$8T6Y$27[9O1&mOg94pKVj
%[8n2@4>smc,2=YVOj5F7el`%u\s3TDCT_fV)H5N0>U3&"]T.b!Agni%")`'jU42A[8o\5SlAL3m!S3Ii+Z3/[MH<KZ8]M7^Q5ek:
%Xpa!L9&VZf4'Aa:X?AJ8Fd$U7:%V?<aLR8)a%,Ne9'AXBCW/qL//t;j)LZm8r2VBar$>3U.I5g/=t6#n<K*cNW-!rk!3c^BDlm;^
%>RU!UWUHS4=q!$!f;r-gR^tn`1h@oKi]o50D2;kpXk1"[e+^;Km[eL[iu'eqrWl5%muEd,^:uDY&F.r2eOZWl+J;3N"$0'$6%n?M
%L=b-Z)b*C3YVhp"LF:4FNTSYk1._nF2+i^!qJ?i0!?D43BN/"Bkc?LeNsG%:!DO@dp!"&Q=H)*/!"-muZ8W@RB."';TA$!E#\4=M
%T$[:W:?ntQRI"_P-`N#o,-#s-bJ#PUFT/;BTOVJeLVj'#Ar3Ei-<W]?Du8H82OnMOpdDh!#@W:!+$gI8%GBS!Ls#Rf;g%<iQ<3$Z
%$*9C:WkTAXcUh\t/)_=jcfAet,dan'gP;fO).g@toFA-7)^QoAUF<:leMA[N"e%#BmA,%tTr#mk<PRXSJo.?UBH9MR<l_-Y;Z4Su
%>Lc*`_iH5<7s[_"9+K(tdurG/)G]Ubo-)X!1KmR';Ee+B2uXSV;^thmA;#ZLG#rHT&&JA"H#g638tdP!JgQ+IW_c1l;m]2]MdnoI
%ZIrKma\t@"!f4mFs0^$)"j:&W6(YC[_YR`@W@M)3.HoC]Pb%s5d07M@mPH9m4%*B`C>1)1GE?bT_j4SVKtL&>UM!),eFr+k.>?3!
%D^S1YKs_pFZsdul>CC:c;).'%9,+e+4_of%Y8/5V`g%\(3pGsRm,0HY5NS9T',k.>VF!GCYjG=;j=eQ<bK#h[[')'9dp_%C)gG(]
%_\ih<a1HAV2cm3WU$d=Pk#dF"G$=@K&9BD@*"+LA6HjHGhG7F53IZIPJ;'A#+m)m_3>Q(aKpZBCi'm%4\"_o]&i!/CcR/2hIYt[1
%5.Joj+mC<q_',&)FC%LP'1I%NQEGes&c]n%1a7gRZ[NqiM)U^1DnFos/b]q0M#/cA:VCP*7c,Rfjj,:E0sF6!T5F/8I?qbEKo0:j
%W:V2-"q)0`ppNiOqbm1&e@e*C](\DJ1oPci,>Nm&pHIXpY'[?,VaID02oEnF3Uh-_Fmo<RYC!H$#PL++]l-2-R%c+<S'Vm^5BfKR
%qj-D?$K!de%/1fmHI'b.AkV64++G2.^(94!40*`^!N8#Dms]09qe.#m/d)pO`Icm"&6(SA"P%As6-XlFH3e9/@j`EJ)\4V*[?#J!
%DH#B'>O((3]([TH>PERO.L(s5/p9Z&6gl=CdAu%&BBWL5NajN#76+K]0&6[_8hurJ-B"B$I*?LiLn/@GO$JS$F78Z]1>P^n_t)/K
%@W-[oVMl\#h$.oKQgJ]8dN-$`<d?ch4-k'7&e>%IgZ2<(g+E_n`4C?'Gb4SnBU'6]jWWqe:WN^QI#Sk,lgE?cdG)&Wl2(A!S-5hb
%HcAo^%s&D\nh!T!9ElHlA0hrVdrkKMrfcN_SX8X5B(UKKNb3a&p\3.J2)fq:nKBg38,")i+*D,r-gsN5!+20&`j_^J5inKWg;pI0
%2TmJWR6KGo[Fs_Qh"pA9DW9A$j$'`S)s-,W:S&*qdghM1qr\=ha93b1pY14hT<p+i]I*GTD*)+=p,3l@b%OTCCK1X*-N">F8'PYV
%1Mb<D^]0&%;C\68CXiogN<agLVp4esT%nSjB,.b_f0/0TaI7K1`S>VUjN4R<&f4TTri4IV,BW]<>rXL*K$[b/3aQkVRgT$i\"2&h
%2QqP;%5amn#:Du!ast;SMqVLHm:)=CVcYJHkM>rYcCI&hQ2$+[4p^i25b2X>R:>XM.0EMi<n"oc7\'CY:_s&3hFC;#0JYXT2*&[V
%@a+5D8Nu!!k2,3D,S6U'#Go-R`SLen?Y0hO?+UR,VJelT`(rRCc)l"FOn1E",OMCRX*dNe?C&I>I'e!eNCr(QX/+?'G`\g8f7;Qh
%m"&Efe3P_Wl#F^]rVffHTg($4I4BCbeS/tbVh)LQ.+(-(:VM941Y1Z_qtH/k,D=$KHtp0+@@6;]jNL;HqF[_D5>C77qtF:+/'"J.
%.IBrk$U=T=C0[.J3[i"e\ibpi1O*l""?1e8fG35rP>,;O<np44MDb5)rr&TZ4iHa[d:uRt[9IJJVMBDEl1'H7$-+%]g=qS<`G!d4
%QD>%,Do?cAf#5/TRC,Pghg`9XN*G%mP]IPD?/#gb2eab6DRb]#+0LRI=o:/Q?t)L8=Y>Fs]=*lkoiIu-MJ:Of2J2pfm2o!`Iq^+S
%I/ha9gK/$gs*=V(Jp')em?7-LZMsM,9@eT?f>j*J?dS3V[(?M/DF(nH2<V`Ih(<;a#F>$id-d4$s$!+3NQ?4^-?!$0e(@=mgNoNf
%2kn)3CF_\j0*bBR+)f/9Cg)lLY.`+4#o3Lh)2Ifd]2c/.c;*AFT#KBqHLmK1@^'6G(TT21"`Ks/=<&0#IFrLEhJ41p\n"l[^YeRn
%mg#uQ_,NYq\/Jii?=EUbN?,h"W0mtiS$k)g@pdC+fE'1;(Ui74]`q\>B\Td'n2RE@Z45k;o+gmV5\(0,$kQaH@^MP4'*I\+3Sp[q
%SJBX"(jY;5VTG;m[7%;%MrN]f8e;F[=WpOnj*.PETJP[C?3fJ;_.7VHW3>l>]>];k]loe:"86*Ydb0YF%gf^35)06E>V+f;3&0s4
%/JmS[2sCsDH/%?s\&De:@d)AY'@K!*gW1<#o>+E5TUdUTit+iZ$t%OE>rGEX#YB+S'OAbJR)[#5pDV,0FO]Q%(76Qo'e1CA1n[bY
%^u-`5!=$M"!CEQY;ZC37[8G6ckI!_s&Ka#;*0dOq#ffT;b$d%umlg(g<4p$<67Qj4UtsWpU,eKUb&"RjE)/E-C?W.BgE9_%NH7XK
%j`fI"ELSgYWnh_PmsI7\cIbA4XWKY!#i_.r^GLnpSLU6Ge.C;B]`9GRJX$58oXH5<;kWI-DDS8O=F6U-3WN]c`"0IWl6''05O5!/
%6Plu:]W6rO#1A]u\,31cZ]Pu-3tZ(;,DE^(WuS_t)Hl<DhbA*4XRspCBhd,4pkW]u0JG#j`eDED%F/]d3*CgroWhS1(FH'<L/g3Y
%ZX04QngEk*"3uC2jJZ4R[AS.6@;bs?2\Tq)3':AE8biLk<H8qEd&R8IZV:TYZXbdf3g\ho3-sms*qP\;;>.N'.LF1<&m,>jBe!rT
%_4*KX^8Rh;>jkZ=frC3oBOr',d68W1KSa[=C;&D26g7+c9.J".VcGqWogtAC*:CrqEO7!O#)T*f=2-;3UEsicjGfJ<d>*uGZCAEo
%mA@OYh3']H<G;]#2eoe^NT.itMn6geiXYRk7GWB5EGp-jn&<6dIquNllaC>am&"[Jd-a)=<%'0WA<,I#bY`c7DUD993*Y=UR)*Ka
%c/=7=F2X?`^<Q?lm@n:aB'.0Yh&pc\pZEUDIP(^8VM+o-9hXX4?8>%<VT_mVQH[a>3Vn.[8$u!0Ou]Q58VSWYj2<g#*mPmLe95_(
%Nm*V`"HDh*8KFqHc`GV.VRI)ijtF"dFjt&MOrn:^Z;FXX8(kJuA(ts.553#p4.UN+j*0BU&kBsD-]TC2F/<'^a("CnS@dEfd$)Lm
%NDphJktF!AW.\!PCfj)b@)%<`pVJnu1OFC2KF9tl.KgLm?Q'@d+ur#4H^N'Oi\9L<[rbCWm'g9PkD_ebRNcc<Z0Z>hUr`7SUP;Dp
%*5>[B'9fgUG'pZf1)f8hq:3K!Rhb=_Z#Cs8mj;Id;ne")jF]',K=#&N$+=+*=Mj,gdJdA=Hp$T;'((1q@"7PrRKWMgHkOqa"4XII
%H\NRT0eYXjS%Eu,K)J;BUA&Y]j([9sYV"Q>:Fq_O8[nc(lIdb;_26L<>6lR@d55%%9P?QVR%6Wa>+*_A639L*F^!l4:'^*-[q,M4
%:!RQCoc`upYSJ]e$aPR?6ZB9u?u+>$Iu%,-q^tjhpTe#/:,:'^3-ho<Nmko]P-*@p9":&a<jqpNes>7d&tGi7j6tlTH$/rUp%d]D
%Id\X[<6gm(n6\BYkf_TU[j;"Iou5\`hd??OT6]ukrofQlT3qP9[Q;-Oqr[#*D^Ul!5Fu/a^:JcBG5]J9rc'7aqXik.i]Ja^f.YHG
%p!UV<;1?)k=0HP&<o:^CpiQJgXRGaD`kTU<pg$*%?gLjtjW=46J%7PL\b-2W^Nt8'Ep]L\*cGBAqX_OB<jl6b?W$62q:0'Ulc[\:
%rq?'FjufiJZT"NUEHS(L+b.)n7sN>jqKr2'>mk;gFCBS+^F&u@n&t`ps6l$Ak1t+MT$M>QO)OW>L(A3OT80VO4MFsPdGlhYo.Z7"
%Hp"ik4PR&%T@rc7*cg2.GM/IP\cOG_n#dbkI9(24s-CuoDf:*<3.(8e8"]eLbH"u&q)99CT,_4.SGpGrYl(XWDuR9CoZM'964&/<
%Gs6Y*5-($!qG^rOIlY9bqjkKNqXW_FE[@'.plBIFkV[kDr3L<[nBcCZm.fYdq<@BG=-q7jT&4@r4s(WB:VT*(^=i5(3NkJlk.<i7
%2t#VeT+!C6Fh$f%j?2bl:ZZZ[MpKQDI^3C1X?QU[q99*Cg%*]1?X8/.F+*_FI$(*gO?_7Fbr9:5=8=7jNdpHgK[30Sjc=.TI/;I-
%JA+$jOY7eoLXg5dqfK@E<hHKXdF\7//9!c;nW5EL?CtLeJ+M4PqEKCLQCjDncekr$Dn`m>([$)AS:14Pi0F?&jSGD?_YE#e5k=._
%[_\js+1a#p(\i_K7-e(!11ho8jW?b!efqiT"q.?'!QaB"5CE5$[ZkpK`4Bc0,',n=>T4,jI/6:'h9T,IomJT?0tumc`pqc.B4CdW
%?=06#.XrI5>FCne8Y&PmQ>%g5?i+Km]`*5)pWllF<3,Q_RI5^fMu8cCp<GbOk,5jZs36uWT/Opf`Y*j=%/4u!rpoM!M/K27%cttt
%Dp+<N.6CR4M4mT5#O`Wl^qdS63TSGSAFm[on:u4i8Y>JKIOfI1f=k<tq:1B>DpE6.'>@^QOT0cLnWlATeb.>C^Wna<`R,]PIJE5+
%i6!ZsF`ID<@jV)UNCA<him#^ip$6Wcr9*1dlT8p6jX@XJUVK(W;6VN>2?*3MD3U(b:j+LlrB=4C8q1+?];YFM;HqdV^Ld=#T^e(%
%B7KpVm..4?cXh+U`r4>u>?Mpu`=bS;fPUs0B?*;Eo>qd30*GG`ZWl<u[jr[U$ff&>LA>>!EXuegpt=]B=(C_B^MpjS&,\MYrX\e'
%o5FX+YHu]eGT$<IhI8k!j6_mT5?qKBs4;2`2r=*%GUdo>QLF'Dr2)I!IIC8oHcMF0o#GK>p49gT44n`VDtWt?[eF]>_S=tr1uPJ(
%\dlGgB<?q6gS"n\P:8I`+X$$`.6m\01[tK\.sT=Bc7_s)fj0%*?Z/a6=(s6Pg4T+C+#lf\)V6Yg)hNp;HAQ$L7UHE.SqDsN.&IAH
%HDg@PrSk=?1"j1ZA7K_`AM]K>iO5mS=`4a19KRDNFa58kiB^N&#8Vq$.)K8!Ykt<^pETsTW:;25HAFj(A)%]HrQl?M;01sEhRH+X
%#3cB_K-S/*Me!.6hE_ZSpX%mmK:J::=b>/<2=0r/C^'gF3kfic[efP'-HEh)I==]dX`[AGB2!@A5H7XLp=`@'IMCNBE2*W.\i0Bo
%VPhNXe*+hopZ9'TE'dh%%82S[DqiPKJYPM\$dT`,r;Y+"HZlg'/,@'.lWNP$#>>>Sl'BiaDSUc93TgfGJAKmXiIq0hIeK[g-+*i#
%c^ZfcbcJG.gAL?D>+np+8no>J9PD.e"*ie"9jaYar\$QqV^3rP+G(bI7"H["Obn6e?Sa`roL/H`51KTFI-=B1!QWhL^Lc+A6kV46
%MD&`O*OZIb6(\)c5.lRC^B>cFNoK)9Q$sQ<pi&fN^j4q?-8a*2Ih`3G&E<^GdIC!fSGsP5)#."8_"Cr&3g"c?3u#s$5?8nV6W!eT
%Er$T*8EKjs&*eWW+U%gKamq)-"l]DE>56^r![7&_(b,Bl:r9tI-,hOnb5Y(^ao?Di5B@49#bLKagGf'@iDJ^E;=-Aset!n=_K0^O
%0n"LthYt^6rMOFSUO%rKP"tCq2=O2E>clM"%diE]D>X-D\_Sm-L$TWTbfhH<qG/3j9JI=.rrD`sJ,%3:lk_n(eE#:]V-T+1r_k`i
%QkOVUSoLlm#W1ShmBnu[9+N&/9ALa2m07B3,XUm\D`\Y%::dP\b1.uEh6[]+TtR,Nks3_*B";14[e0>5=>k,P8+qFVXki]=J)kt$
%K0Z_X9u_,0M-f":?[Do%]'Y4?3ngCs[3PY<D#2lSj<)RQG/!j0X+Sc1m#`0GS#m?t_!uoaY;j>:^5/ZhNFDpT>VtQJH-Z'`VUm)2
%/m(d+Np<G2H>%CgBI]5LDVMr4_XYmqPRd,Ga&(9V0NZ42pW$9Q#c!C`X^Nf<4/J*<p[+^tL0VA&@dd$HY"9C!MG88,3nPUlerl^_
%cljGH]QB2]k4;OSmI8,*$j89R@oO-#o'1R-@ZE'YpeOM[Dj"!%*rEHu08Q>rB7[TWS@h,^2:,F7I8kAOo.WC&31]]Yh?<A/,%5eZ
%_@8id)4Y;niBJY=`b2b:!UNBITBtri&E%k)4!!8t;@b><!o3\8IdG8>S\PCQrI#9pn?QZ?nPgG_$DjNA<4f;LKK);`j+Ud=;%D.q
%@X;5O0t>f_/eBZ;[Xf-J.8cH\!O[dj7MnPI5!@a1H7#3T<KE-HEdVTBf&"],/#J"@`f#4=iStbae/-G+@4-/8-UOo$#tuh(k=3)A
%nW>T#*Mm"N?K#&ualNq=SUhh&T[<#0M6DU=fm\Wk'9:`U2ql^J64IM\SttYSdrkQa$><>]\tN7\a[74&"qcQ1qBJi5j5f]EJY_W-
%4jb&Abb'd=c^CbH^9iOsYK+//6@>XTAOmYZ';ENXJ^6!.74:iF8+fPQ`V8ipCsfu]&<kRbJtRmJggd*Q<J\\.9-(!:6\*>#"Hp!P
%BuMqAPj\N?e'lgQicV87FtDKa"'rQ($$8cY)7!A]YuL?:EJ:c.)9Wc='TaY$"k'/RcVoS1n<sj2/IYa7cmB#PDaO,--mE1Q@3W.!
%^pUO8QsaiJ<N'"76(E9!_/Z<6>.AEO#6PSgP('"UX"MHgOdpSpO5hMF\#^<a%D>eSjb-+[A6Y.J+)M/#G",,/94I9sT5;>J(ANn8
%RP8G86[C"Vct?`S>sC6l4M*@<7-G'V"_m0^!Be!t0h8%,]8FMI@RORu)i_IU6h85&\#1:$4`)`t)2;`b6dJ@T5GB);iY+NJoNTB^
%*ADR,+YF0c(?13pPo&Kn"`po32T0#MC+.r[(M++;7gOe!FJWFnpA8AM;'47=H#,TKm=`!@&^!F%9LrGH(T@BpT]Scl5g<`4K>*@o
%mJ*PC`E,KD]EEtIXk_9:,MA?8G)(__ijR_E1M4q`?6<4U_#eH`D$KaX+^N-2=[I;nIlH#\7/q-j"V;k?c$\$)[F4`4&Uh1IQA)#Q
%,P`+Zaep^3P`\45!6<cfSi)n+YJ!O4U=ZXcVY&+(Q/iMY+p>>nBJD,XI\aVeUp7&e),OY@]DA>"`+=^Oia"PclU=_'TeN;1q0jCt
%5]^'hF5Q@*BU:<$4qiW.b\'!2TkOs7B\2WA::FiA>=7TG@lXZA%$#Z_<^-$hlViZ;',_ItCJID*Y%!km6ka_gVK7^;[N./a,tmNZ
%eSHk$/bbYV@tjXpp7LFh#9+1qZ^NP4LQ:[f))>I=<AYKa:YgHqcp5);SL-@31IHN6I-n3:@u'NAS$)b?d=cDts-,0H<$F_6T;E3h
%2[s?uXJbPW.V9A-$RRkML!SY+La49)&$Pk'p8MdI.`pJL-$@,":q0!aGQI6#+6#8<rBE'NT_:Oi#-TCo;0'au'YM3n9LPJ?W762r
%*>0H;?LL,2DLLXO(tX5/,R]$mM;KNi_e,(p&;1pg49<HplMa#@=Rd2:VC)ho89`;l;O@SnpObhfZ;K#sjPGBBqA(X!fMeKY4oQXF
%_R9HLQP&N2PHGL+,e;PidG=g-'n[mkWuD:f*Q(!Zbp<R):ZE3sem@/hah&'\T>"02XS_sf!5L*U=E(jY+I5eK5B5d-qZPaT,AM34
%CM:dfqV1U;!Yr!L,+7LorMP?@js7fW7diQ`Q*nMI$:nCn4=Ik/b2F3u6>>IjfFR2_MW_g*].Os?&pUerrq:N(e2/+hAEWg'0ReOP
%;I3mQle[mPI0R/2=d*OUi80c]Z"+O\%cR&cRuq7MW_n*sVb8UjUdmkGGlh?q-rMgj=@"0<+hW#jA+t;,!RE.a*-l=o$1=^<d@G.`
%kKhs_Zs@CR#=;^gPXBhE0]k#10/OS0me8FOA]FRBhQJd2IM?nss.N2ufrY3jBY42XU[LFtgCV,`Vj1/J5O<JqPp66mn$F4f-]d!S
%"p:n$J!^ukI2[@d9(s:U`Xe@+c/R4%LWf5S1qm+U7<c1HV#G,rCqcJ'3sR!\\Sc@/2TgRASaG6ZWVj`]$U^,-J$%;#_/-jADH7+O
%M!.%;3PnAe^U9P\dO9P2MGKLPWEHC;],*3u)1UARM[h,TCTY4`k*rK,^'a!$[XZOHMImgfLXm7N;-Oc@M`;EYSGD&qW^<O_U1LsO
%_%`U8W8-6@SGWForQT!S/J_Qkf=m^M^d>*pi_-iSX$oKPs-Z:F?UoeH4X,?af+hO"qCBkdc0kR<hu#\l'^#GlHa/+0ruORgFV['@
%G5_*k5lCRR8T_\38+$gIPQ]8".J:H.DeMK;DY*\]`QG<<^\o+up\t4bhSSs6s(h<lO?,[6ToRERIC\]or+aQQS$r?802(k?,2AfW
%os[PM%u1(r1u%TYA9e6jZhSNc:M"kfma(3WRf6MB:^G!Jjj+>4qsQr#^WEdmGEmQdSjL+bQ3J>s]k2s<gKuQ$j$Wi)7KlH.UO&h@
%/>lABp[;NjOL"bmR)a!QSM-,9ohUrKpg9W:8BJkFIRS=+Xj,m-469A:o/^tqDUkd.>HQEB.(/$F6f"CD=\kRmT6Y=@CZX^*I^=u#
%qL-)[lh+"lDhLJ>jjqo-@D:8E2_0As`DbYRO\g-(*nfkd)kH[u&%S_7^5!44gs4Lm48Hqfd!i[UBgeK_akPGV;s13H<rZF7hbp54
%YeXqN@_LL&T^K.g7QnValtWXl^/TF9n29*Ll0UfP@jolAf=S)Bd&0%>G;<?)30\?i$h\nR1dkj*RmZU?Zg20%fX0##&PjeeI,.g3
%4dtH[i0;WpO`/T1[jnSPC;(5W5Bb\KVu(&3O5nVg7cZR/TcMIgbI!3`LM#C7C38'Fk%h(gSsZMP%pD;r6kfOZf5'flcPKN)WRZn[
%FX"iGB"^i-5N9?uQgR,ZbV%/TQA:LDIr>kZ8sOS6:oRLL^"9)'d3!KO&ToF-qeNoge6?(B?..8D\HMSFg*[EB2s@>Cl\0`ZYh\GA
%>J6Ss'<^orY#XT<OYY1-,Ln@.1S&-a-Plsl3Nb=;`u+aE&-g5-5GqZ-p&D2kctA%=KZue1%qH)cQiC6lI\7``g`7!5AUrm5HKhc<
%dmFXOd?LiB.mqfn^@`6@^Jgt!jm%0+9h=0E(\:X_ZkbUq>k)uAD]mB;OWA,is8+O`:(7*CI%A"I&t.\^,suMnNCYn<.cDYC5&'qX
%g0!`AWtAp5QCHN0qXkMBqlKB)Q`EUnnUg0um8Hf?18!gLX*<uV965T$pZUS*`h:+u[XR,WGl">cA8+""=*g/lKnqNl.t01WhE=f=
%<Z:n=b\HtB,ZPn"]r`@tBgcc<s(f0u5i1Hm)PEYdVBG*#3V-DtCg!c,R]Y+e#LNTRhlFqLf@Pehm<>#G'gj8;f:p1)q-(n?`c%-9
%H"n9[QYMte=E8f=L'(qr6b3/j5<kN\lo1^<C#(klUelNuc4mdp-e\C+P8Bh,en=@#*tE,ccW1GJn=?C23%$9UMb/'Q%sm#X:K#L8
%=moL"474hD5<j*+U\<kG%3q[`@YA^!<ppXj:o.c1)V[SepkS+%mJATPrio1]mfjk5K\YP,jnqOBOU3nso3URNl\.a#dXKGn3=![*
%98!31)iq0UM#u0srS\o.*2Q1,J(afYhgB-dB^^C*S\a_UXYNa./$%5keeiY7Q"W>B9BBcrDuW&qhF_1NW)7><R3*@H]g3*CZt8Vg
%Z2a'9>D,-^r;0?,j[[$oWRoUs97Wu-?D$l7&o)8Y'_Ol<B+&t^Yb>?cHe5RmT%#qCQ+6JHoR<MFjK?8^'lBFgV_3Eo8-9n41lEj3
%mD&)#fb_*mCs*o8m6mrM3ah4M1kYck^ViO@HP5P37V.#l?Ko(qMp5-$_PruB,l[X=Igo9^Q.eV([iIpM4$Ma#e[eE8#KWeA#[^@4
%Ht[A[5nB6Q(LM"X9M^W=T*H[Qf>[u3he[C1#T31"Rur7FIZ`IHpInP/+b0%p.H"5#5nF6m,-oTi%"o2*cq=Z%qj`8;EBglr'iib\
%A?'7URj>Bs)tGQj>OAG-enBG(N9IJ98jq7VKg2s20t6q*>?[R%$h;!*7e9iITZ1q1nq4s"(G4s4<r)K1U2N2%;,=Uj,It+$>0&Y;
%'ro4``:.oUIPR;7Q61nn91+D_$tYp(J!s;CYQR,A(QJQ&p4D7qDpj.cs(4<7^+]'?eIAn__2NbskLtIVq"`2Nleesc[@-6IEs5J`
%r,(Ib/s+ufS[(`65t1=CjJY#r&*2L&gE^H(@^Y`*DuL=d6XNBP5!T"PStNo'SO2X(3FK4!U\R`iICmF0WS.-HPWmuW;Wf!JJOHd&
%W@(TX(-^4PR'$)LrD1+9F3Dh#HT(9f3pp#f%\8jmF'Pb)[o4rA_YT-<M6![g[`*I*VbNQ9V/iX-=R4lDcbpl.)Z$gLs)7eqQMHiO
%m!mKmre(2]-KVbo[g5BOrEJj'[16)P(%]src^adYmV"fX)_k\YML,-C`^Lhich`%NT4[efj^_OPWl<'GLMiDB#gAq-9%.LZen*$2
%bkiD.2*Y4:T/m\1RSi^Rp&2UEgO-,(s%XmT?P?9BVqukP2nrQjYA*P"+"uNu273S%<OtJrD^IGOR!^W)T=g_2iIp_j/qZN$H<)<H
%YLjSrrJ:Ub3]j`Y0:6F*a+sblU4u$`0h(hhfD\M.jN"d\\#`o<7e,o=6pm0F6aKdqo6[KefC]Y;6JCPU5Dcr%9;Oqc[J'0d!.dpT
%&&J1j10SaKlbS#&X;<e9^%m+YU0,Rc5T'2R))sbWD;+BX.+I0O6*paKq,TRg(U]D(-"VIaT1\LIg*/smCd']5^=aI[Y"3<(r=4N#
%[?i&$N5*8:2b3?i`7W/_qX'="$gE!Iqd3&>XY*n9<gGehChs5\Q<%)HgFL:no%s.AI.8aJZ&h2Bfp(NDZg!b;g?[5c@kG.")Om.b
%aAh_eeu1c8cfpSfQ'8VP*OS#EI6FjAdd.\HeXY7u`a#?0*2f'Mc9BN5UFQ_]M<U;ER7:tg[3asKR$EBm=>O^"fhOc7+)J,3Wq'#a
%P$BJK'8_Rd%qBIC/ndL7]/hk=?`pfCcSoQ\3BNFNX`([H)b9:nplZ]_XCg#H=o,ZiJN)+l+.UTmVnJ)diIcW+E-7^4c6Q0"*jrc=
%r6<CDbNd?pHn4_*cd%Jl<[ZKk%l=^TC\@[EYEOCE3V1_MQ0S2C6i*dQH1EWE!K>fpB8c3OgWJOH`0okG-Jci"52OlTe+d-jUU1V+
%cN_^jWMA./R[M*>^=8ib_WT$c0j!uW-8SH_DIG7W-HG02h3n088nR'n2,ip:0:d!@4=q8*q%nFY`,cID:M+:lREPKPb38eOj`[tp
%Y)Y)0bVnM5S^dA\p_su&[Bd%4,\\+/E-ejRWYHmfj2mjG3WJb5=n2I$eq6XRM]6R3A_uft=j1cl:'l"@7+jeg:2.G*REO&+]0"-V
%fpQlllL2KV2-asYX^j=*8'Z-2Tnc92Z5ZkkABE0IDrZbRV5nl=(qJUSQYL$;Ua8/eJo/'HBDS8*<%XqRVY$r9d*pFOj5,a]AEWNA
%j/]H[AJ;spr,BimE"a/0.1C,CrXrRA?*p4>cZ36eI:agMDgE'5@Y6*(gkd[9j^po(q(ZSF3_M(XPb*);GrN>kVZ-;;?8N(u8oJmN
%E7:;.4./3!X0Q3%(JAE0(u<kcCK]mprEN#:B:n5;LUjOr>WtA,Rb!1VK>mNMh,<P5WRsu5Ntuq;a$P@\;Z=q[#X).ubamWEGIgm3
%`&g5d[kGGOJnh$j*c9V"4o92_.ksYqhu$H$Bk62Hlk4WA@<-R0r%tP$2cj(Lc)244^N6j-]+fLTVPYB(Sr'B2iU(u.%PGF:ob"4J
%k+X@EAg*c49Wi!.DVEe9k3:3\;_]:EksBf0iOD%@3o4[s5%=->DYBbfgAUVT%'X6_['rFLoc@,(_m$d73Sp.G4R'c,>esR5cBasE
%)5k->>j0JO@&/^@mBtI"VTUg*3.&CIQJG/D2kKu\PlbQ!K;5p-Xjl3EH=o,,YSfFg<hZmh.D9&l,lM6qf$[Qh4R7-mgY9ino_S)K
%o%bR)(n*s?0>$p5<i3,3(*RLio.YYps#Ap1m>COMVS1Ot/qdY\61)D(ahgNJrfF+d.[ifhm+&h;)VJ6]X_XUm5Q48;I5hBSgPI::
%0/oY'+0S858c!RGH[;fB=*dR]h/?og.`oe4e%rr?\kX:7e/qaeO#QX1\_uD9L09Hs\a(k;)S):4Y#l^roB3LNSM4,mGoMf6?q.-X
%NL1d%Rb/riR@Heg<ZBNdm1/^Q,RPo`J+tjk88VWPeS(=6M&nOa><2DtpG1KAa6nHbR3'[<UaBsa<5RVZlJ5G+M&/J[\5js-nd=i7
%NCX$Y?3W5^hrE1]<nHWIRH%b>&:&4a/:Kc$?V5(T^S[$'<be$pje.:G`R*[*]=#%1]=OC$VYF5!c/WojZp3DM),"$iSHSZPWlM&e
%Y[!Ss/#S(]It)n0cn4%EUuZc:1af.iD_pfbApX]RQAEuFUf/ni0=s$(RH6&;M1umqa>@HF^8<%s1]/MJeOSBR!5BlVna6Z#^s]*\
%eDfhpn',GT`SG)MLF.q@ctEq\[Q@M.X`f%3R:.f-?lpoTkq@1O=PtNnc9BR2-\9fE7k$53XOO<hdfP,]!F+L=HGa\Dn$.O;Il8d+
%NKAlINs63=%kZ^@?H@-tS#.oPB+S3m>WCpkiJ:@b*G2R+28(#8qK@@<]c$9^JqeQ[)<N+#X4K?bKMaU_OX.-2pQ`AU%_^G_":[/s
%ThD!ihRD6K-I&0olS>7/^04/+PWXC\)ecn??!!(nhG^R_c'S2tR^FmU72SVi<fP+GTAfG`bL/(M1a_+^[#:7G_*4.iVj$@.bJ1b1
%2;4N@"8:-e^t(.2LmK%_)6$D6At_<*rN6tlUhWu;b.-M]IuEa/8UO/fN-13^E7sW+kqd%pMsKrtT-Hh^'8s6:mKbqu6QN[8Hi2!%
%6$KHF5#"/$3.I5p&Vd8glL<bPM[[n5`]O-]3^2B"Xff2%$OsF#[WY/SnKrCN`R6a`>?njW+&B'k3;]tPUV`()+(qL;NFfMa8agjT
%OOl/?_<Tg&/8fsrEQsO;ba,KE>(86G%r(KWT9JH8n&hWIg/KCtC+`eUnipCJl"kk.EZ:7/;DcVqY+)PTp,l%Z%-*;JS5)b\jl3oF
%de_$nEoGiXl"W)JdUuW?o@_B!D"O8;k:[NF%TEB"bW9OccS^'>4Hea6GAHSehV<530jC6p*Iaj>WIs3hITi;!Ks'I@Uc!G308]Hj
%@K+CKB:ICeEXZ(#rt:NaL3[E37j^)HcFCe#E.D<:rd,[3h><B\E,fZt2:[*=p#Y&s!ut-Q*H+_lX_+J'><P(l/eI^LT5aLQlfhhr
%rX7$.D`p6%VX*Tnp?]cU3Z\C%>//@#V=asga]*hjh\"%I'28?IJUr5O0jAU")O\`1535t6p+OD<]:"=*jXmZC*nVLd\)_unp1!iJ
%*!pim?hk[i;r(faT(^qFnnHR<bgTRH>YMhPs0:JTrp&!^F^[/n?&JF*gAPhUBo`'Mr.KX1Z?,3pbOjQ*N#^_<40ZKN`uY2V;qQ<&
%[gEQW@^G&er`X9,([fc&g1eQP#W!D_''NS^?u)Rie#JUTgmO@,/7Oj5"RXIaD(8fCRdL+$V>6s7h`m\bdoO/\5)6H"80#R7:\/L%
%0?66]]!a5GM$ona?2C![n7=7qZrVK"X$52N.jqT`Vn+iD3d6jZm"dFmIcCt$LZPF7LXF=@4;;5F#kqN1___m`R*@"Rs0IK8>3h1i
%;5R)e8(WUc#la,Vc1K(lY1C-"A)V4MlTFZpgRIG[r=r4s(U(G/k^lMgfKD9,_W)_s)\qU(0fragCh0U06mDrCWT24E8M5Mm(m!iT
%cdsE3^Xc`'S@bu.:2[16Yksp8B'q7'l,]Ht[Qa@]od4-D8*JHI[\1c5T@$@m]C`<_(piJqm?_XJY[($TI`oj?OS.;nAomhJB/]1I
%$.p(9!P*fY36C*T0Upq5HZE/j=6*bULb_)!of0)jXIJ)]Z]jkSm:YJ4X$]@UF`A-&N5J[K5-5oQ3bu0DQbH`c*Gr7p#q!-Ahm.=(
%E\?=RT?a+O1#XH62\>$(.>Pmfgb>MGB`>R$77_tqF2V;-cKP&9)oQo$V_7\tr@7081tSW-SCYY^lL6c^S\*L52Ej:uG@fjEn^503
%h-e)(;:S%??_?)MnQbTl.Z*X^SfTB*4*':n4M*X<\')!t240cr)kTJ\\a5P+;I)<.DRL#d<F9uQ00HD]T?WM5T7*5)q)=@5I0PX-
%0R@_ZV)]K<a9&?4TuhbdE',lRan4c;;V@pRY'5o3CDSK3fr_Ad(SRPUq/W6Gok7iA*06.%Xko%rhpPi.]T8h*G-ZtBdd5-Smdj)D
%^;GEaiRM,O#)Fi>U3$%qBH]n,G0n?Cejm`+^Wk=GpYG7\Dtd3`micQ8e77Y2nZe1=mFXUrT(Kn?`L1nRe$u@a(MdBd1/5EhbPP)(
%K^%c,C^t'u.G;g%*apkfd=QGWC$!US78fd+Cd-8[ne^h*"jF<?/'M9W4s:Im1PpPsj,VtlmEOh&<Yj,C5-qMpDqrR\eB5YQaZfAU
%>Q;2Di?V:Drp@k&Na46<"nK0=+PVka.d;?KIeL$=8nTZ:]?MGb_b92<UrXMY/]F+N!jB.R`i0ojXO#KR]9uU,B9lbbI2mSWg'EI*
%6E=[l>Q5oEn8KL66)e*lS;fDY(>*soKtIj"8`mV90=>0DkY?W^`jd3j1#hFBPn;iC0#+J=/iBpk%#M<E+Eps>>kZEDk`K<5V=NZ(
%hfd;r;GTAh2)b,JokBWJC#M27T"MMC_+K@)n0O>]:ANil.#mlJg2h#p/A:YX%jIF(/+!71qK6_uqqYGXrAWBP4cm+?'Y"m"Od,#-
%r(FCsla&+>>N_8X$l.Hd9Re-WDm.)sO0OtZj^NLCe;6pM-o;ul4D.7DfPg1O#&@_ZC"]s!aXoO8Cg=(og;g<QD_Nr]lW!>=`fH;-
%`L2Y'RIKHeUljKeI!Adi?7YQ+BNTU&9NG'g=%h/EUX!l"g2Qo(aVB_,DS#[LHKjj4O?0DEbbb$M`uq^P\0<dfH)Ej3^uYuLFG9rL
%3`R;R5u&V^TfoZdR!^n@/m&VUkj[A0q#$FBKU0<,j&>):FfmmA&W?M!%o[g&l`7#&HL`]MD(HA\]@HKbBp]q_OEjDN:5t8Ka_5e9
%p#nq4Y%CQjO/n]1"l74`O`dJsln3BF;KJ?$d!$PKkN9_Y(W2nGc/aD<X0n-eQu+&/+,t2N+&Y*S0-9PE+7V5ZP4I1B2NT*9bMH2N
%7Qqi)B/4V*maf,9A%\?n)TcfmC?s>eX,F$teo+Y+eDG<S^L[Ds\Tic%%8CH/Gd_u\0CH:cZWfB/Ecn[:i:])>;m/S[B;=$A\_Sf&
%Xc_"W670`=B=9^>gi_sCqV@UbDJYi(_UGGqbDWjIWIsHG;j*&7,I!_DY83bR7VhCP<B(NB't(XDQoo"GrtA#j=61e?1tLsAi(g&j
%"3EbYO<&CW*D4"/OpYgWM#d].p<o9Vm-5NG9Q_U"T*n15*hLT'U0qSi'de^0a"B)8]pd\9%DK.UV@\=$QCgV/M`pMI)K/QqWLSoZ
%2tn*)YM0Y;h,$3/7,(U`hPIsDO1po_+3oltoGQl]HRiZc&HfaS.hkZdC47N_Y>WE]@g>.Cc+NMY]Oc8-#ES,9SbOU<pBcN)('ipf
%d59,=GTmmHCh02WX%8u'*B?8CAZHO!kL[)EStFU(mG?3I]sWoEmAIt+'rT*V0WuC1A#mY0FS3$_$ju0Q\Yo#crB%IOX_*&FSkSNG
%guN(T?T2,Ze7#H#\/?Efc'/,AZIiGI50WA*>F3\Ol%Q7eludJ/286W,\=Q:))s6()KJ[g4+;m/."a<[jgm`XZ,4;.e3ipSc-a0lJ
%p$>04TUjo/S6Y/LFLE0)bWmG?UABMI]0:gA0$s5,af`37g%/Qho#JLnS=a)XgrQ+k[&2-(8`.T.P"4b+5;Nqe7)C;A)tkr`j1A%q
%U+;X[o^qY49]s!]QenT\mj2+<Liqf\Uq!PJC0=>r[Y'<+Y5#n;Y#1k6ggp>X;LNPe0mYq9M^H`99#]h9Oe:K+=(g@L[I_T5>5$pJ
%SaM1g9p=Df6>,ujVXoJ@NX:`7YQV:'e,%;uO3#=$>$YERg3Ji"M.)QXZY+rkPK?e+nCTO$#.hG^YH+(HA_C/.@3hW8oJC^Oh0+`N
%],9iMS[JRp+Xd8/%t3E[b4@Nnr:OmAYm-ZcccBR333AFO\D-3Tkq`(3-PhhQcV@R(MI\V]V87?=EkIR85OD2>f]XjP7iPuUOW57>
%l!eCGCHW2\kQ7+_4=@YKG$5-g\`-'RC*A(-J'Q@$SnXU$]ooujIl\`sBD,eB%Ar[/52!Po2B(S"HhI5@kInl#g/NEmSh'(T0>0/!
%<UjiD#P!k+D^5'*M"aCmF0c\!@p5GFffg%Igs/$Fe8.kF\#oQ`EE.:I[)&L6@5Zl$VNVCAq3PVfQ+uY+5HSf:CV@HnK9P_H+:g5'
%.j\)Me]_0rSpHbD/@Fc"K)Nl\H63IuS8F6n`^Hu^)6WW0VI&P;@-Gda"SOm@1j_)W/GCo)3BN%XF%O_dN-q5pm,sd9D)o%#7c97+
%;d<ro@h2>lltkj/[gO.%l\Bfcr1lTY.3h>J9(h=q%0U<4a/8G6.r'r2\=W(lX.CEDq,J`)(Z*,P47SEB00Vb9F:87$='QrUI,SVK
%0cHYEY"$=LZR3q6?,7Dg20Co9bQ"ouX54L<I2psVTQ%+mPiYP8#"oTd*u@/AF\B]%59)XjgYZ#gKa3g@;S>mJg<ZqUdRP:XWge2#
%:]:!2nbHnVU\nKB4.U,ud\rI1mtt8[PK"loSgr:]:AqBGq-C^8I&]."l[:-r5IN^)k,Y,EB7A`>X8Ibt`D;N!$g67W`fE8pS,'ht
%@`1aMrRC[<*Fp]:bB:]#c1G<.@VJDGkP!KEL"6*'1RUFQfGWA.$bNZGo?<&NX7aAqq7W&:=BXIjrZg(-kWGu-YAH5tpu@E;D!F2'
%MbQtUa't7%&1rIBS_O%:pE'hX'._=[%@98;2Y$GWTq<f_(d"BT_nfN&V7^DP2#`.4hTG*-gD#('R,G0Yqr5UB^+Sp,Zj[_9nTE/7
%5/&Snj(jdlVLep'TF[7(k^5*"lp!_]Vl:rU6BnZJ,Z6GjAK%\*&(eg-FsVR*fu;u3&n&b$prZP.aCLiYd>(kkIpL<`RrA(JK!2Mk
%qk^bnI)sd/cqB:p6Bf0QeV#b<mCi33O@m,Vr]t"mnO,.Q).$UmG#AXW]f[mqF0kbCj0odqqXh-;Hr&V[$D[2oW%&_/DKY"l@u^!b
%@tAhHSf3GKM<ouP&_YR4H0>1V4oF=N@d3$4eshppI6;jr.<;]Ho\@p];EWYHH5utS7Ulg%*paY;^K_[bhlieL_Tp4VE#l]'+<Dp*
%-7s@Ll^$H^Q)O6B4LSqlNdfY@lqQ,FU.HFH/I1im2rUp90.mc6LSa,&FDbtanVee.O)MMtm*\N^2dS_@?;"Ykqt/'ZBkHJoU6=r>
%W*ZsSfl58c-n((i]TEtVm#Ze*Z)@7q&[eh.o-=@G?%a$lG]%kN=3JudnW,os?8f9%nYLEX[ofYIcJ&]&`tE:T-Af<uJGAeYQOg-2
%NZl\b4iEWcHKCa2S'MSdme&_@/i0'Jf#7o?<,^+QoPAbk`T@aoH=S1qX56re5Y?ej@$KW&9cAAj:)]$i8NJ4?el$C,(:C=LCH9XG
%bA;K;BBfB7g)^-EM><4baHSb*)jr4j`eI.Pc`pUG9G-eQ1U5U'AfENH[Mq+^I5;k4g-'qD:!\UD9^HA8WJT`naW#UP]i>T55P3WF
%2,8nm@t:1`60,<@f^S[\Hu*=?],M\(nNq'9-S?H9mNHipS!\EN@[#!cX4UD>W#hGb>"HTk#K,fYbj"M/D"]pa*(puXVda_.Q"8*a
%h*6_+/\`9h,ONmGm%!:,2nld>dk`5X1#KZ[`e'Hr)%0NrH>NR+FrOX6(9pT=jS5,b>?]b9M_1PJ+(HfY2]bW<:M41*X-("rDS.tJ
%>MXd5M62grY%&DtNKMlECaTtPcB$f#G*h5fZ2J[U&N_D:.^>b.*>LYUc;.oIS`etaH$q"U]=^c\p)(D*5Oi6m#M&.mrNS9p/"@Y%
%`Cf<QdF^g#Bfl#fcaRC;j3Du;FoLAP<o6QO`SQJbDmB"p=<EQ?j?(7(NV(NcG^<nJGk1+sA2p/`G(sX6A,!md:4?VR\i[)Pbcph(
%^H!;#:.u-Nbh'"QQR;9]_^iui\)GQ[iR./[m?S[I\CmejDdT^:%I]R*eF6o>TJh2G5!9t$E2]Pt<-<H\mO36;>^3*=*u6cQE92a6
%GTCMR$odm4%1L^W37/tg8'TGDEOG^$10#cnNQ`H+GON\4@)O"NnWD`eh\oY1?[*Dj3IJO\amO'7NN=3^X!?A30?K@TlN9"br1'8t
%\JUa'(qBql_^#!UHul+]Gk=&f/@M-aR$$*2k%UVKSpD@shHPFGSX@M]NlH"hSjo9)XliP7G4I[4?JiGU/o<ITURA2F0tJu9Z_KVP
%1N2o)VNi,a9?aT!?I,21O65UqY!sLV[[orqmTZ707XH^A(0g!q=D2OKI!9oghO,MXHT,:Ne*U+^CiOZHBe8X6*0%'`*B]>KCaH"!
%Nr6i<fYqh,I-e<<nhsNpY3<.R]DMQ3`^B9=4BBV*nVNU\_0BGe[5"i^iJ$gtIJ7K(V36G83PM@d\&NX;?Y\WAj"ngIbCd4>Gi#Eu
%n].qZ2."It-,r$Q;eHd(Xg?];g%*qoKK?e<9Iq/7>Yh0)l=sd<n#/(JJ%`3OEE8KD9\af_Fs\:&7==*;HfK"<rN`^;BfNA^N(kW?
%_Xg>>lM8Q_F3pN&XY-,>mZ<Bt4K]]a:L7DkMj(!^`qEq#mHDZ8H>@b?,$cfrc"5o3;uZLada[i).l"I*Q>K@`-XKDDkF7mGWV_!X
%CT=[^N+&U?We!)lQ@4Ze-cW>ZVY*[WD0gJ5]hGWQdIQqGGWe9>;(pg%(TR;sl'KQ;eTAEPG86a=HG#)mTRI\a=<B06ZhMa4I!6oA
%NM#U.2rj_mel_iq-V221_hZ;FcV32TUh@X2`pV(1D#J)qf35<#lkN_L1D`"IEi+(7F#1"RQa>B(g@<AQm+>3`et8R/c),[Ac=XPc
%&,"USmon#n?_?`0^*F2\Ail'?:*Q:Dg.CMu68c%=eA*bpXjbCu`9I!TBHk36ZC\"4euEf/RrWLdp@,:?(R.D%\P-Z7G&D64/a"`^
%2K.c7*5/nlrS)o[3LO&mjN5K$Zg?dTS^$m-Li`E[4`^r8dW9.[YWK9JM/\"2mS;$;aePg_G9cSC\0lE+\-4fiGAHOAVdf"pOqJs!
%&Jn+5>ZGTODD/s(FCIt/b"'0jgE)cE;q[q7e8"8TB"\!S\aQFTj\7_G,+l=d"#YJ7kFec#Y+:EMjJ"lA2D=(-l?mobXi_HT/_-#Z
%/MI)Yh=e]AJ(RuKAB)9G\\0Gq3;_oaD_okVSt8\1lbL2@f;n/H,COraFJfMsaf9dt0?3tTCSguKWl10ZCU[O2rooSjnOq.'[,3?!
%g$J'r"cM^4NF49#<l*nG_JW3'>'UTJp/XR0b$4aOHMk,^*orn._u'!QEIP,O1I#0U31-=F*KH9W>$d]5-pKTO/&t4,3Yk2oWq?O\
%=^,1QAg^aia4ZsLL!nZ:`'QQSS1Qdc,MqEPk..e-s&@cUbQl`uMf0,mpW;+MMbJ/*\ho]-bs)r,GGh3?ai:2*QY+gWRS1b=iFZeJ
%CO0LTmW&OXYgfU.`g:=N1G?pE]?Qi,]uKdFEdi-X]A.5`_j.dG[CMQe0.0e\-HBRGV:V&'.X$11P*5XA8h*oRGYFYkSirm@-h:'o
%q7f%i_h66MHE6!]e$nSLO`[@$6jtB*fU\=rPh9<b*4=OjR>8Z5Bm0-];p+r`]<1G^?6YNF3I=A0)tuEa\[h7,8hM,X:ZY?SA#W^E
%qXn<?ip=4`\hNjmY3qT_:0%aLmFGHWIO_njbm(Xm)cO?cB'j33\?klET5(MjiDsPR]AJ!=5C^g-XhRV4+#del\!ApM;cD!]-We:2
%`cJZ@gmmYch9Dee8::$mpuuD^l*S+127[q]g.G].So,R7o-"Fd8pbn?BO5L&mf^cn[uVk6e([Zr=3is,DX;IXWKPQn*1p3Kc?":T
%[N"r_T6=-oGI;e[NU6)I/m`2b&j*-%HeDUnls1'EB(k)%0,+6B.6k,QZ$bB\^MD`8%q7I.SV(=X5('RN:6*^U#7kf;FZ;Cjmi3t'
%BE.HXQs2b%h*'FRROaGk*3II+(63;,VAdL[iTp8YE4ii.]K\WkGPp*B.%EsI:Ie1.='P8DQU`P2-dC\*QW*?2l(7<*/a]&lN9?eY
%VU@s?4Ir;i+&:*6K<aCAk/1*b>d*$ITC9`H(X=+0G)@++qbdA;HZN)p\@E6gALq26\=A'&?G8OnRBKu3k,,SjgkXJQeWtTq]dhhR
%QEI-K`Ro<FXE&T7?"beF`,64J1sF4]mX4!UjPX_KVLDeCDcL,)h!W-6+)WV.oZ:Cuj<SrY1$SOY`Ug#&rKQ%"gh1BibPgg.]9j\r
%-sYr%=&.*4QRhr'q9I"Z6"/_kJ%or+3o)GGV[J:!@(2-5&B1E1HW@.cD<+?9k4-!(:ir/&f@-e"ZJ'E5np^-b?*7cT%Njd.>Oc.j
%m(DrZnus;[V2uXWHUm+?O"[V]lq&8J(7t6_?;I2n0?n)t>u*%O%Sl/i.^e)L(oGW*^UWf]F<,jZDEMe^?c)>Jl/aaknm>SHNI5k'
%G7[_,3c=b9q##:!F_1+,p%;@eDUp-]_hhQ7_S*)ekF?(2`_Wu-S*TXHr`!!'C^=ZlUp5DkGMf@>A",=!>B%@<]q'$$LRU#d-oY3?
%2lFp4Bn*6B2>.Rk"rhmVYrPA0+*!CF;Z5!r%rM21$9t)(S@l_>IJC[PH?6%RL"H@$A,&%N\=['?4"NVai-paU%\-%+HWMafd?*Cd
%EiV<eDjH14:ZWaHmD)Q!grB56>!mdd.bBDYGrYdjq:ZD20u_I-X'o8o>PPH>=G\ZD9FRK!\7>Bi1=$DOr/Z/:W)9B]la<F,WPU;P
%_DFraO82CbW)>Ft%J?E6Ar$ZZG#4q[%CPNcW)t+@nC;.HTk`FHpCCN>R;Xp^Q(khf[FH]i@DWu)**++r^!=jCG!*WLLLshAkY8#(
%)X>gYnG;^o(OHBZ!Lg"N@^FK"4RE(/#%m5p?E*(r=,m^U@JZlpaeGaS[I^e(^A6SJ(K&5nc-#@EUSR;GYEPZgMU>l$6i2<B_T[T)
%lGIbJT1tu*3Sc>h`qOkXHPb7\f<8=ZV=r_f.T+t!r*t$4LPr)8qE=iOih*16C;/4^.i1r2jhLb'LWpj[\2q"J[_`?6A%tba+5QVZ
%kq-Y"i^1o9YB>Z`]2Po`MbhUoCH5&3@9t)InY4(mn7]"2ki;3'&I4_O_d$t].K?VtU:\ej^?>d1jUL-5I<t-_ru-3ihn\UqWC$Qe
%^Ce9Yk407kc>h`!n(nlAn@OU[s28b@?*`_OIVT#>IJQ>2`#P3%'n]_Ug(4,UgFH:=7JL%Bs,V*>jjVDS]"HA`0!,c*Oj*`-^%p*[
%d_6OBL0KI%8pmtf7Z"XPnkf/U>)BF:Aa^Ir/d`1t0\IhsrBO`T=7#UXG%lK5;T37]ODf(#s&&2V_=&bqMu@8-Ir9mbK'tYQo0JcB
%K(X!HNEVHTaEueD"X/AEXmpVF`KksE%=\jNKBiA=^3R1@hqc3I?LIa^2Z,cgl2)l+GWuP(A#-PZVXnH0Jb@bd1rk/Oc+h'<&!pZ'
%[#:P/`r/s$*H__A_Kr>4#X!Q#]l3?PruPmAhE.6UCH@i&Nr(H8s+Sul<]Vb9j2tcPn`s=d.J\/_po3jgW9#P[eh7`^4+?E]oiDrN
%^:-e^b5YU)s/TeRCi<D!V.RIV3djg%7c&O4^jTnkIWgM/db0*YWqAS"AGWBMnpm]r0bZ<JL[uO_Uc*s4AT!"7PsOJ?79::R9K%Bh
%#>\@#7qM>KpG0dMhD#N:fpC@*H\:W$h>rO=HN)@ei`]AkJ,'V!a;oNO\/u4>e^;7OX+!2s[gR]]O3'`%7!l4F@lKr*p=ZLU:,]E=
%[bIZ+2W3@fgQV&:7[W0UhI<(nTC]hrjZbeUq2abMAs!7-&$I#i^39>NhQGkI7Gr%RShJ@#Q@8#he.OtDCL.86F^MWEFPh@mrXXD2
%Uef;>qqDYg[[j+m)eZ,A(]*[k0E32D2^*k`LVb`=KONdL]c*QE*D+Kr]T6Cb+mJ#%d9^KO!F?ECO;I0^+DNR.<Q73A-ip9=#e_?#
%P$0.OcU1'$-FD5#OS$BmXU5V(&P0qa.ak)`+JA$4<2bK9H.5U:"&?o[o]FT+;C-!GkY:&Rb^nnhKhclaLFGla#Xk>?,^&L$)UD$:
%E$smQ-_uTRY%a_"g13>3W'l.pW"W,U!pWr#1)qYIm2->l<J2DVlFUXTSkmP'eV]Hc*(UH[UiNFX?</,WAec@]G=Vj&6FkML80g;L
%0IfeZOK8J)l"<;_'n2MUnFgf&.G>OX'$.uFV&=JF$$Zh;T%+uY5llHlG=PPlK`6Wl\>>27#rhK&4UOU(LG5B=KaRTH)M7H0#j<T(
%l>;u[VI,07#octIQ7Ag<>!:h&&c+n-7C,mQ:dZLkn:Ul`8bt^9%7<f_C4[j#L1_V=Tn4A]q7Bi#,XU`"N(?MC`4^LqCPF7^j*B-c
%pG$J[(^Sh`-fd`81ko_!g9DZPoHEjT]JJAOL?9$MZt:LL&M6K$C5,'7lNq9K]Or9_H:UFPrD5p%l,o)/oOp%F-M3!E-4C0^=CQVD
%gf-t9-1j%(_Cgq#P#Q>_d4.D4gqPN4TJFcB.`5egUq+Z&>%6]29LC)$k)"cu+UCM)k6^-%d&S;7U$mYCiqS=3<Cm!&.VtGjW=`ti
%mR.ObJ/nrabWY&D5e)CX,DgeiLs7*9K/]o*(Dkk!5_oZQ!lmhU8Kp&XW3Klf-D9P3kaoeFKTIgr;_gU/&kLIDBUUQU:XPU4+up]@
%-\t/:"$H\Q,<C$85@B9mc6l.r3"HQBgr6A]P'E0Cp[8;3&#92f'-grR$Lb3sN?fYi"1)V$\<.1r+]"&IR"c;gmjh]UXd>+q5l\"5
%&6B)@2q#ZmPZa^bDFb=`+c)@*^9h@iXG6MonVtnX6l@.+8<HU:WB"B3iSfdggrsh1E%9R7cSksSIe%P*eH1g7bu4\-7&V@RI$Yca
%fatqT;A9,mg8B`/A@*1?4LGM/INZmaO_b^?nX-`kJiDp2\OpVRobbfhT/7o>9IC7mF+I*pQQDM3RnR[5&2PGk@/uDtT$V.=K^'2F
%LDjh=1]_@M#[3%f&g<XdNi$+>YU*-rbm@:-pmO4pa0m\d@bq,24qVtXN[AIY_a#Q%VR9p&,Zb7%,V#cB-LMP&KLU7kNfb&Sj0a>e
%@Y$jn6ke+ho:RQ5Gb1^^1j-i:8.Z#pkD3k?8-XksQhVI17@7We7f"cGL`_?_Bd?IU-\rfP,rh6A*]&>d5TV%)Z?.?Z![#:9Gi-KG
%YXIkGnd#H*g6S0]la$APR!ZU[g*i"*e,p(cf"O6haF^cFm8/CV'-O[./oB]?78D/lOB$9%$NO3r69-*?#[rX76,RqDZjbRs`86q"
%'H>)ePs,c2&-b_DP=0PQ=[@C#@\*0;EDbp2]u!kojm"kC27h5bO?^Z6KK`hpVsD]qOM3$7"4]lbk)cuY(e?orGm5`<=;C&<B4HKX
%MSp*JE<qE?+JLG4QO)kbqcIVa7>rAnN![h1G?QR$"o)/g7RY;J=<QEiikR$kAgKb7'>jHtM+U[r:l>b/:aHu(RfZ:44@u:X!CW`[
%m@[';a>i*rc[_s@6`24/,]j\c'f76?/n$SmSeXF[Q,G6lH(c*A_S0J&$sX'PB>Z5E+n$g8#S\1oRtScBHG75-+5#*V<0LHnTF-PW
%TR_-Kh+7q+mfZ$^JMnWXBd4K9n;Ae*e5[!S3#SHAV[Q+BTKS_aBg)pq*)bC3cCS&tK"ACa01,h>fKBEB&Q/))7It=,od:l/>ge:6
%G6e_RS3R^Ug42FXr$7Mjiu+d*+M(--"efjicn7]ofnPqBB@fSHhE:*C*GJRo=sMIW$A/E3JB0'q5culC-2]c8*Q6DJR+0([AKV%t
%'_EF3,6k]P($l(rm+MO1K?F^P:O*_O!euem[Jc:8C929$V5]LA@mSTGO95G<a=$#06,)ej/!Wrn7F)13fl>GoY%&B5n\HV"^2]hQ
%!=B5:8DV1T[a.FQf:Z]]2W%75\kebT]8gg%F_EB>+$aNW+IT9h;)3Y&nXp*rK_0Y"N+gp#ZW^fSBm<O[#*mCuj@jg<ZrS7.NiZ:#
%;^8/:d=]0<^WAQ7]G"h'.[F7'K->%?_@@$r&sHsEA$Wh*&QhuC]\_#H/jA_[RJrnchM_i%A]IakDjUpM8Q\<$R3Prb$u?B(>if1O
%$EXV&7'+4-%$fI+VJG(sh$K\kJ948rm#FX@?4be*6EmD]fm"V`YUlc"4(lF;@d2j8D/V\`-<=*-60oM^KS6^?ldEpJO==!2$WOIZ
%Al9"r3$*_WZiSp3P3&`DBJC%pT+!<73:'m*&VWE$!_6BMZX2Z5km<E=KdK0Q1(7Ah1<Rnr\:\Ik6Z#)?/6fFl'&KE)!;3R*N%8UG
%Nbc;S^qn#N*p2o1O9:cncdHtk)3B@l=38NQD0R"/8@&kXe&+!M1$#o$&p[6nEg<:oW^^q2g-4i6R^^Q:QDR@f=j'.;a?tFY:P/1k
%UWr.]$:EBBJm9>&/Dmq3&rZO9DlH1C)1gKTL?#PPE(?TA[IUE6)1VfF`q6\)T]'-8$W-H3%m7a@$F17u0%h8n]",'1XSL'52N&jF
%Qq,8hYp,V0<XsOe1h>5m+Vl;e\hH@5j1l1Yq;ENP5nfsRC;CYm%3#e)TRTA%5nXGRM.r7/(aK1;CRt3M(1=4mhm\>k9882o+<lL]
%3-O`oFGd<VQi'Ut;VVepd/f#V#Pg#V>MFZ[`f(KFDBQ'Ap0dKCBg^d_%>gd<o@+`2K/7!T?HQpmj]H/Sct/ga^ck$%`n$Su4`,lV
%rN+6di$0)E!;XVm+R;egr^W[=BcA:sF'[\k?jNBqA[W?i7,fG!98FE`=:fa0L?dCk$4T`!mLpTj@t$[i3)J@_jWK?nJ7iR:Z's#f
%7bS!!Q%:ms1TG)U%_`lk,n+hAb$'4(nCneB03N#*Y0s!EOZWmejLHI4']d*"BCYO87p'1FTIU-Rb"u7Zj&fmBPp[%e^"lo*RFDRS
%f^Qm`2Xq_iUsXCHM/b5*2Be#ADfT)f"*K%Hd.*+R;:mWK:`R<6,g\jh(rZZZ$u\LEW/':5`07Wm#@X`b"`g8@$R'T>RXNVod7-2_
%\3VU!b"+rF9SaaUMSc\B#=:$M1AK)H0Z4$YqS7h_Ke=X>d37*9TZR'V>U%YAZeCMNeQ?$2@9;b;.V$u"%ZP:WgZNZG#&IbR&/6`V
%(Da;Q()0$Vn[#Y=4@S4!4%+Im/C[au@Glo<6Nk"$$B9$j+:5tVWnPDSBFs&pd"e-qP$A=\Rdc#1(?BfX<<D\:2Vn^j$=]9K%crEL
%o5'T*WUYXAE6>GZ;X#%]cThZ8@=Wa#i!?-;5=>uT"G&7`+r8lL#d>"Gd)'#]X[V8:EC^ib`eqV94@<$YJQc58+M&6QSWRPoXXM#3
%T6ulZ=U9:J@'C&PcO2<]KO>r@X<#ou.Jq>b(<@X3L?Uj:=\(lNlW^ESlq*8m&_2'lB]uCU!o81-h:O\9'489=9HBi3"g('W(U4d0
%`Q<1E6MR`M8;P*Cj=S7b@<FjgZKJNd"P*Ap18$6V+]'t'_]7#C#Oism!nBYP_Om1-V%+Grh$ATITAU%7gK:qjaur"/Ob463BGm:q
%^^(+^*jlSAZnISp*TUB"B!29S_@T9^74?B_KFsCrW)7-V1C`Vh4=-/^YV!3gZ#Geg6-*SIbbGfuHj32b!g!\4@8QZ:U/`$6rs;$I
%-)*n$TLR]&_T"isa\iC2R4uVp0p32R[f@aU`l,!\q[O^%SJ`^ci3[Y/Cc6sgZnZLXU*sfs.CbIjF`4(t#`qoe4UVmY!<PYk[[N#2
%A@kr[^5S^;[#AJa@qJ4p-YO&d$\p#6,U4giTHG_bTKN&RqUH`nD9takL]A(1TNFM@)$Zc\L;!g(9,lp5=(\]KYn/3t3COlVC<)>#
%W?11n!dW@i$>ejTblN=rlZrl)77Jq&YaTKu3^g?Im5SNR^5G5pR$G*HLXsEf8%`U>7bUDNP&silHW!tR5RPpV#"%ne&D<_,aPBn@
%Ymrkk^.GV`]TiaY^mcQkik"hT&O`#fU19t<&<2p1J,@7D0ZlAZW<)7ALlAb8U*.5:Ep-"94^sR,6:LmJ$sh20,hpHI.!NT%J9of'
%'d4rOS;:1(WFnJld=j:V,\0Ba4KGi!9nUeYAd=_6?W\D(2M7k>KF#q,WU<#_F1-i<\S!97@"&D-401i'+%0(gPYe:u.i(Yi1$\iY
%KJH.6H%^DHW?@!8]#oOCUNFl*"P?*b,<m1Y*S__KOC3)rlU(h0[7C9/Kc5)0`9!Gd3169CD64SGI$5]R!b",7,V*\6!;e4LqG[b7
%$NZLJGb\hq_CkJk(MRLd:bVN.d_,iX5'2FcAq>TM)%p>K_iC`!$mY<&'@-eD?'<jY@g5XkD2#n$%WZ#D[a5Sg#XsLL1+P1g+6cbC
%eWD4'7:J`/N$ZS3=Q2Y^"rdaio8o%KL<.8pZ&[HX+H\"i6l\`p!"B83db+0t%?ms7A.e-K$q/4QY#?L`-lD1Eg^NF,K[N4=S6-=6
%%Mg0(*GQ8["H]BD!;\;q#a+l1VA\Vpbn0UI!"jeB7[QW%&[?3[Tg0Y?!BB<ZJ8Z`H+/Rlu+%ZZRL*I'!OA60kdY%W[15Q'o0;lD`
%G2PK;&2Gfm+YRS>q#OsKSF&]c'<up&pn"1/m?h"iD^jMK\N59!5;4?J&e6!kDZJcAk/NKJ>(S!:d/gDKGL$Zd+<iO4nI0e5Yeblo
%+_4>bTZO8lcu:g%_r,3h;g$U%Dl8,2L55jR=b9$j]L`kB)Wm!(0F0uj#ISR+OjaSe#!``G%RKB?jlMRE,BV7Wja^QLT2QE1UEieI
%`(ULe4/&Bb+mg43Ltu(hTF_;E;(tn=%eBkO1f9:Zq&/-1,88>Ch5"XnLL:4@<66<k3;_rm?VCY;a?s-08K"?^4luGcXViE_*V`T)
%CH?"@n-h9LNjL/))*\rLQFIg7a+I7P+?>/r$>^0I_Dk456^spX.1VAX"Ni(RfE<R\,!Ljr(!A%L`SnHS]10Ho8't7qZN7!N8*#4m
%BsVM>jMC]6mNV7u[>5f)"e,s8\BoJ`!n:s?W<&07Oqk6UKN9eD]-P-PjPCSe2JCGK=a3\lEaf8c1$=`<,",te3$.6;4ZHoTU"G3E
%:&gnF#+7b,YU+D;qEjl^c,ae1p0D>FTMjML6SK9'GXGCX^a:=?O+@oWo+3W7W"1oI5QI7fKjZbrp#e=HM$,*WkAg&Gi646&_asJF
%B?43s1F\e+-#t/egZ5RZ[L#5>S@jQ0CB:S'5*3*r;2u8T%&?IO9I30J'\FiZfn\i%@h3Y2"3m;@2<^LHTGh8I%^,k2+kIZpbnG+a
%Pk`,:/*LH^-D?B>F+CN*X>oH_KM(0jbURIuCB2'Xn6ecEMK/"d;D4!ccq#MhOqs6.j"R]3,$U[%!:?9$aR&LYO6L\F'[;#YL-;au
%=Fp^C%0Lr2H6(+*L9kO6FbZ$'nqaFS!Y_!@%$Fu#f`_FlW%A:!_PZ=)*)$LRk<P(D&Z3>W2L);L0Pc2l!8jSI=W4!X"&%[E-r1R<
%;:gdiTtn&YT6gh">bg7'$q/C0Ec)Whl5I]I#KCS4!gOm$A3'f@46U-3GA45ag];*T:^NU%<G!)D5;eU$6m,?tN!%6)9E+/C)/#,]
%U"Eco5_==orPUXu#0;6SdqWP&K@'mRDb3Bj7Yi5A7UQ6r>k.ojNeA!3*9]K<=L.K36ce">eK[AE:ZMilD1EVO`de]Mbi<r&)/sPh
%R9j>=FZPu)@59QFm)"qX&<h6kN;FhZXW(sKM+HqF0nqT2b%tWKNog);ERQe'#7V&p_[==h8EupuL29f1ILj[*&;8#>GmOKd").kZ
%mZQqs"9EQo$V(j;ed?f__jtqfaDp1o<(K+7H5uGtT>uNQ71e_\-;m+_h6c^FlE$oF]!`KeAu6Hi4obYeL&f#E/0tSl?2$A)?_V5M
%KdgNS3%T_Mq)ikeM*;0]Cq'[)!Hejim+O25*^ZXY"?IDI!r&L9U)L$n)NU)bW/$Ic5m-<+!$GY)5[9YVQ:M-/>Fn*oReBmk_54Nq
%Rt.=TP3qB[NjmIiKfgE6H33D%_MZ<mq(VV-Np\k\JM8Sb)o1tbY(H1,P6S>=K`M^?OWBY+#H%X]Bt4'H$Gh#k7-W(X"dpgc4Qh=i
%\/C5`/djCpRG%ccGqI]t9KKn%7HE^&a,k^YM",W(k@P[G^rASEjoiD4,rfS6TP;UsHY1]l$FG\("cg&ID%siZ"p:0e"=lsE#_Zas
%X'WncW(_4`$fhu,8>p#`:5oY*5i,`_'_3M@n7X>Fi+Oq6UR]=Y@5<Nt-.Z\LPHfHEYmY?l[;$M2^i_,3X<n#*F(7=`+lRGC6EVE_
%&,R(R278dpbS$TdT::rNV@3TMH@Ru2dfU4B3p\(,`DSsB6l;m,[a_!=\7Q(68WW%0+(1PB&JU[)-%M#Xda2rL@9@9D9ZG1A1_1/#
%SRec/V+N/3!Y>qLaT3K#!1XNeX9Z\f&8b>\M"Ut&m4@0b_ND8K`%D(1=`sgt\??pu;8W#Jpa/$@7cf+hTck?8Ms*GWQOj\U/?Vhm
%i0mULN",h-->S3(A*UqpY_!EX"s'/X894nR9*p8SNRYU)"WB--&_O%`i3HD4]a%i#SeN/!@+]O;eXHo6A74Ar+<&T?dPPI5aq3bf
%g-A1(#+uO6"N2TrXLga#mQtOlcgXE>PiR6^/I87T":G#_Pd[t3,Z:6G]Ds/D`h@$Gp4.+:9Zj;59H]b',L-a(Sd)!j@u/X^emfj^
%fSU$=#h5B?m'<<6'1CMP^_K>!M9nTOO>=-&a/n<rW6Q<:,16aqEoC'grF!mSqeH7=LdFBa\mG"C*8/,Lme_Rg$@u&VmVrjZHQUlH
%\=TIi";@+K)b%VsAL/RAcS/9#gk*<I'Fd6c8D@e!"'Z7h4MX%18WY#H.eNcb/ZBU@+X5X+#E9Tm6H'bbEi:&.7Q7s-1Yh)e>T7PV
%$7._-a(RCHQEZ$j;qgEEat243rY)$IojsI\aXbmGBJQX2A:,9S#(@)X>[D'l'n@GYc9US&AdWK/6Te*E_Ocp&5Y$L`!<__3J\j>:
%AH]8g+Ktj8VdL8JR*n<]0+6>n<fRB]+0qAA#&)>[l:fi/)'B"6%,pJQXfN"#QIE<Bm"%1l5q!6g=qrF4&aEAfEP'>QZ7Au",$rW%
%*2cOK#$D:h7"$aF'$NTf=9S5_F`!MieAFV-68Bs6!Us$QOjF0W+95);#h%@[>hQk,<eQ$A9Fb-nWb8d;pc1Pm&D&e9lJ0"l!n+R?
%/[@Sl*.:#B@.;)U!3BDS<(-ZB=C[Y5:ljki29)_QE%Yec4k,/E3Cd5K,[bZt"t31</Z5jZ';NojeA*)502eQe=@SEh%Qq$Wm=UA.
%Ra:T-JaFnekG9oDI;N7Vai0QX6m\X+lX]+F#G&YqOYPi5dp,:d/It%,bLX5)XVJu+,lmHMk7/'R<+b^TmfiT:iLAh1'h61fb]IYF
%ndu9B#SLS;rBPJl8V-Fg!')hCK9g]r5$jJ()mJ[ghnr:u`C9H)U2(0dBEY8R`.1"Z1'uK-AmCkLfh7VoTKs5PNaa-0EFY*\'Z0Je
%9FdSf,S%H5!iH=Z8ElMG#Y2+%+sYHf<<qG4L7mssh.7Cmen$Po?lserbW84tOnGKE:ms)F,[($LAh?HHX\:$"S)62cJkAinNt;12
%%"1C!`>/gKKPMifit1=b)B]e#51^e1i/eZA"uIA;E2$a$jTB/M9nF7+4^1`<WW[ul"KP$c'?W'JB4XarWU8(IjK#+qJ1a>=:i"DN
%'=M7U4X_'RZrQ270`g>RiH2=mi68YsD5.F76.'[B:1,4*A;VdnDPTGuD6413644C6g>@$iRja'Q+qi31MF8?6HGZ!08.[&'Xjmf,
%Q:^SGXUYFW67[Y8+UgtsYa1jo>*Q>2Ke1^(2!:T)]0'eBDQR(.+<p,+A[-BtZIG'M)*%_Lc5L7PW96MOLuT=l*ch&F_o<JtF3kn/
%:aRK>X`D,=d$,2_dY%/4:cd<kWiuIii>S&5S,=Cd0q9BM(5@U7<d.YP\_N8kE");FlPL2b/.tL"Q:)Q>D*o+r+pLV[1.sk[.K^#;
%UP3/=Xa9%(JVEsA;G1k\LB4qF\"Qsa=HE_Ig1NjqGpHA]"hkjB]#$'pEqt=L6;D5rk5%A#BAo4t;&AZSJ<;\K65G2[1b;i=ENE<G
%&Qb0I"Y+(]m\/57To=SG3p31;ZLt@#q?E^n%d2V0=@_%iE9.+Q6JKRMW1G*]`q)*PPL3Q^Y$OBh%2WqZX&*buc[jD\:FBhc!PV->
%C!#PsOKT.2R1MN4+=qMlafWF1PP-7jOKc,aW;M1Hj<=4HCb^aljq`^b_d4XFiF>9H9UUWfN#GF9Zff"qJsbXGc6k%oW[(F7gl<`q
%h1C.Wl".dd6[QmK+f?e,`0uNKA.bd(#Y,`s-mL?)Y3?k``1R)Z(4`4(,s?'S\ou)tkbGFkQRtPB>A\olcDW0*6o2o;pB"lG&<.o/
%p<et-3ZNt?*nJ4X/jLC\IM)u,X@?ZM$&>S=:kb`F<3*tF%f0"Q=JC+VX_mHcK&u(G!c>nVs!UnZ_EJpSN!.4E\J>Oig209;c#KH\
%^)NM+$h8tR+P(A+^]kF[C;b+/3$/@>/P\Z4S]u#q;cjTk3Z?6kU+0+_D%:1HCKk5I]tcV]T($P.X2gqM^3:-rU1JJ\BGm`Sb![dS
%1s845@3KLkZ$#'-'q):'\t`Do#DW"N<NEYQ<l*-j&.TK?DF00*"#6%d&9:@<A?$l"lLPlh'qGj=,UuFEHM>3A8Y)8j+PO6$;E_jf
%VAgQ3`8M&;4WHBNU/Km!CBP61oU0bSd?"H?+[W0:@KP^+18\eS"i?RGgB\sEk)c\VA6U987k5IQ4jT$7_@eQPW$>#VM6Ec#[JLMf
%$jmtYP9CP'O2?ghDemrkN\<p53JUYr0\26LD3'gbkUf8d4"_h"BVM2[K"5K)8@SJ$&'P%tBuQP7]r2L+6\p]]&.TnRq]V<8UYpdb
%!((dC5nHYp+Uag5YY"r)=(#dr3@>JS,0a->&Z%bKfjotm.'0`>:9o7fJr%KEp<DC\"Aui57R/j?F%/$R+'N7:$Eg7ZJYf)R9j&^(
%/^gY%cOK_C,,K^R>S^7^BoDK-*BS5#MJ<fuH*sd$F\iP4=9XR6jC*IR'sEBj(U!('OlDY"X^Z<i;Tt4Xf#@qn_s!<qrM\\V,@sP(
%a:c/K)&n[$eB/=c7hNuh>#Vcm+OqOc_mddtj_n%c;H]fY*GnWQ%<M#)>!KCJNJ+o(&8Nf8_99'3M^GDEC8Q";TK0ZC^nGP3?6V;O
%XaE<I66NFm0:HC\j;qDe7H+YGk!4S3SLJ9Mb`Pi!HJs!Y9SQf>1+R/BZl^[?\H31$KmYBq5WQ98lhfL9=aLL:q:aKN!lb!qE>No>
%VFJou85aT$I[bDq0mUeZ,88Lg*G8B_51CQ4G;rkD7S.AIN,<'c9C`scclTEXI#JZ#hj8Lcj[:I"]Iqa.^,@[5Ec#R"*QOCqZ,bfl
%8,+qMm#25NE&u>efbZ"1WI6]LYg>?!?8i9EhE9c,;:s2L<SIWk:2$A@>_$M3,#1W0jEMI$q7<W96DMdF4qOWH\ktk*#TLNWU:A<I
%MLAq\U,nTOdKFNA+PI7]0rcT,\B"k$PLjqS?/V*6KMbi'%/KfICfe[a5"rt-2i)9<iYV`I:UXc"\6][NWjSD!k+fm&JJi0=Hf+-0
%d5AtQ^s/;U/<q[>?og4VL(_KF1fkrU[]4k9"1XT>5t")0gm^HM_'`6AY:m8goZIK3XQG@-LUMI1AZI\5==uSN9ZT?#3e3-VGZY\$
%a`Ca7A49(Ri%rDZ3"r*LSF^Ri[goJuKq_;\4H.F,DWaFY*r=`u=Y`lZas\,t=H?R=?#PR\jRQcFj'$$Tn\l*=c8=Z)J]ORk<Z>eL
%UT/B1DIX_cg"@7rXC0CCVg&njq5i,djVGkoJT%;C5&F":bt"O.fA,J&E(`pJ?5R*cg3h3\D^\P@$Vj,b&YIgdol(6@d&hik['I[k
%$Ro&t\mAdfeO.[o5Z&C`8pdYW"/mU7)5WGT8UO-98'`AU"A$#M4`mb]cNj/<'r*Sq2d=+i[Ur_lC`./5/rG@dh-.RO;Q+Q[KgTX^
%dg!,9_`]Cc0dl_j1'+'nHTZCQQ_RHC9`mRm*`uo&i;El$Q6r=ie)goi5qOYhH)R]N>M^?AKpCXiP?h7eN$!pIfeS$%SI;K04Jb^l
%LXb&C,)$"NK,bor+tmC-^M=1=_W+#rWhmBmO4:`nNf#ZSB6-c9EO9ZO*Y\PGKZX'\VN>ecHu1uq0VZOOa2'/S0/_`lE57-BoV[ZO
%8Q0"C,;[JgV'r.%7O$l5%V<ZQKo.E3(fh\"-aSPm%!j;u>qYPUocoEZa2Q(1H9UpUq?jcd,;a%Nm!MN5=9t88e-5A.0*%5mHpa`i
%g^Ojh.[oPqZj[=Gc<]HrGkHTsg-YRf)Qkb#<A[]ac9D:GKGM#tHqT3]1)s^,@Yb]-O[C"$a/Et%7lO:T-+I1np"H"rU_))N+d`/L
%TZ]5un:td@ZnS#l'sN('5@e+sgT%iH:ZTX]61tX&aJT%=iIXNa&<S[Y,W#Ku2YX*\XU_2pN@8Mq!;UR<=/EbjAp9NXn0n7q;?C+!
%Tilf[8IT]Bg2QFWLh$m&8Pi'ihuNOl$uJo^7MlKLD8?6[hLSLHL]b60Oe>Ai-T"'h/gmb9cK-`XI<54A<<F:e+5KS^kN/-Gl$O@C
%+ACHP*sLdu7K/'_C^D=E`)T9i4'lU#I@NQjXop5dY\5XTbue6h>.f/6mk"mA,2E'mf&+t#L8("g;k-E:F\7&-#6CV19i[?*4$uLZ
%=*ESp):b4T0C2[N+u&=;'a9,lWrn/,)8gk=,!(@l7C%G`Zj-@=B3J/eV6i!!@449;GH8-r6U@F;*,l6(>__DaXgoLtAR]Up8rYLp
%Ysjm>X3fA$#sQ&T`DhA@Mk)lN^DYr6h0F$u)TB6<E0Ol$YR.,IlLPE@c]c=71eg1KVSk@MF;[hUG[,LURbJ-nStTqpl`+kcl'aGF
%BI#Y0&DDm'@0Z5@F/^^2Y"6[e"e%7MW]QsR@f$>N;iYWKn[VNf1r:Y7"HP@#S.@CkK(MnI:(TUj#ucAXpVH5hg8:TP%.GQ'Ra^hY
%[GCu6P8@E"^k$k#g9Ie-3\s?D5#'"DK3LJqgZ@Q@;d+#>M-Wk3$"Rn@*tXX06f:mVF.l8EBG6t\+aNH39qhnN+kkY"SnB/HhdiDT
%pp$e;na3#1o]:?FHQfb+YjS9R$3>1Q]?Lbk(RPOAfu']H)c2X,%#*A!*L[t$.9=<)aQR\"J`Csp;k>nd&S,>iK(3:7+T*<2h[l6o
%)p3F.)ppAUY,N9rFcRMZ;%.F1G<Sd<M*B7Wpgbo(2<dU!s/52-FY2:3D))%kk9%j2A6b3)2F4tI$\GN3/GGDY6[u:"R`N%NB5CtZ
%W6Cc*-5hbcN1cFB/<Q>)B6&RX$DoT\e\(QrlsYQ`ABG!^(De>(g#3C-%7Jk9*<BUu&.U:X5r&Fn>QV0O[`=A`&IN(%>4>So+Js'S
%G)OU64$QhN%DB+ge3TW<,_RlHX6a>lX)/*.'qeWqI7!`\S&6G/M?G`SH3-&Ulfu2p@jFZ+JeJPM`ejk-1MpEM`0>["PlgLJ^8f)E
%kJne9mb[O=pR>ht1S9p)C],b6]!&B20!%6-#(D@^&3011:i,`A-,;Y3lPuZqh5_I=/tb-n?hbm:&)2*c(4Hc@Rih`d1:=3NB"ua(
%=u)5?21`!X+lR<T9<+G/Upb9%6DB&@/AAQ*Q1e-R5W2^cNu36r;-)&Y"Io0m0QMNkD&pp$KP8_`6luY,4+6/3OpHYld2hXoA,oH#
%5X[?X@R,P3/:/21+4Y9l&8<q*J,Q[p'k<AH`&?:bH9ce"\e)<HK/9\EC2g+FW_DD,bV?aWZ(5=A[M4a$hf][fE_S(\'Suq@gc@r^
%]$"E+J7ZHrWHZu4?,338]e4p_.-d9S<i67W#3t0YoP:94)'XhcEc9*LWq;)[@b.c&`ReZ!i:?CHk6*CkUFjQGYj?cLFT^/o6;<qd
%4cRY<pc^sBlU"L;r"bJ:46fF7]ep.C:W4_i%o<Pi$eMkt7j-mrZJYk*3Hc]R<sfT/E9]29O@%Be_L?&#>l0$#XnAA9:+cU+D)Yst
%qen$.98j8q3WN:mfA(J1'$=(N=QlVg`Pi/A!!uS5kj_[%_!>?H)O/@oLcYk=rAa_+3&r@3*2/q.eUd**8<_bd]u0Ga$*M8PO#(Pq
%/mUh&['BjD\U,"i%h"S7ENH6l-`>f)H@4s0LqPp!XqIQDm<T]:!/X7W4S9@V*UpV(5b<oSBi:XKe5OiH#I!!?Tq^r+L=N'Qi\?(B
%F:oP0\2p6gB3sl/EO?OFlOB$&II:WSh5KBt>3:ln+AG%a):JT0`jl5#<BM.;,h,-Pl/6X0AW1_bdC&"i&C7Ir!8g=`8d\_!!O(h!
%Ss3&qQlD9*;GaWIBPGIe@>G1GcJUT1BnZUYV$prRSH[ao@k81#&M`VQqo'".)@Nbe]YS]2hGMFHYh+[.^<MBo2.GhA1I\#J0!Ca4
%X<1.GbGcuXRmEYJdBTAN"[ge&KPL$aRb!Wg!5L>0XaY!4/YSZN)hYIQW:3Ufkr8h*@]l4j(!4.LA-Ofe_4n5e=^=[K'@80$hd%%R
%WOpA32)^:9WuS9p]1e\HrTKnuQn#M`BK*2>;BFV-C'<4<aF!?VW)e%6[sR=:!JD;GKEmtK5uH9`C^@peEEPBMKXaX(Y18;Tc.SQM
%NfM(PFEDXd^.^P8=QUUb-/HW1^PcB:0KDt\KZfI#TVjVd)UJOFl@$3CXG.4\_9sUiJ@NIY=]p%b@:3G0i\?31S->aC'R]D=b>'5u
%Uh[W[iPY>:Q2]g*>lVd>531'2lAU^E``5t$7Ur9FEp7,O$LM_>Tn=VWS97o2bFjR"EV+H!E-#TfaDj7.iH<+?Y)r]eNJeiZpmpc=
%@Fa21Z*rr;ds>&@U$L"+%W%M%YY]eJD#*t=AHqi'N6n=;rT-SNB?'7td[1L`b\Fd#LQ>YP&;nOZ:AN?t/c:NZLaFA'6>o4-1JhZ5
%`3BbXeX'co8>>Q_=K9r<%/F[p)n>5-.bTfY&KdM,E$C!p!blSa0^^^GJm/2-4^cBOeN8:BZ[3%Be,=SOVl]Bpa^>6T)oD)#XkT)2
%7]4Xf0Ej;.He%n's7=DZlOt[;'Iq$^!;QD'@CR)2R=7IV+N1$a.CuE])*UZIG6t$;>;bWJ$!1Yp*N_`Km>>m<]>HDs68aDb$pB'2
%XiIoKZ:r%F\C!2.[mK#/4CM<c>l`\0r4Uc_bYIfT\ICVo5Yjb]@@T,!m,rZ1CWRPS$WnX4PgU5%lRq&/G:M%]HiPG&*1QgdT7<KI
%.\p0P<7<0L1gK9YD*@3k:_N.3(hq:@^2Kk36P&h#q0_.C:@*8]O.ZC/QtWc-[m@$;F:AK>#DNl=/95F2[pXMt$*8^qc#?FWGuh9M
%+)ZU\YS49$grMl/B(ZoQQ&^G;%n*^L_[ttB>Fi[ZHu^p$5_oQocJdhtOd-Jir>:`tUDYt@r\]F\AtG\MRNs]F]8S()[KeKX%:BCu
%[fQPhmu4^@7$0`>:I70O$gO_2q3uHqZ@u`tS]FOmi,P7C\R#)3&D#>RHq(sBWRiioP"^k7V>K=n,-c\,6D08M<P-9$gQFsqYo&(P
%>i7DC79BRT_TR\^JC*eBkUd_>=#0-cE1>^g'iG[oq0)Z7Hk>!6]nbhA^F+.OSK7XhaXU6KFdPSjP:]uP>I`_7nK6qTF2.5_#e<:d
%-$mSab,OZ46r\D2DgpK3m^;3k\"D:cM0q4s2()S28#!#$j;ba>!?dnc38iC)GQEj38D<0DUAidHG>gdc@k(QBnF$U?LJu;%U9$\E
%NB;eGVRlY5:55niJ2H6?DBHInPp'+R><8<f'>?,Q[[W:\M^ZtB6;uo$`]JNM0%F"Rk@E2KCo^3R%+[7E_o)>g6;`(l[cTFc"H'D9
%UI8#_fE'*%pE.4ISAG*PkD$G"X_=D]f.s'H6p6>=$_C#@\cq;OE=FI]aPgN$.fas"TQ%G)e>Do%7)-FD'`eZp6]?Nrp[MfW)[`&/
%,o;."j7%=uV#[g!$oLNG-+OZ\Y[AH)k"capIBt;a"L(]+8eN'D$3OiJK6SAA2hj'_+_,=IM3K8#-hqRMi4`*0VIKD?jS`l("E&*\
%PaI9]"jT[GOrTQ'[A'FbTKU&gogduj\?rOi+_1\\F^:&3.rK'2ifL0=4-+CK4k,1O2.8Y$+4]O'oq*`t$nQJZ7Nb^Wmg<HC>]W@X
%>jlcc9b\]V@_L6u3HqLFRit+M;B4T8"oQsW'a+#[O<BrX5seh/>uHhe#hm4Lo8SEU@1EO5`emECZT<p<;6l`"C9p/YVFpam^5\,U
%XOD;9DMgSBnTSU@nt@'Hl5T=eZ%W+ML42f&Q0NJqZ2qO`'d$-nF>LGJ@BmV+D<neAS`B#RrmtepR5O&<gsF_L"pHS[1i7T[0Q.%"
%:C:X>V]:qfa_K`KFa;B"RbX"/&=9O<;C,OLL@CY+)pfk>gBmr\_J]R1J`@\2('>h8`DZ8!M-U1p3*d;88=-PqQgceT>F-oJ#ZLF?
%LnJdjcO+(l"i,Yf9!IRo&/<P1,M%81&q%h:!ZrM5CO\8!pKCI's"AFWRSp9,E:8NXOEb*iD]cRoO-TasmdkL4BWI*#oe&^Z_.buR
%3[a:qCo?o+8RQ9QX#K=_6[`NB*on+D\"ij[g1u++_O%Mk:"5j"`0uQ_,fA$nD[bY-X_^2+NY'5kT?r1O#Wq$$;].]so,JbS_eleH
%,.d.[JO-e53,+,oOL"JF/fk!pCU\1L]7VlO0CS[Y+4=g`1;HgR+<m+r.2n;gD[7RrCElHH"1Z&uV:$=":;C$WhC-FO[`t-+/Nnaf
%bu$4iEJJQV]S%GQkXMqIo*:'?:11-N@Q]0_o"pPe&C,FXdkl2I&@Q<MZa*"$P+6&J8HC(KRL0oe86Rh?&R_(H!s7+Ga*::qqm9/i
%]HF<8,]FULlmtHPo#Tf'"\9>gdPN(.,Qa7hEGMnNh>5*-JH+T+mi#j>rfPARQ?GArA/d&9I=^o<815[KC$5Z-&CrS`2ou24W&[./
%=a4mHo24>sl&/@N,^4s(;3oUA#n&Yh>.k]q6Kj<Xh#,]H(UD_^bd=.,WQZRiR%(G0>H2UTA("5Z)8K_^GY]P+GUHt3ipf_W2-m'@
%OJ%g9dkM<HUY!n>JZ=8;lsgqjW>e!3:"p=g[J#B&lk$U1MD\]?HMpc.iC:nYj>dA!M5Xo+F#_YNnBtM)+'hZn2?WKf\%6I<(.e]U
%iI:$b;Lt-OLgU4t$ZK]4R"7_BKO%[s0LEPVlpN)F<A?0>>Ms6uI5,$<%-4g%VY]<Vlbt@b6X6WJ2ZsJ'f6n$Z>Qp6Rd^qOs(E:Tf
%.HZ&7+U"SA1\-:S2MJ5u>dqRucnC]<2nJ/Idq.^UC#U%+Ue`MXpFcTd]e'br19OX;j2$4p8&'E.C?V?@_BJX!8Z4CNL1'GIq`qDg
%djXk"Yp<!i*<G97Y<(r!qXgTP5?J"j$6W10GD"V2SS,oGpdp(;R:@*1mbg#M++>,"BYI`;2Y`k6IJlTqU`JA8BqnCu.K:h/-kN]t
%9#C2,4!"@8d1U%&Y>_1abH=*H5<\</0@i[[jbJ$2Y*#rop(;b9SEnaVk=/(6b7*Ir^0LA&Sk"5-7?'^[K8lGQC>V2,JH$lok)&;'
%>7;NGKb0S\kk,50.=qBj>!_7(L;/BOIIOG%&/MbVoB#9+j\U0UKd2.B4&TjUm*LBN8Yp%6)UU#SL/sCappitt:K5c=RU$j>J(YN%
%4)UhK4f`e$'?-%"ktS8n"uRU@#j7/s7HjR62:l%Td;07\?QnC4frU%g4R3d>dttToH$Vje/c\A0WJ%TuNYp=#o?YbOnF7sUNDaFI
%Kc[W`E?E$R@VH6?d7#G'C1Bd?b_`5=!ospGb#poeRdYeH)<:rI$P$>?%20PP*@Z:K"')NS8f0N8)lcJ6K>oRSKt>"k'j_-ZnTrgq
%<+*5&l>F*dPi0HTM^=,Bps#7d<E#cr)0.r0iW)=KSO[:EOC8?bpL00p^1[--(/Q.-0K2R?3XV<C78-t15Gkcq-6ZPu]7ik4IhFO3
%Een/4=Cfe*pHa%_?lKKT$SoJ>(^BjDYqgfQ5etEuP4b"l_fSTG$,M;W@RXFc8ZpF&KB=>+6aEOf@kOH5R*S.KJss@"a)J(l6oj.'
%JSCoRBS.D"E"Vg[O]MIp_UI%%J4mhb6XH.>,).asc27>.F&m%aG*t>2B+8Vd<$&,c$bo5sa8C<0-!hs8I/7m:,C)N=b:hF;i,h[2
%rscJkrbbV1-'Vrp%;5"HqaO4@-$DSGb7GDJnbH&>J$B(8n@PT&YYJC4e;"BXhGT3=bF8NKp>#L85#gMs24!D\TTmLlnuNotlI!DR
%^/Z4<C,E/<4W6s>g+Lhqr1-XX>3&44a7K,DHj94*m`4eIJ.`iLm];AJ28epngIa$q.N1:Q^>:qh!=EHO@"#cY/UAK4m<>[<!S=qP
%qXO,k8c%st#nT`4$e_&gCk(.)8]`0.*EgI&L&n^m51$b,7%u`T&7X"lP$a!sWMlk6gP'B*\G(mri\1j_3/EU7*P,M>;KXl`W1'qH
%<#RVDRu@Dl4,9aM=/:i"@p?1BXRh)EJdD1M)e!RM-P;M2Dk(d+3U[-LHXOQ$\@1-HaPA@+Z`aB[%t3"sgZai5F&!&k2b?gO#O'AZ
%06*>lU5%/Tr?N0A_fK"AE*hLO:s\%!&L/BX*&I<:nQ\Tqm)J3-!T:@,gfUEYP>)u+QSNXm2fh^li+N<52A?Y)Jse8%^T%*0gHhK@
%2A)Z$a^Df'3[W)WT9241/!nf8*_SP\[:W@"5cjMb&\76H-W.Q*Oi*6^i2Sco#dg+ZSmoa<?1?M]SHY2d-1+q`_4n0"Z[?+ZR6"B(
%Sj<X6jgYR;.-;!^>>Iq"F&iE+Le7mqK(bF^!d19moc8]SKk0>JOF,a1jb1,'/nI0uCV5EVdoE(L=$+^66mi9lR3PPkVV#'>BK>^4
%=1jmC?cOje:gG\_$?*c3f6@\9<pJL92p^jOG!I&Q*HoB$;XCcoc)[1H>tuHjkA8/<mJoJ*UbQcjE9G26aS5YkkU:N3jHrUj08s<H
%m=sk50$drO)t%sS:CFGagAZI;iToO16p&*qMA:'nTU+WJRa9K<C/kC&HJ4)!eXqfI;M#$=7]Z_a3nF$JN5Xd&6;>MZrLBce*/U@!
%L'M/>O9^"jI5!s1pd9gcr1[9mV[qFR?;R!2N&k<5TeI2I+Pm2gIY+%E$p37?gR9,P>fCsrIYab4js9gXWb)S#N>.]L12s=T1''>n
%a]ZsU%N,Ft0JMMQO\9b2gG*l&I@Cs*^6M_Q^_?IY86%7D25P;R_MqK16k24'l]k$i%#)V*H+LKl#qEs4=[IG4THbtrVB"M.4WMb=
%I@M;&2O3*&Wq7`*q!;0PbR/MG9N$s5gHMdupB?&*k<t$&&IH,8&o%[k@/uLADpY.<eX!d;kf9m4/?f^H1E[HG-A>,UNeo]1g]a=A
%BqPfjZObib#DT[LGA9n8YhP47@VIU3NKGPj/?g*h=`#710Emos*@_F&C*])nSAtb)>0M6hFNTYmd>XTjA!qm3*i"fbIu^8:636e&
%IIc1#o%nR@B=:l$4?VbI]G!5$M(UHi4O(.$E,'5r^[rH;M^UtpSh"#Ek&*pAVj<R#]G1$gASDqbCt\bn-fe=HL-:W[[-OAL:FG&N
%pO-Ag8nkH&#O"3<6Q%ILd=0SfXt*r+e>FFT!ga2LPQ_qE*&YUbZ,XL/p4n_4&30<Jo,@?u8I1,qRttnZK.W<J>iR74HT+l`+L4_4
%I]9,"'L@(p0;i;n4.HLJU;g[!&$o04*Rj)OI^=JVL80]_@:!JYXttn7gfF8q=eer0)lMiSg@[hJa7D\2b_Vr,crM3+bF8=/rOWn@
%7GZ-H8kdKO%HZ<hK126JGP'950m0rUD2s+-\7![^g:FaB'lood+"Fspq<6b2QF7-ulSZh[H38WU@[oseM!HTJ*7l73EMT1j,*1uE
%,bYd>:2S`sYPT0%i=oS:l*@TA].u)#Af0Vi_;H!AC!'0lh,2b*Lcg4qp%b1QF*H>hDgh<W3Z/#:kMP!D?Os#phbL6Pl+#q.)G7Hu
%*dOgh.snn/2K(n;m/ih]A.\npZ?[,<]-EC\rH.f)18(j"ICc+8M7[T^(c_Dq:F;=bFa*JTk=l#kE/4%U7aVVWTsT#a(B]C:pkQWc
%Ha=js2>#.qs-pO]T3c]Y6o<":cNaaqHi24k^/eZNXRYJ?C&7UInnM3P[AFTu@OpRO7Op4c&[l6i,kRrG\jX4<@d#pt)RI#id8FqL
%Yl`3+OMOrOFD!&G;*1g5MFcXcej("pRocu)Om[6IrRoDo>Dr,2@eAq^BZ7qJV@gn]C,!b(A;5liWmeYR!`Clk1I$]:WWD$(1/>bI
%&#8gdH(%N&[/6ZIX:eD;U/l7;#+'e,if@FohHtrs=O"4FpGt&cgF$\DpSF-g/*TP,GDhdTrD9&%(G@ZQp6G\!AdF`>WEko/&)s&]
%;;u\*LFmP0DOq1$p3S(JR/!^MkC'D"'p#.0%OaC^>;Jb&@.N:>l[Jam$(d],*jqK"<tVe>#d]p>a_aO-VGV_CA,)T^!&,[^/sL;(
%Y?A@>6+trZ@_Tk6\:s".U5MLpV8@.a$lo.QEEqo[Hr-IGRt8p]4,)UshtLRq="DR(ElqG?/`2t5U-E#Yj4>`Y\O#;o5EmRQ2]G$K
%iWUQu!]eSSg"q%ehL3Kq4<<M2UffBUqe?2%i1e:0()e>NQmg+"Se2HtTQd\MWC8jC0j_;$rL1G;op*7XmFKlfS\<`D`=3'F8\unT
%Gh%l4hZ#_l\#%,.2(^3l+4kU;d6^:[HPO*Z+D)&YQeF40f/Q7g6'G;%(qrQscq/+P'oT-1(e%EUp$(WV2@_B!GO^A-e&[6"eIYAV
%7a*dl+f=^Z^Gd!+B*Ejr"SQ,%WtPXcJuJ-%Y"j2Y&6`aKOUJX!Xil->-Q_9*!VbY51MkBOW*3058!.j'VK(!&OD0`e4q3:R6^W3$
%oC;p<R1Gi7_tH25mOU4RFQh$,]i]TjAt17B1`FLS+_h%d4UJfu)d0q`3h:3J9+loeBXWO)L1h8[.=)f[4c7\.1+V6Oqse#65\h/"
%Cf?tR'I9I+(%9rW\>EZH;90@1-V2PjalB9l(=ZBi%8KHG!=jd9pOC_CEJ6g5=d,jppY!tOhAHN9=f5<HCWF#I)i:ub<stf/$'HIc
%Ecc59G#?&B)ZE!acEo6,rWH[4hE5"gd>k]>i>Ih)KQA$]MV.UHbm,fj0T#7-(6u(Mr>YWS"/2uo[_Y*%2!!+Noq<GlU0pIk?am5>
%?@l`B6A!]NS+#HLqq`sP7`>"d4&]<VOo!9NQMD\!?;<;HcL0*@BEFSa,+?N=H`B(LJuY5LaR?!_5,).XYCV:C?iK&b$,KTKSBiC(
%Q3QYgeN0Hg[/XoCNstVfjG7M2-P1>U<$%KDQRnU6J2:,]C'LnEL+/%LYh94Ra`kGd\](.2;i0QpiC2'0&!bh9?HhHZ9X49%H=R0:
%dore6\!oU&L\8XRi;rP[4ggMAHoOVIcqn_dVU43J3$<DD\??X\Rre"dJ`(ld>Y>pFAFj<Tg'";261=B8hGrqq;e`@JK[,=6WclPW
%qJ;E.a1R><SM4t\n3TeGhLddIqDpEn5@NtmlS6J]j$=Z`=&_ijYj<kf&(_\*g'7VlHs%4<qK&u3SF(>`W9&V$)_ZM6qt4dnp?psG
%g$0Eblo@KoWh3I(?)1jZgX>gfo>`J<'[8&;H2^/f8gd&i@^.6)>O(%18YcWPL,KE/ZC9+``ZbXEdY\^EPAa0>U0>dEdE);01+'d9
%@.ac_D1t&A/nK5IJZ:?OCnH)FFffft=>6[U.7.n3H#)aP!%:OA`f-a>lFh*&Qp`R=;a@tNd6,96$#PndJ+!<\>D/Qc#%Dps\#;C'
%`a:SK.qkYDa@s.*mD9)*;pNiDU@E\kfnD?<\7R!.S]_(7/Rm]BBOXfD7=Y`_Z^F#^geq_gLDt@na^^[>(WH0Xd#+m?*HRtX:I,3d
%X:*ZUm(q1<iCK8BMH;T]g,]BSls,\_',Wq:i'0Yi*p,p:Pbu*O?-$/^S=GlL;0'`$0T'RmZ*egdat.;P:e,3%(,7^4F4j03LuHbk
%E#\0;N&,iU9>c:SLMdiFl&YrmJkmQ-Z$M-FCrZfu'D)Z^F`4m+WplColXE/W?&1dF$7HS"fgL<=Jc![@j'df#$>ln(4iqJFh7L@M
%n8YRF^nT2&@0s8?T9p3*X[qhBEgT#2^Z"jQkT!,bK0ptEYO*[f\F@I<@F-4%b?Hn7gctFu#L%Pe&0F+F`\d54@<[sLeUTBu>7i+-
%]uNM\kZ9_?3f:b^f$ln4S*ukNb30A+'aMgR2*Xc+IhdTGl`dYk#[%,BAtN)%bK7X;I?"@VVW2UW4B=2YlbDIok$D,NWMusTOi^*1
%jA=')J-0-_04Zo3[t7YWckS4mQ;D[%]XjYQCd>(_iJk+ZV-KDK=]g2AT]U@j9t*f0$bh9[*g'bN\*cDk\=7[aHF5*5hdEeK-t%C6
%(s6a!rTSO,;g>U&$t&aN7jY$oit4IP:KePdZX9&e(J5?[?YFIuh+2]4,'A-!Ku-KG1Z'*d(L/!j<^7J?K2r?:MU[A%1)d1:6VaY3
%COjf(\8Q2ukuP;P%$Q.k&Lq)1[S*m^mUCD)?_Yss(W9K#DQ'<?Y#S,>\]qk+J]'OiCW^6OeCFTiMS'O?dtJIF)1i"#NXRqtEY0"*
%PE+,^]KXrrUu+oa#<2sFlf"q*RLAH`$uJK<rj"Sb3>]"Uo8/-WG6m.4CgroO-eHo%=0sa@!?BQ=,cEh*l"7?NM52>=&g%c'9q9e4
%nlCk^j_9LUie"HUFP]j\B7=kX*L(k9R8eG(T&<N13r0$I#W-gY)m#L+H\sT[]6ejaQfp,#Jk70rGf0Rsq70Qk[*;`B+I=l_dhH80
%J;r99di[n\g&5?9kY[>qZcN80q@E`_N7@hkoTF,=<WhOL[<QfEX\l+4_,R<rS9\o88fq[<?/jAU@<E^+KTh&DN-L-7r$>Hfkq1Ac
%FE.;%l2%_]f`2/`A8efp(?=(aD%%?tQ]+R;N9N#+66C^t0f];_gB+kJJtgbNa42n!\kgU?Akkl"\d;@GgVmgN((`B1j.p"Ia]ZpQ
%b2pOT(QnTRg>thD$!f9mmdGCi6Oo(n!c7LBSru1:_0L9#ccRpG81=6AV"`!5f]k`/.H61>4tt!^Fhk-p7F3Z8K/d5EXVbP1VcA;Z
%ZUd?VS%Z[EYMZRElesK9NX.3p(KV_[!2*^K3Y%W;Eh*7S9#Mg1bs%r1YFhi">T^o_%\)Zu;l.`I>(XqH/h^^%e`4<IIJVYG7;*jV
%Mu7!QKufP!*F8[kaCK1H-6':]J0Xt`r2:ht1g/!.J0E`r@>L*a".jh-<[*X5jL!@JY^_EGDM9j^<%q#LSLs?c8.\%E@iKZEjhHk)
%=s:.Na="IcEgAEZ]IM*Z$2=(21c+N]/:C!NdSX(R]c0d+.]T_>ob2`.((Nr1p(+t73-'@?B2.HW\LQ/acPqgDAca//F3%)p1)(&W
%EHLtMYqVDl=!(!!q!A>RP[E7c,uhIb?hmRnNi4[NO[Q*l?H=-GN+C\4UIMN6"(f)71HA%q?/SJ%>_aV]PYA`fW'D>B]^4X;II+!b
%%^h[#Z1GQR_,&jS;*JM)!)k<',Hqb$nF2IlnZ@FS1(`8S#*qoh$&Nd%4f"jaR[=s>gQS",BS6$U0@Mt7&7l[Bb#WUp<tHf$#^YKd
%&%X;Ac2:9l6ik#^J4K\!'Brmr7E1.+jS?@/HAlH^Eo?^Nh`?TE.C`a"j)*i8o=ge)T\(@cC'_4n(tjgu&OgfHVB>_AU^Fc]pJUp&
%c_?\mQZt)1F_e^Ilt=%R[,nLH:/lVE<U@]*U\f"J$Iq,C_7!Fc<kC[;2R2a\Cg/$]H0q&4i-)WsX8$MnmXh"<DB`qs!g6Wpen!t1
%ZN=H]f&A!uVQnKAb&[gF+)^c@CI+.Eg,sPX#iR-Ddq/C9N+RTX7j<](:`Z7a;6&lW?-H%a4_pY5JY%5B@$tLgi8/ftlPH9K$"0Vg
%=-DteUD&qRR=O;56#R+dOhl##h,4M.LkCF,hg:]-,3blkbpY]G2<-a#QkcK..#5l\V1mbLne=QZ^YABM3OMhBJ$(`BV/hH3">_IS
%Xhd1rJLAdp*Tk(OM[a'O^kj<bkK-,P<\YkrZUlLMCjK?hje#*Q-DZAqVP4EN@n&E5WgX%XA6'jI]C@D/dha1)iAB10=W[.5n`3)p
%o(FkNitZjr9DfbU1!#5hj[;r-+"8/,me2'*Sco&-<I^nh(\>.$1/r_W43QoMF@0TqBjuZ2qmQ].APuT`6"1[XG.(u"k_*^U"LjGb
%^rRlfF_?EB;u!i.SA[]]gN7?%GaY\=*q62s-mr^gdR^[e7`m8sn^(:WNu!B@<_'dGn*--+;EcKk7[Nmsk4.JuCo!8Z9:a:Cm)FMM
%-hDtu6*,GZj2PCTXrt.[\JNYd,A8ZJX4RhM1JtdHTt"6FN"e68b,#t(Qk*..qC;p_%Da:jaUfXrG5CIP*#==4$Ttn'7F.4]M+3jE
%JLLA!c<G@L"Mhd=JFm`+(u*>`r8.<q[#7T_A7Aj<H_lrbUM_./]fp<NUmZD/oB>#m?7$,k+Lk9.7\Dd*IQ!-;HK2<C1h_sr'Fr3$
%0'1cB<RT\EbEN4EZA"daA3Y&h.7,_"H`p#$.SN*rk+H'oKHPAf%>r9:!c)T:r;hN$mJ+]0pUU_M'd#t)@s8Il_b5ad6Y?C)VB5Hf
%B2l)N0OTnO7Peg#_*mDHT.=TgH&=P4Q%=)D%0sD]&qI3L#YKDA_bu<+g7n!b8'D=&eod[Z%WMnqX+j2B8PJ;H[KdS*8])/<:eDLC
%=MUc[$#A-953<q(^2-f=0\4u!4I.1&)p<-to&Go2;8h?C2-kM3DM,G-aiVM4`t;r87=03Q&@S[el=c6j4s&.4Uu;FurD_9Gp>RPc
%-&-m)]hK'co(4u6'm/Uka&*d<)3Xt*M%"?Lbr%;mYS;.'Uo,/LEE\-XD2?T'a,Xl`^*R((]6'e3f"E%8(rC/Y,%`f<Z1C[tEUWG"
%.gunK']=Uf.:cA!`_ZJfU[KQ\1uHCl!ZE[(/GV]g<;Xl&*-1!.a^";KS7`LR(Q;9_;o"C['\IR;T4Lbn)XAfjNK5fKN-A11HD0]0
%X-,p5;S4DKj?+,3)+uro7+%33H3W)e@CXe12+6'A<Js*kV43`[Bs@Kuqp#(b=o9k4n5MMp:*FL]jo'1^:-5_uX0KPGg?$jjB7,fP
%**R\Z^+#;aW"n$E%.N*l1(b8d\7R>B>2i/=]e\t"[e"2DGTi+`2KYD#I2lm6WhH9nMFCY;3Grmc/4NU;HgqZer\g*P'+1UW2HD80
%j2L;Pk,;Fl[+R$+6_]fa,Ptn7_<t+gFOto#fu'TN=ZS%&FQo3iP0N6IJ:_6H3!bQ54V('B+E8N5TSc,L41dXAjuP:qFu6#P[Z:L@
%U(*YbZb)UsmdUFOG.?%Bc)-TQ*d)"Lb^C'Wm=%)b.\nIG&><1RAJ=0*pnChNPk:fccVLI*^CPlqA2qf1+$&^sc"d5gCZ"DI4R5QH
%9bh`3[Z@]F0%bY[3*F=YoSb8%'H6F_N8uPpa@=JjpPpr4iE[UB`B75_Xt.s(AU(nISX>9a*YZ&W+>B?8g=o(&!AGPP*iB`k?ogT[
%V(og'<Z-gmg->'2[en"3S[N7*W=#oZmV=#S*6&5t;=$YQ:-T@@C$UPQR^dK.HT2(^XI??dTCZ107!/5"Q'DG-Zln=`\3pL?N-a*#
%_UM6sZ\sMPC8CKi_SnQkQ&<r+a$=g.i=K:AWlf`2F"aXLoE9M"Ib;.P^Y$4XLUX=ue23(1L4;r=R8B:uWR=^jMK5jU]Si;=65![P
%X(n$Hl2lHk7CZ[0%M)o+&YTeZE;HT%PpsUPBl5&*l9P&b0+Q0RS`3MZ*2:LI5qeJ2:^Di8`i6UMF@d9[E?FG!GHrF^LcmWY`>#8h
%pR]Y(ZMKqq>@>.(KOFTm[dd&Ada'fl,09[9A:PiLU-Bp^m"_HQ77lq\NUn1HT;1Ws88hs<^X4&2g&&%d&XYpDBS03^qa)ai9ml$E
%.IMtM>+2jA+\i5-'8A/ECFGf2D`qoD8's&W;)=mAT+1F^j#nmuq9>@AMlpPD'Wu0RV\7W1P3fo#hjG5p)u$@31OeA;V,qq&`91>:
%Ih=3'cIfBMc,@-V#?uFTRR0ef=gWn^NEg&^j'>=^)ghk/a1^*opMgdl'B_@._GrYHf`,[3&F##<2/jCP-d5#g.((e8b'Jj`=t;V`
%\#2YkPiP?S5U.S;8[U\`ppO\_a.3Q&?sTQ6cDM.RXWNb%YMkD$?EH;5/HWO`j>S_uFdV7L-nh35<#BZIQuG)jFNt$G(seQ@#MQZN
%B`"b+,$%msHcZ$<neesBhO+s=8r,2H%*3B`nfC_7UmFUuOJJOD02n[:3-KRQ5ab%e@G-/;(_"D,J]Dq-kdF?:#TWE4g/_TtUs!s?
%o/#M[9gU1De2l/p1a[WoeDW8l<J5^LbW,9l"^d=T:lkGZY%lk9EU<:U2OcF<=Z&LenmnhNP``XRQP`(*"']<r!*Uo,g'FGp6]s]a
%)^NFKW4N$1BBie?7p,?_JSV)MOqg4eq2IP/%I&5u]\d0]mEMu4L69I]mJDN,9h-eL'Va>dWa"pNM3oI$g^,CFih.[Lj<dGq&ZE"u
%@M=:(<pdKEXXB$jp]+nCYL&p$M@QS&LutH<LC#m>>;D(NGbS;uaS"`GS8>Bgh"bV%UY4\HX@#P@/Nke3Z0r1Q_n=M,dbO!0"soRr
%5/MFL6U+%gMbY7e9k57t^n*1,,Fd<T9'qQM6F950,HoH,,g;B?GAEf[[:PGk-=ob#s!h,47bDB(bjTF7@\2He2^-=c<5>g"_$'#%
%ZR]kEUL6:W;;O_Q]h-`]("0+HVR*<2C>U\&$rN<gM-2am+GV9UI(!B+Bm%>gg"VVL`JHiV+4#a8:XGk;KTb?cJ_?RL;n3>obr#<g
%[T/C4<tL*+T,1F\e.7K'j&\=d"r`f"ZG+,c6#ussp'VJd8SuhWO)WQ/cD24BX=i%.IJQ%&`A/c`$e"!:<1W;5SZ3)lK>!qeq7']5
%5)ZZ)kWC;eFfmG2`u[#$\'YuRI=b'ifGc7P()>jdFh\G"*l-E%,HSj_S,c>N]uF!)A2p17E>*=qkGc"V.G[K!h*-P-g!S=FRS*6J
%4Qt6jBWe*D>Z-gKCT=Rk0ugYWdmS8OK,BP(^O2'&?U'^fhZ#*Mf@($ns7HTr4IooL'ac6YJJbJ/)gnD,p42Te(l'c>jR\SLs54.&
%npgW$J)!9gg].99^]3d&R.kV-q;[.?&]Ifoi/O`()Ycs"c)#K;pu"&_&tQ?N'$ULq";4SKN[.KmG0LgJM!S[bK'R20Nlnd3-b-/G
%<g5e0#k"CSZW!eAYk-ag%(d*8!QB4LH-=qK-@sCg<C1r9;`<G]@F'd@%tMB.>BT4_nkZ]&3X+`uplgt6hXZ'EL.`;;&9\O&iOc]O
%g0TJSh&h5adAdelU@h,>G.u:7.5l4QKYb7Z4EVE6h;e_UY:=Ni*MT4Jj>uE:@PcJsQ_dk5FP'RGo\`?o,\iO(8_.!G=AO5a`5?82
%L4Ms?ARoN((gbC6&*fFH$#qJ^X#5k7'N_sJK6S;iN/Gg#h=:/%A/O!E]E'&1SV`"KbI;3ECj-/Pm6!3FW?Vc6Bk&d'2r%&J2RmF)
%"21Idn<*Z4%Y'M.RKc)s]1cW>3).4bJ-'0cLTlcOhJa&<QO"gA^:%4SM$/-RY*ct-0nVSICoqno:G8ek;,2RI0MdSN:bC'TThDc8
%Ub\Lt&cM9h&?`BiE8;a\)Rc1\A(uabRW@7l2M>#BNOU!*fIUJU8%$/<2Oc^h2\q]5c;Co-Oh=c6[Y)MQF"5.)66<B8@sIb&D/eF8
%9bp[!87/"9@;rf)Rhi<YJg@Aq&*1]rG1*muaF$A52rk\PWR3nY;fgLdHc2A/ol[a*>+!e,f0l1Y4^,%a;=&e'LE9%:JGk#nISD#-
%fU!39U##QK1a2-Ko("E916DTt@oJE$7/NG6/6$I0[!A5Hqc5/+Ld>\JElPR>]$`UoLR*l4_;?VK1tuN/GZGKj'cnhZnd*Jfp).K9
%[tqrSHU*9!-A3C.d#-H<0UV6Sg:;sr->uiA8J4Dl*1p4mEQuMDr.oXL)Gl8Z;-?<<>e;LSU$]C!fD9(3hC(;P<_PD(3T2D>5#t$,
%U=$+OFYU19-`gkZa2)"@PRV(k?g^:B<LVq10H.ug^uJ:7<a5N6+,I1DmS_WXl;^[9S\Yp\]`'%Q@mhVpr5QE,-VY$^b7R4jFYUb(
%9J#Q)(PHW[CBsBsYhmOp!Q$,i^rJ2(043(=MP)G<&hs,0id"s07N9e+7#f([B?tBClV8MHKTG=3d\b.^=Npbe;u#O3[Z?Vt\/8lk
%EseaI%'_Di(>h&:GFS-/O04siP(f5AE`g!g_q"YXUX$%n%*FbdJg+\O"P:nB?haH<Db?[e"1r9N:bL-%peScHcZg;T;a":Q9-49=
%I5i>U$7K*[[ePaaaV+\?7?1O+a2%.0E%WuBPJ#@W.q`!lN!LgC#)sOC&Fsps!RnD"4#p`p<njZ6l_/G&jE.dNVE,%*%R$Sg#Jood
%XMQ&bY^DOj=V5oFD-O;.`cSgKh@7jtn5*Jm'2a@5.40Fin;)iF>5MjHiCb9$ma3X"^Vi.tb+dn88HC$*efX&K#pVnQGJ*E#,\bFB
%KeYQt$]rr9p(jpmE0]GJC&C"U8J^C>1h@.pm^#+5jaJ>U^^rM8-am`P]#j&WUmakUUqY$dJoGI!TN<V0C6CDhb>"3<;V^oC:O[n2
%%#`,*>7A2Q#W0">3CdoDXO=2&S1Y:BN'uV.ie*>$\_2Bifm'0@hL+2,4QVC^/1ngT9-Dqc6iGCo#r7RIU\um2*MQ0bZ88LP<J&,1
%+?Y?8L&:X'pqc]_UCh`ja+\&p^VB[<MEYWDDsP^CHlf!*NEX-(GUo-T#0WWq*S8o4\*Y"9Y0l4#N\JmX@L`JUaDCDfp8h.ZGg&nB
%,%NJU`'f2f\^3$a;bq/Ka"V7;3C&d.g0bK84<s1gVM&uc'6)Qu0FsEjAh0?81oY*9F[D_WEJPFE2MG2_.'iKA`kG4]=N?Q]D?L0i
%Pp(EDgHA]$BVY*6H"5jk-DOIeqbRE_"3W;^#LT6TZA''Jj>nMa8/\Bo!8j;\L6i3J,<YS3;at7mgY9?,,/j8d2pi8j%A4hLPX]\<
%(+D/WGY_%h1P$K`ZsanNHbacPYdj'\hW_6eb1]C&#-5KVLL?XSh:0kqQ^t97'NB9,.qYBkma/U^9!N49Z7.ddj6_B0JEg:<571o/
%,BYro4l72#"Y[gj7(VC!Al:X^$IkY+bsJG^6aHeu3qR6]adR$eZ4ZSf-t">$+V5"QTO9Kk2S_OIZr_)8W,h"YK$7SOI(.`Jf+L!2
%g:GNcbG'J+/q\oZnhK`7<N-4cZg7?fWJQ3"PGT?GCB<U?4g#7+Ui>@[Y6"*lebRe@N[Wf0a-f-r%1Q]6a%F%l@dN(ci713^SC8qd
%EkgU>5/rktJHU-YB4CT4H.)R)a/1Et'5lHNTS\:KZ%E^9P?_<[OE=P3D<WQ8qQc;*$;V-^K6+KGes8nFju\WG!4[qV*LeB&dhae2
%VA.X+A*3;(4q$7c&Yn6FF/_,K,\i+ZSiE^`:j<!*dFpep8^XkXpUI0"(u7\W=gZT;9LWdn4)s]c0#oXu,')bgPcmhtFI9@Sb:_Sc
%nV-%)4Zcmp13^$+Y\LK@Q6\^O,C<ij1@oq*9U\rehi8@nqmtE<08d)XIe3$g'GBTc]U]1AhuJjXUSSsu>,RE+H;UTPQBTDb\OIqg
%m2MkD7G$hlC5!e`Pl.Z^3"7gD@j5HsKaCIu<&EK<[r0D]#(tMnj:El^Q-D(HPp0uHjb5(]'`=tbKb=N2lVinj$hY+d:=t)X_+.L$
%J"I)'[+1`ds5n8uB<BBgL$oc/HeA>7eSn\])3ZKF.k#aTm_hFAoQMAfMhHEgD"j)e+rLnu1jq:C["fn-JM6e&/Y7JZ&GL5ZdR9ch
%6BU5$/r@"kl;!q-QZ5!"N6L5Fe[h!mB'fcLqPPT//.]NOI(P`3mNl04WMOia%W&^5[Lp&t5a:aJ"kj>JbBAs?,/G@e]T@[K\4['P
%Y.'_Ric*eceNLHE'9E&7JdU'PZB&'(+\uf^U?E'#h'2?Z#cJJ[e(4^:L#rm8\AFfPQK364"1`i=Gr:#>m)uUk*K3,27u4!dQ^mS+
%\"'DGc,n/t7H9n:<NX5O\k[:qU'U<\]elTEfLTO(OXmOjFP;"X%\oR_O6Cb(])N7-Mk$W"c;RXi_cY4lY:JlDF]ulo@V++:;>gT`
%G=c)Yc7>Jd=PhD:=A(Yr@L#IW+W9l+,[Yj[.I=Y4;?]ps)7$(N5aAMNHFBp-a%46g&=ZCZ8(a:X*O1D>c$;IuNGQeMoQ.4#1NSa]
%kFj2\X`=gRBL1d;GRN%=LGepoYYOk?]+H("*#O(JC?NRNEaVSITtD$fkY(l]*t%hW3R9rE9E!iOLbr_3lk^#,KVC/Zf6XC>s'37=
%NtrAS6?32P'8Ru5YkrLIFB"99VhEEF8@s0#1"B8;gQ9Xr.usFi^M]2JENaQqX-'l]!K*Qq+p#m&O'bW&?-2$J.'Bsoj!Mh+<='h(
%1>XhIJSLXGq.n7Y^$#1f2_9$#;:oSD/X@"?84%7Cd?d+l&mm:4N*900i/E&HR"jIHn2jl5*^=EZX`3*p3cAG:R-)j-^q$]#072]`
%PF?+PV6Nu\I$aqFb\J`5Ig@$EUFP\1leR@7N4N;hF@"6H<0o>TiP&)GLb]:bfCL<4H\8$rSahUDd[QkEaJcYV_*B;E.h)c:ZC(?+
%i#ntI+%dQ$,BQ;0@s^GoY`U.82H+\rjA>dVfI,L_'kC+U,d5'Q,7'Kt(pg%m4Z;XqVD*bibkns@4t-F0a&U]$.#1/S[)n/;^lb3b
%D0Kr^2]I.>f(Q,ZnPC/hWlJiIUJOi9.P%*9>`X9HiK.E!G0*UlT@EZVrQ&MdK^;,jamMqQ\]q!2B4#A$:R9_PG#@)J)oFu%^Rc:X
%<Os(aGDe&FCsA3lYKCFTEk#n,%'fr,lus)+:*)(;9eQM'@g]W*NK[&"NIi3VlC$b&;9f1#]&fSr\#4;B.GENd4sAWI#%e^MNo?%J
%+2_(Of1ng7@<h7=)0;VKWHqfD_]`"[$5_-3S2/Qtgip:ZRuncM<3YI*#1%*HMq_REN!jW-h-:K#gCi,gT$>6OHYWVW4D*Jd=k%Z+
%&<AR7,M&s4BGr.uM[sTpV=tY@2p)gYTC=Hfh(`&JBN-0[7AX_e$E<AX?D9\Tg(R1j+,ssF]HZqeN@Wc[jL2j:LrUIPTu'CIlP([I
%'k(@5Q?jd:.uM=#GWLU!;fsYeYeQC-%>d@u2/jA\Y=ED.hFa>TWnTC<*eG$#)960j094`+Dr+ZCEEcQ=f]aF8Rt"biK\FK01:ZBf
%k6d9t-IZLsOCV$4bld7Q8):!V%fBM;_E\/ISoCM7ThQ:M\^M*)JV^_X-%n(+f>;64bNb3t&_!>CU-Vj0e?`1s<,.NgP4!Zq<,+..
%J0hkS'@>D$Mm"t7m'27F?_&ZJ@B%@rk9SL9W2/KBm2_grdiDfgPf^99/Lui$gc3Jq6lk18o='%'h-:'(lV&(%mf^-`cctkK*C7d=
%Bs(BMdLOYD0eZ6-0Nff,jm;J`as^L\'nJslILENWDFl`1^mK?:\6%mR-52p`-^H-cBTV$6>f%Y`"TpR#QsSjHdlDg<etO4]CgBi"
%o_W\+ph^JS+_&ERKpdU`pJ5QN7Tk]:<Xs*Cf\AWkpI-G\GlfAXP2&G5qp<@G61KmZIahm4iq&/Y9]BENYO\F6@pg&AQ_CSXDP1iW
%"/HLcNfpM_GF?_NnW"^+^%cq@#!fM/8hMEa@u4nb.r1@BF*IM&`64/&-mGfRmK=FJ8ZbmTZOB/YaWauKnY4!Of[QAS1D0\`h<QNo
%6;CQ%)-3:NBER*?h1;[\@G[B38YQ9B21U6S/lrt,N+"o'&`.M;X%Io0C64$dYjs-LYflg"8B"tK8?U!1jaLUC?TM;qrOP\d`Z:&#
%QeA;a8Eqj,qXM`cHhI^&("]kpB`_JtiX_&DAo/*Gmom"S2Bp=`2QD&]/Nbf65=n[NBkV-PY3:iEl?b0"K5bm?rdfe7cjkLaL=?<m
%6VCVWD"j#"KEJ*:1J3B%Z@9mN#hte\,@E=Eb.9bUcM(;dHGCh^,Zn5;q]7V8kZ.*.2?`X1NG,u7d`rd<6nFn%%m]0f((-7PoPo8u
%@;1%"R'bl=-m+DFpCM"#lbt#MHgPHuhl4d'gRQ[CNf4L8PE2K`ln<M9Hr.R&E`e``Q3it(0mu;8_1o_K!Fjl\,PWPNS\smCeaaa*
%Nnn7Q_]TVV<`7Xj+38?r@=rD^KCtBkg_^M"^=GJs=b!h1-ellu9`lc9#O*2(GXkE#k:`hAqY4?\Zg!\%!<Ib60:sdTjT0i6"FY`$
%ir%gs&^pTQ^#G##mPdQI;#(AgF>&HLh[bke:1DH=KnrLhATNDiNo(L'%\o'2#Xm(lL0\+fIDVl.Ub:je:b_N8"XGEeD#r]>GACor
%17gO"hD?a667brQP!TVL&6gO/:rh:ZNfGbKGd;'N6D=mN_j0J0R^4>_PV36%aP$K750XEAg[K9$fO/EHLHukkpX/iC&g%m@bP]Cc
%+p.k@7$`bEOMemb-hRtBmL0a0W3=lsh]t1/-V(<,;jNGGr+V^KN(&RmA/Pr;;[#BeCGl7JWpeOcf\OO2J<jZ<(sO4op];JeQWT%n
%P&E_-".c`%\tQC[LBegE_*M0t?H(3p+3XN@Q_e#1)'I[RbU$'lB]e2F*[/Hh`;GP'Wl#3]M^,cpo,D,KALjVi/Of=]@\-"Qs-7!/
%Y6"U!k[#+tHUq%e,ZtDnirFCN+m:UCoYqaW"XVc31!q0YQZ$-g28$kB$8KLZ8dfF%e9gs2rd@Mj7eS"RqSFaCi_<3<mMYS16PN4!
%D32.%d/'m$1sWeU<]C&:osfg2`Xome&)B-U&]Z#<eZVWNa=fH*E":!,Uln#rJm[0;7c<`-#C-mC_\AmRH(&DQ0QF*C>bl;c2aA-f
%CY(B#hUi-P!Ng1F%V]K!!%Tf\dO:;=&ON!2j9(uZ]!h,?!hdKB2Q5)[*!g&A'P,l4RX>*Y0`7k[S^<Etp@6nc.nbj6V2udV?jhqt
%<-YcIcKV!j-aaQpcH)mlSfE9W1WFj%q)"*?2mQP\L(uWWAic&sl;q"m!-="rWhT[tO2Cnj.8KZk=iQ,TLi2Puq55B;NCHC)2%AST
%@ZA%j%db>BiW9DBN`:tt5X>tQ>>MkdB/!2V<.Hr1X>!PZ`u%ed2okL9ho?f<)Ep3#\)WDqo>#@iJhA6KaNq[V1cHD\N-O>UEF=L_
%'2&#87NQJhi@'K+et$K+^f$ctMR+`,BI(g*lX4-jOf@ZN\0bq.-q8ZG0N;a2:F3E@_J,Os-8R$?"M#>5T5$Vb_2AF&8s)I*mm57<
%+9sqABVJ@`Wk>XDN!X)2c"KRLN.M*2-.T'TMrW9-R)?0NJmH1Y8B$Zmf\k@s)%'GMC48\j$cKp9gOc9J5RZ3<AP:(+5fh&9)dZXW
%B[gks%mSTd>Me!^Ph0Y@R>Gu!6TZl)!(=)O)='M8/CSq4'f\O=#a][PJ\aK2E%K=SR*;DcYCSRm34lU9Bqj&?i'j_8$m(<uMpHM*
%"3KG,dBd^$8X5H`lQ^&@0p"sp<s'b_L8!N/6=Ys,i>pP"4!nPGP-4^F$:ao6:(hH76fg5(%F)Io?nfJZ`cn6q9/mo(S7sLNe(JQe
%#t1O_-pN<*/Qd:#n:^f2aW*a=L@*.*+mI$J4E)V26DaaQW#_<aiQE,deL5V^koM6m!dLp\(nNR1cII^ni`?D<4!1!o`7fiB`E3i^
%$;p8HeMXa;;nep>j%r/fi3CAj[FBWKdQg-JIc$!j^CU0Z=S>7p]Kd,+-o$*?E"sKk)G3lHH"1Qnn;S_.`39^a``UKXWSQ"Q7=iZq
%In!&BCj.%Rii4a*a`p&Cq,5n_)&9A@KP7m6Q9d2Q@I9:e8g@HBYJnLF.BAE`4JkJ.%pVSJ*1?SB<1&2)j&E)V]$QK\AG<lIorUFL
%iG&/KE3`p\G+`5E[j0.GV\don-OCP1%8>b0CK!J#0$@^c-`7>DO7sZhG7!M=\tSNo(/&BRNA5La?(+OL4g6Sh*5<T1S]PG,??>dV
%p=1[p!cZ[p<Srb.:Bs<uf3URm:F'4B8eJAfRaV;gH>hKSL)eunr:LqkL=ps7'lS.Y!19kDa'B<0$PIk!-sf;%n>%si`#B<q%pNp>
%\,aSW@_b$Lh>nS>QVe;6%D)hYmj)l#$'D$9lGP4;rfW(0j2U4O1#Q]F5Bc:(QCpLk*Lu:gF&'1\JAX?sJ#,G+"kWBuh*LNQ`YWkJ
%r-*3L'mOo1lWo<m"j)K/ea[-^-*6EU0>e25lW\G\8]F'<PieKhKEe1c.@AN6=B,f@?<Yf87=I7bg=N`@p^G<OZ%C-=&NJq.'QD1c
%!;NA"W]Z0^PFA-T)FA>&Pc0MrB@#(US#p(goZMB#fJgV1F:=XDI%GBp3anQ'o?3^/cBN?+co_2/B.pCHM4%\BN9+q$O6cPOC)T?K
%j8/giRA$40_[S=k``a>=)hOjn[/RLRKD;f+b;!DTF)`mGcHDN*$7[b<7I9:Id`]Mt`&8c,,?1lORq=-V&68@P_UT\qjDm]?-6,"=
%NC3A?QNaoapADsLMP).EJ2".GRV?q,Sj$=>B/s/,<Gj$&EQ3:fHP$3*hM2V9dD_Og?$8L9U`("<`V:a%A'ACM6qf6*K00MbfgKO?
%&J43+TX!0qVrl]5HBp+<*%@k:U/`fe)J0J7LlW<`n*W3QR5@jgD`$^QZ)8W\kJamgkXqkJN,9Ti=&?r5,/l&>XE(iK)=r>F?H5Cj
%"@"l+>E/bfVNF%G]40H]:8`5$4U!Q4QOPb*ej3D1>BDhY3/3u4;ij:5!d.*E^Pk)^'qW&C7dsE:+aE&J[@:Pn_'XNrL=MhJKO*Fs
%WN'`oWDG*Hh$Vh"SW'lX!d"W)kka'-7.Q(.]%Y211jT-^lI)9Wgf4M:D-2)''F3o6II^tU>1PsR2KfHl+GP+N3V,O5<*0=RDocNA
%1"KoBI>].b_U)-:(fGn$#i2iQl&2JVA;sgEf;C`$oNc^&p9kZg*OfCJ>!/@,*i0*Mc2@O$1OqXs)M)5tdGH\Dlq^6Tn^.3ASoNnt
%:E<uZM_2.o*qP&7K\7eA'\uEbQ@mk9LFsg*-3EqHUkAmN"*QoW^nYE3e9>OW%fq0_S]t'MQY0o(YobDnD/IPpS7[6kT"7Tt,C>4f
%L6Aotc@h2/b8n(_hF#Jdl&>qJ]<5'B?(P*S[3ne4>aOhfI+W<%MGRN\"`p!cWlH[+$^Km?4=NIcB`bg#pZdr#\HLuqRe>e>Cg%t[
%priEl*jJGbN7]UijY&gT+e/E>)#^$jcggN8r44%8X=U4Rhj\ib=t\bs7'h`Q*4*rF;7aWP4$^&\8ifS@1`)K'?EgMH'Cksg(j8%"
%7X0!=k^4\+EDk4flWr5d,L)MmBd6S(q2;06]lJ9VD+Wl8>d6K$_]=#6f(Rsr;,.Y,rC/es,:g6V:ghm8f!\.nC%A3Qa:?LdY+4;+
%&gjDSL<oVp6nnS4;RZeY(;I)ekLD$s681.+bIit?_U;++fo-3QouFQmSoDTMO2u##?uF[S#gB]KVf2D#?\B/<"-O:`$F)b_P;7%2
%[9H1=6j9_G^rBV]*!9/VZHAc=91YU(XLlnllrA[F8>7V*#hHl@T,eGlm:=u3TpD"i)_*^7O)mkZ&mh!.%n1G,6;_p,Ycgp9QI%DR
%d0R@*$5su()@TK#PF-d:BH?G^P.@E_Db%WM)VO4O%qIHJ,EKD@(2GpMdd4-iC<cTd&*[A/fj!o_Q=(BqUm[7P=&]/=puf]mq!AI&
%,Gm#/6R*&F^&Ro1(^WG<h:=n&qF'P8lI1)(g_eOG</qF'`"JHrQ\$<q/I:qBi<1)=G&bJ\:JQ;=V$<Pe]Z@pfIel7<@'nhfF;LJ5
%?JtHO2mbFdR3O-/eBc^W_DWZi?n^8_P?]J&?g*2A+:>+9m1poMHGS.o0#@]/*To^d.ff8o4nBt8Pl3cc^`nBYorJ[i#cgBB=YMbT
%7\c'&]K#7,'sXSX(qn<4:HUNM2STUN#MQ(&e%b+o#i@W-(Qn?AGJN,cHpRsUd#5h;:.N&(VsU,le9_ZIk"\'uGo%qH<]D*E'tq@B
%O>%Z/:l&OE1.<ASQbNWfJ"LY2$*Aq*U4CCbcJsaBe(/R6Hd"&3DA:d#,JKjZpuM`NdhdY;5M#GHDi=OQquWX`V'eggXJ`X;#iSE3
%#sq/hl9'RRAr5."pi7)Ql[4$*[pT%-"n`$G:)=IQ8+"_h$T4ZCY9XF%52_)OZcgeh^?g#-<H0n\JK`jEmNr&T[pdB2R1f"0dm.^G
%6%L.d/VPHKSh/LK`Z[u`k'*N<>W"b;7\k:,T\Q9dl%1F["C^LH1>=@M\-tkk1q9+LS\V9Klm[k8[NmL8I/j,7RZH@gX"*IdfMM)'
%%?p;-;N^L"g.SOU9:8eRA@69EMIMBgq/3*f7Rn-(flCBG,TUMiUo4qVg3+BBlgFHfjP@e+QJiA,[p`%f"c.*NpST1d2s_&2h,+P,
%M'Rda2VmW/55jm=2M:E]=0:I4jJ2@Ehe)-5f=?51o>d5QZ+YZGqIcedo`3B9D$\;j\1,5_p;"9p./Y\;(#jVq8u*&7H5:sXF<a\i
%:oPBL39o@ZD&D3I6=ksHH)?`;-:$nB3,`in\ZQP-0<j&-/:EIucUN*nI23[iaspQ-Jifn&_);oW*l2sS2"u-]5(9'8:B4ASTc_(:
%\N5Mn>7lS,8#\o@Bq1oTIG\h&Ir.:j`4ceWU*&mbIf/V0Q%\\P#%,Y+]`Z^CT/Wl#[Rr$3n-.KDpuh7NP#*BeN:c^QPdIX?qXL>q
%%h?&<[5&5fKrr9(.S:d+-,NYLZAk-*c]+6T3PnCAkH_oNSGDtXhgb1jJMAEtKuA\3FH$hNYq=D]Y^S2SgjB(mkq5UK+)S*\H!eQ0
%TDj;fpL!eXVY16pdH&"f&KZgZgRnJ#^'/8ci$&RloY:Eus87oY+G>*$#u/:uJ!.N>'=1FRj?Z6jia$pMLp''cn*h)S:?;n-r_EW5
%?PXjH_V&ZlpAXo8$T:8sj'@Z/\111/DH]k!/*8GWg"5->&h8LEQte;s6nK5[UkcAqk<;!6?0tYpH)k8aVUrL4"3*ngNqin/J0nf/
%8IY)2iq\9`#ZWYF7ub<BhP5.6=kb9I$kuGFFk$<aCV*CgaY`#cfn]c.Mda"_N^O<:)N,4C6Rij;,QB`8i*a_6k,?PdG?kJK@OB]0
%VL]R9r*dYXW4?[L,iR<k!_"q;guLC?6oV:nU%jDo_eeIs+=A_<1Q=KRiPH"J7j?fB)X^L#j,b.^Qrst_)?BXG7oLX(!M7:H<F=;#
%g4ujK\'>s7]bj;-3#2CcR^or)k6^AKTm=d47LGATUHU#;U%W\qLgV+/XC\nON+X$:U.-4#'N<OKk0Sq0Q$??75gHNI4\2'A*"a8a
%IE'l,)5)EY*!,MNGJUkgD%B0Me9O*::;OO_Of&4,]aoN4K+0W9]q-f7MJI>Z[DF443Y\[#:(\u9C*_d;5>2-`<%,HD!TeKq`F?2;
%!O97L.a2ge\(q+u#Q;N]CR%_<!<^ff-#61e7,_4NHb7,b;5?FaOS_SDm'Cg:,9_uQ<_o_t!)d:6l#dTm(kj:"N>?nG&_I*O+4p:!
%cY0r!cV!'IDtEib"<d43Qf2f`JUVdG?TjOj1si07f0_c:!)&2%[iS[hG/!F9SsJ$#j<Z?o&3M(0V=tlsgH<N%hGsocW+\TMK;&os
%9N0[G7B>&ai]aj>?6%2lp,,?\:4:mUT=s+;E2iRfa[C3u;I2*V]%<E8[JSUemKHBk,u:k8LH9JZQ_.csFm=+[*hhh9mEn,rM,M\/
%]_<PX#LTsM$&#iq:K2[S(EJjJTTF&`1;J)Bh:Z^dEmL*"cL6251qV;keo+bM@_.idFI9[G:M]?2NnZ$==Jgd7;:fn'91797Af9as
%R?pPM)tTF@kF/D]&</PJh&BQc2@1ftCo/T&,TfNBO:U0:qjJ4SoniI+'O<sok%j3u`El%Y=ntu9h]=-C>2:"/4>PeTJarn?j>#ai
%CglmR&O_c[G!p;K1!S4-g)b1+aJ'JgVC/,1L8R$D:mNMfr,u:e9fZW&i;2Wf]lQ:=A?=V*1)!:]Q9e>UYg2#,1]+[_&f@a_)!d$T
%^o:L+j"oig@`_P5)lISE5"N1g1bU4o&a\r486TAt,)RD%`d$`!^[A*RcDG<8`+Sa]M[D=jWu.I48f,?r[gqh0AkNm@-u>CXV;f,-
%e39WaJ+;#?**QTEVtSWbW)j^O2AY]8HEF63)A=Ze8"'H_&I@jVMr#YB@Y[0TFKAsIlW-k+Q^/%?]8j%@lZAM-e&G2EH<`Snh7Y9&
%Wf1T.S"9u_L=CRH=d&9T1I%E4Qm7fZB[VeMB5VTBpdWM#Io>,$34Nc3/X*^O>Ru&,_U'`k1)RZ([VktfpK7*hG9&b5N+qN^lc%l3
%!(@]1.IFQaeo#F!)J=iV_o]8T+[?P)3U[Q4q=0uG`F9UL)A),Fc'2cKi>:6m5)n0cAYp(_cN`Trq%7,j&"[`tq">S$@,Q;.ngq6b
%9o^LafMd_uYS$[$!YNJi4KdCmRBj]qn=Wp;Moj-W&(r^DB84O=N%)TJo\)0BBc%s1j.D^;3i51Y;>`taE!WPK>p^**#@WgV\VoJR
%?hH+u@?]s^)]a\&g]$O^%YI;U%Xp'WK(1BjAg%<*9"4<e5-YMJ_@agH`pKPfKJ0dHkBEDp)`,a8"M-l<mS+&dLFlliOtT4o3OLa<
%:KV0>q2i&Z>3;\$Ac_%@R%t@2-XAB0R_B(W&Y^m(B7GcIDHQ(.3fM5?C$SeZ?im-Wp3g_:F#YM-pXo>nR,ZKlg)=7,fu*g6Vt@EC
%W@Q:njHP?6B&l(s4T+2>IV>HR_s=Jrj$`Ro@"C(N9[ka`3_9Wj9bcgoA<4Ur_us>ud#J&b.9[3!DA>0XVOApRgCu:XImd8*#iXQf
%s8:ldJ,JTW/,geQWI>/9rdS5]CR:L4'A>*f4+NSpX/I-;(,TsBLp@c-']+Xi&d;@295f?*)&30%UD1\(bq:!pGU])X/h[PP+kkd@
%>981fTr35ZFl\?$@TBAdZTQ;>D0s`UqG]lR+KkNpqW'X=2&)(/2-L"Y)95-:Gs'8GqQc568kO$1oH>o!*)F'L?Jg,&>PiN2f`2#T
%\`Do*X+a-Rj@nDB'bFJ1b6F?9Q$PDk^=79j)7`Um*L8NtlIL?KY(?8NZ+S"r4!rhPe7"K%Su"bEU6[]iN&q>kd"i;TcM=d-OgCeF
%f5rW-C85G^G2G@)Q9QV:m8*!uGMF$>E]iMhnV[DSO5G^UQbMr33=jN&%u*(C.Tb`3(f(qp^Egt6L0q+*&4!=.RWi5b=gshi'k[t#
%%-22OQr66]S%Y5\,B@F"+(l(ikY/5:TQR3*B)8'QC,h#m((#j*_9kDVI]073+c5D02;9P5i/KodM)saaVZ'C=*#6Ac46]@__'$S@
%+e!Dn5rM@H##$sA@>E#pM__RFdEXga65<G=&Yl?jc[%]kk[I*88mqsr5qE-Cdfr0g$9Lt;HSDiVB;i:;h^%<Z/_eHeNmgd,9Og4/
%2)uW:YGiO"Be^bu\9;"$'qgJ?"_S3eP$s:b'j-f:N'a=q&oYKO5ba7Wh"R%#1Nt:\FaT2`B-B&?2;haK\O1O%Wd]sQ0l*<PgO?>n
%PmeaT&))?/BEIOTiNmi34t>a+V,Zoc`7;B/Fc$M?97,+*rLr'f;HuWtaC\]dO,sF7ch6B2!#f(pmTl(;dU_Mh)Rjn[!OIEC-dOpN
%oA4)#J4NDPVndC,L0V9:ffT+CDd/:)G*Wq]`6og5CoT..:B!BF5(5QslZ>O#mkhl%JI2.udPiE%Oo7B80VM:+"$;B/*PIA,5QUAZ
%e'aU?cCrO]\OkN1;TcHZZdQcT;(g8[%s)0KZ?D`8R`;F5lJA!V\pZbkj3iUCX$XRJ*?&^fIb%q($tt=[n@a,-\Zj'i-HdV(\!Cq'
%>KfUFODWW7qf6nfloS(=mM-0hhs36.*O^*0C81?jjB+T^OuVu&,raM"UnWBi4VuZuXEV[j`h8)XX;2=hY.`\9G*0@q-f0.1L9r:h
%CBcgn@a.@OALL$>id!<u*1buN7J>@%p4^K48,s"-aM"a6PFph]Ic?O9@kb^mP"(-$_qDgKAlm<ALuoYU:StSa_oS&W(u?TW@`sKj
%BdgJASj7f&hE6h1mB)DCp3^>N;h\Ki14qoU?gHg93%SmRi,)E%5#d$8P=_8)a[nG3M8*o;O'fAiF4+/j/5q5\EKm60f17qo,+?f+
%f-HRj4t$ab+<`oMWF(srY=Jjh,]31\,+"5VV!94%`Lp$Ee&C<2GT,?8+Cr#>$OF!B8XC:lS$^1$19;prMquqA)s$7j0\JV9$GR5Z
%+gN,)b?^DfOR7T/P&_*]@e"S%+]sduh'E@.ffl4pj?@;['dgILIaGmMn-r7o5U+%S#&#sA(V/+_0SF`>E#s00J=c_BGa&3_mnC2)
%""-lEFFsaSi,*4/<sP3*'%Je5Y3rkf]JZBh&5mbYo=2VDOJF,GKD-%o`G7l>%3%S<4VpHsB7&qH-BURo/rERF"$`g,$^F-N(Ld1Z
%YSp%=pg1n1^^ROS&-a3QL[$tj2R_4pT84b>pq9d7*`n':>#\!/kM9=(l]F"kA0]uZ*C0fR)$U9k68HV.llk77)FXAm,P;'r6*t%M
%+LfR57=H!hi%A?RegD.mb)0+,p)jLt9$aBkmWj4Pg<'bC#BK1OF^[_!b-rPJ`qLMKn]S*-@=$$=F'K88U38&t@(?==*]dEHdtJ&4
%DiJ'$;dZq,Pq]8fhrG7dSPb"jMQA[&G])e4=0)^%;.iU3)cNl"bW925STU^/C!tM3op(JGU2-XGW;Dr6URiXm'Q.H<%GmQW,R:OW
%L.CE=4lT^Mduubslc.1=;4R3Y_`@q\;%A,WjQM:1?+9b0j*E%),q5-QY4u$V@_S]F7UD^)'42lk@>>@o,IYb_0#]2Z;XGQDF-MkD
%RYH,DGRgHi3r0]jCdB.5GPiN"E.;u&%nBR5e/l\0?SuNb)*%F#FH^j(AA_&IRT5>42"$$*^m7`H.L2[RIl5NPVBM>tn5o#npksG\
%/d5as29Z1A\?3=+B;6puJod7THYVq"G-%otaLQFgE`D)6Q)iY6YPoe-L1Y9dYBGtOY2\kq'*Ain"ico9hN,,V^DXeI)mG^5"^PNG
%oklLLH@b)tlLh]#5EHXbTEs1SYT`NbiCP62``3#GWDjg/C\FPV>:bED%>ULtPNr]WpF*GGAq[il)bEuTprGi6iHjnZ.S##Ghg?>K
%i"e?W__(;Do/5(p%eN'U:Np3$/Ve\;fjT%%SJic#GqOs,QS`,U\(%csC]p\,0s6Z8PZQ]$-7-O`;Y*=W^E5gY_\<bT"EKKTXb"U]
%7ebY#o[i'f2TZLbP0PA_d'VmN'"L!""^te0W0]1C]fjA*@0_lV&QWBYF*nEIHF9mikrlSMh4ns\F,(F<O7'01YQ]+'(7N2EMfUie
%lJ*#;anV;+4q.!<8L&@&4]Z2/<^pjW5URU+%VBi*dVR:3>d]_+2e//&R-H-$&q4$">L;rO:]T1'i2$1J$<*K(j[2`P_3/7_RJR*S
%qLC,6:nO&Q>0(EZL)(sKE'EM_:a<+3fS;O2h:naSTWgH80N"+3X6p'dGMLs3rQkulW:RjM(G.s$s6eF_`HKnR%Me_ZDE!)&;OA:i
%o[(%`:,g>4+YnOWA]gpQ<9D_VpO_[ic?;!`p9FQR[_'TOeAjQ-:O=ai9E9c=XmJ-MXI<>XiOh.95]o*B`e1iMIb.`D#^@N<+$52(
%\VL/jcV7*BN3XI/er;c$J.'H_MuHb3rYA!H)dAE0(dY+FH4t"a3qQ)dA+r#`H'))!n^*>^BG<jJ0M7AsJOTg_3Qa84me^+b1aR;T
%BR5[u&X"<j+",!Jrj`KB0a`*)B)uN+96u+&j^\p\MYNn)k6f(U1/gcj7$sceoe.[?;d@Y"92KQtU0D9*hO)=/>-bPK@BC7)%WsZk
%'S+!eLZc%6d-V[0[`-(&E#a+ZdPN1!`hE6_KXUh+PaPQciO6sT*.T:IrB[pZOVVee&0fFuMa'Fc_N3S*`MZfR90cMLD!dj5,>np,
%6:kY9Cs1i.NL'@l$j,S)0-`_NI"'T>?i9[r>KHt>H]a7+$5:7;'g<"]DL</:PrD$g'J:&I2hVS4XcL("&IO_Hd3:`ZF,6g3!^c7,
%*8g0gnorc'`:=!]B]?@:U:GB[hC_3%%b*Ei1%h6-]BKQu3ek^F--=atr:oZebL2/naF>BZffod%d8hC&WL;S:'*824PN8[K#UO"k
%^?sUV)bFD6h6i#`>)/-/6"#+1'O5NDm7/d(XP9m`Z-KT:7>N!)6j.R$fKRG"m)jL'+I!U!<9BC8&ggW?_gMiR<,:;6q[2:o65$^M
%.DtYNVV=Ep^t>=ID<c=.M]7Yr0/86E_B@;Q4>4.P,s.uMD+qB$ON;Oe!!jd%?.]?Y^hJasiS]Yb&$QQ[`PQ<RkKD3Y!`g2]I:V/q
%MghBGic1PNJfZ1U[];5V4S`/pUfQK=_E?EUT_nJ8%D,jH6gf:6"qD"6b\fB+Wq(JINK^E5,SDpVL5]_i9!<a0h=,#BrXeGOI84Ks
%O[BaqmDp:(,-1tMIEMET1a*1uQKrOA8BuJ-CM"ARG`;FEb=;Q+5b:bK)L4')"*X*Od,HbEPRO=$g-_42^;4l3RQ8_IW[.A9cVt=H
%PN,$=TZCg"HMSK:6^Jh%r6t&))JMRT)a>N\o=3H0XpJUgQdn<%HWt1_#X"isPF-?gD^:)Tlrd,aI$u=:]tML.Us:u;S?4VXh)&`;
%Jl-.Mg=tA6-/FZY*)b9hDmf&QB7gjWb)CPKj:1F//T/X-Z7,C$Y5.ie!I[!oY(;%9is`="@EuE</<aJBZ\Y$(:\S!i?bO];Q`4s%
%H.($rqg!R^>lY16FVQ$phpf]n[M#g*:m.U!L4*_S4uZ[)J/5u7hcE*?gK@>Kre!GU"XlTi4\5qWbSBg\[-C(^AI@s'!B]?hfnRf=
%2sc0TGkgg%@(is`m79+TlLI54D_s"A;0_[aiJf:TpJ7,AXe&Ft9/rPa0u!Q0qUPH?4>9`5h=Gp]f-.bP8)HkG88&A8UG.FucNO24
%Y^#<.MJBi8o7gu+cU(/@\=</iWQFrsWuo)NF[`eH[%l;dP/]bVTuik(Hc=lt4hI'k[P0YWaCq_$bghH*k8=oh(qPZB^Gmj-<9D,r
%B;:)-jfa-9Z\oNClspA0NB<#<DQ:,s+<Ba3;kFNHmkl'hU_C1JmR,AYiX><Od]04q>ehhXMLEq5i:dMKd]@laPe8"-AP%5TE3d4t
%WKtdD#(L/DoIia5Eg]KSkM5`b\P-'F5VM/dj,"$JJKl<uI\!_Q4bXj>a!+<-l*qsui_V6nAqHk#9K&7GfJbF';kU3d@6k#M8MRc@
%mt>3ah[!A;iZc=H,P2V4:0Ue^S/kNVcP,no[c>'_oVXb=.$Wru<Agqc)]ljZc/5E9P``2A9.F!_,Zlol4cs$X#h1;pC0kE:2HF0K
%W]GFUfqH&LA+UW2m"uK%gYau%e9?]>0M0Q%'U99eL/YGOW'rs\8AZ'^.*r[i-S?Y1(X:RC:BQk4aoY3<@H'Hs<.Ggilfjk=]t5=R
%d][:qrbA*YCr]4E&kj0&A]#TSM=cJ`++7`&dFQ5m+5N]i<c]L11oi1Sh2K#?+<s%tS*"7uDIH1V&fb+k.iE_.,/Qu1#%r@bQ-q><
%7C*KFL"&@LZ+<b*F+iE*G*<C`3fq)Zfb&*<!!R"MD=oTh!r%nQ6$fg&B;1,afXjV\V^7m>p<YXs,aAsgh3Tr"M+sZc'Lo(oOX/_1
%O:]C[00#iL-2nrVA=3qF33nr[`*8GVNK!8Q/8Ud&8Ud&M:*-$!?W?O8DgJsEX3gF='H>q[D1@@fD;deu^D,)6V+A>Ja-l-)Hj(rs
%rp%Kl6sOa*kf0A3*alVL]n_Msl-sp\9Ho6PB<ld3NilJ/-1!T<<nb-NN9<[H[pp7F/W,LR,3;)TWBhqFKc85cgo@'b=%4-:5=)Nl
%oOD]O^bg_M)0Zc[.rS@$"<85qk]t=`Ua:[#"c3e6Li45iD*V$='!V/T.X7nH+dj;^/526AEU4HY-Md_6]e'QQ?j@kC6sE&'qmqo<
%Tr4po*g1fGk_BY`Ul<Q1pH&iOKBFaN6aY;%mrb2,+YjDOg@>NI[PcOh!/ZeZ2>fL>pjS-h4a[T3(NAJhdP01:q4VEJQ-H[/g9eBV
%L_tso$X@LBLam82i>>4N4teoj#t>5r^'gil/J_SH>9$nWRrMrB\Zf!\.e5mb/!3RZG5VM]O*l_UTcAb61Ba:?qAg4$%>4bLr?/bU
%TK%]$]XE>eGpDl29i6o+$,qJ.;qI!^GM*VG;F@`1@t+lI,-7C^N)5#7O\LS.DUdgb9G#EVTOWSTQ.WS$^er<Y/<Yj97im*R(l]s>
%A(WTRk93_EelGXY[Sqh_N,ER3&ika"q53HbFJ82^AU&.K_F9$>g%;N_$tHqi3#sD\,()jgq]ZmII)Z`a,eiXY-K82Udq!]Z>=7@U
%f(e'I`@an6\<Bf%9,MJYD=ZOJf9BLeqa5D/aS<PA-aBN\HK/R=&51reP:Ys/eTH$Q6Ln)o7"K_q];]`"L$+6nLIK$;bg2Zr@lhla
%k4kr=D%8ll>MkNrMW,h^)c:tN]J=?bJYLAb0Iji-Pj8rJ=faX?Wmh>hK%NqehW:;B[FIhtL6"4\UD2rn5U-FC$Zr]om>.i1j9GuC
%NYnNtY?br8X7))FS.Ohcjqm1-&HQprp)o9VV1<3B44)#=^C-;W+@;"<FbO<r!!squ#[\n]>WT$q8eN1dQtmD!2m>?CiJr(VT.'gD
%JZ!NASSP>lor)rhHg0<;r>I&[<g#?K4q1B;0J`hOKoS9M42V:Ch(e?IG>Nu)Wa:@%rU&,6puNd)fI$J\:trq/9ZMJVe%\>#,/cIF
%3fZ;S>3j>KYEnV0==0>Dbis6DR'??_)7mAYrYC-@#<t`Oe$PiE5TTTFb2G&[p`Gje$;CbS=;7(?"1lntBDL!S"ic+e<[[OAV-eh&
%LcfbUXubZDU#g');3Su!jLCWnJBTPZ4b&s"O'eg2o8;SZ!"B#_lp&TEpBP0sX:Q^^1sN1_\rlNGK_\7PP<@iA6$IT2#>PIC9m!*'
%btoT[cbUrd.!#r5r#]fG+VQ0g8G-L8Uu(GL",mgD*,X'UrcDYuQl>lg;NG8m2E+5)Up3k#Z,4kH-$[D=gXU?c3bMh>OD*\f%2=tD
%F7\qFHkf6]18\,M`u[^a!OlUnPnds$m<5)B<>g_nc]/;I,o2?R]7SBmN\4Ohd_)fnE<^uCQq@j.#.IT!\4ISI+aa>`RNpV;S`K]Z
%16J8%1QO0::+<83FEg@ME_J:9pB/NJ'a#_pkUo`(Z?=jQHp5mf(kH-nN[R>_7aR&$&ff*%`KGL#d>UuVUF@>1QMYeg5CT*_2jhcn
%Kan/3\I$r8P1+'YKd)QF<L/K/lZ;5nKV'I;CB&;p[!.PV&,Z?q^P<YW+4hNi>_V&K0RQ%l.CiH+4Ae'5h"_^oBS=k4,*ci6cVOH;
%UVDkL(iN>]n-sndPBY4dk:Mp//"eheR1XON8Z93d2o*];>QtMP/bQ%a^\GP\fG7!fpO?W4JW><C9dQ%BR?9s,rV);;Pj(f#TD)nq
%\3-B)p&,^,(B[m5fHeY72EHLOqcdaU:`SGVe;]^FW*3u]YEpj/ln=Frnr(6mm/M>/fDkc@s7mbXQn]53NidtH"%k3s6%SF@KK7[f
%2Q1tQJK2I/IJsI"1rQ<f1LC+[p]'t0JP$8:T@Ldh3T2Y5rue+`O=@tQVF4u`"P/nRI9+kl6G3CKf#1La8i)d'O[sP_9_a0!7*Nk'
%QH=@PGfgd0(n2)?M3"-Hq-k(<*kE=a\:s!j]8I)S#t%;:RL-GYo48118L'D:$0WmFVX5Z1']:[?/UQRKi+N`JP/;#4c#,i@AI6V,
%8E*@,[mZ[:Ic>rkb-Is6W49%+)97[[PO4((fn@0N6!)IrEp>O7dA%W:=dXZZ(9u@&ft?Qn&VM;EQGkpV7SK\nHU2gm_0#3Mf/+;[
%N!Chc74/*oi#4mB]KpG%:a,EVKe<p_R1Vn8I>2WU7.*Q^_^I'L&oL?eaA#;s%Sd+GPQgc+P<fJ)%1HbD&eC'ZOVn8'R?b^hPTWRK
%E1^,@HIZ*V<t#6ZOGZTFR0J3N%oMna,h$QLX#M2XHFa728RI.H+LFP`>;M;d71$qTe]RjKTMC1DdJ[d$l`&nV>bWZ$6tKiS=&`Fe
%./e0\a1Nj7?'q7anjnmkE2f!Y,gV)aGqPkbcjO(9Pf_u%IrC.3.2g*5K2'(2BGicpEY%\AnfG)mR*GK>]^a@.a&,\.D5f:BU^[A9
%XYF!@d/^#Q#SCd5GUOmN&2L=`7$ZQo+u'@Wi7Bl$hqYKNh2#N8#NcuY:O=+:/:i>Fs1T'cSDsq7N#Y/:AIqKc%9!h:Mktm\TO=K#
%D<mtL"BiE-)>a>(#q4V_H(VtFcV>hp2P'(`NbIY`1irok5N5r*`aPd6#qe=NLKkEVT.98#K^1)GWH\^)]-O@_b9s6I9Z\!aXD5h5
%XYL$h3kH\d26VujRL"H*0K\go9.\!pZt']<T8m0o:`Tf\Xa)-/[5@8&(sX5g4lWheEKA5<rc2ATDBPf.ZsiF?fAm@h*.;]M-rlE%
%0bc%#eVOGEo_5q=_kR.GT[Gt4]36;,Ye^kVFUutj-d,4A>&^ErD>9Ps-!GO3!TDD!+aV0.^T;M@[H"3[n2sVJK.!65JZ?:f>skiJ
%KObAn0Lf*I!YS(d'7orQh"@dLI;L`4[VqeeV]Sq9Yo`W[_]=%K3e;n2/;;Gnc4aOk*3q8M;P^1Z]NXopQe'IeO@6cg0dm+-Y3f/M
%'hb7$i;fRGA%7r4ehN>P0R%i*SShk)dG)noKWDV`\-B"/<9eUTTRiaI7G=7*q9_&"/*O\CGW;l,"N?>^G9<bg4e&4r%!XGTH_RD_
%$),cV`4OF\XFQ9gO`eYPZ<<75)(s4Ke+#Jk.d.h7@DdB/iKn4/7'd#$qsB5@ZXZgiHFMCgl>>nUg<h.H0Sg1ig?1b:oFK=Nk6^M.
%(P%F82l.LYf4MT=-?o3>1Mg$A:W"7CBPhB*^h8\'8Fh)qZPXS,.nOtJCMmQq%@h9^chOpCbjXS1M:A(>X6YWH:VRs_ZK5)ghoE'8
%T/GtaopEMXF%U"WQfEh?CFD%%Yo(Y17c7naD;/pG\OrB!.Q.J,dA4,o)L:LLiGF7E8'CSD6f\_cUEZ_c6%S`Q(25X![!<'CC=R*c
%h.VJ9BjO:[\B-Jm]m1B;*a0RCX8DL"haZlI["II`_lb\T<8:8^[gaST;*&oVWmnP-%(F[Q>%4#n[*8qiK:&#?\'<:;-:1J%SZsi#
%>*!MHT#8o$i,$#.DFg`\pC!ha@@eEkK%/9dcJmUA5$Q7s^jYFm7U-*9=cn0U%`qD=cVm9<q@6T7@".Oq2!5)CZl6\P@,jgD<l%X$
%8=$3Wdl*L$W(R,-n8K:05>J2Wp(Q8d'jL8Q.850Kh3/o:a.$VB=OQO,ameil38Q,H[RM[(iAU`C7o/#j`Qt2'#G+J\pqV#p1E0q?
%Yp-GI?*O]+da,>\V?>YE]X!4"EL#L!E2f)MWR_^UOj\N@^ELWg)qT;d[^q=p66WOm,u[G?9f4bJ(AEb0F$(r?e`+[L75a4JYc.7_
%,h;TidZGGDfo2gR;#1rSlG.KfM`@6:);-fcMLTrl*\n,D$88^A8Kt#c/_-969,d5qq!Q1Al]so&>MdtlYuAUXE)FlOWQ"tj4q:HL
%%G](RYA&-',>_"8[iFOhh3C1VG`8Nujt=Rindr.A/GT4pVAU^M._T&c]/1^)/"=#M0irNA<l]'`NHlkSp!mkjc?X);Q]G?/+^d[B
%0om2qeUHb.&j&1C3p\X,*!K/jY%Xs2g:0W7/F?QL8FNUuf3uUud'gnqJ#5g/jh:D@nZ0EPef8A_V7Mkc#1Ug/n9onIE<RS_MHenC
%'<o,l;?RCA]rriM/%/V\E3Rf/q@P;GL]u\W#oE,o`JQr%>8EYH>(p*Hoqq2Kme2>@S>;tt6u1IJ?MC4%]d=p@MIK=?<9QSp`a_q-
%s3Q.XG+(`IR,>G!GTe_k"mW<k1;l/_/B`dgFqrPJ&A"jK4t?TA46Ti_7c4FHU;Ple3LoPD#Tq.SjT4@UP17dNV-?^UZ:n2L>@kLm
%DY6V]!0;5sTEmD9J@@QO(PQdeN"iEGC3l5FDq4"pX&[DrD?1!uND'(M"ru1&9VGl/iI#OFKCkKXpR_GArB:+8&/k-#Vk9c/544k*
%5[oX@6n5k-KU$h'+HphK-=6f$CXRGX^CoZtc,WKKE'o@JBgK/m'"ZNIo%B'tlU__,C`p/dSGHZJ$hZ(L0Du8Dp(jnoP_K:#A\*Vp
%;fdAok7n$VQ:cFnrkE1c/qerAXEMI].89,t<[,Z[#o9+H':O]@0]I$WFK^uPe2Amq9I_rN-jQKJY\QpIDpSiL-g)PMnn2OHFe,Q"
%FaU23RPWH,GQ,g5StNfMLJVKmC,:nkdn(Oh8Vj?=CYZ=A-CW[GGOuK!J1-i)#R'BD7(Z*s`/f2?\Ehu%K/=fr2#"b+Bk!X8elm.t
%9-HaN(Kk]r<&WFpIHm@,FHYR\P6!VHUd6:IGpL'];W%#JmrntM9uO_Rj)YkeD@`XVQ!IHM`NE*7F>2D>]Z;pY]#HBqXsO+Ee']WE
%3.c7VYXRh"-6M.`f1j'gbYaXe,Ef08cL(o@/`mD^GV7dI'ZB7c^mqMp8frc<\rD2Zq%iC>5Q3;'bfEfc#C'Kp[#oOrD,#@d0eq0:
%p3+-Xpt3mhAOS<^IWuAb25b$G]jgVG4^2*P2/[HJ><>TcoS!KL7nJ.b6Fjo,]L;T''#2n1or2iNL;-^$^B*KL2:KGXi7LG@V$HPQ
%`3Wi5fVu=?;(mq8kLGti[34ht)H!W%`[#>9?g4tdFocj3\V&o_&a7\8h03Ht0A5UH[k!]CG+AQ5YM2<oWV'0P5WpV8RLukjNOq/u
%28q7#P*%jqN)h48N1.ojh317Jj'H[P-WTI@oA$U`j5?]-U-_V1#23D0)V&d1CT#FOa3p9JrZkOV2V\&EnLTQ7C'uLl*anBbp3k<n
%^9`VR_,=Gm,Nc)ED:Q:V]6^`"7\F#qITb$_0"fu1l7F:I^4H_JXiM&1-5ND!P60B'I[ROTq^gcUf`P(P@'eE^'Z#8uSI$4p[-UZ7
%I_5#bf;NF]HG(o^CHFGC12;DI!`@sLLBQ;,dWB%U[mp@Sa_-dYC.U3_J+iK:Ue&Sk(73P`f[WoHC>)NX6pVV0?NE++&\r3n;DMd=
%^bB&rLK(pF!'jt:RNC1a%RuIA9O>K)jiE9m*(jt;H_S..k2EFBP=a^b9$!>jc&2]"XsQ\ZnPEmQ!]u7g/G(=hs5&,BE;c%Q$j:PI
%FsI)(TehY\)nh[(is!K=Bi9PX<oas&o^p#(W'jk7R_4YeHOV``%9fafD1,_NRbe([W\UX=q!&aE8uL#W4[42oh<UCrSHrY&p!2#-
%TR%AML3Gn0rD=lC0e%SDqKe&=8*)mppt%E*=rD:9&:X`VB.@Onc"aEm@Fc'".(?MPWHiXJ.HoX:Wcm%_VZ<Wrm-`CBUfTDr'_sh+
%Hj]/f^sH&qm,[.h0`MOADbl*O-<_M\?6*0ZGKN"=6go1XbdnbErS0o5:Qq1a&cX%pj^11fhaS),q&\NFH7$D9peq:%MC:X]#pV:g
%)eYfb_5tOf\F+Yu3&ebi/FAJ!gGU%cWl8JEs3b7Oqqi<.@c&cOkdD-.kQmOWQ2q_b..i,/MF/S*(d<DDS%)9a1*s%>-aRXo$BM;X
%r'X7iM/E@Fd,JIbb@S7WdsOriPn#QP0D"lnmGK[(C$SbuA<9Y;Jj(cK"Bp953jU!$0QM'I`eol^=R'n]>[F&CN]`U+X;&"JYfR%r
%@o"RZ(b^O1Ni89kc0l)=W?uY.B2lt0e`gdl]:gXi\2+.r.8PEUA@'eQ]0F(9M%g'8+#2J\bCM;gRk-d0Ed#XaoD>s=Nma#['7%.Y
%)lUh5QV.(jD=E?CJNIV]W@//.;/j6'hbidj>W[d@V#\XTQu="*P`hNKg&)PRF>YM$Zh#oKl=efEZZeO(Pomjih`)A(M!BR,mY>8'
%9I\!>*4&iE&0XT<OfoHPaHlP)R&0tdgdTP,f;b,;Cr[t#jl6$*!O$ss:6+]p;bF%sD\OR%8I#L;)Y.doG-8p*"4tMn0?te$,_/Wk
%l-.IJg[!$g+e.aL!a)&A]7]@C>?6?jAQS'le/Rc2nI`s>3j@9oAFi4;W4S^NFoRmGkOJ\3Wf+jIA)aV?ij57+j%<5$iS:usn$9.G
%RGQ'VX0:`SYsPPMLc:r\8$s&6!H9OW7?^*^?`nZ=ll6U9aO]IA78'm>%,nD@J:*+,[f<.iLH=eLVd-t\Iq+.^3g0Xmn)],.,-B?c
%^F2*f4JXu6gXKf%n=F^aUETnb?h\tFPs,N!i'oOTb3`mrY/;rDJ\"H;[_I\B0n)s8Wu88ZGa^YCF%1`$:"9\STV%dOcgXCrmu\5J
%j[-.+o"`t-5hY@^O!LNQ--h'_qRDEaQq5bp0^+^6l\jArnaG/R<g_H,_BFdN%&>i5'1$`#iMOY@itX*n"">HakYF<[3WP7dE\";,
%+C8F,4PT:XUF0=?m2`e]!jls!oObiUQ7F^s[JXBH3HI!3()C/,B$@^gh$`;rG/WtGN.N_1(%pHY3^K^R'4OOOL>X<kfh*0q#]QP>
%\lZ\;d?7f!N^tiW%L!EO*\Dk&E6*=^j+u_cc<TJKE<bVQ\^$'jPo_Osn^t:dEfTgTUn;GVg];[nVrQmk@*!Ac`jm<ta4'N06Ej&n
%ak^[Lc/,0g]<#K&p0<I>mM%n+M<E$Tqm(7Q`rETO24mrHXDbbd&"`9VI7?:ZnSFZcUlP("Hhsm(KCt7Bd$oinZRJR42<=HoK+N2[
%NYGA5W^g,,b+WF"/*uuP.:`(]+*5%L\RcoF0,s]6))k5l[mHp;Xf,>(f?YFj[AN$e5Wi+bqm)t#oR$a*QS+IZI?E+,69E:SUN+W/
%dq2S<H(]E#)Ha8>=Ir%1_=g:)HP(T&6OcCpb'Jj6$Ku9kfq*slD4kBN'_=BM6Fd?9YNN%:"\$OoTO(AGE=_l5(KcgQN+4uR\RPq[
%s3gqR8eP85X:s7<3JrjH%Pg;#b@[Mo=SfN\e"*:#Rf/K91kCn_HNu'++=1,dKomRi9N`Wf<R9Wql-,_E[kYaYliO/*6euUHInRAS
%#fYOC"-Nc06`">-3gMK*@SNSo29q.POehMTRpk*>>T(oZPqSpWT`7s&oCJ.H1)YTC$,(Q9F`Lt0X<t'48_\$DZJSI'WCPOo3A>0\
%4Hcm6ksT8'1^*!b:L*;NM^QbLoT&'SN@VP2(Oj*>Qkf/(*Lg.Yed@kA[^YjH+qSuq?G(]Z@26p(PKGs(a&`n&+u<p]7=c],WZJ']
%:k,C.A@[pAc1]\52X+ZJimE#l215s-rVXFfs6f3VhZ!3Zj0.A<n@/-6rql67YCHK`Gl+BLhgPFoV[rh&kJpA*J+_Vn+9)6/c%dBi
%q!mMX5C`U_b<N]9maK4KIfAlda#?6]rQ"pdU4]$>hS/sNO2(_kX8`27h0J&~>
%AI9_PrivateDataEnd
