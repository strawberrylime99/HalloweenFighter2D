%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2_1.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 72 52
%%HiResBoundingBox: 0 0 71.7786 51.3806
%%CropBox: 0 0 71.7786 51.3806
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 10 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:57:20+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:57:20+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:57:20+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FUt8w&#xA;+ZdC8uaZJqmt3sVjYxbNLKaVbqFRRVnY02VQTitPFNR/5yB85+abqWw/LDy3JdRIeD6xer8Ck9+N&#xA;ViTxHqP/ALHImYDKgOaQXXkr87/McjDXfOMyFq87SwdxF8isP1eL8DlRzLxBL3/5xwMrepe6vJNN&#xA;Q1LTQh+tf2uWR8UrxoGX/nHwRSFrTUpYpE+yxZGI+TIB+vHxSvGs/QP5weVXDaP5pvOCbpDJJIYf&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:cc5de35a-9675-2747-9ccc-f99b554d78b7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:cc5de35a-9675-2747-9ccc-f99b554d78b7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ad1d1ccb-b4b0-474f-b605-2ebb6a15f7a1</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cc5de35a-9675-2747-9ccc-f99b554d78b7</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:57:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>71.778552</stDim:w>
            <stDim:h>51.380523</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -51.3805 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 51.3805 li
71.7785 51.3805 li
71.7785 0 li
cp
clp
67.1467 26.1982 mo
68.0612 24.146 68.301 21.9179 67.092 19.6362 cv
66.2512 18.0483 64.9616 16.9794 63.4831 16.3608 cv
63.5407 14.1503 62.5642 12.0595 60.7116 10.519 cv
60.9914 7.85152 59.7268 5.2148 57.3132 3.41988 cv
55.5749 2.1274 52.8811 .937943 50.6926 .717728 cv
48.9284 .539505 47.863 1.36519 46.5334 1.80122 cv
47.4817 1.36079 44.0417 .861283 43.0871 .963822 cv
42.323 1.04585 41.6804 1.33882 40.9724 1.58833 cv
40.4812 1.76167 40.1501 1.89839 39.9192 2.00972 cv
38.2732 1.5688 37.3064 .63179 35.3093 1.09712 cv
34.6418 1.2524 34.0696 1.48921 33.5573 1.79195 cv
30.4167 .372513 26.988 .409622 24.3156 2.73042 cv
21.6242 2.54585 18.948 3.02681 17.2907 5.55367 cv
17.2468 5.62007 17.2219 5.68941 17.1809 5.75679 cv
14.9182 6.36861 12.8327 8.24409 11.6081 10.6005 cv
11.5486 10.7143 11.5188 10.8261 11.4724 10.9389 cv
11.3933 11.0376 11.3108 11.1337 11.2395 11.2382 cv
8.44162 12.3281 7.1677 14.2661 7.20188 16.6728 cv
5.56906 17.9438 4.9968 19.5371 4.30442 21.9936 cv
4.2927 22.3686 4.30295 22.6225 4.32981 22.7763 cv
3.95774 23.1469 3.6091 23.5385 3.3093 23.9721 cv
2.71701 25.3603 2.87619 26.6557 2.8176 28.1396 cv
2.59787 33.6782 1.71701 41.0024 6.52658 43.1118 cv
7.39475 45.3793 10.1633 46.8061 12.9841 47.2719 cv
14.5769 49.1787 17.5686 49.0556 19.4807 49.3999 cv
22.302 49.9086 24.2429 49.9858 26.5363 48.3667 cv
29.3821 51.6445 33.5583 52.0966 36.9616 49.3188 cv
39.0432 50.6088 41.6257 50.5234 44.0901 50.6782 cv
47.3293 50.8818 49.9914 50.2758 51.8264 48.4174 cv
52.6711 48.5615 53.5617 48.5424 54.4651 48.2959 cv
56.6814 47.6904 58.0027 46.1572 58.7385 44.2963 cv
62.1697 44.2465 65.0998 41.4116 66.7502 38.0087 cv
70.7619 36.0542 70.4948 29.4355 67.1467 26.1982 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.913725 .564706 .505882 rgb
f
48.9519 44.498 mo
48.8884 44.3242 48.8054 44.1503 48.7116 43.977 cv
48.8557 43.9106 48.9948 43.8354 49.135 43.7612 cv
49.405 43.8559 49.6853 43.9248 49.9704 43.9628 cv
49.6516 44.1674 49.3156 44.3501 48.9519 44.498 cv
cp
69.7175 20.458 mo
69.6067 20.2758 69.4773 20.1074 69.3376 19.9492 cv
68.8991 18.4438 68.1657 17.1474 67.1721 16.1215 cv
67.1765 16.0166 67.1906 15.9199 67.1906 15.811 cv
67.1906 12.8501 65.1726 10.6425 62.6804 9.07417 cv
62.6692 5.39253 58.9431 2.48335 55.8801 1.12154 cv
54.9704 .71724 53.8298 .588822 52.8449 .875443 cv
50.403 -.218796 47.9402 -.363327 45.9709 1.02437 cv
44.0935 .931107 42.1291 1.97945 39.719 1.42427 cv
38.9035 1.23628 38.0232 1.4106 37.2566 1.81734 cv
35.6272 1.71968 33.969 2.13863 32.7922 3.16841 cv
29.9372 5.66548 30.885 9.769 33.6877 11.8452 cv
35.1867 12.9555 36.864 13.5903 38.5998 13.8613 cv
39.4646 14.5434 40.5027 14.9267 41.5393 14.8637 cv
41.653 15.3549 41.8493 15.8134 42.1272 16.2021 cv
42.3659 18.2832 44.4157 19.7705 46.3235 19.4018 cv
44.0837 22.1074 47.0559 25.4526 50.1369 24.8335 cv
49.9201 24.9472 49.7043 25.061 49.4875 25.1748 cv
49.3239 25.2509 49.1653 25.3393 49.0056 25.4282 cv
48.51 25.6884 li
48.5241 25.706 li
48.2746 25.8691 48.0305 26.0463 47.7947 26.2412 cv
45.5779 28.0722 46.8493 30.8876 48.9685 31.8554 cv
48.0476 32.0029 li
45.1604 31.3393 43.3703 33.9755 43.7014 36.1933 cv
43.4831 36.2607 43.2566 36.354 43.0124 36.4956 cv
42.4905 36.6596 42.0105 36.9052 41.5735 37.2324 cv
41.3098 37.4033 41.0905 37.5703 40.8806 37.7397 cv
39.5417 36.4296 37.2834 35.9804 35.9284 37.6479 cv
34.3176 39.6298 30.697 39.6826 28.0061 40.5864 cv
25.6872 40.0522 25.3347 41.6586 23.1843 42.9355 cv
21.7058 43.8139 20.8474 42.6455 19.0334 42.4912 cv
17.3654 42.3496 15.9738 42.9174 14.3972 42.8994 cv
12.1711 42.1567 10.1101 41.3466 8.58957 40.9628 cv
6.28293 40.0996 5.26535 43.4438 7.01828 44.6894 cv
9.0007 46.0976 11.4914 48.0849 14.0178 48.291 cv
14.2761 48.312 15.3186 48.1284 15.9358 48.0629 cv
15.6721 48.205 15.9895 48.6806 16.4997 48.7827 cv
19.8449 49.4482 24.1389 49.7749 27.7693 48.9589 cv
29.8747 50.9565 32.6902 52.0771 35.6999 50.9028 cv
36.049 50.767 36.3503 50.5913 36.6477 50.413 cv
38.7947 51.1464 41.1208 51.4365 42.6277 51.3129 cv
43.636 51.2299 44.6428 50.9267 45.5603 50.4765 cv
50.0456 52.1596 56.5671 49.7959 58.5378 45.082 cv
59.9787 44.6899 61.2326 43.6469 62.2546 42.2675 cv
66.009 41.1103 69.196 39.0888 70.7693 35.0249 cv
72.3864 30.8481 72.0774 24.33 69.7175 20.458 cv
cp
.733333 .423529 .380392 rgb
f
38.925 1.00288 mo
33.3186 -.158249 29.1013 -.617233 23.821 1.3271 cv
22.4006 1.85005 21.0725 2.72945 20.0998 3.76753 cv
17.782 3.85591 15.5769 4.82564 13.8576 6.68843 cv
12.1213 7.123 10.6257 8.7397 9.75363 10.6303 cv
6.30149 11.4135 3.676 14.3994 3.8049 18.2939 cv
1.09348 20.497 .267794 24.1865 1.51731 26.8764 cv
.374728 28.267 -.263456 29.9809 .10422 32.041 cv
.228243 32.7382 .477267 33.3588 .80588 33.9126 cv
.446017 36.1928 1.70627 38.8042 3.9094 40.4809 cv
3.94895 40.7285 li
4.14182 41.9272 5.74045 42.7563 6.84104 42.3706 cv
7.30979 42.2065 7.77756 42.0424 8.24631 41.8784 cv
8.62375 41.746 8.93625 41.4721 9.13156 41.1401 cv
10.9568 39.8168 11.0691 36.5043 8.91281 35.4179 cv
10.0788 33.958 9.8757 31.559 8.51828 30.3398 cv
8.86008 30.226 9.20334 30.0229 9.54953 29.7055 cv
12.3239 28.4248 11.467 24.3466 9.01047 23.371 cv
10.552 22.7221 11.6765 20.8779 11.0891 19.2119 cv
11.425 18.8359 11.7614 18.4594 12.0979 18.0835 cv
12.9333 18.2421 13.9465 18.2343 15.177 17.9931 cv
16.9426 17.6474 17.7795 15.9648 17.6516 14.3603 cv
18.8801 13.7973 19.4665 12.3833 19.3918 10.9882 cv
19.8821 10.6655 20.4821 10.541 21.1985 10.6245 cv
21.2019 10.6162 21.2053 10.6079 21.2087 10.5996 cv
21.4646 10.727 21.7195 10.8549 22.0178 10.9702 cv
24.2419 11.8325 26.0764 9.84126 26.3152 7.81734 cv
27.4392 8.32466 29.1408 6.769 30.2751 6.18843 cv
31.7292 5.44429 33.3689 4.28169 35.0901 3.78462 cv
36.2151 3.70699 37.3498 3.73286 38.5383 3.85982 cv
40.1638 4.03365 40.5222 1.33345 38.925 1.00288 cv
cp
.921569 .686275 .643137 rgb
f
18.3425 22.1103 mo
18.2829 22.1445 18.2238 22.1777 18.1653 22.2114 cv
17.3811 22.6572 18.4626 23.747 18.9113 22.958 cv
18.945 22.8989 18.9787 22.8393 19.0119 22.7802 cv
19.2551 22.3535 18.7697 21.8676 18.3425 22.1103 cv
cp
f
20.8801 18.5283 mo
20.5578 18.6557 20.3308 18.8603 20.0627 19.0795 cv
19.2805 19.7168 20.7165 20.8364 21.1389 19.9096 cv
21.2834 19.5932 21.4221 19.3203 21.4646 18.9731 cv
21.4988 18.6928 21.1389 18.4257 20.8801 18.5283 cv
cp
f
28.5144 18.246 mo
28.5158 18.2334 28.5193 18.2226 28.5212 18.2094 cv
28.5188 18.2172 28.5173 18.2251 28.5149 18.2329 cv
28.5442 17.6469 28.1262 17.0595 27.4929 17.1479 cv
27.1682 17.1108 26.8401 17.2114 26.5349 17.2421 cv
25.885 17.3066 25.2854 17.4199 24.8005 17.9033 cv
24.5744 18.1293 24.4035 18.4091 24.2795 18.7124 cv
24.2258 18.6962 24.174 18.6777 24.1091 18.6777 cv
23.3635 18.6777 li
22.6257 18.6777 22.6242 19.8247 23.3635 19.8247 cv
24.0539 19.8247 li
24.0481 20.5561 24.3029 21.2827 24.8425 21.7485 cv
25.4641 22.2846 26.4797 22.1132 26.7126 21.2548 cv
26.7766 21.018 26.8445 20.7412 26.8445 20.4936 cv
26.8445 20.3251 26.7297 19.9711 26.7854 19.7832 cv
26.7863 19.7793 26.99 19.5786 26.862 19.664 cv
27.1208 19.4902 27.5622 19.4892 27.8464 19.3305 cv
28.2048 19.1308 28.3864 18.8427 28.4709 18.4829 cv
28.4944 18.4047 28.5095 18.3271 28.5144 18.246 cv
cp
f
26.4963 13.0751 mo
26.4192 13.0751 26.4192 13.1943 26.4963 13.1943 cv
26.573 13.1943 26.573 13.0751 26.4963 13.0751 cv
cp
f
33.5412 13.0737 mo
33.573 12.6547 33.5671 12.3515 33.3894 11.958 cv
33.0613 11.2329 32.3308 10.7304 31.5505 10.6064 cv
29.4319 10.2705 28.4612 12.8247 28.1589 14.455 cv
28.0095 15.2597 29.2238 15.6132 29.3996 14.7968 cv
29.6047 13.8427 30.1203 11.7026 31.5359 12.5659 cv
31.8698 12.7695 32.1052 13.1386 32.4426 13.352 cv
32.8005 13.5776 32.9587 13.8603 33.2551 14.1445 cv
33.3386 14.2251 33.5124 14.1997 33.5359 14.0703 cv
33.5964 13.729 33.5149 13.4111 33.5412 13.0737 cv
cp
f
29.4509 19.7334 mo
28.8733 20.1728 27.8821 20.9672 27.9807 21.7788 cv
28.0334 22.2197 28.4377 22.5126 28.864 22.2861 cv
29.197 22.1093 29.3 21.8447 29.5061 21.5459 cv
29.7131 21.247 29.9695 20.998 30.2473 20.7656 cv
30.8127 20.2929 30.0461 19.2797 29.4509 19.7334 cv
cp
f
25.9416 24.5146 mo
24.3005 26.1557 li
23.778 26.6782 24.5891 27.4897 25.1115 26.9668 cv
25.3254 26.7529 li
25.3488 26.7412 25.3713 26.7294 25.3947 26.7182 cv
25.4519 26.6894 25.4753 26.6445 25.4812 26.5971 cv
25.9045 26.1733 26.3283 25.7495 26.7527 25.3256 cv
27.2746 24.8032 26.4641 23.9921 25.9416 24.5146 cv
cp
f
29.2863 30.5332 mo
28.3156 30.6069 27.5241 31.3388 26.5324 30.9702 cv
25.3459 30.5288 24.9065 29.2983 24.6687 28.1591 cv
24.4734 27.2236 23.1404 27.645 23.2658 28.5459 cv
23.4807 30.0732 24.1501 31.7451 25.49 32.6313 cv
26.0818 33.0234 26.7917 33.2543 27.4988 33.3164 cv
28.4436 33.3994 29.0339 33.0083 29.8547 32.6303 cv
30.8596 32.1669 30.3718 30.4506 29.2863 30.5332 cv
cp
f
17.8352 19.5595 mo
16.3698 20.2446 14.7741 22.2602 14.3503 23.8457 cv
13.8645 25.6635 14.0451 27.5083 15.0363 29.1079 cv
15.217 29.4003 15.635 29.2041 15.573 28.8818 cv
15.2922 27.4199 15.3889 25.1015 16.3142 23.9292 cv
17.2439 22.7509 18.5744 21.9731 19.0686 20.5073 cv
19.323 19.7514 18.4455 19.2744 17.8352 19.5595 cv
cp
f
14.7107 35.3032 mo
14.634 35.3032 14.634 35.4228 14.7107 35.4228 cv
14.7878 35.4228 14.7878 35.3032 14.7107 35.3032 cv
cp
f
23.3137 39.894 mo
22.4597 39.4975 22.3772 39.7348 22.2942 38.7124 cv
22.2414 38.0781 22.0578 37.476 21.5451 37.0615 cv
21.1286 36.7246 20.6872 36.7021 20.1765 36.7168 cv
18.7536 36.7578 17.6394 36.8383 16.2922 36.1899 cv
15.4753 35.7963 14.758 36.9751 15.5725 37.4218 cv
16.5383 37.9511 17.5588 38.3095 18.6628 38.3979 cv
18.9792 38.4233 20.0573 38.1796 20.3073 38.3115 cv
20.7883 38.5664 20.4314 39.7788 20.5007 40.1997 cv
20.7678 41.8212 23.1052 42.0913 23.5324 40.4311 cv
23.5803 40.2431 23.5036 39.9824 23.3137 39.894 cv
cp
f
40.9455 29.664 mo
40.7287 29.4433 40.3069 29.3608 40.0398 29.5468 cv
39.634 29.8295 39.4553 30.125 38.945 30.1928 cv
38.3313 30.2749 37.7112 30.1552 37.0886 30.2529 cv
35.8972 30.4394 34.6228 31.1953 33.8547 32.1259 cv
33.0476 33.1044 34.445 34.5175 35.259 33.5302 cv
36.4367 32.1025 38.1897 33.4238 39.7561 33.0351 cv
41.175 32.6835 42.0691 30.8081 40.9455 29.664 cv
cp
f
40.2209 28.1425 mo
40.1443 28.1425 40.1443 28.2622 40.2209 28.2622 cv
40.2981 28.2622 40.2981 28.1425 40.2209 28.1425 cv
cp
f
43.5031 24.413 mo
43.426 24.413 43.426 24.5322 43.5031 24.5322 cv
43.5798 24.5322 43.5798 24.413 43.5031 24.413 cv
cp
f
53.0124 9.86763 mo
52.6369 9.78218 52.0769 9.9062 51.7517 9.79976 cv
51.3 9.65181 50.8098 8.90425 50.5017 8.59566 cv
49.9704 8.06099 49.7414 7.81392 48.9846 7.68452 cv
45.8225 7.14302 43.3435 10.9785 42.9226 13.6093 cv
42.7351 14.7836 44.5207 15.3012 44.7302 14.1074 cv
44.946 12.8774 45.407 11.746 46.3054 10.851 cv
46.7844 10.374 47.6931 9.68355 48.4079 9.61909 cv
48.9016 9.75142 49.3952 9.88423 49.8884 10.0166 cv
49.9197 10.2006 49.9729 10.3774 50.0486 10.5459 cv
50.4851 10.9506 50.6902 11.1567 51.2448 11.3491 cv
51.778 11.5341 52.446 11.4321 52.9577 11.6899 cv
53.4079 11.9165 53.7844 12.3432 54.2365 12.5927 cv
54.6032 12.7949 55.1516 12.5468 55.1208 12.0854 cv
55.0398 10.8828 54.1848 10.1342 53.0124 9.86763 cv
cp
.913725 .564706 .505882 rgb
f
58.6399 19.1977 mo
58.2234 18.5874 57.6355 18.1914 57.0578 17.7495 cv
55.8191 16.8012 55.344 15.8701 55.468 14.3178 cv
55.5544 13.2421 53.9494 13.2919 53.8176 14.3178 cv
53.5998 16.017 54.1384 17.6293 55.2561 18.9267 cv
55.8537 19.6206 56.9436 20.0424 57.1638 20.9868 cv
57.3601 21.8266 56.6784 22.4555 56.9016 23.309 cv
56.9763 23.5942 57.2483 23.7836 57.5359 23.7919 cv
57.6252 23.7944 57.7151 23.7968 57.8054 23.7993 cv
58.1599 23.809 58.4939 23.5996 58.6726 23.3017 cv
59.4314 22.0385 59.4865 20.4404 58.6399 19.1977 cv
cp
f
63.6115 27.1538 mo
62.6667 28.3706 62.2121 30.2539 60.657 30.8994 cv
58.8049 31.6679 56.446 29.6064 54.9309 28.6113 cv
53.6174 27.7485 52.403 29.851 53.7029 30.7128 cv
55.552 31.9384 58.6657 34.7343 60.9524 33.226 cv
61.989 32.5419 63.1208 31.625 64.0871 30.8247 cv
65.0403 30.0356 65.6311 29.2626 65.6545 28 cv
65.6716 27.0483 64.2688 26.3071 63.6115 27.1538 cv
cp
f
62.7478 26.5014 mo
62.6706 26.5014 62.6706 26.621 62.7478 26.621 cv
62.8249 26.621 62.8249 26.5014 62.7478 26.5014 cv
cp
f
63.9748 23.3544 mo
63.428 23.2802 63.1399 23.4252 62.6692 23.5678 cv
62.4011 23.6489 62.2502 23.6191 62.0129 23.4619 cv
60.9944 22.7866 59.7331 24.3764 60.6906 25.1752 cv
61.3088 25.6904 62.0188 25.9682 62.8327 25.9091 cv
63.7468 25.8422 64.7024 25.3408 64.7004 24.3076 cv
64.6999 23.9223 64.3967 23.4116 63.9748 23.3544 cv
cp
f
50.7165 38.3906 mo
49.9353 37.2421 48.1115 38.2666 48.8327 39.4917 cv
49.0847 39.9199 49.3923 40.2846 49.7234 40.6518 cv
50.3132 41.3066 50.6682 41.4814 50.0735 42.3427 cv
49.3459 43.3979 48.3855 44.163 47.9524 45.4086 cv
47.8352 45.7456 48.1384 46.0449 48.4514 46.0639 cv
50.3269 46.1777 52.1184 44.4086 52.6921 42.7065 cv
53.4001 40.601 51.7258 39.874 50.7165 38.3906 cv
cp
f
39.0945 43.6645 mo
37.9133 44.3808 36.7209 45.124 35.4822 45.7382 cv
34.528 46.2119 33.2531 46.3999 32.8884 47.4936 cv
32.799 47.7622 32.9939 48.0293 33.2405 48.1127 cv
34.3176 48.4775 35.3098 47.4912 36.2024 46.9702 cv
37.4016 46.2705 38.6262 45.6171 39.8142 44.8964 cv
40.5989 44.4209 39.8825 43.1865 39.0945 43.6645 cv
cp
f
42.9587 36.8544 mo
41.5134 36.6162 39.7737 37.6958 38.4939 38.228 cv
37.6091 38.5961 37.9182 39.9843 38.903 39.7114 cv
39.5368 39.5361 40.1711 39.3598 40.8049 39.1855 cv
41.2922 39.0517 41.844 38.7744 42.2717 39.1401 cv
42.301 39.1645 42.403 39.2441 42.4226 39.2299 cv
42.4729 39.3906 42.4372 39.664 42.5266 39.8291 cv
42.7141 40.1767 42.9924 40.2778 43.3625 40.309 cv
43.6955 40.3369 44.0368 40.1044 44.1989 39.8291 cv
44.8313 38.7548 44.2722 37.0708 42.9587 36.8544 cv
cp
f
30.6755 44.0937 mo
28.7458 44.1767 26.7746 43.7001 25.1965 42.5522 cv
24.7209 42.206 24.2404 42.4404 24.0031 42.8427 cv
23.8923 42.8232 23.7697 42.8515 23.6516 42.9594 cv
22.6535 43.8764 li
22.3459 44.1591 21.966 44.6679 21.5061 44.6562 cv
21.1501 44.6474 20.904 44.9511 20.8801 45.2822 cv
20.8767 45.3305 20.8733 45.3784 20.8698 45.4267 cv
20.8503 45.6948 21.0988 45.8623 21.3313 45.8881 cv
21.3894 45.895 21.448 45.9013 21.5061 45.9077 cv
21.7527 45.935 22.0686 45.6953 22.1091 45.4482 cv
22.1916 44.9541 22.7927 44.6411 23.1687 44.3593 cv
23.4304 44.164 23.6921 43.9682 23.9538 43.7729 cv
24.0207 43.9096 24.1135 44.0385 24.2678 44.1416 cv
26.239 45.455 28.2829 46.1767 30.6755 46.1079 cv
31.9704 46.0703 31.9719 44.038 30.6755 44.0937 cv
cp
f
40.509 19.3359 mo
39.1447 20.0219 37.528 21.0786 37.6614 22.8383 cv
37.7243 23.6709 38.2029 24.2778 38.6789 24.9272 cv
39.2146 25.6582 39.4192 25.7436 38.9714 26.4482 cv
38.5793 27.0659 37.5178 27.5585 36.8962 27.9589 cv
37.3742 28.3261 37.8518 28.6933 38.3293 29.0605 cv
38.9792 27.4091 39.6418 25.7622 40.2785 24.1054 cv
40.6682 23.0918 41.1379 22.0459 41.4074 20.9926 cv
41.468 20.7568 41.5803 20.3251 41.5588 20.0825 cv
41.5476 19.9609 41.5012 19.8256 41.4978 19.708 cv
41.4724 19.6489 41.4475 19.5898 41.4226 19.5302 cv
41.1921 19.1918 41.2112 19.3584 41.4797 20.0293 cv
41.801 19.1875 40.4494 18.8232 40.1311 19.6572 cv
40.0735 19.809 40.8308 18.8359 40.3528 19.2944 cv
40.2502 19.393 40.1404 19.4565 40.0515 19.5708 cv
39.8503 19.8291 39.6697 20.1543 39.5251 20.4467 cv
39.0368 21.435 38.6794 22.5268 38.2903 23.5571 cv
37.6643 25.2143 37.0617 26.8803 36.448 28.5419 cv
36.157 29.3295 37.1975 30.1044 37.8811 29.6435 cv
39.0349 28.8662 41.0862 27.6323 41.0393 26.0493 cv
41.0178 25.3271 40.5998 24.853 40.1511 24.3251 cv
39.4621 23.5151 38.2419 22.8989 39.488 21.3452 cv
39.8498 20.894 40.6028 20.6015 41.1023 20.3505 cv
41.7776 20.0107 41.1833 18.997 40.509 19.3359 cv
cp
.733333 .423529 .380392 rgb
f
42.4836 26.0566 mo
43.4084 26.5156 44.1618 27.1367 44.801 27.9472 cv
45.3244 27.4238 45.8479 26.9003 46.3713 26.3769 cv
45.863 25.9643 45.3664 25.5278 44.8254 25.1591 cv
44.341 24.8286 43.4958 24.2866 42.8669 24.5078 cv
42.5769 24.6098 42.4382 24.8193 42.4045 25.1147 cv
42.3899 25.2436 42.4172 25.3632 42.4621 25.4848 cv
42.4909 25.5625 42.531 25.6284 42.5696 25.7006 cv
42.6511 25.852 42.5027 25.5405 42.5852 25.7168 cv
42.7966 26.1699 43.0954 26.5058 43.4587 26.8496 cv
43.8777 27.246 44.3489 27.5888 44.801 27.9472 cv
45.9226 28.8364 47.278 27.4995 46.3713 26.3769 cv
45.6218 25.4482 44.6599 24.6909 43.5847 24.1728 cv
43.0539 23.9174 42.406 24.0273 42.092 24.5639 cv
41.8098 25.0463 41.9538 25.7939 42.4836 26.0566 cv
cp
f
30.5266 22.7729 mo
29.7141 23.2592 29.157 24.0097 29.0686 24.9711 cv
28.9939 25.7832 29.968 27.6777 29.0407 28.1367 cv
29.4353 28.4399 29.8298 28.7431 30.2243 29.0463 cv
30.6809 27.1787 30.5193 25.226 30.9929 23.3574 cv
31.0412 23.1655 30.7448 23.0835 30.696 23.2758 cv
30.2248 25.1357 29.156 26.7675 28.6706 28.6181 cv
28.4817 29.3393 29.2356 29.8212 29.8542 29.5278 cv
30.6447 29.1528 30.9904 28.3535 30.9773 27.5029 cv
30.9568 26.2177 29.719 24.833 31.1623 23.8598 cv
31.8269 23.4116 31.2297 22.3525 30.5266 22.7729 cv
cp
f
27.5735 34.9511 mo
27.1115 36.2919 26.0373 36.0112 25.0046 36.499 cv
24.1936 36.8818 23.7102 37.7529 22.8152 37.9721 cv
22.9118 38.2011 23.0085 38.4301 23.1052 38.6596 cv
24.0676 38.0307 25.1613 37.5585 26.2175 37.1025 cv
26.8713 36.8203 29.1057 35.7832 28.468 34.7299 cv
27.8088 33.642 25.9411 35.2583 25.4192 35.7304 cv
24.55 36.5166 23.7043 37.3647 22.7253 38.0097 cv
22.3742 38.2417 22.5905 38.8032 23.0154 38.6972 cv
23.5202 38.5717 23.9074 38.3105 24.2956 37.9751 cv
24.8947 37.458 25.3362 37.1142 26.1423 36.9599 cv
27.1941 36.7583 27.9265 36.1679 28.2751 35.1445 cv
28.426 34.7001 27.7253 34.5107 27.5735 34.9511 cv
cp
f
18.4231 33.0332 mo
17.1076 32.2563 15.2785 32.9008 14.7785 34.3588 cv
14.2033 36.0366 15.6052 37.644 17.2414 37.7753 cv
17.8352 37.8227 18.3269 37.3305 18.5031 36.8144 cv
18.6828 36.2895 18.7649 35.7143 18.8215 35.1665 cv
18.8459 34.9257 18.8615 34.7153 18.8176 34.4726 cv
18.7658 34.185 18.8054 34.5771 18.8034 34.3012 cv
18.8015 34.017 18.7072 33.5898 18.4616 33.3842 cv
18.5324 33.6518 18.6032 33.9194 18.6736 34.1875 cv
18.674 34.1855 18.6745 34.184 18.675 34.1826 cv
18.9372 33.1528 17.3459 32.7133 17.0837 33.7436 cv
17.0832 33.7451 17.0827 33.747 17.0822 33.7485 cv
17.2746 33.5566 17.4665 33.3642 17.6589 33.1723 cv
17.3596 33.2314 17.0788 33.5273 16.9367 33.7631 cv
16.906 33.8139 16.8781 33.8667 16.8498 33.9184 cv
16.9538 33.727 16.9016 33.851 16.8523 33.916 cv
16.6496 34.1816 16.5339 34.4399 16.407 34.7426 cv
16.2238 35.1806 16.0603 35.6484 15.9797 36.1186 cv
16.4001 35.7983 16.821 35.478 17.2414 35.1582 cv
17.0798 35.1709 17.1106 35.2104 17.0041 35.0947 cv
16.9485 35.0371 16.9426 35.0312 16.9865 35.0761 cv
17.0056 35.1596 16.9968 35.1313 16.9607 34.9907 cv
16.8928 35.1528 17.0569 34.9624 16.9904 34.9687 cv
16.9909 35.0019 16.9787 35.0273 16.9538 35.0449 cv
16.9055 35.0913 16.926 35.0688 17.0154 34.9775 cv
16.8723 35.0419 17.153 34.895 17.1799 34.8808 cv
17.0525 34.9472 17.3518 34.896 17.1985 34.8823 cv
17.3352 34.8876 17.3567 34.8847 17.2619 34.872 cv
17.3894 34.9072 17.4143 34.914 17.3357 34.893 cv
18.5632 35.5239 19.6242 33.7431 18.4231 33.0332 cv
cp
f
27.5403 40.4951 mo
27.6174 40.4951 27.6174 40.3754 27.5403 40.3754 cv
27.4636 40.3754 27.4636 40.4951 27.5403 40.4951 cv
cp
f
13.9826 11.7817 mo
13.7678 12.1191 13.4792 12.3505 13.2356 12.6528 cv
12.9978 12.9472 12.8313 13.3286 12.6242 13.646 cv
12.2414 14.2329 11.9104 14.685 11.8796 15.4043 cv
11.8742 15.5297 11.9997 15.602 12.1101 15.5795 cv
12.8845 15.4238 13.2717 14.9038 13.6867 14.2675 cv
13.8918 13.9531 14.1452 13.6118 14.2673 13.2543 cv
14.4001 12.8647 14.4157 12.4106 14.5197 12.0078 cv
14.6042 11.6816 14.1618 11.5019 13.9826 11.7817 cv
cp
.631373 .109804 .266667 rgb
f
9.48947 18.7441 mo
9.41232 18.7441 9.41232 18.8632 9.48947 18.8632 cv
9.56613 18.8632 9.56613 18.7441 9.48947 18.7441 cv
cp
f
8.59397 20.2358 mo
8.51731 20.2358 8.51731 20.3554 8.59397 20.3554 cv
8.67111 20.3554 8.67111 20.2358 8.59397 20.2358 cv
cp
f
12.0564 28.8867 mo
10.3645 26.75 6.10471 27.2299 7.34836 23.1826 cv
7.47287 22.7758 6.88156 22.6411 6.72776 23.0117 cv
6.04563 24.6572 6.23459 26.7602 7.53195 28.0722 cv
8.53586 29.0874 9.7092 29.0146 10.2898 30.4375 cv
10.7605 31.5878 10.4597 32.9492 10.6584 34.2324 cv
10.6926 34.455 11.0178 34.4653 11.1179 34.2924 cv
12.112 32.5893 13.5954 30.8305 12.0564 28.8867 cv
cp
f
20.0847 38.519 mo
19.1296 38.226 18.0788 38.5659 17.0998 38.5996 cv
15.6779 38.6484 14.5754 38.4394 13.3674 37.6474 cv
13.0647 37.4492 12.7878 37.9311 13.0847 38.1303 cv
14.7649 39.2573 18.5417 41.2207 20.2702 39.2202 cv
20.4768 38.9809 20.4011 38.6157 20.0847 38.519 cv
cp
f
18.5896 28.7392 mo
18.5124 28.7392 18.5124 28.8588 18.5896 28.8588 cv
18.6662 28.8588 18.6662 28.7392 18.5896 28.7392 cv
cp
f
36.3459 10.8247 mo
34.0266 10.8208 32.2326 12.8002 30.9904 14.7368 cv
30.862 14.3691 30.7722 13.9868 30.7151 13.6035 cv
30.6018 12.8471 30.9875 12.1606 31.0837 11.4243 cv
31.1052 11.2617 30.8913 11.1699 30.7678 11.2431 cv
29.9304 11.7421 29.7854 12.727 29.5686 13.6035 cv
29.3386 14.5327 29.6418 15.4868 30.1018 16.3056 cv
29.6306 17.2802 29.3772 17.916 27.7776 18.3945 cv
27.3405 18.5253 26.7473 18.416 26.2873 18.5385 cv
25.0041 18.8808 23.9636 19.8115 22.9914 20.663 cv
22.6238 20.9848 23.1584 21.5102 23.5251 21.1972 cv
24.3894 20.4599 25.3694 19.5927 26.5012 19.3149 cv
27.1809 19.1479 27.883 19.3559 28.5398 19.1967 cv
29.448 18.9775 29.9055 18.6538 30.5007 17.9091 cv
32.3396 15.6093 33.8279 12.9272 36.5085 11.4238 cv
36.7888 11.2666 36.6609 10.8251 36.3459 10.8247 cv
cp
f
51.7878 13.0415 mo
51.3889 12.0727 50.3166 11.9809 49.4426 12.3745 cv
48.7409 12.6899 48.2629 13.2734 47.8811 13.9174 cv
47.8889 13.873 47.8908 13.8305 47.8987 13.7861 cv
48.1643 12.333 48.6604 10.6904 47.6364 9.39693 cv
47.3899 9.0854 47.0246 8.79048 46.6081 8.51558 cv
46.5285 8.30415 46.4577 8.09077 46.3728 7.86617 cv
46.1999 7.40767 45.9822 7.21968 45.5857 6.98189 cv
45.509 6.9355 45.3938 6.94722 45.3318 7.0146 cv
45.1423 7.21822 45.049 7.43452 45.0041 7.65474 cv
44.3811 7.37886 43.7678 7.15816 43.2859 7.0107 cv
41.3645 6.42427 39.5344 7.20357 37.8078 7.99409 cv
36.8259 8.44429 37.5329 10.165 38.5515 9.75826 cv
40.5422 8.96382 42.7024 8.80806 44.4485 10.2978 cv
45.3039 11.0273 45.8264 11.3281 45.78 12.8139 cv
45.7561 13.5727 45.4514 14.4384 45.3576 15.1894 cv
45.1364 16.955 45.0588 18.9843 45.5647 20.7724 cv
45.3381 20.5883 45.0124 20.5361 44.7571 20.8076 cv
43.6941 21.9384 43.0935 23.4975 43.1369 25.0576 cv
43.1667 26.1054 43.5905 28.5092 45.0114 28.3642 cv
45.2185 28.3432 45.4143 28.2319 45.4695 28.0151 cv
45.7063 27.0849 44.7571 26.2954 44.5544 25.3916 cv
44.2419 24.0019 44.6394 22.6928 45.6472 21.6972 cv
45.7209 21.624 45.7693 21.5454 45.7986 21.4653 cv
45.9983 21.9746 46.2419 22.4633 46.5705 22.9033 cv
46.9983 23.4765 47.8772 23.2949 47.9255 22.5366 cv
48.0241 21.0097 47.8713 19.56 47.7707 18.101 cv
48.2497 18.3906 48.7019 18.7309 49.1594 19.0976 cv
49.883 19.6772 51.1604 18.9335 50.5554 18.0205 cv
49.8733 16.9897 48.8459 16.289 47.7024 15.8686 cv
47.7058 15.6914 47.7209 15.5112 47.7312 15.3325 cv
48.0583 15.6806 48.6711 15.7592 49.01 15.2216 cv
49.2629 14.8208 49.5495 14.3369 49.989 14.1152 cv
50.3991 13.9082 50.8684 14.0424 51.2966 13.9062 cv
51.6252 13.8017 51.9372 13.4047 51.7878 13.0415 cv
cp
f
48.9436 38.2163 mo
48.1794 37.8042 47.7507 37.1245 47.3503 36.3667 cv
47.1101 35.913 46.5769 35.8774 46.1819 36.0761 cv
46.2409 35.7714 46.3025 35.4663 46.3532 35.164 cv
46.5403 34.0468 44.8161 33.5844 44.6545 34.6958 cv
44.218 37.6943 43.5481 41.0288 41.1277 43.124 cv
38.4157 45.4716 35.823 44.7519 32.8635 43.4677 cv
32.403 43.268 31.9289 43.1088 31.4529 42.9785 cv
31.5896 41.707 29.8313 40.894 29.8581 39.5981 cv
29.862 39.4023 29.7492 39.2158 29.5822 39.1171 cv
29.4284 39.0263 29.3235 39.0234 29.1535 39.061 cv
28.9363 39.1088 28.7204 39.3671 28.7444 39.5981 cv
28.8005 40.1357 28.9851 40.5517 29.3313 40.9716 cv
29.6599 41.3701 30.6784 42.1152 30.4944 42.7763 cv
28.8523 42.5351 27.2439 42.8632 26.0505 44.3027 cv
25.4485 45.0288 26.4699 46.0791 27.0988 45.351 cv
29.3137 42.7866 33.4299 44.9858 36.0779 45.5918 cv
37.948 46.02 39.1286 45.8681 40.9343 44.8979 cv
43.8381 43.3383 45.1687 40.3891 45.9079 37.3261 cv
46.2854 38.1826 46.7688 38.9658 47.2375 39.7758 cv
47.865 40.8618 48.9162 41.8256 50.2268 41.2373 cv
50.5661 41.0849 50.7873 40.6337 50.7771 40.2778 cv
50.7463 39.166 49.803 38.6806 48.9436 38.2163 cv
cp
f
59.2771 33.79 mo
57.947 34.3916 57.0241 35.0576 55.5188 35.0263 cv
55.2273 34.0278 54.9226 33.039 54.4822 32.0903 cv
53.7346 30.4794 54.0608 28.9375 53.6594 27.2758 cv
53.5466 26.8105 52.7697 26.6464 52.5603 27.1323 cv
51.947 28.5542 52.3318 29.9448 52.4699 31.4418 cv
52.5759 32.5883 52.7483 33.5747 53.0154 34.5659 cv
52.0979 34.2519 51.2395 33.7968 50.3747 33.1738 cv
49.821 32.7749 49.2795 33.7001 49.8386 34.0918 cv
51.1823 35.0332 52.4182 36.2158 53.865 36.9023 cv
54.1892 37.3925 54.7649 37.5234 55.2302 37.3608 cv
55.5905 37.4316 55.9621 37.4765 56.3586 37.4643 cv
58.2087 37.4086 60.2419 36.4843 60.4763 34.4785 cv
60.5539 33.8134 59.7575 33.5727 59.2771 33.79 cv
cp
f
63.6203 21.5097 mo
63.3913 20.9633 63.0334 20.3891 62.6394 19.9531 cv
61.9109 19.1464 61.0437 18.1372 60.1062 17.6005 cv
59.8991 17.4819 59.6223 17.6787 59.6955 17.916 cv
60.1189 19.309 61.2395 20.3461 61.9822 21.5678 cv
62.8454 22.9897 62.2732 25.5605 62.1814 27.1591 cv
62.1443 27.7973 63.1838 27.9497 63.3073 27.3115 cv
63.6555 25.5205 64.3586 23.2729 63.6203 21.5097 cv
cp
f
59.5359 13.5844 mo
58.531 13.7314 59.2155 15.7397 59.3225 16.2817 cv
59.4548 16.9526 60.6062 16.812 60.531 16.1181 cv
60.4719 15.5703 60.5329 13.4384 59.5359 13.5844 cv
cp
f
58.0803 8.88814 mo
57.3713 7.56001 56.0852 5.98091 54.3689 6.66499 cv
53.9865 6.81734 53.5705 7.27534 53.1379 7.23726 cv
52.9275 7.21822 52.6936 7.0312 52.4861 6.8647 cv
52.8479 6.75386 53.1364 6.45943 53.1115 5.97359 cv
53.0813 5.37691 52.9685 4.71431 52.5759 4.24117 cv
52.2595 3.85933 51.7439 3.33882 51.2004 3.46431 cv
50.7527 3.56734 50.5866 4.03462 50.7326 4.43941 cv
50.9153 4.94478 51.154 5.42036 51.1535 5.97359 cv
51.1535 6.01704 51.1731 6.04732 51.178 6.08784 cv
50.8855 5.96773 50.5788 5.87837 50.2204 5.84419 cv
48.7234 5.7021 48.6936 8.29195 50.2204 8.1938 cv
50.9343 8.14839 51.5066 8.67622 52.156 8.98286 cv
51.8615 9.79683 51.5666 10.6113 51.299 11.434 cv
50.9709 12.4423 52.6062 13.1684 53.0407 12.1684 cv
53.5237 11.0595 53.9612 9.93159 54.4123 8.80952 cv
54.4128 8.80806 54.4123 8.80611 54.4128 8.80415 cv
54.8196 8.62495 55.1755 8.48335 55.6062 8.88521 cv
55.9197 9.1772 56.0822 9.57027 56.2688 9.94722 cv
56.865 11.1503 58.7199 10.0859 58.0803 8.88814 cv
cp
f
28.4377 4.00191 mo
26.4089 4.25044 24.2341 4.63081 22.6599 6.02681 cv
21.5598 7.0024 20.115 8.97749 21.2004 10.3691 cv
21.4284 10.6626 21.9099 10.5918 22.1496 10.3691 cv
22.6052 9.94527 22.594 9.57661 22.7795 8.99507 cv
22.7824 8.98628 22.7863 8.97798 22.7898 8.96919 cv
23.0031 9.21236 23.3039 9.36421 23.6496 9.30757 cv
23.6858 9.38618 23.7321 9.4604 23.7497 9.54829 cv
23.8615 9.84859 23.9582 10.1684 24.0451 10.4785 cv
24.2497 11.2045 24.3039 11.956 24.6379 12.6455 cv
25.2522 13.9126 26.4455 13.8125 26.9861 12.5078 cv
27.5832 11.0688 27.1081 9.25777 26.2414 8.0146 cv
25.7873 7.36372 25.0349 6.88765 24.278 6.83003 cv
25.5051 5.7563 26.9675 5.21382 28.5534 4.85347 cv
29.0193 4.74751 28.9289 3.94185 28.4377 4.00191 cv
cp
f
25.6408 15.2456 mo
25.5154 14.6098 25.1325 14.0512 24.718 13.5668 cv
23.9568 12.6762 22.6755 13.9672 23.4328 14.8525 cv
23.6872 15.1503 23.8645 15.5224 24.0027 15.8876 cv
24.1457 16.2661 24.1926 16.7001 24.5154 16.9746 cv
24.7722 17.1933 25.0661 17.1811 25.3264 16.9746 cv
25.8142 16.5874 25.7497 15.7949 25.6408 15.2456 cv
cp
f
22.008 30.5034 mo
21.532 31.7187 20.8083 32.7729 20.4856 34.04 cv
20.1613 35.3164 19.6633 36.3584 19.1804 37.56 cv
19.1179 37.7143 19.3562 37.8486 19.4607 37.7236 cv
20.2702 36.7539 20.9387 35.5751 21.633 34.5239 cv
22.3796 33.394 22.4426 31.9902 22.6545 30.6816 cv
22.7238 30.2539 22.1657 30.0986 22.008 30.5034 cv
cp
f
24.7053 45.3212 mo
24.6843 45.2236 24.6228 45.1191 24.5813 45.0273 cv
24.4162 44.6606 23.9099 44.3945 23.5183 44.4179 cv
22.6404 44.4702 21.8586 44.644 20.987 44.393 cv
20.157 44.1543 19.3576 43.6953 18.74 43.0961 cv
17.9587 42.3383 16.5988 43.3168 17.2024 44.2822 cv
18.4792 46.3247 21.4465 47.8466 23.8459 46.8354 cv
24.488 46.5644 24.8596 46.0454 24.7053 45.3212 cv
cp
f
38.1633 27.6606 mo
37.3073 27.4619 36.3855 27.0097 35.4704 26.8945 cv
35.4704 26.8823 35.4763 26.874 35.4753 26.8613 cv
35.4499 26.3618 35.4245 25.8623 35.3996 25.3627 cv
35.3747 24.893 35.4133 24.4506 35.156 24.0429 cv
34.9485 23.7133 34.3801 23.6455 34.1897 24.0429 cv
33.9729 24.4965 34.0339 24.8642 34.0656 25.3627 cv
34.0974 25.8623 34.1291 26.3618 34.1604 26.8613 cv
34.1648 26.9243 34.1877 26.9731 34.2048 27.0268 cv
33.197 27.394 32.3562 28.2924 32.0822 29.309 cv
31.7722 30.4585 33.5344 30.9418 33.862 29.8002 cv
34.1384 28.8378 34.905 29.1792 35.6306 29.4238 cv
36.3625 29.6709 37.0661 29.9936 37.8552 29.9384 cv
39.094 29.852 39.5085 27.9726 38.1633 27.6606 cv
cp
f
48.323 45.9907 mo
48.1423 45.1235 47.3684 44.7602 46.7043 44.3071 cv
46.2336 43.9863 45.967 43.4106 45.7297 42.9077 cv
45.2468 41.8862 43.5905 42.6074 43.9143 43.6733 cv
44.1511 44.4497 44.5383 45.1484 44.8738 45.8813 cv
45.281 46.7714 45.9636 47.7045 47.0544 47.6557 cv
47.946 47.6157 48.5017 46.8505 48.323 45.9907 cv
cp
f
58.8884 26.2089 mo
57.4856 26.3754 56.322 27.3164 54.9216 27.5776 cv
53.9875 27.7524 54.2346 29.1879 55.1413 29.1987 cv
56.697 29.2168 58.7697 29.0034 59.6399 27.5195 cv
59.9436 27.0009 59.5661 26.1289 58.8884 26.2089 cv
cp
f
63.6716 35.9497 mo
63.1091 34.9018 61.6252 35.8222 62.1013 36.8676 cv
62.5427 37.8349 61.1638 38.5273 60.5573 39.1054 cv
59.9397 39.6938 59.4167 40.3095 59.2414 41.165 cv
59.1555 41.5815 59.4807 41.8593 59.8777 41.8012 cv
61.3108 41.5922 62.446 40.2543 63.3713 39.2368 cv
64.3015 38.2138 64.3137 37.145 63.6716 35.9497 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (2_1.eps)
%%CreationDate: 11/11/2019 9:57 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`6>X9&g+I]\CX,(loTPpFpLh7UrVl_j.i4P.1Ts\/?;=k1RVQr#r&9pnl]/0?rp\q@jdRo0^Nt5'rV)(K
%cX4BbrYN2a?_>!drT;52ns_#=YATssJ+]/arqVbUJ!OlQJ!Ia^H1q10k1/c6:YtI/e\]>q2)"ran)Z%0!WLC<o(B1m8CNp7Dr/R9
%ah;]j:O`>erVT3#jmgfLr;H#lcb=o#qT54>Y?q43TAe;c?Y-qDQabj8d9ju>I^*s7r)A-U45Tu.P96C2d:_muZfJ<.I^[-Grp/ur
%hkB.Y?BsV<NlPUarl`j>d#Xe\r,4acmbdMX^C.ZPchZRY,G*leKY6Y\P$`RJ^tj89>(4V\A.QD'p"bNRYQ+P!",@E=r8I@gGL)no
%\^a!Lkpl;))R#m*FLS)R-6pT)INF[-2YgXYjXRlCG'/p%?"2VM=8c,,X^ACAbO(A:DZB9ch1*1fo$-Q;PDSVWDn^Vms3'%2G?%8[
%]B$+]?'>0_pHLdTIJj[0T=pAJbA:rTXM9&Rc0]T:[.Q=9c_"$1VEX&?gDPKco(q+q2^7^oT)X=<rIqn(s4qUCGk()IJ%^OE]>^B4
%]C0WEro)E-i#@H%.8tCB?<-h$<3,pQ@d*?8R!6jM#?!hR[^ZKYd-k8[%u1#jOmh2@IeN08QbR2Wms\T$2pqZelY#+VOtVGip&FfG
%X#g2nrK"Y!oYI"U[kE*C3</[12q&aMY(#sg*drA1c/I1\%*J>>k?_cH9:8o.?[Z_)?2qauaXqu:c9@*p?iThb>k%)+DZ':WDtS>I
%lS"k0+M[j9lW6;upT'Y\r9EgIT3d$=lCVs<s5Wh;Roce)R(q>Qm[sKfr8VG%T5oDLrp]d+;n7\]H^o0MjOn`AHcHTW4($n5oXAim
%s4RGLOR$KKM]Q&?TWP,Y5MeSRp"a_"4msP<r8RO9QVUrVpks.0?U+EbIe,u(BtYff]RBCl#Mi=Sju_fChM(-_h>]&S9YYnpUON1.
%jdfV[mE+ZQIsL_`cPWnLc[VUJIJ*I%pA`p^l],?Oq=`(^5Fp]\>!Meb?T`W*-WsAc?[hVFkQUqJg;E,sD0s?j+.bTErp8Ck:VQ_T
%Z_tG6lQ<k@e*[aM?9KBS^[V-jV"o64's;r*6biQbMgp'Gr7Uft`ae.s0;Nrd4aheVj^5cPF8IZU_mFplnolapJ*qc>ST+Q/U,M\5
%pNl^dfr'h1/j2dTq=!Ps?Tr&I>^FE`=5u<lr,;'RI?77^4Hmm6O+M]D3FDdIM("!`5Pq@&9N6-*5<jKD7`4Z;+.g0V?0C@N(Z3&T
%h0o*s-f<a#k4CIE>]6%EQ5+7CZ$u]D\$'AK[-qAIVu6,YPAd&7CAA6?@`3GP0&7Q/T=<2A\$n$P0pgX+]ah[Q2if'Zj5WYQ<V!Qn
%JA8YM$<DM/Ik5%_nLl?L#Cjp+@JIoNVPVh`O5fRT?gh?OU74h0Zg5)OD4roAom?'%/Tu:B0h@Lq36QpN^lJ3d,B'pgrhJ<qI?GC<
%+8m7Qj>HQ]p;^0B]?o@YLgU)LqRbq"J%,=2lR+@#`O^?OZ5()b$,1!K/Yq`<_V\N)hW&PP7ub>^>]TK\;1t7D3*arZkPoi*kW3&u
%3T>1kp=E'"V4H[,[XGc*po,jSe=no&?Mk;bQ?oRO]!([_.e\:MeQ5gib!D%g6nCt`Z%V--N>tGKp/u9qCW9/m0o,,WE-]Pu\rl$;
%NcH,f?4M6[Wi=(%;O#'HR1[Q[)`^[`+G[UE'ZW_(N"]Z^_i&<:KUZqDitr8HaQJ3lWZ3>+"*'K_Q'X]f8G@eVhs`VIEV'Jrp2XDb
%q++k@OTR8)]\M46Vok(1"Fe2GDVRgDUE"XFYe>.9I'nbuOX%I`7s+;=>i=CX,KFLYb&NM-qrM"A`hU\=H))b?&bHZr+8rqo*I0@u
%%R9oYYIs[T5ATN(rW[l=3:Y<$&h3iDaT!@C\DH]9ch5$>AO,uYNjR+LL4,-c?%Nm,OlI_-5n9D;JoP'bDBLq`@-D?f*D0,>OlIk\
%F-$JO6;0cu-p`q<Pp1VRN>tHNV1Tb7b0tLPO8)V;X'?<m:S^YE$PHJVOg7nGb+F=as'G^)>)jqZWr0UkS+6fY'.JDP_bl`*jI=2N
%6kW:9W&,RVcQ98SjKaSHAs#d.AsZ96V_e.]0aYf@OjcKTb:!:7`uU_l8!^=40.45bI#4=FdWZ=T#pQ?CL?fNhOmjXPFpLSM-^d%N
%b%J,lO/K@\+;:Wp$p1>MHs_u=0%(,_Hm:chADUAObG0liP?FGf/?WQ;DIgD3N*d0VE,<sh1=AHX^5=0UY)h0n+sUD>VMGplMbK[0
%p7+gm-s]h`E80>j3/[LC@usI07sP+7eDp4AIlne6N\[0B.IkKW,3n@fF>t<&d%;8F6=(?+#(oN:7&Sl-VrN#C)TRu8ZZ(F;2#J=!
%&VMTj:aPooq,.P=K^N#s%mkN:39&d&'chB^T\(U4$,lW/,8"Sd>YA_r.HF"!b8\Z?W_^t*&?/VP@g*C)R=LpCFkKV=dg\B6??>Qp
%dDB50Lf5sJ,$$gVPB5'LMJ7FSP\0Z!_?]DfFH@)F=/3+*7;6#e!d)$oVo-d<#22QO5W##?6Bi_J:gbF,'C\UL(qAL[IQsPs(MGhV
%O0WfIn;-f"n6gdBS++f\9R*OZW%_&kNMC)#D*3PHk3WU>p4f3qViT&#)%^mDPr^r+$6CjVa5M'dN6nJ)#"3\Z^A&;NjUtE>bRIj;
%Ng#1V^e&jJ/E,"'Y)X/6',qTIEN3Nk([)^9!"@AKMW$f8EIs-8Fbg/dM-rK.FbGVU&&uSB$3uHd;%;p'!$8,2:AeLb]NOqrqF%k?
%.^q$[>lnXVlr#gd@A"SM8Yfgl,`5:@dV/22,gm3[S7T!!jXc`FR=00F&e6*!f5aMXfIYhs7=)Vfd3:>g&n*eVP[2IBX*f5ZY)ach
%=GR_F2HXG^[^_R8=<0.bOirXBU2lEp@6qHdE`.!>0f*@&07XXT0J`iiaD?T=q2dP#hSS8l/Y,bLBI)j&^]gJd('b]p/.u&)1)C1$
%)AXq37kP"t>R!fdG8pgEUN(<0_rTOqP"`2-Lbq.qZXK":7:Q!J8ZJ1(OTpY@K1&BB(aOGa7pq9$1IW:C&2c]%oVaT.P*m<89T>f@
%G8M5-WusoFA,*)J\Ee=rY+(!\(=`]GFW5;O9u'E!s$tp:NUDk;8TN7Nihq'sIPZC&=TLsCj:ouZ,#*qD?V08jJ@><+HNA_pB"7.1
%I+\,\klCY!bEl"2gjZU,esasdE!%`$bO&5P#.c,?`BHhe[@5>;KBQ_k2F8,V"Y8OS=rDKM'EMtnCr]s7A.d"uM!.Fs"Xh0V7#XR6
%Leo1-1O(BTW7nqd)6-FV'kjB05]nNu&o'1"3>SX54k8Mj0>B8FqspeGDdRbP7COq\a])PIF4=/gEQ=d4A87O$F11S<U/P'ib"gKX
%._IOdhQ$AIcX%-eD,_*jA[id/4)XnG`HsZ$j[00dh`8Qm,MmL;m6NUUhi[@jb5I+Nn\3o2%m/j4%mRZhjH)Geke)ZmTC7$^)3]"!
%7&L06*F5_97'A0$f*8M&<3tq&JV%e0oKinmb<_H%)d2*N/9R@!7Pou.q9cQCTN>$)o[2/Eo+%X'V*VSg+a9Zp;2pd<F"4R-9f6(T
%];aq+TQTY.RUuA)P,UaEk1DB--:<`pJEWrFR:=4e*ACEn)e6^CYuOHA-<WReA=QqpJVN2=NoR4a]$[A[9t+]D'Q2?<T)R>fKXVrk
%lpu=1C.D_upDrA37pQY9@su[u^&=$S^>k1H4W]!k#QMjc5Om'LN'"aHUJ1N[MO;;n"fC6*CLp:i,1`FNP9`V>Ppn,^267S`17afe
%M0;OgeH3e=d92EM'IS;Q/tk(6Ye,J\CQtu#B!$*uL%/PghW[_7KV;B[@K;_E@>7pkS@XnCFGjlM[=D<9@F[-Nob3<_2@a+6p/0Et
%GBM-?VV,W&[A,W`B<-7%1sgs:9_0)Jpb8gls"S4;\`6u_p%IEpSb?s'pHcj_48qn/nQuHLF`qF0+Rk3Z\2(I[lEb8G#(Z=&n78g(
%WS=.]\&N[/5qFA5E*b@@Co0fFG8PLe2pX%UVM!^S/LU)4T\-R63_Y^SV!eBX*@rU4!!U5WBKl[<H4,]I3!=cBD?t.%*C\:?b8#>@
%NBe8e)^-bG[I1F;)E1&&M#jX=;N"(g<&'b>IoHe)<iC>@CQ(Htqj;O1AtIZ9H-t@ZR=NVkH<.B81j_Jls5i%ISUSKi`m=1lEOpP!
%Od1i[B=-fp7srB$GC7b_"FqS9a;l@MmXM)qG)^N`F*#"Ib@4RkdS75kVjl.4L;(c?82:A)n`G'1&HO/GO7DE?KcUbOJtSM3W$D'D
%kd/[Gc3-92GlmI<g^12`ThYbPO,T>QaJf`K!Lt*Je"BF?-p"m6&86+d2[O?Hi24>[NurB,.)ae):5(\CkZ"KZ_+o\GpD/Ib"?cd4
%C+M8X1fe]4!)R<*fcHJC>&8@X3:pD)L;dha`G,-E7VcM\+-/d*4bcp9m7soj^o)MNWRYFCY%kO><Q@DSmd[%ajinS,?&prc@<7t=
%\FkqFNYq<[E&[M2Vmd^;=ZqcU4q8)`jGja3miFIS_BF,Nn@AREmW`gE=egAq.%`B>B8uJ]meBq[I+B^<29KQko',RU)J,]g:]GM7
%Iin\`jsUq3U)!3FRG\u4ccP:'MPhY>R4W;B(@?gj>Y%li2"s@b*[Oo@+C/@eh)6<of%eTqm`NYt0#XgWVGr7B^['Jc\OZ49kEi7-
%>M38&rk!X(-N.=/I!e,/]-j5dD3BfgNS+gbVQW%U@AIhDZ(I/\W[U5SoG1<JR<c(!_(AT'o(hn?-]_p.&'&[fJir8+r;B;;98SWp
%<+TX8&;B*d.C-rF`N:R8GQ2\\-pP]L1h!5*UbhOIZEj$S=LjO];A\47A:GJB05#bH&J)B=h.G/d\pO-pr7LK:[(Z2?-A[SH-]#.%
%9or)d9dT.QA0<C[0NZ-(#`Cd!Z'$[%()@_8^_,?R@TFHc&4cLF'%U&ZQ]Nik*Ym&($t%8qX$e'H+ff*:Q,Nf)AH\rl#YWPNo)rtf
%JQmf"(t*<F8@'b2?=S8^Q8'3^bSJB+eXY/'5ZfAEBX15K=fRpcWkdlDaA1:`e89)<Zb4eZR<k%\HX^lmk,7n]eR08paAJM7<1@=5
%MUUk:ac7=b=ag53[)c[!f.#>aa,ricZ0&?0O*]u&E_"AsSW=44I.91&3:'0'Gj4DR^>hE#Cd#]c3,eC!4u?44m#X<cC&>F#o,Z`_
%b"[sj_r_4_<RWlt`mN_TL6s_0E\uJ<aOKUr[#aLE`Xn?47h5A^a/+R?/"N4U"&1^!&MT\Dg/BAiL/u_bm*\gTR!3sf[WPBr8L$Mt
%o;XZ:d'Lq=14L4R$Ei@(P&iHU3bmm6_WKGcB^0#H56BgM1MPLRLUe#4Fr"Hm/5X\)YU,VE!sY`Q,E\%1YkhgKb.ktO-`:6GH2*.9
%,SFtHoC70&Ia?1*g.sS6)EIY?e8_RPH8D#^^PDVt<[p&_@qa.jK=[aHj`p^e(bQfuhBT_oaE#?!i1jO:lM2TI][QS?UV6Pd4$MT(
%pGr4_hm"!A/>!he]&(:sbkXJ>i$H^4Z*i@`Zi#01s2jj/fBdtKp5=*]Zhki-gV8>5@4FE&XT_uHTd?mfrZfnl'!Sa[8t,KmTT[rK
%>?L,0<9fQC*g"ec::^NRM;DR4Ub.[M#t-7dS3od[BI%f7$Q6'Sd='s")#uK8"G7a"eD-6rjP'<h4.`jiqV\,R3p7'&fT@g/ElWNU
%o:a3Sj?&q6f`tZ7lV1DcF0gZCI%[pI@\$$QS'rRYo9#;/W'eu_,h*rN"k'gCS]#UVXZl$X7ojoREn7Y`kWN[@*^@57F`]FHde0L*
%W)k&5g7tgC'ED2?]RhPff$@NqC1XEHC[<@Ik67lNWB49IS^,DX+$[%L@KjqN[T"?MTR(PPE6\$E(0;;!$E9oO6L/;mH=4Rs2c/>0
%r\GRn7sCf@dBMc,XAoXD(*?7/d>"+7=Jqof7m9#_fl?1FmMIPrrnbQ+j.OD@kX!JmcK"GiLRi(ul.q-MnH!:9cg`+QNZ1^1dU:H\
%-l9U0^2'!*R]1QTeq&a\A$nKq51*k):`I5ZB[fVh#\9*U#EPi"WM-OI@jsg25>[.Lp!o2T[-B2IZ\l'9IP%XtbcI^92MK(3&F3&W
%FtBE2(8+_-M0eS\?$GN%WmrMsn'J`S.N@t6AFbX:9WZ@c,7Mn/,n@^Fa8uQC5X3hQ3.%T+EecZ/D?Yl2l)i"7^h9."[jatED0TC*
%FK#Q2EllhedOK/==)X.I/.XaeTpMVt^;k5>f-,?ck;dHDNou2QnP7iZ*M;fq50*PRdMR=m[C@ij(_tdLGUk1JCA%fb]T6P!'*Hk/
%dL4HW&&#jpoSVlqhBab'it.HiVkd>H8YN[=lkc]+%o[2n.&!;.G&p\Z0c*i?^d9mE.&kjb<GW$oH84$[^nOQb'mj,?U3Pd[F.("<
%19OJPiHeYGr&\)O-XPJ7TRSP&Oh\jUSL)@$`3PpWQB<4,YY)e^qmTe5>UGP`KA3A8f#3bG)BuN%BmUqY$T,3"@ISG,U(\t`Y%^mg
%o#2Qi$S:H+5s6JoE)a[tfW\@,;L%q2XL'2[O5Rnl0fY^@%IhB@jj=CkZPW`KnRCI(7[!e%nu"'n'L+m0jdt<KPU.,c\bf=?0,G'n
%75T&*1Lp@LW-=8BkL^X7ElUg"qHY?Eh8ZuChnr,dKON9G_B1-]`K#\)m`cm?-J:)qjB.BsRUp#q\_f)nk$H<<fd$qpFQ%rtVIl2h
%Gr*:>LZqftr$%PsV<1c:WD:?]3bMVo_e6d_(DKZKH1/*]kG0/&,Lu$@g'H7a>\=cb$N]Z:ZHH1nDP`W/R4)VjU$=oj@l,qgJB_Pt
%.^Z;9\SP\7-&su\UbN.e7H<s<7MBiNq!5r`@?_ZWhi5`FN10<!ACncgj^/+A]NFK',f,q><tUb<W`J2i+`9<p55Z`s(U6r#[F5<C
%*a;g]giQsa]'#9a*5up4ZoEQn%6f5`]dJ9rn&2D"`3Vs"qZP@31T&OagL(ZI7(TXRk&Hqe+rl"teS.A30qgWrGW)6R5#%M0)4>7*
%e4RW2$'PV#qCUkO9D;Ri01CfVB9/j8+d[S;e[LnPcoMKe@3UZ?-C1HlBQ^,hoWk?)jEcq:ds;j:RN7T/@)\LJ8"><fctron5P0Nm
%cWYKuVSfJQ_lta8QWAcGi#]lmTOkO.jGqF>A(Y8H,24/W%I0%sV]U]'*"QYH\As'rLdUVjdZ04\frFVPN(9.$H?2^GJME4e$+3I)
%h/hA7g,/JW4g6<1,,-'m&<CGB<"^[,;V@W%U"<neW9jZ!&#*:QD@%R]PR/n0ojG4$-;C3jqrL@p7#aDZ'9Pa$3Y)hH-tOQ21dG)P
%:#-L^JsHj^)ZYKr:aj$9EC4PEbh@o\!8W&]c\&=?p\su9a+)ifr#9o@TZR`+CGZgbSk);J_ue#=3)GK.7T:!<$U`>/EDR$bZB?Q@
%6RF[X]9im*6PY8#K`hM0A?.M@3mo7TXE9mCZ(K)A<rTXs'A:@1d119L\H@b0NGji41T!1/*pA<g<e!2e9uo7@^<Ok_GF*O!&,*Of
%$@26r;$R,Z*283h::g>0n>t5#>(:"_oDQG0>-.$[R"u2(Hf;"9?LKts_KbhM#W@c1e$AiFqhq0=]+bVH*9P:j_F*cOH&>S?\g"0q
%U$/B5\nZ(rLpgrLBeWV@]DY7;^Qe9/O)/!q&N&&MEgNObMAgC#(/i2;Hd54/^!i)9N?oP.iTs[)(&H8A-DkeDEKkpnUg0aA[8:Ji
%C;kr=dkU%#S-Kig@@0c^k<);Boj7*AT6b0crOM5?V`V_t9J3,6LO%s$a1G[S7GH(IG>`4<hsKCC"%ppSDS5:[9BOXXiuTc4,7`LK
%%19Al.shY2f[JTd6I0G!gSE+P!VZX7<L16m9R*+f.SjchK8[l3nQ*Ak19nb;<_baqg9.RMT6\>2VblH?J9HhZSC>g,.%M$umQ:A`
%R*sm;$#'&Xna2j"(9@a56lS'qZtmgfH;&D>n$+7HSL+8Ml7YJ4CF\&.82_iG.IO@QhSG"`kChc_Se-j58\mQ"jhB7&FI!iX9b3g.
%JoOmjnCuBCmj87rRh0rp.JVb!@&)A&cuC3Xp`g=+EQk&7bC,`tmVQq44=GG5'K@lfh@97^_7^3W]R.M5F#`>:*HT/>rg@VSR?_U3
%E-BN$ZfN.[.bJgnUN=GNiV^k>2_`$pS:q@%TY^H/0iCDT*&jP,V;lD,J8[B-[a;qHIdT)OmPWtGLED-blN.4[@>A9sTCBW:cU*=h
%_/rdVetEV$&VTGa:=3qNgim_g;%L'#KNC;2B%$>+iXOB&eEGcAABHeVoIb.R];^_WOr*jO]T[lV<q[;%8t(nr2lW-Bg1A#<'?"bo
%7c$L6r=H:":Otpkfh1?.n":M>'0@D52QMYA:j[Gr7>LgJYC)052_!-t*4]2Ap#5YL$84+p*,Dihc7O,X><ZH2%74]8Y.[<k]Vb"I
%Y5_T<h#!!P\29gHR&sseM7N?B2VjaaUsrXp,3M"e;e,H)O`!ac_f=&7M1KM#en=>`h4,1;!#aFfeE@'sGs_q9<?!l\Me6n3\aMD<
%2Ve6fmX'EOq7_2N^mT3oF9H.F,oH\RQHo-2)>-8kpG"`eI7dG9nlq]*5L',g8`RORTQN6+J%B_$o<1-#6N<>Z[-FJ6cI4'RO8K@\
%94">omdUn*5u7gdQ'5+W3s.\//ij5cXMqMl3B9sRpe-Q,QXo5^5\Wof,rC+V@euj;o<C),>Yb,$UbRqZN3jS5Eh:H4Kid.H"ZfCU
%T2'T8f5RdYQJJ'9NQCu*`GQ`c3B.G_DY22lQJp'cl_\"7/FL'ff4H!;1C?UFZ=Y<<a[=>h-^Z>AHKK4SN8rA6>+jOYE(TdK?D*\r
%7rGV3\]B)"?Eq"L=[e&Ip+5FT!Gn1b\]F(<09RacN)ZZ3_]a#`UIFh%6$*_t1O;]S_qT.hs$1i_GCOr#?6W+>k/+Jk'Ifp"E\hFh
%9ju+J(:#@rRJ*ePGH^:C+M@bC`r,A%;>.8\HFRCWXa=3QV&I#UUR+eb5tSMg<HR5mpV!]=oIRGgeS4AjFjO9&i?3NP,29]XeJ]@c
%/)UW<#[G/GNYcZ"/ZLR9.P%5[4QZ+.Ni*::-'#YB>.Ygmb0;>_:7$j17j^[#T:.]a'PeK'2M^9CKAsW3$#I%*Ea[2NaEs!?Q6WSg
%gbE`-Epll_E_HtAgi;YChOb1fJ'0QH1<LUJ(VHL@=d!hdXBs2<Q$Dd.cX+d#m5QV<Ku(3D+__o0$p3g6e%f.50sut[q)b1E1i/?o
%%P%pAQ((`?&[k>f^NSB+T$0H<*8&49"K[,TmqUM95URq,12+2>,YHP?K9^eE%',t*Fi!gOBdr>M/E2lh@[=WCDh>Z(<gTZ5/$U#`
%m.btLjlUP^\0pb_6>>^ID*3R8*P!=sni2\SaBf9'(M:GB,OWuCT:BR@APmU#2Jg-K,tASF"M%IiIbhR=Uu&pn@2le;s7>2ndJ"3C
%(+RdXZY7&-n).S%iXTS2M31s4"UFCH0)o$h04-R012OYWq_AfG:8(q4\p2kP9WPq8ThjN=&5jq"K\+S8H"n9_X_p9ZMsIN'mSa[I
%ABG;^a:sP2<4<MjpFRfq\&"K!Wd1jQQ`Fi:HMlu9.%p#@G.oCoVi<oWFp6Xe9aC"S/22%W5M[6e]\2XMGA4r7KfIZn*W#I7]lLi*
%M_f:%dl4X:2ll1Ic<(65XmdB&fTIkZF=fJYs#SDJQ]A1q%*Qb'A<rB8H1]^a^tSY8@Ii^<W`$l(iTI&sP0C/u9]]jr*Z`:MF`%O1
%c!dD*O>M`U7#E=TB.HQ/Gpg2FpfYk6Fm$<q]GUb8U[Qn$U_p;P]&VSY&]&Y"\S3!0Ju`Zjl7-#E<,Epronld"rcOD9h0u+legash
%N-1OB1A&jjd9&cL\#g`uOOdY*2-DW@D<CJ1$LToT2tdg?`+$!3%\UqKPU7=i*LYS+*C_Iae@dS@e;\1r2o0NEQKqYSHVcX"l*L;l
%$2i$PlYNr2j)A]/.6Y0G!\q=M@%c\K%"/9@TO:P6hI"U@!$8`!9>>_)$E&uZj3Eqgms`spb>56]]:8'>2ccYfP_0,epMW.m?29?F
%hCSi(Q.5Me"4S]'2;:RU`k(h9CZ)5Ag7?bIN@b;0I.=Ya>I>`,"#kLHA+M#.RKCs&Y&?1))h3c%q<eYi\k/tY9:_;GMQ9T#/'Ebf
%+d.B[EcpA6&\0MNXoUI+jFE5!];sGP-$,?iaPJsNa!pr&i5__7;_'u67s/IMb"bHJ=!>I5@!F?c.8TpG]3`d0?8<i,UNaDA.pm+n
%jH&*hEot=PmJ%!2]q"i0'Fk&h]3]MhO+\OD_q`Zl[1@p.)?GS/'fKA!"d=e(Q%_!oS>cge8/bGC9]s)`)W!h&+:[+7p63T#Ud8PN
%P=bu,\DC:25+,*s#gQp>O5`9^o17/:3KGNFTQNZcq)sf'1od$J5*,"H=j`s])Vo[dk?Vug&Y@$f*b?:'Yu$``rH9%5&q.,?oA\OA
%Q6do3X;u`=kAaj!INJB3o]KM!kODW&Rk=fL'\jL(Sg@g2"\2*]A3jbcY`X]D,$(,aP(L\S4J@BO6br)#b7_A[CKk%;L1OWNs*W]s
%qi83uWTog;#S</-G^'@$:rn""[su0Y52*!N>Zm<O*Of@)g`>&EY3RtZf+fOTglESZ"[GL-cLA#!c<?oWE,AaL-Ze]CGO@+$NE`//
%:2X[PSa"i.l1a5/:K,?bO1h(c"g<Om.o<JhC54lZh5D[TSMtW`DIG::B2c&Rq;8UQV7tXZFuKt\kP8_=]NlHQ:DM%i^?4M0oA,Fs
%;#5WU:3n"ZJA`hAX)&e&KA8t"<G**)qJPWRXm`a5iVJQN_o5.[]Wgh-60UHsA#in)er:&b,MRF3her=?V_bcD3ks_87ok]6X@Kbg
%3PXhP?!XYB];t1D>p@2%U9khS'u_29)A"5`M8+/2;RE@cQ&C4TO1>]WTW(B#j'9i7qW5c_Z>rg-Q1rX94a]3+P[0Ji'0:G#8RR#G
%lDEAh4]t(K/`\b+9j9)B&2eSQUTQGi;jR"938.R\BjrKlZ*YQH>JZ2@mFf2/Z(')CZOotH1pQJu4b8Xf5`Y^JE]eIe@KITOqTa?s
%m<LYWGou?0`Gn<\qHe+s[HD]D\4Zg5?U<!3!'FWM:445"8Jc<.EsPTc=+1@\hnJ5AX,=Ce;0$$%F.(^I.p^;9T/59KEnha$RYmAB
%;"=Y!/tW0,Bg_>M_qV4[D):$]BR?n>TBkK4=uL^>g>5HT/8'CWiTlK99i0:CP.\"Lr!1B_j]&HUCMY2FZUCmV[8tscJunDGXj\;I
%QpMf0.iu,V%p^C9/JIU02tqo/LeQHm\b?:lQLj%T$;_Zq]&?>e4QsDNO%U,6GFQhj=FFh3CYRJ;db`@N*WaF\IbYt-Z<O)4@k!bH
%FNY\cB,^5JkjIHUVjAOL,Db5n%G[-,cd_`F!EXGJI,3I4Y](5eR@^pH.<[C^bQ^(IcdG2gko$F9girCF'_c=WPfSgWRMA!KF"j(n
%"Xq]a0F1L0cN*'>JFX]\j_("V//+Xeij2=k9d]j^!Qon;p\aS7<Q/g\`V\h[YDM/3J&;M*r=$DR,%;PQN$!@S06o[$$"p/D9)'>p
%iJ9Ro;6Vb]Cp5kIs$:KD/eWBWofhS[99X^p9/#AjIE:Llo&RENGoq'PIr\5+7IJ9?=Z<@\,pao1/RENm]C;0!,uUAnDXTUEro]oF
%]t+*Rh>[56Vgl][g\gq)#5/o:qi$)S`kXcJ@%T0XcPY;I%.#bSp=ZqRN-BZ8M9dsI=XH=B@%Rc.PErD%qs*8ZYFiLUoBbSJ5QCQG
%WmAG*r91WInTR9KpVi=TDf/ps'JFq8_m`G@l.%:DnGTOPkL3EC^LnpbHkl5cG;6M+-M"GMfj3\FSlEAm[Jo?MJ&-Vad!o/CipMkW
%eURUKo(W/9XacINf_oFVO8j"KIIih-rLR5FoOmhYmp;[_c3&:*hDC9Pqt9(upG?f,ne1uspXcV+*1oBBoBb#N-a3Q]qh8o`o(W#_
%YFb33HMoA[TW_/K4F?\bp"0'g:]E!%q"5`#4hpslpU<rUr+u+O\Dk9^s2N+ZQQPiP8,`#9oc;.QEtF:AC"ZoJF<AKcZQdPDdS[b+
%2uW9'hIG<"1"<8.Pe;&\>bt]+ohm2>TS/SB!'WU8AAVV(.$\qh?&9OnK=c/tkp]@9qqY2aEflASQ-D%>.*FH44"j0/j@Z]WG+mG:
%<&X,KbZCWpZod2D1qQ1o/[q'l:m7DOY%0#/Bo,p^).$M;<=QK19=PTV`9X7o&$C;C[r:e/FG/P.L:E,!r47T_.$j8g7m/G0"\c,^
%YC_!H4#GFuFq#EUeaq\>>-70AJ/J<#^FE7HG-t]f2Vu*(rnGsSh[sj2\,t:-Y2[Y<qfVlfM,)dTGa1Gg0M7\NOO4%=?M^m3A^NAK
%n29CcKb_@GBGECXe)[8?q6f#7\QGXn?99ce!AAB<YES-+q.=ouN76jIjE3kf,LUINh0l-Um%nK\2LFs-j?.^kV+-JA`Z#0I!"g=o
%1GRTV+!Hm8b4j$2=#!`<!Wn*h/Fnh,MJ,Md)'._&,S.d5)sVaGMe.RF(@`UDN(&u8[!6jZB>#>4b@s8K_dDIBk[omd.4l-sgYsVd
%_6):Skf9Oi8i1eAB"_/5C4VJP7E,<ZA[1"1lsmf[M9*dq6$&04gkF1Z7.31NYRgYU.KL>$aLb_*XjYgP4]5f^iWE/;d<5#2f'?="
%Z<3/7bSr[MaZ@>*k-Bq5"k?AL*185S]_-S+D'Q@$aRZeR^ZnF=[L?mEi_EXKV]`i^+PSY[j_i3!-8Ht0M\\.f2B$*Pmp@,I-o9Qq
%oNR,,jZFUHYC+7*0Lrh:I;9Ip[&[_BS)aDr$i3lc7#'(24134\aok@^BD/rC-%."D0%7CWO[/hKAs^`VVNQto!]Rp;##_UQR0WdX
%I7T5&5cIj7V5**M]VlP3@qc)V,L-3[bRY++Ss1a0')7.,P%&-A&ImEpO)qi=@[Y;Fi)1Fh0gMlWd6Z&LYHu]KL]KotM%Z4;U.T(@
%X#]GC,[u=##h2]!,.7pV6@KYteQ^-fd][c&%ka.!/fZ"3l9Hm2Obf1Q6/ne0lNV'+VLGT`/a5qHCf-j7o8'iO_ChR\0tiH8NL3r"
%VB2q>+"GMq3c0mOIZG7I2QEe5-"r5#"?iZ.H&c4rRnYOh$3nF__,k_ZAW$XZRS'=P9@j097:S[Eb?mm"Q\h1#dMG38cj"Lm[T$,W
%qIST0dhCh)`8$Rj0uT"B]0%XPm+ES`:u`0eZM_itKrl&h%Um=UoUn1BQ&D,\R9V5b!J[!\V"@=A$@,>X_(-WI41n#gMdptR&E@)k
%2o($!Q7=Cn^G;:E^d?1:M[UJt0i"TMBd,5XRkfM7p.gQMclV+5=i$b(';d"o&>s%EItD@Brc2\T&3QB=,2G[0&b&V28\WkFYsb9S
%^9:2;I#lq/nr,+,"a:AW,:["EZP92#NW?2:7q_HP]3PWQ#$`):imIqWgL<=h1G[NI)>0p+;NZ"1A!(Dgb"%7r/2O23*"oEup<Wl+
%/kXKnPTa)V$?4r6rsg4dCoLNYd%X]H>""bTbeZ&'!@X>!NWQhKeLmI)3=M\/P6k0fU89k0ng54u9RDgP17TNtr:2/UZ`N=X@PCD\
%[!b3*\@<1r&kO!Pfige#NK04E/p=X4N]DGXHiu)3dOu&m,H!(H@_=+BV%10Hq[!VY_`k*knn>!.[X$7S/`=8%/`^&/>-PS]K*4=g
%@uM)_jYLM4LpK2p9++^,euk3l27E9kl,"]TR]nFeRMYMCG3DVF=Q[lH3._cLn?Bj/qQ[Pf^@X:.Hf(hR,cqWEA]]M3[Zta@!j.;9
%bM,,IF^=$j/hLLGNbb7*G1)P2I"<`ELtMtuOgS+g(\&08"#>T31DAZ"@&LN6*11;.7#!%M2o+X5fJ[%b3_"I%DMNQb(s(FiY(gq1
%jkNA(la4Td/s-s-Pi4\eC`q%YQ;sb3@;4#F:Ma>Wj;c0)J6a[t-X%Pa8'o3gZ\Vt;k_;]aOb%,8^p"f,eeXY30R@22oLept[uoc7
%^7B$`gTlXhQ'cHpWb-Y0O8[!p75rBA9@n+s.MTUEs!$KdP,I-&8jSA:4'Y!DQLLE[pEIkfPS@<W9tYXpL((W:*Ob$tn5O)pdZm,A
%C-=Nni\I$=pQ_TF4+,7X8EA/>FVkYi=n$E$SR6&deMg[8@6nfUZG';E6"S/-/@ol#4hQI31$(B(Qt[bnC@$jV(S-WWQ@WeFY9F`Z
%d:G5CZC6Y2,kC'L5_DoCBe3JfYuN,0:+KGAMG@TB6YR-l;E77c,cP'N_^Uc133&oB=/2U$/VUk&lb["l7n=$Tp$pD/X"/L%/1[-D
%1;mqQA>eSJ=1sY&U?bY7nAO62<EWq5k#0(g&l2+'1!-t;Efst%U<hr6S/^9)l*SHrRe#_iQ/:5fd\@Xe?K=a`7&@3."C#'Hik*AY
%A)\;A/l$"aK\;#_M#p>ue+e,Y3ZgcYg1@LrB]3I"@HR&9kF6l]OTH(N25d'P^$D"?gH]mD(JXEmY%X"iK:#DI-npi0=,/7lYe"tr
%LWjA<%7Rk-7Bn+.=h8p7UD\@fhm0%o-c2UAVoss//bBMc*25@R6aLKtaRA28U<&%W#J!fN#nDkpKP0[WQh-/[B_6_`Geq.i!`OTo
%Z!mD8@enM+K^tNs4cKlj*,[+m1tjmmIIDL\]^VQ^__6K8F6q[3O,cHZrV`($?9`f4mI$nLrUnX;5J6diX#Egnni:Zo-s?WpDD[HN
%o42-#$8=`$[2VM#79C2c5;Pte^1'2kH-3WB=*84p_p/ok8fTc)N<I3),JQJZAKVB*!=Yp)*L1-dC=;=EF5c(SrDfq?YW$*%Ll(#f
%9>t3GF:L(mLo4N]M$@"q_M\TDWMtUe/EF6QbP""^I@'r"J,#g`gOMn$WH2(r<MqB]ZB-DOA\2!F],6Q]6)`4!l<(m[GgY.BPR6;V
%+i$E103@=sY,9Xf[://fd/8;HQ0#/0:)%[S1DGUXcm0!cRL$D<`*MF*Afm8X:hq8m^i75!13c8,_uYT-;;e6:$%$XC-JB1E'Xieb
%`4?0/+XVA;(-$5O'A_B8CT1"2^m?#'aTRdpb'Xrg2R@Ce]nTWX?$,";'WcA#(RGcZ@o(>R5[a\L3*H;Kpu*=#).&OE&Igj>H8DM8
%$7(.gii.GMM#"Ej>']sj<PGs4_rMKp7C>S/>lE1/:aa"a?6`Z1YV#+OOtjRZi3G>;WYEk&97g'[P@J4.kNj4].Fs[I.ku#5#ZuGI
%X>$9J'3KrsGrc-%$FYZ^hCt?>]BWK@9\s:SJ0C>Ij2DmO0O/!1d'E:_5[,:E2lJQiod[Wbf=D!9KX"!j-0[c5O\TU&EKQAh/JukS
%J^"4R"^4#L!%hX_7CE215sm,se"PI2=6D:dE0$bFn-KMLBG"TDep]=T&7sgsX$7]FPejDG;ZBU$9?1S3F:G[?G'T>6LKIbrC?GS*
%']V3Q>up&u!DRlNjh^9sh)Q5ag^)I(@bi6$YX==B;L*#.@k795O+#ObR+J(%A\JpAOd8`GW9c5pAW_a(ih6KA=*647K)"0M/A7\F
%*?HhpQm#f&?!/iBoe;QUP%^O4@@&=>*BZ^]Wf.TCXoOpq/XR0u[siOOV^Y=E(JOE-EGUZp.Us_E+HqX<PNi-+M<ErD"(_Y/*RS]-
%)XITM];TtW)qO=a:5Bq5<q2^,a,N]C%7H1eE@6p%Q6q7;m4DG"ZB0>B%7Rd07`WD@O]=&iA^aOCGX!<`1lD_4)1'kmQmTs@B!oiL
%(e=e:ecrI80WKA]ITf44B!M6?WI`C]G.Y10HS99D:67:%h(u/];9UfnKcaH&#:F"R=*/Z6B)q\R5YR4j%XLBDlEXBtUlZ"A'#RVk
%'95_H0us>0R$hCjMUN[T?=gDpp/+Yp=FSYL^(QuF-6E(V:\i#qdK+>9:*?VnCZK!%Z_AiuH<"XPi?g>rhJAt&'.27&)bl)Ukn'at
%-8WG<G`VCuZ,L;(76M7H`S67bh&ctk5ZBJ9RKNPe/`Mt?=P4/71G/hJNa\qr!;P&^ne!R9iJU/B^YS>kGKH@&;3C/23iLJ-0WMnp
%X(i'65iV/lY",k+`nO(+,fTsMLOBrb;@k:O7p46OnktB,EH6*bY%N?LJtqQ:(<Hh0n[F<g;--*"3F9f.G/7R>Ud.fJ#&K3kcJ]?=
%X7.k3[FB#2Qb7Sb;!/#>M\b4m^uIi5b.kUkGVZ&EBX\A_NJ3/".A&3g#C^dS.O4(X@>i0]U.(SORqeZCjnD/^!,K^;NHBn_/gE!3
%_s$c*L5S%>1quIs'f_K?3(nap+Vucl!9U>U)@:RM@9m"RTf6QY0o-YU,<D(ilP%8&bpde1!p_gnJ:qW0Vkqh]2/sA7%p3?',2KQs
%I=`3)@?3_o"7=^+6n:W@#+PGB)B@!6nNm+k]pHqKH-L"57I5VnEcV,PGWQ%kA6uje\*IBD;^0<4Ytp&idp&E(0#@2.Aq[P<R>_GQ
%`!o'm1B8m;f>d,VbR&!WC30X9/sZ\Z(r]4SAqaY0b%suJY:M$(Lh\]V+<O!OT'-G;Fe'b=C3r,$rO\!sGkhgP+CV"[Noe-KkVN:*
%NC@ue>mf0q81[SeGe=>*/?Lh3h_6n*>aG,7W?fe%A_a+(CKX(k%+.a$?&^X7&N1OiOA,j+dH0q*-=LT<QkNF2ZrG6QEOS1E<Y:5u
%M]>W#(54qh<dP#In1KhF[R<P8(kk</7AY()4l0Dm@q,m6$,AMM3d=m:GU.B-5B/j*1HYaIpb8'QYWg`,Ppe->_;+4MXTJotJkdj%
%#,5Nl8P__k(I4Z#"5)[V(/0t=oRP*rd8,d!"LM:R>gm4['iLf53qVN&Upt(D:Xg4_'=$%LUR._?6XPW,r=qeq$?j_2H.WHAi@AL@
%?i`Vq3!*?!+;@q*JCac?PAcSiZ:o16qG=\(`ZcT\12G8[7aJRSg./$#aK[6>`uIBQ$o"#n>u'P60*!=[0T!bV6nZ@Y3D.];*:!as
%7dW%J*#4?;>V$@$N1E@\9j0$`)2sYI]+bJ(!%/Ob(>0MRFGTLgc+5#._0$;!?nnAX!(-2"BNU_YY>ka@UOs.1SdEuR1qpeWF]oK4
%FGXZt\Nf)s0Ee4<S3aDVQCpdWoX0WV2l%U2U?%D.+9o$>Kc%9]VEq%&(l,@g=An8*7FpI5]It-T*hp@?/B$BZUPj\?O;%.ba?.i.
%p\La@C)HE%<u.dV6s"+s#(i-.0@^R.g?QM)&VNj-(W073qf=qm9*F05i1*22X!#r&!J4E-MLd?oY!L)2^e]cB^oTWihJ_$qKd]So
%8C<^(Llk"F1i"ot%4BnV"1p3PO$dDDT>56o#T;Y-LgH\U!:Rcd49DUe]g%/Q^IJCf0FKVs?ZbmCN4M8K+Pr]G;F5aG1O6?`=qFK3
%Xd@`MaZZe[2$=r@(1:p`Y)60m]+eZ^RY!]\YKq_\/0`)A0&NGP[2poE@B9La9//u"bC4pF>;2&VHeeGJ:Z&9mK98@UDHdr,/g<9C
%8P.+"qhR,(FkgTQFqca$,qS,Y'2qRR+_9Vp7=tlHFQeX#g-fUki'n4=$.QNJhSB+&fi*f09I-#Ch))CP)57YI8okT!qrHtQ7Tc<=
%"pm):^PV*;,bG[g;lJ3t"q*9)U8eV>1QV[u[7!\HBd'@KQNlU;WD5!1gmH$9.9:o9@)NV_PnYB.C;^;'2>f8i0+IG1(i"/8MroAF
%Cn`3@U1\cU_`i=mCo`1*X[1hX4"%EiAU!'<M&@F3,JkRU>oXh?V2u*WgRK&5B(8I@:CGrNGRmN['kT3W_B@n?QFSh+$8:;Q<R\)Q
%(0blPOpRuJC!I9,IoD+^O2a._`RpCc'!Hk+*V?@F?Kl+Bl!Ud5Nu3<OloP!&d*,26JaJP5432`m"n0M"_pPl5$W&$,QiM/@f-(9O
%QtqB)+AWDu[\gOL:Ft?X:,4#=&Wds>0J:UPlk.0O0Ro54Zt=^ul[\\9%&cE!")hFK,5kSRa&H>]`4kH(?L3LUb=pM-QjU&c!kQ0!
%C-KP5N<OTP#Xp?$!TI%g,WOR?dl;-bZAT"$IatR1KlIH&!)c0;,J_PP0!\9I$tquBd_,drZn<[3T?5"e;-"5/#&+pmPL1X$@.C"(
%.4,O5_eKc#VGSPWCjC6/NH)"&L==Be,5<AOct('#O"<+kiU1uGX9.6VF(A2:JJL'q0T_DF,;sK$M2jO4`6bkSV@7(6SA^FMo:[5o
%iZYndn`@\O%%?I;X;8Hu>2VA2MbN[2^@7AE-DDdAR4tVlM7A(<T:u"*1>=mJH<Jn@alJJ51h[WFXttPo-=lJo.;T93*HJ(9N(-3/
%2<=rZDt12k9d,AU=95sc!3+R^k[LW!)N2R2e)UKcUEP_p7`a$glA-=9'7nQHT7@<joG>O96KJ!A#r)kF%HIj^Ir+8'Atj/;K$]*=
%eNCK7I&bf2$rNG#X'W/2,9s.Qjk"=j(6A('qH!c#dXnd$%ODi!otnut_??'K8O\8Yi_jqJW@3RT<osi\=_8=u'>t(mTIfTSRQ?;!
%K=gV62>8P0e%DId/!+>?SZ`J*Ic,1T2P;p<%ThfNA51=*9H:!G$B"frq18]C)2)uhge`Ad#1*d20Z+aCLMHT+?j&&$!*RMrbdOf?
%m7n+Mp'LenE_af6j#`GWG:&[\M[DXs5pug7<p1dEQH>/57-@d[@.;XJ7qtLS-\Mo-<IfkS#K;9(#9GIQTqNXI@C39@$B'ZtXI#;[
%5i.l2LWi`L@3g.f#p7Q.HR:dKWXW-1is9#<f`>cKBf\VD\jQr>.8rr`YkWa:/]9-3ctU;TdM;e;k'+lj"+\\h;dtKc@*kVZ-WUIH
%%`6rQ,E,_t(5@m4hi)ek6?5?`O[?qX`YLedC=-hf"*9;)RFSAj+rd7!6rPRMOI7HHN=;rl:>^AkU.=2T(3Fq,beqLe,##mI-XDFF
%?=Gqu4=LMC_E$/q*fE@#A*N^pY%%0Ve]HQ$"_l@H)S@TV=0uqS*@j@<][.W#^7\oVEgi0oTn]P/$%'P<DC]rZ2D9.q;C"$!1r+CI
%JV\A51hKV?YNjB,HLo%e=WE239$$T93hNaT)1U0YiG%dKGo#Td4HsFuqq#J/.*[_k1^l;o6BNAodWA)8oG%`)USs@'6=:*OD'TjS
%RT-a8W$J^TJ3_YT4[WDQd/XOHf[i[&!o0TMZq&u'$u/*oQ'j+)_=E9W9r%q:-cNQ'-6f92C!oYKBEe3)5njfmU?"R5<@4>1-.DBb
%dl5YtopV'J)qcfG:K0+gCF!k'`no[4*X:gs^]aI.=<2pb<@V`//-5)5Z+o,3<!lbB(p>(q8D=Ts"QV\mWlPt;*+1t770S,?BL;(4
%;Ll1U)^KG5Zr,:6)=7*'=Wo':/gs!"d03(T>:a??R6Y,%"A[F"OV.]tKY=:o+!LoS,OH6r8?P?d8:]6(L1<(%LJT_E#4Va^6P>T$
%YnStU,\*-.JLrl1[#-&aKVZ0_4tP7f2\=(<:EQGW6dV2FLi4#$ZXemp>3tY_)l3K+N7'"XD4oo4#@942YX+"+'&GAaBo6oNPaN>H
%"eLgFLaYGnF$c!kJ\7tc\sVg),\2EXkV]^ii@bi@ML)81+RZIUoTAG[ed1>@b,EJ+/=&SV=lt(GaT0ab7PGb'#q_T2(m#1.A"iN$
%*W57^Tc9[H@AA[gM'nrC_"FL7+PndRkU?5)"W_b8/:g6,8tGd&Wh/F]c6NF;k(LPBbrp62mo#V[.LuRTKRd<.6P_-J#tBMJ1Nq"b
%91XN,D$U"^RWbU%E7Ug,E>@dhWJVE6Y`El.HBg0gihF=!kEC'PU<0Chf]m<CD2s<"'2]&9l7`kRI7->u?I>>Q)t)'ME<J5I)tY,;
%W@&'$**8s(TqOa`O;sY=Dj'bpM]c9O$kFD9Qk'+ABor+2\,T`i7n/Om0u#Z/"RW%Z/u85,#[d5<eB\lQHU5k\q_DkHF[e4gPbX7$
%/]TTT&9fUWPbGc,>ohJF7nP6?,6pS=D,XJ74RJH$p,^X:C\G-B@\[_)\.W0mf#[sc3WMZ$[$iW`/E%8CTS^DEqVM2!:Z&-iK98@U
%DJ.WnMf]]M,B8$tN)Vp*'B2W'YRjX<!]P+t3le`)QeB_2R"cMh<RW*1C'`'W1WUf'(i`eo</^rTAG$]HF=q4I1Wa4H:6Ej4O4%M=
%70JTY=!l8q-23@@2dKW"?g!Sj^2qiSG)mIC@;i5$E5Xo'eoIU2<gYt;M?_AHV,RbWVFD)X*\CKj&5AG1pU!XWK=1rhSKOYO"r.uL
%X:0?HAap$\;h(#<e9&doo`;\]1Sl7o/W1C4PfUTr+_+0:1,icaBl%pj6m3sD>6oJ@Ae$fdnmFnNG3PaJ'_>XW@RZ"%A3:`3'O##g
%H@BTIk0Z`r7%[GGrHLC*-1!`>qgR(&O0rk=#!!-"`^U#[QIkJ_a:CqJ8lKrHO_b3q_kUs"p&%GmOQM2gU-bXZ"f+`j6RQW$%k<tV
%"PK3>!XG8J,M@sB^^K!F&8_g!El%20BYY*tbVL<dA>$mSAuakcI$KN%6OW6/[U:7D$OW0P_Rq2,1i&'$7gjj?7C51Q3#X>uRpjJM
%O2TqeN2OhQ+Wr21[+^-47b#FJ+Y7";bF-Hf;ho7GE^PbFO/rr'"WEc#J;1HA$^jh[^P%`%2hR?oS@&AHMUq$2$nCj\H<(N]WTaX2
%j:#Aq&L,fgGm_Rls5=!)D2";t!S9)*?L5eXoN6WmE)AcW]K@lu"Wmiu0Nf=]@K<1K=GR7\c%T4C`Oa)gcqFkt1FT5j@3m_EB@1`U
%O]&\4N\*q-ZRZF2DR:16]qW?=5$OVPols@K$Q18UnO<m91)5T_H>GkXA^jbgSqdD$V'\?feTFFYb-:d5%)*,/I0IV;>Lk7iB^KCi
%-Q&6`\b8:BnI4R"TnVar5$OGM?0YQO-ONR"7,1ESU/iZ"/]<ulbcbaHn=aeI_YH\"'XC!o!K>hgj!K$<Ue3;.TLeI\8ncLVRl.B4
%RDK!?_L/=r`X5o%]m:tThQl8[&N7V(!=]&CKNS4i70b6sJQrrr4Qd@T[&bX\L5FT$^o``>1^0_cMXu1q'uqQnWo7OSU*Y3XAto-a
%+[r>SjNdqf7"un<E_qN^Ud4tkH#\e?j*b&iNVp>LXq,^d\f?]'Cul?Y:'-6?M?W::8XE-:b9ND9ZlH(M;kq9UTrA$16!p'g(<q]P
%E9X_DT0T;,`g+u+'Kc*iE1VgYN)jQ'Q"YGRE#%=60kHK/>ARIeJsKTo:u,HaTmU?^\5rhBYgU"X20;'+"hYtq49,J@N8:eXa%6ZQ
%((1=O%fAC_X'UUNQPH0J0N+uk6PfQNNq\uO%o")\9+\N>/U[lK92:e1%oA]*N)5cFZ-'i6P*)JMQU6qag2#:@JS&F\(8O(RZn?Y%
%!]5P:;-.Xj`)J!'W!/<"Ypb@RS#I"LpBlk=2dQ&3<[bTgEuoes-UK3@.l?WM1"O1eD]Z5&p;=aGn.m7>,?ZojJ6iU%Z=TOJ%@)c8
%5TUMo7gj,3#FOmTgs0Nm3Zr't"hB1,-5.X?7E,G1`C`W&4&R()__Wk1eU,.<n26$JBpZ#b(,!Nt$L+4W:%JZV!p;<GAus1XVO1Z7
%221O6;Dk,D2DEhr(o(PB>46Krc6^P\XdZ-,1c*Xs"TWGi8Vm7"gY".cU^ge#$-WFMF>6FS"V\]U/W;!-$qtH,o<dQ>o_?Cd0VK_Q
%b$G<dMoZa].67sAV7Ku*5_K6oQnF`UI1d!cN]4sda]S!+q!k=Vf*"Z\C=0e,D8>cIq25FlROWnMCkCZk<!I$sdCk6;/[GW!2(N.[
%BYR&8-^3-gY<XNo>?)n`oWSVDV48SW@S?r4+cr,pZm<h#eci'U=;G)+6'4%<LT:rkpAref"JRD"$3s)<4F@=,L&_gQTnu;\,siaU
%1_A^+9"E6ijqL3Qr\=c`&FZE[Li5S6WJ*F/l4#SNO+@9d`l^)_%U,hH9rGiH_sB5'Z78m=MEtmp&2\%dCK+hr(-pl\q9nn&m*Z4h
%8Cq]?Z']*X10u)LGV]O34DQI&4k5.=PgN1>)a-H:$(8(,lj<!hV#1o`AXKB[D8F,.1cGaL)"Kuok:U9#7MR3Y'UAeTC(&"u<+i+[
%k8uePcRK/qpP"agC+CJ"CpXs=hIuFn'qM5o+<KqY-PN/47-hKf'jtTf=en@Niop,o(j`(Va@^0+4s3!-!3i@@aqtnQ=>[==&asQn
%M\.*Ad$n./0hH=jJEm2F!$;QR!5-l$@n,17-[s8b@rI(BH-qM)O^u+$WBnjVc)#+T)7?\OJLR6\c!!ecd<DYF,ZKak;?U%Ii96Xf
%X6i3a3@Yuq_O!+h@;HD:2e)?H&^H'fVEm\YBR2Q"!7pobVQ4@K7ol\o&MUu(1aH2Soc6HY?(a_S<)07RrDT"Y?;@C=]ngZUdJHl`
%E_LVoJY=S"6t=LqRYc\'7abE_`ntaBHf)X6JOrM$Q]hTX:*fMKPKc/#&U+R,2@bD6Wn@b5?c1R$L1oJ>TA`VUW-&0#m18Yl;tLsE
%_kdX:H?Ec:6[$)R?i'"Kokd7KqqpetRpBE9qUP=Is8M`(gF$oW^\M'9YZkBsnMa78^&7`rlFXf[rT^"Hn+=fTYC?97r98(me"?%,
%pcn<#$e.r?=bVX"FXih^eAHd0XarZG@dXNFh(-tjA)g9D!_PoJV+umK=n+8+17SB"Zj7`8C>"Fjk$='FN6k12)K"JmKgIC?1d`^g
%ds;3'Es=LjaLRt1)O/EY)5SEGG@N*oTgmSB%(mqapQ'V5astt@S;,)s5"=3Vin`67*04_1'#0%R'W;2;/H==$5fU$!VM"sEBZO,0
%ZF7o"_[JohX56CS7U%]UDU3+V_-tI"?IrNl8\0i/]KHcPN>=A`?b[%!WG&6(?WXY2Pc[egD'm`LF9.3iQ1cld;:,Dh.#\@P0[o)c
%cPG$T``,F!ek#'1d&)aX5,t(XrCMqQ\M%K=?lu/hJn]3QE/.!hodQZ*RH[',)D.DB'J'NgiW;Rca7Lt#S@Fb"o1j([1E\UjZnipD
%H*+dcA>mU-Q=I0CZnPZZ%M^[kTLE?pd]u>4#S[>j@K$UBQ;D\V7gg"'!Hr#Y2j&g[4*1Y19*6pl)1`_6*Ec6#`ltX;$P$ji'PC!I
%Oks\J1^M3,be9cG`.AJ0nXsJ\HQ<jd($RS0qN3%](,DBs\tFJ3)L:JU<9W%FVieZh>/!#5Y/ZV:ZQSlj;QtIqfG!bcJQX]7N!^0:
%HTb;R(9RP:[F[)7OJ947ZjXl=\ZT"ed#]NPZe+s+2be>?967IL%8_+Sr?g;%(`=K#c:1QVnmHI3]5]:u9@'UJ#,)$.=LVop`7/Zp
%lk882k4CYkZF00(/QhIt1b_?7#n3fbag3O\<>3*HMot!%eJJ^W\85?#)Huu\Ci3EL^dL,q*BBOFjVOWi:p[l_MdD;3=Qnl>7"i#t
%Zb./*o@B3mC(\&j^)8^@bc^$?WY$4r^.%;^N*3^(lq;]HBJHCt5)`Oo/6UqOH8R9(*uj6>]G,f9GWDa_(u'g58B=\OETo?i,e-BK
%Do;E*Zt.h^(d`OU!N;WGS>3QZm\'l)e7cof-mAlp-*?`'+WfVRi)LD0Lm7j#U>$fCP,697"Z5G;MUmF>#qY6H9K^\2?#)F95:$M.
%dWdh2'Q#:&W_J6b/XinL/0i[tKqcbjf@b3sC*8deS#@?(_/)]r#bV]aNd?e\^h=o2).sReUI\QNVp;W.FOd*C1fNKa/OrW\1K4XT
%V1E:]/OV.3\6+Y&<LIIKX-<(s6R8<^#7q"2YoFO=qD,T4O9!G5r&?YkRTJEcf/244=U"s`*u=Jh.VA4aBT\G*l5_Hk#QAR_4)sA!
%8l<XG-[!kY7u,b$N\#k9dGR@@onR.R?0JYK'[^d]]>,\#&D:V@,>u5b!qK&AR@@,+Np%bRa:gkITG%<:EOD!9<B)Ol.kd;6;7#1X
%\Vl3)Jc\sZ;.a^QJqoG%q8f@d!D>IA-VIh<1Nsj[q*>eC(9Q76]-?5bd)D9h'gZV@OIDd$W20cgGm6MKBq=9R-mumPo6I)&X6%7`
%AUH"*)MMmJ]CFU*)o/qX?RJdO2`r+OJ=4>V@U;?g^Q=3a#;[-70$nu[,-mg&^`S+!@[J`uq9U=u=JTCD'QBuX:HL1c&5+97_T>3g
%'\#%nPJ$+/1b_=pDcI2JcW5?/=C!OHS$FZp327Y=Nb-IQE-<@TMU&=0,ToqcpMd(;RM6le@cS.c:@0Z>^ku,'!NipqJ\@%&AhIiK
%&CQ17!DEZi[XR)=-mepGK8GHi>._^EiI*R.'L84/%i'\_!NCARL>cW->6_+/R'aBNjso&@!6#n`*?.74O>ZGcXokjm/;#?%ZJ6Fn
%=Tl=Obf123)lV^\@K[=C0U9T9PEuG&1$L_,9bq.)UEZpb2]p4?"1M*H>"\0R%k:2`/B[mIj[n$))8%k+bJD;VbW0(u.i&<&*mtHo
%QXS'/;YRU"jTKuJOpMM8Dq$Upj[n#HP/:\=G@TPO_p^\ds1k!+.S5"0q8.tq`GCA7*`?*B%&FaQ<tDp81L2s1op\R\j/&/)Qh-4Q
%9,Ym`BPCpC^)\mF'^8GWWtJC"SIuZH"GK`!(hi0IXRuo=]jW[>Aeod';PL#P,2uOjL/;Rh+dE&4$F:2"VG]jKOu_MjUo].t,T__+
%.`u#uo3M7J,IJNm=7Z@-p';d[AbS1:"-FQ;&bR<=A7aR8Vf;#'684LXoJYJ>\hPur:QbaS=4^jk,+Cj)1Q4f$ZkXYOJoceWC,IsX
%"i?LfM^PdjgEfR%"2;UY?\#].co1dUBrZS9jc9V6qdi9(`Man'VbOEGH*cTJNQ2&lFp=m%/F9TcBP(hN5@qX5HV3@4O=qit&/-kY
%QiT7/ROCd?&U;+L.d]Y,^m'X%Hdrd?e&s;e;lRFiRD0+Eq;CNtL;%&=_2cF?IaP9,#I(mdc"/2!NguE_5k8#A0!e\g6H`p?AiL\?
%5AY:0:r1K$!iqU-25]!qmRaH/).M#1?nG#iiJY]rFsTT]Jit0*#,G1V=#g5q:Z%Fedu(Yr:M#,9>TAq9Mj!HVg!X?ZC[gREX^oGb
%@'%3a#;JVS_1^9@(:$W&RRD0(bt4r<V,^`i&XW_?`*U\MVM0b2C[T$of7Fc%+?Pp`Q#,MuR-l!u5e_!m.(td`+d75>Z3Y>5[\1,H
%7]fdc(<GDIYhG:U'hBb*Ubh=@XFpY9&DO=lAPK,noNU9EKVWU;qFlmJN6hr/J'@e&?K=dG"$b*KYEP.85h5%tB!]$Z==Tff`0S]Z
%JnA%'YunI3Y%!>,.4g&_%*Z&H3*:0R?0W<I+Fb>OmcEOsJFef8>Z+pNpbbYG:r+?tTTj$So%A8E!"sN'Y:go0"$G'GS@>FJ`b8c.
%O!Y_[1Q(.hZW%$!c9$`TQk=&so#(NYQEb#:=?]r[-(Ej:GX`"t<fd>c)]Y]*6&lEs6/SD_bA"]%T!tA%$8'(G)NW5X2U]&.]OX@T
%M)9HG9+a%^L';?eZSQj4g6?c>"Ba]`,\L]5P+u2c3aj0c)rGu^E<ge>\S0D<K5We+<Mp=1a;^r9M12PuhS>gqopgQ.;J2n56;KdQ
%dT9lA;9(dql0X[@l3Xel5Sso-/4LQ-KkP)O",SRjYD5M*,sOk+UoN[2"=B4dl3AOWRTUaCp`[FI@U<L9IC_1T0C*(<0$Z4+O'qXH
%bT-AiZtT(M,u<HkPEr4?/ncC^B_D`LP.W]2itc>UV.*Hl`,Dd<.u$rA'pk@EooN4485"fj_MTg2888[36aX6B*)T1\aAlEN8-.%5
%PS0gLUqfCA3e_o!)``jSmY^3Fqa.XTS$nD^!/^MoqQe&t/Lq=:=2U%$[=B_FJ^CcGG)eWR:SO8V7VFEVkiCf6X5s@M)F:,9Q1)UD
%]nVEh,V^DT*[@_)6B.(erJDA&B"Cb,A\GHaD%`KVda)@qcnT*_#dX;Vm!p7IT[Cu0>c+m61(I\46K\Id=Vk6>Cdl.?98%58p+ffB
%rr@_9[;ea*$Q_@BK$JIG-HOZSj<sFgPmEm(/*d\Y)ho)[ZLA:^;<GnJ!=md><=c@mTXM"2^nH@b-[8gL!<T:'WXgdh\nLdF`Y=s4
%?Zh9aQii(9-RWA`b3`81,)B]OqVpMT!o[*CORZ+D3j2?uO^[<CTuDQj<bkjld,.s5SCTXLlBE5["<t,_b(40N'Y*9&C;glC#(uJB
%Ze-aC-q76;A[%aA4ttk!\.#`"W&u$X*#*EJm00pUFZQ\$5Q.sYlGQ9`"BNgr<j.lSM[:e8Yh(1*5h9XNHEHO7;I$:9#g]`"P17UE
%d@Yf*p]r](n3h9lApk)6Pu\"hoa?Q3C!)a8V-,f`8JJ;K,#G-fjJuIVn7+[['4R;?pc]<nP*('Si/VD;V\i1(-4,a1YD6kn&@jL(
%c6`]-J>g",%(^_d,VV=7CEYa.iT\2i-Z_:OLiE2#J)QeG<>u?cE_:#9?(kV$aHd!VHjKq@3$(`ClEP=T&MM3rC3UN<W#W52=F'X@
%#Ie2bWY*2BZB&D(1>H/I]Yempdf\,&N4;619,#=u!Tk^E8@BMA/eKudA4o:X&6_ur_.Gr/UkA<@-3qk+a0=N/OgP`I0=+9k3<g9N
%qCbgg;=7gIlT4(-k$HBM.dIql>-DJ22*./lQGa/-XU+X("reJ5`P"")10`q.o#1Qk_VcL4XIt2+,r(7];^P_9;,*%s\r?^]>>=6l
%ba(n&L.oWR+5<`%r/+CY77C>p27$PojV@OsM-CrYHc`$QU/L.5.k62RJ.7^"a<cS+$CB1I-'q^Q>8fJ=m%^"0_cHCTJUik^5R0)s
%P@Oip(<]lR";&O2B@Uflkp-p?d04?WS,fGg(FL'**,?nH1<:0;>M#u&4RAN:b]/1))``f^>mB,OJ3]H2.dG0hMPV;U#\tEDJ/]=.
%NBQJ@)(bA^<3#2FfTdZ@bm&$T\<+7TH%/[9'Zu;jjNEhWR5L3_0S*j\15HD_>RWuo[4oH)<@`Q5eIY8dIH;u;ed?22VJ'Mo@iLG7
%=3Df,"B:U"*_o@eaHURj[hq=K$r#(bqbG(j%/.UT;Hc0B@IDh%fFT8_%#c)t:+0)^VT!<M&pNh1aK?rMEE[SF^a]BlAP*9E9YX^&
%-2*rs8p#$ZN2eX>GFkSFbm[.iN(S/a`0efFH;hDb*T0>FS].J022&XC,/Q,BB2^1@!ZHM]l?*D4N3S`5#Kg[Y%8RA_X6udPE.-sk
%\e@ZEV!%IlY,H+=REV'R!KH8U=YjBq6HV^+d;K2A.u_+q[LIYO/:TH))0]>prP3eL0t[lpg<S=je2H;B)V_h*%/e@*R\0d@XGi5n
%7e&q!pIs"HHA$mojOJA-bf"5).+:U>'&4'aeSST"nA)?+n#J7@.H1]4Q=)A6#h)mt(X:m6@@NHAE?'/0o=^SkX]A0Vi'p_aak&3p
%p0B'NDUT3Y0LgN-q1jDoB_iN<BL4\B8nPsj*j]^Je4IX<@]@d2;K;W$jju;d3/a"%<-:h'@betU;4LM8P0O?P!I9ieUD&N;WJOj:
%F[#=rN?)\"-]YUF/nnl'7g3:3g%ii=Nf!k^*3`HV($)Z@M'I:AB?X$qNpR>iG<4qeilfIf^7:=@/*n*RmVlD_##SU8_`_j!G=ET:
%?D]N6j)p8kM3'\:.0j8Ph%GM'j,'(EhJdFA+F^kt%<$2X9,jtk0XbH^.qptuK[`O3dVq0[!WGLM$jThL;R?mEGdd7(c5<.A,p%9I
%E;GTfVVU`q,J.s#]H]o?QjLq9Lp;YT>GU?+aMNdVZ1?5N_O33<K_A.UcJ7.;cD\SdY)sjYR)6[Rg1"9C_HE!BcY10'2tCu>;)n--
%849a0$?t8D#DPSn$3t,cP=c'W3!c>t/`.1pK>2tb.\.q,MNeFs)k(_jX3%Zb\K#X63t+V,$-*O(<9c8.33n7"E\J?I71-8alq.i7
%=?:iV%6lhb%h`r-HLM\$:"n798]@4J)*)pl)@IYJi1QG?C-9#Bd6Amihb\s#O!71!3\rb*[Z']e@Km(f<WYlXR)-<jS?ES`3%2!N
%G.#t#K6(rj"K2P_36/ok!Ss]jVj<_h>ap/>oIe8hVY+jsqTTK2=R.hcK-TW4oV^_+;TM;9P(Tqi)g61;AlYVRKC`EjSf.1Y,j9gr
%^82')1O![Rr88hm5i0B9#:G]Op3#$YK+j.IdQI<@8ZK1[ja6+pf3R[CIZ43_>UVj`3s`\pWoZe&4V<@rN*Ml[$,X6n)XC0\5r]9_
%-L#CB_9!KelKc_+:1>X>-dW1:d@skFC^@lY]IJ3;nUn0!_e8W"gma:'b8YbH5eA7fS<6U7I6Nb;HfbQG,+1LN`Xg@2c39#Ak6FN8
%L[qt:#Bq_`F(s_@7gllP#!Y*3IZ6%/V$G%M7;Atk%utd)l.e5ii.Q,IAN&bg#lug)hrqn5fbH#9?g5D3,_2P*Y_,#TbQ<dVq8!*k
%OYUar&!#a@LSFBm4#4VS2<k%sB[PQ/%6qA_?<u6fr87i#Z'JqD%urU]iNg`>:(#*4=&o(42)TQ6BDg\Ze@@FGIW/(t`HXi_:(e^f
%Nn0])at\'#keXOL/L3L9d"?tT+Ha7=dt:km`'b-=/`*&gK53:%GN/p8Dq=a#or/(dB7=fJ4o2\.&&*KZB*6a]SJn*&4YiJ$L"p,C
%BCt-K@OsHj*h36s7j_K9#:FF;7=%<3mW)rtlLa"@8Kln^%h=P`2,@G&E562qKQh`]?u[*9lLa!oVfG/P%6_460jXH&4ZJO/dP_M[
%E:V("@JEM,Ni?fIj$jPS!+<(Q%F#h.1i_T8*upjuOh\^CNY\(-K-)(IJ>)!6.mH!2jJn>.Orp3i_rNr5n:T3K,Bm&K#M58F<dsQ2
%dLAE#SM]L*G(+BC:?bNP`Xbi@\]()rPogtjTEL"h&'itLd)m4j3-Q6OW4DMP474Xrg<'p9@N/f]TD?=.R'73Ln:P4ARB*RR#=l+<
%C"`m1Gp6)+:(WG^MHIto&<;H^6(2gA#ZokWhZcA+6mI4:GJhh.bdCVW^`k`J+[XqS+P`+@@rZ,aiM8f?Z)e)e=Jf*F2[&*4lVnqh
%:(U0Hd8J^k&FKOg#.nsgKNISU]$c5_`=19+4#m.]jCi[VE58>.Qba-Vj?+"4c@jpuCM:.4K,:^B&"OP"2s&S]H,1q;+V.aqlu3Qm
%+9g(Sa*Y]1Sq1"\Il'c:@RdN,Z_AUYId*.0*:X`?gNGc"7qN)F3YNSp]:Q\4`Wser@rBB;q7p-aTR?Dg+#o\kIAkErc3ad3T??rE
%dA#AYD>:mspSJ=N%NKWr2brRQi3ZpO>'-SC:X$)b.iW`uJbdRqI`HC,S#&2,Q@CuG7KuUG>k5@Jl>KRBd8+%PME1uHDJdUd'UThX
%,i%,5b=^9dQX[<[N8Af6DD9kF^\'_i@Z;.d)FEJ&04c#NS0#M$0YPGr0E$*\q",.ti5ida,-@7?*0phR6o-<3;C99Nl!3/Ng`W4F
%'f`8M<[)L#Fil1sc33Q;9c_q*'0*lo\tc\gJHOW1/YJ(0S4,AfR7]7K3)/[;=!DT?=@'u$"O=\Z_+NC[^sV)r+9Hb8LS5.h38Tu:
%Q^nJR[&HS3m8W"k;;gCP.W?0r!#=]si&$"U;M^MDSCK`2F_t1t"CC"[Fs_0/pjcqK1P$3LEb.lH:*rMp89Z7s)U_<3R#/W#Wl\/5
%:'AiR,ILDs![f*q=M-L)JTFb*d[kS*E)P$18D"K)1O00Hgj-\L2:-m>4Q)lRAGuOo#Fl`LZZr;;J<R-qg:-[(PP("p/K5aM`ZclE
%/]/jD#:N3O#7idtR(^5q!EYJ)Be']R>/\R,.hB."'c@FK%1bFjb,)mu^^6/SdJD&hcLMe][MTN7[>],i)\4o%6f!65_ZPpU_gT]i
%%CdW_/J-/9%62-7AdJnbE5&>BD]9-FC^9ObCjEh,EZu&MGeb?j^M03]*cSKJlZ,>pmRTuEL#%s`(>BUJd"(0!%.IXl"3tPB_R.dB
%e$*6i?DdgJA6O+g/E$:uc#)\ri8id+U"4r%S9[]]Kr),+1WbJOf3,oBZC'CNZ@KQlYu538k;sg:@^(C3lOQJ[\?^Xk8r$6IZ%/Ui
%8@C6T^`E0l.VC$bA>\E4N<:.`\8YYPUB!ec0su=#!R=$EQK(R<Nn8KNm-bYH:+7:UQ3*SY<5kC0S1WM3W`+GS"f:Kg$?5i6hR75E
%Lr>H)7!,jOi3[WY0n,;gSGfkJM<"Xamj40XAe&c2"@RbE#Is%D=&orQSqC=?[j9n=S4_ZDfgW#l%E?ah%WKj<1@JVg!D`&QDe:.Q
%^u>9T\o2P<6RXMMDWUqs:f5Va(2tV,kt\cF$b1qgbJXMN3l/ts!EW`7l]RM<*6f7/2BHfAqRHi1k5bf;T^:e[,&k1PK@PS[*+,S,
%HU@p2mjD9WKN_g3R6'P"i4'Zj,rRmDk^aM;nRF]>e;p]rm6';FcX,TK%lg#CNN;Z$.l=cAJ9,QmFE5P+%U!F5_-d:V_AH402_<l\
%'(KgJ!@KYBbo&PM3"tM]AR_eni!?//+\HAJB<4^L&"d"?$-6*>9Brs(f"AU\"3tiuET%?93:0Q($WeBgepe<KlV-5?X\$-?Acd2,
%Vuo'o30X>4`7LEm@;.,Cj+[l1;'E77F=(s7BtE2/B*(S]ZMJF*^sUB=Yg*B38(dP*1D;`F4q\*E-?*Q8d]Db.i-Zs?N=?O\Uf-r"
%lV-4R@WLfF-?)FZ8-ZD/!f)R[GtquRa#J'S^VL&u4LH6Y)H<'ig6,M]E25.4Cq;?g^bn=b38B5pSG@O8UcT=$@mOkUoIO,s7GY+X
%6Np6>2o`("JNH??6XHb-RGc'?BK&oK$?0.m038Hlr_[*BW5+g*<t)CBCqF?l:T"9gc:CjB<8d,$@*q]s'cG_0GCp7X3s1)D<8cuI
%atDmWi39b-/`hou*,&PrTrh;Ploi(e;LroYkne07^_+G!\Wu!D!_8uob0<<X%TZG0[``PbJ[:(]/NT5`[keorpkB-G'jrT-mSr+8
%3S)G-3YaX?aRnmV'f`5?PfgeO^fb!`SZ4^g38Pi0kPIpWNn:*Zf=A[?kZZcUi<"e-ld0`+E,>Uke@EA?WOC#UhuNe:\\Yekd?V^n
%]Q/R=Lbu24i(-2tQ3`*M*%g<ObuEU<#Mm:m;h6_\?hq?o$686U<S0!V,HEtk)S\(Zo:[J67,S>_k]GGgJ`ENTo'&R##i7&VDG9!H
%aji,u:k=f4KCfSC$Ch+cfXkcmJO=r&-L+RgoIE"9\>+tOD*O?r(V%&GY,tseN:AU$X)iieKb];G/o[s.ID6dSb9LYT4KPl?UOi)d
%)`DY)LThV=2K4+/N/u6hI`M24([U\.I,I\dV!kkQ"*_u$@r7+nJSU$]+$JWdLHZ-C)j,Pt.7&]BoLK54bX1-2dHJB6<)+Wt%3IPV
%F6Vq2j9'$U8@=$dU''%%R1j,K#L:ku)*DO4W7L(fpqZ?Il)4""J)bq7XAAts^Z>Qq.1+=In:<t!a_3a1^e%qOg;FFB3;T,Ijkp5R
%R$At:SIaNK`02bp31>CF$p&?$,=;-W%NNrh7.OPCE*T@kp72\`/PLWMd"1d#/1p(-i-5GXf0KYE4:IlQgsCW$6U[4<TEAgD^Lk7/
%J\s>])2h][E;8rKf^3M5`!2UQg=a8m##lM6)`DXlPJLb5J]"Zlo!-IEm^TMY_nn2K31?o.`mi!4:2J64O'uW&a4iWFl#nt(a3F!C
%9kS;#GRnACh6;G4\>t`,7)fFk(6Wu[aM8CC#9VOT!_:0PLPZD/8L[:qUB3q>UZJj<JKlh5FTe6A]\-%n>9\#oJN:Z6#941GW%/<:
%0Yg4K_3kHHl3i0q5m#?3s6<Yqn7I#qCam/hm@>sK^k%?@D80KZGH>T$IUrLLMiNWKJ330?:9*NG!?>WnbY.4(i375um^FJB0,.9u
%npdETM[iR]s(9U\f"d%=)pU=OE/jf8Fo8$bmH!0_3s.Y3QMVWp;W5lbqE#?fm#s6p4tK.W&q@f3?WPm!mW$M$*Fo%;Q5,>52Pf4V
%-lMOtrC0l-c4[RKI^>H,1nF7X/P8ms8\`r1JDHO`)q)q+n3Qm[:U<c[hr+H`9t=j5mcBUan/Jc[%P3g7mi-.S4<saC_F77sPC6Ne
%FF90u,CcfF1TG@K>,J_`IH.FIQl/TT"R2-hFCtA]1K-`$l'i-tJ-OI]>%i_.RD'V3(#)@Q%AtkhG/j.0SDn[Djr62$-,c)1)u7b$
%mQ-PZ@qC[CV>*NU!Z<)Ni#<X(3gekFId^mW_r189&It[VVtWYsabR63pVsA'i0bJDhO(so5!$/3Zqb3Oh+[3q^a[t*412QW[Uefs
%WP-^'Nu6C'BHd90T_;uX*"-pJgtl^V:gfB3USW5dpK&aPog5`Xg5pZV9O^SBjn=EqL&JPjp;WF&nl?^72kq0;Gj)fsc*l0T&:62q
%*N\mh&I!,9!QlG$hSB)hRCCDs"TOU01RPk4qj6;DAoFFA-qrGPHQuXt?mk8+m7hsJ]N/6ODld=DLdCEfKhd$?YYogXV5=p>V=qoc
%8=LXDhJ?l$m%0WYd7eC=W4gTqTZQ-cVW6+Gate$b'1GA75j.iqFhpWIi:_m/_N=V[gRCZ1c!f`-"uO'p#oqaWB[Otl%C`f5cp"Se
%hSel2o7PeegkOK!egH]>8RrfDA+uiXP`/FeAbW'9(=GhCc*(5s=in?kK!>qs6gbC+>jL!&\MnTJ6M;q?\"h3"'!MhU2jk/'/1Y_L
%UA>Gc:@:h8!#ZSWEc7isHs=_+'c[Z5\$qrlcD\FEP([f5T_;taM=MH"[5Xfdh"u#%p1>G$`W)L^)kG0rftm%"JL\+C_oh@@(n>bf
%kOtc+WXL(-[l6L:!9W55G/R%j9'm'PM5]s1g7'3=<Ou%SUOd"/KA)fGO!U>OHS[=1X%d7#L4.B1S.2e`XaZFL)RDBl"gSP[AoG^a
%[p2%*p1B^WQ_;Xjc-.u4I2cp>30-ZphPn3I?kPUAeD<g<@?pL9[5VJ5h;+i)HQ/oO<bcOST<oLpeD;a5!AZR3]nm@O/%AH'j3<D[
%DlLF$oJ8s!W4gR^oRf'GhIn4_:abu!BoD@,@S'9%Bd:()hE[X]&F%-iK]g&9#dY.j';]>6IOFhYM_9XQfGfpcDK`B1p*Qr_l@D^s
%NKs^<15NU]R.CIHAn#]0Tt'#]AoEYV`4@^Ne'Useg7=YFahO#6$tK!#W&K@+E_q*=,fbT)%C\:V`^h6kgtl"bY^a+:hGf?eX2DH\
%W=42u/%7H@#XWF-]pWi`?!9:u2s*;jLI(@QCiSXT)7_\'4iJD#gmdmM"#\05d@q>H)ffjl=>uCDou]b2Z?(BMp$U]@E-uUN*)rT^
%-u?E,R?s:SN#T5bbOe?Nd(-h]^:Td2\oN.5iaHLN[l5>[i`9f4\>?cReV;cs"rA.E3jlGOW-qjK^$-P=DL+*;Hde9gG($:^AkkQh
%=$*nch(Sa!SbetW'Wt!I\jFK<JZ8sCOML`0-:F+/?XXl`)1!fh,D-P`S00$^/8IZoilQ0.:gD2O$sV/a8579[_3l-Ba.83EFVK(/
%/HSD`nmE<.fQi<AQ=(J=6?b]Y&lJCR@)bb&6o4Fs5^:B8k(#Qp7+4D!aJ@eACnDlX/@jrRA++Qrl2u`+\rh?h\kr5Wg%C?<aRqph
%_s:?+JC;M=!61\+%E165TLJCX?`1LiOO"]s2*a*$/)t&I&mg0GZtGtVa64b2(7X\A<-=*CVjq[=Z!EHq*h.Mn\C&bh4M#_<BNO,n
%?mhVY=Qp-%n^pB-K7rk3a1`]*GHbgNF>$B7;^gt]SX*_8<G/Wilr_Vp6kAjB_WSm_<U_2`/<mk">#H?QPjgtQ2Lp&'PC%E!."uSo
%#5m+Le;e8*etY\.8jIE:"&U;k`r_1s_0n6jGQE)b4of`3/s*%H<LWDKRT'+u<2BuN;UL[+?rTRS(RK;%l_PEufE5q%YsqCF/e2QO
%h2MoKaJ.'Y<+(=ZG#0u$4.>)Yne'AM,V,<i$Hn<W<N?Ili>F,rhJ=Y.Gh06)V\Vch=X<`3UDs8";?3gVG#Lg;b^&UM"Iq4s=c(2)
%8qpS`gM0.[@'nf)/8j4O$fsBVaORC5X$m%UCq[e`GThlmUB1M(3Wca3?r7AXZ]Vs9Qr<"p\L6BM(FGteUsG*E!S"uS15mnMd&94p
%Y,EZ"*!X#3lJ<$ob#ssm=JhY;Lf!kdF57(je_QcM'!J%KR`uE:5a"eh$'/qt3\)d5=&3\meV"*%/;jk^!q.';ADn%I?l7k$J>?s[
%>C`RNL.sp&')1Df1):4DeolsD)E\u;=H!$1>TE8?XIZ-<c<J8\AGX4I7a3@6>?R4b:6NPhEiLABO"K8r5nC5RDpWK_Nb%]$R^J5!
%6sG6=*#2cW:oGeH!sdind1>=KdS?:rirj8KbUuN1pPtQdGYV:+-b\#6ple)RaNP+K7?U%HXH&c12n22aU=E><[?+B2C(!oG8Cu81
%jaa@q61g(8Wh2gW'_"Dmc6&hmV3%DjKQ'Bk:&rp!?'N0a6V*9*3($]sE;_O]8=_qnXf0,P#`n"'`V`HC5\?g%GERCXKHn&5(bFZ-
%aI0TL4&@%:S@k(CUYm7*>)[$U)71M86t6Kl$RIfV1(b-?!#7eKQLD?kC^*0iRNp`(4on7KBOMf&>KDR//%5*ZA.2hf']qh_2mK6c
%c5k@"E\G*4XLQ0C+naX2bVquZ"*]'4Wh:h89!E],WpON8PXo8V,KK6WJr&Y#jIX!tgtWB87IJ2E]`D=lA=*ZH&1`FP@A3s,6$GM&
%B^(%6kn,3NRYfbNb`X/@m"4lL^bX0.%[%,3pBTd;!7f)qP/WahG:=aA\XQ,>6a2/J)CVP-Vb5pbAf5*Rk5re)j'm9ojFffA,U..E
%8Zt+/)+337Er^[#8ip[4Glh1Xk0S*h;Lk3\%FQJ1)p`*J.d1?0D)edMcPu"!2rI"qJjO#:+uKBQTe:teL(tMbboZ+,PZ-)?i#/Wm
%KT$Oi`d=e0,EPl#<bf?feMWPV$07s-e(PSO7EaGi4?8Y(F.'oi+1UJFqR,&VlY%`_:eX#@N@U-iRs8`B[LjX^RfEb'e4GaWZ17D9
%p3I!fE19aY-4hr-!;`K3++W$rm@+F^p]UD8(FV[aAF-OU.\X[D0EV,,6A^=K1B=Z$]GDc[h=EsS?@:1V2DUJKn2BMo(f1K/AAUYO
%\CX3ZBERQe0`aP%_eE?^6#$dIFdPM#/:)"N";<bWYD9kHMPZYKdNRiuG?-XZF)+sH@gnJ'Uo$"#n(9a^"RiS#\2thCUdiIR!:poq
%bKsLuC^8BG6*sHQMS^XGA9a)YcfR9V1e3GX5f.D[]JZEP9@GN_A%b@YUK06ja<$CtEL(Ts8?\QYbec`*aE-74'=`1Y<*3.7,]:jM
%EuN?4rD^Ju*K@aUFYc$oP6scq*Et3TPQ0G&I_T=X9hSlgYr1e&b!cuW3003!Nbsetj[AX](1rlCe"'/U'Y9b[Ai<`?<pXs[8k"3%
%"XiZ1e^dh:Q%74(OJj\0BpX0i)7l3)i^/dT>Jm"'4%!QqW4K!#+ok;I)%TN#2>U/1gcPV?&(>b):cG16%o94tAs27ccXi/hCpkU,
%WLCG82bck&O/OM=L1cH^Zh_2/D`*7hE4'IC5A4RC3;*it=MrkO=cV)o9bP?5A)maMLZbqQC#@8Vk-",7MJg4W7+PK#b88ED7*F#H
%"Sn28:_ed+SqL:aB'fAi%^Z^a[V[<`.H+%,`G5j6Z##!/^dW_.mK1Y'f$S/c<+sNGi$JbD@AXrH\-IP@H.JWF1d4tpmNE&LVTT3:
%kMS@E(P7!b4RF1R*AOFU?lrt83FT#i^4mY"mU?:eJnGk%r9jNamK.*nBX9[X$,5V4X<#+qfr@Xm#AtjiEhB?N=6QNW&>?8niMC&u
%%&G:$[W*)fZDg^:cjhWYL-eRD(Yq3A`W[)"G+kVc!H&ZP@oKL1HIAD#iR=s3\E+K#!Ari;eA-[09Raf>htcNKoPKE9#Me]Vk`u;1
%a[&"GUu*i:!K]'VSucJNlM9^MdIe2"Gg/.D&]#RLR^Ecn:*kc<,:__H2FCnE.e'82^b-W9TBTTHNB1AL[CO4o0V$c?*R5\3Y-8X^
%"()_C$W_'`\kD?#k_9nmE`@i'\'4%F[K2067]kin4(^HT8:QUUp9H9>G`?.r-7*uWRkPWqo@['IYptBf5]6\143BLh)86eo."PZp
%[(7@!//)LbR8?.:K#Uh,j5n?/];Y>;Wa6)FNEuM0hG>O@hc24/C_!n1FlkMRRToYhn+.hW\fZju4rf/D(2+Y]Lkn#*i-\ud=I9=/
%8EM6-0I$d,dh#T<cCgUJ]BWMt0730=,fan8$,=rJs.Nb07]cu)`\eur:M`kUc7VNU,GePcf%+NZ7Y0c3UDqZqOQ-370@"Qua@fO,
%ZbZjHWfa>b$#jEDB&#L2r,N8_P@pa(PXVM%*=m<),c'D+UjWQpG?=+G+QdG0X96?a,4-Db$JB`7r^=kKLL&gfGTP4)!o0O$&U"ok
%MZFru3au6R_"Rm2PAI8)-e^EQdW%j5WC[A5fFPp@Kq[=GE+.JZXkl#4,?HR$649tHm;brg'"gs#6T5'`!\94Q%c!*s!/P&p_$L7b
%V%C;40W&XO@=juLd]'NG#nd>2C=;(POs,f`LH&r);b]eVkCYU5JF.k237$kkGZ.g:V,?RqClnk+A#41_5j'HN;M&]hFH@sbCs+XZ
%oTqil]0("K6,q)jjKAd'6IV*&^:$e@^#%TQ6=7u0#cuS_qC'\VFc8J*!=TUeSR6[2l1B_640#%b<e?8k*.p4.FOX_u_7iBM"',ek
%ik:j`i`1^r6?`q;R'sNq4S_9^fYW8N`,3aQU\@qV1QW#R!(76D#A_D]"bU2E37""!i.KIY</DM\Xg"#`%n>,BBN(Jf"ajl9gdN.R
%dtFkd>9C0DLbK=1G"KfKhm@J<AF2r.b6e/t#jBroKJgapDK!&.(#;B/M9N-@Gq!_=1A5lCR;L'IV#8App5)(HGgla`!(,Q[eA*:]
%&D+CsJOubA?0jieSKuC/'[Eg5#$PoYdl`)^pf+ea=`FsmW2L9S@%p,A\0p8<$*gnVR\/?"\mL9815rp/GSd$+N:h_gL[C%m_F74#
%GZ4S;e8C:6c0-LCnE&NGOB^gJk'bi9><ti_=VD+*8[]1^i&m"WLi)G/0dRA0*r)'n<ZQflq9nnl,fI^uV3e\5od2pqiM)0WNMR5S
%KaA)oBZboa'UWUhlJ2g(U0uO#NK)6:$/kB,-eYicU"f^$eS>E_'tP??[),7&]$"K`Gk#`pZmCVH;OIhj49bWkGr\G!:#>#s=S*6+
%[]OKq_._7"h'n#P&4VDi1TP.O_g2oi"`SB:^6+OLmmJ*@%G\G8;NCq7LJk2jE%do'(CM,3G<h`K*Q=,ipf/`-\lB_:0e#YaRr/"P
%A7JqLE8]KFHimjCaF_@N!#%K1-\jAj*JEq\M^6Zjkcn)UMDL7fVHKD]9u1:)_2>l=?4*Bj/]`_F3:(b(f^e&p#@JhYD,#=KpPVYh
%lB#CtM&;@-k-rc_dR[E2$p.@.l.h;&rs9!S,<Rp/G/r*gpU$T94=Qak>_'ajb?p%?-ZdVH^nq6@Ji^G$p\<?k0g4C]U.!];MI^.e
%csqu43u^orW._3>.[qq2Ws[rJ\5&.L2o#qsM[eO[XP*^mY=K[)ql.LG"3rW#M)_EgBO6p7&l0Ds*NVqDTG'i*0RH,9&LbQuON%9[
%73ht*:=^gsOnA^7KIX,U9X<9E>6$6`[i-j6`J'I(XKjOL<5QJRgsmf]/-/K]jJMZ9`KmOrI=\>PXl(jr>f+C'!jedqW"!1k0s_<R
%/c"Y&>`)Q9Wd,Z_W:`sU--uaeHdbN1;<TL'%[f.J-U\O"9]864,,&%`;U1T@KNi$:KI\ks.H\+1+GK"sA03U=#`^ZN#i[SZ#Vf0Q
%JL,uub=8@V+VV-U-?78_?mUMcR;j;$PtZj(>"S+L0H:7[Z:?0j$"Mo!B$r8],rh$G9.%UsJbJ6VStPr13Jm@#%r$V:$"o,Hp&Lo+
%:.)s=ZZolP$i)0&l_q?N_Sk+MY/)g'f:VV_>s/lr$GuL)Fm"UpAqY;`8S`'?qN>mS$-!o9U95.9*OaJe/^jm^\uP]_Kg#QJeTKl=
%:;TU=R%m5#*SfAW^u;4`D1lta7(5]]KM0SpNA*+0&/KU<eHC8\28'Z4!WmB2@"$Hnj1Q#67`=iD(ic1$R'hAr?mlloC:#Z8SedIq
%\tE^LH@8E)"^K=dVDBFe#>u9>Z'Z]M9nqc";Y;aW]00#r&Y&h6i\XK^@@]Au!a#bm<7DT,:Id?n'S8g0YRI)%W,&12KP$5IY+*RY
%Mqi?'Gqm$'2Vo-)DO)QCFOM=NS,;6:EL^tYP$!$PU'=p>H^c9Ecjh>%Kb9garcTE8:"HaYs&7`+Ysb&oJ]L4j,`9h:$2Gkk)sF4p
%e_lH+VSuPp.g)D0a*THo;PcDLWJa(agV8@R`&Z"RD"RB!#PCo5S,u#:L)Dq[]ZM533"`q,J/07u'QDq8R]-C9-j1n50(WIdkqg8:
%Vb+Qi?42=O9o5jo*ooKc!H\l+P!^.7>)l/nL"MP#?_f+T,b7G[L4dEF!o9e#<"7jLOe3i*"2PM>)osZBN2;\NKorfQ1co,l_8X-n
%OcOd]qe:bJ/+<VqC19_.5RP:X1l?R;hHLG1'$`IZnu_!@9R`'+Je&Wa<&2q1<buA\P4Ij>:V31;g\=mnQ9K2L8PV)BU';CW1T*W4
%@finq4([/&'il>u4YQtW>33Ai4NKW0a1FV\n%jW5f-)JX&?Z`\p9@5nPtc!B^a!ni]r$&FVDP$JRGS,D641kc3a9,r4Yo]nd!)f?
%#Sr1llQANK\?*`aMj\250G=ZB8><V(?C>s#JMI5%bb)c#o*Fo06)\)c$1ihN%]tnK_fp\%m\6<'3&SBG/'@r-RSnCn=kJ@;Z`]Z.
%0NK/D0cDdMETJLi0j0nP@N8at"/8Z`!Z5mpiF@rLDV9LT9945TN]G].jT[&=,I-Tg9%j9d/D`SL;sb)3QjY>M]e37?)8]g@%n.ID
%N@f:AL=.KB+>kKdSfe?L+#5(%<@saQk#JmHgf8<KUBA;IAKr(=;!c%1QY3:MOaLR8WKWcl<'ZO>%MH\!:b*e_Ini6H^`=&g?^bm:
%":_G2JhH*L\qUu:-b1no!L[RD+b=ltKsfRn9LhBD;#ol//uHk/8VJ'BYQDe$f:7A2ODs/5N=t(m8>m&=jlfRn4^cT?0*r]4YJM;'
%JI("%2R+'S+Y,R%]uMb0lq,-SVW0Ls?nE^p2@,g3&g7QjQ(/Su%oEAcBkCM9a!HjN1,uT[cVUB^1WUW9=)LgTRNrAVqW#p+f/\]"
%H/((#="EMSUb6?(KdE[LAs+H"^`eOQZ6NosLP_-FYImj"D/(@6bhP*9TjVsUq1=GJTiC3k^Bcb/Us(cNCQW#>&j2tdDZp3&pVsWo
%Pd\s>0#61-O@q1*99:CG=\MQELi3R.&6Ih9l)RM%eqoR.j-a/&&/]/sNOV+XKZ$,m]rRk@&[#e;\cVYeJZKjAYS<S)<W6Z&GgN"H
%Wt0&ncmmuENliB8ojWT!qWZEr'buLVpg3a-pd[T2Nq%hKO=fWQ=F=.K#mh:gFpQF0JL";s<[HBd#m2-JP,M$BM#)?F_K-u9D^EF<
%##kTHd*JQ[fcZBL*DrDI[1[lf.R+f2Z9=<8i;Gp+)Yu'_ZmceP>Z.;n*Pe0'anG#<P?Gd*;#MXeAh#B1#3\ur5S?RJI@rP@,_`0/
%8kT%r-ab.YHSusR$?D.!_;e#25%:?+\bRK-Lb?(L77-Y;5]iJjdO3,(+WH(GImuWT,4?3Y,0uuf/5lJXq!q8?bnL7"6?nNP9hb4F
%ku;%=L0j7(W#E]H1]:2qhCXdsVC=BcBS2B-op/[Te>E6/B-nJ6KL60%N!^1Ml+jZHHBYmMMlC0=5`U+"D$]b8JsfjF0jn#k;S$:]
%IGomp=ueteLM*4Jrcj.`k+Ki<s"*WC]Dr'fGRSsMD*3h49e01f7EJA7R')m5q4'1`ifag;f+*hG7Zk_7U$E$T+&c+#K@;nB,FqB]
%Jr_A^[*)rr:nJop;aOuB7M]6,ijQjkA#o_eAXU]8-#/!r4Ri+Jf;l"hUTilQiX/bRA(\mpl;NL\\sfc6T)b)KH94+UJncTM$O/EG
%<k*Zo;^4^DNa676i,8Ce3l^)WO^uO\35EX*Ao?b(,3\]@q7)0i(3#`cTL2d(SO3Ohoe>lpmKQ'FX.otbF8CWY245g%'#LA&3XE&)
%Kf;nM5Y94)?k1R,=iTCWKOFt$S7sgRL3Z,c/5A7J./$7e)T6VBY!Q1LA#;sfob[fH8Ho0t*6Ei_U?)Ak!\PG3'2#B9@$3,ufV4HY
%#8AIP-f.pjYm/-JJQITGH5N#7E[tfM`i.kg#$4Bsq3\7IJ4,ks3dkEu$)C`2En\<oNTZ]("_\!_N<>@j4%[fh2,u1]K@iin-pn.T
%!(e7Ynn3LUa&88gnVrdbMZelf/d]T#Iju)L-42;+L^N%">SWDN"uqMYTE%r(f8gpp+IOQm`B+9\U`*_2dU6b3[K\QdIuRonh+6NZ
%d<J$ZE#"PoN"&6c*@=)L!Es?52:..n.Jk3*Pm=E*X9>UiD@9qW>Q:es9FN!ERR)uHHU7"$(4-7=ENJV#.J8HkF-!"A:n0*Ij='[)
%"LP:(<a8/u)!/GoH6;?%S7p\J`Os5W;+ti;J&9NA=hN2Qrn4QF*QB;GpOX6GiWCBb`foCGa'jd=10u*mXb].3.LRpn8@lT@CQq_D
%m8OWp@pVaC0*6uqJl\%`:0dq13CDX@h$Igi@Ua:g@3rW=UFA>1:B@3U17ge[YIWbV8'\ZCrE(uq,#iEB=or06i0Y4B+5'CGO,S%g
%5aV,efs%qrg_"l52uj@;hsl^Bj@$eO/3Ce<JMT'#jf6pmRA#0nLoXl=K/\.'s+>X4kY;Yk:63W>A.i>hBV&!c/B?k'7A5Npij_FR
%1UD%O-,g!ne;H6So+Kom-Yd;lS8:,hA:j%^a<cQ\_C/)>4EUWr`9#%a.u7q3TRrP`B;l2@J[].=K%OmMCPURd5=<pTOFe@<.oJ)S
%YTBIoY/`W7P%%8cE8b(p!g?3%)'r'f\/Lal^%k4K'=*K.m`!6t=;4*M))'>Ed4*BLUZ2-n+SplgN\!LH<>:N#^Gk)N^%][`?':"G
%JK>LoS:2=)b-In'`4`\0g/s_*(bZAa<4nJ=+t7'uT]NVBKI6%K?(<o#DHT;l2_qurS&StNV\t31!n$!A[o>hf[D.BeeI!R"C(Y6[
%0`qCYMW*IpTV?DTdkE*\'CKCk&8'T<;EBE<Ga^4"6ntQl8neDU?Q^U#Mp_s)1;j!N&7S.YMGbV3!D`#O&33rS2aq0jUQ_dTORs7E
%L*T@]+O)Q[A9SC79?(X9=A*?99o/c_Gbmt;H&2D+/6+h$Pk%l[*JMb?J:Xsd`j2%j$rfNmaoI6dE9oqI^ktU+MK"Barh6Qg;#&0K
%T<5O'3WV/k5q\?FS!.u^`#@R8,04o4]nH1kBC]!=/-b+YL.7#X9Tlge&W=Bj+E-FG.DJ7c>k.rK.KKLiKFL4-(aEHa>KON*94I".
%JlkPki9<)7-q=r4cAEDNc'q&_jXTs/asR2lKf,ST_FUC@!DQ9;7jZe==Df]`O?'Mej9c40Lktroalep7MbKEt@s:=cAG*7iBP)Z)
%pbG-89BsN^2X6Y@Bp_`&A90&mZD%Sf>6),<j:SViVID!]RVcmJ<J:08SM&m?=NO$l&s[8B0(GeV%&L`n!9ao<H<A6TmcU[e@?<u#
%@6]@G_%WXC9S,M^n=ic&E'<IGI3X$qA7eVb"ooMUefn9d3j?c7L9PnJ4dQoOPo^J>(NjV@3/EBmD,IVG#n-dl'I%o0iV_C:9bG@A
%Z)jBe!e2B_"&L^Di7aTYDi+0C"LSfB1sB<"#R`mk5oX%1d)&S@Tdp+nVS[leiC`$b"ZfP5?WuIK_>$_-d\LX\JlK#J&Oo2i('ukg
%6f:5Y$7GHL]X3PXMhlBfj@,f#>C*dk@n$Y.1%OfBZLn6NgJi8$MFg/!PMkTp*C.ps?7tMH."TtZOo[ESWgjV_#;1h*\[T^3N0#6N
%L3:)?5k71a*.L^?!T]uj#RW%S,?P=q+.ea)o#aD:[Fbh<4G,@JSOa,[l=I[DBl6)s?.?_FMN.*/+auZiKS3Dte%p`q4G+A?]<q^C
%#UsO,JEbi(#eiE:($dgC8n)No-`80h%`X.6UUI])d;bs=l*.u_O/*>[CD"nqQNWW,H7>>__o?L$7oqH20aRnkU_];=Z]UBRQ2qB5
%R-LpGd!$a^:c`No\,e-=0i*=rLLM*2^f;>mE"!a?A\o/p'm'hM+i,&5^a:R&9Xa7EL(VpShB<10hA1k^%lu5NqXjO`Q*2OV&0RS]
%$[s\-mbsgK"aObbAlFtu;j=hCKHVk'9u1Y/;P+o34FKLmpJ`TL!foeN""jh?TgL70!/i`!OD&IM$J;q;*k[LU[3nolgk>k7VJd/`
%N*tR8BMQqW>BBWH:EOkaDM3`OT^=Wk9U)?OhD-.f[Y!E[kYHgH\i#Ai"KR'rQ^DGK1npM4Q<GII3u/#lirsR&Ft^'p#RlEo3.;(e
%QH3F-UoTs=BMg&X]*(je:Rq[rdBT=eK>[e&Je@aT7HtAV$PM.M@0$]82E[QbcIEbA!P>7sYmK(Bq#[*(.-ucQND"QO.CqgkMF_o"
%a];lXQNeR1lT"ra>,sOG-2eop#!6Lj>/<%,[MJ43qHO:kgQa<[lu2$1@3:Y\KNl&r]eShHqB%QQS;;%OB46E#?i_X`OYmJ7cMDcm
%FpYlS64]'Qo+L.?26rU.V+rk!jWUnIWi2\Z=<j+7CD.h);:6r8H%^`j&g@As@%7"b)ECl-(cQbKM&?E,&6O\e/41rp7j7*`%'CFV
%i8C\(7>iaNW.Z3\I%jr>'JQl/m'_M0+S_gBE.*W).d"F*LhN?D$W@,5[2=W4'S@<#%g',<26E#^5Xa.SUl'+KED%,p1A.On0l(>!
%C#\VJ3.7Y#NMI-4dE8&iK9u/##)g8O\Np<)(_6*b>3<A=!kd5sGI!^:p)lU:X[8QMClD-WOp=]9iRq%ufFa&Z'#LtjnhDGd/O^FZ
%KsIE)i7.gEi/jV=$aCB2[Dj's$a+^TcRL(9?JlB7+',nV<kRL6Z,<9U7+<J=[=,n&+l06T7HbU8VQ#VcgB=$<S%aF-gbJ8&Q\RLR
%4bE055i6umQE^i#!R5SKJeN_!/\i_'"Pmf<:<TCmeR\pll_#b\n3FALA!!*PZj4\<_(jIY4T26g6N^;TC5HL,iauR\#&7'ZGu2.d
%MZ_\]UQtIHJUDY5MhVtJ@q9\"G4bdSoRI;?0FKIajLeFMY48ffs3-Zn=<,El]^ip$BGhEFh$XYV"H.p'%s;c/MkMhdCVpsK(0Cl4
%NCRD\+_5JeZTo-D&ZlZ=k4Xf('@H2W(#'[nPZ&8A>DkiWOdJ[,%MO_9'L=LjX/&Y6=u1QM8=UZl,.,WLEHu<Y.pOkQN`E_p\.!u9
%5;JZRJ5#$LWKK6^Bbk\9OG_8DQ,[dF6eoU/j\cY7?99G1Wh5Wj5\!FlS0V5T?TK)m&Ibi9/3t#UTIgP!@T%LXd>=$]n)VGuW^+ud
%;X<jJ+qN*^Kr>G:\8"2e[#gs2+=2bs#qgrl9TAm]IP,dL'Bb>6DSd[_>(mY8U'i6R/K&.dA5IJ#Q5U?8)"'dbU`X,UZBrfd2-;aC
%0hO<11pWm],"Nu0:Vq-R80eI0Q3O#qWc\;@''Y)A0!5q2Ds%g+%p*PP,9XGBhrCDg,WoR@j[PqD*]+n=/QE,\\SR7;P0m-^0HPe,
%4&*pD@O=sf\fc\BC,Wn37)fZo$[j4tBD2g<&mG.pEp-'V95=\nOcRo:BpI'Y)!BhI'B#WX*u(5Gp`g6$SeY^3FAc)T#d@m':Er<#
%(!r<q50>)nAThEsKN<aS+%0FHK`N.],itl3[TMAe1PUVpY+Qo"5g5PKP,c=%En(]iGf7X^$U^uo2(WYdo-bu@N&dsG=C]SG1BRD"
%$3D(R=I%"-#H-MBbD;p<N27;8q0#e9e6%^LMK3%!H\i\\Jr."$q?(?Dn`*aJ(H's'C$FLM?6VUfq[GTuIukpH=KcNLend!Z".WhX
%RH)63_c3D9Uprs)8@9b]0a\hdG#`$B*'1\0O_Vk":.X<%A\NT5l\ITGpf#s'".Tp]3X71V<.q;BE\\l;;POVMD\o39LBfLY;C2dL
%6,VCe00Wl:Ld?A75E-ro^^8/V^^]S'T_X<J0,ZOUn8#+p8YD*/cpk>+RBqeq;S9nE1%9M+cgAn>)641I4GnaY/Ws.,]/r9f5pA>F
%;6s6pVc["tdd\3!P8);3;ES)l+A3A04Rh7!@$Ye(_Qd]U<[]mi@;^Z1el6FS/6f6lg+cr'apSo`QpntlWKIt?fU)K5,KIA3<D&Ks
%6A8QIX.V;Sd']*$#t$+,,N(/:dLQKbjRbtd%E#qXfY1l!K&/_be]A:/M+LIBI\[=BR;GjjdrVXtEhnn_`I]OmkTAGb-qQ\:SV]:c
%J7?T]W0e$!o2`Z.]8e#uVQAl-2f:qG!+@K5dE$BpMl7<UH=AQi-b*t\%3T>)`Lo\$RIEZGZmI-!DBM)$,rL((i_&0n-t;8*0o)Ca
%3Gnpm$T#_o[R1$W9Y;M5)l`]YA0YN'TpXg:VhB1JaCY+[(10&C9VYm&$;q'I"/7;"Fnf#4**UIOP99AU?lNTk,*:;u+=d,;oT[0\
%Q(6AJ_>Y(P(R-uf(q)_XHogU(So+G92T^RSoDt%<0u-><gWJd6;rV587R`f3onn8IC63FG;5FprWI\3+Um%r`&WRI:-s%+K1?-BM
%TgCdr*8l(=6W0LeM1!ua"IX#_F(!Ef-R]C0#]$/:*7/q@eqKgE`DX$uA=G\FM*L)KKc(P<#NDP<9RR+GN>:b8A/1kFD+[bb-:o&/
%KU'`n4OS3MoDh5h7MH*+r"RpoSWJSg.?E+-n67S!"^dP_C86o!>ZuuU7gU64hBHi2q5IA36Ko=P27sLZ&VgOE<1mCG#c=FC8lD#J
%LD9e"EQTD$Aff0^fn@N'!_:$jbPB[sOi#]mSL,s<r=P#sNXG!F'rTac`m/6T,f=oK=+POf2Fg/kocADd"j,C`$qf.kOI!uW0^D!'
%5?LBH0(hhHKl`8T2_[Q;,Iun=AO=0`andT5$WOO!h_jD36-t[lS")\o(:5>T:<8oXU*<ZBn!sTW-rr9:R9_=#*kKQWffK-aXr#Y=
%O\SG>hDA"FP)^[pJmg_1A#9SS`)$P6ISIX3-$$F'6ISCHJ$ge2AX%iI(A2DNGp'^%&pe@c)G!bC.&*.s9?ohDO9/gKZo@K1=<4?Q
%*[L_4Cm[IWkfVhGK1X_E/[ALkTj`Wa5*#!>=N*VL#bX+T,,8\@&uJ@-591%a*TPrg,lutgMaD#:pfI[E)>\'3E>b>`_6&De/<ihU
%ip\1VTDgX_$:]ku,N.>c>qmqHWK3$]qUN:>H1QnZWe:]30B&"cQ<Po%XAPrFSs3q3nLL._/b]s^H]=g)L]`;7%`;V%:nE1h8[X+r
%Na[#Bb(u9_8-XT'Fi,GCRfh`B9Ci8j\WpA[1r.:DE[tX]Q-<AD1pG-28l-g$5oTM0]2#+p4A1Y.B#Q'PfK"dP].tsk5,akLHijg*
%-Xg<V$C:r0I][Od5K+n1Wh@'.&kBBanf?2>hZ&ZYC13]D":%dXA<"I2p9Id[%OrIO$ER>qRQGLdR%Yadbe3n"`p,q9h%`=+7$6E^
%5fk9i^\B7j<6T#`Yq*AN*Nc_Yp**8j`ImHK[W.d/8A0WL4\;o''QP'^kin4:,"i\8#9Fa2CiYK0>)?+=n)EO$+IQl8&I"X;q,ID2
%,2"eI2dV.V9adr28$'1<n5E;C'/;LhJjO!M%%qgdKXtOOD"L:ANhn^)3,Z(i-FpVhlt<%aCW17jnMWFr^gZ2iFC5fE)i1[O[\7Xd
%$A+4Lb@eJXX85cO0nco3!/ucO#90+5K;]7j@]7.G-\EKjPGJtjO^TW<'bVW\9n]K[qKiRk>S%T`N$S-/HC*2OUT*TEQRa+qIcNpE
%dOBRWM7gGmWCFPX`_,MfT*F=J*<DRQM<0].5$<^[@d=0==SQ*_!S,M`BuN(60g-H!s%VV)EP15<6>0#UXjf7$<cD9g,'qMH<$s@B
%8Sagb8hc>rI+`lrcO#i1,()\\1fEcc<a\P"!mq/r20i$b0MqU#g'bPN<2gEQ2is*/'durP"e`#n&^NK=h&4:BXNr;J\<mDtZ!dtH
%ZBptZ#/uFh-RN+*_c[Vl2ir2_7!m*^,P2II\>5Wabl>Kk`*-E#\g7#c7-t>&*C2(3?<26V7N1Sb_I"kYE/:5gpN4Tc@a/U3%4$lV
%)HPE^iX:(jaJ]:ok6dEm.iLZf@DT5r75/b9RB^BOAqmmZKH#Y0*K`^jAks>e@Acl=Fb:iZ?0oYd(;`NM%Vne=cqoTUcnW/\$cKBC
%HU(461B!0/,B-;G%F2:"GFCH8XH(9!!cce;JSocW3JL/s8a%"Zb_IEA&nXtj<U\Z:R'*^2cq'KC^-A6L&ip%%"8Z`5n4PS5njs]@
%dERKYJZXS<@@;sm5NE))Z@u25$?qOl,l6GNeg!.$N#2j='hUBMMDA:N-,U9;ja7J,N>uCl(QpZ4'iP9pAfdV?Mc2;O)CK+C,k<5=
%/8<pl\i2.d1;_Zq=UgYdPj%QE!(WsNH_ar&p!&ZCH9YsR=!L"6ZFD'3JV9p$>D'=NIP%L;)uTcF"8<fSVpPg5*B%tPq6`[e]rD<^
%Y+YZf:kkcW-o')Y&I_TM.;5[TXBZDFjp*UAKikJajVsF#Q.;=^g*!jT'O!oU1)T\4&B'4&A'SdtJ((q`=%UlC!#cGgog5c8[=HtU
%;Tup3n2Pq],LX9o,h/uEAZaI<n1I-?#.\6=e3Na/!XUufVi>u%F<r[ZM.B%[_rOe$P'Gq9K8sF[S<?gTA4^b<R@DaL3MV3J'oN4H
%I00&XQ.D6l=JsNBi_@2t/QOA*'ILiC<th>EP(r<bj@cJ\#0NZ$1?N9[WF3JbiqH'Hh*C3@?-0tsDgZXPW\CsKkepuQVA&Yd'&o%X
%+N[r0[D!../23Qp6;E-s/Ju3]QZWa1,FH?!R"fKAdb0KO%Gk'[ZOrmpm"l(cdgC8Y&rc$MK<hJ.1QjH`fXSrd27O?+d4a^K>)4(n
%+L8PU0uhf19,h;3mLc)tUlnWtVML+:7;%-J"E[$T&l3*i<IS\ll&?[3"aXb<SBC\'bCQV==HTZ#Ys'=h?lkKi'a.Hi(n@8;?qECb
%ktKR6P.!]m,5l4R(O!^WE@FHMAH$&;>HAD6Z3IR8H7Ls'"giema$uAu=ORC*f8PutWItiPV)4?Vc\$c[T2a7<ObhW8V,(Cf;OPFI
%%fM$efml!m^$r5H?9ee'1-<A5k^8IP+Pm8I!kLa::8?p_X^pB(rBc"uPkC!^?r<:D80#IiU0?R[a.+Ce#GpA=Yjm'+dhWf(!*ff[
%,:rpJ1kl[ANH-VKnmfY9/=C*P'MaW_;Cs+i'*KWhnf1f,;6VKkRW,\nV1aB/7V&l7KGoB"J?=W$]kJ5L'DP+7*KaN,YoIb#[n2a5
%"H&I0P"MD`:dRDa4JV.DY%EP'pn%O!5uYe-d$`7=ZD<@>5jf<2%KI<4D+=n(TUi=$nWtFS_?d>TB*?>@knU.&A!nbY1dDMuoL"Ck
%cV?7)"XsEYatgMpnBR%,g!T;/<*Pm:#LnkO5j/1\D-Fp.?qPJQRKDh6=Ga:`GJb2PbTW72cWA8!OnC/VK]eB2k,n9`"H]Op@he6p
%A^9qiUL\mC!XRV$&kj9UR'@>C0i[3FP4qNf`gtJY7pGN<RCf:*>Tm[q"VXKM&l(9%U12XX+i?Dm2c1rJ7DuLn[?H^9ZkI:,"<*l*
%FjaBZ9!/`d/Du?RidgJl]Wo=_F](n-UafUhHftn1QW2,?L]W9(\@d'e738jG?]SIo\%+l_\MT@X,BEHVR'i8l<2JJ[-#XLVM=@Qb
%L6=6VEBC=T?jHRfLi=qocVW\56rJ@R8!b&a0UQR))C`H].qY.W^Lq6,-q&H!Q.hcW(I@d%_4A7-%pd:/F.+)+$bn_T1c9NaX7niY
%pKO+G9jDGk<e5&.[Z\*&6U8=[5X>E'W0YA5NId?_W)r=<oedoQg9>P)'q0uG`Q",^;M:,Dlm8tk$o#I*#]k$J5QNIV=9Ch06fut)
%$@!o^!_/m\99?SR8k$SF?Z+5Ha`]-LcT']4OfS^e9*c.cAs1Y21VR1Fb5*EMi>O!a@j)M[/I&ZQch/<3;hP+:[rCi;0k+l4)an^k
%NJ(khjDNfcR33![$1f6BNk@V-OU[e9(6)]Mp%Z_;k_0'j#d1PE#37d=0L-&E;kBf3e-iXIN&h#-Q7RtQ.4^PtlELKQ4;JR!rfrWd
%ar#6i'$R2UKEIPJpbG%XG&!1`.1&&#eN.dgP\Su^h_:"[8d6/.f6gI%6oo%p,h/-mf$0LI/UHDZ46sk&")#:^1*^eO6]^9O([di'
%2D\VUJ795A--][uhNGPt:KZUnP/JLPGiUD+F#r:9@eho.Y^%Z`B`W+H!mlT[?RQ?-bg$Y9b[Y%6[K%PZ#f"_BJAtKbKG?J8lWZqV
%KM)O:6:.@P<sOnLC^Jaf:m*R-cq5T>j5i$X.%Uc;;r=<NifI?AKr0]LlP6mfKhR2maeJ]27bqL\-:+,`r#J0bD31AN5bq:f!^<1#
%`EF:</6cS0+A4G(Kq?Y@!H6)fWNY"8IB:k:n9cN8;^hIM*,]!SX4-@X:.Y[]UKl^1(<W6$0UE`%/7;&2oo/JGJ`0XgoH<sH)CTB3
%V*^[h(2K,rb"#/te8\99(?:2jXaJ?GP]q_UU_5utJNG@tApYuj+TeIe)Ecg?)EgM7faarBA:K0+hnp:K<gprri7quS>+-VWD.@k%
%N.O@C%!i]1;(Y6^:/E5/P+O1HlEFt03c3J)Y<^6&J)oa66LClIIfat*[4iG!Atf[2i_cJ<K]HZoB[tk(P_c"BRSZ;.`>*39*MZ(V
%5D0kcniLV/TFhaq6UnLb-mZpgL6r'/l^EW*!)J>MAi;c+W3q7s'oqeAL#J"9bR55bX&Zq_=QIbjoF7[2c2<,OaqWPrC.-Y28.M3c
%[9.WIr9;A4_ZC+[II8@Oc!='U%7imr==HM!%)>u?>]>]MH%B_Y7\(3t(&*pWi't"aQq>8VM&[9S[HOu$((hVLmMZf1!jI\8T4QJP
%810f\aoDsbDlc[+:R*=[?(EP-"W;l$C</$p`JY%U+-tW[p9mjA+](Gh4!T"]6%i))a\5jiX(:M\O$0RJ'[OS[2^EC^f-_m@!a^JS
%$nG4,F$A+8X>rITKF:(u`:QjaV$tQenM*<pQ5]^u<Qr=_'YkB!d<%u!<XWnFcs@hi%AgqZS#A!BPtG?QhD^uNL!in,4oMGt-:o*h
%]0WL?UPcL-=*-.7<6\^H8ZJjO-60T/C'PXhKj1SjNRRXg8Yfq*TEP?K!E-t[m_s,GZk9Wo#(CCj/4.L2/]M7>r'DTa*M$gBpr3^J
%$H-SJ3lR.h`&MGm+^(+o<^G+ALBFeB\0+Pbgd]^:pC^/u8BNh8OA_OH_W#(Q#;*L/-+?1g;5H#QL)[fAQsh*M5:O<f@F-7^!$0<b
%ZE69je/FG\a+X39:a:D$+WDR0+X9"\gK;t8a!UmS9QJadc`"mkOTK%=ZI@ID`5j6oCmp@="#7U"<batf_.C`69a%Wc`%$@WLR2t3
%Q4cfm-"KG9=_?YsODI[CU\(jo+D?/N!!@/-X=l/J:,'E$?;?4#V'/ZT9D?ha<4J'`3XH))FFksI,eG;A+\V\$&M-,'F[20lKaoU/
%1(g74(8)V,%Llo*]$W!d;kFB7,7)EjE88i&c'1R>Wn.Z+P2T8n7DZup$WBr1UH/](&b8a<R!!0gAW!'j]&#Es5`hgs!Cr##"Dl:A
%[kMN"Xdau,9com8U7E%;*p-hg[.-9s.KZgWH#Ba1g^jd9P!UZ%Z-<,^A6&4^U;+X(elf$a2M<JJ=uL!pGVN_2MK*$,0i+&0S8bDb
%Xc,M[26GH:Kh%h;dF"[s;H$Xl5/^eRQ)^*a/tnB-,d[_.Npp6S$h'T7OlfUuiS`j2AH48SEcp&%6&EsP1I;;hgUE9*eb_J]-!84G
%]kf%rD]l8Q^V"%b)KDcX8A59?KZ7DB1(raRmo'e:&<(2K1]l#L`c[.O;'WhBkNdYDkTrXPP2F&()*8h[P5e6[TOG>JBh<Ou'/-<q
%=h"l2A/%W5ZY2S^ImdnO;)KenJ`YTBP'fVC6!m/aP,4StgaO[`UM03\+..u%@NZqo)hlDokNYf\,TR<r-U)kO7i@Z`&orYU&Ha-\
%oUNDCY,JhKTF1QG'$SH/N?Lul%"%%L\BQ[YMdM[:k3i%=S^kjgpsLmZ08m9B/u?Wu=L,\eYsOF\.QKq:NCs1l<mDO*2228;]9ZN*
%mM$q^135@)'dJNC:%`a3$o&q_e#m9\>q3452"IcE/Ff<j%q_3D?L]>4T0YWb\.jNi#6)8C<0-p&s24[kGLPAP]-A$>]c]GnXV_QL
%6L'UD8KNNK9!U%]G4=r(drXR^4jh7U73:G-9m&tgBlB9=WtOJ2UsP4bDTIloS2k'!(4JAVe-+P"oQW&fXjX<Cm!(L4;\OK*]0m>H
%2^-5"oEO&VMC8W@Xsu<#,p%sb1#oMoPe<Q@)6`9RnX9b#T(iq(:PFR2a2f3f;W1cIDJ$b==$NMmiUM0@)CFH1+Oj).WY#a_\h96J
%8qVmQ/TU*r/9nP"gTDp?K+[3,gN2:m7QQ]8%QX#tq/W-?.27%&*^_U+QiSjTGu5m',KqgD.#%\][mC(EO6H&*Q?_F=m!"R0\ZmNs
%6WH49dtZY%;@FTroc;_q_5^P'n*"l_B#8pcLRBn]0qq1F&/^afpQ!UWI_pDt8!:]Sb'Rc/(Xm(^ik7.("-IB*nD5%M_hP&'nD5&4
%%t!2.Gjge/nD?ib#OP(!lOiGgZBDq"8ahh-HH+*QLO'Jo%h0EF'%R]SM3[RjkY/MB.,Q%_8Z7spe(rtTJJ-#GG)%SE$V%QkG"6!r
%D7G?8@hfr#=G?&N1lCc)=/n>uCXNZPR-m!L&gGP%M!g5$%-L!P4+f44>jmC1c6.^Udt$[8?cWt_A&NJE"sZ_b$I^#n"6flPl#%U]
%1>Rf>[QW([5E7k^Ku)'%,UqPZW]L<E:Ja@L&!HeiX0Zd$oo]p?SVRRR05PiK$`.-omEP\ZR!7j>gE!(V6!WXA$nOt_I8>%lM.Al1
%kjJ"]+fV3$m`lC)^3(+#4,AT"W6j?<J0)3;HbMR/Y'X'm%JfE#r1=8P=2$bh/?tM9o%a=0$0a]b\iTmUGuD0f\i[\q#ruVV]//Nq
%+qNRmmg_$M6H5pFG8+utQ0f&GA1I;?m1'+j"AZ(@G6Zu%N.6lOmL2a9H+-hc4%%Et3,&cVS\^Qq$(te>4%"Hf'7.5O;]n%Lh&Rb4
%q<rX<4-X.e8%u4`&_2g+KL<106fp\5R)4#:F>oB8't-3TLk'8Nb]\aq.l'sPfps;00KD(WmLCCA_V:.8mXY*[';9MlKV3*Jm-3pD
%*J\sq1#8BDnN>a+$f.@n`7d!\\i[h-;J1<e46*](V:+0cil+&7Uq<rYJP)W6]49(<q?bmsWf*BCYnnX`cb0.tG"3rKnp$/HmYFD"
%WX37K,ISeK-&(_],h>ZQmR0a(]$fF-D&'WDH"eho6FCLG(:<d%GLuS^OP<?&#D0:27&h(XP>6\Fa)#r>A+[(4h&-DY8E?R_GF4ea
%.sf-WLHQuok/qk&qA6+A=111`Hn:XO,IT[E,)^6KYh]><6NTl6mEX,h(&aNe%^8d,9=AKF!u<-1Rg[uAJ4Xo_[QB(4$@AAqG6,QT
%4HtQecELb*`!P7jEDCq-L$fE`dktE,G@t"b6[O#JG6]rW+ZLllG6BWFGh.]=%Zh*No3LSJ7"PXOh-L'0&`"IX+G?r&d+n`)9d4&#
%mLHg/d!A3(G>QN#Zr-&TT_Cu'1T%e%ks`V&8p=p(+kh*&h45]GBLifJ4%"4IJf,.,%OVPjZUT%\O@lBMiOe,k$j@B[4.K5;V]><a
%iLCRSd)(!>]IdGkjh!<T\a%2Q6AC.e1%]j;S4OKB'tuas5jQE`q!OgSao,99mVl.KEZai-)<C4LafP!f_<c0cMCa.!"t$k/TD!YV
%#\LHHB=e8+J@JO4A9YPG1S^shh;KQ>1c9g1DJ^aY0OptATs&3XU,t&Z(`ajjgqfkGXe!hoEP8p8ZeWA>n>>BYMkTXi%4U_,15D$Y
%b&E-)=->c_Jiag-XFMA^gEC+E]'r%)B,^7k^`,;.[tC%SpQaSF&jsD'6>pM*ZDg=cFq?alW=$>05mTctf7i&k![0?AdG&(r(]uAV
%G-F&!$sLa>B[\@c:=!e_]LAW@<H>]J6LTW`DW;XbRqLfQ$g;Q]Ta<[?[Y%RR9#A_]#;]:\Q$Z*'.IJFd3:*?sLu]\SE[%`)cT<Mh
%A2X.DTFS/=]5eq0U6*]OX/\dZObZ;3r)83Iq8"R0E;`:Co^i';oM>qZ,XITt69VXqEV9f.M99XIa[r4,1c0ZCjN)A-&[NKdRg-NK
%Q@YrAH=As&qEfsrM="\hG!)i5YoW,NKX.QggVJ%BNX89E@QT0+'?!:am3#4.Os.$"l',;T1>B&Ng@W%$VQa`pH0t+C,dFAnG0Ekn
%Z!c1+o!'ai*AQ<RYV$.;1YW4&ZZ>%3Q6rd&$qHB(+/C]uG.8+<)7E5o6m]8t%.CS;?9?%I'SE!7(d^lbM%:h;4$6'G]^je8![36P
%L"FV3m_HdJY8o/V&+':!6Y)!?inT4=c7iBEp9]"M/7@I;>!%9"k)"$j>!#Zgr%"n?+i6S#osAlh1n$fmU:#W@^5km%#>+?_m:kr1
%&R^;)XW:(C!g6Md4%Q`o7VV5unW17<Y'JquGq]q942WJ8YnL;&fP_[?;-H%PN"D@*XW=Z^1"To=3s.s][XaBI84^E.m$Q<5^(SHW
%/#s\5,mpn,Wu^O6()W$Fm0qsR]=+WF1Vb+eMLA)*>Y)NIGPflpdjY#qA[R.Yi,B%(SKTV%CF?3,HmoqY$EG2L*o][)<]`[-=u.>0
%6Vf#)V3'C;H7_Kb6W-"%KlOVag(F8lbH@#^;:=[QU*m?)Pt8QLg>U&tikJ*#8$@GYdY-*[[]m9!$`P/,YqD,Z:J'p^l/CA'V]DSi
%KV$W;=;#WHN-9pUX<pUXm0jT.U[K)fnGO[kD9lmNN]+`u2e9:jR$tQ>g/10\oYP938a"h7UE.SDA<j$^IO9]E4ct5KN-5ag"C3JD
%N)MBZV6i%O,A+C3LsjR&5S6@ZBnu"%bO[3]*M3?^jI"EA+@!-l2)@"BG;s0(F7d(d=q!?a[):uj11prjSafJG/h<ch+[fs"'1t>k
%Dt7Tu+LT+ap-AEmPM/;R'T%Op%f.;/jank<%oeC)CQ<)q+P-%fdb6u2bia]2NhFT)\;Y\"nC>Gn0>)Jl(ouT8]QUq/GtieH*t6=d
%l(q6`41%H7]Fh7d#,(Q]oMJdRW^m3]'j<[48kaS&CBnPiS$&Zs'A$YgC<+5C6-0_<*L8a[/!SPDnG5g**g,18:h+rN-+0N2N)ZR+
%eBTb32qeS;*DlG=\I].J*QD0J(.Y0DVCaWML"-YtQ"7MDC'QC5$&$@#G5,gK^Je;tTGWJ@Xq9=oOamlS@QTbf%^Qf&&]F`O[n:HA
%Hc%eYNJ[%1QUIjk6>QmVT+I5%@QX-T&12<`Cr]]f-A*%B41ld+l#oC07n4[>YR7WUq'^jGdBVblDl(9),.<-?AI4T&M!a-G+^%bj
%[UX/<)957cG,XKbjgu/[_&X6mo"5=7SRq>m7_F%V4*[C]T.[d"-or__74#AeO$jAI`=]?q`8\$Sb]\_[C7=%:9JJlaZu)0agX-T+
%hY#*9L9Y\6HY,?,E'@BA,A'#WJe>7_RI*Q(5]o5![NcJ=RE#]A*Sl>>!u5E0_N20p)d:WDi+B?,^F[TPO:WG11>>CR4PbKSAin3,
%#Rl5=gC`'=F^S]k45qM&XVhie"@L5U/^/C.I+%&8R-dH7&\GJa[UZR(f?K-)%cq3W2/UZU7g,NYFd[gaNfXPBoL@&J6m*\&?t$Jg
%c54T,$aUk9N267mZQ3`sa<b#gm9$DV2YP")L[U$c@lWPXA%c)ZHYPVnG/7f2;;75&K_&-@m6oC6T%]2h(!2QkN_hn@4K?nS6m35h
%Xs(1n`/,1Qb%uk"F(+nrb]YNMP.TJ1fab>3]!=$E$+3=hH=f6$K0;.?[R3*&,i<)T[c:$VSFYAWI9nhNLt@[;BJb2GY8uT1l&IF8
%G%@'$1lRghLuM$cdDB]iB5scDY#V)ral5GrAinj+$NV:rRTECfq/8F(SQnE_5,6VNUpFK-=/!&I8HI;?8(;]Mm3jO6JiQ6G=]WNl
%\Xh)WF`'N`#7qU#fMllQU"X5doQF0J^hk-TGHRVaO;Di/,C2F\D6_]HhG+7i>?U4XTGLm<9ZaT^84(8U[_coP$7":(L#%bW6q!4Z
%dG'f665&RJhN#N9WKb7Vb1IrNA41@V]6's"4/QfRlE=DWl0UBUHN/Wo5j@\,L\s14n)s`=^Amfd1Mqu#!5\D:?<r#NHZYH5p#qO\
%:Y%bm[g`8tj,^p%`ICPOD^X.T?GEFUIIcLrQ^.PeeMVjS\647ZnOLjh]3dc$kfq-iRFUK(n5gk,H)pC_`S^YrrmQ@/fe4kjqV1<8
%rkE(</H>.MDa+0a;%'!u$PVK1r>TQ'etkU-aQqfu;iY3L*OV14G)7$Ya5lufH6ck-3]Qt6#P4/?31rN([7^Vs+F$6l(`3YdLc<]@
%ar=F>ID4`7oV80h7?5+OgW;rD7f;b>T2^+7al&f`P594QPfgJKKuoulhP0QmD^#.Lh0_kXb>8,2CEfsWnVW^C;TtYr@c"gsE8SYI
%eKXmH7@l0QEX[GM'*"l+Md_CF[d\B/bO93M2<*6O^Il*<)PZ$LoP6fE7HM3f]&6F"aB<)j<SoIZ`j`gE1[8cn/JboP>Lq"@*\mJF
%.bASEJo'2bd5#fb5$_>m2]s_1&u*Ym=_RXL<B_8VNK<U-3OnT6.bB^^"^*d3*l:[0-X3BA,\6>&K]A-Xj_t$`,__9u+/<lT(aIU&
%0:1YWIVs-sl?p>FNJ6DRWUc%0$,(X(XnH(-RX.#[4,HGbb<%GBj^S]hX7)%jSkM2Kicj5Qs1#^(ICXg8U)4eVjeeMspAn]kgJ/#E
%'cVpC^P_5[^n:J`@#LsJ+nDQ/f@C_kd;btVMp;!'m.b^h^\IT!s.`3IIagm=L`bZ@\>)b9%:n?7/#$@\;\c[&d5cWZaQq=R5@OH)
%npB'!;FH_WSKuEr[&rn9D$(c_*Oi-pH2@R<pnMTI%$o(drO1fC=p)\,C54S^qnKhJH,E2:>DJD4&\MHjVHt"JWYin-<ODRDBZ)%W
%s68WI5$At'!8-5I[YnflgKr*SNOFbXDgOHrrttc]V[dtgbLAB>O5KrW?iP.qOdl4BUJL3J@=!G"h;=fQH1c!u5EDr;\,=]fX&&`f
%o&;G)j.lO'fB5B2\QQ\E\Xe`WldP)SB.qO`SmAP]3ac$]rqkeOs,ZrYRpTO)q2_.)Ii-rfL6)7[HLXIsq/s_&:o8Ua^\V%-RXK9$
%YOrd(puVG,c&3G[dH;"O1G@>B5JFXqd@9^b^:H+u1]NokO+6Q#$WfRjkPFQ-jQb"OZi#Y-=1^Y?d%fdZmf0dZ^Nhu;Dkj6)e]Z;=
%rVOno?G/>shV?u$o4Kk*KnoXamu%]N-f2MHro),@qXSHNqcLqCDB4_jpg-!lDsta.S!RKQh44JWT!Mm]&+?PpQWN)$SDTk(;X&h:
%^#jBc5JNT9\'`ZO;k&i;E-oWS3.8L>bOt_HhW1LokDYup^TYpkHemPhlh0R&(NYVHo&*2QZg4+*gV3K,NPGJiD+\=-c#4^"]hHTE
%jm>ueokJo'H?43l@oE.n%ssS4?gc@%UU(A)mAhJh?G3m5>Q=Bmo[SlkZT11;eY0\FQR>if?X:?/^R;Q:hU>QQo"+c%55eshI.c05
%Prk)^cZ5:4eE+)CjUUN)kEi7)oBXkQ;7ZJmlMU<B\]i<ce`AQ1=I6Q95*b4^\(p)2]A.Fn>OHOT>qYm6OaRME3WG1YF0doK1q1#@
%$gb[tF8;\SZMo,tna27`B32i!TrW4LnG7@Da31/_F^ErfqdTNq\Rn(P\.B&jhcIRA\9P@GUcMtcq6-]7?GAZg]fb!(]>M(HB.UN)
%F,o$gHTZB4oO3b\J$qkT5&Ycf]_8p_rquHcjt44(M"gaIm+YD*Emr5l<F2fRhHZRWs7p$*XtJ=mF!bMj-[W1!kP+Gee`H+ddl[6+
%s2i"O2^:-<opb:1Ve>=6cV?.U3-<3%n#Ke3\.Kk.o^(l&lMBCeH*R654YhP:S_$AWDUI^`W>jIn?bP.#?[`66IV@Flh]nV&L.;.1
%)+3rOHb9iXH/1H!O3=:PWu(B2p%u*N^:lYC]QlQaTCSoSpDMlR_=ppZo2-Dh%k],H7n:V97g<QI/B\X907@rO.*&#qJ/PhJTA5CI
%^dJ!&=u22IT6BmKe-C'IIG!Z")>1ffoF:Di3?%Xi4Y#79lgpS^0@r.(iikpq1>^t83VZPC4iY\>FN)#jqXf05^L]DFO7O!3(JjM)
%jE1<:IJr1E,C,O)cMW[q0^%K0I`7K3F'n@(=ZIc5mW1-qan"-8S%WJ1KGhH`n0FV:VJ,#3e^_X\om6So1SR&D4cd]ISl)hCIJW=.
%c(#Y(&+44RT:K>ZcACX'eNNM4V4,Zm_n00q%^dtaXZt[3]m4c!lG_;meW2MFTEDi]/8FP0e_!5c?LOirlVRJa.'MOmG5;40@;",M
%*W#K$&T9\$rOmt9NVBisO#RMjeheBC`d!$arA0U@Qg0%egOW>ucS4mM[(?9m3Ob?M3I#.Xk#`+b,6oXLQ"Mr'"ERN9pRAKRCJc+$
%T#H>d#(DrEXH#eTc03AW[+0VW)Dcu7:L9Pt?EPrq?!j\Zk4sroJ$Q9WI5<+XG5(uQraa?QbnoQH?X91nX^A4aDuOqVl6q^`Al\i:
%gA%E\rUKSAjWEY&W9(jJ<[*=%emG$2k%4aEO5bK[_[N0knXNI'!#U)j3pm;h0)tXRV0:MfD:Vr3qGs4e\U9Wd+#CPja0Y)EFQUE;
%Vp*4J]"WJN-i&RZm;"=e9]aOLS3usaIsl!R=^jbu)`X8Jptb#A]hQP+Xur0UXs6a0WuKAt-F#]u^UTYtT6IQTc<QlHY"r]koq.d]
%SGhhi:3uWld=$0&o'188r1&@Bps!#`5),UH5.n(:SR257qWj)'P`O1\e*EEWXZX.t0$UVEL,2k:r[%G\qkT4DhcD2/fCU`?khi^Z
%k;VQgcg"\^FK[W]e'%?LZSp1&hU`Q+!+<6*Burb'L^Vqi6cqfbe!X]c?Q=&4b,f;:oSrA@1K!;mj=R>Zg:%/U7<u\MJS,KB(M-?S
%NofIbnm%CsVWEs$U<He?LS'Lq+RFZcLQm]PV_^sub*%\RH^lu)1)IoW!4aMaPfTQ!o`pb?EqYT8;<Du_==i`IcUF6Z(Pf`T+)3FN
%fgEnNRF@R6g%G(WV)cPcRTX]W#Hb8W\NFd!]NH+Yb=ilt35tD]`-_H?I=B"b_CtibhnT2CQn[FTZ\R`]c`]>M^BNk7msns[NdUY_
%-o6cf]8L!RMdDl-"H-Sjo\-%kN^BrJq)V.aF7!D(CMQW/U=C$]p0haE`E7I``nI0;(9R9rCUIS=kkdN][h!=HAdlLo%ETYk!-$U\
%GMbmWZAiH)_6T&dD)>EPTim'efne)@De::@%\DLC2>4j_$[mI&YP#ld(T5#s^PA8u6X.asQd=7/cS'K`<K8i.?EI"A^6jVb0mIkK
%;uM6N:s>HD*!$o!p%me#:;DHk"%.A4$?.E&G@gkC=hmkj6^M[H0,>gtX^)kiU$P:9YKUXf=dbBO]347qs&o>Brnl&m5HN^;NQ_<=
%+Ep,!3Af4K@<)/B%N!t"jQFf4)F'Z9rd!>q&C^FKF?TKI@kJ!n,!U.h*4gS_]6a;<l?0grJ+[E?T)+HCCnHUC8a5&.C4R7OU7ZV*
%cjV9(&+.U\18>AlqDmhn3UArrMMmJji:gpacfi7dSbpkW<UT,Eq9=hal^Km^a:Y#(ZVCFO59''7W#X>*q4>A<+2f=JN.HdHcL'")
%""fde9Dj!jruPeMG7VKALUNM8q!Sjq?/iWfe<u"!@u:4<n_YYlq_$GE,/CY_Co/Mh`-`*F!Hd9!OsT8&`-do=n"#I*\P)8CR8E+B
%VtY@gQuR[:J,]Ajlh-IBbA>m;cIk2s^XuWVIU-;c>lA\i(GF'`HuY>lG]X-ld2>*;ra9YF_[KQEk5'?]QfbHnn`'kWq[WS#eW''K
%%].iA>!->RL[5"'A.O>GG4CYG*jWaPG$iF2L9\4tagQA0mqsnckWet7HG.&j/6dtscgjALro;OA5G):gXD^;7?9e>RlMC-nB3]fR
%TC(YU:,C[nVuM2Eo$,E3g;2/l/5P\L'uh-I=^U7)c1IV;T&$`Bk)4:efq1T$mPQrb$b9q5<FpTKbC7b0r71WpTCLN_rn"2e6-OAQ
%D#Rs`k4O[]:qlW5rhI`1m-bMAFcCeThP46>F)`;hXW(gnm'ZQId$3hTGZc">MrSAg]I])0`UU5n?@L41(N(".]VlX$rg1UoEl^2d
%`URsRa34Ihikrn03>`"L[sE<\C(J_p"e'ZqV6kHXU+["3I;5Y>#+Lt^EcC5M'6?DK(9iY5kedH[Z)<W,c`fM/e+#S!H0iXR^\R`u
%HtNk'3?/S)?odksEC"%pN5KX$@QNGbnW)5'K0LLA+"0X#2D,8/%h!sQ%eI9)0.lB\qc]j=$r53Z02A-FrN_O74LD-d)5pJ,<W9h%
%"@lhE5(b9SfaO`U5.%Mi25^tsc@Jh7rcRGZj5@>seaqt-f/M=kfB['*<V!E^q6/Gk&+L/!0!kF/0*?tf1Coa%Hb#h5\/X-H'E2tJ
%$Ct[Jm*XlJ^7!B*?d>:gb,<_Op=:*?V_^!Wo5_D,KDXrZ]EL46+P`_Tpn@L<(9lm*k/W:9+6/1F1e7#T8.WLs0rGP?+6-aI]#V8B
%(I,q!a#LGo=o9+p+6,oi(a%$4mH/Lk#2)AYT:OeZlH=X$+g+VeDGDk!]K2[K>;!\&[6q@tK1-lnI.Qp0h!^kJPoC5UhH-U-YJ.\1
%^H('14WN:Pn_E$J04sloo^ojYf0#XU3:t,Qlh+VffDkMUI<da6ju.L6?[Y#*iQ4,!R--K#H0B#C+Ti1ufn[nWY?oMZ<qt>HH8:,t
%jQ:4&=a%3f?7]JU47(l//85,XRaJ5B#aR<f$<jZs[WZMDQ*`d=cWsq2hO!9cmr,@YG]T!KcuD)M(\EnO5(u.cYKaX**/U`iDFIli
%UND6-reKN0pM(aI]%=%/*)4#rSB`\-?AB+bkRE[CGMt6'5b=gAgWZs5o>JsG?s+K>g:%0(`&A4Y'9DPRn?R5']A.Fng]+EZDKF!<
%DRn"D\%1TY\(QHGnMW>DML=Ws\HeL)2$6rh\^);II;[&h/_@Pp3k&AWQL!=HSQi7<T0+k>iBe>%dY2R>B9)+@2fF7!=1Z;Zdf#f=
%X(OY'T?]IJ+8UERTog,7\/?iJ%/V]gQru\(,W'I1O"7Kn@kP8(7u/\#a3Hgfj`Ncf)>eDC?XuN!#aYMXLPsWfT0?J9kj$^_g%imr
%s#/&!q"j.)M`G*YI;WEXDC1G:dHmWrrAg0\oG9'kUYJ9KcF`mi^c)MejIEhj(@,@h>4"1u*hPPGh=fe&nmp9uHZhHn&/[RDYD"m0
%=%]XkjQ_mZj`BiRdpMIBGJCeXKg]mRFQ\_AVAk:2SGlo'rL8p@o(pW(o@(&=gdO5PI(@&lVJaVTV*18gBg0r4"*\u/2e2<IrqH63
%2m^A7ouVVVCn-%a[D'_3S*B>^4M.dL;+^3WPNR@^:LBX`1jqD<QMIHQq&r]=:\>8]:2=aeH8!49J,\'#X3:/eb@gDo#Ai%XO1g0W
%\+u6,Zs-59&(%\q'<1R"b-O2iV7IL47q!)`2UT3faLA/[NnPn-E%_'DQCrW';eJ*X(MEKS:<e`Mn#'Ha,f@a>6O.u@qJ"P;UHY(D
%ojQ-.m)i$>ot__n+6I7nTD#4.:Tr)_?G'OhK(_F/'6:fSp[Cu!LR*U@EIRNPl1n)hb]5ZanA0//LZ9AN]GureZ'L]nnJEl,7rU`=
%5>[ZPnbCGMA+UlsA:oYPoXl:%EBNj_?GGJJ=2`"Ni-p346jqW$YsB!cA;&W?_0_3pAik$@,-u%V5MQ0:-+D2>s#=Z#Pm<@Y0cp8?
%p$spu2ZmXO-k<Aok$PlP91IABCC-<ur9\?bFkCHg@2XG'(#n9P=2aKI%imf&`hOCehSFhT4F.8])=Pnp[$U3.ofL^AmW8+E1!%:c
%bH6,Xol^HmOuq<g#HnaO9#(T.rB[.Y+*S@6h<*kXQ^X>[Ndd5doPgO:<"g>-/in<2qOoA)n"-_ds)NS%8,pW'c*1Ku#\;_\rc#.A
%O1G81dF7u]D19G%]C#<k:&a_Go'Dj@<$RIY<O5kpg$pW"^E2Pn1Q+"MVH%fFfAmKLEI];'pZp;Of?`V6.3.97IrMQO3u8eT][u1]
%L?DFdd5";j[A4Vja0sZ0b1l(q(X!9N?.\D*@ekIN/DnnmglVa(&"im6BtjW=jg.R66s5'(q_,-*^WrqmU?7T\:Y%b%?Om+tj,^p%
%<SHCrIf&HS+0I6e\)]!QqIT>ArVYf=+#g7H5Q7TaIJ:q*+2'-'f;u^'J!KAmms`75r`B*JIqI@e/(:U![edc=Y?=$3^]*YjO$@s?
%VC"E#To5tSnc#ffD7b*c\TNt89kb`r6J"DEno.-\6^tqpfS7EeSigKj]tAEISVc0;fW8f@g2-_B.V&p(8rnCLs6/FMopa29KVNH&
%aSQM9RiQZhEu^d!r6`Us(dRoCaU>2G:]>?j3IeL6nbVn2H+**@2BVjXR`A-4)J`DKIUBCO7E3kfh_`'rfoZ4tacl&WA"UEoh]J,u
%a;8q6?PRUrg>H!ZGp]-C"&;TN]DhshS0)Zdieq%I-K#E38N*a@%5IDmJe(SBn:rVS/cH;ul[r>gG<2=;dmP(VQY!te(u7G0A!lP3
%2r9L)A\=Y"nP45>;t,5nC_]=lD&_rXKk0T20%b(>Y`#!q%YUTq(s)%;p8nfc[Ug.n"+S-<Ik_t?FtcNj_ne>tONVD-h\o5gdmuIo
%`-0KLgUa[JUtNc"D8YFh".dK^V#7^\_en]tRiMb^;roo%\8QQC[EW]9Z=A9REl%a9Ish1A5@if%p[$q$ip)^lY.jctgLX>f?`<,(
%#NX,GNQ"tqa"IBh=(^2M2SO`'lKmR/f>OiR%u:Eq8E$iH9fj-!EMNrA4EUD2AT1P6QY)nV$[mNj!qIRiB#8$kC`G[0=&r!8-_eea
%9k8PAfkBl#.sA(&g9Hc`e)TXQY"[jta&nSRm`fb&n'@(b%o;qih7c,"-MoS0FR)@;[TPHl-USh7BlnD;<#ojTJ^OKPWu0<-#$UFl
%IV%);D,u0>V;07n!]2X4i\n!LL_Xk!6q!6:cfU;16enNXl9'g:jdDU]Zh7U1#UX?1i:@3Mp2TDWhu:e]8m*%lN6-FAC%L8SSA"5m
%:M.@!%t999VJD]IS=8%"X]9lN"%1[&:8=S0F#.Vs`;St>+(MG605pD\jB6?j#Pb5)WQFbo%-?;T/1)6fg_&btKF)H7HP[cNMrg/H
%j#5u9k/h^djmHXCAmq%(&'%c.h,m#"<#)A$X=S5GfJn?4eQ(D`PY2Z5=(ZoJ=pr%!4RQJ/l,-6ffN^-]-KCm*=*bhWhD(^q*-q4d
%%dQ+#YW%DoK[$E6bMsiUSa;@gj*:9``@],WE40Vo](8R#*\?p8F=t=G@s-rn3c$?co%3^8LM1b\clpkMXk\f.[Eo>-]^cF#X`:YZ
%Tnr5q=dA'C+E%3n(E].1o@>`Q%hGOnbPU+%HSYK+H!3n5>mqWHNgRiPq[_TI$d$Zgb4UPY)`><;bHB-0msT9QD"[YDl)XLB-#XQK
%_IG9h^Ya<MfSMo+m0MCt19bmcQIV/1''6I34@HbnH?fab.OM<a"u[Een_a[*:KF1QdQA%c^N?6+EM,/.:tT=/@-*Wp"5J'%KUBAf
%M3UFjn%7-h4DaW:P%8mna4Zu(^]2$+D-g:@9R<3&?.-(-L.M3kk5MsCM1OAMDi-95[9?)&OrquiKisCi2s)`jAg/dInWnUTEo3:f
%l`q;D^<>Q)7h5F,_>d9=?/Fe2Z^>lVlgd)bPeY66]Ykn#<nW0b:N_o\aogg3[N_sC/64hnSj,*%eooeDTeh)[0NVDL7[lJmjo:?Z
%4dl,s2J/*1JKN91lSf<=>;f!#U:^)COd0:>#:td8Cu(sIrYptaS]J-0.CPig41E:@*68BPm#pC6mGGPOSPO1/9CdQn>fN4e>'mPk
%RMFD"Qe-Q7H]8qcP;d!2jQHH,8$%.BAn=_9-bGkjkA@XXh8TS9=0/#V1>/2>kC"=p-;I<"5<F5`nsc\L53o'qf3>A<H[OFaV.DHh
%K9C#C"&7tSLBab.0;p4i<,MH0dr"F!9F][A'=UCO\)Foto&N:+YIdLMg[4CpP3:X^ODfTGgkG09:uCGh)>]JM2q.;f\%aL)ms:a5
%U`YW_i.ej25&BD&=%CL"e!$i5$ec-MlgoV.0>:b"5@:&=Le$f]SmFUmfX)gYWNABl+p@bkqH%Mdh\:LUs-^t$pusa'dgIW)_*>7D
%p\!dqc2.:BqtB#STUGCBs7Q6dg&J5"f\QTX:BOo#qW@7c!VqN>_r`c4XFE?^I<3Z$)Ec[]qG<[AL]@%lq(m.%f:f.#^NW8L,B92k
%nS`>PT:[]Q`Pnsh\.oghieQSqFE01,\.tKMDT-4C>Hp14[pn(M<qPFsEDLI@qg5pi>BTGo6M6@V`A#W?(^=ls]=rEG>B.\f`NA?^
%>B/qO\Mq!,poSGQG,nhE2qQ!MkRPD1kjIG2['SSGiV.=B<[V2,o^=)1*IM;R=&f2@>Z0=*9"1NNeZB[s\J8blp13T,iDpZ[-#U\>
%E@]n(>L@8./"4GZ\@<:BgTAP&1-L<OBGnG\6<9ENNM(JGVAP&*6I4\'jDGr%ht_XOh^XZh[n]sml;ba$/D^U6bFO3V2"Kq!l@mt=
%cNcnCGluW@H?iE[bg:MG=be[MA9i1l<$$.t(Rm(Y6odGMBl&EjHmZt2jBn=Nk=fNjd;u2,-G`i)2atqG-SVnJ)_cO@@;'>Z75&9o
%XNS]F$^O2\)`0'g<?>6a<mJJb+.;mb(`Sd]>*Hu>T>Q:9fR.j8$^Ah@oQ3$W(3F*XJHjs%:O0JE$YKPA0drHgXrmJPqdF89j`uKi
%R/`t&2iu)4d4"8Ma<N<1@C@kASnF&C(ur_cKW0:B,B&/tlge2d&kb_".;PsuUN@dm6'jR)Gmpr-[GQ8j,g;Y+TG>@(>I2^F0D"/7
%+=]>Mbip)n>f$%?0R#_%+<*^"FWjs>o,L,]MUG9hft"PJ`E\0^jQb$2Ddr6#9Qo,SDmQP:M;n-*d6F4H:M971[eRo70\C4>_=&"B
%;Ra%eCDElT(0#::B>'lgfGtK,(gb2tGPSn;:Zf$S#M$>@)Z+BSkHSe^jKk]HXt%aNc&3kX>fkW?':8@dq9Fa9o(mabA6F*[3G7pr
%Y0+gu?.'WG]n]4[DM_Zi#]4(`^7AT%FQ_](iL.@j4#oYOCn\P$53ZP(?MP]MY0i#Q-iQ0m0Gh<U)UfH$Lc)1A>[qSg?U3dq#DCT_
%p<%Rf:LV&2;Q'@ID_!3P%S,M];9Z&Ro%nE<\#QBiPPpZP7ij\!J/b;(ZA\>1Up^8KCK95[g4Bf/aC!S"mF=];nkg>m\"Se+mksL0
%Q85ae<UL*4/4EPPSSL7u[d_hH\`W+a_ilMbh31@cG^\.g0oE9-BVHp=X99a7C8eMhF[dr/XNRsL;C>WsRiXJFqT:%#=t^QK]3#cG
%EBK/!(cYmqQ`^*7X3K3WeQ$kuKVJ38;@B<mndTlri`^;%<d<*X9(@/pf%p$qDInYu<3poX:OKD*M4=/NSQMU"96=X":4,mcM6nQi
%Tf0qN3hcN.LecHAKk#p6Zoauqm_)"9b\CM4M&kIPh9h'YiWO7-F<YU\:<\+Oam?K/F95W@U(cKK748"OND?G8@2b\->GDl/%o1ch
%"=MF[i.QT`_229g"R.L8K!p^QUcpcSKuPftHV8ITcZqF$i5FGYHSYK+N)%_)`06s%JeRkkS7o>7-hah6QJf[`%o2<t_GkSl>G.]n
%rE/u$`DC5;[VqGOWJ@Sfj)m_,`0D(B3^O-;1qclr7u^(ZniY2U+0j;WbNDQ?TEfLtc]?&]m%OsKX_JG3GZh[T?4+Ab@bPXmD0W*h
%5pnZ!q\kmt3%I]b&b;1OMH]6*Go'WVaiDu4n'J*%g;.-%r9X4mMc.V,>O+/bO9_J.=^GjJKLEJ<O2r4bT1)=H1*=--E:d]DGrF94
%[m$F$Xk/+5Z)pOrGgr=(<(HNn)&)4k#r2iWFFB<k[TLL/)7%5D2Q+;HF%bqIecdt4)4OZq_k')3X,B0W$L$uo!O78knp);4jK"31
%0%HL')]0T$c"Na$o#[DfiR\PoNd(*pf]`sZgG.F'op'ET-C2_[5%D_]^W"AV]A7F$Ed+j0>C7_njA0QAY,.&G(T0IP3,/?b))Ns!
%5[.hShn%RHCC9[%F4_XBLX+Cfi&Jb4K@rGn?.eZuSG(%9)GK(km@MO8=/N1W:r_7+PHi9D[h=4%7U!@Fj!YWaE>$gE;n52IR(G4k
%jip\eX;4aAS+;5*DVSnhN@GGs5P(l>%sZ<(UiRMA:@"oHcLtqEO!s=fLl9;CQiO^]((Q!da6">/l0LeTOjd8EE\GaoLi#0^1oO$d
%'qjdd[]3l.nZf+T:fVOd(VbEgXXZ@2dWS'Q3aP!iOib&S<&jlc?Cjs;&qS.$W=:ng+mQORN*EKKq]HXV*GM9T$#pW3DkE=$NiM/f
%RYB%)b].?opZC83>3`EQ?kshnHH+UopS_gUO36Cm9NTbB<^_c(e>$B[,@\g3oV'2po<nFj>!bk)AI5.TORi&n(usLT,fT2-UtE5?
%P[q6n;HgOUP*50t84mT))G*N>8\!171m1a@Qk`11ImXsbhaiVH7T0/M8BUB;84duO+=0aPZ4`N1><K=8DNCTl]6Y)]fc9HUa*UH)
%`GUO.8E=1l8L`Q$&P4F^=i4(Y`k%)9L#&GeA@I=l;V<"AaFmRV6+c.ra.X2M!7OceFI_,oS2N\_G"X5P!a1^`8j?Bpo7Ns7PV)cR
%d#1WorJ+;1p-Oi$9%7BJk[Eg[fZ'%+(`.MnP-ltNV:]XY'Y>TS@^h"g`"t:fV53L`'`-*5@O_8;Vr@@%?Kj2tU(U,PYsl,+;n<l?
%WKeNN9Ac+mH]FpJ%;NBnGV#&OL@8V$6%^(tqX+]eQkDtFD')?[o/fb1^/G(^WtIpJmmS;6lj0A&NME9f8*R':]'WK=lM_`&Gm)N,
%@tu[igDmg$nAM$Tfe!]iBX\4E,RcH-o'gfq+=5`M+D"C2d;98e[&^;2q>RBV_V<3b9SmH8/O^^B@Nj2EO7ZK>Qs8FY=lZdIXcjZa
%WCQ\R_C48X&#6(73Y%qKaYs^)<$aR3UK#"j0T;`O_36QF2[lJR2'*1,:MN"@a'C'$P\s\B-#Es`\@<cB'"<Ql-GhMSpDcY:SH^p4
%$$pq`,PaVB-##UH;mnK@i_(+W&!V9clcIA[C)BB<dc7dQ_7PCuhGWJ:05=VrUVOtoT6:pb)!'/+""3=kq4O9_P1uIRDOFK8rXq,m
%;U$\lrOgn%auFNfp5pE3Z.Q4h>iB(AP@3E2<+<@:go\&pGB-?'f\#%TngGP67<dJt@te_<idlJ6P_4.&aku\$2eMpu;h5F5UjpZK
%D]@]\p.fL>DsIu']NkAX#I`k$?T?[YVO>T!:?6-U_!Z*(a,/ssq;U.8%JstrWsA4c/".KN[+TnN4Dp,?idcEW"#=ef-=;$BrmuTA
%Y/hD\2ciXMpQF%>,^"%OQsPre+(eFFJn2P;=YE=s$^117AA'*g5FehC"j))4lMc4;\n@p_9*R+dbnK_;=8X.CD]7I=H+J)D_%V[H
%J]7ahWfeq;qPIi#:iUs*SoK>/V'::br+N>UM?f.S3O$)D58o3L2(;NACu.Cm.*+dAD-<<%f%#V2-n,SZc"bK^/B/dT\c:J^rb.[W
%S+eX]moYqnWD1+9nbVY&\<6qUPTpi>Z"rXjMB?O(D+45qVF)9VDE+8O!e(OsBiEf7h,('-VJ7MSqsnhYLWs,.EftC/%FCo73aF=5
%FGYHDZg0?0q,Y]cJpc7?GR1Q-@OLpe=_M9F_S#Aj$6-iF+=Gir_8=T]4W6"G5,^".2YG\SIYl%kYkBSf#c0.o_F"adaL\G^q@U"G
%GRR]2n,iC&%oP]WVIATk1uUV+>F23=5hK)10Csd)JBl2p<LPj3efn^)4rrZ\JHPiY8E"/uC=g#K4&i=0%T&:G\ngC;"0drs*QqV+
%!#8OK+O?@_GMF<hX%5smEk_7>:kWJX8$Pd`B)rKQ3k<;]<enQN-Of)7kLN*-h:`j$ZdBVXDRr8C:7]JD/M`P0CsSB"?1Nm&:2]Lb
%1u-V$]-,a0@rHNs<<?R]G/He$&":_tQs_7-A/+i9Au1hQ^rVjFJWHd-I$:_*<u:\83-)tH1m+EKQ*c1K^Ts:O#YYT>>AYD+P);@k
%0'PlP.'N$F`$m/_J)-'s6M.#nNO*?qdDUt-3]lUeG$*=TFu2ZUiG_&;niHX&jkbrnM2P68Y0mdhSu1HKm9LWDnBI4UPRS.o/Rpdc
%$C*9bh5[2O-(O+%_GKW0GS!rj=V^/!60'5d&r"K!&)F\7?qK)58egR!k"]f.Nb1Ok2lgA5gZGu]=#!Re;ml(6Lt!oY?ok\`6L5MR
%%Fho#7#87s6_^VpI(CZ_%-L?n#bMg%/P<$Y-7V4$WRSBX,6tCd@53.;Or:[5L6bU`DQ2$gL:uoB&2rUZ-`_^]'n[M.20$<hKmDM.
%hRbX5pM4#8/KZq(cs3*9f1"GpOSWf_pnX:J`PNLtUTc#\\"cDhZF'/5ThrKu2blI%bL<FQlfY^Ep^2$-VGrf,AA&D1+.:4*XBfP&
%@QdO9%r/@QB>'m=-74-X%LS=UqNu7[nZ!JHWNDDmE%Rnq,Lo4](0G<A@p7LE#eNsp2N?F@d'WX)B%,s$eV`19j4SXi4dDaC@j[[.
%`GR.@:)Y$GX`(5D2gb,DmC"RnL:J:9;nb!)I3:I8OVFYL<JR!9s3;/9ie_M\HUrj$RjPH=Vc]YF#4bNJ^/:qMZWLq8s+DRYX$/VY
%*n?$SUZT+GULo:uiAV2,om?R:#9DP=KsNO"UDdEUN+q\IBO_J44Ntqs+-P9OgGX,Y,GQIW+cIJF=0gUqXm-f]&d3Io2IJ7aHD)Du
%4MBPB##>AfSq<rlAj*paMo@dQ[U&uoYD]f@EH!MrLCX'Sd&ja:B/OqFm6a%$f63ffN3hP'%e\a.Ooo[K@&@;U*SU!`*X>me^3SFM
%r?)Q'IUr!@o$gl+q((RH2E9O(!]ZQjB^RUY<StK=`=-g+lIm-`LSrC_d2^,sG2sKfE)fOIVnX9Bd?5FV%mO!ci61Q'B^)s!!T-%j
%9S)*-B^*?E$N0%TV'T'ucC"b&Ve0X5Wk`I/9;C=J4]Pm*c-l:pH>ohbpON:0hNfY<ePq*A^\D_/hYMTX^FcDd9<,dj.^5]UloS3T
%BB@P_;[#Ep+Z2Z"<m\Q"U^FITBV4.E.c>'A^p%kDc>Pk6q,U3)i%Y0(b,)S5/bPh(7P'ID--0\PqT;q0VV[M#<1^PA90730B3]JX
%^31i@.b.G_'(N`9.>V/>(i%.#IP%57`u&Q/G<?:5/sf$r1q,Aj18eQHe(@76no$+J)+(//+XXc]1SKj$k]ob'fT__GSh@)Go4h.8
%etSNB_nl!4qXjXN`DVZ#'VcY^MeOV0q$esRV&3bm7TkUGQ=?)t_mFZU((\mR@6-(Qdo)-FCrIg3@H5j_Cb6.g1s"HE9G;.IX<kcH
%Q*faT#a6!8be2^>D&K_-(MK2VJYu.A_&[c"C]7i#2+m@/c=.ON_fI+`a%deY5e^rtajpKR^*XA%KA!9de+B$k/P_C.j=Y0qY:YU+
%&A"=2PU)kU$hN=S!"9eh=19\SheGenAHR(rUcS!5G*7@YToTOSh'bj.(.L<!8]Y.#G[lPJLLng+=5Up$4,;#@V?7<mb/jK:k_:aX
%kcP>+!/5%F$:n"M8m#(T*mQ8l+B)6%E&1]^RF<o^(V30bEF0m^A''6n/\*il1_&sCQR0*jX!_)HL>3H'R.fn\/b0ClT;G1lS%b.U
%?575O?ab3KcAiqM^lu)_'Ji>J"7s%-P's<q7'4&I1ugL?3OZ<%O;M(f8t^%6*Z7h\8g>rtIK!Y]Q'r_Z$5]eC-;Il&VFe0'AgjbV
%nB"*\GrXP4[dZerN@PgU?s<4f'!Y_\&2A*Z<bk*dO%'Y^.'1kHD5h'E:$1DNQt?a'0ZY,oXiab($06E03^2lPP+S;;;D.:r3]HJ;
%&Y>7UgUq^hk[@MXBGHD5-N-R(?=?V7afK>W5LUnBiHf9<aiH$*lbMC^[]V*G4A&bIeYN>)"Y]J;YC5tX.\DDe!8(&p5h@b?'a\ue
%TB\C,>gDMJdT,8\7SRpX,X5V;79I`KP(:jh+,8Yqe-o_J?F#H?k$n1*CBnXOe^W7L5_6MUom6eh_+QLc(F:f)8COu#]U;-d-dkUA
%AcYq/r.IYt[MI_3:Z"UC3S[Q=FTNN"jD?@frD9pG$k=O^erg<jm!L_kCJ1JPZTC!k18A9:8/!oI,Gn!"D[\IiH?;+`iq7E%olPB:
%C_1#8S[1"aH'g)b$J_&CpIaZ6m#eb]duJ9.S\:,*X&)UTCs"am"g"i(F'_%9"T\fbJ=b%h75eFY%T*`!%QV@G35]7CU)jSGoQjuE
%at8_L?9OelBI-%QU5YrsZa!*Sk-HQ+@bJ0NE!AnIJ7N;$oNj'8!_=]1lkj5TBYCB?60@1,>!u5(=+SLl.3q0,JrR@NbOK+_4"I.n
%j`j\^=n/ASj/IO\O>NJ3YS/sSb\go:[GU-rmHX6&lgY+CTiHelFXC+NhQ#/tolpOT7oMXgeH7;im;2NtP3q_r=l#rp-]5.*0:)d@
%50RJ94eVA-_6T.YV]8MFp\B,#[3\[4CX`J*H*s=<J5S_4XYV[lTPRV#/Xa^r7CAHRjI<eR>qN2*!t*(Xj2RW@66.E*qCtYb[e50n
%"4l+>#Nu2RNs>Z"f"''jd/DYUC\0=/n'1IalhW1\'FHntW<1gDd(.H6,cN5e+,8!VTEImq>q6*3-ouJC)tIF2ALaW#Bp,WXE^]#S
%d<'h"%RjL#+d*VmeVAEfaW1mn@5"tk?!EAgKQFS//ZkAiNH<Uj>eBjG&[_Y9k,01r4s*Y$XuB:?.#XOc;S#tjW;M@OQG-$o_qEC<
%h$rdF4$=Gh>K>L8OuHIG%O:Fj+mW7O3Yo#]Krec-lWD4h(:&sSXCEF>=NEN52^#YmFY%&D2)P)ZO`e;o)VH@5fjTbIB;b<u'DVcZ
%-/KsjZu_/O)JBF3(8&!KF-COeKi_&icNuAhOiZZ6FQMY+H!)'$DG4!eGI;X897+N#ER0L14hcgnc&\@:T2+GloTMR&]B"TfQA#$e
%S70>,oH1VpKq)T$m#hmojMNYHn..Z(Ic,JijMU_`Va3Loms,i7_tTb#_p=*6_p,IBnT9ifnC@($]-Ar\GKu!$JXS:;LC`,N(M:C(
%90W96[u0Xr=6J&p:#Wh":[aY]h`IJ.G3@<s+20e.p6ZBJ4.g-G_qWl?nDX,`LQ?@p"50-2*k$<c\p</1Yg*&%qmDp]V]Dt3\=[5S
%PjYHebD/%2o&7iV&&72C5M@JFK*eEB'Zm/bb$Q_CSot:4R-WCkeCi+U5c7ha#tk_J8I+fQV6JceZ9pfF0K.n(j``#a*Oh61/]86q
%Eg=+nd54L+bsjL?i!GnD\DoAha[;N<@oIFHDjLuhH'`nFA;`l#e.S8AdGfH*kG_Gqr+rZlB#EFr\H87]\J!VZQ+&3?m2F#AY8b`I
%M$cp*!H$ZVm<NA3$j1c>AD5ROZ4[ieF]7YHXUJQsesMY-N:WD7cY2,Nq4Ka:Ec!c6._.TVb/`n1hN(@p-;#J.2f`Ju;K4C*:ZTeq
%^PhK4/o?l7gY[C.B[_(qjZQ:TCYd!^'(UQjj8I1.g`diJ5C#JAfgD"e_>Dt1X2:MogHbH1N\u[fc]rBqbN;tGmtZ@g`fdAd>q7@@
%Q,b4GhnQ#dc&L]dQe5'bWpb\8a+Ld4j*(6?6Z-c@BgjiGp!,N@Z6::uYhLf(h=QV9<OH8II"WHRTa'Z`:uIC-.0bd(Cs2O-eX%j8
%+995Pd&9<?E*C1^#S=<3e=hb8a29g.A>,mtcYN>e:<U-Q_EINT#nb=2J_D=6HIusq@'[H2-_aIm*2Gm`[g`>0e_75PCVs1gA#^jO
%E7%^32l00XBDGh)`5h8<82,dAS%NU.7P(mR&N8@"\B]8eiZ4Z%9-1[$4Q`1k=$@J`?1J:&\ujQ'VL5aqSdr*d@CJc&pGbA%;6hNn
%ioBD:>(jBtT;+NY5r2;\1gfkk+l2*h<3W\-bn8!;(s)T:'#i<XP6DMTZXPC*2;c.d/IAc0psA6)JIsi0P198=qF,_OCrjZapI[Ns
%Za(GtD-Lh7e4cc9D2[qp(ohGX+Wn0XHM%7XDZ"6(/,[E08U`_)dSB#7b=CsoYI=*<D`;"Y.PnuL(Y_4@+V.d*1P4<jF/0c410PLS
%2;bT./N9pRlQW1-E]#2tNV,'_;uL<9g=(-_G06VF2AV\7+eS22Xf_=re*E4&Z+2#"%-khr(U7'SBk%a_)db(8+#_m,p0*HD/><'>
%[,_8hri:r90A!9)H2ch*HT,\_$1ffYrcSV>5O^B,!dhDlhCYsU$gc[NHagfI4e+5+!dhD0q%!Q#DEtAZ9[)=u6Dcp_S!m&Y9J^c%
%Dis%(#$$'.MP-&i?&>%XF%]Ko&K,k64DS(lf$`4kgC17[Hkue\O#7j&kelJ,Nk6,cY*)TX]YEKmk8N8u."9p@p.fL>Y=!YNOuF[N
%Ts!D]"89XQlCr%D^'#3H>6s1"LalZdmGk,qYA('B0(ZLX@j0WmY#MJ3jM5Ld?Il80GVDB&N/EhL(.1'b8fWeD(t0:CP7Zi&T,'R+
%)l";q7_qRq*a%Hf/iImqF'OFZDsQLfQfcO/<S']EJD%#bd^tJn]>\`[]l(-,7nXpoB/UkmM1C&[jo,h=LrSL`(M4>"qm0!%fHmTa
%B3r1t\$p,k%r<8m\W/^6ee$#A&-Jq#ck/f>_?4V5/ISOFr(MP0.2c7p20T(P&3CYe(K(tM7S:L5\cPk8>>p+69Y"ZoUW8!+pdobE
%<R<r8p>ENrA*)Lk8u#>H$4i2f.<(+l`_A*+Ip"E0Cll&>:DKP!Hql%j^3;>CpU,r6Kn0+'RODG>NS541'-V,tQZ'05)X$_".ds_b
%&*J!pT=h!aDJ%'>F'9p9:i[Mqbrl-=g&<U=7d!M7#p0B\gBq^SOuIf?S/&p5W>nAF=LtEtN&)V8^LnBL.S=7l.ju3^d)!2V_EBQY
%U50I>T3eFQ.RjD$q6:K#)1GK2S;JfAHbkB@dMlW__c8$5*`T/>fSK(sUjfQ^+2g,E">`@WVe*0480d]R2%q0W!`mk[a5>IkP:tR\
%CfYijN&.XBc,Q\FWT<9&g9!?7nf>^ZDR-:)nf>tS.fm^qb-Pt2Qn*Nj6nLL!Ui%@r%r!]+O&I@,(T!?rLFG2m[ONT5M*n8=cHd9&
%PZ:=lW`!T4;Te=*;jaaboaDr`do8=+Z78XhfK-''XD;AinpN;/pp%r6a`n<)jUs%H6:HN'dF5.'Q:TC9.9[oa9;Lc=MA-(JFsBn\
%[bWo@V#B,*'\*W!@u(i,4!I,]]bH-7-KS*%E6!6dU3OEegcOBhHVnbZh\mrl]?mo-1i4fMh1)*=hBc!/Ad=4kHOU\.'!^*jm_suV
%gD=J!5#T=Q`l_!LQ@dII:h0c]U:\26AG0eA&5(ki_'<.c7J@ECC:4;'p9F(P5gb?--lS=7NWMY%qS[BH#`<4e12gZWJYHt?Doc?t
%.QPkSSOqE.`qR[a'm6Z'Qt8FOVdr;rBFrj27Ze]18u*kR8jH[#5*nK:/nen(RQJ'V3<k@-giW&?ipDB-)E\K_MegF*fcp&KNp@T4
%E].\3Id4jUQa_!EW\b^nm=oRj?4Q&l&2)W-Y&IIXaWG@AO!1lY<Z?uP4=MkXVCc=\-k`\fU?#Mf$TXu.Z)rBf\2O5@Ci&q@EgSh'
%Z/3)^#/UC.[pnT_7r=QQJ&]&3:V7c0f-P1OD\,]lWSbiGB*?H$Ne\WaHogGs><\J(ZM=2Ro9A[,XJN++)Ys.5`C48Y5DY9X7R\]k
%eq&lHq7%Tg&ZJ/EV4Dd&($*C/4<7B9.NJo0X'f@_=\eFkLVV1N;t&dkQ<$+QdR&N)E,"Ue^/bTJTo`C&FVFFgMriXWI^-;\a$eO+
%dL3B"h;V4&$`Q^OZ_jt5Oda?=p#eD8ESemQ0\A`kiTSa:H,=Qa$GR@JP:L).]!CQJ_mVP$(T0(n!It.KbH&giYKnk?nom<EUiQ=3
%L]?r87pj!i^Er]bY:nbns8M;=s3-,inOK4!rp8p*p$1W7c0H1H^R\]&rj][KI<GL)IJq4@rc'7aqW.;.i]QPt="hkFo[1G:?@KJ+
%X&h6@=5VrEn`f2B=lng)`kTU<ph`5559*_-UlG;1^Kd;ch"lZ<?bJIHZ16/g`p4GMrd<(`Pq>eT/4pkJ?X;g/^)6h4Df77GcL\VN
%^]*kdX2d71H0WD5n;\1YHi<)D$YRM!@=8PsPCLXNo)IeNpEt=Zp9An`pUf\U?2i1>jj!8cns,Kl2leoa^#ab#cg([?O)6'/%]dBh
%G5T,Lg%"IAm.C`l!LEb0f1C4R<SPX1jg4%&RpRi"Y<W$Me,OiAoueZ]L-t'dPDdnrT31ZL^\,Rj+'5(`R13(CiD2\aVpE]TqWOhQ
%e8=cCo8C9=q<KC]:<tRpnq`,%-qB7\o;Ct?qt:4IIJ_>c:1'Wc%:=7#q<ZB%c*$7$J[,(DldP0h?14<TWRH(*IA48l#=&6!p`Q3H
%@ujF3Z]>#aVDCHL0&uiNQM%NZo^Cs%(]7phVD#Zprq>LNl6i!^Tg=bflK[N$p"<>/MOrd64$DQod<bV`g(^1Y2(tV@f$EsJ_sO\>
%X_479=5W;LeL13=ItA-47m12L`VS-]o%E?4/iWgpRrs0Y?9`qSikL3<EF57!rc@_n(P>N_O43E9g'cqjUB8Q8LY)g'b'<-UbVS_t
%D\4T]#qr`qF8SDh9YLoojN5<I!]AJ3s7"k-]0b'D&aN03M"N$$D:HDlkneVe5?m7"pW;@2pna_ta(OS+M>k8=F`I8Yr,ji4ARm\'
%FYX@eL8k)uj.G"LrUm\ncW4:MX7>nOmXp^]r0(@Yc<Jo_Vei'!ZfZ6u>K2#*C;=51qc7lir7cRmS*@%\\b",$Yp=/f,q^#L]-Mk3
%*\;[J3=.hMk/bIODTa-Y[O+@ZpYAm2p=[/]AbjmJkHEJrYR+ZQ.`d+S\9PnQ_:A5=otT)4e`*N]?6?n0$@LM10/(UXZEL(<[;D%5
%4b%nO8"Eq'M#Y-#H$+loYT*i@FqiU'H5*H<;2tUgD&_SH+iQmXhlgcbcB%FC(Y*t1C(!,h\+IEr2#d#krTBg)QX;n&-ArNHpIk*q
%l#:k]9+]rh]>\!E0+RQ@O*2Xn_::R`h>/`#>oE%80])]D0RkX?guDNR@<V\>eJLEk)/eniJq%F^s#j,"rlq)8[6AqiO-+p&'3gtJ
%DgjhIiTf_*^OCO>rf5n!VK.H'q2VqBhrMhgmi?1Un(=p8r`H;EhGO#s#M\\HX^8]ipAU%Dq"G_`HmLYTlT3fq4)4pNZ<c(:eB&7a
%:,2c5SEu^Wg@m96+/$'ZXnh)SjXE=(X3^h3c0=1:Xi3kYe2R!nm%d@8Ds3@Dd3&m\>77Fq-jW+m@g!usIa3%#H$nB.h1k%N^A)7-
%mZVKlmjtN$!fD2D"j2-YcE6D7[aaE(fYmNi!^A@\Cd`]pie'BN9n+9LfL:cQrmtY%_AM;Ls6GHS0T);d4ndGq@b"%7n/jb&#JWeF
%BC$Z2JG&Bch0tUKigRhXrEJ)AJ'V0R:TK\;2s]"\CR?)slLalmmr-Ku8XqNWkPqJUNVV.[*;@LUC\,4L*eY5E)n)-*-;UMdan5=M
%H/%A0pbjs&.C-d`NZZUeq%DH)=^qmJYMjDNNs4Q11lgD0iZ?1FK]l8$f8rS631>4t-IJ4\T=su8C1^$ML#:2i1&h:55p3a4=*<P7
%n_SWR!.g5bbfnB.E.@bSVHO1RG%^NoDVU(.cTkAdI:d%j>=7V9$K'k<)B\g*#sM%]nN%[+^!MP1)'K?S_:/$K9B_Lf#RL"g2u)kU
%rr3Uif[*Hr,]+Adp^j)]0R-4bSd5e"bC5]]M@a7sRHXDn3R7Ya=:D8dUi:`JDuY*FW4>uZS3m40U&L>DoIiatWrGX&eGgd`#l_6#
%j^5e1df4g0n?:dS5iDYr<qpUlKR^$pMI2+'s-<GDrtcH"()C3W4Q!-HDu'RQUWRAIg'\0l3'WLYVrA,.I=?P'rl`7YVgB1V4i]a"
%VtRnIkU'KA<pI;Pp@F!HrHu$.DO5Vnqh78@o#[s3gW)6OKSB"^&:9%Zq!2;\Mk=Emo'E@(/k:Ej;f<B>NOmufM(hma0SDsDCN[.Q
%)EKF9\l3iC"QWf56K:FL3tu7$\udX.eLEblkrKYqnC-dPTE@p?RcSRlgX6mh(UAZDIIR9KHgS7;s!-E:*X%?eCN+_)?hWcVqV#FW
%U>'!Xi>FhfVl,$>eb$9,aZl),m<lC$0L7)mHf0Y=PLbReg44!oLDRHK(@b+,YZO.ULo(?dk>WP=UFqC"%BV5@_e;]sn"J-m+]g'`
%CNp'J=alO^$dd@XWF.^-cbshu,;]UXdD-CgYdPeZ(g*1i3nc9`ie<Jc25UBX*u7A$9m'Mu3$?#fQ9oLt5jU+;lTQlDdS^2-&`I^>
%9OQd#URDHS]C-2cCW(FJ@8*kCO\,jB`OLJa^em3r_!d$</,4_#,F-%LPbQ!A>TYRX[H*+V"_r@WMagN@"JHbCK4]_os+mW[TA@=/
%@S[U4<0-$)@!s%I8,CHpJO<[MEJYdX&k!&*#KHn!JOC(RKOHbGQ)Ao,h,$!r*2!X'3ZN.!p2I2Y0$gI[!B9eB+c@l?]h>/G`/0Y`
%"OJW-(s.SUA,8S$HmX9`lCJh1m9.DEl^h`^GRBPQe+ceA.4ou'eW!"udmseoUBEd!*Y<rQmEsX<$9h`EPK)'TY^>J7HH[*GoYrhr
%qFAJB<%[o/0sO3jOSi20D:2p7Lkqk_NA>.YOd,;%;i&/m!a$.nDTEb$I41r0+D0TFrX>%e\2]*r/:?2ND4r9Oe9$2#Q\M]a3lUCu
%/ts%%&#>VIEG\VIKIj>g+R/VH]kuGF75[\&T.ep-*;jO`Cbt:K+*>6I>SZ8Ih,7$__$m8F-\-qO`%-Eq-sc[=b;1iXVL@`CFemlF
%JAOpQRKc*5UmCLR.ZPQAKlUlF-P[m@W(las8<8CO?aFkM5-HOH8;5tpmjPgTh:&'b+X7F0M1p^_$O"<Mp.25O9r83HWD>a'6F#+Y
%=,'F'TV3Rsk;06O&n`FP/TaeJ']s>U.cNhV7e=n-r"=TOO2-(C]TgUT\A;QgCJ223YYV_.dLA@'7'Bi5Aj+Ki3+ft+Xrj.GcE<1i
%&N[gY72f>_^^)Ro_@[[JY2NboN7lhH.H@Se:dc-LHKJ)9gW'!sDTLlIIAa2``&B$]TC@W-I1(n.!tpVX`.dj[%&U1ZO>c/%#?.oA
%#i^sYAWCF%U>7-Y#_?YHL!h6b[SNe&pCZ:L`(%p-*h\#pTSuC"e2;<0#uC_9%Whc@3@&^n2mB.1ic%"SDaYOU4VAgK=A9`3>tsN2
%,[#u9E<BH#8[e0dY\G!_5TK]N%$!t0>u(aSOBqhB:%i>T:G"C(J-^Pt$FmjKCR+BHX1f.;iZ\OT,5i:=b@_e91i"5h!9Mn/OUVZ0
%+KH6uhS;U$l'ZItU)=#$O"Sgl";*jR?7N85cL_M^0="l3g/<XAn;VYZq.(;X>_eJFh7'hR$.*]Q4qmBuLV-8$5bEr9"LH&0(+h*G
%Kb:%$3Sg.KD@N/gO6$pM_)UkV=Bk*RCg)Ng-k[l.i#C*qd,\-IBYbl*3fd:L)jkTG85i$Qk0>0mF.X=Z0>,W9s6L/7YjoL_\U:A=
%FBfn[KB!<4,(%g(%JOS7JRS:79aK6\LA%)3g10s!!T,ctU&NQlKPoiM<%Pp6&QN#,V#d3@_uTd,G09TCr!n*6S.FeWo_JA+,#*p4
%PK4JeVV6],On9Rr_iQ@4Jea=ghuiR<P\5"97BRGqI33Tahp]);E_+drr4nN76p<8')1&Fq%mJd[hZ)Mg[3Q4F>h_G:(0XATmt6K@
%2p(fq-1`c5&g.VJmXG=n(&p][e'eNZU^QUa,TkreJ+16NAeQ1:mem[DfTK2N74ReF:VK)bO=pUn`CaG39!AX)bsh&Wl2EVT(ju#5
%git.k.f^V$H^l!]DeA=c4XPIK6StZO'1TFfp(W%mmq*0,^kPBEJc<Sh#:V"`rYKR4Vo_9#5)"K5nO]B@dQsOi4D4\QjMRKU(p3$#
%%p`]4;4)s:/UJ'D4tQ$IMEIjI#8uq7*5\]<_>itYAE6;>B=IBf*i6\HPCk7P7<?RjJ2:)PjD^UFP9bPd[npU,$k^!>&oa/h&E+q*
%hW\XJft1kG?-MPRMiI)%luPrVQ=<2gNY<:DbZ@@8?0'XdSmii5M'>G69sh_7<%kl4c/JT2GD`gZXnG#[l]Z@F:G9`cp#CZoK@g&c
%k+[+'s5a&LKAT,6U&I9X;f4MZIimAs5LAco:\?WGhoX>>WD#PCFBXqRr@-W<TiRdJC=aC-W94,r/L^KQn<oR0Dn%ak<6dF\:K&>V
%a)fH!AkNWiR<fIbX0jbZG+RP1Mu`e2i';1E!9ZGu]Cf(tMa&j':&`1K[0@(PoBg_-;LhJ0n+k3/:@eFe_u,^1l"a@JW`2X9Ep_\p
%Ls_jbT6B[s_o_FPlgA]eAo"*D6Fjkuht!.'F,f]#XY1T%D,p3Zi_\-Fk'n&E$C+d$[Olr\.7!,p\\1Wqq$"A+S'V":CpmBJIC8]u
%NE5AaQZD=lRuEg81R[7;NX5/<,(<&J$9epq/'7PqFoSWYs3E3Lq7ll7/R[=_%jo>F(-AXArUo&5rV]AlFM=$\ZT#7bTP/f#WW*uZ
%!t4sL>L3=%;/SPprSN.?rs*6.(-XDM^P;IWAN,DP9lrVdbAI:>=#>tEgA\k#/`g1B0#c/kqKo&,(IN]/RVV_;Z9=&LZi"fi:M'87
%ma(cgRf6N-:eJsLWh26F+2:`Cs!HLc^/aacIL>a+GT%E<mklU,f`#W4+$9GU3#/5@O6W9JZ(/\b^OHct!fYsM`B%>Km<f5qXae2s
%_Z0197S5:Gngg<tCX(\=G06XRkB6!mgo=F;Y$.ed:i\pZTl*a4]VeMWmQ@u%[;p>%^KJQLqL,WNn9[+(2o;8ZEpIH'0]-W3S!?4:
%ii-jf81Aie?1p>H7]62`-_YnEHhah\m<n<+PCG+omFN;J7O1!dI#s>A3a]"rqU\'oQ5Z$A"%H3(ld_j7Fo/Tcoa$b]CUG)V;X&VI
%f6ln\7tp$D:pSQQGBXpuchP6>IE<ZQauA(/HG3N#K":3l+YhL5#2)4!/bF;+QWaT#\!9=AI(2#CA8Kr?2h92Ub%moDmmI,9"8::p
%^23L_4s4FTSjO6cGeRI<D3QJ,o1i6EE:%8OenX83R#:oo/Q>?Hcp)umk<AfkZ%SHI^%bJ1ApeFG]6s5qhYV:A"pQDoC&Y4sFBng+
%p/&1sC$,khC8Kb`>RDPE7mfd?S^,jdQ>[f:G1ICp<4,s`U%p\8dg+\FFOmJb6G@bJDKMn\*p)O[crLBReDOq22sZH6Z^ag8Ra%F1
%(nBZshWUSAn;i@gJ:.=Y'Nr!G^[")U3G!fbk+Io.A.3=As&Q:Oi#X'1N^27FLuk1RkqgbUTnfdcb1G@4+W)liqF^bERF7jNFZnUd
%Ui4kCq'rDO(,bmBn9/#Si&U*mAtX#@hiBMW`2Pt(YLg6i?o.^Ga\WpY,>ucQ-bP,aVi>&H)nA_O)KEc2\VZQ)^OF%;T+0YOEqK\_
%IaBCj5)du>e"'83oZeJ>2#AB^*^>&$(ccQ.XmQ!&:]E2=V!Vdo#(8d8J3!5/iWg:c?(YT6d\+ot<m1LD>3-@ig\RU:,8.?Zhoa1J
%Si_>A"$ijR&Hr#GN^#%I,YPS]ZF,#9+BlS:pZf'ANV/u_qjf#IEX5YD>')bb?Rn.cpoQ:3?JA#]A<VA&k4iU!#NcXdg&7[158e\B
%c"qm`p'qEY)F'J3,YD]FZhKZI2P*CdV]G"4#>"m$f0U^0kG\lm$+KoQU:U1+8)/I;;Vq:Nml=N4mKmpK4AZtTqfAYd#cY!1+WRN4
%HV?P$WUY1B>?DaA@<kP\&*rPRS""daq4Jn,!C(Jb-dIcXW4?7,1A>$,,RTh1CEA1NOI`sFf\aF5q"g.%T_YNN4<um_M@B!@m9fJ0
%Qe$rcifiI4%c:ucJW%WP[6BJf5eg?oooq+pS)lj1IiQ.e5XIc3f"a1.2#NC=1op`"g3m`9e+L-LH\h1[B<@F@l%u7n8=sc#<Ftq#
%Ui3\<CXYRH:W7^iJ]A9(mBYNZQA,(7p=ZMiV&u&u'7\rnof&XTgLf?FMr->=^q`1:U5I"Y^E0u>QaZ^Kj:AYAU/ZO]n8s+_63!<Z
%@\VDd$1pre149_;o\J$9Agr;RWL@`Nrq=fc%58*Rg-bhJ"%F.i]&`Y:^.[Pme4olZ^7Gf/d$bJt*\'Bm^=`@OT*XUE:C;EON=WOI
%6g1*S@/'#WR1VgY+hPe`Kr?Its5YD*#dd,*5o>!,a@7s?O@&S,59]Q<XC!gPa7cF2$JL`SC?E,s67XD([lA33X0,U#nLZQVGa2?<
%Z@48#Tk.$0jl^/gFW.'os,Jt*hm*AA`df9ukWF7?ZJK8[J$16rp@B$n<%C2=.g;i)I.LR=>5Z/E?T7:`K?6g_!T^IA<;=L1V?uso
%3VA(s5f^T\'_5fg)?)XY##+hObGis;O[&;PT\U,rj?#KU#+W`[.9im'-be,CU?g)>\30Q@`fXSX\G&'pND0We`M]0"hSaX]hu;I[
%_3U`p)c-.h+-AAOKpLt]dm"cX/Qf&PBRQc`fZH(?&,"Yc>ATUoXcGs9EuL9(hoH1?'W7OK.ckI-")SUUeNV^e1b'-Ih#)G.DV$gd
%\(YfbXB_-f>.qJ;H3"H*=%iou>qM6n^AC'3UAJ4G[jmHHIe%ucp95k7Vb?o:4!qAZ\(J%e:##LTp6UGsnp91;&BF)aalhMAZ?!"5
%YEjP'`0YpCo<I20q79E[dUt`r[\<2l038'dA`%c.go=4'7W(HEB(^enr5l/'6&W.R=S?dlmj+n._6a.uTHMX@Z7i?KksfO][9EMj
%SPX].6n+XPql/BKDDSu'`RfUPI)FR_''67D9i?DG^]DL:MeW(\m:6TC(iNs6G\PCGb(TO^>]I/98H>Nl;_.R)M(X(43IkYiE2YFf
%-pC&dhkX"rbZfKGlIBX6n,>m91r240>NInoVttU)s"GX3]6sK'2:m/R1r-QN?@Gir(mDI&0L)q'p>"POO=m$q_?PZPhbtiDV&Tr?
%@=N>"LV:GcG5E`s2)nSI*JeOp>OA6@e4/SeSFJUg.^bUX$OhHgq9XNdL,Q2?&^3lE*==`?01/hsrXO;21P0g"`^[\nms"Cf8De48
%s(V=CGH"3AZfFu0@jCJ!Ye(O]?88<Yp;X;qMe>Zr$i0C^9f9XDRp'[3]fs\*emb,ZfZ`DE\rojr7a9&$er7hVSuaO4k`tu2l\V1_
%AuB<`=h,3)$*?][YEaCY4O/2HWscCnl.*b@7VfE>-0J[)eV3Bm1MX>N:-Ga%Cp,JVnkm!(Zs:g#&eg<Jk1VFn^k=V0)k4='C[K@;
%9hJd<c6Qc_gTBPV;>VfVCdpIrN#k,T4]a$#9D+\XDmSrtBVRJ5Ybq_-f?*&piq2P>qqKBQX=h6JDH>q)M:ZuaAuq2c>UqtQ1k`'f
%rS:d-o5Jb_;q9F`q><VFWL\LDQXTq>pZ%[9fR@%1>a[S3JRHm-o^1[U*I\oVbA<D$@]A&=Gr0e'4&Y*-SEENcQmR3PN#/fhs'RV\
%V!f'7P@J>iT%]aGO0>E.:3,T>B6sAqF6%&/=NnP<:R-1u@JbnZ(>`<Q2CkQso9J(T;Q;dd1,7OB?[%[f8)nNtJZ71RbpN\DR"a"Y
%eRYdAnJYcg=dZP!f1Qiok?8BGfdq#sprg>6%U%"l[S?jEG+rg!PZO<WV!%;6A?iHt3BL/7<UKc9n)7`&Cc/o23-(=U$%72C,dVK%
%7[@o&IN)WV/R?WE_T31G]3H;-/M3IV&L>Pb3AUmt7+H>CA]i4X#!FPTHfAXJ-Sq)r*7)U`QVF!ii#ciN'P[]uG_P)c9u"W5F,TIa
%`O"nH[nk=\ms-a8+ZFq(cb9,EEcsoa<Z[U_5\E`J$`3%B>G>_R`A$.Tb)`EN<iO@3&oN"g&<fbBfW)"Zk/UAf4$n.ggfi+fdQA>0
%a-l+8k$`/n/Xt'^N2B;-jBusjF17Z%IO_diqkM-$jKV\*!_I`[0`mn<QeD!-Pti,gbe+&5HMc,0/Z:"blOhMslC!F&Cl(sqj6!9!
%b9IC-9I1YrVTI\Oph<?mDrt)ic)24<^N6hM<!rOqdf9QLBB#n:Gl&POK3Re7I=s's/e/'6/B!l9PIX@eUqBEO*r]=6.Ql(`.F_E8
%Nn_Inj3;c1,<"FVZOc^@p!9*^KH6g_HV7>$mnqUq%*Q3'n]"Q)aW+W!$f9lbVVH"5Gien#L$hPM,@,D-Y9iWq"nCC-m!T@4Ft8^.
%Gd_mq"dl=+dG*tfEpkooP=n,V#+jHsP]H$:lNM"N:[#$KWg]cjhVb9E]l]ZG59<sR[g8?*ekt;IXM'RX@BP5O<&VmGQp7X$>jqQ5
%7JLSo^"+#QKOK6on%Q]]_FCU*OKPr?L/d@&e\7Olfi[_1CS<jTrX(E/3/(&7'49J+gl,in]EXq(i3-YFdqe?_dVJF;IPWc]=dmS)
%!"Tb/-@*7&Ip>-"hT4lc_8/-*ZP`GBf3O=lZ8;/ZR2\*Vk<Sf;Qn?%bNCPddTN(NaVT5ke[R!tI9dC7MNTpFc#PiL=KbN/]5#!Df
%>8KdeR&3ZS7h+leO6u^KHMd)3%%*.@n]X@@ic`*_*9M9c;m@_(#UnV7)+;Y$]_cK_!ncFB_".,?T*DX5<mT&2(RG,a#A51=kG.S/
%-)9\-aeP9S>.RTl.,j;tf]5#u[C&2f>KlqBoN0bkj)g:8+7H:kV5g"k!pOjX'3#pP<2T?RBjo<TYO<Hg_X0omNQ4MpEbb5)/_8A)
%X8(.!E4T0Bb(]X+0f,5(l,&`pR__bSP[O9%$8l@_HIB"ZBNlP9?^I^<GD7rk;ERp!EAhJ.g!$/&]52#_aWbJ5ClaZOGHMXgg?f?f
%e)5n3A#sj?^YJ4]5YZ2Xqm7\R"RZHu9(HG1Vn?YI(*_rZ@1+nqD]0PS4dL'7T?U!C7S(E?Ns61gSJL^u[#pUp2RtQFNY,E@>WCpk
%iJ:=aSS#-V2a%L#InS[+'B:)Z@%);Xi(f*3hVbaQ6Id2JQ=sX=?YQJ,e8)`d^bgZH?2ffQ^*O.?RXXPiMeDGUl8\00p@nf0@,pYB
%^3]_JSo`_*^;SV9n!,.H_T5Vnf@Y?:1VCF8=dZ(E`hdl@m@n0@E/^'ujeR6Ol*'PfNG-cS^coIM+RO31H)WMB,Pd2;/9I5ghc1oF
%WbsaU_Bk3=>BKTki`i9'X<S)q0"Z`hJ#3ZhF'T[^F3I03ECa=#c9SEm1kD%JUS!nVh7[!5RWngTriDV5%$S*[iPX[k31O34GP38,
%I(E>$XU=S"e#\P2h#U^W8^lk-F:Q;+F*I$3l.#rU5Lp3AW-dZHG%u^oX1`Ui^[$H`Ib>4EcFq9Xp(n=mltF^^$*1W5"$8_T^#ON,
%Sk.\&PD?QFFLot,^'<VI\DFRFG2[H\3A%4=Re^6OWIXY(>oK*M)d,=pQs@hSGO)*uOi+#LGCN=eX8/PO]=OEVCbE[rhh?&nTm1UF
%[+@,"A3E/dlu@hPNo/^\[4cb<WPW/B4InY5b-o1f`P_Y=5*HB1^gl%7LjWPBnV+jXPPo.+eDtWYGh)g,QPu`Hk>b#)2/S@@iWTa@
%?bl\g*RETsaUnr$CZoR!q9nTP4jsE6;!/j;:N,>M;l-T;ShMf/NV8tMp3mtF+`72d_;9)T4d`)cm*58%`SUk@"/oD<c>9?$"E;I^
%J[jU$.r,g:rQ#$BFBE)e>a@jVdZ72WQK.p:H1l,%iCeI>n(.f),5[DV:W?_2*'bWt&]%O'8)I5=f;kg_0EP_;<$hKbQ%fk!m+d(1
%\%SE'g93-i1B+,/0<a3X7\&Uta5JD9GUkRo^:jYu4.&n*]4VB:YOun]^2s_ZhY(!D!D70/IOSV3hTE]`W`hJYHOjP2UW3G,$W(Z!
%e9X`2;P'79BuM8^\Ocd<Y&9H^_U`Pt%pbc6^:3f\\dYB\d<u%,]9,(/YFOb4U/?q&-+^N;L-Z0<@U8u%a5kEMnn>/t$srm1;m)_1
%6<`[6bimj4dUYk6+nck)i'4;*[5rtQ$KBGEL4jN\<BEn%e<mT<AG1NHe7dFEZU^O";D?I?U-""Ph;1hdjKc2=]c7DeKAPO;/T,L(
%%e`u?>[G)2\tf]HiF)EDPSfJ\^gU2Q$g$`&4hZuWScb#nbU/D"-R[UFrF7s]4[!/5eGi^!m;hX/St"M=X!%'o^!5nJ)OI4F]%Y-Q
%8(F)"4?[DAj-bKO++;-fiU$-Ql<qo7J$`R?0rF>a<q0BcL5i:\Ai?.-pHORUhb$_(0d;-EYS7<_]GtN]gNQG"mWqkB%Z+>Ca/bfM
%ooaIhRrW]Ch73Dm4F;3A.!6]9#).'Lb/U@(6dKAh2XXJPX/D`[2RD>if'usV/uRhE@f:BQRiDNJ&p".8^7B:Hm*#nPWn?mg%54Fk
%(j&:G>\;!ok=#s:btVL1\,/nP=_Y%b#'d8.ZfL(br&T1C)K#E:\UQ$Yh]/DdgiS_d)o,Gac$k$-R`;\QK;g.j5NJM:@GXoj8)p#m
%ptRL<;Uo/aWc*>YojfjW$<VHD34%:!^o[CL_g:9]FoH1eir.*]FOK#.:A$V$CgbKHjD&`om!o==4i8WDfu!9toI%hS"&EJI7_.A9
%b,emM5%M+1NWl;7B'7?sY1I19]f7&T4j)T?N8F[gPQ&U*2`mGG@;0n-IeWZ7ce]hYb]'_NFpVU_6e+3oG-m>7G!"nudd&,f]t_hC
%(\^@bgtOuU9/He":-GHr+!1k^eW0#!lG5*#g`3dj5E2,sE3]+J.rO@M?/C(Z,YV5$@WUafS:[A\ir_3G5&<2?SC7E7>GMFKb2sp%
%iV>pT=@(nKbSK=n)kSei\=(.IMfI)0-hlc0>H8.27\AGf[5T9m1UXf5F0Z=Oc.5,-+e/[QftUfu1pO*8[6PaV*Fq[]TT[H1mq3`C
%@!&gig"ZGP5"5j,N"igTa@e8I]teP=SC,`D=Y])Tl.u!2kdff8AKSs!J2b>Rd*R(Bpsrb^*ZbgP-R_uqMmKYmq#YmrVl4OO6'f(L
%N=5,T2S.)hFuc^]<EMD4j:[QDe!69M`T9PnV?(hJ&7dGPL!.4'8i&42Z;c9X[;GAK/bucKF0V^2X&#2f:CH?"EUqiK-7]t'iCbqQ
%S@%5uEZ3T.[HHW%=_d-U(r.mO=%N:\eEbtss1>s*s)2k@HUQTMP/LEf(VseQcbDlD>+](`h)_b3Ei=5oPO9N&q<\p8m4l'G[SeXe
%bW=-C#)1',:Z`W)*8BW$A?[tXSQ:.a=P?Y_hT"+"U?h6[H,dr'Y#i;@*^<hC0$[]Qc@f!F,E9puk/5C=d^>D0R"h^*_.4k&J$jZp
%4R*o1S.B6B]POj_/5k$]dS#q,61Utc3g\V0++s2\iX3oZjIQ8u!gb\kUGJ]JEDVWG0ITNN0si</(RJHg5mgWo1HIWW(-]Lp&(/PV
%A)L:_<->W4^(H:C]ap<R-gS>(@=@Aml#/*ek]EjA,Jl9#4Q+=SC2n!1X9_Rr2f;)T$7_B;hE9rK.gr4M-mS3%o_DcP!,0VoTV;$"
%_rp1#q%qLfWu@T2/`g^pT*X1>dN4BdAfd+<E%`:#Q9O;Dj<a&ohe_3Wd9bt4E\[.L1cpoC,CR&p`>IY&jO$ME1KdqSI`j>*MQPcl
%/964n./[*GKQls@l8RdfM;m42l+F[d?Hd6A*37k*rBU!6%[4*388"^C5IoT$TihJqo`SN[K?e:Mk-uA_;>.UZS(ZFR+2pdGROKoH
%%OVdak>";r5)l6(,lChn/edW[5?Hf,A6*hjol95diquS3Xl#A84MY44WBj/:O9^[BYQ0-rW=(-!qFEB/'b^ZZ<:$IMUp+WQGadng
%-9`5r5s.8tq8C(mJga;&UE-tb-(8(^k;;tZ/""0^<2TRE4($@IlY*q*iL.j1BP)=(+oJnlnCJ,V;boZE](bXVqu,ksl1O#Za?lMO
%rdM4PVAKWtqn8_T8PICt`77lYpiu.uB;A,mrKk"cDYE!Cos,5Q`R'#7dqajDqY"S@<d?fi$t_EGBQ'qrL_BI3o]27;;J;\0"'p>E
%1@abge=*,>O+-JocE1$Ca66r<2:fcfa,O'k[2o`+kD-UGo'QB;Z0:ReIltH0gmbgqc5KpM;kE&YX@]o>@&V>6rZ.0U>sCMHmq,ai
%BIcsg>GIVP9J/?>\[o;B:;!(Yi-GMWFXdA331E4uRf5jIHOVImTohI=c&FA^BBJNJNRC*SZT1%6UQan83S'Q`Q!B43&'"&6(j]ls
%QG3]Se]#Y%ID*`Es0b#^btW*:cW==LkJL\Ge.(W:<23e;6!baH'?(FXQhL3W;a]*CP^2oGnD[.)\mgu_VR,_K=]^H&oiG\6S]Y]X
%8/'&Fdk%WTi=+6b^g_30p8Cqt>\f;TcM"Q#o;,@TG[BO1pJ]UFEP-IDH!\ZV*4/YXPU8?B]e+>HpG\WjXQl1GX9iSpLGWMt7!Jhu
%c;?4'lF$5V2%mg"a_&j!<@=!P>2caL[L<Ri.pmA^LDA?@bJBXp%=4I*no$Ukdk8Z:<MsU4EQEu"m\):]=af.]S\La*"P/Ckq_R^Y
%)dY&Z/abOn;S'f\WJO&+@F%VKk)/(TCo'tpE6.QAZMq3ih%QQeYTFIuq'&s\<`?uuhUZuo*MNq[KVUJ6M!L@L0Us_$PckknBD(H3
%>kT&D):g=kg[h<V#^9l6#55iln'/u2eMCEcj6bXp]>8iR&SY22KmL1@VYnrhe5XE<2@e^g'Aone-U@Aq0=.u$_.-*0WS'HNW8,Z\
%K%=a4S%#Nt$:n0B'!/pDpop7U5gr@6L&%(3Sgf.JO?K^`K4qs4MSV`*#>bZiVpuEI`+o-"=\h4T%[L;k<5JRq9YCr?"2VF^AB%$G
%fGUjaihkS[s1m-N!@[;W1t!)g7(M*rE:rQ?5#*CiK/rLJLpN^dP-pS-4ue*P&r#=+ZPe,ZqGub`^Ume(fNUQsoB.J)fM*70#f*Cq
%gohm=3RtD!4e``M"Z'E0p?gDSO50Z5P0"7'in9lI#gsN]!EhHQ#:`q_#.K!=A@sW8Sn,#o_oK)1XDM6Q0Q>3X3O$[+ZeVV<P?@Z@
%[+E+1_:DG;*^pqt8UQ"nr2A0u't6(@\7"&U<8W<5PK?_9:`e?:jBUpo?E:)I]D&d`qhOtE[dR)mDrmNb[9[KGbK4tIXPH>*,0ui1
%eacK6D_Url^/fW]2tuWd2etXd4Y#TpTA4(.5?=i_Ldd2n>[s,W[j?tT8'Eg]J,dKHNI:W&op\"`==fd*K_q7<]@b*nZHCDYXbR:p
%r)e"hFnDmoZE4mcA$P0a(E:ulLTC#nX6m-SgU[;.fXp?0ji5o\)h7eU7k?Q@T8COa-\c-9a\>_dJ\Rc3qkNmMQmO.]Rg0l6IMcq]
%YK*%,WPT0U#Op&YYa/HEYORLiT<Nm]H@#0@"[>[Sd')."il3>E\j4$-<3WTY^[?+%j3-FEr`Z+)PJMfb^^lXH3;?r<fRJ@#T;IqD
%=&e9s'8bcYr%a86L(DnU??R(]1p`+rZ_5*okO;PVWXg`JC^Y]Z(%g*_]%h\N?Vg1Cg$J\.gEcc[LOVWT-(bN=qNZ7<_V0tKg1p[8
%m:PSn:eQcqcoKs%DDBU3-Ihb3ZqATfmO+(Q>+k+Ydh;.5H'9h=c<k![d9("]UM^BRKMQ\*L][,-8F/o[2Umc2N*abUpS[$?O$>n*
%S#aPF<Z]NUm)>gF`b&.j:Tqt3LaLIhs,RGF,Wp?k,b0=oA74;%8"5%"O^Z1Nr/Q<[*T3EkeVUD4JA5'X`l%C=U:iY`bJmt/_3UH8
%F`=]#W9`8m=A)q)*[VCj/*!Vqgk_gB9dUq=DW@/HQ_j%nrHroCF`$PF0Cu$.e[LH/WfNp$_r@'nNSK;@deM!)=L#mV3(P!8`bZBp
%p2td)1uPgXoR`'8[r]/NNHU2/r%[rO\J:#U\!trWWO=hU.[1uIpej%aeE$h5?^n`VaJC;?34JPlfCnl0S@i(P%d<?R4YSKES`JA@
%#XhX1cgfM$G]6+>&I!L=+f24<=CFHfLGpV0_ZuYbpN@Q.(7:7a<^*T27<95[?OP/#R_;aieBZA1Hbqh$r^"d+7r2^.bf3-7MQa;D
%de\#9Q9!F0]ZkOL[^+T+Pn#m-9hjLRa/4%+hdY(+iA<8N;\tl^l(,K'hnX-["7HbA2Hu/n,Pr>9T4X5-A)jiQnXK@,a@p2)2Cda@
%fU)gk*adX=_qWh^]XJZG>cD&KVQr_bf_!`]+r3B[:;pg?DbjlLf@f=hU+eYDRsV4f`Osh$K:$?*E_MJ"7q8Q?@Uf?3ib$EYN82FS
%\80*9eK#A4F*]u-IhKAQ/JO+6VV'>lR>idODskSF:7!#3X#1KMV<4[3Z1QSf>qA(o*0'(Rhc=7Q@u]g,`a3.#[Pcf2`jYJKGHoth
%pf)'Zghan=$HYp,BOaQQ:;$1^fP0Mo3-JW#ai5t%Q8&%M]08HaZ.jorFmT+[T8=:X&!(1ro>YJ1TsVHQH`H8`Z'THK4n^pdnJ81o
%-.ZOD`O!$UHUb.Ka#<LZiK6TEB6ZNr1-RhrFFGtb:To#\Z`UM0@;dO.0W`4<.nhbc5L46X#J1Y5_[H(Dlf$r^r8R3\oAXUHrH*9@
%S@dV*_](NRe`#o]otB=tdZ,A4X<,lG:YM_e_\X@&FIfKC&)SDHmY2+Q0_N?#L)d@d^]:P_NLSnHI^"CPZmSVmaRE&JFC\X[4H3$7
%$>1Ti7hFJaFV0T-j!m5*]]NECMt[Si,HHUGQQqpSc+T84,;2!]IJ0s'Z@@:q7uj4.Ak+ICVC"cM_T)(9IQu^0.6eleN]bLeB:*;,
%G*m^sBoOJ^7u-h>*_%MhdZ:0ngU3qVDdhsWe;p05NeZ/0DkkK[NS%o*,:5n3<H<8)-[t3=*mV-Y7aD_=CSTL&Vu*7bq2q`*LRkQF
%d?j`2B=-&m98ph*3`mpi2L`BP4VmK[JG[$LYDnrn1-W.V42*hCnfEh2et*AC`ceeVVT+X4@Wh$H\:$Pa>CCc9.m6tXf^mqtr`J3S
%pc9HHjn8De9BfhH1&flDf62CII"#F-NNZBGk\Q9_RFA;.Sb&3%q!n.'deMq?>%'P^<V6&rftSH/A^1qKS_:!KM=K0Mm)3^cmX.?n
%hBXE`%Ml2p;Hn9,Z*ALPRb5A]?C<dR9K"584&7pO&*>'"n[cDR2pm(W>sW<eZ+Ld?9K\!kP9r-XP=s4fHSV'p31nt,*BACM3uXa(
%^<RNB9:Lq.a_JsSPO6lNnC0k+>b%6Ua7lLup@e(,b&&X`[J#o#:$j<78lOoBl*IAdH>IAsZ@%V[9YFF.IsN[;(8"?\?]@aKS'9XZ
%b.<%i?<<o`l%AMPIeodF^7?lUo@MGEQ(+i=G5^hY4uN"X':2#`0#"PR>_m%\]ncCN9Vr^mgGs2lo>@]8q"%7BLpr-MnVh^)nno^1
%,BFg91Q/U4X-mcS=.._l[ROj]DYDUSnQod>?4/E!Zbs32QeC&sjnPpJT2!TXGMg\X\#Ku3fi.oSc/)g"mEE9i%\I>pO-a/sT"<WI
%R.3L#Z22tcBbFXJP@oa$mD[I@Id:N-;;J<RkCtqGinWnZ@::c:NVISZcMHq`hL&PP?(Plhc2g$'F)Urb"`JE:\`g#VOV_rTcf_sc
%pATklqNs;7$4"`JC+un0gR,p$J.T=kF(4BIl:GgQ]cD)j[o*o.\h7a`qknK$XceohBd,0rle/;n9&EsroBF2^/<u9tI+o^1:fEdW
%RPK3S?D[Vt'=DaWS*D=?>uf5*O+A?9g[hYJH`ip"l_R$3XuA#n_tnb,[&qLfUFk;"UFe_01>VZA1HXs,V:/rRakYa;?^uQ:r3r).
%CSn"..jbi%lR%se4#4j37sCh,SZJ9hn7(0J?Ya/hW=i2XY2*udgXBa0@S=uBZu))Tf^.sq"cM^4NF49-d_Y&9_JW3'>($lNp/Y`Q
%b?OjPCAbFN*b:lY_u'!Q8:Id&1I#0U31->a%EC_^XfTcSPb/lcQ/a/QkZA\XWn%u.H7cUfa\9&WN\`WK$`12SM1p-04'V>(8,U?V
%oQ+S`s/EN5Qk-?t(>g/cn!@Wf0%*D9e"s%?h>C2kl0`Y8CT4T'X6#bWXlf1PVJrlS]/@:,I!<,R/?mp.1r`U/B@ALabIc#gQ+b32
%r^o@5P?DTXo&8lhhV-b"d]//SUWKdnC?bDfOc8,Q]HgMVWfkSl/fp3hO(T!FkDB*M7/ejcWUQSPRbDM$c.$TFD'[YF(,:T-:@(`V
%FAd!0ViTR!c1FA3m5-VFhC3%&hJOjM\X,itDU+i:RE#3N;0Hi)\WTYjdo4q`lW>oHR=;ij9q4AUEXQqa@;`RPEfqs>[9IFOq5L2J
%Il=fBgR-^6C"@1AME>TlnYtZ^(N-)$1],F`p%,*Jo(qZool4L(G\_RL3ApKBEH5&QD`iejc-<5Jgtc3fO2Nu<Nh:2IT2*SQ>EaD8
%Xf\GCgXE:BE]sWf=_VeM#0i(nV)sOqSD-OIam&2je#VZ&.1nYt=g"RK43&]`\au=pM!`4Lj3qnoA?U1&r/ogkf>[("?=G:kYa;on
%jPJF+B4gTaq_GE0TCO6()_9O2rO_c?q]L(RcoDAPp#1P:E,lAa3I$@LWPcigIID,D4kmm'?uG)qFn]G<BWaIHEjR`K=?*nJRq`q`
%L9KXX_=>\-nc&IIhXP+QTl;bm4<6FR?#@iY>TU!gS2?9C?;CIR-#pNf[(LJV0V3\VRn=]0ior#ipi(7s)2o#s2'8-jk@X\Tq0XhZ
%\T%QCZ;\DlhiHKLbfr`<ioWi;Qa(r"iH"p3HfagCB"i`iR[r0H&eD,/X"F!hHW@X//721)'k>k[Z-)2$FeQ'f'>$hp__a:[]CU`G
%PCoXtS,.-ThWh`k\_W0L5293*oZ:Cuj<T)]0e)Hpnbahb5G^;"pZ\,k\\Ggm(\=C@L$SZZlKMINEcqC1hq?XH-nHA+mh\_lVu)21
%FQ'G@m'cF>7.I3%Y);nSNI8jl4?f)AMI*X]H?qGKesi7<hI!ifQ)j/'_[!UK<d`O]47>;E4KPPQ-.U#qhU2,Sj%HEoHVt*VKr=m[
%f@-Y_9=%dKf2E'BK9Q,38o8bk*ReZ-?efli\rONh2]aoD?Gc5Il/aacZnJQE7_ZI$4UA&(*Dq8+5(?je?!TR=ID(oVc.^*H3)Rjo
%M!J5ac<I<pfL3?c\ZX6C:PIoLL@k1/)Z*$KpPjJ][L(Eq"o$4>gY#&F\/A5%EcX*XF5"9r[VN"EZ%m9Pg!C+fq''[*`^'p5qm-SN
%g@h?WI_+i)H%hmaTa-58c(Vi^?N6@piT"dqrClYIYl)"`msBG+iB1l0HX\_PL)`FC>NMQ+ZTQ`d.M'(&#DQFD2L]#22>$X@Ec%b?
%a2!0Q?Q6k19MrQ<2h[*:$iejPX@/+U-AG9!1bej^idLt3s.eEgC/gmB]f&hB<Tq=j\-sGN0jgmh<GL<-W"4S<6SNM(J/W6<W*RGp
%MWLN=4`-K,WogkL5Oce>I%sQ@'`%FR<i>_G$f8[__ocJk2]0m-joZ$8@+Fq*hL[5ZThatY5@:#WJp,3aLh7L7fW6n60=u^*^pJIF
%/(sjoacQTBVLEiU/6^1n4'sN"S):o#&Ij-CXM"Nm:>5^H3>lM2#p&Fs[-uThGn!$>&'qq<[Xdf+FMHHG^%7ZW4]q=3\@f(=mCVO\
%U:0spa7@4\%oEdpHi39K5>fm7^=>Ct(JZLB^]/o&r5LHT*Em5?jb0(4^CDe:^%LmZ.r'Rn6-[`JFbnV\;m4`0:X/`O3<R.7*t\8C
%d,T=pFO)T3a`s-%5s!o]B5K0\+,D;VKMKu`2u$S5!"SY!O3[FeTssk-I/P6lW;l6D$@&0b?U<("mX+*Ps+28?pQ5'?GYP-[2Vlu'
%3O.CQ5Klp?OmY@e\5fO,+Fh.S;Y=7IY;PqOpkE'<IE\]Aqt0;S%QFr?k25LLQ[Y.l]kV.n!>[-3b:4GWOIF<ZjkFDo^;?+]@lSc_
%7"-:iT5=6(J*C<sf:SecJ7Ksac$CPjhTl.rgsq#60:4Zpc&2N@JU34B2rse-b^L`3Y4Y8d#Wh%[m/M["5C_8Z45;#O^Z:,6LRpeQ
%riOtgUW[lMn@mL9^O-Lj:MT_i:6ba=MWPb:[X,+JB<QmZqaIa/JQL+2^s!=M?iNO5:H'N4[<Y95!g9coCEF`A^L,j,Di&t)1gJm!
%S:0]an3"a>O4jQMlN/`1N7`,]nAt.c<T.!LmIKdGkI".0=/rB0(n,[>dYI+k*p.k=R@]]DZ[2UPIDB]<=85Y!?RhV\*l$)]T*]HY
%)STS7+[8$bO$U,O-^7;s[gj!(1gr<dh$l@$ECt7]88*JN$(hWX&1`(<ki6+CVs!![CA"NaA+tDqnRH["(]E,ZCu9ZWFUZ"cMm)dN
%[I;#@AA\?B(GR0>^,'ZE+oHGho^Pkp5!l^dJ,RQ$q14U>[qc\V_pUaGpt!PV"p4O:A'PU0GL62^qk+NRo+&NGT#?-(s8LWbFDqs4
%r,%KY4mWR:d<E/jJ>EPH%;Zc6Q9RM`Pf9g;-[_[@\+9#5an4h+YPZT9o7,\:S++l__#?M#MJ["ilGabmr>#<Vpt*8o@1k?"C+'?E
%If!@\]cth_2nLXA9d7@p&>J\^o0Ep74;e>je58dn'SI[(";&"t*W:WuZ"#0q5oBIF9IK?$hEe(QTa;D5AAUlkrH,me9K89VIM0D4
%&$#t1_M/j'M1kOY2@C-`J/u<W&bo64KcY]\4##I;9*cgF!31\g)@=Z]]s/1mI_t(le$Wg$)F',lH58_(9agW%\&-2%TXj]&6;PJ<
%@-OAXmsplN^i^ht1*hZTYR0Nl?oaeb(^P1SBP-cbd0>=4@7*op`(q5N!eL\p/?VsgcAWI2CM!W]V@iq7TEt_\"$e3/[$mG:JJLAA
%88+b<&69(]4C#0<M"(O>&0W;P62;\-'IX+uE^p]AC(MRVO!1)!l6+%:6UPMmPpKn<!,*sKimEkZ'X3/>`m@VK0F6&+$%6P%pg1`l
%.f@B$jFr:OcDV@DYn/;`1fOM&3OHG@iVQ#1Qm1Md^k+PW&%#Eh,XD&[")q8_.N!]&#rM4`S!U?K#6`Ntn:38Z)e9[/FGLc3"r=AS
%OI/=fRLoWefHYHnOuOUON+@a?Kd)24k9iYG"O1U:?n9$(!:/XMN(AU;3<Y_iH3u$Q7HqT8-<1sB72+Ys_F*HjWIU9;nO$"^+_g<D
%6%sq&%sGc&dPoO$&-AN<n,tVt4p_SS>q#+H.'`u\*mbriqS;=r0H3WF&P-UX2?[PW!AjKe!bgLmPXF\3l>%BV-Y`69?pKBqVGSW#
%+Da"KO?u<u!'&!MMYejP9o=IS(i#il!L.]>/H%'"0Ms2N%'Y]p,m.r#&(#k7$4*AG.gQ/61SfgnlhJF8^iC3A54$^<1J\i\8kauH
%4.qONE@=XOprW@VG6G/b6\,F>#(-^$4?&K*"9W*6!j[_/)-E-oR1+Tq+2@7S643Q)(_^EgYc.W;^_/sIr?MqP"$2DCiHHf+T.TCG
%J1rco%HK&*"X-/s8P3Gq,<^eV)IrqOC'!'-Pq)iC*_?tEdY'u=ni+'IMcp>W#`(C3_.20+5QHX?jV:B8E]Bg)Ra,PS#)t0JCa5Ll
%"'kt>BljNnO\2moU'(KT;5C?[$S$`.p,$P4r6cgQ%"Op8blDQN)As^<_@PA<'q::$W]X`J&6RjtA7P\WOp!4AlUchE0Ra!&<-l8%
%M"-11c0^/WU[_bUW%Knt]?l^t@8Xc_,d;r5K,o5,JTf0L"LK6&1:0bR'*L-'BQ,e8!D#=,L]hka9TrDeJ^s6[KpE7V)mC=O(/R[q
%2>#:P6H=krraiZnG$N0$eJ(WgD[b<8;#_XIAE#3!fL&#[nq3lqOV+;hU-"fbi%O.h'OGGQEm?R(J>nX>6Gt\J#"@?O!X+$JJcJ/l
%":;t2nU:Q#-oTJe8,KR,.Y`TtjNsgl.,e,m+H>N4#c.8Qi!)"^6'*>-gj.?%!J""$ajl*][%T@1F<qVO8>7ld"j@j!<VXB[)\FUi
%aM*2Gq7\2fmKI,+@95oCHf2Q.ZU*$<aKQ$Qb/>072XI.1fU@=Y_`D5#0EB.R/?b>?14a@l<*>m\'>bU*L-<?BR<(\Mlp<[q)M7_$
%*DnF'cNm\[*='C^6<;X0Nt<E;6ahY3H9Xh63_q:"#cnSNNe*CRZb0]@=BL\fA1sM;T^B/,),Vgb6"X/j^*IV$N<a,W+;/r&2?>AE
%_?u%KZd]T2>ThE8_igk"#knBH#1Z-b"#_j+-<M;)N*n&rMI9OXCVdTt5U_44e=a<pX$)2f4(BJJ@Z\ZEG(;F9K,>5%J4/7QZ)HXo
%&84N^848:-";(!VMAh$UZ];H?0G0<s]9-.kN#;WlTS832NR=2Z(.au=qZXh[M2&f0"Rrftn45m&l5]$klPr7)-:6aVN<)76O^8,:
%pW4*M&,6acGfF5`g%3SN5^/L\,NocE+p9VK*XK#OYq$D!'=/-(+aJ\@aochjYKd\Ii!RTO_.pKT"[1jb1Pma&[K@F,W<=dg!V&[5
%H'VDjE0j!d"69T:)qnl%1d`CCn6)T_CQ):,=i't$cN<f[Z)Frp?7[cM.RcTf./dgn&?3Hk_$G`5<8KNoVU2h_9>g`akT,6N`hH1o
%$jlF8\u9(H68oh%$'p)Girk$siW9*6KdD77LE7VmQTF+,UHEDu8i\.t!EYmN3:NSOis&s$g'4;P5N4]A+Fnk/FfC?gf+B/5$',YU
%=@!M_"^M=&*sU=BE&)O#V;a@d#.l&XdIu$SOe3&(`EoKF!1alM%:j(/>`BdYRP\P>E,re<A1n<"&2=dt"6)o-[m`pm###4L^0nI8
%e7]jg\HqnQYrT'Opb^p\UDJOP"ZO<.#(7%kadiabcW60t%)O7q#Xh1deS!1*_7?=-4_5J)"6V"05fh2$qTe:W8Y95mA-)maZB/M9
%IM^^)EjL-]S`]n0@-E#jQ4I]k55EggM@#o@DU;<pNqH7GaHt6jN%"CsdJX3g+[B$;lP,"lng"X!.f]^TdgUmU%AACbKOIX[S7G&m
%p+1P5+='5e"p@7Jd%ZjrLliiJ,g&4L%!rc*U;hB_%FFIG2lK(`*>o0K1I?`uAW*5mW-.e<JODd<+F1h:V_/C3,kW4?bsnVVU@/L'
%%%>@P7gt*4(_,%bJdXhp/tsP4k-8+qaOC=nmD+aYYI'-Q5ZS:IA)IZ*IVCJ:!"]hkPU]>-n"Vu*-3T14f'l9`3[:S,/XgN[Qc-;,
%IdoO,PX[BLMA0N!g(1:iNP"j[h'-T]8Nr]MJL2a,5gP\-8E_Be`sif4)2s:a0at"OOLtr9P),d,H@ig<^^GVU)VL/S&%s.j$pbL3
%M]ZE;O0f?E5B,T&\WC2T,eDd0#V!Ff&9:6+m(rK)L-GHK7</Pp9^GUH+=,PX"):Z.Y7:hqMOdc.IoN3TN:=7u[,W,.jZX4WcA[bT
%D+MSKK<%O/JfJa"@PJrI#U3D;TPcYKZ9>qq>t9i*ct5isAfgB*aFRY3bnp.P2]K=c=S.NmM"s6DnjCT^_$rFqpk0;a)SA<,D8C,+
%Y(3:?*@ujV>#P,"*FI1d(llHD)Z2ur*\b,s`cmFZ`bC5gYYQ0[!I8K&atFSQ14KT"dHO,K(a@^48cl\"(L?j*SMB\,;+!tH8MRo/
%2@B,VVG%<Uc""C0/gP!7&8r9TBo_XK%l4t<P_$K"VbJ$1M4TXSLXJ^c;$BjQU^etg;nt2SA.has0fqZr0kfRL3n0<40qV\l+-i"O
%j=0o++!kC6q)]G0:d6dARMcYm1Ea`*WD^[1(6O/BN,L^_p8hXd<hj&d1P!S,lA3U%Yrb?mL5(lPh4TTp:TMPW6+7^59$3Y)`*f#<
%")ZPc#RE:?h'0'!]a<(`A@#(J2d%Vj^P#'R^a+J#I0_+H`hh)p(kc]G-*$3H#"m+RThKf(Bs\pIi3?8q+o48a3\m(o7$EA^@$.42
%^_:JhMe3)8+aH>OYrsqN@'<NpB`W>NS3)^"b\4G"OqLSV8$Eca9U"f'UAtWZFHhQ"BcU5+!hFY_)G/)`TL%1%nOPii^n?.([$7rd
%&@\^nF$dR#&<@eY+9=HJZqs-`&P-N.q/A"ubqB&Kju<sI1a\NMZ4bt6+4VSg$;?B-11FMX)^KEV&!7(N<R3\A#5'M"?Cs>f+LR17
%K_[j>O<D"Fc_I^S5T(J^U>1c?aE]'Nj]Tq3)9:#(q%RljLfadn1^bR%Peo_YdCAf^#b?a%,6Fu;dijKKDIu0^P,OOS+XBGte%%F`
%(gs-R7_U/-!n/#(jC5]S&iQQ5;!7tI-UVeWo8=IO#bO.eTOTt?k#:>l/>aZt;P>2DNl[]Qo7"KWJi&IL'W>G()$9p*;D=mTU*(,#
%i#FIJTg:#]n!^6&Fk!+#UP!GSMSNmpbVPACk_Ce>87%*kc4R5/\st).Rj=mQ_3n5dDkd.hL5I$u%KOj>.:n3\m$q%-)*jgYS&#XL
%PsQSrWC.4NJQY91>CtLF[Mi1X6B4e=-un?i$35=q\>1pjjA%4L;cc08',o,inn/IQQG`b><J0JMq0rg5?#goSdPQ1sU;58L:>-Y<
%$*Ok/LJ>;\.gai;3*HFm6cKC_d\T22O)hn+1Q9MA=qcW!TmRVBJ8;c72B![#(!Kum1ZM&%K1ZJ#Ol(PDjX^af(qGi:i,_C!bmLI2
%JO(/co>n'W"QL\X(u'1#_'<E^O&cK5A>^*%"0>_ki"k/"XVW]U#UF0A=(Z3"nGr\Oqb$-LYkWL.Td:GQ3"F!q=0rSl)(%'uNNE9>
%E5G3QoJ0:]PD:,e,1P^o/`k)@5'le-V.RG]LJ\8::qD%8OO.__FYjI(HX*Q=pCE<':9\gKmP*?T.TUDVNWE=r7R3`>RR*o#8B<Sh
%8Rd=W\SrQhi1u$p.0oL>Nn-(O'FGrcI5`30k]R@gc-.XfTOnhcMNkim'0m6t_`9[F]gJ,FYa#03bqP;I^D8sOC5'mQ$"`#eo6_;f
%lZ7ddJOU;E^d^nfo7]BJUSo\09ns*iXkbE6`R```"U_V2'O!$,NNX<iZap<dT]_beR`?90La4h?^4g088Wk>-S?tpu&qi;<%MHCh
%D>*Y(b6YY]Jrbm>,=Dm=gPl5O%:EjL(Ui^=!Fa@86V^h!7RWI.i;J<[2P;nE.-ma]':g0u(mP`.V<;rSd]?XThfUcLMD,Q9$VP%Z
%_pFOikEN0/<,`YJIGO9,_$kCJO$TN"4>:5sg+Wsjfr8ht,=ONo%,=.=U=3<X1kR0,(@td+ct)&IR/iI@\3m"S"ODBl4,=h*%,Be!
%)`f%FBZ#)m!$,d,!)Kj)i,KsZ:bDdfdI[`rd`aU5-50N_fF=^!^CSb]G#Aa9=2YSn63%\41=5b_gB.pNX<3QUl:;JA0QJcMRWTe0
%Ta#.OqLkATbWuhG7feV8NM_5e9-MrolrA_Y)+@/fKU>F=SM?>pJ'noOC'r/qO9-c002Nab58\^l?-lG\#i/n1Vj3!W>_kB1-o%#U
%HUdiX%+tZ5QoTs.7mqpQ@:g+k;22Fj(h93e6$sF<GpE-?DE=g93Ps78pQCb)`T/Kh^Ypq"#sSh9#a]uEh+oCW\0suVDfem*LM+bF
%5Y)]1nelhW+R8+='!ReCZkFS)$c=A_:!#E>.Jd:o5\Ad0;d6_B97ANlbBI*)X"EMVh*Rg1[G?k98pNm_q$c[^*,b;&M.[eNHt6TG
%_SR0X1aT=6oE<]:JE(N)CO:(E8LXc`dmqd\+mL$\o]Tdj6JG*f$L"&dXE22K(ITHBiKIR\IRGAK#sD0\R.LK:`mZ1Oh]lQ^p(X>,
%(g)YJD8@+KKirG"/@H'lVhM(N'h'S>KF5V5G:(0$a,j9,G:4lh6:G=M\HXcem)lUM\D3!3HhYZT=qf.8UQ*raD)Me6cai(Eit?9r
%_@KD\Z;m*1VM?X+7/9kX8"e3<cd9-A/3qe%Tfgd!R/%KPMGE^S^rM'GA"9\6!)JqW#e@ePc%7'N&2WAWJ0bF'nD.4XDA!,*p1'Ym
%cmI[L!>,O;F9:/(RM?]SA1a`!L``J";%KoH!_&&>Rud>;G<&Mj8M2TfYOcj$hEh8nm;]#Ocj>GdW_gcd5ili3Nprg'CFh[.d/q=K
%Voc(BJ[M7B5c4o:5Hp[!IfPrN&k+?@Ue!t&X-"M3N=\E5g-P'2SERUQkml2tUp-<413qH\0SuAYiL1/oo"-S]K.A7raC=t$G32eE
%f#!*9%#o<NaTMnj$(I"+3gB$Y!GancRLVhc+[a,nGOn8W!\6Fh,&H1*`i"Gj6l%*J4qJrr6)YiVc)JRK(NRIaS;>CsLZKqST+?Wf
%EAjb4.-XI)7NLhLAuOE.jQ!"#F$FWs%*OFC9EQ%k=@]b!O(!p9$!0<e"/pBoRfVUc6%E79*#\#q<5'tpKR%`pS.^nkafTrT'fn8%
%S5KTIL4^VQD7WfZj&D>;;_n\YfZV3R'WX5pP#Pk@/s1;p5E%E-=]WB%HJ$Wc6nbMW9C^__PX_TP=>qBO'a$pc2)A9V=A4]B^]B6e
%BtjS,"ECp]l,]m.<<VLq1cSj<mkERsq:*L'ADaF\AVQEk6V!'I>G$cQn0CRrp33o2gMEFAm4t>l%\PM6K&jlj!6&oU5cnu+'X7X1
%-`2o0!%%Fl$[%ruLeV&:mZNrt5_u..%mmKqTZGM8,rcJbcu#Jh$?m/T4(r&gTOa]'oF0tT:;RAIJ-e5<aagDn!AP19n\H5jU"g/9
%&S34B*G`.rbRg64W/(0QXJ[7mmmfJAHJC93Eaf6dGZps)ZOR=Y[=a!6k@R*]gs)_CZm3MeXIge7RNl9/7oWTuL*K),]mu.eKJ]dW
%,cBePS/PFS:8q\GW08<.O7YC4C-C!E&pZnY,W%]?21t8TfE`.0!M(^(#9U87)'U0,*.*qITT';5:phL9s1mZp([XX+IfV=<+eTD-
%RA%#XP+hTGkTf<R.6K`KFWE'>)'::H/>9tg%Bqu_^iEY2JGj$-@7!1>d=PJ[':6GrC*+uIgjn;@96RN`<?'$#K9Xd21sd712XKST
%W[sD@9$/ccOKtp3E$"7W*tuVF7q3&ES4U.$53<udZm.E_/O\]+A0`ZdZ,>oE(Es,YnZlmGPcjmKLaY$oF?1^pY]S-V&V32'pAkLA
%+K0HsTHca-U._7'2peW6kmfR1A&Kk<</Q).*s8ZI#5WQ[cijnE1o1QV3t`f")jG#iqjV^Oh4Y$cFJidOKjn_ss.LnC9O)mg!r0q"
%B,4beb%;QaMh7n7Pa^Pk("TJjTle7.RT0t%[IuQh.P]@JPi&<bVaj5m+]Z$#Jg`agUWpCQ2$=+gm#-#2Y&[ZQr=C",8^.f\>V(J`
%BMM3pPGG`]=9j_Y]o[hdbd&,*jZ,#XM<]hpH@mCqbi7Y[X>*tOAMhpd.6]kk(^?&5gk9!!3A!A;5fXQH[C,*i2P5%u%1O@TEXLJK
%V3#^)"S441B>CH<0h*Im^c=pk;6kDKk\7%0-JQbBQG2o-`u^[dWjBMt;B23aceOqnLXcM5,h#O[<miS9j*h'q+um1eJuG<(KGcmI
%\&)-kH^sFlmQrBRdLLNs(35fDeM2r3>A81nOCrs\'fp6HX!/(B2U[Xg7e3\okUGLBM%6C5cc%AX/9OpfB/&cH[Hjd<LZ7f1?s3]6
%gE`?+L/dcg!'6E9G&lG(e\IlY-Lr!T8ZB5F$dW5q04@[,=OQ]+h/Z[qE&$c2"2XPK>"0AZW\`l%\K_o_lL#+:,FAV0+5BITc?!Hc
%XAQ?4*Oo("BCWpq_u(@F#LC.P)g+!2Fr;-XjHC)P34:^^M@^R%5eQE=2&YHWA!s(3W!*^NElo(Z8K:uh/o=6=$.2YGPTLXPiJtR$
%%oPcU8e<_49($?5VomL"b@Kf:%#m5J/q@2Jm&fgAL^):4k\O5:9NX_Q8eVTrPT)akf]*_1U`dTXj.(8L7/a4W>q<S<J<7S@NJ$`3
%\U4AX3gu*:,'X\$O-cf<!md-G"e#I6#6U<lfseet9A^(?#RI\;!$OhC\l7Lm>a[=f16.V&Z3L!@4LA_>98/qfSLIIa.-C#qo)qBS
%pH38*fjF7FQ4J=O1G:?:5J_CbXR/=FWUS7V.7f6I34)TMYnB:j;)bd,agU+o:[I;=F,4Z7Xa!<SOa@Kb3G.p16RDB7Z8G2tK_:o[
%\Rnsg`3C"o7o1=\OW-$X^s'.C=uf%%_H:[=2CQ@0k'eS^lo0W'</dN8@,K*0<%3_c%<k,\7KuFl23PjtJGoq:Y;r-(=G=[d(o0Pf
%+i-YQ!F=kBZ:c@@b`72U&;BdO"!%^-[N6?RX6;J-6@)!.bS[HMi@1NKk4:=WIUr`SNOp?AnG%l[8Z[ZkYSO!<-qml^_sU-E/\%2W
%"34tPfo=8'=XQP`#s5_mCbtlF;05UM@/1?Le6:tH*D9Xl[K=QBjdab[3bn'!=4$i]%IXouTd@#&6'U@kN<a>HG=6Y*CI88+)B^4H
%!b[<4g*(u&3C`Td,_e<9G\G52i`"f75^>gZoF[j\;b(J:JW"n8"-/*B$dkprOq,hnJa!OY0EkGEA_lo+de#Ob$gE%GE0*A:4P=V0
%B>"FL;57Pt$il&3N8,SfOqhq@`"n`)/Oij^YT$$a0KN?tb0'i3Q/HsRTD])\$BT(Sd<%o*9`\VO^e>2[UWD:):iasgFZ.'D.BMTj
%51YNd%3`;ad4u.GTkQ^-,qmYi2[a;H]#[/"r.^)i\m!.P@V@fd2^(8HjF&2KOJ=uN,'*\cdQtB3M1p#S*%_24\3_^Y8qCtR5V>-!
%_f6Zj\WD>#l-bRm\pOPIasoVt$#dco*s5A4MT^N'<)CLMjj"SUQVf)c_^^`W/tiD,LefB4W@TT\N%+h>[B4\3_n*?Mqc!qpQad*#
%4H.37Fq]QX@!!<G5sJBn:dmC8C`5E9^ks2IF2XnqF<Kuq*32E/9CjG73)mkO.-,]PpGhQZ2]`uV?qN1r\E619_%\qG1as^p0o^uE
%5m7FF$B2m-0\`_edT%U;!am.o<""'iP:I]sdnYX.;uhHJ3SZ7oQCs6]hl&r!+)pQeC7bOXoO:Kg(GN+)Oo8mnP'<lH5rgO.[3[g>
%!2Ksra?Xf!6==XWf5g`8\ub'Uq@lgM,k@GpjA,5QFCC56fdPTCVok72-`3boJDUf)I-o>sQ3.nr=?6lBEVi]T&=q.ZE02b\&Wgp<
%-nO=YY!/6(Xg%Fd]pfJ!8h_Ckl2lV=(+cAhX=GS=UjSD:_cq8<GmXEK0ZneK,X^ee$;S*dP[-e.U9l:&MrfgN#_]c,CaYuW=D$>7
%/rpCDIEuqK>%kk]+$('VVpCrtY&K@U;4,D`Z=#5f1n<F]\g/i`#[Ad3`!X'%gV]hS3rmmn-]sDt>eQ3]+OZ!Ls2ZQK#Q\Q+k5*/0
%@b0))'+-3@Aq:@XU\h&;0]QbMaoR'<_Fm.q\RLBSB"ju)C^BR@NK;ch-m-IJa_4*hQS_8KE\g<3;=0,R4I##ah5.^KH(H\"LkF]:
%JnX3=mgpW^mSG3/kkYTHX;*@3bR9L@TgAk*:PN:2HcfFF&.aZIY$b_8_j,4qpg0b]K'9EHI9nS4=&am)>Y\:WBVRoV#S12t.bTfa
%\cS4[$V@2/!FH(bG`FXikd_Y<S4geQ9UD.M7TFQ>L0!aQb.13&'(s2e?'a*0fFK5"08.AIl2nOT6]e5JR>O*ka9p,;5Ng<2h\-?F
%="b[UpOmkJ<FCL.k7f(Q)\0R`3n]F/XE+tQA-NJY$Z_B(,R$FfO5eZQTrXi2$^HT"nL>%r=.O50FF6_/,9^\U\MO:0SgtHf_KiM^
%3uC94,sjd[TpcskL14.F]>=Y<\j8bt`TYMNY*R=?$*MJ0;5#>.erc?[)*dC_b+)?Z)\6D^[OTPf'[_:lqNdA6V/f\L!taSmkaW9L
%4gKE)4J:=GGE5K)ebRrb\pt<n*QE@ACf&XIEogs[\T6-Yld9gNL?k^!p-YcQaQG7.n[g^&OC46N1-E,k=.LgX,iA8Mb4<Z5m+qu*
%l:YY)nn^Kq>+c5,J?SUL_'5*+d"5uak`#Z0qn+?=$U.i#5>Lfl1+J=#;e"?5e8@`kYWaSQ@V&W@"?Mt>c:bH!Zmr9FN(BXI%?7(i
%Fa+`Q38))9q+(cmqJ(DSU4+)Si4A+lSFX95UHsZeQQSW(G3(=`,F(UA'ebEZjeFgs\"R9ga)Fm-`p<%TL@/JSY$CP^R#'Ff"+<m$
%1rs>[$CO5a-V9oABa+WT3(m&D5$1HqaD\u;4GZaDS]?fN_GNJ=F23s=P]\>W<:il3N/MqGVe'eG4s(8]6$*i1)@l!H-^'#g8^H?I
%(mfRn+H%5)>;62]G55`H%=rj<6#_']UiWX$d\>gD8^m'L`'>H?;G/BD7L!,c5`L-/i/A9DlTCqOITP7m;C,\^p[HHr="H\SG=M@:
%)cckmm6fb=LH__*<jjB*rC]+,3Ako-7Z*Pf0>>M`L_/Bq]lqp:\/+Y(G^g(\HA7)p!AD6P@!CEMV"+ak.262e9f+:,4M`EFcgTCJ
%OC:e'*gkg%TZB'bm&e9sA?7RE*jO+G`clVN"-/)W:#c?jk/Ka%(eCQ@XJH(f4AI!WZ&Q(j.&:rBR9;"YNbQ:N'kfAT`V#W<![i'q
%;sl97V;%spI?q:<+)#h;J\LOrW0(?r)KZFX"lO4jQOOs&,".+PIM<UKigictIE]T`Y*g+&]Iq)ZKJ:,QGpk3!78T<k6<L0;)]<EC
%T9Mm%A??$IZrD:-`!P7F3S%\tJ?)j)htTSZ]>>@Q=#3%ehW=>(6ij&H\seT.?dV\R#Po+n]@-k^MP>H0+^`"oq!J/gd;k"+Xu++$
%h0&G-p9LjkPS_`j\9\nS+AtdcW2T>"--#\H@%es8KV$B*Lkmhb,4W5%?kJ=%D"`OAMI,c`<c_m'Yj77%H1(Z!Vuj,rP+6@[Z*r($
%PN,(_V^7%jWZ<XF$5i67%MbU@+BFRTL$?@`JioZr!oL?>/>Uuo.e;'TG:>"L`>IEhmY9^]]\r>%_8-TVNr:Mq_..LY8XC"Z\n1Vf
%Mh!L<.s[u<a$%U3V`&WYeM)!%m?VT<$Bn>WKErT5%-RIT<1+L-jrrj7o2K)<(ZpC_%ZD,WSE*-E^dPRcmSK=oKAD2=TF!'e$/Btl
%LT=6mnXuOj8&V0"6@piEY^Nh*@6U>O$,4O+6R`dkWXH128%QM%;JOtob6YXthIg(&Em5EEA["^Z.lp!Z/ph0&Ums!e,*?eq71Srp
%"(!!KL.fAde]6+OTW#:0K3lOA4QH#Z[t'-^bE`6j7spqE)(>0Ck3)oa,Hc<r*#7Ei.o,[2<$g8#5G22\kR*1+CMG[C=6X29)QfRC
%=g!ueA8F!aePVS<QrtTBVF,<&53Bop(Wcpr(!Q:-L<j448'5mWG@AA=Wqfm5'83OTc4:d:]Cj)LMd."W96hM3"^6!<`co6Ph&bZ*
%5$UR1Wb,Mq`-R0u50LFM&Oik>6:<5ubKMT31WDQpU+Ah0T!lWRLff\eZn`,<=Kt3k1gbm1EZ9ldkUO&]3=:'WaO2:B>_!Ild7Vg'
%BbM60Y`s]UjkK1RL0XYX\bNt\,+!2H2':6kSiLFl,#"XYV+Sr*I/5ibA+J0[)Mg's&B)eDk.CYJmb2*/(F>.F0)+C01jUs.,3&#2
%Co*omnoWp0d!H88D<33!'iO[k&[HV66*Aeu\fW*+TM$6I!(1"KpLp;+KlT'n$\'Q)-F!rQgFj%B;CNXo1`;W#fq;E`'F&Y<&`Z6m
%>iU*]nHXfjNC4X7_q4ISDKLdXO_^n'M2nkm5nr/2-A^ZA7[m^S/Jo<;0B:Kg.q2A#VWD\&EA7eu,gH9m_%<2dptX"i;$@[F#E5'9
%B^$;o8kg1:U6S3mHj<J+!b_i'?#00o#mg-UI#1TSVD.C0jb-aX_^.(dl^%*5EaT/"[;4j'/L=\>+c,1gMpOV(KqjPs3M8#o[9Xj"
%mg$"Yc\<SZA6S<UGJJZ4.>P1=iH<T9;(D@7!!1Qk>j[0qIW_"+4MI'6I6PJd8Ko<7TSn[U0V353%Ri4L7jlHh+hDti6ODT\eP1!Q
%LDiqp-PSbY@heIWs'OBgZrhKU;0[!JJ+1BD)ni`S0EDC[L1HBkBI\uT8DBhT'(YL4f0cRLeRV^ZNm?1#l*9tdT9dd;@S!Uh:G9Rs
%l=[@!RTK20)*Zp3`D9ma6,n,<o.csHMK)+od.(X1WXc*"Ot1FMNVu]P&`T;$IBKeO^k9L+IUocUc5>AR2(F^@)]e)ENL*j^9>Efq
%'iV7O.J=h3!?JJ@hM53]Y)j_>%[D!?8,*Qd9(AnDb53URVEM+r9ik!-'mUu^4QG"mh4kI.eh#3!"0kMHX0$=]9#/V15=]`%YBfC)
%AM(AI9EM7o<:^?%/`m5MREd^5=<e.Xh9J,n]&EcRjO;P!=n.tTm=D9;24_0ReU-mbKY+<@1L2__<7_9`@_#>+k$t]?XpdP.3Seln
%L';haFW,5?)56[(?`V2ai/J^r\d!;3c_J\`SPq+p7h?6'a2tZXlp$1V;&3S0PCr+#A;Q)l<CVC\=;fFtHN(`6gK!IUHd)A\:KoCc
%n9hmn&/cXk7?h,P/YW5un2MDZFp:'kBOgcAc'%7G8@<GX6p_"8%R?<#0o%b;5B4t2RS?.>AW-c8[YRT%An7O7"?!6c-_M&(V&I82
%O;0>Uc=J@8!-AE)2-=a!^^^M5^X;5D<nJig)('q:1iq1*+PA\R;%OS//-flsh<)?nWJB'tN8!@6TsPQf`>34;g1U1gMF9r\<fSSB
%PZ(H_-P,tp]-XH5Dl;G;-3Z>?e'^uXPj[GiN"#nS3M>pMh4_b*P&N:)OV`WuH<`hSkB@H`.4#hsgT`6FBD>&PPCC8Fpf(-.H$EPU
%,ql88LN%AH]-[2NcbF^.o(`&@G9m0d._.uUJ3>nDHn(O$S";+8j@'fmS9]#_]-[2NcbJ\0/1UTb0g3HtfTQ/=?n8a(0Y<`OVD,/e
%!EUGE6#qh/]?>p/^!^b<N[dRrBiPMANdHCWd<nKfNSa:f77Ccq,)ZqoZkua-&-lZuKC:mlh88Ocl]1Z_&JNUNeC$19\&5&$?6o68
%eS>?(HScKOd^j^k-9qls$F(`KK>[[cblY[J1N1op#:P2jqC(%A0EibkO_$M9!IScZ</s]]-?)E0dVLJX^3g@PnUN,K[:C.llU?B;
%JZE.8c`:Z1`_eS;%C?Bh/fEgc+7fGPiM8I>Z!1OY(?/@8ma.ce2f(>\$!\b;Fskj?+OV;@3A''"'o7Q5RE>kX3QO5ND?;sj>BZrH
%0&."TMfnTOX+o'h,Z[ga5FbC7h*1P1>B=]8!Eq3OZc?JUa>J2LT1[8WSGq(ic@"*1i69P.kSDtF4TCq@J[!m8c!4DnW(703eYmH/
%*r6_1eE>?o-TK%,![bkj%+1`tUs,>p1E\Za9o<@O%M0T=WYiG;3&Z+O]rb27V'pF`BbLM8Lu/uDG0S1_G*4!0\2ofj+Robb2;C+N
%(sTqq7Z%`Dh^`\_UfbboKHu%'"A3>.4B?ts4?%As)EgSjk_W.jNaof;VFuK+Y142^A+#SQGc!S7[hF+Pit>u46HC9#Hi:hV?r]+(
%nT=3HQ9[rfPppWr'HdG._1F^aG:p0hK(nK!=_BNFhH)#Xg0(r,kq;-G2<527,fAX*TL-MIV*I00'?@$*^UGM1lqhM-Q8IlrTH7:#
%WnlIDjc*!AP;Gp&,"f3/C8P77CDS(5YgKt+8d\V<3r)$re\qt?<^tetDgCUE)LP&N-4ddoP*B`$2l\DE>.XHRd;C]hYtEK'<gC!8
%k=jc(;oRoql,<^<jIWjY]325'K]$)p)s@GO4P'ae!,B1,gs(A:n?`K;i,/.1,=N9m7a@)MBqaE?6X4YXQ4F%]Ku_7S6PYM2!4<^_
%`b[\/NkLcX]d#YC6P;GsQg#3NW!@<fFr*](3<+O)505;loU>=OFce2,\6(.$&4d5&A9<G<i&+W9_j9X$5^M,i0ipDscp_p2om-r@
%+PN+P2.8R^CFYIA)6&A.e]N#fKgVG0Y[pFD3c&t;<eo9r88L_9`I9QnTLIRI6#//Hl;"g^;JsD`0kAYP6h3WkXK$6f%A-@C'Mh.k
%'0l7lrJN1%l=-&&<Z%7/;M+]Wa,ib5a-Mu9B>9b.`)75%O88F4\0/B4rNVp<?!6h/lTQd(]^/@ch)oGS4dmE]75g-,ZYd'OZeTm`
%%Z2gjS'mQg:ePOd_@i]m\"Y.N-uTe?psW#k$!4c:-2fZ6ZGZPqGJ?q+DGt)DUu<49C9Wo;qG8.tpJ^`99_iM6At4:@a/FhP*4/^d
%YaqItlF"<%_l0`CW*rD*?`&Bo.p*tu/0*9>g1/d"1jY3p;\LCraF:Ho@LK35=n<uC@%F^gq6A9Th3r&#G?!DZ78=\G[;H[3DQ2F?
%:m\T_k&R*pV.^1Q;@\=h&'cs;FAh[6_$j^X+uN(A%0q*!LQ^A.^A<ESW[dA[l.eD@r_`TQAX>_oi!o:E:S33.\OmXL!Dr<lmf>#8
%<i=Kg-&T;U/V<E4C,cYm=Vsbs>g:/j:QRajgeo=RkA'\bGmT)ATPSf(=Sq`d#>$]^BlPuYB<$=HQ77[05(S2%P.Fu?L,"UP+bFSd
%8lto*EpDH5:8T,K[Oqt!!VOrB;q%6F8D?)"8H::sH$58$cjueNd27`R4r6mmq@^,Z1C&n7\%XVCM0_TR:2)L8k/RR5;NpOC,+Q[[
%YL?k.m2g&W%?!MD/Ai@)a#^]+VMDdmGqO(04Mt1A7TX-AL2r5".4A7b6W4kXlX"CD8[<7`X=iK)3t3-9%_\J,E\6bH:%rB8cW+s[
%.P*GdD89)<@3O?X7$F>J_)u`:A->iId*hAu)@FWP-lU"7!nuZl2Tb^J1".&jj2*/++KCYVaGT_U=Qjt1,ArWpr_b%Xc"Tgb?^>Lr
%C4Sl\iq]7TlD#+k_p$gMd3lmuUpb0?7/*8NKULIh"_&ngM0@;gcT!,f@aJ8"m=R+P<>?pM0QRY%_ni!Y#3k9a!Eel(QNf=6$(0c`
%EgHcH28a.qW^n/daiaHtXiU@Ch3[8nVSY?jB'<Ic7qCh`p`Q7]JYBSd::XoNcK:NXWUVGU-^W_5$n[mM=3-<ZagU?9HPIPZ2jY.#
%(@ZB<_lt#78l%dd;TAeKJ/1fTBNLl6]+(#hJtDK<lRF4RV6PPlheo<44g[sR%@VsfUGc]P"@jRODFg[1drNo[o&4uJ\&GCIfjHS]
%jTJWLiq]ZWg$Lp$::-UIE\p.hHHKC`,)K'J>jPKW[gJQQFhWHp+bZ^QD7KfrXMHDAeBfrjF$mFYTq#7<:DN__geJL1V]90iq-aou
%mr7L)2^PHe9J%^PHBPk,8A0^gl<t)*2tEAoq9k\UNb+[BWQ?Dr&##m9[G3Af80J!BJa4l4P<pkg*Xbl."Y/A7CF`$^'n-nd4fJSq
%;P[lWIHoJ1&d47X'I'__2V=crU_-NnF3+Yh:HE0eh4fh),c36-0*^3n/):.]g$"a^n'Hf0)iiM9W1W$s((_)t#*US[er&j=V/f+C
%im2&9ZD(ZXk1Z+V_7-Q6)#4)mKMuI0'-`kP[:rE2o``LT13qM;Yb"V(dWMQY=a;]g\51)B]V;OaOm(KW2h2ARoE!WR:JuAZn3F<U
%5B/QZqW/*.T!'m]-g.[Nf>0^ldDsNA+)DUYH&+%<a+3O6):!u#o\_Hc6#@sbBZ\1*Cho[M/F[A+<H&<i4RFpLHZ)LV1+-ehN.G^<
%)f=flG6UX;KS]6`j"Tn6V2KP4f*?@^3_Mp\?iO5d\=j2&UrLj9GtZVm4&V9RI%76@EA1G)+so`jj\R-iLL#4)Sf[O-^43h'?N$Z6
%>DQ[+/V6[DOb\Y^<I/!l^7KNEKu*uF#"@>j$HmOq@e6FKq/6egr,sZtqR*Rr3p\*2\H;5ld\2^1[Pq79@\p3V'l6?C)6Kk/<9/cC
%MOC\WGam?e"Z;:PUP=-ggJ#j%GKB-0P!OdV[>-S-_Q[:ALQ0!fWS$D<6M,13h3d&R<ZHr1-V=T,aS7s2/Wfa>Qh?0A6.bN@JFYA+
%Q1#g5CUYS$EcTkh::IUI\?gps3tCT**.iq@/KacIKQi7EqI8W-RRW^epB"dBV(FoB^X$t=k-F$]@8*A(5)')<LH.902<U;XIC\Ka
%-L(nYJ@as.%GoVCr4YPL@oA;kEbBJ!T,Z*Mme:VN^0b*3I!`;riIV<4>4@QHUrA0*e8i1BU((EKMic%WUtrtT"mkI,;A4q3p>N<K
%F9Sb28+kQ%@NRt,kV[Y<f^p$Rr*G$DRd=<.;V3"U'\Jp;QJG:M,uO%("i^S3$BoV_61.IUHADnd`#E7'f_pht4.GO.>r4eNQ5S]P
%)F;..e<1#_^XZFZbUFlX.:&a(8'e)mg*Tj'.d?id-,(t\ZbXrCr=DU>0%l+&m?ug>J32i%i\$Z%6qqM6=/_,:XFN#^oUc#a8*PB^
%Aimo%>!9eNJAI_$n7VWV0:WE($G"1W68:*ciIKrd/eKlPBeVc"b)mP3_#f?AWY,M(YN9n.._\*I5PS-`V\'#pAa8pecFA'pe*E[o
%)7N5`5eag=5^VfAW/@9L;T\`7bVgJJ&lh_]]tVLVSdudLi].3?6W_L"qD^PV-61J!<69[7Q35hp>5tim]K:k9'7tdc:R\(<!CjT.
%$V*5ETS2'%/o*a_/[6Ef*UI@C`a0XGhffqkQPW?P@Z&10055Ot="p<RUM[mgC1=Lt:b5%@#raU"g`)<[3.M9'-kfJS&oQ'dAA2XO
%ahGQnl-p5Tn:X(B!Q`q%e)@_khc6]iiTYM><Is8_0Y0]mYprd8>;3bgkN^362HNnte<c.-Zc9;;m\V)l@ZqCe&#i@BrNLZ]*-ugo
%KUN7qquMgF*h[gX5DY`,9*U%=-qV/R4nF!b9(<"]Vhi>SLHZe5\[[<gi/o(%W;h*OMM'R9+m.k4f9'd>B7tCH'Gc&SeLC0#A7T`:
%AHX%96;sVB8nSOoMrQ'_6@gKULM(UM+?GJ&:jfmUhSD<@7gLRbc^pUTPT_7\LQ#r)nu,b8p0&JNJhD'T'uQRqLK`frNM^14&4<"m
%BbF\<lK`gSO%Wa_"unB&.<=\E#B;ql+cReC:CnFmE[/*#8D5=W5%g839'%%e3-2-elIueH5""-jG*VuoBMq7fM49gXK@s7&EaE7Q
%[T5^>d`,NH&^PLG<aA/Ueo?d<FL!_*=o2<K]7;hW(lmuVJM4RkHHr:/0[\r(-;TjPCKV7^ia"_:FG=C"*?>_NKhBO.We="5Ds4aZ
%:ulG$7g?m_T@?(riXjm<c?hp<o\,!a7Gs?1@*N/72CO(:#dUu__'8V;*DB*4A:#gs,p&DYf;:id9dt3mEgF'.l&)O3NOIQo[In.u
%0tZ[>[>.2("G!bH,cr<($^\K$ft:pdZ`B!1//TNXVQT-PVUD82hW&od!G*)c]24BuQt<j!WXjKkVrqAb"g8KX_UaBPdr+QtKfJBP
%L6a_:;B3,lNb3Voo-o,m-:nfr=3rg]>=HLqKm2@C^p>a2$.5XihmRJ7nXZofZ7VJ+R%gDIbE@VKOpU5kTp4+p]n&TS4n$jOlV/KE
%rp]?GSQcG42n$V%dSMJDZnWMbLt]$GXtDe'(M.;)EiaFYg`^Q'L!PH*GZi_I?a\W1bD?H@.;8u@bZ,D5_gpF<a5P&A?XN'Wi\^QK
%jV$4WaMaaf0G)Y\`/F[+gpPfNOT[LF9ae.s$5\gB..OaQgn7%]LAhrnMCZuZnnI@o#>fS!n!*3<M5O'XR_>T9Tnc@!V&1>=S.P+>
%&V=r.[*%WZ<:S_gYV`"=#t&OJ0Id-%?k;SL[CY:24SNC3*-1sc4!jKT\;f:Im;4BDSaX%Sd^;1!S'13QXR"^XfB^."bd=UIfg:tb
%qP%L?B_1&BY8r4;pZE$S^l^W/Cfj#O3((]t?6WGeGf^Q"D>a5cCU.o/.9bf$Gdl2IS-pT8Aol@qVp*Kr]h/^3DS,:mdsRoW&G?1M
%TmE/6g8/0#l-2mWkB)M1YBuV^9a%M24"=5?=PLm#_>WWK5.QhQG_R<\oIH!1q)1*CPI8X,X>r4^42%hW/K%5GThk<n6_0"0HPhKF
%@jIeHLXMeV]Y@A/H$t9M+#b<kFhPnd@b;MSr,o^(luHQ?PA&/)/hKHT>]0#IDH6+DjSjqGe[!b#\;jV/nu8mkS'#"IZ("/5<RX1O
%P!"#U0G"hZcYe%?$'.%\]k(R-e^omR+W;+L!+J,%-uc@&qBh\`DI^*:36X[VXf<pjO#PI>"#?@pbWm*J"1u(,#.SNCNfiucIs*cH
%R8IM3e7t,!0p1+$#YSDSKF@NiUhd"^`A$!UF<fIE<UbB]YE:k#aY7'fE6k5h2Oq]8K6usUPTLMQD$nbBj;L?\T]$E8bK/RuciE*<
%jR?$"a%/#'MV^U>O*1VCgs(Rq)?;6(;aQf%TUDrj'`F'ukhj2#YqfdSZW8sUXt&jHp/Z"6.+OGN=$#Qbh:Z(r],'"58mN,S`#5hE
%.BY-;oHKs[O>-lF!B4R:N(M,`Yg1"rV_;E@c[Ylkf3`t']0FTUrp]O:If/]mO.X2amSWK@T0N8GnLpM!r8XCk5C`X^:VVARpW%29
%r;?.>^O>nEj1cZ8qW=^%++O7VQd6bgq=X3kr!+OHF=Vb9m14^C_q/8o%k\7TI/~>
%AI9_PrivateDataEnd
