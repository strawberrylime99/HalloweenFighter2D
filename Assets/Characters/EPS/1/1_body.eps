%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 73 109
%%HiResBoundingBox: 0 0 72.5225 108.3881
%%CropBox: 0 0 72.5225 108.3881
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 6 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:55:45+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:55:45+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:55:45+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq4&#xA;kAEk0A3JOKvJPMf54XV9q0vlz8tdKPmXWY/huNQJ46fbnpVpKrzp/rKvgx6ZEypmIJe/5Vfm35kA&#xA;m82ed54Vkr6mmaQTawqp6LzVVD/7JD8zkDKR5BmBEc1h/wCcWfJjpW7urqec9biWdmkO3chVH/C5&#xA;Gp94ZicO4oC8/wCcYtNsgZPL2uX9hcA1Uxz0AO3gqH/hsiZzHcWY4DzsJXNb/wDOQHkNhJa6+Nds&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:47aa2b8c-05c5-0743-bb73-ab5c473c159f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:47aa2b8c-05c5-0743-bb73-ab5c473c159f</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:4ab6d558-5d02-42de-8536-e3ce2bbf1825</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47aa2b8c-05c5-0743-bb73-ab5c473c159f</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:55:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>85.458266</stDim:w>
            <stDim:h>49.099417</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -108.388 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 108.388 li
72.5224 108.388 li
72.5224 0 li
cp
clp
63.1235 88.2577 mo
63.0806 88.6293 63.0142 88.996 62.9434 89.3613 cv
60.9351 94.9257 47.1362 98.1904 47.9023 88.3066 cv
48.4941 80.6674 60.4453 78.8398 62.7837 84.9794 cv
62.6709 85.476 62.6953 86.0287 62.9219 86.6074 cv
63.0591 86.9575 63.1289 87.3046 63.1636 87.6489 cv
63.1543 87.8491 63.1479 88.0473 63.1235 88.2577 cv
cp
20.4072 89.582 mo
20.1699 90.3705 19.9331 90.873 19.625 91.2607 cv
18.5796 91.8471 17.5981 92.5458 16.6182 93.4067 cv
16.4717 93.5649 li
14.791 92.6498 13.1738 91.6269 11.5786 90.477 cv
10.8511 89.9521 9.93262 89.9169 9.11084 90.2031 cv
8.5835 88.186 7.97656 84.2241 8.91211 81.9741 cv
11.0298 81.3412 13.9756 80.5063 16.4883 80.7494 cv
17.8809 81.331 19.2695 82.1708 20.5083 83.037 cv
20.7432 83.4203 20.9531 83.8412 21.1055 84.3451 cv
21.6338 86.0859 20.9067 87.9174 20.4072 89.582 cv
cp
55.2061 75.5756 mo
52.0488 75.7909 49.1904 77.1357 46.9404 79.1147 cv
46.7617 78.8134 46.5352 78.5473 46.2554 78.3495 cv
46.1172 78.2519 45.9795 78.1547 45.8418 78.0571 cv
45.3804 77.7304 44.7778 77.6034 44.1885 77.6323 cv
43.9551 75.9614 43.1973 74.3198 41.9043 73.1957 cv
41.1133 72.2182 39.8809 71.684 38.1353 71.9716 cv
37.8545 71.4316 37.5254 71.02 37.168 70.6967 cv
39.7402 68.9736 40.1724 65.4721 39.1924 62.6943 cv
39.0278 62.2284 38.8159 61.7875 38.5747 61.3647 cv
39.1655 61.0263 39.583 60.4106 39.5723 59.4916 cv
39.5522 57.6879 39.6143 55.9545 39.7866 54.2255 cv
40.5737 53.478 41.3237 52.6562 41.9814 51.7748 cv
43.0894 51.5278 44.1592 51.0361 45.1499 50.3813 cv
46.8242 50.2123 48.5337 49.1327 49.8013 47.8691 cv
49.9063 47.8373 li
52.0029 47.0385 52.79 44.8764 52.251 42.9994 cv
52.2134 42.662 52.0796 42.3276 51.8262 42.0175 cv
51.5542 41.5595 51.1895 41.1425 50.7275 40.7983 cv
49.1255 39.6039 46.7646 39.6132 44.291 40.0785 cv
44.1689 40.247 44.0015 40.3852 43.7749 40.4467 cv
43.5488 41.1523 42.998 41.7934 42.313 42.1923 cv
41.6953 42.5522 41.0811 42.1059 40.8701 41.5336 cv
40.769 41.2602 40.7314 41.0014 40.7358 40.7563 cv
40.5391 40.808 40.3384 40.853 40.1118 40.8608 cv
39.2959 40.8881 38.981 39.9325 39.312 39.3212 cv
39.4409 39.0834 39.6079 38.8661 39.7896 38.662 cv
39.7905 38.6147 li
39.8452 38.1005 40.0791 37.7153 40.4033 37.4247 cv
40.1602 37.3276 li
40.0894 37.3134 li
40.1274 36.5429 39.8252 35.7992 39.2681 35.247 cv
39.4248 35.0673 39.5957 34.9008 39.7832 34.749 cv
40.4292 34.6205 41.0615 34.4628 41.6602 34.2411 cv
42.314 34.5478 43.1187 34.6166 43.9941 34.2739 cv
45.6064 33.6435 47.1563 32.9145 48.6948 32.1581 cv
49.4165 31.9413 50.1104 31.6562 50.7744 31.3124 cv
50.8813 31.4755 li
50.8887 31.2587 li
52.2612 30.5302 53.4937 29.5375 54.5264 28.3212 cv
56.2261 26.3198 54.395 23.1376 51.7617 24.4111 cv
50.9512 24.8027 50.1338 25.1396 49.312 25.4555 cv
49.1802 25.0717 49.0625 24.6762 48.9702 24.2631 cv
48.1572 24.7865 47.3262 25.2924 46.5449 25.8578 cv
46.3047 25.7275 46.0303 25.6313 45.7129 25.5907 cv
45.1504 25.518 44.5771 25.6142 44.0068 25.7289 cv
44.0137 25.5224 44.083 25.3129 44.2686 25.1288 cv
44.0552 25.1215 li
43.5576 25.4228 43.0542 25.707 42.5435 25.9682 cv
42.251 25.9877 41.9624 25.9838 41.6802 25.9228 cv
40.916 25.7577 40.3091 25.4579 39.9263 25.0683 cv
39.9902 24.9911 40.0586 24.9164 40.1504 24.8598 cv
40.2114 24.8222 li
40.0801 24.7675 39.9512 24.684 39.8364 24.5419 cv
39.6948 24.3407 li
39.5127 24.3657 li
39.3721 23.8134 39.5825 23.1723 40.2568 22.5102 cv
40.8633 21.9145 40.9756 21.0751 40.7407 20.3657 cv
40.8984 20.3407 41.0557 20.3149 41.2139 20.2905 cv
41.3159 20.2231 41.4268 20.1586 41.5342 20.0932 cv
41.2314 20.0854 40.9326 20.0912 40.6353 20.1073 cv
40.5552 19.9662 li
40.5132 19.2963 39.9277 18.7377 39.3457 18.5024 cv
37.9541 17.9394 36.2344 19.1899 35.2983 20.1362 cv
34.9912 20.4467 34.7178 20.7934 34.4834 21.163 cv
34.6333 20.0224 34.5576 18.8573 34.2642 17.892 cv
34.0591 17.2182 33.7432 16.5927 33.3813 15.9931 cv
33.8516 15.936 34.3237 15.8251 34.7935 15.6274 cv
37.7778 14.3696 38.6064 11.789 38.1396 9.23626 cv
38.6401 7.09172 38.208 4.85247 35.9067 3.70256 cv
34.499 2.99895 33.2441 3.01018 32.1548 3.46135 cv
30.7114 2.64495 29.3091 2.70647 28.1563 3.31878 cv
27.8491 3.34368 27.5308 3.38469 27.1924 3.45745 cv
26.6279 3.57854 26.1245 3.74602 25.6738 3.94915 cv
23.7881 3.21038 21.6318 3.34172 20.2729 4.79583 cv
18.5815 5.47112 17.542 7.22063 18.3096 10.2812 cv
18.3794 10.5102 li
17.2266 14.7133 21.9038 17.6752 25.4619 16.7499 cv
25.8853 17.1073 26.3242 17.4794 26.7471 17.8437 cv
25.4824 18.6547 24.1841 19.1161 22.7344 19.3769 cv
21.877 19.0395 21.0229 18.6889 20.1714 18.3359 cv
19.2505 17.9535 18.1865 18.2729 17.4292 18.9301 cv
17.4004 19.0029 li
17.5083 19.079 li
16.2603 19.5575 15.2778 20.8032 15.6406 22.0199 cv
15.416 22.2143 15.1812 22.393 14.9165 22.5229 cv
14.8628 22.7597 14.7788 23.0063 14.6816 23.2533 cv
14.5264 23.1542 14.3696 23.0561 14.1924 22.9711 cv
12.1636 21.999 10.1934 23.3632 10.4478 25.6088 cv
10.5483 26.4994 10.9346 27.1996 11.4683 27.7812 cv
11.4712 28.0722 11.4736 28.3622 11.4756 28.6518 cv
11.9648 29.2367 12.4663 29.8119 12.9971 30.3637 cv
14.791 31.85 16.7788 32.9194 18.1182 34.8495 cv
18.3965 35.059 18.667 35.2802 18.9478 35.4838 cv
19.1982 35.665 19.3145 35.9008 19.3496 36.143 cv
20.0273 36.5444 20.7017 36.9511 21.3716 37.3661 cv
21.8975 37.4897 22.4365 37.579 22.9814 37.6425 cv
23.458 37.6977 23.7344 38.0112 23.8374 38.372 cv
24.8184 39.0903 25.4995 39.9794 25.9512 41.1396 cv
26.1558 41.664 26.0044 42.1572 25.6138 42.4174 cv
25.4136 42.8432 24.8994 43.1376 24.3979 43.0136 cv
24.1499 43.3632 23.6558 43.5785 23.2212 43.497 cv
20.3604 42.9584 17.7295 41.6161 15.9106 39.3954 cv
14.8618 39.9589 13.7764 40.4506 12.6396 40.7597 cv
11.9302 42.0859 12.2876 44.0922 14.0215 44.641 cv
14.0264 44.643 li
14.4336 49.0273 20.5308 53.956 25.5972 53.5033 cv
25.5938 55.2646 25.7856 57.1132 26.3433 58.6357 cv
25.4097 59.5126 24.8174 60.7089 24.8662 62.2104 cv
24.9063 63.4662 25.4668 64.5346 26.2466 65.4487 cv
26.3872 66.7836 26.9751 68.1054 27.9067 69.0678 cv
28.7778 69.9672 29.9434 70.6996 31.208 71.1518 cv
28.2739 72.9365 25.8828 76.79 25.7666 79.9325 cv
20.5371 76.1674 11.9351 71.9135 6.82764 77.081 cv
2.63818 78.705 2.45361 87.6489 3.37939 91.5966 cv
4.89941 98.0781 13.4395 104.549 20.165 101.563 cv
24.6216 101.121 28.8774 100.07 32.4141 97.31 cv
36.0479 98.895 38.2798 101.084 41.1929 103.66 cv
43.269 105.496 45.6138 106.532 48.3945 106.654 cv
54.6987 106.933 61.1001 104.377 64.8418 99.226 cv
71.9243 89.476 69.6821 74.5888 55.2061 75.5756 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 .94902 .894118 rgb
f
35.2827 8.87835 mo
35.1885 8.4345 34.9199 7.88811 34.6123 7.56536 cv
34.4697 7.41594 33.8999 7.18108 33.4082 6.95842 cv
33.3154 6.13469 33.2007 5.65032 32.5254 5.03704 cv
32.0791 4.63176 31.4175 4.27825 30.7886 4.49944 cv
30.6611 4.54436 30.5332 4.58928 30.4058 4.63421 cv
29.6567 4.89739 29.0005 5.47503 28.9932 6.33684 cv
28.9844 7.29631 29.3467 8.14006 29.9297 8.88372 cv
30.1816 9.20549 30.5024 9.50383 30.8428 9.75335 cv
29.7168 9.6469 28.5527 9.80901 27.4102 9.98088 cv
26.6191 9.87883 25.8423 9.71038 25.1655 9.37053 cv
25.1699 9.41838 li
24.4702 9.05217 23.3291 9.46965 23.6577 10.4325 cv
23.6743 10.4677 li
22.1274 10.6601 20.5811 10.8593 19.0366 11.079 cv
16.853 11.3901 17.4307 14.4545 19.377 14.6742 cv
19.375 14.7201 li
21.2144 14.5859 23.0493 14.436 24.8848 14.2602 cv
25.3296 14.2172 25.8545 14.1259 26.4058 14.0273 cv
27.5059 13.9306 28.6055 13.8305 29.7036 13.7143 cv
30.8057 14.9765 32.6235 14.998 33.9185 13.2172 cv
34.707 12.1323 35.5728 10.2367 35.2827 8.87835 cv
cp
.929412 .752941 .623529 rgb
f
26.7061 29.0082 mo
25.1758 27.7314 23.7222 28.7851 22.1089 29.1825 cv
19.9766 29.7074 17.6064 27.9443 15.5869 27.4042 cv
14.2759 27.0532 13.3794 28.5263 14.207 29.5615 cv
15.9629 31.7558 18.5107 33.7553 21.4419 33.8598 cv
23.6411 33.9384 26.4614 32.829 27.3091 30.6889 cv
27.5698 30.0317 27.1875 29.4096 26.7061 29.0082 cv
cp
f
34.9893 37.8217 mo
34.7891 31.9999 34.062 26.2519 32.8955 20.5458 cv
32.7148 19.6635 31.2153 19.7563 31.2764 20.6967 cv
31.6646 26.6689 31.9507 32.6576 31.9658 38.6445 cv
31.9795 44.0575 30.6626 49.7914 31.5454 55.1313 cv
31.771 56.4931 33.7017 56.4115 34.1196 55.2392 cv
36.0244 49.8935 35.1816 43.412 34.9893 37.8217 cv
cp
f
53.2236 27.3823 mo
53.1855 27.0165 52.8374 26.7475 52.5259 26.624 cv
50.1855 25.6943 47.8169 28.1132 45.8325 29.1401 cv
43.0503 30.579 39.4102 30.353 36.3643 29.7934 cv
35.2139 29.582 33.9839 30.892 35.0093 31.9125 cv
37.644 34.5346 42.3135 35.2118 45.7905 34.0629 cv
48.5298 33.1572 53.5708 30.7289 53.2236 27.3823 cv
cp
f
50.5259 40.392 mo
50.1343 39.9921 49.3843 39.8793 48.9692 40.3271 cv
48.2832 41.0673 47.9927 41.7333 47.7764 42.7201 cv
47.5254 43.8657 47.7275 44.1147 46.8022 44.8495 cv
46.4419 45.1362 45.9097 45.3095 45.5171 45.5776 cv
44.4644 46.2968 43.9204 46.7768 42.5693 46.7861 cv
41.1909 46.7953 39.8657 46.7323 38.5479 46.2939 cv
37.3433 45.893 36.4927 47.3862 37.2656 48.2988 cv
39.6895 51.1601 44.3682 51.1083 47.2422 49.1069 cv
48.7568 48.0522 50.4229 47.7602 51.1289 45.8549 cv
51.7935 44.0615 51.9248 41.8237 50.5259 40.392 cv
cp
f
24.7998 48.7714 mo
24.687 48.1274 24.0176 47.8412 23.436 47.9198 cv
22.7451 48.0136 22.2183 48.2939 21.6675 48.7065 cv
20.8687 49.3046 20.4429 49.1977 19.5303 48.7353 cv
18.1523 48.0365 16.8564 46.9189 15.6416 45.9736 cv
14.8213 45.3354 13.7935 46.4467 14.2231 47.2782 cv
15.4858 49.7231 17.1133 51.9579 19.9673 52.6161 cv
22.4067 53.1782 25.2793 51.5058 24.7998 48.7714 cv
cp
f
42.5356 88.6796 mo
41.8447 88.2997 41.2188 88.1938 40.4404 88.0663 cv
40.334 88.0488 39.7651 87.9555 39.2148 87.8954 cv
39.3164 87.5541 39.3833 87.1894 39.3491 86.7402 cv
39.2642 85.6074 38.2231 84.7431 37.0972 85.3193 cv
35.6309 86.0693 34.1484 88.0654 34.5059 89.8154 cv
33.0566 89.559 31.6499 89.1196 30.833 88.4199 cv
29.2002 87.0209 26.832 89.0268 28.3145 90.7367 cv
29.5269 92.1347 34.3584 94.4228 37.5835 94.395 cv
38.0933 94.7372 38.7422 94.9199 39.541 94.8368 cv
41.6636 94.6166 43.1665 92.5502 43.5142 90.5639 cv
43.6328 89.8871 43.1182 89.0004 42.5356 88.6796 cv
cp
f
38.9443 75.4418 mo
38.8896 75.5771 38.6099 77.162 38.7686 77.3574 cv
38.2168 77.4775 36.4351 77.0917 36.0786 77.0488 cv
34.4907 76.8574 31.4121 76.9272 30.1641 75.8334 cv
29.1118 74.9111 27.5181 75.9135 28.1323 77.269 cv
29.6729 80.6659 34.4541 81.2114 37.729 81.6083 cv
41.5923 82.0771 43.0576 79.7807 43.2173 76.2031 cv
43.3325 73.6401 39.8423 73.2128 38.9443 75.4418 cv
cp
f
39.9224 60.9106 mo
38.8179 59.6205 36.7681 60.5414 36.6489 62.1083 cv
36.6143 62.5722 36.5356 63.474 36.6733 64.0639 cv
36.2949 64.0541 35.4878 64.2826 35.2778 64.3095 cv
33.9331 64.4799 32.1514 64.6503 30.8999 64.6303 cv
30.4072 64.4775 29.855 64.5658 29.4404 64.9408 cv
29.311 65.058 li
28.8716 65.455 28.6802 66.0864 28.8145 66.662 cv
29.5786 69.9345 35.8164 69.0068 38.1655 68.5795 cv
42.1382 67.8578 42.1499 63.5121 39.9224 60.9106 cv
cp
f
39.1138 53.2895 mo
39.0391 53.0776 38.7256 53.205 38.8311 53.3949 cv
38.9658 53.6391 li
39.0337 53.7612 39.2559 53.6928 39.2056 53.5497 cv
39.1138 53.2895 li
cp
f
26.104 94.5087 mo
23.124 94.5976 20.7671 96.7792 17.7739 97.2138 cv
14.3491 97.7109 10.2202 96.2104 7.94287 93.5961 cv
6.53613 91.9809 3.85791 93.8744 4.88721 95.7568 cv
7.38232 100.32 11.0581 102.866 16.4346 102.823 cv
20.6606 102.789 26.7388 100.789 27.5625 96.0942 cv
27.6982 95.3198 26.8462 94.4867 26.104 94.5087 cv
cp
f
13.582 79.913 mo
10.7964 78.2494 7.56397 80.288 6.87109 83.2143 cv
6.00879 86.852 6.29639 90.5512 9.62842 92.6933 cv
10.7446 93.4111 12.0337 91.8974 11.124 90.9135 cv
9.63086 89.2988 9.88818 85.9736 10.5107 84.0307 cv
10.9663 82.6093 12.8677 82.0829 13.8042 80.9335 cv
14.0508 80.6308 13.8955 80.1 13.582 79.913 cv
cp
f
49.3955 80.1166 mo
43.4873 80.4848 41.957 91.8383 46.354 94.7587 cv
47.439 95.4794 49.2754 94.4076 48.7964 93.038 cv
48.3228 91.122 47.6118 89.6435 48.0303 87.6171 cv
48.4849 85.415 49.2388 84.77 50.8989 83.4863 cv
52.7065 82.0888 51.6558 79.976 49.3955 80.1166 cv
cp
f
70.1719 87.4282 mo
69.9502 83.3735 64.2188 79.7573 61.3291 77.5561 cv
60.4375 76.8764 59.2251 78.3012 60.0576 79.0688 cv
62.9937 81.7753 68.5503 84.3315 67.8184 89.0004 cv
67.0127 94.1337 62.1416 96.0712 58.2095 98.2006 cv
54.417 100.254 50.1587 101.811 45.8018 100.28 cv
42.1201 98.9863 41.5151 96.6391 37.2715 96.684 cv
35.8516 96.6992 35.2573 98.9501 36.8066 99.2909 cv
40.1958 100.037 41.5234 102.921 44.5752 104.1 cv
46.6675 104.908 49.5537 104.996 51.7461 104.909 cv
56.2104 104.731 60.5659 102.21 63.4331 98.8276 cv
65.3501 96.5654 66.876 93.7519 68.645 91.352 cv
69.5806 90.0829 70.2637 89.0981 70.1719 87.4282 cv
cp
f
68.96 84.2319 mo
68.8398 83.8486 68.25 83.9721 68.3428 84.3744 cv
70.2695 92.6928 60.4375 99.829 53.5303 101.572 cv
48.3813 102.872 46.9414 101.14 42.8027 98.7358 cv
41.6108 98.0434 40.1675 97.3124 38.7451 97.2553 cv
36.5381 97.1664 34.6206 98.8403 32.4844 98.8295 cv
30.6704 98.8198 29.0947 97.2197 27.271 97.2245 cv
24.498 97.2324 21.8145 98.9955 19.0005 99.2011 cv
14.7261 99.5131 10.957 98.0063 7.55518 95.5019 cv
6.49902 94.7245 5.03955 96.4155 6.05957 97.2817 cv
11.5161 101.916 17.4585 104.018 24.4551 101.633 cv
26.9473 100.784 28.0303 99.9413 30.8301 99.7831 cv
33.083 99.6562 32.1821 99.9506 34.4478 99.6415 cv
37.7319 99.1933 39.7095 98.6742 42.4741 101.438 cv
43.272 102.236 43.6743 102.93 44.5947 103.533 cv
49.8862 106.999 56.8154 103.602 61.043 100.032 cv
63.624 97.851 66.688 95.518 68.48 92.5986 cv
70.2773 89.6699 69.9756 87.4843 68.96 84.2319 cv
cp
.831373 .572549 .501961 rgb
f
66.6138 81.6987 mo
66.2339 80.8583 65.8584 80.016 65.4751 79.1772 cv
65.1567 78.4804 64.5313 77.5497 63.6279 78.0038 cv
62.7744 78.433 63.0781 79.4623 63.3623 80.1406 cv
63.7368 81.0351 64.1211 81.9257 64.501 82.8183 cv
65.0991 84.2255 67.249 83.1054 66.6138 81.6987 cv
cp
f
47.7349 89.184 mo
47.4448 87.3105 47.877 85.4203 48.0288 83.5556 cv
48.1035 82.6415 46.8159 81.9701 46.1631 82.6894 cv
45.8555 83.0283 45.5479 83.2773 45.2876 83.6586 cv
45.0391 84.0229 45.1538 84.4125 45.4092 84.6659 cv
44.605 87.7695 43.9834 92.9291 47.3413 93.6279 cv
47.7197 93.7065 48.2588 93.5698 48.3438 93.1127 cv
48.5977 91.747 47.9434 90.5283 47.7349 89.184 cv
cp
f
40.4448 93.079 mo
39.415 92.6869 38.3662 92.5229 37.3022 92.3984 cv
37.6357 92.08 37.9224 91.7065 38.1401 91.269 cv
38.437 90.6738 38.0122 89.6899 37.2148 89.955 cv
35.9331 90.3818 34.9746 91.0912 33.5454 91.0776 cv
32.1714 91.0644 31.0078 90.6679 29.7744 90.1103 cv
28.6597 89.6059 27.9331 91.1752 28.5889 91.9638 cv
29.6602 93.2524 31.188 93.6542 32.8516 93.768 cv
32.9136 93.7719 li
35.3394 93.9272 38.0479 93.4824 40.0718 94.2397 cv
40.8091 94.5156 41.1743 93.3574 40.4448 93.079 cv
cp
f
43.3594 74.9872 mo
43.064 74.7001 42.6094 74.4892 42.1885 74.6249 cv
41.9653 74.6967 li
41.5581 74.8281 41.3311 75.1074 41.2764 75.5273 cv
41.1187 76.7411 40.9536 78.1913 40.6206 79.4379 cv
38.8242 80.0517 36.8628 79.6957 34.9541 79.5995 cv
34.7085 79.4921 34.4229 79.4452 34.0962 79.5009 cv
33.9023 79.5331 33.709 79.5663 33.5151 79.5991 cv
32.9814 79.6323 32.4556 79.7094 31.9448 79.8657 cv
30.1553 80.4125 30.7969 82.8032 32.5845 82.6327 cv
32.8442 82.6078 33.1045 82.5834 33.3638 82.5585 cv
35.0313 82.4936 36.8286 82.9828 38.5015 82.8578 cv
39.8027 82.7612 41.5503 82.727 42.6597 81.9848 cv
43.6992 81.2895 43.6616 79.9843 43.8071 78.8627 cv
43.9839 77.5063 44.4517 76.0492 43.3594 74.9872 cv
cp
f
39.8608 64.1298 mo
39.5449 62.6977 39.2852 61.707 39.7837 60.2616 cv
39.9048 59.9091 39.6235 59.4526 39.2285 59.4662 cv
37.1538 59.539 36.9717 61.7133 37.2617 63.3476 cv
37.376 63.9902 37.7524 64.7914 37.6538 65.4614 cv
37.4771 66.6699 36.3467 66.3881 35.3579 66.3945 cv
35.1851 66.3954 34.7153 66.4159 34.1353 66.435 cv
34.0137 66.2201 33.8164 66.0517 33.52 65.995 cv
32.1738 65.7387 28.2075 64.1557 28.0034 66.7519 cv
27.8101 69.2114 31.938 69.0844 33.3906 69.1396 cv
35.4624 69.2177 38.5732 69.3525 39.6514 67.1767 cv
40.1343 66.2026 40.0908 65.1708 39.8608 64.1298 cv
cp
f
53.1982 41.2148 mo
53.168 40.5102 52.5 39.6459 51.6772 39.9526 cv
49.0317 40.9379 49.9478 43.9701 48.1738 45.8432 cv
47.0283 47.0541 45.8486 47.8925 44.1641 47.8862 cv
42.7227 47.8803 41.5703 47.7573 40.1489 48.1376 cv
38.5757 48.5585 39.1147 50.9115 40.7192 50.6044 cv
42.4883 50.2656 44.0415 51.1899 45.7749 50.8876 cv
47.2026 50.6386 48.4224 49.7573 49.5122 48.853 cv
51.667 47.0649 53.3188 44.0805 53.1982 41.2148 cv
cp
f
25.7783 48.4433 mo
24.1572 48.5322 22.8369 49.7016 21.1748 49.7074 cv
19.8252 49.7118 17.0913 48.9775 16.0239 48.061 cv
15.2969 47.4369 14.1851 48.1108 14.6196 49.0541 cv
16.6118 53.3813 24.6406 54.6655 26.5034 49.4833 cv
26.6665 49.0307 26.291 48.4155 25.7783 48.4433 cv
cp
f
35.5269 38.2612 mo
35.7153 31.8017 35.7866 25.7968 33.7993 19.5864 cv
33.3779 18.2695 31.5479 18.706 31.7207 20.0668 cv
32.5996 26.9921 32.8384 33.9701 32.793 40.9423 cv
32.7588 46.1825 32.04 52.0859 34.2456 56.9706 cv
34.3926 57.2968 34.9932 57.2768 35.063 56.8984 cv
36.1646 50.9491 35.3506 44.3324 35.5269 38.2612 cv
cp
f
54.4663 27.1742 mo
54.0283 26.7607 53.5903 26.3466 53.1523 25.933 cv
52.8599 25.0331 51.707 24.9789 51.3408 25.8573 cv
50.5552 27.7416 49.3003 28.6518 47.9258 30.0029 cv
47.5493 30.3735 47.585 31.0429 47.9395 31.3881 cv
47.3926 31.6547 46.8198 31.892 46.188 32.0634 cv
43.0688 32.9086 39.7363 32.4618 36.5762 33.1562 cv
35.6436 33.3613 35.9956 34.6786 36.9038 34.5722 cv
40.7275 34.1244 44.2588 35.3032 47.9829 33.8881 cv
50.6172 32.8866 53.6147 31.017 54.9233 28.4487 cv
55.168 27.9687 55.0342 27.3515 54.4663 27.1742 cv
cp
f
27.5708 30.3178 mo
27.4429 30.0859 27.1685 29.954 26.9077 30.0151 cv
25.1157 30.433 23.4468 30.9799 21.5742 31.0229 cv
19.2397 31.0771 17.0723 30.4345 14.9136 29.6103 cv
13.9312 29.2353 13.0034 30.6347 13.79 31.3666 cv
16.2871 33.6894 19.6616 34.6884 23.042 34.3276 cv
24.7695 34.1435 29.0181 32.9443 27.5708 30.3178 cv
cp
f
36.5962 4.74797 mo
36.0073 3.27483 33.8691 4.02532 33.7632 5.38958 cv
33.686 6.38421 33.7686 7.29339 34.0576 8.13567 cv
33.8496 8.57512 33.4937 8.976 33.1782 9.6303 cv
33.0088 9.98137 33.0449 10.2851 32.9658 10.642 cv
32.9663 10.81 li
32.8799 10.8398 li
29.897 12.0326 26.1187 12.1015 22.9834 11.767 cv
21.5732 11.6166 21.1191 13.9726 22.5396 14.2597 cv
25.7227 14.9042 33.0957 16.0761 35.2808 12.7089 cv
35.4717 12.414 35.5361 11.3364 35.4214 11.5209 cv
35.7485 10.9946 36.5981 10.7289 36.9678 10.1108 cv
37.9883 8.40422 37.2744 6.44475 36.5962 4.74797 cv
cp
f
25.6821 81.6948 mo
24.6694 79.7407 23.4897 78.1767 21.2026 77.8393 cv
19.748 77.6244 18.3179 77.5942 16.8994 77.1367 cv
15.6602 76.7367 14.8794 76.1401 13.5708 76.3774 cv
12.9897 76.4828 12.7588 77.1576 12.9922 77.6454 cv
13.7583 79.2504 15.897 79.6816 17.5117 80.0761 cv
18.3535 80.2822 19.2075 80.3984 20.064 80.5204 cv
21.8662 80.7773 22.665 81.2626 23.6528 82.77 cv
24.4482 83.9848 26.376 83.0331 25.6821 81.6948 cv
cp
1 1 1 rgb
f
7.15088 90.7992 mo
6.77148 89.0922 6.59717 87.3705 6.57617 85.623 cv
6.56055 84.329 4.53418 84.2416 4.5625 85.539 cv
4.63184 88.7338 4.85986 92.8642 7.11865 95.3315 cv
7.37988 95.6176 7.93945 95.4487 7.93115 95.0336 cv
7.9043 93.5507 7.47119 92.2372 7.15088 90.7992 cv
cp
f
22.0308 90.5912 mo
20.853 90.999 20.0024 91.9345 19.1045 92.7626 cv
18.1709 93.6235 17.2334 94.4228 16.1553 95.0995 cv
14.3496 96.2324 15.9019 99.1913 17.7134 98.0409 cv
18.9556 97.2514 20.1816 96.37 21.2158 95.3163 cv
22.1758 94.3383 23.2534 93.0634 23.2783 91.6274 cv
23.2891 91.0263 22.6812 90.3657 22.0308 90.5912 cv
cp
f
25.5151 5.98577 mo
25.6157 6.02483 25.6152 6.00676 25.3672 5.84758 cv
25.1807 5.76848 li
25.0835 5.72747 li
24.8599 5.67913 li
24.7749 5.66057 li
24.8047 5.67083 li
24.6646 5.64983 li
24.5562 5.64251 24.4346 5.65276 24.3174 5.65618 cv
24.3076 5.5429 24.2988 5.42962 24.2524 5.31047 cv
24.0449 4.77922 23.3823 4.2846 22.7773 4.50823 cv
21.1382 5.11565 19.0967 6.9887 20.0869 8.92962 cv
21.4097 11.5248 24.8604 9.27385 25.7251 7.48919 cv
25.9937 6.9345 25.8984 6.34368 25.5151 5.98577 cv
cp
f
52.4492 97.645 mo
51.6104 97.0634 50.5527 97.249 49.665 96.7763 cv
48.5537 96.1845 47.8237 95.3813 46.4844 95.9018 cv
46.1191 96.0439 45.9067 96.3871 45.8032 96.7612 cv
45.7803 96.7421 li
45.1577 98.1913 46.9189 99.956 48.0352 100.669 cv
49.4785 101.592 52.0342 101.965 53.0044 100.191 cv
53.4951 99.2939 53.3154 98.245 52.4492 97.645 cv
cp
f
32.6152 13.4907 mo
31.3374 13.7465 29.2227 13.3837 27.8848 13.4399 cv
26.4268 13.5014 24.6948 13.9511 23.2378 13.7397 cv
21.002 13.4155 19.7632 12.7861 19.3242 10.4477 cv
19.1128 9.32317 19.2554 7.95794 19.3687 6.68596 cv
19.6699 6.4638 19.9092 6.12346 20.0293 5.64299 cv
20.498 3.76653 28.5815 4.18499 30.0049 4.24602 cv
32.6367 4.3593 35.4795 4.07903 36.5659 7.50921 cv
37.3916 10.1171 35.2339 12.9667 32.6152 13.4907 cv
cp
33.9438 .567311 mo
30.0454 -.00104864 19.1865 -1.17634 16.6265 3.39495 cv
15.9917 3.64202 15.4922 4.19719 15.4678 5.09124 cv
15.3315 10.1279 14.1924 17.2211 21.022 17.7416 cv
23.2417 17.9106 25.501 17.5356 27.7178 17.4365 cv
29.9131 17.3383 32.1709 17.705 34.3442 17.4418 cv
37 17.1196 38.9858 15.7714 39.8804 13.2055 cv
41.9375 7.30169 40.436 1.5136 33.9438 .567311 cv
cp
.156863 .113725 .113725 rgb
f
37.7837 33.2333 mo
37.7466 33.2377 li
37.5566 33.2128 li
38.0664 33.7299 38.2998 34.3886 37.9365 35.266 cv
37.4517 36.4374 35.3218 36.9545 33.9966 37.2055 cv
33.9668 38.0097 33.8926 38.8198 33.8242 39.6464 cv
33.7788 40.1962 33.751 40.7465 33.7236 41.2973 cv
34.5928 41.1611 35.478 40.9965 36.3418 40.7543 cv
36.4707 40.8569 36.6118 40.9506 36.7759 41.0278 cv
38.377 41.3974 38.8955 42.2353 38.3608 43.5297 cv
39.3604 42.9638 40.6582 42.7309 41.7339 42.9726 cv
42.1338 42.6518 42.5161 42.311 42.8965 41.9657 cv
42.4287 40.6606 41.5039 39.5448 40.3555 38.6518 cv
41.2412 37.7856 41.8604 36.6523 42.0254 35.1396 cv
42.0903 34.5439 42.0674 34.0141 41.9985 33.519 cv
41.877 33.6889 41.6929 33.8232 41.4204 33.8735 cv
40.2314 34.0942 38.6567 34.1049 37.7837 33.2333 cv
cp
f
29.1543 27.6415 mo
29.1929 27.4804 li
28.8745 27.4662 28.5684 27.4584 28.2993 27.4697 cv
27.8633 27.4877 27.3999 27.5424 26.9297 27.602 cv
27.313 28.914 27.1704 30.3344 26.4624 31.4252 cv
26.4731 31.5824 li
27.0269 31.5385 27.5815 31.4907 28.1318 31.4662 cv
28.5098 31.4491 28.8896 31.4555 29.2695 31.4599 cv
29.0317 30.2104 29.0908 28.9579 29.1543 27.6415 cv
cp
f
34.3584 14.5971 mo
30.4595 14.0282 19.6006 12.853 17.041 17.4247 cv
16.4063 17.6718 15.9063 18.227 15.8823 19.121 cv
15.8408 20.642 15.7163 22.3466 15.7441 24.0014 cv
15.8857 23.9814 16.0347 23.9804 16.1855 24.0073 cv
17.4336 24.2284 18.6494 24.5307 19.8462 24.8891 cv
19.8105 24.7519 19.7666 24.6293 19.7383 24.4775 cv
19.5269 23.353 19.6694 21.9877 19.7827 20.7153 cv
20.0845 20.4931 20.3232 20.1532 20.4438 19.6723 cv
20.9126 17.7963 28.9961 18.2143 30.4194 18.2758 cv
33.0513 18.3886 35.894 18.1083 36.98 21.5385 cv
37.7412 23.9423 35.9658 26.5478 33.6323 27.3515 cv
33.6841 28.7548 33.666 30.1528 33.4668 31.5395 cv
33.729 31.5322 33.9932 31.5361 34.2534 31.5151 cv
34.7002 31.705 35.2754 31.9086 35.8452 32.1562 cv
35.7739 32.0649 li
35.3511 31.3969 35.2085 30.5214 35.4375 29.7592 cv
35.5586 29.3549 35.7856 29.0322 36.0586 28.7548 cv
36.0586 28.7533 li
35.9253 28.2367 36.1953 27.6757 36.6963 27.518 cv
37.5449 26.6904 39.0244 26.6596 40.3315 27.1147 cv
42.3271 21.2529 40.8062 15.537 34.3584 14.5971 cv
cp
f
44.0317 63.7607 mo
43.5352 61.561 43.4038 59.4428 41.3745 58.1005 cv
41.2603 58.0248 41.1367 57.9604 41.0176 57.8915 cv
42.1104 57.1098 42.9219 56.0278 43.2036 54.474 cv
43.5898 52.3476 43.0884 50.9755 42.1094 49.8847 cv
40.1865 50.6684 37.6255 49.7035 36.3394 47.5888 cv
36.061 47.1323 36.29 46.6113 36.6689 46.3139 cv
36.6592 46.206 36.6743 46.0966 36.6831 45.9877 cv
36.3174 46.1415 35.8696 46.2714 35.3848 46.371 cv
35.4185 47.2719 35.3657 48.2094 35.2598 49.1498 cv
35.2607 49.1655 li
35.2485 49.2592 li
35.2324 49.3974 35.2139 49.5346 35.1958 49.6723 cv
35.1616 49.9272 35.1274 50.1816 35.0977 50.4369 cv
35.1499 50.4311 li
35.3848 50.393 35.6255 50.349 35.8682 50.3027 cv
36.0698 50.456 li
37.2729 51.1957 40.1177 52.0971 39.2412 54.1044 cv
38.7876 55.143 36.166 55.6166 34.6519 55.8759 cv
34.5576 57.2519 34.4497 58.6264 34.2832 59.996 cv
34.5308 59.9584 34.7759 59.9223 35.0288 59.8818 cv
35.457 60.8388 36.5483 61.5448 37.7725 60.9667 cv
38.8301 60.4672 39.8447 63.6191 39.9507 64.5175 cv
40.291 67.3896 37.084 68.3022 34.7549 68.5175 cv
30.1294 68.9462 24.0254 64.0019 30.5815 60.9457 cv
30.7461 60.8686 30.8862 60.7782 31.0088 60.6791 cv
30.769 59.4872 30.8164 58.2621 30.8857 57.0341 cv
30.8271 56.8705 30.7656 56.7094 30.7104 56.5424 cv
29.937 56.6073 29.1807 56.5917 28.5132 56.4008 cv
25.2524 55.4682 27.3979 51.7573 28.9155 50.224 cv
28.9336 50.2021 li
29.2368 50.2807 29.5479 50.3271 29.8564 50.3842 cv
29.8896 49.165 30.0444 47.9609 30.3271 46.8041 cv
30.292 46.5917 30.2471 46.3823 30.2139 46.1694 cv
27.6885 45.5199 24.8594 44.2538 26.9805 42.5058 cv
27.2739 42.2636 27.4551 41.9921 27.5615 41.7123 cv
28.2461 41.7524 28.936 41.7446 29.6226 41.7182 cv
29.6001 41.1435 29.5938 40.5683 29.6235 39.998 cv
29.6045 39.249 29.6143 38.4999 29.6396 37.7524 cv
29.335 37.7646 29.0298 37.7763 28.7285 37.7719 cv
27.5547 37.8124 26.4048 37.6513 25.2793 37.2885 cv
23.2368 36.6459 22.6318 35.2685 23.4248 33.1762 cv
23.335 33.1845 23.2451 33.2011 23.1548 33.206 cv
22.6631 33.3124 22.1455 33.3232 21.6514 33.2636 cv
20.7637 33.1562 19.9336 32.8285 19.1421 32.4208 cv
18.4927 34.1547 18.6616 36.1259 19.8652 37.9311 cv
20.7368 39.2392 21.8784 40.1259 23.1689 40.7167 cv
22.0039 42.2836 21.9429 44.0605 22.7578 45.6991 cv
23.4946 45.3354 24.3364 45.2992 25.1177 45.8476 cv
25.228 45.9252 25.3223 46.0175 25.417 46.1088 cv
25.6289 46.1357 li
26.2095 46.2377 26.5522 46.5795 26.5864 47.1762 cv
26.6265 47.8769 26.4307 48.4325 26.0938 48.8871 cv
26.0156 49.1357 25.9136 49.3783 25.7622 49.5995 cv
25.2607 50.331 24.4702 50.8217 23.6196 50.9697 cv
22.6245 53.0668 22.2363 55.4379 23.2808 57.5019 cv
23.7852 58.499 24.521 59.1777 25.3892 59.6366 cv
23.1509 61.8075 22.3931 64.7407 24.6509 68.0395 cv
27.2178 71.7909 32.1807 73.1865 36.4995 72.3354 cv
40.8491 71.4789 45.1167 68.5654 44.0317 63.7607 cv
cp
f
18.5298 88.0214 mo
17.7837 89.8676 15.6016 90.9736 13.708 90.2084 cv
11.2793 89.227 11.2813 86.4135 12.2778 84.3808 cv
12.3594 84.2148 12.4111 84.0497 12.4478 83.8867 cv
13.041 81.7533 16.1143 82.3339 17.4111 83.3945 cv
18.771 84.5073 19.187 86.395 18.5298 88.0214 cv
cp
18.7964 79.5444 mo
15.2939 77.5737 9.82373 78.3105 8.63477 82.6738 cv
8.59131 82.9321 li
6.99756 86.7758 7.40283 91.311 11.4321 93.538 cv
15.293 95.6718 20.2979 93.8066 22.0771 89.8505 cv
23.7749 86.0766 22.4277 81.5883 18.7964 79.5444 cv
cp
f
59.1768 91.1308 mo
57.6455 92.7299 55.3872 93.6957 53.1787 93.0756 cv
50.8198 92.413 49.1294 89.7851 50.3306 87.5541 cv
51.0415 87.5292 51.6904 87.1142 51.8848 86.1777 cv
52.5488 82.978 56.9526 82.5082 59.0806 84.3876 cv
61.3833 86.4218 61.2437 88.9721 59.1768 91.1308 cv
cp
60.4263 80.3056 mo
56.7344 77.8915 50.562 79.5449 48.5889 83.5204 cv
48.4043 83.6249 48.2236 83.7621 48.0547 83.9623 cv
44.792 87.8325 45.5405 93.5214 50.0811 96.0937 cv
54.4683 98.5795 59.8228 96.8041 62.8086 93.0248 cv
66.2075 88.7231 64.9746 83.2792 60.4263 80.3056 cv
cp
f
57.6445 102.54 mo
54.0322 104.425 49.6172 105.004 45.6953 103.761 cv
42.3472 102.7 40.2817 100.018 37.2861 98.4081 cv
32.7842 95.9882 28.3921 97.0673 23.9692 99.0033 cv
19.6914 100.876 16.1733 102.261 11.6274 100.284 cv
7.59668 98.5297 4.96484 94.9189 4.21191 90.6074 cv
3.51416 86.6054 4.45654 81.5864 7.479 78.6669 cv
10.5522 75.6982 15.0537 75.9843 18.8364 77.163 cv
23.394 78.5829 27.1245 81.4662 31.5063 82.749 cv
31.6353 83.123 31.9058 83.4662 32.3735 83.7172 cv
38.8081 87.1669 40.5566 83.6161 45.8066 80.3022 cv
51.168 76.9184 62.5659 75.8539 67.1099 81.3886 cv
72.4048 87.8368 63.124 99.6806 57.6445 102.54 cv
cp
72.3169 83.4819 mo
71.2344 76.87 64.1152 74.3212 58.2441 73.7797 cv
54.7598 73.4584 51.1484 73.8149 47.8423 74.9731 cv
45.2944 75.8657 41.5952 79.1747 38.312 80.3393 cv
38.0537 79.7592 37.5093 79.3373 36.6494 79.3788 cv
29.3457 79.7328 23.8062 73.6762 16.7363 72.5527 cv
11.0767 71.6528 5.62695 73.5009 2.55713 78.5341 cv
-3.52197 88.5019 1.68701 102.727 13.4302 105.048 cv
16.2402 105.604 18.9697 105.329 21.6475 104.366 cv
25.6841 102.914 29.8091 99.7411 34.2769 101.403 cv
37.5591 102.625 39.8267 105.719 43.1123 107.071 cv
45.9878 108.254 49.1382 108.591 52.2173 108.277 cv
63.1035 107.167 74.1763 94.8495 72.3169 83.4819 cv
cp
f
35.4351 92.4599 mo
33.5439 92.266 31.582 91.9863 29.7803 91.3603 cv
28.3901 90.8774 27.4336 89.2778 27.8501 87.6948 cv
28.0962 86.7573 30.0366 85.8925 30.8193 85.4975 cv
31.063 85.3744 31.251 85.2206 31.4053 85.0522 cv
32.8359 85.3608 34.334 85.4477 35.7871 85.3661 cv
36.0938 86.2328 36.9058 86.9506 38.063 86.7768 cv
38.5825 86.6987 40.6494 89.749 40.8428 90.4628 cv
41.6113 93.2978 37.0371 92.624 35.4351 92.4599 cv
cp
44.0767 88.1005 mo
43.3003 86.9911 42.7339 85.6513 41.8643 84.6161 cv
41.7471 84.4765 41.6255 84.3549 41.5039 84.2324 cv
44.5347 83.1396 47.1729 81.1083 46.2983 77.4072 cv
45.2769 73.0844 41.665 68.3603 36.8086 70.0688 cv
34.4097 70.9125 35.2773 74.8227 37.71 73.9672 cv
39.9321 73.1855 40.3799 74.6992 41.3042 76.31 cv
41.5366 76.7158 42.2495 77.6489 42.2959 78.0829 cv
42.584 80.7909 37.8403 81.1791 35.9771 81.3574 cv
33.708 81.5746 31.2896 81.4467 29.4966 79.8559 cv
27.0781 77.7094 27.8169 74.5834 30.5117 73.0551 cv
32.7461 71.788 30.8867 68.2455 28.6392 69.52 cv
24.9346 71.6205 22.7124 76.0712 24.687 80.1703 cv
25.2769 81.395 26.0996 82.3622 27.0708 83.1196 cv
24.2368 85.2035 22.0518 88.5546 24.1079 92.0478 cv
26.4092 95.9565 33.2275 96.4946 37.1802 96.6078 cv
40.6689 96.7075 46.3931 95.2724 45.4438 90.5053 cv
45.2515 89.5409 44.6152 88.8696 44.0767 88.1005 cv
cp
f
36.6533 32.3725 mo
36.5547 31.0263 36.4326 29.6845 36.2861 28.351 cv
38.6934 28.4555 41.0957 28.4794 43.5005 28.2031 cv
46.2178 27.8906 49.2886 26.079 51.9404 26.0424 cv
53.0317 25.3295 53.4888 25.4648 53.312 26.4477 cv
53.5273 27.433 53.1143 28.2245 52.0737 28.8227 cv
51.001 29.9814 49.6724 30.9081 48.2544 31.5956 cv
44.5967 33.3696 40.5171 33.2651 36.6533 32.3725 cv
cp
42.5283 43.7328 mo
44.9473 42.8691 47.606 40.5766 50.2026 41.6337 cv
54.8584 43.5287 47.8281 48.6122 45.4097 49.1894 cv
42.313 49.9282 39.2417 48.8613 36.9595 46.7289 cv
36.9702 46.1659 36.9795 45.6088 36.9888 45.0668 cv
36.9917 44.8608 36.9912 44.6523 36.9941 44.4462 cv
38.8804 44.5761 40.7144 44.3808 42.5283 43.7328 cv
cp
31.8359 57.1738 mo
30.3994 53.018 30.4692 48.5077 30.3696 44.0239 cv
30.2393 38.1635 30.1094 32.3032 29.9795 26.4428 cv
30.1006 26.1957 30.1729 25.9042 30.1699 25.56 cv
30.1558 24.0297 29.8906 22.2616 30.126 20.7392 cv
30.7656 16.601 31.2813 22.0834 31.6382 23.7646 cv
32.4932 27.79 32.5454 32.2426 32.7798 36.3393 cv
33.1201 42.2992 33.9702 50.8725 31.8359 57.1738 cv
cp
17.9204 50.6821 mo
17.0894 49.9892 11.9619 42.0375 14.5093 41.5859 cv
15.0117 41.497 16.7271 44.1801 17.1484 44.5712 cv
18.0098 45.371 19.0771 45.9262 20.1963 46.2597 cv
22.0742 46.8202 23.9756 46.6625 25.8384 46.2446 cv
24.5996 49.478 21.6606 53.8027 17.9204 50.6821 cv
cp
17.1362 30.6557 mo
15.7764 29.7084 9.92139 24.9223 13.6353 24.6694 cv
15.6475 24.5326 18.4492 26.4267 20.6089 26.7187 cv
22.4258 26.9648 24.2139 26.8945 25.9897 26.6039 cv
26.0273 28.3442 26.0664 30.0844 26.1025 31.8251 cv
23.0015 33.353 19.9912 32.6449 17.1362 30.6557 cv
cp
57.9976 26.5458 mo
58.8022 23.0268 56.1787 21.3813 53.0444 21.7441 cv
50.2998 22.0624 47.749 23.3324 45.0591 23.9076 cv
41.9932 24.5639 38.873 24.4882 35.7637 24.3271 cv
35.7466 24.1982 li
35.6489 23.5619 35.5005 22.83 35.2959 22.0688 cv
42.2783 22.1103 55.5488 21.2074 55.2241 12.9306 cv
55.1719 11.6015 54.1304 10.6479 52.7754 10.8979 cv
49.2139 11.5551 46.4194 13.0292 43.1489 14.4701 cv
39.0117 16.2934 35.0054 15.7348 30.7031 15.0121 cv
29.9985 14.894 29.4863 15.1244 29.1572 15.5185 cv
29.1567 15.5185 li
22.0278 14.8588 15.3135 12.0268 8.08496 12.2289 cv
6.43262 12.2748 5.2583 14.2587 6.52979 15.581 cv
9.00586 18.1562 11.9668 19.2997 15.457 19.871 cv
18.6909 20.4008 22.4834 21.4203 25.9268 21.3032 cv
25.9365 21.7192 25.958 22.1342 25.9844 22.5385 cv
23.4399 23.0287 20.9795 22.9325 18.4194 22.1039 cv
16.3662 21.4399 14.2144 20.2924 11.9941 20.3681 cv
8.5708 20.4853 7.23731 23.4125 8.23047 26.4721 cv
9.43213 30.1723 13.6064 33.4721 16.9248 35.2021 cv
19.9443 36.7758 23.1519 37.1132 26.1958 36.1103 cv
26.2373 38.0722 26.2764 40.0336 26.3228 41.995 cv
23.5479 42.7773 21.1108 42.9731 18.8696 40.4501 cv
17.4951 38.9023 16.1523 37.3569 13.8926 37.4472 cv
8.93262 37.6454 9.80859 44.0385 10.9678 47.2128 cv
12.4497 51.2709 15.79 55.85 20.5815 55.4921 cv
23.2842 55.2905 25.2852 54.2392 26.7856 52.6474 cv
27.186 56.184 28.0532 59.5844 30.063 62.7148 cv
30.8701 63.9716 32.6245 64.1752 33.5137 62.8593 cv
35.6899 59.6376 36.4614 55.4946 36.7642 51.4076 cv
43.126 54.893 52.1792 53.5239 55.0723 45.9047 cv
56.3828 42.4531 55.0205 38.1064 51.1187 37.2743 cv
48.9888 36.8202 46.6372 37.58 44.688 38.3788 cv
41.9946 39.4819 39.8613 40.5502 36.9946 40.414 cv
36.9771 39.1 36.9404 37.7797 36.8862 36.4594 cv
44.9063 37.7216 55.9233 35.6113 57.9976 26.5458 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (1_body.eps)
%%CreationDate: 11/11/2019 9:55 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`IdU+e[1ILGYAr`kkT<%ca\Vp5ZesYhIstS8b/lN2H^/?(\DYO*`iIlp.ja0&j/](B]XWCck)7ipT&+qr
%rSc;u=0KC=`U<6I-SK\YH1J*8k/m%lgZQmirFNHfroE=9jdPLBV6=g/4hn[Up%lXk2nOIFYVCOMMuVa_\Opai^U(V$rMpa_o]>J0
%2tD-4Dk-fjhu@^]5>k[1r:D(\J,AW>n)(d,o&eW+QiHAa3;*,L=`=9#m<;@u(NQihm$o%[Q!`s>\,ZBeLZ`UJRCi,Cq<ONBm;S!`
%])1<-B_e6$AU0BtZ.PcMEcj52j6$pP>>Mm.2uMM#_Ck+p^A-]DB6ZQ_0>!V4fA8-!G92:#TCO;]K<JX1pYs<\5C`_&&]A71\:*o'
%o-\HoD<Uq=j`k2c=&I8Sd*s_5@FU40X&k2qR7]JHeHNfib*?nn=Y;?"Wq[M!U/b`AIscG:QXB+YqsBScDI8lD>ebaZjg4to,bXq5
%j?6hX?A2SMf>%@Eq<dKtGkp]cHt$\le%u"-X)DmJ9@p;T\U"1-i\L0Hs52,s_ir^0hS'T<J+`^EN9r9AFm6[<m11k!rT(/kOC[P@
%.DPcJp>mB&r=?X4ch57dgQef`".s>a2&@D:GXRdWpAKi4'>#pcJNNLnQh:U$s+SPimp86Up=[Vr[#ek3MRP&(bLb(S=_C"i];knO
%LKrBo:[<Ms[A=\r]X`IDHcGlb&&4OpdW5#M0Ce8TbARlo?=6mLa$9;RMdFO/HiE;7qsF4jr_@A$_ftfSD#!k9YN1:J06-$mO++.E
%X'^AHr!3&Z042KjiO`I1r9%.B+8tj.RofW3]DE\Z:Z&g2/HbsrmW\^'^Z?P%g\mB.I.rEJ:S,]ljPT!fX!c6-qq4&K.,XjsG,N*?
%C\c<UhhPGi8jN$rH38"I^&7Eoq5`t])s_b[\`4LPT=fRBHH0BO)uf]eO7JbfdSK0\ET6AT5<e;&+u\=M\*u"4kNr1d3FVd76QYpd
%B.r`/Jo+:i^\Q'Rf71ej4b*G5FmZ6]=1A4mp0Dn?o$=d`T)S!PT%<bSGQ$OCRm5$KEr5Esmmf%p5M$rGYA;l[^ARK]q=A7V^4,Y/
%T:S4%m9fn_rL\7_GkL@t\GM!;O!i2ej0*F`6QZ*c?XN`[X67gCIk`!#[sT@ToBb`5gFrU'rL;Ps8KXi.l^,A5WVpo4/*qr\%hQ^Z
%f=]_is3!TC>]o:&o#lMY:\jQ1Hfia4[_Ea,Z0$Og:[*LZqW=2>hKosd>L3-902FtRr;,)2]jme2S,`<;9/.B/?iKQ]c0[PN?bQ4E
%L@"?O5<\i1Q8>G2q;lqGoX1c6o8<54T>,e+PI5i=E^&TOYFg469NK>Da:]`KMfe4O+TK*.^;%@0.?D$p0'dZ4mD!rEkT:m2>/\4U
%bm40kA[09d[<MDdi`tSP;SWhBQGpf3OhXR_'5K#aIe*12od@>moJ4%-)qYpPP?krDY2<]$G7_YKM2ehm\.@q^Y<VS9qsQc7:!tD7
%On@&inO[%ShdV(?-+43;4bEIJ&$N`pIf"?$hn=L0nlr2bk:Kos>F+2O`ns,*c6`Cj[GX4I`dcJT*5s4**th"UBoBkt?#oq:a,dCp
%FcmtULMMD,jB1,-NaphQl\;%cE_A!md)7#fA#ZAPXSXK^W28VpX08\]P_0sXLffsJ@L:$8)``q!m'GIkf8Q>d@h.28iUW.uF<egT
%*T]8V]c?UA<)\o(V'q*p1*_s?2fbGJ5n81jfV1JPAt0Eb*'Pup#rgfga"\RpOO"4b<&mR4#N@!H.kcBWOR<F5^Ys0qj6."om,bbN
%nr^Z_+pVF0H+C>L:6cpk$2fCmh7/Xg7lg:k@=.5Qq.^Lu,"ED=94$5l@rR!?bDdL>jXA/8rp5te3>rEJ[$Jo\/^]TOO*LTds5iIc
%Mn*j&l+_W-c+j-Y90`,/pg_@$Inl(rq<pWKrufATIP62RpMDPc\hA*"IE!u-K,j(f]^Un#-TMZWi,fQilRHoWaUnP@=,ZEAHJ4>u
%8!0Er*&nO>,%<hEJdeUmiT"k;3/T7-jOdD&Xt+t>Q_IaHRP9+5>p<X;Ye#XTS]Xh/*9@.oo)I<^2#1)3s,6f)J`&dM7/f<'UF]uu
%2if&;,bF'nBfsJ/4^NWZAJ)Js,+4P;/tJ)"BC^=X&rJmtVgWZQ:]0gE4,V32ZI38S:2U[>as)+XG7oH5,,n:klP(+sn0Hh5#ffJ`
%-q=$6(AI?`Q5!lH<1.18FHZ)#o$p0TiK.uRVh3.I.XcRVZ#hb%Z])l2N6mQC=-2r&U(ND[qGKdDaN.GFKZ!KQqF5#6Mo6<lU2,mj
%PK9>Z.2\n^M@=Aa*"GINIs2=LM>8P1i1G>.544KPUYJ_D;`H'Eq,Bc\>b;M(UE',O,?)[A!l/2?WJKcFS,IFKDbf=PEc`',&;5e1
%"!N7M71lOFT-do;@=up4Mss"<Ntb+>H_I0d/dN0G"?D#M5COm;N1XnMN'2mm89K31=\\SR3?9</.V,X=!AY>XZaVPKb%/(la2r,b
%*@G%Cb8>6aAPU1$#B4_O3E7eN:RKSs?;1-%SX^0FK'[5op9c<.CKuC-QfE1t3SZmsa8h$nP<k"F,T@(!KR<i-8Ho85*7=4Fo]Q?.
%-i-\@%N->8^)S1&OE;.">)!>:[13oUC:S?6XJ1]pONG/K@E76oZhsBWGq&oJ%]3,o#=-,c"n=QW/t*CK'[)"40>nYk,.Cf$.YYF,
%X3kpm:`MGdO-CqQ)VW_]6=XJ7JgX<99_e`16PY-&g/B^GW$4uu0rPSE+=Ii'#I9@dZ/EI.\5;-LnMI8>4VtmYe^K?sXHGNcSk,J%
%[m]?/jf_>8/;%48B/pBb_]ak9XHZ,8a]TNV*f!/[+d'*)G,_"ndNl/[N_%#QAE$d1M$]ZJ>GF`M(HGYeVG8<d#Ec<-H#/aAcdMJ`
%,SCL4_Sl^Pbha,%Z59Q/L+%(FEElI<nh_mGf3D(./gk7c/Firu64RU^?kJgO&1epoVUA[N4KbM:.Mn'iI2ob)oYof4,D/DdMaQXd
%TM*2>-/lqai0qhSamtJ05]JVU:1fkuRotngQ3<=>-YkV6P+tS7SgI#dP9eR!EGCSkW<%W^Drq=aO^t>FUCj6_LRK9LAk+V?_jRKD
%Pj&ZFUL=nuk\LZW2$A-Z%bu1_OP$9GJ\,e%m^`^Lan5VS)l_6`&N<9Vg/Io+Dq&^&D^?p,8<B>c3^]]7;<9<B>QW8Q?Z7Y`Yga)*
%]mpX*r]M9PIsCe[ac"nlG2HI:H51>5`HJe?lHVZ(7(h.W8[MN^R=>c2m)2ALU;((^*(2<p:5C*%9n_mnCkXEL\JGi@M7qh8Ga!rg
%-l!?Z,AdW\V$g;8QSh.\BqtfIZlQ(t79MrO7OlGFQ+3_Q4S@f;->Qt;Fn+i,n%@lX,r_6llY;HKMCS$R<1HW6;fg5"?<)*Il;ZH9
%\l4;aL>#iH?iSgF+h!@[_QF=!j(-2)5HoB.LV%qi!;JWG\9Pr=NjLsJ7diG0]goX5O?;=n]D>rkh!s?9[tbrD`s810nDj*\mlP%M
%D4KgS5d-quQ':Es7Jtj^<gd]g]e!",/Y69>TlrH;Z?@H#>`bd7;o=D\&KsB-Q3m1U$B76<H=l$M[&Z%Ip,(i*e2OCI&p6sGetK&i
%Mfgu/*"B9XI9*[j5>3giaOD1K`n4gXd1m35[5V%N\@McSMKND[Qnc$aWS&Q_8"5IDCGX=V*6)ugF]gZWoUtHW%%"h*)U?h3>*&0=
%,G#q?c9^hg%-YF#4SYl@+a:$VH*k%&ElWBon\3%rn+bf_\`5(:q2]O9GA3:5T2ZDDGdkIFggmPRWDCGN'Rc._LorK:A[R9C,$q,[
%F$%ceWO,je3''*YOcJFs:W+Q$jpZDln:$AFFipdcY.65-bfr5?BpCBZMF%`eZ9$2`CR.nCnqM$Zm@kBC$9YCnB"3;a;9HlZCr8I%
%HKMAj3S-),NMC[H7dFm`cC"mJE1CV`_ZV'YQ0pj`9dP"rX1dA=goo2`Xn=mApjC,3WB:*[i31E9%0?YROWIT$2H,$I/^=?8rYqF[
%p-3\(2!rj200"d,U`.O:L4d`MWT+K+DXuqXA^tn,S%@],Sf&5H(0u\eEgZK)TY?$^KaFD;fF@5G?s%?@Yl][\0\6cM/\.Y?3G>ri
%c`If#U37c7"g-@h[R0#/80]iSeQci$WK&G4PNn3D+iOdgYB5cOkBJ)tY/&6pRli?M>9XaM\Q7$kp7,_*B^<F'>IW(B=Mjhn?8t]H
%O#=4`naMLg4S4F?3TQ223fa:1K+>HPK?sMBFN:O]DJj?P2g\[9b>#PS2std/3m,f.R1)ZaTKD!MO!5cu7.W,S4e^6_@8@Fk'**.X
%5660jqUV(--Ql1bSq&m'Ft2"@5j+971'KZQi\Z1,")]$a.2G>W2]i*<:>dImbo,:nGk:GM:*#$J434BTVZNCrFXl%CE9H)PYa(k/
%?r)d$7ZGEFNWK4G/1TE7Z:BhtmKnYTX4jcpD6Z&P+3J86%/T"(Lon^ZWiFl(Fpn(EO$9s4bgKKc2lZ(%B\GUu1nqY9@_M(>V^$#<
%o,kF_ElSb:hB)+IT&]Ioj!^tKn\N9)+c"kC60I&+B3dLXNXn>J5L1?gDE_j#cPkoO7es,_51LZ<CR!-`jg.GPXAM1;*DN;f<93:n
%Y5dtNJ&r[a,#bimIP2@>,NUqrgedN?A1k4-/]a["n<XN^$D6I0LsMh!b6=[L/>Cn=,L2bTRFtk+q:UIHQ/.\)E9VTFRNhJs54ADi
%'mqO$CX.F]YM#]nN/!D>-ZJh@'=^bWZ)f\W!Q=V1B/GS>XYof.Z;ib.8<2ONME*IG[QM'2b"Y'LrqtjIbl-K[mSo8QrKb3j$"YQj
%;2D6R9GF3t*$du(\>?\mV<%&O/dg^<\=Y+L'T[>_hFgmMrWOegdTu.t>D2>r,Oaa\0-]BVGGs8TqG2=]rf/)t]q;b-5/@AAnaZgF
%p9P(28[taQI?+eI71nZSQks1Na"UPW"l7&T@N%4X]1'r$!s@Ng?U_iC$L/8PA_s0`\s;6T3I$epj<A,WbbqaKTW3qNeIc4=)I]5q
%D'j4[n.S1CD&I%G`R8NQO4>ui"+f-7H)mC?H3+Aq6l/Qu8L$l.F&Wl6]c#M&R\.199l62_g+uZ'14;sB:"B0kStR&R6PVV]F-^Ps
%9NZ:<rAiPNUH,B9+.X0-bjILq45r6J82Sn&f'Q?'*)5k"\ZYP/_1aN``s[\$a;lr4gt[,/B:5lW3!JJ^rkXA%lCK#:a#e,[GC7-b
%qd-f>EbX/G_5:uD#0AhC4P(-CAjVM)q]2*9]pSLjrR2Tm'(s=3?g,#lE-e@eF(Cs.Ag@Fidn"iNUsm[_RYP0pWXeX':X$98WB+`=
%#\m\RV?hL6)+<U_6W_)]4BQWak"/&PSQjbEg&au39^YD9*+:0'HhT3Q!nbd"9S!?S)?RA.P$u-K[;R>]d102a/5H$839K;/lR<AE
%d"=`\%=:9fccPWYq-Els##$73?]R7.2,\?^PQ(;1s3+*sApXs23GVGMoV`aj+!&7Q,MmdCG8scRQlg^?$V*?EjGnH<hK#uI+*,C,
%SFo(dJ*]8jJsk_!_b8TcG_nH\LCLoW=YdFO)et[gcga5&IfGkmceNus%Wcgn6ZW'*E%+JWLSqPQlQW^s2:$b_qHj;i<`hrbrXDg>
%HYs3ASV'NT;T])>g;6F*THqq>/!RCEOtM;V`K#$'BEF1SNcuYA'eHp,*'+1Pk(@'g_gn2&15oJm*cf<-(0;T*PY28;_%/Wuj[8H\
%cYl#>plBgC1EcQ;bAb/:WbZJfZ%ES:2H?jM#^pbt`,n2K&d`\O>(qVJ,cs>C2SG<A/tpfc^%TMsO'']=<ZSkDc-bQAGH-[@L/tnB
%e/e5)UL&;soofI8$@u7i"k!0LMc?fPQ$&)"7.n2X[5)kpbGWg7RHig&<^Wrrq8nrfK,%AS/K_-`Iad<A_F,QtFBW>u%879`\Fp-,
%44ShX"81l\<&Y`H4I!6g@Emf,aX5_<ZPi(NPj-8%7lia"r5]nrKu;ep\9AqBfFL-Dg#%';Ie9l9lo;]UO?5YaXS4aS,N!L9Bil9)
%g'6ZUf?AH@1.a8Z&&^MJO`dbVa2o]Tlj%8M3"1d-#oJ4e;Xr["eKQjbQ=VV$W:C0#EMC0.ZC4gbKkj^d2VP?g[?R*PPf]eaQj7*6
%l-bT'<7q?&b!/bL*NA?7*F?,l-1r:i2aM"b5))a[d>!K8R<jPFRB4=-3!NO$+:@>QRLj*B'hdsKVpMOg0eL*3fG=6u;t;hX8[JrQ
%MjQ+36!Z+2\m&A"Xl/L3OcSTI7kaM_eAM#?:@C7)Npf*nXiKu0O?;<5qmb\X*T-%)T26G9&$cu&Kb^@l>6JjJV+](I!/C5FCk#pP
%>$6.pg@1e[R"AX!S]A@<j_l,jo(SBU8is"/=+pN][GYICbo.lB[)m42aslJI$4p<qL)hQTgTl]RJOM6Sg(metWOu\9$W.VAgi4sQ
%\5UC)8h+(!X-eB,C\,Ip3t1bb74e#=\>-A5q2SRc1W2&s6N^A'3+`,5l]oWr12q1oFj-;!P"A#Oei.I7,B89H(,lZY:.TIN"jAj+
%C/DWh,C+jZHp+E``!VMs3!:2/MF@m@hMIM@ADn,Jp`]p?';GTbppE4F_0Zqbi#l>WI*Y@S+&MsDV3'[a8?^gtRtJ$-+te(hlM'D7
%iMhW&mW`?&T,mUM;=5DCj';"sa[EmZUqbYD2rf7PBo4SqH<Bt&A>\#,:sclnADJLM7[Y6s;+@mNbVJo3B$f>6=Z2a[_2'`!0Z;HL
%P::Dsf_$r3MNM6k1UGTDl6b%q(f9Bh95=51R/_ctkr%q#f&N:M6YiJYSOXX83elt%@U^Lrh*Z@2$JMVh1,flC9I*S#aCL6!johnk
%9N6_32*@3W/>pE@a,)VW@CKoT51O=U%LdjC(d3gU_rSEaH&,<rIY[9Ypq?T@5`cdt?&Kt1POg9@dTG%Wr&2JFBA84!`98D2lEPND
%!8V-XX-];.$qL&>P*Vk&m["^P&%oa!YHIW<YPk$eon[kd-to5<3do!^>(%>`,+D+^(=51Hdn,4f:T-<KW&uD+LBu3QeAeD#ZR6tr
%D4OjEGVERs?rk&(ggfS4bNbp;nb_[8F>)^<n$2^)1BCZ,5s%bn&_FsaPS1*YPaGe.P`/j#&nP5WUJ%q'Z43lP;sfCiYRnC*T_=.)
%E;`q_cHC<s2.IKSjl=dHcjSXH3!Qakes+s0\U+`hXBT5ij/kTf1AUS&n<W+NX:k9[NurB**Cng\0gAlBrg*)QP"9LdWBDrtOYrhu
%l*Pet>>grfhQR7YUf9aH!uU%FXI)UH78GDFP<AKk//P^"JG2?OX4](UA;N'm7C+&ZG0-OOFCr9-8WTh?#A#+-#XdbuJf1C97#V>k
%MQEeH@S5"QJSbKs&-3-72`tu6%?"@NOVXV%cfTM7(&?]NTC;Pnqi6.N%gQ(E_0h6^!o+Hgk`f0LR1TZrn]?SZ,%G%0\igO<JPK7o
%A9Q%i#'1S:+^h7#Yb[@gi0nJ)`_]0OUm73?1EuN+ftb`p(NUe4=>nlac8p/W0s:&knSlK)Vpkg^0\>T.#I+U2k/=`s=m,5DcM>:?
%(IfQd5!/$P5`nG+d)nq(T,+$kqF9dHN-2l7=&t6%r<O(A_.>9IotfsB#?_o4*Zr3&12'il++Jbp<.:0#iL[sbfM?bU*@FXFW`W>5
%[3HCA<*WM,/Ig,$N%b_'C2gZ^B_[oLrqMUMM_p%*)FEk4e43BRc.t_OQu^M5l+)!VZG*SS,<_P;CU$5+=l%"QN]`?M&"/Z_1p7\;
%Cg4%:n6nB?r0R$5_Bo\t$1s_mM72:,h=+>R9s$X(^#X8_fTjR4FQkK?>jcjg9>>/Pg$qgP%J%+or-1I53mEY.*H0%^\pN4bKm^gi
%40Cjmp3L:gi<t!Y>?C$69lQTO\L-6@@&(kbpPB3[ZVfg5/U)/2)(4:`(K2ZHR)@('7ml%=Q2WRX3:R]?g_.tOOb%TM=W+&W!nr(#
%T++`qgGo<%IO)XuPL+pS5`'17L5^:Mq,NJi:Ad9KA@Ah_?VUJf-u;UHRhNp+">IgNe^ll"EUB8-I+&a\EA/iOB<9mT)P#)NK=C*]
%;aN/J9+$,P>4C@di-Q,hmj&(oRgNsG]+6qT,R&\Y_)m\QZZ3MdPJb'C%\<n/mtLmVB#D4]^GWNF+b4c4fPM,]*2[5+=O'.;/MOMo
%D&LXE\S8L"6X'_@c?aTXQo(=_\`3kuR#eRm_&>-i5;kugBT;$V1q7Y?N<8V:k0XrjGh^QX#2Hm=>l!l!n7#[R5X+Ng9_K,@\Dp_j
%:b.nC/'9pF@5!4/rRWL0NLp"Wc8t6a2Mgj[#N&4DITsHnHCYu1)k0OSVM*eP/q,a%nQk_Fre>V00\=J(@S'-io&V4kE_<t1G@Q6W
%%Dg,4kc,^k<rFJ/kW<"JI,H"ZK5P-gACP3+Ynh'bn$_Ga:Z7Ql1#XH*g5[Bo/&"4F*`h5G7YbJJ<m8+.Nap6;/@\"0%*Z-2Ln3.>
%IF.X/Mh6;*&HnH_ZO!nf9IMXIhV=tIF-;cV.o5527s/R*Sh&5@Bll<E=uS1?NQ1gR4ft3;@M'^b)jM>Ti%].@_6dt;Aoc;c%6!so
%-IRX\T>l<*mlfQPcNuR0NeNLD9YMbS!6NZWhDV,M8H1kcVl!7(l;W5U1[_0/h`PW.<thqNBD52GmXP3NB2@aKEe.9)[)@7$K]8,$
%+b.U,oZB<\+ufkni4j;18p=p`a4s,HTT?L*<\GgJ8f3&7;<O+d>RMs>M6qru031bre87Bm7Y])X++Z92ELN#U_cG'(fr"9(]:qR2
%.I,CHNp@U$2:Jk#PH,:@T:so^6Set&!SECGRFj9bR=F&Bl^>^T\+n[9ULH^/-rebkj?%Y.g#<,jj[RQYNg=[4g-c<*gArqkI`)UN
%e)AABQ7<\R0?Yj]="LDnE58%K4Z\*FP<9Y,?/S.,7=^NCZt;9CDK<+?*]f*P_Ic8Ua`2PE0)Qe>n)`t5YM;dHM:>dt2M`QroN5uX
%9tVn`REIoT73U.:<V,WY]aU\QJB4*BIPf22el!#;/@9OQX0kp%QXTM!$7mUIp9fcQr:@Y3'pkN2G.9Sm?*4YuX"56D%p!4FGIgsF
%6[T'm?l";$fZN^cY-LJrAkZc)</@G7IamnPJYg;i[m4`\"%0U:V9eC(najhtM"FX;-BDW\U=eU)S7POPQT]oE<^mSC)'!qjOkt->
%ooM8tbu*mll<B:j!L5`a?./Uk@J=\#VFj=gj5GSkZp.3(/r/!#fs25$hVm.')5/'`Ks!,^<\G_X@tJ-EI;p0-9/!0.d5ZWrZ]p2]
%;SupS_6@sDC+-rBl1!;BqqdMSk`#\V(kI2PnEO9gRiLYQKMMd]2jm'JH@)l:mu_&/Z`>_R4uFo\h3CEV11/7G\*ZnopWDd,[!F$!
%6_5<j&%UIXNXGL`*^_>MSYqIfd(CS^6q\TanIF61!Th2bGC7>7]'#7jXe[MJY1gn_=0CUT,)RLe.bq43[t)si\1;A_\++r3r%@ge
%U=2G?)K-CnQhqdC$q8sf/2o:=CVJ_WIF.'tC[L5A`a4D%2g\n$U>.2^b?,Pk)in_+QT"KXRgDCgAXW$+RPIZUj/:G0Ve0r)[DmV%
%!g$*D5ld<^EJj%)6KPp-7Gp'`o27G!<pOc`/Qe&U>mpo/4i5K'V<G;VLWuu0S%\&o4e;f]cM+5@j-DWnIHiG%R%k5U\tMLKrh*?<
%pMFp4%<2/u2X=s4IENM/TViO]!sr2[jcchNBD,]1g$[:nQ&f?6R>f?fOsZ7hRM8k.^H,%pI9T_:==F*[<*YS(et&eqbe^(7fWWRp
%6)6N"Zj)]U:m+AsAFaO_kqMQo2]4i\q6TKOGFUT:5^i8f>FcJg<EOI8Rl;PDmP["@_aJHd9hSc'CR2!&7'0eC9#\P_&u+-!FNI^_
%CQbqT'1R`5Gq'_JW;!an6P%Uk$bdqqVRFa>5#/pWa6LYcigX%$f$OLT3L8*(USB%iS#!qM-%WWdArF5T:&?8>DTm,AMffQQ`]nm;
%+#\\bfjLA1eo_rBD*Oj%pHTj5pDaV6gle@l^`4'T8]1GkGo+7`2gX^)O&4dL13D<^ZN&`VgL0iVF`)CZIJ_#V</kq&i8jlSa1j,h
%dG;EG5dZ^.^2\]"KWA^sW7tF`IVB6rF]uD`qPCHN5bB^d[Wnj="E<9GDf0C*Ug-i+RaUl2k%j!qE@0S6@7iJ8<G&4oE_:=/Wao[$
%;'SIaYX#?d>U^lKKuQ".AqV/.;/CHA]!GqMOr2kVBB_C058a=Ne9G_^kOkeA9NKj2B^R?\\-3<0KfnJ=T4$9oH-]-\jF?g)QZM8H
%D3b$]]3`dq(nr$8_60-rSsQ1f5C1pSY3_:TK6*Da\u#+O0LI)#OKHC>/"g9*nZfB=#(SKei=ee8b(Alj[n4Jaa9/5h43W./H%7`-
%9RK`p?lIYo9#N*@#og^+%-LKXa)N0BGqA.+"<=e/kWHWC0qCdV1X"s$*@!(<e4l]"O70a)m6&8W(sesnj"(tg1904AK3P(2p17R#
%qnfZ"KTNU:O8;!,lc@C^5EGfV$gp.Vb&>a?@$ZEAK$(DFbd-.48W#'T9H5t]0MB>6'3eA]fSV%u:h0jA]kggqpO6t;Moi2^Mu949
%HYM@l[k(PXEX2\41(4\S?jmBf0DP80GMPbNop71eEkLG`l]8X[Hf&u%B&^C2Um_)lKXCfYLrC82FiRW8F:GB)bO]8iIH\uT"f$'Q
%Pf:bhbdK<5)^,*.]^ohE\b`S?;kW&kOCAAC<^Z7n-`e9;A@qGFcJC-Hk2L2,<[7XV[_C6M>MniQU@15%b`B5+A,iN;)8k'r4F=fs
%OV:@E:X)K"_\A4-A9O6?UL]J`.')XWi`k;WICo1Nei-jknRB!FBn@/PrA?!O-YR>(CX]k7JT#)rDY)V"hsY[,2H&^^I/M(NnXT:9
%p-%Rth7frUeTQ-oSZb[s(g*#'A$)K8UJ:p.KIHAW%TSD['YSNAYl$5bTa!?]k]iVu\P'^8=C"r[Wj;1:R]M;5Asfl>Z>Dou:F?Im
%Y@$+m];6l*kd6&6B"2PJ`<i99%V4(S-@![2^)TXi9-d4?Kf,1IUM25\nZG$e[l\aHRUA&5Bn@\_S[p2qnK,bk5=(=-%Ra"+_b/fH
%n"Do5L->!8]r!clLdKu,DPm-_mK%M<T^42Mq&Y(LX5']C"$#Q)9l^^Eb3mEuJG.aL]P(:W(Ec?<CN1s_gN',`q<`6XqcSsVj%!%Q
%dL8`3@+XKr+>Rft?"\D/Q)JQ>q[@>f<Uk-9r(5(D01+Dt.@]G#ml>d/OgbX3g-Cf;G(or]RCJao2JJ.F"E9Z_'scC?RnJk9rLe;E
%,8!kQj'p!F[cX8V`4KU?h>?>@O:.0WgGAT\^rLI:r)`u7"%G5>$'kgE2tV)]6MbT+Glk&8lu-b<>$ou&qVNM_H/F[p"'p(c1i+`)
%ZB]=<j7,h'>n#Oph"gRTA9e=JS#q6GEr;=Ds"NBR:5c;;Rg'X'@Q2aLG;7&HVN'7O-gk-+80L+uQ&Y[$hN6_\%@@crd9a/RkBmbO
%F0#B')&!2Tb4$:Ar!ZE9"/,QC';&jqZV5b4M7:UF^FheI0CPK>hPI6^9t#<H*:buWHh;7O+K_9P(JR;VK:MI!0C1!GB.i00'MJg_
%_^HLE#;liH-@lX"B)4`jmDDBPDS"[0?#F@smrR`I4M;99r'R''2`'ni0(2Sraf`]J\M!2;<OJX@KYGE`NbK=/EjnI%'AVt<-f"b"
%e$D!BJ%+/sJ+E6XQt`%>J&]8f@pko`Yg40=B+4,_#5/o:qi$)S`kXe8[\*)McSG#n-9fVkB+4-*@:7OSol"3Nr8RCUQZ&J/r:];<
%T3_-c2if'Zp,i7+kjQ61o&e3al^-VMmsk-+aZmIb"UDdAFm".`.cU3hUm%uk?K*T7G1AueFs4Ju*5Rhr2nmlCr:)H8mgo7*.o4t!
%nZVfXs%iXn^SUTVdLEhGm/HO)/\>pBo;^\h99B.SIcoMp1uET:mamrjnRfPmguP'hm7gpHs8N#oopb!JVf/0?HMQXp?['93m7I;+
%s6A/+h+t5(AKCF9l'l=(?G6>as5`F:V&R2K_mAO8?iU-!l'n=4rXN$-2uMS.q#Bo;hW:\Crk#lhH"mh@Yq.Igm"Ol&(k#FQ=\q0E
%fAren51+^n].o%d'pb#,/qg9iCUIIUjU.6VdL<q3kFG;VWs,?*cF5<d6YUL@/i5`1M.+/GW`Lh$;5pi]"qbF7VK1iG8W-h&p>7L0
%HA0M=SW!<D[#fG9>`*.&aK=Rt1(S,_'?cY7AM5Y*8j:-c9>7DL2e`S"ie)Kh<:n"l:\+32?AX^344+U@EKOV;E#$?th>O:MV5o.2
%ebiDYmpq3.)T&Y.j/75&)d05L>m1f"5ODOKlJ/NXbe_;g=4)N0RcQUT/dkb=g=]Jr=^o.k?R=)k],IlY7it4bZ5>>8i5&&.[]:sj
%"qA</gq0fMf++pWL2`T/oHM&9gH-401rsIQKeMBG%Jk5<S0m,En!S0a]TKjeaE0i(D6CLS[%"aN:"!W,IY+(;n$UZd&^#@Y+<;R+
%Ugk`@Hg)c.P$RlI3Vt;GMFTqIn;Kfm;-":rBJuVQglg`,\77m3YB7%.nC8^h"J;rT&sa:dYNN!r"*usZBQj0/49OF+0fPpTU2jHX
%Ke'[`g(O@o1gZ"CDq_:Zb"+)q;RXX`TVX2_qj;fuQT>^=R3lT"nrC=Yg6Ll-`u"H#s%Xlu_?,"ll_IPW3j;,3/4k5>8hmnP51"Vh
%b"!65d=cdt7lFL_f[=#jEN#PaM3T;!`LjVG:Sqtsp(pm2G2cS/M9hJ2m9\QslgkfY\-lhO-EPuS3S[$bKRD1!L=etJXQ9?'UC:^'
%>D%A4;5Tl(_u,d<GSoSAGJ%ig,*d>:N,*L)?Y)O<b+-Na>'[#Hq+mDd$1H)e\#Z<CUs!=Q2_Pf"J'72Aq:AToEEh?*=P5s^eLqR:
%!2pE";#r'[/#@?PI#8`*U4"Sp^gX%l?]"T06,\t-AP3)s&6_s_N@gkJS+UbR=$\AN)%9b"""FMreKR&q3U([0\e?fK839Zm;b'gO
%9R/KC]q7\Dn-OXa8m90!6!q^:U9Akn=\8IT%emf9o%Jd"jA[.UjWP76&j&Y^FD0JQ/^)Y)'r*(G.>'2Z<,<W'[T(mJoJEFH&ZH@`
%MqZ\@(%jqj3Cg!lZ,uI^,0NGU[CZQY&Y5TX1b[2&97=/2j[I"93%ao_cDk]#TL`!QP^hp9i3R)jBRKVK$2cPU'41MZa:d2lDSVPf
%.U0Xr*,g.tI#")YE[$6_Oa`XPV3X8KA//ia@S2qnfqkp<6Id6\R#2q!#ISSldk?nXAN@O[;hL<`WE^UM.3a!?A7LDH#[q`>:)RNr
%9CrEjYg?9Z-1"]Fdh5bRH"iBa6Sug)F=U&g`ai!P:sRpS;%)([S1#m)FD8U6`#.Ku%,jtnc.653bnYgX'3q?FkT^-M.P8b$HRP1.
%[)huaWKuubHWm#'7A8Y"!Gb*BCLi`?FPRP%p$h1(hIa7?@+Tp%,@4W$5^HY9B6ctd3[gd&ZsP:\/pAl;N)KHW0oT]+'T>DrQ.[3^
%T[H78g6FG3C0CWjgu7-VA:cBJM[ioi.nbd+F.YHpVC2EJF4*on(U;]Uo-&ltoQ`3#8l`5T#=mVr6\K1BYsjCGUk)me,^G^KS4F&X
%ac!S<a:];56:<"hK.L5b.'_0>1>0XLG0D[R08YbJV*XsS6#u%N"\+FeKs9(#G@<^%@=$Qr<F-^u'u;d])Q![cQb8#7X%<\"f5?\C
%LLlEaU:blnC_C`RLLk1N$I%4Ho!$+L^FWZX6qe9fj[8V`IbG:&.1aV7R2AFj_@%ENpf'Hn=4*AK-?&?WFbQV+ij(*qd+5YR/Q\T&
%O_/lckIn$6>gfGp/Br2%;o;@6;NWUdjV0H(+=OO=b3C1"U3&Z?0OSMP]+F<C2jFKO%#N'P"S)a6*>.&G.n.KlYKQ<PY64r145A@?
%0!1Z@k]EA](ssZ#6BO$NVhY`B3QAA)F<rK_H1?a9Mh@P;(^R?]jmtm@_u9qQG[_HYb7EE*aY5KsX:lG:UX.Wq1E8k[/;mg`s6V_M
%SB&*[9k7HD;7dIi9iff'chao==K:RS)11TdN^AH:Qg\9l>Z1."qbekVnS3jFLWL1#'DPn0=dG4;X1O5?0$fV&Qat#">SE\9c!It:
%BN_GB#=DaN;sh<)1k(4@\I46Vg7o,[![%k7m\o^b%C,b!lSU6W9gmR!C,W"Afn`'u%^h(Y&3Zm17gq1JA6Ot@;<jnI1#=Z^:%VH(
%+tC1JL/q>R0o&02*#iQFWZd@5.lFcXjMkm;CK/\1/93-jU/<E'LmTHqlY8CJZ5c@L($KD><32pX=++BL9C`@&TtNW2>'4sVYDZs<
%o2(0Dc'dqJ*;li2EC"[e.NG#s]VI%#/CdutQsScDW?<NJ[nKP[9N1SoS<n;l]-EltfMYXS]qj(\)cV+t"3c[NBoAoh[[:Gq93?Rc
%H"9VHU<U[!XG\d%E%=dn8U;<T/kP5YkZte/[MCHB$oQ6KT&tF,D^SE_Ju7]&Z`A<K;J$lHNp!,cI`W=A&nqp+#n7&MEocL^70lr'
%Y5"+3XL=fn2mk'"j=!Z&mr1*Ncf&)oPjLk@FRjNVZ)iZ96%VJR`dDGXXV:N$4AQ[%;"GfrW\)%qnVZh;Sa1<fnICPm0,H;:G>qu8
%cT*llImGWXg4`?e1T746iL%O-"J/*[#.Eu+YFcX1o6pDQ:OeCq>NO9&B=kqYo$-K50>H?AFMGS>qXfOZ^OPq=#u3Yh/f$l++N06D
%P'!:sMb*pR#dJQ*8>leeir!GD$-$&*7jq.NQfP/!c#)*Yi^o!eVP93GfO3bVaJ')RTfIW(osCK7lrm+%*H`ts*3-c2FUn,"9FNZG
%)g/.4Mh0/>L)ofk.kB#_l;r58i&N[FY_%Sa(2_`RkGRdss7-\moPPUEM(<_Ob.Hr'"\fc\jK37MWc],qOY@&@H:T&,p_tm_g7L,D
%*%V4p.-TdXgsOYOqRAGb*!r(K0;c&1<QBq?/n'Lo&.P(=iDL<i[t;,J>eo]Ynec+9A/H/Dpe(h;8:rn;YTaFE<%)/cmb1(@_L]St
%d%+:jTKC*1NlqLe%;qnE)g!ZsknWu6j#i_pdTr9E,2HihDR.k*X/Lpdr/?5M%e&CTU3Z+)f`3EO!"h^/5R9UP6T2i?&gO-%VbM(6
%'j-"in5;@`n,kD;Q<,S4?a%WH2L_$@!kkP@W0s]Yg)K><f?7r?CBh3nI9/19QOI+7B2k-?3dF:nMKj0cm.Hm^j"nYX;LKhq/fk%/
%09d46PB?r-0J$"tTO,ICd,#]go4(iB$\ZWK$m./Ko5_K'@h"/#C]mq-*Y)l,6gY)C-F$mRfATmlJ<2J9kcQ1ZkT\G(/Kuf&ZE"-R
%H6]XS@'MtT7gG\UN1e6-+>%7tATTsi48A)'"pOF7PQa7%5n>R,9?Gm@7KB/6]QEi0UR3f]2,EL%l>,XO9TuWq(=FgrZMY8LCJF19
%+H0bl-ah-t]I]^IO/tI2IA/gD@Y,Pmg0Ujb";H#mO\%#u/T>OFIf-IS3W\hUFL03C@OKUPW;r2HAu7-ME(2sS5j53XAloVZ>FMD_
%'>DB%"VNW0MnLY,V7[j=&m>o"1aMG9"LWkpLgH?dU;[jTe"?kC,5TmZ%e)<Oal%bb?6P?R;-[[kU]Y-_EFr)h^aATAr,/1/!43u>
%%9A+P^hsr'cZR-O?-EV[6eNr\'Df498[*cEYq5<2EmW6F0Y>"%X&0Wfn"HE\2p:E0\1+`KjfiQ).L>JJjG[\J@6R')RM"":)9AnF
%=U5+dJC`F^edt:cDphG)aO;\`T/JRrH/3Aien"6gNReDV-GFi('d\`?L;34&MsK;39^.H&0)?"74rT7AZ,K!>85!6Sb*Ea)+]2]N
%ML!'YkqNA[TE6oJ9L3Y:7)>otf#9f[aqi/R>0p?F1X*di5NsWS=C!s1%`Ja-<G%5<XE7JWAOWd0/Mu6n`kn3^'R7KjH>0/=O=2./
%PfmSAfF%(ESfkJON4Pr8!kih_Z(h+_@0hZ=k#?E;s0P4B;@b:i_0X+t!5gNb2%0JWqFs-T`\Dkg#iiDk?/dK)o->e`]j1kCg'U:a
%3+5gHTbBu0?,uVoQI^:BBo^-!T]`Q*!a5pT7J%uYH<4Ef;(#+6:>PS::f;6h4i&<[i?\C<0eMZ_#WTjT3P[6aN0"`%9&>)81"83G
%U0n^"`k@\,mHp&qcNEIFi-WiQqu_26W*9#+<rc$.Zl8=TTsq;rE&Zmb7K:/a:0_AK*%Pjqpe\>RPA4#jPbe5K#S(5oRCn[-&Bn_(
%7<06YhTTpN8"/SLaK5NAZ5dNA0/Vb,KcImU2,kg:Xs^;$.jO\`/3a=NUL?Qg&n$-^=M6_kDH(!aLC]J#D<\E,g:/K4iq3=fXB_Q*
%QG-/!U,2.5BOd_6g6-,\Ls9<`?X&/X3?gYchlZX9)'Q1$m@f>A&5u?,588$k5a'>afD'Of$Y2j4R6(&@n7$^ee'TJ/?J:@"(-7X6
%_2>a2k[k#a7H3$G]o"fn/Q@_4^tZiV+9SCK.FtRSlp@+7MZ/m[j:tNd7Mk-<W6,boTr+u6"B'*?kIZ51OT@,mJH-rh'\KZq\.bD;
%^p:5DcEp7'3Wb-Al48q7!JI<"L@lL?L7$0T*\`l?3MMJEoOBJR#`'Xmaec%XVCBAOK*S]=!%#3]hTI/QXVu84.Y<tD\KL;U#f8'#
%O^XA>Wlq-`Vp/t[?m"5Oo#$clL]sPM#eR$W0"&`HMgB2U@42-n7n!ZD9*(*,%dGFEVg*r/?i_>R1BZ2U>Gr0'jZAk,]X2fH!E7@%
%jhO,</1Bb>#ibt71gpBRSBc_CnsLP<)'\q!&W2)S9:9Ra%&uX/e4YS2]SI7<%H3-^j(]d(RV27j<.3ur&A5cp-re%.3B.OR+X;BR
%/-%5/a9kFf.h..5M\#:q?t8aZE`SLj/P7)l(X#oK"@cuT)T:hWf0T;Te.F]a7HBg\#`JfH19\mCr;$T46jG'D(lZOI=<L*_R[@TU
%!8aZF#+2/Pd>Nq%iI\=ukcRKM76#o3nn=B,?lS%B,0M2-Jsm0HI^N;pj<;#C_>u2WF9"Q3^)7AQPP_bf5](TsU;\q)>*d/e33Z/9
%JrhSs9doa+Hl7[31l*q9(<R7(ad0Z,EU&98,YaLC;@1;"Q*V%^QH(h\<!;58<XDF!]Xc*e>`JJ(_o5!MQ_&o`RppIoYRPUsh?nNu
%)Z3q!'LiPl4n?`>'q+8XNQFGidf$#r+^\G:(bgQ'M>C\kMK+-k-Y\D;49qC?k\1d-H7V;m$UukT7Em^RQiQmf&J:CQLYhn;4/EL"
%W<t)cOqf]LaFe)a7]#'S>AmpD-0T>^9^!.7m2@-XquG.1Erb-(G_\e>e[>.,OPokHTH%PeVYl?i?AhYsW!UDs'2_AXY@8i>(/YJ!
%WO;CsRj#>_Q*?"9"5*`l:"E=,MIMnrN'UCH#Q464E/-m#(sM)g<4^YU"YYfl@!a=,.<=,1cX7-Xd<L^6htlTLokcD2#Ma/(,K3(S
%-Sm2c=`baj7^S31N7j5#7^Ic%S98:u.4'X`*3s5h@?h=Nd7p)9XUX(,_*!90fA%=t59bGhd>Ec+';M$D(-"\R5uq\P_Jl+eIFe`4
%<5p%h-L`tAS<Dqh_KZEQqV#>.7T`WT+_(^S@(_e]aX/UXFS+"s>WpVo-&<M((bs"PNu3fm@^_FD6qE<I+M*;W7f9)+rWY`LY&;X7
%O-*/$A6nh$Y@,uf0:Ha#&>M,HHXc06(8gF.]IP]=jCq"!A?^uEA#9s'+_dFp6JF%T8c!.PHO9/78[lQ1Ak!Vj4MW_=#"IS541K%Z
%FhhIE/kIgloK:A9U?uma&EhFX8#mJrnj27m0Wp%7(!S9-bW$Uo<qm9E%tS"V^Ccp&WB.7(12R8!YIWTifR5`jG&@=Q":#T*0't]Q
%^^tRHO;d2:@F3Tt(ANa*>K06(,VK4>UDCkG)2gY0GR`dg17Hdq04GsKregdlBOThYCJ1K'MX6_1X,YaJ?.4]p;.5mWRKHIhQ:O7W
%\4+YTpp@:K%hGA4V)pqi.[L9n>A"je/Qm6/J_.*:'t5kl+U^PMk[an,)9#&<8X'6MkZ>?^J="j+,iLPIfHSHF,/><1K6T/?KENiT
%e1ASW+`(74!lHie`0`.F%^n*0<Qf?mR6q*a"<O"j(u^U27P!7Wc]D/B>AB0lb!"+'jokrE&nT#DNBGVYAsaF([`=WKb`n=DO_6l-
%j'=c82`naDR"mt+*Kem(pJ2/:#AK;L52I*I;UImsUcT5:of<[$&F2.E?;G0[7o:oIq`(#!0ouUA!nh_Y:WS3Jh)^6!JZ_B.'V*R,
%LoI8A5iXGf2R+\Vd2XYZQOk;4g'h8G[7b#7(i#KZJ7^V@P10b_g-H`6@rW\H)Yatb!L`r(pg&\\+#P3r_7P8'+m>!3*77He%:9ZM
%d&<CgpP;W<R[50IZZalW<bc.Je[#+A/_T-'5$7i"i(@0L[a_"HU7koG3CK6B;D5"_E)0`]%ODhnER;k@_'mKC,&i.d+9Ri35$:f3
%0m%@N?DlpLASdg%e6rNdm'QAlJ\Vd9%bColL<SW!*1X+03K].#<D>d,Ij/6=TIGLI%Yl!\O2q<i@1[#f"8G\%rr\4QK``HUH%jpP
%[\qr\U![0I+B6X#)0(%:dcJaWZX?YHa"I]ei84li,hOm*;30pg9,7qbg@\"]8EYYf+gh[HOSYVPYi3Bm"YhhjA2oN+<^:*`d"_3+
%ZO=hn1[C-jl8jklY:/?S)K!ega%<[)CMFjJlT%$,/M^%5-rQCf5pBm?W=B[c0XHI8"Va!,=BrGss3UZR=_%NZR=7cP&/G[X']R'r
%TZKK%4*uVmCWXH_1%LeGY=qIsLd"^-\DGlt-X&*J9n$J&&L"KL[7+Un'SL-l71D$$`4D)IFhm6G03%R74Ml]108k)m)+]EpGj2$)
%&C*pBLO^c6!),AMHJ2k+BPf=!?GTVM+0[eO>G`MpRR`!SV>H,cY-qj%B9F("A&&m;/6P_hEZijc2)8T9GhR!<n&4@B/jtRbL6Vs&
%0/jG^/r7LuMYgDe=]B<gQoBr`YX/YA5!nFR[P[$JqBJ*3IONMD*JB3rXCM;,X:M/<Ob8DIL.*L'Ud1AD$&6/\@=Anj10Or7Tr!aE
%@Sr?SFp""?<Yc7FR^6Wt9/RVQTcX(La]<q]'UAC5)j!?[#cKLW,qE)hOM?XZ5iea92U"RbF<jS,8JJ9LIjp2j@8`=0LoJPX;lO:g
%hJ2m63i$)'Z="oh-0pD&7UqD\DTgZoI*oh3]a0uJh[-=c&@>%uNJ&Tc>sJ%l>F8#+MZVor6iq)7@@;Y9-X%8<U7;>0#I^SH%ff=[
%*Eifs(1;b_Y(8KGH7+@D^+1^ejOj\?kVp'Qa`iZ>bV0^oX,au0\hI#K@">KU2"sAUTQ6ja63YJrW!`p9)U35[VYguTVV!"t?t`)?
%nh$.o`ggS`OsmO\#DH2U,a"0f\%md<Rc"Ao=lJV_1h6k1Es2$8@VM,ZEBoH<*FXTM^Re<6UoOrH4QO:nVAV;5O@R/lVB\eim[,d$
%K!E*)EYB&(a(nEu&hB&&oi2fL*LVQhciq+;(*rfH@UDtceJ?(DQB".L]u(b>HqP>WH'uW,a=tebml)+LqT0"46TLi/'*n]G6!u7.
%5,!V$h'R4ge0AcdnM]n?e-*:QZjakl7K=G4+17cZ/qkUUW(j6I+&CE#S^s2S@*b>SR(g,OmdXRto0DC\!1sgabA,*BAO""%n7otG
%q-s`QDm\o)+%4TG'GSi]oHUMJ>pWLU+p@V%DEtB<AkQBNR,NG@Y"(</FW4Puc)Aml:h:h#!C.Z;@\AbfkgV-:P@;?L3\$0J#'ton
%"#KU\iIp6Ke3,WF#Qg.ke+ueE?=4@u$_$%j,8&D@?S;j$J+!$F$h;=%nKm>l#*PXm1t76O*XL__hO")L@X0V_R;6.V9rH:8#(UaD
%Of.;#jqcrOKoe'spS+^`RefQHV.&Fm.'%4-MMe=fo$Ui7qKL2UQ<%gDbn=(Z/AsS0TO%l]LkSn$`I]C`@ML`I[p7h&?i'"KokcD2
%#Me\t)ekG;,'YA.09_NUa)XLO#n@^PMH8X^%TV]e(B6-/RKV)9A#sE+A4$g"H"dJ.,SD>^$]U%+^ko/LJq;5/%!a21N7]TMg#5eS
%/>.fl1$m$c>+jrJZ0nK)/)ol"o$)B]RbI0AK-9N?'aB].B@9tdoZdeb7oRgNq7)Y=!R]E\!Rd_HWt_;-o(\fbM.b2D5dh=o'[NER
%6^3i:&%!l/+_L##14bl(ft9LVf6aAO,dh42,*NZ8QR66Za]%?!/1upa%[AFF"_\8E&(A`'B3cR[Lsdn]'UiLf92DXfd$fn@",fL(
%bX9]P9uB(38Y>41$F:gm8"bO+LLf;GqWkE;%F$#niQKkE!7:;*]b1'K$!(d*N]3-'i-ooMmA6D(aT9h;Y[1:b[%MqK$"2sbD=Bh;
%Z[j5\ZW,kUZXkCd0b\fJ]*+jFJQXVXI2rdL+c^ifj-^=_=Mda3*1sDId<B8T*Q8dF"DC)p10^-TA=$nfdJ@MW&@@7ZLD372"`Q86
%g#8(g>F4kZGrl-3`KXDM&AX+UpaCe!ls_t2fja6nm8.\6dIE>V!k1Dso+TKTemT^89(SB'Eq!\&16o1(+@X[=*KEEshFu8<5rLV!
%+G?9D$QqdSg,r0i(uRV@5d.<ZdNd[RB$-#pR@,*(cjqb/LQRo.#-d#qi#3q8UKn:9e/8W+J\Sbb8u,S`GRBmrJU.MH2)D=Ek4^E1
%DC/6g2oMtT.;O*<+khq,_Q[)uR+,cl1UJ3!MIIa(6p9C?5t.XP0gh!Rkb3shWn-c\i2+r!-aL;n.:3s95G#]86+jD:fOW/dKcR;O
%biT$Q1EtElW%agZgc2Yp?/9-DF0nS'lfLU/WJ-.TBg^D8"MBH`P)]8pD&keSY!b8,W1QBl-pE0d)eRk.YFSYW,ngul4]_s7fk[qV
%[3nm4!*GUA(!TiH$bKKDAAqd(r$'"TQo(HZ@"Js5T<7;WV)sd^!eKN>JtJA%7+O%HgC:YM;N@WI'N]:'DmeSLjBa^V9O5#Y:YncE
%5;K#?'p&9<5b,nlA5Ed$&;`4Li#sb6d<*#S$`B+O2q%BXc9[elObp31il"Cg;,a_bh)";YBmk70Z^d=KeR3-V(b[]\i%=.c'?m12
%0c2O6QJrSAeA\pq\r^A+ru]P8n=J%MN40EONsr08Hm#:;&orn)917-)9,jncCGqDqbRF6GJ,r^If!L2"a0'q/A=*U05`r<UQM<FR
%_:N/4JBNLnVeOZh;=h'pe.>*,'lM*%?dS=L;s^4"_dWqhG+kc$TR"Z$;Xjc[o77LR&g:<O(L&Xm[-U\H10T%l3Zue.N6$U8LRcpA
%O'dELO>cCHm?!]m_umCiOt@Hg&:-,iK)/f)Z14]LI`;_KG@Ae7O8VK1A:0*.SL2?;q"`0E2T'uGGRE;:UiRg)-4%t65sr)>o:r!7
%&I?H&,4T>Tc2RdM*K&V)N*HVK/@$BW&B&+2`1k=t@'s,$BOF?1"(?G/KtVe.p]/#4nN$"-("0sQ=@jYV1pgs\!D)-R7_t%+\^_D#
%bIOJ]5#&$][+#:L)ZjMK$qonlNmbH@frnE)e<jj&)Rod_NB.AcIqCdS7=iqh/2Mi;5a<s6ag,:u\=eP\7$)t6NH:\7]UU%Xp^nip
%"B*q=!,W;cj#KQK_6m7o9*pDn?lRSVZFWi+U"&VP3%Prj*?RL0Fm5>;Bh^2UQ`LX`^*%pQTL)RG:kqbA]U?nBNBFe]:oe09J@K2[
%N#D$W8EsaV3oLf%V.QcCA;qWG6+N6/@mu?Ui%"q.F+BQe\]_QL'ar2Ob;(KOVY>'&62!L83eTb?j[J.d8=5195h$>f!])YFWM;j0
%,_-).4Bs>e=kT<saN.^8T`F)CZkDm\a=t#@B2lQqB([ki5fQoO-I4t.[A)nb=C[_hAm&0Rb""2MbSYroN.$\C9[Ei3S2FZBIY_95
%!<q`!D'p+*lqk\06k=4U@"Ds-jfkXdd#^#Ol$&m-#V[E#G(Deb?'geJJu/tJPd2lcpl4E*@0&`%.,`llXP9\JUk-B\+@^4AGaRd_
%2":EQL](B;i9@s010eZBKV"1S6H:#s5-:R.PTIc\IGn]<[#o$m(TRV=9J)/ZW*LDA?4fQNF<=X7XjIBLB*//-PX?>+Je<o1p+YL>
%NFjmhU]GcTb;1IOc3nS3?jts\5o,"&>%>cI47^=NR:PZd&32CInM$,b(Fh<+=g,@m/Kgf(2CgHb[&@,c#qu-m<L\ZAO[tAF$5sn4
%ZY$U.82j%M,?jlJVBLo#!W>J]?8KHd&DT+`L_`^g"s(JtT>PdDXSBkoPop.j(RBdYbIYE?#eUNZ.>Z-'1qeC]'$AD^[%eElN\>^N
%W^DfGN]8_7"bC@2q*d*%&A^mu/&_3%Ncsk1(dB]gl1/l#+P)CF5'XA9B/egF@Dp0:0N9oViT4i7)qGSfHh9*6l5$d&J?f(3h.qm3
%6[6*TiDd"@N-NE]GP=`pIAadgBmTfkh0ZI9/5<nUrp/J!IWt\Mc0[Gsb8#3$b:!;Oag7=@+'sBif<8Q[1[1HZq>/VPhjm!Fm=+o<
%h&lYErd'.Lkrl*::pWnc'8q230=3U`B2$Mi@C^`=g1"m2.7ZY&LqV;00d%uQL/E[]^lT>J_d"cTdDW[*&rI9).8?R3S?Yo3"bgP:
%V0#nei*aj'7M@cuoMU<^)(hWU"6j\s,q7?B)OH$,AH2X+:I84'HA^/_3PrfbRmjt/qh4"WXC'sgOIH<ZTU"X=RL7+Q(<MdP!$;Yq
%8l=/?q/2R.aEuGVM:Q?u`lmap%6QU$g"5QdCEZ8nELOB"_5,JQ-K=@#+XIj42>$47QB\[4WiOBTHC-;bOhT9CKf^bF!"Xe2J.?1[
%4R:[P]%NInaO;&!h#Q/nEQ1Lk';7XInK@R[/._)We6+IW%L)8Sae1h/F>G^YkZsrPPELM$!EEC?ki.uD7@4a4&nBd4NH#0`L4XS\
%"=(,#pOEZ0\]/Y@2M;i8lcGh%-5<h#CeIs_kQl`+!&2W(+j:RV0)K<jU-?AqbhshRE.*ME!-W'A"sbF46_P_T9#m=peU#%4c'[KA
%Be7]e9Ss#t=c9h7[#%o3JLhkl9PCW)6G4SV#"Ch?AC3_u'13SCcVYq54I6C\>O42P[oCO0-eQsO11D#PIROTEY7Gs]?8jPg7Y+D[
%_K`7s9$a6>T=+A2AcPa$(6E^U(b"#/M@^\h,^&hWIf$!6/p_5l<ic=:0!*r`HN5987*F9)M,,0D:38EIV17`4e\N@BTFC/[XG*%q
%m>,$l*6+L4Vae*1I\6l1*K^Q'kTYR$of@Aa-*h:&=*7A#4JWmJ+VL,992IuKhi>rUCC-Bl`j[0?;mH6Ee/rGVGAkl%;'$+Y]UjrK
%(1idj6Y5-.&kFT`=2Hn+L4\*D]N6tB,L<hI4eFGZQ^<,7%iHt]<5OF<lC'"L4AN)W7HJ#hS;NZMcN>gJ[1QpGE!QbQW\,p;k*?,d
%8aC4q+,6'i],j=1mjeD2o8n%cf$Z_R!0.s,q$0@,^qZ[F*[nroquOH&+qBa@T1<uBA5KQg3N[f9>u]3t:cs<j>_._:qR1/K-hsUX
%TLg%t#FqM?78(&Qn=i>b[Yn^mg8.Vf=nOh&Y!ieq12di6""KZi.2r<[!RXaT1)(R"A0^,.Jnl&lMs&T8[ZR^r["`1m*2Va&b&2q@
%@C.j&9q[2rKano7EM=r3N-]V%IX-_P[,q?t^cn(%U/>8EQN\!e)4)EM7n3(Wr9]qBgH*Mc5j#t9^-fjj^)&@V;Hgc/7I@n*X_oMh
%]M0j?=SS[e)YrSN]>0P_&3Ce8Lq<T49XG1uQB3<%%=K%[,Rbm/XCO`A[m<9nBdRnBMT$0u6lgOsW"sIVTId6hZE"=f-$&)n1F-]N
%4=YR&0N(`_.NusYNE5N[1+aT9e1b9%LZi:5COYEK6S:UE!nsA+>@^f'Hj.*kZFD)lXUA%UEu_S%5r6geW$8?bg^*"0pintuP^^#f
%35(8h,tapdX_p(()fPoSG4b*2.eSOoUD#>FfLj@<..\8GE8k9F!mUt<024jcdiA,bOBr@%,qpEEKGTPG/;"!6<T.Z4,nXUC,Y0n_
%8=>(`#()LLrJq/;aRlTl@Gog2%g/lUAS>#n72feq,h]H(faZ4:,Z)n!'nHK59&La#F]O\-UeZkR_T/Y3V$gD1$6l-CQRB#H&]`*a
%XVsNPYTSIq!7]TG>8G0\TOffSd6MK63%;MDAqU5a1[^r'n1l+dO23Mt$u!gLPnfJu2qhL_3t\-1A%#kLW!K]K*QN<\'o6E4Kgh;s
%,;b<D(RWkm,%C^4*(Z#R+r-u<=FB\F5U@a_B;*EKb^EFn[dN9f3GRIf.S`X94m>7$BpV8V5I!>mqC7-LAnj=c)3HoaXF8'^^t1rB
%+mLh!3D&Mm(8.1jmm8d<!Ubr9-EoVS3^ckJ/GF#j]OQ24#OWZNdm,49miu1!nZ/$/Z+r^6$]C_N6K79=pN*4t7_X=MM0?Ng;s/2X
%d:+Ol=ViYaCrj'f-A*K_8odp`.^N'J6B%R6M?F#5]pH-56)-A4`m2e[moE&f1gNLsC=<_Dm3&2;+BDpZ@F8&SaAOc`]SMeP:kcjJ
%&4f7#945JLIs\!",N)2N?e?D#"Kq)4#C@SVK-I$R`07:(>N6F#*C'l716LFJ]0\Gg7cm8tJFr+flp5.qLj"O#k`iNm"(#qAEC$]2
%8"i28EcU[qQ@-<?$#IC9R.^nA(E(q=IlgB40;eZp+EP<aaK$-m7-(^(<[D[mgnO<u5fq:OQ%ju5((\ZkD"OV6fQBuH*"DIMU_mQM
%-6+g,k>;m]aXdK((gNoNBE4D4d:BG,Jo#b$V0OPUG<GJ@TctR`*QQMCbV%OfR+<q%<U9^o(U(BN7*:Y@1)`\)lc3Qp$VY6E%)<9A
%"6,(F%LFW[H!+O_'"Q$S3o3#6<@("+q?!a0kq.;1=O+(fW'IT-"42R?MX_&:+8G*4no%\Dp[P4Vd"[HgP$q4n4XF<9N-YpsIAW:R
%\/1*(GiKp$#V;?^>0B6u8Q1gDDP9()FeH*VM_bF@5_I^iH,m;=ctglhR/:(6_?XW71:34(]FE?GK)ito9cU!21+m*8%oX7[%EK;!
%pVNjD$e,4qHid>q;QU!,"e0UGI>a@ei"9G127BRm24f7Ir.pFkmSBIS0pN>s!U>_ks3-Ck.;7Z&)<5j;EZM+T>h*XK[gYo@1RctE
%3EOSOMB`n[G2H;Y&L2uu0S4k$<YG]gNj)/>_\hHQA'Vd#>R5<*d?dMkM[mKkB`KVb,T2iPN*SUd0+gGNcfFbq")WRD>(Z>]Q,ORL
%9`!-^_dZ(ir,e6>5fn;LE"k)P/R=qb!73L0$lI0#X0Z=m49WtY!Se#;5\l"I1bd"ui?RPj<,XeA=4d$Z<(ru3\4,Ei>/Eb_p7@UE
%kW+b0Y@oAZB%=+nX_Dq_DcW@UNfa<W4I,!/XBBRCMb>EK"D6\@O!F'X:F-fOg19\I8#GS$5mqsjPW[?SQ/3H>PcUGiOAtN3ZqKW)
%#>FtD/3W9c#:dE8dRu`3Fqb476&NWPK=VW=/:/M%"nM>J#cHb(k_iCt?')i)&lJU8,XaEr_uW(*\4OmpXM.J3B's59%*?Ik#3HN!
%hNF;eSsL4P?DHQfr,^:a29?"R":!+7!CN%%AoZTMc(n=?Wh&peFaV/).^%c/;l1VaC(Y//d99XLKa:9;Tlc+!eq53ikRb9sM\[c"
%)2_=d1m&K>BN_6P:LbW)1!3c6*FiGiG(%gT;@=U%^J8.%(qaG!62#'GOe<Id73`A4QHmcQ-iQ[o1XucUV%oPk>\pf1J4Lnu1o'Vi
%pncS=Z'cjAAAVhe'i(\>d]m0,_TY^*$,3L-(9L:4ZpOULbT8gB/.b*Js,S0S,SN#'=c^aj<`[3@X@)3ATH`\GX.QL"G]el4:!d39
%$gAa`E3_A3.<E<mVcV65%a5'$R[F!U5,f0G;e0IqTm+DY@Sdi35s3<f3$l?`S#5Ho(*(iT'b!'$0_PWFb:l1H[8ll#VFq`MI_hD'
%'E5%M;%[lbE9ZFObYbqLW_*CkbYDMMr)b)3l3B*D.8&b<8g?*M>Ud$>E5?9@9,m^HX-V62VHTO26]"&r(.(%.m$RpaS6rCc@`DeP
%rb3-PAIZW"Wi?KYe%u@PqZ)t6<X+h%,FjBQ/uH=t[\cg?Q1UuHG#Oqk$(erT=k`-Udq:B9718h#A.-I>m7ORIh+EQ_<<D+s(/L)S
%\MO)G%h9\4joh8(0&Nak6*J^o5bNSbcoXtT1:/kgLF\4U2-C()P_FKblP"a6-Yc!7dL>#',"j[hD\CjQN9CtnC"+EedId*.D&"62
%k184]5QVKS(PP.6YE]6&B6u3uB/;YUpu,a97gfo(hr-4NF/<W(!DZArXg9PMlNu7M@#lslTG#:TWEMGCXsE!1)+b:`Jf0iKFr`+%
%^?XX"N(u6^\6ek@/6@S<bD^YtDI@d`H@QTOk\t7Q3'4q2_ue&Hj4,HmAqXu7-kep?.QuDm#`<_cT%2o[=mQt`gafZG_W59/kr?`A
%Jjo]nl8Zp,9P.RCSCQE\3ETi5j&kW49XI8:PMMCH!NHmNrmbCDA$EI%#$#:$r)0-]?W%`rA"OKX0W-0C0m:]M$T"f^&R)XU@",/u
%gl0p,ai]_039Xik'oZKsC::&hbG&U7CUUkW59Y$)j(9rioLMs(>^Sto:]R_.;A$IXYYsFXg8j9ICL^!>a,PLH1M>?tSg4k$Op^D\
%7W=Nli7)4=98NYCpu\ZHN@CE/67TQsXcjFV<8ca=6^D6,`*!;4U3>k6Q%Xou;jB?QE.0$E&Y[C@q[sJ(E_Jo-R9-YX6P<ge@hN__
%K:oISh'.J_5)W#j4VGA)AA$TgN>!*`[kR8(C4noV;3?7:nia=6&dB]P9LK*4!JHA>8@0.%=J9Kk0<H,o8Zf1DA^O[imEH?)9RCTn
%dHbOMUmQ[iP/>+NM%Q0(Xm[%cB7kb,g1&rrplWCafKr2GB0=C$3u],J7#$7iA'#%2lI`IGm9ei_*XLF6,s4rg/f[t^+JDIX!LW*f
%X1lOO1J!?4Ng<OB`p:ok'Y'P3$(=_*%[7g:R8e)s(UjL:W3N\]oX0FX(I1B5-K/e+6rH:fO%I#;JVl2U')b)kN2kiN_0XY&<"lDf
%]gHufl'Cu>T#2:cN?FEF1FAdb*%bsG934ZP#WMU^J8g4)2o`;"muldN-7.]4la@n&Y:,-L_+NH"RtKEaHq%UMGCY7Z=[j'hTSA^D
%d`!WKkk^lB\kJ/]OI<bMNglFrm1s9E-q8eM!iW]4$Oe(Y[e+ujVDL_HiRAM,,nj]*Msd;WS2>&';C@LBY'.N\F/mcjBcPp,C,l#-
%#0":a`P?=OJfMeO00'!YcO!>G@L5a7B2Zif=N+dYNKQ?%3*\"7>"1!%s0DQKjqMHj14ZB".:.tfGVG"2l<;URTf=/jP&YS1EA07i
%latFihQ!g_D<SpC2V07W/E*N-X=QH*fu-`BTU>o58tpoB<\AA;n*,e!WPl(?6/kWESP"943Q.7?no0:'_oa![X2Q2r.sJM$NT\Tc
%_oKrBk&@tNYq-J"LEkm\Cqa-5E-sdqZHaC!%Lg9/\$Y*':2+Ep2&sV:CjmZ>kE(cDBgWdK-S<-+ka^VI.ThS:Ta]85^<mh9;mXF&
%:)Ha`&_+0,^2RUA/s^_"kT2Ng)#uD"E,LSur#&WsYqB)V)-8e=As(HsWPY'-)r2B335IHbj;LrV3)*Un.oA8Vdc23>Gi;+uDC#W[
%rXjuX[RB)7>N<M<kX=C&/7_ZC+:8@I'VjboU2]T\OAD_EKL:kWJU0Zs%W=4-FuYgUmV[g=kTo->ToVfoV?f]#&5iuB6b#Yf[ZXo&
%_AQ"%&%^^)L\F)DmS4;LJu)$X4#j4,;`Z-.Dae0pK,bjFP<b*42`UYh"RR.CE:d!qM*P\X#M57R^.cc/T\<"'km'"([taKsU':i+
%QG]j@>AA-F%>OrVTEaS(3$t:;2>GZV;hJkln!)ZtRD?3/bt,U[Tc@j]Ao;Q5?',&-S43jrkZ2`n[:R5cY0F%_1jX,t$e[=g*h3@=
%nA;[,i+V8U/V>.86j^q=)#W<&o"r*N>CLO#d6O-*5<)6B(:&>6r8>.ZS^id`+.N]B88e`!3(^LtagrjOE12oIo.**dpK1r(BdX1A
%@E^"1%6liJJk:CHq8#W2`Vfp#5r`%il^nVP3.P'V0/n?!2K8GM*h7S`Z"ePO%h<8sA</P;$+%q_Z?adoi(PCp-f"L5RE`8BdI$ki
%#lIL?\,>0EKlSfJr8;63\(T[E-f(s<L9L7-=KG'<2<_l]:+;b2L)uj]%][_W4ZFTMB)*B/3&/$SAa1d/30j[Ye.$S?a,O5p&N`3:
%5Whr!D>D#QguqRVIW.e(Gb?CS*ulk9)o(>:GMK5Lqir6CJKra/D#(mZ-R)gHq8#WGg$#Fc5IdT10(FlBglje.VSNf28Z`iUkeTh7
%`6H\U1KHNU:'WpAf"$L1`uB>D&/HNhpN:e$/!H@a_6q7o1Oa:[-N%cZi9SWK5I`nBi:G/'Y-1>;fD*26:ZuWQqPdE2e$V\8F0q$5
%%,m-dS6_*8B$c/d+R$n"C\6QGmA*9kkeUQm9Mq?%gaahL>NrtTZ*NM+9+MM79nDe/%h:-c,>apP*9U:=.(Z)WpFN2BI\d8SZ:io+
%5n?^3=X=KKl+o)sNH!\:_$L)m(:g,aj+8V<SFM6LZR#*#pqb?Eo5=&M,7Q>Kr*e[l-\GY]1.^tgPB<1^-Q@MR3dg!`lMTSo;Tm2n
%^0\D0#H*d*>i3g;:;SI9$.\ge8O'\Oo=ORG@g&%3d.kGF],4^3is4a"UC9#(IW3>u"\N"p_*MmID!NlA3#30.64\Na$n664[f#&s
%eh'TX5r_XC$J>a&YuD;cR0ga8cn.demKDLk]BS&m#`!'r0]m74>*ZX!.goG^a!!ia]+]iZZ@"4kN$+Wi82Z]u+<8S3$MoK"*-@ao
%"5O:#8M=7^>7&.eJC@nm%YF2m4\]"(n@G!\\mYi!hi8\Y:(@cd[,s-R_3peu,2AT*]4;AqG%U7'Q0"\QKBK,Eg+tBA"YA_#$]Z5[
%U)Tod\`\3U35IB^9DFQ;#u8^cF`peBABcd`&qV@"_K=PX#O]Z,!CLMZ")$5LGMi22R<Hd`R5uEL.hIrKIc^`&F.a&oq7p.LT_hY*
%+#mGG];H)[Gide(@F0SCcJZ\KSIM)IN)>M9FPr!9(3sHn:H^Dhftd(Om=2Ha-cbdrkKh5babEIfp.kQ\MD"b)CJ.Of@*>[3=d&o.
%j,J^r>C9S1](Js[eqVQkcd3,U48$(s#=,B<6;g0ar9^=3j,_Y6fFXph\FZQsc4Za5JdNK#GZpn#;h;jWi/VJ?"]!3.3'Nl@*0qQ)
%F/B"O[G+:VcE0iE7FIU>*NQ/,4(A>)pd]PX2C<B.)n#pW0nH[p-88A4Acel%Sa&fMNWq#tR#/VhG:H]D3u'^n]Gj8sY4"'O+Tf^]
%ZJr/gJWhu,aeG=5S1b43Hp\(_U)os/SI1l6YYtmK;Lu0C8$&l\.YGMESB9%Zc3bYt%!3h8@SEq@M87498J:8_"AV=QBb3'43*A+A
%9%8^5).KCBl9sP5KF<^IAg223C/*Eg:'=>W=W.Sc,&emTi.F*%33<B'E1I4RFH3I&hsu;=K5DBbF<5DL[8HgE*cSD+ZDM3N"3t":
%-)+t<"SVmbM>#j.7glZT[liS`1+mG*!Cr&Mfl#mPGH<!@6*oMNk>So*(_8SlE[=n]H,*Q(UVR`+!N25\c=c/<LM<^aDf0g80la^A
%H)C[eUoFTm\Y0$/(r@ht5m,D6p#p7f!Jg&-?CNMW3*/iX63[t16iK$(e'8&U(33\uBYYX&M5d_+;Vkm;_@@K'>aYU6ChUW[9N%7$
%)K6TQXMO3Zi/UL3mYh;hhl4.<SHYP]Rk3(CY^eM_M7^!6(2tT\;<g1M3*R/>)cd_n2`=_%/Dtm\Ufn0BE-hK!#Tm+`E)u37$8rZ=
%oGG\."q.s$?<QBK"J!]#I&(b4UB_TQX(i@,kUNH1D^iJ)Lt?ZP.DYKMNg0L5!o,6d6f(^kZ^%Q#;h23.gHp#iE42E=I7jT9?ch&g
%9a$S\&qu.eQ3*Sb:,'\+Ee(L2(-@Wui8hR^da?8>NeMuhd,4n*IH8OC!mYkkbO_#&S<d+<q]NMLeZZe+]#atJRSMucCcK5PrTMKW
%,R6<a5>q4b%WD]--/Hfci"RXjqT]/fA2`6mG@gm-cub\#^g/<i)*HhLChm=^npmLg@a)goc9OVgJEf8T5R!D.Hp\$s[q;jj&:rlb
%FE2;U_!1ec97p%k/36]7SHp2oA%fg8#95nR+u=\,#FtXQ<P=q.>iXL14Q?H4Za+Rn*cQf;<u,bX%>[bs=hl3HX=+o:i(OttC@R#^
%S4Op=9e>3j`je#rB)uWH?+*GNPm&/$<$ars/DuIel0dLd$TJ0Tb'lq<p<B%M2e]uE:*M='T`M&3WdNdJ"4$a=Jo.%b>cT_rGKih>
%Xr;FJB*)_o+,TbR'0%NPj^m4$JMScD(7reS%P1?Kqs-r6BMhgF%21^iR2=GB_!q]b5(7)F-d"s=i6DJN9LG7kSI(esV7j-B!f'b?
%rbS,3*(*D[h8'6>L^V=42GE$?&LGcf9]-a8DXBBM^mV+O6X#--P$M;_8d(1H-'(bZ"r"N/LB31b0S)$PO+;>M!d?1dm?sOlX/2cL
%[;;eWC&>me<[r(/W-HB6'fZl>\/Xgi$=!TaX81j,_9>+nljX[hF6e]L[[(bH%H?VOi8,>ClBVdII1\$A8\-*5Hg>QGJU;#pn<OD$
%SQ=DISI->pGHI^3;1Sgd.k\2o$CnfM(KN#)%R0iC%2CihGV-D1)cY`doN&MjW5-5!.a*"g%4Z>JE2?"dZLW/ciu[)SJ[5E:jk$%1
%*%Aq>fgVe?B-!DsIAR'9'q/#<(`,0TbICJN-NhCnAEA32ah[GX[,j=b3!<NFgG`Bq&9Jq]c3:@&^k+T`3%rgJR0t"m^G.Ya(HB"S
%R#Y6#E".qaPmSL&khHeZ:k>C\*4;1A*93]=G]YESB'(V9[o%_:*4cIr-?*M'B2[c6-?)/UjHTuj_$lkE)^96KPZg8A#TUZb`S$4W
%*'Cbm"rf%2EaY!#Ti6LU!$6L]$n?3%Yeif!$ClQVk6uQVEO5&qZJbjdGLNsb$_/pm-?XG`E3ujDE6AF1[A*-!ULe`3m#[!F2K1LW
%^2LmncKGfT_p/J3c\M&<q7uIorpPG%5*ukN.?jBe2gjPDH$?>a0g9RD;!t)kI,NA,Tl_NbcS$TcY`Kpj^mS?(4"hKm30VKV`3J8'
%a(-ecSW8*U9F%Ot&4:O>)^]WXD"tfV)E!01/-+53r#6aQh(Sa!Sbd8p&"FA,!;3gKi%ub=Gn3)XLcu\N#9Po3Cfm1:i<)T"e$U0C
%i!crt"Kq?I]:O8QjTA"/d"F[iNbLoFIaEXUg65'V9*^J-29!;YJ[:'PcPnoa5(]U7SIQXcT]J5u^m0ZUoS=GIE-d>=Z6+2H%-,t+
%=#t<1js";T9*YqkSclZr%@l&NP?Bsd37*1J"*DEbNb1%k$oW)"eOi$Vft\UeQ=a6DAckPEFkiA<fYE@2H0-j*CuBP"7m>bS#4B"3
%4fR\)%34i19X,NpDub)>Z@^0M^sPJHNsusdipbmD)I23V392c5JMS`dWFo2g#\LH6<[MeHV6Z,S1P%L>$#N<<%P0;h\FP0F@0q(Q
%!=&fGaXB-TJ4"`.&3EFu=nQ/#aoU@8YE(7=GdG(>"p6h=&[h!b%,d.g%G@oni+ULm0a;U;h8;f!4YqV@b`6s?SH'X1%a+aY"Q4tX
%l<!t'<,U(alL`sBR_TioY^aR$-5WhiJ"r$r<2H/`)gl:kBAITX_d4h*R8SNI,)Ueh#2Y-3BNsJ7q!?0rqoq:,RCZn0hoN*4OkYW_
%]*'E)*i.]WWn:Ik<mknEPEMf,I\T=\aueiH>7e$nP(#cE=W]gu^Yrn8M=MUu+0[3'N8M<REY*\p(=.PCZL`L^D2`+<hcRDPWH>H7
%C7C4oZ>\fb[<b=89h*=U<i0fJ2$5Xel'ifd;M37gheZo)LbX=a!>s0kqF1i%OY,%+,H5-VM8%s@"kV%E^7/'6DU<d+B"<T)Z@!n3
%=kR(nP&IGGZ*"euLf>MWUD&#bj';mGI)GF/b]Xj$hB]tSo^2;-Lb8Fa2XK;Q'b`\cKA7E0Qe4gkp4h/?9V\)V]b*4MqgGC9<ns"b
%]ed&TRe[PJg)DVSh]()%b`QDOcA('mbmXpfEc8<ADrps*V4h4O<D"3NDj3gEafjLV:oLT_2pC.RZ9[8],PGaA!X0+*f=T_E)B3.(
%L8TZh*\jAhN[I*&K@h-Q5;i%ufpgna12dB'2f\jqr6"A#PTPUY>@qdV.i.J^4fH&NO+Z&!9C7`3M]X[P]s5q@Y8LAUDlhH1U:8Y/
%3"]l2K@u_'NKi6TZT">PD$RI-=r9(6gtm-X)Hg3TDJu8j8-J/3hQSULW?9pPYWs%'hf=(m8?+\OgtmSD(Ee9]gD__JH*cK'<X@EW
%Q.qf']l/@=H^!2<)oMN*;DF#e,AZZ&["a_UWitdG1sJ?jah@KbM_?Tk2bbu,,&G?6!JG7e=ss&VN`aAO-22Si=\o1.+nm>4JWF@g
%mT*:/,2LASklr9j@S?.Ve:VZi\[R0c@HI46;plPk2cGkN/f`Bt9INd;!i,HY1kC#Rc-5#QUp0X/1OGm<R5m?r]fAp.p30WL]a9>?
%md8fdoL5$2AENU*`tH0-gtn'98Q_t*i?o3phGS\6"K"dMC2Yr5%!tft1[qZF1M1Rfj`%WlbhfSmR>8+Wp86A9P"fH[#/3?g_9VE7
%\ET<;B?]3`oB-b9RD##67^I##m1&5UWQ.*.2]PMcB7noBkr>cMI\l`BN2+"3FD>^r2:G1b:#M49_hQm7,r%[)#.6Be6=g<ZC2^a&
%nc(2K2irL.L^1=H\q#7VL=mNJ,T>sdhE5Y[*CVNYBd%?3QIm.TP8YX9fUMBC[iJmX@W/"59ZcbAhIt;JYS2?cZId?]2T4IjoiOB(
%M7q<"TMl'"2Zn,m@,4NCbrQOTgreucnUt"GAoBa,M,_)CZT%\]&t`UVh?`ddcr:KiDhd>?OM0WHB&"4P7"a6`aq49mQJ7lYOaD3f
%[l9SGcYhk<7LMN'%CJ,.Nk%eUkOupNkOL=J]pUJ?>W<u&-E<u2UQKnE^1*`>\Mm]V_K/*4bmE]*d]-X,LfS\:n%7HT])[j%Y(VE7
%e/F#M[l<mk'9."lp1B^6aVd.K2p$7[ZX6dODbW>&D<:Jg"'aPQm1$O(\#n@\Hc+bc@n<Nkee#5b/%%=Lj2t)7Anl8<'$RNIeDAF6
%BBj6pp:gF#T>"8(':$ELku_!m=Z'%K+;5B4s2'Gfdbu]m_]_Bc"`\&a!g+.,"G(-dLdO9BmN%1#\X$Ys)A];dGq_2k"7*J'dBJW4
%0<@UX-s7T",8<3mOiS0ZJkYA<#[JY>*Y?O48Y'O,4q\,3=kt'Za,4OK8.(bA*1H7NKU*qY*-^b_Y$6=I0M"-CO'3>l+""V6Ynss"
%k^@^3.LT&k\I-+h<4&@OVA?NeT(_Jl(C'H`@_2j.`bK'I9ME;r&<Z\1;stQO7+,PNI>+\=;<3u5%5#!r'%UQ6:Dc$:g4r2m:&sYg
%S/(An<#7&J@4WH=a_?iu^>dd(K]*DAXbcDaM.?s)S\!9JCo-E5[Y5_0g6(Sb^/4U;(p=9Q,`m`.QUOQ)K9m37.*Vr-c['Vm/fLSU
%c-Ut_qha#]c.mWPk["Qd/oDeH7/C"nO[$AE"pHY&Dq##bDUntHQ(gka5"TgQT7X(b6!>aAZ6,%*W:AlqNb5s=!s![u/L&bZ.GVlC
%/[;q8!>\fp)N"l<0Ye05`bS'X4A\4nHAZ6%dn=+P&[6"MTe\_t`S-e5V&dmN2XAlP819DWrb.Mu+@lj4[Dm*aBRr1IrLSO<7O9ST
%=B<P*lYKe-L]ED-H\04Rqf\Yq#7S/S[:?Tm5_uPOp^&SVnS_AlJ6#1UQ4>IG!H0mEQNC*CS3$C4*::V=1lV)&YqCQ13)bPDV?\"S
%8DP#g,b)\ZQU]g.!CSr+EY?R&;]65T5AmY$@'dGV'1Ut]ZrjXPU)ljg#pnQ89iPc%L#qU!9tZq!i/)#B!F"E0UOauo!<ilV*#4QW
%NG8jJ'YppZa@P<>>X6:q@F*YF;+ZCQUE=8KhiNa@5(U+_o\+Sk(mI^dR)#X<"a_c#P0$:Y3)iXq"T5M.4<`o3QLG>ENmWt_^-f4B
%nq1U+:nOMWM]W9@"a8g3>Trs;gd0Y.1OYe/D49-H8bq5j&fT*<9'E(;H4,4cBE=O3J\+I9BS"]R1ZnsD#ZnD0$FCSS$:J_s.KScp
%)S$haPqn/EYtF[&ab^'_#hJg(oUussFFt.MkeRQ*gSKf`QuNDr&JJfUar7Ei`X&Qma0-5#\,tW/]V_(2M&46lFR2cNO+;1;pAfh7
%>R*8F2g5K6"G;o)P%GCJj?\^/9JV59,_]n?_.]Mfa%dsJ_?6GTaNsE?=+SU=kXT[sI)76RaW<$-,@h2XY[PMZSq2jZ9:<Z0B^-qq
%<7\TIRU,?X2h;]fGVl4fqj@2Vk^DAaDb_$HKh2T:Dc3u+m?\GW%!:S*h*;N+]n+t&GCl==iMjos(o90!.u"Hg+Tu8.O>oq`^aeQn
%B+-@4:aeK$Ud6e6)k0u."GpEGhAB@l3Rg>M@H.9:*#tX*GZM-F;W'0=j</X[8S&0.YY,'%ea?Bc>hCT;D"LstH"pS808H&O#_YV,
%/L0Kpk:gD%RsPX\:KM8nCbJRlCV^uODGCO8'<a]J6u:no$sNm@/@,d5<onVEguS`FBLu$Vls6D6TI&*!E7;&N_Qhc=]nUQbg(lf'
%<M,@M6I0n;[;H,1lH)ZC(Tt>]dP?C/<+K1e_RF3()jVk,noQL*=QBSY*(%D@gOC4q"W3,rVl4S]&p4k+c/(>[7!0.c+cJGgnh;t.
%hV)9H_%(?]MU2JmAe[M&[,V6B>HiN3i?+[7^[;/Wk_tH@p/!%l(^NT=?UcG`&7u+H2OX;+,dVi(B[2N3qTq]DEY.(S]a"WH!JsKP
%8-AV?kSA#C>pq$"-uq;,.j7H#+g);R.$d:TXb1!_-h?s"(Ik\%;G9+s4ljoRL1Y<t$Zh7MZ@LH3L?0GFVifmX<Yfla"IIUdR1E\s
%6@Kf@$^U0F\gE4Kl:4^=KU*%M&b"CX-^3[`E>qI$D2u(pZtO1-"b*Q)#^Y"#jpg#(nM&6DD@l&t';&EPBG#OX4*1P5/sH^D.ZMBK
%3Fkn&fs[NQf=draf<0!<LM]r*Lok.pVIoCk45K?aN4ip39Jj1)h-7F'U)2uIdaYPHENYf[?J33>13^<n.>1$3Zc()MMV<s$/l8Og
%&%(8J4g`o]MkUgq)?^[q75aIQcRqR$F&Q<l14!`G1MLL#liL0g2+[q$M(I]G8[1`,MO^.`_"D+S:B9[7eE>d^Q/53?I-eE1;39%g
%`%=u1QgLY!l/iR87G%$fZ#)C+\+HfBO9;Y/D<D.`bQ>iA!>oTS4$:^V3i>PYfP$4k!;u=K2E1"BHGeOgSO_':R#f<,COGrP=cR/u
%3g1[NOrLD&Oi*AZ9A#2/T@AGCiQ\g5A18h[.COJ<@5+!!E#?++YM3?URF=28c&`:7fa-@Y!A2Mp6OWVg0JUllP_R3@$H>6ITttjH
%5j97NkO(ZU09E*f_l"a!PS3>XN&rDg'u8G*,KX5-i*Gir_Nj#lJ(7gIXV5OeV_Q"(?&Z09=<h$M$0AtI6pU0=FlNhbPS>=kPs)dE
%CkAA1AApIp_E^":$5hKjKuHlEC$_R`-e#Su!lQ]JZoc(JJnf,%eOiWk'0(Bn[2$1+U+(V)I$GUP0U0[4Giq.QI@%YWnbRdJI14q0
%?p$G_8!3H@75k3E-I.g?9NjSdSL_:CU'.[Q`\\n7@pH?@U=-#/Z"$15I*#tK/4g#:F<B/3KAeVW/#Z=cX.VA;p^MrkH_eQiA(DC'
%@W(+>Jp"neNC.o(*<P'dU0*E_Ol;TD]tlVbYhH&K4Dr1J-O]1BOiC_9AJ;7%/D[*iYBU`C!b4E@.Q1==&/+1YJ9FHYL,Qr964>0E
%X-6TY_jG"%N'7m^Le,nFb$r"'fjknA5$6?n!MZj"+5.[VjQ!k0jbh=!2R1PtAk@&Z^Zp6]Udb#fdG9RFd)Z9*6PL+EVZNAabQSCG
%^]MX5KE5]'J86(_9$nMUoAfj^n(jGm33I)VG=C^[oSXsT$'VC%B8rKNb4_6EBM4t.cc@gqTn#C!`!?K*+=LCalb?\?n'%fs$W3Q^
%FZ3:?F)5m'\uIM9F6C9?<E2PE`T1/N"D,u]]Ap^;Jq>hLQF&<]q<hE.(rTZRSpb!K7&7N6>G54rbb$:`m][(("4%'q8O-D-3l90/
%?nh]C<(APK'#\*!@$+/^p-bAs?TO]fR$r]dLAaAb>Su1o7gRS(]mAS$QX%@7#mjI/g?&5<=n">7&)@Mu$*5i73=%hr!"d&j64aER
%9-JOG@n`NK@04bTku??5"Gm.)2<f'cXcUQ%6_#t%WFcjAo0O?V^ihsVS7hRHU8c73BiOs5>9njf=D?PEd:LEI8l3c_!E)@<D4*kH
%r\=ajQ`&FNAA2;Erb;EaFG])LmHt,3)sj[Lo[W;]^hSk%O7KAYa4s#u^``1&q2P-?6#X]QUB]F[--3/40SiXpB,sGVlt^]$@'ot`
%hTL0j;.\B)%-JanBko-CP90p_/L!/D_U_C:HE[9',KUc,5fD#nY_Keo0M&X)o:4nG4t+*:PGg4#KUmM#0X=bHDq2Hc^dhGC?)0bn
%:$B`Xoc[P##ijiWQ]_cs:$Wofet+1lS.YdVJ<;ucfOIV7p5Zaid=()BW9h\)/i=/*`ninAfp9iSb-0UbR$^iB6lfY<+S:XZ%6WVO
%EIB>VQjel.`?+*e=fMm$iLG!EcuS`kf(!h#kJhYgNdHjT7>66r'/^]H4V8c,Loi8[I,2O1rBa2D@I,jA?[rbEecW?&[PNAi&33nP
%9oJ=9]/`VDZ^\IYYC79dDN/"kriTb=Js'<D-P@biC`t(?Go@h;gU4M#8KQkSLbFsn3X4j>V<JXbLlM"!S[\^n-9t/=dDWc=dKlqk
%"9gJ9A]5PpXL(^e>9R/aX@Be+dJ7nd\GQn0p?[%&?9ka[G#2OS\:I1$>_Job%+\#b%nB-i<P4F9QU&Si^s>iDP=<i`D,,r,.%tBS
%K/3g'M^B99+WQ1i1'F1O"7$iUM\n$rH_^+jMG-Je;NrqUT9Q/n#IY/N=Y[]F@;H_f):j!sSLFZ[OL4pcW1CLo*'uM38=`t$qLE$b
%3\<>\D,n:N3H\:eiamWH*Y=N&RYh,4`;W1<BOhNRWZoEM`d6+.c%]H=@R7nh4;1R!Tp2\#LO;,KFMc]$jluhR,lqjW7`t4Y8l"-*
%@!@GER4d("13V);<M)rH8okm*NnXL>$$@I:2lq2CVig1W7I,2%2j8mpM5=80%Z+!4Sp>l]$$:cFnXBd]lbK#3]t5\\p4+JmQm[jF
%im]T8P5m)KQ,n)h"]SKq*=)!8M1,QdYdE$o/M*nRJFSNHJ[D%a*\lRm6^NUMb)POP=_<Md_:$0B,R-;LKIaAVUlp9q*WTa[cr`[k
%E9(PhU(u>li(0g+lG=fn/VXGU&e:tk#$a-P/7Fftg#\Y4:?&<O_H[.o/>u8bIYo`-kkbEY&!Pp)P?buBGQP4L8>lu+h6F6p5HXVC
%Sm7.R0WKC>ql'HhLa=_VTR5-YH;WlUTak3^bofCcg.^HjcQ]&`H<SX\Z@nFIBd+7[NAU7]?B@MG%'kps15%n1.KjaZ@tki!rP0&_
%l"))4^/0YgA!8n7Cp6f(`l^9%l:Mi/AaQ;e//XD!8N@n+^k=EJ=gR<-^_6R,bY)Qe)hI^[CJRe*(7`<g0VgNkO+];X(4-&0@BV+h
%KNUDkd=qL^a`[5\)I_XlOOmkYh<Rl$?ag;0Q\2M*;;HM,Y8LbS@aUV_Q+iP(pO_p)Ml?)5_LO3qHt'W/6<A"DVU@tBY52H+dofep
%!c'V1UdJ8=<]D'VWJtl"OQ[IVM$V5VTG^5M"2\N.UmaR8Z'BN"9L'^q*ir/WBY5,_f8)O1DFWD/+_GT[$Q)L5J3%O@8#1iLJhAI?
%KXssiL4JT8_K&+Vr]mK8,Shm5\B1tFF)E^%@^fu"2M)T-6C\7[3iiub:&leYP(n;"n'a):+,-@"*gU4g'n)&MJC)N&`-'ZKDc'^K
%0JDS_aMs^%k0:22P]"JCD@:s,1QE.H+N^HM-YhRN[C8`e"78@Z=r>)pi(kR(CpK<%iMX7m@a-fB!g/<^8/@W\'Cne,2D@ssS&$+&
%9ab$^.g)uk_##6/d\XMJ;\t-MG'F3;aE,qafGNlO:[4Y53!H*s$nH5R]ZN0fE?]o8!%gI!.)=^G>,_UN-j1n50'cnLlSHK'Vb+Wk
%=UTeJ9pqj&*ooKc$$6_3P!^.7>)l/nL"MP+?^)uD'V.akL4ePf!lLr^<"0K&Oe8AT"3D(F)lPD"bb^J9KpfAa1co,lJRdTjaNM6C
%r?U@_$?Uf^(5B0tU]AV*UR9(=^""qeiJ_h2mn3#nlpjJeG[Z.p,r8i4@P^*0Pu#GHg?g`RVT2T>o\iAR3RIh_)V?aiRM$p+$,kum
%Q#4i(=EW9h^^S"m<I@0EOEF$Q^-O(6_1a_t+XV%;g^6XM=JaV!-FG\gOZB2I.A"1$S`jh>pV=M)L,,FI2Qf<kMNTO_h<YE!`?E_l
%aH.Pulf!&md]=Nl_SD-VMEAO&X"HP3#,%4V;cn>e8\R@o[EJ'U4Q3;-;UTO&/hl12e?^'kVAEuY3IjFt)t,m.HVeP0=&T1?MIS#'
%-g!9k?EtQ7Q+8*YnY&&f3[HG0!Cn+n-4(6LrC=9ffI-)hF,a>j@.JH'bKf=I%=lZspPG:&E4E\gaAM/D=n9iP%Wd#2iojTaWRini
%:AG$l0i@NF8Uu<3MEH'ioKnqs_BS!?^kZD"^h[R-)1'Zr_A&>LX+QO\@/['gSo]!=OA-2t_jd?$8;dD:J22X:,dt3>T*biB=Jl:-
%`nU/,/_FBE?SDO:cU'r"nWjPUf]+MQ5tt2Vl6dQMf&5U]%34#O@O5ba^c4lpn5r/:kRf)iLN#6Xe9);SoAla`KDm@;&X%sS]i5Yl
%JJb[jj#9Bm!o';7b\T=81J-0WA((WJn4#/Y6*-6u)YP=(!$][(/+[]m=XA\VbOGuu=uV*!J`_!"6IoZR5VjI:+h6B#hT`sQ`)s.+
%DihOQ<JMm!JnC,k35?\oR^+/L(T3+X/[)fd)Jr*0$ta>qJl"/4M1!.VO\i[]&77hm#?'+l,.'nF?V)<ed^K8Y8&$ddKp"Jkhu]u3
%"EA2(?%NuOhW!"[:1?T[6<o0+AZRYn=sloSO(WG5;IJ_e2A5^/&/#Yabu_k,,!s\;F9RI@"'IXa@4=*1;Z:?#GgN!^f7u7IBGKI<
%UN6ZR]pKt7I_%A`7E+L6^)-c$nIZ>.@t(+-ABT6m(8"W-637=H*RZ_L+Gm/AXot4C@:Fjp&oC2R;'-<;HB&-q8SUq-5R"q3rE';3
%$j'#S&`j>%Q08<Hq8ma.m=AFGmmjD-0Qr#E9l]CTUdQdr5W$BBmF=cRZ_[o"qFOH+;Hf:n0W)pE,`Zud5]JnW#uN(7Pkrj8H:8hJ
%CcT9Fj;R?:a,Q[=`(DiFq4lf&+gi:Y6M0h6FIQUZ-ch]!)h\cP7UFcBmM$9XcXL!m;Z<r@o$H@?&d'+?\;lYF/G29o<+%21;=-L2
%)TPLWr),<,M8q<nPWC8#_9:9?V2LR:*fb\MJjE'i`)+RS+Q8In/1Y?iR7juW.Rj^)=Qbc4?ka0rjH><"ZYGTQ%7BlD%Y(g*Lb=_/
%4Q68/#hdHgMj+0<T4-sa">>!.Hn&tqc7hsCFEg6R:gofqR>9mo0s'Au%DgC$Nj2?Aa!"mT$2G[l8s+a)T:D<EP\qX6Pl]V#Yr8Q,
%OS#NOZ(W?L+Xm_%j-*uU!\.bab+^J&JXnoZp]K+u22b=6F/<i0X336bjJ;Ds6j?pkhapLl7=0Y-*9a&!WS<$@9Xkfi@+s*YO[NTD
%<?(F%T=2NPJgsY,=UkZ>fuVC^)H7uqI]P3SZ.8tb'-qZ:.V*LSi3j[2^<tbe/8,DJ+_K$P&?@/$LP(8a.#n>FU-oTQPT!@ro2_5G
%glO'sLi:/75r?l/>#<*tTmtQ7SQ$;M,o@((30R/^]CGEf9h4jn";OKT!21C3K@Hd[!,M]h)s.fKY@:n%/h>SKO=UVn,t'-.=15@<
%jB$n6L78W+0S/:ccqMY\,NoT>P,.c<m#urfDi\r8b'"Cg[1_Q-5q!](Z1&.J#)F0&(/+@!T]97U=C;<;Qh""N$8;KY5"an^$3uTf
%/t^1.dU"R>'F)-"+:J+H8<B=>Y[AV(Hol(C8>[48/7sJ8:n@P=GCY3SRBVt?(aN!oLqQH6+k:E=BV`J(@Z&u4i@rZ(6W1E$.<*92
%,I%`:T`#.u2UEB+`3bd-O/L-S<Z5!?<Znl*0nQNW>"9oo%fsqJa,%DOp+2[r"4B0[&#>Hd6`7?4:_RNfQ2krirW3/T[O!FI,Q`qQ
%YGC"[3X\//r)#3;EDTV5>Pq:8Gq>FdHMX6s]@gUDU4"\N0e"h"ib1HViH#unkU*&,JTjQNRBA*VoH<B#^"+U6p,],pUrILJ_(PkH
%Q%i>&I]eG/D@;331V+7LR,l0sbecu"=_CZ&%%[N2f4@-uP[ALTToPZ#T(Z[K@)u0@/A22)<l$L>-9nN$BHA&MEe,h\R'U4>ah/km
%!,qoT<kbJm(?@m!R4LG<R8GXnE91iaNg6;h4,BqE.t]cNHN01T^Z\E'Y"t,&a(,fl)ef&=JliNGJPDiZMW2-7V_bAmJL/8:?M'/!
%M";89Hm!0:rg[d`>\&HN(W[nW)T!mr4$7Wc9#Ti3bq"Tb=eL@KK4h.iP/,g,CI)bpZF.U:OIm]^(eDK%aqa.X(K_2EDn"bt>Y-Xu
%I^nl"AV%rK]o8+%0jP74n%jAsl3UT^$27oi&Sqdtl&6GBL$4caKirEoAJ"f-Hq-(<eLh2"K\m_fe_YXahl]C9lp))=,0i.VH=bc.
%7cIbLZo1rs&*Ad;,8F";6mRI;0=9NcOjJbKUl/RiKj0k)jdgd)[S>dl&Z6M+aTBlL'Xq%RS\;dkT@FDs;JHeZW&#Xu"H!fL!hc9,
%eC-)u&JKOI7gQG1&1JVcWf^o:*`:-1Ti*qfaVP4S_P/=7;eC=t&jks+:XLZ1-QoAD#pO"KE)S#_0fmEK$HYR'D+Kg8(Xi4*7s;)/
%]k!(VKY<VYdY-g[JQJ:oOGDJl^f&/E:+:[(da?^;":U7F0p^WpA=s:X<<b_<N+3rm&QUa:;hRN6qhN1?6K'G!I'MBTkQJc0"M)a6
%CeiPi&o3$(MBLO(%MI>SSB=V:Wu-XO)`f8t10O#kLffUQ#C/AV9)0dEi3F.9;uuba-#<k0_&*K"R\]MG/;]AL$">'K5buj3UDuun
%3ic+Kgtl!k0A!EmcoqaQ.'+"d&Om,h#\[sf4"A'Y_/a>EK$<\`9WjHgN/5!YSpXjIWlS_M1Nu?B7s6Oic=YH?JI`Dn[B*eA\OW,&
%+q52XQ>E^W<*&X!EXT[@5TKlDe28e2Ut+%^:dt/.kgLij(d$EL;505U+XGoeUT"qE"p!JQ:(I_8aShVD3"5B!,OJ"*2+3%<S66EE
%"^X"m"Kj,#]^MX+SBU>ff)Qqg_-07-8-`2+erUZ.V!#&#]eTS>^es9\7t?EJg(li@OKe6s5p=*h&C)pdBSn2rNFg^H(AJ8g++T6j
%!nY_4HqUi50rTe6V;_:t6<F4s$JO-ILDG>r$=*Z41^sp?#Zh('/C9Llr6c2o&&rN7O=!=6&EJSJO#/>dZ:LpN*s)\9<]Hd+&>`C^
%=_*bl+>4@-gbQa+*&B'0LlmI.:ot6Fgod>D:eVKoT*70GcN&8DnT*%/64'B(OGp-3d,frA3H.7ebrmMZ0N*d9)V36r"d0+"f(ei(
%'0n/WN1ciLFFpp9nDS*[-!`,)Y/MXlnk@']F<W:^WL*EWPdq6nG>T<s-oSpYK_tjF&/&<C9Eu%BGm54NG-V1P#Ut*<JEbij#eol[
%)V/iXQ,M*gI[lu031(6INnPE"a1tR#Usk(N4GlIUY!kSd3!jE+p!PbIVN'+CNhL!6@M/g`81uU[Ag9*=M$XRPR+eq;d!$a^:c`OZ
%\,e-=0i*=rLLqB&^bm(ME"3nZ1>rRs$G$CR88s;;Z.THsPO/U7@0AHX4s[t[;[mF1TX06Nc\NZ>q-&mh!V5JWn86QqNrU1^a?pT-
%9i\o&;<@oeL9)d]"gc<CI;Z^goE@\>;l,]]*fU.(>RhlDLJe0R(44IQdG0ZqY]Y4S6leR.:T-+'$OI0afI55d_8*D(S72W0easHF
%516S$KSBi,m5?XmPbkA91*=;Y"i3LOT*B.SlP,fp<WSO?1!t5Z6odI`[7%0@/.@]e$gOJQ?=9<8(^ahoHjt`\;85Ljh__giVFi1Y
%$(A`'3_^5r?pE3MM$(s',OS?cdN(XjA?rtf!YbWN6p+nJX"hTuG#'i6'<oH6".bi.m"sm7V`aX0DD8:=P+>^TQ'gs8!Jo0M:&oms
%C5mNgs+cu`%bdg]0MP]P"Zr#)(BVtW[E9*YS+U(>LL_Lceui+nX?)R8#;%n_@N4<0f\cg5^^o2A)MKAJJ%Vts"RdV8LJH$<M/o"G
%=\Qh5-Q9hlOBc6neBppl&PI_h$'6F>ZjLgp@3D,:L]@[Io'fR&k:-o#:(Jm1@mCh3bO?TrMP]5Z"SL%OMBN06c8p'SfLgrlkY^Cg
%Rern2R2'<m#u6*1Rtd(&'Zj?K^Q41a]sJ/G!jf9QL(mU>)GgqG[&Q9k;B8"jeV^/[F>\&2QmFNTVe@gNjSREEiIqR6b4%JA+^gt.
%,>Y(idSGKai)nd-#mF!-Gn_jr>^HKX*O%Uc9QYUmTSlho:3tcU61.n]9ekV[d%/f&N#32EZYT(c-)<+]'jH<rU"J;N!,^YYTX>0<
%'C3'H)%m=[GQH-j+T5X)&E+-MgfT^f\N"aloN6p<Kr0#Ap`ZH&'jlWV;.?!j.(2jcRC!h>\1J]lc@'t_!m;eo56gc9QZX1h1_A"B
%XqZHn6uN)aM'qLf-[Al:c+,D^:fms.)2&6hI34)ha\7&3]H3SAmD78D.Q0+KKrLBjFs(2tk$t&B"d0,8HaX-O/L+G%I1"K1@pCjl
%?lc#:HZPkS5Gnb9R"ql,O<g`""^g;$4o\Y4KsWgs)sHi:3bXonVsacnFb7Ruq1nZ\i5JM0aL0tW7glC$UW0&_XUm7sd93,uNel7W
%HZT'R`/,?)Z&7oX9?J[jP&8GeL.G"6+bp@m2MrWBi(_XuA$$VUAgC04<tSVKR(,79nJ88H&]ZBX/4'P,kT?5;&jRf7]JN2"eMN2o
%(J$tqaNDccefetkP]A2Y4Kfb=I^ReN?D+Q7!)AEQN3<>CTaF8l4^1`O/833.T9tlb6?JsOkW=&DR4;#iN7*#7PK8@b:*FDj$EdD?
%%P8r>2(4<T@04I\LT/\rb`C9a@H!_RgeF.=I8WTj,.^$+gQH7dA-R1c@]9r:L$;@fM=cF:9_Pc;V$G1U+\$2.Me7,h<s4@*n4?aM
%.Z";%aRU`Z6F@;R8g9gfhSgd,pNB;oo\`o:*<E^1_2j@(P4X]-b)J`g4D6`WWa,r7\P,ICaV^sD)NR/)]b]`B0p="nI?6o+24Iu*
%U>cBHKeX23Z[4#N#qc*c4`mLj-!:7EjCL/iOtp2BiuFS1!drM]K7_P^J!>L<Z9g+"?CFKR!OaQMl(mRM!?1RJ7scMWXR;";d#&Cr
%K?1+[0]:3&.<uf4/[fl=N1o24(DJ,-aOtT<;AC$lY5/_OO2SQe0I2X]@<q1/7l`;7c='G_)Io&)&^WI6&?'!PWm"3_3#+AZAfT'*
%Cpb\7\$q6h`bm>NPgba9,]:O,-K8A.%p8YIQXf>ge7p4oV0hA1M>S(H2sBVe6BWI"^%,d>Ad=/3i=o57)CN6?4uI5D'c0FMWDkAf
%US*2&:c3I8WFOR&V,f/3KET+nf%]q@7l7`nT>Jb[#XU62*3:8]&[!1oaip8IO"LFH?'#O:*l*k.Rk0-q*IC#``/Gi_#48Df1tEQF
%-RaTK2lMXdjr6(gAB<iKDn0a$JN@s@)l]iMbq>GUnI.q,5kfr841'Dk<uKY9'F!;s,Y;1OHU,),+uS1RX&Sbi=BAABnX4Tb'$a6E
%4P=3e9+sBLnDBdEQ>oJ?Y\)Qh.%["a2^&HBR^GkUXX(,oXB1PX!ei+9;mCGEA48<Jec0aP=SJO^M/l@i0FP>s8eVS<>M6>:KG$*C
%d3<<':f'E+*bhEYqDSc9Qcq]krrZGqm')S=m%ir;]&6`E-N-+1f/bu`H9#+ZQr8b>JIR@""Q\<?GiK&XL'iclft]I`"jFRH$'K2k
%>)qT^$VCX0F6Q)fc<2,a-eS+1@!5:afn^P3d,]pINN+bmN<!WdbgP<4H>Z>Yq?kK4_C&4"W&%om5L4Cq""Xg9`1XPK!'GXR6.@jA
%pI3.m_W4$<,PY%@qd`OHmX8lbE)N)n]>R[E%,MDKY/&QG;\=(A;DBO`jNG@t`n!O%Bc'*7mKFIWPD^nND,Z&b-"8MUGEOXR6"54&
%m1,7qICYU(63?u`aIa;WUr?&KH4H0afUl$gAnAY"iJAUd**H8*`)5f-<h\`QY?$<d7PBXW_H',GGr/JkB8-L.fCUK6ZYYc-)iPn<
%*F]L03p?g%_$a[G'T3&3O3G0h'`(pY(/\mHjsTbugnZW6,4.XcP`_fg^oFYKI>4J*FJrKiWl?Rn_iV*DREd#Z(I/KbN*o$[JBC[(
%%Fto$(n'rN?%TQio2:BEl)lq5$&6o$oK5`b+nZUjA*QjlEYHU2!35"3#`gqr0Vecp\kXq2*Dr!rX?UM$GfWefaYNHq[]CfTjq\($
%r__"F*fC`;"rT7;8K!TQ"ERO-+0>[r7PK!T]-3Tf6bNi6"1:-E6L=Hn;^b2U(336ghLMn"VMEh09)ZRa8ogmi)Cq>![(:f#g)6kA
%-R]W@Am*]'oe"P@<e&^m]ELkkQ>Z9j@Bn`c6KEg28LQ'/V%(gD5`0#n1RHcBl1*,3hTOLG7h*/9=,D#cddj8X_N=C`Bb1^%8K9NF
%n0"SH;"ABOIOUDcD%N-o!r8m&R?UPYnQYXd1$*uO&kEkE-#"Jn[@rC[#q\.Ba[$8a1"+o$,%>\hb'K0IT<M`*)546t7h-kS:Ud97
%7>?O;2L%6fj'i`2.3jB"9[/NZI7fk^`Vss)^i[eE99o^6:G*!Bl0)]@3+qNS;oWB:=p2;M0sOP*nVP/E8q+e+"=k<@lCEHH1Ng[B
%!2hP0p?B'UNi2%TK6.D5Z<u$'5qTQJ+^(R<;*:tQJ]+`#\g6\m\9jd2"\8WH"qK*gIajs>/P3>N5K>H>$"ZLs.hi(.R^s(C\1I^O
%cE2?nK:KkQLB`!+9l=MNZ;N\UJd-DO2@6s*.*//#@c(seM._[-fW9`/OZOr<B4!k2Tat<Q!1uNoa[oZ;hSSB:KQ$2*qG6XD86+$.
%!Jr&U6@FpfJ_pEk*bo2V@g30@0N=#UYkGA+3"@DXeI(YF6('fS;-9M:ONd@r4EL1hea<bg'XC8cD4kI'hCj>8-l"6Nf^)55AOgO<
%R_?d@G_r(SW,6cX)5UDj^1V-qO$YH$#pVV(92s"Wk.i2DND5FY<%BsYnm2/q0-p,t1nnB!U:pum66r%tkse1Qe$>'9Hc1C1%R3CK
%3"_?A0.95CblI$%B(Z%rAn*4jEGWTK_Jrdr2lXbB?p>#nOqkm*`nTQb!f)JBd=G.[DBQ[1fS78./-m_s/[+\bY3JgI@gHeF!#QB'
%%lQ7MK;\e]@]7.G-\EL%PGK"kPA)DF'ac'T9nZ<k%=SZ+>`]ZaN"l!tHC*2OVkr`E<Ypgg+*j!*FGa1=-L\*8WY+^/ZVl*)Pejl`
%7mJD-@QD?X-S$oMCqUr/$\'ZVTS>+3Op"8tAjh:E^U]psNXfq>6<fmp[C9#5Jl=gj(cCp5S\Tn(X_kp*_*FIYAb2TX-d[a.oEE(Z
%8A0d`JZ5IQ6l1g3j?^&g5j?=*0C[Q>V*^!n5X*mI:nej95[R#/O`^`:1QfR[T2>l60aZ3:_\*Y_0=.YeMA%jC/@lIKZRh&R+RNp"
%p6N*U(`ckkXIMb]s1o;c?<jA=V"SRjm0[nT8LNJ'<d(iFDV!Ek^KA\<O@<sDl,9l:X_B!h,`Eoc<n9q&$V''qW!4g9#*VLm%3W'_
%@+g_f(qIN-3%u#P6JY2K%9&mZa<=Tb-]QW[;^]H<?j^0U40#`CYYgV%g64!CPS+CHXKM0snZ:mpd#s$/IV.&k\0]E)^U"o(=uR\-
%N]!a:ERB)`@<s(WL._#>kSRIHLEf_)B$f)YHu6MihcXB$A4R4!?d;,4SH+BFj"sg3V-/3A[*F`rAn9`5<^MYIbXCt33CD#,TiIi'
%h4kL;0t<nT#`]'57T)^@P)ZT<9NGAs0LSOD*5bW0LY0q<A<"<4DLg-9"*=rk$Ka_=U^`b\SckQ0X]s0AAcl4+)EX)3:`3&crltXc
%FGde&g3$NTCq4B].>t\s8]m48%4)E.49a@UX<$kI6&"(W8$F$'GA*L9-U`.1bTZLnNLY;h&+Ei?n4B;^8Ra/(d'sYr;cY>\Wq`s4
%M$3F&R".M>f7`](b)=D[9kJ6=gD)1i,'t2d`]a[f6.RdR['7=2?2[f,bH1a_&`@u/f9f`,D*2NE?lO>1_4D8'hY31J=2(sc4X0Np
%(r7>=Cm6")+[I6-#E?*q:6hM@-6lBh#WGFP"Y59C^+nh2QGG"1"^@8qa.KbB8^83EoVbk;E;'[cMbmTWRBU"k9-p#,%kT[i"V`<'
%b?GXT(6X^E460%K[KbH[H8=Vs&#isOpCd5Cm+jqm(IQ=)(2pj-,cWQ.lPRQMbGGsH4VHb:YTV+qENQtcmjp/^lpB!Lkq*adSX4I.
%9-]hHJXFJd4jr"ToF92IPd:sqPO+,5_35!`7gVZWVa9!8_&5h3H#-_qeIAZU=,[N5V&#d0'SpSnC!<jTqTr!)Op;+<!ib6cX!se&
%="tP"'EK4WLs2(98sc1(D<d6.Y/$tEJl>+qBfck@)EVss3AqR^&^3Tl]RjP6&;(X\(i2cV.%Oq\<m"GK=JS1+)T(oE4>%(WT$1PX
%Fc-]\?e-@nb$YAXV19?Nm+BGN'l08Rj]\q;GE!.8Z'8!umWgJtifctqGEVLmZ&Yg0?93.pcXD3_2B2,iU)3eDfaC?%2J,HI*1[W2
%%>]3/M1G#US'u'JDNZJsU0m+;S[+h!)Cu6E"c4I+=k%bf&=AY*ih.!5S2S)7B\FYo!.YHNHDDj[NQ)7`UaU+@Poi(GA]]&SVJp9l
%P%kkcRNO:]OR't#NJ:0$dmUFJX"=Im2'Se)1XlD8"DgM;ktP'c:Z*Jfm`<nhL?/]Mh.A);&h$c^8LfEt5RRU$n;NZG\Q1.Ki-tf!
%">(M/6>&S;g6*BB!4bo#FTAqeC-,$Y!pt[6NP?0a&Oq#94!R:n/?_>-)V[q_TE/ehDO<J,I.gIK/P#n=:mT)>KQhU(aGr`KUY4X;
%5+mqC!($pPBU9E3K-ecFBF:uu?mWhDh$mR2ZA)=:4s)5?7J<Vj&tV/dS%$es&jW&^N_ul^[Q-,jO-TeZ#p=B.O'ptG_MkV<aJ#>_
%OM"@%0^aX44kbYJcIsiZi!LnH*)%c/8GJnCM2G:TKFIIZHD41"MMPh:\!)p;ZkI9h!Y*K*3b^-=,?G.k(2ub,38f3@4]Y[d:7A/=
%<!C<^JBkrT8Yo*N'I[M/j[H?gFju:s4Uh_Q((PWQei]+TM!M#oCG5"Tb.,8[hC6;TiE$U"-"/@rG$G3eNqO>&i=]YH:ul.T;L9KU
%QP`:JQt_'hBtu^1Asc9,B55dA7!q[#m7rn(T_jE#:>QM:Y1/at/ImKPYCR'5%Gi)irQjd-p?&In/p.H#+LG[Ce1JKJd&7US:k/qR
%/TF3h?mQEM't[+K9rPQ[Cn+3d1\%d)Qr6;/'JbibAG1]X#+,F":(EF8TZ%aP!XNqigcAI:c_Og].!0r5dWScm.!YTH#E>6iY@<?I
%,O?&b>%"al+JWBm90Y9)lg:V:?XatW;=ZG"1*PC]?jm"eSj>=n`..$*K3sTU;leOn;T!8q/MeMndmIYs3!(J/In6)TJQ<s62A%N%
%_,)'>QYFhT"^DUDBaG6iF]r1'*)<\"8YKo0[$-A.!^kNgN0KSBaU@cD#'(b(M9YN\.1To!3d=6Y1028Kb8#CBY@`,=8c,"]S]Y[h
%\dM+fm]^Vs`m1uD%&[l$.0Lic1gZ>[b?k'XCSMXina)h>'"1*1h?o[5"Q#imETRZ':,SMD/dt!"MA_Rh/M4YH0?"TjGafsu#U:BN
%bKcVaGdl>>9aPWB9$g`ADc?_*OQR":TpaHA6'HRfN6i>JL)0"i7L!h<gace:Nop%7dM'I=TNt):1u[^bnWBp[4#BPbk8oe.+u<RY
%?O+hS+`$=HoL^+OqQt3W@bl@L/Rp#(j_(l4^Q_lF=KP`QAu'k\),;.3V[a9;e<kb^B5k+u#GTA,Ql`2(N7ssQoO#C<E[_M^Hh>>s
%*='nlnhPo&Dp.CRFh^!)cKpg<J2GF9WMreh`/_7\Y[[],JuWIR01ZL!1"(^([qVS<PEcJpAm-`sXd+rNP,RuD"YI_+3El6G#q><G
%91^F_$3GEPXN^CdcpIq,UHNkkl8h'sUt?0U4(NhlAD"eeDK_Je:>jo@$sK)Cb&(YQ>XlQ&kXHd)jJWih&LSuaHHFJIHO\VL'qMcT
%QrbDAVa"p;HD,N5r]btIYhBp&Q^R'S\OP's-6YAe+Hf4kZ4\mfTEQ(;=BrhRf/`-7q'![1Mr34b!0)LK+"FS(6Qo+Q2T2*k>1Z/i
%!dHK-199@g7ELS<<B.jJ(PXlo0HDcpY,$SDYfN@]ko3=D<r%A]Pc;$De;3J-OW$9;CU*>spsY4>LCFfHqqOi-R_,(4)N]bmZ-n.L
%'nEQ#\I]b*nc749SH^HNP44\#i(g:a=@pJkM&I-Q[HP#&()\1TmM[tR!jI\8T5E%X81.Oqaoi6LDsU2+9U."XIJ[-F$She(e<+%j
%9,&$F5A[`+m;8[c6D/icG"2$DJdA(1PEiGX=38rL*.(eqBV'e*Db/lF\'I\="hXse)-3P8epM/P=_iE+#T&(>M&Dr&6^a<#&n?ND
%/2d8sX-eThD1F"fU?Rq"X>T"uTVFcD)G5^=2c3qFPtkWUhKQXIKecQ`,5pjD-:o*`]0WL?UPcL-?Ze'@<6]ip7B5]6-60T/C'PXh
%Q!::$NAL:p8Yfq*T`k`T!E-t[m_s,GZk9?g7WE8H/4.L6/`pM^r'DT]*PGMRps+g($7'5SHc;%T`].Yn+^(,:G!XLa7f]dt\00)8
%gd][9pC^/u8BNh8OA]8]_WG@U#Dl^I;VN>UW7%(9_i7M$Hsn-15HV23@F-7^!!CJHWi\Fre2i^'a+XG+BUM&1a@=6:a@OV?2AS1J
%pae[d=a\J;NCHT'Be]6s4,j>9N&]L$e*P!``!"iGW<og7QR0C^-?*NL<Y8e&FM\>f8gq5<aGO0,begb1eXQ\2l"+'bd.saL#'u^(
%0<KXt0YYM4cBZ_P,>`Ahph3&FgdtD7"9`$8_%Kn6h3$`Z/U_jM2BTmr+\JfP!#9"385VY\0FZ!PL9[3'8.+B6<!)Rq6Er`VGDo;'
%jH,2_XhpZ?Ggp/!Y]15kPg\0^5lsT14;8$4gR9OY@Utn#2h#KaaATp+,K3^c2HH>PQo%D3-=K\+#3T*%B*GPqoiF+ir'6!o"=uj1
%PLYI.1>tu#BS@RpQ(OVKC:YYd9<;h*C@/lu&B-'@k*H'S%,$/?**H=D'4j<S!ifOh)9>CmC/(]j$E]5H((H1jqKh]Us!":=8\2Hc
%6EZHt<kLE/D[@u-F/EQ<F01*_R%KoMYUmoHALdp1;GYRD)(`I>+WkM!4P1t4a5FXI-NJ'-Z,O5c@h'E&W[&isUC9J%YWA2/o7H]c
%LgiopZ=k-_BG0>d7>Y]G?_R(6^c_7P,#72XE(\-15dJmhP87i%DFRbA*m2>ml9dH^!tlJG'*"oa:\Z#/R;5brb$\VfG+B?):e<>V
%daqrBQ8SD/9%bY^4O48`,-Vpj`T]j#o(]f-dlT!K_o,-**q<+iA\=fY+^i:ia8lD+/[d2+D)&$,^5;u51.5UZF)Agd"9i\$MnnlK
%EnB-\SuK3Q)1bmN530nem9<+1Z5JtpDdKMA,F(kr&R;)o5Fp@]7S&MI!Ptq8lcYiN!a&LKB!>_I0s%>q:TGX.KP&rGm(^`/<ffeb
%Q'*Hia`q6kq4!9qjnqg;BuQn[F>ECL"f$B)f)))j[tU=>I^_C*6/;pce(pJ_O<C@uR#pA`RB@gi_J=r%?8)IO*mkX<>bfA-I\U];
%aR\#JZ?8$V4G+7bZJ:H8nPD#3m+BIALPhO.dm/s!,Ln9gb.s$m;`Ao/+MGrd0l_!iG`gB]4%PL15f$Hq`j<TnYnL_3G(u0hZSLQ`
%"!q9_`e>eF6oRs$iR]g4,?$'S9@M.e1#]NAWC1tnT!X90\.D1gPFZI*K86-n-\0Y'+\dkuqC)dnmHN+2,^;#;HuB6"4FWEaA<p^8
%4?-[Xe1?jdYP9i2i_16ZU:(jq!^+?t_F:I%GOu4Cr&pagK3G"i;q^U`.rsZ8IYY(L18g,Bn"^g`2!R0.EJ%8n1>ahMi6<23*<Tor
%pr&+4d6_5G<o,o)-i,^O]/#RD[PZi&"1spdo*OlV5otheS!E`n^`56hrIt!kTRYVkIZ=(S3s#@u[!0lW,eT_QhIS5!.uj0R>Nod:
%S9O2k+SjBOnLe<'&Y<)2mtf6lmmd-@i$G((DG#*XQNAb!NU73.:]_kG-+bD,R,3(<'Oqpu4KQ\J#9$%LJK*,[[Pd:R-VS_I)@;O<
%X@.9P1ktTVd@EQA&u#%lFD$]O[X#f5<uc8"lBj9]iJ%rH&XDU@T*+0VNTk=+))L**fVX5aN\<nom`JpM9U:k0.Fjsia=!o/L'u+O
%JCRf5mKUddlqYJ%JJYaVh@$GkNU>!k-^_X@R-bA]TcgL[G6XA/Z[SRZK1%13-?OIn\<'V97X&JNEhD,*h&XF#0i[E*$pY>.N!%t.
%+kJlVkJhmn#4YKbmi1.):mTbWdJ3-[SqM-W.GZ!ET00+..bu+QU4aMmo%b2SBT\'gb]a;Z.3[_M\iU8o!L<$^5@c5:PjJq\9a"4.
%FE[rI:s=DakjAj`I-Fich45^'!J7\Dm`rVE5lp26m`pn9dY*2>c;Y(07X#)/<rT^^m1+!c`0%6>G=;*J45lRocB*;_.]0N-&`&El
%G*VHT4X/h<R'PNkc&,-C7WrFc1/,tfV7T+;Q14J\\iX<6abN^(4$q;j&-od.6H>eWG"Qsk83@E-kt6/4*3o4])VprmIAo")h48Q>
%`7!l;+Rp'c(t7;DP!J+_d+pG>D#G:,*P.0!cZ'L@WR&0Q`caj#7.PRsf^=Pd6)k6&]-Fa.P9lL]:*eDldG9YH!Hk6N)t$_jmc:(H
%Q4(*t'jK)>/)B#8JkBo.,97(cLDaf8^e?cm#+r3WEK2cr`cc!^ll_FSZJFK_,d->;gE$!Ti0l1N*Vs-=5?un0/FfuQ$;K1@:l-`s
%mE0SW/.P6"<OP!40N@[C[QD8kR6KAVm1*6W/8q\-G60,EYI!$s9N'O7[(ct[DA&YECj1US4!CcSh&5B4Q<3>=+>J;r%s3#MXY@,+
%a)lMjit?rr8p<c:1P076kjAGm+?88DmS5%;YgV>:5Fp0W!=2$e$7jpQd+T`i<pB%FCB^ha6?`[R/5."JmLFQ(<&.C`4.KVfS834j
%L)?Ya+6`,$Tg;%PUUr;jG:8gjOl12AYVBo[G6b*H>#i9u?H6#Ajh&Dj7<H[$h]:!&!=GrVGK/AUF]H.;j-?Z_8h=LDa:uP-GK2AY
%7^'sYB*`2,R5M]?W./j&282-le[!sXI!5e&qd_I_I!78k*3186hjo<)me!CZh]7jtaUN'1^_)ZIb*_N**]YaN.b>[\JZP[KKQ^#%
%oY=.gmY&;(%7GDJ!&6N)i44J7(R&."\`8!WEF?>06/^#'E>M"(W>edkTk"Wb/WJ^!4g-,\WW[N"(>/^OiO;1sKRMgEhTg6$><k#c
%6>m)`$gntI*@-Aej-AKHFELMVkj9L9oVj=RSO!TKaOc.&%K[e0T?u?OK.mO6g$N0kO;P?fgX2lqAt4G.%X<m[nS7-.Tr-Zs\_VuZ
%Ip6IESK$eNld1<SEneD[-7*)1Z@ePoXNH/@Bo2_?/.R"T3$L?gWLO61)L1H+Qg=nu'@btQWNY_,(59C*6<-asMEDj[e"77Pc&Wo3
%JK%p)A"<9XV2*bi-O#Zd'cNJ,LpL`]8lTCa926,eU7q+0,"K)J9UP2QgGIotZV3Ib1D&:QdMFrT8o+`ZZfbasM=&Y[-Bq5ifFG?*
%E%FNu'AF,sR33j!CBoD7OGnJP9WuBlNS0?:ct;4D1R1CUb%lc6-Ab`4[UYk;L_[P)Q^;8nmY'8RNHHuNJ_<d0R["O^YVb=M1EAV=
%Io+G3hVh(CB6\(K-7Z9k@<sT/n_+j-TpYIO`"6,+/:<iSg>PBPjc.k%%YPC6='dsU\cWc#GjSntH!pBU*[3rk''Ihjm0nmfi]q9L
%b5s"sUU:3&DYXi]NRlD).fVtRB8EdRqLR5CKMIFR-a\%.1\T40m3!i&[0*NO,Qb&$Ts]Me5sUT&CBo\SfI3km+oY?2V`bQ<-kD&)
%CM0#'1Nnc/%ecBh=d7JI&gINk8o$r`>(#WbXdoKf>H4?kQkE:M"Zp;'6`bt:r5NJA?&;%P`bGajJdk1J>!#*]l95ZaFp8cd7^5aG
%JI@=dr9dCMCH<bKCTM]@#TQTN[55aT9m2NHNXmE\:M$r/eO085b%bRF;/=`Rm4_EeBrRnOJmQWbeX4hr@UU7ZUio-j_m4'RG*I+6
%=U_*LV@eYd;EK.$D#S4GG)Qd<0!CDk_%r>5E@&$11"HSMmO>-++[(3Vj0XHgRkR[m)+u0VJ^MaSJCT<17QWs?lf\RC41r>M>oFRI
%0[NQsjMm.%'N6eh7QX45KO,P`.-Z.`A$gkkSZU>)1X9NMCJX#`0r#c-9L1U046&0?h^Ik#k_NAY1nh949MiY]:tibaA:%YC[,X#/
%Kq*2;):U%b\n5Qon-l4RF,k7,?CTn#P]h!UUiN>1g)9@Tm]o^D)+&F7ZUSX6pSOH=,>pU>C(HQD.B+?+6BPAam@Xua;_E=#pct)M
%\)r@p%Ur-c/$0g;_L,[(m0LkYKZf&#%W>'hn]GX&J[#T3b%jNAaD:SRs'XJkas`8?g>Q?@cC<27@01c$66E&3UP^<.?_t.dU#r`&
%[!%Q)Z0MWu3sco;Uinj?R$=,&g0pro\jB!U#d;Q`iX)S)%Q2fB2,ZM*c:Bfr8aQp:H)"Xi[0+Rc+W"T6[DVnLe)H&1cD4'r='=q[
%;^o/UXEKEZO[+06C599!qE(O]",_X4j!q=)&..!n7Vl_C_I5?34/*S-F_ep=YW$qGgm$G$G"JJjXMf:<pBa,g-+5&U"C^jJ`-1Ld
%?nkb0[_j?4Ska(>FpnM:!NQjfOcL]"+!"SBpf&.O'4O$?>a@X#Q.QT**0N`J@QX;GPAtt:Ckkc73o>qL%cO?';!1i8m4=`>2<-P*
%gEHF3piPW*6dn'k.N5Q4GpF#I(+7%D&50sQ1><\`WG-c..`DZnP>YLm[\G#4]c3@+%!1A[%a9*Ni-_ca-HpWG"=%BH1>@r.Ja.Qu
%Ce#mY165LK4,*nV#HH!kKHEun)qrXn&8&:[^T>Y&O:WG11##:S4MuYYAin30#Y]b(gC`'=I:,uc45qM&m26WP"B3@mXittdpnYs$
%0\_`L,PGhZ[UZX*f?K!%%ddc_F_P6l,D&b=^.^fo7nSG^H4smP+qP>NYVOrFkDSE'Q._0g7WSA\ZQ3`sa<b#hmF\I,2YP:1L\HTk
%@lWVZA%u5d#AQ=OG/7g]:tq,%K\r\*gPI2dJ_H,K(!2isN_hn@4K?nS6m35hXtd=)`0h<ab%ujuF(+pHb][e8'&RQMCko2;]!=*G
%$+3=l#A-&&K0;.>[R3'%,i<)X[c9`#SatL.HsS_MK\)7?BJb2gY8uT1)31o=G%@'$B:(C-&]L"PUQsMm_;[pUh7>eTOsPE"b]`V8
%.fg\U1gO"[oksr?SN*9YT2B>bdb1k'X&@]7Uk!%,'5BV'G#T5k_&OZ_/3@@,geR(<HFH@]#7qUCfJIV1U"W*`HFrj[^hj[GGOD.L
%O;GUW$,%@a[Q*PED^Ua+XfV/<d#0MV;mL9rOq=n.Xg6]D_MGXMA[`lr&^b,:oQFcQOFfNi[j1E<Y,sCK1A8dARF'^9QgQ_Ka)Z%,
%rji8thJRD1pHPVfPhrRUa</V*Ien!NRm14Cf/lh@+Sb*&=-m9Y&`&[;4aNpp-YM>'Vi:W:_[lbCMZ9"(hk")fH2XJnl_D4drNt"f
%XnqJ[+*O\\5Q%0YIJqWM+2%F="1.jr(&hs$5&^,echQ8p/V!Wc,5Z*9=+=BOkC7WTkN-npJ,/%.NtPo2#q!O4p,CW)lq;gtOk7Kt
%V]<I#2RuobgEdml02nHpmZHLJoa(3O*p+ilEBo)0DO1k&6&:8;0JJk(OD(;Bb8XMiJ%FZ7oVJ<j78D_/X0n;\N5X],Ia[<E-_l/h
%-hZTtX]3%%.4b\Zne@@-GmaB!m,h6H>^l6f>n^ci9io9GQ"&mW'_D$`!e2.Z<'p6iRlk%Qjd?#W/cO)]&Anud]>LrqGCEmLW0=a2
%n5_RQck)IhY.ngEdSrEOAI'>OJc)Na\/NA@hY8AO30V15a^SZq1U1Qsq1uG&BQANV+NV!D*-[-T/uM?OG6@D6'-[5=;2(mNdH%(e
%h09ejSV%k7UN1c#:ltA1lQPVkGqu(8,,90s,+QBk+Fi.hA8-GHGSue4b8@KR#.[DDpN(qMeGJ8)9nh&_C%@7M$%mPnXS+qdDtRpP
%mN`a&2t+^ZQBs=rX^O%9Hb)+['u0(Ks81p>aih$R.uL#$<c3?WmlhjfGM<G_W++dhm5GW0$i&1i*,H2r-U`6Fs4M^R1c^RqFKtZ>
%M]KPbneWBsn/nYumRM[>NVFZ'M*'G@fg,54Yp(*N4&nS0MU(l&X1V_$r"HLL/AIOh?)hT*hG+F?2X[^<D>+5o@[c.X7<8)$pYcA%
%Q5M9@s7p6LA[2N[T.>o9?l]1>^:kOu6D$=<GSD=t`G$5iO_]iJ?JS#==,0NZK&N>.:?@\i!<mu_5/)4UD7R+l1LT8"<Bf2br!!*a
%rUWc)nh-6-l/Wr$qY*5Sl27:2lGF,rDL[E*rUJKhH1ojjk@a_ae1,sk5CKj6kasL]0$?IC.PH$prp?2EZe%%CMfF5pZ@:'_Mt;ki
%f4X(Qf[\%BG'PnA,Q@#kk>u<oa,dghNP(,<,sRu+][:MDhJijd.Bb.\r`S)i+%%GlIE!CY3e)VM@`C\*]#,T5MmN$D?eijB9tbLQ
%_jN<JJ'JnO5PI*iX)J%8m.BG^eXObFjV=Cmm<[U9Lq_nms81pRc0H6WRp<Y1;1A@[hgBb?lG^k(k4[c)5G'Y[>kEesDgZ4Zn`J*h
%[r3nE/l0f2T*tJFXg?Dm^6\lRgW+=0k2kd(2^^h]buq=3Mt]*+bH%gac>QI%WV"Tb?LtbCSR9SZgZ7Y5WQiIh\:%cBT"I8ae+MDo
%]I?Krc5F<=rOrJkm</<aY0UFh\X7HVeI-">RpGK!hY,7(C](NRh53"un,2mIhoeMM^V'N/>eN215.S58T(,[49+QB7SR:g5NK^[W
%=7'cG?X:@U5!Af7ouX6NkGNAj1i#@'h_.d/?G=!sI=<tj]=b&NT]L=n$[hm*flsJm(0Boh]V!0.44NB"\8mAcb5'#AqsO<V3%>_o
%]fLZA:n5'6?ZgAN%a190&Q;h[\]'n>I(@4_>C=!#QRehVA06C^k9#jG2et*;j3>hQ?jH,G'i4#7foKb^?bJFEIeD0Q\uGuDh7rhM
%?4PN9H%#;^Za1b"[JG0'6SQ6%?fV"Vim"WilA2S)5G,T6rVHHQo#^=I*OacdA%=apF6#OBj-_uA%!/fPo0',HH/%B;[F`rQhn;4c
%H-:(bik>=Oa**]ZgiP>IPuhUrD_=efs7joA=-mQdF$@h1:\JD"c6(rmX39*R-[-Kdn<89[Dan<VlSmGQSXc:"FaA'_-_NQ7HsbpF
%J4G,Fe'k@UX6Y96l,@OqH=?mQ4E$1!h4iAJd4hd45(BnS^\eEGrQqocnKYY`L.;.!),p(?HZY%f]O;e)`8sj`22_3IrB>(W0<WSR
%Dk>43Vu5NP]uF-"n3'_CI$@+HK1cO+1!jq0R=X#rbAp#=9-;tAbAh26@"qbPK:DBcE7)Ccer6BkLL&r1N56M-(j6(&-=cNMm:#uJ
%8)sTQ7tl;1I=CeIjk7nK4R>q9N-@6Q%fTFTO88?0\bJ*jS=K&,[k*<pEB:p[M=_i^9ugVdY.m3=9HL%<1Ol/_bjY(.hdWSU\Z]ts
%XI>:SO#\)a<;Gl!c/,LK_Mlk^G`g<jVJ5)Te^_X&la*qtSWWSjk]KS]nVj(4l]^MpDruH+HJuS%mdp%.P<$1dU[g2_<iOc20t`E;
%G,So]DuK4_m*2Ts="g^/Y.gN:"<F-SZDb$\=(;b,H+g*kX@"#OU:bq$n+6Y1_p7Nd47qo',N!N(qg/iZ)XhHo+)r%^XNtkL)rgsB
%pWk7*?+ToUC^8DE5JtE(ddI*QkBJXMF7@Bjbcr-M7h/A"X3PC[$0IQAn$cnYetP5'3f=5O%=C6I=WNR3RPC2ABWM(W2.e*mT>!:q
%]KEh$lKmNsFC*1)o-aDRhj6-^CNglXk"k\ug3e)CqUNR,l.O7dbF?8:]K41[Vd%^OX>^&k-@`],S+;V]%+KU^5qA'b=6hM8b3`dd
%I?27YqfYG&m<HpT4TGo)0-0d$4dUYDgJU+LrANtG*;W^.e%'jjGTS`93leSmB+3q=Q`&'+6+XdV3N)Y.QgO*CcM3V_=*"l%X8S$O
%gLZ5$j)<jdRM0n/lh:$4Admes*,lq/C1"mRDIsL8GNTbYoBPp"p,A@so?4J()0PnU-Pr\1\XHHg4h>`BK=\_,SFM#&5V;or/N"X1
%6&dPSf<A"&IQI:M`Z?U"kfq6BbemJagt.X"fK8+H<Zh<BNoB\m2SFQHK=jBXHst%iSj,HS3WF*Md+Y=CodiijcX4uO5_"#cDt!aW
%fcK7O''15U[*se0M)&]t`tH*Gi_#G<TAe-U`WN;1R=g^4PbRBo%\sg#!OE!%5,;AH3J0>XUZ]^6;.c2]7oG7#CJc+$/]r^M#>Q@=
%/]sU"/@?m!/]t8:g-!G['_<9B7@Bu?%UH2$W*5G7LK'0eB/%A8;'1-:b,fN$kZe"ZetSZuUfs!CK/o6'J"Kl4A#uYtoe#X*2>6ht
%NuL3"<e]/r-&rM+icmZ*H[Ug#^;5H=0DtJ"^A3_T0]1Z,K]j9!Y;m30"mK[gJ7T7OI//dN1Q,SOMdD="?CNYQMdBW[g7m2Z6Eg@X
%\k!TXm9uDuBDAE`<a2rbDd07o`nH&#eeYBrBXQa)<Z>\)^=bl&qp;3N`YA@!PjD6n!1.PEpMH.\D)>`0Q>O!FUWJr2h($XI7[-2g
%3NF9BFR?fDZ/5ttckkmF4M1CJioK9@p<`DUBP[GAo(gs_kEifk.OUKXYKfm\5+@8:0tMO8TDARsTpRiM3<Cn!la)pZ3ro_L%1M@k
%/&7k65*uK^AH>/D%n!qQ]NC7l[LR/5KX)\*^+u>5DIl01mqu/)s!QpSjaTKDs0-f64YHX'5jj7!EbM>t_rC=c'cc'.eE>+$)F'Z7
%rcuEW/XGqqaZ]L&k?JM27=OBZ3HY4IHM-jZea)4MJ,X&HT)+0;CnHUCBcZ#,C4R7BU*"QDd#:0n0%sMdAB#I0NH6iZF4b!TPo#pK
%_=,eLT.u'\3qnCmWn`g(o:$OLcYhm8+@gZ;c8PJ/rbT7%TlO+FjEgr8Hk;(o0d\+4phc(h(hi1+>OoO%rqA,<^O#r%4LDN/jF<No
%mum^!Vnjop(eajPao=!hhfl=HOTDoH-Sm?r-0KWJ!MBOUQRk/S-0Mo$I.(lfcWs^]c%JEU>eN'4@YOu)rnVd:?CsBo\h'`'jd_mJ
%nV_gTmcUp7MlWIf+6(98pFgF,"clCZ.lq0nlTa$keM'@U^Ua?HQqML%jn/*Gf6rF'dcs;H5_meS&M4U#,slbT&[DX.(V<)VQ3c.V
%+hOr>2oF9P_IQl+[eDJD=S/55IslK`q+7h(cTWc_nbMo\TDWq_F`DTran=?Y:Tgir/pHHcQh]5tNo<)FS9a\?k:b`Jm%PMj/Aleq
%^/e[40q>S.o!b%WZdH1-%b#fK:7(nsFQ?bD;a(jbj-_C_j';;!h"+T[Vr`lPro64M'anJOG\-IoHS_j<m">/CGDI>Xra^M6kUngf
%+[hB'Xj8;@['sJnIB_>[O$cjG9Aj@f]I\W#-1J2C?C&CM&pX40O'REA,k.O*(rfpK^rmmJTM+5)%Y9uFBuPj+kAr<XUp&9n3pI"!
%!sP-<33BQ3Em^5(_`fs,EJ%!0!BE,]Y_b@_#7K2&@>nUqS(Q3*k#^1Uros2!WBBlbX5A;EEkX>b[2b23I'=UeiOC!b*QI'J+>Fo+
%iHRk:lei;pq$5'iS;dmXe&+L[]#/_td$GO?V0srEh[E9-="d=??i@?ne3(+@r#)G393;,/Qioq:c9?k/o(`]k;I6`6V);lo]?YuL
%)#egEgZ.5"f@>*&]fs'EDR_lW5#WaLgReG8A,IqT!:TK$+/Ui5BOBnqP%?9fg4T"D*guN0gK3SYRq%L+L[j2Z62Yj(Hr`D$?FRD[
%\2f1eEAk"dX'N6=iQPM6Et#oKg4R/J35u$.r4q;/EJ\0FO\^&jEK'eqiYZaVYf&7+f$cdj4hnoiQ8lmXI@2CAZ,AAW,`_ELn^)/K
%AlXpUFT:_"SkEGa_[CI4EdDeIn^ji53ORu>]3>NiDL\nS6^M^tIU:%mj/dFan\tADeE,4^2s3,t]:t&o0,iI@mJLGEfHs\gCN/+i
%)2LZ;T"I8ae+MDo]K*SdS`@8_?,*SJS^*%%*=^6aSA@=0[Ju>>L?@j?n#ij#cEUDpg&=GrK?`K>C<ft*[D,Qi?qEHHhutZG!DAk9
%X9T#s1rfr,Y`cF)D2aae^YmFD@"[<;i9,#sY.oC+;-)%`"pGh8P;t@O4gqQ=EYFHY<-u)$Y9d"+_`%PNnX"TF&#n?"emON8ghY2C
%Q=@&880n\!a>^_M(k+i7V465`Z=Ag2cR<1(!qA=[!suni%lY,^mIftKFr"G&n`BJZCDLi+n`CU*DXlj)Df0V%^I<'YL)'O2]t"AM
%=Z$:`@I`LjbFb9oaVK)<ET\*]DK4hTGA_E`5'g`\JjU=qP!_0D0Lt0Mc!+S696V4*h1&[84obNXABqIZd/CM17TqL`1KXVpp>9mF
%Z[r*HB]+ml=(9"d>];!L&6E>%K6oT#l[Aghp(ND!.#+6'/H>%F(FQ+FI'OC4eZ4n_o:)BPF]P=-p!(f!F/%01h7hIr9HNGnfgdj=
%F"H)0:KVj3\VhM6FS"==D[ntP3Hr@lf"iE8g1paQ5(-PEmD8DUaf>1%oOO720Y)L:$Z3n^P[*hEeKnA@kP.7,^Y%0%IX3^VM;U_b
%c6'_o2i\-Qre#WYDal%plSmGQSXc:r?'Ng](C0XM%:_:JmEqFso8.W4Gei(D)11i5J'VK9R?^6W=75Cl`Yl9_B,BZJ1W/%DC\K\3
%.d9*(o"6XIl*GH&VU+Dd1B6i-?\D&0R3$t#C!Fn)n!,m*O8jTMFa5mgo%Er_!?64TAaa$[D>n'#m2"1=2e^q$M,a;!eQEr`;I,6U
%UG.Q@S*8^9j=Aac7r8r'\.JX,.o<t/WO&+g9<e;!5L#.>mtY2A,iar:M[nAAqI.u5P;/I'NFC+VfN"Cp)1t0?1!J%X5O;8;Sm7oF
%]Qe][$ekWZ:<<53h8;Gt+'K9I`VIap-g*SO1<\X$^^&&V+-(E,no?]2``cOUa(''bNo5GXJ"S?*j7/b$`u%*Ka9E1*k]oD(j*8;Y
%H[UgI>S.L)K)5Qm&hR@,`s,--O:c)C"n+H\S*e:JM9N!Ks(qR2PMH/npr>D,X^65\Mt,_dY*UNtFu)rQNoJF^F8>Lp[o>1)Z'JcZ
%cX5Q&Ymsu44=l-RTgF.>s,OU;m\-DraETPZ_E3"(N(4BZ-0+qmRJ&D+c[Vd?fR<2e,6jQ\E4'iWZJLTa7rek3oAEUM;@3+`Is[8j
%^rK_KE49b,n4V$M@7NOSH[>U`Aon\-gFbO5KDM8jm'"/c]Dg:TocE-8L\?GhC.9E-k2b9TZ[\SdJ"0cWYHQ3;\Greh5./M)hHZY$
%H'E()EE[LcAXORb1AgZ_/i0g^ZX[0M:\Is365Kkd!e7gG\U=A3*%$@A>k8IYoPs%`K7f52gs,=N$9METdXEe4-1nJ0l`fI;du0.'
%_g0l,\s-=2T+]?AoEKLb62KE8s(8i\rcn7OOWdR;+St6(=-m9Y]+C_!Oij;dI=H]+rg+-[q!4u,+9(;%5JR-ilCtpaq;bUAXe))3
%GOt\B]@Ef$IaG42roq<2hUMSk<hJEeCA#p)5N?\^\,>L*MsR@,kuN::rTAZQX68Tr?[qn1#EQ/Hk&Cg,?hMF:a$-?(H:b[7+*Z;'
%Oh:t5HYhd&=FSh42\i4f\Asl4]Ybl\j(%7^>)dH9:"O:;hOt7$#M]-r2VU(!f]I)C[Njbl*CfVYKnnECLUK2R:I"d8ag[X&q9P6@
%=@jV5r=\#cq<IkCPNV,J[ThF*n3?1ZGFe!"?$236-r7(G\9dMRcM./mjM.=OO6c.BT=s:B+4\-I)^H)6H%Q[O:P2e5.A,T]]YTdZ
%r4N&]:L(%ujn8-h(P2tgKB]\$/%e9/I#6cKf4Y#TO'TUEU.rAWo';M(=1;HgoC]E7GR-<ij>)Rsc$5Sd4;HEbIp-JI[MdEEgXZ)-
%R,!/FN":,O2ErgtC8Vkp]6W.nE:OJ`q=)8=D+?tJ1(WIVJ&7!?Ci,cd$LB.P_qC,@E`qnLA#&Mk<4MX^DDWKf\[jl`[`6@)o+]5$
%h7L_h'9=fSWSbAQ83$QGK7%q"HIMDg2Ws#_Nk'GTjn^W[s6tZUbJ*fKq1g'1eORA]IJk8BA^jkTWT(eT]>lh>JF?>>O@$/:1Af,*
%F3mC)GauA[\HMF(%KjfJYt^d]$<'1:"AKqS=[4`"j^r(0;T\$/]P[?:M*A7WPhtTf`FW'FbWTabRn'V<k9"oAEtG4h+n]GLfY6C*
%6[>)eqj#sEXNFbV`p%/`R`WP743m3FSu6AY1T/8BAT#gL]?UX/Z^\&OG4SY26JSF@U]5bi0rF7Go\?2Un;C7FTZam)IpE5H=QTc/
%0tPEAQ.L:\?JTp3*c+/GJ=Y4dl$VW/ji9"9]_]4@L@TV;nE'8,.7hbZmCt7=39(\)Z9(`]A5>tXrNT.15;r?nW?!m9=TmEsT$M77
%r9p#dmW"hgc^S-Jqap3WJ,'XkUOR*,^0YhkeX*U0<)QduQZ\DQZ@JJuE.$=[la+W%ljO,$QE''C/0DSW!F&RuYfUogB7ZPR:QN+O
%;/Kbcp$6?kKr9'IS)3ngMg\gRfPW%>$+W5e1E$ICH(12"(4DT+C;j^))t/"Rf42<3X$.9c'rk:ao,_DWIZ!5$oj$G#VT1Uc8:f./
%(cLOHoI]B5cM16(PdnNP;p(&c"`DJI\]k:a%Y'7r@Q_Ys5="NK>u4QpH'b<6XK4'nYY%WXn?2*u0(<m:'Qm<&gQtq*in!"uZ75Y^
%bP5quO1Sj+aU3O<k<>=2>arlMdogA#nu&!fS?DA=I8g',S#PTD]5Ka<^gYZo:>u2d\U;,;rSlngg$0k(N'H5U=O5mk4?Vu!?+]JP
%g"8,8Gs@PT;NA7n?Fs!EFL#ZdH-mJ&/.XA"U,.,=ANUsM?+mNMA]8gh]%Kh2`kKWeVm%-F`eom^Q>Ek^N.!ER;r)X\<k?>Lm)%e'
%QI0U6b1me[AIn[@kj^iWgUQl8a%jrSS"l[]N7[c#bgb.S^2CSm7-%b:i\KMB24<<'[Th@e$1#'FbK`c9H"G"lU.hi`?u(!(f1"$^
%NK%Q[?8PSB-eFV<LL(bn,Fl,<*.[$.aE6*U:rT`EZ0s5EHc25,n.4loT2KG-DOmLub:#-4s#WF;aipZK'=f)lfQ604MCt<V;rs=Y
%;6K,$4^VaYf2VhJ,$&d:$m'p4q6Mr(%a>-@'n)!&p*9Cs5!.k<r7oQkI!1Eb;Z>._-0mUlmBosCXbn3$*2^4qMm63mDXGPJ,3:l#
%jV"UIJZgil<_mnrWm";+_T)?+Y#[c5A;W\%V*9pV'2P3IH@#GMjd0%-6g7<DXg_IUp\:i[67]3?0d?,ZQnV)1TfC*S0J1=:3N,i(
%WKV2B19DM%0@sYL:naXqe)WMaQ=%-rT"==`fd/;ODC"+e:[s8/EDk]W#;Zc8NIB9Tf/n59@ukQf8c%tiNdTV&o'q,\G7DKl5(7Np
%F[>=:Hu]/3Z\pK^Y.m%[]ofPOs#IW;I^*TQ][ORnG_nQH%qe,mm7^b"LTgWJM-Q)`IsH3X+[&*cBAUXVEH6,AG(&%nF`B&/b[m[O
%I!u"ls0^V6_>L96"(M3)k&3*aq7CR^ju$M;I=M7mk*fXlFCdBL6b=@Gr6K<,T5/PY9h!P.6X3NaM;&)jIsLY^r,dcI0!WAA[^a6k
%InR%8EQcpBMfr<@dI)fBg1-!lFus/kBt?1i/%4Ykp"3a%+<MT'3C1Bd/[cMa**^)QA%0AlG<Ao8Mm:5:j*QY8-N=H`MoA9C*a=k'
%[ME)+#7t*uGDIjI\Zs,q4MJS_@Z/^sbnsgN>E$mf@Z)/aZi/II8n]pfTgcRFZoIrf:M)dk,)`=:Oi=[q(@NQTkdEnqh%Ejq,)c18
%=l^o45D/$-R7@1-.j)Da"[cfT(UZ&V'KS6Z`Y$8Up#U86mIKf?I@$Hnf#m"$#Ym!"BSM-,VidMn&@Y#5Neua5V(1q(nf2IBZR\&-
%JI)?A.m(ND]C5$M3&#H,PqQa/?6!d%HD^=k[UY`-cDRb\AA"7]`jtsCKTi?`_60-^qkC-T;:dYH8I$1jaQ[8ojp4iQ?rBuG7IGaI
%JVJpk*sQ5mW\!mj.Y^cY!<#(!Z4kDqflc]VqRqduRcbdcibB\Ro-+!1^JgW[*+A")%='s*?!i>anpVjFI8:$pQ&2t&M(i.DoeajX
%kAq6$$-ZD]QALC%06^0R$D^=;Nf#a9IIo"J]dTqU%9'>10CiSIiR>d8(fg]KA`gUpjE$RYi:Xd0b=,Nd3BCA=DLB'`AWgonN%4UC
%]K5l40mBm;rD^11EW+^$Zkn3:X5(b\&[1T0J)"XAGK+mf,tM?K(A`)VO;q2%5#'G]0"S-hlb9LOZ@%$[D/,lZkd.Q<G$J8^Q4B+Y
%1%T[7IPU*3AbZJhM'i+2&a3q^(eanjRM[+Jb@Lr-qp)@q!n5WaGt)\:O0A!a@c9UWZr\*o:3PEM]pYgu_<p)&:UY(F>Lf)-7e.Oh
%=&"rBc\,ij&;AItI<iL]Q8Neg1GS"Ko\s9/,c4eE];U@*dMRg\WY&'>cjU?OW@T80IOFtB^t+_\+&br2>()3(2Gj^+lEmSRWkQV>
%%URX\R8>F2V>0].W@[crau0a^ja%$M7B[G;e!Y@]h*XU:[J,`.nW;FEW(L1D8+_4hhpbS22Qk8Of8\jjl\qjDU;)WmbDC):\Rp9<
%.uSCK[82JTdYhBDWsD0un4$1kQnoqF`N'f'?uR$S%UNG^lF@&&rQEE/I?MngXI(>R#V6Kr*!XeLrKWlO$:TGiUN)?(lfY;D9iPQH
%I"ejM4PYP;]"iBa$AH-?a47WCp()%O8P`<lHc]._G&n?VB1n+k8Pq#fMBt]rq@08LbdJ4>fp8?d4&Qd#ADnA''GAF=P+md$-Um"f
%Q_N+EmseQ!,1g'cHs;KFZlFeSQD9iGgaBG#]:Pd:mjUa=IrUJmn&S@nD)hr*W;Fk;K[ou?Kq"R,M!m2k&SnZpmnOY.5."id*-)`u
%C!7@&[j3C6-BTR-lUOO(]0H&3guh:qU)UBPH-&t>9:!G4b>R!&A1<fq`P'kf_iZXtmb3u3kZ6Tmn5cq5gr'16$BV0:[Z"U8g*Z9Z
%7`gT@PFtdG+_l[LN<pQp1<UHRmeZ>:l`A]*O5uh'mq\TL"PRb(=?*h]AW9#ZcTiMrbYUuuNG'(9kq%1M%5V<abN/8`%.RSlWhhVp
%_dc/=j_:<7%[[FOWEQQ_*,2K.L7h->(O&>H)!0l&Hdl+IkAdH"&^TkZ)R?68[pI@cZ7+=Yds#TuN/U<+nYm@J@RHdQdD%ST:H>J>
%%ob*OhW@cbFI\Yi.J^'B4j*+P#q)U?2nj@Hbq4))726LoML_bYZb'n[7dA0A;Rs&bL#:DlH-<#u_qZE#UlkMJm`SYfFg6YJdC8E7
%H$=]mkK`210tEYoPMQ-i3s/u:4%27$@<&jmH]BiQEYS?7l.b4BLt%GKM"OS$2.-J3riB\qU=G'A:4423Mj'XfrqVL'qoRF8B=_3r
%aH#_%%44pB11J2d403kE@[rYd]]7_?7(_g_n^kDG^/&@r=2*L&Vnt@(A?'S:XVi8YM+ShHmjCR"aH`\r?C1C]GH*s'DPO&)I-H)N
%\I;=X\@Ni%gceM[&2mneR48`#btVT!*4\fY%_f$1Pk>Fu'dXQ(B/Xc6)1#5_)lRZ%YSe*(hXhpA._=qMMKU8+E6aYNcrD*uWoRIK
%RQ?0l'Uq-A9c]S02oA4LX#`]M5H*^ucWTiV^@0[-j*)Ha1G_.>D2.MsaU;dZffEtE*KU&M!`BbQUMgILPN(NNNu"0F/k9(42nj:F
%bn/=6=-\GT$+kkQf(6!Z_DRnF7W2j*dn/Y_[Y$\#SQ*9#gbkY0IeVEHdVPR&Q*R2`O@o?."RP[I/!mOdPqk:^P.)f:P1c!ha]n<a
%H$^I+`WnHj\Xl73G=eNFbFuT3'T+!1;#HUnMGLun$70W:TWA<,R?'%>98#3Ac_%QmhB[TV/UaoLHa4rCimreCkHF&DN8'LW=^,\l
%HY_ahDblnaD0_=o9AUq4:RalrBK^4</ShXLBsK$t+pk<XS4VS"1?g_q-CamOGkV[;^#r%_hqleD9hUJ)=uuMZ0_OHh5OI\([4YmN
%0%lOBfo[i=Ot1P,E[>]qY/G8%Q*e(CF`Zn_k1GhFZ.lbHp,ko]H'4kd,B$/;PV7"%Bp,RN$F^+WAM%-6RitE;1g.Xkm`m)7X[s-=
%L*XmsTDE*d;^FkaT/&hJo)!@caP0W=/NGscOi3P0)7=J&m;3ijZkUW\NMGAHWpP"`CATTVg,0aLB&&t#Oo35+M8O8RO2Q$aACSJY
%[\ZL&p2K)""!?[mbnOkb&'+AXa$pS0GUko#D3*N>iRj8q=mP$;p*d6lIX?*'/^J-O,]CeajR&q/]Ho?X28AIFOYk@BN;>L0Q5LS5
%Du<enNHpYn/M@aGj[K+@]L]3;F-IIqh3q0T_EFecP1'P&=j]#<']m4ABp#J'$C$_A9T(/jMZi'q[)h'qqIJ_e,qY:e,W<4cdC?gM
%7GcJ.J]MN4*[[;:;5*>%,r*K=V9$Q&G0*8K\YWuQkdA^;#%X()kpgg+li8jg(oJP$Q7Ig->-Y&];,LF+hgaZI]NRudKR3OoT%nA$
%^?gJ]+&"oM,M(^hRprI\D,WQ[:T(MQ1%h%1Ins"uV<q3?PrkS#iB$`k];KoFISXjlhps75ku$5':caQlE4e9l]):6M]UpChK\PR-
%/XhVZn845@<OV;B,PgsDh2YRj]RPheDTq5U=+"dgZ#$)9\2t<&CO[Q@`YV]8=%fsp;Q[W3CG45lP=m!B[IsZ&]ms*9@+>Wep$K`P
%$X!''<deMtg'_$U;QTht'Pl$te>DMl-Am3d]%eDHapT-!L1Li]mRI`]*OIW?*PlEm4hd8)!81d6Pnh/p;3a;Hd52sBn[1`s`.ta)
%^pNC6g,/M0Op2e)Y9%lo2764q'q2&RPk4[aemYQ@9f_os(s="\CM\'Vh)c@ggW^sADqIfjb]Se4^t"fWKr/RFX5T_n]2dh=<pA7j
%bn(Ri8=\H:"h>Q_)[Yi"l$_sq8=ls,Mf%,@6hQ6L'4qq5L=Ol:nl-FiB<>tkT<cZ2/R`"p.LsUrU'K@bUn"_-<h\-']3^"=3]I*j
%1b:s,_eARRg)bJ->'h-eb0>Rf2_;;j:R5?nQ$ItK:9e0<Kn45A?U>P2:'0JK%>o0E'm`?OZ7L22*EZjgamu"XTU;QMkhT(FmrRhS
%enNe>`Y)ln9ti@(PMQI4)M0LaKO^Mo6E?Y%fM@cj`X>8Y;9Q-1`5NT#E<oOrO!ZG:FI*^$W80;:f/0WWDbu.cF[S[%gZcZtHrBM+
%L>*3TnJdF__oiNK*=lpq%SeBmAAe7-H+>8om$"[o2Rb5F$Q,#-_qa&#H+^IDHbT2MNjV_e<oR%g42+:S<390g]VrS2Qk3^"%1m<:
%4(.#?dM:^fWt6W&nLTDd'Kn42aUHlOXehD,J8t'bm25%5"-@9`Hp2DdgY8WP,TlH,;m^IdJ(&L6.8Ja2_j@TFj/i=hK?g.3coYp)
%'W.'N&l*%\OH67\qqP0^XPMI$C*9[/mGX?%<0+NIjcLbEZF7cin^4[S2J8h]MHA?3)H9^kdbU(M.[(^m6M-i0L>9;I]:8r5k+m=%
%m;:Ic+JnIoPIgF9:N!]bm=DpHgLW'ZIN_6^#"FgheK'2"e%32^TcBq)mdmZgb%_44SZoLPTNAb_NRrk-"AtFIXf>TJ<U\L<^!t\n
%Dc)PJA@/k[R6\HM*(h$ma947PJbkAT%IH0(b+%tO[+)<MlkknBCMkUQpBj9tCCK:U`F^G,Ed4`A=*VHZ@)DECp23n*Zl5TPm"Dd[
%A#Lc1>9FE_nZ\.[^0-AmY)VMq]"IgN?+1S2//-O$>SYZ?H5YC$neo%Z'P5LCG,eB1W][<G*3h_-=NmD=_VA9OET++0FYb;Ad1'71
%P/MErB^TPb9qo29HCUWb;B48*@8S?5oG)trB]-([.FXVX4q0t]%'e[!n*:tqMDsf@C_PML*3:6`gat%`/:SmhMJMdB3Gs[ZA'oB8
%<&`MH4#70dPVeOf@UrLU8_M6l"+4'N.S!%]&#!E;*u8AL[M\G#Yu4bA=^Rg/:L!<`]VNrojnS,I?b>\JSA)j25.p<&gX3Mh-fMGX
%c_Lf4)e6Q?GHrsCnpmLDT(FXl<P!#tk:eVAOK4PEa=pIU#_*\.g`#"e$,gL8K@//$.8>bm61+uQ`r[tk6.=P)EL7\6YoCI4TRNd+
%@2iSo\VEOI^BXaC>&BhV_<BQ9e`4f:Fs"4p^%Ki%NjRa*XT?9fcn!SS0&%oL/kh&W6&3g9)bnaO318/[5+;J2AZp"JTs,@Ge6)V%
%_^hp1=LI,LOlkN+[`62S=gMZt-b6/r,mV2qhP?'nT+@VQa\7DD?T(_XAG=oPFDK9SNt7pti)a\kH?^/,CQik<7\uqdi/Zn#C/%F&
%"b'mhd]Qc)[s'?^GJs2IJ^rm84.\ciH\$=_o3gCkID`Y`Gj_a=laBb"/<p90V8,tXDuc.)45-%p=Xen#1[-/?ZZ>bR<%3oDc9B">
%;BXKg,s>AenYo;r5#qKH>,f:Q7^Mu#T,H%c8E\.r\5GMmOk9\\hAXPj&>%Z(esjnJSoNGcL@1J>WD[N@9>pkmY(:*mjptoAVR=d8
%2;]-IDo]i".)))>UlXZh4$T-SB6MeW[=eJqG0LH&'J'A(@7\noP3YM3Y*R4f%C+dNftnLYY8,#l.uO.>"I-V]41RP'Z1ObA]dUo4
%<a'fHQ<og9#qdgC-qc59dYkD!R$J$,&n+rf9M7%]6gR7P"X(jmc\R@f!J;4(?;eTRJ1OdfX\u5:8*rJh3lQ9LBSt.T=+M"c]%qMO
%#ht-[%TSS3ouc/_;IU@fjeU-u+fi`pP1LU?Dfa)iqm,'\q#UZ>%;=qmZ.u&nID'7a>ce`p&4aS^(+;VN@4YarUbccCU8Ftm;TB9c
%\'M(eP7g]"79c`PK$`V:h5:+B79E;8V6LHCY:mOKa0u/R]?pEUE8<PLR%$B$"SZAN:ANf.Hpp-cFY;WS(3NuHK$$gi_r^T-&P#3J
%ObDZTh=o$MqdRL@?UG2@ogaF;Q"iu<g8#mYlRG:?A7.D3SG8c=:`eeD01)j#6W'[k>E+?j0@Aas$e("C?HT0\-AelWa.)<.VjiFZ
%BoSa"AT=uO/b'DV-7T0V-9)f^@X+ju/YCppNMdL4(3QPZEB+<O+)4J:<!=7i(Y^)18Cf9LUWm4f/_!F+)F:`O2:PJmX>*7TZ)]*X
%;9>XD+rSD6GXGe>UDZ5@[6J9j9:V$CCLJ;G3?pee@=3u^,(s0cI'GJB<HaD510[8F]5E7#fkIRk/UgR3G&8_sQ;dCZF%VE$^Ii02
%b&@sc+$Og#1ID%C.l#6EWr3Q/gV&W&/Z'tNI`)P!2RS#"XPC,$f,)UqR5[V(O@3,k45fg.C[l0l=@PA@+*ClA=?GZHds3"cWsW'j
%C$aX/[H/+l8Zs_kYYg#rfr11V.1GEg+J716j->"ZK\>E:H08rb=o!o@`U8,mc,68*QEdS+)bjUPEIbXhPc]:B*PBXe^5Ga-kSbp,
%=7f*;C8jYoqo8?T,0JIA;-(uFCRp`q2n&-72h!OB`n26LC#!N^=?h(\@AY3UK;4g4f_@,#:9'(*>hiYHiHdDKmq&j\XDb`WfTeW2
%To"(RK0%kr@cQ7hjs5o?.SP/KQgJTg<mTp&/a\&g*89(N$lq9=.$7_umFY(-b^t.oM?(LA->5ED@q,s=!rsf/ToghjZ3:dMI9,H8
%Ep>0$.m[eRol)O0cNkG4&^&6CQ[%--k)Ch@W7IF].Z!q*eVUO%q\g2;hiTf-"<lBYNEo=-oK]E#N,?&)n?g3blKL-1>YZJQUn$=7
%,Y$WH>?W11JU4u/:%3_tnH=Q>SDd:e`)-`&78T9"[GqR@**kXtqK=t=&GCBL]_-N$h.slL'NNdjU3]#2M]#(4o*O=24$@WLq,El9
%B\N:C:`ccnr#(r'oM.QAPic]G[ob_aEn*f*(]j)MCT,fRSs03fg_q[7I)<.u2F`RGKF'4"H#d>27oLhZ:"r89Fu5JHL,MEoc?_;j
%51N_UYoZVN&Z3![ld8](C2@8!J@@]-GKsN!4@=NKW9__I]gF"*#uj!dd8-6W)`qo+ah8N2VJA\#nbC6m[^K:<W0:&:Sh@*Ml^L*J
%odPWBkM";dQ((:ZZGAse]=Lb1bko,gD@c'D[eSA4.3U\&Ni1BeVgoPS)R6<_;m@*"-"Gh7#,gKhF[,G]G(q[d%Z\#p-#]qm*C?=o
%6G]p'E9t!HIA,S$-o`8$'H@Jaa$RVIHF-LfCn8LO+k*qtE#_39EM;;m-ocZs'HD&Qh\[p.0I]-.lge\(nhm?[H^fD)T3K1Z?!1Yl
%ehD2KSp;7koh^@F_;Bh.A',9YbTsDQCgKUMkr!X?\)$Mp/b]p%M#4;c[t@lr-f:h/QTn]<:GGOtqs9K,m^(ER09ch`!Mt9!2cqIE
%-F[:'gm9ejV9Jn3QamXSVGWcY.,*a[_C]?e6b)@db1sW!f%;$b]$E-Us/VKs2adapG9hlCDnZ;_i@SX/GCStF1A;fM>mF9[m!-5<
%aO@bd\W7t2G'i:a<9?B%4RK8p]u?RTPe$\%AaYb-I"/u13%kX"[KN6!H,1l?/bh1"Z(&S-m>kN`4r*,D(kYV>=6/eX'tLrQaF,LX
%^ZQg83tO$/YN)1B($/\]K8WRM+C,ag(NKt0?ld9k%pP@Z#Xg]XX[DC#c7tJD77Q)S38#UMJ.Z",n+&OQg9080I-;-NM2R4mjc_$5
%H/gfMc90V?Dr]$3]]Mu"=d-H]bnQ56=hEb\'XbUbH+SI0Gb,A`B+=[O==i<HKKL\bPk&tb""gq8P^AhP$#JqirMRjA[WQekEC^U]
%_mIr:Il>A.fOWT7JqBM1O\bD[p3bYV+/.EP08JFV;.AClT27u/p%K(8@T,J(s5a"NVuf[uJ(?kl[?Y-?4->F=QIj\W%b>H_qrqtK
%TAH"/fpBahNS,+nQe#f;pCS3X;a.npg@M"flkm!Qo_a.G(d@As6_)`ZUq@Girb'A4hI^i29_ZK0<eH=rYJmmn(b8hOc>;j@c22GI
%'dk]Q@:QF.0o#43mJ4D#^:ku(hZ$^\-Q[BU1c)E\+&-`ogZ?P[^QRf\IcFEs5!abWd"V'H.>Z.^><-@@AQpHFNWbhQ/dMH"=$mA5
%M,DRLg7D8#XXb?+a2R.92B#dmq<-T0adbGN1\j3@%T5AGb#S_C60$f=:72S[.aOPgM/PM6^=*A)=\Xo10f`,f3Mr$9;\"S"o'%L,
%pFa3*9DI4h&u*\+`4i-eM@@J9NS@i%o?_ffNJ)]MRQKVS:%%l2iaJ!ob1HI6lXJM2:DV9_EP4GMGOM)G;i[u>+r>Ln%C1O)nn+U+
%EaN;_@r#T7r`+R_UYR`3T@-,Q=rbn7,_%_nWHjY2qu5-mfT]2"5<Kim.lfJbk=0,C7_aC&3An-IIjI+?\&]rkDia=tH=4=@g.oo*
%E9lCWc&7$f*E;W>;ndFEd=V\V\*9*qZ:Gp1maB+^i]_*[CriOK+3plcO7Bs=G]Z0iTHE!)"+spuH#r4meTdH-hsr\SFV3[1Mi-;.
%^(JtNfFsbF$*D7S*VZ2o#.E,W2^7?'75>go6-Sak\_G3<Dn5mmASb$!Dip)-2Rr/FACk0[FATaBWZmLLgO6LWrVu!J9B(Hc+4531
%e]"#EB<2&Rrr%Fc2nA==oO!d\UH:"urs+ta?a/o5CqBl*DS`bcYjEJ`fQIcWmD!&`/SY5P^pY2ek.3F.[k<d8cqB_lAk9q#,K6X#
%9Z2Q'CoZ'HD^/(1e"G^?leIY3!G#(g,E14g$hSPoI[c00cd8n#=X2#tf60D%Wg;*RMoPj#%[>6(!*nNpV!40!n+Yn/qt7I+?;md8
%)G6DrN%@JV,:FS?1](XOF;<[<rBSNUh8A^IZ^SJ)pR8H_0%m3X0e1jX4*-M$aRR]'ROdl#"Fc[JWi"8oL.rD"A,GUBS4Vr+SQh\_
%r)C'lm!F!e+MBI`<jY9#MUg:2C[]j8\a1/:@_AhP'nNKW;;A4Ao6-#q4+$@J>]_!ZrdY49oL!eqILZl.3Fcif%d%2Fi>i_E6R8jn
%B]b;HbdaqFO:(:Lc/fZ3F<a)YF*?Jf/o!o:]tnp#quis6g"#T'0pV1YM3AFpeQr5)#N=a-NTK9#ZX(OtWp!FGd1VPOnd`Y'cl@)1
%"4o;lG8_IGIFT6IopIGtn`$X%]TqMDNu*<MV01bheX@IYZ`So,b.CkY=>I>!mb4buf4)U0FN(=<@+]Wo5@\%b7P&^1+K2YgcBf+Z
%GB([B\6!@>0Ji1qABpaNL&/H-o%YI1Ri?`R5<aAtq-$W)5XsRA&WR_q.m[jrfB)3'Zu4n^e,"mFf,9_V#+?i0k[^2GBV']N6Y-K[
%U@u<8A0[+efE5+u(Nh74Kd.c-Ze..;2opn+VLX>J0bHKiF^-SZoY=O,L$X^aDN2JWAa7.B?J47_m:f:cqTcN_fNtU'b3+_!_Wct9
%Gto+>P:0s&?Jphj\(WlW:YU96i:`W$.aEtjq6[/bar0J=;b?(h>#=:"lKST(1aZ>HH^gnLa]jhfAR/M=.I=*)E^_4l$<^Ce;E9!E
%*sZ8%eOW-$oF7`8]_#K`-nX:b,Hb)/it5-j(J\>>ac!`i!hG4\7[]#7U@A#jCQg+:3Sounk%MjVNA=#MY'sOe7n_iT8K9==UXa92
%EFcM#MjeL>,I8V7</]1b+`SdI_j85<Hp?G]mPoL$j#l18GMg'f4.c=bnSVDBq0-`nbr[[NAm;l\E;Rs$BcLnhk/bfl*)5SchD7[,
%AoMo9Ij'I):dh6"S2b&>\C0$>l/'iAMAC-P*4^N_3P,*/T?M_dA<&\[qe(T*Qd!j*A<-#bb`RlXk%MjVrOSDleu#sC3GS,m$rM#2
%\s,,6>oI:7E]FUgjN&;i,LGL8CT4(gpR.:-l<T$&.uLocOWCEr+k'@JrA`89>NQ2Z$>J7;i)NV5obht#Em*:+2[XFccqd&SS$g)5
%6WnadEULL_i!29E>EmR'>URtrUo/I_/>4]INM>p'KP>15%WYYSTnY"]ZN>^Wh@@(6_V-6]O(?/WqTc?Udm6!a4-5]9]M\<lVML,%
%QIJs94;=q8N,Do\ICCQ$Pp9oSDVJeM0M2D5\7ON/L&,F5*!s^`[2?NXT0i\N6'i*a2F9,]G$OBro*^![lG*#;:ZgH#U&ME%\oa",
%rh7)?)X8F*CE\+N5^B-b';k(De8N"WO<`8Y$mkR1Q.'I$.'OrI:TalgVs"+Aq6HUJ]efp<16)!^<lT&o=.:mtpl(WiCpa4BM9eXX
%_1MB'SIT[fe*(qdFM8r`^i4)joua2PkkNX'`j'"V%L*tn&R2>$HD>J.kF8#L[gS"^r46kDDG?/D1sJJ"D;Qke9!T?F=IZ]E1qeR>
%.1#_G2h/NPr8RSNnts(oUIQeH`-V>7++E_2=8]NYs7XFNS+>I/J,A,7nim!0UJILhI=&DKErG.nMq)00/l02G]3]o7rVZ$YpUC+]
%9)eMJai25E;<4oeS=f)CIk.;lGi_u0DB?!qKWFY5k-[Y8Q[;DU;3pb,IPSSrXBs"3atNa9EH6-d&,pbFk4HX45Kc2r^UWt"UZ&:j
%]ir.EguItsbOX7$P99bbc,IqQ=]]7>5Q:WHZ$qGul)#Q]*C&bkop`EBS/p(4oeHH7r&_VGs%iXoE3+8%T::%P^0?*"/,pJO]_cgm
%^9[>)DA=O[\,=SLH$nQ1Yq>%i@28R]T)\OK#JPVQ]mcY*_".Nnq@VRqeb8QPjXg5mk3%Z/f,oJ2nc-56qWX/m_kHYKPDbXR+4pg!
%hY"k4moLV2[908%_B482:7iWSg8,lUeX4INc7d=hkHCMl3'"`YaX&/1]c8nUboaCom&M'fo^+kiEq9))FSr)<bNEfhDg#Dn%ZJrY
%?^tBYm!@fa='^=<gHRMRmc`gUNA'@8\Erb-H-t"]bNCDmT@Nc9BZp6SIJgSGRg]5%jfL1"^]*N\qW\=],%H7uI&O*80@*Csb#.dN
%s4ZcF?]N^\n("<1ps3LPI<kNl\U;%1<k"(Tj72D=IBr]??geLZ_"FYH6U!SYFa!TYp#h[2s7GDUGu@d0J%O^TL&,h^SX8kfp>m*c
%=8qrXlZ:bfdsn+o.AqsR"s;$9kcuaHi(LWm`G:_Y@keoCrt'KQ%sEbZ>PJn<aEd(n^A`4U_AYh\`>E4DH7`uN1q`AKB4Z6N=d@P3
%dHJREVNVn<CR:TKn\9NqEUpI6FY[fVAi:uYD&RRk;uQO35P+%)f@.?]ZJqT^9t/IF5'V*FIWEWgH0a2^R!0C]=`Ms_QMKB@+>B8C
%i@_`Lrp:rXc1KS\gj/)M=HYS?N/W!L>_%;0hLkdmEUGA-YfcOZ(?(S(5J1i-L2u0q>ER[Tp:Vs!cbKAFp"9dj_AA[Ko%u&PhU!X[
%\pf&#ca3"REH6h#+27[epppi>?C\dk=@maQ;jC^<p\O%HqK9=lrql9KeK)*6EYR<`;./;I;6[&i2?*3UD,cN!A.oa/I\3V\Kg3<O
%<E/iYW@dJ<?S_Trd.mM(ZTnG6G5:t*kH['ej'cZYXXF[G@L45XCq#(TMrPq`q.L$,(ZMNkfkp2`hj'=iL%4"9LA?7?EfXj=K\>D#
%=(C_J^MpdQ&,[rIrpTAUQf%`2T4b'?n1sQq]Z$20a.)Nn^:h,Sk0IBTDS5#]nPnq\/DnjepdK1mqqeSip5Z7jjS-of*!19_3SJZV
%[<hL@g\Vd:iEpLIMG%\nhtQV7;)JDF[dOkp$p![p3L9]#PC55Mq]9A/2lNk:28;8g4@*M%p$)Lh3B:?@[013)g,"6)6/(,iNZm'm
%%2_gM[2rQ:$L,VuSZ#CZ+1qGOkM:m3EF31\GE9kCjIKj4;@!QIapOC+eii_tle/o"Q^-4BpTajM@kh(0V(FFS6dtZ4&qg/_fmD&R
%Ao_D_oR>Z[g&HTE?u0#?V&!ISM4AVk-bs,+j"S),+7='^<@)eB-I:@hc^EV$1X@au=fkN#>UB&m`V=rCYQ'VK(rkWdj0/K4-]CmG
%iMl/SM1iJ`I:)mpl2U")jM/O`59L3@r)\[.s"3ab]`/28s4OX&&QjV16^_,e1:0tGPN0t-o_Dkdhh76&E/"N/rcKtrJ_,W6mW9>;
%O$<l#_B\.19htt_akULN?fes!+!O*fhkQ>YmL*G?h7qq-48;@uE/&;>_fuR/=:d----,1^&cX"fnWaCL$l*)6&I"V681'3K]YY3+
%_$.Qdqf@/+rt'Q+4HDoc2FXg;[KmI1%%a8q>4C5pi#b4GYJ7l.TCi.N0V\)^1!g'T-4'.X5^K*pKZDK"6?MJ<i]nYRoWL['0/B't
%(U4fjTh+,<bes<N]o^e"eNZeOImHp28ojbEKLj(sP6^dL6jUWD<jMW28:g[<V1jC./H>kPbt-fCKbFAaPnZH)/,u%6P5i+I+1[)l
%!&&G0Sa1`[n?Dc;XS!Q"kKXT+iMefSRQ`r!DZ=G/rkgV"Yb#>8Uf1o6%<N47?SD/E6i6jJgKpRSl#\Cu+a_0m1@rW2rmSp>;hTk2
%h[t3f5Q(1-H_lcW20o%#m8Urps3LoQp-`2ikG0ha#E&#lHE@ZX1IDD4E\rHIn2;h4YC,hVLVh,(eG?gUX5TnEmK(9A?5j](3m_uV
%<N4KCQ9G[=@gu]2j-so'[79Pis![N.#D"#L)N8$L7:m&l;0r^D7.%NsT!E'WjTusPVQ]rAiLs0<'V\*b$LjX*4?a:!2WE2)*K\S9
%n,O:#,/+Bu((2g8d3Kt.SE^2mY:4)%ctWokS4ZAfLIMfX"[]#+]QG#\i-86Dq8EA<qCn/MWse-k3:$PtM%3tH0o%WfVK`(]$e;_I
%g));G0Y$kc6Y;P$Tje\_9F!W^fP8QR"!-C]S<iT\`&(1G:`aI9Ne%3>r%Y:0@'oc:QT.J>J"]ZADj!Ek55D^5D\ELpB7[`X*5"Q/
%CJ\@E-@cTCc?u-(:,nI.9lGXYOs4dj&=`pDFbWXI_=/Nj.`,iJ)+X$"6D*K/GS"OqL=<uNO1cq]JWn&%^@.!-:2i5G(Ea,GMKXM!
%91DD/79<g1.iTZB;!%L"U)N:T>4Kb2PS/BQY*<l51g1&8OQ$iuEZ6<T<[#:uMb)Ht:O@X/R]!OZZ&t3@(7&dmm;,?i!:oJ1IctQf
%NQ2UJ^1_]b#+h(Em=`=K&qLARdG/+GHob0FQ&"g-+S3b)FJWacUHX5IkRk"1:\d.3d>E!4p++9DI"N)hLN#n]Kj)WB4UE".PHhj9
%!gj\,Y-A?=H-!P6+@b>&rWna75<4,!<JpU`-ee'd%*1kZIa1[tYE3mYf-agV+[4YCZm:TOj1NECJX-=V^X!YO:EQ"!&ilW2(@@S$
%0KDfS#^Y\>RBNHh$M!@s.:/-R#uFfn!"r<DXY:\[M=rluSq<O[X]'t\,Ope4<S*aa9hN'B"iV)q9?#aTXq33:j1'].!i63p!pNRd
%mn:i0^2N1H!YQZ\#oo?l.=3fa,@i'.6FQBFCLMj7K"\:OGhK%&imak:*YVRhiEa>N(m%Rfo^hHV73&3m3R))qirmA?8Ll-AAkLdB
%!ubm;>sSu"kTV^`1K`@G$J01lA.'Mcd2be4@F/tZoK]9]T7I`"rReLKN+<>-d:rF\WR5%&*aTJH,?2mLiio^*UT`X)`f]*hZn\*D
%e0B18NO]hEf^1N0P?'`?)eJLPId$#T6R3Z`F7^X$"?m-3$+ie;npuBAfEiMVOV5&9Drln!LR^^7U=R8Pd#a*,T1fFR,J"&>NM`a=
%5QN#n.$"W_;KJN=&-HYWA-/bkgutE7A$%k1qic,![)*bIWS!(GX,TLm$/H)2/&Y`.!R@&l>PW\L<>Gse=-oZ\"bh%]`^iEcnimKT
%9&@<eVucr2^*5c+a]cN.BgnZ1HalU3Z;A7=AF_1)#AGIq/qDsJ@F#:KSWVJ1GctVrD<[IlV4\D%+9\uh?nmTu5?(r5eC[Oh$n*dW
%?%(.!i/N,+ia$joks\G#L0IRM[I,7@e6J$ZfUKQAg*I-"cU<<ndmW@;26CEs`E5?FU70?*L<f,*Z9_Gl*;<8\2=MCG;h=Zj&gfHA
%-_phkaen(VKNZB<Se]q]A&>Jn8KG+*b=.TU4u6`On34bhUE&?&j+2)K$K]FW;.D!^L+BcketW/H]+5u%k]X/a!_7*>BX_!?5?,Aa
%n4duYeK6i@&2jG/q(btsU.FV!1gkA9)o+\6V\HgMLYe+<CiV-:T>1=98kRl$N`=E(Wg/]u\6fR+L.!1t<q,$/K;_,(8,n:?(TMnr
%V&oX.HLcc`@g[\CE?ZUa:/iXQWt#dbDI.6G\8F0D!ufe&:QcTtM>2K10k;X,*^GO4_%Rq"b36S@`JT.Bbk.\3)!T7.+h18)73=WG
%Pc]fQ-hm=%fJb/i7\0tbmI;!K'=%dl]rY$H^0jupJ`J$H6q.+b.L'7m<B$L)U]nQnYne^kY?"\N7;7oD+2U4L<FM^#F\_u;fdRQ(
%$l28%$03I?3Cl>"oNt-@Sg4c)neD)sr0'AaP!L4S4K&2n\&k/9$"ro(6_peHE`8(,H-_*Eb75d1STWmh=XV+8^b2.%*rLNKP*$n2
%EMqc6Dl5lqPCWs^Y1DD)!DZ5^Tu!jW=-E1nh"\T%[#\pRHWu(\^(Thk+e2k^1R.6g)Kc:+,&5N!*p%h4$2RP#Ob2O[$6%q>gje?E
%7b:QIGWqha86Za&E%f[umR/e"5B]iM<jga$#^(Pl%e8MoR(pAMctMpYhtpN?*UA3"^XD&p;6[,$#O@UYXiB7Q[OV#.qVG_WKAq+G
%UfsqJL[Auk>,%Vrh)7muahplK8Ut"'+1;>AT*AW1&q.[*d6j0cX7SCEmW(EKNA$UYd%+s:TYGe#=6L@^cG:'"Y8\I;N=t/cHY]NV
%Y'fg3r6XN^?YX^sO=533X_JF`&`2\0$TKU5YBKMq7d4\iHE>]?X\/Q:]nkXnpnuTQk\tRThS/rjct^o$<@IUNrN1TI1tNRoBReGA
%CTG<f&Vn5h1]L%F.TYkH=>p$_V?!HJQ-Kluj9Oo6Da*cj=DYZJs(ps&$`u9Yc^"'^()]%/Psk/g,D(?'LnF'W's@i?&SM#PGQ5uJ
%s,RPA\_hig(9m1uK?/&'V/EooGki#/^OI\hcF"%IHUAe\K')6\qS0j*0VL_cI/^HS\UFLe56634)bBNX?8)7!ZhHc$0Us)8kJKJh
%p-4#5kM].is4>GW^;Nj!q0#njX-W!Xkk@_k/cQO.'D1QA?[]Q!a,7J9p\XW;:&bn89]18S3C[\s>N+Ih-B%jKl\[;Fq/ed=7L)Tr
%oXK*L<UagS[(Q,DrFr>?&snB5DQ?aY@.E-H_lNiTpSXD!9;PQ8K>$pc-=d&>ac)Hid,[\Rf@S_?I^r`5=1^+Q#F0J-eog(H;+Kkn
%@-/je"6NOk8V`m!Q$T8a[+D>9.K)HnQMJ3=h!8Qc]@)-J3[h?sPudR%.XC:u-^9MF^a$JI::&^NmNEp(078"'_6$'&Tj)c?%.,p@
%h.F_g+2!WY13K9kD>2A1qCOY,a\XKJ:oR<-3Df?a]@dHE.3c=Z/<n=r)nm$?cb3UTY7IJASOU!/&:M^A[nVT-1IHjsVq<E)b!Rk+
%UG]uE>*50MD:;sT7XQh6n9J5%oO,!uK2]dUbsE*;\QsXJed?ihs0fi%4P?XWhN%nG)3X/Z'm@7:WPC8='Us@mWNj'1X&*^n$c#H4
%J%u\sAXM]M5@/CQIQj1:F1kFsD?)CTZl0MsI>diK>dAp@M-X<"<JHM`J+!g-bLK@]=KPRb^%\@2VEaE.,jK3>r`c(EfNVLs/t#n>
%;F^>!dO,R".s+g-NFJT):hb)gmG?.5E[J1&Yc>O!P\i:HkuOXBmC$1]\M-"a;5;f/`o)m_BRtR1F,%&,s6m6(I860&YhAI\&/di>
%Q/=(!GLXP*m3+/f(9tO.."AUHC?Rho9ndnk3X#Brg7Rp8)c_2dWN?mrJFos5WDGsEetrWn/)I5t3[S%^Es$:VIm69/'8QQp^0]]E
%J^!Tm,sr[qNDMGfRIlYKT/;!lYHN%`[?*.=.P9FYq"4`0ql'*EeZ4HBnUkMMp7S<qKar7b]6A.,9CmZ%o]Y7l`^kX_D0=ajGl">c
%,&*D=%A!_u!TGZ[9CGQU2p[_'eL%s\ZW?l`8<jE^Du6"oRN\.XI]KiER!ACj#%4@'*!H0rCYpXq>F'/ZAo%-I68Xb(mhKHLl0DX6
%p)?`Ip^i8ZeaR[$TjDoBnOmG,TA%/Q9=O7d,WX^s_h#)F:k%m&Nt5hEqoNN$=SE:\.4RRCc89QS:U9_5-S7H=>G$%BIk\,"hch\^
%_cN/Hi1+cNT1g_t5M5#a>E\R6c?e+4g/3onqtYfs=LCA?@Mp?\)'bNBHD=!K6e/brCMXq?_r"27DVr)%ooEsZHo:\l,,>_+0BYF>
%%o'"UT(b#;e0lZ%e]pegR<+I[+r]fdhgBZo:)6]T2"'greklbhn>GY\$E`Lb]CtTDkmVamD-)7F8QiIYZc9e%m:?+!:p./TIJa&Y
%pN@0.$6$;WQMI]Bhj_us%U7NK'Dils[ggtWKRZ."^%+F4/G4>cE![pBU\g7h=@0\gRA-:/q.Kd>ml!!H\Ml*uDb9>k;1VBt:[^CA
%^uY/)]jf_shm&*3'@K.dhp%mMq=YnSh<KpQI'i#0ohMetHPs&0^7.E<T:]Se*?>=[U/?X$LfaRjkYeIO7,_)q1m>\&f3]1j6FD:"
%ph>LlaGs"UI^\ZbjW7u3Iu(;+"5^GofqA6-pPU]4^8E?qq=fMnh!<l-DI74%:C((om#-u<6hD_;LTd,E`_cXK6;e(7^7F!]+!S#D
%8e/cNIH)]#?]ahqj*kfo.&rq7fp9m12+_Im2rmUO[Q?@uXP*N7(pUj@$P6H*(Oji=a5$UQD/"3`,fK_;7@ISH">iT'UG-@DI+#=J
%Cfc'<-i2Ec)>2LZhi]KMVo;!g9;,O87gu"KlR.>,>id%%YWPn_a&&oBqPQ4D#tr'dIGlTM9>eO$U]FKp`H3#?@H@0`)eeu*)>OK_
%o`=+Cj..bZ^1,u'.iFar79^l3A`HT>JD^6hZGrboMW."Fd:f4<;!<:DP@.#pX3J[SlhAaCqF&Kuq<9!oKGprJ/[iEW"'3T&>PF-R
%QV2.[>OD/Wl/OoTGJE&PPUK9hogHsc_?\d;AnugAs';h<\Wtb?4kk..*Co4G6`64///@KqDE!HGYWa:(i9FL"D"4("BbSb[Ei!&i
%W:t617q*!5>5E>Ls"F8FQA)cTm!mHlnW!Mo-De6/QO(P/qR>NqCE6!W>q4>R4`fU]];,&GDo@%[..$1C)].7jHe.@1IlF^;/192P
%=Y#2<5O)kNNPPJ;Y-aacl4I7o@bu#_WV+QBs3RG^edS<,mB?8Dg(ruH``FphoTBVM3/u3nV=iAJH;.$cs*4NpY+[04>;ZacI5/P=
%_rR"iqrI-T)iki>kHfDJ9I4qHIE&ELg[@,;U9e&Won&#QG`4A-FP(Q20;chIH0nsl:;2]lIECc^=r?`-:,K=C41*_,#/-u3B3g#9
%,>,R7k;tEMI]bRp\(71d'd2_(\5P*=ZjbRAhg06K2B'PWE,WJIPq\ME3"UiC8HoZsr\Em7=VPUiW$o9^<G6U)DGf`1+&^,!po2i:
%CMco?V:L(\oo$M'm7O$P3c@j)?@O$5Rdi>hMfJr=6B'/U^#/8A]og%\YlEPOiT`2KE+S:Om.u%dk?rFD]"VWI0("[+`YVBK'D$pa
%R11mbS&d.i<aQp2*pU"iQ.X=A7(-8i[R\m<>$d34/K_/KDTeleXfI<Gj]8jd=7U`#(h6I(G[<K+P^Aef7[N:VP1.S^1X5W6H]udm
%0['&lYu]LlUQ]t*gYZ1@OHm_"276Q/-'JuQn&F'2T>Q1?[k]k>0310FVsB;S8Bdl:)I)V$qI/PA^8ON4.lfV9RX(o-i2c-apYJC0
%_qmkj\^r5+QWNFHD"?ZY;>]+m>q[inY?Wa,[?E96grrlEATG2+&&Ssm<pjjL]=Ih);k9m>f?WOH1QS*nUV:+<(qCU3Q.X[Ro"rhn
%WU0s<h9Ok>gbds<phOc\]H56AJu@#g@:H$M-ZN08G@;?[1`7t.9E+p$p/0\l0;QY,GW`;gEu/3/:)pHJ/)BI/PDt^Fq,43]N1[-?
%r;G3A*L_8["l62=hT]&=2ThHAf[<0^'u0%2[gpGcE<0"]o,E_lL/IOif?<E)C#UG1g7Fqe03>-Qf!FajO`$H8=o<Q*79u4")sn<S
%S=Z\C;rO#)WnH&,Cbja?9dXI%R@;uZZ"l>V)I(Li08uF`B8hn\No\bEe]=K12K%L^-frN3?6$MQIM_<[YbX]F4bDF/WD:um*Ds53
%H(In?8"_6k/WX1uD!,C<$f`bBpdGRG;>A$<og2A\(p>p30'Q#VEFlt7=uacFg@j3fr1357TC[2ui%m%#\<roI\YY(Glf^150OK:_
%\Y7i<AdnY*B)HTbBU.8,VJt@\!h2k(@&o/1QljN4D@,.08pa.0$h[Ik+6B*R\bk()f6j8G0q(tYj8F\>h!JSIkcrW/mu<XAdmmXc
%$)I7eq$9)^^;ur&/Ti9h=lLHpeski/Da>u.=pm:V]TKfjba/X4cu3>B^,RltC3Ku2L10Y^/:NbEB,`AEXk)O;SD-55U0S-(C.lAQ
%:=$j7%<M+VRtFB&7t$1C]=HQ/$o8u$FXL7224!bjr&OPYl;_[kMlPE3Sj2KKViN_sh=oQLZ^ZBA%sS&T'gpUcb-]c22>n:jh#gSY
%R2g-?AKTI=7D@t;9]mn-er3\`9?fs_Yo&>EZ*g%7h-`Wl$]2J1AD,4<DZ*-CS.r3>)B?K*Co2Dp1>=>4qi/C$S&Oqj[et/@P4XBT
%=O#>plEo0Rl>3:L12BB)WAg#k@:1.Ah;%;e=9Z^u?U/$E]_f7g`r#SGD-)<b1S*(YE7('J]\IdbPPOlpj$$[a<u$S;`8r&4)HgG5
%X_YX+2uWk@I5$@C[N/.\>\o(g5$WY4'Cb>?f(<_?[eu:P]\CNP<`>24[Y+I623gAZDEKJB*3C#Xo"k;C%'pN>nlHDmRe`Ak%UU)T
%F(_`I?'?p)^Q+'o&>R_^<_SQ]:2GK_9MM;nC<c#BG5HtN&;:cq+$<:Ge!oNUFVpuOU5'1qQ]Le6DKb@=L^g;El1*PWHK&O%,oj"f
%gePg0Bd"ULlP3eZ^\HsCO9Df(o75ufH[Ha]l=qP.F&Ya4,54la`Qq$6M^]t9fC\%GE]mX/m[%p50l1lpgY?%,X=WH2.Jf<1o.XIZ
%m>n]Ba"k%308]RKfjdu%/6/V0nk!h%n#^FKYi<oI>)^Kko6b<F-HfGr>KceU&La3H]Lm0]M9S_+QQk'+$o@[?D+ZM[RR%7JV'kN.
%3o&`lphPa.O%.27/7Z:a0-jT*T?&&BgP]YbRk14c`qB\[7:To5eP<:m3t)TYfZ/"hrPduWH"qr[fqURT,]GWf;;+bL=)-?Gdm=0X
%+`*`rlO?40]YtLYqP-pPCPXh6no,/6o[#`"8deee@FI-Sfi^_o+6N;B,TIFhUL=r7=4>p?`@pu[a.)U2-X`<#RpdC*I.]OuKb16g
%0p88RotF=*dEnr-8\d$4)nPeViI/6gG1-"3>*g8;pXN-pLZIt-g;(^4dCOYrns4=PC-KU<b-%!h.)\ZV[q]`lq[m/lYUg1rTeZ4P
%V%Hnn#5_L@S5-Ne/H,EWe8T>P%+n'/"'`Ci,@5,Da@Lfr1@rm-pED>$8_'qTKlBW^rY41:PPC;S#jY"_Ls)ag`K-f</M?&15=UU=
%-Oshud0MSP!u8&>?2A*@+BkgH-cp]Hk>/rD6BeRM&+1Mt_;O*b^<n%eUQ`t!atdJQ0[/h7l7J[JT2^4S96Yl%@HFq=1qc$?mDXC3
%$9au-85(U<bA&u*fo%DCQVZA0e[bQRgA8bJ8rWJf(/nFOgfreD[!01/a^^an9)>2EQ-GV!McZSL&(Z%f>L-Ym+f2"]$o>B1E`LJX
%-`MZ*]TM<>M94:qI&BhJ)`^I6^\K`cWtj(Jo^[;\[ulQ-^2`3*I-LDKXfl?f8:,feg#M"Q*50'hCS14<1<##RANG>1R;Rci8dB\\
%H-5:pa(%sqn9gjlnbM2"U]/dj245Ed<qX5GUkW=7=Oj*:9oH>1nN8kJcX?ddN9B[%j9W?,FgO$f>l!LWcL(cqT[#UTRbh;k9pIYa
%Gf$sUf\?GAg&%bHLO8Vg3.!m_oO+'-fh:u(`Lf14"/oD8b&(b?"Am3>Of70t9</^orC?tlqljnGi1`=hQ$mo$[iOjCnC'<P1!c+Z
%^L&%l*SGMpIQ[>jp])9?oE[YP3VoVa[oPTT\ImcKAuaP)b:L/jCA[FI^R`''WP.$`9$Y30n\s%j6qD#5HPh4MJN%YVB5:00g]!-K
%h`9M:^Ga(prS0!mH!?cW-4$jZs-1:\]qtP:9W`c,p$POt]gi.[EtE04bZ[JZ1EN#GDT>(5\PC#u>i):$r+7/L+eneO40=R@/$N%"
%ZHo621m@h,V3Ac3fZTDS5hG/o0Q=j</>B=.%)2)*%p-qM@+D/YI/,a6BW;FrUU-;daY'cIml,]6Ioq#5G6uOT`1nM5KQ+\35KM3u
%(pj$GoNsa<WjQO4O>9f?3k@pQ,NtD^lfjOsI(amIa373'lTEOjXc:R(hD2%Qo9UI6FMU](h`3eB_P83S)\qX)SsX;(f5n>UTTT1@
%qC$]<S1iY\`8gZWZaEX-YBEr"B($WgPFJUQh#.\#,QF4Ol%kq4G!>S-m5ecRO/qntXsbfU+46'>/D`#j`bbKuq]QngfWM+e^Z8p-
%aBBdsd@.fHSrNVZJo$Ae!P!aC36:#HPKRdu5'e_\b@7\KN&!M#p,K2kXIIu&M9.^Tp9SbunpjR%>[.R:j.Ms(:TOAac:Tp31H3K)
%URdDk_:7VpCMn;abU2#saUC'f!o,&6#@`)8'iXDC%MPkDk+<Z#5UeC#Nqb-8)&8cR6#:1Fl?oeaYJO&XZ[FmMCS.5r&!#XNq)d-n
%i2<LPY,qQ05!&7/'MMU6Wk*-AlZ:Z7ShKJ,V(hgDJ;9#'SsV_^c`N/PmLUpJ$RVbI`huX/4uXd<<0rYd)sr'4WmBS+'d&b):1qE#
%cTOt"p%?4%T)iF:N*;TRDC%sm/<JR72VH7iO!^_gR/SX=.U19Ceb3EhomHR!\%-e&0Jo#]X#)'%7p5HCBRKGkj`Y24#50h>^E7Tn
%RnFfe'?bGY:X=Ic%eiU*YLKm25jVl,3YS]Po6DIfrGF7"2DWk\/^[\QA'oI<oi*R2+`-Pq6h]KtTpQUdfH-\,oYULEflh&,;,_0E
%lCYMj:&NP"]+:?t9Pl[GMe:$:fZD`/?o.8hK(Hktl-I%t;P5CRhU<,"0B/fX1=&;$3.''NJ3^oo"SuD[HYP4I4."i0T$K7jbf332
%YjBT`o)/1N*qYb3]\`rM$.Q8)Zb2r?Qh.8/3/S,T[uis6;omiB*bq?i2O!s+_VlP^$%7I@RY+.(0qu@sDp=nPl:*A)ZdnD;p4W+_
%E_!DGA'[CZAf)f#>QVLekILKeIJs7>`UZ>>eg+I-p\=sRXViCPX'WQfIVCs6rg&I^Kqr1sdsEPF^,]>B?=$`Mk$T#;BCeFgU/\eh
%RkIhf_n\p1LLo<3:05o*gN"SuomHRDPMgH[/Ba&\g/5*&@adH;o1*M3%Zo+(5HR,G2bu6aDu'Hs)7d]Ahp/n$0)@e:X0_g1HauM>
%D59-t$b?=1F)UJ,go@d#o#^#s[223LlqY"(O2]]e@(1pDo'92Q1,.u]2]WU%%m?M*,]KP`gQTJ==FOHGD*_o8N-X`UWse?8B?aY>
%bjBY_gVr^#<,5q)Hst#W?B$d_RiD+JCT/i+h[g62ci(t#HLGnE.Xfr4l8fkZm<eY,BoutA:Z^bQ=+g-RD0\%QCEA)oG4H9qeE!`Z
%cN4n=aJ1O:=Kte],V[;2?nlaMQ5<HF8&,:$JJoQ#*A^KpK`fi1GNeg$-rcc+N3C:=Id]sVpNUO$IF(O@VZ$2`,%\604sCEa_ZOLW
%1(.$U@jNfI]l>nj;A:Y7o_$*oG%k:U0kG#=WBRp%3rl7j"ad2]#P6H63;[5'CfRr)T[ZU4p]G,t8F+1`NSJqC&*Ck0D<a9u7\8*.
%g@[L=Lj!jkeann6LY87m+3N?g:\kpsU^ou$)sR4Qo]sZ:8u_b&Q::*-3JCfq!;"KC;>_?%R4+UYS]pW9XbGQmooW@ED!\M-`[:Wc
%KQK9?m$!ou19*2c>*$M\f^C0P1ImR;8($dK,.G:82N"(q/QZ)b),BWrc^oYlHlPH,M>?i>CbAt.J#pN!cRm>*jbM>'q=u+/>/)OO
%^5&soV?V5_]A+4p_`ZR+-dJDbCEr'd_'T?pW7Z/uVD-FWG*puS/j:5)69I6!q*;bAJ/'Dd;3,#@'\,g)q]tsZ.[\'Y<3Gf1]:\G8
%A8&VN@8>p/1q0_ODa&(EoQ:W1`$9(k_g@UDIQRC@G&92t1>c`;^[8.n.tnE,G-.]NP#HGVEH.C13Z?cA.;@dis7nOaPM^l24E&81
%d<2(snCka0]KMd>=WU;5K:2B`lJ!4(;<"17St'h$$D"LRfN2Em<.(`*Zm9SW]j:N/EU1R-&R(Qgc.0(aULpCsdKg&2oDS#cjlYt?
%>P(t&2]bbkG:0Qb$)JS!bEG,G[0S\n"LW7)^HrRFCI\W_SQu$nF[]nkF#8*+>=jlo/2+)9PAc3/^D[,ISI%Oc-?@15e*m%n:4e;6
%Dl+'1ZfA$cgfu)5?Jb/32C9eQ-ki/P`0rJ1P07;4_:WTH6)WjRq?p\4SKI=cQg;N9:EQKI=!lN,B?T\AZXM3>iYplTVV0:S^b;Cc
%$2oUl$[m-OXeY)PjW8e,]J.gJWiF%il24aW((%6:IYE[6M6+/W1grIRR+/D_c;BQ&9]eC:&'Krde`Q'iU)-Oo/!in!F1a3?Q`2:`
%dH]E(=ZpuDhoYLWR^U>`9sM<NGMR\cWf@CCRZIYn85nf=R7"2u%Tc\s]hSU(7WK=k=lL,lFZc(p(E[s8b<VCQr+.1$^EiYj3NQb5
%SXuVfrL9sTC$0")U=1t"5NGogp!@?CQ_1]ojY*M6N]!R,mM%4lVUnRi$TlVIO=lZ6Amtcsm()BGC^J=?bm^luFu`l'2]d1@HYi<l
%p;7>[[R_HueP%F*]=Cs-KBO:0_.c[.ijrjk&*HUKQ-9!?C#^X$Rt$$$RRT/aF7shemS;bh?k'R7SN>W@I'O[MBPZ_p:$940LpX/,
%Hm;ur;gr>*C9"<"lhg5HJT!(7-\1q]0Cjtki#s=@7A>hGW])^E+>qp&l?0G;"C+rp"DtBYhQ8-iBKA"XS9n$(<;E#DoLWm-=R5(&
%%8JtL5jW,*Qcl$7CY@0Y,CMd:=DHA""a_%ANBS$b384dm)&)gDGIZAuRsM(6JY=^u&D1csUrfYDA%<Cfq/ehb:*i2Y1%I?oZ_(jX
%oqg:^(kL9YRGo^*&\If6B'24i]pW6b>rtl(B?*GC9a,S@TN&,`<fu=1kh,AGd#+9D&ZuapCK5F#f0?9Go$)#6^E#8KIIS35V'@gi
%ntec/bNFr,S"o+*IlV6b:0TE]22TVoNNLBT=oQ0o^$7b@V2n!U9e79#&*<"QPeiO$\&ZGulVXXken3ijD1>W8(EQ8IbDftBBJ6jS
%8g!S*<Pu7lHg8)TMiU[2*Ys4*Cj0ZcC9pr4^F<cS-B43OIB;!LgPt*`o@lUFo[mjE2>U)!^2J@#.b$XAcht5TG3&a_'L+RscFkl(
%(uP(TCDHjBK+XT,c=?`!Fc`k1/Di=3)k#I5q;S-ic0ha&q3Ag!/!W--h]CG`o/j3ZldUiPbI)ua\_ZA-WNL&Er>t<sG99o+=1=X5
%s8I?r2Kb@E`MP#;A$O,b'J4mNQ/DPRpC@ZGj3+S'FTrpW>PRjs6U*I'0X_LAL4e%#Eb3eHB`&G]prb&:Y>aq!@Y2>Vmn2mbpiW1B
%Aje>fKO8q?j.hO\*.BKef6"5MRdaa+(cu(q#CB8@n7aA+?W!&k:*e:En7<MB%3M[34mr[O1p_gqk<XV=c/MfnWXgFlU(&1WN.,'S
%<a)^%obbFjnop"qPPCgOIuL#YO2Vl_[Au#92s%gH)LtGl:AkZ3WVHfT`uA>faE>s'Z*cD?1:)hNo[.Fn,^j9n"26.do>T+f9<9T]
%bADFA%:P7cM8fVa5Wh1BHfV_[Z-@?bQZM$>#s7q\G@9[dZ;MXl#Bc7j^Ynoi+uB,kZ5=,H"<PV`d73.3*oFR]S:82V^qO/G>C`9,
%@Dm<dQ@S`i^c,Z#':Uo\J$+NcLZ`W7G&Q?+on2+S2%`Pps)9Cu=$'!^RQ8,B80=(_`\[GD&P4dI9Kp,G`,gj_WVh#$CjIs[V=$+b
%F6/hOfCNaSO.psV@a9^SmR'9cr:q)7fL$G`V"J#i2G70L\i'd+E/S.L6-&S$.m$@^G"]UM55W!t)2g.k>2!Da^+ne#PTItl<B!Iu
%`?^=JS\M[Aa\WCcG4RmMoueXCIP[U5OPO]aTNl*?l-8f3n>KZcigGJQ^EiE,*'LNf1,XQ_3$>'B2)<>DrW\=peGtR4W[*ekpT&#Z
%8mq%%d905$/!8"kD_Ji\=LY'?'/BM.)jt/lfZ7mn,rT"7H]#d_V\4fpQ&WbK2EEhH@CKZDe(;LBWL^BIf^t]%-=XHr$V_W8:0us>
%cs)LFqd#a>C2kq<*s2?hJOCOuNt%.Wcc&@cE]^O'*\YOQ1iVu0C)<)CZ&(JZ2)`!E]8TJG%i_e<c1tm$^-A-Ec(*RZ`"H/IVc^6l
%R#9-P<)YO?AT'fQg:@n1,G!5LkT6dl5JF?6;_oXW1!OT?Z!_i]`6=*DMp39_DIW46&oLW!21DQ8Mi/OdZ)*Z66Ys<Yij$__F=rlm
%*4_'ja'5=DQ+bf2f\0I!.^m(G*/SMZ]'7jJ@I,n\ZP9$hm>\1>fR>P\N?,0?bLj(DFrWU.4q5QX)Dh3A`GGrlO0Pal@i`27Y?f-8
%Nr5;In`8U^<^(;Z`pV$.>Hu4<TbDbopXWe,F6Ba3`bofSp0'M*NHJk.g2LlAclF0AB"!K81F(qtPE0@s_t!)V2k4QBh$n_cL&#/n
%[U3F0@K1%Z@lW,/QlM]iX'Z;h:)"IuQWrXV_qE(__r6lM9f]k8]j;Z7\m!i/hCWZhiIfj5IJC<nE\r135t>#@g@4V!@I/0Ip]<h?
%c`cs!l7mDM1=EfVDXI\o3)!uE=H*_2[RNd,jjN21<4-s3OuNU5Sr*&H`#ffcOl3(_*a-"B^E6TBGe+a6m;2-LX;uU;,?q(lWKFlp
%I5u??PY-n)O%`9,>asmF87A^K)Q>h=^5P2EbpO??UjeDR*,1J3+%D$0QgR?kB!MrBnXJ(L;/^pTC"/1a^PnV^gXjilc":cKRq!,,
%CEf;dh2\-(UB`UBeECUeDKYSdp1/*K0K4#4HG@/h3;S$SmZ'1eX3%X!Hl%]p`l?>J[`7=_#r',<$M?.(8]SjeG/b?=1>_ugf]qMr
%j4O';C23*3-^Vm!LHB-Y2mqi#Z1:gnNBQ+Sm>X!l9/#>1E^>^]4I>f_PN+=@EN+`Va630KjnNjRNQ1,UW]JfQh`cCiNusA-UrG(]
%=,Z)BY:@R7.fSOS4a3>7mj=o,-cXo=M2=W3p2!'e>ULo]pZJ_,17J_5Z+bQeT%LYY>adXS:,XJ;\rYSZpZak)nZoQO44/=[?:&?c
%Z'^DC-L]44UbZ\&1A)?'-M&bZB9V'm,:AQ;LZ=S"=,#(5H)%o-=j)&)ZBNr]Ssm`"8lN(Lpth7lg01"M\nNOi<aTq8WP.A6H0T2j
%HTH<$Li#me(QWO&WRk>3:QOUDj3u-?bE6L]SU6o6>*I:]CLXY+]g(@%9V46n2q,`LiG/5"H@7g0C#!%7VktN<j#h#1`oks.Mt,Sn
%G9>_1ajoCKgLmX5@CSH9J(bBqn]pV)k(mXsDauQ=Ht@_=Ag,R3SB86AW\_8`p;kJRoq%O"h22'R9C_g70jHqh:*dgpis@l8812hI
%YG[6%g3k2cia7P\h::b5i]2;RR-6_=Gfb3mE]^8?Mm_X:@hXVhDOsOn-;V&c7[&PNj0`E7UL'E1h@L($M1^H?Ceu2CB=$F%S(ZW.
%NgRL>hRJsWEqF!OpMPlFjCESQ'?;?DhND5JnMWFT,MpO0maNcT$fA#&^hdh8'#Oa/m7bd1eD\n%>;(6Um'r`L/$`uDe^sLipt0@>
%c$=%Jc5.Gq)W/cqSFa)Oj=2fa%Q/al)OV.8\\l!TEp?D1rOZREV_]:Og5IYBVlb_>%\N08=O]Lgai7n,6''3KoD#OPRi^t<b5#^T
%[`)q7O$?EaHul<CrRG_-bWh]TSaoF1#L@mjRFZ,!3jYU`G.4>L1:)c$khtr2'l0!jokMdmp%4MKg.[d213)u!o1Yc-nn26G25YN.
%N65aZpG>uS>AFG4fo-=l(?]mnlK7Z$);/<XL0$;-9P43uC%h.Z$g+TI$Ci1hbfid_chHVb<eb*,^6Vg_c7=t#\a!$!'-6\>S$g8K
%bc\+mkAh7'q4la<epR:8@q*/Nn4je4aUs#23Vuc]fR#0O0,0#=WJ/t$Mn;qtkrbG=S1[U6Fpa;,eEtBAAu`E#MoD+7c.6>R=1hkp
%fplAU]Y2re&m/sNS)[.u7.tn?EMmrm[+jBi>:Q_ujH`uoJm"]$?(G7rCGE)A3&qaY0#'M-e$5D.kHlXB<n$m8q*Y#NiUf>41f8K#
%ci<eiA+mMfRE_V\b1pN.7l&=i$"GC:jNb-RVYSePp9<$!aPI_7:NE4Ch/Z9Zm^.$S]?+UOqXcM5CYinMk%D^NX8,FC4dA7GMP]pp
%l'M",M:8Brb5CV$=kTc:+0QB&471SNgf/%=:BWVWlVfl)bj+k'Bm]M151Nj.b[u#M\(>q44+#1)Y.[N\*nFta2Aauo;c?KXa-WXh
%qNG'!D+o*JcGj=),ee8CoQ\(>GZ%]"SD:eoDl,.):,WV4"TuWJg=_o'>3B+h>E7g8>DEmVl)i!ibGX_V(-C2UXCecm8&nWDrKN_2
%mDS\8j%`e>06^1iOe&&0Kra!HEdMAH2g=<Ph94dFbjK9GH")h!(.S#KQ`doH\"0#6IdHpF]-"+2LA,o:j;8<3Iih`j#EuK@hSGA"
%dK_/9m*`_ncLJp5Ch<P>E-:lIG^-PVeNA]u?cA(XUSW[>]t)8@UPI-CnT_We13/nqgmgI?3*b<)DB6tdTD1>oG-_(V\:&B^Sprel
%arFmKkqr?XIscPSN")DfmMGJ-C@1l^Cc=O<J+iBE>rn&(NU$,jol9O"qN;("YsS-_@d\5Ol/HAgY&WupTA$kep[.4g:%<1D=hZ=;
%?;77gZ)d4np#>8:fNc(L>pm[$R-XR=\`3;Pro)FNj/AhnA3l41m)C[GDlS-[pbmDFSA/@%AGW`Vp)(Q6P3^r9Cn3`Hh->+qL!fSQ
%<FKV;jKrm2]Q[KAY4(`ok7@:[MC7ML]jbcgGYe`j3d;L9FP(2lV8hYDTr_iIT$$pVY>p$3\X]\@%F;6EV(ONg>'Bo'?ECi+mWVIQ
%](aPFbMkg,Z2UtS3.Cboght%O`I<77EGtR4jK\F6C/sBGe9lE=Gj_k@hq:?6oL\G8et3GUi\+*PL\90')6]<t:NC1JgjWuRC('k9
%TQ]1'Q'^I9Qc5<QKu97D)nrUTT9qGKp&"s)Wg@>2<+ABF4,o4WES>Xg/hSuk[l`$n41r7B2WCtN)!3]c>P)8uf*fKuQq17]bK9(6
%f'ThND,6/IS&&K"cTS]AC&9+bJk=W;9mG9u0;S*n=i\WWI('Vl(t<4.otBnlT/q^fV]GMP/%5bKLMa]]j/W:F@GBWRMd\I'kcrR=
%$l)s2U!@.ZaB^k]e?3o_"Zu+F^HGW_6gXq9r^2D9&?]N#SdSUe\1"`Sa'N."]_!s>FPNaRiG[I72ph(Z)Vq*!%3BB9LFVC8^%hr3
%@68lc<9lp%\p\Ip%tuf,0Q>N-*L8P3BjaH-b#"A+2Cf3d$MM#[i0BdcB!YMig"Tlgh9mNCGTASqeVAIS1HVl]%kuXi=Z>bq'<8Kr
%](K]`IsLUK]gGCX1dfTc<jar4f_s8.be!,Rd]G1+*#[DHb]fD:Ki:"u'^FdHl`5@b_N'[\eX&Ki8R#P/-Ne33Tu5]Ap@TE8SHJ6/
%]B`cfRQtsTh%*OUpO$S!(Y3uaY?b8<rmc-@@GAK46Y64cMl6jV4o4a/T<RQPU"q`2'Mk`o^\qPqm2a5lF_JJKKG-t<]`sRGGh9ig
%\#B7V$T1/_efgRPG,*nB4gl7^PoMK5I=oW<M]TXMUUt]CO2pim*+TFOH`_.mo$-=eBVVnUd1+ru2h2#+iMCVoCZs#l*H/\`(E:-f
%6ic]/b?'dJNr#o(pHKgVT3Z"+#At34a<nLsecrS[oS<:'3O6=K"uiUUDtre!=/p_+nC:Ru+((,QLR2.4]MJ8SXT6=kbkt\?p"Zb!
%^)"tZ>C],aFL0,9)7ZPi?iBP!M9dm;mMHEe$K7U2fa#]K7pkgWm.H-WBn3P<V,j?nk\M"5;2M+,f+Y%#IPKkI[R!'mpQOui-d7%T
%qQBL;]`^+O/ar^iO?^J1pab.ZQ@;F8IgeJmlMO;hH*]/2h8B+jmelQ4r')Uoq^@U(h[5es9PsGrkDsK_laMd[NWZbZItF),0#.C'
%(I).5qblStG)NkaNI'afnbDeL^:[,:CS]q]hVd`ne%q&ce9@>Z&$.CfdRf99<<lH_T?dk2;Wq)?*kO)EHD+MXs$4uEiKl`-Is*R0
%>KcZGnirE25C*OXp.j.ECA(#ge+^dVjNU1'gkUWfB6R`:Sc-U%>5n[kVU&EN%iCa;1Ed\tS8Tf%]fsB1^&88@$j%4q]Xm<TZMDC#
%Ge-p;XC0q6Df^<p*TKFMpD2LBYAbN"Qb_T44b)jGF"OAq^]&orZ%3^NCGUY4NoiO>ldnYj<q3ACR4L8=YU<XtEmnH++2*$eGWc:L
%]5).k"5YW:4cV-N_C=@$CWt9&kNm,:rCcmgJ!o`a/92$L`BX,qGGZ7kAN:#YI+'d_*]\V_EaU/&p2.lWoTo*TJ)IdFq"+]n^C>`>
%gE*r=p4g_>Kc^j)qNh?V=AhbQ&Oraq`&H;_&6(!A#7F!L$^;J0OA8Ee"Ft#<O>%B!9N'ntOH&8A!+5YoV.U7oi+`6AP"Z/a%@NPn
%phFCD8RVW$3[+Pf=Mb:\^>rGn"Or6B!\)ASJHF,&?NIn8)*s"(_EEf1).T+Ia/'h$8>(Y[LqrbG!JnW+KX;j."42DrWaMC)<^6XZ
%&#SSaCoEQ?f@6?bC8hdZ,^$o>B76.fJ4K]?pkGA?8Zg[-d3*UkTLB"Y$?Mh)T'&0l!E:$)&>25$8fg5Eagfb%1-YV*+:6[)&1fMC
%mST6+\Cj=ZHmc>1UIoBB%$gHJT-aUYjr7Eh2XmYQ%T0GSNbAHlQ@Z:M"/0+]!+.\Q0frrB.mkH7oW3C=#-ONeR2a%B!OcK0?`Chl
%["3?'J8K[bH8r!=E7Y0D+.uWc:hZ5'!-i^7X+64X*'jZfH#L6b7O/4);B#E`?7q&I)>HF[G(5bM!!*:21!dc9&MPeSTi.>@#Ro;f
%!hSp6WV@NnAdj%e]'@Ztf02L.,*[BScuB&$1I1HF2@+m`q];iUa<^]O`^M;i=.Z)?$Z&0>K^1lQ"Q@W>#air4$@*.@#,+L'g^Xjn
%?QjP2%>/n].VL+kl7PUG%Itt6Ss:M8f`5IuYn2G5@Nb_##7/[+5_&kfG>J(>5sX\]4eTs'[h%g,a<OM(HtHfA"$H^E-1QEUG02l1
%F%%Z@17K8(@R(;+;c6fS,GEN&+<jq+J22ZR-a4A:9ZrYc`tmeVQp8Cg,YAFX?4cKYoBbKYY0?I?!pgR'p.JNa&0_BneN31eD?(CJ
%.#.dP\^)jAq:`1=$+-N>+'CdH\<0+gLOE8JG:3RPj.7Tk6ni"<#@bE:2FhKkW>\g5*%$qj>V)8(%`Y?/-[l>0WlIlOpB(fs![89<
%C_4W&i>th-KaA<t(8cTsU;o91O9PBg;:7FS:<#]CNSM@#RWLCV5^@n_$]?0]$0GVnLEI?rXgfSj"FEaFE.F,"/l>h@JojiE_70mn
%bQmEj"rH&c#7c,/25D$JR,Z7_8-7?_9H"q2%\f=NYclhM6&(.;m@FMe\\XQrm?l3G+VQh&aM=njR2KD:T/pqi"J+IY5gMJ(T:B,?
%5l'f$o$b)>6*[C5`7a81';7r_KQ'TH\G6n[5c_n&)fQp`:(RJ>.1=TKRQT$5%P1_&.geR'$K3$BMW>+!Sp&"b%u;siYFYmr!,qoY
%8S0tf)G>_fe::rX8c[+I5lid83.utkU12L+StKB\OKP"U0G*6\8f&TVf+.:f,2!)[O?#"9E[^Ej+LE&7/(fAH[HF.TqZNBh6/\D>
%En=4b%]6%b+\]EAJ>)'p&lfdCG(u:q0fcOq+&GlI?,Fs/3&%G)&.0N@lk1!LglCG?@KY@!j=d5Ee1=H*MIcRd;2[L*JeJ2`Z!aH*
%E_'[@@03Aqf^9q)-N`BAb,&\[C.P3GN<I81*=A1GKrKT:$e%e(\dp[#%,BLTF4Qq%92Y2?$k5;E/d94^#t`r?+i#[sj&T8\N\gF>
%!)q=_N$'H;=J/>UCq^_2>ro;!A/Zjhf+^0dd]+Tc.kO`HTG&K3^s$;sWNX1$<)4G:,"-&Cj3mKDJYb.@5QjM0(;`bTp;$ELlGtd0
%:!33AaCn&T[<(^qK+cPt(('?e7skYi?!Dn8\6[[o#tX8'bR!=_>_hP8I+ct?_"2Fd(+C!?h9p^`PVZ2X[3Ba\8Alpqgkndu6J6/X
%\!5f>+HId0&dJMq)9PttG`I`Nn6Ank83e=lnk_0d#_q(I8QX0lj4lFc\cN7!1'DARe4Rr/Ca"KcH@!Ob5ENE'guoknH,s)22F'Mf
%QkIP0_AN?6%ho@VB?:?-KS9JsThT--N;#_%)"X&g6_=V2AQo?eX5&@23,Aj&fr;@FD-B1;T6m7S7<,#XiW'08Sd[1W&t,9_%1Z22
%A2GDC=6('JEZfJ.#UD!'+=tmQVhK(A[4e)e_E#jR?sr`=VeN%\/<IQC,ps*GfJj6E[ZQ7qQ.n);.5s]J-6@$7-O=Ph2U"@f&8c;O
%i2AZCH%sO9%T3;F6dL>s,hW2,;G;gu9`k\u3L85nfTH+90Q>u;+VTC\7m#!B9EQ*QdIJUV"!-ZW*&*``d$V^2Bd%eknEN#]pjtID
%-QMOV,In<?0GSJA&4or,7Go4F5.MF71F1jcQAh$Kj=$Zl(ZQ2q`43'LnF45FS_"0%OO=8a%1Pkn+:9q[)FmZQ2gXE84]<1snD-Xj
%NW_oGaTBBQ=tRclJs[V9aKGe%E.CG.#i.p"L]n^P60.]ZJcRW<AG-5;K=JYtPTC6@Rt=Y"P8>.^?FL_S&eU!$Q4`O'@aq<`$hScs
%Q=3u\*Q"&s2@uWa3",;kh9l<7P#SF]AL9C"#HS!FUTlMg(U=QAoge]_4:R$s'C?bWRCc3["]84jfnh(r+N#3n>4t<#%imaI%;`2U
%?t"kp!9RL\&=7*jBn;k.>E/r[],b-aN((7m_,A3W(Z;Z'p7hqV^F*EqBI=CYkdB'@d@hpk&1G66idpcS#%i$/Zqi;'c:lqt@i,u$
%%Kh<."D/q'E5G(Z$hLJeVnF:P#%/_7m-*M9#tm)0b"!FM3[,>i(BcJ"27Or7Ya(b:!Vk#63DL#?a^K`YUNV\k6W=>)2]gZ8!(/]f
%5#'n!ZA\sFTN,GDaHAVoPq4(%5QkdKA/#m[mW"VkRjU^9`F<+m-VntP,Uc4X#n$j/jkL<t!bi)]A7.#1MPMG&JYo*F!kT,9>E/pR
%6#%"*%4ltq^mqbZ_PD9/b1LA5_L/C#!2cU\4jGTB!:5mYLjL2iSg03c&-e$A@Dda$-S\*2guHi:&e_"6Q;6:hW0A&e17=Aq5mPOr
%cHt\a//TpRDOX6m;A3Ge&3d7fDh)X;:*.5;i#_'?4DB1%Pig812OYTdHnUPh3^,gVmo52jF'Lcnb=SN3N!J-PA7Ib4M8l-,UP#uA
%kZn6e=cJAU66cJ<BM8V*aXc[n!K;B!YpWN/,W(%6dB(/22,U8>]kDg5,UmR]N!1I=cl.ie:B^B]04?tPCP6D;e;B=i$)S]$D"F`t
%]F(`KMNX<J'>Qln-jsP-G"GODC55J7JdCt!Em>Fk7n6r0o>s]1/>5ra3X38gXr[r;Lfm"Fpc^^pBRSR2)V'miLdC8\$Nj-^(+,0K
%,*)2IHX&6tTBP3pal["Wd)me:l8CO$StLm1*r>%FPK60?U'#Qr5#DU*\@?Q5]]`kH3r"[,0tT)E,XDXADZJhAHG8SM>':]?fP"^1
%m5dM#YtL6n&,K>T(aNDpG8Olrk@b75aGBE(\-`MA^j4r[6YFh=7%_)IR5"`KU/+u(J\lG28(pBU"VFijM@'a`DRBpl"kJ3X*mrV+
%Ll[jI3&F.[&>?=9f1u2cPqg!df8O%:DuiJ9b<i<6\E*hsSmZHX(j7f#-&5?I:D-2B@@,bUEJ"Q$(t<'8a[VFbFq'>9TgV6j$u>Z)
%(_e=m?sEu\ZUUt5!+?]q"+SQt_?Z5?('\fTa!7$O6kqCcaE.QH:f:,O'ata'*L-%E#d!*YC]T`'3[dGb$&%hh$Xt:#pDlf)kZJrr
%OF\mLeK&$`0FD`N=S:JsU$"rYD_6=J"MDc'@'5pHJq9YP4=EZF6cFk!-&?QfjK(jU-lON]YK4d4C;XRT!'d/iCptB/C6TW5Teh^*
%ba!\m"@J'#<#G[/JGBV.)g@Mn1$q7%#9K7'F)r>HBTQ2hW^'')9dpR2r\8&%Oel\Ig9AR'!\b;ib)YEJ''4.U"u-R;W=URY_+Yuh
%&JHK*dgjVZJasP>17fbDN_B_3TOcTua9lSiMLqZj,X5[n!Au-76TSYC*5^KjU>V/%?G_p8-GhHV6r3YMB>UOB\0da@.+<1Ni.Ks@
%@\8+&2>FCMkUb1dIH!+$"=/"q<B>Ne8@A^+,4F2%\-Rq/8gNq7q?$70!"EaD&5]9%2&k&)ej'K3K2\oVFb:%g$a?lN#m2$h$Y[fo
%EQ;p7cJS=m6c)7LQ_(B6P*G[73AHk<UTO`;$!HpBC')VO#Y`eTVcclWq4L=kl<sn9J?+P33j)GUZ_&r8FX#E<ZY6^]nA,)B((%iJ
%M1]%7>Q?i*:m)=D5b,d)A0sEas&jAc11>7(!Um(:b@K%t;YT:G1%=bE-psI3"d_WWL8bH;G.or77!%+uDLu*R3*W.g64fp2U>GGp
%?Ao#[0dYP[c;BH#Pi6MCb4S<\!kClg.$b]3'tB)$VC7rO74>!:&PA(Q7(nSj5`)A8F@$\>L&dm#!BlJG#d0^a+Gk*"3do>B*?O?a
%E!a5pNJZ%acXO]M<`J'^NSP[P;8?"CN:8TK<_$$rk2<3=f*^ZDYmUZiTog.>D*o35X@Ds?.*S(d'cBJu1IFtb8=?3>"mZddBNp57
%=$dRRo,`WD8.YTn%JZY(&J-T69M#@^'Vcsjqu@bVcmnOeDiITN-`qtQJ,tg#&>OIi5emW1CB.kr7AZ*e).D#b25>"U/+-5C..Zue
%&_+!1gOp.ePGL].La40H"DVP"6DC[d#iNt*Bc%2T)"^W+$W5-9VoEp);.B*JK#h=m:pq#C86\POR;N.MXs-c_oI5O1EG#E#SdC&C
%1TCPY'u7(o8BQAu+5#>X]I!W\+Jm/SVH*o-2i(O&=_sTX=G-ehg6Dj")DP-A5VOp/1S5<`o>TL."fB!>V6h<S-o!]75_^mN4m6$b
%)2`:F6gCl2[-?UX.(@Q@n,Xo8N]@GN[&sCI*32KCj8r&,2'ftin7`.1o`@<T0o:m?.8!AA$uHr$jW-hrT)un1p8&4GTJ'rq";n?u
%0!s\kHiV'(U,\2+`;o2(0F.jAhRIf`Tu\Cgf[_u-<XK9DFQJ3S(*$Ei"N*Jgj#4h!3!Di4jk?Pb)&X&2QXR`CKn,tH'S[USoHfk[
%%M[Q[&8GYG^.MfJaa!5fk@@uQN!3XN6/W.eNZu<!&uO):'"6+;fF)Mk&*lp+\be;=9/)9JO>ae_CXh8PT.1sFOAgtam6r/)Ruuhq
%gpJhKc*:$^`T/idB.f1%dn-%@a+\j`N/%`B-SBcO'fJhu[MFu._*FVACZBEV>[YW@((uA:"I0Xnc!g`e2Sq`-%A[[s(c_qfl]O)=
%BYqnW\u*2a(D&uP.>"oKJg`4&+?qVLOkc<CgXnp/5bD2hQ6$e:OR$@i!(0pFoMeX.P-9FEiI!TufYsMa_*_R*CDZp>!A0F4l-dQQ
%`L_5chp\1_OkF+sOr^lNJ]:b.9)q=EgT`n\ImS@Ll3Jf.k&]]pEu1]?=qICNJ7'<WdqF`GTe31.Up.*VNBnWQHs5i5F4/eQRhTQ^
%(e$)EQN4NX"=l.t8kmrLi%qjSG2Z\1B?-/IL79SFKZ#*,n_-de_SDHkQ7tTm#n,d%C]m=..Q=eKCLJX$(:]1/d@o4?_?RD%>j@$e
%#8AU=Sj;U7)gZ.!Z/gM+>*A:D?Kh>sSP7F'BiAsj%9_Z682OgiI8!i7@0t,s!O:4pfF8(cOtHp?9c+qlpkQ9q;<0*f@VA>*MT@JF
%FGMV_Vka\_q)XIB8?C[A<!fE<D7ib-Ite/oIM=Z'dRB?F;irA@;8t_o:Z"5*9\Mgs!(38/oO=T@<)'39_%V&GY[C6dVi;Q5AO2Ic
%SGsu_70p-W%mtFbLJ3a7JDpM(@1ZbuKJDV<[?F:&E;n%)Q1Ae7`djEu3X;$FZ*>/T-Yf!QnaT'B'I2,k]TNWN^2h=BM:mEBdrn2/
%(TnNI38Gj6j_PXY'Z.l>O7qDi4E<*+4cHM]_IT8T\GV0V>X2*;S1mHU@dB7T]7pe7-UZ"q5R]#HVf\)1'Z=B;K``HP=TsaY"IKQ&
%T+.a]/b#n3[YZK+!5;>@%>*?%L'V?33i;!)_#Rda>rG;aS/5[+^'a]0%Bb3RD?;$'q6k)@<j8Wb"gCl7CfFN1a/$U-\)fJ,.rMo>
%a!@CS<K),OjXM.`[cH"G%YUsn5l4WoieW+&a5V[6F1mhhNaN]3F'330R4D04S,tg'6QTo2s&9+;$:&=kJ=(C9BFg>J:O>B\>KL0)
%N2NDG.0dnh.O&[#fuc>lT%,<lgC9(UJ8-d4&ifsI'bS!$UkbWKRm"P(<T%8'd/M3I(1V6bp<F2CIDu$gmG`mJn6LSR\)ruH<_HCK
%_d2r+o"uAVXGg&.MdEsr0+[Z0`g%a"PNQ>X0t+q1FE1LO6cHeui6%E3$Bi4>OApmKXK'-H2C\jk@H\Nh/W*N3[4k&:$EUY2\?*!u
%,"6/^`ZYp.(*7E6%Kh%l<YQ<UC(rc9ia,`d6I?qZ0bXm?N!k2ZAt]599:mY`LsK8\MY.OJ+L*-s*K^rT+\bo*CjdXl/+[&s.p.!p
%$=L(b#Vgp+AC)hL1l>=gr1Vr:JWH$!.>K:-FsRmgl;7;o^'.WhKH1t8@.%H'*L2=fQs[Jb0HUrt3&u`5YC0I*CcI8;7V^VOO;,$J
%bC#2W^E]ge9t;+M`D?jl!BfPdAh_<##Rm4LWWZ0/-:5h:&f=I;D4RsK&KN2]4nRhJ,?F0(Q\Is2@6L7bG(Bug=qG8d_q5/nAK-TD
%&9VG%_fL,iCZFtBbf8>`Oc.(#<64I]@;UURbZs$<MW``54sh%.9>b)GLD[FnGUF-4U]<0)rU&0D2*Okl)CXRQ.VHHBZP9o'R*(LC
%p$%CM(5$tX\GWlEUoQ(KTl#Eb+KTOtLqGX>pApkOX"Dq&')#pYIeDQ-Oq=BB(inOOSp58%!50WsCXK<_#PQMrF<Fg;(!!ln$=L*B
%N.hV!.6`G*&\-8n+Aas_ic4*QqPCF4&21%3T[I<,`_BiN6T(Y@gJA.C8`=Y.Vr?j+QGQ-H\VBVoTu-s;G/J\Y'pXgXI@gRP$6<Or
%kqA+',sFcZ6;,H7gb"Mtar0b)0Q>!1jM54aaL<lraiFJd]>^PnIijLq9I^0'C(&;b;!i9s9JX4<A*ZiLQ+5O6^qF`u$qaN/a:h!d
%paAKj_8Lo#q?&S-n8&Abd)$D]/>5KV7SjYe?bhIB@T9(VpKVjGnVlqRDq\2NiJo)bXR/hJ,LZi4.W!o^7_1!ALZKB,JX?oBJQ]d_
%_KN<*.=-b!c]1Vo_CdaFD5mD:CAd2SN[\FSU\VV09kf8iM7AQ8gW?/`aDF7ufckl=iSekn<eO!9Ac\37gET!,IuL^sR'Pn0K"uSb
%PE3h'";+Et!@o]8TbNY?cgkq0)1ju?bJWgA5cH,iW^J`]3n,S!'\3DMmQ`.%#^aA0;o8@G5"3h`[#(q6>(jP!A#@Jt4#>U1`jJ]>
%bo-q).Z3St84@lI!m&F)(ouMU"f+k>J_@4I=U7(TK_<fW7l2@TCl"n),(H=L49B*#M!qe9QdYq(Z#C!MHE9B<+UnRk*\e9c+OBPa
%M54`]po].kUEaU/?pm$IKeNe//JM;U3m.WO"Aj^!Z\$ERg+l?@R]%ol@o`^Y,=8pMq_;=CM'-B*Wrf(0)$6c[U)o<19?NWjYX6U4
%*"%3!GHsd:bk=iodp^acg[qG)LfRr/e:CGp'8^_)%Kq&DojWWJkj59&@o&jBLa(RZnq3kB%_X\%Te@6HX"cSJ1V2@q)6)a8e%+E:
%\QgAi-3t6O!skOlLkRO0.kRX^#a)Dq?L<GXJ!>N45\h]%AcXOn=]_AG$1"47]aX:i<.7g0fhWFa!o\d06;ZS"l%+r_5Qka%#'MLn
%)KYIr0u:f!(<"9P6Mqt5G`YedX;fTT40:je_@42[dmgOX2A%.s4f=Z/qo5bkM;$G2G2*jZU4/up'6]+1ET*Z*Me-Qq-=''HmqFjf
%AIedR=m%Fs=7L5S$:K`k7mf[R`dg.Ld)KYHJ:USHTp%c[Q9[Y@1PM3L=/#)50e20uM._N5Jmi4+VF^5[H\Ouo-phdj;d_)uk1PmG
%n[okj5\#M?O3oal)d8:3PEf+RJ@/[-FO,t^0Uu`rlL'aq`#<D`H".j@+]G*n5uS1X^?c`[L'h4bps(kh%hMLlYoo!A;8r_T&OaYs
%5q*YC/-QcKMe7b-g\dNt@<oa5Q@JQc@Y''S[:=A]\l^9('W[SfJ_e*V7sKSXnU]%%(1[q>qPZ<hL&%*k("SD?K/3WC=?8pk#Ud<?
%2@cXL2kFFeor1@.&(-=bDl$_/Nae4soIuZuMX,Y-POG;UmA&=-2>>1g[#&Qj(]3E-O=&!<4nP>]('VAFEo%.aZ_B2iat=I3CMJYo
%7+)eO!>R+g^F)AV:i]do5YBg$]W&>*fnP&8W88]nQUa28*T04o*#!bp(T6McP'1loE-Jf[+Xp;LJoU;`$u1nFb!K\)@:^cE7%D[@
%Vr;&0Xdit'N'!X7<$H%c%/,trK-f<=)SiQ!qWsemk-P]:Q&s@\+j/'0k^Y4UZ-Y*DX=3and3tFi\dp]cK?'m;DTPYB0^jftG`l;3
%1`-:<*nF_m1SL?h9AUoY([jaWVmYp'I-EDd(]j;s/Mk1i7Da#5?,VS>1-(>4/""G/jfU?CF6H`g99q"Q6k%WT.=7/JMBf?bDl@9)
%c3^F'4&15>)NC7:YQGSk<"kq08qI^%&B#Tf[TuTEGfC($_;HXFkSY^$BYuq_]F:>D_GWT*5Tu>E\fFS\OTCKmHe]YUVWprH'h?Ic
%ZQ9=]Cb'(=c_'_V0I=7EVtNpog,_2C&<%$-7W'F2@YIiii))oT5W.piRV>7FRK_"aMj_`oi<Z*5_\a8Wr@2#FATL3u//AR0WmS)l
%:%<<D@U*<o>-qPpi[09&!]eEoN2rHMN_ti9n5]P@autUeNL?pKiY!Kt'Im$^[nq2gmN6*&*9)63`uTond6<I%a_4VH]dBk:.2]FO
%Z-X%P6KV5%SY->:An0D7"_":,^e0\cNP7+gl$lL<^QpO7!l/'Z3X)KSZZrFoY[EiWGq::/1D3qnr5mP1Ff\*Q+^g&I'`p51\J<t#
%\+jE`!Fo.G0W\#;'M,81&/T"XU=nX2$)0P+>+%'p\IY`ib`H<m9-Z!F<\k@dP%l+d6Af:2Od*Qr$96;I;EYUOru8O\["UV7UnQ[8
%#._[j:O!"7"uIqQ8.NL%!/Xm<6ZNs)3lBraKEfX)-*RHgNa^+_Ypofb_??#"AIVa:@*+79-p"NFm7[?1A^s16Ym(>b2g8YUSZGA8
%9&G=7"'\>f`C/G"!gW46(l[E[:sRF1"HmLu\^fK2IW5+cb2;+`YeXul*?Kl#p#L01*V#]jVPn;DQ+s%i&2`qeQPOWbp*4G"">.k+
%bLLR,nGF'-S=pXk+<O``,LQ,FNBO^9[[XN-%J>rR<858)+2%Yk#mCK,R*"sa^'qAXD2K%RYMderHBp(JO5ZZT1*QSP_(0$cW<;CF
%ar/;QSqQ8Z3FLo[8A%P@MO7nYVWT3pFEWpA'hF#"0So/U_+6-LUuZE\X9,p:ZbmV6SV+_0BgJI'91<[uVt,c[OHF/FcjrF4du>\&
%KT$O]"#2,g\crOmWW#`gp^N:fO9siZ>NDb?Q.9<a"uXC^#62ZR)'css$]eI'X4^f1&:5RQJ5NG[_0Q>pm5KZ!UnHd[[`I)AY]Jf+
%;HR.#72[JT%SZ.L*NlLaa2/4qcpip!K;;!Kki6q1>H^P.N?#"d\<[)FZ',5qF7LC`*;ER6'6PFN%Ob4(-,pa7$9ke>/&U_<RjhXL
%@#H]nYT@2.`*#pF<r3nTI^t.Ni,K(WIuV)=&t55[[PXZD,r8Y1Lug7"!nsYeZ5&'NpTR+DPet/1@T*r+l=10\31hZn[EDUn!4gNJ
%0cs_:JgiOOKI[87=);7bYHT@Bp,iQm8m4Y-,0SU[W3ICs0ARX)OqbZlL9VKO<0Zhb82/W,Nl[F,#+AuRiLLC%[Kp$TF%Q\dp7ADV
%(")[iLd&YWA&PM16p'.bVhl=Q3#t:k?s<e3C)>&GHtb_l0#H\GXgglV9H"-SfV!^[][-"'c40:Y#%"f9c4)V%4'p(7oRMPHmbBSK
%L):lep9C8<)lB^)I5GmZZJ\#'Pdn5$Hf1(tX"s#2kg2Mj0c4IEd&7S[4s!C))[?UGEORht6.Q_Wn1`e<h'E\53,O%E;l$e/<Sg$7
%gsK+kq)8<HW\rug+b?#"obMd^JXm"aME%2N8,8.a>',cEj)]t0\@p85e`Xb*li;U;/&VL*gV:f*l2nf#[T2Br<k2'R`AWjs>e!^7
%a[Ypa7?KpDn;T4X4gJk%OMuk^D70QTF=G%W+MV!=-#@T)aj49-@GN"L=Q>0<i(thbWktMr+]a1$(\;%n&U1lO"<UW%7fSL?IQ>5R
%ncN_?Kc'H,jAYr?Hr4!rVqo$;*c\g?p1tn'!5lsN?pI)VkNG_P6&3KMclZoU-4khX6VsFlG<?/K<+n91;A,?(1@F]W_*+9NYanXV
%O?4`89BQ,9oMq:-;!o=<U7uE3mK>"%RkL.O8:;*+=J=P6=c+aj(QI#l:sj?l`ZJje\35Fs%Zb$q3M*H6aN5Pe#g^&.ee^GBn<"`K
%X`T%d>uLNQWmR2NLuk*/@E]<-'B,nKa];/*l1R[lSIrlY(kB;hM[H8eop?U)oa0c)N/QEb8qodO^2I![Ze*B.4egA"lU4aK`&p'h
%+;r6!5"1A@A>E]iRg1ef(QP_q0G6rBQd3Q;8AZf',FqqHF;#Ne"9[h\q\i#'g6cm`iLG9H5OmNW=\`pD?o0&q9P\[<B2V%RY#-p@
%&>ZuLmq&1S;Q,2>7<LqqZ*Xm<fX#<pUd72S_CMnnQW+scSUX*%aETU?&qEUmBbS(bL+^Kp@2N?Z9bq&Pa0c^hBn`EO^d*SL^$67_
%l!cc6d02--k0ZJF!&'1K@<TeL'82(5-e&fO"!32>!iJ$mM>DbJabA[]@l#-_LM,T8"LPV*+qnXV/e=n26K95=hl/:j01#CPVL!m#
%0Kip**R&!GPBoD.+M'We3(:+Ze5n&q<![$;]\fB+6Qj?Q3M0+C;Zt2jd7uXiE.VhOOWbbt(VZGsP7kg'bWZD:OZiYuV=qD//cq@W
%Q0<\E2Y'\J.D2njTB/2H)'cAPo3d_Q.nY+4+4Ib_NG%"V)jaJQ=&WCqM:Ti]*V?FOS?f%#?kB,Yk]D0=FN3ZHi'h,,'op[f[<.au
%q.'PAGN%3[eG.4hB+Z/U`lp,<]lHPgb1rab)41jo0qZ"^2IXpu@3E_DOF))N.u\#cjYs=lcEh_pTNc*Q\hJLu)iRifdGZf2RhB/j
%)sgOXG@&X-L0TD>JXC&G8u*TB?:b@T'drZ(bciG531tEq57`BY<3=,&QO'DAI]2s36l\Sg=5$7dahgpi+6,h8SKh5^Y"Zh@.W!"m
%XbbI[,Gg@N4u.Jn&PkX%]-Xj@qE,_)Vr!#E==cP/3\6$U89YW&doee#0jJpb.MJu[$-9GS?Ue\h#uQZP_,Q/Id9`pS1Z?SgDg(n_
%OK],"YSCS1DW?W_n4;Rh^ne@3N;S1USP-#\8QLQ.%K.Ahd\)5U\F$d72/PWmd".jrVJ)/o0Y=/b'`Yl(]'O[fWN>&-Y\-PgG<>7>
%hMAksH577!7t92!>MI/$h*W!*@RM8-,nKB"T1]o"8oa05Z6]cJ=A=/]GSAR,Ttic_C<rg7]'$I"X7U""oei24YbOs+8>=k\%N:"Y
%^/csH/[1%dGE.m8#;kThj2,iR7Y[ML2eKesrGh\t'@EgV30[o+*0IG]=.DG`\U.'<Q9+B#*43;8r=:uYkoK`r5KEsO^Q\;P/)<s2
%d]1kFS6h3N346sl24'tbQf=aD6#0Pr/deKXbLh%*Uf6u3^3aoO$4#N-G&C!RdPbt;ro&K@bmeAfY+;6<K-G#>fp`H\P'Jag8ckAh
%EsSr!oBaE8c<I^4i]ibpB8Ic*;ht7fB4m+`mCCj\XF9d2Cu''><dj"p=cEr[?1^;0O/)sb[4-A&pp%kPrg65<d,Hg]mYJYTT['K]
%Kj8A5+]rO6Cgo"Ap*-k9#qBt##Vc7\$8@[m*Gd^$SX3b<BG%>$E'O:FCdN:#^r)BuF4>?V?3/=6$ClH;h>*Af"'pFcZbjgr5.=X\
%8M[bDNi.UP,>hCb<L/`2&=qEcGuG+\h=A#FV))_H2g+2cPo7]]I*2?I][C*&p1AB6VB>a\<%[];T;'-[p=SOWX-PB&-n<ug1Nq9.
%m@QE*!5d*sRRiWJ>Qqg3`]*d:8kJLKXNP+[ad)A?-275q>thFLZCNqXVs<e'Kp(7M=se0(DI/'f#K6iM*8TT>$E[Pr1#T>F^H717
%\rbErY9@\L?jU,^(X%Y_P]es;o;*c#oWc]cO%^H(/LRhjbZ(L7^tsqh&er_$Pp72!l@#F1@n\:l'pZ-g/uUC<'qYBX2YF%dP:eEF
%HJu?>%r/d$e3ZJQ@k95`1WEfO+21jg8j_DTpCDcQTNY#u&6b0oQf[gO%USq7e<f;%e(SN64cp*,f2Tu':XqdP,!R9TG04H<CLA)/
%B(t*&LRjfGOX8&$m(2?<;4;^Q20M#de\EQsYM1V^8$;4bkH_db4b!ot?qT?[o<s$arCAL#iiupodd7]aOmKW(Nd[QpW$]46A+`18
%nFjHlm5=J!l(;,/b&TAAqTEY]:P!Bieg(ouQ67Lf!m`^pU71ogH:%1_^l?29EirpU/<Cm]Ym'Ei?*1d7jS)@<4$DRt_o3C"LngkN
%D9#-eb@iIH+ICgZ::8W4bF%*=X?pB[:fP*<CgCkkJr]`>:[d=r?Ed)0BU<ND*V:N1+SO5IP5E+3:eR<`STM;9Ef[neguBP[T76'7
%s5;22!u[=Q+^[D3SnZ,3K:V4P3He><WqC(R;Ou)uOG]BdPp=7hm:h0j/5n=o^c#cARQ7`8F.`gVc"cK_okg'q)<Cka:,2'OXeqQF
%mKj.J]*OH2-]*qP*+p!lB;cS7OA.g&A5`\#g=VP9qDF&!45'&^!hcJPi&u)%NrpMS)?Fto@%upclGFl`m&30aG/A>9[Ot^SPIrDY
%+0(f>jdlSZKeO`>,'$doLt@3X\rLP25H<bOP*60AlD:OuF&"O1Z,&B"<Y9b?hjiM`StFEkTV`-:R?a<UF?-:LJS%9m-e.t0^_)35
%_J:>60^`uqUZ\Y,35*-l+b'bIn(_`Pb<_\.9P"[s^"?R1R3pYG;[Yq76Nn%dOhC/QRos?XRPA$jkije4A)PCtP],-Mf0tl@#YWMg
%+ljMB%(`"P0rTKM=-/u.Dd@BWHul)II*[`TQ_cJYNLd8EFAZ:R+%K9E=GoR9.4L2CYQcYdp0&4q3\b>LY=>u\@FVZ>`:/aA;A6<6
%oIG'#Pn[774Pioc%8>"QLD^\'QR$F<d#2UHLK=?r)UWR54[r$$kigI7cM?6gK,=R'1?I/)7V=1sJ(8aE(Is9pTtHY\%)??eePEEe
%g,u2OeHEV\L\J^4+!.f<O:eq;E[hjCOT`L4nl_+@)Ik62iu,3-e\L#kCI,X?P3R_+mHCCAE5d[=h/eN%6Fu@RoBu+7PP]8^Ru*(%
%Q:<Seo+O]!caQ[fJhaoA_Am<>iW[&er/%U!54=uMOgYpO:I@.$?0F'rkaflH*.#M\HgS9-*VNprMQ>Y_SfG@lGV9ke7J5@4U1RFH
%?%OE8%0-#GHa@B=NtSF^n6ak\c&f,GFhdB'!4MWA5I!C/_`iec#Yd#lMsfIoQ*nWW0ihoCSHF-`1YKC;20K;HNKs%iZ%]L(oBNo0
%YSsKdb11IKlk&-@n_*YfVJDHqfR;Z47a&bL4*c"5H*U%<ZuDM309:N!,M;c(/kRTt51<Qnj_rfA[l;H"mjCEH9Qbj*g.X@:r2M5o
%S`USd/l#/CgGS4_j!$m_GEm\q\#(?Ca3E.nh5GgjUnk?6^i_\-$@8Hr!/XH%+6pdZ]+rSje<a<o!4D+#iY4SNc[P<m]sW^&92#2]
%*m,b/<W+*aE:qMV;P[](dm4q2@VJHQdMkC'G<pqiUcB'ajjg1]liJu)Dn7c)F?>%7b,us,RTYcg/o$-[YImt>J"G)TXkk$snc&0.
%lr<m8pC%$'CdAF)d$Q\1Og[WrkB]95#;i*Wh[GFQ7#rpkIlp#1bs?$sVfH8X%Pd\6?bNe7L%b^Q_V</bT`cNr+aNV<!"*2kl0M!#
%*g0-Y_;0GTY>XD*,$;Go<*]1e4L4]#q.!KMKbL3=Nu(D^^j?]0"U78dmW!0GP`(!35%%^?32<d7)Tm<[$e``BqU<PmMV^T-[Vo5W
%a7]bHQ.pQW%J=V?!4/de`MEat_[1&H]8>j+-Wrq1XMl(aKIA?Pr?*67@8>HSo7.$VSctAU\oj,'cdt[*b5O<"g7$M0%;F[T!N&bM
%LKgt%FH*/6K.Z\U'K1$o=MKe?0Q?SM=$FTf4FmrcbPh:9,JW:,[h0A8&"LX.dB(,HFS1N+,lsP>W`q\SS*Lo,ot#hT)!PZO)--lL
%`BIAR3'95sI/qE&=$t$Fc[#/qRqjq:lVW1ugO7B0=rtj*5;]emVPH.+H@B90Al4l[IhVi`Y>=Vr<'M4tf[8c=2ac*gficbZq%10b
%D03mtE;"Bj9YGd$0*_Ze>-*2PdJ<dobN^=oIHpINXAc<b%64h)S&4-%!Q]'**BC!Z;_kapop^P%H@!orD7=rXq0?u.P("T^2Np*.
%Xk_3RH5k%B]WTNk6\`&:SZ@Xf$o[;g)$G()`,X6AXhmqb&Dc.W^`!"BTo.Kf(@Y'A:OCbh^W]fREnsikh:C'4I`d^uZ'p?gqG'-F
%.FjCEVJZe#p^V\@48n1Nd`4(OHe1:LqWt)!T3^i,mBn3\)Lp%FQa5o%06/NbrQ*%<E(/3Mb&X(<ELc3rS+'J*7*.9SKr?2Mg5T]U
%840kIXDLWnH8GC8Uq5JBka$cS8r+0"H.('iUWOIX.`k)U+a8jn9ustnj:lYX;fGK)LmBN("Ug=d`#3-$)<#e"[]*b>B/$]s_!J7"
%<,pOSZeI%+->;390jm@LPM^`1HmH`C+r+nNLCD"^lJ.2BL9Wn3G]oT$L"Nm&gP1C]r8h^>ZjGs;Zp;OQC()U*?K]r784E2'"X0XP
%0\b0!$@WG<s'TY#hk33F]0EqoA&C<25Vs.%]u.aT\UL=_ibl[T,VL3(]hf%<@lA]X_p"XC)&Cr"^""@JNgCfO2/93tV9R;q,CHF=
%U$)Y0RfWGTaQ?=BG&q$4abL&=Tjd/KG+3-"A'D1KeWprZS)V^)&_@YPLpm-QnB_8k0<OXZ3TNo<F$$OsGj'i[iCJ3mf1cKG3(G=b
%M=R3O%N.?0mh60r]]PHhOCsjj`Kn&WXk?cOkE4YNHO+jK*d>WT9\ahcrHN?ECu"j6=o\!b&.p7D48,3n,1&_X;LfUP4au&;UA>bo
%:s4=7r,T)?@)&.Gl"2d5:hZ'gs5@@]AL]QWmY9WdQr!$bM]p.HMO*8c6>*sPm+$dQ,DmB,adaUOU!q+k8"(#@md$lsChmiLYBse4
%.,anW*NTXMGA.pp2Pt8?]7`QH$>tK$GO:N\C9;'1cedV6=55'eB*np@Q2d.s7$srI-?4HE8lNdFqs<?en!VR.bh:5/Ng\R,6T?]a
%75CTP[iB1X/94f':YfJo`<d:H"k(\8k0BD%_f`SjbNF15EXFgCPYA\,ZXPp(B.)PGWd*'AfA2.>*Y/g0Fit^u0k<2qZ/C\DhJA09
%O7P1'TS3qW2)^D1[u%SS,l3E\43sZdl]@>)kE+eb/!dkhliq6rm<a3(9P7o(=3;L&(VoIloLE*35i_.:TRfPB>Y/`4:GEjFie8Dr
%?/iPX(Wq(bT_$\,7W\$+8Zj>?VAZ/@'0iki^dV.bo%E:I@;(eI!P16*2k#@I"P35(JFTe_4hUCcp/"F$LL4-6D`k\doW5d^&nE66
%c]hb9(Iq!=69H[UMU3M8EGAt;b@CuI,_]U,b6!g_MB=WMA2uh[C(C6%9YoI.\$KQYY:>#Yl$`32b!SesDl^D^KgEI7N-j&bp,"=o
%W%dWu[1<W\"Fi+,2g$SYEPgqE3Z/mKTPgdbd,GB(22ClW@A-rA\)L5d>iYp7%Y<08]`<XLb+t@P>UdrIKJ_(+Y*T<ef-/!\e_J5r
%P(JckaM:%'b%ZU[>.s^fB53K,Kc/C\dP,3_N.1QX]s8WsSS6n)L)VCNh<o;WLD5[OHGf&T5O@K/RqBJt;6;#cP%(F7)R0bfcOUa]
%=@KSgI5@s!4X(MD,FdG/MMsN76g$#IB^e6JY_BP"N@o/=m-!qd40:MuH^^k3hN*`SDRkTb7:O8BpO-]I8?6[c):E#tHh[9@ojMX3
%-@A@\96=%E^NbhK##h5h+:/aYL2uos[>*!E[H@:uKAHX!D`u,afY`,-XfYa%YTXLIs1hp,h]$uhYk^P@QGoQc^Z()iIpGJ:COPE?
%%NPIOemC*f]`uA7o/FmP0VaEH$1Lm'!_UD>J)8DieK&As%H2=>B??&t;bqLIn?>>skJ4lZ"nrMu[=7;Pg7CZ&ghhBFQBc-g_&t72
%]D`nYjg-mWfpG&SiF`Zp:eUqJFFn]<qKA.U45X6+&DB'7M(tQ",E_iD8Lik7LZS'p<35Z[J[K-1VXhU?Ct7u,#Q+S=RVI-C7%7U+
%)lKuP[O^0;$Tj-^&MEFqah!B$#jscZgQ:C7?G8@NVY11;:\[$c*e9pr=oE$p=\XpBXrJb-2q_WupJ+_jpm\HlJQ`lF48=.q&d7<X
%`fN;;o]pY5\"-3UDN'L_!TYLs=f-uaD,@V;3)-tsoI%,2M\41F[4K(Q*^U8m:DB1\X-BsG6@I-G06Q!<_&0_`,O,:s>CZ(lq'28P
%bt!T14r5iZf+leVUW*;=@OMQW07E*q=OGm08L0u;UJ`mg.#*Mc(Q,EL`UCd.ch@pBn9O'UL.9JCA)aZj0U/J[j..IP@rtl_^87T;
%JY0D+Sp8t[YnO'-]<4*]V#Z'B$ZiEN)&sP%\IgQl#nJHkG@j5m=r48^#UHDClD2RI2-%#oN`@4V=?0Nk,>0$"341ikZ4c\N:6LFf
%&WBR8iVO%7X]Ipt<LeJ2?&<9]$c8['Pq+>`o/IPu5RN?o*a12KN,i+9Hb4$9eseE[;9F*6G\?n9Q+gL])^_+#>M0%'%3:[\GLooK
%]UPCFQEMh<fr+M76T<p27q+KUY6kKZX9!fUDqT:$$3Na2D!.[H2>;'pZ1jJ"'^_scCuOLcX4*?<l9!<YZ;=j)>hRCCl6"E=T!Ve7
%rB5>)lWme$M2l4`m[2%pYn2OHj>,0<l_EIoHb7k9%G7;aJ!,q4jt>+1Uk4W>;S_:QPKHcr$F$SU@dFS.X727@[J9mIlCA:o5!9mq
%[m\tZ3,4aX?Z3F%@pD!:_^)@&+)!_#JtD-P^m8K)no?"r5$]5([dN"><S_*EY6,A_jfK&eFm:*ZKI+#$4BdC]pCT1/1LmkWA;)>"
%j-QdF7(ArRINnA5?.TpQj6iA-YoF[MeCU/HRg'Mti!&$#f%>Yaf.$7>Enk"Tdm3&$lJ%8*:6C?f0.ANKr8i$3P&Mg;4RSXOZEc@"
%QX,j"WejLr*nG,H(;kOF?d]XPpWW7uX/%bQ+,X'1X"(\EcU@$B*i_/3[a>&d\Jt:2*=RV<F/'i3Kf[f8Gd*/BO'L_QDq+Jk=<uE.
%J[Y?@>UPSZUJ(s+:C'8WZ3]ke:oGnYQ!0Q\RG(4f]c&!dkOJDbZ9K2k=8,Aq$\'5MVC/G><C4ePdWBB*G%h9d*(g=8PcK/!;/6d`
%hJD49\A<8kjQpfOgY_EEXk?G);\99C<EaAG0n<Yj?7YN]P*]8V/qai4<j=AO#SkV%__SmVS1bOs<E#-5DY>),BLLCXU[BAKc]SN#
%i\jK$RV\Ql1?%T2dF0)O?bD)Xle3+sl4dgiYHf`ghFpsDD=c!U[@@UO;\1R=7T29'&]\<?muGlCdT4A0bN3RpX3>IR^?mDiY:dkp
%`hWhQ<2ejk0U'LqEo+J(nh>#&n;WO:O_[#V]qJ\J-o4m?8NT\mhLK1/Uq=k5873oqWFKcP=N4:j0U%+Q5c55i"[cWr#p`hja[/0]
%$5EGQ'M%5kK'nE/A,(U2nD*%7hT^AbpBU!`D`d[LH/sK1h%er0A]5eCC:"";e5=).!9NuBCGl;16Y/`_kY7%9*P<H<OHuSb3QrXT
%LFlT*3'$XMOmq9l:9#8=*^a4?V7mpXBiHeb:i+ODr*Y-Fk""BuK_U@H,l"0qL_q=63[*QX63Uaf\iRIm_V]@^]_#9"7Zr.?I"%*&
%%%P3M6ItM^EnPGm2\iac:3.R6Uo/&ZNGs#T/C#\I)I\r=R8fm@9_>Y'!l5gVp5hV_i$I9Y'//G0iMb8TL$::D6[O"RY*l5Bl[N1D
%4dNA7dN"8q>E_-%+<LlIGl=nPWat:t]pV=9L5>^M6j?*biB@8u%/+l%*2PlTqeH`(.#Zq"P#Ppu$RM]AQ^G&![[P?hSO([M0h7!0
%E`1>.J5HX2ZQ*gB2J8[HTSssGS9]&@El;H:-$aEo&'tm:?*nI#eRo`leL\Gu=R,F.n%!Oo<oRq:7;<`@W]2[Aee_C:?]/Y.`Rtd7
%]5t!fHYn@MW_!lH/q.l^S:dZh"Oo[(P9P7o=%U(V*\Jue9^7`gmYA!;D@+g3]DpZCjcj4+LIr^\4Q,VU#n5e!".LOj-tkEEo2r/P
%,KFJ)h*S]`rB^Q)]X\mir4S(eqB_HAUaYR6OJC2keSBTe.b:"%M^M=nXf,04HE1[S'U!E#.>m9PAq7]PaKD>N#gPSBkrK*ih#psP
%a0B+(iXfPf:^ckp`;p?ONK`Epcm$PQ9e0H10L/#&bshQ:9S/46CAdBfcVP1_MHM!sKNL3b--n$dREc:ZP:.VPXYh1#;:c,+1LjS.
%f4>+Nj6@Ifd^aiF..*YI,IcjAAl_Ak8DEomU3O.X]kq!#HId=+!J_%S80pnu*Y/lCi**.kAh;3kf(3E%$qRHCG3+h@%fQJVB-@0F
%'0RgtQN2C91[!U;+\33Y?&@X4lM9p9kJ%pEXdKFKs(h;'#[&rN>K=n4O=?%WRd/EMPBZ5E\gGt1lmI8A)&=q0.Lu7-E7=uc1>rsm
%bH33[9.9cCQr!')#XoIm]WWL],0m<a2Tq;t66pF/<D0@@;<Dkj23Z)-_pcLbSqeOF,)WuT"-Msp9oKO^^jXQb;@H"(hQe#/Ge?:-
%h-8"3\ucK/[QhKZrsYJq5LpV%js`7EI`p;J^SrqL;ck<NK(hm%F%D9-_\J,F)>?$OjG_*AIn@s,AqU=\AI0U4dW%jIrn5&`<aQu?
%"VRJ"f$PsrcX_@rkdiGm,Eqr5iu^$*-VRguSuS/RCUh/PjqbNl5\YB]+@F%[&`cc.(dg\H)4/^X+*n]hCJh4X%mSp$2`#Ap404)n
%URTB6k7#>^kE`cXF`CIRbD21Jise>7nImTR-Dm#$[V;b>A34I)kefZ8h!S[u22oAO3Gf$Z-G/3?%2qCLVF0\i.[7%[9G)'^pVi-+
%Ct*hah`OIc!0DlC1L+Rq8r[8hb@=sEV#RcEOmRl\?%5tiV&G7`'amq1op#'70L[tm0'F:\BI::GY(eB!$rkXF\C16ma#A/\=bAIc
%CheTS^Pd&=c:_:]!fN%:(pr3=0fD\P]e\Z&5R-Zg](%oE44JAsQS6TC\&!eBkgm@K&2;O$dH>f5JEcoL$n?oG=]I07WsVp!]]ID8
%W_+"87T?#"s%kD.T3I5!7IP0gT;@-)rPeDH"F\@p^&TW!\1fnnbl'*bRPNKh3f%Iu<#J^jrQ`Z>7].l/OQ,[bb*M\o^(-C(CV,tF
%hfbL`]g7TA$9E)&9UpC!g9Ta^[$ogElTB#?JQWQGF`3S^^)em7Ab[BDBhZ57Zn&Wg@)cO'.=rR=:^qnk)<8(Ag;+TU<6Jj@'Up[S
%:5SS0.SH&hfnbsulVusX(6s/M]uh(Of'#C`Ts^N8[A_5LaU>9\K3@B[Q-s1J%]&,U"8r$pqe,N=]@Fp=DM@10N*lC\/bpI.MCaOW
%JRu"rBa?PmRH_%/lab`oR`3Q5UoHJm(lL@haNRC]%k=_P_E+9eBAr-oFEZ5^-<.)eZIZBn*sE:N.*pG\F@Zk5e5W!0U:rg>WLXZf
%i2q,CR6`893[<4so-"J(;J'Ce\#`ft+ak7q\b;e^mRq"<`)X'\<_+1<.*7:3d?\VlA`R-Vi>WBSr+<,36["o7GjqBp29hsGlU$5*
%-GlKqTqj&0Q3p,P?ZRKp0hQN*Ga.mB($6nK6-L;!3uub/oI:/*d%0=@!Gcjb-kp]=\rdXp8ngCF/K^LE[q3n^n8`:iLd-l.BrX>m
%m82'4(iRE3:TBO%JT%XEe_&a-1#`RC0f):$XH=HDi.L@c9:+SJfNQ',A:hgEY"b1A)%G_LeZ-jG0T'Yhei*k"ERM22*/U'o%5D?Q
%/$!;T5mu8[F@j+pJ<i"Kb$=Y[DPu&?:TnH^*,`%[;Kh2E%:0Y><!#0:a7mXuHD:3fGLnP\"6qDH%&\TaSf6+l1&r1Ah];MK[600)
%XY31G:Goe)0S1>UN0WILU#-t3"VjJNgTr'0<b4D#:>0J4lM2m3$AedAWM&+bScEOLM(qW(,nY8;mYZ-[49h]`j=@ch%5rQo)l@s/
%ra?(nJst\(pS\TO.LVS_DHssEfaJmE0cahpS_a>>[%<hb9+-_bJZfMa9?2c;0$=6gWr8`B3)K'XYUD$Gg`(js'ZMDeC:)bBL>f<u
%LMbES<_VsY(MQ_9YQ,BiT:D$#/81N0$"I%f\h(Y)V],o2\iaYn)SJb6Jt(]FfJu*V&3urLr2Z6_oraT(VIXHgp7,#]>q$$$VBNq&
%\fhM6Y-En0ZGNDd+fo0V4Mu2c4)OD.p<k_9XU*"=V4$++nd=5XlV/`q'rtrE;GR[4f^#``"m]c]lC`mnkoX-hO:nY]@2e;OIK`Rp
%%N!-UIaeWV.sigHKBQKq2G=RTd[fQI9?gR4Ga=oc$8oYkRbcS0%EUnEi#-uX2gLV!!e"OJ*H*"/2Hb$OrQ^L'?d@[9lb$P95?,ih
%7hg(V^O;T7bscJA460&NR(jtY7JcA9\r?_%LI?Bd@9sk<&rb*2Asr5]FSj:O'-OB%28ng.77sL++%Fn4#]p1S5ffc%L&1FD^JLN%
%1:6u^_k)H\1sMcU?Yn(?UKR3F,+hZtI&7UleD+[GKsd,@qTSKSg%BddB<l!24;HPU-U/`,[Na>*h=.sbh0P'>Xp'\4MC6s-7V40s
%@dG,gVE]4a55#-LO=f\oTNZ"V_qrKXD%`Ta-%YUNH_eP?dVU]#Vce+1-$>ds07'k4h2.L\dZhT1\nlF2`</K&>[RoiZ'ik>q%-Q[
%j_XW'WU(LUSjPp:TX[gu=Ve0Zb$sY)MSJTEdR3%l]+rCMh)3PG7'!2U*Xd3&h1A=1nMC(@_><B%!Q0/^b0b]1gJGeQ6OcUt`'IDg
%HriRn?H$SP4E2R3'3N])rDL]\[;7L,ZRVJU>YgahPE9s[G#l74Eh2]gpauJUZ)eSH\Pi+0jk.BCXZ'U9I,CO#r%$CC<PMHLYYgs*
%]]o0)5n.JYd[@@c.O*",?5Y6Vm="BY>!)dX&=h4<pKD7!gKLddA9GfRN+5/+o(d%-6`T6MCV.&2nJ>*l;o0[SGN\8_cOad8GfPF@
%q!c7QM4OU#"&h_0SJ82q=J"JhAr;/:47a)Yi9NPUXi(1MZ`ViX*Q;J3/D3moOrF,oTV&jEi/tirm'%L.j4BanJLOGDWYKkEO"q_;
%KSS17oe54aI9tcWC.'/D/k:1]<s/:R5hu!(K.A%:,!e`Fncni\VV$nqnK!J;91'DCr5:>hkSouAM=$32^H4H<jXba&O/.=8gHHs7
%2K_ORcj77:-ApRR[kXG`$@HTT8q];r4l[ktNJVC6l<<3k[u?pH<o[%S>46q0m?>YQX&_GX:QLF`AU"LLoJr5Hc?1&>)jd:^eD=m%
%H#N@3F/2nK.jdhsl&kE1@N!trqf=+$%4ZTm-(_F..R08(RMg]]X"l\6GD[3:[JG4-(>GBp+4cpaRb-!be+Kt)ogb=>?6=;RrP`,m
%qNl\\s6nkCc0PE0qX<IR^])-croX+XrURjMhn95CooJ#1rl[P)nGU-%a-Rlsq2=/1l21M[o'-$9quNGfjZd,Pp$)38I/26@rUGXr
%TDnJ$J,CCIi(`qT^\ZKas5EEqq2>7T;Qg<I~>
%AI9_PrivateDataEnd
