%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1_head.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 133 152
%%HiResBoundingBox: 0 0 132.4117 151.6831
%%CropBox: 0 0 132.4117 151.6831
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:55:45+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:55:45+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:55:45+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq4&#xA;kAEk0A3JOKvJPMf54XV9q0vlz8tdKPmXWY/huNQJ46fbnpVpKrzp/rKvgx6ZEypmIJe/5Vfm35kA&#xA;m82ed54Vkr6mmaQTawqp6LzVVD/7JD8zkDKR5BmBEc1h/wCcWfJjpW7urqec9biWdmkO3chVH/C5&#xA;Gp94ZicO4oC8/wCcYtNsgZPL2uX9hcA1Uxz0AO3gqH/hsiZzHcWY4DzsJXNb/wDOQHkNhJa6+Nds&#xA;lr/oupAzVHYepISw+iVRiNR3imX5US+k29C/LX89NH81Xo0LWLVtB80rt9QnP7ucgVJgcgVO1eB3&#xA;p05bnMgSBcSeMxNF6fhYOxV2KuxV2KuxV2KuxVivnj8z/JfkmBX12/WO5kHKCwiHq3Mg8VjXoP8A&#xA;Kai++KQLeP8AmH/nITz1rcTQeUdEGiWsmy6xqjKZOJ6MkJHAH/kYMaKkgMBn8w+ZbOdru5/MnUI9&#xA;Sf8AveMshi3r8IhMgWgrtt9GHhQJ30SCRvJupTtceYPMF9q9+/2ru4dvw5GRv+GxoKZS6BONI0LT&#xA;IyJPKPmq70+4O6rb3RU+O6oY3x4QjxCOYZlpP5z/AJueUH4a7bx+adIQU9faG5UD/iyMH6eaMfcY&#xA;CCEiQL1LyT/zkL+XHmlkt/rh0jUXoBaahxiDMTSiSgmJt+g5Bj4YLZGJelggio6YWLsVdirsVdir&#xA;sVdirsVdirsVeJ+ctf1z8zfNdz+X3lS5a08t2B4+a9dj6tuQ1rCfenE/zGv7I+KJLMCty9S8p+UP&#xA;L/lTSItJ0S0W2tYt2I3d3pQvIx3Z28T+rEBBNppJPTYbn8MjKbKMFAmprlLY0SACT0G5xShrmGO+&#xA;smRSCkoqvIbH5g9siRxBnE8Mnif5nfl1Z3UQmBazu7duVnex1EtvKpBUcl3K1oQf45TCZgXPIjlj&#xA;vzZZ+SX5rXXmGKXyt5lIi83aUvxuaAXkC0AmTYfEKjkP9l4gbCMgRbqMmMxNF6vkmt2KuxV2KuxV&#xA;2KvPPzn/ADRg8keXmjsZEk80agPT0iyI9RqluLTMg/ZQVpXq23jikB8vT6rbaU7arqrvqvmm9PqT&#xA;3U7eq4kb9mOtQOPTl922HkxJMthyYxq3mHX9UnMcszJX7UEZIoPB274CSWYjEC12meV7i6YEryr1&#xA;Y7KP4nCIsJZT0ZJa+UNLIrJSVlNGCqFUEdvfJUGviPe1P5N0iVqRqY2G/JTx+7qPwwcIZDIVS01T&#xA;zV5dr6xbVdHXaWKQ8pETxVjU7fd7DrjuE7S8ilev+X7K/tP0xozCSKSpZFFDUbsrL+ywr0/28BFp&#xA;jIg0WTfll+efnHyWsMM7vrXloEK9jMxMkCjr6EhqUp/Kfh9hWuBmSLovrbyj5w0DzbokOs6Hci4t&#xA;JdmB2kjcfajlTqrL4fSKjfFBCdYodirsVdirsVdirsVed/nj52vvLXlBbTSOR8xa/MumaQqGjrJN&#xA;s0i+6g0U/wAxXASyiLTj8sfIlj5J8oWmjW1HuKerf3I6zXLgeo/y2ovgoGCPK0yO7JZnKjgO/U5C&#xA;ZrZMRe6hlTa7FViNIWcMnFVNEateQp1p2wBJpfsKnp3JwoSfzDp9vfae0oAkAX4qbhkPX7uuU5Y2&#xA;LDkYJmMqfPX5jaTqPlnU7PzZor+nqWjOk8Uor8cNaPG47ruajw5YdPk3pv1WMTjxdz6a8ua5aa9o&#xA;Gn61Z/7zajbx3MYJqVEihuJ91rQ5nunTHFXYq7FXYqx/z95xsvJ3lLUfMN2vqLZx/uYa0MsznhFH&#xA;/snIqewqcUgW+NPMer6zJePr+vSm98yayBIENf3KP9iJV/ZAWnwjoNvHCNkH1GujFJBePelS/qX0&#xA;n23H7A8FpgTYryZRonluGGJJbgclLAFR4+LZMCmmUrZFBDEq/u2+Eii71ruT2woVGYUArxKndR39&#xA;sVXHdasKH9gDriqJhvACzSxrJOOPA9AvHxHQ1GKpFrWnjy9N+nNNSuiXhVdSshT92xNA6A+BPT6O&#xA;h2idmwHiFHmkGp2ENjrhhFDY6mvKMjcB/FfnX8ceqnePuTT8tvP2p/lv5xS7jZn0e5ZItXsxuJIK&#xA;/bUf78j5Fk+7oTkSKZQlez7htbm3uraK6tpFlt50WWGVTVWRxyVgfAg4qqYq7FXYq7FXYq7FXjOs&#xA;IfM3/OSWnWMqk2PlHTDd8G6G5uCKMPoljPzTIS7myOwt7KSFX2GSOzAboNmLEk9TmOTbeBTWBLsV&#xA;WVm9anEejxryrvyr0p4Uwb2navN0ZkYN6iBaMQtDWq9icQp8lkktrHS3YgcxxEYHY7dB0GAkDZIB&#xA;O7zT8yNEhl0+5tHFY2V0BPUpIh/2sxq4ZOxwnij70T/zjJqEl1+U1lbyEl9Pubq1INaj96Zab+Hq&#xA;5tA6WXN6thYuxV2KuxV4T/zk7em5ufJ/lsmtte3kt5dp4paqoAPzWV8U3QJfPOrXjXnmPUL2U8ls&#xA;1IT2Y7D7t8l1Yco13qnky0jkZriVeTyu2/sBWmMUZDvTLeCsHhCUoalqfDU71HvkmC9ISicQa0HX&#xA;oTirRjDAqpIb+de2BVWZkZisQIWgryNabb4Vb9ZI7cQLEPVY1aU7k+FPDAqJgtlvtKv9Lk+JbiF+&#xA;NezEUB+g0OKQaLzy+le48n6ddV/f2L8C3ccGKqPoXjkejd/F71PzBEk1tFcKPtDr7HcZItI2L6q/&#xA;5xl8yy6z+V9tbTtyn0aeTTyxNSY1CyxfQqShB/q5WG+T1fCxdirsVdirsVdiryAAaR/zkzOZDVPM&#xA;Ggq8R8JLeQKV/wCAtyfpyE2yPJ647IylSfxGEkFiAQhWFCRlBbg0cCWjQAkmg6knFVkNxFMpaFg6&#xA;g8SR0qMAIPJJiRzVMKHjv52Xuuzap5X8taPqj6WfMV5cR3d/EGEkSW3p1oVKt9mTsR060JyMYg2T&#xA;vTYZEUA861+987eRJ/qeq6rL5i8szsqNezhvrEDMDSvJpGpv05EfI5ECM+WxcmBnj3O8S9V/5xZV&#xA;v+VZSyn7M+p3UieNKRrv9K5mh1k+b2DCwdirsVdir56/5yE5H8z/ACkvWljelR2rwf8ApiOan6S+&#xA;dJpG9HU5O8k5B+9v+asPevUMl8tj6vZwMq8m4V41pUnbJDk1SO6pfXfmC716403S5o4BbqlAyqS7&#xA;ugYqWIYD4qjtg3ZgADdF+XtYkutNvJ7uMmWyimaZNxRokZqHv2xB2QY0aXaZq8s2gS6ncKoaGN5T&#xA;GmwPEVUCtepw3sgx3pLYdd8zCyOpvYRy6ds7mM/GiN3IrX6aZGyy4BytkGm38N9YCaKhSajVIHIE&#xA;dgckwIpP9JQBI5Nqgyb9/srthYvNIYuXk7Uv5Y7yYKPAKqH/AI2yA5N5+oIa6YtodqD19NT/AMCo&#xA;yQ5NUuZe7f8AOHl0zWvmu0/Yils5R85VmU/8mhkG7oH0Xih2KuxV2KuxV2KvFvzAvRH+fPk64Clv&#xA;qNheSzAECkckcyA7+4OY+bJQYDLSKufzd8jNcMnwl+R5SxiUiteodF4/jmCZ+TZHtGMTUiyKx1db&#xA;+3hvtF1BZa1CwztyVhtVRINvvGSjLuLn48uOY7x5JlF5p4yfV7ywuYLnp6aoZAx/ySvXLfE7wk6f&#xA;qCKSXzR50stJYSa2/wBVtf8AddgpDzysfsqQhNPHav0ZCUiTupMMcOIn4sC1b889fqU0fSlt4Bsh&#xA;uDTYf5K/1yHjebpsnbGG6iOLza0n/nIm+t5li17Sj6LH4rq2cEjt/dsoB/4LLI5LRHXGW9bIz87r&#xA;i3uPJuj+d9GpO+jajbalDINlaKSispHUc24V9hluMjl3uxjIke5CfmldWNx5Ma+QCbT7u1aeMkV5&#xA;xSxCWI/PoRlEIkTp2YkDjJPcz3/nHvTTp/5Q+X0YUknSa5au1fXnd0P/AABXNmHSy5vRcUOxV2Ku&#xA;xV4B/wA5HRej568jXew9ZL+35DrssYofb99iOaT9JfN90hFpqleqXe//AARGPQr1DKfL8Za2iUbH&#xA;06hqVpuN8m0HmgIvMMOkeadSuriB7hzMAipRQWSoFSelflkbotxhYCYaNDdx6D5gvrlBHPfQXMxj&#xA;psokBB27dTj0YkgyCEST0fIV1StXijUH/Wljr+BxPJI+tGaZ5p0PTtGKet68/oNHHaopPNmXiFbY&#xA;ADxw8QRwG1byjZz2ukRrMCrEluB8Ca4QNmMzZZpplP0ZI1f7suT/AMBhYPObTiv5e3MhG0s9wVPj&#xA;X0xXIDk3y+oJbPto9oD/AL5r/wAKMkOTVLmXuf8Azh3CwTzdNUcXewQDvVBcE/8AE8g3dA+j8UOx&#xA;V2KuxV2KuxV8x/nbd3X/ACsbVokYq1vpFvCHUkERTTqH+hvVZT88w8+xcDUAjdIbHSLe61SS2tlC&#xA;28TmGIhdykXwhzTclzv9PhmrzZOEW6DV5uFklk955Zu1eNx6LkCaMfZalOo9uWU48vFyaNF2hOEx&#xA;KJe3+WtQN1pyTAkwugeMMdx/MvWtBtm2wysPfiXEAer5/d5fNXnXzHrF5Ipj067isoIQxIRHdgzi&#xA;v/GM9v1ZjauREPe6D2inIChyijdZ0y0isI54ADUhSRXqQajfw45rcWQmVF5PTZTxUWDeZJoY7dlG&#xA;9TQDv0zZYRb0+llYp6nYWMsH/OPutW+oChGnzvGrfsvxeQD6GoMyYH1fEPTxxcMQD/NYr5onlH5H&#xA;aM0pIY6dGm4oePFUT/haZL/KuRA/uS+hvyzt/q/5c+VoSvBk0mx5r/lG3Qt/w2ZzqzzZJih2KuxV&#xA;2KvDP+cnohHN5I1Bto7fU2idiOgmEZO/yi6d8U9C+aL9CF1qMGoS55H5Fjh70DmGT+VWraROenpb&#xA;k/MZINR5qFlpUeo63r2nzJ8N0xMEjCgDGpidT/rU+jbI1zbDKqLWmy37+VNSgnidZUtpIyHBBqhF&#xA;evX4Rh6IqpIW7FPINR3MPt3H9MB5Jj9adWmnaZHEsqW8SXG37wrQGpPSnXbJU1WUzBYNyJohACp4&#xA;e+FU2WX6v5cvZq0osjV6fsgYqObz65/cflpYjo0zyvTeu83H9S5Do3fxoLUVMdjBH/JCB/woGSaj&#xA;zfQn/OINpx8q6/e0/vtQWHlTr6UKtSv/AD1yDeej2aXzZ5ai8wxeXJNSgXXZ09WLTi49VkALV4/6&#xA;qk/LFjSbYq7FXYq7FXYq8A/NrT7W0/OnS3vlI0zzVpT6dJJ/LPFITyH+r+6p75j6iFx9zIYRkHCx&#xA;6Ty35j8o6m0UsHqR/EsU6iquh7r0/DNRqMV83mO0Oy51dWFLUxrWqqtrDCechIBIpQtsx49e2VYc&#xA;YBcXs7s2WTIBWz1ny/5k8s+Vra00vX9as7HUJY19G1mmVHCsSQW5HavYnrm0wwNW90SKoMV83flJ&#xA;fReYrnzF5XvRF9eFb6ykBMEoO/LkAwH0g/RkMsbjXRxNbpPHiR/ExXUvK/nMKIzZgFujGVeI9+pO&#xA;YkMIt0WD2dzcXQJv5O/JXULm+i1DWnRxGQyItWjUjeu/2j4fqzLhHoHo9JoMen3keKSZ/nxfppPl&#xA;mx8nWdwkDeYZkgDycUWG3iZTPMzEgcQOINT0J8Mvxw4TfQOROfF73nP5oeb/ACpqPluy8o+Wrr69&#xA;PEbezgSNWK8YyqoBIVCsfgUfCcGLHLi4i2ZMkRDhD6z0yySw020sU+xaQxwLTwjQKP1ZmutROKux&#xA;V2KuxV4z/wA5VW3L8vdPvAPisdWt5S3gpjlQ/LdhgZRfNOv2X1XWNftAajjHKpPcFQ//ABvku9gO&#xA;QTTyayvpwDbqEoQfAHJDkwnzLIAj8gyNRdvhI6KPDCxaqkkpUM2y0NKgb/xxVpI4kjNuEBg4/HU1&#xA;rv0IxVqJSVX1FCopoijp7HAqMjhR4m4qA8VWLs3VfADCrWv3HoeSL9q05I6A+7bDAeSYc2G+ZRw8&#xA;t6Bp4FC8MLMPear/AMcieTZE+olC664VaeCH8TTJFqDP/wDnH787bfyhNF5Y1a3hj0K/umlk1Ich&#xA;LDPKqoHkqeLRfu1B2BXrU9MrtypRR1r5a1vzX5d8xfnFps0n+JrLWWvtLWrU+o2SgtGE2rRGGx3I&#xA;j4/tHFF9H0l5H826f5u8raf5gsaCO9iDSQ15GKUbSRMfFHBHv1wsSE9xQ7FXYq7FXmv5++SrvzH5&#xA;Ha80xSdc0CUalpxT7Z9LeVF9ynxAd2UDARbKEqLyXyn+dfmqWDTz50W1v/LGsSm2TVI4xGLW4X/d&#xA;cyqEUU2PT7O4J3zGyY7FByoGiCXr8vmf8qdJ1ODTTfWFnqc5j9KNABI3qUZATxNA4pSp37ZWMcau&#xA;kVv73yj5/udR1nz35qu2s5L1/rkwEi1b0oI5PSgoVB2CcAMyARQ3REcxT6N/KHz5pNl+VVhJreoJ&#xA;bz6TbyG9jmJMywRyMsR4CrGqcaUyo86ZmBq0ktv+cmfyzl1b0pdOv4LJiVN08cbxCpA5tErswH+q&#xA;K+2HwEeKa5vWbbzH5Ul0A6tb31sNFaMyvdK4WP06EFidqdPnkaHJfUd3gmqWtr+a/mSTzHqHO28k&#xA;6Lys9KTdJrwK1Wap+JUJ79e3XlRnPgFDm2YsXHLyUvIHlrTvNX5vWNvpljFbaB5UP168EKgJ66n9&#xA;xGWA+JuarXluaPluAGrLHVyA9I6PqjL3BdirsVdirsVea/8AORtiLv8AJ/XaLye3+rTp7cLmPkf+&#xA;ALYCyjzfK2uAy69DMempaVDID7mMD/jTJdWB+n3FvyPL+4EZ/mZT/wAS/hhjyY5PqZKZZFY+rVQR&#xA;vQ1AFe1N6nJMFUrwO32O4wK4qZDyGwH2ffFVQyRvEIwnGQE+o9e3hTFXBkKKqAgqTzYnY+AA9sKo&#xA;Lz+ZofKEMCja5kRfmzNzUfcDkZcmePmxzz3cxWmt2kIHOOy4LxG20Sqo/wCInBJljF2x3VtUF5Mx&#xA;SqwbAA/aNMjKTOGOub3z8pP+cZtG1ny5ZeYvNV1M36QSO6s9PtGEaiBhyX1nZWZjIpGy0oO/ggJM&#xA;mZ/84x3EcHkC40qchZ7HVLm1uEP+/DxNN/8AWpkhyYTO6h5SY/lf+bN15PmJj8pebmN55eY/YhvN&#xA;g9uOwr9jx/u/E5Fkdw9uwsXYq7FXYq7FXzX+a3kK88j3+qarYaaNU/L3X2D61paqW+pT1r66U3jF&#xA;TVXUileJoOOVziTy5t+KY5S5PANdOjJql5+iqmxZlaxerVVCAeJ5GtRWm/hgjdbtk+GzXwQ31iIq&#xA;AsPpxxwj1USUqHlAKpLRy1WBcVVffoOkmtVvJF+pWSJDBDM0Uks13FNI81wHlI4zgyPGjJwPFQik&#xA;jc8qjFWY/k1oVzrXnq0gitvVtYIZBqQdQU9NlMdHr4s4yrLtFvwyHF8HrGrfkt+XdrLcXDS30Om+&#xA;oZTpiXIFs5WtPh4860/y8xvzEuTeNMCxu71zU/Mt7H5N8g2azXNPT9WH4bazgXbkzj4QFru3j4tt&#xA;lmPCSbKc2pjCPDF9Dfll+Xel+RPLMWk2Z9e6kPralfMPjnnYfE3so6KvYe5JOaHVE2yzFDsVdirs&#xA;VdirHvzF0z9KeQvMWnheT3GnXSxD/iz0WKH6HAxSHxPcy+pB5WvD+1byWp/55SMgH3NhHRBHMKXl&#xA;WYQX1xFX4Ul5fRWn6sMWGToWbD0pkRwaitUO436ZJgsjnSZ+A6AVJ7HfFVaNeUgi5hFP7bdBtWmB&#xA;Wo4WnkWKIdTQHpX2xVGIIDGtuIz6zMBzqNmJpT5Uwqk/5nahb2kuhwygtBHcfWZY16lIeIAFe5DE&#xA;DIybMQ5pX5j8o3q+W7rzd5j5WtzqLqujaahHMGWQtWWo2+BWPHr8siR1ZxIBoMCeCWFW9ReJPTBT&#xA;LiBIp+iPljTf0Z5b0nTacfqNnb23Hw9GJUp0H8vhhYF41ooPlD889e8tTLTTPNjxatphOw9ZmJlC&#xA;07+pz+hRhiVmLALPvzf8hL518pTWdsfT1qwf63o1yDxZLqIVC8uwkHw+xoe2ClEqLvye/MH/ABp5&#xA;Qiurr93rlg31PWrYjiy3Eexfh2Eg+L2NR2xSQznFDsVdirsVaZVdSjgMrAhlIqCD1BGKvLvNf/OO&#xA;X5ea5dNf2Uc2gakSW+saa4jQs3cxMGQdf2OOAhkJkMF1L/nHLznYRRPZeZNLv7OwYz266vZrEsVB&#xA;UszqJ9thyrsepGQOMNgzJJD+T/5jzRPdaboflLU4pZGm+u2rGRGkRmBVC7KqgH9lQF8cHh+ZZjMB&#xA;0DIovK//ADkpcq4e20eylnYtLcM6+oSBQFjG0lfAbZX+Wiedsxq65AIiH/nH7zNqjpN+YPnIvakg&#xA;NYWBKRuBvx9WUJ/ybOWxxRjya56iUnsHk/yj5U8saULHy1Zw2tmxq7xHm0rDblJKSzO3zO2WNBKe&#xA;4odirsVdirsVdirTKrqUcBlYEMpFQQeoIxV8Ea3Yy6ZpsllIT6uga1cWjK3UBSP+N0OPRkefvCW2&#xA;sotdclr9hxXb7skObWd4hnVi4eCMhxVAQU238Mk1qxMqxAUUSUoCegPhtiquYKw8gQFDUIqOR79M&#xA;VbSAuI44WLytUMtKUp0oe+KoS712y0cxzzgyy1/0e2Td5H6KB7V6nATTKMbeh/l3+Vfrk+d/zBhM&#xA;99w5abopPCKBOqF+p5kn4V7dT8XQUWRkAKDCvzw802/mLzZbaTZ2yW1joULSXCoS3KeQAgE9+Cha&#xA;fNsHVbqN97z/AMu6YdX866DpVOQvL61gcb/ZeVQxNPBTXGS4n3/gZPL/AM+PKOpahotj5r0BK+Zf&#xA;KU4v7TiCzSQoQ0sXEfa+wGA9iP2sBZRKafld+Ydp5x0xL1CBJPylaNf91uNniPeqV+kUOTPJr5Gi&#xA;wDzbLcfln+aUXnm1SnlTzEyWvmOOIEiOVtxcFR0avxe55Dq2AhlA2Ke8xSxTRJNE4kikUPG6mqsr&#xA;CoII6gjAq7FXYq7FXYq7FXkH/OTWoOvk7SdFjmZW1zV7a1ntov76a2UM7hFHWknp/TTAWUObzyDy&#xA;+PJP52eXtC8k6ldyi5vRJqWlCRpLeGykYGVWB60h5GrVIoDWtMqxSJ5t+WEREd76L8w+b/LHltbd&#xA;9e1O301bpmS3a4cIHZRVqV8K75c49PmzQY/yv86eYfNetfmBrJu7uLUpIdKhN16UQsgxETxEFap2&#xA;2an35VOdN8MZPKkGY/Kvlf8AMbytJ+XWouJr3UYLe7tIJ2njlt5JVRlkHJtiDShPeo6ZDDORO7bn&#xA;xxjHY7vonVPzY/LrTNZg0W7162XU7iVYFt4y0pWRiAFlaMMsW5/bIzIcOiy3FDyv89PzA82+VV0C&#xA;z8u/VLdtcnmtZtTvq+lbsAgiq1eK19Rm5NWnHpgJZRFsI8r6h+Y/kH8zPLui+ZvMVxrFh5jBt7xb&#xA;qWSeKO5K/uxA8hYr8boBSnIHceFcJ2SO5tnjAiCOr6Ly1odiqyaeGCF5p5FihjBaSRyFVVHUknYD&#xA;FXxP+bV1oKedvOlvZXsF1Z39zBfWk9vIs0bzMnOVQ0ZYVEkjA/LFlR2LBfUuJ7mGWOE+oiKH5ELy&#xA;JHXfseuAzCRj2IRov9aQcViChNqsylcfEY+AjdP83XEKqLuIpG2yuAWQ06/5jJCYYyxHoyO01yzn&#xA;AdSCO5Q1H0jJNRbu9ZUTw2OmQvf6veMI7WyiUs7O2wqBvgJpnGFvcfym/IqDRHXzF5v4ah5mmWqw&#xA;ni8FkpFeK1+EyDuw2H7P8xDMnoE1/Nj8yPLHlbR5pJbb6/fqDHp9uXKo05FFHFSCypWre3ucJJYx&#xA;AJfJ+mTzz2moX9y5e5upWaWQ9WY7k/exxiuXnTMv+cedJOrfnDpstOcOmxz3snySMxIfokkTInmy&#xA;hyfZ+KuxV4h5q8j+Yvy580T+fPIdp9e0e45Nr3lmOooCDzntwOXzoB8J7FdlDLmjfKfmLyz+ZHlP&#xA;UdHZlu7OazlWVHos0LUHDkprRkbdW6VG1cmTbUAYlR/ITzbf2M13+WnmFz+ldEBbSJm2+sWPZVr1&#xA;Mfb/ACdv2DkWw77vaMUOxV2KuxV2Kvne68zWWueffMn5jai3qeWfI0bad5fU/YlviDzkT9ktWpHz&#xA;j8MryS225t+KNnf4sp/5x68p3Y0u88+62vLX/NLGWNmG8VkD+6VfAPQN/qhPDJQjQphknxFBf85U&#xA;DR08paXJe6Ql/dzXn1azvnkMAtTIhZj6gIHx8Bs3w7VPTCWMXzjqn5aeadKtbybUdF1KFLcGZLqC&#xA;AXlmIgCayXULekKd2FflkBIFtpJr3Tf0XfW6NdPCZoLScSoCSIry3WVzsV+x6nGnfCCpZn5f/wAH&#xA;eUru28zfoXVvM8NjKksM92i6VYiVTVDQC9abi9KDkvuMeIXSOEkX0faPl/V49a0HTdYjiaGPUrWC&#xA;7SF6ckWeNZArU7jlQ5NpQ3m3yjoPmzRJtG1y2FzZTUYdQ8ci14yRsN1da9foOxIxSC+Yrqx1W8/L&#xA;XUdAnkb/ABZ+W+pEW8tSZDbq7PE6E1JGzhfYJ7ZRPaQPwcrH6omPxfSvkDzZbebfJ2l6/BQG9gU3&#xA;EY/YnT4Jk/2MikD2y9xSE31LUrHTNPuNRv5lt7K0jaa5nevFI0FWY08Bih8n/m1+bN/+ZNzHpWjp&#xA;NYeULRzJLLIOL3Tp0dwP2V/ZSvu29AsJSpthB5pHcafZuwhgiBJHpSSAFwB4Vrvle5bLaOsrfkJc&#xA;Mv7o1jqAPDoQB4YKpF2rW6TXcVzDDxkchWCVHEFT3PbYnFKit3CV/RzW3C2Dciz/ABANSjU4/sk7&#xA;4UW3Bost7qttZaSv1S6upViUTTrHEOewLNJSg37nJxkWM4h9b/lf+Ufl78urH65Of0n5luRxutQ4&#xA;8iA3WOBT9hPEndu/ZRYA0yk78yPzt8p+U0a0nhkv9WZaRaXE/FyWHw8yvLgDXrSvhXCdkRHE+U9d&#xA;82ajrGtXGp67bzfWviGn2iqRDbqxqAoY8j8zv33yIkGZgRsGPJeTx2gtyjKgJJO9NzhEkTxkm30L&#xA;/wA4gaIr3HmPzA67qILC3k9mJlmH/Cx4qRQp9K4odirsVeXee/yQstT1B/MXlC9byz5roxa5t6rb&#xA;3HP7S3Ea/wA/7TAb/tBsWV975283fmFr9l5gs3vokg87+VLwwrqNq6yW8iRkh43APTlsRWm7Cg6Y&#xA;kpjCvc+jvyI/MzzB598vXl7rVglrNZzCKO7gV0gnBUk8Q5f4kp8VGpuOmAIkKemYWKnNcW8AUzyp&#xA;EHYRoXYKC7bKor1J7DFV7MqqWYgKBUk7AAYq8J/O/wD5yCttFR/LflOWG+1S7hZLnU45VeK19WqA&#xA;IyGhmH2tzRduvQAlnGLyzyDNeeebLy5+VdvaraafaX019r91C/L1oYzyLlwSKmvAUqK8D0yHDvbY&#xA;ZUH2PBBDbwRwQIsUMKiOKNRRVVRRVAHQAZY0MT/Nm78oWnkHVbjzbateaIqKs1vGAZWd3CR+lUrx&#xA;cOwIaop1xSHyPrusahZeW2h8ueYbq58oXRe1m028EIvLSWjEW8sfJjwZR8MsZCnfYMCuVHHG7pyB&#xA;llVLbnzXrvlzXdE1HRb1dMnu9EsLaa5KCRREEVGLgpIaVhDfCpNMHCJWD3p4iK9yfaXq+h+ZvNel&#xA;y/mHq2qapo8twsFrLDaLa6e8lQPifmrlORo1Iw9PDDCEY8mM5ykH2TFFFFEkUSLHFGoWONQFVVUU&#xA;AAGwAGWuOuxV4P8AnPax+S/PunefBGx0XXIm0jzKiCvxcP3E1N6sAgP/ADzp3yvLGw34J8MgUj/5&#xA;xt/MPQbDzDq/k8XfDTNSufrXl71QUHqsKSQbjYlQvGtK8T3OGF1ujMBdjk+iNZ0iw1nSbzSdQjMt&#xA;jfQvb3MYYqTHIOLAMpBGx7ZNpeS6r/zir+XNxC402e/0q4NeEkUwlTfsySKxZfkwPvgplxl5hr//&#xA;ADiX57trhm0nUbLVbcn4WkZ7aan+UjB0/wCSmDhZcQX6Z/ziL54mh53+q6fZu3SJDLMR/rHgi/cT&#xA;jwo4gmMX/OJPm+KMxReZrVI2PJlWOUAkeOPCnjbl/wCcTfOZRinmOyZ6bAxSL/wwBIwcAXjSPVf+&#xA;cYvzdsYwLG6tNTjA+BILlo3HtSdYlH0Njwrxss8v/lp/zkw+iDSpvMcGkWCLwSKeYTTqvYJLFHM6&#xA;gdBSQU7ZIWxPCwvzB/zjX+cNpM91Atrq0u5aazuFSVq1qW9cW7MxrvuT88BDISCQ/wDKq/zw5qP0&#xA;JqFU+Fd14+H81PpyPAy4/NHH8o/zveN0m8stMzCgldrbmvbYrIv448C8aloPlf8AP3yFfSX+jaRq&#xA;dnK9BcC3g+tRSBT0kjQSowFfDbtkkWC+y9BvL+90PT7zUbU2WoXFtDLd2Z6wzOgaSPv9liRkmpHY&#xA;q7FXYq+f/wA5P+cddCm0rzB5r8vm5Ouu7ag9iXVrdhyL3AiQJz5MCzAcjvsMFMxJKv8AnFL8xiHn&#xA;8i38vwEPd6IWPQ15TwL+Mg/2WIKzD6VwsHyD+d/5waz5g+t+WbqHSXs7K/MlneWbzzXCGF2RJElV&#xA;xFUpUMCO+wB3wFsiElfzhq3me8fRvMmqav5rWyIttM0nSTwiu1j2WeVgrs/KgJrGX3+0MhZPJsEY&#xA;jmyJP+cefP3meBZ4tB03yjaxIxtoJ55pLiQncCQgzt1/nAI8MIiepYymOgejfkB+R+u+StVvte8x&#xA;PAL6aD6pZ21u/qBY2ZWkd24gcj6ahae9ckA1ylb3DCxY1+ZHk9POHknVfLxdY5byIG2lbok8TCSI&#xA;mlTx5oOVO1cUgvkbz3De2ujC38zeTJrHzVG62c/mBxNFBMVHwvyRhbyysiH4v2t2qcqESD5ORxRI&#xA;80otfMsdjeaXqkMWn6idP0mOGWz1OFJ0dlnKcI0ZSPUUMGB2+EH5EcPNPENnuOj/AJb/AJnefNY0&#xA;fUfO0NvovlmwaK7i0mEq0kvD4o4yiFgi02IJBA2416GGKjfVjkz2KGwfQmWuO7FXif8AzlnC835e&#xA;adHHKBIdVh4W37UxMMygIBuSOXT+zAWUObwT8vvyy88+ZPObWtlALW60e6gfVL1nSP6mQ5I2U7v8&#xA;B+FRWo7b5Ebtktub7nybSlfmjzBaeXfLuo67do0lvp1u9xJGlOTcBUKtdqsdsVDxrTf+co3iS2uf&#xA;MnlG80zTb5kNnqELmaJonqOVXSIMVp+yfo23jxDk2eGat7brWq2+kaPf6tchmt9Pt5bqZUFWKQIZ&#xA;GCjuaLtkmt8+Xn/OTvngaZHr0HlCGLy+04UXc07Nzj5FPTVgE/eVRt+Jp/LtkOMXTb4Rq30bFIJI&#xA;kkClQ6huLCjCorQjxybUuxV2KuxV2KuxV2KuxV2KuxV2KuxV8SfmXo2oeTvztvIPKMc8V5DdRXuk&#xA;RwRc2Ek8azcIY6MJEVnZKcSKDiRkW0bh9aflpP5zn8labN5yQJ5hdXN2oVEanNvTLrGAiuUpyC5J&#xA;rLDPNv5CQeZPMrzPqMek+VXVGl0fS7WG2lmlqWkM06Ac+TfF8Qb6OuCkiTPPKHkTyp5PsZLLy7p6&#xA;WMMzB52DPJJIwFAXkkLufYVoO2FBNp8SAKnpihg0354flVDrf6Gk8xWwu68TIOZtw38puQphH/B0&#xA;xtPCWbxyRyxrJGweNwGR1IKspFQQR1BxQuxV5b/zkrp2rX35U36adbC59CaG4vBwDulvExZ5I6gk&#xA;FTTkR+xy7VwFlHm+atWtvygi8pzvot1fP5gkeOS0+skmSPjXlFSNI4/iruxr0FD2NIlO+Wzl8EOG&#xA;73fZfkSTVpfJWgyauHGqNp9sb31N3MvpLzL/AOUTuffL3DKeYoQ2pappml2b32p3cNjZRU9W6uZE&#xA;hiXkQo5O5VRUmg3xV83/AJu/mX5b1j8xtGmstTt73RvLFlcalGyOGjm1EcjFGpBozBo4iKe+V5Ca&#xA;2b8QF7vSf+cdfLMuk/l5Fql5VtU8xyvql3K32isv9zv4FPj+bHJgUGqZsvUMLFh35x6pBpn5XeZr&#xA;qZVdGsZbcK+687keglQf8uQYpHN4X5c0Ean50/LHyhqCm4tNM039K30ElSA0iNcIjj/IkASmUYxc&#xA;iXJyGoAPqKeCGeGSCdFlhlUpLG4DKysKMrA9QRl7ivkPzNpP1Dyt+Y/lm1LR2nl7XILvT7TkxEcF&#xA;w7hQgYk/DGm5yme0g5OPeJ9z6u8taoNX8u6XqoNRf2kF1Xb/AHdEr9v9bLnGKY4q7FXYq7FXYq7F&#xA;XYq7FXYq7FXYqtMURkEhRTIoor0HIA9gcVXYq7FXYq8m/PvWdZnXy/5E0Wdra883XLQXV0leUdnF&#xA;x9bpQ0YPU+Khh3wSNM4BV1z8rfy903yvFoFppNq1vwpK8iK08jhTSVp/7zlU9Qe+1BmJnyURRcvT&#xA;Q4rsMZ/IPWdT0Pzhq35d3Ny93pcNt+kdHaU8mgXmqvD7A+pXwqK/tZkYp8Qtq1OLglTEPP3n7WvN&#xA;l7f6nLqGoQ+VINT/AELoGiaRKLe4v7lRVpHlKvQUKndH+0FArU4TLemEYbWxy/g8zS6D5n0KDWdW&#xA;0a40u3W61fyrrl0twJbXmj84bjjAoerISnpLzBADNWmG0BBzfmd+X995U/Q195JtoLqC2aG0vbQq&#xA;siyFQPULkB61Fatz+nKjGd824GHUJjaeYPzP03RNH0K58w6tBqAiKaT5Y0qDnfCFalTcMCkibfZW&#xA;jkKKUFNpidmgwljoWeqceXvzQ/NDR4b3UbXVrvVk0QhvMHlvXYRHcxRk7us28m24/Z491O2DjINF&#xA;fDBFh7r511zTdY/KWfXIdEfzFa39nBd2mj+m0rSNMUaLmiVb92zBn47gA5a0Dm+N7bQtZuiNKjSD&#xA;07rVILAMIYywvJ6ho4ZqFysdAHCvx3HiDkKbbffllax2lnBax0EdvGkSUFBRFCjb6Mm0q2KvI/8A&#xA;nJuWSTyFYaPE1JNb1e0suI6kHnJWns0a4Cyiln5Wwxar+eXnPWYFpZ6PawaVbDsvMqaL/q/V2H+3&#xA;leLlfe259jXc9vy1ofO3n/RuH5vea9F4VXzl5cM9rGo+1dWq8RT/ACuFtIae+VZeVuRhO7O/+cef&#xA;Nmlav+W2j6dHewyatpsDQ3liHBmiSOVkjZkJ5cWQKQemWBpkN3p2Fi7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq8m/OzyR5vv9U0Lzj5PRbnWdA9VJLBmCtLDMKH0ySoqAWBFakHbcUMZxsU2Y58Je&#xA;eT/mF53aNrXUPJmuC7agMItZGBbsA/BSQT7Zh/lTfN2UdZAdGd/kZ+X/AJisdU1bzv5ot/qOrawg&#xA;t7PTiavb2ilWpJ4M3ppt12qdzQZcIcIp1+bLxyt5fpuhlI7nyK2oR6L508p+YJNW0Oe6Um3uI2CM&#xA;jMeLt/utXBIbYjbrSE58O7PHAz5Ivz5+W2rajp2r+aPOXmnTIvM2oRwx2sFswjslhiKt6csjBDyP&#xA;BeOxoR37A5Rt1THDL3DzY3c+fPMXmry2nkybRtM1AQx/V7F7a6toOEir8E0SVFKca7UHY+GRMaN2&#xA;2RNjhEd2X+UvKf5m/lvrVr5sudAXzh9d09LWU2kqvPaOoVVVWCyH+7QKzKCDv8XjbEir6NGTc0eb&#xA;H/NOpeaLrU9dudQtI4vOXn1YNL0/QLdlka3s1aMF5mFRyYRKgqa/aJpSmR4hI7MuAwG76Lm1by9+&#xA;WP5eacNaueFlpNrb2QdFLvNMkYULGo6s5UnsPkMucfmXkJ84Wc7aZq2iflDevpekXUuoaVdNM1nW&#xA;aeheUQrFIshPBSPibdRTISmBzbIwJ5PX/wAuPzO8v+e9OmuNOEltfWbCPUNMuAFngc1pUDqpoaN7&#xA;djtkgWsxpl+FD5o/5yY8weaLH8xvK8MFv9c02zSLUNOsCrtHPexzMG5CMq7MoCCgPQ+5yJbIJD+T&#xA;fnjU7/8APC3lsLN9NXXPWTzBpyuzwu8cTyerxYAoyyLXetNxX4iMjjjQpnlN7vrXLGh84/8AOS+s&#xA;eafLXn3yv5p0+BDaWNtLFZ3EkZeMXchkEiOQV/3UVKAnsffIyFtkHmXlrzVrOg/nBo2teZYE0eX1&#xA;1bURbwpAPq91VWaVI+uz1bl8X05GFDk2ZLPN9tggio6ZY47sVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiriQASTQDck4q8682+R/wArPzNkUte29xq1ovGPUdLuojdRKDUK3AyAqCajmpp2pgpk&#xA;CQlGj/8AOMvkK1v0vdXutQ8wPH/dw6hMDEPCqxqjN8i1PbERATLITzTnzj+RfkDzDpi29pp0Ghah&#xA;BQ2OpabEkEkTDcclj4CRfZvoIO+JCBIhgh/Kv8+dPtHsofOGmDSUqWu5zMkoQdWZPSaOoA/ab5nK&#xA;vAi5H5uXx9zMfyq/KPy35dnfzDJqQ8y+Y5uSS6wxVkjqPiSBQX4bGhJNaeANMtEQOTROZkd0m/5y&#xA;VZILTybe3ih9Gtdet31FX3jK0J+MeHBXGCd1snHV7vQtS12wvNJHpgM8lBwqDxPjt2zDy54yi5eL&#xA;BKM3j3kT0E/5yLnXQ2DQPpch1wR/YDBhxrTblz9PLtNfDuw1lcT3+8vbOytnuryeO2tohylnmdY4&#xA;1HizMQBmQ4b5w/Oj80fJV/5+8mXGl6lDdReX5p729vrflIvIem8UKyIKNzaGhpUbiu1chLls24xv&#xA;uxX/AJx3tZb/APNfR9Shlaa5FpfX2syV5U9QyQIr+G7I30jDEUsze5fX+SamE/nTb+X5/wAstfTW&#xA;3higFpK9pJOQKXaxsbfhX9syUAA3PTEpHN8Yar5kgubZQqSGafSLfTp2fYepbXEbhlNTyX07dR88&#xA;riKtvkbp93eT7lLnyno06XCXQeytybmMhkc+koZgQT3yxoKb4odirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirz/8APjzO/l38rtZuYX4Xd5GLC1I2PK6PByD4rFzYfLEpiN3jdp+SmljQNMuLK6n0&#xA;rzLDBG41CCRlIuCvJtgaim+60OY3iG3YeACPNkOmefv+cgNFtTbzWWl+ZYLUUF8X9OeRAK7kPEpP&#xA;H/Ir41ywZQ0HTFWm/wCchPPt/Z/o7S/JM1nr8lVN1dOzWUQHWWpSPkPYtT3bpkjMNYwStj+seWPP&#xA;Xme3V/PnmuSa2Y+oNItgIISV3UFY1UNTxKV98qOVyY6YDmkX5b67/gb829PsNMkePQtanTT760Ls&#xA;6F5D6cUnxH7SSMN/Co6HLIStqz4wOT6g85eUtK82+W73QNTUm1vEoJF+3HIp5JIn+UjAH8OmWOMC&#xA;8Kt/y0/5yE0+E+WbG7sH0pf3UOuPJR1h7fCeTggf8Vn5nrlB08SbcoauQFPXPyw/K/RvIWkPb27m&#xA;81a8Ik1TVZBSSeTc9y3FFqaLX3NTlwDiylbyf/nK2w8zC90LWEtG1HyvZIwurRjKbdbnmTynWFo3&#xA;AdKKG5DoRUV3Syg8h1nWfIXmF9Dhkji8u3NvaPDrWoabbEWkvxNJEqW1FkMtGCPIzdexUDKyTWwb&#xA;hEXzex/84q6Be2V75j1O1t5l8t3a28Wn3t3EIpbhoi5LIBX4PiNaGnTqQaTjdbtWSr2fQ2Sa3yH+&#xA;b3ni9H5uX0XmrSzqVlpEyxaHo1zKYbERmhFxKAP3nqD4utN6H4V45EtsRsxa107Qdf8AM+rad5J8&#xA;t3eovcP6OjJPL6sNvExYPM/wrwXcFObEDucgQTTYJRjd7vr38sPKM3lDyHpHl24mFxcWUbmeRfs+&#xA;pNK8zqviqtIVB8BlrjksoxQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXhX/ADkDex615y8n&#xA;eS1PKJZ21fVErsIYgQhPhVFlyEzQbsEbkkWqed/U1BY0jVoQxWJHZk5B/hB4oC29dieuY1OytLdR&#xA;85aRocVnDDP6jrPznmvAVZeLf3ewUmnj38O2ERtiZUmUn5iXEt2sVvAk0S8iz0Kii0Yli/EUX2xp&#xA;NpTqPmh7u6nnLx2qJG8tEkWTk5FFTl89zjwrbzvzFBqdnY2WsEsl7Dc/WIKjdRGQUb/gt8tid2jN&#xA;H0vt3QNYtta0PT9Xtv8AefULaK5i3rRZUDgfMVplzr0firsVcQCCCKg7EHFUoHk/yiJ/rA0TTxcV&#xA;5esLWHnXx5ca1xW03AAFB0xV2KpZrHlfyzrZjOs6RZamYtojeW8Vxx/1fUVqYraJ03SdK0u3+raZ&#xA;ZQWNsDUQW0SQpX/VQKMVRWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvjHz156vIfzP8&#xA;66ig56m1y+j2K0qUit39E8FHdvQX7z45XIW5WKQiLTfXPyS/Mbyx5at/On1n9IX6p9b1zTKVe2Ra&#xA;SBlJJEnpgfHQfD25DfCY7MY5jaQeWPJGufmifMGqw+oLXRbJ5LSJQOVxeshaKEfs1biSxHsO9cYx&#xA;pOXJZSLTNfvLiwTRrGxmvtXnT0I4IkZ3LArUFR8R+z0AyPDu2+MAGXeYfyR/NDy3o+napHbSa1Jq&#xA;Kf7kdMs43mktJftIrLHyLinVlFAQR0oTIxaY5ja7zJ+RP5r2PlS31pzJqs93Gz6lo0dZJrUHdOK8&#xA;j6hp9oRj4fcb48KPFJfT35aaZfaX+X3l3T7+IwXtrp9vHcQNTkjrGKqadxk2kslxQ7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8Xl/wCVA/8AK6v31P8AGnrr9v1P&#xA;qf17bj1/d+v0p25/5eBlvT2O8+qfVJ/rnD6p6bfWPVp6fp8Tz51248etcLFi35Yf8q6/w43+AfQ/&#xA;Qv1iT1PQ9T/ejbnz9b95y48acv2aU2pik2jdD/wD+n9U/Qf6M/T9f9zP1P0PrVeX/Hx6fx15deXf&#xA;3xVkOKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:47aa2b8c-05c5-0743-bb73-ab5c473c159f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:47aa2b8c-05c5-0743-bb73-ab5c473c159f</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:4ab6d558-5d02-42de-8536-e3ce2bbf1825</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47aa2b8c-05c5-0743-bb73-ab5c473c159f</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:55:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>85.458266</stDim:w>
            <stDim:h>49.099417</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -151.683 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 151.683 li
132.412 151.683 li
132.412 0 li
cp
clp
123.486 34.631 mo
123.343 34.4245 123.176 34.2799 123 34.1666 cv
122.769 33.5939 122.526 33.0241 122.262 32.4601 cv
118.658 24.775 112.344 18.6867 105.457 13.9015 cv
98.296 8.92642 90.0621 5.00211 81.4405 3.44351 cv
73.2579 1.96451 62.0968 1.3654 54.4015 4.9142 cv
54.0753 5.0646 53.8634 5.29411 53.7423 5.55922 cv
40.3278 7.79704 28.6539 16.3849 19.3068 26.8175 cv
13.5436 33.2501 7.78184 42.9225 6.3922 51.5729 cv
5.72716 55.7101 6.5343 60.2164 7.17786 64.317 cv
7.43076 65.9279 7.57775 67.8141 8.20666 69.3346 cv
6.45033 77.381 5.45228 85.7663 6.40001 93.9455 cv
7.15929 100.5 8.99231 106.802 11.3121 112.941 cv
11.5221 113.796 11.7369 114.651 11.9532 115.505 cv
12.8658 119.115 13.8629 124.383 16.9391 126.839 cv
18.8116 130.996 21.1525 134.938 24.7262 137.298 cv
31.2594 141.612 39.2169 145.256 46.7614 147.304 cv
51.5221 148.596 56.2105 148.505 60.9271 148.413 cv
64.1266 148.351 67.3391 148.289 70.5958 148.658 cv
79.1007 149.624 86.3117 147.208 94.2052 144.262 cv
100.941 141.748 107.635 138.718 112.955 133.76 cv
117.858 129.19 121.026 123.198 123.047 116.875 cv
125.88 112.317 125.863 104.709 126.546 100.03 cv
127.648 92.4884 128.61 84.9259 129.419 77.3473 cv
130.92 63.2633 131.999 46.9142 123.486 34.631 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
1 .94902 .894118 rgb
f
100.205 87.6031 mo
98.7228 80.8493 88.8297 76.2267 83.1075 80.3781 cv
82.2672 80.3278 81.4562 80.6295 80.7892 81.1901 cv
79.5328 80.589 78.1827 80.7687 77.1451 82.318 cv
76.0875 82.8859 75.2374 83.9679 74.5953 85.1271 cv
74.5763 85.1637 li
74.2804 85.3903 73.9952 85.6476 73.7286 85.9386 cv
73.4435 86.2502 73.1881 86.5758 72.9508 86.9093 cv
72.8258 86.9899 72.7023 87.0797 72.5797 87.1823 cv
68.5738 90.5324 71.2765 98.8717 74.7482 101.652 cv
76.4576 103.02 78.4962 103.535 80.3937 103.32 cv
80.8346 104.165 81.6397 104.767 82.714 104.626 cv
90.3805 103.62 102.257 96.9494 100.205 87.6031 cv
.4 .247059 .219608 rgb
f
36.5934 92.1456 mo
34.5861 89.1491 31.4059 85.8214 27.4313 87.2873 cv
25.1193 86.465 22.4474 87.716 20.8439 89.9416 cv
18.4 93.3331 18.7711 97.7839 20.7946 101.296 cv
24.2477 107.287 35.5333 112.972 39.6842 104.442 cv
41.67 100.361 38.8561 95.5241 36.5934 92.1456 cv
f
57.8253 119.583 mo
56.7633 116.563 55.5421 112.718 51.6315 112.8 cv
48.0104 112.876 46.9947 116.444 46.4108 119.493 cv
46.3019 119.64 li
45.6847 120.625 45.732 121.984 46.6642 122.746 cv
47.7565 123.637 49.5206 123.416 49.923 121.885 cv
49.9381 121.828 49.9581 121.74 49.9801 121.641 cv
50.6031 121.845 51.2877 121.817 51.816 121.439 cv
51.9947 121.311 52.2276 121.058 52.4386 120.938 cv
52.9015 121.115 53.3268 121.677 53.6539 122.011 cv
55.3282 123.722 58.6715 121.987 57.8253 119.583 cv
cp
f
80.1056 121.432 mo
77.4449 121.262 74.6031 122.069 72.1529 123.027 cv
72.0489 123.097 li
71.795 123.171 71.5367 123.26 71.2721 123.372 cv
71.1642 123.286 71.0323 123.222 70.8551 123.222 cv
70.3995 123.222 70.1739 123.578 70.1769 123.932 cv
68.7565 124.749 67.5294 125.818 66.5895 127.131 cv
66.2643 126.59 65.9156 126.056 65.5782 125.479 cv
65.0455 124.568 63.982 124.837 63.5821 125.533 cv
62.9967 125.328 62.2989 125.289 61.524 125.354 cv
61.36 125.367 61.2101 125.37 61.0519 125.38 cv
61.2692 125.18 61.4825 124.977 61.6808 124.738 cv
62.0607 124.282 61.9596 123.534 61.319 123.367 cv
60.9674 123.276 60.6481 123.228 60.3458 123.217 cv
60.5841 122.766 60.775 122.278 60.8668 121.693 cv
61.1144 120.12 60.8932 118.385 60.5416 116.848 cv
59.7692 113.468 57.631 112.246 54.5626 111.056 cv
53.712 110.727 53.2208 112.045 53.9576 112.492 cv
58.1749 115.051 58.3268 119.624 56.9508 123.95 cv
56.7565 124.561 56.7657 125.058 56.9068 125.454 cv
55.8824 125.51 54.8629 125.669 53.7233 126.126 cv
50.6886 127.342 50.7906 126.141 48.0187 125.561 cv
46.8199 125.31 45.4537 125.76 44.2193 125.453 cv
43.3746 125.243 42.9181 124.751 42.1554 124.512 cv
41.149 124.196 41.0904 123.738 39.9049 124.144 cv
39.0802 124.426 38.5724 125.598 39.3473 126.255 cv
39.5152 126.397 39.6827 126.539 39.8507 126.681 cv
40.0011 126.808 40.1935 126.88 40.3898 126.904 cv
40.878 127.359 41.1974 128.047 41.859 128.331 cv
43.4235 129.003 45.5958 127.811 47.1549 127.932 cv
46.7193 127.898 52.524 128.902 52.2828 128.614 cv
52.4591 128.824 52.8063 128.895 53.0597 128.82 cv
52.7545 128.91 55.5206 127.783 55.0631 127.862 cv
56.9308 127.537 56.5069 128.322 58.2281 128.343 cv
59.8873 128.364 62.4894 126.695 64.024 127.702 cv
64.4684 128.708 64.8859 129.636 65.6456 130.536 cv
66.1945 131.186 67.4723 130.862 67.6217 130.014 cv
68.1998 126.726 74.1818 122.727 77.5489 123.517 cv
77.714 123.556 77.7779 123.292 77.6178 123.269 cv
76.5094 123.108 75.527 122.917 74.5636 122.855 cv
76.3756 122.412 78.1959 122.197 80.1056 121.948 cv
80.4274 121.906 80.4454 121.454 80.1056 121.432 cv
cp
.929412 .752941 .623529 rgb
f
88.5743 125.224 mo
88.1632 124.579 87.5006 124.171 86.8727 123.754 cv
86.0524 123.209 85.2272 124.627 86.1036 125.069 cv
86.7809 125.411 87.462 125.784 88.2301 125.823 cv
88.5279 125.839 88.7325 125.472 88.5743 125.224 cv
cp
f
92.2106 126.465 mo
91.8595 126.184 91.4567 126.155 91.0338 126.032 cv
90.5978 125.906 90.2111 125.697 89.84 125.437 cv
89.1149 124.93 88.3912 126.146 89.1422 126.631 cv
89.8649 127.098 91.2799 127.795 92.109 127.256 cv
92.3536 127.097 92.4786 126.679 92.2106 126.465 cv
cp
f
103.626 116.931 mo
101.771 118.771 101.795 121.752 100.038 123.708 cv
98.4537 125.471 95.0143 126.489 92.733 126.565 cv
92.2433 126.582 92.3341 127.343 92.8234 127.233 cv
95.736 126.574 97.7687 126.754 100.042 124.631 cv
100.831 123.894 101.358 122.784 101.923 121.882 cv
102.809 120.468 104.003 118.947 104.233 117.284 cv
104.279 116.949 103.908 116.651 103.626 116.931 cv
cp
f
108.936 100.254 mo
107.604 101.433 107.445 103.219 106.984 104.84 cv
106.729 105.732 106.255 106.523 105.996 107.409 cv
105.663 108.551 105.481 109.716 105.125 110.86 cv
105.048 111.106 105.433 111.211 105.509 110.966 cv
105.897 109.72 106.534 108.611 106.977 107.399 cv
107.252 106.647 107.387 105.885 107.75 105.16 cv
108.504 103.651 109.663 102.313 109.656 100.552 cv
109.654 100.17 109.203 100.016 108.936 100.254 cv
cp
f
111.463 88.487 mo
111.026 85.3854 109.711 82.0011 108.44 79.1457 cv
108.33 78.8981 107.946 78.9835 107.883 79.2184 cv
107.175 81.8605 108.746 83.9503 109.479 86.4162 cv
110.614 90.2326 109.813 95.256 108.929 99.0456 cv
108.62 100.374 110.683 100.694 110.794 99.298 cv
111.078 95.7248 111.97 92.0924 111.463 88.487 cv
cp
f
105.23 71.6251 mo
105.23 71.7252 li
105.23 71.6251 li
cp
f
105.388 74.7804 mo
104.42 73.38 104.034 72.0304 103.676 70.3898 cv
103.419 69.2086 103.518 67.8351 102.638 66.92 cv
102.434 66.7077 102.082 66.7204 101.875 66.92 cv
100.775 67.9865 101.192 69.9103 101.616 71.2301 cv
102.126 72.8151 103.252 74.3488 104.284 75.6325 cv
104.78 76.2506 105.841 75.4362 105.388 74.7804 cv
f
110.82 53.1535 mo
108.262 53.7711 105.575 54.8019 103.963 56.9215 cv
102.233 59.195 101.625 61.8649 101.679 64.6735 cv
101.691 65.2804 102.583 65.2736 102.617 64.6735 cv
102.753 62.2375 103.593 57.9455 105.82 56.59 cv
107.593 55.5109 109.905 56.0705 111.607 54.5045 cv
112.224 53.9367 111.572 52.9718 110.82 53.1535 cv
cp
f
15.2232 114.177 mo
12.0958 107.917 10.4957 101.95 9.20861 95.111 cv
8.07532 89.0919 11.045 83.8781 12.024 78.0109 cv
12.0978 77.57 11.4264 77.3766 11.3463 77.8239 cv
10.233 84.026 6.62853 88.2106 7.43421 94.8898 cv
8.24376 101.602 9.92933 109.352 13.9684 114.911 cv
14.5133 115.661 15.6476 115.027 15.2232 114.177 cv
f
34.1139 124.135 mo
32.5289 124.494 31.4049 125.652 29.5636 125.134 cv
27.7794 124.633 26.1744 121.608 25.0885 120.348 cv
23.0319 117.962 20.2897 117.384 17.3234 116.723 cv
16.7032 116.585 16.5109 117.417 17.068 117.65 cv
19.2159 118.549 21.4171 119.565 23.4161 120.774 cv
25.422 121.987 26.4557 123.908 28.2438 125.339 cv
30.5807 127.208 32.2257 126.542 34.4659 124.971 cv
34.8839 124.677 34.6368 124.017 34.1139 124.135 cv
cp
f
82.7301 121.765 mo
82.7301 121.835 li
82.7301 121.765 li
cp
f
104.491 119.448 mo
103.267 120.853 101.98 122.213 100.913 123.743 cv
100.318 124.596 99.7848 125.685 98.9528 126.329 cv
97.6486 127.338 96.1681 127.38 94.6139 127.332 cv
94.2364 127.32 94.2369 127.906 94.6139 127.918 cv
96.8414 127.986 98.4933 127.759 100.031 126.044 cv
101.835 124.033 103.214 121.848 104.638 119.562 cv
104.491 119.448 li
cp
f
106.48 117.125 mo
106.48 117.225 li
106.48 117.125 li
cp
f
109.105 108.5 mo
109.105 108.6 li
109.105 108.5 li
cp
f
101.489 131.269 mo
101.241 131.123 li
101.827 130.679 102.417 130.24 103.013 129.811 cv
102.511 130.303 102.008 130.793 101.489 131.269 cv
cp
91.2726 136.698 mo
91.2662 136.526 91.2672 136.356 91.2579 136.182 cv
91.2428 135.894 91.1671 135.626 91.0538 135.38 cv
91.548 135.48 92.0538 135.562 92.5475 135.58 cv
92.0792 135.992 91.6461 136.378 91.2726 136.698 cv
cp
126.386 71.2653 mo
127.184 71.2726 128.046 70.7531 128.172 69.7414 cv
128.457 67.4513 128.61 65.151 128.722 62.8478 cv
129.058 59.6515 129.085 56.5275 128.718 53.194 cv
128.279 49.1906 128.574 44.9943 127.17 41.1637 cv
124.653 34.3014 119.8 28.4401 114.924 23.1168 cv
105.207 12.508 90.0861 2.68179 75.3199 2.18667 cv
74.298 2.15249 73.819 3.70864 74.7814 4.17397 cv
77.109 5.29849 79.6158 5.59487 82.1027 6.13394 cv
82.0035 6.62564 82.194 7.19692 82.7921 7.41812 cv
83.4855 7.67446 84.1691 7.95132 84.8473 8.23696 cv
80.6539 6.97427 76.1808 6.30337 72.3287 5.82046 cv
65.3063 4.94058 56.485 5.32144 49.7223 7.41909 cv
49.2106 7.57778 49.3395 8.27065 49.8434 8.31704 cv
56.5909 8.93521 63.4215 6.71841 70.236 7.06899 cv
74.7096 7.29946 78.8649 8.68325 83.1974 9.62075 cv
87.0001 10.4435 90.3561 11.2013 93.4254 13.8502 cv
93.8121 14.1837 94.3102 13.9513 94.4747 13.6032 cv
98.5743 16.506 102.25 19.9889 105.415 23.922 cv
105.417 23.9269 li
106.691 26.8927 107.49 30.0539 108.902 32.9645 cv
109.013 33.1935 109.133 33.4171 109.251 33.6422 cv
108.547 32.3869 107.817 31.1535 107.059 29.9552 cv
104.151 25.3576 100.317 19.3205 95.5763 16.5417 cv
95.1695 16.3034 94.6183 16.796 94.9029 17.215 cv
98.1212 21.9474 102.784 25.6989 106.059 30.5397 cv
109.664 35.8693 111.937 41.5207 114.111 47.5622 cv
114.318 48.1359 115.206 47.9113 115.038 47.3068 cv
113.837 42.9757 112.002 38.7218 109.833 34.7052 cv
111.049 36.8263 112.456 38.838 113.489 41.0636 cv
115.055 44.4362 115.972 48.0832 116.912 51.6652 cv
117.23 52.8761 118.031 54.9127 118.601 56.8927 cv
118.681 57.3117 118.772 57.7233 118.869 58.1305 cv
118.362 57.9206 117.813 57.7663 117.2 57.6774 cv
114.997 56.5856 112.561 55.9445 110.463 56.4254 cv
107.31 57.1486 105.96 60.1203 104.851 62.8502 cv
104.327 64.1393 106.28 64.7648 106.977 63.7467 cv
109.386 60.2311 115.293 60.0758 118.407 62.401 cv
119.87 63.4933 120.967 64.9342 122.476 66.0036 cv
122.874 66.2858 123.296 66.3825 123.698 66.3439 cv
124.132 67.1579 124.566 67.9718 125.005 68.7838 cv
124.999 69.0114 li
124.371 68.153 123.663 67.3537 122.844 66.6447 cv
118.913 63.237 112.062 64.2267 112.469 70.4357 cv
112.728 74.3712 115.627 78.1662 116.605 82.0187 cv
117.423 85.237 117.76 88.4835 117.751 91.7516 cv
117.673 93.402 117.59 95.0524 117.489 96.7018 cv
117.455 97.2536 117.565 97.7038 117.755 98.0749 cv
116.722 100.943 115.34 103.787 113.824 106.7 cv
113.587 107.156 113.497 107.6 113.519 108.01 cv
113.357 108.252 li
112.567 109.149 111.601 109.635 110.349 110.23 cv
108.908 110.888 108.963 112.387 109.737 113.393 cv
109.819 114.441 110.845 115.364 112.015 115.502 cv
111.11 116.113 110.223 116.745 109.35 117.36 cv
107.999 118.312 108.007 120.006 109.105 120.947 cv
108.451 121.647 107.853 122.466 107.384 123.257 cv
107.21 123.55 107.126 123.835 107.1 124.106 cv
106.746 124.611 106.42 125.139 106.121 125.693 cv
105.871 125.641 li
104.584 125.757 103.647 126.649 102.731 127.494 cv
101.662 128.482 100.618 129.504 99.5729 130.518 cv
99.3946 130.691 99.3258 130.88 99.3346 131.057 cv
97.7511 131.456 95.9327 132.742 94.3068 134.076 cv
93.7731 133.885 93.3028 133.67 92.7013 133.679 cv
92.0026 133.691 91.3146 133.752 90.6124 133.723 cv
90.2604 133.708 90.026 133.93 89.9215 134.208 cv
89.6725 134.09 li
89.9635 133.864 90.0592 133.428 89.8859 133.063 cv
89.4513 132.147 88.3907 131.491 87.5807 130.924 cv
86.651 130.273 85.6256 129.733 84.6398 129.172 cv
83.8986 128.75 83.2047 129.127 82.8859 129.705 cv
82.4581 130.085 82.1901 130.786 82.024 131.232 cv
81.9313 131.48 81.9938 131.687 82.1256 131.845 cv
81.8434 132.996 81.7633 134.237 81.6388 135.399 cv
81.444 137.21 81.2574 139.063 80.8507 140.838 cv
80.6661 141.645 81.7902 142.181 82.2218 141.416 cv
83.7985 138.622 85.1407 134.584 83.4733 131.533 cv
83.4801 131.509 li
84.4171 132.049 85.3365 132.633 86.2911 133.134 cv
86.8658 133.435 87.4835 133.801 88.1251 134.029 cv
87.691 134.187 87.3024 134.51 87.0333 135.038 cv
86.2594 136.557 85.8502 137.81 85.7491 139.507 cv
85.7301 139.83 85.8287 140.156 85.9938 140.454 cv
85.9811 140.556 85.9689 140.66 85.9562 140.762 cv
84.9571 141.819 83.4752 142.315 82.1691 142.197 cv
81.5621 142.142 80.8238 141.509 80.0538 141.456 cv
78.4694 141.346 76.6378 142.175 75.1505 143.056 cv
74.2594 142.652 73.3063 143.046 72.7975 143.756 cv
68.5582 144.2 64.3043 144.474 59.982 144.388 cv
59.4938 144.379 59.1207 144.623 58.8878 144.969 cv
54.5929 144.608 50.3043 143.962 46.1051 143.008 cv
45.6793 142.912 45.3468 143.078 45.1339 143.339 cv
44.6891 143.194 44.2472 143.08 43.7872 143.034 cv
43.6456 142.116 42.6632 141.52 41.797 142.023 cv
41.6808 142.09 41.5758 142.162 41.4772 142.236 cv
40.7452 142.419 39.9908 142.461 39.2125 142.357 cv
38.9029 142.294 38.6671 142.381 38.5001 142.532 cv
37.6632 141.951 36.7257 141.504 35.8356 140.943 cv
34.1642 139.89 33.3815 138.164 32.6344 136.409 cv
32.5382 136.121 32.4127 135.828 32.2545 135.522 cv
32.0455 135.118 31.732 134.908 31.3937 134.839 cv
31.3234 134.629 31.2511 134.419 31.1422 134.193 cv
30.7721 133.425 29.5377 133.502 29.1637 134.209 cv
28.817 134.101 28.4469 134.196 28.1881 134.418 cv
27.4508 133.797 26.713 133.176 25.9757 132.555 cv
25.4933 132.148 24.8995 132.365 24.6149 132.758 cv
24.0611 132.161 23.5397 131.541 23.067 130.901 cv
22.6998 130.403 21.7843 130.668 21.9957 131.352 cv
22.7936 133.934 24.1017 136.034 26.2579 137.714 cv
27.1569 138.415 29.5255 140.096 31.1852 140.182 cv
31.6959 140.885 32.3243 141.527 33.1153 142.151 cv
34.7784 143.461 37.3033 144.909 39.4781 144.748 cv
39.7106 144.73 39.9449 144.554 40.0265 144.335 cv
40.2462 144.401 40.4669 144.464 40.6886 144.508 cv
40.714 144.642 li
40.8165 145.048 41.1305 145.339 41.5035 145.486 cv
41.8683 145.92 42.5455 146.058 43.0826 145.981 cv
43.9982 145.849 44.6686 146.648 45.3995 147.073 cv
46.2687 147.577 47.3224 148.012 48.3121 148.148 cv
49.8277 148.355 51.4977 148.042 52.6637 147.05 cv
58.0387 148.64 64.1612 150.026 68.5846 148.302 cv
74.5714 148.715 80.5973 148.321 86.4195 146.646 cv
87.0563 146.462 87.4982 146.042 87.7623 145.529 cv
88.069 145.767 88.4371 145.935 88.8312 146.035 cv
89.1407 146.286 89.5299 146.455 89.9801 146.485 cv
95.1774 146.819 100.413 143.07 104.293 139.989 cv
109.075 136.191 113.673 131.743 117.391 126.87 cv
117.401 126.86 li
117.4 126.859 li
117.521 126.7 117.649 126.546 117.767 126.386 cv
117.942 126.153 118.047 125.916 118.111 125.681 cv
120.615 122.562 122.457 119.046 122.245 115.859 cv
122.737 114.684 123.031 113.473 123.231 112.219 cv
123.955 111.111 124.48 109.984 124.418 108.708 cv
127.268 102.454 128.214 95.5382 128.805 88.6076 cv
129.266 83.1974 129.03 76.4704 126.386 71.2653 cv
cp
f
19.4801 124.968 mo
18.4093 124.968 18.4078 126.632 19.4801 126.632 cv
20.5509 126.632 20.5524 124.968 19.4801 124.968 cv
cp
f
75.6598 67.9874 mo
73.1217 67.8556 70.4147 70.1388 68.4567 71.6359 cv
64.881 73.7555 61.5079 76.5739 58.2799 79.255 cv
56.1769 80.1203 53.9938 80.6344 51.7184 80.5475 cv
51.9401 80.2809 51.9147 79.819 51.4884 79.7252 cv
49.4215 79.2711 47.3068 79.0221 45.191 78.7741 cv
45.0543 78.7121 44.922 78.6398 44.7858 78.5758 cv
42.8551 76.9552 40.7643 75.2887 38.4776 74.1906 cv
37.5983 73.2633 36.7262 72.3332 35.8473 71.4279 cv
35.2189 70.7804 34.3004 71.736 34.8693 72.4054 cv
35.0587 72.6286 35.2706 72.8844 35.4923 73.1535 cv
35.2037 73.0939 34.9127 73.0436 34.6183 73.0075 cv
34.2858 72.9665 34.2638 73.4606 34.5436 73.5597 cv
35.2018 73.7926 35.8292 74.0475 36.4435 74.3126 cv
36.5099 74.3927 li
36.4176 74.4396 36.3317 74.5016 36.2535 74.5734 cv
34.4684 73.8815 32.6578 73.2956 31.0128 72.7648 cv
26.2267 71.2199 21.3497 70.7467 16.3346 70.9435 cv
15.5968 70.9723 15.3849 71.7458 15.6813 72.2199 cv
15.6305 72.4425 15.7042 72.6857 15.9772 72.7365 cv
17.9786 73.1076 19.9137 73.1579 21.8131 73.2233 cv
24.9435 73.8483 27.9835 74.8629 31.0157 76.0031 cv
34.067 77.1505 37.0275 78.881 40.1715 79.7868 cv
40.8883 80.2213 41.6373 80.5553 42.4093 80.7321 cv
46.0895 83.9606 50.296 85.9762 53.8043 82.5412 cv
53.8229 82.506 li
54.048 82.4987 54.2716 82.4782 54.4957 82.4591 cv
54.3893 82.88 54.9078 83.4088 55.3492 83.1085 cv
55.9449 82.7033 56.547 82.3092 57.149 81.9142 cv
58.5621 81.444 59.9444 80.6808 61.2784 79.5265 cv
61.3683 79.6266 li
61.2145 79.7843 li
60.7193 80.2931 61.503 81.0773 61.9933 80.5631 cv
63.5392 78.9416 65.2428 77.4684 66.8331 75.8922 cv
67.0319 75.7453 li
68.88 74.6525 70.7618 73.5421 72.4342 72.2272 cv
73.9542 71.4035 75.4908 70.5167 76.3478 69.1867 cv
76.692 68.6515 76.2325 68.0172 75.6598 67.9874 cv
cp
f
66.2472 111.432 mo
64.7076 110.398 62.7247 109.808 60.9483 109.336 cv
60.5108 109.22 60.3228 109.902 60.7618 110.014 cv
62.61 110.487 64.2545 111.29 66.0304 111.946 cv
66.3444 112.062 66.4977 111.601 66.2472 111.432 cv
f
80.5641 117.046 mo
79.0528 115.167 76.086 114.532 73.9186 113.591 cv
70.8492 112.257 68.0421 110.427 65.5357 108.211 cv
64.9977 107.735 64.2144 108.499 64.7404 109.006 cv
67.0319 111.217 69.5729 112.931 72.2809 114.588 cv
74.5226 115.96 77.421 118.199 80.1583 118.026 cv
80.6842 117.993 80.8776 117.435 80.5641 117.046 cv
f
62.3551 101.542 mo
61.5406 101.542 61.5392 102.808 62.3551 102.808 cv
63.1695 102.808 63.171 101.542 62.3551 101.542 cv
f
103.747 84.4376 mo
102.674 82.3795 100.773 80.5939 97.7877 79.3092 cv
96.7682 78.8702 95.9313 80.1896 96.9 80.8268 cv
97.7315 81.3737 98.4234 81.9591 99.0133 82.5695 cv
98.4606 85.8458 100.467 88.7931 100.478 92.1798 cv
100.48 92.5426 100.467 92.8981 100.443 93.2467 cv
98.0494 98.7701 92.0817 103.906 87.2936 105.589 cv
80.4347 107.998 72.5323 106.798 66.2648 103.139 cv
66.0348 102.915 65.8141 102.685 65.6119 102.44 cv
65.2066 101.948 64.6437 101.85 64.1163 101.985 cv
64.11 101.987 li
63.0611 102.261 62.1593 103.48 62.943 104.499 cv
63.0963 104.682 li
63.0865 104.773 63.1002 104.866 63.1149 104.96 cv
62.8522 104.852 li
61.9195 102.955 61.1393 101.12 60.7384 99.0289 cv
60.7955 98.9445 60.7691 98.8229 60.67 98.7775 cv
60.5489 98.4791 60.0387 98.6379 60.106 98.9987 cv
60.4528 100.859 61.0533 102.765 62.0026 104.435 cv
61.2535 104.01 60.5616 103.436 59.944 102.51 cv
58.5826 100.471 58.2223 98.0519 58.1329 95.6476 cv
58.6012 95.9357 59.2604 95.8566 59.4005 95.1539 cv
59.8346 92.9787 60.4757 90.9059 61.3326 88.8961 cv
61.5524 88.566 61.7735 88.237 61.9864 87.903 cv
62.0851 87.7487 62.067 87.5983 61.9898 87.484 cv
62.1491 87.1569 62.2936 86.8263 62.4659 86.5026 cv
62.7482 85.9718 63.0695 85.4513 63.403 84.9332 cv
64.4454 84.1457 65.5357 83.4215 66.6939 82.7872 cv
68.4523 81.8239 70.3375 81.1954 72.171 80.4328 cv
75.5958 79.5622 79.0997 79.0256 82.424 77.5304 cv
82.8439 77.3414 82.7584 76.5695 82.2892 76.5021 cv
82.1061 76.4757 81.9195 76.4601 81.735 76.4396 cv
84.7052 76.404 87.713 76.4821 90.2736 74.8961 cv
90.5841 74.7038 90.4767 74.154 90.0782 74.1754 cv
88.5831 74.2555 87.1563 74.6417 85.6695 74.8087 cv
85.5695 74.8156 li
85.9147 74.652 85.7335 74.0851 85.3697 74.0997 cv
83.5226 74.1759 81.6935 74.4962 79.8771 74.9122 cv
79.6334 74.9147 79.3912 74.9103 79.1471 74.9191 cv
77.1036 74.9928 75.3258 75.4698 73.711 76.5168 cv
73.4454 76.5861 73.1793 76.6579 72.9137 76.7247 cv
72.5123 76.8258 72.3878 77.1637 72.4498 77.4743 cv
72.4278 77.4923 li
72.3824 77.5524 li
70.1197 78.277 67.94 79.2809 65.9933 80.4684 cv
66.0743 80.2667 66.1617 80.0671 66.2267 79.86 cv
66.399 79.3112 65.7731 78.9289 65.3141 79.1588 cv
62.6148 80.5114 60.7936 83.5182 59.5807 86.7799 cv
59.4806 86.8854 59.3771 86.9909 59.2789 87.0959 cv
59.0743 87.3146 59.1041 87.5744 59.2355 87.7638 cv
58.8942 88.7941 58.6061 89.8346 58.3707 90.8449 cv
57.8844 91.5592 57.4196 92.2926 56.9762 93.0583 cv
56.9127 93.1681 56.8907 93.2746 56.8868 93.3776 cv
56.7418 93.4963 56.6383 93.6749 56.6251 93.9157 cv
56.4337 97.4572 56.5035 101.418 58.6925 104.403 cv
60.0255 106.221 62.8248 108.344 65.1891 107.6 cv
66.4225 108.731 67.8922 109.665 69.5172 110.414 cv
69.5738 110.485 69.6441 110.549 69.7443 110.589 cv
75.6002 112.913 84.1686 117.338 90.4342 114.301 cv
90.8668 114.091 90.7711 113.344 90.297 113.252 cv
87.9557 112.796 85.5538 112.83 83.1563 112.689 cv
86.8951 112.462 90.442 111.601 93.1535 110.176 cv
95.5504 108.916 97.9816 107.154 99.9332 105.018 cv
100.308 105.128 100.729 105.062 101.067 104.716 cv
106.141 99.5187 108.052 90.3668 103.747 84.4376 cv
f
30.5724 81.1393 mo
30.0255 80.8234 29.4669 80.5421 28.9103 80.2882 cv
28.8864 80.0455 li
29.4708 80.2941 30.0514 80.5621 30.6349 80.8537 cv
30.5885 80.941 30.568 81.0392 30.5724 81.1393 cv
25.4957 79.1042 mo
24.6573 78.9049 23.8287 78.7741 23.0084 78.7111 cv
22.8678 78.693 22.7247 78.6798 22.5831 78.6632 cv
24.3692 78.6706 25.9606 78.9811 27.4742 79.4991 cv
26.8532 79.3683 26.1896 79.2326 25.4957 79.1042 cv
49.9693 97.9952 mo
49.0118 100.428 48.0289 102.871 46.6798 105.119 cv
46.5489 105.338 46.3995 105.583 46.2345 105.846 cv
46.9762 103.179 46.9464 100.165 46.0968 97.6022 cv
46.1583 97.6364 li
46.3976 97.735 46.715 97.5675 46.8375 97.3371 cv
47.0514 97.5758 47.2687 97.8141 47.4772 98.0543 cv
47.6451 98.2482 47.9293 97.9645 47.7589 97.7726 cv
47.4737 97.4508 47.193 97.1183 46.9117 96.7878 cv
46.9234 95.0895 45.3385 93.5041 44.3961 92.1764 cv
43.0812 90.3229 41.692 88.5426 40.1813 86.8444 cv
39.4264 85.9962 38.1959 87.2409 38.9381 88.0875 cv
39.3746 88.5856 39.8029 89.0915 40.2237 89.6037 cv
39.5289 88.9098 38.8287 88.234 38.1432 87.5905 cv
37.1217 86.632 36.3981 85.942 35.3473 85.7584 cv
35.1207 85.3131 34.8502 84.8878 34.5406 84.4826 cv
34.9391 84.1711 34.9874 83.4411 34.4894 83.0719 cv
34.2174 82.8702 33.9591 82.6476 33.6954 82.4328 cv
34.0348 82.4777 34.4215 82.1134 34.1676 81.7804 cv
31.3888 78.1403 26.235 77.0143 21.861 77.3297 cv
21.1666 77.3795 21.0392 78.257 21.4865 78.5578 cv
20.9947 78.5192 20.5021 78.4943 20.0123 78.4855 cv
19.6813 78.2594 19.2491 78.3307 18.8541 78.5001 cv
15.8912 78.6208 13.1549 79.465 11.5802 81.859 cv
11.3536 82.2033 11.7379 82.7658 12.1495 82.5993 cv
12.8917 82.298 13.5943 81.9543 14.2955 81.6149 cv
14.1671 81.7687 14.0396 81.923 13.9098 82.0758 cv
13.3512 82.7321 12.5343 83.3932 12.2941 84.235 cv
12.1412 84.7697 12.8282 85.0954 13.1774 84.7404 cv
13.1798 84.7506 li
13.3141 84.6432 13.4274 84.5075 13.5372 84.3668 cv
13.7477 84.2082 14.0055 84.0724 14.1861 83.9264 cv
14.4288 83.694 li
14.4435 84.1559 15.004 84.4342 15.3937 84.2018 cv
16.7145 83.4122 17.4845 81.9039 18.5651 80.7712 cv
20.5577 80.6701 22.5709 80.8712 24.4899 81.4005 cv
25.4069 81.7409 26.3263 82.0749 27.2477 82.4025 cv
29.9718 83.7033 31.8463 85.9728 34.2325 87.6305 cv
34.7062 88.2433 35.028 89.215 35.3453 89.7491 cv
36.3434 91.4269 37.5602 93.0104 38.6905 94.6037 cv
41.4146 98.444 43.1988 104.023 39.0167 107.756 cv
38.5607 108.164 38.0904 108.513 37.61 108.818 cv
37.2887 108.949 36.9391 109.076 36.5529 109.198 cv
31.8053 110.71 26.6583 109.464 22.3687 107.252 cv
21.9449 107.033 21.5377 107.033 21.1881 107.161 cv
19.6593 106.363 18.2135 105.512 16.9078 104.724 cv
16.1686 104.158 15.4567 103.571 14.8189 102.95 cv
14.1031 102.254 12.7643 103.183 13.3834 104.058 cv
13.7951 104.64 14.2174 105.183 14.6466 105.71 cv
14.6944 105.856 14.7726 106 14.8907 106.136 cv
15.3517 106.668 15.8551 107.148 16.3756 107.607 cv
17.9234 109.114 19.6754 110.345 21.8521 111.318 cv
22.6437 111.672 23.6359 112.094 24.6842 112.447 cv
24.8239 112.509 24.9625 112.57 25.1017 112.632 cv
25.1744 112.742 25.2799 112.835 25.4445 112.878 cv
25.6144 112.922 25.7916 112.968 25.9742 113.015 cv
27.0006 113.46 28.0719 113.886 29.1627 114.237 cv
27.5509 114.67 25.9576 115.179 24.3917 115.82 cv
23.3238 116.258 23.7091 117.765 24.8717 117.562 cv
27.5241 117.098 30.1305 116.421 32.6749 115.551 cv
33.3116 115.371 33.9488 115.178 34.5846 114.976 cv
35.0099 114.931 35.4342 114.858 35.8551 114.748 cv
39.9757 114.874 43.7648 113.839 44.9571 109.847 cv
45.2467 109.538 45.5162 109.211 45.7755 108.881 cv
49.0944 108.47 49.8077 104.145 49.9176 101.206 cv
50.2955 100.235 50.6593 99.2579 51.0094 98.2819 cv
51.2457 97.6212 50.2193 97.361 49.9693 97.9952 cv
f
48.5685 90.4552 mo
45.3532 86.921 40.3097 83.1408 35.7276 81.7311 cv
35.0016 81.5075 34.4644 82.4728 34.9933 82.9933 cv
36.1803 84.1613 37.1153 85.4352 38.4396 86.4547 cv
38.7501 86.694 39.0538 86.1647 38.7472 85.9288 cv
38.1315 85.5309 37.6232 85.048 37.2159 84.484 cv
38.8678 85.507 40.5773 86.4542 42.1529 87.6027 cv
42.9303 88.1696 50.3453 94.0177 47.9703 94.9372 cv
47.6329 95.0675 47.4376 95.6285 47.8556 95.8156 cv
48.7755 96.2272 49.4498 96.1798 50.0025 95.1945 cv
50.9244 93.5514 49.6422 91.6359 48.5685 90.4552 cv
f
76.858 127.091 mo
75.2638 124.349 71.6608 126.33 72.0758 129.107 cv
72.2838 130.495 72.5245 131.797 72.6124 133.117 cv
72.3317 134.382 72.2555 135.705 72.3463 137.007 cv
72.5553 140.011 77.191 141.061 77.9049 137.758 cv
78.6564 134.283 78.6964 130.252 76.858 127.091 cv
cp
.4 .247059 .219608 rgb
f
41.004 132.691 mo
40.568 130.893 39.4581 129.124 37.6432 128.545 cv
35.859 127.976 34.1393 129.523 34.1393 131.249 cv
33.7233 132.063 33.5177 132.985 33.5973 133.91 cv
33.6915 135.011 34.024 136.107 34.6007 137.056 cv
35.3971 138.369 36.5118 138.959 37.9952 139.152 cv
39.0284 139.285 39.9371 138.487 40.4801 137.726 cv
41.4449 136.373 41.3776 134.231 41.004 132.691 cv
cp
f
105.757 17.4118 mo
103.682 15.3795 101.47 13.4899 99.1725 11.7062 cv
99.4967 11.4792 99.7057 11.1012 99.6617 10.7184 cv
101.559 13.0417 103.878 15.0524 106.228 17.0504 cv
106.052 17.1471 105.893 17.2687 105.757 17.4118 cv
cp
126.138 75.508 mo
125.951 73.6623 125.658 71.862 125.454 70.3058 cv
125.435 70.1559 125.406 70.0241 125.381 69.8844 cv
126.053 69.8244 126.645 69.421 126.763 68.5749 cv
126.785 68.4152 126.806 68.2487 126.828 68.0856 cv
126.829 68.0856 li
126.829 68.0817 li
127.032 66.5597 127.195 64.8869 127.121 63.2751 cv
129.706 57.5246 127.88 48.6115 126.253 43.3673 cv
126.084 42.8263 125.787 42.4308 125.422 42.1642 cv
125.066 38.3893 122.167 33.9665 120.577 31.3346 cv
119.926 30.2575 119.226 29.2189 118.501 28.2018 cv
116.746 23.9757 114.014 20.4254 110.662 17.3131 cv
106.324 13.2848 102.16 9.28677 98.0143 5.07827 cv
97.3258 4.38003 96.3942 5.26235 96.7443 6.05825 cv
97.3297 7.38931 98.0729 8.60073 98.9112 9.74185 cv
92.277 3.90444 81.8483 2.75552 73.4322 2.13882 cv
72.4039 2.06362 72.1534 3.77993 73.1861 3.95767 cv
77.5328 4.70376 81.7452 6.03579 85.9308 7.4103 cv
88.2252 8.16372 90.4689 9.17788 92.7374 10.0895 cv
97.2457 13.6271 101.284 17.6403 105.09 21.9616 cv
107.355 24.5324 109.473 27.2296 111.443 30.0333 cv
112.943 32.1691 113.876 34.2023 116.149 35.5143 cv
116.512 35.7238 116.95 35.6608 117.264 35.4328 cv
118.352 38.256 119.19 41.8942 120.932 44.2672 cv
122.006 48.4254 122.751 52.5407 123.352 56.7658 cv
123.214 58.6442 122.83 60.5163 122.755 62.3756 cv
121.319 62.0231 119.717 62.7536 118.858 63.9669 cv
118.213 64.8776 118.68 65.8385 119.464 66.3087 cv
119.093 66.3366 118.713 66.3693 118.318 66.4074 cv
116.601 66.5709 115.765 68.797 117.404 69.7814 cv
117.946 70.1544 118.437 70.5846 118.876 71.0729 cv
119.394 71.5949 120.001 71.6369 120.499 71.4113 cv
120.509 72.7003 120.849 74.2355 120.904 75.3332 cv
121.051 78.2008 120.688 81.338 121.88 83.986 cv
121.883 84.2936 121.884 84.6002 121.888 84.9083 cv
121.334 85.1466 120.885 85.6608 120.817 86.4567 cv
120.647 88.4215 120.713 90.1579 121.037 91.9494 cv
121.111 96.027 120.974 100.096 120.576 104.176 cv
120.509 104.855 120.821 105.288 121.265 105.495 cv
119.949 107.82 119.136 110.34 118.283 112.856 cv
118.106 113.007 117.953 113.199 117.847 113.449 cv
117.606 114.023 116.581 116.695 115.314 119.718 cv
115.148 119.987 114.979 120.256 114.797 120.52 cv
113.351 122.623 110.296 125.189 108.597 127.884 cv
107.983 127.511 107.221 127.437 106.492 127.941 cv
103.933 129.711 101.83 131.91 100.247 134.595 cv
99.6349 135.633 100.013 136.785 100.82 137.425 cv
100.153 137.943 99.4996 138.488 98.8434 139.015 cv
98.5861 139.161 98.3365 139.308 98.0831 139.454 cv
97.6417 138.89 96.88 138.626 96.0123 139.122 cv
94.7062 139.869 93.6656 140.622 92.7897 141.746 cv
92.0968 141.813 91.4567 141.953 90.7511 142.21 cv
89.7599 142.571 89.6227 143.671 90.0382 144.359 cv
88.6759 144.869 87.3126 145.248 85.9176 145.496 cv
86.2755 145.186 86.6129 144.85 86.9112 144.468 cv
87.3917 143.852 86.6378 143.033 86.0328 143.59 cv
84.298 145.186 81.6002 145.273 79.379 145.594 cv
78.0953 145.779 76.8234 146.041 75.5294 146.155 cv
74.8917 146.212 74.1754 146.135 73.526 146.247 cv
73.2218 146.22 72.9166 146.205 72.6134 146.167 cv
71.9943 146.089 71.5846 146.511 71.4303 147.032 cv
71.4132 147.032 li
70.3834 147.023 69.3478 146.786 68.3141 146.752 cv
66.232 146.683 63.9982 146.699 61.9733 147.178 cv
61.5026 147.289 61.483 148.051 61.9733 148.15 cv
64.3663 148.632 67.109 148.455 69.5045 147.972 cv
70.128 147.846 70.7462 147.751 71.3639 147.664 cv
71.1847 147.744 71.2003 148.053 71.4386 148.053 cv
71.4601 148.044 li
71.5934 148.37 71.8551 148.63 72.2706 148.699 cv
75.0963 149.169 77.8634 149.631 80.7408 149.513 cv
82.9088 149.424 85.3356 149.432 86.7247 147.61 cv
89.1588 147.321 91.7037 146.679 93.9069 145.631 cv
94.4195 145.77 94.9762 145.745 95.4757 145.472 cv
95.9488 145.213 96.4122 144.939 96.8795 144.673 cv
97.4049 144.81 97.9703 144.757 98.4645 144.427 cv
100.137 143.311 101.612 142.168 102.946 140.917 cv
103.057 140.876 103.169 140.827 103.282 140.76 cv
104.625 139.97 105.938 139.044 107.204 138.016 cv
108.901 137.49 110.328 136.072 111.045 134.406 cv
113.386 131.87 115.4 128.979 116.913 125.934 cv
119.679 124.303 121.292 119.997 122.39 117.339 cv
123.139 115.525 123.871 113.427 124.387 111.251 cv
126.088 106.559 126.825 101.482 126.938 96.4098 cv
128.595 93.9635 128.807 90.3214 128.834 87.5246 cv
128.875 83.32 127.879 79.2809 126.138 75.508 cv
cp
.831373 .572549 .501961 rgb
f
102.29 85.068 mo
101.813 83.696 99.7511 84.2355 100.098 85.672 cv
101.004 89.4235 101.323 92.9884 99.0773 96.3678 cv
98.9435 96.5426 li
97.1901 96.8991 95.713 98.9811 94.5177 100.057 cv
93.7628 100.737 93.8287 101.656 94.2935 102.329 cv
91.1232 103.943 87.9376 105.298 84.6197 106.092 cv
81.0284 105.146 77.2311 105.587 73.5699 104.592 cv
69.3521 103.447 65.3204 101.611 61.2672 99.9957 cv
61.253 99.9918 li
60.6651 98.6427 60.1285 97.2682 59.5792 95.9044 cv
59.1114 94.7423 57.2193 95.2077 57.6583 96.4337 cv
58.3868 98.4708 58.9083 100.766 59.9093 102.684 cv
60.484 103.785 61.7833 105.001 63.0543 104.143 cv
63.1427 104.083 63.2066 103.997 63.254 103.903 cv
63.4654 104.031 63.6944 104.162 63.9122 104.291 cv
67.0128 106.891 70.4933 109.46 74.4073 109.833 cv
74.6935 109.86 74.858 109.562 74.8073 109.313 cv
83.9664 111.303 95.2037 109.497 100.598 101.407 cv
101.396 100.39 102.09 99.2897 102.655 98.1119 cv
103.497 96.3585 103.845 94.7926 103.757 93.2331 cv
103.956 90.5265 103.281 87.9191 102.29 85.068 cv
f
44.4796 99.4367 mo
42.8385 93.6828 39.0221 88.819 33.7989 85.6828 cv
33.2491 85.3527 32.6432 85.5895 32.3009 86.0177 cv
31.9005 85.7828 31.5045 85.5426 31.1144 85.2946 cv
31.7916 85.0026 32.275 84.1745 31.5357 83.5915 cv
29.318 81.8434 27.0377 80.9474 24.4596 81.0954 cv
22.7999 80.6359 21.0875 80.6559 19.4483 81.0705 cv
19.2692 80.9708 19.0582 80.9064 18.7804 80.941 cv
18.6646 80.9557 18.5602 80.9777 18.4483 80.9943 cv
18.4459 80.986 li
18.3946 81.0031 li
16.1764 81.3473 14.6901 82.192 13.8229 84.402 cv
13.5226 85.1676 14.5606 85.9167 15.2174 85.4738 cv
15.3273 85.3996 15.4313 85.3288 15.5363 85.257 cv
15.8673 85.5558 16.3151 85.6964 16.817 85.5006 cv
18.6466 84.7853 20.3942 84.3478 22.2106 84.0157 cv
22.3478 84.0656 22.4962 84.1051 22.6691 84.1188 cv
23.9825 84.2204 25.2565 84.341 26.5201 84.5275 cv
26.5665 84.7296 26.6524 84.9293 26.8219 85.1051 cv
28.5553 86.9005 30.693 87.5895 32.8702 88.7057 cv
33.7443 89.1539 34.5201 89.6989 35.2306 90.2999 cv
36.8024 92.0949 38.1285 94.1037 39.0958 96.2858 cv
39.3712 97.2125 39.5685 98.1759 39.6549 99.1774 cv
39.7027 99.7296 40.0289 100.091 40.4327 100.273 cv
40.5099 100.584 40.587 100.894 40.6549 101.207 cv
40.8629 102.166 40.8688 103.19 41.3004 104.043 cv
41.2086 104.431 41.1002 104.809 40.9352 105.149 cv
39.6734 107.745 36.9332 108.679 34.3712 109.528 cv
34.0968 109.619 33.8903 109.767 33.7325 109.943 cv
33.0973 109.894 32.4649 109.827 31.8434 109.704 cv
29.2086 109.179 26.6168 108.627 24.0577 107.8 cv
23.8424 107.731 23.6476 107.755 23.4669 107.815 cv
21.3341 106.438 19.3043 104.902 17.4464 103.172 cv
16.3766 102.176 14.9816 103.652 15.8717 104.746 cv
17.6832 106.973 19.6808 108.919 22.0451 110.551 cv
23.7584 111.734 26.6276 113.517 28.7579 112.8 cv
28.8864 112.757 28.9728 112.675 29.0353 112.58 cv
32.7462 114.095 36.8556 114.973 38.9078 112.085 cv
39.1393 111.76 39.1046 111.351 38.9235 111.018 cv
40.8551 110.223 42.6515 109.133 43.8038 107.395 cv
45.0807 105.468 46.1466 101.485 44.4796 99.4367 cv
f
39.819 80.0944 mo
39.7101 80.0353 39.6007 79.9762 39.4918 79.9176 cv
39.3707 79.8522 39.2633 80.0436 39.3854 80.0998 cv
39.4982 80.1515 39.6114 80.2038 39.7242 80.256 cv
39.8321 80.3058 39.9269 80.1525 39.819 80.0944 cv
cp
f
43.1051 82.4264 mo
42.9996 82.4264 42.9996 82.5905 43.1051 82.5905 cv
43.2106 82.5905 43.2106 82.4264 43.1051 82.4264 cv
cp
f
67.5143 75.735 mo
65.4401 76.5832 63.5577 77.7887 61.5655 78.8078 cv
59.026 80.1066 56.3258 81.0607 53.6222 81.9552 cv
53.4396 82.0158 53.3253 82.1339 53.2633 82.2731 cv
51.0616 81.2726 48.5782 80.7951 46.319 79.922 cv
43.067 78.6657 39.8741 77.3166 36.7233 75.8249 cv
36.0646 75.5133 35.4879 76.4523 36.1432 76.8166 cv
41.1481 79.6007 47.7887 84.4132 53.7818 83.9914 cv
54.3082 83.9542 54.6222 83.3595 54.381 82.9494 cv
58.8697 81.0739 63.9527 79.1564 67.7423 76.1266 cv
67.921 75.984 67.7277 75.6476 67.5143 75.735 cv
cp
f
85.6046 77.2741 mo
83.2804 77.0792 80.9645 77.2907 78.6964 77.797 cv
78.6773 77.3795 78.3605 76.9938 77.8771 77.1955 cv
72.7887 78.4288 68.3951 81.1481 64.4723 84.5485 cv
64.2945 84.7028 64.2262 84.8791 64.2345 85.0475 cv
61.4918 87.3659 59.0831 90.1256 57.0792 93.5666 cv
56.9103 93.8566 57.3277 94.2062 57.5577 93.9357 cv
57.9708 93.4508 58.4034 92.9708 58.8326 92.4904 cv
59.1798 93.0216 59.8893 93.2721 60.4152 92.6432 cv
67.3053 84.403 75.8126 81.3991 85.7975 78.7013 cv
86.6256 78.4777 86.3937 77.3405 85.6046 77.2741 cv
f
73.4132 123.964 mo
71.943 124.17 70.1998 123.815 68.9371 124.755 cv
68.3824 125.167 68.0021 125.756 67.5377 126.26 cv
67.2482 126.575 66.9166 126.855 66.6427 127.184 cv
66.3917 127.486 66.3497 128.063 66.0973 127.425 cv
65.9069 126.944 65.5328 126.744 65.1656 126.746 cv
65.0216 126.518 64.8131 126.33 64.5196 126.248 cv
64.5294 126.224 li
63.215 126.026 62.6373 124.504 61.3551 124.106 cv
61.1359 124.038 60.9161 124.005 60.6988 123.992 cv
60.6129 122.402 60.276 120.865 59.7633 119.319 cv
59.4703 118.438 57.9108 118.516 58.0367 119.553 cv
58.2784 121.547 58.3385 123.559 58.4181 125.564 cv
58.4322 125.915 58.6373 126.238 58.9181 126.456 cv
58.6095 126.57 58.3473 126.753 58.1383 126.987 cv
57.756 126.894 57.3942 126.724 57.0445 126.488 cv
56.4088 126.059 55.7535 126.432 55.4786 126.994 cv
55.3063 126.7 55.0309 126.424 54.6959 126.162 cv
54.2843 125.839 53.8829 125.573 53.3653 125.463 cv
53.2535 125.439 53.1427 125.437 53.0318 125.433 cv
52.9567 125.194 52.8517 124.956 52.7013 124.717 cv
52.2955 124.077 51.3805 123.91 50.8258 124.476 cv
50.0616 125.255 49.5338 126.119 49.1236 127.125 cv
48.7784 127.974 49.7858 128.825 50.5802 128.581 cv
50.7399 128.532 50.8942 128.497 51.0504 128.457 cv
51.2589 128.552 51.4806 128.622 51.7208 128.639 cv
52.1666 128.671 52.5206 128.53 52.901 128.413 cv
53.2237 128.583 53.5504 128.882 53.9068 129.001 cv
54.3336 129.145 54.9923 129.006 55.2799 128.638 cv
55.4122 128.469 55.4962 128.309 55.5607 128.152 cv
55.6529 128.292 li
56.691 129.339 58.0109 129.905 59.4903 129.902 cv
59.7032 129.901 59.8898 129.864 60.0543 129.803 cv
60.1393 129.872 li
60.5592 130.135 61.0797 130.3 61.5807 130.258 cv
62.694 130.163 63.0812 129.454 63.4371 128.537 cv
63.671 128.603 63.9156 128.655 64.1964 128.688 cv
64.358 128.706 64.4977 128.685 64.6266 128.65 cv
65.5387 129.558 67.4791 129.416 68.3375 128.546 cv
68.6422 128.237 68.7872 127.876 68.9601 127.485 cv
69.3409 126.623 69.8043 126.235 70.6451 125.88 cv
71.6671 125.446 72.7438 125.171 73.6393 124.5 cv
73.9117 124.295 73.7472 123.918 73.4132 123.964 cv
cp
f
92.5577 131.92 mo
91.7062 130.924 91.0968 131.557 89.9786 130.941 cv
89.296 130.565 89.2472 129.839 88.6246 129.315 cv
87.3365 128.231 85.4737 129.006 84.11 128.182 cv
83.6857 127.926 83.1466 128.035 82.8185 128.366 cv
82.7701 128.198 82.7521 128.013 82.7872 127.794 cv
82.9967 126.865 82.2159 126.129 81.4366 126.099 cv
81.401 126.043 li
80.5153 124.777 78.8224 125.598 79.0196 127.047 cv
79.2208 128.526 79.9967 129.665 80.6622 130.961 cv
80.6539 131.293 80.6442 131.627 80.6344 131.96 cv
80.5968 131.988 li
79.9425 132.743 79.9371 133.655 79.8478 134.621 cv
79.7428 135.748 79.7447 136.877 79.7804 138.008 cv
79.8278 139.517 82.212 139.511 82.1241 138.008 cv
82.1153 137.855 82.1168 137.702 82.11 137.549 cv
82.547 137.419 82.9166 137.062 82.9488 136.465 cv
82.9606 136.333 li
83.379 136.326 83.7853 136.094 83.899 135.617 cv
84.1993 134.36 84.2223 132.863 83.9215 131.538 cv
83.9947 131.292 84.0685 131.046 84.1446 130.801 cv
85.2633 131.174 86.5787 131.008 87.607 131.804 cv
89.0118 132.891 90.8995 134.204 92.5577 132.831 cv
92.8404 132.597 92.7662 132.164 92.5577 131.92 cv
cp
f
59.2692 147.028 mo
56.4147 147.104 53.5895 146.449 50.7569 146.591 cv
50.4645 146.606 50.3004 147.031 50.5973 147.181 cv
53.1959 148.489 56.4322 148.375 59.2692 148.223 cv
60.0323 148.182 60.0431 147.007 59.2692 147.028 cv
cp
f
50.5382 144.358 mo
48.7921 143.995 47.0455 143.632 45.2994 143.27 cv
44.0148 143.003 42.8151 142.582 41.6012 143.212 cv
41.3902 143.321 41.402 143.586 41.5323 143.745 cv
42.4191 144.829 43.8194 144.898 45.1222 145.169 cv
46.7594 145.508 48.3966 145.849 50.0338 146.189 cv
51.2257 146.437 51.7355 144.607 50.5382 144.358 cv
cp
f
40.5133 145.272 mo
40.1534 144.839 39.735 144.464 39.2945 144.112 cv
39.8815 144.139 40.0753 143.18 39.4308 142.932 cv
38.9874 142.762 38.5436 142.591 38.1002 142.421 cv
37.7071 142.27 37.4381 142.547 37.3815 142.874 cv
35.7916 142.038 34.0279 141.438 32.4117 140.837 cv
32.9176 140.259 32.9962 139.297 32.1315 138.82 cv
31.1173 138.262 30.1344 137.646 29.2208 136.932 cv
28.6344 136.475 28.1422 136.069 27.5714 135.752 cv
27.6227 135.635 27.6246 135.497 27.5196 135.406 cv
26.7682 134.756 25.9986 134.131 25.2457 133.483 cv
24.3585 131.84 23.1783 130.236 21.4547 129.8 cv
20.9176 129.665 20.4767 130.35 20.9 130.753 cv
21.9733 131.772 22.7594 133.022 23.9254 133.964 cv
24.0944 134.1 24.2716 134.229 24.4474 134.359 cv
24.8121 134.928 25.1505 135.517 25.483 136.101 cv
25.4996 136.12 li
25.5113 136.236 li
26.0494 138.561 28.8341 140.043 30.7828 141.128 cv
30.9611 141.227 31.1368 141.279 31.3068 141.298 cv
31.2726 141.536 31.3527 141.781 31.611 141.903 cv
34.4044 143.214 37.1158 145.299 40.1715 145.859 cv
40.525 145.924 40.7428 145.547 40.5133 145.272 cv
cp
f
31.6422 132.859 mo
31.3907 132.14 30.5206 131.81 29.8795 132.06 cv
29.5094 131.673 28.9259 131.694 28.4982 131.959 cv
27.5861 131.555 26.483 131.127 25.7677 131.679 cv
24.9742 132.292 25.2174 133.569 26.1876 133.819 cv
26.5641 133.915 26.858 133.799 27.0665 133.598 cv
27.589 133.805 28.1705 134.171 28.5182 134.329 cv
28.7262 134.399 li
28.9894 134.696 29.296 134.956 29.6446 135.209 cv
29.857 135.363 30.1432 135.406 30.4244 135.369 cv
31.089 135.56 31.8483 135.276 32.0445 134.503 cv
32.0738 134.388 32.1031 134.273 32.1324 134.158 cv
32.2838 133.562 32.0318 133.111 31.6422 132.859 cv
cp
f
21.5665 128.455 mo
20.777 127.986 19.8849 127.473 19.233 126.779 cv
20.0397 126.79 20.4215 125.869 19.9093 125.216 cv
19.5187 124.718 18.9371 124.426 18.4845 123.979 cv
18.0533 123.553 17.7081 123.046 17.2648 122.639 cv
16.9357 122.226 16.1778 122.51 16.1832 123.055 cv
16.191 123.945 16.7057 125.009 17.4332 125.778 cv
17.6569 126.126 17.9322 126.427 18.2267 126.73 cv
19.1324 127.661 20.149 128.314 21.2945 128.921 cv
21.6002 129.083 21.8663 128.633 21.5665 128.455 cv
cp
f
13.0416 112.222 mo
12.6505 110.659 12.2799 109.085 11.6305 107.608 cv
11.4323 107.156 10.6442 107.377 10.6915 107.862 cv
10.8483 109.471 11.2994 111.029 11.7233 112.585 cv
12.0392 113.746 12.2672 114.984 12.7027 116.118 cv
12.734 116.295 li
12.8068 116.392 12.8668 116.496 12.9269 116.6 cv
13.0138 116.789 13.0875 116.986 13.1905 117.167 cv
13.3692 117.588 14.0055 117.346 14.0084 116.945 cv
14.0221 115.349 13.4279 113.762 13.0416 112.222 cv
f
8.99082 87.8893 mo
8.9376 87.6388 8.61145 87.5846 8.44202 87.7448 cv
7.80967 88.3434 7.81017 89.0954 7.75109 89.9206 cv
7.67734 90.9503 7.54456 91.9738 7.52744 93.0065 cv
7.51818 93.5997 8.48594 93.5895 8.44152 93.0065 cv
8.36582 92.0045 8.33558 91.0148 8.6134 90.0372 cv
8.82824 89.2829 9.1583 88.6852 8.99082 87.8893 cv
f
31.5826 113.607 mo
30.4537 113.107 29.2784 113.276 28.0641 113.192 cv
26.3434 113.073 24.6891 112.612 23.1095 111.93 cv
22.9288 111.852 22.754 111.858 22.6002 111.909 cv
22.2525 111.722 21.9078 111.536 21.5787 111.339 cv
20.0011 110.395 18.4991 109.341 17.0519 108.209 cv
17.2135 108.084 17.2906 107.876 17.1407 107.649 cv
16.4635 106.623 15.608 105.771 14.84 104.819 cv
14.0616 103.854 13.5402 102.729 12.797 101.751 cv
12.4825 101.172 11.4908 101.506 11.6437 102.241 cv
11.9113 103.529 12.8033 104.755 13.587 105.785 cv
14.337 106.772 15.15 107.617 16.2604 108.161 cv
16.1559 108.297 16.1359 108.484 16.3097 108.64 cv
17.7174 109.901 19.1876 111.086 20.7389 112.167 cv
22.1119 113.123 23.5948 114.245 25.299 114.426 cv
25.3888 114.403 li
27.5201 115.189 29.9483 115.67 31.5826 114.679 cv
31.9459 114.46 32.0275 113.804 31.5826 113.607 cv
f
85.9347 111.121 mo
85.2085 111.034 84.481 111.056 83.7524 111.078 cv
83.2049 111.094 82.6567 111.11 82.108 111.081 cv
80.6817 111.003 79.2745 110.76 77.8839 110.443 cv
77.2535 110.299 76.984 111.258 77.6159 111.415 cv
80.1939 112.057 83.4508 112.778 86.0685 112.111 cv
86.6603 111.96 86.464 111.184 85.9347 111.121 cv
f
85.1051 110.292 mo
85.1051 110.392 li
85.1051 110.292 li
cp
f
93.5362 146.464 mo
98.2941 145.038 103.827 142.731 106.717 138.457 cv
106.976 138.074 106.487 137.719 106.14 137.88 cv
101.643 139.963 97.7789 142.964 93.0319 144.633 cv
91.8927 145.033 92.3522 146.819 93.5362 146.464 cv
cp
.709804 .466667 .407843 rgb
f
101.883 141.432 mo
104.647 139.32 107.41 137.17 109.998 134.843 cv
112.058 132.992 114.733 130.62 115.162 127.751 cv
115.291 126.887 114.313 126.11 113.595 126.839 cv
111.572 128.89 109.99 131.331 107.922 133.387 cv
105.616 135.68 103.267 137.913 100.832 140.07 cv
100.108 140.713 101.094 142.035 101.883 141.432 cv
cp
f
108.237 136.808 mo
111.179 134.474 115.45 132.783 116.303 128.675 cv
116.945 125.581 111.954 125.555 112.596 128.675 cv
112.591 128.789 112.587 128.902 112.583 129.015 cv
112.523 129.587 113.184 129.988 113.68 129.851 cv
113.797 129.819 113.914 129.787 114.031 129.755 cv
113.745 129.717 113.458 129.679 113.171 129.642 cv
113.274 129.702 113.377 129.763 113.48 129.824 cv
113.25 128.947 113.02 128.071 112.79 127.194 cv
112.058 128.72 111.268 129.925 110.077 131.135 cv
108.835 132.397 107.51 133.582 106.348 134.919 cv
105.199 136.24 106.905 137.865 108.237 136.808 cv
cp
f
112.985 132.718 mo
114.652 131.215 116.23 129.617 117.663 127.888 cv
118.965 126.316 120.381 124.539 120.302 122.392 cv
120.274 121.616 119.493 120.85 118.671 121.149 cv
116.754 121.846 115.593 123.464 114.317 124.973 cv
112.931 126.61 111.429 128.134 109.836 129.569 cv
107.703 131.493 110.86 134.634 112.985 132.718 cv
cp
f
118.335 124.544 mo
119.867 122.124 121.413 119.697 122.77 117.173 cv
123.831 115.201 124.958 113.07 124.576 110.792 cv
124.463 110.125 123.535 109.966 123.107 110.404 cv
121.516 112.028 120.922 114.574 120.01 116.604 cv
118.955 118.951 117.677 121.183 116.412 123.421 cv
115.703 124.673 117.569 125.753 118.335 124.544 cv
cp
f
122.793 115.708 mo
124.676 111.671 127.501 106.409 127.059 101.856 cv
126.936 100.587 125.192 99.8522 124.482 101.158 cv
123.387 103.172 123.109 105.429 122.531 107.626 cv
121.904 110.007 121.105 112.326 120.202 114.616 cv
119.616 116.099 122.115 117.163 122.793 115.708 cv
cp
f
124.747 104.64 mo
126.812 102.791 127.164 100.045 127.35 97.4035 cv
127.567 94.3395 128.366 90.0978 126.563 87.4171 cv
126.298 87.0246 125.607 86.7956 125.256 87.2487 cv
123.621 89.3581 123.793 92.0133 123.712 94.6051 cv
123.616 97.6789 123.388 100.388 122.534 103.352 cv
122.151 104.678 123.797 105.492 124.747 104.64 cv
cp
f
126.842 96.8415 mo
127.304 89.8727 128.477 81.8395 126.96 74.9806 cv
126.603 73.3634 124.378 73.8854 124.245 75.3478 cv
124.122 76.6989 124.065 77.9289 124.152 79.2838 cv
124.213 80.234 125.684 80.883 126.15 79.8249 cv
127.789 76.1007 128.417 72.2667 128.702 68.2262 cv
128.863 65.944 125.424 66.0172 125.187 68.2262 cv
124.977 70.173 124.887 72.0016 124.925 73.9591 cv
124.955 75.5475 127.486 76.028 127.802 74.3483 cv
128.764 69.2448 130.478 63.026 128.759 57.9674 cv
128.497 57.195 127.529 57.2545 127.245 57.9674 cv
125.349 62.736 125.834 68.5324 124.977 73.5695 cv
125.919 73.8292 126.86 74.089 127.802 74.3483 cv
128.243 72.3014 128.524 70.3078 128.702 68.2262 cv
127.53 68.2262 126.359 68.2262 125.187 68.2262 cv
125.239 71.883 124.723 75.3957 124.191 78.9992 cv
124.88 78.9992 125.568 78.9992 126.257 78.9992 cv
126.445 78.0148 126.633 77.0299 126.821 76.0456 cv
125.979 75.6906 125.136 75.3356 124.294 74.9806 cv
122.648 81.8058 123.676 89.8747 124.006 96.8415 cv
124.093 98.673 126.722 98.6593 126.842 96.8415 cv
cp
f
128.878 54.172 mo
129.164 51.9914 128.813 49.9274 128.237 47.82 cv
127.689 45.817 127.335 43.4577 126.272 41.6696 cv
125.91 41.0607 124.906 41.1549 124.73 41.8708 cv
124.272 43.7306 125.003 45.4816 125.519 47.2726 cv
126.181 49.5729 126.734 51.7628 126.417 54.172 cv
126.212 55.7375 128.675 55.7223 128.878 54.172 cv
cp
f
112.945 25.5026 mo
115.573 28.3615 117.837 31.5177 119.821 34.8542 cv
121.446 37.5851 122.405 41.0998 124.63 43.3605 cv
125.256 43.9967 126.329 43.5075 126.351 42.6481 cv
126.439 39.1808 123.894 35.6364 122.022 32.8771 cv
119.823 29.6374 117.124 26.839 114.205 24.2433 cv
113.35 23.4826 112.165 24.654 112.945 25.5026 cv
cp
f
117.984 30.9918 mo
120.031 33.6452 121.739 36.7111 122.842 39.882 cv
123.725 42.4191 123.48 45.5866 125.266 47.6232 cv
125.856 48.296 126.931 48.0358 127.364 47.3527 cv
129.054 44.6886 127.263 40.5211 126.153 37.8644 cv
124.757 34.5211 122.693 31.8473 120.046 29.4015 cv
119.012 28.4459 117.033 29.758 117.984 30.9918 cv
cp
f
124.128 37.8361 mo
122.469 34.2638 120.322 31.0089 118.837 27.3488 cv
117.817 24.8366 116.533 21.9699 113.974 20.7418 cv
113.074 20.3102 111.698 21.2868 112.435 22.2809 cv
113.373 23.5451 114.579 24.5324 115.426 25.8678 cv
116.294 27.235 116.797 28.8195 117.561 30.2453 cv
119.116 33.1496 120.952 35.8844 122.368 38.8654 cv
122.932 40.0529 124.677 39.0172 124.128 37.8361 cv
cp
f
115.948 23.3263 mo
114.177 21.3356 112.506 19.2599 110.722 17.2829 cv
109.365 15.7785 107.843 13.193 105.734 12.8498 cv
105.294 12.7785 104.744 13.0412 104.785 13.5734 cv
104.953 15.7575 107.165 17.3048 108.59 18.8219 cv
110.505 20.86 112.526 22.7926 114.457 24.818 cv
115.4 25.8078 116.845 24.3346 115.948 23.3263 cv
cp
f
107.858 15.1085 mo
105.07 12.9005 102.433 10.5695 99.5353 8.4938 cv
97.5138 7.04556 95.1359 5.2687 92.5402 5.76675 cv
91.9283 5.88394 91.7574 6.73306 92.1783 7.13784 cv
93.9142 8.80776 96.5143 9.75894 98.5172 11.1471 cv
101.225 13.0246 104.016 14.7145 106.764 16.5255 cv
107.606 17.0802 108.668 15.7497 107.858 15.1085 cv
cp
f
95.609 6.9269 mo
91.3097 5.62515 86.797 4.62564 82.34 4.09683 cv
81.6612 4.01626 81.1593 4.8273 81.3341 5.41714 cv
81.9049 7.34097 83.7233 7.37564 85.4698 7.62026 cv
88.6573 8.06606 91.7809 8.69839 94.88 9.57144 cv
96.5836 10.0514 97.2955 7.43765 95.609 6.9269 cv
cp
f
83.5997 4.42446 mo
81.2833 3.95571 78.8121 3.31606 76.4386 3.40542 cv
76.1266 3.41714 76.0821 3.83315 76.3668 3.93472 cv
78.5773 4.72573 80.9967 5.02017 83.2755 5.59976 cv
84.0406 5.79409 84.3634 4.57876 83.5997 4.42446 cv
cp
f
74.9376 2.43618 mo
72.2325 2.18667 68.8326 1.80239 66.2613 2.84536 cv
65.757 3.04995 65.5509 3.98647 66.2613 4.08853 cv
69.09 4.49282 72.0611 3.98696 74.9376 4.26431 cv
76.1061 4.3771 76.1027 2.5436 74.9376 2.43618 cv
cp
f
13.379 105.055 mo
15.4396 106.795 18.5099 112.432 21.8443 111.224 cv
22.4508 111.005 22.5748 110.38 22.1959 109.892 cv
21.7208 109.281 21.0182 108.927 20.3888 108.492 cv
19.5924 107.942 18.8991 107.301 18.2071 106.626 cv
16.9547 105.404 15.7272 104.483 14.1085 103.801 cv
13.4191 103.511 12.8278 104.59 13.379 105.055 cv
f
17.6842 108.934 mo
18.6032 109.671 19.5226 110.408 20.4415 111.146 cv
21.234 111.781 22.0582 112.619 23.0958 112.774 cv
23.6359 112.854 23.9879 112.395 23.7706 111.896 cv
23.3541 110.938 22.3302 110.353 21.5147 109.755 cv
20.5646 109.058 19.6144 108.361 18.6642 107.664 cv
17.9308 107.126 16.9674 108.359 17.6842 108.934 cv
f
24.0421 113.178 mo
27.9308 114.599 33.3145 115.829 37.2696 114.077 cv
37.9303 113.784 37.5065 112.91 36.9386 112.854 cv
35.9033 112.752 34.8621 112.808 33.8184 112.865 cv
32.8753 112.916 31.9302 112.967 30.9854 112.901 cv
28.7423 112.743 26.6222 112.23 24.5094 111.483 cv
23.4381 111.104 22.9889 112.793 24.0421 113.178 cv
f
30.4386 114.5 mo
34.9337 114.519 41.5182 112.624 43.275 107.944 cv
43.4601 107.453 42.8175 107.003 42.3971 107.27 cv
40.6315 108.39 39.2804 110.006 37.4581 111.083 cv
35.2946 112.362 32.942 113.064 30.4386 113.234 cv
29.6339 113.289 29.6153 114.496 30.4386 114.5 cv
f
40.4381 108.892 mo
40.4381 108.792 li
40.4381 108.892 li
f
21.2042 108.86 mo
24.4108 110.657 29.774 113.23 33.4254 111.528 cv
33.8458 111.332 33.8316 110.636 33.4254 110.435 cv
31.8497 109.658 29.965 109.71 28.2491 109.416 cv
26.0836 109.045 24.0153 108.38 22.0201 107.464 cv
21.0919 107.037 20.2794 108.341 21.2042 108.86 cv
f
35.255 111.154 mo
38.7174 110.395 45.0138 109.103 45.652 104.767 cv
45.7394 104.174 45.1349 103.466 44.5157 103.893 cv
43.1808 104.815 42.1114 106.031 40.6769 106.813 cv
38.7994 107.836 36.6578 108.277 34.5885 108.736 cv
33.0128 109.086 33.6798 111.5 35.255 111.154 cv
f
44.0475 104.724 mo
44.8971 101.278 45.0475 95.027 41.358 93.0426 cv
40.8146 92.7506 40.3087 93.2301 40.3937 93.7838 cv
40.6412 95.3956 41.6339 96.8708 42.0978 98.4484 cv
42.671 100.399 42.7643 102.265 42.3751 104.263 cv
42.1642 105.346 43.7774 105.819 44.0475 104.724 cv
f
42.2628 95.671 mo
40.9816 93.0197 39.2945 90.2848 36.8868 88.526 cv
36.0011 87.8786 34.7374 89.1598 35.3678 90.0451 cv
37.0099 92.3498 38.8043 94.3903 40.0572 96.9606 cv
40.7779 98.4396 42.9752 97.1451 42.2628 95.671 cv
f
35.8864 88.0631 mo
33.69 86.1017 30.485 84.1046 27.4113 84.5983 cv
26.9679 84.6696 26.9498 85.2213 27.1734 85.4992 cv
28.0196 86.549 29.4181 86.8629 30.6148 87.3834 cv
31.9454 87.9616 33.1319 88.7721 34.1959 89.7536 cv
35.3278 90.7975 37.0333 89.0875 35.8864 88.0631 cv
f
23.379 82.5211 mo
22.2809 82.9684 20.8873 83.3004 19.9903 84.0968 cv
19.6876 84.3649 19.9581 84.7799 20.2882 84.8165 cv
21.4181 84.9435 22.7379 84.4215 23.8336 84.1711 cv
24.9284 83.9201 24.3844 82.1115 23.379 82.5211 cv
f
64.4826 87.6505 mo
67.3253 86.319 70.2711 85.2619 73.2052 84.1544 cv
75.5367 83.275 78.1471 82.7614 80.2643 81.4396 cv
80.7838 81.1154 80.5621 80.3278 79.9567 80.3038 cv
74.4532 80.0885 68.3741 83.7223 63.69 86.2946 cv
62.7921 86.7877 63.5811 88.0729 64.4826 87.6505 cv
f
82.2892 79.9914 mo
83.6207 79.4581 84.9273 78.9337 86.2906 78.4865 cv
87.173 78.1964 86.9908 76.9562 86.0753 76.8947 cv
78.9063 76.4108 70.5665 80.0856 64.4239 83.5509 cv
63.965 83.8102 64.1358 84.6579 64.7076 84.5993 cv
67.9884 84.2619 70.9083 82.7301 73.9347 81.5026 cv
77.9059 79.8922 81.7589 78.7946 86.0753 78.5153 cv
85.9386 78.0119 85.8024 77.5084 85.6661 77.005 cv
84.3961 77.6735 83.1109 78.2482 81.8014 78.8346 cv
81.1549 79.1242 81.6217 80.2584 82.2892 79.9914 cv
f
64.2882 83.3351 mo
62.6217 84.6076 60.8121 86.1251 59.7487 87.9635 cv
59.1608 88.9791 60.5782 90.1427 61.4049 89.2414 cv
62.7706 87.7531 63.9352 86.2204 65.524 84.9366 cv
66.4142 84.2169 65.2101 82.6315 64.2882 83.3351 cv
f
58.9498 91.2843 mo
58.7237 92.7213 58.4244 94.214 58.5103 95.674 cv
58.5509 96.3561 59.4239 96.441 59.6612 95.8297 cv
60.1666 94.528 60.3385 93.0993 60.5543 91.7267 cv
60.7193 90.6788 59.1163 90.2277 58.9498 91.2843 cv
f
57.609 97.5197 mo
58.8536 101.013 61.6666 105.474 65.6388 106.164 cv
66.1178 106.247 66.5348 105.69 66.1402 105.302 cv
64.9132 104.095 63.4273 103.178 62.2047 101.96 cv
60.8199 100.581 59.7735 98.9342 59.0558 97.1208 cv
58.7076 96.2418 57.2809 96.5973 57.609 97.5197 cv
f
67.899 105.903 mo
70.9869 107.191 75.9264 109.2 79.2223 107.805 cv
79.5997 107.645 79.5817 107 79.2223 106.834 cv
77.6906 106.126 75.9669 106.272 74.3121 106.042 cv
72.2433 105.754 70.2457 105.223 68.2794 104.525 cv
67.3951 104.211 67.0734 105.56 67.899 105.903 cv
f
72.691 107.892 mo
77.5284 108.641 83.9132 109.632 88.506 107.523 cv
89.3033 107.156 88.796 106.111 88.1036 106.038 cv
85.7828 105.793 83.4444 106.368 81.1153 106.478 cv
78.4664 106.602 75.8204 106.416 73.1954 106.062 cv
72.0094 105.902 71.4757 107.704 72.691 107.892 cv
f
87.4264 108.548 mo
89.5709 108.029 91.6905 107.215 93.5162 105.953 cv
95.4078 104.646 96.6803 102.446 98.1466 100.714 cv
98.2716 100.566 98.0753 100.361 97.9313 100.499 cv
94.8092 103.464 91.2872 106.068 87.0587 107.215 cv
86.1993 107.448 86.5611 108.757 87.4264 108.548 cv
f
102.007 95.2106 mo
102.551 93.3673 103.033 91.4557 102.912 89.5187 cv
102.899 89.3019 102.557 89.15 102.453 89.3942 cv
101.703 91.1554 101.213 93.0168 100.515 94.799 cv
100.157 95.7116 101.72 96.1798 102.007 95.2106 cv
f
100.571 88.2897 mo
100.986 90.505 100.865 92.6437 100.154 94.7902 cv
99.5607 96.5836 98.4767 98.0861 97.7843 99.8219 cv
97.4938 100.55 98.5128 101.328 99.1441 100.867 cv
102.98 98.0685 103.364 92.0241 102.469 87.7663 cv
102.208 86.5202 100.339 87.0548 100.571 88.2897 cv
f
54.5436 147.392 mo
56.191 148.32 59.7526 149.622 61.2555 147.85 cv
61.4733 147.594 61.3854 147.239 61.0641 147.126 cv
60.193 146.819 59.3058 147.093 58.4108 147.14 cv
57.2526 147.201 56.1261 146.957 55.0641 146.502 cv
54.4723 146.248 53.9484 147.057 54.5436 147.392 cv
cp
f
60.4454 149.472 mo
65.2379 149.039 70.9445 148.9 75.4513 147.146 cv
76.1612 146.869 76.1031 145.782 75.2643 145.764 cv
70.3995 145.663 65.319 146.971 60.4454 147.386 cv
59.1163 147.499 59.109 149.593 60.4454 149.472 cv
cp
f
82.2887 147.355 mo
86.6031 146.256 90.9508 144.789 95.4127 144.615 cv
95.8468 144.598 95.8741 144.054 95.5089 143.902 cv
93.5587 143.085 91.566 143.544 89.5792 144.03 cv
87.0182 144.656 84.4728 145.358 81.921 146.022 cv
81.0602 146.245 81.4249 147.575 82.2887 147.355 cv
cp
f
96.1798 144.49 mo
98.9474 142.94 102.791 141.077 104.395 138.223 cv
104.677 137.722 104.206 137.009 103.614 137.207 cv
102.037 137.735 100.844 138.78 99.4874 139.712 cv
98.0382 140.707 96.5358 141.616 94.9967 142.466 cv
93.6769 143.195 94.8605 145.229 96.1798 144.49 cv
cp
f
97.8146 139.651 mo
100.43 137.921 103.177 136.185 105.213 133.778 cv
105.514 133.422 105.14 132.874 104.702 133.115 cv
101.998 134.605 99.6324 136.651 97.069 138.376 cv
96.2858 138.903 97.0172 140.178 97.8146 139.651 cv
cp
f
114.979 124.255 mo
115.943 122.699 116.984 121.184 117.899 119.598 cv
118.708 118.196 119.839 116.85 120.407 115.342 cv
120.562 114.931 120.014 114.73 119.741 114.954 cv
118.437 116.028 117.498 117.682 116.468 119.023 cv
115.4 120.413 114.493 121.942 113.562 123.427 cv
113 124.324 114.423 125.152 114.979 124.255 cv
cp
f
124.306 102.523 mo
124.835 98.3234 124.697 94.1881 124.298 89.9865 cv
123.897 85.756 124.821 81.8913 125.149 77.6969 cv
125.178 77.3239 124.62 77.1896 124.45 77.508 cv
122.739 80.7165 123.115 83.7443 122.946 87.2995 cv
122.712 92.2599 122.916 97.3166 122.234 102.243 cv
122.026 103.749 124.113 104.051 124.306 102.523 cv
cp
f
126.43 70.008 mo
126.467 68.8957 126.564 67.7916 126.763 66.6955 cv
126.924 65.8112 127.294 65.0441 126.874 64.2038 cv
126.73 63.9152 126.275 63.7897 126.008 63.9767 cv
125.152 64.5763 125.133 65.6393 124.99 66.6154 cv
124.824 67.7409 124.736 68.8708 124.719 70.008 cv
124.702 71.1115 126.393 71.1066 126.43 70.008 cv
cp
f
123.144 74.4103 mo
122.822 76.7765 122.239 79.4992 122.741 81.8649 cv
122.895 82.591 123.917 82.4972 124.119 81.8649 cv
124.812 79.6999 124.729 77.1847 125.065 74.9401 cv
125.254 73.6793 123.316 73.1505 123.144 74.4103 cv
cp
f
126.427 66.4469 mo
127.619 59.8439 128.654 53.7365 127.063 47.0871 cv
127.012 46.8737 126.646 46.9132 126.672 47.1398 cv
126.891 49.0651 126.755 54.0929 126.442 56.0734 cv
125.921 59.3673 125.211 62.6496 124.462 65.9049 cv
124.165 67.194 126.197 67.7252 126.427 66.4469 cv
cp
f
124.228 40.8107 mo
123.264 38.8273 121.774 37.2506 120.708 35.3512 cv
119.593 33.3634 118.998 31.4357 117.323 29.7765 cv
116.886 29.3439 116.073 29.7775 116.266 30.3922 cv
116.89 32.3791 117.766 34.6242 118.826 36.4118 cv
119.319 37.2428 120.046 37.7687 120.716 38.4474 cv
121.621 39.3649 122.321 40.4391 122.953 41.5558 cv
123.426 42.3918 124.64 41.6564 124.228 40.8107 cv
cp
f
116.484 31.7838 mo
115.588 30.3625 114.587 28.9826 113.563 27.6496 cv
112.644 26.4518 111.716 25.4235 110.26 24.9225 cv
109.752 24.7482 109.271 25.3913 109.559 25.8351 cv
110.343 27.048 111.459 27.7951 112.567 28.693 cv
113.826 29.714 114.841 30.8786 115.796 32.1862 cv
116.092 32.591 116.763 32.2267 116.484 31.7838 cv
cp
f
100.404 14.1061 mo
99.2052 13.3209 97.9464 12.7248 96.6891 12.05 cv
95.6739 11.5045 94.6578 10.6222 93.4488 10.777 cv
93.1661 10.8131 92.9327 11.1632 93.192 11.3971 cv
94.0724 12.1911 95.34 12.1911 96.4205 12.5998 cv
97.7233 13.0924 98.9303 13.8869 100.073 14.673 cv
100.421 14.9118 100.758 14.338 100.404 14.1061 cv
cp
f
81.2736 5.1188 mo
79.1945 4.84097 77.1759 4.30923 75.1017 4.04897 cv
73.5143 3.84976 71.8893 3.87661 70.2897 3.74868 cv
70.1315 3.73599 70.0992 3.98843 70.2526 4.02505 cv
72.1515 4.47427 74.0304 5.13931 75.9689 5.38149 cv
77.7237 5.60073 79.5089 5.6979 81.2736 5.8688 cv
81.7599 5.91616 81.7399 5.1813 81.2736 5.1188 cv
cp
f
24.8356 134.309 mo
26.4816 137.021 29.2496 140.353 32.6451 140.655 cv
33.3292 140.715 33.527 139.847 33.1588 139.415 cv
32.1622 138.243 30.7281 137.483 29.5231 136.54 cv
28.2936 135.578 27.1036 134.521 26.0319 133.386 cv
25.4386 132.758 24.3859 133.569 24.8356 134.309 cv
cp
f
30.5865 137.735 mo
32.6608 140.69 35.7599 144.537 39.5602 145.036 cv
39.9879 145.092 40.086 144.534 39.8751 144.276 cv
38.7452 142.895 37.2569 142.05 35.9034 140.914 cv
34.4752 139.717 33.1998 138.351 32.0841 136.859 cv
31.4293 135.983 29.9371 136.809 30.5865 137.735 cv
cp
f
47.6471 147.46 mo
51.0401 148.314 54.7584 149.045 58.2716 148.706 cv
58.4635 148.688 58.547 148.374 58.3214 148.338 cv
54.8092 147.774 51.3561 147.467 47.9088 146.51 cv
47.297 146.341 47.0328 147.305 47.6471 147.46 cv
cp
f
81.1686 150.076 mo
83.1769 149.728 85.6549 149.34 87.3922 148.209 cv
87.6393 148.048 87.482 147.676 87.1935 147.738 cv
86.1515 147.962 85.1686 148.46 84.1539 148.791 cv
83.132 149.124 82.0939 149.394 81.0441 149.624 cv
80.7462 149.689 80.8761 150.127 81.1686 150.076 cv
cp
f
67.7657 88.2726 mo
65.7496 90.4938 65.1134 95.6896 66.8004 98.2297 cv
67.3317 99.0299 68.4835 98.8727 68.7921 97.9694 cv
69.298 96.4884 69.0797 94.8263 69.1857 93.2794 cv
69.2916 91.7433 69.6251 90.235 69.3912 88.7018 cv
69.2809 87.9777 68.2218 87.7697 67.7657 88.2726 cv
.929412 .752941 .623529 rgb
f
68.794 86.6451 mo
68.6856 86.5519 li
68.3434 86.2584 67.8566 86.2204 67.5167 86.5519 cv
66.1608 87.8752 66.0172 90.3542 65.9859 92.1447 cv
65.9493 94.2399 66.2301 96.5011 67.8121 98.0006 cv
68.1944 98.3629 68.8692 98.2189 69.007 97.6852 cv
69.5685 95.508 68.9327 93.1969 68.8976 90.9797 cv
68.8795 89.8322 69.0157 88.6593 68.9029 87.5192 cv
68.8746 87.2335 69.0611 86.8742 68.794 86.6451 cv
f
65.9571 92.5036 mo
65.5392 96.6232 65.8971 101.946 70.3902 103.685 cv
70.8795 103.875 71.5123 103.56 71.7589 103.129 cv
71.8112 103.037 71.8488 102.94 71.881 102.839 cv
72.0016 102.462 71.8839 101.92 71.5694 101.66 cv
68.5875 99.2008 67.901 96.3048 67.9259 92.5036 cv
67.9342 91.2125 66.0826 91.2682 65.9571 92.5036 cv
f
66.7936 98.6608 mo
67.9572 100.514 69.2853 102.412 70.7599 104.034 cv
71.9469 105.341 73.7071 106.74 75.3468 105.303 cv
76.2072 104.548 75.4933 103.141 74.4445 103.125 cv
73.2257 103.106 72.1368 101.879 71.2296 101.119 cv
70.088 100.163 69.1378 98.9996 68.2506 97.8092 cv
67.6183 96.9611 66.2018 97.7184 66.7936 98.6608 cv
f
20.2638 85.2487 mo
17.0699 86.9684 13.3956 91.9894 16.0875 95.5612 cv
16.4718 96.0704 17.2462 96.0377 17.4586 95.382 cv
17.9406 93.8912 17.8575 92.3087 18.3917 90.8258 cv
18.9777 89.1994 19.9523 87.6705 21.2862 86.5739 cv
22.0504 85.9455 21.0753 84.8117 20.2638 85.2487 cv
f
14.7779 94.8414 mo
14.941 97.1608 15.1178 100.209 16.9615 101.817 cv
17.2501 102.068 17.6793 101.895 17.7018 101.51 cv
17.7682 100.378 17.4767 99.5607 17.1642 98.4796 cv
16.8194 97.2868 16.5778 96.0768 16.442 94.8414 cv
16.3273 93.799 14.7018 93.7585 14.7779 94.8414 cv
f
95.631 90.1007 mo
95.3834 90.2018 95.1686 90.3971 95.0577 90.7169 cv
94.4635 92.4362 93.671 94.0949 92.6071 95.5773 cv
92.0812 96.3107 91.4703 96.9401 90.8414 97.5514 cv
90.5475 96.8888 89.7037 96.4977 88.9586 96.5373 cv
88.6769 96.2282 88.2814 96.0011 87.7418 95.9235 cv
87.2472 95.8522 86.7794 95.858 86.3243 95.904 cv
86.235 95.8864 86.1232 95.8273 86.0035 95.7521 cv
86.0016 95.6652 85.9894 95.5763 85.9586 95.4855 cv
85.6837 94.6794 85.047 94.0753 84.8707 93.2242 cv
84.6412 92.1193 85.0079 90.9718 85.2936 89.9108 cv
85.3619 89.6569 85.3585 89.4269 85.3102 89.2184 cv
85.712 88.6315 85.7926 88.0163 85.6305 87.4782 cv
85.7809 87.2975 85.9401 87.1222 86.0861 86.9396 cv
86.6842 86.1896 87.172 85.3737 87.1041 84.4806 cv
90.0192 83.756 93.2789 83.0377 94.8062 86.049 cv
95.5484 87.5119 95.7682 88.8458 95.631 90.1007 cv
98.2277 88.2077 mo
98.1603 87.9923 97.8844 87.8776 97.6915 87.9689 cv
97.6202 87.6862 97.5445 87.4039 97.4601 87.1212 cv
97.1422 86.0573 97.0987 84.653 96.5719 83.6652 cv
95.4938 81.6442 92.3243 81.4562 90.3355 81.341 cv
89.9108 81.316 89.4762 81.3195 89.0426 81.3385 cv
88.7731 80.4455 87.527 79.8449 86.5406 80.6095 cv
85.6319 81.3136 84.2589 81.1413 83.1827 81.2853 cv
82.1407 81.4249 81.1954 81.694 80.2335 82.1242 cv
79.3844 82.5041 78.4127 82.9225 77.7013 83.5177 cv
76.6212 83.9669 75.6109 84.527 74.776 85.2453 cv
74.254 85.694 73.7892 86.3649 73.4552 87.1042 cv
72.7994 87.297 72.2164 87.7643 71.9347 88.5822 cv
71.0577 91.1291 71.0089 93.9606 71.9215 96.5094 cv
72.5802 98.3488 74.0602 100.508 76.1754 100.46 cv
77.0177 101.056 77.9601 101.543 79.005 101.903 cv
79.6554 102.127 80.3873 102.308 81.1427 102.412 cv
82.9835 103.148 84.942 103.218 87.0685 102.053 cv
87.3805 101.883 87.6188 101.675 87.8028 101.448 cv
88.1529 101.322 88.4859 101.164 88.7999 100.98 cv
89.0968 101.406 89.6471 101.633 90.2208 101.28 cv
91.632 100.411 92.8453 99.1256 93.8741 97.6657 cv
95.5826 95.8244 97.4762 93.7487 97.9156 91.2062 cv
97.9342 91.0998 97.9303 90.9962 97.9425 90.8908 cv
98.3102 89.9875 98.4908 89.0524 98.2277 88.2077 cv
.298039 .172549 .156863 rgb
f
27.1813 92.6256 mo
27.2682 92.652 li
27.6329 93.1105 27.9977 93.4694 28.3844 93.7873 cv
28.1637 94.0812 27.9581 94.3737 27.7706 94.6554 cv
27.7814 94.5407 27.8082 94.4357 27.8107 94.3151 cv
27.8248 93.6794 27.5758 93.0924 27.1813 92.6256 cv
37.9899 102.953 mo
37.8844 102.751 37.6354 102.726 37.4488 102.812 cv
36.4903 103.252 35.6461 103.849 34.7325 104.371 cv
34.7047 104.396 li
34.5001 104.451 34.2941 104.503 34.0841 104.534 cv
32.8399 104.048 31.275 104.125 30.006 103.928 cv
29.9532 103.903 li
29.7711 103.214 29.1329 102.68 28.4401 102.21 cv
28.4347 102.074 28.4088 101.935 28.339 101.795 cv
27.2877 99.6833 28.2399 97.6124 29.6788 95.9796 cv
29.9772 95.6408 30.298 95.3107 30.629 94.9923 cv
30.8986 95.0587 li
31.8795 95.9528 32.7496 96.9879 33.84 97.7472 cv
33.8561 97.8414 33.881 97.9333 33.8878 98.0304 cv
33.9762 99.2868 35.5377 99.7467 36.2462 98.6691 cv
37.7706 96.3498 36.7525 93.9625 35.213 91.9381 cv
34.3605 90.8165 33.4342 89.776 32.2643 88.9762 cv
31.9151 88.7374 31.5504 88.5378 31.1739 88.3605 cv
30.7579 87.9831 30.3068 87.6417 29.8268 87.3522 cv
29.4508 87.1251 29.0704 87.0187 28.7018 86.9957 cv
27.6813 86.3297 26.1608 86.2565 25.2081 87.1437 cv
23.6129 88.629 21.7203 90.1266 21.0611 92.2687 cv
20.609 92.5055 20.2506 92.9435 20.1119 93.6222 cv
20.0763 93.797 20.0582 93.9713 20.0299 94.1461 cv
19.6129 94.611 19.2853 95.1608 19.0983 95.7658 cv
18.6344 97.2677 19.0768 98.8283 19.7946 100.17 cv
20.2823 101.081 21.0084 101.96 21.9454 102.394 cv
21.9806 102.444 li
22.2418 103.042 22.5582 103.592 22.9659 104.042 cv
23.482 104.612 24.0724 104.919 24.6529 105.008 cv
25.44 105.536 26.296 105.908 27.1627 105.991 cv
28.4186 106.867 29.8424 107.576 31.0084 107.401 cv
32.8126 107.878 34.8243 108.003 36.4273 107.073 cv
37.8776 106.231 38.8009 104.506 37.9899 102.953 cv
f
35.17 94.1827 mo
35.1398 93.2272 34.8722 92.2882 34.4698 91.4235 cv
34.0758 90.5768 33.2018 89.4591 32.2594 89.2506 cv
30.5587 88.8747 29.8302 91.4513 31.5367 91.8727 cv
32.0553 92.0006 32.7345 91.9508 33.0958 91.5026 cv
33.2369 91.3283 33.3038 91.1427 33.2823 90.9166 cv
33.2726 90.8136 33.2418 90.758 33.2052 90.6613 cv
33.1061 90.4025 33.2277 90.8385 33.2091 90.923 cv
32.4518 91.1232 31.6944 91.3229 30.9366 91.5231 cv
31.4503 92.0163 32.1427 92.1818 32.6769 92.6789 cv
33.1979 93.1642 33.4254 93.7062 33.5587 94.401 cv
33.7335 95.3122 35.1988 95.0997 35.17 94.1827 cv
.247059 .137255 .12549 rgb
f
33.3517 91.6916 mo
33.3487 91.7399 li
33.3278 92.1105 33.6285 92.4655 33.9742 92.5612 cv
34.028 92.5758 li
34.5123 92.7101 35.0196 92.4108 35.1593 91.9337 cv
35.4581 90.9108 34.4425 90.1554 33.6461 89.7409 cv
32.0489 88.9088 30.6778 88.673 29.5055 87.1598 cv
28.1749 85.442 25.7511 87.6271 26.6344 89.3751 cv
27.3707 90.8327 28.713 91.4811 30.1959 91.9894 cv
32.1398 92.6559 33.3668 89.6686 31.5875 88.6891 cv
29.4054 87.4874 26.0035 86.3805 23.795 88.1056 cv
22.0255 89.4879 21.7877 93.1735 23.9923 94.2692 cv
25.2189 94.8786 26.8312 94.151 26.8053 92.6549 cv
26.7999 92.3458 26.8321 91.7697 26.7203 91.484 cv
26.7272 91.34 26.7335 91.1954 26.7399 91.0514 cv
26.2257 91.3722 26.2032 91.4791 26.6735 91.3722 cv
26.8553 91.4547 27.3191 91.4385 27.7284 91.4224 cv
28.0049 91.4115 28.2565 91.4006 28.3795 91.4201 cv
29.0104 91.5192 29.609 91.7482 30.1959 91.9894 cv
30.5162 90.8288 30.836 89.6676 31.1559 88.507 cv
30.5509 88.2814 30.0968 88.1344 29.7916 87.5299 cv
28.8341 88.2682 27.8771 89.007 26.92 89.7452 cv
28.8151 92.191 31.4249 92.3326 34.2726 92.609 cv
33.9659 92.3024 33.6593 91.9957 33.3531 91.6896 cv
33.3487 91.7399 li
33.6329 91.4562 33.9166 91.172 34.2003 90.8883 cv
34.1486 90.8947 li
33.7008 90.9508 33.379 91.2155 33.3517 91.6916 cv
f
21.8434 91.0495 mo
21.192 92.0729 20.5284 93.0895 19.8897 94.1208 cv
19.0157 95.5324 19.1241 97.6251 21.0104 98.1432 cv
21.8067 98.3624 22.6393 98.0626 23.1466 97.4337 cv
23.2325 97.3273 23.3272 97.2042 23.3971 97.0832 cv
23.6349 96.5119 23.6891 96.3854 23.5602 96.7032 cv
23.672 96.5148 li
24.422 95.5075 25.0489 94.3766 25.7286 93.3209 cv
26.3868 92.299 25.9381 90.8371 24.9215 90.2423 cv
23.8365 89.6076 22.4972 90.0212 21.8434 91.0495 cv
f
20.9044 91.5802 mo
19.4425 93.4894 18.2819 95.7516 18.8097 98.2291 cv
19.2994 100.525 21.1549 102.194 23.4689 102.452 cv
24.7984 102.6 25.4835 100.932 24.9215 99.921 cv
24.4015 98.985 23.1441 98.2081 23.0446 97.1002 cv
22.9332 95.8669 23.9718 94.6906 24.6686 93.7804 cv
25.3898 92.839 24.8067 91.3498 23.8863 90.7985 cv
22.7716 90.1305 21.6163 90.6505 20.9044 91.5802 cv
f
20.2804 98.5402 mo
20.962 100.902 22.7301 104.78 25.5939 104.925 cv
26.1725 104.954 26.629 104.324 26.464 103.783 cv
26.1237 102.665 25.2272 101.919 24.546 101.01 cv
23.8204 100.041 23.3092 98.9557 22.9699 97.799 cv
22.4654 96.0807 19.7809 96.8092 20.2804 98.5402 cv
f
21.1676 102.453 mo
23.149 104.438 25.6602 106.676 28.5772 106.969 cv
28.2887 106.273 27.9996 105.576 27.7111 104.879 cv
27.5289 105.081 li
27.7701 105.05 28.0118 105.019 28.253 104.987 cv
28.0582 104.864 27.8634 104.74 27.6686 104.616 cv
26.7984 103.353 24.9542 104.434 25.6173 105.816 cv
26.6813 108.031 31.1183 110.334 32.7628 107.544 cv
33.0143 107.117 32.9576 106.482 32.5812 106.138 cv
31.8766 105.493 31.2311 105.448 30.3033 105.314 cv
29.1363 105.145 28.2779 104.735 27.2428 104.191 cv
27.2428 104.874 27.2428 105.558 27.2428 106.242 cv
27.4791 106.195 27.715 106.148 27.9513 106.101 cv
27.7521 105.902 27.5529 105.703 27.3536 105.504 cv
27.3526 105.745 li
27.3444 107.321 29.795 107.323 29.8019 105.745 cv
29.8023 105.629 29.8028 105.512 29.8033 105.396 cv
29.8053 104.876 29.5133 104.309 29.0397 104.065 cv
28.048 103.553 26.9581 103.471 25.9444 103.024 cv
24.7706 102.507 23.7687 101.64 22.7916 100.829 cv
21.6735 99.8996 20.1041 101.387 21.1676 102.453 cv
f
92.5484 82.2233 mo
91.6754 81.3527 90.5309 80.9762 89.2901 81.0343 cv
88.7013 81.0617 88.107 81.2594 87.5367 81.3761 cv
86.4772 81.5929 85.4327 81.5807 84.3683 81.736 cv
82.0724 82.0705 77.9718 83.8483 78.6412 86.6623 cv
78.8766 87.6535 80.0328 87.7614 80.7174 87.2106 cv
81.4264 86.6398 81.922 85.9206 82.6788 85.3952 cv
83.7457 84.6545 84.7672 84.4933 86.0148 84.3048 cv
87.5958 84.0661 90.2657 82.379 91.6964 83.3278 cv
92.3702 83.7746 93.1056 82.7794 92.5484 82.2233 cv
f
80.2218 81.5793 mo
77.8526 82.5016 75.8805 83.9288 74.1027 85.7365 cv
73.3278 86.5236 72.5958 87.3629 71.8981 88.2194 cv
70.711 89.6759 70.2203 90.9327 71.0987 92.7248 cv
71.8243 94.2052 74.4049 94.6579 75.4733 93.2882 cv
75.9278 92.7057 76.3605 92.2238 76.4347 91.4591 cv
76.4757 91.0348 76.4298 90.6666 76.2155 90.2809 cv
76.1642 90.1891 75.7408 89.5255 75.9088 89.9132 cv
76.0026 90.6286 76.0958 91.3439 76.1896 92.0592 cv
76.4025 91.3175 77.881 89.8512 78.5196 89.1491 cv
79.3966 88.1857 80.422 87.2448 81.6422 86.7321 cv
82.9713 86.1735 83.9259 84.9655 83.5084 83.4455 cv
83.1559 82.1627 81.5739 81.0529 80.2218 81.5793 cv
f
75.005 84.9137 mo
72.5607 87.3703 71.1447 89.8805 71.6837 93.4367 cv
72.1066 96.2277 73.5563 100.238 76.7316 100.742 cv
78.5231 101.026 80.5734 98.7248 78.7599 97.2574 cv
77.4459 96.1945 76.7306 94.485 76.3136 92.8864 cv
75.7164 90.6002 76.3395 89.4987 77.9381 87.8468 cv
79.796 85.9284 76.8927 83.0163 75.005 84.9137 cv
f
71.5309 92.5104 mo
71.7355 97.3898 75.9523 103.262 81.485 101.804 cv
83.0704 101.386 82.8605 99.2995 81.485 98.7926 cv
79.9425 98.2247 78.3605 97.9537 77.0768 96.8541 cv
75.7804 95.7443 74.9825 94.213 74.859 92.5104 cv
74.7052 90.3966 71.4401 90.3517 71.5309 92.5104 cv
f
80.1686 101.497 mo
81.2887 102.042 82.3805 102.454 83.6207 102.634 cv
83.9499 102.682 84.482 102.631 85.0019 102.581 cv
85.6261 102.521 86.2327 102.461 86.4493 102.57 cv
86.8253 101.677 87.2018 100.784 87.5782 99.8917 cv
87.2379 99.8164 86.3627 99.9332 85.5125 100.05 cv
84.5704 100.179 83.6592 100.309 83.5411 100.177 cv
83.0484 100.816 82.5558 101.454 82.0631 102.093 cv
83.4581 103.026 84.733 103.255 86.3688 102.967 cv
87.7652 102.722 87.2887 100.758 86.0553 100.65 cv
83.2355 100.401 80.5094 99.7272 78.3912 97.7536 cv
76.7135 96.1901 75.5436 94.2819 74.4234 92.3107 cv
74.1275 91.7907 73.4855 91.8976 73.1685 92.3107 cv
71.1334 94.9679 74.2189 98.2433 76.1285 100.016 cv
79.0377 102.718 82.2765 102.882 86.0553 103.01 cv
86.0553 102.223 86.0553 101.436 86.0553 100.65 cv
84.983 100.71 84.2286 100.572 83.2941 99.9865 cv
82.0973 99.2355 80.8771 100.915 81.816 101.902 cv
82.3443 102.458 82.8273 102.753 83.6183 102.8 cv
83.8503 102.814 84.2959 102.674 84.752 102.535 cv
85.361 102.349 85.9888 102.162 86.1524 102.341 cv
87.2633 103.553 89.3864 101.959 88.4537 100.565 cv
87.943 99.8014 87.5709 99.6398 86.6886 99.5026 cv
84.8707 99.2203 83.5743 99.6794 81.7535 98.7853 cv
79.9445 97.8971 78.3512 100.613 80.1686 101.497 cv
f
71.4278 92.0153 mo
71.3546 94.2487 71.4112 96.5934 72.7682 98.4762 cv
73.6769 99.7369 76.379 101.727 77.5948 99.6461 cv
77.8946 99.1339 77.8614 98.3644 77.401 97.9547 cv
77.1847 97.7623 76.9918 97.7858 76.7633 97.6779 cv
76.6471 97.6784 76.5387 97.7076 76.4381 97.7663 cv
76.9865 97.7912 77.108 97.7526 76.8034 97.651 cv
76.7067 97.4567 75.9713 97.3341 75.7433 97.1628 cv
75.3356 96.8556 75.047 96.3517 74.86 95.8873 cv
74.3746 94.6813 74.4835 93.2853 74.5216 92.0153 cv
74.5817 90.0231 71.4933 90.027 71.4278 92.0153 cv
f
71.4132 96.1412 mo
71.7326 97.8019 72.1959 99.8825 73.275 101.23 cv
74.192 102.374 76.0284 103.01 76.9879 101.554 cv
77.2535 101.15 77.0533 100.61 76.6764 100.367 cv
76.2037 100.062 75.8546 98.7545 75.6642 98.2462 cv
75.2931 97.256 75.0367 96.2336 74.8488 95.1945 cv
74.4415 92.9489 70.9806 93.8917 71.4132 96.1412 cv
f
46.6754 17.381 mo
46.9029 17.067 47.1461 16.7624 47.361 16.4401 cv
47.9952 16.1032 48.6222 15.7516 49.2633 15.4269 cv
49.88 15.1447 50.5016 14.8698 51.1285 14.6056 cv
53.316 13.6837 55.5358 12.8444 57.7496 11.9899 cv
57.753 12.1833 li
53.9029 13.4489 50.1822 15.236 46.6754 17.381 cv
cp
41.0963 21.2101 mo
37.8414 23.6964 34.8434 26.4386 32.1891 29.2648 cv
31.7667 29.715 32.4371 30.3908 32.8688 29.9445 cv
33.2569 29.5436 33.6608 29.1696 34.0582 28.7848 cv
32.8766 30.2497 31.7369 31.7492 30.6476 33.279 cv
28.3986 36.4367 25.6876 40.0441 24.5572 43.8986 cv
24.9645 42.2008 25.3888 40.5094 25.8199 38.8258 cv
25.9615 38.2726 25.8224 37.8136 25.5421 37.4699 cv
26.1012 36.5485 26.6739 35.6334 27.2667 34.7277 cv
28.6529 32.6076 31.1271 27.7516 33.5846 25.4352 cv
34.0621 25.0949 34.5397 24.7555 35.0177 24.4196 cv
35.2408 24.3112 li
35.3531 24.2697 35.4166 24.194 35.4576 24.11 cv
37.3624 22.7726 39.2477 21.4245 41.0553 19.9552 cv
42.0592 19.3698 43.0709 18.798 44.0831 18.2267 cv
43.1388 19.2604 42.1197 20.2379 41.0963 21.2101 cv
cp
29.6451 37.8976 mo
31.4235 35.133 33.4864 32.5397 35.3409 30.1842 cv
36.7633 28.3781 38.36 26.6808 39.9767 24.9958 cv
39.8346 25.464 39.9913 26.0255 40.4435 26.2692 cv
36.5069 29.8449 32.9615 33.9547 29.6451 37.8976 cv
cp
21.2506 67.7482 mo
20.0314 67.6564 18.8595 67.3976 17.7242 67.0187 cv
17.9527 66.8854 18.1329 66.6613 18.1608 66.3522 cv
18.2047 65.8673 18.236 65.3815 18.2701 64.8961 cv
19.191 65.2892 20.1437 65.6295 21.0875 65.943 cv
21.048 66.2443 21.1554 66.5568 21.5069 66.7458 cv
22.1564 67.0958 22.819 67.4274 23.4928 67.736 cv
22.7399 67.7331 21.9698 67.8024 21.2506 67.7482 cv
cp
19.609 41.1686 mo
19.3033 42.3678 19.0485 43.5871 18.8981 44.8444 cv
18.8761 45.0275 18.921 45.1803 18.9908 45.318 cv
18.861 45.6105 18.7213 45.8996 18.6012 46.1955 cv
18.3287 46.0221 18.024 45.9562 17.7179 46.0177 cv
18.2506 44.3688 18.8517 42.7526 19.609 41.1686 cv
cp
21.4259 62.7829 mo
21.4342 62.9508 21.4357 63.1134 21.4469 63.2824 cv
20.9952 62.9206 20.5577 62.5363 20.1461 62.1125 cv
20.5685 62.3488 20.9952 62.5724 21.4259 62.7829 cv
cp
24.1417 48.9796 mo
24.2081 49.4225 24.2989 49.8673 24.4293 50.3141 cv
24.5582 50.7565 25.2311 50.673 25.235 50.2052 cv
25.2604 47.0788 26.2711 44.0426 27.755 41.1544 cv
27.8746 41.404 28.0792 41.6056 28.3151 41.7184 cv
25.8111 46.8888 24.691 52.6662 23.0797 58.3322 cv
23.0426 55.173 23.3136 51.9953 24.1417 48.9796 cv
cp
24.7081 30.255 mo
24.107 31.1144 23.5421 31.9914 23.0187 32.8888 cv
22.7711 33.1242 22.5255 33.362 22.2784 33.5983 cv
22.9869 32.4381 23.8107 31.3209 24.7081 30.255 cv
cp
16.0846 66.3722 mo
15.9669 66.028 15.8111 65.652 15.6466 65.2843 cv
15.6822 65.1251 15.7179 64.966 15.7535 64.8068 cv
15.8658 64.8205 15.9791 64.8209 16.09 64.8063 cv
16.1588 64.7916 li
16.2633 65.3791 16.3854 65.9694 16.5397 66.5714 cv
16.3873 66.5075 16.236 66.4406 16.0846 66.3722 cv
cp
77.8575 8.77358 mo
72.8473 8.72134 67.8956 8.73843 63.0817 9.81704 cv
63.736 9.53384 64.3951 9.26235 65.0416 8.95962 cv
65.6481 8.67593 65.1105 7.71401 64.5094 8.04897 cv
63.8248 8.43032 63.1359 8.78921 62.443 9.13149 cv
62.3556 8.9269 62.1715 8.76382 61.9127 8.76675 cv
57.6354 8.81509 53.1905 10.5656 48.9425 12.8004 cv
48.3736 13.0265 47.8033 13.2584 47.2325 13.4992 cv
46.9801 13.151 46.5719 12.9083 46.0987 13.0192 cv
39.0172 14.6784 32.7867 18.4225 27.4811 23.3615 cv
24.9625 25.7062 22.6153 28.3307 20.7418 31.2262 cv
19.8971 32.5314 19.0128 33.9523 18.547 35.4484 cv
18.4762 35.6759 18.3072 36.8327 18.0909 37.7809 cv
17.5992 38.2917 17.0983 38.7921 16.6163 39.3146 cv
16.1764 39.7917 16.3063 40.7233 17.0255 40.8649 cv
17.3302 40.925 17.5538 40.9665 17.7462 40.9928 cv
17.503 41.465 17.2672 41.942 17.0475 42.4269 cv
16.9464 42.4733 16.8502 42.5363 16.7745 42.6359 cv
15.5011 44.3048 14.1402 46.8146 13.1544 49.5334 cv
13.0563 49.6344 12.9762 49.7609 12.9484 49.9469 cv
12.9332 50.049 12.9205 50.1491 12.9054 50.2506 cv
11.7281 53.7873 11.2472 57.5788 12.4664 60.3073 cv
12.5138 60.5153 12.5616 60.7223 12.6158 60.9264 cv
12.4542 64.3288 13.108 67.4796 16.1236 69.5978 cv
16.4728 69.8429 16.9235 69.6984 17.2174 69.4567 cv
17.5021 69.2223 17.649 68.9752 17.7145 68.7111 cv
18.6652 69.0519 19.6388 69.3312 20.6476 69.5109 cv
22.3082 69.8063 24.6061 70.2331 25.8756 68.883 cv
25.9679 68.7272 li
27.2745 69.1798 28.6144 69.5294 29.983 69.7267 cv
30.9606 69.8673 31.4137 68.404 30.402 68.2077 cv
29.3883 67.9518 28.4034 67.6623 27.4303 67.3483 cv
28.0651 66.8693 27.9396 65.6857 27.0524 65.3502 cv
25.983 64.9455 24.5904 64.5597 23.1134 64.1281 cv
23.2071 64.0309 23.2902 63.9171 23.3492 63.7741 cv
23.4078 63.6198 li
25.9147 64.5416 28.5646 64.924 31.4176 64.3488 cv
31.9401 64.2433 31.9454 63.3883 31.4176 63.2863 cv
28.9474 62.8102 26.5162 62.4093 24.1603 61.6007 cv
25.5616 57.5392 26.3898 53.3293 27.7086 49.2306 cv
30.0421 46.0602 32.443 42.9406 34.735 39.7399 cv
34.8741 39.546 34.5611 39.3048 34.4039 39.4845 cv
32.3453 41.8283 30.4386 44.3009 28.5865 46.8131 cv
30.1769 42.8585 32.38 39.2775 34.546 35.5895 cv
41.3956 28.1349 48.7218 21.8278 58.4303 17.6066 cv
59.0343 17.3444 58.5792 16.4875 58.006 16.6002 cv
51.899 17.8 46.6197 20.9757 41.9 24.9943 cv
41.7823 24.6061 41.4659 24.2873 40.9386 24.2873 cv
40.8053 24.2873 40.6959 24.3214 40.5885 24.3581 cv
41.3981 23.5167 42.1998 22.6696 42.9903 21.8156 cv
46.0074 19.9298 49.1988 18.3019 52.5685 16.9 cv
55.9698 15.4855 59.4806 14.1676 63.0358 13.1857 cv
66.6783 12.1793 70.3878 12.0714 74.0621 11.3175 cv
74.4962 11.2287 74.483 10.7716 74.2389 10.5265 cv
75.444 10.5299 76.6505 10.5465 77.8575 10.5753 cv
79.0206 10.6032 79.0153 8.71694 77.8575 8.77358 cv
cp
1 1 1 rgb
f
34.6051 40.7917 mo
34.6051 40.8918 li
34.6051 40.7917 li
cp
f
53.9386 59.9445 mo
52.3551 59.9445 52.3522 62.4054 53.9386 62.4054 cv
55.5221 62.4054 55.5245 59.9445 53.9386 59.9445 cv
cp
.929412 .752941 .623529 rgb
f
60.7716 56.2917 mo
60.7716 56.3918 li
60.7716 56.2917 li
cp
f
61.9386 58.3078 mo
60.8224 58.3078 60.8204 60.0421 61.9386 60.0421 cv
63.0543 60.0421 63.0563 58.3078 61.9386 58.3078 cv
cp
f
82.4386 63.5358 mo
81.1866 63.5358 81.1847 65.4811 82.4386 65.4811 cv
83.6901 65.4811 83.692 63.5358 82.4386 63.5358 cv
cp
f
77.9386 48.7858 mo
75.7213 48.7858 75.7179 52.2311 77.9386 52.2311 cv
80.1554 52.2311 80.1588 48.7858 77.9386 48.7858 cv
cp
f
82.9386 45.9586 mo
82.9386 46.0583 li
82.9386 45.9586 li
cp
f
88.6051 49.3537 mo
86.6901 49.3537 86.6866 52.3302 88.6051 52.3302 cv
90.5201 52.3302 90.5236 49.3537 88.6051 49.3537 cv
cp
f
94.9386 45.7917 mo
94.9386 45.8918 li
94.9386 45.7917 li
cp
f
75.4386 35.5202 mo
73.5231 35.5202 73.5201 38.4967 75.4386 38.4967 cv
77.3536 38.4967 77.357 35.5202 75.4386 35.5202 cv
cp
f
85.9386 24.8537 mo
84.0231 24.8537 84.0201 27.8302 85.9386 27.8302 cv
87.8536 27.8302 87.857 24.8537 85.9386 24.8537 cv
cp
f
89.2716 28.7233 mo
88.2613 28.7233 88.2599 30.2936 89.2716 30.2936 cv
90.2823 30.2936 90.2838 28.7233 89.2716 28.7233 cv
cp
f
93.4386 41.2917 mo
93.4386 41.3918 li
93.4386 41.2917 li
cp
f
100.272 40.6867 mo
98.3566 40.6867 98.3531 43.6632 100.272 43.6632 cv
102.187 43.6632 102.19 40.6867 100.272 40.6867 cv
cp
f
64.9386 33.4586 mo
64.9386 33.5583 li
64.9386 33.4586 li
cp
f
53.5685 90.8981 mo
53.6022 91.0553 li
53.6383 91.2228 53.9049 91.2228 53.941 91.0553 cv
53.9752 90.8981 li
54.0485 90.5578 53.4947 90.5558 53.5685 90.8981 cv
cp
f
61.6051 111.006 mo
59.8859 111.006 59.8829 113.678 61.6051 113.678 cv
63.3243 113.678 63.3273 111.006 61.6051 111.006 cv
cp
f
67.6925 118.616 mo
67.025 118.757 66.526 119.492 66.0026 119.911 cv
65.3253 120.454 64.6437 120.992 63.9645 121.532 cv
63.7994 121.663 64.0231 121.957 64.1915 121.827 cv
64.879 121.297 65.5641 120.764 66.254 120.237 cv
66.7897 119.827 67.6188 119.526 67.9176 118.909 cv
67.9947 118.75 67.8683 118.579 67.6925 118.616 cv
cp
f
70.7716 119.292 mo
70.7716 119.392 li
70.7716 119.292 li
cp
f
95.1051 119.477 mo
93.7779 119.477 93.776 121.54 95.1051 121.54 cv
96.4322 121.54 96.4342 119.477 95.1051 119.477 cv
cp
f
99.2716 114.02 mo
97.3566 114.02 97.3531 116.997 99.2716 116.997 cv
101.187 116.997 101.19 114.02 99.2716 114.02 cv
cp
f
104.939 103.02 mo
103.023 103.02 103.02 105.997 104.939 105.997 cv
106.854 105.997 106.857 103.02 104.939 103.02 cv
cp
f
41.0909 116.174 mo
40.4454 115.581 39.4078 115.515 38.7711 116.174 cv
38.547 116.406 38.3434 116.662 38.1808 116.941 cv
37.3717 118.326 38.9596 119.772 40.3062 119.066 cv
40.5953 118.914 40.8463 118.71 41.0909 118.494 cv
41.7369 117.925 41.7159 116.748 41.0909 116.174 cv
f
27.1051 118.354 mo
25.1901 118.354 25.1866 121.33 27.1051 121.33 cv
29.0201 121.33 29.0236 118.354 27.1051 118.354 cv
cp
f
41.6935 133.042 mo
41.7145 132.382 41.9161 131.872 41.7179 131.19 cv
41.4943 130.421 40.9523 129.687 40.5572 128.997 cv
39.6808 127.467 37.5074 127.918 36.9811 129.465 cv
36.7784 130.061 36.7921 130.548 36.9693 131.148 cv
37.1451 131.743 37.4977 132.129 37.9195 132.338 cv
37.8893 132.465 37.857 132.593 37.8253 132.722 cv
37.4479 132.817 37.1114 133.065 36.9903 133.502 cv
36.9176 133.749 li
36.152 133.438 35.2242 133.746 34.838 134.742 cv
34.7906 134.864 34.7486 134.98 34.7047 135.097 cv
34.0343 135.541 33.5543 136.375 33.8678 137.178 cv
34.3815 138.496 35.4396 139.322 36.9088 139.218 cv
37.673 139.164 38.3014 138.837 38.8258 138.368 cv
40.0904 138.538 41.4493 137.854 41.8922 136.287 cv
42.2218 135.122 41.6583 134.147 41.6935 133.042 cv
cp
.298039 .172549 .156863 rgb
f
76.714 127.226 mo
76.5153 125.974 74.61 126.337 74.5734 127.516 cv
74.5607 127.923 74.5314 128.329 74.5104 128.735 cv
74.2496 128.669 73.9664 128.727 73.8238 129.01 cv
72.9225 130.799 72.4034 133.185 73.715 134.867 cv
73.7892 134.962 73.8893 135.019 73.9986 135.051 cv
73.9332 135.729 73.8702 136.406 73.8107 137.085 cv
73.2628 139.115 76.9195 140.217 77.2184 137.467 cv
77.5934 134.016 77.256 130.64 76.714 127.226 cv
cp
f
96.2677 94.6003 mo
95.276 96.2702 94.0172 97.777 92.5782 99.1002 cv
87.0309 101.24 79.8824 103.106 74.6075 99.7892 cv
71.8048 98.027 71.0558 94.3068 71.4552 91.2453 cv
72.0553 86.6461 75.4977 84.5724 79.4107 82.9293 cv
79.8068 82.7633 80.0988 82.5104 80.3111 82.216 cv
81.0416 82.0123 81.7623 81.817 82.4606 81.631 cv
82.63 81.6437 82.8053 81.6422 82.9908 81.6119 cv
86.7223 80.9987 90.8111 80.9318 94.2399 82.7736 cv
98.9015 85.277 98.6354 90.6149 96.2677 94.6003 cv
64.6944 91.4684 mo
65.59 89.8693 66.8522 88.5451 68.3322 87.4191 cv
66.7569 91.1579 67.0226 95.7106 68.8859 99.2941 cv
70.5064 102.411 73.1588 104.127 76.2506 104.916 cv
68.632 104.443 59.6559 100.464 64.6944 91.4684 cv
84.422 77.4625 mo
84.0396 77.2638 83.5748 77.1896 83.0372 77.3346 cv
73.3917 79.9376 60.8761 83.6984 59.2872 95.1989 cv
57.6852 106.795 72.3795 109.859 81.0963 108.79 cv
85.837 108.208 90.9005 105.902 94.8605 102.474 cv
95.0992 102.379 li
95.7218 102.123 96.1007 101.661 96.2862 101.141 cv
99.3854 98.0104 101.568 94.1305 101.96 89.8595 cv
102.888 79.7496 92.7106 76.8668 84.422 77.4625 cv
.156863 .113725 .113725 rgb
f
28.8727 106.822 mo
28.6114 106.65 28.3038 106.526 27.9371 106.485 cv
23.9049 106.042 20.2267 100.751 19.9078 96.9679 cv
19.4737 91.8214 23.6676 86.4015 29.0431 88.6681 cv
29.4684 88.8473 29.8483 88.8654 30.1759 88.7755 cv
30.3639 88.9708 30.5553 89.1583 30.7311 89.3781 cv
31.2379 90.0118 31.8649 90.1613 32.4361 90.0079 cv
35.6368 92.6334 37.7477 96.3048 38.1754 100.564 cv
38.7013 105.799 33.6666 107.15 28.8727 106.822 cv
14.2906 91.8766 mo
15.295 88.338 17.4679 86.5216 20.796 86.07 cv
18.1129 88.1628 16.2726 91.6125 15.9113 95.2155 cv
15.7057 97.2638 16.109 99.3961 16.9479 101.4 cv
14.5714 98.8878 13.2203 95.6457 14.2906 91.8766 cv
32.2345 85.0011 mo
32.068 84.903 31.9039 84.839 31.7418 84.7916 cv
26.3024 80.5543 16.5021 80.4669 12.3878 86.2716 cv
6.86243 94.067 11.1373 103.513 18.6573 107.813 cv
22.5099 110.015 26.8356 111.427 31.3019 110.888 cv
34.6148 110.488 40.3443 109.738 41.7589 106.122 cv
44.8351 98.2604 38.7364 88.8361 32.2345 85.0011 cv
f
52.1583 120.02 mo
51.2052 120.104 50.3546 120.527 49.6583 121.173 cv
49.3224 121.485 48.9938 121.869 48.7535 122.265 cv
48.6603 122.446 48.5675 122.627 48.4747 122.808 cv
48.4488 122.871 li
48.3468 122.735 48.234 122.607 48.1046 122.497 cv
48.4669 119.515 49.3473 114.49 52.5607 115.337 cv
54.3605 115.811 55.2013 117.274 55.5436 118.973 cv
55.7164 119.834 55.9708 121.13 56.0162 122.289 cv
55.6158 121.766 55.1984 121.037 54.9913 120.868 cv
54.1988 120.223 53.1735 119.929 52.1583 120.02 cv
cp
59.7833 121.126 mo
59.5211 118.592 59.3453 116.1 57.6354 114.069 cv
56.1061 112.254 53.7648 111.151 51.381 111.207 cv
45.482 111.345 44.4811 119.141 43.9718 123.661 cv
43.8697 124.566 44.3107 125.141 44.9298 125.402 cv
45.2101 126.367 45.9591 127.167 47.1481 127.491 cv
48.3009 127.806 49.7027 127.596 50.6359 126.856 cv
51.2252 126.388 51.7272 124.483 52.2071 124.284 cv
52.6202 124.113 53.63 125.905 54.2599 126.306 cv
55.1368 126.864 56.172 127.085 57.193 126.931 cv
60.2765 126.467 60.0314 123.526 59.7833 121.126 cv
cp
f
127.919 68.8034 mo
124.83 64.3405 120.745 59.8883 115.598 58.7091 cv
109.667 57.3507 106.314 62.6359 106.635 67.7584 cv
107.195 76.6749 112.125 84.3268 111.987 93.4206 cv
111.917 98.0558 110.869 102.548 108.888 106.739 cv
107.226 110.254 105.434 113.125 105.634 117.133 cv
105.64 117.254 105.662 117.364 105.685 117.474 cv
101.508 122.303 97.5113 130.16 91.0856 128.435 cv
88.0294 127.614 85.5284 124.568 82.5739 123.259 cv
80.3282 122.264 77.8341 121.674 75.3693 122.048 cv
73.0108 122.405 70.8263 123.51 69.3072 125.38 cv
68.2325 126.704 67.9527 128.345 67.5704 129.909 cv
65.6642 126.367 59.8072 125.828 57.3121 129.017 cv
56.525 128.051 55.4698 127.361 54.1461 127.254 cv
52.4259 127.115 51.1681 127.88 50.3097 129.041 cv
49.5353 128.044 48.4611 127.272 47.1944 126.915 cv
45.1544 126.341 43.0196 127.224 41.9732 128.817 cv
41.0695 126.98 40.0064 125.281 37.5055 124.882 cv
35.8595 124.619 35.1539 125.3 33.7252 125.813 cv
31.3297 126.672 33.6104 130.514 27.6754 126.26 cv
26.5577 125.46 25.7594 123.451 24.8839 122.407 cv
22.0939 119.081 18.7257 117.458 14.3507 117.713 cv
14.1217 117.726 13.9205 117.779 13.732 117.848 cv
10.733 111.524 8.75205 104.846 8.40783 97.7736 cv
8.40247 97.6627 8.38049 97.5622 8.36146 97.4606 cv
8.47326 97.2135 8.53675 96.9244 8.52989 96.5905 cv
8.38489 89.4337 10.6632 82.5685 10.5206 75.3844 cv
10.3854 68.5973 6.92783 60.5661 8.23059 53.8312 cv
8.41173 53.612 8.55283 53.3346 8.62217 52.9787 cv
11.6002 37.6891 21.9723 22.5963 34.7775 13.7535 cv
48.5929 4.21255 66.2403 2.30923 82.4352 5.41567 cv
89.9083 6.84926 97.9059 8.88051 104.161 13.3952 cv
110.488 17.9606 116.322 24.8756 120.708 31.2765 cv
128.358 42.443 129.12 55.7404 127.919 68.8034 cv
126.482 80.1715 mo
126.059 80.4918 125.757 80.9865 125.73 81.6652 cv
125.368 90.8912 125.136 100.493 123.069 109.533 cv
122.862 109.532 li
118.229 109.965 113.863 111.32 109.999 113.804 cv
111.096 109.352 114.296 104.942 115.211 100.509 cv
116.234 95.5451 116.192 90.4396 115.277 85.464 cv
114.155 79.3586 110.104 73.1696 110.588 66.8297 cv
111.066 60.546 118.021 63.9001 120.913 66.6789 cv
123.3 68.9728 125.138 71.6862 126.834 74.5094 cv
126.948 74.6984 127.081 74.8458 127.221 74.9752 cv
126.992 76.7199 126.742 78.4547 126.482 80.1715 cv
73.1549 135.542 mo
72.6676 133.574 72.0621 131.221 73.2345 129.389 cv
74.9635 126.685 76.756 128.648 76.9635 130.96 cv
77.1153 132.648 77.1285 134.623 76.7589 136.282 cv
76.4454 137.689 75.7765 138.981 74.0924 137.67 cv
73.7169 137.377 73.4337 136.804 73.2027 136.251 cv
73.2242 136.029 73.2174 135.795 73.1549 135.542 cv
66.0597 136.885 mo
66.4074 136.834 66.756 136.782 67.1031 136.73 cv
67.1935 136.702 li
67.2535 136.902 67.3434 137.105 67.4942 137.31 cv
67.9611 137.944 68.1017 138.405 67.9908 139.206 cv
67.9342 139.409 67.878 139.612 67.8219 139.816 cv
67.732 139.984 67.6637 140.115 67.61 140.222 cv
67.4166 139.825 66.4103 137.619 66.0597 136.885 cv
62.1642 137.441 mo
61.9181 138.245 61.9825 139.022 61.7487 139.89 cv
61.0978 142.307 59.7594 139.405 59.4982 138.278 cv
59.4552 138.091 59.3888 137.93 59.3121 137.781 cv
60.2638 137.679 61.2144 137.567 62.1642 137.441 cv
64.2677 133.131 mo
62.6637 133.367 61.0572 133.588 59.4459 133.77 cv
59.8541 133.448 60.1437 132.96 60.172 132.298 cv
60.2721 129.981 64.5377 130.506 64.2481 132.381 cv
64.2066 132.65 64.2218 132.898 64.2677 133.131 cv
52.2862 134.34 mo
52.6095 134.027 52.8434 133.602 52.8951 133.051 cv
52.9381 132.598 53.2145 131.184 53.7506 131.196 cv
54.5426 131.213 54.9791 133.021 55.0148 133.552 cv
55.0294 133.772 55.0812 133.965 55.1476 134.148 cv
54.2965 134.207 53.3214 134.284 52.2862 134.34 cv
53.5221 138.182 mo
53.316 138.793 53.1109 139.404 52.901 140.013 cv
52.8443 140.177 52.7858 140.336 52.7194 140.492 cv
52.5768 140.399 li
51.8238 139.863 51.194 139.295 51.1095 138.3 cv
51.0856 138.17 li
51.8976 138.194 52.7101 138.199 53.5221 138.182 cv
115.7 126.864 mo
107.284 138.868 93.8961 146.338 79.3053 147.307 cv
65.9611 148.193 51.047 147.23 38.1207 142.506 cv
38.8941 142.418 39.6769 142.196 40.4347 141.82 cv
40.6324 141.722 40.8155 141.616 40.9899 141.506 cv
41.4347 142.095 42.0055 142.589 42.6842 142.927 cv
44.1637 143.664 45.9723 143.558 47.3497 142.635 cv
47.7125 142.391 48.0353 142.094 48.3165 141.762 cv
49.1207 142.966 50.2862 143.911 51.7706 144.356 cv
54.3609 145.134 55.6461 143.59 56.4977 141.661 cv
57.5231 143.617 59.256 145.132 61.6861 144.944 cv
62.9655 144.846 64.1798 144.188 64.9279 143.143 cv
65.0426 142.936 li
66.2408 144.348 67.7599 145.163 69.6964 143.901 cv
70.7584 143.208 71.4459 142.054 71.7799 140.772 cv
73.5704 142.418 75.9225 143.107 78.3121 141.23 cv
81.565 138.674 81.5187 132.553 80.7179 128.883 cv
80.5255 128.001 80.1754 127.207 79.711 126.524 cv
81.1207 126.981 82.5167 127.698 83.7535 128.51 cv
87.9176 131.244 90.7535 134.172 96.0812 132.323 cv
100.569 130.766 103.119 126.772 105.867 123.193 cv
109.948 117.88 115.379 114.484 122.001 113.635 cv
120.592 118.286 118.589 122.742 115.7 126.864 cv
39.9947 133.427 mo
39.857 134.7 40.0226 137.131 39.0211 138.05 cv
37.7906 139.18 36.5968 138.304 36.0226 137.147 cv
35.0543 135.194 33.8517 131.075 37.0143 130.571 cv
37.4874 130.496 37.8341 130.3 38.0699 130.034 cv
38.6954 130.548 39.1256 131.43 39.6144 132.479 cv
39.7506 132.771 39.8859 133.04 40.0211 133.3 cv
39.9947 133.427 li
45.7872 137.653 mo
45.6808 137.912 45.586 138.18 45.5094 138.467 cv
45.3932 138.905 45.2975 139.481 44.7052 139.43 cv
43.649 139.34 43.8795 138.194 44.2404 137.264 cv
44.7066 137.42 45.2218 137.545 45.7872 137.653 cv
45.3468 131.119 mo
45.1393 130.406 46.4664 130.879 46.7037 131.038 cv
47.4503 131.54 47.7745 132.412 47.524 133.259 cv
47.4249 133.595 47.4156 133.902 47.4659 134.18 cv
46.7296 134.052 46.044 133.87 45.4811 133.581 cv
45.2125 133.443 44.9723 133.279 44.7467 133.102 cv
45.2853 132.674 45.5997 131.987 45.3468 131.119 cv
15.7081 121.733 mo
21.7735 122.266 22.6114 129.036 27.8859 131.259 cv
28.9391 131.703 30.0548 131.924 31.1559 131.838 cv
30.7096 134.855 31.7604 138.46 33.4742 140.61 cv
32.6681 140.24 31.8683 139.861 31.0841 139.458 cv
23.8624 135.739 19.4982 128.676 15.7081 121.733 cv
129.323 39.5294 mo
127.185 33.4791 123.732 28.2531 119.615 23.3717 cv
115.391 18.3634 110.945 13.1837 105.494 9.47281 cv
94.1515 1.75112 77.6446 -.596547 64.2252 .123177 cv
51.2023 .821918 38.3536 5.20765 28.3287 13.6877 cv
17.3321 22.9894 8.28086 36.2585 5.09435 50.4367 cv
5.00108 50.5788 4.91761 50.7336 4.85412 50.9132 cv
2.27599 58.2785 6.026 66.0226 6.44688 73.4728 cv
6.89073 81.3302 4.37168 88.7785 4.52989 96.5905 cv
4.53234 96.6935 4.55041 96.7858 4.56504 96.8805 cv
4.45274 97.133 4.39124 97.4284 4.40782 97.7736 cv
5.0543 111.044 10.961 123.514 18.8229 134.051 cv
26.8995 144.876 41.4444 148.543 54.2252 150.267 cv
67.5651 152.067 82.4811 152.949 95.2296 147.903 cv
105.533 143.825 114.399 136.434 120.345 127.088 cv
128.453 114.341 129.08 98.7238 129.641 83.9875 cv
129.843 83.7589 129.996 83.4596 130.058 83.0622 cv
132.297 68.7003 134.287 53.5729 129.323 39.5294 cv
f
35.2032 116.76 mo
33.6317 116.76 31.9187 116.629 30.1286 116.351 cv
30.9838 116.106 31.8327 115.839 32.6749 115.551 cv
33.3116 115.371 33.9488 115.178 34.5846 114.976 cv
35.0099 114.931 35.4342 114.858 35.8551 114.748 cv
36.0699 114.755 36.2837 114.758 36.4964 114.758 cv
40.3636 114.758 43.8269 113.63 44.9571 109.847 cv
45.2467 109.538 45.5162 109.211 45.7755 108.881 cv
46.2878 108.817 46.7379 108.66 47.1334 108.43 cv
46.4943 111.569 44.9891 114.319 41.5201 115.767 cv
41.3172 115.851 41.1026 115.931 40.8767 116.006 cv
40.5829 115.809 40.2374 115.704 39.8944 115.704 cv
39.4859 115.704 39.0811 115.853 38.7711 116.174 cv
38.6563 116.293 38.547 116.418 38.4457 116.549 cv
37.4606 116.687 36.3716 116.76 35.2032 116.76 cv
25.5885 115.357 mo
21.1946 114.112 16.67 111.986 12.8565 108.772 cv
12.2148 107.077 11.6611 105.379 11.1707 103.653 cv
11.5188 104.211 11.89 104.771 12.2984 105.332 cv
13.4184 106.868 15.001 108.26 17.1865 109.408 cv
18.3257 110.384 19.5067 111.308 20.7389 112.167 cv
22.1119 113.123 23.5948 114.245 25.299 114.426 cv
25.3888 114.403 li
25.8923 114.589 26.4127 114.758 26.935 114.894 cv
26.4843 115.04 26.0354 115.194 25.5885 115.357 cv
46.2345 105.846 mo
46.9762 103.179 46.9464 100.165 46.0968 97.6022 cv
46.1583 97.6364 li
46.2063 97.6562 46.2575 97.6652 46.3096 97.6652 cv
46.5171 97.6652 46.7395 97.5213 46.8375 97.3371 cv
47.0514 97.5758 47.2687 97.8141 47.4772 98.0543 cv
47.5168 98.1001 47.563 98.1193 47.6081 98.1193 cv
47.754 98.1193 47.889 97.9192 47.7589 97.7726 cv
47.4737 97.4508 47.193 97.1183 46.9117 96.7878 cv
46.9234 95.0895 45.3385 93.5041 44.3961 92.1764 cv
43.0812 90.3229 41.692 88.5426 40.1813 86.8444 cv
40.0034 86.6445 39.799 86.5608 39.6003 86.5608 cv
39.2379 86.5608 38.8943 86.839 38.7638 87.1976 cv
37.599 86.142 36.2432 85.1101 34.7747 84.1736 cv
34.9279 83.8205 34.8597 83.3464 34.4894 83.0719 cv
34.2174 82.8702 33.9591 82.6476 33.6954 82.4328 cv
33.7146 82.4353 33.734 82.4365 33.7534 82.4365 cv
33.997 82.4365 34.2448 82.2422 34.2495 82.0119 cv
34.4347 82.106 34.6196 82.2012 34.8039 82.2974 cv
34.7453 82.5339 34.7925 82.7957 34.9933 82.9933 cv
36.1803 84.1613 37.1153 85.4352 38.4396 86.4547 cv
38.4946 86.4972 38.5495 86.5154 38.6008 86.5154 cv
38.8387 86.5154 38.9994 86.1229 38.7472 85.9288 cv
38.1315 85.5309 37.6232 85.048 37.2159 84.484 cv
38.8678 85.507 40.5773 86.4542 42.1529 87.6027 cv
42.4066 87.7877 43.3674 88.5353 44.464 89.4904 cv
46.1075 91.4223 47.0719 93.3325 47.4943 95.1252 cv
48.3668 98.8278 47.5875 102.017 46.6227 104.911 cv
46.6628 104.947 46.7018 104.983 46.7397 105.019 cv
46.7198 105.052 46.6998 105.086 46.6798 105.119 cv
46.5489 105.338 46.3995 105.583 46.2345 105.846 cv
9.54428 105.514 mo
9.49914 105.464 9.45441 105.415 9.40955 105.366 cv
9.32978 104.994 9.25431 104.622 9.18309 104.247 cv
9.29772 104.671 9.41802 105.094 9.54428 105.514 cv
30.5724 81.1393 mo
30.0255 80.8234 29.4669 80.5421 28.9103 80.2882 cv
28.8864 80.0455 li
29.4708 80.2941 30.0514 80.5621 30.6349 80.8537 cv
30.5885 80.941 30.568 81.0392 30.5724 81.1393 cv
10.2397 80.8105 mo
10.4262 79.1111 10.5439 77.4022 10.5251 75.6753 cv
10.5428 75.6752 10.5602 75.6752 10.578 75.6752 cv
12.5926 75.6752 14.8385 75.9131 17.2276 76.3722 cv
17.2495 76.3714 17.2717 76.371 17.2943 76.371 cv
17.4234 76.371 17.5666 76.3843 17.7257 76.4142 cv
19.0254 76.6594 20.395 76.9655 21.8092 77.3351 cv
21.1605 77.4236 21.0505 78.2646 21.4865 78.5578 cv
20.9947 78.5192 20.5021 78.4943 20.0123 78.4855 cv
19.8643 78.3844 19.6961 78.3428 19.52 78.3428 cv
19.3023 78.3428 19.0725 78.4064 18.8541 78.5001 cv
18.0345 78.5335 17.2322 78.6223 16.4671 78.7838 cv
14.907 78.8414 13.6861 79.1904 13.068 79.9635 cv
12.677 79.7158 12.2105 79.5268 11.8994 79.5268 cv
11.832 79.5268 11.7719 79.5357 11.7214 79.5547 cv
11.835 79.0447 11.9374 78.5301 12.024 78.0109 cv
12.0684 77.7453 11.8424 77.5695 11.6382 77.5695 cv
11.5034 77.5695 11.3781 77.6461 11.3463 77.8239 cv
11.1888 78.7014 10.9814 79.5384 10.7438 80.3479 cv
10.5721 80.4997 10.4041 80.6539 10.2397 80.8105 cv
27.4742 79.4991 mo
26.8532 79.3683 26.1896 79.2326 25.4957 79.1042 cv
24.6573 78.9049 23.8287 78.7741 23.0084 78.7111 cv
22.8678 78.693 22.7247 78.6798 22.5831 78.6632 cv
24.3692 78.6706 25.9606 78.9811 27.4742 79.4991 cv
.913725 .941176 .831372 rgb
f
12.8565 108.772 mo
12.4566 108.435 12.0649 108.086 11.6816 107.725 cv
11.6647 107.686 11.6477 107.647 11.6305 107.608 cv
11.5676 107.464 11.4452 107.389 11.309 107.368 cv
11.0678 107.132 10.8294 106.89 10.5958 106.644 cv
10.2374 106.267 9.88691 105.89 9.54428 105.514 cv
9.41802 105.094 9.29772 104.671 9.18309 104.247 cv
8.89474 102.733 8.67736 101.2 8.53774 99.6475 cv
9.13544 100.802 9.9082 102.003 10.8419 103.226 cv
10.9454 103.361 11.0514 103.497 11.1588 103.634 cv
11.1628 103.641 11.1667 103.647 11.1707 103.653 cv
11.6611 105.379 12.2148 107.077 12.8565 108.772 cv
10.7438 80.3479 mo
10.9814 79.5384 11.1888 78.7014 11.3463 77.8239 cv
11.3781 77.6461 11.5034 77.5695 11.6382 77.5695 cv
11.8424 77.5695 12.0684 77.7453 12.024 78.0109 cv
11.9374 78.5301 11.835 79.0447 11.7214 79.5547 cv
11.6936 79.5652 11.6687 79.5789 11.6471 79.5958 cv
11.336 79.8398 11.0348 80.0904 10.7438 80.3479 cv
.85098 .764706 .588235 rgb
f
30.1286 116.351 mo
28.6551 116.122 27.13 115.794 25.5885 115.357 cv
26.0354 115.194 26.4843 115.04 26.935 114.894 cv
27.7391 115.103 28.5483 115.236 29.3102 115.236 cv
29.9938 115.236 30.639 115.129 31.2086 114.875 cv
31.7062 114.917 32.2028 114.94 32.6948 114.94 cv
34.3116 114.94 35.8789 114.693 37.2696 114.077 cv
37.6175 113.923 37.6647 113.608 37.5485 113.335 cv
37.8022 113.189 38.0424 113.015 38.2668 112.811 cv
40.3536 111.834 42.144 110.404 43.0622 108.449 cv
44.4113 107.552 45.4165 106.366 45.652 104.767 cv
45.7058 104.402 45.497 103.993 45.184 103.832 cv
45.4303 102.509 45.4056 101.14 44.8874 100.079 cv
45.1026 97.4546 44.6416 92.9157 42.2558 91.3372 cv
41.7058 90.3857 40.9343 89.3693 39.8746 88.2716 cv
39.5281 87.9128 39.1568 87.5538 38.7638 87.1976 cv
38.8943 86.839 39.2379 86.5608 39.6003 86.5608 cv
39.799 86.5608 40.0034 86.6445 40.1813 86.8444 cv
41.692 88.5426 43.0812 90.3229 44.3961 92.1764 cv
45.3385 93.5041 46.9234 95.0895 46.9117 96.7878 cv
47.193 97.1183 47.4737 97.4508 47.7589 97.7726 cv
47.889 97.9192 47.754 98.1193 47.6081 98.1193 cv
47.563 98.1193 47.5168 98.1001 47.4772 98.0543 cv
47.2687 97.8141 47.0514 97.5758 46.8375 97.3371 cv
46.7395 97.5213 46.5171 97.6652 46.3096 97.6652 cv
46.2575 97.6652 46.2063 97.6562 46.1583 97.6364 cv
46.0968 97.6022 li
46.9464 100.165 46.9762 103.179 46.2345 105.846 cv
46.3995 105.583 46.5489 105.338 46.6798 105.119 cv
46.6998 105.086 46.7198 105.052 46.7397 105.019 cv
47.1952 105.451 47.4804 105.885 47.4483 106.235 cv
47.3797 106.98 47.279 107.715 47.1334 108.43 cv
46.7379 108.66 46.2878 108.817 45.7755 108.881 cv
45.5162 109.211 45.2467 109.538 44.9571 109.847 cv
43.8269 113.63 40.3636 114.758 36.4964 114.758 cv
36.2837 114.758 36.0699 114.755 35.8551 114.748 cv
35.4342 114.858 35.0099 114.931 34.5846 114.976 cv
33.9488 115.178 33.3116 115.371 32.6749 115.551 cv
31.8327 115.839 30.9838 116.106 30.1286 116.351 cv
34.7747 84.1736 mo
34.1751 83.7913 33.5567 83.4248 32.9249 83.0792 cv
29.9332 81.443 27.0611 80.5827 24.2516 79.882 cv
21.6754 79.2397 19.0516 78.7752 16.9501 78.7752 cv
16.7857 78.7752 16.6248 78.778 16.4671 78.7838 cv
17.2322 78.6223 18.0345 78.5335 18.8541 78.5001 cv
19.0725 78.4064 19.3023 78.3428 19.52 78.3428 cv
19.6961 78.3428 19.8643 78.3844 20.0123 78.4855 cv
20.5021 78.4943 20.9947 78.5192 21.4865 78.5578 cv
21.0505 78.2646 21.1605 77.4236 21.8092 77.3351 cv
25.788 78.3747 30.1205 79.9158 34.2495 82.0119 cv
34.2448 82.2422 33.997 82.4365 33.7534 82.4365 cv
33.734 82.4365 33.7146 82.4353 33.6954 82.4328 cv
33.9591 82.6476 34.2174 82.8702 34.4894 83.0719 cv
34.8597 83.3464 34.9279 83.8205 34.7747 84.1736 cv
28.8864 80.0455 mo
28.9103 80.2882 li
29.4669 80.5421 30.0255 80.8234 30.5724 81.1393 cv
30.568 81.0392 30.5885 80.941 30.6349 80.8537 cv
30.0514 80.5621 29.4708 80.2941 28.8864 80.0455 cv
22.5831 78.6632 mo
22.7247 78.6798 22.8678 78.693 23.0084 78.7111 cv
23.8287 78.7741 24.6573 78.9049 25.4957 79.1042 cv
26.1896 79.2326 26.8532 79.3683 27.4742 79.4991 cv
25.9606 78.9811 24.3692 78.6706 22.5831 78.6632 cv
f
44.464 89.4904 mo
43.3674 88.5353 42.4066 87.7877 42.1529 87.6027 cv
40.5773 86.4542 38.8678 85.507 37.2159 84.484 cv
37.6232 85.048 38.1315 85.5309 38.7472 85.9288 cv
38.9994 86.1229 38.8387 86.5154 38.6008 86.5154 cv
38.5495 86.5154 38.4946 86.4972 38.4396 86.4547 cv
37.1153 85.4352 36.1803 84.1613 34.9933 82.9933 cv
34.7925 82.7957 34.7453 82.5339 34.8039 82.2974 cv
35.5723 82.6987 36.3329 83.1196 37.0816 83.5602 cv
40.3616 85.4907 42.7724 87.502 44.464 89.4904 cv
f
37.5485 113.335 mo
37.5231 113.276 37.4899 113.218 37.4502 113.165 cv
37.7265 113.054 37.9991 112.936 38.2668 112.811 cv
38.0424 113.015 37.8022 113.189 37.5485 113.335 cv
44.1801 104.135 mo
44.2948 103.574 44.3898 102.959 44.4546 102.314 cv
44.6598 101.637 44.7959 100.971 44.8609 100.36 cv
44.8706 100.269 44.8795 100.175 44.8874 100.079 cv
45.4056 101.14 45.4303 102.509 45.184 103.832 cv
45.0973 103.788 45.0025 103.763 44.9032 103.763 cv
44.779 103.763 44.6478 103.802 44.5157 103.893 cv
44.4021 103.972 44.2903 104.052 44.1801 104.135 cv
.764706 .6 .478431 rgb
f
11.6816 107.725 mo
11.5564 107.607 11.4323 107.488 11.309 107.368 cv
11.4452 107.389 11.5676 107.464 11.6305 107.608 cv
11.6477 107.647 11.6647 107.686 11.6816 107.725 cv
f
29.3102 115.236 mo
28.5483 115.236 27.7391 115.103 26.935 114.894 cv
26.4127 114.758 25.8923 114.589 25.3888 114.403 cv
25.299 114.426 li
23.5948 114.245 22.1119 113.123 20.7389 112.167 cv
19.5067 111.308 18.3257 110.384 17.1865 109.408 cv
17.2622 109.448 17.3387 109.487 17.4159 109.526 cv
18.4562 110.539 19.5739 111.32 20.7356 111.388 cv
21.4399 111.977 22.1858 112.638 23.0958 112.774 cv
23.1376 112.78 23.1783 112.783 23.2177 112.783 cv
23.3332 112.783 23.4375 112.757 23.5262 112.711 cv
23.6169 112.912 23.7847 113.084 24.0421 113.178 cv
26.1474 113.947 28.6908 114.66 31.2086 114.875 cv
30.639 115.129 29.9938 115.236 29.3102 115.236 cv
f
20.7356 111.388 mo
19.5739 111.32 18.4562 110.539 17.4159 109.526 cv
17.6468 109.644 17.8844 109.758 18.1285 109.87 cv
18.66 110.114 19.1999 110.353 19.7456 110.587 cv
19.9776 110.773 20.2096 110.96 20.4415 111.146 cv
20.539 111.224 20.6369 111.305 20.7356 111.388 cv
.654902 .505882 .392157 rgb
f
23.2177 112.783 mo
23.1783 112.783 23.1376 112.78 23.0958 112.774 cv
22.1858 112.638 21.4399 111.977 20.7356 111.388 cv
20.6369 111.305 20.539 111.224 20.4415 111.146 cv
20.2096 110.96 19.9776 110.773 19.7456 110.587 cv
20.9745 111.114 22.2316 111.611 23.4766 112.053 cv
23.4207 112.267 23.4326 112.504 23.5262 112.711 cv
23.4375 112.757 23.3332 112.783 23.2177 112.783 cv
f
32.6948 114.94 mo
32.2028 114.94 31.7062 114.917 31.2086 114.875 cv
28.6908 114.66 26.1474 113.947 24.0421 113.178 cv
23.7847 113.084 23.6169 112.912 23.5262 112.711 cv
23.4326 112.504 23.4207 112.267 23.4766 112.053 cv
25.7078 112.845 27.9027 113.461 29.8406 113.759 cv
29.7744 114.106 29.9703 114.498 30.4386 114.5 cv
30.4614 114.5 30.4846 114.5 30.5074 114.5 cv
31.537 114.5 32.6735 114.4 33.8346 114.19 cv
33.849 114.188 33.863 114.186 33.8766 114.183 cv
35.0725 113.964 36.2933 113.629 37.4502 113.165 cv
37.4899 113.218 37.5231 113.276 37.5485 113.335 cv
37.6647 113.608 37.6175 113.923 37.2696 114.077 cv
35.8789 114.693 34.3116 114.94 32.6948 114.94 cv
f
30.5074 114.5 mo
30.4846 114.5 30.4614 114.5 30.4386 114.5 cv
29.9703 114.498 29.7744 114.106 29.8406 113.759 cv
30.2078 113.815 30.5657 113.86 30.9128 113.893 cv
31.7302 114.016 32.5068 114.085 33.2233 114.094 cv
33.406 114.158 33.5833 114.197 33.7324 114.197 cv
33.7682 114.197 33.8024 114.195 33.8346 114.19 cv
32.6735 114.4 31.537 114.5 30.5074 114.5 cv
33.8766 114.183 mo
33.9522 114.166 34.0149 114.134 34.0602 114.084 cv
34.1469 113.988 34.2287 113.888 34.3127 113.789 cv
34.4276 113.799 34.5369 113.804 34.6408 113.804 cv
35.5769 113.804 36.0765 113.418 36.439 112.94 cv
37.5906 112.264 38.6366 111.243 39.5037 110.074 cv
40.7639 109.667 42.0165 109.144 43.0622 108.449 cv
42.144 110.404 40.3536 111.834 38.2668 112.811 cv
37.9991 112.936 37.7265 113.054 37.4502 113.165 cv
36.2933 113.629 35.0725 113.964 33.8766 114.183 cv
f
39.5037 110.074 mo
40.1715 109.175 40.7332 108.188 41.1554 107.203 cv
41.8878 106.738 42.5182 106.076 43.0418 105.313 cv
43.1226 105.335 43.2056 105.347 43.2877 105.347 cv
43.6206 105.347 43.9401 105.159 44.0475 104.724 cv
44.094 104.535 44.1383 104.339 44.1801 104.135 cv
44.2903 104.052 44.4021 103.972 44.5157 103.893 cv
44.6478 103.802 44.779 103.763 44.9032 103.763 cv
45.0025 103.763 45.0973 103.788 45.184 103.832 cv
45.497 103.993 45.7058 104.402 45.652 104.767 cv
45.4165 106.366 44.4113 107.552 43.0622 108.449 cv
42.0165 109.144 40.7639 109.667 39.5037 110.074 cv
f
43.2877 105.347 mo
43.2056 105.347 43.1226 105.335 43.0418 105.313 cv
43.6679 104.402 44.1415 103.346 44.4546 102.314 cv
44.3898 102.959 44.2948 103.574 44.1801 104.135 cv
44.1383 104.339 44.094 104.535 44.0475 104.724 cv
43.9401 105.159 43.6206 105.347 43.2877 105.347 cv
f
4.49754 99.1983 mo
.457832 93.2644 -1.08649 87.8906 .795996 84.0509 cv
.762799 83.8326 li
.746679 81.8444 .780374 79.8312 1.98109 78.4528 cv
2.9808 77.3048 4.50732 76.5196 6.49282 76.0784 cv
6.36385 82.9901 4.38926 89.6467 4.52989 96.5905 cv
4.53234 96.6935 4.55041 96.7858 4.56504 96.8805 cv
4.45274 97.133 4.39124 97.4284 4.40782 97.7736 cv
4.43102 98.2498 4.46094 98.7242 4.49754 99.1983 cv
.915632 .985605 .925629 rgb
f
38.4457 116.549 mo
38.547 116.418 38.6563 116.293 38.7711 116.174 cv
39.0811 115.853 39.4859 115.704 39.8944 115.704 cv
40.2374 115.704 40.5829 115.809 40.8767 116.006 cv
40.1691 116.239 39.3518 116.422 38.4457 116.549 cv
.85098 .764706 .588235 rgb
f
9.40955 105.366 mo
7.5116 103.271 5.86202 101.203 4.49754 99.1983 cv
4.46094 98.7242 4.43102 98.2498 4.40782 97.7736 cv
4.39124 97.4284 4.45274 97.133 4.56504 96.8805 cv
4.55041 96.7858 4.53234 96.6935 4.52989 96.5905 cv
4.38926 89.6467 6.36385 82.9901 6.49282 76.0784 cv
6.66594 76.0399 6.8425 76.0041 7.02256 75.9708 cv
8.08322 75.775 9.25824 75.6779 10.5251 75.6753 cv
10.5439 77.4022 10.4262 79.1111 10.2397 80.8105 cv
8.0885 82.8601 6.57296 85.3176 5.96888 88.2272 cv
5.9459 88.337 5.93078 88.4498 5.91271 88.5616 cv
5.8009 88.6618 5.68956 88.7619 5.57825 88.8615 cv
5.3917 89.0285 5.53039 89.3205 5.80726 89.6041 cv
5.72861 91.5851 6.275 93.7921 7.25647 96.1608 cv
7.33312 96.546 7.42785 96.9406 7.56263 97.3537 cv
7.80315 98.0919 8.12961 98.8589 8.53774 99.6475 cv
8.67736 101.2 8.89474 102.733 9.18309 104.247 cv
9.25431 104.622 9.32978 104.994 9.40955 105.366 cv
8.09386 90.8229 mo
8.09971 90.4655 8.1251 90.1149 8.1681 89.7711 cv
8.33703 89.6217 8.50792 89.4743 8.67199 89.3219 cv
8.76817 89.3805 8.8678 89.4357 8.96888 89.4835 cv
8.64756 89.9147 8.3507 90.3585 8.09386 90.8229 cv
.156863 .188235 .129412 rgb
f
17.1865 109.408 mo
15.001 108.26 13.4184 106.868 12.2984 105.332 cv
11.89 104.771 11.5188 104.211 11.1707 103.653 cv
10.3901 100.907 9.76967 98.0921 9.20861 95.111 cv
8.17562 89.6246 10.5514 84.8077 11.7214 79.5547 cv
11.7719 79.5357 11.832 79.5268 11.8994 79.5268 cv
12.2105 79.5268 12.677 79.7158 13.068 79.9635 cv
13.6861 79.1904 14.907 78.8414 16.4671 78.7838 cv
14.4662 79.2064 12.7193 80.1272 11.5802 81.859 cv
11.3818 82.1605 11.6519 82.6294 11.9985 82.6294 cv
12.0477 82.6294 12.0984 82.62 12.1495 82.5993 cv
12.8917 82.298 13.5943 81.9543 14.2955 81.6149 cv
14.1671 81.7687 14.0396 81.923 13.9098 82.0758 cv
13.3512 82.7321 12.5343 83.3932 12.2941 84.235 cv
12.1855 84.6147 12.5005 84.889 12.8173 84.889 cv
12.9466 84.889 13.0762 84.8433 13.1774 84.7404 cv
13.1798 84.7506 li
13.3141 84.6432 13.4274 84.5075 13.5372 84.3668 cv
13.6676 84.2685 13.8161 84.1791 13.9532 84.0905 cv
13.9083 84.1912 13.8648 84.2951 13.8229 84.402 cv
13.7812 84.5081 13.7653 84.6138 13.7705 84.7161 cv
13.26 85.1778 12.7961 85.6956 12.3878 86.2716 cv
8.85182 91.2603 9.32952 96.925 12.1027 101.484 cv
11.808 101.569 11.5618 101.848 11.6437 102.241 cv
11.9113 103.529 12.8033 104.755 13.587 105.785 cv
14.2897 106.709 15.0475 107.509 16.0534 108.054 cv
16.1063 108.116 16.1594 108.178 16.2128 108.239 cv
16.1549 108.363 16.1671 108.512 16.3097 108.64 cv
16.5992 108.899 16.8915 109.155 17.1865 109.408 cv
40.0241 89.3618 mo
39.5168 88.8152 38.9487 88.2762 38.3185 87.7555 cv
38.26 87.7002 38.2015 87.6452 38.1432 87.5905 cv
37.1462 86.655 36.4331 85.9754 35.4226 85.7726 cv
35.3907 85.7546 35.3589 85.7367 35.327 85.7189 cv
35.1047 85.288 34.841 84.8758 34.5406 84.4826 cv
34.6428 84.4027 34.7219 84.2954 34.7747 84.1736 cv
36.2432 85.1101 37.599 86.142 38.7638 87.1976 cv
38.6623 87.4767 38.6898 87.8044 38.9381 88.0875 cv
39.3058 88.507 39.6676 88.9321 40.0241 89.3618 cv
10.0335 82.5009 mo
10.1082 81.938 10.1777 81.3751 10.2397 80.8105 cv
10.4041 80.6539 10.5721 80.4997 10.7438 80.3479 cv
10.5273 81.0851 10.2855 81.7998 10.0335 82.5009 cv
19.4483 81.0705 mo
19.3025 80.9894 19.1356 80.9316 18.9287 80.9316 cv
18.8814 80.9316 18.8321 80.9346 18.7804 80.941 cv
18.6646 80.9557 18.5602 80.9777 18.4483 80.9943 cv
18.4459 80.986 li
18.3946 81.0031 li
18.3781 81.0056 18.3618 81.0082 18.3454 81.0108 cv
18.4173 80.9294 18.4905 80.8493 18.5651 80.7712 cv
18.8959 80.7544 19.2274 80.7459 19.5588 80.7459 cv
20.0408 80.7459 20.523 80.7638 21.0036 80.7999 cv
20.4806 80.8498 19.9609 80.9408 19.4483 81.0705 cv
.74902 .921569 .709804 rgb
f
11.1707 103.653 mo
11.1667 103.647 11.1628 103.641 11.1588 103.634 cv
11.0514 103.497 10.9454 103.361 10.8419 103.226 cv
9.9082 102.003 9.13544 100.802 8.53774 99.6475 cv
8.48184 99.0261 8.43838 98.4013 8.40783 97.7736 cv
8.40247 97.6627 8.38049 97.5622 8.36146 97.4606 cv
8.47326 97.2135 8.53675 96.9244 8.52989 96.5905 cv
8.43334 91.8248 9.41134 87.1882 10.0335 82.5009 cv
10.2855 81.7998 10.5273 81.0851 10.7438 80.3479 cv
11.0348 80.0904 11.336 79.8398 11.6471 79.5958 cv
11.6687 79.5789 11.6936 79.5652 11.7214 79.5547 cv
10.5514 84.8077 8.17562 89.6246 9.20861 95.111 cv
9.76967 98.0921 10.3901 100.907 11.1707 103.653 cv
.701961 .784314 .517647 rgb
f
42.2558 91.3372 mo
42.0661 91.2117 41.8642 91.1048 41.6495 91.0192 cv
41.4869 90.8048 41.2291 90.5997 40.9391 90.4381 cv
40.6599 90.0782 40.355 89.7184 40.0241 89.3618 cv
39.6676 88.9321 39.3058 88.507 38.9381 88.0875 cv
38.6898 87.8044 38.6623 87.4767 38.7638 87.1976 cv
39.1568 87.5538 39.5281 87.9128 39.8746 88.2716 cv
40.9343 89.3693 41.7058 90.3857 42.2558 91.3372 cv
38.3185 87.7555 mo
37.5052 87.0834 36.5887 86.4421 35.5675 85.8551 cv
35.5192 85.8274 35.4709 85.7999 35.4226 85.7726 cv
36.4331 85.9754 37.1462 86.655 38.1432 87.5905 cv
38.2015 87.6452 38.26 87.7002 38.3185 87.7555 cv
35.327 85.7189 mo
34.1935 85.0861 33.041 84.5723 31.8965 84.1471 cv
31.8639 83.9539 31.7522 83.7622 31.5357 83.5915 cv
29.4762 81.9681 27.3626 81.0796 25.0068 81.0796 cv
24.8258 81.0796 24.6435 81.0848 24.4596 81.0954 cv
23.6275 80.865 22.782 80.7551 21.9393 80.7551 cv
21.6267 80.7551 21.3146 80.7702 21.0036 80.7999 cv
20.523 80.7638 20.0408 80.7459 19.5588 80.7459 cv
19.2274 80.7459 18.8959 80.7544 18.5651 80.7712 cv
18.4905 80.8493 18.4173 80.9294 18.3454 81.0108 cv
16.2613 81.3429 14.8288 82.1268 13.9532 84.0905 cv
13.8161 84.1791 13.6676 84.2685 13.5372 84.3668 cv
13.4274 84.5075 13.3141 84.6432 13.1798 84.7506 cv
13.1774 84.7404 li
13.0762 84.8433 12.9466 84.889 12.8173 84.889 cv
12.5005 84.889 12.1855 84.6147 12.2941 84.235 cv
12.5343 83.3932 13.3512 82.7321 13.9098 82.0758 cv
14.0396 81.923 14.1671 81.7687 14.2955 81.6149 cv
13.5943 81.9543 12.8917 82.298 12.1495 82.5993 cv
12.0984 82.62 12.0477 82.6294 11.9985 82.6294 cv
11.6519 82.6294 11.3818 82.1605 11.5802 81.859 cv
12.7193 80.1272 14.4662 79.2064 16.4671 78.7838 cv
16.6248 78.778 16.7857 78.7752 16.9501 78.7752 cv
19.0516 78.7752 21.6754 79.2397 24.2516 79.882 cv
27.0611 80.5827 29.9332 81.443 32.9249 83.0792 cv
33.5567 83.4248 34.1751 83.7913 34.7747 84.1736 cv
34.7219 84.2954 34.6428 84.4027 34.5406 84.4826 cv
34.841 84.8758 35.1047 85.288 35.327 85.7189 cv
f
13.7705 84.7161 mo
13.7653 84.6138 13.7812 84.5081 13.8229 84.402 cv
13.8648 84.2951 13.9083 84.1912 13.9532 84.0905 cv
14.8288 82.1268 16.2613 81.3429 18.3454 81.0108 cv
18.3618 81.0082 18.3781 81.0056 18.3946 81.0031 cv
18.4459 80.986 li
18.4483 80.9943 li
18.5602 80.9777 18.6646 80.9557 18.7804 80.941 cv
18.8321 80.9346 18.8814 80.9316 18.9287 80.9316 cv
19.1356 80.9316 19.3025 80.9894 19.4483 81.0705 cv
19.9609 80.9408 20.4806 80.8498 21.0036 80.7999 cv
21.3146 80.7702 21.6267 80.7551 21.9393 80.7551 cv
22.782 80.7551 23.6275 80.865 24.4596 81.0954 cv
24.6435 81.0848 24.8258 81.0796 25.0068 81.0796 cv
27.3626 81.0796 29.4762 81.9681 31.5357 83.5915 cv
31.7522 83.7622 31.8639 83.9539 31.8965 84.1471 cv
31.0544 83.8342 30.2164 83.5691 29.3931 83.3396 cv
27.2538 82.3 24.7755 81.7477 22.3326 81.7477 cv
19.1423 81.7477 16.0116 82.6892 13.7705 84.7161 cv
.635294 .654902 .431373 rgb
f
17.4159 109.526 mo
17.3387 109.487 17.2622 109.448 17.1865 109.408 cv
16.8915 109.155 16.5992 108.899 16.3097 108.64 cv
16.1671 108.512 16.1549 108.363 16.2128 108.239 cv
16.6002 108.684 17.0018 109.124 17.4159 109.526 cv
16.0534 108.054 mo
15.0475 107.509 14.2897 106.709 13.587 105.785 cv
12.8033 104.755 11.9113 103.529 11.6437 102.241 cv
11.5618 101.848 11.808 101.569 12.1027 101.484 cv
12.5875 102.281 13.1427 103.045 13.7587 103.765 cv
13.246 103.873 12.9249 104.672 13.379 105.055 cv
14.1439 105.701 15.0483 106.884 16.0534 108.054 cv
f
19.7456 110.587 mo
19.1999 110.353 18.66 110.114 18.1285 109.87 cv
17.8844 109.758 17.6468 109.644 17.4159 109.526 cv
17.0018 109.124 16.6002 108.684 16.2128 108.239 cv
16.1594 108.178 16.1063 108.116 16.0534 108.054 cv
15.0483 106.884 14.1439 105.701 13.379 105.055 cv
12.9249 104.672 13.246 103.873 13.7587 103.765 cv
13.9015 103.932 14.0469 104.096 14.1961 104.258 cv
14.4778 104.709 14.8043 105.167 15.1842 105.629 cv
15.8727 106.466 16.6752 107.253 17.5598 107.985 cv
17.3791 108.288 17.3636 108.677 17.6842 108.934 cv
18.3712 109.485 19.0584 110.036 19.7456 110.587 cv
.54902 .584314 .364706 rgb
f
23.4766 112.053 mo
22.2316 111.611 20.9745 111.114 19.7456 110.587 cv
19.0584 110.036 18.3712 109.485 17.6842 108.934 cv
17.3636 108.677 17.3791 108.288 17.5598 107.985 cv
19.348 109.464 21.4702 110.717 23.6556 111.695 cv
23.5721 111.796 23.5113 111.92 23.4766 112.053 cv
f
29.8406 113.759 mo
27.9027 113.461 25.7078 112.845 23.4766 112.053 cv
23.5113 111.92 23.5721 111.796 23.6556 111.695 cv
25.7419 112.628 27.8858 113.313 29.8527 113.706 cv
29.848 113.724 29.844 113.741 29.8406 113.759 cv
f
30.9128 113.893 mo
30.5657 113.86 30.2078 113.815 29.8406 113.759 cv
29.844 113.741 29.848 113.724 29.8527 113.706 cv
30.2124 113.778 30.5665 113.841 30.9128 113.893 cv
f
14.1961 104.258 mo
14.0469 104.096 13.9015 103.932 13.7587 103.765 cv
13.1427 103.045 12.5875 102.281 12.1027 101.484 cv
9.32952 96.925 8.85182 91.2603 12.3878 86.2716 cv
12.7961 85.6956 13.26 85.1778 13.7705 84.7161 cv
16.0116 82.6892 19.1423 81.7477 22.3326 81.7477 cv
24.7755 81.7477 27.2538 82.3 29.3931 83.3396 cv
27.998 82.9506 26.6451 82.6636 25.3849 82.4186 cv
24.6041 82.2669 23.9275 82.2003 23.3307 82.2003 cv
21.4264 82.2003 20.3297 82.8775 19.2188 83.6295 cv
15.7745 85.9625 13.7985 89.2477 12.8805 93.0372 cv
12.4132 94.9684 12.086 96.9977 12.441 99.2995 cv
12.6687 100.772 13.0794 102.467 14.1961 104.258 cv
.160784 .337255 .160784 rgb
f
8.53774 99.6475 mo
8.12961 98.8589 7.80315 98.0919 7.56263 97.3537 cv
7.42785 96.9406 7.33312 96.546 7.25647 96.1608 cv
6.275 93.7921 5.72861 91.5851 5.80726 89.6041 cv
5.53039 89.3205 5.3917 89.0285 5.57825 88.8615 cv
5.68956 88.7619 5.8009 88.6618 5.91271 88.5616 cv
5.93078 88.4498 5.9459 88.337 5.96888 88.2272 cv
6.57296 85.3176 8.0885 82.8601 10.2397 80.8105 cv
10.1777 81.3751 10.1082 81.938 10.0335 82.5009 cv
9.41134 87.1882 8.43334 91.8248 8.52989 96.5905 cv
8.53675 96.9244 8.47326 97.2135 8.36146 97.4606 cv
8.38049 97.5622 8.40247 97.6627 8.40783 97.7736 cv
8.43838 98.4013 8.48184 99.0261 8.53774 99.6475 cv
8.67199 89.3219 mo
8.50792 89.4743 8.33703 89.6217 8.1681 89.7711 cv
8.1251 90.1149 8.09971 90.4655 8.09386 90.8229 cv
8.3507 90.3585 8.64756 89.9147 8.96888 89.4835 cv
8.8678 89.4357 8.76817 89.3805 8.67199 89.3219 cv
f
34.6408 113.804 mo
34.5369 113.804 34.4276 113.799 34.3127 113.789 cv
34.3336 113.765 34.3547 113.74 34.3761 113.716 cv
34.4913 113.694 34.6134 113.678 34.7223 113.651 cv
35.3134 113.508 35.8882 113.263 36.439 112.94 cv
36.0765 113.418 35.5769 113.804 34.6408 113.804 cv
.54902 .584314 .364706 rgb
f
33.8346 114.19 mo
33.8486 114.188 33.8626 114.185 33.8766 114.183 cv
33.863 114.186 33.849 114.188 33.8346 114.19 cv
f
33.7324 114.197 mo
33.5833 114.197 33.406 114.158 33.2233 114.094 cv
32.5068 114.085 31.7302 114.016 30.9128 113.893 cv
31.3493 113.934 31.7688 113.956 32.1683 113.956 cv
32.6177 113.956 33.0416 113.928 33.4361 113.871 cv
33.6041 113.847 33.694 113.786 33.7306 113.704 cv
33.9397 113.746 34.1333 113.774 34.3127 113.789 cv
34.2287 113.888 34.1469 113.988 34.0602 114.084 cv
34.0149 114.134 33.9522 114.166 33.8766 114.183 cv
33.8626 114.185 33.8486 114.188 33.8346 114.19 cv
33.8024 114.195 33.7682 114.197 33.7324 114.197 cv
f
44.8874 100.079 mo
44.7847 99.8683 44.6625 99.67 44.5193 99.4865 cv
44.4283 97.9662 44.1141 96.4601 43.4603 95.2318 cv
43.4076 94.0449 43.0808 92.7643 42.2558 91.3372 cv
44.6416 92.9157 45.1026 97.4546 44.8874 100.079 cv
.701961 .784314 .517647 rgb
f
37.7674 110.893 mo
37.8483 110.766 37.9285 110.638 38.008 110.511 cv
38.1746 110.467 38.3425 110.421 38.5112 110.374 cv
38.2702 110.555 38.0233 110.728 37.7674 110.893 cv
41.7667 106.102 mo
42.4627 104.314 42.6846 102.444 42.5356 100.579 cv
42.6743 101.791 42.621 103.001 42.3751 104.263 cv
42.2867 104.717 42.5186 105.063 42.8376 105.233 cv
42.4868 105.531 42.1348 105.826 41.7667 106.102 cv
44.4546 102.314 mo
44.5454 101.41 44.5767 100.445 44.5193 99.4865 cv
44.6625 99.67 44.7847 99.8683 44.8874 100.079 cv
44.8795 100.175 44.8706 100.269 44.8609 100.36 cv
44.7959 100.971 44.6598 101.637 44.4546 102.314 cv
.635294 .654902 .431373 rgb
f
36.439 112.94 mo
36.6889 112.61 36.8735 112.238 37.0909 111.919 cv
37.3218 111.58 37.5473 111.238 37.7674 110.893 cv
38.0233 110.728 38.2702 110.555 38.5112 110.374 cv
38.8404 110.281 39.1721 110.182 39.5037 110.074 cv
38.6366 111.243 37.5906 112.264 36.439 112.94 cv
.54902 .584314 .364706 rgb
f
38.008 110.511 mo
38.3139 110.019 38.609 109.521 38.8933 109.017 cv
40.1952 108.342 41.253 107.415 41.7589 106.122 cv
41.7615 106.116 41.764 106.109 41.7667 106.102 cv
42.1348 105.826 42.4868 105.531 42.8376 105.233 cv
42.9027 105.267 42.9715 105.294 43.0418 105.313 cv
42.5182 106.076 41.8878 106.738 41.1554 107.203 cv
40.7332 108.188 40.1715 109.175 39.5037 110.074 cv
39.1721 110.182 38.8404 110.281 38.5112 110.374 cv
38.3425 110.421 38.1746 110.467 38.008 110.511 cv
f
43.0418 105.313 mo
42.9715 105.294 42.9027 105.267 42.8376 105.233 cv
42.5186 105.063 42.2867 104.717 42.3751 104.263 cv
42.621 103.001 42.6743 101.791 42.5356 100.579 cv
42.5313 100.525 42.5267 100.472 42.5218 100.418 cv
42.7458 99.6582 42.9499 98.8888 43.1339 98.1095 cv
43.3496 97.1967 43.5054 96.2485 43.4603 95.2318 cv
44.1141 96.4601 44.4283 97.9662 44.5193 99.4865 cv
44.5767 100.445 44.5454 101.41 44.4546 102.314 cv
44.1415 103.346 43.6679 104.402 43.0418 105.313 cv
f
38.8933 109.017 mo
39.1458 108.57 39.3897 108.117 39.6251 107.66 cv
40.8091 105.363 41.7759 102.946 42.5218 100.418 cv
42.5267 100.472 42.5313 100.525 42.5356 100.579 cv
42.6846 102.444 42.4627 104.314 41.7667 106.102 cv
41.764 106.109 41.7615 106.116 41.7589 106.122 cv
41.253 107.415 40.1952 108.342 38.8933 109.017 cv
.160784 .337255 .160784 rgb
f
23.6653 111.683 mo
23.6377 111.634 23.6085 111.585 23.5778 111.538 cv
23.6258 111.566 23.6742 111.594 23.7228 111.622 cv
23.7026 111.641 23.6834 111.662 23.6653 111.683 cv
.584314 .8 .462745 rgb
f
32.6979 112.918 mo
32.9111 112.753 33.1014 112.568 33.271 112.372 cv
33.3425 112.376 33.414 112.378 33.4855 112.378 cv
34.8156 112.378 36.1278 111.687 37.1395 110.729 cv
37.4229 110.661 37.7138 110.588 38.008 110.511 cv
37.9285 110.638 37.8483 110.766 37.7674 110.893 cv
37.6658 110.958 37.5627 111.021 37.4581 111.083 cv
35.9715 111.962 34.3954 112.568 32.7426 112.917 cv
32.7277 112.917 32.7128 112.918 32.6979 112.918 cv
26.643 112.151 mo
25.928 111.958 25.2184 111.734 24.5094 111.483 cv
24.4026 111.445 24.3019 111.428 24.2083 111.428 cv
24.0131 111.428 23.8487 111.503 23.7228 111.622 cv
23.6742 111.594 23.6258 111.566 23.5778 111.538 cv
23.2849 111.086 22.8559 110.721 22.4064 110.39 cv
22.3884 110.222 22.3184 110.05 22.1959 109.892 cv
22.0036 109.645 21.7741 109.44 21.5272 109.254 cv
22.0575 109.483 22.595 109.694 23.1379 109.883 cv
23.6338 110.129 24.1537 110.372 24.6894 110.603 cv
24.8764 110.739 25.0623 110.878 25.2481 111.017 cv
25.546 111.262 25.8502 111.506 26.153 111.75 cv
26.3119 111.884 26.4744 112.017 26.643 112.151 cv
.533333 .698039 .396078 rgb
f
22.4064 110.39 mo
22.1068 110.169 21.7982 109.962 21.5147 109.755 cv
20.8437 109.262 20.1726 108.77 19.5016 108.278 cv
20.1647 108.631 20.84 108.957 21.5272 109.254 cv
21.7741 109.44 22.0036 109.645 22.1959 109.892 cv
22.3184 110.05 22.3884 110.222 22.4064 110.39 cv
17.5598 107.985 mo
16.6752 107.253 15.8727 106.466 15.1842 105.629 cv
14.8043 105.167 14.4778 104.709 14.1961 104.258 cv
15.3547 105.516 16.7046 106.628 18.1909 107.537 cv
17.9347 107.57 17.6986 107.752 17.5598 107.985 cv
.466667 .643137 .345098 rgb
f
23.6556 111.695 mo
21.4702 110.717 19.348 109.464 17.5598 107.985 cv
17.6986 107.752 17.9347 107.57 18.1909 107.537 cv
18.345 107.631 18.5004 107.723 18.6573 107.813 cv
18.9362 107.972 19.2179 108.128 19.5016 108.278 cv
20.1726 108.77 20.8437 109.262 21.5147 109.755 cv
21.7982 109.962 22.1068 110.169 22.4064 110.39 cv
22.8559 110.721 23.2849 111.086 23.5778 111.538 cv
23.6085 111.585 23.6377 111.634 23.6653 111.683 cv
23.662 111.687 23.6588 111.691 23.6556 111.695 cv
f
29.8527 113.706 mo
27.8858 113.313 25.7419 112.628 23.6556 111.695 cv
23.6588 111.691 23.662 111.687 23.6653 111.683 cv
23.6834 111.662 23.7026 111.641 23.7228 111.622 cv
23.8487 111.503 24.0131 111.428 24.2083 111.428 cv
24.3019 111.428 24.4026 111.445 24.5094 111.483 cv
25.2184 111.734 25.928 111.958 26.643 112.151 cv
26.725 112.217 26.8085 112.282 26.8937 112.348 cv
27.1935 112.58 27.4796 112.72 27.7232 112.785 cv
27.8268 112.885 li
28.2906 113.323 28.8259 113.521 29.19 113.521 cv
29.3226 113.521 29.4325 113.494 29.5079 113.444 cv
29.6212 113.472 li
29.712 113.521 29.8034 113.563 29.8923 113.598 cv
29.8761 113.633 29.8628 113.669 29.8527 113.706 cv
32.6841 112.929 mo
32.6888 112.925 32.6932 112.922 32.6979 112.918 cv
32.7128 112.918 32.7277 112.917 32.7426 112.917 cv
32.7231 112.921 32.7036 112.925 32.6841 112.929 cv
f
32.1683 113.956 mo
31.7688 113.956 31.3493 113.934 30.9128 113.893 cv
30.5665 113.841 30.2124 113.778 29.8527 113.706 cv
29.8628 113.669 29.8761 113.633 29.8923 113.598 cv
30.059 113.663 30.2173 113.701 30.3483 113.701 cv
30.4639 113.701 30.5582 113.671 30.6183 113.604 cv
30.6346 113.604 30.6508 113.604 30.667 113.604 cv
31.5031 113.604 32.1625 113.328 32.6841 112.929 cv
32.7036 112.925 32.7231 112.921 32.7426 112.917 cv
34.3954 112.568 35.9715 111.962 37.4581 111.083 cv
37.5627 111.021 37.6658 110.958 37.7674 110.893 cv
37.5473 111.238 37.3218 111.58 37.0909 111.919 cv
36.8735 112.238 36.6889 112.61 36.439 112.94 cv
35.8882 113.263 35.3134 113.508 34.7223 113.651 cv
34.6134 113.678 34.4913 113.694 34.3761 113.716 cv
34.3547 113.74 34.3336 113.765 34.3127 113.789 cv
34.1333 113.774 33.9397 113.746 33.7306 113.704 cv
33.694 113.786 33.6041 113.847 33.4361 113.871 cv
33.0416 113.928 32.6177 113.956 32.1683 113.956 cv
f
24.6894 110.603 mo
24.1537 110.372 23.6338 110.129 23.1379 109.883 cv
23.4663 109.998 23.7969 110.105 24.1295 110.204 cv
24.3179 110.334 24.5042 110.467 24.6894 110.603 cv
f
37.1395 110.729 mo
37.4101 110.473 37.6593 110.197 37.8815 109.91 cv
38.0296 109.719 38.1712 109.514 38.3061 109.298 cv
38.5065 109.21 38.7024 109.116 38.8933 109.017 cv
38.609 109.521 38.3139 110.019 38.008 110.511 cv
37.7138 110.588 37.4229 110.661 37.1395 110.729 cv
f
15.5525 99.6522 mo
14.0969 97.4471 13.454 94.8228 14.2906 91.8766 cv
14.9943 89.3976 16.2715 87.7638 18.1175 86.8524 cv
16.15 88.7544 14.6181 91.5775 15.3336 94.0647 cv
15.0083 94.1356 14.7463 94.3916 14.7779 94.8414 cv
14.883 96.3359 14.9938 98.1329 15.5525 99.6522 cv
.623529 .905882 .611765 rgb
f
16.0528 94.1988 mo
15.8952 94.0963 15.7082 94.0443 15.5266 94.0443 cv
15.461 94.0443 15.3961 94.0511 15.3336 94.0647 cv
14.6181 91.5775 16.15 88.7544 18.1175 86.8524 cv
18.9065 86.4628 19.7994 86.2052 20.796 86.07 cv
18.3666 87.9649 16.6281 90.9725 16.0528 94.1988 cv
.584314 .8 .462745 rgb
f
16.9312 101.382 mo
16.4189 100.839 15.9548 100.262 15.5525 99.6522 cv
14.9938 98.1329 14.883 96.3359 14.7779 94.8414 cv
14.7463 94.3916 15.0083 94.1356 15.3336 94.0647 cv
15.3961 94.0511 15.461 94.0443 15.5266 94.0443 cv
15.7082 94.0443 15.8952 94.0963 16.0528 94.1988 cv
15.9928 94.5357 15.9454 94.8748 15.9113 95.2155 cv
15.7067 97.2536 16.1049 99.3747 16.9353 101.369 cv
16.9339 101.374 16.9326 101.378 16.9312 101.382 cv
f
40.2237 89.6037 mo
39.588 88.9688 38.9479 88.3492 38.3185 87.7555 cv
38.9487 88.2762 39.5168 88.8152 40.0241 89.3618 cv
40.0908 89.4423 40.1574 89.5229 40.2237 89.6037 cv
35.4226 85.7726 mo
35.3977 85.7676 35.3726 85.7629 35.3473 85.7584 cv
35.3406 85.7452 35.3338 85.7321 35.327 85.7189 cv
35.3589 85.7367 35.3907 85.7546 35.4226 85.7726 cv
.623529 .905882 .611765 rgb
f
43.4603 95.2318 mo
43.0637 94.4868 42.5422 93.844 41.8696 93.3618 cv
41.8198 93.2915 41.7685 93.2223 41.7157 93.1539 cv
41.5982 92.3268 41.3901 91.5331 41.047 90.8424 cv
40.6954 90.1344 40.1676 89.4601 39.5133 89.0074 cv
39.1331 88.7155 38.7125 88.5186 38.2599 88.3999 cv
37.7252 87.9559 37.0782 87.5365 36.2789 87.1652 cv
36.0532 87.0604 35.8244 86.9614 35.5936 86.8679 cv
35.0158 86.4495 34.4174 86.0541 33.7989 85.6828 cv
33.6195 85.575 33.434 85.5277 33.2537 85.5277 cv
33.199 85.5277 33.1448 85.532 33.0914 85.5404 cv
32.8072 85.3503 32.521 85.1701 32.2345 85.0011 cv
32.068 84.903 31.9039 84.839 31.7418 84.7916 cv
31.7398 84.7901 31.7381 84.7888 31.7361 84.7872 cv
31.8675 84.5917 31.9339 84.3684 31.8965 84.1471 cv
33.041 84.5723 34.1935 85.0861 35.327 85.7189 cv
35.3338 85.7321 35.3406 85.7452 35.3473 85.7584 cv
35.3726 85.7629 35.3977 85.7676 35.4226 85.7726 cv
35.4709 85.7999 35.5192 85.8274 35.5675 85.8551 cv
36.5887 86.4421 37.5052 87.0834 38.3185 87.7555 cv
38.9479 88.3492 39.588 88.9688 40.2237 89.6037 cv
40.1574 89.5229 40.0908 89.4423 40.0241 89.3618 cv
40.355 89.7184 40.6599 90.0782 40.9391 90.4381 cv
41.2291 90.5997 41.4869 90.8048 41.6495 91.0192 cv
41.8642 91.1048 42.0661 91.2117 42.2558 91.3372 cv
43.0808 92.7643 43.4076 94.0449 43.4603 95.2318 cv
.584314 .8 .462745 rgb
f
35.5936 86.8679 mo
35.158 86.6914 34.7148 86.5343 34.2689 86.3933 cv
33.8805 86.09 33.4878 85.8055 33.0914 85.5404 cv
33.1448 85.532 33.199 85.5277 33.2537 85.5277 cv
33.434 85.5277 33.6195 85.575 33.7989 85.6828 cv
34.4174 86.0541 35.0158 86.4495 35.5936 86.8679 cv
31.7361 84.7872 mo
31.0226 84.2321 30.2338 83.7481 29.3931 83.3396 cv
30.2164 83.5691 31.0544 83.8342 31.8965 84.1471 cv
31.9339 84.3684 31.8675 84.5917 31.7361 84.7872 cv
.533333 .698039 .396078 rgb
f
42.5218 100.418 mo
42.466 99.8074 42.3707 99.1971 42.2398 98.5911 cv
42.7274 97.7455 43.0538 96.8227 42.9356 95.9464 cv
42.902 95.6935 42.8189 95.4786 42.7188 95.277 cv
42.5586 94.5354 42.2632 93.9174 41.8696 93.3618 cv
42.5422 93.844 43.0637 94.4868 43.4603 95.2318 cv
43.5054 96.2485 43.3496 97.1967 43.1339 98.1095 cv
42.9499 98.8888 42.7458 99.6582 42.5218 100.418 cv
.466667 .643137 .345098 rgb
f
24.1295 110.204 mo
23.7969 110.105 23.4663 109.998 23.1379 109.883 cv
22.595 109.694 22.0575 109.483 21.5272 109.254 cv
20.84 108.957 20.1647 108.631 19.5016 108.278 cv
19.2179 108.128 18.9362 107.972 18.6573 107.813 cv
18.5004 107.723 18.345 107.631 18.1909 107.537 cv
16.7046 106.628 15.3547 105.516 14.1961 104.258 cv
13.0794 102.467 12.6687 100.772 12.441 99.2995 cv
12.086 96.9977 12.4132 94.9684 12.8805 93.0372 cv
13.7985 89.2477 15.7745 85.9625 19.2188 83.6295 cv
20.3297 82.8775 21.4264 82.2003 23.3307 82.2003 cv
23.9275 82.2003 24.6041 82.2669 25.3849 82.4186 cv
26.6451 82.6636 27.998 82.9506 29.3931 83.3396 cv
30.2338 83.7481 31.0226 84.2321 31.7361 84.7872 cv
31.7381 84.7888 31.7398 84.7901 31.7418 84.7916 cv
31.9039 84.839 32.068 84.903 32.2345 85.0011 cv
32.521 85.1701 32.8072 85.3503 33.0914 85.5404 cv
33.4878 85.8055 33.8805 86.09 34.2689 86.3933 cv
32.2512 85.7556 30.1795 85.449 28.5236 85.1823 cv
27.3981 85.001 26.312 84.8916 25.3348 84.8916 cv
24.2271 84.8916 23.2593 85.0321 22.5314 85.3678 cv
21.4108 85.8854 20.9064 86.8917 20.4874 87.9113 cv
20.234 88.3991 20.0328 88.9025 19.861 89.3859 cv
19.7462 89.7086 20.2399 90.1769 20.7941 90.4806 cv
20.6951 90.4599 20.6003 90.4485 20.5135 90.4485 cv
20.3647 90.4485 20.2393 90.482 20.1564 90.5597 cv
19.6896 90.9953 19.3248 91.4821 19.0445 92.0143 cv
18.9108 92.1588 li
18.8487 92.4264 li
18.6036 93.007 18.4493 93.6374 18.3893 94.3214 cv
18.3946 94.3786 li
18.2672 94.9284 18.1393 95.4777 18.0114 96.027 cv
17.3834 97.5968 16.7648 99.3175 16.962 101.287 cv
16.9531 101.314 16.9442 101.342 16.9353 101.369 cv
16.1049 99.3747 15.7067 97.2536 15.9113 95.2155 cv
15.9454 94.8748 15.9928 94.5357 16.0528 94.1988 cv
16.6281 90.9725 18.3666 87.9649 20.796 86.07 cv
19.7994 86.2052 18.9065 86.4628 18.1175 86.8524 cv
16.2715 87.7638 14.9943 89.3976 14.2906 91.8766 cv
13.454 94.8228 14.0969 97.4471 15.5525 99.6522 cv
15.9548 100.262 16.4189 100.839 16.9312 101.382 cv
16.8257 101.708 16.7198 102.033 16.6139 102.359 cv
16.5436 102.575 16.7535 102.859 17.0651 103.113 cv
17.2643 103.344 17.463 103.574 17.6622 103.805 cv
18.2447 105.048 19.3048 106.453 20.8473 107.794 cv
21.2281 108.151 21.6495 108.51 22.1217 108.875 cv
22.297 109.01 22.4816 109.115 22.6607 109.192 cv
23.1305 109.524 23.6119 109.85 24.0924 110.179 cv
24.1048 110.187 24.1172 110.196 24.1295 110.204 cv
38.3061 109.298 mo
39.3808 107.576 40.0398 105.13 40.3365 103.059 cv
40.5982 102.741 40.8409 102.408 41.0314 102.037 cv
41.3126 101.486 41.546 100.766 41.6549 100.027 cv
41.7604 99.797 41.8727 99.5705 41.9742 99.3385 cv
42.0445 99.1754 42.0646 99.0216 42.0699 98.8727 cv
42.1283 98.78 42.1851 98.686 42.2398 98.5911 cv
42.3707 99.1971 42.466 99.8074 42.5218 100.418 cv
41.7759 102.946 40.8091 105.363 39.6251 107.66 cv
39.3897 108.117 39.1458 108.57 38.8933 109.017 cv
38.7024 109.116 38.5065 109.21 38.3061 109.298 cv
.164706 .45098 .184314 rgb
f
29.4128 112.731 mo
29.2652 112.71 29.1179 112.687 28.9712 112.662 cv
28.9951 112.636 29.0163 112.609 29.0353 112.58 cv
29.1607 112.631 29.2865 112.681 29.4128 112.731 cv
.498039 .811765 .423529 rgb
f
31.9484 112.933 mo
31.6274 112.933 31.3064 112.924 30.9854 112.901 cv
30.4548 112.864 29.9312 112.807 29.4128 112.731 cv
29.2865 112.681 29.1607 112.631 29.0353 112.58 cv
29.0163 112.609 28.9951 112.636 28.9712 112.662 cv
28.1855 112.531 27.4112 112.359 26.643 112.151 cv
26.4744 112.017 26.3119 111.884 26.153 111.75 cv
25.8502 111.506 25.546 111.262 25.2481 111.017 cv
25.0623 110.878 24.8764 110.739 24.6894 110.603 cv
25.792 111.077 26.9617 111.496 28.1269 111.766 cv
28.4646 112.131 29.0787 112.401 29.5231 112.46 cv
29.9154 112.696 30.3755 112.871 30.6727 112.871 cv
30.8268 112.871 30.937 112.824 30.9713 112.714 cv
31.1863 112.816 31.4213 112.874 31.6601 112.874 cv
31.8681 112.874 32.0791 112.83 32.2823 112.734 cv
32.5099 112.625 32.733 112.489 32.9503 112.339 cv
33.0571 112.355 33.1641 112.366 33.271 112.372 cv
33.1014 112.568 32.9111 112.753 32.6979 112.918 cv
32.4482 112.927 32.1982 112.933 31.9484 112.933 cv
.458824 .733333 .368627 rgb
f
29.8923 113.598 mo
29.8034 113.563 29.712 113.521 29.6212 113.472 cv
29.5079 113.444 li
29.4325 113.494 29.3226 113.521 29.19 113.521 cv
28.8259 113.521 28.2906 113.323 27.8268 112.885 cv
27.7232 112.785 li
27.4796 112.72 27.1935 112.58 26.8937 112.348 cv
26.8085 112.282 26.725 112.217 26.643 112.151 cv
27.4112 112.359 28.1855 112.531 28.9712 112.662 cv
29.1179 112.687 29.2652 112.71 29.4128 112.731 cv
29.9312 112.807 30.4548 112.864 30.9854 112.901 cv
31.3064 112.924 31.6274 112.933 31.9484 112.933 cv
32.1982 112.933 32.4482 112.927 32.6979 112.918 cv
32.6932 112.922 32.6888 112.925 32.6841 112.929 cv
31.9503 113.081 31.2015 113.182 30.4386 113.234 cv
30.1647 113.253 29.9819 113.405 29.8923 113.598 cv
.403922 .690196 .329412 rgb
f
30.3483 113.701 mo
30.2173 113.701 30.059 113.663 29.8923 113.598 cv
29.9819 113.405 30.1647 113.253 30.4386 113.234 cv
31.2015 113.182 31.9503 113.081 32.6841 112.929 cv
32.1625 113.328 31.5031 113.604 30.667 113.604 cv
30.6508 113.604 30.6346 113.604 30.6183 113.604 cv
30.5582 113.671 30.4639 113.701 30.3483 113.701 cv
f
28.1269 111.766 mo
26.9617 111.496 25.792 111.077 24.6894 110.603 cv
24.5042 110.467 24.3179 110.334 24.1295 110.204 cv
24.5704 110.336 25.0149 110.452 25.4625 110.553 cv
25.7206 110.883 26.0922 111.126 26.5939 111.252 cv
26.6667 111.27 26.7356 111.278 26.8017 111.278 cv
26.9068 111.278 27.0047 111.258 27.0997 111.231 cv
27.2936 111.312 27.4928 111.377 27.7057 111.385 cv
27.8204 111.372 li
28.0191 111.632 li
28.0507 111.678 28.0869 111.723 28.1269 111.766 cv
f
16.9479 101.4 mo
16.9424 101.394 16.9367 101.388 16.9312 101.382 cv
16.9326 101.378 16.9339 101.374 16.9353 101.369 cv
16.9395 101.379 16.9437 101.39 16.9479 101.4 cv
.498039 .811765 .423529 rgb
f
21.535 90.9563 mo
21.7553 90.646 21.9953 90.3539 22.2525 90.0844 cv
22.0647 90.3234 21.8891 90.57 21.7297 90.8258 cv
21.6634 90.8661 21.5984 90.9097 21.535 90.9563 cv
.270588 .596078 .25098 rgb
f
21.7297 90.8258 mo
21.8891 90.57 22.0647 90.3234 22.2525 90.0844 cv
22.3992 89.9308 22.5517 89.7844 22.7096 89.6458 cv
22.6215 89.8763 22.5517 90.1164 22.5011 90.3618 cv
22.3985 90.4334 22.3009 90.5135 22.2095 90.6015 cv
22.0435 90.6568 21.8829 90.7327 21.7297 90.8258 cv
.227451 .560784 .223529 rgb
f
22.5011 90.3618 mo
22.5517 90.1164 22.6215 89.8763 22.7096 89.6458 cv
23.663 88.8094 24.8148 88.2621 26.0994 88.1565 cv
26.0272 88.2283 25.96 88.3039 25.899 88.3844 cv
25.4108 88.4333 24.9244 88.6705 24.5387 89.0236 cv
24.3595 89.0099 li
23.6866 89.032 23.252 89.5106 23.0155 90.0894 cv
22.8347 90.1581 22.6618 90.2495 22.5011 90.3618 cv
.203922 .545098 .207843 rgb
f
38.2599 88.3999 mo
38.1515 88.3714 38.0413 88.3475 37.9293 88.3278 cv
37.5639 88.0956 37.1831 87.8978 36.7647 87.7707 cv
36.3848 87.4592 35.9941 87.158 35.5936 86.8679 cv
35.8244 86.9614 36.0532 87.0604 36.2789 87.1652 cv
37.0782 87.5365 37.7252 87.9559 38.2599 88.3999 cv
.498039 .811765 .423529 rgb
f
36.7647 87.7707 mo
36.5357 87.7011 36.2953 87.6527 36.0402 87.6315 cv
35.9195 87.6111 35.8004 87.6009 35.6824 87.5988 cv
35.2214 87.1711 34.7491 86.7683 34.2689 86.3933 cv
34.7148 86.5343 35.158 86.6914 35.5936 86.8679 cv
35.9941 87.158 36.3848 87.4592 36.7647 87.7707 cv
.458824 .733333 .368627 rgb
f
22.2095 90.6015 mo
22.3009 90.5135 22.3985 90.4334 22.5011 90.3618 cv
22.6618 90.2495 22.8347 90.1581 23.0155 90.0894 cv
22.9906 90.1503 22.9679 90.2123 22.9474 90.2751 cv
22.8966 90.4645 li
22.8852 90.475 22.8738 90.4857 22.8626 90.4967 cv
22.8556 90.4966 22.8486 90.4965 22.8416 90.4965 cv
22.6252 90.4965 22.4134 90.5335 22.2095 90.6015 cv
.203922 .545098 .207843 rgb
f
21.1617 92.5914 mo
21.0571 92.5739 20.9509 92.5648 20.8443 92.5648 cv
20.7731 92.5648 20.7016 92.5689 20.6303 92.5772 cv
20.8776 91.9997 21.1815 91.4541 21.535 90.9563 cv
21.5984 90.9097 21.6634 90.8661 21.7297 90.8258 cv
21.8829 90.7327 22.0435 90.6568 22.2095 90.6015 cv
22.4134 90.5335 22.6252 90.4965 22.8416 90.4965 cv
22.8486 90.4965 22.8556 90.4966 22.8626 90.4967 cv
22.7998 90.5579 22.7398 90.6277 22.6852 90.7101 cv
22.4405 91.0763 22.0802 91.6774 21.7823 92.3297 cv
21.5362 92.3449 21.3131 92.4293 21.1617 92.5914 cv
f
25.4625 110.553 mo
25.0149 110.452 24.5704 110.336 24.1295 110.204 cv
24.1172 110.196 24.1048 110.187 24.0924 110.179 cv
23.6119 109.85 23.1305 109.524 22.6607 109.192 cv
22.4816 109.115 22.297 109.01 22.1217 108.875 cv
21.6495 108.51 21.2281 108.151 20.8473 107.794 cv
19.3048 106.453 18.2447 105.048 17.6622 103.805 cv
17.463 103.574 17.2643 103.344 17.0651 103.113 cv
16.7535 102.859 16.5436 102.575 16.6139 102.359 cv
16.7198 102.033 16.8257 101.708 16.9312 101.382 cv
16.9367 101.388 16.9424 101.394 16.9479 101.4 cv
16.9437 101.39 16.9395 101.379 16.9353 101.369 cv
16.9442 101.342 16.9531 101.314 16.962 101.287 cv
16.7648 99.3175 17.3834 97.5968 18.0114 96.027 cv
18.1393 95.4777 18.2672 94.9284 18.3946 94.3786 cv
18.3893 94.3214 li
18.4493 93.6374 18.6036 93.007 18.8487 92.4264 cv
18.9108 92.1588 li
19.0445 92.0143 li
19.3248 91.4821 19.6896 90.9953 20.1564 90.5597 cv
20.2393 90.482 20.3647 90.4485 20.5135 90.4485 cv
20.6003 90.4485 20.6951 90.4599 20.7941 90.4806 cv
20.2399 90.1769 19.7462 89.7086 19.861 89.3859 cv
20.0328 88.9025 20.234 88.3991 20.4874 87.9113 cv
20.9064 86.8917 21.4108 85.8854 22.5314 85.3678 cv
23.2593 85.0321 24.2271 84.8916 25.3348 84.8916 cv
26.312 84.8916 27.3981 85.001 28.5236 85.1823 cv
30.1795 85.449 32.2512 85.7556 34.2689 86.3933 cv
34.7491 86.7683 35.2214 87.1711 35.6824 87.5988 cv
35.6668 87.5985 35.6512 87.5984 35.6357 87.5984 cv
35.4888 87.5984 35.3437 87.6106 35.1995 87.631 cv
35.1564 87.6179 35.113 87.6047 35.0694 87.5914 cv
35.0404 87.5817 35.0107 87.5722 34.9805 87.5629 cv
34.9528 87.5514 li
34.5069 87.3732 34.1232 87.2623 33.7823 87.1959 cv
32.5164 86.8107 31.2054 86.448 30.3132 86.448 cv
30.1706 86.448 30.0389 86.4573 29.9195 86.4772 cv
29.5538 86.5378 29.275 86.692 29.0416 86.8898 cv
28.9219 86.8625 28.8025 86.85 28.6839 86.85 cv
28.1213 86.85 27.5757 87.1306 27.0797 87.4415 cv
26.7203 87.6665 26.3734 87.884 26.0994 88.1565 cv
24.8148 88.2621 23.663 88.8094 22.7096 89.6458 cv
22.5517 89.7844 22.3992 89.9308 22.2525 90.0844 cv
21.9953 90.3539 21.7553 90.646 21.535 90.9563 cv
21.1815 91.4541 20.8776 91.9997 20.6303 92.5772 cv
20.2913 92.6165 19.9554 92.7514 19.6573 93.0011 cv
18.6246 93.8649 18.8097 95.4528 19.7511 96.2287 cv
19.8351 96.3058 li
19.7936 96.402 19.7545 96.5001 19.7491 96.6105 cv
19.7091 97.3317 19.7242 98.1461 20.1261 98.7687 cv
19.6564 99.0202 19.2721 99.4293 19.0738 100.075 cv
18.7511 101.123 19.1876 101.955 19.9278 102.426 cv
19.9005 102.47 li
19.8239 102.593 19.878 102.747 20.0035 102.904 cv
19.9234 103.241 19.8736 103.593 19.8551 103.965 cv
19.8375 104.331 20.7184 104.952 21.3405 105.09 cv
21.3683 105.221 li
21.4196 105.357 21.5108 105.452 21.5904 105.558 cv
21.609 105.66 21.6676 105.741 21.7042 105.834 cv
21.7237 106.046 21.8087 106.249 21.9371 106.439 cv
22.0602 106.835 22.2618 107.19 22.569 107.431 cv
22.5567 107.537 22.5397 107.642 22.5631 107.754 cv
22.7329 108.584 23.4939 109.222 24.2816 109.222 cv
24.5333 109.222 24.7877 109.156 25.0265 109.012 cv
25.0362 109.013 li
24.9034 109.464 25.0011 109.969 25.3087 110.324 cv
25.3546 110.405 25.4058 110.481 25.4625 110.553 cv
.164706 .537255 .203922 rgb
f
33.4855 112.378 mo
33.414 112.378 33.3425 112.376 33.271 112.372 cv
33.6841 111.895 33.9758 111.357 34.1856 110.91 cv
34.3894 111.08 34.6494 111.188 34.9532 111.188 cv
35.0496 111.188 35.1502 111.177 35.255 111.154 cv
35.8201 111.03 36.4603 110.892 37.1395 110.729 cv
36.1278 111.687 34.8156 112.378 33.4855 112.378 cv
.462745 .729412 .372549 rgb
f
34.9532 111.188 mo
34.6494 111.188 34.3894 111.08 34.1856 110.91 cv
34.2671 110.737 34.3361 110.577 34.3951 110.44 cv
34.3959 110.438 34.3966 110.437 34.3973 110.435 cv
35.7127 110.188 37.0886 109.836 38.3061 109.298 cv
38.1712 109.514 38.0296 109.719 37.8815 109.91 cv
37.6593 110.197 37.4101 110.473 37.1395 110.729 cv
36.4603 110.892 35.8201 111.03 35.255 111.154 cv
35.1502 111.177 35.0496 111.188 34.9532 111.188 cv
.407843 .686274 .329412 rgb
f
41.8696 93.3618 mo
41.8242 93.3292 41.7779 93.2972 41.7311 93.2661 cv
41.7261 93.2287 41.721 93.1912 41.7157 93.1539 cv
41.7685 93.2223 41.8198 93.2915 41.8696 93.3618 cv
.501961 .811765 .423529 rgb
f
42.2398 98.5911 mo
42.145 98.1522 42.0312 97.7146 41.9002 97.2806 cv
42.3314 96.921 42.5731 96.3131 42.2628 95.671 cv
42.1276 95.3912 41.9878 95.1104 41.8432 94.83 cv
41.8328 94.3081 41.799 93.7814 41.7311 93.2661 cv
41.7779 93.2972 41.8242 93.3292 41.8696 93.3618 cv
42.2632 93.9174 42.5586 94.5354 42.7188 95.277 cv
42.8189 95.4786 42.902 95.6935 42.9356 95.9464 cv
43.0538 96.8227 42.7274 97.7455 42.2398 98.5911 cv
.407843 .686274 .329412 rgb
f
41.9002 97.2806 mo
41.8741 97.1941 41.8474 97.1082 41.8199 97.0219 cv
41.8879 96.4809 41.902 95.9168 41.8463 95.3233 cv
41.8474 95.1599 41.8465 94.995 41.8432 94.83 cv
41.9878 95.1104 42.1276 95.3912 42.2628 95.671 cv
42.5731 96.3131 42.3314 96.921 41.9002 97.2806 cv
f
34.3973 110.435 mo
34.6041 109.953 34.769 109.447 34.9173 108.931 cv
35.9705 108.38 36.9004 107.572 37.6026 106.517 cv
37.7893 106.253 37.8553 106.135 37.8232 106.135 cv
37.8189 106.135 37.813 106.137 37.8053 106.141 cv
38.0914 105.918 38.3741 105.691 38.6193 105.421 cv
39.2721 104.774 39.7501 104.186 40.1798 103.367 cv
41.0557 101.701 41.5255 99.5455 41.7188 97.6353 cv
41.7598 97.4341 41.7938 97.2296 41.8199 97.0219 cv
41.8474 97.1082 41.8741 97.1941 41.9002 97.2806 cv
42.0312 97.7146 42.145 98.1522 42.2398 98.5911 cv
42.1851 98.686 42.1283 98.78 42.0699 98.8727 cv
42.0646 99.0216 42.0445 99.1754 41.9742 99.3385 cv
41.8727 99.5705 41.7604 99.797 41.6549 100.027 cv
41.546 100.766 41.3126 101.486 41.0314 102.037 cv
40.8409 102.408 40.5982 102.741 40.3365 103.059 cv
40.0398 105.13 39.3808 107.576 38.3061 109.298 cv
37.0886 109.836 35.7127 110.188 34.3973 110.435 cv
.164706 .533333 .2 rgb
f
31.6601 112.874 mo
31.4213 112.874 31.1863 112.816 30.9713 112.714 cv
30.937 112.824 30.8268 112.871 30.6727 112.871 cv
30.3755 112.871 29.9154 112.696 29.5231 112.46 cv
29.0787 112.401 28.4646 112.131 28.1269 111.766 cv
28.9886 111.966 29.8482 112.085 30.6761 112.085 cv
31.6521 112.085 32.5839 111.92 33.4254 111.528 cv
33.7748 111.365 33.824 110.857 33.5975 110.574 cv
33.6888 110.56 33.7802 110.545 33.8725 110.529 cv
33.9529 110.673 34.0583 110.804 34.1856 110.91 cv
33.9758 111.357 33.6841 111.895 33.271 112.372 cv
33.1641 112.366 33.0571 112.355 32.9503 112.339 cv
32.733 112.489 32.5099 112.625 32.2823 112.734 cv
32.0791 112.83 31.8681 112.874 31.6601 112.874 cv
.4 .756863 .34902 rgb
f
30.6761 112.085 mo
29.8482 112.085 28.9886 111.966 28.1269 111.766 cv
28.0869 111.723 28.0507 111.678 28.0191 111.632 cv
27.8204 111.372 li
27.7057 111.385 li
27.4928 111.377 27.2936 111.312 27.0997 111.231 cv
27.0047 111.258 26.9068 111.278 26.8017 111.278 cv
26.7356 111.278 26.6667 111.27 26.5939 111.252 cv
26.0922 111.126 25.7206 110.883 25.4625 110.553 cv
26.7446 110.843 28.0527 111.003 29.3777 111.003 cv
30.0155 111.003 30.6572 110.966 31.3019 110.888 cv
31.9841 110.806 32.769 110.709 33.5975 110.574 cv
33.824 110.857 33.7748 111.365 33.4254 111.528 cv
32.5839 111.92 31.6521 112.085 30.6761 112.085 cv
.356863 .72549 .317647 rgb
f
34.1856 110.91 mo
34.0583 110.804 33.9529 110.673 33.8725 110.529 cv
34.046 110.499 34.2212 110.468 34.3973 110.435 cv
34.3966 110.437 34.3959 110.438 34.3951 110.44 cv
34.3361 110.577 34.2671 110.737 34.1856 110.91 cv
f
23.5339 98.218 mo
23.3555 97.9797 23.2071 97.7317 23.1205 97.4655 cv
23.1293 97.455 23.138 97.4444 23.1466 97.4337 cv
23.2325 97.3273 23.3272 97.2042 23.3971 97.0832 cv
23.5498 96.7162 23.6268 96.5327 23.6282 96.5327 cv
23.629 96.5327 23.6063 96.5896 23.5602 96.7032 cv
23.672 96.5148 li
24.1516 95.8706 24.5808 95.176 25.0058 94.4828 cv
25.0506 94.4809 25.0953 94.4775 25.1397 94.4727 cv
24.6764 95.3862 24.3097 96.3073 24.0763 97.1832 cv
23.8927 97.4518 23.732 97.7423 23.5816 98.0846 cv
23.5657 98.129 23.5498 98.1735 23.5339 98.218 cv
26.7868 91.8029 mo
26.7743 91.6806 26.7537 91.5694 26.7203 91.484 cv
26.7218 91.453 26.7233 91.4219 26.7247 91.3908 cv
26.8089 91.4156 26.9282 91.4279 27.0653 91.4328 cv
26.9713 91.5546 26.8783 91.6783 26.7868 91.8029 cv
.215686 .619608 .231373 rgb
f
25.0058 94.4828 mo
25.2453 94.092 25.4836 93.7015 25.7286 93.3209 cv
26.3868 92.299 25.9381 90.8371 24.9215 90.2423 cv
24.5695 90.0364 24.1905 89.9407 23.817 89.9407 cv
23.5427 89.9407 23.2713 89.9923 23.0155 90.0894 cv
23.252 89.5106 23.6866 89.032 24.3595 89.0099 cv
24.5387 89.0236 li
24.9244 88.6705 25.4108 88.4333 25.899 88.3844 cv
25.96 88.3039 26.0272 88.2283 26.0994 88.1565 cv
26.2495 88.1442 26.4018 88.1379 26.5554 88.1379 cv
27.3447 88.1379 28.1782 88.3035 29.0431 88.6681 cv
29.2282 88.7461 29.4047 88.7936 29.572 88.8149 cv
28.7 89.5211 27.8422 90.4258 27.0653 91.4328 cv
26.9282 91.4279 26.8089 91.4156 26.7247 91.3908 cv
26.7233 91.4219 26.7218 91.453 26.7203 91.484 cv
26.7537 91.5694 26.7743 91.6806 26.7868 91.8029 cv
26.1654 92.6495 25.6041 93.5572 25.1397 94.4727 cv
25.0953 94.4775 25.0506 94.4809 25.0058 94.4828 cv
.196078 .607843 .219608 rgb
f
23.1205 97.4655 mo
23.0821 97.3475 23.0559 97.226 23.0446 97.1002 cv
22.9332 95.8669 23.9718 94.6906 24.6686 93.7804 cv
25.3898 92.839 24.8067 91.3498 23.8863 90.7985 cv
23.5443 90.5935 23.1983 90.5004 22.8626 90.4967 cv
22.8738 90.4857 22.8852 90.475 22.8966 90.4645 cv
22.9474 90.2751 li
22.9679 90.2123 22.9906 90.1503 23.0155 90.0894 cv
23.2713 89.9923 23.5427 89.9407 23.817 89.9407 cv
24.1905 89.9407 24.5695 90.0364 24.9215 90.2423 cv
25.9381 90.8371 26.3868 92.299 25.7286 93.3209 cv
25.4836 93.7015 25.2453 94.092 25.0058 94.4828 cv
24.5808 95.176 24.1516 95.8706 23.672 96.5148 cv
23.5602 96.7032 li
23.6063 96.5896 23.629 96.5327 23.6282 96.5327 cv
23.6268 96.5327 23.5498 96.7162 23.3971 97.0832 cv
23.3272 97.2042 23.2325 97.3273 23.1466 97.4337 cv
23.138 97.4444 23.1293 97.455 23.1205 97.4655 cv
f
21.1655 100.889 mo
20.4638 99.5674 20.0107 98.1889 19.9078 96.9679 cv
19.7807 95.4611 20.0504 93.9311 20.6303 92.5772 cv
20.7016 92.5689 20.7731 92.5648 20.8443 92.5648 cv
20.9509 92.5648 21.0571 92.5739 21.1617 92.5914 cv
21.3131 92.4293 21.5362 92.3449 21.7823 92.3297 cv
22.0802 91.6774 22.4405 91.0763 22.6852 90.7101 cv
22.7398 90.6277 22.7998 90.5579 22.8626 90.4967 cv
23.1983 90.5004 23.5443 90.5935 23.8863 90.7985 cv
24.8067 91.3498 25.3898 92.839 24.6686 93.7804 cv
23.9718 94.6906 22.9332 95.8669 23.0446 97.1002 cv
23.0559 97.226 23.0821 97.3475 23.1205 97.4655 cv
23.2071 97.7317 23.3555 97.9797 23.5339 98.218 cv
23.4626 98.4183 23.3924 98.619 23.3231 98.8202 cv
23.1891 98.487 23.0717 98.1462 22.9699 97.799 cv
22.7692 97.1154 22.2234 96.819 21.6704 96.819 cv
20.8333 96.819 19.9796 97.4978 20.2804 98.5402 cv
20.4812 99.236 20.7763 100.063 21.166 100.888 cv
21.1658 100.889 21.1657 100.889 21.1655 100.889 cv
f
21.166 100.888 mo
20.7763 100.063 20.4812 99.236 20.2804 98.5402 cv
19.9796 97.4978 20.8333 96.819 21.6704 96.819 cv
22.2234 96.819 22.7692 97.1154 22.9699 97.799 cv
23.0717 98.1462 23.1891 98.487 23.3231 98.8202 cv
23.3037 98.8762 23.2845 98.9323 23.2653 98.9884 cv
23.2311 99.0109 li
22.6614 99.3599 22.3466 99.9305 22.1923 100.55 cv
22.1339 100.541 22.0756 100.536 22.0179 100.536 cv
21.6944 100.536 21.3885 100.674 21.166 100.888 cv
f
22.1574 102.485 mo
21.7888 101.972 21.456 101.436 21.1655 100.889 cv
21.1657 100.889 21.1658 100.889 21.166 100.888 cv
21.3885 100.674 21.6944 100.536 22.0179 100.536 cv
22.0756 100.536 22.1339 100.541 22.1923 100.55 cv
22.085 100.98 22.0555 101.435 22.0719 101.854 cv
22.0805 102.073 22.1098 102.283 22.1574 102.485 cv
f
29.3777 111.003 mo
28.0527 111.003 26.7446 110.843 25.4625 110.553 cv
25.4058 110.481 25.3546 110.405 25.3087 110.324 cv
25.0011 109.969 24.9034 109.464 25.0362 109.013 cv
25.0265 109.012 li
24.7877 109.156 24.5333 109.222 24.2816 109.222 cv
23.4939 109.222 22.7329 108.584 22.5631 107.754 cv
22.5397 107.642 22.5567 107.537 22.569 107.431 cv
22.2618 107.19 22.0602 106.835 21.9371 106.439 cv
21.8087 106.249 21.7237 106.046 21.7042 105.834 cv
21.6676 105.741 21.609 105.66 21.5904 105.558 cv
21.5108 105.452 21.4196 105.357 21.3683 105.221 cv
21.3405 105.09 li
20.7184 104.952 19.8375 104.331 19.8551 103.965 cv
19.8736 103.593 19.9234 103.241 20.0035 102.904 cv
19.878 102.747 19.8239 102.593 19.9005 102.47 cv
19.9278 102.426 li
19.1876 101.955 18.7511 101.123 19.0738 100.075 cv
19.2721 99.4293 19.6564 99.0202 20.1261 98.7687 cv
19.7242 98.1461 19.7091 97.3317 19.7491 96.6105 cv
19.7545 96.5001 19.7936 96.402 19.8351 96.3058 cv
19.7511 96.2287 li
18.8097 95.4528 18.6246 93.8649 19.6573 93.0011 cv
19.9554 92.7514 20.2913 92.6165 20.6303 92.5772 cv
20.0504 93.9311 19.7807 95.4611 19.9078 96.9679 cv
20.0107 98.1889 20.4638 99.5674 21.1655 100.889 cv
21.456 101.436 21.7888 101.972 22.1574 102.485 cv
22.4602 103.769 23.5007 104.715 24.6163 105.379 cv
24.9352 106.406 25.5045 107.327 26.3976 108.047 cv
27.5841 109.002 28.9576 109.549 30.3502 109.729 cv
30.6367 109.893 30.9229 109.977 31.1363 109.977 cv
31.1746 109.977 31.2106 109.974 31.2437 109.969 cv
31.3222 109.987 31.3955 109.998 31.4601 109.998 cv
31.5463 109.998 31.617 109.979 31.6642 109.937 cv
31.8053 109.783 li
32.8919 109.72 33.9559 109.433 34.9173 108.931 cv
34.769 109.447 34.6041 109.953 34.3973 110.435 cv
34.2212 110.468 34.046 110.499 33.8725 110.529 cv
33.7802 110.545 33.6888 110.56 33.5975 110.574 cv
32.769 110.709 31.9841 110.806 31.3019 110.888 cv
30.6572 110.966 30.0155 111.003 29.3777 111.003 cv
29.572 88.8149 mo
29.4047 88.7936 29.2282 88.7461 29.0431 88.6681 cv
28.1782 88.3035 27.3447 88.1379 26.5554 88.1379 cv
26.4018 88.1379 26.2495 88.1442 26.0994 88.1565 cv
26.3734 87.884 26.7203 87.6665 27.0797 87.4415 cv
27.5757 87.1306 28.1213 86.85 28.6839 86.85 cv
28.8025 86.85 28.9219 86.8625 29.0416 86.8898 cv
29.275 86.692 29.5538 86.5378 29.9195 86.4772 cv
30.0389 86.4573 30.1706 86.448 30.3132 86.448 cv
31.2054 86.448 32.5164 86.8107 33.7823 87.1959 cv
34.1232 87.2623 34.5069 87.3732 34.9528 87.5514 cv
34.9805 87.5629 li
34.2231 87.3306 33.1042 87.2371 32.7473 87.2371 cv
32.7084 87.2371 32.6786 87.2382 32.6593 87.2404 cv
31.9464 87.321 31.253 87.6881 30.6573 88.047 cv
30.2963 88.2644 29.9329 88.5226 29.572 88.8149 cv
.164706 .6 .215686 rgb
f
41.8199 97.0219 mo
41.8071 96.9817 41.7942 96.9417 41.7811 96.9016 cv
41.8168 96.3997 41.8427 95.8674 41.8463 95.3233 cv
41.902 95.9168 41.8879 96.4809 41.8199 97.0219 cv
.356863 .72549 .317647 rgb
f
41.7188 97.6353 mo
41.7361 97.4638 41.7513 97.2942 41.7643 97.1271 cv
41.7701 97.0527 41.7757 96.9775 41.7811 96.9016 cv
41.7942 96.9417 41.8071 96.9817 41.8199 97.0219 cv
41.7938 97.2296 41.7598 97.4341 41.7188 97.6353 cv
35.1857 87.6329 mo
35.1483 87.6187 35.1094 87.6048 35.0694 87.5914 cv
35.113 87.6047 35.1564 87.6179 35.1995 87.631 cv
35.1949 87.6316 35.1903 87.6323 35.1857 87.6329 cv
.164706 .6 .215686 rgb
f
41.7157 93.1539 mo
41.5617 92.9545 41.395 92.7626 41.2174 92.575 cv
41.1431 92.4685 41.0674 92.3618 40.9914 92.2565 cv
40.8672 91.9817 40.7282 91.7005 40.5738 91.4132 cv
40.0594 90.4557 39.4274 89.3693 38.2599 88.3999 cv
38.7125 88.5186 39.1331 88.7155 39.5133 89.0074 cv
40.1676 89.4601 40.6954 90.1344 41.047 90.8424 cv
41.3901 91.5331 41.5982 92.3268 41.7157 93.1539 cv
.498039 .811765 .423529 rgb
f
41.2174 92.575 mo
41.1662 92.5209 41.1141 92.4672 41.0612 92.4138 cv
41.0384 92.3614 41.0153 92.3093 40.9914 92.2565 cv
41.0674 92.3618 41.1431 92.4685 41.2174 92.575 cv
.458824 .733333 .368627 rgb
f
40.9914 92.2565 mo
39.7924 90.5962 38.3729 89.0895 36.7647 87.7707 cv
37.1831 87.8978 37.5639 88.0956 37.9293 88.3278 cv
38.0413 88.3475 38.1515 88.3714 38.2599 88.3999 cv
39.4274 89.3693 40.0594 90.4557 40.5738 91.4132 cv
40.7282 91.7005 40.8672 91.9817 40.9914 92.2565 cv
.427451 .823529 .392157 rgb
f
41.0612 92.4138 mo
40.8389 92.1894 40.6014 91.9702 40.3521 91.7506 cv
40.2296 91.6428 40.0999 91.5974 39.9749 91.5974 cv
39.9438 91.5974 39.9131 91.6002 39.8828 91.6055 cv
39.1222 90.5643 38.2587 89.6079 37.2681 88.8173 cv
37.1087 88.4781 36.5579 88.0234 35.9481 87.8492 cv
35.8601 87.765 35.7713 87.6813 35.6824 87.5988 cv
35.8004 87.6009 35.9195 87.6111 36.0402 87.6315 cv
36.2953 87.6527 36.5357 87.7011 36.7647 87.7707 cv
38.3729 89.0895 39.7924 90.5962 40.9914 92.2565 cv
41.0153 92.3093 41.0384 92.3614 41.0612 92.4138 cv
.4 .760784 .34902 rgb
f
39.6266 91.7155 mo
39.1481 90.8004 38.4215 89.7814 37.2989 88.8971 cv
37.2913 88.8714 37.281 88.8447 37.2681 88.8173 cv
38.2587 89.6079 39.1222 90.5643 39.8828 91.6055 cv
39.7915 91.6215 39.7045 91.6606 39.6266 91.7155 cv
.356863 .72549 .317647 rgb
f
35.9481 87.8492 mo
35.9423 87.8476 35.9365 87.846 35.9308 87.8444 cv
35.7014 87.7812 35.4555 87.7085 35.1995 87.631 cv
35.3437 87.6106 35.4888 87.5984 35.6357 87.5984 cv
35.6512 87.5984 35.6668 87.5985 35.6824 87.5988 cv
35.7713 87.6813 35.8601 87.765 35.9481 87.8492 cv
35.0694 87.5914 mo
35.0439 87.5836 35.0184 87.5758 34.9928 87.568 cv
34.9805 87.5629 li
35.0107 87.5722 35.0404 87.5817 35.0694 87.5914 cv
.164706 .603922 .219608 rgb
f
34.9173 108.931 mo
34.9339 108.873 34.9502 108.815 34.9664 108.757 cv
35.3238 108.351 35.6573 107.932 35.9615 107.495 cv
37.6237 105.425 39.2233 103.317 40.4318 100.985 cv
40.9812 99.9254 41.4744 98.8342 41.7188 97.6353 cv
41.5255 99.5455 41.0557 101.701 40.1798 103.367 cv
39.7501 104.186 39.2721 104.774 38.6193 105.421 cv
38.3741 105.691 38.0914 105.918 37.8053 106.141 cv
37.813 106.137 37.8189 106.135 37.8232 106.135 cv
37.8553 106.135 37.7893 106.253 37.6026 106.517 cv
36.9004 107.572 35.9705 108.38 34.9173 108.931 cv
.164706 .603922 .215686 rgb
f
41.7311 93.2661 mo
41.7026 93.2473 41.6739 93.2287 41.645 93.2103 cv
41.506 92.9962 41.3634 92.7844 41.2174 92.575 cv
41.395 92.7626 41.5617 92.9545 41.7157 93.1539 cv
41.721 93.1912 41.7261 93.2287 41.7311 93.2661 cv
.431373 .823529 .392157 rgb
f
41.645 93.2103 mo
41.552 93.1515 41.4564 93.0956 41.358 93.0426 cv
41.3399 93.0329 41.3218 93.024 41.3039 93.016 cv
41.2308 92.8185 41.15 92.6179 41.0612 92.4138 cv
41.1141 92.4672 41.1662 92.5209 41.2174 92.575 cv
41.3634 92.7844 41.506 92.9962 41.645 93.2103 cv
.4 .756863 .34902 rgb
f
41.8432 94.83 mo
41.8147 94.7747 41.786 94.7195 41.7571 94.6642 cv
41.6644 94.1393 41.5166 93.591 41.3039 93.016 cv
41.3218 93.024 41.3399 93.0329 41.358 93.0426 cv
41.4564 93.0956 41.552 93.1515 41.645 93.2103 cv
41.6739 93.2287 41.7026 93.2473 41.7311 93.2661 cv
41.799 93.7814 41.8328 94.3081 41.8432 94.83 cv
.356863 .721569 .317647 rgb
f
41.8463 95.3233 mo
41.8261 95.1076 41.7966 94.888 41.7571 94.6642 cv
41.786 94.7195 41.8147 94.7747 41.8432 94.83 cv
41.8465 94.995 41.8474 95.1599 41.8463 95.3233 cv
f
37.981 102.937 mo
37.9569 102.896 37.9265 102.863 37.8919 102.837 cv
38.1891 101.774 37.979 100.65 37.463 99.7057 cv
37.629 99.5162 37.7784 99.3092 37.8893 99.0704 cv
37.9042 99.0383 37.9187 99.0062 37.933 98.9741 cv
38.04 99.4939 38.1212 100.024 38.1754 100.564 cv
38.2661 101.467 38.1914 102.254 37.981 102.937 cv
.235294 .690196 .258824 rgb
f
35.1604 105.956 mo
35.3238 105.796 35.4755 105.626 35.6198 105.448 cv
36.2272 105.186 36.774 104.787 37.1471 104.259 cv
37.2155 104.161 37.2843 104.064 37.3526 103.966 cv
37.6068 103.606 37.7832 103.226 37.8919 102.837 cv
37.9265 102.863 37.9569 102.896 37.981 102.937 cv
37.5418 104.363 36.511 105.336 35.1604 105.956 cv
.207843 .670588 .239216 rgb
f
27.7706 94.6554 mo
27.7814 94.5407 27.8082 94.4357 27.8107 94.3151 cv
27.8248 93.6794 27.5758 93.0924 27.1813 92.6256 cv
27.2682 92.652 li
27.6329 93.1105 27.9977 93.4694 28.3844 93.7873 cv
28.1637 94.0812 27.9581 94.3737 27.7706 94.6554 cv
.235294 .690196 .258824 rgb
f
25.0068 101.578 mo
24.9892 101.557 24.9716 101.537 24.9541 101.516 cv
25.1745 101.009 25.1841 100.394 24.9215 99.921 cv
24.5937 99.3311 23.973 98.8043 23.5339 98.218 cv
23.5498 98.1735 23.5657 98.129 23.5816 98.0846 cv
23.732 97.7423 23.8927 97.4518 24.0763 97.1832 cv
24.3097 96.3073 24.6764 95.3862 25.1397 94.4727 cv
26.0354 94.3759 26.8235 93.7046 26.8053 92.6549 cv
26.8015 92.4382 26.8162 92.0901 26.7868 91.8029 cv
26.8783 91.6783 26.9713 91.5546 27.0653 91.4328 cv
27.117 91.4346 27.1712 91.4354 27.227 91.4354 cv
27.3882 91.4354 27.5628 91.4289 27.7284 91.4224 cv
27.894 91.4158 28.0507 91.4093 28.1761 91.4093 cv
28.2601 91.4093 28.3302 91.4122 28.3795 91.4201 cv
28.6902 91.4689 28.993 91.5492 29.2905 91.6469 cv
29.5834 91.7712 29.8866 91.8834 30.1959 91.9894 cv
30.1959 91.9894 li
30.1959 91.9894 li
30.3013 92.0255 30.4046 92.0509 30.5054 92.0665 cv
30.5413 92.0761 30.5773 92.0856 30.6133 92.0948 cv
29.8783 92.6097 29.3004 93.1815 28.8673 93.8297 cv
27.6295 95.0114 27.0504 96.4196 27.1969 97.8795 cv
27.0973 98.1706 27.0279 98.464 26.9811 98.7594 cv
26.5182 99.0372 26.0968 99.4132 25.7384 99.901 cv
25.3624 100.413 25.122 100.986 25.0068 101.578 cv
27.1813 92.6256 mo
27.5758 93.0924 27.8248 93.6794 27.8107 94.3151 cv
27.8082 94.4357 27.7814 94.5407 27.7706 94.6554 cv
27.9581 94.3737 28.1637 94.0812 28.3844 93.7873 cv
27.9977 93.4694 27.6329 93.1105 27.2682 92.652 cv
27.1813 92.6256 li
.207843 .670588 .239216 rgb
f
25.1397 94.4727 mo
25.6041 93.5572 26.1654 92.6495 26.7868 91.8029 cv
26.8162 92.0901 26.8015 92.4382 26.8053 92.6549 cv
26.8235 93.7046 26.0354 94.3759 25.1397 94.4727 cv
30.6133 92.0948 mo
30.5773 92.0856 30.5413 92.0761 30.5054 92.0665 cv
30.4046 92.0509 30.3013 92.0255 30.1959 91.9894 cv
30.1959 91.9894 li
30.1959 91.9894 li
29.8866 91.8834 29.5834 91.7712 29.2905 91.6469 cv
28.993 91.5492 28.6902 91.4689 28.3795 91.4201 cv
28.3302 91.4122 28.2601 91.4093 28.1761 91.4093 cv
28.0507 91.4093 27.894 91.4158 27.7284 91.4224 cv
27.5628 91.4289 27.3882 91.4354 27.227 91.4354 cv
27.1712 91.4354 27.117 91.4346 27.0653 91.4328 cv
27.8422 90.4258 28.7 89.5211 29.572 88.8149 cv
29.6428 88.824 29.712 88.8283 29.7795 88.8283 cv
29.9189 88.8283 30.0512 88.8097 30.1759 88.7755 cv
30.3639 88.9708 30.5553 89.1583 30.7311 89.3781 cv
31.118 89.862 31.5751 90.0635 32.0239 90.0635 cv
32.1629 90.0635 32.301 90.0442 32.4361 90.0079 cv
32.7266 90.2462 33.0082 90.4932 33.2803 90.7484 cv
32.5373 90.9784 31.81 91.3445 31.1402 91.7516 cv
30.9563 91.8632 30.7808 91.9775 30.6133 92.0948 cv
.192157 .662745 .231373 rgb
f
41.3039 93.016 mo
41.209 92.9736 41.1157 92.9543 41.0273 92.9543 cv
40.9514 92.9543 40.8791 92.9685 40.8121 92.9945 cv
40.5203 92.5202 40.211 92.0548 39.8828 91.6055 cv
39.9131 91.6002 39.9438 91.5974 39.9749 91.5974 cv
40.0999 91.5974 40.2296 91.6428 40.3521 91.7506 cv
40.6014 91.9702 40.8389 92.1894 41.0612 92.4138 cv
41.15 92.6179 41.2308 92.8185 41.3039 93.016 cv
37.2681 88.8173 mo
37.143 88.7175 37.016 88.6204 36.8868 88.526 cv
36.751 88.4268 36.6063 88.3728 36.4609 88.3559 cv
36.2919 88.1837 36.1207 88.0146 35.9481 87.8492 cv
36.5579 88.0234 37.1087 88.4781 37.2681 88.8173 cv
.352941 .780392 .333333 rgb
f
41.7571 94.6642 mo
41.463 94.1019 41.1491 93.5421 40.8121 92.9945 cv
40.8791 92.9685 40.9514 92.9543 41.0273 92.9543 cv
41.1157 92.9543 41.209 92.9736 41.3039 93.016 cv
41.5166 93.591 41.6644 94.1393 41.7571 94.6642 cv
.317647 .752941 .305882 rgb
f
41.7811 96.9016 mo
40.7442 93.7246 38.7891 90.728 36.4609 88.3559 cv
36.6063 88.3728 36.751 88.4268 36.8868 88.526 cv
37.016 88.6204 37.143 88.7175 37.2681 88.8173 cv
37.281 88.8447 37.2913 88.8714 37.2989 88.8971 cv
38.4215 89.7814 39.1481 90.8004 39.6266 91.7155 cv
39.7045 91.6606 39.7915 91.6215 39.8828 91.6055 cv
40.211 92.0548 40.5203 92.5202 40.8121 92.9945 cv
41.1491 93.5421 41.463 94.1019 41.7571 94.6642 cv
41.7966 94.888 41.8261 95.1076 41.8463 95.3233 cv
41.8427 95.8674 41.8168 96.3997 41.7811 96.9016 cv
f
24.9541 101.516 mo
24.8138 101.351 24.676 101.183 24.546 101.01 cv
24.0382 100.332 23.6354 99.5969 23.3231 98.8202 cv
23.3924 98.619 23.4626 98.4183 23.5339 98.218 cv
23.973 98.8043 24.5937 99.3311 24.9215 99.921 cv
25.1841 100.394 25.1745 101.009 24.9541 101.516 cv
.192157 .662745 .231373 rgb
f
24.9268 102.473 mo
24.1695 101.99 23.4744 101.396 22.7916 100.829 cv
22.6 100.67 22.3949 100.581 22.1923 100.55 cv
22.3466 99.9305 22.6614 99.3599 23.2311 99.0109 cv
23.2653 98.9884 li
23.2845 98.9323 23.3037 98.8762 23.3231 98.8202 cv
23.6354 99.5969 24.0382 100.332 24.546 101.01 cv
24.676 101.183 24.8138 101.351 24.9541 101.516 cv
24.9716 101.537 24.9892 101.557 25.0068 101.578 cv
24.9495 101.873 24.9232 102.173 24.9268 102.473 cv
f
25.788 105.799 mo
24.4126 105.077 23.155 103.872 22.1574 102.485 cv
22.1098 102.283 22.0805 102.073 22.0719 101.854 cv
22.0555 101.435 22.085 100.98 22.1923 100.55 cv
22.3949 100.581 22.6 100.67 22.7916 100.829 cv
23.4744 101.396 24.1695 101.99 24.9268 102.473 cv
24.9353 103.183 25.1113 103.893 25.4381 104.536 cv
25.4957 104.988 25.6156 105.408 25.788 105.799 cv
f
31.4601 109.998 mo
31.3955 109.998 31.3222 109.987 31.2437 109.969 cv
31.2106 109.974 31.1746 109.977 31.1363 109.977 cv
30.9229 109.977 30.6367 109.893 30.3502 109.729 cv
28.9576 109.549 27.5841 109.002 26.3976 108.047 cv
25.5045 107.327 24.9352 106.406 24.6163 105.379 cv
23.5007 104.715 22.4602 103.769 22.1574 102.485 cv
23.155 103.872 24.4126 105.077 25.788 105.799 cv
26.3886 107.163 27.6275 108.186 29.0987 109.032 cv
29.5526 109.293 30.0428 109.409 30.5359 109.409 cv
32.1587 109.41 33.8154 108.146 34.3341 106.593 cv
34.4269 106.532 34.5255 106.487 34.6134 106.414 cv
34.811 106.275 34.9919 106.121 35.1604 105.956 cv
36.511 105.336 37.5418 104.363 37.981 102.937 cv
38.1914 102.254 38.2661 101.467 38.1754 100.564 cv
38.1212 100.024 38.04 99.4939 37.933 98.9741 cv
38.1291 98.5319 38.2632 98.0909 38.3634 97.6398 cv
39.337 96.3468 39.3673 94.5983 38.8687 92.9938 cv
38.5148 91.8541 37.6773 91.2545 36.712 91.0275 cv
36.1072 90.653 35.4632 90.4979 34.8094 90.4979 cv
34.3013 90.4979 33.7873 90.5915 33.2803 90.7484 cv
33.0082 90.4932 32.7266 90.2462 32.4361 90.0079 cv
32.301 90.0442 32.1629 90.0635 32.0239 90.0635 cv
31.5751 90.0635 31.118 89.862 30.7311 89.3781 cv
30.5553 89.1583 30.3639 88.9708 30.1759 88.7755 cv
30.0512 88.8097 29.9189 88.8283 29.7795 88.8283 cv
29.712 88.8283 29.6428 88.824 29.572 88.8149 cv
29.9329 88.5226 30.2963 88.2644 30.6573 88.047 cv
31.253 87.6881 31.9464 87.321 32.6593 87.2404 cv
32.6786 87.2382 32.7084 87.2371 32.7473 87.2371 cv
33.1042 87.2371 34.2231 87.3306 34.9805 87.5629 cv
34.9928 87.568 li
35.0184 87.5758 35.0439 87.5836 35.0694 87.5914 cv
35.1094 87.6048 35.1483 87.6187 35.1857 87.6329 cv
35.1903 87.6323 35.1949 87.6316 35.1995 87.631 cv
35.4555 87.7085 35.7014 87.7812 35.9308 87.8444 cv
35.9365 87.846 35.9423 87.8476 35.9481 87.8492 cv
36.1207 88.0146 36.2919 88.1837 36.4609 88.3559 cv
38.7891 90.728 40.7442 93.7246 41.7811 96.9016 cv
41.7757 96.9775 41.7701 97.0527 41.7643 97.1271 cv
41.7513 97.2942 41.7361 97.4638 41.7188 97.6353 cv
41.4744 98.8342 40.9812 99.9254 40.4318 100.985 cv
39.2233 103.317 37.6237 105.425 35.9615 107.495 cv
35.6573 107.932 35.3238 108.351 34.9664 108.757 cv
34.9502 108.815 34.9339 108.873 34.9173 108.931 cv
33.9559 109.433 32.8919 109.72 31.8053 109.783 cv
31.6642 109.937 li
31.617 109.979 31.5463 109.998 31.4601 109.998 cv
.164706 .654902 .227451 rgb
f
34.0841 104.534 mo
32.8399 104.048 31.275 104.125 30.006 103.928 cv
29.9532 103.903 li
29.7711 103.214 29.1329 102.68 28.4401 102.21 cv
28.4347 102.074 28.4088 101.935 28.339 101.795 cv
27.2877 99.6833 28.2399 97.6124 29.6788 95.9796 cv
29.9772 95.6408 30.298 95.3107 30.629 94.9923 cv
30.8986 95.0587 li
31.8795 95.9528 32.7496 96.9879 33.84 97.7472 cv
33.8561 97.8414 33.881 97.9333 33.8878 98.0304 cv
33.942 98.8012 34.5509 99.2723 35.177 99.2723 cv
35.5713 99.2723 35.9724 99.0856 36.2462 98.6691 cv
36.8319 97.778 37.0423 96.8766 36.9919 95.9899 cv
37.4022 96.9382 37.7192 97.9357 37.933 98.9741 cv
37.9187 99.0062 37.9042 99.0383 37.8893 99.0704 cv
37.7784 99.3092 37.629 99.5162 37.463 99.7057 cv
37.979 100.65 38.1891 101.774 37.8919 102.837 cv
37.8253 102.788 37.7428 102.765 37.6588 102.765 cv
37.587 102.765 37.5141 102.782 37.4488 102.812 cv
36.4903 103.252 35.6461 103.849 34.7325 104.371 cv
34.7047 104.396 li
34.5001 104.451 34.2941 104.503 34.0841 104.534 cv
.223529 .72549 .262745 rgb
f
32.8769 106.646 mo
32.8268 106.452 32.7285 106.272 32.5812 106.138 cv
31.8766 105.493 31.2311 105.448 30.3033 105.314 cv
30.1268 105.288 29.9573 105.257 29.7932 105.221 cv
29.738 104.754 29.4605 104.282 29.0397 104.065 cv
28.1253 103.593 27.1275 103.486 26.1828 103.122 cv
25.8722 102.556 25.4313 102.075 25.0068 101.578 cv
25.122 100.986 25.3624 100.413 25.7384 99.901 cv
26.0968 99.4132 26.5182 99.0372 26.9811 98.7594 cv
27.0279 98.464 27.0973 98.1706 27.1969 97.8795 cv
27.0504 96.4196 27.6295 95.0114 28.8673 93.8297 cv
29.3004 93.1815 29.8783 92.6097 30.6133 92.0948 cv
31.1651 92.2361 31.7383 92.3318 32.328 92.4071 cv
32.4491 92.4874 32.5663 92.576 32.6769 92.6789 cv
33.1979 93.1642 33.4254 93.7062 33.5587 94.401 cv
33.6359 94.8036 33.9652 94.9868 34.3061 94.9869 cv
34.7368 94.9869 35.1861 94.6946 35.17 94.1827 cv
35.1517 93.6031 35.046 93.0295 34.8758 92.4749 cv
35.732 93.5481 36.445 94.7256 36.9919 95.9899 cv
37.0423 96.8766 36.8319 97.778 36.2462 98.6691 cv
35.9724 99.0856 35.5713 99.2723 35.177 99.2723 cv
34.5509 99.2723 33.942 98.8012 33.8878 98.0304 cv
33.881 97.9333 33.8561 97.8414 33.84 97.7472 cv
32.7496 96.9879 31.8795 95.9528 30.8986 95.0587 cv
30.629 94.9923 li
30.298 95.3107 29.9772 95.6408 29.6788 95.9796 cv
28.2399 97.6124 27.2877 99.6833 28.339 101.795 cv
28.4088 101.935 28.4347 102.074 28.4401 102.21 cv
29.1329 102.68 29.7711 103.214 29.9532 103.903 cv
30.006 103.928 li
31.275 104.125 32.8399 104.048 34.0841 104.534 cv
34.2941 104.503 34.5001 104.451 34.7047 104.396 cv
34.7325 104.371 li
35.6461 103.849 36.4903 103.252 37.4488 102.812 cv
37.5141 102.782 37.587 102.765 37.6588 102.765 cv
37.7428 102.765 37.8253 102.788 37.8919 102.837 cv
37.7832 103.226 37.6068 103.606 37.3526 103.966 cv
37.2843 104.064 37.2155 104.161 37.1471 104.259 cv
36.774 104.787 36.2272 105.186 35.6198 105.448 cv
35.4755 105.626 35.3238 105.796 35.1604 105.956 cv
34.4708 106.273 33.6975 106.498 32.8769 106.646 cv
.2 .709804 .247059 rgb
f
34.3061 94.9869 mo
33.9652 94.9868 33.6359 94.8036 33.5587 94.401 cv
33.4254 93.7062 33.1979 93.1642 32.6769 92.6789 cv
32.5663 92.576 32.4491 92.4874 32.328 92.4071 cv
32.9037 92.4805 33.4951 92.5344 34.0977 92.5922 cv
34.1527 92.6027 34.2078 92.6079 34.2624 92.608 cv
34.2659 92.6084 34.2691 92.6087 34.2726 92.609 cv
34.2726 92.609 li
34.2726 92.609 li
34.2722 92.6087 34.2719 92.6083 34.2716 92.608 cv
34.4741 92.6064 34.6691 92.5355 34.8274 92.4145 cv
34.8436 92.4346 34.8597 92.4547 34.8758 92.4749 cv
35.046 93.0295 35.1517 93.6031 35.17 94.1827 cv
35.1861 94.6946 34.7368 94.9869 34.3061 94.9869 cv
.188235 .701961 .239216 rgb
f
34.2726 92.609 mo
34.2691 92.6087 34.2659 92.6084 34.2624 92.608 cv
34.2078 92.6079 34.1527 92.6027 34.0977 92.5922 cv
33.4951 92.5344 32.9037 92.4805 32.328 92.4071 cv
31.7383 92.3318 31.1651 92.2361 30.6133 92.0948 cv
30.7808 91.9775 30.9563 91.8632 31.1402 91.7516 cv
31.81 91.3445 32.5373 90.9784 33.2803 90.7484 cv
33.8368 91.2702 34.3536 91.8264 34.8274 92.4145 cv
34.6691 92.5355 34.4741 92.6064 34.2716 92.608 cv
34.2719 92.6083 34.2722 92.6087 34.2726 92.609 cv
f
26.1828 103.122 mo
26.103 103.092 26.0234 103.059 25.9444 103.024 cv
25.5909 102.868 25.2531 102.681 24.9268 102.473 cv
24.9232 102.173 24.9495 101.873 25.0068 101.578 cv
25.4313 102.075 25.8722 102.556 26.1828 103.122 cv
f
30.1983 106.868 mo
29.7573 106.868 29.3142 106.852 28.8727 106.822 cv
28.6114 106.65 28.3038 106.526 27.9371 106.485 cv
27.203 106.404 26.4805 106.163 25.788 105.799 cv
25.6156 105.408 25.4957 104.988 25.4381 104.536 cv
25.1113 103.893 24.9353 103.183 24.9268 102.473 cv
25.2531 102.681 25.5909 102.868 25.9444 103.024 cv
26.0234 103.059 26.103 103.092 26.1828 103.122 cv
27.1275 103.486 28.1253 103.593 29.0397 104.065 cv
29.4605 104.282 29.738 104.754 29.7932 105.221 cv
29.9573 105.257 30.1268 105.288 30.3033 105.314 cv
31.2311 105.448 31.8766 105.493 32.5812 106.138 cv
32.7285 106.272 32.8268 106.452 32.8769 106.646 cv
32.0219 106.799 31.1156 106.868 30.1983 106.868 cv
f
30.5359 109.409 mo
30.0428 109.409 29.5526 109.293 29.0987 109.032 cv
27.6275 108.186 26.3886 107.163 25.788 105.799 cv
26.4805 106.163 27.203 106.404 27.9371 106.485 cv
28.3038 106.526 28.6114 106.65 28.8727 106.822 cv
29.3142 106.852 29.7573 106.868 30.1983 106.868 cv
31.1156 106.868 32.0219 106.799 32.8769 106.646 cv
33.6975 106.498 34.4708 106.273 35.1604 105.956 cv
34.9919 106.121 34.811 106.275 34.6134 106.414 cv
34.5255 106.487 34.4269 106.532 34.3341 106.593 cv
33.8154 108.146 32.1587 109.41 30.5359 109.409 cv
37.933 98.9741 mo
37.7192 97.9357 37.4022 96.9382 36.9919 95.9899 cv
36.445 94.7256 35.732 93.5481 34.8758 92.4749 cv
34.8597 92.4547 34.8436 92.4346 34.8274 92.4145 cv
34.3536 91.8264 33.8368 91.2702 33.2803 90.7484 cv
33.7873 90.5915 34.3013 90.4979 34.8094 90.4979 cv
35.4632 90.4979 36.1072 90.653 36.712 91.0275 cv
37.6773 91.2545 38.5148 91.8541 38.8687 92.9938 cv
39.3673 94.5983 39.337 96.3468 38.3634 97.6398 cv
38.2632 98.0909 38.1291 98.5319 37.933 98.9741 cv
.164706 .694118 .235294 rgb
f
32.858 96.9264 mo
32.2994 95.9372 31.4386 95.1139 30.2482 95.1164 cv
29.0089 95.1193 27.8873 95.5563 27.1876 96.5846 cv
26.5944 97.4572 26.4239 98.6686 26.6993 99.6774 cv
26.9332 100.532 27.4596 101.696 28.4947 101.616 cv
28.65 101.604 28.7838 101.455 28.8019 101.305 cv
28.8151 101.195 28.8068 101.099 28.7955 101.005 cv
30.0157 101.67 31.7604 100.811 31.7589 99.15 cv
31.7579 98.171 31.0719 97.2892 30.0841 97.1354 cv
29.3507 97.0211 28.5992 97.2838 28.1759 97.8375 cv
28.4166 96.8585 28.9396 96.9826 29.8722 97.0509 cv
30.1778 97.0734 30.4733 97.1051 30.7814 97.1022 cv
31.3361 97.0963 31.5904 96.9508 31.9449 97.4596 cv
32.2843 97.9469 33.1588 97.4591 32.858 96.9264 cv
cp
.27451 .968627 .305882 rgb
f
32.9005 98.2477 mo
32.7794 98.1305 32.6017 98.2482 32.5734 98.383 cv
32.4957 98.7604 32.6373 99.1154 32.6271 99.4997 cv
32.6129 100.031 32.4625 100.53 32.1891 100.987 cv
31.9952 101.31 32.4527 101.677 32.6603 101.351 cv
33.1578 100.568 33.6861 99.008 32.9005 98.2477 cv
cp
f
30.9039 101.265 mo
30.3141 101.631 29.6818 101.117 29.0314 101.335 cv
28.5694 101.489 28.3546 101.902 28.5807 102.358 cv
29.2345 103.671 30.9576 102.805 31.6295 101.991 cv
32.0279 101.508 31.3746 100.973 30.9039 101.265 cv
cp
f
26.4908 97.5236 mo
26.4737 97.6564 li
26.4908 97.5236 li
cp
f
25.8917 97.7106 mo
25.8619 97.5968 25.6905 97.6134 25.7062 97.737 cv
25.735 97.9699 25.7643 98.2028 25.7941 98.4357 cv
25.817 98.6193 26.1193 98.5685 26.0738 98.3961 cv
26.0133 98.1676 25.9523 97.9391 25.8917 97.7106 cv
cp
f
25.9708 96.3327 mo
25.9537 96.465 li
25.9708 96.3327 li
cp
f
27.6842 94.2096 mo
27.3624 94.3883 27.0587 94.507 26.6959 94.5846 cv
26.3727 94.654 26.5358 95.1417 26.8121 95.0041 cv
27.1681 94.8273 27.4723 94.6188 27.7623 94.3439 cv
27.6842 94.2096 li
cp
f
32.2311 95.3493 mo
31.9547 94.9323 31.9484 94.6232 31.5558 94.2931 cv
31.2516 94.0377 30.9186 93.8576 30.5441 93.7238 cv
29.7975 93.4562 29.1285 93.7213 28.3912 93.9113 cv
28.255 93.9464 28.2794 94.1339 28.4215 94.1286 cv
29.0929 94.1027 29.6466 94.4538 30.2701 94.674 cv
30.5602 94.7765 30.8424 94.9108 31.1183 95.0436 cv
31.3634 95.1608 31.899 95.3419 32.0768 95.5031 cv
32.1749 95.5915 32.296 95.4474 32.2311 95.3493 cv
cp
f
26.5094 102.246 mo
26.7106 102.549 27.0094 102.814 27.2833 103.05 cv
27.2941 103.074 li
27.6442 103.409 28.0167 103.676 28.4425 103.907 cv
28.5206 103.772 li
28.2316 103.59 27.9801 103.382 27.7389 103.155 cv
27.8902 103.06 27.9864 102.867 27.8409 102.713 cv
27.4684 102.317 27.1715 101.679 26.6671 101.459 cv
26.6959 101.329 26.6412 101.18 26.4703 101.157 cv
26.319 101.189 li
26.2486 100.971 li
26.2355 100.942 li
26.2897 101.023 li
26.3815 101.128 26.5607 101.034 26.5045 100.898 cv
26.2716 100.329 25.9913 99.9215 25.8834 99.2912 cv
25.8658 99.1916 25.7198 99.213 25.7277 99.3131 cv
25.7506 99.5807 25.8048 99.8737 25.881 100.156 cv
25.8097 100.006 25.736 99.8556 25.6759 99.7003 cv
25.3453 98.8585 24.9454 97.965 24.8859 97.0578 cv
24.8556 96.6027 24.2306 96.6803 24.1402 97.0622 cv
23.8614 98.2331 23.7491 99.3185 24.3175 100.428 cv
24.3922 100.574 24.4884 100.721 24.5817 100.867 cv
24.2696 100.911 23.9767 101.107 23.8209 101.431 cv
23.4239 102.254 23.7941 103.144 24.5035 103.663 cv
25.192 104.169 26.0812 103.928 26.8531 103.78 cv
27.3815 103.679 27.4225 103.033 26.9816 102.791 cv
26.6622 102.615 26.3971 102.369 26.1554 102.096 cv
26.2721 102.14 26.3878 102.187 26.4991 102.245 cv
26.5094 102.246 li
cp
f
32.8619 102.143 mo
32.7418 102.128 32.7179 102.314 32.8375 102.33 cv
32.9581 102.345 32.9825 102.159 32.8619 102.143 cv
cp
f
34.9137 99.2096 mo
34.8981 99.0788 34.7281 99.0744 34.6735 99.1784 cv
34.6227 99.2775 34.5548 99.3624 34.4816 99.4416 cv
34.609 98.964 34.6954 98.4743 34.7584 97.9879 cv
34.9034 97.9079 34.9967 97.756 34.9415 97.5416 cv
34.9049 97.3981 34.8732 97.2262 34.84 97.0446 cv
34.8468 96.9411 34.8634 96.8317 34.8673 96.7301 cv
34.8756 96.5285 34.7916 96.3986 34.6827 96.3004 cv
34.63 96.1061 34.5665 95.9201 34.4825 95.757 cv
34.6564 95.5841 34.7257 95.3327 34.505 95.0895 cv
34.194 94.7472 33.9244 94.3737 33.5221 94.1422 cv
33.422 94.0846 33.2662 94.1789 33.2628 94.2916 cv
33.2496 94.758 33.4342 95.1925 33.5651 95.6383 cv
33.6276 95.7462 li
33.5709 96.132 33.6896 96.5963 33.8194 97.0216 cv
33.8902 97.5412 33.9659 98.0407 33.961 98.5817 cv
33.9532 99.4347 33.6495 100.173 33.1285 100.84 cv
32.8976 101.136 33.2379 101.481 33.5162 101.408 cv
33.5426 101.826 34.0836 102.082 34.4044 101.696 cv
34.6876 101.356 35.0406 100.962 35.1295 100.515 cv
35.2228 100.048 34.9698 99.6632 34.9137 99.2096 cv
cp
f
32.6344 93.1911 mo
32.2355 92.8034 32.2814 92.6227 31.7589 92.5167 cv
31.4034 92.4445 31.3082 92.9 31.5157 93.1037 cv
31.8439 93.4259 32.0895 93.3205 32.5416 93.4147 cv
32.6769 93.4425 32.7135 93.2677 32.6344 93.1911 cv
cp
f
28.2008 92.778 mo
27.7252 92.8131 27.2609 92.7824 26.8312 93.0036 cv
26.4366 93.2062 26.1388 93.4923 25.8263 93.7975 cv
25.3312 94.2799 24.3063 95.2663 25.0582 96.0163 cv
25.2643 96.2213 25.5441 96.2555 25.7828 96.0954 cv
26.1246 95.8654 26.1022 95.3751 26.1857 95.0143 cv
26.3234 94.4201 26.5748 94.2379 27.1339 93.9918 cv
27.5987 93.7868 27.9532 93.4752 28.3771 93.1969 cv
28.588 93.0583 28.4156 92.7619 28.2008 92.778 cv
cp
f
32.0851 103.849 mo
31.8204 103.786 31.6803 103.846 31.4186 103.945 cv
31.0621 104.08 30.7311 104.175 30.3487 104.21 cv
29.8263 104.257 29.9405 105.065 30.4625 105.017 cv
31.0978 104.96 32.109 104.814 32.2609 104.077 cv
32.2848 103.962 32.1852 103.873 32.0851 103.849 cv
cp
f
34.3097 101.934 mo
33.8468 102.355 33.2989 102.526 33.3497 103.267 cv
33.3605 103.423 33.5157 103.495 33.651 103.493 cv
34.3585 103.485 34.4786 102.922 34.8365 102.462 cv
35.0924 102.134 34.6329 101.64 34.3097 101.934 cv
cp
f
33.2823 103.241 mo
33.2662 103.365 li
33.2823 103.241 li
cp
f
32.2164 103.66 mo
32.1988 103.793 li
32.2164 103.66 li
cp
f
29.1266 104.088 mo
28.7975 104.047 28.4991 104.122 28.173 104.178 cv
27.9723 104.214 28.0172 104.501 28.2169 104.489 cv
28.5509 104.469 28.8502 104.473 29.1632 104.358 cv
29.2965 104.308 29.2613 104.105 29.1266 104.088 cv
cp
f
71.9048 111.476 mo
71.0982 111.438 70.3222 111.37 69.5849 111.276 cv
68.1609 110.363 66.8094 109.337 65.5357 108.211 cv
65.4166 108.105 65.2854 108.061 65.1591 108.061 cv
64.7149 108.061 64.3309 108.612 64.7404 109.006 cv
65.3641 109.608 66.0065 110.173 66.6656 110.71 cv
65.6189 110.426 64.7155 110.075 63.9947 109.671 cv
62.4263 108.792 61.3585 107.659 60.6492 106.364 cv
61.711 107.163 62.9609 107.753 64.1699 107.753 cv
64.5147 107.753 64.8562 107.705 65.1891 107.6 cv
66.4225 108.731 67.8922 109.665 69.5172 110.414 cv
69.5738 110.485 69.6441 110.549 69.7443 110.589 cv
70.4298 110.861 71.153 111.162 71.9048 111.476 cv
62.0026 104.435 mo
61.9946 104.431 61.9867 104.426 61.9788 104.422 cv
61.9846 104.422 61.9902 104.423 61.996 104.424 cv
61.9982 104.427 62.0004 104.431 62.0026 104.435 cv
106.001 90.2531 mo
105.726 88.1596 104.999 86.1624 103.747 84.4376 cv
102.674 82.3795 100.773 80.5939 97.7877 79.3092 cv
97.647 79.2486 97.5096 79.2215 97.3802 79.2215 cv
97.3178 79.2215 97.2572 79.2278 97.199 79.2397 cv
96.966 78.9823 96.7239 78.7293 96.4732 78.4811 cv
96.4036 78.4119 96.2846 78.3817 96.1373 78.3817 cv
95.8425 78.3817 95.4339 78.5026 95.0778 78.6745 cv
94.307 77.443 92.0829 77.0014 89.3568 77.0014 cv
88.4843 77.0014 87.5606 77.0466 86.6163 77.1257 cv
86.4845 76.9978 86.3024 76.9099 86.0753 76.8947 cv
85.6447 76.8656 85.2096 76.8515 84.7713 76.8515 cv
84.0845 76.8515 83.3885 76.8861 82.6874 76.9515 cv
82.6545 76.7338 82.5171 76.5348 82.2892 76.5021 cv
82.1061 76.4757 81.9195 76.4601 81.735 76.4396 cv
84.7052 76.404 87.713 76.4821 90.2736 74.8961 cv
90.3047 74.8768 90.3317 74.8539 90.3546 74.8283 cv
90.5812 74.8093 90.8062 74.7919 91.0284 74.776 cv
91.0917 74.7716 91.1521 74.7695 91.2099 74.7695 cv
91.3184 74.7695 91.4174 74.777 91.5079 74.7907 cv
92.5383 74.7138 93.5372 74.6751 94.497 74.6751 cv
97.0928 74.6751 99.4035 74.9582 101.283 75.5353 cv
103.378 76.1784 104.917 77.1481 105.816 78.4581 cv
106.809 79.9054 106.618 81.8283 106.383 83.7223 cv
106.327 83.9274 li
106.995 85.8107 106.848 87.9511 106.001 90.2531 cv
.913725 .941176 .831372 rgb
f
69.5849 111.276 mo
68.5246 111.14 67.5447 110.949 66.6656 110.71 cv
66.0065 110.173 65.3641 109.608 64.7404 109.006 cv
64.3309 108.612 64.7149 108.061 65.1591 108.061 cv
65.2854 108.061 65.4166 108.105 65.5357 108.211 cv
66.8094 109.337 68.1609 110.363 69.5849 111.276 cv
.85098 .764706 .588235 rgb
f
73.4487 111.512 mo
72.9235 111.512 72.4078 111.5 71.9048 111.476 cv
71.153 111.162 70.4298 110.861 69.7443 110.589 cv
69.6441 110.549 69.5738 110.485 69.5172 110.414 cv
67.8922 109.665 66.4225 108.731 65.1891 107.6 cv
64.8562 107.705 64.5147 107.753 64.1699 107.753 cv
62.9609 107.753 61.711 107.163 60.6492 106.364 cv
59.8713 104.944 59.5248 103.329 59.4226 101.642 cv
59.5725 101.999 59.7335 102.347 59.9093 102.684 cv
60.3203 103.471 61.102 104.317 61.9788 104.422 cv
61.9867 104.426 61.9946 104.431 62.0026 104.435 cv
62.0004 104.431 61.9982 104.427 61.996 104.424 cv
62.0354 104.428 62.0751 104.431 62.1149 104.432 cv
62.9261 105.112 63.8216 105.647 64.7956 105.957 cv
65.8328 106.559 66.9676 107.063 68.1578 107.475 cv
70.1081 108.704 72.188 109.621 74.4073 109.833 cv
74.4197 109.834 74.4318 109.834 74.4436 109.834 cv
74.7072 109.834 74.8558 109.551 74.8073 109.313 cv
77.0305 109.796 79.3774 110.055 81.7323 110.056 cv
82.4298 110.056 83.1283 110.033 83.8245 109.986 cv
82.5998 110.354 81.3708 110.649 80.155 110.878 cv
79.3928 110.764 78.636 110.615 77.8839 110.443 cv
77.8403 110.433 77.7983 110.428 77.7583 110.428 cv
77.3099 110.428 77.1014 111.013 77.3852 111.292 cv
76.0307 111.442 74.7106 111.512 73.4487 111.512 cv
103.723 94.5854 mo
103.772 94.1312 103.783 93.6819 103.757 93.2331 cv
103.956 90.5265 103.281 87.9191 102.29 85.068 cv
102.099 84.5169 101.651 84.2742 101.207 84.2742 cv
101.183 84.2742 101.159 84.2749 101.135 84.2763 cv
100.531 82.9518 99.6426 81.8474 98.5526 80.9384 cv
98.1452 80.3512 97.6927 79.7853 97.199 79.2397 cv
97.2572 79.2278 97.3178 79.2215 97.3802 79.2215 cv
97.5096 79.2215 97.647 79.2486 97.7877 79.3092 cv
100.773 80.5939 102.674 82.3795 103.747 84.4376 cv
104.999 86.1624 105.726 88.1596 106.001 90.2531 cv
105.489 91.645 104.721 93.0963 103.723 94.5854 cv
66.1813 82.5879 mo
67.7138 81.489 69.5683 80.4326 71.7833 79.4523 cv
71.9848 79.3631 72.1872 79.2752 72.3899 79.1889 cv
71.1192 79.8089 69.8953 80.5193 68.7131 81.3031 cv
67.844 81.7226 66.9979 82.1537 66.1813 82.5879 cv
78.6719 77.6278 mo
78.6055 77.3595 78.412 77.1403 78.1318 77.1403 cv
78.1232 77.1403 78.1146 77.1405 78.106 77.1409 cv
82.3862 75.8694 86.6544 75.1383 90.3546 74.8283 cv
90.3317 74.8539 90.3047 74.8768 90.2736 74.8961 cv
87.713 76.4821 84.7052 76.404 81.735 76.4396 cv
81.9195 76.4601 82.1061 76.4757 82.2892 76.5021 cv
82.5171 76.5348 82.6545 76.7338 82.6874 76.9515 cv
81.3628 77.075 80.0188 77.3085 78.6719 77.6278 cv
f
81.7323 110.056 mo
79.3774 110.055 77.0305 109.796 74.8073 109.313 cv
74.8558 109.551 74.7072 109.834 74.4436 109.834 cv
74.4318 109.834 74.4197 109.834 74.4073 109.833 cv
72.188 109.621 70.1081 108.704 68.1578 107.475 cv
68.5586 107.614 68.9658 107.742 69.3778 107.861 cv
69.7077 108.258 70.204 108.556 71.0856 108.582 cv
71.1548 108.685 71.2217 108.789 71.2936 108.89 cv
71.3689 108.996 71.5197 109.041 71.7066 109.041 cv
71.8237 109.041 71.9551 109.023 72.0909 108.992 cv
72.5812 109.042 73.1039 109.067 73.6527 109.067 cv
73.8677 109.067 74.0869 109.063 74.3094 109.056 cv
74.4261 109.058 74.5444 109.059 74.6639 109.059 cv
75.2645 109.059 75.8996 109.028 76.5602 108.968 cv
76.9426 108.982 77.3212 108.988 77.6954 108.988 cv
78.8913 108.988 80.037 108.92 81.0963 108.79 cv
81.0998 108.789 81.103 108.789 81.1065 108.788 cv
81.2519 108.791 81.3975 108.792 81.5426 108.792 cv
83.3118 108.792 85.051 108.628 86.6507 108.19 cv
86.7587 108.406 86.9669 108.571 87.2439 108.571 cv
87.3018 108.571 87.3627 108.563 87.4264 108.548 cv
87.662 108.491 87.8971 108.43 88.1318 108.366 cv
86.7201 109.015 85.2756 109.551 83.8245 109.986 cv
83.1283 110.033 82.4298 110.056 81.7323 110.056 cv
88.8478 106.63 mo
88.8248 106.574 88.7961 106.52 88.7625 106.468 cv
90.9381 105.42 93.0187 104.068 94.8605 102.474 cv
95.0992 102.379 li
95.7218 102.123 96.1007 101.661 96.2862 101.141 cv
96.9385 100.482 97.55 99.7904 98.1128 99.0685 cv
97.9967 99.3157 97.8863 99.5663 97.7843 99.8219 cv
97.6836 100.075 97.7403 100.333 97.8837 100.544 cv
95.2251 103.062 92.2758 105.316 88.8478 106.63 cv
62.1149 104.432 mo
62.0751 104.431 62.0354 104.428 61.996 104.424 cv
61.9902 104.423 61.9846 104.422 61.9788 104.422 cv
61.102 104.317 60.3203 103.471 59.9093 102.684 cv
59.7335 102.347 59.5725 101.999 59.4226 101.642 cv
59.4142 101.504 59.4075 101.365 59.4023 101.226 cv
60.1537 102.423 61.0631 103.55 62.1149 104.432 cv
96.966 102.218 mo
97.34 101.722 97.7119 101.232 98.0967 100.773 cv
98.1694 100.832 98.2498 100.882 98.3343 100.92 cv
97.8931 101.352 97.4369 101.785 96.966 102.218 cv
102.019 96.8923 mo
102.667 95.1494 102.907 93.1844 102.868 91.2952 cv
102.929 90.7062 102.949 90.1137 102.912 89.5187 cv
102.905 89.4124 102.82 89.3217 102.722 89.2857 cv
102.657 88.7609 102.571 88.252 102.469 87.7663 cv
102.393 87.405 102.183 87.1934 101.927 87.1052 cv
101.795 86.0675 101.523 85.1266 101.135 84.2763 cv
101.159 84.2749 101.183 84.2742 101.207 84.2742 cv
101.651 84.2742 102.099 84.5169 102.29 85.068 cv
103.281 87.9191 103.956 90.5265 103.757 93.2331 cv
103.783 93.6819 103.772 94.1312 103.723 94.5854 cv
103.214 95.3453 102.645 96.1153 102.019 96.8923 cv
.764706 .6 .478431 rgb
f
60.4243 91.106 mo
60.3481 90.9918 60.2462 90.8977 60.1314 90.8275 cv
60.2316 90.4038 60.3544 89.9757 60.5032 89.5423 cv
60.5704 89.5571 60.6389 89.5648 60.7078 89.5648 cv
60.9445 89.5648 61.185 89.4733 61.3906 89.2567 cv
61.03 89.843 60.7062 90.4593 60.4243 91.106 cv
65.8121 84.4943 mo
65.8167 84.4757 65.8206 84.457 65.8238 84.4381 cv
65.8516 84.433 65.8794 84.4278 65.9072 84.4225 cv
65.8754 84.4464 65.8438 84.4703 65.8121 84.4943 cv
68.7131 81.3031 mo
69.8953 80.5193 71.1192 79.8089 72.3899 79.1889 cv
74.2642 78.3903 76.1861 77.7113 78.106 77.1409 cv
78.1146 77.1405 78.1232 77.1403 78.1318 77.1403 cv
78.412 77.1403 78.6055 77.3595 78.6719 77.6278 cv
75.2607 78.4365 71.8382 79.7947 68.7131 81.3031 cv
f
77.3852 111.292 mo
77.1014 111.013 77.3099 110.428 77.7583 110.428 cv
77.7983 110.428 77.8403 110.433 77.8839 110.443 cv
78.636 110.615 79.3928 110.764 80.155 110.878 cv
79.2218 111.054 78.2956 111.191 77.3852 111.292 cv
f
65.8238 84.4381 mo
65.8979 84.0077 65.6287 83.5249 65.2461 83.295 cv
65.5435 83.0576 65.8551 82.8218 66.1813 82.5879 cv
66.9979 82.1537 67.844 81.7226 68.7131 81.3031 cv
71.8382 79.7947 75.2607 78.4365 78.6719 77.6278 cv
80.0188 77.3085 81.3628 77.075 82.6874 76.9515 cv
83.3885 76.8861 84.0845 76.8515 84.7713 76.8515 cv
85.2096 76.8515 85.6447 76.8656 86.0753 76.8947 cv
86.3024 76.9099 86.4845 76.9978 86.6163 77.1257 cv
85.8924 77.1863 85.1566 77.2667 84.423 77.362 cv
84.3658 77.3694 84.3083 77.3769 84.2511 77.3845 cv
84.0493 77.3046 83.8275 77.2588 83.5869 77.2588 cv
83.4133 77.2588 83.23 77.2826 83.0372 77.3346 cv
82.2884 77.5367 81.522 77.7458 80.7451 77.965 cv
79.1453 78.3002 77.5043 78.7617 75.7999 79.4528 cv
75.5866 79.5393 75.3747 79.628 75.164 79.7191 cv
71.8435 80.9073 68.5996 82.3996 65.9072 84.4225 cv
65.8794 84.4278 65.8516 84.433 65.8238 84.4381 cv
.654902 .505882 .392157 rgb
f
60.7078 89.5648 mo
60.6389 89.5648 60.5704 89.5571 60.5032 89.5423 cv
60.5275 89.4715 60.5526 89.4003 60.5782 89.3292 cv
61.2999 87.3318 62.7864 85.2588 65.2461 83.295 cv
65.6287 83.5249 65.8979 84.0077 65.8238 84.4381 cv
65.8206 84.457 65.8167 84.4757 65.8121 84.4943 cv
64.0531 85.8307 62.5347 87.3964 61.3906 89.2567 cv
61.185 89.4733 60.9445 89.5648 60.7078 89.5648 cv
f
59.8205 92.7484 mo
59.8771 92.1192 59.9772 91.4791 60.1314 90.8275 cv
60.2462 90.8977 60.3481 90.9918 60.4243 91.106 cv
60.1947 91.6325 59.9928 92.1794 59.8205 92.7484 cv
f
64.7956 105.957 mo
63.8216 105.647 62.9261 105.112 62.1149 104.432 cv
61.0631 103.55 60.1537 102.423 59.4023 101.226 cv
59.3863 100.796 59.3849 100.363 59.3951 99.9279 cv
59.3978 99.8116 59.4374 99.6901 59.508 99.5661 cv
60.2681 102.381 62.2373 104.471 64.7956 105.957 cv
f
81.5426 108.792 mo
81.3975 108.792 81.2519 108.791 81.1065 108.788 cv
83.0045 108.555 84.9546 108.044 86.8643 107.297 cv
86.5439 107.492 86.5007 107.89 86.6507 108.19 cv
85.051 108.628 83.3118 108.792 81.5426 108.792 cv
87.0978 107.204 mo
87.6572 106.979 88.2128 106.733 88.7625 106.468 cv
88.7961 106.52 88.8248 106.574 88.8478 106.63 cv
88.2778 106.848 87.6951 107.041 87.0978 107.204 cv
f
87.2439 108.571 mo
86.9669 108.571 86.7587 108.406 86.6507 108.19 cv
86.5007 107.89 86.5439 107.492 86.8643 107.297 cv
86.9423 107.266 87.0199 107.235 87.0978 107.204 cv
87.6951 107.041 88.2778 106.848 88.8478 106.63 cv
92.2758 105.316 95.2251 103.062 97.8837 100.544 cv
97.942 100.629 98.0145 100.707 98.0967 100.773 cv
97.7119 101.232 97.34 101.722 96.966 102.218 cv
96.18 102.941 95.3534 103.665 94.4889 104.387 cv
92.5301 106.024 90.3734 107.336 88.1318 108.366 cv
87.8971 108.43 87.662 108.491 87.4264 108.548 cv
87.3627 108.563 87.3018 108.571 87.2439 108.571 cv
f
102.868 91.2952 mo
102.854 90.6108 102.804 89.9359 102.722 89.2857 cv
102.82 89.3217 102.905 89.4124 102.912 89.5187 cv
102.949 90.1137 102.929 90.7062 102.868 91.2952 cv
f
98.3343 100.92 mo
98.2498 100.882 98.1694 100.832 98.0967 100.773 cv
98.0145 100.707 97.942 100.629 97.8837 100.544 cv
97.7403 100.333 97.6836 100.075 97.7843 99.8219 cv
97.8863 99.5663 97.9967 99.3157 98.1128 99.0685 cv
100.225 96.3602 101.65 93.2317 101.96 89.8595 cv
102.051 88.8741 102.035 87.9567 101.927 87.1052 cv
102.183 87.1934 102.393 87.405 102.469 87.7663 cv
102.571 88.252 102.657 88.7609 102.722 89.2857 cv
102.804 89.9359 102.854 90.6108 102.868 91.2952 cv
102.907 93.1844 102.667 95.1494 102.019 96.8923 cv
100.95 98.2189 99.7164 99.5658 98.3343 100.92 cv
f
77.6954 108.988 mo
77.3212 108.988 76.9426 108.982 76.5602 108.968 cv
79.7362 108.681 83.5079 107.751 86.9498 106.632 cv
89.6412 105.756 91.6017 104.475 93.0099 102.948 cv
93.4664 102.453 93.8863 101.954 94.2843 101.455 cv
94.4019 101.337 94.5182 101.218 94.6315 101.101 cv
96.3565 99.3131 97.6407 97.5334 98.4069 95.8644 cv
98.5807 95.485 98.715 95.1193 98.8302 94.7604 cv
100.027 92.6105 100.793 90.566 100.936 88.6686 cv
101.231 88.4289 101.396 88.1657 101.236 87.986 cv
101.141 87.8786 101.046 87.7707 100.951 87.6632 cv
100.946 87.5543 100.944 87.4454 100.934 87.338 cv
100.723 84.9791 99.8777 82.8482 98.5526 80.9384 cv
99.6426 81.8474 100.531 82.9518 101.135 84.2763 cv
101.523 85.1266 101.795 86.0675 101.927 87.1052 cv
102.035 87.9567 102.051 88.8741 101.96 89.8595 cv
101.65 93.2317 100.225 96.3602 98.1128 99.0685 cv
97.55 99.7904 96.9385 100.482 96.2862 101.141 cv
96.1007 101.661 95.7218 102.123 95.0992 102.379 cv
94.8605 102.474 li
93.0187 104.068 90.9381 105.42 88.7625 106.468 cv
88.2128 106.733 87.6572 106.979 87.0978 107.204 cv
87.0199 107.235 86.9423 107.266 86.8643 107.297 cv
84.9546 108.044 83.0045 108.555 81.1065 108.788 cv
81.103 108.789 81.0998 108.789 81.0963 108.79 cv
80.037 108.92 78.8913 108.988 77.6954 108.988 cv
69.3778 107.861 mo
68.9658 107.742 68.5586 107.614 68.1578 107.475 cv
66.9676 107.063 65.8328 106.559 64.7956 105.957 cv
62.2373 104.471 60.2681 102.381 59.508 99.5661 cv
59.6593 99.2998 59.953 99.0214 60.3287 98.757 cv
59.9336 96.8715 59.6292 94.8729 59.8205 92.7484 cv
59.9928 92.1794 60.1947 91.6325 60.4243 91.106 cv
60.7062 90.4593 61.03 89.843 61.3906 89.2567 cv
62.5347 87.3964 64.0531 85.8307 65.8121 84.4943 cv
65.8438 84.4703 65.8754 84.4464 65.9072 84.4225 cv
68.5996 82.3996 71.8435 80.9073 75.164 79.7191 cv
72.6689 80.7972 70.3652 82.1861 68.6002 83.6359 cv
67.4686 84.5656 66.6207 85.4498 65.9912 86.2963 cv
63.4519 87.5837 62.534 92.1341 62.5108 94.6125 cv
62.4899 96.8512 63.3604 99.9845 65.2882 101.546 cv
65.9637 103.81 67.3406 106.171 69.1523 107.537 cv
69.2189 107.65 69.2928 107.759 69.3778 107.861 cv
98.6212 89.5783 mo
98.4278 89.1071 98.1935 88.651 97.9347 88.2047 cv
98.0368 88.1701 98.1373 88.1286 98.236 88.0831 cv
98.3751 88.2462 98.5221 88.4064 98.6666 88.567 cv
98.67 88.8996 98.6549 89.2365 98.6212 89.5783 cv
80.7451 77.965 mo
81.522 77.7458 82.2884 77.5367 83.0372 77.3346 cv
83.23 77.2826 83.4133 77.2588 83.5869 77.2588 cv
83.8275 77.2588 84.0493 77.3046 84.2511 77.3845 cv
83.0992 77.5365 81.9336 77.7159 80.7451 77.965 cv
.156863 .188235 .129412 rgb
f
74.6639 109.059 mo
74.5444 109.059 74.4261 109.058 74.3094 109.056 cv
74.8321 109.038 75.3739 108.999 75.9307 108.939 cv
76.1413 108.951 76.3515 108.96 76.5602 108.968 cv
75.8996 109.028 75.2645 109.059 74.6639 109.059 cv
.635294 .654902 .431373 rgb
f
93.4153 98.2886 mo
93.5721 98.0851 93.7251 97.8772 93.8741 97.6657 cv
94.3241 97.1807 94.7869 96.6796 95.2326 96.1579 cv
94.6787 96.9079 94.0697 97.6189 93.4153 98.2886 cv
93.9837 93.2857 mo
93.964 92.5634 93.898 91.857 93.8126 91.1613 cv
93.4835 88.486 92.6027 85.9999 91.0051 83.845 cv
92.57 83.8525 93.9564 84.3734 94.8062 86.049 cv
95.5484 87.5119 95.7682 88.8458 95.631 90.1007 cv
95.3834 90.2018 95.1686 90.3971 95.0577 90.7169 cv
94.7545 91.5941 94.3998 92.4554 93.9837 93.2857 cv
97.6915 87.9689 mo
97.6202 87.6862 97.5445 87.4039 97.4601 87.1212 cv
97.3212 86.6564 97.2347 86.1267 97.1374 85.595 cv
97.5258 86.3266 97.7624 87.1176 97.8675 87.9384 cv
97.8577 87.9377 97.8478 87.9373 97.838 87.9373 cv
97.7871 87.9373 97.737 87.9473 97.6915 87.9689 cv
.333333 .431373 .235294 rgb
f
93.0696 98.6343 mo
93.2616 98.1324 93.4122 97.6455 93.5401 97.1803 cv
93.915 95.8174 94.0177 94.5281 93.9837 93.2857 cv
94.3998 92.4554 94.7545 91.5941 95.0577 90.7169 cv
95.1686 90.3971 95.3834 90.2018 95.631 90.1007 cv
95.7682 88.8458 95.5484 87.5119 94.8062 86.049 cv
93.9564 84.3734 92.57 83.8525 91.0051 83.845 cv
90.8049 83.5749 90.5933 83.3099 90.3702 83.0505 cv
90.4542 83.0441 90.5369 83.0408 90.6183 83.0408 cv
91.0199 83.0408 91.3871 83.1227 91.6964 83.3278 cv
91.8142 83.4059 91.934 83.4399 92.0483 83.4399 cv
92.5879 83.44 93.0082 82.6822 92.5484 82.2233 cv
92.4376 82.1127 92.3223 82.0101 92.203 81.9153 cv
92.9014 82.1377 93.5827 82.4206 94.2399 82.7736 cv
95.6041 83.5062 96.5464 84.4818 97.1374 85.595 cv
97.2347 86.1267 97.3212 86.6564 97.4601 87.1212 cv
97.5445 87.4039 97.6202 87.6862 97.6915 87.9689 cv
97.737 87.9473 97.7871 87.9373 97.838 87.9373 cv
97.8478 87.9373 97.8577 87.9377 97.8675 87.9384 cv
98.149 90.1365 97.4871 92.5477 96.2677 94.6003 cv
95.9493 95.1365 95.6032 95.656 95.2326 96.1579 cv
94.7869 96.6796 94.3241 97.1807 93.8741 97.6657 cv
93.7251 97.8772 93.5721 98.0851 93.4153 98.2886 cv
93.3014 98.4051 93.1862 98.5202 93.0696 98.6343 cv
.262745 .376471 .192157 rgb
f
96.6194 79.6312 mo
93.8105 78.0912 90.2486 77.4268 86.7973 77.3899 cv
86.7554 77.2922 86.6948 77.2018 86.6163 77.1257 cv
87.5606 77.0466 88.4843 77.0014 89.3568 77.0014 cv
92.0829 77.0014 94.307 77.443 95.0778 78.6745 cv
95.4339 78.5026 95.8425 78.3817 96.1373 78.3817 cv
96.2846 78.3817 96.4036 78.4119 96.4732 78.4811 cv
96.7239 78.7293 96.966 78.9823 97.199 79.2397 cv
96.9537 79.2894 96.7487 79.4378 96.6194 79.6312 cv
.74902 .921569 .709804 rgb
f
98.5526 80.9384 mo
97.9628 80.4465 97.3142 80.0121 96.6194 79.6312 cv
96.7487 79.4378 96.9537 79.2894 97.199 79.2397 cv
97.6927 79.7853 98.1452 80.3512 98.5526 80.9384 cv
.701961 .784314 .517647 rgb
f
75.164 79.7191 mo
75.3747 79.628 75.5866 79.5393 75.7999 79.4528 cv
77.5043 78.7617 79.1453 78.3002 80.7451 77.965 cv
78.9168 78.4806 77.0282 79.052 75.164 79.7191 cv
84.422 77.4625 mo
84.3667 77.4338 84.3097 77.4077 84.2511 77.3845 cv
84.3083 77.3769 84.3658 77.3694 84.423 77.362 cv
85.1566 77.2667 85.8924 77.1863 86.6163 77.1257 cv
86.6948 77.2018 86.7554 77.2922 86.7973 77.3899 cv
86.6952 77.3888 86.5938 77.3882 86.492 77.3882 cv
85.7938 77.3882 85.1019 77.4137 84.422 77.4625 cv
.54902 .584314 .364706 rgb
f
92.0483 83.4399 mo
91.934 83.4399 91.8142 83.4059 91.6964 83.3278 cv
91.3871 83.1227 91.0199 83.0408 90.6183 83.0408 cv
90.5369 83.0408 90.4542 83.0441 90.3702 83.0505 cv
89.9016 82.5057 89.382 81.9851 88.8082 81.4913 cv
88.7174 81.4132 88.6268 81.3358 88.5354 81.2593 cv
89.784 81.335 91.0178 81.538 92.203 81.9153 cv
92.3223 82.0101 92.4376 82.1127 92.5484 82.2233 cv
93.0082 82.6822 92.5879 83.44 92.0483 83.4399 cv
.223529 .352941 .168627 rgb
f
76.5602 108.968 mo
76.3515 108.96 76.1413 108.951 75.9307 108.939 cv
80.7553 108.422 86.6627 106.349 90.2257 102.913 cv
91.7248 101.467 92.5491 99.9957 93.0696 98.6343 cv
93.1862 98.5202 93.3014 98.4051 93.4153 98.2886 cv
94.0697 97.6189 94.6787 96.9079 95.2326 96.1579 cv
95.6032 95.656 95.9493 95.1365 96.2677 94.6003 cv
97.4871 92.5477 98.149 90.1365 97.8675 87.9384 cv
97.7624 87.1176 97.5258 86.3266 97.1374 85.595 cv
96.5464 84.4818 95.6041 83.5062 94.2399 82.7736 cv
93.5827 82.4206 92.9014 82.1377 92.203 81.9153 cv
91.0178 81.538 89.784 81.335 88.5354 81.2593 cv
87.4719 80.3692 86.3216 79.6174 84.0078 79.6174 cv
83.7125 79.6174 83.398 79.6296 83.0626 79.6554 cv
80.0533 79.8869 76.485 80.297 72.9737 81.8073 cv
70.6056 82.8263 68.7257 84.1754 67.3458 85.5841 cv
67.0514 85.7062 66.7828 85.8737 66.6041 86.0602 cv
66.39 86.1181 66.1859 86.1976 65.9912 86.2963 cv
66.6207 85.4498 67.4686 84.5656 68.6002 83.6359 cv
70.3652 82.1861 72.6689 80.7972 75.164 79.7191 cv
77.0282 79.052 78.9168 78.4806 80.7451 77.965 cv
81.9336 77.7159 83.0992 77.5365 84.2511 77.3845 cv
84.3097 77.4077 84.3667 77.4338 84.422 77.4625 cv
85.1019 77.4137 85.7938 77.3882 86.492 77.3882 cv
86.5938 77.3882 86.6952 77.3888 86.7973 77.3899 cv
90.2486 77.4268 93.8105 78.0912 96.6194 79.6312 cv
97.3142 80.0121 97.9628 80.4465 98.5526 80.9384 cv
99.8777 82.8482 100.723 84.9791 100.934 87.338 cv
100.944 87.4454 100.946 87.5543 100.951 87.6632 cv
101.046 87.7707 101.141 87.8786 101.236 87.986 cv
101.396 88.1657 101.231 88.4289 100.936 88.6686 cv
100.793 90.566 100.027 92.6105 98.8302 94.7604 cv
98.715 95.1193 98.5807 95.485 98.4069 95.8644 cv
97.6407 97.5334 96.3565 99.3131 94.6315 101.101 cv
94.5182 101.218 94.4019 101.337 94.2843 101.455 cv
93.8863 101.954 93.4664 102.453 93.0099 102.948 cv
91.6017 104.475 89.6412 105.756 86.9498 106.632 cv
83.5079 107.751 79.7362 108.681 76.5602 108.968 cv
98.236 88.0831 mo
98.1373 88.1286 98.0368 88.1701 97.9347 88.2047 cv
98.1935 88.651 98.4278 89.1071 98.6212 89.5783 cv
98.6549 89.2365 98.67 88.8996 98.6666 88.567 cv
98.5221 88.4064 98.3751 88.2462 98.236 88.0831 cv
.160784 .337255 .160784 rgb
f
71.0856 108.582 mo
70.204 108.556 69.7077 108.258 69.3778 107.861 cv
69.5263 107.904 69.6755 107.945 69.8251 107.985 cv
70.1114 108.152 70.4066 108.293 70.7101 108.405 cv
70.8112 108.443 70.9254 108.471 71.0333 108.505 cv
71.051 108.53 71.0684 108.556 71.0856 108.582 cv
.635294 .654902 .431373 rgb
f
69.8251 107.985 mo
69.6755 107.945 69.5263 107.904 69.3778 107.861 cv
69.2928 107.759 69.2189 107.65 69.1523 107.537 cv
69.3704 107.701 69.5949 107.851 69.8251 107.985 cv
.160784 .337255 .160784 rgb
f
73.6527 109.067 mo
73.1039 109.067 72.5812 109.042 72.0909 108.992 cv
71.9551 109.023 71.8237 109.041 71.7066 109.041 cv
71.5197 109.041 71.3689 108.996 71.2936 108.89 cv
71.2217 108.789 71.1548 108.685 71.0856 108.582 cv
71.1269 108.583 71.1691 108.583 71.212 108.583 cv
71.349 108.583 71.4947 108.577 71.65 108.564 cv
71.6754 108.647 71.755 108.715 71.9122 108.756 cv
72.6093 108.941 73.418 109.036 74.3094 109.056 cv
74.0869 109.063 73.8677 109.067 73.6527 109.067 cv
.635294 .654902 .431373 rgb
f
66.6788 102.103 mo
63.5763 100.039 62.0223 96.7859 64.3514 92.116 cv
64.3664 92.2973 64.3849 92.4775 64.4059 92.6564 cv
64.791 95.9445 65.5511 99.0984 66.6788 102.103 cv
.74902 .921569 .709804 rgb
f
69.1523 107.537 mo
67.3406 106.171 65.9637 103.81 65.2882 101.546 cv
63.3604 99.9845 62.4899 96.8512 62.5108 94.6125 cv
62.534 92.1341 63.4519 87.5837 65.9912 86.2963 cv
64.3999 88.436 64.2042 90.3345 64.3514 92.116 cv
62.0223 96.7859 63.5763 100.039 66.6788 102.103 cv
66.6849 102.119 66.6909 102.135 66.6969 102.151 cv
67.256 103.634 67.9049 105.082 68.6432 106.491 cv
68.8153 106.819 68.9503 107.195 69.1523 107.537 cv
.160784 .337255 .160784 rgb
f
74.3094 109.056 mo
73.418 109.036 72.6093 108.941 71.9122 108.756 cv
71.755 108.715 71.6754 108.647 71.65 108.564 cv
71.4947 108.577 71.349 108.583 71.212 108.583 cv
71.1691 108.583 71.1269 108.583 71.0856 108.582 cv
71.0684 108.556 71.051 108.53 71.0333 108.505 cv
70.9254 108.471 70.8112 108.443 70.7101 108.405 cv
70.4066 108.293 70.1114 108.152 69.8251 107.985 cv
71.4026 108.408 73.0408 108.688 74.6535 108.843 cv
74.7201 108.91 74.8289 108.94 74.9623 108.94 cv
75.0585 108.94 75.1675 108.924 75.2827 108.896 cv
75.4992 108.913 75.7158 108.927 75.9307 108.939 cv
75.3739 108.999 74.8321 109.038 74.3094 109.056 cv
.533333 .698039 .396078 rgb
f
67.2308 102.421 mo
67.1859 102.403 67.1408 102.385 67.0959 102.367 cv
66.9539 102.281 66.8151 102.193 66.6788 102.103 cv
65.5511 99.0984 64.791 95.9445 64.4059 92.6564 cv
64.3849 92.4775 64.3664 92.2973 64.3514 92.116 cv
64.4577 91.9029 64.5717 91.6875 64.6944 91.4684 cv
64.7133 91.4347 64.7323 91.4012 64.7515 91.3678 cv
64.7646 92.0734 65.0058 92.8119 65.3361 93.5021 cv
65.3248 93.6442 65.3268 93.7931 65.3761 93.9562 cv
65.4469 94.1891 65.5289 94.4176 65.6041 94.6486 cv
65.6227 95.2406 65.7236 95.8297 65.8753 96.3306 cv
65.9737 97.6483 66.2293 98.9476 66.7317 100.101 cv
66.8457 100.892 67.0092 101.682 67.2308 102.421 cv
.623529 .905882 .611765 rgb
f
67.2407 102.454 mo
67.1924 102.425 67.1436 102.396 67.0959 102.367 cv
67.1408 102.385 67.1859 102.403 67.2308 102.421 cv
67.2341 102.432 67.2374 102.443 67.2407 102.454 cv
.533333 .698039 .396078 rgb
f
66.7317 100.101 mo
66.2293 98.9476 65.9737 97.6483 65.8753 96.3306 cv
65.9071 96.4357 65.9412 96.5369 65.9772 96.6334 cv
66.1178 97.0089 66.3121 97.3532 66.527 97.6852 cv
66.5477 98.4519 66.6127 99.2766 66.7317 100.101 cv
.584314 .8 .462745 rgb
f
90.8414 97.5514 mo
90.5746 96.9499 89.8548 96.5722 89.1669 96.5372 cv
89.1101 95.4506 88.8552 94.4202 88.5904 93.4454 cv
88.5289 92.9074 88.4679 92.3693 88.4068 91.8312 cv
88.4186 91.7775 li
88.4366 91.1183 88.359 90.5002 88.1896 89.9196 cv
88.1598 89.6579 li
88.0485 89.505 li
87.84 88.9664 87.5455 88.4621 87.149 87.9953 cv
87.0573 87.8876 86.8902 87.8427 86.6891 87.8427 cv
86.6441 87.8427 86.5974 87.845 86.5494 87.8493 cv
87.1114 87.6208 87.6339 87.2291 87.5602 86.9089 cv
87.4498 86.4289 87.3131 85.9264 87.1251 85.4337 cv
87.1006 85.3468 87.0756 85.2599 87.0496 85.1733 cv
87.1012 84.9477 87.1221 84.7169 87.1041 84.4806 cv
88.3851 84.1622 89.7328 83.845 90.9707 83.845 cv
90.9822 83.845 90.9936 83.845 91.0051 83.845 cv
92.6027 85.9999 93.4835 88.486 93.8126 91.1613 cv
93.898 91.857 93.964 92.5634 93.9837 93.2857 cv
93.5842 94.0827 93.1282 94.8512 92.6071 95.5773 cv
92.0812 96.3107 91.4703 96.9401 90.8414 97.5514 cv
.298039 .52549 .243137 rgb
f
88.5235 100.478 mo
88.5857 100.421 88.6479 100.364 88.7101 100.306 cv
89.0353 100.099 89.2667 99.8512 89.2237 99.6369 cv
89.152 99.2833 89.0812 98.9298 89.0099 98.5763 cv
89.163 97.8757 89.2014 97.1961 89.1669 96.5372 cv
89.8548 96.5722 90.5746 96.9499 90.8414 97.5514 cv
91.4703 96.9401 92.0812 96.3107 92.6071 95.5773 cv
93.1282 94.8512 93.5842 94.0827 93.9837 93.2857 cv
94.0177 94.5281 93.915 95.8174 93.5401 97.1803 cv
93.4122 97.6455 93.2616 98.1324 93.0696 98.6343 cv
92.9083 98.792 92.7445 98.9473 92.5782 99.1002 cv
91.2977 99.5943 89.9319 100.074 88.5235 100.478 cv
87.0496 85.1733 mo
86.9444 84.8232 86.8238 84.4774 86.6646 84.1523 cv
87.7803 83.8209 89.1944 83.1399 90.3702 83.0505 cv
90.5933 83.3099 90.8049 83.5749 91.0051 83.845 cv
90.9936 83.845 90.9822 83.845 90.9707 83.845 cv
89.7328 83.845 88.3851 84.1622 87.1041 84.4806 cv
87.1221 84.7169 87.1012 84.9477 87.0496 85.1733 cv
83.0298 82.0428 mo
82.8439 82.0182 82.6529 81.9975 82.4576 81.9805 cv
82.3337 81.889 82.2028 81.807 82.0671 81.7362 cv
82.1989 81.7008 82.3301 81.6658 82.4606 81.631 cv
82.5241 81.6358 82.5885 81.6385 82.654 81.6385 cv
82.763 81.6385 82.8749 81.6309 82.9908 81.6119 cv
84.4108 81.3786 85.8833 81.2243 87.3508 81.2243 cv
87.6092 81.2243 87.8672 81.229 88.125 81.239 cv
87.9269 81.2875 87.7304 81.3365 87.5367 81.3761 cv
86.4772 81.5929 85.4327 81.5807 84.3683 81.736 cv
83.9658 81.7946 83.5078 81.8976 83.0298 82.0428 cv
.243137 .482353 .207843 rgb
f
86.6646 84.1523 mo
86.4016 83.6152 86.0336 83.1342 85.4572 82.7829 cv
84.8407 82.4067 84.0034 82.1714 83.0298 82.0428 cv
83.5078 81.8976 83.9658 81.7946 84.3683 81.736 cv
85.4327 81.5807 86.4772 81.5929 87.5367 81.3761 cv
87.7304 81.3365 87.9269 81.2875 88.125 81.239 cv
88.2619 81.2443 88.3988 81.2511 88.5354 81.2593 cv
88.6268 81.3358 88.7174 81.4132 88.8082 81.4913 cv
89.382 81.9851 89.9016 82.5057 90.3702 83.0505 cv
89.1944 83.1399 87.7803 83.8209 86.6646 84.1523 cv
.211765 .462745 .192157 rgb
f
82.4576 81.9805 mo
82.1096 81.9502 81.7477 81.9315 81.3751 81.9231 cv
81.6076 81.8599 81.8384 81.7976 82.0671 81.7362 cv
82.2028 81.807 82.3337 81.889 82.4576 81.9805 cv
f
75.9307 108.939 mo
75.7158 108.927 75.4992 108.913 75.2827 108.896 cv
75.3832 108.872 75.4884 108.839 75.5939 108.797 cv
75.7047 108.782 li
75.7923 108.857 75.9417 108.898 76.1275 108.898 cv
76.4697 108.898 76.9359 108.759 77.3697 108.436 cv
77.4796 108.352 li
77.7188 108.316 78.0074 108.215 78.319 108.026 cv
78.589 107.864 78.8439 107.701 79.0909 107.538 cv
79.4068 107.339 79.7238 107.139 80.0348 106.939 cv
80.4303 106.709 80.8258 106.48 81.2296 106.268 cv
81.7238 106.007 82.2184 105.749 82.7032 105.485 cv
82.8829 105.431 83.0704 105.352 83.2526 105.242 cv
83.7428 104.946 84.1842 104.65 84.587 104.352 cv
86.2057 103.244 87.3717 102.021 88.0641 100.901 cv
88.2172 100.76 88.3704 100.619 88.5235 100.478 cv
89.9319 100.074 91.2977 99.5943 92.5782 99.1002 cv
92.7445 98.9473 92.9083 98.792 93.0696 98.6343 cv
92.5491 99.9957 91.7248 101.467 90.2257 102.913 cv
86.6627 106.349 80.7553 108.422 75.9307 108.939 cv
74.6535 108.843 mo
73.0408 108.688 71.4026 108.408 69.8251 107.985 cv
69.5949 107.851 69.3704 107.701 69.1523 107.537 cv
68.9503 107.195 68.8153 106.819 68.6432 106.491 cv
67.9049 105.082 67.256 103.634 66.6969 102.151 cv
66.6909 102.135 66.6849 102.119 66.6788 102.103 cv
66.8151 102.193 66.9539 102.281 67.0959 102.367 cv
67.1436 102.396 67.1924 102.425 67.2407 102.454 cv
67.4679 103.204 67.7551 103.9 68.1115 104.489 cv
69.0012 105.96 70.547 107.245 72.2351 107.345 cv
72.7259 108.065 73.47 108.693 74.6285 108.813 cv
74.636 108.823 74.6444 108.833 74.6535 108.843 cv
64.3514 92.116 mo
64.2042 90.3345 64.3999 88.436 65.9912 86.2963 cv
66.1859 86.1976 66.39 86.1181 66.6041 86.0602 cv
66.7828 85.8737 67.0514 85.7062 67.3458 85.5841 cv
68.7257 84.1754 70.6056 82.8263 72.9737 81.8073 cv
76.485 80.297 80.0533 79.8869 83.0626 79.6554 cv
83.398 79.6296 83.7125 79.6174 84.0078 79.6174 cv
86.3216 79.6174 87.4719 80.3692 88.5354 81.2593 cv
88.3988 81.2511 88.2619 81.2443 88.125 81.239 cv
87.8672 81.229 87.6092 81.2243 87.3508 81.2243 cv
85.8833 81.2243 84.4108 81.3786 82.9908 81.6119 cv
82.8749 81.6309 82.763 81.6385 82.654 81.6385 cv
82.5885 81.6385 82.5241 81.6358 82.4606 81.631 cv
82.3301 81.6658 82.1989 81.7008 82.0671 81.7362 cv
81.8384 81.7976 81.6076 81.8599 81.3751 81.9231 cv
81.2176 81.9195 81.0583 81.9178 80.8972 81.9178 cv
80.5272 81.9178 80.1487 81.9269 79.7643 81.944 cv
77.6124 82.0397 74.7423 82.1207 72.151 82.9781 cv
71.3475 83.244 70.684 83.5727 70.1251 83.9372 cv
69.6805 84.0003 69.2579 84.1413 68.8634 84.3776 cv
68.1896 84.737 67.6119 85.3219 67.1984 85.9577 cv
66.795 86.5784 66.5089 87.3123 66.3055 88.0879 cv
65.7895 88.6168 65.3789 89.2251 65.1149 90.0016 cv
64.9967 90.1832 64.8942 90.3785 64.8341 90.6159 cv
64.772 90.8596 64.7467 91.1115 64.7515 91.3678 cv
64.7323 91.4012 64.7133 91.4347 64.6944 91.4684 cv
64.5717 91.6875 64.4577 91.9029 64.3514 92.116 cv
.164706 .45098 .184314 rgb
f
74.9623 108.94 mo
74.8289 108.94 74.7201 108.91 74.6535 108.843 cv
74.8642 108.863 75.0731 108.881 75.2827 108.896 cv
75.1675 108.924 75.0585 108.94 74.9623 108.94 cv
.458824 .733333 .368627 rgb
f
88.9586 96.5373 mo
88.6769 96.2282 88.2814 96.0011 87.7418 95.9235 cv
87.4799 95.8857 87.2256 95.8696 86.9767 95.8696 cv
86.7713 95.8696 86.5697 95.8806 86.3706 95.8994 cv
86.3381 95.8741 86.3049 95.8498 86.2711 95.8263 cv
86.7233 95.2765 86.8278 94.5016 86.8688 93.8097 cv
86.8756 93.7037 86.8492 93.6056 86.8204 93.5094 cv
86.9093 93.4454 li
87.8927 92.8092 88.2443 91.3156 87.3551 90.3781 cv
86.9885 89.9914 86.5223 89.819 86.0604 89.819 cv
86.0289 89.819 85.9974 89.8198 85.9659 89.8214 cv
85.8395 89.6501 85.6358 89.5451 85.4029 89.5031 cv
85.3753 89.4177 85.3465 89.3331 85.317 89.2496 cv
85.3148 89.2391 85.3126 89.2288 85.3102 89.2184 cv
85.712 88.6315 85.7926 88.0163 85.6305 87.4782 cv
85.7809 87.2975 85.9401 87.1222 86.0861 86.9396 cv
86.526 86.388 86.9062 85.8007 87.0496 85.1733 cv
87.0756 85.2599 87.1006 85.3468 87.1251 85.4337 cv
87.3131 85.9264 87.4498 86.4289 87.5602 86.9089 cv
87.6339 87.2291 87.1114 87.6208 86.5494 87.8493 cv
86.5974 87.845 86.6441 87.8427 86.6891 87.8427 cv
86.8902 87.8427 87.0573 87.8876 87.149 87.9953 cv
87.5455 88.4621 87.84 88.9664 88.0485 89.505 cv
88.1598 89.6579 li
88.1896 89.9196 li
88.359 90.5002 88.4366 91.1183 88.4186 91.7775 cv
88.4068 91.8312 li
88.4679 92.3693 88.5289 92.9074 88.5904 93.4454 cv
88.8552 94.4202 89.1101 95.4506 89.1669 96.5372 cv
89.1321 96.5354 89.0973 96.5345 89.0627 96.5345 cv
89.0278 96.5345 88.9931 96.5354 88.9586 96.5373 cv
.270588 .596078 .25098 rgb
f
88.4156 100.509 mo
87.924 99.7934 87.5488 99.6364 86.6886 99.5026 cv
86.4845 99.4709 86.287 99.4486 86.0947 99.4326 cv
86.0911 99.415 86.0854 99.3976 86.0772 99.3805 cv
86.0563 99.3356 li
86.8141 98.9674 87.3224 98.2228 87.13 97.1881 cv
87.0218 96.6014 86.7415 96.1884 86.3706 95.8994 cv
86.5697 95.8806 86.7713 95.8696 86.9767 95.8696 cv
87.2256 95.8696 87.4799 95.8857 87.7418 95.9235 cv
88.2814 96.0011 88.6769 96.2282 88.9586 96.5373 cv
88.9931 96.5354 89.0278 96.5345 89.0627 96.5345 cv
89.0973 96.5345 89.1321 96.5354 89.1669 96.5372 cv
89.2014 97.1961 89.163 97.8757 89.0099 98.5763 cv
89.0812 98.9298 89.152 99.2833 89.2237 99.6369 cv
89.2667 99.8512 89.0353 100.099 88.7101 100.306 cv
88.6479 100.364 88.5857 100.421 88.5235 100.478 cv
88.4878 100.488 88.4514 100.499 88.4156 100.509 cv
85.317 89.2496 mo
85.1201 88.6928 84.8885 88.1865 84.7208 87.8595 cv
84.67 87.7599 84.611 87.6759 84.5465 87.6017 cv
84.5187 87.4157 li
84.3859 86.7638 84.0187 86.1588 83.3121 86.0534 cv
83.1398 86.0465 li
83.0758 85.9727 83.0078 85.9027 82.9363 85.837 cv
83.1752 85.5718 83.3615 85.27 83.4766 84.938 cv
84.2718 84.572 85.0799 84.4461 86.0148 84.3048 cv
86.2154 84.2745 86.4336 84.2209 86.6646 84.1523 cv
86.8238 84.4774 86.9444 84.8232 87.0496 85.1733 cv
86.9062 85.8007 86.526 86.388 86.0861 86.9396 cv
85.9401 87.1222 85.7809 87.2975 85.6305 87.4782 cv
85.7926 88.0163 85.712 88.6315 85.3102 89.2184 cv
85.3126 89.2288 85.3148 89.2391 85.317 89.2496 cv
82.6752 82.1571 mo
82.6055 82.095 82.5328 82.0361 82.4576 81.9805 cv
82.6529 81.9975 82.8439 82.0182 83.0298 82.0428 cv
82.9127 82.0783 82.7943 82.1165 82.6752 82.1571 cv
.227451 .560784 .223529 rgb
f
83.4766 84.938 mo
83.6317 84.4904 83.6574 83.9878 83.5084 83.4455 cv
83.3768 82.9666 83.0736 82.5117 82.6752 82.1571 cv
82.7943 82.1165 82.9127 82.0783 83.0298 82.0428 cv
84.0034 82.1714 84.8407 82.4067 85.4572 82.7829 cv
86.0336 83.1342 86.4016 83.6152 86.6646 84.1523 cv
86.4336 84.2209 86.2154 84.2745 86.0148 84.3048 cv
85.0799 84.4461 84.2718 84.572 83.4766 84.938 cv
.203922 .545098 .207843 rgb
f
82.9363 85.837 mo
82.6401 85.5651 82.2841 85.3679 81.9132 85.2873 cv
81.6768 84.8864 81.2936 84.5788 80.8917 84.2575 cv
80.404 83.867 79.8538 83.5059 79.2464 83.5059 cv
79.1921 83.5059 79.1373 83.5088 79.0821 83.5148 cv
78.9797 83.4056 78.8649 83.3059 78.7318 83.2214 cv
78.9562 83.1223 79.1826 83.0251 79.4107 82.9293 cv
79.8068 82.7633 80.0988 82.5104 80.3111 82.216 cv
80.6686 82.1163 81.0238 82.0186 81.3751 81.9231 cv
81.7477 81.9315 82.1096 81.9502 82.4576 81.9805 cv
82.5328 82.0361 82.6055 82.095 82.6752 82.1571 cv
83.0736 82.5117 83.3768 82.9666 83.5084 83.4455 cv
83.6574 83.9878 83.6317 84.4904 83.4766 84.938 cv
83.3615 85.27 83.1752 85.5718 82.9363 85.837 cv
f
85.717 101.158 mo
85.8574 101.04 85.9485 100.918 85.9557 100.81 cv
85.9791 100.454 85.9708 100.112 85.9313 99.7829 cv
86.0497 99.6652 86.1169 99.544 86.0947 99.4326 cv
86.287 99.4486 86.4845 99.4709 86.6886 99.5026 cv
87.5488 99.6364 87.924 99.7934 88.4156 100.509 cv
87.5287 100.761 86.6261 100.982 85.717 101.158 cv
f
76.1275 108.898 mo
75.9417 108.898 75.7923 108.857 75.7047 108.782 cv
75.5939 108.797 li
75.4884 108.839 75.3832 108.872 75.2827 108.896 cv
75.0731 108.881 74.8642 108.863 74.6535 108.843 cv
74.6444 108.833 74.636 108.823 74.6285 108.813 cv
73.47 108.693 72.7259 108.065 72.2351 107.345 cv
72.3045 107.349 72.3741 107.351 72.444 107.351 cv
72.4774 107.351 72.511 107.35 72.5445 107.349 cv
72.7355 107.516 72.9332 107.671 73.1383 107.799 cv
73.3726 107.946 73.6286 108.011 73.883 108.011 cv
74.0552 108.011 74.2268 107.981 74.3902 107.926 cv
74.4154 108.058 74.5584 108.114 74.7605 108.114 cv
75.0442 108.114 75.4443 108.004 75.799 107.842 cv
76.2804 107.835 76.9933 107.598 77.3243 107.22 cv
77.5426 106.993 li
77.651 107.019 li
77.681 107.021 77.7109 107.022 77.7406 107.022 cv
77.9129 107.022 78.0804 106.986 78.2457 106.939 cv
78.3588 106.986 78.4791 107.022 78.6166 107.022 cv
78.6518 107.022 78.6881 107.019 78.7257 107.014 cv
79.3258 106.936 79.7614 106.669 80.0538 106.272 cv
80.3863 105.967 80.5348 105.497 80.4581 105.051 cv
80.4674 105.051 li
80.7275 105.253 81.0232 105.343 81.3194 105.343 cv
82.0189 105.343 82.7202 104.841 82.9552 104.124 cv
82.9899 104.02 82.985 103.918 82.985 103.816 cv
83.3048 103.62 83.5363 103.303 83.6974 102.94 cv
83.8409 102.773 83.9445 102.589 83.986 102.388 cv
84.0314 102.304 84.0963 102.233 84.1251 102.138 cv
84.213 102.046 84.3102 101.965 84.3741 101.841 cv
84.4151 101.719 li
84.8363 101.676 85.4014 101.425 85.717 101.158 cv
86.6261 100.982 87.5287 100.761 88.4156 100.509 cv
88.4514 100.499 88.4878 100.488 88.5235 100.478 cv
88.3704 100.619 88.2172 100.76 88.0641 100.901 cv
87.3717 102.021 86.2057 103.244 84.587 104.352 cv
84.1842 104.65 83.7428 104.946 83.2526 105.242 cv
83.0704 105.352 82.8829 105.431 82.7032 105.485 cv
82.2184 105.749 81.7238 106.007 81.2296 106.268 cv
80.8258 106.48 80.4303 106.709 80.0348 106.939 cv
79.7238 107.139 79.4068 107.339 79.0909 107.538 cv
78.8439 107.701 78.589 107.864 78.319 108.026 cv
78.0074 108.215 77.7188 108.316 77.4796 108.352 cv
77.3697 108.436 li
76.9359 108.759 76.4697 108.898 76.1275 108.898 cv
70.1251 83.9372 mo
70.684 83.5727 71.3475 83.244 72.151 82.9781 cv
74.7423 82.1207 77.6124 82.0397 79.7643 81.944 cv
80.1487 81.9269 80.5272 81.9178 80.8972 81.9178 cv
81.0583 81.9178 81.2176 81.9195 81.3751 81.9231 cv
81.0238 82.0186 80.6686 82.1163 80.3111 82.216 cv
80.0988 82.5104 79.8068 82.7633 79.4107 82.9293 cv
79.1826 83.0251 78.9562 83.1223 78.7318 83.2214 cv
78.6036 83.14 78.4583 83.0727 78.2906 83.0246 cv
78.0542 82.9564 77.7585 82.9276 77.4223 82.9276 cv
76.6073 82.9276 75.5539 83.0967 74.5279 83.2834 cv
74.1954 83.3087 73.8175 83.3722 73.3727 83.4928 cv
73.3489 83.4998 li
73.3124 83.5065 73.2768 83.5135 73.2421 83.521 cv
73.2043 83.5279 73.1668 83.5347 73.1295 83.5414 cv
72.906 83.4835 72.6778 83.4461 72.4391 83.4461 cv
72.402 83.4461 72.3645 83.447 72.3268 83.4489 cv
72.2914 83.4478 72.2563 83.4472 72.2214 83.4472 cv
71.5709 83.4472 70.998 83.6385 70.4488 83.9049 cv
70.3397 83.9114 70.2318 83.922 70.1251 83.9372 cv
.164706 .537255 .203922 rgb
f
69.6016 103.322 mo
68.8073 103.034 68.0176 102.732 67.2308 102.421 cv
67.0092 101.682 66.8457 100.892 66.7317 100.101 cv
67.3124 101.435 68.2233 102.574 69.6016 103.322 cv
65.8753 96.3306 mo
65.7236 95.8297 65.6227 95.2406 65.6041 94.6486 cv
65.5289 94.4176 65.4469 94.1891 65.3761 93.9562 cv
65.3268 93.7931 65.3248 93.6442 65.3361 93.5021 cv
65.0058 92.8119 64.7646 92.0734 64.7515 91.3678 cv
65.1161 90.7323 65.539 90.1406 66.0105 89.5878 cv
65.9843 89.7731 65.9614 89.9586 65.9413 90.1427 cv
65.7773 90.9166 65.7469 91.6516 65.8077 92.3592 cv
65.8005 92.8481 65.8101 93.3558 65.8401 93.8691 cv
65.8318 94.0708 65.8289 94.2724 65.8316 94.4721 cv
65.8176 95.0867 65.829 95.7108 65.8753 96.3306 cv
.533333 .898039 .545098 rgb
f
70.6593 103.923 mo
69.429 103.543 68.2661 103.056 67.2407 102.454 cv
67.2374 102.443 67.2341 102.432 67.2308 102.421 cv
68.0176 102.732 68.8073 103.034 69.6016 103.322 cv
69.8492 103.456 70.1116 103.577 70.3902 103.685 cv
70.417 103.696 70.4443 103.704 70.4718 103.712 cv
70.5341 103.783 70.5965 103.853 70.6593 103.923 cv
.462745 .729412 .372549 rgb
f
65.8316 94.4721 mo
65.8289 94.2724 65.8318 94.0708 65.8401 93.8691 cv
65.8425 93.9099 65.845 93.9507 65.8477 93.9916 cv
65.8407 94.1512 65.8353 94.311 65.8316 94.4721 cv
.501961 .811765 .423529 rgb
f
70.4718 103.712 mo
70.4443 103.704 70.417 103.696 70.3902 103.685 cv
70.1116 103.577 69.8492 103.456 69.6016 103.322 cv
68.2233 102.574 67.3124 101.435 66.7317 100.101 cv
66.6127 99.2766 66.5477 98.4519 66.527 97.6852 cv
66.3121 97.3532 66.1178 97.0089 65.9772 96.6334 cv
65.9412 96.5369 65.9071 96.4357 65.8753 96.3306 cv
65.829 95.7108 65.8176 95.0867 65.8316 94.4721 cv
65.8353 94.311 65.8407 94.1512 65.8477 93.9916 cv
65.9373 95.3748 66.1773 96.7925 66.6417 97.9957 cv
66.6506 98.0187 66.6594 98.0414 66.6684 98.0639 cv
66.6283 98.2422 66.6592 98.4468 66.7936 98.6608 cv
67.8809 100.393 69.1119 102.163 70.4718 103.712 cv
f
71.0733 104.046 mo
70.9346 104.006 70.7964 103.965 70.6593 103.923 cv
70.5965 103.853 70.5341 103.783 70.4718 103.712 cv
69.1119 102.163 67.8809 100.393 66.7936 98.6608 cv
66.6592 98.4468 66.6283 98.2422 66.6684 98.0639 cv
66.9833 98.8583 67.3674 99.4567 67.9034 100.126 cv
68.1071 100.411 68.3517 100.658 68.5997 100.903 cv
68.5921 100.898 68.5863 100.895 68.5821 100.895 cv
68.5546 100.895 68.6051 101.016 68.7516 101.284 cv
69.3046 102.367 70.1022 103.241 71.0454 103.882 cv
71.0545 103.937 71.0638 103.991 71.0733 104.046 cv
f
72.2351 107.345 mo
70.547 107.245 69.0012 105.96 68.1115 104.489 cv
67.7551 103.9 67.4679 103.204 67.2407 102.454 cv
68.2661 103.056 69.429 103.543 70.6593 103.923 cv
70.7964 103.965 70.9346 104.006 71.0733 104.046 cv
71.1525 104.5 71.2476 104.947 71.3771 105.379 cv
71.5238 105.87 71.7615 106.65 72.2351 107.345 cv
64.7515 91.3678 mo
64.7467 91.1115 64.772 90.8596 64.8341 90.6159 cv
64.8942 90.3785 64.9967 90.1832 65.1149 90.0016 cv
65.3789 89.2251 65.7895 88.6168 66.3055 88.0879 cv
66.1772 88.5773 66.0818 89.083 66.0105 89.5878 cv
65.539 90.1406 65.1161 90.7323 64.7515 91.3678 cv
.164706 .533333 .2 rgb
f
65.8077 92.3592 mo
65.7469 91.6516 65.7773 90.9166 65.9413 90.1427 cv
65.8761 90.7402 65.8408 91.3264 65.8204 91.8712 cv
65.8144 92.0315 65.8101 92.1942 65.8077 92.3592 cv
.458824 .890196 .486274 rgb
f
71.4893 104.16 mo
71.3502 104.123 71.2111 104.085 71.0733 104.046 cv
71.0638 103.991 71.0545 103.937 71.0454 103.882 cv
71.1901 103.98 71.3381 104.073 71.4893 104.16 cv
.431373 .819608 .392157 rgb
f
86.3243 95.904 mo
86.235 95.8864 86.1232 95.8273 86.0035 95.7521 cv
86.0016 95.6652 85.9894 95.5763 85.9586 95.4855 cv
85.6837 94.6794 85.047 94.0753 84.8707 93.2242 cv
84.6412 92.1193 85.0079 90.9718 85.2936 89.9108 cv
85.3585 89.6695 85.3587 89.4498 85.317 89.2496 cv
85.3465 89.3331 85.3753 89.4177 85.4029 89.5031 cv
85.6358 89.5451 85.8395 89.6501 85.9659 89.8214 cv
85.9974 89.8198 86.0289 89.819 86.0604 89.819 cv
86.5223 89.819 86.9885 89.9914 87.3551 90.3781 cv
88.2443 91.3156 87.8927 92.8092 86.9093 93.4454 cv
86.8204 93.5094 li
86.8492 93.6056 86.8756 93.7037 86.8688 93.8097 cv
86.8278 94.5016 86.7233 95.2765 86.2711 95.8263 cv
86.3049 95.8498 86.3381 95.8741 86.3706 95.8994 cv
86.3552 95.9009 86.3397 95.9024 86.3243 95.904 cv
.25098 .647059 .254902 rgb
f
86.0947 99.4326 mo
85.2906 99.3659 84.5754 99.4105 83.8412 99.3504 cv
83.9505 99.1035 84.0305 98.8381 84.0748 98.5529 cv
84.2262 97.5822 84.1393 96.3849 83.2838 95.714 cv
83.254 95.6886 li
83.1886 95.3893 83.1217 95.09 83.0519 94.7917 cv
82.9464 94.4489 82.8248 94.1544 82.6798 93.8776 cv
82.386 91.8687 81.4269 89.5437 80.1736 87.5979 cv
80.3049 87.4982 80.4389 87.4024 80.5756 87.3113 cv
80.5963 87.2984 80.6169 87.2848 80.637 87.2708 cv
80.9567 87.0623 81.2914 86.8795 81.6422 86.7321 cv
82.1452 86.5207 82.5946 86.2162 82.9363 85.837 cv
83.0078 85.9027 83.0758 85.9727 83.1398 86.0465 cv
83.3121 86.0534 li
84.0187 86.1588 84.3859 86.7638 84.5187 87.4157 cv
84.5465 87.6017 li
84.611 87.6759 84.67 87.7599 84.7208 87.8595 cv
84.8885 88.1865 85.1201 88.6928 85.317 89.2496 cv
85.3587 89.4498 85.3585 89.6695 85.2936 89.9108 cv
85.0079 90.9718 84.6412 92.1193 84.8707 93.2242 cv
85.047 94.0753 85.6837 94.6794 85.9586 95.4855 cv
85.9894 95.5763 86.0016 95.6652 86.0035 95.7521 cv
86.1232 95.8273 86.235 95.8864 86.3243 95.904 cv
86.3397 95.9024 86.3552 95.9009 86.3706 95.8994 cv
86.7415 96.1884 87.0218 96.6014 87.13 97.1881 cv
87.3224 98.2228 86.8141 98.9674 86.0563 99.3356 cv
86.0772 99.3805 li
86.0854 99.3976 86.0911 99.415 86.0947 99.4326 cv
.215686 .619608 .231373 rgb
f
80.5756 87.3113 mo
80.596 87.2977 80.6164 87.2842 80.637 87.2708 cv
80.6169 87.2848 80.5963 87.2984 80.5756 87.3113 cv
.196078 .607843 .219608 rgb
f
80.1736 87.5979 mo
79.3463 86.3133 78.3909 85.1941 77.4137 84.4396 cv
77.2619 84.3225 77.1025 84.2039 76.9366 84.0906 cv
77.5128 83.7809 78.1145 83.4941 78.7318 83.2214 cv
78.8649 83.3059 78.9797 83.4056 79.0821 83.5148 cv
79.1373 83.5088 79.1921 83.5059 79.2464 83.5059 cv
79.8538 83.5059 80.404 83.867 80.8917 84.2575 cv
81.2936 84.5788 81.6768 84.8864 81.9132 85.2873 cv
82.2841 85.3679 82.6401 85.5651 82.9363 85.837 cv
82.5946 86.2162 82.1452 86.5207 81.6422 86.7321 cv
81.2914 86.8795 80.9567 87.0623 80.637 87.2708 cv
80.6164 87.2842 80.596 87.2977 80.5756 87.3113 cv
80.4389 87.4024 80.3049 87.4982 80.1736 87.5979 cv
f
81.4881 101.596 mo
81.4395 101.596 81.3905 101.596 81.3421 101.596 cv
82.3826 101.116 83.3767 100.4 83.8412 99.3504 cv
84.5754 99.4105 85.2906 99.3659 86.0947 99.4326 cv
86.1169 99.544 86.0497 99.6652 85.9313 99.7829 cv
85.9708 100.112 85.9791 100.454 85.9557 100.81 cv
85.9485 100.918 85.8574 101.04 85.717 101.158 cv
84.3083 101.432 82.885 101.596 81.4881 101.596 cv
f
74.7605 108.114 mo
74.5584 108.114 74.4154 108.058 74.3902 107.926 cv
74.2268 107.981 74.0552 108.011 73.883 108.011 cv
73.6286 108.011 73.3726 107.946 73.1383 107.799 cv
72.9332 107.671 72.7355 107.516 72.5445 107.349 cv
72.511 107.35 72.4774 107.351 72.444 107.351 cv
72.3741 107.351 72.3045 107.349 72.2351 107.345 cv
71.7615 106.65 71.5238 105.87 71.3771 105.379 cv
71.2476 104.947 71.1525 104.5 71.0733 104.046 cv
71.2111 104.085 71.3502 104.123 71.4893 104.16 cv
72.2381 104.592 73.0623 104.888 73.9186 105.038 cv
74.0363 105.2 li
74.0889 105.26 74.185 105.286 74.305 105.286 cv
74.3453 105.286 74.3883 105.283 74.4332 105.277 cv
74.4926 105.294 74.5625 105.303 74.6404 105.303 cv
74.8308 105.303 75.0681 105.252 75.3121 105.147 cv
76.6598 105.13 78.0299 104.759 79.2667 103.98 cv
80.1979 103.392 80.8424 102.577 81.2599 101.633 cv
81.2873 101.621 81.3147 101.608 81.3421 101.596 cv
81.3905 101.596 81.4395 101.596 81.4881 101.596 cv
82.885 101.596 84.3083 101.432 85.717 101.158 cv
85.4014 101.425 84.8363 101.676 84.4151 101.719 cv
84.3741 101.841 li
84.3102 101.965 84.213 102.046 84.1251 102.138 cv
84.0963 102.233 84.0314 102.304 83.986 102.388 cv
83.9445 102.589 83.8409 102.773 83.6974 102.94 cv
83.5363 103.303 83.3048 103.62 82.985 103.816 cv
82.985 103.918 82.9899 104.02 82.9552 104.124 cv
82.7202 104.841 82.0189 105.343 81.3194 105.343 cv
81.0232 105.343 80.7275 105.253 80.4674 105.051 cv
80.4581 105.051 li
80.5348 105.497 80.3863 105.967 80.0538 106.272 cv
79.7614 106.669 79.3258 106.936 78.7257 107.014 cv
78.6881 107.019 78.6518 107.022 78.6166 107.022 cv
78.4791 107.022 78.3588 106.986 78.2457 106.939 cv
78.0804 106.986 77.9129 107.022 77.7406 107.022 cv
77.7109 107.022 77.681 107.021 77.651 107.019 cv
77.5426 106.993 li
77.3243 107.22 li
76.9933 107.598 76.2804 107.835 75.799 107.842 cv
75.4443 108.004 75.0442 108.114 74.7605 108.114 cv
76.9366 84.0906 mo
76.5246 83.8092 76.0722 83.5605 75.5939 83.4498 cv
75.4995 83.4278 75.1317 83.4017 74.6838 83.4017 cv
74.2556 83.4017 73.7542 83.4256 73.3489 83.4998 cv
73.3727 83.4928 li
73.8175 83.3722 74.1954 83.3087 74.5279 83.2834 cv
75.5539 83.0967 76.6073 82.9276 77.4223 82.9276 cv
77.7585 82.9276 78.0542 82.9564 78.2906 83.0246 cv
78.4583 83.0727 78.6036 83.14 78.7318 83.2214 cv
78.1145 83.4941 77.5128 83.7809 76.9366 84.0906 cv
73.1417 83.5446 mo
73.1376 83.5435 73.1336 83.5424 73.1295 83.5414 cv
73.1668 83.5347 73.2043 83.5279 73.2421 83.521 cv
73.2077 83.5285 73.1742 83.5363 73.1417 83.5446 cv
.164706 .6 .215686 rgb
f
66.3055 88.0879 mo
66.5089 87.3123 66.795 86.5784 67.1984 85.9577 cv
67.6119 85.3219 68.1896 84.737 68.8634 84.3776 cv
69.2579 84.1413 69.6805 84.0003 70.1251 83.9372 cv
68.9051 84.7326 68.1826 85.6984 67.5865 86.5543 cv
67.3732 86.8605 67.1822 87.1602 67.0115 87.4543 cv
66.7595 87.6558 66.5231 87.8648 66.3055 88.0879 cv
.164706 .537255 .203922 rgb
f
67.0115 87.4543 mo
67.1822 87.1602 67.3732 86.8605 67.5865 86.5543 cv
68.1826 85.6984 68.9051 84.7326 70.1251 83.9372 cv
70.2318 83.922 70.3397 83.9114 70.4488 83.9049 cv
70.998 83.6385 71.5709 83.4472 72.2214 83.4472 cv
72.2563 83.4472 72.2914 83.4478 72.3268 83.4489 cv
72.3645 83.447 72.402 83.4461 72.4391 83.4461 cv
72.6778 83.4461 72.906 83.4835 73.1295 83.5414 cv
72.8765 83.5869 72.6336 83.6291 72.4078 83.6642 cv
71.7525 83.7663 71.1232 84.1979 70.9869 84.5167 cv
69.819 85.2365 69.0133 86.1276 68.4567 86.9474 cv
68.3514 86.8535 68.2213 86.7929 68.0805 86.7929 cv
67.9776 86.7929 67.869 86.8253 67.7604 86.9005 cv
67.4986 87.0823 67.2482 87.265 67.0115 87.4543 cv
73.2421 83.521 mo
73.2768 83.5135 73.3124 83.5065 73.3489 83.4998 cv
73.3326 83.5045 li
73.3023 83.5101 73.2721 83.5156 73.2421 83.521 cv
.164706 .603922 .219608 rgb
f
65.8401 93.8691 mo
65.8101 93.3558 65.8005 92.8481 65.8077 92.3592 cv
65.8284 92.6013 65.8599 92.8404 65.9003 93.0765 cv
65.8712 93.3405 65.851 93.6052 65.8401 93.8691 cv
65.9413 90.1427 mo
65.9614 89.9586 65.9843 89.7731 66.0105 89.5878 cv
66.0458 89.5464 66.0814 89.5053 66.1172 89.4643 cv
66.0468 89.6938 65.9885 89.9199 65.9413 90.1427 cv
.458824 .890196 .486274 rgb
f
65.8477 93.9916 mo
65.845 93.9507 65.8425 93.9099 65.8401 93.8691 cv
65.851 93.6052 65.8712 93.3405 65.9003 93.0765 cv
65.9014 93.0826 65.9024 93.0887 65.9035 93.0947 cv
65.88 93.3893 65.861 93.6891 65.8477 93.9916 cv
.431373 .823529 .392157 rgb
f
66.6684 98.0639 mo
66.6594 98.0414 66.6506 98.0187 66.6417 97.9957 cv
66.1773 96.7925 65.9373 95.3748 65.8477 93.9916 cv
65.861 93.6891 65.88 93.3893 65.9035 93.0947 cv
66.0592 93.9939 66.3445 94.8527 66.6652 95.6969 cv
66.8906 96.2909 67.1413 96.874 67.4119 97.4486 cv
67.0595 97.4936 66.7426 97.7339 66.6684 98.0639 cv
f
71.0454 103.882 mo
70.1022 103.241 69.3046 102.367 68.7516 101.284 cv
68.6051 101.016 68.5546 100.895 68.5821 100.895 cv
68.5863 100.895 68.5921 100.898 68.5997 100.903 cv
68.3517 100.658 68.1071 100.411 67.9034 100.126 cv
67.3674 99.4567 66.9833 98.8583 66.6684 98.0639 cv
66.7426 97.7339 67.0595 97.4936 67.4119 97.4486 cv
68.2151 99.154 69.1939 100.784 70.2081 102.398 cv
70.4503 102.848 70.7223 103.284 71.0177 103.711 cv
71.0267 103.768 71.036 103.825 71.0454 103.882 cv
f
66.0105 89.5878 mo
66.0818 89.083 66.1772 88.5773 66.3055 88.0879 cv
66.5231 87.8648 66.7595 87.6558 67.0115 87.4543 cv
66.6045 88.1554 66.3137 88.8235 66.1172 89.4643 cv
66.0814 89.5053 66.0458 89.5464 66.0105 89.5878 cv
.164706 .603922 .215686 rgb
f
76.2506 104.916 mo
76.053 104.904 75.854 104.889 75.6549 104.872 cv
75.6595 104.86 75.6639 104.849 75.6681 104.837 cv
75.7386 104.833 75.8091 104.826 75.8795 104.816 cv
76.0024 104.851 76.1263 104.884 76.2506 104.916 cv
65.9003 93.0765 mo
65.8599 92.8404 65.8284 92.6013 65.8077 92.3592 cv
65.8101 92.1942 65.8144 92.0315 65.8204 91.8712 cv
65.8408 91.3264 65.8761 90.7402 65.9413 90.1427 cv
65.9885 89.9199 66.0468 89.6938 66.1172 89.4643 cv
66.1512 89.4255 66.1854 89.3868 66.2199 89.3483 cv
66.0403 90.3047 66.0007 91.3011 65.9859 92.1447 cv
65.9848 92.2121 65.9839 92.2797 65.9834 92.3474 cv
65.9715 92.3971 65.9627 92.4492 65.9571 92.5036 cv
65.9426 92.6471 65.9289 92.7925 65.9164 92.9388 cv
65.9108 92.9847 65.9054 93.0306 65.9003 93.0765 cv
.4 .882353 .439216 rgb
f
65.9035 93.0947 mo
65.9024 93.0887 65.9014 93.0826 65.9003 93.0765 cv
65.9054 93.0306 65.9108 92.9847 65.9164 92.9388 cv
65.9119 92.9908 65.9077 93.0424 65.9035 93.0947 cv
.376471 .827451 .364706 rgb
f
65.9834 92.3474 mo
65.9839 92.2797 65.9848 92.2121 65.9859 92.1447 cv
66.0007 91.3011 66.0403 90.3047 66.2199 89.3483 cv
66.8511 88.6444 67.5622 88.0049 68.3322 87.4191 cv
67.7753 88.7408 67.4485 90.1646 67.341 91.6109 cv
67.2352 91.5742 67.122 91.556 67.0075 91.556 cv
66.567 91.556 66.1083 91.8253 65.9834 92.3474 cv
f
68.2026 97.7495 mo
68.0147 97.5334 67.7703 97.4409 67.5314 97.4409 cv
67.4913 97.4409 67.4514 97.4435 67.4119 97.4486 cv
67.1413 96.874 66.8906 96.2909 66.6652 95.6969 cv
66.3445 94.8527 66.0592 93.9939 65.9035 93.0947 cv
65.9077 93.0424 65.9119 92.9908 65.9164 92.9388 cv
65.9289 92.7925 65.9426 92.6471 65.9571 92.5036 cv
65.9627 92.4492 65.9715 92.3971 65.9834 92.3474 cv
66.1083 91.8253 66.567 91.556 67.0075 91.556 cv
67.122 91.556 67.2352 91.5742 67.341 91.6109 cv
67.1866 93.6876 67.4845 95.8115 68.2026 97.7495 cv
f
75.6549 104.872 mo
74.2671 104.754 72.8489 104.519 71.4893 104.16 cv
71.3381 104.073 71.1901 103.98 71.0454 103.882 cv
71.036 103.825 71.0267 103.768 71.0177 103.711 cv
70.7223 103.284 70.4503 102.848 70.2081 102.398 cv
69.1939 100.784 68.2151 99.154 67.4119 97.4486 cv
67.4514 97.4435 67.4913 97.4409 67.5314 97.4409 cv
67.7703 97.4409 68.0147 97.5334 68.2026 97.7495 cv
68.3991 98.28 68.627 98.7963 68.8859 99.2941 cv
69.8543 101.157 71.1911 102.519 72.7701 103.482 cv
73.4769 104.289 74.4835 104.842 75.505 104.842 cv
75.5592 104.842 75.6137 104.84 75.6681 104.837 cv
75.6639 104.849 75.6595 104.86 75.6549 104.872 cv
f
83.8412 99.3504 mo
83.186 99.2967 82.5158 99.1596 81.7535 98.7853 cv
81.6018 98.7108 81.4516 98.6617 81.3048 98.6347 cv
81.3706 97.8365 81.2131 97.0202 80.7945 96.2858 cv
80.507 95.7814 80.1466 95.3761 79.736 95.0602 cv
79.7238 94.7731 79.6901 94.4855 79.6271 94.1974 cv
79.9283 92.8214 79.5313 91.4147 78.4816 90.1515 cv
78.3788 89.9508 78.2626 89.7553 78.133 89.5645 cv
78.2792 89.4089 78.4114 89.268 78.5196 89.1491 cv
79.0198 88.5996 79.5683 88.0574 80.1736 87.5979 cv
81.4269 89.5437 82.386 91.8687 82.6798 93.8776 cv
82.8248 94.1544 82.9464 94.4489 83.0519 94.7917 cv
83.1217 95.09 83.1886 95.3893 83.254 95.6886 cv
83.2838 95.714 li
84.1393 96.3849 84.2262 97.5822 84.0748 98.5529 cv
84.0305 98.8381 83.9505 99.1035 83.8412 99.3504 cv
.207843 .670588 .239216 rgb
f
78.133 89.5645 mo
77.8958 89.2155 77.6133 88.8821 77.2839 88.5606 cv
77.4794 88.3312 77.6977 88.0952 77.9381 87.8468 cv
79.3226 86.4172 78.063 84.4359 76.5501 84.304 cv
76.6775 84.2317 76.8065 84.1605 76.9366 84.0906 cv
77.1025 84.2039 77.2619 84.3225 77.4137 84.4396 cv
78.3909 85.1941 79.3463 86.3133 80.1736 87.5979 cv
79.5683 88.0574 79.0198 88.5996 78.5196 89.1491 cv
78.4114 89.268 78.2792 89.4089 78.133 89.5645 cv
.192157 .662745 .231373 rgb
f
77.2839 88.5606 mo
77.0593 88.3414 76.8128 88.1278 76.5441 87.9186 cv
75.7002 87.2618 74.736 86.671 73.7368 86.4202 cv
74.5351 85.5903 75.4942 84.9037 76.5501 84.304 cv
78.063 84.4359 79.3226 86.4172 77.9381 87.8468 cv
77.6977 88.0952 77.4794 88.3312 77.2839 88.5606 cv
f
81.3421 101.596 mo
80.9862 101.593 80.6326 101.579 80.2808 101.553 cv
80.4008 101.298 80.4978 101.027 80.5689 100.739 cv
80.988 100.107 81.2434 99.3787 81.3048 98.6347 cv
81.4516 98.6617 81.6018 98.7108 81.7535 98.7853 cv
82.5158 99.1596 83.186 99.2967 83.8412 99.3504 cv
83.3767 100.4 82.3826 101.116 81.3421 101.596 cv
f
74.6404 105.303 mo
74.5625 105.303 74.4926 105.294 74.4332 105.277 cv
74.3883 105.283 74.3453 105.286 74.305 105.286 cv
74.185 105.286 74.0889 105.26 74.0363 105.2 cv
73.9186 105.038 li
73.0623 104.888 72.2381 104.592 71.4893 104.16 cv
72.8489 104.519 74.2671 104.754 75.6549 104.872 cv
75.854 104.889 76.053 104.904 76.2506 104.916 cv
76.1263 104.884 76.0024 104.851 75.8795 104.816 cv
76.116 104.784 76.3514 104.72 76.5822 104.621 cv
78.2161 103.918 79.6092 102.982 80.2808 101.553 cv
80.6326 101.579 80.9862 101.593 81.3421 101.596 cv
81.3147 101.608 81.2873 101.621 81.2599 101.633 cv
80.8424 102.577 80.1979 103.392 79.2667 103.98 cv
78.0299 104.759 76.6598 105.13 75.3121 105.147 cv
75.0681 105.252 74.8308 105.303 74.6404 105.303 cv
72.7701 103.482 mo
71.1911 102.519 69.8543 101.157 68.8859 99.2941 cv
68.627 98.7963 68.3991 98.28 68.2026 97.7495 cv
67.4845 95.8115 67.1866 93.6876 67.341 91.6109 cv
67.4485 90.1646 67.7753 88.7408 68.3322 87.4191 cv
67.5622 88.0049 66.8511 88.6444 66.2199 89.3483 cv
66.1854 89.3868 66.1512 89.4255 66.1172 89.4643 cv
66.3137 88.8235 66.6045 88.1554 67.0115 87.4543 cv
67.2482 87.265 67.4986 87.0823 67.7604 86.9005 cv
67.869 86.8253 67.9776 86.7929 68.0805 86.7929 cv
68.2213 86.7929 68.3514 86.8535 68.4567 86.9474 cv
69.0133 86.1276 69.819 85.2365 70.9869 84.5167 cv
71.1232 84.1979 71.7525 83.7663 72.4078 83.6642 cv
72.6336 83.6291 72.8765 83.5869 73.1295 83.5414 cv
73.1336 83.5424 73.1376 83.5435 73.1417 83.5446 cv
73.1742 83.5363 73.2077 83.5285 73.2421 83.521 cv
73.2721 83.5156 73.3023 83.5101 73.3326 83.5045 cv
73.3489 83.4998 li
73.7542 83.4256 74.2556 83.4017 74.6838 83.4017 cv
75.1317 83.4017 75.4995 83.4278 75.5939 83.4498 cv
76.0722 83.5605 76.5246 83.8092 76.9366 84.0906 cv
76.8065 84.1605 76.6775 84.2317 76.5501 84.304 cv
75.4942 84.9037 74.5351 85.5903 73.7368 86.4202 cv
73.4109 86.3384 73.0815 86.2928 72.7512 86.2928 cv
72.2698 86.2928 71.7867 86.3897 71.3111 86.613 cv
70.3659 86.7228 69.5016 87.2023 69.0377 88.2497 cv
68.3854 89.7248 68.2208 91.3952 69.0065 92.7355 cv
69.0553 93.2091 69.1432 93.6754 69.3009 94.152 cv
69.38 94.3922 69.4996 94.6061 69.6368 94.8048 cv
68.8229 95.9567 68.5148 97.4919 69.2716 98.8795 cv
69.3263 98.9801 69.381 99.0807 69.4357 99.1813 cv
69.7325 99.7262 70.2101 100.167 70.7603 100.484 cv
71.0001 100.86 71.2726 101.212 71.6134 101.516 cv
71.86 101.718 li
71.9944 102.357 72.3219 102.971 72.7701 103.482 cv
.164706 .654902 .227451 rgb
f
75.6681 104.837 mo
75.6768 104.812 75.6847 104.787 75.6915 104.762 cv
75.754 104.78 75.8167 104.799 75.8795 104.816 cv
75.8091 104.826 75.7386 104.833 75.6681 104.837 cv
.352941 .878431 .403922 rgb
f
75.505 104.842 mo
74.4835 104.842 73.4769 104.289 72.7701 103.482 cv
73.6727 104.033 74.6543 104.453 75.6915 104.762 cv
75.6847 104.787 75.6768 104.812 75.6681 104.837 cv
75.6137 104.84 75.5592 104.842 75.505 104.842 cv
.337255 .835294 .345098 rgb
f
81.3048 98.6347 mo
81.211 98.6174 81.1185 98.6092 81.028 98.6092 cv
81.0063 98.6092 80.9847 98.6097 80.9633 98.6106 cv
80.4318 98.4336 79.9001 98.2766 79.3819 98.0941 cv
79.28 97.8018 79.0802 97.5166 78.7599 97.2574 cv
77.4459 96.1945 76.7306 94.485 76.3136 92.8864 cv
76.2595 92.6792 76.2153 92.4816 76.1811 92.2925 cv
76.2926 92.0808 76.3764 91.8534 76.4176 91.5933 cv
76.8088 90.9729 77.5727 90.1608 78.133 89.5645 cv
78.2626 89.7553 78.3788 89.9508 78.4816 90.1515 cv
79.5313 91.4147 79.9283 92.8214 79.6271 94.1974 cv
79.6901 94.4855 79.7238 94.7731 79.736 95.0602 cv
80.1466 95.3761 80.507 95.7814 80.7945 96.2858 cv
81.2131 97.0202 81.3706 97.8365 81.3048 98.6347 cv
71.4336 94.1371 mo
71.394 93.8007 71.3699 93.4633 71.3602 93.1271 cv
71.3757 93.1458 71.3914 93.1641 71.4076 93.1823 cv
71.4085 93.5008 71.4161 93.8197 71.4336 94.1371 cv
.2 .709804 .247059 rgb
f
71.4076 93.1823 mo
71.3914 93.1641 71.3757 93.1458 71.3602 93.1271 cv
71.3418 92.4876 71.3759 91.8533 71.4552 91.2453 cv
71.6799 89.5234 72.303 88.1554 73.2 87.0316 cv
72.2894 88.3377 71.713 89.7304 71.593 91.3405 cv
71.4959 91.5318 71.4363 91.7568 71.4278 92.0153 cv
71.4152 92.402 71.4064 92.7919 71.4076 93.1823 cv
76.1811 92.2925 mo
75.8942 90.7096 76.2975 89.7185 77.2839 88.5606 cv
77.6133 88.8821 77.8958 89.2155 78.133 89.5645 cv
77.5727 90.1608 76.8088 90.9729 76.4176 91.5933 cv
76.3764 91.8534 76.2926 92.0808 76.1811 92.2925 cv
.188235 .701961 .239216 rgb
f
79.3819 98.0941 mo
78.9981 97.959 78.6218 97.8098 78.2584 97.6281 cv
76.9085 96.3349 75.8898 94.8162 74.9522 93.2261 cv
74.9078 92.9915 74.8766 92.7526 74.859 92.5104 cv
74.829 92.0977 74.6803 91.7638 74.4612 91.5098 cv
74.2687 90.8514 73.6511 90.5226 73.0229 90.5226 cv
72.4506 90.5226 71.8697 90.7953 71.593 91.3405 cv
71.713 89.7304 72.2894 88.3377 73.2 87.0316 cv
73.3695 86.8192 73.5486 86.6158 73.7368 86.4202 cv
74.736 86.671 75.7002 87.2618 76.5441 87.9186 cv
76.8128 88.1278 77.0593 88.3414 77.2839 88.5606 cv
76.2975 89.7185 75.8942 90.7096 76.1811 92.2925 cv
76.2153 92.4816 76.2595 92.6792 76.3136 92.8864 cv
76.7306 94.485 77.4459 96.1945 78.7599 97.2574 cv
79.0802 97.5166 79.28 97.8018 79.3819 98.0941 cv
f
77.4376 101.054 mo
77.3195 101.019 77.2021 100.983 77.0851 100.945 cv
77.0696 100.881 77.0469 100.818 77.018 100.758 cv
77.1572 100.862 77.2968 100.96 77.4376 101.054 cv
80.0332 98.9733 mo
79.4549 98.6349 78.9052 98.2325 78.3912 97.7536 cv
78.3466 97.712 78.3024 97.6702 78.2584 97.6281 cv
78.6218 97.8098 78.9981 97.959 79.3819 98.0941 cv
79.9001 98.2766 80.4318 98.4336 80.9633 98.6106 cv
80.6128 98.6257 80.2931 98.7633 80.0332 98.9733 cv
74.9522 93.2261 mo
74.8019 92.9713 74.6538 92.7148 74.5067 92.4569 cv
74.5119 92.3083 74.5172 92.161 74.5216 92.0153 cv
74.5272 91.8295 74.5053 91.6609 74.4612 91.5098 cv
74.6803 91.7638 74.829 92.0977 74.859 92.5104 cv
74.8766 92.7526 74.9078 92.9915 74.9522 93.2261 cv
f
80.2808 101.553 mo
79.3099 101.483 78.3579 101.323 77.4376 101.054 cv
77.2968 100.96 77.1572 100.862 77.018 100.758 cv
76.9565 100.631 76.8668 100.516 76.7577 100.427 cv
77.0758 100.293 77.3624 100.044 77.5948 99.6461 cv
77.8946 99.1339 77.8614 98.3644 77.401 97.9547 cv
77.2487 97.8193 77.108 97.7908 76.9583 97.7482 cv
76.9885 97.7279 76.9368 97.6955 76.8034 97.651 cv
76.7067 97.4567 75.9713 97.3341 75.7433 97.1628 cv
75.4808 96.965 75.2677 96.6858 75.0993 96.388 cv
75.0039 95.9932 74.9212 95.5951 74.8488 95.1945 cv
74.793 94.887 74.6799 94.6393 74.5275 94.4466 cv
74.4621 93.7876 74.4837 93.1108 74.5067 92.4569 cv
74.6538 92.7148 74.8019 92.9713 74.9522 93.2261 cv
75.8898 94.8162 76.9085 96.3349 78.2584 97.6281 cv
78.3024 97.6702 78.3466 97.712 78.3912 97.7536 cv
78.9052 98.2325 79.4549 98.6349 80.0332 98.9733 cv
80.2931 98.7633 80.6128 98.6257 80.9633 98.6106 cv
80.9847 98.6097 81.0063 98.6092 81.028 98.6092 cv
81.1185 98.6092 81.211 98.6174 81.3048 98.6347 cv
81.2434 99.3787 80.988 100.107 80.5689 100.739 cv
80.4978 101.027 80.4008 101.298 80.2808 101.553 cv
f
76.7577 100.427 mo
76.7317 100.405 76.7045 100.385 76.6764 100.367 cv
76.2037 100.062 75.8546 98.7545 75.6642 98.2462 cv
75.4361 97.6378 75.2515 97.0172 75.0993 96.388 cv
75.2677 96.6858 75.4808 96.965 75.7433 97.1628 cv
75.9713 97.3341 76.7067 97.4567 76.8034 97.651 cv
76.9368 97.6955 76.9885 97.7279 76.9583 97.7482 cv
77.108 97.7908 77.2487 97.8193 77.401 97.9547 cv
77.8614 98.3644 77.8946 99.1339 77.5948 99.6461 cv
77.3624 100.044 77.0758 100.293 76.7577 100.427 cv
71.5642 94.9654 mo
71.5097 94.6915 71.4664 94.4146 71.4336 94.1371 cv
71.4161 93.8197 71.4085 93.5008 71.4076 93.1823 cv
71.4064 92.7919 71.4152 92.402 71.4278 92.0153 cv
71.4363 91.7568 71.4959 91.5318 71.593 91.3405 cv
71.8697 90.7953 72.4506 90.5226 73.0229 90.5226 cv
73.6511 90.5226 74.2687 90.8514 74.4612 91.5098 cv
74.5053 91.6609 74.5272 91.8295 74.5216 92.0153 cv
74.5172 92.161 74.5119 92.3083 74.5067 92.4569 cv
74.4837 93.1108 74.4621 93.7876 74.5275 94.4466 cv
74.2356 94.0774 73.799 93.9098 73.3433 93.9098 cv
72.6458 93.9098 71.9032 94.3021 71.5642 94.9654 cv
f
77.0851 100.945 mo
76.2253 100.664 75.3954 100.285 74.6075 99.7892 cv
72.8957 98.7129 71.95 96.9064 71.5642 94.9654 cv
71.9032 94.3021 72.6458 93.9098 73.3433 93.9098 cv
73.799 93.9098 74.2356 94.0774 74.5275 94.4466 cv
74.6799 94.6393 74.793 94.887 74.8488 95.1945 cv
74.9212 95.5951 75.0039 95.9932 75.0993 96.388 cv
75.2515 97.0172 75.4361 97.6378 75.6642 98.2462 cv
75.8546 98.7545 76.2037 100.062 76.6764 100.367 cv
76.7045 100.385 76.7317 100.405 76.7577 100.427 cv
76.8668 100.516 76.9565 100.631 77.018 100.758 cv
77.0469 100.818 77.0696 100.881 77.0851 100.945 cv
f
75.8795 104.816 mo
75.8167 104.799 75.754 104.78 75.6915 104.762 cv
74.6543 104.453 73.6727 104.033 72.7701 103.482 cv
72.3219 102.971 71.9944 102.357 71.86 101.718 cv
71.6134 101.516 li
71.2726 101.212 71.0001 100.86 70.7603 100.484 cv
70.2101 100.167 69.7325 99.7262 69.4357 99.1813 cv
69.381 99.0807 69.3263 98.9801 69.2716 98.8795 cv
68.5148 97.4919 68.8229 95.9567 69.6368 94.8048 cv
69.4996 94.6061 69.38 94.3922 69.3009 94.152 cv
69.1432 93.6754 69.0553 93.2091 69.0065 92.7355 cv
68.2208 91.3952 68.3854 89.7248 69.0377 88.2497 cv
69.5016 87.2023 70.3659 86.7228 71.3111 86.613 cv
71.7867 86.3897 72.2698 86.2928 72.7512 86.2928 cv
73.0815 86.2928 73.4109 86.3384 73.7368 86.4202 cv
73.5486 86.6158 73.3695 86.8192 73.2 87.0316 cv
72.303 88.1554 71.6799 89.5234 71.4552 91.2453 cv
71.3759 91.8533 71.3418 92.4876 71.3602 93.1271 cv
71.3699 93.4633 71.394 93.8007 71.4336 94.1371 cv
71.4664 94.4146 71.5097 94.6915 71.5642 94.9654 cv
71.95 96.9064 72.8957 98.7129 74.6075 99.7892 cv
75.3954 100.285 76.2253 100.664 77.0851 100.945 cv
77.2021 100.983 77.3195 101.019 77.4376 101.054 cv
78.3579 101.323 79.3099 101.483 80.2808 101.553 cv
79.6092 102.982 78.2161 103.918 76.5822 104.621 cv
76.3514 104.72 76.116 104.784 75.8795 104.816 cv
.164706 .694118 .235294 rgb
f
71.4742 92.3322 mo
72.1163 91.4503 73.0279 90.7609 74.1627 90.8947 cv
75.3439 91.0338 76.3653 91.5744 76.9186 92.6325 cv
77.3878 93.5299 77.4166 94.7038 77.0426 95.6349 cv
76.7252 96.4245 76.0948 97.4767 75.1163 97.2858 cv
74.9698 97.257 74.859 97.1002 74.858 96.9552 cv
74.858 96.8488 74.8761 96.7584 74.8976 96.6691 cv
73.6603 97.1686 72.0919 96.1569 72.2765 94.5734 cv
72.3859 93.6403 73.1373 92.8751 74.0963 92.8375 cv
74.8082 92.8097 75.4952 93.1427 75.838 93.7179 cv
75.7164 92.758 75.2042 92.818 74.3072 92.7804 cv
74.0138 92.7682 73.7281 92.7658 73.4352 92.7287 cv
72.9069 92.6623 72.6803 92.4953 72.2862 92.9411 cv
71.9088 93.3683 71.1285 92.8068 71.4742 92.3322 cv
cp
.27451 .968627 .305882 rgb
f
71.2877 93.5871 mo
71.4161 93.4889 71.5729 93.6208 71.5846 93.7521 cv
71.6173 94.1208 71.443 94.4435 71.4103 94.8112 cv
71.3649 95.319 71.4532 95.8122 71.6637 96.2775 cv
71.8131 96.6066 71.3361 96.9069 71.1744 96.5724 cv
70.7862 95.7711 70.4547 94.2252 71.2877 93.5871 cv
cp
f
72.858 96.6847 mo
73.3805 97.0993 74.0402 96.6784 74.6363 96.9577 cv
75.0597 97.1564 75.2189 97.5744 74.9528 97.9826 cv
74.1842 99.1627 72.6368 98.1466 72.0865 97.297 cv
71.7599 96.7926 72.4415 96.3541 72.858 96.6847 cv
cp
f
77.4791 93.6046 mo
77.4811 93.7331 li
77.4791 93.6046 li
cp
f
78.0299 93.8488 mo
78.0709 93.7438 78.2325 93.7785 78.2042 93.8947 cv
78.1505 94.1134 78.0973 94.3322 78.0431 94.5509 cv
78.0011 94.7238 77.7184 94.6417 77.7809 94.4826 cv
77.8639 94.2711 77.9469 94.0602 78.0299 93.8488 cv
cp
f
78.1066 92.526 mo
78.1085 92.6544 li
78.1066 92.526 li
cp
f
76.7076 90.3126 mo
76.9943 90.5187 77.2711 90.6657 77.6085 90.7799 cv
77.9088 90.8815 77.6993 91.3288 77.4513 91.1666 cv
77.1315 90.9586 76.8644 90.7262 76.6183 90.4323 cv
76.7076 90.3126 li
cp
f
72.2462 90.8976 mo
72.5558 90.5304 72.5958 90.2365 73.0065 89.965 cv
73.3248 89.755 73.6622 89.6198 74.0343 89.5338 cv
74.7755 89.3615 75.3844 89.6881 76.066 89.9503 cv
76.1925 89.9987 76.1481 90.1749 76.0133 90.154 cv
75.3761 90.0553 74.8092 90.3292 74.1901 90.4704 cv
73.9029 90.5358 73.6188 90.633 73.3409 90.7287 cv
73.0944 90.8136 72.5636 90.9274 72.3761 91.0612 cv
72.2731 91.1344 72.173 90.984 72.2462 90.8976 cv
cp
f
76.9401 98.1051 mo
76.715 98.3722 76.4005 98.5915 76.1139 98.7863 cv
76.1007 98.8078 li
75.7296 99.0885 75.3448 99.3029 74.9132 99.4752 cv
74.8536 99.3385 li
75.15 99.1964 75.4122 99.0265 75.6671 98.8366 cv
75.5333 98.7291 75.463 98.5348 75.6188 98.4035 cv
76.0182 98.0675 76.3717 97.4923 76.8766 97.3375 cv
76.8639 97.2101 76.9322 97.0739 77.0978 97.0719 cv
77.2384 97.1178 li
77.3292 96.9191 li
77.3453 96.8922 li
77.2848 96.9635 li
77.1857 97.0534 77.025 96.9445 77.0934 96.8205 cv
77.379 96.3039 77.6905 95.9459 77.8634 95.3571 cv
77.8907 95.2638 78.0279 95.3004 78.0094 95.3952 cv
77.9581 95.6476 77.8741 95.921 77.7701 96.1818 cv
77.8551 96.046 77.9415 95.9113 78.0162 95.7702 cv
78.4239 95.0041 78.9044 94.1964 79.0611 93.338 cv
79.1403 92.9069 79.7277 93.0499 79.7716 93.4245 cv
79.9083 94.5714 79.8951 95.6188 79.2306 96.6139 cv
79.1437 96.7448 79.0358 96.8742 78.9308 97.0036 cv
79.2233 97.0797 79.4806 97.299 79.5939 97.6247 cv
79.8815 98.4538 79.4303 99.2614 78.6964 99.6784 cv
77.984 100.084 77.1627 99.7565 76.443 99.5304 cv
75.9503 99.3756 75.983 98.755 76.4298 98.5729 cv
76.7535 98.4406 77.0338 98.2345 77.2945 98.0011 cv
77.1783 98.0299 77.0626 98.0622 76.9503 98.1051 cv
76.9401 98.1051 li
cp
f
70.8946 97.3058 mo
71.0104 97.3043 71.0128 97.4845 70.8971 97.4865 cv
70.7804 97.4879 70.7779 97.3073 70.8946 97.3058 cv
cp
f
69.2618 94.2819 mo
69.2916 94.1588 69.4542 94.1735 69.4943 94.279 cv
69.5319 94.3791 69.587 94.4674 69.6486 94.5509 cv
69.5797 94.0817 69.5514 93.6051 69.545 93.1344 cv
69.4156 93.0421 69.3434 92.8869 69.4195 92.6886 cv
69.4703 92.5558 69.5196 92.3952 69.5714 92.2257 cv
69.5763 92.1266 69.5724 92.0202 69.5797 91.923 cv
69.5944 91.7296 69.6886 91.6149 69.8033 91.5338 cv
69.8751 91.3541 69.9562 91.1837 70.0548 91.0373 cv
69.9078 90.8532 69.8693 90.6061 70.1066 90.3986 cv
70.441 90.1066 70.7394 89.7804 71.1481 89.6041 cv
71.2506 89.5602 71.3888 89.6671 71.3795 89.775 cv
71.3404 90.2213 71.1158 90.6149 70.9425 91.0255 cv
70.8707 91.1217 li
70.882 91.4958 70.7179 91.9254 70.547 92.3166 cv
70.422 92.8043 70.2945 93.2721 70.2394 93.7887 cv
70.1529 94.6032 70.361 95.3405 70.7838 96.0338 cv
70.9718 96.3419 70.609 96.6325 70.3517 96.5329 cv
70.2804 96.9284 69.7364 97.1124 69.4733 96.7096 cv
69.2408 96.3532 68.9474 95.9391 68.9122 95.5031 cv
68.8746 95.048 69.1583 94.7086 69.2618 94.2819 cv
cp
f
72.0997 88.7951 mo
72.5231 88.4694 72.4991 88.2921 73.0094 88.2487 cv
73.3561 88.2189 73.3966 88.6642 73.1764 88.8351 cv
72.8278 89.1066 72.6051 88.9787 72.1637 89.0182 cv
72.0314 89.0304 72.0162 88.8595 72.0997 88.7951 cv
cp
f
76.3732 88.8908 mo
76.8224 88.9767 77.2687 88.9992 77.6539 89.257 cv
78.0074 89.4943 78.2599 89.7995 78.5245 90.1251 cv
78.9435 90.6398 79.8116 91.6935 79.0118 92.3253 cv
78.7931 92.4982 78.5221 92.5001 78.3121 92.3209 cv
78.0113 92.0636 78.0875 91.5988 78.0475 91.2458 cv
77.982 90.6637 77.7623 90.4625 77.256 90.1657 cv
76.8356 89.9196 76.5323 89.5832 76.1588 89.2707 cv
75.9728 89.1154 76.17 88.8517 76.3732 88.8908 cv
cp
f
71.4469 99.0182 mo
71.7057 98.9874 71.8331 99.0602 72.0714 99.1837 cv
72.3966 99.3517 72.7018 99.4787 73.0621 99.5539 cv
73.5553 99.6569 73.357 100.414 72.8649 100.311 cv
72.2657 100.186 71.3175 99.9357 71.2535 99.2165 cv
71.2443 99.1032 71.3483 99.0299 71.4469 99.0182 cv
cp
f
69.5372 96.9464 mo
69.9322 97.3986 70.4352 97.6227 70.3048 98.3234 cv
70.2775 98.4713 70.1212 98.5226 69.9928 98.506 cv
69.3195 98.4196 69.2667 97.8693 68.9762 97.3917 cv
68.7687 97.0509 69.2613 96.6305 69.5372 96.9464 cv
cp
f
70.3727 98.3058 mo
70.3741 98.4264 li
70.3727 98.3058 li
cp
f
71.3424 98.8239 mo
71.3444 98.9523 li
71.3424 98.8239 li
cp
f
74.2413 99.5724 mo
74.5597 99.57 74.8361 99.6745 75.1407 99.7643 cv
75.3282 99.8195 75.2535 100.089 75.0641 100.055 cv
74.7482 99.9997 74.4625 99.9708 74.1764 99.8258 cv
74.0553 99.7638 74.111 99.5734 74.2413 99.5724 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (1_head.eps)
%%CreationDate: 11/11/2019 9:55 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`IdVX=\L$CocWf*`fBVBd5P`ENJ+icon'B=\=3HbPma[J(^]df=`IP#3<J`otdc7C+5J4LSq<!UeYFaU"
%s8Cp,o2i-1s2FEqf-`4q^NoCPr8u,hX4ug`?i=QFJ,\NnTB2O-?_srESisj%H1h$QP;bS64WD;j]_ES_Q`K0OpcI6Rf=uVT9jcbk
%Gp@5TpVuG^q>Du@o-:)sa%ua*pUB$Dqu4k+-Z>TiHMP=)L/Y:*Q1`^8hL>2eIj$cJ`QlTq;u,PCGl,f_IX(i]T=J1PP/"a,fabLd
%YIi\?LR.CS<L*kM*fD'803:Y25CW%i^\+tGJ&C1B0'o;rkDM!RG_Xf`o!40FIdQM(GNT!?q'f[64o"m(G;#Q#rq#jp+$j0*LYEX&
%4b*%b<eoOCGEm-@oBscE=VmP'KeeU5;,$@,L=16V=g"2hA`lCkW`;7$V<G*t9Z8Vf7HX<aB=EBd`U:Lu55F@7[7SC2lSi07qu9(d
%>jthB8S>ZrY&Xus:AFbucYm1j_ol\2j<HJ8RL\e)?@?nl>cq:LFS#D:"_R$]rkG#oLF9:?]mV-"s6BCj(u8QclI(1VgE0c"qT3)_
%+j80a;h"JsmE7`,qB(+JT8,l3d7^+-WuU4ACY^ia+TltB9JGZ,'.GAR?eba-kVk0\%g:euOn@PEIeN08QbR3"->>'g-G_?B5Po&`
%"3'`/rZ<5&<Mr'`s0:1A??l)(p1<\1kJ'4YAsuH;eSi1?UJEPX3P9ZhJb^Aegrhg+.9#U/X)IC7lTb/+\]#*:fiPH;lefF>$_G&M
%N?:C]Xo>JPrPe@MjHmW/rT]1,IeE9(?Til1e*CpYrR:0%J)!59oBN^lof'M?rR:e4J,F-W;pP$k+'q0W.ef$SO)qIq4T"PZn$o'=
%kNglnr`62`5PopPEkSCPd7ER4[.X(^a4od\^70#Ak<7md?T`i/o#^2<Ikbj9lXrH)Dk9KaXgc6*[r;9@TR2RKHmdae]C;>sqnM6G
%kuSC@e?>LX]Q4Ih4aI"g0<\^^)$BU1q%(u`Y?kSlrh%qhh=8ZQhnFC4Vt57=lNc>?M^NHB,cf,UbAY*:]qGC1HPjH!D%HI5_is90
%T7-V5a`i5\p2mcnrPSAZgAU!\X68O2(OeT?2#iTN_NbXWka-dInP??[5PtH!Gg+t6KlkYIVpB:rr9O)qDBC3RR.d^jrpHWVceYe/
%'@&g-'W5:/?>oisqm:@nV'jA<s#iO,bGX]p9@)8iC-9P*rs_/g&+\tSB/4c$;,D0okKCV&&S:ItBE.UaM2H3Mk@ZHeE7fU7_m;;2
%leHm\i]EO5].a3VjL\XAS:9UelRgT;ZD,Sof$AjFp9dTFpAN21P[D.Ro$&sn/Unp:N7]f3V7VBXo+q3%p@b=Fk&S)8f3u/gk4,3r
%I/IZg9"m3N;p1HLX^JP\prDB!j^1p$&,qm6`:/o(9FL4\\GOD"qq%J(-I^0)qJBVEkY67!*kQlZS_ZS*dj-isZJ[pN,JO/ug[)]T
%W&I;?j@.Ke^W.^I%=O05EL#0/FS?(#(I,S3meQ8-m=+g+aieV-DP"=RKl:+GD]+$4.6Emc\(60*p`'61@rN-K>^]-WTqs=N(Nmjq
%Ii^hccIYXJGTEsc[?G*7-TR3(hl[oIC<K=6Nu"1&:6)0BlETcXr1]LGCTP7]E`3HgZm&s^Eeu(VQZ(qEb-B95Md/&e;N<bJ08I_D
%?IFfQVf\0`OS3_9UJafTNg-7X508aS0&FZhM?c0&<F^sXLmW0K%!)-Q`$O2lP8qV^O@)2ZZr#j45otiGA?<HAEC%/`/H1CE8WKQ1
%aK_)lg<3"_lAHX,aX$kKGYB/CiY2(jLV%OR3KA.HV8N#T.Iu"5&k.g3*fmt:PK2S_kE[&I:<QLpKDaCUf5`\h<K>9J/^]TOO*LTd
%s5iIcMn*j&l+_W-c+j-Y90`,/pg_@$Inl(rq<pWKrufATIP62RpMDPc\hA*"IE!u-K,j(f]^Un#-TMZWi,fQilRHoWaUnP@=,ZEA
%HJ4>u8!0Er*&nO>,%<hEJdeUmiT"k;3/T7-jOdD&Xt+t>Q_IaHRP9+5>p<X;Ye#XTS]Xh/*9@.oo)I<^2#1)3s,6f)J`&dM7/f<'
%UF]uu2if&;,bF'nBfsJ/4^NWZAJ)Js,+4P;/tJ)"BC^=X&rJmtVgWZQ:]0gE4$&Lb/7#_l:2U[>as)+XG7oH5,,n:klQi'=OL\\/
%"rp(%AF@AaT@MpbT$idR9UI:cm$LQ=I6kTY81ttRNV$23H!@*uO!9lbAp'EE\<[`<Omrc6IRQ*1Yt8<F8-^%..["b\5$m-&N-LJP
%,#WM713F5_F#!ooFB+I>D26$f.,s]U5rp_BjT59XO4VGNnT^9[b&dug`$:n3W1WD)iH1;OIr8d(Gu4PY$n;u(ST_?3NoSAu*(Q%7
%_?#88n8f^?&>gjBQ/pET9.=Zg\n_mA#iUp*LjLdSFO12B@[eJf&ECfl7%Edg/Y0/EO<:GSD_S5k5!>f2Uf)o*'g+`n!e0joAOi.^
%2s`MLc+W.*$[Wa9:;+l.=RcAdc98'TVX4[gRb`l.+0:[T5t6rANR#6RV/_J&d-YkD%QB.^BHJ)ld<%,L;3#0SJUrnY^amN7i.<3M
%rJ2M#T]JR+b/tmF,MJL%K)q-Q_FMd'iMG,!_E]\3Ng`tTnJF$L[l<[+)h)t&4u,oF5g[>HlKA3rGe>.?LW`+B6D%^)&E/?<i^`'q
%915U12fpo<:)8]h-g?c!KL\DA3_j?^CeX?:WK&E7TOXo%0Mm*GL'(Go#r2_8+VFo(K(VC[&LnPY(`*u<*%7CJ272NJGbfXHnUjj4
%B%[j^'BPOYgq*E+$(PS29AqFWJT<^qOc#Ee-o*eUUWMPX83\A?QH:bEZWrr0p<aID3/C75b:PGWZZKssl1#rfMoaC>K]O=SFtJcW
%o'';g5)Ma;+^2D.@#<Rki_oJZFiY+_/h;s?b"81Z"m)2r8^ZY<b`G9-!(P&GbRc<LZPeAV6f(dg$]E'5F@PAdOee$?(Q?(1*+WTa
%876GY>T@j"=L]Ur\JSRm)(8YEE>U*a`lZ=2PA;sI1<kt)dcb5dL.QD"M;?W+WFh;])C/&e&hu7OOR143JME>3'QGrreGN.lUXJL"
%Ao]je23'HJ@;%L!JfL>@iNJ!oY1nN>D?^_X<$QA6D89F9!ABl?+*f(g\j,1$KSi_+1iLl^VJdb2TLb07,!&)e8Q"S"Bj:_d<aTf!
%5d8`HGJ/M;]Dar6J:Dh>o#ZgEDg(#A'7(C2^r:K-IHo*C[m[m]#>):'PF6n34m^*VLn_Xl,of<'_bQ"3?ql=A3,F:"@_!9e4c-l1
%7!OoOYp^>!l6C-M:SeG!]9bBBeS1f\D6t=^/k&o09h$VQ6C#'Y3^!)s=!h]iIWb2J$h(alp*DYcWp=D[RYiT_3)lDA/Q6`9(1(!_
%Wp3R:WOc#^=,,F5'jq!olQN]r.`/=sfAgD^9g>k,:PZQ0L]I338%<f^H]GHrW(-5;o"@Q(s,]>!pUg91LYVFYB=EX9ElSEUp[I57
%*Uc("nnjo\PX)FICR(+IPstW)+BFnFQG"hGcn1hq8>12eaKft6$XAdi/lTZD7M-e.R[+9P8d^PARX/T&_6g7"kk6jo:=M5&E>!Ch
%V:M?>-B!"*eJo%*Y'j?WCd1TK29=8e)ogN@LsZqK*ORh)m'sV/Ar:_@/=80#C8ol3lURG'ZYMADE#cl;S97sng@V'&[LAM>9cD=+
%s&tKQQ6VtAl-;T^8.=^rUHJ=MlQLJRms2:L+*,DGSFO>6KCATn+1^DZrqVUpa*26^8Y8roF*P101u)WDm&<e!)AIU_`/(QO"_G)r
%eKS=s'6?7_DQ1!Hi&EbYMij%ZUeeoTFQO!T2t29UdWN^6<N`kd*mDkjSS=?C[#.0Y^p6#F0PctQGOgK+;=1(ncjDn:>%Y9nU/B(Q
%!GoY;l?_TqN]G]J)i^V9e4/b?p!/s0\o=0R*lA+&VNpR6-;>e1]W8a&Ib_-UhQ?H7kkKPGJ#PO/X5L2,%LiIB*g%LFVD_A$FtLu>
%E;gfJ/G;;N>;Y`u(b[k)`M=EtMhZl/<2nmf_f#&-R:XojYa`5c,b>kf>8CM"8TL3j?(eoa"bd8U5hHP5VdNVFTs4ZS!&3"6_(E3m
%kW*=e6I2bGaJ*i&KE\L/]s^8fL.EOD5h0+S&ZLd?#*\>5C*CP'<NgM(dH>`re#pL1':V*;H<VR,n@;TGCA+00%qt:DS6NJOO''9o
%3F4[?Q]F#0Eq/XXei`S\%lr^2%m#aOn:M4]j+G\VcZI41;/U8hN]2;f%*MAV#rh9oF#qIj2jk(GVP$$-*029fJ4/u`*^-4Dj'b^p
%1_Tk3"?up82Yu!mTI1jX!1n^&!HosBWBfX/YqcJC(#h'#Es$:uZmcbZ#<*_+D,0"9U!4J11jJW^,>K853'53\0W+uC$?[iNWGq%W
%U9KoU-X]`0`C>j,MN.`<l7=F>j0D15c0bmn?E;ea(i?N;/K`,KD%-:$EJUa;OK,>:.<Z*o<0'5N3m?#P9fK':3,%#/IPde3fj_Y\
%&Z6jiNq4@%*cf:5,MjL0k+:W*f&J0Za77!di?=!3nNl?o"(tn!jGja7pHQtEDf.aSPg:90ZUXbl;*NMN5AQM0)We:pq5dFWh&T4b
%N)\m&J$/h?j+#/jKd'I&,(;0Y>U/>j\_L$O<+IVf`@]0*^$q?rW=#9[IYc=F"NptE$S8%,`ZrctqjH,C3Vh?^Ga7*LWc73HrL+r)
%83ZM?EYWsPRqp<!f<<l'+,kr8cR3]+j:f$tEj;]#qZ4Y-<G+.IoW:"E1U:"<,tO'Q,)SB:0=F!QA]d_2J,]B,n]^sj3:9b-#Q9t'
%T*]'XYu-=WX@s>&:`L`Lf!qQd25TC%?S2]IVmr?GX;$_;-JhBr<rN7Q(XcUSi`h*&0-frIln9RB!I(KsN;?=oci/qHqn8W1pHHCr
%EUiT&OnQ*fZ:VR*KRJmiA47*m8sgE'EQ9b6Op0[YiaNfcK"FIqM?<t?#[^$;\dI^8dUh:1!kOZUX#YEi#im1?Fj-bh=J2[Q!7_Zi
%.2lWdi,'f[MsqBIg2.^A2T=*[/<A=:"p9G0@X5#CZ[)ZYb=!.@<_4N/<HD+S35$3_WLBHjbtW&@QeF5o:GR>obY?Xce=N?P/41.4
%WcOJ@1JCnj>5^J7EMGOpNuso.3R$nP"Zt^'dRZ4G>h8:>mi5'iW4B)&Z,),I*leYDrQ$!4rS61Pgh3%WLH#J#D>qA,B'Ps.ElU7Y
%+*W+Hj83/n$$'b4*5SLeq?G&$)EcU_;eA@V-MngO]"OL);>nr\@M8@T6!ricoPf,QZZBZMl"21BB%':tlD2nU8t(N@HE%JHY#!9M
%m\r6],RA-k[AF4UQ5N*Q:IA4"2*=u]Noio'%@p_Ur7V3H4\Y965TF2Z%=@h'2ZhXW!_e.K$5ruSjH<re+LQ,5o$IqJ?S"tJpGh<r
%[-K.Os3QBdU()H5Ia?.)=nuA#W<Q$@7ph<<N\s^Q7[*iG0`T?hj^riJbrKQ92tX$gNuoC[Kd5H$Uj!e]m[,)DPRBuE5NIiKg>6kW
%G9:kG#FtHNa+*G;p4A^o;o;8[>Bkubs+_&rjB47HQ5aS)J'[XL=apC>h9Xl*d115@s$Li(=)]T^V2(tVT^*f/j>G85AGTX7Q<%*Z
%oDT1u&pnL(/"M;b*E(#^;VJuZGG$5/gFJMq"d1Kh8B$U1k\($WjGnF-UD5>k%idV4JEDJld)1C&HSUObgE(CUZPHUaI$@8/h8'U`
%o&W7,GgC:lo_=Jpa"nk8+Nn`;af9,o(9rK&e2C=.o*Bbc>/YMHZ4[Id86U_#)C2FM\i.6cQnG)_8%nW;.Z[]W\lKib8'THA7sCtn
%DMD3'hUES=b+i9ieFf",i!P$:&-^JX=c67]9U0a[]gVP+5d`@i8'@gZH(!sX7oi!Y@/7p1l@TgNmk#WaR=<WElG>q4eT=u.*=Y[Q
%/@bBXW]Sa\V??MTY#I=uei]2)C15BHUWFk::pV&*FHl%2B1G!Emek-H_hH"cHan8>eCY9pW7g'R4FZq,oB\HMqiEm'i2lZ5rZg<?
%UM3gK/D:<i_Um"UXYNI(2%RVdE05:Ef#Pl[HL(lO,<-*k3XHXS9N(E=1"@I*'UE;]KrFPI$?;fS3jP2TSV:i[;)[.3Ksd/5op!Rq
%OI-8^^$3t*AQ7=aeB1!QcQ0"N%NSl`)C>%s\i2od@m5W@IaNn,248cDiL-dc!B:9d^`X!Ja-mQP%i%b*0W3:"+>GI]p"1&TCfBm_
%AP'6<c\n/C'gZ+XRCZU+jfRJ+m?*Ik+\+3XdaZ2/3)8p'jGr[kkH2epr/a"sC&>F#o,Z`OGb7eN@h5j\f7as7@TrtR"f4l:^&Wo^
%;/C_ki*'90+klFZGF3tg0qH@sUucM7K(AZ#Zq<F%1foA/@^Y-&.a8kX'XYu"cH7TuU'_H6LkZor(#-$OD1P,/k1USQ[&L]I:CC#6
%YM=+MZa`rR2+f?'0<:Ii7r._7.m"13Y=1#5\%&3>"Sn'[[PPiWdR++;BfK](G3bF:">Xq84*Ac9G`kWcAC`\Vmiuh'Aem<6hG-U`
%+pH1JX_L\HGU%Kb`I'hILVsO[8iQqm[YdK\n(rndG%BPDI/"liV\>g+hY=K@3l-.Y6f9(n/:>c7nfL^-[&&lD-V1Gre!kuqj<?4#
%J*QdiU>`)-7dbM5N1V-`c;F!L)rk2kGf`@gCS\`"3&flEQt_F3/:(Fnj(,%>d883')._PK)b-58X&2?mN6F'O)eRIPX'%?MAAO'S
%gb?[r%$N,Y-J7uF]o%qZ,VudV]]pioBc'\09M9-q%%.'Hior>hS^uhke3e#I3h8b[_)d>:XC>W^^thA$Gm`9-ZnaQRV+`.64ih/m
%7cjiX=\MeKQ8Ldk/M*g<0uo,-#%=uS>X$\O@L`frh&&;6;T%S-0mSRP;gsMgReXSoCI!stCL)iD=Hi>+_U;Q:MYoBN/SEgnho+_&
%QKk_u\cCPr9<4DK/dt8EI$0ej3:<+Kk7>5Aa02Z?`39-1q"9Gfp*aUH5WX>5'O#o(9Hors2\sb&Y1#sqUJIgL9rL0$</1b*-Ig&5
%BsT03;f/(/Bm;=?nmGM5jkOA150N5fB^tudO`W8;P4,[P(,Gtp-UBgfKFuhSP*?T]Ng,o;es)+u0+qi"&#2e(A$QQF(fTgXe$'Cp
%NM-!#5&gI'bKe:QQo/@jf&br?MU2ad_`.k-XO`WkEOgE)>HD%>gZ,D%*A[H_j7&Ap_5n:DfT.+okT*1I;)(:><W8<SW00\i:8pB1
%k)hNpQKbc'Na#DNVV\N^p7tYUPQMc^dB&^-6:F["]9>ALg+4&J?%DZ8FK=(HJRjTmJOQmdb]_+(8T\RZ*(c3inHWVLdKi5'+bCT.
%/4>F$aGR'uRpo":Z@Qip?k<>GV)LMSL^f8F4-:;O]?fVbO;7TJ5G.E>Du5QE,7b#Y\\WZQ`WFp/WT]RK!1=E(9(C#Z8g7bR.(VPO
%C4T,\dU[OBU]tlV1Eg/)K!;&4@,RJiFiI6JHDHgk:,=*f'A:1D58SAb]3$uFJ^-<#?nnhSc1,bm1oJh*]eJ('D[3NRq<#W)R9A_@
%o$7'I4r6[3Da$8J+@)&Vo[(`PGFoYBp%h/D:Q0G1s&W6ZFo;RZZ,(!)I.b>AI0WmlmiERe"u9jq<Zcg@0iWUg6K+NRr7FeikT)$H
%OfDMbA@3Wrh,IW\XXt"0p5C[7k%\kEs(M1o1B.'29oCi[`Yq23En!TV_p."(lBlV<3U+(u)R@)^A0X7-*G_oHs&n0r1la\YdLVb1
%X#.!qb%t:aq!_]Qk5:S;i5-fLZO-8o#DonGleV&/%o'/jGJ3'Z-eO^+KllQ5O'M*tf1Wkl]@l^LC(9aG4oBOi#s-=jG9(VD4M#mp
%K8"]kJNL##+ng4nDrD(NH<XJ7Gti7Ie@?pa?=9PNEqbCsYHq*f.4oa_;&Lb<aqmu'QC,S4M+9qf[?^_ID`I8$MVJikDNTKkqH4]4
%Ert'DVk4DsqV+"2m=$=pSWhEPog"@Ij+`M9:&.eMBhnRhp11V<`*Z7;74;tH7@Ot4jodBWh::+=(ier5&:Dq?JoNIn\7_nuQPuC>
%;M2IC_,EZS%SI.X>?^OP`8GtUK'srghjXsh'Y=l:/gLUMjM<p<q6P(O&!OoE%1\s7"n.0IB4f&n!P^M%G9MK\:Y9Lok8^@/N`aRk
%ZRml;P&2)^cFIYtHp_*AHd6qZcBpGYJ%=SD#+1IXE5<GL3'T;jMJ/"0"uNi3]T!!^mH2e3H?e2j]a!9*-=$B9A+3r5J3Z<b0MM0R
%*k:65W),"3%P,[_oO0D);#Sup\rE<Y%aI-#Tf._rM?i$4RXSJR@="I_h&DhWfqsGZ,qaX*Fn&c.ir4[V&hqq[hI9&J;tB#sol<[:
%luurkfF>[<Hg%IO6<=%6OQ\c1WI3VE'SC:47qC+]'sSNh&+?sjYZ'MG0/;E4-/+A((G!3`r#Snt,t<Z"9ifKKKoTZd#;!ANkR>\C
%f8-!LFFDO/+,b_tIh;gMk-G?"eP%AGfA>;[)fq1,RO_1p>XrpON1MQJ/ST;d%U(eGY`6[!N'4;4P@>+H!umLD^#1V`8AVZJj(<>Z
%ljYlI]dD0^]:[)kcgO$SGL$RT;iZQlJ5![&!s$HkRGKis*_?;pAuDM%C$JZHb;8RaRGU,@gfG/r%VPN3GOBt['k^>+hf=9K]sP_'
%\qK(*?Qjp@9D$@i4sDrllJTEt;G).G^rP5!kFdmDGZHIF-V>5*M,EH!bZkN(NJY#qjtBb/J(/=!G".508KWL?k&HiPQGZbKF4mG[
%lFWcUa!p<&l&P'JDDfnKS!0lbH(Ue_bsO8lLB6%e^7!V/S=+l_eE`OA4h(4?N2'iO_'i:69]S9\aP#PU1Z_*P4H>_II+gsr1tr$`
%l$gPY1t1F)9pR7F=YIrK(0<&faDeqd"[+ns/X&:5H!T>s1.?_Ub-Yb?,]7Y0L`SU5:;UU4Dom!D)_V%1..?9c:TrPHUl!T+Qo9aE
%`Um8M-;D-%%%5:*2FSe<hGs18<P8g:(P'So5CPH351WUB2_;=Y0<;K[UR,E]&dg0<anE-":Aj^t[hY7$`HJaPNEr[s3iaeOKF_*o
%>BdY^6UQ5)ggCnK$eWVl!j8gt<G"p979#)@4FYfMP_#[LZ*uu6f)nCN)5Y[D;XsA"UknYAo-TN-c(`kQ:n2)ngm:0TbuR:DbS_CG
%mucIIjRnTrk06ck4mH73aT7YgDI(]fF(+f]3MoD<\`;Y#=0t1bE\<-tbLs06&)Q9uCDifdB8*KBfN'XNNFRQKLOF.\=A(<EQI.[A
%a0V"bD,S8[A\kTkPA2M_G3SMJDYr:S)<d%^],6*L(%CKo%@\@$jFg;5%6'\CBmP-1Epo-!e[);/pc^Pe7GX4tHno'QEjtF1YkQ<*
%ZF"p(<^WH!T+AKf4H9dC"<KoY9qA2Aa3_ID2ag:[kOB&8MZMqVm!!iq?+T3_'<S&]Wik(,m8pIO80Wp6G:MCO>IT.441HeW6auT8
%55[&0*hq+MAK#J&XdAo**"59k_(7N"12FV^J:5f++)C9*MoK(XXZ(T67\\ZePfm/F%i^RDop7T/adWT'$>#Xp)O`EWD<%PEXf#cN
%h6k7N$3H;_R6^h@@W@:jG!b<),t6`M3:g$*037CZ2(_pk+'f9YoKC(:2l5`FnV>Al@%4jo?p1(b#0ut@>N;#.RsjQSD4%(0kIR?S
%hu99McM)0qjpc;+L,S@021<XcX.Z@*h?+'gdcH[q"_[O9VqLLdZ'CAY3LPiM;N`AfrgFO'>JE3m?@?$Xl<#J4]Mr.!):k@Xgs!U0
%j4LQ\9gPR8N3iePk"q43d:Dfa-0[,P6oPuJX80*i4Em;S,=$\L4^4Hkj&K3*S=;G]f^:XVD8Sb\F\PM7AS[U3X[K9td7VBmDA&\u
%Dfj*)V/)7!/e^^/hK^RhCT.!9og98<H4.G6$`:AWS3B]a4icj-*o`Yk/Cr2L1c^lMA>>nE1Rk2X-maGU2eIuZ0hqNl=Dl?'*K,%N
%b/QYoQ6/#9^Y*"cNRi4l%W+G,#PUJ+B(m8Ro\>V'O2)_Llq,+llZj;^6T9>U(QVDO'Jadc\[)7k:YT:QWHE*&1O]/?8lUdjYi+UA
%D9'CA5LJ<!AO*Vcg:hQWqLkn]];XId[si$#>]j5^ZhgN'Kg;7`hR7[0Q3;0b-?!d<^8,"4@%,O:XlaEZDfI,]SRG,LM,e/ePB'98
%26(1u3Dh"h19a$H:0]4lf7h4%i+@W^YYf4\Q+F;4Y*'XT>A*1[Kg-FPf[P.\L$/--mS$[7l"KK7A@MdOmtEmcae)tmbB_E,VW<7!
%Y*X4kMf"aWOh4rF]GR@`5JaLho:D;C_*<7t9<RWDY_."a>Ip[)JM9G9^lY\8`[d]i1@_WTE!ChK2;o3?K?Af1]XLJMHcQ;bJNM))
%13nC,LeN1oM-q7Rqb"dSP6i2EGmrk5SB#Ujaa#H#d0(GrNp&U?k:rMsFYh5(E?-8S>1?9A4-/jCbO%F/o,,fKCu[&^atg!S%YIu[
%O7m-kSGU1/jFiW&UQ>76md%s?@m?%R]F4-irlT0.ARLgUqguts,g<RP#YBn)LeJdHnh<_T.MH#ad+F4'FAQKR\@l]],56P'Mi5]]
%N/RV+msAd+0t/]6rGi/E68Ar[O'iA'Gq\sdms!SX48"pjMfQJjf'AC/"+/pJh.GZX@\fFh&VROlW//D1rcQ7a.s)6'/^*`rc@+p%
%r<8s9CQuf[c-3UP>oOpbI_>8d$G$#<[o8sXFc^&9.TSq(E$q_+eRZ;`B$T6b9]k>N.TReo]=,H'2d>2-#,:QKhoq.j94S"$@N!)8
%S32/4gQ<.AhbVKgn&#j$pgeQ5XeTEgq^AN1bi2jaD10%hrRNo4hsk0c(hnR<f)7HSI4&]E[;47&EIi%=qel#[D;Xf(`\p`XGC9>0
%lLCD;kk71&2r23Kld^0&24^pDA/JF5<b&8+\>)e$_Ls?-QO[#Qp(Y2\0sLR1\"O!_[HMk*X1:m<r)d6*/ul5J*h'0cmq.rmCU.eD
%7o(K=bcbC0[(E.^/*O?oS7]9F9>q43V@I.dPpUau;SF,@HV5VY%#$R)etZq0=RiOW]=0kF':N;eib<uket'B"d.&0uEBcaLV[c*g
%^r&e%3U`Y)mtO!oA%ea!Y)#F%$Z;j8h!P2e$)$W8aS?m-kH!C;mfPQ6i_=G'!QsiQc[b`Df=Ycs&JlQ^mV?ep1YZrH9DRsrLAP,6
%qr:1FZ-j%Q5%*"(1E\GikZqhGH^1OH`qp0]cW0LV?2R:;AhQL*>:H''XRA/s]ofc1C>(q9(NtN45af-P$8uUX9a#F$L_[5H.[s(m
%p&1P+\g%ecW8h@+_m\^$9>nGRinaLo?B>PW$/791hS@0P*rK+@C'-paS-bJdI5ge<8OE8kZZuVQn*Ft0qc[@\)uAG:5^D7J])u>^
%CG]iYjg(.h\`<3Rj'<)L?/58J&nH7jnXHY3>B9Y0)ZMMLb"dku4.?Ei:1?02'6c1M%]56=+=HS[RReSb"-nlCNo#lW4q3klRF,?I
%U??n6Aok$RjV\^9!QsmLT_o3p^&t&+//+Xeij2=+QAN)m`4moiq(M3.?f%WZ\4sDVruCSenU'nHp`Q]2_&#g6N.[Yj6SIdPO(U*(
%lkE,"J&<ZSE<e?.2C<tap1F.cW9qJkibl?a#@24]Epn)6Kfm$Z\bngdHoEkM6S@h'NleHF4h3327THjl`.YkDMiMKfrc5J9l4_t?
%4X]%br6qu2[stmA5C`7rc^8F9It,JR5%@um0sJt@fOkWZ1C!Oj"8e%.IE'&dqmN-eNmBKN=XH>U`+KMF;dj(^o(?p.^&6m_Z^5U%
%^&7Te5G)6Sq)=?VrUr>P0'Mc<Gk1"AmH^+u`UA<Op;oP4H3FPfs)mLP\gl_6m%fiK@UA%HVKUKX??RL(WuSs>MDr9#s8;C?q!Sai
%%kCH2rUI)fn,H2_rkG<&0@C<AhsC@4IkA9N*qQDhF%_VoXFB?g$T-adi9o3dk4*&uhV@1`k3YlLirB#WqXp?<Z_q`5]mBM8oj;pX
%d-XF(IfJ]`oA*3GIq9Ymp$%rYDdL-VHN3'jT;<LArkl)*[pT17p?A'=mJ[Ssr&=Q2q"Xm[KAP^g?iI[O,C+#6K!?jY47%[hUDSD[
%6s3>IlIY*o5<dJACqDEVH52a/G:nQLP\[[5$KVVZYgNrqa60!e\>oe0ZHfp0O[Ei%="Z<m`JJ$<H`C."dS[!L3<g(,RAP#f,tX#"
%.JDXO[!IGKVO`Y@WjIk2#@*-u\&b]5p+d.nOqZ$(9P#k/nOc!_92!"!+ZF*A=5njW]i=X?Pu$uE/RF9on2o#/=)j@0[r<)$ZJGJX
%VkpGEl.,]3&FX.bL)Rq3J`EYSrYo"@[9WqIj$2p4V<Zj=(<jV7Roe!e]:.hC+ta7)i7cjaS69=9c<hmF8\5nEZ:?!+l*;-])W8G)
%+1A4$\crVXk1mSQin"[BU5!WUI.SVtQJ4J;M_rLja+Z2)jUM'/nsh&a/FT!HR_4cqNlZ<1g24")YI'e4FA:1q07JMC-h"Ima:ZR>
%iuf?b!i0<Q7XOAEKT]X:4urKi`em8O_!m:OhGI;cm:\DQ6emjc@CTf7?*A@TN:>@A?3Hn*L_?!h0<aQ?[f^q:/SK>&M`_*tlnLGq
%-),Ea*/,oQe_1Z7\27NK#&i4sQc_iN&5osX(nd]VG5IYTm$BaF3LM4-0(P%7:th2u?,mcTJcAIki5,P@\*KhiqDtiNMC_>HJ4_Q-
%:-R$N]uih\ld:B2K1@h&B@tX;Q>rjrg52(>'?-TQ?;IG87.qF"rc[:&?&?mn+miUk.I6R>7(<V8>:-H,/NMTSk(J-0JqhoIK<4/4
%bG,JW7U(Lo$W3dka2@h?Dg3,]W->mm9d5jGQ&KL"S6ohn^WN(f&6a@W<r#OZ?jZ;GI^cARDktQf=uS)ILk!V7P53^/dW&LL#$BPD
%b1/-Y!<B&/8PoL:'e?,&P^J?)Q(i[XXh\A@fjBU3JO.5<Eb.lFT+G1(/<)6U+e/.E/lt=i',_3`.K_.)aOMIqa>rL-G.J>AJ4Mb!
%,#_!2ktH@[-bZ-?/FWss)G42OQ9em!YG/4H.p5I?Pn*Q)V=N>o"6<E%Lufcm;%br]r,cW.+>(ddNtnE9SLK1C$<1g_dC*$,7J&F6
%<tVDDF,Sc%it_5SV)_&Dc*>CZd3?b'<OKFAD%W>3k;4j<d7\nol/b@MJ2f.UMU&5<EM,j$8X+_h)W7r89PAhL9*tMO;%m:4,01DN
%5]4B'.OnZ;$lj23U3q``RrT^-G`dHALS^;">@\I`>[g<k?eM9[PsX"EXI+kd'F2$dERQS)94^-!0N3UgI]6QqY:1Z?"_;+uf*Gf)
%lqSF-ge78D=Kp.MAL6\EB%%Ap89np3+[\*+a`K%-"NFtN##NV%M,=Z7".Ubi(j'K/FMo$UPRQMH&C&d5%a>`?-PKa\]BCI@*\&b`
%2gZs=.(%(iFfC\q&UR]QO[Yu%NWEo``G9"M@W^E<T_7g<N8A0Ub@&qP9-[bJH9cd\XClfJ`]>NCrj6#^;D*/Enr-KB#Vh9LjqNbA
%_Nidq>+j;4$/1Y"`+iHV0&5FC6"GR!'oNQ*<%CV"#]lUu=JdJH"`r*h?l-*%jmsXN@J"h#@7jP,1^?P-,X[6!n$,<9;l"tO^*Iui
%opeP]7`gRs&',A"G="\A8V8QuM^YjXEAH4dY'/#DB.o+&i2&a9V*T._PQaO8(PT*CTm'p06",)l7o`k:/JZ)[0,g\kI$_L"4KD$]
%<nD5NTSI*;EMC*n`bZ9-QA9$cJI9WTFn2cV(;DD+QpaU]p>n[5,(A5USLG)m]U9U,:r3S]QM=ED(0AnM^*[de>BPXq(#lMM3RH?c
%dOeOn23DKrHfr)FCL#;a,qR;\m8Lnt>#LJ90]a!'gE7oMG09(oI\LpL`\:e4ik#cg'K;9ZZOD]3ciinD(`a4C`[aKuBWoVHE3BBH
%=ZbEh0J9Jtqri-mQ5J!qnj8HoI&D`/j>k5cWcTO<c$Ai9c&74E_\`Z`CZY.UX2FoB\p.["n]MI!:rtCHd&[ltQD;d[!](fc:FqE1
%.KAcnZCJtEF%p1L(/_[VdnNlnN6h@*T3/,W7N$R;)NI.<_O'^uA6`%'[/3`MB^ohml\ERpSeLm*Ufj"H6E@_Tf.PC2+d]aWQ<Y)p
%$I)ng12'gm#7!V$L/[KRZ8@#cO1>XT4PHP?!s0SQ545B@$OsB;7dDo_kY4IrQYJFW/D5hJ<t;WnQOl<W*(LDn9k7FeI8T:(o.f)W
%:egR^`$-\Bb_B/!;_a%q^)S)*0WH:UALfXHb2gQV"`%)b.4fKf/YZ)lkD5KN[HhQe7C!n''c#qIZrF-'OB6j9pe1/`Bq`4(*a3]/
%7B_V\-1arf=O!9#e/\CdpMiK@*@`&#(qcXob:M1K8sirE8Z<gZ3O_[WP"\gH\X]"-UUqbAf%<l!?G3/_>8pOf'EcR;HteM;<480%
%91rB7GBm^mr1_HTafLCSRrBlT?qGY_s"6n+KBQUQ%(6p'HjhmV*1l;?ZYq3h!.q*1oWtTBrDI5HW/g&8.=TARD%^Oodg6HeAoctt
%:dkXj\$#LffrVWU82mq)QK0Ge=7:)b6dO^qQB^c)=EO+U=g>&^hEc`\eAclL2Q[YgSNK[^\PVl?Q`;XR@I]6EXI\ZtT(*;M^+U9U
%pif\FlH_IK%"CPoTA"uq4u9.8Ol;\FbljV-qZaLt?*Bk:rptR5`D:uDSQk4'nRoJKs74G#B.q$UrH,fhIer\l(VbImjp=dH#;-c\
%.j2ci#*O)"XG]XN"phJWK1MpH9B,k^L'bk$N(59l)40Ea0$S7cH/_DPj//Q5T\*Z5(W`<ZA>)#6!VNgpEpQt()BErQ4<1B9MKKF&
%L.i"1nJcVMfSb=+6&$EMZn!ZS_!5!GZ/@W"eZaXZg_Ob[IcmWtdf8kKTCd"?:l-]FY0+BAPQabsdc@NHf;`s0_iZVY<I.1V/,1&:
%qV%Ps+WN$9==ECplJ0e;<;O*_X;hP8^FuIigf;CO+td;YiXcQfADpE"!OmZjMd4'aKCTjo9k5(XNqc6OcU`[J^p#!iS5^nF&+8.>
%]>B-9p<]@4f:Y4D`/`"Bk7)='>8qZ9Q0B%YEoT9M5gir+Y9Me72K#hP&?Daf%fD9;FUmm";PJI'WS%8"/-$8P$U=t^r'NB[M\78/
%JYu4\"r16k"Ro;O(%;;[T9`P/:LC<JpGRJfHih![[]#UpT@t7LjO_RjA8;CX-%/iMAsWp2(2$U3,!(!@:l9L<bj>"m^#Lof>#Kbp
%"tgqtCG1nek*'ohX"Z)#Vk@A4[a<kM-M(_K*=IPBHOLuM,kH&h3+EDP$Z#rLQ6$NLb<tY$PpWbBV:X[02h6uDf''7^IHVm'.4l_r
%1:!qa,C1T=3FK*WMan#F7?!n\(*G2B87cm(1ctKt49buWEKgVjJO'eui_.DI01Gr9/A-)tkG+D"GVr:^5O*%KQqW^H_%tHOO0\Zp
%CMQZ3*$C2L4=@P[Wk9mU8WTr8R!k\ja'sW>U"WhS>6GX`BTYk9:G$O%`I@`iY;u^U>'.*pf4$,Ud]!534_CQBno.&\PX+H4%VAfS
%^K[/'pCk9Y_Z^Z/`/D;Zl_V687M8l;/Mna>dKHt1B8BlZEMCDe@+1bP;^2(hmgehDV9.YIBjMsCbu%_WN2-Pd13$o(*Pa#lSG[8t
%X8oUPRLN;MS\T+Z(!h$?H<n`$Ys[1oSeLt1;+\!CW3IoA6upZ&A2(X/"fkK91@Lp1#WKrjGdo3.lK,6d=t0gH#NUhU;.2XUc^GHp
%6lF(IQ<=IqM1F12@+GlY'lVMrbK/-`G+UZMn9Ni-f@FL$`JrFTE[JMIVA1D7=ba]\,E(mGA5)6FmOn>Ei'&'8l*82n%nK?!QHGL-
%Os*\3=GhC@ETo1^)5%$e;bTJs)FVEB9\.0H$Ha.-03Z_(U,1$3K0STLhcO/F+:c?sKN2WDI&qEj'P0_:$8"*iAB)KUD%q63Uj?aM
%l&[;6ifqVs#1s:O;4\o=\;\"t-N^u+>Hsq"6X^7V.cs]O_#Lc1Hr:J*]>8g5V#\Cf9Jm4YTDD8G!lcsBd0SdAqd&26RI_[R;S??@
%<S@dL'f]W%NM."V]NrSNLmHV:4)'_nR%WWHcN78W,";,P.sb9'C/H?R:/9X<9MeW+1d/Z!);uk?(,7E+8dIDs.lkBt(lXOj-q`?H
%D)'O#4JH3u5/t:%RdKL*2pVTk]\n.a!rN.FS>]We[oWQ*B!`KDG+lCMn8L>JZUOo0O%rqk`#L:Dnb>qfLm)RP9pDIOSd5g6/Xa86
%c4J32`'n\`^#$tP&P&;P\&bZQVm7:Tkq=mS_M&uFHo4kJ_6,/e.k;k:VCXq9&Yic&V\3BcU0,)hV/B7?*JY/e0Q$']<8+i/Y2]*T
%CTLd:>F*!!YbEr?;.sI4rS!EJAVeT=1LF@=UH'M^W8F`OOr5FH)==,R>nBq0Y!3V=LHq$H9@rr^r<m.."IV=EWUOACbL=ibQsSL*
%O;9m@0u8aW@H_;-5Xj\dGeJtp+Y?ZQY/&f2dNAXe\1-"10^M,o9oAq8`T.b29h#r[K;cp+*MK@5Es,BXYNNNIQ]V;%hgkbQ9GH-a
%>dtH<#/IOLW6VbCiAq$s"mQVZ2Z\T.eV<`9L5))=nfBKMj>irn]C]SbWsFM)R`VD,EMb2%7Y:rOM#\j5>i*XL%':FhJguA<MRakt
%('qc,@Zb)]6`S>(d&5-'Y@&I/-1\s>W/(VP:^F\3F=suAH]*2dCge^m(e7""O%TM7KF[8pY,?N!B4(`^"u?A4-X3M^7HHUuqn0:Y
%5QOg1M<2N<1b:'>M$W,C-o>?4S".cUM=R&UE#BkraUsD\(/('2RLH2_C=Gn3^:]79(Cf>[)WPQVQC;IY;H/).lO^_D_C/C"c8dip
%>9P5=`@M!?@)r[FJ1D(^!fITY)IR(G/TOmXkq,LL$5^lf6j,tk/K2Rk):q1OaOCe^G"(JZ,7'5/jta-`ao(u=^dJDSYo&G@AQU'F
%.@QW6SH.NFSHbIV6IC^L`SlERPN]/@91:gm&b9V%_I+>@`$3AKqgt7H;1>oU(ZZaL%`/5t7W\Vq#eh/c99]7\W^(EC0VZNB_-3/E
%2`S$:Mh7$C&PX\J7sl2/TJVH\-l0r<'ZlZTQ>u2E1aGe[*)[*]i0CV[j-I_BW)No[0NJKQWk>m`>$R']-,[\h[$RA<fUH>l0sD+-
%,2NZP7iM;3h\8Nhj#utU+r-O08r^qXYgWKHg*'g-4W#l)OGWgC\;G9Uc6m=_!'CLVPNZ]qUj=RW&.:r^YXQeoka2AF#n[c:FbeiN
%%6LBtAZ6"c\rmd_;TOK&NCKc'A6Wt[pEf$CBM@V'GjQCmA,H>SlZ3'a?$M,pJCV(%LQLHgBV6>W+f>0qDI/5u(T7YYgCmFVLp(87
%NttS#ii0?Y;O\i?a-El`TEEjKCe`J\Oc!V7,)efdYQt+!)/t@"`#-_[HW7T-UBN<02.1b["t=TGn'>ALVU9XL45]o!]Cg"pdKeQE
%$R<VZ"=GuSBj#O"Ysu*\gPjgG@Rd\WKq*9pMCBj)C`K`o&7Lh6IF1cY#d"QkaMBui3nN.+fKUR,C=.oq,SQrB-5JR.oKcMl0#DS"
%*.?EE$WP+g@4(J&d@?B\1W"ADQ293BJOWa@Pp'WA;II/'Lrgtq`,tY"^g'%QM'[rsP8H$nb)[Bu(h0q:,"+t]\0/A;In'@4+oV[5
%NNR0HI#jCaP[n(l9WqjV#;;N_FV(<*k^-e%U_]io%_O;H"6=/a(hBk/K4CbmOs+P/dmDe?5"YTbJU7^lTh2`19P-a2KKR%*QNfq<
%jZBteg3(2?M_7RVU%CIl)5?M:l4E.+(e:VDS+8l)2))1c?5:^8rQI5A/6;NX_[h<(8&#Y)RAi6O*AVI:=g,BorRcNX\oqrl8d#A4
%5VDFbKYS.?NK>(>M.+c^oG74Y`EU>R7O0VgEhaDiV&>1SJp7ae0/B!IX=n$'d/Jq('kh%6NGD1_s,-01WiM-3(L>LJ4],XUl'_]Q
%!L?8A(UuoYBDAj=+:f!VW22R@Hn(HcLKeC0B.[80&V8Q;\eV\.:*C!1C?T43\/E7Sp.:JL:$>ZiQ[kFR`?aCuRFi_+$6m8.%>/m\
%RY1epIafpf`$&r!/HWgH9#R)Kmgcc\DH4l!\sYng?N_F=N#:N9KgmTJ4jT3i^ftQ69ZfNFK'!4@1(n0:k)DLNnRe.*R^U8$_9A.-
%fTBf1eDjgs6oR3AS=#'t;]V"NK(i%K*!^2?.6cT)Sl3s(Pb^AS-M9D3(D,mgoNk=*HUgpd$i;oOgbFlpXTI0uk"j'ON86OK%=tZL
%mM)2=Lkr%-S3Z*dSi3i&,gdS^+I<W^p"Bg[N3u;gYo%5E*.VWX"Hq7?H.kP)0k52I0H0^"DulC+_Y@Dm>TYgHL;CKQ>Tr<lboG,)
%Zjg@R>0s4:L\HU#opV3j.^O<KMcOS'"P'gURP!4PEB[M)C>_]f:q"lIUnXPhfJu?e?rAYWBQ-aPapo^4"`_o3]YQ#>Ca*hMfH:9\
%"[6'f-S]^^(LF$%5%SQ!QdfFIZL"si[=Q+(*"LR)["cf`arHqQWB$)t"'&&]d=3?IE1eY40FijWMN>gYRUHb>(^'P0%K?NhTS3Ij
%Mg:$0<jnp^WM.^G!?b@eBc1o<B@>ne"LDK5_8e277H!&1I3dH#fhmgoHqP4`IbOHcbt.#NO<M"=n<!L>=Kpc"UBNA/1h8S)2HE(O
%n^*$`'!hte)`-fARHchl7'A#t,8tFF7)qm,6#13TiTiKc!%fs#B.-ZELd<4rWi6ID+#($T=9TC"%9QlHir@C'%U!<Bd$]>TbRbNu
%=qou7lCc6b=?Ck_&SoM*n1jL'&[+l!%Z!;H8@[O/i[7n]H;/ir/eK85R^GRp6PP2e8js1Ee&8h[_0*QX>;&tJ83Fb@N\?<9(`>kt
%BmAm<Wt<QL9S\-GjT%t6Vg@',;.setrEd<?$m2]7H!@-g/Xf1^GGY1o(9Y)Uj_'_mRUa,L1b;d)F)iDQ0JtUo:O(T1"n0ClKe>cN
%7#$s23%m3%EA!'e/;j=)]ie<QI[E'Pj01iVGs4RXF1*pcYPKJ+%=T_O!ZcrLd]?sYqQ(4(\WMN!iJ'cL&u7d]:'lZh6=G<W<AI_`
%/>8o"Ugd2bl?38pA6'HWW1(&*84tfY5bT7r)Tc$1RhV.]a;^4,9aI[Q;^EqrSrg^DZp<]Jpbp>aUi[kVH:\gQ+Fbhr_I6?,*/LT:
%jAW$g3o4WJ-9@r/F0]0u]-Zd"C.;]m"E)E84+,Gn!5/Z*+Q!L+!t_h37?)sH?sQ"j[p,4l+c?E^2+.L[]4%+XS0qJTfqOu=bQkST
%^^gE>L`KY+ck^#A7';)!C3h7[rOsd4K]Lei"m@nV!6KGCV9CV,kc9`ZBt>ur6=>>JpGDV3`1V.Hh*M:eQ)G&sYStc*N2HLa.]1i@
%?=7G;@e)+:6H5O+b`XBY,mT-);'_9c<4BYu`L>]h,$Emh__bm0)KQ&OX^Z"1/9*q5h&TpVeA%SP\tlA9F?JX"CSht-aH/p/>G`W>
%1%(Dao7F6_'64`u`Q)ah-k\%l2t^/eEug[%%+#0kL))'47:KV$0@^iV*L;^LEkT@/JUC*.<I("O1<;/mI.'!35l/S.7RK2072#q/
%Z9_kLPWkdnTA:i9,LdrS2"<Ko"OmRaT!SpE)b'fJ"Wt.F__-WhYc(9q1ETEC':m^B,[erg&=C2Ba6rJ'C@a^P+TS,GONVC[,%X!T
%8FUB6Y5)Q6a`"QRTH?SNmM$A\Re.i-@U19[Yp'>EO`!Ff&nXdAFI;$7d]Q(s3HZ9F^!3M#Yu#!U.KMdTAn%Eo#jBbgg65s_*BG[1
%i!+L[Sc^eAADr4%MUXdG1^F/G"4R*@Z<goNKF=7-_'9Q@_-\i)&qB?C^C0SQkj]t]pBHeR]en5moH":sMr'fs\RKh;Lm`$c-;CD`
%W!7cme<-Zj39D"9:5+cb[.g;qURM$M8YokV?mr'mb)2(Sh=B!#8,@GSSsEDnFNkG"!\D8N3M9[`i/!(fo>Q;-Ht!gIdC3B<]3kF!
%48!GEdKeRp//r;cXs/*9:+qfnMT9a(>R:lU!fC%:-4X&=p_Nlb)k$oY:h-SA3b1SeTm:>VGpF"INXLi(OhcgThL^=(jU?D]\W#/i
%o%Du!H7Y_FTJ>fU"BqJZT!@^\CFeE1>k6-`Y+")4&VD4mN>2YX\7a5nY4U!HF%90V_"kL).KRrHkQ0,,"fi?3WUfhU[Y\YD[Qq87
%6kmt?!^i3;!=uOg*[,.\O"u9T%b\KY@+Tb&1aKJ?d3=beq3NF=CroW<VCX?ZXU^UE"9iHH!>!Z'!G>[ZXGG:W>ni`:hFgYGW6gul
%-Nf8nMp+Q7:JJ_h)G-RbP7"W<Db$IRSVLb5YPRRied]kHVr>hO8-%$-R_9=/@0otKlAdfdXl+YQ<:-NRJ&q`>I'?pVLpWh*<!csr
%6uDEZ-*r.F40qoETX/2T>;6e9_7KiED1PhBfR4bLfHH9#`oEHqZrk1=<?.X7'%(o:JK;]F/-KWPTe]i>[q(h;NR@T9!>)VoQA6/E
%K*?3MCt[d0pfj*T<-^P."N?U+HP!uKgA!(L"mf\Y1YH7&d-XYIB[Q@42$16P"7m2QYh!5+'2%k_0QQYpO><*-2BYH93ZX5HA_p,,
%b!@pCr?-c`i<pbp`7d=Li>CK;4@$*PnBrQ>>%Yp84dh]Z$d]D:WeZ_'#6qEjA)J7P9;>c$@+6&%&V7^-n4KKYpNR%6M1KsW,rIK[
%AENV;>&GZb$9,o.Kdge\AKfcef#"Xm1mld*b;6LH:PrU)UI79%BL,(a!\m''/a/meg8``qE8[SBUaNIZ%Oka&G!DS7G<rmF^t<2@
%3e\TVh9>!a,;UOq*iLca_;%#W0O<LI.s&'j4mV5uTrEa%HYGjsl3+bRpl^X42/O?t'Wsh`hl*/6(+;@sYo@<1"L"@qkp6uWWBF;h
%c.Qm=k-ZR82um'J0,;`65mt;+Y@PUVf)-`/VO035+^fm5bFbp#!2Vc=b6!7X>_8T6ogI@b1#!/I2,]I3TG1IIIW)XRGiW0g]M)V<
%KMUGu<'N.6#SiEuGsIn@:h3B4l4Ae/#iHjZNmVs]0+4\?5<%$`iQa`UUQLD8SDqIY!)Z\"5i"6\P%f>i"LFVa6e,RZPSc&1(#U\-
%9,#OD3AD@'SX/7Kkg[S];S%s!#QGmke*rsVb)EeB/WU=C,((N1/.uu]9hRn$;G.t/gM8^3Dp/XaWdk+NqUW$.m`2J\(M&m<?pKjZ
%>F,%DBu/D1_19^[J#@#2$W6N$!n7cNMA:$M@UILP?;p3aahqQo_KMWLn"=sJa\qX09(RTGWY-IUq%m6j;RGdgLb`.\m5cB:N/Yi0
%P_Yd[-')D`Arnq9b3b:XMSoV)+He;l`=R>O21k[2J[+aBMgiYQKm-tN_iOaak[]'pVO]'R3r&Nq@lD5R=Ek20@\e&jb9dMACI(=r
%N:Wg<1(af5,9lYk@EnfPZQ4qXfo0/@j=ISZ2\<o<K#FD)G[Rp]l"FHpWWQ[SL5!<e:\Xq(#4X_@neKTiKigni*Ak-;4on44>XlPg
%Fh-$:ZcfnV&3`gg#.2ka7N2D=<")Fc?&m@D"PKtYe'sasL)RQ%^l:A]EIVR^]1%;#!A$$X3C&i^B$%>d,.O;"Ysa\)BoR2*G.a=d
%^\ABfF9GLplMtc6)<3_Ga2,/_f1QF+E*sX6jg)HnU7p*,`],Leb8hZh5'?+Y+DFP%qNn8mR(a\md@`g)78Sb6:qW4=!0'+P[ns,:
%[Xbl"7>r,OpIOR[niG_E.&COVC1N;F(.#Kqdpkh*WSf90;KIASA@]mp5SX[M6H_,4ZDRA8og/:8TK7`kFQGsMi(05jY<^SK+9F>U
%&ZMNn-mX<I@Q[mEf3-dsK#l#?-D:G!S[9%"/]]WRE+`.`JS+R0&4"6;Gp^j'/%),9<*3XtSRu#*`QC\*kfalqk)=_JMG2@u8=VPE
%RXU&u=oefk\nrf1Zg:N.$UbMD`aF@1D<8"">0r?dRd#$k#7*",;g*^T@9o4aT7WpKo9?O4Gkd9\7UZ<b?7=aeAZXXbU83@W;BSGG
%Tm2silnn50@u("cjl#C;0JZmM-%qkLej@Cr/O$;2e!(ol_gUKS!jn)'SJS=.X@t4(1oO\"rE^('cZC73.BUu&Uh9c0p67o^_h&JY
%7eSOq]o?VY,,>6c'?`0Y$-iot*FK<66U;K<f32\.83?C\O-sPFXUmKG>4F;0N#*s$kZP+"1bBiF(,dZs"gk42M[;'5DH30ZWf]i0
%^^:u"IC!On4\.M%AKtCRZDJe(XTAAi9O9NlR1S.1aG:U+Y6H#_)P=ohorRr0MNo:cjqj><"O"BjK*]*t'Iej\M);nqaqDk?l*R3%
%0odo5T;k8=WK&qlF9R5/bkX[`OV#?"3\//D)if+1)]1dnC$G2/Z67_TUcs%/=_B\Q:1;)\JM:%\Hf=(%3#gE[m<eI]*9n<I:4TVJ
%iSA:,5!sS)']E#pNf85(DKkhJ5CKHD%;C.g]A7h?$S5#eqYog<hgTeHjN['N?cs1-X32mik/jrr?QWU&pXcTUrA3]/Ieiij&)WpB
%^$U:FZeZ`'-iSFCg?Cc$n5-Gd72(T*pb0!3ct?%r*FZL*L"^!P]I??9WJJ7;8MM><?A;=31Vf(f_8BM0442!Z$PJ=/=t*1@9q8Ib
%a9@90.&D#hcer3VTLKST(\CUXEZ$I(oE4>q9I2.;W#D"Rf4=p\;,9M]`HmEj&37VJ.%<Z<)uG<KdB$^7=-/mQ[@ifHs-a;9(`(5X
%&-*d]GtLrb<r$X#@E<fG)i<-ZMoNs-Gmukq/D8Y@qJ.6GGB'(\kJ<tAU*emc[im%4%5meDWg8mT26*_%A9sUq!0P"Dre3E`3WK\E
%d=;^=RQTohK"BX&b/i$M8_jC#P]=]5FVCH5M=D__Ke*c$A(4X8/IhsP0ZftOATT^a?0GRh7?`md"T_V._!'dF^."D&G7nEBBoR*:
%jG&80Acs?^eb=S&27^_I/2i.s7dJ0i![\VgBP^=Ff'!Bj63&^`?QmW+MD"d>@A5s$Y0>fNZ>b5IXoNWZ5R&JYE'p<D.n[jLq:0f-
%!R7"k/86Z`gJ!J/+^'`6GI33/d"*_he4aPZUI)X<]`pqjP%;s,L(coj[*MSocTIO$?!HYPZF<fV2^d8.=>F>$KRQ>s<j*$\!a[f>
%.n5(e+i8K-B1gLE[@al#)J/tIoG3O3_&+TPonj;!OsG2DqL8==8M5='N`N4^C+cUFKR3\D,=K`.aGE\6/5C:G/u='^=k1>2'VGm#
%p8it8g?j]%+rnUm5,UlY(4Mn[lQ))lVW]4T+n[mAQ6ihO_H1kW3BX)UK-:ko9hS;M9AbcS9kt'&kf1(V-W@;J,1I]Leou&[92Q`<
%]tBqmn.oT$2a_05g(Hq.@TUE*@toTgQ+U0UJg8UN-p=1W/!lTNBb)(5k#B3QdH[/H.m-S1VFBTVA"8FC_Tr<;-aaOrqeufI=fO),
%^#kU`(J3q0=<E9`%(dQJ8FJ&/p%+8do[_GRoDjmi%J^5t`5'-`<?<R,6i6tt8g4b-ZCaX/)e;dN1c_[g#$k3UH;H_Tj]m@n#PtlE
%%4CqK`1T[?:C!Da/O`=?l0tE9'=Ng1UtVYAFBS8tH`fdHUbZj%[0%nG/L_V>oE!?:%l+h99k5L/9S.$o8W2c]H+&j<>-s#rWZ7ks
%#g.%>$=U:u&5AgOLkQ<TCN6'udu8Tq14FM)"LR:k@_b0n_kL"8-C4lK5T,n1#=h8T$N0:[7b]uI?pNklK"aUk/A;oP1/_;hUIFRc
%^TDB$Y.RIXl<*hW:)`rl0Y>,_Kb-<a>_oujcqLeSSX,?]\da'(Qm<(a]<#O2b-sZ%^1ep8F,IpKSO=KD,,c9!!h_*IG-\.ULF%!&
%,r6f](-F'jd4eHp^a^MMb`,Zm&2GgZRFEou8VcM?l"bb1Y!Xg+a9((i2-XTm7!o0L\?`UgBWVY?drQM:'L=P$!2q*DF5.&_7/2!j
%:R$=9HoSfuD^A#N0Wf4O?5mhcpic;qA1I8,VkXnZPLrLO.k(!*no3Sr`WFEhRP.B'f$bW6"-?gtZR%:I>(d]M<%NY'%TVJ%a!D=,
%M'PVOR7N`tg'2ne(]BC!L<0"hMIGGr8e2$)b@P?cejUKi1aLbZXP"'.%O=lu\J9Yu,YHu9%Wtg9!i/SM>f+O\h5(K]YmM\J<L5);
%[h6[)7BIIpHE\NBW;tH!cW_1("JB<[;:.XEQT-G,Y@`FhW&*k86LZ`Q<KFsMHjj]35a<(J(,srP,s)^3G[n0l"/lL2`Z<*Bi"_&Z
%&;<Q=Rj0bJ5Sog@(a<Gl2&o/G5U$r?P$!,&Z9T]_?"]kQ!mH'l"Lda\@l\;^(+N'PWBKK37;8)WR6Rr=andK>f4JbX3#Ri=#HW?m
%U;5AJRN^rOCcP)PhA2cST^P3&@0,eURO57$aZ;gf==j2a%(p(pH3`j[(t1_rM=2Zr3:X&:/[<)Y$4DccoKqR&@J=i?lUJU;;i,\1
%1fNRXhU,d]6Wk3W9l.n[""&XE*D1?PJh"**U-ag3:l5AX/\RLY?9t>F9ZGB%K'u`4Znu&VHtq+A.d\@S&g14`[UIQ_WlS'n8%aYB
%<D\Cfit+aM\P$>ECO^],[Nj^&hI"nV!<fRl*X@$7P(OsQ5/`YdXBX^!XrTb5"u;=tL:]c2Ak(oS14]#^3p].C'8UgddHHh'_?4+`
%:2rS%#"P@PQu[6;,aNhiU^:kQ2jj:H0GbV\Aq)m:[4eETd3*MFm)Z4E'h%,i.97a5[bRVI3'bU2!0r:m*>T11XDIO,%+o\uM&Zuq
%AY^/P@O<'N5j(uX7EI(^%iAQJ]k@D5'%(6nH@fsZRAG0YQ$5@^GG-3&>TLl3(X+MaEL><1\lJ(s[MQ-XX@13ndkVh4*p^jX2@E2l
%\I?7^7g%b+%1W[opj$"M[1^$ioK(hlBiQHH9_nglAa(dod9+\s`2Gr*`rj\=FGfSqk9'K`]CKlD&bkgp9[JNPA!17tZ99L<>)[b:
%5(0;nbd\IJ<I!OHL'T>tE*CFOQ:Y#=88b+]Bm$)UC5XkLZTs/qX*Mamd*QRQ4dc+Md)$#uk;'E-NP#_Lh1G^K=%s[2=#)C=;@c\A
%_%"I$'_fJC'arLm)12KdHW$sI#mHf?ApoT&:uDpp]/@$u#rS<'/,Y3b2""/3WA0YMH3*;lH2l*HS1/.0k8E<&;K<eVqHVQe2Ra)f
%AM]e-dQ(CUb_dV\bBDcCN"I:g750=EGubR`.upi,4i8,tDe%)+]Nb_]hU.Z_lAH.e7VMiP=<ncKZA`'Q)_Vdg!mfs#V#tRbLK]<$
%(6uiU%8?WG,f=(\1&Q-ZC-]mdVf3>++t[)l(]_o<[L="rB</@L1HYfd-ir*11-fW-UGO[GdGZ>6>?#N$bu`Ng(0!u$-+HD(&R*%@
%g@h,)9^"L!#-V\hU1Vr[@'+-d#&dP3dZ0FiCHRmCXK5QF</XBs/-KSFH]KE>5Yi[B:"j.I9h2)Ge3OIfK9SLGO-SQ@30^M9'9H2Y
%m'KFLaTkN9.P*aJQj5+SIF:bO@<N=jK0bC68;"Jbbq+2aOTk=KO9hcFa68F\2-l<Z";4T1?mJ,r$cE'1"Lq%I/$-H\=(^l3>n"io
%=U+"#XPT,.j.;SQNF&C@$2ekm;DlQ"/Hc:&4on$6f4K$X,0co_XK%idX`]$1:b&X-;H'G6dV9A..FD=$;2#9Im@eWX[ap'Ub30DI
%8rFH6i#.DMU,7uHQtTX#E)0sgLG?qW&KP@gBQegQ(/bM_0u$IjQ5I8G`Bj34fTDgB:dlT?R[27E;()?71c*Yfc(u/GS6Tm<4FfsI
%BJcLTIJBYj:pHE6#%YS\A/.k<&^mpkdDF+$f*T0mQPQ\t!jk;j3QrO*VCW9E<r\4$0I.;gRTY]pPZCi)!N\ZPS=h(l,-.?<#^CKK
%n4h897LSH&J8heP%OlJ86`4#4R1@FDH((,u"?rdtJQ$)jh4]&1Y[UEESj>K]r&?"<+e,@o+Vl'IeeJTQ<&""K:WkFW5daVb!N&L+
%c$mKrJeS-aDG_!e^i8Q!7*JN=rMiHm;9VdB>l7\HSE^>7r[CJ&'hT]+N*Ig=3,l]K/P@&Z)lo:RqPIGeE^P[K6l&*Ld-R/%\"$g-
%Qt"'C;#Y/E>@e8_aJu6Kf$hJ@k5,.FJQ;u?B-Wq!68#.K^p^+8a-H:pT6=/(3!l1lb$!H`("6eM!C[Ci\mu2i3pfPCQ/,&iMcBi;
%)&?#23k7'CP7J-FJ`[*,-naDYO$TttMEmh`iQsY\feTok.u,X3U,?'Vb*7U-<U1<IlmHO7m*Z="7j:S];K!3'd>[9'_eIUGiR.;j
%:i-pk(Zs<%Ud+tm2&Cs42m8JLAnQHB6t\;<?23Ah/k69]:>b"`4EI?6K)n_B$*CNao]lh:Z=&_HJY3XrA#WWp2Qe=b"W9l@c[m%"
%UNRY.n%S)FG)T0RK",.\&M."<]??.WfPY)CTR),#GNa![_DjWmgr'99QK-LA_IeI;BdaW]9.E*W$j_`4OIk"`i*#C`2V]gg(;f-D
%<p;Tai.=DtL$CY?*DC'NB:RN-lT&'Y*TL8fPt\PS-^3ALGQFfZ_>_tm6Y!@12[38olhjYPpg6o9ggcrkF>0U<-8B\dA.(2nW=`=C
%&R^'gakVj.EllIckr@m:)\n<=;/3P<.*J>sQ><qA!^@iJMrSD&H1XX,b$9<_KhqcR@8[]J`3<.u;VJ24&o1uM"36CL<&81>MOl()
%0Tle,?q,*uXPhT;=\FSOUA3lPRZ/beA3qcWJ?>"Ki)JXo"@JJbc,<`hRA+lj\s7r(>uR"K%WHkAB+^i\T_f?5k]0?c?("d!PX?'l
%NFNT?",!8O#MgSVANl#E2*DSa;ImGnTT'U$1:Jt+05?/,=](</\ahniL(X\;n4Z4Sd/eoY@7[a@7Tc@!jY*_S!_KMtHtC]/@I;;R
%ND+\8_pRdb=eqF8MNYioBo*Fid]MsRj(F!q8_RY2M>34LT%HA%CM,cR4ZaT%@RPs%;.I]SL$I<t=RBJT%NYo/'dYt;lRj/Z73J9t
%.05h#(TY9gr\I*%%ZZiP<Q=@MEtl-P!=>2lBb$@EZ^Fd28f+r=S>`^!f^uS+YSTPmGUDBcl9nN8_iIC&/qJm7p(I<hq2D?4Bu,,G
%SQ$9*0>0_s,3bEcr1:e@Fc@N-3AW"TnJj,r`_0B(R0YbJXakAEOZ1:gU$n0+D^HdjNpF+qR'.omGJQo+)4Q947XR[8>BbUK^KF#>
%Pb<br&^nWH^?GEb8\.TV:lq*XRZ<l*3:.Jm\gU%"3s)@lXU>OY=LRjMFf$ua>iF0Flm3<R)N4$X)4WO"F&FBG_le0s=*(ClWbEI.
%W+n<f)@"0p$cTnu3eA?ka=fOQd*E"ms'c:/#\R&WCfnYd[Z-G2WAn-6<E_jANrQE_HKGoSOYVHe:+9M.gNYE01[8/l)50#4:Qf^>
%6?+\:EU16^-f1l.")[8?Yr:2[XXrG0!3@_5T@q.[0qap:ek2Zg>ZNIs,k'uVRAn-0rB]F<#G"J7=ZOEe1\,L=*Q-#?NiU,AC+FM<
%ViBlbW5H[!FQRPTDQt`)&r.^n!,TARic'9-dB_%:%Lroc0=S=I%8LVOK/FXg<c!42%Hih7)JMPW%OWjDTBMg(^a`HD[\4,UQG1`a
%_c*n[j%^Fdh\"AF)np9%2_LD?`986u@2T&"[W$,BPl)D%33b):rY\csF(UQ]hPnA[>8uB9<B.fP'''s03&jW:Cb&@B/(3Gq9mGVd
%?>_%r8,a*W8@CqFNa(PZE9K^KTIaVOko^<<TbO9`>G?*+2iph3o7TJn14aa='+Sq<=`uck6geiIiTMQGfV+?uIAR9?[Lc=H#",mk
%!Oe.s$,RQQLC^uT#D`%>@dZu%hL_Rq)`p$YQr?$j#B*%@iI`*i'U(eA#<+X=LBQu`C2ifB7#=0A"p`bG&\^r_i1Sdr5j8M034FY6
%FeT'F"d['/(0bNmmL=pOoq2NPGW7%C)`@E?1/ig@ZgX.87@Crurln!K\Y1!Y]k2/$,[HN2FIYf-\`d(7n?liF%^+'XC,C6Uh@&!m
%K-$Nc?1>_?o\aEFXt>8JS4!\)>8[:rAFdUO%U4C$@aRH0#<t1>[2-&qchu_49:aUoOWU)$"\<P:5r_HD*6Gc>JoI0@Mt8Gb3;6Nb
%rFmVbLLJCP]a[1cq1;1dh>+lY%)r/J3^G`/FR,P.5raBr,qh3+E&M\1N#nL9Za"7j6OsZ?G@Zajnd2YK#I8X$r8:6o;^^Aq_3rQY
%!7C33i!B6W*k2(*NeML+Xo.*j+h-._#:J?2&VdL]i)m'Obr+_$Ytca=qh?/^:_'ML#!Fph5\Bg24ZG1.@V+gT4ZJ`1&C_/4E6!r@
%TFj7M3']T(L2Hb&Z/"P>FFJ1!-?u11SKAh'=rY68#C"t(/,PSR*.]?cP&0s1&LSc-f(m-R+kc(Z.R1G?`\-e?+5E&@\#-tPmRaMt
%cfi2:,/haRH8AS^`_Hb%37bWoUrOF#E"Ed1;YP<[E%@->keX[G]/+nTD'o0ur8?nc3^:,<Q/M8X&$E*++4p;(f2(UHi;0EO_pc"`
%7WYqu>7BJL*h6Mpj^ukl1Ebo&KPU5<jR&a6Ds5#CmS$KK*o&7pUg**"J[)NCBhJsH=A=A9:(Igc:*WT+*ZX?BDCE)i#PTdHX+$lM
%#I7"VL-Z>F*a'ctTBX0HFcC@qkeRQ*//GdiH/jK'Nh#Wl_m:WZ2u(5:6M#*aK-LgZFSoS/#:G./2)7_nK9LDES0o8)E&rC-:?qc8
%g/?,:&&)A]i<Q9E`a%EH%o0tjh$MX,_+?l#R.Ir\K4>%K^sMkmRCa;>3TCA-/u&h4GCFMOSHVViq8#@5@r1He5<'Dl<^I=GE""1:
%'t4%uB\"b04$bi%":Efg_Qd&P/"$^\Z-Y'n;sjeIb.Hom+:*a9">JtU3*MTX<\"P["NMZRBY+q240j5bmYi9Y<(Jm4Poq'iZjQYa
%+<5KoaogH+_FZCaC0M"]*IuUHQO\W:aurI#HLSM5Tt4Y;LYn+3X\K?9fX0cr\A=T'#9qrkE4]Wic$!^gig&W!'8,JF]\5.p3!Cko
%5mr\n/ts;\i48#qD`GQh&52eZ7L;i6aE;Z,1h=iah%G;aT#,U(c3NdY9E@LniWEiFPBYpZ^mTAi%@K7!3%GQ)YC>U97rt=6ebR!`
%_4^[()':hAFM"F[+*co(FCEOI_p72[$(VNq2N1LkY&rTY3>QmO"&D'6hq>g6q!ER;F=5-"Ds,Hf^r_=(rq9+c9o:S"WG>.(k?uK8
%NEMGHF5r75>?cJXM7W@XN7Na2)pck?L-,(;^'?p)d6^_uB`.7o/E;f?,M3R)\%)%+s3;7L5(X+]=a4,G2,f(Do&,OA7KlQ06o[B$
%$QPHOjE%1"B=6Jd"O=,E=[gc,^`BJT6T\cZBD=u@e2AXm5T@-8Zn[-<kU%u^Bk@FE8Y,-="HE[:ka74B\T]N*.6A8()S@"Wi3)N&
%ZloLkqm,4e;h:,j(!32@$CiaV4FBL"cCuAQ!hB[g-EpDUEDh@oRRaH^m4*b($_5>a"O7>rYRGV#E+2MDCl,sL"A'6j:'=<ZRV<<h
%&NEoN=\@2#^_pUW<pE*2"G@/@[q6h'DJDo"ZVCWul<,#3)^95JcesF;%lgZq)K;5P*-@4Bs53BtF+\<FO)uF^d^;sLFrkV.*jVYS
%_ZS1d6m\R=Qj!-`7>^`r!CmO(f=*m#C,.DYjT.l0=P7TR!I(UhK0cj&!U!Cl'Gq??6#n8TT6\4T*i$OeirQ'D;9ih7!JbBfqep@s
%^bKi=DgA5]GGM5BU:Hru#8k</Tg8e+=7tcoUB-/;5[Kp3%ldWc"@<;'\3p6SNRQ/TNYZY@DJ6g+Bo/gnHW&^0gVOF=E*Se3*c,N*
%q+O\RFrG<<2QXa\1uOBfX6toM*8da+/Y*'8r0o7eg9?)`08[<FF;AgB3Do'&$TM?+EuS-qE&T[Ul7Ck@#GbN3(3"Tu_$D,a(3!==
%&.1<2E:b!h2?jQ!j'GmMN!,ZpP^K9HJ>3>cDQ@Ldi92Yf<c9G&=bt[M>UdJYqMpg=SH@Rqj[7m&J?tN@\5RpaL"eq:$?3GH<..C?
%:1),tQ;%LE=;$=DcB\O%[SANrDfUB7^D8nn*8onkACAlL!KMka#ghK0=+0/P8cm:ZYflX("ItcVl2)U8W7A)f(qRfi:7=r?*Gd^N
%ao1GJ/0kH[gcn^2%1[=_KdGR"*8hM\.f.Elc=Aih.<fA)f?eW-GedT4=;a6Z8o/9KZLWO@fj`1F"3s.rpOMNki'7I1h0_QmNjiW)
%H4YYfbB.cCLqr9R6q`//.kE_[#Fu,?2e0P>L'J\]clt8pN!GmLO]B)c#@-<B90D588$fL@FWPLU#$2RZXpp1^DHXaul`;KO/Ds2=
%@qtOg"e8..^.g0:7)l_s6Y?F4!aW6.b`r>OTi<=+kq(bO<U&r11CH/CREBtMh=f*^G;j3N),;A.]V,A(*NFMGaofrc:P*GS$!aMg
%Bm7fqi3!u@5\C.2dN=>@3YOJ(%HV0V0S)#06l)B>":ctWp\X8Mi+Ptg^C:i9R[FuCRDA=ugHL'u![l,\io&)bc:gToFe&i/&#HtE
%@023`lMbUj#ol<+NnqMScA2kM?oC^:&.p57ktL"P-Z8<1R)#,fejEVnlB5FWnk'%FoHfPm2[0r*k(`tmgG"17T9"MEVZM&n8F;h:
%-**l@gU1jr^hN\c(fi,*a/F7(.ht#W]XSpJL'h/d0!"g0.`'=n.dRTZ3-4DC6+3(r(CfBg<8cUN8a;TKS:(u#\k0IW6[S-::k<t+
%5k('H*1^-`"e>u?2Ku:"S5Fh>D(@6GPmX%p`tqc+E"5)1JdiGS6?k)kZ5Zd$8G#rnRAdp;.OrVbfaTEMeo7HSkHaZ%-K?0):k>qS
%N9/Z^$61M8]%KNM!bWOAhL27&7hqIj)&O/LbKICo<@7mh>@ciCT?4n=]!UQ[(H;P'Mq^0qi"0uNRa))>/\ls!(H=(uQC/+#i4h!*
%(`,0Cd[6%r/oV8^L6W)c8a+qB@8MNM`>l:R$68*!H['W^E+\5_T=7[KiuGW;)^]N7[:`CtG:%8m[,dJX*5N&S%N?U2I$@euSHp4O
%>K,9T#ol(<3X-NQE,o?JStT)6'*')#pC&Nj#dD06SI1m9A`jJGFE+YSkHa%J=*N-$Pma*:*[Z#P/o\2%U2\9ZcF'D8\"dM[jQqt`
%FZ+1qYeG%n#0uED(;nE%cHh:9dJ:THq#9`64[,5DS10Zo4Z@cHNd5iM9eehNm835GB7/XaLS8f7ZHk0MaKUaIl+i]iW&lXN*B98*
%8]7mm"34q)4e7U\i(OBT<Y.W?!#m8+Jo(4t\Jd>Xk:?V`])3Khpt[V%oUYhsS.D,)8c\OnI,Hh-iHYqtE/6[q9a;b"$#E_5\D[N[
%J((eFI,GF>Z37?%J\.LuZK20Y1XLe@#EELdk^Lm0A(m,;IS0p+.lG;[dt+iZaj1neE'AlM"e?,Cc_0A\keNI=!VD0e3cKD$W3RLe
%i!eYtlrQ5e\E4uFED$NH5Fr"iSIM+A!0^PI)`Z2p8cs1Q#**:NGRQKLpshu#f%IhZ2jS&XG\.%JF*69*g=X2tm<RhKb\Z3^4%DKj
%c3E^H\NQqVN"$cqThM^12K/Y?26qhTfYGm$;ND8)39'Gc_\ue<LcFHLEIfnpAZ9<Ai!<r%S5ptUjJB/BTJM-XgBh^i":ct:LUco*
%UL=IOV#^f*(s+0cZ[bDk+V6_+^fg>;rQ5/tCp/mO"aIAe1Bmq@0G1_[2[nW)FUd$-%,bgH0eilOa5+X)'g4@'K?T@$8Y#i$<Y!:N
%[KPNB,3i8/DcCW%!UB=7%%=sMfW]kC\L&,qZ%&O/T2_YXr#:#rTP*)$J&>SB]U;ZIB-N4]EX(BUV.a)mDtr\B9)HjrY*lk2XP_+)
%@ZfE"oXb5P,9EZ<kc39<_H,*'2Ns<$PCB8q.EXa:2d6itgQI"QH<D=R8AF+t[YaPo]H=@,[uB4X>]LC)UDD1,A[:oU_ek?FAD^M!
%kc&[0mqS>P&$g-7O0s:'oh@p!e5iGb]JTdIKB\jJSPk*c9]'YuWe`BXZN1oi@/<>#%?W6kG9a(r>D^)QoEEjlGeTYG]Pc)DULq&i
%\?^K,^KK5qB9I27bd";bhhY5Sj.d98A)gi"1OR+/h9:$Zr8&^9_=[-ehM<cZO>cI^fG,&^1P=I%PF'olkOsY]a\8J!WP&m'-2W+g
%p/]t7be5g?2k'OSKA%7rAD\?UhTV*l_9Rei)pJcu%!$9n1iMLT$DjG&LfI%dEc716/BP*NhGC/T5<$gCpp*0AC*WFaoE#1,S_(L,
%[Mg)oDhb0BPo_ZS!0/El\V&NR\3DkBQJ%bc5;I-]ZSun(;Z+](9p?`RWEWtQ"=k8SA3Hm)M3!;@C.mrRonsnHW4fI_M6@dtC2^3'
%FJ?7ohDc*]Z\-r#%?6V.1UB$/WGMmJ2d.%T);O(j>T-aJAo;O]a@HHtgto7f(o\V4hQT6^;VuMAdn$K!XPDZ_jqf.kKA.=s>'[I5
%p/VIQVj6#+pq:TpE-mf'0H7q+KMjO]N$E-)hR&$#&ZW&$hDEJD>04JR'oO^q\Mm5:<[)A$]`Ee%rE:TCAr^!7IO4`3Zrp3,[NYAl
%dt*Qk-14f5+!TO_^$,_Dj'k[LmF6c,/%N-@ULE9Xel1!7[5V$I&2"sPhFo=prW8kg7Po[Cs38dE%&C-&^GC53F.#$MR(YLV`V+LX
%\\/<%e*cVYhXj7%6"K-O`lA_-*8KD2GY)#:^#:=N2;V5X'*P1)2em7fYRGkTHSb/rUbcV$k2gQil-/"gn!Ss;@J6SK:QeF^p'/5r
%QGLl5mC;DHMeC8j/G&$;e=""<Gt,,Y6gY?G;5qSt[5T(!U1],4>Nn,KZ@8YD#)o=hHZX"@"#\P"m7lN&<l9[GRjBdS`Wih0;*ngt
%2em9D)=d_Y[5X1r`eXl-2nFNgd"^3mXX"hM`83UnYoQ7aWG*Mm`0T$pW08,DS_0G$]XJni<ap!AoM!Bq`851TAZuhp"1$P'N]+i4
%`:[4qd##H`P+Y_XYr;c+Sm^AJm*.R*(Ym1"Xmq'H=(ZA3qMA1`1UB%9<t_-6bh`WuB$aKeC2\jfR#o#?p1E(s.7AgCS&u<9c^*=T
%.Zo(#(q2GhU!IW<p-oEUa:5O9'99Ur9BZ#ggun5^aM!unmT_^rpElo<R%odjF1u+V#.ZZrPeqK/m`c((7ae;Cfn`[PDXY3orOW&i
%&$CS<$IfuJ%C\:f&eg7Ej7[)Q*m#9\[l;EQ(UIIMDJr63$uP,"V?:&X9'm(s<4B!`:j^+<,%F0Ap=9e_:Fih3^#R70De<a&g(MW4
%n'p4<l"B9rkOuXeV4YJ#rtC[7($Sh%#['#]ocOn\GlPX6W7'WTCr7D`DZt,k&-@t-A-@HpXb]>,)=AN&CUoa>9,\SFBmDBl'*IR1
%ZdH";!\^WD^aN>,$mQHJ09O<gb^rOP%L?>al5gM\(eL93Aj-h5%p@^.ON35l)Ft4'1`VtO1PD&?pDeDD]rkRfTJ/nqEfXB?8foCl
%^9JKbIcu3)h're/)S$3j(f[l9fVTFk.%^.uF;G/Pfj_Ptkf.@K4A8Gc9+[6ZbZ!sII72LmZ[IP-DGfJZo*m:[$PM$#F&*W3HJ4-E
%pJ(_U$Chjt"B60f4^fl_)p)fUOM9`,2h^-"<iq2G`JJ+4AY$E];J`2pCpo$<$ega,6,$1j]GRgZ?6kVdd[*BqMM%6.4t+Y[&C5ZC
%O"M?InBK=1+8^oK1!SL"[-1g&81nd&C..o#@$*[`mfiqK+E,a7TPi<a16nS+'0]!/MP#L#F?s([>-]6/Wi5IIdZ.qQ'E\>^J1Vtr
%BIV`U!A1Rgd/b"c1`D5YCbWX7C;t$Z'0K)TJpN;b7FOn<=V7lQ<M;016cIcK/YsK6RPsK]i^bJUjSihW"!C,ATXDdWWb?rDYPk&C
%;ar&`nQ8i6OR$^eXbZt9p3VD1D>SLM49l;*]!Z%U-pWTj\+g7_"S$D05_)m*^m5H]WW@#rd[(#6MOZa%6lbU2Ubn&&q6;Q&=u]H8
%&Z,dO'hI-q[3V6Z@$a@=qZ0)FMfKHRZr7kT$9rF2qd?bA]+[Zn<O>l7)580COpNGnYt\21V1n$rWD1$oYi(@L;#skYIA;?EquHs0
%,9.G[FH(#CckO:"$-5ZsIU#.X6=J3oDG`uXB;6Pa;;[In,<g[dF7e13Wu.'pT:!Em)$P@;X-1RrOuQE9FThWI"[!sl+dVU,3f_UM
%9YNm#(@m)k.o;k5U5L*#'a8d=?sFlOU"hrfBet1-^hoOn77m=3d1RADa\(cmQ[0$hP%Xla\Uh@`P%]EsEAQb^<sVm7q?jSFZ3j!:
%5q2p"3Z>OK:mEelI^)N<'?Q(44p]a8KCkiO;KRO&cKN(N!8F?.173%ekn+SAW6-$]?cEANe&SX,FgqM3EP/09^PNcJN-+D]dZ8ot
%7/$\679g'X1H0L_$3Z!FQ]bqp*99DDYtQp*(*nTI%)HVN,f`Y,6G`ht,08+$4]d3Z+Qu=:"FS'6+NYZV9I"'Uq64;H[[r&/iCfTU
%]P-RWel:526^h<KV)Nr?GBbs?T)4oNVW`Hd:2`lB</!mMQ>][/4meRK8IT_%pt\1H0ti.nPBVVJgYo-Qr>;@i?n6s?1Ecm1Koe8f
%eA*Qtc=[P;*De.IU81(2;&c!-;?Vh^OPUgVVE*-l11B2AJ/fQ%g3?Z(pep$&A`OtX'1la@<j54!"kE$?.9tLV@r1dB5^@*L/2)dK
%0F3>"j=MV@($@8\Lmr`$^e\$GkA2eI?u*Ru3c7\":_U#uH:2T0\I;[G>qE;k-W]>S_qa>X>\H]*M!SEC-D2[7AT6,&ikhtR,JAhP
%MV8h.K2nP*;*rTRO0rj.P3U.]bnmOoB$rGcgf.ffgVUF5GoN%sL[oO>F'.K*pDcN7<ni*E/HluKWMc\7,nb>6Dp@,s!^q/E+<c\)
%$1]c.?JaCB&&A`n;i8p)6=posT=!V\0O(c01Z9FJ+M[=GL$4JS*VN;U1`-Kf?scAOE=c^d!&g8>66rma?>.WB:\rF-Ao\I>-G9Wd
%$3>uW=@`Pgg?9;h?sP0-!%;kIN@Q/CD'?%l;^dr#0<Kk7![mR3n/"R!oMS@D,X(56l@rng9ac$$+gQXJ["dZ_S#;D,*EEr"#6^CC
%.%(TRSjIlDRL>GK5e8:u(@"CeR"Ub6Y7^6V>UP`t89#S>fPQYX7^QiCg')r,f*H]PWoacDj7+hK12[ZfPnTcmG\@\7mQ5Ll[k<mP
%X"'+IXZ9oe_qDJjWn4qZZ.H-r-AQG9_2,4'$`7P,T0(lt2iPFa#u!1a-J_n:BVH=+1"+RVc#KnV-skTDbVFCRP:;/OGI,63k).lM
%]e3-\a:GZ9KKZ]r)N1=&&/kZaF[\1TEmH@*(NWM[-o-*a\2.i3W9aRc=#EPPJ;Gi;iCU:D+,ZSX-c#C`)G^@uL=GDF8X8.+Z@)#L
%lqrkhQGb@TF-l9k.I#t,2+?-dN3R4X?ao[0`fL;*G&?CINQ_IEh>nI/=?AXgnN*R>@b>@QHiX*64>o.c)g]EWeX]4X%@E3t)Ja`r
%U03Li=ZV`h5EZtc!g1Ba:eTH"?(]Vtf&=l^X^ik,gaT[VD.,,a/T;Q:aKO?(TUF7i)U4?NXk=!8,QTL@<'q&f!&-.R)O,urk6f3l
%`1b"hq*=0a4Ql-!E%d<Nh8?-8`fq,&UPq8^X;/P&YTq7qCuAUgbefY&]mnR<+KZ;o(8in'(L<!-,?Q0p<=.d&bsXhb;g%+-h38Tt
%e<N20P\brFe7?NVm_V4I2$t2STnUH^LhZ4MRjZ[pTE<%a1pf?[c%9\HWms^;g(QGng9h[)gnH6JApfj^=>5u]06lYA5CJm4%Is:F
%]6t+D;IDUIBLe3WqaEFD;C9\QPtY@E?_&^YStZ@kfu>impg[R8<he$A7'U5iAUMU3-nIpnSoc(,V1[__SL^X9a/bjkQhV#E'76Om
%\RX2*[UO.4CP$]FMN'uIBcR92n=j$F$Ba;5)83jEi3:q6ofR-4$muGIYE?h2[Ug,U0eD.V7'ChKjoT$VHR^pSAIoL</V&"7q1^fF
%QU2*,YcEsgpVWA06B")A$A_7"fZI[9*8+j=FZrpXMZKQWWup%7b2hTpMWK`?_)ARDS7Y?6CVT._^8+3lA's+f6dWmUD*o!L&Z5]#
%:WrtMo=tG-0730=*63&1$bn2Ys.Nd>+]"J)AQIZ&oH[8AO3aLPT-Vb(0eoAP^nuo"/i3i+f)5@tf@i<mWqlc2."L+_<S6=T2liu/
%ZSHamlWQ\o_?X\mJ7fek9$V+Kk3&I")D!5U8g,U@:>HoqFq>@`iO#D/$-r:Rp45NRe`>?fL.+Ma41l<.ou-b7;WSD#TWR-t5VMX5
%MqXK$ZOg54!'/SlbCTl%(C4,R;jBMnVTG/7-Q/d.+h1rF&0D^CG3fdWZpV%R2>JO70N`]j<0_Ve5=-!q:$"`$!c7uhN-5]JNtDB1
%Yd+fC6Jt`I?I0P<`HmoeF&b8$[OFLO!(fmGgpU0Qj4#6t)>I/E$Ia8D%38h<TF&oKq\@N.fMZDtqZU1LJa?KQgb@-$a[\s"c%#gm
%7=oBE7YLch$Y>["fB-YYg5c*]!*EnYalVjE$+AI?>@-Nofa35[)F,D+=M9a*LG"*CijeS1mlc<[Liiq3[)#@r=[uj2VhWJXN%3K3
%k\S%L!E-Roo1Gb"YX]PU5oe@>:nAmr#S(',E/]IPR:^P9qe$+r+UimWU$l@u3ON7VC^9,`b6shAHBfsW@jh[GH%071YCtc4CO6((
%=U]M:H@7ZE/'le%Ccru$K;W!I1)Mr%K*5>(P/)*)r#Yu0p)me)0o=X(mW(bjO^Fig/+L6949QOK]1?O<1+OfgEhd,R;Ag'hJ.[=Y
%2g@4LL^V/oX__B#.!?CgO@(Cp1*D9leAX\rc#m41cP<'%f.fAT5n4VD!ZFb^BFoAUHlsT@[TN-D]@-E]0j079f38"PP`W-kYl1es
%nPb+^aU2s$>bB`Pj]"%JM-ILLG;82[q3C45[]EM+;JYto_ISf]KHrNQ,6VJFqK=F36bEZoAWg$u03u:KI0'_[EIOl#f;%2I-n.-E
%f[j4DSlM/N!/@@%=@8[F[S_H'7#S_.82iFf^Q&Pc+!Sge*=p*sn5e?Tl73:p'5</YOE?iG>)D7tk_Q'm(K1&Ak]l[n)<u7*#b&EN
%.Bs^9<,J^U-JiF`"N)[AUC]m!cSMV74i;RXUBPUT1qlhLall,$;?lQ`ZIIpMG.od`HMAeFm:%6VqY$jDAY9m'R_SEi;n%Xt0.$k%
%F0eU0;/Aq("UDanb1@l9N[dT4$o#L\@WG"<0gLQI^IUJHN#kVlUc?h*Djn(:Ik+VPBNUC0,"a#CZ3C&c08H)n(gF^Z)$$``TWQ=,
%)1GH)8Y$L\/eK>W`VNWT:)^+sPA*O$/q_nEq`c6tDFEQ?eaE2h&j7g[*RDl?Oq8b@eFM?;n]BK@-a5%k:/E<eF,th<RF@pT(F7Jt
%d3K+kKFqFYg=^EX5UEoQWGF2JW[bC9^muUqY=BRu()s!%=g`N/?BI:1p/B'XHCSL/&ntS37WY:TP=3i,l!S'8"._EgL"R,;aZq![
%J2.=B/0Yt=jCA^o("j,EP#.u,$^9qb(`#A0335RgE8aX!KN/e"P=dkqMQ]JUEsW,XTJjL`.CN3Pn+/q1N.Sf<EX<!2$-\tbTf.RH
%a3$=<[+)!8E[b2.W9/BlK(_DPQG<cVmS+qj7A6c83b6VpK+M@&1PGooM1f's=ZK^W&rt,3M,7k@d`cVk5ml!qa?F1W&-?FA&B&-3
%1W2QG#F5or0,n$aKhB8rS&@$o]p03c<lR.!=0`AiBd^;u_/KrZarZZF-B(73RRO[cQJdO/?8<td#dcNrH\1P7i$?U#5,AR3,b-<h
%fKG<+4&$;3bi4/00'&WuY+t1.#SUj']EZjK:4Gn9\je*:jFuuXlHTugbm<VJMq6CVFJ\'.'9"kR6sV/Q#&L9t,Kg6&\uOdEKg#QZ
%eTDLl:;TWc=ej(]*Q$O=^u;4`D1lta7(4R=6qGULbqQFE&/KU8eHB?B[Cd/^!WmB4@!se"j.$[j#3>;n1ZCS)0l)2E^eccie7`>Q
%+tY&RCqZQ7W;DfO#e6BP/8%B5&#:[G@^/7MRgdJ#V&EhhG'frm,<,]L`+bmE_`DMR$",&R;Gg6bI6*,YK+KlV__MXtU9B[[&=PVB
%\8EeV/S`H0k/I6>fm&_4]NLDTde.k#D;gP"`c6SP,e<QoMAeH-p,5KiTH-R($R7VMr,Ej19bq6js&?I#.+tIc+>OORaWe'>6@Od8
%"pSg@27S:9C#Q(3A`,E_GjcqJ\hmK;g'/^]m@QZNnsnf!ejaucPIdqW:*(i(_hoBmYO[Z]S-\$Q5RWZ!o'eTN<pIIAo"GhHQZ]O?
%obh6$e"g=pY6@_GVSpnp#BCoI"?M>TaWZX,/]XXr6>Xc&0?OtlMTu<&_d7@6SmbS2Wd5!CaA5[eJ`I'^%Fc2@k#+dX_G"/gRTj3H
%JRdTi^rr7prC#W*noTDW(5C<?,S/*cUR9(=^""qeiJ^\_mn3#nj9A$qG[Z.p,r8i6@PbJ?.A)WC[+f<-NK9oPl,/]YEhWRGe[&\U
%2'kj5j,)%6.GLGnYj/IYJJj!e.f4s@+mY(jq?DYd#8bfnLR>G7E%<4$A!L@NS(,l:8*5cqVE".D1nq$RhZNaB)TmRk>IaeU.nYuO
%GI&M"(5G`P+@CmrXFoEL9!`D;#m3,L..6l5XL`L=)1YWI:LWKJ,l'JSe1U\)F+gUf;+\Y;]>/f<6-j;9RSKfHjT+jGBtSM'lp7mZ
%=%io;.kNh;)DSGSnri+%XNUi&NXt4Pd3s8@$om890hHo"lp$B(a$0$Z2:n5W"t!\%\a4uE=qA\*HCp"mp4j%"KbT2HQR2)oi@r<-
%-B>7kQ9$TbBp;DT)A=u(OEgPUXN4mQ9.,C<2(Trc$@Ff;!1\3jP+`-*/kg7F[Q58)#M,NUdW:EY#dVQ<@X'^$$;&WP/"d=/%LG!F
%c)1Vp#1b4hQgo6)6OU>dg)#]ubd3Cm5eQ6r,5+">;,C3PJbf\nPVkG":]l&fTNI&>'/0n//j,Fs,'j@uoc[S#*d-9>p,kAbn=[OR
%E.fJ\Ca[cO:*>:meG/\K43t>_&Moo:dnGq4pt2r>&A4,6M&35RUkF/P$@kZ'gWCM+6rqFfb\DEX)QfJpog!Z1*?f3]"J?Wn_[tP)
%Q+WT=Iu1F6.Gl7j5qEM(<s?hm95oDK&i=/iat?F&1L!V"WAN<C,oOq\2?]^]F;+J%Kd4<Rk97Qq0Fst\2ah>A@)%jeUnqu5!fh_>
%X:$=4R_T)/S+kplU:UOc&tR">M2fH.i.\NQSsQ_)`+khc76HUL"\=3<pY/6kP<_Z4e5fokK*V`O\"kN>lkmgd5n-JlH(sk"6c+KD
%UprUqks;?Mk8g*T5jQAtnat;,M(U8Q#P#LsGDVB2+<C%]SKV4_BsRN0W"K^k5hmPHK)h(EWpE?^M%V-nfHjC]1_KEN:o*8FclT%'
%'F'd,bg=[InC\qGU`E=(i*(t$!0s0M8(er^F`;5k8e#8HB\F/U%SfXCZ3*KN*8+Y&M.G30!)u2)M-3H/Oo`Q:R?5@Lc57si#:Ug2
%KT]5_g.AJ=b<;=*0Eo#,qVZ@gB-4D,N-P?#2e#<0"d'A0g_8M@PO]$#B#k0"`1N/n[\u9AKZLJ:(7UP<0!RN\GdG<gLCgU5A.qU!
%coU9VMIBIG%D'RLdO`.tN-F>;bVH"a$>o:<FDpCfV3q+ST9Wdq'+WD+1+Gi)UcloD),97V/Z+C;!]egl7.1us">dS6@_f)1V00]&
%IA+PcXW4'n,;N&>Ilp&@Ze+3tJ!=SJ3WS"C*Wr$,)ildKdg@+%5q5j$VQ8if5%b;)pgc`G["Dki;<2^f(j\OJa4+!thl9Jt9IEHA
%&>Mhtm;c;Je7V>KPgifBObJm]KWXdd0ioE]Z7KS7(,aE5*^opWlP6J>.'0sW\AHeH1@<R`l&uVd\sfdaQiN'<H99d.6+'V""bW4^
%.pTlsWDOjr^b2ZGi0up2JM@:-U_kj/%LBA&R@?(48:(5>?ER_="i;TWkV,uWi"3_A*=R=j])c'])JDI]S?X5<:$)rk$"6\7"phOJ
%75RnW5Y94)?k.0DZA]s@$,Ztp37DP,%I8]H;1`mf;='NTe4\^n6A=dGa-S[neY<p[,aeXcEhj1CS!H4A$+Of=:FNo6Sjg5l?jf<,
%m*V%/>)Bu!NR]8g$G8.LXG;As,e&A;@ZD?mDfCt0XiFtE"=/;?Pg^GW'2PVC0;f7Gfsm&r?[t%"eC_*0ZBG>1=%gLp.u9a\O"s^c
%$'=^T,(C@fE%H/-4Kah?HBFjSYY>2)^n6Je\VU@qk(CO[UK3(ZMB9TC-7AlEg%BCk#Y:6f>D\A+,,L%H]/1@6g"([ClJ3kcfSpRT
%'91U6Kr^::B5B77l`^ZK%FAiQXarr89A0>iWa'56@Du^[Ea'A*f_Qt,A7G<FcjY5ZfF)07ZJ!\ONFQ6i8uY$k[ItGP!mTC25Ru4L
%5X=)8A0lmsJ5Q0.eGDLDiJ3.P.crl(MIL=Ys+r^rAb/Mas0H2o4,cV8ms-W7,mHaWNFsPbNl)FaA98s`Y/icTPm*Nr,b:jb)Pkni
%#N^ZhQnBi_73Jk`cq;a4eW@R`_2rk1GCg`sS/?i\=Gc3P2J'hb.6r&^k0m!!27FRjaSG4;5Lp9u$rp!L90d;.*0Xk&UY:ReOV'2^
%k`VMt)toTA4)ti3#Cp7E3r3Mr:'@*/Z9qeO#Y'-C>`IIB1=U@MEV4*YnG5]EIo>_Oh<E>[l&ke/9L<Otc/2G2bMbRf.25o^*4P-R
%Aecr&UfbEjIaJ@>?G`3+7.&3jPO4*_9JHE-\\q<3(kcUYV[btK\GWj^"]6iX<"Nj7/2]^-GWTLhLs8DtG*j<@1LqLh.@<uC+s#\F
%lN-;<HG#Fl.<rfB(Z(u60U\`';=Z!0X+C*&Ru]s#+fd$M?Aq!u9d(dQE<<fb>31$<<a:.=7K3qVO\JBCMZOOMpBFm1F&(Dt9+_at
%d(Q001Cf%D=n\)B\/.?2%>EJfq-m]&`M4[j8Kl7b/[ojF1gqKjig3$kQ6g'e,@?dSe+d%`BguU<5d[nU>:Qu)hI".GC'PA#[>6]i
%QiR0g`<^D`:f04;Bc*%i#sMKb#d\=Y.31]*O_2cX;9UJ_;B!Bn(C3ULU.!s=ApPO36L;chd43'^+K4*%,%j;_;^>Bu3lsu$8Pekn
%8<P57dek:ZG,M"HA;l7r]p,tPK]l3_=.4f(LY/fG;T8=2;Z=h7UTlfd(`9kp/A%n&5iniC%"P8_a$(aNXD"E-#_ttF%upO@_H42@
%Cpb#)$&!"!Eg[WpS?0URec9=t6*?F=-*2;MOe3Om0bA9S2bI=cP2&\AYo)6hnoUIgnk4)@,ptCF!q;7C=RVN-0bEJ(9'&3=&hD9A
%`'QM98>kuI3LYJ?<hb\c]d\&0D8lK>q]oRBYXW_'(b([oTW'C-W!&RnbH5=`1;BkF\O&V:,3&S_np)O\,*SkKg`6tJftD2^Ros*C
%5"nf'P(mu<*d(561e]<#ZFLTG=j_lD/H@F*FTf?S;m@%2<a/cp(#f%`:RCQ[lsuk\#thX\OEf4_VG^e=!-EuW4Y1+epM6nH@?<u#
%Bg73O+VLU29S,M^n=i2kE#n3'>pFLMA7eWM"ooMUefn3b3j?c7L9u1J4dQoOPo^J>N]OX3!^suX[clCtKT6!;$5(")E.5&Y;Zs@>
%/A(&-^g@BF!)uW)\9:p5>GAe>5qN3i%GrfO_?(9Id)K*J[.%!nkR%<_WGitd\.X$qJW>uQQ^5.+0Ra[d1`>"t+B<6+Uet!S77'`H
%&3/%D_?kXA.';LS,,6+\H',&bQ4\#qQr*lNN'(?tC43nU2AKML@ZjR!,e3Yt#1.FJQ]&Qn8e?,tA3^TX/ghpjJI<Z8mSS7`O\u>2
%Y^S2PO?=)\`h+?A!-1A5"9k'e&Zc.j%o:>$l#IAT/OVmdB/0[h'58U]^!)8+bcU'@$ecFeYn=\mj:>pUORNTg3cM%=1K]dHUD7`:
%8D2/d9]rQDnE$iSZ$qn>,aNWFj)bF>_0h>ge<Z1[#*+inSMnFK;%s(R/HU768RRIYPI?l?D61`j)+k)]-:)$uo\u$O2DF_;RBU(Z
%WD4BCrK^t)9'7cH2h8jojpA9acjYO6\8%cUc='AD9XmE@Jo8CB&tC+=CpJZ2A@l/X(dSV/%nSJE=9;YgkcE_-1ZAX=^02dLJ:'Bn
%Hs:^K,='9ZEZYHs;jD:%.!$F56WOnjK%VEG4uZ5^qRiQjWD\TTO%'*O/dIK36R`$9M`p<dBPtfsfXe^:U5gA(-WD#$K`hQkC_UWC
%@,OUi:,)fSC\e<4+6Z`a6:1q'G3bPC9%$[WR1J5h]\jpr:VAZt22]W]X+8B[QtST=Jt/I!=s=\C('[@j"EdRb0<e1W%#(uH^';H?
%W*c9pX.%dV;^E*h"ARiN>>5`>?pBtcM$(s',OS?cdN(Xj,dP2&!YbWN6p+nJX"hTuG"49.'<oH^".bf-m"jg6V`]-[DU>^6P+>^T
%Q'gs8!Jo0M:&omsC5k8's+cu`%bdg]0MP]P"Zr#)(BVs,V90DIS+U(>LL_Lceh1'CX?)R8HS%3)@N4<0f\cg5^^o2@)MKAJJ%R;D
%"RdV8LITI4M/o"&=\Qh5-Q9hlOBc6peA4_Z&PI_h$'7Q^ZjLgp@3AcG&HN@qVZ*J_c;b_$N?222`dfZEQJk'N'MH9)pZe:m'LN9K
%S9=%/Z%WaSd%eZX<;/rb1CMEE'V#<B2t[:I.?LTtINK0L3b]D-"D2F($n3S/24tunBN9C_V)j-_WWbs/l"]4D0M>sA:XNY&aS2Th
%_[@(KQ/OZ"6GPi:7ihmGV4RsMTOi+q-58-SjAE:cF6s*T[E%^r0[]8RJ1b#Z39b]E#.[AI1rY,\6[*!00OdQYc`Y7-P`W<f<GWDm
%L15d*"13VXK%;R8:9;ncB1OS`iWVHFJFkpS6\I\*E+;b>jPnhNcsn56&t7Ogi.mD3<dYKK7YtjEK%Mt&B@;)Wi3mUK487jq#qV,[
%r#!e)cc\)0Bcs&d>U]dfLu&2L&kC<N7e3oKRT!L(TWn.$1'eCYq`]9#P)8l4Gs+-bg4Q:f<GZ?!$<&O]m6JMsbf;tc$7$.NpM:.$
%>=Pu_q@ol@a1,eb_)b%Sp\I/DInoa:0b7V7,"YP%$GON*3WE50KsWgs)sHi:3bXonVsacnFb7Ruq>:#*i5JOVagL(77glC$UW0&_
%XUm7sdTN6!Nel7WHZT&g`/,?)Z&7oX9<(u+,[6a*%$?oJ6OjceC_U2*_5jA0a'(:3bXe<FY9L@!0QDAQi[rkr5THhLZNqFnTmpT2
%9)tC$o26lC:t$uT:*:9S+Y,L(>DKj_X-?7`i-F^On>j90EWV4P")+OPb.'4Ri/;"$g9Ur_`.GEKn;0a$+[d\MNIEAg-;t)*L/D-8
%B+fKO_'ro3=M\#'_4cPcXTg(+1ecgEi\35.TD?%M+Y9->MRs1YTSj.+7RS%`BNm7:K$9nU<\-*PW\E7c4-=uRNQFpRYOl5U,fD+]
%I*p/uk)(:D"?m.8gHm)M.'b[#Pu+RbTTVhnUj$OJTR4/M,3cqO-9D9L)nd=(>pSYP)jM@r<k6h&YZSIN#]^fB<g#16LGU''O?5&<
%,@Vus^cF-.(2>bD>"$==2@F"=k\#*5=qY$8kAocWj\)r^T#f)gkX9!h"NEG]k61RYdKfSK48_q[_T3(h-ou&l@0YAiaJY/tcO+@0
%'-HV(OKuGN1dW]ZPRetAZGV2On"f$@\$jrG!AfIb%pVqm80DQgD+R`8fX^8OGWZW!L;OQ[^4taOEusD\O?&(R!GdWoIRZT[6p[Jt
%!NRu`)Sml4q(guD*b26>?G;t1'K(&DZ(mhLF>%>5S7!Q/V#Pt1DgXRRrWTD^@Tg9X>q_>4,5_Y9h-W\c,ck)(%+]5JBa6W:'XPf9
%YD5o5RjH$B&jn.7$HF9&?oh93*HC?]p.)(s90+4^0UDD**Sh;:mdR.D1-L4#bW:)$aAdhn7r^:?Vp_=JJFD&^LCOi&8>Jrq6%ap*
%+&6:bO:['<7"-%H%6uElK*"!1Mh:(11;%/=jMJ+2DAIf3m"@8p<R7+>1m-c8/JSBD'>AAAp;pR9BBN,'FDm:0C$k<gi<G.gF9epG
%eXp;V"Y%K)hG$U%)_(;fO+AiVlu::#D[!J+9+le5bI0b-oRsa]6!.'fD6dtHJ[K"$MR40J<&'l"V,JZhR^"CBB1n8--`WCZkCa2K
%E3#WgZ-]nD4UFJ(5pHpmP1C-I"m"j/7N/.RK<TdG%!_G0T[h-o$].HWFT"`H4=f0^hl#X@BBMf5-]8.,$IM)B_9e?qHoh^S=osST
%6D@pIE6VSfZgKl+UmnZUK6Z1'dK.3i3mjmI(.Y_Hm!<+p\#nSo&N,*3aVBFH<Fs#d!RR9sUq;3Mgm$=\'q-Y,:SNYBB>tj=T',SI
%=;GM)6#DAWGkgc[W,JL#Mi`pOab=1nn=L?eae4sU\_;GY8nAq.&lXlIGV^JR!`OkM7EcoI`LQjf0*g5K>8)jhIK2[E(M'=8/un!.
%:'pW\Ln13o8]!0-M=Ki;[tnkdbJb_C'$pkKrknd]/T-g%Z_taZrX=ZB/*doV:\5diaJ)9SN`#tc$:Q=JYp*@`oRaS$Ch:PI7mhuP
%AiRSG9o#H*b80oZ_$DgH+QgJ6P>4pkS.O6SYrJEHaK,b:TaR]0&]HYRIM..Q9aW['cjmuc)-H_DX;WV?Vp?h^LY@uoC.M5V$jf"^
%kr^_?!V?B0#Y'mUW;I@b@%EC6OXZ@D-&>bZ083MnmV8Mb?oY8Vc_CUZ;K!.+VYnpn2k^WgTGgR]n;+s`6d!lZCBW+l,t_(%oS4.]
%%s^c#=_8`!QIUZ2gk%f,5K`fP@?Dbb+G2!n.H;#"@#bTXUQqM+!63;t2^HjtW)nOnTJf;0M#AB@$@/W'64QW?)c2jAoJ$/-WB]$)
%8M9[.@teua<];^!)^DcP"D'p:/BR`?^'2+%b3p7*[ijqUdS50T//I#4Ln%:##t7:cZp$MW85ZI+jtaOs4W_2Y44u[p.%qIN.ZmIs
%>2HV](m9n.%>&#s'$!Z\4G]s@Pl-u%?V9Bql\23q5lPM"7V.fOr"f6G9R3;B";41?8K(,tD(),^6;,TiEf^?1N3kO"Lfg4H]H/?u
%-Z#/87d/"UOb66Xdk.S&OeH3=%:5(]\6-^:ap=Y!;_k+YT+\"pYs2G*@(+:'99o^6:MgXue%s3OER*'0UQ!BPZj:P$@Ud&NiY.(h
%Q2HT5$!&``e/JGOB'P7b!NjAofV`)o4-#n6nBrUVaF6^9GdZ<nJRf3^7IdI,"qn[+kRtG(i9iI#(*EVh)E:E;\NtQD[NsB-r#EW@
%,a8liX\]FVB^/bhi3iX,41F>Y%!!%8*?*kKR,#h$A>O=4":a_'XV,`t:lkl9`3.Q?'@.:9YuqA>,'QeVc`VX266F]L!'Ysg;_)Qf
%H&FQi,^`f4=+?*g7&kk8$qOR-/X6!3*U*Gtl+T(<[ERPO$\kZY"P1kVL!rABUKW3h.k#Hd/da+N"Ho20T4>%\f@jLrKL-F\Ymn'6
%deh!Z&Z&r*".NT<[G926.qUI*'M]jN/^u\kWJ&\M7,O1bM[(DlJV9.,q'E%O&TclmJ]=RQGuQ:S.e6mC>V7;n$oF\dF/$AUi'J]Y
%VWgQ?\C%UD>'n2:qZ]8RQT,S@I4$F2L<T_`9.'<0U1U/R!bp>F@t`l#gMToI9>GulRRAZ\4,p_saTN(]a.`[2JD<D;Ks;)@.p3E_
%4Bl.PjBU6-d`2pI8c^Um$6O(t\ctG&*lLm/YtbKfF='X29I&"]<\"kLP*uZKVWn$nP.;\adMOG$+nRChMag@mIkE>p4[8K]'Bp49
%hF-4+V,S\rDe#X9Ub@@79-42&G_tMj?_=F<9X/_lA1[Y\W.=0JR#)FqJX@#Yf)MUflEkYPUCc/-A1P?Q;AC1p=i@8,PO8Q#,\_*/
%?3phaLbG5.jZ.lm<2;/QQ:C.&j9eR0<?Sk\TI0Dj*<o,#Ap]*<L+X3-jEgCE7Y)3&=9/1Y)MtO/d%-"5k5($'Ll4iT*ZLE<TR*#+
%APenqH",0d0UsFtHin(a7C9P*28\S8_Bn;#@f6gt+SOeMeKqV1,AL;IlUX&CpTh*"20-%+'`<Y_%YlT=%8TK['l-M_BcpgudBKoO
%$=>K=QAfRoEiq*1FO:(d$O`7`.>![4b`"\@0e:b5'\kD8fb-<`CA"Bb)KtC6\/S,8lXEB7[Lb?3E`dZdKn`KWJM!oQSNo='\HfKP
%0;"liF<ka\Zbc)]a.:f+#chGAW^*)^SnFEs8<0C,>S9(e(A$M+P_'cpF]Dcf0@MdZ(`F9T_u&W';,Scl@DFj^'n0j4?Tp"3,J"aq
%2mAQD+tPN9r'Sa@1L"OXW,VLp6XgJLCHk//Je94VUI*)B<`(3EX]-,]V4<V*TUA16k<cID?SPQrB\!3m$ulX:6dnXH1l4=$3(mF6
%YMm_5[#?hb,cdUoSeD!m$/j/[qAsA&@=>KDZMLIMibB_f9,9IN0Tbc<?u)uiaKGa^DM&nDG/3"/E>i"(ZGU;JO`,$re>mnGk6cr>
%$=uaP;i.*cNF8-Z8jQCp-cJe*Qlj6L'On[$Pcn.p<-E%4CP1=n?YC&)b@!1#5nFR4NjYu)p,?8]^/`U%.tC*6\6eAVVA;uI:RW0R
%"s*uQB10=TSYXu)Y:N;,#^n-k0ZY7RU^+J,&4keH,AjM\ALN\_8/*Sk%?j`,9&YK)$p#u`i09a`/PC]Uce>HKkDW/^:b36hqZQ+O
%-nU`Y=JsNB&l!n3(93W$$5;I\Xbfm_8ON1lntf;i")UmU)=t4j<3Y7AM0gQBDP6Z\U#]X?2dSNV<>aM6%-"O'ZPE0s'&o%X+N[r(
%CO[A]=^X/@Kq&:p>;1FD-gM\:L,Xeg0b)$HUpH9K)ks;[B-T_jfb5*P-OP$W&rc$M]s=Vh1QjH`fXSr$)dJi7(`.9d/OU$r&D>jf
%Qt,ISToC`PpBXRu;G!ie;Zt(C@PGSG!]mUuM'oWp/jHbue0@IgJPd9fVm=%cFs&7kG3!CYX=qX=R"nXcH,5^g"t(fRfTONV3m2WI
%PcYM$8:R'bK\`kW>T2$1RD7D>(+KI%X?l3<h?rsK!A36_TonFeehhs$[:5tJ.Nnq(.?2j4o3`]Z-^Adg,ieQ=),lllFQP9L_tY?k
%2W,#I-i>L#(Q\^#b`7K=[a*&T+Pm8I!kLa::8@3g;6',BI\FMmQ1^*_?pU/480#IgU>"X\^ml)NH_oZ\[./Q1dh\;R!*ff[,:rq5
%1e&$(#'%hcr7J8'9;WRbKi=b1<6GQs"G)EB>Xt)n1i*Mi-A&?oBd"V%&K,GQT`uVa?n2:ODkb*s![!8C8#E_s=H7@TD3?(cJRTpe
%Uf+.:Zk*cQcY.T)>:[Yur(d;!Y9d[\kUbpd>>iE\+SQ2W%KI;ID+=n(TNbiQj"Ei1KFqPRc3TR^b:CrO`\pa0BRh"sl),"3T:Jr!
%$W6s=P\"hhiLO1FA4Ila;/L;.+&GI2!20Kc[#'[>_33q+1^2NKYS'=jmY3;)=@4PWT9#5[!rGn%$-sWCc!0FJ#p<#ja!fLjgRK.F
%8':mh"H^4R7ke@J@E)>YjA8]@8DY^#(jA<U*c/f6BC1uhE.sM_%ORE(,lH$]7)c2#6ABb`4OI3pMMPh:\!)p;ZkI9j!Y*3"3b^-=
%-!0SV(2ub,38f2u4]Y[dXY`riW="Yq&"S:AP"M.&-rA!<bDT[YlDPHpH5mR-/KF?,Xa)02&_Brif$;I?b.,8[hC-5SiE$U"-"/@r
%G$G4-%e^bPi?DdX:ul.T;L9KUQP`:JQt_'hBtu\WAsc9,@qs@=7!se_m7rlRYPX"2:<rNfY1/cF=r[m)?NV*J)SA8`qk)F9mEJie
%>\XgN6"nA0WEXrtTM[)0TE#d->N2s.^e,g#.s@9!RS\!@fJjh(B&^JUQr6;/'JbibAG1]X#+,F":A0i!TZ%a_!XNqigcAI:c_Og]
%.!0r1dPa[r.!YTH#E>6iVdbLA,O?&a>%"al+JE6k8O#''lh.1B?XatW;=ZG"1*PC]?jm!>T0YFo`..$*K3sTU;leOn;T!8q/^kqg
%dmIYs3!(J/Iu'V?JQ<s62A%MZ_,0FeQYFhT"e6B6BaG6iF]r1'*)<Co8\V/6F=S)K"GSI-(bmHiOq[,c"QV['&tAl_;B3h![!.\W
%AZUOuQO<LC?HmY.P'/8\3gJ5Zo[YPCG`.!f1j1>`A2mld8KeZ0V"'UI>B8FV>8jmdM.c:YPHYLJoiB.m,k):,N\b%PGDb(tEa\s*
%;9Y+YCME#Z4"6c*`7lPoK-0U(=a&qL_Rme\D+\4-;M*I$GbY>eKKPk[%*bm!opX*7@YD/i1UK]f0J\0JV+q=IE&?1EP+DqS#44`D
%Ta=d*MN;RFfV)0*3HlRA':JZ:q)W2\njuL3JlCZjg8BX/'C43uDAaC]$9s_Cqk_M_Mq+7!D+<f7OQ!QQIbFiIPo:>*kmT2qmQab)
%'%6q_MEs>rK`2@(95R@NcQ<%i9#nd>Q+Tf)eD##TD:u+pG%Ytj3^=VFqUAUqHU>VRDV24E,sg';c5.a\UDW6%lJ"-mf#UI;3&*!#
%PLdk]/P4H;:P'A2&ij.kQjG5!$C6iI#SdL1XAG;OV4iYMO@FTdi70]2MFaum:j:"[!_L.^1#;1Q$&ua2d295I6^6?Fd^]d<6.$*1
%k/gIP7O(Z)'_RW].<HK4BaQn<f/'Tqb"dH9k&`rWXSmVMHXX<:(bRVlKi<i,;+s;s1-e6ep*D"oLgCH=BX+oJgKs'A&a+o\_^p7L
%mfPBJEdXh,eddBZ<SJ(+,%t6qnHn-qd)rGE`tUs(86=aUpJ)R^35]jJppm+#5/AF]/P4i-MUool7&*GL/YkjH&!#/d8R.1%f>O;a
%CccH`&DZGDP18:K"OV`fFGlCg1oUH`29U^3BT`V!->bS!&YarN<!P?[28`$9DG8Qa#cU7jh6P,k.!O:9OV`Oj>kr3*[R*$sP#3QN
%&:J&,!b85uC$Fp'6=#Zb32VGsdS?O(5kncgSSE'n%2&^GUp2_=pCK^u*M9EtKtU*UY5[(kW^ZLfXF<ML=1irZU+bFN8BJ([`NnVn
%6dAlq6Uj'(2+c$e'HYE8]TF$E"D"LZ?WtE"lq.@Bd2#HSUg^YC-[?^9o$gJc4M6OI'!69@P4u]TUaVIiqASU2[kLD%=P+'d<?>/I
%jh%7>+f9#B3\=6@a"cQ"NDM^`La_%^Q"Z\mB1F-tWspXOE!_Ue:3J">$_WJ]rA07F'4;DM2Jb)aMrPTd.I?9*qStI*5YrRXldRA4
%'Jma8.hBb-PdCgUAiKjJ28BB8,3Ce@*k@VF63U8q)1e%#8ej6+M`usX.[Sin.7]ZK*#NRP>2TbjOn`(9SI:&k3<pC7[Sgu0fVR/T
%KK(=N:OUL[d6ffY%RNX*7^oY$iQ!;H6;6BSen[*Og.6k$A(t_]@:I0s-C\TlINTuiekSqq*OmZr>n_c>40aYSgS#9Ucr*3P77(%>
%P%>E3H)]p?3(bRQ$A-8D9ear;A:J=XF+Wp6p2VX1/e*Ah,K!"R;W1*.l6IKk1'j2eP3e2KLMZ4m9<e4?e-SuU'aCTRb=%3p>(C$@
%"uM:hlpaqkVnNe"7hCRV&\)=mRO*_W<3I&1,f?Ae$\F@j&>k]+"q;21,35FW0^I:XaV5uC%))10"$r4k"ro(p&?rG!gqokDg,B=b
%RPD=<Km$K.HWYcOe&M&kW(=]:j>gD'\02OB8dVU2`3Ss?O]>,"7":%.X^A2:fFXboA_Hto^l'?T:^@0HMKPYpk<qSCM)#/^C0@Zq
%Kh%h[dF"[s;,^Ok53-(HPU]9aQVbb''&%pR8,+ZeKl:0o1<ldt_BI.Lc2^t4jQa%)JeG&\ed*-E]l,&9X8Y66-.p8rS89PQD]l=(
%\9uI>2"FUC8A59GKZ7DB1)&gRmo'e:OGmbu1_S.\`bcG:U1Sk.cF3u>Tp$11,elXGAF'RI9Dpe`JVNE$PU5:^/A.cBAE,EfOjPHE
%O.uT+rt1O,7b+:C#*s&R8F[.S"CiT\.@+RKF/PguNM=PdHseN-Rt4D+DA4FYYH'auO`E9PSAaV'+(\cu8]hVHAdj20cu\&Q];"0u
%P:Gq"-nm#91o;sl2XF:;i3p-$*5<gXc/%]R3iee`Lo'-!Sel6N6V;pSY[i6)@YG`"<,*/a2(8:L8NC:6e//r4lrq!7gaOY%A`[_0
%.u"kXRd0F=(h,mHVHqCE]2WGIC#iJI=e_OI(M9,N](f1Kc_R.5>REbE'7Wb2WlJV_s(T.qgiW;&h%:"Z?4`^rer5@e+n`m3,`g&h
%-.s&?42gm+krJ<jSnQ"K73;"=9asVTcQ8@RWtOJ2PgGNRDTIloRQ4it(4JAFe9DpZH9<%D<bYT\G!);+WUW.9>p>.t]0_Mo(_*pe
%'NkbW>ZGN$90<tO@`Dnj.![l^1LAO/i\`5kGS3YcHR_/U3Wsb>8qgnl\sX9[]_X+3#`m#ip+R'p!i]e;;iQ%k0QcO^:`;HlBi.Mf
%B#16**P7mG%n;fLCsR[Q0@H!,El`e:kGnbD9;0/EILMu2@g9T=m7!9?O"e=f;%!=D]g;^KO6H&*QK[iQp:J+tgsD8BTrXa.Bg_;M
%Ba4<sqMoCI?r\`$G76MlZbh+1J=//V0r%7G&/^afpQ!UWDM@a9cQn]+Q1rS>/nWIX`-Z-Y#9qc3iOq$$LCHt-iOq&2+*OekiOqmd
%JH&[(4(q+s?B84WP*PU'8pZi*oJ9On47ml]Ht^TGQ`ub]:TT4n6t_*qUO7:TP0bj@VRqIRJJQ;KFpAg3Js!0sh2tf5Dqm^;Z&9&4
%<oLUlN?[AtQ0Jk6RWO0,VRm=tKLdm7U,uj7_tfDXc6*RQd!HqI1WWtY1gmo<%_6%kN0s$P_gp<o_K<iEJT?=aF>o9iRI3IZA']8;
%QQo:M@B_O78P/ZDlHTCj'3#PAL#bG5l7?1a]jsNS-Xq\C$el]jL"<ELG%Z==9](0;FpG!C&/Vo>"&#r-Y,Ama6n0<KFEdPjOAaIu
%G@q2%+57OA4,AT"W6j?<J0)'@oR(k;>kb%c)tMf&`'9BuYC(OZ=^j$SjgtV@'$>dFFE[_4Ehm_+FE`7l&ou45GA#!l739/dh]6+%
%KT&^kmO6uu<44mdOJUT>[Q=IG&NI2Hh&1`11&j8.]/+9nV/NJXGD;ms#gsL"3s1fR"e]A:4%"Hfj*S@!;]n%Lh&Rb4q<rX<41&E0
%8%u4`&_2g+KL<106fp\5R)4#:F>oB8't-3tLk'8Nb]\au.k4CHfps;00KD(WmLC[I_V:.8mXY*[+%#5[#XK8TkiqL@*J]*u1#8BD
%nN>a+$f.@fM7$tskjAlF93]loh3h<5==W,I,Yl2Y6b5?P&ual<\i]&EX]o5G6[)Dn;Wu(jlEfomZJ?*"OZZqp[Q>[2OD7,8mYJ!d
%A4^4A'8\RsFE\p@5[EXBqKisg4*bKfj[-@h`>5iS6?h%BTTIpM8-aa1IR^=S0U&U?K9+^R36)kIA\0`lG*'d:g$\?@,$4Dmm1+J:
%E6X[8%fJ'/+0KF(QM=Q9Kgom&W'lruG%%ub(5F0"$JV+_(b3$MgDs[q9UBSAFpBQfQ8]Vg3rtQ3<nZmH-7S;,g><&>2i1?H[QDBe
%*?S>GmS)AM/?dFV6"7F&lfmgG>@D46%dED3`[(`mL$jsDAd$EudG4hd6#aOGh47)U@A1=!Ila=9!t^.T'c+ABTX@?\XO,chf*Y^M
%M!bb1=dV)Sh&Z,/WFX"jG<!:W3*5A4$o(.[f@/On6A,-A6?d&ZmSGS^,/N4`@:RlEmLE-oZmpHI]T/ta_KUcVMWg:7^,qj+!Yei5
%mYnIulDf5U`[P!FQrqFkO=BsrmuCb<NF%>-c4J@60e7Wq;#fU*X*f+NWb&`%q!JQ*pW6rHq!MP`[&f-9I!5cAGcO'rq<j?gLi(I]
%#93aNV[U]8i/t@?Wc6e1&P-(D5\RXZ8Is%4kt^HC@S_(N"q[PN"J.^-F<T?QRQI[]2Y8PE0F4353UVJP4EX#K4-[s_V55s&U$%^%
%:PI^:`ZdL;8,RO$RBS?Wd+armHjba"Np,jQB#/nl[tDV\DnOHORAOf#&\T4'/UaWcDeG.u&Fst;[t?rebX_;Kp`Re3(3Vdl*@(h@
%jE@nEPSpB3[fbJ29"ZXaSM-u:6>j9p`nqOLH05Ampc:7j`nYaAMFgBARI"<n$EJ2#M-An&,)a>[nh#tDKN(\L2YOe)nk4.Y%ghOj
%LtEGd%#[GY"/2_E@7;4IJalMBWoaMHTV1[Z@VqY05Ge825UQ_uKGEd?m>/)]QqC=i4%i<]m@p<EK-EgoZ](:=#hq2o[BiOhH.*G]
%&^hIVA5$eEHaDa@<J^%h7jaHpL"HmDX)D.&1aKLSpbP30Ph-BH73EK=g6k]m'e?U2S"WR&CM+!4p6aGAY=oS0b&#*Z73;k[>ph;K
%`nV04*?4<rG<N:'+>bSrSmZ9LF_<a]FT.r'OhJYdfZs!3`(a3?42^\s>iE(H9L:JuWJD_)Zs!/XijH[X[*'u'*?5>.j=\)gL3*Z;
%=Q-Z?L$+!B?[IS;ECef,L"FVS=<[=DG-if.i`0/DJEl8-dB:jMR8W-RC$c<@(1PnEg)8d]&`ni"%V!FA.]j^:H).mH[=^kt'h5QR
%0J*Q$;JGM@d0:Pd[55`clI*3*JIgkY:h]5)ZY7@]d+Z<bdkm!2g-K2$^eAJ0Lg>pW4f5VC@!%;1F;.Y?l6UAhXEKDb0V;]TmAMP_
%LfIUF?rsSKBM<2S#Zoj$T%;0eK>8o/.5>cbELPeP963h&jD1%2%MF?1.BI]I\?OA`YhJW@AE52@G-lRO+&uG1$o)MA$E5%8.O?[#
%e5"A+RBd`og-I9K_hHU#k\""@Q.1hW7Ql[$eBV#;nNpsqO.X[HQ.1gkJ[S-#Uirtr,ue,?m;S#,St(."C1g'J+'1Gh+Eb]uP]k'0
%LoY0q1B_)CIYH1p&A^E;T$\&:Dc.6q7QV$c&Jho#UE.>'b_=H)&e^lS7QX4'(KVI@?reYU2!'ZP);NpXq.Ic^#;K0(Q.!sb)We/e
%Fp<',X>Utog)24cK't/Ui-qspYB&@e)PBEW3UI7?'2)Ue1LkZ!X,M*Oj"?l\_i6)3i#G;L9VJgLY*HTA8nhoDd2C.8V&e?\I+f!"
%mBEQ1;#\J1Fq>$M@\L2^4p\92_3;hCW^O?S8$mFNCO0,tm3!#'o0R4_:hD%Z7_EnhCZ:6g?98RS?1;?141[pWb9-Ka__tF_Bp@3Z
%pEFS5Lt3%LcoDm<.'4Li,_>^tXe"u.V`gi`K<u"\f@/GFkccGBj5IeLjG;:q9:aEE8npk@I23KW8F:ApYs,+Lg+dV;WmO.JB3<7p
%ljB^4;"b@/&.>HXk#[oc8#1;T(7MnQC58ERZ!CeG6PPRa_IHV.]X?2F.BOUe$mZZkM!]jd_"ndT4-L?gZP)")`;m&F-+8H>i>UU6
%M="];"KK@+Ckm8-&<mo=47Z)W->u:ga'K/iK,%iW4<j7Y\3b#P5TgrK$F(WI.(o9$Z/ps@V84l1[Y)D-$'\MIm1@Pd=]?]U@rFOK
%a%+'kkiAZ5?&@q[NX?hM?A7%WZ?]J,?9PP6U/-_D(LB0[SWg7O'&/O=,(aHI6u3+57'$d&SKXMlep!idN)2AdqA!U()T'e-4gU\f
%0"_WVZ^i7!+"Xl5Z^h68LfgS!G,0)M\fNT\&IOlKj+Z0H@6qna$F:c3a.q4?<ceb')(jMp$aUj!7)u:NG1&:pnDB>\cE]S7';3Qm
%"Em$PfU1?P3!i'$7`>MHeF@YhZQ27ol#B5;G,4m=?0n!Hf^-n+1Ldd[qj;/gfJD7o6-*hKVBCF7,sjf/&[NJiLkm-TR-f_$7Io$H
%Ce#`q\c%WCN\h1*&hVUVm+!6uHf;ENHN^#s*-0f=hlX4J[2g$pi%pClmDr#=mo-1P6k\7Gg5\B4acP5::d+qCWml2[+VW/(+gi?/
%M%k3WCkq:s@JVP!G&.d(hegGNLT_l4Z7t#>[7KS/Aij7M4Z=^r6TKK9hd[h<j$S*_o%Kdb?8fcYf8e[#1k,k9*T=FEN\A=oA=DLj
%(bsbW`K_:8L"VL&i^udJ]0<K_-$gi\G4[U!!?OH^>uI`rD`tM!31t)[;//2@fs%EU:tq,.J7[7UC-//5'GbE!*$XSt4(FQ2:?\so
%G(n]]+=QT]WT84h[1rr=G,oV6gEIj1gd=RS07'<:H95SQER]^!:*p][=m>=H(Y`%cag0#Z6H%ll_JVjN,MN-Nh2Xlk7$AY=gQC#Q
%$L3l4Nl4#Y[)+ZBfH\"=6uPS&]$n/0bI-=*lP<<C]Ch<Cs.hhVHFs)!J'S)oe%`<Js7tZ.hMD:E_=q;A?@8#.FI`[0jGD$?Q9XN0
%%0#A+&&*;5InT?N7osWd]W1`&k_nOU$iShSC]=*;ZhX11&":I]^O5gmgCHM&Mbd^?Y=@aI(>o(J^]!'fVuOlE?P[PLq;T0g]32ef
%^\dHb%mP:O&JL'V&^K_"?sBlhrAd;A&+?W@r;-6Q?MSLUGd+hSIL`qZZGY39d$He\T-VGX"WFsX)ScS$)UcF:?ogQIJIX;N=FBl-
%Q8d3X%Y>EUHGaZ%?Eu9uLL9jKQ.MW:r^i[1o@7'EI+)"r%(bCH.c9_0nupa>V\H]>jR9Z,ni@\mLhSBY9N`h,k*6!t)b3jqob!ZU
%cc:'"ItJO:k@KHuMm2'sq3F*,e-]q9Y0k"L%KSCSq4=X*l_?;%pMq.'6W5,B.N>PeEM5<T$9-7DY^Wr](rhO$R6a#GjW1@+hn]]+
%D(ir#TptZ<'%u)k][TK.5'p8&l"a8o@!^F2`_#@Og<6F"?Nq3Th=,^r4)(:F.%No-g`$R?0@S*_HC6%<O)$DDEd\fMejqH\l/I/P
%E0<8Kh7p46r%_9dp+j?`Dkkk>bKI#ZYKC(k7c;NQ0pC^1$tlU_NQRip$sppA]'oZJEH-B?I'K=])IUsqDZ9#.KP><c+^1nu0N@pL
%`8C^re/no77/[FS?fdn!mgr"0Oc%H8T7=<2f3/+<_[l`FQ,rp&O/rpX`%,gtRkbq]^,8qZ]lL##Lf2X2H=;rfX8@C`p4;=LhVY/c
%<pnd9_;*bX<PI_S!(W".H`K]?rr51[T\;/RjmpaT[Tl:;@/.:ln-b!MD\)Ns0GF<4iQ%]!d4\6nYDV&6(s:B/[!oE$`$":Dl$P$(
%XUZ`ZD"-DsMeL#ASX9FnpFc%9hSV#Ap[OlblB$4p9MHc3ps"<doe34Uq,SSdn8\C_9^e%Wqu$7+QS4[&o@PP-iL`;:I.XW6Z]"aB
%:\"m"Sc8-PHMN<XFuJclN`WDEH$+H,ibBq1J6dR#[u9SO+7VSI^V4%F+$XN>0^pEDQi)5Yp/\BmFiu(-VS"*;qH%s3>mqm[oa-9G
%jn-ObWsJmUlh5ZZYEl(N^:KmiRW@AiL,3Bps-bX%J*h+ZQTtDoo&TZ2o'ODSr/+"2gKo(XU6j['J%mtVIPYDKUT8Srb"r'2rMO;3
%?QFW7DBIa"M[?/q7=Ud"`quVHYMW[bnFg[DEO*6*0'$*Cc:5MC:'P6I+32@To.NnBO+1J2=g>l&G;Z7UbAXOZY>;U+oYJo2n@EO6
%cR+WgFS3r/k0q?-5-Q,hh^neJ[J]4B]Mtf!d4<i;C2hg3[h%nAq<%(tPU!>93)S@FHY7EK45[42Qf$Ys1^<Dro??[aURYZGr^e_L
%0<^D>0<Z^MPlB,0?=g#NgN;K>/AkK")TXk(Dm)p%J%[mlrTa#cb(qARB]o9Sg#`%qb;Z?Ne$dF%]`g!kgL&n!c^$4#T?OInSp3K+
%/%;_*CNeh5ad$qR/,/W"3'/U&?X02:Gq@7rKWdEuF8P(C9o,dm^>/(uc+`!"bK[cVm*"M<4L's`RraY4S!u7%KCS*$/[.D4kH_",
%[/>2pp<BYu(RMn\WN1'Td/CT6j(2S'SN#.R5$S#6Wn#E/*.m/2],K93B5b8M<!R4ss7Q0SRl@7c(J!4M\)2B#K]Vo:b)uR1LM-%>
%0hg![06X;FVeqL.f3Xds?bTZLhln%0GcuV=YoVmX2pI"Sjn83*mFh$[TE"T\nmZl!jhn2"A7q4no^P)V]QeLGI&HN-5M=T^-<*II
%H$f5Tpgj3Famn&KJF<4'?&e.Y*WaDW:G0sGYQ"Ke=5+b\OTG+?Zn]^GZVLNp_n[o"o'NmanfAMA^1l'_7lJTpNV^C'VW*)LkRO(r
%_q=R:b7d*S'[tn7?.p-&?(PA-5G&]eq:!6p`]&554]h<(O@IQk9*sB.d'<>5J]S/?HpmBp+5JNlZ#:OgJlhG?45j]-U0T@Q#tN`G
%gVu5lKA#]JC^]6]`o-RE_u+5+`r0V,$MX>\o_R,6np3nLp7P1#4.IRCIk!Wi^3iF'rq0@5Vd&15oAOq]:@MO5]n]M7nbMb@a!G?g
%+K_4!)sqWoNsC)k\]X*L_DRNl9(kC0AB\<?ZY_N\YO_2s7^M8H5/3SaNG"TEB1H%Hjo8)sqE4I4-M)=Gchc2^Mpo.6^2UW%=!.1U
%l.PTk>i%dBR?+DuCr.%G`?j9jZ.uhfGVFL9o'5nKbHoA6-Q#-rk_@;rD"#p,@o-JBe:P*3A!rV6Hh'oR5s=S1^9N+Dh@oH3LU4a>
%d&$8/)uP5e?mgAWIGYm&Ye,BOEU2E9Y@H=Nmf!M>rdf7es"ME=3LGG3_I*l8i&Pb,Jo,X"6VT8BFFUbWqi_fGrmt:8$>\RT$-VUQ
%[+0iGgdPH7-E/^C\bYUBn\rK<m$m+inmkqJB`0<j)W0-[P&#7`htg,lI+iskqW@J(n]C?LH#`fYn`tfiEgfGmcXQ:&B(X-u^FB1B
%`BZ!km^3\\GI;mKS8U>0l$F!0h%(0.C56k"m/UP`Tlf'GoNZiodo+q=rANnEm/'hUd^aaeGTRTn3et'--Of.bQ`!NU6+XWiT2L'T
%bBEP1-[a)&b:/53jmL.8CpV'7nMbDB9o6L(FZ]I?'8H'e$Fl+$[B!`KS63`'o(;9b>(,8\mKR`UHEfT(:tL2;I!5)Vjco?&_54a^
%eA^OgK^WsjC>lW\e9hZ028"08_`C!YjnRF6HRKu0f>gr+%pQSb=$rEamgQs5H2&0q_sJO_I/U2PH*q11@D_eG]K!SgrHZi<lD6T8
%/<2AYcR3S&5<[L849Ap!-Y]_OfaA&Pj=sZ/9Gu'JKJ*hF&nTL(f_:Bq#V/cLi8i.Z-p"e".7JO#XFVa[W>9'f?k2;^3Ug4:$)Zg8
%e=oW?<;U$\ngNjUPK-X\11`.\/]q=Vnifg<7p1aZIL!8/PEa/&X7\t_MfSBUC/Li:k"mVo6a&qHoI]cbX$>0=P`s-eM_\itLU-77
%1J;eF2)UT3jW1_J0#-LVKBGt/n=%,1iIOoIcA-Yk\(Kd]4=^9G:]L.eB>fK!rgk?&LNn8BM>5=d5<B*$HZ\>lG=7jep"E^D>+#!:
%KIN;]g8rn<]ljs5mE\j:17N'?b?S92UX!%[enVs<XYq,6O31Ro[G%_4Ib.b?QkB1D#Pmb8S!"(Vn68hs#F,:Z\'a$@;4P,CKIN:t
%dCbH.CW8:@5G8um#6"4jK#GL5]<]G*2q10$Sc3DMp=7jdYM\fAkAfD1o'+,Ojic,2m9GpO8uU@bj6P#<@;ZLVh:8EP6s(jLb#f,R
%%-;5LI^p2ti6]89hRj%4b3ahL_,+_tPQr&RD<AfrKX,T26R7oPkjjH'`&8"`oD^_,r-t@"5Ni(H8cFLa_t:J*c3(Tbilf'(7ZWJV
%ml`YA];a,I6o9?H7JtVho6W%KhiW9XHdB7hI>e$A*OG52q;h,Ep#V\0LO],CS"BJ9qJ;LUi)prR6#(rWEMB)6Q-]q("tnV41h=H?
%[Z,>b#.*2sfTm<mNPY#/r1>Zt.6@4$*NIoTX4-B9kKE0?-cc=[Ng!3:]g!J)G,QD1)>QPUMiZkZ4N'Y+*P_!X'EcUNIWPL4cN!<F
%rc\U_KDW*CkPXe=s./brmkgE"$tIT_cM??Xs8+G",;R'Cq.-3G3Tkea1]XoGnWGoq46M"SSF<#.mAWbERu'u*UT8V$6;2>@:1(__
%qe#ZjnfjP](K5M&g+RV,\mLe:B:$Bg5/aeV+(&=:$_Ejg<cl1a=+@G1X'pT0Is^iDRnH[]jnSC0f7!OFdcs;H7#04O&^:on3C:.Z
%&[Fnn(HY..jp9W[+hOr>2o4.9_dj^A[du2@=S/6`GdUd_I$1VMjX9jH55k$BPFkW(c^*1T>V0<1Ed;eTYr/^Ja3SpK%&XEjbiA^d
%4b%glNHT9J%*OpJ>(pD%E0b/4D\M/DK55ZNVYTSC0)K_RaIUnZHmXlnF&geH\a66(kHC4"q2E)bo=nUE$Y!"YAc3u<1Tr1mKCZHp
%L``c!A9Wgm2E1=a7#r[scT-B[ZXK)HYg_HiI8d.ei+3D2b^l*@n1k5Tk.o.[G^5q%0#B.PGgRoJj"GK3AY2-43Uh'E^ru/Qio@$0
%fp_ui2sNLGF9Lij!_keK<n]XGk]=OJQ^[0C_'Z%0*:,c>`"\;c)/NbH`\<$>ltBeU/+!!0FF6>'Nucp=f3]PjDTuV7LZ9Et/GjlU
%c:CY+EB)679RD.HhU105qZCm8JT<GWj,CeG\.G%qn6K]!V&=\q=3L5[K2_EeX5b"_^W[r\O0'p^!p\:jQ+o7)_83Ue:EYOB0nH<g
%([YsO9c:jWF'phZJ*m.,fR*".q=<X:jY_5!eag[IQ$d7lr_&:ApZM^lbL_04cG7/BRE%pc4aUk'c9lqfr#]f`Ti5cf*L[tf2%p2a
%bNXpVolPN9c3D`m)9f/CZs'VYiN@nkD1PD9#^9qmrncWO1YD7CMdqE#Nc@<Jc,%FTdNaQX9Gt_fa4OTlpX&X3*64H,)#O#<juC@#
%a#K/?`p^r8]0;fc62&t0Z]f_gIG#&_`7=D"p$p]OQ`!bsbN3rW%]J65Dpa=mhO]4ba8PV*G2qQ#],K2<jYtehf-f=ILEeGjf6r!l
%2JI!&X*6G2k33#eTc]<P/H9aur9)hr`Q8h?D<:V"NU:7C,jSiGSu3"ZZ)diD$oBeP+25D!4J-)bn?Ul0A-/7Bp#VFEluI<FR)+ro
%fYK@GdL;Eu@9AR%/89tV1h.hK*81rSBm7Cc]>+V6<8cro[oYf,4j,A>0S=s5qT4th_@G>P-FjEf&urWLPLgd&SR@reiUG%(R`ACq
%2/+`L;slMS0QXMNI\[U&6fe,]3"3QsaO9`uB%`kHi[5GEb^k!ZgR\Q-S&ZJ)a7ah,<BIN?2u@X-h_h`!2g]VP2`H))ZT#?WK\rO`
%2o1B!m,$MBXK7ijX>'NmqrQ-upgg]m2nO.;4#acmZTC+XF!!P"O27O]O3+)b1mio8kb]r9fqmF6QgR'k044X%FZebfJ*d0i@j<Rm
%i#0ah%(gGgR+OZR+>e$BO"2sFA'VRs#Dan8_neJWj`Ncf)7p2ET4LAb#aYMhLU6$)T0?D6kjnE:am&K%s#ql0pu_G)ZRJad]l$p;
%DBb/6_<dqRj#N?@oG9'kKA8nV0"Ujr^c-T^jIEeiB'Wi[>3ucM*hPSJh=g(.nmp9uF)jCb&/\]dX+`H?<(a=hm.,`Zj\pQ!eR.ZX
%FMGJWKLBdVFQZG;dZ)-FY5Vg1j-rk:o&f>ibN"fJe3uC3I!/nIdkE,tdN6WC1nA=SOU&Nn4(7Rus6o4JgIZ+dHKD:nCm]_\[62W^
%Ri(Q7>e@$[;+^3VPNSX`VpA+`RQd@0bP]gV^'L">F$0X:e!cc1h@">gTE"T\nmXW$nlc"7*ZK:aAaa$[XoDoim:Oi8GA,^dM,a;E
%l7D[)WQmu\5o<%s9m#hWnr;peK/ST.>mUJ8'e%u(e="Y03S=;5T4YsVpX;#sP2XHs7=4A%rNts\d2:*q`\?L9Co^8INPY#V(oD!'
%T6@/XO0;<^?_&ht62MbR#rt/A]Dneh@k0l042(XYpiL:VAj.4/pgDeL_f:Q3Se&m?=A/8EGR+f%!?@3M&!Zm+4T)PU&0o7Pg#0R_
%4V+;L%d/1$kZ]%fMKiA?glE#/B]aV&1e=@]N%fT/Gg?EFC^1GDA/:1(B@EKQjS&&^5>KmKjhaAeN-g%rSKI%L9gIAkLdUL3q:BP&
%W+\5"/\uV%cYrY^qlM1dQbiDu+[-s],Aripkhn0NSkQBXp)YL>a^[TXGdo0N:58B%Hg6CBjmG?@OGQJ/>PBc9m/V/PGHa=+?6p_Z
%J.M;>UI52Jllq%nI@IoWC1[f7qE`ia_[eVuS++dJdD6dOO%j&4pMtQPQd_uU`]s1a$erXR7)noi%qj)cQl:Go?+m;Bc'Ps?Yh^q>
%a^<n2S:#aHC?0)61lHXI*R6G;lX;D%1Foe!>%L2c/InJ4!uul1YDt9m]UZj7Y_R#nd=jdPgh<qd;3/=,Sd/[ob=C9g,s@#I2LQU3
%]R>*L2L@FP\mFP4bD.OOI%WF.,72d?55gsb^AmfDMb8^lR>:#'0.nolb',!sbnH?a/Uomr)#h^6++3UigkYq)c*-:p>b:&$ae/M%
%Qc8RXbNhBAfIT5bn:P?Ch(Kk!n@&8(=aZ)+.FgZ?rJJAghu'DPag,7hVHJ;\poj^8(,,6^^\dlF&"]TJ[niJ?/399E;sS8332\_o
%:YY+#5b<\O4nZIroD)`t1R,;e5)m)?KYO_M[WuVHnVc?h>Nb97bO_c.Ic(""Tab^`XYoE'Xg7KgMg5#soq'&UXc<A6LE@N7J9d@Y
%*502jqWRAaps^r45@,AF36`f+_WLIh8X"X>)J^.7A3S\lU<r2)CDtgh8!*a6b29S6:L.ums8Jhl7:./q%^2<k'tS:&PWuuW]YVu-
%^ZrSmbNA,c9mfk)I3*b7K5$JX$bSk5HjT7hdj=pc$VeP]JrS'F`HT@tO57BJ-L8<<G%YV2a>&<JYI338r6$dWQ-"J%PHA:fG0!#m
%h@fDu2pCsQkBU>i?.Y+?bmS4XSjg$WoI:opBYEMH6u/RD^]+\UmUn&6j+`b]D\Z`J#')iTla;!a3ofQt[dnaY+%R&Cfa2[pS!jem
%dgU_uB<lBF)./l"pY&?"D"ZhUoiJ9i*0+`Mr6I8sbB'i3J,B+u+8fEQa`fC%r#dOSqW$SIs4f0#B)53O'-;(`k2j^/nkY6\U/&**
%:MjG"ngT!oNl/a*1&Y3cq/&SVduH?"MJX1#RZU`e!u<'qRI,c5(0;D'NF8C4/p62i"'/F[r.h2026srDhW9ceei_4CWRJu3(Iudj
%k6p!%ncn5jC5U`u\eRsE440(l*H/-cGpf2BFs?UO'=DKEYI`$$XL_0p\c)n7mqpKq_>Q*h'%:q,lKh)q9(aoS\i-D1XD'^/o#JrJ
%IM1A4^,:3)#3se;4\Qo(C93F<2AWK]Q(c=WC%5J8"aN)Q]0(!a50[isD>l-Dfgi.$R(lDcMkcJ[J*bSDa#;nUYmt+rUca&Pn[VY"
%ruJGt4ADU"GC:uX5,[5ro+/*.Z=`V%Z!H,&]\N+8,$VtHKbYinH'iH8Jke[L>%kJEND1p,12d49Yr#[KSmkC><q]Q8GAA/cXZ#9L
%)lcI\,IaBP<-D0*[a._d?(0JRp"Ff*Oc1eH5=Z07,&U;M@E\Dk]?KDY*('D,CD,M2>#%Q@jJ13]op!P0cZD.BRO8&.p1F:4L2&oq
%$oI7h.6P.LC!.sn>8ng=[`^Qqefj0i^2G(>g=jj@e3^LO]Rc$bJ&k5,q3\):`2Ape04?n.kOB"/*b+W0XR.qG,hkOZo#LB)GoM7&
%&#XfZkLXp'r3>R0EPLOTO![(MY86F+5-Vj+)F%Q`J+u2h*7n\el4;c2C0JMU?(A^6I=(Knn`JBllfI,rT#71>)9h+/\"4CZ`F.MD
%HE?KMfWs-`$-/O![uT,Wd/?k]2NKO0Y,i2F+7]a[*4k7C,*UQG56?h\dC&cu0g7nU7TlJtjpc5r/,Q?iW`r9d]Ltu9,0YD8bKGg9
%2Oh#J'R@IJXaSn,_h0)t8t/$qO2iRdMNkME:&\M)5.s`\?,S!mLPJXi/5NQ4WD+FKFD8!orbpG*OdjU;?'j.\2Htgg^g`<5rr:,I
%b@aqKX[HG7gUni(pb!Ysf_RM\1-n)rrY1m#r,3qJ61-Rfoc:8.T_7kGg%7r$M$BFqX*If:OUM0E*dT[9Til`S?sucO0q/_tm0't2
%1ZU't>L*r0N4LQJ8!pS6I'jJ=!^gI8-oPA=nRN6h-uRb4\DCc&(^k'IaL)h3IZ+/es3nfrC)ZC#Q*o$ko(Hj</nY(5'Gk0L>V(h]
%R9REM(qB_*@`"+b[bV4qRTarT.j&o?o).]C2U_0=n%p3YE-1a:aiW</Y:m*Vb*f7pD`'39nQEc[L".4rSt=aRPANnh+Zm71aNWgj
%5)s)tWT-]gZ!4J5cc;'"9r%AZ`Q`)D`LFi+gN\q,@VEQ.GjP[R`OX%2I)lh0(]t[;TOS583e2*)(Y+45UC"'jl=TSU-5YFV?ksh+
%?!a,M/F[#;rbHfQeai"eo&NsU=o[[[il0T^C%+mlqXXkGQTm'Oe_=[0/>#T2^F!n+If/m0pe88BnB\aAqpk60p%%CBqr[6E&=)i4
%s7P[L`W*!JZ+XFAXp-<Leb-BtDYT"UrVABY07Q*4F+)#g1q9h/N1o*g0E0S4V_9lu>Gn4\pHFb=n\7dA_9_#Q3B`e*JTEYeNX!eV
%^rI6#Uh@(R%?)7#JT5`f0HNtGcu4pKR[(!o+47mrhP5X!_fB^ShDlM<Di+bQ)@\NUE8]QE]-/0(jghGN5lX+.5kCJ_JaMT=?jU%r
%_L]sL_h$'<_LZE937,=1E*s-WV=h'_o-Gq(ll[:H;*!BJr[FRm:"Ml;c),14jMr<9IB3PRk?-[@`<,(s=C@)//9$UQhFB,Y]41HC
%d6hF]YKNB>.s?@RkA:et;^3dfJEu81)8ul:QcHOUS&D)&D:VB!'?^Vk$+8]\1HAr8d>1UdBUct8[PCN7G#W:(EA16R+i8CbkcunN
%Z6StoD`Y'<f'S^h_<CR7m%tXXlrmKt>gUU6M1iZ@?kgA,$^"Nd8I8^8)k`BJfB-N5ir%GF>fnsE1`#jeq>?$e4\TuoqP:+m)pmY_
%a6aDl_JrX(3,RGM50p#t<XqCW'_Dl</q_7)+I978?TRX#.%5XM93!X@Cu'5F(1!L&]\R!hYDDdqBgQtT<,?lc$WNj'*AoPuOnf]M
%SlkgPD=tc5T;H?[c[,RkH=(<`7IhTIdt8l0s)Y6X`p&?;3E$.KZDA*o>1l_YEk8kFX2-.Y&m9-UI4sl2$Lt<7:?/B4qUN.gX(rVe
%&*HaTZIPl,h9&X<K*gD#)aGB)OY_'hBm9O92Uf2k"p&Y^Za86K9KmMV`3ZeF!4sfJQb89@7[f=>;D+Fcohk+h)"NR=E\X)EXO'Uj
%HeP$O-JTKN4*r>pXL`jj]Qb:Bc"j!;Wu;"6==Uc21gT:u[5daHnpD9l(([UoZdagog"?"e-<kq*D!I^'._B,I\C!,4H#Y.239Xu#
%W[V_J:4t_]+a!O"ZM*mTfjds/PF$7tHEHSQP=#>PPmu8UNRcTV#6SO_mps$bobKr1=soablUF`Rq73&d5PZRFD:+aHpf=ja@Mc#T
%l)MVCgD<o!-l2ZBfTEn+U9F,]3Z9nZOgb&[H@mdCS4UeS*.bhQC3j,b@26&hB<#nJWX=>BS)8<^1F:_V.^m%C"g>Kd/$)c^ft]=W
%M4'`o?C7;TU2QbW1V'\&Zc>"$=B84^TS?qYKr%.h#uU*j0<OQi8$S%eX?<W;8Gj111IZ$+LncZbP=63]=#F$1Rd*KR,KO/sQ<.(F
%p"RV>jPdo*5H3t[AarQ^>9de:g'7EZ2m4J>W\HYL'7Q"qK^7`i9UM"MF#%0!-9T"QK&;edi9+B;-?,pLab4UmaTT(5RF"&]1*Q'<
%RBRtkIoA*GQ(WSnQ;"NPOpR>EHSkQ/P"^ZhR:%'aRF(loA:iX-9^j!a$'(>7cB8KZ<@t'q'B7MP6M$klKM\E>l%Z-cMpY-rht>(o
%/i&1SgDdF)E7cG*TRQdM55/a]F.#emMiphkF#r9hVA$hDF@)AD$$//d^.O=B)OP8CD+ZB:M]YSK>h;Oe>.7MeN'h-U9fL-2Ml/ZZ
%rZu(4X6l=7%3OB*36uPRC.u7SH[2%0EoT,929QR%:@_-E,i[lZ-tX\\@`'$%B%OWELf8c##2/Ys%%D%e8_/aTfX)hj#WC8d;W"74
%SgJ&gH.O<)"5+N)e4.^JJpW:9R'Ve"?'I![UI;$NQcT_H$"W1.f16r-.iKqAO]@/-FH7BZ3SP;-ptZ/FCmO69<T6Z[d<X!fXC#e6
%[:c#[_<55h$N\cKnQ/(qT^1oaZQ8,>DZBY$eSeg`E_DO><WP*o'UokA/=ta@@r+<3YWO]=J"K68=K1o;:IPIT6gFbUODWT]F2'N6
%QB"bPn'UOsKh9hV75Wl=s0aefFgo8o;7DdN[[eCLWQA=FST]Yi7372U,C&JlM0qR.5;2i>BL5dj,?OTuqX&5$I+`7(GZ?u#BgOuj
%[sYrl/$N!@8Wb$"hI?E]Y];h?jk>)M-J,*QpUg+48%7AW^Rn`Z_4+,[Z)54D@f%u[`^S[A/)O'$`iF-W)(89dc(=Qe,5Fn/kZ5Y<
%IV]\KmVYM9QF1pa?IVH6ogm!Q2KFs7aj3U25;WcnAb?/WBdL]9TJ2p8/Qu,VbI8$g2\=ssX\%#KhILQN8;,%:WeY)fhHe[LGo,,5
%L2Br.=c'#aWo:+\@9@-AEV$f#Dje#I%;nToI^O_hT9E;lWiU3B2*.LLOB5YYZsF2Cs.6V`CMc>XGTb]>]]=p-)TJaT#IAT?5#-1&
%l3PPPZ.0e]>+bX.@SoW-YEaFIj%9Zlc2N#$a1>\h<_'m(UUAk.2NMVIbUJY2I1#&9@kaoI9Ff":brH?!-K[SAjr?q$.0l"oj?V.Z
%*(\eF"6h`)5go9EL`&@jarWGGieBH)[j_OphHpa<D97@)oc/dPcE'E?e&EA``h(4BOS-_U3n[<[Os"nPXke(F$^*D[5sd"a(hH!6
%(0b!m^HDsf[U_\PL+GmNO9J2pZQNg0%$Mg7ZdT=qB-djnb#VWXk=Q40D9d^N9f\<CSN-ECReY`\+NA;5W$ihF@7*I%a\4eMoV7.u
%>)P(*J`oL_;BR<':4^KoX!nUd+U+&/ZnV_n2l&\CT@sfd)uD).BHtYhLmp?_`Y:tB.?Hh[7G<h)1%r=[+A"@$m1uL\PtZks'-LWQ
%&.I*,c%"Z<b^Y;Sc[XaGTgr$'.`i3&Ornt0+2!d]DGGY&jX;&p5CCQgN]JWeQ<&lPW/k+2ieD\og`2B7)re,:6Thg3R/Kjf@AT55
%D9@='@J43X9&\CN+/u5Zc1*&C>VCf'f$k6hoMTMI@'''"\/UQ1DL:_r0?'6tNdE4V3QU8O[lO93D+K,O%EX[<-2CC>Oe^u-[jh.3
%LY7_S1I\CuO$PS@HeE8[IY@C\LLc'=ZQF@3p-T=pEV@;2A`X$LF7pieRYX3Tp8s1-G*)VmRYO.oBP[/`Q/m^l+ResHUT)RMm_bi`
%qq)I)]3FjdVKRh.MSUu=GEeQH.XjPoY8.J#)o]^agepi&jK2r.4ZJ=+pPkVq:"d>'(6N<HTX$`d#=+-2FtgSWqIMi4B2EO[-GB(i
%7lT96A+&pa*e0q4XLR(CZYeDUZYeDUKl6L8YMK),B%D)DB,4-_3#D7n(iPkr[C[I8GdkpR]@CQ(LM1b"ePW^,V\SanOVfFoE7)]F
%`P\09<7@u+rk-0S2a+S92W!;-I[RTjf-'&+*6uC;D8F*e[b4MG:qgZ1mj)`ElLOdl/tJS,VruLm%7.nBFS`dGVe8uk)3oJ:AY)be
%B2n"2Q2/3gVe8uk\TIZK9;e]>9s[gNC[T`mX9/#na\rc7Ol\%5<fuXINnZ1$a9%h#M:A/#l"^ZL9;#n,@J6T)[9,$A?,6s#9$AMD
%mCLTEga)>"la2u*A_0?Q9u0=_gO's__TWr7s!'lK`c+a3f6$>!D#/#tIkiF$2')GX8<aS'O_[k';*l?!q2./XH)n/%jZtbq1OQ5Q
%Hrc1!HtV"T86?pm);h64lVHhXqI4bX2]fs0'kp\u_%k]JRr_.p`L(JL#KH)jRBFi]q?hB^V29s53na>2M^chTj,7/^&7X4Cm,c?4
%8b)ofObLgHR*%`(Tra\2a`QCTLjnAVP#?ngP8c'VG-pW4jZ#R2cZ7VL94<(/I*c%qhEk6D+D!m;2b;K##F^:r4gosA+<)LNf8Y7j
%R4g>E%;P*j>@4`I0G&j3@99nZaqTo+#kFBl)AbdTa-:D4)/,5LjJZ>U>W2L^$]<1[%SSN4N>*o.Z.$nP;pA,2G=<sZ25T"u?_Ia$
%b)l1'C<%,PpmYu>dp=kWIMECM[D1g2<9mJ%17FpUl7Et9Hn6=UOC!gC\9M*U=b<3uf+*kKN#D$GJ.T.grJp3)d2Bbm:_SRBa_OTI
%2cA,D'd<MIXobn.3U3BYNle=VYUup?=*$VmY#@HKiLA@V0(N1SYJY.%:GWDE;M+64@ad`rP2CHS'Xo$!Jnj:[e5s=aPi0\74#j=X
%Xh?JJVt4=Zm_#kgSFXMooV1kT%cmT$k8i;'<hTr9&6<4,?c-\\gFJo,+5UD-Zl9c\)`O<CCD/]O@q6-mW5)/2kA9Ei!+o,Po,"Ql
%lqORDKERiQ;b$Qso\G8FJ3IR^=&MMsh<jFG]?-2m[d0J2]cm"%E^VI4&$"b(p`/p,"d'%W3>Ik(MCU8bJf=8D(.(Hddfk;A2EfS7
%X='=6-9K?e1/6>eQ(,SAn60+(ll6OK/#cZ/Zu[e8:2;4[5c9P)f&`m"5Q0Gp[<&Hqg9$/>i3Z+e>Eq+ncd`Hj`A"kKRT(A^')egh
%b$.m)ZXR8WF(WY^!FRir`]%W1qU9bY^0$AON^iPd/4FVHO?daos7(bBT4r_E%*T\SQJ50@S;kdsEaIkQp`bcF346cj;4S/dEafn^
%%@2\RH'J+A,a+YF0G4NmX9U!jYH(MSG-DHH8\Qa"C0/%+U<TGcDdfK+NYkal[Vb4)q_gp0:]>c]`BYomN#NU).5<IXftbD.0Q>Up
%AR=tg5_H-.[4/7==.eBSWG4WI&=?7L2l;0(M$-oO3OY#u_l-t#<G8\\pH:E;0DDjA7X*+s0rJgZ$:T2;7[(aq)I/eldCc2C2sj&/
%k?%33?2Ih97^YD`-Y7Jt?<>qp.kS!#*RRNdT@ui+#<d/\D,.EG"'=Hf11OT7Q&)1E*"^6]g*JVd8a&c2<4-LfTc)N@<LtS56IN+H
%YH(nXnciE*P%Ks0khilfqg3I1bohb5q?*%^$C`BJ[qdltEP(0V=d.L*<h<@"hT@>NQVoM2`ik=Ql!bKj4)ZNc`BGgDdu24E3KX",
%Si:DN==lZ16<Jb-lE*#2kuI_Z3kW:4Bf@TC2JkKUeg>F%3ndI:n@Ruf3]m=`&"8#b2jE]P2W'f/o?NhUDU7JB6dOo0^F#VoPL'92
%>sNHpIr[aQ@JYM_jn!ET!ugT]NVWKHI6`RNcbC8EZnr4!c.t;mg6Up90.=1fTg'pskCii)d,.,UInM`ImLoB[H^2krF4Z(o/@kFq
%6UF#'KYF$%n+P,'W=P8CT^I:*JSo9.Wo-WL/;\-/gSS@oZ$WRhPLWK>(8hme]uuZ&Pe?c,I</"_=/)O^,V04G;D=u"m2q)(9M%2<
%m*0)TC\+s]K(1"Eg/Mt%n'UOsQ%kR6;K2/1Ro0Hh@;u:b&F)3ZFd<9!9."1D>jq62#0FWfl,.5aL\Z?dM8!+6?_+iu]0>A[O$/I9
%c!;E4f>l`;M<s$j0mA&i>p"-LBFY["6)$A11j=?fE7`,^Qnc=&6E&\Bl%+(VE$]W`GX'<D@j%dCZS2_3>o%`.PbkUBF`B\6HDg\;
%d8\--%W&XI4\3-i&S=6m$iE>lkY:j]Yej5k$.i`?jWPM9Qo[s&p78<j<m=!LJnEo1ene54T2ZUg7Gan>IZj*3'FMB#q'VdN\W]'J
%0Gnt-:udX&j&2tQ]TlX@lDmZ^JR'[J?CU$1n](15\fPcPl]'2-LnbhANoopCFi:C\YjZ8jCuQ"J>li?p4"9KmD&;@GBa^"!j?"GX
%\21)eP$9)2)71Xe=O_%0A1TuE#,'dtWHW(dl]l9!7YN3foPKj.e[AY^La))78<fW';J/#$e748r+FlqDfED"+RFiuo22m=Ej.I.$
%q2F[O-ma)jC9U$3)6#<^YVnF3D.`s+b>h;k]L-M9KhXiN8mN@&26QJG2R"uO.'09/?*[md0o9g!T5g3Td2P?19NBs`I^Z@$Nmlhm
%XsrjP8N;a(gM3(ub""E/e[i2GH^Sq@%crRee'VLIMP3[[WJi1K"5bc=[FDI?:k^sIR$WV3\Mg_iK<eV6]V64:j8?/USKJG0k"b_N
%=gTW5AumQsY3t$mVlN*$>l@.KbJD8o\6u+;c[1'hPi%BlPsr\b9kYo!PUFENmL+fLpLHRO"C.s-Rs)/078hlB3cS.((ZJ4kCNPc(
%P8K"_n1uJ''jk5h8]jraET@JILV@PQ-Nig4^(d>O>i`os.jXScY&s&qG-&?p\dJ*O7,P2MJ=?u1]BHQeD+7L8_cXd&Q$@[l$ai?B
%I0W+4ZaO-W:`8_J:?gO%H?B$i\KAC8XLBFUT!lBc8!(,t3@jZ$_H&lSE]oNUC1].c<0JBE&B86[=9nru*UnbtfV';+#+r,qIM`9)
%[H3/TL*A1k4264pk<B"a[bu.oY(sb$ogB;c6uGA!>['ta+H5]6Hj^-2K\@`64hCc_n"EdSPtfBc%]OR;g3Or1?&9?<gT`PGB9j2K
%A/Tt'NG[JhV2K"QU[W*C/8N&dD'/&\?;jjki%:9tTC]ID^CsKOg"(Hjj\rO'9/C'j#9q\4[[p"fV&kTf'#4heBi/q%8jU.9g:,:;
%S$SVT%_XuJ;+qCA-\B0#B>i<k.";ME39V;<ofU)?g6?K=EZX0A$$gS05nVWKic5t1QaWlb7\FX\_Xr5mPgcQG,>+41#V`nld0F<Y
%.[tGuJ^UL!$?,hS<mIJCBHnm?Y]_L3mnDRT*BFObB4]Uk%2oPP6WB0X0aW!MpsQ=87p-"=Klt"t8'n;ZMS-(S;>sF7V+b7R(%g.$
%eX#eT+41q)hE\]r7.Y.3,7F1H:cBBtrnA[S,TY/>>gN6R,QQ8qQ/KVnn>;dJJM,VpR>Rg6*d#,<?C)$eEL4@\Ds/XH#EkER<S'e,
%)K#D._+Tp$WNVb-K6#6pog$\"CteFa5f_=U$/7"s`kZU;jeX9#f\-rt)9/8[JQ&p54>HG&gltIE^3mU!($@C?`(W7tgPYTjG%.>>
%(iB,;G%-\,S7s?_g544cRV=-]g525@@]#]hCo3a_<8*0JbKR$?g^WT.>dGW'4qb&nOgl@L_jfEoBa,#a#URo8@Zr^T/GE0()WVp#
%>7@JC,*I(_rNa(I\lEKu)t%lkj5#q<iLVRE.hG</qCH5Ir-U%:UP.-dC_71q1=r/EU]\N%d=:3rbbP>^q>"9E5*qm+_Xd:ad&8T^
%mt4*s8@G5i]EXAh^\ljtA/h:5pK)f-L`3sFO95:ub0RNs%BP-qQq\\,PFoI\rd;n1=6n32_oIeoZ2T+^45(<.lKcb$TqboCT/Utn
%5>P5Dccu?d57c403-I[MW1+P_17KIXP97CX3SO&VETCdc56(#hkC^QI?[P$C*6lIcF7K)'U)^Bo2IShgi!-=R!g90OOk>o819=d9
%PUb3GVB/jM24_nSlO;iOO]XOH5.68;.(u=f=7KR0=''='s(4`F_,[(3d^mHDponcXDAD&1b\nVH*PCB4nb<jjY4e]^IY-@CNOS/k
%X'DZM!Hagm_tET50+4hbpDqGa<b%=rS-5s@"_6,K$Fht(Tl%@RbZqdY(j&!lN_2*b_;Sd;Cc@IMo>Qj/JfBL"$4Q.0I!#CRkMnR#
%nngnCLHWY#^*<"XhSi5G@HG2@2:s/rh1,A#r'>0uWi(W4Hn+7Uj82-F+R4,]@FupZc199\2a$!N[JB!,@To7Nb$A2?BASCKm0<CM
%ro<0_S7)\74;^;`0?9aT]\`ptGfVfr93?\[9pVutc\D*Jg(o>6)WTOuEP2WmagsUg[HFaNJ&?_LrRuFkg^dhB#Q#fiS)nX,\$"Wf
%H"HBFWb7j>=;;A/[p)o=r-mF&j7hNDC=h@,ne!YRWZmt!og!1BTtOTl*h*N&ZOc;;>%CFQUF<N!+bTcmJF0I56D.H&2TM,AJWF;.
%BbHkZkG&?-7X_HpmU>)RouKD_BIFbRCakV_-LYklLcd?]_Y94!<(ufQEgpNJUlgYa<?#GL-UrIf)oUdmj6fop(HUm4S"S(pqG1/R
%ad%/<9JA!+JN3J>#@IX:p>?[pMT;of226%oA@]#cDpsVGH+;$)=I0O7bk"]rH+)!EjuUemJJ(I<ZWAjT4Tba)`25'4J`4sVmp=NZ
%+Nk_D6];mG(b?s:7XdHkWG*&:IV`4(_dZW[ErZ-d\<S"BC7P#_1$q4i\<WSHX/9FU1O*1h\ppoZD*8s#kW%t03>#=V?83h]Pr2C^
%M08XXro6NCQt`<clR:!2UKq&m=Ph*,S)pFBf10n(_%0Sk@+8XRFK;l+)j&`%0?n$;Gqg']ak,E_Zo5qiI]tA%>^Id"%<"2KUKr6=
%qYc126:4?q>;9)h+MVrt@VW*i=8(FhgCKXj`]X-uGVH1hgE\GLK3qhRmJ;0-hK57TZRI^1Dh"Cco5c"o8,mRSp@`mEpckZ@cG4C?
%Aq&%Lc^FT!R$jRtiFZK-)&R5qL7<bQAmi+NccseOE-#oGGJJ/bk1?:i><<*k,:CckogjcYKR$-858Fpd#kKp`Mso5+H#)kh91f>K
%6cS(-ejbb&Pk,euc\qkG`8peu,M@lT;r%21aT%tp&J332fe?XB$l%1c#K__UHFKXgmfnk+Rr-[F8(Fh@)\cO(@S'O,1bg3])A?m#
%W%%)](*Ib&0M*4M2!a@V.lA+)j_?<HH7oMb=d'!QUJ^Xt_XVn?0lt=rm>rrWPp+R*/;W[sH0+3XYsgoD;2[D&Nlf`sAjk3.g$\QD
%iQA4oo'U5C"9iBa%p7"=)CPArIF`;@;(&OcTC%@9BY;"JOaZ.hFJ7@Z$,C>QLBo4e%&Y]/i_ScLP6Ef1`^^\[bUb%OG1P5Bcr8.D
%IG-Il`t1*tgS.j<H+CM%U[Gbp/>=Kn]dMYkpd9H8/&K^.lK&#o8W!T`@!6=uZVtBm#G\fU\QZcs4tH*['JU)*4,'^nDa!'4`i<aK
%9c8oWN@$K@*h#O)nlf%`:YI(E#-KQ-Yu%q]dTrKKqcZ?=ksb0Xj9$X6;*H)KK_QFhCIn&tNG.8Ec!PqC`J!?Q'IXX`Ho0g-gc;'6
%4([glm]<_-QQh%QZ$<,-`Dtj"OkeP:8I$_`^EP"4;2T)T0&t*.[<LlQr%3"^Otas2cL7e<Ne/;)f)ilgDq9*GOPUaigOXXiX9eD!
%"%TZ^\LIi-=4;<'QnA-skcf_t'3J4QassnZecNrJM6/I,iT)fE2oUMJSA,h?VUdB0Zmo=+[42DW]]*?8S!Mae`l\%^5&JX2N5D#Y
%K`JcdrRC=9FmV%Oj/\Usk#L7%a'g`(2J5TCU96)&(#eAaH[1hRS.oL\a/Y!%W`)Tor!l./@;_PqUTnPXJ-qTBL1<1W5;[/M:/;s3
%7>[SI6da&'<H12gYt3uBhT.7`]M7Kn=/JZ'F1<CV1s_]SOYkDUb?sB_c^a*bZTN;pkOE,/r20J:YZT6BE2`)*So?Yl*k+/Qdl]nq
%ANWYLkV0.=dbZoSoTn[S09YP]2lCrfjtr.Vd!t;I!SghH7gejbVKq1N1f*_9BqA/L/R*1uQu6=AT/8mG50^u6`_OVKL'C?DUe$q%
%`BfsUma"%br*6+E'N./+(M1n_r73DpfTbJ(EsLitj`qqNT%[O2cLOs)8i?o_@[#C(=_75.Ss\l%(jUqSH8E-j=fjc8LF`rm=W_G(
%hdT6EVbbKh1e>e4KW[n<I*s6rZ?DX/l>iFh\_5Ai2j56-l6h!(aCqRBLEr(+Cont#[9Kl!T%BFlERF%sL*Z+6BNSr=6D54Fq13L$
%7TMMZgE);Za;Gh_pCc5u?lTQOnd3P,^pA':cEk)(Onk)JTB,5tV[4Bm`+"H8`WaU>NJ(oo`%?"?1i+<[BtRGlT)@Ef$a7e/U^6pP
%<?lL*2\(h"Mhmumj622Y"<YHm'6D@9&c"HclBC[a1uZ^mTss?a7/%OmYPgcI&:G:sK];ZYf&Qp$5TadnPcomn^@H6-]+huRToN6'
%Qfl755&uXu[S8_^cc[c.V^cCG)%Bk/7.6l![`4uA?H@,p@c-t'l89.4ph]9l?fb!0Tk1oS,Iee&:_7XW`5,`Q-=KaJ=h-o_)=2qi
%#;#QeU@1.HiHWgN-ab<6b:>Q2L#[@raDlm?KfgO5Yf\?Q3`fX4A_uRJnf1['q"sem>[Df#FaA%uhttM/Pr%&Tr0IpYpu412/]kbU
%FnR`nn!?9::S,305PXHk(RI?;(IqPFhn3-?IXH/5j76sTjjf:NeK8`,a+aHWZfABue#^Dn^H+O*9>A`Hr-6UA?=,p&Hjt#Rj7R2o
%VU+uRs!"Z)Rsm-,fIpRS4n:9*EcuhYlOU_CI!bF!m@WJ]DdM8ro>,A][TkCk;=8Goj[K17X3ltlIsZ?eRb-*\c,Y<=4Oqc>5Mc)Z
%]]06F?ba-ciG=o7XH2>ljPTKUq-Ws4r]kC>SssqOI_5IO2ZIFbnE0[3Hsu.,bp&)fDu$#\H+`>#Yq>%iIc:+HNrOOKJT'CVDdMZ8
%Yl*rq5Jk%6g.qW!T-`B"s*D,$oAKors1aK8?S;+4*%E$NSK4@#`."cbY-5#.\G5iWCl^mhJ,F"EI=>MR90[m&@?J<pT&opr?U&m[
%I!W&Z918\J3GS2T5AgDQ2qN<<bs+9NIWKfjI+78sMmoV9gTJj-`o?$^Nj#Up4`ecHY!2I>&'^(qq"[Ft$[EaFH[:(.FnE`F3V155
%1;=oJ=<EH^^HK7oj$-c)qWuD+Dm$8rJ!)H?1^NZ-]"J#gH#f=6U)3UV:/CY4ZsN[/2T<^dbmWb$ji`&IE'#Ug)qi9Le[P<anWCQB
%T4!!2;3-K[[X>d$Gk'q>MtMSrHC:Cif?^pmr&7thm^(A)Ia5\*@dqP?EI;n$HXZhj<$;#/&DQ,QR1EShq$VREkFqRNj9]>i:&"rh
%!6>@9%h!;"qh/\D+27Vo>HTtn@\)bNEaHjI)\$J.r)oWI:DS6KI5H1'^?K=Nn_/8$@f1.NT,mq]IiV6fR@1HS?($F!do:e1p<UBs
%rUosRT.ILN(?=eg\dshHnkX/V4#a=eO*QN[Rl*uig+_D'F8LS-mdII[j_l2sDPeA.Ep'"&AP(Si'=-=8F@lJi*I)QB@OjHL^7/Yq
%$!dMJ9l&1P!9]nRjQ<XoYKHFZQS75IY@/*Y>$$f84$.d^TA];*l1/3)c"_6?LL)(Zr!?W]"m9Nrk8Z!$?*cbro#mA<Y5bG-QQ+q6
%0!8R=@11:L_7^imp-Fak75:h4T:<8d4r.%`<Vu`pFqjDTm_,RmHW")#=hePG25'L62p4Gc]Y+%1`=#h=\8f8?moIbh9<eU3,dnYD
%`7]-lf6jk-:(%Zb_<f`sg$Qq<o>5bAKjjs_SD;"b(OkrMn'r7;a=eP%qZFTGe,KG5FoKXXs0Xt7MjKQUj=N7m4l60_r57XXpOE-R
%J)_R<a&BOdZ@#12i]"hrmX*!CaZHr4OZul^Z4GI`f3mA3pYtj-D=?A\K\tZTA="!q"W_th;#8"jmCML[-W:#Zd1C9&Y:!p(?m^>X
%g'V0Xq<>jQ,.ib/s7uA5J!JS)UciD;r.0L-WGrA7Z6>UfWL!lC#BY-^VhS0rJ0sYMPAYL!Xe-X.3@9+IQu%_a[;75]*hc\=J[4-/
%<n;H\5O.f3Cr1h+^u&9'2P?FMNkt.QVVdRSm&\4iq!0(-@>o2Ir:Tfu0T);dBD'85@Pp\@L`\bPHbW,6@-ep+J9;ACDEl3fBq%+R
%rEI0'he"D.Vo@':gZ@FQ,ts>I%Jm_-s/e_R0+)>cEqqr";a^94:uhO3[Lo(&%Ij41oG^J"P<YqlO6Q)UH/%;2\EFlt'Ns>%SKW_W
%G%.5:2:_cq'_)sW=>2C]e_!&;m3A#7+52D9.8j*/5a*_A,T%0sVo,rVf%N;0s$(l!g!n6/,RV;Y2e)ag_Lms6mcph;"pE$,^%]SK
%![.l<1$?IQm;JGnQ@qK71OEanmR3RX+=WeJQ+j9ss!@G:TcXCO@oN"sAk%RVAoN-DD?V,D_N4M;ppf,2plJ)C^B>c"T4N-.NO?R]
%_Zf:Uc;RV%DQ"+PqPuT;7>UqUU>qkV3<(pH1!i7L^m2&I*:$oj8c*mr&]ii`eA%0;rWOHCnNY-JqOb\3_7s$Vr!QWCPQ-[[r\_=g
%#lGda$ND]Jn8D;unOp@^^J\G0s4kK;gqkRl(OPiCc(IFK<-rK4q[T<>kD,f$<1Le%cYkJjIi5crFO.+lkL^%(e/d6Fh*fFF.KfFl
%I_O1;?`[>@h(!>R^[u/>5(,;5qtOcXY]0RH@W2#PJ,,0(nn4>Y5's;PX7jkhl=g=6;:cmM)<,_DMX]j'>90kX7LlJaBF78?!>u]q
%:eC.n7r763C4/s]fC?OJdm87O#5piCR]a'!eOJ%d\q(O#Ja5n3s.d7smBcg@p6u<^&g>A2'hGN8pGC5<K+_%.:V2YH[(UL5N`Is_
%I])sCD01\5(KUd69@s>&*8dGbL7SlGB/k-eMgQ,9!enSp0">T/9BJ7b#OnZ@HnB+c-,Pd<b*RN53aTlB8tK'GK85M7OC'!#V4Y]8
%L0]ktJReGpp!Fqi"+.8-[1kf+OV2DZN]ITJGTfK/o7/G@MlgG%d7T0!"P?m-FG:"<mN-4N_SS,]2,Fbp*p:<=#6*$$7(BW$rfFWZ
%HKlk(S:O*95EOsd#26uhCM9r&+8a%o,[A3H-X6\"?jDn*5$W%R-,]]`nT-u;O!$PD#gHc@1_U;t7ncAHN!AkbH\0Tlq@jGAHktNh
%#N,5uU2U5f(74f9/=.dDq86\C_Vdfo"^K#_KTAt!;Bo8o+q@H2i7DZOfD#jD28nT*0lXpn&nZb>n@].(35gXp7gYiRAJgI?BuZB*
%$g<dGBto.VPj`;%Chqm790*-9a4!TFCO-o&+kj27FZr\iodLL4IYkmon'Kd=$BhQVH-5Z*Qd%$Ne$H.N2AWOCd"i1+;"fs,<h:+j
%rJIo*F-mrM-#'_`k%li:n=tECm_DqUn'Jmk6JaE;6dIP*`$h-3(kGR,(T6a2]2JAl)nsp`Vhjcen^?nE=<i&:iPL?EGT`V](t[nq
%rBh?65G6IY4f'.5Di4C9!X<JgJ`XZjLZJY)+8m>R[EhhrP4"Vs_KVCKI?k1W5VJP`RpZprM<J`AVdO&-p?C>^Oa%*4]%SC/q*<#_
%`"HBL`R4(P&1/r<:'DXFPU:V_UsHkTqL#lMjL'[BM%Ce]LPIhQpLPaBa@O2#A)Z@F"TmWaqkWmPT2ZD[;b925Y$e5_mffb"84$JD
%-^e#_M:5L#]70du$&mc)<_Nkf.\CnpBI"dkJfO]`M85Lp?u'O,gj;"'>6*oF?:Vk66)A&A".=aN"t]$DZ,u<jA;k0K)%I#%:ce](
%GkeZ[X-b-N_6OoQYP(]M88ebXN9BobUM"H`HWl(GPET=KU;LX>7YUJ;D"s^-ha1f:J.BU"ikdsD&GLaUZlo_q9YjIHLdOe!3M,>j
%D_=%S"JXIhKhmJ+&'.`.52of9fP%h<!>H(HKQ;m2+uO"5J/D1*pl7513@&]#0X+T<k4*hFlraY^d,Dg!e[,o#8O>cfO+k(]2o$0W
%a]<E^X,=/)n3'Ja?Vj;FEF"`hOo18l]tQEr/Q;b$#lH:bE.;6G$<R'TqEfR\MZfhkj]atsT/(Z\=T[!/9c.NP,:bnC/nqH'lOU'Z
%/j5EP(GnJZN'J-gCrRd\>NI04`\si089p?c)N^7/F;<\XpDlhO&RX>aR+8%a"&+66bOCqsNcrLUA-!++-pTI\I'->qntEiH(^H-9
%eSI]4FNu"p6UV+<\;t*+CPU34(AM2[@7%SR6TT17ZDfsu@+QG\LIJWhQuFTI;VRsYEfjnCc],.D5%*#mQ@g/p4>]a*=K.<#2b1/]
%\:Ud&(A1J@IG/CKf_o+q*4<>>]lp[N=T*6TGKkE35BSh,CAa^pAQU7Q8/oo4?us[LJH(b';UQf%6O36a+3JR:5(ETbQ'=g%r('Y!
%5ZOl3(NfM=n-$i8jgcpe,^q%nQn8*[RU2rd--?GFQag.<8CnPdi-<1.Or#S^]i'WB&$rG55F>k:SH^pRome:q[3k%&+C`DcOq'b@
%!.uXa)"aU'L(l0;MdiP:%DYMY\HfiVljs*RJ>(1:g+Mgl%sDcM6l:2!n8J>SJN+fW!0.j'FWp!BI;BUZH(q&5L)#=Tn(!Dm6IGpC
%nZ]uh?QE%G]qR@*]-$C,RT13hIbbe?^ikS<V[FFfq#p7%*ucJt+SsE)MrU"U7X5@@pAL2j%nQtV9QH*k;][<-P+c1/q]@"nm?!fh
%XR5[D.'W&',10[4cWBIDQlg8Q,G'\j5B=leORSC\n8FrIpmEP9&](R!*r>t-8P*]:X8\;.!sZ4b8<YGGE1\C`/?pD99/un:VNpM1
%)Dr=P,&Ye/O*Uoj$2RQ$8AT6h"c`$Z:VQE?UZX(\4<NlL&o$\6pG;d3:)(VAF70f[f/h`]:tI)V&>*9fq9-e`NJ=Y6I>gVb>lVq?
%Q%hM>Jj]Kd=Jsql2ubeA?%&C!pRdm['Yi+p[7Z^5f]dNnAbo?1f0QB"IFN,B#Z*2RK3M1EC$7W-d;QNRl;T@Db>0o9*lg([ph!/'
%h77,8`bT[;`GUgp*4,]pDK%!^8q?N(mG2BNqSf'C8#H=c>&QZY7'YK`f1N7Rqju\-i2$/*3m9g&Q@X5@Vcpd^Xu>.MMeN-Ls)e,K
%*DTBg3d6'*[QBBL(!;/Gs'!>hRV@_1k^:bhCTHg.La0@ih#A^#Q"l9cCtnmtV?!G_ea>'Kj;7"uCd.T3Z.VUQn^Z'C2Hk$b?`KAu
%D:1?@B/7GU*>.`6M"i!mC\TaMY>3)UW;D(8pjZTu/H#28@KG6_HS@JJZeXkgS$2hripU6sU'mM9k2&piJtVp&VuCn1)d(J%gNrjC
%*TbSahu4)[qgX,An)3fcs(c9ii&CA:#jhMo0=Un@?d[ZC[/GK$>JB_a<"T&=XhWC9F><FNXdPLT(>BMp>qN%)gtku[4GE\(rbU&5
%M[_$&1NFO+BReaphg[#3r_<)$4]_.8IS.j;Ql>1.n$Qrhg&>`5+$9GU=;<)6O.*b*\XL@o^OHd#!jpdu`B%>+h-pQSXae2s_Z019
%`[W<Kngg:NB[,A:G,gg2mrd]qg1f,bVHbPg.(oY:3Jtt0q:'3-V<;a(;/MB\\#XaHJ&&U;AcE,37Q@\Pm6$@J(-C>e]ClJp4:TME
%V4ocqAZs^&ot!A1ErGtB+$M5p]@_Ap'd'J$qor0FAP^T!?X2VY?*)X=K570#/$3"'C*`s32sY;_MY_L"9oDRTan8]>;L.0h[Ffch
%;^&h/P4!I^d4R$IPa%pB.>r/@f^>&o`HGeqk&.UtglZd@AcLDieE7G.q-NQ5>ArSbZV/2/`g3`9$g?BF^%Ua1!VHCO@"4a8Qd%_>
%#Ge`n3Dos:(V<]"7[7F=mj'b#f52<CSQ6=4;u%N>Kj"WqqT#f64Fj%WQLN=9Q=$)rN0!@<`(*&OI1Vb5d(ja.g4-5b**<0s*Q_At
%h.!?aYBBa"9>O<:*SN8k[b1@jZ#eFP=`dn(okLmdlJltO*^iffXOWf:@f<OblI@tEb0>:9YPeI%)U(n.G-dHO=,Ya<]A8e]_il'!
%>D$u*s7$XPOK\\S+Y>YJGCKU@7[TjQ3Tq1i)'dnd^K0YB\B":1No7-Q&^*8\b%IMK,7foM.Q4lG&K%_(q<Imm;l*"7qKfCS8De<N
%Mff_J*GY)Sif.,[@%qcg2q3$?n&OX8imaU%f,7[DYShn`A>BU7@7@Ng-_7%h+H9aV)hhV3DE6aag.'6%?U%u.cN`i7]t21=$mJ%*
%_apmZ?0]@Hn(\LHo7-6&q;Ig_aFQ]qot]1(#+*^aBp\TFoS&J1bZSbH5F>RAqNU<R(4?_"?MurVPt0JFkD(ZAHd%q.XgVH$GkdF,
%J5T5S!rb%&h\AJ@V)t@'3rP*N/`Q3qL"Yq7qG=^#:(t4q#`/C9HTSdjW#4([XYSsDgISksRsU:Ypo"XWk&Nu_qaZ-b1@Fk*g&AAH
%*Bp9tr:"g*nT=INq]In5j&mXUer]lMM"Eo9/Mt=gQHJ]cE9gj^.[!"Uinf$JEo+!Gc^_E'r]qSf&(H?arqn2eKZmL&+WP2Qqb0+M
%C[d*f4'3C"@<kP\&*k1)S""daq62'=!C(Jb-dK1Je9p/#R=B+?P,2@V[>9TZR%5EB*,OMYI!nSP:jk/B*g5k<=U"_7qq#<SV=UCo
%qoNl5L[TAc^r<+N3ZjF&:qoc2o2MejgXQ?$IiQ.c6pa27cHnI62#M\.)E*+Vh#Xe\l$>FA4[f)>ZSnhEoYsdYUeeIMU,%$Zl'j7]
%\s+Z/MjVgKnG%R-&^.k'=aJD/T?R_@o],LkiX\^hIkrR_D%Bm`pcTi2%K+[)lBlMip!E)W\BSY3IqWqfQ29g.V=W.C#06WS':n>:
%co6raoL6F8G>jj_Pp?^7HEib5lVHQK5UFnu&'`uABL?rbbOMW]=/lcZRg)6-I3%gN2.qO_C-QXNh#<_6#j4EJ$?E>.0=ZEtke7U9
%oB_s7&OZ1:]>s@N;;F\:;m`V;phhhm_Ve?\[bAis(nqFMdMiHi^2H,im8$.c[&J#tb]etu<_STnES0O,9s[md>@thDC9PE`K;\3o
%QMn_gI86)'Y=1eUDcih2/PA?=F?#/q`krTES#oHYpMs_N5@8D+^%N\_P&jeV[_EQWjU]T)FgF@lR*J\Ri#Gce9)faM[6ai"B>-><
%cuC0JKmXbah\0]pQ%--1-9W4AoBq@erEr+/_fK>/Gl4);jlUd-\)'kLk$3c/K>28>jT>4jh^N>W3ij_nPoS%,q?+_)pGN>d"L6[,
%C:=/H`m>N"B#%4BCa@M<SR/;eSK)#hf4mN,)rGP<?"nLH.](I*;!ECL?;R@5n^J@(?OIrhK:&bOd/Kq?Ogrs8cQdMCJUsS:_i_9?
%BqC4Tk'*7?:fq'Z-(O7HQ#-!Hms,Skmn0udHYa+Rs"gp8/X\gtf`0\\WF`?PQMkaU2Lj)gF@[j`pFQGd]Kq^.DQP-6GKRmN[;Sff
%Bm6p+#E>+S)qg?;ZZ35Z\Ru#YnkUe5c>qoFXa8ZhrMZ4)%g)>M]93CN2kjg8O*SK%8aR%SrML,/*DIK$l$Q8cC0PL2Rbu5?nnZ[.
%E15U\CAYWfoUD.Rs7,Xh?UIIKDm^uap!!Pn%$N?A*K[bZ*P>joOjE$h0pV6kmT7FD=8UGQ@!))\jaJo2"HP8AOL>Tg#%EJX#I")q
%d)h>gX)F&F]l)ld5Db+QBSUc/g8#6Zs).$B7RUrlm/A9m3\RlVkgmbsNrfH4&p"HCLR*,0K<9pnZIpdGJ:$lN<GX5JBIF;dRg^;1
%r\j0;<>91m.W)MOgVloHD)Seaq^#m&Nh9M8V;;5A?Z&*8hnGeDBibMHdX?nfNQ0-Ier7A]?Bc[Z(Lh1q)hW<(s,6OJL4eB\\%Bi5
%m*=$Lfo:tVk$WBJHG3k*?eLp]MD(NsVA>*QF.6WZ09KCSYJ!+O4>pZ<L"P2Q<45h$G/i(SH<uR_XIcLFn+\C@gXf@cX6j4r(\6EX
%0]Dm-R,`:/cah(VB7+jl2EAC\1tV#oG.,&/QtCJ\44^jB2S5Bton2Y^-,4bjXeh?,\R]aGn\\VdPm`sUk6_k1qJr^-HbRVsQ\i9F
%CNI+OhDjda`L#+WYE8@rcSEi>.K!.nm_RR-I6-)l%Nk?-_:<])31E&/HIfoU$TG+Z085nGKhh1rSsu55'rKS4%knIOX)NQtf?6>4
%SEW^q[=5jZOEp,'TCesAKTZ/R>hRq^>?tF#3obd!d@KXkj)#HYRXE:q<&S3R7.<=15"^bkGS0,X8e7d*T;U`2Hs%LaB:o+6`MN3[
%R#G[$kO.B2fr:0%[b@3V52@3*=tH"u0DJHtSq#CAii-3r^8Teonb\$om:IYCT3.LR[,]cOo_-\n)fB%qF`I"E^bffroO]u:-r7Or
%;`fp/qXlmLdsAb"+O]ZJL)YVFE2+T"\]rDK?qsKtopKbK$ao>K&W#fAUo"fHeP'9;^[`Eu[O5+^)bX[Rq70>]X!>07.lFc:Zd%8"
%dV7fX_(1N$d(%8Y$/!\3RN4c$>cBN%cp1P^B3o1L_D(1fA_V3C`ccCo`ML[C/:Q9lBb^R*Q:@Pp0TB!Lh=0Zqpi9fbr3UR3hr=@_
%\bnUOk$<3N^qo2/I!I_:kN,_c;eD]/eC%gfH2!W')6FaqgWN,L%CF8o7SC8U0>X2S*Fc(L:G<[0jR*<0\S>cr=-r3_S3G4]a)_d_
%>As=HEG@V28gaj:laaXho^PkjS),5?n"c"-JLlo62]#uNWH+Ck^L-4o=CUD5imukNrb+S\fj;-U]4g=JNq*oO.?%K$M(aoAShZLL
%A=+]nkJg:RrqU/7[G?9mnJ?Ao<esA!XL/d>E-<k*Bnj+cYrTJi6.B+<0l_1]QtA(El:i(8FZ8>sap%QQc)L4ubGs&s>s.P8VN3[J
%]oUfn8'M(a>O%ii@gG.cRJ)rJV;J&JG8O?ge!$o%m#sKCba4irfj(r@So^q/WPrNsN0+AdgM?&c9p^*B.</_1,J05bD*7-YOTJ5,
%i99QN/%p.rfdUGR2?V"U.THi/b3K4&dSK)2QDpq7=atD@h+h6ferRjLmhPrQ^cJKB\[@c\.a3%>KYg2<%h!$pO6_5OXpdP>Fk9fl
%V(di]qRc38ZFJ:r5%JH"RNg.I\D$[h`\uEFqc^'R9YSB35+FncgPMgd0/r:"O4PN'"T3COHZlN<=*[L^h/DH<CT6P"&+D9\Y0t?P
%c,\A`j,ILk*upfg1eVg9IiVsnQ(Mj[HA+quE"7QiL&(;_gSCBk%SFFU@X@T[C)^\pC+=X6Dp8d#4".7a.%Kl$iR;Tu]le>EJ8#35
%\nuDqHE8LgZJ0<<mZ7dDS]j6mVf%8h_I9-W2\UP4NIV"H<8hN4d_!7t(;L,-6^hY\q^e\r[:XmU\=<Ug*h:%Y59Gq>Vj*jhVN9k?
%)qeE^TRrYk@?]a,f%,/AY`tJ1oN0bkj(sA&+7H:+AEoXZ''XPh5H$VFWQk:?Vkn[P^V4dQQ>TLH@PTj5pL_E`ZgM"?HPM$6##9A@
%::7I5im(82=!H9P9JbI\Rh?-Zc(Ka6;G[-h*Gp-.pt$4&O(QHW/AjiOQP'HR'=gL!m]r+u-;,b\YrtEod9IQ*[G)dZVni[pa&n=e
%^DuoKUaEUAI9I:9!d=_KV0Of*;r0;_$P@K>YXKJ457NVB*_X$,cXs"\/^eUZULAgRVa^M6D.KK(9l>oj@mi3r(Cq]8*"bf<BpJsI
%e#2-p\+KVV1#>b/VKkZ?mY(B#%o+&e<"3=_7JlBM8jc$GYOr\4dgQn3q(p%fQ7T[^qC1,7ceAELE8%5VnI+3h`nSnTqY]oUF3SU:
%`)hij8gh\h,h:d02W"<>YO@K&9G=*SokpZ>=r)k5=;bF?[bmGNqJK>,S,NF.i0tn<0)(d#)C%#cT,a9<BSlVK(h$H&].":DC#%U?
%HXIHC1(@Y4=TEFZ%DMb.1o/AbBCsM),LOFPD(1p)<dCVFG@lnb@M2(Ue`o!e!93oZ(e#:=)sP7qa"8u)[p&7m8,E"&X&2uAh%uGj
%D.;lBcm#C<JAoquQrkinFcU0:(S1M,hbg*8\];Y4$<pPXg!"nUJ\6Hb%^"$ia7Ap?*`lg`Dmk>l6M#bf+4/m7!@Q4<gf;gYNL=Uk
%dU'WljaXesf@bK?EZ7"jmDCag]5FbUg@I-Y1lX<"H9*psQB1Jm/*g]#WPs(2c.)'uZoYh1=ibHW@cQq435&EX3DAc)\TQ>lT54-[
%GU1=Jn+Jg#]XaHYA$.k^5Q"-__Z8f9rJZ6g/Okc@Z;TWV^*M`sV1g;qcShcEj;>2&s!9!L9_6Q0[O*kKNa:X5FF[`6rd13[hs9M]
%FE&75C\eF(f9^i]"$3*p3o6Ia.cb1k>CAVB>elBnT5aLQlffR0rX7$.D`p7N-?AemI=(LnNlM^2eus.!))VS&1/fCbGJ'3K.H5ee
%JK[(U1'oQ`@l)fYVgQPSrhXi4DC+77F\<4e"%/3!_sSlc0BO7),CpoP=$F[?;YSf/VgUK*I+h7GqfJ),(K9_VIiPr0?^TNM0,AU!
%dYfc^h'XbO3UYqk'2H3*Rm17eJ\N5LM94S["7t.,Un_:CV1!!'X4.1oQLMUN?]34PidI]\36aJp@<SEl!kesQCotp-`p[IYGOD7?
%ZNoS=$+.7S9o"X2M<GH^cS+0kI6:^;;SDi-%V<,74G^22(>nI,a-m'8>8O&R$D(]=Ik>'tAM8J=<d=nM51T@-:LYJ!F_P`@r[Ke]
%o;^aG9g8%g<h;?868LXlW!GaW\El$^1Ggu/Cd+9cT05'3[:ja,R48:@>plBbFQ)q*G-$dDo^9DLn29D?*pE1gB'*KN("D?al`LQ*
%+;#*,O%tQ%kR[#L=^C5;(7Np9>l>Xej<0RKcCUQeMt`;&GlI>_h2;6?mb6e#IBtW@[8oZ[D`XB`[k'.%oOYH#WK6='p38Wi8l+SA
%IeDn\^'PIr&$*T&S&*L$H&OIof@Po;Sn-KpH6TiOT"Y1"(_<\NO"kq`i!NNE+G6#u>\<m$aXLJuMW#^5b4'Z+5B6X0h86%UR!q!^
%i%[u3*>1u(MsH#23:,_dZg+6fZP'CPbjF][GdkjIR+aTMbKUjAI*u:bS\lepJ=GWt:lK=j)O>aAUP(,Jr:?[V-j>@M&R!3"WVD&a
%`-)ME(]3#S'm<WG+4($`kMe%@GT=KDhlBcoIsN.UMWHeok]h!>@)<+eeO+[[T:;_JI/..sL#Ie2F=Jk%@e"+e=.#N8-!7#c9[+!i
%:SFA-DFOW,Xrcaa3sQU&?[Ps/4g$E-c%Ed'H^mgrS&^ot",7PL>+/c7-c-p,+S@O,ZC`cj:X+?or->MG[UGEdSYOuo`Tfg.C[9Wl
%cqn2Fg5;sQ`TG/0jS2U2DJ\kZBUP/.BAMq9P)#=@lGDu\bCI;oHE#:Y,ARA!#)8j.nTM:,#Bi2mjg+2^'E,ZlRS3Nq7.0HVas@r-
%BkJKnO,o?u[-5O'!VN*%5&QD8Tq+YIrG\b+ALhXBf.QMVBbG%Co<EQt6VbHm^6*rj]S$aW7l.kaGdC;@05NiC'':k,jVf23V0m"V
%ZLnNVJ=-`A]+fJ=IX5oU^U:Y?BapGhOhPhAF#0kT2^eJV>,(hT%cK6`bPpnoP)<NsXp*fE16;qgK3G.>^J?uC60W23o=)]6IIn-V
%(s/5!a@e8I]g0"BcR<q2<n-qKFuOd5p<@WqZB#YP^`25\88*JVpf:b_*Zbg(:J`NAQP-P=f`HLRV^QK$@@"IlNsk>V2PT;ORi%K'
%'c'Re\HL4&l,q37dW-iCdssD^%.]bHdcJ8j4Z,,)B;ta;Wk6R0>5DsR0>qI/Y!-\84>!.;h36Gc'Wbh]L+hfhEE\-QaD%<>et1>p
%B:5<7@fX]2>p8lb19Z&JnooF<p>>?fpP?3$P_[S:/qMI+?[/iO>#25kDOoDU0iZBbA-^.WIX?e/p)%"^>:EX/AtA4`K2V$?J*%.I
%*:*=DFKdZcT+qGR88X1iBB*`Da`KJm4C_o1f;[XZ:EH@d961nBF5bU@==^kgq=(\]](Wg]9LIP*@(MZ\^KS?H+8(Y@`eICs:;0t>
%Fu/gSb"G.Q+FR3rSPS^.O$Rq:Gm.qtqTf+c">8m,N6[Pn`Beo_J`2dq(.3:\FXd!(%&[JZ:ue>B'B/OenIW+p4ZYc,$<?9$P8c5<
%mX:JZ4'=54&"BQ1[+nb7;0K#/,Jl9c4CI:tZSXI%;$NfCR8i3V,uMa\D]T;>PsmQL.'7Wf#4*r^!2Sa8cqlfbiH'A2r/59n<J,?X
%WC#Y+PJ];Dejkpn\VG8Jb_q7ge44nG]qjcdbm%d9p2W+"Mm6'UfpPSWq0-U]N%s![+,shjduF%R\&)%:h"f3W7IKV+L#3pOf=?,n
%nJcL\U3sCi]&;C_0BKW[N^[BfH/K/j%b%Vs88$u&5.TLNTNVGmo`RsKK3k9,G8rVd'`IGFEZ5t\j614,F4I,AdIb9Ar$f_+V_PQL
%>hOqZkNlL[@hm9VDUgDA5,QWIci8[I#$(K@"3ac4)5]5#Gp);]MdXSq)M_4mO/7J^4#LP6`Eia(Kos+.C$K3=pj<&KnaL)W'*XSM
%UG+igHL)92W!`?ke)3<g?j7iP\a$NQqh!smU%($n3L,fugudI&piS[VY8_.&Sq&@dk?[BMrTn=Qp!MRIidcUZI^D_MC_,J$]qU*M
%c7J>#`Dud0GiGC"V!76hQac=!rnoO&Z4e<Mf6n"DCJ.%cp1P4BGs%?%ju0NDDsNcYM*#0iHH&o5FO..AY#8n3I(MVN:Yseq]Co1`
%eqhdbZnS[eCD2E^<i5lM%#0K-_u*I+pAWmQkjN,517h,,:#4kD8iJcRP<Or5#rb3[[<XO;6P@#sa+r@(>iu`B7:pOT4Em>HUaJ*&
%Qe&LbGLIO:O+F1R"<[d[3BUTR+),fbK8=kfV%4O:PH!m'68Q)J3U#T`Vl'oeM9]+2XZ7*;'jH/AEAt\[WC9qg'%g2#-[Y^_VKi$n
%maS^"]hpn!mED)]K"_gU+HJ:[_8?QA`<mRM2sao:j1AV"79:u5.+RP0>jo8$QJZ<Gmj2*^`$5"g't4cX*TLi83FJ<*WZKD^N<1Zn
%-EE1Wc)%i!phc`I9jFVrb/XlrEHXQF:UnG\kEk@kgquE:dgp/5PMOtkYAf!?HbueC.>jRU">`SIlHKd!^rAAa'NUcB&Yqm:'I6i@
%$rD(%SSjZ5qe"$uOLO(^+oAJf#&6/#17CL)dmru;a"m$k@Sh08#2k9,ki4l'_O&g9D:n[MfoT^'BYH\5Mm;Acda$9YCETEGm$jDH
%_@1d/[PhIsZXGA:`t!lpXJMC^HaEZ\oG.'OJW)1D#@fVi:@E&%(XXA:5YQF0-?O7PZ49@qjbrES@e$PqS=@hh_`#DE/Ur-HF9:l*
%iaQR3h"Y3Hls2c\L,e$B>e_5jh\_J6dp6ePbA'LYG%P?$]!65drttNCaZfrAJ,D'o\-O-3rg?:cYX%T!mLc7,B3)]_'j'<m<Mr,%
%/@cjG'+Hdf=tD8<V#%+hh*ChD^(!Tup!k'hF>SM-a?H_,5UG!fBBa%)@=#H5W\4_Q0B\c+-l@!5'a?Iko&\_AXm\4A;u]3`?NqXW
%f25,'=(>aNQf75_6%"hfJqddr$fGY^c_VR2Z$e;-D`g,rf=B/YK/9_m1\fenil9jOTisE?.D]o%Qm2U-H?6iU$thuKVXoUEe-sQ?
%SJ^"[=r=mI<@*h;n)F/6GR13#4pP`b(_*EkGo=is`KSEpG^,Cd)@mq9g9A#.+.[seY02Arrh&;$oq$r8O!B!'/0+#8jQKI*iKD.R
%f>Wdh;5q(ViQqb__4_&S4IAlFR\f;jI]d'N+7WN7PM<dcofG.OkI5l#MLVbro]k79X'SN8.qXbVNJfoGWn".3c+h-RGK!&IWS--H
%%c"/af_27KXFG8_q>FEdl6@&nIWCG(F1s57r&A/g?2WG1Ao&3o:S$Cm6,mB=HnX:4bhU/iQBt$XIW%AS//0JcWQ`c-cIfR-gl9;,
%B239k?U%e$fN[`t[DL5^+2Qf&n#8"O[b^f?O$@*YRJU5?2ENc7MbS,aBF3aCId`?ss'V:_\(X$uE8cTB2ZA#]Tq=CD0Q@*mN!='c
%e`n'VB^uHKaOSb/[i+sLC5RJbhj68[n^g5+2'[^l(&W38)]rFQ(\$$3rL+3+6jnI2*lYs^d_YqS"8k!>_I$0)Y>$=lF7@@([Mh;6
%Rs<U$nC-/FG0bd@4.aK"BrM_=ejKal8@\<D6FPTs_d?4/f0oUeq/%%".)J3Bb]lp[2Z:e1$"7[C^@iLr9"R[n!Fi&$">\"8/M-"0
%l(ls<R2).c`.%RXXTO_M1[>(UVf2.&nV&Kp.[nFqou&FjNUVeE!`:)3*fE1,\IGh(ji4J>SGQ7Zn;ffl8@MZcg8mH;j2Ap5Q]EFJ
%o1uR5ED$u/NrMV&7M;:T(_Y-.>V^9VYN'K8cIaQ)3dsRaljiMZf]pu;/\k_.[diP_P%a:orj$Or?a(lSaW);&"QF_dl)nSM/e?Ed
%Q'KHbIX]M='hp%theqJbjd/qqZ?\XGQFU&jR?rWMh!3W_/Mk1>rF%En6R*,7TJH?6#$UAu#6rVrSl/d(XF4A]!"$1&@X(2Zo@nt)
%-,t;n5Q7%"g"_J(Qb.*OYgh<10GR3@'n!##,jKC_`NRQo4qoad6_*%[M#7&Aaut$ZSfNpKl[,:0k'H9oM_X_"hO`bq7!NZ>jq0V"
%?m0+HEhYB9V8F67.&.$:0_]`(1`!$Q9\t+u9=sQof"RH/jcm7j\]i@EnpA4lMZ,ocr'tR>`_FCkk0's5dE;<,/=&BhJU-#'=DVQT
%M^of*"Ikgm)3)o-T"i6V(W'<aG,?lK0rK6l#(H`geI7s4e6/Le#=J2>^cs-,a^^O>dE.l3f[sGH2`C*C9<ed4Vg'u)LWS<'e:P"B
%RpN($`Fe[2c.MC6@PS]`(sU"]:2`p<M<k(\/6PTh`9&.WWL3:gIh6Z_\f)5lh=6lrSZ%pG>hY.9\ZsnVG44.i@!+uX_LfND><%Jq
%`YQa/,Z?6OH)>)pbF<j`Q.+5mCpi6AA!r&(>V(4ZFr/=t[`;m3rO:>0qF'X1[^"F&Mesbdl.C0!i\%[O&tb$J:TBE,5q-)t*Gt0<
%YnQ<u,^.mg*fZ^LkOPn$]+i7+A(Tlk3d,jH^Q.+lbILa>o^F803H'nt*\,@fZ);3=)gdupemklk(N6S@??.Xk<^(kgFm$F1dF^pn
%2`fO4m#4\O`[43RT?^5%j4P/[1sq`$+*DaaMke/FH%fs%jn$@OBWsQU4hA/M\/nqI.P?^`[P-K,ZVQ?HUP7GSIrs^_UHZ8;]tQG:
%=5!+6&*jI[d?F"_n`YZ/"'qhjUSE$'Z+JE3.nooG\D`Fu:1/V(Z.@05CHpIeBt@4jC2EO@4[(dgY<7fhe4O@`M'MNX?#^I8a[m'd
%$XSa^Z).?:LU#CIkKC-cmcNBYqN4\ngHKsUNU:'ppg_@jWPmH.fZ_jt:"U@)/++5.A(AVpf<Jt,lPZQ;CE-rY`]B=Ja77QjQ&"n/
%\a8@$r-%IAgf`EY*ga-qfCAA,mVR>sWtcT"k1ls+FcfFXn&3Q5pu,I*21Cir=<##H5M[D7/rX(q5O<2LNPF7mHK2-q>&kgqfY_0l
%M95AFm>6(+$I%tp@Uh`Ie+&9kh9"c8N:V!FZ1`;/1pOBPR[H.`ajl6+dI-hKD>iR5U@MPf'@1msq\-)eo'9hf;Y2?7?7H2DaiW/c
%Up!9)-PuL4X3&mq)NE"`20HJf\T@buQopt192/_6XHb,j:<fDYXNITc7d_fffh9PZ9hffV&lXYPr:uS,HBXk&4BT7fb%rs6WK"Td
%b1-F`o#fHbD7VTIgO%YBH;GFJWRpNs];b5Al3^/$WT@)q3r'>Y:TI;D9W+J7mW?1IGWreC1336$EAT\(I9eC"=#O:;e+JZpVRr7u
%d@$t-[6-7;NUP3WmHs#'Q.o&SB'h2%RFtBM<+aE7ZY))gc.LT@D>>$HR<bh<EcrZ$(8";r?B*40S(ucbb.@U.].V+(ZNl]=ip9+?
%H95?2(U%IYC,]5#h<*NnHtMO2-LM&^]D1C^BITObG95bUF1HVpD!/GO0913&im0\P1>X$7`#S=&o\EV]c7<_tc7L?2=*+14Tf0A]
%mYoCrh!Bs0o"E,j]p<!M&u1HHQUG:l3M+S*M0'rTqf\:XW]r<RVt+":m]Xr[&hhAEVaU"DdRhG7=$&u2=fNiNT3=3KEpIiD/:"h?
%1nH79SZF4)RuR:Bkb_IN:E1FAk(CgDSBpo[Ds-j1\mk[0AFjscfMTr/mGF5"l07i',>Q6bS/#0X31Jb&1$A0`GNP,"KQJ+dYrf3F
%NSslhh49sX;b&W>mRGUWEDN%WF%^DZkr.,e:VDUo>2&RG;fQ`dRBLsAg"Qo'HoAOt<N8RCHeTU2&i7(nL/@ln]u\@n'="_sS)Pb7
%?PUoAO+BNA[c_$qpO"n=pJX_2dbh]nO8A%Gj'BEG1#DF^@_<rG0=+q%T'9+_QH`1GPPMm0=\_(?nni8FX4c1MM@//9F]HN,+0";<
%UH;JU:Y4-$GVQ11YC37bR0lq@Y2*udldKG679A3f=l$'MZJ!nm$^TAq>JX>uis1poMn;8lC\9\-gKX>;YI_+`AgU;XiBdHW.D2jE
%_oWFTjq_QE(C(<UL!^`nYEcMLMs=5VTlusC7*"<^<kZ'-B@dKK\_L.snMka!]i[;LS6G7pS[0VTH;#rnAtNj3qbQ=5V.+C,Zh3s1
%H(R^1>\$dVZ^$s.DXj]r\iUqi9!pRR=IraOC+lK*V46T&XkA]q]?;4*J`Tq727\l@A7&B'GM>&,H`c]6Q""/S\'f./_q"Rr[JA@[
%(/q8(dhB":b3M\N*P9"18W2S./Y0(M4JpFGcQ:N\;oL-Rr*Q$OiBcoiZdj*MRG5s>=JjV$@gjZQgmo25[(!`=4mI2LZO`n?e(j_D
%YEI@]]:Ia>?8@q\3I=B]>5(*Kq>&.o>!<VDcK%d(A*JAXp@Y.6FnXT>/C$J6L#)%;8YNNCmB"8BAl<D"&_sO+bj==GCGupgS[Gs%
%9RGS%\$G>1rV"G2q,;`frH5RJ\1r3?[ChWnR<dXK\LM5NT#7u0k"O+Uh-@+C`A`j<T5HQZ:92QBdsG/eXjlJ"l.0:N(kV7YFgn9$
%p;M4?cGO\JmA$ZQm.Someaq(F)`ukYY%=n#a!W`_k;fjcgPtO>Vqn`&?gXH,Z/+6fV<coCEi6.OQb.CQ]rTQ;gtl97ASU+L.ZWn7
%XBbMnn%-!aK@nF9miX#87h>=1km<a>i$#78%]ALaS\l34X:J*Zq3AkLh36*Yq<I%_dG"M,l0*;/VKEjt]oF0>a"'g'q[:l"a,f&3
%d`H>$FR18o[C'soH*hm:dQUub3L.'&pN5S4H0=g.1B2_[P<$LqdolP;iT0>\Ql%u%5:l!Deb[P^q-JGpnbhogVgK)k+4h=>S!2:>
%c'9)M`eq0ZbCuk]Q-83uL$%K4IV/K"IH\m]D2H<fX3,9nq0FAfNa69FC7!Q(V:P33lm=_!e(cMB/sL6K%Z[u9R`BQ!lPJ+(m9]/M
%iO5Ur:[XAn-i(B6Bij2Wc_'4k1]Bl4521$`mVf;?jl6&)l+4C1H?rW)>hqUop,;UT8rJK%qk_cal$fTp><4;?]3W&X;*O9T=68Sq
%7^8]M*hOqfAZ&gZ4h[;`qO<MHm\_ZneTuE/n3O.jPoo_Fc?g'T&$+\eG[f]QmqD:[nYO]n4c+g2im[o)lfh@HV;8<Mf/&>mK9M"i
%>%;aq%F\st?f$#k\rONh[iRJ+0B$HTnoC0ll^,n<X&r`O*sD7pSm-U`4b$ad?!TL;ID,:\RuOE3E2o%mEj$GDGph.4e&cKKF'Y:n
%T1[:"/^N)hC[E5"h7&jCfHs;`(>LRd\$M(RBKIQ(eb3bKk-TOqX4KBg'+a&@YbCM,o0qBLLkBYpIk[>\U$Y*9iMX;JdoZ<]+*oW>
%fcD%+iq7fc)F!#$gs6`'%]bXPpqFdm(X?mPrY(2J)KPaTm8QT5mHR7:WB+L[*>n$?]D-rJcH+n7Wf<-9&KUn6@UfQ80gkp+D?q&t
%%fW^T=L!on-:^fl1bej^iI4,rs.e6dC"8nmZS>@[eEG(G\-sGNYuke#e/I+\A,q=),;=*o5QeGOdV[u/jm#BrSi/*Ze;N,N+8Fo/
%Z.5l+b5D*OVcS>a"`If2YkH`5&&pDpq#H%1=EX5/^S"bCUt9k-n!>E:TH/%[U)?EQ[qi,)bO/^M0Pd9S9"2Q`Eb'u\R@bNHZV*=D
%()rNJqn%&)m(g[/g?YBkV![WCPC^/+Tu4NupAGml?3AR>_fN#R/KfA0mM@s[G<Rh]#A_$mQT%r\I.s.gD7a/&XD[t*&Co.;a59)Y
%A"+6kSaKXgFBYaEm2$K!2idFmcplUm-^5VJ9ji8Df#+DhW;VPX2*ZTA_6/![fk?\Dg<J5a%Lr_n60.&nO5JpD4M*:d`q(_kZGdSD
%CKmk=5Wg\DFI!uZ_:S74E8Z6BkhP);qQ&Mhf.YRKk$NT_JG8m0'g+Ot"4+X'0A,6-%pAphf7Y?VM-dsY_"N<X:d5t\D#]@.X]jb?
%oCpue<PLut>.aQjDqO1#a/l#A:[]nNJE&n,riOk&),t>-Me5.)^`jM>=_4?0Vl'/aqt=0LY:sPE(q's/G[DGr:U^.O^\hFZY<PIP
%Tp(`o\!s4'GJ!X2C*Wtt?SH?jRhbr`!qc`SDohN9R/Q%.S(8O<1<>ROBE&d,r;!\=hr,>BqB\)u3V3`\o5Dt"41]h6%e"bTo?5bT
%s.lG4i'^B?-tnVq[FI4,5C3iUcn9o-%_ZWV"_N4.r;%cjI_$Ek>Ffuf.j54gNU@tLnb_Erqj.$O8AjQ&_qDMr"4)$Nn<j/-X=ga*
%8VnJ>L/X+>Y6qa:lrK1>HEX/7Yu^>k6IEG-0*A0Pl=&!4QK_QF5:boHeHa=lDN,_qqk_XWkj]U;o@X-c5f<>s46/nEs"UV+s+HIO
%Yh$VmL*g^`A0Zm$*N,\l7U2QmJ&3Rc^r<TT(O\t8J!pU<fBYq,*.-UZNZYrE]]a"B@f,R,XqURB=F?t.0*>Ra,o--?s):K`Tb!.K
%E!3orm7I6,Y=.StkqE&krDYAcgtN9YdpZ[WI=(9j,6r+uC!*[]k764;7#r5E'(><Gk%XbVr,7)\O5=7CA%%/na<>()s1sc-]@s*b
%/-g`Y?Q,ff,MVZ;#GLUtr&&"4qTAX05Oc-VpurZ(IiAD[[PMrHj,?t:!e3?1bC:dBa%o=RJ\AWe,[K":,Hh<QPc#BM>cgL%('p:d
%@(u2ZKZU%M.*40BAMB:DmP=#5'dD:+\pg<^WNS\.0T@/s-CFLTJM?:"GhtuZ\qg&DmJt&V986%HB^/2lOc(a<@FC9'M1k2?8a57d
%JOg!ZUUdiM_XOq/+@l^>_MNpM9_eYq4dZg>O`5`6PY0q]69j^gJa"apEINGM$t4,o.%e;oKhdHI$rp3`Q`1Y$(.mW_MMDUj3N+l%
%6fA.V<LWES&I!h\JGFZ0+AW<m$s)gPg&__3!h:VD@D0%g&9&dU>Yj:p:H5iH"A'?VH8KSkkO[c+lQ]OXA(V;TD!HTD_[gUr\?Q$'
%6^X?BY!BW#%U9/oU$dG*:Bq$rP)eJg/eH:HK`VITVg(V^/rh?1%Ig^TgtP-kj-kW/'*1r:k'OHWTLfDKJi*UL_@S0T"\Bi)U7L=,
%5Z4,m_f*l5mKfpb8j\^,-:=oZarQ23FTdYuF>S4".qn1#3XNE@Gp:9D"N+0t&53,]?u@=l>WAmS)k_XF:`u>?bY0-TKc\.%&D3"N
%Nq>Yk!M]&sm#6#me9,/[NWuM.e.N'?YW&e=O9*2QU]\dD&:RsAkF$nIJbah(N`*Z8aJkc+P(=;S@DGsk&jQL('B74C&F)UfijFmE
%i0Y.u-lb?[_!sZVS6>ut"U_dV5JW%j#;G?o/>L,:4@tb6!U`uCULRm>@6h%N5[K^:l+=;gJ-"fV)21hZ,CT!?7h(NDMtiQ"P8#Df
%J4B[]_%@u4M`E)T#%R_o!"_m@81m$J5^2VBDF48_][(435OsgR#LWaHi9m`Mpsk%l!*B@A'n1f?%`7.?8a6cU.[0sc!rThqCl;j<
%S2dm5!%a7^;7Ia-.2DuuKttqm_"n]*'f)%t4l==-r;8W3--A4"If^-o892ZA:u&j2+Y5.jdVq!uB^,rB2utb;n50n:Z@RZ=//V/1
%SLUu4G7kcS5Cc3_6",cl!Jh#:"hupu*QNC!U[sKOn;HqQ-QEp;"%#.X"#fZS?l"O*"(@fn6AQ>L&c$B6iN2$I"\o:D6IlaaTN]`W
%K`gV'5k<n#KE:IA_bp)dm.*GG$BcG_15rDqM"O+;_\8(b32%t(#5lE4oR,+.Uk.[]TdfRCn/Ka0kGFq"(ugBkkT]PEdp%ESE-Y0^
%3iR(=2um+c.!AmX'q/5+H-dl-%(&pZ`5m</CY+(WThSH]8;>75&Jc.NmS^s\=jpZ';DT/C26o#/>K:;#K.ma_bqMp,>C\OqJjgSJ
%.Shc9`4!ud"4r>m="+40@3>RYA.+''<%WXV^bK4k+rXn,@EIc,*g[<,4X)2fUbYl(^e5_lG(;,=8EV#3MT:)Tl;KbFD]CZk#8&sS
%FR7/$.Js1l4/c!Cd6Ro0_3#0EjrndZbnV9BK)*cP8IgF)Y2hqt=]Y[F#c1AMJ78pE*DYND0D&LeLSo_O#DJuK*5eF%c0_2b5pV4a
%W_)/s_X2`@5^idC?.-o8PU.dm3X6f@)1ca_6fL,YZZ=.V5t0jsEcP"4q$+g2WBDKR5m.>5&.XMU8de.Ub_TZ>+UnDUHWR#n*F,5a
%TqDptH368i+mF;4Q@b24U,\@l)&=B`)EoW7mL<t\8We_6,\09L34'L+b0qbG8Oj$t#`MQ1)^B_7J9mnoQ?ONl&YWTei&iD04gs!,
%,0chq'H8`8^kr[_bFhe/p>H_d/*d`Y$<E_$I$VPjlB0.+%4bfU6:9XfHAuYFNu"^24pWhPLcD"sK]?`R16b69H[[B&5m7Te&>jD@
%+mCt>JQT;F,kDRTg@7<.F0)GJ71Yd&R5E&>9hj#-,*537He_j#KM^#Y0Sqe1!=Ic3W$FVEp4hPb^ds1dNs$35*&I\1a?Wr%$rA]n
%!#W9m57g5/>bg!qN^o2/)!%Dm5hh%D)Nt:.%(3o)fPtNZ+_s7-'07c?(6L_rd2B^gP:p10)K"HK^_EI^5Z2=<+>?d]g`V[!/uFpU
%i=,Del;s@<.oIV%J$NhrOhrt\W6&j6\9-ZqTN)%3<q)3,F2l0(DIYk`'*a3p2@mk6nGkHgg63[`o]S\o=p+I=+\@N6#Dbl0?(gLc
%21e@+*QRM<!$a0.UGW,Tb[;]PFFhE9d[k%_$`9E6CBqrs)C^M2:kfJp>2TYn8WaQT$O]>nSmf>iH54@Q*-TpN2O]XP^jJ%N!TjWY
%JY@g/`mTk`oaW1soVI`+1=X07%]4tg,L;YC!/O^Z;')_2/Hat"A\+t2!9AjRh@8h__he1UP)!RGU%t_A$?k*@!>l.XScae"4tLg]
%YkHn'Rt@B3VPm(S3cKfU['UAK^/`8'J59`WY0_)tEtEGJp5+cjTmX0h1gLFK>EFU]*m]g@D.p`!.uXiAdaL!+3^*mrJb0S*6kC2U
%"'GBAJi1lLP1nn^BK'Hu."*nE5fY$`H>E)A&I_>LE)Z!-dp4K')(%H]G[Rd;_G2`2DtFq6.m?.9k0U4RMLk=P6\919>'BFQG;)nA
%6""k5MIt:Qn.H8A5!tQDhFG$DNF<9(h_I["Q"fIhf8)=lOeE:>;St$or(oms$dd9F=fX[)&Qt*H%.o.rC1&#qN;Cm,C@D<bhLK>B
%`3[W"!jM,34$P"A8#5pU9`me6Zk<lO!'W7D"LqJrl$s<Rh,UD5g[;;Z';4l6!tHHG!^YfHP_0<K,I=Jm,PR")Q>8$2,`Y?XVAs<k
%d./Z2&0hDA(`!7"l^R<NBK4!>lp9+acNnC'Je3\>)%RG,$sV#eahT\[9&Ym_)dNIg?Lmp`*J[IH#)9JiNBs4n")SeVM_sT*FaB_I
%Z(RHbC.PYrq32+pI=`E?"(`8dd1*$coeU\#aZ)PT+:,((E!:jq8\Q?/Xhp3_`<,>QAMCX"80WQb!=T2p%O!GiSaIEl,f@F#4[;FQ
%10C3Z-A0>T(7D=$V?sV.1,+Ldo.l-5qk7N8_T\%;PqZG:*+<6XPQp:.M726"V?*eEGb#sI?-e<n^oGR3jcVog0VO+I;?ZEPb?tpD
%a+EMokjTefL!jHJ-oI?"^?\7%#Kt(Gd%GfG?";Z;BGog',mu&]KK*L^f:)YOFtk]`m/+d@0Z"BU%/9gSaRk-'&Ssp`fYDCo2)bq8
%^7iX[OuB,Mp8E[],@WH&-JHb@e@DP$D[0F#D(8f$$k4c[c.##jSMNc/K1`R'OJ'C!#!F$H"lUi2!sXT9N!'R.3#JXtaXR=W@^MQ`
%CP#ER_U+!aEu'bNG=!7-3J,lj]mH93[K?L(XNcDBY!C+n=BA"$7#cDM4u4]QN3JBZ8'._tbqO^SK">aY&*r<\%eC7#c>3W6VY5CI
%^DN)giM"<oM,4[Yj*m]=B<@(GM?1"ci><C[6),11Qa\RoU0*fcWHd_GS'muJ1@W@?7XN;PN0XePm7!V[&q!HiW>4L0pr&-2FG+`(
%N=8s-^ilE2OTCjIF>egV.5Z],Q6lt#W'Bj@iFgsbJJ,dVnjn?\@ZsV2kBf[C!%fYT!@2YeCna9i]$^fa.>1R>@:4?m5:7b2_2@<(
%POB[TfcaX!GM(42N.=m]RPt3NqH2cD\9<%fPSf9`&k<"+=W*$2=;a&nR<CR"0QA.0>78?t7*go5O&1EF[d!m`>SB@8-u5'8:@\H7
%!+]W4%*0:tBRY8^)ms0OQp@8i0OXhBo*E0?,,<,mH::Y\nITJA=\Slm0HLWd!Y,FMqN^B%B'rK@g`%*_^g)iEf^>ogh8'<gKiu"\
%P`^Bf:N6e/mZ]`fIUkVB=@l<BmUXlM9R9lGW@u32B6^a"otUh@*,F(m=VspPh]HY?QkpXWlam693d!b!EJ,eq[Qd;!)<F/c*_)le
%-5E=TNR@n*d4>Z]D]$O6m"X>]<n:RWd1UIuV%'"a8:!X2r5gaWD<[Eu!_rlGA-Z+f&r4BeXRc/AdF*HdnnpZUltU=T#!TLaZT9eS
%816'+^iMCiH`0ZkK%@Fd_@YE&gb;"X5_1);$5+m4\S(*F?lmFj!+SQAYd&OG]SWnKO:LtSP$)7'k!>3u('7:lO_8-tH0(HmNGqEr
%A($$!;<Y?GT>3uJq">ER69iGqgEMqlW8j&<!g%#*(qLRDV4H%A9b9itGl^a']G*-;PQNq.QsT<=)ZpQo&.$KP@ibk@6k0_j;oN,U
%FZ/oi3?&$4>dstBk.J_gXf_U2?s$,[O]a]BQ"W=4=HiGQiX],Y$_,C.?_%W)&90?tY!B6M#$;uW-9Xpq%cBi$6^A05Ur0H)U`iIn
%Js"'I42dL7faA(LUf)_TDJ8,=JNX*irOUc@E4@tZ=Y^p\P!!1XP^k/b0rYKC<m1t)V(5di1=eRj8(%E*gYfpS*Z'I^GVW*Ka_4V1
%U[ko11;@5oNoCTr0K?0@5etSJ"M>I;pge"@VZ@^*ja5/?9rOQpLYPIB+B+pUjJft"#]8?p)K`KRMKC9*,V1i5*J]JD'h6@^JMKb/
%MHh>Fca1]73)T%:pYg+10J3h7,K;^0kTGeIObbHs-lJd*3@Z*_*XPu1[3:D:bUf5nl!`jZ%Y3HQS-To'-BR>+9qg3`/L-Y[Z+"Lp
%gI2,n;i28V(9SAf?pFjZ=%>9gXoQ7(cGa7_S'Nbm&OW@WLL.QORX/Z)CX02:N&MBr8!1uo=>HXZ'VGM=Cbb`"FdC,54st@k6&?Ql
%j&NgIH+Y+j3k?DZPK0kO*_e+')?qf4-5;@S*eQjGM%o^k4:F0;3XBuVTgrNapk_d2mTsilSg:[U:ki3f$#Yg10IU3nf1881q3mdn
%L@c_-USFiK08h83$20$4Wj!#+OsrR,5T!(J;N"H7ThiB*.LB]L*t_tQ-)?f<49asD8@s<0&@<jm2S'<W=hn`o8(fFFJgiI1)V$d*
%J7;/R:gduTcnQO.NU@ET0$uS"%4AY2(XP8Q8Mq`a!lCL(d5DTY$5;e#.C<KYVs?=>WT%"qS2ilL4s/U%D,2_L*9@QZnQA"m$$s\N
%f]48@in[E6U]?@h\H=f%T`0clQuW_j<=LWL-n2okieSm7>$2o4+.t"j[E2c()e-h0!)oYDFVGJ!!gEL)<ZR8)"<iIZ)OuP03FW$J
%p(RG!_[HY\<dU]M5\`K<(iGWDVBdMs6ZdEeGA[-VAM"'^Z)g6qGQ=/Nb*;3@#^_q;P+EaI*iq-5<eO,2/@\J#D__6A0aXjGE7j1R
%a$/]??=8LB?nb\=KK@UJ*7[Bt-2itP0HXlN"=Amu0L^P4CpIYTh4kG3@mNk81M`8.<[Uu\\TsQWeY[r96&/@+#S2[K0[5<#J8>'>
%=.mrqq6eR\QNf=0DnBMtOb9W`T)`_.b`WQaaZtIf&k??,S;^H?,))=-!<9.K0qK]!jFRh*,Spj#PFBP[Ta6V!#_n'_S8jY:*&BZ!
%aQ##cahD#12Dq>uJ@e2*%@QNnP;&5PDbO8meP*>i.334'EXFQG4%;:sl'W.q%(Su?;G0;aDWLi5M.09kFiX9E@jn#O/Z(Ua+=o)b
%7:n::"BB,fPaj/u89;r`R%)VQ1D<6LTJ*(QR/t'XYoc3_f`k@e-lhoo>osai2`u)U:^'=f9k)0OL#Gg,,U+r+%g'2)PtdjDZUT*\
%<i1Q$XUi=RYLQS`Qq/IR2LoOrF)*2`8Cm?6R3mk'$UWG@6HFZT&?ATu'Jal?4=Ma!6HLefQ;R)(]I\T@$B9]"H`h(_\NYjZcZ6NW
%_D&F9h-HcW&I]$"XAc^%M.V<K,E4(JI1sk'U#AeqnslLGG/+duj3g>K,fS[JlU#<TNXKY)$,NcWr%>"J,+).\.KBc,%HnhW,&4\g
%F[cU2okcU/kcO<MN.j+pPC8hc/c.FFcpkPf>4uCi@rF5<Zaj37jKeXP0]hh>To/dt"+CJrq_6co5h=BiK_j'$&+`!Yp.Xq1JT=Vf
%>>hW3X["3P1WCRgbr9$aV&l<:QP(\l6AEQVAAi^0T/J/4TH(rp+.h9.IasXtnea1m67O)b\@sE-n1-ut5i@9^%b^i$-t%TKO3A])
%A"g?+Y$)bX^unf56FE`50Yf_&Q^;Lq<j96W&#a`r0keGJVUVJ!<X9%H93?V7l<$;LK4Lhledt86+qu;05TUBS-W/_hL-=-;@]G4$
%Q<6Oi$:>h/X[u43-j-4G7ZMcR;*f1fi6X1^5qZa(Yh[_?[`/SD6C"7CAShPPCRd_/M?Tap*$ic](e3%o,Qe'8<NVXc$#D%*<<joV
%j%d.!5R.mK>7?ol,=5\.6,N5Q%IR/l=#&?)>a9qV#aZF%`CQR*J6Y^(+H3%d=VG^2eZ-t8C_GI4Maj/np%UGsXgBu:%oK4WXKA3b
%!7fR[S/f=CkZVMAVMN)C)Qd8s4Bc.0CC#(u.7:2Y<9->TAk0H;k&P;p_BOl$aHfe=M]TSjq-hXq#*k4hCI\KP0rXGoA<E1O1:)&]
%a:D!I&LVTEL!-]HNfl5`(Q*AG#JhRZ#9$6=6KU0E%c]((:D()RZFg:7O'09q=@C;.8HhGZ$</EJ@5JP>AXF0"m_IugCt8^q3Qaut
%*C9Zd\h%s1_8ao$(p?Mc<(2Kf$!%+<bp`ZD7iF(MNn[%?)Q*b&<`k@!Te8s];>N6X9V;B%Ft.Y,\^oKW6I<As_'!u=e4#SQU<r(g
%7M]_f9t`?=!F$T`@c8Yn$9![(-9_K!T]1#LbQ8G5U:;hX8-b9'J=T6*3MlCs@hukC#o5oifX&PI!SLU6)!kC>'G.a#7PtEMcQ;#7
%b.p81Gmon.[e^d2<E.GmH&R:<iN^9nEGuO2JE$Rf]dQKDYq>Mb0PA=Xo2p#H)Y*$2@ND#0O9CVd#1PM\fuub5<Lf4m8J$Ub_dG!G
%6E1ZqN01=Z93Cnh#fg%7YGel9-`=`m(%jU7c3<"?@MrDbX8eE`I_d:1a@6!/1j1QD)D%=(#LYP&2r"jE*-U3VU*Q@+@SN=IbG8)V
%mm`K)Jn<S^&HJZ'YoB[:)#Q&/qBo*-+E5:d:%H*?!e2s9!Clc%qtO$V);\G&$0NO"=Ogg8*^q[]#-N^(0JEh9G.k/RaS&XuM-!A#
%GpN'e<fu3`>"-LTcJm6%b"Rf[MeZ8EF/K-WQGuf7#f8D5FeX5!JeNAe<Bh>!./lupUJTSK16mc:KdFc:KZRZ/C@@c/TR[>O.)uI1
%3GUsL#-*1>#Bm@T(s5%C.a!7heH2)E$8S)$m+bk6LFt<H4^\[#R+nWb?m@rm%[Q1\ODo%3$CsL1".Al4bXE&X9FbGD"2QI*@T<YK
%[R^T)9Q8Ma^k>'u$,T$0@DT=$Z_c=rOt7ds1,:9#Kip@T^`:BPeeI3sCj3pn>lm"D!XXHM$Zh,a"OlM9KLWDUh3B*06p!RTl&#kF
%!'`I_J\?$_nr4Lqg4_H$!Vg1ALD5W`P#Rn90rQD.&crT9:c>]EW.%R`di:jl=D&C)eHG!u-sj%?oUu*JQo])D,n]j@aZu5t[ko6O
%/<_?u5QP(!$Y)#cYi/EEbO"$'PQk8KZsU9!cr]5pBT.Z-W#-]:?tS7mrRpEr!Les2,72!Z>iY*'o9e4QhZS"!@>uMXNb&a8$,,Pa
%jb\b/C2/r"Eo0Fu;XlYV/G^,G`n`'-N@%c#X>Js01Gi6^.fIA1>\SiA(AQ*cG#X0[lj6LWOU=Dl=1t=?`Z\b,M[)W02#)LK8Q8/3
%a,%r2a']loiLgMq$;J*FFn"aD+>SiuI?O],q^DP]DqLVk80O@d6$.#L#o"9aLE\sUb]&*\fejDa<K;o($*O8N%C,_dNGkp-\rT*I
%`nF^Z<%<XM9RmKB7Au3*TO\c,l)1_TUr2GGZupWP@2PA01G+hQkZ;2d/?6^k9cqKUj>Q(<[_qhQaSYWejge6KHFEOl%qInRW^C!9
%kF.JhLiL]Z@YB<W9XI2->D]0&#g:qdT<`GZQV2AG.1K5j5;P&R#c,T6Jp-GR%W+Q\Yk^F\5\pMb*;L>XZg5."@(PfP-<1Lq04;7r
%8<Z,Z9Oa5?^nD&f]%s-3oN[):GpO,00Z>27W^kV^?2tX<UkU4T(T"59/-@ae0TL6L;\a7kP-U?M#iiu/'f4Pn6p[Q"TjGO3QDoE;
%(fkf@g7$(sjoR>,.>r5r-,MpH[Z!K*iFRW$VEL+J(Q:q=.:GqjAHY)Ga^IUTPm$XuVNA#*0Qp%<+5"kuEot/s,RFd9@<2'%.8`Vd
%16i;N0M_;f<*/.M,Mk)5TY$RrZ%1Bo>SAGDB1aj$K^#Wn`*p9Ij,>d.P)aX$P&ff#Fh?uD#>s:iQ$(ip#PP*(>ne@qZ>tc3O;O-$
%8&p?8Od*$Af$Q%2<38_,T'RtQ2T;gQ(r7n708SQB05X.in$<#SE\Y<(6*?Mh9#tB\!W0P.U+<H3XkS_U6ig)dUlIQL;fWUnfZ^f2
%!@l!EW^k-noM$WtV`]%la`0J]Y`=sF]/f\El:<+;S\7lg-f4qmR(5#(P[kM'2e+\(8BH5s9eI0a#p[6uEFl;h3"jOCm7,hS7'-B2
%CiBsAFTZ_fL>p]8ST6/rr@qXG@`9]D8``H%pDf(,9!%JkJq7b/H/4!ij7(L&(d!aX#mBCkI5iHY'>i+KD94COJIE8U/8*nd_?AI*
%QKAOl.uKi-KV@fQ+eCFj_T2.:^NRb)fMlD;0i(EfZ@;"!VBh$D^'`=GdEIX@Cl'q6>P`RT:REs##tC>878<k^9D@uDg+/X"$YRRd
%J<^4N6:PH5a;W!=Rkt6Nj2hK34;7=PE%G;W1Cpf"5/Unr"uG,mA_mNVLJg'HH?8n=UjSXt)L5]n"!(fse"&Y]'GN\GjlH3`ND7`j
%01/(;>@o)P'IY0fnYI2p.-gsDq\WoR4Mssd&-`om#Sni#jj7,'`-P\=-=)hEAel[k=^mDM/q\`D8KkXG%E+YbZ4_eNk%YnARA_Rd
%Ku%+ZLPh!8<pA:aI:+^)kRsT;-\N^'3+UfQ^kW"s-q^G`$@P]!qB_obO9&o.m1P=X=]J+rGG<GE(<=#!*R)b6H]LX`1bCTH1d%3W
%dH!?-biL'->gV^N[VCP7/h+-K5g[NU3*h]i_i61X7YAfK9nnSE)e[%G/YGc:$jFI<A^#8./@<*IgfSC]>*sIaVkNLu<NJ`165s*a
%>]W7u#_nI(0XlS?CG,_ldEMkeF`lIP]P:+0J6Xl=MfH9=_U.?+\M]fq"t[9Y$HnH74/,5::V%qpOqP]VR/?%6To$o':]'2_"F0md
%Ni4@Z823ohflM"q0@_Y"VPOU2@:^3ej+u=W^gdA20;(o-,A\u.fW.&XT8%8ALDZ3JNJNj)FrX,e6=OJ]&=-j8FELf]O\@'p'RaT2
%#7EeloUr1V#&t8]o`;;-0S;YnZVY59]&?A*%Y8+^QZ$p(%3(OX4LqbC<P#M1mK#@?db$_"ZQN1qM:0k^[fGpG5-GTY%*H7kR[?_d
%'mfUb2;r[W^9'b7:UKX'6[M9Jo+_q_=%H)IiB.h(`6<rTf]AL]"C:'K.iBW..JN5fX[4KG`:0Or#6D'k83"VB"=CIC?S>$I+f`du
%I@'Cr@It/\0*DqnSdH]s5r:Ssko2c4l,G"rM1)5%alHQ+aM+.<lWeUR1d]k0!];SiB20U6A'$]Pko!p,,S2U<L!aI1A6mLm-p[%;
%.rp$T0H)_SKFWGB""ar%M\=VU!:uR8Kh)+];N3?gj39<)8qC[D3JOZ4MYKVZ"h19h*/60_;i%ThO_P=[g>l@i@SP)YdjEe)-TKF?
%E`BnD#uh([;OZh6>#6(4rJMIsB88h'EVYn(?FFsXYRUA.-RM5KUD&$qRYh-c`'^:6K[7L<Fs]Q)S\cTS1\YVqL)&RR4%GOZ9VH/m
%f<kq)BVRZifl[RAXIY:D4p#%)k":"G*<Rl&biaRqP`D9gQ6$i3ArUVL"f5o^.:YfQcR0fMm5^PfGAt+`(gsq)B*HIl=Wp+U.Wce5
%+gbtKQkao?hOqgakE0;q#TOd6R%Rm8NYNFB1AD^RY]l*%FsCc%ckZUZ+[oeqTb)dgeLI-*1t<'b6qs]$bbEJKVQF@*>A;QNY5"/8
%&,6/$<%LAe"m1KZC@kC%7s9P=I'ZGce)nZ$cPMjo\iX@P:?.lY12N?.Vg!Fqg-+"oFBQE=dOa3E03T3Qois$+0Es),ll=nCd'g;g
%.SC*AB^r2/58m@VaK76V\YN%LHZ6]rdWSe(,m]4<8;n[*1GOKQ[aC%,A+kI(Dj1SI!i@GQR(+^hE\0^EWQg]/-r.Ri1XRq;iM"U+
%D7Ikll8r[>f\hZt!s&N_d5m:*&VLfbNd6D8@"E`%K##O:@,S8+"1Is-0fJ3`l"t^#Ml#HG,0uL3OCK1s&O[2hp523Kg,oDN'7q#:
%4Hh)t6>8&$^a]aA*,X4+hKZ?RC#;kr.DDO4:Em%E'4>(cL5b6PK/Ab_hS)QXd%s5I)OP-=)dqUYEf`ZI#`=Qi^2ZYOA5h?8,U46=
%5s\mfLQ8T90RQP[BN$TZ(CqrP:Z@5&#&q(m!*"[10J6@@+iZj[?Uh4Pd'G9lZiAb1BmQ4TDu!59OQG6P>ge.H0a,NsOD;Lg/tDFh
%#kg7*9sDFK"P4k+'ko?<lg=Ss)Qc!Oj5MWm'<MSn5k4WK$,3U[SdF5uZH!='.G6r(HcHhdOTQ%u:-Sa&k;R&cVQ;JgVOfQDe:)(3
%c9W=iDoap<\F$@LMc!`h67Ug3]VrLs_@KXCJ:_W':RNI;_+_NOmTc4EKQ:oXJnf^#@o,/-7ehqC%EG%b[of1?$IarO$?C'tASZoH
%^'IF[)-ec"TTG?o+4m*DhRB1^3p'$a<:bBF*p%oO0E=!bHXY!l)\E1c%>[^nbqF/I[7$Cqk\3P75BkeR>@PN>R<Pb%Gk%g7GYcRC
%-.P;sO3XD;Ub"U)N#b6YN2gM%_3e56KnREhPU+;dmQd1Eh*0d*c\BX3/7@-HVpns.YH/a2_M6KJDNq$9lTaHN;KSIJHIEln8mrko
%[*K*+6O`)h+.o)B$?=PK>qC*V9>a.Kc'(6a!f#7EVChr%`&HLKPOkP[R$[!JPiuFo+TPM/fdk5HAnt[N)XD>_%a$XYK]K-5chO$k
%TeHm2b1p:n@g*QRB0u[D-(eu5l$C'ddQF#!,4/mR1uH]XbhUf\JYAE"05M4:44['b!Z*?&[T3[J*u@bF)Jc56gkQ^Z@"F(&?Y'Qs
%9r8^WZ\:7>n4!q$mI?L*9::/I;+OXN+-:N`.kL=9)-?C`GQ\c#E![=-H,r"bpSpb''9!&c(f_MOd:;(Ie;R%]FG/n[\WY_m6Wu7h
%4<irs*m<CAV7A%CNnhc'*TY;i;bi\d%Xit$o9^,d&42:sf4;&jbVcBpU(m2[AeGi2r(pOXDrhV?,dg$JLI)MRnYCS#>gIU&N#k5.
%(n;X/\%R/^V&bHS1-3g3@!5:@k`A_Pb"bdMl,^nt;7/R$d\Fs*8"!$aE<-6TZ!`sj&L:]#d(!42g>m?,&?P[J3cqX+0Sfk-;PjfU
%o*r`:1brjX$SKH8>Y>pfJo/Och!.FA$FWZl*FXu8:BI96V@>Bt7?LEj3MC"/)-@uClO=EdL4'<WM24_<IH:.moea6+_sdC4jrEtd
%QkfdQ)Z-X9r'R[OiTU_m?mJ78>][qK&AA`G+U1rKX+^.(%-CX!0K,^."6)fc!bkU9K'6ZKf(^/Wb5r/@AY+aMn[jl83]5>V9[@-=
%KHWT2hC)T@J?EZo:B5i&\$J2XltEs@/^.3E:KStPo6Opc&D.f]i<dcZ+:(pDjH2,t('k].&2U0`?/?.DU6).%jk6HqfR+IsMS#%o
%QrY\or3=4T(?Gf7Du0J]mE_&6agGtO9J<aKLD3=K]kcgN3Va%oU`SeoZ2U@M3ipEXU!\n+&(3V,3rfL4jr@)),)Tr>Z9Aj9cgA0i
%p?.g]>V1i9mCr5TWZIc#Imq_[ARAi]5^0C3cWKa<c4^57K[`8nmCn!k%5!D/8IMbaQc[(LRXSt8P9$T(H0%-_IhTh[/#nDi-/b@Q
%Y-4?aJ:m=*]h!ZVXNb8gD1AM6Jm$:CIL6)q8D^OfY".7&Ji1CuU$arthp>R!TckT&,9ESfIN@[A64@rLR0mcBqkKJK]fnCm.-FcY
%Yt5oMX0[?S8;$8Vq@cHF^E&2rWTN;A&:t[(^ej*=`]A7VVNsB0l^gET0L<V/Pp4R<%["AYaJEXq+)t*Y,XemE'CgbpEK"YReS,(r
%-E6qt!Gcqr[1ED^]V;Dk&i<QT7$/g(*%ctET&CK@gQ0d7/)A-r$rdOTqtCG9d(kB4j48M5\PHb#[A9nhis8CR4/H'?:l1a:qMU-b
%W<R*P0XguLCSs7U)Ao?3&76_a">E*s1,2_E5WI-f<#>ADn"HP#,YiL>s#hh?.,[\UAdVt^8L*d_F%t*b&n?\874-EKLSC#(_j.N+
%ag_A9[%WNi23$jo+>Q9mB@;t0.o+05eU&^N<LsV\p6I8G62`GOI4B_=Ff/\#[T^U33[,e2N\i$35K)Q\q/mB#V,rH7ENRj^4b\mI
%mq'&Lq<qX>ZP.Ha!cPg)1s\m(i9*e')jY%CXiL"CcV7OiN6;0?-/(OIn_]u:qU#/pPXZu$R1X<D6::m_.OkkOSGr6C0SOQQZ@NX+
%%([Oi]*#OSZYo.8GSo*oVq<:tTU&Zr>A'06Yc_\Minhg6hmGS*."'hV%$oGs<qch^9JF!k/MGF(/]ggSoWFKgZo.Gsk6a5=Xii,r
%Wa$,(QA"9`E\;R>*a-E#X>u*<PJo\^'QO=(:DIiMmnn+'D(ErWO?Vbd.YH6dXN#2sE9rWt0\[j@ehu7K<BRd-V"q6MEPgnZ%"?"I
%hEUiWDBm+o;^g].OVK1#Kd'rHgUYSpeKIYQfAZ>IajF!hC:<WU&Yt(so<emp`jT\`,@q,0N(B8PI#W_5E_6+MclBX%D=%r+f1\'h
%;QabMr]:?S8srZ%#"5eYg<'bi$dJ?6hLI^&?-3d>NYqm0ifd9GN(:$o5IX9H#+*mHnOQk%9sa`M3RhdGE]jFm3Vdj-4r,?"o]cu=
%bWaM,p=.e=ErDO7UD?LtDJ=]"i_0^boSf.MA3EC&:BFAk#c(%!#K\`V2`ka<9/+#&2#f]OO0]d#;9Md43=_ddl5Or#(:P=dM;"O-
%0+]fd[=KQ0Dr,Z:--b2VonO*%2:%YU1bQ1uoLGURTa:gmV*5W)lPVI.G:&8tZ0(E].0Z.EUU+Vm4bc#&mC5'g$;W_D6jBUuE?lR*
%OP=$r,&iar\-fW[#uZ/fb^qla&-,haRHJ!^dSgO==N9ocgm)td]tWq,&H@ie<grVD&]:#8%<\Vi$Rq@9!W;;3KEMruF1^bL?-<i6
%Y->>_s,@<.[XLGJRT+KV?kK1Oo=lrZ9oFm/$#e3O"K1l>A(W@cK&(#gYPmG_*[Cm08&A-YTSh'?IT3'd^HSKs/4%@R!$//*j\9*/
%+2o3B!;![@B$q@A;1NXJ28^YDTumCt=/'%F_L?`.i3ZORLC,@f9Pm;K<B*)`P9_L2.%&WCh.^BpQ>eCu.A5\:q%':M-F'LLAJP!q
%K:9<a]lu(_W6;ChCe1GF?sAhNC(UJ8Fc.@tN`R>ujntT1PaF,"P&7*lB$`1/Rb3ZHaY>R8N9f7feJS@k3&++"@*fu.%,'n2'\I9P
%QPiLAV7KQ7!9o*CEnSTN[j;"Ci&@"2S`B`o=Qm3DQ`jVgIB[)dnao#^+X&2Xm;6g>6S"b\F*(U3i<eSRh(7#oR`K?d73Pr?9nGG_
%9bAg>AZB8`*$190QP\gH8:CAI$FDcm:jflc<XIrE`3,mQ5[BJe$LpL..?7;Mg`hjP<i1na(!FB^@A3n3JTKRN3Cp:dHkO:>*O=$s
%GE-p:JCLr/Bfl,_B')+3ifP6p!XRi<9<t<e1.-`RFC.P[hnOT:3(KV$76'(E4tTX%)66qMolFI%+o"Jk@ZKEW/ZB6r;MJ,k9Cgp)
%jj,E*05u0+Yfa,*B)1dAV0"@.V_W6Y8mk&':)MMDgf5`:>HcmTRho,(f+"W1"?,@N$Ng:ahGY\J6rK"d7DVHu9),!@n3!D:U6mq2
%OTJqUpBHk)qsI[9AUU4*0%nr>ORgP+M!e#[I&n(*]aPg$$6-ah<._Ed^YM<4coc2.-Ql]=SAha.%.%!6[<?3qjTR7hB70K6c4iX%
%J/+-fHH:3_pD^9B8^Rc&Y+U[r-Er5orAC?.9%Gp/N,)WqOV.sGagC`g?F6X>PTI1FU.mLX^d5%+I)"9lmQdUu[c&6N#NUJ@6<<B5
%14\g'`XigO^I"i#Dl.R?W2s,J/R+<d^H1Tp"]%,+*ZaE`j?-QhN]G/&,d<KHg\RqaZmma0<c^j^CB$8,&<noO9ma6aO\b;llR9YI
%CLq[.FrhlSf_qf2T)Lss?hJ8938j.@[Z`9kh8'E^Bdl:VS&c\/W\;7aLT6SP;eH(Zc!?'Um&6Lh=iO.>J8Wgr!Dg8%PfkT`dHi8c
%85o]kFaXt^^5n#o-(Mu'\0H:#QkL-7,&ToLH3O/EhkPRBQ*GjI:X4Me!_osX/&3PQ0ci"dM7GJ`6FXsr&Y+nB/6p`51AuJ<s80QA
%HK_C;Iu9-XL]@JJpnTPM.4_I*j"jbYs4nj1>$&GIfGUb,:kKYNK)d9SXu'[DVc97VOY,86G<7`Tes#QlU2d72p+eX['IqiQ]!lHP
%_:S0o5%gcj+T^:23M<KL_b-2P@G?DVO_5`D<8#!k?,faOEY&1l<La>l<CrVl<#o_gnkuOaQ[j\UQ,;/Q&gLFTE#1RcrfRbnJ^c`>
%1b):9%'2NC!n?&P1$cj9LjueH-0V4<GpHj!W!%V*Pp4*\546H`TI;5jSf-]%?qtL,NqRlWs!"cC8Ta$[JYpir#hCEUTIm'HB``Ac
%,<IKK'&Ul]?Md,qW7EX*:*`Y]Z7+6_<B:>G:n%:l`/B!8=\"pT!5Rj/+T3PboKMO[n1%?t6UI)[RYNB7m/eI^mQOEBa/.AY[a/Te
%E_?c#Q$%;f0WPaI9Ge*/KMOt#<nM2XrhJ1m[!.^JrKjOa;rn1QoZ+"6C+k?6ao)qPb0&CMVm9I*HoQ*''l:+0.>T1j/t^;:5.OX,
%!iS!ckNM9qJobubakMBeQ_.;naL.W$hf6IPZ.SU$S:4]V\dr=AM!]B5H_JaJ)IuRaRmpQe!Cl(];-Q^Z#[j'8QEUeOXt(G-\`;le
%l+Dr&3Z_!1^MWEEC'$_iO)8?7UM66uVQ6p;D+REpZKN2RIn2d6P.lEY<!lB?-FWigp'R?jnNJ"M.ATEhTBbXDd<CRf>toA?HlAW+
%UpcQb*:o57nRC!QWCT6"l?+YW#idNb;<d(?LMLm^Bh-mVeYHb86(s:,?,[',$?WWr^'cj;OegbnRdOAYM['9J7(MaVbZNOIdCeOM
%LUgDb,+^MqX(G88D6#V2$;,^bIsqiV'URul^<YSQ><Jgi1L'd=8kHKJH[1#5,mmak4`-]BCg4*f?j]*oock4:<hN$IbPWL[E8+K5
%VqlF-]A#I!SX_jV?6k4*2$2CQ]<(>NG#B18@-@lVk+fBgRnk,5=4)V:F)NEhauH"ZMsh;/(4BmGXX5=Gf@>1VhK`CC##Xi-/jc9Z
%Ws:5.?"q[_0huGAjP>##mmA&Spf(4k/.+f=kkZt5knWo]$^BBom@`3<8F]Y]W*P>"g@o-$mB(.%Fq:@hn5dRCBa!_>)=1]^=,6)9
%or@*l+I;]a'd+GH70pQ[]jAU[%]BM-0q?7pY-hTZ7@49:erka@L0U1`_O`rsORk$W79)M_@%-[!r>3>.8Q<>%JEaP6P2>&'O!K]%
%o\ZRs$rXG@1.[fshU1[-J4`qUI\N&;TiO#@mO0Du;l7#tdVc/b%`N%=6l@WM61cn2Etj7!nHkn.42n/?lOoPmII%fY]&'?@_k"3k
%.!;9?n'jC9U;Xh#bWeUZD1!B@B;bMJ2ol0%&B<t5ZZW5Rekj&d@K,ZYmPBdpZDfLpo%pV/+q+leOE?MM@ZTe6QUB=M=`ZQ/UkIE1
%*%U^ces"+[`9j2'.i/O571]M7BeF"YVW.'oT*,2\]%6K/_>AZF]tQb#JEOqkWEWGKO6/>@LWag"roL7rc/E8u.^34'OSQ)KSl@jJ
%TA='.6?$JDJGGnPqaek9#>Ig0E^*XE!k%:60p1OjZHub&(a^>X%R2F<%hV$PMPN55h3hiOLMB<sX)=)UKM'Wm[fVL(iWn2[r@Baj
%?p%spRgNY6FMtRU(2*9>=[(lK(m5Z!^N;QGO5/UWnF?05NpL3+<$.6HHf7B#-3aLrLG`OooR46fI&829O2\6+003NmV9c)95RVS9
%e.7O0?-_!6_QKn?s.Mm3Qof$5r#TL<LsrMl"KoTRY"cg&"8,bURQiF)n=_*if>AW##*4HqA?KPc6Xaja1F#AX'LuR%'*7=XU;1C`
%(1oC+!RdMh#UHLkGPSG6=q0%UIY!(C?\UO@[G40R8;E#cK^4r&0Za#g-R$F&4Q1qPd.1#0G`$d[4>nKD?n??$1G)W7Vh8aS2t>Oh
%3*"S!Fa,]8:Z&V@MXIj<)>N[@`V\?GmG"l`cbR]!5p^V@MHZb\9^BAPe!'X&'GWm\`TKG4K('S1-n5pq(k;LM&bu2'<>Qm]\AYXk
%-N(pA@3<N<VUP4cN#\VrNpW]ih<f0lTX4Xk.T$$4R@js#blX_MRj7k["&jgK^,9:)MosV:mpI&t[F]IVj@@:!Hh@"q6D92X/`k:n
%FsP7Te*QV6p\m7+Z.kR*KO>NfK\g83"@jRi*4Dh0OQIkueHI(0-Hh>O;D\6j9,._f:6%Chm7BM=:EnV@IJ^TA&G)6ci>#jAP2hC`
%S057:/_pFdC9A(CMF7=8UJkU:06nQ!;(gjp(]XAbF0F(;;=4Fg24Gm5V&#9qBE:V,U'Z1AJ#u.mVp_WL^/Jer_/bVqDWTJ<Ui"pq
%L7Q\HjM:]sAuDW/Z,<&2-iP,DIYsfL=/8@kM@ECY"BJ5L\5b8l6EmHR=<gAQbDpA,k>g)q5hI;mc,t]'6EnpZLuBDuprf*!Y-UK5
%chE!UAX^@m>1*aPA[`>.^+(qc,\SNpJXech.MqLNU/rJ8`Ki,PD]XV`j>i<gH?J]<$lGKTNjYe0LrBiY.4\c0dfcn#]b[>b$H<6s
%]uictG\YD;=u?ZEg.2B^Ds95;FKQ=-`hf4g>8@R'XO$l-iOj"*s(NfBTr&AGWWd@t5>HM4=\`leM8b"]5NYnb'b"oY/h)d?Su`ZX
%ABbgP-KHFED-#`%adnB.T9.31@<#4PEgS<2AR0mP3C@b_1q'QV17gfJEkNP:e<2&EXm>Ca+p5oc99`A:(aX)`YOY^d\mIbTq;YuU
%0S6a-2P:tVpA2,Y1a:4-j+JQ<$G]kX/7D9h)KC>I+$EIS6-WBWgI4B59(/mo5:HMl*SC'gV$I#%BqG%e(@Y2t-Rc6N*7/P,>_CZ9
%:q^CWPBKZZ"9>E6ShjS/49/S0H2$!'TcD^_gT4#Taq'OsS0j.o1AZ/DE@;,XiHjAZhQgEVgUtl%$imPL6&h!XBNb=]9mEYD,;rF&
%kBI5,S[und1:q]9I0bd#%0uYmj7W)&#tT4UjI5"VH,)?lb_L"^>MjW6IUq>u2I6eLj+_Xe'>$5Vl:]$t]4,$l\uAP[g;k$J"pEA-
%5hrL&4WP7SY[Pp56l8iN[?ArHK-SN6HoWJh/H*$CnXl$Y!DOO6fDXG7,toi^UO?iVRN@`bY"c"9";mfF]!?LQ\J7&IK$FpF8-0RL
%Ufo`M9fB%X@G^V1Nh=gK7.L2!1KGt_5N"D\O;?ZIF-"iYW?7kC'</mSp/<\hc=7E>W=*KO-4to?M`q1RbVa_G[+45Xhpcu<Edp!h
%[UK[Za$<ht95QIcIt\@GCkW0B6]3^`jTUNCqN/cH23rUYeL!G8HjjWkKgNgg"VEatd@FAGn#!@)Dd'quQ62Q>A@n&AYZQ%c;4\h,
%p5]&D2D0V$%LSZlIL:'U6fA/&7.\HX*8EnY>d-9Tc!P#,-r??F&B?XdOsnnXni814@T!:.]6#t<m.GG3>]R%cb3B<ue@QH@l_sgQ
%Eg].g-"GdOp/d5-0BVMqU4b<`^FLGpN]l4]k*n`QTKG)>r1@S0kbU*Lm=CbWT'pEFROGMaP!_&5TW>Z9?bNDD"M>@K5k:GPW<9Q7
%-*9jT`!7N]#D0=NT9@g%e.6a2)I1YaCIsG/rtGMb3=#Y:?DgAap09lp;f$/8SQ72iSu?'TDJ#1;Na\(bTSQXIr6,0`';TiWF</6n
%%,hJR\D8`M==k=N]D1ACYW>CD7+eeW57h:X7pH1l$D^`#/r9#D.1,M!=12PfN$AW8!!spElD9[S#&e=-B14$T>l2go(Wj3cXI\,-
%'ojN-A1Ru=7@"hacVPi9CsXq(C$Cjco^,X7(aXZoN(XR5WBn#M=r9J2cJ'g$3+T<@S;Q!GooW=EW6mn=-\,bHYhN]C`IqpY*j(bi
%o-:Y)QlLlrC(Eu<5SgoKTXgEiDnm?7;d$>6s%6N5D*9R?$AE6.`PPo_Wi:@J@HTCj,b_taVcc505um^2rcKcu.q03?jFl,--iG^H
%A#Mn[#BsXld3dE4(`cY1cAW-5!8G5Jko/Blm;,A:h9`%7?OYL]=BDkpC384OGClRE9GMB$:BG3]C-Gb9M-rXMmrK5b/"rTA\[fd:
%`*HH6cULpg#&(%t(nG>5@CBte:0P%$n<>Lp]lN[+<mBb=C*mQFcE_2J=F%C3maHlq_gFi:GYllII\,?CdtR@/h4Kr&J![`$DR8I=
%[IN:*p,\b[DD&bQar*%T9Xfj9`l.T'T;e8!gAN,hSDb,/p]6ea;48koSSO@s4OKGrO@ppoLW%pGQfh^.S\n02%PqsIK?pX+=.W$Y
%\O_:n0/:C4$X(aQFeu`B=g;Y52KFEr=_aM\DJgiU`l[(R+Z#K-[L`pTKosLkQ"r[6kq`$\9'.-Og*-]NbMW3O97!lCG`fV)UeOY/
%FF0,WC,KjrGF'/,+tg;$-?<bLDHC#qW.iln]c`k.">tWrRi>5c<r<D\dUN`L8.Ycr@G6R/W8W>4K7%==g3lNH_HDEd<i"/qfRGjf
%YRKP;ln>OP7'9<!VqO5O6A*41%23>ko0MF^\-F>B-/CZ@<gct')FpA@2&#:rRu6HpCM_*_p6=7/#IZWVS[-9JnIrqa]=<6K-HX3h
%`@jRX8?krOoZrO4Vr;\;(e?:p0kZQ-4EX#XFjO+@Tl0(Nn4U$YkdD0feW<P1TcK;1dW]GOp&S3[1h,AV)6H1NEhR\5ZFE1H;;#As
%)!A31:;8rAnMYa[.WUa>;CMC:,bYa4A(aV:O(KN!lE8koK.OC[B_II2GPK2f'fUdVO"Q_]nB#PE\iS."oRCY]eBaC_EfEF9KmCV$
%!tKgkD<>Gf!Y0#=9W@aE*E4PX7*I],*"mt%]CJUAN2P--_jCRER19]&PM9L+Ie,gG^SD6YM15)nK>q.F0L-Gq#\3.Un2aN9UOJ!\
%UG6u!g[8k"h/ZUq>G02%Kg.I'[X?;"V>:aKmYK,`K7bM(-+o]aA+s29.1i;2O&f6mIL%b>Bp"!r\2%J\&tWhZ1CWBu8:H/9^ocp0
%[o8ZoKpmYlqK4SlDLW7)C8]uUCE);$-e7-(<jb:QkLY-0l*81gp9>!B='.=*Sjr=PQRkt[:QqmrY<;74;l1XMkqbi=Y<@BBA^%'^
%\,X0Aq'<[8KAK228",SIa6[3p7nG=:iLru&13Q.LTG0#WSi%\r%okM"`*i&/7:Hn=]@BrA:'DMn>KoEb.d?4!*7f:SQQ[d0$'J>"
%)pdU7(_YpIIiRMC[o^'q[O7F']-+q",u9sfD_8N]?8"DHXaGKqU%EK0$Jbg.SE+i,n_-Z:iY&_Qbj@!5#ZdA5GeI/bZYPCJ]taN_
%,'7DPO3"`"p!AQL5'rIAC_Oauh2''\Gn(c1HQlH(./MWW/+$"[Et@d]Of9m3qHe=[l58P`bO_fHHVk0cRTq>/Yh#r>G9?5p&g$T\
%VNK0Q-"#@2TS%CR(NV\S'YoP65$2jSHH0kXM+k(gPJ.a-n/48B"oP_FLbFiVdPS235-[.6p'%@r_9,^*/![J6I+rgFHZWDBHq0X2
%[A/&WcY/Q4%_UPYlUY%ke^(8%,gNj9L$u1>G3L_?"q]]VnZXJU(-r4+2QB;jSRUkn;k=psF.kj=atfJ*L!KOP)*hi.WCj=KM5)Ot
%YI[(qCW7T*)Dmpa0dqOGeCX](7-7jkV'l<B.H-!#_/p$a-%JS*QB,LFQ&;uM):^nIEn70<DLs<lI)uA@GU6]dE\]jG#B]"J]0'_f
%VB+2jnWK\\R^T&M#dH,,S)]iYM2eR'jXeF-B=&]VSqTS_hp-*W;N>54<@3XCT&E))"=*nnoq-q'HMIco\otI*=p.t6=^-?[(80tE
%iEFuo'Sj+%?Yqk7@$n2+pKJnHR;1(t$)_R(a=pb?)")(o--]U^OX7&;Fcul.h55"JZF6D'&aM8IV+U1YDX`fg]r<r#[<1X5LVAsW
%.G\7?U%Lj?[69dqbk#l7T+kK'KMo,-#7.g[YmGa9IJW%FUOpKn]FUI'c)<-$1HZo%8tc60$&_0g*9cq5V_t8?B6XhI'(4>2G+@;1
%Mu(^1QtWTp_cEUjf+Y-9L%raBQ;T*ie=uc+enXS5[H7+]hV9Sqn_(`>*lY)REj+0<a3LuXO663IC<uF6IJi*rNofC<"o6MU0u,\K
%'eh43*$R[Li`%3H:JgA"AN7So^1Q1B.:Q?Jiuc#P7@3]f<46Ab>&-=8Dej1uCPE-$ni3pW<P.cE9@YqbU.hbG^t#eY_k-[lo)S28
%(b<UqM6fJ[ibAhKPdVoj8Su_N:*KY7]1\0X.$Vp4@.$Pe!s0^]&*1XsEK9"Dq[*!cO<fWOo'98*4iSKT:SbFGN1_%Z8o(R>bKFk"
%kgpoFG>8"Hj?=N:8kg>prQ-DeB3rgI<ll=r<&M>]iKY590#`(%e_^uAkF1F6e;l`6?iVM[8CT2$W&e`[6.X`L-6jl\:cU:$@R2eX
%(nk>1J*tY5n]S/"dk)VlBC-h%X$-mME&\`Z$lTIfDSp=u$b5g]0P.i>KYr!:X:FP&JL)kh_6uCoe\cQuk%jE$MVMd_d-7hd%M'+C
%Z@KgZqC'2<^XYP9L&'LVA/q%^^\O]I?g9'nLV&"S\EcgTnXefCJNXbsVoWRSW0Ae;AL_..,dPE"3cr@ZPL>"4]RbAQr$6eLEkl`$
%e,g,hDPpa`oe5]IjM.6MJWo>?:e"nr-LJ[q(uL04ii%-!+h<H!T)"Rcq"E%;mt^O&lUgCn-W^Kpc'k0V<dAP_Ir6'G=h!Ql@u9\B
%Z`6`GZu#%e0QILTqU`@,o(]L"\s`DQock7'Q,MXNf12?#.M`6$1?k*S)uoW%1#tNi1Mr]<hI=<U)+tj<VEa-"\e%MgDI(Rt;F(6T
%mGA-l?V65'_-!lm]#p-'Fg]0!1\:>sC<?Y-IW(,]iqaYOne*7mlu)rlh:;h[Ah>J6rKi)]`071&Dkl<OU?Z2BlaMXjP5I#&6#CsR
%2iU-?o`FKWRp(4RVCHn)F/]\*4hEr.;[!W,8V^B(e`5&5BNf##J8(!u'bcdil!H"t1DY-&>^Ic@.]b>KO,lkAj4ICm"#_>,U^O`p
%JOX(C5hBC%.7">lJ%#IFg#^UunnUKjVAMWfM`]cj5+&in_#*@_!J@Vl:Y@YC7t(eZNb[PN^aONVIKqI5B&#aeO8B0OCb"IlC$$('
%^28-c1fl]NSc)g@LhAI'/\d=@_#0mS5.\^T<7X@!Jb">Q9/L`nNft%U<a>S_<l!YFQ,l#PL[<6MWZKFj]A*O>rPQIXC,H>'G8oU]
%i[U@?@Akb"kb*hmIOH?h),&R_NA$3j#mtkJmb@.AA\QhL;/IqB+3lk9Fr8d+B"(rYh`5M)G`u-l<m=V81]e\ep2qO3O't,%'?7uR
%/'"gL9r]hR)Q)5$KVIq_G<-q"ce?OeB?j\Eip9ts2L/bAJf5+%.`@i3JJApm'&Yt`h]1a-:IJ-/66\m$<kQ-aL/%%+%-mom^cDpt
%W-sZ=Qb<Z=a[X]>=$SP8o2cbE*$OsGKa7>+5(TM&(%7;$(I7oiqg6[g2BRo3eq%]uIT_7qjg7J?r<`QD!^''UJl8Vq*@Lki*o-W2
%NYuIn/?&Hjf-D;K>*Ue?#V;!qWd<b43<9lonbH(B%,[3MARO&R!lP^LDK+R23WA-n5X,`eOm0\q>D<9Zg#!(<c#(S[s+G?@-b)5m
%b=6@SSbnJ;gN>WabI2JEbK";>i\g$U\G*B#q1L?"J7]hg6/icE[SU;&,`T,$e*Z06+h<%'N`B&oU2Y`%SirImG,h_b^f0@g])CBJ
%?P*9T#OOWLIf)G!rPIA6Rih42&.p;D/S30Kc2VLY184Sj2k.PZ2mY7=]^jO;^\H^Dc9j1fPG5W^=[@o1[JpiXP*.:TP(i<.,(<GV
%6bk&F"?_+GA&g\)JM;Ye"q"<9^EfIpi7qbljN"u[NsAGbJqn%Q34kdqAmCH:m!(l.",p@XJfHIrTm!C?d+O^Mp5X"8r-BT1SrM#5
%:E0^Dqdg]ZH-Lr>gT5HI,UIM&FajDD='h[n)4;c*Sk:d5L;f`NAm7WEVS2qJWC/;.eS;m?o=P/iLlhC+FVG(THU_ZMZEna:o\+mi
%n,Bm8S]t.;f1ECji:3:YqP(C&"6LmM6(/occXi\^h2SkS?_(?J0@-G7VA5E*>g.2eX_(ccf72)UbXG,E<>1u01g'bI+aNCh!FX?=
%=54!b_l>dc@P87cb6^5(=Fb"GAkAo/X8<gaG<8HMb!H;CNdu.`%^eIaHgRe><V$?j1^rGWADB>U6rI(>5&PH_o[UA``ZO<Bfp3<6
%H;kkf'Fo0jqMr3-ldV2.\iu*_-N`G)p\a6_R!&KJQbuK4@*1<6The)>?ecsb26M9Y_4.igLrHlM"uc?O5cUW==_#i;Cj5E\>pj/m
%>\^ece:X'pB#ZHhr37c#5qsdl_aQ,g41'5&3DmH"4Z\p-4,(CKdHLXRWTWGHD*(=<](l/t5,]#jqS)hk'/!2qQp?or2m_o.]hi($
%Sg'DkV)YgKktNtdB)`b-OuKC#_#n!O3"`3r-"C1jXY,B0:<cd*"pMmC"Fu(&TT1#j&!f*1>Sa2"$M+UX2ll.n@-mfQ_GsHZ(Kh'D
%9hr;;eU@BD*MdQS0RS(;q$\]@$VE@Q)prh/?sHEP^2A;gIHUgRHI*aK;=RZ#;)A?("2h:O"9Cu;Yc#XX.5kN:"_N4Fn_OHQBj%Z?
%b2O6Efq1Q-E-f%FPOJhD?K=`fDAga*Q416aU2,Z>UUD%:l.SEXd%s;/`\$'mH46DdGsiU%DIi\!-V6C"inN)$1d<jC5]>dc/C#[)
%'lN3V4dfK1G2nqSPrdO)L.RMr\\D,&QXC-46bGl=EKB\$@Is`6-MJFsS;.&Q8JCd,ZTn)o@a-(J(]=!NN4FgrJ/hbID*,:#cFacK
%+%bM[i`$#^HtqC'WgPL2=[uIh#MHbSXP?OX,rtl/Rt-Rcq&+6ff<;YC7aa+aCn):4*T"ND2;6T>mQ`6!@0Xf:%:<l7%UNo!7"?r7
%[@I.m/fN(0Uo=$DG3<a(I^@:%Dmi@F3>Q=@>H0E)MD2!*6]$1YHc&Q^r_NDO)K-\#_Ch8f,R.\2BqLJU80Zb_%o]dVTGaBJK5g;H
%BF;LB=*'Og`blY&gPd-6^Vto+0:'4)H6Z_WQj+j4&3Bd4/J.\9C4_Q7ZGQG<"E"MYFs5Z+9<2Y6g-c+tKOXdjgA+-g>;AO@ckO7k
%[(E[sDeZC1NL6aQ"*a81BJ$6@ll#+<5)l\e;TqV#nRBjR0cp<g''%AO26B=)">tI=V4-[rlY^Yh*Kl+C^mH%.a$d$o!;!_rjFPSE
%()4V0$2=5,.+`=2CWK\4'X0:H'VWlYS,]JsT?q1%KgebWFdm>qMqPK7^=;rD*r1q523SS6W`e?\cs1^^:j(X,Y9T=o1p7]TQqMUs
%g$;fS*K5RM?e[7ur1e.fjB=m<s)QHuFqjr4dl$!b-.>4bLJoVn2JnZQY;I([p:nTJnXY!'79F92,\s_$h'b%bKPdS4AO`T1?uH<J
%Xg.6/5M_JO.$knl4^LqV1354JDs$TG78Y[sVpEG\3tg*@c0A*gO50:a^9aF!0OKu^(m/DH,Y?&AF%W56:<Ue%Rq4WM[]M*)K@o`X
%Qa\lFr$E+:50cpi2./+2I=%,&3Ob9kY]]&$%R+?GUt)W!8o89V1+eC">h<q)AK,'a!<RPSL*Bj:IAs`Y>Snc#ph).F.'ZR'c@hnl
%XVXnl_`m1C*Xaa@EZt??NQ*gOGF=/do(fQ4$0G*MXs)MjM:XVhkQZdZH>ld:UHBL_$YGko<>&'uik]m78W2W?NsU/O`H11_4Uohk
%1NUPrRpc\)/URB25&$aSQ(qP(\7LZQQF*2I-H@.SeH?el>jieJkBB<0k"\hio)f5A*?hKr6p-ne6d4\X.rQ@5)QMW@-*GD!Rk8r&
%WO+'e?ZH=*XB%[]3k@&@f3p.Z,Y?RH'.c"bL?2),5)]9%2E_Vp$:DO'%'9`W[nY+W(c#`L8k^(AMT:1[_8qu(XG(8[HI9BR54804
%BtMtQ=7?n,OZ(D63&6@9s7>)_Q"QXq(9K,=k$*Q#V!D1^]Qec5HriB(CoaF_IWq)rDtZQ5o$PSHFp,cChaS<R0*Nh>SZ]:^8<E5"
%]BAdO^!]=@Q.NP:noUcceKLM'+o3q\WC+>/_O0l/[\U(;76!M6'^kp^[k=QE;@95q;JD?a+?&fra)p&a#nY)^p))%8^l2\S,scKB
%9745!U?`_2,T3sA)0THKXG5Q+k70o!(-ieu-cRclMh7BaF4COJ'uG4m<=t''5];WY0M_5Sct5agif/\GPc;OiHIusNV,b5j"IQ@S
%g[3=KoEfFgC;]urKiI+,OHpI4mBa6!j><)d,hT"Z!SLl`4o]uO@a0D*bV.qC1:L*&_eV0V(P.r+K"_f"<<5%@[o4-O%0T%&2+<nW
%!GPR[d@ShaHuNaJO$(<_U6k3/Hlsk/6B+tIUYK`GI^lRp'`6R7?EQMhFldm'\<<n()&R.TbFe6o*l15B+92hJh%7+u6h%R<B-I7g
%T4(F:C]!oZm49B[G0K(Y)5]^c$e^-k8Bg)Z;OMOX=F`=&4Y\3iIk%PYO3.V>D+2VL0G@>*?#fb/pq7Y.?mmAF>7_ddm>tHj(G^1C
%9A#aJ[-l_kg-H0j/Dj4WB6M9E_;HDTRW1+2.0pdg)3PO@*O^m0mpHBoqI1"SeU[SNmB9?:]dU&8",3T8#$@[Fg:1Fr$E?_P[b=^f
%AKB1,SjGN^QG_%Q'LL0_WOSS`C+^i/&lQpFZrF5695gPm\h?rjUX:2SFB\7["^+Y9>4BZNHED'*6CD3'C\V4Ek&2tASNe,5b^FM1
%5bX*77tJrq>]Z6(d@HHj&mG)[ecMj`L'jYtl+/RuYf=HqdlL7P01">+OWr6:k`Z1JZof3SmDDKN//tK7!W_RIGf"gbQ<e&m_RAKT
%)1$eg3$6mREuut7jcm6^K/mL+^k@,$EiAD1Ouurl(/Xf_^-[NF\8BolZH^a"!6GOiZ&4n%2K']R?/PjfhaQfud@-;fXNIdj)cRo7
%?La7@V!</X5K9#17tH-`[onNob2sRg%(pV&qdXC!f-MVt%(![l`ME(P'9uLteZn':qW3LA&/C6qc)PJun<<!%\*0928(pN2I.(CF
%]D^5sGpMY_W8F*@]nKq4*W'9=;Xokr7ZY'B3f3P!#VLtP`jQYnVA:eB<6o20p"cuj@T1KsEC`^8S8o+_0i:rp.oa$m!/A.V_G0r!
%OA]hV70)]>;d6Q!dg*+[Y8jj\J\^Z$D.@tODg"46Lc2-(DJSrbgU-6QU9)!@S=ZN@O;DH\E]%T/5rhg``*+Q:`b.3O`V;PeDLC<k
%HaAc=OF(&Rb3HfA(&I[qRY;R(jUZE'R._U\051bGCB@$Eb,HKd2pG!GR3&m+q3V8?.D@=b8!`8LQ?6N(be\hc&`%0SZR\\an:fCH
%NV[6-T?PA*b#eI1H@)98Bt9.b3*lZf]!tQil770gO[H[]T/W2!a+gsR(4[cXK+!B6"%KP&T-,W!g$ccCcD<p\ETudFOWK2aM8_N%
%mgcSV%u=9B.po131"R=[;?c=iAB=P4D'O(#ki',N@2DLQhp9E5=jsO^^9X9ShBTsm!j#JKDMR3<R]R@YC!>4o>lh,:KH60=qP&/V
%*_(FL0\`nG%lr=V=L-#KF%Z80e\uDp>B/+'DM1)PpFFPP&og.Y9*fi9IRol<W%@W,0CqE7rGR)h<$^j&+[jul$[$5Db!U4g+BiK3
%bG<Fp`g?,LSa!oT/ZIK>b&!Ymn<R5bP<)nUjhmHAQ+o):O-7g\DHlteFZ*\dQU.6Cmq&Y6]m5"cZc*O`-!!<n\SbSPd_R5!ED5[Z
%4%;6\XZ@IB4-u4!:HL02[4\RsZmeiT["8rHCp'a(D<`4;Xh431TJ/U49%b=g6gj6eB.agXFp^XP?7]KXd`!1AK&,&#N`+VZ*Tp"G
%1=N5ZL8DW#b\]H86[$u#dVYOn)`DUMb#C1VZrLp6VO_Z(l^''\2&5?-];1&c;rj\E(6i=@G#Q3L::FVSA4[;O:t5N2GHq?S7mLK5
%LEl*E/p?JPQr#e9OP:el.c;hLZtJ4j'GWhcrK>J]J5K<0d#)'DrQ9=PX/EqhWMO=tk8?Gh"Z.*4;,Y,4Irr(WTZ@cSbQh]=M<7S!
%d'Kin7%j7_,s[?!Gjfjg=C9Q#2)9G@MifJ)2VS@06<bH^=D&n),`9ajd+[>'VSUD`/q]]jSSjpDmWZ:--n1HCIAQ#=C#k+5MmS)>
%J9Rq0qd@G+@pr8U'r*X(NRrN7"iUEsBARI9FtP&V!)NVjRO-Jhk\eci^(8qO-^>2:[J'u]+Kfe4NL!1)^&S\gfSiN+rZ:9+\?,qZ
%HWi+X5a;U^Jkq1Q+OL>BR#&E]4)>T@1TOsY\9k!=RifHc6aFd8`!Du%Rtp3bmJNU2i@c=#0`2R]R+8XA;+QW.Q-Kq]")3Vd*SneW
%@=?\X?-fhd@G.=Poinp*#ar]=ZDdie72p>DO]X;G"L:.h>p&r#F-i3'-DWS4q1Kd3.+j)]p/I^aA;mRbg2Rs,5oQJZoq>Zhgjmmj
%)MPFFDB!JOWt1rOSg2jo!#RGcXa"go65+pP[[NJ7(R#\a^%Kqh+\;9DRjEl>6_pJGk/BEHa)>='WOJ2f@9q^$_QM?I?,QQ-<?59-
%b"\rBL!J(40<NirK74]@?+QRFI/CT[Z4/5.r^5PsAs0q;*IjSh$!n'FK5M'L-DMaf'd:&\Gq/Q<R@h5t5Grp!Tk6@Ap+].0V7m,h
%3Y9)&f08amToe*:m9pR-3R0Y^@jA5/[?gRC_%WHOgfEZaguuHbRJ;'MI2b:c^tCii["c.X,18PiiDhGHX(uFS&V(tSYnji\VGH2c
%Uoh"u(-7U^o6]p$RBG_$"4Fj$bT8WVc/V:_GF.]NP2T0]RYtB1>FSEbCV2RnA8&!TVs2c.Lotm8aXNB[Brnt`7r:GnjWb"a]mX]l
%9J2+p[BP>n2"`4.oUl-7Dem;C#Otm^i!Vq>[>+*W+ReI+<E'go.+1;P]tF?LQ.9%=9@7U&psLbH*==Vd^>\fc.tUB1M6:5F$>.A?
%c>`WUq[G+X0c]_c9,hSSZRc$?r[GU1:P"t"B$$HY?u_Z:)#Bgh:&/h-gMpN&5EKYj3onpS3K._#0"sBEi\*IhUJD3hjjVP[Zj3X8
%o1/D%gA7^!GI-PWGM=hK?WV^1`h.GchbAf.Y\!O(0]n&/$Z^a<ks0Q/o^=N-o>.,Dm9$`'!(`/S.+6D:PiGIrIRe8n0(r=._=o)r
%+<50fCm7F$/OPS_+s.Q$p2%6<g@hALVC5ChX@P:Ul0HWP_G9+llKKFqF:C%o[[b_$Rt1')=:^T,YWg,WYG86:4e,f&`p=fJF;GCh
%5\tqaq:G'Uo"X3^:),La3tN4)Y+i8>?cmXP8Oeg7mV:@<>^OEo[XFr7&&3pnf*D=!`j2D?[PCk01*ZV'2Z$"M\9jE/"o58iCeA)7
%/D?iTia<uBOpl\X81[?S"3@T2s.U"PoQ/TKRV@bW<B7r-g#j;em".7l(MPT_Q6fd64@3dMJBHsVkY]:?(1J4A).Y(EiEE/"A4i9o
%dQ`*WlhA6:0NA1K>UCbArZAo@&Z#Oh!NGgG%lgI[HZrXZEL._ga4_Ue4r]FlPu]K4;1t4fU^6O7"@"oanb0^\b!S]s5dRgBYUt8V
%EPOWAU<?uOJ*rUq,@Dd\)%sLj25bi2jjf*>#mJFBD%@C*jVSSO<KF!6;GEYQ?"FDNgic#uXlG\;!N_[&I>ZZ%?gR)+b-TQX2g=`I
%Ei#_HPT!-)qX/,NbNU8oj`3Sc,hm9AE4)RG]I2pE,m7AId[,#"1TY)8><u2P(4"0\GMl=b'NB0I5U6I\I<d$Y?Q2SN/mhDE/+.LS
%^TM$c[l*'0*?HPuG[9^WfsCP'W\AUZQtZN=s30)uhl$"6i"PXePE,l=787a`[/AlXd6$QPSMW]NOc/RhOe@kCMZ/;pD^UN6Ma$0F
%9^1n?'BY5YSaNRRT@%1"1k#?r!*WfJ_;VJ!Ld:9lXt\q_VQZIJ_Vu9YeYbf/_:6LcC6D4a\O*B7P[.gKB14G'B6#4u"D2'hA,@QR
%@EohQO*(oFWr$Wl;!Dbpj\(%3R1'D-"-k$5bb*_jp%rE5S-l0lHga#rN%FWVZP`/2Q)#sPWi9eoV#6&H=/9m!8ea]H_JhhP8uJ#a
%25\hS!Jh+_G`(OK4!UmrML,b9Qa""G%><cN2cge:!Td@fAbE1[&Z&b<='I?ZetWkrf#=2JY#`^pQJ,.59X-$+3'QIqcLrSf7Kd/T
%m-Bj^!g>(762E-'rfMe.T$*l6`m,d[Dr(Ecqe3W^_W&rURWn3:ZjjS^)_+1eJJ_XhO+Nom!30[mD&t%+f(=#WDH]E%:?`RgkVZ'5
%4`V1ULa]4Aq<k%d<*iZZdcVR6#^l?g72LaH4\S-fQnnhE9D/'sM3L93TN%Q@7pR1K@rilfO(./Y-E,9PLJY2\CQhVi`0Iq1^HM>a
%COa'YV@DYYWiBC8.$;E$lVbhMqVrgMBfR$JLNJDu"0nL%:os.mag6MIEiIWs\np$7'c^7H+%*=;QuV_WdOs:rX=^8*=u.1?f^Dp[
%gG>_$j7\OQ<L56sH]1fWBKafA7E.[q&?.j6SH)D.)[pVNAHt>-<Hd?:+"Q"98X(n6=_E*=Oa]LRS^PrmH]Bq6j&"Ual/Bs+s8%.#
%hDeO,RQ7pnUK3Eh%MRC7Y/:AmC26O;c.'$Zo1-IWpG;9V!6Cr<b#XDb;$q4Uk%J&"F1,pT=pco]I3I9YL]qE/!4&n)-p0@]2F^-l
%m<n>u+eAD(-*$oLZJ>cpRA-JAcWk(aI`R:u<5EH]*jNk4Dok1"N"+caeBggs4T@5SPT!t(*^QuIbEA<'p,-^SZSYL]lf[)/fu9Q;
%!b\g<8pUUI0G]rA-p]]_,>4QqDQ^G_hn&fiVC@_@%^06aj$GtnVet!1B\cKs73moK,>0gP,)I8WX-TTmpE&d0rTZX![OmCqj>/fX
%)Y*"'-//@i?<IPtbgsne?0WDuZ*A?g?'Wnq<8$68ZphJC\uFF?lIKj2"`<C8>803qjfSR6PAcbp3NSme;'/R,^GL]_qmV^e3t%/r
%Emi1(?JHNL[f%r1H1EOg<;6HLg/.WU_`#&JBo6!V`.6SR$^0NBqpWbRBk*VSD+N3JouHGJR>;\n.b+K]nl[o@ZaM6^QO3:=NC'hX
%*BrcL`fA[33Ek.n$qEs7<oGV>IsW?&G7YN%U&9e-6bV&e^\PQerE,@@bHKpDbJIgq28"F#`p^2-c`6^3qdS`"&>--'?O(?2cM5aa
%O,G.MZkTsC?6Dap8LghGe0(FDrG@BJZ#<Vt8tgk$&&0O=8;Op&&;^7)@080'8#[DtbdWqbNdJ^29ehGX@5bNNJ,n8R^([1b@=BD"
%]oEf//V)jf5Z1-AipB/KmrZsNX9<O^.[$Q^2]&oRe7@.V8PIb%Z+%hqIqNr,Gcg=s_a4`G1;EJTf<8]Ro+4=6,jB%lOoFA`nU"$k
%XT5"YjN!uiV3smIZsb]d9(jOpQ03PSVE*`P_W"TQ.sYa5cE-aXePAbg36B0fFERrXS.7Xs,7G!"G;lWq7e`]eG(8=)4V`uBXGZ_^
%XqR\@Cjg9!]L.7ZB2ih\h*U.bb'bB)$sEp:-%23l:oBCd%<BJ3bu+_9MpF:\NBMY;'Mjb=@:9+JYCHL7(iPe'm%\qCV>3`8lYVZT
%a>hqkoM#]9.(Ht%mjg]rj9)SEU[YCq"1nbJ=>5ALAqDEf)I,XkOfmYh@Q..82c,cA*g3h,/Lp*0JhN;o)Q';B%Y*a?^T;ZgLs'<U
%&R-.7GGn9lC-i5U*]iNbLq0>WL*TaA46g#MUfpSE@QH?1rF:b)6j2GtDA(;cKZYU0)4P=+s/3oPINO@f;)pEEI+/P#Z[]V9:G)V-
%$Kk[',frJ/\cPq%$7U*$EqAH^&'n&>EZfgqjOOOSO%>jA%>6@W>Yee[<o2k'/V5\in@TZLPdi"'\UgoU:AdeC&s5SllAtbr]B=7c
%r.=PUW<'A5.@T8s.*KO6FfCnFO>a'H%ZsML\K=]`r#n]:kjU#U10U$HcT%Ig!P^LfL!>WF6=+a18BR&q`XHQ)K)Z)f/@,g^VKELV
%BMkN+s7??l5GRrFqd@,kOh/\*>r$p3:Y&'3K'6--I&%^XIg\U.+\*!MP=I+/&;GFd(DQDM5f"UE>-(hC\JrujiS"j@.=d%d"K4]0
%ODW[lZ[Tf1W?F8pWt#K_;G+^o>I!O3IAr=J&$YoNT/8="TD4f%FGFpiKG*7<g9QJ&-rBj(>UT4,>B:[.7G#6cEX(GiDHX*<NEe>^
%R%E=PW=!@E\<cM"p7H7&qL(2,PlWr'%'uY5Md?3%pXN9*KJ!sIZ;$76;3bg=$eGkTioqgNP.Bg:[W:%&(gIA*-t5e#nPXNQoT7%O
%NJ6chf/`tqmH10A)<c;X\:E@9\b8`YP!?t4PiNUZ'[EoX:sXm2%QOTB3ImD3]cNaXLI"(]OkJLCHEKt%H#1fjb;(7>G$A]T9sGSo
%3]5S!l;A=s&[/$n7KgS`a4sO0o$<p-qL(Ua<#l4nXd;2dMh\+=a:b2ETZFD`M[,9rVQmsoI]7%@3"69eE""[Dj\Z9DhfpD5_-VM>
%6&A1Bop20fbkpU\L2(g?W.liJ//]Ci\#;f-Xk%R)'*da4Zh?/jP5I&CW=IR+eBhUS/6`rd=mXM$eMTECjS?u1Gg?9"bJ&GmaRns=
%>*NQ>QA!YYjjnAu*PE);E:/`?=_nM3-6oOe[f4]-J2']'lEXeQFQo'(U'0`9[YXpWce5Xa)oVGe2&@-q5W>U^&e3Xdk)S=U4dWWg
%Wr(_,OdIXrULT27;O.=S6fKtQ]_^6`*Km"g#X4qcOC`jP39k04?j/)LERCShbY[%/Pn,bb&pLohTg'/9NI(<(h.@fC-sK-Dk^6Bj
%Ib]nrG$GHK6K"2N?@C7oo\F9hh`NmYN$!ZtVaXeE]g4+d,_5RK1AAh9J,S4Es8)ng1d_h7H6>-RlIIMH7ApUmbc%joK4O8%A(DBg
%3-#U_2$jh&=m(GlW1L@WRH&srL`Sq/;*[0r64(YE%[>Zm0RL7E9`tl.5udUm5\J4M#]K)r11?m:P?6;+YRlb.Ok+q`"sf4CIGdgg
%1_Zr98G0;FRa<CJ8]!*)e+^KlC:b^X1=Y]O[&\t!:^EO)p(5\u2PV/ie*UMWO2`+dUhQmGU^(n3d*hDlH:j3%Dg###A[Ok3&gY[j
%7d<0>%lJSpUmJdq'KI-pE7EH5aLS#T1,M!WclmN\,R1L/a.T0$N%JWJo3E&$<1++2\?S6GXD:jh@8D^aXAig$lkEJI"R]:mB^XQ!
%Ft+e?X`>H<%ACHP_omhkP//4;Z;8%Ms!R<E<L8hLV+91D)_V%Ya++%O*Z6CP?mLA]Li893<3ZNMCC=UREuCq]cebZ[)@RQc[GL2b
%B35%ilK;68NdL^telP0,Z$(Ua'!sjY+epE1\q0h!75;fJ-L?t_[PR3(-.)kTa8"+-YXQiA5dT0tSfC5&/U]#bB@;!X,3f<A+g/"t
%oK*1GqkN2cIdbT6njpU>WodE'iLdc`FA:-;RZ2R4#nEuXnr_dF`KOj<VQ2[>LqZ=m5<5Q,p2G8dT-#Nc\o#+V.H^"=?@Vffep?+p
%DaXJ;Kp_)MCe9[o4l+'9e`UFRDcSZ!cTEA(ps"SEgq"@5B[,Gp:hge`OrRjWXo?pj*V]5RJ#]FHDnf?X&`B$!^<g]g\XV(1(&WO7
%hX1&'^(;=`GpQl[s8@lUrp_X*g&L_prZCm<s2Y02YQ+(ka/^*&jE/pd@?bl%DH)_uVYN3I;lBf[5(q@Y3.>N=PiO-rTrE<.*9a]p
%m)!aB>5lS0eF`=f9.XO(d)S2M7@&R*hef5,D991*lCaNo+[9Al]dV:Gn)5&"GPc-@_u;jiRD@2CIB371Qk*eG&V";CrSY9k'E5>m
%^4,OqpYDP@(SK]3R]H/f5.+VmZ99,A;=qr<DXWMWj%KW[S$f?;49\8:4H]lO.qq=:<K$0bB-`Ijj[pjA30s-:GmJ[9g>TN6>BmOK
%+M9:g*M2)o%-@ktU"dVmo'ohN2P?(I?WYA\Tl/UHKMnOHg-AIa[/JEi?b^brHC=*sEJ3kqV)h\&LqmC_OXRcqbu@hXP-9am\?+5u
%)X=ZFODqH>'CR56Pt)PN\I1WViALa2=\s>]Igk1E]tb8>f@I*H#0PG"rJ^TNlF'd5?JQ*JFoeg%7nhNQg;[RIZBphjQO)U[JcfRp
%nB`/DOT@dWiH@?'#'9arEF6KTkNch]%dc__i#nGQXiPL<g61hjHB/l*I&[@&s,3ZVqC?/[PpJ)Z@4t?H[a((XDq8ghL8`i(P8:Zo
%2It@.PR>aaC@1^9Ni<GqQubDdXqtg(j)PZAXsE_ac&OYWV#^O?n#p)Fj2Ye>AO0&[aR.i%Bh63@)p3NH@>(r';WfueF.+M0ph-tC
%_NfRtBi284XI*u71&i/ppW_EgD1miU@`OUuCmAfaQe*+f_@`4HP>,5m0_iqV+^k,sqs7h%O5lS)fX;OhO7i#TI\-E@3$P8"!k,DM
%h6Bm^67_ueCL=i#k)1=&"sAj8M8"IeW+)o.Ek4>04[!!%2F7]up-E+2-':7US_VJ\.RC^(mLRqH#cq@A]D2a;PC"DCL]*Sm/&J9F
%9F*tiRV`sTMJ_DYdhPHb<JQF3`V!\_T,R_#dU0c`74'7hW3':3[bTq1.&S:]<b,UL[8V:9&2C<FH-@<h)gXEfo45`%IUUL\Z*jgc
%cZC79=h>/'/BO647Y">bU6D``=,TDn(u7gFUCN1rPn?1Jd1a1/qe$,!Z"10K^j*'^nP\Ju1o.7U<ucMX"dm^,,emg[6;5":&R%T$
%r6fLj^N\ka3<@jBr)g&i7P;5ELUf`lDE)Q5G)GNS_9S]t1VZbVdQc$XVg!bnVSj3XdOOr,/VCUHPJ/0\7Zjg!E_[>=A_k$m]*Yb^
%SSd^WL1DP\qig!AVg!hl>-)bIMCDr)YP<qg]aedT2rDjRb=+H'jp%7#6P:\1Ct$C][D0kJR(R@<VSf;kLuMWqC,u)Tbi#lPP9F/h
%r-\00EQb8:<0j\?6rgKPDGqS^e3PP*$m[L/4)TNi$@FqB&$Ap4$Rp]B?Fpt-*YOp]o+Yo._[7OJ3b2Q2\%tC$4he:qB]ot@qY`Ec
%^4)\G5<e48Kf_XgDjs?!SFII7J3L'$9BBsV2Dms89j[*q-YJ,[OIT7Vd'(icN'eJ.A416^#*cGIS#)Y$pXDQ"]SE3HifNH7Vj(o#
%U,3h(cq@@t;s,UQMfPg/"1Z0ii5binmDZhhmuQ(!^l0m_3o>jB3XVR)F1>&8r\Q<3@Y]+MQ.S!jfjAQkq;pAOe>qS&*tu(3HNJN'
%<VLQ9?BZFo:M^k7)05Z@da2FW=rNP9a<^VRWAQecW=cOBW22'VM.(lN3l"fS9Nj@SGkJ7I4!Zu.o'8%pOsY25W[c.>A45.ZF^>kU
%j#2U)*3HA+b(W77o<<i]aAM95e%&oiL(X%%ju+^;<>c)IU'Q_a0eZ\k=I.j7q`&*,oEOL8.>`n\^mCXuZ0+U5eMCQiMjGrsR][+K
%TQ='sA)-Ef#5EVO#kDjNGE(@L^%V,GB>+\/j_VIt:(Lb?$_kQUOlr)U_BGM`:=r:O+]6XkkMXmC0c\5ZI;r%WXW%?!j"NRKrn#t^
%]ZP<9/lF4X1F]`P+1IGCPoL0Ugh!fU!+1@05`n=E@%8[kna<]J"JF)X[JD:g,Ersmpdg&\22@MI"!M\#E]ga-a.GNhom;J.RKcJD
%e5b9`rpe/A\PA;>8r+"2pWW,\VCbFZ*AGEpZrXl>7D`N3\YnU6gq?Vhg%<mmmBttZgj8g3Hmj?d^,a_h4Rs%`'t?(.[5%MT((-?C
%/'%c?a[o>0Vl6;/W`$LGc#"b/@g(*?3E`';@dd_h,G*l"PK1?#-RS!UlF*m'47gEQKQDosH_%l>57RKIJIBP_#$dg:;TQ2t"F>%G
%@Q2!<!mI5"RDH5-<"D(I:\I^#*hYDeNVO#YT*YrGjXB/EV+P:9pEI4<ABO^6_qB=uGhkif2lKQ1_9OkE$Ul*,'DW]F%Ye'"!RK)X
%^iIq\5Z1o?/dGmFAFg9A5C[k3fC/\69)BGim2Hb"F_)X%6HV!T\feUV:`I$m>"oaW7^/8hmIm4k5uM:k#W?cC-$hGGC"(ULe>S$n
%a0'SlBt`8I!_8hn_s;.q$sJ>Rmc_1'^bWsX7anKurO!Hrl*d?-W^cpSO#R+8[6Itf+gdfkP8H)[)9dGu3G?9QJ6=jh'd8Gh+G_eR
%TBXYaY'koQ_:gQ#[2/Nu*B`M29[i9$kI0lL^72%M].kPLPA\n:Y0K_k@4U?DWqlL(`ubeDkIHZ&DbNG+0Z-ah_HIeQ^3i>H4`##n
%p\:!)<*sO!30kEk95:b^G21^<rV;$LW#dh^F*?4/7^c6!GV"$I(NZn'"qYI3bD9FIH/6$W<<J.W1Y]@\PRT@Fl7A%\Pff`=:G(>3
%6G7#V<LY9lYOYLtrtQES".".ILbPZSNjc$11e6bI2*m,XXrEMK':/b8a[#G<:S'b11MHL@!,D(`[eW!!\bN#Y^4,Or(H*D0cQsTp
%]fSJM`5qQT8+W#K!^_a_;UI`phn2V+3W'*Q@EhUp+-LG-m\dfLGr(#>\tZic];G\qaaO:OG4$`8<4]r^FeZ%MCV43Mk]j'ENfcY/
%?eQLi!rKuXm\%qYqWkULs8'DrrcJ4u*l/=oo06QILNG%#1g8?/X.,EK]<[a`cI4Ao=eC..#O:nadBh![)Jpt:+>At`;f@9YZ0asU
%+1p=T'L2tK)uhbM@Osi1,#7^c?/+Q/InpbMMpM3hB6s&"iI_.5n)=#9$=hASQ_mBDOirQR8\PEoYdN4m^\-=4n"':$90dW`7gk;T
%*"g'c0/>4las^$*X\R&k0'2uHV5Ou_rXKLWVBf+q3mgZ>k^^tn[o&0E*2$NRON4Wtm0K#pLPO4G'#-7o#HDZCMsQZ:a?7W9->JX\
%)>W@B0o$a"n`7),g&pnO'_NobI)`[31Or/nFR'N0aN=N*THnIUm'j1U]CU/eO`dCi(:<GpAlAkN1?Bg\0Z9@qB3>+k;fn)U?])cI
%<EopXod9B[q]AE"&f?(VSEqPrd&Ua2BQS)J(VWL.Yb@:2OuXMb#e]M[ig1al6ej#lWYosY8,3[#G;sD[9*smm\,Q6;1EJdr3505m
%[rIQEWK\/Phma()!FQ:0Ai<WV+S`7`S=/Hdmgo?63E8f^-9uX.h$Oq816qAlK^KO8k('Ut<Jm0%DS#5/`M_@jc%#tCj>%ub_mf*T
%9n^*Bge!VClt.J9H&`uFFBepCVZ^QsN32gV&mb4H@MS>bTi%S\a)=T(%RWj19U#__%Jgb`%Wl>`+!Eca'*gP[rRpLD^CS<p\@?`l
%7.E-'&Pu>Jbg8j;7B>/K*LYbmil!H@7oAVL*Ao*ea8!Z??20>PBRkpn9=Ro!oWBC4Zu--;IQR?al7jZhTB5G)e7"'W0lI\[O8;&X
%4FioFRq>usX4/66cc;8d)PW,nq@J(b?)TYh^.pJ_^UQr`A&C&(4M"H6QJ?iK%Koarl8cY!b8>ji^#f1b>H`PT4r?LDS9+#haT0U?
%@A\l>LY-'!C+PQ_=?t]ieM^Y,fZX'3C-L1mhlDo3d:A"uFQNC>:O$@(=g<QVGs8^,T%#?>.^G6k]JE8`IZ#4Od%o#Kp4P#,<F4.e
%gnPJjp@8cp$VbL-M"N?FS5$R-4%o5\C!)"%1\PTGqe*\*p.glpXIUlK_Gs#?7+2PHlJK;Sp%r.0@DYnoC*NkW52;&GG=gFhY%ad-
%(18!PLEZ'h-8+mmpdC2XaeYq:T(1;@pO"TF<hllU1=(t/KE&NP)U6Q]QOu4Y=u?"ain94p_6?SI",69"Br_sE]pY-sEmCE<%[uP)
%oDJL)^OGR1InaPs1cnA5Au7@n)J7V``FMA.mSa6O#UiGh9s81#,`+XEMP>09o8tgVc-ELq5Gqf5k&*L,%iQNr>?.N_4+^`nPUR<P
%+LqaacYG]de!u\0M<fQ1@RXPENidMYB2/VCZ<qPAN20Yl?i<*fotp3?C-kjX7B@^cURa93qU]XKp[rlgr`nB8onVE$"'m,f+DXg5
%H=nX1'\'PfW$MV9.RV9*5LL94Wdg-E'Ctnr+'DGb)_HLe&$dCaJH7Vml6*Ju6Bkqrlk>r*AmWX:UC:FJ>C6NtZY3o(1?>>@AN=*g
%2KdX3e?'h/E5)AQ:eQ7\I)YDQ]V]jX*Td+Fr.>Qt\kg9G[3?+N`"6j*+q$M/np>])G?i?->Ok_6f.].A=4:%t>)9OeJK--[Zp.(I
%lh>sXTbaXgr'm?bNG/?S-Q,sks7UTN0rc(Qn4L8R&I4LhZrh,d-'U%IcDDa<aYt^j"'`+S8csrZ_dpUT%M"d"Kqi6@RBUQ&>Y=%'
%[co20i_9`0"?"PkB3N#t!SGIB#!L1I#,A5r.&;h!iLA@Bdah8:P-83"]#$s0oH\rAW:,D2S*qnefiUDXlDu<72:\F@AY#Ecs699]
%hhU5^,&G@mp!@F%-\mmhrh5=l<4M>Jj:GucFAh?YL'><TB&*OCU5Q%&n!@Rl%V\2r\\Ll&4OG=Ua$h'g12D?[4@bZ;1cK"UYZdHO
%"Q:B(R^fN3WK4-kf]L/s",Kue+,Cl7SE[JbB:ngE+;At*:E$BmY6Jh,/5F(tMB&=Rc=H=ID5kR6*jd]H3--h-:8D/KcC$NrZN=hg
%Vp7O'rTi(_GSpm^rgTl.X$tqfko90I/d;0?Yii/u.Zea'BKPe;'2Mj9(+h#8?3Z),j$;@:V+h27<,/@[<>@it-FE0P!K9ed_Jd<P
%/F8K^HZ#`6/)+g5J4X_ms,tm)huuIJ3T!_^@TJo*a\Mg1925t\0<MGK2$CKXfl/5"OcH27q1f.(,U%2RWZJaY/[^/0;>X_8p&!A0
%_smi/?MBY1#9ZB1,CG$Z>$JU=K3%_O51=]F0Yo&<b'<thS%\s(I4Jr`o><='Ebm\&eI/GnO,2Es>*<i$%8n5Rg#Qci+[p`+,HHYp
%9IC$Jal`X<XZ[sR9/gZtikgs?`jQZpGD#a?/&W*CjE>_)ZCiJAdU2Mu\:=J.B4&DtjU[UPpQj2j8Xt;.Spe\M!a.U1eH"=3S:GBd
%g*^N(9:#..JRJWAFdt-iiu5m^lb0k+4@f5,'HGp/F?AFY1$##:ZZl_mEgB@j(FH3(-$/<=WF!R^VBffJJd;S0\Pm0,=$,Nji.`n6
%c?!7+P.7#bfi%MD,[-T:<_BuZrSRSIokSJ0&1<XG0th<L/r?'527(=MW\H*]`cags?)&^Q[GnL?,</&C_<-]*0rPF:"$Q`;Z[DMq
%>fMhh+NLI_jjkqM1G!Odb7[`&#>\Zj,t@>$`@I$,[u4=QJ[hedA9oq$k\YhJp>TGopW&?Vq/g5M#&>RO+hI;;!M<DJj^5d?%-Ofa
%+j1Y@O0uTtB()?I?Pe)/[eFt/6Q*-j94+!`JY4hXB@"c!NXQs\1NQA4OT,oh?aneDi?n]-3*@*8,&oer5iO^#TM$.5#]WgNfuGgA
%oIf;)OcQ\+LBG"EYFCG`'AmY#/>8!ej.61]gV/.*c2VW<>3([X?Nd[A%Autnd)F,&r'fs4R,Se\7W0$Ebhr@P*SOLmKi*[6F#<QP
%2HPcbb5,%$[CI&UW8h3p.]0p<C\qKIQM`c,;8OAC\lq9=J<7i2L;'\D\*j;9^pYoNOJ!rN:7>9:,DrY@3oiT!Yl%VL#k^_5O*Mmg
%Lj0Ch`>Vpda;bp>-l"IP0YZ:oA__(rd<0&2EDZZ&J+VLIn(me)'mS8DoJ/YKJ'pH<191IP;:Ck("DB"fOJ]B9isC4*;\F5%S"%GS
%\uk#(B)*J)\o#e_o&$nY4Z%CY,'[?02aUBs;dJr=OI7uiMs,aG:QZjO/tA/+YeWT;)&"`e'hF4pV_H%6M[jdr<V9NtM?W0@jlo9`
%ZgL+OXh%';5D(d@-X,aK1jjW^k8":^b+A3#Q=D>qIT"4"Q>.)YPVp3S>cKB]<L`R*B%iC8;X`IKX[tIpam9ul=RarFs(B!ZI\-hJ
%;MjU2W-ocic[&sX=@,FG3:?;B2$4$I`0a3sdtg*KX&NuO.9S3;4.71E,N8Eo6>)CRBNm>DRg=BNeGs`1-5`>boG"1m<TR'krHr[1
%;&KLN;Bo9m+KVFbc5`EGC6Cj)TD"].3Yl5AE(-1fV<J:Em(<dmA.>(k/tZV+eVLmf46:&AL/<7a%/nlJ?b[,l)^pL^1f)p/7CaPX
%b;dM`[,u)-ja`4:9H[M0eVrV61RGZ(<RY3L;<%3&A9pnBLZUD9RR%K_IkgW[I7#!W3ean\er9?-g=?<'QDQ?+3Ri@gHTN0A586ll
%M2CT;q2rhY"H.J,1ip&H8"M6:dbW'9BPeNN#BFGqjt#j[qsD*,IBbssrsH4\Yf8HheMmL&TABM>qe3W0#P&n[oT!p<XEmuRo4Pc2
%YReXOR6oXD--.Y@@oH2%@8#"'nLSJ-Qs(mE5[hhJq]e\ZJ\\Wbgli;B9VZ05(Q5/*0Fs<lh&[N9WWU&=HUR"s,`)Lj,6h)Q]/W]!
%r^6:PRpBTr0I2bAR,/^(.*hs=Ob_>BN?/#IDdU8'kG+!r]H[UtNmo@-2TPlC>c0!u[>DT!RDSH_>\GRf1QJ(L(Q'f(n-c,eGSKE(
%[Niq=V8bsQS7GYW\$qqhfjQb5+Yb>TWa0WUTlQ-j:WirnLT8?$6[*1s%r8Np>8M^\3?.>#j&aRobO.>4mHZo6'5!_/I=LtGfC'`[
%Y5WqLhuDm>;?-KB,N](BPG-iN,X<LJegdF[-tHX$%Q'E[me8pq8AY5E>c>mroP7NcrnR'VO**.LJRdCfB8\^!lEN*U$l"GSci&Pn
%He[G=c).b1s3ZSKT79ZhP(+(HCO"F5cu@>].oCodch)-_>'u2^E<@lX_h<s=1n6Un4H#,`b>9/o"=ftirbC,Zfp4s$irA7B?gdRR
%eh[&=S&u\Tc0"]+Jb.\PTa$mlS"J&<U'f;mI7(i\gH:ap"TW#`mo0D$]i"AWa%)5.Z3H*e!Se`5@(>XX[8/mJO=!q<E5$j620GkM
%I2bN%/UXM<BX!GidB-?UMZV+/r=JOV4M+@;C.E..4'^-j_\`(V;d/md`_FPfPGS[EMBbjLP$C9GLQ:H4<TTO9Xj7Cc+F=j2cr.t!
%COsb&[hE@_e>bLP>R#`/k<:`[0k+2o,HNl+p_b2C58#(k$(%C21f`bpn2/:hs6pZYT!'@9J(o(d.LRrmlc'>m[e#"W^t8b:2AARZ
%G/!C9A!4XUjMZ%\(s#g_JBfRr#l.8KdIkM]bD?NuUs;@j7NO4FUCWtdcg'PE+eeZ2)qg2$STf>('s;1cCP#NP=M*L(:-]RST==&s
%/,9\CjUMjE>))?$On>nDis;+"jifOl1A_=tDoKN;\H<EsbEqT2YBtYLjnabHpQ;0<;MH=X\>&orNf,VPbV,I!r3^Nckgc[)W`7Nf
%\T$6%V"R2"40#?3WmNCbm$-nVd)uPpo*e_t)RqLSS,M<:\4p>V32%%46oT?a)/56:@j)f6`XE;JO(jU@/U_^)ffCTbQRhd%Mu/jH
%"kZ"<MidEPV7N]nBW)3Dpo;S)#Xi<KAGSPNV@e4OC:5m=.5JuMMeli3.28GPl.sPHY5(;J$"rfccun^Sj!M.r\[A3mU-3s9<SOu<
%Y&(/JA4D+AF1c!)Yo5>A8fKdNOs\q'f&%O^p2%.1_'MNe,c)B.6Q`l'LJZp1c87E/P[uTHq%g]"cd.&nn:C;#c^<Y]kjth-N!_Q]
%*`R(p`SdM?jg7\/;8n6q9^6-GH8dKDpVmQ2bp.&*]lU/&(@5QXQJ-\.VK_`Hmua\Ql13Pno+>E#*&a5>N@q[jSZcgb;/j!J_f4nk
%\ps\8j7%3[@du6dJiIC<YFhA(%7RiUU)@bT[[s"-[64c4frQ/f?HA*0@]fY"<dQS]g;^\<:<+:n_0<B!c:,b!Aj3rMUr;'2(S)\7
%iG@&E\#;=#:`eR1i0gfEW"-dcVY67@3sa]d>NS)3"U+%=LNb<\GS2J=aO=ECER+=8T=87YN]*<#<si@krqQ(8s''L(s7IV&PiRn,
%LN(<>>3-hb/*Q#e?H>M_b3a"*V*9Hu\UAe:r?]h\*@2j`<0h.$b..d0P*_b5DX0Bj!mPAHgXMLB6ea2Y\*@4Rn.5=Hi*WECs.."m
%M2W3o:tF9HCQjGjWcfsg-$RXI-J4MfV@@cES'3rj7jq.Q"C\NP7n.hQgX;N*?qR%Tn/lX-kXlYifn$%fDO1eE2rEX;3\krR4:ga\
%5W=#HS^8k]gEigJT+1/8ncM24h9NbTl)B7>+br4\d)F.lBX2-"?W#76En\_6T1g`6o$b#`5jl["H#^sCA%>IBiPMiHVjKbG@1"7c
%cm6lu33=DRg1I/Ijt#a<rep*b1`@8l=hkd[4b()j,GT9CPD#0^E1/e8g8Bc/43LeN(ZFW9/gJqX-%p\99:NYWa<%ag&uOYqZlMUu
%f2*r]/0@bGZ4I)&7>._b&sNJef'L0LNO:s`)g+GU09b6KiMZ[JYfQI..-'o]X:\4m'n2=S-.VP%IC@p?+c)b\5Qi7a/QRTSA_9Ct
%bj!3Z8Ttf#)W;I)E-BrJa<]*RA)d0;0.GNd'jP!0XZLCuV4Ngt',;A-XDej"Gja%Sr0D"TKgeJ:28_-cVJC[,o>(J1:#G%k^h!5I
%GN?K`bKbI/<s04bDqQtY?(eUbE364QRt;U9g;`iXK1nhNq^!5K4fFY$,%/U2A_U7Q`7_Ss4%S,,j&g:h/a3TI6M++Em8p5\$;7M`
%?U+#<]/%e)-uYf9dH#mrACN,3fMC`<l1XE3krTrm5_k?/0Efp#:&`hil*^&QI5`T<d@rCbM)%R:M:`$=/)*H^<`G-oCm`.^8B[:s
%G^X'c6#CJ-Q&M=2gY&X@7SbMF=N#-Vgs;%k=REAPC_K5$B$<ui7^!QMKA<Wp'+MlbFmhM[^rcMbkdIS'!$X#>[f*_:LCULEcfri.
%RVtt&6%5=!H;od@=0Y(?2Q6=uq@P!M\is?HI6*S84!E'SieU4o9'gQT9p=P>[tu3U>\>@IMZQ-7m=ndhreLT(Seq0:qVDKuFX`Zh
%L3`ck6V<[W"sZ2J!EZ"c7Ilsd/,f&S^P^;$R^T<+43D@P=2pinoFoToDrJF)BfS`7QVab@6bjaC29TWl,nF\(+)_YX&HGe2s4!Oa
%Ya75r2Z5/dM3^G?4n;WB18Ce4(H8Vor`d-c+u!&Y(=I5M0J5j*O2;Wcl)F,CJSO16>laaT.A?D5*N@n%R[/8R^`*,H>1`$Ge0?AB
%AOTJ;HZ`.q3FVt8lN_QPHha3*M2[u<\Y=7(.+hP\14B?mICKUB";-ElIBs1>Gh[,X::%+$aa'1m#YJ]rV-A9#=9Z/0)We-eI83,&
%!lNk*,\[(YOrEV&J*4s',Uo10KEpE\J6+T%d!r5$0`4B&LTZS&fGfjNbGh+)i0H3D?aoe"YM@"[/DA0dj"CLBP)ju_W1I_%CS0Rg
%;BarZ>#;Ip2[HUH[R<B%:*7-`O$$J!<7Zh9>8`E.NG[9/(F:d+kXW5i2'Ugio2%gno:'(<`)_lb%!E`ce*"sjF2W@PZAJr5,;k<+
%r%V?hI\"=dc30eK\tgI?s5u78%qk.EP@5?2!5X^Pe$e(2jh^#7)*=F53pT+69YsY\]JN-/V:U+(.K6Q^jt!HY=gmYm@#DC][[m)o
%Y4W+R`g,]r<72u7G0f`@3#@94&V-2;hYD9D[*g!^ZKbB4oI'fO\NEW8?;o.k\bLPUDEY[[3cu5WSqkXg30!aYo2T;*fXgDY6U5Lr
%80\NJCrGC-Xjus\J[.jqlfI[]N,RZ9[VPF=UBaB`':kb<\30Ri;5l)&"%Q>-nWLM2#;qU3QA7IQ,G?L+4-%Lg.HR<@b#'k19R7r6
%K<%(DoiH2B<JYGJ9SCjZaU5XtjG:ElT!<Wq`B[)N<k1;m)\jc,-cU;Z;KPWoa>Yrm;9a$"YgBSc]>+$NAW[J[V=\YX3mHQmICjt6
%4omUM,ULM%o,-JD`<Y26gq?MSQ]tiXN;[i+RO-L7gM\Uo]ph[<MXRknWkM&Pp0D9Rp6FNKJP%-qoj!1\^-:$;Ug^,?=oOpC3LPhI
%rAtTQ``@8$ArB\!kkdjfY9BV/DP+hk6WUNQa-CFBO.-\'Vh3HlAXSp]mSq?KG$%im>`US0KI(ff4)Ncb57pU)qi0%de]4jB(PY8?
%@g@PA1G!NIIg9BfNqpP@ZP8Ak[aR+>1;7o(p"I0HgV.F*bV59-gTTpXDGM\$17S$",1I4eg.15.9^enBof9?)-`tVk;K]BX[2[6@
%*"-_Zm0=34B;4fuo9.7n&cIi7nNT+XfC'['6P)M+5-oZClX<Voet5!$/X0rS@9!Lc'H>Y*H"7AapbW=L4Di2,"7)k=eB`uU.7b78
%<DD5KrA_C".&;IDd<VXnjU2kF_6=asq.V"jc3Am_]t9IPfY8_[\>/CN/YN]f8D4>.q)bM:Q_eT>$B.e%8Dr3f=<&q96Z_kMGP`f/
%=diO"ic[h8p#2i>=C:ik[\n$KLGkFkeo`FIe1&mi<TN[WSRE^6A%e.L7It!tSbOXRGHrN/pTc3>[aWiDeM/@HcGM]aKRWI&h4@-Q
%^F%.UmrR[t5,FR`GLatNQj_Ac+'=,;3s`4Pg;L\Q.E+oA>h6!)]XbGh`^YESDP,79m!fUY%NWn$6N<N"G55fb[Z[D5*SN6@NS:,.
%6N8BVPJp_N7n")kIqf1F5Ebq7WZ(U=3Q&9U5QK'C>(&JLfe!r&4ah&/5u!SHF%5WO5]</fnXurFfQ0]pL:'2]mP!)!j`o@G:h4sh
%0s,*L=4Ig5=Tbmf@[4]eg=NN<q%JG2!d\T-K=q4Sp:oC8P.#%e,sXl.We6O5X&3<'^/t^KLMlF6n*&aVlrm7AXr?@NoeX&4O%MSd
%92;[<O*5T9C^9<<.g?"L?$G\P`Lu\$RYC*G'NHa]"I6@Uc_L-!Bc[0$a)dK#TW)6C>>pN5M#@,$0:hh0CKLL;VN9LH#W'-2SW$!V
%Vd<2Shm87&5lZGtm)!E`lK-@?P\K"AbfLu6=ilM3$,4!:\+aKj,U9tqa__m^7WPKW+JT9.a#(7]"CjYDNhmXgOr"%tTh/K$oR+7P
%S#aV#D2;Een98[rXNjQ^KV(*uUQjn_8akmgl?'\SZ#&G'qh]+*9,dJD]`.U<K]6k7]F!0DYh%Zs!$rugOUK"F52a(1okTcp]B?LB
%?[6El64A5j0e?>1DT+((n(7*5In[%J%Ckj$2KG%ZeZIQ.:?%YV/^fLCHkOn@?!fYW^roJj:K=O`Q8DZeDrO$N@7r*t_thWD!"t=^
%ml%3lk4WLnQ7D[&k>rAbjrI2SIIC8*N\t.]NoNk.lot3m1r#pN9^.ta9ABaD7]K7%G)'$&<k'`*n*"PjR7G#CnZ^\UI*c2u/MV;9
%8<0/!AMY\.a6dX0me/-L(Ua(j>Iuh2RIB$[EVja&Gou!c3FP#^bTRu;*%]\3W3+*"^umJ6@4sL@,NYbf^W5D(%+PNmSI.?#9tAPS
%CUr^]fsQ.-([Y$Zfk?USqg8uB[q6jqh4fsYjb\L=cuaiu5HESkmu-)P^R;8t$mt=h2JKi0q^1>B@OG[o=oko`FMdB61mL>F3m06I
%Pq<;n!m,LZ+EGMfn0'#_r5bou%1j.mAX,b/4OJ<`D)?O$HE[jCf+7TX&8f?o"ak/gA($7m\26erL.h4$UOChiUZG`b$;j72q/%'H
%.dpF(BX\XTpXpYWL\0:CC5'WmE0PVd7mr7i;]\AnA-A8*1Un_\!?rnWO9]CB0a=;mS/X]qR3mIarA4c+SUr4VCL-WJJ2Xqgbc]"-
%8okk<nN$_p6Cqsr6N+'(ouLA04:&q$C&B\k^4)V@O5'nPeTg-*_e0"k[/9\h.rS$s[[AkM%jWMIE1m2&,`_"[c[j+gIMFP[IXBQP
%GQ7r+TGXFbj.cim]h?A<q$G&9"B\EXjdLd?9<rLY&3M3<Wq6-ee,nit'r,.feifL[mQ+_!(f!oL/\-Z]1Mmu^NFZUu?Nt)1q@k7u
%;kdGkPXehUl?VV$aD-Y("Q4I.NXn:rEk>/l4LReBNV:fb%D"=[.:'JPh!UpTRl)#sqUY^uje"(r^W-t28"'oe;[A0k]5P";UCD^=
%+0<eRQ9@ng=6-P,Q3H3qQWfeuq7EGR"pTGl2N)]'EnmKT'Fm0NK^<6j%FP`T=PI43!)PM/_5[4Gjc^iBh/"D:$S';_eee5Yc^Fe*
%qZlW>'2W;e^q7''<K*.)I.Oj^-D"4#`(/\5PDLt8A%l%0+2i-Kecel[0B8k1=9Ye7@IqIH,N2gth)]mIR[Lc?@mu1F,(W<^%3>r!
%YoJdb1HnFOdpE.YPFGoO@B@_t=U(pSGTti3FYpWA@tI;,#+)LSZriMf)<mVP3:eMd16-L/\^FMS`@?rccr0S.r1i/aINOS/:b2Da
%:Oas3fTIq_Z6p8T_C+?iC;ej-RmILGk34@V@2+@&DC2Ch:=I[)UbR2ofA.R1rP8%4p8N-3[`@P$h&mm_pCs!cHH,PMIO5)4_59g=
%$Lcl(-NONQD0:4K$ph3nK_APTqNtl-c';6S!?Ajsgt2#nq.$ln`Xl'YTRIkLlZVd'ePRDbEJn[!5L\66<t%BRY`dNbV->PHHB9Jf
%0Y9JqY:9_sJ-bZfQ^,[0+dI>o!.M*[Ij;D9_q$>8J4g]4osoL<RT>)!`ZB'R_)@I-$dX]*nm!u$c%/+JhRIEj76G1%E9K4c5c]6`
%/T<alpO&+fY0jXnJ`)M$U;?,gl1+D0=Q934KA_qi,iG^EL1P+WqQfnDbAEm)]m"JYV[FY1BZ%O>)fgWN,VXL\\IUNW28^?QQ)CMZ
%,qG5B,i2YBdrV)\M+<'M**fq5$c+*"M\a[FRo>Q:D'F*%kB86ULVURsE#`?:"D&^gJfY5h?[A*Q&+`CJQMnfi0LS+ZoeH:+<;NBI
%L(Yl%0_^ca;_e#:gG3%1cX-Y+PJ+?c=]gKM+['@ScaPBH!K9dU^2D8q$OiJ7H23jSf""eDQ^=-KhIPr_8HV+7!Epi%pJDEMW-+^d
%5.sf'1\oZ]g?2*lA#?fV8u1H#WXiGDNMP]lVD)?0E_qI>^9a5'-`^R'e6?`pO9`Fk6G#?RiINSW\OT5Ff1531gHd[bSgST6D='&.
%"a]kt4eKX]OJa2^,RE+V9Zi;[_L;&\0'>M:*jJZ5BdAC5V;q11o(_nTWqg/fR]jN>;;TC>[:Wn#+^%0;HGa!eU@Npnj$*t'gP6!e
%4XI>4`VVS`Z1QJ3g3^O9nm$Cj7sq0P15;/k&L2<k_scKN5`hAf\Co0!nkDt.fdhf+]D0$to6Fg1-4MNe5h9Tj%[-AIj@qTtTsKp9
%jF0j>C=c&`Y05XthN]0l+W?DO-%4LQphhB"p_QjWeY8@E99Zaa"a\$`E5%5BH(LSIam@^(!#9>3bJM[$&IS@d4*u/9.d+d)3%J&`
%T4M"-6M#nm1-L4?M[leU0Y)P;AA*33IfEl$=t9J/h7e?1Kg4b`9e(XH&us#F)*]ApMiW([B&>_6h#SZZ_<S,ho<?7nP;r3s894G7
%6!^Q(%d3@_>#4^HP8Y9USoW@N)!.8(fQbqFXF!t)_U#tQ<bZGpl2rD<RlDKM#)i=i)dmJ2n*;+pi?YXf=3*7f#?a;@<PZ1kRs$od
%',?qi_h%Kp4_@N-)EW"Pkk4u?poiSqj1gQ$^\#:`rs;sH'mVjcdu6<MQn"F\GZ2$unkb`SU0j`[_(N]t-lCH#ZrtJI0pY&Ffc;#>
%Xm2ePf\1dEQTij)69J%G"@=j=l,D;DZ6\c??l7Y'q3W?=>kaBSK"-t/HZ1gD100"$$bnkd_b/G^J>qrAU>!$sI7!eScQmRN3p?MA
%ResElh6LlZ&:74"Iu"nl"?nb7?._qN3"6(CNGZaa9.o1]/F^2*=-ARB]iV8S[s%,Z!\4`r"Mpt=3PS^VU)0r@-E91u0$0"T@(!Mq
%@%6&\D78ZgJ@?gjd*V6;rf,5&^?PNh@'Ne3%7CPsNe]gU0BCr'JlmP_:>?qao%?$kA>MEc!/t@P<.4\W%U)Ice)`YKS[O=K3(I=T
%hDjYC.q4n^m4Huka\61%kN'2T53.NtY\YFj]%r;q@*)Ri(iUJFlE52P<^Fa`Q#3cjj3gnt'.iu^"-r.O\%"ac[/;TN"$NThS+9T9
%/J&leQ)k)h<)L($U;=u'Ot99^+-,E70Pk-kTKY'O!sGWqPWu25!UnHu!\6k'9H'+H@ZfHCpLR^AqK]#DFIRbX83?[GJc5Wb06TLG
%lh8j6="l?`9K017';qRIn;__a?dV9,R0@T<e19Q=_d^lkX)1Tu20j@9@tk&k0sAHcGd067kB>S1HM-OP-e?Ol/R=kpZ\t_M3q`n*
%)7gGoJC\1N`aUO0^,C\VO0#E(6.oRM(/3Bgh[\COXoOlW42]C[,-ha@e<`nX.**r&>8<PN_\[N/2)L0]q[Oj1Bl\:P!*20ocd)9;
%gj(!PF`:$4m2-fc+t,_1LFZNb%_,p4Jq.rjgm$X[P_9dNQ:KJj5_sj4/PGh(6VB7cNL]=tNOUG4.^W=!Bu^a`8?.5@G^./D;>ddG
%J*"-uAGi4/;LO`aVW&[ekD4C8)N!Oss4C]Ckoq%Y3g-S^S>hZ0UBh9to@Q,J"lXV]FA`u_!a_'VEk1*fA=2JiG["1Z!#+P.3O];.
%8Fn\S]1(Eg[WtfbOT[<)]]P[qRpQ&Jk%a-A&I0TLZDM_C>5,Z(W6-8+@s#VT^=,M<s+4<-i;oGQ1Kb@r0ji,UWZ6!AfTi3:*03@.
%S^]PM,"f7n":K-TTH!"/EHXs,Mf5B^*Ot%*]EgS#Deks]V^LaX;(j.UL.$33[t#;'l#Ih+2X9f5oMF=sFQ'VGXg'/i8tthUN97G1
%Y&@.4eTE,@7t%glf4j"8`H`?lUD^\OPfJp-XsPH5-*M0QR2KZETn"R?4*=fCTf#_l]'%a@M:a#cBN^qkr6*d_UHdh#AKDq=HXN,Y
%*-Sd!(oCadNK.aT?16@X*iLmOn4uDQ&6m_WZ7hu>Ja$9h8g*FT<`-4:2Zpb\X\_#'Yi$k0(8qm>qZ)`.d/IVTHFbMaX2df%>&LBG
%V>7VZpBQGbfHO*[1bn_ZYI1^dO6Uc]&9"q]PjcnY3im=jnlP==D>?)FfVC1,5i0]M9EGAQj74liJlkQt^985Z^YTH=LsFVs6oeqL
%a@CkdiN>*5qc#$aLZUnGSHO\))`qK/,;3r0hSb+eA&_*8Ri7UbJX/:TH'_N]h2VERIGW5X-B_qf!U7c0Ik-E=Ni"o(C_se0f]7VN
%TS%_R[+BN5Uc8CWOK.m>;D`g*:1o3f@n*bq&f5e67@@$d(j#!&D;rOQH+[,?q!q3HWCUHqUNTPLN\Qprg.8XAi_]@ddJoB]8"U`6
%EIK*B;Ps8;Vj:"E$`#YVO8ADphuqY\HoT7`odjOT_63\=(@Ns?nS$sHpn&jkag:])d("j9Go)6@mT@>a:>ZcnI2'JZ[5lt-oD._;
%m/.VFD<[P&I%`!M&Qpm*FbJUmi$:(cT44m/^\;#bKW8`\"2HG^Yt?Q;PBg6sl7EIO=SS;^LTOM;cRn0s;pb'lIHV;t'e2&\C(d#,
%%CCs5*IJ@u8Fo1-3/"j(FRN<goj>q8[;*un+9!f!I*`i\jTm\;@Yn[Bnu14E[PZGjEm76""23dO='A2sj)#pR+L3?a[6os`Ilfet
%$p<-M?Djo]Zr;P,*nKf:ql_(k@l80kAN"9`>jE,=J/BjLb7X`#M@^0iGSjg3l9p^%YQ$0#_^Xn,FDjeA=iC8/806hokjTdV*TN^7
%5XIU1`I"IDf%(H:p()'<g[feE@THF[lX?<q)eVGl;m-4Q]5X2]0=e!/Zq8mn^$'Xn$i8A>8LDq3n/KBte<._Ckn`+`puQpRl^8kd
%O/YH+gsdkE2RDf\0PXXD3:lJIN2]]pPEjXHgbOAed\FtB='?-;cS"ThUShbP,`RU%]N5kd;/Xt?^o(ue?eFbgGWq8#Tn$qK;\"r*
%o5l`KrR"jLo`JfrL[."6MeS_(Rap"!SqpTFhDSB3lp/0%Yr_&bnQ>4WA%="J#!72?OEHAsV9ee@U'N?gCA5G`]rmR.V)qf*mnMCT
%rntfR,G"I"1L\q^6TT-30G&QuYh?!2"t-)or[QN%O,6QV)e,/H\]Us5MD#U"ccRi/QuPr6C2_C&A5[hhja'ef8fTilB-aHQ1_cqm
%%<D$ngFh,rRW1k1F0C,]Qu(%U.M!KiSaAU\e67(jS_#<)$J&,K07WW>^'tYR6G)N8$)I@anU^u.3pMfrMh^5Z]@&BBMu@tT!k(`N
%NgOE$'_)<kLlUAi)sfYMd[r149(c)/[\"s@.`i3\=BB7;Zb%f]Jsj!7*NE`d14&5=!buQ-WhB_!bg"=9L@(*7m\][Tb\RL6ca$O)
%j5X"Z2aJhg8n_O@)2;GCp7]/0a$6omm?I0$#Uj'1@_Q^]Yd[!Qh!6ur]+=U>=r\+so,H`7%c]qoF`?)h-tGp$bp:7e'4G_=,0Bgn
%g'X:/o0^-!"fZX^S:W#b5TLfBB-dNic74I%jYkU;+EH@E4Z=9.NiCu1jkSMX2WX)=n)mD_8H&5"UGZt94iTQmGF9X\/@HJNq;[\=
%)Kp7H#P)%t1Mn3d)Nd3L'm)"90>"Q"A)C$HEMVf<!3>N@ghRZI3RUuMe9$2FArR_Ycq?fo@j.W>PQIMnULuWMS7Gul1eJ8A&XMk*
%*"J3&hhg!_n]9L3,moSM>1p9$3d[D7=`>AW-eM[u4Fo"fZBKI>3PlTH!pX78<Gi=UB-oOCYK>,8;;ED%.N]=S\aGHeT&kLkei,lu
%^>(Q7[1?h$!Qe4@'c>BAeH+9L96WVKa]q&3rB!OE2%h=30K,MIqr;dXZTPaR(oZiM7mQ-]_:O)hlq)(4YE.E*-6CfMP"M5pLN#27
%0=ghC>9Mq%ORg4;mT!BPp0<e8(kO>j9n9]S+!#/`KjdkCUR>p`a`/?N9`\eTb%obK/,@`5Hr3fR_u-ZQBn\,qga9Sl<U<8CQnd7u
%F,hU9PkSDpT_6Q0iXh."A@iI^4eOuZoJVn]A0F5&\rAI=F\I$"it>e__"DnMoM+0lH9h_fB^#Dqc'8]f0X%BCE#^Cbc"\p2VG.pm
%'5fU>(<Fra<=Q\Oqn'QH@oLslp.8M.R`*WS2h>SH,]4Zl?V`Fg4*jPhWH[21"8%goW1_/Z6)mW^kL]2@02asU,jZ/PTef\Zr7)OS
%-I<r'<Uk\4:_*4e]!NEGJl6-0"3]K[]f3_B]5RZsFMe2P?KUG&rp(esd(h;X,Y5',f2tI/)Y<E6k@;]g1aS44"gS'caH,`fI.m6d
%s2C-)fE%3^l!1+!D/N>9l8Pb<rFP)V95ZcE[\P@D1Ro[uinF4q(Os#>p@>VfCe;%Fn_Q(G;@noB[OY;VR,6Np^#t*Li9q28Ac0BD
%j7AF6L\/ht'Ih&6-*Q5]gGW?`8.G1^TW``hVc5'md&YZDqk]o;RbJ]9WPYh=Tn-Gp(r2ni]U38GeLk66eO%G>h)=@tfR`nZOYA47
%rqXO*/tUf1k1#7=4*+VZXH)nsC`@eKr1(iM^7B/2DJR9%r>Z06;B"GAnu&O<HX6UY@u>.0"b9[fIC&od>0lh$RC;#DRf[p9Gc3-H
%hgb0?f?R[\UN/gK05pt!+F%XLZeBO"?:GZNniPMOh@qGQg^Ch:#ZI3Wr8:@PI^dhAh<\d.li$EU]Gu>YSS.ehr)qsV<Sch6LV=RI
%s5<PHII])uQ/`'BDB.?O>5^C\9m3hrR)Y45X)?[1*i_jZp2>^qgUocMi(o\gA#d6?17?edq*7:"^KGDWG.$s>4t"CJ0nkXK2LdiR
%)C.QHi(o\ghiDN)rdjY:Pb8dIcGs\KEkjJ#[,5r1D&H:3.JnQBCf8N*^\I\!^O$mf"0?FA3V"^>5V(%HG>j!gccMfu*+k82*tE^1
%qXFfgs0/.h`R^'!5ti09p*I\EQt94U"/RguMnYa!)fMc#A@auH$.Jb@pO9^GgL]4U!4:pk;_)o@efRWZR6E"M[na%arI-k.YNgmM
%r8"c%=*l3.7Abn"<s<XQSWi[Y@B(Ibg7:DdCo)n!jf*;'f^]j]AgLE9:0MM\2W?%,q?No[bOWQ9b%UHl2cP+6hel_4pS>gU6QmeV
%NO1tI8#hAbIX^j+rW$$HEcChjF9lV#nTQ_B7[tOt?E,B#456Y-"NsbdT-N%-Faj8-hd?9:'[eOKGh<_lBhqHW*I3l]^Lp`=BTRHH
%[PiaOdn#$j45!VV>>5YlRbQL:/DZ3WaN+L[VYCudp6ap?RRQU0)t1,:1u+uib%N!l.rDc0;Bn6%V;]/8nRIY!8WI5jb,S:&Nd,+>
%,f+P"c\*==)mUsB$9+h^he_C8^KC/`!:3E@VjrclM24R4[i;HLYJou*'shNC#I")C>k'33$_O86`fY[]gTF6K@sVd;f"NTBou@/E
%)1QVj&*mQ"N2IbIV0N3(>U+B%bd-p$GMe)?rg^[98N9'#FAi>,gQC#Xp@#ckqeNsc3."0k$5rTmi0d3Mhp&I3M]2@QD;3sn[S;\M
%dUN.QaJHlNg[G)gl$$'/&.+,?2q<WfDlbk-Gs5=+S6Whd;tU@prQqPRrqd6*FQq\sjn-("Q:(GTit/(!fnj`7VBBWrA%2b[XYF-H
%f<!%R>;bq9rX-R#jWc'@$sSk(+%S1l?9ZaK^Eq@G^1!!#;&)TR)Lcr`\N;*[+nkF(='/F%BeMACZ')OFF['7nHSZ_YO1qgmEe!["
%;>q*gUX$Iba_'>l^#T+_7rRh);uoUGjo+u58Ao5D`+ft+,??&#BAZHjhu%F[R+M'7A`BWfp4L,pEanl06';G8`=d5qjEPf\cWA$I
%U6[bN`s3_k=jGTb?B3;<&>V+D@FkFg6Qsq%g,*db'YQ+i#`E[%ChHRQgLG]ZY?g1$59Wb*)%[EX(.OXp6GV5KS_a!lb`K\Tlf-\J
%A`F-29Q@1uV1?#,XjPuJA]JUqQ<<bcA.9Qb/b:5%"5mQ+AW2sLXQ3uF\aAcGf=XOMFlX@>[`[]dYak[b?CF's'lX9L,H;DpnR=hg
%7ZG477WqTldBT*[EO*tDK!"BNg0/E)b::Z6,FgcABK$GZaDSLIo$F%r^)jQ%<^QLQpetabbp*+CRE+$G(b[YRm770N72^^S8KVj[
%R:^29-CUiK+:R&.!n>NGC8!k8I'11O9YrK#,md7I*jf`R^%prfB:hH-I/E3B97%D]L#WLMFiA%+/-E[gV:l,ra;mtWb4A6HQPA;F
%)=E&D\`N='!3&@990COfEBfQ",c$<9jIP._KTSQ&35%*GDPfVtJLu=N'4q:TpfEr?BM;5j>/s>d>pNH!,,p'cV^EA2XbAcei%d3A
%@`HsjY`:k/$cf"W(jF\7!+u8]VsgT&6MC)QYe(I`9:H&B-M7q^f74nNdfb,ecI,m2aeVWR9tZ"U.KL:]kd5B_AI3Ws7N?]>5oaf`
%2IYuq7jTC%^#o6$5VoL<G$h1?lNW!H:H(TIomsrhK(WP&c0-3ZUr62aN#%@*T51lLfqEi$;IQ,S.LUU:oU'STQ;\9?EXTYi<mo7k
%]<AC-n=P/+/HaVV?JHDhCW_%E*TB=2_slCl$Af&Br;6Y$"<(7^01ZcV&-(=N$a[]-h"=sFKSG@I%K"RF05`.JTODPuatKbGXIA+X
%nljFk_bk4L7S>FVS^Qc!i7QtFO!.DrGq_`<G%gJ\lAdAE#\pS?T`FFLkB(nVWf0j*G`m5?pd4OeL_EhK!m9/9^t=sP<7Z;Rdd';$
%W>kfZ(+Hl!B>bq<=Ltj_J*X;ffUL9QP*:dM)O^-Frcb0&KHfo.kNG8!qlB[(Ts32#V^jXO.3'"7XBP#;QJjOk*7Nslj\UY`XrtYn
%i=*41Z&?(]SGr*bs7O",&RrBkd8)U,4q1LXd;[@tkc:^?5UO0]!SOkT44.9$B+U/a:rpnV#T(mf>3_T5K)[#hg#AmWnQ`c<,qkl$
%i/F9@_,:tee(K1l@Agfa`;>e!!8ukFYo#j=@BSuS4T5'106@85lF8(GNgF#R\UF5m`blhqlLSG*Sm(,>s'k,k,Gr1^Sb'I?>*Va3
%pgD7[NHhM-S+Z`i]C*s_ZER]*lBBXeLZ+fC4Fa,!`be07N<#";(1Yr[WM#`&WArpR#M@As1G.aE-EE(]gnlAIJ2duG:^NJK\7XDT
%,"]BQp<`I!Y;E)(RC<;rd.f[j9LAPIg/)RO`nsZim'"^KpDm#*Y8?IFIm\R&W!nD3_9`i\6VZif+1FgLa`YFD8[6%5O(ccR1Adm9
%^&^SI[T_2Gq9%*SYbR%\'l3b1>^lQ;`LmOqSptWBq(V>HKP?(k:=?BR9+H['+tDK8?E`)4)AU''QRBPU#1Tsg"'&8,<#,.Lj,X5V
%!-rH<S2>trh0f20UQ_fAB8P=Qab";-<$00?$+J_%X.j`l!XK$VilBMANX0qm#&\7VN?6O"IQY=s%<u97k:f/JM>._Y)<j/PO3043
%X*2$-B$HU.Z9,Y'_r,rCjo,"Gs7QOm(ekj0@Q<:4%8qH&OBR]#h"*E#,?\anIJm!DXO(Jhg\$e/`0!F"C_(f?D)_7IVq*XG';2;@
%bu-=L*@V!XG"6s.PXk+Qa6Q;=/SJE@"iJ7kB*uHZH&?;KLSCZ2T:\9i*se-+Q&3(m0d;2I4X2eF[i$F%9/A;nP&+m1\Mh^Q^R:<>
%'-_6V+Z\YuU!PKm2nJ%1qni(KJ[Z\n-Hr3+RlN<PB9a=YKHgWKGF98Hm#edb-h":Lhr,gGgt)3[U--$2L75LCY,@3^*O'/IhUUE6
%6OPC39[3rgQ75a>,M\+=F#]J?f[:ePlts"Eb!Q`KlK5SmO9,f7:!6C,U<b_BWiK/dVJMi+ApoAjF"KUKk!3WQ",GDqp/oi'r(#ZB
%f0<HV&>tFbA#$GBeX$a^d3S:W<0Vr*I4r[YX<GC#'1+c_D6gj&`A,Tn!PWte*b^1Q*J-!<hVrjEQTEVT[/U:p#Lh.(D(`_KoLC`N
%7-SCtV'A=^Ji^`)#f@PF/,:r13FQlc4&\NI(mIhbMS*Zh,LQL!".0.pDM/MM!q"?mI1-uM;Uc>`P,\`K%=J9,s16$+?,V`7LpMWI
%(#nFk4(kCiYn.LQ?^^9WYVgH!j&qhXaH1PZ2N=+Mi0RGQ__A9[JrFkUr8J=7f'][\1=1DHS>\hr5k:L)]`F]]*69[fOQ*IOgNI?,
%A:P;/H#)-(?kWqbT;U4=;gp[R^9?=:LnjHcZU3oN/0IMQDe;B*[co*@=e27&.LtBJqt0Q*YAjaKL*.#(\!;G/>*AHtW)jPcWtm/s
%+J=3smn^]D+8XK+_O"\4?]L-WXhHc('U9Vf1J82Zk+V&A-sneZXq[L:3nMulE$.idISO5@qDM!o(BC+1iT1as$Z3B:AUnOBXin;P
%S$IR3hsiV%p3_fIqWiJTV=6@j8'*=;&QQ_Z^LDl3375li5]$7(?n6;>5Q.$FVR*BX7+**b5UhDCn'B3-((*q+i'+%.RKP@N0pj8`
%9q3`;^ATLiBN_d;P-gc#5@f!4A[/-)$C%IS$ZA&BIl-6caN]@\IgE9Lm"0@<QC::n>qD!&):E7l+ao.uKb/Fq%%NLNA1QT91XlG7
%9W1%tQgF]\b,[Z[D\,@M(Q?@3.>Pgq]YWNJnVP/[87boh$F`,oci3Vb(#<OYD\]2KNN,7,cAF@fjA4^kpk[?K6Mu/(9sApI26]?u
%W(p7@]`CB%h-*Rt0"i,:8;\?olCoUf9PQ7M;iL4M%0Rfl(]aaShZ#JIYQ4trJfAsIpS;ecD'c<]rM/?#=C[,hEK*.A.?JK`eN`+:
%%%2kCk#h0D\R!@%[$HhYN(RJ40b8-="?[rWcSJ@`]Sj&]]X6$/V$O#rj)3?]mkSG^hkZF<k[B^U?=h$^(YBKUr538,Ld^Yib'u/Z
%I!H[l"L\Cr7:cW`fLsN1SY8pcH#U+$(HkRqrK[(@`-%U@@n;^O0CG-qqSCW:c<?D9bh'6a1nl_M^tm-S;C:epit]Q>4e%Fdfd2j4
%eS6tODo3H/i[qlF3$O%Taf\,J9u:r<(G![<Ef-UZ.O8io/GRD:Ee>,"H`,+#@?g'nFeTNJ6JYU\+&E,LrUL2o_N/\-;kk3\kI>?^
%Q^Tmo\]q2]=1F\aeUe(2.>b@O-(O`;UaRjVP^_Fa:SoI=JEh+b[hq820Ib\7i6:&CC4Ot,7&ZA%q+6VNokBL&XhB/PqjjQ-j@W'd
%?apL/'03./S)e,M<mLIg9e%PC!\.;UE>I\9(.i?=07WKBISK4:AM[k0@8H9T,<A7F-%Ji:F@)IKmmf8b@)KFFEp,dnPhZ(=BdWqR
%9RfL>?>LSICI4224LSF`I]@0NF_oOS9WFXn&fqYb_BqlC'Fr]0jbC7OB'*k8pWW2jB/_oFRVfRUMD?kKeaC:A;c*ruXhKpD-g^%(
%B?aW1%utOSeZP`H#kn;[R[Q+aIt$k$ID/7QWY:OcHG(uk3oR^Y^%B3:()'?V,-"$>]9d*LeLG50"IOfV,M]7hq_4b/,s:8OoPsh0
%DU1"2#E)5Dh;#oB\@hYt`r5?`S`:ghFf.%'kfQ20%'4Djf7?QbUH_!=)l4p\'9qft&/o4/)D9YWZ+cqn`QTd3'U>7,$&5>FFG69;
%OeHN7PIqmMW4Rjj_)QK-m3:9I#?dSnc*=-iNeQQlPON.U*P\RAbn2/V</9cLIL+>34g*PJZ)i@ZRCaW<YSg]]c=YeYA1Vc#ifi\>
%@1%rjiYu1)S5n7\1;X+[$98:F*MnA@'OQ97ejZPUqG$gb0quPgX.KV@\&[sHPiY:0.^,c9LG+t`c(*%)6.,5tDT1g2%T/@$Js(b]
%Y,^j4o]g$LZV5BjAhS#XZNnLESH!/SGoSh[?KVpN.gZR7I.+C6"pL!\D7D*nP>.dUYt=_M*=6QCLnC%OQkD=/@!;A^\$&g&BZ!kT
%!!&<M7=lFnWij(MrTY:_i.IcQ6&%j)i(ONqQUt5]bft$fdNX'M6>Q$=-ogd'UA\XU?O$DC>ABXn4$<CuHa_ccDMU(f1"3ZsN-%t4
%3XX(=*V*,G6b7Yt:,19Op9I(9D#LG232)WXGYi!ogm2nlIkK?[>m!ZcX:Zb3/4)Dha>P%E]5WS`WrhcfHM#@GNXG?W("(O:lW8'_
%3+\DHW]>hB+,,C<\BMVCn>"XPBO,)!J!a-JMp>%T/9A(Y&0iJC[<D(_ggLb";[NQUL98&)1#kH)jnMf&g0hRJ>>eN*8X,-glOk6N
%UTA%>h7%\1%PI`oNHTBR])Y"9Rq&>`FoBlU*/PdlVq3u%THd-CH[DgVIUiqWI'<.[38jk$Fo\ZOF3GsS/P-)E1'>*?@>`:WTCRe.
%gP3@4\i'b\^L@$15>9GlSAVoh\GYKX;NN$Ec+IT7nrY%5+O(EhOt@N:;'1`7D<`W/qG!&<"4>?d;J&0q6cV,a!<CG0hX,X5-:UB=
%f6[Y#0&"1/TSH+`4&-LVY6_Q3jQM`0h.I*=<sU<t[\S]ln`QbA[r64s9d."R8Q3Ct1SR&;gZ4_bRC;dk"9V[5fpIppD@O;Tgg;D]
%Vqi!9RQr+EiE<FVjl>'RX0h%o@^d=8fp)3#gKYUiUe!Wg[YR)/1.PFR36D&pc*"K7.U#JR]5^fi#XApt"2e]=&)TQeom'N]/(\Vu
%D!mAoOfp,r"[uA_R.iU/h>$4V?[Eb2U`6]kJP*5$)1GM<e)PG+%@:un5`eUc*SROLk4Na*F>uDm79$sUoSa5^dqt,SrDTE]PF!1k
%WaK_$>TX)[Mhi%kX]JpCn/t<6^q?"B*1dJ@[CBjrVs!Hk^p3#29,U(WE\e6>%3]a3rlO+ekteMMf2%``$B'9X297t7)VQ4jL,ako
%N/cUd3c%MPLY#>Y^C*HJWD@k0Q??A>&)^)@bq3t]kq8.hAWL8>_Tj+Na@I;^Nbt(Oa0!\T"fFT0%C/c90<7MK?-G>=^\orX:B0k+
%h`F+>Y1fN1AC<QU/o%WA\==e%'IAbC[`G&k$D%^ulNt#Xm1o$#+Cn+DH*!P_@i7\m+I'"a#n15Xs#>Dr=admX`>R@Y(>JN#\LUl#
%hW&8Z)Tq=Lrb%&)Ihi(7:CmG2#qA$[Tu`W`72[L\nXYcLP>*OBAJg,S,a=r6pa`NY<+:32S0R0>>+#_Q9sRm*;0@mW6e\JCR>55n
%WZOK8IBXT&N.4DL#2t>WVJpqsS)I'M019\%`B0:]+5e/fgV$G:T@(r*I:3m8SY*(^hCD$a@B7+a4i8fCf1=]cjH]h`(377jm>Z#M
%DXJc($BJl)FC)01[WVSJ?Q6_soJ>(Lh3INB:R7&%8ajdc#oI4kO$?ac:'L?cELpptfA]hicVqNh&F^<sdUXcjU'nGHJ^6Fm0'^gG
%lLo37J`f>p!+@H@ZZ_]=>0Yr,>UU%qSoI2GJ4IVa,_((/LG-!3/(>LG.KNu9^2aMS"l"f@]cD!iGj0h4^e*>+n*_a)V)R*k4NDl7
%AE+h@J\gW+/;hZXn3_$HIeVj^B7OX+),;ok%K+c-4*FF9.XIBrfG"'V)'Mj]FW%s"e(+XcM1472F=*V%W:TsA8eURr2j-;1o3lu7
%.G2J9pn70P'EY-.%\&2ZiMP:;MZ=<VAlsdV!M16DA^8O;NR8SG_S&UMQLC3mY2:CIgcarWkbqn8=Ktc=EV`h$"!_TK)RhsL`?de7
%1rcus63d[,[qeYGd98TEVa%\cS[H':_?L#8Xl^=sE%I&!Hu@1g_MtT6Q5CaUX5kBI#bj*lTl#RA)C.LC+4j.Q%Ukg_FH`Ono&T_+
%!9f8SNrU$R&@BSXj":@JYiS5S8CRYcn^SJZD:u?YW#G`gcW:UW5FP-#4qACLKl048QG1:56T*$o5T,fS+Lc._%=qU7TcP4hmj+g<
%g;s$GWFlV.V]n=PX+`e+J+'90m1alch2.l&PM(3(AAf1LHqk;45UTU#nWk%q<Y/oJ,ZVsbMM7e-:pg>mdB$PFZPH_DS^-e&+:A?M
%KCq!d>EK+M#,md75$-W3P6K>QVZ:IEg,@7'k"T(;c2ArhQmA0`[G2kq3PCLA2Pe&-2Ka-o+<uHM.6hDh0Q/Ja)9U0IF@Qb;eE11[
%\N`"nX@+@3I_Tkq2`EV'),!P*8;=(&E(=Kd2GWrI_"8mVbGrFaDM,6:Rm[D1T3HW0+G>R10?LZ*H?6;8C#q_qn2`UH?.)NhPi79h
%XLFBuF00L.l6f;O;sQ=Q7e$j+cdN=tV0>(j!'r6u<)m92gkh^/Oe[Wc8Xg%2:i!/hn.au&e1MD=p/;qQW*\pGRkR5mD6,`Td99@7
%;Eq);(J'1jEoBn\Hn%Lo-XPH%GtF.X.W1\!9#=XnD1>IXUAG_]T?cP,)k'Qp,4.gBXZ(IeE*5aVcMIjq$dEt0.s*B/n^Vp=WT5&h
%*KRP&R15/98iTTtnkqfnl(bhhUHM#f%@K?D4)FrFkMF'>+iR'T!2>/_Q/1kM8JRaK`CR9$'d<dL>I3[_D`/)m(pLIB#3GWQ'5q^l
%269fq=B@7&,qFldj.*Q'M^7mTL$E=sI2>_%@RN`'JgiD-j=VVYEa:eC`*IP=Q+khNTqZ`E.%H3DPNe,8\/"X9;DX(M6j>*m/6`.i
%eWpfPP]fqe`c(QAAl+lrVQl`Z=V\:@rM-q]Y>U@%lRK#<j<pC)]p3FWYRPH=NS5#bpsgB[d71E,=4`^QjK?+K>f8,-e'W556\it=
%+auo]Z\i,;&>KtD&WktJbu@.\.Am:Kh!-<:.KsDW(2>jL#g\%$!"*YbZpb+9CPoG?#$8B8Hoo(gVn%MN)!j1I3I;,YJ^loFX:El,
%iIpRll<;VOM+@iOqs=&>,*#.gBk3B:\#t*M_!D?P$:q/7B/h-(8Lfc<#O+Eb3NrOED7VJ;pON/U!u2Xu<.Fkg"8MP_=2+[G^\j">
%q9/g-hm<(<GO6bbe+RQ"W/9S>&)s"Qdmppd"4V&UFaunXe8)pqkr/N[,5:i`R'"U:>5mVor`R2rUp'4WCfd<fA7G4!E$Z$U;H?]-
%VV282C8h$]@D])p:eCH:IWI*K'B'A_]?T<_hjCU0@Cntt9'<*M"!qM2Uk+6rh5Ziu\!D@r4"P\rToBcX4pdYGK>S,V@:5r>/KlmD
%Gb_`)%63453:4V\b6;O8]cKbu-><Qi[c0,%WpI+4D@<)NG7CR+K0NG0Pdit[F5Lm!R<2^Qr)pm`kZcoZ`OE@]p#oDK(dpUZeYc@_
%A>9DP!>Qo"ELP"!Lul#P(5&4f+Ce9U)('@"<C0X.HMOtGHpu2tf7'k"4I#KP9e3/e/*[!K"-(JeU#eYE]"@XG.EdBap3QY7*#F8m
%_J>mW^8"fGcK\spgfB?\TdGO6P_N#)5EC"WOoP?/r,;Vc5Q/Y&rP/6s5Q89Es,V[0:]L6Ws"/'ei\-#6EkD=o?iJg[l[Si1J+o$(
%p6U:!YQ+:1qX(clo[j,d^]0@EO+[Jo0E2t2qS0rJ1gU-ghtg-;Z*!saAWL(>6@m<O)Ah')+k\4793j?JY9bJ[9I/cN61?5N+VpsS
%WOB;(M:a-Ob[S1,e50"FY-=@M(o;ag;VadjJXRRY[%d6`:@t+CR9$dMC8F0!/*.dZGpHf(Tp!HKI)XN9fmt3Ik,J0:I-@>?-1gu]
%>U\W9Qt9B:(L-%0.r]jHYr8hrR]mITr(TI-(+6LlUi?bse?hs(%QJ:+q0$;O\!gTle>eL!.#1Bj$.ajrkgk*MWM@nQr%\X]'j10O
%CI=kg(Msci+t1ZX:m`,K&51=R9UL-3!Q^1-)lTn4JFkfRQX3Yg,\XpS-ATQY+o5,SX4kuE>LXZ<n`%CuU0iMCU3Q)Xb.c<!,D8="
%4GDZ+7@JsZX1MB4hW7*6pc#)O9k/9l7fAk'90WRR;nl.^e.o[!dPNei0UJ6>e7]%]RFf4d?ma+R_E4^O&)4$TW(*8]I6,pu%iBtT
%8tCM/Ek!Kp.MN"TK9Ca%=Bi;cgI/.4Rl?.s5i=EV>(r30b/ON!:a5r#"<Q8IG6U.NEG1mUe\Lfk<%#`7f=UpkkINRB%fg,gM'2D\
%#)ID5Gi<Lr^C@ASMd?J#r00N$=ml6h0'ls\mE/E<m3LDP:%0jQ,k+q]Nk:/5m=n)0WOYoiX9Sjtj6H@$0$loV+\DW%]!Jo:c))@&
%Q`pA_l:`=JmUZp\ZPi62HsHR:[LWpQ`fL/R1qU),9SpT/CZpmu^&=LNbAu(R4.Ac'RT>VY(6DYQ*H$(6pVhjQ1EDHD3Th"t_L8Rs
%D"!Dqrp,'aqd4IC^7qtV2Sj0O4cH7E*htLSa'#F[S.QVR_?i)36AVgu2n,a'7PLsk6Sup2E#No9Yd'1MaUU4@`+UYg9uTP+#b#(%
%UDV>:Uq/p8H^`QO+iFX04ZXTdkl$K*V+-u]Dp8i8;J':=P/]L]3;;q,-rU(W\"JV]*W8S#\]L_q]USOT4_$E^Q/P9[-Rjsr5U%jT
%!qXY[dmtJ^A9m"mLq7^i+6NlnHpk\O.<T'JnL?k/CkC`KA38dO$Tdj%,H`,WLtjA$jRP(H.iT\#@LDe-(<LU9MT(.m-8cE\Z3di6
%d(?pQXEle(\sNAu,8D3]Ton4:k0gjV"86cPH`jp-8XQKfl:6E@Jeja/A235gp%U?81>PH5:3JC][J?u]-'/7u[%R^0&37sMD+Q&^
%@.rmB\s/%#"/$ZV$9Ui%5!Ej];2;UG-GgY%/&C>1BOlmsg&A%>DTe84J3!Q%L^,n(<uq]4OE9m$cCB2pq!bO?dQt,9\NTINR,q2L
%T)K5em]#Y&#l%Dpqoa4?=1@*0=b&t4r7A6VJQ#kF"jGW9`Ro<FPsp/+,uK;$)%$;%RP+=mgsK7-EkY2+!BRoK&*Y](6L&Zm1GRT(
%O\Z[3)G'2C5@SeG293\#e^<%c=f-k:j39ZC>C9MaT6oH>G%6\1Be-u]Rh)W:>L'DKhGG.op[dNJp%l&`nCZH4>H]O:EOaTqRYaPK
%3n,%Tdj#AKH&AGt6sJsmGrakr?rgig[.'HJJT^.kfnN^f,lrg!k3aO]m)/Q]`&ls.fl_5tFa;oTh3?I3,MQIAW$>GED,qd0FC`-E
%'h-6+B2Mn>0#';/ash/q@anOS1gbqla*QPf77WJY4$<7$4Z<_@\TMq"NRTEfF5#cI[\5f1>ITn"6QcFDBWeC)0i'A7&@PJ[Ja(,h
%([Ts<G,AakNkq-"FdgqOp_+i_FFDq94##7].:aPF6c!Okp9N],X#1k,>R]ASqtehdh3`4JOa36p+Qc]\fjYUD-i,uZ\"W2s2I'Zm
%fVcYq'U!8V(8RGRD<iR`BDo?>jSlj'9jJ\@-RF2>Q<!^n$h7SB-D3ISk]a"VDTrut3[;4^N>/^2M+cT>\&:8gSLPPG^"e+SmnRW&
%@tKRg(^T8W'ToUXN##soMQOY-'OmHs5t_fT(j"kuYZMpH'WCJ`S,V(i80C?$SMW=<>170YiP(oNOkc**L[&R=qlMX:.Y.aiNU+iu
%2_cgb*EB/sfuY52!mQIb??^c>V#nH$\`5A2F.SM"Q.DF^c9<0\\p4tC:;d7@*?"K4EqWbUdHa=*4_Qm"#\`@cMCs?`$j&f%]tDC\
%p$>RIk$&Hd4W'E6S$14Hb7]>RgS*Fec/ILtDpH-Yh$NIPF3R6i#Bjq>Bl:2V%O7K-c\FR]3047-mPp3@7K8)[>D@RrQ*:l.#/C#q
%.E55Pa0sK-kD(krX//\3(.-b-lZq<m(qdH3:2bY)'"qu-GseTgX/Whj$s+^K=MhY&i4ANWMtRHMa_J9_DPm@cXVS<mD-Hgdr=&^p
%gcs*Oi'lkE]T*tj@7f<##iT#LPkU%+UF7&Ef*JOC)Wb%mXd7D`<U0=#(Inq7QGWmI-#(oHG1=>$Z.C&[Hs53@pTV"7nj![gT[Rmt
%.rDDt17T5ViB+m_1=&KF]8?pj[U^iG]T6a-UMa#5;eTN8N;I/84%%(_25/kSJTgJ\[*EbnMVo9X;kn;MCL&E)*CjXB]?:V*5F)P+
%;HqAsqaZe"-#=s:X"rSs=NN<_`k=RC$_)`.o<(gq?mT-tnBI4RJ2pG-EBqD=P]^.;@F,Qq&FudJ%#.Qgk(a"ZbRgP:FV%=#UDjh]
%0W@(P$b=]4F4j+Ndn@6Kg?`#CfK6b5RG>7ALo&lC)Kpg*Q$$8/cl@UJ$Mi$nf#)Ar7WHfnJsfAsbZ7D,IrTVbPX%Pa"\J*Efut,%
%[G+u]=d`CE:6IQ*S^F[DZ'#O_fam:Xg/tf^cJrd6\Aa23KeMi2dS]_4UAQsob%JS7'1_an*>DS9i@U5;?[[6K1S[MeIR9.88(Mjc
%T."/,_P.+YUiS,fFHCXKl-lh/e3K-)leAhu*T<+o0>9W8OVITHD-qeKp<!Elb$Y>TdoPY@OM%(CC9$Mh1%=Qo]sd'2=0+jG8'V#X
%18C&KmuWZqTr9f"Moc5E]2(#?ZT`L['\fui<3i)DoJ^Cl!jM*.<te#b4_&ueY0D+`4sKgYB!nb#2Ic:2[Fb#l-<uo8RIQP6n4*1-
%_A/0:mFhZ8X.*o!+e7CD!AQ_PK"+?&'F(/`S%#-"p3UL'7$,3e?9]Y\UD9/fm?^k^A(=o7`fIT;8j)klm?`;9X7)V'WkQ&q]%9b'
%rME_P^ru48/%H*NpGGV:H`K;b<b`Ju2N,K']g(tkY2_A9W&89+Fo?hLPte\]"+321SaDEp2+M-3E\`5ZMUcbOJ?ZVJDG>TM91b]9
%gjME9F(GV\Fj\iHXPl*Q:a>W9?W'F<,:dif1'oZG>H+lmC(<WU^iOZ\+`1D,q*J)gW`5`lch10p'Q(PUO*Kq)bm>$QAOg?45Z:S=
%[`G]lNX*^Yg>D.)>T_[i^d=$>BPRD7$A<D(2lG\a[2I25247pgB*SH)o/-u?XfB)Oe4FOR7\G-^`34u7?ks7hD='HT@7Ji`%bep,
%n>dCa%iL:RoqFo"_J,bS[jXXN,VOT'eVCC.oV+4l.4?:LL=%%2&%2<X0lR4e_Xc%fH(neCcO'5Sn`^a'dp?0X\<91T8("gbZD>m+
%IJ?rl!`sEtEVh=@R%7#](ApVC9QVahd,lS]:03=8hF^Q#:Z\teM+Q"W,RfP[@#*bqZEn1(.8iCpJgIoSorHF!fp4`%niF#bk:5D`
%I[<nr]=qg04e16(ZN/a%ES0<k9`!eK&RlB^j=guPq78RDf,P.=S&/s!c4Qt@+H,ZC-'*_M9nror2H='^@R3^^W4eJgl[Z-@*RAAU
%@Y'PR'7g$88"VKfhZCcR^f<(;"\LmY%#]"@c:ZW"df+#f;phfCl7dZUUr0i8eWKOPV=o00GE2`E8oup^5giA(f+KHjH(F]B40%`&
%c`uNs0L(`p:MV&>2l:qXX(\(X"+q?L@njU?;@]3fC)[X>f64Xn22$N$5o/cbX"Z5+l[Ao'/s[e;gmqrf_X09u/`oJ$I1Z'1Lt[:_
%W5;b95Qi]ifcN8M*#&7p'?S'7/U"^Z_s^A1jG]3nLrYXOWaW;?--Z:bV_I"]84J=!-Mt+GfIug,CY4Ot2mNL;)[\`D1ZK\g=tZY1
%qMfQENDu&6%PrJOM&+5b@4bU1d7[;gLpEJd5$1m+j@(87Ra_C2L=d;:Q+Po6qV%P^:f.qu09S.dO>WN*AsXu$9]\RVJGN((8YY2)
%qj[!6c36&Y0(Rs-8MBhm>8"-WLXMJS-q2o^"?C.RJFqpq2^_[(o%$fs74c?c(l6ad2bt!qh.[gFGVD@FCR4ha.PW4>l)P%b<E,E=
%lWid"meP8shI7ga<J`*W["9:j[)obo7_*mEW424mHt_p!:;G[/K65ZaPI'"04QpF+Bt3(JRf.G.nedosHfWqnHNXU&S8SokJn*[V
%n-ruh4XG@(dp_<8Fpqn_GJ.oQ`)qPD<Ko([=2HE(s.J())74"'P#D149=!1:eBsWOCPC=i8-0ce\%V,uX;VV@.`Z^I[QPAXr,m:.
%2-4Tq+U;(o1i6?JcVF:^5"_Hs.W2e/"D[3GL(0&`VTQ<A!jHJ15.$"S7tIN?2EB9B73RGQ-:#GbYe4]G#AEJJ320l$Ti5'`0O(B&
%kU^T\q<2OgnAJsJ3gD>d9Z!^NHQYG[]`fl_%fEmD1cKE*")P9U"eIWSd*a!N4]6WAWl(\e3_Igp#&QEIp=ArLV>5&#_in7mR&9W$
%cX4'nE>I.<SX,giR2U@(Y@Z=p>>+iEk"G@7Ler$fL"257X`]SXXf7/Z:NC\^p1mcAeJSJ`?\%H/<X#\gc/JNqD#$bCD<Lgm=V7$m
%T+"*uB@WG0$,lC#k+9,R=6q@9/a%P:W.FplY#F-eC3o:-*quf/#Dp0u4m=t4jR',lG"O0t:C*EMF<A9W\SG__p+[=\_VfOgeNkg]
%Qis`d-L<:JY)afB]4(YTQEb=CgF51Y-9^86L1!MeXHXlTGn-Bb##mTF)YNK%:h31Y$i0PNns%*LHWruD]ZL_tFtNTn.TaeW$DU[o
%n;p/cZ`=AG00*BfO`.6C?RqRTbZ9X[!97SrBTgg@,j_dLUYbPGN#c'&(<qZ(V*u",K)obDZ4h/cq`GCR@?+D#0*8Xq:BBO6fF#/t
%na>o'U)Sh\ZKSpi(`DXDgB/PlGX5SLE+8h*1K/J=hH&``OMk41.#8>`+4u'o5u9gJ)lK\(AZrR#?`1=!9i^!V5;*RtmZR4Sc2gh5
%IBAQE(')#oUkmFQdNE,Nd43MWWD\+JbE)dOprk+:_K\D_O,C'`ZuL-n7Ya%\EB(GFE4oEV&<,8R>KkpVA[H!h<mPg1H>4:^leET?
%dAU3qgIX8N)MLU_'Z]NFA8(a-_<td0Drmma@eG=.a"fQRN+q_A.HV$)054La;mp0&)I6FmUl)(qNi`^32kCBN]rDUi4@_a(HEU*L
%I=]\H`HrPPO&mNLY-4e'p3r_jP\o`-*l:N5Dn)QUcDpWH&r,YSL[($C4h:p^MKgcJqd_uLE\7M1k!=O(O5JZ,SLSP<6+uIXA8?p]
%#;ITEE?<Km9T.H4+b[k(g-S!;e0>605]9E/W[ieBOgJGs(NQh9Xji`)T6lr:]nk-';8]CkUFJF+bT:HV_2:lhNuQIS*QmO;T-qdR
%4/[3)B5=cCO8Yqb'=SLCM!DchLoNarq?D_".li@%('K6\>"1EalHR#Gj"Or!G8N4e@:Edem;mTgm3N'Zor5*:I$.Z]qPhanm.np!
%/bMgNj\R'=h`[^W)S*:tRrIj`>Je^*F;Yk][)9;)2'ZPiO)OD]s";[*WP1Ib:B/l,Q!%CP+?a2MdS+T.jZBebj6T:%L7;0`SN3.C
%_67"4cA<me"hq@eemE![N;,l/'d[CP72pdm>g_$\Fm^N7p'f1Ok_SUK!U\r:Ab?u6l:Nr)G7X[#^KRf*DkVr9r)[*hk_GSi]O'o*
%h4FOOpL?^1)DV[sq)k;:@q=[MHT8#F0:$P%T)\fLJ,7Upb)t5@ag*<:<gVEo<LiUkH[UmNnMtq/$86OQrf!#ZC,\5@D,c92ZR<6=
%C<BJgUd]ksYH>2i^Vb,!cm!]B*8mF%[ZC+'K2_0Y)pE7(?X.uhhuRg,i-17\2gDU(cU\+cR![5L=7!:&eRt?8Dcu-_VrsY@l\99F
%Di\Pl'C+r-C&Z<0SYEEg<;u=FJ,81?dk`1G@U&A0D-fU!k77HAeE=kqhPqI#$T\+J'E-ih/b]O4b1fj&Uee<FPD.#IO_F*/""j@,
%2CnaSVm<a'Q_'?I'2R88H:fjNG"/^PF4g5&8cb5!\X&j0r,8g[mQLIjgt;W&15aVCI;6"t;;Cq;Wh&o"ZP_'5H<Rbf4bpehQ3\Fq
%j-)-;c7lVFXQmrQWTW:o2\CH\O*J<QS@snN.g#Eaq]C9t?V\_@87Q1(s1=gbKCX4CX`EcJcBDI;[=@et+$t=b[/rnqRk\K=-^%``
%f-V;R4L[&B_/[U_?S]WJ:n?dST!L6"mePp`f4Zgc*\XW6-3X1/ii:6ji3iP5n*h>GSoC]uE9(E(X>oh#(]PFj@O=]Jam$-i[2[f2
%)MH?M-Qfe\8&DK7F7sBt:r]FPDHG?>)=PobgKn1d[VD+%2gh*7I6C8Lmm^R=F+&?XHA'1F,tL3_ICJPJ=jH>NZ.6ZkPO#n6*m6Ol
%Vr(do%EUc'"0"(C^;ZMT+nnrO^fl3\f5S]"0h8A[KQO38Wgk)co,<YM9=sRSq<WZ!N&D>^p9EUuWXf,5k]7Eep%B"bS`3Q>H"t[!
%/#U]._(Egga9FR\MsM-sRX!.pZ%=-uLXElHS4a*T@fKu6Fu^ZEd:Z*Mo28W)$U"<EjK%\=\b9A"[^Z+\C!3ond1&X]'\cA3+'e]7
%FlZVZ]rnJ$^`+^]g8+QT>N@:/81cK/e_r$<&ad9&)k&(%k!?-6h7LE5q+4MZVmIb6DQS0TXfWo&1@)ual.>`s3HJ^mbH\p+MZ@In
%*''('5Gt!jP*,r*?Bp5N[Y3=]nXr>6=nCbFW]9md9#gmO#!t-So]CI>k.6NJn]992.>49XfnsWW%!u50,pDi)4]Yk*:J.;Pf2''^
%TIS,t+-l>?p4L33OVi*Sj5AWr47B*EkLMZm$GCo#ne,^X(]<<FfrWp]U,9]Tcm(A&f_5)*piat+3k`*3<nb`\oP(_<R`laO,BN2B
%"Ni5=.,MRA?Ebrp)_,\N9Su(Ap\=/miUdp2:=t8W_dn*-7uM5.[?!,N>#r+AgfZB0OG`Tu1c"0_eUH)q:er#@16=$PJVZ-#L*sTU
%N1U/qpA-[A?ZD+3^(-0`hoD7.AYSS)UQAL!gdfR;\P3li@.Oj+DGU0&Dij>trA3jZq6?:R=MC&#Z\,`NV]-De5jup:=?L=$e?K[G
%LP$6`.<gR8I<_>k5(7_G5Ma`R+BhL&/j;Bp,pb(g>.U.$D,jd*3,@DuF4Os+kObFUg2.mH(fYDZq[k]<deb)Z8#Y7>mJBWKH:s54
%2Xfp4ik2jrZ#/6:I*+iW*55)JNjRS6k!/p@fE=3HXBe$G"Hjs>f>":M:c7sH2X?67XebRVrW^E20?%V_&#s(fV-U!,n;AZp?VR"N
%bp?cDl6gLm4A9EId(?b.8Em(FMg#d,0o3u#P!i%_Eq7WA]m#6iA2nt7O.4Ynb^49+o_>tJT$J%9p&js,H;kQ)\_D<jYV_dsO*a.3
%H(q#dKD*RUTA)D[0C860V!dqIGkP%P!#>^-Hd?YbBhI'B6IIf5o:sr&B,a35+"]p313X()C&hi[*N"FZ%sIEc==(AfhmhnEa_?j*
%6lj#5H<ucFL"mL,QVD21i+J9mdCIX[SBe(6HsTsDmEM2mXJ6[XZ10K^`O!&PQs8:Be#>qGKn@d!]5,I7PW0#b<VfEO1A(%/7@]@!
%Ve.hmM-44T>U9h<0/:Lf``jHu0$\e@?RRNNI/l<^Z5g-e0qfY3-9uKF&,u?93g:[-9),3Sf<r@ZLu-s7!eIatK"^_Y7F%?@cNO=l
%r.<*gEJ,J-:IPUtUU`8Y+ZPdt_Z^!8I");N)lgU7D"Fh=0sN,RXij5?!Ksl7X^I<(mSAP1.t"0#OS>Ajdq_*i'%t$HmQ^Zp,"4Hh
%*:+#(?E'LT@f:EO!rCXAZJBM%7<)J\++?DU+EN5cFS<X(-e85TY-XO*X(:o']B?nk@i6f$X*(aPN]hg!7DK`MXnL&sUY7h7>(4ML
%m43ue/C;7,Zc:$#$4TN(42^8ZqX7b53d>%T==Zt"4[LlXE6SpC%I6O16!>7?)1Ic^-`=@bq$(L^=blH>7]jln;H?BkmFX89gCk-V
%Hg%Ug>`bIokh]7.o_I;Jru4Y_gPT9NatG-7Ah`d%rJ]o?J'ag/A",se,L>igg+[?-+Gr")N<Cr:PYa$B(X0p.:4VV(J&-+gX/qui
%fA=eNbn2Alr`2A!-#!:+JjDL"rSMc\c^in-rJaT>C:>m>.K&>MXlPo%*P_O"/,L:\SgHkEoo]:OCNd[B++(ithRsS4[(<nKY%1m'
%&qdEGKq@&gonGRKE4)sW:O_MnhXZLeXR1P;c0Q\('QV+-]j/=AG*Pui44C=b'j#\[nIELJQKFb/GE;^#^K>Y/S!AQG`Osi%5(lma
%28[%aN,$BFE0^PhcSp`I[GIT-hSgE/`GtL5^Us9u+usPEK`:(Y40OJZfK7kdm_*Ha1esM5Uu1?q8;V:h1f)r^hZPDR^F64ST.g2A
%5MhO2MrsF!p*V-+nU7T&P:a843lIKE@[^!TI.X<fEJ9We[[TBpI^#6bbBS3`B)f<"LNBQa;"<$qF6![umYngGNc*]T"ZCmilLR'"
%Y[H:sMnhP?pYQI?oJbhf>pu+?pCNT1^MoA$j;0\'>UHi`f+p<+Ig,SBKk5/ET+Cd,I"Mlmj4@D#XX+Q9\^%1Jj-cAe#hJ_VKk?mL
%'X)=IP?"h'QlZDY40iO7C'hm)7%XL-JnLQ_ckP21^D2,<>_ke]OJu$/Mr4^I'fo!4j;s#>+G4AjN*nKhel?pB,6`bBmT[f%e%e9u
%\pVG\%!$Y%7hI3B8K$,/De7YO4%$.+QW_IFhP![$m%]d3b&eLGdBo3@KE7,)jr[U@*YcKb\E6MfdT3:0R+P6_$Ln8JTQ]8Ff(ZQ6
%N4NRdn8O\9F@HX0g8I=7XCLNhH:.fA0(tO?n9\cT2S);AKpnE<63l^mLSF9UT>!oq2,sr"lHl?7k#?!(X8'fCC6%C+SXmL/B#U73
%LALr:N2?Pq=9!>$9NFMRfRG'6.F_h&3^YT8G"V$S(3^q-3Dl=>a)$>$&3i0V5^:)LmP+FRX;q)IRHk\8Zhi$8/j7k0*Vm[-J=tJ[
%_CJtC$\jn=F-BXkCtbiS^u12^Pj%1W?4!QF4D8c"pjl-Z'cd\-o#A?bIt't%FB:RDBb(W]Tr<tFBTWX\'f@Er4Me\QK,GJ2*8YPt
%9Z$IHpdD:e1W&V-&b=`<$sRfaq?kqP)E&&p6RY+D%L%=ireMlN8O+M%O-cc=YViE#pT"Fhk);b3l-D(<]lL-*B=N-6X4>H?a-Woq
%-%OWCS\*[q;VB73)J2>VJ)/:)2ePr3@*+Y4HU\UQ!NeP5kRiKP&N"@Z'bLnX4f;MKb.d9!H!/+>H<%'OZo&rZP[<LSgVi(?S'UO"
%L@M,sCBLEu-CKsl&e.'cH/l0@5J\t.Uas5*M`enENq.=G8%QKI]r?rAP2)=5.>CkFhAn54r#!8ZM!Q$"eQfZi8J>Y"cefe2B%LY"
%;.4mU]:"Y&<_5ol^D#<jbHmf\;AF'mUHldO<2pd::W#(gc;AWBH;fKcO]P(SS'pi'%2gp9,2Op&"/YC#[(7"2l]3,BbuS'>"D#Zo
%IduM3"cP%74&sN=$I'M55O)lqmR"VF(Wf[f>ffUopuRRf[QenW(6p=<9CEbKFf48]k4NCe(o"l*MqJRfHb4!UU('3P]9a/Snf?F_
%e_"7k[CKqS.+m_to<N3sJ24KB<g[%PDE3-Y0"]iN)XOSJ4"uYdMm&^t5.#cKI1ZP9&,&Lhr]aV6qZ$<XpHQW.$9_F$Lp7CHK@F9E
%7$QM)dhCuQ1pU6hE.V?)AQqh7AqFE3L>e@2O0nSek$L^)_PZTUD:+-.6,'=V%UWsOFpH+\'u'4l5[9*EY8;7W^eC(bAgt@/p5YB_
%a^k-X%R[#2Y<JF;)U5$sfcM>X$mjks^'h;WcZ]?GY/tMkAA#AFq'3ohMpeme;60aj&V>7+O1oEMDf/!\E^tn>Nr_4bL2MY!]=+8n
%SS3Q-Fh6Iai>ujdh2G'=;M0(+p(><)FQ6Kgj/#nkRZOl.c?l8Kd4H?f7<63#>(<i/)R7`]J;=ig5EGjU2oaGg5-jPd$V!\s#PtjJ
%pOHG"o4pU\36a3IiR%WC7p9d+NNh8)o1*g7?]b?W';K'UDc*D4`0!Lr''Ifi3e:rs2/qsLCq<1-J`!/.CRneSinACfG.$?rYL1%;
%m=&?8+JG<Are_s_=jLG:Z_om5?6=JlfK$?N;\V_%CI"r6MpGU*6u9fco?\3<8@-6=:Rf0C780;!\DJ4;"k/OgO/im;hs9pDCjKhI
%1<\Q!lE0p0@u_SQk0^PAcaZa\"_b&S.^.BW5Kt)ioR!Iqg'*!aDPa,=/ap"mrJ%G02>>s4qi'W"Un$tcpb<$ebV(3=hq5Z?UL2`G
%4#G\T>&0nG\hAridmIun#Esa9Q]6BYo(K;ms5qe6W+*;">^>o5VEb'CU^FObQhQee5M&)Cf^#Ic%msW>LRi3Q^_$7(_bNulg*g]F
%P>"=1^.Zp);.u"A@^q<\//2/Dgl8clAWhp;K(!aR&/gYhO\t]i`srbU1:fGcbu:dqY$";5\Rn^OP*a'q2oL7QdSdPr@o;Y,h'9$b
%4aCj?(:]jd%_3h.^Q\-u\-nY&9G+fE3=\T'E0`bZGSUra%u\l1[l[:1&+iJRo4HE%%LgL=c(:p>I7uV8_i[D+8Ob@^#>a)sNg36&
%ls;BC`-3=NH64,;HrE2#F#m$D/lUBKNBZ1?feK7JISWLsb*0Z0:k@Ip]<Q#QgQqapZIOYeikuhL=h7\QVPgC\\Ft-CBqVhNZ@ArC
%/@GNE5Q"UK#5q=0RBC7A,snR-dnq0uG_On=dD,eqVTBb[[_nFRV0W=X"f_u)9dpSdCFOg5jS*W?'fhD@]iEdFQj\C)/gJZo\W0't
%E>HhRYr#Iq^.2%X$<&A$As?8[Q+1I"cJR:pmMnQs\3C?s;9@X\-*$s8A2pMOd_)05*>Bmq3P8?kQ)3dZ6.p0O\Q(ZNeZ<p&o@>HG
%*2PlZd*J^9W3*b^RAIZd>K82?ZQHNQ#]_s;#h'+-\YAtW[)T&IqB,MeSZLq(n7b,B#eIkip,MD/F,Mu`50>c]aL9c;D="R*Z>L*r
%1iomhDb]':Cm)P.n]VZ@W22`iF0NZrV,gpbgJND0o13'fCo4On1<7XUpDmBii`@cK`S,HJ-BI`W*Hl#+(QUY%4QFfF6A*uWgS+ft
%a7!.WNYVd=Yjh#uP\n*0:miUgqb#pu`S?k=TBFQ]q#)30?\h.c??-qXs**l5a:<-lg(h?X?Xkr_Bk+,`fNu]X;rX>6-q!Fr0dZ6b
%UAg*ZVg>6V?C^VZ@6;pnKs:YXU.6%Mcc^9%(0nKQ(ZBcbH"k^a,(DtLdtmq;^?JspnEcV<V^5^_jJl!D&n[P,@o-b@1U+9;]/Z%^
%do/1PR;4kDg_^@Ia5E9K+KGLYL-T.X2D78%BeL>>MPQ5GLcHZ\"6/=ER_Utf:Muri83(=i/Xnd-CM<R1W2\tTCatuqcT/CXUE@u[
%J8OXiU?3%+*6+/9QQUda>R,q21G29o@_Y+Y+m[7C'S`0H,oLJdF"N'lJd3Kg,P)iB]^8KOf9Ga>Sb$ni?I^9qa*0t*-:1Vo7KoO4
%0Wd5T>*TmDb7G]`0P_,).WrmrRAot/q,XQ^A5INua[M#/LC[AfrNu`t[7md8_VS%oV?G/=^;+U(k#cNWk\dMEb<WF38qIekn1=;C
%<[U6X.mtaO\W_t_Ds9rNH&%']8J_uI'd=qsJ\X0^I,U4WI3:)2:59VL,/VoDZDiFK%,`$o*:_KA2d^HDSnCr=#MT;QBhDqs#Y$%B
%:V`'n'fQ[/(/h12ZIH9u/!kB:Lb=Rq(U;+]m=mD[T!FB&s$mdT\IS"DLOV=BL,CO-@]-k*BN1Gg*$$Llm)n%pn<<TtScH*FhL.10
%VsWUR6T*igpcE31^iWm*g"Y]@lUQCk,rsV:A>P14Nm5Yk)kL8;/KBA4;t6";Uuc>B%<\NoIUTI-lhZ;6h;)]0lu3)KD[rmulc&NI
%Z"0]jJ[[(3n,!a;%*32)<jnX_Nc:kY$U#;-?CN'2Uf[OidLkoX5#uCUTfr#e7K**#$%"WI\23btK:SKdEA!pb@=)Ms-^ImVj[-1;
%r6690pJX67Y,P6aZI$anhbZD!p-'d;3!#rH,hZqd(p<_K@I*.Y^SQ<in(0>S87keWN1lkXrkKemCjT"S<Q8\B>!*kjmW+j%8maW8
%"'#/<I9Q0h"+J/#C-!-+dK$E%2:HEVY&3!"4BUgaU^.:[FWG?/&HlOmF*l/.7h=5!npjTHXo4Pj2F,]<[&(V$e/q:p/[cOueZ*=\
%*,M*?@Z3XA=PVL8NGK2"*ccWkUbqDOeH8(AnC"CBm.8OXm^&J::AneJl!m5RV7ht!ea)#LVX18!LlpJ$q6ncJ8mjO(&kRkf,tGMY
%G?SCB9K8_98()KR'>3b]P@(FeOD^cKYt)"mWMdC/(Q"TCZcA7\=1OU2kY8h<GEI\>.(-;*]-SIX=q\8J$!Z&PTVSIC9,>jVRLLPH
%IJ0\%lrMV,Yal?Hc'FW5')M&%Wd;_mi97NiJ">e8"ma0/l>pfEZPNdNF"ff@FB3__iYZ:VB:g)/r5j\!?YE;S!k+fN/4o6=Kh_=J
%;$X`Yfd)6B4$nPY6)VTh-]l[r1]]M;1I5$l)2'3r=%8M[F/3boh+:S2Q;VO>7mK[&=%=[PT1D;HLB:9,h*oD_,WO]5]c74?\-1u<
%>U\r0O<=Ur'69Gq]1[1@*@!1U<tF!3qJlmgXdQ!3:<,WOVL`][e2/E-\AL#hAYa0]aXPK&L2uhAXJWCt[N,R[7J\KPU#Y:NA#cp\
%6jl\#:kpQlBtDrfk?Mmf`>-NmL8ia-AK's6i9APuep`CB!o_$R6N1@9qJ4;4/G.[M)LH77gM2>YBOFEQ^mad2,[H7,pr8;!%[0i,
%c8GtZP`c]^4u/Vn'sU"]e=D7q;_sR$L(:@])31_p1;0c_^OR;DH31'LO&KnDpV\h0H@i5O/Ia.k?P@BMH@W9<G.+;PjBtLtca.[P
%DQ.i0S(saW6]e$q2Lm)'3o_SLa3H3ml0@.AVELr_?<%8up"Q81>$QWJ2_doXc_CSldVrU`jdLPJ1oigG'(Tb`E3R3ds5#isPiGgE
%Gttfl9SIX);BU(>'Zlp-irbf->lIh,[_Z!3#hEWa1t.VlSZdQ52Ue#5m0S/6.6tr0ERSgM="23C`IBn/RR<UEoR:tVHW?>Vpb][Q
%!inLU!e$>D,,$;COo_I.DVCHS1?95;`tDDp=m[?,J\@tmL:@$n-+>M'NPXmZnDC9p6<t=#OVek!'Pad\`E0"\I8RU.?:r^E-5pj3
%SX2(>j)O\&@i=A$O54NJF?%i2n*FmTTdI`a7JJ2SCEfOHN?4TB5!lT6Z!L@@SCa`s11iWjOY4HC@IGimq*PX&FLuDOn>0W\h\?\_
%3T-9fS\skReX_oQ)4%9-]OuML)=-r.WuOMIaYGd>oXO`2Y_1mtX0Ad2>@*%MmokjslY2#R[^)PB9BE)YCq(0V";W4r`pqXD/nW\/
%`nO//Ml<L&JCrTtWQ'@3^Yc0=J)fT1Z*MId:/lK\.W72"Y%@"`18GdZ]/K7k;4T6k<^W`YkT%t,DL^,H+s*uXDJ.Hi!Gh2F>7lEg
%8PMpk##[J#8Wlu8mTi_=6j]j+YDi$H<,A^PL(i%;)@Te+llZg:NB9/X4]HkMAK=8I,/J\_Le!Lhk1PIm>371f3;2S^fW%@HaMR=p
%rMlo,*##CCV2t.,]r-LH:%s,l,/Ge5B^fC:Dp#,3@.BZ2-X+\"Yi0UXG`8Y>bu1#`HR8bO8dedEhd6/V"g]UJi]&5V&fZ4jTB5R.
%E/IZg;BjJt-QrFl]W[<\"e`;jXJK:bje@TFCo3>UKf1;t(OA2ZioopcrEDoRA^Qfth*9\9FmL5AD^+f(en7k6]n_J4YWS_(ZOn0'
%Z/A"hQbNR?37#(jGG`<gVh]ELl,YLB%E+XjU"l+f2&Q*O/Y1Tg)*$:B9hN@/#.a,KqU`ZuT+s(Cphe%8W[E43qb7$!?e8NLIH>Us
%ZZ#ur^-&)j>P8?6^Y2IV`1OUfII@^A0;0sdrMNknBRoI7YBK?Z\ad4K'&rZ-PDNcTHf39(e:R])&9d4Zfh/+GnPWp2;D#c\,.a#_
%TL>C>>>A3n][1DO+*XmFE9YCTmp4bU[m!@^6tWU?a/Rf$(Fe&1c/kiJ3'G-'J<]YVZgdjk%$?a/[d%1$ErEI[F1Mi,]K*TaE*M1p
%rN!g]i'iDGhHIeJ>2IU-7U\@CRh""Har<KJi,"hC2nWZSY73_0-)"HF=.o:.R/U7CGL".@f%)Ujh7D.`R>^_Z0Pg264E"VJob5WY
%La^IoltZJGP_W=Fl<D7!kj,t&JRFFV:U_V^]SGPDp=TNn[5$>mn!t-Mk83DV5>J4f?4)#ea*&,I/7)T+PFk`;L!=)/LQP%@<29/9
%RH`ttn]/32Vp8s-WqGET,"qLY9[WH@jV_J+khR>S9"=u2<]r!O<-Pj(T59uiQlQ%b$<pXX*?T,W'Z@J1HT<UlOjS4>3<Kc*]k!`P
%&I'2XQP5k7c(WZ9c1POqTRZNIO/e-uD?Z8WrPK]cIYlDoLh:G>YIa\?IeW"(lq^!s>2MjO(#WFt3,IPD=@3*[-\7bI>T*-]7JL\S
%FGM!(nR#DTicXXPV5B,>A5Y;4dF`o$[$0uH;]a23NA#=`O79WD($(*spd'BH<\,n\(\6lSFKR/Qr?S3=n\P7l2bTC97sF@hc/N&"
%#.UZhZt5@J[5a4.gWXF)116<)bTR6cH?GMM@h%YbMuUmpVkDRmot\cICWt5nj]"BdrM[FVgIag.#eP`<a8TIkO#a)Lg=l4`-.@6t
%GnIL8I$o<H#HT8k05dXb;]r)bqt+'T4D?C6Buk5Ro]jbQ;Q/'bjTT4)Req_-s7>.8EMJM?Y4HO,>r1X1HTBrLYsIH)S\#PhSc(.b
%E.Y)>ir5UQjVR)5Irt'BHWjCjKelaRj6g8]6GC%fg04(C%[,4*ZYUgJ8C#q80d7Ha\)"HgU]\9IQ)\ZF&'gSnCqe2;,)q=QheK/Z
%c><]f;R?m5ou,<I$Ga/__oUZ9ePM%$PYUFOpZ]G>n3;COh^^<p\A;#FQr,(C'ROkaGEUWf!WaUm&ag4eEYg\9j4q!.W/q@cZIWnU
%$7^b[Xd!Xec8sg.K)C'sBqU!#b49U5%_Vc:D=.4?GE6OjgWY8VbuEuk8p9i1T+mfBWTs"?fCC3Q/>oc<%FTO#fo1HIl(;e(ebA:X
%0EYtk/AJ$1??X%r?_W3DL<9&AJ.ml&nnm'!ZH+\(neXBrfC?dO6QNmNn9O?]T9#GV0LE_hp&!)6kKhUdp5CNhWP?13>J_?HZ+e@;
%_,m2H!RSBngu"On*h$$7^P'VR[%8^Zh_JKU^HG!h39!#/%SP5tMTB<H,,^t7P1Y+p5]FFc?q8mBg9_imm3IOtCoT;X7I1,u[Ej5*
%OWtpl]THm`22sY7[@nqjr59.VLO$W?!05MuaKh;nCH28\k)2HgWGn[EKl=6fi`:OKC/a%AVS;D@NUe9\qXudG9f6L__$X(>G]BX6
%2n%^q(=t?;M`F5Z;gJqEeUGSGd6q(gSMaZk'94]e;o.V/',p/E*M0[Ve9+sp/C%VSgi9@C5kHqur9OnUMeOq\RV>Ppq);reIgEKP
%kLoU`,P[`(p.k?0l7EUG,;&'J`hJ33T'ZctL@@G:]7"SPlt5#rI,hn8qk<m:(K=97/!QS&3-np^8E(9b\);OJj)N,<EK?&.C<E]n
%*HC/eEebabZ?.3?b'.YbHH(#SCW3:s0OO9,^RY;-fr;T;m__2E@bPl[VXgcs#S2%Gq0Q$Q*5M!%cp`@$A&ijoUa&_NPFUUH?>`<N
%1`ciropXDE$.bS,D&%*tWa`Ah?;GSGK)d.2NS;\PX$=V>S"/lRQt0&_Se"fo;a\Ag->0s:'."f_0O)`%**B9PbLCLUPcUNGIH<Pg
%3H'_]EVc85B#_+QgIh[EbPKGId`b4nB##6rF9@3bYo?#!"g*FMm<9tuc'>,E3K[9E%_X7%m?C@!qk<GUCtXbB\^ECe[+MWXC!^SR
%LUf=EG+<1!9ApZ?#&!hadD8[b(<]Eu:O6E/H#opNG&1O52u&7j>&6E>BtsYhHRA6X&W@PlT-_g'msO9IUVGUNQ`T$20WF/t^^V4e
%EWn&JZ_ecDg9M%pFm8mQofq1W3#7\n(L-^TY>W9o5L%LSQK?0909-t'C'kki0hg#BGUGg9+fCBiR'2@`")7'3g]";sXMAdN)S!55
%Y;GD:7))K.O&_`B+\1&*HFml%J@"8%r*%>GoiF9@dj5FJk\9a/`@6ZZ$eMYB<#B7.W_0r4m`BEA2Es_Tnh%@CO&-uAg3opLi;J`m
%SU/&a\QU#_'_O!9/_+_,Z*s&+>A4S9)TX:In_/o7cRqf)$0pd9a/:TkF,S[>c=_F1@k=u*JgcQ<'/KY4&(rgnm<UPJU[^Gr3:PCJ
%8L?$^8Lm']j`tlQ04=21PPa*U\dDM73il@^Cj<<HbLU!DinE:1Ik+:oCc.'sPCOfp%Wi1DO^VOfls2WN"0C>1Rsf`+CGsMeC*=/D
%7iAL&<*M0pgK8/$8I+E[Pje?1k&I,>]RF5#\.]XmmK7[8*lI5BgFN&Z428K#1R!ZprOub+FA7nr<*ikC2==7"7hP/K1aStQOsjDl
%[!_C$F'O&7$/AIKfgY5JaF*g$Q%d,<%N;=]'nQ,%DCpD&KFmQs!d*70j`88af^OD?N7B!>Nb)i/j9Sm`MUVo]?Jth\&7#A,(nqfT
%atH:Mc&h_/e*<0<*%8VFlhbofc1cWeFEBXf'=g'+Q1-JlXi\hR/'$]E;cfCu"]!'m"KNi%&USZXd;^!(Q1"XNc<N/V@O#iHiHcso
%otL@OU]:,jlfu3r"4>f?X7`8n^XmjYV(<<bJrIXH2W#RV@kVP>o5<8AO,5>ZMYK&*h0p1k/j_S1fU9\/hX!qe41mhFEU9;Yqh!>A
%qI"B6PugfG)(cZiYP?S*86E@9FX!9"]_-)$k#?o67e*knmm@Y)i#1QtMUS'e':#-`0\SZ\Q!?gHHXtZsqtZuM/4bfc[-!1pr?Z:[
%^37VmUB``NIR="m.M+)VgWn^@*k^[%e6[Y"jF;X7C<go7Cp_4&TBi=58$LP'K6ko4.G^WY9&4o,H>]U`S6>E`->,Sh,C"a9N[*!5
%"CY9Uq;gVV/FJ9AB-mpBN\O.3\sod><9'IfdfPsPp^U0obT89,*O7"Of1!+>-]ToGAZos[)Jb&!S.JDm6!B^1Isc6c^+27q8WaqA
%]ssf6bUjuSa*,"W(oZRCg1CI59C@5_gMYCFDQb>K/l:hQ?>gh-i5jL$Vq$3dLbO"5GQRl7c8f4__=<bi<M/C%Tbt$b$=Ah&*JMdD
%.Z-GTpn.LsiJg:0D=mI=W[%M]]Y4,:6g-eMQ-S"3T<;Gt(;oL*268T/9/K=3J&&3/YPmW[kd?#]\WIP)+hAq7k:o:pGE:Z$%rn`'
%Sb-bgN:;YiPNLgeOtF=ha#j7idXUts!E2%b?EA']6K?lph9"8MPO'HB&CAK*T]nX\[n/dEoLZGu-alH>i9>Ao-UR:]D#:759O"u.
%.Y'o-h.Q3Ti&6YTjjs+("(*^(>DR/;H39;0lhDiWpZ-f[7+1gZs-nN:p%Nt/J"6Q!J+o$(pODf/s7mc9kq@P^1ApbDoABT&J,$eW
%e)12;s5uWEdm*_Jrp>41qu?CTr:9U^plG43J,"MArTTYuqbR7]+9(<8s/1AAjZiZ-rr)j%(7b"lpuh\T^\^7o+9'rCoD]!T7ZI]~>
%AI9_PrivateDataEnd
