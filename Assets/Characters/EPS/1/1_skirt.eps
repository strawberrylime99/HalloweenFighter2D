%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1_skirt.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 86 50
%%HiResBoundingBox: 0 0 85.4583 49.0995
%%CropBox: 0 0 85.4583 49.0995
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 9 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:55:45+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:55:45+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:55:45+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq4&#xA;kAEk0A3JOKvJPMf54XV9q0vlz8tdKPmXWY/huNQJ46fbnpVpKrzp/rKvgx6ZEypmIJe/5Vfm35kA&#xA;m82ed54Vkr6mmaQTawqp6LzVVD/7JD8zkDKR5BmBEc1h/wCcWfJjpW7urqec9biWdmkO3chVH/C5&#xA;Gp94ZicO4oC8/wCcYtNsgZPL2uX9hcA1Uxz0AO3gqH/hsiZzHcWY4DzsJXNb/wDOQHkNhJa6+Nds&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:47aa2b8c-05c5-0743-bb73-ab5c473c159f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:47aa2b8c-05c5-0743-bb73-ab5c473c159f</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:4ab6d558-5d02-42de-8536-e3ce2bbf1825</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47aa2b8c-05c5-0743-bb73-ab5c473c159f</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:55:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>85.458266</stDim:w>
            <stDim:h>49.099417</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -49.0994 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 49.0994 li
85.4583 49.0994 li
85.4583 0 li
cp
clp
83.5645 35.8191 mo
82.8775 33.7263 82.1724 31.6486 81.418 29.59 cv
81.2354 26.779 80.6514 23.9675 80.2447 21.1955 cv
79.7173 17.5998 79.6504 13.5066 78.2178 10.1267 cv
75.6382 4.03829 69.9185 4.76534 64.6231 6.75607 cv
56.3506 9.86593 50.3672 14.0979 41.0376 12.6447 cv
32.6031 11.3308 24.4322 7.48214 16.4854 4.50802 cv
14.9883 3.94796 13.254 4.9548 12.7774 6.4128 cv
12.6036 6.94552 12.4297 7.47823 12.2554 8.01095 cv
11.4292 8.70284 10.9981 9.90011 11.2676 11.0373 cv
9.70073 15.8303 8.13091 20.6223 6.5728 25.4182 cv
4.76469 30.9856 2.39507 36.8108 2.73393 42.758 cv
2.87456 45.2317 6.42583 46.2775 7.30962 43.6901 cv
7.90923 43.6848 8.54985 43.4987 9.18169 43.0481 cv
10.1797 42.3361 10.876 41.4587 11.42 40.49 cv
13.1724 38.5979 15.1915 36.8474 17.6558 36.3806 cv
18.4024 36.2395 19.105 36.2688 19.7769 36.4109 cv
20.2295 37.175 21.1758 37.5066 21.9957 37.6311 cv
22.1758 37.6584 22.3521 37.6721 22.5254 37.675 cv
24.5054 39.0466 26.2608 41.1198 28.1167 42.4192 cv
30.1094 43.8142 32.1485 41.739 31.9336 39.7307 cv
31.604 36.6486 35.523 31.8947 38.6807 31.7859 cv
38.9395 31.7766 39.1421 31.7937 39.3238 31.823 cv
39.44 32.7863 39.6539 33.7439 40.0162 34.6936 cv
40.2188 35.2238 41.6231 37.7204 42.9629 39.1135 cv
43.628 41.4602 44.3765 44.3791 47.5284 43.8176 cv
48.4766 43.6491 49.1753 43.1565 49.6421 42.4992 cv
50.0118 42.2917 50.3658 42.0305 50.6661 41.6604 cv
53.4332 38.2492 56.7818 35.59 61.2212 35.4895 cv
62.129 35.469 62.8995 35.4587 63.5997 35.3498 cv
64.0284 36.0534 64.4566 36.7575 64.8853 37.4616 cv
66.2251 39.6623 69.3311 39.3816 70.2603 36.9865 cv
70.5308 36.2898 70.7637 35.5861 70.9751 34.8786 cv
73.6558 34.9592 76.4317 34.4548 78.4913 37.7121 cv
80.0264 40.1394 84.5948 38.9582 83.5645 35.8191 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.717647 .54902 .501961 rgb
f
11.815 36.5842 mo
12.8624 35.0866 14.2925 33.6858 14.6866 31.861 cv
14.8306 31.1941 13.7994 30.8811 13.6822 31.5383 cv
13.3809 33.2312 11.835 34.5769 10.6221 35.883 cv
10.5743 35.8781 li
11.1407 35.1838 11.7715 34.4924 12.1524 33.7009 cv
12.2906 33.4143 12.0357 33.0432 11.7076 33.217 cv
10.7535 33.7234 10.001 34.6389 9.28178 35.4275 cv
8.75395 36.0056 8.24858 36.6027 7.752 37.2067 cv
7.29887 37.2126 6.85161 37.3859 6.48784 37.8088 cv
6.37065 37.9445 6.25835 38.0842 6.14165 38.2204 cv
4.92632 39.6667 3.46684 40.9631 3.46342 42.9655 cv
3.46001 44.965 5.61772 45.7785 7.10991 44.6579 cv
9.30864 43.0061 11.4449 40.7922 12.0225 38.0207 cv
12.1392 37.4616 12.0298 36.9831 11.792 36.6169 cv
11.815 36.5842 li
cp
.486275 .341176 .333333 rgb
f
50.9439 24.0393 mo
50.7339 24.258 50.521 24.4792 50.3052 24.6984 cv
50.0562 24.6735 49.7974 24.7102 49.5494 24.843 cv
48.4766 25.4187 47.7095 26.175 47.1744 27.2741 cv
46.8873 27.8645 46.9429 28.4055 47.1846 28.8112 cv
46.9869 29.1848 46.8272 29.5764 46.752 30.0075 cv
46.6304 30.7111 46.7671 31.257 47.0411 31.8991 cv
47.5621 33.1218 47.9068 34.073 47.5665 35.4758 cv
47.4634 35.8996 47.6734 36.2067 47.9688 36.3244 cv
47.6592 36.3479 47.354 36.4655 47.0938 36.7087 cv
46.938 36.8542 46.7925 37.0022 46.6524 37.153 cv
46.5899 36.7038 46.5313 36.2497 46.5186 35.7805 cv
46.4981 35.0329 46.4063 34.2961 46.1729 33.6477 cv
46.2676 33.3308 46.3575 33.0134 46.4356 32.6687 cv
46.6119 31.8874 46.354 30.9875 45.8516 30.3108 cv
45.8448 29.5393 45.9165 28.8103 45.5191 27.9978 cv
45.104 27.1496 44.0376 26.6975 43.1333 26.9089 cv
42.1529 27.1379 41.7007 27.6638 41.3335 28.3557 cv
40.8345 28.2092 40.2759 28.2317 39.7457 28.528 cv
39.5542 28.3108 39.3404 28.113 39.1426 27.986 cv
38.8741 27.8132 38.564 27.6936 38.2349 27.612 cv
38.7618 26.6423 39.2881 25.6818 39.8233 24.7541 cv
41.2071 22.3562 37.92 20.3386 36.2569 22.4646 cv
33.1475 26.4401 30.9082 30.9314 28.836 35.5031 cv
28.7666 35.2634 28.6802 35.0363 28.5596 34.8484 cv
28.1333 34.1843 27.3736 33.801 26.5948 33.7605 cv
26.2823 33.7443 25.4815 34.1067 24.8687 34.3737 cv
24.8067 34.1594 24.7002 33.9455 24.482 33.7214 cv
24.3057 33.5407 24.0513 33.3176 23.7911 33.2238 cv
23.8355 33.073 23.8755 32.8664 23.9092 32.5886 cv
24.5914 31.1189 26.5704 28.8122 25.6875 27.1374 cv
25.4903 26.7619 25.0591 26.4563 24.6221 26.4655 cv
24.0264 26.4777 23.4273 26.6247 22.8331 26.862 cv
22.438 26.4851 21.8555 26.3142 21.3716 26.6521 cv
19.6861 27.8317 18.1343 29.1091 16.7149 30.6013 cv
16.4585 30.8703 16.356 31.175 16.3545 31.4714 cv
16.314 31.4914 li
16.1998 31.5705 16.085 31.6491 15.9707 31.7282 cv
15.4766 32.0686 15.2032 32.6584 15.5079 33.2331 cv
15.5899 33.3879 15.7261 33.5227 15.8848 33.6281 cv
16.2242 34.6525 17.5323 35.3591 18.6128 34.4265 cv
19.3165 33.8195 20.0225 33.216 20.7286 32.6115 cv
20.6451 32.8225 20.5787 33.0368 20.5445 33.2541 cv
20.4395 33.9152 20.5733 34.5295 20.9444 35.0759 cv
21.2886 35.5832 21.7164 35.6853 22.1529 35.8625 cv
22.3707 36.9011 22.7437 37.6599 24.1343 37.7087 cv
24.4454 37.7194 25.2334 37.6311 25.7876 37.427 cv
25.9249 37.7326 26.2574 38.0168 26.4541 38.1862 cv
26.6407 38.3469 26.8599 38.4641 27.0904 38.5295 cv
26.9502 38.8303 26.8306 39.1428 26.7339 39.4524 cv
26.2486 41.0085 27.6919 42.7995 29.3677 42.3166 cv
30.1753 42.0837 30.8121 41.6189 31.3609 40.9987 cv
31.6192 40.7053 31.9073 40.3796 32.1202 40.0437 cv
32.2476 39.8161 32.3619 39.5817 32.4639 39.341 cv
32.3658 39.5515 32.3819 39.5442 32.5118 39.3195 cv
32.8155 38.8479 32.9234 38.1779 32.7505 37.6154 cv
32.751 37.465 32.7403 37.3132 32.6973 37.1584 cv
32.6568 37.0661 li
34.0074 35.1755 35.2168 33.1169 36.3697 31.03 cv
36.4644 30.8952 36.5376 30.7985 36.5542 30.8059 cv
36.4468 30.76 36.8877 32.2009 36.898 32.2175 cv
38.0625 34.1384 39.7457 33.3484 41.1407 32.3537 cv
41.1543 32.4001 li
41.0982 32.5232 41.0469 32.6486 40.9869 32.7702 cv
40.481 33.82 40.5098 35.323 41.377 36.1482 cv
41.3843 36.427 41.3794 36.698 41.3916 36.7453 cv
41.542 37.342 41.8931 37.8 42.3189 38.2307 cv
42.5943 38.509 42.9439 38.739 43.3243 38.882 cv
43.2652 39.1032 li
42.6631 41.1613 45.605 42.2517 46.502 40.6027 cv
46.6705 40.6198 li
46.981 40.9411 47.3404 41.1286 47.7627 41.2985 cv
48.4659 41.5813 49.0694 41.5241 49.7588 41.2282 cv
50.9019 40.7375 51.004 39.1423 50.2613 38.3015 cv
50.1382 38.1623 50.004 38.0451 49.8594 37.9411 cv
49.752 37.5119 49.5874 37.1071 49.2544 36.799 cv
49.0123 36.5749 48.7198 36.4235 48.4151 36.3567 cv
48.5713 36.3191 48.7232 36.2307 48.8487 36.0803 cv
49.8365 34.8947 49.9634 33.2702 49.8545 31.7946 cv
49.7691 30.6442 49.8213 29.8654 50.459 28.8244 cv
50.7784 28.3039 51.0279 27.7736 51.2515 27.2258 cv
51.7745 26.6906 52.2969 26.1545 52.7774 25.5798 cv
53.6529 24.5319 51.8882 23.0564 50.9439 24.0393 cv
cp
f
75.5953 30.1047 mo
75.5005 30.4909 75.4434 30.8791 75.4092 31.2697 cv
74.169 31.3889 72.9371 31.5305 71.7481 31.737 cv
70.5982 31.9367 69.8716 32.2097 69.3248 32.5471 cv
69.6163 31.9182 69.898 31.2859 70.1495 30.6438 cv
70.2769 30.3176 70.3819 29.989 70.4761 29.6594 cv
71.6387 29.8034 72.9434 29.2893 73.3995 28.0232 cv
73.8497 26.7717 74.2051 25.5061 74.5059 24.2326 cv
74.8584 23.2605 75.2476 22.2985 75.6749 21.3366 cv
75.7242 21.6477 75.7754 21.9577 75.7984 22.2824 cv
75.9854 24.9362 75.7974 27.5163 75.5953 30.1047 cv
cp
84.0235 32.57 mo
83.7354 31.6989 82.9727 30.802 81.9478 30.8484 cv
81.8345 30.8532 81.7159 30.8596 81.6016 30.865 cv
81.4605 30.3532 81.1963 29.7981 81.0235 29.5173 cv
80.7681 29.1008 80.5152 28.779 80.2164 28.5285 cv
80.3101 28.4035 80.3916 28.2678 80.4419 28.1115 cv
80.5674 27.719 80.521 27.3591 80.3682 27.0539 cv
80.6685 26.8283 80.899 26.5236 80.983 26.174 cv
81.3326 24.7185 80.7447 23.2502 80.0401 21.7898 cv
80.0835 21.4309 80.1255 21.0715 80.1485 20.7146 cv
80.3262 17.903 78.8643 15.6101 78.8897 12.905 cv
78.8965 12.1535 78.5791 11.4885 78.0957 10.9963 cv
77.7374 10.0109 77.2383 9.04513 77.2164 8.05489 cv
77.1807 6.44894 75.4825 5.52755 74.17 6.37814 cv
73.6626 6.46407 73.146 6.69405 72.9097 7.17257 cv
72.1202 8.77267 71.5948 9.82296 71.7706 11.613 cv
71.7828 11.7409 71.8331 11.8518 71.898 11.9533 cv
71.8443 12.2727 71.7891 12.592 71.7374 12.9109 cv
71.1861 14.8322 70.3389 16.6413 69.502 18.4704 cv
69.3287 18.3855 69.1265 18.3313 68.8926 18.3215 cv
67.1485 18.2487 66.8941 20.7072 68.314 21.2038 cv
68.271 21.3122 68.2242 21.4192 68.1822 21.5275 cv
67.4239 23.4875 67.4019 25.4245 66.8667 27.4338 cv
66.6402 28.2873 66.316 29.1154 65.9454 29.9275 cv
65.8887 29.7385 65.8399 29.5495 65.7808 29.3601 cv
65.2593 27.675 63.3638 27.4426 62.253 28.1794 cv
62.1363 28.1491 62.0269 28.1491 61.9126 28.133 cv
62.543 27.7448 63.1167 27.3322 63.6788 26.8298 cv
64.4087 26.1775 63.8677 25.2038 63.1275 25.0549 cv
64.4039 23.6926 65.523 21.9768 66.4356 20.7116 cv
67.3335 19.4665 65.3907 18.3 64.4634 19.446 cv
64.1324 19.8557 63.7867 20.2868 63.4415 20.7282 cv
62.9097 21.3772 62.3624 22.0134 61.7681 22.6062 cv
61.3912 22.9817 60.5977 23.903 59.9161 24.3195 cv
58.731 22.2575 55.4092 24.7126 53.6905 25.882 cv
52.7173 26.5442 53.4454 27.9416 54.5464 27.4973 cv
54.8155 27.3889 57.3072 25.9655 58.3169 25.5315 cv
58.4551 26.5754 59.0235 27.3698 60.168 27.1125 cv
60.1338 27.2932 li
60.0923 27.6745 60.3008 28.0061 60.6001 28.2053 cv
60.2188 28.3059 59.8482 28.4514 59.4854 28.6379 cv
58.8619 28.4812 58.1856 28.6003 57.5552 29.1262 cv
56.8785 28.2922 55.5411 28.0525 54.479 28.8322 cv
52.462 30.3122 51.4878 32.6735 50.6373 34.946 cv
50.3809 35.632 50.6529 36.2629 51.1304 36.6828 cv
51.3306 38.614 53.667 39.5979 55.1939 38.2707 cv
55.5982 37.9192 55.9571 37.5246 56.3028 37.1184 cv
56.8291 37.072 57.3755 36.8513 57.8946 36.3747 cv
58.5865 35.7404 59.2515 35.0827 59.9058 34.4133 cv
60.1499 34.3044 60.3804 34.1525 60.584 33.9426 cv
60.7315 33.8161 60.8643 33.6867 60.9844 33.5525 cv
61.3697 33.1906 61.7745 32.8361 62.147 32.4626 cv
62.3296 33.1384 62.502 33.8176 62.6641 34.5066 cv
62.8467 35.2863 63.3443 35.7683 63.941 35.9895 cv
64.2022 36.4206 64.6446 36.7483 65.1436 36.9265 cv
65.0713 38.1569 66.2041 39.3923 67.6001 38.5964 cv
69.8321 37.3234 71.5176 36.1672 73.2071 34.2258 cv
73.3189 34.0974 73.4009 33.9567 73.4624 33.8112 cv
74.0552 33.7107 74.6915 33.655 75.3409 33.6472 cv
75.3394 33.7395 li
75.2569 35.3025 76.4458 36.0593 77.6285 36.0046 cv
77.8228 36.4074 78.0616 36.7692 78.3418 37.0539 cv
78.5542 39.7492 82.7623 40.5544 83.5352 37.6814 cv
83.9747 36.0466 84.5738 34.2365 84.0235 32.57 cv
cp
f
32.0152 27.7878 mo
31.9209 27.403 31.4253 27.132 31.0645 27.3093 cv
30.7144 27.3991 30.4122 27.6086 30.147 27.8899 cv
30.1426 27.6408 30.0831 27.4216 29.941 27.1706 cv
29.731 26.7995 29.21 26.5847 28.8184 26.8254 cv
28.6612 26.9226 27.1739 27.8117 27.1456 27.4499 cv
27.1319 27.2834 26.9942 27.1901 26.836 27.2551 cv
26.4512 27.4118 26.4253 27.8659 26.7256 28.1457 cv
27.2442 28.6291 27.8916 27.9602 28.3931 27.9626 cv
28.3624 28.757 28.0694 29.9021 28.8516 30.2868 cv
28.7344 30.594 28.6285 30.8811 28.5303 31.1208 cv
28.0406 32.3142 29.9292 32.8952 30.4278 31.7302 cv
30.7344 31.0134 31.0518 30.3034 31.4468 29.6296 cv
31.7906 29.0432 32.1866 28.4904 32.0152 27.7878 cv
cp
f
26.0542 23.8703 mo
25.8082 23.7766 li
25.4029 23.6223 25.0992 23.862 24.9927 24.1804 cv
24.8648 23.781 24.459 23.4792 24.0259 23.7707 cv
23.8409 23.8957 22.8233 22.9885 22.4229 22.9963 cv
22.2159 23.0007 22.0254 23.1706 21.8531 23.2536 cv
21.1333 23.5993 20.7901 24.073 20.3594 24.4738 cv
20.4507 23.9797 19.8511 23.5608 19.3624 23.7732 cv
17.753 24.4724 16.3624 25.6882 14.9864 26.7614 cv
13.7491 27.7263 12.4522 28.3903 11.9996 29.926 cv
11.9336 30.1496 12.0923 30.4401 12.3521 30.4304 cv
13.8819 30.3723 14.7789 29.4187 15.9634 28.5046 cv
16.8086 27.8523 17.6768 27.2141 18.4903 26.5197 cv
18.6802 26.6076 18.9058 26.6218 19.1036 26.5149 cv
19.9102 26.0778 20.6685 25.5676 21.4522 25.0915 cv
21.5992 25.0017 22.1163 24.612 22.4336 24.4509 cv
22.3804 24.5471 22.4512 24.7121 22.5816 24.8059 cv
23.2974 25.3215 23.8667 25.5417 24.6954 25.0339 cv
24.8565 24.9358 24.9419 24.8005 24.9913 24.6574 cv
25.0489 24.8322 25.1734 24.9875 25.3921 25.071 cv
25.6387 25.1648 li
26.4581 25.4763 26.8692 24.1799 26.0542 23.8703 cv
cp
f
12.1656 30.5485 mo
11.9698 30.5407 11.9566 30.8449 12.1529 30.8532 cv
12.3492 30.8615 12.3624 30.5568 12.1656 30.5485 cv
cp
f
33.2374 21.4973 mo
33.1988 20.4963 32.4927 19.8899 31.5103 19.8913 cv
30.4151 19.8928 29.4786 20.5568 28.5513 21.0485 cv
28.4874 21.0749 li
28.6309 20.1609 28.8272 19.2551 29.023 18.3513 cv
29.2305 17.3938 27.8809 16.9201 27.5499 17.8781 cv
27.1031 19.1696 24.9405 23.8274 28.1153 23.4441 cv
29.1563 23.3181 29.9766 22.5036 30.9224 22.1369 cv
31.7896 21.8015 31.5093 22.1042 31.4317 22.8942 cv
31.3765 23.4548 31.3775 23.7409 31.7271 24.1892 cv
31.8555 24.3532 32.1436 24.3942 32.3199 24.2912 cv
33.1768 23.7888 33.2735 22.4167 33.2374 21.4973 cv
cp
f
50.1578 23.5119 mo
49.8301 22.7771 48.92 22.861 48.2427 23.0056 cv
47.8379 23.0915 47.4537 23.2512 47.0757 23.4138 cv
46.8633 23.5046 46.2876 23.8576 45.8711 24.0144 cv
45.9053 23.8405 45.9634 23.6633 45.9922 23.5573 cv
46.1172 23.0993 45.4756 22.7522 45.2144 23.1901 cv
44.8721 23.7649 44.4283 24.5388 44.7886 25.1823 cv
44.9117 25.4025 45.148 25.5744 45.4087 25.5734 cv
46.2374 25.571 46.8301 24.9699 47.5313 24.6003 cv
47.9307 24.3899 48.3736 24.2116 48.8248 24.1555 cv
49.2715 24.1008 49.649 24.1897 50.0313 23.9235 cv
50.1734 23.8244 50.232 23.6779 50.1578 23.5119 cv
cp
f
54.2754 24.1882 mo
53.7247 23.3816 52.9839 23.0144 52.0191 22.9138 cv
51.6294 22.8728 51.6026 23.4875 51.9932 23.5222 cv
52.7315 23.5881 53.5005 23.9231 54.1084 24.342 cv
54.2002 24.405 54.3428 24.2873 54.2754 24.1882 cv
cp
f
18.7706 29.5051 mo
16.8492 30.3757 14.9664 32.0354 13.316 33.9348 cv
10.1592 36.1486 6.95464 39.447 5.01128 42.5315 cv
4.08696 43.9992 5.9478 45.3459 7.21831 44.3864 cv
9.02983 43.0183 10.5796 41.2434 12.1719 39.6252 cv
13.5171 38.258 14.959 36.9704 16.1968 35.508 cv
16.772 35.1696 16.8687 34.5251 16.667 33.9528 cv
17.8042 32.9245 18.9351 31.8845 19.7989 30.6233 cv
20.2681 29.9382 19.4498 29.197 18.7706 29.5051 cv
cp
.360784 .231373 .235294 rgb
f
25.1426 36.2946 mo
24.9034 35.8816 24.5816 35.7585 24.2652 35.4519 cv
23.8941 35.093 23.7686 34.8029 23.2325 34.6447 cv
22.7525 34.5031 22.3194 34.6193 21.8428 34.5573 cv
21.8658 34.4553 21.8887 34.3537 21.9122 34.2522 cv
22.1158 33.0036 21.4888 31.8825 20.3731 31.3132 cv
19.251 30.7404 18.169 32.342 19.2969 32.99 cv
20.1958 33.5061 19.3667 34.365 19.4205 35.1726 cv
19.4605 35.7702 19.7071 36.1032 20.1368 36.4953 cv
20.42 36.7541 20.8257 37.071 21.3013 37.1784 cv
21.7681 37.2834 22.0831 37.1569 22.4009 37.0022 cv
22.5357 37.1823 li
22.7261 37.3698 22.9488 37.4275 23.1714 37.5583 cv
23.2076 37.571 li
23.2105 37.6013 li
23.3414 38.5241 23.565 39.4123 24.6607 39.5026 cv
25.0787 39.5368 25.4117 39.2365 25.5591 38.8762 cv
25.8765 38.1008 25.544 36.988 25.1426 36.2946 cv
cp
f
26.8873 39.5241 mo
26.8829 39.6237 li
26.8873 39.5241 li
cp
f
48.4117 42.7043 mo
48.3487 42.0339 48.2945 41.5149 48.0337 40.8737 cv
47.8184 40.344 47.1744 40.0183 46.6338 39.9909 cv
46.6304 39.9909 li
46.6602 39.6218 46.6675 39.2712 46.584 38.8737 cv
46.3868 37.9333 45.5313 37.323 44.6158 37.2404 cv
44.2388 37.2067 43.9498 37.2917 43.6749 37.4016 cv
43.2725 36.3786 43.084 34.5847 43.0503 34.0778 cv
43.023 33.6677 42.8697 33.3576 42.6553 33.135 cv
42.6114 32.7131 42.4649 32.3093 42.1929 31.9978 cv
41.8311 31.5832 41.3838 31.4104 40.8296 31.4177 cv
40.5992 31.4377 li
40.5079 31.2229 li
40.3443 30.9519 40.1382 30.7483 39.8672 30.5886 cv
39.7925 30.5578 li
39.752 30.4006 li
39.565 29.9372 39.1573 29.5891 38.6705 29.4782 cv
39.17 29.3938 39.6797 29.4411 40.1841 29.6071 cv
41.5069 30.0422 42.1783 27.927 40.8438 27.5534 cv
39.8672 27.2805 38.8873 27.2307 37.9082 27.5319 cv
37.4317 27.6789 37.0049 27.9035 36.5967 28.1862 cv
36.4693 28.2751 36.2559 28.4934 36.0372 28.6652 cv
35.8775 28.0144 35.1255 27.6218 34.4375 27.9275 cv
33.6368 28.2834 33.274 29.403 33.5259 30.1994 cv
33.5845 30.3835 33.7227 30.5109 33.9195 30.5256 cv
34.3545 30.5583 34.7999 30.4226 35.1856 30.1897 cv
35.2945 30.281 35.4161 30.3513 35.5425 30.4094 cv
35.4712 30.6218 35.399 30.8337 35.3277 31.0461 cv
35.2769 31.1955 35.2627 31.3366 35.2632 31.4724 cv
33.8555 32.5012 32.771 33.822 31.7002 35.197 cv
31.0538 36.0271 30.4356 36.8737 29.8199 37.7268 cv
29.6426 37.9719 29.4473 38.2946 29.2398 38.6345 cv
29.1021 38.6364 28.9659 38.6765 28.8384 38.7443 cv
28.8189 38.7077 li
27.7388 39.2111 26.8462 40.2351 26.6065 41.4314 cv
26.3731 42.5949 26.9756 43.4875 28.1597 43.6579 cv
29.1211 43.7961 29.6177 43.321 30.2325 42.6599 cv
31.3736 41.4338 32.3804 39.9519 33.4146 38.6335 cv
34.7164 36.9734 36.5127 34.9753 36.6124 32.7658 cv
36.8614 32.7971 37.1109 32.7751 37.3536 32.7146 cv
37.5249 32.9001 37.7325 33.0256 37.9624 33.1091 cv
37.9737 33.1565 li
38.0884 33.6052 38.3487 34.0241 38.7325 34.2907 cv
39.1465 34.5788 39.5132 34.6067 39.8887 34.5686 cv
39.9986 34.8044 li
40.064 34.9089 40.1373 35.0002 40.2173 35.0798 cv
39.9893 36.8269 39.9253 38.7873 40.6626 40.3322 cv
40.9512 40.9372 41.4761 41.4616 42.107 41.7282 cv
42.0982 42.2966 42.2408 42.7404 42.5171 43.2551 cv
42.8575 43.8879 43.5699 44.3977 44.3111 44.3864 cv
45.0684 44.3742 45.5362 44.1423 45.9957 43.8596 cv
46.6553 44.9782 48.3614 44.509 48.4615 43.2395 cv
48.4786 43.0222 48.4566 42.8523 48.4117 42.7043 cv
cp
f
76.7354 34.5246 mo
75.4996 34.2766 74.2564 34.114 73.0259 33.8693 cv
72.9551 33.6687 72.8697 33.4724 72.6758 33.2859 cv
72.2549 32.8791 71.4527 32.5998 70.9097 32.9826 cv
70.0249 33.6057 69.1797 34.2517 68.4019 35.008 cv
68.1871 35.217 67.4288 36.1945 67.0298 36.7048 cv
66.7535 35.6936 66.0469 35.0378 64.899 34.5671 cv
64.4712 34.3918 64.0577 34.1721 63.6255 34.0056 cv
63.4156 33.9245 62.6119 33.9025 62.002 33.8762 cv
62.0625 33.1516 62.1431 32.4279 62.1416 31.6916 cv
62.1402 30.8352 60.9893 30.0974 60.3194 30.8459 cv
59.9581 31.2502 59.5865 31.6438 59.2164 32.0393 cv
59.2144 31.26 59.1519 30.4846 58.9605 29.7146 cv
58.7608 28.9123 57.8038 28.8513 57.3365 29.4328 cv
57.0874 29.7429 56.8892 30.0744 56.7115 30.4157 cv
56.4522 30.2712 56.1167 30.2492 55.8184 30.467 cv
55.3091 30.8386 54.7623 31.1604 54.2178 31.4846 cv
54.2779 31.2644 54.3096 31.0398 54.2608 30.7995 cv
54.1543 30.2819 53.5669 30.1989 53.1963 30.4704 cv
52.4786 30.9963 52.6148 32.1218 52.3638 32.8908 cv
52.1973 33.3996 52.7017 34.091 53.2749 33.8816 cv
54.1817 33.5495 55.0372 32.9748 55.8453 32.3762 cv
55.6036 32.924 55.3287 33.467 54.939 33.9787 cv
54.2915 34.8293 53.5528 35.6281 52.8062 36.4143 cv
52.1143 36.2102 51.3204 36.4441 51.0972 37.2839 cv
50.8829 38.0876 50.8125 38.4885 50.7139 39.3186 cv
50.6446 39.8952 51.0528 40.2268 51.5137 40.2829 cv
52.2569 40.9152 53.6592 40.8327 54.1739 39.9343 cv
54.8516 38.7541 55.4659 37.4924 55.9439 36.2165 cv
56.3614 35.1008 56.5406 33.7937 57.002 32.6599 cv
56.9908 33.3752 56.9859 34.091 56.938 34.799 cv
56.8775 35.6731 58.0738 36.2917 58.7066 35.6198 cv
58.8379 35.4802 58.9707 35.343 59.1026 35.2033 cv
59.1133 35.3347 li
59.1797 35.7922 59.6255 36.2639 60.0699 36.3747 cv
61.0679 36.6237 61.8423 36.0866 62.7286 36.3156 cv
63.5821 36.5359 65.1456 37.4172 65.3838 38.0837 cv
65.4463 38.26 65.5601 38.3923 65.69 38.4997 cv
65.7935 39.2717 66.4424 40.0227 67.4385 39.8733 cv
68.4039 39.7287 68.8365 38.8669 69.4312 38.1853 cv
69.9624 37.5769 70.5401 37.028 71.1456 36.509 cv
72.6216 37.1179 75.5245 35.7277 76.7852 35.0842 cv
77.0005 34.9738 77 34.5778 76.7354 34.5246 cv
cp
f
76.4795 12.405 mo
76.4756 12.5051 li
76.4795 12.405 li
cp
f
80.9996 27.9216 mo
80.8184 27.073 80.6685 26.2165 80.5367 25.3205 cv
80.5044 25.2307 li
80.4463 23.2092 80.0655 22.382 79.6192 20.4436 cv
79.0713 18.0676 78.6187 15.7605 77.9043 13.426 cv
77.7256 12.8405 76.7603 12.6652 76.5948 13.3713 cv
76.5411 13.5984 76.4991 13.8005 76.4537 14.0085 cv
76.3682 13.8186 li
76.1602 13.4421 75.7984 13.3386 75.3999 13.3767 cv
74.024 13.5085 75.46 11.9318 76.2164 11.0051 cv
76.5635 10.864 76.835 10.508 76.7525 10.0578 cv
76.71 9.8215 li
76.6436 9.45626 76.2676 9.15792 75.9014 9.15109 cv
75.1856 9.13693 74.271 9.43429 74.1124 10.2346 cv
74.0108 10.7414 74.1353 11.1623 74.5572 11.4743 cv
74.7481 11.6154 73.3326 13.3991 74.0147 14.1071 cv
74.0826 14.1779 74.3374 14.32 74.5186 14.3889 cv
74.4234 14.5495 74.3414 14.8845 74.2974 15.0178 cv
74.1651 15.4157 74.1124 15.8596 74.0059 16.2663 cv
73.6573 17.6027 75.3394 18.3567 76.1099 17.6408 cv
76.1602 18.3303 76.2764 19.0573 76.4673 19.9484 cv
76.8184 21.5881 76.5103 22.8122 77.6177 23.8215 cv
77.4219 24.5427 77.314 25.1877 77.4278 26.1462 cv
77.8033 29.3225 78.1456 28.0075 78.6841 30.3166 cv
78.7745 30.7043 79.0669 31.8464 79.2989 33.1052 cv
79.2583 33.3454 79.2037 33.5832 79.1158 33.8147 cv
78.9937 34.1379 78.9996 34.4275 79.0874 34.674 cv
78.3975 34.4235 77.5108 35.0969 77.9356 35.9421 cv
78.4551 38.4616 li
78.397 39.4699 79.4849 40.0656 80.3443 39.6535 cv
84.2676 37.7722 82.0791 31.926 80.9996 27.9216 cv
cp
f
72.6241 18.799 mo
72.1695 19.3654 71.8106 19.9704 71.5025 20.6106 cv
71.0088 20.6618 70.5474 20.9528 70.3472 21.5681 cv
69.9908 22.6633 69.2139 24.1516 69.3121 25.3225 cv
69.3545 25.8298 69.5953 26.4099 70.0874 26.6486 cv
70.0723 26.9167 70.0562 27.1848 70.0655 27.4563 cv
70.0816 27.9416 70.733 28.3991 71.126 27.9484 cv
73.1158 25.6696 73.9019 22.6887 74.9966 19.9182 cv
75.5884 18.4196 73.4937 17.7165 72.6241 18.799 cv
cp
f
68.5113 31.3469 mo
68.8047 30.882 69.0821 30.424 68.9146 29.8391 cv
68.8096 29.4694 68.5298 29.2541 68.1563 29.2097 cv
67.1016 29.0837 66.2344 30.4201 65.629 31.1276 cv
64.773 32.1286 63.9351 33.5329 65.396 34.4992 cv
65.7339 34.7224 66.1431 34.7722 66.5201 34.6823 cv
66.6807 34.7058 66.8477 34.7146 67.0225 34.6897 cv
67.7803 34.5827 68.0074 33.9353 67.8526 33.3586 cv
68.1792 32.8005 68.4458 32.2258 68.5313 31.5583 cv
68.5113 31.3469 li
cp
f
52.0113 25.3039 mo
51.1885 25.7483 50.3516 26.1525 49.4971 26.5319 cv
48.7803 26.8498 48.004 27.2898 47.2173 27.1272 cv
47.1456 26.9275 46.9742 26.7761 46.688 26.7917 cv
46.1915 26.8195 45.7002 26.8791 45.2193 27.0119 cv
44.6988 27.1555 44.418 27.3889 44.0538 27.7692 cv
43.7955 28.0388 44.0274 28.405 44.3711 28.3708 cv
44.7725 28.3303 45.0967 28.3337 45.4991 28.2224 cv
45.8716 28.1193 46.25 28.0544 46.6363 28.0329 cv
46.7286 28.028 46.8082 28.0036 46.8799 27.9699 cv
48.3819 29.1828 51.3345 27.1482 52.6036 26.4226 cv
53.3082 26.0192 52.732 24.9148 52.0113 25.3039 cv
cp
f
23.9878 29.6814 mo
23.9429 29.6838 li
23.794 29.6569 li
23.6846 29.6604 23.5743 29.6638 23.4649 29.6672 cv
22.2452 29.7058 21.8204 31.4441 23.0757 31.8503 cv
23.6875 32.0481 24.1661 31.9309 24.6768 31.5622 cv
25.4297 31.0178 24.8838 29.6516 23.9878 29.6814 cv
cp
f
31.1871 13.9694 mo
31.0547 13.737 li
30.8624 13.4006 30.4239 13.1472 30.0279 13.2683 cv
29.9249 13.3034 li
29.92 12.8337 29.8765 12.3801 29.5069 12.0139 cv
29.0645 11.5764 28.3731 11.5056 27.8023 11.6789 cv
27.5762 11.4616 27.2652 11.3415 26.9356 11.4426 cv
26.7818 11.49 26.6348 11.5554 26.4922 11.6316 cv
26.4122 11.5564 26.3184 11.489 26.2002 11.4382 cv
25.3018 11.0534 24.7637 11.1945 24.1402 11.4714 cv
24.1499 11.2043 24.1421 10.9367 24.1592 10.6696 cv
24.1778 10.2258 23.7017 9.99239 23.356 10.153 cv
23.4029 9.63888 22.982 9.13644 22.4742 9.07736 cv
22.42 8.95333 22.3599 8.82394 22.2803 8.67696 cv
22.0499 8.25167 21.4707 7.92648 20.9795 8.08321 cv
20.4214 8.26144 19.9668 8.49288 19.5499 8.77071 cv
19.3453 8.44698 18.9961 8.1965 18.6138 8.08566 cv
18.5748 7.64278 18.2359 7.33321 17.8516 7.26144 cv
17.5523 6.64278 16.5147 6.40011 16.0684 7.11691 cv
15.9424 7.31905 15.8287 7.52706 15.7081 7.73165 cv
14.229 8.76144 13.5582 11.3601 13.1099 12.8698 cv
12.917 13.5192 13.46 14.0979 14.023 14.1921 cv
14.0059 14.302 14.001 14.405 14.0206 14.5002 cv
13.8985 14.9109 13.774 15.321 13.6495 15.7307 cv
13.1324 16.8698 12.6265 18.0134 12.1509 19.1662 cv
11.3091 21.2058 10.1016 23.4172 10.3941 25.6076 cv
8.91216 28.5739 7.62212 31.6023 6.50298 34.7815 cv
6.15337 35.7751 7.60307 36.1711 8.02104 35.2688 cv
10.4117 30.1106 12.9454 24.4797 16.0005 19.3947 cv
15.8438 19.757 15.6929 20.1223 15.5503 20.4895 cv
15.1094 21.6193 16.669 22.1545 17.3116 21.3142 cv
17.3487 21.3376 li
17.9561 20.1975 18.6211 19.115 19.3008 18.0451 cv
19.608 18.0847 19.9273 17.9817 20.1143 17.6701 cv
20.8951 16.3679 21.5401 15.0568 22.1524 13.6853 cv
22.461 14.0559 23.0577 14.218 23.5352 14.0266 cv
23.6421 13.9836 23.9302 13.8488 24.2588 13.696 cv
24.1246 13.8308 li
23.3238 14.5852 22.1783 15.4372 22.1207 16.615 cv
22.065 17.7453 23.379 18.2116 24.1871 17.5739 cv
25.0552 16.8894 25.6778 16.0661 26.4527 15.2898 cv
26.9097 14.8322 27.4117 14.4069 27.9483 14.0451 cv
28.064 13.9636 28.1905 13.8991 28.3121 13.8264 cv
28.2149 13.9377 28.1607 14.0822 28.1578 14.2644 cv
27.9356 15.0056 28.5679 15.571 29.2745 15.4792 cv
29.8521 15.404 30.4014 15.1325 30.9146 14.8567 cv
31.2193 14.6926 31.3643 14.2795 31.1871 13.9694 cv
cp
.886275 .721569 .686275 rgb
f
39.4307 14.5495 mo
39.0826 14.0891 38.6099 14.0012 38.1119 14.0979 cv
38.1133 13.9338 38.1001 13.7683 38.0557 13.5979 cv
37.899 12.9895 37.313 12.4079 36.6436 12.4265 cv
35.9395 12.446 35.3433 12.7185 34.7847 13.0759 cv
34.3672 12.7483 33.7564 12.6882 33.3438 13.0915 cv
33.3384 13.0866 li
33.2076 13.2453 li
33.1534 13.3064 li
33.1358 13.3317 li
32.9234 13.5876 32.7242 13.8493 32.5606 14.1276 cv
32.4566 14.2507 32.3575 14.3752 32.2374 14.4929 cv
32.1353 14.6364 li
32.1465 14.528 li
32.1275 14.4734 li
32.086 14.3581 31.9854 14.2282 31.8438 14.2385 cv
31.9009 14.0671 li
32.0225 13.7776 31.5425 13.6179 31.4322 13.9167 cv
31.3199 14.2209 31.481 14.3425 31.5347 14.6106 cv
31.5718 14.7971 31.8067 14.9089 31.9737 14.8108 cv
32.0342 14.7751 li
32.0469 14.7614 li
31.8414 15.1276 31.9097 15.5075 32.1373 15.7854 cv
32.2056 16.1692 32.4317 16.5715 32.7652 16.7336 cv
33.9815 17.3259 34.732 16.6931 35.5879 16.0974 cv
35.6485 16.3391 35.8511 16.5275 36.0787 16.6081 cv
36.6065 16.7951 37.1504 16.5017 37.6187 16.2663 cv
38.1978 15.9748 38.8931 15.801 39.3951 15.3938 cv
39.6626 15.177 39.6148 14.7937 39.4307 14.5495 cv
cp
f
54.3736 12.9045 mo
52.2857 14.3518 50.3326 15.9621 48.5215 17.7434 cv
47.9175 18.3366 46.8267 20.0661 45.9165 20.091 cv
45.9395 20.0905 47.3448 17.4973 47.6895 16.9973 cv
47.9424 16.6301 47.878 16.0925 47.5835 15.7702 cv
45.9375 13.9729 43.2779 16.5715 41.9165 17.9221 cv
42.1709 17.1599 42.3379 16.6618 41.8062 15.9831 cv
41.6255 15.7526 41.2886 15.6848 41.0171 15.7385 cv
40.3018 15.8806 39.6929 16.2649 39.0445 16.5886 cv
38.191 17.0149 38.8746 18.2121 39.7251 17.8728 cv
41.2261 17.2741 40.0127 18.1203 39.4141 19.1628 cv
39.1236 19.6682 38.7442 20.1325 38.6255 20.7121 cv
38.524 21.2087 38.6353 21.7317 39.0943 22.0178 cv
40.8902 23.1379 42.8677 20.5866 44.0879 19.5359 cv
44.7476 18.967 45.376 18.3381 46.1197 17.8762 cv
48.0367 16.6848 45.316 18.9328 44.8819 19.6027 cv
44.587 20.0578 43.9693 20.7766 44.2627 21.4109 cv
45.8194 24.7697 53.8687 14.6345 54.8184 13.3884 cv
55.0181 13.1267 54.6524 12.7111 54.3736 12.9045 cv
cp
f
68.3873 11.7688 mo
68.3785 11.6682 68.3692 11.5676 68.3609 11.467 cv
68.2901 10.6711 67.5899 10.093 66.7959 10.4797 cv
66.4351 10.6965 66.0518 10.8449 65.6509 10.9392 cv
65.3438 10.5808 64.9092 10.3215 64.3926 10.258 cv
63.252 10.1179 62.3462 10.8088 61.4913 11.5984 cv
61.0601 11.2658 60.4415 11.1867 59.9927 11.6477 cv
59.7759 11.8679 li
59.6714 11.7336 59.4532 11.6799 59.3248 11.8156 cv
58.0206 13.2014 56.4639 14.3835 55.0757 15.6901 cv
54.878 15.8767 55.1636 16.1882 55.3614 16.0007 cv
55.8877 15.5012 56.4224 14.9851 56.9668 14.4787 cv
56.5269 14.9528 56.1172 15.4504 55.8047 16.0246 cv
55.6431 16.321 55.6431 16.6193 55.731 16.8816 cv
55.4493 16.7277 55.107 16.695 54.7789 16.8903 cv
53.9234 17.4001 53.0533 17.8884 52.2403 18.465 cv
51.9297 18.6858 51.5171 19.1291 51.1651 19.2385 cv
50.8741 19.3283 50.7354 19.2277 50.3457 19.197 cv
49.8321 19.156 49.5284 19.7302 49.7383 20.1599 cv
50.1602 21.0236 51.4781 21.2805 52.3775 21.0647 cv
52.7134 20.9836 53.042 20.8415 53.3633 20.6609 cv
53.5113 20.9377 53.8697 21.1984 54.1924 21.1716 cv
54.3331 21.1486 li
54.3062 21.4768 54.3238 21.7942 54.3619 22.1345 cv
54.4727 23.1189 55.7745 23.3137 56.4136 22.7688 cv
57.0245 22.2478 57.5928 21.6994 58.1358 21.1081 cv
59.2369 19.9084 57.4947 18.0305 56.4224 19.2453 cv
56.3277 19.3459 li
56.2852 19.2966 li
56.1006 19.1325 55.9263 19.0485 55.7549 19.0085 cv
55.896 18.8044 56.0391 18.6027 56.1724 18.4055 cv
56.3677 18.1154 56.3677 17.7912 56.2613 17.5041 cv
56.5923 17.6726 57.0064 17.6701 57.3785 17.3474 cv
57.9605 16.843 58.524 16.3151 59.0865 15.7878 cv
59.3809 15.969 59.7247 16.0642 60.0625 15.9865 cv
60.8912 15.7976 61.1846 15.6125 61.8272 15.0573 cv
62.2046 14.6721 62.6016 14.3078 63.0181 13.9651 cv
63.3829 13.844 63.6377 13.7009 63.8072 13.5402 cv
64.1226 13.8083 64.5337 13.945 64.96 13.7971 cv
65.8213 13.4978 66.5987 13.2668 67.2984 12.8034 cv
67.8521 12.7668 68.4439 12.4069 68.3873 11.7688 cv
cp
f
34.1153 18.3322 mo
31.9961 19.7292 31.0376 21.7775 29.855 23.8332 cv
29.7383 23.7458 li
29.3848 23.5808 28.9722 23.6648 28.6177 23.78 cv
28.4332 23.9157 li
28.7364 23.5481 28.6924 22.9475 28.2613 22.6897 cv
27.8609 22.4504 27.4546 22.2194 27.066 21.9611 cv
26.7315 21.739 26.355 22.1296 26.5152 22.468 cv
26.7193 22.8977 26.8931 23.341 27.0767 23.7795 cv
27.2867 24.2824 28.0079 24.3405 28.375 24.0026 cv
28.4048 23.9577 li
28.3628 24.1877 li
28.4078 24.4553 28.4043 24.7629 28.5279 25.0095 cv
28.6221 25.198 28.9776 25.3562 28.9737 25.5354 cv
28.9507 26.4924 30.0005 26.8449 30.6949 26.3337 cv
31.627 25.6477 32.2183 24.5041 32.6119 23.4367 cv
33.1446 21.9929 33.6768 20.9006 35.0372 20.072 cv
36.1236 19.4109 35.1665 17.6394 34.1153 18.3322 cv
cp
f
26.0069 20.2531 mo
25.4781 20.2292 24.9913 20.1862 24.4834 20.0324 cv
24.0699 19.9074 23.6343 19.5993 23.1944 19.6276 cv
22.9239 19.6447 22.7237 19.7692 22.6236 20.0256 cv
22.3438 20.7424 23.0103 21.4187 23.5811 21.7463 cv
24.2764 22.1452 25.1456 22.1589 25.9263 22.1735 cv
27.1607 22.196 27.2457 20.3088 26.0069 20.2531 cv
cp
f
77.6651 34.1521 mo
76.9195 33.4318 76.2696 32.9406 75.2906 32.6955 cv
72.0381 31.8801 71.2789 34.4455 69.191 35.9831 cv
68.5997 37.9089 67.1333 38.2092 64.7911 36.883 cv
64.2393 36.0764 63.688 35.2697 63.1368 34.4636 cv
62.6197 33.8972 62.149 33.1525 61.3633 32.9138 cv
59.1187 32.2331 56.4087 34.5666 54.8672 35.906 cv
53.9576 36.6965 52.6709 38.8562 51.5279 39.322 cv
50.5318 39.7282 49.5606 39.0349 48.3868 39.6706 cv
47.6924 40.0466 46.9922 41.6862 46.4141 41.8869 cv
43.0928 43.0398 42.521 38.0207 42.2164 36.1335 cv
41.5835 32.2102 39.9805 26.0539 35.2925 30.6452 cv
32.9883 32.9025 29.5079 38.552 29.0113 41.76 cv
28.9371 41.8371 li
28.4712 40.6599 27.3555 39.5891 26.4986 38.7873 cv
25.0323 37.4143 23.108 36.5676 21.7481 35.0715 cv
20.5957 33.8025 20.5083 32.7053 18.9112 32.113 cv
16.5733 31.2458 14.8326 33.4016 13.3169 34.9621 cv
12.1207 36.1936 10.9952 37.508 9.95122 38.8713 cv
9.34038 39.6696 7.46733 43.6335 6.63335 43.8659 cv
1.24516 45.3664 7.13335 31.5622 7.73686 29.8674 cv
10.6954 21.5588 12.1465 12.946 15.2881 4.69259 cv
15.4844 4.78878 15.6983 4.86593 15.9454 4.89962 cv
20.8746 5.57589 23.7715 8.28878 27.9258 10.489 cv
31.0474 12.1423 34.253 11.9065 37.6456 12.3576 cv
41.002 12.8044 44.0552 15.0803 47.4732 14.8176 cv
50.5157 14.5837 52.6128 12.3908 55.2364 11.1193 cv
58.6968 9.4421 62.6509 8.89523 66.1822 7.2756 cv
70.0582 5.49777 73.2012 4.63448 75.668 9.21554 cv
76.6363 11.0149 76.9742 13.1892 77.2896 15.1735 cv
77.8467 18.6833 78.1387 22.0197 79.4068 25.3752 cv
80.5645 28.4377 81.479 30.5734 81.461 33.9323 cv
81.4541 35.236 81.3599 36.5495 81.2496 37.8615 cv
79.9556 36.7683 79.0372 35.4768 77.6651 34.1521 cv
cp
84.563 27.5764 mo
82.9249 22.7238 81.9161 18.4953 81.0528 13.4401 cv
79.9429 6.94064 75.1543 -.769813 67.4595 2.06027 cv
65.8492 2.65255 64.5157 3.7673 62.9698 4.48751 cv
60.4888 5.64278 57.6968 5.87277 55.1509 6.83419 cv
53.1856 7.57638 51.6968 8.90157 49.837 9.7839 cv
46.8741 11.1887 44.4385 9.94845 41.5801 9.06515 cv
39.5367 8.43429 37.4292 8.38155 35.3199 8.18868 cv
32.0596 7.88985 29.9082 7.06417 27.231 5.2297 cv
23.7666 2.85665 20.2901 1.47628 16.1124 .903039 cv
16.0674 .901574 li
15.3223 -.262977 13.0713 -.458289 12.3384 1.26974 cv
9.23442 8.58712 7.57475 16.0349 5.51372 23.6638 cv
3.82964 29.9006 -.196731 36.3166 .00737015 42.9182 cv
.119675 46.5446 2.96831 50.2756 6.9395 48.7478 cv
8.731 48.0588 9.68755 46.3982 10.7144 44.8816 cv
12.6929 41.9611 14.7569 38.3474 17.7369 36.2307 cv
18.5318 37.0363 19.1778 38.1457 19.9624 38.8386 cv
21.358 40.0705 23.3316 40.9069 24.4854 42.3874 cv
25.8599 44.1501 25.3863 47.4812 28.0381 47.9939 cv
30.4952 48.469 31.4649 45.6999 32.378 43.9216 cv
33.3575 42.0139 34.1929 40.0339 35.189 38.1345 cv
35.8999 36.779 37.1602 33.3586 38.0748 34.7951 cv
38.8565 36.0246 38.4302 38.7478 38.9229 40.2238 cv
39.3457 41.4904 39.9781 42.6438 40.8345 43.6662 cv
42.273 45.383 44.5489 47.176 46.9024 46.571 cv
47.9068 46.3127 48.2906 45.7312 49.0474 45.0905 cv
50.4571 43.8986 51.209 43.9167 52.8399 43.2522 cv
55.813 42.0402 57.0503 38.3669 60.1333 37.0984 cv
62.6539 40.1501 64.7906 45.2116 69.4634 42.1701 cv
71.5933 40.7844 72.2403 36.6496 75.4898 37.9309 cv
76.2081 38.2141 77.2334 39.9626 77.9405 40.5544 cv
79.315 41.7043 80.7476 42.425 82.3638 43.1462 cv
83.6011 43.6984 84.8921 42.4973 84.9737 41.3249 cv
85.293 36.7326 86.0665 32.028 84.563 27.5764 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (1_skirt.eps)
%%CreationDate: 11/11/2019 9:55 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`IdY@aX4?Td?GioLp\<-3Ie)BgrVlNfZa4\a$?9c>ou`UtEW/t?50HC<<@B$Kb2]P#5J4LSq<!UeYFaU"
%s8Cp,o2i-1s2FEqf-`4q^NoCPr8u,hX4ug`?i=QFJ,\NnTB2O-?_srESisj%H1h$QP;g+$[BMB5c&;V\HauadJA8G(I/U)^de)Yg
%RlBnYEc7KIPMcC\5<i%LH2R:VIt.@_ZgZeaIe)XSX-`kPB/oS\='9J?jm@7foG;PS?gO:&5F#UDNjo&djG2o:oU3>a/G\V$TC$TU
%s18*`GA-fD=(QZ=j0@71s)N6=o],*Es'&:2q`"H/n%p^BF2%G/LhCrq+YUHpjO`6@E-E@RQCm^ofn6J8IJ;aClT]n!huUbrJ%0ps
%h=E"4DJe<[\uN9C/b,j`=VmP'KeeO3;2XHbV4?Y,l]nNMmX0po+c!RKIL0(i8_#Fs-0FpAB=EBd`U:Lu55F@7[0akGlSi07qu9(b
%C:]9o,W)s1V6t!Orr!ARDdWO^b@bbS$T$P+NpUakI<59jH>^F@c1<<IQDrp>s)uC(T"P'rp5On,X62]TB]Y(Ds4qUCGk()IJ%^OY
%4(h@bh06=]s7#<'n;Uud<U%H7F7PLbKrN3Z?%`49&Q+#9q\(D*G$j#,GN^t=lOQJb$PE!f]mf\BZ^8GBc$s&X[i+\Yf?_06-U@46
%WrL+p>h/(7l[S9/V&/"$\UE.X`qceK^R:tIEqPnTn`\HFD[rsW?s(.`5PHpi?HW1lrp!_bmJ7@m:2]U>GP5$Qq"hJ'jFV"tET>*#
%I]L5a?[qVD#PmI7?bcHr]3i8Lk?!]drUfrU=9!BSq]E:Chn47e"9$L4GQ7<MjW?_ArKPcYpP7?rT#s4WhrC6--dTO(ffO("htd+l
%Vn\L4q9T&tLKlJn5h+2-")U37r:0LVX7)o)lZj#Oitp%6]R99ra'XcErqb</ns_#T:[9TPipE4"53SR^2W%*8n1Hidm/Co`@J\MA
%*qei30CR\JD,4KQq9,hjJ&["%J,TOMmAni?\,YXb?$H5;caRharos?Pf)!4,rSkqg5KV>oqsp6F7ka'jf,dDbCYM4jr:&eCo4Qsp
%Ie)<eSitos?iTWoT6>^/p$2@_qh<pg-dBEdYAiSj*r=u*?i8BRkKgkl0ci-[Hm.>;m-4,r0E:nIS(i]i+/]#&QbRmHrH%]`m"Fs@
%&B1X#][tp<b<BcJFm2KgbC<;`q=5t]k0c&o^DbG'k'r"Zl%=B[k*\p"HPFt6ch[,b:IH)uqUn*HA"o]es7t>@0cP:Crp]:!m5d15
%^%`(Lm-`%]4o+N31T-l@ja,,B[B+'5MY6S5^O7\t[=/'q538-7T7$6(<m+jk&gPtcFQr39s1F'"^V,%EO1F$ulZLkI^Nob@+!3^N
%Y*-!5#Q.;T[=Zrci?*u!Q%)@+5PSFu'>m?>1+c3oWOViIfDF0lkU+d%m.tR,>Nee)r>rS"Mk/Zim*[.;cEc@lYTpm]aP6'rs/7kJ
%TB&Gh8&*(lGn#1[rGe+T/p-gniYOhlrpKULhsGmeqT6p!Z#6/BCkZe1Jo;NV$Rn0(n@-u#p\5^-;.FPZQX"r0'VV?T%Ms90q0sGM
%]$Ao!Nd)SIrO%i!BdYp$D;VK8IVR%X[Fdh;c,m6?;a&][Q!`$=F,e^O=)Q/HN`JP!9.mK&ipr'K7lg9GDNS_S:WbDIm,`23a\04-
%j-5RE*7A.'GuUfCaH9Ab_^Ciaai,2Z:@TH^]P;7[*YC2'Ld;LmQah^<E0B5u%W]YRKGLR-7GO8hP@Uc-r,G$6-S57Oa%;;d5KL*r
%j4_[HqW`tYGff%.em:C;I`*W'$P%C@:3%?9fLq"eV,QHU73ma1fd/YQPK2S_kE[&I:<QLpKDaCUf5`\h<K>9J/^]TOO*LTds5iIc
%Mn*j&l+_W-c+j-Y90`,/pg_@$Inl(rq<pWKrufATIP62RpMDPc\hA*"IE!u-K,j(f]^Un#-TMZWi,fQilRHoWaUnP@=,ZEAHJ4>u
%8!0Er*&nO>,%<hEJdeUmiT"k;3/T7-jOdD&Xt+t>Q_I_rEC2I2*qBI@X,BO%W>t$G62l?es*lUjP<W(H^W?Ek#S'6ijNh<qb#4OQ
%oD"G=i^jWF`e43Bj7S14(6QckOpTh.dL#_k-D*4DU%fjQg.,fO`'<_#UD*IEdWPHKj;*l]/<[Jd-P;^gP1jHV:14_@:XX*8E"m;T
%\J(`c<f?j"&golaKW-`ENp.hH(Z_WToYMd/85BDW[oN:q-t;FO<bE;.CDifb)6Y1C=%"8QS+NP9FHDWg+pj%jj7SDQL_kms,":*-
%;^[\j-W;]k<tuV.FuUJ%,6%!IU_E>s*l(#5G^\?hO%6aU9W)i%4S#J-qRJd1:.I>:k=2>1(Bo?*TMcBLBfGqR38U1FETH=7*$>Lr
%56jLX@>Z7.8Nok_PemWu],'@X&0<9\\G&<Y#@.lh[L$sU0n0$k`#1ekdM[B=q2st5#.'c`drRQ<.TOPl_#n3pi+Ht6G*L*j_iBr4
%gcJ9<Ya7*(eB=A<'bB6`giKK)g7C!pftEdB_)aRsA-CT9kj3(^)V;J!h(Hb4E-&O?p5o@e9dbQ)j[_9D(^Tp?]TN[-/i]T_O6Fsp
%>#+^bX;iuXU4#$a(a/&iI'a:q?>:K1%+K=XW*)P.O!0^4Hc(lWiFhoL,P+k="<C14NXgSk`s^mH\6Lj8oI6(,&RL8HIRJ(a6rXM7
%6W^&CA>(u%Orc&FGVle.j+PFj`WT)-lBq,G3ef*a"1>%93)E&6+Ce4g,!f$L=:\p_TjkijEH.\hJ`:BC6[LG98#iI#5?K4MQ9C?o
%;/V65Xik(<^f^lR'[C_9.#1/&WE:U+,*T>iRQM(:oKsg8RI!g3bG@dB+!$JsK?2!=g_(8Y9=IBQ*\VQ@LeO@-=:QNdfCIQDT:VnF
%UIZXGU4nL7QC,?;/nH\:LC@&@ZJrBmSE+Bd:p.@!'O=JX$sDX!@"]ND%)F,CRitltj@uJ[Y]sDGB2gK%8btDc_<?fr5t2':";Zd:
%`BfiFKhK:FMnq9;JWf+8LOnGuS=IeW\Mgc>djteLNDA&@Qm>1afKDrlC*lNJ6/pB:&Q8c9akk5R(aI-r&P"'6bmuZp.a<ua-AOBU
%j!`@sL.9'1aO/ZXrb;`,\fJ<HAg"?I2$/!X#2F>7n<3&9OZ-15q]g!AS@#3hC#5fG9]&HC5`m0L7<F8TPG63$d^TFQXhN_"J7,>o
%mWnmUG5ZbK!<;QZjc^LihsA(b-M/eCJ;`f8qp_0fDM`VC&!CV.-8YZEHJ"(6&4M)b8iVW-L7JlE^mYP`ES(V$`,[LTH4kS@M=;i(
%@o4^"e484$Sk9g!Ft[WcWmaKBg1WQE?&Gq@RZ(4+Kdq(<Fa32pY>!N]r9E:r(Z'Gbm7V=P<S,b@2&0-HEMtjb>,LGP/\J+I<7RtR
%;g"uFY7.hJ._bngf0a?n<J4WqY/eYERsnc8Sdou?&-;9ENc=NEpDdmo:lX=UjElr.rulU!ms"HB%_:W;cYa7RjGja3n);=M45P2$
%jP)ZA.=keqf.&/q.uX216*)il/:1NmTNaOlO@&>TOCdfK(:YJ[?)E>gN?U]<1bBC)PnY-b2"f)*K5"D$d-YPgSZ$I+j!<o[9!(HZ
%9c!&4W]:u2?2L^8fm]<!C65DT2N4o_&>L`u3biT1fPu$=bS9B_=>46$eP`_FerM^,B@gagiAceV3:!kf[-9m*D&Fs[Rl$Y5s0Wp,
%/Oqobd[c$EOVlGn7sXT$f0et.ht(N"5NIjn39,FJ#N,'f5B=e?r:;#jNpkCEP<Prik4!8>Bt28gfi+N!2(8;HM%O$)$Hd)mX$sZp
%-g#THh,7sp^i=I<(*aj=8Y:f3kfaq2DW(I3V<a@KX'B^S4IDU^3n#QeBGH4<J7Wkj@Fd!-mc4i5U=r$fTG;]R[ENUg7&-!+"5&?V
%eFh$k*HSAt2B#*QW/]B]lCB^?FQ#4.4GF/+9InqK9U\TAGZT7*rO?44]j'fNd.-pls&+(==2A77*?#%d4<cqk9Pp['lron[i;>Mr
%=mUY'[V4Bs0j\f1Mb,dr(C^V=WD^bWL>Cq81Wuf_?oN5O8N\dW[Of!"PN4F^]0LcL$ORP4JZp*I:Vj9l6=U0/!FW&LJm37cd<!ZT
%Kq;KnO@AP+#Rah<HYnJV%?X+hJ?$00,#TF]$msLHeO#-.Wa=p.UX/HoVHnb@-T66VoX7.7i,c#lea,<@*miJf3O`n(+0gLhF1cI^
%/g"k>jl55:Xa0+B+*,FC+*8P)i!19C`s876TBVAAUYOY[*,kPV(m^Y5'5lUik&ci]D_`2n9L3m83?CUW!/]iJ4F0>fa2=JkBI3`E
%#^ujOD"Ohc5u0b;!'C:+!pimb;h<4=@q?!f.`?$$k6B]uBN$I>%W4H5g75rQ6CTd@C%19F8";UIEH[FB@86te($\c&;rQ$87:@]4
%:V`P?MiAX7'cdGXe6,bZa(:;IS)"_f]iMOL1"p)V>!A1ug)0J&it,FU+]VOS;sY:hW?-J&FdT#+RVl$RER;(>r+JKDZc.7B,>Lb]
%*9TP(4lhVJ7_Cn>brs,3XiF:>O5kkR_a=pEj+GXh#L9o"a;l@MmXLfihV<M0.%`B>B8uIbUO9('Ib#p>29KQknl_`8\iZ?M)6(^+
%s'5T]a8_;_$:Uh*7JpI=\44V^Ek.n'WQ8=VMd)93Hf6Uo;ADC?r=GSk$'kri(Ka)7NCTKrpG9.fEq6OEnLD."<T2BpqDC_0OaQ$]
%jXU%+2V4K!Y$\M,58XhOT24D5aX;%sjC28%p&g-8X3PAql!%riB4S&X8rt%+720fT?>On+bESKDrquT6j-fe^ESRN9&,Il-5821;
%@\XK7=d^[+Tf>T#XDpmQCJ)_)^K_Jq:N8Tn==G<U9Y?^nXS`H,/u6,/`O?-+?Uinqfj@.c"7B!p)>0WiT)BZop3T#@msTcoio9&+
%,40"VA<Ut2$2Yb]aGM1cPqXl.if7HK,R_2;`PjZQ"F#ck'aFr]&\a-UFVWCPUs$D@"`u94=**j\&]dD^lBk@YYs;;,!NIB];Dc6Q
%_:qZA(?$Wq[+d@aCl5(@=<=MS$jHd>`U[%eBCuB=QAI5_XHH&=Wog60E-a=G;`-d^S"&+_0=>GiSn.\hR%(,OWBEU+=GA;G<9Gg_
%Asfg^[/+jLj$n)j+$Ve<EgY[*$?j@-Ulf>l\ZFP\hDq%[;0-%+@tP.r4H:3fqiNsHqRO0*\Bcp7%rhs%g\c[7c."m<jGnH<5482n
%a7m8f'BITG3J'uUoF6t'1jH/HVTa]5:%gY(FaGk1U\^lC`$FW1K>,]Pl/D8,BBR?$e'1DdbbgNre4HR3Pr'#`oMcjn?([L$h,AIE
%8.a:`C/#<4/2N++T8'M#CO!)E*6j\-)EP@3q6^BpHC3KKJ2kD>)YWT-D?R27"df?!'Jor/aX+iT6#,:JjJ*`s^0$ormr?RnC"H9)
%rh0RR6lYiIr19,0Zgta%;[o*`NkQQW*,DA,N$eMl@K)[[b0BVsRWI&QDWjqX*^;]?$V.l(8FJODgbD%g-l7niI`NPu[(YR7mlofm
%%lim'NrRaUlif2gVhUP@\*t#OrXTrmag5Mo/N;01s.88#ZMa\Z]:ZY4U)iC_reKS.YM`<G8e4^56.\P=a_RLJaRm4M/?Q.>k5?6t
%,kg"/<]UJN3i%uFUpPi>mQa@<[oXtl$RB!ZObt1Bd*Vt7aW9h:7OqS_+#n?H!6kbbTSEP*pLG,O[QW]3B.^8MpaDI=\q;)JjNE>6
%nXeWckj]bjNb:WN6'gJUP?$5i/7Ji+W,8P:k7RRQ[#!soA0hlROL,?$2+Uo%FDZ=O0jR,HO*^2U<?AE8Ffd]NO.)iaO7#sfh$gE-
%]r=*YPt/O]W9Yf7^_HpS+:=k9ZPKNDR4@M@H\q$5JSJc]Ng<J=o.nk:O0"(<_=EdAeH[V'hHN0K1]=2ieV/iHWp-n;3Z=A,=E*X:
%<-PAB9F'k1?)_]uXEc40e\[co8!?ZSTk6+3kpY#Cc]3*jh"d'oL'rdOpMfR\W3IFj:p[q.Gl6c6kLjj$pE=a.^fg,Ir("K]7anRu
%=L8O[Ks-p5>%Nk/C*&1Ri$.JhXcJZAo[j](7W91_FV6A0RAAiYA#_t4-nNPD$;omq']MN/F_!A33XaQ@U272D$Yq1IlRA#l+YaMG
%HIJ]2bG_]MW0Mk,Si]j%*BLiJ2+m-qFDlcR`dA2_r1XW6CGPPg__YGP")n[SJ3amrO#8*+*\*K2@8<M#6"4#Dl`i&2fr!hIb*$EW
%Sej+e.Y>6:13L(5b$2^4gERf`6]PL:V5]7=ELbm.a;s/`c<H@iq&sspe+Re%k<$E(nNNX'`ZAYBXpZaL`O6'/$;-YRI/scFUY,Ra
%^pUK?6F>]=mk=pY@QKQo8^$!N"Qf)$BpEisBs%a=`G36,<15[:-tnh#S<[$s726rL&.L]n.^in'gB*:>bdB%,BN'2qSee%K?Ff*$
%AoX`-CQqf.?</f\Nn3?L=*>GE?]/%IDfJ9[$1]+AChJQ8Uk]/UdW!A.mFEeS$"VuPG3YGPnKa<QaK0=6hFHQ,bq*`L]Ub/J6jf;s
%>1K9nnOE'NMtqZq%uD#@Q#I!eC__jBhRsRQmE!-hq!^]\:+&L5]^]c_FFs6<L;6*f=SSJMj?K=8BhKVg:QSnnV`+ila[KJ&rm^D[
%7Di%9NSO'J(dC+ISYOt#2TE;_nWJ`Xf1:D#EGiej0[g_E=S/iea2q#[US4?-1W[.!2N0CO<hkUc)4>((2p@r*=0l^$aat+1\7(2m
%)(&;=9X*hkH5.[>87lJ5H.>WhdkIH?R?l@l))2'o`RAVZ40?O`WJB%qFZPRAJoqLR=iJ<GJ@gU'neAH8Bk;0/8sr5KHB?5cNQ_]:
%Z^@Zu/SfS`>?FXW@u_4:%)Qo0\9t=(`#KWn\hSLJV2!*9A+C2+VYgqW2=Z%hf74tsf")VgYU8O5KVbrR(&;^&>L'Yf^PU?,/Ce7t
%F9/tnQ<#Xt>o8Uiq'7O^ESN3!c6%:`O'c2]M-p-An`peWlqu+nJTUaI.CAq0Qp`ipDChH+>c3bk8"WV#RS\9'W"'E29rO%Idq2BF
%VV4)=ddUY]jM@pHbIP[AI?rDVdGjoR,O&OU-/W5*/S5'k:4dYV#U?L/,q1-D*@W_VX=5$t?6m\#*_)K.a(-,k0rEY:VdU`j)aWj%
%IGjt.QCXB,0PeZ^XNSY\'qlGRLN*`9=fj-`j)Xl2[TL#[[`;U)3b7gGa5JVjK39MgYoc3ico[8pULJ\\Wr+I/;'h@]S5O]AbTgmi
%/^nG.*4M_%9tasGlq+14-jMHEUKK=:KSl@#FshS![95+s])_;PkZ5#o!m)'d!fLYRR-g&.PN^5>3KbF\it':#U_/@,6Nf2;=bmn(
%O;1ns2oV#SAHUZk^`W[m8oJt0&/uCkFs8M'GG!.O+=m#rIm2c[htA)j7NN&<EeF0+N<Qg>;UHqu!&>c/Pi@l=PsiX/:iq%(e,l2B
%Urhtb8Iaf7AjX:0"^stG_8%q]lAVEsoLLJ_SRt:V-aJ;gIkKkOG-Pkj".aT&^g^R/S)`IdBhkW4H=<u,h[X*/o$*#01UGB_jdl!q
%I4gIFhL'Lr6%C/7kb49*mQN3blh-7gT,?mAs0&L>lhV2?@Y;j1q!*L`q[TnchE=&S%:mhmX?QX_@]92WKu-!.q6?R]coY!o,#tnN
%aD+3n\uE3B>$Do>m29=NbgkWhs3^<hAc2'CRhf]@NAZCEjf"67L7>f/e1p'VF4,-u1h;#Ea[US944[kprj01mBcMC<V&qHA=(ttm
%PhEKKn_qB-bkWpT_1bT#AeXAg%h``mf=U">*h$8^mX!">:9Z74$gH)J*kC(rY*XUbG-g5"e/IClHhd,]&p0Q]mlK<gH$&ej#7L?`
%"*\"&6L=BfhSL*&oX:pLo:"SqWH1eL]td+&jmEcq?>$%U;d/VIU,#KVPqT"./2;pF'9@mVCFf?rhJhI''Y,N_h')saoWp;Fk6/0h
%:-T\poXAlCgAOQi4"$^*l[]\r`XNgQRe!L#e"$2[m)a'VM8,MUMbr&pMDciFbm@d8];r,Z0]LeH+o%o^"QNlfE6hXs0/Y_[V$:ke
%K;XB1*0q<:[^=u)M8Ap5"Q)cX^,HeZ.!?\S>Y#5$aFe[Vo4R*(+!ubi)]UsN$Jl3qcHM#e"+G$)mm7$CT!6rhc8eS=*3l#`Am8YT
%-/12FSTE7rq1c<bp71g>S2"_;s)Q-h$nrc9iIWq#E.2V^'[[i>%;9_FGT-hEgWcKFo^K;]HO[K39t9cQa5FqJ!.fOM@@6C/4E/?I
%:n^oD*EJDIkeg^0U&(rkF;mC;*Lq9%6Z!Cn'bA$H2#Xk-_t5uI\i2O8Z:tY=93hC4lJfG:`Vg87,[dd?]u?.tVW>oplK+7Rg$co`
%YoA:WpWuo)KWP#K+OPDA;Ye*i-jJMGNl\0D.Uk!Z*o:b]@@P+a?XglH9!fU//lm@JpcY^q98jA$R]Mlt$Q[9R%p3e'cl&3dY7Wk"
%l2%(=58FFsrZVV#c"@W#X-ldnY._A?2s)A72-6Bj\W5t)(d1rr>LM_S*40Tm?lP*u)1,OG-cI8p"u[qgHGO+JOFh2s`m*S=fc+bq
%HVL:FG<_)aT&4n/n"(23VAosa!L\=,"osg_1VIWp4coYkbYCm)daY8oQ=nuK1V\4`\?@5m*R=)FmbIj?/'aa5^Z>O!H>/6-F:#o2
%^I%p_Qfs]]HphobeA6XrUm1;mJ<.7!c9WOfnZ6%l:6[I3&u3_uRCO)0)A?fkc!RQ>ri"S!m#2@>P<K%^bi:N)/VgHukH[h@eTXH5
%N`4H*diI$tghN]t2^_ZOnifFGRtkSc%KipSI5A->3&CTGWRiqaHZ&A])+VZ)Jl/JJRE0UCOL)n4B$-+)GoSErpp>knBXS"Jdf"t<
%BVr\0Rk.PlZ<ihu/?W)UOl:gR$[Qmp>:+VJo")VpA;U@3Q"eK^8DN9>&Nt4ISV57HhNHpg2I-#A:u9COT3f'p8/%u50Pq@iMWqD$
%9U^3)(c%G3Cl1QV]rU;OX*PXS0*%+hJ,EuEIB97dDHLT<?<1j@7PD[C,nsHXP3m$"SbVArD_!G'MsYJ+)S95pFB2O(#Tp.h[dJ7F
%L5,I1\A9]t(U01b"^GVsWm$jQMPq(^H2OW$.0E5"@rHqLXp9]%1J4:gV;g[#8J13bk"Qo9RROL+TfC5g\1`11S#qVhQnp_mhBT_q
%aQk!nbaYB_HdoMEP63:Ygq'<UkJHZEE_MaWElZ'$Y@rEOjBN1qQa:6L*k]Csf.oZSc3dicYcV5&)TMuu%f>6BYa/Th/Yd=bNb9dM
%gSBSAb(='`-IkqGmF'ssh=eN01XI'GFtj%!/)\si)E'V&aU+RJ)K%<ede*6@jk_6"Wb5C=n9o%TMRk<rpgh++j_ihB@.0B2ASLg0
%XG/i!4s+gUGoRRe#s<r=RQ=4`O.ghhDMXT@cJoqN(B_g6g$e]l]6)@H-X')E<*cn[gTOl(O[KmLmSp]'[r)5GGApX9L2Q&OI/%">
%4[c3%au%s+=tfV33#IO_K3<)$ACc.E!W/P55M"Q3(QH*:>As5LN't3T.$q1k*]>(gl7[#<P;a/.'Zr2i2)Jm9g;Zph>>NN'\nd<&
%'EfPH14oQ^`SqT^m=`W198^N%E9=!3?ED`>C0Ih_5Iq[=k^.uRDbADkit%Vb_)?Yh_0S3O%%Qc^\&L"<2Z)!0g+Z#?c?2L0^AU@$
%SF>4lbT#L4%;j\@CAO5P<^BM3]E](XUrt,k$dS+R::&cQ@k/Y=E\\N#V'JbVrA?%.[XN@d]_](:e?MjFH)\;!1TWZ:\XA(?a0B!B
%Rt=1P(hjF)c(QDFU<2KL9%%/)M/G(t<qBt[H1!Y17Y(@!HaYsa`iH?33&bbDYha/6g4kIBlC+$Mb18+D>DZOsU6UUch'>Cthrp62
%9%P=u>pbL=^%52[ekkgPl\?OWobMpL(//S73IRELH]HX94iB:a=KJ8"BQ>Z#a[ScjAi<59;+^n4Dp/u>A"**cYhYW-3Yq$&P`:1h
%/3dqPJ$ZsP)m/Ec*85j6&+5!6bjIJ.kd`!,++ZF#fTV'afCLVFLMlb40-6h(.:hYPF(PB`T=2T,;sW6,B);4\Q)GV_@)9t`gQ$bb
%I\OGubCF7P[=.'8oa+^EG#>`RDZ/!%\E^GEBD"o-$\:KK]P[1>/IC@N:#=[XHqClG^bhnR>Ktd>hr7>D42[;#'!'5S-fpTPC/i<t
%EhZ$ZA70snS[_QcXp^5)^s*-F@&)BB.WoCG>U;,1\'EEA$@ac)Z)R9C$IA$8h3k@Me'ZrNaD_M(h@"VOP<ZmdQh-f89Zd=u>qbB`
%(Y^G8,BphkGqh]KIY(iYk<1IeK7ENrQX&2g@0bsL[rb:1"(?pRJ0A-NNE8B]AE%*1i=#^!C;M?]#*fA@H#Jn$pQ,VN"*^.2AF]_7
%&=N<h'#?E-pQ^P1-5/:ho,,cJ303)^P4Mf$UBrnn*RT.]cXT"ql=Q@.j#TY1[&BH`G95XeQeQe=k:rPufu@/GP\!h/*<ru@+777a
%3;8,<aU',+7j%DLgt.[\a*o*.Go,7]r0?0:bJ5Y4pB?gp8XO)*&X!i2&=GLojC+@1<@5/MTWo5-kb-!.E-p9D7.1$-()N0C)&N*5
%htPR5@r>GLqW/7iKObo@*l/[-nm:hQhs\.;G3U_^(?Ke]Xk+Y=#PPmt]$809`CMfZ,7&&c:_AUAr9KBL<p1H,>F+HoSGU[(q[5mR
%egQH?S!e,+\i)hMrHRMS'QWkVDl5k:lQF.R<31i.iD*K6Wl]GIc()IOR*<P&<3/RgGAVc-DmmC9%7K*!^6p']QcB#'`A31O3I1=G
%[j*8b^7UjXhM3O&n]C,I>=ZdXpJFuARDlYLg\Q*ZqlOeH^>m1O1"$1XXSZd0qG,DiC=f>*ir\,Zp>+l?gV2S0N,>B9n+c[?e`/[U
%dHu;+Dn:?uf;n<,C-#^ga=shHXi=O5ECZQ(KF(N80-.&,m4!AC@UT"ADF4kHC=2Q2=*'^Wq6@N4>Z>:r4Z$:Php!idf4<WhNh/uY
%Qs[V>Bm33G<mYOg3R)NlQAQ>D9c_<R.o#MtV0k:`p6J7<(^b%0X[gi@Yi8r8G&MTk-8`PT`7"i`X?1Q#T]81sj*lS":E>7YJ;9E(
%F5B92h@4hga*LI">S2\((Yh^O\_RAU&jY,OORkU8cW@YUhZn,K`LGp.!gMN+T)n>gYBeNq+tc-Fgt1OjB"$enQh&no%/7(JpW&>l
%@\js,I))o.B0^"]d(@Tmp*rqoN;"4DSu^l6](hJTc!H(3[o,--=l4;qH6[>Ae?jcP0C0&GJMM4*'l;;:Rg@q'&M%Co<Ap0dlha!6
%F@ROP:rgP4LMb:'Q\]k/`4Pcg]c\+8'=MQA]n)7+4SZ/_e-:kL3"mhRqJPNWP(`J`B(H.+hq?o@p9hWA2tXjTJF^DrG6b_GenE]<
%b%3*ZEl[4.`k*)!]=@Is--5W_i\t'D\)d<?2?%%"Q(8[tG;]m]SA]<B-gkH$*D@EY5u-4A1m(+N"tCSd*PEW8I2Xdc18DNp7F1cL
%biW".atk@Q!gMY"5ku:jHj;q4=XH>U`+PM5//)rcM18f]nmC6:^V!3>ELUe7r]0%TiqMZon3L5BK.i[L(^E(]LL/V+*m\*.fdW:$
%re=90iXT];CeOmLm*50P:tpb``8,OK&%^QEjPK(J$[I%?EqtJQq/0g$LKr].*0XZjHZEECNN-_bM$\Tg(ELsWr8hgQe0hc\HVV*N
%q57kDDZ=U`J,\NnT/"eQs8It.IE'&d@pko`Yg40=B+4,_#5/o:qi$)Sp2*%S*M6p&ZV5b4M9d$kVo$6Fjm1g<HMPPGB.r.)Hhm'T
%Im1L0o5>[7qX&M)?-qJWn`7ragXe*tMr4R(m?<$Goa21Vs6Iu+FB-9Jfh!Pu`Os,p9^Sj:]^.t.=#kj['lSK%s7t\^nD>>[+'+uC
%qr;&VhuB>HrI7K+?_eWa^Y/SGs&sU'4Q]YYkE[7h=oHXX(MLPS^tl1Qc/[&t]t)6Jc.e`#`;ff7p$4QWB2@DIHhHsOlbDk:U"be/
%rVk?JkI[?ms2mCdldIf=hRn15p&<(^5>*qarJ,%3Dnl;MmF+!Yg\i.qpi#rBnaZY@#JJ;X^\i;(8+P.L"CkS<G1[2Y7kskALpE[q
%e??tgIse!bfQLa5odVL=mp$-".G&=J'Zq.=@AOilO3]nUE*!E>AY!a@,)=V)Y$>XdMA*mVpJe>$Un^h!Ess881/6lU99L($;XD/(
%B_;^t9fj0_<G<WD%_*4tDNS/Hm:@?g,U\m.REAi>ig"nGQ^3#!6Z1<bY/CS8HE$+\/"bni>J(RhiHM">Y2UY?DW*(&A\7h::J4ai
%e#W;F+Pt3M%5ifE"3441r&:o^CV'or`dc^G9%CIX/XV0M2m8tUFu@He6sLM1^pUML34$PPS\IdkPBJfiAWK$6dUb.D1r+a15&=;'
%F:B.9c+/%,`NL:c71J34q<17r/[opV(28l^NXK40b8^*>j>frK=l(sp1jL<k*KfTB[+ei0?YMHGl'eEm?Mjpd:YoldOX$+\`^)XN
%"A$R,N:t[i#UR+RI<,$]N"qD(JDhB(]VDPPg<j_+LU\YP_f3YN\mFW1)<%Vb]Eg]2&LAt[?=(r\D[5oT>0uX*(O64rfjenl917mM
%3!r`+X0j8MEG<&u%GnHp09qZ'+J`h90gJB7m.N12fIq@kE\^A9>iZoLTsQ>t]8eQ2"94oa^kDs_DV%I\oQ=Q&'NpUo!0q#8SU@+'
%HBjOBetWQC#*3T+cEO.U/E9Pm[1b&\-Ak$+]q.pPM!Qe#r9_G+\e:Ve6e]5`;qC+\Li=0O[S0f6>B761bR+*>"V%_r#$K(FQU_q9
%N4&rh(8=J_O,*N]hs`>D;=AbeRRAXm.N-k#35<UfI[)pU+ggf8Xn&)>_%PUmrGG\.haj*WZu01q&HA'L-1e=>UuSo!%C!-hPcJ.<
%!WZ%=P+i"S.TT1+./=Q1.Rj5:>(OR^ZbI.E"+uCWjiWkl4s@;/=;kC36T48j>crZ\-8HFJ<!H;1OK1flOE8k9luXUa!0MH!7&H!C
%d[BZ@:3o-]=Psho23bJ(/VCd!?U\>p<jIn\.in&19BEPh#KWl*&BdEdU*OoDq!$/:6!BSR+"KfR3`?5e'WBYHU2?m6Ms+kKY9Hjh
%jqbA(a"-G18op"fRq%Z>UICK.WbQ_ag*/RDcY6^WUR1ghe'!Z$!HD<4'qJ@Xi]rX'Osp@Y28EkPR*bX!QP0()U*dPF7?Ah&J_Yc-
%<E-DU)*$LF7/7<I2s!F9nKRoa%neL$[`BrJ\AXU_^TpL@.tsuj=>:OR-k:"Rihg'0Qca?!@AX5XrDL0m?;j8]$HU3sY7\Y2fUXe9
%\<lCgY[F0$b"C<ibbc\jORggD6\]95PNc,:#`Qm&%%s-(';H>M#<5R]0^-r<l%h(4.2g!p+I]FI*1AA\:F<SBGL8n`4B,LIDt[!Y
%;.u*\lV]=l,PJK,,E"n)*<XlKMV#p#`TXlX5jRCV)84:4Qbfg*QU\WtoRQSB=O6PsN-.rdrFs#GUg3=ij;Ffb&RlU#bUFBaKIaAl
%Zp:IG'!s0#Lt/j6>e%\dK?+1".Ma&3W)f3"&`u8uYY7mo$Ke.Z^b0*(bND5&_s$]&_N_'6Bb$098VRN"hIDHPVapp)HqEl[lT((E
%N04uo+-7d$mY$BaOp5't(/\P9j(,HR?1""hc<_,*_+TFQ97u<H.1;(O0+)-e6gqm@K#7/aO/fiT=t5,@?8P=`pb$h"Gug+EXKLA%
%5nD-Uj$\1gN7fK9/.]qP!Yq*1lf;K6/Ugj60Su/Dm)t1H7JsM53`@)cGr%18TS++D/Ff]g/?Y^#I8/ST\*=;l/&Z"%EhKOOV-C)f
%CEh$op<J"jf=7VL93@YCg8B[r[%nmQ@*0p-[R!`#m?H-ir']e"N+'NG`-3BW.;gU?Af25DTaBch0KLDdNE;!td9`0oiEcfpZ?EaY
%@9ctrpX/4d/MWtmjFndhpeD>=aE*;O<U!+XRe,MPRhl;iLG9?Jf?395<epVcFRd:#ig1auTorhpTNNWr/4Z>?"_K`QSlccA;Z>Ef
%A3#]hkF0K#/>@;6VOOZe)5$S35I"28NAC4U2&q;WKeM>uaLJ&,C%nH%d,NRcf+4&k4=BX38@'inKiWC2Y?d_C6S<G8/\*2j'q2gX
%A^I_d%h=?(%&_g-ASM&P+*/52H*g'^"p@1,I,%T^(E-cUNRhlId$oim0@al8=gAWtXrM0e0-PX83K=qgR`MiSqkDS/k@;/9TUP)F
%Ldb9bR16:"VIC$lHoX+3?rTK3b>r@oQ-#$7$J)/M;cr*W>"#,bc4Md&C=h!TMI\`-.OrfqBW5*,+g:aRn<`2JdR&;/4LFD=MI%+B
%9'2fUZ'mK%WB'`Rn)K#`3`J($0mH8iQ<C5uPVBehP>X\?Ec.;8,akOnF#bo:7X%?`Xg+_"]R!/G[l12W-jH%Tq9g$UWGF<*QBncM
%mdeGdpdL[1P?A]12W7]2^ln=Hr`t]4#LU/,)/Lm.p_[b53BYR^B&?@Z!!H$@l"=)dqPDCo:`[kN;uDe/g*G)hV@sjTbiHjqTo'D_
%DI)cUZWV-4O`"o2/BLbTY28,NL7Z;l/1K>1Yit04Z=6rE]n6HCW/^W"Cg&4W4*dDGEhVV]/lc,-_r;Ei=Zb6s4Q@G#I:"U5nF*<k
%e=Ueu)#f+h5.(clHtH2N,Ju6kRgD3:p'kiq]3[]Tr9*tHMkBtg41EA-j3Mmus5fa%cX)(4qrrQZrUf=b07NrdbnHUp%U:QB<^;H[
%%4(1#=Vm8'$kQn8#*D^oQGiUF$knT'(lqLb1+p[K?(0NPo>Hh*a%\uI6*\8I09AU?a?jqJ"6sSjjk-u01cjo,GW8ZP($ck+%@J&B
%i]$.#YnmM5K+'j$Bie?0J^psn@_m,#WaQ&=\LlO@rQ\3rV>oX!53^l]TFt>k>a9N`.1;RqUrcioY#Xd?L*L+<Wq;B6<q&%SoX-np
%69&'QYY`]ie[_HUWUt1I=?.!NIpYl\\Z:`(79m\<`??-Vahjl$!cA0](V,(L#N[\iR`I0:*:]@(Srj4sJ71k\32o`k*o+/[G(g$P
%m@cVHY!I8fM&hodc5YP,[l3GR.aop;ji2R$JY]n5?U_QNCtrR)+]_GV*V^KUlQ"d#V*sq-;mQL$=9'P*(4ZsFpkN[?(F;O="&GEC
%$nAI_$/hY).c:P@4tWs=T"\NrmqqtVq#l"@D,E)j5IEH"afh&_aOUc99DYf%bUsdC/C(1D7<J*`TG6qWR+^dcHcKcV[A<Xk$sYmr
%em9aTbU;]Z<af+%:-lRFD5"X%9]jBu3Yi!bpD?)%8ET#YEQ/n*(YB##/3P!"QA=0'.SXBc9!?.?D?(hgXO1<FqTq[,;d)RoA7SaL
%7eB/XF2279(68qjM\naB/O3LdONQd/BQimqGmk&8j!Y:_!eVOt`0ZXp?]4tQ=a92rcUT^$n7nQEJ(3)u0ps@oK.Wm)*bG-jf%-;D
%3C"G#GYW"?<I%_4P9*kP0`+7^Nl;,[6FFL/[g4DKcm"ZQSm(()MZ*<[?ZcG4[HM4jYJj84V,ICEHd#/djPc&B."T`F*R(`1I^_.,
%mjEL<LC5A>L_kD>ek:9ON$PbU>%gIZV$UlAcOdc>j$\eU^nsC*VF:'Yh]:Wh8s@'pe%A!eS"mL9(eFtRAE(h/3e0ra3VhJr=TN2+
%1`NM#4+Z3?.\>s\ot$M(@Y_6h4=Bc@UQT!e;.EbaM<(>+a^B:=$Wa#RADT[@&T3o^nShE;e]VCSZr@Un&',X5U;D;4Si%aiM)(/q
%/[Gum&co,B_5nf=.c-tnQBA(Jloo9$i:FP9Y-#h&M]8c3j@jsq9Ii^LZOD?B7i'^madCKkh-KXj^jS$Ndpn;g*fu]!/<qe9,X\<E
%YS?\^j3hEG1-c"TVO2tp1l-`bRB2<p'U128?aQK06t_mD#Ck0#^9P7k5TGXp#cl/fq,lm_.*@ER'j>:\ac(p4gF2QE8bLM$dihRL
%`$q%p%'UK'UHChYE>`mr:BZ"6[UM]"LVaT6<QqH)JH'>ApnSs3G(]IH9*'cWQtdH<54tCm"H6jcU(PC`pUe@L1?V5.UjBW_WjEM"
%.WE8))FGm6Ge9"%&M:-TG1%@e0gX,oT*;S97#L2*<qNQ-e=o^.S=I1VR@pA6BR58!1;ZW\/Rho5Pn7np=)rgs0Gkr^:mATngL@+&
%GXT@tI#ND(2;?k3Dk73`H,96L"o&>l3)R*SDm'/4b\/lfm6Y`$iSe[sB8cb?+.]paLcJMgipi^U&LZ,+ROCc'4V8[L=u(@JSKXBD
%Ll:=JHG,a*,*"M)Din6-:1ZH2dU-\/KaTnkq.citJmD/S=&qfS9j)oR,"BJ+:*m^P7'V&Z9&6G]3Y!5S@G9.DWO-Y>>fH"2el]IR
%[k)s"?q"_\UX7"Gqm@`taq1&YB"k\X7rq(G:qp6',r7ko1YP2.]-*u@>^n0Y%Y5mnQ`flGqA75;#VpPh;rP^fQD^KN0YOh2+Y@d_
%@tGG8_pHX:J;V:QnTkpk6<^<+?%KJCV*P;TEDrrA@G$8hRhYfOModKDRZ&l?#>pa63^QPHk6Rm;?I*iq/gCI)^&nC,Qmf1K\SroW
%%=i#";4VEf_K>to$e-7>DZU2;Wt"AR$k4qXjZR!$a`BifGNm.O<Y5m11m:R6j%NC)N<To('*1^I\\+8#(g8fZ"B>RV'lu[r/J*S8
%`$3)CLK'U/Thh0.?GSh<9B:j[;%X1*Tb)BEl!.tapD3GSfYUGd0TM##*gZpL#p%Mk>YjkucbKTG$t]^F:UX(GMTU,spN^K=J-)U@
%'?brXBNS*Z'+r4f:h[]G2E@<3'BM#5i%d^mP9UbB/XA0D1`98He>S]DI<cDR/fMS?29+07/2bc;V5X7;f-,BgKi+e#STA`k[R*IY
%MHKp]^lT:k!*:'E"Vr3<28I5m>NDk:dp&&#'J>]VL^8s`=u;&_1TlB(Of9RGm#&k=7h?L>b[k+IPPOkZJ;Fb0@PJ^^bHO6l;D^,K
%3WZlj3t3l6Kq]A"Mo,^.-dc4`QATVc,NR6)Ku#[_M+*_!p'!;oUASc40$$D!*J=MsN9C7l&:?8PQ6u?A<Irlf?poocK!d.hDfB*T
%('Pje,+;?rO8(I=6"pmC:b7hW.$?01/`Y=iBh4[@3M[:D_(0.A`\!6c:oO`?@B:*-<-`PI[C@.D988@[BJ2LVYrBYc@UL/97(a9*
%N\pOE^+#!Z`d?d374L(?Po>j;@&<`n[6q[:H8&_0+VXOfE#%F4S57QG!I,)6-dgBm8G-)8+;ToF@#LIhcnPRj'-\VSlOLW&)g4gs
%b#/sPF<rGHUlYi+)N@A,agU'AmRtped$W0-nCf`d`qTS/fB3.L]C6;k!39o(%jAdXd6K_96;71kh7OMu/l34;[jRo7&7<CM*\F*%
%`)CI;V)C\]O"4WJ5mO\!fUAnB+r/'L72UZS?k<%u1Z/b$LbY:?pS`297giW?CV]XA$rZ/lhk._#9V_,!GJ<b!GO+!kU^sui(.O1>
%#Ynu0d^&(#@Z>%A[i)Lm`JeC8$T[Ok'N7U0ff3Ni+MoTKqP'H;&R$-`Ob7o\Ffr86Y^](7e=mZk8L?nc9e:7<k_#tb>_M'"3Volj
%(9!0X_G&m+U,aOAB8#dh.eU3c!faF_.RV2aUqh4,&X,pmM!=-"J[p*,'2&lq-8AtePoh^t0uRlS7>R$DEC"[Us,?_G6i7CJ)I;0n
%q&UcM.*9'aR9m_6%ph*Il6&Q3d.bK(8M*Wh*I(Xp#0>8L0Z[W<#KKLe,X^!<VhMQ^I$4-N!r!>a6^)DAREUUD#^Lr3/e*cVbBIpU
%[-N7](1!)66Krca1IU!Te03,40of9h2W]S0CLCBP]dfIPqO)=a=KM!:L*$K/Nd`301K/F(4(R%TZ<hUgqm$$;FR@ibPR%aGJ6^fN
%#_=/])BguZ'>pKFkq2B<MmnY/N(@7Xj@1_[9/@?1"S!DS?Xu!q=^T*.T`#Z/.aZ&J)qUBHrtX3A<EC-E0=n"sH_SA4dkqB-!\BIa
%/oZ`;cgYXY5oq(6;+l+`pf&jP%_'_?c<@O?+p+rTFXq?<S3e!AeBlAEE&3B0m#rh"RaA6[0**`.Mb1cu19j94'h!R<)@#_B1^OIj
%r2<bUM*oq"=p0RoP__%uhApEBgo?\!F>J[X^'HhX))8uQ$]S2sH_)C]J@F#JR?W&k"jID`A0f<Rbo:r&j39841i8:&K:+/9Yp7SB
%W5lMpLi.B`3AD%sVE,p%"n/'!3"F@\;gc524Jed/-qSV09^6aE/g/_Xke3S3p5YkR(A;`'\RQ`k=p;4tbb't')7t"u)Zj<#gaP4X
%&J7r93J#1S4DeP+8>8+F5V=3FlEqM@(i,JX@PQ@h3<7<;#UHA]o!F$1@`ICq?o7@#huY\4L%2bd\NXap%"ia+\O+XbRlR42BH+Z.
%[%L8R&+:+&l8:4^<+bNt(Tl3.#c_J32-[B*j*\*1e\IHWTPUSp8OZ"[Y]GUS_5(C8dGUV+PT<@G$K@_DH%St[fgOa$YsARB$[f7W
%:1EGF0"as(IEL2!0<)hrAD(\[CBK,03#o(1BFUBIPrUg,;fa,r#HF5EUAmWqi':3F@2ob9'H`G<1rCH[0F%$?)ZBsY5mmo_(@qm>
%X_^eF;a[=n!^N]Sdk]qXcD8XS$"h#JJra7MMSQtAqFIi%ZD/Jgq3EQKr3YdPRZYl%+[]uZi$%bZZ!bJ#7gid>BZP-0D6/9)ih6hI
%-"[sT2eLVa1Y$UbM-a&r7l8qkM2md7K@\O3_UijP!*Wp%c;:;h&VEKo<)Xeg5%%t1YmMn$)R-_n`W)Y-*O<`dTJQP2Qm"!tZm`kL
%eNoCOY]f^G,M&$3iFCq-,@6e"*"[OoODqn<`D<jEoU>]n>TuLH2/A,kL+!>TP_pAiVMTF?KBn':[pH#sOa)N_*FBTR0J\^qe*tdW
%=!=*#Qjs-maoRlK:A)!7U<qUrqRqK](d;>Mo!V4X=u;9Emn3<h/R3/5b0M=d1rk,"BNVR1k2\e+@;9>iT(',A$JpWa$XJQ&M$tmD
%E*dE)i`m%S=VUV2HF'R,r%N%)a'jZ7npH,9kA4kP?hHp6)Z3F'"Zco"V-1k<oiWA/F!Co!_[VN#,Y3JCSIu?ZKu3a9WarIJ=@,Y"
%8]@DNea3PjafI$9:c2n3OHsW<J3lEm23P'A2^p6DOZ+D8RLi;,VFjmn4<]1fBn=>snSOYM8Ei[6oTCV+62janKu9]73=o,Saer%Y
%FM-/r9lrq>k%):tG"^C"eVqKd$/CiOGPInf!I>>36,""5#9[]FMAcdo^q,!]DmqEc65BaECPW,AG/H'93D["3Z:-bYQk+"1JKFl\
%&3I65TImq`M-L."eFZK?qgDOH#g'C\$IE^5!Kume9:938crV6=dr]#oKYRRrmqM3FLdC,n]7gTT.o@)q?o=D3(esfL<(sP_]YMmU
%`8k,RKoA%6QmGU;9+D<2U.?IOWG[7tM`&<[7'a\YLM=g@2!,)'>K,#A=lOrI]0!k6WII(+F@fOQk]k1"f1[u:O<K[<[nK;\@b`\L
%joo7G-fcTuMN?AZ:aB'aDsFAUjuP7()5%@`%4t-GMo<?(?E,T54"MD#jEcS=!r8-;Wq%p'AWU>dq;-$FJFo$;N.u@>M^Au>A:q["
%."+De5J'YR7]8i0B]<mg$)e/L4_Ydi2iI_t$9i2jLKt6[?r<CkB0Moe-T\@c8\goX+Y\=cO58j.eE2>)6NB:n+ICW?7EU(2Ol4cK
%?1Z)LP2Bs-5sL1&h'jbB2<dV9`O\[A@RURh,MdlV--V[bkV0pMUg9$pEp>QkHCId$A"h%5<!%S2beuag&^[LYZmWbG4*4FA_%$#@
%4U5TaaheA)'rcOnBFk:l#H%0`AA,c&#T#>8K1@,_K>1_2,lZTdIi%+,dGmmDmgUO.HYKDdkrfTp(VMKpF2d]V&2VqP9U\_I;%3Ne
%W$>*]EQg#QSI-NOB^\Ak7lBt%P"NX5_,+1ePSFp/]B,m&NqDe/4Y<egkaEg#"B^J&E^7;J^_$sVk)0C9pr"XqU2RTVGJEe!GO!pj
%U^sui=Z4\P>t+6RS6dNe'p%I0\.Tc4";IuR9cU1YnLa`O2Db`;TuL3bFNB1T6M&V6njk#q*#BM.,CpM2]`eM/b8KkEEZ),\jKlb!
%oN4?j6"AQ4$+)t>4_*;Bf2fiA\`B7K>W&qF,6gHd)_2=:ER1Gg>j7dok)Q=5Jb*k1<<Anod0$17$W\]E;s!O4D%k6gD1QLNLa\i\
%"bnEU"!2,Y4@79A+(YL2*O9s=^omE*Bh3!^U.$CTnh3_YfTN/V9j(^>>9,1j#R\oo!Zn5,"4"J?=:qB8\gTDS]U,3l;5#ib:BhSg
%(7BrLT:1L[1m1&M-P^5XhMsi-3tKHI?hN#\XW*]p:;`F'OT;'921$S=_\0'!e/`HQ>J^:-W7jm-s,mJ[q-^n7&8=E2W=m"nM;$m?
%8nJ/kG%R_h6"eA3[ULTQJp.MhgB+]dYkpI"YX9E%N5m^lBX*5YW]31L-)0kT!]u8k=:!9*6=mSZDojWV)PcuQ![).g/Is:j"q0@$
%fWrC>n[C.2WUb3<#`:(5p)nkt[II*"$eWF=B!TD*U"c9rd%]PFCBSO+#3I;+@BIF6-C!XG@H?@k+D!$8D*WuQFZLLpb.O.6Q%Nmf
%qEYBI_\YRkLp_N"_D/iUG^s+)iMB&[[EOjOHSRB?(8)aS<"C3,%h)j^a1sQ+Q:AJ'^o0%)+p*78iKZs=mdUuJ'*In98nqs?ais3V
%[+n?N'Q/_:$WGXCb!NHSXbC2eBJ?F3Q=jkoSeT.17YuH(d=R6L"_*3->L5_T[8j?liP8*c8P`l>*E'U,m!_'Lmt,dkJ[*=_FUC36
%]:$nM7V5&k4]#QLK=Pu8@Cj%r<p"(^HIg>t6;n7(pX4epeHpI.nKf.GCYCgs-sVUJ^/7+K/5U]o@lMWA$!o]mdRto8;L>PZR^:UX
%c"g+PDud*r?RhMLJeiO5?HJ)6XSG;<9eg?I6bigJQ9SU$!D7PYQN[H:\HG,Kl\V]O@^[4pCSVqE5q/trr8)2-n]8CYGaZ-V$(nku
%W.&8J&Lnjto7/f_Tu`lHe0,H=&AUY>*2DbC?PZB]Ir;(J_juE47jA[O3Q6i=!2??"J\#LB-.D_]#\H(KLT82?-o#%A._o98QR8(g
%F(-h.3\A;ud&DqCV0!m"%fS\_Vr9e6Po4Kd=rnPd7JK,A=X<&DS!Jl'V3X#=\(>FEhj>;L<<33'oW;g:h2bhB0?>gX^jmV=[k.&h
%dXn[AJcV2?s%_%C(S^&'"fNT''J%t#`P/#*]r'FLPD@*iK^D*!ha-jsPGR7@Pi`&m<$al4nh7F^UhJGX&7r6Bg3#ZR)&\P?.1\G@
%9-1hJboglQQ.mH:'o<015pTYcMBVV(C'=4C!b:7b(]B:-$Lbj%LEHDMd)l%i9fl(.Fn#!la)$M/Yj`@>`CT/_Q;%p`f7J`n)<XLW
%AKh\I7mu@a_OCK*Aig^9ZPg:`aB<%>DBObW"GoR0n\AnEda>jj<!U;0$k%FTT'uc.%H;H_jX[-\$aGj]3bW3UHifDF\Vu+XlZ0$T
%As[R5+af_X%;;^MN&CgYW#1iO],[Yg$*mp=VPu;p$oMu)J/`VDir7/FG)HF$"'B.:F+>`Gb`ZPR6uYF"@u2<1di.C3m<CWSIdnXV
%kQmuif)aSL1<+BmNe;,HY*Tb4iP7@Kb@Pgg6pms6NH&&UQ9.9ZI-T-;6.23*oIj>d0RZ7dU-XL1MP(HKTQi8X!?-6*DkU4TC]SP#
%MAS/'muc,AjE8<i:eJu5e]8Xl/:qmkVoOZ3;o)N@UuhY/a`<_jJLVG$KpH:HA52OOl@\GO5]m?`kfSh#_3$D^?\,.!5Qk\4,#Upf
%:e1Qq`-AdiY-YDo"d+q^9L8cu4)$##>EE9.iQeBJ"3p+@+FoEUnk>X-<bb(PWNaAr43b(4MNs63d$ZTkbo-Bs'q(]uO>q$i2#Rut
%ZiUT_Fk]YBB%`l:(Pj-hN55SAg<*i"[@e[S1t1n_%hN,8VX+A2_R_?K56Xb!jsakGnF.CANPYaO]MQDSb?25N77dT8V*L!n6Lcb[
%fkKC?`t&!Qb/)PT@:Zn%8dIR!XbDco>'sLBV^XcbL\ns1"DB%-3\OM;=IE>.Bi)E$qRn)-T'8GE;Hfh+8C%J?lm[]FL'8e;NU1)l
%HQ14=6q@FP-C/:<&tBcr3kuTJLOq&WYI2B;O`ofB+#D$k>9S#n[,PL>))"s(d'I&"Bj*bk/SnHq$><;C()($Hh5W@><?mV?JJC"$
%qI[ueH]W-*b!rc-APGN/>6F_]R(R$a1Ej8BO:a(5?4ArG2*Qf[l<3Y>'e;QQbV(LV$'o^^#8)1s-rLVA'5;dmPU2Q\dqM<*@N8bI
%5#m@X;]TjckR%C=R.H5J+sDQ#FB44f2]V5A2_]\gdaI7=A3m:18U^)=Zd*I,S\g2B"(A-Cp;5#)E&Od@g@sfD37KNpSH*0s_n4M7
%I>761.Di&j*?"C/h<s]tIelff)q+BXGJ!T](Kd,Tp&3LW^]!Toad_%'^6U;9<gQV[c')cn^HT=,m]U!4qIe5<rUTW^+20gdHJADj
%B=gD-:]0ke[F9J'iLskSMC',3n6]jET[0!m42Q%4$FRk*GZ0WQ;A"8TP@?dX]F:PDB7M-WJqpm?G+sh=(F0\>Zr3>^RlFoOO:)E?
%:eKuZT#&756&d430'K,9jYC"/km,YmQqC8T;)Ks.YK?eBURm.EMY.[]+``6s;)X>W2tdQuUKP@MY95b-C-aAns"tOQ0eAJ:+TO\E
%ns#lMXn(:%_iXVm2\N7?(6+[8o,;jm=L,-^p")Nnmc$'Ac\"fa78:_PDaR,H)J\Kf<@oY2CK+B)an.8m!$Zifr<mgKF9!?hUB)CZ
%1jRZY"a..+Q'%t%P.C\$.H?AJl6\iI'&u:G$X"P'a/H=P=r[n)@?Np)b33GL]$S&YM^B_R$Nd?<JC2=jI>]d,mNffbdi.6Ta:/=?
%bQp[EX7$',C3#<q=DS6pN7O1["\^=XdFablXO.U]K`GMJ^I";6'OCF[_F/g&?(&N'AE!@p>lj<?J.+t<i.aQg<g8V!o;hP9".Cs`
%=jgEJ\![p>6F%AJmq<B>TEA=ZW0u"=7tl7XH4>g^,fud7$n$c^BV2%hSp;q']!g7*A8eH5DbdO;Z"1d(#lTVpXBm"B"MAV[<f@*T
%6A4l8c]k"iCHlV%29Z&rkUdqEJh^*)lP1R",Y@:fp&4SYP?db.*3E<Fe6H+j$24Eh7YmA:OV=?L=IeSm>Y>%EZ`8XD-pS[$m9'fO
%[G);*6o^,cI85c</c7jAeiP&b9[Q916gAgb/5'O(KWj[8Ed1,4#"'XgS!K_%QG+B/S(83+d>`'7:8VLr7ArH#XRG#?Q_HSXH?hXc
%i@W2'DhcEI[3^o<`3+c3`XE$W.s\=5"@o&%;0kE9<\?'&dN1/Ibc-7+UX_4p<d:-@9oI07`]+\dKqATV:22#np>HPqZ;b+7HHe#J
%/s=f?YW`II)0S/tOPX%=lK9>RkcL\.kQ)Y\)Y+DrLk1%IX#s47L\LsrPscT9ANu7>2TVP%Bl[AX%D&L4oq6O2bIIZf&+j_j)G]ct
%M*[=^Sdm_K>De_]e)<`R->XLA8@;*akd'Jrp0<Lo87gX)C'R]l>>d?\kQ@QS*b6ZQR`It<R0;+iOquBCo5#XW[:g#o<&mRo&X;)[
%'uFWu+IYP'&ITU3f&B(tVA]'lAGl!0$#%Qa`.37eLIIuP9J-\uJ2/`A%ZZM1(&6N@NOEtq_19ab"au/`=aVl+A>HSY7uQ)PIp:`(
%>^;f:e?SL7SM]ob@<R2H$R'[M\.Ef]Tp]R13\;LDF;t'/0M**LG$2qCP])2)I+(dOjqN^u3f,og6r5K!"@-*pm:995%SPm*94g`E
%/9k.^U1'jjJ5nq#R2`9d+_4b?19"]tOq,m]db"E@?&)[6O9N![CUV<eM"h=!EFj,Ycrq6]VWTpR.=u0'!Dl3gkI;,HM=C%_SgaPP
%q/CWthb',&@9VK)]Je[PnEoGka].O7:Icd?-F&i'=&A$4jPe%nN!5^Z1gc]-XJ\)J#9^\sAkQMqZj8<#WE9?.*3-m)N_:S7&kS1(
%16F<q[12gT0DZb"%$BdY'uRhnPo^-1QcmaQXG\p\BLoF==gK';*CuitF"7:u8<gnQ*9sUP"\>1$\V-#B]1WsE@MM9rX"I1UD^1:1
%McqukoO'rb;ZWi!T=6A/#sc[AU8!4i/oad6?d/i[:hSQNL#?N-WZHe$p__ADJLW/s/T.r+8p2CDn]#Cc##GnBNB<0d^afu>+:=#X
%2b.NsJM&X_0gs"cC,h:lJOCt]-*d7+AV!HI]$<X+"do1c#]/>Aa)]\F/QA7+;L?iEMUF,814NbYP4_fZYKbR;E&&VY%TrUc7=hXt
%1dfc(fQ*/)]e)K06/RB,_?/L32,.J(P')SVYZU>L(jO*joFBY@0W'Cn'&Q3nE8jqR>@N/='G_HOl%R(+_sZ\]f8Y1VV@r9@Br92;
%]VEGDL9`F8Rb3^?#>>=j3gA^*"BB'37"lIDTbIe;>'_i;]n/^lR#IT("lHGHBPG&6psc/a<8'W/,s\QKCr<!H<0="fNd)-bX.TfV
%a!$P%EgORhfDbJ7D+DC,]YC[6!XN&a4V%0N,R6b+I>B7R=guC">W[HI$tLQq%<mMDb`'c0A,tlEFkD>f-4oPQUX:N-Ka59KSDo-(
%%?<c+0]hBT8M'[\8JBa,D_UPp?nO4Ac2MmTC0s[1UI"$kfo]>j.Yu/[;liUJCq3!pEIa4C!@eNd4"MGA=kW"7)6iFu&iglkb=FA+
%`(W.&JBjo:MNV*F*\b)rHdMgI-)/Lfo`Wt?1/%4<.dqWEmm9H,\2oYD0:6%Lj"RTBFK=$pCbK+9=c&@fVe%]H4P#S:C_iDbEZ'BF
%NX!E4)]TJinFNs$C*dn[l#jXcd],ooR.LPabL0ViU9U4oM,Ah3NsD<YknN.mc9LgIGNI_h,4=JiR@k!*a!AQsA:$qWZl&HSI/6Me
%R;jksX74+p$kZSqiO"o)/<cqXOk`9Edcs)3eJ;d#Aq:/k=7_GdTqU),HSG3%TS3otc=LZ8)gNC"]*A@uYF7FCY@LnZU`QBaJfBe'
%..2dd.i,&e1AD!Rp7tjq&dgP]bk`)*TthnkG&(ns'5BZ.<qm7MC##=E;e%:%oE*MaoDY-o3E+;?cSNT,UuXR5osq*UCi1,Vb%<K8
%V/rf4R2&4CQL2De(aDKWMdQYio;j8K<ZGP7HA4/qho;15H+=LE]V@-He/'-SNR@f+YXgMtAJr+-2I7SX"J3a$9*a/N&%)Q'/LlZ5
%)OU/l8VY3C@ef1=eUWhS:>mU56s@/a0`[kXC`+pmcW4]#Ap=TQ;$+6BA:W587ql@mUVfUK\#A/(R]imW/Z>%'95og/,IE,`[-^"0
%RF$"!%:7F[7*V`?_-5=S%,S'DV&^c]ep&[d=]r)lW"t^p=:!-jpDui[JY#IdR^C2pRuU1mWIkuW"t=hl+"P#`E%"jP-QoD<fkHf"
%P7O&Q<EORs0b760qkTR)_X&Z^#(mVJOToqORT]>L+q*Jt+V@JkO3ncCC:YO=#pc8A_+9Ao(5N'A#]Pup='0mCY0>\E\epTgZOG&&
%=M6":a#u(-)SJV^'DUadV.u/$=pPP*I0,-KYKc(:7@HfI=B.HQ>O2'ATi>:9V5?pLUt$[;;PLS'U'_Kqg-b*9D64%5PgLXpPnkrL
%^bZ\$6tmho0[[1$iL\%Y%V(a8,!*`Xd-UV+/Yj.I@Xal^/2;CmMM(9GYTlFcTSc2]1bG8hUJC`NBP+7VRS,.l3P!dWGlWsrctGo1
%qs[7^TjffL%*4+Ba=<]V,G\haU4o#'XqQ1c0.g@s"DEM]F-o+49N`KiXSs;'?q;VX1p\6i.BT\1"'C?*3C-*b792WW&b,&uiL?LR
%N#'i+!9%I**)bpNLJG%G1EDhhnh`)s$%,Vs!iO,^\jPq@@E"lj4G.mCq/K#W6T.Zh6S(3qXXb6-W*nruSsEf8J82.M"&,%6Rf.gm
%"Xj4Lh4c+UJDnquM3t&Yqc/meU6qLc\G3<o37SOMr)8j*/!NM6(qEOXESuH!>*_)=2c_N.ohDhTjb=D!Lb+4"T\2+)DE5I80u]*f
%T`!7i[`TMGO]>C!XJ^a_bkD,j"0Dt]cUKl!Kj7;uJSe,PN[s?i5OG=/E=tBbQ*[jJ/#LX%!f@c[FibD\FkW*e/%_&\(TR\U1G#+C
%F`M-e-Qa<l!mM$6;-^h<++mmr'nJXK_P)1BZ=R]`<Xr1D7;K17PUR"9Wn&QqfMC"MfVKJ"O$o:EUu!B,UD_H.L=<(m_P?A]U"Uta
%0$LH(8V%!eC+]jGDI+h"bg,ocLsBUW](!VZ>`KRDSA)mJGihWK"p:Bc&mApLkgpKRA\fEp!^S,ma&9<kCg9QM$Smk`Scpo"8*r?<
%hL3qjm22C/"ED-A,?V)WGF'39Yhd+e5kP+%ma0q@KQ20c\VUKQ/]XnbKZseUdSM9DQ;i17)%[MH+?cdI_6_cKCq*PW/VM6hXO;*K
%_$,br$e96]4.+7'c8_l8f5n1=3l\GU/"((1:+!S!nH)Z?K)MadL;mV@D[`Yif(l.)n\:kR\Apc`k[7.W9Od@QaVJJf;^8Ye,Ja4X
%PIVR;jcYlPdrEaT2C]QYU==!V;3jYq/D"]`"b&et(<=[+o&u47Pe$RH$D@H-_k\JsM.*6tV6j=G-.^)%#*'Z"W+O>Z'g5,2?mHK6
%_2R:t=i%)VZBc+(7.JN)2&fITab3W8!F$p!^o>,g$&1"ORYe?Z1.CT]FXmb/];@'!*8p`ac6>TA62)ZJd,gXP\h^Hu.>K1c)TO,]
%"pRA'&%Y16bBt(jC3h.KV9!nf5oV1(A8Yi4?do@8ZD&Q=EohX[%4)EVi0fB0U&tZ;_iSO`N3GY!b$S=0"Hlqqq9#G>_V1J.)O^<O
%L83ANZ:H\N'd\Qhdh3l\V-Dh/`m4hkPI/<C'Cd<"4gB^*f$8N-HZh;*`/"g(UW/H1$IuCqZ.ct2*BXn=.nY&Vem18>MEjLr;?AQ$
%033LXrF_3)*?6Z+Wf5Q#k9t:*!tmGcdMsYiAi$FCPV-hY3)O0uZ0?$5@5!.en4^^Pe;9uOL*)V*>lkaNlm;LZnekHFdt77m4/jQ3
%?[@Lq7+*[Oq)sK`l5Dr8F(S*2j#L;oN0g]/1(eEr>63[i,B&NX6f035hb6Y^*S5-m0OIZcmt-h51H#KGNVJIP[dF+tJ$Y(\-p\:m
%,G^5pI*qUMPB<36Tcc.:2'"V3ES<"eFA[u"G6C`b>8J,=Y\`S$l:boL\AG3kfLmR.1`"n91H9+$k+k`lLL':pYNAfb<RWq;;:TXV
%2%5@j(Q*duF9FU_O^E),Tq<!erl#M=&C.)7fs$@SC`=[C;K93KWjI^a*<0UGounl1,%UaSSPm*;\+*i?B@O>b1I?(HSg<@[K]6BS
%imr=E:V9\;#MRO]@r8AA>$8^>!E`KJ5-p*@@R)^SXHc0W\ZB&q8D_f51K0-?qh)hX%Q]mMZ>taSBB8"Y4,0"^**8%ae5l!V:E.WN
%;2:4!l-/+2h-sM2,S!>e!SDe/`8UK9U1KlS*#ofO?Z'Sq)k>@)#&?2WXk<PD)U9KL2:@49*)9[f5LDL/JQ8ogD*o24/UaBML8SX?
%a.4oS^*BRj2gjT*DHna]Ls\@t_D2+#CuO.b.JYd*E+3+Sr%kKpk0,$C]i0V@[l1fRWc3Q*,fhj?E,_8SfN+_c<i!blRde1R]\H*n
%Nr1+7O_flk*Oj%>iR!Fu6!;:)dQnQW67GCI[m]35D]kZEk6ZnfAHMOZ-61lWZKuN_LYU\q_pM&mYsTUuqFhK]Ca#So%#/_`!c00p
%&qi',%Nff1%hA&\`8$n)]ELrl2Kj%;0rK+_%c3)__?W(\-mjK`%rQ@Y%ggrKeDTPcL_>9a$kBEl,CGoH_*PJoJC4s?E,H-JlU20l
%$7ps</[j0eg`$_(l9Pm)nSh/e2eqi]AYo[`B&>&NM_]itrL8puF$ht=HHk7'8@frBkr=Y:Em_#Mi+pMj*F,(:eS+U5]GIkd#!FpP
%]&89\l+tck?!@Lt3/J90[kRTnalJ/(*Obn(`1hf>%t8J\C+WulT)$3FQTD/h,<n.($BX*SJoHlf3KeM\"Q;0^(["kOE:1!NqU81N
%%`=Z*H5h<Pncb6R](:Q<(lJ1sFFnJ=kghs;JoC^n8mZE5i,%?@)*KtRAn0B^L)q>]m`6G^j:c-t%qP:'q8&IiVG=YkK/9!<!M\?E
%_%HI94Dsu2*=Lt6>5?"^6>j-G%o0]C,7IrD_6I+)RVU9&A"?LYpC08FTc@%"%=2t[JB[RCH>m>:`QH\3H>kDA+K-7Gi/Sb_5U1H$
%E.E2/%,:?*A%C!\kksA!9^k;A3^5T-Zo3BN&+6r/=8"./3!)UO-/%jA,>LY:XRh(.6F,!=<ISm]NEtN]5I`(`DG>a*glknrT$`1S
%7#7>-ok(:GN1CH)E3+*g8WPh&i#jRAV!dR@i)V0Zd=Z4mGA$j3g._:tpqbROFae:X.`(;9+'`065-FF.YFj1p_"CX(L8SgJN94ds
%[hut"4ZL%jbKZ[bB0ah+$.nCWakKCLhU$negmOlt4h+Qk8@R$""(Poee!;$pYaPXPSK8bQS49/44ZL`dge`)[&+3Ro=8b`%%V1p5
%%>,^l4L.Qr51>-ol5JWkd=W)4==eJ[o>Ur.*'*$aLM'3>Dt&CSL$%4L#=f\?kkN'<%o*>>C1NFe#:Jai3DVR2i,nb8S^dJO[AB1S
%++1bD_[fKiNOcco+.S!_\eD+6K9Lb%1$<cB#KI)uJYDUd1NtR\ElJX8>t,]Hmel"'3t%:]nq2SI`n8jTIW-hbXFqYmi##AS.W"ps
%dB$Q@G(O\)#SaQXKO^u*<\b>AA"d+gVVDKpQ$:]d5nFOR#[km4E3q*9X]?4A#`_9.cupcBG@^MOg_iC;WK:jG.mZ.\Bbg7L5re'h
%Pm=l6KTf`Le@$!C3rl1p/fb)RQ$\t&o\ajH6Zp9V%_j#E>+HWQY\D?nE.]r,%n*o`iHE<]RdJ>W`@K,!-O.mkH*q9kE!f^gK,,Fg
%>XUMA_/mrmhJe'Z+I;L=N=qbKOmDA8BZQWL\g7JL4GE%.SIaM<R0&,g`!=Sj-h"e>JMZ\\)_uP"E)n)0?iA1RNoiSKWq1eJJjK./
%1-TZak]T`@54H_.l,'(qLRl8@'07'lD&B#`?0T-<F"Hn)#+g-K^9`CJn_=(Ukt[9#hp.jVJWgP0r9^'ORhT0#;qI>0cG>fN)m^jp
%k/J>H\$l(;&p<N:(p+7B2kH]^%!UuTI1Lj1UP5Lud.l?g=iMP]8$F.1DfOr5s.(H"I0:9EZLG4lCSh/gjhVtbN!c)>M/[i'(H<s)
%aQH5#c>'hR#b5+iZAPG6JNHn2LN^Z?cL?n_W,55dJ2V3OBO_*Vd7n#Gd`_hhP<.6Z#TO:ScnQ2bF73)4;KaO/1jCs8^g5i+BL;o_
%pLV<TVZJ5_.[!4^'f]P7Gkd"#S4,S+"ZdAX9jjk5ihQWg231jFgJnH/(H@VL$(M_o?lA0%i5D!ffb/k"$'HR^SHta?1t*RZ,&ji&
%ZBV:$JMY58Xji3C#m_=_Dp:].gshe"B:T<ue?^tE2FQIsT"tYU*cP9l1uLD*39V>bs1dXrk6BZl*pGfFUhcb!m6'<;4_.:1L'O6R
%Le:(Y0F@.JMA#<m"-+./YA\^%eRVq=aodY>Z*N3."7B8[#(pO*"4!fb.52f^K&fP254a<24@XrT`WJsfUR]ZM!tNdVpYXcqJ7ISX
%hssMEmRU=c6ut]t%PWQ=6A#K4YNjNi7KX.TJ\3mF*cS9P#_WU-E/4@0)Q0,2*%g6_gsCR5dLoJepS>I@[Y5_Yi4(NE4P8#2o9lC.
%m53`XCfl>ABttaW<o"W$35/=4><3-Oq);HT[:')K?4qHjkq(adEh_'+(3$]5ju0:li,3A4e60T_%S3uE/E$0sK+U;M/E!VX+V\`D
%i92nYD%%2!a1\e$)$r9j.JZNp!(RPPgfDrR^sQ.UXkls+ZOj>%\5Ik;oc5LY3sE,mb(mX+!,!f^EMieL$b(iT']<dnWVVn^SA(/q
%/Xm"iYp9YgSLk")D4P'nhrFcMIk>gf3P`a`aeY]"!uq[L&YQr@Y565)Pm!W?@$g%.#rjN7de?%N;6+&V0m&T]S2?e\44nM&PP`as
%=\'$A\::=B)][cI$;7t"3P[(C<:l^bSB5TY;sqj2Y+b)8nUS5HYVLI=Q.X[!AE<h^Zc/;k#Fp?omK(j`^juh@]D70e*,j)0ocO=V
%Qg*Sf&:r=-M3\@><`jI@%QY1]DT7!Z%1bFETLEJj(_8V!,HH,P&%KWcQ[$LPNb2k_l9*u3%B_8?>T46Fgp2Gtelbj(=MU=Y`miuW
%$TO><I%+6RM2ZFqL<]kG"M/E;Qn&P(6E*S5dTO@'X4#hAB,5Ff16qg$]'YtEmr$L&1Rpj<GXDR.4&l$mPm<iPT*3n0'=_(YddEQl
%^g/h_JBe;CUd#L^FXD'0)Tp75@01(@Lb(ZZ#om'9me>>$^sSmXIN'VQ1c$ed1P+Qu[XJ(t"AY2B`5.uNS=,*glT,\=+%gli_ZUIK
%eG\&]'0(`6*4ph0S.QR#_/,LS+X0OMe!\!+:>FQA0S)#UXbX7feKqi9jHTujkt<(eD@@k2bmsmd[p]>N4s'gi:'L&fOP2KR93+\_
%[qjYnJ^a=P0s"@4N`#>.="8/9G]>[r%2HAS>ZUI><J$Wg<7i->E9>^dK5<-o/fM[WWPH2'P12&u3;Xn%FH^f8LA'3STE=l5JD`!o
%3'+1I$T]"^D!kJ"3MQW\g/_Hl.ht$jO"[S6i#I.@"WJq1K^`/_AN-R'Om&of1Jr^U<E,:OZ5Zd$XPld0c=Q,)9ZB60T`Sj1(sB*E
%'f]*OFgI!$"jT.a^&(J,N[cl^1,(>"QBuThW_NbY\&c_f5*LQXF_T$A/oV*-(:S4l^`ho&1n>"Z>CZm"/oY-s/Me2&^jfj30J7<d
%V(j!o>i6ME%4`/QP0g`c_Ops#M`GN.'fa3!p[IBGi69DH5&[1ta#S5V2GE&MC<r]qmnDYeBZVb:3.`#/*B$=DpaEOt3Y=?'[u.L2
%'0(5WFUU0-i8hZr4[Z+K-NH:&mMT!^&7C3K3YaXQb0Cmmki-4/cXjutY3r0&.i10T4A>&*>i9:(7H'O?S81RNDb&"AaOq^IlYPKm
%@"$pe%@kfh/;B])S=^>PU[s&onbq>KH[ILh3)_0gHZ&Vo*V8]$Rppd'g7d:lchP;L%n#SNA=m4$OC9:qdXa3\:j65&3cHF2PDE_d
%#EHo2H9*)B^mP[1XWWA^!&dO5"PN9qF#@\:cWL7JFnms[n@N'(kr\Rq3$1+1PQ9ueq7p]:_Xegri"1;lRLVN#'%jEHEPi$ArhaHk
%pqRbZAI2W)"*ZouABP4<AtTH_%NNrRd/BU>a0[4Vr0@g4=)*V@VZUQ>PFjdUi-YZ#$T]:fSjCPBd"*\X"6^=UFPud&;.VuU^_t.q
%froMUE6Uhkig(&oIQRp[3u^/a!@G-r2K5;iPm6H,%33W'n/-!"n>hh%XL!I>DCj&:nB;)sk3BH2[BY8rg[iX!R+]:FG)gs]SIO@o
%F*gg6)&kQl6^_CBCu><]C1IL1Z%8[(U`LI1E5^_OLGcTW&TPm#iW<ajb#6Qa^_+e(3NZ!5a@g(b6"^7;[M.A\#TQrS%WUS28&Gu)
%8coP30To:PAc[\`66LH5J@"OUqNV/qfj5b)$LhYSB++u`?m9@?D]$81lPd'9)8OXo@q#l)Nk:(1.XG\,#FQV(Ou`V'X;mK%D$duc
%7F\O=hl,>)"4ZSM))Qn%Y[RQdF%n8lA,f"=5H.7:q)A)o5gR%'reA*cGVc2qc9rBDj:&[39@:2dhsf<cQ1g\o>VgNC=MKu0`?Mc#
%l$!G+7Qa5Vd8dHXKWV'-CaLH&-iHMm;NuCRDmgcr[jD!-oWgZ.OFG*rC_PnhGX#S7DAg39\`=n27P126b@Kf5L>*QkaM+oud8T:?
%hpjV*+(X9M+)CP.lC3`uWNAkOG\[Lq#1GLs3i*%ORD.@u<"WX:Acj`[_=W^&)BrC_mm^3o[M"#+kmOYbnU*9nGho%g7a5r[EFnr8
%I^?>lc6V:LR:BMO^(I>0`^_EO`l>V#B)%,<]:&%?pq97PKB_.T]b+K>+`5lFYq%/GAd5e)-82WbcKu(CPF4m!;gTa.9(r-WmB*lM
%R<rR]D`%&1#.6BnaM'U3]pU+cJt3@[2jtTu)!'OeC#7#2'hUj,&?D$RjPD;K=H[%%]qJ82Ir:XenR[9aeOJoMkQM;73j3b6D)F5i
%h@*0b.m7?0!?=mcEX/j.E.;Wb/[ICPIq7CEAoH].V>->/Rj^K.;n(!-#Z`M/aa-d1'-@I_eX"o.lPDcp:jZ]G'43PseD=<,ksTHh
%]l>7EAd>Y$)]C0;B4c'=;qhdsDmV331:Y$^\2:LsbhV&COc]pr\\2EW0N(-F]jZIGUqYsaVNFi!=Ll*GbqD<`#IcWq[.7hHmB$r,
%:Fin5nU'0ki:\M,@5`l5$)M)D)+W91]kIp%,?/%']kNph[$#e-.i)JmEc7CSX@1^&HNOQ*qR')dboF!MrCZMFBX=?7Cd[VbV?7p`
%9&-PI5")uGHd`Eh`l48!gSkG8<cW*^8&NL:Xf%sNC2]sp+^@"*]pV]kquoRWNG&CfrgT=h)+\3+IqSIEk;%+%0RIl6MXBl:EdJH(
%Vqp+<^$1G)K?2:(NK5B93OlaCnWL+SHc&W'C:pD:-4!;1DUdNV?lA[2p1E5m8S?9(bfes[e![mXh_PdU_sC*uT-ToGlj\>n/;'MH
%gMt[o(XJJ^=m"$VW&&cVo8I;=L>!TlUJd.sC2Z)!7*c(F\'f7uAc56g%2_TZpZU,`#&:$#g7,l*XbI:m2bRV1N"'N?U4gYrDUdNf
%1ZJF=C2Y6nN"HS8Dfc$YTFJ4d>"LR#M7n2g@QTHL;U[tdLb5kj:a\+g3jCX&H#Gd]XMis`l'[^lM7q<2b?u^k#%Xp,*GpVGM<hEm
%TG)[I,seF;@W)J54MeUsfUI"30"@2">N6$pY0>aEoFn3IB4c)QY9Z<LR(X*sc(M$UeD:VU0d1n]mEN-q;MYOd2jGQQT.RN2<?h2&
%0Q(eY6_E2Wm>Vm5O;hqQ-6.)nQHnlW\^0AGOF&cfgpqAnmS-YV0h3J_k'Y-5%<?Bo.#$i=gm\u.NMKRfZ4X5*gtm7gqf`&\+']*W
%'rWts)fBTV,pjPj`pM#+4d%UCDJt^,/nVl$gtnKE(u!."9aA,:Q.d0pWGYqJU%X5W7E1EamB%OHT2o]FHH2;?hTXL+ZmD)Fhl4;W
%e'HOocL$&S90[j&r[01L/(1]*&@-&Dl9QaBnG\+J;5M03fS2bJh?r8`+9Wl9a9Vjj=qQO71>Fr*f5`I\Q8C-je+-mc-3i%@B;8lU
%"^Y;hJ5NU7(e,os?6YLXQj&o)*>#eMe3+qA0p4TFb^:ZI*jW@;+HI8b1lrD,BfIs(B*^(^mQ'^fHX4,W5[falj;t]]PWhcaI:FpN
%rQtH2\lBN=1ia=]0rSbQYtZf`;*=6tkq3D*Zc.(sd#HSuGaOkOQQRL>RA\mrqM:rdB);p8h4ht>k8RT@(F6*&k+48EoX#-im[X@3
%'f[_r$)fIWHGWcH2NlN3+aq>7D[=6$XBH4lM\F2HauX[CV:\Djfk_$X(:5=6K7'B^GqiV?]LX.QV([am'F-9;Hr-7@+J/8e*aLTp
%iL?MA5P>buA"'t$B[OL+OBgR+e;3b%^`n8Ih[Kp!5i/FM5i&LLA1C$5-@D!='L)b$l%69AZt)B<<DheqV&dg,.0]eG!*_jmd8IK4
%"'T/XUB<'QBJ^D<fO04Me;W">-?u22"SEJNMPc`WZ6E],W^:9AL5NAt>=puK2/UpD`K<t4ao0U8#=+@b5\lA8<7(bg?MckdVi45K
%ij#SJ+kPDU=qLcPmIpaAg\1#$Gn([3F_f$4;1K3^Dt+KI#iaa?J,l^3J1VdD<!1unUb;nK'KL=(M)a4C8SK%+o4)&+[;_uO,>8V)
%.Zh4lC.U==_(L_YpB-4l(?Hg-Br<d3'RnhBpVCHaG:/?fX(\bM1IOBf,SNeeA"0FB8dihm;k&"h@DNW#U&q^;qaLZjp]Cj?7Q;k?
%ko/(fTIGD"'9J?prO@B:Ku0Fhh4g&:cUL.MU:qce7skARkNK>F<\Z"j4u%Uc1CEhV<[Ern,]TcQl3R/p$[>"b6S.18F<%&#R='d%
%/`[/a<hMWH72J0&.LPOX_72i(6b.iVdq8G9J_N#fMj!YEUEqagPEjKd0D-+[,gcZKEs$WK,gc[oj(?RGXq7aLobD-lA/0pSJlDg"
%FYn,!TIOLarF2&W-^#,HHk<CN#O+T)V!&"+SC)s&!4GN:AME-UdN^*a:mEnC^Pib&ViP18l>QpDj*49QIhOJs)<oeEU`TWrM!b9J
%Mms7;Ao@#H'F4mj0."jk366^fA!pj3/P$5r(kU.%8WK?8KS0Rq7?F/'H`dF>6-t\T#l''K5a"96Qq#.4nmTFnD*7t=_j<-4H-t,9
%XJr:BLGZWu95ak^mdOm\4ng]&:!rjRS_fkdW!\_$/Dm7<HeL,!Or3E(n[j>p@X8-e-gq0s\&2.,q_:]]^fCj]AjQdA$6aDVW.@sq
%S^/-V3hT;q6qN#CU,Fp9U^.UF+MBM69QR.bAAZ:`!BE,)[IL>/nYO$,b/cm:-BcL_XC.A!$EDp];Rir6`n9LcJF_4"=C)It@1W^$
%aBM-^/'_SC&3'>'J=j!mcIlNq^t+)tFPNB#TI*utoSD/>EuDCn\l`P`:9;V0L:PJ:\BpD3&D=Zd9gD@MbM]7+`J%g.7sYX+'X]N;
%#-0p2UP,6/*c'R;,h8*DRP.ogc(nnP\Z*ZW[Y8YInhr$p%cuq[k-2o3mQ#rLXg\6j=pcqt;bp9N8gN[KhO;,p"Gl=i5XH<1''*J;
%]Y(Yc*eGEfVA,^1KZkip5&&%B@('J?B#6br6%7Vn$IK_/47&Y5BJ:!V^qPb(iZQGR!,OFZKh,hM][3/bTCeh:biBnZ9mR<S'ESo8
%Y`K(W[F$S[^q*?9!)V`q)HT7eg-T$bVGJh%?<RTM"A\%Di@g.!l(sbh8:&@JeIBdYRMP$&6Y$4sBar6I2GYR6401"$%L=\d;)06/
%4GE\g1`%^tJTOTt/_#iU0F9<K?6e=5\P=KrOlA9\YhL.9NG-_fZjZe6Y7^E*<QuJga5^TuA_\EV.jmNenB`BMgiqrbDI"Y*<`L&p
%>B@lUL9k_]<Nga>A$91o9FfgQJe;5-(/3!65Bj]rD]!iM&t!?K9tIfSd6oY5A#-)6S)[a6;7s2gR:Yf.-W:;)mUh<Dbn[W$HX3:B
%OWS8Q$%$?n2&8V,+>a?LlAB?1jdob40'9%@:h94LE+dVE:tZ#PY%j+*!#&MT_inPh4qp"9:OqcK1nF]s%B7[kP:F86AGOl!fqT[Z
%/W!]3jt>C_;pro8C5T1Q).VE;^2E1>N?JO3mFohr)OUbh]`Tt>Y]b8Wj)n+\`3@W+q#L3KH#.BP2tVj8X#lB:)_`@r2:hQn7C*u]
%Z?.EZIO$jO"X8^LTpDo#]0<1rXi$WF>KKc8\5R56g;75K>Mq2SO^GT05Vo<\1n#R&>-egN8HN(_WJ22V!FTB.2(/oncP;CcLdQgZ
%nq#4LGg>-!i*IO%]8'0PN%$(*7i?MG==\p*@7QKmfYG,WR>!0+HiL+X5[#Ph/5B],0=i!98$GIkWY3I*Ru)[NVs;8:\g]'rW%34>
%.G4hkWQC$7gkC;qC(rA/6OSgG&C]9#2c$;j5m<'MBP;U?Rg%?p<3):UZmThfZth10\OBEsc1ibGY[AlC?gu?bIek[F)rgMkGP`5g
%V8.=rd#K=7pPWnhUeI:+/"*bj^,f>;4[fZ`Z]/ZenAi%NX[K!aM.4M]b4q.E:frkf4R#&69*`@I3`f.QN`SM`0(Bkh-h^)dF2t@4
%CrP2Ff*(Dk'cVqrdQ.NBiC1!k'dCOI1O=[j^gXWJlZq9G),:sq?R(QDCs+/3@p$<6M-f^!bQZ"6p/Gk0arhtV>6+&NndTGj08168
%?rn_XmY<O?KG]+a'G-D"Z'E:Q3O6aZl?oh9(B['8=$O&NPf^si(!@>]K5G(g3R*`Lepc0HHqB7aa.g0VLS0b5g4h"",#/;$T9p!%
%k(*]!\HrA^Lr'+&n(jGm33I)VG=C^[oSXsT#ns>O<G%5^"NpH.3Rm/Sj;Bs)-57$D'JTXi)?_@%If5UKm@@B[I/sZhT^E"74CaSE
%eQ%l;R61.c/Y6[t.s[n`R\,N'BX!jd.tsWI3d#X/fKi>qL=;=Z,rjdfm/r!.X3%[Y%#]qKGBbW;l\YGd8sML)!a!50J6ij"(:B1,
%ZOg54!'/SlbCTl%(C4,R;jBMnVTG/7-Q/d.+h1rF&0D^CG3fdWZpV%R2u+a90N^Y0<0_Ve5=-!q:$"`$!c7uhN-5]JNtDB1Yd+fC
%6Jt`I?I0P<`HmoeF&b8$[OFLO!(fmG>ZWDNEU"+u%",&]L$?73L(:F.ciiObrJG9'FAs0tI_cdk+?NUB2b\="nrXPa1LP`4O^MCj
%&YZrJ6J:Jb[0;sOf9*fd!"2LH\U;(P_=i2%.gUP\4!Ch3>L5lc<j-$$TaP7iGjbLPHdA?D@bn-jg0c5JX<TET;aY1<7MY9*F>dO7
%!%HdJGpQ=!fHUgf+HC//.*n)!"G\QQ3(Cd99J_!urA+Pt&-bD<d!)^K]NR![[Y+1AjTRgr]h4Qg0bf>4]YC[^YCtc4F1m*b/;Cc-
%K>*f$Q"TDM[N6%#_:("_)2t&N6%Z1$8ROP%rXT#SH]YJPR)JA$GIaIFa=gEDQ2"WW*eK?a>pQa.R?a"D\^<,dWJlWo^^*3hgBKP)
%L^V/oX__B#.!?DRO@(Cp1*D9leAX\rc$*@3cP<'%f.fAT5n;Ep">lLEd3.k6pcq/^D6`6hG,=XD@^6DPY;uF\P`W-kYl1esnPb+^
%aU2s$>bB`pEN5G_`%?B,]9mW>r6"YU*NKp>e=&O_0UZGZ+UQHC#_CX*^)]l;&FVo4R:OibO=jn/4tR)GEIOl#f;%1*-n.-Ef[j4D
%JQ8)1!/@@%=@7Y)[S_H'7#QZI82iFf^J4cq+!Sgu*=p*s#Zfakl739%&8?iVOE?i*>)D7tk_Q'm(K1&Ak]dI0)<u7*#b&EN.Bs^9
%<,J^U-GaBC"N)[AUC]nL^b`$(4i;RXUBPUT1qlhLall-/V$u-LAZ<_$m6bSg%.Hn,gVlL6oc6kAb!7[,21H?5Vf!6):eV3ok@U2I
%T\,W,$P%PgP]&f^*EA2G).8%$`8m#W@Xo#pIusjP)*O:c89(N3hDB#Sr`67*d'+_?7$L"dAIJ&P?Of/g0XcA>1&tEJ5[0G71Aml0
%dlJf->p;b8MtO32SMX6p-e"+(>R%ZAmJhim\e1&D<kID@8G'9^FZ_7F8O@sG;Tj!6`$]?H]YLBI3^K>3bru&K?qud>>q;?:J0nEd
%-]H^;eBWf4!%PgM87ciG<)oV4#OV_OIKST6[+GpAbc37FnVYhI[%Br31#O$=Q\]_*NTNZ4-AeP7d_X'O#!-aW$aV4VP(>q@!+cSc
%=@=o`jCE*r/$^84O\j#^Kh:uA$k&^S**/gD\8Wj!_C>r"8L5As`E/gf\HE%<:n->A'O.TcpB@947_rFY\V,b."D1Gl:`I9_@q?U.
%>3aR"\J2/R<:`6GXnFt&QG<cVmS+qj7A6c83b6VpK+L=^1PGooM1f'sBfTDg&rt,3M,7k@d`cVk5ml!qa<%Ts#_=a1#i[V[$o(TU
%JL,uubI/tt67$)t:#_PH_+G"O/)ral.p3.E[$04M@(6qFarZZF-B(73RRO[cQJdO/?8<td#dcNrH\1P7i$?U#5,AR3,b-<hfE73F
%4&$;3bi4210'&WuY+t1.#SUj']EZjK?@PTI\je*:'SPk1lHU&ibm<VJMq6CVoVLWY'9"kR6sV/Q#&L9t,Kg6&\uOdEKg#QZeTDLl
%:;TU==JNt\*Q$O=^u;4`D1lta7(4R=6qGT-bqQFE&/KUcWX6TbCO%;G"9d`F_>7]$`d8kJD3;lVc%u6B`2rW[!COsC:ns$7LpW7;
%cilk%;"lE(&9'X*=O)`H+%TCn`+"E#2]7p&8i=UZm.Nid7W8E"LsnUhLNVUt$",&R;Gg6bI6*,Y>9R[5LLh;r7:.8A+>e-bESXU6
%>L\r@b_u9[ZLOfbH*\b2V<dZ%gVP'$N8k%*893ss'/f9Zf\7\AJT`/=/WAV(nAg(_2HbuEs&7`+D94[^!g/<^8/@W\'Cne,2D@ss
%WkmM+RMN%E<sDu`JbNJ[Ue>djVlgd*f_ubQ+O=1s@r8%95H4O;itRTl0s%m9o.&W7`ea[*!42_tU&]ZfBVc4*Tb*_r\?(=bXj7P7
%T-jLLGqB/.2C4YIH]\+-,g\ii8.KA#BfRMW/&[atpnCG:T]j%"C,eb%,qt9M6Id2e*r.6W4-9Bu\UjV:^g&@G<g[SO7^Ec*(HD,J
%D0_Nc\t:C@>_*B(eA@;NJ/!N:BGC%TUUQ]S,b/l>jB]m`RJ`]`">;;[WFVla<buA\P4Ij>:V31;g\=mnQ9IFQ,UXK1;$.d"=];&j
%0nIuIS[.XN$EFZK*gcsfXg2jn(UD?-d5NK74h-U93lIg'Jm0C4+05$;fqao<4>LPK2oUt>V%I"XqB"9*dSL.tfub&n=](?8^7--/
%YW.;>#8o;XANfrD<gn0K8f5(#6ug7kA_!U^aoIY]IgSip,K\O@Tm#ZbQmZ-]Le8SGfELELC\=dKWTf+?=Uq+OPf>f2`Z>h`FiBSq
%Z/XDmd>3&WQ^98DA7[BLEI9/FLdoJo@)*A0O%BD+AcGUY4na^oem)^N)jl#4jK]F[B`fKak^=YPg)hq$(K)dU\h&,>$AUW*1i[Up
%\(#+08u$cce<m1[JgA,rA47QO=umhNX'lV1<T(bL!8t8kOUOBdG%$9OZdll_4g=q88^BCX+NPl7M;c_+.jRQ5:-]]4*R`NK1nP*\
%)H`m??,kWA%5$4-C0rXr1=&9R!qD]eMqI&@7mTjH!9tpO;qBm&64FpeJRTp?:;Ah[\F<TiM<GNse;&!'HIR'Jf^n='^k;V9_@_re
%Yan`,H\!$>;WHA!liPq57*KI.:,>Jmia^FA61@?!,XJMpdh;?t.KC[;Cb,*r&m6N51X#:s2-Mqkl@J5@HU?:/#s^9fLEX1Q8`%_0
%^Vj6VP])Yp+;T_YW.JWD,ri[`Bf0Hlat?F&1L"12WAN<C,oOq\2?]^]F;+J%Kd3:5k97Qq0Fst\2ah>A@)%jeUnqu5!fh_>X:$=4
%R_T)/>6s6<U:UOc&tR">M2fH.i.\ZJcc]F%@^Sr]76I0\"\=3<pY/6kP<_Z4e5fokK4kjSG,-WRlkmgdXW!L7o0h]$L4fffBlSQ7
%dt:[%c9"(2JC]Vrip!@6'4"S-%cViomh-]C5s"-E3^^?Gf4=Dc;'dJaJCl#.K)h(EWpE?^M%V-nfHjC]1_KEN:o*8FclT%''F%M:
%bg=[InC\qGU`E=(i*(t$!0s0M8(er^FmsjQ8e#8HB\F/U%SfWsAI"$'Gd>"DM.G30!)u2)M-3H/Oo`Q:R?5@Lc57si#:Ug2KT]5_
%g.AK(j.=L#R"ARQIIOboZ]A4&7Qc1M)_n.S>*0B04:p>GPO]$#B#k0"`1N/n[\u9AKZLJ:(7UP<0!RN\GdG<gLCgU5A.qU!coMo/
%MIBIG%D'RLdO`.tN-F>;bVH"a$>o:<FDpCfV3q+ST9Wdq'+Q`21+Gi)U]\f_),97V/Z+C;!]egl`"3ah">dS6@_f&`UijT%IA+Pc
%XW4'n,;N&>Ilp&@F3rq-J!=SJ3WQu(*Wr$,)ildKdg@+%X]25Q9ioTWI*NR0n]?MnBEuR[UWDJW0_C%rO/\ts_5U5U9IEHA&>Mht
%mIF?ue7V>KPgifBObJm]KWXdd0inC@Z7KS7(:CqQ*^opWlP6J>.'0sW\AHeXR!*LJq@m*;>trpA9RoQY]cA*VTN\>LK#(-j'eWnJ
%e0pGI@$ak4n4fP+^_hYQ;@Js(#6``$bfq&*,e\XZ0A!GZ!au`fF;QK<E/<G\*X9@+h1.%i%5]5?cI`]/-M*"FKWlkb!Q(p+&WN"n
%:f?m#Qp]Yj/7XKS_QZ<_c88^$_`FK@PTZMr'RM,C%2(Xa:a*I@nYJrIob[fH8L=G2*3"S?VW@eo!\PGS'2#H;@$*&lfNKG$%VSIJ
%SO?i<`YsqG"^W'af#,9+P$:4.0h74r2n2JSeml!]!YW10b39;g8KcPUOOFE-Cg>#t00gI!C)g>,fh$aTYGG]Z'uXG$8!tjB"A&>:
%OZs3n30q.'*oBM8]gts:k`UHIn>@HrDPFpuKi[0e;6*#=`IM>N',5u^m/"6p"=20DX[L2PO]"R5>oF-VChl9\okkIBlp_>;M8gL/
%_Gs-X1H$),F]\e6#ACMrej(IWV<i[o<A(Z,YS+/A\LiaPD#Mg<1,4.^BEgUhlijY,g$BT<`j*6*V:6SJXZ_E-5]a@:OB^s&+J<RW
%Z4]JJ^aT.Rl@#>3n3b)8(%WIO75;3hs$WBtZ?`:As4OZH*QB;WpOX6G&d'><`mYPaa'jdA1-,tk=6,t;aoY6IOtP*sD5Gch#8MpA
%QnBi_73Jk`cq;a4eW@R`_2rk1GCg`sS/?i\=Ga6(Cs%RM;h45Gb\*%.CMl/^On7>VI]OIs)60("Q[m^<3$uW*8$s#T,9pGGcm:hr
%2XE#`GN9eF%KODhGP':7S-V*<AVW6$#Y#$$>`IIB1,NqTEV4*YnG5]EIo>_Oh<E>[l&ke/9L<Otc/2G2bMbRf.25o^*4P-RAecr&
%UfbEjIaJ@>?G`3+7.&3jPO4*_9JHDH\\q<3fF$(;:E=ruEVXVG$DL]:W$'[L=_`O:n93#Z&=\Yqm4^W_B?3+<;D=kd768ElecXFV
%olqic;B$<7>^2Tu^grU77`gj]Xp4$4Da"g,KWLo$HSP's2MI67`XDE*l]gRd=`OCO&H+tD7lDNU/db.&h]$ObhKrhk/k&1p5S&_r
%c8Z5YA_C!Oia2De[Oo]EbSQ%,.NTmm8.&L+BXt6L650'T/q,epDHT;l2tD+E2N<bdS7XT)$UfnOgesP_pAP\R<]cC6WC<n^`XDhY
%-q8^pJ;V3@:W&Pf9^p.D+j@5XUiZaE7%,]S6ntTm8neDU?Q^U#M\:_>RH],j#dGU=7B6ulJ=q'1Ln#'n9p&PskThZ-,X',U+\@i%
%8Fq`Zfq!`gOtdjfp/9U2';@\p?>1$=*b)kc9,6&?V>QTM7q6TS0JI[j=E[W*JLX2l)$!MINdXG&=OBZ8&Isrk*ub"_Ks,=_fkN%1
%'+!&"j>&0i3E_,/X9$TrJm9\X93CY%.R,el@NaNDBU$$J,e96a@PP;3jQScWjd51_93u"&"lLJfYTYD"@nW3<.$aO;8ZY$M&.@_*
%,+U%tj_+_D=c#K)p862^\Vg?:p.<%b@?'K.0N';h5Z:V8;$f,gQ<VNJA:@TkEeT0S7)]&sjRYuA74(Zu\N:utZ?t8F2RC+'I$gS,
%,n8nW4mJOKBp_`&A90&mZD%Sf>6%t4l3MX0VICuBXgYZk.`1pIT.]*AfZ?UBdONog6K1]qQqDp<!72bOoWXF2gs9,S_]Y"&dXD='
%6R54CR08(Gi'gk$_"FLapPm[RPF4T()?=;I=Gt`[dXbE$25J2qdW8RM?KhJVi2C_?,="Y5D2Xu[8D*]uTFg'D#j3!S1droQNFg^H
%')2ic++T5?!nY_4HqUi5+fL*&V;_;?6<F4s$JO-ILDG>r$=*Z41_gKG#Zh('/C9Llr6c2o&&rN3O=!=6&>Y2cO#/>dZ:LpN*s)\9
%<]Hd+&>`C^=_*b$6!bh:\7L=43G)6@&0h_;TNWEk\4oDYTU7!h4pc*jT)nRhioQo<Kb?f0+;n!CU!!baF5VWURX8"?@AFUR1p!=m
%$R?8$XRYJ/-@f>O0S4o!dKnD*_hY/OQZTbD\CO,8OCp<QV\<bf8\N?'U<Kb&]PFo0N++#Z6-(.p"<l_=b&lQ<O_:mBBh']3MNG-1
%!LV/<J`+^YX^_5U>tHU7k/Z]lJ:mY?n#.f]I1.)A9fd-Ic(cZikZS,]J<Rba>;'hLFkTrWi>>/k-mh5fN:c+mDRO-=.l(PL*)iCd
%*r:n-%nc":*B/Mf-KYW=o["#!$FjiG(s\hM;^P`mXb(H,)%rG_9Ph"d`+6Jd@i.K@V[l?Qn5o`q4Qrm)l8.E)<5)N]6\'PF(49>.
%h'52*%e:/7AlFtu;j=hCJfuY%9u1Y/;P+o34FKLmpJ`S1JO^r8!LEo0d%Q[(JAn+%82N88"`.IN%oGiYg(PqFiBi+t1H#Rt7PO<W
%1oD1AXYkN[Vf1g#2aTk8cup@q-;)]cDj_-o]n5/bkYHgh\i#Ai"KR'rQ^DGK1g2n(/[[trFt=&b`XD(+ls=(j&/YacEI84K/Q'8N
%8QRdYdABM_FpXVST/o[Z@UMEe$]+u0![I,/Mp`V4(F6<$_ZCMPCd^BoS?"Ba#'NcsEtbdsZNHbc.-ucQ%Au=3MJgeI,*JL!Wg/t=
%V#cD#H;4HlenU1j.K>0jaU[%&<\R6NXT^eP0c'o<G,<=nqj[7afS<uZiRTV`Dlc!`nHUX*-Xn%S=kMX6=MPI%a;TaVB7IQI]*.RJ
%WJ<sdH&6R0)HfbR;C<C!nrR*c<Re.;>U,O;HP7NYBPA4B4Mj?E8J(t50W+iI7a>!N`f2$A@`EpN"IA"2aqRLb;$cHX+V[9P*1V08
%BX*7&Q-c;I:K7'[!Ab,-DA8TD_)Df*pSfH?1&X9[U34m:9F8qo@Mi!>$u/$j#gfUFZq>H@&QK4%.alkc/Rasde=WJSXHDsI'8IAJ
%kUXPhUkF8L<fT9P*_JX+(4ft8K-h9d*TU))XE3b3GdYT[j=o!K6%CRkKfJ=B1BtB_*Ak`gB1$lP7keCC#g]Zma-;[o'NJrab(aAX
%7g$,L;hERQjA)f.*bS"p\DdZSX+9hhJO>)TXDhZHU?(=diQu'XC(cuh^>Od.DH;,s7Ri5Kl<CN1!m[V7=MSe4R!7uA_\6,n6231-
%n%L9p=JgY"AoORX6m-d`YXprC[i3B;nn:d@R=W49kfP#1&FK?QaHoT-#KZ5I3Ro05rMa6n"&tY&M/<J1Amde,C/Z7#d(F!a!893&
%Q.2]s4ZgYP_[=sL._=4:HN/&t7u_fh$5#jMqGcrA?Bt,SF](bgUUYk-0;=)b)0,LZ?r/4Q*0brOhZdBqKn3JJ^2UHp8hb!B$I]>*
%F"<dbMWfk0NO1XRDi6Re_`h,+]jXJm77"5e3Q)JcM)=9ITu]\8U_:=4.WqgM_on#"amgiIlO4GnV^C9;2$;i?`LB<;+:.ojZWR@N
%7%T_pBa6N?,45S3OVP0B1UqSKRlI6L$3JOhLP0%-oo^,)C`.be+tM]s5hf*<"4s+rW$3"aAV!WN8e3(+;/5`o4IAeW-lPQh4e>7+
%5mF6K[:'5?XTsUs'!rRA`6^2h@u/%PBRJt*@Y_1,c7&*-9S+lHU_j\L+JEYo1^c'k\m)GhLoA14-gjD!5rL':ft>acAWm\#<:`O7
%4.7[O6k]8?/9ce9Jl#ulO=Hr-#='St:.Xj5U7cipVau,QXiZTRgd^bQ6Pi=?`^]&ZTiE/@*%[C."bKuKUQo?ue00fA+QQ9*o8&c*
%'X02\UP5.2YSL)UK?_9##l<4;PEplfrja"0;Y^s-J1'nC)EL_5/V.mOc8bnhWq8TnBnnpq5T!WI(.BTF--Q?n(ATf8oN;3SH/bS^
%&lMd)[>iOj&ESPcX6_Oubr[A"l)cPGGJK02i<'l1,SJ2OEa)EV(j<(Y!?R<?\D],0NNZc9l^YG)@`Y(WRXd98.R,/NDk\@N_15OR
%S47H)DSF=SR`F&qOdC!!'h+,<=R7H6,Mc#JJ.kVpSb+#.nr5<Cf"Y7dNEDM7SaRlq;hX&$Zhk,%JqWg>S&(Q\-#S639JL=Qpj2_b
%\62^7,Vc*(WGlYW%8;PW\Kaii_u;'l@S%pm#fa1,^8!ca_&`Lh?=lG6Jm%8E"dt6eodERIk#?YK!V#K.FQi2oL.'a+&N"1Rqr&i5
%$jeY%:Z\KkW<$si1+7*o\gV7++i?s-9J673lXga-@jeXGWd<7_U59T1E)[6f:\_MLgF%'-JXo<5TR2SB8o&VU#WG;MVRtA.<W+At
%<@d2+be$FQB-S^olnOTuM&dZ4mnPR[\0MYgZYV-+:J[@I&;2pkg*Y!D'NdHJX%7Sg65?i+=?9HFU)EjfIl_VOHVpV-3@@dnKj+_W
%M1r+7lq&$\#o\A.OgKQc-m1a81t")VgBu]%bWo#)"'V8^Y`P75V!CO^i*"_[rB<Br3]fhm3E[o#;Mb='%>L/OjP*g^is7&f$AjYn
%^bp$6be!*GP&AEGDT1WOPR\8edYUGaZT+[SYj7.^m%!">&N,*3aVBFH<Fs#d!RR8n8Tt:$\LFNB.l:<7T0s9dcAXXY4O;sqYUn!0
%KA$e9nF5B?;;Xq%(Ej_(P7,?gi'/OSP<ge4pU0h68S&h-&lXlIGV^JR!`OkM7EcoI`LQjf0*g5K>8)jhIK6Kj0??\P>ZAgZSJ(9B
%&UQgSPD!?Q''%GTGDL)$bJb_C'$pkKrknd]/T-g%Z_taZrbN<d<n8c6T'/J[O[YO1*2NjO'oGbt@RW7goNH63fZK!pO+n#+b]&*m
%RLVc3Q7_Z=K+VXo6-OmK-_6naGTj/&`SuEf,I9!2Ks!!jM^Z$Uo98rJDGliV/aYfnPV#P#JQ64!q@$NGkYRb3<Gdp6$q%nWANGk\
%>Q?q&0S7\E!*"CSDQll,_oS'4lk75gR$U.@8p@\j9JDu;U?>C*$`UUk)cM3#Q((SS##Ga^7!QXYJKYbAehr%nl%kMP-2h6U^dF\K
%8=#YKZXl"f1:JA;n;hU=F]bGq29;GI9?MKI,FG5-qIh1R2Lr%gg'u/G*pQau*N75F&RrM1SjG^m[ZH+Sp'-a-1-NiF;!JS";3FSc
%dTGIuUX]g4d)JUn3C0'p0MA^#Mf40L[dq%"i[m^tZ#l2e%uUU8&gA^Q9gV^>/$4k-!`B`5S%6`q8rn`[o1la>5>(-n]h5(6P*S&/
%'8E;m8qUN=:?%Y?Jd4$\J<F8<n4SV.D1g3B&]e>Hb,C8>Lu4q6N@>B;QU&ED/P-%9WXVBr95)F-8.JMtN03f<&J;&WQ.LZLs+Cgp
%a9Z(>4E<+^Hb)X'.l&sJYeeMF*>bbY8/VI#AkH["lr1cc.JBYa!N'A@>I#LsHuc?NR1<O=M0#PC)J*/CUd]6<&JGPK&t_/]W8qUh
%9X',rU>?/82cEd/$ZI"oA"S2Zms'.bD3-AY6M=&5,cKhU(.d"WW@4@(cTpJk#$iGI'\pAkaoWgg63E!W00a,G^m:eMJ=g>=SV/aB
%V%njg&5?Gg#i$0qH0<a@JO,=UV*b?t.OMV[#$Ipq,s_XFCo[\E1)-NM%'f+TbJ^a*88M<nK#jLHkd)e3L!U(4&qEcNiT)8d.rXCp
%5f1#'EV67)8>I`6c[`rrD5"V_l9Off9)#_JcS:')//YBV&QjB[/0"m0NbS`@XJ!e.\1"H*&P-M[J"F4I:ht7Y&IMYd`&>st8adH[
%7?iZE%;^26f<V0Z<m4n2.D/&F*Rm![WJ&\M7,O1bMml#*!sp28nk2s(,3HZc"-$$8GuQ:S.e6mC>V7;n$oF\dF/$AUi'J]YVWgQ?
%\C%UD>'n2:qZ]8RQT,S@6RO9ML<T_`9.'<0U1U/R!c`%q0u@q"D)\H5-"&qF9qiB?S]9FJA-.O?B@29-5].^Y_UsU[Pq31jSh7/9
%Ej"\'l!k!5V#V>GKb$'u?%Z/[*lLm/YtbKfF='X29I&"]<\"kLP*uZKVWn$nP.;\adMOG$+nRChMag@mIkE>p4[8K]'Bp49hF-4+
%V,S\rDe#X9Ub@@?V2p.#]YniFY>82.VV!pq1)Bji<'^+`bX;bt5g5#gl[MhnFW;FW."o#cfh-1X<!C<_(,9RdV)s578Qsl%=+Yu[
%ilgIOGtt"I($Q*XV3-'7\H5]%'o4Kp;Nh@)%KiOLZb=.Y6^J-'EWc,NUHjZN/-()=NC;>(kfuR+F+$M$`5NueNt"`Y:qb)Q1+5oI
%4L+*B(s\9u^4EYl,2-8P)I[`,iKA4"Z2Otu&:8DblB9l)&[a.5FX3N2HWf%L)S'!P$NAaW%YlT=%8TK['l-M_BcpgudBKo_$=>Ig
%7n,@D3EMS)\nD)CKa#Yk'Z%j*B#^F1QkemU$>u7-F@6VD>!6SqL7L@;mKQVR]%Blf/VK+P*7g]\TqR]YTOW,@(Pl]epOJPLjRY0s
%Nl3Mh2Y`j)\C8#,@<F+e'o93I$OkJlaY?bX:I<+C@Qkd";D<a+Y3Kf_A\,kg6R+s=GlN.L9'QO5$lGnI_Cs0nbGSp#6oQ@V#.>.:
%KOq"qs,]%TbSFA..bm2`O;NTXg5k/o0Oc;=<%-GP.`u;0PmTmSPk-WbC??*)\WEo?=%j>_RWX.@+\ok$BUlFqPK8r<Z_V^O)W%P\
%b=H,5Z5P4Q.FI%@!,e@%mu_c6ei-ecX+/89Y""S[A8ssC!sqa([K^N&r)uqU[e0aT%er+B:0T)6G1b"^nnjAVH;tLF>f#o$TaXM'
%.P];[&I_T=.;5aV[((qqo7NE\6>Y8,ndWa"b&0pcD,At%$8!HK)2uR!#i\/$1$>pJ^Zf#!<_:K:!#cI-HD/rX>!QpeBkC`lGWUF=
%,LX9o,h9&FAPmbAkY!X^613B+HD(-<JKu9nd`+=JL(]o57'Rrk0KBlL'OLRWT]9,YVrSP.=V;^(en.?2B6;R+`?KlF:Olc)dUL=O
%FUDD(d0+]-D7*8,@:Hm^2)/hhBun"U^6EAJTIm/gA"NCU$MJfoENd=;%CCR=PWWdP`_3d/'aAk&K6V4cFMba^69Gkr,hX]Np=J8o
%"_Ns(a@S)!"iIh>ZE@VM"B.8kdkIjn3]i24+e":/2Bm7+4]*AIU1!.4_2/(I.%;\G,7-/eNGGW,_56CREC$eX6I^MeOj-%K3OW69
%g'CVtNrVTkQ'=lu7B?2`$jIP;5XuS6nRT)Vjem9kHK9l40Ih_5<7Z9I%Rc#jNa,;=o`\J$o8j<_+IFq&huk>1>LFB]B:5ofZ5!EV
%ktdLtYT"@=91,-qo+tWeg'YYLCCkih[t9615RVg[gW8q#CRW'#>-ZL5Pn4#%PX]EUGq]fhP=dknP4ACZN2]HV3cg\7@=4.p)t4&8
%0Dm?+(Q\^#b`7K=3ZmE%&FTZ5!SnnXVpY4o-rp%1^X-=KAN_7p==[&],`Z8D;=/?i?quT8K2V2YgA&CTBks+>!*ff[,:rq51e&$(
%[c3TOq6=F.Q:s)N$E$?@WKn-p#m(bD\W/5gB\4"[9a"[idR$3(,;Rt,6Oc:M^fIfn]nm*j$%+#T*LU)4YoM`2gE]3Q!l[bS8Yo5k
%BH\K,T$d*[="D5qr(d<LTI")MkUbpd>>iE\+SQ2W%KI;ID+=n(TUi=$nWtFS_?d>dB*?>@jV?ubA"+nS1dDMuoM^O*cV>t!"XsEY
%b-JOEnBR%,g!PUq<*Pm:#LnkO5j/1\D5(KSYbX8c9`]DVXMhPjGJb20=[OYXT9#5[>5"j*&tV/dS%$ht&jW&^N_ul^[Q-,jO-TeZ
%#p=B.O'p[-Kc+*WO[DPH+aK\*@,)(EH>>$[4);;^J1IEhE%n!X+lS3R-Rr/F&2MJYie]^q.jC92h+g;2dn[8I#W+YBl_Ld>Q!>KR
%=hkoKj+-kuoN5P,3bbH<;AC1l*]aD`-'^5+;4s!WQP[>=e57aiof+49><(]7>OtBD,-Ii\XM$*i.cU^`H(tX@KO7/%P_?<cgMmr2
%44n16KStdP6]mQE8aUpG?",(q@&<s>U]KM_QshcKSuG#N&FjU:C3QCW"PkF.GOiI4FJZFiBlPO@ILTOqC%1sqmseC,[l865E2c-*
%"ed4]V/?ToJ4?)[Jc]1RD2HFS""T4)YLm,!CI6"J@H2/<RYb+b`fqB>Ul^`*-*o650Ye)&F)m@1!A2="-@epJbcP@in4^t.N'd9*
%,]/a0MLqb@GgOORFt/g!35R:"=UV=>&0t6!,jC(rI_G`FrC^tE2+g'P7ODYM$uFmplSAgELA3F8E:Bn_@ql_t6u$t+Uh+l5DL.*i
%&4bZ3oad0@0@3=%_^;*H,8a$9r\?'OTn!N&.kRFq\P<M@OMg=I-Rgn&JTapg7psD9Kb9NS,'fk'90gd4,I-JT.E/")5mK'b>fKAq
%EN+IAj4.tD->Ag0TMo"\6[(hq`Z=a^e(CX!OPt<+-\Xg]PK$6nD96SNCh_C.,bD]U?G\T+els:RP/'0O36lp1hC3%mbCosF7PR9Y
%XJMb[m%nsD&oWsZ%Um-tBA&^%$1AYa[jcmQ9*nc0i/J(/'CpOE0Jp*s2eXt-M%SGCbg7R4_T2^pQ9$=n^sQDZ8pV[@)70bXKdL%F
%-pFp_@>@<Dk1i=g:1WM1jm/Rb.O6ToCV:@9e35J>RTR%*EQd"U<;;k4g+R$g*EHqgZl,k#6&*hmq5FHa.Q&R2dhuDlh1;N1-)LpI
%'O0tO'DaB?/\.8FSiup[Q&^L[.s[OLWOLu2gTk1WG%Ytj3^=VFqUAUqHeO4^got8h97j0VS1dDA7krGEe@0.dXHAbTEFN*&-EWPO
%[3SW44UG;N,BC0^0b[IA$'p`H#SdL1XL9h;91'4%+H?*Q_5hAD'TlidT^Ip?"d4<FA%L?-dP_0i7Usfn$rLm]9BWSq%#SXNZ9XFb
%0cG%`U8XFV9Pp[.S#2k-G!5F(V!R_DD,)J.cJ&:GYSU=ZKAeR!>r\+*)T<sI-NccdBO=X]L)@:jJej7pf_.?rNAs.U(hW;"HQSmm
%OQ/\s[WX&EWS3)o'1(rQLee"HL/qnD4JjO\6+RCnGjrT>`YkYk`Qo86n-Kl@ZQssO.9\6O&</H![ZDDi4ZH>,-ZLa3>n__!ZL+js
%6?&PY8Q'Vr'1;p8d4JB;d%g`IX][7Z8!?&#2//i%M)J!$8Tets<AU_Pil4@qMi_+ag+A3kO)fFR)L2?ca-FuZBe-!C//`#N#LPL(
%-8;;hPa8J$/CXh@JR`H90'ssB$%sD/g8XeSdNB]05T2^/Gn32od.,4M=kKcclKXEnXBII,_!3j(EQ-Z[-2I[LJs6Zo;ClTI1ut_q
%5%K<S6'K6G:Z8!@bSuBn5sU_SrM<N<_QG`2'5c-=8fC_LEDk.\+AWHC_S_kA0@<Ci/pZoT:5V@UWNVG5FpjKZNJ62]<TR(H>J;UK
%(h0N-Y1"RpFrV/*h$CCjNJPHR<Je^5HhJ`5ZJ*ZW"IB+fj(.mn\,b6=eN\\r2?=R:A]#:)YrI1UOi!,RX+,M,"p>)BZVI(N7knKn
%[.9;091cagBSIa^=9De>-Xptgk`L2u-<*X\2C";]>,fC$A'kOD>iel<+Q]QMR01?d;%%b[+;-mjZ#a@#,Nf%/buUjH4hK2^OV#Qd
%rb8=!5'k:>a?dm<cKI/%2>m4p5_r!Zc$G@=9H.\"p1ug-H^GXiZH8usL`_EZ[^B$I@Lk(aIb.!Gb"f#^`-1?t'==!#EflFuV.?!J
%CI+s\"ch$S[Xt1B8J;O)1>-#<qOCr@MnPVfT1_PEilLW:J5j%@UcJef]F9B<Z6[%,a!"[`n.KP$C?pO$XU5/0N+F2%"YIMD*!7,!
%C3CgON)O'i`$5Q,rWq:63mEgT,-'6%H]m>bLUD_nK+OoE^:"q*J4.IGEF@A"M39;WQ5P#/VZq`(2%2HBHm)m-`OU[o'=D`kp,$8u
%NeMXW&:7N/L""'9A>i&7'')&VNOU,Fm\GM:#\$s4fuU1j4/0L.MUnt305LnkN3[8K$/ida%B++KQ5/^R=jMqTC(k._;Ui!U'+9jf
%m@p@E_kO$2S:&Dm81@Q'DD%WEX!G%U095O+!XnIe.@K<t.cCs$B4h2q96,1.6:$IXP;>N09CH*+a/V?7Fp[jsGV@eX^`,g\0eVp^
%K1;F^$H^mBK?tI::1iLui-bs,(m;-TRRR@I`4/Q>,&67Ak^4C)&&"cp,P_e=P-H6n/G7nr"WF8-;3lljZLF%ROH%G66q3BY5Do.J
%r^TrM)HDtV(g*q8,K2T@&r_NdV-'0tc(1"q2Mrj-o7=:TC^*4G\l"hW^96nr7`s+4E>#$:I$Amo0.BBsQn\S]5gO_6m>??s9WG>#
%U;39-d?qdMg9=(5J_T0.E;Z0S1j?-9lE#.u+I8#uq5S-*)H(>'$qp:Q035$68gUA@Y-!jOSX)'$8<%$Y_60X#bFO4d=B<]oY[R_i
%XJm7:M]kQCB%jZZ^Is8]O@HsLOsTtHG[[KFX,AXmr(QBi`MF,f1@aN2UO#&Rqk)H/_G,6hgDuu\mKMS6DU!Ds&5n":8Fi-A=-@FZ
%[6o<pR%>O`k_Z`RTu]TMUT*4nr7RjNF]F#UK+]*.g^X)L:btW.fYW])MOIp_:QG`*eLJg9c]3cZ2`79V]h:aJE@^*p/Yg.jQQf(R
%Ju_M'B8OZ<8'H5E$mfh)@E*)/9"\bi$Vt5gY,B.SYM5?aR8W!HRVl_k$*V'8+i<:0UchDiKg;Z+lr52N4:GLV!L*d!Bj0$7O'1sc
%:WKUc_1N?]454i7nV_K7ZQ+#D_>/,EAgnF=foKPUB?YnXC3rf(^a%&V>a3*T8$<K>h]qtZW$QaPL&J/c7;gkDhk@*Ab\9H44)"m0
%Q26MWggF,4b]aIVGdG87a+0R54u&g&Zk+(@L%gVSM110O0$bf,/X?(U^b06GI)LAEO9Zu]B&UEZ0S^*3J)S'skTBN4>N*7g:;D?0
%m2`PY$*Qk#GKEJQ8gV/D<r*[ak8jC^83Sk@]Lu@"KI9g;4/+OI]2?:(GY.+c)q3WZV*KrKA\3R&'Z%jkaR2SMVDmod`Rr-6&$'[*
%JOU5ki(A-ID,%UX&^t$@7REmg$dkM"Q/R*]FD$\i7-M;qh&0b-D&P+aAVXNq3^uee\7(<HLr+8Sc[g+fb&fS(%%6NOCh(e5a-S#H
%G@@^3-:pf'R-Mrsj:bK(rIs;r_!3IUGJ.NTFsgaN^^Jm;mtK>qb'%EJ'27;0aE@ff:_4GS3s/.(=l7]a5p@$T,J(L7>Y(i-V7SMd
%\W:W^mLE^"(b0WO#+u4(D0ruY6`tc6cOK^<%-!mMhcINRTId@7U[m4A4UL48A%F`%5'^&:'tQKB6jYkciO^o,d39+YOREZ5;aSL%
%FE\Gg""N%GI`PFR1#!]KRL#Eel0\tqTpYj"dG5\KpsQWP\iW:-!X*3Fh49*iK*'CSh45]RU^93?SLG*iQ0o-FV#5F"gE#"PM'HB[
%mYL-sG/>EWSK[SI<(p`4,J"gcljDJfHUPZW0kS$bRMD*dQ0ceXAXK!W8p?&T/)fkcFEbNJP7O@/GD)WIU$_+4#T\\LgG.NT+n7\Q
%V$l+MEQ$Qe.s,uioqft+FEb`='2,16K>^E-?q>KS8HP/D:NsjLZh5hbGN^Z"5./'@8U]1G=111W+d0l]`-+X=$;sSHgE!O6R4Ke'
%G9X;(L$h^S%&b]4?%9%EG:*o<9=[l9>-S75^!PU.,:MVr1=Ca3[%EI1#0`lA@.5o**Tn97XDE*8aUSqD.GGlW9]V'PZ/&iL$*LhE
%h4aj;qSSTcc4V3,VU1.d%[G*Jg+I2c^uCH/;IR2D$q%FOb]X4n.+9KsZeYY?OlaiAm7tGB]2c:$Jk6;rT([@/_G)5=L$d0i@jeW6
%FEb_bNTCnd4%N&sF?SHN@4McRh'(Spd("beT[;L,`/NVW,J#s%1'l0LTt:sE/hD*grD,q*G6!4+^;<3\#IHD2L_[K_kZU:<*RW\/
%0alH"Tt>s6,F-K?mLH-2)<WL*SKW`$m!?6)6YOi.<p8r[_]9(r6mOa^,]([CdG7)<Pu`V-Nn6!#<;>m#:(a%;b]eh`:4PY=hjs;G
%6sZ)Hc?SHN)\WSs&i-kgkI]c@A><5b]/'SsDTiIF*Rm<ah^[M(NbV_b,JH6lg3k`E'tubs4cWO)L%!=&"F'^kT'm02N9GSr45^B8
%3+YX(#EPAi<JB`KN^2%@!(+<::3p<f9Qrg1'mlZ:0Rt"2,OjL)VJDr4Tt030F)B6D#D9g]T&Zs_Kr8fZEJK];['Wee47p1Kr2C7_
%_,t4QoSDB7.22E/(OA0lJ8YJ9a:Z*+`%8F%oQH<5nr4H344BEg257R4f[6THoQCEf"<h+gH92Ccb^;fsLC_6ABOSB&h*GMs6>f;_
%7[\7BG!"V6U;X*qgP(f:0B@:lDZ"@6O`t]9K<IWUDTlr&X-f-)Q,sMJVQ_QEP,K\p,I0;qU#:af+Ja$%Yd*A^P@(U7Hq7(h8&VR?
%@osH9)@0>C#qPRc#`O7*:c1I^"9krXM7%?[s-2qe".^,s&ltrD[Nj(h@4G-Bm4:7h[#9[Y%uM@[c8&k;,AbhZf?Q/A'MM;=7n@"N
%O>4!\m*1QG<?\e<+.5q`'k08WY/.@cBh3&1n7R??.'FWoMEirX[54?d.op7D2FEt*f?P'Gm4kdb?C<'>Q._1?MP2WSFe-/r)fnNn
%G&46qKC>5q"JJsYnH;JuXuk+[U[n`PN9hQ;`--lZ->oOjgDQm_iX2l[@1nGh:IP\cV9Ql4&[*3-Ug7;PmGL58+a;nQ1Sd*Om0^$;
%/3FI0rn9_MLdU1W$Ep"/YsR3og<m3VM-"EY!32MQKNk.X1Sr7/db5Q_/B"]h[54N(,0CM"*Q3nb<*D@SnjmUnCBo[r.u\0/?s4,'
%Usds_U('"QCM/HQe>702"!>[<U!VL2B$lQCTs]OOVJ-gB[=cC'JXOs?&\Ah9H;&*e^uuOAkU<<]e4[W<=mZbN@6VH3g/1qG&Z`4k
%_6.0ud?rM1&?`U&4ft7U#(]Y<;e"ZOi\eL*Qfa`+ak&#C*@(]A;crDqEFGVJ@C>,_aiIC_m:c/(5H:sA).M*a'iI,P<(^=$WL]^6
%11`<g[=_QuLC:(%dEf&`.]FF7NHu@'WL^"Vie>kl*^?.o.]FG`!j5*FUirtr,ue,?m;S#,JXh'ZC1g'J+'1Gh+S@)RP]k'0LoY0q
%1B_)C@>3+S&AbsN4ej%ShkVUmN-6%O,:mk&7QZL,R1#c1,pYf1N-:G-5-?Tn_5pC4C!%<+1:X_>o$<EF%Uu<./#AeV)We/eFp<',
%X>Utog)24cg<`dP_>Rnk?KJQS2*cj8F4qM]-^M>UB#a<KVi5\WEL0FiiC9&TE"8[aVGPtan"fBW;VE!TFLGe8dLP\>5&CM"G1b:c
%.">`)4,AS7Z-_2j+1+eRi5ss\<?g4e,?d0b28-)uG*!"$H(hVj-o2Mh,@3IE2=\WnY8mhe0).0)*ShsDjU_9A@@J^@1s0ThHP&5U
%6u.PakWB6$Ph(jEP!FDKf$8r3diQrk6/&_@f@/GFkccGBj5IeLjG;:q9:aEE8npk@I23KW8F:ApYs,+Lg+dV;WmO.JB3<:1g(dLI
%T^3V<+Vms;bc`]PN_&P2/2VX+eIFg/@_9KlLF=2MKZC0;G\a.j;d)8U(e??`&DIMRJ.4$IFs\XXAgOl1M?-tk8o+`Z_`,DkM="];
%ZrDg7fFIF8+XekZG3#,89\tTXNkH8\"tRW8GXUE;EJ<&*JNttu'k08q;$?9]A'5g`8qUVAC^5U9&h'ppgEE(SZD^B3a522!NfT"`
%d)f)H]+WjA*7Y8CGnjdMbN;sPGkK!uLd!OW?$Pb`FABQ-8o.!=M$T]l&[<@p'!X(5G(ssN>2P0/0gaF/(fm$kBF&tRH=f7V>e"Qr
%AiiA!5$2\IAig<N&[>*!m7?2$FZj3B,8;bu`s]3o_h*gL'kTPEO%6;]XlpT-1Kq(k(1oX!LlPE%mA+TjiP-PBSRm-N-:"!d#jd(*
%YVEI)E>"6(N/@pnWT3:[AikHhdc6@Tm7?cpG-P\gA$\8Kc%t$_m:5!1Z"LKiJl'h.9L/_M8q_S<,A'"]&.q.20\[3&Mr_!ofoATm
%Er.#d*GHA3-!I87fW.@tp;1[%pLo9#E6)n:I^dVre94s\K$QEN[Nd^;^JCQ3'1m:/[2j`HOs.4RTmQuf<2o8@67/4.6Y\]='.NF8
%facQq_XpuumFW[0^>"b&%UVSFARW"\C6@$=b]^K#HYuMnLN<*SI#j!6NXt5ob%le'H.`lV?9<>*dJPH+G(eU^35,sYO_K]F@DltP
%'N\b&(1oW4M^p)rmJ=anQKXGbgX4J$"F0jkF@iUc^\-*"ide=_7]GcGB>^IH6>]5U!gZiIW9oDp;-9UtF,6Kqm#4qb4/'^[g^:S4
%5Z$*C;p"E[C+BeXm8i6K[m`^A\VH21?M$QSoQJ1,ii!6uSP1NAZI7Jn0=k7Zag0#Z6H%ll_JVjN,MN-Nh2Xlk7$AY=gQC#Q$L3l4
%Nl4#Y[)+ZBfH\"=6uPS&]$n/0bI-=*lP<<C]Ch<Cs.hhVHFs)!J'S)kl/1:jJ%g01GG63FnGO/i(LQ89?0=L:H(slijcB3dK7E^d
%K.gR&hidoln^ZAQ0C-;8qI99D6N=LXRQl8R/3a%%K4aZ00->Z4p;7EbimZNSWtG3@`HT)VDuVcrl$p#*Q\Ado^A+o3DALRin%S\q
%_[i>,`5EinKNIhbYcZQErer&)L\Fh0If4))YPbj;4BPo:56p!hg#;3-kXur?:Qjag!Y*s<%H)jM%;B3X0HD:`5S'3j?$uD2Q8d3X
%D?VP2oS28)]OYLt%_qRu.^)&Sr0'1@Y?#S<nkDng1$F@iW-lK]aM2?=T2Ob@PJ?FPaQmNP,,VIV1M*DMRo]spD&cCbeOOHHHo74"
%qAZg:5:])0>D2YZcaMX)TiOu7EK0t"F9nN_b4f.hgCU3\]U-eQ4IQ?I<S;?ANsiYk;7LU8K+4Tp_D#S4cOB@V/+6<rq@5fQD0n;2
%%,IFLQcSS!jJ>=4o\#uH9ja[<#Lg<Y11!!Hf3Ur.qD+]dl\="YfLb[F7-R*+jk`NfI[OMke&s"NHsD"9Q0ZU1Yss&M9GdGEKTjp]
%m/Duuj-Qb9[?h35H5j![?=%OBCfTmK)hBs:`(ZJ`0q>@p1b*j`13aPKlb<Dr`Pos"jmrYpci=H_](rfW&>m#*KQ'nqm831O&VCJd
%;h#d'&G7D=I[,D#]L*YZ7k-Q,J,]80?YB2X%mThb<?h145-dZU&?j"mD9?[fqUSa\ou`i*+A,)cl@hZ5YO;DsgBX&%X8X_?ZuU(4
%"`nJR<r&V>!us%Un#[eEqZ$H^K5/R<QHMLBgN"16J`5dL__9[9Is\-_L7-Dd%R2"'Ljj?4H<'%+@OP;ZdJDCe&VHbVVcRC(BQZQ@
%@"T!Y>soY"mDTK9]6BD3pE"e"^Q8E-<JS5FASN.Za)Ct;YCAPocaWc?K9,>j@=!G$h<3+u\9u$OT>t".%KH(BihM":3krc9pa!W4
%e_(IOYEs0@DJ/#/l=BRVe!F_1c``Yo%bSb@J%N5Yrt59RrTibqs7)lH%g-`ZGfe8ZkAU$^?aj8AA]cOoUOSQ<fu4Nn>+[L)?d>6M
%^RQth]l(Rio5]-Mj3-`pUF@#IC,f,ro</J\pt+qgE;@EO/5NI10Ag(uc`_S@\a=ME,C72nrqD>WlSfKs2S+39U\sb&hg]tOqW5in
%k4[c)4eFDX>kFq.DnL!LnbVY'%r]d\(T5I2k<aW?lYP(?mpn]Wp2O?MIJ)^douYP'.4]RdnZKlREV[lPg%FSfPs-&=)d`:+g%hGK
%NNV-+g,s,em0!7EjN[6K=3H*-btE3%)81(hXp0[KFo1+"Q>bWO:H@FWKbK`r[WaVg^%:V0J,/JK8n7A92p_Cs50DQtm@WJ1p%%D/
%qXSC<8*M\_mo=OSYt[0;c8&Y4X+>Y>q=a)qq:D[2f.YHFVi5<;J9JY6SmK-WIJN$lHJ3OfTXUTUFo)Por7UY[ifi&\gCs$gG3/F?
%H-NMI5.P]_G3*%8SRb7Pr/8b)2ikqGS+'EjB5YJS\Ht!UfpA1V\_3==IC\$tRshh0RO@e`G]Wj=H#o/RF"lJ+Zj!o$r`o/=NgDs`
%cbFaNo)/'F3H\=3(qP4kHbA^GX7PKMq.ImCca<OoJjV6)HroA)iV`)OPNm\#k.dM#IIlUfjPkF]kk<bKT!7"A:H<Hfn*nPl1575]
%rV6rRqR#XppY+s(`JZ[ulPk#b!Uo\73OXRqjeeGbWk;Z0^-+]kqX_I.?X>9:VL4d(TBsd"SNaccQPXSC:[U'Rr[5;rhh9..2fGm+
%S=D4H3B]Bp'$qY+^8l7E_]qF7l07=*jjh-GnoD?04YhP:SMisJDV"'eBc,J+?bY@)?[`66^2M^^qiOT/6)4GJKW4b(*P0.#g+`4_
%ipn?g)T?g-I[;t4=-mP9f?^>5;uZE.YORSnI*YbT+/I<UkY_J+%!:iaAmk2G1*;XjdRSN)EpT8"R,A_Wj<f6_>dUQ.2;r6GC"kU;
%@kddCL2B5Hd2;dfH^I#ldC;F.:uS!NSR'!X[Ci)oLHVT"nI?qghOfZ9QnR?ZMgt]Uak>6ibBu8jVA"?D8FN8%FF:g8qJh@[4@j7#
%qF5h%hr@#[@]o:4YAha^RZ]gp3>jVSq.q"pcDu?0K[K.3OjAC'[.3eZo)/8t\bt=k=eE`@a(12WoW2Dj4?n0SjU7C_GP,sJT:MTJ
%alOP-TD>uhbpJD.?!O[`*QrlsNsE!M0<\]s]KEt,EIne0LMk27`qE_u4U1$@5V6+83gNoorD)56,H-Bge2Oi)gNu9$j`'qf%_=J<
%C4dUI($qaBYjWOk&U*nE-uPTfqfQ_%dbR.(`';W:rZA"^0*cRf9Gl!I*'=H9:p@(IBW)67QL=4MAq/7'gAa3l7pul)0O\*)NjbB1
%R(I%4h'=j),WD@04Lqt(Sq"(/?_1#N)6NpL=6'1(6?;J]j'2Q*N_c.jcJH2t5<3#`>$bH`Ie*=XO.9fZrj,`(UDa%#p2A)<:,,Sg
%KmTpip0Ff83m"k#ORt[Ap[3eC0t"nZUNQVkpeX$>.=*U2^M0\7[sjh=/bXUn:[)+J8A'ui;4YVXob.Q$kfZmOe0&%&^7%rI`63>s
%/LPqglcU`4lK.HRctp&,L@I3A1/3V;a`T]B*#"(tHj[BD>d^V@]U2g>p>YH:Hs1sTq<eH.IWhtYR8DLbH?+K2q;mk3m(oO1)Uuaf
%`J!]$!c$]'2q33`#;s/==2R'Zs5i=n$%"'BU":Yn'+\<XE`YVs@.+N==F'ZX*5h.cD1);b#'mUeHssneSj,HO55TWRd-@Ghodiij
%c<a6!5_"*Y2g>J@CerJaM6[p-g?E+I7%#ft6O@*>E$`Z&c`ljWit5=d9Yni?92TeIHW#alLfjgU+&ac6Pee?^d<"6R-kf:t"0"_W
%[&E]5(?JEG"/h3Z(1kWrk$""[(?P9MD'!7?MKo_I;'m`SI95`qWYX^g1"E!l)9edVe;%@g1?i$0qc83J[4%r6W>9'f?k-c"he/8;
%&8Q#-IEO]cNEq"V_ZnGV<8f]aM8KFn31LNLTPq*Y2gA<sKqJA3qp1')oDLgBL^rtQRM,.[Oa_H`=SCt"Qg]_c1[DH\kd>TbCD3RQ
%en_TuS+YK$kd<W^A]\bk4YCemM2s]5[99QDhcakTefL*]2J]^'X1d+gD3tq3IL#]9I@HB+;t+!iZ3QWpS@?o%[o&[)d=`s9\'_jJ
%7Va>-M_LhC;$R!lUk6P$[C``ahA^4'YKm-T4TF^EjO`jEd.=bcC\d>Vq=;MX`HJE,;'j`XjiR1.P;"p"fC%p&59_Wm1M&*B!/>O%
%I!)t7Yi*mD:u8hh*6RZ$RDD^30U)eZdV\-cN.eKVBL=&0h<=E`q8>0!'CpW3Mu<UIj?Mi-r?VE\iaI.<G3=G3"n?0]9V]YIl1[8!
%]"=rfSO>;`0LbogL@[TpnaFO^HJ`crHf$#3EQ@FXIQkGmp%n5Rp;=Xm]1l*"7X_^<7I[[CmNApQKK.@TgIc.6*s3>H//g9P%,8c^
%)M?`30l5$kNQ0n#B`:dE_\A[=dgfCGajo);b?)mQ.4<1;SrT"/rk1N8mrkWLe/A'Ii/<ZUO?CHL`#ZV[_%[!rSUPYZGL$6VBE!)[
%^k;NmQKS27SH#/O^[F"HR1*TNs3CGt3WJt/efurc[eXI.,rt.9pG;lWkOF]qk<%jSkFD"3NU<]<l^N`-kbG2&k!Da\+O4<+Gl)+K
%o^X2q2A];8cIspp27d.]kNA2Hgci[JZQEO\k6mlO!`jE[#ZlM[1TOr9.Xug<,+D5(=695J4kG,ZIa[LNGXR>8j:TWKZ8k7[#8+73
%65M^RaQ<c]*$MqtjYt$.S&8bULUQe.R99*Rr-5VS?@7p<`8rBB+?o\mnro]l0$fm9T3Nt?Ir]gWEj7L*4ibllE=A`OiQRMc4aZkq
%H5l80BGm*dGI7e4$,]o;kJ'`MT+.sZEL>mp1V2r!THeYaS+;t,)UDAc+6Kl$ih!nkT&qj.lHfKVSLoXhiKa).m**,6YRen2hB@?T
%rfc.YU>+JU`t1D&Zp*[BdE[JDp;'LN5P@gNc@M<Bn1k5Tk.o.[GaSXeF5Z0S4E_<KOhclE@2OK^"#'Q<J^/h53s8l5V\L:LS^6-q
%OM4TTl(B7lNtc9en[-a$a[Mg(%_L4aLCH-r"ls(K_'Z%0*6_e(q_<gCCgom:RpKO4s/4lZ;L.WM<knY!jD8TACH`a4pgDeL_f8.T
%g5j-k7Uk*3_srcTf%qL1dgq[q3?)T6VT4D+FGK<GUG'mU9=nB)mgW%>2_Rsu?iDgEe3(1Br!B<#F'&@tQimZOc9?e-o(`Ec;I6`2
%V);fmgWkAt)#gr3gLK][fB%o,DjK#-%9La9'34UsmJ/Cq`qRjcGaGW231YVKq_F4t/:7*;*hA)[`.UA1^-\aM*'5u;N,L$Oig7"7
%PNqE)\t';M9c;0ujg83oHJu#]1Mq\;0aMu:&&)t%N#?I-Oi9'/3KA)E50^pa1"%;&@n[cX*66]9:\W60r#EbEiu%[eA`btl*61%#
%36(jUTj=9aWZZZTrn6O!QbMg@(ZO`@o_RYHMp&FU[H6tk>6e,G^UNDo(N3Z/RE,9tUiteW`Od&<`T9&1B@j'9U5'sH)V9CaG!9VV
%UT8Sr\E7H+im82`DjGm`>5n-\o&=bKkI,F0Y/YWG+d-t%0[EZ%o@VUm@g3j?Z4C;I?+ub:XmiXPNFW*[an=b[Zg;^VUR8l\[b/DP
%=OIVD1gsLI&1hOQ'f9DHD&h7@.qs4DT=_lC4]LA&gUC6K]KORkkV.X@1]#4XR)0?ff-\$7#84&M>EdYY.%Ob8s5EIj]pcu@mPS]4
%#?1%JAMA21f7'M.H:-cjD)_sm;.Sqf2RDbs,4Q<R=QVl]NbqPnn]g*R`++-W^8daWQ^`E6h=$fcS"%+%fpeJE\_3HV+2[p=btYDd
%+1jK+#V2r&!%Z:mgj]'?'0b+9cHYe4m*<lDh!E>2mbC<.b[YVU_IIWM-4T*F*4fhlCj,(:_km7VbKK'5?CabMefVLgpXi"E-?o_N
%+N*VO/g`L'*s`>2_;e/3pm<k?_u\jilu6p)7sWo$5fR\ndHB2E'8#=qs5En:oVYJ#,.`/MEdDp-lb?5Q'Y_-WomBAr>-H]2\spbc
%I5(P3ickrE)uTpJmiZi%UPj$()t;,/#<A]"R+XOQTiQM-TZ<sk9=I'1^-#OUhjg931'C'JmqSOj(mU8"5/"TO9DK:ZBD!(Q)Vm&"
%-Qs(l/)C#bRrm\0J?(oeebCIjP.Z'ep#>%S3H\2Z0:s9;h_^;6['U'Z/km_IIH1EIj!O-+PQ*dmola4OX^8Q=&)0jpKj()2^J,,\
%&$Fa=OJnt!JB@CZk0msU4ADGBb@U\;+^]mpi0bX<LM>"-=RUr'p!<YaI<i)fAGN>,A<.23o!3JDm+-YARs),PpE#cHG9U%9W&i,8
%;l[0$F:^phC_PY%MgV;ri1Q((7i0$lC^%t*3d'R@F:NK/l_g.inGT^'P[sPDE7#_R5X0+tAi'^u].m"T%bk_37Utrb4bbDSpST#]
%hNP"Hl^+f@PG%jbl@bZKd,"`NnZ`fPT:]D=F`OoJ/i+T0H[N'aqr'M'.F3e0I]TCAE'+7.jT#e3km,@Y2BMkNG_csmR;?hLNLkpQ
%*Ja5L*qV#oE^`)C$LUE?82PD$*?$3N@n)j!'ti^[D70NO-8LKKs0Lrc<H@t\iub2c[W:=M/B5@f\mCrggJ'rd3/BrfYPHdgDQ%50
%?nK3<T$M?O=So3I*ga_;=<TjL^*@N^Hg'BB17h1DnFdnKj2kdra`t<DdnYYhjmU\0]?B#[^`X;OY.!b(f%U5d8FBl8m_)4X.KLXT
%gII))I+UjjGPa:F^XUIAG4^EoVhZ@/69!ksm@o4lW#qMGrpIbrl7ZdO4,e[UgD@;V$&OW,P98):s"QD134aE;?^i]gs'`NFC6QEF
%]f>ue+P"P1>Vq@aR2sR.qs.ZC1G^Pf6X"'A4"Ur9MZXrMDm)nghRo5mUp,Virm?E`mbDK[pJI!`)4h(A8'=EVXX-,c4uRg0QFqWl
%IQi*<n%)ig'$H%ZZ$`3'\0D=.+$TXmBtjW=`Uc]V6s5'(q_'QT^<1XC7*QC1+"r++],:OjLECp6]%i)@ps$"GI^hMdmufp2jY)O)
%b88c[r30=OqV_\(ik&P]r8;Gf^Lm!^ri9#uI.o/jp4)\+r[5m<=dWgkq;T0g]3.8B^]*Ze%mP<%S;Bb]2r13D>(;d2F,O+a4+@r=
%@g;KTo][dG`N_L>)K3X4Y!$g8ns"?sEb!m%oJS7T[l$(pgX^SI6JfP%h,+t_**mAZ=MJ]+*5BBVhS4#ZgYpN1kMbZ\*ut<2$'bH0
%^Vib@kjK>_k0Fi.?Ca2CbI66Dk(E\*PAb=WCDY6X$i()E'j!mh5I&\@+oct\5H_=_5'b2`5:M)E2t0O\GZT*RRf"eYq,=rA)]Tsk
%oDT[mEP=Wj`$`),9Y_`DPAIkH9=-9X,5BN,$%M0m-K5Q<NBW`KG:2FSNgY%g=)XNPlXN#<@hRO:ELq1-[d?UfBDeaQGa7G0[qRS0
%C"%fWe)>\0_=+Wo]^p;oEF)8<2sj&/kP+P`bP!k8$u<a#j?*8C+8N7n3D.1LEoErO4q?XuCf__ENuB,,8@\MV<?BUdgNBeXb&+B`
%2p@F,c>m7.D;1&Q`EHW\lThuNRDSgtf"2Cs[QY'p\'3,R0%POLqhH9k?$=J:cTh?#?$u:b`HV?m=[nDDRAqi$59+gud.sNd;8a5u
%-#tPDCZLu=`d*RQ04=;O9usNog6&W(i^aSZH-2%"b)A7`l]Na#mDiG_<BJW@[QSAr9B1s%\h\;Y4EJ?]>3h3ClaVq&eh^G0e:l_#
%EoX6YgAIf/Y/Zr8\&RZ?F.1Lq/,Lp</Xu?R]K%]Z-?:1!jQ7>&1:bEI?.ZiEC;WaaYk<Li$H=pu@]6YiQO>P65F58\f(>SKNrn4F
%F[s990)kqo!fGdoa/5_]aX4b_hB3fWf!gS+nmX:U>m<unO*R%Nhu)6ANdZ]=StFrQO;7$E]0H"6nmc1\c(W#b%edt))u89h_#KGJ
%CQ?j,E*hE6Ru_R(q#!L\Qb9+,?E_2:M"r/.SWl(<akmRM2LeK&lPj1h@31m8&_fDY1;Nft?>9!DLgACVr>s-,$5d9eK0>*kV;B-O
%$EG(2KsEgH5.-R>`Y\MuELt(npp!Y]Vl:G!0=OHSFW?+]hp#YdUm/Vu-T;;JY(n]H9lI%@`UPGpkEk]Y6U"qj^]ObG4;Ed6o6>T!
%qN_4Ij=_F^^jT5eq**r^FEuC%$Tt'Z0'/Gok,:.$s.Qhj.HIIWP39"7d4X_efAK#,c(DSKGIbLprX#rO4sPZ#mDe%p-6BR?60@(e
%nU&l4=lJiEguGB[c"9I(-k)>J^.\Hp+0Y/uI%Qsml`o4;L[Q0>^L>G@:>u)a]m.89oCCu8Eq,%D`Lh)e9]tlRSfN!nW82QYXDJm.
%]-#19af;t:f62"4:@]knVTFbFb'Gdf)&k3g_)Yc(/4*@Y&PC$&0@'I?GE,#BJ17Ed26DE@MC=](S$-[]_j@`UDNh!SOLK#@lMo\L
%>uhH/'@S6X8`/d;dUGE0W;Osg[;rXBeA\`\nnsHDaMl!,\/7qd5'>R+X9d"9\7+8`mQ8m?=JXSn%F.o)eZlsjY&(^4g%g.keBQAu
%H.E)aX?=]S2Lgk?WCCZ6[dm)32U=L/S]+cNZ!gfeCV0,7cl!lDa#4r3VO!/?*M7X?nYnG$/!4I:13qd2DXC-.AS:'S\m%rH;3PR2
%i;C#pO-nf!2^3a[,&^_os("FQ/B8qRaQn8_b4D&?4Ep`eTA<tEjSs>k`gVWSHY(_aMgWS3/%(;:oGTUP<h>6rP-=Hr0(JcNpaT3[
%FhIBJR,>Q\e(P&`XAqK2@^>:@pMC//M<!Vl:J]l^qYKco0>"3PoiC,5*hP;pC"Z)HU;bU9fU:%V&(r\_B5'7mni7H.9:]m&QYt?<
%IC8'a(ctn[<SmMuqD5V%@:*i^cZXRiPcqj"pd=d8W=Sg@$j0'G7s<td%NIr"S<&5RfoG4&pMm[`L\J@32A!4iq"XFNSAmqklKhm$
%o<4H]0:&Nf&eb(+-Pt+Tf+!O[]%<Q-O9>Gqq5`@)HY#D"s%LW/q!ltZPB6!g_*@NLm]2Q;lfHYcpW`N%?o-u6rp/+foD_m1@sdO>
%>RbrJX6X[s"S*)\L\5Gs?N,3Ck5'sBC2d`?(dktW?i7*Gc^no_\5#Imr-_7:,DhnAMk@b4F*9Ub($E*d**8ZjMXO>G;1,[7\>%Xj
%=#=.@MWTHKMQY\H=)>o]j.>7fmWX^B7Lek'SXL2L$_-.5iMO,Z.=oH]&6HOA@lM=@[legkY36rUY1WU.)HTU:iek%^<oT!F&)rK*
%%WOor26Jp-a+oR'eeh[rMsod-.e13R7f'WhLA,MnnY["#oJN_[.B#6%TuRfg.P\o>X"hRI`t[teVJ%p-'^Zl=S7@HN)cPf5=Zq9,
%<#NXPg7p9i5eT,'a1Q6>)1rd"jhW^423+h`Z14=F_s=XYi\[M:Kd6.NgEF0ZEc;Is'"5g<[`EGXF?YF'YJtM'[ZO?\9eL@(!(,o'
%`/UBPJ7-!0AS]Hfb4BKhV`2&ErbgS7D+go_c^+=.<M>1Vb#9Y@OSTu4>YOu'Rilpr.iT!2Y;FB^#6WHHm)hYec15=g3`R5_B6-rT
%!N3-]j0GXm@o?aV\cP2Lf5(TR*?^^)R,qUXn"=`cO&.6sJ!>l7*9Tb]RPL4(5PKI'_q\R\j!;m([41\'n]1gYDo98M-S0UK,.&]^
%@@"#)/$c78>CC:cjfWIn`mO?dS5_78q1E3:gT&W>:59JQjHhshR=k@r,c)V2J%fdn%AJ(K*@r7WYL^'U^66`qP%o5h]V$?"FK&1J
%TDuaLCc9s7<+0Hu_M_]*5`fVs?0"GlYO/cJgh'bLGoV)q0L1Y41&4As&0T;sQd)!PX6OL`-&l,aZ<AIn'3h6mH(]G_[To>f[81Wj
%na^C<5+Z_+D"S@h-Ek#I2[5lZ_;T4eB&-E#Ql-lt>V:FYfs:0V*0_LMcVnkZI!C&\8eS\\S$,mU_'UY9DPX52f=aT_p!`_9'j*QM
%>h7*gS9:++>nS=,;$[gLQl<>7\!/1t9S[%'(jB"2a2;8%A[\lb=TWZYZ)T(DD6!`]]A4dh6qu,K[?G,?k<5&jj.NU+iaAS/_k9%B
%b$"BRNjI*RlfJL2Z<sn-Dc9PB5TG^Z\-l$E"6<%UrN;(O%WrRFE)Q[4/hU'2kJ`*SI72\rNHUMWim(PL5P7P_Khcbj*gmb:25qF/
%=iH:MYO8E=%.on6)b2n8ZCdHUQdKjYL8"rZC:js$i&E^`SN<CmEs_Cs")XLV.-OJ6U(2`G<f_m-6(t5WIDL*q3XpDrIn6U6A+V5Z
%;;NG4jJ_>OEm^QM8Ag\XHgMp1aHDsiB(qgeG]2%Ef?6090kVlrm)5EbG^m"4c)0hq0fMSTM.TD(U=:Y47!9bka\IKoa\LLEALFp>
%qJXMOUlm'<Ve%7"VY%gfk8mEJY,!H!R\"bslpUWnfnm3b44.le:9Ypka4UcKL[9\bR[j]pR[n+bU*/9R-qL$Y$@JJ:i'LqN^tk*D
%?q(am$!Zt=n+b\uWR#.1,'A<gU7F(SpQ;.'Rkb\TSMLt$L>oqJT&E#'C3+77<]#^V93eM.;\..1>'?FU&N5[uF5/$ZXbqaJ@]:F9
%%9&YddB1Q2BXOOJ=)VGQkLl0QI&?K[_oPcK:G;n_&Sq(p(/H<MEXj6RSsXf*Y=GYaU"O*IL.sF0bY!NBNJ.Z"VU,R%MEG)P4p6jp
%RipCBC`bR8.'cq/Pup+'(Ji4)`2;'96SP[W>$a;)Ud\1CD:W*Ccqht8=mGpbE;XIa4I`l"Y=AjJKIAY(Ffq84/(=3VdlR>Gq)HIQ
%,nq;/)!@Y;q5iX=ng\hRg*XA;[K=U"DQ-umJfAj`VM3U+]@LkYdcY['ArW)U2dhTF"m?@\e0o`oVq,e"fHp=@[AnZ/SW>/R)+RH;
%VB>3gJ(kkU]A"dgL^skd32N!!s+aFIH;o0.3KZ8<DdkeARh@B*-@](FF?tN6n=P=#apn*[r>QZA%lde-TkW3t[XH)1_`K-N]M>%K
%DmAjBZ\8IMGOr6<?[Z\Kn.XZ)hrEJ[Wuo]j.HF4Ca]Rre=!I]=pn;<f$h$Rhq8ehWAmU\1<jNbHH+LD4(2ULLEZ)sWm@&4kp@WR"
%D0aB=7>3S*cBG+dI5WN\Q'=Ps(k-5(i'OoE.Y.4,)[@9dok_c0;9d]#o1)G26T^BBQdE3-orfiV,X@9j:K8k,/WefUVr\YN;W`5i
%X1>6pZSi?j(.`OLbtR2b=;?j'XdA4';j.c<b!Ke7\Ec2([C'`7Q#bbEPc*>Lf4LjnM7Ji:Z'LG_W`%-+OF171aRq`F=Q^_?'2G8)
%"&e]9Y-!S\X,>"-hodlG0d.]PII*$pU6tM-@TsW0qYb1C8i;CdI*.sT5sFD2'/7Hk:dV!jb#]3*22Zg/67$M@W-"LA.VVgJ-#H5P
%UeM/\DGrkJhBAS%a6uiY&"?Dc_h<p)PY_\$@mVJY8Z8Eo$'f0^`GFSSKM&>>]jXNED8oSc0r;1E58i7"25q3I-WQnoPZ1dmGnf,*
%<(U;W.VVgZ-#Q>T`(`gg\07WQ@9N;f[$":kAS6s?\X$!I>LFs?6TSe$ISu`/NUhElVrW!5\_3arKh'B/E?s%U8fX^,C9pG#,)=8S
%Sa:>O`MUo%'Y/H7R:8'";mJEh3LO>8,ZFR.4_XMeYHZI?@E0<c2FZ?*0fLIY6HuA9H9K]2Cl5XpSP;\Ee8SX]=B:V(?(XdsRaYZc
%GAAh-6HDRLk>LaIeDmN(Pt[&cR2"+6I%s3D0pPW<]#-p.>Omim2NQq.[!?aNOYUVALmoU"ED&\YDMmYT9bH3g3K`<:*i8>r8=T/u
%Bp_C.FErNKM%im@U>oC(\2KC%XlCUAB_0lH$X%?<BJqbp9Rc>SUW8Z7bY"Xc43T6Jg6+nh2J#b6VCY?nP!pg",GQe^[jd4J[PW<K
%RRS/OHMhZM:=:P!6QSZp9IkB&]/borVqO`aV-O\!DfO*KPiss!JJ.P.1E+.f9%&@s@bb2:.']RFoK[]2LE96=W+8c$+P0/p_f&2C
%gskZKqWdZLiabk]43Cq>l=ibF'A)"`+5Z1HlLlS)_CU$.Qa#mH22c9r)L+inBrKJj*ou&i9"6aJ"=S4p^Fk#%VKF37HMdZ$Dn[:t
%*nlmDf+V3KDOf\*DP#h,DOsG+A`hV5s$/AVgu]Ko_B$omIpLnP2pCdfrJkg1ho6Pjl<E%2kdmD>;<Z`f<V`u+*,!H6&"$S^_u",#
%FR9[D8cX(qUT8e(&SB3:Xl$l_*7neDN]c/8H-H.5*t\7$ci7e<P8NB(bNm?^W-^/^Sr:23T0F-70-4h)pC(Ur6Wq`3eh`Q`VI8Hn
%AN`C`+)k*O$tVR<FoNLOh:!mcU%hJ]9g\p]'R_EPG-m5K.:!hnN'p0_+jWl\`PVGW\'cVQoQqfEEa79dp9]M#9M!':qa_$;a5@`;
%!CNbrQ!&UG.dSGTQs[Y9Yq4/4g#t[ZmI7R;A5+MK2*(EF+3L2alYr?+.71/5kpmkIFrjb2rEf&s0,$1(H[K#'(d>+BJVNVoKhlLW
%?icZ5`h!J.1:dW]G1Rcn'^D1P_4Oaunn_<tmD:LJ`?\>sQk(7ub3E;9/5LDFIb#=e)r`JhKg_lPRR;e!7iCENO3,8i-b\.[_7@AO
%f(%[MenrZ>m7>sf8<2![`N!gFJ]Chn=VF;(>8Cc^5O6;6N:4TlCs-%9+p1)b]P["RlEgUKs/D38;#[4I?!@37[7uoD[C./M2frhn
%2"-93"OCU0?^p"oHNW78:6l6EPWRVI)krV+$^EqbV64[0@UjM>\2M%)KDr'a8cs@]98aabhN_*?_:C@l^-WRW%H)L7>3pm";*#]9
%Q`G<Na@:*pb6P4TmlDH@qCJ.sB$$IkD=VEfN',f@6TGVV=hcR>-If'iouppB1YUKK4]g>gLIqoSU!mV3H5"f^\(Y0J]dUXH0H53N
%Br[LX3&9U%+NS(->bp6+B4G'SR8GMITSgTY>"OHMjl;38ERof^`n@G)aN^$-DDp;ucV.OPrjiiF7NB*!:5/W5fA;srU^?(TB8skd
%GVhtoiF"hSdXLJd[r$,tl:jA(Tm#frQPX!(cuj<Fe^A8;=3]GCI(ElA-Y/pV<S/lQMH(#>VV[3C?4]D-pdPp7IF5OC!Dq6AH.uc4
%Y$W"'41eJ?:q,<Mpu_I1-/^^=_t;O)DoAj%?RZg:qDH$;kW9:FU`$R[;Q09KD>l`<VWl%Sk:r[m^?NCHhG5PbWNrEjTr[lCUKf'B
%DfXb7(>7*ED50PgebB0.S5\`fB`,erJi)<;_.M)Pe##!JG*Ru?l?A'M]Bm23\Zl\t@==6<Dq'BaY4gg>*b9g3+3+S;?GXaq<M;$b
%?gO:;6OIh-7^kYXBC0+pTtXZhUoo[;fr@0,1gN2'(`J"heQ.TnoeJ4NjRYj*r+VX0<HOJ7^<!/;-*%+)l*]46BiXAJpIJ^NHr@^s
%at"eeS8nk`=q1>X<Dut$1CE-m"Z_<VUtC`H_0:k"-%a'In4096jE4rGqYN<,I=h8j>psp$B^.-mW%q:_^$UH;]4$C3KQ&ue/mk+.
%5+.n5XB"Y7>=3#Uqhg\9@7C0Kn^qZ8Bo?L[2T(D+47N=1X!-FGmpMg0!F'FLAY)CuK$*Wo<Hq]bG2a\T08?oUh>"D\iTM9do)=@/
%D21J_T81lN7>#=_h&@mC]ApRZPipH*<0$gP'si#"DQ^jSFm>Jr7#n]3ORq0q]=P!H6:eG)Dj>s!+:S2d4cl,hk".he;d>.TAiS&)
%<m6N]S+ZVjeMWTM<V^n!Z4RUp]8a/MgH8[e]%M1t"sH"9o#+iDNo&K'WRC'9;iB9^*dWI)@%)"d8K%j>o/Vp+;ia)$4Mg5+@3H8'
%E90`Z(LC[].YA\CQ=eUWC=X0Zdk,W$8jI6m13i7+QHi9Th2?_.Yo=1O<^:sOp7bpYp0%Ls#\jNlhgVEB<\Nq]>F+DtJNMHk4A=Y\
%ep;n:qj,6k@q33f`kJ:%W>E&\&@aP+"O>g^#i(a/r_=STF1o@o0/1ucbk2$!Y8>j>]X5k.!VE9_+-DtU\IX==JQO]%l%XM8[aY]K
%WUc'F4eDFJD-nb4-_#A,mYRiR_"2$R\u;ha_&#?kp:OC)[UMmO)s-`V;`\S'4R,"Ag3'5q3aQ"fDt]8,<3%Bd@,">Uq292+i::`q
%392luFmZ,ok12U9:Um`QeKf4>$lf?R$RV)B#SZ=KZurC(f1U-q?!d!kCh=KNes#+$-cN_?@A[t/-Wd3!kGFKS.HLO29lj7U]*=Z]
%XNJ@1cV5j0;p*8F4KosWglsQ!RH>X@*+YLj9SXQtR[[1bX"!-GL`BV`@og@\<O?5b=[gp1A9k(<:tFSrjMgPcBo4G`pj-A<='78+
%o$:43e?N/MpJB?\'U[CoUb>bWX4l:9g&^15YL6$^,["JhhbZRK6;ZFW<EsVR,%3?^A#JS(Unsh#8t1G:Q``(SS'Vle6^.Q$,t289
%?pB*@b1e*J64#,YV/uu0)pA&Q4JB9;jlDMj3RejOS)N+Qfj0'3*gkcG^ND[@QX:u,mLfI<SM-r*60AjjAN!6i;@o'u86`7A/$phJ
%qU=kY4Q3F[Y6c_0JV,;K+,`1&/_`?P]\W@g!a0U_[6BrL'2Ma,h6l$;=d[]B_!cjs$FP+3)qnR2`Y[fDQ5ZGqJ<d0n3590k[#PVS
%`+b(!8sM+nMq04X5[Z\CC.<.pjK(&LdmC8Sh)r+:,))i#EAfZ%,@TQ3G9UR>[1'n]A@4`TT)rGK/ZNi\8gA2b)WBm@NBRu[>luQa
%1JM%-Bqm*_kf-80.\P>j@cN5'*>R;jWG1F<!;2)G0T?N$O@?oG[6`l8%'d$D[mGpWa&llMV7JL%XD[.Rm$MH:8lkr6L^eQ#E:WT/
%pc:tN]%!&mV]i(Q-Hk_,]39D2gb<Jr%Q#;:5TAQJ'"W5]4*e)a6'l#U6\n$n:@I+.10R'N9`EM8./MY/Rq,,g3?Cf#E%?;WrG#>8
%XYdHApdt\[SJL\jW:6)JO!\OqTKsAl>pi\=@aPZ#$85"sf51/kVUSOkheHk5o^rA+TX0uFU,KsL%+lU5?^C0W3k3:l^5G>$AlqI<
%5-'rZZD1E/q/,5HB/sO?M9)IKG&:oGntU5O:V$#cm5O1a^d#$q8$!cC^G3delDXg9[B8q'Y+EfHQ;R0gb.4%/\lRqh6Cttug!k)r
%eT2VeTXGUVqg'rCU#f=K*6dW)E2>Fu*6_QrfcCF/.0hZG/V=_O.0hXG9dE76EYCsk2[J.^Z^"V-5S6.2>LPK.D4T:mp#TTD&#4re
%+]Ysp3LI-Mg-jc9`i>s>h8Ibo'<JI?[s^(EQ+3h+o0,F0<]+2bg'H&%!<*G\^u]7P#"pI]&AQ\h8VO&gP#dU?ro/=2UdiN'3si^D
%HNqqIdmQBgMUDW=Ln7=D@E9<O>GH%8_^96c__J*&;grYl>1Dj4E]3$Y&&tX'/SA!0;3BfcWj$e9j`'K<L0ADN1,_n-j2kpZLJuF[
%9j;&q'?\7g-mK["bp,b&LQbS%W/]\Dj`L&n.j^l9Y:\;Qd=],ph-FBX/NoZ?+^UX*FHf3rcZ!Z/>.N;;j2p;*.TSepT1BOTqQF2M
%V`_YcQdVYM$ai.=a_e:Xb4u00PkqNQdV.icP,$3Yf*XHi0?2H-:>UP.KIZ`GeMk:I3pj>_8T9J'oI3Mj`KmM3<b;.)r$^e;l*"o\
%He^l7g<r5iN[L4G^?nuohP.DfV(E*1nuD'hB"=F6H8t^_K>+KF<t?\F\E*<*P/E.$JW7C[g,_26`i-M#O0gcd0lqHlP`*2gI(^=B
%mk[DQ9[V86q!Lf3B8V`>/SBs$5ot'DkSRqUB8V_;U1:jJAr;V:U1:(aQmk(.MN11qd;`[eZ,]OZUP_IS.Xs@BY6(l&>NE^!g_-U3
%WsN=tKbHK/Klghp]B6b\9HZ_!#b66e-`gYk*:j&JXlOobrJkg1T@-6bF.mpklJb=k-`kI_NTD[@-apWU5.o3H!'cZ&X9G0o,MulU
%AJj6HY(*)0hrjk1a'J^/Lcb;&mt8-6*=4[T^Xp!E!S"jp,#@7qpNF2,m]$3ArU0@I($r`m*FtiZU2L')=9Vj[KX!6,YoDuc[leiA
%rdDI%p>0:Tmo]U][a`&&U/-49q]PaBZhjD[r,d;a]:3"(5+9NIMa"Pt_E_^#oVn;oIG,B^Rf(P*f[Ju<Y/[((g-<[:e%XAHgJ,*E
%G-67cCYs>,aNuuKTAO(cX)F(O+I2iD<)@$Tj%sK%9j?_X:@Th.!!s[eXVT9"NgOXFO"lQ0]PmTdR;Q*oP7O,%LJ;6AS<d1[hmTSp
%iH1r#]YBS"GPIV2jfr$P2lW>tm_`/]jD3haGq#Z9o$QHBesE8!'pa'-EFqAb$+YYUO(+I&M*A#]1a.(gY/Nl^mm!ZsE2DZ[RV;3g
%R"$K[E.2BDN"!.1<`Xf=Tl,sQmQZ.an!E%L4Fbo]:>,m*[JPe(f;u\&]n['fnbpMScQ>%>+cq)*L=Io/na.`;=5iq^GT1-NbMDqO
%.o1A[=dsh'`idWOQPA!.Ga<UsW<6ClO7'dRI+G8,JXm%l:I?I__/M:tkm-Ir>[<P<\oH3\CN$Pn<lTK\?`W%lCTiH"iZ#4,DU$o,
%fC-Jg=0,B@]!\s"%$?PTCQEr8#5RPUgj&j3'uIK44l_dJRX?g.giaXtX^-9"0!)GZWg&R[in&;2ZkNiKE[eC^1FS`mr.1/Oe&#NJ
%FbOPb%o8/0qU2k6N]L-sDn.j^=)B?WP_h=_SoA20B+Y`MLSR5_6R/:L2>a27T;*A]TF/0YZ7ptLL[?j"ANd*g;2`>P/.P`4N\TWo
%1M1sc,TkL2UjJHcNB_gP53NAb+EC1m&gN5>Ol0nRDo:g5I9494HLg$1DO3:4ng:34i]>39jf?VgAML:07uQQ`W#4B'k=bi'I+Y2g
%/Snf?J<^o%'6K=/@!\@,>JGYf?iY4kdRb0CO%q[,dm3o6QNupB)LqcrB<99HpTKY?XlRhK*?4oJCBsFHXe[B%XM0iNSPZAj3kBgE
%[bGh/RZZ0Ee[dH8hbUA4\?ZU%Fg3Rnj4at`gr$sfT.G^c=Bddk>andL7h(A6q=ssfUKp%%e(USG##'=PC2FU(oqg8@gL6Oum;5>Y
%@_D"'-)jV#DKT6`3O(3GAj)-eG5os-YX5)Ff9W4o.!9;u9K)g[I!*>D]`2q^CeiijaTiLFh.F3"'&D869'`ZQGt=FmZSC/5Dh"Am
%rc<"7VYMmkhnE8Hrm08Y1YCNRm%9L?F0bg/9(pS=G;In-%!FR^h;+OdT>Br-Ye.eFps3>lF2ED;_!X\!\mpB%XH1oEEGWmGLr0XR
%`29S7`Do[E<BtU6maIu>0];g)glbnCP#>WP`bT`$C-&!(lT#^\]&C0+7M?_h_V?/S3!L\BP'9BJpKtZfn$VM&"\l,SI_Xp4mg#\N
%!"h0d\e5eLBFCSXk+\u<>#HjaPmF?<YWn,NADSci!MNLTf-dJ!9]Oo!`kZ/aX_YTi88YL[THT0tP<WaI[#m3\K/bO3/u5Mp>/`I8
%@[&gS)4J2CN*P7rGL@(?7B'bf*;HdXoP2&ZEQ@Fk=rg+6hO;K!UNCgc:YIDOlf<a5nt;]Nnp00"&Lh'A5?TT;(=7)="Vl])QsXpX
%`T4;m$8qXt4!.8.1X;`YgUO\ZneHJX@>8U?WPS"@9&@(!D(.P4m7t#74Q!M;T@/OF%SkRh_hrE?RKi>16l7572ANJHT,%TUcGJQ0
%Z4]3&WL,E=:nk+lB([@PZLhtT+'hnr5htF:B`NUi.NGY`,,`6c>pQlo<aN(LUF'U%UtsX+_FI".$0D>lDN,PQnh%(mnekq1VjnS!
%QA^BZ.Tame::p,fKKF5[F`.01\OS>4f6a?;FRJd-ltZ5JJ)9kP)q4Q)3?_+(Og>GBUpPH?e[gREpZ]!g&Xk"<fOPgX.o&=Y:hhI]
%2*qtR'Xm*0D:KOQqUcs`0p9pB$^G/4QNNf&Mt_hgKi!$WA#IsU?.HtBlf6\)N)sVq1Tjb8^bQY:U(biqAHeR1.)M5<5S];cXI!G#
%'_"ng0/?d_P%IL8Z#S'\<d&T;g.mLUoA8a:m]:.K-VIUW,To-rWQ/^`f:"mQM5n*#<eR7D*69/Ifa>^3C8AM8Jms]W=#Emu)Tbs<
%A;Wk!$747!K2a^+ekO^r<bk]!#%lbmE;ZQeWfcj6@[5)Q;iljONpMW)?(!R<d,D-t;atiNBTOuqG59=O0q'mfF2hn=(qi-OULmGO
%BZY^^1.KNSN)?QC4+rQTfG#8[7c?Ye6g\<&E4=<M6d:%#E,U$in&3$_IWKjLglaC,2RS;qS%.L;OhX9'aA0tsNTTcf1Ic6'gh_Q<
%@](P'#GkAJpDG2.1q%/1)u;pmdu9D@%FFS=guGB[A]?,5RK3ecA'PqI6cR2`ar%DNB?h@=)5H(BA(:6?N\a.Q_r<Xcj:H*alPUp+
%a;F$\ZE&"XN0G;qGb<NFdG"Ikar#[8U(>i;0<um61e@,g@=lOqRP7&./8i$/8ckMZK7qWH[l_>"G*4L6Aj'M^&a`Mg'b<K`>1VK?
%W3K)=ehpm#RTO1M2IZjjI#V^d?)iGQ"6%nPm,e'1HD#RqYX".3V*6IEU;ltjB6[V:_'X?g+irP`Z-O8L#t:Td::4P41^BcQZ!.qQ
%hlW4Qri1]V@:i!*N%g-J\3=hp_Yb'JNWeD@353]!)+bJe)"2SFA<ku*Cp7ig3$?hN?[_L9O!i^c_u/g89D9=dY:WBt@K+trZkDMV
%q\.SN4O"H:d$i\:<TOY\"0$H_T>L(SD@Y;;jpst>,F%@&*@e88g"j6<F<"SbA1L1t+Z:ip;AM)79d@7n]<8H4%>6];o@c8X>G0%X
%pj]B"q4fHr,U%;Y1qf!O0f8m:]L0-KN>T/H@#6bdmp)V:f'Hua42:-KHj6EZ<B,H:VJ[Rt.)+@0fiLi3(YV\lGW]ha>^DE';\8Hm
%n%ZBFq!./2i]=jKP:%hm\9dp'++E^uC]7P$J,AO/D>ruWJ,#WuGoqM)dAP;DIon=`YMR!=\bQ*`ioJ/Ae`+cQkKBnjhY*!<q:DMl
%kN?J\Q+qcnG,gmXRn*;E_C])$+"b3]YOV/Z[9;PQH]3H:Qgmd7).+@!YN6i$(OnG0\\@_Ahd4#[IC]'tEfW.4DuKK>3"&rnQEM_2
%\G5V=s7PL;8"[OZ^HTj,CAI#P5;%ug1ZV=jrWquf6%?)qgpD%/9Gc:#n8%U`pqHYjq>^G%Df2/9GC7,/ID!c')*Y_/I3-,,o(ZhE
%NZN-7T8.]>i8_'ojOmrRprncupQ,L7]Z]0Ee.lBeIs:hsn$6[iq6ta;Huo8Pq=;dc++4"d/hVXai88LPHusabEr$H]^[f"N]`-sN
%j"I]D$75W?Vtou\H!)g!po+Hlrc31RpH*m'o]=3J`Bl0hnK6kkd;/`gq.JSij.SF3m.fYdg$/!'QP\!*Sm?9H4s(W"O2!`d]&*/)
%.Bg>ZbaUgR2t#Ve*t9maFh$f%j=KW\O6(HFMjJ"(5ME>*(*A$QG(%Yc[_2;/QWN'L?X<XV?Y!g]j:?BYrUoaR1*8s2nZSLTnG-b2
%pebmcO8kXbd+?GWq=<Kf=PPg?O,'cSn]Bc8ID%k]"P9Ci&,C&;H?o&Yc'K74s7Gt>5:Ne.D_Lp)TtK/nB6jEFIJLk?Q2fn*lAYGR
%ptr#8o'%=+_8e;Q\h*FhpmOs2$Vh=nd<:P"#]N$?@W8H'=4(QFET8.TqfH&N)F<_+HnoELP-[%biV<2S4M.4:o'6*cn7$dod>[+n
%o?P;Lhn2-;q,RDTR^Ot-CQl=b%9o^/r-[n(H1Umun_HE4E)A4,gLkXN*1uDdgp2-A>ali,%fJ>=lS5e.?nfLs?+.NGbp1W\FQ63c
%]^rQ_8Xj0U3kT=A,_$(@E/H(+ZCOM.]Lb"7g^SbCBh\d7)W#0sDZ8AaW[to4n`%ga)E-QtFTqTMoCKH`#qiEAQN(-+<f<_7o_S(>
%:Z0DKG]eK/MIRq7Y)Pl!q;TZl+8+r?6i>9Lp$4\UJb^_(\"g`&kY\Q47Q(0ddl,@h6>C/`I_Vm'<Bn4p>u^\aW@dJ<h_P0Ld.mL-
%je%$/?@;SH\L^M2\6k\KX,+Zi=FpeogC;!Ylo<(%51p#4Kh1N;G3cd,G%JU;@6F>%0RkWKmbt7*0R<TjC()0E(QS7gJU_=]rrG?,
%rlq)8[6/kqQ]ZdY/N*_phYqcj_r^"SJ,Nu/iuPmqVfIQ(q2X=NDi3T1pPq+pGALD,J#q43+/o(?_7'70`Tqa%hS2nos*bW4::@Us
%3r#SC7JCG9e9*LA:8Zqt[:J=RPb<GTR<T7M'ti[1B,;qOln1L#kM)4!<EaI*p7OS?#7f0/5Wh(s`(]OI90BN.&qY^c(3T-B3n'dF
%s!HpbL=pR=A$U<>ai<P8AKOf83Oc.V=`;*)Fr_Ng]"AZFp-Da;HPV6NKBqY:m+uIQ4c.##C4)&V*b#]#(dH&JhtMh%e/VYt2_G`D
%62EnFi$dsj,+4(gGL-HC5BOF6+Qp^$F--7-L4-e\<o?c3j7Bb'`>;17*;^ZHq&TDmkIhSTR,mjg<2[1XCI=*Y;04PiFbh09f#Fr1
%oJHAR)Z?'&^7;YQ:5Ft)q>],pe#m;',Z4@84Ql?d_!GHF;Gp,T@e[mVmlMB@JAKmX2Uu++iVrO0(1l33H`3@t\M\GGT2SNQTJ[F1
%KToG6,dkMXWo2nV*e%pYFH%"0]Gnjpk_15l?QuhK"]chSW;e/Wd7/h7M^khk'aL3*LeNa=JK],+V5=+p+9)9QHl220I5rj)U$kT0
%650u`kL2LEeg(&'&>Xqsn=e>-IgJRGCWKS?JINiO#`p+k4JfG5n@8aNnaDAq:kXqgY=-E<A2sTJ@PJ:U+b?\JVnC*a_"T5Oh&e#+
%^EKP*-TV,E6DWmrOpCYEM%IORY@RGfOFl!^Nu%^XZiCC0+%?V;/X5b6WhfE`>PVX*0DU*8iFd&e"i-%7[E_dU6[2FUC"Bj*Tl]Do
%U@;-P_5>OS0AM$p\GpZs,-'hY"mOP$gB68"/(Da*pX"A;Tl%8@X)pB;hT5-@T3;!b7ITX(WsQY[koY_pr]g>@5B]\l@;>`$Z.c0F
%J,WAB'_%*nm`9*XPme,\;06%0Y@In3/*2!_c\R[AMmP>[I+s3#EY>iFX41nZihl$LUsWUpd(ZA-X\,E2\'uVo//u)sKDcn\2/]&`
%^"@1^cbTB&VbO+$\*g5n4U*4lp+d2NiO$;g<"Q71Vu9ZdTi1=nj"A3%<Y4u?%*(l?doHYrkmS(UE02fJ9k^b55_+dT$Sp&-5(H.o
%(KM!Hbi9qro=jXedDKUq&Etr(4G38-I[&9uB7+\K(f'X#EU<Z1+!&43@!jqIAR:*FYVJB)(g'GM$Pq'[#8E[ZNYIt?=5#k]^fKU"
%f/FgqQaClE$O^XIU%.@)E=NCbi#e__#XQ)k%Z+u>G8am`Y@j!?%lO0m@3G(r$8bl+08G/rLjffu.ja\)\S*[Vlb`m=kI'\0&ALsc
%Gm#E^B\d([1_U;t7mof@N!GQ&4[nR5h%L=:5l8rLUh3L8*TBD5hG&A;9@-8g(L_X1!e^SEd0U)rA7Utgo29("2F8CVb0r8G)W/HG
%iX>SR7eJIF_3^CS?%MEL+N5QtPT2!"<Y</=7\gu%dokW+3qIp[AL$6q"*[/AmWg^:#L?,>,@=@RGRZAGMcPTTLmg9YPH_Q(+u&,*
%Zo0lI9ioK5nU+]JH0*EuH!&@BXOB*PI`uG2GM+5q&msfHZM(Empc(Z`V"$pBZJA'oO7t(kcWD>R/r&J=]O?nW;E>4q'[H$(5ad[k
%__2SF$QX=XRgk0<IC_Y`9>gL6S`&%OM^ZNa"8PX-\2GeJ9GRh]8DLDF0qR8[7=F6I*a?!a3Pa^[S1s<(+(TiYF&e$n];;+i"V[QT
%1'&Z%,$GQu6&EoH>+U;-IG1S@XcC=]*2()c8KaT#ps'2'-+oP$UISR_>Zf!c"Yg0Q'>+LsV-pERjt<c]D)NXO!f%n\H..4DL15gp
%,YZ,l*c`jH1'n?T*j'@/;FN!/2>uG>`DR'c)E)#rKSlRtk-Kq*/r8Sqn@K[<0RcYu&`8*p54:VP=&kAR\0)%VkTV]u0\G+%4RV&!
%a;.%PTi[EH]hN@2oK];3Qm%C!?>T0n@i6L9FP:%eC'-+W%hBb.N>-H83*6r+oJLs=37]%+%Ru>YHBdj+Ymcl)I%9gA,V`Xo2oaiQ
%pd8,t=X**lR%jn+2Uj"jI5k6\O9Q&h?mcqM7nT!pT&kn!/icE-7'2='#='UGH=X&EP:4u>Z-dTO#:L\t.,tm_`G.#'!NJr?JP8<d
%LBejn$lg*;i:22@-/,<5,Nch#e[,o'91!hhP(gCb2oHFEB,fZZ<Pqph_h#^uE@I^L#sf1ZQN(s/f9a1KKdm'6J^<K[oljuL'&%!G
%BCR9#&s+<#D]tNr`o4aH$09M"9W"k"$o5F;XVK"H^d`A/R1AH@C.OfEP(a"-&Tmf1nktUiG,hH9H'.O[Od6@3Q_bYi^8FOU>(#:f
%8R:B*W\G*Yk&PPjhOP\8/m/0;-41_p5]e'?VIcVY6M)HLY1\bLke(4Q>=8YT\;Of\!8\oJWpg<`_F,OAL3+hkZDhBA?kG,aa!07I
%9K6&uW?YGb\Oa$]VZtc\mkO/nb<bh\mMfcK=KW&P2?n20\:Ud&(A4kcqm9;ZYe+g*E7C`hG$;l]6fjX:^2)"]rMch(ET@(`0>f7O
%79YbL!Ln_o!<,K7b%O@i7f["LPB0Urr;@.gUr:0g='Oj7<40!F,47AsL*9EMn$%pJ$LruK!K+4ns!#o"e\4N+TXtgQ9+L3TJdsq8
%7&5+%b0XpHR.tXdHN/U:2BZm&j#ZCdA2X^LpbdjE16]']"Jl#CGQNOa5Q7i^Z/WMHB"HCjN-)m!PiMsRr.>6/199VPEUSC5`g.me
%aA[Y>]DMilKPUZs0,EhF/&<D<,Sujr-N:2U0kg5dh0?r&(''8J/P]^2^p*Nidj4C2LrKj*Kotd6\cMlQcB-ruYT]0*+@#DD61P?A
%ruu4JI+$@i:Z:36IhMUDA.Zg-cfmY=3LQ)>d>Hf\&1_OWg_;#Ng%D$-d;=qFj@S75PMpu++e3fFs8U^t,=B>gPD4S!-OjgZ$p:b8
%nVpl&USN!BE1?9Z,Wu@@:o$Yk*H:aD^fY&7KU6Yhg!*'na(j+0b_`;FM"IY40i-/_@RUWY'.IUR=%N;8F,Z`hkjs0Gc]O57>2X;,
%)r6?\3.L@eU<RGbdhh<GU`ACCM_Y8,pn1LaFha!B.%]`hq7]c,VbqE3rt"F[>HPn0#<"+,2#H]NUP%QMr4#q5cjs?!m:qLW<.&JV
%<$+?g1n"QG'n>B^'Rf9DdRsEVmYs8-MQP=e`.uD'gbQUsP!aH-;1e?'SU@\@Uc/N'!'`Ep(E4[9l.5!?UKmWSca*`6s*CZpTg>^2
%l*RI7Y_hR,^M1JTn\946^M&q)G,<5oXk]r+hn=pbr>GY"F<<O`+0E"jIOhk\ZTT&G]kr6L@MI'E`]piFBSa&rdBeW2;9Ps=9rPY(
%f#t:7nInRs8e3DBD8OC*d+-lul>Nr\HDCJidebq+CQtD@jWA=pCAM!E`IAm?id4)km&[8_2!Bu[j!Uc%J,Sm:]MP!kmH7pZg\s?l
%*;<T^CNg[MIfo68D^Ef!FqJe6W'`ktr1$[b489!qoQONcs"7>ihuE:d5i;SD,^C?$Qi:?5p0iba0ih_)5O?R1s8JcLO'^Q>^V)4+
%q\Ufe^YIC)X(AjZqWk8oQ@Fh[.Ji\&2S\&(A&UTbqs42L:&btJ9]<HT,XuHs[DRLm9G[S$p(]emo&Y>g)BCLhd,Wts<Pc$?dIobI
%qV,*e,VBTGDlln`MoC0q&$l>Eh;;Z^09o;;%//7ZYSd7E?Hc7!"\jG6F$6Y9qo)U4>^^r:fWVY$[5V0i'G$F2"(mRg113;Z2<iP1
%Vc'_*#'O2c]VXNGg^;lN_S'Od[OU[bJc0&i;e]83TTZ4EGp96Ool\r5lSRK[^Zm*BmKXgt/9%ptIs<J-<!ILbc*q<'3M1\[NL@@[
%X1!B,6K=B$eT@UP*2qAc[2^U_gMSnn9WD3t2iHegqh?cCp2fsB12?u[[n\1)AV<7B[H`4`_@@8aS\%@r<??\$)m',qd#,O'?T,U`
%dYO4'%)6[1#9Gk:eA#O1fdo&?SD2S\[p$$ArP'>V]2%m-Z]F^o;+BV,:k]Q9Ft0_U$H6W68ST6Jdjir'bp"i?l$(cH[1!HAj2ZN7
%_9WojGcittcOD#:LK5XsUL3#o(RLk7?t,JRDj>mkb.ft>KlXS"]W9V`SaQ5M0[h*Q*>*Fs=T>MU53VDcAs[>9;CSC;3:;n6nImr6
%[DlLW[U3a_e_8iCS!Lo%r",nIge>7ZUR>grMRg2sX","_-TQ!"HfsVmj$$Wh?iN,Z>-@VgILl:F0L9-RpJs[m$uAsnX40=0O,u:*
%^hc$LnlDO`g!Q4=qcGZil^d;@N)shF`W,C+ks;/S>3l7;2]JT&%7OHi)LS]4j48"5BO/gU[I*qi+hF4(odB(uHI`I7L0l>HkQ#<b
%U)?0eSG%9)nT/;Zq5m\U.-%hc_NT\gIR7qE%Gmt.o`ud'N"9Y>7VYuf;C?p?kD##(n?5TR*kl?I'\M"qkkQ,mmkS&lm8C\b?f2V@
%c=4KZ_8LZOVc9]Tl"c]pb.g3A4MZF#^Za+)fW=UIV:EN&_j<1[-Pbeei(qi">p2>99H,fm]DE27=knG70`0[.*t#L7BgNsJ5if+:
%\!)aCZ;Zb?.RWX3M'nX(EA*Ip+15P7>[jA1Hgp2Gj).)Lm8*')IO7MFLYS:`md*R>hW(DkkO@\VmcaEBNrIX2$]XYHV:*+*h"hhF
%MWGA/\FZ;f]_AJ`EP-JIA`R0HTJinFViR5XZ<o><*N1p.6p+;Jo4MRf=;h*HH$ju]f%2uB2u.@^IRQd0Ib`5P-pKJ\VRt^.oMad&
%I95gK'TkEQaXO+'hY,3LQfmu]WfP0uI@;1Q8-+4nrh\7nDLZ=Q5$:Y\n8I\$:baE"p.*]tldnn@+,f5QX3u(g+%L7InXuOP]5O/\
%)ZHcD%I7tDSK>'9l$D*74[f)>ZdpW;oYsdQUeeIMU,%0^l'j9S4-V2ZMO;^JnF5C%A!22jo'SZ?I5WTpl,VoaMEW_>rQV:n[afHd
%ioc!E2t4"O;8[eYO,%WG`,.\"o)!_\?*:m5=ZX<$61:1J@\OlM"o>)nKt`@Erbh"!X.2Z<<%BlU^\qo[-E)T4rP%gN!Mb_sh/`F.
%hrW!Db,4#,?WRJ[B[,5'qs(@D?Y]P.Sd=MoSeU6l#@DHIk+K=QJBbE=Ak!3VQg>d-B;1h[q,<5C+nY;/hDY9GOj-q<08?F-:<T4O
%jnm'2f`"iL6(9Wrc$ZukBZ15I/IpO+RVUJjIS5VZ?M+JXXHs<EdB^sNo(-@*^GST=rtC;I^Ej2"N"/@_hg"pjAY[q]r*3"hm,ona
%WE"F>Y2l,0'jKQ&e^=\3ppsT])3!`/pV;RGJ\0eEnh&3QXbe]5!]p%.UQ@+1r;MfS<;AJrC!_Kp^YW7']3gqfn*jTN1EJbFfi$il
%p8taNYrR$KotfNDNoU9:^#(8SCtc'@5*[+I(A\-PcM'4'[KNkhHu-1hLlA#\UeHiArn0i@_:igOmI0*9CUn'C^/=oRMlh$#rD>"l
%IKnoCDtjJ^MA&ckOn,pLJMr>;>0kn%C/d=N9'b(RF1\#pj)W%gPKM]<($eS42=<_<I79C9e[5b;inNA>-CWiR9"XprmlgZr`#c?t
%qK-0GDo\Z>`AUro5AAmIL&NAFV7>Bk#fQ7ZO5t@t*D*eI.b6(TF5fj)U\2uL`-gAh)X0$s(Yb$uf&J:\C1Z:*:>DjP.n+&7l=T\s
%Jb^h.Op<ShA%(aD]\d^,l[rdKWC&tQ)+@odhk(jq/_96ImpncL,oq\Y)P+o@latD`S!IB0J,Y2*TdB862%EN4ZbScBjGR`!jR%12
%Y8FGXEd2BDUh!YV`NH`)?Z?(@o;u?a"qt;3(h3Q6W8U!;9Mp3,g:mrbr%`0_/Z[K<;7ud-U7hbEU"-;&kX3lb)u:?qU9lFoIO4.1
%cdaB+f)"tk"UOrMmM=#">"3l,D;B[ol]&M6E,WHTPphr=ckhH88HoZOJ"(WY.LO]j<G3B#2N-rt`bfHBs$Os(*'`!MF0,n/^=9`4
%]mb#\Y$D@`9'73%fBUZa=>TpdHZ>)(?&5agXS:Ehh(R3#)tn`M52';N)XT(sOBYosFWP^-VWTI!r5G5SMr`[8r7GiUFD>*@m\I-]
%Xd,6nR>6)tI5s#>5*i5be*URbZs#.N1J:4g$X<Vibi\$>el(h9'J(']<]D:NJ&q68q5=/.PW-63H_$a5R[\'#QeEC!)Q$Z+h+Y2M
%<pQ=C_s6+@d[XZ)aAqC>9)3RTm,>ieS)lGn0ZYo.bQR)ZSc$r:eiur)AR6:EmEF9Mk:sMTL>J6frpWMQWA]L'WmBRLlZ\t]2B:BH
%i-=_M138gU++HFhDnDF<V7GdNX/25-qB_Q%)L5O.?RamM1k`'ogRFbCr;G/;OKC+b:1s"$O.G'9E%^u@E]]^CM9XYK\](fe*XEP;
%c<WY>2rLU]fDJft/Wib]:W&TQe52\PEEXp._)1k"4BX.uo\Oi\dD)*?bD`CIA9N=b2S#%k4'Kp0hBj&!f7tD[9;UW(r_uT-mPc55
%C>hl'K3!-iG,BT!?I%+k(<9=TjQ0TXo3h2*2__Kn]Dea:)Dc_f[?RYW`a4i">I2epbN4+/#c?AN.aolLM<+8eLkdPCfA">r\R;KO
%S1(R';pA#QiK2%0r-2tVP-"o"0>*(Hc&njXg>(%H@EN>4FX4_F@>5PL>iRk*G?hkLO`s/o2"!\Y"Lb[F-AV(m0$K1*X!=V[ZHj12
%jTtLg]]k9RTrn67EGfkYOZ[R@1^<u!9qtMuR)Z`W>k@3HjMLJXqe>JoYef^J;h\Es9qKHaT\ra%\ZentP53(PGrO*lr7l,aC&=>o
%1L;ep\!,@i1sd_a*\ZKP]*'iP^Q5KH5/D=bS%g+gk:>pghjg16;W]\5Pg&#\DnHjC`NeC'\NAN7>Ku%VA.B\SS]pM@Be+6Q'p:g/
%\2kR\:?D)al0[J7N$Th-5&.c[mZ&(6d]M'`d*<R*qh%5':^Z4u-^"j)ZR:,m3&40+\.QjCXFIgq][U[Z*r.Tr-]<(=Trtg4SD`I-
%1>B%bn$1Q\oj6-<W8b_6TjX>BjS[d-EkWm+hR];0Ioa33&%#a4)G@DlS\`P/HKXZ?2W(';&*fq=5A_\XG).p@2-nJ>8(HA.XXoNo
%2CEO+B)fM_kKQ``/$7Be=4s.:NE<t6M:&T=P.=^37!!FKgLXpKNHBX:.4@5+^o&(l]Y82mG-8/UbIRNCck@@BjlKbCjbtJL-g.^s
%XdT!KmbjtK3IdW+4WKo?[g8?*ekt,BY<7kF@'71''K4+GT/gV5>jqQ5-2;2SZdKi+ZSji0Dnj33lrq#@T<#E$L.#\>@TQ;5XfZd@
%2-ZIdI0#qrT0OUT9$XW4Y=Go_>_5XJnCNfIad(.Gq'C*$]:PXtcAsXM!;C!(-?H]IGZ[!j>UqEC_S&m8AhN<_/n9hs$WE%%\NFV=
%:>t-gCn^M!3Z?7.N)D13Ql`pXgB:Y>5F1!+2(*b*m1i\g'TW"*ro7NMZZ1.bLM;&[HIUkbkqEt1a_ea5MEVb13L[_/N*Z1WK`1#o
%Ru,'.D$0u\]`P:3n)""#+ouNLgo#FD\kdo]?"k"M%SQDDaLr6pn^HIX_Rrb<f?D(\;E\*`mZhd5$#FXLhq2%*/^G1("T=U/o.X>1
%p4ljF,MCe^QcAX.kV?la/lj@uV;o2P@!?a/?eep/A^kC&\0*/RYB+/!\%./V/HDW*H*;6IZRD]jF,Mbh!N,,M`(^Pm^Lg>0k,9[+
%C(</`*r^;R]#QVf&=2FO139GV5c=2Mo&dSf^a=+NTs6aIo'osfCpi(>Lo8&qqo;frQbO++R&).>S6];3/HU+u"(c^3\5V6?/di85
%Lp1##XZHuOnK(?5kg*k;?R)B*O9b^iV,"Al=5(`)(Rs1s=3$,u5KrQ782q`V`m`0)m\Y>_$f@QENt::,8\d1O%YHhd^:JsG7L3#m
%(n%:MFap6]ii-"jMh#O<%s6bd_Ya%/GgZ.^]J#kaql?L!:W_W%["42qj*c(7jZV_:h0b'_H/:&k:kXu,m]Nhbc=_BMa0IBnN5k[;
%4,qWCdm(i]s)N/9^@^$$ZUSTVA\]@ukr[UQ0(DhL6q6;PQC3`!\/U><-<7OEA\oaQqbqV2/E0m.+flmp+>2]j(I"%;[(2Poru<cA
%R5h"e`A>jjpJ!%_G3C;;Jp=JM3DSIa3.Fh$&_]oAZ[`"Z!=%^Vo:>m%*$0%JQ^<AML1s[X<c.mhHJJ-p/8ok[F3?M5_o\`XD`?'d
%<2b0C+Z6OGQIS__],Ors042.TX)mHt[/#ErPoB(Z/[i+C\7ah,[!/graV3?s8nPh%Ois"o$^[OapK+sf4.&1g6qYYt0[7hMaB(ZS
%*maRTisdR\O,^=WP1tuelHoP.m(:#ECUIWkS6T=DjO`Q._scBj@((0aT*[-J<_7XeY1]#sOW;*LgM;lA-F.h+q9!5Vs!un8"-iM'
%Zi5fON?+&`A&.\a:+']CAfcT>g8$'ZUX,t>\!YZ!br_se19"u/lk7X="8iT$hof]l2AdN&(UoF5VE\".H+rB]5R5eAa.&83bP@"c
%7Mei;(PkQX:H3\cp%7`irX7$.:H^k.-?f)\?$l+>N^k1k<\O%`=Yg7]13#h6n&`P60qs+BJ\H2-iZgE9%o)++*XcgTqrdP2h+I$T
%AOH47"*Ys$Nnf[bSfJo',CpoP=$B.#;Kl2Xa'CV*I+iBopNVf&(Xm3VIN5i']0*?&RpF>*F.$98\P5MWk)"l08"=fK5CL,S#_1Tu
%;PVtoHg\(s;(m0C]A*!:2t!+W`)?/!rgNKqB5b,aqJjfm\%/n!$+ug[?u'@UZi41['2qEg7)UKTBfMT?l\qCj8B$(7Bn##!#S&44
%E)b/4O$hT7VY?73a2QYDPf&"Q>oRF/^]fdUR(d/dpp-)D==HIc<BoB(91K:]9:_OjT"^R6J!1W:rC68O%uZM92aT;\nYc^F+^DMB
%qcT@+@lBt'r`;mTC+Z#?U.gc)JM,FA%)MN-e`>(tU&K3c8*in$*BXa&S*Sb@h'GmaB.r!lk^nSo[s`3hKL^N"2_*701,[P%XlX>r
%5U1WTb[Kr'W)1-T81"_bVlPsT?g4Y^:Z"'ra#@&!Gl$a_HJp`:b>DPJm<n2Og/Z(_Shuk_r1.1Tpl'*,C>jW@5A&A+g(2jR_ff=f
%paml27TNI`p"&3kYM$Eu--4*i&V)B6:4`m\YkdYJc(haq\YT(W`$iO@7@3&G_7H%WR2UQ6DD)s,0(oUJcGfHB@-k?1a[pR2eQJm6
%:%intGdu42&tIi=I*GG?X6Hun4eBM;LObldFC0uFX("_?dt<<'f)4!LF!q4gbn7XZT/+M+&LOrQ-dHls]diBE4Pcb7]_:#MB)aQ1
%=h$?6%fZ+M3u#kVp<f"@iaBVA:t9up=.d+%a[0][@NNDt7HehPj/L^adJWS!oJXOk[;]rVB7:3\'_2nE89O/N^Y[hbW;>lZlJ9A+
%bfM^:qtZ#h9Q9YYd:9trJh_?,9<FG,!t1oJJk^CrGDB[lT.GI1/<rpHj`9Z0^N-c)TAS9\'Gq`\buC.:eRR7E3#ir&=M>Xk]nWl;
%k`<'Q^ZErAjj_`&p=")D^;KOtK?NqX$P5B:MU'`;_/'.nD=9'K>9+XHr[lZfgD06uDg#,5SKT!?`'`tOiScDa3f.--4m7T\S)\[*
%VbpCMcIK[G`D-!Iq<]P(Cpl6mQprmm)!p<6%G34FfPk7Qlg'tj8.'HmbstsSr'dnj7HU!ggeFD"59URl1P(#<P+L@Om*$/%Q=dJJ
%*j[TP2^11<Yr$fMZjWY*)B[;ANWZ]U?8'Qk`5V(8W"*;>fc=U*bn^\rWJ;B?SW.aM\p1H;?:#/G7HP`@;M&R8e?.C;9&5k'F1ROh
%c5hhG=meiS@H8;>_[_9Op(r9tK<tLSrLWoiV.s]sQ"Z=4Yk*7$o%*Mub[l!'BYV%m07VHi\0=gZnaqr9J8^GaT9n[URX(8)`7\s/
%3%s*YpT.GbTg@V5b/7-(nP3+?O'DU(@cI4CdjF&6ltK37]sQg--"GCfB*sE^_!WGDJUUdJb&!SY\)*)F,VsOnVn\LFficZdgT.[\
%qFA(bUohs9Hkpf6PihDXF*(B^WMSX7dqUgrMV4P*mhcG90>MH9M5AhC;Pe<_Z+!DOf6lfQS0NU&TX?WuY)F&A<R29$Dl=7dm:'YP
%Fa)D!@q93+X5,=c*mD+UVU">$m,R2(1V^2Ds1CCBl-"9=6eZU"]UINe=LcQp]H+^H)p[eqKi2VNA8>!&kP/#obX$)[3jW<<_VA2g
%!n>`pNW5+EcDQaoVb"&OTK\N(5:;$$cl$&VRt!U)/m&P,nDNqpI<mL5UR&S^a/;7tl9]-*/J3thCGS%BX36q0`r&P#YKbp$G,spR
%_DGO\@-/as2_dEm!i+-^28_e*C,qWkH<AHEcC,fON3"8Q@s?l3+>l+:$j5t75./C*^R,40eN!jk^Ka#"K\=@#_85>]r]X6\oA]a]
%rZf.3Shk]cC(2se48GrBg!HYGClN';r0rs)`Ye)R%Yf#iRJQ40lgihOWVmKr7I'>&L#4Y9nBP?;r*%B>PYN!TBB8IB>^k_u:b@_e
%p-`h/Rs>$$3Z3,7an9rteJ]:,7ppB(]qt!mLTt>ZdI26.^UA;HN1NKj?^\MIbj8&!++mgG*(&COk^%81+76Hp<oMltQi,sAL\Xm>
%o08qU?<)Gr%s'<uoUdrM\YnX%ZXCfn4,;7c%V<MA)!`uN'$i_/_H>^b1ps$)E]O>W\:6@.M1S;".uY"5*]qCgRcVE;EVQ))0S'h7
%I-!r6I<"DSU%(0p3L-Aur;+^?rOO#rf+kYkO)QWZmp55UrTl&Fe\V11Cla/HI^F.0'J\PC]qU*M:X!W$eOAWiE+H/QUl"j=o4r6U
%YkO6-hF\9QlTU'^[CJJHHS>c,4<2Ot;enDC[l$jR,X""F52iLU3iA<`XuaXmjCWUNT=hRmG3u3IXV7UfBOP4(=%8JdS(ZLg,O?5l
%pX>1gle?W"dG<(8BQ?;C1NlbhR@qB!T$2YX7C_S,W:cqB*Ko&\4l"A#kM,0u/$cK#_thLREb9EABl5epIQ,O.jUc+jC^;dMPt182
%r-1-/5)?`GAnJeA4Z\(\T5!B<b'T]WqY9h@AYSd]6ur](E]L-a(qJlSkkS@`rZ'QjB1G&"b>n*%Vqn?@o(ZDYFK%EC3XGRO?%G,\
%2LCi(pa$P2Ol*Bi*ZX%LePUG5k9%&KS==i:XI=jpahiBr((7BLIRT.KM6+/W1uUE%Re`df0MaP5YaDIrE):GrXYbg:;r)-H9Y"Ch
%S<:e4h/"Yh%TcEO:[@iR]hZ!Tdc;b0f6;/V[o[L/=Of,q;%o+#%V`qq$@;b2cGB)BP1M.7e4:+%,YO[.WfG(Tot-!^g!Vh?[<u-&
%h(Pe"=q6jWDU@FfJ\HSCR<CL:.lpr<n3`4f__1fPo?u)7m/5t@c`oqrhk#A;f_!l8Df32?'@J2tc&U%WL-7b(SM#KHY`VA__]_ON
%RE":4A=&:i_L?Slc5%jZZ'm7UFuEBZBFp^X-7#]"?!Ok?]tm&"XE$%"4D?q>V[H;):"uT^Y"p.#^thSQp$I;LhjU=2M^R'eLRZJR
%mfr5=7\ib#AfHGeRF'WhM2>tD?e\5&%",DB*s:@A4ti_W_M>4BU/F-":q`HH!3+YC1p7k;7Gt2g3,!q)nR4BH5a1fGG;IS:>uglA
%T]!>g$*<gj,5N)r&"rW:O%X%\M7),1VNJD2mk;*6MLs[UWC@C*qODDT_2PWcl#!ZYop`Ols1YJY6P.nNW2.P9M.4$YG3NNj3D(S`
%rA!j\n?\aa1A/W)/f9.@&t.`7^Rht0H<025^U]qAgKE>k1T*`eYaZ!^#XG@qh6%m:3RP,"4eNNI!AduXHM2)cL9>u)ae\;uZETV$
%^jX<Ri2&dtTF.M!0["*i7[q<hW,OJ-+&6"D[T+E?JSVF3JQ;]AKl6RT`6u\WSL,*^[KlBq-q\t\iqr'$#PGT+4:#c\"l%n-H6,0c
%c]fAmQ%@chZ7C@ACK1g]p\r`^mgu,Kp,si'<nVf"FfN\i-1e:,2-r*lo&R&ZX)'YBK>DJ`p!R?F[G0oU=o5Jk6)du`j?E24Z.bHJ
%/5lE,)S>XU/ReQ:@_Pk?k7;0@(-@TET@?.R&rFJph-J@`,gI/@<.9.+e]oc`7p>N;KDVdE9f9PR8@2.)`2LG^^GN:'e?RQcXiirG
%S[5fGjjB@<jr]*NO[r1$jqETnZ,&h;HlYXKW&G)GIrt\qdj4!PCMuq_&&U!soajJT2>CTj&,mFT=0bJa'jf;O,<!nAa&fGXnAElq
%rE?]_Xf^WeZh/$6KsQ^4lOGj;4>4t;Y9j$&'CMhHr%L<jK?n,Gh5>VpBjr-578^cSQHi1?09b%'E.;H[H!A*\;qos<!!;M+)LnT[
%C+rdhD>58#kc`1?9'[4A4i1Q)L"h=5EVuL9s&bhWO*<2PQ$6_HD+;9^)h:PmRf<K.;Y(K2N]4I1Q[d2Se`Pkeb"ejX1P`/NOS%3t
%$2>RV.bkKZ>[URZ8:KSn>nbcpT4fe&#p_;oM+<t@;d2"AHnj[;*fKt]rW&7%/K(m$I5$GUZZB8?UpAI10+5nc9V=KH+!!0ZiR,>#
%_TCt^#57t;\-:M&)FRgXD[;0T!PT%J*S\(.piA<-4?.s`ZuZ>!=kiBt3$=s;mN!j5l>es<<jHB$qjIERib5bS4lk(L`mYI%f?*s-
%o6auREB:Xn]em4OkF(njdd($ngI"io@52C^,PRk(4Sns_>3t2W%&C9O@l?q]qmnfj&o^cWGTfTn2OCn4)La48n]1:nqF2[>ctNXn
%9D.rq=/#7_`i$C6U+W6=r!%lHqrKBJ&>qJTPCE"A+cbE]B+&8El4,5/WOL*kfarC-Y><8Vb3iPsGsmZ6=@h,6*kCU#de4"cAT2Q.
%k2'p)`WB/'/]dgSN+f&lp@Z^6:8pmOcYdSO]K]MBU43_/s,e.e&?3UpFQk)+=C-DJ,k<<H&8s(c81^ofE2A3T^a:D3"qq[)Vlts!
%)*:F.cDM%E*;>J#iGYBu)PQn\3D%ba@)tNbpnnf=H"&Tb3-mHG(n/Tc-\c4'/hmt=(QZl1@.H312WLnb`YWD,M2B)8,;H_`Rnb7'
%#.'/cj6P_nlE]oD8Dg6j'%7BAq1SLJ]9a)rTTW,=S`,6J4#.+*3k(\7;a]/n5hr^ZiR4#afO]Oi0lrSh:<]"rGYEtid?>]XYctj*
%=?N1)81`:[16J,qbU7EI6T9k=BPTT4]_f:)=<2*^-J!@/6]$fP>:-UX*4\XW0.&%Z];&siZ$2P6-4\V8r5=_AHB^C<HQ#SJ2Pph<
%o:(#a4XMdWO+P=C?L9LfH`3hTGK9RcM=PA%3,r;3fM"CcMOh]WW4/4?R5oUg1j7:tM:^1tCSEU2<sKCS`OE[WAp.s/1cmNT3<"/K
%1mlK=H@r3jaR,Y0<Lb(/@d=2p):VG<l\"0if_FCk9`9!N@B;FI\C<Qd*R$\7*t0c/Dtns#=)54[c-+Y._4C._5Ib(TWt-7oNXlB@
%4;d9;;]?^h3Cqp6hS$_SpTnXUY^-ES]F6[$#+N6`)G\a!4#00U#HcsY;1J+UBVKfs16ag"mp;s!E(H%ijA>VLC_+eHcJB'`m6@-P
%jgWicL/nhtje9q_kP:h-b<:@=n7b'DF>bs12KWN"K1!W6@V_q5E:>XT,WD<&R\BS,mW#0gRX#_kgf_93*h1;8$n&5[*f%G^NMg3U
%3-lINQT)+c$QI@/E%Wf`L0%A%28#2:dDPi[mJ5_)oZYJIjn/*2E,fLR@ebCfj)Oki[f&,>m&[!Q'!lLY/2T,.]"L+eHlE1ZHb3B%
%0qD!YA8Za9@3k0p+,m9`mQHSHD9Pe7*!GN&OgDmLl,\#7q/rM2<&Gmr2n-CDc25r4BVJc(8&q4EH_]iQQfb4g%*jmYm#$_KV.p3o
%c-[8I]J7!?qHP+**1`N?4l9JS)_HA9J+TG/01P:'PP"'CC>rc?[!e)U93%iba8Ftuo[rNem,_>mUZ%99m2VA2FtXXIa%iYpc*?TD
%a/uUnF-[emfj)-,lT?gPU,3ioQqr[=n*TALZ"@Tqr[I2m(RA]0a1"<'NZZg_7`R/8Ml#t7H?4/?QM&IH-bD)m0p\r+-Dkk+h2,N\
%F(&PJ\t,EpH-NfGG14e!M:;.Qai&$@Yq]*]35fMX?>H7+*6GrB-e"h,6^-X^s#R^#l9A(IWo;+]hIrZDH.Jp!:YsWZQ]obGX,G(p
%j5qOG1%B4JP[WT!3P.=sQd"?5pW;g%HnBWLFkTG'#MUKFVl_YDljW;lNd,=:Agf_eQe/[Dk#.1sWBtsB3jhn$%o&U#mAd/6XX[#X
%gc_:*#4%&jWRT!U1)8$/19&LklUbidG2Gh2lV!MS]fat?4fA#r;f<30?94LffLhX\]39OFZ&-r*2ibpSd`7hu_s-1#d;$8$?E['6
%Y,f+teGfI'FBBU4e%)s<lfjt.Ng`-r>/-X5En&RA]@V8`pipDr;b'4$hP)VTHg@6Y+n,1LJ)];O.IGYo@PP/HNo9s][O7rkr5$=H
%==\]%ii!G[E@5c9;.&-BQ6WT`N0NpD8\*1reDs*eqFmJUVH7<=EY-=Dc(QjLO[#cpj%nI1SA%-a]0UUG?.n0_osFN+qL^.W*Yrlo
%GB-9)IP)K1f?]V4rorK_a02!B\,E`RDX6BTA4PC<?r4&fE[1EoH=oR2;@f@JSXKu2jCEG]K]71*/8(jkbi/Q;NOc*Lf?C9Y)\",I
%I1t7i10#[(>]6,:`s_Gu.(:+Y6+`)uAo$QTS6K99L)[\)+.b.0DMQc%V'e@3ZQuZSD!]mBk],)>'cuQ)D.OPD5Fe43RB3"Ic-.^L
%-9ur1Y0<D9*h+t9_g+ptbRSR@)RFm1AU-2++)B1Dk-$[Ub9uUcZ^mh71?XW-l+*YG;g!!PZ*ZDj$nj!j?LQ3Yk>R:O\bUs$o#1HL
%nZap#F$.)ihd"cJ@;9AK[4n5f]3<kDQs<k*3T!.9=D1a)UPl*NmWie\]61Nke(i_a/1s`[(L,.Y?(0VQR9n#=C2E-BHmGsrIX,gC
%'%^42)-+>JAd[Y+LWmlXaaN;cXS<'ms791?m_-;E2k"&'H_"F[au3HMN1o=\gQO+ROdc`hK2-&BGCR)BS0'qC/*DPUm<3r,-_8Oi
%SNLNTc.f@Q_Y!%Y[?(hF-ONA1M+jU(q/Wo+G4O-hSt1>;bM/<FUZK+Y:4"9A1GQY=;rRDlg;GmEZZ7p$g0/br::+%b]9-=Bn$\fh
%:EKrPX"T[ELUF,!NJ4da`5L-Yd7#Lnp1.6.lP"2WH[VSCP[$F4I(WX44K^5ON:1#Y2s/GiO#Qb_716u=g=[GV>A'Gs2\O:o2\3n`
%PFIWR(Je6K,&t9':sJ.2%ZdW1lR=obfM2V]O4tON\Ca!m6eg?KF-l]no[`U":B&t23u<Nf;`h1:kHS=g=<-%#>J,@<^$/dGp(CI$
%DgUG`@rQA,NfUt4HhU)fYs1Fclg6@*VdTNaS6k!#ffiS(R')Ah*NVs'h]5tj9Jd7nK9s]tn8NC8E-GoAkO>0dIs3_P3Z^?)?>Rh*
%SKBEM*OQAiT9&[<]K"bo>hD*O+"]UG9OnYfn8sh=\3E#7%n?h">5&DY;mUfCFLmYUT07UIhC>'BDhitOr703Ng!tcbcP+:_rV=[t
%k2Q3qe4ep#V(f0"+n"*K(E;YuqP&@c[r=>^?V4Sc7]PX<QZp].X2J"a'W/F0h4D0h3nc[J]P8G;Jnr,7L9>_5kP*TY@.NM.I<8Gu
%=W80n:$M:)Grsug^"qi9iq`<EU/NNOYMEJ"(RL.XMW[XE#K=0[h7^GRrS?;Aj7;a.?#0"K^D(R0n1mDrTIhcgNK(>Tfh=OkQ1mmW
%X8I!c0i@Jm4^Ha35L3AF\_6q.[JF(<h`3]F]77P%;@cC"[>1<*d@5pSFsHOUp?JuF]@/FRO1".OX6O%ebZ=IuAhL+Vm7fE2T?M1e
%mHNOaq=<$_=IXfKUUB[aEBY$u\"B,.g0A&>XI[%]b0/`-bJMHNgqh1W[9R%AO,_o!H=9KPek=KKHt+WsG8feJlD3rp[kQEuhTer=
%pYb2BfgmI@@@Gg;G!Wm7X;(tE$'h[#QI8jTXddF?V*-PRDu5.r?2'^>de6-MPjnY.BYoP54X#Mdh/s^P^i0+sK0bLJ5gL7Ms%Cu5
%n[@IqIedTjo!!i:H[L%r4DNW!@PNap*'REWQ%<DF1=1<J%(KpT#25=PIUK':nB]-II@sk6a+'aa+2E:u:qp[&KSs:Ys4@d^7#tZO
%#EILp0`9\fIXM=uhKTuQet?fR5#<\0l,uT,$m,&7=KN*5leHEO#DH(Y0QB3?*O[fOC#D7Qb!;5`2Cf9eMVRZEHucRGCt>U4If6\Q
%<dM[fY@6RtqG?Vj`\Y7&!/#3olGe6r6.P\E>Q#GS?_78Vm#Y*VbqO1;<GhG:G5q+5F7+=W9^CF\8,CLbql<6/U88iOMY2"pp"_\G
%dD1O>lH>fpUs8A#PC^/+Tu4R!pAGmTY5ur6_fN#R/KfM4mKYhKG<W@h#A_$mQT%sIJ+oI*e98=r:g*\76WAKo*e+"U:XjKsf^>8/
%mZ+?5J,\AZq2Jm33jda`_?hO/D?EEnHL'P==4I5fK:8DslO^1BX&3f"*a=Vj8fj@P^EE+;TuZWkkal)DiUHu-K3Y\'ce;DM^Gn=n
%+*<Ma]#!"hqJbABqWM2Q*kJCZ_q-OsGE(L/,(On5nJ,T*_k(MtobZ]YZ\PX^`+q[ofu1)OEaZLLJ!aRt8$;a-i't-R$i^%fPH*La
%I&0j@r>TeQoJ*D6pZ^M1AY;#ERK%*1SpOJkpS+(d"\>F_0<;1>JSV:[eSh(Fp^0sfNT')p&GZKnIBqZ>o]?+/^&HM1ol4$0e8!bR
%4.F4H/$TfdI_iDEDcZf!%]CoQIW@OmK\6l<hmHdkQU$;<kPZJ6o&n=;Itq5jdP%TYc_77DSU\gAn':%,GBi#gSKGS#s!K+@%jajH
%90mWTWNE>fr7Pjn]lk!hZ0t]a0/3!Ua00u8MP"cUI&liKhX9k=)thK?iplp-IJ]?*pIN3`]u/O4V?>.cf^kL/&$.CfdRf99<r5gU
%?`sgG;X@?m+5^DmlG[M?r<#L[NaI*/rRJfUmk*"Pb(!I;s/6Hqm@>^kCA(#ge'm>)o&__4mQnbbX4uf-B7KAOl[M7BoN:G;!CIMY
%'6:@qq2S?.CBMH:f:VQS+E4T[Vi*_cRm5/MB54i,$BEs6291d70jaKn?a5%R$.fde#V<^<o8fIrf9-L<a+&mGdJ'@)^^f;3USYtK
%rG%"'hYlJ!`nSg>oVsh8jJTo<55Y-+d97Uhp8BQ5#J;!hHk\eXKT!LZ&".)"T@8;hj$2DiLE6<VYRH):l0Hqjd`804^:$)\:EtX`
%^4[I3r3SS8,h[T_\``#)?Mr(>e)0])Fnk2-@/h2H\[FA7ETIXorrIW)s2TVb6Cii[r.35kBruf5i!"Z9VH+Uc-4R<&JQ*J^KaG"e
%QjtAu6\q#U%Tj6+D6=(`fIoo+:\t,jBl/8QJ.R??A%!Eel0/a%2XOWl!FjLZG?;YA2Jo7AAjX@TPbMao3W[1WQ^[S4b)3R!#pk%3
%gP")(Wc[/"6EE"XV0j-;g9`L>U=7*i!$XNId06:<Pr9g_e5O.^Q:KD1!#lOp9O%F0),;U_N?B+9Q)=b8!n_\;M\XC1\K,M*#=4Od
%^7Vi?W*qNN%]t8@$Oo=7*RHi6UEt,\:Pd,CedGc'%W0X##`"<II0"C#80e+R_:EjK_&B5*eK`S1JSPOt#rf&+&JW$"=qO:C5X^Y/
%#1sL</-ULL?=H:SRkG4Z^^lZ;O;B=;G,>sM'DI3Un=baT5U&BL1a4M7`#]n-TKP]KJWhl5/-W7pJLGfg#.cL6_2'8*L4M5Z5RAU(
%SMnnM#``XB"Ic''ZZB1n6<HS\,V&:Nm5,&!_?.d`,16r(#DB3eN)7&2_tmc7JV+#H!XQls\qXYO3tQ5RVg0#IA'++=d&\C>mG)-h
%2k!#d]k/Mlg2MG/L>esrPX-WnYVQ;Zb_PN%g9'M^8kfNn-P/&O>3RrG]sLe5,W6?/;*,nA"a_MVkMp0&Mfce6Z\UZ2(8(`D9o`%Y
%6_[(Y7"Z&-b_)\dYXMnL!X6@^4KXZ\NE\cK5kYdR*"VD#6([Q`']QA?aOnku(hc*4RWkg.TnWnfcP(sIW>-JV&!S7U`BY/uOqmmt
%#t\d'Fbo?^YS(=N6F'H:3Y:A!!TF5Hl5lK,5QbR7#:t]3?a.8+A<S*gLaWEiODb]+_]\4OKT8,<W(!,++@$h=eUdB2jIqYX&4fgX
%XgGn&+HJdTiJ>!-!1>NK+XsO&Llss]*FqrRh6[.s;HSOf@?Fe$8:WKc;'#]C"B[o'!#U@=\S4>l_Z5_j'_8@/r\D22^9H09O8oCp
%Q4]`MRMW_Ymk_obVJ(N%Si:_Z":deuLOp9r!$L2-8'34[gpCB9@d0ftU@?o+">PJR7i$nOWktJm[kf0B[?IgCX,)j';rD%)d&/"p
%n<&3jYjcU/;@jP\#W2`.i!XE.]SD=6!%#-*^nrKE_\3$$TX^O*2INKpE^C>2J5e63o!RW!OZ;E9JSbNE)QHdMAt[U8P]$i5(1e#t
%0-G,(7T6#>'a'/Cg^N6U0Z-/5a=*-fYK1th;23"0Lj/1VHBCBVOY]fVQ>f9aAV_'l`%Z>tgOO"V#T5'`8gN?3,bbns+e8X1NDBu\
%6(pZTqlbsDnJ#dRA8<T?6:':@V?CM[I\Z?hk/^q]o)Q<,7M2k=-j5q\-BMc&!:@ZITtM(jjaq?"P6G)CMZ--.$&MFhL5q%?rEl)e
%"Rbph"/'E!(c35;+$)IdfpDoBd<)C=Bd(*'<==l<N!QNG^)FB`Jp^CA%"aZse/.>q;&qnRo<n(a@c=IQc28J^@M4Y7*jR>OIOsje
%L)($3KQYPHV]:MK+$mme#:KWkpQZdW"H`]a\64f&:`+KZK1&9,"L]DjHNaSV4\8Jn_@o2W,686<\1JOc2sgrOL?hFJd-'q4:/pgQ
%@N,"#FJ9R+/#[/pnGlODLA.\VR3&#1JR0Xp@Gj-WY(uY21!6J)M%g^dW+T7Gqk7SL@ej+8>"a_fO[eS9Ed_di>D4,]1n-cG,?_EG
%g:T_RB=SUV?1)eu5W>5oiX6CG_!2s]XjJ]n:hPpE+TT[bORu>U'R)#TFa[?m:E2nn1@QER&T/OcH'VV;+qhhM;h]6$m0r#M2FJc,
%-e4o08#A\q)Zpa.N"9-=,)de5+#W[-TaJ`6UE,uJ':&bZ<G_7-#I)8VU1q#5_OXghn<"Ca>%']X6<PEN[/[s+B21t9iAmPBg1cmM
%O?oknOHlo74JbCHJY!0X`?[gd2*n?e)@S/)#;XHp"_3TZ>"&WP.mt,?W'4ul!s4`Q?jI<7,4ujp@QYnZmL'`-d6mGS5Wp;R1pAQ7
%]HV2a?=?oP(_Rnm2C"hb+?-nM[%ISt9hHdc+<V0r.Fc_lUnEf+aY73qL1.tb0h;Sf&8>ulrqOled0(bY!"..b4\IVhI243Qo:4bN
%"?oI+BGna:_aoW8BAiV)'0'LO(l(06)M*una+NbGiA;bTc31GO$-?lRJnW7iR96,N@r=dNH]f=_&YU$IgM,KZF!.^N%=t>I</b@L
%][i(``gB0UCj='"Ba9faKq#NVMrbL%)O,g\PT)Qgb%KJS$O?b]]g>#H5f*QlZjIg#8QZ0uclK7u*Cso1%MoD55looDHao6WAVg1<
%l5DWh8V]DY8P169%od:+X3WCT&2ZHVj:_=;;'+JK?kl=Vq1)p?@7Ne\%hd#eU2E4"p!r9eZI`sqSejLs4=UL0h#ejL,e:*&M[D]R
%;21:Mq'bs)4`mV7"GX:,CBiVT&Q^-&q.qU/k^*lZ(Cm7CB)VfXn!`*!BQtaC4,djJH_)RG1j!8Ean)kH[9RP=)qS.1U3Q_B6,<)D
%O\X1,YboHV$h4&?3S.9+.=o)?'UaY7/W+/)(<-^GQ7Q^Y+FJhW%T=NsES)s5*:OZV6r.*]1*B@cTdoYR+TY%CC`H[k<[jIQrh!4"
%"JV\JAUG*m5"7,onI[gf5ZkhqPOM*uqW%i@b#Td^I#QV^DP^oT"/2(D"\e@d]fuRLBOWbbU[\@-l"j'J+%2oud-"o6MVK?J!^gfB
%+q9Af*sIM^=fo(]p)pd6Gm_ZbVN9fV?%!U#Xs"ZmBX:)R]<>'jE)0k"g+-?d,R2X[dLN($#6MprRT6,.a0q*DK)br`TC"#!d_LEu
%i4`TaRWudPgZ7SVP0-:j"N1>^H(IBRd44,h,@X&pg1-]U,*TYu)%$S!QQ[1[T^3nb(YEuI$G@O7!Y0Wb+?5&02dlF^IQGJX./JZ3
%n<1U[oHZf[ab!e3C/%Y9[[q#k7B&k2a_8L+9l7p44rYqA-cF!nK-<+SJVtcX9E6BS<fp5g1,U?C&GX.A/g(Ar)7&D1To;5NVZ>lm
%c((<i$T,^sOQU04!g*dr3=sq-!0W)UB8B+>GnnI7Fq6p#gf+9),3"?.FBq2#E$L!$Of3&/L`/#3k<!<DW.:E@0^#qrcs&n9Sqt!V
%'T>`V:^_/SK[V&_lu$!64&QPtl%U_N=:LXVP3cktEp/2cnc[Vpg-]Gf?8":#d;D798=p?;mG]_]+GRV:qu]&<5=B[+Jd:i.$tP#p
%>"sNU%`8_Xj#!+^J51n)MWW;ql/pH/n[(KIY>No%,u*UPRJCCiZ#_(*,`i&lBuq,\!2D7<)<nK%2IYh5;1nt.2]W38Uh'0''M9&#
%.,G.\W[3ni$c&K[DKDVb:l8BBS8#*q?kH83+s9bf%b4afcN$Lrj9<aS#Z24gP@JQNpQ`)8NFFUB<f)`]KI2j\W"kj*"4V(qTcXoL
%#k[n?#"_PG/#kbo1o?>rV8oaPp*iJlUZ(FI(m4CEE$bpT=m=VB:q#R6@D'DN:7`C3SH`amP"N#o_B$X@[#*:nN?Ub6b0tmkO2fg2
%`HbSL.?G@>a8Uu(r1G!tPCfR(A1_g1&++fKJ_YHtV=ZaUU4=qf[KWXIaYa)NV?9_CGhs.(UX6-hTJ/'Y4E@EA:1[=:$6plQlD^n)
%&F2S)fp9u^7jnQaGX!1bU`Tm'Mgu+&TYJdSXQP223\]C(TaT1sp3*JmT#ZCa3ZJ:tMX=XtFKFD[G#"FS_uYbnHY:fJC`5U%i<q!0
%Ro<6*KiPc3#>Ut4lUtmR'@SH'RKZ>pYkME-!2+j'Fr^F1\-tZpieA@/4+Y2u@KiZ(*&tq(Jn!,E"A*Z'rXd7L_9@]X56=99"0d+t
%LG]MFXMWW4F%3KH&B.!r1@'L3Li#W6,thdp@p9[6*Xa7:l3otkj8eFI`-nI8)&iA&op)IN8.J7L-";<n47%M9.:_ZQ9F`"u<QP\;
%EpQXKC\F;qB.A(]Ul6KZ#XsS8hMuMBe5/,C-Qjm+ODeE@''4FM?\:Ma:eqBVM=1]9s(b5c+ioj"YRsCE-)q["(a1DA$n/I[73C,o
%LaS,h(>;<\,#j9O%KeQsd1h?N;61R"J`]E7KlAlL_)MM8qh8u19;#Bf#e'!E]qY$a1_;dal`a75*hc%_cRt<1AWYKg%l7m(0dmD&
%P"0A77%]N1Z9LS^nU9SDC:?#QLclRcK0:4+#*D4[p0^7dbQ%e.#qc>_$=pe7?VhD2Q4((:/LNIcHTrA':_(GYpYi&>?s+"bJT-ba
%UDBH^A!E3!U^UJC`s;m'@Z\p5\\r?a38hV=2,*+N,bAtkZ2o')j@sl881EW\DS-(+Fo`_o\,^'8&<8k%n0h.R\3,t1Q:T<o%?,F+
%(G##0Hce'diLF276_D:!2KB+Cadu.X\:b9.2[GosiC,I>0O%g@#$]&p!uJBTUiiWa_A[H=2.q"7fmFq^h1"EG!E<RKP9!(2SWI7R
%'KFf8R_[NaiuICoVg\b<?]FZ.6W1>o?$`+VRSrW--nf?A'NjJ;.1\+:3-<,O13E1HVH,j=ePZ>5I3@m[%CAjD@0&ap+-b)Q_BCu4
%>f854<4M)+[g=I0&$+W-#2u'Cq9"kT[&=?mgHb0<lO8d33J86K>sEEq&/$B1=o';J2s-8iO!@o$oXGG4=G[,b3m\:dQ+AAuekA.K
%dK3D`TU\<UJnumD4)1oI^jI%0L$"O+$mM/kRM!cDJ@^krV<A!KSHcA0!Y1-FjpM62e^,oobYTRJ>qIaNH(d-XltInWrM\5^"O`Pr
%TYLSYO80"NZdA$6%;IFUT\,tH,bhP4Pl_dU^be&gRA2bC`i438i0[]**pCrg/!Nr.O::Oc?!\/TRO]g$72ZXmQ551WRq!nc$tb6u
%[_h4?P)fnn9]lWb<=2&LEXC/G=rij^_FtIE97_+0Wapd5Ut,YT6X2[04nP?tZT"ej"DUi,apP*H!)m*0ZtcU(!-oh-677SP>XT67
%?jOpaYil*^)D(:^2-!ZO(_2-LUYQS[]`TV-SI7m.erX<N:h(%=M]o%U,J]rd3[uPM&H[[k,K>liC:GSlF1V\Ya359POD0Hp;;gu9
%"69"pGt]BV`aIa*5qmb>&C?q0<.mCV3@DlGI.X9I.&%#*"uW?nK^u3\LdYl!fr?0I$LoDrU4IUpdudUmJa1hJ-UGqmdY2(YT@9O%
%bEe$Z>^c\r.;3:WR'@(j*J&Grnt_Cd0HlKR+iu_9d(hGBojPq0!G3Q(S;MTNFZ'dt"+kf/!+Fq-'ap/,-M&!=Rc</%Fedk?nugn[
%To]AL#bc*DaPJ:k%p&cELKG>9\aFJ?cf=f58'qn/?g30!OpAmX$'HfU=@]?#FNXh(1)[MsOf&4u/=IhE9*ca,`6C`mD@E1Wr.YP'
%BOftm#:<UpGl\sej93+PJHdMuMjYTXTi+eNM6qsi*Jj&f!;Y&325MB4:Oo&;c$u1Ko3q]o/gRlQ1,10t,-2GT9#k]O5Kc*e6kq-l
%WbDf#C-4rHL(b%bBrP@mQd<^FGUKl&*[^QWq04IBJ0C%C:(Np'"bd+^)kM%?[[Ll3EY+d?p6^)t<\c/So$F-B%7.B->Rc5'/20Lk
%6fS_"@ap4r`TTq9@1$9QU-,nfng^%EPrg$-3+X+t+R0fJI7,QTSPSG\n6hW_VN?gn`Fch-&@e"nBE];H1]_6&"@dEcb@DKJ,brW"
%_*CU68!X:4:gG@'q5j_-V)cs5PLFJaI/"*W"!&7b5,rIs72ll'+_$^G"lqb_#oT&X?(i>DggIh6DA<&UeBDDQJuHe$1gt!%]#4VM
%CGA6X1_^oh"MlRt+o-.p@$+;[+N"jhJPaJ]Q$sQ<g_4WoO%RYNLi7k^lX#f8#]+]k.>9SN!k1GP8i@Bb,hjA*?s.I:/PoWkg\$2\
%)hslm(FY;#F*GF-Du]qp@4MG&'mGokPb!LGZGDS]Zb-Yl.;o_e&K7!onQk)XSo#=S%%l^=+Mae^o00:!Ag7"3*&Icl<Q'Wo24giu
%nY:+E'*`8u$UG7O.;DqY6FE";f@Ppi7Y)oK7cFf?.sM@K8LMl\2_OIU7@>mcS*uO-4pu7ZjY,tqKH,+MkcBM94@@/Fd_]So_)?9=
%[2`_t;E3o+^2KN#K(?8/c6psk.;9LNiZ9'+*)!)T%j&4./g@<4%m<gU+"$CalN'<n7k6m_CI_=WE,aCKe.25l['Xrn%o(Gr%o]L2
%TlG)WXZGK?%l2!WM@5HT@-!L%m#arW@99QZU4jASjk-ZR]Pc6L'<\B8>iLE>%@:#@RWTFXg;X:u9b^r&8]2b]bseG0J2h**UX:_4
%Uc:a.e)BDY<#*R+$s5,JUTBdQ,0@tTO:/lQ4=V$1!GS'f$eC>KBb'Q]iA`*LY95Lo0%(U?;9>'aoJslMfQ%=qikqYW2]?U,EUX/0
%1KNshRaMA%!jjEGd$5!dp]<60LmK7$R?=ag-o'7<kJtRjAsb+s_#lMW;jL!"OKRFT*F@%qo*n+g)<+P!(fFt%Mh$Edm1r8^@.#]s
%=cH+lOY3_-UG=KRom@6Y>h0miO!8N\EjVkqaC6/;HXmIn*L[?FJbF8!Tbdmud&Uf_:/_H6QDKbf$D(Vg7DWd*_@buV;IqF46DE&N
%.PaNV!jfcdh8m@^?hMKA`NY$!3P-ljms&8Kk^2YlL*7QTk.Ca3\[3c=XC<-';G!I;C[/\oi&V-?JF!O9SoQ8(+*3XeMH4a:E9).@
%`><Kl&0j;jJ!e;Z(WeLMs.Lb+dNr<q.N"rM?0R&4L>`OmLG+0$,sad?R4+`e7pOsiMCi4*)%2jPd5keg<0@$s72t,aM4c*Y>_p1Z
%gehR/"uiMt^j:mTd$,\o7]FgubC[]gK#8O,e;MsW/dWAXVR9CL9;[[;SQs&6OO2ZM!^dntj-D51//>(/HRu[Gp&(D%&qW_.%6LTk
%);eE[XkE(370Gp<6:4nB\No`:RdEil&PoMC7rUf>J:=67rO%cPUVF,48Prp,9;,h2kDOuh(_e,l/`>mte-MLQ%$H66.R[F[G*Ib^
%h]0WH1#;-=]R\1tJTNS1_rV7G`j_aWaCl"BCkp3G;EIXB@j/9bT%1\DHtU\m<WIY8061Sj#Kg$Y#fYj=KV9nRcraJhc:1c)KEVWp
%;,SEkp08(8jY[ib#a[Rcm$>I;A/'^;UmU<Xi>sA@0I,^!?AJltej+6r"G*:<![m$06]r$6:M,<eUU:oJH0Ma<]3A.8"/$\ql(l$A
%4bm'1KMB;3JiNH+j$6q[!5mer)!ku?\\;0J&I;uX5N(p<H)u/$+3%GQ%r:0,aO.o#>cPVc>I&'Nhb\P+P$4lqH:)s1TC%c)K;Zdl
%!Wo`OKqf9S3145P(mZ@dndJ/=1@l6WrS6[C#*4r:,_hC,UK!l:Y3J;%c^!f(m5$.!RCqC?s'Mfq.*j>0_a9:($sjoQR?7AHXaG=K
%_:S%bBgW\,0\NKP#@t5"h8Cae\.#2^-.Q\53&PBt.L%>o(l<!MimJB&0[bq.?.UbU=5-,3NEjQ@+L(()lnh=ICRo*0"gOHJ(4ci:
%LCRc^aDjN]`!aSXTb\-\=^hdaBQdZ-f0E0S8*In$NKVa6(]D]e"./H-%SM\M3DB+$'F>rW3nc)a@IRTgjg7*=oA(0K_8M6,jldP#
%HSheC,2n&&4fq4,'Gc'MhtUFln*WdC/fl+F:fu._UMpTH9>dLo0FV7>2rm"5]]nF-2ngB=[AID>Nr;MO#/o5!/hXM5BdJ!`)mWaX
%rO<&5A!KF&/E)`SL@s[u0Z\9,S;Ko??:eh)X(&:jTJDhDRPR0Qs2VW?NF7N8@g(RsG<:c4>ah\%=PO'L].sr#FN&hF/kEg*!(#*l
%RMJ[dH0j]e="crBCJJMq*nNnjPWn0'^pn2K:k:8:Vuj-E_E]Q(W\d4r>uab;FCD$4WAQFP#Icu#88]:8"[L>A(^NNi-l(oSM-7sn
%omF`4FR6I23XYMQAKkC(L102)RII.5(KiE`rQ&Yk(\/7Fq_^ieJr"26.:@"9\"HAt[p/6W40ZTP<V38P]OR05^'iXF0,D0W4Y]91
%+C#(A&61)NAR2E/i(:p&KsA3-MCC`r`b@1mE,l/9MAr[)])C1='/(1*g=b2)ETtG.WRdB.m!g79n'YTa.!5.I+q,J;/qc!)?,f/6
%hhe"N)f(g;R&FfX["%b_Y_LS)Cg)SW0>9hNT1frW@E&=#$DG8Ea(>s"4(9027?qh&@;4bpSh$B=ND$[4>gQ*>PqE-;gpW`qQ4>C?
%CD\N5-#URjZ"qK5Jmq4p/M[Y7\n3BFB[8Q'(^$V(Z5?OOSXi$n71Aq0(]-=R$Mah3JTWpAHqf6e/n>"sQj)Xa/6u#-/M@k.'[hnS
%V0n<f)9d7-cE`S$5uu"%@5)W`ZeFu+G8+%"Z.]PEFU"m"M#,#\qFE@j"<X'BKT/aEJY[8s9:7NACM^JXjXE_h3m5DZ`N/#5%>'OX
%d;+<O*;/tlc$_``j/[t:b76!eip%fRZ!$"=&X&9LfSdXN+>/U.*0-h`?>U[\T,@TCC)7_>F`HXW`Uf"?C+a6jT@ZKaH:\Gi^q3MI
%<$^GUaJLXg[4.D:ODPeAH"tFfpiZ^B)m8*c)M^5.^2ZZ-@EtSI*U!jZWSWNW-gaOj_7O<@d^EB/XrKH9-!aReN<X4WW_4$F13=g"
%=tc/Ho2]EfW>$n42`)L$X9jK4;T?8Q@:]B>e2M81_lS[g.tqLs&TU!/i`/%]@U2C).eT'+8`6?_k8F].=NLb*FA'&77\CSsM?=Zr
%NMW[uE<h4WN)Xo&e$D/T&BO;0pqh*`Qg[j^%>Q+m#"atrH_@#c%$Dguh?ikbckdp@dZnD]/)5!3:q7N&b-MNIr@#X>F;@S;f8UWc
%:)_*o>]iY'2?)^uY4:@6bfB/F+NCdBET2d)HN]L5i(RW$\qiFP@p#B9SH\.^Kj]5YT'$G?!Yt9>+km"LeIS$^6QOPSAo'SbcQL^i
%\fU]C<r-&N-I<Zm%.[BD<EYEMC`6Ho,sXZ6_4?t@/lC-5gV5]Z8(f895U,\Gd"f.^+%q%(HH%^Jbi=$e<^]kbi!T[01EBt.mQ)_]
%FEfED)TD6no_#=oO4IL_[qO:s5$)nX'fq9-j+7mP`CIaY9kbnT=2^q]#-W.d^A2Lifb"G+QgXi:A[;ZE7cW<G9@oaMLFWc[IML\]
%o-ATB#*[aX#fKBc;=0K374R(U4Z[\r]u_R-K"YEr?&U9c%K*HrR8BKBdO0Xf!;FW?:jB)k(i[IYm]r+7YC^4',ilbTo[kla1!7TJ
%0M`BM9V=?l%3dpO'$+dI\RVlF^Du5&1E1_@Ls,beHCV=`Jg_[r:pAj1KCLtf%A8fa!DLcDAA*IPftZ<nVe^L(,KiGenKfsS\aDYq
%>)W,!kcG$ti4G<_0[-]Uh/N"g@UIh:UnCXRh!C48^h'iObsC3@n3V$CIFnXmma)^*LI"n0mR_V0L7`QQ?^d=_dIN3Qe'T;sSebi3
%%,i[.Z7M`Q1?;pJ0eVLhP$%dME7>GX&e<LfQ<[2W`(e$j[+A7V+'OC:jXt3P/tWNH&lNQ,]<YKQ7R_+fBEZ'TJRY(OSlh"$dXo.d
%!_L]]'4'LoD]!f'@%T)rpm1Lo`39_mR.U'^lkN/hU6pRud60X$h=Un&ZuW-42KEg-0)n5&4HX8KXrO9u6L/S1h-QB5>G)A(X@kY[
%h4"LTPh8m(#Y0u:\rt0c&5NZmW>EJu@GKTUSu:@Z(s5H'#Ihto2I&1,=ja2/!J/X`k)aFg"@\Aj!!:ti6Ff/_+]_0'$Ppljq[N>7
%$\;P8(,V#-5b>U(&7<-@l&$3Wq1cV+$kNR0K`c*qBZfgc#$;HVD\hqjdacSmj*XZr1)?M>;1*usSQs"=oY(dGhD!b"Un"*iSUmb[
%pJcnTUM*gq^]3BsL$I+^dK&\6`Bgm;q3D-gQk7,95r%-<iB$>jXrI/E)\*)&@2tN8d%Mel%X5Vn#!SIJYML$0l!eNK$SYF`]L5Qt
%U,o]blIdEHLLlF5Dj=dR3++&pG7@B]nK@YUKI<n6*@m(A-Ru6hR?,9PO>)Q=&2<GP*Q1DYG>6cH>UE;A.^TLff>)YSUtITRQRCQ?
%l2^30VQV&uJni?)(;]a>)m5bG';"ofnK(4K9SA:Apu79(kuaDrPG1^ReeLMuTl;.L)s9gF#46]\<(PpSqQ94XC6@63ie&qD5h9Fb
%.]r,>jXYfB"[*^i)H%W,/jBWU+H<c4mR!Y,9d$P$Q^4>"YII3B%O;@)j1Do,_Bg=)TY'r?2*X_H@RMC[E7Y`X<=3N;]DFk&":5dm
%h\)/R@*$YR&]jGd6!/Et]6CL]hl.KODHkEZ%9Oc`FX$8`lg3YZW,d=^mM'?-fGp#UTB5VT^(fui*U-.ngn]+[D>i\h4'g"i^,Am1
%GjF6V[rS<\#W=qil\+.._156ZVh._]Rkdhkj)WCFH>X`aFHJ31Fi#\f<48DiVW&'G:iU([<p/lhS%rMFLl<a;#7Ud]7?@8l+\BXn
%S9?'"O[)5PQZt6^HUf?M6R`V0J<;H#jVrtt'$QRs'eoqRm.%std627=WWAQc%)Q'IUoQ->j%E$e=cGp.r76RbGklog2&nTlMfc+N
%;2"J!19=@e4J9_`P'lkhX1UfD'j>m?PLtF&'mV6-.BYX7EF'#GnQcpV"i(ke($$;/Ie7Z4dTB"Nh4t-M@)en1mt%80k4:$XpqA^k
%H&`@dZ]7Au13Co9_`+-j3(n5Q+S6o5#$2EU'iC@V`G$rUYup@+(aQI=63VCdY.rp?$LUMNh;"d]>8`^Qo,Vj$cZ9C#UUjP/>Y"KN
%-ZLkI*JIp)1#N2)rkmZ)UpL_KPUiO8!k1?HE&Rk]^,&NWJ8]1!asQ:J"oQ<h9OW$O:\.2_Ce;.L[dcM).6TB@GcGkhkpYG#*NeL>
%_gH6*ge^Y[L6;"#7#.(8+<rJr$.gl<MG)A[^28I!85HGo!OjM:UT%-o#;e&IXTHc7N/d8GCJV6"1AEt!e5^i=QSKG]Y,+Cb]+JV]
%EcGACg+gJYPo&Jo9@$n@&q&(5XTe$s=qrNGY1@*[P2?$*UME5a[&-n`n<-3O]"=]ZTX"j`)JL98(3.ZJ`NSI`B(=:X4UDmcIBRJZ
%?4Fndq4].RDqM,s7$N"qi+_*j]MmBeD5>Ac0%lTkIr3fcCWV^'pQk_!H=I6s*bAsEEs\s76>?fB8?bI`Tk0=!&$ce'J'[p3O`g'J
%hV$T0VbWdeQ&j"Bn"Jp)cHk"(]$mQ)Pnth9>SM?:QfG/P-^m'<o-$'Pe9f]OVIgr<XW;JI2&V6\pSB+lCdA#:Lm?fLgCHDhh]hpf
%V6RJ<g"GhZ@@1!ZBB@/JBR(I;`j'&XY(o_.jpC+ud99.*5K^$K7qOJ$XmGaP;Uf3"eC%7Kcj*_)@1ojeMmWa&&7#1eY'RLq_igN4
%2!9l0W3aeYFfR*QgPWpu\u+D"h%[]#OosUdC>Jr+Me$ZPGnf-qWfCD\ceOHEd-GnMM%8Rsl(MA;.k$_\P4b\DN>plR'"(ZG&ueYT
%1j_i2+\H;]Y\#^;YhKcUJ4)A[S%-#^6_q(q1?DJ2#8<a\kD,G]U?j!0q\&Zl7HiMf:gVn!KTX40ab"Qt;NrFu8%%Ph&]:%F3E+_,
%9B5U/erb"&ld'abFt[M"2,E:4-YhW*;mflf7UL_BD0:oS3=("[hie7F>H)*@!IQOI02].D,nP"[>!X)Sh*`"+Eg/tm9aTK$s2@f!
%9Rh2U])T]JC'KupE)159C>KW]8sni9HsVm_rK1L$C:/X$+%))@,o2F]0@KGkai+j48iZ*K/sp1FKTc0]+uSU5eg%83RfX6qRK7cI
%]El;W>d'S_ciZRV4HC[g&HiHU\*>E5HQhp'emLS&!b4;U%!O;Fj]L&Ed[6GBYkd]2:)A*hFm(A2Fk+'"r[)V"Tp*YOHR7E>TCNB,
%PF!?fl'rh(*Gtar?cBr0(7"FuDIA,d=-5>o)Fj[lB&r!^paYnuSZLEY7WP\@EK;Chc!&%G;PElC;BkB/X4G?&mZV>3S_Sp)P[Ic0
%*26p`V4;r@VN:<4Z<ERql(G"tV-sUSMlqat6RXu_'n%(s%01*/mPh+q.b.`6%Xt=Yf5!L:0L1'G;T.@'A5FNdQ^4%mJW:)/ad5V`
%_"#KPqC=Ma+#0RK//a\CTRV%m=or6D5F>^ULr]kP>0-f)jH2]iE'!G%nYK^N1^'mPStMg@eak.qipZLPG/soiqVZ*PZSlBm'o7C:
%RG2p@fIK_&U!<-ZP+U*+$,a(gTtgr!3HH`aaU>k/pk/QNa+7]GFkC:YF@h!6oHX:,^n5ZLd&#!Ek?_@F;1@k;,((g;jfoJ[YFC_0
%3`"e$o`-M5EbDRDTI%a05A]B2/.,O^=LZ[d<p%>PS+msQgp5e)K+Upi.fqQ:VRA`-XS@pF8U<p+E`trtF!,_)2X%l@5M*=OA$o,,
%^33_\N"r"ung>4ubPTq0C<^;YO'Zi\cDgXM\ahbBq`[cSlg]eg6@`Hm,`a:4p#IUD)*.AMkk$+#MO7;\V3YQ$&rr\%G,Xq)^$)=!
%*"N'BnXUXr%eZ!eJJ?ETbpV"D=H\IA(.)^X3I`BPbio&U8:DQp)GN%RHb;heni]ULQjZ#H=R3?>3uAP=8"11s..aH)7`cO%10H.f
%guN=Q6mhaP,ft[M<HWEih=.ZO>d>n$Gtt)F!NrXDhbjqhf]"S6@o)\(B+c$'Gd@FQZ1Wf4Q8NjOnZ+f?)aS$)M40u\>JU)^p<:Bi
%67%`7o!RpP9$8Tm^%0\\@sj2hVB*C:(tE=fH:rrc=H2]s'(s?%hd^c.RRLM5mSoK`H*1mP`HFl1ATFIH"H)ckA19961qTLrrssO@
%TmjiO+bNIPEsY_k2V4p`8HC<:?"6t_R/#E#.2RnKo&t2fZ0:Vr/DTFCI-mITc]Xi4j<ME7a?m,keIlt]+9n&S7mpt[OE_cG(^Nf6
%]@c/BNfhZDe032JqsX@JrSIA=TmX6_+\;M/Wo.P;o1K]koR6i5.LJMl"Xs?/'<bZW/k.c8<e;c%Yk9`Mn0&Fnm+U=!I)$MQ'@f22
%G$spF+V_fP^'i2L<eUiAc1kH*4qk__[>Ze7eC&o`"J;<lI%V!mh@VhdGHHXYn'H\-7.k!4m@m\#U)RGEX&)pc9=prq"@m:i`'fgd
%#LI"PU<YO"8_ca\RNg@:h!8HLO[/tQIg-1@Au32_j^ASdX=2L!AB1='UR%8kqOrV2&CjF2X;]0'j)r.<cXk9*l4\ho(UEOM,3=$X
%DT.3A.=8MLQ@]4fSrX(mF@<Y<nQFhK6e*<5I6%%jV%/=M7\jKUdo4)4o8Hj).:@0Za]M1P*df$D9?mpI9%3m(%W,fIRX6^C)_pjo
%N')oIMT;oX/L"FeFUaJ%qZBV;r,X3cbO"C%3Bck>.;a6d3ufcN:aT0d"q+$=5H6M%o\:maL+c#F8(3E2V.k<=OotogQDl#K0d<g_
%8k^FDYsQptUqe0ShFSA.T]5HN#6tf.qY&fJ3koF&:"Aiq7*>ZtKB1c_+_4bR6e=b'7"N3nQP]<uS@4DIar>(;iKX.U)IHo!Dl+hu
%WU=6FV)`5n,9Nl+&A\[,mkAL`3=.c!Gr"-)+abgRW&ON)WX<kO>)di"Ju9Y7nX2g:;bm,Jb)S/?dtF*+DLNUtEl<M]UI_ef*Xf.U
%)I?N4k*SWJV\C,(f]Glt@2)#3p8lbMDc9g`(AC9m/Z07Y#u.sSBhR>j6hE_FDehN/[J%\r^#"d5IA1WsEFnHXX`SEi>W'hpJiqkX
%BEqWsr-^Z>D3@3("];E#:,r;][oHq:.RJQp?fjh'Yn)h6!X3F?Xlh%`JtM)1!m%+t2ZAAO"=.rb1.)<Prig=MT(akn+O?DnJHPB*
%X%Fg`EB%#J0N`DW6C`s:OZU#@a=D*rGk-$:_W*VH9:-JH3_kql9g9h+bIH'A(e(C8<M]u:F1YgsNTqpf;i7nN4ggQAZ@RVd4#"WF
%Yj=aUWAA7m5\H3Y.Wn5j_7?t'pG(b2A=7D\e#fhErn@@56s+n@1:ns;J20Vd9lE?iEGcM$#9*4M"!a)DCSED4[STp4!L"n)_!GoW
%Va6BgfP9]X2nb2,I,1Zs$L.lml+__-n!jDYMOM%`<)CF2lKF&'8kM<N-u1'\0ZS+;F1(2/;eM'h;cV6W=9Z14#pkeT%%7kGD'GhM
%:G/0F3*MiR2Mi69N3kC0cO[(fS^mQgfR\[]<;C35!]<6g%b2,600VXkhK<#U.oG3"_(%E59>k\n;J&'\o"gH_=n?Q<\ND]6V8WGE
%!1OE7)9:pK.7]-@;MLGU9T%=r+ul+,-V6LDjobU&=nANZXc<LKRm(G4EdF]BUI@mg4b;>/HU4T4%"?er:,,qRW4SrTi,0k<r&=1i
%=M47r,k.oB3!D:N1]s])8ji'gjc$Ne'4V1Z=]k6d.']'Ao@MG*B6LWb9Ll+P(L`_9;k6e0g']iX\HbIQ?l4&"e*PM&<e=96eqMJb
%pC5gN0IkUY#YfIAP^`JJRp-CSXq"4EJ^61+f=u3On?cd?Y#kf9LVRJ$ZBBjKU!>LM%Zg%<7b#dI4&b8CYQqHT8\#gI+P>l.l;oP$
%#\%;QQ:W@7?AUf`paMm]\A!+77eh&d=Hb$VNCO7NGGpkK2.9O<#soBgerk66kFMJEIHh$Mgm1m$L+=&KXX^93Q0F&O\^jAK1qgs$
%(6r1B@k.,7"k4<eUQ:t%mb`uDpKhN!p)M*)&n:kuU]$^AZ6>/r`#0G5j=Gdo>B<Ql<ndXKq4I=*p*1I.VTk+gA8]q6S9HMYe)6IZ
%TYTeYn$69t&AUi1.pNQuhP&BsS>+W/+'"Q\*&41MrXYo]Qbtsal?7dcm(:j!1G*?B6(]U=^$DGZIVO!S=^n$h"V1tF/d_H'o7Z#q
%'s_G4/J(AM#4)kD6r)"t!VrKrNaBI)=YjA!,D*l><]6Rq3^?5C^JF3K%nmX,\5/-.;IFdSC.[`pY)P9#.>&<iKn-=)58i9`+-&e+
%5\)eqj*10]?"`\]Z(;Me@mU`B!c"r,qP$W4mYHT'J43:N$U()FGY]:`==`%(i@m[0!mcsL)4N<NUgWRMgXtGTiIHsPO_u^`pPT_I
%^eSWr.a-3/o0dj(R3N6=[,)I@UA1X&K<Hk&`*_-"k'=:2!^EX@%$e>G71IN8U]?/;S$tgFLAH3D%E;d_^qUZ;RI/*El)RF1oQb($
%n\k?u=A]KDrO"dj?q#lTEfbJs(T*2gE9Jk1QffdM_i8Lc:P(qj'r5YM(@2VB<?bIcUQ8!!EUgi[AX[BiF@H=C_!"^ZTpr8ZT,V0-
%HfEK^1mKJ[Gih@6DIhpMc`JOc'1e0\2gfda5<Ld*.;q')H+_,(8f9^u`HC(OA^g^5+7DHo9b&N^9SWO#6;e)8&*O#bldiG8ihBHs
%m^oek2[liVF@F@@@rajcZ3Y,)W[/Ugod=R*<.R7E-'*t@)nSg)F<4Y$L3Q`uT#:]S^D:@"R[&sUa,\jZq3fXQ;k4bM#]La#2VN43
%NPXMf7j*5jJ[SM+!%[>mN[[8'c>4J2F^#R>_A0B(D3MD6P&$3^)oHbq&<:M?2l42;lSmN^(cn\7YYqMuUSJtiP.6j%<UYH"C&YqY
%9$X`$k*o+#;4/Qg?.&[a\I!kH@D`&=7O!1>a6mU5R'#XqB9<(r5=h-(3.M%U8[Anf2#@N^<n!tVR@ZSUB:LQ7M^9q.KPH]V,+"\R
%0J&-Y_nekf3_[SI:.!ou$P>!#3uKjer?_k>a%1iGmDQ9[pQMaS1Nbb(:j%%VAcW!hIQOr.`pfaY;^Z(?b(F0k+<t1O2E*q(iDOYH
%bdhrkHUfHa9*Hc$$ilGrV9R[CHg1^0-DhXc$7#5hJ9+Wak;@EH3>b>fY&Y0o/sPi?WHh$48oY`\?,#oGH:Op^f&W)",m2kki.F(V
%JlpGLUPa3ojr2;g\AP"j2s_a)p'`I*VMC8@Xr/qfI_u\!/oah`9)/mH[[77D;jRq)2a>jU@mr2!>X;=iI`TX2X4*i?mRPs%<HG:_
%MP`:5XNaXTIT0<.*BSOANUj%S?,_$O,u?d.9kSO4l>3J>*n*'69X6&\S#&#4f22!X[bO6cr1Md0bhS*@343H=j>PX='o?i)%e$'3
%WmDYqGsC0XM5kGsk/L-2N^[d5@u/$[9?=Km:([,Va8(Nh5Xrd)WY[g/i,so`:`&B*6ep+,$-__Z2/3o*aY5V\;G3UoRMcC_X3:07
%WgS?q1d(sbIrU!^Z#pm5gd2T6D]EZlhC_>l;De`WeDK/01$l;h^VD(>Y_?;nk@'-/7<m,K&1G!7pjI>]hT'auhF^,M[<SOOjXKT+
%$ZaiT!T11#IG+7!\Z;N9#,9;U3)4q,]@A^JKd+BE7bsq0UdB[T3m"(((JVm1VfdgB4NkFU4$eEA035PO')t8mkegc5/Ab,Wp/%QU
%9FcU:-Ldk[U;gm9_)`>ui\UfR(\K6Jj`N/LgZc>h-."ep]%q`c66,D!bs[1O$YAW7Z"XD/)GjPP8dYrZV5!9]6`G*GNmA!q,uRh<
%cZEDZLml7E%jYg0h4!In_H=Nh4_Hg?[r%u=;`tcsq5.gd;E'l7H.T01'_,''GbPuF32nV'k3Onf()\L3;1+6M01Ca`*R^8*:PS(4
%eI&VD?lD[K4=uM+=4=rT@0k-XO*N<UAE'(VYc;SjRiiCB:j5O\PI-6$XPp\jBYgU*%Sp!_s%+KeOKX*-$cU@UkXr1`kP/+)*eb03
%FZujiTf<BJ.ZXd^6bQo!iYXjAa5=>F8Ah$8h"C2LV(&MdDfYXVp@(5&/1hD_;bpuL`-UAhPPZD_1VRtpS4J18D]=oL^k_%k$h*<9
%]#M<'C`1q.J&@jp._cs95M5TV<DbVWpt1XWag;]l6@Q>Kf&q`##GMrXb^?5:$bD#-3*8MZk^tPo:j4<PD0K%.Yo-d)[`KWfiSGSf
%S;3"8_]LEm8J\X'MM3l\EB@:E^^X>9_u`QF9q+fGn>7M-m]jC\2\_Z3#!]G1(M"4.3j.@94][R"P'.2>)YIan9V13tfUFWFA*5$N
%ik(T-g)\h6_$7@]dfUN;ncYs?D&udMkS]`Ro\5qu]aJc6FB=@`Va?%NBfN>NGK"R$D#O#idFF^e,=6Ic&_q&nKX8`:NFEprm^u$R
%A&5-@HcV@opL0:.XO8<5fBkHD??NJF#M/J-H6F*qnRqO!l0@SNW:ARES:cSI>2DA&Q$2$>f=Q&V`B;$ngWfiC&.%N+C#@s[aTYY=
%Ze9DkGS#RpD.f23W>[)7@[BQ0MU#8hcW&Ecl>gbW-\,\!#fR`(T1^_CrAQMMI#>c8ACVG%aN;hY3Ii*UbhsWeW\o=XT/nFPR:`"r
%3q&onL[GP@p9$W_SE&!;D>PG2nu!Hc0l`#KGqFJ>[:9(a_fKApdf`&1inqE6UPW@H[4FZ/OP4P*8tIGk?9IcD%c($_/;3/(mS]!2
%L+qu^e<emq90F?'&[\DLU%<.Pi%WhQId?F@R:uX5_rQR'XtnLQ1E['\9AESTTAQg3GLCM/Vj1rG>30IGXAnPIRbWg'`]&m@^UPiJ
%$(RFKL^iaBC'hE`el_/NZf?eSX^Ebh"Y-H44'rhpXZ>M.e+hckaZsBUP83<=Y8;\>N[q`TXFapUaH#SS/j6?mgg;B!R+4_>L(W,]
%<)K0H:I_&,-YnF\?q2+XZNt5_#2")3V.YNfp+K3]U%NQ,Yu?B65O2<nUCGZ!*VortUWK6((Nm6"\0l]&ESiP$lD7L9+AW\=d;NUu
%Wt,O@8LoPE"[X,:`Y?"lWIh^akr/q]4"I88O=o:2&(DPe2@kW3=u.b!Fl+F_'L$jUrTP"-.No=:XVUm;4m,\F2$f<tWW^X-FrAqZ
%l%;nl)2QbnWVZB,8VI6T813jP?"tOLkmbM2<oZq)=r`an)7+OHn!Y%prg'6N)XS\Q1frS"e1rJbkq'R1fa@e&h*t&:9RoaXEh5`'
%0)nuM\EZI`n.%/f69EA)U)Q?T2,F+1nJ9Oe0@N@h^-^\ggk%oBh3gn@"QQ8\h)'Pr5:\2#@u5/N,haJT\*=X.4'Vo;f4/MtDWRj>
%Brg[Tjf>E'!tK]3?.eZtUJkWP`4^qF(Tk=,=OiUcp;L5X3;/2[W9G!!i3XO@jm-YT!ZU0BZ*(2*&n&4j'3Wo0g9ToC*]]e=V@J=4
%>qWAZ(`(55IaUK5"Wp_%1`s"!c+)JZ%l&]r.7X%dPG0'XpC-qVJ/,PZ+[9+^AWCA&_]E=Ll<CZeeKqp1YcWWk[?B?`6u*c4]3"DE
%XZc^q_lS\mZjjI0/L&VC\id4*1.d/aZn9l"r&JfgJ<8]<k)\lGE?)Rn)nER(#<^$)T=-9^=&Q+3;koM1]e9F/m+/#F:)Tt8dQCJ<
%D)^EC]sECB,\QiVGBXB,'VP2Je8VM@q%6K4EA==iha'e-]F#T(;^@T"U<[m!7VH0M"2'jDb)p3/dUZFD0f0lnRZG3Rl_SpK(JiK2
%R9nL"8fi5'Wqh2QgRicGFX@*eALE2,<*d,3CL/0oYr+>_'c>GJ%B!94cP^IiMMF#Vn=*FC"Xa0&ASP)"[G(,lm#QV]_0YN^2H;n5
%9:8'Cr9`OjLgi!UY,cm-d[2M)p=Ad&bt`4inX<^o]mloFI2"jeI`6JDhq`TO6r0^.\Tu7><>KDZIMt(0XVcW#.o)X6#GkuU+92qm
%a-`:LBJe=(Hc_^7\:Ie])tFUC>9aNOF0U#tg"Qd\h$2^hYALbG0[g;<Qf[g,gCD3*$B:<HRHEP4V/J4*$4W<7'p`ru._Vga1sdBC
%ke*ckO;Osb57!4s1=]dTJ`ZXZe9e*/0e@/kMmRe1qh#B5>c>7leYCc'C'[8I_QWY/7aF;X@Ks^oicD`Z5,<.WdV$%(q^e$YT.TYW
%fJJX<6,duPjrAI.lW-UUr<G-+XXPDD>C,.M=gqeb-HX8IKkkB[0?(g$W7araP^udm/3Z.lK8ak]b.s<ST<,SA[i@&a1$9"Z&hTf2
%<TsKoAlmSekH`'@B70n3S\d@/R`'!$ms4#46ZT!#N(<MilBjgc[R:]!V,3$2Del<e4&.nYb[jnu[0W/O$-]_0CfmJ,b[Cn*7l(OJ
%d8K3*IP+&]FX$,3*%=]_/Ve3E^9FNns#GQ.D;FYaIPl8/7oT1NZ\Ee^pC=WsXMog&=+;VNif^/?#2W72fqTu!N@Js!AS=ZhFN8jK
%IH)#mXgYG="J=?5b=;e>$4+q2Ral[uIL?WFm'X:\,$f%d<S`6i"\"L%UQ&KS6qu2)J[(,+mSh9?d'RL>i(#NU5"^j5#j#4UQWh$*
%\TD^*6)*U&'E5[H'K?`((^DI2H$frU'bThAR7$+[$uMb5[`U[^1u(quamnY,_mke.B(rPl(%#b^:eueC:<+WPceGn:goT0n/rBC+
%Fh,;1-#S593Q_nG'^OsO'Hc#)KMQ!DB(0pslbi&pb[PE2P_'iTJZdg<F%SX#8mKC:pk+C6NI6+VWi^6kiTrGNiSh8,pjM&YFkFYG
%fYB?FibYA:"nG&KY"qJ_Ce+`A4-8eg!!d]$q]CKG_/;iN)SK.-?>dImXeQ$Plm9;);Q!5"O);2*Lf$4T^ao-"r3Xr%"V`,EIh#+\
%Z;nj&Mo63M\([F5Rej)j2*:]0JWk^fd\[L28hLnF$>@&qS'b%g)atb\>+pjA\5>b-/M6(o>+g<X%l1Jc,=/i!K^Z1t;`+oi9coU6
%+>(mgc4u!\d5cX7mtl/jVLin?41[(W<(Es4O'!4U$NWSfQ)4n6`fSbJa;e(<)jm>TT0>c?"%K&P:4h`IR%>]R4`%(H%]R#<#/*Ga
%DEMD%G6qS(Wmbc12M)3s1.Zu!/#=>Bk;(bM#C:66To^P/#VQO?<h?8q..#T;TKj_E!2)0a\0A;&hA\$2l43JrKOthq*Y2l)ndZM&
%gYu;BD8Mt:8os0lk[L"di)P'^FD:MC)(a7\A&LG5GS254D)<Tsph$B[PPo$jT7DaC;o5?q'<\IcKZg"3_SU)+^g2YTl:@-G?[&m%
%%6>k.R=t`MO*MqGTu'KiZoPc^Fr-FA87Mmj*Q<,K\9mH`'5DIA;@-oo,!%rFcAbg-K%RNB`K<jl^2UTg@\RiFkQDu1h03?PYk/GT
%_OR/'2ASk`ri&:1"V#unl'SusJo6<""OQ%R-FZ2QFPC)KIRhEqFSC=Gg`+rniE_fhJX"Ftok@nV$MVs">,kC9m)smueJYDc$6ln<
%Bu,"O/IiZWTGJmT;Ni*MqR:G4-((H`YF!X:ggfPIgBu5l-$Lp&<\\jJN&kV8#B+lCU9:]7$u;H1!`AHVP4;[d4YhA<jH9uO@@"<.
%l$)0LWb5K/ZI;/QKD&d2_7kVbbjGO(1.6O_5%B/8;$A7YACGlO2'iMpeUq5b#5/dN=M9XWb0;=S!(`cgJq3c7D/4]Wl[8(6]o(gu
%e</i'WT[JNTUW,EDlm0@AmkSVDl^7k3_.3&q"C#8/%T:F.6EN;jHa)0o`\Ypf!^:A<SVn0Q__kTU!8J?W%>fP,ZT1C8_F21KiWqp
%O[qc/OL'4gU34&6&sf&mMk7=%&![REN?/+e#98))\IKpWX^OK14!Hr.ibg&B^%)*5D&F]?3?(aGASJ`('Am]gn!eCN-1Nk:QUR,W
%'TC8OVbAGV/a*I5#-mi_DC/1L&W\=dK-5pn;,'SLL,9<rGXW/W>4r'%4oI^pgAC)WKufl<jhj=h.Ea1I%Y;071r*#.MbNn\22O-V
%hb7L=+HV_Ge&CaCV^+U"E^p$ieN0TPOoES%"s^f_Q\8Z@`F;^l_\1\2VeFB_l_<c%D:K#VHSImk(D1HETr$R.&sc4uMH:,=]S91H
%k"6NEdUV$D+,`drE.V-40)Ato[]GglCshZD5QuJLZD/nB<$/4q[(G7P[m4Z6l5hjb4gQ.7N6&GJI7/t3et^n?_KMTWgFQIT+pB]_
%0o[LE7\/5u%%3[(\+KIF`/,WVbI]k=;Voi7Y.0:mUM5#1Xl]Wt-"Qum2<m@)`mEU$p.Q\MamF"Gqd#ZSeF>igRY@u#EO7\V!M0<<
%PStje=.PQBhXokNB.P#9[iW_T.0Q<8IbBc:ei6B.;3WT4%4]2u5;9Y-1d[+tTf9r8J-%t8=O7]Dc/tJea<Z*Y5Vb+VD4Mj3]ei+?
%@P5E]_/rB285C*YG+f,l+,Ku7($NXLr)=jeq3u"glWO]SR3>Bu71,2.NkH/C-ShLa8rA6rpi6iNf9J+^J$lR+WB*a\2d,jOMTU/D
%fX&2P]kb+5>!444oX=+K:s`K<ekAI,O3W.I?j8[?<ek@#<(7EK/,e%4N8B;dE5&*m<0b)'9^MgC!ZnF#C"B7GV2ddOGo*ftYpG;t
%dL:PuXg/cqD#,hYU!q,WZ1_1DV?46LR@:^1*[]H/Qid'"/HOMDeQ^%Nd>Ub_hCKDJ[O[qNc)MO<9&"EQEZJ'+&&mgP;eI_QV03b5
%do_p3]leJg#Y)X?g4]FRq=j*H0Bl#8mF.K&NkCB'5Q-ZdMs_j+P.8F_4bFq0$SXh0]huqaX%P1D5sR9>:^nSUP=+tEOTu5;?o3G4
%keSW#26gRc49$o?N$9G\1MG]\\hQ+V^!M(p)75ZTkgY1P/uM=dB-]kRVs/%/!#9(5TSKmhkooQ`If.KFL3GJII=9ZAn5k,<iEuT[
%qsQ`Im47lhIm<r*O$E[!VpGD;jd.'=Hj+uoa3Qtuq57R`s2TV<q;qMBIera/s*XY3q<+C?D.!;.ohQZYqW5o(s8D+f^3o_KhuEVh
%Lu>"S_%/d.nK7buqsXM+n0pWO~>
%AI9_PrivateDataEnd
