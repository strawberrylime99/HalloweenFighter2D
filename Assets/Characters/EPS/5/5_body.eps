%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 5_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 123 180
%%HiResBoundingBox: 0 0 122.2059 179.6989
%%CropBox: 0 0 122.2059 179.6989
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:30:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:30:48+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:30:48+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWpJEjRpJGCRoCzuxoABuSScVeMeY/zs1rW9Qm0f8uLVLiGAtHd+ZLhedurL1FtHUeqR/Mfh9qb5&#xA;VkyiKTQ5vONY0vWtWmZvMGu3mrmXcpJdusIJ6+nBD6aBa/yLTMc55FjxlJF8meUkHE2HOnQiV/8A&#xA;jbfB4su9HGUxtI7zSmEnl3V9T0Z16Rw3TvEf9aN6ow9uOEZpBPGXo3lD88Nd0qS2tvPqxzaZcuIo&#xA;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&#xA;XFDsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ff95280c-d080-4782-82bc-2b91162f8191</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:30:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>123.484512</stDim:w>
            <stDim:h>100.749851</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -179.699 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 179.699 li
122.206 179.699 li
122.206 0 li
cp
clp
165.119 56.0859 mo
164.682 51.0327 164.079 45.1338 162.265 40.0986 cv
161.93 35.7163 159.991 31.4072 158.351 27.3965 cv
156.841 23.7007 155.414 19.708 152.795 16.643 cv
149.442 12.7207 145.175 9.22117 141.322 5.77879 cv
138.8 3.52488 136.062 1.31052 132.466 1.63279 cv
119.357 2.80613 124.402 30.1357 134.979 32.3564 cv
135.325 32.4292 135.697 32.3867 136.048 32.269 cv
140.941 43.4477 148.92 53.3061 148.548 66.185 cv
148.466 69.0112 147.764 71.7607 147.606 74.5727 cv
147.414 78.0107 148.276 81.1821 147.766 84.6421 cv
147.095 89.1938 146.526 93.6035 150.402 96.8965 cv
151.339 97.6919 152.906 98.1714 154.023 97.3637 cv
154.821 96.7871 155.504 96.2192 156.119 95.605 cv
162.174 98.5215 163.897 81.4087 164.232 77.4043 cv
164.824 70.3413 165.733 63.1733 165.119 56.0859 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.286275 .235294 .294118 rgb
f
118.328 161.978 mo
114.592 147.687 111.088 133.319 108.131 118.842 cv
105.073 103.87 102.286 88.6865 104.094 73.3725 cv
104.135 73.0288 104.107 72.7275 104.052 72.4463 cv
105.215 63.811 104.838 54.9057 103.968 46.2827 cv
103.045 37.1372 101.684 27.4214 96.3173 19.6919 cv
91.8007 13.1885 85.2811 7.85056 77.9188 4.90574 cv
71.7938 2.45506 62.9442 1.01658 56.3485 3.67625 cv
52.0536 2.48435 47.0204 6.10496 43.5819 9.33445 cv
37.3798 15.1592 33.4745 23.2055 32.3798 31.5962 cv
30.9901 42.2519 30.6239 52.8281 28.6434 63.4551 cv
27.1649 71.3882 24.7079 79.9887 24.7694 88.2695 cv
22.0565 96.8086 18.8075 105.506 17.1444 114.232 cv
16.8065 116.004 17.993 117.469 19.413 117.881 cv
18.9403 119.288 18.4061 120.671 17.7938 122.025 cv
17.1513 123.465 16.3944 124.852 15.7264 126.28 cv
13.9647 130.046 12.8378 133.911 11.6874 137.897 cv
9.5741 145.226 7.53504 154.366 2.88953 160.493 cv
2.35145 161.203 2.57996 162.148 2.88953 162.875 cv
3.24598 163.71 3.86414 164.183 4.75184 164.324 cv
5.73524 164.481 6.63758 164.01 7.09949 163.298 cv
7.31824 163.502 8.16492 162.502 8.5741 162.134 cv
9.36219 161.425 9.87586 160.571 10.3446 159.66 cv
10.5223 159.522 10.704 159.392 10.8827 159.254 cv
10.5458 160.403 10.2753 161.571 10.4462 162.874 cv
10.7362 165.095 13.5204 166.241 14.8651 164.07 cv
19.288 156.937 23.8651 149.905 28.6571 143.017 cv
28.787 145.157 28.6083 147.341 28.704 149.504 cv
28.8505 152.806 29.6776 155.994 30.4169 159.205 cv
30.9481 161.512 34.5985 161.541 35.1132 159.205 cv
35.7577 156.28 39.2948 159.985 39.8622 161.4 cv
40.5624 163.15 43.4296 164.167 44.4266 161.997 cv
46.952 156.499 49.1649 148.599 53.3417 143.642 cv
54.6239 146.825 54.2831 150.891 54.8173 154.123 cv
55.4638 158.035 57.1054 161.79 57.6874 165.692 cv
57.6835 165.861 57.6903 166.036 57.7245 166.22 cv
57.7782 166.511 57.8319 166.802 57.8866 167.093 cv
58.3876 169.799 62.1112 168.846 62.3495 166.489 cv
62.3886 166.109 62.4052 165.729 62.41 165.347 cv
66.077 159.944 69.2196 154.213 72.6864 148.67 cv
75.2538 157.023 80.6288 164.862 79.9452 173.486 cv
79.7694 175.698 83.1737 176.59 84.1503 174.625 cv
86.3612 170.176 88.7938 165.831 91.4511 161.63 cv
91.5145 161.702 li
93.0468 164.2 96.6825 162.527 96.119 159.761 cv
94.9227 153.887 94.8319 148.041 95.9345 142.136 cv
96.1571 140.946 96.4296 139.764 96.7665 138.602 cv
96.9374 137.932 97.1483 137.274 97.3983 136.629 cv
97.4462 135.367 97.8348 135.189 98.5643 136.097 cv
100.339 136.74 101.5 141.037 102.174 142.54 cv
104.295 147.277 106.72 151.864 108.83 156.604 cv
110.271 159.842 111.439 163.118 114.874 164.633 cv
116.682 165.431 118.888 164.116 118.328 161.978 cv
cp
f
99.4911 122.043 mo
98.8319 122.437 98.3173 122.893 97.9032 123.395 cv
97.6639 123.354 li
97.7626 120.144 97.3593 116.969 96.8436 113.8 cv
96.7616 111.227 96.7157 108.653 96.7401 106.076 cv
96.7421 105.789 96.7421 105.494 96.7421 105.199 cv
97.6327 108.561 98.6239 111.901 99.5585 115.251 cv
99.9198 117.405 100.302 119.555 100.699 121.701 cv
100.306 121.702 99.8964 121.802 99.4911 122.043 cv
cp
91.2606 140.819 mo
91.0555 142.053 90.952 143.311 90.8944 144.578 cv
90.4677 144.403 90.0067 144.331 89.5643 144.378 cv
89.8749 142.894 90.1747 141.407 90.4442 139.914 cv
90.6542 138.749 90.035 137.729 89.1718 137.205 cv
89.661 133.161 89.5614 129.156 87.5048 127.971 cv
87.4735 123.996 87.2645 120.009 87.2274 116.035 cv
87.3505 114.494 86.2977 113.686 85.1122 113.584 cv
84.5507 108.58 83.9266 103.582 83.245 98.5854 cv
83.079 97.3672 81.6044 97.1679 80.7225 97.7339 cv
80.7128 95.7085 80.7313 93.687 80.7772 91.6689 cv
80.9804 93.0293 81.203 94.3926 81.4276 95.7754 cv
81.6093 96.895 83.4139 96.8423 83.6376 95.7754 cv
84.7694 90.3857 84.6805 84.7768 84.8651 79.2705 cv
84.9735 81.8398 85.12 84.4082 85.3388 86.9746 cv
85.4071 87.7876 85.8524 88.3501 86.4257 88.6596 cv
86.5936 90.2593 86.7616 91.8594 86.9481 93.4575 cv
87.1639 95.3008 89.2889 95.7368 90.2089 94.6123 cv
90.2264 99.959 90.2567 105.306 90.2958 110.656 cv
90.3036 111.807 91.5946 112.099 92.2841 111.548 cv
92.3456 111.995 92.4042 112.441 92.4657 112.888 cv
92.5604 117.1 92.7753 121.309 93.1161 125.512 cv
93.2001 126.543 93.7606 127.19 94.455 127.471 cv
92.8632 131.769 92.0165 136.269 91.2606 140.819 cv
cp
83.8837 55.3598 mo
83.9296 55.1577 83.9628 54.957 84.0038 54.7549 cv
84.1034 55.1118 84.1952 55.4707 84.2997 55.8271 cv
84.3475 55.9902 84.4218 56.1255 84.4921 56.2656 cv
84.4979 56.6596 84.5097 57.0537 84.5165 57.4477 cv
84.0546 58.1499 83.6649 58.9121 83.327 59.7138 cv
83.5087 58.2627 83.6903 56.8115 83.8837 55.3598 cv
cp
93.7577 49.5937 mo
93.6268 49.6128 93.495 49.6323 93.369 49.6728 cv
93.3514 49.0801 93.3427 48.4824 93.3427 47.8847 cv
93.4794 48.4546 93.618 49.0244 93.7577 49.5937 cv
cp
58.5575 17.3301 mo
58.663 17.1191 58.7391 16.9033 58.7802 16.685 cv
59.3593 16.8374 59.9462 16.9834 60.5448 17.1191 cv
60.1513 17.4507 59.7518 17.7778 59.3622 18.1133 cv
59.1493 17.7988 58.8739 17.5298 58.5575 17.3301 cv
cp
113.15 142.811 mo
111.882 138.58 110.32 134.482 108.804 130.363 cv
107 123.293 106.998 116.013 106.439 108.737 cv
106.122 104.611 105.655 100.5 105.081 96.4048 cv
105.56 96.3301 106 96.0229 106.111 95.5005 cv
107.172 90.5156 105.671 84.9609 105.028 79.9546 cv
104.4 75.0512 103.565 70.1694 102.62 65.3154 cv
103.151 59.2729 103.417 53.2099 103.253 47.1269 cv
102.948 35.8344 101.31 24.5488 94.3475 15.3769 cv
94.3114 15.3076 li
94.3016 15.3149 li
94.1532 15.1206 94.0175 14.9214 93.8641 14.7285 cv
93.3085 14.0312 92.6171 13.77 91.9305 13.7998 cv
92.4989 11.6548 90.0546 9.60545 88.0829 10.8442 cv
83.2235 13.8979 79.9354 18.2475 76.7909 22.7519 cv
76.9852 22.0478 77.1825 21.3457 77.3827 20.6465 cv
77.7401 19.4053 76.1708 18.5718 75.2733 19.4184 cv
72.4276 22.1059 69.6503 24.7578 67.202 27.6411 cv
67.1473 27.542 67.0839 27.4521 67.0175 27.3628 cv
68.8446 24.3921 70.4237 21.31 71.7938 18.0854 cv
75.0927 17.8037 78.244 16.9101 80.8934 15.0796 cv
81.829 14.4336 82.2411 13.3794 82.1288 12.4038 cv
84.3241 11.1684 82.9403 7.64646 80.6122 7.61472 cv
80.3007 6.43504 79.3671 5.48631 77.8651 5.624 cv
76.4354 5.75486 75.0048 5.89353 73.5751 6.02927 cv
71.2968 5.58689 68.4022 4.58445 67.2011 4.43211 cv
63.454 3.9575 59.4921 3.64207 55.7216 4.07761 cv
50.3241 4.70066 45.7841 7.52097 44.2889 12.9204 cv
44.0136 13.915 44.3475 14.9629 45.0067 15.7002 cv
45.0282 16.0713 45.0663 16.457 45.1386 16.8828 cv
45.4579 18.7915 47.9218 19.4668 49.4139 18.6225 cv
49.5048 18.5718 49.5878 18.5132 49.6766 18.4619 cv
50.1454 19.3154 51.0546 19.9092 52.0497 19.9038 cv
52.2001 19.9033 52.3466 19.8916 52.493 19.8818 cv
52.4638 20.3056 52.4374 20.73 52.4501 21.1806 cv
52.4745 22.0293 53.0097 22.8637 53.7382 23.3393 cv
53.7684 23.7929 53.8329 24.2617 53.9647 24.77 cv
54.3085 26.0893 55.6054 26.7065 56.7968 26.4873 cv
56.6288 26.9648 56.4882 27.457 56.3866 27.9717 cv
56.1063 29.4004 56.9374 30.623 58.0624 31.0512 cv
58.0341 31.5718 58.0604 32.0825 58.1591 32.5776 cv
58.3251 33.4057 59.1425 34.2011 59.9608 34.3794 cv
60.9794 34.6015 61.8212 34.5317 62.5634 34.2651 cv
61.8163 35.6279 61.1552 37.06 60.5985 38.5825 cv
57.6991 46.5219 58.2909 55.8164 59.872 63.958 cv
60.2958 66.1406 63.6718 65.2236 63.2167 63.0361 cv
61.6141 55.3261 61.12 46.9487 62.785 39.185 cv
63.3036 36.7656 64.4804 34.5078 66.0097 32.3896 cv
67.0243 32.0669 67.827 31.1987 67.8554 30.0722 cv
69.3397 28.3647 70.997 26.7534 72.6483 25.227 cv
71.0858 28.3491 69.3143 31.3423 67.7079 34.4912 cv
66.4462 36.9643 69.5057 39.4863 71.5985 37.4927 cv
75.2899 33.9756 78.0809 29.5654 81.0897 25.3843 cv
80.6522 28.3613 80.9003 31.6284 80.9393 34.2158 cv
81.0018 38.376 81.4257 42.5034 82.1444 46.582 cv
81.0477 46.5542 79.9696 47.1113 79.7411 48.394 cv
79.0975 52.0078 78.5868 55.6445 78.16 59.292 cv
76.3309 61.9336 77.1405 55.2719 77.4237 53.9497 cv
77.9374 51.5527 74.9384 50.3613 73.5604 52.3208 cv
72.0126 54.5205 71.1581 57.1269 69.8114 59.4096 cv
69.5028 58.7886 68.5956 58.7446 68.1337 59.3554 cv
67.5927 60.0718 67.2802 60.7202 67.1132 61.4136 cv
66.5839 62.0698 66.0438 62.7173 65.4794 63.3437 cv
64.828 64.0659 63.8671 64.7944 63.5829 65.7505 cv
63.497 66.0395 63.7792 66.2969 64.0595 66.2265 cv
65.0194 65.9844 65.7821 64.9931 66.4393 64.3032 cv
66.6259 64.1069 66.7938 63.893 66.9764 63.6928 cv
67.0848 65.0561 68.5595 66.0381 69.8212 65.27 cv
71.285 64.3799 72.3524 63.2417 73.2294 61.9692 cv
73.7636 64.0127 74.9618 65.3398 77.4032 64.5591 cv
77.6249 64.4678 li
76.5966 75.7163 76.4393 87.062 76.7811 98.3188 cv
76.7841 98.4341 76.8036 98.5381 76.8222 98.643 cv
70.7733 114.323 71.8573 133.65 74.3485 149.704 cv
74.5888 151.253 77.3016 150.906 77.1102 149.33 cv
76.0165 140.281 75.7753 131.189 76.4169 122.093 cv
76.9384 114.707 78.4638 107.458 79.3827 100.132 cv
79.6552 100.055 79.911 99.9311 80.1229 99.7456 cv
80.7968 108.208 81.3632 116.684 81.8749 125.159 cv
81.8905 125.471 81.912 125.781 81.9335 126.092 cv
81.9999 127.202 82.077 128.311 82.1415 129.42 cv
82.1649 129.825 82.2753 130.168 82.4364 130.46 cv
82.4706 130.669 82.497 130.878 82.535 131.086 cv
82.8925 133.063 85.4823 133.391 86.7665 132.204 cv
83.9208 134.834 83.8251 141.872 82.9442 145.536 cv
82.7704 146.262 82.9032 146.867 83.2108 147.325 cv
82.954 148.258 82.7128 149.196 82.4638 150.131 cv
82.1376 150.388 81.8866 150.776 81.7841 151.327 cv
81.3973 152.722 81.0565 154.131 80.7216 155.541 cv
80.6864 155.642 80.6473 155.738 80.6239 155.852 cv
80.329 157.253 79.6386 158.913 79.7284 160.369 cv
79.8036 161.598 80.4745 162.661 80.6014 163.888 cv
80.7059 164.893 80.4393 165.833 80.8915 166.778 cv
80.952 166.875 li
80.6727 168.2 80.4491 169.471 80.2626 170.601 cv
79.8358 173.194 83.2557 175.249 84.8329 172.902 cv
85.3153 172.786 85.7499 172.452 86.0263 171.817 cv
86.1024 171.641 86.1659 171.466 86.2313 171.291 cv
86.245 171.297 li
86.2616 171.213 li
86.4472 170.703 86.58 170.199 86.6493 169.7 cv
86.7938 169.289 86.9647 168.886 87.1718 168.494 cv
87.577 167.617 87.4735 166.802 87.0966 166.181 cv
87.4022 165.258 87.6991 164.327 87.9667 163.394 cv
87.9872 163.337 li
88.0927 163.163 88.1845 162.974 88.244 162.752 cv
88.4257 162.076 88.6054 161.399 88.785 160.722 cv
89.7382 161.564 91.245 161.729 92.2206 160.8 cv
93.2548 160.855 94.3046 160.335 94.5985 159.107 cv
95.5077 155.307 95.0839 151.406 95.0897 147.507 cv
96.1347 147.891 97.329 147.58 97.6024 146.117 cv
99.6102 135.381 li
99.6893 134.956 99.7538 134.315 99.827 133.574 cv
100.284 134.736 100.891 135.874 101.72 137 cv
105.07 141.545 107.391 146.984 110.071 152.066 cv
110.309 153.675 110.648 155.217 111.074 156.741 cv
111.291 157.762 111.507 158.783 111.712 159.807 cv
111.82 160.38 112.184 160.75 112.64 160.948 cv
114.02 162.676 117.037 162.125 117.165 159.495 cv
117.429 154.025 114.707 148.003 113.15 142.811 cv
cp
.2 .164706 .211765 rgb
f
50.454 61.562 mo
49.9618 61.9033 49.5585 62.3354 49.2108 62.8227 cv
49.1981 62.4502 49.1805 62.0786 49.1727 61.7051 cv
49.1434 60.2944 47.3202 60.1909 46.8436 61.3896 cv
45.6688 64.3467 44.5761 67.3325 43.5477 70.3379 cv
43.7665 69.3242 43.9833 68.3105 44.2167 67.2978 cv
44.5487 65.8569 42.3163 65.2441 42.0018 66.6875 cv
39.4091 78.5781 36.9794 90.6128 35.9188 102.748 cv
35.8944 103.022 35.9501 103.244 36.0526 103.423 cv
35.5526 103.184 34.9579 103.268 34.622 103.955 cv
29.4598 114.491 21.8788 125.189 19.1386 136.686 cv
18.9657 137.409 19.2977 138.034 19.8065 138.401 cv
17.7831 142.412 14.9384 146.766 15.9325 150.683 cv
16.1073 151.372 16.7694 151.82 17.4559 151.843 cv
19.2763 151.903 19.91 150.584 20.9667 149.223 cv
22.4589 147.302 24.0009 145.41 25.5643 143.536 cv
25.7313 143.443 li
27.8749 142.019 29.0458 140.624 29.912 138.193 cv
30.2177 137.336 29.869 136.696 29.288 136.362 cv
29.786 135.483 30.3231 134.624 30.9013 133.782 cv
31.7108 137.962 30.6259 142.918 30.8866 146.958 cv
30.9852 148.48 30.7509 149.073 32.162 149.668 cv
32.538 149.827 32.7616 149.226 32.4335 149.026 cv
30.2138 147.678 32.1473 138.45 32.494 136.491 cv
32.8622 134.412 33.4325 132.527 32.6962 130.491 cv
32.369 129.585 31.1845 129.105 30.4462 129.896 cv
27.3749 133.183 24.9862 136.786 23.2147 140.926 cv
23.0399 141.334 23.0223 141.788 23.118 142.211 cv
21.6884 144.281 20.1298 146.416 18.9501 147.643 cv
19.536 143.573 23.1991 138.478 24.0204 134.845 cv
24.1278 134.374 23.9276 133.902 23.5995 133.571 cv
26.0614 126.674 29.328 119.951 32.66 113.354 cv
32.4511 114.256 32.2362 115.158 32.0155 116.061 cv
31.6815 117.427 33.5702 118.272 34.3055 117.027 cv
35.1669 115.568 36.0282 114.109 36.8905 112.65 cv
37.4345 111.728 36.6591 110.87 35.8407 110.809 cv
36.2655 108.86 36.6376 106.901 36.9061 104.918 cv
36.9589 104.531 36.828 104.16 36.6034 103.87 cv
37.3046 104.111 38.3026 103.728 38.411 102.748 cv
39.743 90.6826 43.7206 79.3071 47.3475 67.8149 cv
47.412 68.3974 47.4784 68.98 47.5516 69.5625 cv
47.5263 70.9414 47.6014 72.3423 47.705 73.6709 cv
47.5468 73.7768 47.4003 73.915 47.2763 74.0884 cv
44.9735 77.2983 44.1718 81.2256 43.5458 85.1269 cv
42.3847 88.7544 41.286 92.4018 40.2958 96.0781 cv
38.618 102.312 36.2548 109.524 38.3436 115.899 cv
38.7616 117.175 40.91 117.81 41.5516 116.318 cv
42.0565 115.144 42.1718 114.941 42.0399 113.659 cv
42.0048 113.321 41.8358 113.057 41.6102 112.882 cv
41.5888 112.275 41.5946 111.666 41.6005 111.057 cv
41.9452 110.893 42.2343 110.579 42.3798 110.084 cv
45.2694 100.204 47.1591 89.9575 49.1893 79.8618 cv
50.12 80.1621 51.3134 79.7724 51.3485 78.417 cv
51.41 76.001 51.4188 73.5888 51.3886 71.1723 cv
51.3768 70.2231 51.1268 68.5913 51.1024 67.0434 cv
51.4843 65.7041 51.828 64.353 52.327 63.0019 cv
52.704 61.9824 51.3436 60.9438 50.454 61.562 cv
cp
f
45.0233 156.762 mo
45.0165 155.205 44.622 153.623 43.7587 152.362 cv
43.6386 152.186 43.5106 152.027 43.3807 151.872 cv
43.3788 151.7 43.3788 151.529 43.3749 151.356 cv
43.4315 150.308 42.8651 149.671 42.1288 149.429 cv
42.0653 148.526 42.2958 147.626 42.0263 146.702 cv
41.5087 144.923 39.6991 144.02 38.0077 144.765 cv
37.2841 145.083 36.7313 145.699 36.2509 146.341 cv
36.2284 145.667 36.1786 144.989 36.0888 144.303 cv
35.9716 143.413 34.9481 143.067 34.3993 143.845 cv
33.9257 144.518 33.9481 144.499 33.7128 145.29 cv
33.6366 145.545 33.7186 145.77 33.8661 145.942 cv
33.3837 148.103 32.9569 150.281 32.2509 152.375 cv
31.6874 154.046 33.6405 155.152 35.0028 154.491 cv
36.244 153.889 36.8807 152.647 37.5116 151.409 cv
37.3124 153.41 37.6122 155.469 37.9276 157.467 cv
38.2929 159.783 40.6718 159.806 42.1063 158.632 cv
42.1347 158.807 li
42.3925 159.957 44.121 160.175 44.6708 159.138 cv
45.1044 158.319 45.2186 157.607 45.0233 156.762 cv
cp
f
16.6698 153.006 mo
16.5546 152.823 16.4159 152.646 16.2362 152.479 cv
15.4804 151.777 14.3016 151.602 13.3905 152.107 cv
12.9569 152.349 12.6386 152.705 12.3397 153.088 cv
12.2421 153.232 12.1307 153.365 12.0175 153.497 cv
10.8153 153.551 10.288 155.054 10.8417 156.104 cv
11.2147 156.81 11.9745 157.233 12.7499 157.286 cv
12.7684 157.427 12.7763 157.57 12.8085 157.708 cv
13.1395 159.162 14.3173 160.346 15.8651 160.378 cv
18.4364 160.433 20.0057 157.374 20.3837 155.194 cv
20.7538 153.058 18.3895 151.427 16.6698 153.006 cv
cp
f
26.6737 109.596 mo
22.2216 120.379 18.1044 131.321 14.1561 142.298 cv
13.62 143.789 16.0048 144.441 16.5292 142.953 cv
20.3876 131.988 24.0975 120.94 27.4413 109.808 cv
27.5936 109.303 26.8632 109.137 26.6737 109.596 cv
cp
f
43.3514 121.326 mo
43.2499 120.347 41.9345 120.092 41.6024 121.089 cv
41.5214 121.331 41.4579 121.576 41.3837 121.819 cv
41.2401 121.668 41.079 121.525 40.8827 121.395 cv
40.5214 121.154 40.0546 121.209 39.6884 121.395 cv
38.0624 122.221 37.5038 124.916 36.9325 126.479 cv
36.7763 126.909 36.6415 127.345 36.496 127.777 cv
36.7362 124.566 37.0438 121.36 37.4188 118.158 cv
37.5653 116.914 35.6249 116.932 35.4735 118.158 cv
34.6893 124.522 34.1718 130.901 33.9188 137.308 cv
33.8729 138.469 35.661 138.708 35.9423 137.582 cv
36.4423 135.584 36.9413 133.585 37.5194 131.608 cv
37.8397 130.513 38.1669 129.416 38.5555 128.342 cv
38.8153 127.623 39.3348 126.796 39.745 125.993 cv
39.6981 126.89 39.8475 127.886 39.828 128.756 cv
39.8085 129.624 39.7557 130.488 39.702 131.353 cv
39.5692 132.74 39.453 134.132 39.3261 135.528 cv
39.0731 137.555 42.2528 137.533 42.5057 135.528 cv
43.1063 130.774 43.8485 126.102 43.3514 121.326 cv
cp
f
54.1337 88.7217 mo
55.0731 80.8779 57.622 72.497 57.3505 64.6094 cv
57.3143 63.584 55.9296 63.4277 55.6005 64.3725 cv
54.3368 68.0039 54.1024 71.9575 53.5761 75.7602 cv
52.9843 80.0356 52.1288 84.2719 51.5555 88.5488 cv
50.4481 96.8169 52.4491 104.593 52.5575 112.821 cv
52.5722 113.924 54.2352 113.921 54.2684 112.821 cv
54.5087 104.742 53.1679 96.7856 54.1337 88.7217 cv
cp
f
55.7499 40.9414 mo
55.6034 39.9707 54.286 40.3525 54.1845 41.1533 cv
53.9755 42.7993 53.9882 44.4487 53.8534 46.1015 cv
53.7645 47.2041 53.8124 51.4189 52.9276 52.1216 cv
52.4667 52.4873 50.8729 52.2373 50.1679 52.416 cv
49.0097 52.7094 47.912 53.3413 46.7479 53.5361 cv
46.5097 52.2236 44.6903 51.2304 43.6327 52.4751 cv
42.9462 53.1596 42.495 54.0854 42.495 54.977 cv
42.3436 56.1255 42.6718 57.2929 43.6932 58.209 cv
45.6981 60.0073 48.4813 59.2217 50.4208 57.8227 cv
51.0028 57.4023 51.1571 56.7763 51.035 56.2231 cv
51.1679 56.1489 li
55.9413 53.0425 56.5419 46.2041 55.7499 40.9414 cv
cp
f
47.2011 33.3222 mo
46.1805 33.0195 45.6034 32.4018 45.4696 31.4697 cv
45.3788 30.6367 44.6034 30.0976 43.8095 30.5171 cv
41.8544 31.5493 41.5321 33.9453 41.1991 35.9463 cv
40.7587 38.5923 40.1727 41.6416 40.5468 44.3012 cv
40.6122 44.7636 41.3602 44.8393 41.5536 44.4326 cv
42.4169 42.6098 42.6591 40.5039 43.1659 38.5522 cv
43.5595 37.039 43.6454 35.0576 44.3114 33.5332 cv
44.9003 34.2798 45.6376 34.8218 46.6835 35.1982 cv
47.868 35.624 48.3612 33.7563 47.2011 33.3222 cv
cp
f
33.4608 88.9809 mo
32.8768 91.8218 32.4237 94.6977 31.785 97.5259 cv
31.2216 100.021 30.288 102.402 30.2753 104.984 cv
30.2714 105.71 31.2704 105.793 31.495 105.149 cv
32.3973 102.57 32.3192 99.8442 32.8329 97.1719 cv
33.3388 94.5371 34.0555 91.9267 34.7264 89.3301 cv
34.9393 88.5068 33.6298 88.1587 33.4608 88.9809 cv
cp
f
33.7597 87.9389 mo
33.7597 88.039 li
33.7597 87.9389 li
cp
f
104.118 115.775 mo
104.269 115.393 104.376 115.002 104.459 114.605 cv
104.573 115.526 104.682 116.448 104.81 117.369 cv
104.578 116.843 104.347 116.313 104.118 115.775 cv
cp
102.16 94.0879 mo
101.958 91.4692 101.866 88.832 101.85 86.1885 cv
101.953 88.8164 102.039 91.4565 102.228 94.0708 cv
102.16 94.0879 li
cp
100.563 99.25 mo
100.414 98.5517 100.27 97.8525 100.116 97.1543 cv
100.251 97.3164 100.421 97.4365 100.608 97.5195 cv
100.596 98.0962 100.577 98.6728 100.563 99.25 cv
cp
99.7313 45.7231 mo
99.8993 46.5166 100.079 47.3037 100.27 48.0844 cv
100.241 48.3672 100.21 48.6494 100.181 48.9321 cv
100.035 47.8618 99.8905 46.791 99.7313 45.7231 cv
cp
117.5 155.727 mo
116.649 153.285 116.628 150.801 116.075 148.326 cv
115.327 144.977 113.255 142.393 112.846 138.843 cv
112.785 138.315 112.498 137.962 112.142 137.752 cv
110.451 127.8 108.775 117.764 106.258 108.024 cv
106.086 107.361 105.446 107.085 104.861 107.152 cv
104.933 105.183 105.008 103.214 105.061 101.245 cv
105.194 101.076 105.3 100.884 105.328 100.658 cv
106.282 93.1601 105.168 84.9116 104.747 77.3725 cv
104.343 70.1386 103.6 62.8813 102.168 55.7749 cv
102.122 55.5483 102.023 55.3857 101.905 55.2514 cv
101.988 54.0234 102.075 52.7949 102.157 51.5664 cv
102.936 51.6386 103.779 51.1269 103.826 50.145 cv
103.997 46.5488 103.608 42.7895 102.933 39.0786 cv
102.949 38.7773 102.971 38.477 102.987 38.1758 cv
103.007 37.8242 102.844 37.6035 102.621 37.4844 cv
102.028 34.5815 101.286 31.7261 100.504 29.0268 cv
100.346 28.4804 99.8973 28.1045 99.3807 27.9267 cv
98.2225 24.9101 98.0302 21.8852 97.0565 18.8056 cv
96.2684 16.3159 94.7792 15.4848 92.3554 15.4497 cv
90.954 15.4292 90.7821 15.208 89.5009 14.5771 cv
88.5419 14.105 87.5341 13.8769 86.4706 13.9673 cv
83.995 14.1767 82.4335 15.7632 81.5487 17.9594 cv
80.9921 19.3423 82.0643 20.5962 83.3319 20.9507 cv
83.8944 22.0937 85.3085 22.7656 86.5829 22.0195 cv
86.91 21.9692 87.2284 21.8315 87.493 21.5942 cv
88.0526 21.0918 88.5272 20.5674 88.9677 20.0185 cv
89.0145 20.0039 li
89.2284 20.1289 89.4364 20.2417 89.6307 20.3169 cv
89.8602 20.4062 90.0751 20.4609 90.285 20.5029 cv
90.3807 20.5791 90.4882 20.6386 90.6014 20.686 cv
91.1815 21.645 91.705 22.73 92.1835 23.7456 cv
92.2001 23.7846 li
92.2782 24.707 92.3475 25.5224 92.4325 25.8926 cv
92.7772 27.3979 93.2763 28.7754 94.0516 30.0171 cv
93.8143 30.0537 93.5897 30.1377 93.4501 30.3115 cv
90.828 33.5825 91.8925 38.3559 91.9618 42.2998 cv
91.9989 44.436 92.1503 46.6489 92.2723 48.8774 cv
91.9618 46.6474 91.2372 44.539 89.6708 42.7422 cv
88.9618 41.9277 87.6122 42.9834 88.1805 43.8921 cv
91.2352 48.7803 89.9247 55.706 89.7518 61.2153 cv
89.6249 65.2822 89.6083 69.3843 89.3417 73.4585 cv
89.0116 73.6147 88.7479 73.9199 88.7225 74.3999 cv
88.6747 75.3047 88.6073 76.123 88.5028 76.9087 cv
86.7909 71.2329 86.5751 65.1284 86.9266 59.1294 cv
87.1532 56.5766 87.4022 54.0776 87.5917 51.6943 cv
87.7792 49.3403 84.1737 49.3882 83.9442 51.6943 cv
83.4823 56.3413 82.8065 62.1465 83.0751 67.75 cv
83.1268 73.1025 83.7294 78.3999 85.5468 83.1592 cv
86.0868 84.5742 88.2606 84.0888 87.9725 82.646 cv
88.6434 83.2002 89.5165 82.8081 89.9227 82.1279 cv
90.3983 82.0962 90.8348 81.833 90.9315 81.2553 cv
91.9569 75.0957 92.0272 68.8095 92.1395 62.5591 cv
92.9725 63.5102 94.6815 63.5605 95.121 61.9521 cv
95.7343 59.7021 95.8905 57.3872 95.8661 55.0591 cv
95.9618 54.2397 96.0595 53.4209 96.163 52.5986 cv
96.4823 55.353 96.8173 58.1059 97.1757 60.8564 cv
97.2079 61.8818 97.2479 62.9062 97.2909 63.9306 cv
94.8173 65.7197 94.0624 68.7866 93.5751 71.7251 cv
93.2313 73.7939 92.3368 78.1372 94.5507 79.6054 cv
95.9013 80.5014 96.8895 80.4155 97.6054 79.7251 cv
97.6259 80.0547 97.6434 80.3852 97.6727 80.7129 cv
97.7196 81.2212 98.0673 81.5068 98.4491 81.5815 cv
98.8397 86.1924 99.2792 90.7998 99.7264 95.4062 cv
99.3143 93.5854 98.8944 91.7651 98.452 89.9409 cv
98.2587 89.1426 97.0487 88.7275 96.4891 89.4228 cv
95.0673 91.1904 95.0858 92.7334 95.4423 94.9365 cv
95.9227 97.9033 96.702 100.861 97.4696 103.8 cv
97.9716 108.061 98.5536 112.313 99.2323 116.588 cv
99.4276 117.819 100.845 118.437 101.99 118.177 cv
103.518 122.082 105.084 125.972 106.102 130.143 cv
106.235 130.685 106.673 130.944 107.137 130.981 cv
108.019 135.481 108.984 139.958 109.946 144.397 cv
110.169 145.425 111.247 145.743 112.101 145.479 cv
112.465 146.293 112.853 147.125 113.258 148.018 cv
114.514 150.792 113.877 154.389 116.364 156.388 cv
116.839 156.77 117.747 156.436 117.5 155.727 cv
cp
.145098 .121569 .156863 rgb
f
118.28 159.141 mo
118.193 158.873 117.968 158.714 117.721 158.657 cv
117.141 157.46 116.29 156.387 115.345 155.471 cv
114.745 154.892 113.734 155.316 113.718 156.145 cv
113.715 156.262 113.724 156.378 113.724 156.495 cv
113.561 156.464 113.395 156.467 113.231 156.495 cv
112.992 155.937 112.738 155.385 112.451 154.852 cv
112.169 154.33 111.325 154.568 111.337 155.153 cv
111.38 157.214 111.786 159.281 112.242 161.287 cv
112.504 162.439 113.837 162.398 114.427 161.688 cv
114.503 161.805 114.571 161.926 114.653 162.039 cv
114.683 162.021 li
115.267 162.889 116.926 162.708 116.81 161.455 cv
116.768 160.999 116.663 160.561 116.513 160.137 cv
116.568 160.236 116.626 160.33 116.682 160.43 cv
117.004 161.008 117.752 160.907 118.095 160.43 cv
118.387 160.024 118.435 159.615 118.28 159.141 cv
cp
f
98.5067 128.322 mo
98.4833 127.916 97.8915 127.913 97.8739 128.322 cv
97.5975 134.626 97.0897 141.378 95.955 147.832 cv
95.7264 147.865 95.5126 147.978 95.3934 148.205 cv
94.0565 150.759 93.8212 152.983 94.1532 155.867 cv
94.1337 155.955 li
93.994 155.992 93.8573 156.071 93.7382 156.208 cv
93.6786 156.278 li
93.5712 155.945 93.4677 155.61 93.3505 155.28 cv
93.1307 154.615 91.9647 154.456 91.8358 155.28 cv
91.5282 157.255 91.538 157.301 91.8573 159.306 cv
92.0253 160.361 93.7958 160.612 94.2274 159.616 cv
94.2811 159.491 94.329 159.374 94.3817 159.253 cv
94.8378 159.385 95.3544 159.222 95.4491 158.633 cv
95.6366 158.042 95.787 157.435 95.9227 156.822 cv
96.0165 156.737 96.0995 156.628 96.1659 156.482 cv
99.9764 148.062 99.0292 137.276 98.5067 128.322 cv
cp
f
90.1737 160.26 mo
91.3065 159.21 89.62 157.54 88.4833 158.57 cv
88.3671 158.676 88.2606 158.783 88.1542 158.891 cv
88.5184 156.792 88.8309 154.701 89.0936 152.662 cv
89.2186 151.692 87.8046 151.666 87.5048 152.447 cv
85.3378 158.096 83.3163 164.358 82.2362 170.321 cv
82.1786 170.64 82.2255 170.94 82.328 171.212 cv
82.3446 171.836 82.4989 172.444 82.9003 173.009 cv
83.4364 173.766 84.204 174.11 85.122 173.914 cv
87.5341 173.395 87.6005 170.428 87.412 168.182 cv
87.4413 168.118 li
88.2616 165.177 87.5136 162.726 90.1737 160.26 cv
cp
f
87.2294 118.222 mo
86.9735 116.167 87.3319 112.821 85.0565 111.938 cv
84.9598 105.41 85.4472 98.8208 84.8348 92.3218 cv
84.746 91.376 83.4413 91.3691 83.3583 92.3218 cv
82.7567 99.2324 83.4081 106.236 83.2684 113.166 cv
83.2567 113.759 83.8544 114.184 84.412 114.037 cv
84.285 114.07 87.0585 134.089 87.2723 135.83 cv
87.4413 137.208 89.6298 137.217 89.452 135.83 cv
88.7001 129.962 87.9598 124.092 87.2294 118.222 cv
cp
f
88.9413 23.6333 mo
88.7147 22.958 87.9266 22.9209 87.5272 23.4487 cv
85.2304 26.4873 85.1347 31.6313 84.7518 35.3032 cv
84.5692 37.0532 87.4296 37.4155 87.8134 35.7173 cv
88.6122 32.1806 90.1366 27.1889 88.9413 23.6333 cv
cp
f
77.4755 22.143 mo
77.2909 22.4243 77.1054 22.6904 76.9149 22.9428 cv
76.4813 22.5581 75.7001 22.626 75.2528 22.9887 cv
74.2313 23.8178 73.8886 25.0512 73.7821 26.3169 cv
73.7167 27.0913 74.1434 27.5791 74.7138 27.7998 cv
74.3446 28.6938 73.997 29.5991 73.705 30.5327 cv
73.2645 31.9394 75.4218 32.5078 75.8973 31.1372 cv
76.4706 29.4824 77.1727 27.8437 78.0311 26.2998 cv
78.8807 25.4136 79.5731 24.4121 79.9872 23.2021 cv
80.494 21.7231 78.2206 20.7881 77.4755 22.143 cv
cp
f
78.9833 8.88767 mo
78.2782 8.22654 77.1542 7.99265 76.204 8.75437 cv
76.1317 8.20213 75.8641 7.72703 75.4735 7.374 cv
75.3046 6.85789 74.9677 6.38523 74.5409 6.01267 cv
74.3671 5.54246 74.0858 5.09617 73.662 4.6865 cv
71.8798 2.96726 67.8856 2.98826 65.5722 2.90916 cv
62.1552 2.79197 59.1815 3.60447 56.1649 5.16697 cv
53.705 6.44138 55.0175 10.0068 57.5057 10.1181 cv
61.0956 10.2783 64.6151 10.0498 68.1415 9.58885 cv
67.9013 9.87156 67.6386 10.1543 67.368 10.435 cv
65.9227 11.3779 64.6307 12.5288 63.4638 13.9941 cv
61.9872 15.8481 63.202 18.1479 64.9432 18.4931 cv
64.8075 18.6997 64.6796 18.9077 64.5409 19.1137 cv
63.2919 20.9736 64.8847 22.7934 66.6903 23.0639 cv
66.0438 23.8559 65.3358 24.73 64.8983 25.643 cv
63.5448 26.6347 62.8388 27.7182 62.1757 29.4223 cv
61.8485 30.2612 62.1473 31.0781 62.7245 31.6523 cv
62.4735 33.124 62.7206 34.4741 64.2216 35.2407 cv
65.3505 35.8178 66.8925 35.124 66.8485 33.7329 cv
66.8212 32.855 67.2772 31.6098 67.785 30.4145 cv
69.2997 28.9424 70.7352 27.0342 71.6298 25.1455 cv
73.5858 22.6528 75.4091 20.0459 76.9491 17.2929 cv
78.4794 16.2856 80.0214 15.3047 81.6151 14.3847 cv
83.3759 13.3686 84.1288 12.2387 84.2538 10.1528 cv
84.4374 7.0864 80.1307 6.63816 78.9833 8.88767 cv
cp
f
56.5487 66.9345 mo
54.1464 70.7158 51.0233 74.729 50.1639 79.208 cv
50.0624 79.7368 50.7372 80.0498 51.0419 79.5781 cv
53.536 75.7256 54.7684 71.2466 57.2977 67.3725 cv
57.6034 66.9043 56.8485 66.4638 56.5487 66.9345 cv
cp
f
50.4647 84.6357 mo
50.4032 83.8476 49.3075 83.6455 49.0604 84.4458 cv
48.788 85.3291 48.5477 86.2583 48.328 87.2099 cv
47.6239 87.6406 47.4755 88.6528 47.8866 89.3281 cv
46.8993 94.7026 46.704 100.704 47.3954 105.668 cv
47.4882 106.332 48.5126 106.255 48.661 105.668 cv
50.2889 99.2612 50.9794 91.1987 50.4647 84.6357 cv
cp
f
49.0927 118.295 mo
49.204 117.633 48.1972 117.344 48.0761 118.014 cv
47.0458 123.717 45.3212 129.354 44.5389 135.089 cv
44.3348 136.58 44.3104 137.967 44.495 139.478 cv
44.8856 142.697 45.0634 145.73 45.2479 148.961 cv
45.2802 149.521 46.0673 149.816 46.3622 149.263 cv
48.4227 145.405 47.119 141.614 46.8446 137.485 cv
46.4335 131.317 48.077 124.352 49.0927 118.295 cv
cp
f
45.5702 152.127 mo
45.5595 151.994 45.5468 151.845 45.5292 151.653 cv
45.4393 150.686 44.0018 150.023 43.4901 151.102 cv
43.1337 151.854 42.7802 152.609 42.4237 153.362 cv
41.9833 151.571 41.5507 149.777 41.1483 147.975 cv
40.8944 146.84 39.5829 146.498 38.6532 146.96 cv
37.0429 147.76 36.1356 149.841 35.4618 151.883 cv
34.9852 151.86 34.5145 152.022 34.2333 152.406 cv
33.9276 150.289 33.6014 148.174 33.2694 146.063 cv
32.9179 143.826 32.9071 141.121 32.0526 139.019 cv
31.8182 138.443 30.1581 136.233 30.1815 135.968 cv
30.3358 134.258 27.9286 134.213 27.3964 135.591 cv
26.327 138.361 25.1659 141.099 23.8954 143.784 cv
23.1981 143.435 22.1522 143.597 21.7792 144.544 cv
20.5341 147.707 19.1034 150.761 17.5438 153.777 cv
17.4452 153.967 17.3436 154.155 17.244 154.345 cv
17.8583 152.789 18.4911 151.236 19.1503 149.667 cv
19.7255 148.296 17.6249 147.628 16.8798 148.71 cv
14.036 152.837 12.3378 157.779 11.4413 162.688 cv
11.1766 164.133 12.7118 165.015 13.8368 164.083 cv
14.5477 163.495 15.0067 162.918 15.3768 162.231 cv
17.2372 161.163 18.0858 158.471 19.0546 156.691 cv
19.4325 155.997 19.7958 155.295 20.1591 154.593 cv
20.702 154.728 21.3065 154.563 21.6571 153.946 cv
24.2655 149.345 26.6317 144.7 28.6874 139.865 cv
29.2665 141.169 29.6542 142.316 29.9188 144.177 cv
30.6884 149.574 31.3954 154.985 32.4286 160.34 cv
32.6962 161.886 35.3573 161.547 35.1923 159.966 cv
35.1356 159.42 35.0663 158.875 35.0038 158.331 cv
35.0897 157.971 35.244 157.564 35.4335 157.139 cv
36.1473 157.367 37.037 157.156 37.3554 156.444 cv
37.7235 155.623 38.2382 153.794 38.8583 152.263 cv
39.7479 155.393 40.5839 158.538 41.4227 161.684 cv
41.5389 162.199 41.6727 162.718 41.8397 163.248 cv
42.4169 165.08 45.2079 164.329 44.7274 162.452 cv
44.5097 161.598 44.2909 160.746 44.0712 159.893 cv
43.8632 158.839 43.7411 157.785 43.7333 156.697 cv
43.9989 155.984 44.2616 155.27 44.5243 154.556 cv
44.7889 154.513 45.035 154.368 45.1923 154.058 cv
45.3417 153.762 45.4911 153.466 45.6405 153.17 cv
45.8388 152.777 45.7645 152.409 45.5702 152.127 cv
cp
f
20.9266 144.105 mo
20.9266 144.206 li
20.9266 144.105 li
cp
f
36.8788 100.925 mo
32.5956 108.121 29.9227 116.802 27.0643 124.636 cv
26.7177 125.586 28.2372 125.999 28.579 125.053 cv
31.4432 117.123 35.3768 109.363 37.7997 101.313 cv
37.9657 100.761 37.1688 100.438 36.8788 100.925 cv
cp
f
44.455 77.2627 mo
44.3309 76.563 43.3036 76.3232 42.8495 76.8388 cv
41.6317 78.2182 41.327 79.8506 41.0009 81.6269 cv
40.8514 82.4438 40.6473 83.2934 40.6259 84.1269 cv
40.5985 85.1928 40.8954 86.2319 40.8583 87.3071 cv
40.83 88.1504 42.1903 88.3637 42.3544 87.5097 cv
42.5409 86.5449 43.0155 85.7593 43.3348 84.8491 cv
43.6454 83.9678 43.7352 82.979 43.9413 82.0688 cv
44.3124 80.4228 44.7557 78.9497 44.455 77.2627 cv
cp
f
80.9686 156.183 mo
80.5516 155.532 79.8573 155.519 79.3807 155.876 cv
78.9559 154.372 78.4315 152.895 77.6874 151.477 cv
77.3153 150.765 76.2938 151.275 76.4452 152 cv
76.9559 154.444 77.7763 156.822 78.5204 159.217 cv
78.5136 159.824 78.5458 159.995 78.7167 160.698 cv
78.7889 160.995 78.9432 161.187 79.1337 161.295 cv
79.2841 161.84 79.4257 162.386 79.5526 162.936 cv
79.4227 164.421 79.4159 165.887 80.2509 167.157 cv
80.7069 167.85 81.8007 167.42 81.6005 166.588 cv
80.9764 163.295 82.8739 159.16 80.9686 156.183 cv
cp
f
70.9638 147.129 mo
70.9139 147.01 70.8124 146.916 70.6893 146.857 cv
70.3026 146.594 69.7626 146.576 69.2831 146.979 cv
67.4149 148.553 66.0907 150.552 65.0624 152.731 cv
62.122 156.718 59.827 161.181 58.9188 166.051 cv
58.7538 166.933 59.6688 167.86 60.5409 167.298 cv
63.1757 165.602 64.5946 161.877 66.1464 159.261 cv
68.078 156.005 70.6386 151.873 71.1942 148.092 cv
71.2509 147.711 71.1483 147.381 70.9638 147.129 cv
cp
f
78.5292 90.124 mo
73.5829 101.296 72.453 114.749 72.2616 126.82 cv
72.243 128 74.0438 127.993 74.0897 126.82 cv
74.3407 120.433 75.2343 114.171 76.1386 107.849 cv
76.9745 102.005 78.9071 96.5039 80.0067 90.747 cv
80.1659 89.915 78.9257 89.2285 78.5292 90.124 cv
cp
f
70.5712 96.7246 mo
67.7567 104.614 66.4872 113.2 65.2167 121.457 cv
65.0692 122.419 66.5458 122.827 66.6864 121.862 cv
67.9022 113.481 69.994 105.269 71.2489 96.9116 cv
71.3153 96.4697 70.7264 96.29 70.5712 96.7246 cv
cp
f
64.9843 91.0351 mo
64.0516 94.6367 63.5497 98.2915 63.2225 101.99 cv
63.1229 103.118 64.8749 103.106 64.9804 101.99 cv
65.3202 98.3823 65.6903 94.7744 65.8593 91.1538 cv
65.8827 90.6494 65.1102 90.5522 64.9843 91.0351 cv
cp
f
34.9794 65.2129 mo
34.6278 66.6289 34.2694 68.0425 33.8798 69.4458 cv
33.6513 70.1826 33.4247 70.9199 33.1962 71.6562 cv
33.9872 67.7905 34.6786 63.9057 34.9891 60.0073 cv
35.0175 61.749 35.0204 63.4853 34.9794 65.2129 cv
cp
31.3944 88.2329 mo
30.4481 91.7007 29.1893 95.0757 27.7098 98.3564 cv
28.4491 92.5718 30.1346 86.6968 31.2167 81.1582 cv
31.6151 79.1206 32.0546 77.0752 32.4911 75.0249 cv
32.6815 75.6714 33.2167 76.1382 33.8641 76.355 cv
33.1747 79.8501 32.1102 83.268 30.4774 86.5688 cv
30.0448 87.4424 30.6757 88.1772 31.3944 88.2329 cv
cp
38.994 56.9648 mo
39.9179 51.8955 42.0731 46.8379 40.5858 41.7597 cv
40.3085 40.8105 38.8729 40.9922 38.8602 41.9936 cv
38.8095 45.9077 37.7597 49.5986 36.9208 53.3379 cv
36.8915 48.0136 36.8563 42.6767 37.2401 37.3613 cv
37.3007 36.9477 37.3612 36.5342 37.41 36.1196 cv
38.2509 36.3774 39.3524 35.7368 39.0341 34.6357 cv
38.7587 33.6826 38.4843 32.7295 38.2089 31.7763 cv
37.9286 30.8056 36.3466 30.4233 35.872 31.4712 cv
35.8134 31.6001 35.7645 31.7265 35.7089 31.8545 cv
35.5204 31.9951 35.372 32.1933 35.328 32.4858 cv
35.3095 32.6103 35.2948 32.7353 35.2772 32.8603 cv
35.2606 32.9756 li
34.4872 35.0771 34.1366 37.1084 34.1825 39.4853 cv
34.1903 39.8877 34.3778 40.2016 34.6415 40.4277 cv
34.4374 46.5757 34.8397 52.8554 34.9706 59.0825 cv
34.7128 58.5566 33.7811 58.5854 33.5692 59.2344 cv
31.8358 64.5439 30.8134 70.1494 29.8417 75.7256 cv
29.3973 75.6406 28.9296 75.8208 28.8221 76.3969 cv
28.3221 79.0635 27.8221 81.7304 27.3221 84.3969 cv
27.2118 84.9829 27.5868 85.4004 28.0302 85.5498 cv
27.8632 86.3642 27.6913 87.1787 27.5194 87.9941 cv
27.3671 88.0742 27.2499 88.2246 27.2108 88.459 cv
26.9735 89.9131 26.7479 91.3696 26.5165 92.8247 cv
25.8856 95.978 25.3378 99.145 25.0429 102.33 cv
24.7802 104.076 24.5096 105.821 24.2567 107.568 cv
23.7059 111.37 22.8153 115.338 22.9139 119.224 cv
21.9013 121.882 20.9052 124.547 19.9452 127.228 cv
19.497 128.48 21.4559 128.988 21.9218 127.773 cv
22.6102 125.976 23.3427 124.054 24.1532 122.113 cv
24.3466 122.023 24.5106 121.874 24.5751 121.664 cv
24.7636 121.045 24.9618 120.429 25.1552 119.811 cv
27.1014 115.514 29.5155 111.32 32.8065 108.342 cv
31.8583 114.905 27.7538 121.127 29.2782 127.89 cv
29.4471 128.638 30.745 128.706 30.8602 127.89 cv
31.8729 120.736 33.8671 113.834 34.4657 106.624 cv
34.5136 106.05 33.8055 105.72 33.3514 105.985 cv
30.827 107.456 28.7606 109.721 27.0067 112.342 cv
26.5673 111.957 25.7157 112.007 25.4296 112.732 cv
25.1161 113.527 24.8143 114.326 24.5038 115.123 cv
24.8104 111.916 25.5145 108.66 26.0331 105.577 cv
26.4686 105.593 26.9198 105.422 27.1796 105.022 cv
31.2958 98.6963 33.4706 92.0571 34.6962 84.6333 cv
34.7831 84.1025 34.4608 83.5327 34.0175 83.2485 cv
34.7167 80.9482 35.2518 78.6323 35.6581 76.3037 cv
35.868 76.2158 36.0673 76.0986 36.245 75.9443 cv
36.3378 76.6616 36.4432 77.3803 36.5868 78.1054 cv
36.9432 79.8965 39.8934 79.5053 39.787 77.6723 cv
39.4345 71.5913 40.5614 65.6889 41.9227 59.7905 cv
42.3934 57.75 40.5204 56.5678 38.994 56.9648 cv
cp
.403922 .337255 .419608 rgb
f
39.6923 119.563 mo
39.87 117.823 39.8886 116.056 39.7655 114.334 cv
39.703 113.451 38.3964 112.893 37.9403 113.84 cv
37.5468 114.656 37.3436 115.416 37.2831 116.322 cv
37.2509 116.807 37.5223 117.106 37.8729 117.223 cv
37.8319 118.687 37.6845 120.136 37.4374 121.626 cv
37.2352 122.845 39.1014 123.369 39.3036 122.141 cv
39.4325 121.358 39.7733 120.647 40.0692 119.915 cv
40.1688 119.668 39.9042 119.512 39.6923 119.563 cv
cp
f
40.0927 129.989 mo
39.9823 132.765 39.8309 135.543 39.8065 138.322 cv
39.8036 138.687 40.3436 138.68 40.369 138.322 cv
40.5663 135.549 40.6386 132.767 40.7489 129.989 cv
40.7665 129.566 40.1102 129.567 40.0927 129.989 cv
cp
f
39.4227 127.706 mo
39.2567 126.573 37.5057 126.694 37.2518 127.706 cv
36.5936 130.315 36.1854 132.982 35.9071 135.656 cv
35.7479 137.178 38.162 137.186 38.2977 135.656 cv
38.4569 133.853 38.7186 132.076 39.0389 130.303 cv
39.5438 129.553 39.5702 128.71 39.4227 127.706 cv
cp
f
16.4901 136.933 mo
16.4091 137.018 li
13.912 140.677 13.0604 145.356 11.6229 149.48 cv
11.2421 150.574 12.6981 151.229 13.4511 150.544 cv
14.9179 149.21 15.3251 146.961 15.9667 145.157 cv
16.8602 142.642 17.7548 140.126 18.6483 137.61 cv
19.1298 136.256 17.0341 135.665 16.4901 136.933 cv
cp
f
61.7987 109.666 mo
61.8456 105.877 62.1386 102.156 62.6141 98.4419 cv
62.7255 98.188 62.8095 97.9082 62.8368 97.5884 cv
62.9188 96.6411 63.0243 95.6992 63.1356 94.7593 cv
63.3339 93.4902 63.5458 92.2187 63.7763 90.9428 cv
63.7958 90.9082 li
63.6268 91.9243 63.4657 92.9428 63.3134 93.9634 cv
63.0673 95.603 64.6864 96.6191 65.8729 96.3252 cv
64.6337 100.709 63.5028 105.403 61.7987 109.666 cv
cp
63.3729 139.16 mo
63.5555 137.419 63.6561 134.435 64.3944 132.108 cv
64.4725 132.717 64.5223 133.336 64.5175 133.994 cv
64.5067 135.163 65.7001 135.688 66.5888 135.366 cv
65.8065 137.835 64.7518 140.258 63.9081 142.497 cv
63.6727 143.124 63.4569 143.748 63.2518 144.371 cv
63.2001 144.165 63.1405 143.961 63.0819 143.756 cv
63.1288 142.224 63.2128 140.694 63.3729 139.16 cv
cp
71.6024 77.2163 mo
71.9755 74.5298 72.4686 71.6211 72.5555 71.0058 cv
72.91 68.4775 69.3876 67.3198 68.6141 69.9194 cv
66.9833 75.4013 65.661 80.9399 64.5897 86.5386 cv
64.5712 86.3374 64.4872 86.1636 64.3651 86.0185 cv
64.5057 85.0888 64.6473 84.1601 64.7802 83.2265 cv
65.1688 81.6172 63.8016 80.6069 62.5507 80.7104 cv
62.4286 79.1177 62.2587 77.5298 61.995 75.9511 cv
61.8456 75.062 60.7147 74.9819 60.1503 75.4643 cv
59.9804 75.6094 59.8231 75.7544 59.6688 75.8994 cv
60.285 72.5351 61.3788 69.2143 60.7098 65.9931 cv
60.6532 65.7182 60.288 65.6513 60.1034 65.8325 cv
56.7001 69.1709 56.538 75.8745 56.9667 80.3603 cv
57.0565 81.3022 57.9833 81.7153 58.6639 81.3921 cv
57.8612 86.7221 58.0009 92.2134 58.0829 97.5884 cv
58.1014 98.7978 58.7909 99.5146 59.6376 99.7695 cv
59.5526 100.698 59.4911 101.627 59.4384 102.558 cv
58.4657 102.119 57.0429 102.592 57.0253 103.99 cv
56.9276 111.917 56.829 119.845 56.7304 127.772 cv
56.6864 131.385 55.8554 136.128 56.6229 139.663 cv
56.9149 141.004 57.0116 141.625 58.287 142.276 cv
58.6903 142.481 59.1552 142.513 59.5751 142.402 cv
59.5702 143.744 59.5673 144.879 59.5731 145.659 cv
58.2245 149.009 58.1649 153.54 58.3456 156.495 cv
58.4345 157.937 60.5233 157.948 60.5956 156.495 cv
60.7333 153.752 60.7489 151.006 60.9823 148.271 cv
61.1083 148.297 61.2352 148.314 61.3622 148.315 cv
61.3632 148.522 li
61.4003 150.385 61.4472 152.242 61.4296 154.106 cv
61.3622 155.789 64.0595 155.8 64.0507 154.106 cv
63.8329 149.26 66.0214 144.729 67.7294 140.296 cv
69.2665 136.307 69.5809 132.946 69.2157 128.713 cv
69.162 128.093 68.3934 127.648 67.9071 128.171 cv
67.4901 128.618 67.1239 129.048 66.7929 129.479 cv
66.6102 128.901 66.4013 128.322 66.1503 127.728 cv
65.7597 126.803 64.5165 126.919 63.8973 127.438 cv
63.2821 127.954 62.7714 128.612 62.3319 129.36 cv
62.3114 128.976 62.288 128.591 62.2675 128.207 cv
62.1581 126.132 62.4774 123.166 60.2216 122.354 cv
60.2255 121.827 li
60.2294 121.012 60.2343 120.198 60.2391 119.383 cv
60.3934 118.187 60.5458 116.99 60.6854 115.791 cv
61.078 115.838 61.4774 115.69 61.7118 115.234 cv
64.9921 108.867 66.3222 101.057 68.3573 94.1987 cv
68.5692 93.4848 67.9305 93.0478 67.3612 93.1186 cv
67.8368 90.4761 68.3583 87.8447 68.9335 85.2261 cv
69.1005 85.312 69.2743 85.3696 69.4511 85.4072 cv
69.3602 85.8642 69.2763 86.3237 69.2147 86.79 cv
69.0868 87.7719 70.5614 88.3139 71.1757 87.6025 cv
73.4335 84.9839 73.7196 81.98 73.8622 78.5937 cv
73.911 77.416 72.5575 76.7451 71.6024 77.2163 cv
cp
f
60.5048 55.2099 mo
60.3602 54.8183 59.8309 54.8027 59.6913 55.2099 cv
58.787 57.8515 59.1561 61.0508 58.8817 63.8198 cv
58.7723 64.9136 60.4882 64.9092 60.5927 63.8198 cv
60.8514 61.1167 61.4657 57.8115 60.5048 55.2099 cv
cp
f
76.6698 39.0527 mo
75.6483 38.751 74.8065 39.3261 74.2636 40.1372 cv
74.2665 40.0327 74.2636 39.9282 74.2665 39.8237 cv
74.3065 38.5454 72.2089 38.206 71.9872 39.5151 cv
71.5429 42.1416 71.3309 44.7588 71.5018 47.4204 cv
71.6034 49.001 73.6415 49.6479 74.5165 48.2368 cv
74.6268 48.0591 74.7206 47.8755 74.8212 47.6943 cv
75.035 47.8481 75.3368 47.8574 75.4755 47.5537 cv
75.9852 46.4326 76.2704 45.2412 76.5077 44.0346 cv
76.7294 42.9101 76.6288 41.25 77.1503 40.2314 cv
77.3876 39.7676 77.1874 39.2051 76.6698 39.0527 cv
cp
f
80.9188 134.134 mo
80.9022 133.264 80.8876 132.393 80.8798 131.523 cv
80.8798 131.454 li
80.8622 129.256 80.8739 127.058 80.9354 124.857 cv
81.0526 120.622 81.5848 116.292 80.5341 112.147 cv
80.368 111.493 79.4628 111.554 79.2684 112.147 cv
76.6347 120.198 78.7098 131.012 79.3485 139.315 cv
79.4315 140.4 81.0995 140.428 81.0595 139.315 cv
81.0048 137.822 80.9638 136.329 80.9315 134.836 cv
81.203 134.703 81.2001 134.257 80.9188 134.134 cv
cp
f
80.4266 141.439 mo
80.4266 141.539 li
80.4266 141.439 li
cp
f
77.997 69.2544 mo
77.9872 68.1411 76.6981 67.7114 75.953 68.2441 cv
75.8046 68.3149 75.6727 68.4184 75.5839 68.5581 cv
74.7206 69.9101 74.4999 71.4028 74.2128 72.9609 cv
73.9296 74.498 73.6679 75.914 73.9569 77.4678 cv
74.1796 78.6636 76.2391 78.7104 76.4208 77.4678 cv
76.4491 77.2739 76.4833 77.0815 76.5136 76.8882 cv
77.1952 77.1035 78.0595 76.7553 78.0516 75.8232 cv
78.0331 73.6338 78.0155 71.4438 77.997 69.2544 cv
cp
f
27.2792 70.6006 mo
26.4999 75.313 25.6376 80.0014 24.535 84.6504 cv
23.5741 88.7085 22.0634 92.8071 22.0975 97.0034 cv
22.1014 97.5405 22.8524 97.7646 23.1239 97.2812 cv
25.1786 93.6137 25.6952 89.2729 26.453 85.1787 cv
27.3231 80.4765 28.1454 75.7651 28.8612 71.0366 cv
29.0175 70.0088 27.453 69.5547 27.2792 70.6006 cv
cp
f
43.537 29.145 mo
43.1805 28.1465 43.5165 26.8315 43.5595 25.7959 cv
43.6141 24.4721 41.5858 24.2094 41.2587 25.4844 cv
40.7841 27.3354 40.5966 29.248 40.7372 31.1543 cv
40.8192 32.2705 42.4784 32.2993 42.495 31.1543 cv
42.4979 30.9433 42.5204 30.7392 42.5331 30.5317 cv
43.2147 30.4746 43.8319 29.9712 43.537 29.145 cv
cp
f
57.205 34.5146 mo
55.3261 29.1284 52.619 24.3218 49.4823 19.5693 cv
48.8378 18.5932 47.3192 19.4585 47.9032 20.4917 cv
48.1425 20.914 48.3651 21.3452 48.5985 21.771 cv
48.5272 21.8725 48.4706 21.9922 48.4462 22.1484 cv
47.6893 27.1484 52.7372 31.6035 55.5116 35.2285 cv
56.0888 35.9829 57.5839 35.6025 57.205 34.5146 cv
cp
f
50.3954 46.7719 mo
50.0223 45.4829 48.9716 44.4741 47.7001 44.0869 cv
45.9696 43.5591 43.8768 44.6406 43.4794 46.4502 cv
43.286 47.3305 43.3622 48.2363 43.827 49.0215 cv
44.1102 49.5014 44.4823 49.8764 44.9618 50.1616 cv
45.0175 50.1894 li
45.4843 50.8525 46.205 51.3091 47.037 51.4209 cv
48.2733 51.5869 49.2655 51.0019 49.9716 50.0151 cv
50.6171 49.1108 50.6952 47.811 50.3954 46.7719 cv
cp
.984314 .831373 .329412 rgb
f
70.4481 45.5073 mo
70.0204 43.937 68.7235 42.8681 67.1014 42.7954 cv
65.6141 42.7285 64.3446 43.9223 63.6473 45.1216 cv
63.0731 46.1089 62.9198 47.2978 63.2821 48.3335 cv
63.2782 48.3276 li
63.2958 48.4013 li
63.3505 49.2016 63.621 49.9844 64.1132 50.6216 cv
65.0223 51.7988 66.5331 52.2988 67.9784 51.9448 cv
69.3573 51.6074 70.3153 50.3095 70.5077 48.9541 cv
70.6679 47.8232 70.7538 46.6289 70.4481 45.5073 cv
cp
f
67.3612 44.3242 mo
68.4286 45.3711 68.7997 45.645 68.4745 45.146 cv
68.3241 44.9262 68.1591 44.7178 67.9813 44.52 cv
67.5907 45.999 67.2001 47.478 66.8095 48.9565 cv
67.5106 48.8174 68.2157 48.3159 68.5282 47.6694 cv
68.0448 48.041 67.5614 48.4126 67.078 48.7837 cv
67.163 48.7505 li
67.9579 48.4331 68.5829 47.9585 68.8222 47.0913 cv
69.0272 46.3467 68.8534 45.2895 68.2108 44.7803 cv
68.1483 44.7304 li
68.3563 45.0874 68.5643 45.4438 68.7723 45.8008 cv
68.6522 45.0791 68.0761 44.4409 67.4442 44.105 cv
66.2675 43.4795 64.8436 43.7217 64.0194 44.7886 cv
63.2831 45.7417 63.1962 47.4428 64.2274 48.2739 cv
64.8388 48.7676 65.3739 49.1123 66.1913 49.125 cv
66.6815 49.1323 67.1796 49.0278 67.6024 48.7705 cv
68.2714 48.3642 68.662 47.8193 68.9325 47.0918 cv
69.3593 45.9463 68.4511 44.6318 67.3612 44.3242 cv
cp
1 .917647 .690196 rgb
f
44.6122 45.0307 mo
45.537 45.0293 46.4628 45.0278 47.3886 45.0263 cv
46.8036 46.4389 46.2186 47.8515 45.6327 49.2636 cv
45.952 49.2759 46.3182 49.2417 46.6141 49.1177 cv
47.1278 48.9018 47.5409 48.6914 47.8934 48.2353 cv
48.2138 47.8198 48.4462 47.2827 48.4218 46.7431 cv
48.3768 45.7387 47.7001 44.5469 46.6141 44.3686 cv
46.0282 44.2719 45.5468 44.228 44.9735 44.3882 cv
44.0194 44.6548 43.3251 45.4824 43.1952 46.4516 cv
43.0682 47.3955 43.5048 48.4585 44.3807 48.9248 cv
45.7889 49.6753 47.496 49.3022 48.33 47.8994 cv
48.9354 46.8813 48.6376 45.5542 47.7206 44.8457 cv
46.7567 44.1011 45.5048 44.2392 44.6122 45.0307 cv
cp
f
68.3388 48.8091 mo
67.8124 50.0303 66.7997 51.5542 65.4013 50.3315 cv
64.2245 49.3032 64.2274 46.997 65.1542 45.8105 cv
65.5194 45.3432 65.6395 44.8315 65.6005 44.3452 cv
66.4335 44.2153 67.5936 44.3349 68.0751 44.5752 cv
69.662 45.3672 68.8827 47.5483 68.3388 48.8091 cv
cp
61.9774 41.81 mo
61.2284 42.5102 61.2313 43.375 61.6171 44.0566 cv
60.078 46.8247 60.0429 50.5171 62.3368 52.9507 cv
64.9569 55.7295 69.0751 55.1577 71.1249 52.0664 cv
72.9374 49.3315 74.0624 44.8115 71.5145 42.1772 cv
69.2763 39.8623 64.3417 39.5996 61.9774 41.81 cv
cp
.156863 .113725 .113725 rgb
f
114.918 161.641 mo
114.185 161.608 113.549 161.751 112.991 162.007 cv
108.728 153.174 106.504 143.414 100.586 135.421 cv
99.5663 134.044 97.4989 134.165 96.9305 135.898 cv
94.3739 143.695 93.5077 151.698 94.2977 159.702 cv
93.6991 159.411 93.0653 159.272 92.3964 159.378 cv
88.9706 159.922 87.7782 166.485 86.3788 168.92 cv
85.5477 170.365 83.1639 175.287 81.6395 174.873 cv
80.8612 174.662 79.4208 166.69 79.2167 165.875 cv
77.705 159.847 76.4247 153.769 75.3124 147.655 cv
75.0282 146.094 72.9852 145.833 71.9696 146.772 cv
69.2655 149.272 68.1815 152.398 66.7792 155.698 cv
64.9423 160.021 62.1386 163.663 59.0858 167.144 cv
57.162 157.635 57.8973 147.675 53.3134 138.806 cv
53.0761 138.347 52.702 138.08 52.286 137.945 cv
52.2391 136.974 52.2264 136.023 52.4022 135.159 cv
53.243 131.044 53.2694 127.188 53.6552 122.976 cv
53.9432 119.84 53.8163 117.706 52.5223 114.833 cv
51.5702 112.718 50.5604 111.089 50.5985 108.654 cv
50.618 107.422 50.7821 106.146 50.9882 104.869 cv
51.413 104.654 51.747 104.248 51.868 103.612 cv
52.8534 98.4414 52.9247 93.4209 53.2548 88.1933 cv
53.6054 82.6562 55.9511 77.7729 57.578 72.5556 cv
60.5858 62.9116 55.6132 52.6899 60.5048 43.4922 cv
60.5819 43.3462 60.6395 43.2007 60.6805 43.0576 cv
67.0819 30.876 77.372 21.1318 87.8417 12.3603 cv
90.8847 14.458 93.5702 16.9043 95.5321 19.6616 cv
101.105 27.4956 101.359 38.6772 101.991 47.896 cv
103.318 67.2446 100.695 86.8408 104.509 105.954 cv
108.248 124.697 112.476 143.355 116.538 162.035 cv
116.053 161.814 115.521 161.668 114.918 161.641 cv
cp
49.452 124.429 mo
49.2274 127.21 49.6083 129.952 48.994 132.702 cv
48.6727 134.141 48.0634 135.418 47.954 136.925 cv
47.913 137.48 48.2792 139.675 48.3026 140.852 cv
48.1005 141.073 47.9393 141.358 47.8554 141.729 cv
47.8134 141.918 li
47.6659 142.573 47.829 143.353 48.3065 143.851 cv
45.7802 152.389 li
45.3407 153.874 44.1073 160.369 42.9403 162.92 cv
42.2382 161.657 41.6171 160.076 40.9511 159.243 cv
39.8153 157.824 38.4891 156.772 37.0116 155.74 cv
36.3534 155.281 35.1063 155.409 34.5878 156.053 cv
34.0253 156.75 33.4989 157.456 33.0048 158.174 cv
32.5907 153.006 31.7616 147.897 30.495 142.822 cv
30.0878 141.192 27.6415 140.822 26.8388 142.344 cv
24.869 146.083 22.7577 149.736 20.41 153.251 cv
18.7821 155.689 16.0858 161.225 13.0009 162.958 cv
12.9071 161.919 12.8134 160.88 12.7196 159.841 cv
12.5722 158.203 10.5956 157.092 9.30555 158.427 cv
7.89442 159.888 6.42762 161.231 4.88856 162.493 cv
5.94324 158.601 7.65125 154.785 8.98719 151.091 cv
14.6747 135.359 li
14.9598 134.572 14.7401 133.934 14.2899 133.508 cv
16.5741 127.907 18.8085 122.286 20.9677 116.634 cv
21.4891 115.269 19.8759 113.647 18.5077 114.174 cv
17.9725 114.38 li
21.6542 102.718 25.1708 91.3218 26.7763 79.0967 cv
28.4823 66.1089 32.8339 53.5761 33.3895 40.4424 cv
33.8905 40.1328 34.2509 39.5981 34.2509 38.8281 cv
34.2538 32.7671 35.1249 26.0654 37.5858 20.2041 cv
41.8886 22.1157 46.3173 28.5669 48.702 31.9951 cv
51.7704 36.4053 53.6669 41.3257 55.1395 46.4643 cv
55.1776 46.542 li
54.6571 48.6728 54.3759 50.8706 54.1737 53.0801 cv
53.6434 58.855 55.7235 64.1367 54.1903 69.9248 cv
52.9188 74.7246 50.618 79.1968 49.7069 84.103 cv
48.8514 88.7075 48.9862 93.3969 48.5966 98.0635 cv
48.246 98.292 47.9804 98.6733 47.8983 99.25 cv
47.4003 102.78 46.4042 106.593 46.538 110.188 cv
46.6591 113.424 48.7977 115.226 49.6786 118.184 cv
50.3007 120.272 49.619 122.359 49.452 124.429 cv
cp
44.0643 10.7217 mo
51.1229 4.28562 61.4139 2.83103 70.4804 4.85154 cv
74.9003 5.8364 79.8085 7.64256 84.286 10.146 cv
73.952 18.8584 63.8475 28.605 57.4481 40.6098 cv
55.8466 36.1992 53.7772 32.0444 50.868 28.2285 cv
47.9462 24.3969 44.0956 18.768 39.3749 16.5971 cv
40.6434 14.4223 42.1893 12.4311 44.0643 10.7217 cv
cp
121.591 166.46 mo
117.558 147.722 113.51 128.987 109.494 110.245 cv
107.532 101.091 106.276 92.1738 106.39 82.7949 cv
106.503 73.4468 106.742 64.1172 106.365 54.7705 cv
105.767 39.9575 105.81 21.5781 93.0868 11.5556 cv
82.2284 3.00193 67.4393 -2.54983 53.6581 1.18259 cv
37.205 5.63816 30.6161 21.7739 30.2684 37.5283 cv
29.7997 37.8447 29.4608 38.3603 29.4452 39.0913 cv
29.162 52.1079 24.7655 64.4765 23.0136 77.2973 cv
22.118 83.8511 21.328 90.2075 19.3925 96.5537 cv
17.2889 103.453 15.0585 110.316 12.8905 117.195 cv
12.4608 118.558 13.9218 120.205 15.3505 119.655 cv
15.5497 119.579 li
13.5233 124.801 11.4579 130.008 9.3241 135.187 cv
8.97156 136.042 9.25086 136.72 9.79188 137.133 cv
8.01453 142.048 6.23817 146.964 4.46082 151.879 cv
2.6532 156.879 .503791 161.785 .0067205 167.119 cv
-.131951 168.606 1.81824 169.646 3.01649 168.846 cv
5.17371 167.404 7.18934 165.833 9.10633 164.131 cv
9.14735 164.588 9.18934 165.045 9.23035 165.501 cv
9.32606 166.563 10.0682 167.523 11.2304 167.501 cv
15.5848 167.422 17.7958 163.645 20.203 160.437 cv
22.9598 156.764 25.454 152.924 27.747 148.959 cv
28.786 154.439 29.3075 159.962 29.3173 165.59 cv
29.3212 167.97 32.4667 168.143 33.246 166.122 cv
34.0653 163.996 35.0712 162.119 36.3456 160.315 cv
37.8749 161.794 38.5702 163.391 39.8427 165.407 cv
40.3866 166.269 40.6054 167.152 41.6708 167.605 cv
43.2782 168.288 44.6073 167.501 45.5946 166.238 cv
47.66 163.594 48.1415 158.508 49.0839 155.324 cv
51.871 145.902 li
54.3602 154.245 53.6513 163.422 56.1093 171.834 cv
56.5145 173.224 58.411 173.855 59.452 172.717 cv
62.6513 169.217 65.9286 165.655 68.3378 161.541 cv
69.91 158.857 70.7714 155.699 72.2597 152.968 cv
73.1766 157.65 74.1991 162.309 75.3593 166.938 cv
76.1864 170.237 76.6024 176.588 79.4882 178.887 cv
82.1513 181.008 84.5048 178.533 86.12 176.492 cv
87.6786 174.522 89.0604 172.374 90.2723 170.174 cv
90.955 168.935 91.871 165.597 93.036 163.918 cv
94.2206 165.076 95.077 166.68 95.8134 168.067 cv
96.9042 170.124 99.9745 168.68 99.4686 166.526 cv
97.4657 158.004 97.5292 149.543 99.5809 141.191 cv
104.239 149.199 106.388 158.444 110.849 166.6 cv
111.676 168.109 114.078 167.765 114.505 166.123 cv
114.579 165.839 118.65 169.22 119.311 169.687 cv
121.318 171.106 123.22 168.031 121.591 166.46 cv
cp
f
47.5565 49.6186 mo
46.5761 49.7744 45.1913 48.7207 45.0409 47.7578 cv
44.9159 46.9643 45.3964 46.2993 45.9804 45.792 cv
46.7684 45.8706 47.5927 45.5469 47.9706 44.8169 cv
48.0399 44.8491 li
48.1434 44.9844 48.247 45.1191 48.3505 45.2539 cv
48.6845 45.7832 48.7548 46.4814 48.7782 47.0849 cv
48.8163 48.0727 48.7606 49.4267 47.5565 49.6186 cv
cp
51.5184 42.81 mo
50.0009 40.664 46.2909 39.8178 44.8143 41.7334 cv
44.7128 41.7842 li
41.744 43.6401 39.8261 47.3027 41.9608 50.5532 cv
43.8446 53.4209 48.1473 54.7807 50.9169 52.3222 cv
53.4013 50.1167 53.3388 45.3843 51.5184 42.81 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (5_body.eps)
%%CreationDate: 11/11/2019 10:30 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`>`<Z(F5+6ilcq)e4b!$eTD\Fr^VBaHc?WLAjb/i$Hn#;$PcMe#Ls,'`90(tbj/](B]XWCck)7ipT&+qr
%rSc;u=0KC=`U<6I-SK\YH1J*8k/m%lgZQmirFNHfroE=9jdPLBV6=g/4hn[Up%lXk2nOIFYVCOMMuVa_\Opai^U(V$rMpa_o]>J0
%2tD98Dk-fjhu@^]5>k[1r:D(\J,AW>n)(d,o&eW+QiHAa3;*,L=`=9#m<;@u(NM>-83),K^YBiJs7sbIcemqBGO&E&f/GqKi>2H9
%pUfn@nia2!nfYt_Ys\QQl=fD%cQ3"oSp'jHpq,F;?.A%bn\l*dn9RE-Ftq+B]j9Ra49-rtj\)la?bcI*`KSo'rr,'8&D-m>p;M7%
%T=h_b_,!_<$FmC<H55PC$VgRd)+VB]0D3Ih=*?%B.i79+lOpAk+tYFsj_@BDY$"3Up;^gTJ,.(O^Y_6Nk4Z2S`qAXV?U"AeDfJ9s
%jd.6u>1uto[Fkl$s5Ee@l[O0Tm#?C'Am<aCrQVB]DP,*pl]#eR5G>kdIE2As1]Hn)os_DK7.stNrrJnlMd9Wbmsb/OMdJ^ElRcYX
%fgC5_h<iBM]_W^tAJ_)rCIrXrSLiSql`Rc($,?XPQFH>/UR]tBE=:Qphn&G%%/q%ejhH0@m+Z/+J'gU>rO`na'B#4\T7+&gJ+:.N
%s2RXNo@H4/s06d6*dI;=p1<\-kJ'4YAsu<7eSi1?UJEPX3P9Zh62;T%grg[`.F[VYX)IC7lTb/+\]#*:ff-1plefF>$_G&MN?:C]
%Xo>JPrPe@MjHmW/rT]1,IeE9(?Til1e*CpYrR:0%J)!59oBN^lo/F;=rR:e4J,F-W;pOsi+'q0W.ef$SO)qIq4T"PZn$o'=kNgln
%r`62`5PopPEkSCOd73F2[.X(^a4od\^70#Ak<7md?T`i/o#^2<Ikbj9lXrH)Dk9KaXgc6*[r;9@TR2RCHmdae]C;>sqnM6GkuSC@
%e?>LX]Q4Ih4aI"g0<\^^)$BU1q%(u^Y?kSlrh%qhh=8ZQhnFC4Vt57=lNc>?M^NHB,V.(*bAY*:]qGC1HPjH!D%HI5_is90T7-V5
%a`i5\p2mcnrPSAZgAU!\X68O2(OeT?2#iTN_NbXWka-dInP??[5PtH!Gg+t6KlkYIVpB:rr9O)qDBC3RR.d^jrpHWVceYe/'@&g-
%PbqdY?>oisqm:@nV'jA<s#iO,bGX]p9@)8iC-9P*rs_/g&+\tSB/4c$;,D0okKCV&&S:ItBE.UaM2H3Mk@ZHeB\7b/_m;;2leHm\
%i]Get].a3VjL\XAS:9UelRgT;ZD,Sof$AjFp9dRppAN21P[D.Ro$&sn/Unp:N7]c2V7VBXo+q3%p@b=Fk&S)8f3u/gk4,3rI/IZg
%9"m2*n2H\<_.rH.O2\ZP^SHB%r%3hXi?Ni?Q<#(lMS#L.]mp!;DDJoLY29GlL#-@ln$22ff\%:`/5<@#(>K.<`7H)VS,N('od8pe
%]L_n_p\6#;Tl72#XqKKCmN+[lieQ.C4hps-h="Z7H20&Cc1@7'n1@<&/`UamA`j^*elqPaJ)`b.%$'>1Wt1%2['[g2U+SJ+cf7OI
%q)ZV0YJ[c_G&f/$,fd1WgNCD0D7QJY>A1`23L4uka1AJFMcskuZ,1@f.0hk:&[<mt`"IsN2f]o"fOq``Xr0GQ`uMCO_rW0tksg\3
%3m)G5HTC.aWMUk08l6'/[j/G.,KD5SjH*H&/]o;I`X+B@iStQ;E"bue*5b&Pq4,euQ(nJ-+AS*)o('g)l(5-S)]g@eNrC0A?B/eS
%+6fgZEo87-QWnh$<;@,e^b7\&NB>7%P[c?e[[0aOY836KEb(NtLe]"D$_1F=j>\_]3=bUm^Ket0GZ6[YO0h;:Jj/2aU]6[U,;83!
%iMZ_HPrJa2B.a)7hr'P9-iQ+l,3?QEq>Z'efDE8Z\_ag/%-YFHOnK[1YRbcI9CTeWEh)2MaFVf/0WqIt%4"FH$sbHj6g8;DEZ@Ms
%%W^JqLl$ok,mZ9%;M:+GOlIjqFHC!.H+L0R&RUE9Q#"8+M0+T%6,Mn2;KaN[q/_Ythol%,bL,BHQ2`N.rrmuVd1H-F(lknd-/Uh6
%,a*D86`';qJ+e-c+dYXY15f[02S4&t5+TgYNCbPtLn+1d=[)B%474M'^W9$2+Z[)%j=?/LmG1>:-A\HU)6Qn?7)HoqQPj`VEK[jG
%UO6+#qfk_+$8Q%ibckS<anGu7l6<o\a>_OG60<$L^-%9T3gnN$`o:/kkXNQBaS6Lt#fe9?.3fjDjJthgiVIeI,;S7I@Z!_([E-ih
%AC&@3N7(]p#.GT_LSK[?3sOrfI$=m*:H`#+pW);kmO6O5S.^m1.\_Bp:P[Cr%fNr#.HEnu?neNY7!./-IQEKJVf<\:3XZ/u6Gq-#
%&4)\X#Z[$`P:rc:60PI?p`P5[MBhQ&:shQF"H%&JS3W#T58%tUca@l7SjIn%]"Gk\VY]qT%Zs?u103lER0iZA>F-@A1>T1pj>H[l
%'.rQ^N&^Jc-Xt$s3'$`'WgL4B9PJZ'-@E$m:'VY&Fu;>X>*R#a/jQnhEB;kpDP2Dg!(>;X+@J5Q%0Zr&4oqi4K7ODjkk?<JFFf_k
%r?s1O%$,(/%M&b7\d9H1_h=@[LC+-kgc0%LdDf\;ADZ1I@rM.qIJV#IPlX/U;lQMoT]#?lGT8=Pbm8`TAO(nbienn@>:pMQ_VEMg
%kVu]n%\0=baq>a)mHQ[)0sNIL';mmgI"@<O$G\poW>H+E&LYX:</4!UPR,hB=\#Dmn6fL+W,SDS)V*3+$fI04l,4*5adZj;Ued4Z
%U2oSjf-PC%_(LGJ*!XREO@1R!8tsDf/<)!;6R)JjaB9k%<6fMuP1`>q,iKk$E@nZ<K[%rI;5D6j*%`@5-P;Ys8D1C5[`YL\l1ue@
%M1oX%@Y5t=Di79AMq&t<'Y1;)/h/5o)A\QQ/gj)S'/Mukq#VBV#;\`OLs0H:Q4J7>kq+G-f?tP%Maijn%U:^a@W@Kl_'4HL+`hYM
%V.&>GE9(JIc"3PYH,j?d3#X.l1JFsr/BK_AJk2Z#2&dma;'^<\PGFX=&o!Fe2+Y[8J3gJ"Es0KR1/l-=#Z:1\9ohoQ,FQ[4bg\Vp
%FGHR;YR5Dm2MSsbK"Gn*m^a9,Cf-2-?+0iYh#tB$qL@RceEHmfRj9BK.=R^El8R2$Oqge=859bf+k!0Bns)$a!GJMe\/-8iC50?,
%^kZ4qSdrP#]R9P9`U,UrDlj>Z$9-mP]A,SmB:rHQ?L3:i>-#ch5DUA(@O":g?a(.QU6T.76kQXM_KHp-65Hi]MhmtC?9lj\M&;.K
%&YVD:B(/d2:pkXQ1K9o7.aUZ>Ja--t-.HJ$E\(1HH`Ft^?[cRlp>o?lhnJU*Mf)mBPGu-rk,>8Xif6CFaj`('kA9*W7Am.\Q(=p:
%<Hr)R]iFUqT=l:TgSc=_b&BL=G22]lMt_>'bD-@R^N5'd8%e"UgOj85^*DN^Pku!%j*e\C+*P^G++AB[a<>bTd!6-d52YnE1FD#!
%M,"BL3kA?PM-a?'Y74s+WFji,!X7E>l%KgdQ\-i)2mU4&=m@b"N+`n;ntToe5d.!1kbG+ijrI.-8qV"W6gd?jUDbLWk>Z1:RVK-1
%G>lc65jR-:29Y^2,ZB=hc*:]99njKj!RXbk1W>BT4(+pf2o^FeA#koa9sT5TaZ-mj!tE:Z*623KFe_YARVp;f.GU`X4T2JV#]D`_
%fob\Be;hItmQ8RDO1HBQa82AtHi"t1I)d,nHT_(`&,q\QIc@""(jC@o7[`m?'etJf$V\H4f#jT\7'&]%-V99\.T9/ECKN1JANDQT
%'CD)XWs+NYUU(g%-r0V,>XE)K@!;_Af-jq&bZa+s$ff(Y][N9L#t(aA_uM?h_[Nk`3HZ]fkSD]$C&tHP_l@:&lR*UIC`L5Km%^^r
%mcp0\9s`5,C.E-Jc;sD(BqPjSRH?4tn6oMbraXAUElYfGlg;ak3pka,mt6YHGPmf=j1bs#lKlk?5i<7=EFil@eS!Ln$ioJ*iQ5R/
%;n#3EDN41<K31gIiOih`fM%PkmP*uSDk:*49aA;0>>F1G6*Y"KFdOG08`'^:4'5=H!"+D8d!c=VobJGrE!QGbh%8A)4,TV^Q7MU_
%)M'GS2aUWnC>EYU1iA++&d)+XV&#3YW+%H[rhpT1XAJR^f,/prpG)%BbWN/Po:i]?1'+"_orMcOC%d(crl_ip48js]N1]-aj)k*!
%,:aQ@cY1QjO8+f(meEIH#QR*QO?5Z$h#C&lll,!Jk2popQc62aUml>`:,f)G%"4>]OCS^0j3@*B+p(:l+61`^$9]I("@4gE:e1!g
%ctB+lSI'TDnc[kW\.`8J6CeI**Z6J,OAd;t"#r6tVEp\\;06dK+jf?SDA(Zn_+fP@+$\c7;2DQ2S-j<ed&Bj>Jt36mmO\cM$$l[H
%e6$P:BWUDG!2.W3Z99ge[+O`:E9O^0%?&ULMpq6jN7Q"A59>U4H46dQg7;]^J5>k%;ldee?.F%\WfD_/h;_!Mb*t!6],krQ_WEiX
%EU+cl*&6I?iGS'D:2`:UZ?dK4HlO2Ja;l@EhE>i/KgY;'i,eqih!sOhZUXbl;*Jc[cPknDh=7g@q5dFWCR!-`jjW&51s/?XT)RpL
%s$$FKbY]cD74[Bl1;PhGSs.>,'i.9\10[S7<W.Wd>Y%li2"s@b*[Oo@+C/@eh)6<of%eTqm`NYt0#XgWVGr7B^['JcLYB;Oo?1/'
%X_b.#s'<BOPC>2(5!GUSh31Xm2T`qD`p<pAdoW*f0[dG]f[%W>eW_1:HAa36be2U!i0GfNq>C'[PK,KRLZ>mC5p#Z&rdH2YV8PhH
%Wj4BWLdH*C'NsI^ims?W]77@>Pb6raR]o[Pd[>>5=]tP:XB\;?WJb[,ZG2@2Qa=G_L^2_/DDUQBh*(WsIdHfXg>;]0'?%l5'1CR#
%-HIOmV@rSc16<5>Qn)TOKZ+tL=@j9M$]BpWi!A`d0e3_BLa.9^$0s(>91YCpNsb)OL9Kat<?dN_OOZ(Xb$oq%1'1EFKV`@8H%NMn
%^b*E!$u*1^UtHGTYH^2jb8:WjArGcQC<l)N+=n131g),a/60ql<T*L]A>a0kl8CT/=^Gjh9KgMi4Y\lqo2C!jC9S+HjJ^@,Wm*5+
%`G,#.AB0\lX?M)T>3%BLlP/]Aj%(EB=E@WS8%it#\YJ;ucGp,*^3CVN*;1V$]_$8dhf59"[N=EBS@A;!+.B0UG/t]m[!ga"q2Xoj
%jX/'F@<2R@Wp(HJj(Rpe6VNmS3L];YAErktg.1g3@u*_+,6rXjj3kj0Q-R[;JYnp!#ae=2mAZ:E6RujlG3Ptebe$%ngUa<JUlcdu
%H.A?-kZML/R6M-d"kW6OaZ5e;*AqqV@In7B2"`Q5*s$A7R5F9d_qYN*3t!_G(+<i%fTJm^!JAn9OiU$S=FIG6jko*cPLH\44T%PW
%&rAO5q=m*#^LuYPmACjVN?!@0l8[?c]bsQ@ho#@J/!ZUk0f8'p6/Bn_E]eem$l=qKmucIHA@Z3!n51eXp&'n5hJ%>[dGB;m*?T7O
%q],X@n(8"[Q;7rC?#S[Jk56;Zn<.G+fNN0k=oLS)s((s(CN_p`qaETjg&2H'm9d]+0U3]Neq1&_d$!!Cs,lPq$!:A>--c<G:eC#a
%/Za%(.Wn92%nLCB-f'?:6uT8*dM>Bb"<nRBcCq!>1m0rWKoB':kWWtL$il_,JjBnLC@91tEc$0E*R@noIIL)d*HVNNm)YM(\`5if
%q9\.dnf?&,m"6k,od6`B\QQi\5#C!5Z-FTdc"Rd=q8c/Re0/N@&o*N8!pSG2:1Cef<Zh"g,HEq93U9jkoH#k[O!!2W3k?24l$?9P
%e16T+m8;J2$@jW0?9o8nlXqeI[5(b52>.[5o)dIbe/^-5:?Q2gNuqL6Z%D'b>H/37:qa>c\7YS3MlR4!KiHN8Tli1G4g<ku)lW1(
%s-XAHUUsF[BNXk&euFE]MiT3SBLC$VXOC%D,G-"@m'uX3G758tJ+)@QEDU.0oUofGkOJ>p_p5UKo^5*7pjf^-kP1*ca,Qs)Bs;7i
%PRChShmLTPc."ielbGs?Z!&4sTBNO%W/]^h2!Q>o">WQfK?$rLe5085YnWqT+"5'aqWc.:>'1U`=[h"W^D>BuB%Bm-RmLR*M"RW<
%4-i`T$W&AR6p5aiXug`MeS:>uGNdldQ&YSV1AO?X-Iu_m&Var(&dR>3A-%<2TH@r9S39h&\\jq([t;Q*o[[MVi3Q/"gQX#32EWX%
%\l8fT\RauCBpH/ZX1(S_QA6Hncq@:Jhr?]0l]=3Bo:392a7D[dGc0rhNmDosTAt>dBoG3r>$MkEN/DHa]G6Y`2>[FlhFFjLM1KGR
%l%NfgLYcGHHGstImuj!OE<s_E;pm/_,gop0p5@IQLT*+GPYf^R]/_C>R#<FZ?m-G3PZ2JB.^fKr]pNS>@*tkBMENOZ;7pqi\]j&.
%):p:9E4r>^rZ/,c'<gaVd(^@$aPZ!;c4]2"@bK$<b=E-Q=Jau@rS+GU/ec=A_<o`,CZ7o4%?XfN[(VO="e&TL0R,Z&d>8Pkf<hPD
%q;RCp"W$_&TH4^r3%EkuCtL3Q.D1!T<n`[i8+>Jq(n=?[#'f1[o&p5F=U]k6Gd6a$,KYF#q9tWrMOu$)E_gT`b*%[mh#450Q]$Tr
%+r\#PR5'/6e2p12F)6eV\`4tLrN;:^DWBN2mpW(B_Q`64iK'1j@RidOpL]M0PAD(IEi__Jbq_&tgi&QGF0B3/Cm"rH\o>Ou;_q+E
%]U<0Z_t5EJIZ_ju;Y-oX<2X.iSMMjsiA4m@$]:k6]Q[P?F&EONOm7$0D$9/AY-X"BK`H<-g#XYr\'iFS9U%;p;"Yrp0cHGn^h,;u
%'jB2X>dgl,'#tt>dMRYnU2g!.UPUubr,lNA0M2e<n&FE37SW\!Z>8Ionui'[?EA9$P$h#0WsD@.<@dXp&@\0H++=luMcd""g?AZ\
%O"IJ?DRqMAh=F3ANoIQU>+@hH"s:Ukh@mZtGN.4!in:*"I0/[*),k5AD(pf_,2H?do=.OC&WT&Kl854*Qr"eI4I].dT;Kl)N(gX%
%C8Kn*KZSjLrK_McV>DgEQ_MIfZU`HWOA!=.l<DI8BUo:n0G-cZ'2)4qZoV)oH<F0%EkP#.Bg%D-c&Tn(Y[U;6,>Q-CkVe%H+8WeG
%B.Z1udp^gd@9AkW9.N=^E"CtGd'?hREl[;00l4+4O_p/g#'J#JduVCNNX)m_gg`Qt`1_ApBh-/?CfU:8`hQ-M]fDq_^mIXCKNb8%
%mQ#/VD45dg*nZZS&Q'$GLe"d\.L?hQWU*CNctfsme91lL#LTYc[fhj?aoiL)H8+)"P:"\FrGj/HU;e:>M+Aj"SVIJ_Pd1iT)B^Q9
%VJ_8?6-BJ@%=g_I.$WTX\03a]B'huiJF5Ujk<W/0HiJK-j1jtCrf'#[:uqoQ2&ZjA:Sa^`@KC"/*%8cR,:\P/Kq[`(32d!A=\4h1
%+d3hg?-ItPTaJZ"6@sc(ZIKg[*U/\e<]\K]fM?#[/,rkmSdS"KcuUG7NK!G\q;uo]A"$?]JR4^Zos]S+KR@k#gWZa?GBrBL@%Rh%
%O>idPFV(3bPD4pXmQN3blh-7gT,?mAs0&L>lhV2?@Y;j1q!*L`q[TnchE=&S%:mhmX?QX_@]92WKu-!.q6?R]coY!o,#tnNaD+3n
%\uE3B>$Do>m29=NbgkWhs3^<hAc2'CRhf]@NAZCEjf"67L7>f/e1p'VF4,-u1h;#Ea[US944[kprj01mBcMC<V&qHA=(ttmPhEKK
%n_qB-bkWpT_1bT#AeXAg%h``mf=U">*h$8^mX!">:9Z74$gH)J*kC(rY*XUbG-g5"e/IClHhd,]&p0Q]mlK<gH$&ej#7L?`"*\"&
%6L=BfhSL*&oX:pLo:"SqWH1eL]td+&jmEcq?>$%U;d/VIU,#KVPqT"./2;pF'9@mVCFf?rhJhI''Y,N_h')saoWp;Fk6/0h:-T\p
%oXAlCgAOQi4"$^*l[]\r`XNgQRe!L#e"$2[m)a'VM8,MUMbr&pMDciFbm@d8];r,Z0]LeH+o%o^"QNlfE6hXs0/Y_[V$:keK;XB1
%*0q<:[^=u)M8Ap5"Q)cX^,HeZ.!?\S>Y#5$aFe[Vo4R*(+!ubi)]UsN$Jl3qcHM#e"+G$)mm7$CT!6rhc8eS=*3l#`Am8YT-/12F
%STE7rq1c<bp71g>S2"_;s)Q-h$nrc9iIWq#E.2V^'[[i>%;9_FGT-hEgWcKFo^K;]HO[K39t9cQa5FqJ!.fOM@@6C/4E/?I:n^oD
%*EJDIkeg^0U&(rkF;mC;*Lq9%6Z!Cn'bA$H2#Xk-_t5uI\i2O8Z:tY=93hC4lJfG:`Vg87,[dd?]u?.tVW>oplK+7Rg$co`YoA:W
%pWuo)KWP#K+OPDA;Ye*i-jJMGNl\0D.Uk!Z*o:b]@@+h]?XglH9!fU//lm@JpcY^q98jA$R]Mlt$Q[9R%p3e'cl&3dY7Wk"l2%(=
%58FFsrZVV#c"@W#X-ldnY._A?2s)A72-6Bj\W5t)(d1rr>LM_S*40Tm?lP*u)1,OG-cI8p"u[qgHGO+JOFh2s`m*S=fc+bqHVL:F
%G<_)aT&4n/n"(23VAosa!L\=,"osg_1VIWp4coYkbYCm)daY8oQ=nuK1V\4`\?@5m*R=)FmbIj?/'aa5^Z>O!H>/6-F:#o2^I%p_
%Qfs]]HphobeA6XrUm1;mJ<.7!c9WOfnZ6%l:6[I3&u3_uRCO)0)A?fkc!RQ>ri"S!m#2@>P<K%^bi:N)/VgHukH[h@eTXH5N`4H*
%diI$tghN]t2^_ZOnifFGRtkSc%KipSI5A->3&CTGWRiqaHZ&A])+VZ)Jl/JJRE0UCOL)n4B$-+)GoSErpp>knBXS"Jdf"t<BVr\0
%Rk.PlZ<ihu/?W)UOl:gR$[Qmp>:+VJo")VpA;U@3Q"eK^8DN9>&Nt4ISV57HhNHpg2I-#A:u9COT3f'p8/%u50Pq@iMWqD$9U^3)
%(c%G3Cl1QV]rU;OX*PXS0*%+hJ,EuEIB97dDHLT<?<1j@7PD[C,nsHXP3m$"SbVArD_!G'MsYJ+)S95pFB2O(#Tp.h[dJ7FL5,I1
%\A9]t(U01b"^GVsWm$jQMPq(^H2OW$.0E5"@rHqLXp9]%1J4:gV;g[#8J13bk"Qo9RROL+TfC5g\1`11S#qVhQnp_mhBT_qaQk!n
%baYB_HdoMEP63:Ygq'<UkJHZEE_MaWElZ'$Y@rEOjBN1qQa:6L*k]Csf.oZSc3dicYcV5&)TMuu%f>6BYa/Th/Yd=bNb9dMgSBSA
%b(='`-IkqGmF'ssh=eN01XI'GFtj%!/)\si)E'V&aU+RJ)K%<ede*6@jk_6"Wb5C=n9o%TMRk<rpgh++j_ihB@.0B2ASLg0XG/i!
%4s+gUGoRRe#s<r=RQ=4`O.ghhDMXT@cJoqN(B_g6g$e]l]6)@H-X')E<*cnKgTOl(O[KmLmSp]'[r)5GGApX9L2Q&OI/%">4[c3%
%au%s+=tfV33#IO_K3<)$ACc.E!W/P55M"Q3(QH*:>As5LN't3T.$q1k*]>(gl7[#<P;a/.'Zr2i2)Jm9g;Zph>>NN'\nd<&'EfPH
%14oQ^`SqT^m=`W198^N%E9=!3?ED`>C0Ih_5Iq[=k^.uRDbADkit%Vb_)?Yh_0S3O%%Qc^\&L"<2Z)!0g+Z#?c?2L0^AU@$SF>4l
%bT#L4%;j\@CAO5P<^BM3]E](XUrt,k$dS+R::&cQ@k/Y=E\\N#V'JbVrA?%.[XN@d]_](:e?MjFH)\;!1TWZ:\XA(?a0B!BRt=1P
%(hjF)c(QDFU<2KL9%%/)M/G(t<qBt[H1!Y17Y(@!HaYsa`iH?33&bbDYha/6g4kIBlC+$Mb18+D>DZOsU6UUch'>Cthrp629%P=u
%>pbL=^%52[ekkgPl\?OWobMpL(//S73IRELH]HX94iB:a=KJ8"BQ>Z#a[ScjAi<59;+^n4Dp/u>A"**cYhYW-3Yq$&P`:1h/3dqP
%J$ZsP)m/Ec*85j6&+5!6bjIJ.kd`!,++ZF#fTV'afCLVFLMlb40-6h(.:hYPF(PB`T=2T,;sW6,B);4\Q)GV_@)9t`gQ$bbI\OGu
%bCF7P[=.'8oa+^EG#>`RDZ/!%\E^GEBD"o-$\:KK]P[1>/IC@N:#=[XHqClG^bhnR>Ktd>hr7>D42[;#'!'5S-fpTPC/i<tEhZ$Z
%A70snS[_QcXp^5)^s*-F@&)BB.WoCG>U;,1\'EEA$@ac)Z)R9C$IA$8h3k@Me'ZrNaD_M(h@"VOP<ZmdQh-f89Zd=u>qbB`(Y^G8
%,BphkGqh]KIY(iYk<1IeK7ENrQX&2g@0bsL[rb:1"(?pRJ0A-NNE8B]AE%*1i=#^!C;M?]#*fA@H#Jn$pQ,VN"*^.2AF]_7&=N<h
%'#?E-pQ^P1-5/:ho,,cJ303)^P4Mf$UBrnn*RT.]cXT"ql=Q@.j#TY1[&BH`G95XeQeQe=k:rPufu@/GP\!h/*<ru@+777a3;8,<
%aU',+7j%DLgt.[\a*o*.Go,7]r0?0:bJ5Y4pB?gp8XO)*&X!i2&=GLojC+@1<@5/MTWo5-kb-!.E-p9D7.1$-()N0C)&N*5htPR5
%@r>GLqW/7iKObo@*l/[-nm:hQhs\.;G3U_^(?Ke]Xk+Y=#PPmt]$809`CMfZ,7&&c:_AUAr9KBL<p1H,>F+HoSGU[(q[5mRegQH?
%S!e,+\i)hMrHRMS'QWkVDl5k:lQF.R<31i.iD*K6Wl]GIc()IOR*<P&<3/RgGAVc-DmmC9%7K*!^6p']QcB#'`A31O3I1=G[j*8b
%^7UjXhM3O&n]C,I>=ZdXpJFuARDlYLg\Q*ZqlOeH^>m1O1"$1XXSZd0qG,DiC=f>*ir\,Zp>+l?gV2S0N,>B9n+c[?e`/[UdHu;+
%Dn:?uf;n<,C-#^ga=shHXi=O5ECZQ(KF(N80-.&,m4!AC@UT"ADF4kHC=2Q2=*'^Wq6@N4>Z>:r4Z$:Php!idf4<WhNh/uYQs[V>
%Bm33G<mYOg3R)NlQAQ>D9c_<R.o#MtV0k:`p6J7<(^b%0X[gi@Yi8r8G&MTk-8`PT`7"i`X?1Q#T]81sj*lS":E>7YJ;9E(F5B92
%h@4hga*LI">S2\((Yh^O\_RAU&jY,OORkU8cW@YUhZn,K`LGp.!gMN+T)n>gYBeNq+tc-Fgt1OjB"$enQh&no%/7(JpW&>l@\js,
%I))o.B0^"]d(@Tmp*rqoN;"4DSu^l6](hJTc!H(3[o,--=l4;qH6[>Ae?jcP0C0&GJMM4*'l;;:Rg@q'&M%Co<Ap0dlha!6F@ROP
%:rgP4LMb:'Q\]k/`4Pcg]c\+8'=MQA]n)7+4SZ/_e-:kL3"mhRqJPNWP(`J`B(H.+hq?o@p9hWA2tXjTJF^DrG6b_GenE]<b%3*Z
%El[4.`k*)!]=@Is--5W_i\t'D\)d<?2?%%"Q(8[tG;]m]SA]<B-gkH$*D@EY5u-4A1m(+N"tCSd*PEW8I2Xdc18DNp7F1cLbiW".
%atk@Q!gMY"5ku:jHj;q4=XH>U`+PM5//)rcM18f]nmC6:^V!3>ELUe7r]0%TiqMZon3L5BK.i[L(^E(]LL/V+*m\*.fdW:$re=90
%iXT];CeOmLm*50P:tpb``8,OK&%^QEjPK(J$[I%?EqtJQq/0g$LKr].*0XZjHZEECNN-_bM$\Tg(ELsWr8hgQe0hc\HVV*Nq57kD
%DZ=U`J,\NnT/"eQs8It.IE'&d@pko`Yg40=B+4,_#5/o:qi$)Sp2*%S*M6p&ZV5b4M9d$kVo$6Fjm1g<HMPPGB.r.)Hhm'TIm1L0
%o5>[7qX&M)?-qJWn`7ragXe*tMr4R(m?<$Goa21Vs6Iu+FB-9Jfh!Pu`Os,p9^Sj:]^.t.=#kj['lSK%s7t\^nD>>[+'+uCqr;&V
%huB>HrI7K+?_eWa^Y/SGs&sU'4Q]YYkE[7h=oHXX(MLPS^tl1Qc/[&t]t)6Jc.e`#`;ff7p$4QWB2@DIHhHsOlbDk:U"be/rVk?J
%kI[?ms2mCdldIf=hRn15p&<(^5>*qarJ,%3Dnl;MmF+!Yg\i.qpi#rBnaZY@#JJ;X^\i;(8+P.L"CkS<G1[2Y7kskALpE[qe??tg
%Ise!bfQLa5odVL=mp$-".G&=J'Zq.=@AOilO3]nUE*!E>AY!a@,)=V)Y$>XdMA*mVpJe>$Un^h!Ess881/6lU99L($;XD/(B_;^t
%9fj0_<G<WD%_*4tDNS/Hm:@?g,U\m.REAi>ig"nGQ^3#!6Z1<bY/CS8HE$+\/"bni>J(RhiHM">Y2UY?DW*(&A\7h::J4aie#W;F
%+Pt3M%5ifE"3441r&:o^CV'or`dc^G9%CIX/XV0M2m8tUFu@He6sLM1^pUML34$PPS\IdkPBJfiAWK$6dUb.D1r+a15&=;'F:B.9
%c+/%,`NL:c71J34q<17r/[opV(28l^NXK40b8^*>j>frK=l(sp1jL<k*KfTB[+ei0?YMHGl'eEm?Mjpd:YoldOX$+\`^)XN"A$R,
%N:t[i#UR+RI<,$]N"qD(JDhB(]VDPPg<j_+LU\YP_f3YN\mFW1)<%Vb]Eg]2&LAt[?=(r\D[5oT>0uX*(O64rfjenl917mM3!r`+
%X0j8MEG<&u%GnHp09qZ'+J`h90gJB7m.N12fIq@kE\^A9>iZoLTsQ>t]8eQ2"94oa^kDs_DV%I\oQ=Q&'NpUo!0q#8SU@+'HBjOB
%etWQC#*3T+cEO.U/E9Pm[1b&\-Ak$+]q.pPM!Qe#r9_G+\e:Ve6e]5`;qC+\Li=0O[S0f6>B761bR+*>"V%_r#$K(FQU_q9N4&rh
%(8=J_O,*N]hs`>D;=AbeRRAXm.N-k#35<UfI[)pU+ggf8Xn&)>_%PUmrGG\.haj*WZu01q&HA'L-1e=>UuSo!%C!-hPcJ.<!WZ%=
%P+i"S.TT1+./=Q1.Rj5:>(OR^ZbI.E"+uCWjiWkl4s@;/=;kC36T48j>crZ\-8HFJ<!H;1OK1flOE8k9luXUa!0MH!7&H!Cd[BZ@
%:3o-]=Psho23bJ(/VCd!?U\>p<jIn\.in&19BEPh#KWl*&BdEdU*OoDq!$/:6!BSR+"KfR3`?5e'WBYHU2?m6Ms+kKY9HjhjqbA(
%a"-G18op"fRq%Z>UICK.WbQ_ag*/RDcY6^WUR1ghe'!Z$!HD<4'qJ@Xi]rX'Osp@Y28EkPR*bX!QP0()U*dPF7?Ah&J_Yc-<E-DU
%)*$LF7/7<I2s!F9nKRoa%neL$[`BrJ\AXU_^TpL@.tsuj=>:OR-k:"Rihg'0Qca?!@AX5XrDL0m?;j8]$HU3sY7\Y2fUXe9\<lCg
%Y[F0$b"C<ibbc\jORggD6\]95PNc,:#`Qm&%%s-(';H>M#<5R]0^-r<l%h(4.2g!p+I]FI*1AA\:F<SBGL8n`4B,LIDt[!Y;.u*\
%lV]=l,PJK,,E"n)*<XlKMV#p#`TXlX5jRCV)84:4Qbfg*QU\WtoRQSB=O6PsN-.rdrFs#GUg3=ij;Ffb&RlU#bUFBaKIaAlZp:IG
%'!s0#Lt/j6>e%\dK?+1".Ma&3W)f3"&`u8uYY7mo$Ke.Z^b0*(bND5&_s$]&_N_'6Bb$098VRN"hIDHPVapp)HqEl[lT((EN04uo
%+-7d$mY$BaOp5't(/\P9j(,HR?1""hc<_,*_+TFQ97u<H.1;(O0+)-e6gqm@K#7/aO/fiT=t5,@?8P=`pb$h"Gug+EXKLA%5nD-U
%j$\1gN7fK9/.]qP!Yq*1lf;K6/Ugj60Su/Dm)t1H7JsM53`@)cGr%18TS++D/Ff]g/?Y^#I8/ST\*=;l/&Z"%EhKOOV-C)fCEh$o
%p<J"jf=7VL93@YCg8B[r[%nmQ@*0p-[R!`#m?H-ir']e"N+'NG`-3BW.;gU?Af25DTaBch0KLDdNE;!td9`0oiEcfpZ?EaY@9ctr
%pX/4d/MWtmjFndhpeD>=aE*;O<U!+XRe,MPRhl;iLG9?Jf?395<epVcFRd:#ig1auTorhpTNNWr/4Z>?"_K`QSlccA;Z>EfA3#]h
%kF0K#/>@;6VOOZe)5$S35I"28NAC4U2&q;WKeM>uaLJ&,C%nH%d,NRcf+4&k4=BX38@'inKiWC2Y?d_C6S<G8/\*2j'q2gXA^I_d
%%h=?(%&_g-ASM&P+*/52H*g'^"p@1,I,%T^(E-cUNRhlId$oim0@al8=gAWtXrM0e0-PX83K=qgR`MiSqkDS/k@;/9TUP)FLdb9b
%R16:"VIC$lHoX+3?rTK3b>r@oQ-#$7$J)/M;cr*W>"#,bc4Md&C=h!TMI\`-.OrfqBW5*,+g:aRn<`2JdR&;/4LFD=MI%+B9'2fU
%Z'mK%WB'`Rn)K#`3`J($0mH8iQ<C5uPVBehP>X\?Ec.;8,akOnF#bo:7X%?`Xg+_"]R!/G[l12W-jH%Tq9g$UWGF<*QBncMmdeGd
%pdL[1P?A]12W7]2^ln=Hr`t]4#LU/,)/Lm.p_[b53BYR^B&?@Z!!H$@l"=)dqPDCo:`[kN;uDe/g*G)hV@sjTbiHjqTo'D_DI)cU
%ZWV-4O`"o2/BLbTY28,NL7Z;l/1K>1Yit04Z=6rE]n6HCW/^W"Cg&4W4*dDGEhVV]/lc,-_r;Ei=Zb6s4Q@G#I:"U5nF*<ke=Ueu
%)#f+h5.(clHtH2N,Ju6kRgD3:p'kiq]3[]Tr9*tHMkBtg41EA-j3Mmus5fa%cX)(4qrrQZrUf=b07NrdbnHUp%U:QB<^;H[%4(1#
%=Vm8'$kQn8#*D^oQGiUF$knT'(lqLb1+p[K?(0NPo>Hh*a%\uI6*\8I09AU?a?jqJ"6sSjjk-u01cjo,GW8ZP($ck+%@J&Bi]$.#
%YnmM5K+'j$Bie?0J^psn@_m,#WaQ&=\LlO@rQ\3rV>oX!53^l]TFt>k>a9N`.1;RqUrcioY#Xd?L*L+<Wq;B6<q&%SoX-np69&'Q
%YY`]ie[_HUWUt1I=?.!NIpYl\\Z:`(79m\<`??-Vahjl$!cA0](V,(L#N[\iR`I0:*:]@(Srj4sJ71k\32o`k*o+/[G(g$Pm@cVH
%Y!I8fM&hodc5YP,[l3GR.aop;ji2R$JY]n5?U_QNCtrR)+]_GV*V^KUlQ"d#V*sq-;mQL$=9'P*(4ZsFpkN[?(F;O="&GEC$nAI_
%$/hY).c:P@4tWs=T"\NrmqqtVq#l"@D,E)j5IEH"afh&_aOUc99DYf%bUsdC/C(1D7<J*`TG6qWR+^dcHcKcV[A<Xk$sYmrem9aT
%bU;]Z<af+%:-lRFD5"X%9]jBu3Yi!bpD?)%8ET#YEQ/n*(YB##/3P!"QA=0'.SXBc9!?.?D?(hgXO1<FqTq[,;d)RoA7SaL7eB/X
%F2279(68qjM\naB/O3LdONQd/BQimqGmk&8j!Y:_!eVOt`0ZXp?]4tQ=a92rcUT^$n7nQEJ(3)u0ps@oK.Wm)*bG-jf%-;D3C"G#
%GYW"?<I%_4P9*kP0`+7^Nl;,[6FFL/[g4DKcm"ZQSm(()MZ*<[?ZcG4[HM4jYJj84V,ICEHd#/djPc&B."T`F*R(`1I^_.,mjEL<
%LC5A>L_kD>ek:9ON$PbU>%gIZV$UlAcOdc>j$\eU^nsC*VF:'Yh]:Wh8s@'pe%A!eS"mL9(eFtRAE(h/3e0ra3VhJr=TN2+1`NM#
%4+Z3?.\>s\ot$M(@Y_6h4=Bc@UQT!e;.EbaM<(>+a^B:=$Wa#RADT[@&T3o^nShE;e]VCSZr@Un&',X5U;D;4Si%aiM)(/q/[Gum
%&co,B_5nf=.c-tnQBA(Jloo9$i:FP9Y-#h&M]8c3j@jsq9Ii^LZOD?B7i'^madCKkh-KXj^jS$Ndpn;g*fu]!/<qe9,X\<EYS?\^
%j3hEG1-c"TVO2tp1l-`bRB2<p'U128?aQK06t_mD#Ck0#^9P7k5TGXp#cl/fq,lm_.*@ER'j>:\ac(p4gF2QE8bLM$dihRL`$q%p
%%'UK'UHChYE>`mr:BZ"6[UM]"LVaT6<QqH)JH'>ApnSs3G(]IH9*'cWQtdH<54tCm"H6jcU(PC`pUe@L1?V5.UjBW_WjEM".WE8)
%)FGm6Ge9"%&M:-TG1%@e0gX,oT*;S97#L2*<qNQ-e=o^.S=I1VR@pA6BR58!1;ZW\/Rho5Pn7np=)rgs0Gkr^:mATngL@+&GXT@t
%I#ND(2;?k3Dk73`H,96L"o&>l3)R*SDm'/4b\/lfm6Y`$iSe[sB8cb?+.]paLcJMgipi^U&LZ,+ROCc'4V8[L=u(@JSKXBDLl:=J
%HG,a*,*"M)Din6-:1ZH2dU-\/KaTnkq.citJmD/S=&qfS9j)oR,"BJ+:*m^P7'V&Z9&6G]3Y!5S@G9.DWO-Y>>fH"2el]IR[k)s"
%?q"_\UX7"Gqm@`taq1&YB"k\X7rq(G:qp6',r7ko1YP2.]-*u@>^n0Y%Y5mnQ`flGqA75;#VpPh;rP^fQD^KN0YOh2+Y@d_@tGG8
%_pHX:J;V:QnTkpk6<^<+?%KJCV*P;TEDrrA@G$8hRhYfOModKDRZ&l?#>pa63^QPHk6Rm;?I*iq/gCI)^&nC,Qmf1K\SroW%=i#"
%;4VEf_K>to$e-7>DZU2;Wt"AR$k4qXjZR!$a`BifGNm.O<Y5m11m:R6j%NC)N<To('*1^I\\+8#(g8fZ"B>RV'lu[r/J*S8`$3)C
%LK'U/Thh0.?GSh<9B:j[;%X1*Tb)BEl!.tapD3GSfYUGd0TM##*gZpL#p%Mk>YjkucbKTG$t]^F:UX(GMTU,spN^K=J-)U@'?brX
%BNS*Z'+r4f:h[]G2E@<3'BM#5i%d^mP9UbB/XA0D1`98He>S]DI<cDR/fMS?29+07/2bc;V5X7;f-,BgKi+e#STA`k[R*IYMHKp]
%^lT:k!*:'E"Vr3<28I5m>NDk:dp&&#'J>]VL^8s`=u;&_1TlB(Of9RGm#&k=7h?L>b[k+IPPOkZJ;Fb0@PJ^^bHO6l;D^,K3WZlj
%3t3l6Kq]A"Mo,^.-dc4`QATVc,NR6)Ku#[_M+*_!p'!;oUASc40$$D!*J=MsN9C7l&:?8PQ6u?A<Irlf?poocK!d.hDfB*T('Pje
%,+;?rO8(I=6"pmC:b7hW.$?01/`Y=iBh4[@3M[:D_(0.A`\!6c:oO`?@B:*-<-`PI[C@.D988@[BJ2LVYrBYc@UL/97(a9*N\pOE
%^+#!Z`d?d374L(?Po>j;@&<`n[6q[:H8&_0+VXOfE#%F4S57QG!I,)6-dgBm8G-)8+;ToF@#LIhcnPRj'-\VSlOLW&)g4gsb#/sP
%F<rGHUlYi+)N@A,agU'AmRtped$W0-nCf`d`qTS/fB3.L]C6;k!39o(%jAdXd6K_96;71kh7OMu/l34;[jRo7&7<CM*\F*%`)CI;
%V)C\]O"4WJ5mO\!fUAnB+r/'L72UZS?k<%u1Z/b$LbY:?pS`297giW?CV]XA$rZ/lhk._#9V_,!GJ<b!GO+!kU^sui(.O1>#Ynu0
%d^&(#@Z>%A[i)Lm`JeC8$T[Ok'N7U0ff3Ni+MoTKqP'H;&R$-`Ob7o\Ffr86Y^](7e=mZk8L?nc9e:7<k_#tb>_M'"3Volj(9!0X
%_G&m+U,aOAB8#dh.eU3c!faF_.RV2aUqh4,&X,pmM!=-"J[p*,'2&lq-8AtePoh^t0uRlS7>R$DEC"[Us,?_G6i7CJ)I;0nq&UcM
%.*9'aR9m_6%ph*Il6&Q3d.bK(8M*Wh*I(Xp#0>8L0Z[W<#KKLe,X^!<VhMQ^I$4-N!r!>a6^)DAREUUD#^Lr3/e*cVbBIpU[-N7]
%(1!)66Krca1IU!Te03,40of9h2W]S0CLCBP]dfIPqO)=a=KM!:L*$K/Nd`301K/F(4(R%TZ<hUgqm$$;FR@ibPR%aGJ6^fN#_=/]
%)BguZ'>pKFkq2B<MmnY/N(@7Xj@1_[9/@?1"S!DS?Xu!q=^T*.T`#Z/.aZ&J)qUBHrtX3A<EC-E0=n"sH_SA4dkqB-!\BIa/oZ`;
%cgYXY5oq(6;+l+`pf&jP%_'_?c<@O?+p+rTFXq?<S3e!AeBlAEE&3B0m#rh"RaA6[0**`.Mb1cu19j94'h!R<)@#_B1^OIjr2<bU
%M*oq"=p0RoP__%uhApEBgo?\!F>J[X^'HhX))8uQ$]S2sH_)C]J@F#JR?W&k"jID`A0f<Rbo:r&j39841i8:&K:+/9Yp7SBW5lMp
%Li.B`3AD%sVE,p%"n/'!3"F@\;gc524Jed/-qSV09^6aE/g/_Xke3S3p5YkR(A;`'\RQ`k=p;4tbb't')7t"u)Zj<#gaP4X&J7r9
%3J#1S4DeP+8>8+F5V=3FlEqM@(i,JX@PQ@h3<7<;#UHA]o!F$1@`ICq?o7@#huY\4L%2bd\NXap%"ia+\O+XbRlR42BH+Z.[%L8R
%&+:+&l8:4^<+bNt(Tl3.#c_J32-[B*j*\*1e\IHWTPUSp8OZ"[Y]GUS_5(C8dGUV+PT<@G$K@_DH%St[fgOa$YsARB$[f7W:1EGF
%0"as(IEL2!0<)hrAD(\[CBK,03#o(1BFUBIPrUg,;fa,r#HF5EUAmWqi':3F@2ob9'H`G<1rCH[0F%$?)ZBsY5mmo_(@qm>X_^eF
%;a[=n!^N]Sdk]qXcD8XS$"h#JJra7MMSQtAqFIi%ZD/Jgq3EQKr3YdPRZYl%+[]uZi$%bZZ!bJ#7gid>BZP-0D6/9)ih6hI-"[sT
%2eLVa1Y$UbM-a&r7l8qkM2md7K@\O3_UijP!*Wp%c;:;h&VEKo<)Xeg5%%t1YmMn$)R-_n`W)Y-*O<`dTJQP2Qm"!tZm`kLeNoCO
%Y]f^G,M&$3iFCq-,@6e"*"[OoODqn<`D<jEoU>]n>TuLH2/A,kL+!>TP_pAiVMTF?KBn':[pH#sOa)N_*FBTR0J\^qe*tdW=!=*#
%Qjs-maoRlK:A)!7U<qUrqRqK](d;>Mo!V4X=u;9Emn3<h/R3/5b0M=d1rk,"BNVR1k2\e+@;9>iT(',A$JpWa$XJQ&M$tmDE*dE)
%i`m%S=VUV2HF'R,r%N%)a'jZ7npH,9kA4kP?hHp6)Z3F'"Zco"V-1k<oiWA/F!Co!_[VN#,Y3JCSIu?ZKu3a9WarIJ=@,Y"8]@DN
%ea3PjafI$9:c2n3OHsW<J3lEm23P'A2^p6DOZ+D8RLi;,VFjmn4<]1fBn=>snSOYM8Ei[6oTCV+62janKu9]73=o,Saer%YFM-/r
%9lrq>k%):tG"^C"eVqKd$/CiOGPInf!I>>36,""5#9[]FMAcdo^q,!]DmqEc65BaECPW,AG/H'93D["3Z:-bYQk+"1JKFl\&3I65
%TImq`M-L."eFZK?qgDOH#g'C\$IE^5!Kume9:938crV6=dr]#oKYRRrmqM3FLdC,n]7gTT.o@)q?o=D3(esfL<(sP_]YMmU`8k,R
%KoA%6QmGU;9+D<2U.?IOWG[7tM`&<[7'a\YLM=g@2!,)'>K,#A=lOrI]0!k6WII(+F@fOQk]k1"f1[u:O<K[<[nK;\@b`\Ljoo7G
%-fcTuMN?AZ:aB'aDsFAUjuP7()5%@`%4t-GMo<?(?E,T54"MD#jEcS=!r8-;Wq%p'AWU>dq;-$FJFo$;N.u@>M^Au>A:q["."+De
%5J'YR7]8i0B]<mg$)e/L4_Ydi2iI_t$9i2jLKt6[?r<CkB0Moe-T\@c8\goX+Y\=cO58j.eE2>)6NB:n+ICW?7EU(2Ol4cK?1Z)L
%P2Bs-5sL1&h'jbB2<dV9`O\[A@RURh,MdlV--V[bkV0pMUg9$pEp>QkHCId$A"h%5<!%S2beuag&^[LYZmWbG4*4FA_%$#@4U5Ta
%aheA)'rcOnBFk:l#H%0`AA,c&#T#>8K1@,_K>1_2,lZTdIi%+,dGmmDmgUO.HYKDdkrfTp(VMKpF2d]V&2VqP9U\_I;%3NeW$>*]
%EQg#QSI-NOB^\Ak7lBt%P"NX5_,+1ePSFp/]B,m&NqDe/4Y<egkaEg#"B^J&E^7;J^_$sVk)0C9pr"XqU2RTVGJEe!GO!pjU^sui
%=Z4\P>t+6RS6dNe'p%I0\.Tc4";IuR9cU1YnLa`O2Db`;TuL3bFNB1T6M&V6njk#q*#BM.,CpM2]`eM/b8KkEEZ),\jKlb!oN4?j
%6"AQ4$+)t>4_*;Bf2fiA\`B7K>W&qF,6gHd)_2=:ER1Gg>j7dok)Q=5Jb*k1<<Anod0$17$W\]E;s!O4D%k6gD1QLNLa\i\"bnEU
%"!2,Y4@79A+(YL2*O9s=^omE*Bh3!^U.$CTnh3_YfTN/V9j(^>>9,1j#R\oo!Zn5,"4"J?=:qB8\gTDS]U,3l;5#ib:BhSg(7BrL
%T:1L[1m1&M-P^5XhMsi-3tKHI?hN#\XW*]p:;`F'OT;'921$S=_\0'!e/`HQ>J^:-W7jm-s,mJ[q-^n7&8=E2W=m"nM;$m?8nJ/k
%G%R_h6"eA3[ULTQJp.MhgB+]dYkpI"YX9E%N5m^lBX*5YW]31L-)0kT!]u8k=:!9*6=mSZDojWV)PcuQ![).g/Is:j"q0@$fWrC>
%n[C.2WUb3<#`:(5p)nkt[II*"$eWF=B!TD*U"c9rd%]PFCBSO+#3I;+@BIF6-C!XG@H?@k+D!$8D*WuQFZLLpb.O.6Q%NmfqEYBI
%_\YRkLp_N"_D/iUG^s+)iMB&[[EOjOHSRB?(8)aS<"C3,%h)j^a1sQ+Q:AJ'^o0%)+p*78iKZs=mdUuJ'*In98nqs?ais3V[+n?N
%'Q/_:$WGXCb!NHSXbC2eBJ?F3Q=jkoSeT.17YuH(d=R6L"_*3->L5_T[8j?liP8*c8P`l>*E'U,m!_'Lmt,dkJ[*=_FUC36]:$nM
%7V5&k4]#QLK=Pu8@Cj%r<p"(^HIg>t6;n7(pX4epeHpI.nKf.GCYCgs-sVUJ^/7+K/5U]o@lMWA$!o]mdRto8;L>PZR^:UXc"g+P
%Dud*r?RhMLJeiO5?HJ)6XSG;<9eg?I6bigJQ9SU$!D7PYQN[H:\HG,Kl\V]O@^[4pCSVqE5q/trr8)2-n]8CYGaZ-V$(nkuW.&8J
%&Lnjto7/f_Tu`lHe0,H=&AUY>*2DbC?PZB]Ir;(J_juE47jA[O3Q6i=!2??"J\#LB-.D_]#\H(KLT82?-o#%A._o98QR8(gF(-h.
%3\A;ud&DqCV0!m"%fS\_Vr9e6Po4Kd=rnPd7JK,A=X<&DS!Jl'V3X#=\(>FEhj>;L<<33'oW;g:h2bhB0?>gX^jmV=[k.&hdXn[A
%JcV2?s%_%C(S^&'"fNT''J%t#`P/#*]r'FLPD@*iK^D*!ha-jsPGR7@Pi`&m<$al4nh7F^UhJGX&7r6Bg3#ZR)&\P?.1\G@9-1hJ
%boglQQ.mH:'o<015pTYcMBVV(C'=4C!b:7b(]B:-$Lbj%LEHDMd)l%i9fl(.Fn#!la)$M/Yj`@>`CT/_Q;%p`f7J`n)<XLWAKh\I
%7mu@a_OCK*Aig^9ZPg:`aB<%>DBObW"GoR0n\AnEda>jj<!U;0$k%FTT'uc.%H;H_jX[-\$aGj]3bW3UHifDF\Vu+XlZ0$TAs[R5
%+af_X%;;^MN&CgYW#1iO],[Yg$*mp=VPu;p$oMu)J/`VDir7/FG)HF$"'B.:F+>`Gb`ZPR6uYF"@u2<1di.C3m<CWSIdnXVkQmui
%f)aSL1<+BmNe;,HY*Tb4iP7@Kb@Pgg6pms6NH&&UQ9.9ZI-T-;6.23*oIj>d0RZ7dU-XL1MP(HKTQi8X!?-6*DkU4TC]SP#MAS/'
%muc,AjE8<i:eJu5e]8Xl/:qmkVoOZ3;o)N@UuhY/a`<_jJLVG$KpH:HA52OOl@\GO5]m?`kfSh#_3$D^?\,.!5Qk\4,#Upf:e1Qq
%`-AdiY-YDo"d+q^9L8cu4)$##>EE9.iQeBJ"3p+@+FoEUnk>X-<bb(PWNaAr43b(4MNs63d$ZTkbo-Bs'q(]uO>q$i2#RutZiUT_
%Fk]YBB%`l:(Pj-hN55SAg<*i"[@e[S1t1n_%hN,8VX+A2_R_?K56Xb!jsakGnF.CANPYaO]MQDSb?25N77dT8V*L!n6Lcb[fkKC?
%`t&!Qb/)PT@:Zn%8dIR!XbDco>'sLBV^XcbL\ns1"DB%-3\OM;=IE>.Bi)E$qRn)-T'8GE;Hfh+8C%J?lm[]FL'8e;NU1)lHQ14=
%6q@FP-C/:<&tBcr3kuTJLOq&WYI2B;O`ofB+#D$k>9S#n[,PL>))"s(d'I&"Bj*bk/SnHq$><;C()($Hh5W@><?mV?JJC"$qI[ue
%H]W-*b!rc-APGN/>6F_]R(R$a1Ej8BO:a(5?4ArG2*Qf[l<3Y>'e;QQbV(LV$'o^^#8)1s-rLVA'5;dmPU2Q\dqM<*@N8bI5#m@X
%;]TjckR%C=R.H5J+sDQ#FB44f2]V5A2_]\gdaI7=A3m:18U^)=Zd*I,S\g2B"(A-Cp;5#)E&Od@g@sfD37KNpSH*0s_n4M7I>761
%.Di&j*?"C/h<s]tIelff)q+BXGJ!T](Kd,Tp&3LW^]!Toad_%'^6U;9<gQV[c')cn^HT=,m]U!4qIe5<rUTW^+20gdHJADjB=gD-
%:]0ke[F9J'iLskSMC',3n6]jET[0!m42Q%4$FRk*GZ0WQ;A"8TP@?dX]F:PDB7M-WJqpm?G+sh=(F0\>Zr3>^RlFoOO:)E?:eKuZ
%T#&756&d430'K,9jYC"/km,YmQqC8T;)Ks.YK?eBURm.EMY.[]+``6s;)X>W2tdQuUKP@MY95b-C-aAns"tOQ0eAJ:+TO\Ens#lM
%Xn(:%_iXVm2\N7?(6+[8o,;jm=L,-^p")Nnmc$'Ac\"fa78:_PDaR,H)J\Kf<@oY2CK+B)an.8m!$Zifr<mgKF9!?hUB)CZ1jRZY
%"a..+Q'%t%P.C\$.H?AJl6\iI'&u:G$X"P'a/H=P=r[n)@?Np)b33GL]$S&YM^B_R$Nd?<JC2=jI>]d,mNffbdi.6Ta:/=?bQp[E
%X7$',C3#<q=DS6pN7O1["\^=XdFablXO.U]K`GMJ^I";6'OCF[_F/g&?(&N'AE!@p>lj<?J.+t<i.aQg<g8V!o;hP9".Cs`=jgEJ
%\![p>6F%AJmq<B>TEA=ZW0u"=7tl7XH4>g^,fud7$n$c^BV2%hSp;q']!g7*A8eH5DbdO;Z"1d(#lTVpXBm"B"MAV[<f@*T6A4l8
%c]k"iCHlV%29Z&rkUdqEJh^*)lP1R",Y@:fp&4SYP?db.*3E<Fe6H+j$24Eh7YmA:OV=?L=IeSm>Y>%EZ`8XD-pS[$m9'fO[G);*
%6o^,cI85c</c7jAeiP&b9[Q916gAgb/5'O(KWj[8Ed1,4#"'XgS!K_%QG+B/S(83+d>`'7:8VLr7ArH#XRG#?Q_HSXH?hXci@W2'
%DhcEI[3^o<`3+c3`XE$W.s\=5"@o&%;0kE9<\?'&dN1/Ibc-7+UX_4p<d:-@9oI07`]+\dKqATV:22#np>HPqZ;b+7HHe#J/s=f?
%YW`II)0S/tOPX%=lK9>RkcL\.kQ)Y\)Y+DrLk1%IX#s47L\LsrPscT9ANu7>2TVP%Bl[AX%D&L4oq6O2bIIZf&+j_j)G]ctM*[=^
%Sdm_K>De_]e)<`R->XLA8@;*akd'Jrp0<Lo87gX)C'R]l>>d?\kQ@QS*b6ZQR`It<R0;+iOquBCo5#XW[:g#o<&mRo&X;)['uFWu
%+IYP'&ITU3f&B(tVA]'lAGl!0$#%Qa`.37eLIIuP9J-\uJ2/`A%ZZM1(&6N@NOEtq_19ab"au/`=aVl+A>HSY7uQ)PIp:`(>^;f:
%e?SL7SM]ob@<R2H$R'[M\.Ef]Tp]R13\;LDF;t'/0M**LG$2qCP])2)I+(dOjqN^u3f,og6r5K!"@-*pm:995%SPm*94g`E/9k.^
%U1'jjJ5nq#R2`9d+_4b?19"]tOq,m]db"E@?&)[6O9N![CUV<eM"h=!EFj,Ycrq6]VWTpR.=u0'!Dl3gkI;,HM=C%_SgaPPq/CWt
%hb',&@9VK)]Je[PnEoGka].O7:Icd?-F&i'=&A$4jPe%nN!5^Z1gc]-XJ\)J#9^\sAkQMqZj8<#WE9?.*3-m)N_:S7&kS1(16F<q
%[12gT0DZb"%$BdY'uRhnPo^-1QcmaQXG\p\BLoF==gK';*CuitF"7:u8<gnQ*9sUP"\>1$\V-#B]1WsE@MM9rX"I1UD^1:1Mcquk
%oO'rb;ZWi!T=6A/#sc[AU8!4i/oad6?d/i[:hSQNL#?N-WZHe$p__ADJLW/s/T.r+8p2CDn]#Cc##GnBNB<0d^afu>+:=#X2b.Ns
%JM&X_0gs"cC,h:lJOCt]-*d7+AV!HI]$<X+"do1c#]/>Aa)]\F/QA7+;L?iEMUF,814NbYP4_fZYKbR;E&&VY%TrUc7=hXt1dfc(
%fQ*/)]e)K06/RB,_?/L32,.J(P')SVYZU>L(jO*joFBY@0W'Cn'&Q3nE8jqR>@N/='G_HOl%R(+_sZ\]f8Y1VV@r9@Br92;]VEGD
%L9`F8Rb3^?#>>=j3gA^*"BB'37"lIDTbIe;>'_i;]n/^lR#IT("lHGHBPG&6psc/a<8'W/,s\QKCr<!H<0="fNd)-bX.TfVa!$P%
%EgORhfDbJ7D+DC,]YC[6!XN&a4V%0N,R6b+I>B7R=guC">W[HI$tLQq%<mMDb`'c0A,tlEFkD>f-4oPQUX:N-Ka59KSDo-(%?<c+
%0]hBT8M'[\8JBa,D_UPp?nO4Ac2MmTC0s[1UI"$kfo]>j.Yu/[;liUJCq3!pEIa4C!@eNd4"MGA=kW"7)6iFu&iglkb=FA+`(W.&
%JBjo:MNV*F*\b)rHdMgI-)/Lfo`Wt?1/%4<.dqWEmm9H,\2oYD0:6%Lj"RTBFK=$pCbK+9=c&@fVe%]H4P#S:C_iDbEZ'BFNX!E4
%)]TJinFNs$C*dn[l#jXcd],ooR.LPabL0ViU9U4oM,Ah3NsD<YknN.mc9LgIGNI_h,4=JiR@k!*a!AQsA:$qWZl&HSI/6MeR;jks
%X74+p$kZSqiO"o)/<cqXOk`9Edcs)3eJ;d#Aq:/k=7_GdTqU),HSG3%TS3otc=LZ8)gNC"]*A@uYF7FCY@LnZU`QBaJfBe'..2dd
%.i,&e1AD!Rp7tjq&dgP]bk`)*TthnkG&(ns'5BZ.<qm7MC##=E;e%:%oE*MaoDY-o3E+;?cSNT,UuXR5osq*UCi1,Vb%<K8V/rf4
%R2&4CQL2De(aDKWMdQYio;j8K<ZGP7HA4/qho;15H+=LE]V@-He/'-SNR@f+YXgMtAJr+-2I7SX"J3a$9*a/N&%)Q'/LlZ5)OU/l
%8VY3C@ef1=eUWhS:>mU56s@/a0`[kXC`+pmcW4]#Ap=TQ;$+6BA:W587ql@mUVfUK\#A/(R]imW/Z>%'95og/,IE,`[-^"0RF$"!
%%:7F[7*V`?_-5=S%,S'DV&^c]ep&[d=]r)lW"t^p=:!-jpDui[JY#IdR^C2pRuU1mWIkuW"t=hl+"P#`E%"jP-QoD<fkHf"P7O&Q
%<EORs0b760qkTR)_X&Z^#(mVJOToqORT]>L+q*Jt+V@JkO3ncCC:YO=#pc8A_+9Ao(5N'A#]Pup='0mCY0>\E\epTgZOG&&=M6":
%a#u(-)SJV^'DUadV.u/$=pPP*I0,-KYKc(:7@HfI=B.HQ>O2'ATi>:9V5?pLUt$[;;PLS'U'_Kqg-b*9D64%5PgLXpPnkrL^bZ\$
%6tmho0[[1$iL\%Y%V(a8,!*`Xd-UV+/Yj.I@Xal^/2;CmMM(9GYTlFcTSc2]1bG8hUJC`NBP+7VRS,.l3P!dWGlWsrctGo1qs[7^
%TjffL%*4+Ba=<]V,G\haU4o#'XqQ1c0.g@s"DEM]F-o+49N`KiXSs;'?q;VX1p\6i.BT\1"'C?*3C-*b792WW&b,&uiL?LRN#'i+
%!9%I**)bpNLJG%G1EDhhnh`)s$%,Vs!iO,^\jPq@@E"lj4G.mCq/K#W6T.Zh6S(3qXXb6-W*nruSsEf8J82.M"&,%6Rf.gm"Xj4L
%h4c+UJDnquM3t&Yqc/meU6qLc\G3<o37SOMr)8j*/!NM6(qEOXESuH!>*_)=2c_N.ohDhTjb=D!Lb+4"T\2+)DE5I80u]*fT`!7i
%[`TMGO]>C!XJ^a_bkD,j"0Dt]cUKl!Kj7;uJSe,PN[s?i5OG=/E=tBbQ*[jJ/#LX%!f@c[FibD\FkW*e/%_&\(TR\U1G#+CF`M-e
%-Qa<l!mM$6;-^h<++mmr'nJXK_P)1BZ=R]`<Xr1D7;K17PUR"9Wn&QqfMC"MfVKJ"O$o:EUu!B,UD_H.L=<(m_P?A]U"Uta0$LH(
%8V%!eC+]jGDI+h"bg,ocLsBUW](!VZ>`KRDSA)mJGihWK"p:Bc&mApLkgpKRA\fEp!^S,ma&9<kCg9QM$Smk`Scpo"8*r?<hL3qj
%m22C/"ED-A,?V)WGF'39Yhd+e5kP+%ma0q@KQ20c\VUKQ/]XnbKZseUdSM9DQ;i17)%[MH+?cdI_6_cKCq*PW/VM6hXO;*K_$,br
%$e96]4.+7'c8_l8f5n1=3l\GU/"((1:+!S!nH)Z?K)MadL;mV@D[`Yif(l.)n\:kR\Apc`k[7.W9Od@QaVJJf;^8Ye,Ja4XPIVR;
%jcYlPdrEaT2C]QYU==!V;3jYq/D"]`"b&et(<=[+o&u47Pe$RH$D@H-_k\JsM.*6tV6j=G-.^)%#*'Z"W+O>Z'g5,2?mHK6_2R:t
%=i%)VZBc+(7.JN)2&fITab3W8!F$p!^o>,g$&1"ORYe?Z1.CT]FXmb/];@'!*8p`ac6>TA62)ZJd,gXP\h^Hu.>K1c)TO,]"pRA'
%&%Y16bBt(jC3h.KV9!nf5oV1(A8Yi4?do@8ZD&Q=EohX[%4)EVi0fB0U&tZ;_iSO`N3GY!b$S=0"Hlqqq9#G>_V1J.)O^<OL83AN
%Z:H\N'd\Qhdh3l\V-Dh/`m4hkPI/<C'Cd<"4gB^*f$8N-HZh;*`/"g(UW/H1$IuCqZ.ct2*BXn=.nY&Vem18>MEjLr;?AQ$033LX
%rF_3)*?6Z+Wf5Q#k9t:*!tmGcdMsYiAi$FCPV-hY3)O0uZ0?$5@5!.en4^^Pe;9uOL*)V*>lkaNlm;LZnekHFdt77m4/jQ3?[@Lq
%7+*[Oq)sK`l5Dr8F(S*2j#L;oN0g]/1(eEr>63[i,B&NX6f035hb6Y^*S5-m0OIZcmt-h51H#KGNVJIP[dF+tJ$Y(\-p\:m,G^5p
%I*qUMPB<36Tcc.:2'"V3ES<"eFA[u"G6C`b>8J,=Y\`S$l:boL\AG3kfLmR.1`"n91H9+$k+k`lLL':pYNAfb<RWq;;:TXV2%5@j
%(Q*duF9FU_O^E),Tq<!erl#M=&C.)7fs$@SC`=[C;K93KWjI^a*<0UGounl1,%UaSSPm*;\+*i?B@O>b1I?(HSg<@[K]6BSimr=E
%:V9\;#MRO]@r8AA>$8^>!E`KJ5-p*@@R)^SXHc0W\ZB&q8D_f51K0-?qh)hX%Q]mMZ>taSBB8"Y4,0"^**8%ae5l!V:E.WN;2:4!
%l-/+2h-sM2,S!>e!SDe/`8UK9U1KlS*#ofO?Z'Sq)k>@)#&?2WXk<PD)U9KL2:@49*)9[f5LDL/JQ8ogD*o24/UaBML8SX?a.4oS
%^*BRj2gjT*DHna]Ls\@t_D2+#CuO.b.JYd*E+3+Sr%kKpk0,$C]i0V@[l1fRWc3Q*,fhj?E,_8SfN+_c<i!blRde1R]\H*nNr1+7
%O_flk*Oj%>iR!Fu6!;:)dQnQW67GCI[m]35D]kZEk6ZnfAHMOZ-61lWZKuN_LYU\q_pM&mYsTUuqFhK]Ca#So%#/_`!c00p&qi',
%%Nff1%hA&\`8$n)]ELrl2Kj%;0rK+_%c3)__?W(\-mjK`%rQ@Y%ggrKeDTPcL_>9a$kBEl,CGoH_*PJoJC4s?E,H-JlU20l$7ps<
%/[j0eg`$_(l9Pm)nSh/e2eqi]AYo[`B&>&NM_]itrL8puF$ht=HHk7'8@frBkr=Y:Em_#Mi+pMj*F,(:eS+U5]GIkd#!FpP]&89\
%l+tck?!@Lt3/J90[kRTnalJ/(*Obn(`1hf>%t8J\C+WulT)$3FQTD/h,<n.($BX*SJoHlf3KeM\"Q;0^(["kOE:1!NqU81N%`=Z*
%H5h<Pncb6R](:Q<(lJ1sFFnJ=kghs;JoC^n8mZE5i,%?@)*KtRAn0B^L)q>]m`6G^j:c-t%qP:'q8&IiVG=YkK/9!<!M\?E_%HI9
%4Dsu2*=Lt6>5?"^6>j-G%o0]C,7IrD_6I+)RVU9&A"?LYpC08FTc@%"%=2t[JB[RCH>m>:`QH\3H>kDA+K-7Gi/Sb_5U1H$E.E2/
%%,:?*A%C!\kksA!9^k;A3^5T-Zo3BN&+6r/=8"./3!)UO-/%jA,>LY:XRh(.6F,!=<ISm]NEtN]5I`(`DG>a*glknrT$`1S7#7>-
%ok(:GN1CH)E3+*g8WPh&i#jRAV!dR@i)V0Zd=Z4mGA$j3g._:tpqbROFae:X.`(;9+'`065-FF.YFj1p_"CX(L8SgJN94ds[hut"
%4ZL%jbKZ[bB0ah+$.nCWakKCLhU$negmOlt4h+Qk8@R$""(Poee!;$pYaPXPSK8bQS49/44ZL`dge`)[&+3Ro=8b`%%V1p5%>,^l
%4L.Qr51>-ol5JWkd=W)4==eJ[o>Ur.*'*$aLM'3>Dt&CSL$%4L#=f\?kkN'<%o*>>C1NFe#:Jai3DVR2i,nb8S^dJO[AB1S++1bD
%_[fKiNOcco+.S!_\eD+6K9Lb%1$<cB#KI)uJYDUd1NtR\ElJX8>t,]Hmel"'3t%:]nq2SI`n8jTIW-hbXFqYmi##AS.W"psdB$Q@
%G(O\)#SaQXKO^u*<\b>AA"d+gVVDKpQ$:]d5nFOR#[km4E3q*9X]?4A#`_9.cupcBG@^MOg_iC;WK:jG.mZ.\Bbg7L5re'hPm=l6
%KTf`Le@$!C3rl1p/fb)RQ$\t&o\ajH6Zp9V%_j#E>+HWQY\D?nE.]r,%n*o`iHE<]RdJ>W`@K,!-O.mkH*q9kE!f^gK,,Fg>XUMA
%_/mrmhJe'Z+I;L=N=qbKOmDA8BZQWL\g7JL4GE%.SIaM<R0&,g`!=Sj-h"e>JMZ\\)_uP"E)n)0?iA1RNoiSKWq1eJJjK./1-TZa
%k]T`@54H_.l,'(qLRl8@'07'lD&B#`?0T-<F"Hn)#+g-K^9`CJn_=(Ukt[9#hp.jVJWgP0r9^'ORhT0#;qI>0cG>fN)m^jpk/J>H
%\$l(;&p<N:(p+7B2kH]^%!UuTI1Lj1UP5Lud.l?g=iMP]8$F.1DfOr5s.(H"I0:9EZLG4lCSh/gjhVtbN!c)>M/[i'(H<s)aQH5#
%c>'hR#b5+iZAPG6JNHn2LN^Z?cL?n_W,55dJ2V3OBO_*Vd7n#Gd`_hhP<.6Z#TO:ScnQ2bF73)4;KaO/1jCs8^g5i+BL;o_pLV<T
%VZJ5_.[!4^'f]P7Gkd"#S4,S+"ZdAX9jjk5ihQWg231jFgJnH/(H@VL$(M_o?lA0%i5D!ffb/k"$'HR^SHta?1t*RZ,&ji&ZBV:$
%JMY58Xji3C#m_=_Dp:].gshe"B:T<ue?^tE2FQIsT"tYU*cP9l1uLD*39V>bs1dXrk6BZl*pGfFUhcb!m6'<;4_.:1L'O6RLe:(Y
%0F@.JMA#<m"-+./YA\^%eRVq=aodY>Z*N3."7B8[#(pO*"4!fb.52f^K&fP254a<24@XrT`WJsfUR]ZM!tNdVpYXcqJ7ISXhssME
%mRU=c6ut]t%PWQ=6A#K4YNjNi7KX.TJ\3mF*cS9P#_WU-E/4@0)Q0,2*%g6_gsCR5dLoJepS>I@[Y5_Yi4(NE4P8#2o9lC.m53`X
%Cfl>ABttaW<o"W$35/=4><3-Oq);HT[:')K?4qHjkq(adEh_'+(3$]5ju0:li,3A4e60T_%S3uE/E$0sK+U;M/E!VX+V\`Di92nY
%D%%2!a1\e$)$r9j.JZNp!(RPPgfDrR^sQ.UXkls+ZOj>%\5Ik;oc5LY3sE,mb(mX+!,!f^EMieL$b(iT']<dnWVVn^SA(/q/Xm"i
%Yp9YgSLk")D4P'nhrFcMIk>gf3P`a`aeY]"!uq[L&YQr@Y565)Pm!W?@$g%.#rjN7de?%N;6+&V0m&T]S2?e\44nM&PP`as=\'$A
%\::=B)][cI$;7t"3P[(C<:l^bSB5TY;sqj2Y+b)8nUS5HYVLI=Q.X[!AE<h^Zc/;k#Fp?omK(j`^juh@]D70e*,j)0ocO=VQg*Sf
%&:r=-M3\@><`jI@%QY1]DT7!Z%1bFETLEJj(_8V!,HH,P&%KWcQ[$LPNb2k_l9*u3%B_8?>T46Fgp2Gtelbj(=MU=Y`miuW$TO><
%I%+6RM2ZFqL<]kG"M/E;Qn&P(6E*S5dTO@'X4#hAB,5Ff16qg$]'YtEmr$L&1Rpj<GXDR.4&l$mPm<iPT*3n0'=_(YddEQl^g/h_
%JBe;CUd#L^FXD'0)Tp75@01(@Lb(ZZ#om'9me>>$^sSmXIN'VQ1c$ed1P+Qu[XJ(t"AY2B`5.uNS=,*glT,\=+%gli_ZUIKeG\&]
%'0(`6*4ph0S.QR#_/,LS+X0OMe!\!+:>FQA0S)#UXbX7feKqi9jHTujkt<(eD@@k2bmsmd[p]>N4s'gi:'L&fOP2KR93+\_[qjYn
%J^a=P0s"@4N`#>.="8/9G]>[r%2HAS>ZUI><J$Wg<7i->E9>^dK5<-o/fM[WWPH2'P12&u3;Xn%FH^f8LA'3STE=l5JD`!o3'+1I
%$T]"^D!kJ"3MQW\g/_Hl.ht$jO"[S6i#I.@"WJq1K^`/_AN-R'Om&of1Jr^U<E,:OZ5Zd$XPld0c=Q,)9ZB60T`Sj1(sB*E'f]*O
%FgI!$"jT.a^&(J,N[cl^1,(>"QBuThW_NbY\&c_f5*LQXF_T$A/oV*-(:S4l^`ho&1n>"Z>CZm"/oY-s/Me2&^jfj30J7<dV(j!o
%>i6ME%4`/QP0g`c_Ops#M`GN.'fa3!p[IBGi69DH5&[1ta#S5V2GE&MC<r]qmnDYeBZVb:3.`#/*B$=DpaEOt3Y=?'[u.L2'0(5W
%FUU0-i8hZr4[Z+K-NH:&mMT!^&7C3K3YaXQb0Cmmki-4/cXjutY3r0&.i10T4A>&*>i9:(7H'O?S81RNDb&"AaOq^IlYPKm@"$pe
%%@kfh/;B])S=^>PU[s&onbq>KH[ILh3)_0gHZ&Vo*V8]$Rppd'g7d:lchP;L%n#SNA=m4$OC9:qdXa3\:j65&3cHF2PDE_d#EHo2
%H9*)B^mP[1XWWA^!&dO5"PN9qF#@\:cWL7JFnms[n@N'(kr\Rq3$1+1PQ9ueq7p]:_Xegri"1;lRLVN#'%jEHEPi$ArhaHkpqRbZ
%AI2W)"*ZouABP4<AtTH_%NNrRd/BU>a0[4Vr0@g4=)*V@VZUQ>PFjdUi-YZ#$T]:fSjCPBd"*\X"6^=UFPud&;.VuU^_t.qfroMU
%E6Uhkig(&oIQRp[3u^/a!@G-r2K5;iPm6H,%33W'n/-!"n>hh%XL!I>DCj&:nB;)sk3BH2[BY8rg[iX!R+]:FG)gs]SIO@oF*gg6
%)&kQl6^_CBCu><]C1IL1Z%8[(U`LI1E5^_OLGcTW&TPm#iW<ajb#6Qa^_+e(3NZ!5a@g(b6"^7;[M.A\#TQrS%WUS28&Gu)8coP3
%0To:PAc[\`66LH5J@"OUqNV/qfj5b)$LhYSB++u`?m9@?D]$81lPd'9)8OXo@q#l)Nk:(1.XG\,#FQV(Ou`V'X;mK%D$duc7F\O=
%hl,>)"4ZSM))Qn%Y[RQdF%n8lA,f"=5H.7:q)A)o5gR%'reA*cGVc2qc9rBDj:&[39@:2dhsf<cQ1g\o>VgNC=MKu0`?Mc#l$!G+
%7Qa5Vd8dHXKWV'-CaLH&-iHMm;NuCRDmgcr[jD!-oWgZ.OFG*rC_PnhGX#S7DAg39\`=n27P126b@Kf5L>*QkaM+oud8T:?hpjV*
%+(X9M+)CP.lC3`uWNAkOG\[Lq#1GLs3i*%ORD.@u<"WX:Acj`[_=W^&)BrC_mm^3o[M"#+kmOYbnU*9nGho%g7a5r[EFnr8I^?>l
%c6V:LR:BMO^(I>0`^_EO`l>V#B)%,<]:&%?pq97PKB_.T]b+K>+`5lFYq%/GAd5e)-82WbcKu(CPF4m!;gTa.9(r-WmB*lMR<rR]
%D`%&1#.6BnaM'U3]pU+cJt3@[2jtTu)!'OeC#7#2'hUj,&?D$RjPD;K=H[%%]qJ82Ir:XenR[9aeOJoMkQM;73j3b6D)F5ih@*0b
%.m7?0!?=mcEX/j.E.;Wb/[ICPIq7CEAoH].V>->/Rj^K.;n(!-#Z`M/aa-d1'-@I_eX"o.lPDcp:jZ]G'43PseD=<,ksTHh]l>7E
%Ad>Y$)]C0;B4c'=;qhdsDmV331:Y$^\2:LsbhV&COc]pr\\2EW0N(-F]jZIGUqYsaVNFi!=Ll*GbqD<`#IcWq[.7hHmB$r,:Fin5
%nU'0ki:\M,@5`l5$)M)D)+W91]kIp%,?/%']kNph[$#e-.i)JmEc7CSX@1^&HNOQ*qR')dboF!MrCZMFBX=?7Cd[VbV?7p`9&-PI
%5")uGHd`Eh`l48!gSkG8<cW*^8&NL:Xf%sNC2]sp+^@"*]pV]kquoRWNG&CfrgT=h)+\3+IqSIEk;%+%0RIl6MXBl:EdJH(Vqp+<
%^$1G)K?2:(NK5B93OlaCnWL+SHc&W'C:pD:-4!;1DUdNV?lA[2p1E5m8S?9(bfes[e![mXh_PdU_sC*uT-ToGlj\>n/;'MHgMt[o
%(XJJ^=m"$VW&&cVo8I;=L>!TlUJd.sC2Z)!7*c(F\'f7uAc56g%2_TZpZU,`#&:$#g7,l*XbI:m2bRV1N"'N?U4gYrDUdNf1ZJF=
%C2Y6nN"HS8Dfc$YTFJ4d>"LR#M7n2g@QTHL;U[tdLb5kj:a\+g3jCX&H#Gd]XMis`l'[^lM7q<2b?u^k#%Xp,*GpVGM<hEmTG)[I
%,seF;@W)J54MeUsfUI"30"@2">N6$pY0>aEoFn3IB4c)QY9Z<LR(X*sc(M$UeD:VU0d1n]mEN-q;MYOd2jGQQT.RN2<?h2&0Q(eY
%6_E2Wm>Vm5O;hqQ-6.)nQHnlW\^0AGOF&cfgpqAnmS-YV0h3J_k'Y-5%<?Bo.#$i=gm\u.NMKRfZ4X5*gtm7gqf`&\+']*W'rWts
%)fBTV,pjPj`pM#+4d%UCDJt^,/nVl$gtnKE(u!."9aA,:Q.d0pWGYqJU%X5W7E1EamB%OHT2o]FHH2;?hTXL+ZmD)Fhl4;We'HOo
%cL$&S90[j&r[01L/(1]*&@-&Dl9QaBnG\+J;5M03fS2bJh?r8`+9Wl9a9Vjj=qQO71>Fr*f5`I\Q8C-je+-mc-3i%@B;8lU"^Y;h
%J5NU7(e,os?6YLXQj&o)*>#eMe3+qA0p4TFb^:ZI*jW@;+HI8b1lrD,BfIs(B*^(^mQ'^fHX4,W5[falj;t]]PWhcaI:FpNrQtH2
%\lBN=1ia=]0rSbQYtZf`;*=6tkq3D*Zc.(sd#HSuGaOkOQQRL>RA\mrqM:rdB);p8h4ht>k8RT@(F6*&k+48EoX#-im[X@3'f[_r
%$)fIWHGWcH2NlN3+aq>7D[=6$XBH4lM\F2HauX[CV:\Djfk_$X(:5=6K7'B^GqiV?]LX.QV([am'F-9;Hr-7@+J/8e*aLTpiL?MA
%5P>buA"'t$B[OL+OBgR+e;3b%^`n8Ih[Kp!5i/FM5i&LLA1C$5-@D!='L)b$l%69AZt)B<<DheqV&dg,.0]eG!*_jmd8IK4"'T/X
%UB<'QBJ^D<fO04Me;W">-?u22"SEJNMPc`WZ6E],W^:9AL5NAt>=puK2/UpD`K<t4ao0U8#=+@b5\lA8<7(bg?MckdVi45Kij#SJ
%+kPDU=qLcPmIpaAg\1#$Gn([3F_f$4;1K3^Dt+KI#iaa?J,l^3J1VdD<!1unUb;nK'KL=(M)a4C8SK%+o4)&+[;_uO,>8V).Zh4l
%C.U==_(L_YpB-4l(?Hg-Br<d3'RnhBpVCHaG:/?fX(\bM1IOBf,SNeeA"0FB8dihm;k&"h@DNW#U&q^;qaLZjp]Cj?7Q;k?ko/(f
%TIGD"'9J?prO@B:Ku0Fhh4g&:cUL.MU:qce7skARkNK>F<\Z"j4u%Uc1CEhV<[Ern,]TcQl3R/p$[>"b6S.18F<%&#R='d%/`[/a
%<hMWH72J0&.LPOX_72i(6b.iVdq8G9J_N#fMj!YEUEqagPEjKd0D-+[,gcZKEs$WK,gc[oj(?RGXq7aLobD-lA/0pSJlDg"FYn,!
%TIOLarF2&W-^#,HHk<CN#O+T)V!&"+SC)s&!4GN:AME-UdN^*a:mEnC^Pib&ViP18l>QpDj*49QIhOJs)<oeEU`TWrM!b9JMms7;
%Ao@#H'F4mj0."jk366^fA!pj3/P$5r(kU.%8WK?8KS0Rq7?F/'H`dF>6-t\T#l''K5a"96Qq#.4nmTFnD*7t=_j<-4H-t,9XJr:B
%LGZWu95ak^mdOm\4ng]&:!rjRS_fkdW!\_$/Dm7<HeL,!Or3E(n[j>p@X8-e-gq0s\&2.,q_:]]^fCj]AjQdA$6aDVW.@sqS^/-V
%3hT;q6qN#CU,Fp9U^.UF+MBM69QR.bAAZ:`!BE,)[IL>/nYO$,b/cm:-BcL_XC.A!$EDp];Rir6`n9LcJF_4"=C)It@1W^$aBM-^
%/'_SC&3'>'J=j!mcIlNq^t+)tFPNB#TI*utoSD/>EuDCn\l`P`:9;V0L:PJ:\BpD3&D=Zd9gD@MbM]7+`J%g.7sYX+'X]N;#-0p2
%UP,6/*c'R;,h8*DRP.ogc(nnP\Z*ZW[Y8YInhr$p%cuq[k-2o3mQ#rLXg\6j=pcqt;bp9N8gN[KhO;,p"Gl=i5XH<1''*J;]Y(Yc
%*eGEfVA,^1KZkip5&&%B@('J?B#6br6%7Vn$IK_/47&Y5BJ:!V^qPb(iZQGR!,OFZKh,hM][3/bTCeh:biBnZ9mR<S'ESo8Y`K(W
%[F$S[^q*?9!)V`q)HT7eg-T$bVGJh%?<RTM"A\%Di@g.!l(sbh8:&@JeIBdYRMP$&6Y$4sBar6I2GYR6401"$%L=\d;)06/4GE\g
%1`%^tJTOTt/_#iU0F9<K?6e=5\P=KrOlA9\YhL.9NG-_fZjZe6Y7^E*<QuJga5^TuA_\EV.jmNenB`BMgiqrbDI"Y*<`L&p>B@lU
%L9k_]<Nga>A$91o9FfgQJe;5-(/3!65Bj]rD]!iM&t!?K9tIfSd6oY5A#-)6S)[a6;7s2gR:Yf.-W:;)mUh<Dbn[W$HX3:BOWS8Q
%$%$?n2&8V,+>a?LlAB?1jdob40'9%@:h94LE+dVE:tZ#PY%j+*!#&MT_inPh4qp"9:OqcK1nF]s%B7[kP:F86AGOl!fqT[Z/W!]3
%jt>C_;pro8C5T1Q).VE;^2E1>N?JO3mFohr)OUbh]`Tt>Y]b8Wj)n+\`3@W+q#L3KH#.BP2tVj8X#lB:)_`@r2:hQn7C*u]Z?.EZ
%IO$jO"X8^LTpDo#]0<1rXi$WF>KKc8\5R56g;75K>Mq2SO^GT05Vo<\1n#R&>-egN8HN(_WJ22V!FTB.2(/oncP;CcLdQgZnq#4L
%Gg>-!i*IO%]8'0PN%$(*7i?MG==\p*@7QKmfYG,WR>!0+HiL+X5[#Ph/5B],0=i!98$GIkWY3I*Ru)[NVs;8:\g]'rW%34>.G4hk
%WQC$7gkC;qC(rA/6OSgG&C]9#2c$;j5m<'MBP;U?Rg%?p<3):UZmThfZth10\OBEsc1ibGY[AlC?gu?bIek[F)rgMkGP`5gV8.=r
%d#K=7pPWnhUeI:+/"*bj^,f>;4[fZ`Z]/ZenAi%NX[K!aM.4M]b4q.E:frkf4R#&69*`@I3`f.QN`SM`0(Bkh-h^)dF2t@4CrP2F
%f*(Dk'cVqrdQ.NBiC1!k'dCOI1O=[j^gXWJlZq9G),:sq?R(QDCs+/3@p$<6M-f^!bQZ"6p/Gk0arhtV>6+&NndTGj08168?rn_X
%mY<O?KG]+a'G-D"Z'E:Q3O6aZl?oh9(B['8=$O&NPf^si(!@>]K5G(g3R*`Lepc0HHqB7aa.g0VLS0b5g4h"",#/;$T9p!%k(*]!
%\HrA^L]Q*a`0K?^AaeHDj>O/WiHI`S5LbT9j9`/H]E=oV2.c[/3Rm/Slkqf1-5<Ro;=%.e36e=2c*..fXh?Lke:imZ\li$-KKUAs
%'*TKlR61.c/Yf#.?]+,^Ya@O'KqKtXFa#t#5u<YtdusDN38\$/"+uuAag2KdMhn`aGUlbZM>7g]arPYVX5J7g0*qoB>"@4J#V7<Q
%SEe1,6%[_s">$jXb+<:qj@b8l$r`?$goqlVNse<:FU2F0Ti^]Pr/qF)/0Q1:9"UT8TbY47j[1s.D#u5HFq2BM#lqoJZ4I.*i)0he
%ckt6.HC2Kh<B=-g.7%DC8PM6N=":"cl4E+eI&\b*ds3)G*FLt%$-omS("(OlW&0D1Jh>E&lr[uW0[Y0f-V@4[J,rP:Jo-oFK`3_4
%AXB=H(1b-a8,d6'/2W4Eo(DDRg["7/+S=4NKYV>^TTAZF?H:hg(Vh0`h"d60Sj@;5\t]J`?mWmq,;=pP6Y@E/($o^X2INom.Gi6n
%,uJ7+,7N`XNbM-7c]]FRLFj]07`*_M1O?8'1BY`1#!g,RGHch7=tiLUKCbVp"[4?J8sQ>0P_>U?^G)rp6>tDb?GK&H_d0'(?VTb,
%Zh5JGNsOe(BpXtk`_FW!6.Xmb@(A`(*s+q*+CU<cM;'!;E^f_b?_Xj,j``/!#Vu*sM9ND=<`4D.7`WHC1*Yu`,64EU$u4]4(PqB]
%ft_,pln7uSLMis2J/$:#(BZ6Jhe=)q=+"5_NnJC_Ei>oJcsWS;K=E;g!su6?`L=!bQ+gU]aYJggk3*1L6H4>ep;;'n:D"cu/%hj$
%I;1^]WFg;e\+%B*@`khD/(<BuXB&.qC\C05A<JNt,WJRE"CdksFtCa&]Edt<P#]OF?+r.D+pkMoI]4"4UYZ,%.6*dKf2rrB<LBEZ
%L8HM(6\1N28UW*WMh9JM2`<_3:&pV&,0?Ds&&en^<o"8N.h"?JBn_J,FI0gIM;mLX8>V1[;Y^shGRF3`l>g&?1jPQh@PLKRg/R$)
%K$g;!L/S@J+cHh\B3*?)L@l`[$fKlTI%qmLd>8R6%,<4AWQ0SW6YTR0n4OVQ`Bo=P*DgCk5VXNAIhbSRDA@q'9F=\\At(uWfU,DA
%%X_KFDa7&<<KMGC@"JX%jH-6JJ.Su8OTZR?4dN*=EMg"t1i'Gs<j5]QYThC]PX6d0$h>HJ%Qg48[X>V@!*DfX>Eb1)r1]A'3[NEa
%,"AGforX1D1fDjOduMj]#.LB$ImQKXLr^%+h=52)H<SZVSsIVH+[BM9jgRV:PI5%0?rI,tTMGFI*re8TVap2.8u=bE8J^Fp,ITS>
%Zf*0[8oQ*1ZFL%:WmHb.GCi5t!HD4FCkrj=eJ>rF7I!.l:F2&=E/pVb`&ZpKo:dd?M57u9_9+#-3cTf\ZR;Q3JO1CXAIQpf6o&`B
%A<!;ufam"3W8bt:,^V+t"jdklX3h,V30Yt&Q%dnu,orMo=/1GZ"9_k(S)4/Z>H6-G"em%b_-\P"KST(#Al"Oc)oB0rAK-)%lI.o,
%'WkbBo/u_Dqk"Em?j&ahVNLMFcrECQZ=o[mL`j'm_L^R$KNdVS3Eu%e:<KGj:hXX?RGW1>'V]6%4^uME!bJ;A`+=rH@\EDs9*hG^
%N@all-";^*ig@'g8dQ@cj#j=l=U<Vo-adU'E"l!g*g$FLN'YOR7CN8_i.kiLZ;nOLBQ(KU"P']l8Xp$68e^hf3)a@m#9Y%1RNb4g
%`<-cZa?Q(t8'e"D-I)g@%AqOdrfmD)NDMHK&@Nsd4&>3#,HONh>#V3EQ]gB(0]$ITFe)&?Ybd(M//L_<WfFt2q?Y;Ff1BA]'iqWU
%)GLG#&D"8n%S'6.,Fg80\j^<W6?4ttL6;.ZYh12"-4kO*jdcqr&;ZMTl]X%AmtJP7,*.MK&bekQ=mPqdL6=!Y7N9egBd&n;$]6:)
%mSd=V^u[[e3?p;/+B:]?M\Q<KA6@,o>@WW1DJuN,#Yk@+E>ke@YYH/u!N`(g.d@>T:WG/='S8f!=GFXkoJJB(68M+Ef1fhh7;Y'#
%]U7S$)fHZPDq7NLl$>JM[d_=!j#FjcP$E<TU'<6-]hK+]BEs^N_?eEkIi:jcPGQe%5Lo-69=CfG&=EfUA<GP/+hpEW!s>rJ27TEY
%C#Q(3A`,E_GjcqJ\hmK;lCsB\p<TB7H-Yt!CEpOm8_mGfVgoJA@Dr\G=8Bii:'>M9TERk!"o'$&.s551L#BndAK>T(I>4-b2!L@J
%CEX7qWF]eM#J!Vq!Zf4;jH.BQQ=J?4+gtq$(M/I)7H]f4i?5[r^b@5E<J,sMjJOEn5k9Qj#3q*KF/^Eg@A^.DbtaX4i7KtHnhMk?
%5=miF!Zg3pKd!i(.0-^$.-<6RD`,d239.H2G9qHGlN]j$G[Z.p,r8i4@P^*p.\Dao[+f<-NK9oPl,/^$j[91nC1+qACJ'gJ-4lZQ
%;mnhf@F\f<"#BqT<V?m`6Im#7q?DYd#8bfnLR>G7E%<4$A!L@NS(,l:8*5cqVKh[/1nq$RhZNaB)TmRk>Iaeu.nX!=mq,'$/.SB)
%6&#en=V&9*Q"JjV&dE5!;;C\I=`rt[1'"/pT>K%J8FgmhW*T61jp>*0P*1PEG(KJWU7Tmp28)g:b5i<GdWjs.fRmY>Y*]hU<ZF1U
%)DSGSnri+%XNUi&NXt4Pd3s8@$om890hHo"lp$B(a$+L`RVU,f"-]pN>]u$#g&T2FHCp"mp4j%"Kf0:O/kb&h_I8H89cRH`/Tk6O
%dO:_12(!(0+:7NJ=cpb-Q;._WC03lO(&2_V!-mmI,XW*2?'sXBCiqF0&$/!<dW:EY#dVQ<@X'^$$;&X;'2SmPLVt*tk#2:H"7)2E
%bBUY%T`s1Bm0cBKk#k5G+C9+t$%&3(.&\R%5lH@Gar6eY:]grGTNI&>'/0n//j,Fs,'j@uoc[S#*d-9@p,mULn=[ORE.fJ\Ca[cO
%?6G!(eG/\K]>1j&&Moo:dnGq4pt2r>&A4,68J%r`["Nj`$@kZ'gWDXK6rqFfb]5g5NRl@IHD%k)Srbh3"J?Wn_[p)9,k'mS?Xg*;
%au;jsOG^pg<'dk3&ffhk6qu?sZA[2Mba)=:.ZH>48HuN0%7)BZh*etbiCGBQH&+*tbQB<[%1ubhfWQP2C$AiQJ>;"hl9\(%-?'":
%(4nNRkUo/\6tc%(;BrFiGTj6,o.jA"Z<AVJ&W^RE!E*=hrAG;^,S1S%[FJ?t+<j/"NcYG\*<TG)WaR>7:K%1*89iLP(>"="4_PSg
%]VBNQBYBcVSpn7-d7)%=+MJZk0(BMbUgnkI1M"[S9bs?:<C-`jL`Oo"#U"u)b,tm%;Sp?V]-Q[)-DE[FMY%kpg6:$R_LMuD)>^0<
%4rXWfZm3^,>V"2,T^n<2.,+j3%c.^qWF>,p9q1.h_+BJeG(=7\-ek\c87kR,5kU>2R&./<).6.##tZ-$N.Ku5O:n9W-n4heSb.e!
%mb)u<.EFBt#EKfeqhUML`:HL4&OU;M'FE11"4:sH.A%_qL27Dfr#'ckMn2hXLcgT(Yt=bX'$EXt2bOQu#iRg22R1a6X]'eM(e1pf
%6.\)&RcTm!nP23$=f0\>Tab=omO__?2RWM2cUomI$&9?))&4E%dXbukN$`Vf(/r0XJK3tq;@&3_JsfjV0jn#kd^ilN^<kiB<Y!Nr
%&Xb#Z59:u[3G<F'5KYc5*J!&OO+C*'NQ2p6Bn[&#-l"4*doGunT/24%I'On4g;,Mp..T>C$p>d6@qmH5E9`WCdtuL)`2HjiG'U.u
%l8']68ntH2a?iEi_UeMCR&ba0=dH@,McsL9%jM"goh*bD'\6M<>iFsg9KP6`I0u*&=49#>'4B3oD[-M.W)i2l?n`73KaX8+2+f,+
%fO`S;I++uN0SZ6X'LV$#!C8V!F0c&c8ZuLDb;HB/5hH2G*JOn=*$VnpLOjAc2]rK3"&4T>1H*1Oao(*?+Y8L\J1rKN6mJN4Pgm>L
%jq'Hsb8B6.0Ph;[1Q<1"YYOC(,tKBu`Eij?K*9IF<6/s)Hth&+4U+2@OpOB%8*V5)BfQ0_JBN]CK[Qn<=JX+I[O<EE!DNmJ8bA9b
%X9&,si0E854Ub",\J6q7F4:JAK<$834XU%O+OSr=SA)4u"B)?)3Gf>M`cWj1!ji!&`du*lSJ:;_=t1:i60tFqPc4^XJ<Z*-q6Rkf
%A#[Z7nVsp-MZe`bXqd$%r_t/a9b^^6&/Do"[43G#$j[V)5lmq0Y+Id@5dF)98otIS.5f'#V8889[K\Qdmm]%NDPV6=BY5K;>_NkO
%@tTnGLIKR=J6!V&%5_Ntb5TF[j[(I,.fh/^gVOfDeit`2'>oTUB$b&+?4_ILc(4rM*:%rL9)YI4g1.&f1hTG]3D+c%!H%.cPn4Q/
%7d3uPmfT,7*ub-WR.iQgMQ&3,-fR7Sbpsh5c]6iJ0G`'M(W;]*(_C[DSsJk+%RY?%d=K*F,54c4(1;HMFFdb6PZE,O<"Mr;\tn7#
%J](/J.nMs,6NX_#6f&^:$#3.S@L-RS-!lhhPS&PG!82L_cQM?$giB><kI7Af=>q'P<2l-h!b/4gQkY`+eP7r^N,Z<mQh8MTYd\0"
%Oa@'f!":C8d74Rb,2c.\*TG9c(`Bi(2/:1Sd(g[?eZY7SlQa+C8\JJQVao@:8*4;:$*aprInr?]L\&<Y:h3"7gnN8c<Ofi-@KA.Y
%72s0j$#eZ6[53;-[MphS_=S,r&jm+:'W)nB3WLJco&JjI7($'gJlmY<W<na'gG*J0Cc8T,_sEJW+mTt9_2QMOknk4=%o@2rj.0FH
%0dqL\n1M*MP=^'<,u8!])OTEqq+0!KZAK:_`Q0:V'LL4c0@1*S.F/C.iqgh@qM4j+CdKUW'T`U82rL^LpWC3UMMTo9*Y_&5E>\>j
%ZDWZ"^$o`Q/Bf0Z(PbU4Sg9.`$<^\K\ZI*M$2[70^DmTi/0W1Uq7:C3`lB8u1E)G\U;\R!WQ[DMIgJ??*D!!U,1]S#"onoC,JXIJ
%7H(2C@8%jlpgfBrB%\;)3eC<Tc'CMeQr?>J1kLoE&<_]88]%CLoKFORfTDf#<JXF9:qI<-c@k,Q8??9BP*H`ET&SLd,Y9Vaq*g>1
%:-j6K(_$du.;babd@UKDZkYnK@_Vt;("YODr09iD@ri8:0QtK=G#ONS.S*VY!)Zr?qiD5jU62#k*$X3'2"hRi?eOGFeQ+p_&>gbp
%AZNo7A0!#%"urXhEo#GU_Kpu9q5Id;"7]tjUVoTuQ$Wf](1Z)bT$FZ?IYf\eedDnd!;rT)2?`,LN.a2c;L)'(`6.ZSZ&h^'dV4;1
%N[>m>PpdnqD[N&%X4SM-T*,Q:eqgI7,DC.@1c;*MQ!gq+\[?6>k''fP=%ETd7,2-F5-J"eaCM8+G=R<VFt[(FB%@cL%hhpM<l;Ff
%O#eXV)CC\"fj"i_XQ[L](4[3P3We0:WE9L!X0!tIMX^SkVb;7hG-Xu?6mZ&)8A&X@;^jC/!4kOg*Yu&Cq`-0G)!$fLg5fWWL]ls%
%><sAJGgRoN\=W?_^6(Hq1:+I&"ooMUefn9d3j?c7L9u1N4dQoOPo^J>N]OX3!^suX[clCtKT6!;$5(")E.4cQ;adm)/A(%JJ\Mck
%!N;Adi7_=nDi+0C"LSfB1jm&+#R`mk5oX%qd)&RUTdp+nVS[leiC`$b"ZfP5?WuIK_>%jRUrgsf"Du-/7iE+B=X;M8%tOgW/"Fs&
%Lsdd@/2G@FO;Ea'DAhD&NYrQS`5ohRW7D1^DH"q/-mf7sDZr(lcN&8DnT*%/64'B(O:8(]d,frA3H.7ebrmMZ0N*d9)V36r"d0+"
%f(ei('0n/WN1ciL1kN-NnDS*W-!`,)Y/MXlnk@']F<W:^WL*EWPe$IWG>T<s-oSpYK_tjF&/&<C9Eu%BGm5d^G-V1P#Ut*<JEbi(
%#ep5e.b8O=.uC+Yr&>\tE%iBp*OR2hO+F(%8Z*$&Gnbr4?&O4SE"^f4l_SHq:)g5g*(.gJ`?Y_JO^;;@bsl<Z&ec&)1"C!uU$kPG
%TQK&=E<B<Z@\*Qm&'Zf,J?(Sci>am>A\o/p'm'i/OPgOU@Tt?R9Xa7EL(VpSqN(g^:F2[QK?ah,4sPMAjf:g*"N[KN_7)kb4T]`l
%+:h%O2HBQ67@=N3(p]mg'[3FSl>u!NV_9I`SgpQ^n7VqYi,Sf83g:6WYh5-LM<8EOJ?@#\+mK>2HU=PP>Y%\!`^ZZA#R9,mbpc+i
%CJ>o0kp,$L7VJ_#g27#A7'/;r>NQ$4Y95e1qU;*sDN/*]_(+C6,pjN@N@<tfV3YeQ*=ILqnUe>#],+Qs"GT6G*+&eV9@PUldT+P/
%[&K4F?%SsCVbWG/(t^M'6K/!O^khm:U3)1;"YJEb@0$]82Bn_HcIEbA"1tIu\I$pJfn"%/.-ucQ%Au=2MJgeI,*JL!Wg/t=V#cD#
%H;4HlenU1j.K>0jaU[%&<\R6NXT^eP0c'o<G,<=nqj[7afS<uZiRTV`Dlc!`nHUX*-Xn%S=kMX6=MPI%a;TaVB7IQI]*.RJWJ<sd
%H&6Rp2R8^/V+rk!jWV1QWi2\Z>U,O;HP7MnBPA4B4Mj?E8J(t50X^jTNL[%'N#Opa`/F_&#V<lCPUVoMUCbp:6R[[+3&p6Nd:*J,
%.\T@pT;_1A!bN48h'=rdJo;P3mSbB41&X9[U34m:9F8qo@Mi!>$u/$j#gfUFZq>H@&QK4%.alkc/Rasde=WJSXHDsI'8IAJkUXPh
%UkF8L<fT9O*_JX+(4ft8K-h9d*TU))XE3b3GdYT[j=o!K6%CRkKfJ=B1BtB_*Ak`gB1$lP7keCC#g]Zma-;[o'NJrab(aAX7g$,L
%;hERQjA)f.*bS"p\DdZSX+9hhJO>)TXDhZ@U?(=diQu'XC+D-KIDHF;h5pAqN/SCue46c\!m[V7=MSe4R!7uA_\6,n6231-mp;5i
%/CQjL1Up<g+qVEkfHd&]>E.]XGr3!QR=W49kfP#1&FK?3j@cqg#KZ5I3Ro05rMa6n"&tY&M/<J1Amde,C/Z7#d(F!a!893&eZ)Dr
%H?P7*L)$e"<-5;So`"#qNuIWZ'bZ\joVpba>a4iPF](bgUUYk-0;=)b)0,LZ?r/4Q*0brOhZdBqKn3JJ^2UHp8hb!B$I]>*F"<db
%MWfk0NO1XRDa^+O@3;Q&hQWfGU*/.C*+F`B6lL*5:h6=,;@-YUPrdKbiFPLLjEME5FbYar;\O*.RK7E0ilrZX&;:%Ffdm/7,0roI
%`'I,(Lc^/eA;.,?$uR*V-;H"VK#%!3+lQLN^"*QJ[LBrCOd5HJTJ7.s^pRe_We^gq=l9rtV2#VQ-oLir*_`F<'FghE*mZ,&+G3V6
%g9?10eq6<t$!Id1@VD.E0uRL81d:M(YsVVQB,#P'-:*t4;N-DaOO1FHRK]*Fh5sdo6r[U+'6bZ!+<-NXCgQABZE4\5<:`O74.7[O
%6k]8?/9ce9Jl$"F+B:b9%Y..qSWM^I,sh9K:6G2,>*Bs-\W,I,LG"b^N(qHS6E<4^3ERb:$3[n57OuRtW'_Ja5ffK3jq0>3-t$>B
%7LM)C?nJ,4#+L<$&bNDV-7oNUrC].mV",g7!Dhcf1j"m9=p!_(S9"aZ<9]$edggklJM=Ar/;d2k8sfXf/FmMNl*CF0o>F.G,c%O0
%MiH)@&ESPcX6_Oubr[A"l)cPGGJK02i<'l1,SJ2OEa)EV(j<(Y!?R<?\D]+eNNZc9l^UI*0kAR<9u%ZWQ(JZ82c1-b@)/dYSORQ*
%DSF=SR`F&qOdC!!'h+,<=R7H6,Mc#JJ.kVpSb+#.nr5<Cf"\067P%4,cM%tI.Dg#Mg&6UM6,Is0c!\fi&i[TTVO059Hp)jlgoOL\
%,Vc)mWGmfJ#,Xc<g_$HE@=OMFZ(r$G"CkSQhpEIli!t5D0/F^V_5q^^JkSVCH5%__F"0>a!;L_'3coTH6R$BQ#T>PdrU:FUL4gDN
%Vt/;=C&jcs$jtd_/de%caRG?9P7,.f\lf1$fElDjWh))[BHkDO*#/S3'>AAAp;pQN@-:B$FDm9eC$k<gi<G.gF@WH2eXp;V74H8i
%hG$U%)_(;fO+AiVm-qf?GCiu;-&KF+AQtjQHG\Hj+KVQn2HdJO^tQ&"7G8+`WgHN"d](YER^"OFV^'6n(KF(lF$bR`\5c@o=QnJ]
%h?lUu5pHpmP1C-I"m"j/7N/.RUTf0g$j?5fT[h-o$]/SgFT"`H4=f0^hl#X@BBMf5-]8.,$IM)B_9e?qHoh^S*!+#T+]0s5\E9oD
%=a(lPdS3lf;*8_^kl>-ESS6M5M^.Ki]:Kk`c3Z*B;$.)m>VW0S<@5?j!3M*[F>o;QS!'5S6?B!m8JEoEbZMd/o,QTebJFZBW9k,r
%%j,*hoo8Tl&[INQ\PUKUr_pZt):Ys=?^i^=<2S%q0a0"Y2Zod)0Qm.i`#Oq>bfLCkEj1P.23CGp#8!/I5t9#XU.S2HP[JutfF,im
%,RdV5(nXR86Y'D.0"#^C!IXt/:CJr*i[-ZKHV-Eec_tN`Z<i[_6k;&5/?3gO-oE]Z:it,#/&F$9(WAgO.jL':)ChO=_Z>d53Y^[Y
%[`FdE7ZaSR0aAJbFFqBfKs2n]`;trgAmH5\>qA-s.(77he+0ElUbH:&m6I2+OepC>Wj-#]L9+j+W(kC6``<G$+^sOhSOWl:J0&)8
%_2&^(Q(NXIX:s#91?B+["E=h3V%B]U?#;D3%&]BSH'I5Rl7M#8Pb2.@-Bs&^<5T(U*cY:i8-PH)NF5pNU*Ol`ricI^+\rt$bKPUl
%ZC4UX>7_)87le=F/5jD)AC/7@ANZ\!bY\ChZk?=W^t9OlL1E=Uod\;ueE4gXZ/7oETcb(Sa?^,Z"3M7E*bHKBo`s5"ae`<XXDlJ4
%l39^kA#-Q'TM.nD[Bb7>Dh5("o".BN/P,`CFHbSmMZn;;+t(l76;`jqXcH3Y;A?1$\]cZtO,#@Z::AG49'CuB8u*,`Q8boZL88<O
%K4('Aig=Qd%q;O>-,6>8QP)=5#,,`UOMBM78K$V$^I>mU;]_kiJV4V>Op7(K)iCS[d#rI3*2EQO,OGpa,$$'@Y6W2L#ob4Q&\9`C
%jBrVoFGjm7A8'V(K9mfE/lo6=1'6[aPftQ/Vh?Ktlq^+Q9ZMOiA4]&]jJ%a(%UKp-F/FC)AR%^#7<!#S'+:WLT/cbIjCeBaY_(8s
%h?Z)";cbLXE#N4rT7.7<G^<[N8=)"Rq^!6qe8gHNOu4^(`RFAq8GpW'9B)Op]@TSVJ-8,Ni%XQ[#OMiMP#NCiEt#C=:e%7f688J7
%WG<)sgB&MdgmTTEa@X$dBRl"ME[tX]Q-*5B1pG039$ekO5s'lGG+E65Ga92'bt:M<\T8C3G3-%AqOgjjn-LqAS>:;h/R1B!n83SW
%r@'oCW=%oH+E:pr..=E%d/0H`I;R2LbhsTOL8n)Reh2i6j.O7dXh]r3PdqGDKbZWMa\;0L1KPZ5mB.Qu+cD$+#$NA<rSj`2;R)sI
%c*$,2G-ohXfo%tHQO'UDg4hQ:U@\f?pK!a%UQEYa_FTac&ll5n3Uk*TA!:CDeOkjZHl'P^$ctL5N@<GLW3694&BUe`]$V+-Zn/$(
%*jOV:_,&H):;l5?#muf'1P#=b/c'onZdBS?34@f`iOI.@S(-F1Yb-Urabo%Pj)&lnJ]#@2keJSh2\9>)Cd[/R('GAuQIg@A=7rK`
%0nco3!/ucO#90,76.CDi0iVS_PJId#ajLOFaL%/]$3cNe-GlZpH9[*o/kCjV7Z)Nu]h@[cd8K[FMMk!NO1`P%3^p-Z-1A!7WY+^/
%Yu5nrQbg2[7mJD-@QD?X-S$oMCn2[d$\'ZVT_^<ROp"8tAjh:E^MPuR*$*f[KXN_j8oLJ("fHAV0l#jI4+R]0>2+^3Jq5c<bN;0;
%:7r=:kmN*>Oa7PK!`M]+Lb9ODab+&XJ^TV4?JqrZ98*qfJUFgrTL:XQJA.%5,3oARB-N,A5,/\K@M5?SL*\7H?=m1T'IRXe=EGht
%B<<l%J[DI%g0<,H@<?JI>3.SMr==o2p>RjX-+.))C0-eg83.(OZEg5_EjMn_r5DPDLFcU<:FDGCCJ>a^+CPu3Yd.RB?SDOO7Q"R6
%=-thUBE5#c"j<JO_8m@'`h&Tc($\6qDOC9B6k6J*4_^^HSN7AN##j`sfMT%.KT2E?et,j7Tp/rX@s+UaLhAmFJ<h29o.ukr`%>se
%pmpNVe%-E*FY#fnLpPY?%+>U+0iX<SKoV;7HoNmX?j9nBe^qgaFH%#i7Y^!nrqUApe-TM"0MZ,3?^es#:WrZlDFW1dCaG;Ob=iWM
%O>Fi!(0W"6gcbLq(kW4MO5O+o@O,Ma.,!6&b%.oF$:CVRo._4BF,9d"8CluT[M:KbFb#Jq:;M<kS?tSGaHM.\Uid%`hQ/uc87O$Q
%)CjbrdGL>lN_\!r8@oAtRk9uW5@kF.,=u%D\=nS,KVnfSK=+'q/Z<V-r;a8.rXOq:k_."eRlMb.XcZPcl2dJ,(d9C5+\>?R"r]FP
%@EL&'9bj992j%Ks&/.lrm@$kc6$Z>\Xi[XRC:cg+7:\'(dF\[i4NKSGS/1fWSL`TteT*0j7Kg5-kV]4Q:`E3!);#-7#I%i/](_bk
%g6Jim8WO.*.7Q#4*?1g[\k`l.i^"f+XA`[YOi^-./&DaZ;o))bKs(nGNb*0%:;N5B_=;/T<g%Mn-Trpp$/Bq1oHKNc8g^W<kYd6a
%^dF%18caX&nab8LW.h#jq[WF"Wi^i\W/cg^g-[@Bn"%D1>4uj,oo#O)@>d'N3YGF0giX%bZ";Ajq]6(686F6]??*Bf%dtr&S*WIZ
%"k-[0HlFa))O<iHK`eS#L@n)M-dak@;c1h0KMJg#.KiN[ll7;gd@UVS;[$eZ@HOh7NE%pI1gMggk`o>-)GhQ^\Yh1&f'>[B@7or"
%TEq@A[\]E:.Xi+b!Cd[JObIIo10a#6;nGaeEl8\0PsK@=lT8qgU-`?[XsV3cJh2M!8;1+V9Gq;YJeE\fkmXDp9\2ni$3?(WVlb]X
%)]"K-6^fCo(L,^)L#A:TLqV5@_*KNC"["k)Z@'W[-?-LrXE7/_KKq)bOd^V<%#"DOP&;5\Gl:O[e?rUDF-t9^I#p6*n-5U'rY=)o
%8:afR7mn>f&+U0cG6*PNmZ<peB_u\1.X[stkV&L4Se2kl$I]08,?S)JH^kY7P9T"Z'RZE/^+X0R,*N"W$__mB-(p7;#i_X.DE3t(
%4#UZl1rH20C35VR)1e5!0N!qta:aJe9qg$(YdGo3"N3/AUCB$/!+Z4K7:bXW;RfN\,Ot3Ce@LP!#e/Wu;?S7AX9=\c$FPC"!lEk5
%/^JIF;N/Ek"HWmm15:M.JmPf1<SRUqTCD.HE.QP_P`Q%%$0rO[.2!kan2bb_OA&e`J_i8mRA)qKe0%IMFm/VeUiK\$!hc2;Mi.o1
%lmRu:N>P0n`Q<Km*GGP-%Ns.G.Ad;BRTlI7^i"di(i+=SCk9YG;VChmUg+\gT0c(nmKdXc8mb3kH.k>LZ#87Wba:Lr#"U"ie."Wo
%M1Z-k[NZrOMAehP5"WQ"'>!jM.t0Qq[krUcUeG_]U%BMeLScFK<dbN7bgYR.3iOVRQ7^of6DDq(Zq1N[4B(RAYqVGJ+img%)56)@
%pMK0"_I@Z99MM<430$.D#0':cANHPN+VQI]HF9]H<p]-l8Dppqa?-lnO_dEj:PDr`.'kD`"tOto#Z$+\750sZZ-:sB'a-VNB1.DG
%N'0OjP7^CRI2lO%,f*lc!G\D2j0Y1^1B!fD6),"]0e'Ll;(dIg'7r;kh]KF->NW:P'Fqk^0!mH[IAlm)X7tA<[p$;k+KU1AP"ei`
%"@GGL:-_)G/uZ4sAW;8+7&X2R/r_`^inCVV2@7XH7BnSDL(l(I,^[Z"$Ngek"2^QJ,Z-gb1"HI=lB&Q!X9+tb\U[Q@rfX'o>,@tO
%kq=)7EjD6n,r1Lb9-e;(eJ<`P'f2ua6SlJ`J'.a:[c&,N+(HN/Z7Q9hn1XGPKMt89QX2ZHeX/)!M@Cae]LL=)4`WJE6l(S'E5MI,
%`0hET-*gqmd@q3]V&k,S(;3P["i6Iid"#B!"U<',FNTd]Rd*."WMh$qA?!F:Xg0-rTcS!#SB"*.dm$`f6^`Q:?BVjXQ#Pa:!ksUp
%Z^mP\?/#]IQ.8'?(R/[i@G`buh3JC'S?D[`&;YGVGY+p;p"D?/)RUE=BCDpgYRQ3W<lg4Fn.%UA1LIY9MV63o@/u0^b`FYsC$?pj
%.A!c^gE_VC)">ULG33n`]>aJ\8mq6gK%:!JUB8eq4C9KFc)f2"R`o8NKXLk:Zq.qc14Yk%SJ"u]BWb,W4V=1mg4b2H'<VfZ+5)g]
%6_boJmNG.L1@sVuFjN5c=tP/\?AV$aT,)<=XBVm<ASbm,r(ImnQSRk:X0i\L)6)LZL=6A&W<5O<2(%81)-j9!JZ,k#V?a+8UNYi-
%r>4sh>\a/-4o/ZRNe?LFH'q!u\)h_dZ<s/GB6Hm.5T8b\e5RiC@`)AefWfrQ6.Id:(F4a!)!O?OgGDdYa@_/rAQgXm=t:]&,Z3a<
%'snfJjCmXb-D\9f/1$Pm.L=g4YqXp*6OsbONV;;HX)%>AO^^DFmZ@ANP(!pO]%Ld1)hE(*0kb9U.(>24Eu>.6U)An@OJ?!<7\$,"
%l6SYnlni,!'Qi'3B3p.RSc5S4l%Ibnqu6fm_J3R7>\9]<[j@b<0aYtD!0K+lf.%A"$<g7lMo?EIH_$p$S0('+ZhU*)&'tU'nY%.2
%3ttktg4kt.60jtq:B41F<b=3OVC:+`\dCrPnA=\7)5b<jc]o46#o:(X,^k:o=t>(6NA?3rO;a6E3)W*kE@pli'7[U!mB?UXE1]3`
%;KJ0<6j"(L/QNe:U]N7$//No5XZSj+BqrM$QmDU*3k1<P)-0XTA"n]H81cmiQ:6Nu\[r'*]E#%nb%KJ9(",[>N&&5%kSnj^(fM_Q
%934=nl@Ou10f<L.p(G=I_@Kl<<-qh`O:Wf_NLc3ELEJqIpgg3Plr>f`ouA+S/Xg<[oc'((ipBqrq>suTPRK'?/8IF+jK(4&A:t=V
%PJiDUiLrrh)i6:85aE>eV,baVXu*p-D:*Gt)HIesg7Y3+Sf14TLGr(;P*JdJo%l<r'SS;??R,O9(+)Tk$bJ^*b+jj&HrkDD`)Oue
%Va[WP3$oWV&S_Oh&VXGi&re^@lq+!a[@ma1/cekjamR,e!ONH>Ig0n0!\?[\L+VOsEVr-IKcQ^bs7jSB#RVhhh0+Yt`Jef`b!WHc
%[FtdQ1E6G6)W64W-0@+C*k@VF6:Fe\)1e%#8ej6+M`s\m.[Sin.7]ZK*#NRP>2TbjOn`XISI:&k3<pC7[Sgu0fqm8UKK(=N:IED!
%d6ffY%RNX*7^oY$iQ&D/K\20c=g-5/Bd4),So(C1LPZTjRr"OQpjnf?><=\cp>E7;GARXkfni^^fFFHkJsI$A/ePC`PUs.[/P%as
%^eoF2<Y.+%eH>uf9_Og=4sq3)@P>3Ec_Vd]EFS]V5UtP[;Ompn?3\4Y=d%U'j,bj@GR68M`B#/7X24iOA!okb5mo@Ta+/oLRb^LA
%j4%-3nH_Id56?%f::'#CM!DCbSn*)q@8X7K&Aj[[f;Lt:8;')>#A2e\.%+OTR@uQgC*:Sq_giuN(BQKqS6M@;8c'iC:GW4<=D2=N
%Z%r!R3,O%=L5H*b6(X:jL`8,.:.f2R+I8:bNN?m+,Pk'7B`2]=_M/W@.*Lb>!+$)eJ79L#<icsG4XU<29p-B-PEsaf<-T*l(EG(G
%(,^6rj?ro88u[tqEs[P*-(uo8EJ33^=Es"&aY^K'&e8?!Fp>af,Zg<a'U2-O3?r(=oY-$,XSVNrQXCnfpTg=i]Re!:j783jB]Q.U
%OF.Km#`Z[cA1#S0hPVKR+W8ItBdB?CN9_0(U1Sk.cIW*gcqB6UOl*r')*7oA;ZBHpTOGDLAP%+p$SSIifshG]A2HmUUM)mNImdkN
%;)KeTJ`YTB;LChX_,s60MPXJ,gaO[`UM03\+'=H:Afqec)hlDolfq5`U`9gW-S]qc8"#_6P&c5+)$:udoUNDCY3<@6U^HuK$I$U'
%N@A[:)tk[.E*HQMNaL6nc/%]R3iee`Lo'-!?5.6`6V<KcY[i7T@YG`"<-!lS)O:6b[%&j;C((IUFtI!,mM$ANZ?!AW.n1)fRd0FM
%(h,mHVHqCE]=-&nd`AmqZ:$np0?c8&Fn);uT1M2J\.jNi-N:Yc<0,(Gs3phQE7<Y3G"3sZHU2nf>;I<5K[_(gOut)?Q"4*Dm1A._
%VWZ#FHD6BL'R@c<1c68@5C6;:Y"Fdg:dRO8]-0B[C?C<m>PR_b;%md2l1&/W>,>Bdg$s%H[S>sWmolHQ\.s%saCqgFV8uQ-i2T]8
%=lQ^=&MkIi6cn(cR.6W:'!GHs_NS)rl`'CClPSlK.2AGNl"3t`nER%g,!6oBg;?<`#c*p2:,V%I_pG4n5\]_LVF<*8Qj&QEFR"/b
%4;^r0ZTSO7^IUjMb97*3S1b+^Q9p.hr>8"D`XI)hgP[N^*asNVU(mSgHA)@u*mrk2/^`T-m!"R,\ZmNs6WZ@;dtZY%dL70Hoc;_q
%_5^P'mhg09Aqg&@!Ae;7@RcDl+YYMVmiA)8r<hjrSk185.drpZ?-Ju;M"f1;%n*SF_L#p'%NCl9_L#qB5O<g-_L'lq!WT:/GL2?q
%]H4?7[8tFO.d:5SV4Y#5hP&hZj?l;S],#1=nAIqD7s$)&2p-=L0+%StA%Fb3'PMKfCj0iL&fB:/fc>pgoYs%i(q\GY@25q,cmU(J
%>cI.qX[tH2@_1mP8;K*4+hBJ,17Sl3mL7O*#e_%K4+dsMD$NaYfcaFuNY0_\DA^b>;4-eH3D_>)RI19B+k*!<D<dPWpi>H[/dupC
%Zr5=8VReP`q#hF#Ij)?5YW<0D>q[(Xh2.LAnA9@hH_IjJZJ?DV"Ojh$ZJ@er'Z>^ncG5Tbf(X91O@TPnM!cl;(K)_dl0\sGmZUkK
%]7X36L'lb-!U,)mZ0/_TjLQ`3glV!M+T@5iIHA'CaqB%].c28nP>D`GVRlrgP:)W"Tt:D#P`TAj^,n\'/b8B?q<e5=-"MBqG=MZu
%TX*D4LFgCcZeYYTM86*Um`kePMYYR1h47u407@W4]/(]a5`iG$h&3^Z-ib::h&5cNRaBO>R0(3%l0][.Q2e""]0dMqET@M^*DsMk
%:,ldr1LqP[MCE@c7!Bl4?"(?TNsN6R`b]iiZ_A)?P2."]%$Pa2l0aXR-+s24mLGV&nfa7cNY$:]`1HCWcuJ9Y*Rig^'$gYd]$T7N
%8$"k[6?d'E?g:<\GA!F(YuJ:r8A'T\L3.X*,Z&@Al0ap[[XNqt%c'S!\$6_oWR&0Qb'$9'7.PS^f^=Pd6)k6&]-Fa.P9kqM:*eDl
%d+sPG!Hk6NlgIj;mc:(HPRH$='jK&=$f,)QJjO?&,97%bq\cAB^e?cm"s:2-EK2crb'%Ebll_FSZJFK_,d->CgE$!Ti0l1N*Vs-=
%5?un0/FfuQ$B<^+:l-`smD=#O/.P6"'t-3I0N@[S[QD8kRBEq\gE!L8=l*E9mK?4h>@kDkR&$tLBn$pAga#3hf^9/0G!]H-]/.`H
%/?dFV6"7F&lfmgG>@D46%dED3`[(`mL$jsDAd$EudG4hd6#aOGh47)U@A1=!Ila=9!t^.T'c+ABTX@?\XO,chf*Y^MM!bb1=dV)S
%h&Z,/WFX"jG<!:W3*5A4$o(.Kf@/On6A(#9L$m5?gnA+F7"W<J_T&Yhh&W:hBiXrrGTB^KL$oN7'[\AMI!7R5"=UYHh&1-(e5c>4
%N*!0n0sQf`+]Ae4h]9HW)ncU9SKXYK@oiBmT`3(3<r)0&<6K;(n_G)4mZYbonD1qIENG$KI!5cA\C7)DI!8+n,hKBY!CoDl.7:C&
%GiYs).U71:"BmAd+LGA<U^(MUF=6]\W@,7Z",P>b!m_m'\sVgkboPE*M`o6($j(?nNk6,8:Yh,l%OH10BrMMbk]nKM;^&Z'Z,dF=
%&\f>a-L;*noQI)4hZBO7,C2G-=`@a4m3".E)_^i,VCA!L6uN=8UJFnRm0lku6G>)EFq=qIq2!l;++uZ$_JTUjK>aF:gl=:P1?8#n
%G/.<MM,u"4$RPIPaR.R6ptHu;n(^/5?\]u`R+i*O0e!DZP9%k@@9)_A8P@i/A9$6h_%FdT8EE6I;pRNQ^LT:uOJ!)E86p5UYUJQi
%&?;`C<oi3N)#ohnC4>XX$=*TDCZE)-.G`S[3[p.9XAI5Z8";`[<2)/&=`T[=(Cc?G'KNIiA]/CTfVS\QSRpe0R%DrjOM9'b@q%OP
%RiN$?6>VE@18/M6`-/@jK4@3qOP#TOcNGt"?98E,JRli;B0%>>XNYj(L,M2uSLH,D@pV701.ePsZQ8?G6S-l4S\-KmF%=GtCoiQ2
%pWRf4d&`a^Ju&e*Sa#@cq1E]Wp'qmJ42X,n2c5G!%+BQ;L"FU($,r^<,)4ImB&UX`f+&VF0!Dp2E$0gq]C=MldN,j-_J9AacNCeo
%p(/,$O>s_dCM-bN&:7SB=r&g^.]j^VFn:B-/$sJs<;BU!4%"[TeFg1l-8\mo3MNp6R'D]ECBmEPWU4Ee+;&"8&Zm'I$NcJj>!#9^
%_+&/+%.TCiG22])L[nh$[!%1,1h0U#m9m\CRRLrX+>H2jVR1NbY/Rjke(PZn\toHhMCB_A;QsY342aaYc`aEne<O^cWiUBJ/(e5d
%VR845X6rk]CM//`?kiL&(q>ZPc0tA&\Y`6p[E<4hM88'a<]`ZRfOS&cmJ'L5ne>+d>!9fb.]dfJ(q!t0e.*^gP*SFL-g7s3=Udsi
%+;VuU6>B$_1G$.1C.CjjSjcFiB.B$g+glsCcfVu7C<*9'CYBM$44qC_.P@N?36&Npc93J]1Sfe%/"CdEH4tTs4(Ck#eMGns!jJ,t
%_J!S<?la[ABSZ=@D3K983t/J.(:bT`*Q?OPL!bnn&tp+24%_Q+<Z(43<ju+Dar+hI\@!^Tc]HNa@]#eKV4DTEjfanl#'@eb2B#HH
%)($b@kUGoWI^2,?En^%%TL+Z!m0r7n93j>0@sE`,`];)L9;g$R,>($W#?!Q\..)t;;Kl7mm0k.!UKO:tK6reXRfTK/2RNe4hjDn'
%@\H=D[!'e$d4#ko=aZl7KNiLcCBq,AQ^-,3&n*sWZuuR`B#8,tCPTAG^3JVE_nan.5N]AKHfVU4JU]@i1M)e?H0oQ(!p>PVm4\R3
%B;(C7g/19OLp,1ZR8@qX6WuQB]@_3gXdt+THVupH%STKT8F<Y2$!j7#G(eI[1%C(L%YktgK.<i@,A3ej/YmQEQ+YMIOP0_HhiJ5N
%OP4,lKkYNpC1gG<aXaH9po+t^'imCanOOcbB!oN\/,c$eg&]/XJoQLs:5B$h=<Y+/XhnLI@QU;$^ic]rG-EoQ'ASu-%X(F>3\83m
%M"_3A=Wt3uhZRBY7`9K:`F(E&+h#95nt&T,`-)OlOo_TpgQ@O@BHJ7!hY:%g*$\oS(gN@lH%jl\i>e"L<FS&`k*'e46u7WRIQHAO
%fFHl=(f9BqM!Za_B/S`"'AF],`;"H5[6rD'q'ml!*I/nCGSWffFq@<b\hMkV_Pq6t-S!(@<Kg<_@CDpSm(M_Qm0n'p0)!M4L>[H`
%gd]M2&d0FgSMJr^_L^uu`,%pl>V_?VAik_N)$_Y8G(^r5=rUYm0b@s(AA9\>G*!7UV_[!ugH<B'6Y8F'p'=?B1><Dn!I\?cAinut
%)!r1U'*M7Sf.G3ir:m).*AQ<2iZiWGB=;<V44h`5fadCZhDM9F[NgB#d(W1>!_5k9I!R#L4!G4J5Hlir&a,)5XbGGg84IXs+gW2'
%(s"",W9r6<6T4YTD27kA6=W"9[U['VB7"AT/9\jB*)YIQRtT[s:tpgP\XqN858D;%g5\un!^*L4G!mJecE8=u*Q0NYn<DT9e`XgA
%=d\U/,UC+YOP(+N6ZcmJ[M*D<[d0@KE"2NrR+Mo1m#c[VL"MCrj`S^]L[o`D'I-pGG,*I_.D0hWgL`FZ&DN=]MP"=qCe#1@@Z2(7
%3sLTn-$AVO`(H?ZOYGP;djtWHr6TOWXk(8[e99i%Z@,3Am7:m-U96h"8!3q><KF*GLtY^.U]kgqTX4!D<H:0pa6MFe\K*q3fOIk%
%m=]4)%I!1[irZ\Y7,GJ0N^-qC6:^Zk`7j4L$b`*).^lY2gHdL(<(tE>a[eb:ijQ^A7g^Kpre90g6psG,*RWW(eNsW.PhqG=4)J\c
%Bp>kmG0,QsNkTV5EBBJ%_tDV5T_*En,JF+KIAHLYq*k:Qs8V9^k'm*sj`A*K"Ta2s^:LoR-BI@;&*h7MPohZ/b"ioQbJt]Qonre#
%b.es(^Nod`hWpB/QG5'EDi:doj2]F(o8c+N(>o/gnOIL]rl?WSItbWUU!Hqjru:t2J+K<343N(Ypr/SXs89'4nN?j>qen^ukXe*7
%/AX`aW.0G:`P1tW'R;jS\'"7,B;9h8^Koj8nhU#$kT7hU=,0%JgVNe53=[Iad-]6]4p]Pt"pP:\!>5k6E-^L'qp2aaM8"'GXN8d.
%I^em2NKH3ub"o%MrabLolD.afhFcn!T#+s`%8TjsL8U,_c)s:-aQ4e!f/8]Bd<J)R>:F1,8hk6k.Iafd6mYeSZ,uTH/B@BAB^pRQ
%L)@?)lQ)R6\ar1jTLRoZrEJLt5XUe)\b``X8Q0mfQQ^T1"nJ_"iMmt9HK13.j,=0]7Z2t/bf$(jj<I^^U!!$KJfrhAEnhPD3M.p\
%h$qFuNJ-N%7hqK,7[4L]GO8tSF:PIeN6:g)5XEs1YD9?Gk/i;)M&)A',N8E/HMQ<%VNo0A[?jb$^5NY>UmK8HEBbg18Y+2qhcMje
%R4;QjRF&"Dd;&.3j]9].j\E)nGk4\SA9f'1g$2)&ZDT4*=7NojqnHKESm3h=0.;PZ=Lco+^\r[:c#"h]UPb$u[9l?20&TP(ENhaY
%T+Lfurb(73dc`YgdJ<Y1caWg5b?o_rd=8)-\KCL,2<)Z$-15GFAcpSm`ep]rmSj?].QUWa/Fn+0s%h92Yl$-M]+iZ8]q#k]Xkd4C
%S*g`)`&,3;MWF(&n)KJ//MgK]s7?,Rb@h=n5?AbP_:\eTTtVIX6D$=:GSD=t`G+U;OfOA5>[9ea=,06RK)VAp`q%OBJ-*Lj+5XVc
%2Vd&F)6e;Q,4Ft`r.9D?s*:XTGo+ZR2"H^brVKt%Ed"$mp$kPEej%(Erq-(@T7(kTI*"U6Xn&t!dq=S7rcrL4RK)eKI_k?V+5bj)
%?dmfU`r5SPl8>Imcd&.i0?"s9MbjB?ntuFWr6NW+YEo+,:RXKV]SYSn^RUh/d;+3cEX@sZYK2e(:#9Iu6ca%k_B=:jH[bR,_Edb)
%r>s2+jk3E_D^LF?>e$in9Gu&=-]I)X],SW;O8lmU]fEfQF87r5ipkR-f,]h6"h4Bd0@+NB:DhjMl<TD?o7-YroCH$::OY",&+Al\
%KMg^&5>?LbIFF$3Dm"S;F2#:L?/@a]nuGu-UY^AG"1#Csj7:I6f;CPT^FZ:af\sf])UmfuG;j.nVqY2I?tc`hh;?N'-]Mtbp!2(L
%;%mghfT.D`Q[cPPrm.(H<2Z86/(a6)E7eL+&+4c>qT\i#,Hb92;;#c4BCiQU^0TbPs)sm[(qfIpB7;3Mjm;R3:NH,CH$s^SFZn]Y
%oU#"?.Qb8tVAi$<)6V]D5eajVF+(Xtlh/B#QY33p7PngE45V\eY:a-e]fs&r[Tss</SKFcrW8^@Z$`hOCj+q6`;>s.\U@aiZR`L\
%Y+2+i\JNjFfhjd0lK[a/@r^WXI+?o<gFm2W6;1taj^qk;p>omnDYE1(?S7E%M1#fhS:=5hgn_b+N&N\4JaL!4QT^o"jY+gKmp;SJ
%^\W(J?'PMHmbdsa0Dk&"]Y8[j`U]?OXaZl"&.C5Le[U&jJ$\O<3af#aY:"6p^HO`i4Pi95rO/1C/@Xe@NnieZ4EIEZ@>\*8^-f:l
%D0tW_p:>S?iq;m)/\Btlp\NJ]gHk7JdnD`$?7et1S=a'dq4Fjn/sho'50Wk!G%R^K+5bPJbL\[#G8aigP?j/d6=n+$2qK]X:7'k/
%St&R_k`.=Re[Wo`&YRA?o]lA>qHn`#\_Wr#)*kr2)l$Xslh''l%.&SLhe_%#mm3Z9Rl8N?ACF6!W;eqf.fOXIm]`*;N'3634:.3@
%1#8thV2b#ie_0'/ZYAro5<[e;I&@5,1KDa+C%OO!Pe\:A*IFCrR!c-^8*$iFdG;)JqkaB@GQg=D#p06cm:p?038/i<2U9\eb^PU]
%>7bF(#/Ab2k0Hs_ma!so\0om@2_QhM2cK:O#B_fYi?[+R;t0n[jZ@MQDn\4lgDY!u&')S0K's?:4d;Cq0:19T/MWFoC$eUOBTMb3
%4Qp"n<Bg-lY*i6fZKEqiA*,85D55d0Pu!c$RQW=pq-]XLSmG]n+($[fs#VCio@WArbgD*8p$7h)B5aYpiH!n[548$Ko91W6]S#c2
%+'5GpKJC,t9=D$6\SqH:@.ra5orFE\k>slB0S9#F%@Pc!hQ*p%TY)>E"`%Jc1+TR&jIJJdHItf;A,F!R-feJAB7KBC9B2^(p]4I4
%:APCr^+g[;GQ3?Uf"&D"a0mAOr=_m&"7>OVEJjL20F,pW_&UV6F5R$%gZj`PRUBmprbcNF-S;@sYHrHff"d=[QIXr-WsOEhMmh>6
%;I`%6oBFG^bKK#CGK]U>l*Qi*qG28l^2GAEfBti:oq1UG[/&_JorI\Je)eR>o&e,Z<sO$31lLps`S)EYk`<3&;uUcoJQa\]CF-:T
%CAm-;hekd/pE88'+","V%d/f)!PmV\l+!YT\bu#895VH:gSAbmmot34kOLpuI8#I^*6t^Z0UP@;ShcuDl2'[S9(<KHgXWd'n0r:Y
%VAuU;],O,Dbn:u8hn[>j-13,3mHemf(s;G!i&Yo/Y(lIU@M.@QZh*d&om,`4)pJ-2jmlqK?2s02q<=5I;p)EOQgSTbQWKLe^<[+a
%L#9P>k$pBLiPiDIf#d`k-biC.6hq#$3Ot`+fZKJk)U\b8BDBHg_nY1JDZ=D1lZY5-lQtR!'?9eEq:X$G09_,k0AWU?EH6>J0kgag
%l(Qtl&HK.#C$/*Q]l;=n+&aK.Pee>3pu6fS;'p^GIGYm&YS(LS:>T65U1;rA;Ns\q)L2+GC/Li:k"q)0"0Y.]?s4UB/]skX[K!W_
%O2;qtI8%$s;[,&0U<L"nn)Ld#PdMq%"/nYVUdXo^XZrghPgdZPM_\itLLO+&H7d:8DmAb8rNXqJS3EfRPUV5FP[/d2=dh^ZWL<B1
%n";O]q(3*r4E",OfDHp)&"MWu5/`)f`@g'+;;i=?rbk#K5tmXfmQ!UUM!*BSLu40`ZZEpf7n::@8!KEEYMDXN`EBB=R"AJEc$F6X
%CBpQbrd:7_Zaoe>bdA`\lE&NJXnH1=[FnZ/<6!XneRkrW6#3l:7d,UJjL=l#8g[6JmnLnF<!%$q7X*`ZC#2;mVI87Mo/7MhRF!M%
%KPEmmoXC"k&dR%Var:.bW.hrGqrdPJS+Dj$Ib6s4j1_YWZchOT(MB)h\LL+7:p6042d]7qg_a;.X&&\MYY`Q.YoE`\b4Y>bC+E].
%Tn/oMIK_]qgBTNeU!-mm%ksg6b_m>FA`M-l81;*tjU:[JD&+JZs(rPIs$"VUcN!pNr""^@l#GCI#BCX!Q[LZL*Z(a3HZ4(N;kH..
%B`)7qpnnSa6S.9TOaH_ok?R_p7=O6Vfm!CBH?JcCl?2g<^OEL`:]4%:[S''Y[#FDq[D7GTdEgQ>BSIT2([Wal11:UG`]4rig$^Y3
%bDVA"i-/l6:Dgt`Sbr!g<US!%g!.]ujis#'j8_uraX7&ET8e%V<"A2PHm%pt7r_'@@NsflhtCH8J`]_B3WD2(J+kc!]*%!-I9Xm9
%rccZfcM?@A)U(m01$=&Lr9p0UI2D2]).;3H2UR\XF1uu>!8@$hadhsnF1u_@pWgePe>;io6n%]TeN7gq-9)QL04);:]mP-KR8'0o
%.6D20(V:UADp.bDX']ceiq_8'05pCb:JLp@3am]B5M2CS0L:u=\UK[cV5^M9I/0B"^3r4[FX'#C6YZ+Ijp9W[+kqVTfd!2KSKhZd
%KPZ[1h:M4e@-l-HZAh6+H'h8VqTjW%?7mlqb?!WnZ[<=VrH._c05"ALbF?h\Qd7n.\j![[Rb+.kB=g-XgBli_PQ*eXG]U3NG&Xes
%bE]\CKlOtKQKS'^'B<_XCNgbqq;R>cq_RHWS^sZc+caPu<Rur9m&.AVYEl*^N5,A`5@7t0@T%G^r?jZ_Y:&[ho!Wau+0GQRGDGB?
%2tesoO!_!T3IJ3?@?c2Ee)$.6;lXosAIcAsJX8Cd1'_.J^rm^BH(W,0_CQ=Ed3oF`06?&_T0:O]n8a<"bO2asj/MY'RfLl\l9$)/
%"R2$M9g#"Jg,lk/F224NRd%&m-Dl;5loWk<'TdqbCgoWK0S<*dBOK:>m.UI$HpB0B*SK^:hjg3Rc!ekPiuT9nqgLNM85/o#36k&g
%H[Ig0dG<OR"*46hE\M.dN55(q&=DnT?"`f+)1?4#bOgG'.JiJoan)Q?B9J_(es/H#F_^?eh]%d;i7lp4&4JdT^f8I7G."]SN+(I$
%0H.hnpO.DT^%T$`n`'64#.ri?q0\o/5.!KQ295J8q>g!TFW[M;Y]!n2Z'&\E*nmC\d%6WoLYGno'UrTf-AV-9KL,N^p3]b$SR/e3
%_71qHH+BGGb>g4NeSqB;YUKe8%dh(C/WMQ</O-O#7\&KU#NX>RHlSo0"EBALA!l9nHgBo;g7Fqs(ip[,hnI;Sa-bm(#85)PE'1Ls
%P=ZL"O53#^^$!h1h=*a9T:Fc.S:>[(2PmieIWt+.lL"<]IH^7H`RfCj^J&B$*aZL[6![fFGB7qK\h/4fntL-[hp0LpNGWe1Xp3Jt
%9gB]pn`9B60A"DIH*b.GS`72^>ed>ESPFuO*=U0`PefJ*[JuVFL8O=T(Y;_);lg^?[_%Yq?o,@(RW=^"m;<Uo=OIsHGQpg0_3-,R
%lOe^p9sK:^XJChC)e(,\0)0K(fV"!,r;>s,ooF%:o*RP&T\tcX1*rg%_tLK0DSgsXC@Ba72$Z`$f]IZCr,T"'0pR)[)U-$^HVGC%
%>jSj?WJ'+>q-b3P_ZplY]"-':41%QVKE@H"&?fTuP<aNeGU)b2?B;:)BD1G!?Z,VMB(kA!Df5:2AoDS\k15=W+aS2CXN8HMbrrqd
%WX6HJZTkp+rnN0&2S4%:4#acmZTC+XF0dt&aV47_*4kX,*4e^o3>dNhg&daL])?U4ro<;/q+oTi;i^Okma"$SdXhds_$nDhqj*.s
%%J0ll"*a7E&i2`6N%8mu\.UkCguD7<pB-M^Rpbl62WTO!q-SV65<8]<Z\=4<?CdUXh>HuMP9P^aDgjd?&uF1FG.$`bnjjkH5+4I&
%6eOqY_88:T?1d?TS*pQ/ZhHc2W>fHX%X+f$?5)Pml/U3/O.J"#<m>id-^+sidFGj4BG3k3jI/lJ0$.!T`V3O6`ND])lcVjj"QrC$
%ro@q-EB(ba+7*`i'.QR[^U\f5Ek7dP.*%\#%d`X&`ai9,K/o9q'CA!SJ@BM3p>3pkSmB!sPX_]Tmcq^0$+NgToDH(SiU4Oi],D<I
%oF<R#*m/m,if'f"ZY?to5<\(c:^K856gue3\I%T8&?#O'T<GCMQ]itmoq1TU@96e/%[PrI:M/'n2XN[ne*]u,aq%Kb\T^Yg2Mr!]
%.%5"IH[h1H<$**e;=s'=plDOBq+dj5I"oq_mW\Ud'+VaK[t0\N56`ao@h7edD:a`d@!4J`.GnQ<D8KrpI_WoW7J$Mk6cFCmI<P5Q
%@Q=bKs.E-.klKW=591hM&b>bNbr7"_>N7L1iOHo5bJ#'Y;j?j#3:=gjRLdG+E)7&&J=M(]b\,tpT8eUC6(Z1&pXSJQ(u90khr@#[
%iZM=@j.bI\KSW#Pf@uub&j9i[fiu:>%bPATE*slrB_4NYr_t2QIlI@Hb&/^G*l;CAqkNK:,i<J@b/Q^e>(=f3If5RiV?>B^D!1Wb
%D'*Q.e\pK'p`:s(a2<,>m;`^X4@[>S#o;CSK4I)i$n)u((M2=BE5$csrNNohr<E`dn`X`RhIXA@5`Xn8p?1;5"Jc\"Jc>?kd=;b>
%Lu<1.B()(TRDOu5OS8>96VZbk4LAC9n-8Pq;qU!B=C2$hm!=HWO+$oBFtk/&EHC^2q=<F@`ZI]Pn*4][-14!6[nCT/QT(8/h]AR3
%3D,3A0e]lN=_<.Hb[kBuATgVFm!,GI+`q^S,Oi2.PKVQ2VD'IciL57<ToV8o)XMn%j)0V76.jTUO`kM3c_6Co?\]qGT:_b%*mVC#
%f=Aij@7i'mkRHrNK(OiEs33Abr;#o/,t"CX5kMrq=-qh*]+C_!M9:mG5Fl'is5i:%^3WfI_ghUP[u2?3cL\[/:O`!&in<nAbo]/f
%(8$*S;7$&sf8i.B;uYN&^;g2;lC[Np_r(H3rmQ@0frke4/A>BekC5@IkP<`eJ,Ab+:L\.XO_J*'FN1[X5/a\8J35^_-j6"DnglWf
%.*BL]s)X[b=QmAl%Tf7m%_Y!%,A0AIN,IC=EneDl'HuoVoC#lCh>$!feo*V]No"1empC<YgO<fTk2GRF+!(B;$'bH0^Vib@jR8H1
%k0Fi.?(X5DbI66Dk(E\*F4<%DZ$+M7\^9'UU>kIZ2i[:uCWQMskDu+i`4,R4q"p9G(O6,K;jZCWk(0qs/<9>"G_%e553D&,(OY4i
%IBkGsj?bO$IkXT4irUkG,@;Yicu^l=d)@?j&()^Gbi8M`Q*9%&11(hQj6]^m20L+_,l2P$T"-tXFt>1#r`!LBb4F!6kj2c#gH<%&
%VA\jkJ0eZ'Ce#:O0s08T+<8)45i09Fi3n93Xj9AK_dDo,^K@$S1RKQFX:<8\jEPJZ4>tpEO+f+QQj*Z8hm;YZ]l!c3%J,g=1S#U#
%N/?SQo7C>]m6J2PXk`a\%rU,4D8SIuh(h4@\7GX$miR&OGM,(85QCMR\G5-GMsp[UZ]'4r$WUMX!I'd^]MptVCu.m3#Kb[.H!a#O
%eIc<*,"<%O0+dUSU!)2g$S0)+U^a?Z\\*`/Eaj7BZlKlef8mDD+>_FnSNlZoqU*:WC5m5#1$aj9hZ";PBl"6&F.609CWbqfoAk./
%CQB\54)XAE]!c:JmJGqNmSSDkG/GB_rb/b,dF4@DRccL2d>B)_`=tD)hF;Cpr[h)"DUO3cs"Q#Be)V<tC.mO,jdTmGkh<I$CO.]'
%dZ>*UU,r_-?m8;DKJl'IKKL?9eM4G1j(id-c=^GVI9mC1X3HaX_@rQ%Ou%RYDfJ$%T0J:Z4/>GN.j(Ctqf@fG5M*;5Y-Ibl9uoh!
%jC>57s#Xhr3GM'>o_P03I%:)QQQK_RjH#8sH[fRYo=@<!#PhNoZ'X'J3UGH(C+n^&kjs"[NK=2X-iT>`/IJ3/@U5QEcRkH%GdOtJ
%_CB;%(2"5NQK=ZR%&8`EW>F`ojh%lDjPnD0;R<'`k8ErT]?,:K,&AuPO7LSY4'3M@T'p?@4[7XFdj5tl/ff5,GZ6NE;<k+YZd<jE
%FK:UMqNds0B7+YV-*D*7'O@;1P98nV>@6.\n95_^2u-*k]Im32?>Om9>$6;/YFU',j"n&J51UYtCE"?KjL=jX"tjfmD;JP>+2tf$
%g*b"jI`KJM:O[+\W8;eJ^q9d'(fo5]++D:Kaj&K.qSNi')W7i5(T6bOhcr?P]RG.sC:UjIJ+4mk#35N7XlkFE0l&_=,&>p:(@T:G
%.QHZdOOrne2O<DDn)Z9>p8fIK0"S]M4kK2]'WtLQU$,C%#Lg*@MmJ:a3!Zb9+*IC/<L5V'UG-IT(X&]!(]+\8468gW-8*R@8)H_@
%K0>Q&F:)L/B>r\04Y?:(%JN_#lHg>(;A3)nRPW3NbqC^dRjN<:nZ:mck<iX^nPd)3h^.\Pdres1,PGD,cgqS,AY'E7^UENG<lQ^K
%7\17Ej=plfDj/4Oo>6J^&,]2"X,HcqZQ4U&B<g+NlbRJE)h4;67V]2LCu-+6.<\tpn+bDmWDE1i]fE5,Qdnj^j(mi"/UJ^LdG9,S
%Lls=4!1$&%?:!=-!++a4<obE)lVCRR/TT_Wjo'V9adjG7GJebk]>Z8As68I(jUDKt]s;IC7D=9FQf93i]gb`-Pp^($jQla?-2E=:
%$,4QH>9.XqQ&-Y+1@Y3B54E0tqT0D79pohM`'JY-q"XI0dl/*#?JY7M2c[?DC3\OoZ\C!t-tO-(nar4>%e0B`p<<)9HIOhJUe9aF
%:,]4IZYINeXEYh4hM1?nb!R)L^[="j2k09B9qIVU0Al8jiXO`(Ud!iE1CPUiI++5047F'@d<tS,1S!(5IC@6&pUT';&@;0(q!..7
%k!Sq+m%;JmDjK!.QDZYS(Ag<DQd="09o+#)f:O^Y#Q8rDS),cem_6Yi:#pWuo\8KL\b#m\T6VCMc,n5To(oZhmefcJRIa,Pp%n%N
%s/WW6^&:m4#/p<0c/2,-ndds<okV9IrcIl1k*fXlE+LgB6bOLIr3(%aSniGX:.81\I9][FM44R*?bUf6FumYZkLec6>F]2]+'NKC
%^=d7;d;OmoqCSs@Io*C=]-Xo<Nq^SB`>6@<O"D]<n\MDTkLa6g>AQ%EfV0>'(@V7X%C*l(cWuAZXp/;%/%E[id-lfD2Huo6ZH6.A
%MeN]rMs1`!`AfT`31@gA$SU(5?+V9*=2TE7&7*d6TC"Q:P/5+:K8XVGE,k/1O/G1+Tg]c4BJIc*`HqnCL(0iq@->nr**U#<cltEj
%lKP'VascnK4U]_#"at'hc#1HB<1)`S)20&#f68BB7N:I,la,%)1piSI*YISgG"ct:iYYrCLYF$!k<j2_.WRJ0[rQ#sN3eA=T>q7I
%ADb:2Z/nUHD6`ojr/n'e*#a8?Cq>"A-CLpSar/aF(5R:RjP-;m88&5SbO68$<gHWir38t*YJh':^6W^!grchNQ2MR^;cH9D?-ZSM
%#C/5h>1aZ]732pncU/[OqKp;Sd;q(=Y5V`Z`k9*[GlCPm0#f%mH[`%iA?$<5/]@jX[49LXW(Yg#:q7OdA)9.DCcH'[-M6"S-p>[W
%i5pp.]DP(IXa/p4$IV"k5Z8P_!1>'m;_/%d=t@1a43I"t#>Xk4T?]md`;$]%o=f5@3?%AZ]mS`Nbehrco'NDq=td4PX`:-$4^08(
%I-6k[C__7pPatI<n#^_NJer_33c=Iudn]e\D.[p#npnEla;Z0MEDqfYc\]n^%1<`>:.!R8XApenbYnh4kDtc*[e\o0T7]if!V:%"
%4e?V"D">6&]!3%JIF74tF?&aPWk,2m5;fV[5DUX6dk4[rd\H."$+WJg]\^Plj>!-(=6R&P91DVCTp"[]mO`J*HAAN5r'9-(`m8r\
%S$ZLT4@(-L:gSIA%omgr=a,/)2Dc&N6O^-^F:0r[lnpobM_4<iDd-c.e]I[6)andLFuuH=8D.S`.Ht(4[^@=G?qQt*]j,Y\hScW=
%YqP]j7Su]2.kds/]KN@_@4&I+%qCKVMVG$-??K=nKH*t=?%)8dcNgHq<cnuphBo>iW$%R1jaJ>5-qY(/AV4nifJ^aKV3Z7jdjmLe
%F]Y/Z8,_kTh*cH1fLPn!'*`FZ&R,$g0TpAdSG&OZo'4-6Zt4sD_)RO[d=e5WIH2i9K>>+!\kH+0$t^>66aGP0MpcO<$K\E3Y'O#(
%(W9:E=mg.7@obMA5IcUt02_-(3B?WG-7<\sF)GI4:!C/)3B-K%jX0>kgk=FHRrDSP';]$o0QIh=95Yq:9Q%`9/iU$]cMt?.6sF[7
%EE[7sDotdJIdZaek=TUnl:u@5mX]BllH[.[DSgU%EYEUpDLtpSNcPm(%_7EM2)d7[`I#p*`0)H\hi]<?fO0jiLja;qbD_8ZpQk.K
%@O.,.:j;qFT6i]r\P,h%IL7DMg,VH=0*qt*/#rs`5:7lA"N?T%YC2-U@B.kc.9Y%LIO_&a@P%;:$/?==O5k%1'PPCeah:*L4B=rY
%"1<R0#k=?1Y0$8l>?=2QrU%eoXO]]KjIDj78sD>?FkC.HiX6L%11^h@0i3WMdq-R7/Xuu3=uEI+b%(sK`-NsIO$KkIOf9Oa7h&XV
%jF1AP]iF)Ml]'stS3=H"!'W!\%_gI56dqlpXiY&YD+TP.QW23t7u,g92JlN+UY"em!EQ-Pi@<He3h[_9HK'uulR?IfoO1ugSXY!D
%?ED6>MpQp#<c]:IWL\E/V3oiJDn4+E[Hgs#jNV:R]?hJi4EDIZo*@Zq_].RHd$2Ur9qZ$4gifiTkFlel[Yl(M]PLe&g8Ed&Gf$"k
%e<k&^Nd($.C^l6WmIY5EH]9^WR2&*;c]f`:_a'Ar0^n<Dl*:i`)g*;JeG$;<S*LpKL=[-nZ4kjXIesAoGA%Q!O:R_>LjUIbq1@1*
%$7-];gKS#ojTB,$`+H2kj0]>ZHI36fhlX@N^AYM:n\U_%hIM_,(%&[l!/*&S`I5S9)sLU/Fn)Ke6e-4\AmN'COi:b2a#/-qL[3^&
%qhHk'`bY&=XJh2E2-nDhGb>FEol*qM/OMo,L37.[dKBT.Z]1tY7:X1!Bh+>&U8OHE/^eHH1fiU:1raXu<NX<AL\&Z4Tibn%g7j?a
%1pb\U10"k6fN'jJl"e.M;7F9+NF-HDcUXen*La'a4.XMj/GuotlIBkBnAi1^g:5_/Pi!])8G1GT71JFd"*(QQefqe%+2GEg<Rg1*
%B*ni74BjX>Wg_!>?7K`\U5AH/S/q>Jn#@_WhKe=b-<ds*m5CpZc^[%a;^Y,,Huf@XpkR"_Ce:0kc((TSM3DU2,YldB]LghI2H`V5
%o_2V8R\[P@9fD*,*]R`jLFEnO+_BZepQmX,RklC*4^eu!!bWerRl9G&Cbb3Fq3"J:OtG@M%ET7)/Z^3jd`,OK]^'=8A9G.7jnILc
%-#%Fp,]1\fF;scrBlf_2nij*gP"f)B/P2*73>+n\XlN%$Q4up"+[r]N(]3*nM=3Sl')^nKNE"oMKAMS^SJu:1*9eD$1i^!f*8-Pq
%fod9,PSnJ11*^d3B#JW1N7=gJ1i7'ng";B%0q3CHk,_*XZQah<7LA(VI"6Q=MR8hAE*I9]<cSjVZdkR:d*r2.[p)cTSYeeOl;LV*
%GCSoJe>G&F_GAI1Li4BJ=ej`=&97@k)^[sF,&u,6ObO1)^0-(#d'[JFDGt5WgCftB2M>\s%?]=O2WmFQS[$VDiRZI$gH%4?VJJe*
%Cmr7sCXoAF/8spEBK*;5Ce8<AZtdOgikX@?d.LG!/Iu-$eQ@gR*_7WrRE_-20bRPC+_a:f,]1hZ'N8V2#1;_mPr)#MVEoH2VEqe^
%"r[&I]XPSo/4dB%$PGC062]jr8Fd_*+Pj%o5JoWs6'B]E"HlQik9H-1A3jDD7mLX'bC\f)P:VO=F6"@6H9Cl"Op07Eo!k[`mqu9i
%[rlG-II7"fmkLo%*@;m5ns-fHp,;a)5.B%>2pO?od:9\>F]YPFA?3j0q1BMcj-G+h]a=M8B]ufjI^*1nY3?#S0+FE-I_4XLh[VA.
%'C8='`"U_jDOf\8CnBTl5+]m'A`hV5s"H5;,@faBA)RopA8kg<]sl;VL>*a+Ek@;e][`ADh/R+u$%q;5s5gh(<W6f'*li9amP_U[
%N?>WFO16Smfo;%fB(I8$/[)O1ru+U:S'<snpsuBQhET\%b.^=Ds7QPO0>>*1\XI<?kM#:52LDUOrm5DdB2%SM@oCX?e2&HE/X>!F
%-M<<hI7SM61FDd"Qi17UZ6pH"ZP'ch<_P$)DD7'%!*+_*>b6V12b%0!*"m+B][HC;;h.2$,J?:DDNBH_I--]On7`3+AN.?X(b\H8
%Nc0Nj<+E>Q1dAWQ@I(RtG0I?W/L>(i@67'EL3Lr#,$?hUYK3C=dSN--XNe0d2t0q:XX[^;<%k-+;N4JTPV)S?e_,s5l`*.O"GB85
%<eO7aFedu5N2'4N]M<HoP8H5@Xr!CJ;b[s-a7=%HT&2!)V#\/BV3nJU\RVlZ<n>Jn?)_0>b2bXc@P3nXF'PdS$h@?;?Lm#Wju]?i
%B!pVtkSt,;/Bl0/@/Xce*d=h;/BX]MjD+/X%9?XgRbN:&NmQ0&-fW&5-39O+nf"eT#_M)JXVr)drLJq4=[llJkd=-L,s8b)'3u?a
%>-O&6gkN55RQ!atA<+XpP<A855dUPO3!+J\NDrgeq'Ku%(]T/.>LrTGQ6+=JR#cjO'c3j,6hZFi/YF54=&bd&>%=80:kYacN,9Ic
%KYbV6DQ+J^rG?o?kS4<]rcS+M%L0@*$`Bb&lFPN:Ej6f1n!&AcY6-:m(bh[XUZ5V:h-m\&0n&FSWqXb29g"<kL::j\YQ_hW\8ES8
%',%Qp:5b]BYm9JU-P,u.?3-&N/b?6unN!`m]iD7og<k8tTt0"rm=qPlD3Q*)opMmm`c90Ia%c<M)Q(C+e;`*r`6hd:\?rDCHY_tF
%lcaV;q=r)cBuY3N&<>nZQOi4"><K4'H16qo@_cmK4882+rmGq:K=)=NXfAn>"J9S"bm>8e]MZ7/`M@69\#F#W!p_D<A`%1pXcGIF
%S,dCt8O3r2S$$Pd;$/p,bt6`;^Z/Pd7rof,oa[>Fb5$HW-rf/L:A')0[o2,2eU!?>fK^0VNU9H;p_.-3-\2-)MQ`rD+p(Fi%YRW9
%3`e0Ra/ND_jsc=/dUm!`EE_+'D'6?r5u"MU%2;F%C4*JO4e1na^FH/)/:5)qo)Sg@LQ8n0`ko@ld,1]Yck*OenSP[bggFW5M2iY?
%@]rDh]+s;R@Y5G#B?Y[RY(noqD\COqis*BkDDeH*16uRRE]?6gfn13#_r9@HU5`4)beOG2"5=Md1$bjNUV'O1="pb(LX,1mg&,Pa
%Qo1"4C&DB#oI4NjbG@qneY]@IVI*f-@.%DoNfo3_a#Ld>4OgMa0B!'/0X97s?Qg@QWP<Lts4!pf`_X-40m%5MrBSFp.##A-_tL:A
%7>bpo=a.:u?CTt=\]`\;U\_6p_6Yb`XtdM=r!DDs9k[/^UH!Nd@@NTM*u\0of)@N(7Q8SXF)\Au\*=nHU"VY[=JN&V\2^mHk6g8(
%p;5c-%&EjFp,=!#COH[fFaD%Z\(he#Xgk-S0pLj^DiMt;5&Q>iE.'6ld8n9"#rLJ*^o0U+`+cR/i$N:q/W7TC,'qAE_,I/'[s-ho
%7!3mlME@?g:;Q4M0@fBZZ!UT;jp#^35@`B77eh)c1feZFD4]^[]\Wn9"AKEE#7d$VkbWj:.Hi8AQc?28_2LmE?FY`UgL,mC_U32n
%o"i7#>fF#1_$A-OT^[M@Mo$NbjZ:,l8kGM<<*ELU:UeR1-j-lRf\hDJ8NK*3D')rEbZMCT"Tr?k]'[f>P&;ifE9T*A$bWt"UrQOe
%YVJdoCf$Q."n#VDTSCsp:>km?.;c*uG^H(2E*I.]&Ql,Q[DOF*\/4qKG4TWRiS3@?_maK.mX'P(Rqi/h)M,Fg@'1*oBoTooY,,FT
%#gf_es,`Y5X\XQf!IcGa9^Q&qQ>EN4k_<A9GCJiIe>GouJARWMhQE]a[Oh+ICO5qBb)0u:`aRNc<h\%>TO_-'@b0s&V/%D>3K(Ue
%-E_.6dcM24s4^!TYm0P&lud#WlO;hEh6r62XQ+]p7L_2`hYDE=S_6VF<e.`0DnF4!lYHhI;8,\)-@0dA<)frUod8!s;LiIE-sh6s
%b_Hd+qJLS!IJRu%6CF<>%O%i/2keGi.#/OAR[[.9-Bq^Y9QLli*+53;9QP_u%PZ.%.#6B,EZ6Q)rJj(F7T4;^4&g@-=sqK\OQ:eU
%#;/U`_G9%`3_Y-,G^Ruj'`rc"B9_tpK8W^FUi"]O+t)]\#[QJuR'?7@Oc!P*+IuqfUf-1VA9/Si@f)N6ffZ=;85%Nb#?`j.Z':)3
%k\GU0dFuS;KtT(kgD93EU\p)\G`/2Z6FJ;]T0S3MI&f/88<(J[2bN_1KjBY[<uGt94tZB:1=*GIX1QaS*aTk((j87dc@D08Rth3H
%ahE:p]/#uoB4>K\85Po+C]nXd\A;\V<DVUn'CU<2iQe5okh6aUgHgJA:IVftndGUb)K9p;V5h[^XGMg#a<R9I`Hf?1QA+29d_jLT
%BdhJW5C_0BB>tas^nm&p'q(';KmY6aN'_X8QoHZp<%TX2H2SX+[=-^3BhGMB\&*FE>/<Yf$F&aPWN?q]R;6M=>?G1#C?OLX([OHu
%+q0151sEnXN%^2"SLWl$2N`kmf6X3c8><;g.fmLeUV.gf-tcU/m*LFb8sQo/oH?t"FgVP.q,SLgdSJJD2:E7FT8g-SPO4j:&6Sh\
%XGg#1Vkoih$#I9m>`=+ED)+CoWYjPGI\!]2UJekP&g5P<;,U,X9(RnR0U`A9h8#R$\p9SSW+Sna(;S<Ihn$50//EXgH;jYM+>&pH
%<0.EUq@7LAXIP?/W!ahmV-u!'.!B1<Wj!8+)S.]!Mt<aA:5)D=nB--AJ5DU:^Br^dFgX&(&'HRRW?\eCI7[gN;!BQ9WreujlY=T]
%/!W;mg*6epVEitHD6SqXX5Ro]oj)[/b9I'kGZHH!a\O>$rD9KL=\`+H+^DAHg8p/E5u(5EE9#sb2pOL\26L5'N*&5sIqR3Ge,pu"
%!c7jo+tj1DP.6-XX)_$L@:uVqUU1<ZS?D6(']l"5Wk^KhDkAQcFXmmT+tNsVFGs0:,0&#08CFA#!#,-7%r.FY.1HO`b!?KbDi$jC
%dlShGI-5'PAXTOA!Qhs":8>X'TM8:)Sa&5+2g6K-_#e4(kpA"FZpRsDWN_;_')2Tk8Nbfabo5Mddg$2aj$Yn>B0's_UARo++Gdn7
%+oAd>;Y^mqU(O*[FOR;[Zp`Ng.5eUpCN*(a2*)&caD8@PK*3eh_S`8tX&P*.W!utV1tuu)K?M-2l>lQbb18bF/8AaD3Mt^eqpGK"
%]Aq9G#Bi=h,-2h`3MuY2dB0Fh<1Yok[IO(Vd:3N@"%[id9LYll/`k=!<+4Z4k7j>TWq%*WMNr8*<6\s,C:s6SBetf?n=V?R($1qe
%/%@uB#(ol`4jBJKpm$bS4f@iO?qds5oUO':"Pe_-Z-,-2kiT<q$^>]>H`&K(4f:PEjgr$.:a+`\a)3ajP*_*@(o*_Cki%dkHW2#X
%D!4[+VDHpjdmgSjo#`BD<*gH>[4=mNL&/&9\@-C)0b,l0ZCsemGW'K$E_\n4V7'_`9pG=1L6YLD.T]pnNBIp-_!.[#<?@/pFhO2h
%:nd9lP[aW4:hA2+C<+NOE]>(/YIfAcZo,'Bo5VDp=*\l[C*.3JB0)'@NantEmkZ!)kajRNa%XN.drETR*/g5F@k`],+oaONEU5g^
%37DlkF;uAF*QMBJNkGT:LXh4&Y0*B=aB.;!ibe8&I;T?^2lT.aUMq(u6o!S"oWDW\T(QSe'nMH@5)@goCCnofCR+>BDKgKOm=ZtK
%T'P-XY98fgO'@l6>EOu_9`"X&P7R(;f=oT/$Z#:.J'U'@q%lN0SP.l'deC<EI7'[ld?VH?_59N_HOVkB9AfVce%#%`O#J(Gl+7u(
%O3Ktgq^d.+n%JA,JfNE7+e[)Vmooc)<l#O+-?+[\ceVFo^?)mUV=,@NLAQuo]j(#RZ_dH1O$*r0hZpEaSJAo;3u#HMM8eqY=a[aC
%;_9;FCEU]:Ld#sFU/,Z*oP*SXf:u,G*kDu4$L&\.:]"5hh?T_Mb4e1%C9DrV/)Nu&l93QKp_8TSd5A1Q&[D_=nnb^uqDGEcXo6EJ
%B14'MJh.:768lfhMB.MjU0FHMm4Hb'ne!?k([bRX7q15<qfMY8*MF`[Pg[PU/`\^rCY/!,lH7a\m;F2o*PLW:q=m,E<OUEL:QQs5
%q*"oV.UB/Pa`!K+(=0>$#-EL3UU8.H7m%r]o4`m]+dR_lFh(VWis=oGrPoTT?#B<-UQ?NDVeu>shG9RKerQ5(;o(WQ+<TEhjnX-2
%$dX`VIaS1U#(D^/pCfnH\CL<dmpUirFT:n&;,>aMpo,3d1n2or0YUn/$C(J`]m(Wc2TnVbhsc#Wf&iUN&IO?$p3`=Zj*AXm&lm8h
%I!ksZk@:#L8E[hYc&aPdE4\i#q/4B]`+uo$\pX0n2QW4lXr+7k@+S_CX+c\E%<A)l*l!1(%D0T\DcUluM!;.T=/+S'?epp8mf'<)
%(&+_@S/5=l&#M:gCBM`6G3t:!Wm(=/;MC,"i7CreZoe]4Ed<'99quO)kdSW7ZjR\1ZAW"u`U309J0V2P8kquk2db?^#_OtAUjq*h
%O!i^##Iq,-_ic%)6c8"Q_jI$NUDu%FPD![jFHukQ!9Ya>0V(:Z8/Rd8VO/?5/MUjYfH_R-T6Thq47\)dm_b@-<r-1CEY*jK9jAUg
%\@)2n1rJta#FkM08+3ug5(:h.IYg$ehTtdoq't'C=Uj]fdHZ!8.XTL]H`-m-54)dt&i"cfFT>9jAj&urGq*feiV;!l?WC25@!'Ca
%HolX26:Ss*jS`&7lLA@7Y6(eDOH8he58oRoih#\>d2!ZG1on*K1Gc*NR%9bh)s!dkpPR_Wo?r[6\#JMD?i>Mt<7@p"">qhja@GtH
%5Is@;)a.@VMg"L8eu_Xtm\?)eRXBM_rm@U5ib!&S,>*R(SMoHT6f)\<_XQ*#QmQ0gSaji>Xo#r/N-=TJ\2%mS/GElGam8[Cmg$J=
%'AGj?jR(ZE8:ImmFiS@1rGZ%Y:?&J!#I>>\c#U'8m+OKUlYfDOeG;o6fpMF3QbUk's1*PGe,<A2D_@?6s)[n_N-@4lm@<g@PQ$1r
%bXqi^D')^)J&]*ina:#%],C)*[ZpfNG;nR<*E(I<`k._Hrd00>2rr:*7dA"k\`:IuD#AUHUE,)H;lZq;]fZo8CNpf7CDeMCf3[X+
%$k&_lZ>XBgVHBLgZ^nRsBYj#/ER>\!DU^8"(NodLNoX:B4p&F%G$P2:gnlU(._"=(q!Ig.<q'7KN'FI7QjflP,2*fIUad,f'>QPD
%-%8WjBtNtWb_BM6#:Aeh*;HB`8JNFkkt2oL:_*2*-V^MITYEJIfNfn?9$H8,14qNN@ac,E'>WIYb-_7$20eK;&hs\28d*M!7*kpp
%eYO#>pt_r4gT/m^"Xg2UMT061[F^.9]>\f]]Q1<?'OcK(V<QAca,VAUhTEkm^a!S$kS=dEpb\HnDXsb>6bsG+GiRfj2`:sR0O;0%
%R+cSh`GEk29<)WPmX3AXDl?=.4#/-rI(i%Fr^deRql$_[9krCeE;[BRE^7htH4@BfX_-fl6(;ZJC<-u$TF7?W(Cj_I5cnk=eQ3-4
%?9>>/f-o&c_EDqJGUV6FiV:s'*9M8d83j\eYjgfJ'g'kr2GVtSXX/?`QT%N#CMe/b^*4,NjBFTbe@=koC=?F2gAq)Vjl.VjF&tqB
%-JnQCb+5ei;Hc;.mLR#`?W\%k(nEb%$Th*,`en:bP.,jA-%[(!Xi\s&f\!UdKQ5"Rm</9D6/]5;TZJm-:`]O+B;HSbH'tWmc6bp-
%'aEWkNq6HnEPQoEN&0)9FkY$F*G3"47I>f9&,o7#!2rlI1%P%Hm\,`mU)4H:bQ)LC<"+[1pm_rKYDj;fUddWtHK")DH?iOt"nj`q
%lB_O21rrh+5&3s[KYlN)R[D7#N#?lHWflr&g+o;YQ5;`-@!$S'D>P;b[^)*2a24)JmH$UCCcYQ\74728?]`6#d7JjIolWI1Wfs_X
%M-\Y'Z0EUmod[,2YNdJXOK^2S^KQn8Kc?Mu6_E`j.ru[l>?'h/UrduoGNG>QRaX`Y[*c4\?g"N<S2HbA7W[/E6d$D$9s(.-;qB$,
%aVpGE[)9s'R4VR:oJ!DAr\/W-j6#7%[YjqYk2G1fh"Sb)?#8;?bo?Ir9A[a-C)(;HEQ<@"G_`q/R+a#NSAfhN*6")Wfn0.@$k>o9
%-%cm.`"A=Rq_m9mh_K2)()b46fkum3])-Q0-U3rc,=3/=k,=h,8,&0,_QgD83V%7+kaXYZnt)84C7jLq`k.S@A<%Q252;Sh+%Cn,
%;.oir*18$_#TDMHXB*3Q9BrHs($$nrlMO5^UlGYISn=5O0f=$*f1[-dC[uW_:[N8Pm>g(Q4%UE;^E2^M#lA=_=(AklQT0>+C.,-F
%VG9i*`R'j;Cm7C;mhkIr"T&pf^WQJq`9bJ=!:DT+Ks^uErZq#"VIj"K'FR?t!Q<9gh#N"Tm$/Kb1^N;:T\l2ISJ3!"I'[KfKk&T@
%b%]bO@_c4".$7A-$0?#*Ao(A<J&7Y:E4d8_fV,A-6V'1#lH1j>i5lY=j^NjaT767NG<VU=B*n2p@%;_n=u;-.&*,6\IKY4kog[8N
%#_eYWg=b$"&a*5EP&d23lnlBTgA<uOF;l\;$UUp;@_8T%Ft;;M"DsF/*r2U>9D>9GTHS/eZlcbrTN.B[5hGC%`=Z'X6,WUDBpVV=
%VJ7O8(1&l:`LiI:B.klo=k`t:r`Mf7jBlXahq8A,?FC3$A_H>NiTS7,3J,[+'rE5AN&%JFgUXubb*:.JkrC4f6,;B-q!./8S*RE(
%S,D,=SuA0qlJ]L*r6\TLpi!;4gGe;6o)F1;j+$76qtQp^5(A%Sj)T-erT<dr`Kqs=-U02d(LLN6?XEd&[XVQ'^HOe@5<m>+r7/us
%;n_gAH'FpRgu?l/dGeC*(n[s<S$d[Ya7pHr)8GPdj,:h7Q/!Vai\0IB2n/eEDc^jP?`s@6guJ(N>CSgRcGGmJjX\J:0#,-EIsj?R
%d?edsDpIpb>/(".O,G7]%/JA35JfL2d.d4&[k4+%dtRHLr0mOF^+]L:s48@Xc.hFD*M;e$+7JcML(A4ZcbgQ"*oAO.kjau=H'lVW
%4s&HFSfJStcg:GaLE-*O?2",kXoQZFhXr,+bGssjhssq@h9Bm$bL[hco]cCf]__;aJ&@uNamo2Kl-J_rb4#2tk)YEr^WJG`PjkTC
%kL8U\A\I`bV]%,^bLq0tn,2k-QR?F4$b8[DJ!?]tYPHZ0T7(p9LVE_"a!\(::5=nA\pXM>lt5#Fq7p*[qT[.Tc*h7[H.CGX^AUE?
%ispP;am_W'LWb]QcE`K0<'Fs/GZj2'P7?hfn`erVDU/((QFB'XqYIgnl`6Z>M[U&Hr1U92^0R=:jeM$"rjC2g4s-nn5H.BIl!O#`
%qKDZY?U!6TMq^_pl#?;I5$NE/YP0Eshg3f4+^Zd-/MEa2rq^[6T>"Un-ft$m[k%G^-nk>6=WTe??[a_SjaTM*5,5eFr\l<gI!UTc
%n>XWe0$F.r^82(nJs5h9ZJ\m0IgC"/&6R$!**e@J[-bjtI/j#N>W"W%D`Xbs=#/>riu4P=O_=Ep7:(D7$snm23gt'$G2AW(s6EbL
%-bmc18(1LNAo1FIVI@Y)Q(P8Y1N-TL4hgf+$SJHuGl+T1KB)S$P?[b+>M&#8]L2_DR\S5IR.$$B!J;9Xn$;oRh`_\/9Q(roSTiqV
%-#),`+rQEVOo-AI&(7YV[]s3gaig_2M9u)@hR4a5P&B`q+ub#=HW?A=^Nf9pGlsQ*jgp'A\+B2MoEh\'O-]fNDH;[j47rC=m@V1\
%?#Xe4G/:GHnM\"V._g<"qW<k8Fh&[pqsrn"*O`b2'\qG??m#"h=;7MKs*<?W6B!SCWr7BH4)04lpKghr4fL%"XPYi5)US9VlfFag
%=^HRUr4+@Rgpg^[GH6M:V-&<T'\a(Jip8YGCHgDQqLpWh@!:kJluls9H!ri1_D$Hj:@@)BM_KGSpM(*Xj;1ScrINk4l2Q:+3re?g
%s'2/0_99naneN0r*cHKgq=3b8LVJ;I^[[?Yj/LgB=h^YTn[md?pUt(]j;hIUa<.H?fa$gAF0P'2C[p\\[eK5i_XDCed%2$#AHt8B
%CBGR0Y"PE3jKLo`)'_oMp$D#IbesabXl)'DS6_^/ZFfo0J)6^^YL8klZj5ud5B)^mD1'6_ClAQEc.lJm<Z4:CJ0CYR/RN-O'TTrQ
%H+.4*guk'kh.*`>H"Yfa'EUV+Z3"UN!IV_+Cg62q8jj!X"0B9K/-[%Z]042BpJ'-*8ITcCj)b.k&;)[Vpc8?MTeDA!k0T4'EKO?4
%dLY=B7q(j&aW-8QK-%8rTu67&3A7P'K@IXpm.7]&"oc.o5(BnDI'nXLZ*-HcpZT@Pn"k!CZl\:YU/PRqg/-gYP[)@[*?kc&WXg%B
%:\4UmpRY+H/4mSFo6MYD4!6Wk7!D^V<>SsOn%ArL#nRA6aG`,4mUq%?QW;k)n7QrWn*J&bM";]Zb%@KrXD0dif,gghcZ7nA0-\>9
%r.kn8Bd'k,:N)=.X,O4Og]1Cj;j&6Y!+,FXNj$hSrg09(O<VUPWg%Hj*,+mf16J_tDbLd)4:ui7)gqG\9CO+4O6=DWoYM]92@'m)
%Iu+`?[,=dqge0#P;;^:V8-T#d0V\%CB*XdoFVs)T-0YHn$$RZ&"M3)aEM*R\lCWonJ!/dghh]6J$-<6-E;=C;'="!Sou@F#D[>W8
%8P];;&?5Gsj?``?,)#Gm.p;iTUu2FVNu%^PZp4op+%?V;/X5aC<Cu^R\+7:3?h46P_U%#S97ds@eb4-h6[2^YD,e+WTloPqU@;EX
%@8*<NhR<G>E<#0oh5HoTO/,^dD\%4//RL%$gdCu76JGh?>&LgmAg;ZsIqIg&QbBkhY9t.pB7Bo.rI=UcJ*[n7_pnJG;l*c[rqr\N
%-SRLE\g+,[(AJ`X)q,>,3`sW8*0a+d'TU-/(#3+"jP(/4Od!<JH+@+tH^hHroHYK!M[&Qa]%S^%CN7P5%399o>V@5s5Mg2255UC-
%[s8etG-/m]%0Ne<pXIY56&E+bVd)`\[(UR7MHA9UI_5)OY-eXW(KZ?9LC!A3OIZi.C/9Pb1E9ZX@UCCBTgZ/99.l\%Z?aag!G9gb
%=,VX["ec/V$\$GkUZ6&eU#[Y:B(-dOStpHp=Sak>`g\1M5b)hD>TXGa1pBJs=C(D_)Hb(PF&Z=anUed6RfQfY/<1F6Lf`:p+Mh(p
%[*prV\pM*_J/5#,WH^&A[ktn(!n&0cRL#7(h]3>FFQm-Ne*1#2nABd)ge`8a;.d&Z]GjUP+T.Z/IV(kW*CPM`=<A<K=U9+nJbUdY
%B1BZ].G>79VjUug*toCL1EOaBp&q-dFAG"-<T$BjnH))CTg`4bYf)T4\U5$]h`hl"N&Z\j^m0Y5[(lcD:9Q/e+c]C\"?NCuhn`VV
%Q7#*3K1dZ["uXfA%AYsWM4TP::ofC[4G-0dB#&%FI522Qn$8)J*@2-Ig1T):NZdDNBnFFXoG"GO7UtuRI%5lVSqP+4RD=LEnCm(?
%!kqRpiDUVs0s;S9YIUMAoa,3eL^m5uFP0&RcdQ^F6FM0"3=[u/dWhOAZL(3"O8%nM4_'2[_i3\jZXK#PSnBd6.%Ja*JW_)kLBlrX
%gd$!N)nr]_0&lbLAncKQedC8aE=mp"bWrlc@B@`F\kEkh5@j0m4=M;cCPquHJ0%q%B0!ok[%&i:U7Yu1nkE+T^irEliOagEI3TCr
%_@!.Tf0iHpo8T%`Bk3k1ksqdanW(Xan-BEcPR^Tt=MhIFN#ltmY[JEm(!IAR-Fa6-V;NKc%<hu,=don(K[:n#EA6*g=,%nc`Y'V-
%$O9p0#D<8(O4MoHX!3AKJ:DNC@AF[1)4"^'KSlR4@*U7a3#0PLfC*aM5l?qU@S/%MqI\n6^=!!*0a0T4UQ*(A_.[Vb$eW)ZOY&1M
%Aqm"8Q31hlO(8U;%#q4O`MQdN/7Z<uS[qmaC?:-<n5@1EO^a=cLQTQ3^.(m9a*L,B_0Bj!4aQh1Z)<9+ju@KkV3Qr%7V_jS+1h;C
%1J*AG*'K,,@DG4bVc2[d"o(=hX#LtXX@*N:)u8LJ9?n+NTf$-71D?f1R7buLFA!Yo03:2f!_.^%%MMaAjrtN_qU?M,"K4=#FP&CR
%P)_<Xq><^h'ZskH_8U0GLkm@N4X&,WEBA&o'f0LGTEhOG?i_A<Q9;n>OKRWT/0SO!*s[.@YP5Ds!XKD5g)*\:=4R^;n;ZYLRmek:
%I5d=-+e*l-ik[PdLn>5GS37cnK%XG\>+sOg=F-k:/5X(=)+#MM[W#n9/g#P<]L8R#Xm5.L?ECbbUntlE<.*`^G66?RUoq+<83KeL
%LBsQ`/=j??c475)(-mq;63jBTc4r1<@1)81]uZ%G2WG]:V\dMpW%^4!U=`Pc>HCU(?;>$).+d79%UG]D.PFu0)_mmn7(+,'E@b3i
%8$$<DO_hR(%2^V.a0>Rp#MJ"EDjZeVWB>-!+39W(9!4nnW.,`RdnY>/mWFuZW(d`f2@Hq5nrEmeCMnn';caXl`r@Jp`i):]ZlVq/
%2@$PhT(-:C'mOP=-kZn73>[Cqhu=6Z8fXE-Wp!=1;Yu'V?O@^+7A8l__%VKH@"*Xd/G?j"oRbd-+<,p8`'qck?W.4sa($;#bX.$E
%Qg0\-Yj6W8K,muI2o)q(4d&Jh`P`j[Lg`(gE!X;hN(7fO<O(]$5/iD/+_J=6J;eU%oFRTci5Io?A1/B3*A-^X&(0#NM_Oj(khe"B
%OZ6cRJCr$NFV+o2LbOusCnA`C^OF-5M"g2SOd`ZX=Zj^`,kb6dBWjBio'V9H9P%0?l[IA!!(;!n"fG!4@eiF_'+YSY:D!OB;2aJ@
%L5%geJ%P\Ok\HJM,a04Ks.j:j3@PuNkku$sZ?Fkp!GQmd%uMo"P"9uP`T--Z]0B[//"ZY<5Bb0$ORR8<oPaK"8PQOB7s6N!Gi\QH
%W?<t+AbScZ*ePDM\\gVn"7@3:),!F2i=\mE],=36=H2$m3AIq?8<8'[jp?DaUI`LG@Kha9KbqDn*9632qE1CkF6'*Q(:]^q7X*i/
%cC]H]BWKQrpP$1B.>R]j@a&1C5%rGqh="i)b09ONHs`lQ_^HAes$N>tZW[=_^fL8^BA\'9[ip4@:F`1rs01<n<Jp^P6Dk!d5(;.e
%2],@Cr55o"kYpA_<oW#@2ssWt1lG-C+!/J/bP5[B(>ZNIOiFH0F+ndgh].RTk./=BfI-jI[^UGFV=GFPSf8OHqeNT/%AjO#G-c3b
%Ru#qmRj":9r`b0R-dC)gY4ttqQC?ph]6=j^5NAAZpS#Lpd9>l0YD$S(Y,=Us\*[N1Ln`SBpd=A*L8_53SjaWT>#,$76IgL\<haHC
%^VLVXoW[--@@[5s?+nL\r[g$4X4P'hHJ_2mp#8WToW(\U:&gVLnR"e>q`Q-PGLdKk%JhU#ps&(&?U+HQ0,/$uqKoJt[f7C:NdV[)
%X`j[9ha%,<91a66<C#s]3g9clmj[qEK5YEhs)./uho3a?LVNd,d.dP?8`%>Udf4+.5/^D"p_pQR+84g)s7*-GO'^Q>^V)4+LA9t*
%puAg^<[mRXd%@dZ>Q.iC0>Js@oImZI<45T]rk-"El+b1A?#nLp)IHSGBnq3<SLjV]fiM-go]:PilYSC7i,S3D/*,C_C3q$arS(Eh
%/1qJ!SS#-s61NjILKQpsmb_IoYN9r$7/#1r@57Vn]U5CU%@[3Pk'C4#m[)\i;PitGE):H&WuYEI'G$F7GMRg0.RW>sVnn^kgZ;VL
%3O%*dj-G.TF6a%d/)9H:@(Y3?)E9.Pg>ur.%k`.mRE'I_:1'@D::nnfs4#0`],uFqYe[A-mBKT7/._*t)kBI:3M1\SbqO:6>&!Z4
%KuYc&.]Grh=\uA0D-Bck\(.EIQkV=07\`d0]l3[LBYAL`+h^($m^2<M/gL#1+;!@)=m1E'Z[H161eRp-GJ-#p%Q%ZKqo>T.>oF#3
%Hj9Ml[befpaY*6>)(ce]#+]h9o%L&YHI2]PJDG@Z?T.d@+!"o\Sc]]gnNsi]gF.,Zk+/<fE:%82enPnTR>V$;/Q>?Lcp)umk8sPK
%Z%SHI^%bJQ@XN"C@ljGun%H5QqZ^YUC&YM&E)cg`HQZ[qZjZVnC8Kbb?4&IddEiJ&B+),^(0ZLLS]0rYWKt^RW/m,`Gn<36ZWaKg
%(TI`%7]4u*T%o:fqT9=GeR3%42X??EZWtRpRa&!?kb$q7hWUN*s,RDh5ed5=L:(:Thu+Vg=^_A?Zem23)$=+)^QtoBW5nRK%uJuF
%_")Z^o\%X6JVR>a'l*-Y!0(&nIDu6T<9[i%\lNJXd^SM\65:]H`=5"4]Q*7[,[/f@I;O?2IK[+n;h))ZVe<\2B)"^75at:h'$Xr\
%3@Ujr)S`*"=$"lH6l@B6-;Km+q?a]\2L(/GeK^"U@=1mu1fC*mQTF[(SQe;+r8677HMF?l.'TnWlM2>omkU=_mABnUI>LmY3"*.R
%#8?E/T454Vi3-ZlbC:n=njrXprQqAQZ!%%/j^nUOLG*@l:+FOTd%=poGD1!Hkn\!A<qdh,F4boM0`0[.*t#L7BgUDj+HaDWh+fTP
%8ldfuWsh_+/Y$(WBmR&Fpo"Z!k&L^tH\[*"1=PVLZi+UogWuZlIc/L.\?d^=H]O@LT#K)imEm$J*W=;b$]jeJV:*+*D#K8\`UX6Y
%m_1%tkP_E)/[$1;)7c(U\;aA_1FInh11)bf*iRW$6p+;FRErj\:`97@H04lcXKQhce)\-_q\:7bpi/A[;1<%Bc#gXcRHOEplFt\q
%/V#kYaXO+'hY)rLf9auMe49Jr+_;Xi8-+4nrjC+#Bmj[`I^5LCiB+.s;)'T%ejn<Tldnb:SdM<7ZeTX$+%L7GE)>&_e[Nd6%KG:X
%L,D#tG)t;UFM09C*YA>LXL7UD^Tl9/l-h4L<6"ASIC"W2RkmK=&bFZ[*^:WX9QKT*hS1GGcXnIUrOBM4kQArmDam1MB$[lCh\/oF
%^d"rqML><)LMlh(D*C&PLKZc>WkS103^9a>GK_]pd>G+/IFG.=?c4IC2g)B.8jPF:$]WYCIi>LV.\TaeW;h%V-tLB-*5C3OWVcbL
%e/RE5l@9DI9fD4/o(2"%c(F6WEW5R*,kp#;_<m_EmKru)Sp`CN0Z7>(Hi0IlW\3@.+X2WeG>hqK_bUltBVtW8Lk-%6SdIZZ?u"JT
%m8$.c[4.NLRI:n_Xiu?DMo/T-C7@(!h\%0RX1T(-olB"%/\B6oI=<`L:4n8qhb^-E/P/cK3#mX$j5Go^ogZ"[HTBK[T<G2k>5=:c
%ff?`!1qsd*`=KoVFgGC0(seHhL_!,\p\u)O2+dg)-b`splIZc1!aTR0qa9XIjkhVec4<DD]Xtn$5F@T%n6G98*^;mB@f8C^XYs+_
%3HoE,K>27CaT_6^^Ji]sg92ngPoTHDr..33H^b-i8ZXhAlHMO;A*=:Le)R?U2A.iKX)m1p:(A*mf4[@tCYs$7=_bB/.](J;T[`dl
%?Q`4IGj:0NYD!Lp!G8AqBE-GZ38AQGkE/KNSq5pB_h$;-r<sM.c"u##8R[$9Pf2,&1>CeMhpWprmo$\rH*$Z[s(>dO/Id-^YlD1B
%Em$em=SBLD>Q7"h16Z``moop(]\Xn/gfaq3[u,lS\SFrfBm2BUH]=Dr)au!"B&fTp]4X:@nkUe5c>k\B)V&;-p-Ucs*sC_%G,6(`
%=Gtk<)tSO!8^.d3rML,/ZXso"BmkJKgpU%[e\@:S`Re''_Pt#:b0BB5dqr99rQ!)?FA4@'Dj<:Qp!!R8%$N?Am?+m</R1#:cY%65
%9MTp`pFCF+C4G4CK?d5ofF91]i%\[@l)<Q+:JB17i3e%J3r(LJoe!4GX&6P,-dg9dmEf[7lhmIAh[TP%Llce6p.o/#ohoLcDQUVM
%-pZ^SfNU$o[#F_6gUdDi2X:&&jPG96.T%bYYV-F^Rg^9_J"(WY.LO]j<Ld@I.^[oD];bJY0.Gq&r)@DaeJ9V1@e6;hp<D:CG"#:Z
%m<9s`YIt@;B)E\CiZ,eH&7_J3la8gc?_m-Km/8hj[(B!Xg0+8+]=o<j3SIbqT<B+%QZbkPPOk[[@rm@1W=:Sn4.TMlY.d*E51U>c
%.uC7qZ#$7uC(8AH[CdKJ>s;S#h"I(H\$!`ZQ^aP?>02-GiJ?gs6]TX<4m*laSDiS?S(-Nir)BH!gtMC4BU\%nX[Fs[[F*8^Y3g-Z
%chlhACh7%[QqO9q*^@lV<B@#a<GlAY<aDf8F3iGUs'g:(rEA)nV:Q74:WZ$ce60oh_l&pcl52]bT6kN8mQV_/=Qp'5Z@@.b50B`t
%^7MaAh<ah*r6*7Unn]iLR`nKcFB6C_9+Nigj(mcEG.3Z^\3<o\l>lQ6p*'%Wc9A38[gs^-UUd,2osQut1j3U<U.)Ps2ifn?qJ#RR
%[pE66A>[9-iUl+$:sCQNXAJ3/2#;J[=j.\7rUK6<IlfT]*YG0hbg+^DE]H4)]TOjj-5TH9L7[Ob`PN"3W[.0H>>JjGf9n(dAnCaT
%[W8]Ob#Cls`ho6IX%n!,E:aSYQros7GS2imS3+8f:=kA5YK;Lc\Jb'd[89_8VY)([c/Q=(I$o-;+cEmjed5b[NKr%nE([I%lqDs?
%g"fsOT:RNFWbV"Qm,<>-A3%7c5BN?ddK*YpafSpmTgb6Kh^%A\8scm@rQmE_]3$#G/M5,e+WS\%4I,e$TP?4Q1*NPIJY&+7*;=bm
%4#^**+'hG`0:J7tiX[t1$9+YmSGU-FT79EbY0>Xmk"kT<VL<V;IqM7BcFn@pi%lak\<roZE_DH$G+d<<q74rFc4-CX]ODdt2\SU.
%:ohf0]S,V='&<#2"10QT$k!]9gb#9_=)KVcnj5MVdmpt3AF<l<o.=;tN"'F\rUKmb>4-PgIIpKTVtYq(gZ]qYJ-=<cqL")[PqMW?
%G>"JD987]gW:f;L4'G`\2:nQi40Rfg%eCu9.?.Q!81kCsSXNKoa>?WjekM`Hr3MBJj_",KfUpt`?/eciK1](j#u45A1Ne-;*h3+4
%mmVYX.W`*:MPce7/p,*7E`G'YC]q*:c`0nu""h[mqXWE=HSBlTdI)D#k.B+/6%*kOB?^Qe8!%G'WCm"MW]CBr]J;\)R)hJ5K8]Z@
%1I%9X2k*`@H#I+D?AZKhN/k$jo^.CV1cIXI[fVlO9]ait<P_9.F/n3XgZrHtpEm5[P'tsg*I%+h[$!#ST!K^@j;_2V<Om)&*F-%^
%(+q@X7md[Q(.$Er3m,(FeX)CRc*]bH@3_:tg!ff<otG?GUn=O<X,XrBXcmi*c9%Q?XgdR+fh/:h=`dDGmWfI5lYG=)c';p3?\tZk
%-9u+rab>_4NG-n`/!=Uur]7>B\_=bL]qu>/2KCU=L%,m6^r+fn9HS-'+.#c`edF#(E;tloR85m>Wu*(@r)A*b>8`^4B6<V`SM.^i
%NCG]XUJqUj9TNM?D3:o)(eYrM)j@u&p'YX]$HIO:n2-P*Dk8'%BUU!!*]:H55#S/ffr__.[nh]ONohD2@lJfciF$6YFs?Ip)^,5e
%.hc\%p[A)"OT6<4oP'ngmZXGI=6o[]UZ)=uErVA+r+n@'\0(tT217Hl>g$.tq^$&2JL3mtc-<Z\Q2,e]_11S&4AOI$qkNQ?O\Bo8
%8`@<7]8Wc,V95UKHu_HHp=?Y_h#!T$ZkuLGkIl`2S#j5jh-.foMaZgtJlBCU?#lj_ZV*#hOf%C3A=>7^^LeT3ZeUaoQ%rT#55r./
%h;]BYJ7Zr$l1sQY'hmd#]\A?6*_kc?U!XpC>Wc'lX`h8XR;"?`rtrrLne^=-F5-oAg#Fs[,-W")-uB`PSXM]O=[:=G?unG6G8_O_
%4dN>9cXu9G,G\bh_g[8ZV`F[?2mUrPVJ2">)+<$skOrC2*&:.HC$'bddlkOdDpS10L[jdXBUX.#@6+Erh8+@]N2h>c/F^Bb^[b4k
%e>qCocnt\+](d0%I=!MWdJQqU0/ID<=%d8"P/f4h"-'eLI<Ff94ltDRI#5$1ZWH:^#U9`5?)-rXB6\jFZ8>:7`eAUuNR9N95K6V$
%EjFN8r7?/!7VC1]^`L)O45.Y+nT&+^,Q.qlbf*61MoCJq<P+_8`[-]C>BKTji`i-cXFgY+bBWNqc_M_&0':PG7uVgB(2<C1%(s^b
%)7gKnr0'-mGcs`2U`N's57=LtFh3l&G^/!hK6+Bh:4K(#:,Zl<bHC_/e#\S2h@a"DES4j,FS85e=)Qb_PKS$m?D?baE;//JoYcot
%XELq<^"<C3rN[HFcJ?P#ee]CZoPiDudFFNYK/%gGHRF014?%=c:*7t4ZIr,snVWS2_-0oQX1=-?:g2SNBkDSE>_TQJa[4lAcHu.(
%f_B2F\Pk/`%37"D^&)TB=tQQ3l/hSSDIXhEr6C:#F2d0l[(;]0A*s*&Al"R[EqK'CY<C1#S%4$mPpc/.?g2_PTQm]-nP?j/f^W(.
%P!%Wg<-%DUp.>4h9klRHqQ/t3M+LFj]X+U_PF=FC>iIb'^b96u]oM7DeG'S[g_t!'J%#"GEbEYu%]Hdq[jF%8EYG:o/tNUjLdq8;
%3.&F5oPc_g"_[;5SfUT>4+#F^Hh"S*7j"b^Y&^!L3CZt'ER3/'GY>)I9`6)b^2mC77rV<DR`IZVj]e&E0>,bX/($$3c(J,ZfFurE
%jF05^@ekNo$$ZS[q&DOjh-6qOFPR5nBeu%@dq+hM9Y#TGESU9Eb/@V/DC$*(GfdqT]BP."*;=IB#nq7>B$Stnk\p>s@W^dThu:#I
%lDU&prLU@'H/B_f2XPq7?ZXN@gg-d\439Mo3kO5pJ^-7^[ROj\j**8=4*B=N7#Z/WU9hDC8aEq3l1bcDbqIp&FYm6uUO)HW*6NFL
%[@^\b.D/*E*%;A>D4V7N(Ha!QqO0kBAN,%I>'_NrI\H!X+"&luFae(Mk&OnCj-@a\)gsDi=F+_)(sVEc6P4'&GgNH2A9_k-Cd+9c
%T05']>!.."R5.,3?)?NueB6&/jNpN5f"(BAoP<)"4B0;%NQhCY19&Igf,YfP_'/16*1ekCnK3]/($S&'HFBDNcW/;I7eWb/8(lq_
%I,XKJREV:nX[V6![Cpl@F&u]dhd!;AoJ`;"r*'r[&RAOVIHn`8Fi9l3-e"j$HbXt');XN@`J<RSQqd$_^LUi-mCHKk>>D&TXA.k9
%RZhq[ZZ4;`^rGjLa;$6P8Hpj5>\<<qa]Z/X(B$TEb4'Z/jg]34DK`pe*e-+d0,m\o*\^3gMsHSB3,%E;PObEJZ_e\NR@E<%iHEt;
%i54X(>Ae%AbbX%%P:8=K,2Au+qI4j,AR4ZH$o4iAk+<N]LD8r27tR#]PYBB6@:Ek\id@rcX27V)1Hde7Bq:ln%uufSq)d8Cj/;(s
%ToAn-5!&Hc%OS7j<BW0cosnq.bSU"$((bpC:oF1n8'E!6k#OraFr6OEL1:l[o5giXT:6B[WlmoCNRg:fl>mJOpQ*M(V_dE&k8l#"
%lM>Lpa+,lO7a@&J2lCeR/<K-GRdB/)O2`M2=oJh4.U+aPeb3EhomHQY\%-eF+uD,>>AhA[O#6"<dHL)Yb3dR>%@q&kpc.S/-^QkB
%9eXi\4MUOP4.MWW>cD:OJCq^]3iCjFkOM#Yqjgu8D.oaB\*<beSf8dG<`eDR):Ho-4D#ZW+7I[QS_,1:P@"$o3R\I])E7?^I-o*X
%VFe"<EVE$<SZ0m[Amg@`OI^b>&2s+\D)abInUoN(8.'Hmbstr(rZYLHJ9g;KpG3VF:C)Wt9VUG?Ua,W^]<h=Xjge'[a)$_-NLQK-
%=J!,ghP8JqlQ=G=Nt\qfh(6mq`9#ch.#qa=fcF[+aV=;iduRL,3h*,H:#U%%?:#/G7HP_+.D`A-#0j\W:>Nu;H+'0tae$"JZeU`1
%j2_VUL)qTHm4T(-Wq5#`_nPjO9#^B!FJ?U[_!]APjK7htRB,bce:)*p?N-7MECH[4`7%4++hfs>H<HhHCuf7J&nc8orh=XedBd.T
%%Lj%(Pol>mgGrP65Ag9JM2@SB:Rd#5F(\YMppChA.h+E090.Qe<r)f\7f$il3PB^,fmYjaOj)/u:4G@s]"8gWDQhXjlQ>3u8D@89
%n1<cc.F#QZQftC!VO((:cRR`f.^D.hhD#f'?A[JZ'?b;e`H'k;A"@^dhg"MYS0`_2e_D2V=%DhFU?;dt2T:KYI^qLX]3B(-?t=H$
%WST7f*\K;4Vp=J'o[D>e,Ib5Rn?TKAja6HPL:-4DGU:%I\TjB'll:/L%4Cn@I'L3FAua1RQhXOtoO2lf-G?H%_sDR3P18"VXoFLe
%/uHFZ;_2$*W"0O)k9R>Mg1/=t$SP#g"\YO/*h4+qcYnL>B\>I,5%P4(kM)ctM.k[+S_cM9>=fpd(N.^<qV45H\%4aI:".&`1,#'k
%M;aR@)3)q?*$2[-/(sRfj%=K/:A-AQA0&c5]*e_&eD-cS<6h7fDN:990b%=:9Fb`EV0;bCZ]1g3iTNc!+e:"Pio,(>,JJn=d_XZ1
%3\j+8\a.E6d&5?/O/ENegXRss(i?/]LU%l`g=kWBb5=l:oc'2#olltDD]-?5cJKan[E2)V:R=gg]t:EBgue9l=;e=2]=j2HqNV?N
%FP,:p2]F'A2)8?ralM+C9\6/%@`OM(hlZ.uqYJl!4H4*Y4F]/ShOg;u+h@A)"P_$-C<;lK[+F/:L%CC1p/dP%(XC[Zs+JgH<Vc.e
%c*]=SJ'o0S?go0"aGr9c%]*DL8r(m`=J#VZGj3<a`qm\K;]X",B0oLP#KKc8.%"^XL%.ImYmW*[Y2m&f_XFRX#t1G,j_(dg`L4c$
%`nLW:.`]H;NSQVnFZZ>$CMG5gkZI,q]@?TPfiPLqK=R\d*WuB>BVerg@_h_bKn;ljb\efIAbtV(AA>1@RJ2?#\*Qk=s"X,NSK*CM
%5)/R\I%S&7S>9.+NMXOlodo`P'hOXc,::GYCm@?am#'(G:`5\Vl;$`Q\+\4PrRA?biq*Klk%/%FAEBbPWP6s$Ic:2Yo2NH7HcHoX
%h<^+J(Xfp*fD0-[l6a]<5"ILJ2gkh:ESS/n(;"?P#MGYQlN4XA1UfB7]?77O7lQasf<VB"e*LENOf$EW,Qjrci3(1_B637"LjNg2
%%r*nq$WjmlH>^F'hp-(tO0<LL3`f'5VBD$p;>n>PD%AocbgH"Eaf[ZhhGpc2KqmOKkIrJ,l\2\,f#65ako4V:ngMuNAOb[G8D$=Z
%_qp).]'[ui\e]=IJK12Pl<I?MinJ#C]d/Mi==h32`GJ%EbBfV!*&PpWZ5Ur,N<1]o3i```p%d.XnBH&6RQ+M$'out?_W5%#3pduj
%Sm@l:EY&'79K/b]RdAhbG?4.74&;g?(uqP$9/)8\.GnBY82ecPb0%$=/s+RR%?`!+4sa/KO/HdfO'T)gDo`mdFX?ph,^O2cN+B;J
%StlmLRuWVFk9I[7dl&=5jB*FFdAL?;T=8LsYGZf/2:-_p8etpSBr.BrSOQCGQcV0B2NJ8nDR)#r,dUo8"1H+/UQos"Bm6l+7UKRg
%3Zr3rjN1NK'[s[`CBYPCkJ2bkCP%I[QaK&F0:nL`k6e-[kM/c1RC9*\Q2Jn[dkSBpe)u.+0TGP^na>MFd1AfP.p)0DmktBu-JEP6
%Hr3WARI,ifMQ3fI-U.gLNT;0+hB0JQ:S3E')?3Z0pQ.Z%B'PMSAnt;YD&/FnX30Iu%HcIW]86c]>aW-qI9Gd6nok28PNipgf'BBk
%^Z]nBZ(HGJ/s/c-Al$nKoYYp'WE!"6ls3<8HVi)PCeFme`q%*o@&<0JF]8<g;dY2'Yh,PDfrKs=\JKSfF?_e.,shJanlbOiT;U,F
%V8ODmJ_(s1i[VF"G]7t0B*Z2bR9SQS4-6d]a7ls113*Mn<3Pak6#]kHCcIK[U*aQ.X6H4hb1WKS?WAibqDOc!:28e&j:q.4&IbUc
%EKSK9\`;)WYWg?>%dV0a-EV.0LGNmZl>gR's(AT@^#u*]EF?8,_SOegNZU^S01gP@?2UoBQ\m;iq_$Op%b:1/_0EOj^Fp,aj]63^
%,Hb%s9tU//IX?kFr3l'&iNMA1::4AA<6ONM`N8U(Z,kCl9!u<;s!nP->Gr:/lHR"gcct1)D%DPYl6l=ohiH;;5GC^=PABNVo5+fo
%`t<C;_V]esA#%D"CAk">16G,g4*kfiF.5-r>SO`:h).@);Aa+#A.B]iLUP.V:*S(JFV:JKg;3@HmW)N5<jo42#^=TV:Fi3@>E(lH
%p`kog\B?02P@K6%`:sO)9,ML,GQ6n+O/>KnbK^!.Q[Tchin#E.I]E%Xa?KPY(p7J:bH#5DUJGP7/>$1^:!aD\A,L-AY.22s?g%49
%N!SU4nE[5kHur5U`NM`02')+C#5p5>Lr&9'iSO/.rA:d0?QmQna&;.NqIL;A"qOa)??QJM1pqu(GnOLT1\d6%)N`'%h4c!g?2j.^
%[bQ8JYK-E\3e+X62NAjdoT'J;hU?n:Il4jcZo/f7FrQN8]3b8b`)>WPA<&IU18!m.;dsNV;IjC:pX2QM/X#ao8WW@(I\"4qT"RNl
%d7A/],An?6N)(8uHihF^:u]U?Xc%$L2gdXOgmtq[J,DS`h-?7dU[fgoVU$p.Ht#,moCTV]N6[*fj8\nIEJ2@Cp'<$Q/e"uIYJX)O
%cHm\QS\/MV\eBID[Q:jB6h$F7e9GpJ8$mV9Ip##"/m'jUAG-P#6?0DsE`Y'[(C02WdaDeU5;VBlMT/SUD`>enilaZ;[!jpDR^nT*
%R?uUTeFM@>-.>4Yh-lGPiK8I`:`=b-,;&WA+TlG,=3Ac3C1#S)8HNe?#VW,eIVWLbMW%>#O$@5_2Du5j`HG0_/CcXjD2$DJ#u>]-
%6sWJPr2T\6_b,YnLbkM28RK/;]#X9jZV@`PD3pL1<%#A)5"$IBgN,,+XnOL%4CUgA/>Prs(qK+!deXl@1:Y(bF)TT#A!&7_jLp?!
%[+h*?mH_HnS>NJX0!i7)q#4[gM>k?0r't40_OXF1bnOLuK;H!=6m?j?'CdueM8[h3)_2r9#<";^4d_Vh3I=CmcK[tJG&t7E`,b>A
%21?d`<=bWbjQUbD8VZSALd+Uda:k>*_9qT%`6_J$-Sas6mh6q'\9N+((WkFMfW;EJ(gj:L-78;=ou,qR>Uklk+3Z"-:2Wf>doZA.
%7-]5I+u/[k=\(NUHi",YV90*!e/hA@cEU%GU[oE23AkoB;!r0V&MA![KO43#'!oW8S&AR:Lgs%.N1R&fio7sq@d.F^0sOu)PDRNM
%A1j"X*4el*8"7DQQ+aZg`7dcB.^?_B(eSU>GLD>M_T6S'B.5j'fGg+AM>d<n-#pH/m3dpbZfAtqkBSb$<hIM^/oDI:HV@\8*NR-'
%Ie>11G8*^smS=<&';`%TE8mRu\<V<=(YX_4;.hKN3d^jlW:-Ta'5tk=[mYSc>8p8;(HR19NQh+SBP(q"E;\teGVGOkEX&FG,Bndc
%G%#8b\D+2Dc!^$'].k/jN/\@nc.9$%(WQmSK?MO2\&%F[_;X=pc)*_8I_B&.gq$\D*S`5`qh#.(rS$1LqrDG[gnB;%dac1MgV^ts
%i;G0#r@k_K%9AL'JCgL7ojD8_>fS\gZ"#dNGh<uW)YKGgL*eDEVaJpgjP@H-4<+\t7<0f(/[U8pn)b[GQ4KQ?L2o?p]0g@hcH=Mb
%l-$rjhUT>)FS*4"4`ikE0fF-U)hUM3]g?e=r-7uto^$EYdkjG"KC%&`CGbuL4Li#q0K_7YI2l#=X?I(TF.:Ln6/qZ^=C9mu%52TW
%'#WCm4#X_udaQ+gajXYm@&gUgI%$L0*PRt&fc)Qf%UBQ/Ci;KH^YH4X_i=A)C*YOc6*\eXkh4848?t$@k4_WE2Bpo?jN.8Eki,.Q
%GrQdHIG0/hg"ou$(cbQpjcT/Np=[M]p#U%doN[M'caS+F,E7K<lY*"ln41N*9)GB_dFZC:Y6O/ZBD:3)dH*t=`ocKb4P:_15's8g
%*fWoHN*bkShN&GBMEgr>%PC7e\^T&AB6rQZCp\=G4Z6T;3?.QcY#AhOqf>hKRE`<-[_@)j)V_l->T,]+N&Sao3`"L?&+VhCp:@Y\
%44\j`?@k!R>?j^XV]PK`\C>PBI,R)%O69U,cGm=b7ZJS@%S+RCXpW/<dRI_^]UEj$GWW5l3&-^J(FNh#ah8"g[C&!!FONiVXM3e"
%'76^Fd_sg.p2o;sT%KR3/085gM774:9TJ2jP*;lmbFqLQSU6i2>4Z)Jf>MWREdtH&QoqR=D^OqRKr`=^b4Xk,]7,*pS="Q6:3p@I
%2EA6)Gb<493=j6&WE_<+\p`.'('[tfali%FQ#$sP+@eOOIQNd^nlF=cVWOfBQW*_28nDbHfG^2>^YTW&`B03SHG+egSK=jQ]hD4_
%/1.:Flu[P7^%6D.]ifc^:S.bk@f#NXFF3j1Fmq6DH+\)oairji8rhb0;p.rG9U"0m)*^idCs<Kg$Cf(OWTlsT3]"8hk%CP%%dmuH
%dSMW]mB#-fm*<&Ybf0+lbm]_E0_;_sF75'KVro(?4S7Va"bd\(UV/VIS35q/SbmgI3&R/W*EaIS35BZ\->)%e_hfab^#3_=a*$LS
%pMRG-f%0Oi]TKZqg@H*"P29Y2?hH=`2s9&NA89XFPn0/S[P]lg-?=l!+oR6ZOU^`=`Lb4gLhf/d/=s<l6\"TIf0N:.9KSa9(Zs8H
%^N#hboZnk>gOAsG\E13<E%=Jn9XY%OWWn++Cj%'`T%TY?MURV]n2</'jQ'i`8VZZhRU!tY*6P%/_cqCn*O!UEI6OYXYC*>A7#<E-
%=)U"CeB+HZU.W],UhZ0fCpnO`_tg^J7_"l2pu03OgeLu)>^k6k]??f>b+!`=1O@Krqt[.8I9.I:c4B*9Ag]+lqm3UZK*`/t9<5D^
%jep+7j_+[ONk+,nC44CRY--"1Eau5^UYPOn>j6??Cp%&_:?S2<TjW=0qcoQHHRc2E(W*50q6u-;]7oLGoBa?RA8,L]VsmYj\31_d
%>\IpV@W?.*ZamT-]>%\-fpl;S]Y2r%#qRtaNR=Tel0QUAi_K)kBt(@T[o?Itat5Ii"hd%)]/m9g<aon@E-rq9>^Cg4U_>]=054:n
%XJGHao>gLfj68r-H*$L'T)ZuT7dkP-1ReiORCUG@%V6R',%;tReBXl2VS0+Nls[N>OaX`H4in/*F\4[%]@4o>m&![kldMbRY&Uq!
%R%G7%XQ21rj@'"B.Zr"X-=>)#`_N.1.s!LBH=a#PEkHG-gMX,?Ag\?pKB_l;Fa[^(e#Zl:'Xq0$OqZ(t7rN"kEdQ&t[Ble/inE^/
%ol5EFBQJ/V4YcK>IXG;BY!;7&k/Kg0gY#[[%ja.EO.NL5SkdFdS)_,IXj)QXS!2*LE^>oYXL,IV_rgdG_QAT6cE5!ho]4TPalW-f
%KUXsS?E@\CgIK:!Du2ONQe4m0a/>K8b[9e.#"(I6YObi+h:2/@ghuQ"nTHPj4&`b0q3S?Ln#8"J\%Zt7ft2+Y[.b6c&"WZ<V*;E(
%X2d_DRf/#;S2_@XflIXh`3VKa$"oP6??_Dg%VNqZa+p]O#PX!4]+^1!`8FYd-p1\%5MDSIh`Z:%5MR>V(/K[F1RFT;`tsNSqo?sV
%\X/N<B#-X`ITkMjGo4djT2&o,&U6?25<^'Z?A'PUVp1"9r0^g%IQlL\NmF7Z^2+V3PBXq04El4$Isuh1KboS4jl'\BBkutmBPOu)
%nX?*&\o]#tPF%cun`I-!F2)rWYu",!AOe3d=',-U`TtHbC6YU+T%f[H^HUL=gq'X1<Rm(9O@(t=M2R.YMOHZA9cY>=DqE$8F^$tT
%9&<;;l^bY(c$d.7\SN&i_s@%uKr*mpe&')phI3+a^:/SVGHeQ#Io8>\]5LI$*u)V`2D.?2%pSI5Z+dbT.*8I/kL+h,BpN($/gng@
%L(fgG(+qB(C3K%'6*.a7+*LH+3Y*kSbMlBD@f:<@E:ikoV,^;RM>c/`e)&=7a]%l/frXsM'6BH;j4VUJD.a62l*K.qY!4"7-"!8`
%O6[0,HF-k%3Q\,J9C',cW6XT#_s2Nf/\_de]e7#OcQBm8hKUOi[BX^7<m-Q7=1.%HZV[8lWHN]"9q9e,mMG%*T!LN.fK6aZCXeQ)
%%@ZE2]NYg$:=fl+c%JWQS'.esPNM8.>&?um4QucP6e=IZ(MS4@%`7o;hIsc][QPdfTC+b#?fKg(r*W@73RIB:li5BjI,&o#bH9P@
%PTRC)^;kF6cD.i(-PiIjaO*qs<?<PFb6..0npl.3@%^M;ir_BFJ\O@5CBL[?*<1RVD#jI#i-s'k(`.lArn%[]7#tZO#*)nM0`B`]
%rV?`t8%g_*W)D5nD4k.6n<]3?$o@*WTi)i.e4dW.*Y_?Yd)>GS2;6JD]8hH"jadb'D,qLP(/2Jmi5s51UJ\--c0MR8:@SVu?:X.^
%nlY2fAnJLC&I(>(lM<kl6'^"dVtP`2Q`%PW4&?:29Ht@CPt(dbpFd%2CS1>n2nsc]V!e^J5<VUS/`j3BW0I_7n(tU2#!Qd&?N1uk
%D12GS%(5aG*VMY'n(6Kc2:,KSGjb72"iQJNrF0F;c=a$O@*NoURZ1<^h`[kM[G<>qQIgV2LoPCKUMh7RM41R]>4'f0rCNj`[pPZ0
%H/f`;LXt0[3'hTOeVW@^[iR_]7I<l5W;67q%afU3la;'/WEF^&kD2.B(IUGNo_9FJmB[0`4J"Lk+BrNHB5K0\*tHVT%m%lEh;G]R
%4rj?i5!%<-L[OHZnbP]N^AcaA#iIl;p^1-dW99TCi!XT#h*]bCi\dEsCuX&b9jkS'J&n7L,MRWUE3iI>JcC2rV!>Dp?YpSXnI<$V
%qNt:,qu#m1$;hebbeM\t0>/k&HdQZ>Kh/#X0<;1@LheINQ#E:[p^0snNT')p&FTuRqdd;\kf`u@Hi9pBlJnsfZ!"gp['pDB.*#6T
%qZZS'^KL*!4.rb7qp"YY&8&[bIG9(]<[8RRT(d_#aIb\4r#KZpUgI$;T0lDh3rbLahOVi6n*n&X426.Ps%c8`*_Q'V*sKn$;HmGU
%q6S\gHL2n[A)F?L?XW#Oa00tR`D8GQI]N&M481_OHEDSq4FY&XDr23-*bea54.L_73gb2QH60EmL"/Um3\.J18q5"RlW%@DKm*:U
%WUkFC.o`ON?RV@er6g5_Y9)hRDjd2_s0HbF=+//+Dcb/XB"o$@4["6=Da%[h*]/8Z\c_Qflp(?sqO\<S4k;Z>^sp;i$/*tiHq,XM
%o`<Z'Y<V!f+EF`]Vi*_cRm5/MVlS@c1</bXRc?p,(`3/;=)?cB_K>u'J]0-&J*HcL/ZZ+jr.dAlp3gUZklH/ng'dDPhZ2$*qnN'L
%pjKhDB<kNI2k:`XfseGNf5p#]gSQ;Ui7q5bj7k>R/FaLJ0i-i%ZbQJ#5<=;iO3%l4OTT-\5@gknJ3VPc>T[<5G#Edf6B+bkqi9ug
%r&*M2HMjmY:B[7IT<S&qf6egrM8+Ifp(.)05sILGlu)tOhmNbBYFU6m?g*OU1iFL*b4Y^P+:MgRX&'8<!ZGa@.icorS+>&/r>qcA
%j3%Jj"t:u8K=mHB'nM%%Ep7t0kiZ`oko'tD5=dfA7V_+ePj<R'5YK.VjbG;P3rXY1!PVt`g7AEV>R"qZbs4B5+IVf50JoG!L&lo.
%Hp0[9Mo>q$?%ResMEfY:l];.uX*o@X>+3/ToP%^RnHd0%g3FDB8V5J=e>>Q6]4`\a9lWHQcV4T<loMu<PUcmjGrk%Yh_&-SP]X08
%7g(8pYCmJr+,"5C3]R5PHX9=$!8W'0OmVS247.[94=:^&-lU/18>W]?fFApS.g%>YnEP^fb8^2`UpXuTHMbj]T6sAF&5iPkV8<5E
%nA?q+FGO'&iPkCnT%jji']+QH=JV0^4uH=`;%g!k(.J,:3XM[XG-4FDl.GEG;P>=`+B55&"4RD7qi2l5b7q2nO!mo?F9J3GD'Z?V
%h38CTC.Ns^1;kZ=:>tdm6n!0HOsnM(5Xh=d8LJGb/SWssfK^)VdOrmAd'eanZqlkt!Wf#%,iMZ05G^L"cmPL9O;9'sHKe8QOO3&"
%'")\pBJ)P6&Y'UFE`<TE91TERn!XMIb#"LO4]oJQ,IE/UDhb##--Gh8T7ksiQa`asX1ic%qE,S[oDB;Y![&j*pfO$k!]BW7#9[4^
%\'&T?=T\ieG*s3Sm6Eo:l2g=/Ll('V#mEM`]0feDB^#T)'#m=)M[G:o!dpl9Gb<(%Ob*^$8-^G'dhQ,G@gPO!1U2IE-o<k.r&^V,
%f2iTs]6;<7Bb!<:+4?!m50+fg)*.eLkVSO>/r2pu?kFNM2Hhlp+Rg4=`.[deF=[IO#9`Dd$j!*9RgJSDG]Q'A#21%aWCL@)92t'D
%qL"rp5f2H4GN"ZLMD4-Ac+=F(BFL"KL_q]fj@t^IF=!"bOp'.[ZdT+-+a>(S1PIJV_n^=["pHb9&25R6b3A.=4ioJ_JZp.8mCBk>
%RPZiD:O7R\Z*;C\d">^-_@+RTA0Sh_+YgBF9hus3&nm4`l>6iiWK!4@]p.Oq9#TC:9k^7A2mb]J":-B*#R\e-#tg-r)KO7eYRU-5
%HRK4millqsk%Qe9!4u_4-)Mh6#mS;@MN4&.kG8_JI3Uq34$A4oJCYbJ)C>?4Z/YXELdKMA/o*$?\]f:$dc+QYOJkaEVe1t++VHP8
%f/6[^KII!I_/71>9c*K!j&+N?E\_YFEmu<B)Cc47Gp!8tR,cSF[d6aU=NSotfah2^BOM(9it)SJCdNo1$>;641(g''$_WJJVuq?X
%>/\7=-DTP8=[?F\'']a]*"&`p*QKR`:ckI65o7lf,YgJYRk%X.GXbY_GW^@mM0144C!;[4%MZ0bW*CYum5\$Nh\CmgKG8T5K'Il;
%^)mX0N\mQ*7QMR9J;Eb^NMN5CE,AZ[K**$bdrPUlqkQnB$P/U>A1"NIFJUh#qGMUIX.lc2An^BYf/+c7(7;4L@0D^]+VI\E2sWN(
%ORrSf$gCp?MQ[qT5VkThmm1NKZD7)<Ht"-B!;H.W\Wb74L4i\1_&,G7P6>L'E6'@-aG18'Ps?K2)$:^+Z]KFJUS#nl1d!Zl;H^<1
%j?`I$N!kJ&KQ&N/8.E+?=ca@hAEU1R+cP6-IF/7LF0\1r1*)A@n>p_@-uIEu@>6L-38/mF'h0>))JSY+fUBOsS.q06+C/I\&_S(<
%Og)dt*RU;]$o2*/=IL@"K*2HNO[L*A!m?3I%`YAXXc8nZ#)[RHMOhg2UV@c$6cAE`DJ</64-J>TL$'<bfoFS6"Zll';$9lbU^"NR
%DUXb#=-?B'U^T+'eI/)4'&Gc_0a4MoJ0_n:BdEj8/--Fr9-DY'+^!3IBr.SbU_[@B"7!^1B*2%^gGI<MFq'lcNZ)+JUV:LqZRfSM
%WAH"IJAK?LW1XJO(hkPTJ7)e0+J61t<(3aEg4B'Z-.(=:/$MF_+@8,kJPT+Xmbt=3&(.<d,$o($[LMgOFG8%GpVASW^(9;,*#jrm
%h%MP_i26h]K9]uL&:oA(&h$>7#@7`88)"3b33[T4c7TGU9u/#o)'dMNf'a`.R%t:cWa_QSdM5$XDcDn9LBmj1/>>CfcoM33hI.lH
%2\Ie.!=L+>@q3h$(.=`7JUB"=>?$3+#p5U0F5aIl,EP]STuh0qAK)PK,/dQ'@<;]M0TkZelgu#d\i_ZP6U#i6+%AM'!r+Uj*Aj:n
%`!S#LU`i#k8:59PKaC@`(/[^ImC]721mu4@'<RXP6to%K,YCUS#ijctd"Ae1+i1*%lcb-Gee!;ECT/%na/gH."(=>;U(%t,UhG0j
%I5FHG+DFU1:#0rX8/&o"E$9F19C"3tLr9lGOTW39bYG)()p]^)epq-^=GjrC@DN<gDk:AYiu0UI7I>J<i#+3oLB0ag)joq]0Ks$_
%gb=OlDC!N#n.!b2RfF^#GW_;kSq4/?atPR],<%9_@MW@2huJ[*T?e=VT,[@[P9<l>MI6H*;'\`T6"L90@bBeqM:7\l\HZF4lm,Z>
%=X6`*>,)p<JJs5S<6)!KaCLWG`.8E1a5j?p`uKedEjQc5E9LCP8_(V`e<&\n;pZf@7<R:`F(dbc&9d@\kagNlnp?1+\N:B[dhjDZ
%;%jk86\<Oj,Lab\\-`G'2RA0iA!O/L\N?<'%9JG\:XVH!NR(>?ZC#\V^>U^F9Lm4\$0F2_`jQ;na:*r2G*nPl43UHs/neVU!J8-<
%i?QA!%2j<eE7tljb_gS1Ce@'aUk&U`.N[85Or\'o/FpCT@fRqRh9m'AIMQu].(a+7RK+G&ArZ6^8t2Ra+?I$'p,P#rj:bo>F)9&<
%^*+C0L7[YT4t)1%pl(1-iFrZDj^NQMrOFfp5f[`$&iX?QKq#/Gb/;b_PJAk-]d$_bEg!EFLP<_N9?84V,7VjO,1]1nJVi%RN/Ys6
%Y_MHNgJg_gV^>O*EWAMs^A5j8"gRB3$p,(lMD7e4U/K4q:`h(7-3,4u)*!X"1N"#/aQ_5@KJimY!IJ]p%njsYLl)?4$dbB'@;5;6
%CcD\I5)D@J51EchQE`9q>$+nj#qKLJaE0>s6R/_$3(OPb[Ugjl"7qqm!Rh(m;%Sj&2CP:3+nLtm6C/]_%7<4a@4*.h9-P5?9/r71
%Ks2.GJB<f=@nONB(Dc-X\6r^u/=g1EiiM%r_[H([9Tjg86=m)(pQ5+=N?<e?P70"$B\-!SFR@5LW<jDTf^2uJP@d,'(nV!:h^iQT
%PNO-Lm#f:P"=u7.+2WmG/52LHL_EbKWr]:r^^f4RZEo=X=fA^)'KiN@#Y]21]#r;m^lSj'4<oPs8:"#K\KSA!@2t+Y;Cf-2%m2SI
%Q&(bnBcI^OXClKD2Bba;p;G$PG7Dco0s0Kt)WuYTQe'Ap%X=Jb#XXS`119/lZ$_5ool]WlnYbbG,==Mu'B-_6B#K6`Ks2V$#U>@>
%G\f-'DBHu2hhLi`+QoUUA*H8C-XgF%fOgKn@2-=lY0Tf/+sLHC6ifdpk]EMm!oL5c;G%j0!(Ygd-b62YA\`-$Zhm8`4tn\Jo;rfV
%N!=?C)Nf.(VIo9BAN8D"+cTRLiEV&:)!8GX^hd%@&SJVU0(0+lY:q_c2?XI]>Ri2,bhC1(LD@eVaH)\5qH:`5jA@&/I(&3)7,']N
%%2VL$d&2mE*4Q!#oFL)G_U&M(/<"UQ$E5qqC$Dj8-*N)?@1c.&f/"cYIEe585s.bBr/f1KP1]m3Rfals7)eGUb^0`[83Ml>17UZu
%"/K3h$WF2S+`[o@\^9gu4+\Tl^^r#eI-:o1s$WTaELhMY[cDG*PS`#&0!YbSm;=Hi*`BM>R9cOhP%Q.b@-N8BXMm1O*Zc4AXYt&>
%kf2Wp#m]gB]@'*%\.uPK(?mZLlUX+5%O6U]9mYqB_3'3X.l82uiTb]n1A-XVEB)HV<B_pB0TN'<KeWffjnmGNHU*[$4mL;3,ud)#
%*J_q^q/NMO+;kbZ"!Wnegmb,p;lR$i@Jba*nrE<P^4C]B$k)8fK[\0+`/QC^Bal<)=H93TU$k6rN-QO4/,7`c$"S/1,^YU`+=P?T
%O6IN+.T"!D/h9!TASVXu"78Rt7O*g6;KnL%)=p-;[&Y?g2&k9]:QRD8S0\)pF!;cJ>0,N]Xpto#C#rh@Y5'$/]^ub25`?G5'+q0.
%<)[Q\:sN"%D"("]1PjPU2Y<hSM=Q+PEpUHS0?k(a`CDhcQ2uV#_6O3>#C6SPJs\-Gdcbo]#c;&9$LB.&"sB!TZnNV_)FGE6j;8=j
%6eV<*]S,"W]AS>"bRgh>Y*CR?V?:@e7ijoH$NsQB6:dTeK*11,L<)Va8;J7?k*V_"`m^(ajI*0n[1X^7I)?pBM#bG5ln0MN)FQkQ
%CtJCiPSB6:%G?3MhAdsq880UP4Fgmf*bd6u"?>ED+t=.I(SPs_,ju+O(53W7<'h^:>1+S:a;H`obd8qo5uM6XS"j@-`QT7;$T/d/
%OT:K<ZI2pnQStZ+o%>4*UAUCC=h"N*9&1E1!b#188_8QA=GmRp,EJ+<(?)TlmMU/aQ8PSITV$T>$8dMC*0XWe9Q6k'5Qf?=?CQe!
%+AUi5LO_Y,1a5i]b1Rm?'aW_p6k0]IT#_cUa7qc5es\k;(Bs()-$GRoJ5VE3HUDP9UX-rGJK-pm"Aric)C#h5_Uq-3:+?`[6s;oE
%Z^;RJp<UPZ\:[Yi#uDidi-"od_?sccC(kZq16+LsKOmJ'QB6n2\HY[5AK**0EloaSdpj&E5T5$K3HjD8Z#l7M<"KR<IV?DLg+6]&
%Sh`VC0e"*EB="CrF/L!O!HB$H*%ul)VZt4BJJIH"E(ikWPhiJh6H$M0m2R99=W31F&$1Z8!UL:5Fs9D]ZtTZ5ShQsq80K2q#&4iR
%V@ur<!eZrT_T#V'DFQkCG"."4D,b0h<.XNSNf8qs-isEY!;<)Q2-Z:Hi_5gmA0<nu0&iNT[OpLsKbB2U6.<0C#)L/P#`h#T@&HF%
%&ZI)6F1cbK+9_!RT4!J,RPB`;:("BeK97rt;c"YFbcuN1'atQrMSeup&BP"(.d>UER)VDFTbl)i&C5X$ct"Ql@=&4>RKu$S!pg4W
%O^=8TJ6kaU&nrsoE+B"W>R=go2'1e75jZ#o-<%Sf4/X#a<m0(6+=kT"4?&4HIGZb%nm:/)_E\<eEtZVt?sj=dQq.B@85L03_=pYn
%PL->iX9?]\:(RO4;1\87&Gc!$]OP-3,K:;`3hA4u3)ej)k!qR/#TDYf@99O<cuLU,7HQD!ShS8*N\Xi)aY?p>fCeNM-B/f#[%fT%
%()(`&$2F[;fB9tD6lO0[?Oe2K+_RZ=\/)B^gAhO\c7+&tj[,93jKsk$VDgTPUhtr[8E*(#;u#DTR6uS;-@-jU@p9%'Ne0$Zd-'@Y
%2i5o@8iS..!%8kjD+GR@0o.rA@JGT^0d-%lUNr!M7g>?SI(B_Q>)PZY6paEHJc^J4X-@4")7'2%Op5>a;_A<n(_lfNj@A/V_:EeF
%#W-ui5c+S_0kS^>!^m7(AB`)&&4!c3!`6a0?lG2YEV\*(AWg.R!"P)Dj*=5,RcGI5-CF]RMfhE+6*t7kE\"G1P`35#Y"eV(FpE`o
%n[QZU@sa"sb*"NBWec!O6h4'E:=Kd!.2Nj]Na50=E3^9p6[/ErJc^2'b\9Bd<c:If1H$B?Qu%Y8Ll<Jb_/98),(sP8a?NbZ>dTB/
%I1C0'<i@,-(&#@9M@8fk?YO3S=Zh_:,OeCX\'KKEF,L+a+F-//&1/.@O,]n:,eXIoF6qVJGu8l_GWlKXiXm,]kAVst@1X8B"pfr>
%7lRet5*=Mcr"r9,.qcg`,ImdeMM%l2o"cdenRMf-WpjGE+le.G*7<WYQA(J`mBLOP^PC8M0FhML^kVJa62J<8E7spk]s+!7A,FD;
%TV!f5+0l7Q#Yj;t<0U%l"C*/gY(>pkF#3&DhdmTRJF>#57^QX@&tnU.<'5gpY#Pjk8-h4/l@k`n#m0-<"/Ron"XWK%ap8O.%9]/>
%j4FL1]W6IMne6gG6HZo4=:g<GfAm*`*Mp:(@*-4*I`50Y5T,e@=g?9\O<<+Q+9rWFAmV9)PbD"$\?E,BM2D`#$8+/sDH(AG@1u/1
%7X0]>WAi8BjLA%KA^fq5b?dBp!_o]B5uAoJA;GnmM8F=smF?f:V(FY@b(ag9'1hj/K_-h:A5ls`7EX1I]hd/+3/*/cU!SP7,D2OK
%UI9l)hU*<?Dc<;50Jub*].k'@PH>?#ln"ii[)PBG"NX\YS#c[H%NJmi[1"9H[t1o1qp$s#R")ZJ7?]#B:hfT;U#\aj#0HreJ-8Pi
%#-mKG]FkS%!:a_mYs@5^00i*qg#SM0NZf/&]6teMN!P[M'n[LE6f>f>9EUS)Hnu.5dPeA]^ZK2cYR`ae&Er=k!TJJk3'nS%LHp_;
%H\C=:/JsqV!Q5:,a$t-\Jca_dL7rNP'O9b9&2F`kJT0Hd<YW4B@[(e>?]+03f\8oq-_g&0Ku1>8g12B-P$l]d=!K]T%$&k9gP2<\
%O9KX=Z4PuK$mN/c`XCok+Q='3c3PPbNI3Y@Hu#Rg/Ao!U-oP)iHr5?Kr.\fa,"R54$l0Hn<db76Bo&"-JiA41+t23m&<'Tl92L=P
%i\nXl@Am'J1$)RMf.J7!"(dq/I1_)80X18&Diu@G8^A_H7;.#P.ZuL&[iUh[:$!LMfXYr4AhcaTCchi;*98<<1)#o(!/TP?gbCUa
%EF<$b6-j4@PA*N\,)@X9^i*1A/LV9o_X`pHhGkEYI*Sa*%_Kb>RC,R^]h+g.CDo6i/#!eYqo7baL/?M("D#]N^?#5!p2tfJ=l[Rl
%;G1M`b-=@8;<'-&L??$P16\S]_.lVT'uBRo6<W#^+FZ<pT\Q^M(8<]WUV8!a[I'Z>#K86F)nV+!90h5[P<d&>G"gfuTR+G\4u.\:
%/mZ8dkfBYfcn;P/B%0gpY(bf6DIKCg@g7&iS<+bqYtt]6)W)"!BH/Z9*[,5uh@OVM'0pljoajGg*;ZgV<&P_L`Y`*F&&-PV.m5J=
%3VA6W$5j%VN+.Jt)_E!a,!$'!kL#X*D0uBF/$u[+b`S1Z_5dUd24c%D,Y+e0_<a^>fZ_0:&?fZsh"J9.T%7^3$Jbci*%5rOA8QDd
%"n9WV=@LtELQ!%t,(Z^f5aa"dWdqFYQB*&rT0U'Yiu0R]3T77gGbPYt#0'"q0sqGB0G76k!t*#(giG_@*(<o*l^LHWI0UDk,l>iT
%Q*mqp0+l0/!(:?2mBh_C#qk(E8Doqo2NX*B&2LB!7;4)\%#l5tCZG\uRamqS2s5hAH*@gR1O`;S#J1ek=,=lk/gml+/O9dh(*`oc
%52maA!g)=$G^*%)'lcTP90GtY$b;E;e1XaY<nJVX:#;ft$HL(9Cjf_bi]M&1>]:f@(+APSS!Z18n(Ed-3(ug3%905KbK\Cq"V;=F
%1'219JpaF(`46j``dN]JN2.Y+CaWY<82DhH>@@b"@d7's^@<G26q)]a_ZL%:"!Yi8$p_V])A`rm0,C=c!@Gc$ND!qM^8]gFo`VrN
%ZLYU8p3htud3P.e**j*]_+L65h"cKiL5a#e"t)GjJgqqgc2t]i_3R<E,00mcg-C`"G.-PK=]Ba"FpRj]W2V,>d9Hh*#_X\,JPXS"
%(tZlL#+ahci,jOsAE:N)`MD3ZnOSjHiTq(&n!+u8gff#a2B]:E9F??SSn)\Fa+Xd)&TWt1Beddh=Q:liMN+;n\XkUgF.kTM)fdu,
%9$]BV"g5'I%O1r">Tf/&7drYTgb=-s@lnZWJ.q]+@N`])%:PiK=Z1$VV/M7<a:ksSk'.P!"jm=do-24AAgI%lClJjXEs0DkL's`%
%F\H72mD@@<'*s.(@IpQQhr2AjO^^Zb_1T6TIGri;<0^t;'ETF,@5W\qYS_,n'l(MIFNB,k.dR1I'?<UXQE0i_6L=e=MQ;I4$>!m9
%J[!]^TH\t;`=3Qf%Bp?L,[&f@$+m/t7,lEC=j`Cpg+]r9f8iIUT:p#4W"'Qo::P\).o)A3HU.rc@[Jii!com3[oS3@+p%0L5j&%R
%P!')\o7A7q\8?A'?jc6&D*l]VKs&[[)@hn!4Fi2K*+iA,5VW!8i`p3#[[9Bo'S$I'DoIee()i8Re[nB%9;B:)/*j>=Uc`?`h9#*D
%HU.Z62M$_>MWfYL7.E%^)8a,MC57I%j)D7W.7(hK'A8k+Z$(B,"SGok!ue\PC$9?eNZCJPN/cj_3/HeHPLhZl8bUf[&g=>\8:=pf
%>PU/ji.>R8.hHgJ_D_]FiOEhgakdjEdK36$`IL3XO-,nlSr$,8M@WUY/688(KjYFLY=Z6t$-9a$`ef(2-940u,1+%??./;F\]kjg
%g_\'R%UU@3'!4-8\3:co+CDguSNY(\#VKoPrH!Ckbp.p^?\FV[G)<#h1AAjlH^KG-%E.kGBr"=Xp)qM?p@_o3bosV+(d9:1'Lu%A
%K0*\1BNi-n!PAQL\WDDI)giK"brW$2)BS,TUb8CE`\g4CJ21(I9d#Mq!Ag+VNWY(NfG[=XL!*Er=$j/oOmjL;6+Y5.%uN[28T7[c
%,@W\D3?O''%o/0>8D*Ep/%#OpG,TE2%TaVZha.JL`g`-!#3I#A,c1=:L1;mW)7bG<Ri;Y_M2E7un:31tM$:1#FE-*0"``maP;fW`
%M&LUu^.IPlTk>;o,Za_9R^i\?,.A_3e1D4dl]I(qfE?hHB1O)(.b(``"I:Td'FDVNLs6\^(<A_SdDr4rJ=K0jF,CMV((/Amn-c#G
%#_8(dC@:j#*!QUI0TKS7,;d:>fr0863W=gaLb_?kiDBHu\,INCfi^]=RftRs$:k-kDFMM5:e",jCteGlWM,A6.N$T/BJ(%I!c[`7
%+>g;``214Y+226"&56HlV-m@b5nM9K_2cZ\7tc'-J?ikLTP7g,Sn'+aJ:U4&L4a+M?e*ET200`S%7B#H+qPph\KPfW)\CUj^XJTi
%r#q7*X!!Ad(Xi.^*%kie"4`X_o59fk!gN0K_B9*cD/Bps[qT5.BLku)$$6+_[YHI*ALLG/YW<bI*<>)P'eTi_U*>*hgkilW@kVls
%b_X-k4#VO2c\p3mJ/mIS+BDI1Lm8[g(Y^9oK)gc\(:.9Um1/;VEOaJb7%Pjlk<aKIAmAY_N=4r<-B-,'*W]N@^I._+,l>3t1hKcs
%@r"9NMg\5&*08PSfaCh+3&J`FlNGU8;I&rmQ4"DIShYriU]J$?+Z!hP9H5<HI(%I60em.YY*70H(=5"=Sp+=MU/f"k$W;e\Vm#8%
%?\6IK(rU\ZJ4TH>"L(d5-Ru\9#9[OYTG!.;J6_D9H<`.65g4]"eB^X5q$n23)WrJr[^TQ.a!tXdY*K8+Wp%#<!cK6g&2IO-_BFr;
%!ooqhZXh_JM#Qu,$m!s*qGFbQqJ*HpE9U68>G6dha@[9l<+!F#%8`F"k*>)C)S,`UiYbX[I*&#&;6]*!+GUD1'ScL)<u89dHiZX&
%!o*e+/flg60_Mc'a[:[U1lRm)m4+2%ip*8RZa7Y_8Ws$50'Dn9,9X$%6oV,Sp3H#`898^mDN-dbn=qGFII@DDce&q*o9DbC:sper
%&QH!F#WL,<A^kNK,B719a/P"?hul]GrCH_RN?+XbMF2+%JtC*+CErb>pEJ!m%*pUg3/.XW*;+pI`i#kS22q"'\?B\s?/"G=bgfO$
%.Kns;"%-5]]iobC4LCCQ!!SsW0qj>LFU)Lo$j/k^*,pJSjr.*7j[054:b2'ZOT>e_Lm?dD,DHf.#KR[]HRP4hJ/^R?Sdik&\?`oZ
%O$bl:Ljn>aAtZ6^E257,!-fsD9tkQ#U!AIZR+@p$:2VJ\,rN$3_mNu_f<7O.!F+*gYSVLX:l@R^a!Lg2JRNA5(N,U;`NV'ZZWEdb
%2&Ts$U>A1=`GWPX%UV5^EF1pAAq@\>=/OAAfJT/a3rkCb2b7rJ)n@XF*KE7GiX`-Xag]puZrI6LN+"83#!"G$!f%`k8.t4h]+QEW
%[R9q,K#YtIjta+n"#j9@%bQT@:eG<D#ANCfmr3U8Cq92+aUo6><TCT>X+SJ._W=o2\"#GfU+D+[2ImO#:rcbVFgOa$\].=`KmK[T
%"pL#%i7_\<id>]HjRSQp5X"/.15NUGW4GOp)`DaK2N.nD)DO)588TCGd(!0X7J]WG$Z_c$FsGCilP(C\O.$I?=M3Wf&/GAX'VfO&
%ISjTR+n/QI9p1X89d0]oTf<5!_&$P8=q@2?,N!XFVe\m\1u@+dd:3]IW>K/Y=)$tqRh@c,7Jn8nB^un.*VSLu)jmeP'[kqrigd)g
%(?-3/(ap&\_g9uSakFI(&/oTJ#;>jP#`W%-9Ee\'%1qEB""81%nMgRI<e_LP*GK9`Tcb+LZH]M'd+kH."'],knbDJd7]J0c#\7[!
%:lXNBqdP8YP<j-oH6?BG?b?B'=k8*s7"FdQQ*gJCL$+rb-I6"F!)NoOI8GKq-lKu0ST4l9he;WWeIYs7^m7b1.,j/FL3c_H+nRlQ
%D86;oLcUnY.j]&3/jOu.%%`:H"63U2quDIPd2(S9;ab.'<K(afnI$hMf(W\S)hHX,Z1O3N+_:eFAP=RWZ.P7VAf:f*p226'Up19&
%A'HQ['nBrJ,5f5uFdtF%':?soE/:o4K,u'Sb[dfni?U((=ta:T%YY$ojBog/AsbCU)oYmF!sXI^ENT)H)QW]_ac%o:/jR'Q.$l>j
%B'EuE7InVX*1rOGD"NE.mM\Pj!3l#-lqE"#N2%WB'e4_:Qdd^F`A_87.'JUu'pha2;\l?lR%m"V)<>#fS_rfgI=nJuJY.\45eJ#Q
%*ML0k#nY?7X<)!B]Y?+9H#804b2,O=#_t@sOUh++/*N8%:#2bO<*(:I..mVjnVoC-V_BsL$L,.QYnO@Q!-2S'i:;dLQpQHQI-]Jn
%FY(ksh1MP<??B(+(9S]FBTi;pa(OEDoibVe%$9XVO@b9%od.Rhl>od^BVMFTN,l2%->"`=K/G?lp,O9/Bl'M<'<3=G+3eRV[LPVb
%(8M"K;S-0c&L!$==O:;WmR<7FGX<C10[Up-9Yc%r'omNFY+1hjJRedc`0_AA8o[R%-00W*;m>Ta@B;OnOok<n>,f6Ho8GJH")XYQ
%#p^l@:hUDcZ#$k"DfE3AHE0GS7=kaLc`qS(*-i([1bpks\h,UU.NuIG$:J$lM/e63?&78C7#N:AGZoZVM@]u`)boXd>PJbf-MEEA
%%CV0#Ut=XaL7pN)G2G#6Kc+FI_`,GthkL0LqYMaP5[]"Xkh5<RP^tEP%]ndK0/=_SU@DESEM)LVCfVj.HVAH71Y2`f@MbaG#QP%^
%^-go>+W<!(pJl;U_DAZ_1r&n(cX]!@GJfA/8YC?X%/.64N)LG*>fIQ[;9&em93Ya8iY:AZED+$^$BWAq-io)Zo(SBJ1Z13qCtcr+
%#fnpI0QJ6EYt<!kYV/JV-'JbWicTW31,/5@_,iVk_Bl@t_1Qp+4#RKV_uIKRF4lg08\4K*V1+2iZil#rA:A_E6L%'-.L?;%R%_s%
%BTU;QeD5Y"HX^:)GFZmI<I)SJZ"%.rc-;Q&97he0gs2,_;a&QM">,2^*I>BY5^R?FTBJU3U*p:YKn&Of%E_!cH^!)+7CpP*qn@?C
%Wc&@hQ:GmoOUpEtN5XW[b8.U(=U@?#k$bGKjC?Dc6I*gcD_-T1'!S-PL"i[%a?Y@%T4(UG&ePNo7IZ8uV9uT:<9[,1CFqJPlrn6G
%</c6%h)W?EXeKnRg<I3`7aDc-@Xff;0O!:7>?s&#+">JpN7l0]kU79]ZX0^`_YR,8La/i'kI\h,i%CB3;k2Pom:MpABQGTF3.<fk
%)hNfZYC(scoEtP_gJk^,jduH$TeODj_-t;Z'.)-ufR"XO4R6]s*iq^PT^U$n]],eu$H:H1JB+(+!lq+MI)riUU1S.N;?Kfe.\(Zm
%TCOBK@YO#]*m-DOULX0_%Z1<-@R:hTgVU(`Y86#D/f)ZtFLU_I6%'hG7XS$]nhf8"M66/NNNj.)JoA@9kN&l@k3"r)AP1@N54G[l
%>?p3VNQRsmK_g"q[mO,=YYB1Tk9kr1^fYMU[kZpOZHr+7*-uPSfI`!0nbbNjs.Q>K8Um*.(]1)W5WcZ\Z,4_/Ypi%mr"PY"\`4c-
%Yf(r;LWdfh@3OM16OI"YF_"j(OHm'<.`$!G^>$m=8lQ$bf2_9ld5k;A`pGb'*^(;WV"ob75n>u8Ho7d)>8tG(^HmP[H<c9XZBYt!
%lesDDD9J+pB=qT(0E?:!G*gE[cU-*Q>iTGW+:QXfa]<)$n6`qXkaUk(T04WIa+,^%?ANTcH2Ns3/uJHK$e3e7MM;+T!-jUu1,]Y1
%ajo-M2F@9MLj^3%jYau/6T04K/.W@[#7\[UorTVI"pIJs0RWY:RrU>2S!D0b(7b*l]M:RT6@?R;g=%>hoj)!9bU\;f`Y'iqBK=&7
%D7J$[\+Od3UtOs6Ub9g/*5lD^Sf]Cm1\tAC?Gs-@&L!>kcnJpBS`P7CkKEen>^p^OW9/E^,&9+k>3[p=2A5hA4\'h^#./2#rU`Ad
%IJR`O^/_*&5[lJ6:XWWXi>kN]^b$:7)'B"JW3RYO1&qOc'Q^M%$*+#4F2-X+Y?`LN<9u09c?YKZ"^s00Y#F_P)!YB9;MENp^c(fB
%ntWPVp63e+4uKib+FkBb<=,T2VSq_4=/i2R^=F-Z36+pL"%K1S8BZ<_<im[*TAg2Sf,<8+6NNqS>@:K[+Wj<s0[qpSP+XMh*O<iE
%Ytlc#U;:dS[PU;ZYh+\36\8k=^2bX-q;O8(.0O3SMlfcg$)f>:/Lkou^e,uI8Ys))C6<38G*\%&7]8cDlpGM/;6^VZC+E`f)q^`D
%\9e$6[<Ou.dC[6(K<;J<]m(&@MAbAAK`m*'4%!/8>DB,dMW-<[mGs4KkO5@@%eb[#`'?i`C!/"g=s&Zi"q+DEY<I-92&qJ:AdXtJ
%*nCU[+!ob_@aa;l&4oge@)OJN%%K(WRgJdJVGp:X8eCHVP"N'O5QZ,Qhk/)_$tD[KY*SK!d/eTromH;Z!Z8]I>+s(o4k.GblV"?F
%**\j"j`!)OTQ%ok&G9!BCVrNQX^i,NaoF%(($ieHXIaO9csO^hQu+=T$K?#r8i>^F`+Xa#d$K!*d&W"sK&!c\H!SB"dR>?QP#0Xs
%4'd(Ep/"\4a%gm+<alg0r<V9qUZN#u(Lj="$56/3)\hT=Ojc1[5khgP!&c$DR8?U'5AAVHTs>VCE+4q;+O=*D5bYW#RuhhU1m@Vp
%A_SGmj0ObMh^D27`+u!C6$8N'9[d0S.\Qp.B2hWI@ka`mr8k*e3%7W7a_^RR%'VuY0<:@+C!F-prp?tHn]:`3&^6+Ad2!Of-o3Hh
%;X<0/a3O),-n=+he.$jtduZGAHrm]c]nL>U!7'9_%>b5:J&/3iGI(F^aFY(l:`S(o:a7CCPIH<.E!Z2lW4ok3D0#fVZ/p]uFU2u'
%e44nYB8JO,jkF"-<"*(I$8/$)lRTe:mG;m'@ic[Yc'SJZ'VB_:m.uH_2=B+1O6ZQ6$M`[^#f]t5GBQ_ABJ1c];<sN%57]se*dBh:
%?\E7+-A"dq,'Mim/jt>,M>Za611UE@+R]7eLJKj9W:j^-[*_g;AcIu`o3[,$ZCKsSJi5i10FFW4RB;$bqhq*pbm8H0%kcV'gcK"J
%G4qu0MaoH8ln6HSQiTkaPOEali%,[#MJZf,JV=o\fH&q[36"/R?o$K!)R\)===a4Y1J*Ei'b<`m\[Y%S]@SI^D0)8re,#i[;XDfD
%lekC5B8M'*q!s:_Bhfaq:'`8WRm4kk,>Uj&nLBeUa'pBtN*fP,7V,;Dcg"gFl[:\E*JXFbleguUML.8jA%K^\)lS^W<oF%cr58_*
%[g-6aIK+hgTe)iQ^M3lC((+-soGaciNn#Guc<pM'ZOGujk$[p&qbF-G`Vr'5=<"a+bLu$JE_,Vlp7SjcEt]>^m;p^oe=-^o]-ag"
%_Q(_Z":-s,=1+>WSUe6%*gFOZCf\5jPnnknZ#4YMk4+NWSt.S%%sgIA3eChM<_:`TUh5LYiUDr''',#s=\4/8Z?lg3aO/d82+SO7
%BZ&("@0$sNW[ICp=<Yc<J]r"1M[q6HRfcK'&t4QWaA>o3<YX0!Z^il=8Y2"c+*,$`_/e-o!d6<*Z+nSP8SD=ec>^+U34<L6WQioG
%6E->-V'sZRbi7ZVTJbNMYpn3i6ot9QSM:j<[Z_/_";DnK6[GAB!@D?C):apQce$;c&P1t(*F6L6RN-FXEG&!"0]dE#J/o0"169Z4
%rEal5&/Qb[*S*MakTnbn_aE4B+R!WOAT1iDd:c.-X6"og(MLc$c)_R9V;)f+KXW*JBN9RiZFY%l_.4Po9:WiF<"UMlD7ABc>++/?
%Yt`DJ9>]A,S_a3RYTdD[g+p%SKMG84@]\bT(VEjt,W@['K8$c\Ah8S-]ZuZF:F]mKF'c)K^l[h"Cpg31P,?sU_a]r$GS7:@NY+LP
%S,5tlAHKU>Q=4KM#;nAY_\Zp'>j&Y^VI]<jJcg`EqIWFD7H1s<XG[cD7'FfgN\.uF3ki#tDsBR=U#q5@]@;MOD3jf=F)jn!Dr&PT
%;#:$NOYG3h(u7.7omXVeT1TK@KYma"hqAOH/A>Q;Hk!I)"J*(]"1'LN<W`dPccs:0N9#b>^;\V@ljMY@!m0fY*qO+.7t2'b20e]b
%U'\E1m]+s002c3;5fp1RSbJuhcH<8pq?PE@0Ia1mf(O?0[ps/dXi)7\38@W<JM`IJ[f)$H`539_(YiP"E5iIKmeH<&NNB,7%q%p=
%:SDI'C?SL#"(^B59dR`>,ZdhOcR<]S(:CIEY^Cu`HZjJ2)`9>i"*+?[LOf6Pa-8QF@]%"V!1=%K8(h@CHth[<Mo[]c[7FMpU&^2(
%(.aE6O"R9U8aRcahHLB\1mH*4`?meV4hC:X9XWgOKTKZeSS8fe98>AT%)C5j0q56Jkd0cBCsL(Jq`J3r-!Qko'u"s<;7+GNZ7uYb
%9X>Eg7s/;U;g]!lp?b5dn,o0/2?@<13YH1Zq[qc/*>d_CHIF6Iq0I1HMjTRsM*rJP3Vo)7SbgrSW#HpI,(I,Ln,1G*"J_-@'q1GF
%8QSrt7*Zq?%34FQ\*#,5IrMjV@r"FH!)9ea2IM>d"Q`XiG8$`>b`0\D(FMbH'2hG,X3:8#I"0?sIW&%gC^VSc<2a>X!_?NW."8Yk
%J>MP:9`S4_B?:$^&f*"-9ZojOD$E'gQ^f+aL>X,3hg6;M4)'1Zd%sW+-[9eEGtRjZb4iAQ;aL']P=W^)"2i*4>_]2F0-eU]6YCN(
%g?LErXPGf%f4a3_J@NZ,OHX^6=B#k(d[Bl1>NiTqa#Nd7dC]g-6N#\CFmSJ>kk*3ar:T=4!sV!8ZJ]QohI&#cfRlqdkt,.[D<5!b
%oS#5hm$0q9Q7jm0L<#VDWDhHq2a@*:in`b!_0qe]6Ia:3$PjZ_?6DAE'+(E]nlYP:@YbpbO@^,(_*RCoVVr\'o]7SW<%i_Cl3YPN
%BL=,1UITc@YBd`Z%rF<C3&^<3ohM"#No9h%mgq<^,hF_u=?Mkk]Ag'p.5RR:Bai*-($kpOdVW@@7)[*lB[_"EG)rGtRhE*rO0OBG
%pX*rk/!trc2k(#>H%m.@BTo,@!%.$Z4N%DH>h9d^p][K6D4'Op1??Q-LK?m8\G-^m\?NuSFq<s*fP3^BE"!`t,W-l79Wli"5+6`o
%])@sd,f.C*N"hFCL2.'$%3gMSJ8;A\cON!HH7IUOdm3Ee5M#*8HALEkq$=GmUpO?ke(lhn;YZpXjkXGK._GMXB3SFRRk(p^F$\PA
%1k^1*#d0t@ml@h5J4tYF],WdeMXG4(M"lc"ockh2+G-*T3[ip!#PRK.S.aKHE6<6U"]`sV"+))D2*NqYg.oa047L,a#L[*RX^FI^
%4-UpA&<hFNDc+Tuorm!VKpS7%K@8%Ap`(IDejtQZ[4)q]GF%t16mbiP\?`78-m2&I#tAOufF2[[:+DC$`Qk1(],C/$S?PY"8i\\1
%0[*X<Q4a*-Xn9MC9?aL#q;uM#lL^cZEa_M)GKgFUq)%Id-e7q]aV<itJM-TMd?LCQ]4S'E?tQ_k!<@O^mW^l4R?&PC$o(goNer>4
%GK6H-bV(F>"D;m63ZunV]E4Ht7_E<<HI]W9at55GZ-QKMQ)5RQ61irEnGo=s*@$f'fifTs6/s+n'SaoAPuqKqWQ4YQ$s0TnO"uf2
%.<C:mC5ufOFt<;qm%\=fL^8dlG-l*tDTP%%Fsr;;>CVZUUB]+]rfU4.Y!u7U:=Ph9MfjqUh1/U\Q4<u4lks]'h;P&'mqoeb"N5tL
%<YI(@hgG5-qO@;U%BJ`.p>pm1VDHpXm$#tC15i^>Vg/0o/2:f/`n*NqE.sBX0e`#+"b,4+h=$``4Q'qSIU^*%QB;"))CO\[[@Aqu
%M_CGCYu+ek8[8P307+'NGt"gLFT%*!2]=Q.B#gcg[Lnk'#@`u9O#=m:=CBJ[W>!8V+n+4QU73KA(1_Ok#/%V!AK*b]n8%f$;@U`6
%eE2ad:-)NDF-B;PD<WqK(Li`+l]ZL3BW^Si[;bTAfmibG.N23aRgmFI)NZ>b'"ZcdYru&:(S+Clr7/j=2T6P=\gkt,R2F?f^KL!K
%Og^n;E3(@]TM%X3'CP!RFq2u%5!Ou"+_<5p?)@uQk-qGG81Rn],=a(W2sWl$d!E"V%b610!.YjSD(%LW45f%nf&!0XQAmp>1Oc.6
%V,Jh934!?%0QoW4P'D$rnNfRpIWm?o1Ep6;H4.r9XcVS<)g0]4E*4iM<+sQljD-Z)6j/lC-"j&3Vc\3ED,Eo\93KP]as'#.3Z&ct
%\I&'[>s`L9ACC8:8bA<&Y1!1k+PO;j1l['$a,/>-GQ7Zpf>WFXQCaQnho\AA6gY$ProDqmRnaDh;0`Cff=1[IeBMFo>WO1;jKb^\
%Z4`4"GAV$3ocF5@CtVXZcXRTUeR/YcLG.\TdP2ndQK]/mU\:o@_@[p!<I8ckGnGnGSFou&<Gu<F\J>7HmhuCWSKVX,P$mGpIWf$.
%!jo!Y@iNe?D]UO_XD"te\^E>EN6G\IbpolD`arE,+pB-FS*.B0IFD:+,H1!?L$P>=Wk_k\\"XdGP6K@"G(G?)gM5,G9\%tq<e&&,
%CNepo>-%1t&@kO@,8Cs8DH<$eqNSqJ+)UIKR&a\HPq-'hLjL]Q8J`,8jf<*-J/"D>X!MUan2m\0@XpK&Gs,F2#L#24s*3e0B>DO)
%<,TnTE1TB@<>PUiJ,7DKetsKF=X;'<nTGY#+N"D$n*ktBZ<\0pnlEWI;cSMuPVJYF)ti'%/+EA.aUA8#gq9=oNPF]jr"2q))6$k7
%\]g3<_65GrK([)jG^[DCnI&&tGjsq2G]VVRM-2]Aj.h7_-^4kjK+(0KnHsi6=4*PFV./BZlb;):M&?*d0JJ8I>:+@7<.qZ1d\_Bp
%A"=;Q)B6qk,XHU?4#9\jqq,%c"f3=Yj,<uNJ!5N5`*AHh-8YTuqTS"G,[<iH1]WB:UWnpq!GV1SNDApEg8hJaeD\T.X&8>$rttWT
%cu^is9rP4X^)>^%E'FUQO-X9Ga>=enYR[;5%:-NEOp6\OGC)EUs&\*rjrB>Fh>J]=cg(!r$&o-nhQPnm]:@-uO3Y!^>?0oW5`O&^
%B*f+na4UBi?-GS3$r/=WDde8-rK_%gpR3>QC(?.0N\<W7g7$B_(&+Cf7$-@=!+YrmG`<4#V>*44$*i-SX,$u%QZ/RE@+1W4PFjgi
%:cf,#"b9=9^)01)j&LTq"i.Y\'t#eN9t)$1\O"%2[ZqC#jCq?<m\s!)Gt:5?de)_,d>JYQQ.^fNa07-iMk68PjZ<_^]d-X@3dpkD
%d.R\,0")3H\Kq@8&qVdZ_,)bP#R;n[J68Xo/C+sYMjE3Fjgl,QNM:j+91\f&;Ai.)*6Cr0KD1mI#Z6^1<N*Z7?4EZ3NV-KQp_PZ;
%:LEi*m)iC*qd#BeQ8b'[0dT]f:O,YH3\jQU"NOj7%2^Q#eCs-S@ncf<Ee_>,!0A#q!htGujcZ"#Bt?[p]$8G$ANn"MbE?%h^0Z2s
%p]@mZa]PMq%P#Q\L!eGCb1WO)_<6<8hK.\3!ad?0<+!hSU`Of@.dTIg1(G7<oS)M&<cro=oOkM38MQWF05%dtm%fX_`t%<&<9[(g
%_M5^^jj]4I5X,cU$+0D>qVIur<_=ToAj$1)2NquRYE?UNp`78,?'?gqI1r\Hr7I(s//YNW6!8_te$g=!<"*GD^eZKEbeoMX>kX]7
%WtZDo'%m8;l8QG(_L>F.$'Yt4Wif9&*SOrlcQSaK&%"c+e[(WX05+!Uje8(]@HV9[Za3pT\J;RJ;m`\<(0.`?HVKG,e'&MsVe#ms
%/J*4N03@auknqA"SLh+:>6R553TU!kI>k%pIdBA?RdF51M=TmDheS:WOJN4Z4j-4aislj$#Fb#MKA*f-.C8jpD"1aBC".NdMU>kZ
%LG@o5-4dE)@83QC7B?JVcG]@Aj.Y46W\cFGE8eloQ'uEc)g*QUH0C9rpH=bg!JK-kG#g@I$l)6I'l,0BBHWf1gjZ5!H5/'ol6&@c
%@5fnm$@Of%ZcKhW5Kmj?5&$:>'iMWdd0EGlrZ+pMooSIbPfB#70,-]\C5YiI&5BgB,Fd[@r,@/RN=3UpfPD'"=>o3dGDKLc=l%k!
%0on#2Cl#o(+3Mr8BGWEloXQ(O0+9A`AS^M>0+5#6.>s9N0%L(!G(#!ILDL9Y`!Z-Id]fE4IJ_]V1,UfW7(.&%;o'"urK=MJYhc\g
%[\j@c,#cqfMAnV20kJ,#3=9.;WjBcsS([cKbj#dQYFHk=SP]PK.0fgf\T42#\!$E,kW::FlWMc9d@.$AV^6JD=b#SB7Q.fZSR`*"
%K_"Y>>?X^t_fn!:6^42#Zg`(+X@>;YG'<4A9W]5)ZgGc!Blmi=h3?DM)NflB2i@*Jh;2Xt2MEqh>lc^8cJD?P$mR/]%gW]MYefe&
%oW>9FGt_pHnqAtlSo\oK7'XQJpi4NGns%0M;/MTX+,55@?7Jk-W&^Lm$YaU*TES;/C@)3SmKa9K91]]3O?A>h4W6DE/6SaZ]"hMX
%Fi!.#$!B<t;Ii;#ajpc"FU6FY7XqMno)eTsP,'`^.]_li-b5lVTh<Y1Ra=*q56]A)4;%\=<@MF7lLF&eMiJO9i^6NQ-BV%8C/s8u
%YVEqFc0s1l:QPcVV5PK<dmG-e"!mVQ64Z>b4tQGNans2ZW$J+Mc;Q@#WY/'TB][-f!oRTu*kVq;9EqV/<O3?e&_13f61BoddI2d`
%KGCmM)2jRd&QNsdq:smpm?Lui1T0Kj`B7,=k)7$IV7KFGi16g^AT*<XUAS(W'\"-XDp@o;*ZcWXnNe%l:@M#Ifeb)dl!'4AFe&1T
%W@&&TaTt"SoS4SCPGZS-\Y"7#?LLi)&f]$njVSWcSOT6'k<S]"oH:>Qq2:b^Gc>GL)J0b`RrSMoOrJR(.J)Le%Z'1KTj;F#B<GTQ
%g`D;2ME&RoRX"\P:uPj-V<.W`G>2@.\2?tq:U"Ocb4)?+aHF_Ia)30i#AVuX3E:#lpt2';[j0(@$$+W+h4uIO+ab"#Y[)5,cdPj"
%Zau34Kih41_eGen+p(]#4B/2FGO=Wm(:.OiPT!XY+TRV:kdmi*<SX^W5'3h`L5Oa/<%0XMTAgR]^-K3-pOmGH\Q2W%K@aqg[Y+ZP
%AHeX!!!b]`f!7K32eUTg@AL)l]4GQH!a&Mq%.R@M/`t%H!^*0>:J'Qt(or"P.!N``U&$=f>;^'-F\<^girT9&1OZ^6]+!@;P5]uN
%Ds/5-?.>\q,6QLIpWakA6j)W)ZQD)HZ)(,KDiP/U]q51UH]%]fqUBi8M^.n+oAU:SkUN#KLEIi!LJM7jS2=b?&C>L;1"6EPKBF-E
%M!';2L[rNO$<7LP[cr5:g`>*5*4gR^Irh8<Z!pQafrR:[8sIaT<[u/83TLHb==?/K/B*&Yi_euXQNc(_.k@nI@^rS<3LL5pOndg'
%CBZ&EgHus_>]FHtdu5d8/:Z:hQ!b2!7;)pr4W2/LRcN87#b)&d.1Cr#fqu0*rk0Ba;Qiu=!&P44-PNJ7F/>>?Sa=oD^E6;4Q@Qm[
%`Xmn"oRHWNeg.tk1#)+0=26S*U[HKM@hkhn[q:@+"J(CRD6c"^&(9&>HW(fNEC^/k/kT^s9B5/%KWWOF3!OukW[9'V1DY/-lla%"
%$RIhlU-"*<#BZo`coB];c6E(XJ0dPd:)Vh9A#iqkFM:u,2Hdiu*OUc"\\r&b]"8rWa1,6q(&G=n-J0.I?2uJR]q0(DWQ[hJBo4dS
%6$.qk+#2TOrqZ!=1(2rSX"R:/r0HSjCEn/mcFI&edG0C'>Ks"<f^YbqQB9piI[m;pj3U8*9[e&7-Qd>8\&`<^4@YIP"bo?6\?cV7
%A/Sj6FiK`!XA,cr2%L1>YMhR]"JbP'8YRP)WhXbuca^fJOdJ1@"u.s:]f:0IBe%qX'hHV4Wu<]DLE[di(LU@j[FBn\=+"+(G--75
%qe`!nL*9h4+'annC85'.GXd,Sg5gEYQjPCd,4lG3<)"VYhF+%@8Zt?Sh]_5q(bIJuTfD9W=!Y=X0!@r/-oNI%Cs18f:H.*)ZXc<I
%T\?cJbGPRp+#G[S\+/7c/sl/`9'n3RO3W=ePS:IFN6[:hZCM+b"Y1m%!ML[SiFnEP&:NPZ8<)'eGS?npAY!YP"?F.MreKX&H;<Nc
%K%o:U117Qc*^+<j>CXoW7rso")q0jVY;kB\WQV%C:PES/Y30E,pR0m&ZF\!:C(K,4D0Tb;L@"l)WIYRcl7'P$DDI>>IR]2RKV?HZ
%)S.V$?Za`3Z;e@=1W5BG"csHCSh>`D9HZt=O$nJ`hTE4B);@<BL4_fJLG5K5V:G;&]DGWQCL)o9)\;-kVkiEIXY+7X2j>j`V>M7U
%K;(t0gCR*gq+Di(_<jYXNB76.5_UJAlTjhom,p_H3BtIEeP(T7ljITNe\^ihd8A>M_S/+H!)<e6`K<WR(A1BA-/h7Z(8l-e0oad-
%X:$f#DNS6f,qae1TSq0-qV>_/HYY$A_me,0iIg\sRpq3'<2r8p8XG*>Ycq?K^)5D;m139ZaPL@mS5h$YWE^XUCZh"5lrFa#KYsgX
%i9Hk4(VEo#pX/M$3Y4J+9T.odmH6Z"KmY[]W]g<n\GHJY&^q9OVk9EE!9_SH'(eXY%_oQC`.h7f'%JWf02:20:Xt6/HII/kk'VN:
%AEf%F&5,#3WY*11U#?V"h7GllM(2?n=1H["p.]n)7G6p\53YX4%<Hq-'bPCE]>sA"oVNUuDq^PMr7$er.3>\k0d$s"<5PsJc8Mjh
%7ffXMp!+35nX@d#E="7@r(MS\oU9;^nK<8iWI7soTqCqGpM-`@j04bs.09ncY!X`.T)1G^PC`r(-ff=:3D,6RAn`IZnY9`SpXc\O
%S$fm)^geb@a6;03/g+"KdH"geP;#2*T"qqk\a_/4hQgAHoP2,!,_VIH].5mq6oR`LElK'0^8Nqk[8$3]361+::<]E#jpPCMo%TX1
%`uO6q_eU\C0+)/.pGMD-88/'Z+b+bmP/a?U;eKc<7]k,U1FUf\>"Q\;bhp&0WXF.an_7'a%EV>OLR<G#.,+F:+Iabps3Wa%dg+oj
%6k\66T!+0#1CB);G`qXWi`=$*1Og!_T.Q`$n4)j/rp5`=.>Ob@jVY>JqUrj@%;n3\'Gl7S@J+\OGUspW<4[*D6rA7704!>=YDp`a
%>cG$234it(0^87Dm(RQ-,j6J0J':!T1laDW.&_*8322'K6LPs?@$>*]!9SL+C)%(PVEQJM,W=*`5'kUtI8eF8m_M4h@oKNd*:.;u
%ELfUmI@fGneP+UJbE]mcm+P+7+itMI0%qJa/V[Ihe6?0>VQg[>c5:]'%Y!#Of`[F6W*/bF2fA7;>So6B`Cd];8[n8?gbEgTeeUmD
%ebiBr58MWY*>+BgCHf2-2k"Wd5#rXB0P5,Z`pY$QQM*^oFVjq'[+/C7949p*G!JlhB!(f0C219UgXWiZJS'I^U7b1-\$R=Ff</MX
%4Hms96>f6OUJOii\_,+>]d@GT%sntTecmlpWW?5!Mji\WAeN]-1eLq2e?n)"7h2)shB9ND6VLsOYbg[iEibF5U'i2CA(WQBBrg&'
%S>_\*"+kSFLD6LN7b[.f,.#Y[_C0tpSBS6;@p>pkTJ$u''G*N8+>S0m:#bNBo\@A9>t#r#F$!IIU]D'%qoulIL<f-#eZY7Q/3Pjj
%)OkPQ@#&I=V/QIb^dSf,]9d4<^)K\kA*B<#>>JirEJ`9Zo_59q#!i5na;IZ$*IjlA_IZ()hm^&(.hm;#eLFW:edY]/[cEm60$q^o
%oqBhP$E1Xni:GJWeWhtdY.r!9AM)oVIcPi;Kpcf#qa^^(!c3/qOjX4)^hJ0KKt;9gp.^ZVWRXpJ<N<%`VrZXSNAO+ch3QF>;\^M-
%2U0PaS/%Z"jf*jRC`=!I0a/AA8!s$s"kA'IBPu;_cI2+aDX<r!@mC5;oZ"]2@Aq@;MD^sMTj%=lGrVoUDLUE2U:WCYbJ6Q=E`M%=
%!auA.2""f1#?a!@dTQfjfS6)?Lq>&s?Q'aR,QGW(Z'Yns9"gj62A\Ik*X+%#;23SaF/H)\^#\_gg"cfEd-sXr5S<,m]:r]4-oJC<
%ci&u5)mX%MH(bhhD@QtA`Q;o?*/ReD_DOlITZ+BAG3WmWP@kt%H9TN,A7@^H8:`n@_m3maC8$Z3bhs_&e4^?\=^`P!`cddS(L;HL
%5$01D3o#+/84s&fp.4'GU78Dm:4$k-aCT;>`:=n.eRgYKn^MsnOPLsOYR?qWWMIQfp^>]K5V*?iN\4c]`J9%fi"SK6Mo":N!0aNE
%qYME5lW`tgb#!fpZ?Z;lmms:jB$bGD;i.Sdd*(ir!Y+!Cc[B)Chn5a1_"`?P/5M>$<RP=d@NM!Sk;O0cAR/Q[4]tM0%Su6%3If/q
%EoC.Q)/1\?4E(A6)k3e,?"Lt4kp7$+bXf(%[<,Q9-ruULHG;:NL1h!,-.NXYk*lsZgCff+1b4mX?"Z6)f)L2>M6f7JNkHL]]?sjR
%1QR?HLXc"Y&tQUtGF8*Hhng!]hnOCANZAII>3s>rL8m&(FDsC?hn.esbA.uVM9$1=?;45/m!0frA7P\^e;H;sjh@s`e'cDq<r.O>
%0uPD6`Qdk$ldn'/;M+,#/3'Zek!"nq8?j7iPO0!ue#tgLSCaI6]$$Zth^UP&A%E[8X<*M,JSr/840uqia\sX4LKT=fAXE-iY#M&L
%HEjH+;LS21l;.@VAi/k?&P=(e(2_iaM(Pg.OMQl6S&^`!g1qL6>CUHWRLI\"&"YL=]`[!Cc:k;HjAk7\K;(T,-oBge\Pm#jKlZjN
%F_l]C`7Wsm5u/ocBV?GXG:ppMV*%]l*sa7_GH;^?97$'H_102,q=*ij.23D.W5%-C!1>c:jIG4V5$8[':89)?rgJMcQ:ibub7USW
%C;5F4!MRjW=u1pV:AXB\H41\m+"N77nhA%^BOEOSP\6LVdUA5Jq\)/'9crI6;>9+SrHKps'C:O7.M@D[)&,G*^F\h@c3C^XW3bVR
%39`'S@rjAf:H/)^`Kdr`M&WN"cFR>e'H@js)Wl3EgB]3f=!gG_g<E"DRX?QtI",s2<e9\1d@<g:/[?M4UG]7nnkcbWQbN=Z2PsL%
%mZDEFh\q00IJDLlI%g*<6J>$+94=F(?@*Y=@rU-lbP<]<ehL\Gb[LZ\$sbBoJZa"P<H_trOC;@:DOmR16Ab:@q5lJYm`_E]N(e,n
%5NYu\>I)\4`C!<B+DWKt!&S1GBoO?C)!sidX,4kF/h'=%MH.U]Qe+tUF[nk42B^Mg66*Gei\tZYQVH=2FJ?i!&%c0%EO$fV2P?S>
%oOq3lo)*Hd^OFHD8eFgW%`1lo_f$SBq&Vlc0'"-q4knP,XUQZ=)\]qfMJo81=a'dSXN+@odd7EpUmoG)G[Hr+6+6"@cslTY"SQSI
%,oCbbXAhD5OtCL)B+[#kWZ`JdV8YlX%*IS6TPNpN)IeSY/oM@EX6HB-HlB_MVQc8]QMsd>'tJlYk8pY&'SU8or<</!-1c#+%R>V,
%Qf1rtf8FMK$MYGpD1<%r0^_?4/<lh?KIU1o]J6#')R5<R;c=>Q'RJ$Z]d%&#4PJrG[Ho9_S.Iq>CQ3->qu0]biX:VT/8DfiVQ'$t
%]k(X5,s<p2]+*oi0iW)u:-u5DPR.63QKO3O_IPF0E$QKpWQa<73KgS@A[5l"^:7a;)6]/8p<e:ke@Q3OKrq7`S9^/@ciA8[7a=iO
%lN'@r8L)JLp(Lanfng]E"Xs"[]#)u5cnM.+h1aQZSF8^oA7tL/oko4T4L=Z#PINO/AZ4kR'd!#$4MPEq)M;muDOL?Ejf\tE]gQku
%:`ZtZDoYoBK8t64DhFb-b!VC@):YO`#=T1)A:i*#r^@NJ:gfpL[]_(7e![1C5(bcq:Q2S2agd;2";Q#>'q:Ub-@([V=.apUc+-[5
%e^W(=HV%+&p4(RSB>Q%ddPQAje$;BHhMuuVR`d08[A-]F)5he:8t)rhplStiKR9,r`3*)ljW*N*'TBHfd#haDKn^bSEqHT<1aU\b
%hn)Fug<7\rSlO-oDRI"Bd'.k"'\uCJqMo*\iBAn.T>!C1Uacc_>Kt4&U)F=`Nf\jDlMFG$G4+DkUD9q8\35UZV!5r66_^%QAQh*W
%5PH$8F5;moEQJ"@3OEWXR?^$H:au=p8`IS5CiZm=Jepe&8;ELZnbu-/7\o!S),G#D-9.PHH`Y-V^osp7c0f.kMIMT`1qIBi[nSXD
%U?o#%a(Ia0+954h=S50DeBX5dGEf=P!7ii]D/R>&3QqO/>6$-(^J#fD>?;@b.D1p_j!9r`;Q\6c_;1-V_o<L'3CB\Q0'^j2KuVLC
%Br[gXZRZGa@Mf9U(g6*18s$=d4q!A"#gkT2=X9Z)1E<,m[O/;t(Pbm)p>Lp'E<S.MOWAIaDnp;Th*]8'aOKKcG:uFZWoPhflk.-3
%fQ)k,Ffg5Y7HB0f[jF8?Pcs]uFVA,9l2779K\^@8kI.L`dYr!6%!jMKH]?SA?gm3CL"be%L8rZ4hQ(9r$u$5/Q?CE(dmb7=c/Y-k
%<m9XOo%CqH)5`K16uR?%72?jXFq67BYmiZ1.NG/eSF5G10&>0tDl!q2A1Y%E[o@fKlf$eQ:gp'Q]Z,8h;AO]#;!X%2aM%fU5ADPt
%/nnd.Vk"hi%Z(3T%9diYIYW&cV>+9H#j^^dFFDDXK2r!9!:)f*Ti2YA%G1E<LaFnn]C_=mTqcU%eT0ZJH*I`<bn.)/Q*7!)<+VrV
%X#.'eG^d9&Ee'_fE,P#W`#NS;AW,6_(-5hJo7n<M,M\DWQ7:4'm\lK?'T((;f0,Et%Ak.7W\<V!`TE,B/XW.3me=(0gMaP;b&uZ!
%&2#Z`7Tm=aXOnEG5gSM!lo8@+D-IpeEg-^_64n@Sm74c\DS/-^ABabuLQ'<Aq`nt#\>$9UAU9ClWCrpRgQ3`<3%7,1/tM)24JT;D
%*[a=,F78W]^52X$P5S'/P]5*Y=)jO#hmm,.m=K&.M<1C^E8;7Za9&Ah%okGp";r5<:X1X.3:!cee,1`rVF^;/r]/[1DK"<[]K72a
%5XDqhaK(J;SSt,%F`Liu?YsS6VBtp1lHZQM5rYin:IkpD"1-5F#O/ukPcG@.ClWE)q[dk[QXQQ_FnjVFYu;`d?nQ_AW^r'0,V^o&
%'&Z_DB1^d88[I`c%TH24;M]@;;A_PP164J:3tsg?D%qVG8CbcSh=%V>NoGTPV-6A$m3%s0q>.EE%G^5_cd*?uG<kiP/C%*lMCUq$
%!Zst!XWT!+2o9!h?]+($o='QON]N*uh"S;P/IBSATC/Y5AT(f0Y`iga+'m_+J=%B3Ul3]-FNu*e:*_$AG%Hfg"MX2`O9W[Gp^fb#
%AB!9WO^ljm^&MQLOKAaEZFnE/)!LRRWMQI1q;f,?QPF/\]tAgnSb_bVqpJC3E&*,tb3]m3LAoDOQ>fa[-WN2P01@j]+:9gSNh_\0
%`dO"9@Vd&,*Y.CoV26$>m>@m'3fE(#6IT9+!f9:;ZO5Nc0cU#5O,3TR:4KWjC_!l]$"Ct&Z=uUBA"*7U[?55id3=^.ds2D6Ube2-
%65OW6Pn`K3;6sDiZq>'6&`r\O@,/*d,E3iHekZE'>YB@i8F;pKNL_(0/MbiW6tFA%XXJKODl!/AWjP$<cZV>e%b$f&0XoP;XYN#i
%C:=A`WOIr'LgeW1AtKl%)sZJ(U_GVI0_SlCr3+#=P!lmFgRoDCgc;`2MRu);D'*[OFd]qkF8<u.(L7$FefCa(;7(/^%iZBjLI`fF
%`:hFACNOid&u*]>JeG^:qO2HEF!s?n^fj.Bi9*Gso_)"0&sJGlf7!JaTkYZ<)P;2@e63*^<_u,+s#G4(!Xfj5nGmZ@GAZEQN3T&P
%7QHAoO\?d!l?me,r-iSVbO9,ijHLT.6]t39!8cV)!-kNlSTc+F'`\lG9Fk/'g:bK:LCRN]1R.:@):Ag9nuO?sBIcn]%.R4qXl@3r
%,Z>VMh4:jl\*VRRnb%04LbZ\3RiZCYJBg=qdE3&=GgYudquGi@4[%GB6e"p(rjb,_r3]=-qXKZKa=q7i/+1;Z?.fTcIe8LDpOVQr
%TpVd97V/7&GF+8^)G7kAV494_'6fCEJWash,$'+j,hhYp1n$4<+VYpY.Y,<sl1LL$M3m050RSq=I&HV;>M[;uNuBQ[laeqJXE#qi
%3j[)!MJT:1TYqD3(:2=`eR%>?p3'9jq<:_!Hn[Pi]OUW2C1.^iQK8jpPMMN=(TrZfVA/,tpUGaRj^t>-O[F1odak"5'M15kPu=[[
%<n,EYrLZ<b\QJsLBcIk9gDF)1#Ou7Q6S"*P'I%r^\LF%'X?gQq8>so[M\sMqT+K#S1.$X`C9Jjm+,COJHH#0dPb1@SBp<m9e=iZD
%1VT64o2Dah3l'D]B"l]MEuO+)9*E@P+gBp*"e0!p2H$X6a!Pe3$V,LOlc8[p?JMPTL`DDNC2-A^U=)k5.Y=+3.#Xs!5#gEj,'Xe4
%ICdS1JqsA-Lg^1O8pDlBGd&*tQdZ="1+(OPT-QO\UJp;tbMFdbOEB"Hop;T;$tH=kO+m(9@#<A<V(a-Q^70!b*A3le=-@EgM(hn_
%lLF&q<5D<c*1.nS"Epfm?P^<Oqh+9m83(W'\*Kl6G:SrVZ$sn<lH.i%O6.Kg_s3$5WenpjBofoaT.frp4:t!1$s>nX19I%(nUThF
%B"KIWB53%GCt=:%k]0lN`iAG!0L=jbAn*^k!ZlK1n<9Z'aVn<<UHYmW1)aQ/]t%rQ0BY[YS-=V[d5>_aPTO(<m`CD"B9B_UJ'qT7
%8fj6X1=EM(XrhQb)R_@,rtjtFbrJiDCrZ-V,QSc^)>$8N:<`opk%ADO<7O\pX4ZB/`cp$=G9VhFh=U>e]j$CiTR1,I&7<dZrd)"]
%$4>CmKa%YO@_T\loaDs!9ugPJ!pmWR_e-7@4Qq(<r6o@2+q#u*['QBpen&O09a2UVKU3+*Z2HX4T<=pp))BV(VlQDWTke0P5.u*=
%j4meD2`2$km[rgPI>68?_Gmc*=<*R'%JqA]l[pdE#4)p)TCDC/F4SI\SS$%"6uZi,Cr*"B#"-l$"a*lkoKdi!SB4&3`,^It7a3!P
%a>?L9io>=@KB`t4>\4n-;mUdP+m9u1V$gB\^#ZF#;6N*cFrr%G1#1nTU(>_Q^:V3':BqM4B=c.1(O^?3O%g2V2&!kF3?m0HE0%5A
%cF[nRQ$G;sTtH1"1t2V]S\^Q*#L2>##SZ/KYT2FN](OXBZFe8j9+";gODLhf65\!U`p--,`*#+SmjD`XAL[fA&.`@$+VB%Z7r3Jr
%^?*9U?P>Ga@B<H.`A'i1%]Ah$e-)O.n'UB<L"j$k'm2@[SuTu]]7q82fFPmV/Oh.DCOeF"$`u!sj!e,>@_T8Iq<>p_I-SfT.Rtgk
%8>CLo(QtYCp]9Tao*e7*S8fRD"qo=^Zh`QGd3J:u3VgT]SkF#N9L<T:(EHl0](F^0@"Lk/<$47I]4%S<]dKG=Ll:&a/0L>m&OR::
%p$<d+Z_DOS5+S7K&Z3$afJ>2ar8`M\;]Fq'7,l.=b\ure54$?3"9A^2q42@=9pPVC[=)g;("gH4V2Ik&`UX`r/T^b^M=GlVb$-](
%>IaXh=eA+$FV]K!B[8r&QWsf)%aa#?\F[Ngld?`19d2PJpCW@Dr/3=ekL_i@>Yr5)jfCnS6%2\U>$*l^eqj:H>LBn*IF%Fom<<K_
%DQJ*IU\"6jc)G=eI87u=#<WaqnF.B_DXb;S?9OrH3A/8kjeZ&o*9Ym&b4=StB3t;/4srH^MWHRBWIG4ChN?AI:p\7?1<@?(Fl.!f
%U%KZmA(X^B_rjc^fahHbfZc3`G6.Q55WLZ%PmF$0B_oh%dm8V`Tp'@`!pqc]?C`hi,np;u;bM2`EMndV`ld&-4i6=!oTGj[8s-9G
%6ga9jjd:+";lutX9RZ?YX=X$bnd@')'C(RBo:Ke\c'fg#,\lm=^/5CASsTF?@guf:OPce4'#*=nWIC?^PQCQ?J,I4[nh:"(QiHuU
%3<*qhmPXIl_1Q`9DH+JgR$a:/O]p)9SUA<<IPP_N7cmr9?8IiKi0)sbA/W993;U_FKedAB%"9Nj$1+A&&A,eq`Z[WjCT+Q[JbLGk
%2\:uCmY`#On.q\b=2).1:fb]o*=aCH9thWl6D#b1ef.8aN+#rEUXo"Uj"'E:j7BeCNUQf!)1If_XuBl=.Lk1JT'8];"XH=Y0@QrC
%]6QOh^9_=H*.@E)Bmp8n#=QqjT-2WNTrekN`r9ZCp\(pOAoW@R6t)tV_4b3re!DZ?KaEK94,7XWi]Td^<C:j"ge7:-g"`j(CVE9X
%=$].Q[hqJ2C@aWP=0gY=m_Nb7f:ee+>)%kqXVQD.Q">!rGE;PqhhUr\im)n,V0?DW)XQ8C=JAmSLi7m^$oT,mJr\jR5I=1\WciId
%+:^qH2<KaN1WE]<@ub96)WCp?Mufr-)l>Yb8mTth7AR%f*@9)H'UnF!#fm-.@\APIoXW/0PhpSoZIhO9&krN\gu@8=IF86*$HLQe
%&jD-E[I]u3<u.7kWU]$#H'=[:Xg*D@F\h]&iT41J`8ub)p@2H:/mNi&HD=L![f'"7*"3PGRE%"6,bW$XYZoP$7iBt0)_k8:Skj*:
%T,.oh!QS2PU!J@PEOio3CVrfl/Bqs$+1_66HKCZ.k%n;F\<2PPd=W4T/JjE9.mI%nk*fIoIc%!WMe[dQ8mku)fhS`4b;,S0Y1goJ
%jLo8:_4W%8K@J\eD9[ep$84=^0!31Xe7TRDHP.4$J2KS,G9^$@D8Y;FYU/>aPG%u6\141I6('^NBSpE7dsZ-O[9GC3--+%9Lm:ig
%gB<LG8CCO<(O,^MTVT64H]6MOL,$8_a^\TLCbR^RcIaZ]jE7RThbVVU[22+7UM+(t!R>BdWB96)qGIa#\b%3ed)AJG3nnHV_H,)Q
%c*p(6*pg#s2>bM,%%/hPe3\gl"p5(H/>l?oFV__R2jis]_*SWj(RL]sCsdo<PWd=S8?tZ^D+\jpoPY?cg'p1dVHf!V%#MOQ!rsLa
%(7q7U2'?F0M?Ag,`F]i])>W'<7,Pn^oHigdU?5MuMk2Nu4:$l!g")WG$?oU;iC0-rN3b5`/XA+p)s(7>ls9I\'&XTFe]5,_SrRB5
%&&*Z?7$OD;Fq@\GLIe608;lpJ$*\<+BPch-)T_!djTMU8Y0X)4LA7;'6YC3m-g[;8"*@`n6$P_H`+-%lp>j/t&[o=K;#"*.>C'WX
%b!I?kMlg#6'W>Gu4;u!.DUo.+3P4*W),hO/n^.'o2.SW27XHTe8UQ0WVhc>62D*S.b)Q][TQm#-m<)X-A_upRD3U]bQ@<gqOsNY,
%;dQLeekO%!l;L(:@aSc,`J5j`'=$\0\#f-37'S1MbWN>H*K(F".+RZ27Z<SQ=!80F?EH4e9;B+$qK]<IHVMm/M]:d*O@'1&H3((_
%ZSmi_jgjcOc+]"pD'_Dsk]"?jh3hMO'CGGbA7e1P7QLJmlc;Os1`rNm;KIn<9YsQp*+eCN]l:RhQ$T=CHH.:#lD!*).X<X&J)u6/
%berbRoZq?"+e=](7+5F=ZoQm*W[4):66b'PYsE1P_\.,KI.Y:HTH2d/N3lHRr+$fG:aSCHSorrBEAn+h374#Na\m>)7e%hNN"#(R
%MX:On\d>MLd7S%mH+G4<Zq3B7^Ai=GIc]dUjDNH<]]@!p\"8gm+abDIS2TV(#u4@%!u%f5ciI"odR]MN?.]br?=%FSb!_f7@Ze1_
%^gRPJMV\>Jb.2P:UJo?`JuOG<$E9u0Sjh@IDuJVZKGUMGBc"[XANpm:M;CD^O`?YM?JTj,P\d1@@Z_^h%*j<(:P"H5%)Q%*(,^3h
%S%Zm1ZNUEL2g`q$kfk4ZXe)#Y1km<HZglP>d&4M_@.)[ci6O-ka^\aQ7Q3\6=&ghjB(+1kNToTQYacc,h+mbo\50/=7Z5Dk\P55j
%_M'!8!b*$cMJ4/Fq4Q^5Ae-W2(W;=\r`^\BJ_kj@%[lP::+s>Uf##\/EK[86cY&0C\eshOG@h@Ki]S5+AP6@kLj(i7@`Zo<E6[Hi
%Sk<jqG@tMb@159r_51Bb_lG+G6DnnE&6ar)lU:uO6O_QW^S@](X5IZ\Pu.If]P3gb*[=rG41Q=Ffl&)o7)(cFi:?!K7#6U4c1NkG
%'nQkdGN$g#N/#BKC9D>!U`7@8_<KSG[W$8"RBD19-2q)Z3#p)Pi:(63NgTCEQ9e:e#4#8EqXD%I[[^;"cuP1u>`g`k.WFB-JJTNR
%&_a6>73H)9$T1cK-aA<l1M9ok32ao0Ta?j8.>"E7XgXf-<?euSYtFB[Ps(4$OXOG7Ji&uK^gC@>AeV3Bg>sGg;hBGRJ]K&k[pG&p
%5tA`7i38]88HsF*Lb(47-U0X$55NBTcT:Yh-THL';@Qd!l!<+%<7>hX(>tR8,#\YS!'n1YqNEA4UHS*]lo0T1!R(C3:l>3G\mgIA
%+0@X/``4IV5pCWd3r)s4L7329:;mp$\;=FN_:L5s@e3'0r0AE.mKi\=fSAg^WnMqFdBDlH%F]b7L#j55OQXG<JE"=5g(]8ijhE;d
%l$-m)gf_aiSU7UbZ(t-_Jn&tih,B>LJ\Vb]?ThMGD/Ed\UVbEa]9S64?!_#9j4$Sn.[FOCU8ZBm"HD(@H5X>#G0%=Vd*)"2kM3)M
%UJ%YSj#-1O.dY#q#8@uY18!^eZ>psm_k$T11P*hPBoo%oHfpu6%pVBFYtS#P<4m(KM6)hCjY?#@$C!.KM'6#nD(pTujH#",/[`%,
%3/0!:%>7[4'?6SNit3X#SqNtLV&2Ef<QH.INEe7A$DLJOD2RVLWlA`!>?s%2X\!?3>5t;\b>Kbb#`bIlX*jubG^J4F-ApFn>aD+r
%F0(\jcE-SC0'ecW`.sL6d`^CSTimdA'tG-4HcFWO[>';*+]ALFe5c34-ss#AQIgMPS]b"k)WHH,&0+Yo$/E'>>K-;g^Cj=Q^Kc0m
%`.or)S$m7c+Vf"u9DaSn9//J^,R96.i+6$$s*B9Gor+BG$bPE2KcPe_`30uS<Y)I.M4rdM&oW;f&,-;8Ud4Yr;QR\a._9D;YWHs!
%]`]W@:DkW..KQ%C%U3ThUcWIJAl`7qcHHuq_&!-mTrlg[K)4#I&-rXlm44a+jF"5N:7U#FTiH_J(pr8!,)P14KcR7!S8uE3W/<gt
%%4(O9lk\U88htl-F2bM(H/$m0Ll^j!hQD(H@UoZFqX3Zh"hcY&I/'F[q,B-JA["TaFs/[2L;`6g,#sIoX,:_Y[F4>9@`g*UiB-Yn
%Y7X,oo`Il,GD=`O\2L`?SEEXu?tCZk?^#KTnL)T4Jl/R5l,k^I1q(G"F(r@$a$XK$IWLsk8hu,QM.@GWA=6d"=jMhm1s$h!7kE*(
%gd*6]D9=@u<OQP,j$+k_2g`hC(.tl8@Zc^fkGI+kS%TLj?kZc#&\bG\Ng:Kn=`8Ms@$C'aO]Ge'9"<6hYtrPc#u!lVhSO7DQdT@n
%:R,l%6^V6ENf1@uf0_$nn77kCm>F@H(MR(h3u&ohR>@AOAYBSX')="/4g$+hV2`/mc&i8<12([>:c>f`5hV$*eD)LelB%[#(40*I
%Ys*k'Ne<'7$//cGCpUj$1nk86ggi$pKG5EK\AX,bV+V^Ub^:c]b6.(eW&>])_&'X[Ek"q-kh7'd'i#G\AbI48#'!#Aj%!u=MM8ob
%+6ng0Pk;P@"59P,8:d3qcKWCPgK8gD&blX>JI0$L2J=1$K6f*hCdZa-9,S,=G[2Q%<36=/B_ALKZqV^b<Be?=E#`d!QH\EJ]QLa)
%]?M?1^iaM1`fW>)]H(G5YukC0OZB`?>CJ#^U)^a;%+8>7)"FGN:Rt''%tW'[O.V3%LS2]jUTha/R4^HU1mHY9nn#)jO[=lpZu9o;
%_!4.b46b0_N+!b8/.73S7rkE,c#b*0fENn]Dr`7k[dV.*acVl_,RO1nmRH;"do5Yf8!8C^*7$@GRg;;lG"U"#l_8JWP6orJ7s+nc
%"WBCdWdT_iR+LnE8LHd-9k^t<ZHC#1p)?c2WZW^P`f1g8lQ'4M-uV1(>?<?H&aLN7AT?l+XN+[*#293QW7@SUH:==Dm3/n8PE,JZ
%.V]mT!*K;HKsib5W(O(]jY"H*M!((YVg@gd1`%1=8m@&2D$:1mh&/7OfQVJ[=h->NR4:)&,PN[e/lmZ;kVDks2qq?CjhXSccjt=&
%9d;0KLR8iHik?_))F%]VZa)OYk]\V!\M1u1DMeh2MJ/VthSfL>=W01@Z;DiJBNp"56eT^nbQ`]-68]shc,0tOK>!%^rhqut//T+]
%3iC_r)g0#^NSH&sQ'0m:P$,(L3br_&4#W'il--TsbKOUOMT*295BjbLgJZX/q-#ZDk_=;t:jdZ84B&I,"'9RoF#cJUKN]9mim)_X
%?QW_R1bFc(e,<IKaI"#RjbBg"<=&J>c)aP$1CLO;.t`HILfK[U)V1UW1;gd\;F:o?CURe\r:XfE-,dC6#(f.TkOor1Iqs@%jXO6s
%0/W`]L#A,Nj3Gb]ZCbJs?)>B_O/q0a.Z\s?RRAF"36aAo/T&E;<)t=)fc@"G1qmhM&nWXH)V:Fo`YQ0UUX?2.<UZ+oh;(F$>]ON.
%,`Ubg#tln?#]iC\<F:47TG2])(R9=mN-0'./fq_Y<e<"tA>O=Cg6=i[WY@+OmHg`E]fjPLq%hma$+#,k@deG[atJj<B&?le:K&0?
%8U2[`\,DAh?)p"`g*Ed7_4KF'Ca3gt'L+X:&>N"S2;tF;%9+s>4HPfNdp=PI6=Pcr_3$db*`n`CQ]'at,o%,.*fF'd6HmqT4]uAM
%bHd^&Y"%LK-M#T?lf;\Y92*3^K[&SF0)1/c\)N\_^g&<0/m$4j?Bp+fAL9)Xa)iMM'&^nF7*5nH"+1beO29@2hQc6,GuprWs7`_s
%qN$.$e%bagj1kN`?iKAp^\tq)s7T7goG[MR^]3]I^]0)(rUrJTkO3otiue9upYYtrmpCP@b?t8FO5Ks,qu;!@e!E<!mJ"Bqj0*t0
%rQF*uqd9@V7W?^;i(nk!kC<5ErqM9K%kZO*;?~>
%AI9_PrivateDataEnd
