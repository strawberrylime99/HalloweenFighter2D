%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 5_horn.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 124 101
%%HiResBoundingBox: 0 0 123.4846 100.7499
%%CropBox: 0 0 123.4846 100.7499
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 8 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:30:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:30:48+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:30:48+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWpJEjRpJGCRoCzuxoABuSScVeMeY/zs1rW9Qm0f8uLVLiGAtHd+ZLhedurL1FtHUeqR/Mfh9qb5&#xA;VkyiKTQ5vONY0vWtWmZvMGu3mrmXcpJdusIJ6+nBD6aBa/yLTMc55FjxlJF8meUkHE2HOnQiV/8A&#xA;jbfB4su9HGUxtI7zSmEnl3V9T0Z16Rw3TvEf9aN6ow9uOEZpBPGXo3lD88Nd0qS2tvPqxzaZcuIo&#xA;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&#xA;XFDsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ff95280c-d080-4782-82bc-2b91162f8191</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:30:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>123.484512</stDim:w>
            <stDim:h>100.749851</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -100.75 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 100.75 li
123.485 100.75 li
123.485 0 li
cp
clp
25.164 97.6988 mo
23.3916 97.6988 21.574 97.4897 19.7013 97.0271 cv
17.3127 96.4368 18.0685 93.1912 20.2463 92.9988 cv
20.4265 92.9828 20.6059 92.9658 20.7846 92.9477 cv
20.1989 93.5916 20.0224 94.6647 20.509 95.4212 cv
20.5764 95.5271 20.6447 95.6326 20.7121 95.738 cv
21.1459 96.4122 21.9304 97.0252 22.7774 97.0252 cv
22.8323 97.0252 22.8873 97.0226 22.9426 97.0173 cv
28.0842 96.5266 32.5929 93.1638 36.6447 89.9651 cv
39.6857 89.1209 42.8664 87.0798 44.758 85.2087 cv
47.925 82.0759 48.7228 77.468 47.4035 73.326 cv
46.9321 71.8464 45.8349 71.192 44.7131 71.192 cv
44.6837 71.192 44.6544 71.1925 44.6249 71.1934 cv
45.1206 70.6716 45.6393 70.1699 46.1857 69.6931 cv
48.3231 67.8277 52.5419 65.7297 55.9902 65.7297 cv
58.6517 65.7297 60.8544 66.9802 61.2853 70.5525 cv
62.2365 78.43 52.1193 86.0398 46.382 89.6043 cv
39.6027 93.8162 32.8016 97.6989 25.164 97.6988 cv
36.4759 82.5023 mo
37.1748 81.5919 37.8498 80.6188 38.5177 79.5813 cv
39.4292 78.1653 40.3368 76.7327 41.3043 75.3452 cv
40.588 78.199 38.7044 80.5092 36.4759 82.5023 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.79331 .79331 .79331 rgb
f
105.356 100.75 mo
101.147 100.75 96.8174 99.686 93.465 98.2376 cv
86.1525 95.0774 78.1574 86.4895 80.1935 77.8899 cv
80.4891 76.6413 81.4591 76.0762 82.4716 76.0762 cv
83.5601 76.0762 84.6976 76.7298 85.0978 77.8899 cv
86.2072 81.1038 86.4914 84.2649 88.5471 87.1404 cv
88.7061 87.3629 88.8712 87.5813 89.0422 87.7954 cv
88.1483 87.0515 87.3705 86.175 86.7805 85.0686 cv
85.551 82.762 85.1437 80.5579 83.6193 78.366 cv
83.3793 78.021 82.9855 77.8668 82.5962 77.8668 cv
81.8642 77.8668 81.1479 78.4121 81.4992 79.26 cv
83.0793 83.0755 82.4885 86.9485 85.5158 90.1804 cv
88.3752 93.2317 92.7004 95.4939 96.5392 96.992 cv
98.9801 97.9445 102.625 98.6793 106.243 98.6794 cv
111.197 98.6796 116.101 97.3015 117.793 93.2171 cv
118.574 91.3332 116.933 90.2718 115.352 90.2718 cv
115.043 90.2718 114.736 90.3123 114.45 90.3953 cv
114.989 89.634 115.914 89.1912 116.805 89.1912 cv
117.813 89.1912 118.777 89.7589 119.089 91.0745 cv
119.801 94.0813 119.221 96.2507 117.166 98.5447 cv
116.654 99.1155 116.037 99.3583 115.423 99.3582 cv
114.873 99.3582 114.326 99.1638 113.86 98.8362 cv
111.362 100.197 108.391 100.75 105.356 100.75 cv
f
20.7846 92.9477 mo
20.8008 92.9299 20.8173 92.9124 20.8342 92.8953 cv
22.0949 91.6121 23.8986 91.1047 25.4582 90.2844 cv
27.383 89.2722 29.1857 88.0212 30.9465 86.7512 cv
31.6769 86.2239 32.4396 85.6804 33.2052 85.1165 cv
33.6213 84.7146 34.0988 84.3655 34.6144 84.0496 cv
35.2492 83.5539 35.8751 83.0396 36.4759 82.5023 cv
33.5761 86.2798 30.2647 88.9798 25.3332 90.7302 cv
24.2541 91.113 23.633 91.8191 23.3742 92.6072 cv
22.5275 92.7444 21.6652 92.8586 20.7846 92.9477 cv
41.3043 75.3452 mo
41.404 74.9477 41.4811 74.5396 41.5334 74.1204 cv
41.7565 72.3295 43.198 71.2367 44.6249 71.1934 cv
43.4033 72.4793 42.3208 73.8873 41.3043 75.3452 cv
f
22.7774 97.0252 mo
21.9304 97.0252 21.1459 96.4122 20.7121 95.738 cv
20.6447 95.6326 20.5764 95.5271 20.509 95.4212 cv
20.0224 94.6647 20.1989 93.5916 20.7846 92.9477 cv
21.6652 92.8586 22.5275 92.7444 23.3742 92.6072 cv
23.633 91.8191 24.2541 91.113 25.3332 90.7302 cv
30.2647 88.9798 33.5761 86.2798 36.4759 82.5023 cv
38.7044 80.5092 40.588 78.199 41.3043 75.3452 cv
42.3208 73.8873 43.4033 72.4793 44.6249 71.1934 cv
44.6544 71.1925 44.6837 71.192 44.7131 71.192 cv
45.8349 71.192 46.9321 71.8464 47.4035 73.326 cv
48.7228 77.468 47.925 82.0759 44.758 85.2087 cv
42.8664 87.0798 39.6857 89.1209 36.6447 89.9651 cv
32.5929 93.1638 28.0842 96.5266 22.9426 97.0173 cv
22.8873 97.0226 22.8323 97.0252 22.7774 97.0252 cv
.630911 .630911 .630911 rgb
f
105.347 95.095 mo
101.926 95.0951 98.3329 94.1187 95.7092 92.9158 cv
93.1648 91.7491 90.7988 89.9959 89.0422 87.7954 cv
90.3809 88.9094 91.9803 89.7262 93.6017 90.5735 cv
96.8595 92.2757 100.208 93.7849 103.956 93.8504 cv
104.045 93.8519 104.168 93.8531 104.319 93.8531 cv
106.102 93.8531 111.856 93.6914 112.943 92.1194 cv
113.014 91.1886 113.651 90.6268 114.45 90.3953 cv
114.228 90.708 114.071 91.0745 114.009 91.4861 cv
113.86 91.5969 113.717 91.7234 113.586 91.8806 cv
111.627 94.2313 108.563 95.0949 105.347 95.095 cv
.79331 .79331 .79331 rgb
f
106.243 98.6794 mo
102.625 98.6793 98.9801 97.9445 96.5392 96.992 cv
92.7004 95.4939 88.3752 93.2317 85.5158 90.1804 cv
82.4885 86.9485 83.0793 83.0755 81.4992 79.26 cv
81.1479 78.4121 81.8642 77.8668 82.5962 77.8668 cv
82.9855 77.8668 83.3793 78.021 83.6193 78.366 cv
85.1437 80.5579 85.551 82.762 86.7805 85.0686 cv
87.3705 86.175 88.1483 87.0515 89.0422 87.7954 cv
90.7988 89.9959 93.1648 91.7491 95.7092 92.9158 cv
98.3329 94.1187 101.926 95.0951 105.347 95.095 cv
108.563 95.0949 111.627 94.2313 113.586 91.8806 cv
113.717 91.7234 113.86 91.5969 114.009 91.4861 cv
114.071 91.0745 114.228 90.708 114.45 90.3953 cv
114.736 90.3123 115.043 90.2718 115.352 90.2718 cv
116.933 90.2718 118.574 91.3332 117.793 93.2171 cv
116.101 97.3015 111.197 98.6796 106.243 98.6794 cv
.630911 .630911 .630911 rgb
f
37.6359 69.3889 mo
32.7365 61.0164 27.1057 52.9241 24.1564 43.6052 cv
20.9689 33.5315 19.7101 24.0437 21.7346 13.6424 cv
21.9514 12.53 21.4318 11.4998 20.6418 10.8303 cv
21.2717 10.0115 21.9885 9.3738 22.8058 9.0569 cv
24.7697 8.29469 24.3996 5.69997 22.3195 5.46608 cv
15.2863 4.67507 12.3928 14.9749 10.841 20.0706 cv
8.22772 28.6507 5.56464 37.2317 4.26386 46.1272 cv
3.06464 54.323 2.6369 62.4592 5.25897 70.4251 cv
6.52655 74.2737 8.30585 77.968 10.3869 81.4382 cv
12.2043 84.4675 14.3566 88.5017 17.0842 90.8137 cv
22.1691 95.1238 31.0246 87.8069 35.0246 84.6541 cv
40.8185 80.0867 41.3117 75.6707 37.6359 69.3889 cv
cp
.403922 .352941 .341176 rgb
f
13.4699 56.6751 mo
13.4318 56.5335 13.3996 56.3465 13.3723 56.1326 cv
13.3273 54.8128 13.2814 53.4924 13.2346 52.1726 cv
13.2101 51.4822 12.9113 50.9773 12.4894 50.6482 cv
12.4777 50.4085 12.4601 50.1707 12.4504 49.9295 cv
12.5246 49.1023 12.1203 48.5628 11.5539 48.2986 cv
11.3898 47.8494 11.0871 47.5408 10.7199 47.367 cv
10.5002 47.0711 10.2062 46.822 9.80292 46.6472 cv
8.37323 46.0286 7.13202 46.7771 6.92792 48.2966 cv
6.55682 51.0637 6.97772 54.2361 7.84784 56.9475 cv
7.88104 57.3333 7.90057 57.7219 7.9494 58.1048 cv
7.99139 58.4397 8.10565 58.7254 8.26288 58.9705 cv
8.47675 59.887 8.85468 60.6873 9.7619 61.259 cv
10.7453 61.8787 11.9826 61.1184 12.092 60.0388 cv
12.9885 59.9348 13.4748 59.6839 14.0207 58.9295 cv
14.5529 58.1931 14.176 57.157 13.4699 56.6751 cv
cp
.576471 .517647 .509804 rgb
f
13.1486 31.8367 mo
13.2404 30.9505 13.3391 30.0637 13.4367 29.1746 cv
13.7267 26.5208 9.19159 25.885 8.74335 28.5398 cv
8.51093 29.7766 8.30878 31.0159 8.16132 32.2586 cv
7.83905 34.4763 7.56757 36.7029 7.40448 38.9343 cv
7.20526 41.6648 10.9103 41.7722 11.7941 39.5764 cv
12.3752 39.1824 12.8264 38.5383 12.9445 37.6394 cv
13.1096 36.3836 13.8557 33.4802 13.1486 31.8367 cv
cp
f
19.1486 12.718 mo
19.3 10.2659 15.5412 10.3015 15.3488 12.718 cv
15.176 14.8909 14.4699 16.9895 13.4904 18.926 cv
12.7521 20.3855 14.7346 22.2122 15.9016 20.7864 cv
17.0119 19.4309 17.798 17.9778 18.3361 16.4187 cv
18.8508 15.2571 19.0734 13.9299 19.1486 12.718 cv
cp
f
24.2668 76.2288 mo
23.9562 73.7722 23.0539 71.6946 21.3644 69.8674 cv
21.175 69.6624 20.9631 69.5183 20.7404 69.4192 cv
20.3918 68.7156 20.049 68.0388 19.7453 67.4007 cv
18.9885 65.8123 16.9299 65.9646 15.8049 66.9524 cv
15.5051 66.9402 15.2023 66.9929 14.9084 67.096 cv
13.6652 65.9099 11.1711 66.7844 11.8342 68.7732 cv
13.1691 72.7791 14.5949 76.7273 17.3674 79.9827 cv
17.8918 80.5974 18.551 80.7669 19.1838 80.6541 cv
20.5168 81.6834 22.5285 81.0486 23.0148 79.3948 cv
23.1193 79.0398 23.1818 78.6775 23.2258 78.3128 cv
23.926 77.9519 24.3976 77.262 24.2668 76.2288 cv
cp
f
30.6467 84.2097 mo
28.4943 82.1482 25.2853 83.7957 23.2248 85.2034 cv
22.9191 85.4119 22.676 85.6502 22.4894 85.9065 cv
21.801 86.2205 21.259 86.6409 20.8098 87.3533 cv
19.968 88.6868 21.1066 90.0667 22.4514 90.2146 cv
23.6076 90.3421 25.0939 90.1614 26.2101 89.8308 cv
26.7687 89.6653 27.2101 89.3987 27.6037 89.093 cv
28.0461 88.8792 28.4777 88.6419 28.8859 88.3601 cv
29.2512 88.1077 29.5392 87.7747 29.7502 87.406 cv
30.218 87.0481 30.6223 86.6297 30.8889 86.0842 cv
31.1877 85.4719 31.1662 84.7073 30.6467 84.2097 cv
cp
f
41.1086 74.9109 mo
40.9982 74.572 40.8879 74.2332 40.7775 73.8943 cv
40.5851 73.3054 40.1799 72.9446 39.717 72.7864 cv
40.0939 71.4749 38.9455 70.5076 37.8 70.4861 cv
36.3849 68.6799 34.9836 66.8694 33.5959 65.054 cv
33.4582 64.4905 33.0578 63.9895 32.549 63.6887 cv
32.3801 63.4627 li
32.759 62.1257 31.6701 61.0779 30.4377 60.8587 cv
30.4318 60.8513 li
30.7863 59.471 29.7961 58.4485 28.5832 58.1384 cv
28.7394 57.6663 28.881 57.1917 29.049 56.7205 cv
29.4807 55.511 28.6281 54.1399 27.467 53.7141 cv
27.4113 51.5139 26.7658 49.4671 25.3713 47.489 cv
24.7648 46.6287 23.9445 46.283 23.1037 46.3972 cv
22.9924 46.2527 22.8703 46.1189 22.7336 46.0061 cv
22.8332 45.5706 22.9357 45.136 23.0363 44.7005 cv
23.3 43.5515 22.718 42.5086 21.8303 42.0125 cv
20.9123 32.7361 20.1838 23.615 21.5617 14.1907 cv
21.7023 13.2254 20.2414 12.7893 20.0695 13.7796 cv
19.8547 15.0193 19.6564 16.2693 19.4738 17.5247 cv
19.3713 17.6238 19.2834 17.7444 19.2316 17.9129 cv
18.5178 20.2385 17.8176 22.7722 17.2189 25.3186 cv
16.5451 24.5989 15.8469 23.9011 15.1613 23.1931 cv
14.6594 22.6751 13.7766 22.6887 13.2717 23.1931 cv
12.7131 23.7522 12.8224 24.5154 13.2717 25.0828 cv
13.8928 25.8665 14.5012 26.6624 15.1359 27.4348 cv
15.5187 27.9002 15.9719 28.3543 16.4963 28.657 cv
16.2521 29.9085 16.0422 31.1428 15.8781 32.3352 cv
15.6008 34.3635 15.5617 36.2561 15.8859 38.2708 cv
14.8644 38.5452 13.8996 39.0276 12.8937 39.406 cv
11.4084 39.9651 9.93866 40.4133 8.383 40.7312 cv
7.00116 41.013 7.30682 43.2576 8.716 43.1941 cv
10.8742 43.0965 13.6896 43.0169 15.9572 42.1687 cv
15.8361 43.4841 15.6447 44.7971 15.6281 46.2044 cv
15.6154 47.2732 16.3762 48.1253 17.3029 48.4617 cv
17.257 48.6638 li
17.0451 49.6145 17.3185 50.3831 17.8351 50.8909 cv
17.7287 51.136 li
16.8088 53.2439 19.5012 56.0325 21.2619 53.8621 cv
21.6721 53.3567 22.0734 52.9055 22.4875 52.4744 cv
22.5197 52.6253 22.5383 52.7796 22.5607 52.9329 cv
22.0851 53.3147 21.8215 53.9539 22.0627 54.6819 cv
20.6144 55.8401 19.1125 56.9246 17.5578 57.9387 cv
14.4836 59.9436 11.3342 61.7996 7.99432 63.3279 cv
6.89374 63.8318 7.67401 65.6375 8.81659 65.2771 cv
12.8019 64.0203 16.673 62.5359 20.3107 60.4636 cv
21.0158 60.0618 22.0871 59.5261 23.1037 58.867 cv
22.8771 59.6438 22.6506 60.4187 22.4631 61.219 cv
22.0881 62.8157 23.1223 64.0437 24.4572 64.2854 cv
24.4191 64.5886 24.3771 64.8884 24.3478 65.2058 cv
24.2267 66.491 25.0519 67.2376 26.0627 67.4617 cv
26.009 67.6145 25.9543 67.7673 25.8996 67.9197 cv
25.3957 69.3362 26.4103 70.3616 27.6066 70.5779 cv
27.5432 70.7595 27.4758 70.9397 27.4133 71.1218 cv
26.9807 72.388 27.799 73.2908 28.8293 73.5442 cv
28.8019 73.679 28.8029 73.8118 28.8029 73.9446 cv
26.9855 75.0486 25.3742 76.6765 23.6174 77.7742 cv
20.9113 79.4646 17.298 81.3753 13.9885 80.9885 cv
13.3371 80.9124 12.8635 81.6848 13.0275 82.2493 cv
13.0783 82.4246 13.1291 82.5999 13.1808 82.7752 cv
13.3049 83.2014 13.673 83.6458 14.134 83.7283 cv
17.4308 84.3191 20.9474 83.1492 23.884 81.6946 cv
26.1955 80.5501 29.2922 78.9343 31.2648 76.8137 cv
31.2805 77.0115 31.2785 77.2005 31.3058 77.4041 cv
30.7394 77.7439 30.3615 78.3919 30.5588 79.26 cv
30.6926 79.8518 30.8273 80.4436 30.9611 81.0354 cv
31.1486 81.8606 31.9504 82.3562 32.7433 82.3626 cv
33.0334 82.6585 33.4201 82.8704 33.8283 82.9905 cv
34.426 84.3386 36.5617 84.9534 37.3039 83.3045 cv
38.3117 81.0662 39.5519 79.1492 40.2766 76.9597 cv
40.9592 76.5779 41.4055 75.8225 41.1086 74.9109 cv
cp
.286275 .235294 .227451 rgb
f
39.382 75.2053 mo
38.9416 75.7703 38.4982 76.3328 38.0539 76.8958 cv
38.3029 75.8704 38.5217 74.8382 38.6857 73.7757 cv
38.7453 73.388 38.634 72.9675 38.425 72.6116 cv
38.8752 71.9216 38.7092 71.2048 38.2531 70.6922 cv
38.5646 69.6394 38.1721 68.219 36.9084 68.0208 cv
36.7873 68.0017 li
35.6945 64.6214 34.1613 61.8548 31.6682 59.1814 cv
30.0441 57.4402 29.2248 55.7415 28.1457 53.6873 cv
27.2599 51.9993 26.7863 51.1111 25.0158 50.2869 cv
24.6271 50.1062 24.0939 50.0921 23.6701 50.2732 cv
23.8224 49.3147 23.9767 48.3552 24.1203 47.3884 cv
24.2648 46.4124 23.7531 45.4607 22.8791 45.2263 cv
23.133 43.9104 23.384 42.5901 23.882 41.4221 cv
24.5451 39.8635 23.5402 38.3411 21.8791 38.4758 cv
21.9572 37.9314 22.0217 37.3782 22.0685 36.7888 cv
22.1193 36.1375 21.4514 35.5012 20.8146 35.5349 cv
20.4025 35.5569 19.9914 35.5842 19.5803 35.6106 cv
20.051 34.3508 20.5314 33.0955 21.0695 31.8616 cv
21.3723 31.1658 21.0285 30.3132 20.1779 30.3084 cv
19.5832 30.2151 18.9875 30.1218 18.3928 30.0281 cv
17.1398 29.6096 16.6203 31.3411 17.5529 32.0203 cv
17.8019 32.2014 18.0021 32.3352 18.1857 32.4436 cv
17.2062 33.8762 16.1974 35.2869 15.1906 36.7044 cv
14.1652 38.1482 15.8527 39.7766 17.3166 39.469 cv
17.593 39.4114 17.8449 39.344 18.1008 39.2781 cv
17.9514 39.5476 17.8039 39.8157 17.6545 40.0882 cv
17.0041 41.2703 17.9064 42.9998 19.2502 42.9612 cv
19.0539 44.3069 19.0236 45.6917 18.7648 47.2654 cv
18.5832 48.3728 19.3459 49.4207 20.3517 49.5017 cv
20.1242 51.3328 19.8986 53.1575 19.5861 54.9885 cv
19.3791 56.2019 20.2355 57.1326 21.3078 57.095 cv
21.8449 57.5003 22.6115 57.5369 23.2482 57.1824 cv
23.4308 57.8865 23.6691 58.5984 23.9777 59.3347 cv
24.676 60.9988 26.8683 60.676 27.0949 59.1389 cv
27.6349 60.2083 28.4318 61.1121 29.0715 62.1243 cv
30.8283 64.905 31.8928 68.0442 33.1848 71.0496 cv
33.2922 71.2976 33.4953 71.5217 33.7424 71.7019 cv
33.6525 72.1243 33.7219 72.5325 33.9074 72.884 cv
33.2668 73.8543 32.6203 74.8215 31.9914 75.8006 cv
30.9308 77.4505 33.3029 79.1956 34.6642 77.8621 cv
35.0168 77.5159 35.3771 77.1785 35.7346 76.8382 cv
35.6867 78.138 35.5471 79.5047 35.2141 80.5974 cv
34.6603 81.3518 34.1183 82.114 33.6027 82.8958 cv
33.5793 82.9304 li
33.5666 82.948 li
33.5705 82.9485 li
32.9045 84.0867 34.4992 85.7395 35.6398 84.5476 cv
36.9377 83.1917 38.1428 81.7532 39.3273 80.2971 cv
39.9279 79.5798 40.5158 78.8494 41.0959 78.1135 cv
41.2746 77.8933 41.4514 77.6726 41.6301 77.4534 cv
41.6252 77.449 li
41.7082 77.3416 41.7961 77.2395 41.8781 77.1316 cv
42.9641 75.7112 40.4904 73.7815 39.382 75.2053 cv
cp
.239216 .188235 .184314 rgb
f
19.7199 26.5091 mo
19.342 26.5091 19.342 27.095 19.7199 27.095 cv
20.0969 27.095 20.0969 26.5091 19.7199 26.5091 cv
cp
f
20.0021 9.803 mo
19.5822 14.676 17.9894 20.096 18.5998 24.9666 cv
18.7336 26.0393 20.0217 26.2122 20.4416 25.2156 cv
22.3566 20.6638 21.9269 14.657 22.1349 9.803 cv
22.1935 8.41725 20.1183 8.45339 20.0021 9.803 cv
cp
f
19.5529 90.7927 mo
18.1105 89.5242 16.7853 88.2097 15.5695 86.8523 cv
20.1223 87.3259 24.6642 86.3015 28.4484 83.5232 cv
32.6252 80.4568 34.8469 75.6287 36.9787 70.9754 cv
37.4572 71.5535 37.9416 72.1218 38.4328 72.679 cv
38.4113 72.8767 38.4074 73.0833 38.4474 73.3054 cv
40.1047 82.5017 28.0353 91.0652 19.5529 90.7927 cv
cp
27.84 57.4446 mo
29.7756 60.9124 31.9084 64.2796 34.218 67.426 cv
30.1848 75.8069 25.6545 84.9846 14.4885 82.6687 cv
13.716 82.5086 13.0822 82.7634 12.6447 83.2058 cv
9.10858 78.2923 6.79413 72.9041 5.45721 67.1546 cv
13.4543 69.3172 23.257 64.4915 27.84 57.4446 cv
cp
4.19159 47.6687 mo
4.29413 46.2517 4.47479 44.8567 4.68671 43.471 cv
9.74237 46.9412 15.8879 46.1629 21.3732 43.6702 cv
22.59 46.8425 24.0226 50.051 25.6076 53.22 cv
22.6906 60.4202 11.5656 66.1799 4.5871 62.5569 cv
3.91034 57.7869 3.81952 52.8054 4.19159 47.6687 cv
cp
10.1682 24.6629 mo
12.2844 27.0911 15.133 28.6087 18.3527 28.8216 cv
18.4474 32.574 18.9689 36.2864 20.05 39.8875 cv
15.4055 42.1189 9.93475 43.1716 5.79511 39.2761 cv
5.70526 39.1922 5.61249 39.1277 5.51874 39.0637 cv
6.64374 34.1638 8.31366 29.408 10.1682 24.6629 cv
cp
21.674 6.58083 mo
20.0031 12.4768 18.716 18.6609 18.4113 24.8128 cv
16.2805 24.6101 14.2932 23.6326 12.9699 21.8635 cv
12.6096 21.3821 12.1389 21.1321 11.6525 21.0486 cv
14.0676 15.5374 17.131 10.4104 21.674 6.58083 cv
cp
42.7599 71.4959 mo
41.1994 69.8406 39.6935 68.0437 38.2473 66.1497 cv
38.173 66.0271 38.0861 65.9133 37.9904 65.8074 cv
32.3508 58.3372 27.6799 49.3474 24.6193 40.9671 cv
24.6242 40.5164 24.4641 40.0652 24.1945 39.6897 cv
20.3283 27.823 23.2219 14.6101 26.9357 2.9944 cv
27.1906 2.19557 26.9514 1.54909 26.4904 1.11891 cv
26.0021 .219011 24.9162 -.374251 23.7639 .27321 cv
16.2121 4.51686 11.4221 11.531 8.03632 19.3445 cv
4.3537 27.843 1.05487 36.8601 .301941 46.1375 cv
-1.18439 64.4558 2.57245 81.3665 16.9797 93.8577 cv
17.1974 94.0462 17.4269 94.1707 17.6594 94.2537 cv
17.9611 94.5198 18.3537 94.7053 18.842 94.7512 cv
29.5646 95.761 42.7375 85.6311 42.5217 74.4446 cv
43.3342 73.7595 43.7014 72.4944 42.7599 71.4959 cv
cp
.156863 .113725 .113725 rgb
f
111.157 62.9641 mo
108.381 61.6028 105.825 61.2981 103.496 61.8587 cv
103.331 61.657 103.123 61.4846 102.862 61.3601 cv
97.1994 58.6638 92.258 65.6975 90.0041 70.0706 cv
86.5812 76.7132 85.0178 82.7215 90.7199 88.6052 cv
94.9338 92.9544 103.346 97.7781 109.412 94.6287 cv
112.225 93.1692 113.862 89.9324 115.554 87.3982 cv
117.444 84.5676 120.667 81.1907 121.11 77.6716 cv
121.867 71.6448 116.145 65.4085 111.157 62.9641 cv
cp
.403922 .352941 .341176 rgb
f
102.245 73.2664 mo
102.12 73.0857 101.987 72.9041 101.847 72.7244 cv
101.308 71.2937 100.187 70.1384 98.5988 69.9744 cv
98.2971 69.9436 98.009 69.9514 97.7355 69.9934 cv
96.926 69.9959 96.1389 70.344 95.7629 71.1292 cv
95.4953 71.4968 95.2971 71.9085 95.1555 72.3411 cv
95.007 72.6072 94.881 72.8845 94.8029 73.1785 cv
94.4787 74.407 94.7922 75.4612 95.4611 76.4402 cv
95.9982 77.5364 96.8996 78.4402 97.9504 78.762 cv
99.3469 80.3875 101.907 80.6336 103.082 78.5676 cv
104.001 76.9514 103.217 74.679 102.245 73.2664 cv
cp
.576471 .517647 .509804 rgb
f
95.008 84.7649 mo
94.9699 84.5598 94.9191 84.3626 94.8732 84.1624 cv
94.9348 84.0169 li
95.0773 83.4841 95.0344 83.0134 94.7697 82.533 cv
94.6008 82.2258 94.3967 82.0632 94.1633 81.8718 cv
93.5285 80.2766 92.6682 78.8025 91.6955 77.2986 cv
90.8137 75.9353 88.5607 75.6917 87.7385 77.2986 cv
86.7814 79.1677 87.4318 81.3855 88.4308 83.1389 cv
88.7307 83.6648 89.1066 84.1272 89.5441 84.5261 cv
89.9582 85.4241 90.5099 86.2522 91.2668 86.9431 cv
92.9826 88.51 95.4142 86.9451 95.008 84.7649 cv
cp
f
113.91 66.7449 mo
112.9 66.1492 111.625 66.5344 110.852 67.3201 cv
110.743 67.0842 110.602 66.864 110.391 66.6922 cv
110.225 66.5579 110.063 66.4138 109.895 66.2805 cv
109.951 66.1004 li
110.229 64.8621 109.341 63.198 107.862 63.3567 cv
107.27 63.4202 106.708 63.5818 106.208 63.8284 cv
105.673 63.6673 104.913 63.3801 104.836 63.3567 cv
102.967 62.7869 101.703 65.2068 102.982 66.5423 cv
103.316 67.0027 103.631 67.4758 103.928 67.9607 cv
104.195 68.3821 104.619 68.5637 105.042 68.5672 cv
105.105 68.6521 li
104.879 69.0579 104.726 69.4934 104.702 69.9627 cv
104.66 70.7825 104.973 71.5369 105.594 72.0818 cv
105.9 72.3494 106.208 72.5076 106.582 72.6575 cv
106.695 72.7024 107.702 72.9573 107.798 72.8899 cv
107.959 73.1502 108.561 74.0842 109.015 74.3372 cv
109.783 74.7669 110.675 74.7473 111.519 74.6638 cv
111.689 74.6472 112.089 74.6609 112.385 74.6331 cv
112.512 74.8347 112.668 75.0466 112.735 75.1463 cv
113.293 75.9685 114.083 76.5173 115.057 76.7073 cv
116.444 76.9778 117.671 76.3235 118.133 74.9607 cv
119.208 71.7849 116.533 68.2918 113.91 66.7449 cv
cp
f
103.948 85.4387 mo
103.786 85.6482 103.659 85.8787 103.571 86.1228 cv
103.385 85.5584 103.231 85.1716 103.169 85.2024 cv
103.24 85.1668 103.564 85.2986 103.948 85.4387 cv
cp
118.357 80.4397 mo
118.347 79.8884 118.07 79.3347 117.558 79.0105 cv
116.168 78.1306 114.872 78.8323 113.37 79.2468 cv
112.896 79.3777 112.544 79.6472 112.293 79.9783 cv
111.938 79.927 111.579 79.8596 111.215 79.7918 cv
109.866 79.5413 108.739 80.3816 108.335 81.4387 cv
108.095 81.3474 107.853 81.2537 107.61 81.1604 cv
106.978 80.9182 106.394 80.9993 105.912 81.2727 cv
105.696 80.8479 105.462 80.469 105.25 80.1878 cv
104.825 79.6253 103.69 79.5257 103.536 80.4119 cv
103.453 80.8933 103.249 81.8679 103.397 82.4837 cv
103.172 82.449 102.905 82.4827 102.725 82.51 cv
101.375 82.7171 100.623 84.0974 100.636 85.367 cv
100.646 86.3367 101.008 87.364 101.219 88.3025 cv
101.284 88.5974 101.362 88.9934 101.408 89.3718 cv
100.753 88.9461 100.102 88.5066 99.4504 88.0335 cv
99.3322 87.9475 99.2111 87.8919 99.091 87.8499 cv
98.6896 87.282 98.217 86.8284 97.5851 86.8084 cv
96.6555 86.7791 95.9758 87.741 96.2131 88.6096 cv
96.634 90.1458 98.0949 92.1414 99.7326 93.1868 cv
99.967 93.6863 100.368 94.1214 100.989 94.3743 cv
101.593 94.6204 102.176 94.8347 102.753 95.0247 cv
102.985 95.117 103.212 95.219 103.442 95.3162 cv
103.882 95.5183 104.332 95.7117 104.799 95.8899 cv
105.388 96.1155 105.931 96.0374 106.378 95.7786 cv
107.299 95.8455 108.245 95.822 109.262 95.6707 cv
111.117 95.3953 111.297 93.0413 110.353 91.8372 cv
110.374 91.8362 li
111.827 91.7005 112.754 90.4441 112.649 89.2337 cv
113.548 88.8181 114.045 87.9007 113.988 86.9851 cv
114.279 86.9441 114.57 86.9011 114.868 86.8362 cv
116.036 86.5833 116.752 85.2776 116.62 84.1214 cv
116.927 84.0134 117.235 83.8884 117.544 83.7439 cv
118.775 83.1687 118.969 81.5418 118.357 80.4397 cv
cp
.286275 .235294 .227451 rgb
f
118.575 78.7185 mo
118.131 78.6829 117.655 78.8045 117.255 79.0398 cv
116.667 79.3274 116.134 79.7659 115.674 80.1946 cv
115.157 80.676 114.729 81.283 114.473 81.9495 cv
114.226 82.3523 114.058 82.8049 113.998 83.2415 cv
113.977 83.3963 113.978 83.5481 113.987 83.697 cv
113.795 83.6926 113.604 83.7029 113.426 83.7356 cv
111.818 84.03 110.182 86.2356 108.627 85.7405 cv
106.432 85.0418 105.25 87.8059 106.539 89.3264 cv
106.592 89.5266 106.646 89.7268 106.699 89.927 cv
106.124 89.971 105.526 90.0969 104.896 90.3045 cv
104.246 90.5178 103.737 91.0579 103.487 91.6814 cv
103.255 91.6912 li
100.224 90.2083 97.1203 88.8176 93.9348 87.7488 cv
92.1047 87.1345 91.1799 89.7625 92.6721 90.7424 cv
93.4553 91.2576 94.2209 91.7117 95.0168 92.0984 cv
97.7473 93.6004 100.604 94.908 103.452 96.1365 cv
104.353 96.5252 105.399 96.1546 106.003 95.4973 cv
106.342 95.4558 106.69 95.3992 107.057 95.3303 cv
107.383 95.2693 107.644 95.116 107.864 94.9236 cv
108.647 95.1785 109.578 94.9275 110.195 94.3928 cv
111.743 93.0501 112.03 91.4973 111.642 89.9651 cv
112.442 89.448 113.001 88.2996 113.755 87.7107 cv
114.762 87.8548 115.842 87.3757 115.874 86.1809 cv
115.948 85.8484 115.923 85.5369 115.832 85.2322 cv
116.301 85.3386 116.81 85.2932 117.273 85.0227 cv
117.706 84.7698 118.133 84.4075 118.44 84.0095 cv
118.696 83.6594 li
118.86 83.4465 119.028 83.2381 119.183 83.0188 cv
119.272 82.8923 119.362 82.7649 119.448 82.6365 cv
119.474 82.6013 li
119.56 82.4905 119.645 82.3801 119.731 82.2698 cv
119.996 81.8953 120.254 81.5017 120.348 81.0447 cv
120.601 79.8084 119.816 78.8181 118.575 78.7185 cv
cp
.239216 .188235 .184314 rgb
f
119.304 76.5584 mo
119.148 76.5774 118.989 76.6004 118.82 76.6633 cv
118.058 76.9461 115.187 76.9378 113.171 76.8201 cv
113.342 76.3074 113.345 75.7327 113.102 75.2683 cv
113.062 75.0584 li
112.929 74.5735 112.63 74.1365 112.236 73.8318 cv
111.964 73.6218 111.666 73.4646 111.329 73.3826 cv
110.998 73.0672 110.569 72.8665 110.045 72.8899 cv
109.285 72.9241 108.447 73.4309 108.152 74.1687 cv
107.474 72.9773 107.093 71.5388 106.416 70.1199 cv
105.746 68.7127 104.904 67.3006 103.509 66.4885 cv
102.116 65.6775 96.0978 65.4368 97.7697 62.3797 cv
97.7736 62.3718 li
98.4767 62.157 99.1213 61.8777 99.7228 61.7097 cv
101.247 61.284 102.958 61.1941 104.633 61.4148 cv
104.62 61.6218 104.629 61.8342 104.679 62.0515 cv
104.911 63.0525 105.573 64.0501 106.539 64.4578 cv
107.204 64.7385 108.01 64.7 108.637 64.3225 cv
108.751 64.2537 108.851 64.1609 108.959 64.0789 cv
109.305 64.0589 109.64 63.9446 109.933 63.7132 cv
110.584 64.3303 111.202 64.9817 112.06 65.4641 cv
112.495 65.7092 112.952 65.885 113.405 66.0496 cv
113.161 66.7595 113.237 67.6004 113.85 68.1038 cv
114.095 68.3162 li
114.26 68.4973 li
114.334 68.6096 li
114.403 68.7273 114.461 68.8474 114.518 68.971 cv
114.953 69.9177 116.385 70.2273 117.234 69.6985 cv
118.325 71.8323 119.724 74.9959 119.304 76.5584 cv
cp
113.673 86.2058 mo
113.236 85.7634 112.602 85.5086 111.829 85.6687 cv
100.663 87.9846 96.133 78.8069 92.0998 70.426 cv
93.0197 69.1721 93.9035 67.8762 94.7648 66.5593 cv
95.0187 67.0393 95.298 67.4949 95.6115 67.887 cv
96.5617 69.0789 97.298 69.3587 98.7346 69.7498 cv
99.9562 70.0823 101.436 69.8303 102.423 71.0115 cv
103.161 71.8948 103.322 73.5291 103.771 74.5711 cv
104.948 77.3103 107.16 80.1565 110.171 81.0139 cv
112.082 81.5579 113.237 80.7166 115.066 80.6072 cv
115.784 80.5642 116.404 80.6487 117.004 80.7244 cv
116.04 82.6077 114.944 84.4402 113.673 86.2058 cv
cp
106.765 93.7927 mo
98.2824 94.0652 86.2131 85.5017 87.8703 76.3054 cv
87.9103 76.0833 87.9064 75.8767 87.8849 75.679 cv
88.3762 75.1218 88.8605 74.5535 89.3391 73.9754 cv
91.4709 78.6287 93.6926 83.4568 97.8693 86.5232 cv
101.654 89.3015 106.195 90.3259 110.748 89.8523 cv
109.532 91.2097 108.207 92.5242 106.765 93.7927 cv
cp
121.943 70.2556 mo
121.126 68.5359 120.404 66.4046 119.452 64.7825 cv
118.359 62.9187 117.057 63.1043 115.322 62.3865 cv
112.847 61.3616 111.801 58.7883 109.36 57.885 cv
107.713 57.2766 105.799 57.301 104.176 56.9153 cv
101.652 56.3142 101.122 57.1536 98.7678 57.763 cv
99.9953 57.4456 95.9953 58.6687 96.0002 58.6687 cv
95.007 58.6668 94.4016 59.2625 94.174 59.9934 cv
94.1652 59.9807 li
92.3732 63.0593 90.4182 66.0383 88.3273 68.8074 cv
88.2316 68.9133 88.1447 69.0271 88.0705 69.1497 cv
86.6242 71.0437 85.1183 72.8406 83.5578 74.4959 cv
82.6164 75.4944 82.9836 76.7595 83.7961 77.4446 cv
83.5803 88.6311 96.7531 98.761 107.476 97.7512 cv
107.964 97.7053 108.357 97.5198 108.658 97.2537 cv
108.891 97.1707 109.12 97.0462 109.338 96.8577 cv
115.088 91.8718 119.13 86.177 121.83 79.9749 cv
124.491 77.4739 123.497 73.5261 121.943 70.2556 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (5_horn.eps)
%%CreationDate: 11/11/2019 10:30 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8dXX1'aq!=b2%L5=]4?sDZkQL))&4'B!l`;7EQ"]h@[0FOf8lJ4jrPR&Dj&42]r7>r$gAP0]=GK*0sfni
%pNQL95J6pVfun=.YPukoG:qFMF2$.p.uX<QeE-4q^\bYCrp7,'hqpHa.OX\1p/S7Uif\?D68!:aBid%MJ;]JlT)S6=p>qbs?GCf4
%qu-8E=3k6err2)m_dB"Jh#6N[\+6"9]<?+E5C`@hh>[56VgjkFY()SJ^3TGMp?'ok(JioSo$tUsn22luVsi^s\H2]Rp@@l0?:`P3
%[r:-EqoQPId_Gb$rVT3#jmeOarpB*^cb=o#qT54>Y?q43TAnAd?Y$kCQabj8d9ju>j=B?eM>VC<]`"0E5<OFjcePX8aWKF<FGF)u
%fA1AZ6d,5:.a*GaO2VV-S#`<X+$XiAB0GYMTC?L.$bN@`q;R;WT&K?q]^0*j?[KE#h0B!(I_qF^&&*Mch2<Yas7H9eN$0hOh<g-h
%Sj.LAX2CQ>^2gkCpj1KOZqG97;Ai*?bklW"@nSnm"EtT/a?./tHkeEjZHlT@*bgtCJoghLZeI_EI.uN:T6t_Wg>q;jop[V,rVs@:
%Bt0$Xigu'5hO:#)gE3$E^Ab$sceca@l7JJ8nulAJF8K4F>AnWTr!C>Sl9YF$cM64ZfAGH!OX]ebq%">&TC;'nJ+r7N?MsB9?Z%%7
%boZGFmquM3ma_?q/%ZKUNUj5Yq1(*$]B1:?!DeMS?GA^diaTC94`H1*n'Z\."(-kgs5s!\DkF`@\b,I\B=2uR#QOSqff/4R."57j
%5CCCLSc3L)?[HMOJi@Uc?hSAWrp.J*V?sY8rT[$<qXj?J_lFRjQ1+7p]hG8h1<Z9(qUU,-re8+N>Q!u]I1mR6rq.ePi7UcYq!k+d
%lgO,j?Te?SIef&.?iBKM04+Y$X2g9MErF7`5MY]+a6h>7Y?oC3J$]$s+9&bIjeo__E3eq]p\N!1\VL*2S9+AafloZ/`sq,l?f1;D
%[rO)#gAh27lU;JC;He"3Xf%LMhEHG^h/m-imicoQiq\e):L<MbMfHXA55S3+o0iFh]d6FdIIm=@h,B!h46[O;L$+u^s",Tl^O!tr
%Iei?lSQi>cam1m8IeEP5(pN2LJ"XZ,p%mtIs4k?SNaMeMp<D&NT&8"#5PVBg4F-Ng=^Z,SIe3O%"o[c@_ru5[HcVNqSihN%m+^,f
%^AHrsVn;on+27d8mWYj@4Wem_nGDaOq02`OY'e;X^\l955J2=Am/%UZ0ltMSdQPpJ5/7'e0AjOTI@0Y8g:r+4S!VhnGJD!i3<'!+
%RX35*^&>_6e&GCSSg;)KO7\YiT<`)^4_+AinJl?DGPICdaJWsJalL-*6+ur]0E:r<Pef#FrS\b1(#Ad@cX)LZYl"!HB5_\>\bYO0
%GHb_(?iKT;GIO)&rQHqH>GeT87@RA[TDe-DCRM9jqj6n's7lH42pZ$Br4+@5@_>6umLJg>>Nkt=gR%JubO)TALY_s!a,g5qnY>1q
%q:^53T3Q7;X1cDX(?[1IO90n#V^r%,O8NQm>(-;smf)Y?rTd7$PNcY%rALl3oHq2!O'TN>cL)h+Bj+o:iBFIj^Ac4.m(`S!2bBY&
%7FF]@a!Z-AI>e&DQ.R^2pB]ap5J7!`q<d).Ie3EXbAXY'T!rNiDcq[1)1MuB4.#H7eq3Yk'E:s?E"nXDI7P'GV(E/nFijH/*^@6]
%f1D!I*No@KP@J;S3K@t6XrDh)'/-#t(7K/:Nhr?4Z0n[jU6_6`XM28d;\!iT,%=\qM'Wk&Dr`n#Z-RFunRM'P`#T0D;>BMKP*^88
%a!i%j32F5-nu,MdOX$\NLJKZMP)D8>SDlgEH.CQA4<eC-&;(rd/o_1Vi?ZGu*9<4-#q]+:MKh6$-coJ9q:>f7T!7u/*[`t.rZK6f
%Nb^9il)QIXi$FSR>C5U6q%8\'00%aH43;K,@kSk2QVN[H(6L"cA=)A5:*,#qS6Kml3%[W\%eB(;\X'#\W,cDiBo.!9IDk/9s"?l4
%?HeDH:]KT.DuSV>>5GM=_7t/`q!SM%.K;WRIh-R)n+ZDAotKg)5kd^-[*KSDI?4P:Jeu.`j!;Z2%\,/'EEu"N+?:WRk\?5#8l*']
%j!aJ>O96js9LLE[6'*7T,(0<J*(Q-fK,f6\driWjpem?W>SDifUeBbV&log2Z;Wd+^BaT'?N,:'8!AG'r3sas$Np^/+nFeN*9&n1
%q<%2lOi3G'.ZF]/GE:>tE`kd_ZUcERZV)\,e!YU?R"XI+OjcKTb:!:7`uU_l8!^=40.45bHtAGQ]fV(d"Hh1\_fZ<E89g;84+sAb
%PK]R7jg/.Ga&?/>O9nisL)n`7^+[Q/([6W@^6+uo12j5cj\`tEafNcC(=t<.2_n]*`ik1f3&^"o)<i7g?UYS;f>m1rOV'5Z;acMG
%7A`g(HVUGGPccJk\F"5p*(Be]0h<\SUHF),f&QFCIlne6N\[0B.IkKW,3n@fF>t<&d%;8F6=(?+#(oN:7&Sl-VrN#C)TRu8ZZ(F;
%2#J=!&VMTj:aPooq,.P=K^N#s%mkN:39&d&'chB^T\(U4$,lW/,8"Sd>YA_r.HF"!b8\Z?W_^t*&?/VP@g*C)R=LpCFkKV=dg\B6
%??>QpdDB50Lf5sJ,$$gVPB5'LMJ7FSP\0Z!_?]DfFH@)F=/3+*7;6#e!d)$oVo-d<#22QO5W##?6Bi_J:gbF,'C\UL(qAL[IQsPs
%(MGhVO0WfIn;-f"n6gdBS++f\9R*OZW%_&kNMC)#D*3PHk3WU>p4f3qViT&#)%^mDPr^r+$6CjVa5M'dN6nJ)#"3\Z^A&;NjUtE>
%bRIj;Ng#1V^e&jJ/E,"'Y)X/6',qTIEN3Nk([)^9!"@AKMW$f8EIs-8Fbg/dM-rK.FbGVU&&uSB$3uHd;%;p'!$8,2:AeLb]NOqr
%qF%k?.^q$[>lnXVlr#gd@A"SM8Yfgl,`5:@dV/22,gm3[S7T!!jXc`FR=00F&e6*!f5aMXfIYhs7=)Vfd3:>g&n*eVP[2IBX*f5Z
%Y)ach=GR_F2HXG^[^_R8=<0.bOirXBU2lEp@6qHdE`.!>0f*@&07XXT0J`iiaD?T=q2dP#hSS8l/Y,bLBI)j&^]gJd('b]p/.u&)
%1)C1$)AXq37kP"t>R!fdG8pgEUN(<0_rTOqP"`2-Lbq.qZXK":7:Q!J8ZJ1(OTpY@K1&BB(aOGa7pq9$1IW:C&2c]%oVaT.P*m<8
%9T>f@G8M5-WusoFA,*)J\Ee=rY+(!\(=`]GFW5;O9u'E!s$tp:NUDk;8TN7Nihq'sIPZC&=TLsCj:ouZ,#&Cn?V08jJ@><+HNA_p
%B"7.1I+\,\klCY1bEl"2gjZU,esasdE!%`$bO&5P#.c,?`BHhe[@5>;KBQ_k2F8,V"Y8OS=rDKM'EMtnCr]s7A.d"uM!.Fs"Xh0V
%7#XR6Leo1-1O(BTW7nqd)6-FV'kjB05]nNu&o'1"3>SX54k8Mj0>B8FqspeGDdRbP7COq\a])PIF4=/gEQ=d4A87O$F11S<U/P'i
%b"gKX._IOdhQ$AIcX%-eD,_*jA[id/4)XnG`HsZ$j[00dh`8Qm,MmL;m6NUUhi[@jb5I+Nn\3o2%m/j4%mRZhjH)Geke)ZmTC7$^
%)3]"!7&L06*F5_97'A0$f*8M&<3tq&JV%e0oKinmb<_H%)d2)cM"JDs&<.l#IP`Vik`li#I5LW@]Rsp"C!c6]aIT8J<9#7hS4]nN
%;b\%nDQ5]8BO1M:B%_X#A874*3Aui$aUk3t+?F7UVV#m2#L!nJ``Op)Ct2Fi8_/q\)/%Q5T]%khj#HA1DRAXodqosTKpsohVuO.G
%i@RP^449[Pg6!6!I7JSP;:e2'=Pr^`Da3<Cml9?UNsFS4_*;t\:]0gnEQ<9;PY%KH&T`3+^bjhWXmE#_`#9><P/N0Z1'M6sL=IJS
%VA"#4d;Gqj>2VA$3fB,\ihTAg-$88XFuSo>NRDslXAuF60HSH_4.U)N0XQ^(%)B/0bV3gu;g7eeDGfeq(=3CNXBK5GI\K]^`W9nn
%53dIVY)YNo1`MFLG19"ID"Z)A#.ecDBcb.p+/Y=k5:0)NGJ'uihL=7`e)%5"53Vcha+(3QrgViLc419b"<N[H=/IlSI<I3f!-%oV
%Sh0S"F^$]ieeg&"LrH/.cARF0buC\&%`<2Tk*]f2FKh7GjWpE8'O)>YLIlNRoNe-(K*?r8TKq-=mAF>oDkXE;LB'$[%DaX,UZa^O
%\O+WE&]g\i,D66&f"JLYj+^)L0gO8oC([G*.L)+%O(oiW$<=9ONR?p6+4IC.bS-I.07$hH'C`P5cYE0DAe/S@^RSN;duRVJpc2Y?
%:7%#!Z?#L)N7L,`L^uN,NXn13!:YUN\`8=grQfT+Y#0(SDN6Z&=U`JJ\d:=`FE9Lcco7@$8Z&.BhAhS#,(N)Q0ciKOd,SP1&2Y%#
%FTao0I5^rQR@koM:B6u:3rsLSe>Y^rOg-YF3>LO1J9(g1)RLq/70ban!c:]j-DA[%gba9InKUdLKfD08WA(4OSI0KhfVriQhP.6>
%TI4,CNQ"AH`eocX!9u*bgZ,S0Mp:YrLL.%8YS_5^3%Z5pBPe1Sj)KmWa,m=$h'mLTpf*;<[5uO[<D>EOl8WJ24ao5^]\-c-lOg$>
%Cl\*/[iTS1&L6-RmcL,$o[`%NX2jbHa5J1sh!m\nh#h:q396)155.:f*H,gZCR!-`jg.GPXAM13*C">(cPkoO7es,_52@5RUPr15
%ko\OWq=n;P8"n!<XbblX"P61i:+eJ)4;F:-CiKigBJ9;B6E7o#\KBi&.)Bp)klQe,[df0[k'goc=&+3f+^S_=V(,aH?,*8X4d&<(
%h,WsHCp#eu?,(!8IP;[(5+fXHP>C*pai1R*lj"*N=.R_md^Rf[ccB/;PTVu4M^[`3]\)f5Q74cgr;#rJa#!IFj1&#R*qW\9HmY)S
%`'toMZ8,:56?/)$=lYh-es)?0J%-nkTAk<gYYmU3R<UAf=nr<(>Y'(<Mf035^PoglZTj8%#Mc"j1[73\4o7<im.Yt_hYREh`5Tn5
%7,#s6a<olC')"IDO;13O.q)b;`>uiu8JZCUMi2<-#jrH_.h2uD,CC44lRJi+8=+U_$KtNFYNFbC,*7_EeM3]=@Y(O7!`V[CV.bO-
%K"%/`/](9lBt%ZLfb@)_Yrl(1(^pOZMrh'UcKY]Y//);G=XB%Y<R"B@i:LVlVeU\G2E/$H?>@e[4j!=Z0fN,(;gX76YRFOmW6SPG
%bqNSFC%^Y"a,T5_5(7TWj=n43'^UY980cMaF'5tB]lQ$@UZT/5`s*?oGT8@Vp*4dooQ,*2EM$gN*o[m(\+p7NR]1XWa;s`VIGFAg
%Nph>V-HN#lEs.u4ko1o.B^f7o9UQ2IRd>6/lLn]@8+fYfLe6)@#CW<+d_k=7cH_Q'VON\RQq\gmWKU(E.qp&Jl)?_f]07t(\u4hh
%OW^TJeX@]G=_85557Lm%fC31i3LV<920<_Eo4n^joe<ou!HEd\2!j&9g^%:L$SV`"-tin=P"UN1K@IVta@A<oIBbcnhrC)fe#oT2
%r'Lu-M)O_rpcU">BB=@)V]%7K*.:!837^X6),9u-_u);@Q(..q2!:r+h9_p;4FVA\(QNb/Okt(g\RU*X;(`j]r/a"sBm\%NhL3Hc
%+)og.*.Q^elif2gVhUP@\*t#OrXTrmag5Mo/N;01s.88#ZMa\Z]:ZY4U)iC_reKS.YM`<G8e4^56.\P=a_RLJaRm4M/?Q.>k5?6t
%,kg"/<]UJN3i%uFUpPi>mQa@<[oXtl$RB!ZObt1Bd*Vt7aW9h:7OqS_+#n?H!6kbbTSEP*pLG,O[QW]3B.^8MpaDI=\q;)JjNE>6
%nXeWckjc-0a"nk8+Nn`;af9,o(9rK&e2C=.o*Bbc>/YMHZ4[Id86U_#)C2FM\i.6cQnG)_8%nW;.Z[]W\lKib8'THA7sCtnDMD3'
%hUES=b+i9ieFf",i!P$:&-^JX=c67]9U0a[]gVP+5d`@i8'@gZH(!sX7oi!Y@/7p1l@TgNmk#WaR=<WElG>q4eT=u.*=Y[Q/@bBX
%W]Sa\V??MTY#I=uei]2)C15BHUWFk::pV&*FHl%2B1G!Emek-H_hH"cHan8>eCY9pW7g'R4FZq,oB\HMqiEm'i2lZ5rg*#_d53B`
%(2\\EiG7Sf<gfbORKm:B\B$^3lf7%>4n\uc&KHNpSHOm:-E27ZQtha%$Hk2j6<*a_KfDq:*Ec+;cGDH>-l_R*_HP++HHKbs8B_1@
%hK3JP19,-kC?;(dkDn&7LCULkNKX,Jh4((C0crb0^M(O'RS5l]n4ZmB!$$VB?k<M6@nhccLPdC%QrE3LOI2?jH>Et:[OHKkZ6\.Y
%k=&(2MP)Sg9\h;&nlB`&p;k;FOJ<V<C$OZ(*2e!$ElWBqo@DrHI`NPu[!ga"q2Xob]MBr8Ym4Eilb\NVYq:R:K$pK-?NA"@.(2>p
%E31\)&8h3h4%qrDR*O_tddgHL62>k">,@d;ROc7(Z!-WNQ"H!g$JK#LBB9hK;$@4V7)P%JMJZM8[_SURF);:9g/MC`VhHOV=7/&7
%=kkId)C6-$QW;8EUU>C,PoU)*[iuU`CY[<?Jp^'>gDOH<l(J-Y1n:k$]Cj<X!Z<u-SN:@W4NXBB1@(F<pQ;sN1Q*1VD^QekOTO[6
%<]):4]TKkB@_No56Xg3h,ohLG>K%e?GONIB40n>]5(!rpdtuHPDu<c[S_uYh+`IuG(;=E,q%"m'g/:K3';S^tl-2LsEY4YM5P=no
%dI:+',Bl7+`m9Zkk9tP7NH$Rp]O[bo2:CB!S=B%3bVVa*(-O5HEACJZBIN*$%'jc6%AQUWeL71q7V8(c%5V\ceL[1aZ=$':DAZht
%L<5Z='C:%4?H'u=P*oHf??MIs1^p=(VBn*I#0_Q_nar:E:?umplCg(5S^+!i?ld.-<\^iji9hc#49b+Q>+(k:;C3$V*b7#q,BEq=
%/1.A`b8Qtq(7%nYR,^RQK<SQ:/tZl80aEHJDN#W+WF>ARQor<c.DJ5n:&J>s0d+Pq[B;q2XN>`&@;2fX7=H38QF#trDdmf#9D)CK
%?%D@JV:Ea`(P\]35"Wpp*;<*ao*=.1j&aiZin+0)r-CanHPEh_+It]+$E_#O-BV#u)[g=#fBFQtd3hna-<)$"W^DGP'5HRV[+UY*
%WO>R(1d%-ZGqc;VEpg2ST4R[n[.o(C8@fUXanJncMjXRIPFrpC_MDu:8P4h?7nQH.CJ%(!(PsoLLXDsO1"cb3N2_!=BikYs7SrtL
%+1V<OA`mVcbaL6plgf%07HapC@2oAQ<bk=q\D06%/_2MZmIAc#%[h_@EHo[s?ri,2m)P/HoSt0`W0j3Z.Y#Wd<(WlEVplb)o>m@s
%bB2H$a"=8b;fC:jHVu=;aoMq@BN@eQTqWp"h+8Z6D3g+60#7?,]%-/55dEeG^nOsBB"MU%,W`8=Nhf1ppk(=6BnW2O&Aa<'(*Z3M
%A4>)!9edr-ftb#s0Sf^_dMj5d`.l74SOa.8h.Q=AaGPB6T?h`ZpO1)sP(s.>ggIic@fc"S<-1_`JBWfOV>+Rh-'>Gd'\sf8[6Q)i
%Behb\;M2N<R1M&O6!.#U0Q9ap3b,*54jqJFV\p*DM/6S]T8P^l>q?r^5\HWLYSc!ek'/jqRT&L&?C5O$[tE=dHun<%bcGl0H0>*5
%T*qEU2kM+5&>7)fH>)E9]2&g\H@;R]-cS4)s"CFl\pf<hf\j%O^A?d\^4RtqGE7em!uWpIX,k$1(b39nTlA=dIdAFEoT#-586)`A
%ZJ#nJDCVfies;&(HUaA,F#CJ^Il.'r)1VS*VF;Ch@gsT*3U3B<iT>#$F\K@/SFkSu%9_RjZB63RNjVu_s/^*I)Fki=l%_sT<LQts
%A[\^AI/#B9F8j@.E+'E7f`ZWHK1&r4oksQ(LSiXp]3]Nh'C<m&6Fq9+7kT"ul_Rsqh<]A6[0HH_*e$5E"J+\p]8j@2*o0!I_*U?F
%^`D%"&:;*r\+#)7]r`gW]I(-_l<G!A0<e;b\bj<uf@d+nPa4D@W/MC.jbkQ$9?^i+`1s$ng.MC52k5+"7;`EF\&c?FrN(t+3<AN]
%e'EatrU$,*G!?Vsc:M]cHD![5EC34-VYmI71ai8DHSX>Yiif6Y+r%J_U<SO*Erq`gmcs*YN4=%+#eoO0_)RergbW"!9+=X/WPR?]
%i$ffdLF!,=/M6a8@dq&;_0;&omnEsDMVSLX(QsA7o&(P/r7SU8LWSN3"p`J,Jp0S51UH&rJDV:#]+Dci-gWaHEt6YR7kEhqfbTrX
%agMUjkM.mu^7hZ\4_Ho=B1s5h^YEf2"3eeg\6oaaS0&[p7C:'S!ubE*hF7P@G4TAT4hU1F?3BV%'<Z`X0mKrU5Th.l(af+d&)?\+
%<2^O*LD=A@qQLc%W;c)sh+#_=#A5(M:`DfI`Ii(U9tr::0YL5@mYsr<Cf<[h&f8<P](dn'EIYkf$(,L>Dm?+6.J\"JH9%g-p:E%F
%m"Sp/4`o3b+fkSV8G&IT<'Kd]MEs2+,;O#?MHC7oLNcsEfW=SbQ^D`U&oG[OM\TS@ILiLK&u3@L-7e666H?@m!uBZ7F9^m]CW+M6
%\j#?SO%$mu^BfEao3$b"C*o14CN"+>NB'R&c'9YsY+n$87aDh6Q8CWB#HaI4fLBA!`h(c+8[/P_JW39]?LX=@UgRB6EAP.=p'.#`
%?5%%jh,!(FkP(S:]B9<e.E=bF5UKj$!J"_F9Q-Ct&#=[sZW#>N1j(:_jVdgAb\s(0m]-XtLU6lU481u>MR+]&Dn/-6?<Z>N>se)&
%YE2!0-$nYo*t]IqFmsl@.AaX4i+)2LF3qs24KFg4'.&T%`2I_`gM1IgBhY<K1k2c>qP.s"Yqn.?:AP6l0oseBZlHMpT$'$G=5O_r
%3_iPE:3TspE3#Cmh4.`0aSQCbDB>6,3"3T?oZb=?iQV5cVI%S"m^^<gAfMOA$:^_pAg6-S6d?GpQmjt?k&Ibej3o>YT\0fo8bXH9
%TU?9[DR*6PaEguqZ++7G7>:p</EkI^Cmj@paQim\OspHk<2MOj+`W^@7J+qmF:pJfH:s:9gMl,dTtH`(5J;(jOX<tI@G2i]'[pR&
%R5FH20OudDfbB-6HWSJ(=7n>1?2u0ZrqOkhqcHKSgp#/V]r]d_NF%@e9.7$;,hpp#3q:PnhH!m-(>Ig51j6DjkcD(/&3a3YD;FGk
%%1VhBE._9r/mp3M$b4=p<LGS,'i?-Go(Z)&;[/O#a5-m">n7A*As>KW9?#4%P9SFNc'phQ22bq56ZJDXEF8DB2Hq%Z0P>@c]gmCl
%Ok2tgQo@OGpS`!j-3mN<\91C3c\:2ijd7M8jc5*(?IAa'agiBl05&I#4EuWoY@WB1S/&WP?sC=+1l_ls*VRHd?nK'Z>"7QM*R@V%
%[Rgp`Pm,(J9ralmgSMep]Bsr@AtV'mls^)!<ktb[2/I<+P7p+t1u)USV<RB`b.U<"<R7hZi;;$2'QmImn]?/5bMBTc_;6]CbL5[@
%=:KP!Hp6V3o/J5T'6jqZ1j,BJ*^fOZg^l&_SB!^%0*[XKZet9bGNk\p::-1iW4H`U[pQ\/,Ddh#go58-DVY@ln)1@Q%Gf&(q=)#[
%H\bE)Q"dm6ZsN0EE%huG#IE4(aK52h"85$IJ#p&E0,f0T[bgA!)2WC3:bH6`4D[-WeR.%W-Z:=;.?nD\CM:jQ[>geZ\"9&-Fk7Q+
%.0r0oAHi0GMT%$EgBj/BQ5"o)i64jE]ND;Ze[/^IIWR:Yd.[f-hiska`ZI+NJo14YKCsI)(c^EFDN.lWD"aj?Zset]SEkn>IJ\Y'
%3T%<bR5_qG)qqB_eatG+XFd$EGRl'98XE5a(7a'-SS#K,a&YBYj^^,%91bR7qJ/u:D>i`RH1c#SWFMXko29R"Als8SE\dr]Naogb
%2[,?+0[^k1RR9Xj7?bj"Q))=1'A[3sXQIj?oA"?BMu`OupM=tMN)sHDEGjWh@(Y1KZjd\beMSq$Q*"2h[M#uo74T,Q\k.]q^X4?C
%Q**]u\kEqYHKV8@XJ+M*edjo7lRhn#/=>-LF8@j"pDg4QH\cTLYujL$d,\;$PDtT_b\WFPUQboHhO#n[`\d(P@(A#8FY)*,-l`3R
%Zi%$6r65H3Cp^A*E+o+t4h(^u0tZUVT]_ULI0A]*?r%]t?dH=a*kK`l^NbD=Vi[V4cB\@SIbG"L:T\]MS*AZd<ha>nK*<XsD`dqc
%q2+Or/H_`4eFnk(e0eKYgI9r<](J^3i2Y8[S^fBQ/Hkotn[?D@[3U8)2gKISo-NLe!n3C:D`(l@Iu?,YmL3%*8ZX[?SWm'1X&1/n
%bD@,\P(<dWFlH"*\Lo_A!B27aJ;n$MX43[dF-X\bhE"<M.K%$?a/6jT.m1"*F_A#&:.KA,+i>m>GVA,,:]:L/?I!n(1*usqGJ0Ls
%?Yle(O50DKk/@o!p^),WSG0Z1%K=be??0V<KH6T#gsRd^%tkf=!JYD*2I6CfPDP?cKei_!W<o1f)H7JGkIjS.hEr>,%GYCcPK<p&
%6"Ju=8d*VQhH(mbR7u6=c=8hpi]N7m8Bt^*O!`eXF[YEg4cehaWgd-TO6[Wcd@tLsh0FD2?#Jg;T#Z'sAK,9e:mOuWFr9!IIC([!
%inP?9,q"AI*IZH#EF24b*rC6Tk?W&inQ11//d&Eog_Wq]-"3)C7n?Ng6"JuZOb['`<ghU'K#UhRTn=OV_!P^V'"RaP>?jjVAR+<r
%I,@ToNk&`#lBajD&<^IHGQ_MQaEtb4J%t;5g8Vhl=d7qe[pFR>*SC7llS]F.'dLuYO!(M-5Xd6Ln?4q!>+o_ND-<GXF7)D>mOoE:
%>GE`EDJ$>Jl.Q.%pZ%f?;omLM]q#3.YCdN>:pCpRLHAr#W$^8i2fn\1@58X3;m@8:hmN-R^=i@+2\:E#q.>)g>oNT9(!@H.k2b4e
%h2\"%qL30SH69#7`$_mlC`OgSgdbLIB,9D$DX6&Zn$g$iqMlB0`CLZTYjS\\krV1@X'M4GN=1+YgNT.EDYnm\1U`E,^Z4?E<fcFF
%8%7qI^ZkGt?*C]KX6G";,/_3jZl3]p`>s(>&10f%5BNi%[&<,QMh0uN\ICEhWC=kf>g6RNji?YlE`&*epX!G6HoJs-?'B+=3dNhY
%@"/(>VVNge=[Ar;j>=bK>:NAZ20C%:Xu*snQLa,sg05b8@OS=_ZlVqG_2<I(ftH4HS'V;E&Pj&sZ0p+)JWBIiNr'-'4EVcU!ZkD=
%c?TrfGrP)8+6tf'ECCT<?>q^.kB7BG9)rO16-f3)4C@2FI366r(N5IX#Z,\GIKm1:^?.kbMRWX`EaO`GRG!lV?-7)X1Yg;sg`JbL
%MNqdMnc??TT)k'g6gm(RgT*_Z1YubXH`i6ulf(]D2L?%ihFcHPB78+bl]&PO:t#W3]W`pa#Kk!H<3Sr0Ca+D97')KX<nU`0XR?Cr
%diF:466-jm*k!p:>pA,W'CXd:pOZY+9\>rIpBEgIoAIXr:`D+"iCpI<ke!OL9+oZsS';UKI:n%FgXl;MhU)97!Qt:gg`>Ua>GGV:
%.@7/Yb8lXV)Xh/!mc)NiQQXHrLu3"Xglg^DeG+e"=*@bph:XWhE"]dNT"'\-FtddW#!$\LdR4H,)5qB,GP$V(pM%F-aGfh]'g:`$
%0UlPU.*n87#Z-9%!9IjDnf7_lB:8NG';&jqZV8#+-N7i_b("j6r:2I?`GMp"qra'EM;P(X_?XfR%)-C!@N=Hf+*q?KGs$-SB;]-0
%p_u]]Lc_P4YV?H#YW(&26#@\r&pMgt53R#[PC&op0BDAGaQ4N7jL^h*+*)XVE_LXFm`BTS2l`l(,pr79??AlQn;"V%;P2lbmlBA+
%k9$>0\c)E]rqVbUJ&4n6r;ADUp)*u0N.HDs^cl79T/!Rr(t`I0ln\k>fsgp=GC5^5cSG#n-9bpIT*b[aQEPf:lK&hcT=oXDm,b]@
%qq:>9cbFc'kh"_^G<p`Q`KN6!DI:-m07Nr=[nm"ml4k<6rl:T$l)KQsZ]e.uMKt&jR+bORH.do<Y&XY@.c0r(s7cCTj8V@-?`ZA0
%p\V_hhu>q:oDb--5>*s%I^T(9s0_4-H-E=<b:Q$VZhg5:0@5+0J\,9,R`CorEc[FkR^Y5$M?!Lkp$4QWB2@DIHhHsOlbDe8Y1o0<
%_uA2ekI[?ks2$h\ldIf=hRn15p&<(^5=me_rOZ^gDnl;=mF+!Yh>KL>pi#rRq"Xm[KAP^g?iHP/,C+#6K!?jY47%[hUDSD[6s3>I
%lIY*oh`oM8CqDEVH52a/G:nQLP\[[5$KVVZYgNrqa60!e\>oe0ZHfp0O[Ei%="Z<m`JJ$<H`C."dS[!L3<g(,RAP#f,tX#".JDXO
%[!IGKVO`Y@WjIk2#@*-u\&b]5p+d.nOqZ$(9P#k/nOc!_92!"!+ZF*A=5njW]i=X?Pu$uE/RF9on2o#/=)j@0[r<)$ZJGJXVkpGE
%l.,]3&FX.bL)Rq3J`EYSrZ,.B[9WqIj$2p4V<Zj=(<jV7Roe!e]:.hC+ta7)i7cjaS69=9c<hmF8\5nEZ:?!+l*;-])W8G)+1A4$
%\crVXk1mSQin"[BU5!WUI.SVtQJ4J;M_rLja+Z2)jUM'/nsh&a/FT!HR_4cqNlZ<1g24")YI'e4FA:1q07JMC-h"Ima:ZR>iuf?b
%!i0<Q7XOAEKT]X:4urKi`em8O_!m:OhGI;cm:\DQ6emjc@CTf7?*A@TN:>@A?3Hn*L_?!h0<aQ?[f^q:/SK>&K007llnLGq-),Ea
%*/,oQe_1Z7\27NK#&i4sQc_iN&5osX(nd]VG5IYTm$BaF3LM4-0(P%7:th2u?,mcTJU^HAi5,P@\*KhiqDtiNMC_>HJ4_Q-:-R$N
%]uih\ld:B2K1@h&B@tX;Q>rjrg52(>'?-TQ?;IG87.qF"rc[:&?&?mn+miUk.I6R>7(<V8>:-H,/NMTSk(J-0JqhoIK<4/4bG,JW
%7U(Lo$W3dka2@h?Dg3,]W->mm9d5jGQ&KL"S6ohn^WN(f&6a@W<r#gb?jZ;GI^cARDktQf=uS)ILqh."P53^/dW&LL#$BPDb1/-Y
%!<B&/8PoL:'e?,&P^J?)Q(i[XXh\A@fjBU3JO.5<Eb.lFT+G1(/<)6U+e/.E/lt=i',_3`.K_.)aOMIqa>rL-G.J>AJ4Mb!,#_!2
%ktH@[-bZ-?/FWss)G42OQ9em!YG/4H.p5I?Pn*Q)V=N>o"6<E%Lufcm;%br]r,cW.+>(ddNtnE9SLK1C$<1g_dC*$,7J&F6<tVDD
%F,Sc%it_5SV)_&Dc*>CZd3?b'<OKFAD%W>3k;4j<d7\nol/b@MJ2f.UMU&5<EM,j$8X.!S)W7r89PAhL6OEZG;%m:4,01DN5]4B'
%.OnZ;$lj23U3q``RrT^-G`dHALS^;">@\I`>[g<k?eM9[PsX"EXI+kd'F2$dERQS)94^-!0N3UgI]6QqY:1Z?"_;+uf*Gf)lqSF-
%ge78D=Kp.MAL6\EB%%Ap89np3+[\*+a`K%-"NFtN##NV%M,=Z7".Ubi(j'K/FMo$UPRQMH&C&d5%a>`?-PKa\]BCI@*\&b`2gZs=
%.(%(iFfC\q&UR]QO[Yu%NWEo``G9"M@W^E<T_7g<N8A0Ub@&qP9-[bJH9cd\XClfJ`]>NCrj6#^;D*/Enr-KB#Vh9LjqNbA_Nidq
%>+j;4$/1Y"`+iHV0&5FS6"GR!'oNQ*<%CV"#]lUu=JdJH"`r*h?l-*%jmsXN@J"h#@7jP,1^?P-,X[6!n$,<9;l"tO^*IuiopeP]
%7`gRs&',A"G="\A8V8QuM^YjXEAH4dY'/#DB.o+&i2&a9V*T._PQaO8(PT*CTm'p06",)l7o`k:/JZ)[0,g\kI$_L"4KD$]<nD5N
%TSI*;EMC*n`bZ9-QA9$cJI9WTFn2cV(;DD+QpaU]p>n[5,(A5USLG)m]U9U,:r3S]QM=ED(0AnM^*[de>BPXq(#lMM3RH?cdOeOn
%23DKrHfr)FCL#;a,qR;\m8Lnt>#LJ90]a!'gE7oMG09(oI\LpL`\:e4ik#cg'K;9ZZOD]3ciinD(`a4C`[aKuBWoVHE3BBH=ZbEh
%0J9Jtqri-mQ5J!qnj8HoI&D`/j>k5cWcTO<c$Ai9c&74E_\`Z`CZY.UX2FoB\p.["n]MI!:rtCHd&[ltQD;d[!](fc:FqE1.KAip
%ZCJtEF%p1L(/_[VdnNlnN6h@*T3/,W7N$R;)NI.<_O'^uA6`%'[/3`MB^ohml\ERpSeLm*Ufj"H6E@_Tf.PC2+d]aWQ<Y)p$I)ng
%12'gm#7!V$L/[KRZ8@#cO1>XT4PHP?!s0SQ545B@$OsB;7dDo_kY4IrQYJFW/D5hJ<t;WnQOl<W*(LDn9k7FeI8T:(o.f)W:egR^
%`$-\Bb_B/!;_a%q^)S)*0WH:UALfXHb2gQV"`%)b.4fKf/YZ)lkD5KN[HhQe7C!n''c#qIZrF-'OB6j9pe1/`Bq`4(*a3]/7B_V\
%-1arf=O!9#e/\CdpMiK@*@`&#(qcXob:M1K8sirE8Z<gZ3O_[WP"\gH\X]"-UUqbAf%<l!?G3/_>8pOf'EcR;HteM;<480%91rB7
%GBm^mr1_HTafLCSRrBlT?qGY_IkOCVKBQUQ%(6p'HjhmV*1l;?ZYq3h!.q*1oWtTBrDI5HW/g&8.=TARD%^Oodg6HeAoctt:dkXj
%\$#LffrVWU82mq)QK0Ge=7:)b6dO^qQB^c)=EO+U=g>&^hEc`\eAclL2Q[YgSNK[^\PVl?Q`;XR@I]6EXI\ZtT(*;M^+U9Upif\F
%lH_IK%"CPoTA"uq4u9.8Ol;\FbljV-qZaLt?*Bk:rl]`b`D:r;SQk4'nYa!Kq!u\qB.q$UrFE[XIer\l(VbCkjp=dH#;-c\.j2ci
%#*O)"XG]XN"phJWK1MpH9B,k^L'bk$N(59l)40Ea0$S7cH/_DPj//Q5T\*Z5(W`<ZA>)#6!VNgpEpQt()BErQ4<1B9MKKF&L.i"1
%nJcVMfSb=+6&$EMZn!ZS_!5!GZ/@W"eZaXZg_Ob[IcmWtdf8l6TCd"?:l-]FY0+BAPQabsdc@NHf;`s0_iZVY<I.1V/,1&:qV%Ps
%+WN$9==ECplJ0e;<;O*_X;hP8^FuIigf;CO+td;YiXcQfADpE"!OmZjMd4'aKCTjo9k5(XNqc6OcU`[J^p#!iS5^nF&+8.>]>B-9
%p<]@4f:Y4D`/`"Bk7)='>8qZ9Q0B%YEoT9M5gir+Y9Me72K#hP&?Daf%fD9;FUmm";PJI'WS%8"/-$8P$U=t^r'NB[M\78/JYu4\
%"r16k"Ro;O(%;;[T9`P/:LC<JpGRJfHih![[]#UpT@t7LjO_RjA8;CX-%/iMAsWp2(2$U3,!(!@:l9L<bj>"m^#Lof>#Kbp"tgqt
%CG1nek*'ohX"Z)#Vk@A4[a<kM-M(_K*=IPBHOLuM,kH&h3+EDP$Z#rLQ6$NLb<tY$PpWbBV:X[02h6uDf''7^IHVm'.4l_r1:!qa
%,C1T=3FK*WMan#F7?!n\(*G2B87cm(1ctKt49buWEKgVjJO'eui_.DI01Gr9/A-)tkG+D"GVr:^5O*%KQqW^H_%tHOO0\ZpCMQZ3
%*$C2L4=@P[Wk9mU8WTr8R!k\ja'sW>U"WhS>6GX`BTYk9:G$O%`I@`iY;u^U>'.*pf4$,Ud]!534_CQBno.&\PX+H4%VAfS^K[/'
%pCk9Y_Z^Z/`/D;Zl_V687M8l;/Mna>dKHt1B8BlZEMCDe@+1bP;^2(hmgehDV9.YIBjMsCbu%_WN2-Pd13$o(*Pa#lSG[8tX8oUP
%RLN;MS\T+Z(!h$?H<n`$Ys[1oSeLt1;+\!CW3IoA6upZ&A2(X/"fkK91@Lp1#WKrjGdo3.lK,6d=t0gH#NUhU;.2XUc^GHp6lF(I
%Q<=IqM1F12@+GlY'lVMrbK/-`G+UZMn9Ni-f@FL$`JrFTE[JMIVA1D7=ba]\,E(mGA5)6FmOn>Ei'&'8l*82n%nK?!QHGL-Os*\3
%=GhC@ETo1^)5%$e;bTJs)FVEB9\.0H$Ha.-03Z_(U,1$3K0STLhcO/F+:c?sKN2WDI&qEj'P0_:$8"*iAB)KUD%q63Uj?aMl&[;6
%ifqVs#1s:O;4\o=\;\"t-N^u+>Hsq"6X^7V.cs]O_#Lc1Hr:J*]>8g5V#\Cf9Jm4YTDD8G!lcsBd0SdAqd&26RI_[R;S??@<S@dL
%'f]W%NM."V]NrSNLmHV:4)'_nR%WWHcN78W,";,P.sb9'C/H?R:/9X<9MeW+1d/Z!);uk?(,7E+8dIDs.lkBt(lXOj-q`?HD)'O#
%4JH3u5/t:%RdKL*2pVTk]\n.a!rN.FS>]We]2nu.B!`KDG+lCMn8L>JZUOo0O%rqk`#L:Dnb>qfLm)RP9pDIOSd5g6/Xa86c4J32
%`'n\`^#$tP&P&;P\&bZQVm7:Tkq=mS_M&uFHo4kJ_6,/e.k;k:VCXq9&Yic&V\3BcU0,)hV/B7?*JY/e0Q$']<8+i/Y2]*TCTLd:
%>F*!!YbEr?;.sI4rS!EJAVeT=1LF@=UH'M^W8F`OOr5FH)==,R>nBq0Y!3V=LHq$H9@rr^r<m.."IV=EWUOACbL=ibQsSL*O;9m@
%0u8aW@H_;-5Xj\dGeJtp+Y?ZQY/&f2dNAXe\1-"10^M,o9oAq8`T.b29h#r[K;cp+*MK@5Es,BXYNNNIQ]V;%hgkbQ9GH-a>dtH<
%#/IOLW6VbCiAq$s"mQVZ2Z\T.eV<`9L5))=nfBKMj>irn]C]SbWsFM)R`VD,EMb2%7Y:rOM#\j5>i*XL%':FhJguA<MRakt('qc,
%@Zb)]6`S>(d&5-'Y@&I/-1\s>W/(VP:^F\3F=suAH]*2dCge^m(e7""O%TM7KF[8pY,?N!B4(`^"u?A4-X3M^7HHUuqn0:Y5QOg1
%M<2N<1b:'>M$W,C-o>?4S".cUM=R&UE#BkraUsD\(/('2RLH2_C=Gn3^:]79(Cf>[)WPQVQC;IY;H/).lO^_D_C/C"c8dip>9P5=
%`@M!?@)r[FJ1D(^!fITY)IR(G/TOmXkq,LL$5^lf6j,tk/K2Rk):q1OaOCe^G"(JZ,7'5/jta-`ao(u=^dJDSYo&G@AQU'F.@QW6
%SH.NFSHbIV6IC^L`SlERPN]/@91:gm&b9V%_I+>@`$3AKqgt7H;1>oU(ZZaL%`/5t7W\Vq#eh/c99]7\W^(EC0VZNB_-3/E2`S$:
%Mh7$C&PX\J7sl2/TJVH\-l0r<'ZlZTQ>u2E1aGe[*)[*]i0CV[j-I_BW)No[0NJKQWk>m`>$R']-,[\h[$RA<fUH>l0sD+-,2NZP
%7iM;3h\8Nhj#utU+r-O08r^qXYgWKHg*'g-4W#l)OGWgC\;G9Uc6m=_!'CLVPNZ]qUj=RW&.:r^YXQeoka2AF#n[c:FbeiN%6LBt
%AZ6"c\rmd_;TOK&NCKc'A6Wt[pEf$CBM@V'GjQCmA,H>SlZ3'a?$M,pJCV(%LQLHgBV6>W+f>0qDI/5u(T7YYgCmFVLp(87NttS#
%ii0?Y;O\i?a-El`TEEjKCe`J\Oc!V7,)efdYQt+!)/t@"`#-_[HW7T-UBN<02.1b["t=TGn'>ALVU9XL45]o!]Cg"pdKeQE$R<VZ
%"=GuSBj#O"Ysu*\gPjgG@Rd\WKq*9pMCBj)C`K`o&7Lh6IF1cY#d"QkaMBui3nN.+fKUR,C=.oq,SQrB-5JR.oKcMl0#DS"*.?EE
%$WP+g@4(J&d@?B\1W"ADQ293BJOWa@Pp'WA;II/'Lrgtq`,tY"^g'%QM'[rsP8H$nb)[Bu(h0q:,"+t]\0/A;^IJ-p+oV[5NNR0H
%I#jCaP[n(l9WqjV#;;N_FV(<*k^-e%U_]io%_O;H"6=/a(hBk/K4CbmOs+P/dmDe?5"YTbJU7^lTh2`19P-a2KKR%*QNfq<jZBte
%g3(2?M_7RVU%CIl)5?M:l4E.+(e:VDS+8l)2))1c?5:^8rQI5A/6;NX_[h<(8&#Y)RAi6O*AVI:=g,BorRcNX\oqrl8d#A45VDFb
%KYS.?NK>(>M.+c^oG74Y`EU>R7O0VgEhaDiV&>1SJp7ae0/B!IX=n$'d/Jq('kh%6NGD1_s,-01WiM-3(L>LJ4],XUl'_]Q!L?8A
%(UuoYBDAj=+:f!VW22R@Hn(HcLKeC0B.[80&V8Q;\eV\.:*C!1C?T43\/E7Sp.:JL:$>ZiQ[kFR`?aCuRFi_+$6m8.%>/m\RY1ep
%Iafpf`$&r!/HWgH9#R)Kmgcc\DH4l!\sYng?N_F=N#:N9KgmTJ4jT3i^ftQ69ZfNFK'!4@1(n0:k)DLNnRe.*R^U8$_9A.-fTBf1
%eDjgs6oR3AS=#'t;]V"NK(i%K*!^2?.6cT)Sl3s(Pb^AS-M9D3(D,mgoNk=*HUgpd$i;oOgbFlpXTI0uk"j'ON86OK%=tZLmM)2=
%Lkr%-S3Z*dSi3i&,gdS^+I<W^p"Bg[N3u;gYo%5E*.VWX"Hq7?H.kP)0k52I0H0^"DulC+_Y@Dm>TYgHL;CKQ>Tr<lboG,)Zjg@R
%>0s4:L\HU#opV3j.^O<KMcOS'"P'gURP!4PEB[M)C>_]f:q"lIUnXPhfJu?e?rAYWBQ-aPapo^4"`_o3]YQ#>Ca*hMfH:9\"[6'f
%-S]^^(LF$%5%SQ!QdfFIZL"si[=Q+(*"LR)["cf`arHqQWB$)t"'&&]d=3?IE1eY40FijWMN>gYRUHb>(^'P0%K?NhTS3IjMg:$0
%<jnp^WM.^G!?b@eBc1o<B@>ne"LDK5_8e277H!VAI3dH#fhmgoHqP4`IbOHcbt.#NO<M"=n<!L>=Kpc"UBNA/1h8S)2HE(On^*$`
%'!hte)`-fARHchl7'A#t,8tFF7)qm,6#13TiTiKc!%fs#B.-ZELd<4rWi6ID+#($T=9TC"%9QlHir@C'%U!<Bd$]>TbRbNu=qou7
%lCc6b=?Ck_&SoM*n1jL'&[+l!%Z!;H8@[O/i[7n]H;/ir/eK85R^GRp6PP2e8js1Ee&8h[_0*QX>;&tJ83Fb@N\?<9(`>ktBmAm<
%Wt<QL9S\-GjT%t6Vg@',;.setrEd<?$m2]7H!@-g/Xf1^GGY1o(9Y)Uj_'_mRUa,L1b;d)F)iDQ0JtUo:O(T1"n0ClKe>cN7#$s2
%3%m3%EA!'e/;j=)]ie<QI[E'Pj01iVGs4RXF1*pcYPKJ+%=T_O!ZcrLd]?sYqQ(4(\WMN!iJ'cL&u7d]:'lZh6=G<W<AI_`/>8o"
%Ugd2bl?38pA6'HWW1(&*84tfY5bT7r)Tc$1RhV.]a;^4,9aI[Q;^EqrSrg^DZp<]Jpbp>aUi[kVH:\gQ+Fbeq_I6?,*/LT:jAW$g
%3o4WJ-9@r/F0]0u]-Zd"C.;]m"E)E84+,Gn!5/Z*+Q!L+!t_h37?)sH?sQ"j[p,4l+c?E^2+.L[]4%+XS0qJTfqOu=bQkST^^gE>
%L`KY+ck^#A7';)!C3h7[rOsd4K]Lei"m@nV!6KGCV9CV,kc9`ZBt>ur6=>>JpGDV3`1V.Hh*M:eQ)G&sYStc*N2HLa.]1i@?=7G;
%@e)+:6H5O+b`XBY,mT-);'_9c<4BYu`L>]h,$Emh__bm0)KQ&OX^Z"1/9*q5h&TpVeA%SP\tlA9F?JX"CSht-aH/p/>G`W>1%(Da
%o7F6_'64`u`Q)ah-k\%l2t^/eEug[%%+#0kL))'47:KV$0@^iV*L;^LEkT@/JUC*.<I("O1<;/mI.'!35l/S.7RK2072#q/Z9_kL
%PWkdnTA:i9,LdrS2"<Ko"OmRaT!SpE)b'fJ"Wt.F__-WhYc(9q1ETEC':m^B,[erg&=C2Ba6rJ'C@a^P+TS,GONVC[,%X!T8FUB6
%Y5)Q6a`"QRTH?SNmM$A\Re.i-@U19[Yp'>EO`!Ff&nXdAFI;$7d]Q(s3HZ9F^!3M#Yu#!U.KMdTAn%Eo#jBbgg65s_*BG[1i!+L[
%Sc^eAADr4%MUXdG1^F/G"4R*@Z<goNKF=7-_'9Q@_-\i)&qB?C^C0SQkj]t]pBHeR]en5moH":sMr'fs\RKh;Lm`$c-;CD`W!7cm
%e<-Zj39D"9:5+cb[.g;qURM$M8YokV?mr'mb)2(Sh=B!#8,@GSSsEDnFNkG"!\D8N3M9[`i/!(fo>Q;-Ht!gIdC3B<]3kF!48!GE
%dKeRp//r;cXs/*9:+qfnMT9a(>R:lU!fC%:-4X&=p_Nlb)k$oY:h-SA3b1SeTm:>VGpF"INXLi(OhcgThL^=(jU?D]\W#/io%Du!
%H7Y_FTJ>fU"BqJZT!@^\CFeE1>k6-`Y+")4&VD4mN>2YX\7a5nY4U!HF%90V_"kL).KRrHkQ0,,"fi?3WUfhU[Y\YD[Qq876kmt?
%!^i3;!=uOg*[,.\O"u9T%b\KY@+Tb&1aKJ?d3=beq3NF=CroW<VCX?ZXU^UE"9iHH!>!Z'!G>[ZXGG:W>ni`:hFgYGW6gul-Nf8n
%Mp+Q7:JJ_h)G-RbP7"W<Db$IRSVLb5YPRRied]kHVr>hO8-%$-R_9=/@0otKlAdfdXl+YQ<:-NRJ&q`>I'?pVLpWh*<!csr6uDEZ
%-*r.F40qoETX/2T>;6e9_7KiED1PhBfR4bLfHH9#`oEHqZrk1=<?.X7'%(o:JK;]F/-KWPTe]i>[q(h;NR@T9!>)VoQA6/EK*?3M
%Ct[d0pfj*T<-^P."N?U+HP!uKgA!(L"mf\Y1YH7&d-XYIB[Q@42$16P"7m2QYh!5+'2%k_0QQYpO><*-2BYH93ZX5HA_p,,b!@pC
%r?-c`i<pbp`7d=Li>CK;4@$*PnBrQ>>%Yp84dh]Z$d]D:WeZ_'#6qEjA)J7P9;>c$@+6&%&V7^-n4KKYpNR%6M1KsW,rIK[AENV;
%>&GZb$9,o.Kdge\AKfcef#"Xm1mld*b;6LH:PrU)UI79%BL,(a!\m''/a/meg8``qE8[SBUaNIZ%Oka&G!DS7G<rmF^t<2@3e\TV
%h9>!a,;UOq*iLca_;%#W0O<LI.s&'j4mV5uTrEa%HYGjsl3+bRpl^X42/O?t'Wsh`hl*/6(+;@sYo@<1"L"@qkp6uWWBF;hc.Qm=
%k-ZR82um'J0,;`65mt;+Y@PUVf)-`/VO035+^fm5bFbp#!2Vc=b6!7X>_8T6ogI@b1#!/I2,]I3TG1IIIW)XRGiW0g]M)V<KMUGu
%<'N.6#SiEuGsIn@:h3B4l4Ae/#iHjZNmVs]0+4\?5<%$`iQa`UUQLD8SDqIY!)Z\"5i"6\P%f>i"LFVa6e,RZPSc&1(#U\-9,#OD
%3AD@'SX/7Kkg[S];S%s!#QGmke*rsVb)EeB/WU=C,((N1/.uu]9hRn$;G.t/gM8^3Dp/XaWdk+NqUW$.m`2J\(M&m<?pKjZ>F,%D
%Bu/D1_19^[^Sber$W6N$!n7cNMA:$M@UILP?;p3aahqQo_KMWLn"=sJa\qX09(RTGWY-IUq&<Nn;RGdgLb`.\m5cB:N/Yi0P_Yd[
%-')D`Arnq9b3b:XMSoV)+He;l`=R>O21k[2J[+aBMgiYQKm-tN_iOaak[]'pVO]'R3r&Nq@lD5R=Ek20@\e&jb9dMACI(=rN:Wg<
%1(af5,9lYk@EnfPZQ4qXfo0/@j=ISZ2\<o<K#FD)G[Rp]l"FHpWWQ[SL5!<e:\Xq(#4X_@neKTiKigni*Ak-;4on44>XlPgFh-$:
%ZcfnV&3`gg#.2ka7N2D=<")Fc?&m@D"PKtYe'sasL)RQ%^l:A]EIVR^]1%;#!A$$X3C&i^B$%>d,.O;"Ysa\)BoR2*G.a=d^\ABf
%F9GLplMtc6)<3_Ga2,/_f1QF+E*sX6jg)HnU7p*,`],Leb8hZh5'?+Y+DFP%qNn8mR(a\md@`g)78Sb6:qW4=!0'+P[ns,:[Xbl"
%7>r,OpIOR[niG_E.&COVC1N;F(.#Kqdpkh*WSf90;KIASA@]mp5SX[M6H_,4ZDRA8og/:8TK7`kFQGsMi(05jY<^SK+9F>U&ZMNn
%-mX<I@Q[mEf3-dsK#l#?-D:G!S[9%"/]]WRE+`.`JS+R0&4"6;Gp^j'/%),9<*3XtSRu#*`QC\*kfalqk)=_JMG2@u8=VPERXU&u
%=oefk\nrf1Zg:N.$UbMD`aF@1D<8"">0r?dRd#$k#7*",;g*^T@9o4aT7WpKo9?O4Gkd9\7UZ<b?7=aeAZXXbU83@W;BSGGTm2si
%lnn50@u("cjl#C;0JZmM-%qkLej@Cr/O$;2e!(ol_gUKS!jn)'SJS=.X@t4(1oO\"rE^('cZC73.BUu&Uh9c0p67o^_h&JY7eSOq
%]o?VY,,>6c'?`0Y$-iot*FK<66U;K<f32\.83?C\O-sPFXUmKG>4F;0N#*s$kZP+"1bBiF(,dZs"gk42M[;'5DH30ZWf]i0^^:u"
%IC!On4\.M%AKtCRZDJe(XTAAi9O9NlR1S.1aG:U+Y6H#_)P=ohorRr0MNo:cjqj><"O"BjK*]*t'Iej\M);nqaqDk?l*R3%0odo5
%T;k8=WK&qlF9R5/bkX[`OV#?"3\//D)if+1)]1dnC$G2/Z67_TUcs%/=_B\Q:1;)\JM:%\Hf=(%3#gE[m<eI]*9n<I:4TVJiSA:,
%5!sS)']E#pNf85(DKkhJ5CKHD%;C.g]A7h?$S5#eq#9U:hL9\GjN['N?cs1-X32milH-B!?QWU&pQr'jr<qk\rpfZ^+20gdHJADZ
%Vn:jd:]0_a[F9J'iLskSMC',3n6]jET[0!m42Q%4$FRk*GZ0WQ;A"8TP@?dX]F:PDB7M-WJqpm?G+sh=(F0\>Zr3>^RlFoOO:)E?
%:eKuZT#&756&d430'K,9jYC"/km,YmQqC8T;)Ks.YK?eCURm.EMY.[]+``6s;)X>W2tdQuUKP@MY95b-C-aAns"tOQ0eAJ:+TO\E
%ns#lMXn(:%_iXVm2\N7?(6+[8o,;jm=L,-^p")Nnmc$'Ac\"fa78:_PDaR,H)J\Kf<@oY2CK+B)an.8m!$Zifr<mgKF9!?hUB)CZ
%1jRZY"a..+Q'%t%P.C\$.H?AJl6\iI'&u:G$X"P'a/H=P=r[n)@?Np)b33GL]$S&YM^B_R$Nd?<JC2=jI>]d,mNffbdi.6Ta:/=?
%bQp[EX7$',C3#<q=DS6pN7O1["\^=XdFablXO.U]K`GMJ^I";6'OCF[_F/g&?(&N'AE!@p>lj<?J.+t<i.aQg<g8V!o;hP9".Cs`
%=jgEJ\![p>6F%AJmq<B>TEA=ZW0u"=7tl7XH4>g^,fud7$n$c^BV2%hSp;q']!g7*A8eH5DbdO;Z"1d(#lTVpXBm"B"MAV[<f@*T
%6A4l8c]k"iCHlV%29Z&rkUdqEJh^*)lP1R",Y@:fp&4SYP?db.*3E<Fe6H+j$24Eh7YmA:OV=?L=IeSm>Y>%EZ`8XD-pS[$m9'fO
%[G);*6o^,cI85c</c7jAeiP&b9[Q916gAgb/5'O(KWj[8Ed1,4#"'XgS!K_%QG+B/S(83+d>`'7:8VLr7ArH#XRG#?Q_HSXH?hXc
%i@W2'DhcEI[3^o<`3+c3`XE$W.s\=5"@o&%;0kE9<\?'&dN1/Ibc-7+UX_4p<d:-@9oI07`]+\dKqATV:22#np>HPqZ;b+7HHe#J
%/s=f?YW`II)0S/tOPX%=lK9>RkcL\.kQ)Y\)Y+DrLk1%IX#s47L\LsrPscT9ANu7>2TVP%Bl[AX%D&L4oq6O2bIIZf&+j_j)G]ct
%M*[=^Sdm_K>De_]e)<`R->XLA8@;*akd'Jrp0<Lo87gX)C'R]l>>d?\kQ@QS*b6ZQR`It<R0;+iOquBCo5#XW[:g#o<&mRo&X;)[
%'uFWu+IYP'&ITU3f&B(tVA]'lAGl!0$#%Qa`.37eLIIuP9J-\uJ2/`A%ZZM1(&6N@NOEtq_19ab"au/`=aVl+A>HSY7uQ)PIp:`(
%>^;f:e?SL7SM]ob@<R2H$R'[M\.Ef]Tp]R13\;LDF;t'/0M**LG$2qCP])2)I+(dOjqN^u3f,og6r5K!"@-*pm:995%SPm*94g`E
%/9k.^U1'jjJ5nq#R2`9d+_4b?19"]tOq,m]db"E@?&)[6O9N![CUV<eM"h=!EFj,Ycrq6]VWTpR.=u0'!Dl3gkI;,HM=C%_SgaPP
%q/CWthb',&@9VK)]Je[PnEoGka].O7:Icd?-F&i'=&A$4jPe%nN!5^Z1gc]-XJ\)J#9^\sAkQMqZj8<#WE9?.*3-m)N_:S7&kS1(
%16F<q[12gT0DZb"%$BdY'uRhnPo^-1QcmaQXG\p\BLoF==gK';*CuitF"7:u8<gnQ*9sUP"\>1$\V-#B]1WsE@MM9rX"I1UD^1:1
%McqukoO'rb;ZWi!T=6A/#sc[AU8!4i/oad6?d/i[:hSQNL#?N-WZHe$p__ADJLW/s/T.r+8p2CDn]#Cc##GnBNB<0d^afu>+:=#X
%2b.NsJM&X_0gs"cC,h:lJOCt]-*d7+AV!HI]$<X+"do1c#]/>Aa)]\F/QA7+;L?iEMUF,814NbYP4_fZYKbR;E&&VY%TrUc7=hXt
%1dfc(fQ*/)]e)K06/RB,_?/L32,.J(P')SVYZU>L(jO*joFBY@0W'Cn'&Q3nE8jqR>@N/='G_HOl%R(+_sV/2f8Y1VV@r9@Br92;
%]VEGDL9`F8Rb3^?#>>=j3gA^*"BB'37"lIDTbIe;>'_i;]n/^lR#IT("lHGHBPG&6psc/a<8'W/,s\QKCr<!H<0="fNd)-bX.TfV
%a!$P%EgORhfDbJ7D+DC,]YC[6!XN&a4V%0N,R6b+I>B7R=guC">W[HI$tLQq%<mMDb`'c0A,tlEFkD>f-4oPQUX:N-Ka59KSDo-(
%%?<c+0]hBT8M'[\8JBa,D_UPp?nO4Ac2MmTC0s[1UI"$kfo]>j.Yu/[;liUJCq3!pEIa4C!@eNd4"MGA=kW"7)6iFu&iglkb=FA+
%`(W.&JBjo:MNV*F*\b)rHdMgI-)/Lfo`Wt?1/%4<.dqWEmm9H,\2oYD0:6%Lj"RTBFK=$pCbK+9=c&@fVe%]H4P#S:C_iDbEZ'BF
%NX!E4)]TJinFNs$C*dn[l#jXcd],ooR.LPabL0ViU9U4oM,Ah3NsD<YknN.mc9LgIGNE2>,4=JiR@k!*a!AQsA:$qWZl&HSI/6Me
%R;jksX74+p$kZSqiO"o)/<cqXOk`9Edcs)3eJ;d#Aq:/k=7_GdTqU),HSG3%TS3otc=LZ8)gNC"]*A@uYF7FCY@LnZU`QBaJfBe'
%..2dd.i,&e1AD!Rp7tjq&dgP]bk`)*TthnkG&(ns'5BZ.<qm7MC##=E;e%:%oE*MaoDY-o3E+;?cSNT,UuXR5osq*UCi1,Vb%<K8
%V/rf4R2&4CQL2De(aDKWMdQYio;j8K<ZGP7HA4/qho;15H+=LE]V@-He/'-SNR@f+YXgMtAJr+-2I7SX"J3a$9*a/N&%)Q'/LlZ5
%)OU/l8VY3C@ef1=eUWhS:>mU56s@/a0`[kXC`+pmcW4]#Ap=TQ;$+6BA:W587ql@mUVfUK\#A/(R]imW/Z>%'95og/,IE,`[-^"0
%RF$"!%:7F[7*V`?_-5=S%,S'DV&^c]ep&[d=]r)lW"t^p=:!-jpDui[JY#IdR^C2pRuU1mWIkuW"t=hl+"P#`E%"jP-QoD<fkHf"
%P7O&Q<EORs0b760qkTR)_X&Z^#(mVJOToqORT]>L+q*Jt+V@JkO3ncCC:YO=#pc8A_+9Ao(5N'A#]Pup='0mCY0>\E\epTgZOG&&
%=M6":a#u(-)SJV^'DUadV.u/$=pPP*I0,-KYKc(:7@HfI=B.HQ>O2'ATi>:9V5?pLUt$[;;PLS'U'_Kqg-b*9D64%5PgLXpPnkrL
%^bZ\$6tmho0[[1$iL\%Y%V(a8,!*`Xd-UV+/Yj.I@Xal^/2;CmMM(9GYTlFcTSc2]1bG8hUJC`NBP+7VRS,.l3P!dWGlWsrctGo1
%qs[7^TjffL%*4+Ba=<]V,G\haU4o#'XqQ1c0.g@s"DEM]F-o+49N`KiXSs;'?q;VX1p\6i.BT\1"'C?*3C-*b792WW&b,&uiL?LR
%N#'i+!9%I**)bpNLJG%G1EDhhnh`)s$%,Vs!iO,^\jPq@@E"lj4G.mCq/K#W6T.Zh6S(3qXXb6-W*nruSsEf8J82.M"&,%6Rf.gm
%"Xj4Lh4c+UJDnquM3t&Yqc/meU6qLc\G3<o37SOMr)8j*/!NM6(qEOXESuH!>*_)=2c_N.ohDhTjb=D!Lb+4"T\2+)DE5I80u]*f
%T`!7i[`TMGO]>C!XJ^a_bkD,j"0Dt]cUKl!Kj7;uJSe,PN[s?i5OG=/E=tBbQ*[jJ/#LX%!f@c[FibD\FkW*e/%_&\(TR\U1G#+C
%F`M-e-Qa<l!mM$6;-^h<++mmr'nJXK_P)1BZ=R]`<Xr1D7;K17PUR"9Wn&QqfMC"MfVKJ"O$o:EUu!B,UD_H.L=<(m_P?A]U"Uta
%0$LH(8V%!eC+]jGDI+h"bg,ocLsBUW](!VZ>`KRDSA)mJGihWK"p:Bc&mApLkgpKRA\fEp!^S,ma&9<kCg9QM$Smk`Scpo"8*r?<
%hL3qjm22C/"ED-A,?V)WGF'39Yhd+e5kP+%ma0q@KQ20c\VUKQ/]XnbKZseUdSM9DQ;i17)%[MH+?cdI_6_cKCq*PW/VM6hXO;*K
%_$,br%FoH_4.+7'c8_l8f5n1=3l\GU/"((1:+!S!nH)Z?K)MadL;mV@D[`Yif(l.)n\:kR\Apc`k[7.W9Od@QaVJJf;^8Ye,Ja4X
%PIVR;jcYlPdrEaT2C]QYU==!V;3jYq/D"]`"b&et(<=[+o&u47Pe$RH$D@H-_k\JsM.*6tV6j=G-.^)%#*'Z"W+O>Z'g5,2?mHK6
%_2R:t=i%)VZBc+(7.JN)2&fITab3W8!F$p!^o>,g$&1"ORYe?Z1.CT]FXmb/];@'!*8p`ac6>TA62)ZJd,gXP\h^Hu.>K1c)TO,]
%"pRA'&%Y16bBt(jC3h.KV9!nf5oV1(A8Yi4?do@8ZD&Q=EohX[%4)EVi0fB0U&tZ;_iSO`N3GY!b$S=0"Hlqqq9#G>_V1J.)O^<O
%L83ANZ:H\N'd\Qhdh3l\V-Dh/`m4hkPI/<C'Cd<"4gB^*f$8N-HZh;*`/"g(UW/H1$IuCqZ.ct2*BXn=.nY&Vem18>MEjLr;?AQ$
%033LXrF_3)*?6Z+Wf5Q#k9t:*!tmGcdMsYiAi$FCPV-hY3)O0uZ0?$5@5!.en4^^Pe;9uOL*)V*>lkaNlm;LZnekHFdt77m4/jQ3
%?[@Lq7+*[Oq)sK`l5Dr8F(S*2j#L;oN0g]/1(eEr>63[i,B&NX6f035hb6Y^*S5-m0OIZcmt-h51H#KGNVJIP[dF+tJ$k4^-p\:m
%,G^5pI*qUMPB<36Tcc.:2'"V3ES<"eFA[u"G6C`b>8J,=Y\`S$l:boL\AG3kfLmR.1`"n91H9+$k+k`lLL':pYNAfb<RWq;;:TXV
%2%5@j(Q*duF9FU_O^E),Tq<!erm_XM&C.)7fs$@SC`=[C;K93KWjI^a*<0[Iounl1,%UaSSPm*;\+*i?B@O>b1I?(HSg<@[K]6BS
%imr=E:V9\;#MRO]@r8AA>$8^>!E`KJ5-p*@@R)^SXHc0W\ZB&q8D_f51K0-?qh)hX%Q]mMZ>taSBB8"Y4,0"^**8%ae5l!V:E.WN
%;2:4!l-/+2h-sM2,S!>e!SDe/`8UK9U1KlS*#ofO?Z'Sq)k>@)#&?2WXk<PD)U9KL2:@49*)9[f5LDL/JQ8ogD*o24/UaBML8SX?
%a.4oS^*BRj2gjT*DHna]Ls\@t_D2+#CuO.b.JYd*E+3+Sr%kKpk0,$C]i0V@[l1fRWc3Q*,fhj?E,_8SfN+_c<i!blRde1R]\H*n
%Nr1+7O_flk*Oj%>iR!Fu6!;:)dQnQW67GCI[m]35D]kZEk6ZnfAHMOZ-61lWZKuN_LYU\q_pM&mYsTUuqFhK]Ca#So%#/_`!c00p
%&qi',%Nff1%hA&\`8$n)]ELrl2Kj%;0rK+_%c3)__?W(\-mjK`%rQ@Y%ggrKeDTPcL_>9a$kBEl,CGoH_*PJoJC4s?E,H-JlU20l
%$7ps</[j0eg`$_(l9Pm)nSh/e2eqi]AYo[`B&>&NM_]itrL8puF$ht=HHk7'8@frBkr=Y:Em_#Mi+pMj*F,(:eS+U5]GIkd#!FpP
%]&89\l+tck?!@Lt3/J90[kRTnalJ/(*Obn(`1hf>%t8J\C+WulT)$3FQTD/h,<n.($BX*SJoHlf3KeM\"Q;0^(["kOE:1!NqU81N
%%`=Z*H5h<Pncb6R](:Q<(lJ1sFFnJ=kghs;JoC^n8mZE5i,%?@)*KtRAn0B^L)q>]m`6G^j:c-t%qP:'q8&IiVG=YkK/9!<!M\?E
%_%HI94Dsu2*=Lt6>5?"^6>j-G%o0]C,7IrD_6I+)RVU9&A"?LYpC08FTc@%"%=2t[JB[RCH>m>:`QH\3H>kDA+K-7Gi/Sb_5U1H$
%E.E2/%,:?*A%C!\kksA!9^k;A3^5T-Zo3BN&+6r/=8"./3!)UO-/%jA,>LY:XRh(.6F,!=<ISm]NEtN]5I`(`DG>a*glknrT$`1S
%7#7>-ok(:GN1CH)E3+*g8WPh&i#jRAV!dR@i)V0Zd=Z4mGA$j3g._:tpqbROFae:X.`(;9+'`065-FF.YFj1p_"CX(L8SgJN94ds
%[hut"4ZL%jbKZ[bB0ah+$.nCWakKCLhU$negmOlt4h+Qk8@R$""(Poee!;$pYaPXPSK8bQS49/44ZL`dge`)[&+3Ro=8b`%%V1p5
%%>,^l4L.Qr51>-ol5JWkd=W)4==eJ[o>Ur.*'*$aLM'3>Dt&CSL$%4L#=f\?kkN'<%o*>>C1NFe#:Jai3DVR2i,nb8S^dJO[AB1S
%++1bD_[fKiNOcco+.S!_\eD+6K9Lb%1$<cB#KI)uJYDUd1NtR\ElJX8>t,]Hmel"'3t%:]nq2SI`n8jTIW-hbXFqYmi##AS.W"ps
%dB$Q@G(O\)#SaQXKO^u*<\b>AA"d+gVVDKpQ$:]d5nFOR#[km4E3q*9X]?4A#`_9.cupcBG@^MOg_iC;WK:jG.mZ.\Bbg7L5re'h
%Pm=l6KTf`Le@$!C3rl1p/fb)RQ$\t&o\ajH6Zp9V%_j#E>+HWQY\D?nE.]r,%n*o`iHE<]RdJ>W`@K,!-O.mkH*q9kE!f^gK,,Fg
%>XUMA_/mrmhJe'Z+I;L=N=qbKOmDA8BZQWL\g7JL4GE%.SIaM<R0&,g`!=Sj-h"e>JMZ\\)_uP"E)n)0?iA1RNoiSKWq1eJJjK./
%1-TZak]T`@54H_.l,'(qLRl8@'07'lD&B#`?0T-<F"Hn)#+g-K^9`CJn_=(Ykt[9#hp.jVJWgP0r9^'ORhT0#;qI>0cG>fN)m^jp
%k/J>H\$l(;&p<N:(p+7B2kH]^%!UuTI1Lj1UP5Lud.l?g=iMP]8$F.1DfOr5s+;U]I0:9EZLG4lCSh/gjhVtbN!c)>M/[i'(H<s)
%aQH5#c>'hR#b5+iZAPG6JNHn2LN^Z?cL?n_W,55dJ2V3OBO_*Vd7n#Gd`_hhP<.6Z#TO:ScnQ2bF73)4;KaO/1jCs8^g5i+BL;o_
%pLV<TVZJ5_.[!4^'f]P7Gkd"#S4,S+"ZdAX9jjk5ihQWg231jFgJnH/(H@VL$(M_o?lA0%i5D!ffb/k"$'HR^SHta?1t*RZ,&ji&
%ZBV:$JMY58Xji3C#m_=_Dp:].gshe"B:T<ue?^tE2FQIsT"tYU*cP9l1uLD*39V>bs1dXrk6BZl*pGfFUhcb!m6'<;4_.:1L'O6R
%Le:(Y0F@.JMA#<m"-+./YA\^%eRVq=aodY>Z*N3."7B8[#(pO*"4!fb.52f^K&fP254a<24@XrT`WJsfUR]ZM!tNdVpYXcqJ7ISX
%hssMEmRU=c6ut]t%PWQ=6A#K4YNjNi7KX.TJ\3mF*cS9P#_WU-E/4@0)Q0,2*%g6_gsCR5dLoJepS>I@[Y5_Yi4(NE4P8#2o9lC.
%m53`XCfl>ABttaW<o"W$35/=4><3-Oq);HT[:')K?4qHjkq(adEh_'+(3$]5ju0:li,3A4e60T_%S3uE/E$0sK+U;M/E!VX+V\`D
%i92nYD%%2!a1\e$)$r9j.JZNp!(RPPgfDrR^sQ.UXkls+ZOj>%\5Ik;oc5LY3sE,mb(mX+!,!f^EMieL$b(iT']<dnWVVn^SA(/q
%/Xm"iYp9YgSLk")D4P'nhrFcMIk>gf3P`a`aeY]"!uq[L&YQr@Y565)Pm!W?@$g%.#rjN7de?%N;6+&V0m&T]S2?e\44nM&PP`as
%=\'$A\::=B)][cI$;7t"3P[(C<:l^bSB5TY;sqj2Y+b)8nUS5HYVLI=Q.X[!AE<h^Zc/;k#Fp?omK(j`^juh@]D70e*,j)0ocO=V
%Qg*Sf&:r=-M3\@><`jI@%QY1]DT7!Z%1bFETLEJj(_8V!,HH,P&%KWcQ[$LPNb2k_l9*u3%B_8?>T46Fgp2Gtelbj(=MU=Y`miuW
%$TO><I%+6RM2ZFqL<]kG"M/E;Qn&P(6E*S5dTO@'X4#hAB,5Ff16qg$]'YtEmr$L&1Rpj<GXDR.4&l$mPm<iPT*3n0'=_(YddEQl
%^g/h_JBe;CUd#L^FXD'0)Tp75@01(@Lb(ZZ#om'9me>>$^sSmXIN'VQ1c$ed1P+Qu[XJ(t"AY2B`5.uNS=,*glT,\=+%gli_ZUIK
%eG\&]'0(`6*4ph0S.QR#_/,LS+X0OMe!\!+:>FQA0S)#UXbX7feKqi9jHTujkt<(eD@@k2bmsmd[p]>N4s'gi:'L&fOP2KR93+\_
%[qjYnJ^a=P0s"@4N`#>.="8/9G]>[r%2HAS>ZUI><J$Wg<7i->E9>^dK5<-o/fM[WWPH2'P12&u3;Xn%FH^f8LA'3STE=l5JD`!o
%3'+1I$T]"^D!kJ"3MQW\g/_Hl.ht$jO"[S6i#I.@"WJq1K^`/_AN-R'Om&of1Jr^U<E,:OZ5Zd$XPld0c=Q,)9ZB60T`Sj1(sB*E
%'f]*OFgI!$"jT.a^&(J,N[cl^1,(>"QBuThW_NbY\&c_f5*LQXF_T$A/oV*-(:S4l^`ho&1n>"Z>CZm"/oY-s/Me2&^jfj30J7<d
%V(j!o>i6ME%4`/QP0g`c_Ops#M`GN.'fa3!p[IBGi69DH5&[1ta#S5V2GE&MC<r]qmnDYeBZVb:3.`#/*B$=DpaEOt3Y=?'[u.L2
%'0(5WFUU0-i8hZr4[Z+K-NH:&mMT!^&7C3K3YaXQb0Cmmki-4/cXjutY3r0&.i10T4A>&*>i9:(7H'O?S81RNDb&"AaOq^IlYPKm
%@"$pe%@kfh/;B])S=^>PU[s&onbq>KH[ILh3)_0gHZ&Vo*V8]$Rppd'g7d:lchP;L%n#SNA=m4$OC9:qdXa3\:j65&3cHF2PDE_d
%#EHo2H9*)B^mP[1XWWA^!&dO5"PN9qF#@\:cWL7JFnms[n@N'(kr\Rq3?L42PQ9ueq7p]:_Xegri"1;lRLVN#'%jEHEPi$ArhaHk
%pqRbZAI2W)"*ZouABP4<AtTH_%NNrRd/BU>a0[4Vr0@g4=)*V@VZUQ>PFjdUi-YZ#$T]:fSjCPBd"*\X"6^=UFPud&;.VuU^_t.q
%froMUE6Uhkig(&oIQRp[3u^/a!@G-r2K5;iPm6H,%33W'n/-!"n>hh%XL!I>DCj&:nB;)sk3BH2[BY8rg[iX!R+]:FG)gs]SIO@o
%F*gg6)&kQl6^_CBCu><]C1IL1Z%8[(U`LI1E5^_OLGcTW&TPm#iW<ajb#6Qa^_+e(3NZ!5a@g(b6"^7;[M.A\#TQrS%WUS28&Gu)
%8coP30To:PAc[\`66LH5J@"OUqNV/qfj5b)$LhYSB++u`?m9@?D]$81lPd'9)8OXo@q#l)Nk:(1.XG\,#FQV(Ou`V'X;mK%D$duc
%7F\O=hl,>)"4ZSM))Qn%Y[RQdF%n8lA,f"=5H.7:q)A)o5gR%'reA*cGVc2qc9rBDj:&[39@:2dhsf<cQ1g\o>VgNC=MKu0`?Mc#
%l$!G+7Qa5Vd8dHXKWV'-CaLH&-iHMm;NuCRDmgcr[jD!-oWgZ.OFG*rC_PnhGX#S7DAg39\`=n27P126b@Kf5L>*QkaM+oud8T:?
%hpjV*+(X9M+)CP.lC3`uWNAkOG\[Lq#1GLs3i*%ORD.@u<"WX:Acj`[_=W^&)BrC_mm^3o[M"#+kmOYbnU*9nGho%g7a5r[EFnr8
%I^?>lc6V:LR:BMO^(I>0`^_EO`l>V#B)%,<]:&%?pq97PKB_.T]b+K>+`5lFYq%/GAd5e)-82WbcKu(CPF4m!;gTa.9(r-WmB*lM
%R<rR]D`%&1#.6BnaM'U3]pU+cJt3@[2jtTu)!'OeC#7#2'hUj,&?D$RjPD;K=H[%%]qJ82Ir:XenR[9aeOJoMkQM;73j3b6D)F5i
%h@*0b.m7?0!?=mcEX/j.E.;Wb/[ICPIq7CEAoH].V>->/Rj^K.;n(!-#Z`M/aa-d1'-@I_eX"o.lPDcp:jZ]G'43PseD=<,ksTHh
%]l>7EAd>Y$)]C0;B4c'=;qhdsDmV331:Y$^\2:LsbhV&COc]pr\\2EW0N(-F]jZIGUqYsaVNFi!=Ll*GbqD<`#IcWq[.7hHmB$r,
%:Fin5nU'0ki:\M,@5`l5$)M)D)+W91]kIp%,?/%']kNph[$#e-.i)JmEc7CSX@1^&HNOQ*qR')dboF!MrCZMFBX=?7Cd[VbV?7p`
%9&-PI5")uGHd`Eh`l48!gSkG8<cW*^8&NL:Xf%sNC2]sp+^@"*]pV]kquoRWNG&CfrgT=h)+\3+IqSIEk;%+%0RIl6MXBl:EdJH(
%Vqp+<^$1G)K?2:(NK5B93OlaCnWL+SHc&W'C:pD:-4!;1DUdNV?lA[2p1E5m8S?9(bfes[e![mXh_PdU_sC*uT-ToGlj\>n/;'MH
%gMt[o(XJJ^=m"$VW&&cVo8I;=L>!TlUJd.sC2Z)!7*c(F\'f7uAc56g%2_TZpZU,`#&:$#g7,l*XbI:m2bRV1N"'N?U4gYrDUdNf
%1ZJF=C2Y6nN"HS8Dfc$YTFJ4d>"LR#M7n2g@QTHL;U[tdLb5kj:a\+g3jCX&H#Gd]XMis`l'[^lM7q<2b?u^k#%Xp,*GpVGM<hEm
%TG)[I,seF;@W)J54MeUsfUI"30"@2">N6$pY0>aEoFn3IB4c)QY9Z<LR(X*sc(M$UeD:VU0d1n]mEN-q;MYOd2jGQQT.RN2<?h2&
%0Q(eY6_E2Wm>Vm5O;hqQ-6.)nQHnlW\^0AGOF&cfgpqAnmS-YV0h3J_k'Y-5%<?Bo.#$i=gm\u.NMKRfZ4X5*gtm7gqf`&\+']*W
%'rWts)fBTV,pjPj`pM#+4d%UCDJt^,/nVl$gtnKE(u!."9aA,:Q.d0pWGYqJU%X5W7E1EamB%OHT2o]FHH2;?hTXL+ZmD)Fhl4;W
%e'HOocL$&S90[j&r[01L/(1]*&@-&Dl9QaBnG\+J;5M03fS2bJh?r8`+9Wl9a9Vjj=qQO71>Fr*f5`I\Q8C-je+-mc-3i%@B;8lU
%"^Y;hJ5NU7(e,os?6YLXQj&o)*>#eMe3+qA0p4TFb^:ZI*jW@;+HI8b1lrD,BfIs(B*^(^mQ'^fHX4,W5[falj;t]]PWhcaI:FpN
%rQtH2\lBN=1ia=]0rSbQYtZf`;*=6tkq3D*Zc.(sd#HSuGaOkOQQRL>RA\mrqM:rdB);p8h4ht>k8RT@(F6*&k+48EoX#-im[X@3
%'f[_r$)fIWHGWcH2NlN3+aq>7D[=6$XBH4lM\F2HauX[CV:\Djfk_$X(:5=6K7'B^GqiV?]LX.QV([am'F-9;Hr-7@+J/8e*aLTp
%iL?MA5P>buA"'t$B[OL+OBgR+e;3b%^`n8Ih[Kp!5i/FM5i&LLA1C$5-@D!='L)b$l%69AZt)B<<DheqV&dg,.0]eG!*_jmd8IK4
%"'T/XUB<'QBJ^D<fO04Me;W">-?u22"SEJNMPc`WZ6E],W^:9AL5NAt>=puK2/UpD`K<t4ao0U8#=+@b5\lA8<7(bg?MckdVi45K
%ij#SJ+kPDU=qLcPmIpaAg\1#$Gn([3F_f$4;1K3^Dt+KI#iaa?J,l^3J1VdD<!1unUb;nK'KL=(M)a4C8SK%+o4)&+[;_uO,>8V)
%.Zh4lC.U==_(L_YpB-4l(?Hg-Br<d3'RnhBpVCHaG:/?fX(\bM1IOBf,SNeeA"0FB8dihm;k&"h@DNW#U&q^;qaLZjp]Cj?7Q;k?
%ko/(fTIGD"'9J?prO@B:Ku0Fhh4g&:cUL.MU:qce7skARkNK>F<\Z"j4u%Uc1CEhV<[Ern,]TcQl3R/p$[>"b6S.18F<%&#R='d%
%/`[/a<hMWH72J0&.LPOX_72i(6b.iVdq8G9J_N#fMj!YEUEqagPEjKd0D-+[,gcZKEs$WK,gc[oj(?RGXq7aLobD-lA/0pSJlDg"
%FYn,!TIOLarF2&W-^#,HHk<CN#O+T)V!&"+SC)s&!4GN:AME-UdN^*a:mEnC^Pib&ViP18l>QpDj*49QIhOJs)<oeEU`TWrM!b9J
%Mms7;Ao@#H'F4mj0."jk366^fA!pj3/P$5r(kU.%8WK?8KS0Rq7?F/'H`dF>6-t\T#l''K5a"96Qq#.4nmTFnD*7t=_j<-4H-t,9
%XJr:BLGZWu95ak^mdOm\4ng]&:!rjRS_fkdW!\_$/Dm7<HeL,!Or3E(n[j>p@X8-e-gq0s\&2.,q_:]]^fCj]AjQdA$6aDVW.@sq
%S^/-V3hT;q6qN#CU,Fp9U^.UF+MBM69QR.bAAZ:`!BE,)[IL>/nYO$,b/cm:-BcL_XC.A!$EDp];Rir6`n9LcJF_4"=C)It@1W^$
%aBM-^/'_SC&3'>'J=j!mcIlNq^t+)tFPNB#TI*utoSD/>EuDCn\l`P`:9;V0L:PJ:\BpD3&D=Zd9gD@MbM]7+`J%g.7sYX+'X]N;
%#-0p2UP,6/*c'R;,h8*DRP.ogc(nnP\Z*ZW[Y8YInhr$p%cuq[k-2o3mQ#rLXg\6j=pcqt;bp9N8gN[KhO;,p"Gl=i5XH<1''*J;
%]Y(Yc*eGEfVA,^1KZkip5&&%B@('J?B#6br6%7Vn$IK_/47&Y5BJ:!V^qPb(iZQGR!,OFZKh,hM][3/bTCeh:biBnZ9mR<S'ESo8
%Y`K(W[F$S[^q*?9!)V`q)HT7eg-T$bVGJh%?<RTM"A\%Di=ClVl(sbh8:&@JeIBdYRMP$&6Y$4sBar6I2GYR6401"$%L=\d;)06/
%4GE\g1`%^tJTOTt/_#iU0F9<K?6e=5\P=KrOlA9\YhL.9NG-_fZjZe6Y7^E*<QuJga5^TuA_\EV.jmNenB`BMgiqrbDI"Y*<`L&p
%>B@lUL9k_]<Nga>A$91o9FfgQJe;5-(/3!65Bj]rD]!iM&t!?K9tIfSd6oY5A#-)6S)[a6;7s2gR:Yf.-W:;)mUh<Dbn[W$HX3:B
%OWS8Q$%$?n2&8V,+>a?LlAB?1jdob40'9%@:h94LE+dVE:tZ#PY%j+*!#&MT_inPh4qp"9:OqcK1nF]s%B7[kP:F86AGOl!fqT[Z
%/W!]3jt>C_;pro8C5T1Q).VE;^2E1>N?JO3mFohr)OUbh]`Tt>Y]b8Wj)n+\`3@W+q#L3KH#.BP2tVj8X#lB:)_`@r2:hQn7C*u]
%Z?.EZIO$jO"X8^LTpDo#]0<1rXi$WF>KKc8\5R56g;75K>Mq2SO^GT05Vo<\1n#R&>-egN8HN(_WJ22V!FTB.2(/oncP;CcLdQgZ
%nq#4LGg>-!i*IO%]8'0PN%$(*7i?MG==\p*@7QKmfYG,WR>!0+HiL+X5[#Ph/5B],0=i!98$GIkWY3I*Ru)[NVs;8:\g]'rW%34>
%.G4hkWQC$7gkC;qC(rA/6OSgG&C]9#2c$;j5m<'MBP;U?Rg%?p<3):UZmThfZth10\OBEsc1ibGY[AlC?gu?bIek[F)rgMkGP`5g
%V8.=rd#K=7pPWnhUeI:+/"*bj^,f>;4[fZ`Z]/ZenAi%NX[K!aM.4M]b4q.E:frkf4R#&69*`@I3`f.QN`SM`0(Bkh-h^)dF2t@4
%CrP2Ff*(Dk'cVqrdQ.NBiC1!k'dCOI1O=[j^gXWJlZq9G),:sq?R(QDCs+/3@p$<6M-f^!bQZ"6p/Gk0arhtV>6+&NndTGj08168
%?rn_XmY<O?KG]+a'G-D"Z'E:Q3O6aZl?oh9(B['8=$O&NPf^si(!@>]K5G(g3R*`Lepc0HHqB7aa.g0VLS0b5g4h"",#/;$T9p!%
%k(*]!\HrA^L]Q*a`0K?^AaeHDlSu$uiHI`S5F`N[a;lU,H*+0qP<dfmStRHYP2.A'`.S0n%n3jE@=t4`ornC9Xh?Nkl<Ji@"mDHY
%<k-m22sXFCAnCDcf<pQlC47e8UVUF1X;$8lkg\GY?jAt`)GWrZQf*78[1<[TXsVIY0J"ErhVkS5XXE7,PU^n0"g3I?!PKa$/8?26
%B-FLH!-5(aQN[\)0+bA/VCHqe9p74N:,5L;6?'hk+?hCdmC#@fdgj';hrL,/^gII#U8kTDq%8eJD(6X=&SMh[@C1(eIV]$M$nD]O
%+9X<Ni!#)p?!@gQGcjZ:au1P:$m;N@L[.Qd1eo(NS:OHnTeN#Rda/$'".J.1]3c.ED&nm2Z!X_('$-)u`XNTPQ[DF4WYmKUW^s?G
%dtl@X#,1DSo\+o@Qg;_"%=j/0-+SE:42LW:HRfAM2*2tc=sN7+4KI'gpWs't83D*Fjh5<R)mSh0JMpU:1@#2Simc=XLJ\6P)P%=>
%/O53fEaD=:)>4?R3J_2!'$Bh,#Jji,#`b%O2:IN@C]DUD15#Z>1%ZKf+g2XiP3q0iB6f%=9!;,=C(.Me:>T=pfdic*l<H"#,E(M5
%d\*cjFQM3POKD$+EU^>.8I"4PAWS$M:D-c)M#TiXa;uVn0d^me_d0G/54V?GFsVU(P(t/iDqC0*QHVtDYMA?/QrHOC*FK!moSl-G
%4Q6E^I4H8(%#Wl[*ot[>WXMGWh!/@AjlSY,j6):qQ0XeXpE56K$3:S_C,C`n,!M)">?e3)\m=RtKpXF/fP?M]!$u0W#AcV@BD`Ge
%EjEQO)V:m1F.?uW2fT44r%=l%._db;?,p[`-+.>\,YTQ<6:c_"1dW=nWGfh?4N)RX?RAou%+=61djL:i)s<PKEBWS]J<GMZM1(A[
%&Qj_n$=IPiJi+6EC"oY+KkO>f)X572kLU$unj=\UZf@a(!Ptej6%+IG"sU0g&X)Q;==[62*$&mqie:@G"?N+UIYPG(,_@@]F%RuQ
%$!#_\30RaWBS,1W_GLR`6f=B_Z^tU=LsZ:62]CSPaCKCeND]uK>@jeSJaGg=<XeIj(u*"rL@lQ`B?EIo,W1&d8uHPALJUYO;WhY]
%5+pPq:(%PZ>Ej%k:*!>rGSsn@#K5\bVIG&eZ%%l=)At](W^q-,Z/.<QZi4"0=O=8rcU=!a-tNeW+^Y^@SM7L"\M=.e8O-LDOYZj/
%P1)H<fNf[jVMk,LN1De'eL/h+dTd!cU\91(6J[I=%BJ=TBdA".coRbbbp4Gt@]AIu6fO<;B3ntE!hGuZr8o(#3\[I%mk.504eP@^
%jp<9@346*O,_/L+,uWE$!EE-5a+6<<U>LJ\/1ibJ$aXRU@([\++RQ(i7gqAtcm@\AEhdnWQ:W97Y]R*)M1JDAiPOpfWFVZ`#='./
%1_u2^*'%/sBLVUs3"i7$Z7sC,MdZXnKYqQ3!>c4l93>b62Q<L)>Og5l@4hRH(=]5U5K/qgoR2:hLTTJfP?buBGQP4L8>lu+h6F6p
%5:uQmSm7.R0WKC>ql'HhLa=_VTR5-YH;WlUTak3^bofCcg.^Hj:ElK5H="m_]S'L#dmPT@)/86BSKNXM).\e115%n1.KjaZ@tki!
%rP0&_l"))4^/0Yg@Zre6Cp6f(`l^9%l:Mi/-1.N%//XD!8_G=$^k=EJ=gR<-^_6R,bY';%)hI^[CJRe*)P"`kd&/]dO+];X(4-&0
%@AbP`KNUDkd=qL^a`[5\)I_WAOOmkYh<Rl$?e5QPPCg#%;;HM,Y8LbS@aUV_Q+iJ&GCo?SMl>r0_LO3qI*6OrKWaT"9VIN_>]lS?
%VN\6I"kI?B8;FFX/T<[a;B+S"+jhl6'+pD65r4J$#DC&;8Mu(O@kI/&R".Gl4BS57d<I;IXq>qAgl/a=6HiWj(GM(I!B&SuN^sQ"
%"C4h\$$Dk<#m$CaK]S06r..fN8M!mJE0F]jVc7/b`,8@MC]l,9KK'E?F]^#OS,cU<,Sg!*hkstO570\$4=nBX.f(&$!25f*M<h#o
%hP.Fu?s_(GOc;:'c'p#Y-s_l=g_Kg5D]C/"6'=m%:=R'JZ+!<a"78@Z=r>*/i,8i5fOSjRofq!o&kfY^&Vs*`6*eRJT9*D(Z[m\]
%<"88oBj/#]>T%bq#2X]`OY4nDT=QH3Z2HI,6(YEq`nEs*IT#nTa!i-b@p!^Qk>f5NN"Z43!,)Cr6im9Vcq5>26QnFoE*3EM>G!'N
%5#(l"nlc=;Ce?6qp)s)98>(T[OW;g%drJ.9.)_FqpnCG:T]eKn2&mmN&f=(aTk]ZCO8K]g*CtYKgd$:-?nR^4/'P@8UY,t&$QT&`
%7UG52m\^dpY!<6%e\[DOJ/!N:BGC%TUUQ]S,b/l>jB]m`RJ`]`">;;[WFVlAXk:kC,j!L[Sp!2T\+-_f/U_l,8PV)BU'<O"Z_g,^
%@finq4([/&'il>u4YQtW>%QSf/nCN8UMiuMHZ1.QFbiU."Lg_G5$$pUZ:QVWG\#*uDMff[8gCp9of]N4UnJ3qZ^!&fZ_A]OI5a6>
%?uZI[%PhS9bBiqhX>K6tPq[/%M;jQab,S)FPQ<1DrY1Zi8!:%`6LE3N0Mf4Dcmi`h@MbF#0'ZT!;pu,^Z5c-'.?/PCNBJ[Jl\[+l
%A&Y\dUCm)9/h^@fai[j"j7lFl&<2hh^jmX>+-Qg5bPnhMHL);hXLZ>%2_b%Ga^liAdKVsKdJH=*[6Io(/u0of\h&,>$AUW*1i[Up
%\(#+08u$cce<m1[JgA,rA47QO=umhNX'lV1<T(bL!8t8kOUOBdG%$9OZdll_4g=q88^BCX+NPl7M;c_+.jRQ5:-]]4*>3-mRSO(i
%%BNK[0&u?1L)+SQ[4`?tR:dZdJU#Fn[FjLj7mTjH!9tpO;qBm&64FpeJRTp?:;Ah[\F<TiM<GNse;&!'HIR'Jf^mZeJHu-RKHh`S
%@6:G8p&ZsZV8f^"fEJ]HM3ut<S7[qc`Q+hbK&DW!8:jqiV^:[s;uf=TfiI7o,dL#HB9qQqC:%j_eH=@`p4TM=&qFRV%RY3+PJ!B?
%Iu1F6.Gl7j6!G=pTF.,VQJ_au,\kJ^P[0e+B"#AC;JEM;Q"2RagCT$id7r[0(64'rSVQta_E<pch@QALK)J=4OI!Tq#WV[?D-\Q,
%UBt1U[=o_u/\4SO,LKYAR^S@2&A/QUiHZ<A9WZg%;T.Tu>_!M*HG>Gm4UHe[6uDTs0o1W^Zm/iW@`L`7NbV[Rc-n.l1aG3I:5eF*
%Ri\pDE8K!Q"12CY&5PMrRcpL*F:d=;J!]p9#gtHBcl'.N]I&P4M^fm$!lPT5)$H&><Fo6`9p@?:_(LSUUku%2LE\lOK(`5[9OU0i
%^^U0H#+l>+8_Od<$*KQW"&Sg8FHl0D=pOL$Wmi_GJYl.]khr7)/NZ3S_isK<8L1X>#GCob:<ZU>PRK7CaFkh!FN-Rc4@fcU,F"Gh
%dnY3X*;=85^_GiJl\!6;SpeOL1ZJ5*hM<>_'Lb@\nj%;d:<Fs*R3<N&&:[/UfqRmK&gGY2=DUn7\]"'ciQVu;*(%/qOA.;!5jMBW
%.Y^gf2!>ju9=+Oo1>XUD@?r?";J:]LV0biO.CH->qH4+/1#W[2+esXB900;YSC(k"fj^ru+cp3)6Q6*%J7'^j6k#G_K=#M5\hA1#
%X-H%oECApqmuKu[D@Tj?r6OpB9*ZSa_.2D%C#a2fBj.4J.nYL&dra,&biapn'q]:JL3@Np22XL+#t%M0s-QuI*1Zldb]KS$$SeXa
%cn:Be6%+K`:J$Q='j1f68_=rR*-2ik.EbU)D,C]-j?^^+\6a$[(kjhK$<OaK*7IYX8tSF\d+*5t_us2LfA",m%]Yf*/Ju]b>N#X\
%9oTcW"EmqU!T3Np%?)I/,/oZ>E'TMEbhT9c7FLMbno>1T/J'g+6AM7$#)<J%lXA]jh$qGWej'mXk)9bSC,18u8-k.5(a.$p'[]IN
%!@9UAJN:XXaYJVG-4Ch]j%Q3O267JfB*m!X7BopGd3*ur#o0`b+(*_Y<0'=AO^nM)b)n_UD-@Fb-K)1<5,%Tu"r?I/Jh7>OE^3Pi
%F:s"5)f%]f'mO<"=UtTJ88\UU`#LXdhV]kt[2tN[&s2>E;,1KN:'.CqJt+_)A`GfeIKA.&;<,H$a\E1bHn?'@X<@4750?h*-:#^D
%M>UN7^p2DNoCtf/lU?EB5aMUaJNjkUEYATl/4>218$*-?'E`s+9Mb_hZg6ca&<JFV[LsU56qRonGA/b<AQo6TWHY,)@Q.1E9JkVQ
%.U7ZA3+IT'=GK>lIXkH<BFQe->0?ib;rp=r%4_H0OP@Vh_:Ch&,87tMJ7d/<`*O"%QHc!%BcQGc;G-n]e(S<1#rH9f!'*Z$!<I''
%P*HRk!Cl<T;XX^YKc_64W0m<=.#OuUr[6\fQH^p#rQgM[lnB4&^)+_TPSasO1nL''3=\DuPL4rs]-?uC<u,1iOE?%[CQqkH*E3SJ
%A%JJo(P0Ls6Rt_m=$m%5"[h,ch$IgiEaf;d@3o6Efp!)$VZ>CmREm#;fA(DF,NlP6rE(uq1/r+R?34T:i0Y4B+4X+CO,S%g5aV,e
%fs%qrhN<-b2uj@;hpFq%E['F8Q6"u/+;c!+E]%UPb0[pE`7;&V_<W=opdom9FJgM<VaolZ1't2p1k/:e/;Ni4VGLelESR;;R8pc4
%P%"GFqF)@AGmSEG'=BWG::;)o1;WSjj:Xfh@2,RZSiQitipu-l'h#GT:dM2!Zd],[^tUSZ6#8Hb[DV?mT-<M;8AU8-($QPO=:\5H
%fAiE,8MMWB\F;*sJ]T1NN05PC>n,$HhL$U6$!B\'pL<1qC^M?MN#1]3k`k7a=`OCO&H+tD7lDNU/db.&h]$ObhKrhk/k&1p5S&_r
%c8Z5YA_C!Oia2De2ATm8k)2SQ'lPCT8.&L+BXt5iTaCTe(V^ps[k&]G)u7']S&WJm:,<fP"ersbDQ1i@H[c>dWuXa,e0<I?@g2o=
%'I1Bs5XjY1VdW7C-MV,3&8'T<;EBE<7%,]S6ntTm8neDU?Q^U#Mp_s)1=Q,^&7S.YMH1la!C?*B&33qt2aq0jUQ_dTORs7EL*T?2
%+jDZ\A9SC79?(X9fLood9o/c_Gbmt;H&2D+/6,sDPk%m&*KA=GJ:Xse`j2(k$rfO(aoI6dE9oqI^ktU-MK"Ans3TCo."#TacW46N
%SNrR.+I>Z^c,i"?@L[9W&`c"+?G_#D;u*D$'a*u<6_hRg-HWq(&W<p]+A_0'.DJ7e>k.rK.KKLIKFL4-(aEHa>H,7_94I".JlkPk
%&Eu$f-q=r4c:Sc`[l9#db>mm>Zqg`-$>W%2KTSS]!h,S+N_6NYYhWEj+S32pP:Im],9lQZ-_FJ'.Pb/lbhWliOkn3HZ^LJTi55[t
%/SQ&'mSW/#8Ag+D-(?D.PncHLg]Hsh:e/;?2&/cXeS8kmW$6URo]ZupN1Fe7-rJ+;&/&oM_,LaM"+]f9Vh]sWjF5A]*!U]LOnL$P
%)BqI.c6N\V!\YGq!nWW"hD\=;:1j4<CB0Gn@4e3RU][Z&CIj@RdW8RM?KhJVi2C_?,="Y5D2Xu[8D*]uTFg'D#j9f?BSn2rNFg^H
%')2ic++T5?!nY_4HqUi5+fL*&V;_<ZKWkHp'XY-q%P@Sm'tOGHBIXum&?Z/-=J-lbpn]8h*fSuE+AISK+@m5O+)+\RAW]e&56MHQ
%X`-U6+A/]EZcFOb6!bh:\7L=43G)6@&0h_;TNWEk\4oDYTU7!h4pc*jT)nRhioQo<Kb?f0+;n!CU!!baF5VWURX;*J_FQ,-BimTd
%(J#U'=l[g=9`V^P0S4o!dKnD*_hY/OQZTbD\/&:7OCp<QV\<bf8\N?'U<Kb&]SkJ\7^3Q>+QO&HJroI/ANFe/a>6q\Zs,'=MNG-1
%!LV/<J`+^YX^_5U>tHU7k/Z]lJ:mY?n#.f]I1.)A9fd-Ic(cZikZS,]J<Rba>;'hLFkTrWi>>/k-mh5fN:c+mDDj9AeM:RL*)iCd
%*r:n-%nc":*B/Mf-KYW=o["#!$FjiG(s\hM;^P`m;*h\L$jk2j-8o!m@^9:C0oVc[dt]1cGZt5Q4Qrm)l8.E)<5)N]6\'PF(49>.
%h'52*%e@sRbbcjsV^QTe"[c<)RtB<=V*6hEH2<,em\s*!"WiX'#$_W\6\eP@!#Bq0+jo)('sMh+4[^;VC/:cbKF8(nbh+>n(r="O
%d%"PJ[at'_Sj(T)DM3`OT^=Wk9pDHQhD-1gHNh5Od%:MZFDDS[$!%(n0/:k!BLFjF/[[trFt=&b`XD(+ls=(j&/YacEI84K/Q'8N
%8QRdYdABM_FpXVST/o[Z@UMEe$]+u0![I,/Mp`V4(F6<$_ZCMPCd^BoS?"Ba#'NcsEtbdsZNHbc.-ucQ%B$l+']#Ep73jt"<%B]X
%9*5a%opc!bXjn?_;Z71]P9%#+X^IU'=poL)@kInWm7NWgp,D<LYRei>_Q@+JhH4nIit#=4:;f'/Z`q7LY^dh(OYmJ7cMi&qFp["s
%;@ebQo+L.?26rU.V+rk!jWV1QWi2\Z>U,O;HP7N9dF'McH%^`jOs0rI@%7"b)ECl-(cQbKM&?E,&6O\e/5n)'7j4gTL/8:5E,aC%
%UW"!8<'lWi5>g5a"jAMO]<1!:#ek!i\5/5l`Us%`Lt5/00I8DWMd].B0rP-G+@*!]djilK6rYa/W^p2)[tIm.;h'Z?ZUVYn9cRJq
%TW\d=OV.^"=ul.sn5/sqYQu5,)`47=koc%]AY!Ta^oKVA-\mOr%g$k#.`=p)Rk_uilC]RQ4<(jF4+\&36?mZ*5,O"?V5Rk(:c9",
%4;sk%S.`2P+a7D/p,GEK_%eW]=TtVY$QLAg@>,Y9,t]eM*=b4JU*cS5m0e@Kl"7mN@:YUiVETlS'6#;#`rbZ9a1QV'*hL1<#f;W'
%IJ9HeA!mN&R_b7U&:s$s^aARSh.e32bG.)JAHiM-TIYZa5d]uiO>!#8&!5CqF/hBJqGY@f#,j6+'&*mAbeST7e>>M%TR"kL!46<*
%/#c<qH?P7*L)$e"<-5;So\ntTNuIWZ'j;m)ku5FM\1$N)l_KUX7r\W:?:5#M1ZJ&?^n=H,3%4f'^C@gm$3RgsI,SaiQ!i*d'W)U3
%k#OMN'[[N?)JO,-hhX6(_`h,+]jXJm77"5e3Q)JcM)=9ITu]\8U_:=4.WqgM_on#"amgiIlO4GnV^C9;2$;i?`LB<;+:.ojZWR@N
%7%T_pM1_7/&U+;Ua9l(\);I:69q5*6"bGjE6c-&'HH?OO[LBrCOd5HJTJ7.s^pRe_We^gq=l9sWdR/gcPT"rt%jk3YMM=u3O(T)N
%OMNAVD-4VSlbT9K"K_kS0f2S^(ud5,)P?i9fHDf91Q&dNPFu\+;N-DaOO1FHRK]*Fh5sdo6r[U+'6bZ!+<-NXCgQABZ:TjLWqiBW
%*R,<b+piW0QFfI-5q'#q8<m#R"/(fJ-_ts+Xe:#&Vau,QXiZTRgd^bQ6Pi=?`jX$L6E<4^3ETLs'F8a4)Qb8pTFPZu![2bkQq,(g
%U4@AP)D0HTK!gDl)f-;07*s9JRC"6HoZuXGOij$A$@!aJUS6-dUEqV>_)WmY8!Q7d3:63*)$hH;`1lIkWIu-sb9EQJRQ`6p0i*2(
%7mbA`^=W^n#Z3dA]ZL]dhRo&8QepG*HO%b3)Er++5pClM/[m$+JRR`A+5lZ[N#N6oX78%uDk6JJ-\fi*X9i!=XR\.KqBcON'b"30
%a_:mUi9&4AUNqg#(4#_!<`.B!NQ$ou3mt^[%620lge%MH/)U,BD#K8qD8``%msHdNT-F1;S_[XD&gXP[h@.tO06%)a@Z"=K`7Mo)
%`m'\+,)IJnQ3tY\BOEl#boLfh)"pJ!'h^S25qnVtp)Vs$%IW_`n1k)t&Bm0?/'(\CX%..b1T/Zr$\3.3UdKnB0I5'nMkEARh@D7o
%@n;DAHR_7>V$=^Ab+QNZlCssIL(#^Q1:cmiY+%kQNh+NdWp3`nM^D=a_bi/84lP`#D4f$P#'M%V62)-d/$7VJ+P\*%RdR+SWqoYq
%X!m*)be$FQB-S^olnOTuM&dZ4mnPR[\0MYgZYV-+:J[@I&;2pkg*Y!D/$O2u=-<1XKdp\5Z#luk75OYVs)d=(pS(9:E_`Pe$b$I8
%'+8)Mfon+C&i9[;,&.!P:dBINBr#262[\<+bWo#)"'V8^Y`P75V!CO^i*"_[rB<Br3]fhm3E[o#;Mb='%>L/OjP*g^is7&f$AjYn
%^bp$6be!*GP&AEGNoG$d8d>WCksV;l=WC9df_*0jG#!#0L`/P*jGH6_W\WOm!,,)#dbR07DG"[?$I+jQ-W.g\1LgkYcZ==5/.48P
%TXI2f4FDB>e2PhM7E@s8j?bRGpeM4nA5LJ;I;Q];;OL"d`"]!Uh@,4C^sq=A&T_W^@SVBnQ\0.6XbfGD5Cf]f$SkU,(KGKZVZcli
%`*Q:.,[o=0M=Ki;4%-OMjk:sr'$pkKrknd]/T*):B2=A>r>?>e<n8c6T'/J[O[YO1*2NjO'oGbt@RW7goV/iDCh:PI7mhuPAiRSG
%9o#H*b80oZ_$DgH+QgJ6P>4pk]F`X^YrJEHaK,b:To5a[&]HYRIM..Q9aW['dLO2e)-QeEX;WV?B?2PlLY@uoC.qMZ$jf"^kr^_?
%!V?B0#Y($YW;I@b@%EC6OXZ@D-&>bZ083MnmV8Mb?oY8Vc_CUZ;K!.+VYnpn2k^WgTGh-mn;+s`6RpHaCBW,7&LFDLqSNYjLHK.0
%/2IfKbA'@TDF#E'TB6"9YXf@AO?jPHPjsQ!0Ll<=d7R5P!+TZK)j9GJe>khr:n&[S`-r4[Kn<9?+U9=[%4Fk[HC0,Re/rM%,aWhR
%Z,/LkWuDnLNKMq8JheKXQ=Tq0hZ@)#j`c^&>EJJekpF.e((9OU6r'\MKVBYl=s':<UaT8&F.$;a4W_2Y44u[p/>3mR.ZmIs>2HV]
%(m9n.%>&"LM.<Ci*lM"[8q'LN0-tYI%78N5+FgdL>@j$dr"f6G9R3;B";41?8K(,tD(),^6;,TiEf^?1N3kO"Lfg4H]H/?u-Z#/8
%7d/"UOb66Xdk.S&OeH3=%:5(]\6-^:ap=Y!;_k+YT+\"pYs0680HKc@OsL.fPD_b>3d=dQcC+NCP]7S'(;[+A9IuE#I,aXjP+V8#
%_$WYiH6_A'9O4nS^hJaeIJPh6j6:j.+C2j;m$Dfb:s1F+8Cj_='[Os8+Rpt7/hQf3gq?2"![Ib4",CSD5A3j.QDE5bT4=7ZKJFaJ
%'oE#'9jNY_g_Bg7n('UP6#OY7LBb7:-FY`7=fIo;5m+`8Wru]`'Vn#'Z0O6i`3[BQCfWlSaISOYZR_Z%cj-rkJ5;isj<UiXDrK,0
%_RK4*l;-r486&KY!Jr&U6@"XBJNj!rmV?=(@g30@0N=#UY]`kp*![4=C'Ad^TZit:.'1c-87m0tT"4\oCNfpo$<\Xm2UF3Nmh\2W
%P_p1bCj%,VZD4g.b[0?Z]L5R:e2Ft=K[MA=hifmT7j44MKTR>O-)tJfF5W13`[8_gWg+P=q(@+K(Qs%J)H!_!;-sKG+d,RKFJC)9
%BN[m.4^u0SK:el2S;>:\',2Y.AcVKM'Dd/TZdBS?34@f`iOI.@S(-F1Yb-UrXVJaE`nT]f!f)JBd=G.[DBQ[1fS78./-m_s/[+\b
%Y3JgI@gHeF!#QB'%lQ7MK;\e]@]7.G-\EL%PGK"kO_H2D'ac'T9nZ<koR7.h>`]Y6N"l!tHC*2OUS[<A(Di.(+*j!*FGa1=,4D[4
%WY+^/Yu5nrQbg2[7mJD-@QD?X-S$oMCn2[d$\'ZVT_^<R=p^3Sb_QJhIoA@M*$*g8#]4:]Q/5!0$?"$i`2K)jmK=j^Bl+Mi#mSh6
%0:NL63It41Ub<">7d<.t$;;mK+M(sV-4btS#"h*lH\&Y\/ep_6#4g0M![XkO!;(Cj&m6TT3tjWuobiGp(R"h^2Cq-[oeNSjTK#g?
%`1ebj3(q-`#1BZ3BQ%$hK[IVi9?LteqB$\Cm)<P995;42e?1LWO`V6(AS"AIjCV[Hpktsg%U$.WSo.\3X>OjjJV6lg_od9SI)-(.
%):a9!>[c(EU&h&*(+af1"=%!8)1,t)<i?rd\7+[O&NRdEoq[]gG3VK*)bcsk@RntW&2n9D=F3r"L/NVSNn'D$+J/8]"'T`,cd-Dg
%'">g4i-1LI:?uMFeZf6W+O4.D0MF,Fa&#>k#ot7Kq/Bk:_$modWiqDKko)&\N=<qfrU\\jW>!'$@%>4D^GLj%T9o?ch2JESfLdP(
%QC00#+_QV!/[S,L\9mik0a8H$+2P3i`(8%L:pR?+Pf[Yj'o#7.k@6Jdjq.F#OK?i29GK7MFb#Jq:;M<kS?tSGaHM.\Uid%`hQ/uc
%87T,>2,qRoU;&Jb*1`hmO`hbr2d7o8J'&t<7Zt&fEC1$7#u:T1#&B"l>#=09q>kC;r#H]Rd0YpU2KNR-[RO$*WX!dO@/-NoL88B1
%1!mEB$r^1UBWCj7\;:@[K:%0UCtF@2%EaUODG=_[:tl]l/L#NZN5e$ei^)-MkHqJ.l!4$b8^"49)A1nRU">Z85]&VtAmcR&*5J-X
%l/$WIC0/-T<dI0t9/2#amarpNd!^L2&e>mpA">):M+gC5=:oG<S-i:(077?XE@c`@EXK6+$'%5cZW]A%FOHpnOhfd#5VGH<D97HR
%$=,./"F+Ub=t-*u0j`_*(q#G^AD\P;9!pP'(=eO%:O>V9qn83'=(:V&>/(nH*k$=RV'Aik_-P)(*a:OnYj[\cO+[[.p55pLFa.PM
%fjkn>&km5[n85h>CKMLk'Fr&<%-s&$:82Z_VP9T?#b>L%<!]'rY]H%:7"6,>9bj1\KUKm#2-/PkdWEI<TN>kOC-[?kk+9R4>H\QS
%KIOH%J0L(I8u7t#.Xi+b!Cd[JObH=gRB:T,WSOEm3T:C)ari[/oprMn;5(6>=-I-B5o.:!Ur"VfV@51=6&EFDFGA4HVJE#EKn)Vg
%e"e/RL;i3$OQO[_`E'HM+o#UX@^#E)E)6mT!RHdc/75ZZ$!aVJ.pZ'[+V7:\Uun6R"!Kk-Uf/KUYFj"*]&]\DL\Vq0#ALLFD]jAb
%?]i$P'PM'$7)[LK+Q%]o(Q\pd%_4TZ[dUY&Khq=KrM<HD1I?^_@CdS$"=oCFNtVS9;FDLhJreC#pB=8qA.el]+]ON0"LQPn6(Bij
%>>F;#N_NY3c*/Xe)P*[-7\D(69GHPKZ:(Hr;s6%MCi)cP!HF+?BYt69!#YfA&QsG/.blE@Oa)(\C0ef!K\LC.'EJLS.tJt267nja
%J1u4;bHkHU'I3*3!@38_N+&EdTGMH:'mG2`-i?"*>[Xr[,p\%b_YV8ZMSocF][!&[,ZC"1TQcB4VC9dk2+Z1l*BHAGWSA8b!%98=
%iaTbd4%a$R,K<StEAAV47p5nd"%]e5'iT`2bt2RUYhNP3`nK5X>9L5+<&Qo^.@3KsV[sK43s(n\dao*sT(\1AXBW+n1FA0K!>5\]
%Fi08Jih4/IXiSSWU5"cB:D,ALKPis,MVl_5/IgVF.2*[p."+Y]U$7Dk<?Hl&o<`b::?m^mAP9LrOQa%bD(>`-SuHk\=I;^`&EGD#
%N6lR[q^-WjYZRGQ;\Q,;NaiTjJanmqR>r[laFq`p?7kH@(&N:s'"BG3o%pKo,T@?I;dn60b,iaq_+NQ4_@tm0&I]so/G"$i"i1]B
%)%kh2`h&mFabZbd5)q6MP$fum!&`2TEE^R?R=<K3TM^O?fIF9j;(dIg'7r;kh]KF->NW:P'Fqk^0!mH[IAdZ@Wt3sS[p$;k+KU1A
%P&7%5$&3t"SUc:n>Yo9ob8LI5M,:D.>oIKF`O0.7Cb%=U(WFCY)H*AmOmFC#0+9PM$j^opO@0+$``Nm>W'f^uYmP_&jT7oFqb**\
%8P2FfdpG4NjCC=e94T#NQUo[/X"=G\'f/GXTp]8k5@sj-gMi.8O0OfRfbOZopuhJ^_Pn^X9.q:_C<W&K`<MGC?6a0P*k@a]+q)=$
%3+;bQbF'/[-*gqmd@q3]V&k,S(;3P["i6Iid"#B!"U<',FNTd]Rd*."WMh$qA?!FZPHlBXTcQilc=8*(koV@nU!,e-0?IJ=8iUgi
%J1os5Co8UoQ]e"?=m\S#6)hjEp'oL'WDnu<FNl1e5bsU`92]WKCYrrBe7'\p]sD%^2@.l<+Z#:s47kMXI,Wp2Ai%Va!@UDl6di'4
%V3gPFGet)3P9^WH^a!LFRF;K2(>H;IJ^$go=ps8J$:#9qI%`5NZT:$Y1678(g&fLF,5oC"!,e)`-*4o0>b=W7+ugII$OMM6>TG4V
%Z6`q77S2at6S"_Kba6N)61\&H>5B#J&r4t#/_lds[pF'tfZ7%eR4R&FA_%l&CD*ulWS^!rdg#WI"%4Ur-K*>j>ccb4W3R_H#HAK5
%G3B82(\!_qS,/^>qI>eNKBFb1R6mm^j`K7_?_)@QG"Oe\)WghF[SZ\9L:,g@@f]5SWb7hT8.;t:U^*l;dmR=`.i%'^Zrig)<^(7i
%U<\)uZku<oB]W_NUq@?l-']#k#i&Rf0\]5f%hTqDp>EcfC\/='@QU7NOSo?GILfr"fkD'<JTIS@BPE2L[uI5*)$PYe)2p,.UKWUG
%S=h:q,sP>p1gncHFP<m1?@e?3ri"*+K\BT+rri&4C1Ar&Atf[2&lGEkK]HZoBJnM1P_c"B>#7MC`>*39SYJZE+$pCBpmo)/cj7__
%Td!]&'TuF46d1C[F\Te%J1!]7ZPjl`eCm4"$:f@1_XPP_VSgC!eLKJj/95Apq?Bm*<rO3[AI<8t2'RBdUkVY(>3rjJrcD`+@0;2@
%5'N0cjt8$;"sfpIX>HSA"^nE7/d+\.4?tc<UVVf>9)(u#E$J@=XJFjq6k,'9>'/IMM[YYeG7>I9!EdC-caIO<Um!>IAV(072teRP
%VFm)=Y'qqO"W;l$C</$p-&N"^+1Bn&p9rBl+](EB4!T"]6%mVTa\#^gX(:M\O$0RJ1s`u&2^EC^gF"<D!a^JC$nG4,CHaT9X>N1P
%KF:)0`/ILNThNZLM(q:]Q5]^u<Qr=_1r'cAd<%u!<Z?$Vcqto]%AgqZS#A!BPtkWUhD^u>KecP5,Q6sE-:o*`]0WL?UPcL-=*-.7
%<6\^H7B5]6-60T/C'PXhKj1SjNAL:p8Yfq*T`k`T!E-t[m_s,GZk9?g#'"J]/4.L6/`pM^r'DT]*M$72pr3^J$7'5S3lR.h`].Yn
%+^(+oG!XLa7f]du\0+Pbgd][9pC^/u8BNh8OA]8]_WG@U#;*L/V7&\4;5H&RL)Zm'pqf9AIU6LH_OsEE!=#!p<*O]mWAPkCNX>[5
%:c!OlOH#?SOHH'\D(KGsnO\6BPPCU>)NC+BdU;FpFrG^p(ick'VV-bIL^CMt;\NUN/k^ZF7,Z3_X<PT+k_'VVPYcBP+Y-1,1(2]c
%<-&BdV3c$&60".U)!GP:^U3Vn_>"dm3>F`EL-W^0_aaf,iC9!q,TuS3#aWPpm#E'@D!Ai1Yk]]u#uOk@#,iB^7#D=TJ71DA1lTuO
%7]S4<I3fGc+;F\tE6%0!9+HfW?7YA6L.<7""WI[i9IYCL)C0i$a?srTeuadl.7TU@HK1n-Jh/bf3)Y,I?t70dKh9a.h^%Q&`o%gE
%mAqH(Yl5!-NUOtcOanb!F)*YmL.o+@&m?H7A`[PLX.&I4rXp_b^KS=T+[e'-ZM>es(IL*R(^H?AlU4n%M1B?iapb(HbA'aUGSFm/
%*A&0F20J$A6iKMHWESQK&dl0A6<is=#eq[inBRGbBhkK;%Ujg0#/IMi=-kKQPXmqt,@n%N^4gs9qX\*]?lt$qZCM!.J]&>anr>_D
%jJc<+q&3cT)M?S^9Ulp3:I,[^16tAX83i@Uf-s<[c27p>Y63p\QP=F4IKQKYlj+k0rASGAL?W<7-/kOK]VI`%j"_a>d3S8.UA]cF
%&XBmreYETXQ>=r?nI:`d@j,,,Q=a9@VkfQ:U<3"S?nDGLJP_kS'IJmEX#n"WE\pI[`97dTAR<ALaq4\e%"K>EF5CB<U>H`M.dX2a
%0IK4EVD+8nlqpU;Y.+`W^Eth_rTfk4X.9iYV;jpL'Q%2E8s.B&A:O2[Kc6piEf/cnQ2KmRS2!?F$k!>a/R;`O'GS?gE]/I`,D]c&
%olsXK0d8I'Y%@W=.^Xdanu\--d8.ai1X094Hn"5k;GSeqKqOWd5;*l(j0:fG[,)R9])UUS#mKuE#Z(21`^>?>qI;pVa(2cEC^[Ee
%id8N6*-jqJZuLdD&,D3^L*Q;&Dj@H*'''ppd#d@,aH)+F3F^#EIQUTZ"P`YBGVE$td]E*-GW9hE'7/*=6kg<D6B2j"%CWqa=UGjJ
%<GFWh4;L"f`a`X0GrlBi?IMj42(MpV&kd=0'cqfE,<[fY_Qu)TbR,"iI?d-Pa5]a<R"u-$<&<4,7Qbo4\o\!%%3Es)W21TBi6e-6
%]:K-97[3@Xc[j+idZMaoaFOTZbCQ+Y:uGnLL/FHq"('LNU.Tr+Qs[?OL&[0>+b7<toQO,)oQU`??"?BAm)e_CeP>86+nqNaK83'I
%7lG7hWYOYX"s(?Z@D66e9GsIid3Dg#N6B(b8*E@U_KqP]P0'$4HY6_&1MAu3]ed_3O__;mhAM]uL8M`ThAPqrHf(sphBaQ-^QnL&
%g6%'?,M'J;V0o,&hBa]NN0WuEr>m4+)D^.qX<k^s/)_MrRGcmLh]9?ToZN6Ymbh!9`Nc`)_$+SiaB$CM81^VsmNKR%`<HjRE8?(7
%&TQ`$Fbag.]"o!-?&(m9U_sQfSM?DgHq8?lOG60e]b'!;A?]nh0\p;q>d6=Z9R"!T6u,2!]&Vs=\Nj`;)b>]WG9XJ4cZI3o,>WMl
%YVRUt8b\V;c2co=<"T"^j?CBE/6mD4A41Sg@Y2B'gE#a:eum/=B7LXhhg3@e#H:N2(V2[19@?u#e(m;6'bDV$]6mjSWG&-?1Bb7,
%h$VsY`'Q1XkjAjE%pY&VhjkqB4fRV!I!5eb:SdG0h]5OZfZR.fmXUm^EhG/C*<;]oWS@j:*FPUp*4,.j)=hI'LMt7X#FHq`j&<NN
%$MXXem1)?k.JB.r%KK3+:9AV^#2i>%Iu`a\$sS,D>:\O#+_^t/["[qn^nj<tka:e`O<;o(T'jl<#`_N$#>%hm]:SC"D:ldh05Pi#
%occKVOR:>TGn;I&Yh]oIN?i\$m>a=Ri7]$Sh'(%#9%6IVB?2i%c:t.I6ct\`p*7.1@(sa<:qA_Td'Y%jFE`Cu6bi#Um`po=*q7U3
%m`me$m?n^#42^nmB6q-Nj0XZ>dbR4K,s3lW]<`c68ti/pA'Wd('t-2G(HJ*s01Jj3Fn_0gN_kPmnJ\[g&WqZE'?YJgCdf[D$JV+B
%XBD7/'/9US8pAnEX3f\E6XqP]W_G"PTX>TI]7'm:geL="&=iGM;T40SF:&F?B"R(CA!E8Gc7mp;+t$s6_j>)JU.9$DfOKMKY&&=G
%J!'_LA\5:ea+>`s@_4uRZ@oXogE!LX,b\2imOZ7Pd>uuK!"3ALA:(aH?nnt"\ZjlrQt3\KG"45X@F*F%/jQp<KX.i<)0YA"\3bCP
%SC:SHTt>rqFA:B9h&3Z<d,#ekh#WL.#S%3t*C7mTSi*7S"!iNWHl'@UOl4)CGLuk:7!AkY#iR9bFE]ucPDiV;]7[7$[,)DN*>Gh6
%D%sQCkWMhcN9TbLHBE3MdbPdMLpgSbG@q0j)U\uKSRK#q_2O0QLQdCN=X1L>8>Xb7nD3UqVLf04*R6+.;i^\AE6\bdB]6QZhNk+@
%o%b1e>]jOc+[\Sn(j`nXIRuGD'tuas5jQFknD-D/PP_KQh;P;ujZ_\91T9+WP?HkVKA#9e'j:>"$qtW<5OJ:7ON_BDcZTO5!=>Y4
%amS)LZ_FI=h8'[o=rKY>\$hJAQnd'\cr[V<d2a&hN6W#[mU4M_eumBTEP8p8ZeWA>n>>BYMkTXi%4U^A15D0]b&E--=->c_Jiag-
%m!p/IgEC.F^@4I-B,^7k+<!87[tC%OpQaSF&jsD'6>pM*ZDg=cFq?b3</'2S+GCs!lU#LpJWQ:\kj@k*Qier,G-F&!$sLa>B[\@c
%:=!e_]LA'0<H>]J;X]=pDU"0U.l-\P%<V)^BYob>m9gZmP-?^p_9<Toj^-AMM>N)[%XTT`+uoq.S-Wrco?PH2faU+jW5Bk6Y..tD
%'_3.J<E0>Uno+knInENp5Bm;7Y();9EBa;bmV;oq'M&j;W+WO`cCSGo;46f&3D$T9L;ja]*8/Um@^[Ltdt$&q1@Z&P:M`Nl?g*S+
%YoW2UNe^UX[R2.):c9%t44p^PYomaOCe*u-Js[si*<_6b1?>i!SJ!GRAihn<S"A6W'Gg'jY8pr;,Z^2`Ncg4&(@8V-?C$S],A'"q
%f#?QoAii:l<_bcndY-r3FS+ep5rg0:LC:AXiLPgpW5Nk6l+M7of?Q&V`MBCUL="@\iPUK'%N!PGYIo$t+G>ignCec.*OrVrCBk6n
%"1u>A&/jJh34Hb?B3;5HHWiL7(,58.XW9ZLo7q98[!&<Gq,^`]6\L0%lY5`[BXES96u*#^@ipue%[&qPgXFkB,/=O1>!&)e"=0tR
%G*$BiNRHMuiZE;Wh"/=:nmElQG(s-V@om@2@)$EE7;;-30g]9F[!'Bj`O?o;g)2TU[0:Xd;aTcG@)o?lLm9Zd?Wlcp/('/Q=m]Tu
%Yeb!HCM*oSh6fDJSH/qG;=%4ji'QE\^Y>+;RRYEN.]XR8!f']Vm0muC>J%aea+oh?Vm+n&l61UU@C7o0W&6*$Fr73CZkQD"6*FkB
%C.N(EYqQY(;ELVF@G+XY4%^Fa/:(2U;i/F#W?"*M2ZHcT4%9BYP?(6A?jfW+\<,G')!_5`pQX1QO<2,AiO"6eS'Y*f)+u0VT$bgp
%JCT;f7QWs?lf`[b41r=":"qJX@A&Uaa:0$S.&LT/N-:GI#e_qG;:>8`L!^BBFg=V<c8_$(XZ_erL5^9e1Bh&5m>TLBJ#0M.THe'V
%d>65r0L6:<:MC(.PO3X\duN#['lqN4B2G4&lC++Y__[f<c8imM3c0Tj;;/iHONNtXBkP)B]$!][B*cm&bmL9fgm`]F$qTciWBF)W
%`h[bh$UnNu[=^Z!::]<)iWE1)gmTHk4,>c-XL*/4#kN>8[3I(U'.tM941mH@`=&ji#0&:j0s;VR,Hp2>r.AFI.AJ`BCPR6K3,_3#
%LC*0,$[n8jN[g2WI"g.sKTae*db7"@`MVs8m3Hf+PM5PG?rD#5C58W\kR&WD,J63uM+=@b37M%P<(ZHo3@!'f+gj,-jGe>:e.*o(
%L0TOge.2(#9T(,n44=t6]Y\E=T1Z@o@C8H:Ns*=0<]dt%dbcLU*Dd.i(fuO\KLin5'k07g'FqG^gC_C)Y$33\K>$65i5W]YYY-1j
%@3N'H]MAgU$F(WI-4#eo,.:u7#)g;)YoOmJpN4#6Cr\d`)6aIQ*Vh+8p<g/,NDHCe0d=&Y_.<q;=,?5Tc66=i-+7<%4rMC2`-1A*
%Vt42Nm1>;8!Hh_&fZpdJ<\n&FYoTQ7N)(6r4#ELlYG)ZaO[l,Lcf0c5%Ut8s(M5`r3&Ri,7&:`oC>(SI0\atdp>5JdG)!PH(OKaU
%6Z>4kDBiaT$%`bo:7:K?iBVNK@^[Kq/t'`fZQ6r8Musf,42R&f=rUYm0b@s(AA9\>G*!7UV_[!ugH<B'6Y8F'p'=?B1><Dn!I\?c
%Ainut)!r1U'*M7Sf.G3ir:m).*AQ<2iZiV`cYUX6GHRDIZQ7c?]PH5mfo?>)62ND@#okB+o').$m>+"qr4p0c8";5q[h`R;+rSMi
%LWjq;@3CnMTseI7%b]JB[iO<M$B=#+gQ)5MSaEEDYh0,OEC=Y6DA%Dj6>\*5f(IO9r2E5Ae96N9&`?N_[Nc-IE-;\im3#0"^f+i,
%<1aQIB485YPE>QW6Y8E-%FLGpfhSJ7;V*_Zi>V'n0sMbAfd$;6$aC]ob3P;D%d!;f.7UsnlpdcG;g@[8\'8l>+grWE'L0Kkfo@J`
%`#()MFpo-f9'Y.'M3TX>,@S$UVca;ppn?r8>-3;?WU7V)Ac%EagQBd979tW$N[+cZWub-m&[eC<8.4Pk6"ejgX5nFjO4CcUE]\fE
%YfEW(gBlD24.s&eN=4MV&UEgd3WaTS$Q[XL&Sm<"0(a<BWS#?cD[3u>g1![?9h#a>(:P$%4&QpCp+PcU,U+G$m"jMYX;4]1Vt>-X
%hFXOYVGY>Sfd.kh48RBr`pHm2%G+srJC<2SO7_BYonh,OjVR`6rnl'%h0o=dbEmN&$3C@fIsH24FWSq)*n7N/.R.8=R%H//Q]FB-
%ndYUNahJj'^O,jhhWp@YQbP*DDi:doj2]F(o8c+N(>o)]nON%3rl?WSItPKSU!HqjpFH7:^[e#r1Wt5Mpr2,+s7cONMjO6`hgP+d
%8'bAW`*/N6(\M^NXk9!>Jg.CRpJs;'rF0lPr3o<]=C*==#MgWXiT_!<9-)5PP2h&o%G`WGi.DRMBjb=&*?``p&!o4-^AE<$S*3L8
%_295GiO:<jfbfR`YPb3=lV@`bUe^3olE+%"kp\.fh=),DDg2WbfBi?4MHkW$%p]io*K=.=[$>*tX;#aQ8qFa:,H=3*&Xtm9`c=b&
%K,4J'AVacQYhn?XQ9.=^$>LihdD(qV!Am4?SuZcK>%oJTjY?t"VEfT12I,q86>q6%gc2(FL='I=(pdf"%.Xu\mni-B%RH1nHTCL&
%h4.9-QJE"k99"VgZUYb!^.+@uVK_E=]Q=Xd]o:,,AO&Q4%BkPkPNKt&V%X0#HR%MEAU=/h09`4%EU@=:XtO;')X6?=?/3aXS>=GC
%pMVT&^J'or]hIY?gM""hnoCcIX)]T@#eYF1B!T(.iGA1^;;(Q+_5m?Zp\d</02F3d0,G<i""`6mk21VQR-(Ob_GS:lU"Z[o"rHd,
%r]&OQl;*66.fZpH%diI>;UP=:o?XoD3m1l[r6bOA-1WbT,AY5YnOhTaVT]7EDiGK/YM?)a>,g^j]s,TDebq^@qnVd7kjMD;/,+3b
%0Xl4DQ#F5m^_,>k]i?=Zs*l,?<,J&>Equor[Tl:;@/.:di>7IOh]D*q@4(WG_iI;"U0jFf?5:#N(s:B/[!m.2`$":Dl!c1cXUZ`Z
%D"-DsMeL#A]pJh9pFc%9hSV#AO7AjOlB(bF9MHc3q!ES/oe0t@q,SSeoP+7[9^bclqqI#^Y?ijWkHS$9b<LE`puGcukEkudTB-m%
%55X<pc13I2m;1QbT<)@?qYKRVjn2O,!PA.!h_/pEJ&Himr;($IJ,H,<_n_`Y?Lm^0q)c:Pf.E=SRIZ75k[3FgFtnZ_egCmcQa<#;
%Y9s`HYM8N^]O%3.q"eU>BZc%@)U=S`r+j//rjB?]>lF/abL;s@X*9m`o.(khD0t*TLgG)5s5W\:k3[i,NNV-g-pRb+mls$doD7Np
%F8,1L?;;=P0)F&(2r6KaGk:A"LNhq)bL>S/F!8<0F#N=.G;::fpGae_?$pd@F7SpCb).3G]W3bm?@@0AG&t5hV%8=SQIl*6m!R76
%7T]%PD&tRnmXb=UnojhqlfEW0b=d!#)81(hXp0[KFnagsQZ(cP:H@FWKbK`r[WaX=^%:%uJ,/iNPfDXPDkHirI$Ct\]0FEfS)s=b
%c.2K?O4%CHhlH,1EgpqdSRo<G<s/9llJ;-tnupXmDdK',:)VHT!UY9L4MSIPF7o7nB%hERUpm#YFnZ8kqSi$Uij7='gCs$gG3/F?
%H-NMI5.P]_G3*%9T4CIRr6).I[nju2S+'EjB5YJS\Ht!UfpA1V\_3==IC\$tRshh0RV2=CG]Wj5H#o/RF"lJ+Zj!o$r`o/=NgDs`
%cbFmVo()(43H\=3(qP2-HbA^GX7Q&IjVQ+4ca<OoJjV6)HroA)iV_N?PNm\#k.dM#Hi*O'jRRQmkk<bKT!7!V:-!?%mdSGk1575]
%rT+O>qR#XppY+rueZ61&Rp1'R!Uo]b34=IpjeeGbWk;K+^,nQirq!n]>[8s8VgOm)TBsd"SNadN=-miD:@:!Rr[5;rhh9..\*pJ,
%SX_=I4Ztft'$qY+^8l7E_]qF7l06aoeb/t;jn3ePH=R$S3c0grh5o(TdkJ!6^3[8*^\eQKIG_DGp*6&=Jk#_-#ugBO4*68&Zsi<H
%`8t-h1lCO8r@VrGYHQ5(DdH+qVu5fL?K56Qpg0nF5"MI3ae]..)<f`MbeW:lANh;^V2t&2jk)L$0Yo:7a\DOI\7er:CVnKme$a7V
%`aJLe%,6@nUG;PWp+UubU2b\:Tu&t'5.c)gZ+QKfLHVT"nK'("hOf[dQnR?ZMgt?kak>6ibBu8jVA"?L8FN8%FSp!$rSnMHH'$V&
%oSrQ$^W3+``E_Nr:uRj72'mSjF#%@1o%>piSQGW?$)?2F,+fCCC#f$>ebSb.Er"T+Z9D'tNl`88kZPYaH$T+$aqlZHmcriH4?Gcq
%P05p85P&TSRS=X:qm^263gPQP+-1#P?<t<kI<C#3irgT?&)E=MNU=CtHO@p]O]o!_FY'liqOP:J-Vt=8WGcV1\+bQ'bMhgV*HZ!X
%ecn@s.bI=b@Ga#`'C>.Z:u"*UpZpK*Uq;,.M1;2SrBF!G?4Q,UR4t!q3Hu#RTO:upd81KM/`#<$c2OM-[Jt@b:Vn%F@D]<2*,RQA
%0_`sq]1Ha288^V@I<'VD4TBSM^-%r%1Ksh#Y/^4\K]Lkca1)&3*M55sS@s>lIWE$4=C0k^mGuMX*]_K>r+E;.7l1#%h;=HHS78.W
%$hmh]m(6H936AY!ORt[Ap[3eC0t"nZUNQVkpfKTF3I3=XG2#pLDuDTY>O;5fT@18tOE_i\U,n(9lR*,'ad8o!W'S#/\sQBC`63>s
%/LPqgS#[unlIG=Bctp&,L@I3A1/3V;a`T]B*#"(tEXK=:>d^V@]UDs@p?M#BHs1sTq<eH.IWi7aR8DLbH?+K2\#Ut>fn2qA25n^!
%b6d(h"Ot<WDQ3FK%Vg7YY(h(>rl`Ee'D>6d6>oW%-Q]^:jfX=p_;6&YZ1@B;3JP.1gA(MM%J"hepqh^S]mP*KF8#4$U")e[l<0W^
%Sm>%D5_"*]2g>D>CsUO7M6[p-g?DP97%#ft6O@*>E$`Z&c`ljWisAb\9Yni?92TeIHW#alKNSCQT2I8`Pee?^d<"6R-kf:t"0"_W
%[&E]5(?J-?"/eqo(1kWrk$""[(?P9MD4Y8iMYR6e;'m`SI95`1WYX^g.Fk.d)9edVe;%@g1?i$0qc83H[4%qKW>9'f?k-c"5@g)B
%&8Q#-IEQtNNEq"V_ZnGV<8f]aM8KFn31LNLW,Jra2gA6qKqJDBpKnIFk5,CD&09d+2'q6@,Q6sKYjBJo0AdFSB%Cbld;*aQCD3RQ
%en_TuS+YK$kd<W^B?=tm4Y:_lM2s]5[99PYfNN,Met/,22J]^'X*r>uD3tq3IL#]9I@HB+;t+!iZ3QWpS@?oE[o#5*UBsjQDkhRs
%NRgd:(1BNeU($mf8Hjs'CNj?LI5'/;?_@:4H2dL4afjUjT]^=Pf(.MUbN5e2bO&Q"UIqIDbEJDK-=Ld#Y2.X+IR7-bB$+3c!"@t8
%H#^5,Yi*mD:u8ne*6R)iRDD^30U,'EdTu"SN.eKVBL=&0h<=E`q91`)'CpW3Mu<UIjZhr.r@Iudic09LG3=G3#OuB_9V\N)l1[8!
%]"=rfSO>;`0LbogL@ZRSnaFO^qTs:9Hf$#3EQ@FXIQkHVG]WO9qr(nqgSUltUH[G/,'[E`GE?!96Cd8;D'_$VO+E44((HZcL2Grj
%NPXuU(q/PF7UtpL2#eq^@>`A/Bnn24jSJ6*ou6K6apE*=VrM<OJ+(_'q].-kF[eP-pu7Js,S)UAER/QM0Z?:uVr+$ESb'VnRK)(D
%nDM$_jZ3?&kC;[mms>LU-Gu5B^N9BucMtV>onX$\D*FG&8^9?R4UhDYH+[\5q9D"X3Tka-@sdLhqK=%sqWR48\I]DoLpL0dhS!2Y
%^UhXdc/k1\ZhB;_NUGE[q>&PoG7X6Am)R^:q1<7WJ/+V/_UTapb\EN<b26L>b3%.%<B7d@cZS-ZT<u0AT$X/fGsl_,ClXVE6%nT]
%d)F9BZ8k608&u`dq+WR:jtPK.U$Xs9-5QPm5@-"0Q_.h>EVWa$LsLO_qX!COX7PGtB@k=nT3Y`p>].f%cge>I*5cJW3:l4GcS")1
%Cni!j/]2VjY#\u$0V%6MrnGBdg#1R)LM=I^UW`W<3c_.+.:7n+nNrN6@4qF+meN@6Bg1R\s89&Zfn,S*?<R<McHPS\qk1Uh4lSut
%5M=j9]$64_$IPV?lZ3OXm;*VN+7-B/A)EO9*-dkR06?&_%_U#:QT=Oj#@;l*@i&Ph$+spcL@LTjn?U@]kT"iX8)Rs&>4Lk,q<UfU
%l!&;%%Q]467"H\V:+P_F>kC&7YY35_fO,@k5S!K.Cgmam_$i6,+(L\S-?_5MknSC=Il]b;Q,eo$op`-\cF2l>k/22"&!hW.*+pOo
%rAYd0,c3^g*:N-0mJR&GrBNB1ZZ/HBH<LSJp\:mIqU1>:[&[d7_;H#UqtfC8eLr^Mbu<rNT7As[GNJ:Q8T=1dlk>1!?VXuYj[Hdb
%>#WGFm2Qt&iEuJr4n`3/?+kRWG'S_rE4pWZ;'d=<T)X[Xr"+:,p\DBrdi$fI0Cr/bZ=a^8aa%RG9_cN].s-ZnYsX_mph%AcIQ;a8
%WLckggY#uiPek"=:93KV([c#tdh^RMK5cV>i.i)gR),)\=<&R2EJt"jBb!=eOe+fXA',YN36'g$\qd`Wk;^I$a4RjS1WM6436$Nf
%0g6QfmH.qW"kciKcV>RloOTto&D&;-2^dcq?Cafi/XPAN3M:]q]gX$SI!>*\*r"!Eg5Uk(mqP[c=5Vl)h4/A@*fdmH>ke!!o1<F2
%?+m;T2+J;kLOM4.]DTkFo"X$502JKjDCa?-C2Bd],$>-Qo/pS<:L3?PAY>_Gqs`//e\r5<KpV1E,SSg(DQ]k,AQQJ_`=/'>`=AKU
%P%Lqo$,_(@?qF:uTG]7oj3WN_8\5B0g]ob$Yl[.>Is:k/]CW[e%PoLmURt5:.I=9eD3CB-+JINd20mGtdL!AX*tH'@X*I>!?BYS7
%0]cV>"u@'Bm7/Y"2akC;L;WK]7@%iZ1<U.Z&jN(?AIcZEf_-R%h`T^c4LWkjX4iti\_3>(rN;R%\_3IA]t)gcS%ZB*+af+&g]T.u
%WI&\^Yd/!FYeobQm?^$riKMOSh!E>2mbI0Sc0jBRc@,9-49^Km4=,c#dU3R)TprL+As[C">e9rVFnP=Gl]Wd<qG[.OSf2=Z"OCH[
%ACu=R`P_uW"/19-G[-(C+*5Ge3'^`**=hN%.'JC,aOj3@qE,^;6EpAPIQ0PPrTUYBLp#U)S=\R7qEH;q$K'_<H9NWIXk2rTh+csm
%5+$aTEBK#^NW+N`GEBH#a[J/G&,9c*K:Gk!b\S<d:oh8Ud,X_qV;%S(?_4?fDbj.U)$6S6GI>dEN(V2LT3kleV0n0hZhfScNUE.b
%PE6'qQ1"S'D7X^H^ssOnC4$[E8`%1nIW]\BS@U,hQd60.D]6W+>2"ThQ_kG`54O04E>/'&aa]pg]UP-TX&n`S_o<"m:s8J.[u')3
%_6pln&s`)!0R4__I/;i]Vs0+R\]d9$k)3%B][0%80Whkllb*k-rqTo>XtH')/>)U-m'0u#?M5G+h>0oZdr%)25![Tb?DP`)<G/jd
%8p*%L%`0W_D5%8bO`+5A*4/T8j?iW;X[)\gVp9[EcGArCrA5/t^7VibOpjPZ0%seGkbi:LN5f7K2hid=@9[TcBFK@)a"TsRrj5&3
%HZFOXoD2oV$/5EP:<;Z#h>KPYT3;itq:X$E-YHZD1@sJ7`s9f%+-'9anpEFba'+oBa$XfB%cDl-I\=ntj5HViLDW=KaThLik]n0(
%EB)k9;;^@U=2`R^i-p966o3HLTg9;SAVA_u_0Z[EAijs>,-ttT5F_XO-$Ohtrc-(u.i08D@bgjUlf'2ID?@u#5oa'Xc+e^S91@;1
%CC.H@r9^qR[GP`YBc2:o(#n9D45tFoLCP@Mj4OPCDsotISim7AN5pi3m:81`rD*<q]A3>i$o7A6C?s_h]cB@uj<"$XhQ$dT'(CJO
%rZomA&%dYUIc"c+Q^X>ZNdd)`o^G4BkU&F!?$,Q?oi"fAhn<3"s5iTnL[gFRqndM2+d$bco#(:o5GlFB7p#0EC\&hn5&@]$D=X$;
%Q`&^\U`)7.(X6DqAr!_:rd'sTbfn5rOB1'):5_L'iW)L,n(/qRDdQ4I;V8lEs5ZKgpMMh?ql%R6%*sR1UZE`ferlUl+.KtS9AVis
%5G(*/pKatDM<3c^=?b.Pglhm*&"im6BtjW=ji^8N6s5'(q_,-*^Wq$H7*RNQ+"r++],^gn`ufa*VVHt,q!G7$5?scBGKHKTlBfJJ
%jf=k8IbZJ<s7i@$n_Gi?J+ToA?aKM7s&H(K^AAXpqd9.ps-[H5/53DFgZ&84^Lm!ks8'?G55sbK$pGXkhkij*;`a2KFGgOLUHN?d
%3tQ%-)ikW8%?3Ga@V`tMgDkKDH-.)uEn;A/-A9@rXs'0YfD5\O-o\Bt;:h[)^=]q)GO:+E=6SaupT:nFNbj+ZSq$[cnIM!Nq9SSH
%XJ8SjEJZ@JEq/2_aih#,fe%#(p7F349k,)W(X8'Ma`\Hm<_'l<I&Gjgrqe[)>%`nDnrA3L<rO:]i(^pSkIWj\kdn`QrXc:&#04d^
%\Gq9oS?HjJifdW=Q[h;f-J>oE9>no<a>[nGKKjR`C%6sl>9D)K]9DbDa3=DZS(i$qo03`GQpb:6c8-MX(WXBJj3M;VX$"_<PEFD-
%qUF'-%OSh-hB4H_mu82lS<q[X?$k9"%=7j.FmE=g"'_COI##Jp1OlYj96N9f0s;m=i]rOE[e6oi#TmS.>^=@>Dt8@5<jkK./XG=L
%BhH9)j@('Cd#B\:DSp=<iQ@L-)d^&2FuZl%H$I&7IU7!0rnBY$robH0F2!"snOIThaWD>VrL_=ilDuX<ET%)V;;M::hp^>TP]*aH
%DGjfXSU=BUUZ]_fr/N#fN`t2J'qlMEJgt]C6tL9,n++W>Q>??EQM"11EeE;2U2SKTik2EfgYt#2/h=@QMlf-WIH4/kNZ+8a\M!9H
%P<6B$A(u/M[l%L!d;>B5FKe!Mf<4JMB$9m1?.ked\eBdbkI/L47jch5\aB6K:kcDN#tFs8XCFrQ)<eVDD1;FAZrmRDPWH.J!_kf"
%>6$>ANe0&mre!5:r$M4qFfDYB,o`KNH@E!a.+s"HGBkd-][T8sRqFq2Z86t$Dt?$8PFm>nZ4=tAq=sU\T6`WmWHib0q&"*`AgM!"
%49KhG<T3tnj>BGAF?$JmLX!lL?i9;$//NZ_FaUn#.9ku:mZ7:.N9MIo5-H_IhY=;U=tcL(aehf<fGUd9@.R$;;q++d?p:2-`cHdC
%k,@Ye[3epO>1Eg,PbjWm,]ug"?ej4j?-K3a]-?=qo[R?Jo),K"N>t=Oo*=?7j_k\L.sGrDZqZmRSZdf=3c`X+r+bdGhf+4ek,=2;
%rE5FiQPLO<nar-t/LPq;`4"ducC2Q1Od`'C%aM10D^_3AhqjitBKV$3Va"]TnB>G1-#52:$f-@%&A"VhjOME7mIF%>?;8/WMq#_j
%^NJK`h]Qj_R)bi,8WX,TT$KQkr*0>^,4Q'&REdm']YOR:IJ-6M`a77=^2MNtL,lk*L$SX(o&\lul]X9N`<Dfj5N+A"cJNP'3:)Ms
%]BL/8gG:O-5F1Do?WLOg]0()=BmR>]H$'<DqE-8WEK#?c%.hVZ+I"1A5=A'!N\A]4/nB;?_JI]_;aL)UM93gCMtr`i?8Qte%2ND:
%GG9#TK,c^J'6^VKo"kus\i"cf76OXSn#8?W*j#l*j>n8K[OpW8[Qup\Hu2EZ?&[r/O#Nq9Tmhf%[U%'nB=b7(*Of>2aK:5'h)>&c
%Q!K`;H^eK=Ao:nG]k@.63cFT90jON2=edi0=YY7N2VShrF;@N?l6^;bPV))n5D@8LGp9la*:+tKmdKu$j/Ggk;Kd)"$9.ccb-p[%
%JTAfFaB*J-*\F*3b7]>:&W3RRHeUc@r5FO5-`rhdZCLBF)`*`QpXpn>95<tOp%NiRLK0N;e%lo;)QN.h7FNe-N3[8LAX1lG7CVhu
%XH7h#?baNLI0k:d.CV@pH7N_CkIS&3]NM.]o#s?fZs=Zi-'"$N5<XF=n]fTY?ZT0=lCF6]"$UM1d^&H->)T<![PQU0`#l9lS57R\
%6K_:I/MD7PBjI0-48*.&ouQuH\8HU-QU^;E]1[&.k5/tYB.m^:?[kjkKcY22+7k+&7Zg0#l.G+bS]*:OO".>Nk_ntZ[`O=!\_K(S
%ZhX1flKXn:6hpNE?d&&EQe/F,V`,5!qk#7&0@/7pL\JC3T.c<,rFu).hC]ns52lN8jEgarS)qc&2#lL+GoQMNaj&*$qQg"lr(MX/
%o1]2WqX!>DY.([Lm8L.l[eTO?hb3b7&)W08CVEsNGkUjnRU9fKAMY/j]cCJXYOBbCC07u@790865Z5LURj*c?Hh[7#F:KeG6,bj_
%3!U0_UnAnPQdr$Dg([O\>G@#>OJ7W;gDj48k#'!Qc0l]SCc0!5L[)RjMIBCbd1##lpODOa\DlYkC0WLE\>"JK\>&lFEQ,.BY#s[)
%UVNV[K>=4l:LLGq)H_*r:LLF3l-am.07")s`Pr;fM]1KZh<(=bY%[[AU=g5^SG_%"WK1UmZ0c:.1!F(F#7)i7DF7M\G&pc*%P'_R
%=HOP5p&*39AJ"QNODsH1Q_4k9\\&@U@6u=Hb:).*]&#O32p7!.a2V6kX4]U*,0uIDpS=..CCld;I2Hj[4R99=N.iI""1^5-WQg]8
%_2?T4Ot[#lojYI0<i0P_`\7^_&"bIC)GKs2a4AFEL$Wr]bT#[LnfcIKJ^j(TcdGk/+>a)dRVcr64aFp^-c[28b^;2U6KTk$hS9iE
%Ola^+nX$YCZddqC%#lU5O=I9H4(eX\ISX[CLT^V_NQ-?n6LF]W>[15raNh+BoB>K;_?P^r]dh@+BZeV=On\GgN_JBsAKC)2(I_r"
%*b3ku[sD3C@Ss0H_SB#elN3=V%Q0ZIr$erGCK9RreBu5d/YgUtArVu\lAV8/FEQYKA:5!%/[#m@QXKeXYR:%<nD10p[htNejt\j%
%PT,"dc51W\(/:-'CfY=7ZsB_ZW[S/*b!,^c>ul)XN6b.]d;f*(jJ-reF?H/s2CjZ$_<5*d1hc8uSRU\'5Z&`d:u5XP[0W$&e6cmf
%I+!G(n%LGL(2Hu.fPc^0&#-of:JId&WuE%.>Uk.9fgW5LNCJu3kK1525.j([X]FK`l`@+U!9Md?!t<^Ymqm!*kB3@\FB)Oo+EtE[
%"#OY,7EE@[_?dQGAur&&5%<?D<jZ"r`6ZUB?#3f.fue'0`^Ujq[n0_@F]E?kJ&5,UjpfhYcDYSjOSdr?1>0^spPSb4&o*1:F]rm-
%;-\A[6f2<ZG'M2*e>2J*;IN,'G7<?_Prh5@-VEI@^?Qa((<X@4<F(%8!22n)el35ehI`O?ijMj45PHn5Y"nXh<aA1*<cg=9I+.A'
%g#F_=NCY%)0lUJIekl(cZL0Jo]&^t5ThFJeM)Y]7X".gW;BI4rE?Qed+)=aG;3uk`DLa;\ak:Eog8_cj;&O5K_2`mC[RK::?A/F2
%+dYTK05t)1GY"Qro>Zr\_YRmA-[2lW,c[t0-RM%0`5Ko@c:cB,M)d4Dk9W<f]L9@\02W.<;-p!QP*[S>$3u][#[?j4p/1AnY1m5g
%@S:TI2*hcXH&5K5"S&q5";ZqA-L@VJ`8p)&:OTAm-:1F#Qq'bB=MOWjM$^pW1!sl29[H&\EFPZQ7q*Za;\Kh>H$o,"6nB4-FA%?2
%nA&Ui_"WZlXu*!]gb"p#`5*]T@G=([ir77eT);ij-=WU9Li[=j+]8tf;edN$WJNVmn\>mcE$J&a\Mg95R`1=6[aiEsLB_^)E]ai;
%=bQ"m:%IM\M"<Y\W<_<bV?k^/ISK7g/\8H8qsleK(!m%Ck=:9c&1hGk-lW?@1rZ>60Q7l*bNG]Vfh>V.A&4+iIH,'h%)-ludo^:p
%,C3iW/6(\U(H3dXptJ>H6_9$5:"ZO/\u(/7NUaTJ*/mH:Tu-0De2PQ`EJ`+d7c#:=%ul!MogN.LP`9"MMY"?j7d:S8MDiW<2'J8A
%Iq?WkF%/YA#D'+DD53"(3>)b"0+Z?#,"^RjaehO4s7k\>GEf4B23=pVCXYVnf,\1E6[V)Y"5\.phlI5ZCqS>sB;LkN@4boKq4%/]
%(F+spUftu+mEW`cm`\oAK"e"^r,5da@eVrJ)g,Q[a%IGZ0F4_R91dreS2);__f$/!;=Pr;!Zh97VWL4nClX-jnRB]?n,A']3V]'>
%%8E&Bc#"OWq`.1O0I7rVS@jR$FA9'JaHM<0fB,<Z[?cQ>nBUnPhgJl1J8S'tDmE!T)Y`4Us5QX!=1K4!i?M9q8pOF.Q#\6mg+R5i
%/GW)8Am>Og02PD-Y2.uq1,nOfq4d'aUq20U,\mX<atH@RT^rRVAR/h?lIHRO(7J1')ea.ia>PPZ;1&ISK-n^?OK1J_ZIrRjWdBXj
%p:[&Y<?]8p#Xop6U6$85YA\$168hsiMaNP-"=rKiAVH@<ZLM`'@YZh,<;2-gN,5)p-G)I"NAK-9jPKcPiGJJ"4sa`6TRpO8lqL?u
%E*qA,p3k,4qIn0,.]$t*FK!u)VQ]<c;JN71$H)TFW@Fb2eY]eB:]7#PZK^YcWg)*&?i*Tu'f7:9k!TOh.:8]t.K5Gb.3WQPUe$?^
%UeFD7P"FmrA5^jQ9M4$%8P,C,.G^jp9"IM>-&g`T$6M3jieNp9^F>?ZI`G,Sg6,$!l^8I=Qq`.cZoO=JUNsaVb1_fTE+:Ao0"gl3
%Y3&X1`a"D8n7jReIH?_Uglb<%>B20,;_Fp&PY4T;F"(uo.V6N7*)+gR.OC>(Z$+aL9M4$%8SL+p;H@GP%e$VSJ+--(YZj.N8jIXN
%iK7/oAu#gS*?K)]OeNLQ:8EQM3KYL%Y9m/kL."Z)>7rB.6R$+2dJF-/q@5"b*arW0Ec7<sqf?g&-'gsAYe_Q$8>P<"n\C!GV"kG.
%"o;dVT98t,9$hAYA%c*Q-l<K#-nps&(?OB`4eDFF9qf([6Lj@BY6XO`BK)hc8gJVJ60V#,ER`\SL+/?QDb!l-."gB:G#Kfuh%IkI
%2hc;$VGM0aS3gq*#%c08OZ$cIdNF/tD!_KI;CK9!6c\fnGeG+4]]Ji6Mm/na@nRS*H95jG`VE^mA+"[0H>giia0,&X*,,>IgQFec
%2W[`_VYj$>P!:B=bYeA8gQXo/_Z\,T\"g&3PX06.n$hVM5hVAfOlXr*#/tK(TZEh8P!S>5L&*5>3.oX?c"1Dj@s]g1?]qsYG*"s\
%R`[l-lIH)1WsKK8#Klp,oQ]XgR6P[pdFiU\U3?:ST\S,U&c-hR;9ksjRVbO9MdF+qYak-E&+4L/?$kUZ@hq5m93CqbRY?I_RamdF
%)X;,C%gm!ge8T2(PrL8EY01I$[`)\^[GH>Hj4j$XJOd0^,(IW/gl4,VRa!YTRa!YQ[`n[Gr?#a.^"GNc=Lc6dWRpq[DO]VXq]4RC
%^Pt%^e[P>@U$L(OlmQrrRT90A'tG9=Y.M=,c"b>QY<Cm>"E6:`\sJI"iO?JJqYb3ZEG[Vski8ema1Qnjm-mF@YPg`GOKYj*Y3(W0
%\Y=GRkhbe5F%,iu[SNirH\S_qiN$Vdl5@<^L9I3-X.N3CpC(Cl(N]Td`SAom\QLoI#-efP=K?W:^`1l#iX\6'cMY=A*)-SNcA>8H
%K#]8[GeS&(e5LCo'\W'j68L>)jb"u'at9o6bN>F7=VIa4+RCBBQs[Y?VQ<F_059*digShc6iIE5qs[\JH0]Zd."=.V_M)uGief:J
%e$Qf>f5II8hP_5@EYN3A=>1]d@3l+7HF"fC?>CZ&7^L-d-^:elVAnF2`XS!pL#q,i!QC=t]N>n]ocKtV?..Y.eqJ&.ia,b=cZP(n
%0ds'J#(!"56OfiJZ)f@pfi/-c'ekq)A4D6hi!&*AJ_uL.<Ye0j#E))Mp:NbfAXQh$[]XiK#0Y5Lk-hG8&V<'_.sD!Q%.fg1#?-ZB
%XPrgIH2[CpF]*gJheSoK8el2Z=+>-s=/a?.mt0Y\4S\1[c'op)#?[+lcg\HH!Cr95MWNfjDJH$l]2%`Yresjgen>F\(WEH>AU,$c
%MPF.i(=5m0T2BN`RT'r8R?]nL#j(d\"H(/</JgLYTi1/Zn(Pt)0//L^0AGB,0WOdp3#t^jkZ516`JT&M70_b%h'o[p:%";I=a&8s
%[\I,f\J&=[>RV(c/&G<GJb:@,[bI=\PQ[Z7N.cIS$s&F<Q!Wm0fX6gQqBfo*DnRY3TdZ6!nC;hRe?(!\FF6gOJqbH@MaN]P`n@F^
%aEG`pgJ.E^0UI[!?[#t_%nEhjd$gK[g2!JD+LPW?p3]sfm51i,1m!\D[$M;8+.M'Vg_kJeXN+_cg;iVgH2OrEnI8NXh6aWWl8j=,
%AMtoHTT"*NU1.1MFMMcb6+*XkBG\D1A6U-jLsZ1,UnHpBCq't(E-CBTP(L::I`JqT:Fq'?6R,9Ch#+UV'2.stlZQs?XM"g4UG(!h
%g<tR6Io#Zp%YP/]PXlOA0:#(Y,Z07L$DB=G:UtJ:(C;BL^.!58oAPg"=A9kbM%==G)43TR"&g_J)Obh1f<36%QX!4YIY5R&FI9Sr
%`j,SI%;thZ?"gmO`aLMj08*?DX893#*@a$s[3F+[A#kSFVF9YKEn64g@bV?Ql\4HVC(PN!/2(&cY^!`VXH;VJH;n[\ARPAUf56^K
%[)CNp4\*%5Em&Z[<u@[Sndud?QsD9o_JJk?IbBqp@:Af(79N9S7XOEpknhu#G2'4@;7_kKQ!64U<Vc1u7`$p";%5_s?Iua7hq&$7
%7gPNZEee,afP:.GQE%$qHdE;5@=`_LT$s-UD3"KEDH87$eUAI0C9/u`ak9[P"8Oam@4elF)C)"b8+s7dm<ppl8/8C@7H7j!bIi!:
%,Ot$tq*fO3@s*p2m,6lNElCE]e).R"NF-'9mpEN<lX3]X;fGoPB@)sFRprd2GJ#@/nq[`X%f)tJYb'[XOmQg,A)@.Iip)PXfP2X4
%]a7I)d]c`rSLVhs1,O3$H)Tk#"G!)-n^Y64"LXtmJ:gq(YA@6&662[9G_F?"^ieLh`Q%/Dk)S1Odr*W_khS'G:[D*>ppG[n.7c#M
%f1%DlU.7BaHTiQMV!6H+dQf^ZcsAo'II(gk<uZN7X@5DmZs0p2pga'Y)lsmcBl1DgL%p&=FH4dE>H/&p\7VT/P@+'X=%PFW%];c]
%hKLW!Q0tdepcWth*j%oiGO8CVC/k>M]if'P'"D;6^a!tPD64G\UK_H>4#U(FCi!-5S19'p6%)CqJ%LU7jrPH6D=_gu2q5=I:114<
%R-On;3e:Sg$#FK^g1?fTO#2"jR46rZ0b!=Mn:o0>Vd&Eh6E(X^L-83(Id6IQVb5DN^B9skeeuaSLlnQIFCDpW(]^iEY97<@F/p^*
%AV%D:noC3KD)5;%IG7G#=/i%@,qbQ&01]80DZb>lRbBh:&DZKX>jPC<W/YfH5]c+ZO!i^c>%u2Q*oja'b7$,Rr!6Oo^5Qpo9TLf=
%;ItKngucRL-SVY5`G6QQq(P-/h_%^-:LDG-.!$WUrWekR7[3WW0l:$ZF!Ji_Lb^o`b`+#lJ8#KIblO\%^pND-e(fb"8<#$A@H*N4
%Li]l&#fS3sC8HS"`QaRDLV56"'uF!*p];3Th6hWcf\3XLTn'bR/?upgKh]opTbT:BMH(LW()N,O;hU-HLF,f(C.lqnWe[ZUimhl/
%[sbNX=&McX0M1BF;DSYgAIEWab*[*t>H)&#2-pqgaYm7]?^/^A2O9>cP#MoW#^e>*Mc"*5HjA\rhm*9j_"0=Lj#OgmMVX!3pJC4:
%L!T)D2k8a0C[o0Ao*#BTl"%Z+bj2G_i'?3HaLcE7`HaIe3;"Tq2Y#)5'CHhCP&OtE&,N&M/3;<]Na.K,?'OWS.*cOmPB#S"bJ(Sh
%qEV>lUGbKJgh\f7TiM/*>IuD0/f/0>SP5dnOiaSNO:OB>7:jH"3%a)fXYJ,u5([b<R=IX2lo<,hRnh9;,A!]s;7,QIWGNG##*h9F
%eUl&]`+_9K0#SSn2\agUZ)fn_pgX"_`[Js/l(mbLet:G]2M0D\4p:(TK0knd)"qtP';UTkVH#4S++K'p;44Ngb^NMeMepo[V$&AG
%D%bqAgU:'okP7r_lYK+7.q;Q;Bdk[BQ;'>kMpYa,+ku*@nsf`o/g9@a^U"Y5/AiCH;Nn)`M\ZDmS$suL,u9[]BttA<5UE`JcS`G<
%'R_Pi!oV&Z%^j%u!N5FoW/Br@dI]oa>k7a*?0FmPDqD.n<KYg8;qlHT.hOUW[J![!.q'l22=W9pO6SL*;AmYIW)T-\oNfiIk=R>6
%%o*K7;cB`.g#gd5j[a5#C\4aE"VXPfjN8s^c'#f%:1KQ5IKT)0JA8e9nmeMG7l=jpKtq@\?g=u6Npg!t]I2M.q!QmW>BFa_Sc*'s
%eGY@5##c"km)rkU?PIK?R$0oU6p[)j)'))Q(bSFHJGn]s\SUQA%!8t]*mD&6baktWX&'>hD#)gfd*9bMgqm_Wk9nm^oO,[6Cb#l^
%WWt<eJgKIl&1t.^L#TUSRB(E2f"-/]-]gl$;1:^Z:/?,r;7c"t%Srebm;amBf[E=aYUL#b%4EQpDk:HuAA.<(JLJE9FdVn]paoJ$
%[C(W0$K["Yhf::0e's6bKNcj,Y/8X#7k;X.i8P5^::kt=Wp0GMq$jmf'$f=I)6b)Rckb>/R.hJC;M=&(;/PF\\`Bt("ruCZ>fo,I
%XFm6ebIIb6="(BO5nmc#KZ^jT?]4u:SkB[@ZI-!JcQrZH^7J!&e;0k1":J%D:sL@uJ(jZD<XpH\<K\(Ho%HU)O0M_D8%.Gm7ti!X
%i!bqha^C2[XN.fX5-8(+lbN]V$_um73LM)8$eKmnE\[Zq3>H&/S4k&i&*:#E-W>Jml+^2h4n1M*K,a4Km)j[KAim"%JnUCW"/JcH
%csb]64W'\*q]W^l3LKA8lI*gi'q'M`W'iGQd\YqC4"*ndLi;UqKN?V]p?TXX;H^8'7?9?oLo"TDFhUi4Q]h_N:g7"iW@(V4)c&JK
%oOQ,<O`Y3:08%_^Ge+jh86Z041GQpeM9)0e2u?G;54`g=]Gr^\LS&iPAmULcQXf1>R!C^?pu7^.A*2n*ZOGp=b;&U/I#,ET[jE5E
%j167sgGukqJ$C2)_-2\>aTqRN,?!@)*MNjo#e<ARn$_5"%1s-85DG[?3"YYL?b7q?e9pi+G-0hRg\m.N^RoO94E.!@mjk3]pMm8)
%(G#&2fL^RbD=YMkjpLmOM.&"*oH3l51D@Z2!'_:8cNWe[;uun>o$gaV%jFee7CZY)haa7JTE;h<4cLuMh9,/1TG%$3G:3iB;Aa(g
%$2bR7KU!0pZO(/NnmaW.^i+\'`h-_BJR@l%IIR$\He,ufbr,!CpetN&5DVPkX9a7dJ@`>u^6r.-ms^lQpf^LCHQ^CGLd-$k`LluF
%GdAju2#4EBnY[t"?&:e"E0p[)4Y)(*`h-uPr%S+,QbZB+5KtMD&&cGK4cj,N[#OMp"L3M#pF%#]Mu_Q(:o%OSFqq"o?f%_Dmf5G2
%bG&A&2=6COD=S9JE<m(-^F-qdpc]:&6n,ejb>$UP#)Q%jfC"9Nj80bo9anV.pY76B.rmp#SKo80ZF7kV=_jcK15RmaGkJ`5/(?':
%I5Y/3l#dhf=-*fQq$JoE/EM-BEj8ojn^7%,O/WFPD>Q/bG[?u2D#1L@q28QsP*cX;V,5N8fAtuhY<3p$$Pah[Im/>%k(t9(glIbk
%okX#]ib&#Mro<1:=O!2$Z!fa.>>mdhrTZmQK_]4kE<MmlMat86nG'LOqcm$)>ap/aaVZ_'A_r/qjr<B$lf<+@aUK$7@.7SqUsS!O
%CkC&Y>8AO_MmS&lA".l5IF]4XGZ,"dCFKHm>qGATnHO73[C`V\'uu'%Q*&3OlQOpN@-ItqoU:/E95_EBMi)!!X.F<3A5,8_mUf`D
%:bF=kG&:N=G-cRL'u-UQVe&^:PtNP19qlGRoS:;iBn6pQ)tK085[:!I0X)h1H-)a4c>U8G8&R\cV>mq"*`':!Bk\,&H;"NrEb'D7
%)'qXd]6_D?FDk-2UB;s*(%^".K'#M8NuB!XA8moNE/aJ.R,h\>I(Y*kK?N^T)a:tHRKJ3.2T\\6(hEg#NlJ0V-d./2HP8<bP)nI@
%X5'o"RuSt1R_59UXn#K;o<KFgjQ#q)@T4$`ZGj!H5!JA]WCA$#'hSNqNI834Y52^G*N\)3W\C*VHU^h*2gTQs#IN_rVTO_[0k"W"
%'LQA)5/)OHB\Y(PZbc.Y?*uE2g9%aHC%[Is/b7<VHbJh4JJgq'gJmJ_XF<CA0$MI!;!VRb4MLdXahD&MD(Ze_/@r4m($"#Lni#?@
%QFE>1RmT_6G)O1uK+]r@NaWT%4lgLuddu"4QmQ0eT@(4eYPN]>9#&IT=$g!4M08@bMltrcZkjiegP.9,jP"cm.u`52?,!c'2Vrqn
%/iMn]fAqPp]j[g;?CI?b(K+@b<Q]0jkrp'XrVuSP3TiW9QtWAslMTJWEq)B?I[gH-k'[3!n"94M+&ot(#/$E+mq0AI)=VMJ]UJrj
%SkukF#/$G3rOW<I)c>m\Xkg9D<cc8t9^D3X5E$0.:g&[&3UiJ&*'1S?@7\BM_"IH4,I7Fs-0&u)CO\rWdWp\P-Wkm\Ab&,rNM\S5
%[0??6PdR1F<WGON5M:eWnkRA_:!gi$h=j"FrI.QLWG>RMV^*UR05/<[o14^<m'kP9/XK#98q7niSOWC9APsI+>HF:12#/O>$PBg(
%[<6=/#GnVhQ;_!A@/r8h=CG^Ar!;dr.c[B2cj@W[hRM]\)NFG0BoocVM__#L9WRg*]l<mU<=TP9;^2f`TrmHr=sn1DlVht^h)]i7
%"Rt4KqC_i)7DE:)S`EGZ.kkPr!)F,"G?Z\Rc0m+`f;/9b:Ui'_qm)!^^5N\b1rY[K?*tOZ9Qj,GGJNChA^mDa8""=%'W<9YSHNo:
%L*hq7j3KTEk?[!=cu+_AKm#"S5bQWOaK(s92=U3XLK:YK&.Pap/^-:[V4_[h[R;@_'=8As.8&_f3.A7bLS5,6Upj@.V<eT!V@7?)
%CCdh7n.f6[G^74c\lQP>GNE<k5debH=I\CB>%qg.E\TW:]W%HB'CU<2iQg4B+a.WKc3$DD`SMPnUEc\Zc"b\2i0oYd^(7-K_N_ba
%8%LpQ[!&']3Q1dko\"gme]KjUcrNjLZJs#*NK-A)$JLpo;(/TB7Pd9+CKG'B:SpWEXE$RiJ]((H)G&OO?R@0T<*M5"baQ&M!99?H
%,.rpd)7#mkM;gG!=f`59;XKr!BP"krr+6%VWi2OT-I_MIoA%G:ZT`*Ll[3lpC.3tN=$+4Va/Vn_<^-JH9t$1CSmoq,b"YL^&p6,[
%X9ci[>34G2EN(D:p-g@FWDflQ;ftu%fi*$Uo,W]`astB^:E?K2au3X*p#E+L#r)0UKIa7WbO\l*9[X#$"dt3pc2g.Sj0Zpe%eo(T
%/=MbkK4NAfX'b!od@;_UF%(/QkX3K-[@;J09BK`K/8DX>Mb4`<5pVB*QJPI8.(u<PG'8*=gi;q(<uJO86Si\"IdZ[E^eHK?2s#tq
%k'U%<WB$2ls,Ia^brl\/TpqK))U7;p-]DM+gh_Q<@cAa(^h&k0mh8/qBl)7?Rt&V7;,blaCcb0)h>b%+PFp$O;=*%)%htXPcOr]F
%`OX\DRc]:NS1se&)3S`1i](Arb?#<G#WK@)#pV6"(q%qtacV*MHD&Z6<iXKthIfa'#a?'P^c$\(/IA1<I]"(FGDn!H+tNJFp$4q@
%0C<l0m>c,"SYV1V?'"S]NVMW.'>Wa,/"34djk;hsCUtp^;Vn&=J=I=!+1DYl,0mBRr4UI99[&&M)o=a7]eW^JN!Q;XAJ0"N&a)Ze
%iH]\R/$Wg@6FQ:171MUO.YH6L7ViG_"la*:75hT&MjW'i/G=F>`E#<`7N_caVef7mJ&7Y::qRl?f9nJU.nD)&FE)kg,jU@?(]/k2
%T=:R<s.+?tSoA<Onu'M:o(S\Ciuih)?O?9J!phiKq1lJ8[]Q**]c>F>,qCG=#od%kfA>]0TXdl*=g5-H_0/ZcmBV;Ybnb[KjA2YW
%*B>E2K<f6[PseGP$.&lCS>:#X5ZNi;1sdN0[]M2J,S;Z!]Rs"6^4h..kN*_#VsH89#T,DP44e4j27jgH^=UVmooXH.g%`O40ohC)
%=SJt^%cV:m-]%o+ce0;#Sg2Yt"T85q0<["C^-90Aam]2pRE?DG*ra@'++<s>s-Da'^-7%5s8/i=r\I@,`ufa#q9,f\QAaehGAghA
%rcW=-o&K:en^[<Ujn0_aqT"<flgp>3o<YO>hn2-7eP#q68,;Dd/`,8&/\Zdkn`fnX=l8ChN.6tVnSLK.?Q9i"j<"+5IlTa(\ap&U
%^Nt,#HL7?d*cGECq=DFA(:II"?W$62q:0'Ulg)rZrq>dXjt*^:jkET2\2_p_O?_Rr,J<1ErOmZ$gVVW!?!&2dYK=Q>qssdJs8-<>
%\UAAPoD*:snLjiSq!dG?H2,8!j-rIW4l5`oO7W.^a(&>pZbn!VR2u=r0aGF<Qb@gL/&:`Ume[UQB@V1rDtts[p?'uujkGh\qXf8E
%?N"od^Yr#bjS8Z6oI"g0j`c-$o>ehJ?Y6>Q9)-l]oBGl<Z<mClEt+E4jm5+uGQ.I7l]\ZuKj5h]5KZiufDK@Scb@*/6Z<"Xn]BOl
%e)@()/ml=S]@h@U4tmbEIXQ6bZgF/Z??Pq/[sr(/gqh<$).(DME7rX\=k:umb3-tb0?a9BZ=//455kB3brPgWo%)u2?%73BIJ&eO
%OeG(&5Le6.2p9[NHka94^NOq?kG._@8$sd0rG,_)h^i-rbD4h\ES&8q*Nm,qB8]RXp&5'r>`X1njGW,hjlO[p?X9i7dl5JJUqD0U
%I`6dEjlO39bN%dPb:a('r#[<<B=&Jps$d0T:Cj]>5*brjAXU<K2fp3Jp,/4B7.,bY#bB(DE-C\T[.#N5OOD-5I/!HF4E\BVHIFTS
%]ooKU)VOoXM`eVD/b83(AFO&Ue'X-7[I_\^ptreG5P\=Y3h!K41M`2c1(@HbWVh/2T6^&)lg`dq>B!Fk`nP-K*upp9TA6\qDI&a(
%ndbUWbKb(\0]*i8!X:I9hdu].h`_\/9XbMnhE,Z!P-bOpI8V46q*XWm*+5l2nOT!*aeFH1r=?B>acPugIOfI1f7$P-q:2NIDjNDe
%$"'kdaF?E=In--hlM>2iYN9B(34_J\%r_IN^?gH0o<SgbQ,L/?/b5rDDf>WR?^D_k5;-s3gg^`98&9fu"nkfSJjhDonXnRE;*Gc2
%2*\/8LK*Z>q!m2/U=p\[D..)UQLWRW`]r<4s8;KZnuJ*1AT?_LrR/>c/K?C^&k&\ND?ptia$F&'fbTZ&`*!>O>Mj#$/#/XO`hP0q
%o>fkO*mV>&PK3]r`o'.3iV&s0nF(2i5N8Td^\RK9QDa3@1@gL=`J1&+],sgt\@VP9YM\bd]]8bV<:7"Bhp]449lZ\YhQ^\`N\,&-
%O4B]c"*OWfYjMGIilugen)('sJ%ph*oj-pq%_cXi_.DLDF^5qa-W=uK@K\*uVY'4"besabXl)'DS6_^/ZFfo0^YYOJYL8klZj5ud
%5B;iD283Ki2Fc/=l6RKSBa;`iGoM0)NFKKOUg'C6)eR-=Nlg-B-JPuc=nWsA^r#@DPkETIH#t+cT=_`KS+nB^n,nTbU8N*n_=!kk
%hieoDXN'GulQHI@N:Cueog<('7EqMHHfH<T)PeIn&!"N`09S=4HOi8IrF:W;%rtu]1C'n/CY7h=fa@XkEI@b'\bL1OP@IsP5/3lm
%k.I%t)3]IIO6Y5^]f+BM+187?4!;oA,$VG+9M^j:VU:Ih+3Jl`iIpta1b:)]_7@i&GU#;Ts$(l!g!s>f,mqDZB<D.DQja1?'TR9'
%Fs?+>_:Sr#`\n=W?1m1Up35sWl.@=Ge9(H?RU3JSoJ8s;gc7sW<nD;F05P(0"_0(h(OD#"CTrWp&?phFm[F6n!&/en8U<-hN+k`=
%hu_g8r>HaJ56N#70<n?4:!mlN>CZu%L-X0+/bnD#rT3-;Ifk`c(&itR6lSS/'%\K$n6dA%d!86;!Bjs"]tT@+H%>+.,rklmL@bEf
%'I,1D$/CUG,4P"(JCV@/irnp3"SM4/Vgh'i<;^\*T`-k^6M0`3/H5oPi8O^2KmsUb!!*%cOi%,(-2aSh.=UJ]r\O3ns3E:pbUpJ\
%p-P\2^@$+L%kFiCC=aVNmX/@USr,>*l1<Bip0S$l5<Ugooc/<$S_AL)TUTWj>,g[+g930:m1lY_G.VQ$Z?Q=]G!:B.Hi*SaJtR)V
%#=>WoMnf5B?L]gBNLrC7g1C<WT6d0GhPfbcS2*S'8.chE\(AH2B&K=eMO+S_Mo`D!)&7aA45_>2EUWL>[>Jm>\cI\h0^;Eef6+K(
%0%]*S+c?D3%9ss+r?%Xhm[sHkd-VlCJm<)=IQuoL\u2/!(mKjRF3Obte+P7&3o3S,s6[[5\^iCO6^W`>,Ns[rNXo<k%+c*UMuYMM
%OY7=sI/GS3hf^i>Oa0^p!I!#tHu<_B!?XI-OC8ra!C$7/5j)>('mQD=K9SZTQ9Hj2nEk1@+jRY`9VOo<-g#B&eHL=aI6jeQ4DJB)
%GekNjm=`\1MnNR5nP8s/KXTD7'D,"T_`8`#KT0^"C8:nt4Ka59%/eQ*6ngZMG=pX8K7@=TTP'HT7NqT;Oleo+G-]3')NG?_1P-)Q
%%%h"uPD-M2gi-jK1u/W#0+r7dKA\:9DDH=&W=AkPU*=j%PAu8I+Rk4?`hNg3ZZ=gZTdBBQ!A;g1`K,'p_??5(Erj)GFaJGu<*:t3
%,*6uKYq,,@#G;Dj'2sl!n>li'VaM&J.ssS%ZE%#g$`!nnM;1Q,TU.#CD?9"a$jd_(-F9@VQ]74<['4*,*bD,(*-KGXhUgg,Y9EbQ
%BQk(DTt6UFG[;RJ+TpF;?m2<rAR#E6X0H2A"e+:g9juO!;LL@\UM:0FQVFjHglVJlZAf))*R(985,b;o2j9?n3>q.N.tUJ-lPb+X
%OGB>f#\"K#k`%j,O.4$Wi"oLo];!P`i_N/?kNpdhm8t`\6\:"&n_&bp-"5RJk?TEm[#Bh<6a#oi\_%U]a8nH4B[:jPa^I8.e-/(X
%HnB2884[qt"!O'Y5\Xd286A0b_JB?$`in9kJsdpU;u5=4GR"@,bmA.u&8=ZdiO)XTh/e9h@2[*#`"XUon.nQ]K(1dLM7^XOm`e-F
%63%>ee05mD.ml$X7M<_I7=\VN#f7$o;(IVO<J9?gU^mJ><bgS<_^ar8:gX!P(0<62BeQBPluJW3pap4!PgE)qHZB*2+k[Uki0Q%t
%j!KDRXY/Pb9oj)kTIY=5$(i7IPpJST.6(sN79qQ'm65"t_`]tRY95\`LsX%4!HWM)*%MLLM_Y(n+#8lLL*4ERel@ddh)=D!(h:sM
%c^7nuo5p`9I_lV$rFUk],@ZZS^_qI,*CEnjT`a6eGSKKIKES)=/]Cri,2FPX%m\X59LrW%h'5jp,Z,J3a%"f`J\g6"6=lhl,,A>c
%GnhIue/ZO4<-*lZW+TSA!c@+aoKont3[!S$Mq)n\&PGHG+`<"DRlA2)'5+AM#HGp5!K[E)TQqu^)_a_o17%r[YZLC%CnV195i@Q_
%5lFtk.p+4%kVMuD(C<Xpj]b,"T5nn4<W_4\.*h6n<ljWdZrY,W'.[rncU'2eXUkLVOG*dl@>'$3]S+nh:A+6.0@F,hdS^pZm#?3,
%KVTDM>oRZQ4i@SV@j41_jlhZ:_]@/X=TCT3$6W"USSQ`^Q7;=bdN7>b24JRp?-isjK:oG&mXePUi%<BT!ae\J88)UR84Q@:9u['c
%R:j+HMJP4+_,uepp8mCsO^u!u%9P-na0>Rp#MJ"FDjlqXWB>-!+39&m$Eg,2W.-\\Vh=iCh<Qo6;4AKVD&-lIj^1dXY.L7i:L-\N
%49)d;)64BIV"JC>YW7LKi'5Xgpeua^-m0:AEmBHdhgb-Y&s:4s.XG(%1/\\X.fn+\.-/SZShS%EjTd3Zir8+803%iDXtfk'SLG8-
%Xso$$^kmk6]2>9cXZB.'\:)'ji25&C%;9#4*_BtN-K5P%`/pB$#1,[F%%[Gb:r`P$;loaIMOCV(!$e&f&VAa??MkrH6eSJQ^Ua(\
%r7mf1(jRV#DjS4(S<,<&lt(m^#R.OY$mZXW-S#+&^L@JfHZ]uM6WsI@*c#`sqeB]M=.CU_pVG1TXU6</YIai9aA.lUA8iZS:EVml
%a[,J(ir=:=#pa4uPc+"hf0>+f+W1D<.<,,ZELY0D)8Ds@+(Ae%OILitc+>#2^5sD_NWLhuFY_a-!W"+AJ:I@oYtIQ@"?rT:s)p++
%C75PnY]I57edl^l.eEqSl97ef@rO4iRR@a>]-tLN]npq%&l(Btkp:\X7bu%RQs-lKUV+W06!qba;D=V36"@QZL[R@Gpj%`\cc:Bm
%KGqVA]hCAr'?>(kgcIr/PubLMeFcBn`2=D]rq>kJU]0S.+(J/kXoIP\9)Uu3JlDVt=Jsqjf)Iq<<IUUkpR^Ye'YiZUPu=#6Cj0'J
%,(3JTZr!c`+1CJEC8_ns[ll/9eFsn4nR$N!)H8=GMbb!.*li?VpuY*Wgpq_Ck,Yn2Km&%(*:s^6\\Z#4-oIN3Dsc%IjY+?>)]8Uq
%CUF?eV@2d7ZZ6S3nF-1t!)*b"UXT.!<pAjMI&^.=c#W4-]86H%r28A!k\tpVf"1g^ctpu"<%.M7rN1TI1tNV[BRS8?CTIB>L]bBS
%e:/+0mOP[X*1Qm0;?5._EdNRLncNk(G+\V(*4AnOIC8a^K3%<WQZD=\L\+mPPsk/g"+kq3LnEY;Jkq$uLbjL3h>cf^s78Qcp:$ZP
%"ml-<+EBSWZ.!I>?iL2en)$a3Z`O;khGAuZT_UUEr_N"mD!8(2TDpHCDE[pr00nFp$RC!*T9oP<_0r-K\%6\Z\D3Fkrr#>HpFgC`
%h`d?*&U:99qW5!]?7F:@csIm>p&%H&%tC"%Ri`X=WU-4nrUou6f>#6))*$q2_nl0KeHu9G1Kj?O3L?p,qXQcCoer0Uk]-&L/)]+[
%k]e0SrFN&;&snCH::"'J@.E,]_lNiTpQsOQCUm_!J\C_0fSoX(2`"ER6'ED<>Yf9"r,TDSWcVPP%a(o"[H#Dpiec+LN"*^&)).[D
%%D)2e0%\7jJ\>Y5Ds@!U[k-lPiEeGFgZ@#8^d4[E/iP;1:ruY^3c9`ZqM+?[g5Sl)=+cn,rnt\L%;lnqO.F-tH!mi4kVPEbI.Ae(
%QDk8B8um.h1iK?j8U7H!RYpcQdl#*S>E-4LUeq%-NC'W:^>j"&p!UfGH@6plC"MBDHLRmf']#Ce0E[#@qn?BMQ3LaaH?4TG1h/39
%QX0'l1_OiNUTaRcJOc28lJFAjC_Re<k>p]P;_@Wls-FCBpW:/9p2N5\V'jT?$=LNn0#KEd'Us@qWH#LmZVYEp$G]?Shr+j+&o@3$
%+.p(K5$r-bV,f7`e:AGYS+W//IL5aT=L,YtM-ZRbPm<>ls(Dr(99j\Z^/D)?]>'\aR=7B.-gGNAp0455fKEB]/t$Ib>XJ+'dN]:^
%-ZiCip%q)KT\Sa1>@#ItE$huOYc>OAP\ntjl"7Jfm51;<\^8+4;8(Ah7fSe[BRtR0Fb[8.n+X*mHqp'%YhAIZ&/YLRjkn52&(JMl
%m3+/f(88BH07AR92=M08VF%Cj)1_MiXfqO"SLQcR=4[dr!;]a0=K%rbCJfl5'lVlS*>>R@\\>ekh]JQHM+`?(hk4Vs5\Bd!,m/!,
%%540dQjQ_WO#2;WYHN&J<DOJ[jX+FP^AW`?5+B2Rp$*SB@2'r$%q]R@ku&o.p<G7`2#iV[QQEm*N"jpr=82V2:[^31,jhIYK<`3@
%5b*O3nUl\kDG7<=C!^d/<m1LCWU^>XD>dp7_m<ME[rSg+M2*`u!&,/N+Q0:<qn#1NZ?-I2>H@WG7!!VLDIN7N\NU^F^XIjp%tM`.
%os^+m[?=IJh^UuTC'ub_DV@r53Bh2q^9uTYIdcdP04p"<A@4Y(Hi'3FPok$Z)S*1)fmD+<#L=UZZOZX5IAm1ReNu'>B;tOl$'5))
%VIK@R1[_t)WSm`XG9*k-FW%`V+/k6#q_KUc&Md]JJf1N;]0nbXWS&AOD..#NL[A7:IFqoqg:#1KMt\_gRdf?WIRX(hKUV.O0/LrI
%qp^%jrE;JKlmJ]u#(-5+*a`8PpS^:@%hC,T.!Z!oAcL@Ko;2,R5PntQrR5soAY<L1<iqFad5S4nC-<;(j^u%.ruYllV%?MNWRZ4:
%%it\tJ;uKP=h@2jJ%FMQ5S!nprMm9r,JCA3Sa"TJTW!h,:\s2Z[5MTR\g$:C"$D#tBM<I8HJZCa[EhkW0)`;n?dT**YJ6J?q_if(
%?2U4SqBl3l/uk:Ws7+U`T"*$X."A2';l/bpT;D.[*V@YQ,pZ[a<M47kQ0B+T9&D4+CmIsIS>q94lF1-Ff)V(4WBJa\3h[);d4NDB
%c<VnaTPWm&nTAuiLYap.oMGAViJYrfdhBRqf8G79CZ>e?h]TK\"KZnBc,p;8qB`bon!U,s;#V.k.7B>qU<#`p!j^3Iou.J0';i8L
%5GqoQg^ELF72>GDfs7%72@7&J6GA.^X'Kl()NAZl&a-4-!g3.ri@fM#R@A\dQ<'nL6N$:SV"lT65\G0u$N7u^(Hq)D<r(p!U?=XG
%;,=Uj96)?AoY/]M<i?cu&B!,UHHBPW=+1-5/.LD75*0Q3rb5,T_%JH+-QIh^C&%Enl;Qg%Co:#=7fN7+IJnV'7_XLrXj;7i*4*W\
%GO/ONVIFW7hUVp]gY'aRn9_oKf%@B;;1'iRl:pmU$LR;!''op6[II47ro&j10;M:&TDmM;W52Z.qpot3^hUDLo:]Lfp5$skZh70E
%I?&qXk8Sk9M;lHP=/:3qI%V!:[b?B2?d4JL/N8/BZgH@#EEmB@E*BuJTjk^'mJ8soXKREm\@Pij>C>U\g-kPE<,P\WCVAs39^H1`
%9:mj's6Z?+Zd?"DrD3:@J"_@K8L^h:/HBe)?BfhTXWo:(MM5fUCJK7kG;LCgNL6n2q3aFQENp%bB0F!"YBKW1j^`]qW^Uk"UM^j^
%&=C5</+'.O>0N;gR.i[;C4<DR5BSB121>+nof_01DkU44IjYneY:1R1WOJMBc0l.km94o9rT,!0L7ZJ)PrM>-bm+%RP:r6hOgj@&
%]OJOFcf2&]29f(d.sAnfre^e/3'4NW2jif\`u"nLqi1bA0h(fPC]>`'o#nPn\#`o<qKVb<6phWp6aKdqdgoIYD!GBOLsiHQrfrjd
%]i5oC>AGn,'HlV'\6CZ%kipFKgUeO\)tj)NE,WJ2MN=SRp4Zq)P(CNuhko5DMF-th'e'BpX[9(ZG)'8IrK&cuLJOc?;JguZ0/ao@
%Dr9KmodbVtBtjc/HL58DCW>6t0?t0B$SaOH[9gJ?qht+&NkN2%mn]:LplhNbZg6pSR"NkQkkU)J\[4GER@HKI(n3%G9l5^6h<E.(
%F7o3?p9Bq9=@l2GO(Bhq<,5SVYN=<]m.0]3ijN*\h7=NZ?>aqDH6pnHUCej7:_:!Scah)q@!Htb-8i=r5LjF![l4$j/@.IJQ"^##
%)stl0gA][o]IY.:.gq9S>UhW)pgL;,dQ&kWF"8KAqI6k'HbReHMs755CON7K?9`6j,o>*.B-ep\:G^>I1&S$IgdA;cs64@;g-"S_
%rQD86;)WRfor>_(B!7Qa?WO=rB3V@eA8Z.XZSK6uH@TQ4?7U6/]:I`por659Q`Fc*&"0>=p.8Vq5)A!Rk)+!@D0^SEm*nc5Rr2eU
%*cL?5C%O!d?<U-8VPE>5o\oF=c#2OB;!PhOk'9'lbSS1qna)IPSXWE9Ls]aFBBh+[S/j[tad,#PM^KH2:NOKai<;GGP50m8-bD2C
%AdZ+P)8;TBgh`31eWH]5l"9LdPMS>?IDZ.\/C//q$!9[ASQmhGCW3R1jMLWGN./HDW+\?CH4]=QELeC_Am%6-0t5Ok!QaN1Z9B!h
%Bss1q.0,Oap;6Us<&mn-Ha!,Ok?B1Sg%G07e,5F:n^WcWqP>*6eCj[mErMkV3QplHY%cb3g'A[4;,%ND=t\@)g92Zu(,ITWC>'9`
%8SK\_f0e<'RDSmc8g8Q.`+9X3EC7'/(K`#o+'b0)7riT\hL1hWc#;>8fr=n?SW095FeI[!+M#"LTAmDX`s"ELl,*@'l$;HHYSlmH
%k1e.6IMq@7fnd+Vh;&,O?T>i-AP$`I,*TVbE9GBG-)iNHF"r*-HVW]EAiAQ;Ku2J]7bo0Tc`cGJ(XklM`HHQG\@A(niW;[oXfp'+
%?r6)3Is/<NM4nI:[uX^2?FmI3ePpV7,ON.8HT969#c'.m@3W6A1j<]>KJUM$q-0.IaiLfJQ/uWLkuc5KT.U_AU9N'FJAK@,A>X6^
%hF"XLke3Y`TX)YXWF2.)j?dL,-!+ZG?mD1qIo_2ZSS1mVf9bZ\g4SXbNHXJ01uD`J#P9)7B?^Rf*MH/R93'F/6.ItLjd#A``^KMl
%*F.[oKDEVo\_3J[b'OM;nP1W'@W6.cVJeC1dG4Zlh$UISAh(:hX:%c1=KFuIDm,Yph4)X^9(l[<$J=KhBdHu04XWht#p*,'<OHf"
%SQrS3(+q@X7md[Q2?D":50CLJeX)CRXL19R_F=Y=Z`!JWqgIA*#bS!JX,XrBA!1nRk8d7Yem%g&Co(-/,W_hVp\;\RqHEVuF62*&
%=5`=q#pchDjMJpUL0sWD$=oTUDb%5_=513\fC\%X7W,*/0YV!DGSjX`l(dYBj7:=>H=8*Am@V3Mo>r,)'gndZT;qALPu0Dc#)M`8
%I.?<8e?;,r;Cu!*4aK,s"gW/W/:C?39_S270<B^Q*0^6WBekt14?op`1-H9+GIUpBd\FG-Xg]P+Va;_#Et@N?Rm**VYd/:2Oa*UQ
%J,la;J[NAlGMd]Z^^`#GR\sfn,cK8DH@G.X\,_'756Vfe)br"<-pcaf&#Y_/fh,hjKSN3.Q_W?uk1]IMHp4'nDs9*>P;V+pBR>"M
%;r%^WLp+uSUZuNl1+APcmUu1Kg@bQZ^H#&IdDU!q:CQ,kfkP\G)*]\SV6blKHp>6]VT,r8ESDZgdm(osV)J6-K+]q4,O&!H\Ae44
%gBAK:YE6`3N1DF]5J<f/l.c<S]kHK3b</C1m#Na/Gc_DJg?D@CQb`k&k?*bR^DN$!UFs'I4k^Qd!`&n3V<qmaV"W$B/HjE4[a!39
%h.:8[pJA_$J$pj*l%+Rf*qf]##0l,9FHE=O1i6m\SHWQkEGduF_BFIe?=pqG1gLMBIZ*)*,NBdk@$u5[Y_*Knh9"n("KHp,/C:r=
%J'q<dd];1u^bYio?2TZN^.!t91jt8-AQS9ukpYpto(W6&@-=Ze>[;Z$:V#mM?c$TpSs;:V6Y)m;C@&V1)-l((/1_HeET,_FA$F2N
%c`u!7SSWL$IJ[n^O..a(p<ZMUC)=M#9:ZY3ktbDn0&GSo/4M1i]$m_l/8<t5K"GY/h\$Aa*D$6>),J!AR5C_W`B="[LllZ9J2SLQ
%5eB-T&Y%FL:DO-(=g^:^4b,MA(/>I1F=hq1n@/c/k@WbFr^\-%Ct;XQ)1-pG<_$2/!A*3>lEOGPq]k\_\*]s4jgebPd</E%Gj]Qt
%@`_eS]@kD7Ck96Jfak41h8eO+(EV3#E7\n\eWou`21@f;-[V@GQFSTF%r)d2CoOsi"j6jQXfJf$gr1%,>$AcuZTB^>!UY0<d'l\&
%[!XVe^7%jce4XRE#7GVA^<KWXKsWnS]UmAb/0ou-\T)quG^PV(=&Wn14[7Qb8ao92hVOg2a*D0_qo;re14SeYDMJOU#C@>6b3*6S
%@o4]EHs]dn\bk&-rNA,YalMZlWrFXt2(\@EWqIbs*R;77F6EV=JGo4'R_R>36g3O\d+4GfV:V%qM[+>hSTVS&\[dlm-uF.dKQ.#W
%gOI,oql-KK\G7MB]q9UsYY=EM9m?!DT/n$ATN\tMD._97:s$X=;1HBJ<l^$mOTbOMY\[0U;&YnE5!J(4NqP.$l+<LRQh"b@.h<Uh
%p)LUbO1[G9!(R)RK!0Q^SuqF_<DU2D"Sf?l9(qL)$SJ=1^ABm.HZ*J)Y<'.U$SQaFEV45';d-sX#G5toc.pOrg(JeB5:&dC:A<SR
%p!H%>FRJmTXj-_I#dJ+C-%F/C965<FC@*8c4IGJ]QNTA4+P7U#[>aH_!]G2V8pEh9:'#5bDpi68F#s:EVYS1mXcFgPJ>sF=j&!0'
%WVto+8`@q?Ehk/2[<XqA>k!u6l"_&e0>$Jde^?6Uoa=L.I%2mtebQ3'REL<S%PNJ'2u6ps=F+_)#gDAJUEVMtn?>nSaO&?PZh\/)
%J+_6gf&G4CAZ?/4FHq_bcmq',P=$kr>3Cp,R+J8uH)-@&)k$Z<APe`VY<+B#Jk4PO3BSJ%UG&\fj`M`=SulYWF4E(>Oo=P:;>0cE
%?atGV-M&TtCL6qB[T>+omcl=_S#[:Br^O,SJ'6hp6s!DNTDGd<mFa;R.Qs64QfZ-2kf-:L4tQHKCjKak+WFqDY,`;Pj^^?lg2q5-
%3I1@72X]6)Z8$Y.i!Pd5+G1J)0!f]t'WbOkMuG.[b4'Z/jg]34DK^Y.O2%0nQ]7mr%g\uV`K_Q"%U/\hUjD7iXQd`Ak%=F"\D=S=
%\?L8NQCD"h1F]bU150"o!&ggE^)5aNfb?M(K*3[)q.Bop;$urb,N2748gS+QPh9-,38\NGWj't#9TKYh>3DgJK;7L-r_>?)q!#>5
%.P&99O,eT$#8>[>WZIVBqV63fk)9*M$Q+=@^nCSX5g17/k#OraG,QukNQ*;keu)>?4uXX8<0rYd)m+OIWm<i0h*3O<T$Dl$T6m)%
%lg)TJ*WsD3(c=Olgmg8CYX#4dfOZ^cIl'(ZanBA_;V?Y)Y-nj^X67Y:\]rADL7t=*flA=GHB^9?N^ed7=)Nd_DZH-gnDgMfSQtHQ
%1qc#`oDI%3mgri@E2AkC!FjZ8U3$1uE%V[^[bo2<f7lc+hbD_cpK3CBXffem*!0k&*j^ogO8!A9:@&#F5qdUJSF))T)Kh<W^@l+k
%gEg+<\GN([a])mc1MDN5J=V'.!]9Kl*&p0MOl>YrQNCH$o9#=mIuu9_OEp![pG3VF:C%*I9VC;=A>&YE]<h=Xjge'[a)$_-%EhL@
%/C.TDn%ihhooF>Oj$52C2p:eBEB1KHM5/]gG)2),R6pmjqQUB"B/>gf.3.cLQdA)jhAepe8eCAY@<:k$;E&>^SZQLJZ6u_hQ917X
%*-hS=0S:LAjV#qB50lASm.4"<.[K7q'+M5NG$e!@hO8nV\a%HJrKl*qm;KNPQR<LuSj$$YnBK)'bOYR?,6uDB31Gis(WH90T)E[e
%1^L`nIU(Iki,gjTZn5>l'/,]EG);gQcEcg3[1ros/Mt^F3e*CFjo?h>o[E)HHLiu"rGE)fRA!9lrc[FHG;9$K=e5NC5Kb&KD.A.W
%Z_6o_2"tTh4K?u0QVTNc.btpkAp:PoF"G&=!kUTBQJ\!cjh=a83pGkBn^uq`7fl2l\NM"9NoVQV%gj(1`CR4^\N9264)<\>A9K?!
%hCag0/i;ahcKD+Le(%8>\%2%uZF4]uq)b;omC>Gf8afq;?DS/o7ic6[WVmrH/2"5%oss]-@l6k#<gRII]B1ijDPo*Q9o\&QO">6)
%KfhCbJe]Yu8-8a[";X@OCjCKgjTrA(.8n'91F)&XX`/eop'r+8152b"mEtT[TD-X,GE:?VdKfH!gN9qhG>HnoY)`k3FQ%b<Qd#BG
%n44.M`aDaT&)E//D#4!J-+c"3HC3,b8#jVt_?iJBD?15in7\D_@qT."K=u"X#IL^548sod`mX^&F<gOAc@^E4E4bTO?:-C1E:%rl
%1ISjclcT%MVorn;V[qnVl5+N#[aU"!fo:)jD=VOTI\k]n$-OOcGFcTh)1VnRD^^'obtJgIQVM/gh:?skoD2"ZN7[f,DeG8_"[Y6j
%G4s&&7L@T`(p1hdEpS"ICK!a.@n4r8eoYeXrG3<6NG>UYIl!JKT:@nB\bJ"7[M'$aadJY`CN$9uGfVJ[Q0$&?1\1-%TsS-+If'1]
%X\A@s)Q2@,oYhg&0dk8?<,4kcBUXqR),Q0VSkNRoDsT70Tj2Ub!ekl<4S=P_R0H\/+%/88JQl)(q<aC040)`j,>brA1[f^Bo@VE7
%S%tQ:nSiAUGKtTl&*W<tqM?Rb90INdqL63UC3FGJ2`0,rTYI,$PUh%aI",0r0WBo^mA.6c+!$@-GEk#TIe`K"h9#+MAmVp0_s"[m
%@<cY':Ym-f_Cgnhda?Qj(A2MZP:4O<9TDoY.Y[TL(#Ut!)3s"B/hP1Lqe4T1C>:jiHA!'rARfjnjf"<@^=K'.iVYD$<5,ni`tmL[
%m#<>.d^s#@q.Z\k2Tq:J82LW2I0?rtgj;@#]5'nAfpuC6!d-qDDK@d]Q!6h@DCj,;AQ/&`ftSF,9q@,+##=?C]-]c%k"^MaHYB2c
%C,;Um=1R"1DS<F7c>AN$Y>?Q,=&(TL:aDBTrP?Ql%m_km_=m'.Xu\f(eZ[SYURr$oYq+l#KsTml`7Z9s)fZ>X.+@Bk7c5(9CqSZ0
%GG1(84#I^X$b=;S%F.alXt"2VD)2,tP/Ta=Q=!s<4-A'6SgL*4Q<@>@K/or/JB_>3ojOg`^Y0O=RI3NXB1o)\d4?qEmU`EIltH(Y
%iiJGmfPbE6+\g^&kN9LbEd->b_Q&VNMOKV0F$N[hNL</<E=Q&NQ@j>]Udf)1,h_f=JEhAA?+YUQROrqdhXK-^m),"MWTC@Id7nqM
%4q)?j<i2FKoSQDq!W8$hIFJFmH!,UQJs3s@p,U\0k.=Qr(`Pak*R*t/H:#22^6u6Obcp7W.l0UJ)`BLnFu\Ss-!c#SSa<Z0=4$[I
%EjeL[N7CTV]t:gU5_J8?+i.kgki00jm18?;kN0mt_J/s/2j8`GA"%]iIrk=*%.;F5H/BKUk<!h!HhhJ8`6m/Ye[rr8SIoNKmC@PW
%W$]C*p;B?ff@K\[*s:D$nrEh?%q"Cqc_JO>4;H=.,Z)%>H3C5#RT+3pKdGZWni1<8H1p2RnO/QKF8*!o$XHd3DBaL,h#c/RI:`AH
%N[GD8fr*pEW5NHE1gNmAN;&ZBF[a.'`DjMU"F\S(_I1Ac^=X=)FT&(SlG%9%M[0IZ)CfIlC4%T,_CV>I-V(-]W'<a8$\%g@<4]N&
%fE3AfRNka9jYd_^6-nuSjL7'hlapp;CA.#h*_oYR*!%J<lap.B3%$aFJk*2B-=DP.l(55]fqI^R<AK9j2OWGt)W8?j'_'N_)Gp7h
%,+.J5a.nW&F.Bub2NOb1f\;i_BAge\jhNMKcXOA0O(7G7^hs5^#?q9jH5*3j,k:hUn\\O8.^$2D]3sAT<R6:&j69J?^-&Wd>B-L#
%Gcdu`qn9c;gH3C;[s\bp^Ql8ieTRcd/Z7J@Zc8KS9qFOKWo`XED_V!(TiQQ@2tuT#2etYO4Y.AKTA4(.5?Fo`Ldd2n>[us5[j?tT
%B?W4@J,d?BNC*NAoohGX6m@c^R(\L'D;oq_;<2>4f?E#B@ALGq3IKI#g(JHgM+$ql8;t^!KB:eBjgM.iCg[,Qm@JNn<^p0")Lq\T
%7j9[-QV/SN`s*36nI60a;7MnKrM063/<f#8c2Dbh+,69[k7NGtWpjG-+9!.:<\qq\<P,$R-gVBsT3T-*^k]0LqD3V&>i3=]kNL6N
%Lut#mcX#<$kb:%pIhq:pFL3\>n6p\U-_F1)Hd<5lBjq,C6rCZZQ:arh+-Y>mn6gD"AOjP6W>utM#6B!)K7D<M6SMZ@>OZ'idC1XZ
%Eq9b?4N9U`o66+2j7o;Js-PLXTC/3@V`g#j]rCM/gAt:-othdnQ5WOAF+V5nq-5;<&mJ"m+u;$gQTf_2JY^UcEe*oZFoHi7p(FE`
%7WOt=EC3PIGbVH.(eCNZ&l1X!0"-%Cpi8:&4(/ADquJA)>ZPU7nu.SGcS'N,0qF_XH<j3jSA9+AItVK'iUMOfiT/19D=%(A\-^M"
%)FR[TDlF>(6i.'-F_pXRg0Z>DoAD0oB_N:V=[2+f=;0(mp(*K6EOD!>X-rR;KChHDBf)$G)3VA%n^QUR9es3QZB-01T1uJ#Y1-b>
%A[XG'r,uDgoMAM2>0P[HbWR'sNP<&V(45CuJ[E.le7K;.?e8mU!cB_$0BcqqCLp"miD/p(5A"4[2A=3OG#LINeM_#FL!jH;TBZW;
%\sPhSX7I,<.iF3fc>5ZiV1-*ga7&`.%C1=t(R3*B-bXdh"<Q+JF##Ogp+ONM,"E.pUeEWc\aPa1jr,+KE.7u@hPu4J!`bE*o7tjQ
%CJJC,lb0WpVQWB?Zb='I*jH3MIh4@7OVjNpdtscdibN#-[.^"\jA%!4D_mkR/8_b6Vh5If'9h%#M2@e0\&@@/R3Z7NfS(r<HcN>[
%0@3qr./60#:03Wea?E)geMIna@Pff!H9I`7R`b"CL3`>R0qs5W7i->'H(,Y?%9=/&9@_5(7/jE^R,"3)-'J.XRDdUsbt2C@.fZ#0
%h+pflAf`H1M;WMp5J^O7S.J'TiIpD7X$ep.^QD>k6T5=rDOZJrH!;Q<MHifu*[bh<F2]>t.BtRQWY:;K)nUs'PD.&qEfD@YRG#\e
%,'u=lS&gXKLD)1bDp+!FOiCC1ICCqqfUVB*'3g0QgVhB8E[%bIWn%j\pZY<0E.(q;Ne=[u`(B-;0QC-casSfZ(GPQM\2l_&M4=J/
%<T<EpS4_S/*#p:tB8tlg6YUNjnPh0K'/-,s>2j\ur%1e'9s#c!MPkBLp(UjQ9WT$kK0tXBp>BUrBQS4kl0NXKR9^.(VctBiK>D_>
%DG[S)='0&gI%K.2N-<4\#No]7=+cE@L&&RHk5!b>p?CLSE91\1%^'0B<sQ4;eoh:B9A=LVTXnJL4Dpc2%A!eYd8db=3-]e;\/i53
%Kr#mRf(i_8(aaJJC0V9-p7c\7VEK+(L'A0X_aC2>l"Oh*Edp,,I0e[m'Bdb>3%C(Yd;,F51k.IY0XQ5sHngl?g"7<K3t,/E[SC0F
%LA%eDjj;EH_Xu4Nd)=S`[:p$Z(%r!ZU%77&ld.HFI"l3eC'WFiU"3oREHlGHl!\gQ.f22q]NKY$%d#[ALVq(#l`dq2I2cMJCa=bA
%3Are.-IUA\gW@o`pgC,00RT=X>ogYJ3S>?(bRRng5AY7%%DU]+3l?sNC2,"Kf>1piOjUM+Xc[.,%*\126>],ue&daJS^GE=9^m!\
%ZMLs.1pXg*0JRUH;p-EKKC-"-S*J2O8Em[Z7\4Pep-or2`RiL*W?=^O?:t*iWR9>;W76H@UU,=6EcejT7UpL]<LmrdDP+Vl7ZU$:
%(.KtN=78We5t-etQG^nn>4+4)g6nNl*?/jd:6/,9B?nNXa`V?7DL_(h/@/KGA*^a^V6R_7`MKigb'7F_VXq/Xp7T]pA$9,&[q"fl
%jX$.G@uC_On^N1O)coMRN\<LbmIC+sgtDH\aN3nHg>V8jeQ&;&?J9(/NE7oe)K07H#:IMHjl43P2Rtc?\$d&"Q>Tm*M:K(?CLSsi
%;OTT"aIZ/^eJ"DcQ,OtQB&]p2Kp*al\)_(7oQ"VC?0C&kQe(6@jI-o<:[X:p$^9cHo$-6D[;\#!;RsN3CtESYP7nUjf1@%6Dj,6X
%KD3LC?1<s2REANnVqYk/A7;]"P'l,H;T\Xj!To39`c$Vf;g`/)B52n,IQ<[3X]20@Mli\PoBSOo<P0"@WRq$6e*4^&dED1SaC90n
%cVCC9dlVKGe!nmCqXd@(-)U.6::I-.;?p"HS]?X2Q-<KNVpspY27<A3^h$E5-f_,(PHFZ><+5BC/QLW*<G)Lp`;IjO_86(D<#Q*V
%ZCSCmRGHQ)R(535\=!A<$tnGjDXN/Inaq2ONe^qmV6I0:Cp`qkJs471BlLg?_Oq)@Z]Xp#$jSJp1GQc_%O[k#H6LpQa*#Y[4j2DZ
%D/J`pO1\K@S1fgIq-lKojdXqmF+-$8>32UOU#p8t6XsRLG?>MN:>C\BG]t_4FCmmFS)IrK]_*,`_:.3?Mn3QTfq_l?f;!BH4?4h9
%-AU?]Hp6>K/MZ#fP:r-ed%'C;E&F+*$'/_B-c4m8@h?@K9klOGR9<E"]3A2aR@-EbFDuK*m]5AJok)K>p#MB;g.[a013)u!o1Yc-
%neYSHegGU@KZ[nRpGA=G>AHWrfo1kB(?]k8b3&9$);8BYL6jjn9P3pm@J9:goB*2<%%JEa:X)X8cM(sa<sB<\^6Vf4cc]+Dfuh\D
%-9C:D2llU3R9a*dbN6`IF%<e,XgumE`n4P.&=h#Nj$Vf'Eq[%!^\:]4T.`T6'D$,Q(O$899BXu^`Q?QH_G9'h\8ZdM]XcDA#fYfQ
%l=P*W+a8FL\?e3+^3G"0N?ka\W&-u1VPgaR98bmVl_WFWf%s;5ALb1=C_Y+abjOc?Ea"C+jhpVN`,b,8V3+O.>ed('iNeWlQd-]%
%ViR_dl0#=g'6sL0cPa(HH-L.`JnF-lZT==b1lE2<aej5.75iE"(:/e`p."c7Ie=sFI+Bb.o^5I)\$;DpjfVCOd^dBRp0iD^FKq"T
%7$A;[j/YR/?^Z:)?PtqRDQV.-4IMJ*o#pRGrGK6TR[BXJ=:M1'S(71g*F*4LHDJ'aqNdXbXp&Dn]9_2e^9!kgjVQNT-``<o;b*=8
%lfj7_kOmlY@Wq_'X>W!a3dbRMYrn9+3';MuhKV(105cg=?FDa./oFEB&'>%X_R%\I)NU?M>77n[b;m$Aa3p/U:FDLTgCl,XZFsA^
%A@IV[.t%4S1RH`clGofn[)ubDS;'Bm40S6W\_Yd/b1pn&-K)M&K:T!t\,=G%*e,XJmB&$IFnT_-2spR^og<@V>,`&#n!`bY=D%RV
%W?r+pBD-q0-1S&I:84/QK@c[SNPh1TkjdWsbea8:c0e![-o#t34Go/bk)]4Ja*3RcgCO&!PJr`Zj36WIm.&'Ro)<Y#B^Xt-]NJVi
%gJ<a^-P*!JkL5:3+U4N5duP$[V\db%i+_dk0n6(OY+O$`PN-^sO"]8,oAn`350mLVhk+7_o&q8pW'">/5&DlW*)4]/04+5`>F4]M
%20l_]*cEZ(2tr53'+;dt<Hb0YEHQE]=M.C6Vab*_la`S>qs3;@_l`8$;,uMpJf;5R9jBg9<:o8AD<gmUJ%InioPO-b.=!iqf/n30
%)LK$,\SN&i_s@%uKr*mpe&')phI3+a^:/SVGHeQ#Io8>\]5LI$*u(K@2I;+d*k'^4Z+dbT.&j2dkL+f6BU2t#/gne^,7)J>$Q#4O
%2*6$O+P,D,&%e`PSVNPeAaq1Y=F]*h*5-cJC"3km@_XhqZo@T&nl1$O2Cn?5@]m"d4F:51m;/J)qQ0CJld(>fak,^qj8-WN)6K32
%:3((IdX#dFWq6&bW-[</jk%>Tf>ZA'q8:h9)nrUT)]L_G[JUlRWYK/uL&.$/[HecIijA],^Gt-/_<t-0n*p%R;,8Ms@%"LfDD?N#
%>qZUE'-^Fo/uPjJR^\K,[5B]0@/>Kb?2)uXV!X.$#UX,$1uUgZSrggmmQ-A8ic"_@K0f1m5gM)is&7P=n[@IaDWUSbr4%aTH[L%r
%h"U2"Z07r+7o/5IH(`M8&%%tO"7FinJQB=@5HrTTq"n"#2UEqHj$-A=%H'5nBUh9r_4o;n0=ucMs6+$/i4)2h_nRcbY&E=Wl^`Sr
%'o(:T"6EF7Iea8Y@4-IS<,)N#RN4?6"2_#<=?)nF#"KSFf5[NoH([K"RhZ.-"Zu-rHucR?BN-KNqtb*/;gcFkY@H_!nlY3QAlj0A
%!<bKglhWtm6^?4fVtP_W?_7)qG=X.gAsg-]X>Kc,]75[QXF&eSh>HugOZjasIe>+Who]B>:b*9Lhn=*i-U)9G?N1ukD12GS%.oef
%%eh$upNthA%tL\kcb4e9JbX5r+.S;Hq93q&XSHa?Ha$-0]B<.@hn?m:H2SNi;>&1\o^0O\^?\CbeNPSBT2`s_rrIlA)oq_qBW^ZT
%'2":u3fq"(lf$;oeGdC=R\)h1i:jihYLSP,c2)39#L$V+60.&nO5Ie$4hK(Yj*<-bZA"$]f!\KU"nHnskU\l=K<OD0_*EJGkZmQo
%]";=if.YSHp"t3BJG8Ej/''bA4jUcr?]`1O*jYbYY6i0Y'>K!3"5?!86iDm&ZJ?l42_2:CnD@$6<;dTjX3JNMhiQ$ZO'0H7:[]p<
%!6'N5r-Q-Qd]:g1(X87MJ4*$%ZH@J"\>Jgnq=[sJY9;r`)"nJon1U0qPN.+b0DQjdqGUM]j/d@-=hcVs[gKm:@k%3OL?Yr"m.emM
%W%7XlJt<Lilj'W\HEYqX+@G#WrXT;1o4O&tK.Whi95=6Ci9=>+ht##R]R9G`msDV:_q4DXUnmIQ6lu>*cl?J/X(sbGp)7&:>m,N@
%He&$%aSb&flX+)je&/D.Fl$Qi*`6%C[1<h/hf%u<\&?#d)K,!abe>qTloIX"O4jQKl2iK,Ph8j05NV\5Y4*inG5:@$o6Oao<3!&B
%.%5AXdKAd<*p.igR@]`E]5mm@A&)o!=6u\o586.A,CUhT5%ELl0RUXI"8h<Kn,7#":C*@0CE5NFk[MeiD!Z,TUQkEI!0d-L-[[ZT
%>V,nsdDoehVg7cR[<brp\U/eMnY:;e(]E-mfY74hf+Iom=F?t.D`tj?9.K:Hs2>1Eh[b]^1P!4\bsVE2h[j#$mf2ufj%o=p*,DTE
%DE;V#ZesV#?I+2Wm^h-)5]@*ZO5n9>E/V4#1ZiELkNqYeql^KYfVKZ$(ST4JKCtZPqoeZ+@Iuq@O\kIYOQ54cmf.f%4H.$KN'@qn
%J#<-fCtO86cZ#o!%tJ'B*k8im#"jAt0+[!n9$3C7"doXj<!5i&]Mc(,)2YIhj)7N4!N(N@.38h4'<+5d+gc6A5>SJ&Zq4s\j?O;I
%F-TW1rd\UG10QBu.T?,;(XOF*E"I^tS::2M+DkL-r"X8kbp%[)+L#"G69%"_Kdddje-'a;Zo7:&6m1gr:G<nf_N#+Jaoj3$c%6<e
%5]-;Nf?g<lMJ6[l!j4MkWDpeF)p$H@PmRSpCpR#amJnB*E""XYG!;%G9VcNh'[Y_ibu4?&n^P]-DH?uB%$i^l:DmZ<*=YOT[S6tG
%D&f4k%IH]UPd(U9Q;S;>>*LH^$#0NkLg/;A&Gk0J9nXtl_0#_ib\n$o8r!,L0#F-pZ#%koI)G.QQp:lr0ZZB7'XO$Sc%37nZBW/^
%gBO0:d&+3>LGTT\eGs8_?n@C6(iTjZBFYohXcY<?VbiNAWF6:k`^Rg^>8W*W4VSliR?1QJkl;4oJ<1oc4+W&RKH^C5CtPM=#MP3h
%n:rdA/KP&)FUa"@\:^B5'J?P>%LqjHE(#6r*2Jr)#)$#"50\$eKk-'RhuEd$34/eWKh/<OjA7<b>QGDC(7*g.?u[3@>E9'`Y]W6R
%W.:+o52M92Y[>-k,AELSG[U%oJUeq*ND;4*WK"_3!2q^oJ/&ZAC>oYT0?bIMKOBTA\JT:aYmAD-]!pm\&>,(0_E\^I?suY%Ji:Q0
%#-*\c`9kXe0Y;*GPt5,r#/!Bu`3'0e/-oN)/0+53cR@&cTFsMfJ:/q-(^%"*1]fCA1cJIZKE4p^%oZniT9,.C?>\G)=TU9.`^0n?
%&3VMmNX^*//RsKs,cW1Z%?T6$8f<P+&HSR=6pLb;d*dCLUPXf"NGG5iKE@H0#W!#:Tlt8Sl,aD?JV!kG[`#)E8XKfZn:W.6#T!mp
%SVa.2\;EU+'=a70aF'.B=r\"q6>;hu,rLPoK@!M^W`dD:/.3KL&^Z,lfE=3#"@Z##-+>'n7`n<9&4D[#%^`3KmsmJ5fTekKk&>E0
%Rn%4RgB(KrNg?>oLm3E.%#R("#/\lu70.uOgOukS%<J!e*Z]5N`dn5d5hiCk68,bR.u@]L`q>KGEe=B\)X,<Q%SUF'"#="?l)ZnE
%Y5j(DOB\q\&4I@I*!E50iXMPM\dB3^*^Ltq=iu:uQpj!tg)V,'fT?2l3>,Hr7VL5I5_)<I$[kA+Sd.r:,a\Rs'sR`M+0\FLEM44`
%7FZZP_pB)I4Kh'T(KesNrpUnXcrP_8Up<#r=>uPiW(jBRiM#=u?6ZRM2:/3G0acihF-=UT-ln[$9L'AF#UH8]gc,eZT?=OHbbTJk
%RmElcl%Pu@[2#K4T.=G%(3qeA"_*5h3'cn?1M@sYR2)Nj/t))V2/-5/,2n_J!4L7'o.V0N%rGAap6a4HADj8aN/7@>QO"p2$=NQf
%^k$5+\6&[bSPqNT8q_&H1'!LU=p>9Frc<#`^*/$#TOa2I<dBEn9.NaT#qh4XOJ-/LcC@Hk!]=r..LZA@\j:+cN!r*DA-MUPMTHJ[
%Thu-o+.t_,O?c&pd0C.*#gGbF!n]VC/HE`u2Bs9d!.a$\"LXto6-4GS8WoT/*Jb4ATG>6oI0+a%1,Tn(Kcu!Seng/NPT]+.L0,/:
%?nbY+_0F2j^l(0UP+[Z%Q)*oBTJXHU+Xj*b8%g5Lfc#'L7fu<fW2TqCec`-c5iQ(B*Z!UmK@:up!;.d?D-=?ViCHrM83h4[L+>hP
%#;dGLddt8O1*jaDg&t6U>9&[H&b2O>JZ?dbJ@5FmSH*.%jH,S:,\XF(keN>d8:9&0)$I`b=s7+)J5">\ZqZY)$GdJZ5=q*3,"+f=
%d3c@,^cDa8&I)oX^cWbQ0,_8dEhq:ugAh@%3Wti>TInu=TJUMtU=pl9_DZ9`7YZXZmMH?A(s\pW^&`\gX!<s"U"-P9(4(LSA1W\$
%TG;p6HO',):=GYf\`&)=:cWZ4>ZZG[&33$d"A+InLda=3NH5ip4Q9DJTsc7]%Q[R7>mVj1ZoVK<SZF%g@XCA'0o:@7O=%@&M,?T$
%HVJc1i>nn%)3&Z3T[X:0CUHR5!oJ`W.0ucCDh.CEUYlB3TC;r%@UQl+3%G8?NeA^o$dr_$^:IoH\/[@B&VP>W"DS7)Vd0t&g:"hP
%Xmq.A@l,YsJJJb4g6.X3_H8?.l.a9A'HBLn*kLQ)8!`*n)XrpEStR@Z6=!*Y0=CnP)r%6@!oq63`Ro!'B"E[5ZVpp2W\AO3!>i0r
%$rhH>N#YE.DZjno8H^FqZ>EuO.bhtjeUoc7-?SH@LZkO%[Q-b1N<i;f_e`OFg'6;b-E%;O-H6R_.#=.*"pQ<VK?=U"P@>KXQ>6R9
%_Upd6)9JP3+SufH9*Y+NaH=Pl1ciQl@%5VU[!*l`YaG`YK<a5Q[Xk'k/_5.XE6DM7=R;d5MEK\Q^qpZl,<\[ojJW.]CU\B7d_s)N
%#4&<lKICR)$QM[&)7Jc`@^\ue`Z/KPondN`KooRYQK1G*bb0q\puN9lU^=j%M&b<T!.rpl[Z"b%@C1qJKV8l-K#*^`[]<dOQtWeZ
%i<DfnQt2_O`mrK)FDOBt(>:V('\bm6CV+lERu)hP#Y8Gk_PM4a(@fIc-.`oL+#qfN=3E<!,@LuW2fS[rhe^A<Oh`g7q@OYbg`_Im
%7'bQ_@/1Ap2sKCt'*7$a;_pq[/M0dJ#Qpe)/U@Y7+<b/`7u03%N6I#_?m-XTl**[8KJpc$d'cB%0FrL80R!gi\p]/q%#lJ;cE0P:
%n'4d/&1T^a6Bmn*P-#)pdLh*Db&SI=*0G(?_i7lJ8kC9PaJ&$Z!,HB/XPBBdPcdKV%%H`fJuhKe0dD6E9oMbBAr8Jq:g,oeLB5dW
%)ASrdb4Qdp*%hto>4`8-N$(`!?)sZ,!u_E'>\P#YVB0FYC_JS0D#qTlr+Jl7&][EdWq)8<4)AufUsMrFOpWlcM-q$tMh&cZP%8R,
%g(2'9f\tbW,(;k?h.4"QiaGBr!SU9e(]49PWK_@c#(_b'!Hpgu5A4")7CY60&9/EgTOU`kilT)'3&?5%Ek0S9kFo0S=(m3g+5l;;
%(lZ?el^rfr)Z\@$\n:9$T\86)Cs%M$TLlc2!#]`LH&l=#fM2R"3`AF^&QuG8&]$dI=Q%2EP_OOuNRN,F0-CFSc'm8bX\;HP6\*Jg
%U;aOV-OOs9FLAg(_..J;O\k@'UIaQ#-7[,a6$*+,,<K."?<Eo'Y=$oV*%=:LFR)IFJA=/f-O&7Tkd_Y7SLh^%J@q<3/6LWNW'\cL
%B17^2,:YC!\uM=&-$2&1eV#(DU]iGAedSm\!5':S]1@[n]AaZq'&Hb)[OYOJ'\7gnE1WjM"ef1C9Og?AK,sngCB/rW2AYD5U4#GU
%(?u`T[/mVL7N@==+KM&7(gpHEfrgI!Xt/]cmFnqD.o<BRpr.g/2$nB#rQ$/lc1?J=UGHc))BYp.dkO5!_(Zi.!W1>;#(S^tap!lO
%AEb^eYuU,tZkDhc64=\W!6lH)/(?I.,ghnk[]A=E`"7\4")i!a)o0`&V1:^6</j48b(Zh:9Lkurg_89d($E"7\?6e&!I)^UOL4YB
%)1\N@+:3podc0=iO\a2hB*>R["(n#),G!#QV0-kh`X$BS.\\me2SkF0BSNrNF"nJ*0i2P(4UoE>D)@9H([bce;E/S(R['^GFDWmh
%c2\Mg/(&'iFDX:WdeX#2*"64c;_&[-VN_(8h8+0qc>=\$Jo/;Lb/$gI=>n&FMN>o3hrXua+H[Y"UHiN0b`b?R6Lgan4.nTs"?1!P
%2NiW./;b[/`jNLT3:D$@+f.%CHpFogO+JI(dKB&)$s9CfeH73WI3<I"dQrC%B)N53F#41/5^8)Wp,.klP.c\rQF&KWKu1?-.PQ4>
%`%fR%$RP*C=LfPM+%\qpVSXHZ,Y0bdkA666.Bl:IK&i$c0iD\n`.JE4O;j.h+cq$"#$f+lAc4@L).SlZ;k,8Uaa+t*&.H69&N\$i
%E=WkkQ"3GdGQl6++5O>U;euXL\k&NlR%[nuW+Zu1,a#pi('P'<_-Ja1Kl)i0GB)QV`hfpL6h7Z[nBeT]e6@C3[%9-Bq//RC(`_\`
%Hj5Q_/O@1:XpkdjGB@T.8cbE@nQeN>(AZUgo-pY5l?KhG_$;ZZN=)L,I*1f<5<pY%!$OiQB[((_I9[`9:[_+nN7L"l,E7B-1Kj(s
%jqK@McZ)Js\PCL+!VqJuMR68L\3Qt4-t1'p@mi&uVKn+Yi+hGA!l^6a7=p4^cET3$-(uh].N_nJ,IQkBD&DLUJP<,0eH"1'"=K4l
%CaImNP#Vg*J`t2f.OeXc"]f_S531M>=I=9:Bb:ppU0i]o9g;l\h@c<oQ?/3);n1Hae/8C,F[\%igGIQ0Z0$!P.>H1\Rs$)p4\PR9
%CDXmO&U27)lqtbGV$r#F.M$nbPOpb&g8piqUH&u?eAc(P%D.Em3]iZa@WY4sqXBu[\LKG:aCe<dDH9W9GFWH)Te2UdFWi1h58iu0
%1bhbq.YVafo/]Zl>[hl8fmk1NFNT;FS"]m6R3@sLUc&du?1Z;fS'd[:cI0Vo0t&LnR\2q_Bo5<5&lWRpD%,lrJ:hIL\8ZU4Ym>pj
%#f`:qi)L(F-'u:1C'k=$@l&pJBoRR5)Mm+CG4(3F7J784aE;/4;Glcs=bdR+Q`PZfV?c.[N^h?IO=S\>G.RkaVpbWAC2'0E%<Xs8
%&2<RHPLi/E_D$U`Ih^QdfL2#f5t?5kQJP@*-Ej]R$b2oS;'h2[ZqG@,5n?TN^BihGF@FTFn8!*fJtr>]:`tSJ/6PSU]g2AOUaa)(
%A/Jk"3gb[rOX!O[9'6d!-mZgF,O\?!P*Zdr8^NGl#0J\8-&-4E!t-i";a>I/'_rnt-SWm3P'.PPZ/?A\D@79X0fJ\TP`)#o#>]nH
%C]eMNiM`-Ge,d2iM_U27H"G_U1Ce5Y;PD1i>fEBjK>A^BjTA$\m_EGPcQGiE0YYe(>7a/HS/CH^]*K3"?7gI**k=NSd'5sKYth3I
%:Kjcc:CPpie/VR#&!/K1D2ZK0TXKC;#_<]M/L9skNHXj/aP!s\5P_At<t'e(<.Ngr;af3Ac8nHa;WnC=PqFf6@\nUHL(2Hbr5;lF
%&?pD!)fE]<"iH"L'h&n'*)/a3)qr`>Ueper+U"^!*t/[e<BmFg#YLHb&`+\(fH7MPYnP)[JQ\*Ac&oC;Yg!_9Z(NH9^(4>lXpmL8
%&N^,!pfn3ebb[ruXLQW\N-kg5PVBoZ%K72_dcJ45S=sqs<@]"0j&d\%/EAbu>\$]@g>%TFk3O[aM;3g`9k;.li:.3:ifZo;cPSg'
%Lr]Dp)fZXW$@KM7RKm4KBG2i</hkqGC+S_o7du(i1Y.q6`$r4P%jltBUCS+D[mgoD'?$:dA^*Q#b=S<L[hqHLLsFab$=F9>op>e(
%\!EGuCq.sKi%_b#!G2*5P;^Pp@=BP^8Ogn=m1V$RLN?2h"J/,n)$.GPW@gY3::E-kZ'ke.3>U=]T%neA#LSZL$Nau:EYPn;Mi4sM
%;mF7dF<spp7S):RN-24]V\h,!H8s`j3WNt#<].<9jjg;(.2sZh:?FkValB*7*QZ=@.0=!R=%]l__Z8S/BtP6Q36,b[$s7fHO-,3U
%bt:oh%GSBE7Dg#ZjdaCWH&hud+3#q3&iP0>E?EtZPp,bpGSrQs'fJW^U++Dub87mY[T-7"a0cf>#3o("Dj+k(AE1X7%?QAsL/=Ql
%=pLFTXAJ4n)ja/qkeqgo[0[]Zd=A/(]e$VV/3pU`Ra/pQYR,/HcR[q7\;h_VL.'*Ll%:e9[Ah6UTPGId=%2%N5t/EPNfL&s#NJIA
%A>Mh\i/p\+X)933KZ^]CB.@W9V!-oT'0)K&`]^7Pd+n[9#Rb!s7><l)_AH?S^`s)iOENp&O`;BKQ7lrrl6oQUeM,F;?+Bqnq*TnZ
%gCOaWC%Q;+&_mQ4^lFF[=5a3OS<O)`:ct#C'L63KK:S?^=L?kBmMI1L!RE(6lpT-0,jB19!fnQ1[aG\'**\,R?CNjiT#TEi32:L"
%jffd#ni%6j'UhI8KQ6Ak89U%akO!l*o.=.EfJdr\2Mbu4>\Gh/P\kI6-I=*7^ibjG->"ZqZpSA382an]%?iCW#-KqlD)O/1_jN;I
%d*FXCqD(-,FUoJ0E[9h#^u:bF8"5&6b\1@fKs;'+*-S('7LifBToCB)KU!VR,SK+3/3koj"\q=97@^)'?kpRm%)@C9@jnircof.=
%%LU)4#72$_7p42GP]gr)Ht/p&(t4Ra'8g6.R'^pc(P0C\@Da'K*mQL%jFeR@`L:&q7p5?AE(Z);+cMmf\<:)*YQp0rYh95gZ,G28
%4S7($J<E5UjL@KSTXAQm\F^@OmL4?)R%^WL_\oF7%#$2Jbgib_^^Fan:foj8<@+:r0bf`.W&CGO%,CD1WRekm!WP2A`b&iC1!iU;
%).k%7[jc?mV6F,9g4WO,W7T/5UJP1YLt:\%0^fk3O<9p02Y_gE-a+u',#,W+LS=!<Wl_#l0%rq?38L?(j@UjdF7EAYJB'o%'X3Fu
%EN$ZC?-rARJIb^hb""'d4<22;8XVrPE)C?d.)Qhb,M+PUKS.Z]pOR7^D5oW^K.sZ<Ptfk>oi^@uTZR,?$#phU>RZDB!/^H]BuYZ3
%!J**ZTsIcd.P!p-Jn*rcRmjbB"C.%M]BDjPZ5F[M8G[iEnHaA2!=B$\B]j)^Rh\iT(4053*'HE')n7cR?tGZU1e9L\%T\-V%u->*
%V)HLBP%1IRpQdh-?4t^J>')>ORr+6hNU93i+?27s+^NAb.O#7:$[Ts_Jrj4;BTBH>G,LK]+,^:+cDf`R]4>K+#rNg^ciJ>Z:dGfl
%b0%ec<gXA;Med3/ZmaM%NjnFk6I<'iJLdj%2?R\l[a#S>20:J*e.&Nf[+Mg-:'"HrK#76bk&I(0=.9>0\/Xo/fg8MONOXu,:jH2S
%G6977IM[N>g5SbV/XgnGPf+JZ$XZ_rU$P5O\8@-,Kug'q-/<t>Lb_4$[EsUE,&&tgOdfTZ%E7ph94E7g"6G&V`53tS7aZm>^aLU\
%m_)WdGmIpK!r/==V<>/B@.ATiPgg_]3@>FI._(Bk0Vgr%XXXtYPQ`G$h#]sS2X_6..hjBJM\$`CNdYIg6Ugu_<h!Ko/u2knL'_,<
%)s08]"p`mj,B8/K]P:r%'U'=Cjk<3OD8c[eF[Mu6bFa2>bu'Fm:opE%@r/pne#kk:'i:;O"_Fs7/#IG`(,&28`qn4fg(64[Q>>M@
%K`I0j#MBP2#$0r\;':6hE^Y1@oMu,!A]R^ZIDLlXd_%P`Al44:?2-5q=#P)Y[6hn/CaQCC2lC[!03>8-MESegO1Ya1Y$r^jG3_2l
%i!GKu74d;K/IB3R8RW97!T$sunTh6Q-litBG*>n#gi\!0J@gs\cF"&,GJj;%p,t[@RfSjYkaI\jnt'5;-lBfTO!C4H'UE.3P[.tk
%2FTh,Nm>#-fGt<5_@,I$Uis:qY]O0?Ya:,A]>Q\LAh$?iB#1RnNO:Ci)a\42gD#C\^8P:'+1T>0.8`R&VoW`(aV_#YO=kt@$CXf\
%ME'DlkDb/,Ug\(S'k_X^'S)S9JJH]T.@3I5ICar+MVGNWD@qOcS+/[-BJEqCE<[>!`\TY6gTjhD(h>"%S%E]mCr'AY@\f7_;fI7G
%V$41@H\@2u&Crm]a_)_lDVI-rg16btfEo@+QZdh@9tiFN\;H`B9t+kM_GOOqn)%M/f?QRheRu>8f5jS0SOLMcDi,_SA"7VtW;Y0"
%]8SMn+6UPGSk"#B>&Q%3,0e2\#V7rP1T8G3).R?D]?=Y+7Dl:QBPagdA#g<q6+biA=,<LniR3\)\PlVSj6pGc'J-Qh1KGnQ=!;</
%`5uYN[*+5>RoMj*%A8UMU#;?X[sI&G.=ij4D'^Ok\U;YR6'')jbL!8so$%16/_;PPL7_^E@uh>$CaKLq)oc(NToZ&U-jdS4J.Y1b
%XCH""llnQR/NZ9,.?lGPg[DWdI6!>g:*j*[X4"L2q^.^aAP]XJ'<\BtbfT&9E7(fU&?\F*^T2P.cJ9p6XPU9:fX`Tj<`kse)I#$D
%eeG]@J]ma8>I]Q%e1tui"iX1T5asAYT#1Ch,tOsMaDF4WRpU`W8[sq,1W#uB3;:-&>p:QI&4U>>]3oGG6"/JD2`sbmd,M`c9?piM
%do_YEq0X)84;OQYLq>Ls]9?Hd9Qjg,JK/s@=IP7V.QF_A;:9#Ri"L3?!ULY;7>"!:9I.CdE)#2lqqsS>bVtWUL&t]$2mRte6=1EJ
%)N#SFG$fuD/JWIUe=]Pcr[6(G$tEX&Z6<*SWuL4_C10J]_W=\[qP3+ka]6i3VomSfEV'KPd0,`B\mjV@Eof:K64)d_i[QWu[HSDW
%Cq%5=O=SQ/;A]QIS-"ba*N5f4Z/K/n$4WE8K47K$lt$:1[,gk'BQNb`j!%1;*hfo-nZ%SN&AisjFYKI?Z?J\RB%6&&3jS#239Y,E
%@Vop$RJ%+-jL-XLJToW]R?;a57.hgL,._KBf*r.pQ8.OQW"!Z;:n]ngl##Q#9*^I24C/-rK$YkI%;!?E&m.Eq*t2qrlk/6R(i.K.
%@`eBN,2S5Tg/hJ1e/_jS+B`5"Qc<U+Pd%W1O_#^OS%I7OVgF)ZmE/\."l!j=3EaOm18Zt\/OK']_YXChffL(=l*ONB0u7b4Nl?:\
%?"Hr32[mKi]cW#-J6Xm*(LBG/Mk\"rFi,rRptQ?+H>HS&\Y;"[J_)ScbD4$a-bSS.;TR,,AseBH2$UL:m1.6hcrFJBd$N`h\,d2?
%Fm((kf]g8q._6T2-Y[FB1F1tf;-63)W`0Ko[PYsV\Wr`LFE1_@XDHiN8\-&:e\0\hA2gC;I%(CH2\Bc=2I?E[7#UUPWl^[9Udm`@
%J^9@Ip%?r#bQ^i?C@,Or/nXJ78Z>gT`r*7sOq"XMe9eOQeUob6&P_U0fo-%pRZY5[K+VPS]Qbc_PJ:)j6@fI]QfDS=Ot:^K>p0KM
%N[*pH\f<AUcp\s(IBbR\i4&pNO"I'F)JG#td%)6$[a54>faVS_\QlSigm:j4ZOf09R-XNFNj@lE6uG!R)<<nRnPZ<-G8.h[ZSY-Q
%Lg7nWk1ul>pOX500FN`K/[TB?eA^K)?DPY'6og;n+Ff)bg>9>s)6biDeZZSV!CW__[pk(bmOhGRA3Q<UV%8TsBF.]J)"0brT&E"V
%Q_Y#1]Vg*%9Y1EP\&I;<L+u8:UB@<?=ZTk[=5Mt92P(IgFH*gVXs29`&TZ_r_/LYG7;WTuKs$#,\-EVM.Z4\t^%gl"9_9cHlUSCl
%#9>tY>Dq]m1uW@7_>-Nmg]^B.[t&=5en'H;oL/RUOES#:SE`SNX+ep;g;eG8dhS[gqmr$%#s@6gB2_[4XgGQ[!ajGQ5s_M45Upo5
%9+3\a0]m^OQ'.O5"%SGuDqcUEYn0^Bo\DUEA\2!8]t6S>_PD[hJh1\e\_i-J.BP8)$\S0jPRA(K2hY[MKuM2?a0hG]-%<NtLglq^
%S!Cp]2M'%h)!:3Dnjg)\_cX)D4VlCJ_P/Id87Q_jE6PlE;R+k"Ej.mR,P'EL9,O<QOj7C?YsCZ)BjV7h\M&a`YM&]RYpV,>jTLWu
%)q?+9f\M+XS@<$^oeFi"TOR%3MJ]'u@(-E04T=)b_>fpSnVMh'dsoom;l7p<ULt.",:1@/m9OC!Yu)>?hisd34hAD1>nDZdkqCnI
%AsDMP0Yd=h>S1^\HOW5e9-!CelHlpVE\XgNAC;dk"96@G5'RXmQp+NQi+S*Li,8g5P(38PKF?*0FD%rWWWX-TVg:B!TSgSoNlc*0
%=%h`Fd!I,]9cD26rL5)kKnG.8p=_:A9IUPTKGor85oYPlN^i&g9<p_EN\U(5I0)_F\-p=;di`Q3U%,P:Y"/Y5-jRbhCU$2CSKf0%
%6O/Y03L*HMS+ZjsXkZ'QNSY1%re^roLO]bHUKhCXYXOHl&RPB:h71D8fMS.>_rWI)7I_rsiY&PhnWLP@_H<,W-I9bh,bN=OCJrj;
%5>]]>fA^@g@DbN5GD-9[d*EuZ%W,+S)aZ$kW`42c7FI_]CiY4EfG7'1AogGo,b8,Vqtoer"1FB"d`1$J=ArV&H-g/1NhC'W'B.Tt
%'=afX(Si]/NJl/;jFKTq'PLR:*>i.1!mN2O%R?..>=[tce\<A]Ql@Y`N(m`F9ZMh1S-26>:Fq<->tU^:9C=cu#oCc=`[c.jDG]6m
%C6>V>6"nnC&%ot#H:S7q>ofVo#;"Zo+W_HjYo+bX1d^6F,pFhq+d!nCRun!5@SH[Y5'.M`$Mrcj6E[C1MlJ2[rK5gH3In>4<[6XY
%A`b0cf^*'\&fF\0OLeX?kb\rA@N2cm,LFAm0gbdY*@`1mr+I0;ZO`Ca"L5F56<ctDnY*L5"W#+l%YOY8Htm!Ag32j:]9Afl]]+QU
%:'hEA$c<$99)r0tHsl!ikh\'6TgY):3_K\7Yd&D'n;7q1T&C%b[bRIe6*cJ,7KKn)Y+f:ietuCdZXa`\2h!I:/=^RQ.6rUu<X@`X
%Om!ZXP/Wb&OBBE'5pUirPu87e%RfCD>.F)X<F_PT3s=4UO4^<sIsj]:G>C&%1/[JA&/-"&W$L`9/U.ZEB';(+)7dB5_^MamXLmm/
%'5;ibKLX]p\pH6Q"s/:R!i=nZbbMJ9i]Jf]fXAa\AD#Wd=QPIL0PEh9:(mjYkn4H7_E,'7*AiS>ImHW:H4mg*(:oP"=V86+5uirt
%(.c3G7MF3".H-MUTJSah")gQ;$8bFG'6g0D-'c(Ra$O-WK$?p!Ao;DQaSUi^:_Z@92A^FCpsr*jZb!7I`In7\qp<tL7^sX*0'leD
%bc4BR$FC<^&eZUrMp2rc_)=Rs*P)\H@1fkHlshTThU+j:dIm*T7'nP;M_MRQqAC`U(.GsMQanm#U,-Nuo+*c.Bq3<Yp)Z2Z(NCY;
%Le*7\p_qJ2BL^WJ0ikD:P7$cdd:dVEmFtk!h(t`;$Q[Al-:U1Q'Y#qslqLRq5I.K[TZq.c^ZiV%YG]9>Cm_%/N:@Hn@@OrPJo)28
%Tsde.2BBna[&ZH"kQj[r+lVhj)LS2H]/G#h'"'$sRmf9kAlkpoO9.2E:]&KZ>2k99,Pp=rGuG\mE(,O<cucEC-Es#g75+Kop?!"a
%jYe)Qopu)Q0"Td!>HO:1_H43B])1jJUt;ZqLJT]ra8DK'DTga-=7@C$\YEN.Pe4pM`(u'FQ$a2?jI*^MLTF-oC8r4,NpU,B!EGW_
%AVcS6$!a,r;m_fBkqh4Z')m-LgYU2l>@iB3Dd]Q2P-,[M2Jp'PM2u51`XR-+1V=:^hZH3iA#m94Bea2D7d\;$m0$#pi\NYW0Z%&J
%mbISZRC-NrItpQJRW:@<EY8(S7:b0.lR&o1l1?*Z__'RC-j+EXpZNH[T\<Ao8%JI>2ZM+\jeJaL!lKC;TY$YM>;u6b2iP"<nrJgK
%SMA"`]5K7@0[;eDgfI]gOP!tC$P,elfQ'hjSuA0OJ8^NgQO[MfIh.<tO-*AsJ\@P2#cB.%g^m;?YiK9@B^Zjdk7!f-hCa9A%98I9
%_?ikeP]mh+G,:<NIW#O(4nD1AkcCM&&su>"JooG,ThJu[FaTBBG?N'ONCKmJ9@d37'Y7I9(0Tb:>h"u8*q'udDg"s"/Xa@uSQ5M*
%d:Ai2`3@N)cA+7^Z1,5@m,?kNEdE>Bs1bsWfs*%VJpSdB@5bG3<:@u`@LXh5=RZEYYm_7id+Es-kJeb4Zt/W5f?-;?p?hIMb`%L:
%)ZDOuTZ#P02@'5NG0(lJ$@BC^%5&#jQ!a3b%m;cdnCQdlodO`?$[CB@U5idWLm1a$Xk(?2=[l/HcYQBI*R,/Ed/X9nZ\qU!g&6c`
%;Wsrtjb"L+>AUSC<BgsnD&0ZfP&nPc>fDqm/3/AZ=B57`*OcO'Jd6Zm(*)Ol[m1nBY@PJ##-NlQ>Z0@;DcDM(mpUi%.Y<%Q=gn\V
%-H4(5P>p'4RN`RT'`jY%(a>Dm>GWqNOM+3Kcmhg-R5_8_.8RB?LrnoKd,*pLA>BPV?KK+0dB'j+?SnND9_)H.>1UCg1jSsJ/[[0D
%XkGX0'%IJ5V5;bXLu4Jq\%%T>OZ0#'[K7tbG,?o_%s`C$a$"_0;#BDEB$]I@>Y'2#O@P6>)P:%P=&qqR1%?.!K:8a^pJ('-*8ZqF
%LMdedWsu%Fo9&,??M76Q!Q@Z\:!lu:^iR:aZdG(:TceJtC*%J3^)OeO_$R_($*A3p-#q&$Tb.#h\C:22bC]Qu`&,o<(r#(\ksBf_
%P3%IjFSCa#IJ0\Yl^hWZr&uWH29="<TZ>#PKf]E(i;Rit`9Ou@6D@8u/aZ1l#/5[qLC8YRa+e)@q;c\k<TlEOrc4n%7>m?dlTJG=
%+eL3$C0F3#+$*'6<XhDtlg0!nr,Irapu*=$4s%),l`2=@0o:TGN=i&"'I5]PiD&$Xb_OA7-H8he).1B7NQ+i#'b_IA/!c<87->%)
%`KC;N4>iFY&$LAfP`%=b:?Vg%6e0SMf@pN!ShZ5!YV$1V/DhlZhRspLl8H/K4?t4ll1!oT%d>pgX%EW5F:k+=2;qO^hgoqT2&-1;
%2u<6G^07p46DD*<D/8nUZrJ%c0N'P?F@dBrkfK-cAt*&;OL&l>r.@$05IgR"G[f+K9a'Bq<`(qX'Z*rP<Ab.QULD+16auZOmGmEB
%S9M^!;mYI=ZC:'Ef/(C6%Up>o.\Gnh7MtF#*8!nICKS$tUu/;3<A$.R(g`VUhZmJ"-rP>hZ,!TO(sgV-JaWtt1s.IHFu9Q7j$[0D
%!d;d*3J)GoZ$oTR"-^LtlXT8a77R$@g#d$pB_NHNFr6n+=13]>AKAN-_\U2HN\C#dOeV<?6^Pl%f.spBoEIk)fXGVd>-WBn9:!:6
%7?a'C?0,>,&Q1XB]rAr#A]]r)2phAGlF=M2d0&R&=iY5r"qg@76_-!Z`\73`CA[jbK:A$&%.anWf(tr9+t5daQ(T[78<kS3$e\d^
%$TYZ$ZHLV)B+oRT:?P@#KjnlRlRq-J81%A<#a*[+T'jngNDbF_%9nA0!Clb$Z:^DrUm'ec@";hc+0TE-!>jHaH6]+%,Sh&W<i>2W
%!I1,g+%cZ.s&g)^jEAajk<\_U77M)@NP7hsiLrf1o#=,!:n;,9*S:r;c[na'-Q*5OaiQZgEJ+/bB!t:)p_>OVUF[_6Kq,.gjG^6Y
%FNI#A-r-3pOm5N)47a*ZBioi^LWi*()^>0,**UjCFWiTCTgjO\`H)mBbV,Uj%KjrZS@hGHJ";_JoR=CHEq2AME9\2sXqI3j!%\=C
%N>c!IRHZj##cNV](r/`2%BB,%4=$Aq-1GitA78F6Sk249.iu97&on-0:^jOFCLD70cTZMJ!eG8OIudTXA0"kA;8,i(UJ[!g0al4t
%lrhhh>e#;L4^G7ZPY\?Jqe^q9YZR5#F1dL"`(*uOQUBdcNb6KXC<LemcX]>H+Ga:>A^:i2Y*#HkPT(huLBoVf8!Q5aWG^29(,!u&
%FSjUL*Eu8ngp5*2qNj"(j+(N#V8I=i&:NE!gHAHq,0"0-9o%3ZZP-,i.J;EhoJP&`CuuO0")9rs@lednJc#H!dLR9g0^gpUDI>s@
%;_37JJ#<kQ#.43`$'cKa*m]OUPf.A<R\_-1P4_O0dILDM&-:2')9-dMm-!5/RIF33\u-TUj'PW-FtR4a,n.rub.&bcb1S*hh1A2U
%0\/AL<[!7t=t97.h#qa%lYI*r5Us_]((.S\@+\rLiGmG=/Pej.-OYpRk=\JBhBR.ZZ7Q'%YSArX<sj3)6Y_EKJr#.G^k6kJ0qd-c
%Rfc#lj;c@RQ)BuXk8:MKmT>an+>T&rB^dqt.C!Bmh_6!=`afe&99?EIStolAS78WH4&l>,<>i.0i_`4DrtVZeX`Z158?f::7&&r.
%bAK#h\"Rp8C,_9iUY*K""VF$-*))&TeqGXO/kI6!W>D`(7L@,s,go#mXfrYmoL7F4jCHaka0jAlMP+Jm,4V@4"2g;WaXFVq0?LIe
%)JO5uY7DS9aS/TZ[*<Y2+AC9RmmJ0_<X/-k_ZWDL2q2QN,`RE%ZrO'3,aWQ>UWC>>75[9iaNbC[n89#h1.-%a9^=!6S*Mtbi>k@o
%%7&qt\4n=R3mYY#G?0M1DjrcF9GD$bb5YA3n:11@R)F*;7Gu1VP?9seQ:T8JUs&d(FCirqThR,,n$!ZuRjLD@K@PlNcm1gg]GF@X
%,?$H%kb^.Q>Z0$Y0CNUBIb*:QR3@8I9#eq/-RMjOS#\>^Db*r75`?JGSeVt;)jiC?$OOH[(YfP]9-[INRR@W1QnhZ9XsB-XHdU_6
%'@aBDk[MWp"BBb)2CIM<J-"&'b(t)Y<Amb%EnP_rT[ZY;OE;^F42Pj3q0oEUX*Gj!2%X8+Jc0iR=*HA^2,C9==)jU7e)iJI\Qfg0
%pdBnHjWe=j_,6j6>!YE?@]ia75@77V%eKPPmNV5o!d/d%62,1#nB-G!q_a-4%sE2T=X%@](I8;dQ9/X!E"N8AD\Z:ZSp*6UiVas!
%S[_2UIU$558A0Ge.O*`bep@2,LW*?8@VjWD>kSKh@iV&YFL!:II=$Q78WqePBasi9Z36rA"#CDHd+Ar**i3iC&L'Tmm:hc/AbsLA
%eAJ3?8h:Bjc!ujXN0nN*ep#I&:GQCPB`d^"DZ1=rX\seQ#1f9,dE(fW+k'jm;ob8ZZAfPiX"XHQ8WH.(?7+"U)OL/60J"GX9pq3@
%,OHi2fA.;'T&"HS4B_E#GmR-d`3SI8QtW2Yro:WQl$__FL_;_dU`.#>FEOE`$OtMRcniPFeQ)#OC8TSIp$8(.<57umqmOiqWI"JH
%Aq((#a_l_!S)N!H[<get<j'I/Q)1aif0_*L4aBOrP`kX(oVl/`X.8B-o.^bS_Hf0MefIc^L`N@CKtKN-"3L;H,MsiRh,!h5hlS9U
%i@:/$i-$K^Wak5'%U]jP_Q41CqI8+sa"d+mO:$`!(@3#]og"lJ#fFu^WfhmmBI&,\bi8^!k;4L0m'.4`:<2Cb>Z%=bc80Y3NON+u
%G`3fIF94Rk*3rS&@r3KNTh1)k@_:0Ga'^VPh'p@f6`\!".a?1n=#"XaCIdg8`G8*%_2VR.Msr(fZ-!NXl<Dbr2!]Q_.^3*C_s;-F
%%bBWd?6PB?"9\*'_EC9KIHY4%`c)2l^BW[4e=itMbZV_?RenPUc;Z,WmBY!`Bf(gGYEtb"g$;EUa.bJ!R+@Tg[2(7N0d!"?-Ojc/
%YsR&S,1,$9l$gj0`)G:+G$6dJUDRhp=DA?aeE4$-A]e/RhQiL6rc)t;"@-V!AdS+$8l:9?0@e:sgds0CVpY3^6uSn,VpAA/i<ZIm
%8%98NW\O)ij\!i*852VHF1&tdqXgT?SEdlWNU'-UWMVJACFd\2.');^S_%^%%R=3V9e,)<?"]F#VK29aG0aK+RZXAE4YpD?K6Q^?
%iH^8H]C1CtlJ5eXmm^afI4(q(;"a=K`:iW2PkDLMs7,j?+nXsDJ*$[&5Q-9&6i[)`e&T6$qYos`^kSPT^:aL?`uj/frqsskpKp/a
%lh.;#55k?JbL^*MrV49s^]!^F6u^R;iQ!$irmMs<qj[Te/4ZsM~>
%AI9_PrivateDataEnd
