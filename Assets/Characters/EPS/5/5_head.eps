%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 5_head.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 137 152
%%HiResBoundingBox: 0 0 136.3715 151.6831
%%CropBox: 0 0 136.3715 151.6831
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 9 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:30:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:30:48+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:30:48+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWpJEjRpJGCRoCzuxoABuSScVeMeY/zs1rW9Qm0f8uLVLiGAtHd+ZLhedurL1FtHUeqR/Mfh9qb5&#xA;VkyiKTQ5vONY0vWtWmZvMGu3mrmXcpJdusIJ6+nBD6aBa/yLTMc55FjxlJF8meUkHE2HOnQiV/8A&#xA;jbfB4su9HGUxtI7zSmEnl3V9T0Z16Rw3TvEf9aN6ow9uOEZpBPGXo3lD88Nd0qS2tvPqxzaZcuIo&#xA;PMtugiCOTQfW4R8KgmvxpsO475kQyiTIUeT3KORJEWSNg8bgMjqagg7ggjLUN4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXkPn7UdR8/ebpPy50a4a20LT1SbzlqMZoSrfElkjdi&#xA;9Pj+7sQask65c03QR995Y00acNF0Kmn6Rw9Ix28Y5yEGlOZ5HgNtgKk7k5gn5lpYdq/lDSdJMkL3&#xA;N1c3aj/eK3QNIAdx6pHJYweu+/tg4itsWnt1QrGyvb0qazqV69vhUscklTjmgTiskKyhGr9pwG8Q&#xA;wqPwpiqrdXdsxeO1R47OZR6trI3MA9wp8PCuKsx/JXz1PpGrQ+S9TkL6Xecj5fnc1MMqgu1mT/KR&#xA;Voq9Ps+GZmLJYpsBt7vlyuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpR5u8wQ+Xf&#xA;K+q67NQrp1rLcKjbB3RSUTt9t6L9OKhhv5K+Wv0f5Bt7zUD6+q+YGbVdWnf7Ukt0fUAb5IVBHjXx&#xA;zDJEiSxkbLIL6xtnk9RG+roKAU9ulKmg+jMKWWzsGkySi6aCMelbFGQklyI1Ulj1NQOp8cIs80pS&#xA;NI05kaOX1jGwoVE0pB+YL5JKVX3kvQ5IwYLYxOK8uMj1avf42YAjDZW2B6ppsthdtbuaqKlHO3If&#xA;LsexHjkwySHXpbu301r6yYJe6c8d7bSH9l7ZxLy+5TlmI1JlDm+u9J1CLUtKs9RiFIr2CO4jB/ll&#xA;QOPwOZzJVmvLSB4o5544pJ24QI7BS70rxQE/EadhiqrirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirBfzz0+a/wDyl8zQQ15pa/WDx68baRJ3+jjGa4lMeaN0PVbe48qaRc26s0d3awzosYLU&#xA;V41ZRsPA5qJ8uEd7jnuWR31No5OSg7rMCCN+7itPpyoxRS0JZTszNaMWr8XA1FfoYfqw2R1VcY7S&#xA;BeYsyAP2pCoH/DMcFk9VV1exKcpESJnFCrBQSD+ODdDz/wA96CkykQESSoGZWG3xKvIr9Kin3ZfC&#xA;TMF5bqlus2l3EQavrQyxsO4qpH6jlsTuzHN9EeWtas/Ln5QaLq2quUt9N0OzluSNySlqnwjxZm2H&#xA;vmxbDzeBeSrvzF+YP556Bq/mB2KIsmrW9iCTHaW0PI2yIOlfUVCx79TvkWZFB9YZJrdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVY3+Y9zFb+RPMUsu8a6bd8h41gcU+npkZFhI0+aH8x/l5NZ&#xA;aBDqGnX8mqadpltaTajp1w9vJGqpy4AVCsV5nt9OYVys9zjHNIFkvlXzrqmk3Nqy6hc+ZfJ93NHZ&#xA;ym7Bm1PTZZm4xN6qjnLGW2pT2A6coynxAgipM4ZhPblJ7abWHSrWa+u5Y47ZEMklwx4BUUciXqeO&#xA;w75jzgaB70kF4T52/PS51e5ay8tTDR9HBK/pqWL1r644mhNtD0jjrtyNPmDUZmDFGI5NpEYjdgU/&#xA;mDRnkrfya9qqFuU5udQKiTalOCjYfThBPSgw8cdKfQnlDzP5a87aH9b0lDby2TBZ7aXaSNgu3KhP&#xA;IEdGzCkJQO7CyC8k882c1h+lLaBSHPJLUADcy7RgV26uBmTj3Ibo82ef85CXMi6J5Y/LuzkKJflZ&#xA;L50pUWtgihQQf5n+Ie65nlugN2Hf841RTW35vana3dz9aeDR5oYZW2JCXNvQDc9FrgCZvqjJNbsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirB/zu9QflV5jaMVZbWpH+TzXn9y1yMhsgxt8xeY&#xA;tEn0PVVmmQmw1GKK6s51+wyyxq/Co6UrT5Zrr4g6zLElf5a8wS6f5wsZtMVkF5cCF7ZW50hdq7mg&#xA;r6Y+KvtjHH6d+iNPjPXo9503zRrOveXtLTVPK8k0WsPc2+p2xdWW3hRXMbTBgK+qFUU9/GgNUoCJ&#xA;NHk55jR5vmDQ54ry5lubsCMyyAyrGv8AdpWnFE7Ki7KvbpmVnsDZxtbd7IrU3tUEoVuUfL9yW+1x&#xA;7VpkMd1vzcfDZrvepfkFpWqabBquozxvDFqSJHAjKV2jJ+Pfx5mnywZqNDuc+uSG8x+rqXnnR9OB&#xA;5re65aQOOtIo5wzkCo2AirluAbt0F/57w6rqv5xtDZXv1KfT9LgSB6chxkaR329+eZZb4PPfJevX&#xA;vkb8yNL12+nMsMU3pag1CK284MUpIFeRTlyHuBgBTIPuOORJEWSNg8bgMjqagg7ggjJtLeKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAa/o9vrWhajo9xtBqNtLayHrRZkKEj3HLFXy5e32lXP&#xA;lPR9D81XOr6bP5anm0PWprAIbSIwsFtpLk8Xfi8fwpsQeDUGYksdEkAIljBPIPQvLv5d+Q/LOg3X&#xA;mPT5RrMlvbS3Ed88qTqVjUn4TGFSm3ZcxJZJSNcmit65Pnfyl558z23nGy1D9I3DyTXQMkZkcoxn&#xA;YBvgrxpWm3tmfkxgxIcuURT2vzv/AM48i+1S51ryxfrZyXjtPcWNyHaLm55MUdOTqCT9nifbbMKG&#xA;o2qTikiQqSl+XnkLTNM1p9P8xz6Nc623BrG3tHmmuAqqzSO8VwFI240Kr44cktrF0jwwBtb0zU9Q&#xA;gsbUQqpjh/ZhAHNu9T7n9WVRHVIDzD8rdPn1384rWWQc7fy3b3F7csN1+s3Q9GND70YuvyzYYI7W&#xA;3x5ID/nIKXUdF/N+K+tLf6y2oaXC0aluIrG8kbDenQLWle+XFtg8u1nQfMd1W/1eIW8bEssKEMdz&#xA;XfiSB1wMnvn/ADjd+bNve6V/grW7lU1PSkI0yaQ0E1pGP7up25wgf8DT+U5IFrkHtEOv6dNdLbxs&#xA;xZjRWpRScLBMcVeHfn9+cOq6JPF5V8oTN+nSBPqtzAiyyW8FPhjUEMPUevLxC0/mqASzjF5h5P8A&#xA;zP8AzP0orrtjrNx5k06Fit9o2oO8kxr9oAkOykVBUqfoI2wWyMX1F5F846d5x8rWPmHT1McN4p5w&#xA;MQWikRijxsR/Kw69xvkmsik+xQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXjH5w+VJdF1ifzxY2Dalo+o&#xA;24sPOukRryaW2FBHdop/bhoKnwA6DkcqywJG3NPMPnKLX9Y8o3l0PL2ps+iTM72xcs9tdQvxCxmI&#xA;KeEoUn1KsDtTw5R4RIb82VA80Rpf5h6VYGO9t/KmnrqEDF4Z1LChcEl1jIbZeG2/w9sTiJ6qYead&#xA;6v8AnZ+aWq2wgiu0tba5ka1tZ7OED1XDKCObfEuzVB4g/wAKxp4R3YjFEPVfyt8h6d5e0tPMF1+/&#xA;1+7LyLeT/FMVf4S3JqlQ259xmNkyGRro1TleyX+evPMFjcDT7Pnquu3p9O1tIBykZ2+yoVamlevj&#xA;k8eMyTGFvS/yV/Ly78neWpn1Uq/mHWJvrmqMtCIzSkduGFeQiFfpJptTNhEUGwlJf+civIt5rnlu&#xA;18waVEZdW8uM8/oqKtNauB66CnUgKGHyNNziQmJp85z+adc13ThZ6ZYP6aikl3JQIANqlz8C7dd8&#xA;jTdav+VPle9u/NyXUA9e2031PVuV+KOSaRCnFW78eXKv9cIa5l9b+WdFm5xXdwCscYBjB6s1KV+W&#xA;Sa2R3jTLaTtB/fCNjHtX4gDTb54q+HdXa80nzRqupO5OvWuoTy3EErEm5tbg8gylt2IyJbo8kjvf&#xA;MRXWJdY0y4aznkJd4KVUvx4klT8O/vXAl9d/84/eUNS8s/l1BHqfJL/VZ5NTnt2HH0fXVFSOm1Pg&#xA;jViOzEjJBqkd3pOFi7FXYq7FXYq7FXYq7FXYq7FXYq7FXEAih6Yq8v8AN/8Azjx5E16ee8sfW0G/&#xA;uKmeTTyFhlPX97bsDGd9/h44CLTxPNb3/nE/zBBIWsNT0rU07LfQXFn7/wDHq75ExTxKmnfkX+Zu&#xA;k3QuNP0fywl1GT6dyJLqSh6clE4en68gcV9Sg0erIY/ym/OnWVEWueZ9P0q2b7Q06KSaXj4fGIQp&#xA;9w2AaeIRwxCbaBbfkZ+VmomG51m3fzNL8F1qF7J9ZvAW2IcxhhAD4UWo6k5cAAy3L1yGaGeFJoXW&#xA;WGVQ8ciEMrKwqGUjYgjocLFfiryfzD/zjX+X+r65Lqkay2KXLepc2EDFbdpCalggKlK+ANPAYKZc&#xA;RZv5b8i+XfL9pFa2FsiRQj4ECgKD48R1Pua4WLIcVQGq+YNB0dFk1bUrXTkb7L3c8cANPAyMuKvD&#xA;vzRtPyF81ubmTzRZWepIpZbq2k9Q9SSP3YcH/Vp8uuNMgSHm/lryp+UlhrMV9qvnq2v4bchoIfql&#xA;yg5A7FvgflT6MeFJkX0Zo35zflRNHDZweZ7PlGixhrhmtwaCn2plQfjhpjTObe4guIUnt5EmgkAa&#xA;OWNgyMp6FWFQRgQvxV2KuxV2KuxV2KuxVLNY80+WNFZF1nV7LTWk3jW8uIoC3+r6jLXFaTGKWKaJ&#xA;JoXWSKRQ8ciEMrKwqGUjYgjFV2KuxV2KuxV2KvPPzC/PDyh5OlbT1ZtX17cDSrMhmQj/AH/JusXy&#xA;NW/ycWQjbwXzt+cf5leZIpRPfJ5d0lthYWDFZXHhJcf3hPY8SFPhkxA9WYjTyedoBHJFEvxHfl1Y&#xA;+JZj44aCkvqz/nFXzbJq3kKfRbiX1LnQbj04wTVhazjnFWvg4kUewGVsJPacWLsVdirxP8+Pz4Pl&#xA;Ll5c8uOknmKRK3V0aMtmrAFfhOzSsDUA7KNz1wgJAfJ2panqOp3st9qNzLeXk7cpriZzI7H3ZqnJ&#xA;skLirsVdirOPyy/NvzP5C1JHspmudHd63ukyMfRkU/aZK19OTwZfpqNsBCKfa/lLzXo3mvQLXXNH&#xA;l9WyulqA2zo42eORd+LKdj+G2QYpxirsVdirsVQ2p6np+l2E+oajcR2ljbIZJ7iVgqIo7knFXjt/&#xA;+YXnfz363+EX/wAMeTY+Qm803if6TcKuzG1iagRf8o7+6t8OERJYzyCPvee6z5M8o3FpqEliXvbw&#xA;QSyDVNTYzXV5MiEtJ+8OyjxVR79Ms4BTjnNIl7d+Ql2t1+UPluVeiwSRbV6wzyRHr7plQcuXNn+K&#xA;HYq7FUPqOpWGmWM9/qFwlrZWyGSe4lYKiKOpJOKvmr8xvz/1zzPJNpHk1pNM0QkpLq1Cl3cKNj6P&#xA;++Yz/N9r5brhEbbBF5czWOjQMdmuJNyK1dye7Md/py0ABnyYxqOpz3MxZ2qe9Oi/LASwJVIlX9HK&#xA;6D4WkYE96jx+g4qzr/nHzz5beUPzBjW/l9LStWT6jdyMaJG5YNDK1eyuOJPZWJyuQQeT7XBBAINQ&#xA;dwRgYOxVg/5wfmPb+Q/J8+pLxfVLk/V9KgbcNOwrzYfyRj4m+gd8ICh8L3t7d315Pe3krT3dy7Sz&#xA;zSGrO7nkzMT3JOTZqGKuxV2KuxV2Kvbf+cW/Pc+kecm8szyf7jddDemh6JdxIWRh4c0UofE8fDAQ&#xA;gvrrIMXYq7FVk88FvBJPPIsUEKmSWVyFVUUVZmJ2AA64q+e9R8wr+aXmb19ReSH8utLlZ7CyAK/p&#xA;CSGoNxcbg+nyFEX+j0lGNteXJw7Dmo+ffzB0iwt/TvwBFGgFlosdVRVH2DMFK9hsg/2rCQHGjEyO&#xA;zEPy68p6r+b+s6hLdasNK0/TBD60UScrlkm5cFiHwoi0j6jpttlRnblxwiPPd9S+UfKuleVPLll5&#xA;f0oSCwsVZYjK3OQl3aR2ZqAVZ3J2FMDMlN8UOxVDanqdhpen3Go6hOltY2kbS3E8hoqIoqScVfIn&#xA;5kfmXq35k6q683sfKFm9bOxrQzFTQTz+LH9leij6SZRjbbGNMKu9dtrOL6vYqAenqH+mWWkljl1d&#xA;zTOzFizHd3O5wMLQ7SsV4D4U/lHQ/PxwKjtJWWRzaBC31gFohsPiXvvTwOEJCnfWpU8wO1HXwYdc&#xA;BCvqP/nF/wDNGTWtIk8n6rNz1LSo+enSufiltAQOG/VoSQP9UjwOVsZDq93xYvi//nJPzlL5g/Me&#xA;6sI5OWn6CPqNugO3rChuWp/N6nwfJRkwyDyjCl2KuxV2KuxV2Kp55FvXsfOugXqEhrfUbSTbqeM6&#xA;kj6cSh+heVsXYq7FXi357+aJ9Uv7T8udLmKG8UXfmO4jPxRWSsOENegaZqdfauzYQLKJS4RbBvNH&#xA;mS08rabbWNjF6uoShItMsYlLE9ERuFKkDpGlP8o/FlpNBxIQMyzX8qfyISFl80efI11DXrkGSHTZ&#xA;qSQ2oeu7g1Eku/yU9N98pO7mACIoPO/yRll8k/nre+V7hisNw13pVWOzGJvWt5Pm6pRf9bIjm2S3&#xA;D6xyTW7FXYq+ZP8AnInz9N5g18+SdNm46NpLLJrcymiy3I3WIkdVi7j+f3UYYiy2RDw7UdVmupEs&#xA;NOjYQ1CRRqCXkY7D4Rvv2GTMkkst8vf84/8A5r62ElGjPZW8gB9a/kS2ND4xtWX/AITIcTHZmth/&#xA;ziB5tkVfr+u2Fuf2hAk09P8AghDjxFFhXu/+cPdfWEm08x2s03ZJYJIl/wCCVpT/AMLjxLbzrzb+&#xA;WP5jeQeE2r2Pq6XFIGS+gPr2oc7CrLxeOtf2wtckJJBSO5lt9RHrRD0blvtRE1SSndG8fY75NlzQ&#xA;/lbzHqPlPzRYa7YEi50+YSqlaB0PwyRt7OhKn55XIIffGgeZdJ13y7a6/p8wk067hE6P1KinxKwF&#xA;fiQgqw8RkWt+emo3s1/qFzfTGs11K88pO9WkYs2/zOWM0PirsVdirsVdirsVR2hLM2t6esJpMbmE&#xA;RnpRjIKfjih+jOVsXYqlvmXX7Hy9oGoa3ftxtNPgeeQVALcBUItf2nair7nFQ+XdM1eXT9C1P8wv&#xA;MZEmqa/O1xHBX7ddoIlqSREinoD9mintWyOwtoy+uXCOj0r8kPyuvBN/ysDzhH6vmLUB6mm2so/3&#xA;khYfC/E7LI69BT4F22JIFZNt4AiKD2rFXyj/AM5GWNz5V/N3TPNtmpBu1tr9D0BudPcI6/L01jJ+&#xA;eRLZHcPqixvLe+sre9tm5291Gk0L+KSKGU/SDkmtWxVIvPXmaLyv5P1fX5KH9H2zyRI3RpSOMSH/&#xA;AFpGVcUgPhvUb2a30rlPI0moai7XV5KftM8p5Esffvlg2DaX1D/zj1+VGk+XfK9j5lvIVuPMWrwp&#xA;dC4cBjbwTLyjjir9klGBc9amnQZW1yL2DFi7FXYqsuLeC5gkt7iNJoJlKSwyKGR0YUZWU1BBHUHF&#xA;Xyx+d35EHysLjzT5XhMvl5jy1PS92a1BI/eRk1Yx1+lP9WtJRNMwXilzb+tzaJ/V4Dmr92Q+P+UK&#xA;UPvk0vb/APnFXzpMmq3/AJHvJC+n6jDJdWCkmqTIB6qL4epHVj7r75URRRJ4HdW0trdTW0opLA7R&#xA;yD/KQlT19xliqWKuxV2KuxV2KuxVlH5YaS+rfmJ5csFXkJdQt2lHX93HIJJP+EQ4Ch9/5Bi7FXiX&#xA;/OSutPdW+h+R7eT0zrE/1vU3rRVs7U1+PwVpPir/AJGIFlTKgSxv8tPK6/mP5zGvXkVfJXlhlg0q&#xA;2daJc3MdCtV6FU+2w6VIHQkZKRthjhwjzL6RyLN2KvF/+cqvLg1D8v7fWUWsuiXaPI1Kn6vc/uZB&#xA;9LmP7sBZwO6e/wDOO3mP9NflXpiSPzudJL6bP7fVz+6H/IlkxCJDd6XhYvFf+cqNWaPydpWhRsQ2&#xA;s6jGso7GG3Bdh/wbIcaZQ5vlrzPKXv3H7KniB8hTLJszzfoNplsLXTbS1ChBBDHEEHReChaD5Uyt&#xA;qROKuxV2KuxVZcW8FxBJb3EaywTK0csTgMrowoysDsQQaEYq+DPM+gweXfzA17Q4DW2sriaK2qSS&#xA;IuYaMEnuEIByyJbAq/ljeXOm/mr5WmtmMbtqdvbMV2+C4lEEg/2SSEZGaor89/LMnl/80dbg48be&#xA;+lOo2ppQFLomRuPssnNPowhiHn+FLsVdirsVdirsVe8/84l+Ufr3mq/8zTAGHSIfQtulfrF0CpYf&#xA;6sQYf7LIyQX1dkWLsVfJH5k3Wqedvzr1XQtGPO+nki0O1k3Igt7ccrx2p0Ak5k07V742kxuu59Q+&#xA;VPLOmeWPLtjoOmJws7CIRoT9p26vI1P2nclm9ziglNsVdiqUecNAi8w+VdW0OSlNRtZbdWP7LuhC&#xA;P/sXo2KQ+e/+cSdfktdb17yxc1R7iJL2KJtistu3ozj/AFjzWvyyIZzfTeSa3zd/zk1e/WPPvlnT&#xA;iarY2NxeFfD6xJ6dfvgGShzbIPH/ACVoR8y/mXoWklecd1eo9yvjDD+9m/5Jo2Gal945BrdirsVd&#xA;irsVdir4M826gdV/MrzLqIaqS3128R61jE5ROv8Ak0ycGwIj8q7T6/8Am35YhArx1GK4p7QN63/M&#xA;vBNS+gf+cmvyzvfM3l+113R7V7rWNIJje2gQySzW0rCoVVBZjG/xADsWwAsA+RHR0dkdSrqSGUih&#xA;BGxBBybJbirsVdirsVdir7G/5xa8ty6V+W31+dOEutXUl0levooBDH95RmHscgWJew4EOxV4b/zj&#xA;P5VSe21j8wr6OuoeYLu4Fm7Ddbf1S0rD3kmqD/qDAGUj0e5YWLsVdirsVfJepf8AIPv+cmRcf3Vh&#xA;d6gsxOwX6vqq8ZTT+WKSRv8Agcj1bOYfWmSa3yv/AM5DzMPzghViSDpNvGBXorTSkge3I1yUObZB&#xA;hH5RanDpf50eXbiSixvdPbDl2N3E9uv4yjGal9v5FrdirsVdirsVSzzRrMeh+WtV1iQgLp1pNc79&#xA;zFGWA+kimKh8D6Va3At3vJCeVxURuxqTQnmT/sqZbEUG0Mx/IF40/Ony4ZKAVul33+I2c4X8SMhN&#xA;ieT7ayLB43+fH5H2vm3T5Nd0C3SHzRbKWdEAUXsYFSj9B6o/YY9fsnsVIKQXx/NDNBM8MyNFNExS&#xA;SNwVZWU0KsDuCD1GTZLMVdirsVZ/+T35Ual+YHmARHlBoVmytql8B0U7iKOvWR6bfy9T4EEoJfcN&#xA;jY2lhZW9jZxLBaWsaQ28K/ZSONQqqPkBkGKvirsVaRERQqKFUdFAoB92Kt4q7FXYq7FXzd/zl35c&#xA;IfQPMkS0LCTTLiQda7z24r8/VyMmyD3D8vPMY8y+R9E1stykvbSNrgj/AH+o4TD6JFYZJgXi/wDz&#xA;lBosln5g8vebOBNpJE+k3knZCGaaCv8Arc5PuwxNFnAvBPMEU+n6pDqFqxSSN0micfsuhqPuIycw&#xA;kvu3yh5lsvM3lnTdesmBg1CBJeKmvByKSRn3jcFT7jK2shN8UOxV2KuxV4r/AM5Seb00/wAmweWb&#xA;Z/8Ach5gmVXReotoWDuTTpyfgvuOWEBlEPnS6RIRFaxiiQIFHzpUnLmxG/ky0g/ODy36deQu6Hj1&#xA;4mNuX0ca1yqbEvujItbsVeMfnV/zj9Zeb2uPMGgsLTzII6ywGghvCg25H9iUjYP0O1fHCCkF8j31&#xA;he6feTWV9BJa3luxjnt5VKSI69VZWoQcmyQ+KvSPy/8AyH8+ebbq1lexk0vRJSGl1O6X0x6R7xRt&#xA;R5CR9mg4+4wEot9h+TPJuheT9At9D0WEx2sFWeR6GWWRvtSysAOTN/YKAAZBinmKuxV2KuxV2Kux&#xA;V2KuxVgH57+XDr35W63BGvK5sohqFtTchrU+q1B4mMOv04CmJ3YX/wA4m+YxeeT9T0F2rJpN0JoF&#xA;8Le8Xmo+iRH+/EMpjd6/5o8s6P5n0K70TWIfXsLxOMig0ZSDVXRuzKwBBwsAXyf+YX5Qeb/Jscwv&#xA;IH1zyutTFq1utZYE7evGKslB1b7Pv2yQl3tolaV/lL+cWrflzftbsraj5WvJOdzaKaOjEBTNATsH&#xA;oByU7NShodwCO5BD6u8jfmd5M87W7SaDfiWeNQ09jKPTuYx4tG3Ub/aWq++BgRTKsUOxViX5hfmh&#xA;5U8i6cbjWLkNdyKTaabEQ1xMR4L+ytertt9O2KQHyT5r8zav5g1y484a+Qt5PSOwsa/BbwivBFr4&#xA;A/eSTuctApsApik2svydmoztuPGuJktvXf8AnFzyFqOp+b/8Y3UDR6VpSSLaSsCFmupVMVEqKMI0&#xA;Zix7Nxysm2JfWOBg7FUu17zHoPl+xN9rd/Bp9oNvVuHCAn+VQd2b2G+KvAPzI/MP8t/Od0E0bycP&#xA;NNylFfW7gyadCFX9kTKYp5KdOLFfauIJTy5sV03W/wBC3ER0HyP5f0a9Q8m1LUbuTUeNO8KyyM8Z&#xA;998O6OOLLrP84PzptgsjpomswA/GqLLFIf8AVZWVB9xx4Sjjiyry/wD85LeWpJxZeb9PuPLN70Ek&#xA;ga5tWPtLGvIV90oP5sDKr5PV9L1fStWskvtLvIb6zk+xcW8iyxmnUckJFcUIvFXYq7FXYq7FXYq7&#xA;FVssUc0TxSqHikUo6NuCrChB+YxV8ofkdNL5K/PO+8rXDMsNy13pfxdGaBjNbyH/AF1Si/62RHNs&#xA;luH1jkmtxAIoemKvnX8+PyOs7W0ufN3lSzVEjBk1rRolpE0Y3a5hUfYZOrKu1N/Hkg0zjJ4DFZ3V&#xA;n6Or6JdyQzQ0dJoGaOaJvEMpDD5jLDEFlT2D8uf+cpta014tO87RNqVlUKNUhVVuox0rIg4pKo8R&#xA;Rv8AWOVkUxIZv+aX/OS/l/SdJjt/JlxFqur3sQdLsAmC1RhszqwBMvhGRt+14FQIvnqP1r6WTzHr&#xA;12+o6hcsZDJMxclh4k+FNh0HbLYxpmAkmoXV9q+oxW0SmSaaRYreBe7OQFUe5JyMyt2+1/JH5OeR&#xA;vLGiWdmdIs73UYo0+t6lPAkssk3V2DSBmVeX2VHQZBrJZxFFFDGsUSLHEg4oiAKoA7ADYYoXYqw/&#xA;80PzG07yL5bk1CXjPqk9YtJ06p53E5oB8I34JWrnw26kYpAfJ3mHzO9zfnVvMMja95nnHPhMQbe2&#xA;Xr6cUW8aqnjT+uHkiyeWwY1c675l1mXibho4fsqkVVUDwFNzjuVPDFH2PkpplDXjlS38xJf7gRTD&#xA;wsTkKZR+VI7VlNjfXFrKOjxOV++hx4UeIeqvLq+r2tvJaeZIV1TSHHH64EHqw12DMB1A+/37YpAB&#xA;5bFKba98yeSNUi1fyxqklpBPQxzxNyicfsrKpqkif6wORIZiV7Hm+lPyk/5yA0/zXPFoPmGNNL8y&#xA;miw0NLe6P/FRJPB/8gnfsT0CvmHsGKHYq7FXYq7FXYq7FXyj/wA5E2Vx5U/N/TPNlmtPra22oIRs&#xA;GubFwjr8vTVCfnkS2R3D6osry3vbK3vLZudvcxpNC47pIoZT9IOSa1bFWmVWUqwBUihB3BBxV8gf&#xA;nT+Wl5+XvmE6vpcZbypqUrGBQKrbTPVmtmp+zsTGfDbqCSYypsiXllzJZ3UzeghWprxNKCvgcsVR&#xA;jtoY3+McgD0r/EYgKrXWoSMgVm+BRRIwdhiStvYv+ccPyj1LV9ftfOmrQmDRdOk9bTlcEG5uU+w6&#xA;A/7rib4uXdgAK/FSom0E0+scWDsVQ+paha6dp11qF2/p2tnDJcXEn8scSl3P0KMVfE3nfzXqvmDU&#xA;z5m1Bi+qauzLpdmxJS0sgSI1XsKipanXr3OEKd9ugYlY6Xc6levEjGReX7+c/tt4fIYgKZUGcadp&#xA;VpYRhVUFyBWQ/qGSaUdyCmvWvUd8VXDdakVWmw/jXCqtbXPBGVo0lU7OXWtVoQV37EdcVSLU9It7&#xA;C7TTEPPQdaR2s1apNvOByKKd9m7e/wBNY02XYvqGJyW0slkXqUvtOkMbOpo3wH4WBHceOCrCk0bH&#xA;V9gfkL+Y0vnXyUjX8nPXNKYWmpE9ZNqxTkf8WL1/yg2BmXpOKHYq7FXYq7FXYq8z/Mvyh5E/M6Wy&#xA;0KXzBBBqulzvJ6VrLDJccHXjPF6ZaoJ4Cu3w03GJDIEhn2haNZ6Jotho9kXNpp1vHa25kbm/CJAi&#xA;8m2qaDFijsVdirz7zx+Z/wCTUNvdaB5o1e0uYZwYbuxVJbunej/VklKMpFR0IPvikAvna5/K38r9&#xA;d1R18k+f7ONJG/cWOrxzWrqSfsrNIsfqe3wV+eILNlWnf84ga5KVOpeZraKM7t9Wgkn29i7Q9cNl&#xA;HEHonlD/AJxk/LnQZkur5Jddu0IK/XSvoAjwgQBW+TlsCOJ6Vreu6F5Z0WXUtVuI9P0qzQBpCDxV&#xA;RsqoiAsT2CqK4sUN5Y87eU/NNsbjy/qkGoIu8ixNSRK/zxNxkT/ZKMUkJ3ih59+f97LZfk/5kmjJ&#xA;DNDDAaGnwz3MULf8LIcSmPN8keZXWHXp4h9jTbRYYgOzBQn/ABHD1YDl7yj/ACXBxslqKmQFvmWI&#xA;/pkhyYzO6ZprejyXH1YXSSTg8eIqdx4HocbUxKOZ41mEPJVlZeaoSORWtOQXrSo64sVJ76xSb6s9&#xA;xGknUxFgG39sU0rUJ2X+7BBoPH2xQpea1eLy7aXBpzs763niI60Pb/hsEmePmxeeMReYdTgOyzIJ&#xA;CPwP68RzU/SHof8Azinq0ln+YmpaVypBqNg7FPGW2kUofoR3yJ5s4/S+scVdirsVdirsVeGf85K/&#xA;mJqGnW9l5M0S4MF/qymbUp4mKyR2obiqAjp6zA136CnRsQLZxD5qu7mbSLiH6lM8M1pxdJI2Ksso&#xA;PIFWG9Vy07Mi+7PIusXuteTNE1e+jMV3f2UFxOppu0kYYttTZvtD55U1lPMUPnv/AJyZ/NW9sJ4v&#xA;I+j3RtHuYhLrN2hIcRyV9O3Vh9nmByf2IHQnFnEPmuWyEdEdChpUdqg98spJQLCjEU9qdcBpQ9L/&#xA;ACp/PLzP5Gu4bS5kk1Ly2WCz6bI1WiX+a2ZvsMvXh9k+x3EKUgF9o6Xqdjqum2upWEonsryJJ7aZ&#xA;ejRyKGU7+xxa3h3/ADlgt5Lpvl63jLfVpJLoyKDRTKoiEVfejPTJwZxfN2j6pr/lTWbbWNKnezv7&#xA;V+SOu1aHdHFfiRujKdiMZRS+3Pyr/Maw8++VIdYgUQ3sZ9DUrMH+6uFALUrU8GryQ+HuDkGBFJR/&#xA;zkTE0v5N+YlWlQtq+/gl5Cx/AYCmPN8lebzz17WZFFAyRPT/AFlB/jkixjyCd+W+K29vKR/ciNx7&#xA;cd6/hkmo80gt20v/AArBGHRtX+sxm1RKGUVY8uVNwpHj7ZDo3b2e5kUqj/GUC0PwWMak+7sWNP8A&#xA;gsl1a/4UNoel6Tqz6rc6lGnoz3M8jXJ+ExqSSWD7U49fDAAylIg0ET5Qnml0eP1WLhWZUkbqVB2w&#xA;x5MJjdN/PFF8qQACrSz2wA8SD/ZjLknHzYvra8PN96B2tT/xIY9VP0/FlP8Azjekp/OOzKNRVtrp&#xA;pR4qYiKf8EQcB5socn2NgS7FXYq7FWOefvPmheSfL02s6tJstVtLVT+9uJqVWKMe/c9ANzikC3xr&#xA;qevajqur3/mrW2D6nqUhcR70RQOKItakJGlFGWQFNo2Uvy98k6j+YHnO20i3qLXl6+p3VDSK3Ujm&#xA;1f5j9lPFjkZFjb7whhihiSGJQkUahI0XYKqigAHsMi1rsVfD/wCYt7HqnnzzbqVwRcLJqlxZxANX&#xA;klt+5iYN4BVWmTgNm0cmIzTUszb3BpPaAGFz1aJv2fmpxuuaShbTTpZZFaQEVozfLr+OIHVFKFwD&#xA;RiehIC/dhYvrn/nFTX5dR/LaTT5m5No97LBEK1IhlCzL/wAPI4ytEmd/mb5Et/OnlabS2YRXsZ9f&#xA;T526JOoIUNSp4MCVb7+owg0gGnxtqun3TLeWWowG11jTZGt763bqHQ8a+9fHvlgNht5sy/5xg80S&#xA;aL+ZB0aRyLPXYXgKk0X14QZYWPvQOg/1srkN2B5Po/8AOa1Nz+VfmiMCvGwll6V/uh6n/GmBiOb4&#xA;w1t/VuLmRaETafaS1HT+7Sv44UDp72Q+W1Mul7U+KIAE9KkHJdGrqkem2BtdP03WIIzz9Y2t2vGv&#xA;2yTG9Oo6EE/LIhtkbsJ/A7yed+RXiv1a34gjtxFf+Grh6sD9ISby35e06/0xLq5V3kLMWHMgMQxG&#xA;+ADZlOZBZdbpFDGkUSBIgKIB7ZJqXecatp2gWlTW5vrdabV3Pv8APBJnDqxTVZTL5m1eUf7rj4ff&#xA;vj1U/SGc/wDOL1r6/wCbNxLSv1XTLiWtfGWKP/mZgPNlD6X1zgS7FWPecPzB8oeTooJfMeoLYi6E&#xA;htlKSSNJ6PHmFEatuOa/fikC3jvm7/nKOWWd9P8AJGlGWUCjajqQMaryFapbghjtuCzD/VxAvkyE&#xA;HivmXXr/AFS/Or+aNUk1fVDtGGNIoh/LFGtFUeygZYIgM9goeUvJ3mz8w9b/AEfosBMSkfWrySq2&#xA;9uni7Abeyjc9h1yMpMSX2P8Alr+Wug+QdCGm6YDLczFZNQv3AEk8oFKn+VB+ynb5kkxYE2y3FCy4&#xA;nit4JLiZgkMKNJI56BVFSfuxV8CSzS3eh3t9sJ7m5knHSoMkgY0PY0GTH0tySXtLi6P1eOUQlnNu&#xA;kziWQRgVAZwqBiO5oMrAPXmqZ215DbmQQQzQQywQo6TNyLTog9aQbCis/Kg7A5LFYu0kpNdPyO2w&#xA;BNR75NrL6V/5w6mrpvmiDlXhNaPw8OaSiv08Pwys80SfRWLF86f85L+UoNO1zSPONrGFTUn/AEXr&#xA;AHR3K1t5D78UZSfBVwxNFsgXhOlX7+XvO2laoDx/R9/BOx6VSOVWP0Fa5KYTT7p85WP6Q8oa5YUr&#xA;9b0+6gp4+pAydqeOQaw+FbqJTb2Ei7/WtJZWP+VFI6/qQYUH9Kf+TpQ2koOpAAH0E5IcmufMp6zB&#xA;Bt37e+Fi0VQSLJT94opy8BiqxIgCxVQsVahVFKnuTgVERpEY2fkAy04LQnlU708KYVUPMT89c8r2&#xA;5/3XzumH/GCPn/xrkSzjyLDIpTJNq903WSX0yfdRT/jbELPkHsH/ADiRZCXzN5n1Gn+89tb2/Lw9&#xA;eRn/AB9DInmzj9L6cxV2Kvlf/nILSNe0v8wbbWNYFzr3lF3+sRabcSzSQxx0RLgIsIjSAKXAUlqk&#xA;0ryyEwSNmY5MT84eXvM/nTz1f615J0XUrzSdQMbW9y1q8MNUiWM0kekfH4arUjY9MjpwYxooiKG7&#xA;NPI//OKOtXk8d953vltINmbTbRxLO3+TJNvGn+w5fMZaSSnifR/l/wAuaH5d0uLS9Fs47GxhHwQx&#xA;ClT3ZifiZj3ZjU4sLTHFXYqwv859a/Q35W+ZL0NxdrNraMjqHuiLdSPkZa4pHN8hsi2Pl1UZATwU&#xA;MviWIrlwFBuKR2jNLfwKSA6pPyoOimMjtkeoQEXNpU8kDXJetFZwP8lOuSpFMfcrVq70ZjT7sixf&#xA;Rv8Azht183/9u7/says80SfSmLF5J/zlCB/yqyRqAst9alD4HkRtiyjzfKXmwhrlJB0dEIP35ZPk&#xA;2Hm+/NJZptHs2mSjyW8ZljY8qFkHIE98raXwjrETaZZWEMq1fTLrUtOmX3R6hSfnIcbSRZIRHlGw&#xA;Fpqd3EZhMUjSPmhqvJgHcKe4UmlcMEZmVBaEht6jb5ZJpcNzx/Y8fH2xVxYgH/fVfx8MVVYYXd1F&#xA;Kc2oo9zthVB67x/xjKVb4bLS3fforSsIaf8AAtXI9Wf8LCraSmj+r3nleQ/IEj+GMeS5Ob6J/wCc&#xA;RNP4eVtf1Km9zqC2/Lx+rwq3j/xf4ZFs6B73ih2KuxV2KuxV2KuxV2KvHf8AnKPUBF5AsdOU/vNT&#xA;1O3iKb7xxq8rHbsGRcWUOb5o8zTycEgjb4GozAex/plxbJIPyuofVJ3pUcPTNffc/wDEcjHmoTTW&#xA;5UgsPQjYh1AVj0+E9QfnkypYq1uvJnY7MK5Fi+h/+cNuvnD/ALd3/Y1lR5sZPpTFi8j/AOcmXWfy&#xA;Np2jpJHHdaxq9paW7yMFVCebeo9f2F4jke1cjI0LZRfP3mH8m/Pdhqui2msCBk1W+h0y1ktpOdWk&#xA;NA1Cq0HGp3yENSMmwWMwX25GiRosaDiiAKqjsBsBlrF8VfmVHY6Z+auu6VqULSaemrT6pMiqXNLu&#xA;FJV2/lJcVyJbIjqxXy7dRxahdJB+6RjziWh2HTblk4NeYM4kqydeIPRh1pTrk2lsLVAlahQAT3NB&#xA;gVwr9pxuKBRiqY6TGZL5OwSrkeFOn4nCrFdXveV35pvv8uKziPtDGzP/AMMq5HvbK2AYxcAxaVbJ&#xA;0/chvpffEcmMty+tP+cZ9NNn+UmmzEUa/nubph3/AL5oh96xDItsnqeKHYq7FXYq7FXYq7FXYq+Z&#xA;v+clfMYvvP8Ao+gxuDBots13dAdprn9lv9WKNWH+tkoc2yAeJas80t6OSFOfxID/ACk8V/BcsKSv&#xA;8qK/1qdxSm5Py3G305GCQs1eaWSRoGbmQ0cLN4sq1Y/SckUFAyKGs123LSD/AIbAh7Z/ziBqixea&#xA;de0stQ3llHcKu+5tpeHy/wCPjKzzYnk+qMDFgv5xfl1/jnym+nWsNqNYR4/qF9dBv9HVpo2nZGUM&#xA;wLRx098SkGnn35U/kP5jstd0/wAzec7yWS6tOdxHpz3JuHW9WV0SWVxzRl9Hiw4tWtK+GREQEkjo&#xA;97yTF8t/ntJBon50R6mkL3Q1HTE5xwDm5lRmiK0Hgka5EtsHkGrw6pb336TmtGs1J5LDJs5XuSO2&#xA;MTSzjYRMPnS5jCFoXMJoAaDp7V6/fk+MNHhFPtP8yWF0lY34seqjt/sTvkgWBBHNC33meb9IC105&#xA;Ynp8AmnLLG0v++1anENv+0QMiZNkMdjdkfl3Wg0k1rdwmy1K2Ie9ikI4iMdDGwPxAnCJWxnAhg93&#xA;MzeVJZ/2r+5mn+l5FT9S4OjP+IIPzAwijWIH7KKoHywnk1w3L7n/AC90Y6L5F0DS2FJLSwt0m/4y&#xA;emDJ/wAOTkW0sgxQ7FXYq7FXYq7FXYq7FXxP+ZVz/wAhX84Xb3C30MdyyeoF4jkqiNYaVavpf3ZP&#xA;elcnBtHJjV20CzUnJNyqxcW/yjUv7dTk0rPLTMtzfekPsqWj/wBluMjDqoUoYeWp2ayCvOZ3Yda7&#xA;in4ZJCF2CTqB8MU1VHgD2wKzD8hNYGi/m9ohLUt72SSxftyFwjJGP+RvDISYnk+38iwdirsVeGfn&#xA;n+edxod7c+S/Ln+j68UQXmqzMscdsk0YkAh5H4pCjj4v2e1T0BNM4xt8zXL2mn3KS20gkuYWDGdm&#xA;JMjb8+hPwtXKwS2lF675lm1m0Sa+uIYljAEdnEGaR2HdyQFUeO/yGSRaAhs7hba3uwFISjKhNGaj&#xA;Fgyjw3yBK0iJ47e5RpRB6d41XJibiR8hVuQ96YgkJItu31eK102bT0jrFeRqt9bPUFZoztNESf2g&#xA;ASPH2yaGrC91q6laWG4EzRQNbxm4dQ/psa0r3+I7VOPFSDHiV7yTVZNLtNOXTpEazKs7DcNx+Xid&#xA;8PGKYeGbJW+XbJdX846Lp+qH6ta3t9bw3MsrBVWJpVEh5NQfZrh4rYjHwv0DwodirsVdirsVdirs&#xA;VdiqU+bdci0Hyvqusyusa2FrNOrMKjkiEoKVFSzUAHfFQ+CJ3uY4o7y6kMk9zyuZeRPJndiQzV6l&#xA;jlkdg2lXtZ/W06Vm3kajB61IMZO2StVXyhNEbmdSaOQAo8QKD+GRgdykI3UZQuq2jkcfTI508Tuc&#xA;mVKRXbrG90U+yxG3yr/HIkoU9P1KfTdTsNUiBW60+4inQHYh4XDr+K5AmwtP0QtLqG7tYbqE8obh&#xA;FlibxVwGU/cci1KuKuxVJdZ8k+Ttbd5NX0Sxv5pAA81xbxSSbDiP3jLzFBsN8U2841//AJxZ/LPU&#xA;rj6xY/W9HYmrRWsoeI16/DOspH0NT2wUniKjY/8AOKH5YwRkXMuoXsh6vJOiU+QijT8a40vEiz/z&#xA;i3+VVCFivlJFAwumqPvGNLxFAXf/ADiX+W80TCG91SCWnwyetC4B91aHf78aXiKX6b/ziD5QikZt&#xA;S1u/u46kxxwLFb0HgxImr9FMaXiUtY/5w+8sTVOj69eWRJrxuo47pR7Dh9WP4nGl4kotv+cPL9XL&#xA;P5uWEjdWismY1+m4TBwp41W+/wCcQtQuFDt5y+sSqOK+tYkCn+t9Zc/hiIrxvWvyg8keYvJflZ9E&#xA;1rVV1UpcO9kyc+MMDKoEYL705AtToK5JiTbOMUOxV2KuxV2KuxV2KvDv+crPNi2PlOw8tRycJNbu&#xA;PUut+lralXYH/WlKU+RxZQDwT8uvI+pfmN51g0xOUemQcZNRuUHww2se3wk7c3+ynua0oDkpG2RL&#xA;DpBc2N1JA9Ve3keNgQQOSniwOMZJZxqnleHytovk3WpVIl13T7q6uPA8ZS0VAf8Aip0wQO6gpBNY&#xA;ay+kDzbKpGky37WMVa0Moi9UgfJfxw8W62k11cBw/ixB+/fDI7KHrv8Azkp5Hs/L/mHT9X02Omk6&#xA;1Zoi0FAJ7VFjrQBQOUXBvc8sgGMS+hvyO1s6z+VPl25ZuUkNsLOTxraMYBX3Kxg4hjLmzrFDsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirC/OP5ReTvOHmGy1rzBFNdtY27W0dl6nC3ZW&#xA;YsGcKA/JS21HA8RikFMvJH5feVfJOnSWHl+0+rxzv6lxK7GSWVhsC7tvRR0HQfScVJtJrn8kfy5u&#xA;tCl0W404yWk18+pu5kYTfWJPtkSghgpX4ePh7740vEUm/OD8lT530/y3p+lXMOl2+hu0IDh2C2ki&#xA;xoyxgVqyrCvEMRXxGKQUH+c35d6dZ/kdNoug2h9Hy+Yby0hA5MfSf9/IxHVjHJI7H54FB3eXfkF+&#xA;R1l5t0/Udc80W0q6POn1fSlDGN3fmGedD4Jx4A9DVvDCTaSafR/mL8vvKfmTQLXQdbsvrmmWRja2&#xA;jaSVGVoozGjepGyPUKx7798WNrPy+8h6X5H8v/oPTJp57X15bhXuGDOPVaoX4QooqgDpud++Kk2y&#xA;XFDsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ff95280c-d080-4782-82bc-2b91162f8191</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:30:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>123.484512</stDim:w>
            <stDim:h>100.749851</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -151.683 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 151.683 li
136.371 151.683 li
136.371 0 li
cp
clp
132.795 48.1521 mo
132.716 48.0208 132.619 47.928 132.527 47.8225 cv
132.504 39.4144 128.437 31.1478 123.013 24.8597 cv
115.714 16.3997 105.097 8.82206 94.685 4.82356 cv
84.1459 .77616 71.8441 -.237508 61.141 3.78205 cv
59.766 4.29815 58.4076 4.82792 57.0561 5.36018 cv
54.5697 5.40605 51.9613 6.79668 49.5394 7.8177 cv
48.2211 8.3743 46.9408 8.98663 45.6898 9.64286 cv
45.2074 9.80644 44.7357 9.98417 44.2474 10.1414 cv
40.014 11.5066 36.1293 13.3621 33.2904 16.7517 cv
22.9877 23.783 16.7514 38.4827 12.6361 49.6605 cv
9.9916 56.845 11.267 63.8963 12.1644 71.3065 cv
13.1 79.0325 12.3871 86.1126 11.8842 93.7976 cv
11.0395 106.739 15.0902 119.868 23.1225 130.052 cv
30.099 138.897 41.2631 147.253 52.7641 148.44 cv
53.5336 148.519 54.1723 148.189 54.6263 147.665 cv
56.4799 148.364 58.5053 148.513 60.6537 148.553 cv
64.973 148.631 69.1928 148.913 73.5052 149.153 cv
81.8861 149.619 90.4105 148.277 98.1684 145.056 cv
113.841 138.548 123.408 125.334 128.2 109.404 cv
128.518 108.347 128.294 107.503 127.796 106.905 cv
129.273 103.023 129.556 98.3763 130.1 94.4642 cv
130.865 88.9622 131.688 83.4104 131.928 77.8572 cv
132.162 72.4578 132.849 67.3645 133.581 62.0164 cv
134.181 57.6458 135.159 52.0843 132.795 48.1521 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.862745 .972549 .705882 rgb
f
32.9818 92.7942 mo
31.4818 90.2186 27.2592 89.6253 25.9564 92.7107 cv
25.3646 94.1146 25.6479 95.9412 26.6986 97.0525 cv
27.1566 97.5364 27.7406 97.8597 28.3685 98.0404 cv
28.5853 98.1966 li
30.1849 99.075 32.1684 98.409 33.0561 96.8499 cv
33.7631 95.6082 33.6938 94.0169 32.9818 92.7942 cv
.290196 .792157 .137255 rgb
f
82.1039 93.7508 mo
81.9584 93.7669 li
80.5658 93.407 79.0287 93.9256 78.2748 95.2698 cv
77.6273 96.4236 77.307 97.9417 77.7377 99.2151 cv
78.3646 101.069 80.474 102.089 82.3256 101.414 cv
83.767 100.889 85.0287 99.6365 85.432 98.1331 cv
85.9994 96.0174 84.4115 93.6141 82.1039 93.7508 cv
f
81.3148 97.615 mo
79.5805 97.615 79.5775 100.31 81.3148 100.31 cv
83.0492 100.31 83.0522 97.615 81.3148 97.615 cv
.513726 1 .352941 rgb
f
30.8773 94.095 mo
29.9477 93.9691 29.266 94.6614 29.1947 95.5535 cv
29.1888 95.6351 li
29.1391 96.2532 29.6791 96.9163 30.2699 97.0555 cv
30.3188 97.0672 li
30.9486 97.2156 31.5599 96.9627 31.9067 96.4207 cv
31.9965 96.2796 32.0521 96.1043 32.1117 95.948 cv
32.434 95.1023 31.681 94.2034 30.8773 94.095 cv
f
108.816 109.5 mo
108.809 109.446 li
106.928 110.823 105.414 112.745 103.798 114.42 cv
102.04 116.24 100.268 118.046 98.4838 119.84 cv
97.3227 121.007 99.1371 122.822 100.289 121.646 cv
102.062 119.839 103.823 118.022 105.567 116.189 cv
107.163 114.512 109.032 112.871 110.27 110.907 cv
110.917 109.88 109.688 109.044 108.816 109.5 cv
cp
.74902 .819608 .639216 rgb
f
58.2318 61.7044 mo
58.2318 61.8045 li
58.2318 61.7044 li
cp
f
48.8969 71.9026 mo
50.5639 72.7151 52.6469 74.2889 54.5268 74.4529 cv
55.7445 74.5594 57.0873 74.4998 57.2094 72.8777 cv
57.3812 70.5921 50.7113 66.8689 49.1654 65.6556 cv
48.5434 65.1678 47.6586 66.0408 48.2875 66.534 cv
48.7367 66.887 54.0248 71.0667 53.9047 71.2147 cv
53.1225 72.1766 50.6303 70.431 49.9428 70.1136 cv
46.6605 68.597 43.4652 67.1639 39.9994 66.1116 cv
34.6537 64.4886 30.0443 64.1556 25.0482 65.0916 cv
23.0619 64.9158 21.349 65.2015 20.4008 66.3694 cv
19.8012 67.1082 20.5336 68.1741 21.4359 67.7112 cv
21.765 67.5428 22.101 67.389 22.4428 67.2474 cv
24.685 66.9231 29.6967 68.8445 30.9594 69.2586 cv
34.1869 70.3172 37.3158 71.6868 40.3764 73.1522 cv
45.0346 75.3812 49.7777 79.2606 54.8139 80.3455 cv
55.5121 80.4959 55.9682 79.7024 55.4975 79.1702 cv
51.1391 74.24 42.6391 70.9798 36.56 68.6326 cv
35.058 68.0525 32.268 66.8431 29.3803 65.9861 cv
32.892 65.9778 36.4828 66.7342 39.5385 67.784 cv
42.725 68.8792 45.8676 70.4266 48.8969 71.9026 cv
cp
f
87.6176 63.6082 mo
79.4564 67.1541 71.9555 72.0491 64.6098 77.0247 cv
63.3051 77.9085 64.5404 80.0447 65.852 79.1497 cv
73.1957 74.1404 80.8998 69.6746 88.2084 64.6199 cv
88.8393 64.1834 88.3021 63.3104 87.6176 63.6082 cv
cp
f
83.7328 62.1028 mo
74.7543 63.1526 65.6928 65.0804 56.6215 64.0643 cv
51.7211 63.5149 47.2396 61.9358 42.5717 60.4515 cv
40.7992 59.8875 38.9906 59.4212 37.2348 58.8113 cv
36.0346 58.3948 29.7641 57.0882 32.9271 55.116 cv
33.2162 54.9358 33.1303 54.3714 32.7377 54.4173 cv
31.0785 54.6097 30.4281 55.0833 29.4984 56.4695 cv
29.3051 56.7576 29.4203 57.2689 29.7465 57.4168 cv
37.9682 61.1365 45.5922 64.7371 54.6322 66.0799 cv
64.3842 67.5281 74.0619 65.5232 83.7328 64.3997 cv
85.184 64.2308 85.1996 61.931 83.7328 62.1028 cv
cp
f
118.038 56.7508 mo
118.377 56.4339 118.684 56.1087 118.945 55.7728 cv
118.995 55.8269 li
119.161 56.1029 119.339 56.3694 119.51 56.6414 cv
119.497 56.7425 119.483 56.8431 119.484 56.9485 cv
119.49 57.7723 119.504 58.5989 119.517 59.4246 cv
119.047 58.5179 118.553 57.6277 118.038 56.7508 cv
116.661 54.4939 mo
115.689 52.9612 114.677 51.4524 113.649 49.951 cv
114.812 51.241 115.978 52.5291 117.151 53.8123 cv
116.995 54.0511 116.83 54.2766 116.661 54.4939 cv
110.478 124.677 mo
110.571 124.294 110.656 123.908 110.732 123.517 cv
110.775 123.29 110.782 123.071 110.77 122.856 cv
113.18 119.386 115.328 115.679 117.094 111.828 cv
117.099 111.954 117.104 112.079 117.109 112.203 cv
115.089 116.463 112.903 120.637 110.478 124.677 cv
114.665 69.8006 mo
114.5 70.3709 114.22 72.0691 113.848 73.5428 cv
113.627 72.9027 113.422 72.2107 113.239 71.5559 cv
113.755 70.8142 113.672 69.6839 112.641 69.4232 cv
112.598 69.2835 112.558 69.1605 112.522 69.0603 cv
111.642 66.6512 110.793 64.2313 109.957 61.8069 cv
109.926 61.7156 109.881 61.6395 109.842 61.5569 cv
109.865 61.5213 li
111.352 63.2254 112.925 64.8294 114.591 66.2937 cv
114.853 67.1092 115.085 67.9476 115.296 68.8001 cv
115.013 69.0613 114.784 69.3885 114.665 69.8006 cv
92.3705 139.978 mo
92.14 140.029 91.9096 140.08 91.6771 140.127 cv
93.2514 138.826 94.7836 137.484 96.2172 136.076 cv
96.5922 136.264 97.014 136.38 97.4418 136.41 cv
95.8285 137.767 94.0687 139.114 92.3705 139.978 cv
105.08 69.325 mo
105.667 68.5706 106.329 67.8597 106.955 67.1463 cv
107.204 67.8568 107.448 68.5682 107.7 69.2772 cv
106.829 69.283 105.956 69.2962 105.08 69.325 cv
68.9633 88.2982 mo
69.8021 87.431 71.1947 86.722 72.6244 86.0999 cv
71.0551 87.5379 69.5941 89.0179 68.2807 90.4563 cv
67.9574 90.804 67.642 91.1531 67.3392 91.5056 cv
67.8705 90.4144 68.0648 89.2273 68.9633 88.2982 cv
79.2963 80.8943 mo
78.8431 81.1858 78.393 81.4856 77.9486 81.7962 cv
77.4858 81.9935 77.0219 82.1927 76.559 82.3895 cv
77.4564 81.8543 78.3695 81.3538 79.2963 80.8943 cv
90.224 77.8846 mo
91.8031 77.823 93.4066 77.9358 95.0307 78.2454 cv
93.057 78.1541 91.058 78.3015 89.0697 78.6697 cv
89.4633 78.4202 89.8471 78.157 90.224 77.8846 cv
99.6068 48.8401 mo
99.9857 48.8406 100.364 48.847 100.743 48.8484 cv
101.241 49.6443 101.749 50.4427 102.266 51.2405 cv
101.405 50.4158 100.525 49.6097 99.6068 48.8401 cv
76.81 42.0047 mo
76.9935 42.1111 li
79.7347 43.638 82.5482 44.9939 85.3285 46.4085 cv
82.6859 46.2688 80.0707 46.0486 77.475 45.7503 cv
76.5072 45.3011 75.5512 44.8138 74.6068 44.282 cv
74.765 43.6546 74.6137 42.9578 74.1479 42.4954 cv
74.4496 42.4358 74.7523 42.3885 75.0541 42.3274 cv
75.6244 42.2117 76.2133 42.1077 76.81 42.0047 cv
67.8842 44.2566 mo
67.2485 44.1297 66.6146 43.9861 65.9799 43.8479 cv
66.6176 43.7635 67.2514 43.6561 67.8871 43.5628 cv
67.8539 43.7943 67.85 44.0291 67.8842 44.2566 cv
57.7943 20.1155 mo
58.5267 17.969 60.1527 15.7498 61.4359 13.5535 cv
61.8656 13.5418 62.2953 13.5281 62.726 13.5105 cv
62.5434 14.5511 63.0043 15.7303 64.3139 16.244 cv
72.476 19.4446 80.6098 22.7195 88.7504 25.9764 cv
89.4867 28.2889 90.4398 30.5823 91.5189 32.8284 cv
81.5258 24.807 70.6615 17.6556 57.7943 20.1155 cv
131.904 49.2967 mo
131.89 48.9036 131.761 48.5589 131.564 48.2644 cv
131.349 45.618 130.465 42.9178 129.262 40.3323 cv
128.975 38.8811 128.701 37.4275 128.453 35.9661 cv
128.337 35.2645 128.004 34.7967 127.572 34.5105 cv
126.715 32.367 125.587 30.3245 124.253 28.4695 cv
124.096 28.2498 123.927 28.0486 123.764 27.8382 cv
120.955 22.3958 115.913 18.4036 111.007 14.8045 cv
110.319 14.2996 109.645 14.3777 109.137 14.7459 cv
103.487 10.1751 96.4281 6.92851 89.2533 4.3621 cv
88.1693 3.97442 87.2094 4.39434 86.5814 5.14044 cv
86.0199 5.01251 85.4623 4.89091 84.9144 4.7791 cv
79.4154 3.65654 73.7875 3.11115 68.1762 3.22295 cv
65.8539 3.26932 63.017 3.26396 61.5521 5.00371 cv
60.5824 4.23417 59.3549 4.06229 58.0414 4.32794 cv
56.683 4.60236 55.3656 5.65068 54.0922 6.16387 cv
51.5766 7.17899 48.976 7.66289 46.2758 7.82941 cv
44.1068 7.96319 43.3324 9.97881 43.934 11.4812 cv
39.0931 13.6458 34.681 16.7517 30.8334 21.2191 cv
29.7484 22.4793 31.4555 24.2444 32.6781 23.0638 cv
34.3773 21.4226 36.2191 19.9266 38.1684 18.5711 cv
41.0336 17.4627 43.7279 15.9329 46.5873 14.7532 cv
48.8637 14.3045 51.182 13.9437 53.4682 13.4856 cv
53.9154 13.5023 54.3627 13.5281 54.809 13.5408 cv
52.8344 16.9646 51.2513 20.0696 52.1264 24.4978 cv
52.4017 25.8919 54.2016 26.9139 55.5365 26.4349 cv
71.5346 20.6922 84.9623 33.1585 96.9984 42.7278 cv
97.5883 43.7039 98.1713 44.66 98.7348 45.5867 cv
98.7777 45.657 li
96.9877 45.3714 95.1986 45.0418 93.4301 44.638 cv
90.3344 42.8958 86.9945 41.3987 83.6176 40.1775 cv
84.7357 39.6097 85.7318 38.8509 86.5101 37.786 cv
87.809 36.0101 85.0893 34.2151 83.602 35.5423 cv
81.7065 37.2342 78.101 37.2205 75.683 37.6351 cv
71.9203 38.2801 68.1283 38.7991 64.3353 39.2288 cv
60.4643 39.6673 56.5287 39.2381 54.0111 42.5867 cv
53.0053 43.9246 54.1244 45.7698 55.4828 46.2039 cv
56.433 46.5067 57.3891 46.7884 58.3451 47.0691 cv
55.3432 47.5252 52.3539 48.1351 49.3881 48.9149 cv
48.5258 49.1419 47.8363 49.8909 47.5502 50.7513 cv
45.5658 51.0218 43.5824 51.3016 41.601 51.5936 cv
41.0053 51.6814 41.2602 52.5823 41.85 52.4974 cv
43.7025 52.2312 45.557 51.9857 47.4115 51.7522 cv
47.4408 52.1316 47.5551 52.5047 47.7914 52.8397 cv
51.1361 57.5706 60.3197 56.9217 65.392 56.7117 cv
71.4174 56.4627 77.2035 55.2273 82.806 53.22 cv
85.6469 53.9866 88.598 54.4329 91.6108 54.5667 cv
93.4037 54.6468 94.3588 53.1663 94.3188 51.7073 cv
97.0004 53.6903 99.1244 56.0013 101.336 58.4959 cv
101.485 58.6639 101.629 58.8245 101.775 58.9861 cv
101.209 58.994 100.65 59.0023 100.107 59.0174 cv
99.2904 59.0394 99.183 60.1336 99.9203 60.3983 cv
101.22 60.8655 102.648 61.1321 104.126 61.2269 cv
104.527 61.5228 104.954 61.7811 105.416 62.0032 cv
105.374 62.3133 105.402 62.6551 105.528 63.0281 cv
105.676 63.4646 105.831 63.8987 105.981 64.3348 cv
105.004 66.0843 103.823 67.6761 102.82 69.4207 cv
100.412 69.553 98.0033 69.7752 95.6156 70.0936 cv
96.6029 69.7322 97.5854 69.3592 98.5619 68.9666 cv
99.2318 68.6971 99.2221 67.5809 98.3783 67.6082 cv
90.1654 67.8768 80.8979 72.4729 73.5619 76.0228 cv
70.099 77.6985 66.6869 79.7742 64.1107 82.6863 cv
62.809 84.158 60.2982 87.1761 60.639 89.3367 cv
61.0131 91.7103 62.4027 91.9202 63.9525 91.324 cv
63.7035 92.7825 65.8236 93.6844 66.8637 92.3055 cv
66.9594 92.1785 67.0404 92.0467 67.1195 91.9148 cv
66.9193 92.6883 67.8578 93.4705 68.56 92.7796 cv
70.7631 90.6106 73.1156 88.6038 75.5765 86.7352 cv
80.3451 83.6096 85.8041 81.6595 91.6312 80.8225 cv
94.3353 80.4344 96.9633 80.3895 99.6225 81.1975 cv
103.481 82.3714 104.886 85.2591 106.116 88.8157 cv
107.637 93.2171 106.422 96.4598 104.021 99.2879 cv
100.622 98.9363 98.2484 102.614 95.352 104.435 cv
89.5521 108.082 81.2533 109.342 74.6029 110.514 cv
74.0531 110.611 73.7045 110.904 73.517 111.278 cv
72.7582 111.065 71.9975 110.837 71.2299 110.595 cv
70.8363 110.425 70.436 110.291 70.0277 110.208 cv
68.725 109.942 68.0414 111.573 69.1342 112.325 cv
70.4848 113.256 71.9594 113.993 73.5062 114.567 cv
74.7445 115.621 75.9076 116.812 76.6918 117.46 cv
77.6762 118.274 79.0941 116.854 78.1 116.052 cv
77.9594 115.938 77.8178 115.819 77.6752 115.697 cv
80.9008 116.284 84.2572 116.301 87.393 115.901 cv
89.35 115.652 91.2514 115.202 93.102 114.584 cv
93.0541 114.643 li
92.5727 115.278 93.4818 116.021 94.0883 115.678 cv
97.6469 113.659 100.753 111.271 103.498 108.485 cv
104.136 108.027 104.733 107.51 105.315 106.807 cv
105.474 106.614 105.556 106.406 105.594 106.199 cv
106.875 104.688 108.078 103.082 109.188 101.349 cv
109.542 100.796 108.741 100.192 108.286 100.653 cv
106.957 101.999 105.689 103.425 104.415 104.847 cv
104.179 104.856 li
103.618 104.961 103.093 105.134 102.592 105.354 cv
106.684 102.376 111.548 97.8221 110.338 92.3309 cv
109.091 86.6683 107.323 81.8269 101.771 79.6419 cv
101.043 79.3558 100.301 79.1302 99.5541 78.9329 cv
99.8891 78.4456 99.81 77.6033 99.0785 77.326 cv
87.4242 72.9124 75.7406 78.2068 67.1439 86.2508 cv
66.9262 86.3899 66.7172 86.5369 66.5258 86.6981 cv
66.1137 87.0462 65.8246 87.4144 65.5883 87.7986 cv
65.2416 88.1517 64.8813 88.4915 64.558 88.867 cv
62.2152 89.5252 61.5102 89.2805 62.4408 88.1321 cv
62.2689 86.8929 65.0492 84.4573 66.0101 83.5018 cv
68.6957 80.8304 71.9828 79.0013 75.3959 77.4349 cv
78.9193 75.8181 82.5482 74.535 86.1918 73.3094 cv
86.3207 73.4134 86.4799 73.4851 86.6791 73.4788 cv
91.7572 73.326 96.85 73.0472 101.939 72.7596 cv
102.184 72.9808 102.525 73.0965 102.84 72.9856 cv
103.169 72.8699 103.499 72.7591 103.829 72.6526 cv
105.497 72.5584 107.163 72.47 108.829 72.3802 cv
109.124 73.1878 109.41 73.9988 109.711 74.804 cv
110.359 76.5355 110.834 79.1858 112.805 79.9866 cv
114.141 80.5296 115.17 80.2547 115.977 79.5242 cv
115.981 79.9505 115.986 80.3631 116.001 80.7439 cv
116.108 83.3367 116.155 85.9314 116.259 88.5247 cv
116.152 89.0428 116.045 89.5599 115.94 90.077 cv
113.746 94.8406 111.179 99.4139 108.301 103.819 cv
107.018 105.782 110.161 107.602 111.438 105.652 cv
112.29 104.351 113.098 103.032 113.884 101.703 cv
113.638 103.512 113.446 105.311 113.311 107.1 cv
109.998 113.965 105.393 120.417 100.67 126.199 cv
98.2807 128.29 96.0746 130.548 95.0433 133.183 cv
94.7474 133.938 94.8441 134.599 95.1635 135.127 cv
92.1645 136.88 89.2826 138.999 86.4457 141.019 cv
86.143 141.166 85.8744 141.36 85.643 141.587 cv
85.5287 141.667 85.4145 141.75 85.3002 141.83 cv
85.1713 141.846 85.0453 141.856 84.9164 141.871 cv
85.0629 141.428 84.9877 140.919 84.5346 140.489 cv
84.1586 139.6 84.0629 138.763 84.2367 137.976 cv
84.2904 137.872 li
85.4867 135.558 87.1107 133.783 89.1781 132.2 cv
91.6147 130.334 96.767 130.416 95.9887 125.98 cv
95.9184 125.577 95.4174 125.342 95.0512 125.448 cv
91.9193 126.357 88.9223 126.455 86.3353 128.648 cv
85.0434 129.743 83.8998 131.041 82.9144 132.42 cv
82.7914 132.592 82.3187 133.617 81.8295 134.679 cv
80.2602 135.977 78.2709 137.823 79.4809 139.937 cv
79.8383 140.562 80.5433 140.86 81.2377 140.807 cv
81.4349 141.287 81.726 141.738 82.1 142.159 cv
79.6918 142.365 77.3002 142.477 74.7621 142.564 cv
68.8725 142.764 63.1371 142.966 57.3129 142.669 cv
52.0482 141.891 46.9183 140.626 41.767 138.512 cv
41.1566 138.262 40.5941 138.416 40.1644 138.772 cv
39.5394 138.571 38.9213 138.36 38.3236 138.117 cv
35.5541 136.992 32.9769 135.537 30.6098 133.709 cv
29.3373 132.728 27.8217 134.811 28.9193 135.899 cv
31.9809 138.934 37.0229 142.4 41.8246 142.658 cv
45.2133 144.021 48.7133 145.193 52.2807 146.069 cv
52.4115 146.148 52.5541 146.22 52.7152 146.279 cv
59.3344 148.742 66.8226 148.236 73.765 148.1 cv
74.5313 148.085 75.3195 148.088 76.1184 148.091 cv
78.7135 148.1 81.4223 148.109 83.8617 147.506 cv
84.184 147.426 85.0775 146.833 85.9642 146.181 cv
86.2016 146.316 86.4613 146.434 86.7699 146.513 cv
89.5062 147.208 92.1176 146.597 94.5824 145.354 cv
102.41 143.371 109.586 139.485 115.321 133.532 cv
118.564 130.164 121.721 126.085 122.757 121.439 cv
123.541 120.007 124.165 118.521 124.656 117.302 cv
126.137 113.613 126.703 109.687 126.337 105.782 cv
126.956 105.548 127.452 105.047 127.587 104.235 cv
130.595 86.2322 132.539 67.5848 131.904 49.2967 cv
f
64.3988 94.2044 mo
64.3988 94.3045 li
64.3988 94.2044 li
cp
f
62.0648 96.3714 mo
62.0648 96.471 li
62.0648 96.3714 li
cp
f
61.0678 127.458 mo
60.8129 127.447 60.558 127.44 60.3021 127.427 cv
60.8109 127.25 61.3021 127.03 61.7602 126.753 cv
61.5512 127.021 61.3158 127.247 61.0678 127.458 cv
42.0434 104.623 mo
41.1527 105.39 40.1557 106.133 39.1107 106.853 cv
38.6889 106.176 37.8764 105.735 36.9242 105.951 cv
36.2113 106.113 35.2885 106.39 34.265 106.691 cv
34.017 106.077 33.4428 105.562 32.6117 105.452 cv
30.9584 105.232 29.3422 105.037 27.7553 104.79 cv
21.9974 100.596 15.6176 96.0198 15.7611 88.4007 cv
15.8598 87.7684 15.9389 87.1321 15.9994 86.4876 cv
17.9076 81.6141 23.8578 79.8841 29.0492 82.3758 cv
32.9213 84.2342 37.5863 87.4998 39.3363 91.5056 cv
39.64 92.2005 40.4633 92.1697 40.9818 91.7796 cv
41.1205 95.1868 43.3226 99.5491 44.6693 101.948 cv
43.9252 102.916 42.9926 103.805 42.0434 104.623 cv
96.0746 117.22 mo
93.143 117.226 90.3773 117.914 87.4887 118.296 cv
84.6703 118.667 82.1264 118.296 79.3324 117.974 cv
78.976 117.934 78.6967 118.429 78.9076 118.715 cv
80.3002 120.607 82.3197 121.27 84.5658 121.355 cv
83.0306 122.108 81.5453 122.979 80.1039 123.871 cv
74.9643 127.056 69.2963 127.621 63.3529 127.529 cv
64.5463 126.217 65.3266 124.596 65.2943 122.884 cv
65.2318 119.642 64.3353 116.108 63.4203 113.041 cv
62.8061 110.986 62.1088 107.797 60.4877 106.286 cv
60.1205 105.944 59.514 105.906 59.1498 106.286 cv
59.0111 106.431 li
58.7406 106.714 58.6254 107.228 58.8647 107.572 cv
58.9555 107.704 li
59.1166 107.935 59.3295 108.055 59.5512 108.101 cv
60.1068 108.843 60.5648 109.837 60.9428 110.955 cv
60.6596 111.116 60.4535 111.392 60.4857 111.747 cv
60.7309 114.509 61.4515 117.324 61.2933 120.093 cv
61.2016 121.714 61.1967 122.787 59.9047 123.613 cv
58.0111 124.823 54.4555 124.072 53.1801 122.457 cv
52.7035 121.853 51.807 121.923 51.1977 122.201 cv
50.1693 121.829 49.3373 121.387 48.6879 120.879 cv
48.7269 120.786 li
49.1986 118.565 50.0648 115.757 50.4867 112.982 cv
52.642 108.198 55.7025 103.747 52.7533 98.2269 cv
52.3685 97.5081 51.6 97.3099 50.9232 97.5071 cv
50.8988 97.2522 50.8627 96.9974 50.7953 96.7445 cv
50.1283 94.2137 47.7299 91.8079 45.5775 89.8094 cv
45.5121 89.449 45.4418 89.0901 45.3939 88.7234 cv
45.2465 87.5828 44.2865 86.9778 43.2084 87.469 cv
42.0336 88.0042 41.3959 88.9148 41.1273 90.0374 cv
38.7455 84.1097 31.3637 78.075 25.0756 77.4422 cv
17.3354 76.6629 11.8744 83.0584 12.6674 90.4969 cv
12.7133 90.9319 12.973 91.2762 13.3041 91.5135 cv
13.8959 95.179 15.8852 98.888 18.5775 101.87 cv
18.4574 101.81 18.3363 101.758 18.2162 101.697 cv
16.0551 100.6 14.2123 103.687 16.307 104.963 cv
18.434 106.259 20.6986 107.15 23.0385 107.783 cv
22.348 108.524 22.4877 109.938 23.4027 110.635 cv
24.7758 111.681 26.4887 111.984 28.31 111.909 cv
27.4086 112.309 26.4672 112.674 25.4711 113.009 cv
23.0492 113.824 24.0189 117.506 26.5336 116.864 cv
34.0824 114.935 42.934 110.681 47.8852 104.507 cv
48.1039 104.233 48.3285 103.945 48.5521 103.644 cv
48.9984 103.667 49.4603 103.519 49.8217 103.194 cv
49.9623 103.068 50.0883 102.941 50.2221 102.814 cv
50.2055 103.839 50.0629 104.848 49.8227 105.846 cv
49.7211 105.637 li
49.183 104.689 47.8324 104.971 47.5101 105.926 cv
45.932 110.601 42.3871 116.837 44.4184 121.862 cv
45.6742 124.968 48.5385 126.323 51.4623 125.55 cv
51.8744 125.986 52.3519 126.357 52.8686 126.675 cv
50.1889 126.27 47.5336 125.724 44.9447 125.001 cv
40.1859 123.673 35.3617 120.759 30.4398 120.346 cv
29.976 120.307 29.516 120.877 29.6957 121.323 cv
30.6273 123.635 33.3959 124.944 35.558 126.006 cv
40.2143 128.293 45.6596 129.626 50.5199 131.53 cv
51.6195 131.961 52.1732 129.968 51.0063 129.767 cv
46.0834 128.92 42.3129 127.342 37.7562 125.342 cv
38.2149 125.543 37.2186 125.086 36.1668 124.629 cv
35.0465 124.143 33.8632 123.657 34.308 123.965 cv
31.6039 122.089 36.1215 124.229 36.7016 124.492 cv
42.9115 127.306 49.7924 129.195 56.5521 130.03 cv
56.8051 130.061 57.0639 130.092 57.3217 130.123 cv
57.3129 130.36 57.4457 130.59 57.7396 130.554 cv
58.1274 130.507 58.5179 130.42 58.9076 130.308 cv
64.8656 130.974 71.6703 131.368 77.2025 129.466 cv
79.8646 128.552 82.0424 126.806 84.4769 125.45 cv
87.3744 123.835 90.4955 122.795 93.1273 120.738 cv
93.3109 120.595 93.3959 120.399 93.4144 120.192 cv
94.3627 120.039 95.264 119.926 96.0746 119.915 cv
97.807 119.893 97.8119 117.217 96.0746 117.22 cv
f
104.432 44.4715 mo
101.988 43.5272 99.5434 42.5823 97.099 41.638 cv
96.9721 41.5892 96.9174 41.7928 97.0424 41.8416 cv
99.4867 42.7859 101.932 43.7303 104.376 44.6746 cv
104.502 44.7239 104.558 44.5198 104.432 44.4715 cv
cp
.615686 .678431 .509804 rgb
f
96.2318 42.0379 mo
96.2318 42.138 li
96.2318 42.0379 li
cp
f
91.1342 39.8929 mo
90.1615 39.2 89.2387 40.804 90.1996 41.4915 cv
95.767 45.4759 101.47 49.5428 105.351 55.2991 cv
109.425 61.3431 109.702 67.8538 112.009 74.451 cv
112.276 75.2151 113.321 75.0589 113.39 74.264 cv
114.733 58.8494 102.402 47.9144 91.1342 39.8929 cv
cp
f
102.651 82.1888 mo
92.9496 72.2561 75.4926 81.7274 66.6967 87.9666 cv
65.7826 88.6145 66.2953 90.2288 67.5004 89.8728 cv
69.5902 89.2552 71.3715 88.1111 73.1771 86.9768 cv
75.7309 85.6678 78.3119 84.4339 81.018 83.4793 cv
83.4848 82.846 86.0297 82.4949 88.5795 82.1385 cv
88.8734 82.097 89.0902 81.9778 89.2406 81.8133 cv
93.4115 81.7063 97.1898 82.764 101.568 84.0496 cv
102.651 84.368 103.414 82.971 102.651 82.1888 cv
f
110.227 94.199 mo
109.772 90.7054 107.995 87.5833 105.259 85.3787 cv
103.919 84.2996 101.992 86.1517 103.336 87.3011 cv
106.038 89.6106 107.101 92.6649 107.077 96.1751 cv
107.058 98.7293 106.047 101.286 106.524 103.783 cv
106.618 104.274 107.204 104.296 107.523 104.047 cv
110.156 101.988 110.631 97.3099 110.227 94.199 cv
f
95.7318 108.471 mo
95.5805 108.471 95.5805 108.705 95.7318 108.705 cv
95.8822 108.705 95.8832 108.471 95.7318 108.471 cv
f
105.198 97.8294 mo
104.168 97.534 103.356 98.1834 102.977 99.0706 cv
102.844 99.0359 102.703 99.031 102.556 99.0882 cv
98.5492 100.661 95.0961 103.351 91.3422 105.475 cv
85.8412 107.028 80.2699 108.485 74.7328 109.611 cv
72.6049 109.454 70.5131 108.99 68.5316 108.139 cv
67.1059 107.527 65.8383 109.588 67.2895 110.264 cv
76.7953 114.694 89.3031 113.014 97.8012 106.445 cv
97.9496 106.873 98.351 107.196 98.892 107.248 cv
100.538 107.408 102.456 105.896 103.515 104.767 cv
104.812 103.385 105.737 101.802 106.466 100.064 cv
106.849 99.1522 106.053 98.0755 105.198 97.8294 cv
f
49.9623 102.342 mo
49.3939 102.553 48.8119 102.757 48.224 102.955 cv
48.1137 102.4 47.4916 101.918 46.8412 101.987 cv
47.3226 100.659 47.4076 99.2977 46.9789 97.7566 cv
46.3187 95.3812 46.1869 93.4524 44.3363 91.6619 cv
44.1596 91.491 43.8451 91.7137 43.9867 91.9319 cv
45.2357 93.8572 46.3109 95.9305 45.7777 98.2464 cv
45.4086 99.847 44.7221 101.579 43.8275 102.949 cv
43.6127 103.277 43.6088 103.593 43.7172 103.862 cv
43.2621 104.113 42.7982 104.345 42.3275 104.56 cv
39.4047 105.157 36.4213 105.452 33.5648 105.242 cv
33.0385 105.203 32.6586 105.402 32.4164 105.709 cv
31.4662 105.406 30.6283 105.417 29.4994 105.267 cv
27.3617 104.983 25.4281 103.786 23.5228 102.815 cv
19.8441 100.94 16.4242 96.9734 16.101 92.6756 cv
16.1928 92.5838 16.267 92.4715 16.2943 92.327 cv
17.1049 88.0496 17.7982 81.1644 23.4496 80.4358 cv
28.0844 79.8387 33.5619 83.5472 36.6684 86.4837 cv
37.7855 87.5393 39.4711 85.8626 38.3588 84.7933 cv
34.6303 81.2098 27.0522 76.0828 21.5316 77.9944 cv
17.1273 79.5193 13.2318 85.9632 14.1937 90.7762 cv
14.0356 90.9456 13.9115 91.1561 13.8822 91.4363 cv
13.4691 95.4764 15.7797 100.163 18.8598 103.045 cv
18.7084 103.36 18.7152 103.777 18.9574 104.044 cv
21.0756 106.378 23.6693 107.873 26.4808 108.678 cv
25.6117 108.869 24.7426 109.086 23.8676 109.353 cv
23.184 109.561 23.2631 110.558 23.934 110.667 cv
24.1049 110.839 li
23.141 111.527 23.8773 113.355 25.0951 112.893 cv
25.9672 112.563 26.8441 112.249 27.7211 111.935 cv
28.0854 112.055 28.4574 112.158 28.8637 112.214 cv
30.6898 112.469 32.3412 112.006 34.0004 111.269 cv
34.2865 111.142 34.4467 110.95 34.5414 110.74 cv
34.5638 110.741 li
37.2328 110.737 40.0795 109.73 41.7621 107.621 cv
41.7943 107.566 li
42.89 107.313 43.973 107.009 45.0326 106.644 cv
47.1234 105.926 49.7357 105.123 50.4955 102.875 cv
50.5961 102.576 50.267 102.228 49.9623 102.342 cv
f
127.662 62.8792 mo
127.604 63.7278 127.553 64.575 127.508 65.4207 cv
126.972 66.8665 126.199 68.2815 125.607 69.6131 cv
125.426 67.8738 125.195 66.1395 124.889 64.4188 cv
125.768 64.7444 127.027 64.2308 126.949 63.096 cv
126.474 56.1678 125.895 49.2874 124.413 42.4896 cv
124.203 41.5189 123.988 40.4734 123.747 39.3973 cv
124.403 39.3709 125.007 38.9061 125.015 38.118 cv
125.017 37.9114 124.998 37.7073 124.989 37.5018 cv
125.398 38.2347 125.786 38.9783 126.158 39.7303 cv
125.495 40.1419 125.031 40.9046 125.255 41.7791 cv
126.541 46.784 126.956 51.865 127.676 56.93 cv
127.683 58.8939 127.652 60.8748 127.662 62.8792 cv
cp
127.147 72.9573 mo
126.981 72.7757 126.769 72.6517 126.536 72.5838 cv
126.771 71.9798 127.012 71.3777 127.257 70.7776 cv
127.223 71.5052 127.186 72.2313 127.147 72.9573 cv
cp
123.765 83.9339 mo
124.047 82.1351 124.342 80.3323 124.698 78.5242 cv
124.717 78.4271 124.74 78.3309 124.762 78.2347 cv
124.82 78.2303 li
124.917 80.1448 124.99 82.1053 125.007 84.1023 cv
124.741 83.7161 124.193 83.7107 123.765 83.9339 cv
cp
53.6859 146.511 mo
51.4281 145.714 49.2562 144.785 47.4769 144.087 cv
49.7201 144.699 51.9809 145.226 54.2445 145.653 cv
53.9467 145.855 53.7611 146.167 53.6859 146.511 cv
cp
115.006 32.8152 mo
114.86 32.6702 li
114.49 31.7811 114.107 30.9012 113.686 30.0521 cv
112.433 27.5237 111.575 24.2742 110.037 21.6976 cv
110.149 21.6219 li
111.521 22.2625 112.845 23.0203 114.069 24.0203 cv
114.913 24.7107 115.73 25.4402 116.532 26.1873 cv
116.697 26.513 116.864 26.8377 117.034 27.1605 cv
115.908 26.9647 114.556 27.8816 114.69 29.0999 cv
114.954 31.5174 116.361 33.4202 118.101 35.0994 cv
118.899 37.2088 119.449 39.6219 119.893 41.9031 cv
118.775 38.6326 117.249 35.5325 115.006 32.8152 cv
cp
87.6527 7.90997 mo
86.1947 7.5501 85.3588 9.11016 85.8119 10.1536 cv
84.6664 9.91875 83.5404 9.68291 82.475 9.39971 cv
80.8451 8.96661 79.2221 8.50909 77.5971 8.05791 cv
78.3402 8.00518 79.0951 7.9129 79.8754 7.77032 cv
80.2562 7.70098 80.4711 7.44903 80.5678 7.14874 cv
83.9818 7.15752 87.4613 7.48077 90.8168 8.10088 cv
90.7855 8.35772 90.8246 8.6253 90.9311 8.88653 cv
89.8275 8.50811 88.7309 8.17657 87.6527 7.90997 cv
cp
132.373 64.012 mo
132.139 56.1609 132.037 48.2098 128.889 40.9041 cv
129.212 40.576 129.391 40.1146 129.24 39.595 cv
128.354 36.555 127.066 33.7889 125.466 31.2186 cv
123.41 26.805 120.993 22.5193 117.267 19.6697 cv
116.582 19.1463 115.729 19.3802 115.162 19.9251 cv
113.706 18.7859 112.16 17.7708 110.46 17.0101 cv
110.298 16.9378 110.135 16.8773 109.972 16.8094 cv
110.583 16.9588 111.198 17.1004 111.814 17.2347 cv
112.432 17.4158 113.07 17.5477 113.726 17.6375 cv
113.787 17.6502 li
113.787 17.6463 li
113.929 17.6653 114.069 17.6937 114.213 17.7078 cv
116.007 17.8807 116.407 14.9173 114.64 14.554 cv
113.389 14.2972 112.157 14.0032 110.933 13.6927 cv
108.232 12.5325 105.989 10.389 103.368 8.94317 cv
100.452 7.33526 97.2143 6.34502 93.973 5.65704 cv
88.8295 4.56573 83.016 3.49541 77.5443 3.81182 cv
72.9633 1.84454 65.8676 4.01397 61.5394 4.97344 cv
61.2348 5.04083 60.9203 5.1087 60.6088 5.17657 cv
60.5639 5.17266 li
60.4291 5.18829 60.3119 5.20733 60.1879 5.22442 cv
60.1879 5.22344 li
60.181 5.2254 li
59.5971 5.30743 59.1156 5.41241 58.7201 5.58331 cv
51.8461 7.05401 43.8764 8.7835 38.4887 12.8709 cv
38.0785 13.1824 38.0268 13.7728 38.2367 14.1707 cv
36.35 15.2239 34.5287 16.3675 32.8178 17.5994 cv
31.39 18.6273 32.6879 20.9886 34.224 20.0052 cv
36.4291 18.7215 38.6352 17.5394 40.8646 16.4261 cv
46.3852 13.8733 52.2816 11.9231 57.8334 9.44707 cv
58.0824 9.59454 58.3588 9.68438 58.6361 9.67364 cv
63.059 9.50274 67.4809 9.05694 71.8949 8.64825 cv
75.2318 9.59014 78.5678 10.535 81.8881 11.5291 cv
86.2299 12.8294 90.9984 15.3211 95.5678 14.9251 cv
95.7475 14.9095 95.893 14.8431 96.0014 14.7483 cv
99.6107 16.8016 102.966 19.3523 106.091 22.0267 cv
109.172 24.6629 111.258 28.6707 112.859 32.8851 cv
112.393 33.4422 112.231 34.2938 112.819 35.0032 cv
113.337 35.6282 113.813 36.2684 114.252 36.9207 cv
114.909 38.99 115.491 41.0213 116.049 42.8768 cv
116.257 43.5667 116.913 43.7523 117.452 43.5906 cv
120.353 52.4485 119.485 62.5897 122.142 71.4495 cv
122.183 71.5887 122.273 71.6971 122.381 71.7825 cv
122.55 73.409 122.702 75.0389 122.831 76.6785 cv
122.864 77.0818 123.012 77.4061 123.227 77.6546 cv
123.067 78.3694 122.91 79.0853 122.752 79.8006 cv
121.435 85.7923 120.523 91.9022 118.666 97.7581 cv
118.224 99.1546 120.22 99.6751 120.828 98.4808 cv
120.286 103.198 119.796 107.92 119.248 112.635 cv
118.516 113.796 117.833 114.998 117.193 116.232 cv
116.628 116.177 116.044 116.317 115.589 116.688 cv
115.399 116.384 114.951 116.216 114.628 116.416 cv
112.105 117.976 110.399 120.602 108.593 122.904 cv
107.694 124.05 106.788 125.19 105.882 126.33 cv
105.787 126.45 102.56 131.035 101.86 128.905 cv
101.575 128.036 100.233 128.391 100.481 129.284 cv
101.311 132.263 104.307 130.909 105.81 129.327 cv
107.801 127.233 109.686 125.009 111.605 122.847 cv
112.546 121.786 113.49 120.756 114.288 119.625 cv
113.765 121.248 113.242 122.873 112.714 124.496 cv
111.55 126.311 110.445 128.174 109.236 129.944 cv
108.157 131.273 107.111 132.626 106.092 134.002 cv
105.52 134.658 104.936 135.3 104.329 135.915 cv
102.854 136.678 101.403 137.467 100.114 138.451 cv
99.807 138.683 99.6068 138.966 99.477 139.265 cv
96.2094 140.697 92.9496 142.153 89.6508 143.51 cv
89.3041 143.652 89.0707 143.887 88.9311 144.153 cv
87.1859 144.497 85.4291 144.794 83.7055 145.259 cv
81.307 145.36 78.9027 145.315 76.5053 145.33 cv
72.5697 145.355 68.6352 145.379 64.7006 145.397 cv
64.6098 145.346 li
63.6039 145.006 62.5883 144.701 61.5687 144.411 cv
63.5336 144.336 65.5004 144.138 67.3861 143.988 cv
70.4662 143.742 74.31 143.732 77.1977 142.456 cv
79.5424 141.42 80.5727 139.82 81.6811 137.555 cv
82.6254 135.628 83.6283 133.922 84.7553 132.355 cv
85.0258 132.426 85.3256 132.396 85.5941 132.17 cv
88.2895 129.9 90.9916 127.649 93.7318 125.431 cv
94.6068 124.722 93.3559 123.465 92.4887 124.188 cv
92.3656 124.291 92.2396 124.391 92.1166 124.494 cv
92.0902 124.06 91.7777 123.659 91.3754 123.502 cv
92.7514 122.361 94.0062 121.079 95.0951 119.633 cv
95.3373 119.311 94.8871 119.001 94.598 119.136 cv
89.1459 121.681 84.1244 124.927 78.3686 126.847 cv
73.3959 128.507 68.3061 129.172 63.1254 129.025 cv
60.0678 128.785 56.9652 128.753 53.9555 128.29 cv
51.8119 127.96 49.7103 127.525 47.6303 127.018 cv
47.9584 126.756 48.226 126.34 48.4008 125.714 cv
48.7709 124.393 48.7074 122.88 48.7865 121.528 cv
48.7904 121.471 li
49.0883 121.765 49.4193 121.985 49.7777 122.044 cv
50.0648 122.091 50.2846 121.93 50.3119 121.637 cv
50.3773 120.921 50.1303 120.87 49.9506 120.124 cv
49.809 119.534 49.8852 118.832 49.8422 118.222 cv
49.7172 116.439 50.0785 114.889 50.5863 113.189 cv
50.932 112.035 49.1977 111.589 48.8012 112.697 cv
48.2426 114.259 47.4564 116.17 47.4203 117.941 cv
47.2191 119.415 46.9916 120.881 46.6859 122.344 cv
46.35 123.946 46.224 126.064 44.1029 126.057 cv
44.0922 126.061 li
42.5443 125.6 41.0033 125.107 39.4711 124.539 cv
38.6059 124.219 38.1234 125.163 38.4096 125.84 cv
35.3236 124.632 32.3041 123.271 29.3519 121.757 cv
28.7221 121.434 28.1957 122.326 28.7963 122.708 cv
34.684 126.457 42.5316 131.946 49.8959 131.248 cv
50.3607 131.204 50.7475 130.718 50.7357 130.282 cv
56.5336 131.769 62.6156 132.504 67.8217 131.111 cv
74.4193 130.913 81.3715 129.52 87.1029 126.378 cv
84.0404 129.184 81.8246 132.23 79.558 136.154 cv
74.5541 144.814 62.725 140.655 54.5648 142.494 cv
54.4496 142.521 54.3637 142.578 54.2904 142.645 cv
52.7934 142.33 51.2914 142.034 49.7894 141.736 cv
50.0219 141.369 49.9633 140.755 49.4281 140.543 cv
48.2123 140.06 46.9965 139.577 45.7816 139.095 cv
45.6996 138.921 45.5463 138.776 45.306 138.708 cv
42.5326 137.916 39.8891 136.823 37.4154 135.328 cv
35.8393 134.375 34.475 133.123 33.0268 132.009 cv
31.3588 128.048 27.8568 124.491 24.9975 121.49 cv
24.2504 120.706 23.1283 121.864 23.8207 122.666 cv
25.5033 124.616 27.0883 126.641 28.5385 128.771 cv
29.3275 129.93 30.0541 131.105 30.8685 132.221 cv
30.932 132.308 li
31.3852 132.922 31.8578 133.522 32.4027 134.077 cv
32.5033 134.18 32.6244 134.231 32.7465 134.253 cv
35.9945 137.145 40.7963 139.028 44.6088 140.117 cv
44.6791 140.186 44.766 140.246 44.8715 140.288 cv
45.6322 140.595 46.393 140.902 47.1537 141.208 cv
41.6703 140.102 36.2103 138.865 30.9779 136.644 cv
30.1918 136.31 29.4389 137.158 30.0443 137.853 cv
34.4691 142.93 42.0307 144.785 48.2465 146.766 cv
53.4418 148.421 60.4486 151.455 65.7006 148.63 cv
65.7094 148.623 li
66.6859 148.652 67.6625 148.679 68.6391 148.706 cv
68.7484 148.768 li
72.5277 150.18 76.7299 150.026 80.5863 148.92 cv
80.6898 148.92 80.7934 148.924 80.8969 148.924 cv
85.6303 148.926 92.3568 148.924 95.7309 145.064 cv
96.1889 145.562 96.9135 145.794 97.6811 145.347 cv
97.6918 145.341 li
99.848 144.48 101.962 143.282 103.982 141.829 cv
104.787 141.317 105.552 140.759 106.261 140.141 cv
106.675 140.18 107.121 140.108 107.566 139.878 cv
110.574 138.328 125.499 128.077 118.962 123.847 cv
119.283 123.21 119.604 122.575 119.932 121.943 cv
120.523 122.619 121.631 122.869 122.321 122.081 cv
124.675 119.391 125.258 116.059 125.711 112.625 cv
127.12 108.176 128.313 103.444 128.454 98.9871 cv
128.92 95.9119 129.122 92.7498 129.126 89.6102 cv
129.377 89.346 129.576 88.9944 129.674 88.5228 cv
130.455 84.199 132.774 80.0384 133.352 75.7825 cv
133.853 72.095 132.487 67.7894 132.373 64.012 cv
cp
f
51.726 145.687 mo
51.4154 145.643 51.1049 145.6 50.7992 145.545 cv
49.6781 145.343 48.5687 145.102 47.4662 144.841 cv
49.0971 145.075 50.8002 145.023 52.4428 145.045 cv
52.0844 145.097 51.8324 145.366 51.726 145.687 cv
cp
87.9262 145.078 mo
82.3129 145.241 76.85 147.128 71.1684 147.31 cv
64.9447 147.509 58.8432 146.734 52.8471 145.075 cv
52.7191 145.039 52.6019 145.036 52.4916 145.046 cv
52.6859 145.049 52.8822 145.051 53.0746 145.057 cv
55.433 145.127 57.768 145.025 60.1019 144.679 cv
60.935 144.555 60.7211 143.218 59.9057 143.229 cv
55.3246 143.291 50.3393 141.795 45.8256 142.726 cv
45.017 142.893 44.9994 143.931 45.557 144.352 cv
43.3295 143.755 41.1293 143.062 38.9496 142.278 cv
37.8578 141.885 37.431 143.58 38.476 143.995 cv
42.5512 145.616 46.7152 146.949 51.0023 147.889 cv
53.8324 148.511 56.9935 149.308 59.9105 148.876 cv
69.4203 150.837 80.6898 151.295 88.31 146.497 cv
88.9271 146.109 88.7084 145.055 87.9262 145.078 cv
cp
.45098 .498039 .356863 rgb
f
114.612 131.092 mo
106.807 134.985 101.464 143.929 92.2299 145.15 cv
91.1293 145.295 91.06 147.012 92.2299 146.931 cv
97.0551 146.598 100.878 144.379 104.765 141.631 cv
108.55 138.954 113.088 135.977 115.413 131.893 cv
115.716 131.363 115.124 130.836 114.612 131.092 cv
cp
f
123.907 106.856 mo
123.539 107.716 123.191 108.583 122.851 109.453 cv
122.6 108.671 121.722 108.186 121.022 108.325 cv
122.443 102.23 123.069 95.8152 123.787 89.8162 cv
123.929 88.6263 122.039 88.6224 121.912 89.8162 cv
120.892 99.3328 117.89 108.405 116.785 117.842 cv
116.725 118.346 117.534 118.551 117.746 118.102 cv
118.378 116.758 118.925 115.366 119.416 113.945 cv
119.107 116.343 118.868 118.751 118.642 121.159 cv
117.596 124.033 116.473 126.879 115.122 129.643 cv
114.755 130.394 115.831 131.047 116.255 130.306 cv
116.473 129.927 116.689 129.546 116.904 129.165 cv
117.106 129.301 117.405 129.315 117.615 129.136 cv
120.263 126.885 120.911 123.85 121.771 120.598 cv
122.026 119.635 122.257 118.676 122.454 117.717 cv
123.72 114.321 124.611 110.802 124.868 107.116 cv
124.902 106.626 124.109 106.384 123.907 106.856 cv
cp
f
96.9311 21.7215 mo
96.5453 21.3856 96.1596 21.0491 95.7729 20.7132 cv
95.6898 20.7962 li
96.0824 21.1268 96.474 21.4573 96.8656 21.7879 cv
96.9311 21.7215 li
cp
f
95.2767 78.3782 mo
89.392 80.2288 82.225 79.3396 76.9018 82.491 cv
72.7768 84.9334 69.2308 88.7933 67.2992 93.1888 cv
66.6547 93.2947 66.681 94.3406 67.3988 94.3406 cv
67.4691 94.326 li
67.808 94.4964 68.2816 94.4651 68.515 94.0945 cv
71.3959 89.5325 75.0189 84.3899 80.6068 82.9515 cv
85.5736 81.6731 90.7806 81.7332 95.7943 80.2542 cv
96.9936 79.9002 96.474 78.0017 95.2767 78.3782 cv
f
104.893 99.845 mo
100.328 102.73 95.0717 103.397 89.9574 104.796 cv
85.0746 106.133 79.9262 107.979 75.2211 109.809 cv
74.6039 110.05 74.5297 110.929 75.2211 111.142 cv
80.3725 112.732 85.8578 108.946 90.726 107.583 cv
96.1371 106.068 101.441 105.275 106.076 101.869 cv
107.263 100.996 106.196 99.0218 104.893 99.845 cv
f
42.767 105.676 mo
40.3335 105.732 37.8492 105.446 35.3664 105.16 cv
32.2825 104.804 29.2008 104.449 26.222 104.749 cv
25.4808 104.823 24.9008 105.988 25.7846 106.365 cv
30.9662 108.572 37.5717 108.539 43.0443 107.725 cv
44.2162 107.551 43.9233 105.65 42.767 105.676 cv
f
63.7865 116.22 mo
63.9242 115.279 63.9926 114.329 63.8744 113.36 cv
63.5687 110.836 61.892 108.727 60.0258 107.122 cv
59.2738 106.475 58.0736 107.286 58.6088 108.216 cv
59.3676 109.534 60.0834 110.718 60.5268 112.036 cv
60.0434 111.953 59.517 112.376 59.8519 112.911 cv
60.4848 113.923 60.8412 115.035 60.9769 116.174 cv
60.9301 118.173 60.6732 120.464 59.808 122.018 cv
58.9603 123.541 61.1693 125.451 62.3295 123.964 cv
64.2094 121.555 64.64 118.727 63.7865 116.22 cv
cp
f
84.643 124.889 mo
81.5541 125.575 78.9584 127.226 75.9564 128.183 cv
71.8656 129.488 68.1703 129.009 64.0463 128.114 cv
62.6088 127.801 62.0033 129.924 63.4359 130.328 cv
71.1244 132.5 79.4232 132.171 85.2699 125.967 cv
85.7201 125.488 85.2699 124.75 84.643 124.889 cv
cp
f
87.3031 126.824 mo
84.6361 130.101 82.1303 133.515 80.2562 137.311 cv
80.0668 137.695 80.0307 138.061 80.098 138.384 cv
79.4398 138.75 78.7387 139.075 77.9379 139.306 cv
76.724 139.658 75.6381 140.326 74.4018 140.604 cv
73.0062 140.917 71.9613 140.82 70.7387 141.602 cv
70.2553 141.911 70.6791 142.638 71.1879 142.371 cv
71.6381 142.135 76.602 141.659 77.7553 141.6 cv
79.3842 141.515 80.5844 141.603 82.0121 140.667 cv
84.8578 138.801 86.5551 135.142 87.2689 131.959 cv
87.3393 131.644 87.1352 131.419 86.8939 131.35 cv
87.559 130.264 88.2504 129.19 89.015 128.145 cv
89.7387 127.155 88.0844 125.864 87.3031 126.824 cv
cp
f
78.0971 133.899 mo
78.3344 132.605 77.5346 131.165 75.9848 131.224 cv
72.8783 131.343 70.7025 133.004 67.809 134 cv
66.9564 134.294 66.0775 134.488 65.185 134.616 cv
64.5082 134.468 63.8451 134.286 63.185 134.095 cv
63.1488 133.891 63.0541 133.695 62.8734 133.537 cv
59.9867 131.012 55.9398 131.458 52.2484 131.218 cv
48.0404 130.945 43.3607 130.881 39.3432 129.314 cv
38.8861 128.982 38.4398 128.639 38.0219 128.268 cv
37.4721 127.781 36.8861 127.676 36.3842 127.813 cv
34.5668 127.013 33.2357 129.562 34.8842 130.755 cv
35.2816 131.043 35.6947 131.299 36.1146 131.537 cv
37.4193 133.316 38.5004 135.049 40.1234 136.601 cv
40.9291 137.371 42.1166 137.315 42.8627 136.656 cv
46.4232 138.652 50.3685 139.773 55.0736 140.303 cv
59.1771 140.765 64.0121 140.954 68.4213 139.987 cv
72.4115 139.769 77.4838 138.437 78.184 135.136 cv
78.2826 134.67 78.2367 134.255 78.0971 133.899 cv
cp
1 1 1 rgb
f
81.3139 103.156 mo
80.7934 102.294 79.8812 101.557 79.0053 101.233 cv
78.3852 101.005 77.7611 100.967 77.1371 101.026 cv
76.9281 100.643 76.6625 100.281 76.3461 99.9519 cv
76.6801 98.5325 76.5932 96.9329 76.3998 95.5657 cv
76.8979 94.7303 77.2983 93.8274 77.5951 92.8807 cv
80.0619 92.6434 82.933 92.4324 84.8275 94.0096 cv
84.975 94.7088 85.2699 95.4188 85.7738 96.1229 cv
85.9887 96.4227 86.2582 96.721 86.558 97.012 cv
86.848 98.4681 86.5892 100.007 87.0394 101.453 cv
87.0756 101.568 87.1225 101.682 87.1742 101.796 cv
85.2113 102.422 83.2045 102.892 81.3139 103.156 cv
97.8783 82.8831 mo
90.4408 80.7874 81.4242 83.7239 75.5658 88.427 cv
75.4701 88.4715 75.3734 88.5179 75.2748 88.5662 cv
75.015 88.6028 74.7514 88.6751 74.4906 88.7947 cv
73.5639 89.2195 72.6058 89.9666 71.723 90.9002 cv
70.0844 92.3025 68.7846 94.0335 68.727 95.8289 cv
68.6547 96.074 li
68.4261 96.3016 68.2485 96.596 68.1635 96.9759 cv
63.9623 115.691 96.6078 106.585 102.374 97.7327 cv
105.775 92.513 104.395 84.719 97.8783 82.8831 cv
.227451 .239216 .207843 rgb
f
36.2104 94.7464 mo
36.0746 95.2527 35.9672 95.762 35.851 96.2703 cv
35.7133 96.4256 35.6039 96.6238 35.5443 96.8821 cv
35.5111 97.0281 35.4662 97.1946 35.4135 97.3655 cv
34.726 98.0266 34.0189 98.6766 33.3734 99.3773 cv
33.3607 99.3934 li
32.9096 99.3157 32.4408 99.2508 31.9291 99.2313 cv
31.4538 99.2132 30.9757 99.2569 30.497 99.3006 cv
29.526 99.3892 28.5524 99.4778 27.5941 99.0511 cv
26.3109 98.4793 25.1303 97.1726 24.2436 96.0257 cv
24.4721 95.7322 24.6234 95.3509 24.6488 94.8807 cv
24.7982 92.0227 27.684 90.555 30.2279 90.2874 cv
33.1742 89.9778 34.4115 91.4041 35.9232 93.4188 cv
36.0248 93.7391 36.1381 94.0584 36.2611 94.3782 cv
36.266 94.597 li
36.2104 94.7464 li
40.4955 95.5891 mo
40.5228 94.9866 40.3353 94.4725 40.017 94.0731 cv
39.8754 93.3489 39.6606 92.6326 39.3734 91.8968 cv
39.349 91.785 li
39.3324 91.7894 li
39.2719 91.638 39.2289 91.492 39.1596 91.3382 cv
38.8432 90.6234 38.2504 90.3567 37.6429 90.3933 cv
36.4027 88.3748 34.6429 87.0091 32.3666 86.576 cv
32.3881 86.0559 32.1586 85.5364 31.6303 85.2518 cv
27.7875 83.1834 20.3822 81.5564 18.2748 86.6497 cv
16.1508 91.784 19.2768 97.7513 23.0531 101.197 cv
24.8217 102.81 27.0726 104.344 29.5775 104.208 cv
30.8597 104.138 31.7289 103.85 33.0033 104.042 cv
34.4369 104.258 35.6859 104.521 37.1576 104.344 cv
42.9604 103.645 41.8266 99.5584 40.4955 95.5891 cv
f
96.4701 96.5159 mo
96.4535 96.6145 96.4662 96.6995 96.4604 96.7928 cv
96.3178 96.8953 96.1733 96.9974 96.018 97.1033 cv
94.5912 98.0794 92.7983 99.2913 92.0463 100.894 cv
91.8686 101.271 91.8266 101.621 91.8734 101.934 cv
91.8461 101.948 li
89.8315 102.903 87.4233 103.427 85.4047 104.477 cv
83.0756 105.132 80.7133 105.617 78.0932 105.628 cv
76.3002 105.636 74.2396 105.044 72.891 103.893 cv
73.2367 103.227 73.2367 102.376 72.6195 101.834 cv
72.3822 101.626 72.1957 101.401 72.0356 101.167 cv
71.9867 100.951 71.8793 100.769 71.7318 100.626 cv
71.6557 100.449 71.5912 100.267 71.5473 100.081 cv
71.5736 99.9544 71.5912 99.8309 71.6303 99.6995 cv
72.4144 97.0521 74.4174 94.3182 76.0736 92.1107 cv
76.1303 92.0008 li
79.2064 91.1746 82.7386 87.3865 86.0756 86.9622 cv
86.1322 87.783 86.7094 88.5462 87.7806 88.5555 cv
89.6381 88.5716 91.4291 88.6634 93.2221 88.888 cv
93.3471 89.0316 93.4867 89.1687 93.6644 89.2835 cv
93.9574 90.1111 94.2504 90.9388 94.5434 91.7664 cv
94.3783 93.0408 96.2104 93.284 96.7924 92.3758 cv
97.0043 92.0452 97.1586 91.7215 97.2865 91.4002 cv
97.3402 91.6365 97.3822 91.8704 97.4105 92.1009 cv
97.0775 93.5628 96.7211 95.0193 96.4701 96.5159 cv
104.79 92.3924 mo
104.969 90.2542 103.184 88.0633 101.776 86.4725 cv
99.8363 83.49 99.1986 81.9588 95.559 81.9363 cv
87.8871 81.889 79.8851 83.6253 74.4486 89.3177 cv
73.7221 89.0267 72.7397 89.1575 72.2192 89.8645 cv
71.1332 91.3411 69.6713 93.4593 68.6606 95.6668 cv
68.059 96.7542 67.6107 97.8582 67.3695 98.8133 cv
67.2738 99.1903 67.3363 99.5545 67.4955 99.8665 cv
67.4408 101.142 67.7572 102.317 68.6205 103.273 cv
68.8461 104.534 69.5473 105.71 70.9584 106.718 cv
73.4106 108.471 77.56 108.008 80.3646 107.717 cv
81.4867 107.6 82.5511 107.335 83.5892 107 cv
83.7172 107.177 83.894 107.313 84.1234 107.348 cv
87.265 107.833 90.7006 106.1 93.4848 104.753 cv
96.8529 103.122 99.8539 100.93 102.313 98.1033 cv
102.923 97.4021 102.773 96.552 102.306 95.993 cv
102.357 95.8856 102.415 95.7855 102.463 95.6761 cv
103.7 94.9954 104.668 93.8504 104.79 92.3924 cv
.160784 .168627 .145098 rgb
f
29.8109 101.339 mo
27.3598 100.68 25.599 99.951 24.0326 98.6228 cv
24.0434 98.5389 li
23.8861 96.9627 22.1567 95.9934 21.2953 94.7298 cv
21.1303 94.4876 20.9779 94.242 20.8344 93.993 cv
21.3275 93.6629 21.6625 93.0198 21.5736 92.3719 cv
21.3627 90.8377 20.8773 89.5096 21.6059 88.0183 cv
22.1 87.8533 22.5209 87.4891 22.6801 86.9046 cv
22.7269 86.7293 22.7992 86.5784 22.8832 86.4407 cv
23.1859 86.1766 23.5092 85.9334 23.8412 85.7127 cv
26.0658 84.9305 30.642 86.8675 32.1234 87.6858 cv
35.1059 89.3333 37.8998 93.4939 38.6478 96.8294 cv
40.0648 103.15 33.8783 102.433 29.8109 101.339 cv
42.6439 97.5784 mo
41.8578 92.262 37.1996 86.1351 32.2719 84.0936 cv
28.4867 82.5257 20.8861 80.1214 19.4662 85.4251 cv
18.2377 86.908 17.5551 88.8807 17.7865 90.742 cv
17.6693 92.325 17.8773 93.9324 18.5092 95.3816 cv
18.7104 95.8426 19.0336 96.4368 19.4388 97.0281 cv
20.8353 99.2913 22.3178 101.808 24.7211 103.12 cv
27.1332 104.436 30.9086 105.49 33.5717 105.928 cv
39.0492 106.831 43.5092 103.422 42.6439 97.5784 cv
f
39.7006 38.409 mo
38.3861 39.055 37.5609 39.1771 37.058 38.9734 cv
39.515 37.4241 41.8148 35.6766 43.7387 33.4139 cv
44.8353 34.053 45.9379 34.6194 47.0668 35.0833 cv
44.5824 35.9544 42.2123 37.1761 39.7006 38.409 cv
cp
25.7035 48.4769 mo
25.4262 48.6204 25.1498 48.3699 24.8939 47.9354 cv
24.9867 47.6541 25.0805 47.3724 25.1732 47.0906 cv
25.6566 47.1331 26.1791 46.992 26.6605 46.5877 cv
26.6889 46.5623 li
26.4945 47.3055 26.2504 48.1937 25.7035 48.4769 cv
cp
26.4799 32.5311 mo
26.2728 33.2371 26.0492 33.9339 25.8158 34.6277 cv
25.7621 34.7078 li
25.5463 35.0394 25.1068 35.8685 24.5394 36.9573 cv
25.0756 35.6033 25.767 33.9022 26.4799 32.5311 cv
cp
54.0228 33.8631 mo
50.5326 33.8397 47.5795 33.118 44.4916 31.6434 cv
44.2279 30.7596 42.9867 30.2757 42.181 31.3201 cv
40.5922 33.3802 38.6605 34.9432 36.5805 36.2972 cv
36.7709 35.4471 37.0785 34.5223 37.3588 33.702 cv
38.4965 31.951 39.6107 30.1858 40.7055 28.4207 cv
40.7279 28.3768 li
40.9643 28.6009 41.2953 28.7405 41.7309 28.7181 cv
44.4701 28.577 47.14 28.1834 49.8383 27.7093 cv
51.1918 27.4715 51.2621 25.532 50.2055 24.9017 cv
49.3637 24.3997 48.4916 24.1321 47.5883 23.9715 cv
49.5375 23.3372 48.7943 20.4432 46.8461 20.3245 cv
46.8461 20.2815 li
46.2728 20.3289 45.6762 20.3997 45.0736 20.4866 cv
42.2269 20.719 36.7094 21.0247 36.4242 23.598 cv
35.8891 23.4334 35.2768 23.491 34.7348 23.9495 cv
33.9066 24.6502 33.1195 25.3982 32.3637 26.1766 cv
32.2309 26.2093 32.1127 26.2576 31.9691 26.2767 cv
31.6273 24.8694 29.6879 25.0272 29.2709 26.2767 cv
29.0336 26.991 28.7836 27.701 28.5434 28.4144 cv
28.4477 28.3851 li
25.2709 27.9022 24.2934 32.0789 23.0795 34.3777 cv
20.5658 39.1375 17.5795 43.8499 16.2846 49.1185 cv
16.015 50.2166 16.81 51.3314 17.9711 51.3314 cv
18.2836 51.3314 18.5775 51.2713 18.8656 51.1888 cv
18.6586 51.8538 18.4955 52.5369 18.3734 53.2371 cv
17.4691 56.5486 16.9594 59.9466 16.849 60.8865 cv
16.8197 61.1434 16.8861 61.3548 16.9896 61.5413 cv
16.4525 63.0794 15.9096 64.615 15.3783 66.1556 cv
14.7816 67.886 17.6361 69.1341 18.3744 67.4183 cv
20.4076 62.6902 22.558 57.8567 24.0873 52.9407 cv
24.1273 52.8104 24.1742 52.6609 24.2221 52.5037 cv
24.3148 52.6146 li
24.6928 53.0223 25.3168 53.1609 25.8432 53.0189 cv
29.0766 52.1443 29.56 47.9412 30.5609 45.157 cv
30.7689 44.5794 30.9789 44.0042 31.1908 43.4305 cv
32.1254 43.1023 32.8998 42.5276 33.5355 41.8021 cv
33.809 42.0794 34.1352 42.3172 34.5385 42.4925 cv
36.7152 43.4378 39.3949 42.1229 41.3227 41.1834 cv
45.7992 39.0023 49.4916 37.5789 54.4252 36.8367 cv
56.1469 36.5774 55.681 33.8738 54.0228 33.8631 cv
cp
.964706 1 .913725 rgb
f
18.2191 71.6648 mo
18.8559 69.7781 15.9272 69.0115 15.2592 70.8484 cv
14.7504 72.2454 14.2602 73.6492 13.7992 75.0623 cv
13.4545 76.118 12.8861 77.3646 13.308 78.4749 cv
13.9252 80.1024 16.2025 80.4934 17.309 79.1282 cv
17.5697 78.8065 17.5414 78.3919 17.184 78.1526 cv
16.8412 77.9236 16.5033 77.8865 16.3793 77.5066 cv
16.266 77.1624 16.8295 76.014 16.9428 75.6404 cv
17.3461 74.3079 17.7748 72.9837 18.2191 71.6648 cv
f
30.2172 78.0228 mo
30.1449 77.8929 30.0648 77.7684 29.9877 77.6419 cv
29.8686 76.5193 28.7738 75.5081 27.3734 75.7928 cv
27.0492 75.8587 26.7728 76.0496 26.5521 76.2981 cv
26.4379 76.2947 26.3236 76.2918 26.2094 76.2884 cv
25.6918 76.2742 25.1732 76.261 24.6547 76.2493 cv
23.514 76.2225 22.3734 76.1966 21.2328 76.1702 cv
19.1928 76.1234 19.2748 79.0931 21.2328 79.2874 cv
22.685 79.4315 24.1361 79.5784 25.5873 79.719 cv
26.3529 79.7933 27.2074 79.9681 27.9974 79.8645 cv
28.2982 79.9827 28.6234 80.075 29.016 80.1155 cv
30.1137 80.2283 30.685 78.865 30.2172 78.0228 cv
f
43.8617 75.1981 mo
39.183 71.5804 33.0277 71.6629 28.0287 68.7869 cv
26.4662 67.8811 25.1039 70.1321 26.4379 71.1751 cv
25.4779 72.1224 25.8461 74.1912 27.5648 74.1321 cv
28.9926 74.0833 30.4203 74.0345 31.848 73.9852 cv
32.0043 73.9798 32.1469 73.9515 32.2826 73.9129 cv
33.017 74.1829 33.7533 74.4461 34.4848 74.7151 cv
37.3148 75.7552 40.2308 76.701 43.2738 76.6185 cv
43.9193 76.6009 44.4691 75.6673 43.8617 75.1981 cv
f
76.2543 72.1863 mo
74.0629 71.493 71.89 73.0901 70.1156 74.2425 cv
68.0062 75.6131 66.0229 77.1644 64.1439 78.8348 cv
62.4144 80.3719 64.9564 82.8943 66.6791 81.3704 cv
68.434 79.8187 70.5473 78.0081 72.765 76.6248 cv
72.8656 76.6443 72.973 76.6482 73.0893 76.6111 cv
74.4213 76.1858 75.4555 75.5726 76.5922 74.7747 cv
77.5863 74.0774 77.4682 72.5706 76.2543 72.1863 cv
cp
f
59.2572 84.7225 mo
58.2689 83.9168 57.0912 83.095 55.7406 83.3533 cv
55.4721 83.4046 55.2113 83.4935 54.9643 83.6131 cv
54.7924 82.9935 54.5434 82.4183 54.1742 81.9642 cv
53.4271 81.0467 52.5238 80.8523 51.601 80.9925 cv
50.766 80.7855 49.7465 81.1683 49.3764 82.1619 cv
49.3197 82.3157 li
49.2279 82.5613 49.2318 82.8714 49.2973 83.1688 cv
49.2582 84.324 49.1459 85.492 49.31 86.6277 cv
49.4008 87.2586 50.0551 87.7825 50.6273 87.9456 cv
51.3471 88.1502 51.9965 88.0037 52.5355 87.6341 cv
52.9174 88.1395 53.5346 88.4363 54.2074 88.2337 cv
54.9262 88.0174 55.4262 87.6439 55.8861 87.0574 cv
56.4984 86.2776 56.1937 86.2088 57.0697 86.91 cv
58.6049 88.139 60.807 85.9852 59.2572 84.7225 cv
cp
f
25.7934 126.745 mo
24.8246 125.491 24.1088 124.159 23.7611 122.602 cv
23.4691 121.298 23.5219 120.108 22.975 118.877 cv
22.8539 118.606 22.3891 118.613 22.266 118.877 cv
22.1176 119.198 22.0199 119.533 21.9603 119.876 cv
20.9643 118.273 20.348 115.813 19.6928 114.264 cv
18.9447 112.493 18.3187 110.546 17.0141 109.11 cv
16.434 108.47 15.4926 109.018 15.434 109.764 cv
15.2309 112.361 16.5346 115.191 17.4076 117.598 cv
18.1557 119.661 18.6185 121.94 20.7709 122.83 cv
21.223 123.017 21.8285 122.806 22.1771 122.486 cv
22.5814 123.894 23.3627 125.288 24.1478 126.428 cv
24.2113 126.628 li
24.433 126.962 24.6557 127.295 24.8773 127.628 cv
25.1117 127.98 25.6098 127.781 25.6459 127.461 cv
25.8861 127.315 26.015 127.032 25.7934 126.745 cv
cp
f
32.0648 115.704 mo
32.0648 115.804 li
32.0648 115.704 li
cp
f
59.1918 114.416 mo
59.1361 114.175 59.0492 113.941 58.9057 113.737 cv
58.1293 112.142 56.8334 111.177 54.8148 111.782 cv
54.3451 111.922 53.9301 112.16 53.559 112.464 cv
52.4652 111.179 50.265 110.837 49.3725 112.698 cv
48.518 114.48 47.5424 117.618 48.1361 119.902 cv
48.0102 120.974 48.0297 122.021 48.2543 123.133 cv
48.5531 124.606 50.7221 125.623 51.9877 124.652 cv
53.2221 123.703 54.0394 122.636 54.6742 121.336 cv
54.6918 121.557 54.7084 121.76 54.724 121.918 cv
54.9799 124.574 58.5102 125.195 59.4174 122.553 cv
60.0033 120.847 60.1586 117.057 59.1918 114.416 cv
cp
.227451 .239216 .207843 rgb
f
129.745 82.7928 mo
128.388 98.4632 126.567 114.387 118.452 128.198 cv
118.331 128.402 118.263 128.603 118.218 128.801 cv
109.759 139.665 97.0521 146.391 83.2651 147.307 cv
71.0541 148.118 57.5326 147.37 45.4174 143.619 cv
45.2689 143.647 45.1088 143.647 44.9242 143.577 cv
43.2865 142.955 41.6293 142.705 40.0053 141.972 cv
38.7768 141.418 37.5443 141.031 36.5414 140.179 cv
36.0404 139.942 35.5355 139.71 35.0443 139.457 cv
27.8226 135.739 23.4584 128.676 19.6684 121.732 cv
19.8353 121.759 li
19.3451 120.997 18.893 120.214 18.4848 119.364 cv
18.2533 118.88 17.9633 118.353 17.8002 117.815 cv
17.6918 117.848 li
14.6927 111.524 12.7123 104.846 12.3676 97.7737 cv
12.3627 97.6624 12.3402 97.5623 12.3217 97.4607 cv
12.433 97.2132 12.4965 96.9246 12.4896 96.5901 cv
12.3451 89.4334 14.6234 82.5686 14.4809 75.3841 cv
14.3451 68.597 10.8881 60.5662 12.1908 53.8313 cv
12.3715 53.6121 12.5131 53.3348 12.5824 52.9783 cv
15.56 37.6893 25.932 22.5965 38.7377 13.7532 cv
52.5531 4.21269 70.2006 2.30937 86.3949 5.41581 cv
93.8686 6.8494 101.866 8.88068 108.121 13.3948 cv
114.448 17.9607 120.282 24.8758 124.667 31.2762 cv
132.319 42.4432 133.079 55.74 131.878 68.8035 cv
131.846 68.7581 li
131.884 70.9139 131.85 73.3587 131.13 75.3343 cv
130.914 76.9573 130.684 78.5731 130.442 80.1717 cv
130.019 80.492 129.717 80.9866 129.69 81.6653 cv
129.681 81.9012 129.671 82.139 129.662 82.3763 cv
129.811 82.4354 li
129.783 82.5496 129.755 82.6658 129.745 82.7928 cv
133.284 39.5296 mo
131.145 33.4788 127.692 28.2528 123.575 23.3719 cv
119.351 18.3636 114.906 13.1839 109.454 9.47248 cv
98.1117 1.75127 81.6049 -.596852 68.185 .123329 cv
55.1625 .822069 42.3138 5.20783 32.2885 13.6878 cv
21.2924 22.9896 12.2406 36.2581 9.05409 50.4363 cv
8.96132 50.5789 8.87735 50.7337 8.81386 50.9134 cv
6.23574 58.2786 9.98574 66.0223 10.4066 73.4729 cv
10.851 81.3304 8.33142 88.7781 8.48963 96.5901 cv
8.49258 96.6936 8.51015 96.7859 8.52478 96.8806 cv
8.41248 97.1331 8.35099 97.428 8.36757 97.7737 cv
9.01404 111.043 14.9213 123.514 22.7826 134.051 cv
30.8597 144.876 45.4047 148.543 58.1849 150.267 cv
71.5248 152.067 86.4408 152.949 99.1898 147.903 cv
108.859 144.076 117.261 137.331 123.173 128.791 cv
123.069 128.691 122.968 128.587 122.865 128.487 cv
130.349 114.779 132.296 99.2318 133.651 83.8484 cv
133.8 83.8987 li
134.192 83.4393 134.282 82.865 134.132 82.3211 cv
136.323 68.18 138.162 53.3318 133.284 39.5296 cv
.156863 .113725 .113725 rgb
f
19.0297 87.0057 mo
21.3402 85.0662 23.8617 84.1238 26.9154 85.5721 cv
28.5228 86.3348 30.1127 87.2298 31.6215 88.1985 cv
28.4867 87.7127 23.6176 89.7357 24.1849 93.3372 cv
23.6244 94.5594 23.5033 95.9593 23.9994 97.2449 cv
24.6635 98.9656 26.2338 99.7762 27.8383 100.451 cv
31.2621 101.892 35.2396 100.471 36.4222 96.7601 cv
36.9525 95.094 36.7592 93.2141 35.9965 91.6341 cv
39.4945 95.0018 42.6937 99.9051 37.6449 102.924 cv
34.0892 105.051 27.3666 102.742 24.265 100.665 cv
19.5736 97.5233 17.6566 92.4246 19.0297 87.0057 cv
32.4428 95.9251 mo
31.7777 97.1614 30.5638 97.2596 29.3832 96.7879 cv
28.1097 96.2791 27.1928 95.8011 28.1635 94.4334 cv
28.5892 93.8323 28.6019 93.2434 28.3812 92.7522 cv
28.8305 92.6814 29.683 92.1824 29.9154 92.1409 cv
30.4711 92.0413 31.1107 92.0648 31.6049 92.3782 cv
32.6899 93.0662 33.0287 94.8372 32.4428 95.9251 cv
35.7738 86.1951 mo
32.6088 83.8836 28.2484 80.827 24.2084 80.4998 cv
20.8246 80.2264 17.7113 82.6937 15.3978 84.8929 cv
14.7289 85.5291 14.6684 86.2977 14.9437 86.9436 cv
13.5394 94.0355 16.601 100.745 22.9301 104.526 cv
24.977 105.749 27.9291 106.83 31.0014 107.325 cv
30.7172 107.384 30.4311 107.432 30.14 107.454 cv
27.1215 107.687 24.3109 107.595 21.3109 108.308 cv
18.808 108.904 19.8676 112.762 22.3744 112.166 cv
25.9721 111.31 30.1342 112.249 33.5453 110.909 cv
35.9379 109.97 38.1918 108.11 40.266 106.317 cv
41.3334 105.749 42.2738 104.987 43.0053 103.964 cv
47.4349 97.7664 40.5375 89.6731 35.7738 86.1951 cv
f
102.537 96.7605 mo
100.285 100.153 96.4506 101.914 92.8139 103.391 cv
87.0619 105.727 79.5316 108.796 73.2787 106.817 cv
68.8139 105.403 67.4935 100.105 68.7484 95.9148 cv
69.8685 92.1756 73.3549 89.6326 76.8793 88.1453 cv
77.2767 88.3933 77.7924 88.4578 78.3959 88.2088 cv
84.8295 85.5555 93.5404 81.9549 100.32 85.5438 cv
104.694 87.8597 105.083 92.928 102.537 96.7605 cv
107.376 87.472 mo
103.056 76.3524 87.5775 80.3806 78.8803 83.7347 cv
78.4965 83.5369 78.0258 83.4778 77.4789 83.6595 cv
68.3881 86.6829 60.8705 95.7791 65.7719 105.6 cv
65.9271 105.911 66.0932 106.208 66.268 106.491 cv
65.8803 107.169 65.8822 108.028 66.6498 108.716 cv
72.7611 114.186 80.6215 116.805 88.7953 115.796 cv
91.3168 115.484 91.3481 111.48 88.7953 111.796 cv
85.6176 112.188 82.5092 112.012 79.5619 111.275 cv
84.8051 110.696 90.2494 108.701 93.8773 107.248 cv
101.747 104.097 111.201 97.3147 107.376 87.472 cv
f
97.5512 71.033 mo
94.4184 72.2732 90.7279 71.6683 87.3949 72.2112 cv
84.1293 72.7435 80.9779 73.7859 77.9906 75.2039 cv
71.6244 78.2259 66.3168 82.9334 61.5775 88.0726 cv
59.8344 89.9627 62.6566 92.7986 64.4057 90.9012 cv
68.9203 86.0062 73.9203 81.5032 80.0102 78.658 cv
83.2738 77.1326 86.8588 76.0999 90.4604 75.8406 cv
93.3236 75.6346 95.8881 75.9695 98.6146 74.8904 cv
100.98 73.9539 99.9496 70.0838 97.5512 71.033 cv
cp
f
46.2348 84.8812 mo
44.3568 83.0452 43.3969 80.6609 41.6566 78.74 cv
39.8969 76.7967 37.5092 75.3421 35.2748 74.0198 cv
30.3627 71.1121 25.7484 71.9612 20.5355 70.3684 cv
18.0677 69.615 17.0131 73.4744 19.4721 74.2259 cv
24.1801 75.6643 28.8236 74.8499 33.2562 77.4734 cv
35.7894 78.9729 38.0902 80.6609 39.8607 83.0467 cv
41.0697 84.6736 41.9437 86.2791 43.4066 87.7093 cv
45.2484 89.5106 48.0795 86.6844 46.2348 84.8812 cv
f
83.9535 99.4749 mo
82.7602 100.485 80.5033 100.211 79.3168 99.2386 cv
77.8441 98.031 78.9398 96.6693 79.9672 95.6033 cv
81.4076 94.7552 82.8676 93.41 84.2309 94.8816 cv
85.5395 96.2943 85.4408 98.2146 83.9535 99.4749 cv
87.685 92.8631 mo
86.7074 91.451 85.5385 90.1306 83.7338 89.9339 cv
81.8383 89.7278 80.0795 90.8748 78.475 91.8396 cv
78.1459 91.9143 77.8188 92.0804 77.5199 92.3841 cv
74.976 94.971 73.2231 98.5447 76.0629 101.665 cv
78.4437 104.282 83.4613 105.076 86.2582 102.756 cv
89.4154 100.137 90.0043 96.2132 87.685 92.8631 cv
f
49.7543 121.834 mo
49.6127 119.42 50.0404 116.712 50.7797 114.156 cv
51.0912 116.89 51.1234 119.627 50.5414 122.374 cv
50.5082 122.352 li
50.3793 122.236 li
50.1986 122.064 49.9848 121.93 49.7543 121.834 cv
cp
53.768 107.636 mo
53.5531 106.477 52.6264 106.081 51.7318 106.227 cv
50.8969 105.842 49.8676 105.971 49.3217 107.031 cv
47.0316 111.474 45.2445 117.533 45.7924 122.554 cv
45.8871 123.422 46.4213 123.988 47.0687 124.264 cv
47.1576 124.557 47.31 124.834 47.5512 125.064 cv
48.5336 126.001 49.7172 126.482 51.0639 126.577 cv
51.8803 126.635 52.6605 126.009 52.9457 125.243 cv
53.5736 125.117 54.1244 124.685 54.3197 123.859 cv
55.6029 118.414 54.7768 113.052 53.768 107.636 cv
cp
f
57.2885 122.236 mo
57.1596 122.352 li
57.1264 122.374 li
56.5443 119.627 56.5766 116.89 56.8881 114.156 cv
57.6273 116.712 58.0551 119.42 57.9135 121.834 cv
57.683 121.93 57.4691 122.064 57.2885 122.236 cv
cp
53.348 123.859 mo
53.5434 124.685 54.0941 125.117 54.7221 125.243 cv
55.0072 126.009 55.7875 126.635 56.6039 126.577 cv
57.9506 126.482 59.1342 126.001 60.1166 125.064 cv
60.3578 124.834 60.5102 124.557 60.599 124.264 cv
61.2465 123.988 61.7807 123.422 61.8754 122.554 cv
62.4232 117.533 60.6361 111.474 58.3461 107.031 cv
57.8002 105.971 56.7709 105.842 55.9359 106.227 cv
55.0414 106.081 54.1146 106.477 53.8998 107.636 cv
52.891 113.052 52.0648 118.414 53.348 123.859 cv
cp
f
76.6479 134.842 mo
75.6723 134.196 74.6859 133.616 73.6713 133.084 cv
75.0854 132.758 76.4848 132.409 77.8607 132.042 cv
77.432 132.958 77.0424 133.901 76.6479 134.842 cv
cp
74.4926 139.298 mo
72.6742 139.524 70.8734 139.715 69.0873 139.865 cv
69.7816 138.673 70.476 137.481 71.1713 136.289 cv
72.4574 136.936 73.6879 137.651 74.9096 138.476 cv
74.9213 138.483 li
74.8148 138.671 74.724 138.869 74.6107 139.054 cv
74.4926 139.298 li
cp
59.8812 140.16 mo
60.4184 139.576 60.9545 138.991 61.4945 138.409 cv
62.017 139.018 62.5619 139.606 63.1303 140.173 cv
62.0424 140.192 60.9574 140.194 59.8812 140.16 cv
cp
38.8119 130.59 mo
37.9965 130.95 37.1947 131.366 36.3988 131.835 cv
35.8783 130.64 35.3393 129.452 34.7484 128.295 cv
36.0687 129.12 37.4252 129.887 38.8119 130.59 cv
cp
59.0717 135.141 mo
58.309 135.96 57.5521 136.786 56.7963 137.611 cv
56.4135 136.75 55.9935 135.876 55.4916 135.111 cv
56.6771 135.164 57.8715 135.175 59.0717 135.141 cv
cp
52.3158 137.977 mo
52.5912 138.157 52.9603 138.817 53.3217 139.569 cv
51.8148 139.339 50.3197 139.034 48.8344 138.649 cv
49.8666 138.143 51.098 137.184 52.3158 137.977 cv
cp
43.6654 136.956 mo
42.1693 136.352 40.683 135.648 39.2084 134.835 cv
40.2699 134.277 41.349 133.834 42.4857 133.482 cv
42.7728 134.597 43.142 135.868 43.6654 136.956 cv
cp
47.2328 134.733 mo
47.0814 134.408 46.9428 134.072 46.8168 133.723 cv
47.2973 133.857 47.7758 133.992 48.2611 134.108 cv
48.0482 134.233 47.8393 134.358 47.64 134.479 cv
47.4799 134.576 47.35 134.658 47.2328 134.733 cv
cp
65.9291 137.339 mo
65.1322 136.555 64.3861 135.725 63.681 134.822 cv
65.0287 134.678 66.3764 134.488 67.7182 134.268 cv
67.1225 135.291 66.5258 136.315 65.9291 137.339 cv
cp
92.4232 120.795 mo
87.6098 120.66 84.0795 125.064 79.9359 126.964 cv
79.6176 127.109 79.3871 127.302 79.2201 127.518 cv
71.2729 129.767 62.6674 131.586 54.3832 131.047 cv
46.1654 130.512 38.6303 126.588 32.1898 121.674 cv
31.5141 121.158 30.8461 121.199 30.3246 121.531 cv
28.4076 119.31 26.1088 117.423 23.2387 116.088 cv
20.9193 115.01 18.8852 118.457 21.2201 119.542 cv
27.4555 122.441 30.6478 128.295 33.1596 134.323 cv
33.3393 134.755 33.6195 135.07 33.9477 135.285 cv
33.9467 135.896 34.2152 136.51 34.8764 136.93 cv
47.5404 144.988 61.0082 145.049 75.4574 143.18 cv
76.3168 143.069 76.8793 142.527 77.1557 141.877 cv
77.5014 141.733 77.8187 141.474 78.0648 141.073 cv
79.7201 138.367 80.6166 135.476 82.0277 132.682 cv
83.6684 129.434 87.35 127.476 90.1967 125.402 cv
90.2943 125.33 90.3754 125.251 90.4555 125.172 cv
91.0609 124.928 91.7055 124.775 92.4232 124.795 cv
94.9975 124.867 94.9955 120.867 92.4232 120.795 cv
cp
f
49.5648 95.5501 mo
48.4037 95.6024 47.6615 96.4305 47.5648 97.5501 cv
47.5521 97.702 47.5541 97.7366 47.558 97.7401 cv
47.5521 97.7557 47.5414 97.7952 47.518 97.8929 cv
47.4584 98.1443 47.4008 98.3938 47.3217 98.64 cv
47.2894 98.7454 47.2533 98.8499 47.2142 98.9529 cv
47.2631 98.8504 47.2592 98.8607 47.2006 98.9837 cv
47.0941 99.2185 46.9662 99.4422 46.8344 99.6638 cv
46.3002 100.564 46.602 101.898 47.5521 102.4 cv
48.516 102.909 49.7182 102.644 50.2885 101.682 cv
51.0482 100.403 51.4379 99.0252 51.5648 97.5501 cv
51.6556 96.5052 50.5805 95.5047 49.5648 95.5501 cv
f
60.725 100.025 mo
60.6234 99.7283 60.5307 99.43 60.4555 99.1253 cv
60.4252 99.0037 60.3978 98.8816 60.3725 98.7591 cv
60.3656 98.7249 60.265 98.1209 60.3227 98.5491 cv
60.2484 97.9964 60.1478 97.5462 59.7367 97.1351 cv
59.39 96.7879 58.8207 96.5267 58.3227 96.5491 cv
57.3578 96.5926 56.1732 97.4383 56.3227 98.5491 cv
56.4389 99.4202 56.5824 100.256 56.8676 101.088 cv
57.2064 102.076 58.2562 102.832 59.3285 102.485 cv
60.307 102.168 61.0883 101.085 60.725 100.025 cv
cp
f
70.1264 38.764 mo
71.7367 38.9847 73.4594 39.327 75.2025 39.5921 cv
74.8842 39.6229 74.6273 39.9056 74.6635 40.2195 cv
71.4145 41.1473 67.9779 41.3191 64.5258 41.2107 cv
65.6498 41.1292 66.7738 41.0521 67.8979 40.9666 cv
68.9447 40.8875 68.9516 39.2439 67.8979 39.326 cv
62.8998 39.7166 57.8988 40.0599 52.8969 40.3831 cv
50.1508 40.0882 46.5414 39.5291 43.681 40.0638 cv
45.0326 39.5218 46.2592 39.0892 46.7777 38.8509 cv
48.974 37.8421 51.185 36.8646 53.3978 35.8948 cv
58.931 37.0359 64.5326 37.9974 70.1264 38.764 cv
cp
84.0082 30.0228 mo
77.4164 31.0467 70.848 32.2557 64.2729 33.386 cv
64.0336 33.4271 63.8754 33.5355 63.7523 33.6653 cv
61.9115 33.7776 60.0687 33.8196 58.2299 33.7879 cv
62.9027 31.7571 67.4242 29.6814 71.433 26.3899 cv
71.9437 25.9705 71.3949 25.0242 70.7768 25.262 cv
68.3891 26.18 66.057 27.1468 63.7113 28.1653 cv
63.4379 28.284 63.5043 28.6312 63.7064 28.7762 cv
60.2172 30.3982 56.6781 31.9207 53.1664 33.4969 cv
53.0785 33.49 li
52.6586 33.4471 52.3588 33.6531 52.1693 33.9456 cv
51.0824 34.4388 49.9975 34.9373 48.9203 35.4505 cv
45.6244 37.0208 41.476 38.4593 38.5092 40.6224 cv
37.2953 41.5081 36.6654 41.9554 36.641 43.4983 cv
36.6225 44.7083 38.4682 44.701 38.516 43.4983 cv
38.5424 42.8367 39.4037 42.1473 40.5629 41.5013 cv
40.3402 41.9324 40.7084 42.5677 41.2221 42.5472 cv
43.9789 42.4383 46.7338 42.304 49.4877 42.1585 cv
49.8695 42.2034 50.2211 42.24 50.5248 42.2601 cv
53.6986 42.4666 56.8627 42.7967 60.0375 43.0003 cv
65.4389 43.347 71.3324 43.9041 76.4516 41.827 cv
77.3031 41.4817 77.5619 40.0618 76.4516 39.827 cv
76.184 39.7703 75.9164 39.7137 75.6488 39.657 cv
78.2855 40.035 80.9555 40.1961 83.3471 39.4456 cv
84.6586 39.034 84.0414 37.2147 82.8051 37.4798 cv
82.7982 37.4568 li
78.1527 38.9153 70.9652 36.2103 66.2523 35.473 cv
65.9467 35.4251 65.641 35.3777 65.3363 35.3294 cv
65.8861 35.2557 66.4369 35.1829 66.9877 35.1097 cv
72.9145 34.6614 78.8031 33.9534 84.7396 32.6756 cv
86.4994 32.2967 85.7201 29.7566 84.0082 30.0228 cv
cp
.74902 .819608 .639216 rgb
f
86.6547 19.8289 mo
76.3451 13.8235 61.3178 15.0682 50.4984 18.9222 cv
44.9594 20.8948 40.0316 23.8157 35.6361 27.4285 cv
33.8373 28.7386 32.1117 30.1551 30.5131 31.7674 cv
30.3607 31.9212 30.3402 32.1238 30.4008 32.2991 cv
28.5912 34.199 26.8861 36.222 25.2826 38.3489 cv
24.8744 38.8909 25.7894 39.4168 26.1937 38.8812 cv
28.806 35.4148 31.9008 32.3265 35.3285 29.6502 cv
36.7885 28.6048 38.2475 27.5613 39.7309 26.5535 cv
41.3695 25.5203 43.0629 24.5726 44.8012 23.7176 cv
42.3637 27.2273 38.06 29.5315 34.7084 31.9778 cv
32.5004 33.5897 29.5277 34.8992 28.7582 37.6561 cv
28.6049 38.2024 29.2514 38.4773 29.6371 38.1678 cv
37.64 31.7454 46.0531 27.3069 55.6859 24.7078 cv
48.3842 29.2933 39.8178 31.6805 33.6869 38.1785 cv
33.4437 38.4363 33.4008 38.9012 33.6869 39.1531 cv
36.4105 41.5486 43.1488 36.4769 45.5502 35.3592 cv
46.3305 34.9969 45.6518 33.8484 44.8764 34.2059 cv
42.8187 35.1546 40.7787 36.2044 38.682 37.0618 cv
35.435 38.3895 34.8275 38.4178 38.2191 36.0882 cv
40.7348 34.3606 43.5902 33.0828 46.3754 31.8548 cv
51.7553 29.4822 56.9789 27.2513 61.3549 23.223 cv
62.182 22.4612 61.3051 21.1917 60.307 21.4227 cv
52.7748 23.1634 45.4662 26.5579 38.7631 30.637 cv
39.5766 30.0594 40.391 29.4822 41.1977 28.8948 cv
43.6723 27.0931 45.9281 25.2967 47.2455 22.5911 cv
48.7484 21.9402 50.2758 21.3475 51.8256 20.8333 cv
57.0307 19.1048 62.5092 18.2352 67.9916 18.2 cv
74.2826 18.159 80.1215 19.8382 86.2758 20.7283 cv
86.7924 20.803 87.1752 20.1321 86.6547 19.8289 cv
cp
f
122.243 65.1688 mo
121.99 64.2259 121.746 63.3104 121.525 62.4339 cv
122.062 62.3758 122.601 61.9271 122.464 61.2366 cv
122.238 60.0843 122.009 58.9109 121.781 57.741 cv
122.366 58.8279 122.932 59.928 123.485 61.0384 cv
123.937 62.4603 124.411 63.8782 124.945 65.284 cv
125.01 65.3846 li
125.04 65.8816 125.076 66.3782 125.101 66.8758 cv
125.168 68.1941 125.219 69.5096 125.261 70.8235 cv
124.302 68.9158 123.281 67.0306 122.243 65.1688 cv
cp
104.437 41.2972 mo
106.093 44.0091 107.719 46.7396 109.309 49.4905 cv
107.209 46.5887 104.945 43.8206 102.513 41.2054 cv
103.158 41.2488 103.801 41.2855 104.437 41.2972 cv
cp
98.015 36.7147 mo
99.06 37.0931 100.092 37.5164 101.116 37.9651 cv
100.449 37.8655 99.7738 37.785 99.0971 37.7122 cv
98.7445 37.3719 98.3734 37.0496 98.015 36.7147 cv
cp
70.4867 29.8216 mo
72.1674 29.4788 73.8607 29.1946 75.5736 29.0145 cv
77.8129 28.7781 80.0482 28.7308 82.266 28.8392 cv
82.8666 29.1141 83.473 29.3982 84.0902 29.6946 cv
84.7904 30.157 85.4867 30.6243 86.2016 31.0711 cv
81.0502 30.2542 75.7875 29.9314 70.4867 29.8216 cv
cp
60.723 29.5682 mo
63.8773 27.7625 67.2191 26.2757 70.7416 25.1141 cv
70.9555 25.0438 71.058 24.8807 71.0854 24.7064 cv
71.2064 24.7122 71.3285 24.7137 71.4486 24.72 cv
73.0473 25.2259 74.6332 25.7835 76.2113 26.3729 cv
74.9672 26.492 73.7191 26.6551 72.4682 26.8729 cv
69.1225 27.4564 64.8002 28.2317 60.723 29.5682 cv
cp
65.1127 20.741 mo
65.6527 20.7 66.1918 20.6458 66.7328 20.6121 cv
68.3148 20.5145 69.8988 20.4466 71.4809 20.3709 cv
73.2318 20.3084 li
72.5521 20.5315 72.4027 21.3968 73.0316 21.8558 cv
73.2572 22.0208 73.4809 22.1844 73.7055 22.3489 cv
73.1967 22.3289 72.6889 22.3162 72.1811 22.3035 cv
69.8471 21.6526 67.4926 21.1229 65.1127 20.741 cv
cp
55.7435 19.6585 mo
54.7455 19.7645 53.6986 19.868 52.6342 19.9783 cv
56.393 18.1912 60.6674 17.0525 64.3998 16.1087 cv
64.6215 16.0525 64.7289 15.8953 64.7582 15.721 cv
65.1791 15.6648 65.599 15.6014 66.0219 15.5535 cv
66.1615 15.5379 66.3012 15.5296 66.4418 15.5149 cv
66.4018 15.6321 66.3705 15.7508 66.352 15.8704 cv
65.3959 16.4285 64.4828 17.077 63.6166 17.8191 cv
60.9555 18.2918 58.31 18.8758 55.7435 19.6585 cv
cp
61.1957 22.4339 mo
58.4506 22.5379 55.7094 22.7234 52.9721 22.9647 cv
52.0375 23.0472 51.0893 23.1834 50.1439 23.2928 cv
51.8402 22.825 53.5219 22.3299 55.1889 21.8172 cv
57.4486 21.8563 59.6723 22.0672 61.8676 22.4105 cv
61.6439 22.4188 61.4184 22.4256 61.1957 22.4339 cv
cp
48.4672 22.6346 mo
48.1293 22.8167 48.141 23.2049 48.3334 23.4481 cv
46.766 23.532 46.3764 24.1517 47.7406 23.0076 cv
47.9926 22.7962 48.2758 22.6126 48.5414 22.4134 cv
48.7133 22.389 48.8842 22.3621 49.056 22.3387 cv
48.8607 22.4393 48.6605 22.5301 48.4672 22.6346 cv
cp
59.3842 16.6834 mo
56.7543 17.6775 54.2035 18.8206 51.6977 20.0774 cv
50.434 20.2151 49.1469 20.3704 47.8656 20.5706 cv
51.5541 18.8816 55.4096 17.5862 59.3842 16.6834 cv
cp
68.5893 18.1233 mo
68.8246 18.2278 69.06 18.3382 69.2953 18.4437 cv
68.4447 18.4544 67.5932 18.4788 66.7416 18.5228 cv
67.3549 18.3826 67.9701 18.2464 68.5893 18.1233 cv
cp
76.7064 15.4197 mo
77.8725 15.4764 79.0385 15.5355 80.2025 15.5989 cv
80.2445 15.6263 li
78.9154 15.7483 77.5883 15.8904 76.2641 16.0486 cv
76.1244 16.0169 75.9848 15.9817 75.8451 15.9485 cv
76.2289 15.8831 76.5141 15.6854 76.7064 15.4197 cv
cp
82.2963 16.9495 mo
82.517 17.0906 82.7357 17.2332 82.9555 17.3743 cv
82.184 17.243 81.4096 17.1219 80.641 16.9744 cv
81.1889 16.9617 81.7406 16.9534 82.2963 16.9495 cv
cp
87.765 17.0818 mo
87.9926 17.24 li
88.2484 17.4256 88.5297 17.3392 88.7201 17.1487 cv
89.5062 17.2059 90.2895 17.2747 91.0648 17.3606 cv
92.0209 17.7523 92.9672 18.1609 93.9076 18.576 cv
91.8656 18.6795 89.7504 18.4441 87.7055 18.1419 cv
87.1176 17.7596 86.5287 17.3797 85.9408 16.9974 cv
86.5492 17.0184 87.1576 17.0457 87.765 17.0818 cv
cp
95.5834 14.1224 mo
95.4936 14.2757 li
94.7221 13.9505 93.9525 13.6209 93.1781 13.2986 cv
93.9887 13.5389 94.7885 13.8216 95.5834 14.1224 cv
cp
99.2982 15.7659 mo
99.6176 15.9275 99.9389 16.0828 100.253 16.2527 cv
99.725 16.2483 99.1957 16.2342 98.6674 16.2059 cv
98.6967 16.0208 98.6654 15.8382 98.5678 15.6898 cv
98.8119 15.7166 99.0551 15.7386 99.2982 15.7659 cv
cp
102.441 19.1629 mo
102.775 18.7728 102.909 18.2718 102.871 17.7957 cv
104.505 18.8465 106.061 20.0042 107.501 21.2571 cv
107.389 21.3563 li
105.742 20.6199 104.089 19.8934 102.438 19.1653 cv
102.441 19.1629 li
cp
94.2943 22.4163 mo
96.1781 22.3729 98.0199 22.0814 99.6508 21.2962 cv
101.952 22.5223 104.123 23.9065 106.129 25.5149 cv
104.926 25.6136 103.967 27.0101 105.034 28.1126 cv
105.677 28.9476 106.306 29.7811 106.932 30.6141 cv
102.715 27.887 98.5072 25.1482 94.2943 22.4163 cv
cp
85.6127 26.4583 mo
84.8422 26.3675 84.0697 26.2918 83.2943 26.243 cv
82.9789 26.1126 82.6664 25.9778 82.35 25.8489 cv
83.3441 25.993 84.3393 26.1439 85.3324 26.303 cv
85.4262 26.3543 85.5189 26.407 85.6127 26.4583 cv
cp
93.8988 26.1512 mo
93.7699 26.0721 li
93.5814 25.9974 93.39 25.9334 93.2006 25.8611 cv
90.3793 24.6492 87.3471 23.2732 84.2787 22.1785 cv
83.7191 21.8675 83.1586 21.5574 82.5961 21.2508 cv
84.6029 21.5726 86.6186 21.846 88.643 22.0628 cv
89.2553 22.1287 89.8842 22.1951 90.5219 22.2532 cv
93.9945 24.4939 97.473 26.7269 100.943 28.9734 cv
99.2895 28.3167 97.6371 27.6683 95.9945 27.0208 cv
95.3178 26.7537 94.6078 26.452 93.8988 26.1512 cv
cp
109.465 35.5731 mo
109.746 36.3221 110.004 37.0789 110.259 37.8328 cv
108.254 36.0853 106.114 34.5062 103.868 33.0911 cv
105.734 33.9173 107.599 34.7469 109.465 35.5731 cv
cp
113.355 46.9236 mo
114.065 49.0252 114.77 51.1287 115.479 53.2303 cv
113.399 49.6893 111.246 46.1927 109.049 42.7234 cv
110.532 44.0711 111.964 45.4739 113.355 46.9236 cv
cp
132.268 57.2913 mo
132.096 56.5589 131.416 56.3211 130.822 56.4744 cv
130.78 56.325 li
131.239 51.8299 130.904 46.8167 129.435 42.3021 cv
129.514 42.2176 129.576 42.1121 129.601 41.9749 cv
130.148 39.012 128.398 36.0784 126.941 33.598 cv
125.985 31.9705 124.903 30.428 123.734 28.9539 cv
122.91 27.5989 121.965 26.3099 120.961 25.0394 cv
119.727 23.4783 118.412 21.9705 117.26 20.346 cv
116.34 19.0491 115.944 17.969 114.366 17.5618 cv
113.834 17.4246 113.279 17.7347 113.126 18.2659 cv
112.393 20.8221 115.391 23.4324 116.944 25.1907 cv
117.213 25.4959 117.484 25.7991 117.754 26.1023 cv
117.608 26.6019 117.696 27.1678 118.167 27.6526 cv
119.939 29.4749 121.538 31.4251 122.941 33.5296 cv
123.001 33.678 123.072 33.8196 123.128 33.9715 cv
122.956 34.1033 122.827 34.285 122.721 34.4832 cv
122.324 33.8172 121.904 33.1639 121.463 32.5213 cv
121.09 31.743 120.704 30.9666 120.305 30.1922 cv
120.156 29.9031 119.848 29.909 119.634 30.0545 cv
116.766 26.4847 113.326 23.389 109.796 21.0374 cv
109.333 20.7288 108.838 20.6771 108.381 20.7903 cv
108.355 20.7542 li
106.478 19.0374 104.536 17.4773 102.465 16.1141 cv
102.738 16.1439 103.012 16.1775 103.285 16.2049 cv
104.519 16.3304 105.191 14.5423 104.301 13.7503 cv
100.461 10.3318 94.9682 10.2488 90.0658 9.71075 cv
87.5355 9.43291 84.9896 9.18633 82.4389 9.00469 cv
81.2641 8.55352 80.0863 8.10918 78.9066 7.6751 cv
78.1537 7.39776 77.5932 8.09112 77.5971 8.75567 cv
76.5912 8.72491 75.5844 8.71172 74.5785 8.7127 cv
73.3969 8.38165 72.2279 8.13165 71.0932 7.98614 cv
67.0365 7.46661 62.7211 8.26983 58.6889 8.74102 cv
56.8119 8.96026 54.7396 9.3543 52.6391 9.69366 cv
54.8978 8.94561 57.1713 8.22393 59.5268 7.78057 cv
65.352 6.68292 71.3695 6.51348 77.2836 6.49395 cv
83.0531 6.47442 88.226 7.11944 93.6928 8.9754 cv
99.265 10.8675 106.217 12.2952 110.637 16.3553 cv
111.213 16.8846 112.052 16.056 111.498 15.4935 cv
107.841 11.7732 102.644 9.82793 97.8441 8.00665 cv
91.8314 5.7254 86.3158 4.21709 79.8705 4.1419 cv
74.0072 4.07305 68.1205 4.25372 62.2992 4.99102 cv
56.3432 5.74542 48.975 6.58428 44.057 10.3074 cv
43.2846 10.8924 43.6801 12.3787 44.7768 12.0159 cv
45.4828 11.868 46.181 11.6922 46.8773 11.5037 cv
50.3666 10.8567 54.3607 11.0706 57.7445 10.8118 cv
58.1283 10.7825 58.5141 10.74 58.8978 10.7049 cv
53.4242 12.2923 48.3617 14.9002 43.6371 18.803 cv
43.3373 19.0506 43.6586 19.5853 44.0189 19.4578 cv
50.7299 17.0872 li
51.5678 16.7913 51.0883 15.595 50.2514 15.952 cv
49.1625 16.4168 48.0766 16.8904 46.9838 17.347 cv
43.4125 18.8392 46.3646 17.5237 47.1312 17.0916 cv
49.5346 15.7381 51.8373 14.5667 54.5121 13.743 cv
59.348 12.2537 64.4447 11.6585 69.4916 11.5335 cv
71.2523 11.49 73.0141 11.5169 74.7748 11.5735 cv
74.5463 11.8631 74.6547 12.3626 75.0609 12.491 cv
70.8305 12.3558 66.5736 12.7601 62.4252 13.5823 cv
54.3178 15.1898 46.684 18.4603 39.7367 22.8714 cv
38.518 23.4676 37.4076 24.1912 36.4574 25.0818 cv
35.6801 25.8099 36.7279 27.2425 37.6195 26.5882 cv
38.5228 25.9246 39.4457 25.2947 40.3812 24.6878 cv
42.2426 23.7376 44.4555 23.1233 46.765 22.6995 cv
46.0043 23.1238 45.2445 23.555 44.4848 23.993 cv
43.9887 24.2796 44.2006 25.0838 44.7787 25.077 cv
52.683 24.9822 60.5902 24.4564 68.4965 24.6092 cv
68.6801 24.6131 68.8627 24.6248 69.0463 24.6297 cv
65.2494 25.9939 61.7025 27.7356 58.3676 29.8411 cv
58.2357 29.8548 58.1039 29.8621 57.9701 29.8812 cv
57.3441 29.97 56.9643 30.3641 56.7973 30.8572 cv
56.431 31.1058 56.0727 31.3675 55.7113 31.6248 cv
53.4232 32.8148 51.4477 34.2962 50.0766 36.157 cv
50.0609 36.1707 li
50.0629 36.1731 li
49.974 36.282 li
49.601 36.804 50.4027 37.3699 50.8393 36.9495 cv
51.4769 36.3362 52.1322 35.7498 52.7943 35.1761 cv
54.1713 34.2264 55.7758 33.5823 57.4408 33.076 cv
57.7103 33.2781 58.0443 33.3978 58.4428 33.3748 cv
59.7875 33.2981 61.14 33.2264 62.4975 33.1614 cv
73.2123 33.1888 83.5863 37.5887 94.4174 37.0242 cv
94.5512 37.1453 94.6859 37.2654 94.8187 37.388 cv
92.5121 37.2708 90.2514 37.222 88.1791 37.1268 cv
80.1937 36.7596 72.2055 36.8958 64.225 37.3201 cv
63.3109 37.3685 63.3031 38.7918 64.225 38.7498 cv
71.5785 38.4144 78.9252 38.5203 86.265 39.0936 cv
90.1 39.3934 94.2016 40.2068 98.2689 40.7591 cv
103.029 45.6556 107.212 51.0965 110.712 57.0135 cv
113.532 61.7806 115.91 66.805 117.736 72.0359 cv
119.376 76.7332 120.351 81.6233 122.31 86.2024 cv
122.59 86.8567 123.416 86.616 123.684 86.1023 cv
124.171 86.2166 124.766 85.9734 124.874 85.4441 cv
125.05 84.5877 125.157 83.6976 125.207 82.7825 cv
125.227 82.9339 li
124.896 90.9002 123.898 98.785 121.871 106.598 cv
121.733 107.134 122.351 107.684 122.853 107.352 cv
125.919 105.32 127.205 101.852 127.864 98.3226 cv
127.941 98.0872 li
128.823 91.2361 130.983 84.6746 132.051 77.8777 cv
132.22 76.8079 131.494 75.9061 130.605 75.7913 cv
130.648 75.5623 130.681 75.326 130.721 75.095 cv
131.495 75.4593 132.571 75.2781 132.814 74.2283 cv
134.113 68.6307 133.57 62.8411 132.268 57.2913 cv
cp
.45098 .498039 .356863 rgb
f
gsave
72.9379 113.031 mo
72.1962 112.791 71.5426 112.514 70.9945 112.207 cv
70.4294 111.891 69.9292 111.541 69.4874 111.162 cv
69.6811 111.231 69.8766 111.298 70.0722 111.362 cv
70.9997 111.976 71.9568 112.533 72.9379 113.031 cv
clp
69.4874 111.162 mo
72.9379 111.162 li
72.9379 113.031 li
69.4874 113.031 li
cp
.72549 .819608 .623529 rgb
f
grestore
70.0722 111.362 mo
69.8766 111.298 69.6811 111.231 69.4874 111.162 cv
69.2049 110.921 68.9462 110.667 68.7097 110.402 cv
69.1563 110.736 69.6109 111.056 70.0722 111.362 cv
.596078 .686274 .498039 rgb
f
103.157 105.131 mo
103.285 105.007 103.405 104.885 103.515 104.767 cv
103.623 104.652 103.729 104.535 103.832 104.417 cv
104.705 103.731 105.58 102.979 106.398 102.167 cv
106.397 102.241 106.396 102.314 106.396 102.387 cv
105.574 103.239 104.692 104.094 103.752 104.95 cv
103.549 105.002 103.351 105.063 103.157 105.131 cv
110.283 97.76 mo
110.348 97.0683 110.366 96.3818 110.346 95.7274 cv
110.578 94.6424 110.598 93.5083 110.338 92.3309 cv
109.091 86.6683 107.323 81.8269 101.771 79.6419 cv
101.043 79.3558 100.301 79.1302 99.5541 78.9329 cv
99.8891 78.4456 99.81 77.6033 99.0785 77.326 cv
99.0501 77.3152 99.0217 77.3045 98.9933 77.2939 cv
99.8529 77.2392 100.689 77.2117 101.498 77.2117 cv
104.093 77.2117 106.404 77.4949 108.283 78.0716 cv
110.377 78.7146 111.917 79.6849 112.816 80.9949 cv
113.809 82.4417 113.619 84.365 113.383 86.2591 cv
113.328 86.4637 li
114.456 89.6481 113.256 93.5668 110.283 97.76 cv
.831372 .968627 .686274 rgb
f
90.4892 112.621 mo
90.2406 112.128 89.7697 111.778 89.074 111.778 cv
88.9848 111.778 88.8919 111.784 88.7953 111.796 cv
87.7563 111.924 86.7244 111.992 85.7034 111.999 cv
88.1771 111.459 90.5895 110.625 92.8537 109.515 cv
93.222 109.402 93.5876 109.286 93.9496 109.168 cv
94.5456 108.975 95.1059 108.761 95.6322 108.529 cv
95.5965 108.598 95.6297 108.705 95.7318 108.705 cv
95.8732 108.705 95.8825 108.498 95.7574 108.473 cv
96.6991 108.048 97.5306 107.565 98.2632 107.033 cv
98.4385 107.148 98.6515 107.225 98.892 107.248 cv
98.973 107.256 99.0549 107.26 99.137 107.26 cv
100.551 107.26 102.12 106.135 103.157 105.131 cv
103.351 105.063 103.549 105.002 103.752 104.95 cv
103.031 105.608 102.275 106.267 101.489 106.924 cv
98.2018 109.67 94.3577 111.503 90.4892 112.621 cv
103.832 104.417 mo
104.38 103.79 104.857 103.125 105.279 102.425 cv
105.547 102.248 105.812 102.062 106.076 101.869 cv
106.233 101.753 106.35 101.619 106.433 101.474 cv
106.415 101.705 106.402 101.937 106.398 102.167 cv
105.58 102.979 104.705 103.731 103.832 104.417 cv
106.54 100.514 mo
106.509 100.404 106.464 100.299 106.407 100.202 cv
106.427 100.156 106.447 100.11 106.466 100.064 cv
106.698 99.5113 106.497 98.8982 106.113 98.4461 cv
106.462 97.9352 106.776 97.407 107.049 96.8621 cv
106.965 98.0822 106.705 99.3017 106.54 100.514 cv
110.346 95.7274 mo
110.33 95.1911 110.289 94.6766 110.227 94.199 cv
109.916 91.8097 108.986 89.5941 107.554 87.727 cv
106.879 85.2008 105.443 82.9678 103.473 81.0174 cv
103.403 80.9485 103.285 80.9183 103.137 80.9183 cv
102.843 80.9183 102.434 81.0391 102.078 81.2108 cv
101.654 80.5334 100.79 80.095 99.6448 79.8377 cv
97.5863 78.6442 95.3125 78.0488 92.9313 77.9055 cv
94.7153 77.6209 96.4306 77.4266 98.0287 77.3128 cv
98.0918 77.3082 98.1521 77.3061 98.2098 77.3061 cv
98.3183 77.3061 98.4177 77.3137 98.5082 77.3274 cv
98.6708 77.3153 98.8323 77.3041 98.9933 77.2939 cv
99.0217 77.3045 99.0501 77.3152 99.0785 77.326 cv
99.81 77.6033 99.8891 78.4456 99.5541 78.9329 cv
100.301 79.1302 101.043 79.3558 101.771 79.6419 cv
107.323 81.8269 109.091 86.6683 110.338 92.3309 cv
110.598 93.5083 110.578 94.6424 110.346 95.7274 cv
.72549 .819608 .623529 rgb
f
82.773 80.4258 mo
86.1974 79.244 89.6792 78.4244 92.9313 77.9055 cv
95.3125 78.0488 97.5863 78.6442 99.6448 79.8377 cv
98.734 79.633 97.6446 79.543 96.4571 79.5382 cv
96.5617 78.982 96.2016 78.3291 95.5811 78.3291 cv
95.4855 78.3291 95.3839 78.3446 95.2767 78.3782 cv
91.3692 79.607 86.896 79.6279 82.773 80.4258 cv
.596078 .686274 .498039 rgb
f
106.396 102.387 mo
106.396 102.314 106.397 102.241 106.398 102.167 cv
106.402 101.937 106.415 101.705 106.433 101.474 cv
106.606 101.171 106.627 100.824 106.54 100.514 cv
106.705 99.3017 106.965 98.0822 107.049 96.8621 cv
107.95 95.0638 108.403 93.0813 108.209 90.9223 cv
108.31 90.7741 108.334 90.6329 108.237 90.5228 cv
108.209 90.4916 108.181 90.4604 108.154 90.4291 cv
108.071 89.8123 107.935 89.1814 107.743 88.5368 cv
107.689 88.2638 107.626 87.9935 107.554 87.727 cv
108.986 89.5941 109.916 91.8097 110.227 94.199 cv
110.289 94.6766 110.33 95.1911 110.346 95.7274 cv
110.366 96.3818 110.348 97.0683 110.283 97.76 cv
109.21 99.2735 107.905 100.824 106.396 102.387 cv
f
95.7318 108.705 mo
95.6297 108.705 95.5965 108.598 95.6322 108.529 cv
95.6742 108.51 95.7158 108.492 95.7574 108.473 cv
95.8825 108.498 95.8732 108.705 95.7318 108.705 cv
f
85.5248 111.999 mo
84.0094 111.999 82.5178 111.866 81.0607 111.599 cv
81.1445 111.597 81.229 111.595 81.3139 111.592 cv
81.4293 111.595 81.5464 111.596 81.6645 111.596 cv
84.8492 111.596 88.9927 110.7 92.8537 109.515 cv
90.5895 110.625 88.1771 111.459 85.7034 111.999 cv
85.6438 111.999 85.5844 111.999 85.5248 111.999 cv
99.137 107.26 mo
99.0549 107.26 98.973 107.256 98.892 107.248 cv
98.6515 107.225 98.4385 107.148 98.2632 107.033 cv
98.9229 106.554 99.5024 106.035 100.01 105.485 cv
100.233 105.243 100.447 105 100.654 104.757 cv
102.248 104.151 103.795 103.408 105.279 102.425 cv
104.857 103.125 104.38 103.79 103.832 104.417 cv
103.729 104.535 103.623 104.652 103.515 104.767 cv
103.405 104.885 103.285 105.007 103.157 105.131 cv
102.12 106.135 100.551 107.26 99.137 107.26 cv
106.407 100.202 mo
106.218 99.8788 105.897 99.6485 105.515 99.6485 cv
105.395 99.6485 105.269 99.671 105.14 99.7204 cv
105.488 99.308 105.813 98.8837 106.113 98.4461 cv
106.497 98.8982 106.698 99.5113 106.466 100.064 cv
106.447 100.11 106.427 100.156 106.407 100.202 cv
f
70.2065 87.7124 mo
71.1449 86.7004 72.3122 85.7014 73.7353 84.7387 cv
73.1149 85.259 72.5184 85.8115 71.9498 86.3927 cv
71.3445 86.8045 70.7614 87.2454 70.2065 87.7124 cv
78.8803 83.7347 mo
78.8057 83.6962 78.7277 83.663 78.6466 83.6358 cv
79.2721 83.3578 79.925 83.127 80.6068 82.9515 cv
80.6471 82.9411 80.6871 82.9309 80.7274 82.9207 cv
80.4377 83.0639 80.1518 83.2109 79.8702 83.3613 cv
79.5315 83.4862 79.2014 83.6108 78.8803 83.7347 cv
f
71.9498 86.3927 mo
72.5184 85.8115 73.1149 85.259 73.7353 84.7387 cv
75.1549 83.7782 76.8289 82.854 78.7836 81.9891 cv
80.093 81.4096 81.4284 80.8898 82.773 80.4258 cv
86.896 79.6279 91.3692 79.607 95.2767 78.3782 cv
95.3839 78.3446 95.4855 78.3291 95.5811 78.3291 cv
96.2016 78.3291 96.5617 78.982 96.4571 79.5382 cv
96.4242 79.5381 96.3915 79.538 96.3585 79.538 cv
94.8166 79.538 93.1145 79.6793 91.4232 79.8987 cv
88.6664 80.2562 85.8334 80.7591 82.8002 81.9891 cv
82.094 82.2755 81.4006 82.5879 80.7274 82.9207 cv
80.6871 82.9309 80.6471 82.9411 80.6068 82.9515 cv
79.925 83.127 79.2721 83.3578 78.6466 83.6358 cv
78.4831 83.5809 78.3065 83.5504 78.1175 83.5504 cv
77.9182 83.5504 77.7051 83.5843 77.4789 83.6595 cv
75.5275 84.3085 73.649 85.237 71.9498 86.3927 cv
.439216 .513725 .352941 rgb
f
100.654 104.757 mo
100.871 104.502 101.081 104.247 101.285 103.992 cv
101.402 103.873 101.518 103.755 101.631 103.637 cv
102.391 102.85 103.065 102.065 103.647 101.29 cv
104.179 100.789 104.679 100.266 105.14 99.7204 cv
105.269 99.671 105.395 99.6485 105.515 99.6485 cv
105.897 99.6485 106.218 99.8788 106.407 100.202 cv
106.464 100.299 106.509 100.404 106.54 100.514 cv
106.627 100.824 106.606 101.171 106.433 101.474 cv
106.35 101.619 106.233 101.753 106.076 101.869 cv
105.812 102.062 105.547 102.248 105.279 102.425 cv
103.795 103.408 102.248 104.151 100.654 104.757 cv
f
73.4745 106.877 mo
73.409 106.857 73.344 106.837 73.2787 106.817 cv
68.8139 105.403 67.4935 100.105 68.7484 95.9148 cv
69.0483 94.9138 69.5175 93.9989 70.1118 93.1666 cv
69.7012 94.593 69.521 96.0679 69.5111 97.1488 cv
69.4896 99.388 70.3607 102.521 72.2885 104.082 cv
72.569 105.023 72.9708 105.981 73.4745 106.877 cv
.160784 .2 .14902 rgb
f
80.4489 114.048 mo
77.5244 114.048 74.9161 113.67 72.9379 113.031 cv
71.9568 112.533 70.9997 111.976 70.0722 111.362 cv
69.6109 111.056 69.1563 110.736 68.7097 110.402 cv
66.7867 108.254 66.3259 105.405 66.3949 102.464 cv
66.4037 102.099 66.7777 101.681 67.3285 101.293 cv
66.7279 98.427 66.3373 95.3001 67.5785 91.866 cv
68.073 90.4972 68.9267 89.0927 70.2065 87.7124 cv
70.7614 87.2454 71.3445 86.8045 71.9498 86.3927 cv
73.649 85.237 75.5275 84.3085 77.4789 83.6595 cv
77.7051 83.5843 77.9182 83.5504 78.1175 83.5504 cv
78.3065 83.5504 78.4831 83.5809 78.6466 83.6358 cv
78.7277 83.663 78.8057 83.6962 78.8803 83.7347 cv
79.2014 83.6108 79.5315 83.4862 79.8702 83.3613 cv
78.2686 84.2165 76.8081 85.1803 75.6 86.1727 cv
74.4688 87.1021 73.6212 87.9859 72.9917 88.8322 cv
71.5594 89.5579 70.643 91.3217 70.1118 93.1666 cv
69.5175 93.9989 69.0483 94.9138 68.7484 95.9148 cv
67.4935 100.105 68.8139 105.403 73.2787 106.817 cv
73.344 106.837 73.409 106.857 73.4745 106.877 cv
74.183 108.137 75.0935 109.275 76.1525 110.074 cv
76.4778 110.624 76.9769 111.086 78.0856 111.118 cv
78.1545 111.221 78.2214 111.325 78.2934 111.427 cv
78.3691 111.532 78.5199 111.577 78.7068 111.577 cv
78.8237 111.577 78.9547 111.56 79.0902 111.529 cv
79.5802 111.579 80.1027 111.604 80.6512 111.604 cv
80.7862 111.604 80.9226 111.602 81.0607 111.599 cv
82.5178 111.866 84.0094 111.999 85.5248 111.999 cv
85.5844 111.999 85.6438 111.999 85.7034 111.999 cv
86.7244 111.992 87.7563 111.924 88.7953 111.796 cv
88.8919 111.784 88.9848 111.778 89.074 111.778 cv
89.7697 111.778 90.2406 112.128 90.4892 112.621 cv
87.0357 113.62 83.5633 114.048 80.4489 114.048 cv
103.647 101.29 mo
104.387 100.304 104.978 99.335 105.407 98.4007 cv
105.58 98.0218 105.715 97.656 105.83 97.2967 cv
107.028 95.1468 107.792 93.1023 107.936 91.2054 cv
108.05 91.1123 108.145 91.0159 108.209 90.9223 cv
108.403 93.0813 107.95 95.0638 107.049 96.8621 cv
106.776 97.407 106.462 97.9352 106.113 98.4461 cv
105.813 98.8837 105.488 99.308 105.14 99.7204 cv
104.679 100.266 104.179 100.789 103.647 101.29 cv
105.621 92.115 mo
105.428 91.6438 105.194 91.1878 104.935 90.741 cv
105.037 90.7068 105.137 90.6649 105.236 90.6199 cv
105.375 90.783 105.522 90.9427 105.666 91.1033 cv
105.67 91.4363 105.655 91.7733 105.621 92.115 cv
108.154 90.4291 mo
108.086 90.3527 108.018 90.2761 107.951 90.1995 cv
107.946 90.0911 107.944 89.9817 107.934 89.8743 cv
107.893 89.4199 107.829 88.9743 107.743 88.5368 cv
107.935 89.1814 108.071 89.8123 108.154 90.4291 cv
.156863 .145098 .121569 rgb
f
92.8537 109.515 mo
94.6062 108.655 96.2685 107.63 97.8012 106.445 cv
97.8836 106.683 98.0441 106.888 98.2632 107.033 cv
97.5306 107.565 96.6991 108.048 95.7574 108.473 cv
95.7494 108.471 95.7409 108.471 95.7318 108.471 cv
95.6826 108.471 95.6494 108.495 95.6322 108.529 cv
95.1059 108.761 94.5456 108.975 93.9496 109.168 cv
93.5876 109.286 93.222 109.402 92.8537 109.515 cv
.678431 .823529 .596078 rgb
f
95.6322 108.529 mo
95.6494 108.495 95.6826 108.471 95.7318 108.471 cv
95.7409 108.471 95.7494 108.471 95.7574 108.473 cv
95.7158 108.492 95.6742 108.51 95.6322 108.529 cv
.560784 .701961 .482353 rgb
f
81.6645 111.596 mo
81.5464 111.596 81.4293 111.595 81.3139 111.592 cv
86.0917 111.426 92.5113 109.506 96.5547 106.058 cv
97.9465 105.679 99.3166 105.266 100.654 104.757 cv
100.447 105 100.233 105.243 100.01 105.485 cv
99.5024 106.035 98.9229 106.554 98.2632 107.033 cv
98.0441 106.888 97.8836 106.683 97.8012 106.445 cv
96.2685 107.63 94.6062 108.655 92.8537 109.515 cv
88.9927 110.7 84.8492 111.596 81.6645 111.596 cv
f
96.5547 106.058 mo
96.5559 106.057 96.557 106.056 96.5582 106.055 cv
99.082 104.812 101.599 103.218 103.647 101.29 cv
103.065 102.065 102.391 102.85 101.631 103.637 cv
101.518 103.755 101.402 103.873 101.285 103.992 cv
101.081 104.247 100.871 104.502 100.654 104.757 cv
99.3166 105.266 97.9465 105.679 96.5547 106.058 cv
.415686 .541176 .345098 rgb
f
102.641 96.6011 mo
102.571 96.3783 102.455 96.1709 102.306 95.993 cv
102.357 95.8856 102.415 95.7855 102.463 95.6761 cv
102.836 95.4709 103.184 95.2235 103.493 94.9381 cv
103.267 95.5082 102.983 96.0657 102.641 96.6011 cv
103.069 88.0312 mo
102.736 87.59 102.386 87.1709 102.048 86.7823 cv
102.448 87.1673 102.787 87.5865 103.069 88.0312 cv
.219608 .313725 .215686 rgb
f
100.741 98.8703 mo
101.107 97.0412 101.015 95.3399 100.813 93.6976 cv
100.365 90.0537 98.8921 86.7603 95.9799 84.1778 cv
97.4829 84.3814 98.941 84.8139 100.32 85.5438 cv
100.987 85.8973 101.562 86.3147 102.048 86.7823 cv
102.386 87.1709 102.736 87.59 103.069 88.0312 cv
104.343 90.0464 104.419 92.5942 103.493 94.9381 cv
103.184 95.2235 102.836 95.4709 102.463 95.6761 cv
102.415 95.7855 102.357 95.8856 102.306 95.993 cv
102.455 96.1709 102.571 96.3783 102.641 96.6011 cv
102.607 96.6544 102.573 96.7077 102.537 96.7605 cv
102.016 97.5456 101.41 98.2432 100.741 98.8703 cv
.160784 .254902 .160784 rgb
f
108.209 90.9223 mo
108.194 90.7591 108.176 90.5942 108.154 90.4291 cv
108.181 90.4604 108.209 90.4916 108.237 90.5228 cv
108.334 90.6329 108.31 90.7741 108.209 90.9223 cv
.560784 .701961 .482353 rgb
f
107.554 87.727 mo
107.503 87.6596 107.45 87.5926 107.397 87.5261 cv
107.39 87.5081 107.383 87.49 107.376 87.472 cv
106.245 84.559 104.347 82.6855 102.006 81.5672 cv
101.258 80.8886 100.469 80.3153 99.6448 79.8377 cv
100.79 80.095 101.654 80.5334 102.078 81.2108 cv
102.434 81.0391 102.843 80.9183 103.137 80.9183 cv
103.285 80.9183 103.403 80.9485 103.473 81.0174 cv
105.443 82.9678 106.879 85.2008 107.554 87.727 cv
.678431 .823529 .596078 rgb
f
102.006 81.5672 mo
100.201 80.7047 98.1318 80.2915 95.9473 80.1967 cv
96.244 80.0586 96.406 79.8099 96.4571 79.5382 cv
97.6446 79.543 98.734 79.633 99.6448 79.8377 cv
100.469 80.3153 101.258 80.8886 102.006 81.5672 cv
.560784 .701961 .482353 rgb
f
107.743 88.5368 mo
107.643 88.2033 107.528 87.8669 107.397 87.5261 cv
107.45 87.5926 107.503 87.6596 107.554 87.727 cv
107.626 87.9935 107.689 88.2638 107.743 88.5368 cv
f
79.8702 83.3613 mo
80.1518 83.2109 80.4377 83.0639 80.7274 82.9207 cv
81.1182 82.8219 81.5107 82.7312 81.9041 82.6472 cv
81.1997 82.882 80.5197 83.1218 79.8702 83.3613 cv
f
80.7274 82.9207 mo
81.4006 82.5879 82.094 82.2755 82.8002 81.9891 cv
85.8334 80.7591 88.6664 80.2562 91.4232 79.8987 cv
93.1145 79.6793 94.8166 79.538 96.3585 79.538 cv
96.3915 79.538 96.4242 79.5381 96.4571 79.5382 cv
96.406 79.8099 96.244 80.0586 95.9473 80.1967 cv
95.6121 80.1822 95.2746 80.1752 94.9344 80.1752 cv
90.5757 80.1752 85.8571 81.33 81.9041 82.6472 cv
81.5107 82.7312 81.1182 82.8219 80.7274 82.9207 cv
.415686 .541176 .345098 rgb
f
78.0856 111.118 mo
76.9769 111.086 76.4778 110.624 76.1525 110.074 cv
76.6418 110.443 77.1628 110.739 77.7104 110.942 cv
77.8109 110.979 77.9252 111.008 78.0336 111.041 cv
78.0511 111.067 78.0684 111.092 78.0856 111.118 cv
96.5582 106.055 mo
96.7888 105.858 97.0116 105.656 97.226 105.45 cv
99.2777 103.471 100.065 101.444 100.54 99.7171 cv
100.619 99.4316 100.685 99.1495 100.741 98.8703 cv
101.41 98.2432 102.016 97.5456 102.537 96.7605 cv
102.573 96.7077 102.607 96.6544 102.641 96.6011 cv
102.983 96.0657 103.267 95.5082 103.493 94.9381 cv
104.419 92.5942 104.343 90.0464 103.069 88.0312 cv
102.787 87.5865 102.448 87.1673 102.048 86.7823 cv
101.562 86.3147 100.987 85.8973 100.32 85.5438 cv
98.941 84.8139 97.4829 84.3814 95.9799 84.1778 cv
95.9231 84.1275 95.8658 84.0774 95.808 84.0277 cv
94.6606 83.0402 93.5205 82.1537 91.008 82.1537 cv
90.7128 82.1537 90.3983 82.1659 90.0629 82.1917 cv
87.0531 82.4231 83.4848 82.8333 79.974 84.344 cv
77.6059 85.3631 75.726 86.7117 74.3461 88.1209 cv
74.0512 88.2425 73.7826 88.4105 73.6039 88.5965 cv
73.3902 88.6543 73.1861 88.7337 72.9917 88.8322 cv
73.6212 87.9859 74.4688 87.1021 75.6 86.1727 cv
76.8081 85.1803 78.2686 84.2165 79.8702 83.3613 cv
80.5197 83.1218 81.1997 82.882 81.9041 82.6472 cv
85.8571 81.33 90.5757 80.1752 94.9344 80.1752 cv
95.2746 80.1752 95.6121 80.1822 95.9473 80.1967 cv
98.1318 80.2915 100.201 80.7047 102.006 81.5672 cv
104.347 82.6855 106.245 84.559 107.376 87.472 cv
107.383 87.49 107.39 87.5081 107.397 87.5261 cv
107.528 87.8669 107.643 88.2033 107.743 88.5368 cv
107.829 88.9743 107.893 89.4199 107.934 89.8743 cv
107.944 89.9817 107.946 90.0911 107.951 90.1995 cv
108.018 90.2761 108.086 90.3527 108.154 90.4291 cv
108.176 90.5942 108.194 90.7591 108.209 90.9223 cv
108.145 91.0159 108.05 91.1123 107.936 91.2054 cv
107.792 93.1023 107.028 95.1468 105.83 97.2967 cv
105.715 97.656 105.58 98.0218 105.407 98.4007 cv
104.978 99.335 104.387 100.304 103.647 101.29 cv
101.599 103.218 99.082 104.812 96.5582 106.055 cv
105.236 90.6199 mo
105.137 90.6649 105.037 90.7068 104.935 90.741 cv
105.194 91.1878 105.428 91.6438 105.621 92.115 cv
105.655 91.7733 105.67 91.4363 105.666 91.1033 cv
105.522 90.9427 105.375 90.783 105.236 90.6199 cv
.156863 .203922 .133333 rgb
f
81.0607 111.599 mo
81.0261 111.593 80.9918 111.587 80.9572 111.58 cv
81.0747 111.585 81.1934 111.589 81.3139 111.592 cv
81.229 111.595 81.1445 111.597 81.0607 111.599 cv
.560784 .701961 .482353 rgb
f
80.6512 111.604 mo
80.1027 111.604 79.5802 111.579 79.0902 111.529 cv
78.9547 111.56 78.8237 111.577 78.7068 111.577 cv
78.5199 111.577 78.3691 111.532 78.2934 111.427 cv
78.2214 111.325 78.1545 111.221 78.0856 111.118 cv
78.1264 111.119 78.1683 111.12 78.2108 111.12 cv
78.3481 111.12 78.494 111.113 78.6498 111.1 cv
78.6752 111.183 78.7553 111.251 78.9125 111.293 cv
79.5163 111.453 80.2046 111.545 80.9572 111.58 cv
80.9918 111.587 81.0261 111.593 81.0607 111.599 cv
80.9226 111.602 80.7862 111.604 80.6512 111.604 cv
.156863 .203922 .133333 rgb
f
73.5909 104.403 mo
73.342 104.248 73.1073 104.077 72.891 103.893 cv
73.0268 103.632 73.1092 103.342 73.1219 103.053 cv
73.2701 103.506 73.4265 103.956 73.5909 104.403 cv
72.801 102.023 mo
72.7477 101.957 72.6873 101.894 72.6195 101.834 cv
72.3822 101.626 72.1957 101.401 72.0356 101.167 cv
71.9867 100.951 71.8793 100.769 71.7318 100.626 cv
71.6557 100.449 71.5912 100.267 71.5473 100.081 cv
71.5736 99.9544 71.5912 99.8309 71.6303 99.6995 cv
71.7269 99.3733 71.8421 99.0456 71.9728 98.7179 cv
72.2031 99.837 72.4793 100.939 72.801 102.023 cv
.219608 .313725 .215686 rgb
f
74.739 107.186 mo
74.3127 107.104 73.8908 107.001 73.4745 106.877 cv
72.9708 105.981 72.569 105.023 72.2885 104.082 cv
70.3607 102.521 69.4896 99.388 69.5111 97.1488 cv
69.521 96.0679 69.7012 94.593 70.1118 93.1666 cv
70.5571 92.5431 71.0725 91.9661 71.6393 91.4346 cv
71.2347 92.7612 71.266 94.0009 71.4057 95.1932 cv
71.5456 96.386 71.7347 97.5611 71.9728 98.7179 cv
71.8421 99.0456 71.7269 99.3733 71.6303 99.6995 cv
71.5912 99.8309 71.5736 99.9544 71.5473 100.081 cv
71.5912 100.267 71.6557 100.449 71.7318 100.626 cv
71.8793 100.769 71.9867 100.951 72.0356 101.167 cv
72.1957 101.401 72.3822 101.626 72.6195 101.834 cv
72.6873 101.894 72.7477 101.957 72.801 102.023 cv
72.9033 102.368 73.0103 102.712 73.1219 103.053 cv
73.1092 103.342 73.0268 103.632 72.891 103.893 cv
73.1073 104.077 73.342 104.248 73.5909 104.403 cv
73.6258 104.498 73.661 104.593 73.6967 104.687 cv
74.0153 105.532 74.3626 106.365 74.739 107.186 cv
.160784 .254902 .160784 rgb
f
76.1525 110.074 mo
75.0935 109.275 74.183 108.137 73.4745 106.877 cv
73.8908 107.001 74.3127 107.104 74.739 107.186 cv
75.0237 107.807 75.325 108.42 75.643 109.027 cv
75.8153 109.356 75.9504 109.732 76.1525 110.074 cv
70.1118 93.1666 mo
70.643 91.3217 71.5594 89.5579 72.9917 88.8322 cv
72.3167 89.7398 71.8925 90.6044 71.6393 91.4346 cv
71.0725 91.9661 70.5571 92.5431 70.1118 93.1666 cv
.156863 .203922 .133333 rgb
f
81.3139 111.592 mo
81.1934 111.589 81.0747 111.585 80.9572 111.58 cv
80.5854 111.51 80.2154 111.432 79.8483 111.345 cv
80.1613 111.291 80.4736 111.227 80.7868 111.153 cv
81.0399 111.249 81.3193 111.317 81.6283 111.349 cv
81.6908 111.438 81.8109 111.476 81.9627 111.476 cv
82.1429 111.476 82.3678 111.422 82.5941 111.334 cv
82.7045 111.319 li
82.7921 111.394 82.9414 111.434 83.1273 111.434 cv
83.4696 111.434 83.936 111.296 84.3695 110.972 cv
84.4789 110.888 li
84.7191 110.852 85.0072 110.751 85.3187 110.563 cv
85.5892 110.4 85.8441 110.238 86.0912 110.075 cv
86.2097 109.999 86.3286 109.925 86.4472 109.85 cv
89.2563 109.041 91.8504 108.06 93.8773 107.248 cv
94.7549 106.897 95.6526 106.5 96.549 106.059 cv
96.5509 106.059 96.5528 106.058 96.5547 106.058 cv
92.5113 109.506 86.0917 111.426 81.3139 111.592 cv
.533333 .709804 .466667 rgb
f
79.8483 111.345 mo
79.7526 111.322 79.6572 111.299 79.5619 111.275 cv
79.9466 111.233 80.3321 111.183 80.7181 111.126 cv
80.7408 111.135 80.7637 111.144 80.7868 111.153 cv
80.4736 111.227 80.1613 111.291 79.8483 111.345 cv
96.549 106.059 mo
96.5524 106.058 96.5548 106.056 96.5582 106.055 cv
96.557 106.056 96.5559 106.057 96.5547 106.058 cv
96.5528 106.058 96.5509 106.059 96.549 106.059 cv
.4 .564706 .341176 rgb
f
74.1633 104.724 mo
73.9658 104.625 73.7745 104.518 73.5909 104.403 cv
73.4265 103.956 73.2701 103.506 73.1219 103.053 cv
73.138 102.687 73.0422 102.324 72.801 102.023 cv
72.4793 100.939 72.2031 99.837 71.9728 98.7179 cv
72.157 98.256 72.3723 97.7935 72.6103 97.3341 cv
72.6466 97.9994 72.7843 98.6518 72.9769 99.1697 cv
73.1176 99.5452 73.3119 99.8895 73.5268 100.222 cv
73.5655 101.646 73.7569 103.271 74.1633 104.724 cv
.215686 .352941 .219608 rgb
f
75.272 107.278 mo
75.0935 107.25 74.916 107.22 74.739 107.186 cv
74.3626 106.365 74.0153 105.532 73.6967 104.687 cv
73.661 104.593 73.6258 104.498 73.5909 104.403 cv
73.7745 104.518 73.9658 104.625 74.1633 104.724 cv
74.4014 105.575 74.7134 106.367 75.1117 107.025 cv
75.163 107.11 75.2164 107.194 75.272 107.278 cv
73.1219 103.053 mo
73.0103 102.712 72.9033 102.368 72.801 102.023 cv
73.0422 102.324 73.138 102.687 73.1219 103.053 cv
71.9728 98.7179 mo
71.7347 97.5611 71.5456 96.386 71.4057 95.1932 cv
71.266 94.0009 71.2347 92.7612 71.6393 91.4346 cv
72.2155 90.8943 72.8447 90.401 73.5073 89.9535 cv
73.4323 90.1723 73.3654 90.3966 73.3056 90.6245 cv
72.7896 91.1535 72.379 91.7618 72.1146 92.5384 cv
71.9965 92.7195 71.8939 92.9148 71.8344 93.1526 cv
71.601 94.0672 71.8861 95.0979 72.3363 96.0384 cv
72.3246 96.181 72.3266 96.3294 72.3764 96.493 cv
72.4467 96.7254 72.5287 96.9539 72.6039 97.1849 cv
72.6054 97.2346 72.6076 97.2844 72.6103 97.3341 cv
72.3723 97.7935 72.157 98.256 71.9728 98.7179 cv
.160784 .298039 .168627 rgb
f
95.8936 97.1884 mo
95.8023 96.7772 95.6971 96.375 95.5902 95.9817 cv
95.5287 95.4437 95.4682 94.9056 95.4066 94.3675 cv
95.4183 94.3138 li
95.4326 93.8074 95.3898 93.3256 95.2926 92.8662 cv
95.4204 92.9024 95.556 92.9207 95.6926 92.9207 cv
96.1206 92.9207 96.5579 92.7417 96.7924 92.3758 cv
97.0043 92.0452 97.1586 91.7215 97.2865 91.4002 cv
97.3402 91.6365 97.3822 91.8704 97.4105 92.1009 cv
97.0775 93.5628 96.7211 95.0193 96.4701 96.5159 cv
96.4535 96.6145 96.4662 96.6995 96.4604 96.7928 cv
96.3178 96.8953 96.1733 96.9974 96.018 97.1033 cv
95.9768 97.1315 95.9353 97.1598 95.8936 97.1884 cv
94.0864 90.4755 mo
93.9906 90.4083 93.8518 90.3793 93.6908 90.3793 cv
93.6452 90.3793 93.5979 90.3816 93.5492 90.386 cv
93.6989 90.3252 93.8459 90.2528 93.9794 90.1733 cv
94.0151 90.274 94.0507 90.3748 94.0864 90.4755 cv
.215686 .352941 .219608 rgb
f
96.1705 101.91 mo
96.1168 101.644 96.0638 101.378 96.0101 101.113 cv
96.3137 99.7229 96.1658 98.4154 95.8936 97.1884 cv
95.9353 97.1598 95.9768 97.1315 96.018 97.1033 cv
96.1733 96.9974 96.3178 96.8953 96.4604 96.7928 cv
96.4662 96.6995 96.4535 96.6145 96.4701 96.5159 cv
96.7211 95.0193 97.0775 93.5628 97.4105 92.1009 cv
97.3822 91.8704 97.3402 91.6365 97.2865 91.4002 cv
97.1586 91.7215 97.0043 92.0452 96.7924 92.3758 cv
96.5579 92.7417 96.1206 92.9207 95.6926 92.9207 cv
95.556 92.9207 95.4204 92.9024 95.2926 92.8662 cv
95.2633 92.7275 95.229 92.591 95.1898 92.4563 cv
95.1595 92.1941 li
95.0482 92.0418 li
94.8402 91.5032 94.5453 90.9984 94.1488 90.532 cv
94.1308 90.5108 94.1099 90.492 94.0864 90.4755 cv
94.0507 90.3748 94.0151 90.274 93.9794 90.1733 cv
94.3476 89.954 94.6144 89.6805 94.5599 89.4451 cv
94.4496 88.9656 94.3129 88.4632 94.1254 87.97 cv
93.8383 86.952 93.4691 85.9363 92.4574 85.3192 cv
91.7037 84.8596 90.6199 84.6101 89.3602 84.5088 cv
90.8423 84.2126 92.3297 84.0352 93.7925 84.0352 cv
94.5295 84.0352 95.2594 84.0802 95.9799 84.1778 cv
98.8921 86.7603 100.365 90.0537 100.813 93.6976 cv
101.015 95.3399 101.107 97.0412 100.741 98.8703 cv
99.4084 100.12 97.8266 101.089 96.1705 101.91 cv
.160784 .298039 .168627 rgb
f
80.9572 111.58 mo
80.2046 111.545 79.5163 111.453 78.9125 111.293 cv
78.7553 111.251 78.6752 111.183 78.6498 111.1 cv
78.494 111.113 78.3481 111.12 78.2108 111.12 cv
78.1683 111.12 78.1264 111.119 78.0856 111.118 cv
78.0684 111.092 78.0511 111.067 78.0336 111.041 cv
77.9252 111.008 77.8109 110.979 77.7104 110.942 cv
77.1628 110.739 76.6418 110.443 76.1525 110.074 cv
75.9504 109.732 75.8153 109.356 75.643 109.027 cv
75.325 108.42 75.0237 107.807 74.739 107.186 cv
74.916 107.22 75.0935 107.25 75.272 107.278 cv
76.1799 108.641 77.6447 109.788 79.2353 109.881 cv
79.5831 110.392 80.0583 110.856 80.7181 111.126 cv
80.3321 111.183 79.9466 111.233 79.5619 111.275 cv
79.6572 111.299 79.7526 111.322 79.8483 111.345 cv
80.2154 111.432 80.5854 111.51 80.9572 111.58 cv
86.4472 109.85 mo
86.6442 109.725 86.8407 109.601 87.0346 109.475 cv
87.4301 109.245 87.8256 109.017 88.2299 108.804 cv
88.724 108.544 89.2182 108.285 89.7035 108.021 cv
89.8832 107.968 90.0707 107.888 90.2523 107.778 cv
90.7426 107.483 91.184 107.186 91.5873 106.888 cv
93.2055 105.78 94.3715 104.557 95.0639 103.437 cv
95.2797 103.239 95.4945 103.041 95.7103 102.843 cv
96.0355 102.635 96.267 102.388 96.224 102.173 cv
96.2061 102.085 96.1883 101.998 96.1705 101.91 cv
97.8266 101.089 99.4084 100.12 100.741 98.8703 cv
100.685 99.1495 100.619 99.4316 100.54 99.7171 cv
100.065 101.444 99.2777 103.471 97.226 105.45 cv
97.0116 105.656 96.7888 105.858 96.5582 106.055 cv
96.5548 106.056 96.5524 106.058 96.549 106.059 cv
95.6526 106.5 94.7549 106.897 93.8773 107.248 cv
91.8504 108.06 89.2563 109.041 86.4472 109.85 cv
71.6393 91.4346 mo
71.8925 90.6044 72.3167 89.7398 72.9917 88.8322 cv
73.1861 88.7337 73.3902 88.6543 73.6039 88.5965 cv
73.7826 88.4105 74.0512 88.2425 74.3461 88.1209 cv
75.726 86.7117 77.6059 85.3631 79.974 84.344 cv
83.4848 82.8333 87.0531 82.4231 90.0629 82.1917 cv
90.3983 82.1659 90.7128 82.1537 91.008 82.1537 cv
93.5205 82.1537 94.6606 83.0402 95.808 84.0277 cv
95.8658 84.0774 95.9231 84.1275 95.9799 84.1778 cv
95.2594 84.0802 94.5295 84.0352 93.7925 84.0352 cv
92.3297 84.0352 90.8423 84.2126 89.3602 84.5088 cv
88.8936 84.4713 88.4029 84.4541 87.8958 84.4541 cv
87.5261 84.4541 87.1481 84.4632 86.7641 84.4803 cv
84.6127 84.576 81.7426 84.6575 79.1508 85.5145 cv
78.3475 85.7803 77.684 86.1091 77.125 86.4735 cv
76.6807 86.5368 76.2582 86.6781 75.8637 86.9144 cv
75.1898 87.2732 74.6117 87.8582 74.1986 88.4944 cv
73.9137 88.9327 73.6874 89.4274 73.5073 89.9535 cv
72.8447 90.401 72.2155 90.8943 71.6393 91.4346 cv
.160784 .25098 .141176 rgb
f
81.9627 111.476 mo
81.8109 111.476 81.6908 111.438 81.6283 111.349 cv
81.3193 111.317 81.0399 111.249 80.7868 111.153 cv
80.9209 111.121 81.0556 111.088 81.1897 111.053 cv
82.969 110.765 84.7474 110.339 86.4472 109.85 cv
86.3286 109.925 86.2097 109.999 86.0912 110.075 cv
85.8441 110.238 85.5892 110.4 85.3187 110.563 cv
85.0072 110.751 84.7191 110.852 84.4789 110.888 cv
84.3695 110.972 li
83.936 111.296 83.4696 111.434 83.1273 111.434 cv
82.9414 111.434 82.7921 111.394 82.7045 111.319 cv
82.5941 111.334 li
82.3678 111.422 82.1429 111.476 81.9627 111.476 cv
.509804 .721569 .454902 rgb
f
80.7868 111.153 mo
80.7637 111.144 80.7408 111.135 80.7181 111.126 cv
80.8752 111.103 81.0326 111.078 81.1897 111.053 cv
81.0556 111.088 80.9209 111.121 80.7868 111.153 cv
.384314 .580392 .337255 rgb
f
93.7347 98.8023 mo
93.602 98.6285 93.4449 98.4834 93.2709 98.3626 cv
93.7231 97.8133 93.8275 97.0379 93.8686 96.346 cv
93.8754 96.24 93.849 96.1424 93.8207 96.0457 cv
93.9096 95.9817 li
94.893 95.346 95.2445 93.8524 94.3549 92.9148 cv
93.9879 92.5273 93.5214 92.3554 93.0591 92.3554 cv
93.0281 92.3554 92.9971 92.3562 92.9662 92.3577 cv
92.8393 92.1868 92.6361 92.0814 92.4027 92.0399 cv
92.1908 91.3851 91.9135 90.7723 91.7211 90.3958 cv
91.6703 90.2962 91.6108 90.2122 91.5463 90.1385 cv
91.5189 89.952 li
91.4012 89.3745 91.0993 88.8336 90.5397 88.6444 cv
91.4389 88.6974 92.3303 88.7763 93.2221 88.888 cv
93.3471 89.0316 93.4867 89.1687 93.6644 89.2835 cv
93.7694 89.5801 93.8744 89.8767 93.9794 90.1733 cv
93.8459 90.2528 93.6989 90.3252 93.5492 90.386 cv
93.5979 90.3816 93.6452 90.3793 93.6908 90.3793 cv
93.8518 90.3793 93.9906 90.4083 94.0864 90.4755 cv
94.2387 90.9058 94.391 91.3361 94.5434 91.7664 cv
94.466 92.3635 94.8272 92.7342 95.2926 92.8662 cv
95.3898 93.3256 95.4326 93.8074 95.4183 94.3138 cv
95.4066 94.3675 li
95.4682 94.9056 95.5287 95.4437 95.5902 95.9817 cv
95.6971 96.375 95.8023 96.7772 95.8936 97.1884 cv
95.1972 97.6649 94.4251 98.1972 93.7347 98.8023 cv
.211765 .384314 .223529 rgb
f
92.9563 103.333 mo
92.9787 102.982 92.9706 102.645 92.931 102.32 cv
93.0687 102.183 93.1371 102.042 93.0775 101.917 cv
93.0561 101.872 li
93.8139 101.504 94.3217 100.759 94.1303 99.7244 cv
94.0611 99.351 93.9222 99.0479 93.7347 98.8023 cv
94.4251 98.1972 95.1972 97.6649 95.8936 97.1884 cv
96.1658 98.4154 96.3137 99.7229 96.0101 101.113 cv
96.0638 101.378 96.1168 101.644 96.1705 101.91 cv
95.1144 102.433 94.0276 102.896 92.9563 103.333 cv
95.2926 92.8662 mo
94.8272 92.7342 94.466 92.3635 94.5434 91.7664 cv
94.391 91.3361 94.2387 90.9058 94.0864 90.4755 cv
94.1099 90.492 94.1308 90.5108 94.1488 90.532 cv
94.5453 90.9984 94.8402 91.5032 95.0482 92.0418 cv
95.1595 92.1941 li
95.1898 92.4563 li
95.229 92.591 95.2633 92.7275 95.2926 92.8662 cv
93.9794 90.1733 mo
93.8744 89.8767 93.7694 89.5801 93.6644 89.2835 cv
93.4867 89.1687 93.3471 89.0316 93.2221 88.888 cv
92.3303 88.7763 91.4389 88.6974 90.5397 88.6444 cv
90.4681 88.6201 90.3922 88.6017 90.3119 88.5897 cv
90.14 88.5833 li
89.8109 88.2039 89.3734 87.9241 88.9135 87.8235 cv
88.6771 87.4226 88.2933 87.115 87.892 86.7937 cv
87.4045 86.404 86.8546 86.0425 86.2474 86.0425 cv
86.1929 86.0425 86.1378 86.0455 86.0824 86.0515 cv
85.8895 85.8455 85.6525 85.674 85.3319 85.5733 cv
86.6543 85.1494 88.0052 84.7796 89.3602 84.5088 cv
90.6199 84.6101 91.7037 84.8596 92.4574 85.3192 cv
93.4691 85.9363 93.8383 86.952 94.1254 87.97 cv
94.3129 88.4632 94.4496 88.9656 94.5599 89.4451 cv
94.6144 89.6805 94.3476 89.954 93.9794 90.1733 cv
.160784 .329412 .172549 rgb
f
80.7181 111.126 mo
80.0583 110.856 79.5831 110.392 79.2353 109.881 cv
79.3045 109.885 79.374 109.887 79.4437 109.887 cv
79.4771 109.887 79.5108 109.887 79.5443 109.886 cv
79.7357 110.052 79.933 110.207 80.1381 110.335 cv
80.3727 110.482 80.6288 110.547 80.8831 110.547 cv
81.0554 110.547 81.2268 110.517 81.39 110.462 cv
81.4152 110.594 81.5584 110.65 81.7608 110.65 cv
82.0446 110.65 82.4447 110.541 82.7992 110.379 cv
83.2807 110.371 83.9935 110.135 84.3246 109.756 cv
84.5424 109.53 li
84.6508 109.555 li
84.681 109.557 84.7111 109.558 84.7411 109.558 cv
84.9133 109.558 85.0808 109.522 85.2455 109.475 cv
85.3594 109.523 85.4796 109.558 85.618 109.558 cv
85.6528 109.558 85.6887 109.556 85.726 109.551 cv
86.3256 109.472 86.7611 109.205 87.0541 108.808 cv
87.3861 108.504 87.5346 108.033 87.4584 107.588 cv
87.4672 107.588 li
87.7275 107.79 88.0234 107.88 88.3196 107.88 cv
89.0192 107.88 89.7202 107.377 89.9555 106.66 cv
89.9896 106.556 89.9848 106.454 89.9848 106.352 cv
90.3051 106.157 90.5365 105.84 90.6976 105.476 cv
90.8412 105.309 90.9438 105.125 90.9857 104.924 cv
91.0316 104.841 91.0961 104.77 91.1254 104.674 cv
91.2133 104.582 91.31 104.501 91.3744 104.378 cv
91.4154 104.256 li
92.0229 104.193 92.932 103.698 92.9555 103.346 cv
92.9558 103.342 92.9561 103.337 92.9563 103.333 cv
94.0276 102.896 95.1144 102.433 96.1705 101.91 cv
96.1883 101.998 96.2061 102.085 96.224 102.173 cv
96.267 102.388 96.0355 102.635 95.7103 102.843 cv
95.4945 103.041 95.2797 103.239 95.0639 103.437 cv
94.3715 104.557 93.2055 105.78 91.5873 106.888 cv
91.184 107.186 90.7426 107.483 90.2523 107.778 cv
90.0707 107.888 89.8832 107.968 89.7035 108.021 cv
89.2182 108.285 88.724 108.544 88.2299 108.804 cv
87.8256 109.017 87.4301 109.245 87.0346 109.475 cv
86.8407 109.601 86.6442 109.725 86.4472 109.85 cv
84.7474 110.339 82.969 110.765 81.1897 111.053 cv
81.0326 111.078 80.8752 111.103 80.7181 111.126 cv
77.125 86.4735 mo
77.684 86.1091 78.3475 85.7803 79.1508 85.5145 cv
81.7426 84.6575 84.6127 84.576 86.7641 84.4803 cv
87.1481 84.4632 87.5261 84.4541 87.8958 84.4541 cv
88.4029 84.4541 88.8936 84.4713 89.3602 84.5088 cv
88.0052 84.7796 86.6543 85.1494 85.3319 85.5733 cv
85.3182 85.569 85.3044 85.5649 85.2904 85.5608 cv
85.054 85.4927 84.7584 85.4639 84.4222 85.4639 cv
83.6072 85.4639 82.5537 85.633 81.5277 85.8196 cv
81.1957 85.845 80.8178 85.9085 80.3725 86.0291 cv
80.3441 86.0374 li
80.314 86.043 80.2844 86.0488 80.2555 86.0549 cv
80.2131 86.0627 80.171 86.0704 80.1291 86.078 cv
79.9063 86.02 79.6792 85.9827 79.4418 85.9827 cv
79.4037 85.9827 79.3652 85.9837 79.3265 85.9856 cv
79.2904 85.9845 79.2546 85.9839 79.219 85.9839 cv
78.5695 85.9839 77.9976 86.175 77.4486 86.4412 cv
77.3396 86.4476 77.2317 86.4583 77.125 86.4735 cv
.160784 .286274 .14902 rgb
f
77.0144 105.564 mo
76.0374 105.445 75.04 105.163 74.1633 104.724 cv
73.7569 103.271 73.5655 101.646 73.5268 100.222 cv
73.3119 99.8895 73.1176 99.5452 72.9769 99.1697 cv
72.7843 98.6518 72.6466 97.9994 72.6103 97.3341 cv
72.6945 97.1716 72.7813 97.0098 72.8709 96.8481 cv
72.9752 98.1283 73.2128 99.4217 73.642 100.533 cv
73.9613 101.361 74.3519 101.974 74.9037 102.662 cv
75.1068 102.947 75.3519 103.195 75.6 103.439 cv
75.5924 103.434 75.5865 103.431 75.5824 103.431 cv
75.5544 103.431 75.6051 103.552 75.7514 103.821 cv
76.089 104.481 76.5174 105.064 77.0144 105.564 cv
.215686 .380392 .223529 rgb
f
77.6597 107.452 mo
76.8532 107.452 76.0558 107.397 75.272 107.278 cv
75.2164 107.194 75.163 107.11 75.1117 107.025 cv
74.7134 106.367 74.4014 105.575 74.1633 104.724 cv
75.04 105.163 76.0374 105.445 77.0144 105.564 cv
77.332 105.883 77.6777 106.169 78.0456 106.419 cv
78.1029 106.764 78.1683 107.107 78.2497 107.442 cv
78.0525 107.449 77.856 107.452 77.6597 107.452 cv
72.6103 97.3341 mo
72.6076 97.2844 72.6054 97.2346 72.6039 97.1849 cv
72.5287 96.9539 72.4467 96.7254 72.3764 96.493 cv
72.3266 96.3294 72.3246 96.181 72.3363 96.0384 cv
71.8861 95.0979 71.601 94.0672 71.8344 93.1526 cv
71.8939 92.9148 71.9965 92.7195 72.1146 92.5384 cv
72.379 91.7618 72.7896 91.1535 73.3056 90.6245 cv
73.1304 91.2927 73.0164 91.9917 72.9417 92.6764 cv
72.777 93.4523 72.7466 94.1889 72.8078 94.8982 cv
72.7985 95.5265 72.8169 96.1855 72.8709 96.8481 cv
72.7813 97.0098 72.6945 97.1716 72.6103 97.3341 cv
.160784 .329412 .172549 rgb
f
79.2353 109.881 mo
77.6447 109.788 76.1799 108.641 75.272 107.278 cv
76.0558 107.397 76.8532 107.452 77.6597 107.452 cv
77.856 107.452 78.0525 107.449 78.2497 107.442 cv
78.2884 107.602 78.3306 107.76 78.3773 107.915 cv
78.5241 108.406 78.7618 109.187 79.2353 109.881 cv
.160784 .286274 .14902 rgb
f
78.2497 107.442 mo
78.1683 107.107 78.1029 106.764 78.0456 106.419 cv
78.6166 106.807 79.2411 107.109 79.8971 107.322 cv
79.3458 107.384 78.7961 107.425 78.2497 107.442 cv
.160784 .352941 .180392 rgb
f
90.4673 102.526 mo
90.7719 102.114 90.9894 101.638 91.0746 101.089 cv
91.226 100.118 91.1391 98.9212 90.2836 98.2503 cv
90.2543 98.2254 li
90.1879 97.9256 90.1215 97.6267 90.0522 97.3284 cv
89.9467 96.9851 89.8246 96.6907 89.6791 96.4144 cv
89.2162 93.2461 87.0995 89.2928 84.7819 87.2787 cv
85.2154 87.1266 85.6471 87.0167 86.0756 86.9622 cv
86.1322 87.783 86.7094 88.5462 87.7806 88.5555 cv
88.7142 88.5636 89.631 88.5908 90.5397 88.6444 cv
91.0993 88.8336 91.4012 89.3745 91.5189 89.952 cv
91.5463 90.1385 li
91.6108 90.2122 91.6703 90.2962 91.7211 90.3958 cv
91.9135 90.7723 92.1908 91.3851 92.4027 92.0399 cv
92.6361 92.0814 92.8393 92.1868 92.9662 92.3577 cv
92.9971 92.3562 93.0281 92.3554 93.0591 92.3554 cv
93.5214 92.3554 93.9879 92.5273 94.3549 92.9148 cv
95.2445 93.8524 94.893 95.346 93.9096 95.9817 cv
93.8207 96.0457 li
93.849 96.1424 93.8754 96.24 93.8686 96.346 cv
93.8275 97.0379 93.7231 97.8133 93.2709 98.3626 cv
93.4449 98.4834 93.602 98.6285 93.7347 98.8023 cv
93.0324 99.418 92.4146 100.109 92.0463 100.894 cv
91.8686 101.271 91.8266 101.621 91.8734 101.934 cv
91.8461 101.948 li
91.4028 102.158 90.9403 102.348 90.4673 102.526 cv
.211765 .407843 .223529 rgb
f
87.4747 105.454 mo
87.7955 105.064 88.0547 104.633 88.2592 104.169 cv
89.1027 103.791 89.9238 103.261 90.4673 102.526 cv
90.9403 102.348 91.4028 102.158 91.8461 101.948 cv
91.8734 101.934 li
91.8266 101.621 91.8686 101.271 92.0463 100.894 cv
92.4146 100.109 93.0324 99.418 93.7347 98.8023 cv
93.9222 99.0479 94.0611 99.351 94.1303 99.7244 cv
94.3217 100.759 93.8139 101.504 93.0561 101.872 cv
93.0775 101.917 li
93.1371 102.042 93.0687 102.183 92.931 102.32 cv
92.9706 102.645 92.9787 102.982 92.9563 103.333 cv
92.9088 103.352 92.8614 103.372 92.8139 103.391 cv
91.1575 104.064 89.353 104.797 87.4747 105.454 cv
90.5397 88.6444 mo
89.631 88.5908 88.7142 88.5636 87.7806 88.5555 cv
86.7094 88.5462 86.1322 87.783 86.0756 86.9622 cv
85.6471 87.0167 85.2154 87.1266 84.7819 87.2787 cv
84.6596 87.1724 84.5366 87.0714 84.4135 86.9764 cv
84.0836 86.7215 83.7179 86.4594 83.3264 86.2606 cv
83.9854 86.0214 84.6552 85.7903 85.3319 85.5733 cv
85.6525 85.674 85.8895 85.8455 86.0824 86.0515 cv
86.1378 86.0455 86.1929 86.0425 86.2474 86.0425 cv
86.8546 86.0425 87.4045 86.404 87.892 86.7937 cv
88.2933 87.115 88.6771 87.4226 88.9135 87.8235 cv
89.3734 87.9241 89.8109 88.2039 90.14 88.5833 cv
90.3119 88.5897 li
90.3922 88.6017 90.4681 88.6201 90.5397 88.6444 cv
.160784 .352941 .180392 rgb
f
81.7608 110.65 mo
81.5584 110.65 81.4152 110.594 81.39 110.462 cv
81.2268 110.517 81.0554 110.547 80.8831 110.547 cv
80.6288 110.547 80.3727 110.482 80.1381 110.335 cv
79.933 110.207 79.7357 110.052 79.5443 109.886 cv
79.5108 109.887 79.4771 109.887 79.4437 109.887 cv
79.374 109.887 79.3045 109.885 79.2353 109.881 cv
78.7618 109.187 78.5241 108.406 78.3773 107.915 cv
78.3306 107.76 78.2884 107.602 78.2497 107.442 cv
78.7961 107.425 79.3458 107.384 79.8971 107.322 cv
80.2304 107.429 80.5717 107.514 80.9183 107.575 cv
81.0365 107.737 li
81.0892 107.797 81.1852 107.822 81.3053 107.822 cv
81.3454 107.822 81.3882 107.82 81.433 107.814 cv
81.4924 107.831 81.5624 107.84 81.6401 107.84 cv
81.8306 107.84 82.0678 107.788 82.3119 107.683 cv
83.6596 107.666 85.0297 107.296 86.267 106.516 cv
86.7413 106.217 87.1413 105.858 87.4747 105.454 cv
89.353 104.797 91.1575 104.064 92.8139 103.391 cv
92.8614 103.372 92.9088 103.352 92.9563 103.333 cv
92.9561 103.337 92.9558 103.342 92.9555 103.346 cv
92.932 103.698 92.0229 104.193 91.4154 104.256 cv
91.3744 104.378 li
91.31 104.501 91.2133 104.582 91.1254 104.674 cv
91.0961 104.77 91.0316 104.841 90.9857 104.924 cv
90.9438 105.125 90.8412 105.309 90.6976 105.476 cv
90.5365 105.84 90.3051 106.157 89.9848 106.352 cv
89.9848 106.454 89.9896 106.556 89.9555 106.66 cv
89.7202 107.377 89.0192 107.88 88.3196 107.88 cv
88.0234 107.88 87.7275 107.79 87.4672 107.588 cv
87.4584 107.588 li
87.5346 108.033 87.3861 108.504 87.0541 108.808 cv
86.7611 109.205 86.3256 109.472 85.726 109.551 cv
85.6887 109.556 85.6528 109.558 85.618 109.558 cv
85.4796 109.558 85.3594 109.523 85.2455 109.475 cv
85.0808 109.522 84.9133 109.558 84.7411 109.558 cv
84.7111 109.558 84.681 109.557 84.6508 109.555 cv
84.5424 109.53 li
84.3246 109.756 li
83.9935 110.135 83.2807 110.371 82.7992 110.379 cv
82.4447 110.541 82.0446 110.65 81.7608 110.65 cv
83.3264 86.2606 mo
83.091 86.1411 82.8461 86.0445 82.5941 85.9861 cv
82.4996 85.9643 82.1318 85.9382 81.6839 85.9382 cv
81.254 85.9382 80.7503 85.9623 80.3441 86.0374 cv
80.3725 86.0291 li
80.8178 85.9085 81.1957 85.845 81.5277 85.8196 cv
82.5537 85.633 83.6072 85.4639 84.4222 85.4639 cv
84.7584 85.4639 85.054 85.4927 85.2904 85.5608 cv
85.3044 85.5649 85.3182 85.569 85.3319 85.5733 cv
84.6552 85.7903 83.9854 86.0214 83.3264 86.2606 cv
.160784 .313725 .156863 rgb
f
72.8078 94.8982 mo
72.7466 94.1889 72.777 93.4523 72.9417 92.6764 cv
72.8764 93.2746 72.841 93.862 72.8207 94.4075 cv
72.8146 94.5686 72.8102 94.7323 72.8078 94.8982 cv
.160784 .352941 .180392 rgb
f
80.142 86.0813 mo
80.1377 86.0802 80.1334 86.0791 80.1291 86.078 cv
80.171 86.0704 80.2131 86.0627 80.2555 86.0549 cv
80.2165 86.0632 80.1786 86.072 80.142 86.0813 cv
.160784 .313725 .156863 rgb
f
73.3056 90.6245 mo
73.3654 90.3966 73.4323 90.1723 73.5073 89.9535 cv
73.7905 89.7622 74.0801 89.579 74.374 89.4044 cv
74.2437 89.6028 74.1229 89.7983 74.0107 89.9915 cv
73.759 90.1929 73.523 90.4016 73.3056 90.6245 cv
.160784 .329412 .172549 rgb
f
73.5073 89.9535 mo
73.6874 89.4274 73.9137 88.9327 74.1986 88.4944 cv
74.6117 87.8582 75.1898 87.2732 75.8637 86.9144 cv
76.2582 86.6781 76.6807 86.5368 77.125 86.4735 cv
75.905 87.2689 75.1824 88.2347 74.5863 89.0906 cv
74.513 89.1959 74.4421 89.3006 74.374 89.4044 cv
74.0801 89.579 73.7905 89.7622 73.5073 89.9535 cv
.160784 .286274 .14902 rgb
f
74.0107 89.9915 mo
74.1229 89.7983 74.2437 89.6028 74.374 89.4044 cv
75.0162 89.0227 75.6797 88.6808 76.3492 88.3773 cv
75.9966 88.7462 75.7022 89.1222 75.4564 89.4842 cv
75.351 89.39 75.2211 89.3294 75.0805 89.3294 cv
74.9777 89.3294 74.8691 89.3618 74.7601 89.4373 cv
74.4982 89.6192 74.2475 89.8021 74.0107 89.9915 cv
.160784 .356863 .176471 rgb
f
74.374 89.4044 mo
74.4421 89.3006 74.513 89.1959 74.5863 89.0906 cv
75.1824 88.2347 75.905 87.2689 77.125 86.4735 cv
77.2317 86.4583 77.3396 86.4476 77.4486 86.4412 cv
77.9976 86.175 78.5695 85.9839 79.219 85.9839 cv
79.2546 85.9839 79.2904 85.9845 79.3265 85.9856 cv
79.3652 85.9837 79.4037 85.9827 79.4418 85.9827 cv
79.6792 85.9827 79.9063 86.02 80.1291 86.078 cv
79.8763 86.1237 79.6337 86.1659 79.4076 86.201 cv
78.7523 86.3025 78.1234 86.7342 77.9867 87.0535 cv
77.3344 87.4552 76.7952 87.9106 76.3492 88.3773 cv
75.6797 88.6808 75.0162 89.0227 74.374 89.4044 cv
80.2555 86.0549 mo
80.2844 86.0488 80.314 86.043 80.3441 86.0374 cv
80.3324 86.0408 li
80.3067 86.0456 80.281 86.0503 80.2555 86.0549 cv
.160784 .313725 .156863 rgb
f
77.6029 105.616 mo
77.4084 105.605 77.2118 105.588 77.0144 105.564 cv
76.5174 105.064 76.089 104.481 75.7514 103.821 cv
75.6051 103.552 75.5544 103.431 75.5824 103.431 cv
75.5865 103.431 75.5924 103.434 75.6 103.439 cv
75.3519 103.195 75.1068 102.947 74.9037 102.662 cv
74.3519 101.974 73.9613 101.361 73.642 100.533 cv
73.2128 99.4217 72.9752 98.1283 72.8709 96.8481 cv
72.9411 96.7212 73.0129 96.5946 73.086 96.4685 cv
73.2423 97.0691 73.4455 97.6547 73.6654 98.2332 cv
74.56 100.59 75.852 102.777 77.2084 104.935 cv
77.3324 105.165 77.4642 105.392 77.6029 105.616 cv
.211765 .403922 .223529 rgb
f
78.0456 106.419 mo
77.6777 106.169 77.332 105.883 77.0144 105.564 cv
77.2118 105.588 77.4084 105.605 77.6029 105.616 cv
77.7351 105.829 77.8736 106.04 78.018 106.248 cv
78.027 106.305 78.0362 106.362 78.0456 106.419 cv
72.8709 96.8481 mo
72.8169 96.1855 72.7985 95.5265 72.8078 94.8982 cv
72.8541 95.4358 72.9531 95.9576 73.086 96.4685 cv
73.0129 96.5946 72.9411 96.7212 72.8709 96.8481 cv
72.9417 92.6764 mo
73.0164 91.9917 73.1304 91.2927 73.3056 90.6245 cv
73.523 90.4016 73.759 90.1929 74.0107 89.9915 cv
73.4588 90.9424 73.1208 91.8325 72.9417 92.6764 cv
.160784 .352941 .180392 rgb
f
78.0581 105.628 mo
77.908 105.628 77.7561 105.624 77.6029 105.616 cv
77.4642 105.392 77.3324 105.165 77.2084 104.935 cv
75.852 102.777 74.56 100.59 73.6654 98.2332 cv
73.4455 97.6547 73.2423 97.0691 73.086 96.4685 cv
73.812 95.216 74.6713 94.0008 75.4924 92.8901 cv
75.4505 93.4949 75.516 94.0924 75.7166 94.6515 cv
74.3661 96.8559 73.985 99.382 76.0629 101.665 cv
76.4378 102.077 76.8782 102.444 77.365 102.761 cv
77.4911 102.855 77.6234 102.941 77.7601 103.02 cv
78.0004 103.396 78.2728 103.748 78.6137 104.053 cv
78.8598 104.254 li
78.9578 104.72 79.1584 105.172 79.4335 105.581 cv
78.9936 105.61 78.5473 105.626 78.0932 105.628 cv
78.0816 105.628 78.0697 105.628 78.0581 105.628 cv
87.481 103.583 mo
87.5136 103.483 87.5429 103.38 87.5688 103.275 cv
88.1491 102.401 88.4156 101.341 88.2877 100.311 cv
89.5182 98.0012 89.3599 95.2824 87.685 92.8631 cv
86.7074 91.451 85.5385 90.1306 83.7338 89.9339 cv
83.5827 89.9175 83.4323 89.9096 83.2829 89.9096 cv
83.1284 89.9096 82.9749 89.918 82.8223 89.9339 cv
82.3396 89.6134 81.8296 89.3335 81.3047 89.1355 cv
82.4594 88.3868 83.6272 87.6835 84.7819 87.2787 cv
87.0995 89.2928 89.2162 93.2461 89.6791 96.4144 cv
89.8246 96.6907 89.9467 96.9851 90.0522 97.3284 cv
90.1215 97.6267 90.1879 97.9256 90.2543 98.2254 cv
90.2836 98.2503 li
91.1391 98.9212 91.226 100.118 91.0746 101.089 cv
90.9894 101.638 90.7719 102.114 90.4673 102.526 cv
89.493 102.894 88.4733 103.217 87.481 103.583 cv
.211765 .423529 .227451 rgb
f
79.8971 107.322 mo
79.2411 107.109 78.6166 106.807 78.0456 106.419 cv
78.0362 106.362 78.027 106.305 78.018 106.248 cv
77.8736 106.04 77.7351 105.829 77.6029 105.616 cv
77.7561 105.624 77.908 105.628 78.0581 105.628 cv
78.0697 105.628 78.0816 105.628 78.0932 105.628 cv
78.5473 105.626 78.9936 105.61 79.4335 105.581 cv
79.8893 106.259 80.5493 106.818 81.2862 107.124 cv
80.8227 107.203 80.3593 107.27 79.8971 107.322 cv
85.5291 106.093 mo
86.4385 105.444 87.1396 104.635 87.481 103.583 cv
88.4733 103.217 89.493 102.894 90.4673 102.526 cv
89.9238 103.261 89.1027 103.791 88.2592 104.169 cv
88.0547 104.633 87.7955 105.064 87.4747 105.454 cv
86.8337 105.678 86.1845 105.892 85.5291 106.093 cv
73.086 96.4685 mo
72.9531 95.9576 72.8541 95.4358 72.8078 94.8982 cv
72.8102 94.7323 72.8146 94.5686 72.8207 94.4075 cv
72.841 93.862 72.8764 93.2746 72.9417 92.6764 cv
73.1208 91.8325 73.4588 90.9424 74.0107 89.9915 cv
74.2475 89.8021 74.4982 89.6192 74.7601 89.4373 cv
74.8691 89.3618 74.9777 89.3294 75.0805 89.3294 cv
75.2211 89.3294 75.351 89.39 75.4564 89.4842 cv
75.7022 89.1222 75.9966 88.7462 76.3492 88.3773 cv
76.5255 88.2973 76.7025 88.2199 76.8793 88.1453 cv
77.1032 88.285 77.3646 88.3665 77.658 88.3665 cv
77.8856 88.3665 78.1323 88.3176 78.3959 88.2088 cv
79.9289 87.5766 81.5918 86.8904 83.3264 86.2606 cv
83.7179 86.4594 84.0836 86.7215 84.4135 86.9764 cv
84.5366 87.0714 84.6596 87.1724 84.7819 87.2787 cv
83.6272 87.6835 82.4594 88.3868 81.3047 89.1355 cv
80.7966 88.9439 80.2747 88.8291 79.7509 88.8291 cv
79.2696 88.8291 78.7864 88.926 78.3109 89.1492 cv
77.3656 89.2596 76.5014 89.7386 76.0375 90.7864 cv
75.7381 91.4632 75.5415 92.1815 75.4924 92.8901 cv
74.6713 94.0008 73.812 95.216 73.086 96.4685 cv
.160784 .376471 .180392 rgb
f
81.6401 107.84 mo
81.5624 107.84 81.4924 107.831 81.433 107.814 cv
81.3882 107.82 81.3454 107.822 81.3053 107.822 cv
81.1852 107.822 81.0892 107.797 81.0365 107.737 cv
80.9183 107.575 li
80.5717 107.514 80.2304 107.429 79.8971 107.322 cv
80.3593 107.27 80.8227 107.203 81.2862 107.124 cv
81.6772 107.287 82.0899 107.378 82.505 107.378 cv
82.8664 107.378 83.2299 107.309 83.5824 107.157 cv
84.2894 106.853 84.9513 106.505 85.5291 106.093 cv
86.1845 105.892 86.8337 105.678 87.4747 105.454 cv
87.1413 105.858 86.7413 106.217 86.267 106.516 cv
85.0297 107.296 83.6596 107.666 82.3119 107.683 cv
82.0678 107.788 81.8306 107.84 81.6401 107.84 cv
76.3492 88.3773 mo
76.7952 87.9106 77.3344 87.4552 77.9867 87.0535 cv
78.1234 86.7342 78.7523 86.3025 79.4076 86.201 cv
79.6337 86.1659 79.8763 86.1237 80.1291 86.078 cv
80.1334 86.0791 80.1377 86.0802 80.142 86.0813 cv
80.1786 86.072 80.2165 86.0632 80.2555 86.0549 cv
80.281 86.0503 80.3067 86.0456 80.3324 86.0408 cv
80.3441 86.0374 li
80.7503 85.9623 81.254 85.9382 81.6839 85.9382 cv
82.1318 85.9382 82.4996 85.9643 82.5941 85.9861 cv
82.8461 86.0445 83.091 86.1411 83.3264 86.2606 cv
81.5918 86.8904 79.9289 87.5766 78.3959 88.2088 cv
78.1323 88.3176 77.8856 88.3665 77.658 88.3665 cv
77.3646 88.3665 77.1032 88.285 76.8793 88.1453 cv
76.7025 88.2199 76.5255 88.2973 76.3492 88.3773 cv
.160784 .337255 .160784 rgb
f
77.365 102.761 mo
76.8782 102.444 76.4378 102.077 76.0629 101.665 cv
73.985 99.382 74.3661 96.8559 75.7166 94.6515 cv
75.793 94.8644 75.8891 95.0718 76.0063 95.2718 cv
76.0551 95.7454 76.143 96.2117 76.3012 96.6888 cv
76.3071 96.7068 76.3133 96.7247 76.3197 96.7425 cv
76.2928 96.7557 76.2711 96.7804 76.2621 96.8182 cv
76.1586 97.2449 75.8744 97.5843 75.9125 98.0394 cv
75.9255 98.2005 75.9736 98.3586 76.0408 98.5119 cv
75.7343 99.4341 75.7505 100.46 76.2719 101.416 cv
76.3266 101.516 76.3812 101.617 76.4359 101.718 cv
76.659 102.127 76.9839 102.478 77.365 102.761 cv
88.2877 100.311 mo
88.2241 99.7991 88.0629 99.294 87.7943 98.8226 cv
87.5216 98.3429 87.1827 97.9536 86.797 97.6446 cv
86.8717 97.1052 86.8411 96.546 86.7719 95.9607 cv
86.7658 95.9089 86.7492 95.8615 86.7251 95.8195 cv
86.7228 95.2058 86.5847 94.5936 86.3147 93.9982 cv
86.2093 93.4976 85.7822 92.9777 85.5248 92.6614 cv
85.4685 92.5922 85.4127 92.5239 85.3564 92.457 cv
84.939 91.7314 84.3389 91.0736 83.5443 90.4554 cv
83.3121 90.2746 83.0709 90.0989 82.8223 89.9339 cv
82.9749 89.918 83.1284 89.9096 83.2829 89.9096 cv
83.4323 89.9096 83.5827 89.9175 83.7338 89.9339 cv
85.5385 90.1306 86.7074 91.451 87.685 92.8631 cv
89.3599 95.2824 89.5182 98.0012 88.2877 100.311 cv
f
79.4335 105.581 mo
79.1584 105.172 78.9578 104.72 78.8598 104.254 cv
78.6137 104.053 li
78.2728 103.748 78.0004 103.396 77.7601 103.02 cv
77.6234 102.941 77.4911 102.855 77.365 102.761 cv
78.7115 103.637 80.4137 104.128 82.0692 104.128 cv
83.6152 104.128 85.1203 103.7 86.2582 102.756 cv
87.1354 102.029 87.8143 101.2 88.2877 100.311 cv
88.4156 101.341 88.1491 102.401 87.5688 103.275 cv
87.5429 103.38 87.5136 103.483 87.481 103.583 cv
86.7655 103.847 86.0643 104.134 85.4047 104.477 cv
83.4793 105.018 81.5311 105.444 79.4335 105.581 cv
.207843 .439216 .227451 rgb
f
81.2862 107.124 mo
80.5493 106.818 79.8893 106.259 79.4335 105.581 cv
81.5311 105.444 83.4793 105.018 85.4047 104.477 cv
86.0643 104.134 86.7655 103.847 87.481 103.583 cv
87.1396 104.635 86.4385 105.444 85.5291 106.093 cv
84.132 106.52 82.7077 106.882 81.2862 107.124 cv
.160784 .388235 .184314 rgb
f
82.505 107.378 mo
82.0899 107.378 81.6772 107.287 81.2862 107.124 cv
82.7077 106.882 84.132 106.52 85.5291 106.093 cv
84.9513 106.505 84.2894 106.853 83.5824 107.157 cv
83.2299 107.309 82.8664 107.378 82.505 107.378 cv
.160784 .34902 .164706 rgb
f
82.0832 100.111 mo
82.0831 100.101 82.0828 100.09 82.0822 100.08 cv
82.1763 100.013 82.2581 99.9334 82.3273 99.8446 cv
82.3338 99.8447 82.3404 99.8448 82.3469 99.8448 cv
83.1948 99.8447 83.7506 98.8974 84.0424 98.1717 cv
84.4164 97.2405 84.3881 96.0662 83.9183 95.1687 cv
83.7277 94.804 83.4814 94.5008 83.192 94.2542 cv
83.5432 94.3218 83.89 94.5136 84.2309 94.8816 cv
84.6478 95.3317 84.9219 95.8334 85.0537 96.3488 cv
85.0438 96.3583 85.0355 96.3705 85.0297 96.3855 cv
84.9467 96.5965 84.8637 96.8079 84.7806 97.0188 cv
84.7427 97.1158 84.8319 97.1841 84.9174 97.1841 cv
84.9727 97.1841 85.0265 97.1556 85.0434 97.0877 cv
85.0712 96.9741 85.0991 96.8604 85.127 96.7467 cv
85.1735 97.156 85.1318 97.568 85.0025 97.964 cv
85.0048 97.9531 85.007 97.9423 85.0092 97.9315 cv
85.0202 97.8751 84.9763 97.8395 84.9332 97.8395 cv
84.9038 97.8395 84.8747 97.8561 84.8637 97.8939 cv
84.6922 98.4781 84.3832 98.8345 84.0999 99.3446 cv
84.0527 99.3887 84.0039 99.4322 83.9535 99.4749 cv
83.4612 99.8917 82.7878 100.09 82.0832 100.111 cv
84.4789 96.1414 mo
84.4808 96.2698 li
84.4789 96.1414 li
80.0594 99.3406 mo
79.9903 99.3119 79.923 99.2732 79.8578 99.2215 cv
79.7572 99.1416 79.6412 99.1066 79.5275 99.1066 cv
79.4283 99.1066 79.331 99.1332 79.2475 99.18 cv
77.8793 97.9872 78.9564 96.6521 79.9672 95.6033 cv
80.1448 95.4987 80.3226 95.3867 80.5006 95.2732 cv
80.7708 95.3029 81.036 95.3054 81.307 95.3167 cv
82.2045 95.3548 82.7162 95.2943 82.8383 96.2542 cv
82.5088 95.7018 81.8608 95.3722 81.1787 95.3722 cv
81.1513 95.3722 81.1237 95.3727 81.0961 95.3738 cv
80.1371 95.4114 79.3861 96.177 79.2768 97.1102 cv
79.1864 97.8817 79.5125 98.5173 80.0139 98.9087 cv
80.0088 99.0541 80.024 99.2003 80.0594 99.3406 cv
.25098 .811765 .180392 rgb
f
82.0822 100.08 mo
82.0682 99.8356 81.9057 99.6208 81.6361 99.4944 cv
81.4606 99.4119 81.2794 99.3904 81.0978 99.3904 cv
80.9983 99.3904 80.8987 99.3969 80.7998 99.4033 cv
80.7009 99.4098 80.6028 99.4163 80.5061 99.4163 cv
80.3521 99.4163 80.202 99.3998 80.0594 99.3406 cv
80.024 99.2003 80.0088 99.0541 80.0139 98.9087 cv
80.3618 99.1802 80.7942 99.3341 81.2302 99.3341 cv
81.4554 99.3341 81.6817 99.293 81.8979 99.2059 cv
81.8764 99.2947 81.8578 99.3851 81.8578 99.492 cv
81.8588 99.6365 81.9701 99.7938 82.1166 99.8221 cv
82.1888 99.8362 82.2589 99.8435 82.3273 99.8446 cv
82.2581 99.9334 82.1763 100.013 82.0822 100.08 cv
.403922 .952941 .32549 rgb
f
75.7166 94.6515 mo
75.516 94.0924 75.4505 93.4949 75.4924 92.8901 cv
75.6891 92.624 75.8837 92.3638 76.0736 92.1107 cv
76.1303 92.0008 li
77.7594 91.5632 79.5165 90.2949 81.3047 89.1355 cv
81.8296 89.3335 82.3396 89.6134 82.8223 89.9339 cv
81.9148 90.0282 81.0408 90.3881 80.2025 90.8324 cv
80.1609 90.8019 80.1072 90.7836 80.0412 90.7836 cv
80.0308 90.7836 80.0201 90.784 80.0092 90.785 cv
79.4994 90.8284 79.5229 91.0062 79.1 91.3314 cv
79.0529 91.3675 79.0371 91.4371 79.0556 91.4893 cv
78.8599 91.6069 78.6664 91.7246 78.475 91.8396 cv
78.1459 91.9143 77.8188 92.0804 77.5199 92.3841 cv
76.8373 93.0782 76.2119 93.8431 75.7166 94.6515 cv
.207843 .439216 .227451 rgb
f
75.4924 92.8901 mo
75.5415 92.1815 75.7381 91.4632 76.0375 90.7864 cv
76.5014 89.7386 77.3656 89.2596 78.3109 89.1492 cv
78.7864 88.926 79.2696 88.8291 79.7509 88.8291 cv
80.2747 88.8291 80.7966 88.9439 81.3047 89.1355 cv
79.5165 90.2949 77.7594 91.5632 76.1303 92.0008 cv
76.0736 92.1107 li
75.8837 92.3638 75.6891 92.624 75.4924 92.8901 cv
.160784 .388235 .184314 rgb
f
82.0692 104.128 mo
80.4137 104.128 78.7115 103.637 77.365 102.761 cv
76.9839 102.478 76.659 102.127 76.4359 101.718 cv
76.3812 101.617 76.3266 101.516 76.2719 101.416 cv
75.7505 100.46 75.7343 99.4341 76.0408 98.5119 cv
76.1557 98.7738 76.3264 99.0215 76.473 99.2464 cv
76.5765 99.4042 76.723 99.4718 76.8672 99.4718 cv
77.0907 99.4718 77.3086 99.3095 77.3519 99.0691 cv
77.3871 99.0828 77.4243 99.0892 77.4617 99.0892 cv
77.6979 99.0892 77.9463 98.836 77.7836 98.5701 cv
77.3607 97.8767 77.1527 97.1394 77.2396 96.325 cv
77.2943 95.8089 77.4223 95.3406 77.5472 94.8528 cv
77.7182 94.4622 77.8822 94.0325 77.8705 93.6585 cv
77.9418 93.5623 li
78.1156 93.1517 78.3402 92.7576 78.3793 92.3118 cv
78.3875 92.2206 78.2905 92.1303 78.1984 92.1303 cv
78.1812 92.1303 78.164 92.1335 78.1479 92.1404 cv
77.7397 92.3167 77.4408 92.6434 77.1068 92.9349 cv
76.8695 93.1424 76.9076 93.3899 77.0541 93.574 cv
76.9564 93.72 76.8754 93.8904 76.8031 94.0701 cv
76.6889 94.1517 76.5942 94.2659 76.5795 94.4593 cv
76.5726 94.5565 76.5765 94.6629 76.5717 94.762 cv
76.5199 94.9319 76.4701 95.0921 76.4193 95.2254 cv
76.3432 95.4231 76.4154 95.5784 76.5443 95.6707 cv
76.5512 96.1414 76.5795 96.618 76.6488 97.0872 cv
76.5873 97.0037 76.5316 96.9153 76.4945 96.8152 cv
76.474 96.7612 76.4212 96.7311 76.3706 96.7311 cv
76.3529 96.7311 76.3354 96.7348 76.3197 96.7425 cv
76.3133 96.7247 76.3071 96.7068 76.3012 96.6888 cv
76.143 96.2117 76.0551 95.7454 76.0063 95.2718 cv
75.8891 95.0718 75.793 94.8644 75.7166 94.6515 cv
76.2119 93.8431 76.8373 93.0782 77.5199 92.3841 cv
77.8188 92.0804 78.1459 91.9143 78.475 91.8396 cv
78.6664 91.7246 78.8599 91.6069 79.0556 91.4893 cv
79.069 91.527 79.1004 91.5555 79.1508 91.5555 cv
79.1549 91.5555 79.1591 91.5554 79.1635 91.555 cv
79.2364 91.5483 79.3034 91.5463 79.3659 91.5463 cv
79.4155 91.5463 79.4623 91.5476 79.5071 91.5489 cv
79.552 91.5502 79.5948 91.5514 79.6364 91.5514 cv
79.8182 91.5514 79.9765 91.5271 80.1762 91.3719 cv
80.3454 91.2405 80.3607 90.9484 80.2025 90.8324 cv
81.0408 90.3881 81.9148 90.0282 82.8223 89.9339 cv
83.0709 90.0989 83.3121 90.2746 83.5443 90.4554 cv
84.3389 91.0736 84.939 91.7314 85.3564 92.457 cv
85.148 92.2093 84.932 91.9801 84.6537 91.7933 cv
84.269 91.5354 83.8227 91.513 83.3734 91.427 cv
83.3598 91.4245 83.3463 91.4232 83.3328 91.4232 cv
83.1456 91.4232 82.9855 91.6621 83.1586 91.8074 cv
83.5326 92.1194 83.8353 92.4559 84.2562 92.7025 cv
84.7621 92.9988 84.9818 93.2005 85.0473 93.782 cv
85.0873 94.1355 85.0111 94.6004 85.3119 94.8572 cv
85.4173 94.9472 85.5382 94.9915 85.6602 94.9915 cv
85.7812 94.9915 85.9032 94.9479 86.0121 94.8621 cv
86.3204 94.6185 86.3809 94.3122 86.3147 93.9982 cv
86.5847 94.5936 86.7228 95.2058 86.7251 95.8195 cv
86.6499 95.6888 86.501 95.6098 86.3622 95.6098 cv
86.2235 95.6098 86.095 95.6888 86.0609 95.8743 cv
85.9037 96.7327 85.4242 97.5403 85.016 98.3069 cv
84.9418 98.4481 84.8549 98.5828 84.7699 98.7181 cv
84.87 98.4685 84.9512 98.2077 85.0025 97.964 cv
85.1318 97.568 85.1735 97.156 85.127 96.7467 cv
85.1528 96.6415 85.1787 96.5361 85.2045 96.4309 cv
85.2211 96.3626 85.1719 96.3224 85.1202 96.3224 cv
85.0965 96.3224 85.0723 96.3308 85.0537 96.3488 cv
84.9219 95.8334 84.6478 95.3317 84.2309 94.8816 cv
83.89 94.5136 83.5432 94.3218 83.192 94.2542 cv
82.6421 93.7858 81.9366 93.5221 81.1625 93.4309 cv
81.0673 93.4197 80.9737 93.4143 80.8816 93.4143 cv
79.8767 93.4143 79.0627 94.0611 78.474 94.8685 cv
78.2147 95.2248 78.5888 95.6295 78.9516 95.6295 cv
79.0724 95.6295 79.1921 95.5845 79.2865 95.4778 cv
79.4923 95.2445 79.6524 95.1788 79.8339 95.1788 cv
79.9995 95.1788 80.1829 95.2335 80.4349 95.2654 cv
80.4569 95.2682 80.4787 95.2708 80.5006 95.2732 cv
80.3226 95.3867 80.1448 95.4987 79.9672 95.6033 cv
78.9564 96.6521 77.8793 97.9872 79.2475 99.18 cv
79.0312 99.3012 78.9079 99.5573 79.0863 99.8333 cv
79.4577 100.407 80.2819 101.055 81.0151 101.055 cv
81.3692 101.055 81.7022 100.904 81.9525 100.519 cv
82.0426 100.381 82.0841 100.242 82.0832 100.111 cv
82.7878 100.09 83.4612 99.8917 83.9535 99.4749 cv
84.0039 99.4322 84.0527 99.3887 84.0999 99.3446 cv
84.0976 99.3486 84.0954 99.3527 84.0932 99.3567 cv
84.0423 99.449 84.1185 99.5332 84.2015 99.5332 cv
84.23 99.5332 84.2593 99.5233 84.2846 99.5003 cv
84.3451 99.4285 li
84.3295 99.4554 li
84.2387 99.6546 li
84.098 99.6082 li
83.932 99.6106 83.8637 99.7464 83.8764 99.8743 cv
83.3715 100.029 83.018 100.604 82.6185 100.94 cv
82.4633 101.071 82.5336 101.265 82.6674 101.373 cv
82.4125 101.563 82.1498 101.733 81.8539 101.875 cv
81.9135 102.012 li
82.3451 101.839 82.7299 101.625 83.101 101.345 cv
83.1137 101.323 li
83.1528 101.296 83.1925 101.269 83.2324 101.242 cv
82.9878 101.496 83.0376 101.939 83.4427 102.067 cv
83.9149 102.215 84.4308 102.407 84.931 102.407 cv
85.1934 102.407 85.4514 102.354 85.6967 102.215 cv
86.4301 101.798 86.8812 100.991 86.5931 100.161 cv
86.4808 99.8357 86.223 99.616 85.931 99.5403 cv
86.0355 99.4109 86.1439 99.2811 86.2309 99.1502 cv
86.5562 98.6628 86.7252 98.1629 86.797 97.6446 cv
87.1827 97.9536 87.5216 98.3429 87.7943 98.8226 cv
88.0629 99.294 88.2241 99.7991 88.2877 100.311 cv
87.8143 101.2 87.1354 102.029 86.2582 102.756 cv
85.1203 103.7 83.6152 104.128 82.0692 104.128 cv
78.5582 101.547 mo
78.5236 101.547 78.4867 101.55 78.4467 101.554 cv
78.348 101.566 78.2445 101.64 78.2533 101.753 cv
78.3178 102.472 79.266 102.722 79.8646 102.847 cv
79.8959 102.854 79.9258 102.857 79.9546 102.857 cv
80.3791 102.857 80.5238 102.187 80.0619 102.091 cv
79.7016 102.015 79.3969 101.888 79.0717 101.72 cv
78.8702 101.616 78.7477 101.547 78.5582 101.547 cv
81.2548 102.109 mo
81.2504 102.109 81.246 102.109 81.2416 102.109 cv
81.1107 102.11 81.0551 102.301 81.1762 102.362 cv
81.4623 102.507 81.7484 102.536 82.0639 102.592 cv
82.0748 102.594 82.0854 102.595 82.0955 102.595 cv
82.2611 102.595 82.3176 102.353 82.14 102.301 cv
81.8395 102.212 81.5676 102.109 81.2548 102.109 cv
78.3422 101.36 mo
78.3441 101.489 li
78.3422 101.36 li
76.3049 99.3713 mo
76.0593 99.3713 75.8205 99.6721 75.976 99.928 cv
76.267 100.406 76.3197 100.956 76.9926 101.043 cv
77.0079 101.045 77.0236 101.046 77.0394 101.046 cv
77.1567 101.046 77.281 100.99 77.3051 100.86 cv
77.4349 100.159 76.932 99.9349 76.5375 99.4832 cv
76.4686 99.4044 76.3864 99.3713 76.3049 99.3713 cv
77.3725 100.843 mo
77.3744 100.963 li
77.3725 100.843 li
77.8963 99.8421 mo
77.8958 99.8421 77.8954 99.8421 77.8949 99.8421 cv
77.7782 99.8435 77.7806 100.023 77.8955 100.023 cv
77.8959 100.023 77.8964 100.023 77.8969 100.023 cv
78.0126 100.021 78.0102 99.8421 77.8963 99.8421 cv
78.384 96.0896 mo
78.3519 96.0896 78.3189 96.0999 78.2875 96.1238 cv
77.4545 96.7615 77.7865 98.3074 78.1742 99.1092 cv
78.2243 99.2124 78.3044 99.2551 78.3868 99.2551 cv
78.571 99.2551 78.7667 99.0415 78.6635 98.8138 cv
78.4535 98.3484 78.3646 97.8558 78.4106 97.3475 cv
78.4428 96.9803 78.6176 96.6575 78.5844 96.2884 cv
78.5755 96.189 78.4839 96.0896 78.384 96.0896 cv
85.1068 95.0628 mo
85.1088 95.1912 li
85.1068 95.0628 li
83.7074 92.8494 mo
83.6185 92.9686 li
83.8647 93.263 84.1312 93.4949 84.4516 93.7034 cv
84.4889 93.7277 84.5253 93.7383 84.5593 93.7383 cv
84.7509 93.7383 84.8634 93.4025 84.6088 93.3162 cv
84.2709 93.2019 83.9945 93.055 83.7074 92.8494 cv
81.4523 92.022 mo
81.317 92.022 81.1783 92.0367 81.0346 92.0701 cv
80.6625 92.1565 80.3246 92.2913 80.0063 92.5013 cv
79.5961 92.7728 79.5561 93.0667 79.2465 93.4339 cv
79.1868 93.5043 79.2418 93.6174 79.3202 93.6174 cv
79.3381 93.6174 79.3572 93.6115 79.3764 93.598 cv
79.5639 93.4637 80.0941 93.3499 80.3412 93.2654 cv
80.6185 93.1692 80.9027 93.0721 81.1898 93.0066 cv
81.7178 92.8863 82.2081 92.6698 82.7359 92.6698 cv
82.827 92.6698 82.9193 92.6762 83.0131 92.6907 cv
83.0206 92.6919 83.0278 92.6925 83.0347 92.6925 cv
83.1522 92.6925 83.1848 92.5327 83.0658 92.4866 cv
82.5163 92.2753 82.0145 92.022 81.4523 92.022 cv
83.4033 101.121 mo
83.5989 100.978 83.7895 100.82 83.9398 100.641 cv
83.9506 100.641 li
84.0629 100.598 84.1781 100.567 84.2943 100.538 cv
84.0336 100.771 83.7533 100.977 83.4301 101.109 cv
83.421 101.113 83.412 101.117 83.4033 101.121 cv
.160784 .34902 .164706 rgb
f
82.3469 99.8448 mo
82.3404 99.8448 82.3338 99.8447 82.3273 99.8446 cv
82.9292 99.0734 82.5928 97.615 81.3148 97.615 cv
80.4708 97.615 80.0369 98.2533 80.0139 98.9087 cv
79.5125 98.5173 79.1864 97.8817 79.2768 97.1102 cv
79.3861 96.177 80.1371 95.4114 81.0961 95.3738 cv
81.1237 95.3727 81.1513 95.3722 81.1787 95.3722 cv
81.8608 95.3722 82.5088 95.7018 82.8383 96.2542 cv
82.7162 95.2943 82.2045 95.3548 81.307 95.3167 cv
81.036 95.3054 80.7708 95.3029 80.5006 95.2732 cv
81.3007 94.763 82.1027 94.2256 82.8863 94.2256 cv
82.9885 94.2256 83.0904 94.2347 83.192 94.2542 cv
83.4814 94.5008 83.7277 94.804 83.9183 95.1687 cv
84.3881 96.0662 84.4164 97.2405 84.0424 98.1717 cv
83.7506 98.8974 83.1948 99.8447 82.3469 99.8448 cv
.282353 .866667 .207843 rgb
f
82.3273 99.8446 mo
82.2589 99.8435 82.1888 99.8362 82.1166 99.8221 cv
81.9701 99.7938 81.8588 99.6365 81.8578 99.492 cv
81.8578 99.3851 81.8764 99.2947 81.8979 99.2059 cv
81.6817 99.293 81.4554 99.3341 81.2302 99.3341 cv
80.7942 99.3341 80.3618 99.1802 80.0139 98.9087 cv
80.0369 98.2533 80.4708 97.615 81.3148 97.615 cv
82.5928 97.615 82.9292 99.0734 82.3273 99.8446 cv
.415686 .988235 .333333 rgb
f
78.9516 95.6295 mo
78.5888 95.6295 78.2147 95.2248 78.474 94.8685 cv
79.0627 94.0611 79.8767 93.4143 80.8816 93.4143 cv
80.9737 93.4143 81.0673 93.4197 81.1625 93.4309 cv
81.9366 93.5221 82.6421 93.7858 83.192 94.2542 cv
83.0904 94.2347 82.9885 94.2256 82.8863 94.2256 cv
82.1027 94.2256 81.3007 94.763 80.5006 95.2732 cv
80.4787 95.2708 80.4569 95.2682 80.4349 95.2654 cv
80.1829 95.2335 79.9995 95.1788 79.8339 95.1788 cv
79.6524 95.1788 79.4923 95.2445 79.2865 95.4778 cv
79.1921 95.5845 79.0724 95.6295 78.9516 95.6295 cv
.203922 .466667 .192157 rgb
f
78.3868 99.2551 mo
78.3044 99.2551 78.2243 99.2124 78.1742 99.1092 cv
77.7865 98.3074 77.4545 96.7615 78.2875 96.1238 cv
78.3189 96.0999 78.3519 96.0896 78.384 96.0896 cv
78.4839 96.0896 78.5755 96.189 78.5844 96.2884 cv
78.6176 96.6575 78.4428 96.9803 78.4106 97.3475 cv
78.3646 97.8558 78.4535 98.3484 78.6635 98.8138 cv
78.7667 99.0415 78.571 99.2551 78.3868 99.2551 cv
f
82.036 100.112 mo
82.0517 100.102 82.0671 100.091 82.0822 100.08 cv
82.0828 100.09 82.0831 100.101 82.0832 100.111 cv
82.0675 100.111 82.0517 100.111 82.036 100.112 cv
80.256 99.7824 mo
79.9049 99.6409 79.5838 99.4575 79.3168 99.2386 cv
79.2931 99.2191 79.2699 99.1995 79.2475 99.18 cv
79.331 99.1332 79.4283 99.1066 79.5275 99.1066 cv
79.6412 99.1066 79.7572 99.1416 79.8578 99.2215 cv
79.923 99.2732 79.9903 99.3119 80.0594 99.3406 cv
80.0992 99.4986 80.1648 99.6491 80.256 99.7824 cv
.282353 .866667 .207843 rgb
f
81.9586 100.112 mo
81.3786 100.112 80.7836 99.9949 80.256 99.7824 cv
80.1648 99.6491 80.0992 99.4986 80.0594 99.3406 cv
80.202 99.3998 80.3521 99.4163 80.5061 99.4163 cv
80.6028 99.4163 80.7009 99.4098 80.7998 99.4033 cv
80.8987 99.3969 80.9983 99.3904 81.0978 99.3904 cv
81.2794 99.3904 81.4606 99.4119 81.6361 99.4944 cv
81.9057 99.6208 82.0682 99.8356 82.0822 100.08 cv
82.0671 100.091 82.0517 100.102 82.036 100.112 cv
82.0102 100.112 81.9845 100.112 81.9586 100.112 cv
.415686 .988235 .333333 rgb
f
81.0151 101.055 mo
80.2819 101.055 79.4577 100.407 79.0863 99.8333 cv
78.9079 99.5573 79.0312 99.3012 79.2475 99.18 cv
79.2699 99.1995 79.2931 99.2191 79.3168 99.2386 cv
79.5838 99.4575 79.9049 99.6409 80.256 99.7824 cv
80.7836 99.9949 81.3786 100.112 81.9586 100.112 cv
81.9845 100.112 82.0102 100.112 82.036 100.112 cv
82.0517 100.111 82.0675 100.111 82.0832 100.111 cv
82.0841 100.242 82.0426 100.381 81.9525 100.519 cv
81.7022 100.904 81.3692 101.055 81.0151 101.055 cv
.203922 .466667 .192157 rgb
f
84.4808 96.2698 mo
84.4789 96.1414 li
84.4808 96.2698 li
.282353 .866667 .207843 rgb
f
84.9174 97.1841 mo
84.8319 97.1841 84.7427 97.1158 84.7806 97.0188 cv
84.8637 96.8079 84.9467 96.5965 85.0297 96.3855 cv
85.0355 96.3705 85.0438 96.3583 85.0537 96.3488 cv
85.0875 96.4808 85.1119 96.6136 85.127 96.7467 cv
85.0991 96.8604 85.0712 96.9741 85.0434 97.0877 cv
85.0265 97.1556 84.9727 97.1841 84.9174 97.1841 cv
f
85.127 96.7467 mo
85.1119 96.6136 85.0875 96.4808 85.0537 96.3488 cv
85.0723 96.3308 85.0965 96.3224 85.1202 96.3224 cv
85.1719 96.3224 85.2211 96.3626 85.2045 96.4309 cv
85.1787 96.5361 85.1528 96.6415 85.127 96.7467 cv
.203922 .466667 .192157 rgb
f
85.1088 95.1912 mo
85.1068 95.0628 li
85.1088 95.1912 li
f
84.5593 93.7383 mo
84.5253 93.7383 84.4889 93.7277 84.4516 93.7034 cv
84.1312 93.4949 83.8647 93.263 83.6185 92.9686 cv
83.7074 92.8494 li
83.9945 93.055 84.2709 93.2019 84.6088 93.3162 cv
84.8634 93.4025 84.7509 93.7383 84.5593 93.7383 cv
f
79.3202 93.6174 mo
79.2418 93.6174 79.1868 93.5043 79.2465 93.4339 cv
79.5561 93.0667 79.5961 92.7728 80.0063 92.5013 cv
80.3246 92.2913 80.6625 92.1565 81.0346 92.0701 cv
81.1783 92.0367 81.317 92.022 81.4523 92.022 cv
82.0145 92.022 82.5163 92.2753 83.0658 92.4866 cv
83.1848 92.5327 83.1522 92.6925 83.0347 92.6925 cv
83.0278 92.6925 83.0206 92.6919 83.0131 92.6907 cv
82.9193 92.6762 82.827 92.6698 82.7359 92.6698 cv
82.2081 92.6698 81.7178 92.8863 81.1898 93.0066 cv
80.9027 93.0721 80.6185 93.1692 80.3412 93.2654 cv
80.0941 93.3499 79.5639 93.4637 79.3764 93.598 cv
79.3572 93.6115 79.3381 93.6174 79.3202 93.6174 cv
f
84.0999 99.3446 mo
84.3832 98.8345 84.6922 98.4781 84.8637 97.8939 cv
84.8747 97.8561 84.9038 97.8395 84.9332 97.8395 cv
84.9763 97.8395 85.0202 97.8751 85.0092 97.9315 cv
85.007 97.9423 85.0048 97.9531 85.0025 97.964 cv
84.8399 98.4615 84.5389 98.9338 84.0999 99.3446 cv
.282353 .866667 .207843 rgb
f
84.931 102.407 mo
84.4308 102.407 83.9149 102.215 83.4427 102.067 cv
83.0376 101.939 82.9878 101.496 83.2324 101.242 cv
83.1925 101.269 83.1528 101.296 83.1137 101.323 cv
83.101 101.345 li
82.7299 101.625 82.3451 101.839 81.9135 102.012 cv
81.8539 101.875 li
82.1498 101.733 82.4125 101.563 82.6674 101.373 cv
82.5336 101.265 82.4633 101.071 82.6185 100.94 cv
83.018 100.604 83.3715 100.029 83.8764 99.8743 cv
83.8637 99.7464 83.932 99.6106 84.098 99.6082 cv
84.2387 99.6546 li
84.3295 99.4554 li
84.3451 99.4285 li
84.2846 99.5003 li
84.2593 99.5233 84.23 99.5332 84.2015 99.5332 cv
84.1185 99.5332 84.0423 99.449 84.0932 99.3567 cv
84.0954 99.3527 84.0976 99.3486 84.0999 99.3446 cv
84.5389 98.9338 84.8399 98.4615 85.0025 97.964 cv
84.9512 98.2077 84.87 98.4685 84.7699 98.7181 cv
84.8549 98.5828 84.9418 98.4481 85.016 98.3069 cv
85.4242 97.5403 85.9037 96.7327 86.0609 95.8743 cv
86.095 95.6888 86.2235 95.6098 86.3622 95.6098 cv
86.501 95.6098 86.6499 95.6888 86.7251 95.8195 cv
86.7492 95.8615 86.7658 95.9089 86.7719 95.9607 cv
86.8411 96.546 86.8717 97.1052 86.797 97.6446 cv
86.7252 98.1629 86.5562 98.6628 86.2309 99.1502 cv
86.1439 99.2811 86.0355 99.4109 85.931 99.5403 cv
86.223 99.616 86.4808 99.8357 86.5931 100.161 cv
86.8812 100.991 86.4301 101.798 85.6967 102.215 cv
85.4514 102.354 85.1934 102.407 84.931 102.407 cv
83.9398 100.641 mo
83.7895 100.82 83.5989 100.978 83.4033 101.121 cv
83.412 101.117 83.421 101.113 83.4301 101.109 cv
83.7533 100.977 84.0336 100.771 84.2943 100.538 cv
84.1781 100.567 84.0629 100.598 83.9506 100.641 cv
83.9398 100.641 li
.203922 .466667 .192157 rgb
f
77.8955 100.023 mo
77.7806 100.023 77.7782 99.8435 77.8949 99.8421 cv
77.8954 99.8421 77.8958 99.8421 77.8963 99.8421 cv
78.0102 99.8421 78.0126 100.021 77.8969 100.023 cv
77.8964 100.023 77.8959 100.023 77.8955 100.023 cv
f
76.8672 99.4718 mo
76.723 99.4718 76.5765 99.4042 76.473 99.2464 cv
76.3264 99.0215 76.1557 98.7738 76.0408 98.5119 cv
75.9736 98.3586 75.9255 98.2005 75.9125 98.0394 cv
75.8744 97.5843 76.1586 97.2449 76.2621 96.8182 cv
76.2711 96.7804 76.2928 96.7557 76.3197 96.7425 cv
76.3354 96.7348 76.3529 96.7311 76.3706 96.7311 cv
76.4212 96.7311 76.474 96.7612 76.4945 96.8152 cv
76.5316 96.9153 76.5873 97.0037 76.6488 97.0872 cv
76.5795 96.618 76.5512 96.1414 76.5443 95.6707 cv
76.4154 95.5784 76.3432 95.4231 76.4193 95.2254 cv
76.4701 95.0921 76.5199 94.9319 76.5717 94.762 cv
76.5765 94.6629 76.5726 94.5565 76.5795 94.4593 cv
76.5942 94.2659 76.6889 94.1517 76.8031 94.0701 cv
76.8754 93.8904 76.9564 93.72 77.0541 93.574 cv
76.9076 93.3899 76.8695 93.1424 77.1068 92.9349 cv
77.4408 92.6434 77.7397 92.3167 78.1479 92.1404 cv
78.164 92.1335 78.1812 92.1303 78.1984 92.1303 cv
78.2905 92.1303 78.3875 92.2206 78.3793 92.3118 cv
78.3402 92.7576 78.1156 93.1517 77.9418 93.5623 cv
77.8705 93.6585 li
77.8822 94.0325 77.7182 94.4622 77.5472 94.8528 cv
77.4223 95.3406 77.2943 95.8089 77.2396 96.325 cv
77.1527 97.1394 77.3607 97.8767 77.7836 98.5701 cv
77.9463 98.836 77.6979 99.0892 77.4617 99.0892 cv
77.4243 99.0892 77.3871 99.0828 77.3519 99.0691 cv
77.3086 99.3095 77.0907 99.4718 76.8672 99.4718 cv
f
79.0556 91.4893 mo
79.0371 91.4371 79.0529 91.3675 79.1 91.3314 cv
79.5229 91.0062 79.4994 90.8284 80.0092 90.785 cv
80.0201 90.784 80.0308 90.7836 80.0412 90.7836 cv
80.1072 90.7836 80.1609 90.8019 80.2025 90.8324 cv
79.8123 91.0392 79.4301 91.2641 79.0556 91.4893 cv
.247059 .541176 .247059 rgb
f
79.1508 91.5555 mo
79.1004 91.5555 79.069 91.527 79.0556 91.4893 cv
79.4301 91.2641 79.8123 91.0392 80.2025 90.8324 cv
80.3607 90.9484 80.3454 91.2405 80.1762 91.3719 cv
79.9765 91.5271 79.8182 91.5514 79.6364 91.5514 cv
79.5948 91.5514 79.552 91.5502 79.5071 91.5489 cv
79.4623 91.5476 79.4155 91.5463 79.3659 91.5463 cv
79.3034 91.5463 79.2364 91.5483 79.1635 91.555 cv
79.1591 91.5554 79.1549 91.5555 79.1508 91.5555 cv
.203922 .466667 .192157 rgb
f
85.6602 94.9915 mo
85.5382 94.9915 85.4173 94.9472 85.3119 94.8572 cv
85.0111 94.6004 85.0873 94.1355 85.0473 93.782 cv
84.9818 93.2005 84.7621 92.9988 84.2562 92.7025 cv
83.8353 92.4559 83.5326 92.1194 83.1586 91.8074 cv
82.9855 91.6621 83.1456 91.4232 83.3328 91.4232 cv
83.3463 91.4232 83.3598 91.4245 83.3734 91.427 cv
83.8227 91.513 84.269 91.5354 84.6537 91.7933 cv
84.932 91.9801 85.148 92.2093 85.3564 92.457 cv
85.4127 92.5239 85.4685 92.5922 85.5248 92.6614 cv
85.7822 92.9777 86.2093 93.4976 86.3147 93.9982 cv
86.3809 94.3122 86.3204 94.6185 86.0121 94.8621 cv
85.9032 94.9479 85.7812 94.9915 85.6602 94.9915 cv
f
79.9546 102.857 mo
79.9258 102.857 79.8959 102.854 79.8646 102.847 cv
79.266 102.722 78.3178 102.472 78.2533 101.753 cv
78.2445 101.64 78.348 101.566 78.4467 101.554 cv
78.4867 101.55 78.5236 101.547 78.5582 101.547 cv
78.7477 101.547 78.8702 101.616 79.0717 101.72 cv
79.3969 101.888 79.7016 102.015 80.0619 102.091 cv
80.5238 102.187 80.3791 102.857 79.9546 102.857 cv
f
77.0394 101.046 mo
77.0236 101.046 77.0079 101.045 76.9926 101.043 cv
76.3197 100.956 76.267 100.406 75.976 99.928 cv
75.8205 99.6721 76.0593 99.3713 76.3049 99.3713 cv
76.3864 99.3713 76.4686 99.4044 76.5375 99.4832 cv
76.932 99.9349 77.4349 100.159 77.3051 100.86 cv
77.281 100.99 77.1567 101.046 77.0394 101.046 cv
f
77.3744 100.963 mo
77.3725 100.843 li
77.3744 100.963 li
f
78.3441 101.489 mo
78.3422 101.36 li
78.3441 101.489 li
f
82.0955 102.595 mo
82.0854 102.595 82.0748 102.594 82.0639 102.592 cv
81.7484 102.536 81.4623 102.507 81.1762 102.362 cv
81.0551 102.301 81.1107 102.11 81.2416 102.109 cv
81.246 102.109 81.2504 102.109 81.2548 102.109 cv
81.5676 102.109 81.8395 102.212 82.14 102.301 cv
82.3176 102.353 82.2611 102.595 82.0955 102.595 cv
f
8.45789 99.2064 mo
1.59165 91.3074 -1.61331 83.8784 .7963 78.9637 cv
.763065 78.7454 li
.746486 76.7571 .78064 74.7439 1.98085 73.3655 cv
3.06777 72.1175 4.77773 71.2981 7.02285 70.8836 cv
7.96411 70.7098 8.99512 70.6138 10.1007 70.5925 cv
10.2439 71.5566 10.3526 72.517 10.4066 73.4729 cv
10.4453 74.1573 10.4615 74.8392 10.459 75.5179 cv
8.19159 77.6084 6.59361 80.1323 5.96913 83.14 cv
5.9457 83.2498 5.93103 83.3626 5.9125 83.4744 cv
5.80116 83.5745 5.68985 83.6746 5.57851 83.7747 cv
5.391 83.9412 5.53064 84.2332 5.80701 84.5169 cv
5.72891 86.4978 6.27479 88.7049 7.25626 91.0735 cv
7.33242 91.4588 7.4281 91.8533 7.56288 92.2664 cv
7.79737 92.9861 8.11357 93.7333 8.50745 94.501 cv
8.48277 95.1947 8.47548 95.8911 8.48963 96.5901 cv
8.49258 96.6936 8.51015 96.7859 8.52478 96.8806 cv
8.41248 97.1331 8.35099 97.428 8.36757 97.7737 cv
8.39089 98.2524 8.42104 98.7298 8.45789 99.2064 cv
.964306 .99391 .968535 rgb
f
40.1423 111.132 mo
42.3179 109.781 44.3361 108.244 46.0594 106.531 cv
45.1604 108.289 43.7436 109.751 41.5199 110.679 cv
41.1078 110.852 40.6467 111.003 40.1423 111.132 cv
20.7382 108.532 mo
18.0503 107.353 15.4303 105.813 13.0717 103.864 cv
12.8775 102.798 12.7186 101.722 12.5974 100.637 cv
13.3388 101.57 14.2608 102.444 15.3968 103.237 cv
15.3288 103.864 15.5824 104.522 16.307 104.963 cv
18.434 106.259 20.6986 107.15 23.0385 107.783 cv
22.9753 107.85 22.9191 107.924 22.8698 108.002 cv
22.3545 108.083 21.8357 108.184 21.3109 108.308 cv
21.0937 108.36 20.9032 108.436 20.7382 108.532 cv
43.3744 103.4 mo
43.8023 102.683 44.0885 101.944 44.2535 101.192 cv
44.3502 101.372 44.4445 101.544 44.5355 101.708 cv
44.3269 102.125 44.1005 102.526 43.8587 102.901 cv
43.7013 103.07 43.5396 103.236 43.3744 103.4 cv
47.816 92.0161 mo
47.0949 91.2396 46.3215 90.5001 45.5775 89.8094 cv
45.5121 89.449 45.4418 89.0901 45.3939 88.7234 cv
45.37 88.5379 45.3245 88.3666 45.2605 88.2118 cv
45.7453 88.072 46.1789 87.7472 46.4676 87.3308 cv
46.9505 88.2538 47.2876 89.1601 47.4945 90.0379 cv
47.6538 90.7141 47.7579 91.3728 47.816 92.0161 cv
40.2461 83.5788 mo
40.1263 83.4485 40.0024 83.317 39.8744 83.1844 cv
38.0824 81.3279 35.6264 79.4695 32.9252 77.992 cv
31.7111 77.3281 30.5167 76.7919 29.3383 76.3423 cv
28.9602 75.9798 28.4427 75.7442 27.8473 75.7442 cv
27.7849 75.7442 27.7218 75.7467 27.6578 75.752 cv
27.2967 75.6353 26.937 75.5251 26.5786 75.42 cv
28.8438 75.7242 31.0756 76.1828 33.2562 77.4734 cv
35.7894 78.9729 38.0902 80.6609 39.8607 83.0467 cv
39.9927 83.2243 40.1208 83.4018 40.2461 83.5788 cv
18.6683 73.7755 mo
18.2842 73.7392 17.91 73.7136 17.5488 73.6997 cv
17.7271 73.1447 17.9091 72.5907 18.094 72.0378 cv
18.0095 72.6622 18.1792 73.3213 18.6683 73.7755 cv
14.357 73.3963 mo
14.2716 72.5411 14.1482 71.6707 14.0016 70.7902 cv
14.4031 70.8351 14.8105 70.8874 15.2233 70.9469 cv
14.9275 71.7609 14.638 72.5772 14.357 73.3963 cv
.831372 .968627 .686274 rgb
f
35.2032 111.672 mo
34.5555 111.672 33.8828 111.65 33.1915 111.604 cv
33.4614 111.501 33.7308 111.389 34.0004 111.269 cv
34.2865 111.142 34.4467 110.95 34.5414 110.74 cv
34.5638 110.741 li
37.0994 110.737 39.7952 109.828 41.5011 107.929 cv
42.0238 107.869 42.5389 107.8 43.0443 107.725 cv
43.4607 107.663 43.6922 107.383 43.7657 107.049 cv
44.1912 106.923 44.6137 106.788 45.0326 106.644 cv
45.4105 106.515 45.8052 106.382 46.2031 106.239 cv
46.1568 106.337 46.1088 106.435 46.0594 106.531 cv
44.3361 108.244 42.3179 109.781 40.1423 111.132 cv
38.7757 111.483 37.0924 111.672 35.2032 111.672 cv
22.8698 108.002 mo
22.9191 107.924 22.9753 107.85 23.0385 107.783 cv
20.6986 107.15 18.434 106.259 16.307 104.963 cv
15.5824 104.522 15.3288 103.864 15.3968 103.237 cv
16.1972 103.796 17.1039 104.314 18.1283 104.783 cv
19.1456 105.249 20.1949 105.701 21.2526 106.125 cv
22.1718 106.806 23.1478 107.372 24.1658 107.832 cv
23.7357 107.878 23.3039 107.933 22.8698 108.002 cv
42.6667 104.402 mo
42.784 104.261 42.8969 104.116 43.0053 103.964 cv
43.1383 103.778 43.2614 103.59 43.3744 103.4 cv
43.5396 103.236 43.7013 103.07 43.8587 102.901 cv
43.8483 102.917 43.838 102.933 43.8275 102.949 cv
43.6127 103.277 43.6088 103.593 43.7172 103.862 cv
43.3718 104.052 43.0214 104.232 42.6667 104.402 cv
46.8412 101.987 mo
46.8634 101.925 46.8848 101.864 46.9054 101.802 cv
46.9462 101.865 46.9905 101.925 47.0384 101.982 cv
47.0144 101.981 46.9903 101.98 46.9661 101.98 cv
46.9246 101.98 46.883 101.982 46.8412 101.987 cv
44.5355 101.708 mo
44.4445 101.544 44.3502 101.372 44.2535 101.192 cv
44.4963 100.086 44.476 98.9537 44.2558 97.8245 cv
44.5734 96.9468 44.7766 96.0627 44.8607 95.2732 cv
44.9148 94.765 44.9423 94.1687 44.9324 93.5262 cv
45.6992 94.9949 46.1669 96.5559 45.7777 98.2464 cv
45.5132 99.3933 45.0857 100.608 44.5355 101.708 cv
47.1049 98.2734 mo
47.0694 98.1033 47.0274 97.9311 46.9789 97.7566 cv
46.3878 95.6297 46.2202 93.8608 44.8632 92.2287 cv
44.7285 90.7598 44.3895 89.2047 43.7398 87.9796 cv
44.0637 88.1931 44.4059 88.2867 44.74 88.2867 cv
44.9171 88.2867 45.0919 88.2604 45.2605 88.2118 cv
45.3245 88.3666 45.37 88.5379 45.3939 88.7234 cv
45.4418 89.0901 45.5121 89.449 45.5775 89.8094 cv
46.3215 90.5001 47.0949 91.2396 47.816 92.0161 cv
48.02 94.2776 47.6537 96.3445 47.1049 98.2734 cv
.72549 .819608 .623529 rgb
f
33.1915 111.604 mo
32.6492 111.569 32.0962 111.519 31.5321 111.454 cv
32.2242 111.336 32.8982 111.164 33.5453 110.909 cv
35.0906 110.302 36.5782 109.312 37.9968 108.203 cv
39.1875 108.157 40.3621 108.062 41.5011 107.929 cv
39.7952 109.828 37.0994 110.737 34.5638 110.741 cv
34.5414 110.74 li
34.4467 110.95 34.2865 111.142 34.0004 111.269 cv
33.7308 111.389 33.4614 111.501 33.1915 111.604 cv
24.1658 107.832 mo
23.1478 107.372 22.1718 106.806 21.2526 106.125 cv
22.7446 106.722 24.2536 107.262 25.7128 107.701 cv
25.1976 107.735 24.6827 107.776 24.1658 107.832 cv
43.7657 107.049 mo
43.8976 106.449 43.5205 105.676 42.7907 105.676 cv
42.7828 105.676 42.775 105.676 42.767 105.676 cv
42.5598 105.681 42.352 105.683 42.1441 105.683 cv
41.8642 105.683 41.5838 105.679 41.3028 105.671 cv
41.8019 105.308 42.2603 104.888 42.6667 104.402 cv
43.0214 104.232 43.3718 104.052 43.7172 103.862 cv
43.6088 103.593 43.6127 103.277 43.8275 102.949 cv
43.838 102.933 43.8483 102.917 43.8587 102.901 cv
44.1005 102.526 44.3269 102.125 44.5355 101.708 cv
45.0857 100.608 45.5132 99.3933 45.7777 98.2464 cv
46.1669 96.5559 45.6992 94.9949 44.9324 93.5262 cv
44.9261 93.1094 44.904 92.6728 44.8632 92.2287 cv
46.2202 93.8608 46.3878 95.6297 46.9789 97.7566 cv
47.0274 97.9311 47.0694 98.1033 47.1049 98.2734 cv
46.955 98.8002 46.7916 99.3165 46.6224 99.824 cv
46.6536 99.8519 46.6841 99.8797 46.7139 99.9076 cv
46.4681 100.516 46.5475 101.253 46.9054 101.802 cv
46.8848 101.864 46.8634 101.925 46.8412 101.987 cv
46.883 101.982 46.9246 101.98 46.9661 101.98 cv
46.9903 101.98 47.0144 101.981 47.0384 101.982 cv
47.1218 102.082 47.216 102.173 47.3206 102.252 cv
47.1211 103.661 46.7794 105.016 46.2031 106.239 cv
45.8052 106.382 45.4105 106.515 45.0326 106.644 cv
44.6137 106.788 44.1912 106.923 43.7657 107.049 cv
.596078 .686274 .498039 rgb
f
37.9968 108.203 mo
38.7745 107.595 39.5315 106.952 40.266 106.317 cv
40.6272 106.125 40.9738 105.911 41.3028 105.671 cv
41.5838 105.679 41.8642 105.683 42.1441 105.683 cv
42.352 105.683 42.5598 105.681 42.767 105.676 cv
42.775 105.676 42.7828 105.676 42.7907 105.676 cv
43.5205 105.676 43.8976 106.449 43.7657 107.049 cv
43.6922 107.383 43.4607 107.663 43.0443 107.725 cv
42.5389 107.8 42.0238 107.869 41.5011 107.929 cv
40.3621 108.062 39.1875 108.157 37.9968 108.203 cv
.439216 .513725 .352941 rgb
f
14.4124 74.0186 mo
14.3963 73.8119 14.3778 73.6049 14.357 73.3963 cv
14.638 72.5772 14.9275 71.7609 15.2233 70.9469 cv
15.8785 71.0414 16.5474 71.1542 17.2279 71.285 cv
17.2497 71.2842 17.2719 71.2838 17.2945 71.2838 cv
17.4233 71.2838 17.5664 71.2971 17.725 71.3274 cv
17.9025 71.3609 18.0817 71.3956 18.2618 71.4313 cv
18.179 71.6236 18.1222 71.8288 18.094 72.0378 cv
17.9091 72.5907 17.7271 73.1447 17.5488 73.6997 cv
17.345 73.6919 17.1453 73.688 16.9501 73.688 cv
15.9719 73.688 15.107 73.7885 14.4124 74.0186 cv
.929412 .992157 .886274 rgb
f
29.3383 76.3423 mo
28.7746 76.1272 28.2146 75.932 27.6578 75.752 cv
27.7218 75.7467 27.7849 75.7442 27.8473 75.7442 cv
28.4427 75.7442 28.9602 75.9798 29.3383 76.3423 cv
f
13.0717 103.864 mo
12.2085 103.151 11.3796 102.382 10.5961 101.557 cv
9.84881 100.77 9.13568 99.9861 8.45789 99.2064 cv
8.42104 98.7298 8.39089 98.2524 8.36757 97.7737 cv
8.35099 97.428 8.41248 97.1331 8.52478 96.8806 cv
8.51015 96.7859 8.49258 96.6936 8.48963 96.5901 cv
8.47548 95.8911 8.48277 95.1947 8.50745 94.501 cv
9.10929 95.6741 9.89245 96.8951 10.8422 98.1385 cv
10.9457 98.2737 11.0512 98.41 11.1586 98.5472 cv
11.5102 99.1111 11.8852 99.6776 12.2982 100.244 cv
12.3945 100.376 12.4942 100.507 12.5974 100.637 cv
12.7186 101.722 12.8775 102.798 13.0717 103.864 cv
10.459 75.5179 mo
10.4615 74.8392 10.4453 74.1573 10.4066 73.4729 cv
10.3526 72.517 10.2439 71.5566 10.1007 70.5925 cv
10.2583 70.5895 10.4175 70.588 10.5781 70.588 cv
11.6574 70.588 12.803 70.6562 14.0016 70.7902 cv
14.1482 71.6707 14.2716 72.5411 14.357 73.3963 cv
14.3778 73.6049 14.3963 73.8119 14.4124 74.0186 cv
13.8357 74.2097 13.3765 74.4901 13.0678 74.8763 cv
12.6768 74.6285 12.2103 74.4396 11.8992 74.4396 cv
11.7946 74.4396 11.7076 74.4609 11.6469 74.5086 cv
11.2333 74.8331 10.8368 75.1695 10.459 75.5179 cv
.156863 .145098 .121569 rgb
f
31.5321 111.454 mo
28.1315 111.061 24.3726 110.127 20.7382 108.532 cv
20.9032 108.436 21.0937 108.36 21.3109 108.308 cv
21.8357 108.184 22.3545 108.083 22.8698 108.002 cv
23.3039 107.933 23.7357 107.878 24.1658 107.832 cv
24.6827 107.776 25.1976 107.735 25.7128 107.701 cv
27.5741 108.262 29.3549 108.66 30.9177 108.806 cv
31.7334 108.93 32.5079 108.997 33.223 109.007 cv
33.4058 109.071 33.583 109.11 33.732 109.11 cv
33.8727 109.11 33.9883 109.076 34.06 108.996 cv
34.1468 108.9 34.2286 108.801 34.3129 108.702 cv
34.4279 108.712 34.5372 108.717 34.641 108.717 cv
35.5772 108.717 36.0766 108.33 36.4391 107.852 cv
38.4779 106.656 40.1854 104.378 41.1557 102.116 cv
42.5948 101.202 43.6401 99.5257 44.2558 97.8245 cv
44.476 98.9537 44.4963 100.086 44.2535 101.192 cv
44.0885 101.944 43.8023 102.683 43.3744 103.4 cv
43.2614 103.59 43.1383 103.778 43.0053 103.964 cv
42.8969 104.116 42.784 104.261 42.6667 104.402 cv
42.2603 104.888 41.8019 105.308 41.3028 105.671 cv
40.9738 105.911 40.6272 106.125 40.266 106.317 cv
39.5315 106.952 38.7745 107.595 37.9968 108.203 cv
36.5782 109.312 35.0906 110.302 33.5453 110.909 cv
32.8982 111.164 32.2242 111.336 31.5321 111.454 cv
f
44.74 88.2867 mo
44.4059 88.2867 44.0637 88.1931 43.7398 87.9796 cv
43.359 87.2615 42.8713 86.6568 42.2553 86.2494 cv
41.7718 85.4131 41.1172 84.5266 40.2461 83.5788 cv
40.1208 83.4018 39.9927 83.2243 39.8607 83.0467 cv
38.0902 80.6609 35.7894 78.9729 33.2562 77.4734 cv
31.0756 76.1828 28.8438 75.7242 26.5786 75.42 cv
25.7973 75.1911 25.022 74.9869 24.2514 74.7947 cv
22.339 74.3179 20.4001 73.939 18.6683 73.7755 cv
18.1792 73.3213 18.0095 72.6622 18.094 72.0378 cv
18.1222 71.8288 18.179 71.6236 18.2618 71.4313 cv
23.9694 72.5644 30.9203 74.8471 37.0814 78.473 cv
41.9876 81.3606 44.9493 84.4294 46.4676 87.3308 cv
46.1789 87.7472 45.7453 88.072 45.2605 88.2118 cv
45.0919 88.2604 44.9171 88.2867 44.74 88.2867 cv
f
47.3206 102.252 mo
47.216 102.173 47.1218 102.082 47.0384 101.982 cv
46.9905 101.925 46.9462 101.865 46.9054 101.802 cv
46.5475 101.253 46.4681 100.516 46.7139 99.9076 cv
47.1847 100.348 47.4808 100.791 47.4486 101.148 cv
47.4144 101.519 47.3723 101.887 47.3206 102.252 cv
f
8.09414 85.7357 mo
8.1 85.3782 8.12539 85.0277 8.16835 84.6839 cv
8.33732 84.5345 8.5082 84.387 8.67227 84.2347 cv
8.76796 84.2933 8.86759 84.3484 8.96913 84.3963 cv
8.64784 84.8274 8.35099 85.2713 8.09414 85.7357 cv
.964306 .99391 .968535 rgb
f
8.50745 94.501 mo
8.11357 93.7333 7.79737 92.9861 7.56288 92.2664 cv
7.4281 91.8533 7.33242 91.4588 7.25626 91.0735 cv
6.27479 88.7049 5.72891 86.4978 5.80701 84.5169 cv
5.53064 84.2332 5.391 83.9412 5.57851 83.7747 cv
5.68985 83.6746 5.80116 83.5745 5.9125 83.4744 cv
5.93103 83.3626 5.9457 83.2498 5.96913 83.14 cv
6.59361 80.1323 8.19159 77.6084 10.459 75.5179 cv
10.435 81.9339 8.73457 88.117 8.50745 94.501 cv
8.67227 84.2347 mo
8.5082 84.387 8.33732 84.5345 8.16835 84.6839 cv
8.12539 85.0277 8.1 85.3782 8.09414 85.7357 cv
8.35099 85.2713 8.64784 84.8274 8.96913 84.3963 cv
8.86759 84.3484 8.76796 84.2933 8.67227 84.2347 cv
.899408 .982837 .911326 rgb
f
15.3968 103.237 mo
14.2608 102.444 13.3388 101.57 12.5974 100.637 cv
12.4916 99.69 12.4144 98.7355 12.3676 97.7737 cv
12.3627 97.6624 12.3402 97.5623 12.3217 97.4607 cv
12.433 97.2132 12.4965 96.9246 12.4896 96.5901 cv
12.4763 95.9306 12.4836 95.2731 12.5076 94.618 cv
12.8157 96.3739 13.4347 98.4144 15.184 100.542 cv
15.5301 100.963 15.9054 101.371 16.3051 101.766 cv
15.8036 102.094 15.4602 102.652 15.3968 103.237 cv
42.0116 86.1024 mo
41.8952 86.0387 41.7747 85.9818 41.6498 85.9319 cv
41.4867 85.7181 41.2289 85.5125 40.9389 85.3509 cv
39.6801 83.7274 37.8959 82.1063 35.5678 80.7679 cv
33.853 79.7825 32.0915 79.0763 30.3744 78.5416 cv
30.3567 78.3591 30.3054 78.1816 30.2172 78.0228 cv
30.1449 77.8929 30.0648 77.7684 29.9877 77.6419 cv
29.9361 77.1558 29.7014 76.6905 29.3383 76.3423 cv
30.5167 76.7919 31.7111 77.3281 32.9252 77.992 cv
35.6264 79.4695 38.0824 81.3279 39.8744 83.1844 cv
40.0024 83.317 40.1263 83.4485 40.2461 83.5788 cv
40.8545 84.4384 41.397 85.2872 42.0116 86.1024 cv
13.8476 83.5596 mo
14.0335 82.2571 14.2 80.952 14.3166 79.6397 cv
14.6865 79.8484 15.1099 79.9576 15.5334 79.9576 cv
16.1921 79.9577 16.8508 79.6935 17.309 79.1282 cv
17.5697 78.8065 17.5414 78.3919 17.184 78.1526 cv
16.8412 77.9236 16.5033 77.8865 16.3793 77.5066 cv
16.266 77.1624 16.8295 76.014 16.9428 75.6404 cv
17.1391 74.9917 17.3415 74.3449 17.5488 73.6997 cv
17.91 73.7136 18.2842 73.7392 18.6683 73.7755 cv
18.8766 73.9689 19.1429 74.1253 19.4721 74.2259 cv
21.864 74.9567 24.2391 75.106 26.5786 75.42 cv
26.937 75.5251 27.2967 75.6353 27.6578 75.752 cv
27.5646 75.7597 27.4698 75.7732 27.3734 75.7928 cv
27.0492 75.8587 26.7728 76.0496 26.5521 76.2981 cv
26.4379 76.2947 26.3236 76.2918 26.2094 76.2884 cv
25.6918 76.2742 25.1732 76.261 24.6547 76.2493 cv
23.514 76.2225 22.3734 76.1966 21.2328 76.1702 cv
21.2169 76.1699 21.201 76.1697 21.1853 76.1697 cv
19.9971 76.1697 19.5522 77.2112 19.7992 78.0922 cv
17.1595 79.088 15.0812 81.0563 13.8476 83.5596 cv
.776471 .956863 .654902 rgb
f
21.2526 106.125 mo
20.1949 105.701 19.1456 105.249 18.1283 104.783 cv
17.1039 104.314 16.1972 103.796 15.3968 103.237 cv
15.4602 102.652 15.8036 102.094 16.3051 101.766 cv
17.0716 102.523 17.9293 103.231 18.8484 103.885 cv
18.8773 103.942 18.9135 103.996 18.9574 104.044 cv
19.6717 104.831 20.4401 105.523 21.2526 106.125 cv
13.4978 85.91 mo
13.6169 85.1271 13.7358 84.3438 13.8476 83.5596 cv
15.0812 81.0563 17.1595 79.088 19.7992 78.0922 cv
19.8047 78.1116 19.8105 78.1309 19.8166 78.1502 cv
19.6145 78.2762 19.4165 78.4081 19.2181 78.5423 cv
16.4091 80.4455 14.5762 82.9825 13.4978 85.91 cv
.678431 .823529 .596078 rgb
f
25.7128 107.701 mo
24.2536 107.262 22.7446 106.722 21.2526 106.125 cv
20.4401 105.523 19.6717 104.831 18.9574 104.044 cv
18.9135 103.996 18.8773 103.942 18.8484 103.885 cv
21.117 105.5 23.7611 106.784 26.341 107.664 cv
26.1313 107.675 25.9222 107.688 25.7128 107.701 cv
.560784 .701961 .482353 rgb
f
15.5334 79.9576 mo
15.1099 79.9576 14.6865 79.8484 14.3166 79.6397 cv
14.4417 78.2307 14.5092 76.8136 14.4809 75.3841 cv
14.4719 74.9342 14.4483 74.4787 14.4124 74.0186 cv
15.107 73.7885 15.9719 73.688 16.9501 73.688 cv
17.1453 73.688 17.345 73.6919 17.5488 73.6997 cv
17.3415 74.3449 17.1391 74.9917 16.9428 75.6404 cv
16.8295 76.014 16.266 77.1624 16.3793 77.5066 cv
16.5033 77.8865 16.8412 77.9236 17.184 78.1526 cv
17.5414 78.3919 17.5697 78.8065 17.309 79.1282 cv
16.8508 79.6935 16.1921 79.9577 15.5334 79.9576 cv
.866667 .984314 .835294 rgb
f
30.3744 78.5416 mo
28.6337 77.9995 26.9387 77.6334 25.3852 77.3313 cv
24.6044 77.1796 23.9278 77.113 23.3309 77.113 cv
21.7665 77.113 20.7471 77.57 19.8166 78.1502 cv
19.8105 78.1309 19.8047 78.1116 19.7992 78.0922 cv
19.5522 77.2112 19.9971 76.1697 21.1853 76.1697 cv
21.201 76.1697 21.2169 76.1699 21.2328 76.1702 cv
22.3734 76.1966 23.514 76.2225 24.6547 76.2493 cv
25.1732 76.261 25.6918 76.2742 26.2094 76.2884 cv
26.3236 76.2918 26.4379 76.2947 26.5521 76.2981 cv
26.7728 76.0496 27.0492 75.8587 27.3734 75.7928 cv
27.4698 75.7732 27.5646 75.7597 27.6578 75.752 cv
28.2146 75.932 28.7746 76.1272 29.3383 76.3423 cv
29.7014 76.6905 29.9361 77.1558 29.9877 77.6419 cv
30.0648 77.7684 30.1449 77.8929 30.2172 78.0228 cv
30.3054 78.1816 30.3567 78.3591 30.3744 78.5416 cv
f
12.5974 100.637 mo
12.4942 100.507 12.3945 100.376 12.2982 100.244 cv
11.8852 99.6776 11.5102 99.1111 11.1586 98.5472 cv
11.0512 98.41 10.9457 98.2737 10.8422 98.1385 cv
9.89245 96.8951 9.10929 95.6741 8.50745 94.501 cv
8.73457 88.117 10.435 81.9339 10.459 75.5179 cv
10.8368 75.1695 11.2333 74.8331 11.6469 74.5086 cv
11.7076 74.4609 11.7946 74.4396 11.8992 74.4396 cv
12.2103 74.4396 12.6768 74.6285 13.0678 74.8763 cv
13.3765 74.4901 13.8357 74.2097 14.4124 74.0186 cv
14.4483 74.4787 14.4719 74.9342 14.4809 75.3841 cv
14.5092 76.8136 14.4417 78.2307 14.3166 79.6397 cv
14.2 80.952 14.0335 82.2571 13.8476 83.5596 cv
13.7358 84.3438 13.6169 85.1271 13.4978 85.91 cv
13.2543 86.5711 13.0493 87.2519 12.8803 87.95 cv
12.4135 89.8812 12.0853 91.9104 12.4408 94.2122 cv
12.4615 94.3457 12.4836 94.4809 12.5076 94.618 cv
12.4836 95.2731 12.4763 95.9306 12.4896 96.5901 cv
12.4965 96.9246 12.433 97.2132 12.3217 97.4607 cv
12.3402 97.5623 12.3627 97.6624 12.3676 97.7737 cv
12.4144 98.7355 12.4916 99.69 12.5974 100.637 cv
.156863 .203922 .133333 rgb
f
30.9177 108.806 mo
29.3549 108.66 27.5741 108.262 25.7128 107.701 cv
25.9222 107.688 26.1313 107.675 26.341 107.664 cv
27.9248 108.203 29.4844 108.59 30.9177 108.806 cv
f
42.2553 86.2494 mo
42.1762 86.1971 42.095 86.1481 42.0116 86.1024 cv
41.397 85.2872 40.8545 84.4384 40.2461 83.5788 cv
41.1172 84.5266 41.7718 85.4131 42.2553 86.2494 cv
26.5786 75.42 mo
24.2391 75.106 21.864 74.9567 19.4721 74.2259 cv
19.1429 74.1253 18.8766 73.9689 18.6683 73.7755 cv
20.4001 73.939 22.339 74.3179 24.2514 74.7947 cv
25.022 74.9869 25.7973 75.1911 26.5786 75.42 cv
f
34.641 108.717 mo
34.5372 108.717 34.4279 108.712 34.3129 108.702 cv
34.3339 108.678 34.355 108.653 34.3764 108.629 cv
34.4916 108.607 34.6137 108.591 34.7221 108.564 cv
35.3132 108.42 35.8883 108.176 36.4391 107.852 cv
36.0766 108.33 35.5772 108.717 34.641 108.717 cv
f
33.732 109.11 mo
33.583 109.11 33.4058 109.071 33.223 109.007 cv
32.5079 108.997 31.7334 108.93 30.9177 108.806 cv
31.3526 108.847 31.7709 108.869 32.1691 108.869 cv
32.6182 108.869 33.0416 108.842 33.4359 108.784 cv
33.6039 108.76 33.6938 108.699 33.7309 108.617 cv
33.9399 108.659 34.1335 108.687 34.3129 108.702 cv
34.2286 108.801 34.1468 108.9 34.06 108.996 cv
33.9883 109.076 33.8727 109.11 33.732 109.11 cv
f
42.9171 87.6153 mo
42.8085 87.3367 42.6814 87.0523 42.5338 86.762 cv
42.7376 87.0059 42.9519 87.2462 43.1803 87.482 cv
43.0894 87.5242 43.0017 87.5686 42.9171 87.6153 cv
.776471 .956863 .654902 rgb
f
44.2558 97.8245 mo
44.0105 96.5673 43.5171 95.3138 42.8632 94.1077 cv
42.9579 93.7482 43.0482 93.3862 43.1342 93.0223 cv
43.5183 91.395 43.7125 89.6558 42.9171 87.6153 cv
43.0017 87.5686 43.0894 87.5242 43.1803 87.482 cv
43.2542 87.5582 43.3296 87.6339 43.4066 87.7093 cv
43.5146 87.8149 43.6261 87.9047 43.7398 87.9796 cv
44.3895 89.2047 44.7285 90.7598 44.8632 92.2287 cv
44.7047 92.038 44.5299 91.8492 44.3363 91.6619 cv
44.2924 91.6195 44.2401 91.6013 44.1883 91.6013 cv
44.0315 91.6013 43.8803 91.7679 43.9867 91.9319 cv
44.324 92.4519 44.6487 92.9827 44.9324 93.5262 cv
44.9423 94.1687 44.9148 94.765 44.8607 95.2732 cv
44.7766 96.0627 44.5734 96.9468 44.2558 97.8245 cv
.678431 .823529 .596078 rgb
f
44.9324 93.5262 mo
44.6487 92.9827 44.324 92.4519 43.9867 91.9319 cv
43.8803 91.7679 44.0315 91.6013 44.1883 91.6013 cv
44.2401 91.6013 44.2924 91.6195 44.3363 91.6619 cv
44.5299 91.8492 44.7047 92.038 44.8632 92.2287 cv
44.904 92.6728 44.9261 93.1094 44.9324 93.5262 cv
.560784 .701961 .482353 rgb
f
36.4391 107.852 mo
36.6889 107.523 36.8736 107.151 37.0912 106.831 cv
38.0238 105.462 38.8685 104.042 39.6254 102.573 cv
40.9985 99.9075 42.08 97.0821 42.8632 94.1077 cv
43.5171 95.3138 44.0105 96.5673 44.2558 97.8245 cv
43.6401 99.5257 42.5948 101.202 41.1557 102.116 cv
40.1854 104.378 38.4779 106.656 36.4391 107.852 cv
.156863 .203922 .133333 rgb
f
43.7398 87.9796 mo
43.6261 87.9047 43.5146 87.8149 43.4066 87.7093 cv
43.3296 87.6339 43.2542 87.5582 43.1803 87.482 cv
42.9519 87.2462 42.7376 87.0059 42.5338 86.762 cv
42.448 86.5932 42.3554 86.4224 42.2553 86.2494 cv
42.8713 86.6568 43.359 87.2615 43.7398 87.9796 cv
f
16.3051 101.766 mo
15.9054 101.371 15.5301 100.963 15.184 100.542 cv
13.4347 98.4144 12.8157 96.3739 12.5076 94.618 cv
12.5529 93.385 12.6577 92.159 12.7966 90.937 cv
12.9128 91.1694 13.0941 91.363 13.3041 91.5135 cv
13.452 92.4298 13.6872 93.3487 13.999 94.2585 cv
14.4374 96.8107 15.715 99.3964 17.3953 101.468 cv
17.3629 101.466 17.3307 101.465 17.2988 101.465 cv
16.9309 101.465 16.5922 101.578 16.3051 101.766 cv
41.9479 88.388 mo
41.8742 88.2786 41.7967 88.1717 41.7158 88.0668 cv
41.5982 87.2396 41.3902 86.446 41.0473 85.7552 cv
40.6957 85.0472 40.1674 84.3729 39.5131 83.9202 cv
39.1334 83.6283 38.7123 83.4315 38.2597 83.3127 cv
37.725 82.8687 37.0782 82.4493 36.2787 82.0779 cv
35.4759 81.7051 34.636 81.4068 33.7932 81.162 cv
33.787 81.158 33.7813 81.1542 33.7751 81.1501 cv
32.6736 80.3428 31.5166 79.6329 30.3398 79.053 cv
30.3784 78.8853 30.3909 78.7112 30.3744 78.5416 cv
32.0915 79.0763 33.853 79.7825 35.5678 80.7679 cv
37.8959 82.1063 39.6801 83.7274 40.9389 85.3509 cv
41.2289 85.5125 41.4867 85.7181 41.6498 85.9319 cv
41.7747 85.9818 41.8952 86.0387 42.0116 86.1024 cv
42.1793 86.3249 42.3525 86.5449 42.5338 86.762 cv
42.6814 87.0523 42.8085 87.3367 42.9171 87.6153 cv
42.5299 87.8292 42.2094 88.0893 41.9479 88.388 cv
.733333 .952941 .627451 rgb
f
18.8484 103.885 mo
17.9293 103.231 17.0716 102.523 16.3051 101.766 cv
16.5922 101.578 16.9309 101.465 17.2988 101.465 cv
17.3307 101.465 17.3629 101.466 17.3953 101.468 cv
17.8562 102.036 18.3473 102.565 18.8598 103.045 cv
18.7359 103.303 18.718 103.629 18.8484 103.885 cv
13.999 94.2585 mo
13.6872 93.3487 13.452 92.4298 13.3041 91.5135 cv
13.0941 91.363 12.9128 91.1694 12.7966 90.937 cv
12.9876 89.2566 13.2433 87.584 13.4978 85.91 cv
14.5762 82.9825 16.4091 80.4455 19.2181 78.5423 cv
19.4165 78.4081 19.6145 78.2762 19.8166 78.1502 cv
19.8762 78.3376 19.9676 78.5164 20.0903 78.6748 cv
16.3227 80.9293 13.3386 86.4972 14.1937 90.7762 cv
14.0356 90.9456 13.9115 91.1561 13.8822 91.4363 cv
13.7884 92.3534 13.835 93.3035 13.999 94.2585 cv
42.8632 94.1077 mo
42.7085 93.8225 42.5455 93.5409 42.374 93.2614 cv
42.7855 92.4836 43.0424 91.6523 42.9359 90.8592 cv
42.9017 90.6062 42.8187 90.3914 42.7181 90.1898 cv
42.5692 89.4982 42.3024 88.9142 41.9479 88.388 cv
42.2094 88.0893 42.5299 87.8292 42.9171 87.6153 cv
43.7125 89.6558 43.5183 91.395 43.1342 93.0223 cv
43.0482 93.3862 42.9579 93.7482 42.8632 94.1077 cv
33.7751 81.1501 mo
32.6787 80.4264 31.5063 79.7489 30.3042 79.183 cv
30.3178 79.1403 30.3297 79.0969 30.3398 79.053 cv
31.5166 79.6329 32.6736 80.3428 33.7751 81.1501 cv
.643137 .827451 .572549 rgb
f
26.341 107.664 mo
23.7611 106.784 21.117 105.5 18.8484 103.885 cv
18.718 103.629 18.7359 103.303 18.8598 103.045 cv
18.3473 102.565 17.8562 102.036 17.3953 101.468 cv
15.715 99.3964 14.4374 96.8107 13.999 94.2585 cv
13.835 93.3035 13.7884 92.3534 13.8822 91.4363 cv
13.9115 91.1561 14.0356 90.9456 14.1937 90.7762 cv
13.3386 86.4972 16.3227 80.9293 20.0903 78.6748 cv
20.3414 78.9987 20.7237 79.2369 21.2328 79.2874 cv
22.685 79.4315 24.1361 79.5784 25.5873 79.719 cv
26.1856 79.777 26.8384 79.8965 27.472 79.8965 cv
27.6492 79.8965 27.8248 79.8872 27.9974 79.8645 cv
28.2982 79.9827 28.6234 80.075 29.016 80.1155 cv
29.0591 80.12 29.1014 80.1221 29.1428 80.1221 cv
29.7245 80.1221 30.1402 79.6977 30.3042 79.183 cv
31.5063 79.7489 32.6787 80.4264 33.7751 81.1501 cv
33.7813 81.1542 33.787 81.158 33.7932 81.162 cv
31.9285 80.6205 30.0492 80.3408 28.5238 80.095 cv
27.3983 79.9138 26.3123 79.8044 25.3352 79.8044 cv
24.2275 79.8044 23.2596 79.9449 22.5316 80.2806 cv
22.2593 80.4063 22.0233 80.561 21.8162 80.7376 cv
19.3701 81.4 17.1538 83.2236 15.3978 84.8929 cv
14.7289 85.5291 14.6684 86.2977 14.9437 86.9436 cv
13.5394 94.0355 16.601 100.745 22.9301 104.526 cv
23.3784 104.794 23.8701 105.055 24.3971 105.305 cv
24.6835 105.508 24.9662 105.718 25.2484 105.929 cv
25.3093 105.98 25.3704 106.03 25.4318 106.08 cv
25.5026 106.194 25.6162 106.292 25.7814 106.363 cv
25.905 106.463 26.029 106.563 26.1527 106.663 cv
26.3891 106.861 26.6332 107.06 26.8939 107.261 cv
27.0935 107.415 27.2869 107.529 27.4657 107.607 cv
27.0897 107.625 26.7149 107.643 26.341 107.664 cv
.533333 .709804 .466667 rgb
f
25.7814 106.363 mo
25.6162 106.292 25.5026 106.194 25.4318 106.08 cv
25.5478 106.174 25.6645 106.269 25.7814 106.363 cv
.4 .564706 .341176 rgb
f
39.6635 101.056 mo
39.9143 100.218 40.108 99.3584 40.2473 98.5398 cv
40.3223 99.4143 40.1556 100.265 39.6635 101.056 cv
.160784 .298039 .168627 rgb
f
29.1428 80.1221 mo
29.1014 80.1221 29.0591 80.12 29.016 80.1155 cv
28.6234 80.075 28.2982 79.9827 27.9974 79.8645 cv
27.8248 79.8872 27.6492 79.8965 27.472 79.8965 cv
26.8384 79.8965 26.1856 79.777 25.5873 79.719 cv
24.1361 79.5784 22.685 79.4315 21.2328 79.2874 cv
20.7237 79.2369 20.3414 78.9987 20.0903 78.6748 cv
19.9676 78.5164 19.8762 78.3376 19.8166 78.1502 cv
20.7471 77.57 21.7665 77.113 23.3309 77.113 cv
23.9278 77.113 24.6044 77.1796 25.3852 77.3313 cv
26.9387 77.6334 28.6337 77.9995 30.3744 78.5416 cv
30.3909 78.7112 30.3784 78.8853 30.3398 79.053 cv
30.3297 79.0969 30.3178 79.1403 30.3042 79.183 cv
30.1402 79.6977 29.7245 80.1221 29.1428 80.1221 cv
.815686 .972549 .796078 rgb
f
12.5076 94.618 mo
12.4836 94.4809 12.4615 94.3457 12.4408 94.2122 cv
12.0853 91.9104 12.4135 89.8812 12.8803 87.95 cv
13.0493 87.2519 13.2543 86.5711 13.4978 85.91 cv
13.2433 87.584 12.9876 89.2566 12.7966 90.937 cv
12.6577 92.159 12.5529 93.385 12.5076 94.618 cv
.160784 .25098 .141176 rgb
f
32.1691 108.869 mo
31.7709 108.869 31.3526 108.847 30.9177 108.806 cv
29.4844 108.59 27.9248 108.203 26.341 107.664 cv
26.7149 107.643 27.0897 107.625 27.4657 107.607 cv
27.5556 107.646 27.6417 107.676 27.7231 107.698 cv
27.8266 107.798 li
28.2904 108.236 28.8257 108.433 29.19 108.433 cv
29.3227 108.433 29.4326 108.407 29.5082 108.357 cv
29.6215 108.385 li
29.8825 108.524 30.1475 108.614 30.3484 108.614 cv
30.4639 108.614 30.5583 108.584 30.6186 108.516 cv
30.6349 108.517 30.6511 108.517 30.6673 108.517 cv
31.8544 108.517 32.6849 107.962 33.271 107.284 cv
33.3425 107.288 33.4141 107.29 33.4856 107.29 cv
35.1713 107.291 36.8284 106.181 37.8813 104.823 cv
38.6495 103.832 39.2386 102.475 39.6635 101.056 cv
40.1556 100.265 40.3223 99.4143 40.2473 98.5398 cv
40.2799 98.348 40.3096 98.1585 40.3363 97.972 cv
40.598 97.6541 40.8412 97.3211 41.0317 96.9495 cv
41.3129 96.3982 41.5463 95.6785 41.6547 94.9402 cv
41.7601 94.7098 41.8724 94.4837 41.974 94.2513 cv
42.0443 94.0882 42.0648 93.9344 42.0697 93.7859 cv
42.1776 93.6146 42.2798 93.4394 42.374 93.2614 cv
42.5455 93.5409 42.7085 93.8225 42.8632 94.1077 cv
42.08 97.0821 40.9985 99.9075 39.6254 102.573 cv
38.8685 104.042 38.0238 105.462 37.0912 106.831 cv
36.8736 107.151 36.6889 107.523 36.4391 107.852 cv
35.8883 108.176 35.3132 108.42 34.7221 108.564 cv
34.6137 108.591 34.4916 108.607 34.3764 108.629 cv
34.355 108.653 34.3339 108.678 34.3129 108.702 cv
34.1335 108.687 33.9399 108.659 33.7309 108.617 cv
33.6938 108.699 33.6039 108.76 33.4359 108.784 cv
33.0416 108.842 32.6182 108.869 32.1691 108.869 cv
24.3971 105.305 mo
23.8701 105.055 23.3784 104.794 22.9301 104.526 cv
16.601 100.745 13.5394 94.0355 14.9437 86.9436 cv
14.6684 86.2977 14.7289 85.5291 15.3978 84.8929 cv
17.1538 83.2236 19.3701 81.4 21.8162 80.7376 cv
21.1707 81.2881 20.8049 82.0525 20.4877 82.824 cv
20.2338 83.3118 20.0326 83.8157 19.8607 84.2986 cv
19.7465 84.6214 20.2396 85.0896 20.7943 85.3934 cv
20.6954 85.3727 20.6005 85.3613 20.5136 85.3613 cv
20.3647 85.3613 20.2393 85.3948 20.1566 85.4725 cv
19.6898 85.908 19.3246 86.3948 19.0443 86.9271 cv
18.9105 87.0721 li
18.849 87.3392 li
18.6039 87.9197 18.4496 88.5501 18.3891 89.2342 cv
18.3949 89.2913 li
18.267 89.8411 18.139 90.3904 18.0111 90.9397 cv
17.3832 92.5096 16.765 94.2303 16.9623 96.1995 cv
16.8461 96.557 16.7299 96.9143 16.6137 97.2713 cv
16.5433 97.4881 16.7533 97.7722 17.0648 98.0257 cv
17.2641 98.2566 17.4633 98.4876 17.6625 98.7181 cv
18.2445 99.9607 19.3051 101.366 20.847 102.707 cv
21.2279 103.064 21.6498 103.423 22.1215 103.787 cv
22.2973 103.923 22.4808 104.028 22.6605 104.104 cv
23.1303 104.436 23.6117 104.763 24.0922 105.092 cv
24.1944 105.162 24.2959 105.233 24.3971 105.305 cv
f
42.5338 86.762 mo
42.3525 86.5449 42.1793 86.3249 42.0116 86.1024 cv
42.095 86.1481 42.1762 86.1971 42.2553 86.2494 cv
42.3554 86.4224 42.448 86.5932 42.5338 86.762 cv
f
38.2597 83.3127 mo
38.1513 83.2842 38.041 83.2603 37.9291 83.2405 cv
37.3637 82.8812 36.7611 82.6043 36.0404 82.5443 cv
35.9214 82.5242 35.8039 82.5139 35.6875 82.5117 cv
35.0902 82.0545 34.4554 81.5997 33.7932 81.162 cv
34.636 81.4068 35.4759 81.7051 36.2787 82.0779 cv
37.0782 82.4493 37.725 82.8687 38.2597 83.3127 cv
.701961 .945098 .603922 rgb
f
29.0414 81.8026 mo
28.9217 81.7753 28.8023 81.7628 28.6838 81.7628 cv
28.6724 81.7628 28.6609 81.7629 28.6495 81.7631 cv
27.1752 81.0943 25.6706 80.6182 24.2084 80.4998 cv
24.0349 80.4858 23.8615 80.479 23.6895 80.479 cv
23.4356 80.479 23.1835 80.4938 22.9332 80.5221 cv
23.1006 80.4875 23.2727 80.4586 23.4496 80.4358 cv
23.7851 80.3926 24.1258 80.3719 24.4689 80.3719 cv
26.0904 80.3719 27.7831 80.8327 29.4188 81.551 cv
29.2791 81.6207 29.1548 81.7065 29.0414 81.8026 cv
.611765 .827451 .552941 rgb
f
27.4657 107.607 mo
27.2869 107.529 27.0935 107.415 26.8939 107.261 cv
26.6332 107.06 26.3891 106.861 26.1527 106.663 cv
26.029 106.563 25.905 106.463 25.7814 106.363 cv
25.7824 106.364 25.7835 106.364 25.7846 106.365 cv
26.9196 106.848 28.1229 107.224 29.3678 107.508 cv
28.727 107.548 28.0944 107.577 27.4657 107.607 cv
25.4318 106.08 mo
25.3704 106.03 25.3093 105.98 25.2484 105.929 cv
24.9662 105.718 24.6835 105.508 24.3971 105.305 cv
24.6997 105.448 25.0144 105.588 25.3386 105.723 cv
25.3356 105.848 25.3642 105.971 25.4318 106.08 cv
35.1996 82.5437 mo
35.1577 82.5311 35.1155 82.5182 35.073 82.5053 cv
35.0424 82.495 35.0111 82.485 34.9792 82.4752 cv
34.9525 82.4642 li
34.5063 82.286 34.1234 82.1751 33.7826 82.1087 cv
32.5163 81.7235 31.2056 81.3608 30.3132 81.3608 cv
30.1706 81.3608 30.0387 81.37 29.9193 81.39 cv
29.7316 81.4213 29.5665 81.4772 29.4188 81.551 cv
27.7831 80.8327 26.0904 80.3719 24.4689 80.3719 cv
24.1258 80.3719 23.7851 80.3926 23.4496 80.4358 cv
23.2727 80.4586 23.1006 80.4875 22.9332 80.5221 cv
22.5562 80.5647 22.1836 80.6381 21.8162 80.7376 cv
22.0233 80.561 22.2593 80.4063 22.5316 80.2806 cv
23.2596 79.9449 24.2275 79.8044 25.3352 79.8044 cv
26.3123 79.8044 27.3983 79.9138 28.5238 80.095 cv
30.0492 80.3408 31.9285 80.6205 33.7932 81.162 cv
34.4554 81.5997 35.0902 82.0545 35.6875 82.5117 cv
35.6702 82.5113 35.653 82.5111 35.6359 82.5111 cv
35.4889 82.5111 35.3437 82.5233 35.1996 82.5437 cv
.509804 .721569 .454902 rgb
f
29.3678 107.508 mo
28.1229 107.224 26.9196 106.848 25.7846 106.365 cv
25.7835 106.364 25.7824 106.364 25.7814 106.363 cv
25.6645 106.269 25.5478 106.174 25.4318 106.08 cv
25.3642 105.971 25.3356 105.848 25.3386 105.723 cv
26.2095 106.085 27.1527 106.413 28.1382 106.691 cv
28.4783 107.05 29.0834 107.315 29.5228 107.372 cv
29.588 107.412 29.6551 107.449 29.723 107.485 cv
29.6043 107.493 29.4858 107.501 29.3678 107.508 cv
.384314 .580392 .337255 rgb
f
19.2946 94.4771 mo
18.4717 92.1864 18.3638 89.6338 19.0297 87.0057 cv
20.2859 85.9512 21.605 85.1914 23.0376 84.9504 cv
23.004 85.0278 22.9741 85.1072 22.9477 85.1878 cv
22.8969 85.3772 li
22.8217 85.4461 22.7494 85.5257 22.685 85.6229 cv
22.4408 85.9891 22.0805 86.5901 21.7826 87.2425 cv
21.5365 87.2576 21.3129 87.3421 21.1615 87.5042 cv
21.0569 87.4867 20.9507 87.4776 20.8441 87.4776 cv
20.4343 87.4776 20.018 87.6116 19.6576 87.9139 cv
18.6244 88.7776 18.8099 90.3655 19.7514 91.1414 cv
19.8353 91.2186 li
19.7934 91.3147 19.7543 91.4129 19.7494 91.5232 cv
19.7094 92.2444 19.724 93.0589 20.1264 93.6814 cv
19.7949 93.8589 19.5058 94.1148 19.2946 94.4771 cv
.160784 .329412 .172549 rgb
f
30.3484 108.614 mo
30.1475 108.614 29.8825 108.524 29.6215 108.385 cv
29.5082 108.357 li
29.4326 108.407 29.3227 108.433 29.19 108.433 cv
28.8257 108.433 28.2904 108.236 27.8266 107.798 cv
27.7231 107.698 li
27.6417 107.676 27.5556 107.646 27.4657 107.607 cv
28.0944 107.577 28.727 107.548 29.3678 107.508 cv
29.4858 107.501 29.6043 107.493 29.723 107.485 cv
30.0636 107.662 30.4247 107.784 30.6725 107.784 cv
30.8265 107.784 30.9367 107.737 30.9711 107.627 cv
31.1861 107.729 31.4212 107.787 31.6601 107.787 cv
31.8683 107.787 32.0793 107.743 32.2826 107.646 cv
32.5102 107.538 32.7328 107.402 32.9506 107.252 cv
33.0572 107.268 33.1642 107.278 33.271 107.284 cv
32.6849 107.962 31.8544 108.517 30.6673 108.517 cv
30.6511 108.517 30.6349 108.517 30.6186 108.516 cv
30.5583 108.584 30.4639 108.614 30.3484 108.614 cv
28.1382 106.691 mo
27.1527 106.413 26.2095 106.085 25.3386 105.723 cv
25.0144 105.588 24.6997 105.448 24.3971 105.305 cv
24.2959 105.233 24.1944 105.162 24.0922 105.092 cv
23.6117 104.763 23.1303 104.436 22.6605 104.104 cv
22.4808 104.028 22.2973 103.923 22.1215 103.787 cv
21.6498 103.423 21.2279 103.064 20.847 102.707 cv
19.3051 101.366 18.2445 99.9607 17.6625 98.7181 cv
17.4633 98.4876 17.2641 98.2566 17.0648 98.0257 cv
16.7533 97.7722 16.5433 97.4881 16.6137 97.2713 cv
16.7299 96.9143 16.8461 96.557 16.9623 96.1995 cv
16.765 94.2303 17.3832 92.5096 18.0111 90.9397 cv
18.139 90.3904 18.267 89.8411 18.3949 89.2913 cv
18.3891 89.2342 li
18.4496 88.5501 18.6039 87.9197 18.849 87.3392 cv
18.9105 87.0721 li
19.0443 86.9271 li
19.3246 86.3948 19.6898 85.908 20.1566 85.4725 cv
20.2393 85.3948 20.3647 85.3613 20.5136 85.3613 cv
20.6005 85.3613 20.6954 85.3727 20.7943 85.3934 cv
20.2396 85.0896 19.7465 84.6214 19.8607 84.2986 cv
20.0326 83.8157 20.2338 83.3118 20.4877 82.824 cv
20.8049 82.0525 21.1707 81.2881 21.8162 80.7376 cv
22.1836 80.6381 22.5562 80.5647 22.9332 80.5221 cv
23.1835 80.4938 23.4356 80.479 23.6895 80.479 cv
23.8615 80.479 24.0349 80.4858 24.2084 80.4998 cv
25.6706 80.6182 27.1752 81.0943 28.6495 81.7631 cv
28.0992 81.7742 27.5654 82.0497 27.0795 82.3543 cv
26.6254 82.6385 26.1918 82.9109 25.8988 83.2972 cv
25.4105 83.346 24.9242 83.5833 24.5385 83.9363 cv
24.3598 83.9227 li
23.7066 83.9441 23.2785 84.395 23.0376 84.9504 cv
21.605 85.1914 20.2859 85.9512 19.0297 87.0057 cv
18.3638 89.6338 18.4717 92.1864 19.2946 94.4771 cv
19.2065 94.6283 19.132 94.7979 19.0736 94.9881 cv
18.7514 96.0359 19.1879 96.8675 19.9281 97.3392 cv
19.9008 97.3831 li
19.8236 97.5057 19.8783 97.66 20.0033 97.8172 cv
19.9232 98.1536 19.8734 98.5066 19.8549 98.8772 cv
19.8373 99.2435 20.7182 99.865 21.3402 100.003 cv
21.3676 100.134 li
21.4193 100.269 21.5111 100.365 21.5902 100.471 cv
21.6088 100.573 21.6674 100.654 21.7045 100.746 cv
21.724 100.959 21.809 101.161 21.9369 101.352 cv
22.06 101.748 22.2621 102.103 22.5688 102.344 cv
22.557 102.45 22.5394 102.554 22.5629 102.667 cv
22.7331 103.497 23.4939 104.134 24.2816 104.134 cv
24.5334 104.134 24.7879 104.069 25.0267 103.925 cv
25.0365 103.926 li
24.9037 104.377 25.0004 104.882 25.309 105.237 cv
25.5639 105.683 25.9818 106.012 26.5941 106.165 cv
26.6666 106.183 26.7354 106.191 26.8015 106.191 cv
26.9065 106.191 27.0047 106.171 27.1 106.143 cv
27.2933 106.224 27.4926 106.29 27.7054 106.298 cv
27.8207 106.284 li
28.019 106.545 li
28.0535 106.595 28.0936 106.644 28.1382 106.691 cv
.160784 .286274 .14902 rgb
f
41.7788 88.5975 mo
41.7616 88.4197 41.7407 88.2423 41.7158 88.0668 cv
41.7967 88.1717 41.8742 88.2786 41.9479 88.388 cv
41.8885 88.4559 41.8322 88.5258 41.7788 88.5975 cv
.701961 .945098 .603922 rgb
f
42.374 93.2614 mo
42.1795 92.9444 41.9746 92.631 41.7616 92.323 cv
41.8769 91.6648 41.9155 90.9738 41.8463 90.2371 cv
41.85 89.6955 41.8315 89.1426 41.7788 88.5975 cv
41.8322 88.5258 41.8885 88.4559 41.9479 88.388 cv
42.3024 88.9142 42.5692 89.4982 42.7181 90.1898 cv
42.8187 90.3914 42.9017 90.6062 42.9359 90.8592 cv
43.0424 91.6523 42.7855 92.4836 42.374 93.2614 cv
.615686 .827451 .552941 rgb
f
37.8001 101.13 mo
37.8314 101.074 37.8382 101.047 37.823 101.047 cv
37.8187 101.047 37.8127 101.049 37.8051 101.054 cv
37.921 100.963 38.0364 100.872 38.149 100.778 cv
38.0429 100.906 37.9263 101.024 37.8001 101.13 cv
.215686 .380392 .223529 rgb
f
35.1654 103.708 mo
36.1165 103.163 36.9562 102.401 37.6029 101.43 cv
37.7008 101.291 37.7654 101.193 37.8001 101.13 cv
37.9263 101.024 38.0429 100.906 38.149 100.778 cv
38.3144 100.639 38.4737 100.494 38.6195 100.333 cv
39.2719 99.6868 39.7504 99.0989 40.1801 98.2796 cv
40.19 98.2606 40.1999 98.2416 40.2098 98.2225 cv
40.2257 98.3285 40.2383 98.4344 40.2473 98.5398 cv
40.108 99.3584 39.9143 100.218 39.6635 101.056 cv
39.2442 101.73 38.5888 102.36 37.6449 102.924 cv
36.9285 103.353 36.0834 103.601 35.1654 103.708 cv
.160784 .329412 .172549 rgb
f
33.4856 107.29 mo
33.4141 107.29 33.3425 107.288 33.271 107.284 cv
33.8444 106.622 34.1839 105.843 34.3949 105.353 cv
34.6032 104.87 34.7687 104.361 34.9172 103.843 cv
35.0007 103.8 35.0835 103.755 35.1654 103.708 cv
36.0834 103.601 36.9285 103.353 37.6449 102.924 cv
38.5888 102.36 39.2442 101.73 39.6635 101.056 cv
39.2386 102.475 38.6495 103.832 37.8813 104.823 cv
36.8284 106.181 35.1713 107.291 33.4856 107.29 cv
40.2473 98.5398 mo
40.2383 98.4344 40.2257 98.3285 40.2098 98.2225 cv
41.0658 96.5651 41.5275 94.4383 41.7184 92.5505 cv
41.7338 92.4752 41.7482 92.3992 41.7616 92.323 cv
41.9746 92.631 42.1795 92.9444 42.374 93.2614 cv
42.2798 93.4394 42.1776 93.6146 42.0697 93.7859 cv
42.0648 93.9344 42.0443 94.0882 41.974 94.2513 cv
41.8724 94.4837 41.7601 94.7098 41.6547 94.9402 cv
41.5463 95.6785 41.3129 96.3982 41.0317 96.9495 cv
40.8412 97.3211 40.598 97.6541 40.3363 97.972 cv
40.3096 98.1585 40.2799 98.348 40.2473 98.5398 cv
.160784 .286274 .14902 rgb
f
30.8014 82.8742 mo
30.0969 82.47 29.3772 82.0932 28.6495 81.7631 cv
28.6609 81.7629 28.6724 81.7628 28.6838 81.7628 cv
28.8023 81.7628 28.9217 81.7753 29.0414 81.8026 cv
29.1548 81.7065 29.2791 81.6207 29.4188 81.551 cv
30.0905 81.846 30.7529 82.1847 31.3964 82.5525 cv
31.1908 82.6523 30.9917 82.7625 30.8014 82.8742 cv
.592157 .827451 .541176 rgb
f
31.3964 82.5525 mo
30.7529 82.1847 30.0905 81.846 29.4188 81.551 cv
29.5665 81.4772 29.7316 81.4213 29.9193 81.39 cv
30.0387 81.37 30.1706 81.3608 30.3132 81.3608 cv
31.2056 81.3608 32.5163 81.7235 33.7826 82.1087 cv
34.1234 82.1751 34.5063 82.286 34.9525 82.4642 cv
34.9792 82.4752 li
34.2216 82.2432 33.104 82.1498 32.7476 82.1498 cv
32.7087 82.1498 32.6789 82.151 32.6596 82.1531 cv
32.2249 82.2022 31.7982 82.3575 31.3964 82.5525 cv
.494118 .72549 .447059 rgb
f
29.723 107.485 mo
29.6551 107.449 29.588 107.412 29.5228 107.372 cv
29.0834 107.315 28.4783 107.05 28.1382 106.691 cv
29.0638 106.952 30.0265 107.168 31.0014 107.325 cv
30.7172 107.384 30.4311 107.432 30.14 107.454 cv
30.0006 107.465 29.8616 107.475 29.723 107.485 cv
.376471 .596078 .333333 rgb
f
22.139 95.711 mo
21.8263 95.3935 21.5289 95.0725 21.2953 94.7298 cv
21.1303 94.4876 20.9779 94.242 20.8344 93.993 cv
21.3275 93.6629 21.6625 93.0198 21.5736 92.3719 cv
21.3627 90.8377 20.8773 89.5096 21.6059 88.0183 cv
22.1 87.8533 22.5209 87.4891 22.6801 86.9046 cv
22.7269 86.7293 22.7992 86.5784 22.8832 86.4407 cv
23.1859 86.1766 23.5092 85.9334 23.8412 85.7127 cv
24.2025 85.5856 24.6262 85.5303 25.0882 85.5303 cv
25.8088 85.5303 26.6233 85.6647 27.4436 85.8712 cv
26.482 87.0379 25.6216 88.3744 24.9778 89.7136 cv
24.9328 89.7934 24.894 89.8745 24.8636 89.9563 cv
24.5297 90.6805 24.2614 91.4023 24.0765 92.096 cv
23.893 92.3646 23.7318 92.6551 23.5814 92.9974 cv
23.474 93.2977 23.3685 93.5989 23.265 93.9012 cv
23.2309 93.9237 li
22.5857 94.319 22.2673 94.9984 22.139 95.711 cv
.211765 .407843 .223529 rgb
f
24.9195 101.075 mo
24.687 100.938 24.4684 100.801 24.265 100.665 cv
21.8489 99.0469 20.1686 96.9096 19.2946 94.4771 cv
19.5058 94.1148 19.7949 93.8589 20.1264 93.6814 cv
19.724 93.0589 19.7094 92.2444 19.7494 91.5232 cv
19.7543 91.4129 19.7934 91.3147 19.8353 91.2186 cv
19.7514 91.1414 li
18.8099 90.3655 18.6244 88.7776 19.6576 87.9139 cv
20.018 87.6116 20.4343 87.4776 20.8441 87.4776 cv
20.9507 87.4776 21.0569 87.4867 21.1615 87.5042 cv
21.3129 87.3421 21.5365 87.2576 21.7826 87.2425 cv
22.0805 86.5901 22.4408 85.9891 22.685 85.6229 cv
22.7494 85.5257 22.8217 85.4461 22.8969 85.3772 cv
22.9477 85.1878 li
22.9741 85.1072 23.004 85.0278 23.0376 84.9504 cv
23.355 84.897 23.6781 84.8691 24.0073 84.8691 cv
24.9249 84.8691 25.8899 85.0857 26.9154 85.5721 cv
27.1003 85.6598 27.2848 85.7492 27.4691 85.8403 cv
27.4606 85.8507 27.4521 85.8609 27.4436 85.8712 cv
26.6233 85.6647 25.8088 85.5303 25.0882 85.5303 cv
24.6262 85.5303 24.2025 85.5856 23.8412 85.7127 cv
23.5092 85.9334 23.1859 86.1766 22.8832 86.4407 cv
22.7992 86.5784 22.7269 86.7293 22.6801 86.9046 cv
22.5209 87.4891 22.1 87.8533 21.6059 88.0183 cv
20.8773 89.5096 21.3627 90.8377 21.5736 92.3719 cv
21.6625 93.0198 21.3275 93.6629 20.8344 93.993 cv
20.9779 94.242 21.1303 94.4876 21.2953 94.7298 cv
21.5289 95.0725 21.8263 95.3935 22.139 95.711 cv
22.0752 96.065 22.0584 96.4273 22.0717 96.7669 cv
22.1351 98.3773 23.3256 99.5233 24.6166 100.292 cv
24.6999 100.561 24.8005 100.822 24.9195 101.075 cv
.160784 .352941 .180392 rgb
f
31.6601 107.787 mo
31.4212 107.787 31.1861 107.729 30.9711 107.627 cv
30.9367 107.737 30.8265 107.784 30.6725 107.784 cv
30.4247 107.784 30.0636 107.662 29.723 107.485 cv
29.8616 107.475 30.0006 107.465 30.14 107.454 cv
30.4311 107.432 30.7172 107.384 31.0014 107.325 cv
30.0265 107.168 29.0638 106.952 28.1382 106.691 cv
28.0936 106.644 28.0535 106.595 28.019 106.545 cv
27.8207 106.284 li
27.7054 106.298 li
27.4926 106.29 27.2933 106.224 27.1 106.143 cv
27.0047 106.171 26.9065 106.191 26.8015 106.191 cv
26.7354 106.191 26.6666 106.183 26.5941 106.165 cv
25.9818 106.012 25.5639 105.683 25.309 105.237 cv
25.0004 104.882 24.9037 104.377 25.0365 103.926 cv
25.0267 103.925 li
24.7879 104.069 24.5334 104.134 24.2816 104.134 cv
23.4939 104.134 22.7331 103.497 22.5629 102.667 cv
22.5394 102.554 22.557 102.45 22.5688 102.344 cv
22.2621 102.103 22.06 101.748 21.9369 101.352 cv
21.809 101.161 21.724 100.959 21.7045 100.746 cv
21.6674 100.654 21.6088 100.573 21.5902 100.471 cv
21.5111 100.365 21.4193 100.269 21.3676 100.134 cv
21.3402 100.003 li
20.7182 99.865 19.8373 99.2435 19.8549 98.8772 cv
19.8734 98.5066 19.9232 98.1536 20.0033 97.8172 cv
19.8783 97.66 19.8236 97.5057 19.9008 97.3831 cv
19.9281 97.3392 li
19.1879 96.8675 18.7514 96.0359 19.0736 94.9881 cv
19.132 94.7979 19.2065 94.6283 19.2946 94.4771 cv
20.1686 96.9096 21.8489 99.0469 24.265 100.665 cv
24.4684 100.801 24.687 100.938 24.9195 101.075 cv
25.2552 101.787 25.7381 102.428 26.3978 102.959 cv
27.5844 103.914 28.9574 104.462 30.35 104.641 cv
30.6365 104.806 30.9223 104.89 31.136 104.89 cv
31.1743 104.89 31.2103 104.887 31.2436 104.882 cv
31.3222 104.9 31.3955 104.911 31.4602 104.911 cv
31.5463 104.911 31.617 104.892 31.6644 104.849 cv
31.8051 104.696 li
32.8919 104.633 33.9558 104.346 34.9172 103.843 cv
34.7687 104.361 34.6032 104.87 34.3949 105.353 cv
34.1839 105.843 33.8444 106.622 33.271 107.284 cv
33.1642 107.278 33.0572 107.268 32.9506 107.252 cv
32.7328 107.402 32.5102 107.538 32.2826 107.646 cv
32.0793 107.743 31.8683 107.787 31.6601 107.787 cv
27.4691 85.8403 mo
27.2848 85.7492 27.1003 85.6598 26.9154 85.5721 cv
25.8899 85.0857 24.9249 84.8691 24.0073 84.8691 cv
23.6781 84.8691 23.355 84.897 23.0376 84.9504 cv
23.2785 84.395 23.7066 83.9441 24.3598 83.9227 cv
24.5385 83.9363 li
24.9242 83.5833 25.4105 83.346 25.8988 83.2972 cv
26.1918 82.9109 26.6254 82.6385 27.0795 82.3543 cv
27.5654 82.0497 28.0992 81.7742 28.6495 81.7631 cv
29.3772 82.0932 30.0969 82.47 30.8014 82.8742 cv
30.7529 82.9027 30.705 82.9313 30.6576 82.9598 cv
29.5726 83.6129 28.467 84.635 27.4691 85.8403 cv
.160784 .313725 .156863 rgb
f
41.7616 92.323 mo
41.7553 92.314 41.7489 92.3048 41.7427 92.2957 cv
41.7504 92.2099 41.7575 92.1245 41.764 92.0399 cv
41.8084 91.4737 41.8421 90.863 41.8463 90.2371 cv
41.9155 90.9738 41.8769 91.6648 41.7616 92.323 cv
.592157 .827451 .541176 rgb
f
41.7184 92.5505 mo
41.7271 92.465 41.7351 92.3802 41.7427 92.2957 cv
41.7489 92.3048 41.7553 92.314 41.7616 92.323 cv
41.7482 92.3992 41.7338 92.4752 41.7184 92.5505 cv
.160784 .313725 .156863 rgb
f
35.1859 82.5457 mo
35.1496 82.5318 35.1119 82.5184 35.073 82.5053 cv
35.1155 82.5182 35.1577 82.5311 35.1996 82.5437 cv
35.195 82.5444 35.1905 82.545 35.1859 82.5457 cv
.494118 .72549 .447059 rgb
f
41.7158 88.0668 mo
41.5173 87.8099 41.2976 87.5652 41.061 87.3265 cv
40.9195 87.0016 40.7577 86.6684 40.5736 86.326 cv
40.0592 85.3685 39.4271 84.2821 38.2597 83.3127 cv
38.7123 83.4315 39.1334 83.6283 39.5131 83.9202 cv
40.1674 84.3729 40.6957 85.0472 41.0473 85.7552 cv
41.3902 86.446 41.5982 87.2396 41.7158 88.0668 cv
.701961 .945098 .603922 rgb
f
41.061 87.3265 mo
40.8386 87.1021 40.6012 86.8829 40.3519 86.6634 cv
40.2296 86.5555 40.1 86.5101 39.9748 86.5101 cv
39.8502 86.5101 39.7302 86.5551 39.6264 86.6282 cv
39.3544 86.1081 39.0022 85.5545 38.5429 85.0111 cv
38.493 84.9365 38.4319 84.8635 38.3588 84.7933 cv
38.3417 84.7768 38.3246 84.7604 38.3074 84.744 cv
38.0128 84.4234 37.6786 84.109 37.2992 83.8099 cv
37.2029 83.4843 36.6681 83.004 36.0517 82.7943 cv
35.9319 82.7001 35.8105 82.6058 35.6875 82.5117 cv
35.8039 82.5139 35.9214 82.5242 36.0404 82.5443 cv
36.7611 82.6043 37.3637 82.8812 37.9291 83.2405 cv
38.041 83.2603 38.1513 83.2842 38.2597 83.3127 cv
39.4271 84.2821 40.0592 85.3685 40.5736 86.326 cv
40.7577 86.6684 40.9195 87.0016 41.061 87.3265 cv
.67451 .941176 .588235 rgb
f
38.5429 85.0111 mo
38.4673 84.9217 38.3889 84.8326 38.3074 84.744 cv
38.3246 84.7604 38.3417 84.7768 38.3588 84.7933 cv
38.4319 84.8635 38.493 84.9365 38.5429 85.0111 cv
36.0517 82.7943 mo
36.0118 82.7808 35.9715 82.7683 35.931 82.7571 cv
35.7013 82.6939 35.4557 82.6213 35.1996 82.5437 cv
35.3437 82.5233 35.4889 82.5111 35.6359 82.5111 cv
35.653 82.5111 35.6702 82.5113 35.6875 82.5117 cv
35.8105 82.6058 35.9319 82.7001 36.0517 82.7943 cv
35.073 82.5053 mo
35.0463 82.4972 35.0195 82.489 34.9926 82.4808 cv
34.9792 82.4752 li
35.0111 82.485 35.0424 82.495 35.073 82.5053 cv
.494118 .72549 .443137 rgb
f
36.4248 101.828 mo
37.2744 100.755 38.0993 99.6684 38.8545 98.5414 cv
38.8496 99.5149 38.5898 100.244 38.149 100.778 cv
38.0364 100.872 37.921 100.963 37.8051 101.054 cv
37.8127 101.049 37.8187 101.047 37.823 101.047 cv
37.8382 101.047 37.8314 101.074 37.8001 101.13 cv
37.419 101.453 36.9508 101.679 36.4248 101.828 cv
.211765 .403922 .223529 rgb
f
34.9494 103.73 mo
34.955 103.71 34.9606 103.69 34.9662 103.67 cv
35.3236 103.264 35.6576 102.845 35.9613 102.408 cv
36.1164 102.215 36.271 102.022 36.4248 101.828 cv
36.9508 101.679 37.419 101.453 37.8001 101.13 cv
37.7654 101.193 37.7008 101.291 37.6029 101.43 cv
36.9562 102.401 36.1165 103.163 35.1654 103.708 cv
35.094 103.716 35.0217 103.723 34.9494 103.73 cv
38.149 100.778 mo
38.5898 100.244 38.8496 99.5149 38.8545 98.5414 cv
39.2076 98.0144 39.5454 97.4787 39.8634 96.9315 cv
40.0271 97.3638 40.1457 97.7952 40.2098 98.2225 cv
40.1999 98.2416 40.19 98.2606 40.1801 98.2796 cv
39.7504 99.0989 39.2719 99.6868 38.6195 100.333 cv
38.4737 100.494 38.3144 100.639 38.149 100.778 cv
.160784 .352941 .180392 rgb
f
34.9172 103.843 mo
34.928 103.806 34.9388 103.768 34.9494 103.73 cv
35.0217 103.723 35.094 103.716 35.1654 103.708 cv
35.0835 103.755 35.0007 103.8 34.9172 103.843 cv
40.2098 98.2225 mo
40.1457 97.7952 40.0271 97.3638 39.8634 96.9315 cv
40.061 96.5915 40.2509 96.2472 40.432 95.8978 cv
40.9811 94.839 41.474 93.7486 41.7184 92.5505 cv
41.5275 94.4383 41.0658 96.5651 40.2098 98.2225 cv
.160784 .313725 .156863 rgb
f
41.5999 88.863 mo
41.4708 88.372 41.2935 87.8604 41.061 87.3265 cv
41.2976 87.5652 41.5173 87.8099 41.7158 88.0668 cv
41.7407 88.2423 41.7616 88.4197 41.7788 88.5975 cv
41.715 88.6833 41.6554 88.7719 41.5999 88.863 cv
.67451 .941176 .588235 rgb
f
41.8463 90.2371 mo
41.8049 89.7962 41.725 89.339 41.5999 88.863 cv
41.6554 88.7719 41.715 88.6833 41.7788 88.5975 cv
41.8315 89.1426 41.85 89.6955 41.8463 90.2371 cv
.592157 .831372 .541176 rgb
f
41.1273 90.0374 mo
40.5641 88.6358 39.7218 87.2287 38.6801 85.888 cv
38.7617 85.6065 38.7338 85.2966 38.5429 85.0111 cv
39.0022 85.5545 39.3544 86.1081 39.6264 86.6282 cv
39.7302 86.5551 39.8502 86.5101 39.9748 86.5101 cv
40.1 86.5101 40.2296 86.5555 40.3519 86.6634 cv
40.6012 86.8829 40.8386 87.1021 41.061 87.3265 cv
41.2935 87.8604 41.4708 88.372 41.5999 88.863 cv
41.3834 89.2182 41.229 89.6126 41.1273 90.0374 cv
38.3074 84.744 mo
37.6589 84.1241 36.8969 83.4596 36.0517 82.7943 cv
36.6681 83.004 37.2029 83.4843 37.2992 83.8099 cv
37.6786 84.109 38.0128 84.4234 38.3074 84.744 cv
.654902 .937255 .572549 rgb
f
41.7427 92.2957 mo
40.9596 91.167 40.0647 90.105 39.1397 89.1485 cv
39.0881 88.7318 38.9954 88.3145 38.8685 87.9065 cv
38.7021 87.3713 38.4291 86.9552 38.0865 86.6408 cv
38.3691 86.4713 38.5905 86.1969 38.6801 85.888 cv
39.7218 87.2287 40.5641 88.6358 41.1273 90.0374 cv
41.229 89.6126 41.3834 89.2182 41.5999 88.863 cv
41.725 89.339 41.8049 89.7962 41.8463 90.2371 cv
41.8421 90.863 41.8084 91.4737 41.764 92.0399 cv
41.7575 92.1245 41.7504 92.2099 41.7427 92.2957 cv
35.5468 85.481 mo
35.3036 85.4329 35.0573 85.4107 34.8095 85.4107 cv
34.7702 85.4107 34.7308 85.4112 34.6914 85.4124 cv
33.4992 84.5614 32.1806 83.6656 30.8014 82.8742 cv
30.9917 82.7625 31.1908 82.6523 31.3964 82.5525 cv
32.9245 83.426 34.3475 84.4649 35.5468 85.481 cv
.572549 .831372 .529412 rgb
f
38.0865 86.6408 mo
37.6997 86.2858 37.224 86.0607 36.7123 85.9402 cv
36.3366 85.7077 35.9456 85.5597 35.5468 85.481 cv
34.3475 84.4649 32.9245 83.426 31.3964 82.5525 cv
31.7982 82.3575 32.2249 82.2022 32.6596 82.1531 cv
32.6789 82.151 32.7087 82.1498 32.7476 82.1498 cv
33.104 82.1498 34.2216 82.2432 34.9792 82.4752 cv
34.9926 82.4808 li
35.0195 82.489 35.0463 82.4972 35.073 82.5053 cv
35.1119 82.5184 35.1496 82.5318 35.1859 82.5457 cv
35.1905 82.545 35.195 82.5444 35.1996 82.5437 cv
35.4557 82.6213 35.7013 82.6939 35.931 82.7571 cv
35.9715 82.7683 36.0118 82.7808 36.0517 82.7943 cv
36.8969 83.4596 37.6589 84.1241 38.3074 84.744 cv
38.3889 84.8326 38.4673 84.9217 38.5429 85.0111 cv
38.7338 85.2966 38.7617 85.6065 38.6801 85.888 cv
38.5905 86.1969 38.3691 86.4713 38.0865 86.6408 cv
.482353 .733333 .439216 rgb
f
34.4777 102.064 mo
34.3518 102.064 34.225 102.061 34.0971 102.057 cv
34.1916 101.879 34.2713 101.695 34.3344 101.506 cv
34.4272 101.445 34.5258 101.4 34.6137 101.327 cv
35.0023 101.053 35.3266 100.721 35.6195 100.361 cv
36.2269 100.099 36.7738 99.7 37.1469 99.1717 cv
37.2152 99.074 37.2846 98.9764 37.3529 98.8792 cv
38.3021 97.5335 38.1674 95.908 37.4633 94.6189 cv
37.5645 94.5031 37.6596 94.3809 37.7434 94.2491 cv
38.1516 95.126 38.4625 96.0031 38.6478 96.8294 cv
38.7915 97.4702 38.857 98.0384 38.8545 98.5414 cv
38.0993 99.6684 37.2744 100.755 36.4248 101.828 cv
35.8356 101.994 35.1735 102.064 34.4777 102.064 cv
25.4674 99.6465 mo
24.9643 99.3476 24.4902 99.0108 24.0326 98.6228 cv
24.0434 98.5389 li
24.0194 98.2984 23.9587 98.0719 23.8702 97.8564 cv
24.0182 98.1331 24.2368 98.3807 24.5033 98.576 cv
24.6835 98.7082 24.8775 98.7894 25.0795 98.8345 cv
25.1274 98.8796 25.1762 98.9237 25.2258 98.9669 cv
25.2874 99.1309 25.3581 99.292 25.4379 99.449 cv
25.4464 99.5155 25.4562 99.5813 25.4674 99.6465 cv
23.7742 97.6476 mo
23.4089 96.9285 22.7454 96.3265 22.139 95.711 cv
22.2673 94.9984 22.5857 94.319 23.2309 93.9237 cv
23.265 93.9012 li
23.3685 93.5989 23.474 93.2977 23.5814 92.9974 cv
23.7318 92.6551 23.893 92.3646 24.0765 92.096 cv
24.2614 91.4023 24.5297 90.6805 24.8636 89.9563 cv
24.7763 90.1907 24.7583 90.4302 24.8634 90.6574 cv
24.6152 90.9906 24.4216 91.3535 24.2973 91.7443 cv
24.2223 91.7984 24.1634 91.8765 24.14 91.9749 cv
23.9738 92.6744 23.8668 93.343 23.9286 94.0044 cv
23.6815 94.7954 23.6154 95.6348 23.7726 96.453 cv
23.6119 96.8568 23.6289 97.2719 23.7742 97.6476 cv
24.9778 89.7136 mo
25.6216 88.3744 26.482 87.0379 27.4436 85.8712 cv
27.5043 85.8865 27.5652 85.9022 27.6259 85.9183 cv
28.4937 86.3522 29.3536 86.8225 30.1955 87.3198 cv
29.8284 87.6131 29.5074 87.9246 29.2304 88.2572 cv
28.3428 88.416 27.452 88.7178 26.6688 89.148 cv
26.7942 89.0621 26.9469 88.9869 27.1342 88.9046 cv
27.599 88.7 27.9535 88.388 28.3773 88.1097 cv
28.5827 87.9746 28.4242 87.6901 28.2174 87.6901 cv
28.2118 87.6901 28.2062 87.6903 28.2006 87.6907 cv
27.725 87.7259 27.2611 87.6956 26.8315 87.9163 cv
26.4369 88.1194 26.1391 88.4051 25.8266 88.7103 cv
25.5802 88.9503 25.2025 89.3152 24.9778 89.7136 cv
.211765 .423529 .227451 rgb
f
34.0422 103.77 mo
33.5655 103.77 33.0759 103.739 32.5811 103.682 cv
33.2137 103.276 33.7528 102.706 34.0971 102.057 cv
34.225 102.061 34.3518 102.064 34.4777 102.064 cv
35.1735 102.064 35.8356 101.994 36.4248 101.828 cv
36.271 102.022 36.1164 102.215 35.9613 102.408 cv
35.6576 102.845 35.3236 103.264 34.9662 103.67 cv
34.9606 103.69 34.955 103.71 34.9494 103.73 cv
34.6534 103.757 34.3504 103.77 34.0422 103.77 cv
26.5461 101.92 mo
25.9556 101.648 25.4075 101.362 24.9195 101.075 cv
24.8005 100.822 24.6999 100.561 24.6166 100.292 cv
23.3256 99.5233 22.1351 98.3773 22.0717 96.7669 cv
22.0584 96.4273 22.0752 96.065 22.139 95.711 cv
22.7454 96.3265 23.4089 96.9285 23.7742 97.6476 cv
23.8017 97.7187 23.8338 97.7884 23.8702 97.8564 cv
23.9587 98.0719 24.0194 98.2984 24.0434 98.5389 cv
24.0326 98.6228 li
24.4902 99.0108 24.9643 99.3476 25.4674 99.6465 cv
25.6165 100.516 26.0003 101.264 26.5461 101.92 cv
38.8545 98.5414 mo
38.857 98.0384 38.7915 97.4702 38.6478 96.8294 cv
38.4625 96.0031 38.1516 95.126 37.7434 94.2491 cv
37.797 94.1647 37.846 94.0764 37.8891 93.9832 cv
37.9194 93.9177 37.9484 93.8522 37.976 93.7867 cv
38.7825 94.7963 39.4597 95.8653 39.8634 96.9315 cv
39.5454 97.4787 39.2076 98.0144 38.8545 98.5414 cv
27.6259 85.9183 mo
27.5652 85.9022 27.5043 85.8865 27.4436 85.8712 cv
27.4521 85.8609 27.4606 85.8507 27.4691 85.8403 cv
27.5214 85.8662 27.5737 85.8922 27.6259 85.9183 cv
.160784 .376471 .180392 rgb
f
31.4602 104.911 mo
31.3955 104.911 31.3222 104.9 31.2436 104.882 cv
31.2103 104.887 31.1743 104.89 31.136 104.89 cv
30.9223 104.89 30.6365 104.806 30.35 104.641 cv
28.9574 104.462 27.5844 103.914 26.3978 102.959 cv
25.7381 102.428 25.2552 101.787 24.9195 101.075 cv
25.4075 101.362 25.9556 101.648 26.5461 101.92 cv
27.2043 102.711 28.0979 103.369 29.099 103.945 cv
29.5528 104.205 30.0429 104.322 30.5359 104.322 cv
31.2436 104.322 31.9576 104.082 32.5811 103.682 cv
33.0759 103.739 33.5655 103.77 34.0422 103.77 cv
34.3504 103.77 34.6534 103.757 34.9494 103.73 cv
34.9388 103.768 34.928 103.806 34.9172 103.843 cv
33.9558 104.346 32.8919 104.633 31.8051 104.696 cv
31.6644 104.849 li
31.617 104.892 31.5463 104.911 31.4602 104.911 cv
25.2258 98.9669 mo
25.1762 98.9237 25.1274 98.8796 25.0795 98.8345 cv
25.1146 98.8423 25.1499 98.8491 25.1854 98.8548 cv
25.1984 98.8923 25.2119 98.9297 25.2258 98.9669 cv
39.8634 96.9315 mo
39.4597 95.8653 38.7825 94.7963 37.976 93.7867 cv
38.1487 93.378 38.2711 92.9696 38.3637 92.5526 cv
39.0897 91.5883 39.2912 90.3708 39.1397 89.1485 cv
40.0647 90.105 40.9596 91.167 41.7427 92.2957 cv
41.7351 92.3802 41.7271 92.465 41.7184 92.5505 cv
41.474 93.7486 40.9811 94.839 40.432 95.8978 cv
40.2509 96.2472 40.061 96.5915 39.8634 96.9315 cv
23.7726 96.453 mo
23.6154 95.6348 23.6815 94.7954 23.9286 94.0044 cv
23.9703 94.4507 24.0888 94.8937 24.3178 95.3406 cv
24.392 95.4866 24.4887 95.6336 24.5814 95.7801 cv
24.2699 95.8235 23.977 96.0198 23.8207 96.3436 cv
23.8032 96.3799 23.7872 96.4164 23.7726 96.453 cv
25.7524 94.7952 mo
25.7254 94.7351 25.6997 94.6745 25.6762 94.6131 cv
25.3451 93.7713 24.9457 92.8777 24.8861 91.9705 cv
24.8717 91.7541 24.7228 91.6581 24.5608 91.6581 cv
24.4699 91.6581 24.3749 91.6883 24.2973 91.7443 cv
24.4216 91.3535 24.6152 90.9906 24.8634 90.6574 cv
24.9065 90.7504 24.9701 90.8413 25.058 90.929 cv
25.1769 91.0474 25.3206 91.1088 25.4666 91.1088 cv
25.5736 91.1088 25.6818 91.0758 25.7826 91.0081 cv
26.1244 90.7781 26.1019 90.2879 26.1859 89.9271 cv
26.2776 89.5316 26.4193 89.3187 26.6688 89.148 cv
27.452 88.7178 28.3428 88.416 29.2304 88.2572 cv
29.115 88.3958 29.0072 88.5381 28.907 88.6843 cv
28.7375 88.7297 28.5662 88.779 28.391 88.824 cv
28.2572 88.8587 28.279 89.0414 28.4154 89.0414 cv
28.4173 89.0414 28.4193 89.0414 28.4213 89.0413 cv
28.4449 89.0404 28.4684 89.04 28.4917 89.04 cv
28.5189 89.04 28.5457 89.0406 28.5725 89.0417 cv
27.9142 89.7524 27.4822 90.5354 27.2897 91.3557 cv
27.2548 91.4016 27.2209 91.4489 27.1879 91.4974 cv
26.7172 92.1891 26.5128 93.0939 26.5856 93.9418 cv
26.3638 94.1127 26.1545 94.31 25.9602 94.5354 cv
25.9295 94.431 25.9034 94.3213 25.8832 94.2039 cv
25.8753 94.1595 25.842 94.1391 25.8082 94.1391 cv
25.7663 94.1391 25.7236 94.1704 25.7279 94.2259 cv
25.7415 94.3874 25.7668 94.5582 25.8015 94.7303 cv
25.785 94.7517 25.7686 94.7733 25.7524 94.7952 cv
25.7942 92.5468 mo
25.7448 92.5468 25.6979 92.5824 25.7064 92.6497 cv
25.7348 92.8826 25.7641 93.1155 25.7943 93.3484 cv
25.8042 93.4288 25.8677 93.4643 25.9322 93.4643 cv
26.015 93.4643 26.0994 93.4058 26.0736 93.3089 cv
26.0131 93.0804 25.9525 92.8519 25.892 92.6234 cv
25.8782 92.5716 25.8353 92.5468 25.7942 92.5468 cv
26.4906 92.4368 mo
26.474 92.5691 li
26.4906 92.4368 li
25.9711 91.2454 mo
25.9535 91.3777 li
25.9711 91.2454 li
27.684 89.1224 mo
27.3627 89.3011 27.059 89.4197 26.6957 89.4974 cv
26.4121 89.5582 26.5029 89.9412 26.716 89.9412 cv
26.7458 89.9412 26.778 89.9337 26.8119 89.9168 cv
27.1684 89.7401 27.4721 89.5315 27.7621 89.2567 cv
27.684 89.1224 li
30.1955 87.3198 mo
29.3536 86.8225 28.4937 86.3522 27.6259 85.9183 cv
27.5737 85.8922 27.5214 85.8662 27.4691 85.8403 cv
28.467 84.635 29.5726 83.6129 30.6576 82.9598 cv
30.705 82.9313 30.7529 82.9027 30.8014 82.8742 cv
32.1806 83.6656 33.4992 84.5614 34.6914 85.4124 cv
33.4759 85.4464 32.2314 86.0009 31.14 86.6644 cv
30.7965 86.8728 30.482 87.0908 30.1955 87.3198 cv
.160784 .337255 .160784 rgb
f
31.7273 96.7357 mo
31.7405 96.6985 31.7483 96.6616 31.7513 96.6254 cv
31.8075 96.5627 31.8595 96.4944 31.9067 96.4207 cv
31.9965 96.2796 32.0521 96.1043 32.1117 95.948 cv
32.3117 95.4232 32.0976 94.8778 31.7142 94.5136 cv
31.7436 94.371 31.7593 94.2206 31.7592 94.0628 cv
31.7583 93.1567 31.1701 92.3338 30.2997 92.0943 cv
30.3614 92.0905 30.4236 92.0885 30.4857 92.0885 cv
30.8781 92.0885 31.2741 92.1684 31.6049 92.3782 cv
32.0527 92.6622 32.3733 93.1305 32.5544 93.6593 cv
32.5717 93.9076 32.6339 94.1533 32.6273 94.4124 cv
32.6127 94.9436 32.4623 95.4432 32.1889 95.8997 cv
32.1081 96.0338 32.14 96.1757 32.2198 96.2723 cv
32.0722 96.4649 31.9066 96.6181 31.7273 96.7357 cv
28.6647 96.4742 mo
28.6603 96.472 28.6559 96.4698 28.6515 96.4676 cv
28.7322 96.4079 28.7904 96.3132 28.8021 96.2181 cv
28.8148 96.1077 28.807 96.012 28.7953 95.9173 cv
28.9411 95.9967 29.0945 96.0544 29.2514 96.0916 cv
29.2634 96.1266 29.2769 96.1612 29.2919 96.1954 cv
29.2055 96.2022 29.1187 96.2182 29.0316 96.2474 cv
28.8808 96.2979 28.7562 96.3761 28.6647 96.4742 cv
.25098 .811765 .180392 rgb
f
31.7513 96.6254 mo
31.775 96.3384 31.4958 96.095 31.194 96.095 cv
31.0964 96.095 30.9965 96.1205 30.9037 96.178 cv
30.739 96.2803 30.5709 96.3139 30.4001 96.3139 cv
30.237 96.3139 30.0715 96.2833 29.9038 96.2527 cv
29.7361 96.2221 29.5663 96.1915 29.395 96.1915 cv
29.3607 96.1915 29.3263 96.1927 29.2919 96.1954 cv
29.2769 96.1612 29.2634 96.1266 29.2514 96.0916 cv
29.3977 96.1263 29.5472 96.1432 29.6966 96.1432 cv
30.601 96.1432 31.5052 95.5264 31.7142 94.5136 cv
32.0976 94.8778 32.3117 95.4232 32.1117 95.948 cv
32.0521 96.1043 31.9965 96.2796 31.9067 96.4207 cv
31.8595 96.4944 31.8075 96.5627 31.7513 96.6254 cv
.403922 .952941 .32549 rgb
f
39.1397 89.1485 mo
38.0115 87.9819 36.8391 86.9729 35.7738 86.1951 cv
35.4267 85.9416 35.0653 85.6792 34.6914 85.4124 cv
34.7308 85.4112 34.7702 85.4107 34.8095 85.4107 cv
35.0573 85.4107 35.3036 85.4329 35.5468 85.481 cv
35.9472 85.8202 36.3223 86.1566 36.6684 86.4837 cv
36.9183 86.7199 37.1969 86.8193 37.466 86.8193 cv
37.6859 86.8193 37.8996 86.753 38.0865 86.6408 cv
38.4291 86.9552 38.7021 87.3713 38.8685 87.9065 cv
38.9954 88.3145 39.0881 88.7318 39.1397 89.1485 cv
.560784 .831372 .521569 rgb
f
37.466 86.8193 mo
37.1969 86.8193 36.9183 86.7199 36.6684 86.4837 cv
36.3223 86.1566 35.9472 85.8202 35.5468 85.481 cv
35.9456 85.5597 36.3366 85.7077 36.7123 85.9402 cv
37.224 86.0607 37.6997 86.2858 38.0865 86.6408 cv
37.8996 86.753 37.6859 86.8193 37.466 86.8193 cv
.470588 .733333 .435294 rgb
f
34.0971 102.057 mo
32.6661 102.008 31.1277 101.693 29.8109 101.339 cv
28.0758 100.872 26.6866 100.371 25.4674 99.6465 cv
25.4562 99.5813 25.4464 99.5155 25.4379 99.449 cv
25.3581 99.292 25.2874 99.1309 25.2258 98.9669 cv
25.9675 99.6126 26.897 100.055 27.8383 100.451 cv
28.7226 100.824 29.6444 101.005 30.545 101.005 cv
33.1309 101.005 35.5451 99.5121 36.4222 96.7601 cv
36.9525 95.094 36.7592 93.2141 35.9965 91.6341 cv
36.2311 91.86 36.4641 92.0925 36.6937 92.3311 cv
37.0889 92.9568 37.4425 93.603 37.7434 94.2491 cv
37.6596 94.3809 37.5645 94.5031 37.4633 94.6189 cv
38.1674 95.908 38.3021 97.5335 37.3529 98.8792 cv
37.2846 98.9764 37.2152 99.074 37.1469 99.1717 cv
36.7738 99.7 36.2269 100.099 35.6195 100.361 cv
35.3266 100.721 35.0023 101.053 34.6137 101.327 cv
34.5258 101.4 34.4272 101.445 34.3344 101.506 cv
34.2713 101.695 34.1916 101.879 34.0971 102.057 cv
29.2304 88.2572 mo
29.5074 87.9246 29.8284 87.6131 30.1955 87.3198 cv
30.6774 87.6045 31.1533 87.8979 31.6215 88.1985 cv
31.3125 88.1506 30.986 88.1271 30.6502 88.1271 cv
30.1898 88.1271 29.7106 88.1712 29.2304 88.2572 cv
.207843 .439216 .227451 rgb
f
32.5811 103.682 mo
30.5071 103.443 28.3327 102.744 26.5461 101.92 cv
26.0003 101.264 25.6165 100.516 25.4674 99.6465 cv
26.6866 100.371 28.0758 100.872 29.8109 101.339 cv
31.1277 101.693 32.6661 102.008 34.0971 102.057 cv
33.7528 102.706 33.2137 103.276 32.5811 103.682 cv
37.7434 94.2491 mo
37.4425 93.603 37.0889 92.9568 36.6937 92.3311 cv
37.1411 92.7963 37.5748 93.2845 37.976 93.7867 cv
37.9484 93.8522 37.9194 93.9177 37.8891 93.9832 cv
37.846 94.0764 37.797 94.1647 37.7434 94.2491 cv
.160784 .388235 .184314 rgb
f
30.5359 104.322 mo
30.0429 104.322 29.5528 104.205 29.099 103.945 cv
28.0979 103.369 27.2043 102.711 26.5461 101.92 cv
28.3327 102.744 30.5071 103.443 32.5811 103.682 cv
31.9576 104.082 31.2436 104.322 30.5359 104.322 cv
30.545 101.005 mo
29.6444 101.005 28.7226 100.824 27.8383 100.451 cv
26.897 100.055 25.9675 99.6126 25.2258 98.9669 cv
25.2119 98.9297 25.1984 98.8923 25.1854 98.8548 cv
25.3012 98.8735 25.4193 98.8815 25.5386 98.8815 cv
25.9774 98.8815 26.4327 98.7735 26.8529 98.6932 cv
27.2883 98.6099 27.3927 98.1566 27.1696 97.8639 cv
27.2079 97.8974 27.2459 97.9303 27.2836 97.9627 cv
27.2943 97.9866 li
27.644 98.3216 28.017 98.5891 28.4428 98.8196 cv
28.5209 98.6849 li
28.2318 98.5027 27.9799 98.2957 27.7387 98.0681 cv
27.89 97.973 27.9867 97.7801 27.8412 97.6258 cv
27.4682 97.2303 27.1713 96.5926 26.6674 96.3719 cv
26.6957 96.2415 26.641 96.0926 26.4701 96.0701 cv
26.3187 96.1014 li
26.2484 95.8846 li
26.2358 95.8548 li
26.2894 95.9358 li
26.3169 95.9673 26.3523 95.9809 26.3868 95.9809 cv
26.4677 95.9809 26.544 95.9063 26.5043 95.8108 cv
26.3151 95.3475 26.0943 94.9916 25.9602 94.5354 cv
26.1545 94.31 26.3638 94.1127 26.5856 93.9418 cv
26.6046 94.1634 26.6425 94.3811 26.6996 94.5901 cv
26.9253 95.417 27.4252 96.533 28.3941 96.533 cv
28.4271 96.533 28.4605 96.5317 28.4945 96.5291 cv
28.5512 96.5247 28.6051 96.5019 28.6515 96.4676 cv
28.6559 96.4698 28.6603 96.472 28.6647 96.4742 cv
28.4759 96.6766 28.4279 96.9642 28.5805 97.2703 cv
28.824 97.7591 29.2157 97.9459 29.6461 97.946 cv
30.3718 97.946 31.2075 97.4148 31.6293 96.9041 cv
31.6754 96.8482 31.7074 96.7917 31.7273 96.7357 cv
31.9066 96.6181 32.0722 96.4649 32.2198 96.2723 cv
32.2791 96.3441 32.3648 96.3908 32.4504 96.3908 cv
32.5269 96.3908 32.6032 96.3535 32.6605 96.2635 cv
33.1576 95.4808 33.6859 93.9207 32.9008 93.1604 cv
32.8659 93.1267 32.8263 93.1124 32.7869 93.1124 cv
32.6893 93.1124 32.5931 93.1997 32.5736 93.2957 cv
32.5482 93.4187 32.546 93.5393 32.5544 93.6593 cv
32.3733 93.1305 32.0527 92.6622 31.6049 92.3782 cv
31.2741 92.1684 30.8781 92.0885 30.4857 92.0885 cv
30.4236 92.0885 30.3614 92.0905 30.2997 92.0943 cv
30.2297 92.0751 30.1579 92.0596 30.0844 92.0481 cv
29.9712 92.0305 29.8576 92.0219 29.7449 92.0219 cv
29.1268 92.0219 28.5338 92.282 28.1762 92.7503 cv
28.3454 92.0607 28.6551 91.9184 29.1494 91.9184 cv
29.3568 91.9184 29.5967 91.9435 29.8725 91.9637 cv
30.1647 91.9852 30.4472 92.0151 30.7413 92.0151 cv
30.7547 92.0151 30.7681 92.0151 30.7816 92.0149 cv
30.9878 92.0128 31.1524 91.9913 31.296 91.9913 cv
31.539 91.9913 31.7219 92.0526 31.9447 92.3724 cv
32.0433 92.5137 32.1867 92.573 32.3334 92.573 cv
32.6927 92.573 33.0714 92.2174 32.8578 91.8391 cv
32.3001 90.8514 31.4413 90.0291 30.2537 90.0291 cv
30.2519 90.0291 30.2502 90.0291 30.2484 90.0291 cv
29.0677 90.0319 27.9932 90.4287 27.2897 91.3557 cv
27.4822 90.5354 27.9142 89.7524 28.5725 89.0417 cv
29.1777 89.068 29.6942 89.3832 30.2699 89.5867 cv
30.5599 89.6892 30.8422 89.8235 31.1185 89.9564 cv
31.3637 90.0735 31.8988 90.2547 32.0765 90.4163 cv
32.098 90.4355 32.1206 90.4436 32.142 90.4436 cv
32.2191 90.4436 32.282 90.3388 32.2308 90.262 cv
31.9545 89.845 31.9486 89.5359 31.556 89.2058 cv
31.2514 88.9505 30.9184 88.7703 30.5443 88.6365 cv
30.3176 88.5553 30.0979 88.5232 29.8814 88.5232 cv
29.5542 88.5232 29.2342 88.5965 28.907 88.6843 cv
29.0072 88.5381 29.115 88.3958 29.2304 88.2572 cv
29.7106 88.1712 30.1898 88.1271 30.6502 88.1271 cv
30.986 88.1271 31.3125 88.1506 31.6215 88.1985 cv
31.1533 87.8979 30.6774 87.6045 30.1955 87.3198 cv
30.482 87.0908 30.7965 86.8728 31.14 86.6644 cv
32.2314 86.0009 33.4759 85.4464 34.6914 85.4124 cv
35.0653 85.6792 35.4267 85.9416 35.7738 86.1951 cv
36.8391 86.9729 38.0115 87.9819 39.1397 89.1485 cv
39.2912 90.3708 39.0897 91.5883 38.3637 92.5526 cv
38.2711 92.9696 38.1487 93.378 37.976 93.7867 cv
37.5748 93.2845 37.1411 92.7963 36.6937 92.3311 cv
36.4641 92.0925 36.2311 91.86 35.9965 91.6341 cv
36.7592 93.2141 36.9525 95.094 36.4222 96.7601 cv
35.5451 99.5121 33.1309 101.005 30.545 101.005 cv
31.8846 98.7362 mo
31.7312 98.7362 31.6059 98.7872 31.4183 98.8582 cv
31.0619 98.993 30.7309 99.0882 30.349 99.1229 cv
29.8414 99.1689 29.9348 99.932 30.4187 99.932 cv
30.4329 99.932 30.4474 99.9314 30.4623 99.93 cv
31.0981 99.8724 32.1088 99.7269 32.2611 98.99 cv
32.2846 98.8743 32.1849 98.786 32.0853 98.762 cv
32.0104 98.7442 31.9453 98.7362 31.8846 98.7362 cv
28.9324 98.989 mo
28.6771 98.989 28.4342 99.0462 28.1732 99.0911 cv
27.9762 99.1255 28.0153 99.402 28.2049 99.402 cv
28.2089 99.402 28.213 99.4019 28.2172 99.4016 cv
28.5512 99.3821 28.85 99.386 29.1635 99.2703 cv
29.2963 99.221 29.2611 99.0174 29.1264 99.0008 cv
29.0606 98.9926 28.9961 98.989 28.9324 98.989 cv
32.2162 98.5735 mo
32.1986 98.7059 li
32.2162 98.5735 li
34.5282 96.757 mo
34.4548 96.757 34.3793 96.7838 34.3099 96.847 cv
33.8471 97.2674 33.2992 97.4388 33.35 98.1795 cv
33.3606 98.3342 33.513 98.4066 33.6468 98.4066 cv
33.6481 98.4066 33.6494 98.4066 33.6508 98.4065 cv
34.3588 98.3973 34.4789 97.8343 34.8363 97.3748 cv
35.0373 97.1174 34.7971 96.757 34.5282 96.757 cv
33.2826 98.1536 mo
33.266 98.2781 li
33.2826 98.1536 li
32.8477 97.055 mo
32.7399 97.055 32.7229 97.2275 32.8373 97.2425 cv
32.8422 97.2431 32.8469 97.2434 32.8514 97.2434 cv
32.9601 97.2434 32.9779 97.071 32.8617 97.056 cv
32.8569 97.0553 32.8522 97.055 32.8477 97.055 cv
33.516 96.3211 mo
33.5333 96.5946 33.7715 96.7988 34.0239 96.7988 cv
34.1566 96.7988 34.2933 96.7423 34.4037 96.6097 cv
34.6879 96.2684 35.0404 95.8753 35.1293 95.4275 cv
35.223 94.9613 34.9701 94.576 34.9135 94.1224 cv
34.9051 94.052 34.852 94.0182 34.7962 94.0182 cv
34.7483 94.0182 34.6985 94.0431 34.6732 94.0911 cv
34.6225 94.1902 34.5551 94.2752 34.4818 94.3543 cv
34.6088 93.8767 34.6957 93.387 34.7582 92.9007 cv
34.9037 92.8206 34.9965 92.6688 34.9418 92.4544 cv
34.9047 92.3108 34.8734 92.139 34.8402 91.9573 cv
34.8471 91.8538 34.8636 91.7444 34.8676 91.6429 cv
34.8754 91.4412 34.7914 91.3113 34.683 91.2132 cv
34.6303 91.0188 34.5668 90.8328 34.4828 90.6697 cv
34.6566 90.4969 34.726 90.2454 34.5053 90.0023 cv
34.1937 89.66 33.9242 89.2864 33.5219 89.055 cv
33.5011 89.043 33.4778 89.0375 33.4539 89.0375 cv
33.3636 89.0375 33.2652 89.1152 33.2621 89.2044 cv
33.2494 89.6707 33.434 90.1053 33.5648 90.5511 cv
33.6273 90.659 li
33.5707 91.0447 33.6889 91.5091 33.8197 91.9344 cv
33.89 92.4539 33.9662 92.9534 33.9613 93.4944 cv
33.9535 94.3479 33.6498 95.0862 33.1283 95.7527 cv
32.918 96.022 33.1802 96.3308 33.4386 96.3308 cv
33.4646 96.3308 33.4906 96.3277 33.516 96.3211 cv
31.6861 87.4218 mo
31.3914 87.4218 31.323 87.8275 31.516 88.0164 cv
31.8441 88.3387 32.0892 88.2332 32.5414 88.3275 cv
32.5514 88.3295 32.5608 88.3305 32.5697 88.3305 cv
32.6818 88.3305 32.7075 88.1748 32.6342 88.1038 cv
32.2357 87.7161 32.2816 87.5354 31.7592 87.4295 cv
31.7335 87.4243 31.7091 87.4218 31.6861 87.4218 cv
27.0071 97.7181 mo
26.9988 97.713 26.9904 97.7081 26.9818 97.7034 cv
26.6625 97.5281 26.3969 97.2815 26.1557 97.0086 cv
26.2719 97.0525 26.3881 97.0994 26.4984 97.1575 cv
26.5092 97.1585 li
26.6437 97.3615 26.8218 97.5469 27.0071 97.7181 cv
25.8812 95.0686 mo
25.8376 94.9778 25.7935 94.887 25.7524 94.7952 cv
25.7686 94.7733 25.785 94.7517 25.8015 94.7303 cv
25.8242 94.8433 25.851 94.9568 25.8812 95.0686 cv
.160784 .34902 .164706 rgb
f
28.6515 96.4676 mo
27.8109 96.043 27.3938 95.5178 28.1635 94.4334 cv
28.5892 93.8323 28.6019 93.2434 28.3812 92.7522 cv
28.8305 92.6814 29.683 92.1824 29.9154 92.1409 cv
30.0402 92.1185 30.1691 92.1024 30.2997 92.0943 cv
31.1701 92.3338 31.7583 93.1567 31.7592 94.0628 cv
31.7593 94.2206 31.7436 94.371 31.7142 94.5136 cv
31.4798 94.291 31.1823 94.1362 30.8773 94.095 cv
30.8036 94.085 30.7314 94.0802 30.6609 94.0802 cv
29.8433 94.0802 29.2603 94.7322 29.1947 95.5535 cv
29.1888 95.6351 li
29.1766 95.7874 29.2001 95.9424 29.2514 96.0916 cv
29.0945 96.0544 28.9411 95.9967 28.7953 95.9173 cv
28.807 96.012 28.8148 96.1077 28.8021 96.2181 cv
28.7904 96.3132 28.7322 96.4079 28.6515 96.4676 cv
.282353 .866667 .207843 rgb
f
29.6966 96.1432 mo
29.5472 96.1432 29.3977 96.1263 29.2514 96.0916 cv
29.2001 95.9424 29.1766 95.7874 29.1888 95.6351 cv
29.1947 95.5535 li
29.2603 94.7322 29.8433 94.0802 30.6609 94.0802 cv
30.7314 94.0802 30.8036 94.085 30.8773 94.095 cv
31.1823 94.1362 31.4798 94.291 31.7142 94.5136 cv
31.5052 95.5264 30.601 96.1432 29.6966 96.1432 cv
.415686 .988235 .333333 rgb
f
28.3941 96.533 mo
27.4252 96.533 26.9253 95.417 26.6996 94.5901 cv
26.6425 94.3811 26.6046 94.1634 26.5856 93.9418 cv
26.5128 93.0939 26.7172 92.1891 27.1879 91.4974 cv
27.2209 91.4489 27.2548 91.4016 27.2897 91.3557 cv
27.9932 90.4287 29.0677 90.0319 30.2484 90.0291 cv
30.2502 90.0291 30.2519 90.0291 30.2537 90.0291 cv
31.4413 90.0291 32.3001 90.8514 32.8578 91.8391 cv
33.0714 92.2174 32.6927 92.573 32.3334 92.573 cv
32.1867 92.573 32.0433 92.5137 31.9447 92.3724 cv
31.7219 92.0526 31.539 91.9913 31.296 91.9913 cv
31.1524 91.9913 30.9878 92.0128 30.7816 92.0149 cv
30.7681 92.0151 30.7547 92.0151 30.7413 92.0151 cv
30.4472 92.0151 30.1647 91.9852 29.8725 91.9637 cv
29.5967 91.9435 29.3568 91.9184 29.1494 91.9184 cv
28.6551 91.9184 28.3454 92.0607 28.1762 92.7503 cv
28.5338 92.282 29.1268 92.0219 29.7449 92.0219 cv
29.8576 92.0219 29.9712 92.0305 30.0844 92.0481 cv
30.1579 92.0596 30.2297 92.0751 30.2997 92.0943 cv
30.1691 92.1024 30.0402 92.1185 29.9154 92.1409 cv
29.683 92.1824 28.8305 92.6814 28.3812 92.7522 cv
28.6019 93.2434 28.5892 93.8323 28.1635 94.4334 cv
27.3938 95.5178 27.8109 96.043 28.6515 96.4676 cv
28.6051 96.5019 28.5512 96.5247 28.4945 96.5291 cv
28.4605 96.5317 28.4271 96.533 28.3941 96.533 cv
.203922 .466667 .192157 rgb
f
32.2198 96.2723 mo
32.14 96.1757 32.1081 96.0338 32.1889 95.8997 cv
32.4623 95.4432 32.6127 94.9436 32.6273 94.4124 cv
32.6339 94.1533 32.5717 93.9076 32.5544 93.6593 cv
32.812 94.4116 32.7869 95.2862 32.4428 95.9251 cv
32.3741 96.0528 32.2996 96.1683 32.2198 96.2723 cv
.282353 .866667 .207843 rgb
f
32.4504 96.3908 mo
32.3648 96.3908 32.2791 96.3441 32.2198 96.2723 cv
32.2996 96.1683 32.3741 96.0528 32.4428 95.9251 cv
32.7869 95.2862 32.812 94.4116 32.5544 93.6593 cv
32.546 93.5393 32.5482 93.4187 32.5736 93.2957 cv
32.5931 93.1997 32.6893 93.1124 32.7869 93.1124 cv
32.8263 93.1124 32.8659 93.1267 32.9008 93.1604 cv
33.6859 93.9207 33.1576 95.4808 32.6605 96.2635 cv
32.6032 96.3535 32.5269 96.3908 32.4504 96.3908 cv
.203922 .466667 .192157 rgb
f
30.0952 96.9988 mo
29.8597 96.9546 29.6208 96.8828 29.3832 96.7879 cv
29.1248 96.6846 28.881 96.5826 28.6647 96.4742 cv
28.7562 96.3761 28.8808 96.2979 29.0316 96.2474 cv
29.1187 96.2182 29.2055 96.2022 29.2919 96.1954 cv
29.4463 96.5489 29.7522 96.8569 30.0952 96.9988 cv
31.4363 96.8913 mo
31.5513 96.8192 31.6572 96.7301 31.7513 96.6254 cv
31.7483 96.6616 31.7405 96.6985 31.7273 96.7357 cv
31.6338 96.797 31.5366 96.8487 31.4363 96.8913 cv
.282353 .866667 .207843 rgb
f
30.6172 97.0494 mo
30.4464 97.0494 30.2718 97.0319 30.0952 96.9988 cv
29.7522 96.8569 29.4463 96.5489 29.2919 96.1954 cv
29.3263 96.1927 29.3607 96.1915 29.395 96.1915 cv
29.5663 96.1915 29.7361 96.2221 29.9038 96.2527 cv
30.0715 96.2833 30.237 96.3139 30.4001 96.3139 cv
30.5709 96.3139 30.739 96.2803 30.9037 96.178 cv
30.9965 96.1205 31.0964 96.095 31.194 96.095 cv
31.4958 96.095 31.775 96.3384 31.7513 96.6254 cv
31.6572 96.7301 31.5513 96.8192 31.4363 96.8913 cv
31.1807 96.9998 30.9044 97.0494 30.6172 97.0494 cv
.415686 .988235 .333333 rgb
f
29.6461 97.946 mo
29.2157 97.9459 28.824 97.7591 28.5805 97.2703 cv
28.4279 96.9642 28.4759 96.6766 28.6647 96.4742 cv
28.881 96.5826 29.1248 96.6846 29.3832 96.7879 cv
29.6208 96.8828 29.8597 96.9546 30.0952 96.9988 cv
30.2718 97.0319 30.4464 97.0494 30.6172 97.0494 cv
30.9044 97.0494 31.1807 96.9998 31.4363 96.8913 cv
31.5366 96.8487 31.6338 96.797 31.7273 96.7357 cv
31.7074 96.7917 31.6754 96.8482 31.6293 96.9041 cv
31.2075 97.4148 30.3718 97.946 29.6461 97.946 cv
.203922 .466667 .192157 rgb
f
26.474 92.5691 mo
26.4906 92.4368 li
26.474 92.5691 li
f
25.9322 93.4643 mo
25.8677 93.4643 25.8042 93.4288 25.7943 93.3484 cv
25.7641 93.1155 25.7348 92.8826 25.7064 92.6497 cv
25.6979 92.5824 25.7448 92.5468 25.7942 92.5468 cv
25.8353 92.5468 25.8782 92.5716 25.892 92.6234 cv
25.9525 92.8519 26.0131 93.0804 26.0736 93.3089 cv
26.0994 93.4058 26.015 93.4643 25.9322 93.4643 cv
f
25.9535 91.3777 mo
25.9711 91.2454 li
25.9535 91.3777 li
f
26.716 89.9412 mo
26.5029 89.9412 26.4121 89.5582 26.6957 89.4974 cv
27.059 89.4197 27.3627 89.3011 27.684 89.1224 cv
27.7621 89.2567 li
27.4721 89.5315 27.1684 89.7401 26.8119 89.9168 cv
26.778 89.9337 26.7458 89.9412 26.716 89.9412 cv
f
32.142 90.4436 mo
32.1206 90.4436 32.098 90.4355 32.0765 90.4163 cv
31.8988 90.2547 31.3637 90.0735 31.1185 89.9564 cv
30.8422 89.8235 30.5599 89.6892 30.2699 89.5867 cv
29.6942 89.3832 29.1777 89.068 28.5725 89.0417 cv
28.5457 89.0406 28.5189 89.04 28.4917 89.04 cv
28.4684 89.04 28.4449 89.0404 28.4213 89.0413 cv
28.4193 89.0414 28.4173 89.0414 28.4154 89.0414 cv
28.279 89.0414 28.2572 88.8587 28.391 88.824 cv
28.5662 88.779 28.7375 88.7297 28.907 88.6843 cv
29.2342 88.5965 29.5542 88.5232 29.8814 88.5232 cv
30.0979 88.5232 30.3176 88.5553 30.5443 88.6365 cv
30.9184 88.7703 31.2514 88.9505 31.556 89.2058 cv
31.9486 89.5359 31.9545 89.845 32.2308 90.262 cv
32.282 90.3388 32.2191 90.4436 32.142 90.4436 cv
f
25.0795 98.8345 mo
24.8775 98.7894 24.6835 98.7082 24.5033 98.576 cv
24.2368 98.3807 24.0182 98.1331 23.8702 97.8564 cv
23.8411 97.7856 23.809 97.7162 23.7742 97.6476 cv
23.6289 97.2719 23.6119 96.8568 23.7726 96.453 cv
23.8239 96.7201 23.899 96.9848 23.9994 97.2449 cv
24.2478 97.8886 24.6231 98.405 25.0795 98.8345 cv
23.9286 94.0044 mo
23.8668 93.343 23.9738 92.6744 24.14 91.9749 cv
24.1634 91.8765 24.2223 91.7984 24.2973 91.7443 cv
24.1419 92.2329 24.0948 92.7652 24.1849 93.3372 cv
24.0853 93.5545 23.9995 93.7775 23.9286 94.0044 cv
.247059 .541176 .247059 rgb
f
23.8702 97.8564 mo
23.8338 97.7884 23.8017 97.7187 23.7742 97.6476 cv
23.809 97.7162 23.8411 97.7856 23.8702 97.8564 cv
.207843 .498039 .211765 rgb
f
25.5386 98.8815 mo
25.4193 98.8815 25.3012 98.8735 25.1854 98.8548 cv
25.1499 98.8491 25.1146 98.8423 25.0795 98.8345 cv
24.6231 98.405 24.2478 97.8886 23.9994 97.2449 cv
23.899 96.9848 23.8239 96.7201 23.7726 96.453 cv
23.7872 96.4164 23.8032 96.3799 23.8207 96.3436 cv
23.977 96.0198 24.2699 95.8235 24.5814 95.7801 cv
24.4887 95.6336 24.392 95.4866 24.3178 95.3406 cv
24.0888 94.8937 23.9703 94.4507 23.9286 94.0044 cv
23.9995 93.7775 24.0853 93.5545 24.1849 93.3372 cv
24.0948 92.7652 24.1419 92.2329 24.2973 91.7443 cv
24.3749 91.6883 24.4699 91.6581 24.5608 91.6581 cv
24.7228 91.6581 24.8717 91.7541 24.8861 91.9705 cv
24.9457 92.8777 25.3451 93.7713 25.6762 94.6131 cv
25.6997 94.6745 25.7254 94.7351 25.7524 94.7952 cv
25.7935 94.887 25.8376 94.9778 25.8812 95.0686 cv
25.851 94.9568 25.8242 94.8433 25.8015 94.7303 cv
25.7668 94.5582 25.7415 94.3874 25.7279 94.2259 cv
25.7236 94.1704 25.7663 94.1391 25.8082 94.1391 cv
25.842 94.1391 25.8753 94.1595 25.8832 94.2039 cv
25.9034 94.3213 25.9295 94.431 25.9602 94.5354 cv
26.0943 94.9916 26.3151 95.3475 26.5043 95.8108 cv
26.544 95.9063 26.4677 95.9809 26.3868 95.9809 cv
26.3523 95.9809 26.3169 95.9673 26.2894 95.9358 cv
26.2358 95.8548 li
26.2484 95.8846 li
26.3187 96.1014 li
26.4701 96.0701 li
26.641 96.0926 26.6957 96.2415 26.6674 96.3719 cv
27.1713 96.5926 27.4682 97.2303 27.8412 97.6258 cv
27.9867 97.7801 27.89 97.973 27.7387 98.0681 cv
27.9799 98.2957 28.2318 98.5027 28.5209 98.6849 cv
28.4428 98.8196 li
28.017 98.5891 27.644 98.3216 27.2943 97.9866 cv
27.2836 97.9627 li
27.2459 97.9303 27.2079 97.8974 27.1696 97.8639 cv
27.3927 98.1566 27.2883 98.6099 26.8529 98.6932 cv
26.4327 98.7735 25.9774 98.8815 25.5386 98.8815 cv
26.1557 97.0086 mo
26.3969 97.2815 26.6625 97.5281 26.9818 97.7034 cv
26.9904 97.7081 26.9988 97.713 27.0071 97.7181 cv
26.8218 97.5469 26.6437 97.3615 26.5092 97.1585 cv
26.4984 97.1575 li
26.3881 97.0994 26.2719 97.0525 26.1557 97.0086 cv
.203922 .466667 .192157 rgb
f
32.8514 97.2434 mo
32.8469 97.2434 32.8422 97.2431 32.8373 97.2425 cv
32.7229 97.2275 32.7399 97.055 32.8477 97.055 cv
32.8522 97.055 32.8569 97.0553 32.8617 97.056 cv
32.9779 97.071 32.9601 97.2434 32.8514 97.2434 cv
f
34.0239 96.7988 mo
33.7715 96.7988 33.5333 96.5946 33.516 96.3211 cv
33.4906 96.3277 33.4646 96.3308 33.4386 96.3308 cv
33.1802 96.3308 32.918 96.022 33.1283 95.7527 cv
33.6498 95.0862 33.9535 94.3479 33.9613 93.4944 cv
33.9662 92.9534 33.89 92.4539 33.8197 91.9344 cv
33.6889 91.5091 33.5707 91.0447 33.6273 90.659 cv
33.5648 90.5511 li
33.434 90.1053 33.2494 89.6707 33.2621 89.2044 cv
33.2652 89.1152 33.3636 89.0375 33.4539 89.0375 cv
33.4778 89.0375 33.5011 89.043 33.5219 89.055 cv
33.9242 89.2864 34.1937 89.66 34.5053 90.0023 cv
34.726 90.2454 34.6566 90.4969 34.4828 90.6697 cv
34.5668 90.8328 34.6303 91.0188 34.683 91.2132 cv
34.7914 91.3113 34.8754 91.4412 34.8676 91.6429 cv
34.8636 91.7444 34.8471 91.8538 34.8402 91.9573 cv
34.8734 92.139 34.9047 92.3108 34.9418 92.4544 cv
34.9965 92.6688 34.9037 92.8206 34.7582 92.9007 cv
34.6957 93.387 34.6088 93.8767 34.4818 94.3543 cv
34.5551 94.2752 34.6225 94.1902 34.6732 94.0911 cv
34.6985 94.0431 34.7483 94.0182 34.7962 94.0182 cv
34.852 94.0182 34.9051 94.052 34.9135 94.1224 cv
34.9701 94.576 35.223 94.9613 35.1293 95.4275 cv
35.0404 95.8753 34.6879 96.2684 34.4037 96.6097 cv
34.2933 96.7423 34.1566 96.7988 34.0239 96.7988 cv
f
32.5697 88.3305 mo
32.5608 88.3305 32.5514 88.3295 32.5414 88.3275 cv
32.0892 88.2332 31.8441 88.3387 31.516 88.0164 cv
31.323 87.8275 31.3914 87.4218 31.6861 87.4218 cv
31.7091 87.4218 31.7335 87.4243 31.7592 87.4295 cv
32.2816 87.5354 32.2357 87.7161 32.6342 88.1038 cv
32.7075 88.1748 32.6818 88.3305 32.5697 88.3305 cv
f
24.8634 90.6574 mo
24.7583 90.4302 24.7763 90.1907 24.8636 89.9563 cv
24.894 89.8745 24.9328 89.7934 24.9778 89.7136 cv
25.2025 89.3152 25.5802 88.9503 25.8266 88.7103 cv
26.1391 88.4051 26.4369 88.1194 26.8315 87.9163 cv
27.2611 87.6956 27.725 87.7259 28.2006 87.6907 cv
28.2062 87.6903 28.2118 87.6901 28.2174 87.6901 cv
28.4242 87.6901 28.5827 87.9746 28.3773 88.1097 cv
27.9535 88.388 27.599 88.7 27.1342 88.9046 cv
26.9469 88.9869 26.7942 89.0621 26.6688 89.148 cv
25.9454 89.5454 25.3144 90.0522 24.8634 90.6574 cv
.247059 .541176 .247059 rgb
f
25.4666 91.1088 mo
25.3206 91.1088 25.1769 91.0474 25.058 90.929 cv
24.9701 90.8413 24.9065 90.7504 24.8634 90.6574 cv
25.3144 90.0522 25.9454 89.5454 26.6688 89.148 cv
26.4193 89.3187 26.2776 89.5316 26.1859 89.9271 cv
26.1019 90.2879 26.1244 90.7781 25.7826 91.0081 cv
25.6818 91.0758 25.5736 91.1088 25.4666 91.1088 cv
.203922 .466667 .192157 rgb
f
30.4187 99.932 mo
29.9348 99.932 29.8414 99.1689 30.349 99.1229 cv
30.7309 99.0882 31.0619 98.993 31.4183 98.8582 cv
31.6059 98.7872 31.7312 98.7362 31.8846 98.7362 cv
31.9453 98.7362 32.0104 98.7442 32.0853 98.762 cv
32.1849 98.786 32.2846 98.8743 32.2611 98.99 cv
32.1088 99.7269 31.0981 99.8724 30.4623 99.93 cv
30.4474 99.9314 30.4329 99.932 30.4187 99.932 cv
f
33.6468 98.4066 mo
33.513 98.4066 33.3606 98.3342 33.35 98.1795 cv
33.2992 97.4388 33.8471 97.2674 34.3099 96.847 cv
34.3793 96.7838 34.4548 96.757 34.5282 96.757 cv
34.7971 96.757 35.0373 97.1174 34.8363 97.3748 cv
34.4789 97.8343 34.3588 98.3973 33.6508 98.4065 cv
33.6494 98.4066 33.6481 98.4066 33.6468 98.4066 cv
f
33.266 98.2781 mo
33.2826 98.1536 li
33.266 98.2781 li
f
32.1986 98.7059 mo
32.2162 98.5735 li
32.1986 98.7059 li
f
28.2049 99.402 mo
28.0153 99.402 27.9762 99.1255 28.1732 99.0911 cv
28.4342 99.0462 28.6771 98.989 28.9324 98.989 cv
28.9961 98.989 29.0606 98.9926 29.1264 99.0008 cv
29.2611 99.0174 29.2963 99.221 29.1635 99.2703 cv
28.85 99.386 28.5512 99.3821 28.2172 99.4016 cv
28.213 99.4019 28.2089 99.402 28.2049 99.402 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (5_head.eps)
%%CreationDate: 11/11/2019 10:30 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`>`<+SI&T2ol6?6:md['Er8bUWqu,pVG>>f.-$Z#0<JuoY8SM6``e*NBX!Bp>q"X.=%khg-^A6d]X/EGa
%It)_9r71-%J$D*5ouYD5Dk;>,^Nm-^lLt&F=+AojT0IVtB=[1$=6]%?B?tL7?G1gXjNT;a/Ski&oAY8p?ETG1i9tJ8?iTDF1jsZH
%k)I$Gg`*0kjS-FEc]=;k*^BVDhqrn[m/&`FT=fIClK/'B),@mE<RtB(H2HD2rIs$#^/Bu`atItZgOF\C_t,h`bh[T2r:S=\G.>M@
%h>Qb'[!^3#Z964u=R=Ca\N1Z*nT0KcXf("R)uf8L@2JSs?[Qk31VB<@QX*;UCMt$!3tFU":\g1?_:Pm)Hh$1iT>,lJ0uScq\:*o'
%o-\HoFnh/A=,iQ$'X&94m8@0'</+:(o1jbnS_pgdY"GW:B6@oi+\IqK-!fV3X'N-Uc0^S<DZB9ch1*1fo$-Q;'9DJ2Dn^Vms,.`(
%OKUujI/[-K'Ngmpq]DEe^A`nSceca0B!sQ;j57NGk4Z>j\)-?2q%HBFe:IOI46$iI?@R>!7V9H:k<E@1J$H%Is4qUCGk()IJ%^P$
%2g`X7^:SghLKFM.YO"U7/?1f-2"[quEH;_4J1&9o/t(dqh\Pt%*W!HBs+(H'+gV*Zf?_0Zp@9"OjPA-ni+s>0o(B>-elbiIY3Q&W
%&Qa,Oe+t/5C$C4.Df/qUDK5[A_f)FJZs<Rl90E(CnsdOt(DrG+n^"nmUmEjYT"k-QI_5T3^QVn"n==t@)nu==/%OTk9AK=4UYkA*
%lITB*s$;,0bL`qHq!M3:s7t4*7mF]dk1)]Pmf(8odl4I:b;b!XqqXL8Du%H"G!G(nhu2O,PG`F3q=cl3lH-C$IeJd@b'1S6h<Ak>
%>5kl.pEA.H+qU<PhEY:@07UW_rp%,[`d6K/meFcm-SM+)hXMEBL;/32U\s82o[A+ZS9XqnNt8h"#gISA/\DJ;3P5;q:7-M'O@T9G
%fulId@,$msDuT=moq*sHc_(5&IJ`=&ea<CIIFfLSr:B<FVggbBVmV!C?,(XTk"i:sgqN^Kqp>fJcaAPUle;&o00_RErqtHYYFg4:
%Ve8eLqq"&[s/4Zp?G1YKmXF-hj%8k2pa]VFOGA;\f,+JZlM7dT?]<%L/RM'C4F?r&p<14"s5s#`dYDQ:qW70PCB*)f$9R5E"%6qi
%2=L53s0>E>='^-8r:8ao;ndY%T"4KPmB=NNXSLc3;u.W/^3M&hpDsM2eoSS'b7d_W^OGlPn!L';k'qjR;QPW/QTmTZF1]`B="h:?
%3P51Z:J\^:jilt%I_";jI4Zu']OLj;kAO_NA7aZ5S58tBlR1RPPL]4?ZG_Rh,$hcAa?OU:mr*,Ob%!'5bBb1PqemN?qT$X;`!Z+D
%q1-5jg^7)/LOUl#<W49Jr8;KIT7#]Qe'c0tMS#L.]mp!;DDJoLY29GlL#-@ln$22ff\%:`3)*l@/.:kJ46#Re]ZpHQO*[#^8R<Zj
%oQttKf?h"Z+'4<d6?eJ5Idt>An"/G9h<oKjT=k(;lfNK9<qqt,pm1HZOKrp6IqpW\O2(3,<P1_W9<LH(MU9ceLPrb)r'-5a?0CN!
%8%]>`rn>K![$)KM[Vsb,5IKU=>&9o.k2]Y0W?1B>atIM/\]3p8.lZQ47k5dL,o?)XMT[r!*9Ggc\OEY=5:OVmZBrJj,qnLPN`/!]
%ECbF:jADnR,"G7&%\I9$,StC[35pLinuAr`Gsok9+U0rS>iHB6_F]bt36388'3_>TPTULT8MX=QrjX*,',H)8j!;[m+6;(tEUDj4
%IJ$#=]O^SRCG25.5N3:M"c'^0-TR3-m%qVndOFb;+qd>)/FJP2Y*6oa!p>jg3DRapNe@8_0@t5$*`\6E,;%<'TT=?qkl9c.aG[TK
%q!#P@jitR;=\D!Q2u$n'M189^8GV^?rr4+]omSQDY4lcd"1g.+Uj^6:m"6;A'"m^n*%*`VEo;$ON9_s6"3D,U6W]34:jUiT*(Q-`
%K,ci_@No8I$%`Sb']J(jj>`#J*TYjOSusSm`0[3'jdIlN,$cC"OKc<PPb#rorZ(#!p[\@9E]!Sjjo:8:It?NC1dq=*L8-;2aZ#8&
%M'S\R:h`&5T06M1aCPsobT`I:bq>QK:M96D@hOY`,,]j2Q;@GMN]T:aO"=SG?VYJNq8sn,HZp*R#pQ?CL?fNhOmjXPFpLSM-^d%N
%b%J,lO/K@\+;:Wp$p1>MHs_u=0%(,_Hm:chADUAObG0liP?FGf/?WQ;DIgD3N*d0VE,<sh1=AHX^5=0UY)h0n+sUD>VMGplMbK[0
%p7+gm-s]h`E80>j3/[LC@usI07sP+7eDp4AIlne6N\[0B.IkKW,3n@fF>t<&d%;8F6=(?+#(oN:7&Sl-VrN#C)TRu8ZZ(F;2#J=!
%&VMTj:aPooq,.P=K^N#s%mkN:39&d&'chB^T\(U4$,lW/,8"Sd>YA_r.HF"!b8\Z?W_^t*&?/VP@g*C)R=LpCFkKV=dg\B6??>Qp
%dDB50Lf5sJ,$$gVPB5'LMJ7FSP\0Z!_?]DfFH@)F=/3+*7;6#e!d)$oVo-d<#22QO5W##?6Bi_J:gbF,'C\UL(qAL[IQsPs(MGhV
%O0WfIn;-f"n6gdBS++f\9R*OZW%_&kNMC)#D*3PHk3WU>p4f3qViT&#)%^mDPr^r+$6CjVa5M'dN6nJ)#"3\Z^A&;NjUtE>bRIj;
%Ng#1V^e&jJ/E,"'Y)X/6',qTIEN3Nk([)^9!"@AKMW$f8EIs-8Fbg/dM-rK.FbGVU&&uSB$3uHd;%;p'!$8,2:AeLb]NOqrqF%k?
%.^q$[>lnXVlr#gd@A"SM8Yfgl,`5:@dV/22,gm3[S7T!!jXc`FR=00F&e6*!f5aMXfIYhs7=)Vfd3:>g&n*eVP[2IBX*f5ZY)ach
%=GR_F2HXG^[^_R8=<0.bOirXBU2lEp@6qHdE`.!>0f*@&07XXT0J`iiaD?T=q2dP#hSS8l/Y,bLBI)j&^]gJd('b]p/.u&)1)C1$
%)AXq37kP"t>R!fdG8pgEUN(<0_rTOqP"`2-Lbq.qZXK":7:Q!J8ZJ1(OTpY@K1&BB(aOGa7pq9$1IW:C&2c]%oVaT.P*m<89T>f@
%G8M5-WusoFA,*)J\Ee=rY+(!\(=`]GFW5;O9u'E!s$tp:NUDk;$$"r=5Kt/?S*=/!$7HN4VhiV0Bi7Lt8fF#r[+,uJ$P4jH_d+qR
%_leJb#N-\1^3oM2p7'mIeq@@`)fW&fDP+Krcn,h_p-B=neR[ea6k;Aa&YeJB=:#5[b-2PR#ZqaK3t>I<McfC96r.8F3"b!m@Ot,?
%K_e6/_,KSbea@"n:j!\U5T=PFW_63T:m7$aYtub7W=D^Pq3B(UQX=$GqnbEJ\p_[pVWta]USacC3t;uQ;p3[\Z\;HqSZ4_NG,jt0
%iK^,1<lN[?p3MO3UPc9+_t?"BERPFLhUCF9+!L^ac4MZMnX^tB&$"%SNdU:mmQ]cmp\h7DfHGHdpt>$XLYVDck<8b<I)l-0R!]i#
%3[N/=kZ['nH=[]'2MbA1RUn,['Qf82(K.2;%^N1la9!/gWQWdFU/=>"O/?Ii]ok^WO/AM:G;/D6%D"\3\J+XqC7I\_;lOnQWl\`+
%9f5ECX_XQZ/DC]!9FWa7a+c<,).I[k6q?Xh'K`JcJ=0m&(^jr7X]fHtanjC3j6YJ.1`V9j*+rR.NA`q5\h1grE0H%JoY8s%]]Fr^
%8%Nb<3t_Y,mjJ]1l?^Mll[']?m>'Ke*G<%Rn_cJmpdacIM1>M7h!nYgA^Vr+`#RVc0F]sD.spOpYm*Xh,Vc$o9L2g`@C:oXl,;@P
%Zs,#^(-%>7c=3TE39_)r$(X)/h$q#(UNE%^CR&ZfN!FFq:1m`V%'?68"0ej:1X)<Le=F7G>?&55"ge=AX-OX+T4jIpE<+atO1Lpn
%X(0F4bsp`l*OX9U>J5*TJM%pTR`@+uLM<U^O%E9l*UdaH[ibA1[!-<!%luo3nR(RAs!mfEZU9?FJOcNVQ)W#-T3[@2!1a(D-]@q!
%h%i_s29$"6@POj:o:k2O1KE_M_m#WCH"L2:*UKY@3JhAQ`KisE@?MTWI2AjN?pS3&-kLPhq^EB5>A1+R+TT`/6Z>]d.!cA,Y0_6*
%"L=u^#[p$"Fg%po\099k$rAgJ>"#BcMSZ+bUKU3n6IdSlA+Ve<a0[?No>E!%Mr'c@"FRB&Z^O%Tf`Tt)0B^pRoHTYUIZ>5)e)b)!
%XB[kMUGWQFi^43dj+GW%!;rKWmeG^]s"iK9CQt<XS)_b"(;k0VDShAph40K\oM$Z"Ot#UT2oh\L#U%NBN(6YloQ]"%"O.'7*PkN:
%T8gR--KkcW'7_Ig:4SlBFXka`A?8Hj:5(Y:i7rjP#&T5ddD=(_5arFs8SE/L2\"Vkr.n9A+jLR<.a4kWVa?p]Ft2:X[jZ&=kR#m?
%A$Jn+Z(dunJ3&V2p:0J:@^CEuU"?;&/4Nhp:<SDJ=rW+nGT:2Y0r1gaGDb2X51QE(XU_[Z<RX[B3Y%U%Nus?0Dmid:HGo%RS)aFe
%XbY\O`/(mX]=I)a^%FA-l>_4@EHoPJGC7b_pV9oJ%_:VPci)12a.&RE)We:pq5dFWCQqV;a3P[cZUXbl;*Jc[:No=X-mKIPqOd*R
%qtOMR8"n!<XbblX"P61i:+eJ)4;F:-CiKigBJ9;F6E7o#\KBi&.)Bp)klQe,[df0[k'goc=&+3f+^S_=V(,aH?,*8X4d+,Q^K^s"
%b3#/aht:bCkm+!Bj7<T44o#4uP?]YSb^KOHIFT2E,CO?erJYPm9aQuX[tnM=b_n%`DOGO/c_!EdGs$.t30$'8j?^QBmq4si8o,39
%.Ou0d-klnXOYq#*DG;Rjqj34-q'ka0#qNt>SVd*(Q'Hj8b(Xr(](d$aqod'-3W"_jGeb?b2P^9#h6XlVa+!KTmCc:L6!V&b6)=Hq
%Jnu';.Uh3Z"'JKS\J"$n=PPWiQ"31iYdg&)No4deZf8cN35SaZYc`ShKQNXVW.8bsphC:F,m(U_=WR+5//G06,=$B>=GfS8-[;*e
%g`l[7OEOhtRSC'Z)TuWuN57be[TMCdk,b-S_D9M-P?$&P;Ulae"\ru*G,j]&DKAaGje_[pe<<S`'6@)05IG.&#0Th3Np<.2g'eWq
%S5t,7G2-cVlJkC471QZ9:;MrMN\hB.24&H4e2p0a4)1qaHu*c\MoYA)@6\eQ90YB0*VW]KlQK$>H(0<QTp`K)LYVDpgW(>,n+aUu
%DLu+32Fk!NR_D'CNX!fe`0?[OUWIsTVJ\&aI8p5'L6t@lEmPU`/j5_2l0KB-BY#(<JCud-SiZ*m[$'Q[Q_(4p]^$6;Xa@'C)@;"a
%=03p'Sn/+gq:!\jE"*>DS>1AX;+'L^2SZ[c;\,)h&J.I"8]0CJb`)V2ZN*p3JV&W,/\,C/0M(RMM0u[_eJF-Br]Q9%3UM.8_a!c9
%O_DY(O5G$LHWGUII]<FtaO/V7Nan'uS'e&34j6-s;RtI%6Z^Nke."Pja5]\1E8cWI*pF\8Q9446+6C@:cO[SHS[Q!ImG3QQnH!:9
%cg`+SNkJh4q:+o^obLkCcMq;T06rkBXlY;+jkk.W:R9nQB(n*j?aR_@h>`SlrY8ZF;sE7T/a0bO/U>V4+.<+pJ>Eu]d_(&3Q,K9K
%_Fj!a;MUM-J<[K]dN'`-o_&V<D1SKU+B#K)*'0NR,Iui?aCka8mK86i!20-1)"]MTk+2u+f=$IinZ9^[#9W'U6$Mh9NdUYa45TRu
%%mBn:hsh,r50,KaDmJYsRml]%"1:i<lT@MkS/*iMO/t`9*KjGHTa"(=OKM=H,c44JohhnUZH=DXZ`[:umnn/upsGY4URRsBXuCJn
%^%/,R*d.FW!4YAR'gt?pIb#]C.oU"b@kU\B02ScEh9kfXFC(j@plX)<.p.8+V>=R'eU,JpCSp!r\@O@k82ZqR>"8\D!t29FJa-#'
%TBSU(\gu<jL,BKQX]ei5ph6si2UlQ_3ZVcmo%B/NN]TIGa)L#,pE&`C#;u3B%r1f^*fhC+lo[@)mlofm%lim'NrR1Egh7Ul#)foU
%\aVKJ?)pZI9[*[E%U<NbX7^K'M&uPFg'A0UUJ:k[+HobeGYGM9%>A@29-L>5JO5m*YE#]]<G19Z<KrL:CLJf+Aj'_2.4"&,=DtdX
%@i8:T!4DAne8n.F\jM6SX[Ym1L[Il5fpIgDP@(\*@SN^@@<a+LE<)"b(,1OGqQVBcfgE`A43T-q.nE?,D`tN4522=79j&*G_t,(L
%91;[D9;_-C<d?4*H@+^_H-"A@]eoEO4c\"'%_:U]c["hr4?qneGM57KpjC-V3Sl-J`n5pF`H>V.W7Vm%>=%LOZS-jfI2(G.(q<V4
%?ALLekT-On=%qfI/nt,#LS4Q.-*>Tj3mACJ^K<(4QqF\S#mG1OS$R-m\YoQ4(8>5-8]A->@U!6fMn-8"(2YP)f[E/$`@H/&b:N(G
%EK-+gf?5Z+hpL.?n]D=DrG*"'r%7@#/4$upQL,*cN:bJI<>nWc^YO4t14]iRgeJlr-D"br&=N2cg\XNHTUEb.K=;L,SO`d&9rf1s
%0A]6+?nl"!l63EaUCn'QL94pI_Rk#$V&`]`"<Y@6_<JmOJ2_p/O&#29`=P"b(CT+VP5GQL5A_jFp^,A!p[mU@/@gS[h4OOl\S-4;
%U6.O/)<5@"]lTE"a2U**4'j\imi(HZ2U9SB*bLib%#Z/Br]$;pFu0nTD['?'abEY>a(gjd/0hLFrIu1HpM-#=-<W$s$TAJK28`tI
%RgF7$9Wqpd(WjlP26XS_FW(J63Ra-04p0r^TQke-H`-Nr-hYh)WD;X(7^.p33ieWM#]TO"?(QXk/$7%?6n&cU<=^i&UQIP;C_d[a
%Tk+\ZAIH[1EQiDHNBu2K)OF5WR[=2p?T1FbUXV!nDG2*\e<Ji6]-_t[ru)I0`ELk;$.e1MMQep<[3E?pEQd&/iAWL&Lo#F!SM!2%
%f[B'HV@1;h4eJP3.$"2$`VBUSnF<RF4n3<;-[n3&SimG7-]h)q0niZc#*[+TdZ"DeO6^m#iTLrT:(o+<$.U39ZO+&0C"hpqaAcBA
%<Z3#QQopbdD`RPo]$I[..9cX5HR.DT\`A+=^;Wcrek+3u'4Jg:Yp?/6X!8pfQSg'6f8E%bf#-_"m$MSk/&kOMi\W3>DBl+YTatCX
%f!=m&*G3P5L3<=%Zm,,DpFqU./ZU`TG?jPW_\VPRg%KZ+:kq_.rA_IOGVH2:4ndo+*.#YfG#Z]3<gCF24K9[TRo=&4N-Sr.W+A$W
%T&Z-dVPuN@JNYFs&`j"IGVgqJP#0Pib3gMc]f+&&D&;,Y&D_)E9-@B39OQ8L#I@\kBbHui01XG8CA^AcLbuuqH&,it.16`_!O<nb
%lDBp]Zts.)!#S+S6Knr?)e-]oekW"EkjGd&*b7^RpWr"arnG0IhoN\9<GjKtUTjgn6n15D(-lKMJPpkNU6<T"(lE3lK3Fq3Pr+mL
%19&+F`CpOSWZWiA,T+$<>FdLuOWJ4JV:1BZrBrQJo$>:Fa=`d<G+c1e*E\89HuhE?1!M0?5VL?hqV+;P6G>JMD._A0]=`36Yg8##
%aICM93XARC&3[C@dbUgTB>)%,q@dA0n,J['@U2486u6hq$X\>OHJ_"(`k08]Y^m4OQIX%5?OW4WV,4\b0L,7E*dYlK;ktno'j9o0
%75kt5<GP5pZooX-K=MoUm6;NgV2RWfACD`^TWs65],^K@e8TK<O?08oF&%&LSVF4a/D3Q)B?+2Wd!o(T0o[E=U\$o#jXSNUKehC`
%.mA?JN]I.$4LhU%_e]B;k<YiEpNedre3d1#cWr1ah$J79EZn^LbTiH9hY#;Mg2;)HP?NV:D@\rQ:kDG`j'B]016:iEpL#-dESujm
%:l)ekfj"6gT&/$5H<q9?-?ZHt\/3erZJ9k;_Wu#;GtQ7#>ZA_"\+7M&M'_;gEoPKnG&=)UbSs;>Kd*u/Zs.)!S:4L.l(!9Ihs"dk
%Pl>i$5eA+pDs&CQ?p.=1g:/<$>uQ4&A""'\O$/ou/Fce?Ih<#l;pj_qZ8hqZEHh*K%Rs\b-Nr?!KO>cn$LSc^pSA(lZddoMHLR.1
%N5Lg1hj,%*2_k*aK]"p`_=sf.)o_5tNXJFp+*m@9A,^:Lm_e+)DhE]*6,C1,^mWmFDSU0"mTg+Vh%Ot$_`<M:Qm7pgcYO!5XCPOi
%ZZC#Q/`4oU_4ItSSMMT%k?mYeJH=on/6oC`%F1#oOWmuh\,d$k*H.\QI(O[2Kc]+EF0>UgY6e8or#!(K(EeeM3t.>OKEppi(+Rf@
%VSe:s%Xluf+B8A`MJf3P^4WbPHDh8s]]-adPG[4QDjXk/7eanL;mn-KGDV789jN.5]XY`8SHR0EZF<q6dZf-i8\LYB0)OIl+Eg++
%nfGC-LQGMc$7,Jn<[o29#K<@*fF]"/=[fEGg;CNS3p]jkj\&:W8Vsn9aMj%?&&3m"G_si,=HaJ@DP?+Cnc9,9&39o7m58A92-h;G
%rPtYjhHpE%V>2[ZCc)kubdBC=l,K5=V<5o63S.-!)PcJQFA!MmNe>nW$uD]D5%@CSk+l)^aM:9A7PB#1)cAAlg:3PU1jal"IBSL7
%iU3U`ht)3@pYBllcBMh4,9W1'aT+T3FJcOlW!CbcO4gMs;job4hsua'C$%?M)Y_bbXi&ije"-B.J&U(SqR9_&<A,qDSh?^]jB'E0
%ne/WVO,jPVJi`\1S<VIX)=TA)d5gE#/Y:M9ab^YM?XhNq,W"$R8n0%sU%sT]diW_%O.DElEmdH#NHq%+UuehGo3A^Q]_\cZcuFs>
%FLpMDL0Mp0m,mAD7,DQ)G4X))_-m=eUMhKf$tn^02t_K/ER-5N2WLa';(r?B2&#d\*ce\K_+_De1QS;B*1o.:!mPn=9=c58!mPgH
%Eg*?B7FoZQMT$=R.P`!JB0hRg@*9hA7:$dTO\??pUb]%i%Z-Yp/Y\"1U6DgLd9CW2hM)F<#KhD(qpR(i&nrOI(T%Y98238nRn493
%$:Es]OA/Tn[!1'5HW;^$kli1bk)UUDZB)EC_[Qujh90Obe`^Q]]n?Fp9!WlIU(dR>mqp%?B<`J[:1KWkK?bqS#N::Mg")^sf$Ft8
%!B6B7hu^?-]R[&!;3`"t=V2D..?>Qn4CqnLEU5:(g@`6XDFWl3\lASi1+=FGe@`nu=L0Ea3>?*D'_c07@'c,\"*4Z:hKu'-*-j^.
%Nd5]1H]S#h@rairNa%kBr`n+S>E5\G;=8\=i"bY*P+9^(ol@LB`.N8Yp0'q!a'#)d%(=[o8`Q1GfO8-W#1h4\WF[p3hsi7o@@Pbc
%=BR>ZgnYjGY['<f[G/FiA-RA?^b/)!?j42h=2Q?i3]Z/_6,QDD;4?>_XPA/5=S;$\$bfD292TnE&YI8`ZeTDE'C<E<\h'siM:I]#
%a6,fB2ij`N4b:Wb8lOnej"WCZa:6O[a*G<bp0p:t0`)k4EL6+hj?tLIMlNhdH2EjW3Kf1BaIN\4lddX1oa^BsgX'g8T+A\p^5(pZ
%:mo=m7I0&a#7!U.G;.37N6I_D3+*hMq8ZZcq4b-\@I)1pQ]W\?$KX%o`P]]*>5b9,II_!%O@!(s]S<<-;qq(]FmH#0>^*;iT7R%g
%;e?S+VHB@_\t)[.Db1PN%F2Ucc&:,`>YPUWj$snQ!I^$5o1^YpD>[hK/(eHP3`qGUJV!Fkl.3B+c"<TZ9,m"A`49dLd'l7'Q1KE.
%S9Y4,^7if_=\[do`[^1dL%djLQ?;quCVcG;f4h\*FDU&K=AC1fZ]q9-UVA,Zf%.#7P?6XBPr]Zf5;*b<A;55>.Q;G<kW&::F&NWa
%%O8*,UcFYb;Dae(>=gm"44-dBcYEH\43nr1bm7,fIEtqA`HW-K*TuRE#e%@i:"q?6>[>fV=4s%=C+E/^=0tlqYFC4/p)@;C<p?&`
%XNQ9ZTm*)c`Z"-UD>hh6[,-D<ab$L/1T-:4E6kf#Z%r*$(5m<W!)8KM1th*VaNQ!q0M4p0mZ#noDG8Nn$'lO:>fU=0K<k#CTB1i&
%i,:MUB;9SiLI9fll+oLoLtOor"$O,(kT_bd"ae\erd*E)nBd/$qSa[Y3/%b]GHU:^pX;$&IVPG.h+Z_?YnC'3*%X([J(sM^b"m-R
%DAa"fUpb1]TK_>7fe2PJeu`:_"';&Em]:kOCa%0gMmk:pW[.Zc\B13ZRkH5B'UYb>IB31tpfj91GA!;k9k'AjlD0qJ>`C49=\dHP
%OUNe&WtSQlaE=1r%Cd9!#Ab+/?)?s?RB%T&p=<A-:>l]f5;kBj>2a`iW]QDEFul)($5m^^_g<P&H1E?8olAp\Ot$2K^$Fcbq-mPS
%J)mc!1G=Jra%rr*jh0cQB^h)>oo^hP,jaG/k*BnaI3?b\#V]eiYji&KQqVn//=Zb!9MP:Md\*mR3q$q6n/h-#C#BK-T1g:K%3cIX
%<$I^LotD(/a^i7XE#uoB'^'J+7rfZoGr,O,XWomQms.U);;KIeH!JD2MAC?`kg&3MmrCLNn3"_^.,-_>KsH[&\&7-ikbEQo([&N:
%/3+kamHC</O8D!/o@VBa5OX1cO2(8?F;^IBi4blT/.&X63'rcP$R-7>NBGDtZ-("N'K!8X#os]t!cBYqQH6aHgYuZt/E7rSkPJT>
%GK_X3<PKM?J<12W_]p"N6J`*arVKmpd8'Z%b+]mE\Fo^Ym_I\'?+663Xr(m8IKX(2!%MGtL4A$!ed>]8CWl92R<'I]F+;#>g_saD
%E\k&h9\0J>^E;olRR40+m-PK8GTES^JVquS45:/.7Q&le]U?*M$^8+\Ru5b;s/rIWp!)'s]7K0-cStIUmF'X:W`[:12(-_AmrmcF
%de?[]deb^%,X.W%Aa:`^j?C_d3j\V4G?`sBID>Faf6=kE/k2;fKlqkS9&Bpn>OC.ODHu*=ftQ5=G2)aQS["1(q&LPAZ?eWG4h?'f
%q+\?el?]ko>tsMJ&fClhV:A\K..4%_J1r-=r1ucGU-1rK>RW05b\a9Z9eACIkA'G500`L(Q&DZD]S@j"iO]u)m$_a[d*^<6!qY_Z
%2skMIaU1(G+f?2qg/;pBW2Tk:FeoD9ZBR#_dG>L-'162fV=eNU$<FfTcgL1\h1R,BNHgnbM05`a$$<fbEnjHPj/E+m'C`6SGKtPK
%cb!W3qcL$NN[pjNpO\m64h#dR>llGO$?Eici;"jHlMCQV\p0F/6\)JSnhZs;p,+L,<Q#&sP5AFQbKRD"ku*!-SDep_j8Si$<3.p/
%Oq62fq$`'Q)g^*RhHhLCS+/[0gN-Bm>Shn<ZIt/_p/]=J3U;#%?Z5"BJsnTZjFpmu5>W[ZVh.WH@hSm5-";S0[E@VEA:6[USaK%e
%'^E21nZ]-@kS!E'R<\J?\JO<nAA\&a]f5GcS-M8ZJD,P$%;1:S6/N-">`t2_gMEIsl9"lIgV27*p4iS@#Z0CPj6f1!h&6_A9=\l8
%>OH_uds)ZrG8GHe]`_IZ62Y>1i0G@4VT(h/\?aTClcuAYKp106oYb$/Z%Hb#2TU`%Q6oL#cTl(%^8!W_\5*4(6tWgXXQV[:K@q4p
%5^CA&6%C_<"t2\<Pj\T#5KguXRJ8<HT4R#!1@_OU;#\YMkEgCl.W1G%hEQdC:&H(2)a6gYBCJ>'&`Y!Hr6PgualAd^3'.:B_V[$S
%8)-CiJrN?0K>!]P%r1u\Ogpm`pHb-MRb[dFH6H)Q6SAD#-f<1mqiK"uP@LmKE_ij]\kuHZ.5@N7nY0OIKtlCpOno3)Hd<#m5QCBB
%c0aEUp<T?nrA/'>k22dcYg40=B+4,_#5/o:qi$)S`kXcJ@%T0XcbAdZ]]6=lI$TW81@Z4aqc"E"[!_i,="h=5rTrX8B.q$uq9N\T
%IK%LO8&,"_^C0nM0:oh%F8Pg1Gk(YQ^4#QJY?o%rmsj.RT<=(H4ZhohX-f6`MlBu>OdB@pmOC`rUuIB;ofms($i^$UrklklGCTOk
%rql_Z^]/4drJPd8mPhb-r*RY8S&`2,pY6CW5HE[epB&T`*k;+?VKoi-Y;\DNVg3WQQh\>1^OH.Dq!@77B<PW*H2Z@N06DQ(^YceP
%omHM_lX*d"I=:tSfpc'H^YV2#qIf'4YQ++Yq<ceK^O>t@B=kpr(&naC2a75Ur1J6olBhORmms%=K4$6'b78lmq^=q+'i>a2NqtWD
%l&SX4*ntRkTjEGLjIH\;.cjj9QU84a-*/p*nF:cO'CKU$WN>^Y9&reegm&7A:N9jrn"/g0Mf_puClUeL=f/1RGtHF.=,Qsc$a!a/
%Z>&K2^+(_1h#Wk:fe%5[\\64>RcMD-,u`Ji9>$G6nC!K'C<0+Q_Njm=?8!%AE93:rI>_1$,Q(:n`)U('f.C5rZ#"VKl=oK4@!X\[
%'uW2eTqR4FCZ+ueT)V:2C2I#Q`;!.*<N/$gWs*RKn`EjDhl^SeNeklq'tAF1'k`ibYObgeFOI>3X6e5h;7\<5N!=OrdYI3>Mlo?u
%Y;u>0XSB1jX/I23-6KqBYN>K'`?Gc^g2Z'ZG^4pjSNNgl2p6P[S0i/"Y9PeCO`m5[mOR[:03sdKfo)IFkK/'&20+@*hDe%2L]H\,
%M:#Z+#bbd1^/*%gMQu.Q&264VOa!$i6p$j^kRb3KGo5u%:tI4'/0fPML_mm?/>@fo`QRR-lg94/:(*L2rZ]ZR2g`bCBo/eD(.[<j
%DRHo@5;%psU;<<Wl_Q@7$\X`r1'VD@MqpR/+8_m06r'TcRZ"i=/sLN*HIq\@IGhk=$+R3)hX*@<Q+dapOWmF2+.uMjY*0C'?E`p^
%`Hj@LhVaMjeetnQQXq-dW-2Y3a@,R]Xk/bN)j1(fQG9!c<EJ1dAOsELGKTbE"VL/(fp2ppG=rE)OZ=Rl[%JSNd3'rbs7.R*RF0TY
%ha3PVkOC6UjVo7q3U.XR>E_US>p\Ob*9UC+d'#2P15&]bWE&pr-<S,HZet."ko8l-RF]W@"QJ;o]4CmuQ#tds\,fVgOE1$;6i[5P
%6W-k`9#XCO*@7?;7AXZ>9.OruC%bV;IUE`WUg2T9^aFf$'MDqoBZOe6SBFnDb<uO:Qcai9!HPT(%WY<jSXo1:$m<tnPfV>d<B=&b
%bt7@O&IWtQTSAUFZ";8unuLuThF^h3I\jr1E2gKni;bl<#@_t77$PV"&jIC?2b;+IojbsS8S?1RMZOW_8$ji_FqHlskuC,d`8%(F
%olrq(:he5&Ble+]HaLl";-!!96!H`)kW-o2F7`AfCjLA(0Ha*u^7qq`>9#'><"e;"\d%p\)A=#rr_`g49[n`^^'M#t2NSl^V2EFH
%0*B7aSg`J>k,+Z)+^Uu%j^G-"cPBZ;)OHhSj]?USCo'sN#V2dH#K9!2>hntpjAK+j0[/#hV-b]RaD6Y=?3/a3iAEr(*4o.()#"ZV
%!>[5n<*9P)Q.`MI(/eIBAB5=AEAH?B'7hmkPQ@#TG@K'Rp&HJ_$3je)0HDm&3$gre'1B2"QU>hJi5l*<kq;ggJ;6`io$&55,ml6p
%I9il7Hc2MAB4Ojf\7<;m;=PQmV&3K^"DBq\3hs1;m5!<Oi6mDtQQD7F(@,+pOg,D=W'B[9MNl:)M`db65!fZfR5kH2ODnd>LDHh1
%;1`tf%'c7%J.$SrG7^0M9?!WX(=gRU,/W,J%[JON5f&t4'\GjUG56O,@2OEa9UJ]m/^;+o2ouV>g3[Xui=p"aQS1q%AN_CRK2M36
%m/sZ4`LRR&8CAX(efm_&FIZ$JZ)\mdbh5YK,C!paIVFl`3G!aRj$b+BFm*,`:JdE"p/.*A7nZ:Tc&7<j!T,2A+jXoOK%77J,j8YS
%A"4r#T.ug'SE40^>+br'G+CasZ,J@h(FBaCKRN[C]SN2g6YFQZ12eMZ&X;d:LF#.7O2Y,kV6A"qqc6uGBna&J9+J>:X`V`$BMG:*
%hVNO]lPc+3BaIFR>l3$TPEo2/$VWQLbVf`aXIZZ.Ln?(9O>.02RJ8B;42jqU^aqhs1,OQp!CfSt[dcu;1"tr645;@&5h6Eh22k0Y
%k<:q4V^4fSM7cZ\%,^;X"*op3X=@K^964Ee@e8S%k:d)Alrs3IdH[r#JhEX^7Ju^D2cMPk$oI8QL?7X*[_N<,d1a]t=3?$)N@a8_
%m9C=XQ:9<+`,q2C2<2#llmJ)K\l$IR\qZtVU%%1@(E&R(4RKj^$<k*riVHugK]`KP(MT23UsSCEijHrcAB8?MYU.nSVa@_VXpeK7
%lbUCKQf1oUY:P[jiFD:B,*2Gr_gha.Jr`"Yr'EcP^<q69$[NJKoqe)d.SD[/d?R)di?^mQ.E<%<9G<gp@pbJ3k^8>u$rdmg'sWRP
%0!h7:ePsa9OY=`Z)N8E%A(aJ6XYRG,>/;+WF:*pG8rIAIauLXm8aX)-:6@*J;+1Z")D)\>.HFK9(]KR[6<\'+O,$bA?.%tI=iidj
%+]`Y24#I8Xl?unK?&&cB-O)6'atcUIQP-0^GZ$#I8^8oOP9eTkI4j^Eh!"/sV_tp4PZKN;o[X53*lS-N,%'%J.[;S4f[:BJhd%9@
%'>J4%EAHi(bU2+;'NgNi`kP0pq&k"8/q^8p$Qh_F1P_kghsB*S'S)jU3W8=0?,)WW#--^oBSp/;7@Q[``,n=5JXILg3`H]CeZC>c
%A2^K*.+1gAMBt:*da^E!c-UP,Q6g*(&Jgp">uiLlTm)UV&@F57RSE*9IOEGT75!(PaJEWEE*0as4DX,kS7fK%U[QCF$iV.]R/1la
%%DuNabGTM,Pg9d'Bk03cE&3'CdCt2!He7THL&ZNBIdtmZA*6m<FSsh[n%X8AqUs&1G<apPYFe#WiPk7m]m53nc[h!Cd0^/!UOa\]
%-gP5>J,r!<h&m=[_NHnYR:1^;(#onK;oU,oW_7CPG+NqVijbt$,UbPfq$"&P"'K:I?pHmBW#WEMP=A'5$P/$XY@=&T]ce%V9`.@c
%.e[>EF-'g#4RL9`1pHfk?7^=r9f9"[+h'mE[bpoF]C`l9_^E.P##sSSSZD=a3b:U@Kf"'*gU1eP`Gd(26BrTi`sVgcMn\n_9F(k2
%!>Z#g\N4qV23gA.%4ar#k3n5-/9fWaU52I0Tf>Gm-<[k.7)5oImNNH$qk-'+=q_bXL*Q\\_)'L^%PXu?![e^TfRpdodB7G]YW[(U
%ehuY$0sTcE^j1R%kgfrD94`DQ^>(\D-BN=Nk,V%^R>m^&28h!0U'!WT@%G3I\<LYJHYPG=$4B,;d/jlr&-%a9n=mjWB]*URRm@3Y
%+9B+h:BgY]bbsRQb1"tCo"C#)-D*OVW\%uJlDO?13r/I>)VLR1D+WWMN7fKZQc0hBV2.lQ&sOT3*&Dq)BCGUhZ'J?rM1LRT^tK0-
%L&#8M^a]c9dj_4sYV!6VL<9AG<Q>/LnfG[R%*?.%0@![Pi;ssLQDK?=g@A(P6)@/S=6Xk;edW`IN&A0s8KYO"F@qIIMi@";_2-qR
%C^sPud,NFRBFuI;Z3<c,)H%HD%a>Kt3fcRXHQ6UJ:LMO:Mtg2Up59N5-jq\6rV7k=$sq2BqN(JV3[W=OCTrN"bG-UQ`7eBn3sQ%d
%(sbe@Z77L8B[S+U%q_HtcEWbp7]<a3lP9MT*Em!:b#8Zf>Ho9"m&Nms]GB<So<m5-Zudc_AWN6.M`dLA%j_duWe20)`:'"(l2?;(
%n8Nrs%.Rfqb'GM?LQR7U6jjG1]/2h@i#/7jAXmFR"kYYF_3Bbiot(;g9kcAm@%(/Q@ri>c)'eAGR7s-=<!TX!4=@l_-n>;bLh;:i
%?mi257E'?(Y[/,e6L7OWMW]XVDH%6b+DNHc4-:Mi1`=MTDo$1QL!4mW.)O4a3Z`0rXEllXS!FDuqZ/^P=]Cd7d'I?&1f4H4X(<'`
%5U)l/2OH@T;8o$sdk^JNMqt:*%=DKkgU/olHZ>g'Jt.\dSnUWM@[>t+r5dkY3#PZ+U:Z=I"1XBr@X;j1ci_]oQ_gu6Kk*`=(m\X&
%E*R^J5mF:'bS3uPS-Dj[.[,"[O+O[Vnr":UQ08W4n_d2hau<@f%Z!Jl!b%?s,9JG,'h)9QX$R1'2jpr?AfCoF0WAC4BK@D2LH+BN
%R/sb5H^#n6/M<eNlA7bZhH$`Ar_OF5U5Ct]*:Q10&YIRjb&4GTE@J\B$r[T;^o)XFO+;3Y?SoXpm=(D39BJ?nMH"NG6'\m1;$B]s
%<Fb4q&oZBA4eec1hG0La0dc*Em'D5.Jk-J:b)5&@QWhmqPESph4VO%o*)05584GRq^I:hS\e5(inOa:q$O.h$"cAI%?s=%^%Z`#?
%Ko^5WV.P(djN[:H3\U87ZiL++*[dsgrp:H9P8UJl]3XW;/3M]^q/"GCn=pXu))9/=><G(`/`NS[<"gQ,^F+U8=A'uZUb`-p)0(cY
%7^"a,>f;c%q(6Wf^o8m*=o&L8\Sr\s0OG:>8?hCdlcR?U]d_-c6,[FRdA[7NT.!`Y:8o0I=NBA&,YVE'/X85sM5tlL^`"^>l'A17
%'<LC+HPG0NBYUu$=rCd*fZ_sui+S.,&*eB)]jsURCIWY!@MctIPNraugEDY(o?oM1?2jto&j`CTI4DmshXYc1$)X%I,G^%=A5'3O
%DA]sQ!Dnog2I<Rr:.PamUFYhWYr'P;-uOo".h'$dAs8s=AMJI!<0P]5q&l^.6q=2TlPtITg["\'hdp?6bBG'/#nmJc//R_BVZF#<
%/?1Mn;Rh`P@Y+Bnj%TM^BshCJL7odQZFgE9-$bM!j"C:4b:3R&Lh:\lC7K!qYgMB[Ca)-$/sl;f#t(c5S=kb4V.)'5]*3ejMHFCk
%jH/Z4..h5[g+1g2GDZ7%,q<B?-ksNN.\06"n_Tu])d=.O!6.m`_;eG/,GBbdM<cU^i>Gb5LV_2bouRuL6rEaijutG8*DjNcFCI6a
%&.K">H6U59!")F;^a>tc@%r%G#@*">IWC)cTZ'gkRO3ZeO;df?TeA&C`C3.=U;j^3Lo'5O]bFHgqDncJY:p;`Y]C<"_cFha?SMog
%$Q-1d&`?7`TtoXi]E[#UI#FM[AU99_LVh"c((l+[=c3J=HH(*S4u.7KNa35Wjp2#uJ@WniE\bCY!AMoP8Lt&jEZ#Y6;2Q^_==8VX
%C8V*pW)3-G@WAnclm0/XdS^\&@"^YrV(gO+33gQ1aM+=E6^1qpecg=)Y(LZnM\-s0&;"gi_p[UpXX[-d*K4\%9X'hZnI5u0e"Rt\
%910H9r=NCk+XdfZ%#TbE"@]VmY@X68+Uq!V-&5G$0mMe2`44n`%4W+/3/gkSOt(B&Z5-O%IE?Hu&FH<,+nhcM>mtP%S;=X@hN8#W
%f/JC\_g%6TZ:ID2\l*#n&?Ku'WHQA7<Y#Cn+Cq4\(p7?'TCYWX+oopik9P@W"fWON&B'/t$uAd^%6>g9IR6F*B&00TI`"o06s6NV
%MQUJYN"kiU=eei.38)k%fR4'P*#]Le"CA]0a;@-,o_KO-GSf5q&R]bKr?3H]4W5`(=bnO,U79bDe-0Rgnb,A8'&osZaeM;SJp;$I
%^!pXbmVsPS+m;2"!*bY0<MZAAV$LSX'^PjMI0SJ8&MXK2q&Yg(ok;/L@h%'sMF!,)pA6YuJn['uj3G,_qJL^#N:[-pgVQL$&])R_
%8m3"d8$!<)j#1DUUR9F[@3K9SQsrYo+WH1f)FR](6XOra-:2JM2f^TJT[#Fh#54,!Sm&L1,0@deVMPK%&:KX?RYrlT-V*&O_?,uW
%8=0_]9f/anq2@#!6D_CS=J-6A<Fs7=JJ8s)-"=/O$S`[81b`!,F^b[:`["#IZ19+D,DMSfU^.Q1,;+eTiL^^3Bo'O?:nt'q1uDeR
%'.$ct4jtnup;)Z!>91Xq%Jl[K3N7]]]*%LobQ)o,&I'->io$1QKk*a.k-WJnMbfLb>2W`(HYCj00U%n:"sFM]bb]kfGkhiPRW]^U
%fV2$%9IN&"F,"B*Rl\K51rdom`hn-FGR]VtTN=SR8j>+,#E'=G`:--%f?nMiAnJ%QCkk^=6.Tg(GX$?nNinpWJ.f]7"HZ9g%O!OE
%>U-$KH"%Vt28'0B@e#b(OqGfoJD@)WEG<F%O!%b]q2:3/2=$0&#IOM?5Qt=.GiRKjl+\E(VWqn@p-mU*@S]s*B"I-?<.H8-cin;a
%o,0`//BG^r-u.uV&>.)k_;Wt5``Ys#>t!WDX)>m.N)Re!O;`E_!H(AHOaRjR5SO!ZmNpefFYQJ_9I@3(Z@W?98AcRAN$]\KM]XfL
%0l[I<<f=aIN=msXbI`CDN*FgfS8RI#_&%ZX-6l!)A>.BXGL&'U(%@NX,Em-Y[%M\qJW)u7Z$@QiFM&J<L8O>mAM>q%,^/7:&+t/`
%&(/X^0.5mjcr<MG[G_#4!lmT1A;ZHBKr7m,&LH\eKLrjP`!+*U%)(8Vg"oTUbJHG<-?flo6*!7oSbWpS+_.uV@7-^RO?3VY1a6D/
%.4<JeMl09c$;!(p$HOLr8A-oK(Luj\==f2q-3p1]%=oc^6Cr?s8'G)*#`Jue"C+3h^G(*Q,1f=ZLgfdj+BJjF@l$V3'5bW'KGHDE
%k2AJ_;n_=)Lruf)oqI]i)*tY]^Lg-IGao;q^DaVF(6gCn.&gmY(Np9#-CE:U.N7(UQa/tM76qp#12ekh17JQ>+?%:@AV!Y.e4C&h
%gkF@Z\PF*4js>.PJLinMHu1"q",Fe%!NdMd\2"::CMHUTi]pLB;"UC$(E@,2+H44sL>jF5J7]XO)9)Y?<5\_9,A?$9aC8Ia[[$5o
%GA:fu<r`MkF';$QhjJSs1VkVE<:KDc64s"%66?NB9Qno13o?)(K:d<M;DZ`]+_4-G!^*8B-l-VYn7Y)r%1O0bUQ$!b=?Ns!]u97=
%o#Am7A>ZpJ,LJ#6pkVDo1XU2?D:"^i8,.DU%R>qGdi"%m-";s,R;/aS`<XV'+]\Vt:'28uY4t4<^I&bS!-G*1&i51EK,0/#YrZQ=
%&D#,J@Dl?T0RSiWB#H25OoqG>'G@Q-[eP\[MdDShQqKigXCc;]fan<1RSm"8bVZSBA8iQ.qUQ#h4VEg[T]=4)*_$>H@2`H5kphAX
%'%8#^8N?bacDdE/=;4pX9>=PI'uL9X:>V9c8;lWXi*GT]U4oZ8=S\BGL#s6A"V"+je!qB`2,'!'fFsj">JWD+H(bV.,*?<1!RAjt
%7%=XZ0oP%?<GrZ'Rige;i]+#96Cs7bq4'%]poFB":P0b3ZTncSTeu)f^HUsNBl<")@CT_XM?GAiVGi)?Y>CT.7?rfI!_[3@,H4ep
%Uq5AI-(1#%"KLVN):DEB##M8=^.,CCi$Lmh4n8ef:_No1bZ)[kQ7(a3+tX?d.D?6I&Le_lP?nkj/')')U2ZJ6,mRnZ1AOm!R?"bF
%^53?!f:4DEaDT+GU70J3,D"T)p'tI%0L.8m-HLDJl2Ush;GeZI$!>f?rTtAt;TPTJGR]d#g2:">+QnS^7CFW-!:tan.e!O*'4Q`_
%!ji-`+H^H4NLJ_G@))0Q$6a\<5lphA/jT!`@OX+W"T#,CE1/D<PRnZSloiVl&2C+'Bt$o)E[C!;!j"jI*2=rIKSh3:L_gmHP*gWT
%V3!DZ)7(RqCrnu:<>8"M,h4L9@Bh/hJOigdqCi?rK#ScrI&gA<,tf6)@Wt>p+SDpNPV238"!%n4n="'G%5R",n<W<0;iEf8be.=7
%n:]Rb7.Kf9'8j^8j@t'Q`EYn[+TlgPYFu++J!&Abe4[1QEJLBcO'M.X7NgSd7TEc,Ym`D31>ht'#*=9hK$dCiB[Ht"J8>c6$`-Y_
%i+KM*h$EZZ)bmt>497;?XsYe'nV.W@8&7\Ikcd]g#qTgilHI:IogG^#-4/<\-Np;bm]h+dQeFPuGmM25"QZj,Z:NYE0G;$eZ"s>@
%6Ll(446QpsZo\GFZR5X,X&rFp<NHIWIA@h/X+].=(EI*IT=!nr9hsNa<c9d/F"C:YLe7YDLRB"C,6Bq!MY:T5E/0I2,Ii<]T]a*a
%4]sc'\0?&+%1Ro>jM8-OPH5R&"Q=rEGjn8BFR[mTK>aCorU3'814">)q7V>)BJ0g;+h\+IpnIMZI]cf0$Y&8PQV#Z*1TCJK*-L=V
%3KCY(\5OQH%.1allDURD;Gq3G3>fnRS$JdJBt(a^f9-&<Z_sW7)dTegPlM2s:(F5S!B=P^eU4W0$(k<':%U$hp[4AsqG)GXN:[-p
%43L)sUoObBM:9XYUuJYL&6FI9Kn,m4\;<T'3PNJIb_@I\1t3ACRL\"I6YKep5otm$LuUgs@O,n:X1)K0F#cUZ8M262ML9SlPTC2\
%,%qCs14^2h\S&"Ul.V$i3gY6cSZAWrHc.$4HXhb\,OUu,Q7KYT_VEO<1iPW2V+O!020sfFBYc0PBW=2/VetE2Zn7C,";/U/W5&sU
%A\\C"MarSkqP-`WVF*8F&(pQH.1Jjc=gZ8G7/j"h)-cZr\LEG0A#hsC$:+^H6GUJqF21qF#:lOU9,E;ZR.o#B.k7nQj2o*2cm&).
%o2F*lO%.PFqP;!pa4h1S@HSfepT+:>XE?ldaD(E)2A-"s]Ol(MITV2%R_%O=A1P/3*`[Qdk?i7[1`re8'd>4X+B8I[3`-iD:s!Mr
%aNc=O39Y/ra]?Ug?LTRuBNnl1$[,lI"*TK1T(.%P""ffm;\d@9X$lS#>$sk*"Ub?7:oMSRjt58_=_"g&=o\[WU?*Q;d9m"1$sRn"
%,lZA+4B:5J!C8H:eK+iIU,G1B@0*uBc:k[63cmHJ)d7?2A<"AVd(oP^1oth%aFr">-&`hV)5KsfX:7]tZqcBd:mj8kZZ;.%9g8n,
%BD;Oa&@".>;`G!V%hI$&/%kK[\<`QR@S^U5`rbmcMs=a3jadF`p_^MqajOi=!uQ1#6:BaM0"_fGeifUVAn%F)5tT<0/"-2rMjBih
%PemlLCgkJT?!2u,UU;fB'b)M_g%#QRa-36"a='oH2d0%?WBe\S@gdT2UUI2q4</Sp2<ft!Y!^?5L>@o'n6HUo.kim7Z;+guCH&R[
%_8qSV[0J1?B.u7S/PK7?fub<%;U;p7;.s\fia1=M[5n>,+hhJsISF%%%tuMGc8Y$dO9LLP@-iUc2o08W<I2ai7;C.K6?DkSXEj3T
%'Fk*Yk"A-!<m\_OeLOemQ8QF5YULn.BF'tJ`:@Ok3^Dp>jK_&/3LA[%ANc/59[%Y^DN0mU.4E/8SDRPQ3$,V3%51Wr/`DmP'@i-P
%.71uuIi].K1)(UjK/uCE%0CdqMdnRan&rR^jNig-ICO@Fj_/16/#P@H&jXrG/5Z(7\n"uO*l0D*j\Rh%)C<B29a,bLqU,MQBMJtj
%9;eW]"?LZ[Y*:Q7fYRTCo/+*mZng[D7*?g-WsBf'.>rl7@abr%[+*NYlLpYUjVp"n]ddE?Q+f,XU&2)Fhut"\!>nXDm$8q]:0R.p
%=>8ZRi886Pog70@X8k,2O^a"`ZIft8][mjEB_&B0K!8NokrWQbEjAYlJC8gQKW7Fr<W9t'N"dkU'V^Q;?Fp[Q1a=6N+QXcEFiiY[
%TGaPb\oKkXVBYOq/Vmqq759JP9T>^Z=(#jWl(XfT6K)4;oC-6S&NUe:TkUE]Ymu53o9de,*u:H"[i"?Lag)3SoNKV'/`ZbBW([<q
%nq]h!>$1A\^heecFuCSs!BH&ha:/8,R38a_1*0OL<]V/OOm51KSmc'2h@i)'Y<dP2]6o=>E$87[8-]T@RSNnr31!Jr@pNt0`U%WJ
%.>1K\WW=]ZJ^K4f(_ss:HC(CK/j]2HeMK.\R@sg;!-"].6JS3dc>HK%FTBTY?k-#0Mcm>:Qj><X@4W"$?s;T\V]@Fga"Mmp#p"Rr
%p,YHC7)jIHd;a+Web)fA+ro7TFLeL@P@u@e]J0mh`cB,?O&'&m-:h<=MuG#<"/[`m?Sn_.<"[Vg',5A^1-d(FmOcq'R4TPa=V5.5
%q`U*'RCl:>"\PcIWZ#$8LIG#ljn)Xe@k.6\J^b[4-!BZA/l9O(ZI#lcMQH&*>^_^I&#]s]&7'QY3&hQ5i@>Hs"Gji%9gn7p&IJi;
%JJ\o!b&p`CV][bcQUrTUGUKU]Hj_]'/_h4DDkL6]$j;YH<h@EScq:ER3Yg3_AuAdt<O)*l$p$2!TK-LhUEUAY!"rqhQ_kj6QW?@;
%\o-8Z`@O*8nH.+URk\%'=^*oQW>7=dN+VqBkQ(`YaHTt<:KZ3pjenb#_`Xc3$Qabl\PZJEO;A6`G8]^)W[MSSYS;mj>::Pi3]dd5
%s4Cb0<]PE908p<@>7%!9UUAJ=7Z1'CkVT+@nShhpR/h(L>3El)!%V!k+q89'8&&-DcnjKJ<_@0"!U88;J3E!j`irjhU6.TtG]0?[
%N!O-JhSeuD8V6O8>R))Jpe[%Ui3h,Q1X_:GnREm`HRhM0McMs!,iaSN%=6T@/kl_pW.iJ'9E?_[emcLS^0B,7TkYj9,-ZY'8)LCN
%D%G(>;;$a@^8u#S@r"?E&X1h*E$b]H%5OYHe#Pb>Yf>i[>s0]%Z=5,9JGFnq+i1IemiV]#!_!HjE["6HT<a.@E]WUO7?$8bhP]Y#
%A#^a`$sc.A)KUAT9I*"[P0OChre@3(qZb%N9No$?S1KJ=,,l*ECt@:!\5O6LE?GZic!GYj)U='p7/J&(%#;D_XV5)YIsC^VU<aAl
%/k%bMX!8i1ZJ446dSJc"DaTuMs).SfliKi/YJ1&5pUB&95'_5Hc.?uih<OQf^NoD:jk#8hhu366=8ts?VdI/eotu"::N*k;rbV>L
%s,"KsTQYY-.Ql4^;piOX*rZOa%J1MOF%9@#?D4eE)fNk2:b#p-F]&XhMO.b9i=%E97IW!4b>'lKmt-4%KN:^oBG5#0'QQL5)+l?K
%eh]:Q1T8\hc3:o2TNjt0./cEB)cK<826+Z-i&03&J(0ZY<jA7U1dmAn1!4)?n&@QMGVn`Qp_Dke5V6Y\q7id.1584Q,m;"R6_72?
%[8jp[Af1)FogYZ5g7n+XHX6db%SQNg])Gl(dTrC*m<LC"[&AiVqJAbp77.O_\uI'QClR^p1RT;]$UCMk["%%pM@REh@5OX0R3p7+
%[\.LrVD@_L7T)0q2J&EK;;FY(:LZH-I3Hc9q\XGk9T)8h4%qE.:Dr!49G`$,B[NWO?pR$m(GNE[VJd(/`1=i6G?SLH!P+nsSJf8b
%C\9h56VX_g*/b9"L!b3eW.50X/K3B,Q8L]iTF_)3o2c4(KVHXR>*u6!YU_N>M(DohTdtY!)NY!A#i&8?aGSD#Aq%-oE'Q4V3(k0J
%oJVo-5tKR9mN$-g(3C[W#;m1Kl_mX`8?[TlO!Il8OQ".)"mpB\a>;/=6Iuu7NU/7Io$%Ja23s2g"ef:cK%92)Sq,E%b_f8*</<6b
%l^?2-B^KH7]nRDT'YO[G>qcK*FhJuPL*T?]]tWC<Bp+B\R\LU5J=6l32rPgna9^162KIf@#E'8OND&MCH<,/B#R)Wo\ijgPVKP%1
%QO&@$VpD?)Xb@j1_0SVIJLS0$?q@t+Sn3b[Rda<_<"9G<`aFV@A^_:Ad*fC5F44:o-G&a7aN7C4^BjLfRe>K@oMUpo68,Mi,.p@4
%jipVi\$cE;MqF<ac'Y24FsZTWNSqnL/P=?%bf]$Y?eRk:M`I'l@C3UXaU4*XX(bH,fGLOGV==)lb=QQhfKL9A6C+X09<YlP_*udu
%)qKe<-,Zn+&CUF_5lEh+*5/b%%m>H<7RR/@&M`c.BpAo1nIU0MYEF]/V!R7Vh$+a]/58kiTKsAoZlToW?o_:ridni2>/L[G.5>M!
%`mXsdBM6`ND*#=Cd=gmr)6%d.'O=bQcCSfK"0'N!7.#L3AkU99!.@+Se:S/57MFIr30W8=7FL0UFe3HGWtqh2R4:^@3J+Q+TgBSJ
%%7CkC+_%._`EJe1au#l"SW$ns+p"f+J/GMOjfiFJQcWfi"Am,"a2*nc]E3SpVU;it1)Q,KYb:G]0oPKhMi<m$mq>Q[n8GA^M(<LC
%ME2M:WKTe83m93qA0JmO"rF#:5;X&@6Dl-*Li,T;"XXP.a=\t\On*?#ODgT0gmhhn6mki%Sd;>"SH('rX.AUW_I8:+H-$JORK\bp
%>r7KS'X12c1393*4G6DO7j^)%=OJ?R=o+SZ\a,@#&$g_oB[%=G'bOf(0!6b.#[6PGeFX_N/Oe%11B=FGlPqiM3>"HHcP*-^/K[_@
%j'.Ag-qp\rNRnBi!59KP3giURiT]P/bTsV0o*WY<KfkkbR'D0_J`]T=OnCO9rW&`1_e]Y'LDJjf+r/:oJ4!=]g2T];=<\%a:*rl9
%TXM\.j@0*DJKZdsX'uoj[aN(/l>dcrP]`,.)%B/\/8KE]ZNCM5FDaMi!JqH!LI7W_U]@A-,F@n>C3SnD<iglYB[u2NltsZqF&Aum
%O<,qY?n)/ap%+J<0`br*9N3jqg*KK$n#I>"!:#MiW"?TM8C_3($m,T*1/MQ$UrA<O=342?.,L?YfDmCQXDu:#*I%`s)+7nqjlQin
%,1$L*2MT<*5Rdr2,EPHMW?`7O]IZm98_7*YZ2eqf'nNL!q,iXq\:ogh;JK!R:f5qX;<CY*:U7^Wi3etV%SfK(c2h]fYpf,7OCj<[
%$sQJi]!hhk-g81(9NZglUS\>K:U1Im'Gem*)[#OGT&,%q#KASs8`KWg(JalXAkO]EOM\kD.(t_PHJ&1dl+3"\hc-<j0?r"WS9M>B
%b#$YX9+r98m=<<O8;E@5Q(Z:dPc,-<.$Ppl5YLQWX]Nm5%?n%QZf&H\&hQfo&YIc6KM"<3W<A#WQu,q^Pq')(bRlKPAJJ/fnMgYL
%;=5'an(QY?WU0u$P4od$7f\)j]>q`/Lub4bW"8DD/*kbGKkgo)Jq6Uk\)FL:NL>oSOpiJH\dj&uf`\%?@5L$AXmgiWS5WZhX2.X]
%&>kt&4GbBA/nkA+n-u8n!mF)f[b9P5;sfJlIl,7%00A_S7KjAaD2M?8Rk;*_4:Y2n1I.dF@>Dfh1FjFC.0FbL;^+_aHl4AfR$\3#
%%+':L6r>^t^]OdBBeLA)VF38oX.CH'?=moC9'%)>r*?8B#?Sr#oEDQ/Fr[CPMf'7kJF1<k/h<')jKsjMP/mE=REYdH=tTn2_pO#0
%@=pq!$@Z:s=KOuo0tiTk:Kgc?&<jg.CKYrk?Sn(T.krLbm-t'4+IuuS_YFFcqQBac<lBE6.MK2Jig=7YP\a.;Q566%K28+R,r=rm
%@hmi[L`lg--CiYmOCcki,a)AF:0JYdXkMcn^b!hTp1iG=/N!*'Et@EI(:<Q3fsqNnA0Z$1FS?mXnl6>nl'728RFK-=7;r@7"i\//
%C;g7^5R*j2eXfa@5XN:6SQXiZ,ntTWfPZ[#CI4#Yh[2Rl,`V]MB51+OKO03*A)9HA,%h6$pj'l(SWm@aW]jKAS'<P&;V@!U[WKe0
%1pc1t`Nn<D'k>0Q@1eH+@%Poe_29K(;U7$$q:h9X0/"+CS9OVeP5:ojY>H3g$5Q2;V(?,Ccc/T\OMEYtIHa!9i1ZIp]L?Bd7K\j'
%1s)th;%,[[V&E0NhC0G`N(?U.-O'RXN%G.Oo%E:ZfaJD-1J.YVJdg#[i$]$CEch'^qA.Uc:@m$/]EK$KBF/S(G_DBeOg_sd,nkT"
%UqnQbMPsZ8/6H\VS\^fGVR0hY^`#up3@em2*7a&s#n)=;ptk%e44$pJ7?]VII++4W3d&e9hB4+?oOF`l"qDr[k6*&q3]l^AHL_*#
%^'[Mo3p(ucDkHZ":RE.+_I/I71")^I6o3"-87[:!4X@lnq(_^i<D=8T0S)Vk58X^SbQ;e"%fpP\o*VPee!6>J=VjGGEL)0$"KT"B
%k.'TN7AJH_Gln#9ZrBb?5mr60ZVSAujL&,1[n&;('ru'sIVTs20pIQr\C?bBLU:5Q>"Z.;<`C5/;L9f4U94+HLb_"ZY0s%5$@%<"
%PUK6O"X[F(.GWD)aC1$J=%(*](ReXe["[!28Be9dQR)iS=`KP:)KmC)"]WkTKVkTPF4?%r'$X*-6??j0-RT^7/IruP#TCsdHlmh%
%2,nB=M#j%6(g2P+C4p]q=0sY;drg6ql_R$cP5q_HIL`]>N[Y?(OOaA@#7S]WNFpc%18U8$E<,;93[^lI]#a/L.fs$_,(('2QdJ.r
%#9]P<NC1innBgD7FJ]-r6(TDM5ClV17,Sb^=a0)c0WZ+UKkCsX1-\M?E6+oUHAD_0[<2WT%Mapc_:(.J&5[4DI=US17C->TVVm.-
%W`rH@*&(VY3>$=3DSN1a5npZS(Df:O#cINMN.6`5H%j\&$mSg\/Il$i>0G?Krl1u"[(`M?Vqb)m&<VZC%Q&O0^b+_N/#J[g(mKN=
%`E$,/0s[f/KCuV@Jb_LFAY>;Sjk0q&TTG(G0<hRXdr?]4l)3?:-Vf7@Y]?&<HH#MZ9L.!W]e7t>Z;/$[CLsu<iaS0<G_X2$Ue^?:
%roA^L8"_kn-]6)+lXS;BZm$'[?T@[Q;mm)dc-#!;U1d7:JMLd[?e,"++8^n`&A'd:pQ<O[N7=="G;LO*`Gc_Q8U*(?4]GX>aG%0I
%2CX^f7*S//d*6>PJ_A^_$dmW9:D\I>RENuEK[Y/?$dW(Wg0fGp;aTg:$N59;[Og(k9-C1OnQ;elO,YZHGX4es_m<`?jeuJ*b.Fi<
%\/h>CN?GBjI0@`YiU/J]*OZoS*iL,f`#UmDRP<"s0K67%ZK6=RM6Ij@>8kY;d#q!32?SOT*Md=*3Hu<$L(3m7XG&?RR8l;n0t:W=
%J"\o`EX.e2f,83YpNd<M=iWMQH6j6,dE,q.,[Q"97Bh8!f[(HdmYsMtffHm4-iTGH#5?b_"Wbf9M+NYs1>0O'C2/FQD$66`C,._X
%[Tp*nA3(4sfL?&)=-T.*.a#&qRH9khYJ<q)gu>is9--5/Pqj._;'?VRCm\0i/hsG,\<Q\:\]!4Sd_Kj4+4\RQ[\>,U"H9,X3g^ML
%,V(j^=Op@oJ1/,lX(Gj6-^g'R/n"#+"?7.+35L^<=>Or_6)LU:\o&hQ@FnIiNWYg/aB:pp1?cFT"M,RO;-2m[/EMs]=Q>bOgqY%G
%lp8,%@%#?8;GE4jXqVal2JD-hL!2-mqhlAd:f^O@?`ne&XJ(;u#s8l`6$*+c@Mf`[Kb7@a>5:glL-SZ&.plGd<`j])73g8&gMler
%=r&P6TVA7OE*?^=VKD.9`VA+o@$7tNG9VKHYU?l@db5QLF3i.OL)?%]@+8;!6D6Fu/QVb8\:Y#QG!u^ue%,nl<Y7kN;b@%%qSfHf
%Z2Y51U4]4P<0d!bo,IpOAjCr[<13n8`b[!PS'o:C!%2OJ/2hpY+m]@D&Y;QRRlZZGd-tOCY=kNtN4hVD:d1XhGZq=XFXP^mlV$]n
%SOg=<4hp0!79q.ZABp,?BKSf.Rdnf@;C98?IOcOG@H<EQD<STBq3sst\Dt0f#NdOoiE`\9G/i[;[Lo.Zf[_'Ni,=q/"=:!TAV>.[
%MD)QTB9Fmr,8=Z8YGU>l-;M0AR4aAZi/Rf;DX.@V#F6ri?_&W?&Q^s""FJ6YR)Yl4BEfgngRQcMj05STn(!qC[;$Tb2l[ck^4nqY
%mm8aJRuSVH1%G^t5P0"`e%]!O'>g/:1)j9aQu/Uo:+?_i99kg*MW;H&^RdI)=elJ!W`+ckj#.s;if(I7F@IYgaHL-SSPU;":#,TJ
%o80qklp)LNENIE-8LmFn.KD!Bc=]%T<"*I&J@1Q=+IA?d*6EOg@qI31Ck%PVdm9lE?WI[,jbu<,@E5TmLZ<,(Lt]ulmV1^l1[=K"
%17^EFY?NPNKZ)h?3<5Q;Q8fj+:UI4pL4]R1n]NM$G_8pug0bAFYn`a88]*P6Udj("L;QRjn0^8033WaUU2;<rZ__S^`phJ/n[K6e
%drtpPm=m86fo:pO*AP.G9NVKaN%LRS+sh_.(/CrhQ%-dgcCA#_[!/Nhk13"G7MS[;N<Hf3'Fmme(>DFqcAM7=7MB+<OdB:/_NB=9
%,*FNT\Du."0H<,N3%,0&<'#iP5q']cq3EEKr!h^ckrdp$UeIH<d"K;@9pQgFjcI+/@5p;>3-OM\;P,DTOY)6NK>A*O;Lkl[=+YD2
%dc#grpqbp;OI3Z/K=>6&d`)bl.cuu@aMD*.=SO!D#K7rbj1u1brZOT)L)M%['N$($RDH_IAV;]M1H;>A&lAG@%*l!6I%@4P6%S.%
%X2UACS9r-s5Wu'^3?F1ekXH"F[ER.Yg?^ntG>T\@Xa`.TDf-uD>-F>5*(^sB596Ya68#j7*.2VVY_-^IWu?s=SG,ADbb,1g5o73'
%/Nl(^\SKCH#:E@MneMEo317F`YJZYJS6.V0k.qR';QYX(h_RL,mS[]jA)mmX635Nh5nHdh/P!,7M'/=#jPp)0&C*Gi=F]$2_I49;
%8T2KW:;1+6?[$s<&jpY'JPHc:(>\h"6P'ac<QWFD+.Nc[5,/AGhJB8shU$lWg)\l,N-rM/o7:`71I!i4aj^VUIW/n?/jOM?5<&^/
%PfG@?\7;5&9.N4d>0(P=pq]PrCP:Xs4ZF3-;KE:nE3)u1kJ!Vp-^965ZU#*s#`r3g7Lr8<Y#q+g8e6q.!<dOt*SbXE(21Y3%h9/3
%P[RdFE%Eq/'V-?$OU3)-8`p=KMq5mdpq\!FlH4S;#=m^.[3St*E5[S=QZ[ar;Fi^WWlbjTWNf)Yis5=ScE1gMK6pKH`\Vp[OpH&K
%[,-aANj7&!%utdM+mJNO*ZTh:M:?sE*o+m`-@0WJna;>X>al&7)aF+DZd')a:F5cuo7QApdDn+nnF[GU)n:@^eF7SIOjP.#j;(*B
%UBbEJA%<KLi!]lP1>s-73-dS7dMmLOQTJ,FV[)rg$L(T;E+#cKH.p]!"'/>C][MK8Mphr2V[(7&PoGTukeTE?l)J+T_1Cs9[UIO8
%P=JX[_e4:79O/k_2gTEE!/j9`B\p7lM'H[2i:&:Sr!e*o[*ZH)r8:*J$lsh"q8(/q=,dWOr88h@-KiL*+.Nf_\W]'=\@0nmnq4-4
%DYV'4UbUK1o7N6G8p<TZIW3`]/`uu6r88Cm,qq0)E98d-<mLKV\]ZBgc(,s3EG'jN<do!!gDJ]AbR]`QKU'o:*umYj>_Oao31=t_
%dnUJ"'7iJnJoE8@`(FWnE%H)=dZcgZ\FOP62@./C)?Gf-)ids1Y1:Yr(;Xtr&_cXUiJoH2M`W-h-P]O=AL.W&19H/B+UA<YVt*)s
%JoK.rQJ,AkE!P;XfVO3C]Q-fsPodRjAuKV"_;VjJ8#qi+"#d9l$uU#2kCEn_-JU4V6aN=$]Qe"5keuDi.BiHh$Vg^1H-h.QLPt@#
%.<t8@hA]5Z%)`eXUJZUV1NK%W'b+=;9=KT4Lo2r_[e#&31/l!8RJ=SNp#Opf5&dA>F$lhM#L3YZjf>$L^sO.c6ZkS3<\Wb:<5o0'
%(>\Cm_ZsMY2dI8Bi35#IEC+:?V[[.cU+77/@ZEl`ft^Msb]bu74+@(a/D\FQr7h$'12sPXP/"\/J!6UbId5Wbe2c0%CLbqk^ta/Z
%iRScO<haKF'Vi'EoYr\/KAfT(XmZ9%CUB2Q&/p%F.EhMHoE[@.kq2=Nl+aRCViRJP7i%[3C!BW8YWTE?RSeX"1(fOBk5pG##5Odg
%^fg'5&qP,);c]$&-?."?lHmhD^`!.!*OUk5*70FW!GtNg/@l/3<195jBi:k?&qQgo$9DcCE:08(<m"/@NX"qV&\.-g$uLg9n\2*7
%lr;o=9gu@$VZQ%>!Y=0bJ[;9[W'I6^V[;^S6C_$5XQC+qCV._3n,d7.1P)mL#:otJ$(Mir.pF3:1-q'k\eBYDOCfEL9E\*k9pQE7
%,&i8RWKfLV3!&!TiiSUSS=<]Gp8epYPBrNa_M/>daYW_Mc3$hBJHfBB!=,/?li4FVi7q_0`?UoYS9/Vt^7>M!XG<lkg$jMJ(/]p%
%)(*0_5Z+7=Geh_Dm.Dq@\=/@L>C"$3,$)-VH,(H$aC*A2Gej,S/d95s:68_;en6%CQH*[C`H]1tAX)f>Ged`+lMd7l*cOdmmT\O^
%^`BChJS8q7^]B0D95)\&o2Rr"gM"B24-8'+b6-%T'7l7]"7D9N:#iVPJ>7g'QQ$i^7p9@Om%0HNfXA#:"rp]VJ-R#3E'BI"VO[p]
%L(.qf3XrSDe#GK>!QTD!DG+UC-iYM$[5KSobY-qJ/=cs78PYM]c2u:W`S?35"l,)sPr]:4hZ9\lK*@cOIk\a[Pm*[X3eW*E"WTZp
%ZAl[%m^Q>!3?nPP1F4,W*8p%sL"iUG"ZX)NWRY2[E#.H@**3Jd]Y5V%J#<9j9)4RX']<f(.de#/CuMg!SH><5-ro/&JC@Tj[Ug+<
%,aLhAU9gZrVl^VknXCNVm'"B',R6;S0:?o=F+@aD+9FAZ^f;JeZBBb0*:37/,lsq*<;Jf"/o(&p0SXIcJ<QjoGm>8uE,n0h1CM;*
%%el%6I=hVA6=EH01C#mnMMf-SJ2<TfGKQIZ^bmrS-6@-X$!%6@\.[P"Q`N=-BXSbanUNFBcTRp^%ldAdAN/KXJ`EjMX<'dfpbJDq
%)^96I5LIn%e-_,Ze3PG`a3@^>Z/G^R&%'E:+6*C"IUlGsk5j1Zp(G\r^sT6">b)+)TtuutS8/5$P?SfAa>tgY"q*C(`gBrB@0(#(
%Li3q730>q5cHo_0R6[)j'6@^c7jq@D;*#(E@o^*eprie75c1ho;R_(\k1pIbE/'R4$ZB^oBnn0F\FP0Vrf^_oB*-\":"il/'=b)4
%*RL4iRIiun^<Qik91*tB2b`.g$B^%?1P#X$e,B8,'0'0[eSi>.Nb7F-FXD&i_R>MtRD=[MOZ9j,JMYc:AmK$Nk<is%Cm`!]Q+B1a
%B*-*bP@JejJMZ:P17/La3(-0VF#jso`edps%46&VWV)A(TXn[cQFmi],CR[DduD0HY5)MAiAOBfbi^2nh5S11$W;>KB?=m;l?4`u
%.WF+U0ntr#gbC9"nk')2">B14]:f:-JBM\V\OnRINs^5$"jYo7@Z[^'gI6a>3Yf/K7Zt?Z!bYjCMf+]\aO&eT)cYbP)%aHW!_9.g
%G!W#-LWs+?.;)W<5hh/(D5@;Hn*u*s$Cl`E^L0D4NY#O?Xm?6,3"io)DC-iPY_pT/?$:i-S2FPcdCH?kS]SC^2cS_:!+YhIVZKB2
%Z#4a4WPDY,VK\Z3^eof_<!L>GcLNaY<7T++nJ57fhe+]`]In'3c34\DfAcK5(H;P'LSf-DCC@A>c3;Kd[:SJ%#P`5]%E8R3Xu*$9
%Pm^haUg^)$7hRkl6l8n]BJE"oV?4dtkT1e9$CmO[b3*V@i&HLp_M/@:=m_X,pmh_]%kW&Q!_4q3Vo+5p*$;#C:F?36n5aOP@fcm2
%Y)^>Q$Ci(QUhAmjhunSNhE?Ju*!32q;5XJn?eIHW*F7H:qmgOQ^t%7_D<1h3N/'u1SI6DhX=2kEJTIsWqsA'"*]Z=C@@[iI%BT$Q
%Y^nSkKZ11%Jb/JAHuqRA421a,@#ki\")#b%IEr?E\7=A9CK$0&>W\2IkSYI%oO00(M!X_+#r4'-7lkU$(@'2'7L.57EY<A.pqSVP
%92DH1+#q_8WYNG`*PdEOS0/b7E3;[Ti&M01[4_L!#CcD?5CKI/)s7<9Kb?ZL/KZrH8U0*E%ih<>7ao0Y:')Bc->rUodGK$t#9PqC
%X=SqgI,M.TSo"5<d0qj?d",[F&\9'+i0a3`P2F]=j%<%Nmr[K(@Ij#E%\/SfBgJX!a"qD>%Q\Rj@/rIML(9^p,-'u7*B:t32>`XK
%*3Qin=PV>U_iH1]DJ'&!2S`kSc3=b8T[EhrY^rR;$m($1*.G;YO**@"a,Qo5(7s3pd9I\NVD^>O@XF\l$o8h^hTh6Z\$LWIDJi6b
%3b&94HRMhZL(,-<?&bp.1,a*YOORc-#*(Z*pojr=3$Jhm9O-LL8m1Es'f^d_/Z4j?*-nNb,NqhZc#uG.&qL,mbTX,Oi+Q4Z?"q**
%!CegOc7ImM?O4R[&o^nM=2/d+2r!Y.9**mcmu5'_%ST9-q[EY;@pMIq.g%b7FA.Vogi<(-;FSn?i#o@9?;`-NLR!L4^F]J2TnrQ1
%ru75-FFZFN2hNH]"ubi*E3@<:C[BrWj!Ri@-iXD.)<b54gu#?&$?)fkhjK:0T:CK,@4Borp_uEoZI42CO)(W\)!a,dXB=Pl+oO#Z
%abU2d2nCJ^QEZYHS'@b)l(m3M;2Xp>qTTcYm'`_IOC$Ln&(5B@RVees#4De5at;Xt0:*Z3hl+M8@%$A/hf'Op);-qa/p]"<m(:uK
%j+H\;q.$Ou;14YU1:<D3)fO!:b[C8o8>jt11Xe:PR4;Z>heW8s1ml#)6:5;,o\E'<fN+_b3.8WN1S4't'X&H4hl'[1+g*BRaDY+&
%f9t\=.s%dB`A\tUaS=s%hq32*_$o5jHT/8O#/<*RE%l]%]f0Cn5,8Y"2g3.CccdO+`oJH>dCHraFY_G0Anl5e:<@tBWP'%U-$/NK
%m>Y_,`1Zfn$eb7Y[5W0f=Ko-jp-pij!e]8I/^7M1^HuY5(LiZXL>3_Z&khdG[l5!Nm*?-I2ngi)\(ZYO)8/;O6g+,[[]RQ(fULja
%@&6AP."L=a;!oJ"#4>:3]Ogd`plEXg_<anO^D+F<HP>L2@Hs03)o7C84'<)/DrTg8[G"N*A,YCW$u0]3FQ.(jQ.d0-24`q_[5UiK
%g?`5@Aj[eSpWVu`Anp'dm>Vkc9a8'c*LB5rQC6Ks-o)D93k%&L$V'Cd[l5iLL=E]fhDCC1%P,"IT_Sa^i8F;uMcS\N\@iW/p1`X^
%-@YEQ+5G`62U'1F5+tqL,3-`_]/QjcA;'4u]/NHjOB-C?I`:<i9(#CeN0OYfEc1s:>//Y1]pU)\Z<t_e*GlRVJ8NB@a`QHN=c'a*
%eV?\>Ec8MiaLKlcHTUoYgIgn9i+Q6'^%IV37d\Hb,_QO1[5SakPeY#4]b*ushL@>f2ZkK[rpS(fkZh`F%VBVh<3cBB<c2imi3[hm
%[l8_4AIt9?^%&?10F,(r,@2!`C2`l=7#e\*h?8D/dZ)s"%4oC<eD:U]/Er,HRs@#!D*#!^m!ImRCm_nMooiq8R(\&(OCbXPHTQ,V
%jl./a2p;-0"Ee<pAtIE:gJE77GuX)!:@/JqPN^\mp/X3aX/o[-]`I0WmN.qQgHa#j;L9)PUt)]Cp1?l)OKh+=9pAIW_2[.fDasYS
%9C31aT/#=km>W`k+1,JM7Os=M3jCV>>AQeA957X$)mL^_#3r"=814*X4R[,WR$H<n-p:N"40^_JF;aG`hLOs8Z_Iu72fUu]%s29!
%Zm=k"60uk3S0qDt'77%q`<E_+HYY_ees4pXNd`2&m`b#lrftE7(pc.f]brYlKA)e<3@89T\@ib=7LIQ$p80TurNkVZVFooU*QIJ@
%Aa$I)\\6BW&9:/*c%KTpdaG\>1&&4@%!$8uM`Va#aM!Gq.HY=)hOLbdW'Tj2(8^NUOF)&c\rjA"=#Qe<S_O%EGQ0:Gj+Al@TE;Mj
%@DhKW]Ym3Jgpk%#VFPZ]cL"?sh8Sa4Q.oLV%msR3^$3<J[o.Rj/_+^=2UpS;\B#N8WP(/WmF+\p:%,T4e!lcZS$iI+lT;L5F8D<9
%g:=ocId*d!eGhq5E()h='gbq1<'A<U"Q$mI+f]YZ$JTO@cs&dU)2(99";sL5=Y&JC:PO4Oi``KrfTLtXC0DYecG[LZmVF_]UVI7Q
%&MQhC#K$hdc:]Fg"LB3a\cY9cLq3fo1Ib7iR[K3>_F%?_#NW-6RKepA-4P`Bq[B00aZ[ZbH`ua9+".QGNSL;[L!kauY&EYqXrhs3
%?FS&YPX_eW0Er8/.(6)Y/W-J)3o,L@I(%\1!P5O>)%RCEn.J-b4nI/b7N[c"fPFogW`p/tja9FRm=L#af\@.[NLok&dCg2Y])lUK
%3s!mN8l$:^a$t(f,c%V'p'kH?K2jFrHZ:6t6<U5SZkQ`D3h'tpa+AI[HB9co4tjpVJen`(U%DpDP2bDrKF^\]!Q;=9gnTcs.=<p.
%i5^;@G"a^$*\Fs)!g8H\L`2C>(0KW.m^kd$$cj:[!N;K1JP;o=dY(EESDpH>.UA.%MO*T6UFL#k\?r#60?!q,*ajn^2-L?2EBm1`
%DKLCt(6+'C!ZMQPK:;>ad0'uEO.`'g=jck>=B5R+>#hL0cVUn?AkQjYZ_ku.[5\fA,.ToVjT#RL!be^@RjqTLc>10Bi07*\8j&D>
%1?:LN<\#?oU]$clESJ35.*ho]Y&<W//IE%ulRdS&$UO\0'bI%g&[8)6Me^%sNV''_PTm$N4V:2r0I[GUI=A7*TGGh;@>*lr7Kl\6
%74lXD0\E4!pO3*>cD$iI1@:;qKYie>lTWt&md>ajGSMg]CkeknP%6mNG\e&D=_V<TH>4+s-7jCN=]BneGi*0W$\(DB_[&a9,[I2!
%!]1'7C]ZAT\/uNKYu')Z[Tc_Zi7[>7>1>LlieUB<m2Wf_hC8^UdjHIrC.?%rb,SumOsCO&;]PmgC]R<;HAEkpK8sG`,a7]DXG-Qp
%g'Z?mW9E5r6:HGG3#G_QIOKE%G1oV3-ZGPeG#;/OGI3%CF0ZE>l)!7RT-RT*Ao?NZOsF4=Fkk3O_%jg%XhFk=Krb>Q>EDHB\rK64
%#?7N.U0k!"rBt\#J.I6SrZHV;KbW>cKJRpn!l0!DU'tWR6@-Sg)60usl^'=mlLaU^73/NrGT<n9k&95_1*[gOPOp(B*76pb?kM!V
%cHOPhJHE[GjJAXi"UB>"@P!_eTERn1)FH2^.*8`XM3.3,W!Mt#I*Yf#1C3j)*!)]$#tV?l$e#C769]3fZ)qX]A,&s!0JAm+M)CQ@
%mZ;%IHg+74`>p!/WTQHW^+"@M\C6pG"]\u/K&rJ$D,:&*6kTSB3IWmu6qhMApZ.n'k&tu!E^*%X%G6O]_b:>e=<Sq"'/d!$](6e,
%9*Z/'O!n_h9[q'oQ4uVo(SitoQ>$hOOA)%O59L19W&C64/A;h.9,Tb2h*b-YJedY#5XDe><=0O#b8;0](Jp\A(X'uF-O^&"&UDPj
%HGqng(uj\L"7Xc>g,[p2'A-JBLQ7jf!n>/(O<,"gGV6m75o7^\_hhB=hCs/a!>eoP'I%l?W<m5EFW&skXLN4cp.2B\S>*FqcX>9N
%A<bFshIEZ,JY[Ut;Y,UCY*lXj+?(%'f!b'">2G"qae:hfb8_;n^cdJ"YLW>R7nWl;@d5CW>_tl)`*9RWN;ui3"@rfn:4bTeNL.,_
%f0ccpgQWm=JWL`QcmS5U!6c3phb<gc-ciL'5Tr05@u!3H#n7)j&_NE^8fWMP!J!o,]b&<PSemjeifcR5OdR2B[n6&)J3lLF',K$3
%]f*Gj)d!o6#loi&:?+qP;HnsX_\@u>d7`dJR)"Q+4oC"2/A2a]%S72AZauiu>LUG/@u)ZY26C;4a6%(]G__R'h#Y><2+m!5R&?$Q
%L?=)!4-6TOU4rG@'IKM"_e[2;2V6'H3E"W:&pBc)XV!-gRWa6(lSX88[AnL>p38]YZ]#hkHKE(X(*6XIT)0"g^o\!@_Q$3QEGH&P
%dr;b_Vs8EnB^E.-S&o*.<%qeIfRg)jr9$iLq[I%R=oo@sX\&7f/t2"CH&OS&Cic*s-]2!60XJuomUQZud+p6-Zalg=@]p/=.e3Zn
%3+3?"[`5&?"G?u16sWYa]A0a9d)FcS(Q+1.)X^;Q)(N6`eQ#<V!FR+pG^*,fd>&q/jp?!TR)Tei\fp`lGZ(@sP:Rf&/pe:CZR'Ta
%e_F`JBhGs^6qu&d4C`2sc.=OqX"i[cX'OKU5pN_OZ$-2f)V,DEEkK\3Or-(q,9HnM4HI`]qhEr]GBN(GF9CYMZGmei^1`fW>*dGZ
%aH,D:W^,Y7,h*GbA(N)NTQPLcD(Aa]$$V7Y?<\8*AIBI^0(S=O(MMs<N^bh#6>JI\2b?7B1Y'jh4TJ1"ZNd8"n[X6k%rl8:>s;(G
%#LBrm&DRZSC%q,]LbY_/q^CLM$#9_62=*kS(E7T84L9"gGOJm](J*j[S&K)8n3n.'m0M:a<`MIHE&/)fqc)C]68p3E#^'\h0.!)q
%-oG/4NOpm+9oT4/G%b;='OhumkiTuD/uScT$OuJ5E3l2URqf@ZPP,+hT6>(j/[oC#TG_+5"r7VYndF=Mc;3>oDaV0$i,0W([hKZT
%%bac*rI3-'J<Yo^A0mF?cWB:eY,<\aCUPsW#lY[mXHf`+.T,OL;&N`H)%'#7JLB7YG3NE09]lateF>#ebp@gkiPZf%E:0*9Krp^]
%pmPSrY[ZY>?!<"K2nUQ)UI&M$AO^UB%61FIC-@X40uM+"qJ2n3QYkEoCCEip.FB[&KXnmcc^p#R<>gGmH4-D%;8/aKn>-[`$1-rQ
%ebq16R1Q.>KE<>11q'\,01RqR7@ariojWGbm-9B"L,/T"Y%"qNF0JB?1T+C(gtJrXT.ap+rE+19i=IiO5hci=7)Z&)k7_pQ_E>%f
%1,iWl)):'<L:C-'#1`Y(<Q>/LMTccdZM;3$]j#Ota-A7SXpFu]IW:$'@7$7RWmR"qffhTT\pTZ',KI`U!Wni87_$ef-s?0-^KbRC
%bc9q9;4mo32d"*a*ceSJX7E]?kJ"%Jl#k%!*<Z[_3%\iOK(IgK3\ZB#RQToOY_YhsLTa%QSsV`>ZJ8k)\-ef4oTB3`W-*caKtq-t
%aJk2%(*rC_5enY7WpGR#9tk^SP$r)<JfFCcnSquNV[b=Q41s,@-@b(X#"qMVWmWN_,d`04WI3o!TM8gJdE[=?0`ceA<Yh2jE*Nad
%$OUCT<"BYt>a8'LAP/%$5Z3dUf9HbYS3"SK".s=d`,n166O26R."_&lIYB^<3@^"t^L2u,+?NUB2[je7nqdui1SBA"O^MCj&YZrJ
%6J:IGCC;n(Xs8ER!#D"kEr"EM_=i2%.gUP\.j;-#,NtmbZe$r*cil*o4El89]r0<u^@%q[2HU8@l>R0keBh'J;$Hh8PmphI5`5;V
%?AV`$p'BJ7n7123b4F[!_-m]^NY/`X_i3GfrQIM^KE2W=oGt"VY8.OumGL*>H@ZT!Y>QZ]$mf=0miRLiQ-cBhf*hAr@^q=Qkbe_m
%H+#nIlOdPF4RJ;p6,.-u,fn\DE@eTgs$K&t*[IgA-?4CM?*<BTnk3M:[@EQrLEL)FQcNu9AgQP?DR<1J.`8"k0EMg^`h3MWEIkX6
%PmpDJ`TgnCEp-Q0$qT?IF>;-_o:>%6F2bVRl^/F]+GYg]!=^Aj'Sq)[5*-=[9<@s"?)d^TQn6/-CQ<T>9#t*FfRDJupaKJ/A;)tm
%Y>=QJ37Nn)U'Y2p>n"8DIV%A[*O?KFe=&7W0UZGZ+UHBB#`dQ7IN;AXi9u5HR:Oi&8<ki&T1D:bS6pT!lVVR%PS>a=f[j4DJQ\A5
%!/@@%=@7Y-[Ropgn.l2.So/@dc;"A++$@Z:'bBCA&?K2"W3=S(5bo,I6IK-DCW23eUEc$T?:\WS;"57h1Z[Z),&$O*Vo5<r:pm:>
%R099V'6L,`N^=R#!mds>oaL.TN#'4BdJ-1#-G:'A8fG38b#49&gP8\.(iV.%D\id!eosBN.36BheG*#lQ+Bs8689o[SXXKmJ7N.r
%>&`ESU3m&PlH"Rq`rHc8^aFmk'chtsrJMrJaQTm.7>`m\q5.;aohE836,AGk'4)$>PV't3r&F%b_V"G>8dA`M!GtPW9)"69:@"!L
%GDR0!0'9XkGLB#_T+!eZF6VJ?>5nm8FX'"-b]_%VM"e9LFZ_7F8R-ea;TiF&^aF3L]YLBI?@k5K2u!+!JMB=Em\3,'",^VtT$Uu*
%;`bpn!iUdQ6sDQN5ZSWBEH%Hkd;OOWQ51FPKitee0OBl&OS2V0,6jZJW"O)F\^A&<b>p`>Y]R*)M1JDAiPOpfWC3Bj#='101_u2^
%*'%/sBLUJS3"i7$Z7sC,Mf&R&K\^CM!#HGDVQe4[Ct]L3:3'F2KWtY>=cf-0rtJ\;de<p>*[\^1-FnebnH<H"O\d"6\mo=kITl<k
%4h29/?rZ_[p/1.Ji(K^J5kh.<n=n9066.gqRSJY][$ed^hMQtil"N.^ne+^?V?p=;CS[?TG(LF&B958caq,P(a:Q:"NY,`np&dqn
%VjEB:q*HE;nP/#1Zb]6@))L;8Z7D=Kf4lV>B>SU%9ZeE=!%*YUbF2#3!1)P21+q60h?^JIYP&+LYKf_0#CT,VoLLr?A?c@^*Hi>F
%L7?-a'4&[D)-f\VV%G'"#&t*,dCoODpZq+<B\FSF:K2P0fP<rYQ^G.W7\qaea.6VNd3@j:OjIN0%A0"?#hN)DLFMj-(oseQa)ii5
%A:Zb0FOJ"-D$q>DRaaed=%IFke3ph-CsWG4o)W:)7oE'spK5m++XS<C#7oB5I5KdgJSRXn%uh1q8VgO8pB$)4+eV:4e)>!aR@jqF
%-DB%h[^^k2H,=Ym7/fHOJfkgb"LuRXSD1LK(l@)*;R$h(!#"9J:t9!F3-#(&$'S?<'@'BD2h)Nn7bk3VSZ/Q'U]Z9^NWcMSb'8j"
%Ee&Ei^.1*<2JCmIQ&O.6J&#phO*AT`_ECG!l-Y>+\1%&/8UR0O86-*C3#hd0+G!7Q;V1qJ[nA:"VNsJX+p\fMB).,X&s3WFe@*oc
%NZ+e6<K/L2T0^ME0/6A$\aiZ8Kflen#:51IQHr\!l2;.X^>_*UKQ%>UDK'ld3JMMtJ-,d'5`dDP^(E2##PLt":+TZ4_:I%IL`'!P
%HAT9M!\p0JVD`d_qZI&K6+f_uC$]Oo->aH+91F;kVAPD:*Z5k+&mGZaUQSG2Lmpn`MUW+=5Bq&g^Gmp58tm%ig5=;EK]rXVqo2)h
%k(W4N#q&g4"ZU4*852>V^aq="H&UTa%<E0-\F&?]akbYH5nXGe=C>%K9UDj5bg*T<VdhmWFrG;Z@jtXY\4O,LU&bf_Y[F%_,t]'h
%Ls=U%gRbCKlEKT*)1^0ch[S[5jr$29%17@k*i-=V0kl8ZXcTcJ<I1c`;G.$3R5=+c`KN6W&REZZ*nV9,:^5G&aqa-.;:5f"2_0Jf
%E<rr^,%QMQHJH-"C"<_L@;q2OMEBsc=dL0X"&R/<.4dWC+C>q<g81Dq:Uo\OPVaAo$]K9GorQ04l%N;D%\V15_E6)\*[I4t`KYnX
%i`M&bLj=t103O=Wb$5M<pei.ENKP*nJ0POGK*6/:rhESAX:og%\]-$V0_lWDA[eV6%=l[^m1V\6rc!G!cpj_\A]d)%3/mC$Lnh#U
%V,#K9)W_X.`^J)c,Q[X,B&p4sV%^_Yl5#Mo$LVkT!-kV^,XW*">o;Sl/9NY0&$/!<;KIj*#dVQ<@b;N4Kd>p/#q,nc6Xo^]o<!P9
%JTXT3AUIe8d":X1pB<]&o.2.4&?i@CKK[V&']]r3TRPm0arHq[:]gr'TNL`Q'/0n//j-"._KuCloc^IX4mKT`m!8/bi5,:?g^t0T
%Yao;<H\!$>P2k/@liPA%7*K=*:,<4-@^9^#^j..:Os!fIBlX"]'`ah;QBc`#&t(%u1X#:s24?IVm"'KEp4TM]`;r\_*4k&h-ZM)+
%q^))R-%1Eq"fYa/JgtF\=b6_qP,KNc;Kd&I(tnK&9;ULB,f*mN[_W7RURT=@9H4A83Y23Y\9T3.^*-a>"T+JB+YA*m&9,9@VRfT%
%UB+VM[=o`i>#^h28#!>WRad.3#e(@HiHa[gCmhC=-&KYu\H!d,e:&?VHP-U@J_GEO7409ad>i;Pn/VU63N?L:2G[6MBLmBpSX-;e
%D0jPYi:;oN*ME(7KR!@XdR4fbLP,A.pq-;k5`h#rL!Gc3k;?@h>#Ye7'HhQ)cbP)W=&i9IfTm-S2HV8&QS]<InPY&'8C3qR`tS_W
%!6ig9V=W@_OJ!UkSoD(MI/k`])32!cOR(j'5a<8a/l8o((HPf!U8AsHS)MK_lGSlh_ZNa6,U[1R/Q)f:;e/-+7ll'k3$'?!W"DWo
%rFmXe,*%".+(,FrNV1-J7aF8-V&?i>,N";0[5NnqkiIBZ2P$X>O>B6^#U02+I'Q2t.3q<Q7CQBpr,_DiTu*9J"uq;**$Lf=l@IB_
%^ebHQg?kPJ*$<Gt98Rm@*lCZMC*_12+3Wt%Y=NMFqkKdO?k<t]0bcAm8@YGte&poLk)q<nM@fnMjuK4KkQM)F\HHBWX;[mV_smN>
%$\,R)Lb91`4Q68/$JEZiPEZ#DhI1[1#[[!;pf?*n*+>::W:5\-Tu&Kh2%T:=A!k4_)hP45*+OsPO$c7c'B26RVBQ8CGB-/6Oh(]<
%<=@/+O0q9%L7h<KNV+/lE(Po@)H2[$$HSHC.Z9Uk"]k30it#Cu<%URJc'?3^XtIc!PEXLo&F"9o>pDN6-LLJLE8UoM9&:<lB#:Zh
%!Rmo8MBj1RbhBkgoP&H,_5SX#OSNjGPE!fAbX"\Elf[hY%<F,Z2F0T`Y!P1)#]As:i#CJ]Lk8Yt'7As7%5DWR:E1X57<*D\AgIe&
%Uu[&hR^^'PU-Z)D_7p;o#2V>gBL31"K`4i=FHTMfQ!cG)j%N^3XN&:SRtg2_#V(uG!*hOI#H:/8!S@N[2N0#J>/e9&?"U<0+^#:'
%8r-6TY:O/mLp$l`%#sp60S/:ccqKBq_s%W5P,.o@XHS0&Rn#Mf@64dk=p]6'^m0oBR.phu"*fe-P9i:^d.&tn/22_/9DU&("W.52
%+!pJjJHNqjQg+%"Ph1frM1MfEO9PV_,`#//=Ki>O^)aa6,Z>+j(,J2VW6VOf4$Z%d:"Y>I$kc,h`87?,ONP!91fAg_@Yii2i\8c)
%6W1E$8T;ZR,I%`BT`"km2UE@U`3bd-O138a<XMk/<Znl*0nQNW>'_NM%fsqJa,%DOp+2+b"2[%KpS=&M6`7K8:_P8&('elEq>p`P
%eg2h!,Q`qq?:hg@F;@V.m\=7Jj.Ift[bO++kHQREl$36p=Nq=c&`n@*N(NO?&P(kqEM)8F6o>i8&GT;ESp?S)Ql[MYi2nk/WP*I)
%#cTP^Uu3&?`(E<G8O$9^!k10WhAP,UC.r)GE+WN)?Bij%*eU?jd<->Q+R.M5El]Kggs^_R)[m=Ye4M:nYuPa:MTLoq-^mOp\6P\"
%HKK%r>;GW&4THH%L6_4P7gj>]i(TFWilo1U)7X_;CWFZG^`CADYF35m4h^k]]jGlZ7ouTYk$p.QYm`J8V]_;co"^tr6q)+NU=,H4
%\A48:!\`h-)u+[bDr)/81O`*-)_Nn^oF'^m6OmN=VB)6h!%$Xqj5q(E[8rrPR"K%N$'N*Y0ks!j2R9a.m#[h_l53(.N6E$9(`-9b
%:iFtGSQn`@."8\q0!tbE8U;7#:L^gPR,>UQ8CS<YMA#?ra=C@,6IH`)cjS5McO6N-qTC#XL\Ql\67PtLO9iT[i2XKbb._/ELff3L
%'LeO@(t?^6VMrI,\C9/6Qou9>%[C!U8J%!uZ@(#>>=V!np7<n^*"o_3+j1gm?'\2pZA?tg_IS42EJdsMUX%S#_Tus#&h15E2:Ruo
%!!:,YDuid439k2pPDBNh1.MVVC_/$95q8I<b8O6:.A9WX_9!K!8]%2IiDX?5*tgp,aA5Y_`&GK2h$>3;Joaj9<\ZYW8d\-cnSLg[
%,S/?$,"HgSTY4lpL4lt![a9]k:OuU$$6]qb?\,&2kFGNMb+PN63=-N>X(*]]WQ7=>UoFiRW%F$X8-W2D#Yu$BOk2f3p(Id?g#B?g
%<^8%jVBs;pX2sF6*@A#q33*=*h:c2PI"tYrWF6PEnRb.``'pPg[KI2#^?m%]k?07K6krtm"U7s,rfIL+JoWP7_OMsp]I-?]j`uG[
%813?[1r1S1'9LLs(D=u^6KdG[p'8_f!<\$5U+=)OU)X2.9drRYfIU-B/PD0cYKGo5$,MFRqs2AeeOgUF/9Su#M"&LNA]rKFqBGE?
%Ju[D%)ctal@mZu"6HPD8Q&s.G*_^GPg`hhM^kS;8V3!Ogg(LCko7oA4_Mb[^N>a)mfc",T9f!VYJRJQ**V/j,OG2K9=b4I5O$(:.
%"C$L+8Gh'I!kH+)7Y/AJUlY80jFNM_^#_$MaJc<Yd43Rq<N\34`?XWXXDkB8J0;A#F3DHe6u6^uRS?=Tp^a86iB%>.QRXg\'V!+J
%C9A<H$\9CMMJ36sS_<e(BJ2_L$c,HQr$=[3!+H;hfP6*UIYnP>!<=qk%O;<]!`(AoOV7T?&f2(uDbD3I\i([E/%.XYW6!+*TdG3o
%*,&O7KYDu'<cMaa;3$7@85sS%%l[tAa8dAQ*hG[+5%&?!MCq1L8LT!;\G:LWcuY&1Mn0Zri,sZ_5RiDs-NqbH$R09P8U6"%;?YIQ
%:6ubf*f-6Ec\X!!>SJ#@6"Oa5COtoke+-.<\Ho\\P9@q&(k^:o[#h(ik"Cj!eoT\:/I\E,#[\/&#;e_;G_Isp>c>_"=HTtS'lZT4
%=j$e=kH7)>j]SWd^TFXaVKR$$3We5I4NKU!Mb>-47nSsT)gq6J$3@^R!BkBn@#;"PZC*aibf4UD,m+jF+>?9"ECi).)>Ql5=>7`o
%LQ.)',M@^tGtZ*c@'PQ6!\?JK_]T&ag*h\ck]eNiY)oTT>IY(Jc4C2g[=Z>-]3\ta5n2utP$m4I34*qW=i&Xd`t,+r2+`N&q7Ki!
%CJf3b#9>>96P>b\<PD4*joQ0MX=,t1ZY>^$gj%rF$];Nn8gt'/)?C8V*'f5gV$$cLetb[-Yo,'"lgf>j3eGkQ:hakb&ep_I;5c4$
%J[[seMB:E=dmnZZaD5oC1fOHl[t.t^<f6/oirNsH#S)Ic1h`ReUY&8E$FkJ?M8hn-b5#bN-/)hK_B<R*TJ"CT"kF!2To^&1c[aa_
%q+Hro<HB*2WaoM(TIKf<di]epp2bM@35A3Air6;Uh'$l+9D3R3J-(61O!fm-29&b6mO;aa!k*?f5dq.9G/X!lV*&mXDU>^6P+>^\
%Po/nb!Jo6O%KN$MC5mO2s+cuX%bdg]0MRt;"Zr#6(BVs,--HntS,$@BLL_Lceh1'CbW:se#>I0*@N55Jf\cg5^klo=NC&c652MW3
%Jo?h!6_inY7(I+Q=\Qh5-Q9hlOB>sleBppj&PI_`$'6EsZjLgp@3D+oL]@[IgA\!>c;b_$N?222`dfZEQJk'N&50l;#^SRb.u"m#
%39sDg@LF>/Tgo]eW7NC#bUbH[8T5:Fh_YbE:Q\o$]_<!MXcmd68mo(C_iTIZ:]ouKJ6'(T<O)^_W*59^&[!Hu$)9ncrY-YjNQaU]
%*'OY+YB7OA'EU=!g%.%F.IUuT#TT$I1n]BX+HN7.Snf^hX$(VR]8:85!d)g>`(A:pki=@AckI.b%Fp:U_2'6X4M)p^;aT29A?f,_
%)i>)2%F>:h#thf@40`+-S0>/qMAPc`!n-N@%MAGDKc<\E-'sN1%Qu/5[R*pI-i=P(c,s=FSl&scqC&dH^mVRt$b4G%o?MK(GQZD>
%#X8Och2ARtAJb\dL8u#Y#XiS32MigF<[2Tf*mJP-AtZ@<\hXO%7/K.PRE:cg!-p^eVHSVM5?2N5J-o4,Z0Xa2%#i4lD$hO!MYCq,
%5[/QA>.miWT,mm)@0Ps6);XU!^&KhCUV].;6:-d(G:MB*0$="94=Ps&Okd`&0>)q'&TQ[@^n=H,3%4f'k6AC4$3RgsI,SaiQ!i*d
%'W)U3k#OMN,gd4O)I[Q%hZuFYh*+lE]jXJm77"5e35cAbM)=9ITu]\8,SRg_.WqgM_oI_SamgfHlO4GnV^B-p2$;i?`LDS)+:.oj
%UKIZ>7%T_pM1_=1&U+;Ua:)3c%+dPY9q5*6"bGjE6c-&'H*%lrD!?J6,V.nJ7q3s!_:>,'W$3"aAV!WnPo`86U?(N"Gqk^:O>MpG
%HG#H_K60j3C;UI_RL]l[,\T&+M4n@0M]iR/U]-[RM]K[Q3MX*R0F>=dOCCV"JV:HX_^pTPl>FR=,GGO_SS3lPK.K^iZ?`8NbI0`r
%;U$#;ltEI+&ddK[YhTs+#ssc^K2;m)3WLXdF@(9iQNZ.!3CVB6eXGh1Li)eYGj$=Xce,&K.(%-LVLt^CV*L-cA2KL/N]Mj`#_^uI
%@NH+;M#u63.C;pX$.^:UDQm:-'1"dnB@)ggdQa'c7l"G7(%=UT7RJOPUEqV>_)WmY8!Q7d33D[?)@/JV`1lIkW.Yajb9W]LMEWP`
%0i*1]7mbAb^=W^n#Z3dA]ZLQ`2Vq$J95e[P]E;aS%3Jh@5pClI/[m$+JRRZ?+5l[FNuJmiV#E5&D]SEt-\dR?X9i!=bjmOkqBcON
%)%9W4X]#a*_9J;Y8+@Eh/b8K"XJ2Yu)N,?l]L_c02rFfPE@:Dab^AHkZ1K\a[Lq!:^%8p*IL>fgFE[[,8W^/_fbggD?K)/K`=t,K
%M4]R&7UrR[,)IJ.8qpgi1be<s`f<$#FSd<5MCG*X^_t=Cqi98?Fmeas\7Gk(+W,>3<fj9d=-)EQ7S]dL(BE>F8;.Na?q@(e(/BL:
%[3&_&`fLaap/HJZ9+HIcPX0j>e3u[p%1uo%A9-Y\=>uF/*@mhCACWJK(Ib-ELSJ>:on8slQ[LVi)-D.u"l3B.8P6TV5e'*(3SdQ=
%<;!.k=&IE9)0_8Yc:1\o=^rRI'0A>Ghjn/@ECn$PAm&._2a(SeJeQ^7CRZkZ8RUqQY9N'3$<><E@]<=@(!YBtqkk[Z\ee@=P]K0F
%=^8##1pPE8Pe@fd:kD0P>9p$e$4=l=O[9t@J"s5raTr$_ImC&u*>T::3iVt<.X5R68\IpG[EcpW:/2Q4VA,bS@"Y-u!V(=[hDbRo
%+[_u52K6oF!OM2TJu"mAQD<6F"f2<S\\(<TcWMlp:9a&@_<d]MZ4SsETZIq$)HgXg)Ze<SfLg8gl+&7Bi@>UD$D0]u,L;</r&i;F
%)dlj:+U5=p!oRMH"]=/Jh%q4R$'Pb9%-Ki$XHPq&]D&`._F\>Xm1N?Z1>!ET?%Jum\&.<i,\'SuaH(sjN3.q%;W!&(g^DP/"rC9[
%>)*7X9>k.5mNc2-K)#+_fH!*/qJiL"#79Sr+FdjNOVTmtl.K"p@=La8S!EZ(J1#)nEF_qC'1]$Q=bWZ8Y#l9r&\TSo'UCN6aJ5Fq
%3\qc6Gc!i+Sn3b+fjFrNC>a/@dRbf7$sj3TU0&D^G\#BZU!UbVZ\W.]4?b?Hb"W4!-INCB8K!rm%'1?ten<&R7_@B=W+p,p@2KVX
%0(\X)`s'fl$p>G)*2)k$E.`:")FgSd@[FlK_712,<P#5j7Y5Vo-$gUYG`[60\2!*C<k/O5@fY'K6A.iK()Tr#AmHXKQB!@b?)p2k
%!-j;u#)P,,@(+9+<9=rU!rc'BY7?I)^'<gYECoDUBEWBU5Td*feHR^N7]R[Mc9o;QZid]r,!rC*cr2>``YN#[_VTgM7#$J"#>4s2
%1.lSd<uNTZF0rN0&_\)D/LMq[!bSR9hf?1k<Eo9),Q8G]rKt1<q86Z-91%]m]LaM$Ei&Hc8O//BFYf?:-)pF]A_tP[q+#G<YZ?U&
%6;mBOH,>Yb$u$7]dto0QXl)JR2'D#4'`:iQBA4OcD$9E2].th1*;m:E=(B;Rfd2a,@nY68P%m>reJ)2-%[)GY!+Vh<JOdZD5iqY]
%nNUI"">W;F#*0`t_ObY-c&)c9.r=]pAB2Y=(/dU%]pTKN-2Wo\AW$HN8:]qAn!5@.#bP?91=O([,&kiS:SWlln?`I=/UV$$AE"8X
%+.<'!T*\OP9%4d\k@Wq8B`UtWCol*hmN'WC<t%tQ9ZVYhLBP$?@Y&'L8k&9W9EU,Yl#]MP;n26QOqo/M&/mM:HhfsQ!k'B)#4=L+
%d7G`2;Hb4]!8c3_O2,TBOEW>%',]dU[rc;6Mdg]W@uuu"=V<Qqb-jo=,sss[n0)tG7[\Le)"Gk.9+\@L&q+q7=pTOQ1BI7T)GX&E
%](-T=*D#t55-=euP=2F&q@6%9fbV_SXEO78LNHl2o,Ju7Lk6dc'TTSZ@c9;FE+CK'@KgK6`'n*hN^,Akp?*<o%lJQ4&>9Y(Jo:`;
%PJ$kRVsmS=UOgCejB?`6er&.=3/&.ZWe9$FD5p%i'tj";'T5I)Q[sg]*r.+fADqUfOb(@ra#L)a(_uj!IP).oGm50aYW7hQ"`PWJ
%:"+4E7C^aPOICO7HM[n27?ohEP=$]G7#&Y\HC&GFpPYQ$4pf04'ZUL"D787G(RK[N9Jf=A%!NV.UQZ!((7n)&7KL&Np^1LM$<NrE
%aEY.@`lkom5NNnQ81OkZQmd?dTm8MOlL5pN.ZAL*pn9HG8mrVUG-Y9p!Ktr#R$sneVi]++6'9/XEY"jfBjEQab5QImipl/$?=Y7N
%_UmP*G?66DM"fY+8Nl=e?sKZU+;6E5S8m...ksD-SKJdXIk*:IqAD(\S0JToUVZlc[[]C=(Yg9h[PZZ0D51VFVfER#CZ_HSJH8>G
%gOrX[JMcB0k"BtpTG/."$\G4;H4R7^;c4?d/f:S0K49UedZ;d^i2r\FKb1eGI'cJ<7+E*(\rK6BlND<B+G[3cUCcEo&tm7!.4E8D
%Al]c`-ZYfGF<q?.XY@J?[&YD)>NQitGIYMtb%\fl*umSJ`FYu@Ekb)nXt\H>F;""QAOgO3Z*#AM`KC^d-sCah-`.Vo:)dmi@2.+n
%Z<e/NciZd-2./FGQo&-s!)a14Q8L+COXnY74YnfKe;Ya/0_FUc*+CdPdRXj0FX!t-%&)ur8(P*[2JR25CJok@;Oi;ufp,kdT(Uk@
%>&o_hB/CW[>N0I<T&mK2]GY.#/5?q9ZdoM+dgO8P<0D0RNfhG23&2dg#$"t%Y)SM,)Cl5UFNNM=o@YOc'>Q;pT>h5Q1m9SbQLPRC
%N2R]J8gk:;R4.esNY!F>.$^`MpS^HR%k_NYJn)ZROcWG6A7MSeK@O!X$kZC_a)KPL+nft#=lWemXangC"*AX)$Ka_9U^W\[SckQ0
%X]nWrAd)@-(d!l1:`3&crltL_FGde&g3$NT/@hkV;^QKA&sO]#)c@MDGRCZ4=?GTqJdT!7%q%J<hk>$.SIjI_1P`oP20.t^4hu+B
%h'[n3,`/555iY<f9UV`MU#OOA9dH)J_upc`\L*PZ:gR+%CGKXWgoaIe&R!:beFu6?&$h3UVht@HkK7&;RVi;ULk)NBC5o1reAd\]
%#*sh\!UL\dmX6IVG3(5I;Bs&j'Km;oNf?p=h$432n=Z@2k,HdoaC$9V'la\H;o))cKs(nGNbNH):;N)>_=;/U<g%Mn#<aOP$*O..
%k_1N=Pt5#Td&#_r^^Vkr.g6V6`lhEsUDB#IloX9$WO<#RU,k'lBaq%L^N\]3C0A0"dP&1pLF(gPkX\Z]E7`Koa-'.Em!C"r,@Nkg
%Hc=P33de9LCpFDY'hiP^n85h>CKMLk'Fr')kgguLSTs&M9gq)^&N\%*W";'_Y]H%:7"6,>9bj1\KUKm#2--osV<Eec6*Jd)e:7U_
%brq%@[U*=p#ZGc)!(A#q[Op/H;=U^N$o!QhN[R<=PM&QnTA"..,DTWW?5Y`#ZG+e.+=]3KjD&Y8:WO`ILLbW5_3?)I-R^]OP"o(>
%dr_^fXUq^-J(gn1]4(9?'Vp"0J$IKT<X=.WK@h]f'c`G>>/7IS,Kj/iB`aW:`_+i^64!?a)TfPQ_*EfP.d=C(LtBtL:L3:_15GB>
%q?L`@!H0*,iEq_\J.QC*G(do`q&j`D]F.75FGJYA7a$">ADn4#6@\6aoo.7*;4&t,*5Tjn>2ob+S0S[OV;UC<nU!RN()[5T>R8k)
%/HIF[L(bq'\X$1iZ!pXt9J\4,Va`&5Q4^&%!YY`_N\&R+fG$A@3*VkM69nd#1>4EK%7!Cu<^`hA,_c*u4q_'iUt/Ns7pOec.nMu-
%`C_7EV,.OJ+Wq2bdI\tk1W9Xt:B66E.:ZKD9^"oJ;T0Y!pBbI;J.'T0UP'o>:0?EK99C'"K\*IbJn3$r$Il5`bS1@%TE]-,TgQe3
%-^i_@'EA;JR9WF1B1IgFB_XQe/PbF1l:;:*F9%.U8MN)idbG1(!HoE``)s(P@1,KcONPT+/*4%Wq@l95F%9X0<r,u$aOB!#MKR)t
%BDU[d1-d#aKPiaU-4VfT=Gi%S.WPg:q]l[3:?^9(Xn_;-h,4K\O>>dH$)J.=-^ltkZ0Ht'@@idSW0=k<@bL>+8P!sWM)GZkL1b1j
%1_usO.g.j?3$Q!pi-S\b=CJHq.AeFi'eYM0F9_S7.V2pSJO1\g?G+f4O'8fla"Dqtg`c,kRRaXq\U#aLg-llZkr2_d)b"uqr$n51
%,`H<iNiO;T_*0(f>b^[)MO]VrC@C3H&gI\e1C[/*"W4/V%$TZE$k4,/LlY-,h2-.aFIs-"anu(aQ/"-mae?66X5cNFK@d_]s.anT
%[<\g09+BZ+E%T`gGtTgoeE[5O']=RX8R0g`=@n0l`U6W2'/H^"$YP[M9O&8N;fYD@6:S2Gbe>dH!&GbAa[#t3Zl!9^!$Ml@>K85O
%RA:3-L$gT[g87k"$D.6;K18PC;mCSeiHC&g/[/DFclutsQ$R,`fBZ48^Vhm4UZ>o9A4!ZB^_Zp[^4UB>nGi%p%Xp9)9W_cV8.Mhc
%YY:,5bo7i?`8N[ar^5\d$a^Q"Y_d&@#_l6<^J'Pl.,]^88rIIMT$mfE`,Id!8IA2*5Wd)d,;<ZM_FUf7,'fk'COr"r6=SEY;NaBb
%K+;4>\b)/+i7\7HN)-dNR\X6D$9FI&3cl1&C><7T0T=hR$o4?Uq4nRXFOGD*W3,_r2d6Wsk_Ws>X;A>TSFoq(N5Y5r4cV=*\9Eh`
%b]I7nMG['61imAV9D4N2@>VHb&r/1!OgD.5l%F8=jkH$8k+r3W"h9O!5SN.)TeJ;Z4#^h,O+@ns!fYJMr'J^0)J_D\XME4ghb&2=
%>V]t/&dh@C3fn`"9>D$kP)Qr,,aHH0Qcn`gGUg(hqA-aWLX\@:1ek&UYIJ-pA1ILN(?Ll<l40l&'snk#ha)qE#5P5#6n1&@i7$pq
%XOVmCZ6c@QZ4s'7kR%2(n<R<oqjK\)a!r)7cWBZmKp$AtiO3=43j$]oP]VF4b4Vm9;"hh^\_OE!!DA$GB:LU\$n!dXKB0LUTWF9@
%$?=7n=DB]p5&*]aNdE9i0oj?&b/[1HGpc]d.Nqb&\?fXQ[[2Re,!['K_8ECXd8NGrm=;c8p(p9r4cJ?3V+GJ+cAfi:V&?#_2O9]Q
%-l<ZCTP&fqeRCAp"@Z3Aq3b]i%\'>gdrmnG$Dacq7rD'LeBV7t-a4Cf$\NG1-G"/#4DGRoOIQ^j8\KPS&i$2T#o0gL>f!l#0l#e?
%6\o.t^U*V7)?DQVA7TJ067Z3n&9At->nc`7i5s?gb_F.L,s)B6i<Ts#(u@6h]Pql%Oodh`,'T?KD_OUqjq#+%VU-)V,I.MDEp1HF
%`O]jE:KOtF(-i/nF!j7gmW*nm5U*eY8cbAk!6,r=Joe;a(T8Zte2\,)\=Z_*2j-&99IapRjKJoh7An\AM!ug:f:\3AJ9>,m/=X(7
%3m!U`#'f'S@r29qW^LRcl=;%ka9Wba6[!/s?;)L>YgcFU\!7"$JHAa,)9I42,(thLB$.ts,u[lpls\G=GQq3`+c._`^/^m\i$Cq:
%YTh%Ak<iP#Rc?b)\.CJf9`Gf5b.tY%*tncfWR5'V`@U@J!BeaF9rFdq[1K5Fg'biuTi?8]'D3YSWRN6_IFCbc-p@7Re'Dc;P,'h;
%)mlV-WbBS"70c1Re_G;9UrnR)_P%pBG+]FE\@!g63.9,E6s<V!=qKU)+Ea4@?47W8)_q5&i7B<k,,?dB@Or;80-l_5d:r<8Dp3a)
%5^_."Vta,J(^J;J,g0)d<DYNiiBXIS/r3_@DBnD.HO2#u,\<GW81De_@I^VdK1)k_a_d,]<2n)miC:!SAf-?B:Q+[H)"bm05Y&/G
%Chq?H[72F[1#`'fe4:["a@=6:a@K(p2AS1<nZ;d7[W:!$c`"mkOTK%=ZI@ID`5j6oCmp@="#7U"<batf_.C`6D$aJ#M,a]9%PQcD
%/L?Wd,%O,6=_?YsODI[CU\(jo+D?/'!=%C9=^P@tS7$`&^"aAeQ\IcEM=.,>WGj(JFV571klapq8TmUa6^IB',?T=-l[UCc$6<+<
%AKjMG/O267*?)q4F<`5n;kFB7,7)EjE88i&c'1R>Wn.Z+P2T8n7DZup$WBr1UH/](&b8a<R!!0gAW!'j]&#Es5`hgs!Cr##"Dl:A
%[kMNZekO#QV@Us,dEW).&+cuDgA%6J'`hEg4=@0N2akNRUsKH7/2KL0=k10FkV'38Fk5i1%3^UkQHbft?4>M;@N8KNbS+PO-QK-\
%OqDAkVU_,7GSFm-*A&0V20J$A6i9ANWKL5%$&)V1Te1M/K\mDEGiqbW1q+bE%W6_r#/IMi=-kKQPR'E4,@n$kI1,jQ^!D=:JoqLY
%bB<sV"p/$$b<*_:&Z85fnhl4G1^:"EOZ5"=T7SJG?n@M=&V)2_Y#CR@)Yk+/?O+eB0-T=CIKQKYlu44Cr\nPBL>ca?-/k[o]VI`%
%iA)O<;'b[mUA]cF&Xg1!eYI9kQ>=r?ndUieI3DlfQ=a<AVkfQ:U<3"S?nMM=JWQC>'IJm5X#n"WF>ODrpupZYAR*5Ja:SJC%"K>E
%F5CB<U>?Z<.dX3,0IK4EL9N7@fH[<0D13(%r0k'.m[hbS=fmX50-(^O;7(ao.7G#iP5WX`'l#!maXMgW<:Zs9ElJBa0e=I"[Cl?V
%V]Z#+RBnJI0nL7n<0*rr&0jLtm98)u[=qYC7_Y.P-/OjU_$oqe/&%hN1T72hQU9'@^n2F%l>^2"IotUjDRt11GD(RZ(PJ]u(#pH&
%8Gt7ea^[#18[a?)%fX.LHB(+^-ec'sOb`^$;r*R]g68gb<J!>c'H4:4%JfOU1Ipfa_N0J2RUB&iNs?o[.a:T3Ne^QBD*h$Ef+Q'@
%XcVR3H@p&f7?di[=-X]M&s("lR.48r9&@k1N7[]dGg-R3T(iq(:PFR2a2f3f;W1cIDJ"S/YC9(e_W10^2,(rB5cC+;<$NGHFBp?s
%PQhY,>3++m=n$*#VlhD`K+[3,gN2:m7QQ]8%QX#tq/W-?.27%&*^_U+QiSjTGu5m',KqgD.#%\][mC(EO6H&*Q?_F=m!"R0\ZmNs
%6WH49dtZY%;@FTroc;_q_5^P'n*"l_Aqg&@%Pq[D@RQ8j+YYMVmiA)8r<hjr*_?Q?.drpZ>th0lM"f1;%RdJE_L#p'%NCl9_L#ol
%5O<g-_L'lq!WT:/GL2?q]H4?7[8t^W.d:5SV4Or4hP&eYj?l;S],#1=nAIqD7s$*5DNsT"[j9JHNTokMV*KlIA\5hp."RM_OPQ%$
%9H3CC`E:*6)ckq/"-"N&^m40pgR<5:,Gr'_KnK^f(8<m#.`;(Dkft:Z$.jMI\hf.MgNLASQS7EWeM1OE6\>uI&V]J0dt)Ulb&fS(
%%%6NOCfAZ%a,_H@G@@^3VNmD61"Dfqa=!o/q?P,jJCRf4mX!!2lqYJ%JJYaV[Y</4b'%EJ'?n)]OR3NUTcbt0G6XA/ZbE?LK1%I;
%7W`kM\<'\;8p=nREhD+oh&XF#0i[B)$pY>.N'6'h+kJlVkD"A.#6%DOmjm99:mP5,;>KX1SqM3Y1#3iMT00+.$Jc_1U4aMmnD+uQ
%BT\'gaEIlV.3[_M\iU6YJ]`.k+#4RXb]X5A-3C)G\iU"5.)nJAFE`Hc^:[Z#h45^'!M$NNm`s`_K*9OUh45]RU^93?SLG*iQ0o-F
%<r)31[QB^^'1]d@h%A1qm"@a74%&-rW0kGF7s$\QfG1hVeqeilA'B+O0InnU/(pI:b:kq8Q0o,*=2N^QkjEus-53(pGD)V^+ng#%
%KT8F5m?m=eOE_i9dY7,73+D9C'tQKEr).0R\i\rZLo&PU6/ojH0Vl=e,_9\t:NsjHZh5hbGGm-7^5]fC6%.nO=111W+d0l]`-+X=
%$;sSHgE!O6)([4QG9X;(L$h^SFJp_G?/J\V]9AT$OtK^l<bt';06DDd%gok<oQ238m73t0!AisS(jsPNa"^%:/)-V'Y_,>=b'&Q.
%8R0Xf[QEh1_)5<&44M#9ICQT==lNr-'H474+VS!`gP,#)=<%rM.Vs<pDQ)d>Cj1D`10n[B[Q@kO1;16&h$KHZ\&rka0M,^!e+t[^
%\;?!HYh^0tm"Dl8GA!FE?XBG<K>_k+f@/OnQGV#**R`aENCsNe$Jc^gbQsdtU:ULQKA_+n\iZ&4_*W@ts)^YQ#9X<2.kGdd5\lR>
%=J<?ZXqe>#&`"HAZS651\i]+=;TXm^mVmK7EN[aG).JE!Y,AlfKE_nQ$Jh8H]0jDnL]iKsKS<PR\iWG/e#MonnMu>U$JulL.ABb$
%q<i4I#uG<o]//:ZYH.6M)6[:f@q$TK6DbTG^,sUc$bZo)SKXYK@oiBmT`3(3<r)0&<6K;(n_G)DmZYbonD1qIEQj:kI!5cA\C7)D
%I!5j.,hKBY!CoE1.7:C&grPm\<OhI9&SO$ZJC&25P8]fCe"+ieV4Ql\$m8$[#X!=8l!gqK1j<2C0(pi?0F5>U3UU?)4EX#K4/C)o
%Unoj%U#qX$:PI^:`Zcq+8,RN9RBS<Vd+armHjfF5Np,jQB#8tm[tDV\DnOHORAOf#&\T4'Nd%KiDeBVJ&Fst;[t?rebX_;KQk78&
%$bIGG%MFC0E]_u3b)FfUgAu4).:/:p/sO_0+h([f`o#nrH055igi[;INOeFa'pFfb1>0Lf'NX=%Ou1.+6l(P@'HE5TKN(\L2YF_(
%nk3#9%ghOjMU[pW(`%gQ#$b/._MgSs!oomc<6Yq[6%S>d@]c9s5G\0[5UQl$KGEd?m>/)](eRb>4%i<]XeMNZK-WsQZ](:=#hq2o
%[Bg9("k+.>&^hIVA5$eEHaDa@<J^$=7jaHpL"HmDCN)s<)A:d:r0\ZSb%h65,*34Ym7aFrMNukT`R(LF[53M*Hd$8\:F:ouA[Z*?
%@Yb3"Y*4oX@IAs)NeMU1pn$/6&=Sjt:TuZqF_<[[FT*DROgW)\fZp^4i[-.[SRHarXmk$^#,)n+<5]>Og.Zl2n_2qfg?"UO%MoBo
%j=\)gL3*YQY41/]_XkS2Y;J_&3$ceOnCea,/&\%1Ng9iB]LlrE:u+5GDM?ZePUui,CM/I-OLh%7c@eZN-qCXf&C^ANC$d%b4gdGT
%*@(]f0VYt-BgG"I8o"Zg(>(%;SK[u0f8aVfpei.AL"=O'MIu2^XW?ae%C7Ib*@+)[b`p\=fX7+40s-uIUK]4@UDOVA0*OFL[=bZ9
%nbgOE7pUs<XNG8_]7L2U@p1r]\EY^>ZuuWj"@fXlM1H%kfD'6URVNff?`U8OO9ch$@C7o0KhZ`EeW):/,>VaUUX_a0W5<:^Lf%qg
%8F=c&8SKWLG(O&DOO]HB%Urid/u3YY5Jse-UiqtZHF)g,m7\f=0;Nd$n[&"oP1n;6i0nhCe./pk\;CZn*KIBWOE42hm0r7<dgDun
%Uu$crd`tr-EV596L&e;%X>&?G,$7@m1YUgb:"uJ8d1.16KLKe"BLad7F()GNKLG$Xd>jC8V\MZ_R+8<=RWA7m%%?lXrY[KF6-Km^
%V6i$R^&4/Dc@CqBfg[2Y42V%e$pCF-Y+I8kX.4?\#,mVn:-4++`0/`ra;EdmP]>!rn'Yo)gkaAgQNP@".?o"q43>+9P]hcmS^FN8
%g>R@A:R_Ba*B(;1b28T9%Uu,&/@9TI#LOt:4B[')8q^Di6u*%4L6n1V%ME260=5m*AS/_h`+t.3-GF``[6qu:"[D.Wj7UK/q?-b*
%=Ct/YNUkes/HY*pB^IJRSS+[Xdb7Pe&r<a<g6kcHg-]%*8A!Mr4ft9b%XV)8*Y&TNN_&QAe-TESUiqFCB/9"5e..6Po7JNl*Be&2
%)D.b.L7,^%Y)q?<A`&RWZ&m[JI"c9S6u$@4TuegdG5/$^gD*aNGk"<I4D)"=="F6?db4`@5b)hJfM75*Cfhjh1TeN&<an.b(uX[[
%M="\hpa3L*YoW1o89J$jmGRFHK!I^Z8%o;HjGeu_=Gt"+YX3/]=6)N8<f$/,#UBLQ+grU;7F4(VQFuai1cRtCFtgEWJas/Q*S`Y#
%MlO^=XN`-Qpk[Q4Q2J:B=(48$ULHK[=!>#Y/=tCJ=&3W;mh>ZKL"?f'kN&\B`-14(8DmVj&_fT&*p^[ZB*bE4q45S@,?.B0@>3Bp
%L9UETB=9UTKtGtngDPV7_/^JLgPHT&LipjV7g]L$lOgHDTlA+9?C:-D(8N%N0\[1g4DA\H7E9qJd?=I60\\l[FI^Ki-Y;mkrsbC`
%/B]7l!6T+J?jG24NLB0iP@1b0<(mi3*C%"egMudUO#pgZ,K31>;U91"@X"uE&[NM#a1Q1ccYQ)STqHOrJcq*q#l4*^b]ZAs,(<p.
%[Nj'6a]f.Z*Kc;Vq'!'bBc+o;>,^gjX$\f=_JP(sLdGT2jL/R3>A&:t4"PQkB,je'Odh$q;lK(OP$Ce"a.J6"88UjF*s!E_C-//O
%$"qkOg(*,.'R7c:L[9(jqCKj6//",XgQ:(uZQZoc0\ZoA8DEg]G'F4<DG4l%FS88>a$OU_Qh!/u[6sf'Cl/h.*NRS$rY/[#_JRaB
%?\n*j1rX/G1#!;ZPo-9MfoFA;8kE<h5-^9iHR-gY]P/,_4AI`:UfR*EH>5OPJ?jPlWU35h_kaG%D+B`jVH&\Um>0In=JQ+ALnM)U
%N)am[TuZHR$Fq0B:fq4+amFar.h1_0<rE*/GspN"L5nN*]S2C0m>/0h?5IoL),tE`V72(`FK(XjAWr70LrjLfh2W1=[/CBE*JoT.
%-9Is2,HHMDe1&'OM0IZO$I^D5O6i#A]cHRiSbh`@Y)TKsD?6TC>OUhT&*bC9\'#lakPTforL<]`c^2tc,mj\Vhg]Wgq,Qk1:%$Mp
%-Rq>erg;Rupm2LUpu3%gXd+At^4,\MASpb.0:'@(oP]Yjq;[7TimSE&BGTM(o&0gl55`2I5(/.")PPJ]I.o/jp4)\+r[5m<=nou!
%MuWYBB(8"`m^oYer8:.u:Fs=M\>Xn0D8j*YB,#VS]XQ&RlY!!$o%u(i@elDh*`S3]$WdR'?e`Ep,WQ>_cqs,X!'U\FO9Pmn_ZAa+
%oXOJ3`HRqlq%EYi-s2V,0DoGD,9%kVpm%INH2YkCTCe:mZ.bGb2napeTGua^ndTL\s-d5C99ICnriU#\YG:WFR'oo:Pa,_7^/Aq-
%`Y"JtIDd>UMm48>hk7pf=m9DJ,-3@YgX>X[Xe8/])Z<`O(I1?PgKa^2OJJhfQV/,WM?5f=/@b!BL"c;Igc2(SL='J()`+a2#4[M7
%Dl@^TL*4RG]c8Uk2s8X9Z+9sUWK@a7p;fSLc`$ENn?.1uQcd.PO&<H:$n03.iU[V(;EUA/3mf-mD^6<P9J:nMa0\b>\FqX,f8hXq
%NV%6/0(.nU92asEokuB$InZ-2I8&kTgM""ho$Z$o<On<,"MVM^1Kco]E4#JuW9ib@k>hG_qu6&NQR<Tmk6m0@!>]Qqo5?i99QSqp
%iM^5G;!h<rSI>3kIiN89od<0,P^dRe+cVL,'qMPCs*W"nZi&p?+8i#dOo%ut=X/BO:Z@BmAMfKsCTN><j\Ag;,boGR_'6'Yp]#p6
%"3^/-Dl&7jg3/W5\(8"12mj*6`&)@97Ip*NpYcA-Q5M6?J,Zn<10Odtkt8i2N;_WTC>LWWqUXWd;$?>(LT+?DXt#1sF;:oB*?$X<
%qL?'nb=AT8$32#mfQIjDB\SF_Yh!u[pMCFRnF,C%Dq-$"@[WZSrpcKXq!2;4c>uo+Idh@U1JI7u^\dr^(K\qLr:APjJ'1')ZM<Wj
%([%.\+.qU)]KZ5Oc->f:c0]?&?_=D`F8GIor;$"`Xoik;n_Ys;qL?H`h#."`aaa5eq8;,K0mr'FPOga0bcb4lJMQ=#q:37&fBf4>
%H*'m+`%PcLDdH3&Ld&<*SU%b.qsidmK\hpuGL`65Sb^ljIf*u*?+BaiJ!Quka&d13TBB!4^=r:kK-%_aG5qI$g!/ghI2b>_X'U8O
%\*lOEJ+`BnHZOQ.cCRhq'd!5#ZnL8pSTsbgqM.#mbKJArm:.<S\ofiEj#cLe]tGMSD_Aad]fGn63G$/>+5U"i0!E""3P.<-VU>]T
%Hd1`f4Zf:c\'`Yd;k$9O\@lB:S@i2-ja-aK2gMAt3MTZIhc8jD]l*;op%%dFo-m17H#TL`g%N\QD;T`Q`a=1AS'i.$o@lca-^/Ro
%H2Eh2]ina7gg",\R$@TtrEa&JQeQWBkUaVM]B[Hr=)Y6;Q[c\4H1gapF@qT@F_Kt8jlt=7X/jib2q,4Y"+:>)YM2;"j3O#E(8&fP
%\NRM%bZD?'?!d,&DP+(PI_Nt<\3A"NQ1HZ3c<``$bM7bRSM,']Fd\`W;jm)po3H7JbKY7Aq(=V`j`5:2fZ.s#o8i,o2lSS<F.8Z-
%_"R[iQZ"q*bFb-ahn2'sIeCl(\gdpnYCH:n]^4rakOm*kc^$efC%h.O$c2?&?1mN=o/GE!WWT\us*F7up$8rJbN&!'gMa]L_K'ue
%jiDka__ZL/+/W`Ek;uZ/e$d<RCTjcT04$;MhQe(1GcuV=^)c8e2pI"Sjjiqoc2#KSTE"TLl>h/1ARa5?Z85-rHN0RC?,"$5\PrP)
%TBrS-'/Ce=^U\f5Ek;22o]1CW6[/J'Y53:$)ZeA\:Tr'IY5eHeQeO1C,6R/]Bml6/AtApj\q+/VjdU,aj`aPbqkd*Z4gJcKB[m'Q
%0GOQ!_s=Oper;ie\3((]H85A%^IoO+X/iSMRqL4J.=ZZRchKs?^1XI;&(9ZeF<Q2s3]csu1,/N3R?,Epl(bjZ3VH/L9Xki8j<dP)
%*no/mRW,Y4[&osq5+)<:__rmfW"4?\DjWa`dC;F.:uS!NTA@/m=Pc`._]I=LG__Jnmn^n-N0j"sMLY6Jak9^EbBu8jjsBdTT&)iV
%l1fXOrSnM8H'$V&oSrQ(kMnkC@a=PT06b[:S<?&03>jVcq/#BAcEho8K\l'@P0\JR[.3eRlMUF'\bt=k;4kn#a(12We?!#L4?n0K
%AVSB\]:.O<BBLX@@X/3$c[8usAeY%1/m#?,mE9qDNsE!MYHD6G]K3h(EIne0LY%VjNU=CtHOS'_JP*0?[4elWqOMN%O!#Nf;Vg!>
%Dsn#&QG_D54/gSPW""3k=g4*e@Ga#`,HU=*OPDlupM8[[Uq2&-M1;2KrBEud]c>841SHU[Ept&.5f'lkUS0$%R_$8gSGc$;CB*lV
%*ecK@_h;TD38/+6BC;LrFq`Am&DV[0o&T@^H2c(ZI!IctB=.Z%?1m[P$,O$]pM^!X4$ILF4+$qkr8_sFZ+RaFr8cBo*]_K>r+E;.
%7l1#%m;pE7:,,SgK6s^gp0Fe-SE/fZ"FUg?HM>;[TA&7o;*+apHmg$0'K)5L^MTt;[sjf'(]1qsVc58j,i6QEYKl+nq?`^<o][e<
%EfdH-/uBm9nZcBEjb0VG\XIQ;?L=m+br/42k^N[^dhKQd4L_Z]R*_,];o!P:WEjZ,`Pa%1(MDpoe+3+UGLr8SZchIPKY7<5POm8L
%YGS+.%j'P,V_5/*-d9mCW.j-A-0JdjWStb,lIO)Q0.4M0fL,H?]fEWpGhC0&]B[fIHY5<JjlKjR&%>?gq"\3<np3n-_M%nOIsuQ^
%p@G)_eOOh0ZT,KX]9osVrq'#on-FQtT!WPcb$J?":*3C]b*:0kMYlC`1JoJn_nL&J8!o,g"Xe4`7FAj:8Lhk-AdpkN9XuQM3cc]>
%c[k8R9JA%/,St%?U>#WPPXf-mS3EfTPUW/kF&D()Pi(N.H'GifjupdSRA<7E?*->k>a3^XP`%;n1P]F:+*oQ^Uq,.PXo;FD;,/33
%0$9F(*6PG!cR@$]k1!(nb<'Bs?-_P?KBGtOn=""LnA$I_B-JDh.sC^lNs`Yke%^>2))5R6^Ln))+eE%>4FT*7ccuR7*Zb(I*DpE\
%]lk4*(2(<=@0gJY2X@bRY8r:&qt"rrbi[X>1=qhZe6/is>4):>C9t2=W/S,eX3Fi8^"-r9LsYlXLi;b:OA$LCh\qY@VuYbgNUFN?
%d_(Pd%)KT9k%uqY1SIs)$/(-_l)uH\,S$F%Pr89l:^_\op93TR=6CsGI_UN(a*h18B:$r20?u2ZF&e5UTjB<HDEaPC\M8>P=&]'R
%YY`Q.^)R+ib4Y>bC+E].Tn/oMIK_]qgH.3DU!-mm&(%0-b_m>FARj>H81;*tjU:[:D&+JZs(rPIs*p43SH&%*q&^@_;rb0q)ou:r
%?hV`$H<cth^V`Ka2u1"JLrKrPM18]QhT%JP*F4`_pR'.\QcMtX1&J,G:TlBW?+nPXn1W[8do4"YTC#Mg4>"6.81cO3:\<,E'Umuk
%i1Z]e6RMG6><bW+0`0[]D/lgX+8cVnrs=+@U2th<TuoO/5.c)cZ+QKFJfN_538*BMqm5g1LWVoROUhT/pa?Wo6OZB<EGc:6)/-2F
%S)_8)r-(Bc^H2E:gpa[Ra+*:Imi;@UVp<Ls(j#V!NrRDphfl=H&HT>b-PJ)R3TdrO%\PuZQcq2A3T`EDI.(lf:L./]9S>_S4h\0P
%`.SN:fo$Yb?8%pW?"VRJElu[1qo,^apZqDJr9BX']6Jeuj3*qi^lq^4MGEBol48&M2,$j.Dm!GXF(sp>*'_1#\o6J%>29IFkYR`'
%UY/!mHcYor6hX(7@V65)llhi]AG<M0-5_*9RquTdG4$[jMuJn^YF!GU:U67qr$3B&B0T^No(1Pbq=<[3lfI_6Y-(PQ\&Pggs4K#b
%iHBf7oAkDI0&GB"UE(=+_t)lk<ahNFS`P.rgI2(pi7T-_Bg+W=Q2MSBjA'bp5*LoE1KE"]\a65!cX/8"o,3&VkC:1f(;qKmb5+nW
%AmS9c#N]aii'1EFamKYdD:dF\i'!O95%jW;cFQmH_+nc1p._O3NgJGh1-8fSa33goR2mrej5p"tG2[$Fa,>7Pk^T!@0Dg,!SK0A-
%E4kO4.mBOeT=o4eIA<.,KD$EN;P8le;bDD7/,JUOfVN1@Cp8aF+:%cR2DGBr?j<+QO$:cq'0GL3oF/A1591i-b%!rMqTW(hB3SkJ
%oAR4"#Ksh'N\_<sIN4A('%7mDNd&-RmJR&GrBNB1ZZ/HBH<^_LGF6u"I;)/Xg=7s,DfCTJH$SuYlBdp7k-7qJ:I(J>X7H#),WPR>
%p'F-LcR1E3ntB>@XXS\NFq0K-n?78t*db*(Y$Sbc]tD1!\6_@kW0.[.c[X&#^5mJgGF@:-Go>8DR<blEg%,[?dG<0@R.,mc=6L?f
%@tuCdn]c_^r,VLY;EgX8\$OAi.@kapS<h>u+5Bk?VCf#$#2p'Z_=u380nV&B1-\6ur>5c]V`Aud7f*Jh(fU8bq_@g<VL*!'IeI9q
%IZ/]ERG!WUq_8T!O7E5)cu)T*AWT(Kqq:3sVnVMP(ZP;Po]G64MlX05\`NCo><>fRhco`Hb;U5Ek'm=mWSDann?+fpH1fG,g!/b>
%n)<IGNT\#=4.k$3dF5_m>]V_&ETi1Af?:p60E:i[H$MI4k-jjYY53<&_39!q0[EZYo@VUm@g3j?Z4C;I?X6@1<qt>8H8:&rjQ:4"
%=a%3b?HceK>O:8c/85;]RaA0,#aR<d$C\5_2KiqnQ*`X9cWsq2*m4$Em@3D`hONaDFI5h>)?"*':LT%?CQkn-#NDbs>ERP(.%Ob8
%s5EIr]pd!+mPUt"#F"R5V)*1uf7&AcH:-cjD)_smO_<q@2RDbs4Rj't=Ct(9p2*SFn]g+e`++-W^9!n$/iV\LG/%hTgY@1GRr<B>
%D/R)4X`r`P]Zj0T+s6]!mLa&39`S4]mrSAKT:7NGo6"rbcHXtOq)UHAkN;*c7o.?=\BorMFJ52RR=i&s9j;#sQ#8ghFT6W/p&)kr
%P:=QKA&$>Q2U[0`2hN!0@J;&a'+="7KEgl&E@#4EbSaLA!-'<.fX]%t]^?"I@lM]so5)JS_=GA@E.2j(djGM8?+i9Z4hLO_h^<[V
%?f1d-5/g0scg>K':#qF#R!gfr5DQP(rdoiJOLs`(GrOUiph&ucS5VAjC`Vk=X1]k,j3u&FgE&LbSueB!:/<2S!i)Z;[Ep8m9$&r_
%?<r_jI*18XobY7*h(LE/+VC4ph>*8Dl,I-:=+@HTr_:HZH2Zn%`Q@@blCo7_5$q]I;`?&PdN6WC1nA=SOZU48S$;W^rqGd=c(m$s
%I<&C&)^jQ1/^O%G-G$eocgIf+<73kDjEW0Fl*E1;VU)-Y1B7!.+$q:C9FntW[,r^:pHkDHkC:1V\m/"9I+EeQa+dmqfK32YlT^e3
%]@jQ<%o'YtOX`RpT&nfXe_)?3#bu(AM=1=0^/9;tcplEXF5]?l"Q__93qF4M41jBmC*jpJ5A^KK),:AWg>a.!:YVHYotg!t%o_V!
%>Ah<V%t;:j0LbU4ZpVfZEd`-&nmXTcgAdg@aQX2jrBD;E>8$N&g!*SGB3Y<ioAR4"#Ksh'N`225HoUQ7>+,uB6b&d/^]?Io5afs<
%_`o(Nd=XQF%IU:Eo.[c9E9?1H^Z$A;`8dTMIY<MF1Y:BT5nZ=mK\9SGHOe\?4)eROZY8tqS,QA5\'H#n3+]Ra#7k5tmetOUEKZf\
%J?j/+LXoi(Y@#$jUZm<:"Nu'SJ(nN$\!hPH#2`pEpiuRk\6\NrK?)&X1;Ui^H]X16Nr^QeiOhiGl->X1;a'J"GQ.\r9K]oA\p%:q
%#7r,jKDi@T.KQ4G9[L80&e4W?P6gS72g`<hbS56mK=%P3'/cJPnBc@+_&Lmb9jrPG@X7p=Zg/Y.5PArKm:&C)j6#EXoAtHqofnJ.
%hUQH6,OXH+[nCT/QT(8/?QZ'^3D,3A0e]lN=_<.Hb[kBuATgVFm!,GM+hZe78)W.fPKVQ2VD'IciL57<Y)bX\)XP/hj)0V76.jR?
%8\;C+B@k2$fjW%XVs!77%Hh$Kl^VG[0I`:uoEBFa62JKsIl#@DJ%g;:acInY&:OSte`BlC'ggD4;>KbQa0WtJ^O5gm(U$Fmr5W`)
%^%gRO4F^"qnuH+5c^$5%rqKp.q"2H7R`0KcI/(OIo&"'L-2sfQs*XPkrq:j5TDg4]IT`%MnbM1Zrju;qcbKJIlOQ4)&nC3eJrT/l
%$cX8G+b[f<j]su`]/U?dM92-[7\7$TO_LR0$[juAGk)OX%-5eWFk3J0Ygnt1X+N&R68fDHcV-k[&,UN;X1`KE#m5JQ]n9qoSo#<u
%V]UA,qu_[Lrc@uMlfb+Y?Xh$I07LPtH%)&2]7nMMrfcKCBhW%(U,d7f[@Kb#eWFbghs"CeruU@&FnWnchXU&1b$XcK3b.Z]\RV`t
%MrQo30CT.ca.1q7_Z]/cPAU+B(P2tgK5"L.(\igA3W)esL8JbVLFtIkIu$#Y?l%XjXNYsI10tc.`-lNH+I>A&Fi<n/g9Il@psV"X
%ToQY'f8Q0CK,Z_.pn3>R6DA>@ki$'@ok"HGd5MKpK+IC>*HZ.H*-)F:_*id]3_jBK:0fodH*@No=mtI[m`=P\*Xc&`Z-$oEC0MpP
%UGcoCVK$XoEJinW%=*A]*qj;8Zb:<hY1!.O&";mt[UC/IDAf'Z>dFD'pCBL`]Bl*WSq$N$>^Z1a`HV?m=[oOdRB!FFB#m'a[N8e@
%Nk4.0*V3["g.!I?[3;hgG^g*0n4.?P8RnHT,@s^5[``GW`[:FB022jaW4d'6qCs43d^DZJl-f@c]WPLqS;-sfc==,U`amU6/7.G3
%CeVUPD3C4>,O=sIUfh?ZXh3V8YX?IWNqZfB[VX=>Pms1;/:T[&:EE_U)lnVG8@.UqTdk&G)N=ZV=j*0:)D(3^'TQE*.4[^9[[gQ"
%JgSf;8smN/G+HH/QolKL^Gq9kf/?ZBdTX];njf7s?i=8:$RQBMJDSW<2`]nWs#/&08pO`PIQjX10oo,frOp78hs6qU!qpS>"Q&41
%K_JM)rc\cXF4?3[kk,t$q'buqcTf@"8Ok,to3@V@X*)!@Z4=3H$TU7UFFdq:4nN(%ZfkW2WQf'Ea7U>@%)r/+:KR6l3&8d!O'r<W
%V;fE[8ui:bKr8L52mI-g&#Z9Dki8Ou.mgC7=0..-gu'/FI(7.OA!=Gcp=;bB$/NR,E$"UN<,6"8mi(O?kA^??>.WK4:\C>-W9^tY
%f>mFR/IPgDq>BiK\AJ2AFEst3Om---O_ZI0c[JnnH*u^eBKX!g%rTH=nqkI1/rME<4Col!ZeBBJUqBX9_Hm.4St7<+=Y^F*IN.lK
%4-TO`F8th]O0ZX[n\)u,hs:5<b5Vu.Pa,nREP00gn9r$<gl/FCJ,$`T'-&ptiY;.E2j_i,Y@!m6=tVFP_tXldKDGHDf!E8s(q,o/
%P-n!dS+f9Q/m0.&o%A<E8(fa%H,QlTlslBA^oTAsNX$qOIBj,Y-[/'03\u4%V?b*u$XncIgl-Ld3hM@IYiJ.(G8OrD@4<RfgPS,6
%o'_b1r9qDj>g*lJBjrst9KcS5kc$_Vgu$+]K3=Pk]]mSYb=>Hp8+R8'`Fs3rDQ->\_D2dCflr;Mc?*?Y:J:&d-EA@%lT2N8f=%6p
%._1NjF`Y\Qg#>TensJTWo#,.p=`4:C?cZVtq4NJN`icXMlPu\43Ehf;)h&-b!L;*lGg&'EbJjLAD`s]g<f\2NV>b9$`m'89lCi7A
%f#UX/[iR3.m`XU?IGp+#S,,33,P#ItnpGNn"&Kd*/TMY_o"LZ3o":n*mp5t=B=HM?q*,lPAPGOo]s;ICKu4C7j!&9P7d[dP2e.j.
%kPY0$^=/.YXA!?nG\^4ph\b/&r,1)c+$I_YADRPs*4RAVO$>cjI<4rOeP2Z^;`3mC`lC6VCUh`ab$[Xpe;@D0i=Ga1SBoWYXt_p!
%oqP8?/^(A5b[.C+5Ouf5/t4=$DRB>sD/tt$\$Jf#Y7^s5qKL)1kT1!%+XbL\R5DLGNpj[[NA6F4UR.J/\.76G-6KU9\ZI)gnaZ/"
%eN&VEnC?4,QKMU,Y?rhVDo=7$InhVgT<B1Fn'op\0+eHfC&+efQd;OV;!%_GaS#>uf?9A!W<'k#ZPiMfaj&*$qQg"\r(QUJo18oS
%qX"%XX3K;RqC,2B@f6)bgZ!qb_tRU<RBMrAT"VkKk"H5UC^,<dc1/^OqW@.THACf_<5%2d-.SKpahdcJS(D;NZYsjW/^D)Lfsga*
%q%i'u[c1OcS",CNMfUTnP&i?oEA#u8p:)L=U?R,Nmp]0J+#ii(H5FKT]o.)amfr7?QM68\0i[UNHm%mPFhcJ=kdPdQMt^`B?8R#e
%?>T&f??G"&pYoj/+3qQ%?$5PGRkM;:k&UY!U3cWO\+uro/iLCed;JM-:4DU#eCW-Z(u+=\9XAg1?CZr@-Kei"3u;Pmir(nS\OT]H
%+?`jsc9Gh0I+OiRn,2a%8IV,CL53t)kr<uQj?IOJ&"cY]]K"NU9&$ui%BZrjnn#2Y't6p*@(KlI:$$(3pRE=o?!0<o&VeYOhm[lF
%Ro#^#Q<)[F/hb&>&"@qNk_[_cL$#c`@B?GTWF_FsVbB8p:5d`G=dNY#9q15<g!hcX2N/)-k@e@/*aN_QFtOQb1DJ)rjdd51Z-B&s
%a;;YA:f5fgSK*L+AJ7=YDm?3EQ)D(i?H34b1QVDtb/7e<o5;`qa"g<d\EAh^h6\ZXa(Uf[mo80$4;o1]@[EcqD%r]03ibbRC3V_u
%aj-2lb6le,2JC:DQp;M2(hHpe-gt'&[upA1_+`;no"[,AS&=FTjK>%JU=Mc(NQ-8BY.!:%bX1bmRJM`=1HKZX25XVm>M@9R_T5Xt
%<L@-pb-"C>lYZ>0g*E/fZ+aJ#=*E:^DDSF74QaUUT')q+q)mNl--nM0g\=2Y)])e\cKh9!'s#C;7Z+*+Is`<oNR,IQNZCu%k*+L^
%^:dfgn`3D+emZ>@rB,*2)cJm<<?-uLQ/7u=27i(<*^.ieEMIpVI+DLnj:NR&Wc=3le6MB36e*3^9qKtIED=tgm6L*_[dRV#,n]_G
%`99,+>\_FX]RGe$akOL%qQO\p4FnG(aL6\-,Sh1fBUO73f6!?rm:oc`.s`sT\nrr,32iuTma=#N&,!P<I%n.+@7d"*[9RfThSd]3
%-h<'OZ<?a)P$O>a=a:2(5fVL2J:mDj9l!X.)pk8b=a?jD]_VUp5%^Q_CWZqW?:8Wh-n4RfQ1t%9I(C]92aqg^A\O97?a`M28JLj6
%c;i]^Tt@\f&4CZ[,<a*=nWK/kb!KE*C*V[W3%_VMXLXMN@RNe!I@+s6;(&+Nf-0P_%1cke"5[)''s$IP=JhrT4?@0kS$\)'9L1ic
%jtZ)"k/)e-nk<2-"hWEoec*C%/<PcuD9q0tpGY3SZ^dd(F*(lO:<_+B`Hr>jLmt+P`Sq_'-fUHU7*/LiM!0NL&tL]e':if\(S04<
%l!KD_Ud9*s/Q%,pQKU_@K+i-$E+8BRO!h\c2)qk4`H4>\$1jX='5gH^,&R`_cpZ],E5HdB#u7j+K+mB5K+kLX$/2jV#s@pK6j[<E
%SD[:TR)!R":;GN/k_/1)d>>KMpNZ7U)4h+^GbUbH'DE-28=RI04;d5M`#PAYfA(#o,tp2.2MEWL`K/!MeU+<O2K4qnZ(EVbcQ"mc
%>>lLt=[dN\MmTrg@G5p69qM)QlYO2aIefScAE\T7"8$)C1,kN=><_*fcB=+FKJJjR3ZOT60s<[@?qSTF72F'+0eM?I)p:AAWPuD)
%O;luiP.JH"e2ZMdB[r!b/%S<kgMWR_8g1sZGeiqMY$[L@A#Goo`ei:TQf4_]s!FSIB`)"5S5A'?HrJncOI@F:[6@nm3M*"FEVY:5
%C9lJ66U)ZPaCcgOiM2'LZ;hb%g'j<[DFn3]C;As4Z0am,fNkj'rU]!HKi2qfDb]b]p\Et^_ce)Qn]56nDp-$>DIsaKlCjj$o'qC!
%6boCX:Z0VirjT")Z+HR!NS\':p(O31M#*OJ/Gd$:-!1@W;eH5JWHG6-/N!7/&t@'?-bVOV*-ep&p"LiJ)jLlf(G^Ogc[+5%K@XE9
%,p"98>ks3G"Qhk"=OkE(I9%0[1V;WDh:h;emHs3*Kf(a#aX.lUgO#t&#\KlnX5&]?nZdUE+0Wgkj#W;M358OQ9sQt,8*ksS(Yj(;
%]@MEJ`GO2@o3'H_&UK?FEWeCbF*(:'-tDKhb'M.?euZmuTJXUtK&0Q$RW*a_ObGop2)ICVB;<\Z8Zh0MMS#nHZh7<tES^`A=&n#k
%<Lf=gf,kX!W8a&R,hMjn9tR4QQR8ODg%`1Z3;66ZUtN3M<eo.795q.U^j9;ALT_8h:3!C:.=[(f@\%[DF`BU]@To8WdS0,O\Q=3D
%04]nt,-L++cFbV&-nCJ[X#aJX;*LJUH/"ta\d]6B%W0`dX0(!jPA:!=0pF\QJf)X3-X_m_W$'7F(s:>>9&(CP$"c>P&iTqiio^#-
%g^lZ3-<J&3nLi4Q9u3"uNh,rRm)3guS_3T3`D5FTcq,,A@3@ma:+L58\2eM+I<VI%aelSiQE\JcW!V3`NLIf16'JGs0ar[]X,AQq
%hes$n`6AmX\1(h6D$ZNIc1)F'/$6fa2MFf46q]E@9;Kgt?qK,d/*St19%N`Gs8+\D]a%1#:=r[g&P\7A%*CQ@Z-^PM^)pErfTMCO
%N0A&bPAH)=C^Q?89gOrP,tR#S"\Iu]%k9QI'QC-D87JoN.rGiYU`(B?b;\F8pdh!-H]F/o)Q.OY?rg=f'Zp(-Oe?+iqJ`o57na5M
%FJ05+h#4@q;r9(@&c@m0&_B3oj[QjB3)V!MUYn\E_3%%F7bV+X+g02Bb)L;&O1*g&U[9u7B[[/%Xkt*:M7/(,#'Cl.6Y+,RWS0n4
%![D-YE>0LtCnm`2]Y/b<D(+/k'&6S@gB_^$Kt6TYlX_#>?Fs+D&aVg'7BG/^(K'dF*#FGN_BNu@<2:f/%YGsgPdhVG8].4BTOst"
%6'4IX`p^:n,UAO2KgaptOGMd.'&c]r)A6acKOkea3@'cX"t*d_hB&2CFq>:#2)kV\n^`dm/0U/$pE>[2^\)j:>9tO-()dh=i/>3O
%8E=VV)dT(.4pllM11WnkLd?d^-j\81ZV<VskE]*?`^+D7J1b:/^=4]QF).5K0MWXUIdj(Zd\Yqkc'BDkL"Dpf*KKYd*2p?UGPq1.
%d.%goMJ@OU]\AE5*<#"CNdgRrVCb0MhYmTdE=/1j(b9ei,lMf[me)kh?>o<-QM*3Hn^]504h.<bTcL\>>JDY;[NZ5li#$[-go\/N
%e(Q<)MIUhiX*a[;'kti=Xg_YCMJJtI],';h>0Ip6YMFTDBTUdEIQ/3P?JSl2RG)_Zp7/+q3=C/Ye:+Keg,c2h7eM^;4_%Ik`^K23
%UO'qYSh[8>-Vo*/W1NUfIuc_Zkt0T&$'*6"b?CXB)7dgS-4gGVKK)@/kmS#UgkDV@$>N,tWG.4t7$`"+)-eZ.Vo>.f]H9>mqb'W7
%XY^ZN]FUGgBbSB33!0TlOSC`s]<8N2s+XF#G%Kk?68fiWm8r@O!Mj<UIko0P[Bb3N_Q5VYMZ[1ehbOgtq.s(!?n/\*k]Oif2#=X)
%Hs4u$P>j,n]hhfW9fHr82B,s]&F-`=bKXd/Sup(r[@L3f7NsjHH$VN"h:e$;WXJL+5&!2VF5@%)-o!6d:kP`M*a(Hk3FaHKB!YY_
%L(@OCH)dtPPBVW_Up59R?o@i0's/DZ=203``R,=bQf],:*AB*_2f8agYd`^MF?sGGCchTMCf47ZO$cp5'Wk2[2Oc11XT=KqFVWUk
%4*_8[*I;k1k)I_EJlsjpY7:*5Fs3J(d0;8H3B"nOiJ4Spr[r4gHo8%6BmItfAQb)+=Ptu]C!,6jlr)^dnkYf08M0f<,!7IUELn"#
%_hW4bQ!7POlp*Q.JmLS7fY5m%YL\KeF>QAf+0f^JM\Z&4UC;Opq4'4GK"GiN,7h90=WT)bdH8`LkA@2l*)%[ZY2ipJ]3ur8==kML
%QG@u;+VO,lW^nehUCsnn=@fcl9j76f0>L+?B!J<S]4QACjB(>7g-O?J8d@^"i3Gq4NT4/?NoQG!Ngn`g5'+.1lYc(^iom_")J,(;
%qeU(JfNP&ak=sNPlc5dM$cbUqOS@drIGU3(=B.9a\H?8W])-Ce:Nt^4_4$4M<``O1MGL^?kCgp@nZH(qS>nJ_ohD-ZI*Nsd`A\]h
%la+55%YD-BVL\TpD0dgAN?c/:6W:J&GC3&1ZjPfIU6j`fq2He&aN.GBgpAL>Wk;NC5YUMP=P>"66E_(tWb4c#LjO8I1mSs4,(*Q&
%*`Z7G=]+iX:8_MF0cNGVe(guIKZe51VUWs(lJV>Lf?Ui875m-,b<sfYr?ge*.QSqmDCj#,m<Y[3?]^O1\$+rR5ji37NaCmbs18&D
%7ArjA<eG&/KT]-#eo]qAU=o%IJPa+`3`fDZnn_<dX%thN+l`:a@b!oB"Z%ibA:?V9$YgPg<HaV],56snj`,UI&H5!2juHJW:@c,+
%39:6`"/7?WQrI&:9O2%7m*VpCEfA?N\Q[pD7e5*Gb?:)U_a]<aC\2c&r(4S1'qCKj-C@#oKl$%mg4HHD</&$aK;,X\9/Ige(YlTL
%D3/O`[m`]\W;bFK(L$,*TG@e'-fUfd=OVpYaL:(k(1A9,f_%Gf,&YBp)mu-ZBB-pSh1%a'SsJ4m]eK*i-eo=<^T;?s+<5jI5hpj,
%hs.FUCSPiP#&'*LTc7LL5'OXo#'0LQRr[4qj2sqpei.XeD<<s$?Jt+gZpqjOo23]?#)u_`b-\2-dgQ,qnEK%/4jnDXTl%3YWZ"&Q
%lE(c@DJ8h;$>=f[X;uD8>G<2Z]H0%U)oo9DI'sH+gsci37U<Lo`do0NI5X@R"Faq[g"<$](\L)OoBsbf#X9B,JT*HA"*m-1f\m:'
%R0PO%eHfg`l?)dX]Y\,X4#g=uERX31CJ43^QLPpuV7'nV]Q]W5k9n%46(sHE***80!Kl2\[F22Q"#`>tr.3b-@-R2-&$-2f*Qsc2
%b^lH#R#j>$p=(L1i4#")D+bgmHg/st;f#,G=KLnr"3MLk(MpR(o5@^7h84SM]5;i\mtL-eV[Ucu"*;W#S2.;R.0COTR!+lQON^$A
%MThmSI2\miE1RWRDr6^5i(M4C*\6^Sf&N`Joa4hulBp/UbjL=5B#*6>>CV^IP-!YrU%5>&XS(*hS&F%#PTh$qnF]4,EF#3&U6g]9
%gGT3cCI$,Eb*oJ6dc@glA;b$B_[VWYd#Q7_DJf2o9$8ceBi\"-h\`R7n5:BX1r,=%=UAZ07h87=`B(J^[..tp$^atVijBoJ]H=k`
%DjDd&V_@4jPdquLs#itq7ESktE_(YU\KYUf8=:u+B(sa??CK\CZ[6Dh89p./.C[+RZoX+JIj@sdLlkXOR(VL"I?M[!ef@bd"Xn3j
%??4EMGGZsX%i?aJint&H?u!Pgel'ZI81n?dqP5!_hCE8>aG6nUSlsij8u<Q5Kc6i$_"ocKhKd\%%1QHN]I)<1>uPc4+[e5Z#e_K;
%>#_boJmm<KHLV?K*0KjdXJE1FOoYp.kXJI(+>cj`s.f.7U'7,K0Vq\CimeXT*H9hgHu`<(Fm!_]>kc!ERhBoNr86R_5s%kR/1jW7
%eeG>2HuIlpRih?L<"7:-`W%j$jl6Y!P=VB?/"hHG.]FMJ:(9B:%BaJVKu@kZ>HZ)^XjcXkr3;hT/+:6mLJl7RI5;RP_Hrho`+;#T
%\A\[<1^UIOZCMaZiEcPsBh+[/pSk#*HdH1X&g)iTCQui'K-:JSP>ouC-<cq-2<h@8?KHGEMRrNp[%u%eJMBP?>h]^@2&/;3cAs'-
%JA*]'d*A$Dm3%CO%g'eS%5d!8eIiH)j'EXC_AEaDk$k<N=db,q;0$MA]0WW)jJ9L<.;.LqQFC!1`0-FW]MjgumunW5Z3X6!7VOd6
%g6IEq>V%@`NUUDpnkDde#Dk"%rcPC80k#1SWW/k"/q$Rn`<P/40]f8Nni/Xr#)(nmdOX?\.M?m3PRkt9_'q#h7.7LkTEF?UC!d\R
%?TDn]!k)`HX%%AMA>&f'>D+lOeFP"CH5QV`Wt35n#;\+E)f=,6:?l<YRLi\r5qtGub.P%YB5G\aNm;Ap@(sD,`<Pq><GIXo.$fS$
%^u"rhah$)i_V5La];RVAo7DWSl]r;n>C?9a-$s87AZ^Uc\Ei9iIFj;b<p@2n1jj[t_q6"o?^THg,$#63h\^,7H@"XXKitr7dW.N5
%GT??,Y*)O1_c!0ti23kun!GND1\*Q<RV3],na(sK>D7AcA')^lBjQh_X=]n_#h[\f\]a"HgV*``*7&KY0&h81@:W(U9)#WkZHuYS
%!=)qbVe'WV)-K_iVNuV<7SmK<lo'hVqn!io/ID]QmUKmgdUsCn8j(oh`9Piu1N3a\<@PdU8B!=)_P<cE&o>Y/0#po!<I??/!p+Z)
%iG!;2Q/ein(^5>Yd2Lq<[5G%h:'qg/D8iAu5,EQh6!p""Qk>EX(bMhf/0'@i535cQ"fgIAlM8prH$NE&ja:eDUE%:e.)L9V.d'b1
%E)mk<I"GX7$ZD0!:O)uOY+ADn\`'!qn)9@m#0Qb;1f#'g@c_up<@K6Q*Ns&)>/uj$8*Wu$V^U^A35Y>*YFR42*N#pb)j[$'+--#A
%_?F1[8l@gEYeo][V66CcGrl;Y-BB?6T0PR-Mh+dOVu-TtV^ekY.sFe8N;fd!76_3kg21?,L$4/dJ9T,bo*GnZ+GYT1C3HuWI"K[#
%g$pa1TlqWp9oJ9@&)2-F$W*O+_C&:--S2p_p5?nZ^/d[Ac"!cGS#n!s9'UgbU%45JZ(=dcSkoWF4GE]*:T3&tX2VegMrAdAYjM_i
%V6,3*R?HTI_9&1I=*p%m4u76'N#]H'E1\".`bj"[*&Ah[bfDLpEm0I^1F'raa>#JkN'iR\,KD$?jEN0q7urO>7lcBF<W6f'^&j_N
%ga4,MF,Mh8.jd6H$F+RPLt:>OgblMt,lSXD7HD>sj::M%jV&l@P"!$c^#N>N'=*Gkc"ZWmYSK0dT<p(t[NZf'RIol_P7QB8'Ad@+
%L,GUOJ)gfG#)5.qIEm&/oA/<1I.uLV1e;j531TnK\09hEpGa0Y_L!,;O3MR?Hd$^V31bSC49[gg$+)_QI1%I?gG7XSrn\)%mp"Y\
%$E118qg._fVg$@0pKKE0HgfE+jaH'8g0)RFF,-"STa0lM.IX$_HoM@19cnks-cg.D5]tNq:j/$)C@Z/l*DfsH]Ae@`)r_DL;#?UK
%hJPr1Ds)fJ3T5CA'F_*XMd:ml>J2Cp6V-;>a_6qAT_52C`cc3a_`2F2*e@JMb@T@fGteOXP:c>[0QGk'\,<BC\)VWm^f?DFP,mBW
%:(o(?D;2IAOC/t'SGc.r\te`L-F`B"gnp7^5=+.eo/?C_Df'9ZZr'"n5L912['Id,Cd=JsmeDH?6-E??&2`op?#D^0=ETk2[m)2`
%k\@B#+$'&ci&E6tDf0.5S9D>F=UYK&FA4r:J,Fc(kBg<iHHF+o,XjGh[7>ShGAH(^V'bO!;>]DJ8(^b'DVgAC!PXd6N8(,?$#AG;
%G1(!mW;-n+%r7rd-.T/Z534n<`hUaiUpsr@*juPB4-PE_c%F==+`"rf\P7nUWDmDg(FA-or]a8op-%`"A\9GrMmX"0ho3PI2iH:s
%d!G$D>K',WXBf,3-4]!nqtB*f]Ks9C,r`:4XPsrgWb3:m=d'@CMS!bYgmYWHik"^HT1\nb&q3Oi:(*u84kI+sBJa:!;El.bGuap3
%N7=f'\/4ud,PbI,Q/#7"K&?.'n$%g5>I++'[<t*1AXmESHpnRfG#/[.m`6V=\l*P3+_*eWii@(X$4RIXT"FodB=/a;3m>\/#hA,U
%CPjj?_ZkB+n"JmXj`b8G?YKbq-F=B:j=\i\R)^d/0=TMm,o'"`-?i\.F.:s..rq+]!&RF,O7P:*)XVf)3nEBPp%*!a!"Xf,iQW2E
%nfV#8n5]%1jP5's%W_(fNrsmtm8kS<`-*Z];gtN,)][7>+FhtcNRi*/Q[kMClgf&mrN">1<,mj,%fXD8JUGho&GLYC7A]]l<Bb03
%fA(4+17OEg%`Q.!2ar!*f"Qt-Us7mroA_dM[F+-RC#do\;]arPW3R:R2Tt-X_.FLH)_@CCQi.JU^2M,1Jtn+VY4H'eY1CKIq:bS%
%ecf<HX.RN@Q.ck_[P$QOnV3_1>3hrs+:b@?2PaUQP1m;Y-JNrC0&(fe%G0>VY)CPur&+:XU)U^IDU$l_E?Y/N:SljB:$la*rVtX0
%kOALV8>8EMX7J7dbJjKAqf.A%Rm[3sk^O*@^Ls6iS^\PBDMG`lU$cNk],BmOL:V^gOoH<aDN=Y`!S#q]6[*A<QM%L$543f%pN*]/
%:U*QXRCJT9>'8Ig9T(chinDH.&mt`bP4:N&[9b.0Bq%$!=YQX:>HpY-)h$5kANRmn%C,!34s-&0rAd[!f/@>bjnAD.hqh[qJFnXJ
%g/K%Z=`G_?`S#",YW>K514ar(`e#8!gF9ek\5+N[Plk-ZL,,;+FtA=<da_7(?4McL34H7t6%O$+ne-$q+O=b<YJC6D0.3lRRb0$\
%>ba,6Wma0S-iAc#\/23QYk^PFA)[4+H9"]bc>,@T(H%N-#.[L4O4l2:lf=<ELm=5),lf/bV_Qj[)$U\?cB\_V/Ap8jbn']Qc>=s1
%\qpk<:M:Rm;29]!l=.nV4kKho@>ldr.6$+llKJKMe$JVT&$<G+IB*WF]IbOt')(OHE&;&,H.LYS>JQj<8em5j"Doc@6G@AOr7Eik
%EuCNH\A*DrjM.#"e:D(5c^(`])JOGDjM6==#qNlXFl(=54Qq)lp>(6feWd7C)703D8raVAq-OO1MiphE.T9c,m#sqH/*B#a-#S's
%l)p9kAn&s(;d.0F8oagR\OZS+Y.p6jd@o#N`E0s4q(B"FIae#`F&pB0=66@fCs6'=/"$ubT@8Q)3p;hW:6WM\VL%>7=I20VH`GdZ
%)[q_-It.d(2?qm(@S0ZE$o=u0?):O25VfCAaC&6`$N/U(WMBdGRVLl1/b,YkR,?\$7=?22*3r"rRUT=UNXT@QkfIUXK[",\=Ldp=
%<M&qXJc/!CdUg4V"p#3>+1J.Z8/$sL:.a"-7E,c(Z`93/FAc+2?=5VnVR+`'=ot'Cem2GkN]qb3cWBtG.qJ?B-"Z[K!QO[H'U=>l
%<**(_X""E6D[#RJOfU#]k#EKQJ[K51@cX[!`rfN,=lJ)3+G;UI`W7<"b4i%IRZ-EK?d<)T3G^MX)a1h0AW@\R;56-d1e3N@mo@jc
%DCQJT0p#8b-uK>1Q&N)&#TNRk@3b@t"f(Hn&obn9^Ki#@G5"_H^#cZ:(BM#@c1RfK9@tY1WY]5?EOTp48IM%l0A90\)iY'mhW%)1
%`,E*"IkcDi*(#M>`'/(WV8gYP\,!Lh)o:1R\<6"[EML.\pNZ7U))hofp@h^`b]0D)M&W9cE?cM5F51Gh)uY5*UV8j2*&m0+(WZ%h
%GarVUP@GX,EMLhS20h`X,&#KO9'BsUHR=H,3`i$#ZC]??Z6aTLM"LI>Uo12S,<4-#L?C[4O]j[P*5/J^j0uKEE?jYtj$qs>;N@"J
%*f$3AgfhP1[rPU&YYj#_161j*5@Lj<$I#,sX'`.,#K!a.furt!gnW=KHNd[QWN!_%88rpcqMQQ5Z_Ftfk\k5J!_+!WXuQ9[W'llZ
%BE;LBN,fZ8HrZ<G\-[j&.'$T!0lfu>+$(IG8P]6kb=,\+I`8qUPZ\Q!I*b;l5[9NGqj*!V7/EDq3VdT1q05NTFRk4[Co.#No(TOc
%@jcb5CG^4s'9R:JatjLC&7&@Q\p?B,r5ql7g*sC(6Og<o4jO=dL.]Acmj]1,0$9=48i\S1dbp"_?N.)8V=IO;cO_f?N(_#:XmB[&
%+b?<P1@=1K-7!Sdc.[bCP*2f9oN54"kSAYO^;88a"eTmP#A*Wq;LKOo@PR=ENCt)T=>^".Q,4K"i3YD0]Mbi@7NDJE"#dcdB6Q09
%!It.KMlY%)Y0S_=nom<DU2kRZL]?r(#@G.'^U<WN?_+sRs81mgs-!]V_[es-o_I#JbJj#ES(B;0T:]A[r4'CGI!P[<H2Ye<rc'+]
%qXikHr%)XR="hlpp!I]!00`dQ`N,K'`RhV)I(]Gp<qa(`nLsGgIbRZ<%u8+SBd<Z;0BX]A\,P=?X#Hq0fD\q,Gl@3aT+AN>YiTSe
%7;:fQbKKh8Q_PXNroX.@/?c,9l];(U37;N^;`C;$GF[%;lSi`d3*V+FlXMoDr&a&-s-<WATBXVTa6"E"moEfanpcBIDgn=F0<Dh#
%=iA_R/cYDrY7H"D[Y;@U/-=_^n\5Ufn]e]4oh/QkQN+Ya,eV=#mH!0q=n9h^YNO*\++E_Ls1>r?jcY,2U%6V$q8qks/H!ZJqXWd0
%MiYWo-7P2Ka.MMCkN?E)o])k7-2Ga;H/A#fp!]6TB9s!O7)XS>UILmOe)m9NF+]gnrFa.uYKot!YI_;mroWQZg[k6V=FC%san<oe
%G>@t`eT\`UU:G7K5Q>El+J6P]7jhqP7t3)=R3,b$nbm.=qH/.CmFf`Es4O^Bo.R;^\[fHN8S2LH&EJ\Z](pYtHBjPckP3Y(:\]=E
%?N-l]`Q*JQ$g?p<Mu<?h4"P:8fuM"\\+jM(Oac/Z@"%?<O-b7&I'pV7rqag]omcgaRGX7\caR!R[no9VZa8G:NkYF#nB(]MEd^E(
%@Jk%C+SkX@gYcQZ%pbKH#/96u_;uUX,E%CH@t=.<^r?Thc"M*jBL:Hkr53`ND@9?p>h0#MkEl+mj&!-\O2f54jjF$;O]UF1K+I"/
%N^b"\STcFWs8(:Aafk9edBJmu=W>kU@G!>/jl^FZbf8tPa/sisi1aD6\'O>'3'PYQ\Rk6BF_uTO(A^%,njR#&;SZ[nqc:.Tr7cRm
%S*@%\\b",$Z6]$I^I9+^Bj^Fdi'!IBNnVKr*jP8_?i#B/n;"KTacP8*[hZH![dR4!Iei!BlfARl_O'Qqno*^SDg3Y>\is<sCUmS"
%N`tZ>iS19GQX+QMIWiQAP3k0b5ZN:+iq:P<F`t;=ro`k7eK)*6HkbAj;.(L<-s.1Y)ZP*;2Tj&Ao($DCI\3V\kruiY>u^\aW@dJ<
%hpVPid.mM(je%$/?@M_J\L^K4gb6pa-,SV</4'&fm05dp^,X2H51tP]"XiVDFR-F&G%IIp@6F>%0RkX?gr!82@<2D:eJLEi),Boh
%_8!>@s+"%=J+MiQ/Pk9^A)n`b`!3-[RibFT\@VP9YM\]M^Z5(!WSCob^>nV?2u.I]HcMSs41;5Q5?;R*GLZTC@,(YSimg,-n)('s
%J%pPJ:d!HS*U]eq"bL$$e9*4ISIE>3M\m[6p@[))",t0FW3(#S^,W_eJS02sks+'qm'"j+S[8WM1Oid[D;4i?0%h(9lL^C`<.>a8
%7kR6k,-pc$2XO^%ml&B+pXpp@GFr\DhH:U:"`U$u$C(57*;RTsXB=cY8o3L>XMFSS#9-O<1&GAQ:"/Qf%sD"6ZiB\0SM8(Yg&Lo_
%08uXf:lE#,O]ZbS&,ZZ&@IG#Sm#8W1*jGX;h<bG-0!:V5eA'Q$o51o;Ip*ha^KE2'=Mj.O=/XC5G^jek9B(mrFhM*_O(,i2+ijO0
%\WlQ*n0#(M-1'rpVob-:F>EfC?/B`a+?oc(m(I%51HUmNr-k6FqEJ@C(edM$;O,<ujIA"CgOR,m`hC<GE.@bsK2f;$B;U#nc`B3D
%cI9!pgtI$lWK]n!78irq&bP>m33aXm)SDDI.,KP1(;pSD`:5]gr;S'V;;0%u5!UfP$l<Ra*1:I`6;?[*^67UtHj'IBn=`Pf7207\
%oP&#/L_%G^"nY'<n]3ls"KCl0I&N;+?\4EeB_%F!BHi3B!R_(@Vj-b*d>4spX#Q2.8GLM!a$7[brbo_a'`+7$XqI>p3VNU%C*3AY
%!r3deqH&j/^E>r0s%i3Yr[/:EoWON2rrQ)[lMo8K^P3L(JcEVYiP1'ZriIY!Id'o4=6`HXT3M)Y>BgJD6DrPOmWAdG/$FqIf-.Nh
%Hs[SZMDNoWq<_Jb0*Cs@mTI&GN]iJ!mCka19sf;Me8l/fk6l-RKke0S0(VR+mf1MRa"MdX+(%eT(=)nEm.LD;0E8:Yr!ZNaVb`S$
%g&:_B]hZ@%lFJ5#itqJR8.j;][5qF7$lkL)nJ%Q1&K)B6UD:K_k9;9nlgo/)M@XRX%U*T^FU.;L]%S^%CN2un,1!KE.i$_:nQt8L
%fma^Ic(i?-f,BV*8BGc*;bq`K9#U+.-p5agHgUW;]UGGcgP*[gX^-ap#TXdKfE3oL?aIb5r^N\>4M8Hu^51546DfOq(,g^do:5(J
%Ggln*r.3B%h[F$2!nB`7-Oj-*a\_R;dL5k.8e9hW`Mm6)acF?Eq]c/a#i3;kCrP[kN*p%#pRG`,$l(E44F8,GE3e+F2EtM^s*t)R
%>qfUBJCn/UeeLCB:J6\S7gG)r?iU</k\;:EmCkY-Y#3!L0W*I.83_nEq7'9MJYICnLn>(\0+e(#e5sB"f:C])$J1%@c7CBm>p+T\
%8Fd&#'ToYQU!l[hr')AT_Ikuu7-s`&5/2I(;&$%G/Oq9;ouJ=0$?:nE`tEJ,1?]ef&-a+C-Qk70On$,8QQ!KA%WR"KI/D#_:#Ou:
%%5(HR4UeL$D`;?[mVO)c,>+1?-%K$V?mHuFNiD4nTMK/C%(^8N"#';7D!cRcptE$\djXBpaq1a"]!5pkpuRtKh)u'sq]u=8"-;";
%VkE6GRFGOS#WAm!O</G=f4ZAa2kl'U<*_Bg[D^Cp&m5H/H@-^L*GN/`VJJ>W+2n$jU1^P5(.G<?Gf(X7V6h)X.%Jm.J^PVVVicag
%$G3%WKZ'J`h4N`(iPVp$n1);/$h<aP!L#4?:!,)P7:?`>pFE5N(N`C!!'-^m(@>670KC[3MRr!VR3)W<'r'o0WTOM<#r#bT!#!j1
%=qM`?M9jd*:W(6Sm5&^^,Ol6K-pgM'(;N3S&kdI$'h<IQiS1SqjU,H(PU:V_UeANr"jC7En_-Z)+p8AV5M,t*m`J@bOHG39CuHPh
%_?&Ts]13g-J5d,<;aioq_Ioj%0+@0F:I7)+Vtd?&NXMDJ(.";II#QsG<l>g/FMKsC1t!Q%JfO]`NPO2_?u)eN\9HCH>6*oV*_:kd
%K8*ma".=aN7P*hNZ,u<jAW1`p1qeLjKO0<Q?4*(;.HX`PYUlY!lBUSb)a5:$'OCA[m;6A2/@ja"`4'uYq&J4(K0S<*?2\AkUa'?/
%*lOI;OUr&]<,"],.%#UWE$-2N;5ST(07ggtlk"tV;rC;E5j;^<9Ej]+\cn.SQE*/6!?hFbj9u:)rgW@UJD[9e5UN.m_h3tq"qJ$W
%not0u&$>fW,Nch#e[,oQQA"sb,R\TRDM0MecIT!#X.$9nLBE;tj&/G"'7qK?/H=a<D]jC&$WR0L![#)XlL2l!?`8KDT>=%-83dM0
%h]aiO[)GDJ&r=8rNcB5$Z:8FBUpVE"*EYre4]>eIdgQg"!a.Le)*s&HPaChq[T,J=b):@CO0nP=d!Xk:n.b+U:tJ/lW@RmG@8$g&
%\La;.G@u]<9,9dRM#mnt&tOfVBpgEW&A?/ACGt2k3j0@C##W2rm\2ZHJ[\1BqY4YH@=hh9Jh9A7+Ic!7"Ui@m*fFhr0]CY38aTX)
%js%ofT,M)f]Z78V/-jkc\8Rb"6E*(d<$025i<l_3>LYkHpM$P>@J;fWE7C`hG+43>A,4.Gh_jSjrm]JO\FG'kQXQ/8,-=AaJB^Ar
%JC!VFlr'#5NY',1-g+b0r;@.$;W?ZoB*B)t<4+W8:Y`.%(ktGP'J+K.KQ#$E:n5N(k=dO.qtU"5r6lZXq1c%$W5t/j7#DfGCO2oh
%'-DC'mshRZL;XO7>_bJ*b_.,O^B,!7As2`Kkqr7.L*R03nUGtE(&p]We!1.4EZ4]A,q&3A+$BHl#gMBFp\kCV[NlGSSdPDMjY%/m
%A./2-$'gV5J1k#XJ`J$H7*#?#.gG+M=#Z^/U]nQn@>bfO2q4qBi\\ch+5E5,X"`!#@93F7I)DBY"ZAd>$03JJ2b6+ur1B`"0-C^`
%neD)jqBo-J8-XW=nuVi>P*7mTj&YgOLKI]+jJF&6bH;'RQ5rLA]'COBbta#l!Jdo=\c7.hQ])?0!)FO4m@H/5Beo1ncG_H#M&mt>
%SAD>>:Qk>egqkF5U?R3?7fp[C.jDWZe'2bkaW@K[HSHnFQI+knfjgVH0?&e_$n"s"(pB%dS`^hS:XSA$37!_I`[u-_duEe60q:K&
%:=3+=ea<ffI8URFl,B%)I!j;>s17+.=;9*ST6t"Fs,/9beGk;Hb0=PsDZa5*#F^)0WSU,74+:'VQ0F(k:9.9g58?42Pj7:am<XBb
%e\XP\"\#'[5-P\"L3o[jj[-<K2"BOE4M-Pj[UddVWu#3W>!#f!([0+0#N4bLqdQ<'38<<DWL(b7r-<0fr9pi>)Dmg6[+ijJ4`&!K
%k;NK&.K$Xbo1tgOVd8hl;CscL[<M'`\j,4>mI!>sj.j$5m9^7Gem)")Ec9^I(,1VX)ri#D?So^T.ebLRJ871<^Bmp7Q!+L&/Ui=$
%5j;^f]gFdT"hK#L:]4L6[T9S[[Ih1m<pR_kEp6YpFA;e'7.FVSK_QT#^H:`g4q7?=cM5ZKra.nf5;*^_s8%)IJ8P<LL`H.lm'PL>
%f7*nmpFdi?fiA,pDl?#hd/9J5s#]u[(A.((T)W)tgj8bM^B&c_&!5j(HsZZ!c.PT*5Hc'HO3;s^m=5'!bhYqHs0oHPkQniN0`#cn
%J#egt@d)-BZRu2/[\rWl=QUFSHRddJE.?`:C\htS5lo8Wb2A&&J(il=Ij^0R?2!ApNP=2oID$)e#(#(:bmJ^(^Y7Pb:B*4Q"c:F?
%HDamsB<_1"hnuMqD>.tRNn8<`:]c"0T<K1(?XCrQaTbIg7<:Vo\bkK3\Q%h+%NL^;okMO5/&_Uef7b&tUG?4@FW,Ad\QuA'Rfe#^
%1>^IJEGgKq?K#3L"5Dqge%e8CeLid2Io+6ccTJXon+ChVmBdh'p.q5Id/Dn?LBVQ1C6+q&@sMIchWQd9kBuh$2J25@[F4>G$]SA*
%<)QIA=\uA0D-Bck\(.E=9`!I[UJWG)hD]g6ZsL>AOBs#"GM;_7QO\G45!S1QAd/Uep3jX$/.KDMp#^cABZ=BPO%o)T1nnM'UT`Fp
%JOe!<oe.1e2@9mQk>p]P;_@X7s2P/PlP*\aq`#Z;V'F<;$Cl@7?&!3\.5pcm;WD``Atddj'S)U/s*u\#9!HZ,I_Fncr-Yc&QWh)t
%;?pZYCt<)Wq@W20\.j>n'>$+$=roXQs1LRW03-_[qb"9EmX?em1];3)8(?3YmB;5p@<Z?=]4@r'EXC::8WPuiT?p`Cf'a!sK6!_c
%D08Wl7Z&;s,-5O`1M*'K7_2_TA38%J="a,@E`?uLcI)[4"11>-rc<h$>jpR&*qWTDK#2-7;a=k%CmG$(Y(!#b+`@mBfs6Fqm<\$'
%UXK;UZ"PW:g6D[UYL*-'s50g(_fBn%cj$:aeVf,2MR4-Vpg!@/Xk,;T\t85'g\^^iF?=L-:Y+k)X;Aqd^JH]4#1@Ib)*bg*np7,%
%96u#_;lr+'3%6fVADs_aOP=E#\#<Wh@73QS61)KZNA=f)`,G,"dZN\lhX8h02iWq$qq?cf?fUBV7['Y(oO":FE!d.hTiV)!@_M)+
%XB$83H-C%!miYUO@DAod\hkCrec/fj2DF[j,n7X]`An5!dgU_-#`gOm!mT<]IY;AEGMb!rIQ,i5_X2Q9:riYKq5`q,EhQO>Wps;)
%aM#%OjO-cj7?Z]+2XHo+%-7-ms86E_m5MBMC#.OiUo=3Q44D9A?-1rMS@%f;*duT\rB]>gs(o*i#iAc7rG09PJ$GqSrnrUEmn(ZK
%^Zo+JCI_Z"mc=[g_eO\`KGbs)'dK)s>.mSI"-jdS-an_oi?+B+a7j"j]lS7Ymj@L)KJ_W-mJKBJc@hYNH7q)#p&!6eV>XR_k3OIn
%Qj.ol2]c=5;YR+Rl44CSG*JKurj)K<U&!.5csD+*SGqJ/XYN^-.BD#if')GO9!t5tV/iotF8d7ODl)rrTM_b.Ri`RJ]`ARXE+J>W
%Z2a'7>C\k)q"M,Gb)c27;Knp4[t(2.IR!(d/_&L=.I)eXcSk:fiBUn9He7if4fNif.raanjo%RhR(WE1<,C=U\T[Li6L#NbVc?\N
%hu;r8Rltb\c]7psekVL1YC2_^:FkWLo1Mcaii>?%1b-rjnOh\5?#5g).%I;k7d@0ANRn/q:oQV-Ilj;2g!MClYP)6O5G2iX%InR`
%^k^L2%=4uN]_Q%.B6kbls#_aO]f*U_p<>mIK`ITThoq#rU+b1_Ia:D^Jb#_s80J=..Z-pl.3]_U<*p&2)3pAYqOE/2EA+ab'iiVX
%`+:a^/J;7WJUEBn<kE+92&b?b,E>iN"X<9o_B2s)R9P,h/?M["K_XH/8Fp&KJB$el'`*fE03ZpGXn(rB7*g=rU7Q,]7rfp=oY/]M
%<i?cu&B!,EHHBPW=+1-5/.LD7@j'A+rR7;3JgI(":H/^Gd`CkfWDAe/Z^a'>)#<dkqV(mU7_Zc]Xj;7ir+(`Yn(>,'9Z?/L4kBpg
%gXsUOn9_oKf%@?:;1'iRl:pmU$LR;!&o7k`[II47ro&g00;M:&TDmM7W52Z.qpot3J@/XWq,"8C]>\B]g%qY35!OZtk8Sk9M.4G&
%=/:3qI%UpX[b>fr5E1PU>AjF&1:QQe3%d-03%a%6:pJm$G5WHrelP6G>[8qF/\^g>D5-i3.^pmg[GKsD9^H1\VGA0)s)q(N=_P'O
%s-pIi+7q3@.E1to73IWBHR,4flU]1#@\HunRM0&^*R2W2,Ne;]DPYTp>\ldq=c]cae&oD2S@DRo>'+@@l=U&$JbbL8ab(@E0jAg2
%hX<G'q8'B:e=e#9FO?H+pZG"_$aj1:4./om9t:g1^&:oJI^b__e)K[X?G<+KBSlXfM1\db/?mGSq-r&!Grsm"/&poN/D_;odkW5`
%@TQh%:E716m*ppK@%n)O@gjLI)@lDX'ZC<\rL;0UO)_4==hS!]na<#;6PHgoZW40WLT5h_oFE1@Zn&M5&p(1A8cs0NmH$h=Jj,%)
%"nP)S\*)W!rTCI`^L%6?k5/(sZ'</?0^N^5E7k'B[+eYZW;`b?(\?N6[+]6+WV,%".H>LI<,+):(+B#go:c!Rc.U`m78PN%G:6_"
%]aS;npcIi]3J)Gu`^ZZQCNjm88De::qe^Yg]1g32/:Emk?]S.rG#tF$.n5,eh9jF,r9;)N>iBL6_]R^*c7CnU?_:pPCPe%9`74Qa
%[SfZ(L@t(??4Y:5+0R;7#>;C-=(C".bt]uuaij'b6j1>fkI#?V\]6.;G^8^(27Yh6eS$PD2WY?@ZTP^^BY%4`mEFVErmpXf:d3*(
%()Dh=<,1di_d$EBF-nZ*Xc1JY(TZrYo5uCiR%?pbf!eiIou$K%E`!?i<cZ%GC$)reL7bKl4a7q?T8kfLRYUBCs7.XfPYI]r4_nuJ
%g$@bqQ^-mufiIAqR@>,ZXGj?K*afo'f?2q:DC>0tI2Z^tbLNrPLWi[Yq\3@m5)e9Vk)*X6D0^SEm$%a,7CTQ]O#M4VC%O!d?<U-8
%VPE>5o\oF=N>HS8.!8o9o/rTqk)3u(4SoiJcHW7Wr6]%eBBh+[S/j[tad,#PM^KH2:NOKai<=_2,kDON:HZ&SAdVtQ142#b\_/BB
%WZt/He'6rR-bXX^qM#rV=J"8lnmNG"GB1BeXqeu`P7-,d1Z@ZM67!%Q=q?(n=^2cbQWXn2=j1`i:&o@o=?/M:^!^^C4&^Ys(>B5W
%do5@%2;EQ?4e-GM/8*StLJIG>7cCBm\b/TYZl!E@2p(lZdcIRC+1e=h(Mb8"V+!O-KZA,4:\B/G;72d:RF'EK5Yk!VT"#iqcHR'c
%7op>FM^D2onIIQ8$8mBK]_fP<J::'BY0>Xmk"kT<gcdfb^Z3`&\Qf@H54aqqMtnfi>C'PY"._'gc]t)GDWiq;'uP:.)<I`H<geql
%$.muZM"-0$CfLrNV@o<P/YP7-DCl%g69c:88%IenmU9`!/RKob%;5>3nc&GimWL=5oMfY)pP+U\kp,F;$)GK)o-*<s]#^N"/TkMR
%1%Fs7lci(H[&BF.Y.6n]YNHr:o-H^PN*DZ?/e6-sngWP=0MVOI,Yp23fuD0TZh\\_b\j%*d4%MadaW5fP>fRsh;#Z`B)gG/;=@?#
%LPnO91ipcmcM1#7.Pfk8RY?5l]a>:WW:0&qF%>W6o[-.?o+@J\:9t2ume"ho$%s=m9RBE4ddL&`3ABQ[n^5?Ep.6?2jR9eXa]uC0
%SFXgL$Zki1(aCar[T:kd)hMa@Iempc=`uTd>CR+j<XS>q7YbocS*Aaubk=[&@3b?]k'^qi>C&F[8c$OhXCeJYiNt\VDJq+3ACccq
%(>^VEVL`lSGB9f<,A!6XIia<'mlemdej$>3ICg^$1t>oL%,MqeS-sMsiFHi><I`(j=qsc+F8BoQ:(48.Fn[apSfN4_Sj&N,,25jF
%Cg:ed=Wah4VYT`5OfcaUp20%OI<`5`S#IrtYODN&@r",RZsA/d4ule"XQ6/T1RMc<l/f*XN&:*(oc:RuWb9Z9i&`8mI!HZR1D$<\
%$S8/F0?:Ld<\B?-&#tW2hKJdM2%YIO6$VlUR7_Ch+4ahg*f9;'gb'\&UV#3][j0:u67,3D&*^?g5*^)kZ>r$hGbU1J!3VT<[FG/e
%^H*"C"ttCnVl0D;W7BFEId3lA!/TDp"Vs<A:+e/4TDk9CS6E(,/!^&GDD$K7NcLVYCXXg*Gr7m;V;47/f!t\+p@:bO]&BLT]IpgT
%)FdAba^Fr*IO<iSgHH2C2ofW^1bkMe'>lb3Z'sKP`h+#td`$f>^7S[D;rcQ-(q'_!oQT;l"N+S&-m>qHPCD&;>B1hc\j5*3)6sOk
%n5/BFl'5(>k76S?73djfk#"HTH\CJ>\MDfPV`PGcK+ms>YoGEH1%$bd9lN+>ZmJrZmKNkfo3u[:]OtIb,3T;@F#7'E)B.X!Q>k6D
%bt>`3Uu@Djr<T5pF8/hjaANhDg_a,5Lo`bbmDhaW,a?<tbkLP&H\.15T'rinj5!;B2"(p,4!D>LK@<9q<W*b;TRCs4V4lnJ=1aB@
%C&/?^nMA&Zp/lReoM`CUT!eHrV6j%?ito(RNORnqFm8!NjkAO<M6@*>.rgZga?k+&fQd-H]Y7lYQmP;__RlAYBUS60A#Xr<fkt0n
%lap<UflS+9LMlsKG-O]Qe/4=1re+kFi[+$3@Y@>'mUh/l8`Tdch*$\kQ=pQi8-4UjGjr\uU`jS-k0ZC`N-$B^C%Lj'[)rIkM2>O7
%M2re9CT($,%j9/iIB*WJ\s>O)Gh`FSF0kC3J#&-#2JXhd6G1)jX!=[SJ/1#FHRtK.rlG#[D>S!eH-Y/;F<)+]SpR!!=CTHg2k/KY
%/WeR;gS*0.qcMYM_W.(+m[>`)\l+#cis2r8ZH('#RG2cYTJhqWQC<_5T_o>O\iMpC]@]GB9*[/qm#K.e5^T(RoM+?T/Y@u]YND$1
%p!VR@_8>!>^LjLr6<^!f?I.al()"ORgph=+G^PS_YGTlAH[`-NPMhQC]tN09O7O\RpQ)lUAH(L;h$sN$&,%cpWLSkeO%$1eo6j1V
%kO)uT_LK!c9dWB&<W+R*WF;6><ja`_BliVRc_1I=!qtO;B`9V(+$pdQL:1\J>C(_.j)[Hje69msPFF)5M:,uP:DameU\uR1^#+-^
%GW,R*BCE=$*_[5/Hdc8In[FNK+0*npEgmq0##m?t:XnjTV:@;pIO'KYF'.QL\0qe\A07H7/PGsWo(:a1bY*4[ou[A`,(#X2O%3M-
%++PSe*l1oA8'b*-euC*'2ZeB\9I9RXR0=C*Dr5s_\%T7+YudK#af,Z9>[4t3G*M-Ga2'-nGV_:"[^H<ggRn%,G>@o"?gFInpsQ_1
%o<pRG)^*(rjd5m&k:Os7AZE/%XS6,.lWk.eS:b3bAC`M%-f^&_j&X#Ob&n':k40j9ju0-t5K#CnGSc*)P@Z_RQ_;BmCc>8haeb3<
%RiCH;Ud3Poq&jXm;^/*B=U`%2V@Qa$cX>9V2!+:J_U)3DVhSh:(WJPB%)1W_"92foWRW.KP7s"7ck+&oX*0SuWA/#VamB&oWDTe:
%ZTH=Z)&VQe(!dGogg!VbXlO8g4#pbVU[I&;=PVWOm-cNY\ibJuYsB0gK`.IZ'-]R8"1qE*(Wu!qH?MGQ4TcVUT2$J>O,rmd]>nG;
%Ir`![`;aS!oj['d^,!F5>/A\Fn2BiU=^7!EQ.=H`5-/'Pp@P.UO65k_o&45'A#:%aQMY/M]qbOhNA58$eV`7)12LK<3k*M,]_e+V
%HWG`7N#i#0Ju'a6i'ijQCu%:#.p'oCs,\(/GeEB`>W5bD]-4)mhi6C6`m^7ZKMq-q"s>T0>5@6TId$'ul,IT&B),uIh.@:)fK=K'
%c)g[r.C"%OKh[R-2lW4Z(uKMi'K\+'KIYRN1P>9I"o?IU[?@$-a]T3%G#fs8pY*;1m'JUuUBA0[q.]]`.!_)mdu?9bo\;MBbA[+%
%O`05e_E(ND6aKjdgSW)?EIVEu_[cq7F?f*eF,-O$Q-l!?Jn:t0fL4'`'^Eg'-@?rdjeLU#CEK>:Et<'\O3=l-1Z7`b*[fFqp#AH$
%!Q,76c]9_<VbICIOQn8Qfur7pND4l-r#)_<[U>?#mDI`Eq=6mjF7Vq1BP;_#gk`'Rc0!!mkj[QRmEk&+S7PlPS9:Tj9-'7oQY1N6
%?[D>bSsLL'WF]psfYUI,:;7gpjal4\41X_3cq*nLe+NN"&KgaJ=67jJ_U2+@Afi*:n'c_IYm734^$p#_g^`^.C)WK8g6\qOM-@U&
%qkT(j<+ch"BSN%-SU@O>Rs>/Vc4=Lg2>cO35ZcTcUa=5l,`<CJT)&<_bXLP*!Wb(jk]]5Tl+Q`WCjpGN0%9#=)e4:@Z;VF[F4\HZ
%0\UXIj#NKHTU*9\ja!E,S6M!NUY%i?#8pMsL&Bd!@hk6RAh&:/38?kSTne`"3Jb&,+PM`QF7,8j2gS&fX_)d_-_bCB>EXCSGlcVQ
%K-6k?-(s#^4SS?L00_b%^H=`OBTOgMqf7;Zf(>0M<Hh\]^U,%8J'5jA*3$/eqFDpJ2^_6ObO^XO*)$IoCbEk;'^m]$egpF?+Ri;)
%EB.i^VlT'[m9h4pnT+G>PNZ`K/1Z`f>B-m1Z"[Omq4i%F%Zo+(5HR,I2bu6an&>?j)7mc8hp/n&/umgre_5NOUYI$@2ARQ%$T\ej
%F)Uck*S&m9o#^#sV&Me@lqY!5N5`8-@(41po%R'Igc+P$-QV#%*kOOI8`2"5DN@;g,PapGk6Mh]r=NuHEcp5^\(3ZOA9Q"ohCag0
%/i;ahcKD+Le(%8>\%2%uZF4]eaEL$>g2hbVP2<fU]Lj8hN]PaGe,*Ic=BlQ.l>u2951M'0=C%Lin!_9F]:HM92)Th%Ht7ed.HJl*
%'!+'+J0`Lf8RO9[a-Pm)?B0ODQ6JIS3&>$8h[0UeAae"9.9!0+h]?'!\8gt2HM;Z$-%/Ts\4s$s\U2J:FaZZFVMb]']O^.PL.@,/
%1jYpCGj+!kael6`=0bJ?\q_`*FejBN/fXkejqaIqkWPBtk1J?'dpT3pkC==KC<)r#gK6L!*8S\!V"7u#4PVQ:`7N@/>-2)6@tnYU
%G?m3NqK/1nnap7/]DBJ`U[@^4:j+'h>FU"ER9qDOI`&H^rEZ>j>6YYqq&>2u_jQA@l-d\T]\An$D-e=[/*$;NdG*<L?\+;6LTPuF
%ZVa&s#"Io5QlQ!ol.XWam+>2-]/?-`?U#K!:SX@/cef/.pEsTK5V>50U$X+)/NK#9HgQemGRq@H?tK.RiJd^4:FN>HPoi6+>UpKd
%-]LL]qt,Y(Y[^G06`J[lda>E=lSG1H00P`?=PrU)eY-5g-3AmGE'3fMJscgD(`u./G(E<9/,ARrkW>hQ![COPo!@\1ETXO"nMYqY
%Q/giY`pTAm\fK/L272tIi)o:$]@?TPfiPLqK=R\d*WuB>BVet]1#VrBU4Ps2b\eg,bOj30aF72^'CVug\*Qk=s"X,NSK(,NI14#/
%o6p3'E"Z2s1mX0!f!D;nX-c:HHN*"#KWS-cT3]:DW\C33>MZ7\o%$"Y[@\AH<h(5)KmD?R*EbC;A?)j+W*_MKbWM//mbY3;G;jlD
%abBBTfQDXHLNUo5U^n)4_G)+<D&i<<OMpS@d6Vq'f=F4QOdXrDc<]O4d\@c)o5!%/]4puBL-S[M,*7B)3TR?bO(WMMJ;APcU^q2r
%UC1/6fm7PL[,9/GN/t/=-9>4'1o=(pQX'L*aDDGR0?h9'kJ=;^5MciVY7!k8m7r(2`n(T2bH6W-6-qRi29;OdUR)jL?_"??I`(#2
%G]_]>U$,\$4XrTS5Lm<Ekf($Qr-M!N$aEf_3Q5i(<m,fXE#^RV_K%W'UDa;<b]Pg+/Ciob)oFV`h.YeaWDl!KQ%d>n9QaMYXe&gg
%eT)2tm7]I7a\?qrmQ2qCf:=:jl56:p#tZh/1p,Yg3<U;aE+NV6CDT6NU]s,J9qMKeNlTVVqo>kmdPp6HHsOiX/GVH:*%VupTI8tk
%FjjceG!=>)3c+ug6]T'Z0)Ef8o(*X`r:RGCYspS-SV"i5n60OEI](R,dO"J/N6Pje4Z?N3.>$6WR6e:!+\+'IqU=kCQ]8_r^,mHQ
%Mr_]VbnSX=Rqi0aLs?SGP1G:=Y$KWX@(pkl^76^Det7">q.J?WWE8XLB2?S+mS'8Im=?56l/UUCB@[Va>:WeD#4FH>UeS5ZlM70G
%:mp^-M+UlShbS\0I'_lU"5Y-6aA8EuO."qUTC*kRb0AE\8Bo_]IbQD)!EYQ,5o\%+&%dZ'RTu5lT7'l+Wq(?9KdYD&@'/$^dD+mi
%!.R61Zs3Zt=O!G7lfj2pr_ff".+l/!WqW0Zce6kdbS\M>4+ig$hpbC!pJ$&JJ\YSZ,u%^*Mre94jjX1h.$Xr.a2ho0c[MHXf9R%r
%?j'e/A;[GC7cM8M=e-T2p1A2jGO7ZASfQ_+DT\=k!2Y!i[u(<$7E:/WLfW".b]#GqZWB:OFT&74-=q(Yq<asYmRp:U0--_ePqObA
%=[%$lg))`gq9*4<GhRhYXTdnsgi-O/XRcBBG,t?_Q9GfF2R%/)23=S';>Nouhd70aXMq$q@;,Kif_,g*oAIH0\l?Et&+&CYD!<0N
%X/^6QpU>TuL\UeUmpY1Yjm>gN?"m9]l$(+JnY1#cVb`RmH+X&W)#Ug=.mDLQHhEu"[3+-E((8YgmPDU"X&XVe,/m?\YtOQ?'#otW
%k*h"=rF3c9U&EL;9c[agOiVajhF?WcEPAsHk@SnhbhPg!Uq)RII+TLoo&k0/M<:e((_,%+Q=kE.gSV9^IJ$+;Hes$O)-u'5r:.fL
%M8[></s2M@)b_Ns2c-kLC+I'r8,*$kRY4p`m]R#n@CV0/*b"91$9sL9_`re$C1b#hat"BY_?OcNjSE]pIMa$!?h8K\oaUhANdf7J
%dG,B6]$$(o/rI"1CQX'?8,I`;IMa0F_<9:phX^jI1pMSGU*s@h9;SQEQUu!NGd'7"ZK&hu;`iVp%g)*2#(NJG.PP#'>O]P;TYIX?
%bKW!Dob`1LcJL4fNT1NQprB=lI(F7EYIkeVCX_RVgAk4,othdnQ5WOAF1f>Sq-5;<o!ao3rQNLX?M`lf"d2&*.08>dfD5=&fh8Cr
%)Tci>r#<Kki=h1S3e:gf..JR(li+?:%:@D,G:2D.O$A/kS'+uR<$(_[o_F3b-`/[U:To[JG:(ZWs+_(&O7;q\*oZ2'"Ts,N3nsl)
%$k4D`PIC\5mJu-pXc@8T!;r\Q)@t-Q&aeGl?e,b!$P&#,1Aci"Oajd&'!%GlMhCXfBk]DfT,@uL7H:Af\!poGnRWk.>!JK]c!9MF
%bfag:CAI80P3J[=m]`(bToj[u:`=b-""j6!!<[%a=6n*Tf"S<3JcsjA(g[K3q5oo&m14DuJ,D%mZE]fg0".7C`DUP_elF1^QLLkk
%OJn'd'Ye)UiaF-#0uTL)LL^t1?Adcele)Kq]s\<kAZCsN4<FWclKpU"R5Xr/A0-l.#8U47W^cFRUpR[%7N("=J@W/STWpbIAFf;"
%2(b9G=SmD_/Z7h`5F:'[?@77,p-ep'@f@T,1a/_06Sl^5`*d<H3K_CR#!fiGCa--kdDhF]g&mh3]H0a?m$ta8->1RK&NcU;1pPgt
%IZ;*nhPs*&+8U)jRKQ"O0u?.L,EX?C'8*(3Z\bBTgeM<\-LVTm+`Qu8_Cd0R'4\B*C1;RiHC:/A+4_*hRrbPsEdod,Qo_c<8PELQ
%T+e4$l&!@&@q?hB^$b886n9f9r1Wh'_XAK1KGpE=8Ed%HRm\ZBRu(g(gJ=3%?nF*[S@D/7'oR<1M1s@+0X8-tZ("iV=a3Ukf0hBV
%R@VPJZBmqfM>V%.33fd`[[^G=Bj;t8G8io+c07taYuMXO:$aDW-PCd$H9JN_T<9FLf=-CNZ$1A]39`O9-I1mTq8C8>!lc8p=(fQ^
%ib#rOQ+/nR;i1C8K>U+AX>-5i-nT<_T'D#QiapVD9>&QA^Er0WWR\pknanE\Ss!lAM=j2JE2\oP*ZWE5N=Lt5SK/4fZV005FDKrT
%d+^1s%JjQ2'rDjJca+RCdE^D>i7r/9C2e0o0L*)&4F\<o4rkUQY2!gtKBq.Te\SAg[GA[TdWR<h:u/;a*k+q*#1#FLkUKjY*5"F.
%g^`2U_UK*;lZ04M$j4-P26I0'HdOlLdiLU%6\C0=iM"Y,l"Oh*Edp,,I0e]CnB[jQ2<lQEU=V_IB`;o;@;,Jpq-kb]Z`uU!G3H%:
%D4SBl%..?f#=D#-$e%K+6PErsf;:8^<7i]XLWY[5Y=$WVo,4DCWZ>WBL0CA:a5OkjV2+$7WU/Yann.Q/fULWC*`e-Xf3r`Cq_l*s
%fglNaF(/s1bth+GD^S?2nA/(>@JDZ:]/k<sF0[`0QlWaXIb<M))Lf54FbUk&e^R-!Y(O\[,GSm5>9h88(ms2BL"_?#Vir@s4/7]Y
%)=QO'AG'[:Bk2R3@:J:O9J)<q&%9eRDQ5@.,GjR\*dPK5gDaih'OO?DV*Zjsp/9Td9oZkF7Y>Z!DKL%t>`LF<dV*HWY3M4qdI"9,
%g??rJeACFgrp'Gq_5d^6O(EGo>0EJ67Q]'4VdlL(e*4.%o$#chE,qKfS(jRI)TusJK<b+*_p[2oe`,$0Bk=q3G11`j*dc8sag'I"
%p"QbFbOQ9<_m.17`-CR`S;h<ZB?(g[U\8q]AaXA^)eA%);=/=Er9C:Y*%u.c[`5?c:QMt@RtDAaR<!:V-C`e[#e.5X-^JXRWJT07
%>\de%ohq5<gW5s]gsm(-':$N]S7^c_)QCi@gfneS20q8>WNUA]P=o]-bN,*V>b9^mXVW>1lfFVXqeG))ntgAT3SCRm?7%$H*j:b_
%Wo#/dectT,\NB7'\MKMO-;V+sR`WESCF&_g*Mnqd_#qmn:Q=6AAZ"P2qTdUgFT$50hcd!Qm1rnn;s2bZr`&F5cVM72^RS%0erF(6
%VahMde)BY8H9/b2Fum<>IAfr6W%3Aomcnn@qB^:R1u3Gin5@BPj`X7WhH*Y!:CWg@[<XNVRQB,j+&3P/O4R:[NEUI:E5S<?R6EU?
%T8?0-C*q\<]:%?CD>Q+*`u?rn5`TUAD=?WD)]ql%HiEQ^MmoJh/)EaBDob"cbaj(SqnDW90X2Ht+3/>N&3CO]@c;:c8ZW`@D/iek
%V77>p\u;auS]Hr&8m9AkZ(tX+kGrVZHZLgc-<$tN<'C`PgXa`=5ES%/q)XnQo<[`Mf\[&m)ud5_?M:##*i!-4FP"F)m[85V)(a!e
%UVXrqE\KJB*,Z#CoAN`snqUF!q(gW(jtn&WX4ciq3hG#q:rVZh:VBIsL3dkqZ_Sgc\#*4^1Pbhji:'e)=3%B<c('iLP?3;Fbs[C<
%'3B*1cbbl7q%B!^ouXF<6=mL:HQ(/4XYlitCaOrj(?]k8b3&9$);8A^7[?"-9P3pm@J9:goB*2<%%JEa:X)X8cM(sa<sB<\^6Vf4
%cc]+Dfuh\D-9C:D2llV^+M53?QckArk)OK6>B?XiNNp$;_)n4^`eW(AEq[%!^\:]4T.`T6'D$,Q(O$899BXu^`Q?QH_G9'h\8ZdM
%]XcDA;#]J(l=P*W+a8FL\?e3+^3G"0N?ka\W&-u1VPgaR98bmVl_WFWf%s;5ALb1=C_Y+abjOc?E]Wj5Q4M#+'$I-'QUX#UF8_9q
%$^[-#^3'@A5(,PA83`.MT"srIH-VfUc>.$uiAEDMRFS!)UKPMP8iF(5l"AIcCGC1gDJs&-mT32)_e5N<0&58sjYh9\WSI12;``O?
%gHNj-N%S0%R:pUbIsdMPk:;b"k::&?c`NJCR4#>H;gp`5\_h85<YMeQ$`e#'\li=2fYM9&Y=FK)X)H+:k*fp@ZYR+bk0)K3;gr`R
%FgCkR5'=6C\=T:ZG[<VK/8!M+c"_<0U*Fk?(<](eNPhNhl]%g+o&Ag,mU^0TiSs!1o:T>B+?V1AXmr?8^9qo1Z(,n$E%F/_olP6M
%]KIDN-ejQE9Qp<s\0ADS1NSDDAGGr,PLfQQSPqDQZh$5-Q.o#MYKZCrDEPIV3S9bRIETBamE)9Cd,+WI<G1d/IFI%K>X*?(UQt]6
%riR+\JSFg"P'Z+qHtL\d=Rr*%K9Kt\l/6^IGiNb?4F2Cb3cf7iGdBKZ3(aTc-'+dqV>6n"g%!mna7dFLnRV0#kW!Xo3I?-n\@d=H
%4IUUW;)\mBAG^(\qrD0Bs*Qki3Q/_^C&7AYq",aK)*Db"/EY:Ng@b'jDK:-mm."Z!Gb2Pe%aT4Ja7ncKQSQ-C'IjV0ZVOdu(IqE1
%oo%H"`7Cc0BMDfNqN!S%V47A$X,2O>i[R#f\[]5^D_,3BY#D)Lc1Tl;m/?VIro)FNrMUXk"9gr1Z^\IL\>b.Fa1&&.j8A<@\-R#2
%B2?X]M."#<Q`Z+2]:6ueYqWh>IoTTS4uk3"/FOSp3pV.ipN$RdHhSnaPJ-kUjS_A!g1fSYLuMi9>ScXpl\1LnH@.@4(VOGFp#L.f
%*,Kl"]XMjB.9Eis#7pgf>Oc.roW7ZRo!%IFqU/`#gcZXjI=,bZ'2SUVD=2+Vk4Rf7qU01\Juaa=b5UqtAYliAKneiuhCG`n+'p7#
%T,WjW$SQ,!>'`3NV8JYNF/)R&cgOBSo8Y66%\C?d^+R_R^:rIFQ&XMM\/D@/a2Cu[39)U?VnuEF^9Qgmet;@Hk8Vk(*GXp]hVL-T
%ai"BWo+p.6WjgIM_I,1YVom9GeFcE)Fu!<>9oM3%ra8+F4m%[0]b(KV"@6r_iBu@kOMXe;*QKi'gHP7;:q\m9o>U%qdPZEbmC8Ke
%\NM?*DWCU8hd&3cD7`Rp\nK14;n5mL-oB*LmAKN*I<K"k<Gph%G$4utHRdVO=p9$G#7@j>grBQjF1WT#'O(:PDICFHHC5[2DUH8h
%Di=Mc%K)95B:r+UY4^L6\Q#7U+5nu"d)SJL2GgAm^O[F?:(>"WnGkH!dQkF)!u8u]'meT80Mj??^OP1*RtX>,=t0%.YH:Ri#oC77
%RD[0WXZIBGD!(m/G$rknL[KaDXas77"i"E9qVpk';@q),Ej8b]oNueAnc6#iH*;>]gF#Mfc7nk=UL\6kL[@F1<+paTc@m54W*+EE
%F-O')rGsa@2B[+opX$W]KB+o*=abP_os4h?O44&:BCsJ^VYacGGN886.^e`:;fQ[K$BO<A+!.0A)u&RNLOWRXPsVO">/!5#PlLH8
%'BV66n`eD(gBo<m*.)fNH2#n-Vm!&tM$Gn&J(DH<GIq1^(S@/hf5_@gK>/Q"nY+"ln7\G"ki)%oMh>i>_9^h9b!-l;N"7sB&)H/Z
%H$qXX5(.OUG7WN[YN+pbl21<aIj9L<q!f)0SYMchhUNG'n@OIWs28\>1"jLKhf<,:7t9`pQm:@6@W8YOqgncrqkWMd#[_Earp^H.
%I/941bkq&#dL&ejaNVELRkMH)m<d7)g]Aa!U6em29>EEMLW[*P8pl=Aqo5je-q&O#A=m]4"+:?f@]r"=8q!4p/iN%iL%\R++6?T3
%I_T:Elo-HoEsL20I(q\5&&RZLXD_=Hf8:\<hXg_"#l4()NPE@_*pK$@nE80IYKjoERs4&dh)i:<jj#Md_uGp`^5!>tqGGTZ@;;iY
%3e-iA=Kc!5C[?Dur!UaHnG)ZPVtfLg`4%erY]Gjq=Kf+C&<G^%n(Y=i^IK1pmiB]f2'$q5URoNmIpmJNPtjs<W7%;Yr-DAQPsW*1
%o[J0"Y8&P;eh7`^4+?E[oiDZF^:-d3bPt^*s/S=k[^RdbW7`hX:/?r.aICKm\-EK#YO6o_Sc)'n>5o7&VT2jF%iCb>R?3CKc?GM9
%?69^Z^]&m^#(_]oShBl,D#Q7%Suu*)b;a[kf,R#$a*?"XI`;$:-X912,I$r8cX2"4>Y?R50E31"7,Nd>6Sj8MNg:$eorAY8FoRg.
%(k4"O@.(-8\`p?&cb@)8]Uf57h)=BIJ9MB<O5n9>E/D(!)=o]aF8!)Xr'uPAJ$O\7aWYVi4p;tRQbDYDgd^78`9G1Y18GG;RntU2
%'R8j##En>X_d<8So<Wr)D]A2p1ViuJ!&AD<i:>S@./a>KGQ8DV:oC+LJcXh#1)5&J5O`F(!^EAP@-%W>J7+t2Jmkk`ARV1n1G&0p
%)9>^""Y0s*!#kr#&D0mVN::d1@pl#B``?9@Jk3dd"&GaMIZh@"]p4/jZ$.=B'`8;&W?=g4d">m4;SY]7"IL:I?R(7Y"Y^O.G8[87
%/0;VS'nuqT<'mF/JTD#Zi6&hr5pHT\/thVNgA,o8cVI,72M7jC%oOnghkq4;c31XI(k0#agSpDkb,;?H-;&OaTTR%kc5mgf$Liu@
%!;#`Me@6"KV`[8i&9/jh*WWdY#m>lL6k,*A$34kSFereb&YMZfJcQGh&9TgT'W#p4.0bRslN"bs7m@#Ji<S';(8gR7pB6)Q)0%t'
%_f:>8('ZZ/+gsb%d[m8@#[s(,0f\f%j1^2=MEKeANJEAJ]naKnF@pAB5mkec%UGqo5TIQROI!q_"b^\+c`LSmXcU%Z5S4T#TE<aJ
%m`($e[5'_N!^cF>oR*;E$$`]12/E`D:]ZHLD&C+3!>G[9+Kut1^I]f#?fNlnY!GZ'!eh/?'+*C-!c$1Jd]^G^HY_D$X?d^hM2qo1
%q'#KeeH1R-=Q7`-#\bQ9Fi0A>Gk``F,>8rI,s5ah_85-_kP;bXi#cgPpl0Fukl>E=5qi_mNC8IB1+-174@a06AX'Q0@?=ZS<)"4_
%mTtD_6V8.-$(51m0.`qiJ/Df])<!Zd`23T<>AKj>3^?XoU#R:"Yc^rkcOcY%7Kj_&OWp##.#`Pc*uRO-A:Oc5e-?i[JME2.6XWJJ
%(Q#L2$\Top)Y-0:81=rT%LpXAk6&"X$+kGH-UuIf8L/9"9gan<)irEGd__e<&]:u-_-')*f*/Zp+2im(-&F&6,jC,55\GoFVW`DU
%`AHTm&_PchPj_+1>sNAa'%gK:3-c(0e.rH#4G!B,J6*DphFPSBL_pX\[*f\4Js0slcOrN/*7RR_3Vpbh"nGIj0oAXB%sOm;@!c6g
%?hc&U&_EW\G3Jo*qW/Q:!pUReWtb@!HI`l]a^;1uq$?rX#Fkl3J4bO**]OE1oKdeRj<RG3!%&,,"&MiYEd6fA.L6o&HrLW-#,1L,
%h[#$uW?:gKq2QVN!0N$GKd8MO,bH@n-pidC#5V4GNgTQK$bg8i*fGD.DX)mf81K=$;*^!H@%[joGt9)%T-4n>+l\fBcCJ>a#nfKZ
%kgk8mE*t#)I*K?U-R+V;WK>JdV4U#./1[!^.3Fh^',r*N"0Hj8-4$StLu4Nj)&o7(oY>*1k>NYo"'Pu?Fl\*sH$*L4Ba7,h"X$oT
%AAt/1*R*]C!\Ap5`"b$-+VYfc%L!_."e5U6\LH_^,WO;i!AU#RHlC[D+W*>3J9M1&'3Q4g;<1lWd_ZO*]+i3GJ34oB]^'IW!>IJk
%+'PV(kTT@!dam.Ai^72Y[f\3-@_FDs#&61;5Qjsm&Hcdia=th_b,tuVXQp9NL=26U,1aa7UPO")ll<C<7GKu3o7;E5"VLo47SY]o
%oK6_876H5C#.,UP[1bJBV?-(MWXOuX4[,*7]hf(LJi<_QPW$qVD.1'`,W6P52as)@qhP)'\YUe:Am]hL/jOh8bN,=eV.UZG7G@<$
%kSqJt&@'UqU@sCjL3\T$VKSk:LtY4.22(cPjoFLN_SN&"dp5Mf/3`>@>*2Y0neI*.)&<E-X*mr(>tthDOUH`^hF(Je=@!c[3ku.;
%3Z:>I[7gQH5UKOSpqAK,ko`jj9V;JTLA<"G2+7@nj)j39$^>=G&B(+F%'>0d7EQe[N2RleCV8#g3)DfJ'J07B,f&--!C%QmUIir8
%5"]iKoT7=J8pq#3%?Y6.QDHu^!i/#9#ER4;>(d1r'UF\O^hO\8OECs;*'/%pp)q8;"W>`P"HjN)k$Gjo7<tgB&XQm6JrYq/fgcWk
%&hM6tTXI[i6"Pl7$u!$_C.Y;k!76D:j&]K6Tr99/3MJm6BP2)_UqS_B64nE1[>#=5pIkqV6noAu?'5-U6M)].4!%8!LN:67h21C+
%BhU,F&e1BUcKlc%K-pj=(O8BX5SR6f]5-eL`OkXAM]W*,$?$hB#(*D<HiZ5Gc#<"Z6Q$N:&lghbM+r[>p(TbOKEIhe=OsJZ0F:+2
%<+JNf81C_XX@_Tp?j@&V(<3RrGCgRcW1%g>J(#5MIF:9ah+?7Lh<0PM)43].\XA,15p\oEVU/EfeI(Fp=9Sgp]8!s/1lBu\,aZB:
%V.^R,+9jO(O3t]7e[4Z1O[;L(Nhi48K:chd"Uq*G;um4+HIGR'ck3fC@%2^/5lR6HZ1u`J83^TY&i=0R-8:7.#ZW/HFFjopC^TeR
%0eCi@g;%U&#ib983.N@(OnAt;5Jmj9+pS3=));U7W0K6[\L;u(TBCroU[89gJdj$J%0Fj3&DFu&nEXn'[.er'5`pcAYDtm:q.TTa
%H@.KWa\-/=WQDDcEXnUZ8ULb44Ld3k92m3Nkl:h-M(l;J-*]@9-pSJ-mh%N1?najfir[Fs7NAuXjA:GX&^ooW4;6nq!>q?tOOkAS
%3JE88f?2]1BC*;6%%(3Q$r0dSmU4!.Ol5XMT4jdokQAdXTlD3.=d'HFiIR,Q[:X4`eUFTk1arMl-MZAJ`H:#oip\bY\n_ZD.Qq#>
%*`.M:'3Sa_No5:gX@Igr9WcU1-g)OU)GBE@,\n:C=":NM'[B&Q#'^<Q6L#'0GYU*tfL.!>!:2/Q%.Xo@"i9,Xf)IR;KY`I.FspN`
%"hcISX$@_1M@lqjJML4rp,D?YdNH,hZ1X,P%G<UBZ;FEO%A^O'H:[(hp'9,]O'HC/OcKF(<gJ@P0`qV1N7+#?,0?Mg3`2Ip7%M2>
%K4PtL=W6*hOs^jI&haN9-*geT:..,>gIGO>G-+6o0XUZgXCWW9h#Z_#)ghup6"4*8e)Z[En;:m\+Np$g3ET/BKZnX^(^&hHC+;b-
%.'t?bK#(V:H][HS4"U^6"f+W/-UNVW>L0eFlCi9Y+rSt7,@RF5nSKsHTmn;_ARRe;[])-K1n*$2i3Sup4pa%H.Ul6s+R'G4";%1N
%a$pa0o(iO%:FHApPR)lmZ6h-Y`"EYlCS]m^Y=GT!,o%DqjCuD9%%-IqJ1);+75(kj)PP\M>=)t"7mmsMmSQoIbX#W>cD,n9`Xjh/
%`&%fXlp]LY(*)-;I2g;E8/4+0b.;:.fuIdoq(ATL?lb@j7+Y6PgJiM6>+uia`V%SZ(IY&)6QtA=:W6Oi;[V0B"a>b)$=m49BF3]!
%+YaFJn7%fAp,S<L)7H=NOI$BU1k^EFYbI#V>813glPXWX#m#/'"U>[V]$X1Y@.9)qaq`n*3<j_gerp2_.cNu<$<.m@A1=lDPXa\9
%=pN6u$gcW%IjK,=BW4g+kSZZ+"2Y_LLuKf#Acj#*J51)"^aQ>qp*2<[qWbkb7`-(0i[>J?!$Vc/Kc/lIZLU@%6GZK:eqSVt%b(Ju
%)4uO?^=/9CM"+&gTmoJNB.s\X#BAZN#Y5e?^bFj%3/3oYa?at_#?#e>P$S,;X'D#+_%B6=+2<D>Cg]E1Z$']2b6YH0@*%>dm+fAp
%&\2P!DY+SJ<&dkt&I94MJ0Sff%\p<0gC"9Z>8J0mcrr-UVoY)HL*d;Q6Qo4m3=6*X[-^0lEj/FbJPa;=6Zkt/">jFUb^p.\">W6n
%/dEmlHM&,EBH+:E-86jOXM$.f.7\Im8->LsbU,JrO"edOEsEhd1rZ0(L@ui)6,'V*KL'lXqaCg)G:kaC]8K_@K>7a0XN6V+O_r?5
%C8tF>U(RoO63:1q.0a8i`b#?Q+DkZ+puDkc%*[CT@6Q\<P[m%M<4!PiMX6KMZiH2O,^HZ1!^T)""g3rW@"<f0mrB;E-:3GZ%]FV#
%>rb?(*XjJG%g\^g;Hb5)Q*bE^5[2ng8:8NR@5TgIbCNq*[d[:e8-)<N-MNV"D1]]fpM)D?a3-kD9X-%I1s[2HM<X(b3";<P#8g(>
%1(H:%Jms]4"Z"2s3@#W9'DjIsBP^W:c`LakE<6Hq+=-e-UgCnt-9TYXj=CZ1d98;6)9Ps@H)jaWfqaD.I^d@F!dM_(Sr5OXeZ,"b
%]o[jm(sek@BIU2HW%H93&l@PTfGnGB#mV2U02`G&86QR$S`C3@Ye`d_=hoh$>QuTAK2D%u4[TuaKT_K6"E(3)KFO#7*dL/t.+2:!
%B^b_,]+^eK,GLU(aGNCW6<JHUOF"^DOGDffXNbAP&T]4PXsmKVYfKnK.@C3QNCqet\@'5Q5/od"mE-!+@.KE?4`3E=BHWrWAOu-6
%kfnfe;^(/Q&n^iZS4j6'm@KC6dVRif_@t]7]Llfu@Dn%f)B_3frI?F:&=`O+2+'Y301GjD8p]Cub:3Mu>YSN6Or905b'T5R&n-<L
%SB_+U'dTkXH(_.VnHAoV&k6OG\)[fL_PFC:$Z"Eck]B9pV;RO#>]:m+<!DGSF[uj%_Oq2R*"&I.P[d%IM$5]tCcq:::jFL",oN(.
%eC5TW8$$[3h$:mY]:DSg09V:s:fofuGJOGqQf!nrY8LprN;d990[q]_"JSmo*X1)!5WT(D[[M"j,R?1$B^UuK>nd]T[)FIBn1PM,
%:68;8K?Mhc6PuY*6,d&*KTd>`,e,)nfc3?!S"(4VUn2O@=)=tU;0s!1"dk?WY0.N3rjQ*m,)R85(!G!FCb!L>71VR+mh?<Q+$,R3
%&@0]V0n1FL1c,mT_^&\Z_AAarp1g=P6[gZ5!N.(Xbh6/,?>**]@iR#+WG=d:VY%#lELJp$g4DK5d3&N_S+?k6WEA55rn#_#EfkYV
%?Pl.cNeS_]ob$>5jIo%VC'PO:8NLr)@?D?3/#8+s1SB<D8Y[]@ap)9P0heE7*ai0pBI=su^u5a<&c95*E[@%PjJO.E'B,kQaP__`
%+=0^_)FR,0"0g+GL">9e(t^g&"_8;N2Q%>0)->$,:tQ"/D:1@\PEBetOcD/`FX.HIou']u&uD1^lq\Im$)Ab!D'HF(.Gf_!+5,c^
%M#pbG+HYb8?AE\fM0;<260f$UOpjD$_')6u68SjF&/ucNJqb^'EY?dT!F;D$h]X:WE"tF2OnCaZ(PTeD#Fj-UPbqCek43oagR07k
%7PRVK(^?H0/_(S5+lc;WhQ2C:ZqcVkfeGdC<a3?Fns#=N!@A\THNk.G0N8n]F"SE:&&MjB#&YjA=O#Rf@&k.M(3V#JIFhG\\.:jl
%7#W@A8K^6`cCi.A"Ud(L0m9YnN*pF%4SqmDTV7@1,B!&*pstcU1GdB1a,/Xf&Lk_`=fEPQNmc&C366r23gg'U$`NuX,-N9X3/VUT
%2[!`3[sQ&M3WR>G%_.^o7$lV(^5aDhT!0iY_SLN^QsV(aeKk'0OPB4>AV:HuP],A;M$heXD&j;\%7rNXe6LaI9Z/B'^kQA(d,^8B
%)PR4)$#DSa;G!Z]_/-E^N%d0MJJoiP5Rg1;_/W]gUE7jm]fd+`pmYY-0>ORq)[:>^>rloL_>tAKBl21c6><rK'9Yu*Y?#^.!b%Im
%/6[I:,K%kUN/S.]GW);Z7DucNqJa@d.o:WXbRc6PTqE;.^.@jIksJ^UE7\o\_^S#b>6%,;%#VUbO\NFj(iUcc']f_c;NO(61/L7B
%8+$FP`OaDTqHf\V7^A`cMMFY9Vs^e1J5Rq3YEB"I"7j9>['\thA>QY6LuhU!_`ZA/[7'S<83g">JE.;R@,/IZ(EN0'GYNQ0."A66
%##[1_0I,s/.=[Jfh*HnP6od^";3UmkYXJd<R\a-Bipq9&`].cM`7]B3Wgl!_kiishiF+.^VPl&'6n8nJZq<V]h%1BTTNuB9*>qbn
%'Y2JMaRE&7&`3bVr3DO`Z#QHkm)X2UO[7D2@9Qmoj;CjWaFP16.6?(HA1,YJLaJ5THpuFq'So4_%e&g5F<N-<l[]\YL'"ade%3@A
%;^)nj%Egj*;.plTfML`jam*kgK>7JRA[>3R@1J)0Wk1N3e7Jf*O2[)Y)j6p0i2$TZJB+X'WGNDDEk-^V/2)Xao)e5$;ERNc9#/iJ
%L!3JI,S"G5'ZE;aKej-oX`a8QW&asQJK[%*6/'\lfsae>.L!Bh4VHs<Km)X=aZW[&&p#Ca;AU1;1CSm.CBf>U(,=#D>_38l*QCE'
%fb-iTlp1FL"7j/V`1itST>IM'.j!V^.)h":e0qqNT4f='<g+H"ROsst=>c[mTib'M#n1-[aVRET.!R0h")4eo"I6q#j@7jZ58AFI
%4qO)u,[*VIRr&`':8Ti%i1.qXJ(3"$!SHs&3hkhgE%Qkh/.!eq$O5rS`)(.=.&Y'VMYac\%#&gr6Jlp`>$,fO5`FCL[0g.Q#=B;F
%;="Q;TA3)WB_!T9M5H;B?NX/\67Zh'+Jk$6C,i\Z0FI"Tba6o(;Nan9?C(4n!t$"ka^@\dOW6-ZmQi[,p^tJrd_]lM_@!lKFYKrn
%-FDl0A3S,JK#CC&3[bG(<u'mA4YrR^cL/X"@QQ;0a,M?+<gX#mau52`!F6P\##L!<9f(F@?3)V^/o6\QUh_-B"?RY==C6'nh[`9F
%8hA)[H<RDujI-hm@>2.G5hhM]HB0sGL-\"!-jpO<3Q4\$Xms9.BJQ!@E((i3BR292L'7fuXe8`e?5+87>\*u#@m'gM[j^5S"pIE]
%fHm2JKYW.+CVg'cCC:e$G7_NHoI5Odcnd0*m[b"+9\D9c+HA#s.,^IrJ-f.c@2,\\L_CI-LS`a?7"p1Q@I)BY`I^GD_dt>H-j#/`
%A4pr(acN5.4PC<NZ[`9t.0`LYhe!'%C0P>XJd`g)KZ4Y`*GZlZbDJk=l09oaVKRK(.Dse_o<ko6\D.m/5^A5q+B#$.!>O9H(c?A<
%#s$Y"+NN8"KoJr'Ys,tk55Vr/%MN@Z#:Pc<h.$j1>PfqXZ;$#r.>KsBil5Z'=>q"8Ud@;+ROU'9&?I:i_3PKiGlZl^Fq<i.&<@#?
%>&%jX7Hj4I"p^CX5o<^L[]-184(pLsIq#'!QI&_?+-Cc*p*t?aBUF?OYe"%nCkSL$@D.`Y\k=]$QpG9k&1\$^S_]Tc+f/$_#T"S%
%3$t:p?&s$SN&b9)5%7JE'QL&1CA-*ZHDmV@0a]So$9j;I(c=`j:Ab/C+)$tc&qBIgJ-Z:bcfZe\ARZ`=1rS#Rb7D^:OKQS@@3j6V
%4DaO(_6fsUbi*f4C4MZQ[\VPE"V@U&OQ$B$$9pkY#@ioskftU2PT1s%)&(]k+<i&m<hJAce..]?c44>N-'F6ejJ9&5Kj9K:kk7/$
%,0;:s.iGcZ&8YH>`aqNu1_:BHl'&NP:aXgV#K5rJ/`##2',$ERJS8-O8)RNi*K.eqMG8hh"L1M7@MH+\Yj.$sJsc,\S?B]L6=_)K
%\qn/X6[OlGM?kKjB$`I1XT@aO'nk835^>8#mDWsqMS2O80V'kJLbDU0EhieG+_b[J:PEas%XD&V7gR2[2UrdH7+YX`EKuArP0jMR
%A`2&pYhTH4Djr5m*!d1>9Q$;)ppS=*#U>+L2^]C)1"RZ4[&m#t].];s:)'Wn"$#qjY&^foliDE+2Q<Op/43-K-k(hT)SrG9$l9kr
%`&$JY"GV:dZM`r.KN"t0,7@$UMY/_?@**ZX6BL9IfIC*Rd+\id'G6ha$L<<HHT`QLEHg;p_9q=#*(,NkZO>#e$AYARANK>%-BN5W
%4J]Xk0n[$<aRGn74Bsqd:d]TI7o;:3Ul$Pa$5HCbiOoDI#mo4H0DL&-_/QAcR.`*[^j;$BPnJIs6lI/2"4WeC\E$j6MB^"bGQ_Al
%^`]KAas\i\QO*<<]/OQ_'1agn@(=H>_q8PMNP]Zd"2Q8F1#1%HNs,#YiGod`dN_`@WZ,a:MunRPnY0^-i6)uMRNCF<bp;k&&\JYh
%aLF=uhQ;u.QB^@$\d!h%hi?o_^Ek=#'KYP!1Y[k2&'\.IX`$9F#0RG`lk#L!n\#DIRVqj2*A@P9>sH.RgHdMGb![(D28LKo?0]9L
%30+uNJ.,Nh-jiru*J>Tl<P]l#9##nb#(gn;5".>#,[cp"G-X[I@%Pdo>QP39Rf#J_CPn>kDufS\;2S`pP5[k1QE)e2V@&`28?=SN
%QWJk'r&nDta94t<%%TCZg/(8'?lXc^(a17g)6`O;P/qLq)IaQ=(TqY-CO3bs7*e`7R\^>ogc(ZmECDk-TojnbB&?A:&1sX$fMZq4
%>"MU)c'^?N"Ai&<Ofh$VRAfc82gde?;Q8l:liJFA*T+d+1"@-rBn;[`X-'nUP/rWcB9:;4eM!)l\UNo4)2d,j=OOSub4dm,Nl^_M
%JpcI]O)Ji`""+mq@3A[6K1T,V@]fb89/^<+=n<8I1WHC/JL76l$k=_lm:fd.J05>u@(lfK@Mfkh?$t48,.Y^UpeTY5-)MhPL85MN
%KL47rV!bcQ5NX`.1a.LJEVU&>LDInZMNr%IW?7-GZ3Hu(G>eo.&a)*7gtYm[(/UA_%a!!]=FaAdl"=MlF\k,N^LZg1Z/V(6I%uQ.
%.Q*BTpS'os9D,hZ"mIV%>a7fZLm#B*!T3*\L8(L1Z7Rf)@X1U;kY4kl4@1X!m%Ffi7mP9963lN+KJ%6dfun[s_K+(T'3N,'W9T/e
%>bMMg+=Z7%4Z#q/&=AWfR%e*Z#%>6L>q%Ooc:BE;e';ZhQphJZOrRUMk]1X!38NZU4'`]2Ti+gBOZI&[n[LsiTj3\4?8WMdn4bt2
%3PP6UW:<cAm2B0?'nLrbMhD9\U(A)4()hE"/%"X9i>fH*N'%I$%d1?!ohj]_@=fn1d>\e$1JBaId7\369Q\mK/-]J7j?8*REoN7g
%H[#tIF"rp[E@rj;$-n="a%q.JdJt-^&Y"uX@9&=V"O9ThdM6G@`*QEh'Gh0e31FYAnQMW/$p7G2f'(\npj`bg70+chEU]Pd`RHoR
%`Ln(*Ot(G$:hU)12B5)$!T,cQHYU\m.O2O(MsXaT+^jh-F&UZ2fRO(Ya!"b/$>a+dqC5Ug`J*VWK&b,r\W?&=dI61s/\Htc)&taO
%O4NorriO6X6b#8('3;86D++H-VRmXP$l*11bm%B0KI'MqYCob%Y5Ror0f;sNG]D8q_HSeD'mGb^6*F6dR1:$a=EuAig`;C!XA*--
%L;7O;O0)Te=UNu=n4;8tHl-iZ]F,ogNYEuiGu+ia>Q)F8[TI2VES(ff/LYm;MVbj8#\f9WJBUp6&G\KonYdMEE+Tu?L5'H#YUUo?
%+V3((Utl.D_)X\F2h<f\dWh@cQ?n>ZX=^'`KEW=[&Z3JjHVXb4S8^_6^]F=6!:qBA\tYuF:Rk[9&pafk;&6]ML^cZof[plH(Y)?i
%MI@@5H(LS^?p64/eg0WF+_OOVA4p4D^eb-*Xk`:M_r2U-_,>De8W3`1>_s*H.hMpETM:)r6O+"+[dAYh&@$8B?=]C1.%Y:n%(=kZ
%;9]01et+Io_4.:02\o^;>@YK<YW/@$+3:>].W'7m-?-p^So]95'+fG4*iV-IO%M44"ZR[;I$h;!>V`$!k'OBmaCE/b'1#Gf=&Phb
%XeD31A6%X/]l)s5C_Y!VX!![\Z(W"+6pWN@+XtbP%;e0U>n@n*BranB<oQB)6'^[r%'u5lrlj/+@^+2H$#_]24(3\Y@j;BlCp5SP
%/0DaAaJRah:tib&DK\5)^`M>W(RukmlefWi!#+^c#Kg=3"=(m0;:9uhjO1L/?)5l&D5+Nel/ULRXtX3uD`;(@f!ABB(ek>d;QF7o
%f;JN1(8cej?Dd8p$hMb4N7.r8;kbrS-u??.??s<t2?c6?k1CB"_FGr;lA?dT!CVR$$7>9AU%I^5!8ilkq7-3eo;'!V'c7F_]*es0
%(]Ie\;&c"-Z(=%rn/]_ZHc0$k1<tYChiEC7==POH]`^gX'I;@6#kEAtR0roQcFt<]8092hLn4\WqD6TL=Ec;<V9=`o+^A^LbbA;'
%.gd,^jl15Qr+HE['-[31'?J!cH4`KS_AGt[n;V--&Jc^\o\rgSL4q$ZJ23/07LT=.)`.i^%JZ<^&2ru.86hoOl#AVA>doMt*o>q6
%Ke&(t!$?MqUQHl[4LNKiqMuRK3fZT4FTi0d_ck9H=L[8B$3kGNCu#<=/M'O;b/O,hhb0ZT.aCu50O3fo:2*'r%-@ch!\b)IOuS&b
%oUrb4W-cS6VitYq[)lrrm3%AY1nQ<^Ak82ES2[Fa:riL4Kl>u^SG=JgRdEUm,_Z?\QtBD6d4emFfLK/:8+%"Vc=7hc3G6C-]GWd-
%g2M8C+!'1tR8^L$Jo00tL&rUf*h_I>).r)E._u0f!feE,cT59='\Q)-7B-D*'_((2fXX?UL3n>4.a["V*`Z2+(,2+C]+g:eE[0ed
%oc+YIPUq(+-?IN*?jr.clRPS8fc[Imr[ZD//d<_W*R^>M2D7PQ,C<EGjSSH]\E=5C*`dY:mOeY"iM!<6f)3O05hI@s@;#=^@>TSh
%]qS`$JM#U_YQi-:5D;q"GRXse%$XAdD'>(g&"6n!dbPlLK;b8?[)N;V8e!o;dO&Z.`qTB:`^r.C)+R@+QF9i;o8F.6qU3o4Gu?[?
%5A3=$>:pD`aG?[hUI3)Vp.])$eq>%37_R,L)KAiq+Us>F[H#qjN#0-,Adb*4BYZW%p*),H/LTjnMI9[EdMrqIkn%'IUc'T='RFl^
%>[a/D3&1nY"PLfs,dn=#HB*Ye%%PriDrBo44Y2'I\`%A*p,p"@i1fFC>_NRo=FsC3gIrP66ku#]OUsstCGQ]=p^(0e&<R`0g5G82
%0W+-:%g3Qc&Zk4`#fF`e'PN@:OqAIL?603,ZAVS!6g^.W>EjuB8QYl<h)&A/nc<`jZ]T5fi/\?f7NYuS@_sIk6So,PHRao3&$UPn
%oT@dcT#m\#>;,3CM?Q(E8h:b)3tSP7QED"^gmTsT:HII8<=U=+NpMq][R$;,Q#\$ZJ]toB992##\'eOcWu(7]&rOir>Qq1dU.L>G
%Ip<_%5`_cb/.c(+M,hpJ(I>8If^9n;#Jp2g."!S'G9pP^3l7[cX<MT8eHUD.N*o[>j+>q67JE3+UNii_AZ<bM(3W%bBTTAJRpN0?
%4\)a'_R/J5`=]2">P9#!0?OC.P#d%:J7*ILL2SCG&^RR)KeGb"GURIp8aS!a-,6&D!UJG6aWE-E&)EF&IeOS-d)N1sn2m$(_W(!h
%q[,T%0/E2Z2*TV#p'o\>]+ZV7^9,23OjGt4CXm^Q<=CtY4.$i%]%mZn[,(Q6ZMp_,R/!JhYhf1p&Q3)\'fc$aDUYXD-o_f,?jbQ7
%<=6]F3mp3pJ:TMo8Hl2`lJ?Lp!EYS\e^"cn\8*\GO@rmKVA$]F7Bm\23@F&<PQbi7,^_9uoPAB1OISh(EG:ctV\EBHScdpsTE7'!
%8C+mk9L^WDAaAt#k.,4N]EID;pW24"a6oNA4CW"S?TgZPR`-\T!;H7'MH%;IiR'/-+WIp75LSYehnsU,@#0nLp3`0-*$2u?d)I@G
%.H<_Une>:oiG'3L=G<G9],p?3Yn>+c85QRLFMo6RU,9J$S=;%>Z-#lG4ls(V=q>L,V>cm5=>-?-_SsB:0n_4@8CZI8Ffs&R*2-Pt
%l\+#P6<cmT""lII,GgUfmk#P<&M3_r\9&3,L5SEZN(J6J"CX(LG.0n==K]e$$G>50kg2"bA"PWCc=W1a#Z]ZN4V3:P@HL-o[*X4`
%jX-m5)1n+:G#f=C5VU4lV0,7hOt#%^ka2HR%BAE4?sJnVR4!ICNaA]jop6gdl\*)\IaeF[-8l>f^#kOSLR"HIkMbYr>Pop0jluTd
%X2Vpkc]P5_p'O<BWHp5YM2W^>K7514*9X"Vd[$s9/\Bgr<Ji#n7!/6`@I]gCoKXA@mW/ZOqu9fGP?lA?/3;u&r"%1@Z6b`AFTF'6
%1u3`foT0e#aGgFfAK(J0G?!n`(\*qp8u]n"BA^&A0%QK1.+h/k#cnFe;L#:PF<rW[e'<uFkg>4H,sZ]8mYR1h1)uboIFI,L8W'QV
%1/9k^`\58AG@?^k%-^'ai94eHV5_K\n"39T"PP@C,<TuYQQiUd?^4"Q8',1MX>_5m5TY"3W^uFb]Z+0W=Q2af(sskrH$?HXY@o7J
%psH)KYk61W^7Q9-@*fYqW2r630oBhA]jh7WV)Vj,a[O.l9<)eK:o1:Pf'ho"fZDG\_C.r(WcVV*hBOj7B1,l@]A\Pd1q\;!R[:KP
%MVAFY;$e_$%hY;6=[qTnm'/mWH<MB*MA?e/;9/ms,(32(c4X_!H>ARA"kXa&P_%&3pBS%N)8,jui\O#u?0!-4?#h"HG+*X/"mN'+
%=rJYE9HMZ%ZUcASi-loV0qhPb4!4Yc4^iF;&IgQGm"*nHM"2he]DKcKC2+%[PY#t(Lj]d39FC"AE"o$]MkHT4Ia&bmN"Fg5ebE$.
%5@]?Zd+C6HC^\b=/rhBeKO"%KG)fdO1_BLg)M*fZ1-1N%l*^W4!B:l+7mH)Y<4Cr(O=,rYLR=kVTMm%'?D;\9nEEC9._&PpjUM=<
%4>`4G.15]G*YL?ICo^$5%"$-^cKU/;+oji]pB'VB26c)2QOP\]l7)dMgj/&Rm<jS!<ZPu`$$tcB:$B42rod[0M(=;T@r`mZrAIB2
%\!k^Cc\D#kBKr(e?+./71Ij3qC^8F6^-F+$LBPK@D_Y4Q5H(Pt"!EN_BP87hgQ%VhK`,2N+]Qj%rPm6V1C3Ni^)5]7EQR`$V,9WQ
%,UHl=,IgM47B^VWVs%dD8(C^Z81U_V8!3?S]!["<emX7+Eor21,oE"OXtI#-pXC4g^+>F<nL*Ga5[I+NQ]qF6QmIm"(o^mh8>gpF
%"i8+(&X"tf2[%25l1r'J.EG7o;8P_PN,,#?OEd6(8H7u*^>@h0]k`'=iJoU4I5`RP)47^"5_>l52^D@"q`uHM3cDWH.q$3!4tpXX
%&e?:U5hjtS%W`,`6Q%Dg8"<lkIIT3<8U,UH'r).g$70WcSVDn3<Q(t9<86ZTX*6D%qV6HjQVu/Ajt$5#k$JEeh"Hj,ONN.YgdO$E
%Ek[`m:?bcqE/oS]Tu&LSl>P+'-nHTnA#2Fi'Q!Ur1besmdmiUPA)-]:ns&!r2tIg`$*<)cX$&3W;2RpF]tR*sf8uqpSuXllm@SGa
%]'q,=RWh!)&39?sPTs`lE.o/smqmLV!QnE_p`T07]'tk_U5\]k%aRU_=)=Ko@0$1obCHZ_.2P*(!rUst[E:'BZh:2Y"Al>#VMujW
%CI_g]de)9InMA8cl4K0`PAICrKi#pJrug]"N@"BTOJT.%^Wqr`^bKt-+'_i)_uh^GoV9nm&BCi[oQ5-'b=oKXNM2g:POBq$qNd:&
%+[5D"(5'CF_Op8ciM0UFie*+4Zq_aI;Z+^XMlu,D$Q37TjctuH5-D?*dKg3q=J"5&d<a9lMe(Y"l$N*?1&QRS3)Pq*FL@*14o6t3
%R2(2Lm/lj!8n/5j(J86XFXGZmY3$eW0Lae)5lJQ^/g8t9`_/jH^^$/eSpM'1JB!.i+0Zof:&>%H(@HcS*u0`fOBOMu3.j=#;8u-/
%#!s8t_NU5r`Z&,S<KmqiLZ6e,.*0NI;6D>W&/K,50sQojI/;lq=s:Yp!D8^^9)YuV%V7pr!ntRLJk!0[>QC!.YL>k-,euU#HB&1u
%C#e<0iThW&(3C%MZg68k_K#W!?q1Z!Iu26'`)?ebDq$;==ogM7D<-K523\:flJiURP)Z9Qa)8SoG__X/o1M)T`/=1knI&"i/:XEr
%dtbLI9-WH(2r\RLn.,db%8sEcVM\Q<OiZ%4R(mpA_80:FFL'Tr0XSNjE+TU6fgYs)79CGEfUJ(K&^M=.8RW0@G[=_A[u9UVA4XD#
%5kS9=j7e43E[8YuT=t^o,SQTg*4T]O%1na6;[Z\8iEqerNtjs_R]D0(K:#0gLe.s9N2M^GaL$dL<5Ei/\OokR?[0nj?WRNp"(9"5
%$M=<n.]N@b)ao<aVfsX[jIX==`8;X1f@.Yj<o)dc2r]AC^pB-P,/K?Q)A$AP&<O3BgoXB`CqaLN;i;+HV*n"t[nfb-K<P_4Va;G%
%1@1dWe&Y&8@iJ:6jIb5qV#5E(T.VnS+r9;IKpuG%XRu^@"-KdG#=C<.r=dVUGXOOILL7ne%nFdZ@n2(hU4&-(dEHo#'cUQ!#WCg5
%Sn7c'X9Ss2k/Xg<h,3A>Q>.<eFOplo7i:X2pO2o-)RR_KS3KX&,uDpR3/u4]9]N!FdrZCX[!]*>5+\]2iYQJ1dHPb3_@8Z4X$VX4
%5Q((70L-/I0hFX[:653?U,V&Lr2YSA$@b.-Z![=-RKEKeUG)?:PJ;PC40K53o&[TI=Zfh:p`V2.KMI*NRm`2@Ka9_.\pY8'%%&+_
%[4c!O577TXN5)A0:n*CnI9pUYc,cT0fAodX#_BXfBEmgZ1[J"&2Z?lbfKOgHnG#JA;:Wbm61K=`ZniOu/B86IK+o<>O"0fnZ`$O?
%18!oL0)k@Z);;V#\8JjOeGeZ<00=8r1JJ]QG2XsqlfOBN&HQ2O.R@=Cp%+\%&OA0b\bC/&G@4K(1oAQ1(CiB1?r4QiW(Fd1ZrNcn
%.Rqd4m@*GJ%K;:VU9fLi\K@gKVG.CO(7feC'2\88+3]j$p/!&TK=&<7OB3jtK@CKs+m&k<'d]nWX-n\QNV_-_g:t;r5m?iSK6D1,
%CX>7j3_/+%n2:%+bAN/d.]$CR0PbAi,kc`Q*g]_tTq!FQ&H9-)Eg;/K`2mT8.+7),D`@XL5b2a9%)l7(f%Fa/Sp7-J#rOMA[HGcl
%QA.G2*pR((e]<E-n[&q>\FP=Wp.8sM::+OnDDQnH#Xq^i*J<:\+,'8[N<<$#(Lr5tUbJI`J"ilqYR7qE?1tY'4OM[F#E_@Z]k\5k
%\'l@\r-VUH&6Fl7+l#R-Z>Lq4H-8_(no+`Q.7IU]<'HCr>/mIglfI.'2?1)h)kDM&(2dC.@#;]FqE7e@n,%R<@p/%e6Mg)E>qbO$
%ro.kRrTf+*>3_q_S8rpl$c]`j7_/`@F[MYR4!7b_'H4\)BiBr*\t'.%JOo<]$Fu1aFFHLkD@uU[.k_n;PA6Y>Z#la!-Y^q&<RtTC
%oN.dAPT?#f5%9nbrB[#<RfKA9Sa_]<:(C.';KjDq2oo@M@J95f=)3AM(]q+l+%r,8'Q6cNjIsK]*+.%(UtJ1n9MR#273!0X+2&Y/
%Y;.Zng-[T7Kf6H-)idhs-o//"C5X!Y)YDpp^-cc07*b#':b2EBf$P[Wh3a=Q1o/oE!jP=KaWMtC$sE1JRCUa>6621X#*g7b%u*8?
%"J;bPNtsOl7slbtgi(D1btG#_-(b:%,5=nd5F$kljaVMQImrRn9uiq\CX>3>b:Pm)m)_6:]VBm:eU?!(KI>J3;g"?Q`E(fQUHSa5
%P1ff_1=sVG4GremG#j<=eXdicTAoO]MJmL2Bq?=[5Xdd_g,IH.aDbr16J;%2`mbW$"5Z%QLSLQA7R$X"*i9F)":$eff'oc;X#3<8
%V<WNj:g+2UCO61=%.oQ7(JC;FS<:Af83NCg4Z@DD=:\"NCh0.&IR<^2P4Q_R)I0*8e5<u$JTor%GpgqCO5>#erts4R!2\MS:qa'-
%I31Uh726^:Ylm6$!p"-_G^7%IOY2dA5WY-1^le'd$>T=b\-ecKWP)T]B0m$e^K6J+N8YMNb9i7$gJRCS6M?&6\"a-TRL@#Y$8l)]
%HLR\/&7pL#\cf*tn#%4NF/QU?VrmsNGkITij:9K"K]KeN%C.LAd6olOFPbobUhA4)"*qHs@$qE3(H(]Tm(OMD5].dj$DP-aGYkKk
%%#%qIZPZPM-.Z6hahkr$B:W:na2;^+7kV&IS@Xp:,'nii3B5PEoUpWT]0j^O5or()i7+IJiqQT@^*2di_e5l_E(A=o<\sO'krKpY
%:g1RP!p)SCao*<*@S1hOC=@>U7)rWf-HI7oqr+,I;R1f`2Q?rJrm44+YRqod)A:eF18DZgY2=:M+_+V&<Cr@2e^N3n&N\QY+%O41
%A37^ZWOpV8$!lbZ451Z(Fp\bBnW."Pg,HC"]O(1uq./ja,[FIpTjo#hI(j95<#EXhR(?k,5t):H5tch5%,<,aJF)E@NhFHPSF`i"
%nH+Gn<UCI\')XWN-HU2"EQYuPBMS-efT4]P6>6+)'Z[nU.dlcs[Z_Rk_B)gP\]WH:nMYXiZR$$=Ql]taI:]L90,ITUS=\bJDL3[k
%2p'V1+Ben10QisDkp"3eiCc?sSi4?n!0.g)XoRq>L^QSp#g)=";7lQ>(.1_U!E_U*k+HCs.-Mg4En@N2X_uX'3>rc#WIK06We[3u
%9B1drUV=:#Ggp)='O;lY>-F&DMs2\IVc(R[opp*_3(XGjFtA.6eEOtgl0EeVkoIf6[,0a[`W7aO,j^>6#f`.+Q^ZFIJj#ceTYg9<
%+usEC`jDe%2pLAUNj.6lP.F86nB+4^%j(b7)<UbK/B`,)qrXl>,L![&amHLjE0V&3ljmSk[8+0Y;Zb?4_t?&AMbSTKVPd71BUP%_
%Q9Y?E#HIrX^+e6[X<UIFG#!Zj\YKPj25[kAK]EUFK"g;[5iKA:=+QTP&AF<f7/qR)?CCH)UR2KNR"0J*U0.L_AIs'OMCD*!;ij=Z
%2Mbh!>u2L+7F1fRZ^2DCT\[9fSY1hTP%4!D?RemndL8YB(;5J,Hj=q`86H6?7tnp/$^eHF)GmElC/F.?)2S7"W&-]K<NjhoQKJ=J
%,$-]i\iFo2>ks26b)G1(_M`GfXA%=8ALnu^/-f2L,(TkFr=lFMBL2<cL(e@@L,A>\Zk(oiAqg2*Hg@!q<NB:s4qTt%.=:PCZEF^D
%C/?mQZdCFEs0@b+q!'LXh-\)WNaOCXQf#Y1LTaShP;:PC@im>G.*Y8S>>-@U7>A'IIC'9<N/de`!K(du!+]#Pr6UN9')/F7L4;<e
%&A'q#?Zu>=j_-C\Q,d)].gZJ027!o"Rsp0a'js)`I@(Y+b'!3P6MfDAEB(??M+gEj5%8!7ShqSRMTXSV!(hZsrAhUi5iu%f?=cu#
%m+h3[23`PK11`I6+LaQ*VM7:L_un@gjV-)KpA\f7MH_u8#h#/l26kJKGo4?e61q_2dt0%ip<@$5ck441hIagJ6VS?)EtAGe/H_!<
%i]A;N1RV!W0SS0$QpNob`S*9Locb>jN-ViZ-`eC-&u?]*Fo$/5f(6]U(=nQ5(*Redr#'iKDVuuM.:DqkIrqoVff30"W!Ro9o"<lt
%\ggb&d@q/kcD2+EOW)],8HK:#YTYM)Le)6$qoT6;CsbC"<g0Fb9Fp*r"&<eZ!MIo(+%3M'%q>Li*JT947Y6miIXAg^H342/=8K2'
%fZEm^UYRZ[0rH1Km(D>:!_\5=KIlN9=Nt@'S^VF!>'Kf87j?8o"G>TP]^GT1`-7X4e*[J!F(D>3(:B<(b'YlTWQ3.MJ.^G=KC,F)
%bnQ%!kuIE;]qh/`m-L1Q-9%#UoN<5&0R]GiVG3u9B;^ar@REiFb#.5!m!e0oJY_VT\M'Wc`gmjLdNf>[L#S7s8XrO(R7DcUm^\]p
%I2F,^qq*m*@E3E,<enlP)oV4L6<"SjW(XY?^jejp6Trk5nd:4l"S&+3c`r,-FCr:mCX#:C0AZ#2--ALs_C$;Sr0>W%3,D\mWWpTZ
%"gj*E8PGK-!6mX?m<%JA?RV=b0A0Q^LqCTnj5E^aoMFY;0e^S)D^-P.]%&=.8WND-B$!_O<Mj)h1TtJ5@KOf__.Cs?1d!3<FUEj4
%D*]5'UZJi>:VRLD4m^fAV(l8Ms"pa<&^sY]_<4k[/ST+39]`9#PUR,?+R1RbFuUqVB*^9Go8#bU7TT"N0*&(@\Y2fN9:KB\F@_K"
%pEO+?/'M7Z<)56O<p"=a,Oqn'@'+t?mT?/,C/?PdjLRQ9W,>.&08Bmjm@qKIS?^t<:Dp6/lMC:&XE+YiGUAiCTqB=RlkrAo\j%5N
%md0E%8mZ6?Z,*;a[OAB@0)E:"0X')^A/CJU0Dljt!'rbs%QEVUiC)?VUR@YX#(D:_'u8E9XZASqo\cT@ha`TQ;!T:A%qJtPPCR4L
%I)*_?N0PBSCd,^L=NFRI;Ac8o7UIan3EPQ1arG<j?CK=fZm2D[$kQ*3^@>$U]S0@0=*$c";l,F1q(WT@f.d*GbVcf:(#bPZqG.kb
%&X_uP)g.PfZ!qfAT(s"0&(;RqT:-g<W6NsiJtj+@(;Pt;:Df)Z<=G.o7399<L6R@I27:klPppg.o:[#t8Wf+79`-/Agok10%AOUg
%_-Yb.HS'S>.KDYKm+"onQmaJ4nY3-GcVO>u6537C5MD-p5\;iO8<#rgNL3`oJcl0//!&Kp%35HfaTL*LBF5q<T@\Ad%V4r"nuW0/
%&.3,ZajJ\H`LT"t\Q3=@KHAE#hn!XI(Yf3l:V0c6?')anHbE'+QO<n_ACAXhH!H]%;57_%n4MK[+-nb&OIZ'+h$*J!.:[R_V\4V3
%7>S>hn)gAu)8a2&\JWLiVu[m[r)$a1FXmU90omq1CKjN8]VhSF63f^S&Y0qHjGoPV<u-$;iR-mdq#$lt+GZ,W</0.F+9<$;)b!*i
%h#h9qAd.1k3L"'sB^q<1plNW99gPsl""$-hNKPS.<d"V3,$\`%+dH8!YfjmJS/t7aO1#*3Tft]kYb/6!,mKIDDA'K)amZg]_,sOF
%*9hGQ+DJ(>nX\T8r0+Fk!4o8p><pb;l?:sKe0e7H*#f"FKX`^"^K#\TL3hdO91Nk,G:Wcp<W1#aPSFr8.ON"kG(dnsK8IH7\CKp6
%\YQ1p&m'qc^dn.q<m:5q!4po+#TmN4+n2g66ENJFWY@K[mu"Pu9/E)ISm?UdGk_oN-l+80A0U=R5/AOtBb1o[QDY>o0^^TL):V[R
%&rSl,-?:!q%;0b1Z.^B^qXpL#CL&CG9<lqlM*V4:5&Q5ZA+A(c4om\0RU0`I&^YYb[=G6S?ACaR-01%]F8ndYU!T]lYKCsL7(DlH
%\2PZk\ffYT`Z4iRqc==T>CsG\b[m8;%n'rVB!<R<;N0UkkA94=8sogGU[V^8>G+6EQJVZ`;@h+$OhE*mNNMO:kq=7d$mcI[6"R/h
%YD6$Q'B-)dH#CYRXb$IQNE?Y.;=!b]Z[5(D=,Go:NSc"t>/PqZ3W515lNaq\qF&I_W(D,sJ/@=4,E+cPVURk'_)qmpJKt(&rd;dG
%[?1DtMPF0cU^\<Q[/$mASQ@Y\D?F/g'moJTf^g/Y*-Zc>CQQ'5gL<1g\[#oed\S,q7n<dP.`OF8M)Fl"Ht6,\RIQ,A]G*-9V,0VP
%gX5S<7sMtp;XAghaNGM9Tq7=9(o,t(EXqe`o-*@Jl2*Ga$'St%n+j:RQafPV,`a)'SisL!A,7n8[,/C,5ZKuXBocX(W#kmlK1^sZ
%lV'*jOpp?15"k\m4/*(C[%+$S;0[7fg>c4:JaR:AT5V2L5LRZb9Fe@:!(p;&FJ?B`B+@b/dZ=I2_lOs0SSXs^?!9BP;=VO3Y>bn:
%Z'fkhA:cYD6;N\]2=Uju0ga<8Amb^BXs?a.WLk4?/CTP$"0VN%hC8cmN%Sa7<eo7TAiV6P(fKOnZ:MsiD*eOLZ>F^[672kt*K4gO
%MJ:YWQpr"a??IetG,10B/6OP?4b_udGEA$I+`+Y9ooZ@Qp)LguS\lLlVV'((^4%qKW=c(!'=#i)U%"9['`p.?P5stYnIbmXoJe%T
%h@-D/HB#L4'Y*f^Y-MKl26Q0)aCKmpCP'BSru^\^ft;29Oe`c4bJDR[[P?YI4L&-!Of-44SZb[./hFTj%!)#89fcSP\<-e(M)LK%
%OmKWfcn,bY>hO2rh.;Jgo$Pq*\FGtnCj/`U>VmZX9e!pR3p&DB^L]R8T8i#oeJ8p@kr,5jabPZK2j(Pi3f%OJ3nC(mYjK,f/^bM;
%qOY`Za$jm/a0:LL<Ptn8;)MmO(^\m813Xl3RmOtggK_XiRa*'\4d)$nhH]:`/(s5UmgH=[8k?4BI\S/\\rKo-Z2'isl(a>6bDLWS
%26*@,?JBa@KEbu:)S90ETgYa`Yo//P."p8t-M7)M/Tt=Bg'X'd<G'40PqVRq(<a9um!sVP=U`eOBDmgPWE`MdlNnJed4,b-/:TEb
%V^tXi^tIhfXI$BV.'c<5/SZ;i5)2?$ch)M5O/(gGB@OWNRp:fZ!2f+p^)bK8N7R"E)p/aI%5[bL@9nV%,3<USSmc7D0-^Qa/.Of_
%h/&2&lg`sGFs_1LBoliL&>BK!BB/Qr]Bu'^2Eb#8Vd'<Gr1LJ0?(hpT$M?2EkR>r#kOkp)LU",]4'[I[Y40ltE+e`,?/l__>L*um
%@^E:5s)`q%NpL=;:PRTm9kuA>47]@-f**58F"rOX/]5g\QDSMg%jMo-+6R/WPhhAh^XmP*R,3MG';qYi</<2<2DV]^[1'.rVd-?.
%MSSDO=`*tEII*WG5/]San[_kblR7JjY2kaAs1\AN+)!@U`/L.5<Y`DX;`,%1i65J,,E1W0V<)l=")tL"3(p!g_/N\k2<gg)i"%8R
%TDK5XYRDY/(io>EmKfp$T\oEpA%%W/<>.XJU^0W?)ds'$+Eec7?^2eD%'%rMg'4'C0Ij:R&s,<U#Nasf$G3=Pa/X0S8D2q6[N06?
%9ha6$,eZ8dO)r85g#$Oi[RM4WGYc5dnN7APegDPOK&Q4LkGOM?=+6=W-E2R&hFF?#0'1Ltb:KHhYK-,C(OP7bE;a4D[4:etPj@YN
%0XHPKq5"]:#t2?AfM;S;`IF_Fn;P5ao*0qPU+s+A85(&>qJ6IO)tEGZmB*sN,GT$@p:K1OXXo$_/(*26$h?"_;Lq-3KJ)E:27&XH
%$9,t;Ru\cNVE-neT>'L\ok#-]4h&U)P:-s$8!$)C^Pls+cUmZA[)6(r4Q46R#_G;sNZchFr*qSXK18AK><nab[=Fo'DX-hJf()_[
%A1['Z:VcPM^R+*8eD.o!S*X--cSE`6.FaZ,9E4dB90&*4Ff7^^)A4L(7N".n8a+8\SB-.SV!N90%77I[J2aO+ks03q'l<i+,r.%`
%=>p5b9,UjMVE@',$9DOQS#c<$m2^)D0d+d'YdV0'^aWKg60@SI0;.i4B'8+LMrR,>"M\VY[k^WU`(%\8AP]>Xqjt^o\RgL@rts[O
%/BEHJ9$MoO;+\O:ld*HjM)j7&S->A\6?=h)Bp!8t,!bb<j&h,6WnV[H&\sM#20"0N(Lsf!50JAVU&dGI\]nD7@YQlJIP*?W=(H4M
%-G`P8,f[TO;qVm6Kua+QYKE6.dJ2ZKr:LD>*WC3)>CL(FBK77\[a4kJcZd"8*(N2.oNN;iL.Kfa?,#Ui1WnE)K@eh-Y_^ZUT'O;!
%ZA2Y$9tR9E[^,lA$hGQIIJ@a^^lc%;kg6:Z,8c`34tIG0lFT`[:-`B_/+([ko&H?[q6,jrXh.u-YieQ8Slg_R>,W#oFfbGo=X=4'
%is?3)k8Pbi@uktQ_*q<8S+;*!d2l83.(6nrF:Q#hCgAJ=Z,<AgEi)0UDTgS*)+bkaN_f9.h/%@kV)O3tF<AkCd:Q#-&o1spH?t:/
%qp8?Q?&cp+T$TgiV2(3XjFKjT-]i\^H#^K7*T-1b(pU:BQrCq4V@9O;qDo]-:_=-K/p_CiU?3C`5T]M/b+c1T7BGB_BJZ6cK;*Qi
%GGn>])<M:cfjJ.-r>t"u1$==&.7J?WH0Dd>QA_"cVu7;_U"lKkKet4ULkKp\(6RN<4],cs`$b9H*Mj-.!8!SU=O1a0U4n"jj/*9=
%@FI"l"7Q*XEW$WXb>&+n$TG/<J1`pGrWl/G%n5StpUk=jM=?e^%N4GY^!mDT/OKhF_p9h<c8JB2QAtdISA[OebXN+&Gta>9gpUkr
%h-^BPq;]\K7a?.sZiD_6aSYsWfYfs7dM$3#G$&+=dE7j[qlH6(P<)S>Zi/a:kuT=)'.;WWCZ;%i=>WnKrn5I>4G2;T\grU(reYnj
%\%On6o,ZY*U^T`S%Yg-haWh@%dc.$WPR:!Yl_!W(S+LKKeF4F&0k+5rk/Z9OcO6(4\hWm=+uJ,,s3'Ag+`<YFLc&=]dPA*i<f3sq
%8a#lYb/DNsfYj/,ddW,.(5Qh>:kGm4-4ir;/q:6aXgg/,U`ObRkjR^6IMF@BUhP`]n\C6k?h.2#VH:Y^`7+jDB%Y4LI;LoI0ebuO
%Bpm]d^dVLNX:g=*<n<,c*GA^`DIu;1)$8]]q?EJ#qDhE1!HDr_1ZErs"<(s>*Zm+ub_H>CVmQ;B5$+-^lgF/-lk7*!QuN;+,aib,
%nX<%\pKC0&ba.A2KR8<p4s!N*QZ*k-/QFIB/<YNIP\>_paOjt?P#Z.:q!gkN6B1KVX!Eo\@Vab](`t%BJH\l.YdB5Nc'M3=]7]p3
%^l<YORT<YP2W$CLD!>3=ZG&Io0Y6o&RVu[h?C4NXT3HK8i64NaqrP30#+Gh9A]AUC*l79Ygl97q+^_-7/@Jn&$!j=F`0G(%0CqnZ
%,JVq<'.)#Y2V,^c=pQ^r#n,qfkG/%Ja^dM=4qN_Zj![Om@(JhI*VLZk>m5p+hKY\JnPC7%9*GV^+O6.nkg`T(XB2#7!Z@R[bQ#UL
%7q6;XA!hnb#\0g7[="fs%&D5lKo84)0a9r-YSs>`=j(K.K]Ppnc.dV<P1-((g5a)&'SQWiS87oh=[KX.1#Po2rclWM*Q<bCEWfC=
%*qJDU:<FDk_Y@R[l;,]3N9,I&q0=$t(j)]B_,^`o0Z.E@'\Zjg"smEURm4TgcW<bgPVr:-i9[D-8s']d"Xq8G$jQei$t:]n?1%%3
%.jScIGKTg]C;Ygn?JH!'V16K?gkggr-t5aX.pCsd%VZNk=,qP6qr)mW[TV'o4Q5P!2gc\gjR*n%nH]tBY4>F(PBmWn$UHm0\iRkB
%d8HQ0/N%Z!@-F2*f`%4e&;gR(g_=bNfpZW@?1-sSU0[A,\OZuK!,."c-.gYu.b`M1%g!-aZ`'AVUC].PnYqQ]k&roPbtN[`rd<,-
%=0$S5m6*HXWgU4hh/us;[WmP.15BAV'r1f=S"FT4ol%VpZVkt!4D5#M"Sj(%@j\>0+8]5BUFQU(?-2CuXX8Hno#.L6!8bR2/C)Jt
%@p4jmhfG;bp6&Le??J2VqpdpG.E]i"g>f=:<5`/3-NsbZi#f-SoNh;WH-EaDF5),ZWJ:4%f:dJc6.bsAf-K0Q\oc33+5Gsd^k8?K
%6SBNc%o.OqT=WQG.N.N=Fa`ZX@f(^%$bOF0Z?/$kV[KpuFX?WkEXVK)?S6W<<]sfLH=[(sCs7mkY-/?3qc3Od8[H#t5QNFLkG?jP
%oVAF/%mG.gM4.GOg4G!cS,becm=UfY]/tE8HH@F0lCMC4n[oW-^fRel,PJk6P<7e9d"kt-S7l3qOi6-:9;iKt!3B474]J9jG]2Oq
%lje0K+j:3-rr$MpUf3hjjqPRV$A6g/Za_\(?QUNf-gH?tp(Gi)DRE_Qee??)6H!ie-Jn5pRW7Mf=bXYmJ;bJuOVS.RU>SW0*.\Wd
%*$J6N]#aqoD2m;'$*W8HprckEX+@^,Qo^c#$MnGIj?tUL5tR0ZG+PmO.+PHe;u3th!AcG=/BH$(PA##/jSnUXD;5Yel4,6f@O`%5
%\i'7:8X;gVg&Xn-3&85:J\cjsn/iV1d0iJsh.k8?r^9sG';Lf(f#.1BY70_mqgr"ldk0B6"M+be3&b[mRO6fh$+O9[%PGA..Ql8+
%J<L(%8Q'/#fn=`pB?VP[O=*/]#)B[H8T@SP#YPB%Z+'"b@TjS!^hG1n^V/`Ss.Nkuef+BRr<]5BSX$H*$Fo(=`hEeiR5JQDVU5\/
%+.THf?.QP=D25)o_3cM;$=0PM>2;^;BcTDf50@p_i3XgJBo3hIaupW-o^oQb$>,51Pi9p?ejUIqG/B20?1cI8Sr3YU^\K#P4&UAF
%KKqDlWG]\[d"E;A@sFj'JSplC8P!TD#$%N/&&@%j6)S=UN%+u3.D]h'L27/T]ce?<=G5Fl$r-8&Le]?$:t5'l1F7>sLh[\#r^!hD
%'sa_aMqEEY"^_`2LZDo+@Fmu%CpcS@]>[-%CV^!@*;sNmH9FuGpTd=Jk6;#++H]f?R]>lZ`'<7-gTH;peB=!i.m(d7YnkJY>F?f0
%P+Oq$oMIm%\oFoAL@PEGcp-=X?QV9R\*Y;E!a]Cg.*p?l3NUbeTc?qFXs/"3]WkpIK-'`nI84lYWCG%M4WVDJp6dA@8>Rdm^SQ`?
%UMG0<YA.a*Ek+W;`+3?QL;'ESYn*^qFrZJ/#Pl'\fgLmlLa-/9oj!sY^[c^)Kbu1dG&j^bgjk+iAtrNhTAoI)$3NGgMrp&or0jd"
%ZkUM[Z;1>hWi+U.$H7+05ilpnjD0Sl%FF'ti"dd\CL.4ACPh'.-Sl6I=Ysa;!3i]G%$62/X41Q$UFf?#RuJNUlV1\[h,Po3i%=/I
%TTp*X.$Fs=(beXb_TGAgAu0q$T8]AJira/_V*4[q:X;C3?7nW`bT+rDW=t8OoV$-4+JYVTO<WT[V3hG(/%%H&<_FnO,Zu9$QK\OO
%EEmFrWjb62:YuRcp5"-UqIJYMWh\$67B1))Pil\C3=+tTL)r.P)V)fqjfp=uD+CG0GlEA$K$)4n$QkX1.Qu@OgC;bs.S:8//lTN2
%NLjM56Yo,=,o]lY.O=6]k#52HH]!?AEQ_k"hjs1LB#J^s$K,qohYQN@7Fbd4b$=+BO5<$+0(MklJW"VH./b,!.J8K'IBK4>,u+[g
%;!p2oJ'M;p*T-;BSsH`^1!Coo[7p7Ze+o+T4lMeVA&cosU!R*5QM$Y`(<OC,Z&1\'1HAl0cjT4&026^!@_?4Y&`b$t=V?c4n<`K<
%jiSlG(.PG-s/EVjbd%D!&$&]s6hH!Q3qIEZaTPnl$?X-=$9M!!7!H`(&p+P]qgCXf1G8^fR_;+`7'$jHX8`$9O%I%70V8sT?7(Ke
%SL^;MC,ua\:kKg$<q"]FUI%FJ]QM:;$aDu()gPiu;MH3o`f%F]?(Bh:Z-uNud;>(l6.Y^Nj/pk)V`*N@"_iP"%F[:G]"ljp<l^Xa
%2JathJr%:4`b1M4^TWc[X6ZO2SI?_ebopL%;r(@J>*s@mECio/8gGA'nXLS4JMd*3Hgt-h<pE8YNY4tIM&mMe9jg&pLNr_ri0UL1
%d<Eot"590[?(kJGh%M:+C#Ga[6m+e2km,%p-dGJcAIZ:^m_ml\>jLFaKtGWTBSIBUo<.GkZ1CEZ<_;+6.OkMo<S_u"1p*#Bm0R>h
%J3("1?f/WJHO;A<or[d$.-lS9a:X]O]_c<f5>;cH]t0\c2eM<[s7s=*SYc?cr^T+`^`Bje2GdaakqV4d'J^/=pVlm%'O_;FYd-I1
%8i'7^cYpT(Fb)!C*Mn(oT8tRC,YV/Ck@.'<N+8A6")Ld?g3'n3IYDNLk!ZV'!>%)A>Qq(d;6r)Nio`.B.9+r8q0U.eQ1_AI.l:a(
%S"S9tZRgM[3)T0Q[$iX^cZ5GPB>,BZWdQG+#6?"")'<AMDR\ADCUn-U6TYhjRkX7[^a+Yn@R-)8E7O)6FhNsL#-8-cX6]91l3Q!d
%Hb`+e$>MHS*jBIPXs"BHbKDu>I*1aO0/f0CP_thXrK1-fLc?BhMBq)<BL(nhG/)H/g!FiuroqY]J,+%42XnR\V]O_p.@A"cBKdMs
%F8S%s;uH9u#QIQDRf%32na;l'TS^a%.NQHRE2peibP#%,7!kN;ZK1=@oIeKJN2GC'-D8n9(dXK8-](5[/fkTiJPg2oT#oplLR?%R
%g"(,"VRP$Z-"D%-%!NP)5$%`+ct#+GjboE@;H\lt\#EeY/Ib+X]Y,m"l^rV=rm9.BG:c:>pCaCthc>Q*J!ZfP9+fP>_T2*1\OC&g
%LJ\_0;[E@Q(I7l4n-2m+`&HnjB%@.]C%^6c>oQ"Kj0u$DVl7"CU"\umJgWjl?6^0KK^bL=61l*.PA]gN+EiJjn*-g_(#-TS%+=P?
%459p9KP,?XB-&-_>a9pB*4Q+YW:Kf31:Ac@6ZHtoG>titGo!B(CHK0`**[*er:D&rQ(;OKmSbsi[lSkgeM6;7THi4BB6#2VJM;hK
%o-)*oRMHO+TePVX`_ag??GfVLX;]uS[0H)j#(58&,82l3;"!tnn-BEjae$CHQ_thR[9j/CLj$cp"YH9!'M+/6]`=Brp`n.oWM"j?
%c-[=(k7dH8BHqEc2BJ(Tr*Krg-li.cp@h_Z9CJV&l8r_QQ=AhWT&dR?;O^P6bT.O78seo5bq5aq>"Nkm@O4g[@eJ\]`keboU5]5d
%d55lA$;^NAa=[7;LKE.lG)e)C2m)1'TUh!2$\I,1-);5b5E*(EcSS8@b`J&:4D6:fbi40I):s"a-:G<r7B^lVBMB67#/CEiiWn^J
%8X!nDT`j4+0/.82fAA?3kih;l2RY>gihK#JV.!J(r@D!sINa.bY\ki[auPf:(V6M55Fo+Qp1-1J&E'>Smd=%1=%K(m@`d@tpEGB<
%CtHgs3q%Trnj5,9*8=7#RnNS10q\P,[JQ]#/`XN][J>;s<rW1t+<-PM*ng_oQ)KsAVQ%IhdE>L+5tU;A)'E#dg4JL5li`KoL*eM@
%keSI\llL`oZOSi2STQ7C33"D>VN*??U1D`-M#0AG;B?$K_s,a]<2L`tJN?hY@SE0Q'seNVm2`l1/7>Upc;'SbWUuH%K[meN/iS,^
%-ss!t+2.5b4&!Z-4P+pB(9_b**Zg"`j1,3D%.\tYZ5Zf:&;h=!"AKEp&A&fr1JF#k<Vc+V7jV2i7BUT?Lfd&]Vek"N0@^Vl+o+pN
%-Y.hTN(X4\j&#$c[as!@imCR*Q?N@J#,fd4DQ>@L`L+mZ=X?Nd]?g(_d5?3!;5SSmMD\jGfP3:U7_D06rB=\e`p7+4OHgr95,&n-
%itZ4\.J7D%W)VjX3S^dY:tIg5-l[,cED"#83h$YC_+bsH.M<1^4c:l!=(\.U]OsIDUB/;"auTl8`4m:8,8nco&iA>WKl,\9Y8FBC
%=?:?$B7-;J(m._Pm-9dL/n;Z(.,,1q=8j]:V9daH-TQ$2c_@'7[%rs&g\1C\U%]NKGF'HldZ,2rJk'ruqd/(gIfUfOT<S!7VRZuA
%I'Vr!b%?WBHJn)_=(hc^N?PL0qqr*cKagk5#"*`LP)NM$pa_./6?jaAo0h?pG[WfV38e?sCT":?7V&p1<-k@k6to/A"80+]R^%K8
%hI>;9Uh75F\Y-@,H3nm.,-tcgGl7cP,$Ru^N7AFH2q.L.mAt;+j1HBV&M7aU(6i]8)oUG;bPUVBH+Tatde6DAT*aY*&d-o//:3,j
%9f<O:OR`M'1Usm`WRfdWh;S3=gHDkh_FJ[S2f?.kbkF\PfWj8RB+6#m+JHgFp'ZOfq8TWbOg!:Pn33uB5PWtpp?S=nG3^ZhB5t2,
%2Q$T+=!?3rJ1PfHY[Z'>!rk61T)a:0e=Goc'C>ta0R0,eEd1--H[(E:Q([4XKVqL5%MX7P>0"2$rq'$egL(17S76V<JAB(.H.=7Q
%s*A!1X(E^/l-d']Q;T>V<5,uKH4V6P3ap9E7t]^V:R<)&oEQ1'SS!ftWW:=Ej@>FTQ77@D.!i>de?5Mt)7q1\,>aUF]&sW-=fr^6
%+ohl`1'iP(eB19f<iY>FjlgA3C3Ja7,Hpa"!=`YDRT/bhYU><(g.28C-h`-G+I/l\'!LmTN$ZGPUQW%"]Ld(G&c'mtmcAVQ%,5Kg
%P"?R^gdmkP<8HgS1'F7F@f:QKFV4N"o+K&47P6j7['i#/1<&eEo^1o&l#ErDE(Pcp<3i+<'MBC:7Q#cP8SF8\)tNM:fIW<EMa,q+
%XA,/`k313?oZVQ\4bjWV$O'N8.7qG_lpA<s]#`@bc`Ds*]*pE*1$*eKYG4[Kb%In0.Ia4%+,B:HX</O\/5^r9a^PD5[HS.1fQLdp
%DFV$LAA:s`>^piIa_XZpo=4%*AW^Cn[b(-/Kk%kA)6*3<^@sN05X?ZgcC[bJh[3(QZ+J2CddP4=88f;fDolD[O37lN[6Q[REg!UC
%`K>WGkUjcjhJFkhqmTh1Br/$Q@kGp6hc9&34SY0\gtX;CjB<)IUBHBbAj)sH"[@\L7f,67G!hmDSqK_7kNK'D$4<?t9dn+UNsJf9
%3e=5M7UgbS3]1h3R4`cGa<qoUOD)JI[_%=!)ss2n!]#cYZj'.I[9grZN3K2E,M<f<1XX5+(_e@Eqm?5S@,8)a^9U:]1m\tR8fb6N
%J.D;l:2\\4K8)j*Og$(W_u=15*-e=iA-+3q1%d>rEsdtd/9rh)h5'./kA\Z5&kL5BIQ@Zm.s>-taLI4Y-V#n:o-+snW@K4T*+!4#
%g*%@`&G^\a'!Rq]LDQ)&?l$,EM2&6(b%t82cf+ke]8a20Zmaq:cHNfObhRZ1Vs3M(*V8%<qY"`(X]2rm@mo8hiU);5p`cIRe!"=m
%j5,S<N"DK=1Q5OBfa9?Fe`tn"C,k-jIGAs!Q3%6H9o":$>Ep"NkKP"OEV.pqjNX,M([Bk1YOPstp8b1sM-2P4;BgMT1+LnKj\PUC
%[J!*mm'KZsh+PV$Koq;\?@jq+!?GpeIGBHd"%!r$9uD.3?t)foW1;L[U1AX50"B'1\p5tu7HdT_?pd4"$tc]BeE^lai]Hm`GNd/@
%pZbr^oO,UjY?,V2?#LF`DH6^XX><IT+Z(I#[Ui,o1EMS/j:X41Mc8KUf5\+_QV.]_eBZHj>MoH((M.ShX.E\6FLIYpOniAuQVQYD
%::Cih5`U^pS3>A%->)SX3^<A$*(m$MJ4($R6iJ"i?*G<VZ+pjRL]+^7c/3hPQXMi'UJ=!@)CPUj/+k[-%bCV>gqGF$GLk78#*pfB
%kG7GmG#*28;g2KnkrI5!&#[Mlasa;q,&_bp1+$&hRP0G`m^[8Fim.ao^Nt1\A%UldR%D`eZoC<MZXjC0Me^-Aj_!F!T(d<16%eCn
%["bH;mP*iGL(%@uMIHs6=6oU-rp+K^Jo9%DCndl6rplHt[m/;,U2S>;0:*Gl=kCU"q"Al;h)S-HLp,=m(D.VCfe91t'jIj,q<ItM
%iI6#j[I#1qD%Z3cWp1b6KrCHZ\YnI&a@hQ@N/d(V0+GC<o28uAeNW`W:d(m_nkUIc0=hCP9#u*bH;"1f1UQ#*gZTX1;3d'eaR][6
%,B"9V(((qF<W,'W?mKhqDep"0F>%tM:hun)"+"9UW;Y#ci6%]CXXOYIL.sj6bL@$0p/oKjC+B#7Xu-:XF>i.X18r(&ohiI^E3bWD
%4)U*QHQYO7>+,mZeg\P=:-HfjO5i@a(BK#P35cHpRHBU5%gSg#<BX'e"L+QJ;ZsY"<g&<J-gLD9"S%'M'*f*TNF%^pLqs#1e,GCC
%Hhf.L^XCX6e**tU&9GW/FRJ1BnHTF]CnN?)8RGM6)l#nc0VR>;2BM'-;u$c+.e&Y/Lin5`h4YlNH&"m,H*rVTR*6tAli?kdf3*n0
%aI*NAl,0-.I7Bb\^(k1Rn!OQ];Y\[^`uR]2Kn5O'@O@g=Y(L!NXNrG5Gca]bH+%ka^YTXj696#0D>fhJRN*/ld_mZcBAu])dL--.
%*kTNUDb2iC4Oe$LE0;^O"g'ZWL-Qc%\;I\DIerOW:IX1Im#&_-@OQEbn5Zg_"'lV4Ok]RHQA=p=])0oj+cKV%@5UUD'SILh&VO1@
%eXWSW+Ab(?h?ZssF>rC&HKhXi'jJ4[5\F63?qKm@:Q+FnLe2?L:XIOV0?Hu\Vh<eT/-aII<HS%KN&-tTC6e$OEA`ANMq?$g@3?3^
%j1c1D5dL7q2bdR1m`bB3SU)uNELM]KFb9:R(<Iq]?`jhc)(17A]`bG\.6>98B#M+((R4/Y5rmJE(kFti&-*c<[++$PH@/04_eO!\
%hV]kjRGYedn]J'BU;Qk&5'ZA3CL/>0>>Hoh\cu9H,]*NI<afOcoOS8fYrGKo+@68XmP-L'khOg+"IN"L!:Zg'q%b$RF%6;KWs+lJ
%1f9qO3Q5]gpki&3<o0P_O@s_cSPbR2Q(b=OQUjkci&d'ca-S40=`B[T:<f(,ln3&nI8RIa$^tDEfQY#Iq^_BdWn*MK2CJNEc:r8Q
%61#7R!'m1N$IU4l@Ic:cJX$MfK1Xa,\-J-:/nTu0IZITnotj>V4Pnb-&iaKZ.3Gf0CHa:<>iY=@8Wa6\,C_\$jc4C\%2h(o=uj+2
%%WQ"7h`C;$+U[g'=oHaK(>lC"e7jC-BPTja!jT=$Wf7W>EoQ<X-T+R_157seV_?e+@=TF+3ZBsJ#8L#+9n8f)V4i/=G=85oV>.@@
%Vc3[#!n+ZI<bkBZCFu)TrGp\ML!a]6&:85-_<@4jhHCe;_kQN^QUCSp_IBETc!NOJQCDqVI<%ml$KH`=HtfL[g_:[?0@ASIT[O?R
%:/;#A_VnQt"#9KQ(`VSNLV6:n@jA2;^4mGSe2cAn)a$HJEp\6lIInFp1;:S+kKAO(,'0(!Ct4=mW-%S.kmI=8CUA!!R5n%M"nJ&^
%pjZ>b(ABtZ[+)"A329plCA$(9"3QNQkKf:+ZYB^oE?#lGB=,jRZD)eWE*GqF*n5k/SYA>L<XTbH`2F>^<-RKh!l#^I+rtU99O4<J
%nC_Gm1/_KdAPE=+;C=c/;'_usS'Q//>%l0m6J/!mOc[r\8)>2&'2gLsVuInlqchlDDp[W(X^G<-/+YYZc!8!>-@r\R\l;6=MR@Mr
%,i,otbCSK`7$nBoE^1o?"JYq;d?9I!;t!\?I75I1V,*)KI8PV8fLh05oK'l)R+L[iIStS9M##7STUGsL=<&!95C`K)P@Yj^a47jr
%,hXG`.?nX#esGAc*(%(rk>b.'PUP41o^@4+jaQ*\8F?&1&l.U$c0-)!NFQ?]f(cb_<]Y+PlpVp#1fg?lqo&ot-2B+tj'gYLOOjA#
%Aa>&s489laKo\DiS4\9<IFn!:gW\JqgBkq0,.%:-ZMb.-W5J5CO#<4qpKOX,(\e3=fHgKPJ+mtWS>9Ai.,?o;#>eml*2&s1AJ(K'
%S][R;H>Oc_Wdms!Ac_Ts+,*u0la1^BhreM(Q$jE(#H2";?X6!1`:WXLb<;(5-RMeuhNWNhoM;I*Xi+^4lq*Qfr8fN?$^:`f.ftg"
%'9qLIaDb]M5*9tVIA!m\D.L4<ciV)OJkAn,i6mK^)@U/`r_0P9gG_K0aY9uYi-r5B"iK)Lq(\CO6uN2Gs$U!/*m*D8c4X7_!*D51
%5cdMAIh?I3$Kt#FT,A7n0G/d$/fWKh(?R.&PIR..-EKLr#FFJT//&-g)1ab#Lp9H:2t![&D&pXW>b6LB:^WD4Ltr?3AIdseH*E#l
%m+2!Hg(;%kECORI9n5eBfi;[8^YS=j+jdZC,$Q&0rfo1(;4`5X!ppUBhE4<]H]QqnCq+5[U"ui3N0>i(CGUMWCl\XCgM;O0[SW$4
%NA^QN2uik'AUQ%0aan9D@f.W$%9(4!%.jPCL0c3[QZ>A+na[D^N5at;ViG6T=TG1Dpe!KeAnZ&R))^S&-^`OHA@.UCO<B&^CEHlF
%\X`$/r_VdZj:=H?PJR/Mi?>QG0iuEAk#bf;5DRj/L_$qjNhTNW0hh&a#>Y0\8mIple(4ii@bWlh533lCbk_#KRYQ%>XqpGs"pCae
%&Oq_Ogj3FuOY1l+:N>T6Z1E0u;*H*CrH5BQok]W6O,8he*tR[Akb63V]r(G4Zd>J#dLlQ!g$'c!CA6l&^t&^K[>WPFW`kk%,">'S
%8eR0F"5?K0OT,<Q3/PU[OnZ3RhC4(?Ugu-@bmW:VYQj[>0@nQY9QDX6@tqO%iW@b*!kKVpX&:1T<W>Vt^AN##3f*T/Ga`'QkSB$-
%&pt4T2M]M8]k/J-h.<h2Uin4RQ$tAq[0Vf&1[g+Xi^aeWIdd!BF\4BqeGOTZ]8?-;MU\[.i+l+'I+ngV@9)&0HJA@]fjTBBl[Bm7
%T]K\%SI!G>NnZ(bLS5Ye<m0i.Jg$=_gF5CC4B_LG+()!:dh-@LcNSusY6nfNor]WS#`4MbUkP.8hWPT(b(in?aD?]b3G9(EfS]4n
%K9cW4ICZR$iacsn9FO"N"HEmXGi[/i$Q?Pf%&-aB:RRE)ga<sMKKR=u,@7YF&2u-BZW[Z"!RcW0GAo9s&BZ;I:H33'F!eVTC>O9"
%24$hHY+5Yo/BrSB\7rLE?kE^;6Y(]9=,!Rq$PP&t>=5#__dnR30=`m3g"[T`jk9?tT^r0RQnj2;?u0;XRX$pYCD'W)18o_L5@ofD
%dJ5u+Q4QN*Q*Y-<68#/Bl)NuL/f@a]50rd&dB9u%aK&:/@8c(2>l!erJUMuDK*m^%WZJ$QBibZ3?(Xm,!=#m`=V=d8lk3.^+ej'\
%Tg,QAN-\%h]V>Qfg_c#mIoKg,6-%q(^3.o5]M!b:E.RS2i9@=5/dmu=qceaA_ri'j\a@_0+0kb&VajDl4b#Sr`)lMWi8n''hYCdY
%F'A+s4JY5[]rhT(F6[RB9(pZ^U\j9pAk>f=Y3PLo4/N\K/`WaG#sa0R1?W)P?3CL.+afgs]2`3ePOjee!+r6KjY)7W8ptZ\m3tjj
%/%aHV?*i>^iV"(]=EWd(kcbC1%\Hsk!Iqao^HRp^#r)U0G%JA0<!(G+>YeuPf!HkoD)iq#=mE5H+O"(^&gi<!%A&Pb&J$CWjW,!h
%"AGQg)7K55-XCl5O_77\P;-)\<;2M$e+\LB]d`qkVbHTQ2GjE^1TKRdTs<Mjj7iloXpd@i*+]7,71jMg.Q">np[to&BFtu43L&sn
%G6o,uf<>ugCEd_T"dGDG/!Z?tGm^D6SU^u48i+qqGP[M%<p5>S;+M&nG$;Q!STQD4aQJBucdKk&a\#T*>ELPph^Tq_^idfLUn@OL
%@e(rJCb#g0/CE[Cr,"9<V;?m-q"V"k_15=eJ\khOf44`tZL2?j>,5a61mL*>/*#JAQ,G39D).%N9\tS,Kk3r4q-;69]6qlMGZaCB
%HOHJk8(qRjEf7t+a_I(P-X\>N6kG@$/rVs@g@rJqVAENHk@<i3FOG87a/V;t^8f-7\[?<Eo(](Z>el_OLbj@Vk\i->X7U#h2t63R
%L4?m!;3/6)^W#o)I1Bm@Br9tdrr1;@m/4c[a+s\es,C]cR$=O[X3g"B8Il_ST<3&[Yn/WODGuQi!YrshSqrpUfFk979Clp[.X>0a
%T\<<^*S%7N_S"iKHY41Ip1`'HEpT+6SuD<OYT6EXMKMY/$qP$%N?D[\peA&\"&Y]6/JVSIAc0UOboIs*5f[CK*Sj_U/uo8E5Q\3X
%UQ2$s3dM``S-`V\\,fAu8"rIN$uCUUBrKed?ur&&Qqc;gbo$H%`<eW3NRr]`A/WS8=0FWq[Gb<H#@W6lVAcF1"-CSIFq?QGET*r(
%%bNt>-H!'Z#0>oLUCFIQr=`k%:#EF+GF#?R[$g<\4c>Lb7&C\cmX1bbjF.Au'`Z9Q6N.,"heFN0iM>D[_qD'GIXD+abc2'Ks8JS$
%0H/[BW3d(s!4YVfno`X4g[/Au8.?ClAeo.M+*oq4Yh)\]%ffX>Bl4H*GjtWJ)15Cj3"F]$6mMGI1YAX0U8%sj*XC.JK-8_[3P-sq
%E*3mLD`5G$i<<(R]L@?94EB%5s5K*$BT6U1+TG!%!uj.`)b)LGL?&OjJq4.%SO1L32ibcpi5V/oCTp-8df%jM[YA>FJQQ<@8_I):
%K/m(Hn$-$A!Me#1[h=ZbWh3[@H1b3)2I6bT#3fY$+P+K]gbdd7G;H42MLfX^"eGpGmR`V^9Q9^nfT?<p=)h27)N?/ZRO`s?[..'0
%k(bAHre'kUT$W:cg%T8["Mi0H&,&pr<&ml*`(Z0U+'pV8kP/Eq!>(Ea-r$U`:1o5K]2*f<ERg;p<!kQ444.l*dRg4&8_>ROJ0)sV
%AP4*SMQ_pA34e%"F]1"snsLeb$]Ln8$"otBs.Y5k+lT'S<E$ei1H.Ye7l/JW_Se761N"h)Aa$V=eiNaNXR"7s&Z=QeVC*ca1HkQ2
%KF4Z9PX:b^8tZ@^7-7"<cR!`@PPZ#)HR+m$M:n39*$=M)pqC&Ar:GubA9WaMI_60JR/rsE<c`jeS2gBs[Zq[CS=T#CB\VS,/0U=g
%.'!W![Ym1Bl7T`(Tp2u,2YR]!Wmc!@@SX5r,*i5,+fg2Zeu.tX6<jREJc*Ls#^n6+c4U,EfdABrqSApdh6'D*&O9K<J&Id6j/p!C
%YW<N%;c92E@X!JYakELn/r-nnU'k>sBBt^m5n_E/JC;:ie:R>b0KOUUa:5WKm>7?V_e_f9:!0?uE(o=<iGuTK:k$$[nKpNdHH=?:
%UFKf@Gt`-:7Kpor8*\nJH_][l*%t=39DGX^l%C.$687i^;/[XHrg-ih;T=s)\>ZXQ/?mhO2N<AAStF(]C]ti3"^iaiW[<MQjYj<>
%co(lMo+0iK8E4.-fQ9c%fo/=`M`,IMGjB>%2.@DJRd"u$)kDhiOeLZ<O\&V`bb/G-$K4?]b>USpOeJPe7h<gFng)=Y!`gjB=8s!I
%'ioNQBd8M^BkWE@6mY&;OL4sX+>u8e,Is\NLN#<rl*LSH;iPo>@jNP+q&gGP5N+:&m9@gC+eP]BPO7+S=Lulci*5!9ZL1L,:_/Q"
%SfRHX>?pUN2WBccWiR+5M"u[]9diL1Bue*b*"s-B5D(l&I"KalicUVM;NMR%noWLGbJ)jSiVk8e4W=%\n)?tKm_Cm5*hm<$(jD`D
%d=$T6OmrM_23';bLU!=<bF]-T0JB+5#-U4K[5*`=]9DVG]M!q71I[.b52&fVSd-/'bm_KYVB&R3As]c<`!:=Sg*=oP+^3,!!DAd7
%k_Q/Z9tB?V2;u*i[gc<`<FT[M"&#[KQBP$;pSq"KSJ@<MHo((SGBJ\+\nCjV&9F$:#UV0O0O\rno,i?RdU+!(bj\:;f&2X2R%9;d
%UQI96Rd?Fs$Mu.n\aZe;,_rIZ]Mab[GVA"6,spu?iV-$5hUYeU`.A0KmjWr,:8,*$`qS]kFIRJp=qs7:bX++!/"@F)>>Oi?p26:F
%&;M\(#VPS;/KcSI%G8<K*MYK![##%X:Q/um*TY<6pZ:*c(a]7u)lMoNU+99boNWWl8ps2gGq=P4_JP)`M16$sm,h+CI4tTm:F$`!
%rC#"$B6'9]Pb0k0163NG)E(rp/PIM'0:L`5Bg="^GGgQ:_OD;/p$.V7B_+7-!!L&Ged>r>D?Opo9)9WdEt#+f,51[fUjlPMfpGQD
%+&%B7N?fnqY9']PYt_4_Stt0=l23s6p./X$,?.5LO?"M(/;u;O\&41U!TB&WSDCd<=,qRNnDRBGAe+0S@\mZD=T">G7k>c@Z$;+2
%%Y@gu]i[qi%IYQn/LV*0]t$V.*eo$toF,LlTri>&B7)a.qPa/albWs]NGO!LXO(bJEDpFWEVnk<BP=CQh;f7D&Z;Fd?BV;ok),U]
%5dmYa!+g2]IGnHX>3#<$K!V&%'?+,'_LV=$a_l?^HC&4UR:7(qs7)obqAZp,Gp@i`h!J68*>9_>SXt':UF9#%k8K(KM#XOP/A3&4
%X3Fbb/7<$a^[b+I?)=[:h%:Fsc]".6%B#RlfCu446kT%UA'YRMs-/:B6sj=]\kVC=>5f&<E4YZE!WSfj*1:n+8CPhGU,dSl5r7[1
%3DT`iks.beXR;tlZa+P%NC`E.B),=D6OA6)d/NF,^EEf#h9D^[M7M8G?<Tm4j5Mc<%E1f#AMEL.UtR+Z$OYUcO*<\839E8r]RY6]
%l#5i=_tTm,ENg)O"rB4D&"U@FW,B07;,ae/lf(%@8ZeRljL.4c.@"n>f:a]p*)O%L;gVX7$hT92hqFmB-q$kd;uXo[H1c[fdu;%n
%E,g>onsaO:%_728CeJdgOSG8.>1DUV]jU\VBC@D`JK`B^7iSZNEMp[R.uUAf4Gm%g%XGqLaT2eY9[[LoZWkVN\O9Ah//,3*B];0B
%ONi@DnNpX^(_e(2*5PPqnD9lEp^utpog`Hqg:/"5?d4YL2(bsAIXC"%rkj0kQ1[gb]*8=7(BMJ7)G/Ff6"Df80EfnHJ-u$El$ln4
%Gg0P*]Lr^!IGAZ&L!::q5cUX`Y$JtelRT-SA(r9\PD:;a\KNU`JfgGW[@44Ve,k&S_)?*=LQY49FR[XgIh&_8lb#,44T+H=q\8]8
%lNm)``j4sSN*[P5qAd(A54b%*,H:D_k2WX\!8+D[7H[ec(HJmJ*,FK/eNgng`;Gb74k76HZD5(%_p>g0@=I..,*BB8I80>-TQmVM
%*jY<:4p6bR`8)DR5O%SX8LK[3a4HWOJmhuthhV[4"?IY\,F^nGAoXf#7I3nSW,l^l54'FfgY_iZ?OoJ[4PiQF55kjm6Md6bb1i0D
%f(8kO#n=*14i)VRj!0@2\1tGO-K]]bYAC,RkS<r):Q];#V>HQ&$'>uJ=@<%BQ!IG97KSKiS8Va,7u?"nO%';]Vc+"E3?fW`0O#;/
%O?Jg.![m%TMCBitB,L(jM,;g.e-GM\9<kh?-KQfXQg\T@/N^u&UPBYk3sAu=9mCdi[",#X%IsC-5oVYK`m4d@7&p+1?#4PcqYc_.
%Z>qkXXUd2sU]8M;ijgVUO;b1&l(mu$,]dbD@iZfHqSNDD/_+BjA[X3!$,-V&I9"-eEhmqPI+C)5RG"q1\B<!H`B^Mc_<EO]1TMO6
%b),b'l/<)4@WjMkQF$F^6V4nVJfI31B)=RNH0Vkc^RcE?!T7Llo`8Q$8T+7G^sLWG3taY+3TO^$r9?&:8PId6D+hIARY>U\;4p2&
%omiu!+G-&8q@^TP12iOZU-654.m4JhGDt2sJkrZYh1gAH,[*h!O1Uu/k\u1KZaMQ/(/bc?g$s-OWb3G)/^:DKh+rFD)*.c#8tBZG
%69X`Ta1'm\-s?Bnh<Tge"+sb@7=AKWkUA^Bk*@O-I\CIb,r"Wj0F*&*kIH-DQd0uI/?fc"oT<-*7OZrMNV<LSYME/<aK2uIfgG!(
%U6U.rclloVL(,?Cs0-H+o`\%E%E4lKHm.gC9,ZhKEfO3ll?9\QjXFpT$Xj]h6V2<'@jrH+m'@+b4T!O7+(:MI0V8;8&V-AmXZ>%G
%fjO^KT)\Z!34"Rq?[DN=e.O0l*%1qc.2IPQNlX?hF&:p7$UQ@)j!*iDhNaMI&UCGn.k4G>^Q\kg0NT-p!PU&=:Bk<&(c49CC_"2%
%lMe[&0![j;Cq-MTqFKp0L[N?.K#fPF(4P!S;scj)`XO-!I;d0aPgfth_TS6/&6d?Kbo'`r`D`.Xb2nUrG&ItZ.eZ`9Z]O[d*>sqA
%MuL6MJ(oiHV/JEPWb;)[Y<YgP$KTi+DG`'4q&B4X8@<##`Ls/!];Y7L1gPf,cVEaBf2MuF@a%sSSh/uO#3a^UKaXX=Si$IKH301h
%OUrA4LN#`42!jOl,Is'p,2*PF,HEh6pPadYDnl5m>>:3"G7KI,Z^LhTn,lkIYkO'QlBORH)_K)/7H"N9eSrUtaBI.C8]%t%FZj+b
%oYEKC.'J&)QVZdpZV)U'7nuCkE/dVl\?:&(Ba!Asog@$j.qkm8]3enO]@/uV$.)N*?ua:6ihsQHR\g'<>lF;(+D$s=OV/@]G94$Z
%Y[P=a89kBY.^\?%Zb68]/gbqlYe!f?!XPcRo#kZ$G64\Pk(9*S=r@5a[h)XjeE\dV27+i:WU-.=nZ2?oQ\!=47Y3U&.X[jQ!6Gk3
%a#X@"4>CgXm^q[Prq=/*X^AtcmP])r,O>BQiPLF3B0'>.dJg=^rcj+`Vhd]5mI=:p\6'Ba65*^X13ZiQK._gD&WQ:>$F))D*F2:p
%$"&+gr5oV^bE(g48dDU**nsJ_\9,q3*X2omANtn1L1*M@a_s3)X64/CVurpBVESI!jpF\dmiS^d5?58(m529Ngpd$`<_Zl7hr6(u
%laK@b5Bc`bSsgn]l0lsMotp9F%"[._>>Ot%-PfY4Tt0uG\:kjUq2=gA,iZ#gK^ui"I(F-fnnQR58fb&.#1E4f=7Y+hMX[cmIt+Ya
%o<p+;@GZL&G_oQ!IAn?_5`MZm.eKm,MVME_-?V8C/GF"LU*KC"j84]lC%J=Dnn7&O0n7dsM^2MOlgO-gOM>P,Ib%e4Jbo,m9gEGZ
%oY8)+`!=T&^V>7\0m[((]DppKs%i[V^])RZq:C,pci;>krLa)4s7bQ'5j[BKlMFR>s19BQrdXmMs5cKFhuD;hJ,:>e_uKApfDka"
%s763ffDgNMrjs9P4[/[+ikO>&><mA3qqKU"=2O@<;LD=Q>C.YCll[)!Sl[I]*lCm[I4m$Z[@D0=1@a)H9Dne;o4aJ!e6="3PNCb-
%7YjMJM!OqqK3MP;k^JF'Xk_X"96XNT8+l9HMlXa._Udg"7Dst"CV`5?\=`dQDpN>rZ9BN$Lf/4=)<qEl0mmk:O#]EXX)f0OJG:JC
%O0t_ZX?c/uW_/a5K5+UAaHiC9d(+E/\g(0s>R;.hW'feS7d$[lrE>^?>8Io8k1f,XGfH:cB8mfq'$e?D,41cB!Hl0dVgcPlma6Uj
%q.<3gO%`!q09`J[[j+%1k1\IklPt"*kb=U7JnD4^*0bi_43:^tL6/`I&'I(#cf2TM6IFU3E(^^?3*3H!OUDCbI=9<t4Oi'K,RK,Y
%<sr\FU@m$>-6A1r9__]O!&<(l!a7`PU,!gmCBTKL4?;;+`7bP;Sme)PJ3H+R7DR!,(1Pp5LLr4'GMF@#f4r.Y'14ha7@Pg!L?$4J
%h,_-18+Fg>:tmGUlZIOdiGiC8QGujuAAn'CBel,AdOIjFl>AVcd7<kY08O:_``_+3"lLjg:4LU$]SgM"F5i<\LgFgA):@<)%<4D#
%TmtKh23>]#)cV6dfH"^%pPPV`":Z+oEO6ld4iI/]o/IWJ+EdtDE7j'$!_(R+Ub]k`/5>?t4rdm'"rgJJ<nr"<;>aQ@VNqL9q(Z<C
%>!N5O+r$"(Ei\Mep#U,"(jk!,IqmNe$dHZ5bbLqJ#^n'^83r/o,q_+I3W+QurjI[Dq%]O`XUG3lb^/iYSnB<b]s0)'kH.!()::6(
%ga^&t%s*pniL_Lte(l.r#%_,5J=D0B0(`e]S8B&SUWUF\^*#0_K5+//TM?#?'Rt0O]WQ@hkXt'+H6WQR)b(-%A0grs^gR2'mS_h.
%&aOo/(I6`8<DL2PSb=:R@AM;+mG=Z5J,Q&28!76Rk7@Ug@1lX%JmkReodP"*eWX'7.1:*D*.9"X![S/nVu#.l.j+YQ4h@h1ZTQ11
%fa2+lYi.qar+!dWSZs]9A643n24Y?>b`(l?d?jl^lL-@c(""60m`A%k]WA`'Y`'<7bV/1,fGtT4*q299TRQ`U9(@LnPENbnl!l[/
%`9&P[gER7<eos(\C+VU84esR]eW4G%ea1?6:Are"'0:oo*rWD7N>$WN^/'%4<m(X(cO/gY9R#`HA5gi&Fk-5`HQ+-19Rf';i-!U5
%PZrK@k2Cs_-cI5t[#8FP$k".Rm"@=egNgP(&!N#6PUI*E*OV'hlsWIV%GJ&4oWF?Q0;k6#b[\,\]0]rLJBM`X&e.$>5flo,VM^j(
%M:mE#p]nPr<;N3L:QCCb.#L5arF^!]D6pfnTQlRt9'LF""MNMOY`lf!B>mSHF'e9<TYUMJkp*D45=uJ:X_7<a+]i6!Ne2BD7E"OV
%')iGmX4,tNjr_?AW<OQLj*j)Yr$)!IXm.8u=p*t@C98an[EF^dbY1<,1T6`Fh%0W,!<l/sR`u;(RrPH*]@eub+Nme!P9\WGQ,pZq
%S>k:Mr6b0OaX)5QLV1\blr]P^0lHgOQBIs-E;[fS/L*!I_DSQG`L`auq6h,27=!J2CCj\tH'+mNH/Cs,B"7a%;*uuiV>G<*/do<V
%/pqOC4O74$C<j]h0.1"i(a3cC=q,FS1TmELGMn/n_oqHRH6*1CW?6h[;p9=Oe=-^<fQ%J!c9=s1,D*dSN?$uU/s\<*4F$q\X.B71
%\UW<\l90t_pQ_BcX@[nePPe#h??8%%W<t_t!tdkKT=./V3rGhZD7Tt",YQ,/G'@3D=WJP[nA4D[o5hE-_>B+K`QWQfV@4Maiq:\@
%/0:O;Cr:FH(_=8"4&,oY83ZCe=6E+UdSG44$f+`uq8&/7.:<feVS@GJmE]cSq/V[j[dl<[]L9sL+2,RA14sWb><^"+L^V-HW(ScX
%R?9(cR$%0u,AiCYZCY.gD8Ej#5gcCldaRuHL?N^AWpB4B3;5]]023gHARW!HmVM"rEZ4'mXR<QgkC06:frBTdF_8P!D@(c'05e`+
%itM$HrJ-<:4ut6%Maqh(pBQ1p>i0]6+JWNh!!AI1hN&ej=\WRKMc>#tL=A-;JQ'hGYn)9:Dq^$2DbU$K`.\0/c(n5;@jCaGY5,2F
%pC+.%KKA@NI/FH_Q5kk>4RAoG:[cUnQd?1<2lDFTbY.+qX2W_hdE76+J##*!b,?gDpfc,E8f(^HfD"+]qfbE9-NHJA^@$4"&#tYL
%-X?SY';q"DV:7`#TFr5+$lh5S@<9O8&*,tn+(<J[HFW=7J<OfT#GEMqJ'?kn)P8OlI(O&)*<7o_*>>g#7=5?eX7u_jm9.h8oX,n"
%+92&lrV5:M\%e%NgH(GQk:g_65n$sg:a/Jp]]9\m-`bVl8JGVQ>Ak>HcpjTim%O];-XSa=Cps(Y!J)q+\CY<J8$0"u5k)t*J1ST4
%\g.9_*IkH'\G3KJM*qgqPFlrbF<UC%<S3Lk+XYrd>^1&8!HJbd4Cf8h3J^Au*eU<ML5Xr7[Pm?CI%9K2Fj5/AAGV8SA2@fFTf&:\
%ZWG1(>sYRJrXm74<XjeV0C_(FWF8tnT2`b'3J!Rj#-UiGVK`ooD<m_sSl$k22HTS1'"Yt\Lb]'>5pG_%drE''p_Q$&A<(7+[CT<X
%^[B+#DD8qJAA(r)?i&uN.4o&SLI[AO9CaEhm4+\\mX%gm428mZ?ci7P<g18dY9Lij6,J()%#D42fTM;KBXg+g&&1GVn4u!JBMsTE
%Y7DGJ8fp>d.9\+EZXGic'REkTWH9@gUa$,uCQG-e)-p6(r4t8F*unpUe*4-])8AT!4pYk_Gi%l]pS0I"k:6PKobq"mP8d&\l7rEg
%h=\>%>pjd&Tt?)+R'+TNoKK&V\^XsFStjD.,*tdX<e!iGgUVic%+&Asignf%&RhLFeYe!FL`bRnC%<RB$,l+F):on$A%P%N:`7"C
%YEkAlJF(1!0kRrU_Ea[:VT^^fNGd"%Ca,;-*L/Yi=p%^l-m3j3iO`[f775toLS/=EU^<GG,R\]jf&$sMMY06#2\pTW/Pgf#Hbi+D
%;n$4Z2'bgM4;l!6r'tB5!eci2&!tQF5Qt3S@Ai93lDtT"2UQ][?dIi'dM!k1UX<3cEKag;i+q\S@jA8U3F(oq`1dM<84q@R=ogDN
%1,q+#"`Ak:'>\L%q@tS(i7`>BR;Zu0jNc"CKpWe$?m8(oQM\SGIhQ(gV#A(%#C$%*Ef,AUKqOj/B2u'jO5Z>1,hN+g9V^ha^_11I
%kQ@2Qe+.WVaYg!gd.G=:AJTdO9u]6k[DrEUnb9`hD]R?MVUX/8gCU:XbM/"4Ue;)@"$s^$\3J]SImQOjC7_@G<a:ndOA;qn/1[0)
%7uKT;!l7fpM@=M#P._Hf2;->+Vi!W;h?7?l7"YnBlo(4(]+e.l*M48R16-7q)m'u$TYduXJ\Pkom6g@2Cp_I>+G>UCAB6DD1&(!P
%8+U3FcUMVi%_Q*.^TcP4*g#7;B`Nn8//OE<p43G#h%q/=l1)?<@g0^Nj.p[s5PagC-b_Af&HbsO*JH7t/JgaN]&9HPnPSfpF;i$A
%PX.+f0n/68%=#h54O"ljAlkY^2>hL@Wnu-KDBHs?[n2du4`S6N!Fnt2$$oHO5G$I_E:F;qEj*bYALTHt*(g!kin$:21n,no8UHq0
%c.*\QPF=r,8c6PC:.1rH$8S@0ZDUOI?G6T1g1u:!UR"aW]p=Uh%i5s0hMFc?@?g`'9ZI6#ZZR^,=&$PP\]m&o:>)EI%At[_.4/\;
%:BgdHOVrpATj>;V=Bq'q_o0W4qf8kdAZ:2)fppDcnEH7p.T+GtrphE%7P'3;9VDAF:QbY']OYT)bAfb7!6TiWI.4."V,);8.Ob`I
%gl#9qTV)Y7#/0dDB*rL.BWt9h[8I6!p?'DB"`EGt:sJ,Y%ftML3742C-=Qr-i)cg'pW/Ft^Dq<PV"&Y''8VMl`ht+VH%gS;AO#q7
%GMt+@L<NKBa"Xr0",NA;O;MA?e`+K]nqI-@1If2P;<W]Rrqr3CN_pqaRc._;l^()f;9o;_&t))F'$Gb4Io'UsgC.S?pO;Dc.k&S6
%ofW5roq'EC,4,'Aadi8?":oW3RE!mDSdP!hcYKeG2^[G<4(l6p'EM69]!pNV23bq?5#Z&.W>fdjltj@r)sf/M4Pj%mr#lOn@*NTt
%o/7*OVq1LC`(DD,9JFC\kG_tP/0$l@I63Y$E:Y)RVLSDeD$'?M*[\:ND(BsZ)sud[iu'AuM%\2gjqYo?<?Z&e\Ykr.p^EL2hiD"N
%:q^%NQhBU3U9]E45E%_Y9Xq=rI;PG@]5.r?YuC@Wm\TQTq+#ApHR3I=5oI,%Ob-bZlr]cRb$QCtO#(rV"%=03G5=?SIb$-#1tR%r
%&co#QV5O`$meq08!W"8t`ThNWCBSHcNldC.h9\'aC$gl:W-cD)HZLdI_=n$.&BZr!@MD2A</uNHhpiIWs!oNe`9+,D.D:n*hY96h
%_iGJn*!DAaG=EtVF4foLFcYJZ')Td.[+A0uGl7?7D=Q68Z/V,[+8KT"h.Q?_0hN`g$Y'.4ZHFHdCtt_:obP.F<N<,l"X5RjF>1jW
%kPfLD&i,+/V7%cHpKt<??9["a&:TU@;eHrKfol^L_U<T4RRHBt@a\pYlkHf+D$[sB=[)3P/\-=l'\%7.U;iHH4+fYjB$h?YLe0uH
%QGsNf$fWhTQS/F.+YO[q]AY$ULX2l\]3k$r;IuK8ZPpX*Q_,90B\X"+H+@)%f\qEs/_L_P/aTN'TqTZO"!%rHmifVPdRmZ]"F&!!
%BnsT,8Z/:SmE=NR:m7k9KeJ5U`*)-CqNOun$Uo2S.dXBrKpQBA?P6-!I^WF:_<8I+;=J$gl@g?--9buhKTuSk81GC?_BZd:d/G]h
%g$30U:2l:A`s<DPAVki3K0umZQMQ9aa3)TZH&oajP3nI'YE$oa-U\9Nn9JCJ+B&iWPuq7AKd(^kXGV%;L0RAECj;%nBK7s9hNK+_
%/#csDRI4Opl)rYj!Te]7pE:op@ZW]jS(JVQjs>O1Jai>!`n,F`XZ4*YHi'R:4V>+?QU7`PV^Gi4<r3jgl"XT17%(o%</MW]NN4^A
%[b`9',;]J5FRJllCf3S*<,W^PUE"(-M6eT(jcIh`"DFWWZf<`dl(]`+/upO0\,LOsX]Fo%$"/Ikc(gtJ+@1.gL0amO.;XM%C]09l
%=0_NUP=X+an[s.h8$9^s1/t"!og1e,q'_,KX[>&5Z_$ma/F>.2B,s$)q"3NljcQ7T>*a/+4qoJlKI,/7Fgg>VS`iA`E@jc.=,d3[
%8^.d;4)i-DKca0a*9_=".&9,5=Z/nYbFfdWGsUjJ*S_>A>Ekg!Bc5&^qh*.Bn&Ou\W4#<`M>N$bB)?":*3X<XJ`cMf>)@><]q&<R
%2!T*"JN!DukKXnFJ^s\>7PUU=I`GQQ-gWAQ2g*[_U[bNK5N',Z*/!Hm+o[a#-4V/t7A11$`V'd$dSn#/60!b3&n#r?SC+Vfo)kh=
%c%;(l'VFL$2gqS:Zb?'%<<.9Mb[l`2],[9c\e6eAMhK^,eYBrp:*6%4\)`n!%N;W`jCfbrf7O:cdAJ?0i3MWH0)HaNP>-^!)VaAj
%SVTH@BL?/5YNMIrca9/,:<"_EkBr25f@C2^YLWqiMe_d\9)&X=[p5+ElT;gpi&pBtk#;4O6BS(KVb9)C7DO6?#t@!UBNYtqCLla4
%l6(`dR,ieml44C$Ra<`m2&gueS>,Yc2GXrU-,f9Xhn=0/p&sK%k'@[FXi53N('sb1FhNiOC[Zjf@:$7U>n!?H#@^:oqNoe=\^B>>
%[YVUA%`Glg>PQ<+)HcG$3-e;U`LQePVf<>?:O'QNOX\5d00'$N7Ld_NU'F4!#K$=\X>DjXmA2l4h%Cg'&ki"Y!+8g?'+j8eXF6<-
%pE7MY)X')kSmJk[11'u344dr%l<c9PW>$$ATd!h.&3tJ*)a#^S4.6#AeL5R(6fRT5lkm05[&!4rb&"8R-M7XnpC2K6FPR9(EK*Dn
%4".n[,F;-HR/c<G:5:Z=[m,1,I&Bk^5'LV\-t6c!a!]&<O<^[-b%bei>52O$kgk!Fm?![-oLfjfm7A'K[4>8f`[04W0ClS.[Nb*i
%:[;+i>M"@HM-3=@6bM#)`G*IV'r+8d7(PGpLop6mTjW#X(00f8M64A+,X?TZ1R)SS5#on+1d<A&Z`6EH""J4R2Rsl^aXV\FGj8(R
%\8+RP00aT+MV!99:pG"Q]U1@W%&Ri_q_m3lS9RlhW-[*AR@E\+''?.3>S`Atj@6s7:^)_)oic(ZnK*A3O'u:Q4DOf1HeJ_1o_!Yn
%]OY&McR\4>XaCFldQK\G=jdcJK!t663mD,7hOrYfk0DGqJGA(^4UH_9dNn31-lf4a%?^d)qEm+]Z4#OX5M_*X@Pqp,VS,A98pn43
%1;s1L2:)d=pXi8qk6c+0S6H^lH@kDr5k7AR]P==Z#fGZRqf;Bl$T3Q]1b9M^\cR1]:U_kfgL)Q#!-G';)BsD=1iqFRXPi9oaU-5]
%*\HJ01\aE9@EX+D7r.<#7X6k%AU@mo6gN_(?=2?TB^EV#Q9HbiP-.Y1W+o$UQ<+5/01!g`k]V/'Vm(f+^K@kr<#W%<F#P"CG`$Rq
%&_7'94N1i),m]C<)R."o1S&nmg)Pr6(^Q_9\sI3[;m4e>M,SHM<)\D\!--d4hpTpQd:mq5[B<\;E)5\SmIBG]S=5MaUIVr7HO_q)
%(&S&tbf,:T]&s/2[L*s-_F$jN^h#BW\0b@_FXh)hi.cT?[9U%<f^++T\5c1JOl_e:.C[@W'HP0=QQmKhC.VJ\B'We0);^Y288*B?
%f-\0er:O%ea+PbB^es5J2`*rIfL==(m7_Gk:[f9LYHrdKh6V/J?CC*.'Cr3>r1*DDq#RFnDpQ1u<=I,j8IJm#[lkF?if\9IGr*h$
%c3r=%D:bF/Yn#D;!LH5K[T<lurLG`g]#.7]E2cm3-(JI_5@.A,6gRf#Z@A6*SB3$_UW$5gjXe`6rP"ha:S#'"BDPKh9;']RcQp@<
%W;T93(:Ctu"$MQ0'kB'YDG4&9Ui&=>;CFO;:;D9[+cnrFlqC4'U^S]oTj]3<k6Q]cY<4o:'eRO:_a_:d-TC4J-nJo4cFZ.am]uNB
%k\L#^0s$0@o&3\'/b[ItEP%;03P=W+puTW&"G@$iB0-hSJLtZ,d,7f83&OXV,ki]#1PDe#DSkN6=r]Zim)moa*MtZ%fQVbdi)q=G
%$4I[8'"Hob-:4q1&-c\>NY0!j"Fir<B[JMCX5=Z(BY6IH/[Qk8GY"LWRpKGX6&7^>A6DU;cU?DamL!d8aLE2KKJVoj0Mu!!,NqUG
%gitcDfmHcNNq+VfB:<V`p"hM&eUH:fD"?50UlMb[cSTTg/a,'T+L".GOrBsIp.p"f9%sJt&$3,Lj'?.RTVlA?bksHESV+0dF"bq;
%f!4bY`Iu5m>*<8+"If=TrS^3>0"u:6S"\htV$<ZRN$3jC/O[gL*Tb#N$hP`K5+JTl3je$CIT8LX#M@8N9%K$Y^<lK=4mF#h#@NUs
%S;fR679:S=MJ-p3#Sh\a)Io1N3[n\d,tT!dZBIt],2]%<G8,/W/K4i1_e:*BK6ehtKQ.5564cti_1d3#>81Nf7FKL<gGI$C1$$"$
%PGtV+[NHl@YFG3"/'o.,NViNGa5Oll%?eS>aB*Oo\R(.r.#d^\!N\WR:Ki_*K'18Epq9#QO-k\eB+htnUK?Rk%6Mq=Y3,c#@[4Y+
%c?ZU.HK=5E$N\^n=>@c+]f2"Rq'UmI5b@;5iR$?d$VOhf\A\oB)GPCL^aG%N7\F-=JK%iPq,/6kNgRNXH/_&JaG)^1;*f<n1E^>Y
%7aBaB's%tPFq)n$CB*6aOT-(=*&&g4HdWsaS6>?55lCDQf3>&\259Q\D0Vn\40I`[KI(bb1(/Ff">?&#Id(dKSfcMY5't(08m#L-
%\*X<JZm`1:M-;&l3Cq.Z](D-[Uh8@TQHBm]3aP-lZXRV%5h8T?!BA;Al9-IPFLb9#W#4<Er*E;P.d"s6(HEaBo5D6Uj4)Jp?!Nob
%$1'OY"RGpW['c54)5Uh,%mR(80D=]uBX>/Q`M/ec3,T:CST=>B@A3:d+6j7RlR>n/^sFrm/sO$?M[uN4V(-'p:(*\IYBSb:fHI)A
%Wb,6ufl'@7m%J-BKr+:KCZQ<9M?>bN+J4s<@CH',rGKH-n3q*F,$"3H"\KXNGlI6OjB7(8O]#5c'Xk:*&(ufSiVTm^il,'R;W=t*
%GpX*6L4%S'S$SlrhL+X(^NmW'DC9.tNbo%JkO90;W0j$)GN/5a:Y+gf[PX$Q+UR0l$o/f5QlRQS0AZPrEBHSeq[``#G&>>6J@^e(
%6#RRJe*9Gtl=h<$)sr+Bj<fU&IeE"1^VB)?*O<:4N<#Q#-0WtoaMEM8`bV3h,ls4<iAt`%fJ;W>WV)(B-!eJ;6@)TB:)$27n?J+7
%!ZnE6_$%pS2sl#lD6fs'H7-a(U(Kk30,(GP#1:agZP,1`MVn0Eea+A1>V7JRTW/;h7>A%<po@7)Q%[_b2Jtb(^jno;*l`pR/6!hl
%R7W<=`]0DP1TnSX=FhoKn;O.CDoaf-M;c/MC7sEAAOF]b\/E4\p?DbL\G(&=>90;*h(Ck...6*LQP+38FEKC?-icKh'ko=+hacG5
%8pm',]Q3J0@L>pp^"Ois0$l\nBso\:OH)7d7:TUG>0(](XlK2VA8B*3HV^A@$Y^NDO]EiZ(,8f6N/bI+@TI'F<2jKf_u0\AmB^JZ
%mc-j!oW/%;#NmXu$LA'<dIs\:l.Bo=r4TZ)<A+m:7dls.[kunV4C",XJ^C]%Yj!(MKF'B$.mdZgk=>2T;`BA4s)QA&l&+=ms+nCp
%5#bM%l[IS0RX9sHN!C,u1%!\#ea+BUrdIi>^;'q*E9tu*;1jGYVjuO\Fdq*k^.t>\&+@oO6s-1@`"T@/R:K,#\Ng=PmOe$R\!0C9
%Qf3cFO"+nj.aoLbc[W2KeY]4_$#0L1B.EHqW$6a"`MpiojT0jcYB!]W'TKYOpH,rZ/djKU2I>n7X`aY4(1Imt'K1sojBu**[NY^C
%WsQ=H9GU7nn#?/I?u"6NF.^f(aPhi@.`36m&n9@K0@FsFn],Kn4)V^5f],K0op<R4YH^gJk7I]BFoH?FRflrP8FVI&$K\1HQ0'"R
%Z#K-H'X`>'3ZMuRLX5Si*"C\CocKI`-iRSUUZEbtIf%0Bs85>\p=t2<*Vr(K"^$YJIGDE$EWAR&,\ZgOe-a11,j*D]Mr]OF3Tm`f
%>b/-K'!#.YD@8rA9p4O4*c4]C7;(/5_#i/%HA;4$jJ@Q<V?AlgNZBo=KK`j=53/XuO-dKOdMMi/S@Qnb5Vb@qSth2%pPY>q=_V2M
%<7!n"j"H1!%O)VCFr+>hB`+K+*Uut0F5ECJ?W>p%#5V!C1J88ACPt>"0M=:54Bcpnn.MN#%c:_<YiG)fHb'.Lhp22`8'0c7m0DnV
%+qk,86\_fZCc.F(ipciY\[[fj/$051q"FLl,X#s51J>&4\nk`mW\>B&f.29dI7S]&/h'ul_kNu1[4l&0>tJG_O#-eRaUq@bP_.:Z
%W'9(La<h124bedCiE8[C`P]E?AAG"q+*l$PDh)BX'gC$g6*<2)cF)BqSL0D-J(0t#i8`SToq4-\ac65gl9\(#OkJGIoOl]Z^/12D
%l'%j60W$9X#RE1^LEp,aIi(B']5+CG.5ugl4diL4@/dfZ^HN?HbAH/jTVE.='BuamO*FufTnBA(D>k]d>t0;A]\gN?!\0DA.aI$E
%Z;t:O6s5B6q-7.k@oM-9h;\spc!0)*_:I-.5?UNSF8#5*2tnZ$g1K$'fNb*L&/,L!:>ZKITF;#jH/O6d7V!gN_5T2QAQ/WcGBN)^
%&Ws(k\\>j'F7?HpII>RUI<Msj=s)1WgQFRuX!sA6+M&\>'`6^F*!G0?q!`eNfYF_[&O[LK2V1m=*oQhDPP[_]dqeD+3$RZ;&4':.
%;DpE-1pC&pU=S"h"#W=P1%fu07Sr5NhHp(h19#lpE?eFmM@<__Rj4"]Ju[j=`@,<j,'i?adP(nN_XSe6>-l29??'=]`im'],V2e[
%Y6_a7$$ZS?/"_g#8t#1[7SR*F*lA_4>Q(.O&\L$Ni+Ma53ifXYO%;eII%.jhFl(jU`o9#pY:V$f6"NHFE3_dRp(fc:F:gq`F7&KH
%7j9^]*]KsVfPb*kF2Pem0"\u!c&AeSY8(lFaPAl31Ms`MSaohP]/tU%AGWb5.7r`fWWYDU=7u:&G;J6KUS<T!\.&DETbII82AbD)
%MPa%n%T10bA5$KZFTp-cjV=!i@d@K!2AMu3>+[r(*:9(S;'J6?obf(ja.&ARl]r7?CsHsg)@-J;N;14,E_?UQ-+,8&$qns`M<(<J
%p7HUN5C]So=;_.Vr176E%PS-&lFMZ.nHmc.[[:Vq[W/,+UOGTk21d;kEt'<grHRVaNS)0fcUjN$_+q*1)3A8=K-,JHYr0;XQ7b:R
%(%Xt/9?Ei*oL2];bLaHs"*_.V>^B"O8uhLB&kGmmWICk%#Qt8J7#Se5[S?fQeG3$g'++6;GEJ1)&4Ze+rq<>+W!lL[ihlOkN*%Dg
%V$`rr%(7i5[,=Xi*KB(Bn]NMo">`R3D1N-YbM_Nb#=&LJlGM.t@HcMh'0oiq;;\RmB$!^LWu0V\mmrI;rQ-'D3oC$FdfHeZ3]Yib
%N_=,u9pU=^9`@Y;dP:sB.mP",lF'C,p6&9hK1O&mbL6*&+5Eo)5_)#hb67S=a^p!:@7a4t\6:W=FSiOheTuu49NdmX2f^6YmR^=X
%U#8pj^1UggFaRW+ELO#Wl__M.=+l\5+8`J%ANnE;ZR*j#rL^XoG?9;\WL;J%0DrrBU:E,Q%e.$_+Oj0Zgr68JF(Q)j)`fQ^A^=c=
%Q#3p]LUdh,*`WmJjN;GD89,7Yi(`HT8J4Wb=*/V__/YU?>lEZVF#,>>T8n@DaKtkVo8o=g)hHV.I,5:/08A2@&Z%r)\@+>O!Hnn^
%N\@Coo&+)Q6+0A8Xp(t_rKu\'lOWHA8F!c8"B+pA6*7^.3B.<Ii,U66"W?l0o@9S'aaC6iQ>mkk0@`tu8^#@D?;.[P@#V5Rdhj,E
%7pc[4gg(X6(`p]f@*$IB1Tk4X'P:osQ=f\TdACW$2ID6o]gJOUMi#bqm>?pP;=R2lS!q%L>X8/&;[=+3!'I@N3Yi+";Dn&RFd8H.
%L1O&f\OBU,PnLUIh"T[i0<Umj-4rG3BSu9N\)5BTD]8F5Z->N)s51hu^,B1(-^LAS$#M/j"Y`er^8t[G0%!8c!Cj-b"8qNOJ,d]A
%b.a`J3oGhSe2QO&[@HM,%j7,S-_Mq<F6,qF_fdlCflHqAH\<$1U,mq2l]V_jpaPhr=Arl(;+b3uNJ)rblq+K+3//eBBcG)N.?Dn(
%BlM]GF46pI?5Hq@Op;Q,VV,.O-8G84iJiObaff=+$<fiLd@br*Ho5etUK/;1E8tr=5u.CTkYVed<pGBSOUTI>**FTp'\!5HU^qTI
%j$=!p2ftgORsKT*0;b^X\]OC>Ze(2sk\\cPSM"_:^.DW(&/ZIMI*m/5jg!B,FNMb>d"%P7(t<.:MA+dn.OF5g?fMIVKJAjI@,O0l
%_keCe=khXT)ChG%C+HF!>0Nif;DM+I,?oCt;S6PoQ71gTa>e569uT.cHua"6Ca\p$ZK`n(q9?tZL]9I_q*_I[?U[Qc0DqfaVXD^b
%m9fh$r`Q;plO!N!\Uk>[kRfVZB=Y1+'^B[`Nr9fPaNa#h@VnN'Yp,Mt''@#qM5m*.+RkZ'Ls>T*'pu2C4F],6II'?o?^2.eHU&sk
%Wp-F=3*H%>`eWjA$2e7o2$dt7Vd,Z\5Y^VpV[V_.K5t0U9;D4;\#CH9K/b5$0l*GM,\R_j>M/Y.?I)m8pDBhWZ>55U\VD?4ol<uF
%nP33&<F?/eLc(^U<)gO066i=$pHgeDM(,/gU#`jHUl'j[dt+B^=LWQJb@(Mi.Qqo_+n,[]kR&,Fc3nK$M:0Z\aj6dX*&0Z^TIeed
%M9]7rjYJ<nM[11tZ5#3m3l?^>YWf)E$%5fMf">p]A-kga37dDf:.[2M,brD0;BB[_/gC6D=K;SpMVoM`q)i`A6fZV&&Km*,kW^M(
%:q]),_J\:i?A<ooW<OR,q-aNcc[0G3l8328MNJ,VGuD:V)nG:2:U1bQefTtA+SKs!V`'B=iX&4Y*7%tkjf#@RZE3uK,>[XlkZq?G
%NCK.cNd3d33>58AALF%=LB%NgfnMD;`b]G3EF1I-0P/rKg3<,5.eP<Y*iC>eRBLLV72WdD[[jPf)c6M,fclkRKH#ZhWY0XbSC2DL
%:L-4YP0R59"-CR,YRtV4Q,7\nq*P%T45'LrJ,>o\3[0lWI2++W5+A4Q?ll%J`+?/@!1WITrA-*L,LssD_rQK$<f0tWPCIBJj8h_i
%O+R*K"-l7-dJ$ji9`W''097gs-[^"6)VYXhL;(9hk;iBtj41fuVZq0OHJu'-CumU"rq!nd*Ddn3[_Z<?XcWBY"GEl_e/i<,[XPmV
%'Im%[_8jU@H)tt?'t1/gpe.f@Z]UUfc-&q`3[C!m>XR_iPbHHgqBGfp5$6g%`+Fk;KmGhu"bebFM9Zc<6s*5qA="SuO]eirM+TN:
%p!/l\!R@-S6kt/T*AiP#Q9N/>Qin,-:L4">Hc%rH4O91p.L'o1]YQ*i"qIuGeSSU>DSn:DZU4IiRi?GuNgfk_N``_190Zgr3a11t
%M;!-7oSE(HRbNYs?a4<BWe)aPFM,l5j7'kUV`k]=1'2HhG#<*l><R$!VPPr)XZ"^.@b&P`">aie7"127bjJ[3@G[mmhiSnV+DMAH
%pM6DTo)$Um#(ZnA0eP+Pb0^F3lf9S[?I\G@@6bf(VXM1YCBWY5@VY\,lM7+L[m[bF8>2@4SM,9G]/]8F[\bOB;W%dq!5ncHR6tFk
%@j%url8m>.daQ!&bPoV:XSH73'nICsMs4SDjg9\r?2m?mGleR3!YL2@45o:<6C@A2app.4[r!Wg6A@i>5n5P:"LUXX#Cg3:5u\T&
%D'Z*]e@,Z64:gj"79om"9VY4?@QrGc"_?AnmF?c--:qnDATuImG$P]OHR)"F,fB^5I+h6;IJFlc)fmj!Nr"?Xg8q@OMO)C*&11_?
%Ho`"/]^^eF^6:auVBbj?5kNU8=o3X1esK\1:W9b`,1&WKFE&`Lb[CtaI-kXT;"rMF=QRILiNQdcL$]'t.EE';lTp(%ZQ>,iqE:66
%Oe1JZ+XZE+pb@%AQF"<3?O:!K.FAeaG8/h@G-LetP;EZObnD?[cnO#g"o:Qh(U9Y@!gpmQkK8(WV,3&04j/50Go74F/I(rC:F+Gl
%(QR?.X.KYE6bJ"-<?iPEetSf;LeL<T7um_cVWAe/7%8pprQA8FM+4@eOIcTbn`]6ufWQ.*$3HEAD/=uN>7!,)0jS-N!W(XBRW_C6
%$FC?*^QOUH`J/n$]^/MF3Y"C+O^KB?GJ7@m)LPNGQ;fo4'dV0s\qDaUN#Ua"?F!,\q#+8Coj.7>V/d#9&k%(?eam5T^;cqD6q3Xd
%A>rgd#n-m]R/@GhEde`lr0n.MapWlO<=])3d#d!%a<LWEN_:hA5-F6k1m]e"hMMO6d$l[m1H]'a$]h8`Gcpp7+T]#)O)\\DHk*S`
%<BqcLq?Or;,9TeED%ftj08"SCJ@<U#U(,5%=dH;^%$+7pU0:stXuC:`'SrWgYNMc*Q8>'l/TFAV8'd$;+44#:q7B+7M6kO:P8q"Y
%*fai'G7-ej"=C!tg4Du?Hc)9?huW<(Zab`?UoPbT\t$]lXb`8[3<+Fk'IHbRBV8-YHO=/mWpHCZX^VLGQH,ae[<ul)QBjLhKh(F4
%1RY6ji&Yn&,U*["#QghP\^I8;>qIXOd:lOfLY,8fLuc5s3dKq\Y6;e>IcCd$-nVuZQP]Pkoq4,1g0qd'VZ&DBfMC3K9GYFD<Hj]B
%,EM#coU8q[>"W0gRiPQbYF;5:i/)Iq`'u3%f>ia$80DGZf[U6IJ<1+kI^@E#$[F2d1ZSK#QhT+SroM!$d=qk=2IK2N2,-/>/g[2;
%haKK-5R1[<mZ%k84,H/d:)=gocZ'(A=H03h:^2uT%A,ZF"!f&7:&*i>R/JGiKYKXCGG@=\6B(fm%ctUOc6+T>/sab>\$/Z8gUrF`
%a,W;K)TPql-0,7-U9rlh5us<tRi%Isk8<4B7EEbH@$kQ1Brn81p\T%S74QFt7ceHR#$EQ20o5h^LKc**X5"c_-qJuml/F-=Oi,qS
%gn6rqMcpmN$0hf)?&Q$h'77UI;_R018F_C?f8Yk!-=i4T0(V/Ybl$;lW+oCRIufhjR,H3tC2O3WaRH&N'4?a<bL)bN+G8]%Ncn1D
%M<\6`m<1NR]V)t'2n\e2CSt]fYgG81\FsMCFajGJmV)lJlIg*DQXa>s,Q"Be`jVo-`Z#t/$P(aTbC8."M/E%OI:dZ>:V@6S3]3N\
%P;lV:6r8ms?3N:_qjTY.S*?0Wan3kE1q.;#OUed<3t]/dNCQ]@&+`BWP]\FT)Nt#ZMfg@]X`o!jJ#/q+S\1TV1=I#*3Kg-p;W)S1
%$s\mXO"[uI?ZK=U1radc:rM.)P)m?@4FfT`c;JC:?Pm#Aj<(KM1`ocL6*Mj"rm'l(SCtBn/E$l=R;:`9VduferfV9\!4bTMIdVth
%#L5hN01\8g=6RdJ#ck-m]%r]YQM^(5VIU+Q;@EP5)a=,a^3WJt><SmgPG[uHg0Q]u!#_F\@FHn^DTr)$:XJ=6cbr1V.P*mpYNEZ8
%5*b^F-RkL1>?lsVP9fOrpmdW1Q5!$p6J(R23;_<*GP]$K\fic602"*)rI::t786q#rCd&f`Hp#;G4'(/iP4)mBEU>eclKsXZMZ/2
%WN,J(]p!8Klb_4Fkf*<uV`QgG[Ans(QFCnZ4`aU1<J&s#IBO<\m,hnV((;O&[_"`*l7mkaC]!V4PJ20uaf('+nC8$IFGX87OdXn)
%nL;*TMV`86!+tn&J3l;s2:/Z^gT$;UC6p0#lJIUCP'Lp^gb$67Bk&<C'W2r#]Ym%OcIfTf0@D\S=SGK09D,!f"X9J)&`mo,pZFJj
%apOM`&Epfk"\D#1]c*"Vh8>ECgc&FDTNHEOm"iIX.SA6&2+8RbrJfgfhu/X3@(K#80:Mi411f,q@oK#F[\(7fBE:$:7=2'JgBD>F
%Zb:a<h^%.9qm4UkIDFB06./,*s0/#D]';GXA>4eOMPu3-GBRMSbH487(&YGD2VL^XZh#QZ!Qq:<rV9ClZE"5R^W9E,b$5n]=UB3p
%b7&O5gl4hq_L_?JWXL7i.a8l@5J-],okp;@2no=SW"4LfmW:=5hsEs]htnj.&+/g6$i;7OE)BS/[&T&PD<EIO`r>=nrNb-=H5oOT
%!/#BVZ9;,C9X'8HbO$B"h,'b;l+Q1]SY?i'Rmp%JGpS)T-Tu#91t2_8'!'gIoH5a'9.71GTY@Ii5E`(4223YNP3jqrSceeGZq=L]
%OiXGC65`'-JFpc:F,H55r\0)eX4l;D"XeE!]ng#[J\8l8$rAO0r(Eu:JSs85)gn->UH=MR"ng)qV;9N-cn/=ITk7CZD-Qlk!6O=i
%7oN$$48LHQRS#M<7#&snJ9?U%"Ki#:3^p#HMRR6?>;8&M0+7]IDgFn8"<R0NaH-BNqSFj-W_?/ZM:H'H,2fs+duR;WIYFT7^;KTM
%;sNs<h9Wf)!h]4o='FEXLV\=E]/n.fYM`&Bbir$LZH2)]HQe"(`ee&gk+l@9''G`KY,%/]14Qi2Vd*LKItY:oe[cO3eb@"0QBt/t
%RqHH;,ib?&3=GF/*Sg/P9::[aIDhTb0.tZ_dNf`H0$W@i3-JCiV"s&C8i2r4PI6p;X?%H,_1(S8YDQjo+-Hl]UZK35NtHL&;36`9
%F2'E3=I6K1IAIi]1T$cde5dQAcUL?PN,RdV,<bS[9]gUJ(kY^3N!sq#hE.3$XTbcX8_S&aa;*,4.o!tj>_ZldOiD3)7Jc$nmjXW]
%$K_ebEl^SUm?@"LI%$)Kon3e?ao<r@0e@i^f;hlt@q_E:eT_&tL*n9aV7ms.P`a&RDXgq=4AEdEbS@>T2K-mo.cM>rqts@J')Ahh
%H*;?g?n1*VasO('))CN6=pdF!hH_6>LXB'Pee=U][h!nXd?2=aC6u6Bj;;BPqkkuOH@[=%5mXbAO35@uIld0+Q2NS;)NJZ0:#uoC
%qF]*(m&,-*7L7um%4s>Ob;J/&'Irl2'_df=@q\Fm<@q?cB\o2HC:I!Rk<ITh'U8e?BlAr"rsEAHCfPm,JP'aYlU*+H*4LHgXK65^
%q$L/b5:1$bP3oo@#:3n\jmi%>[4<5F(aGEF#L9<EN_QML[^%&pe6dY75MT3J6dJ0>^YehKhn+9VWMg^On4c&Z$/U9!1'2`h:HJ1$
%R?)cUltY^QQBh>D8BKAX`8dI;]gHLNYdbU-aF5b(_,*13V_313N87E$01B1`<rg#3eA(/9p=*^Gl54aBLZY)A-`!79`J@F+_&KI5
%MV7K1I)>7!XjD3f"6M],qt>e1;a]]b'nIYf,$\!EIRpP'crNdW#t+"@n1)XFRg(>j'Rq'D^*BuNbs`/a*!Bp[&#@VqS?F?13b*Pa
%fd9mDFL0MHVgHTGg,U<mn(BL(IiUHh"Dr==M@Q$RT(3bfT=Yt9eT\lTUPB/"c#]N'"l,3]1F!l2LP?`JHOa\39e%'Wb3mQ2HO66)
%Tu,?jGLrF?rSL_>-"J)k`OQ'4anhoA]1$m7+Q[cF@I0X!WkgYP`F]edHCD9Y/9^o[j"IRFA'Ye*D0AR]*8=4a089VNJg5g9m^RbW
%mnGC0qrg3<_6keVSV1;C*4q]nU@#&t6MT;Mp9I]+&U[$Ne'=ee/jHdm++7`HIC5(5ejoX7Vt>CNTTHKf]HMk"ok(r;7H1ZY@?uoc
%J`[i$?X^(:8HajO!/'!tr,Kr%*H]Vme7hN\!bE`6@:B&t7\nTn^4D"bm=\rB<+O`]1JD6T:qT>q#M8o8lHISH-qcmhjBTU!cHWur
%$6s@s9iF@'_s!:?lSutRnsT[c+2;fFfP%!agNH@qQ]XVgGC,/k*m>N*9u&R7o5*@q/?_DiF-G9G=P+n<8gg>5!:.>NSb*L(&(G)G
%j2Jl)nHted]Q5$n#((:1;W/S5@!>f7B;V!*o@DL1mXGE?::FN>K'h(6Xg_7-/Vne;ll4sAA$IVa\R+lV^,Zl-ESe^DC@HMcmdj3i
%T7*=j:!h5_KLoYBj,egZX<o*)R[gG9EcR06>H6#$"MUYq7SfT2^RL\%UN6k7[7#U@aS4ttk1Q"h:A.qO&UV8q.R/#DbGVLjp5`c]
%XkFK+4lfI0ION?;g?/*'['eenQ!9c3"H5Y[>Haj5Vnj<BPu)_:Z9PJKo<9H4b2>7L_i`^n2)j,8=lui+]O!fpJ]j&(@D$3#Gs?V9
%H*0e77f7-,R"LsIDl]999<%:J[I5(%g0[%O+8o6OPpX"=HUn<;&tO&kn-Q(1WJ%ECSV:BC(-d^A=_lIt0_/o1,HVnD1WJqC6TI?I
%,RBQFZ)kJV=d)QbT=cj_6u=8rTC_n/GL/QJ.==XWiC:sej(-_5Zh.=CrhCPenZK"rNVX^`aa=E>M&f5rq7]X<P/V)W>:O%5.a7/b
%F0N5G:e*BlK#%?HfmiY]*<f-Z<=iU#p86S3QqQ'!#i'VdG8mM-CMK#f\+*%C=6k&.[nITuk>#^'c>nV`MQE8CrUZ$j0.^g]3oUk.
%\OqG-(Y!'B1AgnjhA"5>kcfL'iCNi\3pF-JrB!,DHi*?p&)Lf%X(>b[Ce_,CDfh-gd(r:*aNsAtN,U7'GCO_PBuG+opc%C8nOoSt
%`<BIE7t5hrq!C=^Q=@5r((EBqU:K9(WXgHl_g?6u\\(phhHL`&.akJh^;+SW`=>GRZ_Eb`M,;"5:O<UQV;7K9pd5**FF=p80n+=:
%>mpC0V@VS4_ti]5s6,4G9]aN/pkn:-.kg;dqD>l\gN';4j@XVhhbEMTGs%j-.:TgOTore\:`<6u!$LasT879QAB?$`8+8(pD&hD$
%D8)fGUJnAf&Lgn!`pBuF2,O5]/.G$.T&kb+ooJ^iIRYC!2/t'S^n@6b:qNe`ot8lGcAi_tdqG%Ga.R@ba<Ms&f,0I]P?0O?EC&N`
%X\=MMnaZO=[e?Qi)(9e*$$<Z1Q2"0]I7F4-]/9QbDdN4"?`mqdj.:U58-o#;#91F4!,g;pQ"ap!*j8Qe0BQgfW>NlpeR)6'ajso7
%p&MQ!`E$>V!T8<Gb'\Pd7n7XDCeub=\l]QS+[o3>AiIf8JKup`;J1MIQ'<SDVZJ_a#3D'FXZ%uc;Frnso)tRVWS[nuR`VRMkG>6g
%&>/8VlUn@Th/HZ[GLqu&Wq4[T(`Ej%<4^7OB-c#7>F;S:aV43ha^<uR<^O*T[*o!Yp9U<s:1nH5$,Q4q4Xo@r1%:A*7;(Cj\%-;I
%8W_<]e?4)7qXC'Q'qE3CN$u]AmiIX>!Dc8e/RXWQJJ47!\e>4sPJ^UnDX./6^H/[0.*a/dMuVe.cSjsqqjt>?n$(/r3\<iL!1O&R
%i?\/F9D,34\R2.6<sE;q..nF#"D+p2g_n=*4<_,UmOj;99Er5IjgH/bqR9;"B7dhclEI1I0^tFpF#T'e+oUidL9c-K:#:)^6d74`
%Il-?*PMbFo+6RpnW6:;?f/#+R]jH>sALpK#"@T+LIN3b0rJeq/AGQYnG6NWH7^,VYAo[m:9'?"<Bb10LYN'7PUhYHU9H)+WfS\"S
%o-Qnm_Q-Y(%W?P"_[T-#Y@B`egb<fV>iE1U6aB$:FXf$d?&rVCE+O7Cc_XFrCG;rXa*'ViJ?c*@-;sf$2N9*'#d/aG$K^[S=BBuP
%8%5-l;ImMTVg*f^BOB'pg(TJ1lga\0ae<V81rfBnPLeaIk!!*Lo=;J]hTGH0=AWl7TK&5t'L:2nm)LAL07UId'$E.Y6[CEr<Olg]
%p*LE[Q#5UO?g_Pks6ppsJ%)n&W/+;3(9n7l_j,srP5<J,Vc-GN9Bim?*.tYN,i_fZ!4::F5?V:Cq:4/JE'-DB<+f+Y%"3LR6G]lA
%r0(m:/^+0MU`?fX7)g:O["\4p$mNU-+2qYJZa6V3:?XfAUD(E5^%NrCAYrXZ]6k6*j$&m7;$+THZ-X;p-s!c>\d-3roEnB"0$Dcd
%Lr.Qt&o!0F\$jdWAPU`G[,%<n5'=GUG&PhpMtCp(0**U(=X@cPg[n;14hgY7<H!i7h"C'^XmMQu4#]TVOkL@of_me!7NB#4Cif;6
%NapDCL<jDl@g&BOqG2.O6o!suA#dr$3j#?DoAcHZ%XV-0.*a4qReJLC<3#N*f@7b>,R'rY9a$?s#)t^KE3^U0lV9!!@+8(:AmR4X
%S$:&N@N58Mh6/0`hc?,[crNKt4?(d_VB<gkrDU8mpQbct@`amZ4Kh=;@bJc*mCX&ki-@,\LYR-&':d$jS!Z9=@s;XZ`mXBZ4IMZ:
%ECl)ihs_]ONU@^(8*f%R]9RQdg@6,'A[GUp8tKU,lTau^gLEn^87,]C[ETm"/qUHr58Qg7FE!k5c(I+6QQkm/8*jik/B`GfdpCrc
%Q>c`ZVe!0UH-Jg".k?2#2+YM60:6a\X1kA+fFD/^Zc[0/YBCo!(;$MP]!icRT[0/PeeX!Qe0_A^4cBqXB6MnWMu,FOc:39NeFcGY
%.@K=4O7pL0kmA4oT>S*K8&LJSO2b<6h]R>\a\nsVKL&h/lDRhM5?UVSA>uno*:CZFkbPA"VFiZD2n/a\+"NMI-pZ>'.tj#Fp$E2p
%@o94OYb3s$Y2\aKFT8mPndkNH9QJ-mna7TV7/S;aZL-MoMrR>P^[)4&^'S2DQ&&k%(8?D#ZCKP6T95Heg-Bh*b0?>d3^,D;Us,#m
%TDIs/Ze=-%!pj12Q*9.E$LUUS.1iBBheq6p#TQ>':F5>G&rDaN,XnuYA:$;0=:^H`0d;pPE3:#ec$2hAa1pBhI'WY.hTmpe!e37W
%?LQV@Va'puIseRP)0it1a\&]4)E:bSMLkJ)=m=J_a*2GO"LRjbVdkt6_f?A`f`<0W2-r\8m;t3pX:NIR(n$;`Ybh'C<FoPAdobSs
%3D:,)^GQ&285;E:Ds8g0;28`5mQJaDNMBbVD7:"Oi?pB*H!7'nm`C^b0-8i.IOBs1P-L8m;6O$7'eu"/gt5G`,N`lMU(UWp->BZ_
%N1HpnEuE^o'D"dA3M&55fi-=]=ka1^Yo1+"X:N$/1(#.H7VlS1<OLQ[Ci%?+M26oQ6=XY,4c'MqH0[]ofcC6%Ygm>ro@kZUGMi_9
%SMbWHrP6]LZ8J8o(*@gJG1.a5KI^]s:UZnpgrY'DC-Hc(<8O^KhQt-ZC!Pr3AHRNknOdbFlC1.El][Y%Srk<,>1;'o(Xmd2jgfm5
%bmhkod:%uq[/rOWZG@(m,E&2GM19^iA"qK4Fkl-RijfCjCnHFYi@?60%.a,O5P\`4@?LLgr`]jcILm(Z#[FZo#I)UUi+`%cs#W)C
%a,BLr`"X>`pG;aaIs'p=)MA7+d/]u@),`k9d=:r7^KCLKV<LeUrkFlQ'N,LOV&D,3hBq[2J4iMR>I*M?H*>9f6`eQL1F=nXJ4Sok
%H_ED%!/QPB$':kmV&N;Ha[4eB.4#IQef?J^U;[OJB3#-am\5qnJGVc=o[)K)PV[ll1[32Xr$B+j3F2OZ8lRL&JJ69AWJJOY.B\(C
%<:oZ<bT]TPRE_2*k]3\?SFV5*"1'g%r]);1:>ghln[IG1^rJWLX-+ER%[oY''AV3i+qhCGD%QKCP'e@A+WS)e5nM.ge=09]'+ca^
%Y6TipR:>.+,t(9B=C!?PCX]_pZbp:_`*i2"GtZG9J!+\l<_q)h-I<En%'OB]`aAjBlmqjA8^%]?f*$>-Q5i`V<2Tq/VQ74:oq4*+
%R6Z6f0m_Y9U!?Q-+%hSO#*girUsdL4Bkp>RK^rq#+RI^Pl`WMGs6Ls/CWnYa\`!<oQq[K0s43eg2Z7Z-.&K';HYT=#/5&snf\7]&
%E9?2L`A5<r3.M0Nf0X)2H<=Hi1s]_lBhob0JT)3!WXI_^JJ8oYIUfG(YJVm1iOOoPP.'7RnLCW;p)/3G<Z5GK.tZs]%@9dA?!QSG
%U*#S$/HP0>`)bBZi2CU0p_B5bEIg>cNJ'rb:#)fB0f`m#V3uH/.%Qd'?oCM/rh6(f>L5#><^`.R2Q[(;YIYlA-AWDhPJuf27k3)5
%'icL^!%$,S8F4n!j@8gt4O*QQgke:iX_8^<M%:"1)m4"rP]F":Xbh4%bOe.F<PZ/fXE'CdQ$"Z4HCjsqbu#W!o^+LP=Xa1M>F3&*
%cCk^tkaG<sH`%WD0nuG_DELH'H9;XYf]C&XfI[hiEQh8\ZcOGR)mbA%gGLDQ=PX=VN]IM<K9(:W?l"AV1JFbKK%>AR_'E7q4H1UU
%fnf`:J.>)G2@US0?,JRs5i##n1M'e1W^=-HU.u8,53W:ZI`jB6Y^\Jl)>V1YGP[Ld:#uE,D,m-o-r\D$_T!'o[Yc-]LK99/g,lnc
%=Q<D*8,?5b\,`@:e*^'GY%t/qU1ae;%p>p%9LbUsh3T5=7SS$[GofN[DEnN>-X^jOit5>b'FOt7FEA%th,->_F/iJ@0maBa*EW@4
%'*\I\@$Kg2Bn+Te@Id>HNk]^V5LrJcg_=*h*?#g6f3THm?q'C)5dr"AcA@J/J0,m7rn`BAJ[*m&59KgJ-8&O+Y[!@D@YHQ>s2Z(d
%bn]C7Y:n6a.*R'!@"2YcP,>8\4k+,CJ:m<?BLRQ<U4/+d%\"SV_o4i3TPdtF0(`dor'/r(qYts[r"mFKnVs,_r&M/oak*_t>!.C?
%35bm6VR?Qh2Q/XD&PV#>?%`:jk&$theF[M8&FnQ_F&6Ee,.g)u1%o61'F?T_jN=rSg2#/h2K&@)^Y,%,1lDDnlm?Tc+F1EH#H#>8
%Vi_=+/(j3H_GLM]2aJ!_LteQEOtbC"cc-To([MY'f8)CL]mqT1TQ]2g-&=Y%Z]BqdL<[@0N<Z$f_QJQPOKbB:Tbmb_%f:Ab4ZQe0
%r<cL`<6(Q"Y4+?\fI1Mrq,Z:_!/_CN&t73QFc/jFh?S9!+=YN=iZ<`hj%DV-_LZ1N)mXS])Q_r/er)Y[fslTonLqAu`sB%$f!C/9
%ce8dN5;1)OMJ/1"nLq3Epuo_7%^r3G(O->*1_"M3@7ClO)tD,^JPoe-$d`>7*ku"J3-8<m6)&nqd0!Xl*+Vs6;&O3+:RCG;T>7Fq
%":;D2_h\!6I!B;'M`+/[.hZ[elr#&@iR%4oFi=]?l0K%P:tZ*^HHSKCZN?%7F^Ws)`p?eSPYFhm,Rnr#Z%.mJm:6oDk1h_-.(UlO
%%Bp0',][Nr3A@4l\c\kTPL6e0``d:A*.tm[K8=U!GBh^u6co%c_b6*k9B*i[!fn9bFT$^YdD]Bu?mE.1Bi"oY2FjBJfT=`pCA2f:
%gMfFcFrpV3cn5f6*T)29[=<h`nB%L63:Fp9B7b-qCp$"thD1UId(K>1.s3p)!B,eN',4tF)oOI?lBaegkIqhfKZapFEKL`"q>Be%
%LdHj4+ZE9C2@!2PSiX0DmV1n-kKh@Y#rfNqAN7)JOF#s7X!bjh8mQG^1rJHW*"R<Fg'5(.QYbDZia<;gB7%-4!$mESq1-<Qg&4;&
%A?P7$-[B%PI`EL>q4KakB>3>%Kin.SPkN=O%`R#%LVR;(Ae)ZOdX:gIY;+%gR2bT5"sm"tm;-JB$H7u1DU7:6[\ZWP]:g"mQd'$i
%H^_O6hYtcRgDb!GBZJ./#+;\UcG8o:M\g^W]3prA4)B!$:Qdr72DN2"jr&T7Vrno5]?,_:K5XYC=-"tCT/'Rg=4D;3n/#\c]h%:1
%UQBFW'&SMlq_N61^YPp*^VFbK%_gt3,Y1#J^4ghM>'H\NG:;uq$B.9"5XZZ"_:XP4:&jR[Ju.04VFni&$t0:GP=_>>%'.-Ya"nMS
%!g5#a#o,_83?Fh0Zk9TEgg)EIg'Uqu['SEGAp!9/W>**;9mfVi!EZC);$U#EkW)ccX^[TX6?$5\i^D^QAJhlt#s)gWe^4e_Ddp7D
%/9I,7+sa3\N[^2O(PW+!!sZf+`:'(dNsqdhal"ur$NP+j)/fs'9-:-f9[q@jB3N="M=tG`.&s!Rj_gmOf7e_JoHQmpj,d]u1NS#"
%rK/i!?AV5S7N$-TDH!/^]sCW\r`l>(g\)hsHle<>kI_(@.@$Z#B[\WD.(_LB2OmsBEW*N(/2RY((&nZ>"6j2*ar=FlNZcJjDA;Q;
%ZW0tl'`4WiV3;#4b+hh9&eX7>]j[J5V)-9h?XG9TdV6os&/"6(S,cZp]^B^)fmh+D<3XO4s3CfS\?]O*.,gc8$QF`\;qB-ia\:Zj
%LaUt2Cb!Ad)f[2#6"Nlr$C)NaL0Eo+R_^p>S>MZr@W4DUH,^P+6*`8pcap&1#l`o!PK.%NQZ"NF3i(RH5%QF_5%ot9,d\On`Z*aG
%fm.O%rb'"0AcI>'L?:rj&I\iU`H=/^q,Gab#5st4$'-qtgW"!<;Eii'<6+?EKf-DoqMaPccM&Q+L*Vp:BuOMBlQ(E>GRNT0KqYL]
%<g$7<\K[?`:jOk,-p(.+Rp]aZ:>:g"']`o0d6`RS]472a*\2f@1LbjA;V\ZJ'=R7ll[U<i\R6Z0(bb'X$3E>G-71.sU+;#iB=D`@
%*1KB$OVU7G2U6E>7s%umAm^j$Or7*T1Ka!NfD9d:iFZhpE:,+B;%P>aD)W1"G;fbIV<Z<ee2Y;4:7)0jC9`[B)a<$d*[2=s%IGf3
%UI)9$5nUIX#kdnJ.a,,7]Wr&VZ)Q8fBSklg:E?m-H;5F08TFM!Mn75-n!7EJREK_\gq6KO7@LC]_=AhN]"P5T!T'oa8HsP0M(4d#
%78iMp:rRH%j/Y>hI>/MWYcMfOJOW7^/.TtR2:+1k"RhL"e.rOng62S6CId?!<2>QSWfe)dNp:o%=:s%s<&$,Eo]:"P^"Y.<MbRX\
%A4mdn-#_oO#Xj`^'<7DeG7KrS.A5OAr>`P1jD*-!ja$3ElVKq\VWLgDL]R!o$rVb77!1M_)T0,1a2qt61Q-C!5O[C8h$aqm&Rh)&
%6U8C-qJ\S_"X!fP<eC"`Aq\"AZX+`fP\,!.p%Z',=5'(hpNQ>F]4'##eA-R'#P+:d(tWntDFAa@@cCbN+j/O;Hn$E?Q+t7*6ef[X
%$NU@:\YtSYiJdM!]>RfCHIX"Uh%\EVlY%gleZ_3\ffn)h!MWQDnOIt1>1R2+7ttYU_g3.4^T(8s]\:b'4@3u3YAe7XQ.;F%QRImC
%XA=CW#'uWoN@5Z#+E&iKemsI3cuWI`.JBFAVQXT$S.kKG7)QeubW:ZJ9],;X[eG``gA^?gjq_'OjR#g*1Rel)L++Fd*'f5d=Qkcf
%+'_E3I<btVA@@+CC'cAuU`[m8]QU4JV0>#kENbT%eN`KY"4+=ia7n'DPJ=J1s2>.]_&V=6?Y&OQSk!;EAC+/=%Q'sU_*BFE51Q.%
%8I!Mc>LbE9&?+BSV&'m8aYQukgZR;fAKT_iii"4_VY8dk<G2P38$1J%JQ5n!9RBj'R=enh<nDGZ?MDWNk:>GAIiu.T7_MgU4qpJ&
%n^)H+%`e3IG'F#h:rt[G&Ic(^3/b@Rr#J8"%AC^\nh%Qg+:9QBJl#q3BFAK1QW4*b*E9cPQKF+-JHZCpU<R?7qSn\Kqj1#^%]Xg8
%d]n%lD+4JY=K+gD9%>DG:NO)[E<GohfmL_K/mZVZ<4(aUW\22/V)7"cB.DP60P>JD!",EuP]Z_G3s.mH]RC;lJa)5=&3`sg)C'Z]
%Z/_A.C_!49$0CAu&+'cs"t2Ws00*Q+NaqO7lcl1u)UalnSpS$FV3RGodXkB7O!7;$<<g;QZYJ2>BN=[uUM/os[Ve>^(f=R?cr;!+
%gbOI?!3CEXEb+:mZY/o?2<=fOj0YCYptArtbLUDaW+=:C%r.]&1lmJ[q(o#!muXXLZ6dK1Z<^M&5d11/k,tZk&=HuO8<66WE<E7.
%.4;^R&aVVg/V^fNU(BIQEq\Fl=<i7ilFp)Q3kGIJqD,3VVaFr@AG@FRAY(ha4LP\8G+\pp4pfj*ko_S+a26E!^?2!AQ-gMQh.]N]
%M8hH-"(PZVajh+D%W"NL_'[)NO+&C+1BRDN$\B4YOjn+OKsji1<n@A8OmTK`LDr=1H;4#H>Eh4^E1r4e].LabH09H:c18AX$aoA-
%B2!M)c4%!pNr'\)=tf>h/H1nZ-nr%A@anV>o8`Bdr8rAG&Hu<SDK@m23$C0W$FmZ@],uf_$_((ThN)tlEGCcIH?X2MGsdg5\HAH?
%3c+'4@i;21?c"".TKjclScpD`*fOkq:Ekfc)_e":9XGT.FH@rd2X*iMG#@bXn1<U;^2/"KSu5Y&MJ!lO54@e*I2,iX=5#=[K6hMV
%Tod=uS'CJ*-PN<LG*0AQ(b]2nmPb=oJ8bG^"0-o+X;ABV%rs@V?g<Q@H+.7`T<a;0KP(UC$!'jVA!^)T!E<h_nW.bZM(Z6S(:&0s
%R2CBA2+2Yd[oNXb6&q7TfnMiFQGUF'T5A5ZeqGacPP'U#>l4Gi:OOOhrj*--&n1i7P^64Yk):FMmo4jndW7mR'4;U%PhZJm9rud;
%Mqu8J,WTp,4&_4u[DV#@QgUg`ZWqG[gOYb&jZC6Mb.i;R%cLCYb+/?oj"^A]4PN16)/Z#!Q:XP.5/R<1PNDDCLt,I>W_tBaUY$lX
%+n*VrDZ.[KomLcTT(J,Z?DZP$I<%@HS4#%Y)E=>uT-^W)'*$PN%U\!TKnmT`X*/.TkLL0`:\h*%\?AusEQ&/+*q+J8c'Z\neo(^?
%MfteiXu$]0Zm&h:H?GY,/q0+5[81K7d;C#;jll8)8fb2Q\G&LIdQ_H^2&?e'5Un0eP>b*\;mdK`LNmc^7gThMX9Ip`1(R'MWCKK,
%;!jtmZH"S4GtC$:mkYJnlHF+FLqQ)$2tc+k%c:s0dI9&+NUHZtRKYk.-^?$GaPLMMj]TA3o4mhBa^p_ZJaLGj<$rTV3^'1dlgrBf
%q4'p$`R\hfEYP5\.iJW$HH1<)__/p]HTV=R(t/+;Ji=[0icnZ!O]U!/jAVoMaeH'P<Znd)>&50&27p`ZCV9>GG;ct*i8`;i?(GpD
%s2j#^"6?Y8S`^lkeQ3?b/gg_F+pA?BZK%iIk:(k]Du.asqTo19"K,Mm:TfN'2h+G.qD1?>oK<WkHP>&h[(65@9G%+9^UQe+B+;eX
%CF5[@Vj21L71HoB+H<A1*G&f)Ol8SM*N<5Hf.M1b]V@>KQ0D0&oY$?E8@ctlfF`cs'>>t!rMAT`f`:o'S?6ma+[H:u&#>faQ.bm'
%c[+K@qedd2FH#T>H95OV&a_f"O#D*nJ-/'.lV*Ai3CX6Kaj@,k-ar09EST'OBo_d(]D@decWjtY?0)GZLr-Pgeu`2g&WP;nXhOG5
%1]K)h#s>]i=Kr>UkNaIbRs@[D)Z\6E[dRD=Sc162&=i]27KQdcY&gc3lb$a'bLDK4H6X#oTArpcL'`]I?B30+_#nhiK=>8!LEg6k
%4LdPHXPe63^ms*UU%=CR/X.?hVKE*0C-hd`+Z#E:UjC<g_L&Y7KCm@GlVm;ho\pO;])TgqO'rt?X-umld6#fhmVjjUjc`eKW38mf
%</pl2X/l%8?"1c"n8Woka0D5=8bXmA>%mlB.[]CAf=0L/[t&B^jm;6$jX+W_;uG70eFAk9m>&HBnS!^Q0+V^2o=:'DWgWa+FiGk(
%JO2;.g_2-$o+kOJ;/`Kk5bHLhr$Ga!frSA%'\MCq+hkPB)=Zi=g^D,ToV7)kABd0m91aei$s?CEb(#iZ@<hnOk,*Y#@mpC+L>>Zp
%M#8Wic]36_F]<N8s+)SP2iNAZ7UGM.gC?2NZW+(32`<ZoncrGWs38*(LV)kqBGbkcXoNOP%k4Lg1)B5"Luef2Fb_C7^5W`0BR,bl
%gCL2"1Osd]0nRZK<cSFWDh@d#s3X/b>9SCc^ktr?Mc7h`H9=I[rPjsZoOq\)`e[dfSrW7mDu=g(ZsuMEYp4I=O4IbO5k*mal'`)+
%D8f*6^P.T?5,@h^B(H[-_",1_(=nC5dC2>]p)i^@W_9gcT]ePn5d@u(PW&\'1_bkHd,h4ILl_BkhnP]A!ZSKcNa!9q7(76'@U$1u
%&lQ%,%BHGj8G.q3k\B5u-Yd?_o]V+>S&l^p-UpA;^@I_tFkl%,5s##9`ddcYSLKS-,RuY'$$M(N#m`UF%Ne0`"fd*uOJ5/tUlRe5
%=b$'LY;0BolIR[YE]\q1egEC_K5nbqcRq]Ne?eN9=,HG3<Ri)$_hooWLN6ac7T_pGr%>a=/_6Ws%BEuLLIfj%We&W-EtV7Sbl,,;
%p4Ul?Mt&*d1mh4cGM>Q.-MT!B7G&U*nkZa4<H.8(5P06iB;5,;E`&&PYf!eIj$:mfgu=_;b:V)>(iLL#P$gU70rq(-D%ojpT_tF/
%j1iVuFs:JIY8&7k%SmTTr,u-s`bEG;T6?aDlktcVI"84;E<Z#j`r#"WNI!qf>u62qI9'UT%ntil>E%Mo^FKl4>E^<#rolH"gDjNj
%Eef4e9""CU>k5Se00K,Yf<>Zb6,]kE;pQk22(+#NTRPf(cMf($IH?7UjJQ?(V>oKI#RaH2_[l.K=W+fH8(?@H^0W&>Ed)Y]"BG+P
%-?O[MB3s1a:033,a03_@M;$>8$pJuRB7BR+F2FtADY@.oV.bDLfX=La5;_l#RaBpa"ck/uSWO;MpNTWj0A,-"n,g6=8N`?Zd:mAF
%C`(cSD#X3]G"JU!Irq=\e`";S$Y%8i89a"!=70^$/&q':B:b9jAr=S*1_ui%5.LP7)G:[+-Q:8ZqLdRa24WH?\NoTP/!ZE'5>t1f
%-S$#i5HW8]XtRIKnjS9(gSHhb_*L`?ccsdf%]/::JV]>m5*)h:E2p,@+u5?Ec]B^9E^n.!mq?u\#DBEIpD.3Om1PW0,0&B/?0GVi
%eC*.@E#1A;[J"^n0&a4MX*L'V>c<r8qa6fT4`T=,RCd,^kjfVEZn8@N_RT2t5,Qo&p'l]:8_F\\LhbNo;M!T2p\Z0/p;hHb])ZnZ
%Qf3lor'e7<COQ^m@=q!/)LoX[5:9P#Qkp<fG<Ji0A"o3IB:Yr3=>Np88C&A3#&/g%U#'hb=mZk1SJcSkZ%CGJVq^pg_\9+5gM`Wc
%5K0bKmf^A(S0p';Ss?j))S2]<nSOhWOBi2lj8?uZA'C3lf(+J\lm6`$ms\?.RI`$02!ae#>M@E<6`EGO-!W5sO'\f\^>#\EjbfP^
%ldT/$i>-\p]J29r0GY>Y2YGNBL^;:J?7"bN-i`.F-?-^]'tXD(b[V]*WCD#3fj":)JmGP>nSPF1NWJKkg>&$E=Zd#m##@.#2k/b!
%.P:3Y.d*^Q^"aPe8JXk5R?P*$M1gRhkKiVNQP3*@9;rXKb;h)=3`<PCI-Mg1_3t)ME'6m,W5gV"Ar^2p4OlS:7*_-S886Jm+#71"
%7*!cga.b>$,<VT^O5tXFis'?<,hg6l<'bpCk&mGIc<\D@"E)2Mb:GgK#FiM74nRu<nR-D!*SqElP-@G7.;9pIXi8a]G:/oOo9!^&
%'>6-=p,L`S3,+=u*>cPp_9Z)_*H+)gK)U%#D;3bqO^eQ.Z,Oc!oW3KWdr+EqSYHu2rdjGH^bEb1@KOSa^f(Bfe;9m+GA`c9MNo28
%8cuesYKt.qF428L:Id[cZN`a'='?6Uf1p1B<1$lZL[g=09r/1d`?DM9<*#u:E,<%_@6k?*gNj5UfC!ku<R'jm[M#(#dQVfs^.Ued
%Z<U\kdbdO,\bmN:M8407KDE,t9=Aud<!ir9m-H&(V:jRL<9SP-pSHK,:0,OF(BK0J_W%bKPr)7M!lY%t?C(BHR&?:8V0Jk\cp-^J
%IYTt/oiK]Ud%*s*W^MR4oUD(@q_mErJS;PV!grh^,t7HqIjtI]B'q!D!,/(&bB5Qq1].,-$2R#42>\o^ZisgW1j)G/?:%Na?$deG
%JFaR!*]b9K]J=9YGKSUR](b*U]O[AW:f0cpC=N?Q'eprBoOrZZ^+=m\kL5e/^RlA@$F#K4mR^`N&:M'"dN#:lGltJn.;:"</f@s[
%.i>@k>f".Xn)/qt't6/cqe=(=^24oCGbS*FlZr>7H1i,-RQ2G+re?Db`41Z=VT);,2d"gaEm]TI3;2;H6U%u,:TZJZIq<0)I?Z!F
%9,]`;e]]ul+F$ds3ccWTDBf"pI',LeADaY/N&LiL]l\\)-abf5\+SV!oCL_Gr]?@qVWLki6)-l57;HFS-Oif>;Y0/3M'n*]X."M9
%h4Gn=lk.%#b%EVFI#SOgcBS+-n48W0hQs_h@5WWBVLLYn&V2(pnFGrIkcXUt/`W=`aZB,Se"\#c(`_GYmN_4R:EQ$2`RIa[FZ!pY
%.#dL-r7A+ng^ellP\>)n:D`l*Cm%(!T,/KW[K*GBjnSWg\HO?<5MOuX;'BX+O)e#(9Me!3D;A.FmYA(2Qor!+c:K1DO*8O(]r"3;
%Z_$a@WTM>U3E9;9)/<P@Xu,U;^Uism@B8*/A*4iUI<j$l3e/f$#6>Tl+\(B+Yo!L\&+kpfebj@iPBD3N?8pm,2lHWqQLm3MUV(OC
%*9JVREc5l!(D/ej.i%]aRm66qmejdO]R2#N/%!F!:@>SlIX1W/IX`cU?=,N\-i[^uF#FMsVKh16RkI7,f)e9$rQ[:SF6I+eTOXpm
%a4b>!]!%mkn/FjR3a_]jTp]@c<d-J2UH_&eC+KH9ea;)EX3%i8^a2Qd7,E\/Ge-!7Rp5pk!)!8@(=_dXr9]"6ogf"ns)J%As6_!.
%_r(ILJ,81irq0WJ)?/oNqRaNBj8]%<J+p_X++O4/^\j#)s/3X/^]4)Xhu1GWi:MNs5JR3H:OiD*J,H5ElTbC/++O-bs6W&M5Hs(=
%GJISae\D"Us2/4C`W$;n]S*9~>
%AI9_PrivateDataEnd
