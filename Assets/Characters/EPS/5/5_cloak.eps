%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 5_cloak.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 167 225
%%HiResBoundingBox: 0 0 166.8382 224.1908
%%CropBox: 0 0 166.8382 224.1908
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:30:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:30:48+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:30:48+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWpJEjRpJGCRoCzuxoABuSScVeMeY/zs1rW9Qm0f8uLVLiGAtHd+ZLhedurL1FtHUeqR/Mfh9qb5&#xA;VkyiKTQ5vONY0vWtWmZvMGu3mrmXcpJdusIJ6+nBD6aBa/yLTMc55FjxlJF8meUkHE2HOnQiV/8A&#xA;jbfB4su9HGUxtI7zSmEnl3V9T0Z16Rw3TvEf9aN6ow9uOEZpBPGXo3lD88Nd0qS2tvPqxzaZcuIo&#xA;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&#xA;XFDsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ff95280c-d080-4782-82bc-2b91162f8191</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:30:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>123.484512</stDim:w>
            <stDim:h>100.749851</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -224.191 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 224.191 li
166.838 224.191 li
166.838 0 li
cp
clp
52.1857 179.858 mo
51.5509 179.605 50.8927 179.324 50.2189 179.039 cv
45.4826 173.755 38.5304 169.906 33.5422 164.996 cv
26.1349 157.706 24.3576 146.948 23.8244 136.945 cv
23.3068 127.242 24.3937 117.584 25.9982 108.027 cv
27.4201 99.557 30.6554 90.3153 29.8048 81.6639 cv
31.7365 78.2152 33.5734 75.118 37.0617 72.5736 cv
41.5207 69.3207 46.8332 67.5472 52.1447 66.2538 cv
63.3439 63.5272 75.3322 61.3241 86.8918 62.0448 cv
98.0285 62.7391 108.572 67.309 117.812 73.3905 cv
125.061 78.1615 131.013 84.4462 137.029 90.6063 cv
137.025 91.0126 137.101 91.4383 137.296 91.8729 cv
141.967 102.269 138.82 114.381 137.281 125.143 cv
136.452 130.94 135.817 136.809 134.727 142.564 cv
133.613 148.447 131.065 153.917 128.345 159.221 cv
123.374 168.917 114.675 175.497 106.345 182.211 cv
101.892 185.8 97.2492 188.952 92.4367 192.026 cv
89.5519 193.868 87.8058 195.752 86.0041 198.14 cv
84.9523 197.409 83.3634 196.323 82.8117 195.969 cv
80.8097 194.684 78.7863 193.433 76.7414 192.218 cv
72.6525 189.787 68.4816 187.494 64.2345 185.351 cv
60.3019 183.366 56.2804 181.488 52.1857 179.858 cv
cp
164.263 155.787 mo
163.844 147.203 163.235 138.491 162.014 129.985 cv
161.896 129.157 161.436 128.632 160.843 128.353 cv
161.655 124.47 161.733 120.17 162.328 116.357 cv
163.085 111.506 163.792 106.664 163.139 101.757 cv
161.846 92.0326 156.746 81.7118 152.118 73.1678 cv
150.961 69.183 149.147 65.2416 147.749 62.2147 cv
144.258 54.6498 139.611 48.9769 133.302 43.6537 cv
133.141 43.5174 132.975 43.4222 132.809 43.3451 cv
131.534 41.3549 130.295 39.3558 129.122 37.3353 cv
124.87 30.0135 123.609 21.974 120.696 14.1522 cv
119.081 9.81237 116.912 5.21179 112.378 4.22204 cv
112.327 3.432 111.543 2.70641 110.77 2.73034 cv
107.097 2.84557 104.461 5.05261 101.359 6.81872 cv
97.8908 8.79333 94.3498 10.6263 90.7599 12.3666 cv
83.2961 15.9842 75.6564 19.2357 68.2736 23.0214 cv
55.0158 29.8192 42.9484 38.7855 32.8322 49.744 cv
23.2277 60.1473 13.7257 72.8798 10.1769 86.7904 cv
8.04606 95.1424 7.01579 103.872 5.54899 112.358 cv
4.62125 117.732 2.8986 123.692 4.57633 128.905 cv
.0480118 140.549 4.45231 155.461 12.1652 164.598 cv
17.1369 170.488 23.799 174.549 30.1613 178.746 cv
33.4259 180.9 36.6789 183.096 39.591 185.72 cv
42.6672 188.491 44.8048 191.846 47.4943 194.936 cv
47.7873 195.273 48.1271 195.483 48.4836 195.6 cv
50.0392 198.453 51.3185 201.422 52.3537 204.483 cv
53.0334 204.904 53.7033 205.34 54.3478 205.816 cv
56.2599 207.225 58.0617 208.877 59.7961 210.595 cv
59.758 210.414 59.7131 210.234 59.674 210.054 cv
62.6339 212.127 64.7433 214.94 67.5285 217.196 cv
72.1652 220.951 77.9191 221.035 83.632 220.679 cv
90.675 220.241 97.6818 218.872 104.345 216.548 cv
116.229 212.402 127.202 206.017 129.821 192.881 cv
131.363 185.144 134.611 179.704 142.768 177.872 cv
148.151 176.663 154.096 176.701 158.593 173.063 cv
163.779 168.868 164.568 162.045 164.263 155.787 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.286275 .235294 .294118 rgb
f
158.899 140.914 mo
159.023 140.022 159.145 139.128 159.265 138.235 cv
159.29 139.172 159.319 140.11 159.334 141.046 cv
159.196 140.984 159.049 140.943 158.899 140.914 cv
cp
157.339 103.87 mo
157.337 103.876 li
156.199 96.1464 153.844 88.7484 150.366 81.7479 cv
150.387 81.5057 150.349 81.2435 150.224 80.9696 cv
150.087 80.6717 149.942 80.3793 149.805 80.0819 cv
149.852 80.0365 li
150.002 80.2411 150.151 80.4466 150.301 80.6512 cv
152.426 85.3085 154.322 90.0301 155.688 94.9789 cv
156.194 96.8138 157.373 100.183 157.768 103.32 cv
157.605 103.461 157.455 103.634 157.339 103.87 cv
cp
156.229 131.3 mo
156.075 131.27 155.918 131.251 155.758 131.258 cv
156.05 130.235 156.308 129.203 156.554 128.167 cv
156.444 129.211 156.336 130.255 156.229 131.3 cv
cp
57.3517 60.2767 mo
58.3468 59.784 59.3371 59.2884 60.34 58.7992 cv
62.0363 58.5643 63.7345 58.3534 65.4338 58.1507 cv
62.9035 59.3026 60.3273 60.3382 57.7228 61.3065 cv
57.8078 60.9349 57.6691 60.5067 57.3517 60.2767 cv
cp
153.687 119.435 mo
152.693 124.761 151.693 130.02 150.087 135.203 cv
149.645 136.583 150.912 137.712 152.127 137.788 cv
152.108 139.562 152.349 141.398 152.428 143.036 cv
152.504 144.629 152.291 154.216 153.017 159.492 cv
152.7 161.073 152.385 162.654 152.062 164.23 cv
151.887 165.084 152.278 166.146 153.187 166.416 cv
150.718 166.744 147.956 169.569 146.025 171.224 cv
145.824 171.138 145.625 171.06 145.425 170.951 cv
145.024 170.731 144.633 170.647 144.261 170.649 cv
144.309 170.3 144.336 169.937 144.333 169.555 cv
144.316 167.454 142.174 166.499 140.428 167.314 cv
135.698 169.52 131.71 172.81 128.515 176.76 cv
128.524 176.621 128.538 176.477 128.545 176.339 cv
128.648 174.271 125.66 174.029 125.062 175.868 cv
124.691 176.756 124.326 177.673 123.965 178.609 cv
122.184 182.508 119.578 186.169 117.668 189.968 cv
116.225 192.838 114.828 195.705 113.116 198.37 cv
110.386 199.278 107.802 200.523 105.291 202.025 cv
104.873 202.274 104.634 202.612 104.522 202.975 cv
102.553 203.714 100.556 204.372 98.5343 204.965 cv
97.383 205.302 96.9396 206.27 97.0168 207.203 cv
95.5529 207.069 94.0675 206.72 92.5373 206.032 cv
92.6056 205.94 92.675 205.849 92.7433 205.756 cv
96.4289 201.917 100.073 198.037 103.736 194.175 cv
105.666 192.139 102.75 189.271 100.674 191.114 cv
98.9142 192.676 97.0959 194.155 95.2189 195.555 cv
94.6564 194.74 93.5812 194.323 92.3537 194.938 cv
90.3888 195.922 87.2121 197.104 85.1759 198.804 cv
84.0197 198.15 82.8507 197.489 81.6662 196.837 cv
81.4992 196.693 81.3234 196.602 81.1457 196.555 cv
80.5382 196.224 79.9289 195.893 79.3136 195.572 cv
75.4757 192.305 71.4298 189.342 66.8537 187.137 cv
61.0851 184.358 54.9933 182.354 49.5216 178.974 cv
49.3644 178.876 49.2043 178.82 49.0451 178.784 cv
43.4396 173.067 37.6945 167.579 32.423 161.529 cv
31.6379 160.628 30.5851 160.871 29.9513 161.553 cv
29.0617 157.577 27.1652 153.82 25.9455 149.914 cv
24.2179 144.383 23.297 138.741 21.9748 133.119 cv
21.9045 132.819 21.758 132.61 21.5812 132.451 cv
21.6847 131.592 21.7902 130.734 21.8615 129.869 cv
22.1554 126.323 22.0929 122.825 21.9425 119.318 cv
22.2257 119.091 22.4386 118.756 22.5099 118.284 cv
23.6154 110.961 24.714 103.637 25.8312 96.3153 cv
26.756 90.2508 26.5822 81.6024 30.7287 76.7504 cv
30.8478 76.6112 30.925 76.4613 30.9787 76.309 cv
31.3644 75.9891 31.7502 75.6698 32.132 75.348 cv
32.2687 75.3592 32.4123 75.327 32.5441 75.2215 cv
36.0871 72.389 39.7892 69.9178 43.5978 67.642 cv
49.4738 66.3549 55.2052 64.3295 60.7892 62.1278 cv
64.2384 60.7674 67.8156 59.3856 71.0588 57.5077 cv
71.5265 57.4559 71.9943 57.4047 72.4621 57.3534 cv
80.2072 57.8177 88.0392 59.434 95.133 56.0287 cv
95.7902 55.7128 95.2892 54.8363 94.672 54.9364 cv
92.4982 55.288 90.2853 55.411 88.0529 55.411 cv
88.2248 55.3846 88.3966 55.3632 88.5685 55.3358 cv
88.9484 55.2762 88.8341 54.7064 88.4816 54.6913 cv
87.2023 54.6371 85.9181 54.6234 84.63 54.6332 cv
86.5392 54.4799 88.4523 54.3153 90.3722 54.0941 cv
91.6007 54.0428 91.9679 52.1659 90.673 51.8695 cv
79.8683 49.3944 68.0265 53.2557 57.3195 57.015 cv
58.7961 56.0067 60.2726 54.9984 61.7482 53.9901 cv
64.7609 53.3744 67.7931 52.8465 70.7873 52.1605 cv
73.5275 51.5326 77.007 51.0463 77.5041 47.809 cv
77.6261 47.0131 77.0509 46.3138 76.2033 46.5087 cv
75.9699 46.5624 75.7365 46.6234 75.5021 46.6781 cv
78.9308 44.2757 82.2882 41.7616 85.4211 38.9989 cv
85.7189 38.7367 85.7277 38.3426 85.5802 38.0179 cv
85.8019 37.9154 86.0197 37.807 86.2414 37.7054 cv
91.5588 35.2616 96.7297 32.8685 100.235 28.0048 cv
100.466 27.6835 100.404 27.3851 100.214 27.1722 cv
102.522 25.0673 li
103.112 24.7684 103.585 24.6283 103.752 24.8221 cv
104.147 25.2777 103.198 26.097 103.032 26.5008 cv
102.003 29.0096 99.547 31.8133 97.9074 33.7967 cv
95.4923 36.7186 92.7882 39.3934 89.9679 41.9281 cv
89.3156 42.4867 88.6691 43.0526 88.0392 43.6381 cv
87.3703 44.2152 88.2541 45.3783 88.9914 44.8715 cv
93.467 41.7909 97.4396 38.038 101.841 34.8451 cv
103.016 33.9935 101.717 32.2904 100.62 33.2621 cv
99.4562 34.2933 98.2531 35.2782 97.0373 36.2484 cv
100.167 32.4335 103.021 28.3866 105.586 24.1893 cv
105.835 23.7816 105.425 23.3212 104.993 23.4183 cv
104.633 23.4994 104.286 23.6244 103.945 23.7684 cv
107.373 20.6425 li
107.992 20.0775 108.706 19.4979 109.452 18.8983 cv
109.946 20.3133 110.464 21.7245 111.006 23.1312 cv
110.635 23.4379 110.398 23.9091 110.517 24.5072 cv
111.938 31.6464 113.693 39.0839 116.818 45.7489 cv
113.9 40.3861 111.641 34.6781 110.087 28.7211 cv
109.806 27.64 108.154 28.097 108.415 29.1825 cv
110.882 39.4466 115.367 49.1175 121.84 57.4813 cv
124.767 61.2631 128.055 64.8241 131.722 67.8988 cv
132.487 68.5409 133.339 69.2045 134.149 69.8177 cv
137.463 75.4774 141.067 80.9554 145.164 85.9051 cv
146.021 86.9393 147.579 85.618 146.971 84.5111 cv
146.811 84.2191 146.65 83.9315 146.488 83.6405 cv
146.961 83.5931 147.439 83.1361 147.299 82.5819 cv
147.169 82.0663 147.069 81.5643 146.973 81.0624 cv
147.06 81.1927 147.146 81.3241 147.234 81.4545 cv
151.557 90.9398 154 101.126 154.626 111.596 cv
154.644 111.899 154.729 112.16 154.85 112.388 cv
154.431 114.763 154.111 117.159 153.687 119.435 cv
cp
119.421 201.109 mo
119.778 200.604 120.122 200.087 120.461 199.566 cv
120.561 199.514 120.653 199.452 120.739 199.383 cv
120.958 199.548 li
120.445 200.068 119.937 200.592 119.421 201.109 cv
cp
89.5509 210.334 mo
89.6877 210.149 li
90.1066 209.401 90.5861 208.687 91.089 207.986 cv
92.9025 208.983 94.9035 209.682 96.9845 210.098 cv
95.8039 210.197 94.631 210.118 93.3312 210.066 cv
91.9621 210.012 90.7375 210.119 89.5509 210.334 cv
cp
87.8693 216.409 mo
86.1457 216.506 84.4211 216.675 82.7013 216.763 cv
82.0422 216.796 81.1398 216.9 80.1339 216.996 cv
81.7375 216.537 83.3205 216.018 84.8713 215.475 cv
88.1388 214.33 90.4982 213.546 94.1164 213.87 cv
95.4103 213.986 95.8312 214.37 97.1603 214.032 cv
97.4113 213.968 97.6662 213.874 97.9201 213.79 cv
97.9289 213.794 li
97.9552 213.801 li
94.6642 214.891 91.2902 215.741 87.8693 216.409 cv
cp
75.4826 202.474 mo
72.6086 200.088 69.632 197.803 66.6525 195.533 cv
67.675 196.021 68.7023 196.492 69.7336 196.953 cv
75.6086 201.71 li
75.7941 201.861 75.9797 202.015 76.1642 202.169 cv
75.9132 202.201 75.675 202.314 75.4826 202.474 cv
cp
88.2511 206.607 mo
87.9992 206.351 87.7589 206.09 87.5265 205.821 cv
87.7521 205.636 88.0011 205.452 88.2658 205.268 cv
88.3683 205.241 li
88.3752 205.361 88.4084 205.475 88.4367 205.59 cv
88.3898 205.842 88.4425 206.091 88.6183 206.311 cv
88.4982 206.411 88.3761 206.512 88.2511 206.607 cv
cp
32.0412 70.097 mo
32.7355 69.3465 33.4738 68.6371 34.216 67.9344 cv
35.0256 67.1683 35.8625 66.4349 36.714 65.7206 cv
34.8361 67.8846 32.6369 70.556 32.2453 71.4784 cv
32.1847 71.3954 32.0802 71.3583 31.9855 71.412 cv
31.8849 71.4696 31.7843 71.5272 31.6838 71.5848 cv
31.5881 71.6395 31.5236 71.7489 31.5256 71.8597 cv
31.5275 71.9593 31.5295 72.0585 31.5304 72.1576 cv
31.5334 72.3295 31.6271 72.4501 31.758 72.5199 cv
31.5754 72.6908 31.4054 72.871 31.2267 73.0453 cv
30.7365 72.8236 30.0998 72.8793 29.672 73.3885 cv
30.3644 72.0629 31.3488 70.8461 32.0412 70.097 cv
cp
39.9054 65.2855 mo
40.0177 65.1971 li
39.6359 65.6498 39.2541 66.1029 38.8839 66.5643 cv
38.7257 66.7626 38.7492 67.0443 38.8732 67.2372 cv
37.8009 67.8793 36.7629 68.5653 35.756 69.2826 cv
35.9777 68.9457 36.1877 68.6395 36.3908 68.3973 cv
37.2453 67.3758 38.1593 66.4095 39.1183 65.4896 cv
39.3761 65.534 39.6535 65.4877 39.9054 65.2855 cv
cp
52.8595 56.3446 mo
53.0119 56.2899 53.1672 56.2416 53.3205 56.1888 cv
53.4328 56.3651 53.6545 56.4672 53.8976 56.3314 cv
54.3195 56.0961 54.7345 55.8422 55.1525 55.5965 cv
55.4416 55.5096 55.7326 55.4344 56.0226 55.3524 cv
53.9045 56.7997 51.7853 58.2465 49.6672 59.6937 cv
48.9748 60.1669 49.0968 61.2089 49.6955 61.559 cv
47.8224 62.3802 46.0041 63.3192 44.2736 64.4071 cv
43.4152 64.8016 42.5666 65.2211 41.7257 65.6571 cv
45.5558 62.7108 49.2316 59.558 52.8595 56.3446 cv
cp
65.4757 48.4266 mo
67.5197 47.243 69.5822 46.1029 71.6554 44.9842 cv
69.1457 46.6757 66.5617 48.2533 63.8713 49.6659 cv
64.4074 49.2538 64.9474 48.8485 65.4757 48.4266 cv
cp
73.9738 48.4872 mo
73.4474 48.7718 72.8439 49.0008 72.1945 49.1864 cv
72.2316 48.931 li
72.3644 48.8407 72.4963 48.7474 72.6291 48.6571 cv
73.0841 48.5751 73.5314 48.5218 73.9738 48.4872 cv
cp
70.9709 47.3417 mo
70.8039 47.3251 li
70.506 47.3251 70.2609 47.4027 70.0558 47.5238 cv
72.0822 46.1566 74.1242 44.8026 76.1701 43.4476 cv
75.922 43.6249 75.6769 43.8065 75.4289 43.9828 cv
74.3966 44.7137 72.757 46.0936 70.9709 47.3417 cv
cp
77.9836 35.2342 mo
75.6242 37.4564 73.256 39.6551 70.8556 41.8124 cv
69.9718 42.1786 69.0949 42.5619 68.2277 42.972 cv
71.4347 40.3324 74.6867 37.7543 77.9836 35.2342 cv
cp
84.3664 30.8754 mo
84.6496 30.6039 85.2082 30.0433 85.9523 29.3197 cv
87.3791 28.2884 88.799 27.2494 90.2404 26.2357 cv
90.6554 25.9437 90.7101 25.4867 90.5734 25.1083 cv
92.2375 23.7137 94.0275 22.3705 95.6886 21.4418 cv
93.9709 23.3143 92.2453 25.1639 90.4279 26.8578 cv
88.9279 28.2557 87.3986 29.62 85.8537 30.9657 cv
83.8107 32.4144 81.7394 33.8832 79.717 35.4125 cv
81.2589 33.8924 82.8029 32.3729 84.3664 30.8754 cv
cp
92.7521 31.8856 mo
91.7033 32.6898 90.6535 33.494 89.6056 34.2997 cv
89.4738 34.3661 89.339 34.4281 89.2072 34.4935 cv
90.3966 33.6195 91.5695 32.7259 92.7306 31.8182 cv
92.7521 31.8856 li
cp
79.5929 39.1615 mo
78.967 39.4857 78.3371 39.8016 77.714 40.1302 cv
77.7082 40.0316 77.6427 39.952 77.5402 39.9178 cv
81.7101 36.8793 85.6662 33.3944 89.6027 30.2484 cv
93.1847 27.3866 96.799 24.5697 100.431 21.7743 cv
100.055 22.348 99.6086 22.9335 99.1955 23.5341 cv
92.4777 28.4286 86.174 34.0013 79.5929 39.1615 cv
cp
98.3293 20.3383 mo
99.133 20.1493 99.8537 20.1527 100.441 20.4257 cv
98.0109 22.1859 95.5822 23.9476 93.1535 25.7089 cv
94.8839 23.9403 96.5939 22.1219 98.3293 20.3383 cv
cp
102.437 16.3026 mo
102.517 16.7523 103.064 16.9305 103.465 16.7611 cv
102.94 17.6332 102.415 18.5052 101.888 19.3758 cv
101.617 19.5721 101.347 19.7689 101.075 19.9652 cv
100.676 19.4642 100.215 19.1356 99.7121 18.9354 cv
100.608 18.0375 101.514 17.1566 102.437 16.3026 cv
cp
111.913 16.8773 mo
111.98 17.4447 112.045 18.0121 112.122 18.578 cv
111.913 18.1288 111.708 17.6786 111.499 17.2299 cv
111.638 17.1127 111.777 16.996 111.913 16.8773 cv
cp
125.098 53.0507 mo
126.965 56.6727 128.882 60.3544 130.88 64.0116 cv
128.294 61.535 125.856 58.9169 123.63 56.1005 cv
121.823 53.8153 120.183 51.4257 118.675 48.9608 cv
119.215 49.1595 119.931 48.681 119.756 47.9965 cv
118.627 43.5604 117.28 39.2132 116.021 34.8378 cv
118.902 41.0218 122.033 47.1053 125.098 53.0507 cv
cp
125.302 47.0467 mo
127.959 51.9423 131.055 56.598 134.29 61.1742 cv
135.187 63.3509 136.083 65.5272 136.98 67.704 cv
136.157 66.4779 135.306 65.267 134.435 64.0663 cv
131.966 60.0277 129.565 55.9447 127.343 51.7382 cv
126.495 50.1351 125.684 48.5184 124.889 46.8954 cv
125.025 46.9525 125.16 47.0106 125.302 47.0467 cv
cp
144.357 77.0477 mo
144.395 78.1507 144.521 79.2035 144.763 80.244 cv
141.695 72.7245 li
142.563 74.1747 143.45 75.6161 144.357 77.0477 cv
cp
56.6095 202.088 mo
56.9552 202.496 57.3107 202.891 57.6759 203.275 cv
57.2795 203.116 56.8839 202.957 56.4875 202.799 cv
56.5656 202.608 56.6027 202.367 56.6095 202.088 cv
cp
163.627 134.486 mo
162.911 130.158 162.186 125.831 161.485 121.5 cv
161.483 121.485 li
161.482 121.483 li
161.469 121.405 li
162.161 115.3 162.621 109.185 162.459 103.212 cv
162.221 94.391 159.393 86.0116 153.945 79.2079 cv
151.351 73.8988 148.547 68.7377 145.515 63.7132 cv
141.509 56.1351 136.614 49.057 130.752 42.7494 cv
129.481 41.3807 128.149 40.0961 126.856 38.8026 cv
125.303 33.2992 122.706 28.1556 120.306 22.9471 cv
120.131 22.4159 119.95 21.8856 119.778 21.3534 cv
119.208 16.1732 117.701 11.2416 115.212 6.5028 cv
115.02 6.1361 114.761 5.87927 114.472 5.70104 cv
113.406 4.6322 111.3 4.91784 111.25 6.79235 cv
111.06 7.20837 110.993 7.69225 111.137 8.22106 cv
111.192 8.4237 111.249 8.62438 111.305 8.82653 cv
111.359 10.368 111.448 11.9091 111.572 13.4466 cv
109.206 15.6551 106.92 18.0238 104.569 20.162 cv
102.635 21.9198 li
102.403 21.6508 102.034 21.5199 101.668 21.7723 cv
101.348 21.993 101.034 22.2259 100.717 22.4506 cv
100.924 22.0526 101.146 21.6571 101.369 21.2621 cv
101.43 21.3539 101.492 21.4413 101.545 21.5472 cv
101.639 21.7342 101.967 21.6019 101.888 21.4027 cv
101.808 21.2025 101.719 21.0267 101.63 20.8509 cv
104.359 18.7577 107.09 16.6698 109.849 14.6132 cv
110.265 14.3026 109.864 13.5926 109.435 13.9051 cv
107.299 15.4545 105.162 17.0028 103.027 18.5511 cv
104.464 16.3407 106.052 14.1786 107.578 12.0668 cv
107.721 11.9647 107.86 11.8578 108.004 11.7582 cv
108.281 11.5653 108.364 11.2821 108.332 11.015 cv
108.498 10.7831 108.669 10.5482 108.832 10.3182 cv
109.204 9.79235 108.592 9.18102 108.051 9.30212 cv
105.295 9.91979 103.611 11.6122 102.856 13.9833 cv
101.244 15.4774 99.7091 17.0804 98.1984 18.7133 cv
94.9679 18.9149 90.6711 22.7279 87.4601 25.9491 cv
79.3381 31.6771 71.3918 37.6576 63.5607 43.7762 cv
59.7668 46.7406 55.9543 49.7899 52.2726 52.9862 cv
51.8381 53.3143 51.4035 53.6434 50.9728 53.975 cv
47.7365 55.2533 44.6379 56.8519 41.7336 58.7982 cv
36.7492 62.139 28.4572 68.5975 27.6076 75.3671 cv
25.4455 76.7123 24.4142 79.3358 23.8381 82.1415 cv
21.7433 85.8094 19.9757 89.6512 18.6447 93.7352 cv
17.5451 97.1122 15.4484 102.469 17.0617 106.063 cv
15.9709 111.186 15.3185 116.353 15.1867 121.587 cv
13.7277 129.433 14.0968 137.453 16.3185 145.175 cv
16.3566 145.308 16.4298 145.42 16.4992 145.533 cv
16.4494 149.116 16.8937 152.678 19.2072 155.255 cv
19.505 155.586 19.842 155.731 20.1798 155.759 cv
21.8175 159.759 24.0148 163.477 27.2463 166.564 cv
27.5011 166.807 27.8058 166.945 28.1222 167.016 cv
29.3634 169.138 30.8732 171.015 32.7834 172.348 cv
32.1925 172.756 31.9084 173.579 32.6037 174.146 cv
38.0627 178.592 43.6906 182.586 49.8058 185.904 cv
50.9826 186.565 52.1847 187.184 53.4064 187.767 cv
54.8898 188.734 56.3859 189.686 57.8986 190.602 cv
57.8293 190.873 57.8849 191.169 58.1828 191.422 cv
64.34 196.651 70.3332 202.272 76.7961 207.156 cv
76.6252 207.134 76.4552 207.11 76.2853 207.088 cv
74.4933 206.867 72.7795 206.23 71.2472 207.322 cv
70.9416 207.539 70.8205 207.834 70.8898 208.201 cv
70.9377 208.459 71.0177 208.693 71.1144 208.914 cv
70.8449 208.857 70.5802 208.786 70.3136 208.72 cv
68.3166 207.052 64.2472 205.955 61.9963 205.048 cv
61.9718 205.033 li
59.7863 203.138 57.6877 201.138 55.7228 198.952 cv
55.2658 198.443 54.3732 199.115 54.7658 199.69 cv
54.8879 199.87 55.0216 200.037 55.1476 200.213 cv
54.715 200.385 54.3713 200.805 54.4963 201.391 cv
54.4396 201.125 51.4464 200.503 50.3927 200.336 cv
50.383 200.332 li
50.382 200.335 li
50.1613 200.303 li
49.2336 200.19 49.0265 201.749 49.9406 201.937 cv
50.9767 202.226 54.0539 203.903 55.6457 203.505 cv
56.8332 203.911 58.0129 204.366 59.1984 204.877 cv
61.3615 207.076 63.7033 209.09 66.1349 211.009 cv
65.8205 211.45 65.7931 212.153 66.3537 212.571 cv
67.9357 213.754 69.3449 214.4 71.2668 214.829 cv
72.4767 215.099 73.0353 213.594 72.0802 212.9 cv
71.8703 212.748 71.6632 212.595 71.4543 212.443 cv
71.7502 212.081 71.8761 211.612 71.7795 211.048 cv
73.4045 211.356 75.0744 211.507 76.7765 211.495 cv
77.965 211.53 79.1134 211.428 79.9836 211.291 cv
81.0822 211.12 80.8371 209.213 79.7189 209.334 cv
77.9416 209.525 76.175 209.543 74.4396 209.399 cv
74.3322 209.341 74.2433 209.275 74.1964 209.192 cv
73.7179 208.353 77.6623 208.819 78.0539 208.875 cv
80.84 209.27 83.6535 209.526 86.342 210.344 cv
86.5666 210.551 li
86.7316 210.711 86.924 210.825 87.1242 210.917 cv
86.0968 211.216 85.0461 211.568 83.8996 211.952 cv
79.5002 213.424 74.9699 214.118 70.5207 215.35 cv
69.3625 215.671 68.8332 217.286 69.7853 218.137 cv
72.2091 220.305 74.9523 220.268 78.1144 220.344 cv
82.7765 220.455 87.7326 220.655 92.2853 219.545 cv
92.8908 219.397 93.2355 219.015 93.3683 218.566 cv
99.5695 217.423 105.632 215.687 111.243 212.687 cv
116.978 209.621 125.144 204.269 126.41 197.367 cv
126.559 196.561 125.777 195.784 124.987 196.185 cv
125.041 195.944 li
125.185 195.953 125.334 195.943 125.49 195.901 cv
125.705 195.842 li
126.495 195.627 126.849 194.673 126.633 193.958 cv
126.921 192.755 127.893 191.141 128.292 190.175 cv
129.12 188.17 130.107 186.255 131.217 184.391 cv
131.773 183.458 132.354 182.558 132.932 181.662 cv
133.507 181.328 134.102 181.005 134.726 180.704 cv
135.543 180.622 136.355 180.503 137.161 180.32 cv
140.685 179.832 144.097 179.332 146.986 176.984 cv
147.194 176.919 147.402 176.854 147.603 176.775 cv
147.833 176.685 148.032 176.572 148.215 176.447 cv
148.645 176.415 149.074 176.347 149.503 176.246 cv
152.478 175.957 155.283 174.548 156.422 171.765 cv
159.812 168.029 162.03 162.767 161.33 158.597 cv
162.644 151.208 163.043 143.572 162.774 135.987 cv
163.314 135.762 163.748 135.218 163.627 134.486 cv
cp
.2 .164706 .211765 rgb
f
138.807 179.178 mo
137.18 177.597 135.405 177.519 133.611 178.394 cv
133.712 176.784 131.377 176.354 130.619 177.629 cv
129.118 180.155 127.9 182.848 126.734 185.576 cv
126.017 186.661 125.329 187.792 124.68 188.93 cv
123.828 188.516 122.536 188.808 122.391 189.858 cv
121.742 194.569 li
120.663 196.834 119.873 198.719 119.495 199.708 cv
119.377 200.017 119.364 200.312 119.429 200.58 cv
118.956 201.413 118.734 202.363 118.94 203.526 cv
118.679 203.863 118.42 204.202 118.138 204.524 cv
117.746 203.849 116.832 203.513 116.026 204.225 cv
114.187 205.849 113.095 208.039 111.627 209.96 cv
111.446 210.074 111.267 210.193 111.084 210.303 cv
110.526 210.565 110.302 211.011 110.307 211.472 cv
110.281 211.499 li
109.42 212.325 108.516 212.955 107.573 213.441 cv
107.107 212.995 106.46 212.772 105.734 213.039 cv
99.0802 214.295 92.9992 215.726 86.1486 215.398 cv
85.0744 215.347 84.4025 215.932 84.1261 216.697 cv
82.4611 216.657 80.7882 216.645 79.1525 216.499 cv
78.6134 215.32 77.6916 214.58 76.4992 213.845 cv
74.6281 212.693 73.0412 211.459 71.4621 210.033 cv
72.2824 209.654 73.1691 209.489 74.1359 209.577 cv
75.0998 209.54 75.1037 208.107 74.1359 208.077 cv
72.3791 208.021 70.8947 208.383 69.1847 208.698 cv
68.34 208.853 68.1945 209.816 68.4679 210.459 cv
68.9357 211.559 69.6027 212.532 70.382 213.417 cv
68.2873 212.51 66.2961 211.424 64.3625 210.193 cv
64.2834 210.094 64.2004 210.002 64.1242 209.9 cv
63.8488 209.531 63.4709 209.373 63.0988 209.365 cv
62.5509 208.991 62.0031 208.617 61.464 208.216 cv
60.4074 207.432 59.1252 208.927 59.7306 209.95 cv
61.6886 213.257 64.7297 215.228 68.091 216.953 cv
70.4357 218.156 72.7297 219.251 75.2121 219.506 cv
79.8166 220.762 85.6642 221.732 90.1047 220.002 cv
93.6916 219.998 97.3547 219.707 100.864 218.929 cv
106.942 218.926 113.142 216.567 116.298 211.658 cv
118.854 210.33 120.844 208.343 122.333 205.99 cv
122.862 205.814 123.361 205.486 123.731 204.961 cv
124.667 203.635 125.427 202.245 126.047 200.802 cv
126.597 200.394 127.092 200.044 127.283 199.853 cv
128.591 198.552 129.708 197.008 130.647 195.427 cv
132.422 192.436 133.761 188.952 133.851 185.448 cv
133.856 185.259 133.808 185.082 133.737 184.913 cv
135.238 183.427 136.845 182.02 138.608 180.724 cv
139.104 180.36 139.3 179.658 138.807 179.178 cv
cp
.145098 .121569 .156863 rgb
f
140.712 65.6156 mo
140.379 65.1503 139.923 65.0448 139.531 65.1551 cv
139.039 63.8851 138.524 62.6346 137.99 61.3993 cv
139.052 62.7323 140.112 64.0663 141.175 65.3993 cv
141.348 65.9418 141.513 66.4921 141.693 67.0297 cv
141.365 66.5585 141.041 66.076 140.712 65.6156 cv
cp
129.955 45.7816 mo
127.606 41.8046 125.108 37.8754 122.51 33.8846 cv
121.952 33.0292 120.807 33.0912 120.233 33.6898 cv
119.675 32.1693 119.205 30.6302 118.823 29.0677 cv
119.269 29.8793 120.335 30.0453 121.076 29.6542 cv
121.889 31.3343 122.752 33.0013 123.705 34.6522 cv
125.396 37.5775 127.227 40.4051 129.178 43.1439 cv
129.969 44.6981 130.777 46.243 131.596 47.7811 cv
131.045 47.118 130.498 46.451 129.955 45.7816 cv
cp
162.168 123.179 mo
162.033 122.705 161.625 122.444 161.196 122.389 cv
163.218 114.167 164.601 106.071 164.6 97.5477 cv
164.6 96.2167 163.496 95.6171 162.48 95.7347 cv
161.029 88.2289 158.491 80.7567 154.175 74.5931 cv
153.317 73.3685 151.702 73.7259 151.132 74.6932 cv
150.028 72.7831 148.891 70.8929 147.743 69.0087 cv
147.898 68.5638 147.881 68.0677 147.577 67.5975 cv
144.983 63.5819 142.496 59.5057 140.109 55.3734 cv
141.409 55.2963 142.665 53.8583 141.733 52.5682 cv
137.885 47.2474 134.047 41.9208 130.179 36.6141 cv
129.758 36.0375 129.209 35.7782 128.669 35.7465 cv
125.907 31.4921 123.425 27.0463 121.343 22.4759 cv
120.64 17.1268 119.286 11.9222 117.299 6.83337 cv
116.544 4.8988 114.063 5.30114 113.8 7.307 cv
113.458 9.92712 113.512 12.5267 113.862 15.1415 cv
113.97 15.9437 114.619 16.3807 115.248 16.4095 cv
115.796 18.389 116.355 20.3661 116.911 22.3431 cv
116.892 22.472 li
117.282 31.2587 119.607 43.0824 127.101 48.6996 cv
127.394 48.9188 127.674 48.7611 127.812 48.5067 cv
128.393 49.2504 128.977 49.993 129.559 50.7377 cv
130.366 51.7699 131.186 52.7933 131.996 53.8221 cv
134.521 58.8793 136.698 64.0897 138.588 69.1566 cv
138.871 69.9149 139.672 70.076 140.246 69.8299 cv
143.927 77.806 148.671 86.0277 153.573 93.0721 cv
154.441 94.3177 156.375 93.2352 155.631 91.8695 cv
154.301 88.8758 152.802 85.8133 151.197 82.764 cv
150.122 80.3197 149.111 77.8392 148.157 75.3368 cv
149.356 77.1092 150.57 78.871 151.832 80.6009 cv
152.211 81.1215 152.806 81.1947 153.276 81.0052 cv
156.441 88.2943 158.984 95.3832 159.84 103.609 cv
159.908 104.267 160.255 104.777 160.712 105.097 cv
160.516 111.221 159.966 117.328 158.714 123.334 cv
158.229 123.247 157.657 123.622 157.869 124.198 cv
158.591 128.47 158.702 132.695 158.523 136.904 cv
158.44 137.099 158.38 137.314 158.367 137.562 cv
158.27 139.439 158.172 141.316 158.075 143.192 cv
157.485 149.366 156.576 155.535 156.315 161.794 cv
156.29 162.378 156.611 162.811 157.05 163.066 cv
156.867 163.752 156.709 164.426 156.629 165.127 cv
155.842 167.184 154.549 168.939 152.647 170.379 cv
150.546 171.969 148.069 172.955 146.073 174.678 cv
145.785 174.927 145.669 175.261 145.66 175.602 cv
144.368 176.408 143.018 176.929 141.301 176.215 cv
139.746 175.568 138.587 178.282 140.146 178.956 cv
142.478 179.967 144.359 179.624 146.699 178.693 cv
149.773 177.47 153.045 176.799 156.089 175.537 cv
158.143 174.685 160.436 173.242 161.423 171.148 cv
161.857 170.228 161.914 169.417 161.699 168.452 cv
161.5 167.558 161.234 166.84 161 166.145 cv
163.955 161.271 162.852 153.013 163.024 147.709 cv
163.279 139.814 164.361 130.852 162.168 123.179 cv
cp
f
96.3146 24.6576 mo
95.3146 25.6576 li
94.6847 26.288 95.6623 27.266 96.2931 26.6356 cv
96.6261 26.3021 96.9591 25.9691 97.2931 25.6356 cv
97.923 25.0057 96.9455 24.0277 96.3146 24.6576 cv
cp
f
74.882 54.0819 mo
77.4855 53.8715 80.0666 53.8846 82.6339 54.3822 cv
79.4093 55.475 76.1593 56.4545 72.8205 57.2001 cv
71.9923 57.3851 71.1613 57.5404 70.3312 57.6918 cv
69.8664 57.7069 69.3996 57.7069 68.9338 57.7167 cv
68.6203 57.4838 68.2257 57.3578 67.8 57.4349 cv
70.1964 56.389 72.5724 55.2943 74.882 54.0819 cv
cp
109.437 16.267 mo
103.919 20.1317 99.0373 24.6996 94.2423 29.4003 cv
94.3996 28.6757 93.5158 27.9344 92.9552 28.6219 cv
85.0597 38.2933 74.4972 47.8758 62.8263 53.1278 cv
62.5392 52.7992 62.0763 52.6029 61.5744 52.8221 cv
50.4963 57.6698 38.8644 63.1039 29.2736 70.5565 cv
27.9494 71.5858 29.9035 73.579 31.0636 72.5721 cv
34.1047 70.7577 37.0949 68.9125 40.0793 67.079 cv
40.2687 67.4584 40.6388 67.7279 41.1447 67.7386 cv
39.8888 68.557 38.7052 69.4823 37.5998 70.5194 cv
36.7297 71.1537 35.8683 71.8011 35.0295 72.4803 cv
34.4865 72.9193 33.9279 73.3895 33.3683 73.8832 cv
32.9953 73.7972 32.5822 73.9066 32.3224 74.3353 cv
32.0822 74.7308 31.8556 75.1337 31.6183 75.5316 cv
29.3693 77.8187 27.4523 80.5433 27.131 83.6044 cv
26.8703 84.1092 26.6222 84.6195 26.3664 85.1268 cv
25.9591 83.952 24.0568 83.6302 23.7824 85.1097 cv
23.2902 87.7767 22.8078 90.534 22.4054 93.3358 cv
21.3625 95.559 20.5363 97.9623 21.6447 99.9818 cv
21.3722 103.307 21.2892 106.644 21.4972 109.923 cv
20.5832 115.83 19.8673 121.77 19.4113 127.73 cv
18.9709 133.486 17.7062 140.897 19.2687 146.513 cv
19.4064 147.008 19.8312 147.486 20.3507 147.595 cv
20.5588 147.638 li
21.3214 150.897 22.3957 154.077 23.6252 157.036 cv
24.8839 160.062 27.8058 168.943 32.2902 168.455 cv
34.1486 171.031 36.1906 173.466 38.4631 175.696 cv
41.0519 178.237 44.1603 181.307 47.6291 182.547 cv
48.6525 182.913 49.2638 182.091 49.2287 181.254 cv
51.7072 182.956 54.297 184.478 57.0041 185.773 cv
61.008 188.794 65.091 191.68 69.2629 194.447 cv
72.8293 196.927 76.4875 199.282 80.2746 201.395 cv
80.8156 201.697 81.341 201.72 81.7931 201.565 cv
83.0627 202.311 84.3322 203.055 85.5949 203.808 cv
87.13 204.724 88.4718 203.591 88.6574 202.25 cv
89.6261 201.651 90.5841 201.036 91.5461 200.424 cv
92.2531 200.376 92.9123 200.08 93.5168 199.644 cv
94.258 200.64 95.6418 201.063 96.7453 199.84 cv
97.9181 198.539 98.882 197.389 99.6554 195.829 cv
100.113 194.905 99.3507 193.379 98.1828 193.758 cv
98.5002 193.143 98.798 192.516 99.0578 191.86 cv
99.3214 191.194 98.4308 190.589 97.8693 190.946 cv
96.2687 191.961 94.6007 192.753 93.0402 193.852 cv
92.6086 194.156 92.4035 194.539 92.3634 194.921 cv
92.1994 195.017 li
91.6339 194.43 90.84 194.073 89.9474 194.149 cv
88.6105 194.263 87.5129 195.258 86.6476 196.487 cv
85.5402 196.413 84.4494 196.246 83.382 195.955 cv
81.0597 195.397 78.9953 194.396 76.9591 193.159 cv
76.297 192.771 75.6564 192.807 75.1359 193.077 cv
74.6115 192.786 74.0832 192.503 73.5578 192.214 cv
73.4982 192.045 73.4006 191.884 73.2189 191.76 cv
70.6906 190.022 68.0793 188.339 65.5988 186.503 cv
64.5793 185.7 63.5617 184.892 62.5412 184.083 cv
61.6066 183.274 60.4064 183.928 60.2013 184.834 cv
59.4689 184.389 58.7365 183.945 58.005 183.499 cv
57.9464 183.454 li
58.6398 182.973 58.9709 181.995 58.1535 181.358 cv
55.0461 178.939 51.4591 177.07 47.7941 175.491 cv
40.6886 169.699 34.0099 163.521 28.3185 156.011 cv
27.6632 154.207 27.008 152.406 26.4464 150.589 cv
24.8713 145.499 23.4982 140.348 22.4386 135.127 cv
22.4367 134.875 22.424 134.629 22.4289 134.373 cv
22.4689 132.106 22.6349 129.865 22.7375 127.625 cv
22.8322 127.548 22.9142 127.458 22.9562 127.345 cv
25.3576 120.749 25.1955 112.636 25.0578 105.418 cv
25.8576 101.981 26.1076 98.7386 25.4093 95.4462 cv
25.4709 94.4359 25.5431 93.4252 25.6291 92.4144 cv
26.4855 90.3685 27.4718 88.3929 28.2443 86.6893 cv
28.5773 85.9564 28.924 85.2308 29.2707 84.5052 cv
32.0275 80.3221 34.6681 77.0067 38.5998 73.7098 cv
39.2804 73.1395 39.9757 72.6024 40.6672 72.055 cv
46.8117 67.7118 53.8595 65.6752 60.8908 63.2054 cv
63.7091 62.9989 66.5324 62.8094 69.2765 62.0038 cv
69.8791 61.827 70.256 61.4418 70.4396 60.9877 cv
71.9992 60.7499 73.5597 60.5272 75.1252 60.3363 cv
78.5275 60.1639 81.925 59.8382 85.2892 59.4471 cv
87.0763 59.2391 87.1515 56.4462 85.2892 56.5873 cv
84.4504 56.6507 83.6125 56.723 82.7756 56.7982 cv
84.0802 56.3451 85.3781 55.8715 86.6603 55.3505 cv
87.6906 54.9315 87.7541 53.5824 86.6603 53.1825 cv
83.4152 51.996 80.1476 51.7025 76.8586 51.8475 cv
76.6935 51.6674 76.4474 51.5653 76.1261 51.6605 cv
75.8078 51.7548 75.4914 51.8588 75.173 51.9564 cv
72.9738 52.1454 70.7638 52.4945 68.5441 52.8768 cv
67.7111 53.0204 67.6603 53.8768 68.0695 54.4086 cv
66.0295 55.1761 63.9992 55.9755 61.9748 56.7806 cv
61.1574 56.8343 60.9757 56.972 59.6506 57.6507 cv
59.5099 57.7591 li
58.8644 58.0145 58.2199 58.2694 57.5744 58.5209 cv
56.2365 59.0428 54.8781 59.5409 53.5129 60.0336 cv
52.2638 60.3758 51.0402 60.7792 49.8439 61.2342 cv
52.964 59.4359 56.13 57.7035 59.3966 56.0956 cv
60.9494 56.2157 60.548 56.3109 61.9025 55.3993 cv
62.1056 55.2626 62.1125 55.0091 61.9982 54.8475 cv
62.1984 54.7548 62.3918 54.6542 62.592 54.5624 cv
62.7931 54.4164 li
67.7785 51.909 72.7922 49.433 77.3078 46.1424 cv
90.4953 40.4789 99.1916 26.5243 110.572 18.2098 cv
111.724 17.3685 110.634 15.4286 109.437 16.267 cv
cp
f
59.4709 56.222 mo
59.1388 56.222 59.1379 56.7377 59.4709 56.7377 cv
59.8019 56.7377 59.8029 56.222 59.4709 56.222 cv
cp
f
9.58903 148.816 mo
9.62223 149.164 9.65153 149.513 9.68961 149.86 cv
9.03239 148.86 7.77653 147.099 9.58903 148.816 cv
cp
94.8888 13.14 mo
92.8195 14.015 90.8019 15.0238 88.8185 16.1112 cv
88.6535 16.1674 88.4884 16.2201 88.3244 16.2767 cv
88.1291 16.037 87.8283 15.8558 87.5168 15.8788 cv
81.1554 16.3466 73.715 21.3334 68.2834 24.3964 cv
61.6027 28.1639 54.4211 32.1278 48.5529 37.0863 cv
48.5617 37.0975 li
47.9338 37.7049 48.6808 38.8373 49.5617 38.3929 cv
54.7287 35.7855 59.4982 32.2655 64.4279 29.1503 cv
69.3605 26.5409 74.4328 24.1966 79.5343 21.8998 cv
76.2882 24.1283 73.1193 26.4593 69.9953 28.7308 cv
65.3175 32.1322 60.5246 35.4554 55.9103 38.9852 cv
55.6974 39.0443 55.4836 39.1327 55.2726 39.2914 cv
52.9132 41.0707 50.6037 42.9134 48.34 44.8104 cv
45.7873 46.4715 43.0861 47.9154 40.3214 49.2967 cv
39.0832 49.9154 39.2443 51.4476 40.0685 52.2372 cv
37.0959 55.1049 34.2384 58.0917 31.5187 61.2074 cv
28.4113 64.7674 25.2912 68.4432 22.7834 72.433 cv
22.9084 72.0507 23.0373 71.6703 23.1603 71.286 cv
23.5109 70.1923 21.9142 69.5687 21.34 70.5184 cv
17.7062 76.5228 15.1906 83.409 13.297 90.3837 cv
12.924 90.5653 12.6242 90.912 12.5041 91.4549 cv
9.73551 103.991 6.55094 116.623 4.81852 129.349 cv
4.70036 130.219 5.94743 131.004 6.40543 130.018 cv
6.91227 128.93 7.41325 127.923 7.86344 126.907 cv
7.67789 129.726 7.67985 132.545 8.06559 135.343 cv
8.06266 135.381 li
8.07047 135.381 li
8.08317 135.474 8.0861 135.567 8.09977 135.659 cv
8.22672 136.512 9.10172 136.567 9.65446 136.151 cv
9.34098 139.018 9.23844 141.91 9.33121 144.795 cv
9.00993 144.692 8.68571 144.626 8.35954 144.628 cv
6.14274 144.644 5.39176 146.586 5.66715 148.514 cv
6.05094 151.198 8.26871 154.181 10.4718 156.777 cv
10.923 159.578 11.6789 162.325 13.1779 163.991 cv
14.3898 165.337 16.1847 165.566 17.3449 164.49 cv
19.9533 167.158 22.8048 169.589 25.9748 171.53 cv
25.5539 171.778 25.3117 172.384 25.7345 172.867 cv
30.7892 178.651 36.9142 183.695 44.4562 185.66 cv
44.9591 185.79 45.2521 185.096 44.8088 184.824 cv
38.5675 181 32.4142 177.307 27.2824 172.024 cv
28.2062 171.898 28.881 170.689 28.0519 169.893 cv
24.8859 166.85 21.5685 164.016 18.4982 160.899 cv
18.4211 157.905 16.8605 154.294 15.7345 152.171 cv
15.0656 150.91 13.842 148.734 12.3517 147.041 cv
12.1603 145.59 12.0002 144.134 11.8947 142.675 cv
11.8117 141.521 10.799 132.455 13.5382 133.905 cv
13.9718 134.135 14.5177 133.524 14.092 133.187 cv
12.5509 131.967 13.0929 132.198 11.173 131.763 cv
10.7834 131.675 10.2707 131.88 10.1925 132.32 cv
10.1418 132.604 10.1037 132.891 10.0578 133.177 cv
9.88493 126.558 11.008 120.125 12.0783 113.566 cv
13.1554 106.964 14.1379 100.341 15.5109 93.7943 cv
16.2482 91.3348 17.0578 88.9066 17.8937 86.4877 cv
18.4142 87.1385 19.8019 87.1249 19.9504 86.1205 cv
21.4015 76.3192 29.2589 68.7504 35.8664 61.9076 cv
39.7863 57.8485 43.9045 54.0082 48.1886 50.3588 cv
53.9318 48.0204 59.3527 44.9955 64.508 41.4706 cv
71.3586 36.7865 78.9211 31.3397 84.0451 24.7552 cv
84.299 24.4291 84.3791 24.0443 84.3302 23.6893 cv
85.0295 23.2548 85.7297 22.8202 86.4289 22.3856 cv
86.6408 22.3964 86.8664 22.3514 87.0978 22.2191 cv
89.4308 20.8861 91.7638 19.5526 94.0978 18.2191 cv
94.5597 17.955 94.7248 17.5404 94.6935 17.1341 cv
95.3107 16.7469 95.9279 16.3602 96.5441 15.973 cv
98.3859 14.8177 96.7834 12.3387 94.8888 13.14 cv
cp
.403922 .337255 .419608 rgb
f
66.7912 205.642 mo
64.4132 197.734 56.7804 191.503 49.8351 187.626 cv
48.1603 186.691 46.6525 189.274 48.3332 190.197 cv
51.9582 192.187 55.2472 194.603 58.1711 197.535 cv
60.8996 200.27 63.0304 203.471 65.5968 206.338 cv
66.0763 206.873 66.9923 206.31 66.7912 205.642 cv
cp
f
108.686 56.8622 mo
108.312 56.4003 107.952 55.934 107.616 55.4618 cv
108.051 55.1732 108.375 54.7015 108.417 54.0795 cv
108.521 52.538 108.525 51.0458 108.479 49.5629 cv
111.744 54.2938 114.858 59.2538 118.081 64.1317 cv
115.179 61.3939 112.356 58.555 108.686 56.8622 cv
cp
144.736 117.086 mo
145.533 111.295 146.113 105.449 146.091 99.6659 cv
146.128 99.5433 146.157 99.4169 146.152 99.2787 cv
146.124 98.6639 146.098 98.0487 146.07 97.4335 cv
146.038 96.6991 145.668 96.2445 145.194 96.0419 cv
143.931 92.3441 142.333 88.7894 140.516 85.3382 cv
140.564 84.9925 140.503 84.6122 140.273 84.2191 cv
136.05 76.994 129.628 67.912 122.455 62.9882 cv
118.572 57.3363 114.348 51.8646 110.514 46.453 cv
109.921 45.6161 108.958 45.5482 108.226 45.8929 cv
108.099 44.7557 107.944 43.6132 107.734 42.4486 cv
107.711 42.3251 107.655 42.2294 107.609 42.1268 cv
107.573 40.8441 107.634 39.5643 107.857 38.3007 cv
107.98 37.6019 107.653 37.0673 107.186 36.785 cv
107.247 36.4632 107.321 36.1459 107.373 35.8202 cv
107.627 34.2264 106.258 33.2357 104.808 33.8485 cv
104.549 33.9574 li
104.363 33.8436 104.159 33.7709 103.949 33.7274 cv
104.431 32.8451 104.954 31.972 105.535 31.1127 cv
106.207 30.118 104.786 29.2308 103.976 29.9091 cv
100.157 33.1 96.1603 36.0629 92.3566 39.2601 cv
90.5939 40.7416 92.8439 42.9725 94.6222 42.1962 cv
96.0461 41.5746 97.464 40.9398 98.883 40.3065 cv
97.7668 43.0253 97.1886 45.93 97.1877 49.1102 cv
97.1877 49.7596 97.55 50.2967 98.0461 50.6337 cv
98.1339 52.6835 98.4181 54.7411 98.9445 56.7889 cv
99.215 57.8392 100.675 57.368 100.527 56.3529 cv
100.326 54.9745 100.192 53.6068 100.111 52.2489 cv
100.76 53.1478 102.115 53.6454 102.961 52.6166 cv
103.15 52.3729 li
103.755 53.8636 104.611 55.307 105.637 56.6786 cv
105.717 56.7801 li
105.187 57.3988 105.042 58.3793 105.747 58.9676 cv
107.594 60.5111 109.442 62.0536 111.289 63.5956 cv
110.677 63.4066 110.061 63.2313 109.435 63.0858 cv
107.938 62.7377 107.299 65.0467 108.8 65.391 cv
110.619 65.8085 112.374 66.3915 114.041 67.2416 cv
115.346 67.9066 116.58 68.9442 118.012 69.3099 cv
118.961 70.0741 119.919 70.8163 120.885 71.5155 cv
121.608 72.0384 122.422 71.7494 122.933 71.1737 cv
124.914 73.9105 126.976 76.5653 129.185 79.059 cv
129.963 79.9369 131.063 79.183 131.15 78.2543 cv
132.276 79.6522 133.378 81.0677 134.478 82.4862 cv
135.026 83.6595 135.75 84.6722 136.715 85.6302 cv
138.962 89.7455 140.926 93.9862 142.811 98.3011 cv
141.626 107.521 141.152 116.78 139.674 125.986 cv
139.403 127.67 141.187 128.651 142.341 128.189 cv
142.308 128.445 li
141.673 128.59 141.11 129.007 140.917 129.735 cv
140.249 132.267 139.963 134.873 139.745 137.488 cv
138.527 144.019 136.719 150.388 134.301 156.639 cv
133.751 158.06 134.977 158.973 136.183 158.905 cv
132.098 161.294 128.655 164.659 125.096 167.752 cv
120.986 171.326 116.802 174.813 112.566 178.237 cv
111.266 179.288 111.838 180.796 112.968 181.487 cv
112.146 182.229 111.449 183.083 110.638 184.049 cv
108.286 186.849 105.644 189.336 102.554 191.312 cv
101.019 192.293 101.968 194.912 103.832 194.345 cv
104.617 194.105 105.389 193.821 106.154 193.517 cv
105.044 194.793 103.844 196.022 102.527 197.203 cv
101.22 198.372 103.101 200.135 104.415 199.092 cv
107.883 196.342 111.02 193.151 113.526 189.528 cv
119.397 185.521 124.564 180.078 129.027 175.034 cv
130.005 173.929 128.794 172.391 127.48 173.027 cv
123.587 174.914 120.419 177.732 117.32 180.645 cv
117.223 180.512 117.099 180.398 116.964 180.296 cv
124.462 174.34 133.366 168.11 138.534 160.118 cv
139.086 159.266 138.316 158.368 137.47 158.356 cv
137.662 158.169 137.825 157.934 137.94 157.641 cv
138.542 156.1 139.094 154.548 139.622 152.99 cv
139.782 152.872 139.923 152.71 140.026 152.483 cv
140.077 152.369 140.117 152.253 140.166 152.139 cv
140.17 152.14 li
140.176 152.116 li
141.199 149.72 141.72 147.232 142.072 144.716 cv
143.016 140.976 143.759 137.187 144.302 133.345 cv
145.304 128.56 146.261 123.766 147.109 118.946 cv
147.372 117.447 145.745 116.575 144.736 117.086 cv
cp
f
160.722 138.948 mo
161.542 149.148 165.136 174.897 149.56 176.156 cv
145.682 176.47 141.557 177.077 137.986 178.533 cv
137.379 178.333 136.691 178.441 136.119 179.072 cv
135.927 179.285 135.742 179.502 135.556 179.718 cv
134.56 180.295 133.636 180.967 132.802 181.743 cv
131.951 181.94 131.127 182.47 130.521 183.107 cv
129.36 184.33 128.54 185.778 128.005 187.37 cv
127.748 188.136 128.098 188.978 128.709 189.47 cv
128.506 190.631 128.428 191.801 128.433 192.975 cv
127.512 196.355 126.788 199.738 124.551 202.641 cv
118.006 211.132 109.151 215.35 98.9318 217.876 cv
89.5597 220.193 74.8048 222.727 66.9474 215.667 cv
59.2638 208.763 52.8097 200.087 47.1134 191.525 cv
46.9757 191.318 46.8146 191.161 46.6447 191.028 cv
41.3888 183.737 34.5998 177.716 26.5754 173.211 cv
19.6603 169.328 13.2004 165.758 9.12321 158.66 cv
5.28239 151.973 3.92301 144.193 3.94254 136.562 cv
3.965 127.824 5.64664 119.17 7.2111 110.604 cv
8.63688 102.799 10.2101 94.9886 12.6984 87.4423 cv
17.6271 72.5008 26.6984 59.3881 37.8009 48.3549 cv
50.0382 36.1937 64.5256 26.6927 79.4064 18.097 cv
79.5177 18.0663 79.63 18.0336 79.7443 17.9818 cv
86.172 15.0536 92.5998 12.1249 99.0275 9.19665 cv
102.242 7.7318 105.699 5.56677 109.126 4.70544 cv
114.965 3.23718 116.29 7.53942 118.072 12.0477 cv
122.017 22.0253 123.782 32.6556 130.892 41.0746 cv
131.197 41.4359 131.541 41.6327 131.89 41.7049 cv
139.024 50.2269 143.513 60.4086 148.984 70.0043 cv
151.505 74.4286 154.728 78.4618 157.126 82.9423 cv
159.956 88.2294 160.935 94.2357 161.92 100.079 cv
162.016 100.648 162.289 101.026 162.644 101.255 cv
163.16 107.345 162.137 113.399 161.289 119.532 cv
160.389 126.049 160.194 132.384 160.722 138.948 cv
cp
165.66 95.0209 mo
165.523 94.4696 165.222 94.1005 164.852 93.8734 cv
164.075 89.9374 163.069 86.0521 161.334 82.412 cv
158.911 77.3324 155.225 72.8754 152.437 67.9852 cv
146.618 57.7787 141.832 47.056 134.071 38.1019 cv
133.778 37.764 133.45 37.578 133.119 37.4984 cv
128.696 31.8954 126.64 25.1107 124.478 18.3827 cv
122.808 13.1859 121.023 5.22839 116.6 1.59216 cv
111.987 -2.19935 105.864 1.70788 101.391 3.74645 cv
94.3439 6.95641 87.298 10.1669 80.2521 13.3768 cv
79.8957 13.348 79.5119 13.4203 79.1193 13.6444 cv
51.673 29.3436 24.2775 49.1395 11.5392 79.1991 cv
5.24332 94.055 2.382 111.035 .557777 126.997 cv
-1.05453 141.107 .370277 157.076 10.9738 167.643 cv
17.132 173.781 25.7101 176.55 32.5099 181.847 cv
36.9963 185.341 40.8068 189.498 43.9777 194.122 cv
44.0685 194.155 li
50.0246 203.079 56.8752 212.664 65.217 219.451 cv
73.0959 225.861 85.6095 224.442 94.9474 222.804 cv
105.151 221.013 115.381 217.68 122.902 210.319 cv
126.054 207.234 129.174 203.994 130.727 199.789 cv
133.068 193.449 133.935 187.865 138.352 182.597 cv
141.67 180.882 145.863 180.412 149.56 180.156 cv
154.719 179.798 158.058 177.745 160.865 173.342 cv
167.586 162.798 165.509 149.71 164.643 137.984 cv
163.586 123.672 169.18 109.096 165.66 95.0209 cv
cp
.156863 .113725 .113725 rgb
f
136.007 121.228 mo
135.109 126.892 134.122 132.55 132.782 138.128 cv
129.889 150.175 125.259 163.85 115.48 172.103 cv
110.667 176.164 104.93 179.125 99.9552 183.014 cv
95.0763 186.827 90.4601 190.955 85.8693 195.108 cv
76.7931 188.968 67.299 183.556 57.383 178.883 cv
54.4767 176.403 51.1066 174.983 47.5705 173.524 cv
41.7756 171.132 37.2541 167.741 33.8429 162.397 cv
30.7238 157.51 28.9132 151.985 27.4689 146.407 cv
25.8302 140.073 23.7111 133.091 24.1916 126.498 cv
24.6037 120.828 27.1066 115.563 28.1486 110.015 cv
29.1545 104.654 28.9279 99.1908 29.4406 93.7826 cv
30.7238 80.2284 40.3752 73.0301 52.8595 69.7562 cv
63.7277 66.9056 75.5334 65.1332 86.7765 65.266 cv
99.5793 65.4169 109.879 69.6278 119.403 78.1395 cv
127.319 85.2128 136.792 93.2504 137.655 104.586 cv
138.078 110.133 136.871 115.775 136.007 121.228 cv
cp
141.655 104.586 mo
140.902 93.4755 133.201 85.4276 125.444 78.2499 cv
116.313 69.7997 107.246 63.4642 94.6398 61.8094 cv
82.7189 60.245 70.507 62.1727 58.7853 64.3812 cv
47.7472 66.4608 35.9201 70.1537 29.5148 80.1346 cv
26.5656 84.7303 25.6759 90.1625 25.3078 95.5194 cv
24.8088 102.797 24.3361 109.526 22.2736 116.584 cv
18.2824 130.238 21.59 145.217 27.1173 158.126 cv
29.4679 163.615 32.8107 168.766 37.5265 172.511 cv
42.5041 176.462 49.1339 177.457 54.0685 181.309 cv
54.2248 181.639 54.5089 181.931 54.9504 182.138 cv
55.1769 182.246 li
55.1906 182.259 li
55.548 182.592 55.9396 182.758 56.3273 182.8 cv
66.3263 187.573 75.9015 193.088 85.0412 199.362 cv
85.7941 199.879 86.8381 199.617 87.465 199.05 cv
92.7863 194.229 98.1086 189.378 103.835 185.036 cv
108.917 181.182 114.798 178.264 119.472 173.895 cv
128.108 165.825 132.802 153.683 135.798 142.514 cv
137.433 136.422 138.581 130.212 139.593 123.99 cv
140.621 117.665 142.092 111.018 141.655 104.586 cv
cp
f
138.56 89.5975 mo
138.075 88.8016 137.247 88.7362 136.623 89.0697 cv
134.713 85.9423 132.349 82.9291 129.99 80.097 cv
129.948 80.0077 li
129.546 79.4608 129.095 78.9559 128.622 78.4676 cv
127.361 76.9789 126.129 75.5433 125.002 74.1776 cv
124.559 73.6405 123.839 73.7889 123.394 74.201 cv
122.881 73.827 122.372 73.4535 121.878 73.0736 cv
119.437 71.1996 117.012 69.3041 114.594 67.4003 cv
113.973 66.8475 113.311 66.3241 112.61 65.8324 cv
111.952 65.3124 111.293 64.7967 110.638 64.2748 cv
110.348 64.0443 110.023 63.9989 109.729 64.0658 cv
108.459 63.3802 107.134 62.7572 105.781 62.1991 cv
105.855 62.0091 105.892 61.8065 105.883 61.6044 cv
110.664 63.9178 115.263 66.5648 119.959 69.2992 cv
126.729 73.2406 133.781 77.413 137.97 84.2728 cv
140.417 88.2821 141.689 92.8353 142.41 97.5106 cv
141.37 94.7299 140.062 92.0638 138.56 89.5975 cv
cp
81.7482 51.8827 mo
83.6066 51.7181 85.4435 51.6239 87.2716 51.5809 cv
87.1232 51.848 86.9806 52.1185 86.8302 52.3851 cv
85.1242 52.3016 83.422 52.203 81.7482 51.8827 cv
cp
77.1144 48.2303 mo
77.2062 48.2137 77.298 48.1966 77.3898 48.1786 cv
77.3771 48.3832 77.4201 48.5887 77.5021 48.7762 cv
77.1896 48.8011 76.8761 48.8212 76.5627 48.8402 cv
76.7463 48.6366 76.924 48.4296 77.1144 48.2303 cv
cp
93.2072 40.4691 mo
90.4689 42.3583 87.4006 43.8036 84.173 45.0463 cv
82.7804 45.1752 81.3947 45.348 80.0197 45.5638 cv
84.5597 41.8456 90.2599 38.8812 95.4211 36.2328 cv
94.6808 37.6439 93.9416 39.0555 93.2072 40.4691 cv
cp
83.4152 47.9344 mo
84.1379 47.68 84.8615 47.4188 85.5832 47.1385 cv
85.9826 47.1151 86.3781 47.1136 86.7756 47.1005 cv
85.6662 47.4252 84.5441 47.6991 83.4152 47.9344 cv
cp
145.813 108.71 mo
145.691 99.7782 144.971 89.9349 139.887 82.2748 cv
135.371 75.472 128.201 71.0507 121.316 66.9789 cv
115.613 63.6058 109.626 60.4056 103.3 58.3627 cv
103.183 58.2718 103.051 58.1966 102.927 58.1136 cv
103.39 56.7362 103.934 54.912 104.361 52.9696 cv
104.802 53.0487 105.237 53.1127 105.682 53.1981 cv
106.001 54.1156 106.306 55.0424 106.584 55.9867 cv
107.069 57.6288 108.949 57.6288 109.826 56.6615 cv
110.343 57.9632 110.867 59.2621 111.409 60.5541 cv
111.872 61.6561 113.496 61.2787 113.24 60.0492 cv
112.563 56.7953 111.639 53.6234 110.575 50.4984 cv
111.813 50.8724 113.05 51.266 114.291 51.6942 cv
114.858 51.8895 115.219 51.0145 114.697 50.7303 cv
113.129 49.8754 111.515 49.1224 109.864 48.4642 cv
108.388 44.3968 106.683 40.409 104.921 36.4452 cv
104.547 35.5218 104.17 34.6 103.787 33.6805 cv
104.618 31.8461 105.065 29.931 104.621 27.9427 cv
104.452 27.1854 103.338 27.0638 102.972 27.7274 cv
102.297 28.952 101.598 30.1615 100.9 31.3719 cv
100.696 31.5389 100.533 31.7474 100.447 31.9828 cv
100.389 32.1444 100.32 32.2992 100.26 32.4603 cv
100.037 31.597 99.1007 30.9672 98.1574 31.5272 cv
89.6476 36.5741 77.6515 40.9418 72.2326 49.662 cv
71.6388 50.6175 72.4162 51.809 73.4797 51.8348 cv
74.2121 51.8524 74.9406 51.85 75.6672 51.8373 cv
75.8468 52.1683 76.1798 52.4261 76.6515 52.4603 cv
79.4328 52.662 82.1506 53.3109 84.924 53.5868 cv
85.0646 53.5956 li
84.1027 53.8553 83.1691 54.2601 82.2902 54.9257 cv
81.8547 55.2552 81.5568 55.6674 81.3791 56.1053 cv
79.8449 56.3876 78.4289 56.703 77.2101 57.0145 cv
76.5763 57.1766 76.256 57.7064 76.2101 58.2626 cv
75.5246 58.3065 74.841 58.3622 74.1613 58.4452 cv
73.839 58.4589 73.5158 58.475 73.1964 58.4725 cv
69.9777 58.4447 67.1779 58.159 64.4377 60.1044 cv
63.3185 60.8983 63.9494 63.058 65.4494 62.5033 cv
65.6847 62.4164 65.924 62.3461 66.1652 62.2836 cv
66.4298 62.9862 67.1213 63.515 68.1037 63.2792 cv
70.4347 62.7191 72.7511 62.535 75.0724 62.5414 cv
75.3498 62.5536 75.6252 62.5609 75.8957 62.5575 cv
76.0343 62.5555 li
78.2941 62.6117 80.5607 62.8246 82.8537 63.0526 cv
86.5978 63.4247 90.1906 64.3363 93.6769 62.701 cv
93.7697 62.6576 93.8468 62.6005 93.922 62.5404 cv
94.4982 62.6717 95.0744 62.806 95.6525 62.9515 cv
99.2795 63.8641 102.921 66.5355 106.616 66.4408 cv
106.823 66.4354 107.014 66.3749 107.19 66.288 cv
109.895 67.828 112.389 69.7357 115.266 70.9344 cv
115.382 70.9828 115.488 70.9984 115.592 71.0052 cv
117.011 72.1747 118.416 73.3612 119.844 74.5204 cv
121.851 76.1498 123.848 78.0043 126.049 79.4545 cv
127.953 82.1263 129.772 84.8495 131.504 87.6512 cv
133.796 91.3588 135.816 95.6175 138.964 98.6664 cv
139.031 98.7128 li
141.224 106.392 141.043 114.278 140.263 122.458 cv
139.674 127.03 138.48 131.464 136.94 135.857 cv
136.691 136.569 136.418 137.284 136.137 138.001 cv
135.686 137.955 135.221 138.157 135.068 138.729 cv
133.511 144.532 131.845 150.234 129.455 155.76 cv
128.457 158.065 127.09 160.243 125.77 162.429 cv
121.873 166.333 118.363 170.653 114.541 174.653 cv
108.045 180.101 101.615 185.629 95.6681 191.68 cv
94.2111 193.162 96.4884 195.443 97.9504 193.962 cv
100.992 190.878 104.375 187.932 107.792 184.958 cv
107.987 184.995 108.198 184.975 108.403 184.88 cv
112.737 182.856 116.38 178.136 119.368 174.482 cv
119.966 173.751 120.553 173.013 121.135 172.268 cv
121.755 171.564 122.357 170.847 122.941 170.119 cv
123.224 170.267 123.566 170.301 123.858 170.118 cv
127.968 167.542 130.147 162.028 131.868 157.672 cv
132.829 155.24 133.625 152.737 134.34 150.205 cv
136.964 145.931 138.724 140.453 140.204 135.796 cv
141.494 131.74 142.159 127.651 142.422 123.485 cv
142.724 122.84 142.993 122.185 143.239 121.526 cv
142.775 127.201 141.745 132.815 139.973 138.271 cv
139.621 139.354 141.299 139.798 141.668 138.739 cv
145.063 129.006 145.953 118.961 145.813 108.71 cv
cp
.145098 .121569 .156863 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (5_cloak.eps)
%%CreationDate: 11/11/2019 10:30 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`>`<+SQK36B41B:FPfJi6nrs+Qm.\!Hh`:5,/^EtS/!k"d--K9p/`O?h'k5(ga&c&dG]EWObnmQj4h^gn
%qnoJtY?l_YMr!?q:L<I<oAj-Oc'-sb\'L\]qTEdVr5mDPb;Ind8mgI<H[^>5lLg&_Dg(qk@:T)$(]VDIEg>D[IqO-(qH#>Gl-%g?
%DrgTPhDkH]^]3DEI\a@Aput$Brq>)ZhnOI8jNY#40E9YME9d,"ZJPH$g[C`t0B?a9O`LA!I^qPsrpu<qT"iZcmae`*YA\lu__(lR
%mW[Q^ja1=!j["pI@Yas+e^;a)T0)sh4mh[pn9;VT];X'Oieo%QiUql:lsc,bHb7)LGlV#sb*QWL^4,b2M^P_.r;CsN+g1^[m>LG)
%5C%=NK:dP%MS.C!E)gD[d*s_5ER]oZDcaLGZn(]P?YYblnEF[jUe)W!Y$A$LY$-PAp;^gTJ,.(O^Y_6Nk4Z4)`qAXV?U"Ae70[#B
%=#EtA%3O^&V:Z*hs5Ee@l[O0Tm#?C)Am<^brlqK^DP,*pl]#eR5G?.l]uU/^1]Hn)os_DK7/C7RrrM0WMd9Wbmsb/OMdJ^ElRepC
%fgC5_h<iBM]_W^tAJ`#OL9GkMrIH#iFk9lO&E!jLb:i_p.4TLFg]McapFcCLj8Xf=qX7`TqtA^d?aPo=5Hi&\*;JX]BA]dhT_MgC
%s5P?,lL_"I5PEOR"`N8Q^?j\8r7?_]9Ts2$qTY@Oo]bHrLK?,_.c99YH^R>VAVN?tor\19r<Ig"\+noDq^+4KrS(Co_6]K<n`*-S
%e_eo\^Nfa1r:62X?iBKMY?q5"X2g9MHMu*hJ%FJ7O5$RN?G2YErato:J,8'nO.Yfgb)*k0_s8[GjW=!]ER**uBA`[S*B05OI!rWU
%ho`A)BE.EfXqrZ4$>I2)[[ph)Gl.EhGLMQE]SG;4Ms!lB5'aj%0?+HNrTm&MbnK?>op.T-p<=[$FAEL;n"a04(S5\ks0nLPrTYPe
%qXq1]GAb7*-a2G*jjiZ]A&+[#s+/>dea'9js)\(?4+@"ggG_q.FFI#$rSY;:n`7reA9#/.q9AZ/(\F>8&#7aam3,hcGk1e.ZYs28
%q<h&)T'l<UJ,'"=]0ErSomGQn_XGO/k25]1\FLdRrUR-Froqu)BA^H@O-s4dOR@Dfo_Im@J,TAkmDG_1e,K$`hn@P=\bd+b_YFFm
%f$nKllg=^`T/Nj`oHa7o^SduWq34$`ko&5_NTXF8^VQi?5sB_g9IB3k$L4bVI/0*VU'uMLm%<,h;:3Ygr9U7^%D+9CGkU9CSXZfh
%Hj<SnpZ8$=I!<c%e'Ir4]k.%D<j[.kqYAIp^6Zm`^4//8o#oW\^3M'+jY(/$&`Z<kFE`grhEp,WhS,5p>],o$3pcRt4FZp`NuorT
%ak,YWroS5O=R@..YrGh\QPAqA^L],RI,ls0dd#j_EVG[#pTHg/9r=91p"R9jd$sCu4a-c>41g,IVF`>/A\ie&7st8t\(Q92;/_U]
%abusUIZI:q)Yt6Hj!q<>kjB&$07J0Eh=KC9g\pR5PF(09h)oW/$K&,lh_P0HP5'Y9IqqdF>5XB[W%g8hMcfZr;1o_T.<&.NSH%dB
%U[*;ujG;FHg0Zp%Q?JGOf_4^DiMX->;N!+`hjbZZ4k4&u=8>9:2:krYFlfJ?jCh!#ZK)Wk-naDuEKjt*jVGC=r1k<RaBf@CQb9+5
%3DSfea!'j3O@P/B;<17sb2JQ.LudQT*2e%C6XDXY.$'0%-c@-_O%W`p9fU77$jSfRF$^8oJ:nQrJN-6@b0(kCUjKu<Dg7f53;S7I
%HTA7BI&*s[aFT[O?>f/,;rpM3!l*Z42sqs3;3&>3fNpU-^03q!aH9bk,<C)Y/oY^=OlNegjZ(>RrGjJ[j&+pZ4OOl0#l9@tO8`LH
%NkC_uLS+Rh=5NkeT=+<$ItKt/SG;7MM3S#]jSoa2>jqFXkBc%Z18+Lg8(qSa_`l.m0#7qQaDmC'+9tXX_76Wl2io!k0Qa_D%]-)Z
%aDhpi3QQab+XSBKPT\&/8eF8d7ZO7bdQrmVjlsA97slc.<NZYG-dj=3"UV5f8D0s^jj-6lIkUhO/Ou!h<W9bSrtbqN6pp%]@lVV/
%Q@/<!O\"J'%[G%dr7U-'LKkUWb:Je_g$I,nq/dsU2^Y6n,BDL.BDKJ1n$o,+q8h!,qrQlSOfp=![s'23QlqRGA@PBC&ID7]D23'E
%EK[jGUO6+#qfk_+$8Q%ibckS<anGu7l6<o\a>_OG60<$L^-%9T3gnN$`o:/kkXNQBaS6Lt#fe9?.3fjDjJthgiVIeI,;S7I@Z!_(
%[E-ihAC&@3N7(]p#.GT_LSK[?3sOrfI$=m*:H`#+pW);kmO6O5S.^m1.\_Bp:P[Cr%fNr#.HEnu?neNY7!./-IQEKJVf<\:3XZ/u
%6Gq-#&4)\X#Z[$`P:rc:60PI?p`P5[MBhQ&:shQF"H%&JS3W#T58%tUca@l7SjIn%]"Gk\VY]qT%Zs?u103lER0iZA>F-@A1>T1p
%j>H[l'.rQ^N&^Jc-Xt$s3'$`'WgL4B9PJZ'-@E$m:'VY&Fu;>X>*R#a/jQnhEB;kpDP2Dg!(>;X+@J5Q%0Zr&4oqi4K7ODjkk?<J
%FFf_kr?s1O%$,(/%M&b7\d9H1_h=@[LC+-kgc0%LdDf\;ADZ1I@rM.qIJV#IPlX/U;lQMoT]#?lGT8=Pbm8`TAO(nbienn@>:pMQ
%_VEMgkVu]n%\0=baq>a)mHQ[)0sNIL';mmgI"@<O$G\poW>H+E&LYX:</4!UPR,hB=\#Dmn6fL+W,SDS)V*3+$fI04l,4*5adZip
%!^rg]jWT+Z!bWD;;E2j.TH"G5Ugg/GMG2=DB_",.dLV2)A[4tj/=.]OI<7ji%O)S<E_B*Y/DV45HG%>H+u49R@6'..?-?`YI!V*]
%O!9]gL__U$=CV!4\<O[/*AU$FbDP>SEg!>/6+Q,u;KOoR1LuV$J.ZfU1B`WWCkc?nO>iH]_W#PeSPcq2,jF@)"f!^d#8nC1&m-,/
%(C+4a(+on`/dBp4#"k2**!V:qEH3hPjP%h@9X?"#1cedG@?MU!@eV]NWgP,p#)Q926qe%,,^V=;@#Q?e73%9u2*]U_W&-T!R2jLG
%NMB0k(`Eja+@g'Spo>RJlZV3hRt8KneHjrQ)fXD'^e:R)8)?drmZ4kLEmgQ=Vg5%d1OUcV!C_V$'[[dB9aW=V8`LG6[ebT&!J7.[
%\Ea<Gf_+^t!;saXQVUrCI^Aq&RaA*S""q%*m8J35\g?@T5"MEUR`t\^k[>hs659A%/)_US)0S=\!G`lqa'gK/&^.kDkXk+E-c2?@
%N('_%:`jC-GUd!tg:aR*W_OcRBVXr[FXbHGC,/[I(95;9e`!J\^G8shnuI[e?[1a&[kG;6<*`RHe5TCea._L'C71N3[d^;k;cTa<
%:=Ymb]JA!nWqcG:?4X;X<"X:b\/m"ZDYeq'HTKsD6Nk3^3Pr`[hK,L[5rEuGOmbHUrJ01u^>IHO462D45J')>O?5Yi]S@T$ms*_-
%PAfJLVZ_;d?)sJ`Y:S\b#-l<MZg;7SJo:,N641-D6'ent=l=l_FdX.;1l;S7dBlT?=&N`(dF9uD%]3O.6+<a8GG;fKNK^;^.^]a\
%2-I#mWTIleFmZN(Ac#o!WBmEDfJ(;l6]A0ukbu1_@`R">0N5%lA&4,/<D1R`=[1VNS6_V8L>stJj/gG8dA@.C[q3&`DUNKqrmuIL
%[iFr)89YPY7q+aX*Tb+->n=JUIF"\%rK'+Tj,E^q*dl!5s2Z3Fn]u]D42+@_9_tQBR)?N>VVrk;AP[^uetD5j,Xum@.4D5SX;:=]
%SXA/gG"\[^!lr^9=c@G:-[d0kTeg>c]7K]lPcdqsX`D[?nR-7kktJ.2TiDe9!1)/DL0:jQ\s#'pMeX'9J6(T:eM>&8'9,mJ%U^7L
%;:dUJFj.Cnfk;A5UGc:gX*;iGd"ULRo,&hL0WfHs0ki,Jj'D'Fp>^Ump27#,6-&.Mr_));?Nkq%G%_F0n;-_H1:<P8ZYOObJFh[f
%A?l06gS/Dk`d#<c/1/nd?8NX<VFhkQ(j;*%cRc,oKAG$/-h5ERfWs^%9Tm;hmfN/&/1=0l"i>.j56\rN$]Pl\"G"%##]@a)7F+9C
%'mabW5SgaH+Y7<7m^3cJ2aeR@!NP9[Mb%ti0pkpi<!t-UW-Y:UN'>;ZR!&XFT%N+LdG#;%JBtWL<jUsGHU(g8jkRG<I`)l=cgekl
%\pUTAQ&CE1[-"&PI)mITI*d-AJ0/mS*?T[sJ#5;NNH0)]F1g2L@T[Nr9t52@S't5h^<'nV1'QM(k'.RP!@4+pn`U:5*Y3ULTU>eY
%,PVT/ZdH8-"?cd2!q6?J$*[@%:'E\>N0Pj5W=Ys.S/ZFrTM;[>3k4tsBQF56$#RuGVSSa_+*$Qo`7[FOKfKn3<2`a3:5(e((58jn
%4TTnE/2h6"<cf#U:hNYY*g]#nCj&T6oNKe"`Ft1KC&(RpCLb^5O$d_HL/_1?:9e$=VgA!7eR=cHC:Zu:a$J2BnY6]XbnfVNO#S.g
%F.E9?ooM7q)"I<=2tn;i[iS%B4cU%:%M(S\NXn2>*]WK&+a8>'\c6sCG]WIZUO:W@T/Fc(NUj(:pfXA>egR.Jb%H_)l0`4'AY^MG
%s)\-g+9,!r-kr)D(%HX=i#4&jalS87V]p2M/T*iim=i;[86,FApHs<L-!2cB?!n9#2BHkhgs=44b/qs^`2i7%</!u[ldli]8+Lrg
%Q`K%Kfj&Ut]7/!OrEqI0Hp3+n-_J1kP)En2faf4&Y<&FeUi3B?T967U.7&"H(/`;DH*QJI/Q6QXq=EbsO([kka)S#/4Qs9PrCeV4
%M2ai$AS%SIL#O4(ZGnK8XXPQ?s)Lsb5K3RX@AS4E1\"eWZLTYN\WH5W(Z-EIIi3MbB7CL*&%G!_B%2=AHhM[]f^JdG^%Vg[Ll7TI
%LpWdKOA3Sd-1#th+=i='=2MTUM`ZZuOt>f4()PH8&_nsI<ZDqf8,+PHel>P5O=p,G(!s&k?d6Ef6m*9hX(+>Y`<'%N"K7=d9@4%:
%"E-)I>D/UcdVd6!ZRM2H@sP/A0c12?(<]q4SCJ9<==1UmZ:Z$<Wg]]__!0+b:=]9lD/O*p][WO@HBRN>@W&4.VtLPL?l>uc;4Y$m
%Rpj0ke*>9$NZ65GIJi<9aC08D.G,6QO[c(Mk-AlcHKSs^8'Q1INt!^hnMji7lppJgl0%3Cj$(Y&4iAd/Dt=K'1fO/8O?;<5qmb\X
%*T-V69or#cjp3kFdl0h;dGVQiQnf=q1th?=eEt5^O6W@W&<j%_%f/N4V2*MMSXgu-9fF:/0UkPc;^\,j<mj+sdSk:UGC<r/F\gOZ
%,=,/tW\m5lZcjOIIi>m*Y2R3[F#6ZRC?XHik1:A^l="]t!oaJAC"U%Q\IlW#(17J#:s]cX-'o#B#-!"qOcO[iqI4He^W/&VVd3)D
%pkKn9&oH:mnU"#[ccY_1:GlMu3Vn'OENG:K1RdsNL\YR`.Q?*lB[0b5\tMXUGl6bB/faE<,JE-YEl\+9UKfeDq&sspe+T*&^&*mQ
%52`O:3W<OGYntV8T,M%IhSMq0q*/]R--qaZ[G4Tbr-OJ(an#>\m!e*jMftJoq]D!U^Of*e.Qonr"^Mq<-*MUn,LcZ*YdD8>ReL`n
%P1Xh[=Qpf)lB"mbOO=n>\cX78hHlnO/Wb&\6n3AM6Uqf',^6m/)6I;oIGiHi!&Pc#K,t6Hgll1-g@gUiT!c*)i1jO<kRN'oOY7es
%a*W:,TuVZD4.ZK+#?cfI9ibP@Z\TWLTXLh/SO_n5dit[\Od/J96ddG0e0&H/d^A>1`,l<f53fOG<dDW(f!Xf,4_fuu5Isd9F>L;P
%oqq/U=!%%gUTU4'!*9H=JgcH+cW[,ZAZDhIlm8[p"fdie4'Fh=cHB0/5I)2:"j9]M<$/37H>iUuc1IJ@<u31jWM\-2lY'[P@)960
%:u/,M1EEDaGGVmuYi_X\<=<RX+&+Z@L76@hVkZpU5!.3GET]j[(bQg-hS[%eTZ2HE6-]DSj7/n"SS-"-h1seU!GB*lnK7Re)bn5u
%@*pk\(VXLqCR%J[WHfW;JW$U>[6@>Ld:5C;)o5rre4IF]A<MfTO/WnoTs-(X.7BFc:l#eXeWJChl7?2HMR(WY/ZbemXJ\`MKu?(b
%lV3^h/>L?'TN;&KHL==0GNeOreL7Ecd(K`8)tPdpnr#D"XNAs:%*rH1%_sg?!X;Le5LtKIH`1%eLH1'+"c6sXXiIlcB:G'n.8-CP
%G[A=1W<hd0ajf.p.W5JlDi]8s%lns0Q_kh<a)QFW+a8=s3H%'@kD.j_:><f0TC;P=a8:P<(jh@P\1Xj"(#'pW.k"\<p'!._O(.u"
%"4t]D$dj\>]u(QVMWm7[,qXW,&<sr-UfH-jV7@f:(TR]M;eaf2TqG,'F&l$j(KH"$68\$WWS!M:C^Ve?1"WkLU.s_aHWl6"Gias,
%RDk^PY#/*UH<J5b4'J+$?J/b[Ik>,l^Vq4a--1;KZCN/)OWGFF9#E+T[p-%@-BNe2gSn]6`03k5,.#!tHQS(P1pa]#n9.-m'.I=l
%BiTfV`>co,/EZ7a4X='I<5Kg2YZ35PGkXt7Zm,s>i56?c31UlqnA_Znd0\[9(]js4@c;Z'P5g('V_*T:5='VWT&(HO,o:R3qbt6_
%(Ca//1igVmA,P\lGE-_,fGNdla%IcU>pK=(`jluE_b=!^@F<!0+"&k`NeW/Rbol=!feCS0=H,))ARq+;h_9]F?Hoe/,R[(`iJ&MQ
%Asc8;1Vp5LkuE]?,+4jqk#F@>:;_TCB3J3NB>FE]'MkoXn$F/!U`N\ae`f3M#hC_8B,)'f!U_#7b>Zc*V3STZ-tOTrl9Qb,1bpG/
%c!mCs[&i5sCgf=MN]Bk10aPB[j790='6@RVlc/-sPStn+NQFPHRdrONf>R.>?NYnm=R0-9_4$lq&XLG:<og_5DE6H8r$FlLYuHdl
%dfnqV>?\_qFC@/?kEE7m`GrZ"3.Kiq5(7Xf-[tIO`32\LZU[=Y"OcNjVU4V_?kV-\]!6eJELfiK*.:0(BgUo9TfPSd2PE#m9q+9`
%R;2';9#H8fP6\Gj/a"0JpK:NM7>p&9O/.+GQ[FkE\!RKK3XOMK,)j#YQDBaYFeltJZDM0nHBBW)H5KqV*Kt>J`L(C1S;)aED$772
%oRZ>S>'=5L_lO`nYV%#a<eOf;*l]q-A[SDrNm$6gfOEY\gE(8BlB',c+,@<F%q_*:a+!rB6gm"_Nf*YcWq*WX8!QJgF%YhN0orCB
%[7mLSF52r42"cSdYU?7kU)^r[O(Q@1&h83*fq%2tf4MRlm/jp2U0Gl[#p`0.#qVP<@(&]T9qjH@j[a\cNB\g)O[^0K%h[#6AKbM>
%5ZVDih%We>Q47XL!.tPR.)"SZ6YolKg530:h0h3-K<3/grqUr^J(o2F)gOE9apmKK1`##@84BGp!m$<[:l8%<<"^&V6db:@:^_BN
%Os[M&-8h1&QjEd\'ndle"9[7dX##JkdNblqFIEfHT?%4;rjeC0fu:8E%Wp:4",h/YDiTT/VE(Iok_6QJIliH\a>YK\c-/4mQZp^c
%p:2jaH1T]d#6B]%U5)cE])/l(XOfC7Iq#MNrP,XAXQrBDL^bt`iN!JqmlSV-Gk^t=2NU5RZMO@nMkT^R'FORSk/Vqf6gm![MH%R+
%,-)`Xkbd@NC2I[@[V(8-0NWn=rC=c?PjueTCg*VH1tE4YQ_Qa%)K+sY;TG#Kc:Q?qdua6^,oc+-lr]/\qTnFRVK([:P^^]L>bu_R
%:hJHs`J4uQ1$?<A#8]:,Qqa7:4@ljP?LNW@H>%'l\a(Q>42J'n/u2-qH/s"d]3b>&gWbb&;JVBOmGZ(f9$h9i]^'f8k0`#F*\?@s
%%bu%5$F/25HOF35e(_H#cYJ-eUs:gupAu:6QFfpdGb'gD:MI@lMon$L<kaqVZ,@V_:-9HKY-%>gH,GK::umpmG)Hd!e'H/bSJ0B<
%48iu_dbi=VB_NbAm@8hFX9V?c)`M<7CW`i,9QT4^YpZlK-2qZE01')_.b^C`2CF#(m]O:\_2)miK]&>k&<)65_*);i^=;(_Q5[D1
%&"XDcEEH-.gX:]B-3i@s&:>iSptetXUY("AE?Qe+,7iXNbb'm<I@)#BD/eu,.!RZb3&;N1%J['A]aFkRHbsZA39Mt9F2W+uR;IMC
%Q#+W_G0WggjVuo'fQ5W=F2k$7r6$*>0Yi(+KaZJ)_>1>j;FG:?2k\!`j)#K\D`<`cd)4UemPWqj2;u]5++kBq!X/(&LLIK\nA$'j
%6A8UZFBDDkTauJ^K^-<Id;AO2GAu,1&%+]V=$67ide);R%FaXmkhas&au1R</ogEnWJg5.(\]l$PCU2Ep(g:nRZ]<_WL$Q;A\T/t
%`,5iMhEtBC&@1RsJOJDK9'$0DTGVba4!LFXX,+/[H[*"gLQ)YEI#/.g.FE;Y\QJCpiV0P`0/5L-CU.Ep/T_t:5%)296>']/]ghA$
%VX&l;s&]ujqhlT,1nR4(X_'nV\b>/Dh3aD%e6I8Ck;oVAA+X#gDFpV@ER;:RJSd6pBC'?gS.pk]);(n;kQR#m6OK\j)`Nt=AoFoa
%mkp4ch#0(tH[bGZ^3`VjR;sj#"D%'L)$!3ncLeO_og&BJ0fq7@8lMYY>Foh!c2?]qj1^tTFZ@!_\o[oCY;gkqs-=&"lD5fPdj5]h
%r!N6m?D:NhnI`T':^@#cP>\tR"$Yj"3X:)7`NskN3DmZg98kouAEI&\BhY<K1k2c>qP.s"Yqn.?:AP6l0oseBZlHMpT$'$G=5O_r
%3_iPE:3TspE3#Cmh4.`0aSQCbDB>6,3"3T?oZb=?iQV5cVI%S"m^^<gAfMOA$:^_pAg6-S6d?GpQmjt?k&Ibej3o>YT\0fo8bXH9
%TU?9[DR*6PaEguqZ++7G7>:p</EkI^Cmj@paQim\OspHk<2MOj+`W^@7J+qmF:pJfH:s:9gMl-O5^>#,IsU3_,#+lq_R)TC.Ak.+
%1MPiC@E;[hZ7--Kp9'j.YNf[A]`:I?r:-OZp9Bp0\7))5HWdJI)SHQSQV_'U8[bg&FQ/qe]reg:/@NIHC$]k_crjr=+FLC;gUbka
%)B.Tci!-Ln>ejC#(N>WkW\S'6/##?mjmf++V[P+&NkGU"],hg3bp\!8Q\qD*-:O`&RQ#L+CDOlILZ0k;ikFacCpl*>@*[]OH]Rfb
%,HlmX0lN(mmnqt_9Fe#VEU/eET*r8\b;!!ParM!/]V>@-P&iXb?I"k%Gjl3h?HWWA3%K*)_7"Y5BcIcp47%mS^fl%=[>`-$4.`9*
%Cm,bI.gq)sRoD`e[S)CjG2)b_bWp(dfYn+!XFOC@C=qT4-RX9sBXl/09%2OIQ$\Q#X.EU>_=spC.I+&eifj1IQFh!PK"Y5dQ_i4_
%Yo<3"pjC0Ek&FA1-h%s>C$Ift4GMu=\KP/I30/:)?484uB#!@Nma=7jS7j3[;0CE4DSL3<7hSZ%\PqI9h7<cchSEK+)nM%/oAOo@
%pCNl2.arXKBYE3ii*[tm%VE8.O]h8Z#OI'qs&a%i?SqI3Cq\O!1(r\DTj5UKGh@77X1u$8:YnbV;CK_Af?fb-C)]C>DETk8l`N,5
%;\4Iiap\?m'T5mh[hC7c/L^b1_3pXiH*LP>X(fCrr9.T<T^NJ9^*uLKNB_6&"l&B<#OCn20Q=`jh&<c8g$DX]Bu:pE37eT[qXt0-
%EkZIM1N.fm2mc^HX6Ej6=9Ujin/b-QOtNAK/NC*:3mDi7Nid[;bK4:*QBF(Mo[fnSgA9?.o'4u0;TD,_kG@1$bcpM/j^nuD*QNVO
%D@.T4@AGcB1l%5^MC+O".nPMA-b@Fp=j<R]kIKWc)$0#tn(I!%(pCffj4q9Z_03;uBcACNX(to(.U05YD'`riMH25+Fd!BmI\TQe
%.UA6sFdXp=oZgC_=@9d2XWMkNem%W$=YR7#k4EX#mQ"<,p(6-"@^1q'TZOI'-6!sGRFri+7O\Yn]eNa@NG7**_/a%OlWC68:cA=;
%Zi%$6r65H3Cp^A*E+o+t4h(^u0tZUVT]_ULI0A]*?r%]t?dH=a*kK`l^NbD=Vi[V4cB\@sIbG"L:T\]MS*AZd<ha>nK*<XsD`dr(
%q2+Or/H_`4eFnk(e0eKYgI9r<](J^3i2Y8[S^fBQ/Hkotn[?D@[3U8)2gKISo-NLe!n3C:D`(l@Iu?,YmL3%*8ZX[?SWm'1X&1/n
%bD@,\P(<dWFlH"*\Lo_A!B27aJ;n$MX43[dF-X\bhE"<M.K%$?a/6jT.m1"*F_A#&:.KA,+i>m>GVA,,:]:L/?I!n(1*usqGJ0Ls
%?Yle(O50DKk/@o!p^),WSG0Z1%K=be??0V<KH6T#gsRd^%tkf=!JYD*2I6CfPDP?cKei_!W<o1f)H7JGkIjS.hEr>,%GYCcPK<p&
%6"Ju=8d*VQhH(mbR7u6=c=8hpi]N7m8Bt^*O!`eXF[YEg4cehaWgd-TO6[Wcd@tLsh0FD2?#Jg;T#Z'sAK,9e:mOuWFr9!IIC([!
%inP?9,q"AI*IZH#EF24b*rC6Tk?W&inQ11//d&Eog_Wq]-"3)C7n?Ng6"JuZOb['`<ghU'K#UhRTn=OV_!P^V'"RaP>?jjVAR+<r
%I,@ToNk&`#lBajD&<^IHGQ_MQaEtb4J%t;5g8Vhl=d7qe[pFR>*SC7llS]F.'dLuYO!(M-5Xd6Ln?4q!>+o_ND-<GXF7)D>mOoE:
%>GE`EDJ$>Jl.Q.%pZ%f?;omLM]q#3.YCdN>:pCpRLHAr#W$^8i2fn\1@58X3;m@8:hmN-R^=i@+2\:E#q.>)g>oNT9(!@H.k2b4e
%h2\"%qL30SH69#7`$_mlC`OgSgdbLIB,9D$DX6&Zn$g$iqMlB0`CLZTYjS\\krV1@X'M4GN=1+YgNT.EDYnm\1U`E,^Z4?E<fcFF
%8%7qI^ZkGt?*C]KX6G";,/_3jZl3]p`>s(>&10f%^N?DP[&<,QMh0uN\ICEhWC=kf>g6RNji?YlE`&*epX!G6HoJs-?'B+=3dNhY
%@"/(>VVNge=[Ar;j>=bK>:NAZ20C%:Xu*snQLa,sg05b8@OS=_ZlVqG_2<I(ftH4HS'V;E&Pj&sZ0p+)JWBIiNr'-'4EVcU!ZkD=
%c?TrfGrP)8+6tf'ECCT<?>q^.kB7BG9)rO16-f3)4C@2FI366r(N5IX#Z,\GIKm1:^?.kbMRWX`EaO`GRG!lV?-7)X1Yg;sg`JbL
%MNqdMnc??TT)k'g6gm(RgT*_Z1YubXH`i6ulf(]D2L?%ihFcHPB78+bl]&PO:t#W3]W`pa#Kk!H<3Sr0Ca+D97')KX<nU`0XR?Cr
%diF:466-jm*k!p:>pA,W'CXd:pOZY+9\>rIpBEgIoAIXr:`D+"iCpI<ke!OL9+oZsS';UKI:n%FgXl;MhU)9D!Qt:gg`>Ua>GGV:
%.@7/Yb8lXV)Xh/!mc)NiQQXHrLu3"Xglg^DeG+e"=*@bph:XWhE"]dNT"'\-FtddW#!$\LdR4H,)5qB,GP$V(pM%F-aGfh]'g:`$
%0UlPU.*n87#Z-9%!9IjDnf7_lB:8NG';&jqZV8#+-N8,gb("^2r:2I?`GMp"qra'EM;P(X_ZsoS%)-C!@N=Hf+*q?KGs$-SB;]-0
%p_u]]Lc_P4YV?H#YW(&26#@\r&pMgt53R#[PC&op0BDAGaQ4N7jL^h*+*)XVE_LXFm`BTS2l`l(,pr79??AlQn<^a5;P2lbmlBA+
%kF\?Z\c'.rrqVbUJ&Y1:r;/8Sp)*u0N.HDs^cl79T/!Rr(t`I0ln\k>fsgp=GC5^5cSG#n-9bpIT*b[aQEPf8lK&hcT=oXDm,b]@
%s7u#]cbFc'kdTI>G<p`Q`KN6!DI:-m07Nr=[nm"feLNWKrNA<Gdo@!pB.'6t(%W&^0t"&/o!/YV?0)?`<4qb/ro]>l_1-s]Ioq!U
%mZ2kJJ,b#hp\uhIJ!"X$rFYebs(g;9o9`VXSm-g=BD"@T?D.,>"*_N:1ljTmp#[Uq1iI=''*%_#f<='OT07Vom+'9,YQ)32Kl0]W
%p\S$qT'q,Sr@@3,Y>=%<Hh6OqfD?pks"*"$ocKbg^]"$'[nkoZD"i.`ikOIP`lJ+G+7q0UrUSk=*Q_6$&<(17fjQOU+3!HM,0GMc
%;84G:rUGa$A(utte>og<]Q56$V-L(o;CGV>KU$-L5!JFG_He`AQ$'fHM&]-?]5jV0.8C<Kh,D"-OcE&!bqY#&b;>JG01f@.9!SD>
%U"(Ym2XObn=/CVX45a!n]1$Th\!MA:PFPaXA1Dq?M-'6c?<Zo"%Co&'\.Tn%l_U<dY'cDADt-GAK\qW@\;H4B\qR15QL4*14Y9qC
%9X!T^Jp8Y)1t3([%3.U_oA@VmXmITg)#n<b.TPYT[9sJ&hRnaFgXRk4&TLs`!nY`#ili&4FoEkI:>46CPs+st8sdMYd/X\`qQO7:
%d5>V,2<WhM'u+p*'fCZnjJ*Oe[G9WL=JS5h4"bm]05o4@PNOduApM^]e)ZMLF[W)OdVa-^IAPcdV/)5PHgqd14F+-,7ZL<b)[GU-
%&Ki)M1"o8B+dD?9pW;)i0igC<!et>=nrC#5BLfBH*TEA1&&TD,l?]:bAV@6&nKRae7?k$`G^2Gb]cGJCBgK)C?fW*gArjJO/J49&
%i[A'JXk&g%a//;u1jIJ]]i7I9JWR0+`W.T%Z.m=cA&$NMaN68)F-1\%L!m+lmlJ1e&,^W$!>cNm]3Qeddas%5;IiAY"&t0*Fn1+7
%lW$-S=H=fQ)a(FJ3l@9GZA_-SeP<1cR4/'Iom/B1,I5)*o!]:Il:QH4$u,Iq:0F3e+MqD,gG34!DTUia1+2.@(,Wrf)It/_?QNc,
%1YNc>>DP&r4<EXgI)EiU8%mr2CD*VRX(5J)j8:A7qGlZGL="()[E=!A"A<uPp:FTVI3W#Me%0ge5l=huQd!4AP)e8u2o*Q?;QbJ:
%#QR,<8;[a>WE:UGUZ>@dW"eW/Ba"tkc2L>Z%h'YRPUfrNpk7"W@VKWj%G@hDF1DWeRE/do;Ai:c5ctmM6-`'*ZdYJ$!CYXu&t(eT
%8nZ;I3U-Jf@Y%;\e54R;[LE"!IMI:]>KKLcYB78b/sY$@*$D0E5V*G.Lm$CViho00#&.5;I]OA<ktDt2;4qCiLpj.s/u#6u]o#@?
%Qs8(;*j;La.a9t7D2q>>NttkVWiFl$BT)'W4f<RNNaD"?9eS.,#/k5l=*.JSMZZD:8tu5Vf)VF3@m]5!?V97CM43q^(I=A6#''gS
%<)M?FA`.g^'BM<oglrI,`/F9"4=mo,fcmInit>:rr5pXGXV@cF@Du4<TK&m8Mjo0`>UmntL7&sUoLn9QGteme.j,cm]LE0b@s?',
%j'JH=^k.9+.P"rB17OTF6HVrZ$lPco:8V60+tt@514XE=:5iB'*oKFh_4XF7VBa(lVdp'_JnVUlEbMTe4IP+Oh*iCtn5*gj^=blY
%7%m&`Y=l9NO4_qPN%>;>G77Ru.UF@+'VjuS!3M#HBCn*o>m@nF>T3.ldK@qP@Qhmj1=e`/or%adO`J!BO_9p$7u1S)1T+V#'!BIP
%ciTIb9$j`*+]d&!E8_<,%O)R&WE=8hU0:]'7%!kq_(nF[.%$3Y!kX9=/tWY7%&;.4#udjuV)^O+-5e"$H]Ka6S0AF?ng2DaXQMu\
%0M5ZYI6a+.\.^&!8K)-m>""4,Ng%R;G-th?3I=>F">:540+F'hV^sN2]I8H0%_W8I#n#/!5-"2EBW29GH-n;ti4J&%jB52\Ye#"1
%"?e;GN"b=71M2i,ZTKd3$WLNbY*4Vu[eOFu_B`TZYV.)e(\,stkY-8(k0:h(JeDDZYf*I9Z+,\*oJLo@hl81PXUph1aapn/Q#=,6
%XbemXgH4kH?/q)#/R`@RCS)MgdZTK8JLRLQf`ja)[8U*BnIq`$155fc'AnLOVmr]GQt8fVL*i!@_!$U,2I7gn7XJEYLO1<aaP,UU
%L2gqhgde:.[)@bQOV`n>iB'2=+O;d.<M_3SC!MW4CgJ+B*6(6o>q;Np=rm<,d)?[)LgPVpL.[2_JS(IgYT/)B(7=&7H=C%L9)3D7
%Ol\^>SSKG(ZA@5"Qu940Api0jrPVT&2p0cGf5MER'Y\tp,3+iLVqm\36&Sf+>X(oJn=7;g,0dEX'O'<e]QSRT%(XS&[cEnH<+u!R
%PsNT.4ZF;<17W+RQ)4"4I*>kejO##k(_?[Mn8Ush?YG8G2d3Cn6#RsQ^/VF)A][Cm\oO`4]S,K'jZ$_:Bd2#@m#+aXSWE<,JSLp_
%+r4&'AN$p$RYj*No&\LhK2E(l/6f*Y<@0Y".p/R(:198PBb?>&3Ch"5WEiTC.?`dPWi/0aUSVEOKtQ^:_I&Hr8.4hXn^+;:.sbJP
%/")/J`+mS.Vrlo=]oNPqlVQR0`8DqA=_=Yq;Sr&=:J(dFagku'P%:#UcfMg0)r2P![)SE#o'.NdhV+XNUDRBFj@`]FV6\&C>?\o'
%]?;F/iYQGa:1ddbfn<Rd!_^tjpif:j+%5SOA[&RUiFAfpk3t4jRsdA\!Y@1GVk78.l^'B]5]o1*:%:lZBTku>Qqh<C0U!__LFPWp
%\okuIb\"6l7CoHeYp;hB\pB.,)0ueMZD;:a_P36lbDKj_oF;KRU,M.$ZY>uOn)SbgaG$&f\Q!DP%Z=DABC/rjo8Im,oR48p_7u`H
%;h*)t@JC4>q:%$MnsMd,N=<iIDC4j0g,H6ams=rFn=T0e07Nb=m+a(ON^):srKhG/5C<4nm\fs\p!]g']_MH+2c"D`3H25O=ofda
%1m"O)A6hk90L1H%)am"]=;'d]1JBL:@QZu&b.&]uF_Pa2c4`uG*&eUl"N:Qi^H`QG+:HEp%&g'EQ"/E\dcdWNiSdW3<NL8G2e6BR
%M;P7)`Eisp%PmC,Vd3G^#$/LUMZqG+WJ2-=jL/aFp,bKeQi<>$pnW,gJ4a(GF&h'sV^uMeO="mW]2l&G(lj88W7"&u=M`m>dF\A^
%$/o88^d:=?=6GUHVUEMm@HC&,r-^;bjfUX>'QFF8'SgAK,R]s-#e1Vf?/u'!+-afBCEg[3E5Z*=GX`Ui!JV=di1r[GHZ7R`g(b)3
%[YO:h\d$t6-?`W03,`aLh:eN;WD'M2QQ,,0"Hr2qHkkm(ZZ22BL0-lMFPpdGXE/V&QP.PQ:X')/@0)0D=o^nai?,?C?Bc9=%6SKR
%1T8(r,_26@WIQ(Hq6[e<H2;he^:3XMj:g`G[7/>FrRB\#-bito,?lt./a9m10tUuSZ8eVZ'[b#qJl9ON@qMq-llD]Iero;K0lZXg
%=F6aC0V>E[=G:1/3X,0`[Y=G30UX#pl<#0&hIH>2+dn\W`>NGF>[Sf'ZLi*$>97N<W&0A(._Q>D\cIJ;Ysrp`ksH8L:2(;[Oc`p$
%(ss:RblN_+>!+hG/ReiO[K(#-6Rnk[U"R7`k:nB(O/"8q#n2,n&RS/]IPCm8A`9Jd59Ik/_5hiZs&!,ra(1W\%CV@AH'IEG=BfQU
%k5\p)j#O)E<omln9mU@3_<_ik3>N:`#hAWXh'/Mr6]4W9H"qn?/,&"aIFSXkf:naG^(remQ;.U^lnL;-ObYaPT`d\`FYL^bpta@L
%]q=d7*\NPA+^XM@=YJn00TseGBV?SXQR8XO4@Ab@N"[eG!1O0EQkIfUIWp=?.8:!_9_/U2Cl[L)@jE';PDM)Zl2W`!kN$ghAHe_I
%d;6$*li_LDW-GHaf'?d?L`OW=nXRtHNCnd37#bbt-^'+J-A1"=/Qe"<OEh?G7CZJia2:W6<A0,=do&JV59OSqM[K%nHIe%B-H\Sc
%[ELrS8-H<N#.'%<Wd'_V>"5)qZ2:o-J^<Y*]='&505e-lO>HF_1T`'&bVK*M+'DhR-Y#bMFEc,F!;Fl+9TLb8H9b[!Z;e9.O:6sY
%_c"\lN_>Efa8csBR:6M\di]!(A[3r^;,F]'IaNb]&tNGX*rJT*q8V^J!HBM_+KR>6jC>$mU*qO<<G8)b-8QFoCnncZ-Ika.9nu.$
%&>rb[1Vd%9O7EFY`F[Of4V?nsgPQa%*stA#<&(;>"9,2Mife[jfaZLg/d3)P@B*`9psa6Q&MT7(MaePuh<tu#ada_UOm;<pW7"^#
%Wk\qAC(-XuipAe08$oYCgIZH3`WSG[I2:1-&1O>D=jakP;N!SUEcUHJB7c:uUZi(#aTs9a[tn`q=$j\_?HE4k_-hql5Z.(VCl>"4
%i=Q6on1j@=e80&i]QkPpk69b$(>p:Mj$_G?^V'\n18EB5[gTm/Knm8hT.TmEIWXR!,N`*:MoUUI7@[>HC8*!8pI&s#CWYXsFG=0U
%,;,.skk/PBM`B-A^I<#T30iSb97NWY(G=bKk,Y0o$$JI??!/&=2eDe>L_pRG3gB^2'?07].<VBelSs9BKP=)WV:*@@E>>Yf=C^G:
%h6Q[$JeahbO$XcfmFRXl.mn+WS,(bV*6f)c62b]7Qco_\c"IVVm"1UFErD\V3s:^W?Fn.clX(c5,089=:PBV6>Fpj-_=Z/fKXB*o
%N!WP'%7<'1!%JW5`p6XK$#-)JF9UMRQ3J3D`D*ULKjbe?Cf9o//1.QVC,3@C+%0,#kQj%gSKj52HTg9b]8R/Cq$mNM@A:PtjhdSP
%1]Wi$7<PJ5$J,k\/5Uh@]Eo]3XZ!9<0Jp^QQM5p/,gR'6gnc*.=[bRad7c/uNAF9@2B"]>9`ulljml_)@;+2Y'3#RN<6PMc[m1L*
%&W7'U*)^&XKg'?SHNj<9/s.6a6q&XDKgOE\V/rV!hHSK>@gbX1^c3f)G[(T#,]ljIEBV8s49Gud0UN`^51r8f-n=,jgukN9!t(EI
%:+QVSU1$>Z:IH$95bSJdf]7,i9U*lqJBJMO:QA6SZrkIUdpu8i;PRPZo]8N;\7c.De/27#Z.(n2Q_Nb4?\dS<'h4l(G0[pLfErMT
%.qSfi!CKmI!aKF^'Nfa5f)QbRDiqB39Q*f):q0WI+sJ]rCXF7ocaXJ=8#D<fYq%$=*'ms@0UI&j:?L.]!%'`\M8`jj0#I`N9$tQs
%lNH]Hm52Tu'oH=&/.NJTSO@Zr=t7B,N0$QA'F*:l-Pfi#fb`.[M"7Uk\f_O"FV#$j0qnaM6L`65=IS$K<<[-4K+T],$.cC=^;5AC
%=qlX3M.f5d5N9j?"JnDS6*X7PTLcN`[>\$CU`jHHjH)tV#-XPN(q2W)6)>bBLTsHR;WZ.lf&CGW0,ZA`U:p1M`823'Mh,`,'Cf,E
%44<']qPGr])"3Sg(9,AC=)(D5JsGaWeIME/lG7u_KM9l3_c;ZmF$</g"Q2;uS4$/R+Oss&Jlj^aJLtW>6,s,D:PahBX?6(2DqHLm
%-qdQ2d?UehO[:*GCG[LM-eiqL].ZI26XrHT^h_O-)<1sX?Cq<"n%q.K!j&Q<5D00S7g%j,$SgaMFRr[p\j/t4hO]O$6@9M(H*iB2
%&5TF1QeDki4g'Gq"<GQ!?u*'NMGt;%'O_E=Jj&%qc[\).,0""ChkSW-*\DVFX9%'K0h@GMIX_Q+0TF)!h"fMshlUgLOZq]@>8SeA
%+uku^8^!k*Lc(oLgh+cR'Jl1(/EElG;bSV`AE/b?K*\N"k_j?46tgGq7LnPee@F_u_#=r!;i=[M,afM*1pOh6U(=P%EtO0(jQO3F
%=J.DR#r@.IM<:$JT+T(AW79E'$T,_pWXKb$O94IM6qfLQ+f;$$#3P3M:+S]dR)Fe0<dqtp`"98?'HoeX`!+OGr%m=c%Il@oC34TV
%k'N&'U*T'!B6ja!5'YIkX+M7k6/N>;-abX>GMlb`)'D^"_B=J:*#pc2O:4_8S/0gjnO_/)$f"C"%o'VMAhl0Z+QNQh\MPuI0AjTG
%e#icg>BEH"$)Qg!c4FiB;hm>n`]./@fTZmZYCU[6oVuS2l"A$#@'RS0(k)bW3r4i_bY6Q<m>u$DaEl)7n&Ok6dC"$':a.ld!-2f*
%+U!OeCP:1[:CMlaVRO?:/D`-W1*UuUO;kS]0$RMb&]AH=J!&-cApk9WJG*=YW'C^mDd6KjrE!OM<*a@Z^?D"lm"l(m9\18O$Euo"
%]"fn45/X:X"aP=u74m<ri`!B538?RD3,?XAM[6tEeZH?8E=,hK;F<)^^s+8[Z;72'BL9J^]`c!T/g^msai"rl<Y,99Bc+dPd3KuF
%nY9\F-4XJ%C(V;[;'O"rH$?KPEN<8te'/jVp`f4SAAeb7/2UPhmWjPg!o?grA5_iH(,RZuOHCq92K.Z5N]4kod'Ps5$tcB,`/ZtO
%TcW[^+hH@sjhs7iRd,^1(;,-#i&F8c9_%Yen<AeWU*SQ_0WEZ\\:@\RU%`jggH1:==kLd:jGndJBGJUk1Oh_<AF.krC^>,'Ei7iS
%7RTp-jTHK?n[+-I+c5>`!P*j`WRkbG@]WiRMoANAj8_$3+crKhaO:XaL`)*aJ^M9*J.'Hj(WPo1jSGe]0aunJj9e2&D!$OcU2B[W
%d"4a;4M413Wn4ll;44hm?F3TT,H-pif5/PEO7U3a<s)OPK!M3_,o$m^_Tj=A"I".'7>#sH;KaIf.#<LVjpad_AeT_/`!.*P/F^cM
%3f0P_]C7j=pF0V$]VH#fOCb>\Y71V`i,H1aTJ^6i=6AFO:!JMg*2mTZMZ+:bJce^bKQ0!,:jbY8cjYO\_\g1ECA8lY">(Sn=j/D?
%[^&'`:(<3V$36c?:<SIR4-M:@-C=sp$9io)-j'ELkTdp0ac:[8k?G6"nC+O1C.:63KFFh[J;;VZ`I\O(*\E2ATcq<^['9Z>Mha3l
%Q^D&DhO%H$bZ*2&,^Mlc+44bK-9=o%%9c]j#[bp2!GIU03^]%@6js\W;b_D=pjeba`%%G,Bu&`V(&s'OGK:s1JBmdc@YV*pd%V(!
%<X2>/_V3ZfN*&^gL6%JSN-Jo#E^98Z6GiE8(-g2]d;/:TF,:0jeZ:>H)knHC;^uODR3pLE%'B\-hg1uj8)b*rFF768_oP(e9Z'LN
%?%m6(@QFWS.0j7t3RuS"MaD2hl1YOf@ebK(akJQSC!f$]]IVf>ZuEDn.mK61cl</%TOGr_RZdiIL8g:AHc"6L.sNF"06A@8,VlGX
%^j3JALiYj=Al7?elHQ&Lo>A4D*/>8$aR^!)T<k@3J(5Y"C%+K8(?cl'P\(s5f4TL[c&E]"$o]_(OWXhUF@n7Z'ajQ-W05Op?jSE%
%,Sc6+<4<gF,dXe,5h2Af6X$M;!"/DOf1<=Ogn^mU8)Ab)C-k1NR4;@Unq?p8U]hqi`OB8&,,HMudS$<J"o1eW'Fp>$j?QC=-D*mV
%e+$Jf2pifARZdmofe$?&<&5G.,]Hu-hVjA6#3\Lk"Skep*Ise_.V^4[!UKTe^YQb+$<\&[Y9=NLgC;=/j?1hia;3kW?p:e`"b$Gb
%6L<&sJ@5Fs,]X@$;:@TEm.Xdg+XGAd-pYPp"\?@3/7jR(5[SX::=FoZ&cr/g]r/C_+pO;Wm1q0BY!cPdJCS=f@l3;&:bfonnH)'F
%&sI7='JeerA!TN6/NG5dMB[n1Uq-^n/Cjq_&BP8T+/U2Kd$Q&6D\YpOA;LClm-Y,uV#L%GdNr19T]71#?8Kj16&%K7hD-*cMK-\$
%R2:ecSrfFt-pCsY6BPB$]W&*GR-Vg=A:Q;r27+Lb0,"/>HE"=qm]^g*Om=%=#io44W63:7Q9g7.k'Okb!7FY40H/(?/XepAO:;8$
%U%AX3r9Q>8)ke<]UPZI:-_Mg%oqZ.AhCo#p./9_E*Hik_JOOEJSb[N1T'3Q,,QW8SKY[6)4a)nT;O[n@%fuHYJ6Z,B(+K+e7Y4\t
%G0M+%8:I=N#Q5d6G,M!PetaC-($d?KMA7;=O)tJMPqZG%U;IE&PBK*`af4%Il>9"-NeJqr;$d6f0G=P:6pRYVd@Lacma+gN"?4[H
%oGj6t-OV:A=/>8XTg96O*15;qP4\m7+C*8%%j$Rp%fUcgOSEn+s':FN7ZT2W^Gh5WmA6L/V"[+[?hD(^cP=WM6-NU212/dl7Pt11
%UQ.Gga"b%7G:J91TtM7J*S&Y08h(8p#=DX2;cZj[m?X+43mtcYp9_29UMH1*&mum6aT;&q!(STIRP,F-i=i8bM8&*JhYkkuhl1OH
%OZq]@BA#h6F;;V:EI+%3<'6H[i_"0o&5]_82fYcWa1(i1g!D"3L)OQ%difZF#gH!ua<QfaEEm0VN!)mdobIsX/n`6]a^rCcOj=Mu
%dUN;H"H?hk-I;f?pPa5R?!@nJkE9btF4Jc`Nu/".DlbX3`''=8Ei!t\Qogao#0t8c<!eAX7LtS%/Qeh\9pNcnZqWZ8[KWt-+JO)b
%'c<[H%!\FVnH^jJJ!:8hFNEV;!P@2EV'2fiM\__FaM0PT@nWCK2e?uCCiu[E+XfT[#^D_K%QNeF?q$<'l(ZN=o3Q`P7>9<'4;h68
%>%A\#IVKe`d7F+%T2_3VGWPsQloZQjIaqed[;KX^3=T?87KS++fBeL<%nj-!;g5m:C^'RNUM;ITr(@N]k(E?$6DObgUe1VS-Ye8E
%.[^_KfpSZ<#G!Fkfnu35$f30@D%"R._=$W&^^bA.1EOkQTZ%OUWoEf$Q&*.A$g]:M?m.cC$C0;]]Ht0HCQ-h7$\4m=Zok-D)D$E.
%@ET.A`8A.bVoma;+=O+og4KApeAb!%/79:;RE64CLMhlf6]6tcX:_rG)OR.IL:%L!R8B?eKTUmGK9W@*[/h_6f'.,^.e@7u<XuF7
%km&Bm$sruH,1bn%$HE/Hi;n7AKpNh]f.p92m)dKD=Fbj>;*BlN4>;9h*s:+K=W6[:!2IhAL^<q'Ki]J;]#Rar9FTE,.&iVC,r<;K
%d;h%*;Rdm1/PK<R.gsaBZkeD0U;<Wh>FqP]GZ#4`)("S<7LL\$'o3`RCdASCe5iuKLBB3+-9[LAF\)>NYl!r!^'iqK"i_lneg]s!
%m:J7((mtuHp-=?%%-GR'L$@kd>FD6ll<-%n$;E*?ge/T\<[ZfW`0Y;aYA*=lTl;<pq*t;sZ9[p\N862J-@"pR8hZU*8F<r[B[0qR
%26T02_?%HhI&Uf!$<l)qH6k)uZK;r82T;Hm%07,q=T3,*#:SDZ>S[T-k7[^"X=(<.M:ld^Xc[W\"f8_do6[MQa!:>YiFV;K-%,8q
%UABuq7AtIlcNE/pL*D7j:kqT;5l_F@EK$dTI9AOhr4.rm%sJMp*0!X.jV0(;!f3;&"mV[NQV?_g,FIT"*3'3AUVqDNW;pj&?^b@<
%c&'8Ul*M.s5c66SQ-t@#48AhpSqcuu<bB"0BR+--(#]6LAW`'YCg&$7Q<N!=h-RF]Ht-cu<s9#:d^Q)2F?apP]HG*S!!A+;h6Ou>
%8IN6J$O0iGr&[WR?AP&:'qg:8;QOh)(Ai]DpR5P%9cb'C&@MruI0\"i:6pbJ:mqoR:mD<kb.lSlOeQER6BomOCY&T<An4:FUcd_F
%/p[?r1kW/4=)Nf3<$WN`"d*W+.#-*<W=dYS$B0s'?1]pR.(fq/*e*H'67:eD2!m+Sf"o[N*jZaX_no@A(*f@p=Z/Qr?4.[WAXjhO
%Q&.ak*YF6!$Z#_HR-d`*c=Z,u+D6f?\UbkM'-n>^`WN9\8k/tF;B6%\1G%nCHbp$W22KRmQ`lJd0#U?hl(F_Eo*IY`k;!BVXNR`C
%QsIupL%&eS25$d(0\R'TULI>/mrFZ<--1P;R\n(]1Xs2D!,g:XM#0!_fe!Q,%Ub\2bQ4_c0h[f9'>Xi(N$X&a9P^0i[,^9?pr/:J
%Td,ZA?3b/%a;E5P3Y&<h\m@uoKEKtr/sk+:&e1[t2o]:J=RPtZnYo15"A*BDdD'4/_"7g+MZsob.Y9]tK&Y$S#&*)F]nKWAZN\9)
%.q6_9^IM0LPLg,E5UeQp<?l;OYR&CJS/s1i9EecHOI?9Y,g0KE"fb[,(0["iOYsh-Wt2N1!S&=rU+7l(#=lWnHj-7!!"kTlM+AX5
%66Q@d&ED_A\^&@['LYFi1'n*qn"c5)DaB,WKfc'p%5b,HJH.IFatn;Q>,`62Vns@ilnlnk.TS`j6"e1K1hZ/j<+LRr5iSm@de#on
%dL%Bnf53USQt;%.?6FQ=1Bn4LCFb0'eUiO?d7h:o4[=N(RBd4e$1#0ur"Lu!R&?0c_8C1J2[Tp0nj3B?/n<^,'dX;'Q3&dU$cU"_
%B;^=D+$8i8.L/cDKot>/.j=P$Zkb^ZB^odOSYl$%*psC`';1=Qlb$=7?tF(UUd=D-kkBrOHD^S\8nj8K+?^YDYbrJ`(`&'41pVlK
%mqjn>&KqV1Rol7:8T8!dlMtDp*t#:R][e!27bWtPI`s'IDhZ8Xd>E^AA@ta<6-jl%V.frJ[BNeb.A0,S>"j1gGH9FC</j:D"BNn-
%kaOH1m6S<D.N?dPQSf4\C^oSe@e,s"c@k,Q5t84pH8Xmdf(^5^X(TCA<icE90YahK,ZrXj*CSgkTL_@J:8I.Q;jL6d:8],GLiIgi
%qc"SV9Qe:)TdpC:A'Q`rM1c.(dTIa5hf,rLhn]#<8P>D:P6J3d,k]!;brWHKG7#QQ%YUOUfaBH?_qD8KB]#SWiD@"^FTRNh&+<h'
%oGPN`V$NuFF_&EXG.Y@nqWU*7D+N.QhsK9i?!qCCeb<GNrq<tY-Z<n;q-'r*>?sG_2c$$Yr;,pJ]>&gnlCUZ:oZPjiIe`@/l#$1D
%TC)XQ5Om>5e5#I8Knl+>.[jJh_geA^JNdRQmKh"l/(>>Ej%VN88k&*C:5T'TnM6%YS,nAO#Ti,Cfnh'<?'%mAcq8!jD;pM.67sZC
%6Rek\H3OUq"uVjj\Y,9-Pfm_XV&r6P@k('D7b,!W]I*OMO*VG].b7OgL<'rj7bK?Ph:O(pO(S>'^Ok5TW!0:Ss4:48`ir"2KE1d\
%aA[u%[`Wg3$q&mPhFP"C>;TZ(cYMIT@EH5if3\nW\r5%M4V&m!(,Z\2^C;WkBW.V3=1+igX\iA@-I]kS!JpB5p+P2ud/eJ?N!=AX
%e)XZX(=^UK<(<J18EpE+VMm;pWga:m8W3nb04]?9+/@,5BlPP?LIh^C.ANB#ksFhW/Xhn</-r36!_+!HoI[qM\<@d$:2>eE+?("A
%1F!`^XhG$NW6$o_A$I2a0Nq6^'el>S7:TQMZ:7=i'EWenrX*)":itA\$PW16G%Ck:ObN*_F9SmA"#:u:JK"q:=]%6"bcfS*%VWir
%B1ZTqhI]YB#g$8o]q\<?Jdu>]TOpN;*>RiSkqt0kOX,i#17T2mTRDh=H02Y:kh9LDOhISp^,a$4`f^q?+S70^Y^1`M'C`Sa=YU8B
%$5(:)4]?YBXo5?/f.[;gU:5Z[$cYHBY#g;'O<gg3fD"#Y9leWSF0oBc:ig(D-JS\?)'N2/7S\@%?u_pQE@LiZc`.HZT`AY+[q@;2
%e8@eC'&bP,oJne7[I=8M=RV&&0LZca%&qk#ZRh5='>CK)b2FMo(^uP:Cg)E/>5EDYDH]]K6oVh#3LPcd(SUh)ZbCdE?Ae;UkiMJ*
%KXWA9]GW3jes8R9&\A[i))DuNY2m9r&KH)17HsW,=h23397+`n0rGXJN)nO]=lF@H2(^:")rjo1'Rh*J3N7uTgP8-eaAR/#kr#pq
%\4BeA_tl'oAD$Pl6@)u>W1Sj8UUQQWTa,PdBZNCd+pS#mXn"_#*o[^g<>';-Pl3_=gE;-3V9*ET2!CZkeq;rg/E[@64OCQCCH0-p
%,mI)lGWOasD(/Yg9nsN:R]p'K,LnE#U<BRgflJ`[+I.5AW#\^NCe<:cTFZj=HB=i9BHeB5B+eIE86S-RcEiLPeY4oX;roDZ7o4@b
%<!]7qJS5*:6nEGi=GmhmR:asLPOZg`,bR""&-MX2*#=P11:\rt!6VhL3&i[^=5\#K1tpM`"p6V&(A&UsB(<QJOce)W*A)"2rbZd>
%ETM%0;9-O$Fje?$LY2ik/;2['i'PrdLM!8dkd6!Wd;A*Z^a*>"fjuHS;SESAnkCp.Ro:kukToH7'1'%!'*)T`[?Flr3%U1B0:<t\
%Zf"]kMh[@G!`fV)Ao=u-LQH6GaJ=Ok90,Hg94.9HG9(`"5o.f_Xk=o1,2t-"`KeCW6#0bfR\&Q<V$NN8#!`o;S`<0f-c3pqH(sr3
%jhp=oHn/&4KkY\An_/L4^pg(G-W@!'4<9uCRD`-8?9t!oOG=JS1DXp^d!TOOZC^3o++WumQn<mbcm$,)Ugb2UE2X+>4"c@$9-cg?
%a[F8ce2GsC]]ai%0LVdV<=AuU<dGTb>qSL6Z7aQbUERa>A^,+3Fs)?ncE.?t+Ai47E2^+3'HhO-j:XXOm4M\[MH(2gXh$WG]o>!`
%/o&oJdXq](9Eh)tIbq@Y-3,WMM2DL@]>R;"I5N5`5b2m*'nVbQWHnu-iF>,W#-+bl[(+NG.bTXY`>c-()aHiR2=<H,"0Xs@K.&:V
%g`3"j"M2Cm`Xj",W8U!N";7[fQ,M[GQN\inkrK2H(1?R*,-Z2K+3RL`[nq'J9'o1\.S@<(b5@+X8_-r\]J`^3_9%MW3FM5)('VDn
%dL9!>@EV5?pU1(`"FV)L#n(]je22a<8_,&J_IC'"A)JBFdlVOK^mG<U8UMWU_MMX=Cl&<:;HR$0V&'bG&%eGi>rV?IRnC'JV3sB2
%o8XSZ)9TO(BjsHD*AA?FktmPD&lb9i&f"jYKi005B^*43oa2VN@5<"<(4<ShU8@)ui_u>$:h^.XPlS&rZOMhi;FQn73T<K'XF_oI
%*f!!1b$>)??2NA$[2f9Lo)?N"#U"(tpGge-OW5&Ioc]o;A_e9&E:!Wl0T_.`2V]%Y0f(R\Oo_@[f3o16Rm=>:N(0_P'cujrF,C??
%2)kpH_N^7B-aDae,u%bL^;70`J@WbJ2Z)6CWdQV`Ns;$LAOg(GW$!:^9sH0nZfMs^`rSeU#,j@0m'(_JAn@`%A\bHq9&sZI0-eFI
%'/SU7!BQ:1-q\(`Gei5em6q,mP_^Z5eIuKBb:Ln:WP%8Z^C(ePi9E:V^0l-#Nl/5QdB-j_Ye>;+AL167S<hPfnlS+/ZWU[&b@LZc
%3#W>mCiDpA_9^:+X-La`VUtA+8ZO<Y@aZ'#/PC$@MoKd\,t8&i4W]+XUf34R3<-cihj&]?MR\^CAV)gF*0UehP3j^OdUL^AnEDa2
%AB);jXMPn]0goEcK[X*?Z:p^U6ui[[8ZMri<Ekt*Qj"DH?HkR/Kn`oLm_R]1JegNm4-uY+CufH#mN)Kr^1uXU]om@YPBrV%#];o9
%TXYe-X]V53aP[`9g667d81<,d1[A8HKE@2GgT@_l9rRUS>N&)*UiCn\9T?$1cjN["bkl$Zj@hiA5L11MPEP5se`WrEZajXL.\"i(
%QHm$mAl]nV=LS+0@Z2-Q/:nHBbd3`t=E0""l5@SaIiEIsjlJgZo8^Oi;I=P@2+dsI_'7!oP\'4Pfm&>R&pPb,0-+^.4Ob"6\#:jt
%BOK8L-5dRTMW(J><!,b<4,'Gs&S^M#_uP=RZ":^Q5$OR(S)GN87LA!RO9&N(*2S3PNXd-shkGG?Bth0M\"I1;/\s"WO3eLtd^Jn_
%A4"V!1jDG^&N-VD"`$i=1O-7[P]hug=Q?A+B4]>NUKUn`@3I<Dhg6>_#C7l1B[S5[D`TXRV[cnO)l2POI]W1u^nG<3S:ID5B;]$%
%:Hi17=(1>ja#m2_m?:lA$+$Bl(^s:n7N0d1BP,p"M(FalLI=*J5=T"UWp,*<-BO&K#9tC\=We4L+i$f]?=EMT\h\=[lXEC;c8%)7
%@.fi0*;@+QB_32h:Z.k/QE!M/BH]'Cp'DS!]Jb].(25+l@TDg6Dlr%ML/N"+Q^T]&OB.9198V6:MCM"bC(I..['^qp;+?>^<Ecb#
%!RFT,&uCG\^dQ@,KmO^W3K-i'MWboS6F6!I[ZFYmM>;;jZGbZQ.h8jd_i=l-J1;Igd'Rn<N]Q]+U7%uMBJ-FNjQ'dNjT.af6),<_
%n&$flL5O5$0d%,N,HGcMNKB2!MABf9\k_a+]sMHi&tfufcXHOo0kGnAZMK(;J0C>RdEHoAVR3Wa%U^;Dk6)N&(Kp]Q7DPrsKPuJ9
%10R6K!/-QDECcK**]gudc?*G@aOA)g-h']m#b3(hlOLTIL)#?Hn-n;Rk/SnO%bW[=&$b&c[]X#RTn9NsGZoh&!iiB&%kq;#B_DhR
%'V+Z"Fc2-E",9Gr-Xr+Ym8m:3LgkQ(io7u[iD`%'nP<"CY>?."@H:%S`ISCtCK]B<hcR:Vei2.EPT*3t,-hd&JS*4B\E3X'`=t*4
%KCVgEfICYb7TNN#YauUo0]*,F%(%dg4<*6!'QPqq"h$:23j,8CrNr'Z`(BG$<mK,oYF%M3#q/u]f-OWdenJ33XmB(d>c\PDc`hYW
%eB+9/T6tVQ#W*pu6ui$7I11Fe<WiKs$]!SQb*J`t=ZK_Y'WoJ$:o5f)X'2.b@m<g(@[C^%4q_"]Oa<5LNb1\W(f$hQ$'1seLMEk$
%\M1M<-3Y$4W4=;b\p:D'0K\$)+Zc+Ol,!rYF#dE[E;C&oiL)2r)[p\+8nac$TjLU:Q3DV_#m?MQ*_Y&KZ#M'%0??\!GS\N%*4>*7
%H1t;D[psN[&]F@JO'oLRgg+O)_fc.2"4[L4\3l$E'?8]+jsCj7[N)J'&N1kE91,*Y>#OV$AjB1gKCl5l#L?l"Yi/oN[1FZ<ZV&7u
%"rAie03#thmU.g93od=(?I-G;lPRZGY@O@b3go?#`!]DD#kkG+)]F@J]eQH@>N_@D`;c";i#_csTS#6N0o</6-<lj79o[N2N<&QS
%:$-'3Q:k859ZKF@gSeNXMGgcL79LB`ZWsiu(&/)l>9#SKaeMA#;Wcsh.YIkR%?l[j-&.ZlQdT1dQWP22)E;X$URF3\<qIYgJ<<er
%#;^sqA-JkHb?@L@&B-S@eSIqD,SO)'"`0a"!2fl7-Q'-/CF7=^a:u$df<$;\m$aruEIdX"3K"/K#2PVr5aPt1lH6bsV&YX(CE/Og
%)]/^;4m3Y!/G!"DWp,YuPp585#&Tm?OL^'jIo.F)b)2);bE_Oa23]dKJS-/^L^kP4$q$bs0Z"/s.t;9`&4gPajXZ8?$>XRWBOoh,
%)ie6+b9Fn.<0S(<:.pPeP\toY(dArJ9[X^R:;i2%p;@_E>!(bQmb-:G&0iq=N#G>a-re6a`G5DcGORl=Xsi7K>'Jr@.KTof8dW:,
%^KC.Tp7FWCFE"UGW\Rn)Stj*G$qSa(8opZDR*DFQ;nBIZi'`Qq`MTgrKY7@0_D;L2;^[_0)LbBFFU;$+Z'XYZb%FZ_:CGaSm\H:j
%IH_c`'1o[/kP#t!W+uO(baC0dNTXtX1L@XZb!`beDZteEN4^mR%=OQoIkrMkG?hWU^jJR*]F.cocIa,d2W?M2gU[Iqr67!cTEI-R
%N0#Y]nO;((9[[KuKS%G/eTBTj`+c\/dmYu(g^ug%D-^Q=^p9g*X#$S$iX2TL?n[oRdo^].c/>C+S!,mQ*-Sa]]p_m%<__W47TI@J
%f.\WH>ponpdh1Xp7Xi2LLON!3qA2e<69(0$B#?)>ZYbrV8]BXtWR<P"EVu0bf/'<aMj+6AF\;15gr=tDS5In$c3VAiH'4,]'8hFA
%M-Jk[54M[5*G@efNjZDMBk7T@"^kopq911GM?1sAYZ;AOjK`f_,C*'tbY0=Cm10hR3p9Q&bK;!BS<8RWlkidkE*Ot!;-UTK4`*<*
%7NF[!VDF"fFc0gfO>n4/#@R/Z&r5N-M3`;@E,]2-I^u9aDfA<A)m&!P[UShYBfLm$e4:P,E&_P4r^>oX#?JZ=ZjgSk[e,R)(nR0B
%*d>J?qMq5Gh=-+C]5b*g,=_Ep$-N=)Z%[7'Uu]kC_MNE?o$=h_R59bSp.c@JgtLu;W58kDOW`8C_SKs?@U"]+=cjcOBYk-9no?6X
%3:`,$7'\*GGMF)AL-m<q#A#'B8dA3Q#c/@ih\(Wq^O^b^SL5D7PR5hYRW*MPag/gp*--6b$qDZO`t!Msl8(jgZA"B\0GqYq$F#f^
%8eB9M3df9`5<-:d&p&8Cn.mQLg=X55`LP?o3I!%m$QnHfTU5js4Li5T59sq":kPO(,"_u!1H;nQN::Cf"p`[Z!_P\E_7;FnY7icQ
%.'O\7[FeB0F)O#@W!>1>a29V4h5J/fQC/XrRsh4,0$4<ool!=rbmic:lSWa9,O'gPVrKU3a@3S$K<HjGG&V;1<MRroo3TM0)>)i4
%k^jVbV$BLHGAS5qi$:o[hSS1U-^,A?FkH8;'8m(C4SZ`aWjRrMHfbRb?0\M?N;VU=-pW)?#f905j[drc&VSVl>b#.-_R[]*lVBT.
%3"0:Dl#$43aVRY9lcp#9@OUXlcj@S:U0IY6#f6VT.XASpK<p-HBCt-;RuLFk)gZHg]-DZmO\_?m5*4$9jp,NCR6'<H&'f":"c.'Z
%#=m^-o!mcdG:\u"C#oRi$b=Ld5<.nVNA,aV#KL:BC9Bi5NcdtYgc+l`KQ9n#2X%s`!A_jUkeW,/'e<3il+sVMJ=peaK0*tp!fbk.
%_#`PX12P,ENo``cU@X"!1;O&Ml29IQdG"@)5If`[?.lFZi!:=-Q=S/LN]7X0ZH`tU$HYb=<VaHg20Oghr8=0r\MXhFE)15fGX`3=
%&g;.Qesiqe0m5VA_6M9;,X(#2K7gBNOh.aFK3Ob^6k?FPhOX1hCGXpnis/q0f(m/TW<Ai+IW0]uqRFNU^4&C]"4p>>)P4)p17Ftl
%ggUP%o\f(F/2r2&S,koG-=!;N-Z:A$H:&52EbC9po\a%I+l,a$%ZHZ1:Kr-a^hO40GC"49E>jDno\_^,E^S4`4h,,Z?1f^2307Fo
%2@OnNo#N:hpe23YWG@1I7Lr5o@'Rc^bo7HUETE'#*1eI=^VLG@(7KH"*uo!FU#QY65<'PAWf]T1+.T.Ej?2,bK@Ad(G>dT/f9TT@
%Idm$Y%6lhC2!4XXIW,opkt\1s%o2u3`LPhN*ulMu"GXo,cJ6Ccar*E'G8Xtj\atG8mOV2gaq"tk)e3*Eq8'>'YS)9OK4@H?X0C[j
%8$d)Ig'PWA,#H?U&<<TE=NO5JNeM@:RW9b]=5H[/#!k4:,ChLm_pPL.[9?_K+ug&U6JJ%Rgl^].EG#F5UdD)dX9@KaVH(u%"Q?$>
%<$(6u&5IQ!;VOeTmJra]]6"U;=70e6dY$/j%+PeK3;ds\BQ\?7^nruU_%"]N4:pJsK\IegBXT^L(U#A#SJXIJjjfrJ_'rb8%pEr=
%E"UnK"j]?PHc$/]JQTd=1eM^r7]s)(U*4<$l';l#nJ%kTG!9k8AdTA9'-B3GT"Os?#L9\dDTL?'^fc5]I.]9;319qtW6PXn$3o=Y
%b4rd"U>%hJpqSESV@/"d*-MNF:?ZNPZsensFJT(8bd#5>)gLY!q9B1na)D!IV)p]'Ili-L##7']o!`i.Dc1]):L.1^3X8l,D9SF_
%QlBrhgtLc29%9u0@^J%PhKXcm0\iYBofW:aN>@Zq6K;u;AJouf*l3Rb]u?NqrHFS&oFY'\aMQCMXdKM9Q3VV%1Fd?A-Go<;>i;jA
%+J1G)331k9,&hFBasrS""R]Ad*SMAE35[tlUUDn."59t2TT'8J75odc8i%,?:$P\Z,&fA@6,uY%cFm/m9%g2ZdGWh'!dB'JTa_Sn
%hNntDSI1moWCRfl<8`.$i8GV)E#/*H($JWT1kD2qLm&19eN@;`D-%SX?JnM#-?*#\J7YB0JJ2O6AP3/$-:j:jG9UuEdS,:\M8765
%a\nj."O7Q'[8J@R-QlYr]JU@RF&Ql&Sol5r;U<c^fFWTiGm5AGH,+,Od"(FEi1P.%rVr/gS/Z:NGbjq]PHKo!\+>-6ooM$_)]it<
%+t=0V_^)_s-q^iO%lda[]tWS/=-IW<.h=UC`6*6R&%H*a)%;rC%lg3(V8.>k$'HgdqTK&ene_hE(_8U6N,h*$%ld6Mh1'L`"-/5U
%IEO\]\0G!*&BtXn35?);#n7el^8a\A)\"cC#P-SbH,-t2+qQMS^`E!\Bq0>fE3t_mE^Krs84uX1h37CFgD4tZJE+c\n6eTcc=`<W
%[*sQSY[IuIVZD!P>'4I/i:p'lD<WV0jPOLAeqO?uGtHeFV6b\.ab`pI=hr^rR+njNJ@i(k;J-$n4!<'_Y^k3g%n??(Z@K8RLJY4[
%J>:.U[P:n"*V[]+B-cDGVW8t]!usJ6E*H>;!(U*F[<bIHc9f10j%9?4f6=%WmhF\T.3J,H!h?Al`LR(#/_h,A;h21XV<V7lE;E2`
%[VR.D`0)N:FLDnAZupsTIZjl(rO(:7j8^Rr-'O@$%WEs%7">IH\EY;?<YBACK3b(X,iH&"9&Bm,7BM"J`m@EiE7/h`mpO$6:@:Vj
%Ag'1MiVntNDfC4o-nOV#joD;U;:0S'E$hpU::W.g\;$m(_uoEg_91[:=(5D"P*H7lbnaeI*cM>[\Hc*s!=(*Im,f62E4e&\eUn,I
%?`'$66Ng0Q-X%FA>%,gH3p8ui\/FTY2E]p]JJO[D@m&]!O0%X64Q%.(?K)h531?+lX7Lil1q9iAF)=0aEm"Lo=_C1>?iaoW(fQ>O
%/Ds27nSM_9-Si]d)*/-b'Bl`5@]h9?#c0!o8nS0;X@d[IT38r9aAhk+lF(W^]XpH3c>XD9i=-5Um82mP<uu>3IhHS`9]0*V8\8bM
%!dE1n"$.)TPQ"+kf9sE_BdbXpL'aAI+gUTZ-?*@,]&-k-!_80SqJDV8dEK8-c30.tf_4hk'0&iQ&dNV-E+U$:XQrR<HmnBA%21^s
%;YOhi9]-asEpO8_E(4)'#.%_>LPR@(:1jXK3,r`K_$&%G[3!a7<0ut*P#iiHUb@"0\hTSf2*VL/gkH-*q0W=@3u,886#+a</6OPn
%h6(<V"]!f2`ir?l4%@1V?E(`.i5OMc2cS]BE*:F=<s`L<;.4CA^mSD.%'m9W]4_aOVZQV<85cori9ZA0d7r%();8;=K*pBq"+n!]
%i97Pj0'H9mYdnO$jbsNdBNoJMX]46F4he-uJTL>F(Mp%c&]/=oQ//)78#!K8bsV^F<`*#.bAL.-Z\Bt^3gZ,@1E#r^L'jFc?nB(\
%<8^;-f$,g.'fbO#o^4LM33(>ib.tO&=^K+=W]D"WhBFK5qb.3Sf;1(N\\KBP>26jN!f*H7cu^mZD#kF%\\NKi[`i"7!<8%h_77;.
%Q,[pYEe/"^1os[784)L*#_NI(/`s"V<8\Suh8?!dJMT)hq7M[o*9Y[KfJ%k$X$)Xb^GCH4Td?m1i!<rYFP%.Uj.k,pksXG8hC?fg
%9]4jNeM5]QJWg1goF.8tS,i'2]4Xrk6\#mul;Z^6.m%CRUPkUY5F2fq\@S04X^'eCnM$rCF+L*?'nojEE39q(^E"oL,A2coXL!JQ
%Jb=F12K2-@YS_OAE.1!0O3RuZa7k'"m.%o>i(TQ7n%%BZGKd[/D2Rk7CPQpP4lZX"4q+8,OaV[-6&(*c8-dGa6JZq7keNTc:*P]-
%+#kTgl03<N"(sYc[=T6i"5#;q'4euccIJj24D+\nf&bfa_!ca:Vsi,bj*]dd:]dT1jTDD0$.!tfJOB(OBKGq(8RTHi`!meJqO=YL
%hudVZPpLC?&)?irP:[k9RXldo3cIb;6MH*B*7LKInln.o>cB1GSIV/A9RbjFJb'I)/a.<7GQobO5mOPT%%p,Gd"0Y57$[_D"(rIc
%B"ucF__i5JMd&5]q!fW^m;1_!#+3Wgft`.C<#VDK2K1L:_.0^#_lm,3Z-ERA\?Rm._D<,jR]GJgeA_\fCsOnu@:fV^gH"ihFuF<[
%c0\(sB5HLN%qUXSY^lndX-",b`WhG=P'Urc^_)>,+4f?O8&QR+M$ohF.8)h!!_4r>jg6do,;5=)"J#k3fhQ3b,&gq@3Q.0f*">Q>
%.h+Hl^dpr2R0=Sq$\?qr!m[hGl;nJbAp\rB.DVG?SM:tsJVg=B^L7+dXD>n+AH55YNeoK@474.bWp#iO*+X6:9BlZ<Y]<S.[j;#-
%'N)X9J"q%B%T')'B$^\3^kVe,c8E.ONVsf=r1kh0jPSlW"$Pt9q]#6,iQ[V`3tkKXP;D\l/4J;+J&>o+<n_K[EQuuRA,Sl_'oUj*
%Uu*IH)=\jJ7T[RS'"3sPZ^I%7Sb*jQ8l=G:^Y+3hh3R[Pd`_LV62D$dZV?\Ai;J1#\Rk^,jcY8c)mso#/<cXn)fB.J,Q#Kt78KbD
%I950FI#rb$J#q0VWc'XrVRA7.j/j2d),/ojl'**.B)6*q;alZ0Rgm/`#1GM7BS^Jm^)KWYgIh)IV_>Q'`q/#VicTn9)`>eb`0KF'
%q9@(M3g4r$AWCo0pdV%\)'>F-)]S6,R,K!5mq0#Gi:eQ1%]40BpI8u@LU:La`ib]eR2P)BR(U@$3k%&T:1bF#9^RhT.G=/O[C>/(
%AF?"f^!Y&b(t@DU+oC,hp1B=)$[+G`hIpLt@$#`1V0OTc=""ON6EF)=OF*`r@S)%1p4bnfrOHA1`g6l"<ZA;&UDG>'ke,cs[aj"A
%HS[c)XRq;\"`QR)arSFW_#:7#\'3\3s,hR_R(\@RQf;(YDkd.X9\hIN,?V3Y-gO(c9mdqn<a0<WXC(m]61'Yc:41<j;L;oMVA$Y>
%p;Vq[RiT`0ChTX2Ssd:>9Plki^!X]ial)lij3l#k137dU77JIdkOsXQ_+=O_p4`afOSY9tRmp<#@HI1e1qs"s*8KCadE7pf\$n]N
%5-<Vs`:&-GKA2mNL=mEp-^9K[A/n`^pSKg4N)4q6pSMX?dRrrPY?60Tah;D?YnCJ4mL::Dldn2.2flo(p+*\_UWnB'YRS-%R1=Tq
%.ri%mq@MmdmS,V?)&HLtDl4Y(>KOPn*"=F-\"8c.W4eU^KQ,nCp1?XJneW.N2kgW6qep*?AfufHs..g^S]f71_<fEt.^m+0b3_n?
%S9Ai6p80LC$mIL:2a3N-k2>rV`(Rs>m0u::W:?2-RijCb\l!gLJS!Jdg7*YS-(Qc;1G=Na9kX0SIEt$G%C8!qIZeLcZT%@WZ4(ng
%DoYS]>WcNiAsklMT[)oKbVP]9)es:NO%MRlWP.7u&j72`hFbgsQ1ZZ82ddW]h4mnq)lT0*C2X0GZl1jPhCOKa1,c)EM%V9g\5@V5
%c%uC<WP*lT1IaL*^!R#UK/Us1BI2&&-hc\:MsVp%8PKS,,IYPI5b6C9l,;G3kIp6gZP%TuV.WDL-h^#f/q]_I)j%aNG-iFd-EbDS
%JPPQkQ3<a6LqO[no*"Ak@W0hk\DUD"DiH-_\h\W]d8-RlSXI15^QS@#A+iBj2hRuJ:jXuDa+Wdg[l<?e80Jo,hGf66J%".h</KD2
%_mmCZ%"3:L[l7Ir6>ia8R;gAU=us,Ok!#,e613!6ETb1V\MmAK`>jlmS+@?s29<JYU(j1<Ec4]T2j.57b!rbDF*lg;mb\1eHuLAO
%<1qejCq.0HQ^DHF)n.cLoLR9S\\1SK]9rQ.EdMT]@;%1#2]^Q1<bcQ_V7LNoL>!RN(E#S$[C:mhI9NV`koEiCH8AKHe!=BbIAcdN
%:-VZY41Ft?0E(O6qOa]#Y"6UE6HH0XWX"rR_#"op7$S6h@2f[oH7OdrK+Nj/+<q.CCIK6&a`-]F>g'M`>LK`H:!81*R2B&HSW/AH
%'R4%<!_1<&?l5TiH&4qT?l!9>G<k@);>5TK`^oA_1\6_oGf]14J36k#dm-gPUuB[:T-:Qm\`^J4mrdIO",0%POaGTh;#2m!oo6Z+
%ogA2clW./=d`>Dg`h9%8`AY,s7Id`lVn4XEcPG7m5W;^oj'cC0?@n!?B:aFikTc6+S*__*Fc.HAS8W)G?')93RsW#^dF19A\p"3h
%=5^/f-_S%Qkm:kifLSbiK_-#"^**o/Y\HUK02<ck.-oBRQ=;@EB<s2V=O<'r&+YFkkJ_[Gn03E7PeJ\P;B3?6n3LbHJ9]Y/HZ[X`
%Kl;\Mr7FfpNbRY,UIFoL5]UiH;'XN0!fQumI5`R!!I:G(!-PV#OJrpoRd`n;;u@>/V$k^Ld?=H9<(2c_QZb4OV&03b")JRS7SD\m
%%VU^TN=N26U<ue:@"SK':buE>Rc&bf&_'`)/"0cObDLgMWsY-N)(O4oCanarf!JSX(.U\o,kjg()ur9&!3J,%;ah)<H0t>/S2)Qs
%M8unoL0SBGC./85[,2NJDVMW.jZ-_ieZBjm70,_k]u<cl+c(WC!Wo_i!k*2Y;%7cVOhMNs;WQ?<-fSeU-Db.Hc]<2LeA@V/N%dEA
%W'KXNW$U+:#.l_Wh@CaO=d5+PVOc.k;##$Oh$9G"h4654YG0")bn0P5P"[81O):UP.kN;R:Mo+AKEY.&M[If4mi)^Hi=@>E(u_ED
%Uh`q6J>N=$9gD/\pYu<1((,E>G)Js24<+6$Mu&05*:X?:SYOf^>K*7GqSWM+bp_4K=d;ZUP/O&7W[$G_/`6q$&$^e+cuG#)AF^b0
%[?)Iu>ClVj'j^`6W$nkP#NH0=&*4;L:7LM."E)]4/kX:\NgA%::0'\/^!p9]P=,f"bRN>rP!f\ZNgi$f\3d^"eQ8EOOB!E<$W7:%
%f?q\$J?"i"oSZ_LT1D]kn3O;(+/BFDOJ3\IE(1@5!8&o0Pei;G8<9,t6WM]VrA$i5SN_M)W5B>UO5i+:r(XghAu&p\P(!Oe,J"*s
%/E/_3RCTji:`pUF]Tb7Ji#iP6N+J.iZlgec@gGO3,rp-(&J?,b'g[;7n$rdA#!kJB,N'5!!D2uu@2^:naG13T[e1&>$t%-kk!`3-
%Z)4hP*Ra:p0>.[n\AP'bp"[U32b!0;GC">1TINW-Y^DY7m:j>"87J5:a6s4aM!5B0T"G`lg^[+Km`-`h!F%9hQjFoI.tkiLU'=Xa
%G<TMMl$u+b&L@mTM;$V+Os3H`K(R'u1<lL&OpMfr#NXeCe]+qY`KpXM.3f).Rn,"rY_$.!.&_<e9&[X!).TH)!m4I%@X0upKL$_+
%,&\>jY;h:T6epI<!.MLO4(inc!a?&pcuF,)J=:]ldN`3?cXk`Yk[Krs33asZ)s/b3i'L(g6=fO/2$#;&/q]XJ'c2nT*pGPH;q/86
%)6E[fN"UHVH`V?7OAo"VC;+Z;23X=4jJF-Mg(qCkbM06`3L$F_RDU3j\E=G"[G(WGBIU_n9Kbh(/!6d"G\d#]&Kn*C!"!)`8W\_4
%nab9)H3e\5Ro4nd&2L!\qP5,RJD#PARgK,i"Sm0V-q%]Ym')6pTtruJ!rF`>M1[K<!3jSX(F#:'o0RM)I+!d.16[@[2X*@A:^BU&
%_Eo0Nf1*5_"7&9.!C2dbBj:s1C(#$(QpS&/H>+B&'0),XLVGO#V3bZ>+mC.o<];jVCKd*8%$:^hVDTpnfK>,rn$'+-4!;&/7`g#X
%o+^c=cs3ek#LYIqZqruE_BcL!G`?sojuSne7uH%d_JXG-253N4dk:-"]ggAD<]+g:*fl(rQ>qOJYFPC3_F'7&F5NZ)\94KE=B0&\
%DTs>G)U>ei<5%]?NP0LX1HB98$:\hP>;.pus4ljf^L?J'944L!2<iu?72*?oO--<"D2r]!7.JD8AsU!VSP11@\sk!X2HSC/ludkO
%7=Lm5-g[PWelWWOJC#F#W%4l^Q[<ln\sSuH6BTZ"_js@\6Y.(4\uJ=G!)-o@%o8'?qG?8.49;Sqds(pj2l&VJ:TF&!P3$3"AWMFZ
%[NoaiR_*Ap9h@:)W%#<4B8g]6q7<D@223)i[;.igBOhl<p("l?_qO'PNn69c'#R1Kj9+=qkHVR3hp<>)Y3nE0DSUWfel^tU(X6tg
%bL2d]q2sH/'o3j$KNc6)m/!LfZjq#_D'_h(iD-YsCC>d"Ck9L>7=O(\!mR7dd:e86B['$)-4+?oVA`XJ#CqYVet=iV5$'H++V"sY
%b6LZ&i&PutJpW&2m2eG30rC1C+(a4f@BBODL)ikR@KZ(NB,7ZJmes3S!bn3=ZT*pN^?B%-*PiZIW_+ZEDC,F*T;ii3kbb-eTs!b@
%V.:5JV'[_$E>JhbWDUIX%P95d6;1l*h)q+F"Vi/'TqU9CDAH2];ls)Hd[n85e#og_jVCPk1ukXd^k/7RI_e,'q<>N`D2?dKh!JV8
%Q3-*g5s't"h_2PAO>:gIXCTcEq<D54ob8]sbr2F2_&q^+[1\a"-&N]f.cX/[6X`P9n>,rs/fb@ml!-N63aMut\\rD?SCf&,c5j6o
%YSD3]?PBLK<brbe9C!/QL)7gL</:slbifME!Jf2pXlj[cAiNpaIuQ;YZ7VPjNFD&u-$mP"0GbStfi,/\.YEgJDZR4,au?[F^(b$)
%JR+hR\f\pC'4UU%:d@F#``<l8jiAd\W:Rj*?47C)?2`.,:aR:A<@h3f%^q4:jto`">PhFho-H!"+,fPN*.gWqBH*\%Lc?.-Ht"^1
%Qj4BtjsCKj,6n17]m"7Pj1)CKh\DjbcnCE@-VUNq.rR:k&h)MTk>7L@P%WjCQr$%U;oAqX)?_=$If5UKm@@B[I3Aq3_!Zq,lku"V
%eQJ0HSNHRW/Y6[4.ljB-R\,N'BX!jD1PMJQ3kar@Y_+&A%AtN>95qVS[13USXsV1M0J"ErhVkMsXXE7,O=YV."`4Fh"+#fZ>L^*7
%SV=jg!6D."=;E1O]g0@YS#Yh32GLo->`rN1&qV(r"7^A>BZCT89KTo;]-`$g!X=RDn>anhk9M=hgJg@Y,L@dA_J&,Jr>5Q#$nD]\
%+?2!-i!"fh?*&efDQZU0atb86$m;N@LYJ+'Bq.6&3<Pmg6=MttUnIm,#8G!7<klM@)I"\N@_Z</,`j#sN>i'_0DS-FZ5M"TW^s?G
%dtl@XHD0\G]X<#&YI5[*2#nD\894O[3l1N9HcleF2(KiS=p*u`*4+6Op<Wss8/ui&jh7S@)nta5N]'uG1?rfeimc=PLJ\6P)O1b6
%/O52;EaFT()>4?l3UgP4ilZ?'#JjgV%uq7228bBuC&Q7@15#Z>1%ZKf+f?(aK'hJYB6o.#9!;,=C(*O>-gr,cXHh/0]!`FEQ,R\Y
%WRjoZ](0ZcaOVTQ3-a.'-%gZqdRfP.-ZL[bq#;M1B+GX+(mDJCi@\2R+8I3<]+X;'`$*4SgI3mPP$(BPPoK*(K?E\^",m55^;6k$
%7pI1>De0$7:9hC_JK-^BQ2rG)UFlaSDQ_GNI]iHF\W0g4%s"VA&C=gZ7Y/&oiWBLl[D\N+gQf?WLrhE2^"2a,5RA=o!S\.>)*`h5
%S?24WqXpiD=q3EbRqT[(HP]%eQ!]sRh3Q_$8nuV>8=3)VKb+CMB`pqB;nn>AH1:RD^J(rui2+S_VGA<X2U3th`:^&f*_HbU:$cXH
%%F6S!:]Nj](9A\*9\ZLi.sQub<DPP33bQKcb7C1Ta,5Xm$h.3#*Rn0SXs_X)(Er#q]sZk=_pK&h(,)I='<$0Hp_iXCOpIMhbpfp]
%,ue`_E$jFTdKJATKVK)J#1#*+B0F.Y&YfMKD`#1jO\,"0%$Ch_U9`;/^imF+.sfuDkhF'CL@sqrB1bZK,W1&49;QM@HXBGR;WhY]
%hBU^@QPLS9[O>LDQo_MqnM.f^p[H9J9LT10I/bD\1bsA.<KZ97A%l[.ApmU^=AZ4Gmt@#o-tNeW+[6GuSM7MM\C(C[8O-LDT$mS3
%P*7pPfNf[jUl5&NoURh%eL/7pe6G&DK@YN=6JVpn%C=kF2<$bNBH>FAAeGn&Z./?r+n3V/1FKCUSsQ*Fm`doo[:`0o\%<cFG)mhM
%Qm_OYimc8.P5m)k.Zqm9o#Rgt3=`2*,l73'_pW"H[kOj@&&p+t#L\&NEC>k/$rnKgX5%A`P[tJ')Cuo19OaY.8%:7"67NQq_uYt>
%!0'DmK9i%/6*qj%!Ep,9Zt3[/]b]E*BF2<$BE9_<PY>MNL"W77%ZYR2UP,lT3*D?4hZ"9oWm^WeU)le??RE=:KCK(V:Q\Hm_Ra5h
%)h(u]diGt5X^G-"4Ea$VTAWA8#=/$\Omo*l<C.]]Bpqd&0=7.aJY#7rXn8]b/U7XmA^c;_1`7b)\"+XqkS[p'11^`O11U[MZ'Gu2
%T_8I\#cF!u9_h"%@e!1PR'YXA$5kY[*3q)_#a_o]g+d"q#UX,D8,s=C^h(cd>6%<8+rQ_@MDkV(c)WunorE-Hk<U3<"?dCC'NscD
%8;EajLuDrc^dK"0:BoEJF(p;aZU%iK@<AD3jo)c:.%94Nm>:,R&UVb.lOoE4e>RI8jgYt_2d/UT-PAIVWSo)N"l[%mr@iph!b9c'
%ig<KX9'2P:8LGP6g:"fUW(CiZF+m#k854b1c?bI(1*7&CHQ^iAI#g.u'4M"EEU[@adRW>f&@_q_n^&+mT7iT>IP5(W)$4Q[0HH`#
%OpSR'd3SA\P_ojYS0q!C7-"lS.L9K<6\(X7b;lEa@jH5EU1,?,!@5TtTW5mjBupZh,tq36:H1QZh>BPE)KEYMFJbe8OU_qk3>/i>
%.cW+$b5pbEp`A+5PLm<IP)Rh3J&#phO*AT`_ECG!l(JhLE*hmJP5%:(OK93eE&RLO5Q[E+`if?@DO41o9o2,G,4H46B).,X&s3WF
%e>?u"#7]/AWlC<Tc_0=3QPc^M>kr(QKKQ\m#:51IQHr\!l2;.X^>_+tKQ%>UDK'ld3JMMtJ-,d'5`j(I^>UqJ#PO8RX]W*WK<:ur
%&2Tn)ob)O%G[`QWVD^Mtqfi7j6+f_uC$]Oo->a<'91F;kVWa.a*Z,gh&mOmJUQSI(Mjm4cMUW+=5Bq&g^Xt?.8tm%ig5=;5$I]A8
%p5KN/bR**$'M^:,$ZOV6OIC^\JQZY#o,,0M)Wi<8EU)Uhak`B?+://m/24&6VMeJkk11g>e$4pV4,p`>Z'6hgga&)RBE1Hn/=:'F
%M3>l'@WQ_8[V%(k3p_0##2ll2G=-Y;Gt'CS#)0\p&(4^<R']/h<_1l`._Sk@WMKTUbSg)BilIV;Lot?=&*sZQ-j/aNjU-+R-qQb_
%c&*WG*($c[#T;X-%ehSfRWZMA(gJ;Bif8:qetiJk!0f6g$;8\gaOb^2G3LBu&['hX,n5Xu!or)?4f`R;3h]T?"3<EtnBS;C#K^R`
%0dU5/[&h2Z`4X*TQRp0fAM/dYHmoS^7`c$G^_)?_5m"Q-s%t=1eqpl[\]-$V0_lWDALCI*H9c*4p'I@+J%3:!83uH^RI\W7%V'l7
%iok,nWRE\g7em1d0p2&1M9#RV)0r;ul%Cao\jb\_Jiaqm!)>$`aj>ZL(P]F>9-&uP"7&`eWB!HP"PMiY0l.9+6B^um$7H"d6ULH=
%o<!P9JTXT3AUIe8d":X1pB<]&o.2.4&?i@CLcs%*']]sRTRPm0arHpNW.@)^:onod#oEmR(EV$RiB;dGq@H_g*d-9>p,kB-nDJ^0
%mKa+efM8`/SNmTdamn[[G+N8@,%`YPVjR['1"ip"i4P0XM&35RUpti/$33jXbK:eWM9M.!RFUj:24?IVm"'KEG(cqgiddmj%UEb[
%<oS!,pIk//9)8ak$Y$ZNGZE*aZ31Cl,XFe@V!R(p0s]o*QV+qc;1cX.D1`K/7Q6G_QoO(uFWUI=E:Z?;HpbCZ$2,mc6X'=e+Q.K_
%N-1i47K^.#C\(jb[AY]DN^RM726dbN&8iY.L$,;91,2u\8.ptnEWJL7W;SX6p*:1^"1@g)MG=;aU0H%\^ip2tje.@)fK<%,UESS^
%G>bS-[-9lWJBL#(GC\8&&`W&Q9+t<)*"LtTiU>bJ!C8cd(HOplSC:m98PpcZ:k6&EGQnX'\Z2qb_'VbkfO0t4?.)-ja%I#9,=-[@
%*)d\N*\]rGQd05r5_=/IH,A*(oDtogA2qa*5d#`\"''+"]0Oc@>j-,u$(?#;Dh]LkCFc"#)BOFo-TNn[Bot/9T-=B#37@$n`UP'"
%7#b#@l;'L@'kt3ko)Y^2f2s+WDY39?<go/?5Osft;G0;$6ne:&\*5/dJt*^a5m[!njHD1d:*CeO/@reEje%Ga%i*qp0u+rck6TbZ
%<"G3gH%oeleP:asEI9Ul0.#TuGmlK'WKBRfHn;J1]HX2>qP0[N?k<t]d2+Pf8@YHYe&poLk)q<nM@fnMjuGiuklh2G\HHBWXQlX(
%_smN>$\,R)Lb91`4Q68/$JE[1PEZ#DhI1[1n4rHipf?*n*+>::W:1.WTu&Kh2%T:=A!k4_)hP45*+OsPO$c7c'B26RVBYn<n)TFL
%,'=8WWW^[$LUBErL7h<KNV+/lE(Po@)H2[$o#R&,.Z9UkGujLOit#Cu==m!Nc'?3^Y-+(!VcH]fI%\s=FH-%uR'bK"_4DHB.sY>Q
%QjL7="\bC(.?\Z:12?u9dq@2c#,d>(6fu8e:,XkK1C"X\YFj"Y29`IYgB7Nt\dI[A,.Ob-JT#Wh+:;9m:%4S"2oMf>4E6Go(8[j[
%0Ip"F,:*SZe@YtI&.Oe6%/rs<2Xn_S7MBO(-hNJZUm$aHVZ`c$*,"7\A2QP_g,)ci?;Qbp!8u"^4@h&-p:r$5Z=,khe1,bkkq[lC
%#g'AB;*ns8qoUZpO8(3ob0X6$"62sj"jOt&24WO].Z'UTaZ9`![!AIr(UauQWYI1b%:%S2Neq+n2LsE31Kh#I"<CQB`B5r4SYV<%
%<.G"2oMHf^(-$7aFdX<&89qm>O;QUs!En>V7=s/[JHbX2iS0Kq68Ct?B/'K&JElLtYlb+SdtFiJ`upLD6gS(s%'aVa5U5sR.#-B6
%,RtKIf11OqO9B340G<\*$/,j8C-A\M7SHJ.s*1S,BVf+U@g-mW(aI]0-`(Hbp^kd\HApJa@aD@4dj'f]>u+(l5AW4O(hs,kg#>7,
%;I;[SgU^q7Kg^GghCGT"J^2,h`dLh1HQ3a=e<]tZr&g:a.in)N*NRk%/>@O<M_QYE+Q@&s/+.HuL8ZHZ"TmS=fJB_:!7QRro=VI8
%.CIc&Gp,'-Pna-?OB<rF-0aTm9Ah^@a?-.Y6&eH0%*gE*`:GaQdUVb\+M'2ckp?:s>7Pr>S9rtNFb:i('pI,[&6f=YUmV)$G+s7m
%KZaP1Uh@u-]d;^!fE8ni?s't"G;Ls#!mY?0+fuVA,<],2HL7(;lFDPWqDC'R]r1ThW:u5<o]YT4aF$Z.+dR]Aq%Ubf>TQu]MPqq`
%>?!X>$PuoC9]/@QBELIPiQZ_DG/hkMG/H`qR!tW3@`T]$_R.3Z#G=IiIb_SfW0RQ9LcK^GRNMsM*MXCgAg:MAbRXFdU5kfZbfF%O
%MK+4?!;1LuhT;#s]]+\Smnsdc9[_*4GnS$F_#3WF8"uT:<KqGU7UEp*&<b<uJR/Vao"6Y+Y.sV'Iu*R7,,A+*!K$;m"0U?<VsN.a
%M22o1?;\Z*LI&$nCW]3'M`\$ML"V+K@UD^GUBD0#+j1*B[rifM@INI?bTUuL'!f04fk&hn-Ask.-qkD4Q<%uuA^jl[9DDYl5U*$?
%Z%a/Q!'m1o%P@`2$:d5g@hLNT:=^&p//puL7hCTVfs4']@nN\a7W@o%6B\Q$;>?@nhM6aq47Z=7$LnREC,^ac)<'?bM,fL0ZB@Q&
%;g]OI,ftZq^W;Pn.;1@PUEO%tV(FMIqGZ=;-6_Fnp+*@HnU.C%^G>"$ClSQ$`p+DaC+:u8H)W7q+DScu&'4f%)W<-^+nGJb_L=i1
%.pID0g'[$Hgp@3p9T!X]emT2,J?t+Uf?*_!ju]*S:CXWILc=W=,q^rEg(He)qR4)MSS+es&linm#n3g6r$)m+Hf\WDKK5$TGu'aE
%b4>b@OA<U?BtR<'-6Sio0-luFL!Ha$fH2N6":Q!qLoq".M/i_U25M:X@'a7O[4FW+]IK*q,Qo>9m]Rk-=->*i=mCt%&`Jl&bEeok
%onDSP"B@%Q)ctal@mZu"6HPD8Q&s.G*_^GPg`hhM^kS;8V%>N=g(LCko7oA4_Mb[^N>a)kfc",T9f!VYJRJQ**V/j,OG2Jn[/u+L
%*dNG;#dsq5OS1I:!kH+)#(aR4UlT_ZjFNM_4n0BiA5lZh?kqqA.b>TUidp`,<k)4W5S.2M\`Mcm,.=pKbpF\er.e4,n/[2RM\V[)
%LeVA^24"IF6Jr*A@ZnO71E53am:?Q<+]rHG^ISV<5YOH_>HQ8h:Q_>$!.^r`JU$-Gi/%Uu;M&7Zio7fL9a&n?CBK/fZ1S\u79101
%2=X&l5gp&foEDn7ME?`PEY.;#U5E0$\.N4?"pcsSn-lVq!JB-+F:!gr6KsZkk49TYcQumMl<5Tef+!lD2&*'\&3L1MLnM:KjV:6U
%&PU)'>tuMf+D-Wu-^k$U6!sg!Q),(o"hG4?atJ&%,2cX\JfrBI$r/1u6BZY_01D=6cZp>60T9HcHpNQ1cibNN(".2CTd%fj7FI2s
%^_J#(/H[\t])og8B<>YA-='2:mH3JO"MhiuOE]1iQTdHjPU7D/pu[\Q!d$!qHJjt%&mH_p1Nh?;NR?1>$rBWL^_j&i-/EBFj=;un
%_&-)k2BM]HaW?\l>:OLjMbVD/@-O@%"rVC17PPn#QBsAc$4.'NL!,S9$t3P-'dP-\obt^RC,k[D"9X_(TuDZ0$EcQUIR*"q8MUFi
%kJ`$[MlM+`kZC.=UVL]Gnnf+Qc6Hc=MIKL<S#"Qs`[O]U=4BB58l=No#[kI0!&AXE,lh>X-63_Ybub!NQd:<9&Z#,R8qXa;TYU2Z
%6B)Qc4:07]H=1M`+5uGdYLSWZ:][rZHA79>'\-F-"5&nU*!H5>f0Zr9Z'eu7E;:+[NJBubo@$T1UghB]+DI@=0$<Sced6o$O;>m_
%JD1_499aNuEuQ^2A71as.K!n\5sf\[kOKa8J=0f`rFqD*6g0+ip30Vh!e:`@-]E+(``U%E-t[8s[WoMO-O'o>id'Q^*]leLkZJM>
%:+Y'jN:t["6u"ji!)@=;7\-@T6d/pCm8GO&VTdVC*D<"4!GK*.jbWl[r%@>'ZB&s?(T]Q-SOrjp-CbaS%K7npDuhNJ`&=njTu^@Y
%n&d9!2bE5,d<&]h>c't+PHiVo7^,!#Q<4lEE"Zs)P$i,.,S;?)Jt,=JaAtVqJ-1b0s/D-%'o$_'#F:`3TF6<^pl@2KP&TKqhTk&:
%+U/G%3`NK=6AS7t;8ajIogo0?$d<K&S-6Yeon2R/+BL;dI7-KhUg09"R'"=]UnARSJ9hd"<NTu#li860(*ln5X,1&t.$:Jn7>Y.l
%o1p$T&&RQ]h/=QmJ<!\(4:Y]?HQ"GeQH9RS:r%%38's*<[1hKK*kRWl7(!7#\nDi<Uh=1ZEgJn%M@%U`lGS]j`/kP%?'C<u+`/[6
%fIE*p`<NLMBEO"mV-SnJ=Jn%%OB?J@$[>\Ql$!2aM#4EnNCEB#bJasH*YVD7d+%aq5D4-bEYkE^PaJ=#Li)0l-E[.HDKEk2F'TjD
%_"7oLNra\']I[P1"p17P.Kq1$d9D,qiX!-G8=Yu9F/mCl'\6Sl#2t,HhZkejR:m+mf7RS520esr`J+Sq0\$fZ%`HW-GRW*!5k:Rm
%cP?bmV+3'#SHAWRkSF[Y=NAMH?LR+VO6I]#k$]#LK&jRCiN@0,c@=tJ+Y8Z7#$uT6*OLc]oBlbdFb7Ruq>333\A_;.agL(77glC$
%UW0&_XUm7sdTI]LNel6lHZT&gpke5.Z&7oX9<(u+,[60o%$?oJ6OjceC_U22_5jA0a'(9HbXe6DT-CYf0QDAQi[`_p5THhLZZ$e,
%TmpT09)tC$o26lCOOGc?:*::>+Y/Q2>)0UZX-?7`i-F^On>h"EEWV4P*G?b@b.,mIi/:u^[:]fGL]qWui"M=&6\nL%*;roE9Vr.B
%%3r8%mj.HHSPt?u0S?FgK0p"Q=q+A=BUI^eLr7`@J*,p'LG3_n../EUJhAOK(_L$rTl%n*$R157>Hu\6W5<L$=sEnf$^7,t?E(cH
%8Vg6Dq4`ulN>4`'!IPNG[tR5%:h48O.\U#N5UDOf8FOtr62,8$7FK*(Rd:<9D=mRIkTU>ZfVmRR[*$(ZK>g`b5`j0&1m<lY3e[#/
%K\U9N*YC2b!nMWGZr"(8eflkeYZ^0'5s;hid#uc(5F4`-11-ajn3fH06RO@Y,r!W\3@DU4Ps39u>2bN!&:.B57F=\(#p[6O8Nr+J
%I9&UCT(j^pKTt/<Tb1H?U3mMtPnaL>]T\SHhV)Fa#L"#'5.H2r6io)IDG-u2_obt<^uH"K2_GM9rG,Nl3p&_'$lO+g'<oKDj_"_g
%9b[^c(pGJgWudd_RkH"Hi\?a&jQ5-!78[PP(+[OQOmXO_J.kVpS^\`8o8Oj4d_DI.7SHI!Xm7;(;n1_XZhju!JqWg>`aI'bP'2@S
%9JLUYpj&6A1mSgl8IVS#1)tq>JSA1CG/U)LgE3Cq9^.35c<05`GJ&s7F,*!!/^qTD_5O]LJkSVCH6ajoE[irX!;LHF<9WfOL.'0p
%iA>4Mqr,J+$jeY%:ZSFIj8cQ=1+7*o\gV7++i6m,9J65]lXgcCb=ZFm=nU"l71h!*d8D^gHG\"qb<?fEoW1.^K'k4R.&G`?+P\*%
%SF3%QWqoYqX!$[%N4VXgB-SjsX>,g5M&l$[n#]u`ECn$PAm&._2a(SeJeQ^7CRZkZ;./dYY9N'3$<><E@]<<uMIu4trNdfj\eA(9
%P]K0F=^8##1pPE8PW]=?-p]*9/X"Nm"U3uZ80JG[^HpMdA-BR%5G6QK%L\+bX]56i'g+;,Uu&$4>%cqf-RXfU;[Uo:Yea/!J9X-h
%Dd!4"+[_u52K6oF!OM2TJu"mAQ@mu&"f2<S\\(<TcWMlpX^K`oK=Ph&Q]7pE"AQ$9eAs*Qh?\Y_KI#(WV!"VNL9FEY.=;asN'&oY
%nFJc_D1H>/L)AE`#_7\e(IWZrF^Kf<,YTg)1S"K0YYGD5m*=/@McMU^BU>*<Pek@ikR(!(^(ihe-lI*s6[g"k@r+jBP55Xkj^+%?
%1:X9GP<'uA?QsZFE[Ln*kf(T?_qr8:XWJ@C4@h^Z!;R91N3p)l:=#LE&,S.2g8qAW"?]P6N$F61SN'4NbUOm/FN',N):8h47:@Vi
%N]\40UbfmhNb:Buj]RnjQOQEGW<PNk-Co71_Vg*O-A]VANCRSd(^aOs22b#6alAT[;f5L#0nFKj:<LB%B407lYs*S:1"t0T6rcU;
%KOIDR\]i5A*>^sO0_A`UEIc2-_%"s%Bc*9/Lg:(s"liMM<U$YE)@=E[Q0<LXi'HW[il74T>3.)qNWE+s#n\4u=C=[FRWXTt>.-gj
%lB;.N!oP4skp=KrK@r#L:mkPG#l$nM^H*oDp_osW`$M6EU(PUH!I_?7<#`X*)6JX(3"Pg7cjnRfL^:9B6VejY)-_n_$$ud&&fDa&
%*@URcb:(K/?>6K[cI(n]7VH9W\"'*b#aco@^ZB?aWj_K17f4hDqD!,Vo7t;:QA!<cH';'(j@\aOPCO@dl=MTRMc/T/bIj%@o8hmW
%@BC1,KV[['o7S:O(t'NDAh/>S<5F2(C-]qF.JT`-cF.%mg'HcCG%FWB3V[MiYJuY/Z:c=6a-NNP,h7VnW[Y=9*$bb<!6.QV"-88g
%J]d:Eid\h"$"S^l$m%ErKK\-8RhZMR<nQ?jaGu0Y/>S4)H8?j&9(j]BaqX`Z,lqW$Gdg(45krh5+Yt-d/-=uCrA;[,$r;f>f"rfs
%9-uiBplWZos-[6uUI;d-E,LE5Qkn&KO,\;Ye\1!fo*Sg(KF-<bi=N2Y>:>T76)c9(Q"_B2/"J;THOAB<7a_@V!C?mD@4sPf:V`9l
%g;#kl0KKMO6qSsT"2LD;jq5,J!V4O4GliU<jd$AcE*c4UAIPl-3D4r.<nUL[WamMK"!;"(Bp=HeM%SXH\-*C*-dcR.VM3A%2%tLY
%T]+Bm=BE529`k^:f#?13@Zj8^:u;:F9=BQF*NL3orup4M_Ru0H*(7W)2%%CXH*M<lW,Q8tY[RcMm_hP&L5nMSoCh>aX7nJq<tM&:
%7=oF[-'Q"?ihu9D0r'<=Y2ic(Brr,V(NBd0*n1s?)n2f"e15e$P8&o[+d[b5Sf[\RZ=Mp8i/rT-VNu4$.krOE?2RqK,kDF$U0r$d
%^C&mc,b([q`f"f2Bd#A.M"UHNIYoUp+t!1^:l#O<!VA"4;"om<NBRZEALWWONn\B^8M2UrqjD+1XVgI_hF8k+3%Q&5%ZCI0"7[,G
%2AE;^6'1VQq2CMY<I`.QL6,FCJ2'pr?pjO#&CfZ)$rn/1AFMrtZBW3_1@/PZ638F3M(ge]Inq5U$\BR^OlRQMn'\d\1mS%&ElI(`
%O1`P%3eaarO`skUeVNtS=@k[?dpUm-7mJD-@QEJO:KCqZfK);R(B.?F5kQpFU,YXcVFQ:7^T!_a/MFV2#]4:]Q.e^L$BF4!U=[U\
%FTMZ.['g:E"9WAVQd(lfS3SMQ_A<>J,P<*e"fA(F&7$tdPC(7Y"/R*7]tdi>PmS[T4o&cd5`)Ko!-K<AGh*2bc9MkLI7>Bu`?[^.
%%9$)b^!*Q5-r/hc1$M:IcB9lqJ[DI%g0<\XTm+#`-06smrXY#3f&AI7-+RA-C0-eg#W`:dZEg5_dTBQ`r^'236PQZ6V^'ZJ25cEj
%O>)Q*=BR#.0Bb\p7Q"R6=-tgNd/[&P$^NY!JrqS-N'/sO1XqC0gbABR&immFp8!fjG3VJ#2]+m5`K%$:+`,ZdYh#TW%Ac#d>@pqt
%JU#ae%qs'kVOu7X"E'(&_0M@,:@i(NeZh)6+O40:dnMJ@a&#>[#ot7Sq/Bk:_@3HUl<P>Ndkt/C)X3F&pZJk[677:l5X15CIVC-9
%4tGY<\f"@(Ya&$//2KT[LE%I,[SSGNiU0Qu6m%rNHA%Rj,=Y!hKp%FlU't(,aY6+R3?Q.),DXptKk-0e`Dcl5R0VBm`@7/b9e0f%
%,k<5=/8<qQ\i2.d1;_\+XG4lB9([<3J4$C$H_ar&p!&ZCH9YsR=!L"6ZFD'3JV9p$>D'=NIP%L;)r(G%"8<fSVkFhL4)ALNq6`[e
%]rD<^Y+YZf:kg5NPiui:#_je7'Jrd:;QbiZo7NE\67g`Ao(C.`b%aX?D33N6$S<Q<)3"DU#i\/$Z*r3$rhaJS>U<+R!bd8-eI/e)
%e,jCF8ML=j^r$0GN(E]GP>Jm^PsqYaiE_<^%!'AmWIaI>";5rU:E/n)kt5J?'$6$@L<6E&-1SiP#+_&oE(WmAOsRs7B5Ub7F%-Bt
%-l*,lqZQ,:.kR&X=JsNBi_@2t/Q=5('ILiA<th>EP(r<bj@cJ\#0NZ$1?N9[WF3JbiqH'Hh*C3@?-0tsDgZXLW\CsKkepuQAh34p
%,fCp96'Aq0f(qFTZbUC_$98Ei[p\th:=_9R%;uRY@N)iN87s=,2gA8`c:3I^Z6q+):DE.8,oG%%H=^"YB-^pJZ#PcRCN(`6U0l7r
%[1G3g5\+q3@uRP=QSu^Fg`o&r80t*q9bA)SMTu3s#j@(2,bE4\Wr1@adi1=F$M;KV3L09.Q31!XYp*8%@spZZ_)s!\b6t0U0fVIU
%_3/oOd[?tJ-#J?d7JbK/0'n>7j&2!$aSa"T[nn7CAIW+PoN&1t$>9Id%ZN#HZ).h4Xr/`q;[FW*95,[7Sd,?@5,k>V,8%,O9:rfV
%Ub[_q*;TnSZN4te38n5,]mpZ-ATiaIZ#sC8J9Vll#j;c/3K9?n7`iLpqM"pS<RrrmK*>\p+E7N?Me\4b*-792m$30`_oD-K9j;!:
%!,s)\O0f%sckoNJ)!"jqji<6Q=Ye7+.%D3HUfp6\-4!<+jZ0V7UL7$a1uW7f8dPN<NQ>eN#W2T"!F$/'H4q%]'DP+7*Kf'a@QEH%
%DNc=H#o"n@,aC^@UP+.OGXg/gg6sH[i-tf!GYK'n6>&V<b*"7B!4blb3riMn[N-Y>JSp27NP?0a&Oq!c4!R:n9Wp_K)Ttg:TE/eh
%VB7iuI!1[`/P#n=:mT5BKQh;_OW=lQ8%$=XHpA]d!JCq*d3^??##gtSckKls_+G-D\f8(C?k0/PI(iK"$`m,I,Wp8R2K,Fq-%J,F
%*MZ`G/9@[a*[Ln6&jYZ8P@26M_i1G5LnQ#JOM"BK0^aU34kPYLcJ1!oi!LnH/soK3ODpq>',@S)$Q8(u\V[bX=%"TD?98IM:-6im
%+jb0:XcpcA<,r-qB)tMU(C,>+if+ZgCFdBR7&n,CZ%pUiIn?K\M^VECKZf:_>3&O2p@[&aE18rMSP/QF2Bl3uKipJjUFQ3H.s[lq
%:P<)/1R*QtN8&=eGWXPj7"gKj4[Y?q&P;A<**m#!_-j,@C8:jiUmPRGr/RI:UCcr=.^_?80"gTcJic!E+1dV>enT4R0)Y"Ed+%"H
%Y292WhJ[8fC>r+n[gHA52G2g=$j$#^!<iY:TNVtp2$R(oTjG"9eCTA4CW"$B-o;V#`Q",^;M:,Dlm8tk$o#I*#]m;<5QNIV:]iu(
%6fut)$@!o^!_/m\99?SR8k$SF?Z+5Ha`]-LcT']4JZK#U9*c.cAs1Y21VR1Fb5*EMi>O!a@j)M[/I&ZQch/<3;hP+:[rCi;0k+l4
%)an^kNJ(khjDNfcR33![$1f5_7p_jRaG*DWMafCbHMh>XoKiTA"]nl4"7hs/(a+R^.8Q+Fl34baN&h#-Q7Ru^PSM:HoiM99*Xdg!
%s%5imAIR9S$0KZ;_LY>`Hl8Pg4#KUAPQ[Q"C)qWdQ"mtN^0qj?PmfF<Y5+k)Lih'i8Z44$Xd^nr>4fb>G1MN)#0qNFA4GR'LE=L(
%0AJY.ChC74!6$@`9:EDu]HoX2T!6/f,`.-qnAna5k&eJP`U[k<@.R9JdK82n"eZ0A5$o.qR@WY$R)cuJD#m+>&UpEd!0*gM#qKsO
%f=-p7#aYtRKnMc+Xpu^!fb1MVTd4.95"[+Vj5i$X.%^!$;r<1*ifI?AKr0]LlP-geKhR2maeJ]27_QcU9nG8Jq)aCO=t`*W!Kg!6
%$2AU'(Me.9Z>>B^JLnd5'm`4H"h^ZiVS6Z'pT[?2_=Nr)9YTTBEk#u>YH:i<G"Oe\)WghH==AM__d%*3Z%+,dehbSf"GWZgl!Er8
%1f2cE8qf5Z//FH3ap1X4e8\99(=NmV>5=Nl.GkJuP"Gup"R`?fR-g`CLBru2C[c;DC\/='A36IPOSo?GILfqu=_SKeJTIS@BPE2L
%[uKM21'e(Q1[(5S8$s1n3'i\V97EbbWPbS^kd4XA]E0N4rK3Su$+7+jrsA%Ge\Y^!R>EPdMFWY8&sAFZ,-&+*.1nr>RSZ;.V(L?n
%3_#*6IL%[PjEK0=5U.DkLQ$&O:e6bW%5A*>ehn&3!1jV$b\VM4;7(sp'om8%K].n8bR55b.k9Hj/FqAToF7[2c2<,OaqWPrC.-Y2
%8.M3c[9.WIr9;A4_ZC+[II8@Oc!='U%7imr==HM!%)>]7>]>]MH%B_Y7\(29MYftfE$JLAbbX7<6k5-:>'*q"M[5AaG7=n)!EdC-
%ca%78Um"IiAUk$B2qB>&Vb32>Y"fc'JrIK"2.W%sil)&;%nl:hHWqq\&1A[oSWUR?+@<%%A>UpE<AJ^i`u\85MJ$>i)j7_jl]Vs0
%!A?`:L(u/'3?RO,ef5be_Ki=N@f!"l;?l9Cpm<0H99&r!.V<*j$K-cLBK@FKX+`OTCG-6sL/R!h:"5MCV,EYmpJ!#,U%Hi9:Htn6
%8Wq*3DU>ESW1km$'cd];<HHc+Ot%uB$&<DOg4;^]iRY"sj7GJr&ntK#BL./AJCJSE4#'t?D8be5JR=lHMib5PMm6A(^Q:uq8#P$)
%Xt^$1!qBEk:@Y(r1%q&]8=$*J<DYNiiBXIS/r1/q[up=(]`\uuOL!+:Um,JkYkV>m5pTOBj>KOiW`8,rE22"d1CQ\2B>o'I%!ptS
%TVL14[^BV1=sF[>R.,RiCS["MA0^.XA0e's)iGX/p`r+\8a`&?)>0@T;IJinFrG[o(qF1@9s]t/+9pKL8kk*^\1BYDM85CI=@M`H
%n.JLC;F8Jo6<9>8AL=R*alX9s8gi@#K#T)G0^tCMqU/:)"QN_Qj])"[)?LXD\rR&k_Mn]K8O240'24N7fc<'_=ji(d@.@*m"/<.P
%FAUAOM%CE/!8VU9BGdetNMnO+I3oMd+=-j%EC]IS;\"Y_?8Lq>L.<7""<.Ru9M'XAl6LmJa?srTeuadn.=.<EHK.s,6'`Dn*%A$%
%YVG1n_PE#l2[Oi"5.Ho8G#f0$R"'h=`q<l@#f%)63El*c+VNX($EXlX1@qi7<R'icrXp_bB<=AM&>C"UfpiB,`K1NWKRm^R4Ak6^
%_P,[O)1`JZXk(G-UJS#TB[JN5W@K><i\-He'r@?l.-)iaD8D,Tr0G.8\#h*Ak#=+pi9"Z`!%^c`FkK)IM9o1:KFF0UD]p4'pN`u9
%Y`?O[fhMP(5[]M!q3EaK`2TJmHjq8*NPXmj,gH_QV]^j?(sA^h"JA>FgF>f`NVj-SD[XcV-R%J?IY1\Cf\oAer,:!b%E$F]9>X>i
%GY*>)_IYtVUIaAd7JdDk,;O>"W_)F`/D$b]j;TQTqEhcV/BtQa:.ZlR7?cp1^g%!X"!K\\-qk[H=*Js8l"Cnnn^56=b.*CoO<Xme
%(]ZRhkIecW7D18W<S1B8?quGi$t1VsfH[<0D13(%r0l+lGL'peXB%g+Q]?nb0A=.OPQHbOao:G@$8n!Ge1-&c;"CNJElJBa0e=I"
%[Cl?VV]Z#+RBm4$(g[VdWlL<4L_6>KFtN%K;P=i$O`)OWM>(P.0Z3h]MD+5l%-hQHV%@`(nE0qLHJI-L+4dp3S*o.e*MK.o"l\]`
%`HVY";LaWrneb&%P&90cK7D4:Sg0<[M)MG3j<;7b<-MlEp8De5Pp"BqKn_.&6[h/YbRlqFnDb[e`nT.pj2"9o9!csPj5JK^NUKI-
%&lD?V'lprPDm8W*Lf,ASW`%k[ij%,J1EJ&6akKscnX?$^Y?Bi$'455';rQ]e+n.su<-X_+Ros1:X.N:Gn9@'0%23_)&8EOReVFG@
%?'e.`V85Nd(:j'I(-L="Z0P!N?pqQNp)J=IOcEt<6Ol4`^04@>'FML#O.dA&b^^M:]VlJ$&`sm2Peqpj>9SO38+_"%9>'d/p:J,!
%gsD8BTrO[-Bg_;M.0fO3qMoCI?r\`$GB>l*Zbh)[LRBn]0qq1F&/^afpQ!UWDM@a9O!K?0Q1rS>/uI*F`-Z,.#9qc3iOq$$LCHt-
%iOq%G+*OekiOqmdJH&[(4(q+s?B84WP*P[)8pZi*e2(.N44JV=Ht^TGQ`ub]:TT4n6taC(7euIk91$>IR-kGc$C!MN[Q@`F+rJu?
%fc>pg[,E'(N)a](@25q,cmZaA>cI.qX[tH2@_1l%8;Js0+hBJ,17Sl3mL6soE4m'^4+dgI9`q9)Hm)RmNY0_\)@S$R-qniT%\sJ3
%VRqCiaE/e=)geGDIN3XE$\P!)8Q*.?<-JNhT:gf"+!gR]<bLC&lQmd]3tW,/?J+\u(.u1ggRS@?0^mR[[Q@$6K"01`)-E'(FZnP$
%,a&0_U:\UhKqsT,\iW9@qq/'uh*ES+6\XsR!;)onU$'$DjLQ`3glV!M_#K8\IHA'CaqAJM.c28nPE682VRlrgP9Z>sTt:D#P`TAj
%^,n\'/b8B?q<e5=-"MBqG=MZ]:tb:+6`+=Rg$Sje7,ZQeG@pmc`VAVPm`r&TQZm5A]/(]aJ<RFgh&0I3O8q>=]//N'1qom"1BiB*
%dbR3PPlIn!]0dGoET@M^*DsMk:,ldr1LqP[MCE@c7!Bl4?"(?TN<m$P`b]i)ZQ^'jP2."]%$Pa2l0]+'-+s24mLGV&1(d-&7gQ]i
%6VhnrkW%)HNp5s?M<=mm?0L]M9<::_6?d(0?eUs?m`r1C`)>jf+E?B^(t.5CP!C>Ne(lb@Cu#HQ*NG$$QU3>p:nN%-Q0jT.Lue(E
%Z/$"SJlEE+G"6@;#"o<XSOfhbTt:sm*U67@f=+cDmc:4<U^P_I'jK&=$f,+GK0jH'4WOf'q@T]9^eD0D$pJ:8iu"PXQ0ljNfKg]/
%A\5k(7'>_cgE$!Ti0l1N*U7"-5$Ze//FfuQ$B<^+OGPNkmD=#O/.Mt7't-1s2cOa+[QD8kR4d0am1*6W9Q)P"G60,EXg6ap9N'O7
%[(ZnZDW7?@Cj1UK4$Kamh3k]O?XBG<K>_k+f@/OnQGV#**R`aENCsNe$Jc^gbQsdtU:ULQKA_+n\iZ&4_*W@ts)^YQ#9X<2.kGdd
%5\lR>=J<?ZXqe>#&`"HAZS651\i]+=;TXm^mVmK7EN[aG).JEAY,AlfKEh*`L$m75h4\4G7"W<J_SWAdh&W;SBiXrrp`)XeL$oN7
%'[\AMI!7R5"=UYHh&0j`f2_Y7N)Qmj0sQf`+]Iknh]6?mKjKK%c4J@60e7Wq;#fU*X*f+NWb&`%q!JQ2pW6rHq!MP`[*4CYI!5cA
%GcO'rq<eg<Li(I]#93baV[U]8E$K!b<T1O,73H;Z!284X-T*SfVE:KTMET?-(dO%?&U<_OdtMI:B^WCeg<d1]_'!]okI:o6nC.mr
%mZ92ZP*X70LRM;-58Ac3(lPJG*q@u.AAYqI6>pKTn1DEp3MO!8QjNMPh@:/c^@=O.B:?-*7eCj8\%GWSH96`jJrm/D]c@5BAj2ru
%_h9]J>1i4MGE<ZKOPA0[;.c>ih%"[f8F`_@G.rXd$b>*I2?#M[a?(3biN>N]DTlr&X-f-)Q,sMJVQ_QEP,Kht,I0;q+l<pS5tL**
%?t7ME-bj1LplM-YYD?JpNaYf+B>@MI--XHJ+Y`mE6.OcK'bn%R8$)CTreGT&$g8j%P-@89ZQ4&Z$q#loChLj]U/a$,IZWX3Eg@<D
%*FYEA]QTTl-Z=<?4$rd1LQ%)W?uL3NX9u3QlH"XaW=[h#G4dF#P(pnu"FhbSM=T@dTElf1?9?UbZ!q:Q@kk@TH0n:6d2qo5iKHiB
%<LN6AVs$LaY3Y.Y=dV9[[UW`On?-E4'80uZ`"O[r>hp9X*h>MdB4UCK+gs1CRCJ)GChFUAM^uG`L-[3l4V]])Q8TBu7_EnhOEPp2
%[DN/7#e:>HSKZfT)ch4N@,X+RpX^<-6QD8t?/`1I9NDE^XW8u$R!=nI%\UCY,2*c84&`H_/$5?c_F!U8>!(a`9qiWTg-JEi8#<VG
%,kog^[!%N:Yel4I%]0C18Lgh_,[+TN[!%3!7pR%b4Rf10(^dC9@2-u='j<]OD]34b>!#96&==oK*O0B7f4.uG"%Kb%5Y!OSUgEV8
%b\@Ai$01iHeW.3RKijVj%X&!`N5i5JL2b[KltPhq0F3VHT+V5B&uY9U4uLqK9"n>/m3!!#SAK#RL^P0h$EG1S8k,DhC.G=[pecaq
%c4Hc%XH;/0VioJ+8F6PnQ6E:PW?&po3*]#ALjk(i=%Vd-C%Q#bPM2Es,[O%/E8tU$?R<+T=.jEY$E5%^@<!"u;EGk.SL<TlP1gf%
%_oEKe4%Pq44f+^S,i\),m0j"tNF-,$1ISGWY%P,ZpRB[NT$\#gD1k>qaCn'u20335UP)&!L!bpDcG^Mf4.+R?.SVr%9En3Q,6&&h
%m3$!H\l.7M<k\Erda!B'R+XqR8isoj7IWI:*Nl"cc`<RZHj6O2@no+<r5=cMbfCXXd440]9>=,t`Gd%o4'W7@F/Ddf):qL;AYlai
%K]ihVL!gI_Rs`ou8F<X\*DlaTUim:W7:MsuK0BRCEl!sY#HC2%2+P#s&8QMnC$d#Tk4:oT7o3e%>XlALphJfH(LB1FN)f@W?9;JS
%S>JO?%u+Ymo[5.k*SM]VhMB_m"40%TqC&Hd<@!.j$E]lh-)Ni$[=bgo:"RkJM<hAn[H$5]T]CpY%SNA>'hW42G^UnPO%AYWW%gN8
%P1n<)7]Oj&C1ipU)sdp2*DlG=\I].J*QD0J(.Y0D-5N&__J4ju9!V`2[=]9V"N"YL4++Hah^PZJ:^k8[=,?6s8AP':@QTbf%^Qf&
%&]F`O[n:HAHc%_T*>@2D/dYL4L"Hn74s;=)`-142+ACXJfT*?V9Em#cG'HI4drC)oNfH@[?km-4nkjY6ULVCbhb&N26u3*\b7Z5,
%&DP$l6aEX_Crb7W16.EOm81pNbBG8@K0(Q-jEVJL43QVdNHk-7G47]C5@&O$:ioIHMFq\T*f1/o`=]?q`8\$Sb]\_[C7=%:9JJla
%`9:9im:ZbefCmF3L9^5+oZVK5i-_ca7a-&8"=%BH1>@r.Ja.R"Ce#mY1635`41YU[#:dr@KHH8D)d:WDi+B?,^F[TPO:WG11>>CR
%4PbKSAin3,#Rl5=gC`'=F^S]k45qM&XVhie"@L5U/^/C.I+%&8R-dH7&\?UNgTfD%lXn(OL[m1O2R-o',D)$/\kGBk7nA;\H6[#`
%+qP>NYV=fDkDSE'L"VJW7ah3rfo@ltj:X&oG-'4;)ggPP_fl6W0cY5gZ/2Uh4gc:G]APK*W9qZ#_YGY1Fs;c[:Mn.EMI]7p7joG[
%*`Zr:U6#[of9"\ri^=,9A[Xu"\M/FIAigb7ak^gTCkp[T?!3Q^KN]XD4gQ0#_4DSZgEE+NORKFcg[V+f:3l5g4tiC7`,!D.1n$X_
%f8ah)FN52,4#0NM)Fhqo6uaNmBOS?EZa`n2f;_WJAFU]IZQ3tQK`I/Ibq#dDr3r9O:+i1jT2B>bdb-=RX&.Q5Uk!10,AK<7Fqb^+
%_&OZ_/1Y4qgeR(<\ore_%Nm1$Z)Qf-6F@O5oQI9aJ_N:2mp&4M+>;S<8+^uCg1%5n]q#Q][^+?95qf[OR$)$EObAP4D2$f+'LoJ.
%$bIF9LkmB>U:2AJKd>.s]cDrR;CR<6Pd*`%ab\f6GNhm$G"gN-eR,e9dbCnuo_o*gOj`"G&,C;GhbX:'IfJSh(YTK**eNjq\@hSd
%pZOY^lH'^)+"_udD]/JrLECp6RfA]7hi=jWhRok*IItMLQ\GEUd5?FOYZZAMi<RWe]3dc"i9%ofbi7+'po>#']Z#*0ic"iUs65$=
%m$EE1I(oBZs)&T*o'a<iqSNi87/4\E9SE$62qV0497K^!e&-O5*5?qdC+K>O!\]k#amVOg8A9%cE:ft:jsS8j5_4Z)QNlqFn:ibR
%0Gk92DkP"52_;]?FN^$77gHkf*.?d).j*F]n\_R.Urr"!#61KceFV4f<5.TK9Es>B(6rf_$i/E@qHJh^Ie%\g'6tUX=2_J2@]$4@
%oCeH$q_jJ5M!Q?%H(L)Y)#a^crm+4Rr>&gYiVAe*+)1s:in*D/9"P'AU>4nrfD6majh4p1i(t-/=_5ELh_3L!8)_H*Fk2Th$f.24
%2)C%YXF*C#lSj&S[dE0i)7hi#/s4ZnLeE_\W3\u0RXR_k%u,;qA"6L.Y'l8Ooj^6Qed\7,Y`n(gLt%97be9-Xr%Yn_D'+t;n8[i*
%<3@<Q`#@n%10iV\&XT<=jm1f+3<#9p?i(\tX1-Jkn)^CFkH"/SU(R1k:<[8E(rObdH_[lZ/"Kc3]C,R2?X+SC04-7YL'CbeX.+V9
%!F_GO:5G2c2@S,b("'RB5P<(5##Tk:jA5U7`YRRt3)\/WqYSUIr&W#.IJCX.WY2iaooV,kL\N._BN%A&fsetYW)rCd"]7$9=!'!a
%qK2a5fKQP;cMLY"BVk)s''@d!<r&W$!KJ#;D6$4!rr51[T\;/RjmpaT[Tl:;?oVG33.mq)gI'4)7RGunS32\erSfO(Wi3%WTfcUL
%lVICI%"eJNcH#M'l@8rO"s:9Z6lXj'@KrpA?0$Fg_\rCLps3/eaLbQOVNHB+k!/kAQd`:re;#,n>lP5]qr@-/J,[FKM^ABc[`[Lu
%:S01%qUbPr7K1=Tq#dfqJ%3$q^7i*.NVfd:eRqW`SY!O)>0;!'/jB9h`HD3Apj^o1^0^@P5AL0O\4mARq>'gP7\BL!b9Ki\Hm6?%
%=8A:jF<Rj\$(^kQoYpL(#p%FVp:E,aQDZs]\t79<o&-[^1Slo-Ra@+FmB-h`5Q&jujSJ*2k2Ji/`1tLmT0)8a95aL=?^tH;RF&Fj
%e%=o,VgnUCe$IZ0Nk[N^GOP1CKO3W25>D%7IFF&)2ci6!S1QBhQFDp/r9Dk\W/^8A6h^5&>hkj!H#e?2o5`!2*Bq-:5$_EBF+&@_
%Z;%/+](Um)I=$8uWGeQ0GG[9j2ZEE1rG_[Hq3S/D5B$*jST73'4MRrB@=-he\Z=h]S$OP6>^::_ZJ"rrk&'"']>e3,H^iG#I.Q)_
%IOC>"H?&hH>eXNN*FE/[9ph1EdJ[B_V\e*0j6/&3;nM>92jZI)-d082*P[&GH8;<eP<-)BrUT=Gr:T0@e*C`&jak-tQIkLGnF:/7
%Q]"Z%X5'<%Icd]d^+QVb.^r2T3B(=,?="Z8Mos]hQ`"aCb@PS.XNm0CrOU3In>XWU\bRj:hrX"4gjGHXmrGrt:[DT$c+1l:S"%oq
%K=T6$>@;f,T?B0aUZKhFZYs.j^UX2Q%UG>%L=a3;4^RjTWq5BL`FmAd:Gr#p_M)CmpoaJd_qE;CPNm\#k._tp]QnREHuZO,GPc59
%:KVKfVB!-"G'N.El,+4;raLXtIG4DIHgPtOo&ZA&oilUW!Uo\7fscUhjeeGbWk;Z0gmfBlrV9g(0/&V-;^Q,T-TeY6Vt]Z5ji*_T
%j#cq;s2hG?2^(!:c-=e^j-/R`-c]ju*4k1NGL`lQg^'!RH?+:SH1gX@]\7h.*Z75X:@"Z;2s^+ne.(br05n;dQhR0"pJ%.>HXtT!
%d&?t+@4;,!LY#rjXW)WTEI$Okoj[d*I[;t4=-og$f?^Aj;uZE.TCIm^I*YeU+/I<UkX#>pFEHktA74uE1*;XjdRSM>EpT8"QuFSN
%WLY^\G\C/OCVnKme$a^cqI'$/&)3U6UHZ3$^1%!t7H=BS6\Tl7FaF#OI!Ik$%XV#"iuLmX]g!5R0ODJg/,o3Ca/</?/b@qGR$ZaC
%G^9lHVrRC1eW3@^j?Zs2dl6"@S<!pRME/lC^>(T0E_?&\k@Df,jg2'J44!Kf'7."J8NsnYU5`fPQY/fibN8b!M#'7-4=9ZA6I#AW
%nVbkc.5P3MgstK"3'B?p'$EA8Hfj?\24MsJGI`n(CL?L6Ils+3H$T)Ze`GKGNt[JF4hQNnC2E@hfOI`a%oe.gYC2h(f6b*"5(\17
%8TeP?^:bo4>7P:qn"<;5Tf2ZHB>I?3L4.qrO0H3F6?;Bsh627]PNr,R-N8Qsp\ur/p2Vhlc\0R`b/&/W!!V-JN/!d/C?ke9F7pt5
%Wr:8MGSJ`E%hk8ZiFo7uS[jZeg.bCR6?)PLX5f+rjk2T9ZfT:cT@*L2G1F@2-Nr&hhS8`Um.ds`m.AQgZf@82q=<PAoAeF-H/pf?
%nt3nT+3j#1\'HN'35n-7&+6h<flsiQI[lms&G/,AleN'bHtnFX7dU1`n=asZ1XoZYrjJZ3hth3<>jV>gT2N4IOE_i\]K1hSlR-f:
%dANm9a?dDK4J.da`5d$YQP67eqJs`PHF^XO1tsRdU&PRl9N1k,o%_Nf@mX7'9EEb-VfpUMQP5S8?CmaZ:!:jEgKeI;:+qpR'Ctuq
%NmCHa^RUIY4a;'MS[u>DQnUbFTGG7e9?tS^;o=B7eZIl<?]KW,Y_Vc]H@:/unZ\9+GL`Mrp<IWsb0.P-+)[^XnajBXjOKFmKaI^)
%n`'3;o]JeOX,l]@AoW3<H9Q$FrTU#ii"5sq4\9]Ab$J?":**=\b*:0kMYlC`1JoJn_nL&J8!o,g"Xe4`7FAj:8Lhk-AdpkJ9XuQM
%3cc]>c[k8R9JA%/,St%?U>#WPPXf-mS33ZRPUW/kF&D()PkT1O4N^nCo/k#^RA<7E?*->k>a1GmP`%;n1P]F:+*oQ^Uq,.PXo;FD
%;,/020$9F(*6PG!cR@$]k1!(nb<'Bs?-_P?KBGtOn=""LnA$I_B-JDh.sC^lNs`Yke%^>2))5R6^Ln))+eE%>4FT*7ccuR7*Zb(I
%*DpE\]lk4*(1t6<@0gJY2X@bRY8r:&qt!gRbi[X>1=qhZe6/is>4)'deRi=Y;&O/U<h$MNmolb$,=:;V+MPO-6S`'UIVVLJTE9Z8
%2S/cDMXr`p0Egu*R^^[Xc1ko0-Y+GoVn\gfO>qK.=4Z$mL0EfAdsisq^,e@Tp%ocZ4RUs-5.u3GI!L%CSZ?dq$2&UiI/V_Db`0HF
%]:/"TKS<m4o]6(g:p-,IQWjIu%Lij.c"k+ggtnG:$tTW1H%7O'AmW\P-l]cV6pfRd/mjuACpPfZs8Q\ns6l0LkPW)ejF:8o9T@6`
%DBO-hI+^I-k](V=]n_O6DXqir&WIl+'*#?,r#X>^GB?"E]uOCO^-mG0NnJXTHuaN3qXR@pLOXTU9i(^WIC;d;n>u9M+LSuf5LE9]
%;J:fKJVSF2%@PRuD>bII_<c@f[`-3TI;h8)s!RGIMU)07LFW&nlLar'q=8jS$$(Qoj(+@'n'B"c*@_;:7QqCYihJIY%l"W8a14@#
%A>$K]DiXkCn_a;(s6]l3E8T7;*<2Si^N9>ISN8Qj@Ee9!3W;+\J)A4k6j2.#T1lU;kEt_03e6qZ?S]ZLkEt]Xo=_K84`tIe1D'tB
%o^pG3&/-Z-V_;E6]NIG1]Z?tp`KZq"p5<5LmapRRg#XlrGOb%la&gmgJL;gq'qN^heK=/%C7([:Dm!DYF(sp>*'_1#\o6J%>29IF
%kYR`'UY/!mHcYor6hX(7@V65)llhi]AG<M0-5_*9RquTdG4$[jMuJn^YEm@i:U67qr$3B&Va"L:o(2,-g%,!'X6#780!C9g[`5^f
%s4K#biAABAH2PFTk;V#IBEq&NYWTIs<>[')B6fgC2UR"4G]q,FRa4`SAUb11\^T>ucfChj>a=tj0)I*Lo@M0LI)]Olq-U>3"Yn-4
%ZMp&YRF`,G62B4rplF!UZF`JGgGS[ZG`O2Rce3`RZYl"UYg_<eI8d/Pj(3DHb`8%CnM314B#i*]G^5q%0&/#;GYp+&r@bM;AY3n6
%ZfC-WNgJR9`Q+2*ZSrAiDtNUBclSuQ$8h9t8nma97@tS1]@9N0%5opEjC$l]-Dl;5b[;+]d>&TU@RhH.Smf,.VrIkWH0iUQ^]*Nn
%FDD;#4rj=l@+k:lECOEkO2Gs,@bTk[nW)5']g!X;+".A82U2S%NsgO'%eD`V0?r]R]3;)H)k<X@?6-ejr+.4SH#-LV'2YUhWr0Ob
%#nF\>I0*:,M[<(RHtZSSCJ#\WSHGWNr+k3!a51U8bEjm>/?c;tY*L^fWoQP%o3\ea^W/FO]?K^']F=/]bWJq3m.lD0k\b'0N;pf_
%.s-ZnYsX_m\7S&TIQ;g2.A'A-gKA1C.@kalS<h>u+5Bk?VCf#$#2p'Z_;C_(@g6.dA:BIkq_8TE:35oRN:[DR(fU8bq_@g<VL*!'
%IeI9qIZ/]ERG!WUq_8T!O7E+XTj8a9arl&tpTp'1:4:e)0>uE2an>2W(RM$uEm*Qg[s"].^UNDo(H:Mak'm=mWSDann?+fpEV[lP
%l1N.Vn)<IGNT\#=4e's1dF5_m>k<%=im84VDjGm`>5n,*H#YV$k-jjYY53;s_39!q0[EZYo@VUm@g3j?Z4C;K?(Ois<qt>8H8:&r
%jSEo>=a%?f?HceK>O:8c/85;]RaA0,#aR<d$C\5_2KiqnQ*`X9cWsq2*m4$EmEO/l2eRC>*MubS7R*=#;qPOSg8&N$J[fI`<oc,"
%8gi9RIlR@JYN@R9HVNeL_5)EPl-,[a[3))qh@TL3)\0dSaKou:RosoJT(iTu/@-R-qmIl4pu_*mij$0<?e3MMQ^dGa]AGL;D/R)4
%c*t7Z2E0OUf":Eu]Zj0T+s6]!mLa&39`S4]mrSAKT:7NGo6"rbcHXtOq)UHAkN;*c7o.?=\Bt&lFJ52RR=i&s9j;#sQ#8ghFT6W3
%q;TGqj!i%FA&$>Q2U[0`2hN!0@J;&a'+="7KEgl&E@#4EbSaLA!-'<.fX]%t]^?"I@lM]sZY[\h_=GA@E-?X"djGM8?+rKd3PGFb
%h^<[Vhd$2-2T8=kcg>K':#qF#R!gfr5DQP(rdoiJOLs`(GrOUiph&ucS5VAjC`Vk=X1]\'j0Qe&gE&LbSueB!:6$\>!i)Z;[Ep8m
%9$&r_?!`VhI*18XobY7*h(PrY+VC4nh>*8Dl,I-:=+@HTr_:HZH#n'"o(Z`UF]"/@T.dF`W>h%8Bb0?2RSL6ea;s-7SZqjKs7c0`
%Al9JJ5.R_N%23]SQ=p#3'A_JsB6VlP.d7s]niW04o[tZhe*#1hR=BP(&"sV\Y(tqD>&tA.HQc/_o=nU=?7[I,53kGdA&GHsll@Xh
%oq0I*h/(gD%SaPsOX`RpT&nfXe_)?3#bu(AM=1=0^/9;tcplEXF5]?l"Q__93qF4M41jBmC*jpJ5A^KK),:AWg>a.!:YVHYotg!t
%%o_V!>Ah<V%rT/Z0LbU4ZpVfZI!'c6l?kSugAdg@aQX2jrBD;E>8$M[l1J,uVd'*ToAR4"#Ksh'N`225HoUQ7>+,uB6b&d/^]?Io
%5afs<_`o(Nd=XQF%IU:Eo.[c9E9?1H^Z$A;`8dTMIY<MF1Y:BT5nZ=mK\9SGHOe\?4)eROZY8tqS,QA5\'H#n3+]Ra#7k5tmetOU
%I[lmsJ?j/+LXoi(YMZu=UZm<:"Nu'SJ(nN$\!hPH#2`pEpiuRk\6\NrK?)&X1;Ui^H]X16Nr^QeiOhiGl->XaW?-5L]DmCI-6?H1
%h7Kbt",N)p_>`5:Q%2[4-Ks2SM$A@[8Ha7,S%W0DAdUWr6/'f*M4.78G\F_Qi!ntlVQdg^\\.d^l.$:B+8[t6Ftk/%EIIc&g%%A)
%qB&4'mqT<,&bkb&gSHh(bK\#Jf*A9ET#O4*R$ZLb/@3)4jt\a!1-;:3G-o`Z&70@,,Ok*Nn\pua;j\9mE6UU.f>jEi%JJZEEAtf,
%+REd0Uto5&Zg2,MlnIPge$HCVL@_S6F\]2hQk[^KqLUel+T:9J^R=6]5@;(%A4Vr1Lq`oKo&?_*$6a/UW;L?)j6=PP?U"DGMq=dG
%ro5rPT)WbTQG4_Aq;j8fkKB4DJ,HNRI/;e,c/Q?B55a?9r3ogVM>pY_J%kdpJ,@"V:]HVi^FW'bpjDU=s4o54jBmE2onOVO#pHgV
%9pa;&CMir*\ScC^EAC<q(eD!3o2!%^fuBpqm*]#"rR3YhGf$*Iib4rRPO)c2AdYBZrp;2!T=aSLg+J=*D=*')Hf=2]]m0%GIA;4_
%ep@A__[hcV^o5A)Na?/iI.[.@9_=7^O&s@T::!6qYkbYUdQD@bdoa4qT!gi9c6CNuWG@sXNZ"X$*T\0`?f[Acq=c8u0Cf,jIkJGl
%pF:p%36Dp(&moU"`&[cTb\MYkg;Gr3Sf3YSQmULj^dj'nO7:HXcJT4=BHmEeCinMb^,oYhl9)(`SSAs^'AiIm$t*9\c%GDRD9"s`
%lt8*+<SXILf))ro2/6E2F>2?bnGBjL9P;W6dCaqZg['Whp\3[`\+YgTSQb?/rr$1X^RqV<:E0d=DCJ$oH8/_Dl76r=D6kE+IpNlQ
%[2>Vk><s4QlY_,qg;37LZ?8'IUIXoZ=`:V_Ni0p8pt!1,^/JhGJ$sW)So]>ZgYY6ni:!sK^3fD/#@[/M*uEi5k@PShdq>\PnFjNE
%o.Ij,`M_*PVaI":e*9&afGSi^muO>s0RlUliE56[E77m.gL8@r=dQ?&0mLG+Z`Y*+e/<ORg<QMAUT&Omfu1-kGr$aL>']JGa=Z.1
%m<fSi3c;5-O`p=h?1&e<[80^K8n\#b3#V)#d??(bX51Dt:KFnIFG^a&f4LT*=Y""9F>ET+UT[:.PG/HQO'.O2VDHS1:L\c_be)9`
%M+W&J<n3]H:OUf'q).P<h\s/R4LNK2`=q:(G,_b#K@kHuQ-3O][#=DD!\eooHC&i%*f/Ge\,!LYj^q*ICjnF6\2ZNppU;2<I]J<$
%Xbee4f&V<tP2gniRf5AQ02MW3gg/e?Rnm_,q#!L\PcPLfDt>JaQWLaOqBt?I@fs:1YX$>Z`%F<g"jEYH\hC;G+O&Qc\$9UsZE7A<
%c&pa1^VW'&opBCAS!Eq*ZBMSqK/766BNH;#?_+d5LoW9H6_G7Y2:HaHqCZ]oVT$!dK9"Ch1/kdKnkVsTp8i=o_1]:Cfd>2<+Ga;]
%!3"\XQ;_/nlf33[Q=VYg[r6,B>h=8bg8mATC?06F^97(<T)5-]M0U"u_[H)!pmA[RV'1aM\0c]"_?Aq;-g5cWlSebGdtU/,gT^L_
%hIXm(c+DCar$frD=8"_ipLs,ED$M)5Q0m>=Z]Z30lp#limhsa;S(&OoDq(M9M7P[_FnXtW`T#.Cj4DJn3A1ej_IKg)^Ya?2fG-Jj
%e"O%T=^]*U[rbGZ1aY@\`Oma5\+K7<4\[AF\]1_`gQ"q:5Af_=.[0OoVkM'R+$Q,0WV)"OCj%*bK^se<VLpSg6uQ",Yk_^?%$k<c
%j1Q7oM_/@sJ"PIICBu#VfM21B@1VoC$!uaW\\&&sQW),hI[:Mq4Z-]0VL6U14N.(^Fh+]tX9cuX]OeiHmPiVVUTid-b6MfHGk1-[
%%K:Q_]@j8r;b5EWZ-A'`'9?^nL\6MK[W#pQBMTTsfANVj(YER?CKr\_DBg6ORspf]0m*4Jn+(lPgI+N\q)c=`B^/f=<d$<V*K9\+
%f?TI^G!peR]CdumoiTcL/;[=9P2<'S."8lSc<EX&41.Q7.X#5CmMjh'cE!pojk9r'^Vp2ps64L3C)SSdQ.=;6`5W7EXQ19WYK-+N
%b/fXS%8ShO$(-VW%39;(.$(BL\A55jl=Le-d?CXQo&B,T^pS-'o]aK>c2#tXf6u@H<MR$,)#*g.iUY.3C,U;+p,m=ACBXR/_3pEE
%EK^p0=?c"p_d^jdCi$5FYM:Vu?5tM`.LtibeYQKg/oGK9Mn&-YijB;]qoq86k!Mn.T`\tMboGPGqqGHrN^YV0_ZB-Dfcoi'\_,I<
%ZhX=Zo(%aZJcG$-?d#dZQ<,`+-eI@sqEN":0@&,XKQh1scPHjkrj;T'S',D_hP0h\-?'9?r:TXU9M0KtcYTKWlM14%H$.M_F*9$P
%b'B*KH?K)Ds4(^tDr$YUJI$^IrG?Nmro&4=rlj!;+&Cd!?ZD55:H!hheE6PbJ%[jjU!DFS'NN!DDFAXHD=Rp\Ie2^oA9J.%Y/&^*
%34f56SLZD:okNOrCq=N/)5si@B:t+m_&4(K3s4;`-esbAd(F:8?rXl\DFO$\%J3T3JSF$O]_bnlGQYFf<P3mVH3;CoGlul@p'-8r
%hE]n"/,m>-VuAqCh&g;WqZG[OnHW+P>$C[D79BG.C#BM$\")hDs-2q:>MXioD/okVIdPP4f?tV*;Y:7Jfc0_@]n+ETDdYAJ"(uQ1
%I<bq*2-/$C4\5i!]6o2fH+nW0^H/N6L][lhi`S&-&rrR/bK4Rd%j#Z&Zg&:KH`22g0W5E.KV:IO<[ZT:EGhtdGp03#g9Gr$XVKS?
%YM7"UcG<HBA?4m)SRQju2dX_?HqX_K9QJ#W:!$^_&o$o^drqk99V=>:G#Hn`-cL_+3Zl>Rb[pkpM"uXkS8=L=n[&'pY2OX0#@`R%
%@qU4c$7!`hj]]cSDdqeN?rjX'f[:7OftOih][u%./=S?:UFj74@EBH1b2sf-feU/7AFQ9$U[L]9&"ZuAkG'6@VTae`0,8cOk+,+M
%Q@BdA+MrNNML'O#aR^6EVS(bcS`XAT/niH(hRa>W7Rm`Q28i7D-<hqI(%5&bG2>ab5dN46q9I/,b(bE:50.7[kS3isCuAFK?aeRC
%%Zdtoj?C.OY,Ho+E?<A@<#HFZ[ck7-l`uuAD:Y@(:F=XcmWb)sj#/^)0udd16e?K^J/p2`%BaR?1Y_(HgHqCZl"kLA@e"!p^A>>1
%d?Na^T5CkW&b;RDdlj\dUC$>M*U^8b+7$,fkVXE+G!g^@<MbrbB-.p_mg7"r>&bpN*lf2O-ltM,_YC%][BA+>(2GmJP;H66FZXCO
%kN4g0G?&Ga]?89Ncg&UtAehgN%S[3lFI(X_2W)Z7b/mQp(oYEIe&dRZIPgB'N0DFGUGtA&UUhU,f([0PhAs0R\n"3C74>952G`Ap
%JeK#\p*+<]2sE7X<GU\*Cq4b/Ak(H#H(Z)=<L@.QAcHp3<4)sVE%6ocBqT@7-8\_>ohPO7[ea[hoFS47G,'NGIT:ZC6dD,03?t8m
%ZJI>\1f+HeR-"3AcmLOSWc\sHQKkfhY!m9F^M!1P$"A\KVU_PE9d:VY-iL0l7_Q4^-u(9L8dI0m#sJ?s3$XJkS,o`FZgXB`[LaYP
%U%gEq1^f#p)AT\]^*1:u<7P$8\"Ypi^<GoGZnU?Ls555iYX14NkLdZ?0t)&7S3m[*BOMB&bb9a2(KsA!64:c2(krgSk0QH:,M;n?
%6J*8]BHJG*d-N<jYf0JSlK#F,cpB3Wr\,Y*cts+A9Rc<TjL7`p!=OaXKpWo0[*\g7d":-f>"G,L$a`!>(0WE@6OV0"cpIW&TnQ<j
%r95dsr_S%@Xm&1\>[qmH[r7*T^tYQf"ZM5hh#4oVPMaRA!hD@b>\N<Y_J]o:1u3oEK'DFU_Algja&HR(%SX:42?b"f`K.tmhYWag
%o<oIIOgE9I;&hKM>Ob9FXGfuM#GJUiiH&_XRQMZi+ofG`oD12Bl,UK)A+O4#&-n^4b^;=W/U!nuGp_ck_thqsHYgsqPi"*"S6Ci6
%/OtH\3#9@El`*amQc#;*3.\Wf:<Ek5&-OjgoC%8aY4;cORqLgje>_$].pQ.>%*H*-J4@74H;uXQ6?mP46Z=RqIoe;#,MX*uP%fQ-
%6/H#2KO5V$B,o:Gb[`$N2VH)1?_,;nk2PtNWG!S1j0N1AX\X=Yk*CtrX9#UiD/EHik'6m4NSa=j1,/.es*EQ:cZYrQS^4_)X*["U
%Aa\oNLM`BubF7EsT@WMZKSFKZGa.TSp@,h6F_on$`,,'PR[&,:N+aADLD1-0[qD6bOfnU"K.2WX)Q#JYTY6tacrt1q=DgX+m)AYk
%DkBAFAja\+.5Xc5K5R0r4RdV1-(Z;b]R7\C$M4(NSZqWeRkN/!Wc^"L\$gX*Hb2%al^%Gq4(PF,mk+8tR%^^WMVTru*cVZi`[g$a
%*MqEI:gL3jaK!#[[jDTpb/SV,oe;?8XF9+"U,oSh#S!?ZLe_,TeSlT)Nb;SIh@2)8CMs.L@^3qY@P"N:)u!C_h*C21^8iF-JK1@8
%-B=eMU5-@TgjR_i3726d_X5ejg2L>I4>]J7LSq,:gNriBHN:6u1k$\gI8cEJW@qZ^9TF+=W-*o)C`KN_"o!QqMn>'R.gJBDUs*/F
%$5bh'nS>I7)X72VpSrr<$0mm\LCbF45L58]:b<BNiHN7C[1Mc-:";S0lodad]rbIOXo2Gj;=0o7p@5bUI=-/G<qQ\)IO)Z_qN:^:
%n;#m6rs0S'++@,g`,CK_pe;onYUK_7mgoRm/)O0V%iY[l_^L>q'Etc10acpLKL,O53(VcaIJ$eG+a-3qA8T7b\1n[q(Z'JEX0E5N
%,oBO#&OsTuop&T^GY:$7Di'8E%07&`%YQFk\.TC1)^6IF<p!e[<am8Pm#LaN=+_]GF&YOkGVptV3_j\I_Rf[E"!cWfRZ$1k*S"Ei
%Z-\8g2HZriW&Y'1BLIW'*#hIuF)XMg?AX\5U;TZG,[2O`U*Hd"`E&]XK5$CamBNqg,->ZY$'8uVU73>P?F"TPM_G"*&4q*'+d/Y+
%MKTB3a_In$p(7q@TaJAP[fo;6nrXJTgIFg&rmIR@09u;<IOalMp;'BTK%gn[M&YG![KI8!V&.Ep.D6!E4u+P"E%C3=KpuAVDM-89
%DE4b(>JDIV&o3_B:k5f*9]ChIP$3HG2.LGB-]*b@"8QmN(_mp";^hi56,F@[6NtJq8;C/PZk\\aX`uD+]lh!gA'8(X$S^RK`^mt4
%(eN?o,Oq7T,^rCNUj+F\@?Ri<9[_T[R&$q%#]^#SXhf7#]8j]?8LmsNQAE^n-!8UYYDe)[h54T%MQfdn4U4VhX'lBH;GIL%`'LUQ
%C"NIn#$Z^+T`e$B5#u^uQQAkL.:XZ!o.U1fpY0.'Dl^j5I?sX^3\nd,*QBN4$*^2g8A%CH2f_OmHIF'j[Du><lZ]=?Oj,9VqouLu
%XkCH:lUG)`X'O;>n.D`bQY.Q_@SYaZ\$pR'97+5(hROBGpk3@mRmu"P)b8M&)i)gZ*qZkK+)#a`Z[$Yt>_f*%5A-IpNUD+>8%5k7
%EHJZr.t5*o3qad[FAdm37JqO%*(E]gFGneRHC%^&5;1=99lKF<UZVO;O'-81qA@i(E:u/,o/4CSS*r69s(d*3?H6-6f9^R$opg%c
%Vd+041<q?#LR`Ceo/Hh6DfR5N^s4a?o*jtJ"$=iEc?l+!4Tddlg"$\(D*:&4Rd%N-Md;EBc)jDu0iOh;$.8hZTVa0MNn-K;RZuM-
%hi[ePH4Pbs']1V^UbYY_bH2WgC99KXm&0s[P2o;j[jK05&UK*6@eo]:[:NM'm@)?R^<I1Wc$M*'f"7!^$+AhYr+)$?CLtDDK_Y_`
%m:(Pml1^<mmWcGqDkWTJ@e;R$jGZ8rA^>+WT9hU6&YoP1L@%G^35=EP"/111C)t(CO68$6jBP2H)OJNfO;60#5$;5=cZF#Qeu-1X
%"S7Ld,@kl*CWfUJ'#bT2^<%uqR#`s:\f`[>8B?!;WNrb;;!9g6L18&YZAtkj6bU8EelEUtC;1C:W8\Mp1uOI>>@+LK!&-7Gkg(:)
%OL85daca189nGm0B8gi,"UJ$AqD'SBc>RECNE.F(-jikn8A$jlj+7B#oc<SVQu"no$b/T@SK\jZf*+l49ej%#):3Up%oQBG&[#L7
%W,FK]$<0bOrI?(S.K/KVfKOQ4@suKGX`&A**.:.,++.t`m%@_OK5`RaUmP1AaSC^@]Kl`CiN.<`gou=UAA)3sCu_dt)/a*r?7/9D
%_[W1(a]>&VI5bg_-E#B8fjo:W6JTk7J`5hS8>gVsls?KEFGec!eqjkGhrKMeQ%ApS_saTgF7k\6LVPCjbP#-^a-nID[LBFqe.0og
%X'&eQ@BTfhT:ACt-CtgE:WE*EM3lb:)DsFm\aenU_XUG4jScUO<h%$KVOo"/F2PUZfW;DL;r%,K?R0O<C3")_n(F"HS.I6o7q/s+
%=AT<X()ru:4ON3+2%m;gI9JN]mTj%k7<s[aDUW[:GJI:[d@sk"41_7O3V>>\VY#&UD[R(1I9t0ND"ZPs(b;m?+Y0oPe1)-a1S(IJ
%g_.Q"kMacf8@r?@k7-&9Z?fiVC5ScW/E/n&)mtbD7q7^ZUfT&O[[0j<C1u_9`SWL5aWcUO>[.qd<@-1dOnp!*<YjFl#S=/qA(B1(
%5t=uqE$0A11.Q8([]5Aa@4HV)9ZpnjN(?62V9jC\(0oM]We"!]X1CW!qXJr5%\,O@pAEm2Xa4We7Kt3"*m:[.$S;mjHAusC@"d4E
%M0_.l-L/K$fQ(G(-WY,<F]223"p$urXHj!.^D_7RPiYrt<>`;Tqc,Vm4f$_j)ZV4Y04/,+h#b6h@.i\c>M?eoe&_AO``]8]/>c)\
%>"DrcWj&sNnoAU!f-Mb6!"-d?f\6,O0Pd6kdo@FGq*B,S,pI1@q%L>=]:ege.1-&bQ,.,A(!<To-aE#-D<>,kGH4l*5+i0W8ln'e
%q",*7TP8[?+#H%jN]s/'%mII@G0mGc5r^=R1IuuA%C'(i45LMN\H,$h*9e&3LooG9ei%IaDIAE-2gi!h[W5HVVQ+PXVG]KUXdWS[
%7TN5:DgJJ(UK".VcBVH%R15N<1%Y81lLiEc\lX7@l?.#!AFLF+]@]*']iDCMLu"qOo%1@uN*eP@HG`M_R&(psN'8,+dd`d^GM:MS
%kJj8Q&<;Kc+Rd?6\(W*;7h^Q*(6H87=\"OM\F3S88DL)mjOTXRZRt2sMAL+9rr;C9LX(p0h2B.D0Ga(t&3h^8NUF#_kk6_0qlCZ]
%TJ6BB//W[qOo0PS'q0dN:F68:+/hS@90E7*&u!^-fG)`j>Tn23+oQb=:eR:-.htCJ"SM/1A#O6imJFasRq);99Ri)ecS>Cm*n,=;
%MLp!ge#0'PI?'^0?+5HR55U?'H?r4Xhj9_E*>A\5q5$S[?ReK1*(@m>f."H%M4S:oERKXp;%ZT?Vd:_dP#Y&Z@QC7/o$YaH!Yo+n
%pB<$T?'U_-P(<R,9u3\FO;Yj-dFKe4]]*m2CjF[o1Tg&u;5q^?/K[]$R7/Xnb!H&3$WBNf@j;6aSJbd)HLs1,+rfU>RHHBEriN"=
%:.mgqn&'#7c1:YpjOIN41"Um@WRGO`rKq@bp=*A)f7(@K8'tT=1&Hf>5LJgFRf,VZj!U:257Xafith9S:hC:g*i9257IhmkGI"l&
%&l&\0Y@pi?PMjt[/Ak6Y%6a9)Ss?COkb?Ltju$FbW53qPJn>%HIoh:]caa<uX,p)%?cl[T05K%$9JiDqa&Y3?Z^L+T`((JTWj\S[
%m7JG-->u6'eg-tZEXQpr#(,N9aXlb*:o*(dgZ*RAHV)EAEN76m\`Mle38Z1V-'JLt"1SI"rj+AMj&*N2V`Z'\Y/`!;QbLa_n>)Jb
%:I3p,s#1IFJqPLU7^E8cRL'-l#DltTD0n5qe#neL:N#uA9$?-8kfaC8hOl:]a.cFj+iu#!Qr?r7,17/E-8/f0=kP"?s0gF+=d[]D
%5\5a#.CBk)@U<AT0"LMiaA*-j(<]8BA,tu+S-j""e?T<RpWY?$NMMB)kf=,.-'tWB$t9pGk%Y'18(H\9@"QP'Pq5,crG(4H7ZdW%
%Me4B=8R,!^DYu30/4-%!2GMG[N<H[ZMAOX`p"kdIQR6B$UP1iaa&"-_ajb98AMP9%`Q9P*(&aDM+qFq#Qtr*l@mnkbZ-nk9l.1*U
%F1+?I)g/Fl[?Cn2Y%d"VmV/Sa+Fk:A6>2auSs7>>:pkGKo-ao&'NSN+b!i=X0E/M"@+?pOD/E!a!LW/X>87uQK]TgBOJ=Y?=bi@)
%ckm+q)m5/HQe2LPFB(_-nomHrUKj.$&_8L0q>K5Kp]b!Jb#M(gIs0=@@tPDe>/JX#c72GK9Habj:W6/OcPo^HCA(sj22sIhY3AP=
%:FXXWVOiCZgSjboCQ%+fG4](I>)S@6I&:G^P$l`Ta1SJ>k"L$$FU:Seh"#96Pkc[""P$Eh5+9hP%`9WplEn=0+25KE@*k.%,B#!s
%q=>d_kHboTJgdU=5%=o/!got2!b_V@<1OT^I*VW<g6)mRJ!chRX`.!mYaj%mp2@niJ/cC,bg*)[jT7YRcf_B(JWa+KDp.sHKEGNj
%D:apD%)Q%G<YdS.J`#PE<K>J>$%4g?gTD;qZB.i6ducnbb)S(:1[<El:E"RaZDNa\DlZI73m-a!]'5c7fPIQ#0gbPP$73)%")Wa?
%)JQj13+^:PW>b-giM=>jYfbqS5E+5n+=Bq`;cHbV,o;^W1*gtO-E`]Q#oZ17/KHeiXJj0M<FOR,3.V+/=.6!-:3h?D:eGWKi<2Rq
%9[J2@MQgEBb2Li7N-_O$$q:?R64OtuSFS5?[N82X,]W".Zks?7h9+]PoLPH`@XL)-];h0k&8p+b*j)QdB7L5%ZJN(_Cr2<J_RPXq
%W-un1OFDNU0XC<CCk><p/OhucS$L&=eHU!cCk?03W@"Bh0E/L7hJtLX/Bp4Q0qV1QF[?ZZ/[^Q!]3%bS"r6:,92i9=J#e?/dqB>J
%%:V\$rQF/a=+tAJGS#b:*mfl^\.'L>oeHsk.eYs<4=\=`aXa>LA+JG!/@:MW8hR]W?d%CV8!]`BD'$Wm0"%RJ:O1X%XsD[Z8u#r4
%.X6@bS.$Fdh;G`KeTil*>.cH&G^]C60CmP(6Aq8Y@OAIL#q]aUMj_q$-FB-H/S7>->G@69TuB3K,%j6#RF'sf88.PEeFalhbRS[Z
%]NGh2?P/@(:Ac^'^6)XteP/FN`F!I+4B-7BB3-bVO>^T>\:@\>9,jJGa1>V(>^0J"8%5iQKF@OE]A<Xl[)8lJ/)o_BiXlSjhoHRQ
%hoM>65#W=-h+dp3)jmT5k&g;WSUF7GIsgMI6_@8e+-1eARp8Qi4A,LAclNER@A>XC*])Npqp&lY(^,#N=(c#4q\K*]ECP</KR>KL
%XW'%L\%G_28YJ,-2H6g8[km8S1YTb/N:rr$WR#9#30Q8VC*,F5h+l:12j8=:h>><.YPI.Hr&LqTF7Pl4h2Bdrc&5P"g,0-*?!k53
%7b[Fe<B$((9K1CKA[FCc1>83XUOCF$h[,c<gGQs)8?M,.Il2JV]ES/qo6p_L-1/+H<Sh;t<Oi4rk!7d:MT\K@a(FiI#<9;A(#P#%
%Fkd7A&;H"Z<STU0q2sOfG-)MG(Z4E7D]k#[IGu#^48M?M91t0AXl=eC[tn*g>4Yl:2i:,+ja!J#<[$MpC.mBOIhJ5SdD/7#[_AQa
%Xbs6JVB^$A>2*OXs&_oNrQtS!+mFC@`Vi>A-V*O"Td#GuM2,rO]Gcb92Qe.9)S`$&mepm1[*X30qF+]B-m#f[IW_7"[ZNuJDKpHq
%8l<C&0oE)?r?A&(8L;62FPQNBRr&sCLRW3ip=X,h\ThRc*ET\c1NctC[uE:Qd1%4\#B((SU4GT`ee.'ohQZYCRfta#MKnM]es=:"
%eXuTqP+]:i/CFae\ta_^h=Zbh"Mr]mXN$J/d(k;,-()iUiml;^WU8l6h7$H4UWCBRGVI$YD2V?:*AdO/Y+?1`MMEVFCMI]a*.pa6
%/d`62fT^>no;*n*c>C"0>c75=DuoTW59s1ML]HM,\)*F+)r)cVc+'Cso$N\f,O.C[LZJ[f-U<G#TEJr7iM-WI$Qb(&m=J:S@Nt89
%[`:fhp4=19$^?R_0[^.UbQhqC38-(c?H%,`]H0"`!YEt#&9j-u^(s_%2Qa@g)YVP0"`,=2*e!#`EBF$8I/.h/DjVa:LN\T#Q)VCJ
%$Z"bLC3`!87$i`(>.b7h0FG'J_WT76Xsk&h,B;*UUXOY!mAd&Af]q\Un8A#%LJp,)idQ8C_t]?k<cQ44`P].]\"Xn:YSiu7Yo3mV
%[2mLn++6dB2O`/l*&cVgjL1Y-btoWD`AAF>,Gen!oilD.(Xlb\3c99=dK,*VkabFM*F:@\(fn\>D0WBaS2Q<Y>OU9pD%'`##(^(Y
%p'kEs&A*'kLpioQ;oG_D10ak?AUWEnNF2W$Y(3lF\fM_qD0NA8-%TaB^LCaY8up-+2Y!5\AKu&,HT;$EUYr34_3D*@?])f28?9o[
%XF2>4D;<LZVO71orI']qcc$bDrQ"$Qc1uDMInkK`+lMLMq&D2_A*/h*B!1_b6bqMb^jLleRj$_<@YTE&+lHr<\/>?c%[]J8JGCc.
%E$N6OJM#VH)-._(hK3NsMD4\ROun+m%cF'Ds2/HsRLaB)>Aaaa!)glt*5u*UOYsJ))^67%RtFAj)N?6=@:r\J=j]f[",9h=_tnF4
%!LQ3A,,V_ko_/!O$5-/o7M@:i*@ntB#iA`1QM&4["<pO@SE)XZQ!#"`Td^Aq3hrCcI.p9D+Ve'1h!3ud/-?fJ2ClQk%bOecGbq31
%!0F6p!O/oZ<RqA'n+3:.&rhYDC_I!""/iP/&gZF9lJ3ppq5c%Vi:jTI^#iUu&X<2PG&2$6DR!%d0,gH_?igO=*rBb(ap`kG;^T?_
%?-O-)WYQ@XQ>_43h[FOLnrB$t1U6&:#qb3,M:T92KbV^%#,oBclhsFQS3j!pjW+aV>tHFJDq&]CP:[n0,r#DL`GN42*)5*ODW(82
%qOn)"#t7FjJ0F0j,-QY&qV#TDS%W:gjb!Ukim5eF>M,Ts<l\qZ_/ghk9l<^',CACl\+T=a["BQcAddg!^(I?6AUWA%CHZ)M!HEg?
%6+4.3,(UISe'Wd#^"/)"L77:5bHq!odb7kY2Qbr5.1Kbp"XS43Si?D"Bf9@F2o>`qpLfORGeScV%E5$E(pcQh]da7$;<Rj\1SaSp
%[;Y:MrN9n#Oe]\Jkd(JNWNmosh]e@kYbi#YP3]+h[^[0pYn.6W,hK'cWZ9r%-C!WI$L\t;0;3msWZH<`T;p`aTJlAgG*GAp,=M*^
%;9pX=Q$F0'/nc:mdj\O''s;pdQ02FN^b=*:oToifEl>&=fs<`.WL0^$ASZ&J1N':oN,YN"-&E')=69H?&mU]m=i-#G]i='j3(u[(
%^Nq"mdY2G=<0\&5[0j@m<+QaU-*<-fW@F[E8j\69"dQYKUEHDCEX3EYd_OF<'op&2QfjR>F'apZ?t:\Vd0CrQNT2?Q3o#j=ZtGEm
%8@7RUjY(\ZB+FXZ_4E[>oB:ch0l8D%/4#5'JRmIKmcj>Vp-.7F2MZY5LFA7#%[%blD#Wf]hUC:>2>!3D^+X6bp,C$=r0@E+[&H<R
%p\::JI*D5=:GY#jdlqH`-^;]q(=Xg'?:(bnCeZ#Ai>Q4*@_;HFN;0&T6n9P=+Q@J:pE!%X0-`[!jctWt4%F[IF2UT>-W_KUVOJeo
%F2[6)7=5;NJ]!;iTQ"f`g<!P&=V%RmAf1&0)rtC/;6lZg1LVT-r#HtFq<<I:2,D5XLef+caf!!05guSCnAtk\_A@"6ft9'#hK:TQ
%\YHVma*:And^kq)W7MO9Al',iK]6%TqV\3j_-H"`Gq!HnI(m"GQREB%AIJcLH3KTV#`#kL5]![r(Xf7f0K9[Ue?DP<T_>H=(ajQ/
%^7]Hl)]>%Ce^)lu4e6=1)HU_ed22<!HU!gU5-($eP3IjX:1#asO(PY2YU6pC-`e*RTY%I1S,k:W?TdPK!\,:R!M.p70NaE%F><F4
%hqIYKPa99K^Re8DT7eG;$..$Z5:Fqt3Ti]Fj4DEp_[rus,ekr:5b/O)P\.dY`Sg$j4<G9t.@1=qU0nQpY6VH&)R,,GdsL9LH)EAM
%Wsi<:s-CJh\<E2oCEUP%>;f2/79sJ&f=^DVk(XDLHGJ:P$:]O=Zgn,^l4[6>%"l^n-7+Y-7T4<LFXuO`"<Z;f2Ya:%K[*";=^!YB
%2$AIjNnn1)E6V_Mfo,4ep[>l,]_LdWo\qo]pQHsSVfR.Y0->Z4`G>HWP(3AolmDc407Wbh4EqrsnBn-e/q6tUNim9V]NT]3Hu])E
%nnR^VeViP>+)h%sL&C8Cj0Q)@XLV]Q3^(k\^WjIiGgS-M?U%hDN>ogVld'/HTA(4_,-Tq6rFGi1?bD[_nh9u_G'n`(&&,`i3I/%+
%cdKh&=1A0Vd%,kB:Wk:])])jfjM/DIrTNjBZg6)QY*Nuiro<";:.(VanKbd-KYFYI]PZVD)(r"OiGA)RQs]hori\Q,S%"I'42/I8
%I=7Ub1OOK>IU9amo(lr17^'<!cbmEPoC^`Onnu53HtUM"5%M\mn$4mUF9PeGpTB_L/uuFEJ'2KH2qPg9/`1sN_8lTEiprEDrXFY*
%7n744-U4l[.Y$cblT[!crZ[i*:r4<(RSTQJQhAaeT;a@%0;iH.^[p('?6,YE/E@BTs&"dpIHF=pJ+h,E?MaAf*?DmT4W2!!o&@X5
%l1MLJo7=1ApoEGUlYZ*\nu8\YI/?<QispP;dI9FcLW>u-T4T,BYtSeZGZi&\UCHO!naX)df4Y"obGNV"]_^delLH<jOeG(&-gL:!
%lfH6"5)N\)?TUF0o?hmSUY6D(s"uI&YEpp6j2:8g\?0Bc%p.ZJPJp&gH%1FbX[bN\o%EU,o&@WX0/(oVl0Do0;dM]G?Lm!$q7+aG
%F8n8snr(=3s2XZ[.IDiZ^JTRCdmIr(O(CFq=lpUsRWjM;[h9R;(:Vup#N$[`)2,!*iY'Z6PW&O"]2,oTQLc>ee9&IdIi_+INVY:l
%r[a,u-]>Y64rSec^N;<lq!>XLdJl//c]3L?^Q+&NN6L"KXpi46@4FKKqe%fnIm%]JP6DcQ@_@+ipVG6[rlHa=kH/OkA%'b1=nC.@
%%HG,VQ9Q5F^6S(-s7W&JApS5om_&/"/4l=?66&)E(m=g53sWnX_GiP6\snq&>O@/0]PUC>h!VeVaN_&>YKHFZQS75IY@/*Y>$$f8
%4$1(5S`')(l1/3)c"_7J6E^pW4pA+UK(H=tF7tl8XYpsjji]U7J(305LA7C!ldp@5!qT9.Db#A,d%auGN,&:RD;-H\$Rs<"rI.a.
%dWJgh?<$ebW@dJ<hpVPid.mL-je%$/?@;S.Ke,tUgb6pajfdW?/4'&cm0;He^,X2H51tOD"ion9FR-F&G%JU;@6F>%0RkX?gr!82
%IWGJWeJLEi)34GS_=-(LJ&&&/^\RK9Q7"Wd)#6Z[Z,,[EoAf?OQ^?V0opbpQGJ'Q;arQf045MT=P98u%GH@4FA'5edA$mY18)8Y(
%[bZEd?GFt_rf'PFr=&lrErfNf%8.a*0!\b!IHk>KSgG.'iFH;Va$.:0r!p+LDU%@B(WZ%3/jB6sc11c_Xk?9mco:P$G1*8-20?qa
%l+#2Hi_qA8*"DHG>bjhD?"hYj0CRK<(\cT1HZu)uN2S!k!Km+q`QAOPo`f6Z[U[9RQWIW0*b5HRc?uhsQ):kuG2G.TT(l]+2*UnE
%&((\nN19dL^\<FZe/W5&2_G`D:ATPAi2PW275?r7n"9oeHY@X#6&nUmbYIH\lLt$3>Cf!jNm;O.M_CAM3VM"fo,d@=X`KXbA!5%8
%;4SWrXUR;Y:Lb@8]ac*:'Q!C\9M^j"e*(>RqmsH-E'R\#%9&-\6/NQSB&lU$PdA@JO,ClRJTr%L(BS;e+-uV_$k$gc:c(W-h;W*g
%AXN[2:`PpZ_m\EFD]')[8B)lr%V7[lH6H4m$qQj(6fSHV![*1$k]b%e[u?)ll6"-(`%LP^A7LtKGaPQqrdXXu[&KH68JHV<:IP3f
%N58n\9hA?JW\=XiZL@[N2o&g;j/&+6iVrO01F8<'p+t/\[qF]D`-E76Xf:)3V*a>o,ohXm&4!;"i]n8&lCWonJ!/dghhX^.\WR)u
%?k2&4F=aJ\#CDCpre@*FQ/qQj#a)^uP<>fD8VH%%CF.0=J/#NgJ$e^KT`m^>s"I@GDkVi6X%J7V\s<;\qNCmA(4PB]?3.]$B_H@6
%*Q"SkCSs17#`Uo1(58[G$uPk=p3ut,Jbr7;b\TG_5"MUNfH06'>-V'H\VKnMKspr#Zek0&og\X*IqIfK=/36cDrQG(o03e5j+$jI
%J*^6$_pn&+;km^/J,WA"''L9W_iaJoB'r=/,9+'P>g#h]ena4YNat<k(TBY,n80Ohj<SPi;/\A_I8&*UEf"/-Y_.rn?0g)-Xg"X0
%^(Y/^QOC%t_nCfloD^3LS,9omXu.'2^>Qo?VigZiPR-#b`>kl+p<mq\\=/QR46=M/X'Z@K0^/h$Y_Ol[+[-"2I*rlB?Jm#76qI6;
%Z%Lrk`HQ:K4K&#U4_f]Tm_i;K%46*5:CPY7i(KGnFH3O6isa^?qDCjb7nXr$K&O4gq+\IcbX704%a8>lCDlQX^oeY;7hl/+]Fa#S
%lN*DK(0ec?L+=8d&7B:A^_n(&]5u];^t3U?WP3K<i,K58@,N,D9a%6I%u8(\1AD[*F@I&1HG1LD(I*nrHp*k#+85sm&H*Ns="\QF
%%d[R)f7saZAOJ4WTLZ2Vdg.R=IUE@IVjUrf59_SoB/g_um(%d5GBi,]O&)mFj`$nbh)C/]'e]%:=H#uVhhE3n$P3L^745mH-6rG)
%ZX.D1b$)^aWZ2V(<9$!Kf)V-bh%9jXdPVsPPk7Zm`?@k73_Fq+//s3")NeW*6"baUPK>4ka@=U!PcMpW4M$i!>X4mP7Ta#]/%gUM
%a.h+0GS5%A&cqEe#gDr]=rWu`TIXSYdROM_]Q+]L`1"QAO"\OCF:a.8a<jN"*g$>XZAgsB31)kWE2/l-bt+uRmZXo<Z$]XfZ#63n
%%.]L$K0bI53MR07q/LELe4bT'2&'p&^^5#nh4N.h_hVTYi"^nQ)rf<KH('D+D4D-)bZCB3gb61%N]/d`4lh,*>BFC9^uV^>h]JR7
%AA7VV<J[<[V2gIpADm_U/JCCd\jS&B7o7(o[EFafZ:Ffam-7-S_Z;O3l-qgTaFM2A?;&8b/Q]G//7Z2AQia)jh?"QmYRmDg/g9l@
%!hVjd*!/=r$(E!Y:lLKuKX#@P+P4I2i<"d)lNJ?/+r$r,IW1[TV&$cV/H%:0AYl$GB,,HWZ>uCZ6]Q4BIS3j!jXMT?]lP8[$\_!C
%$Zb`t-3@Z]K<;7eE::W!C]U>)H5$Z$$lVm)*lo$8e(:=3'UsE>To@qGS\_6I%@#nJLR/))Y_kG?**O+fo[UZB*9n!"%Yh<`HK=4s
%0ir6(ki3))O]KWQN=>;(r*cP]![;?NQt$8=JM0QMHZ6!l+TW9N_+ls$LQna7GV*8bF33)Z&@Ek!l[qm47V!uF+42ZbCp[I3!"&u4
%Y&oJ]68`CUJ30Xj5UN.m_h7YQ#$0/LH9@7[GF#CPLjAK!2/U8@-)!=BY(aA'f>eU>B1jt2<N35'LBE;tj&/G"@>lIB.0%1mYK'./
%$WR0L6:g+2Tr`C)n?hBenDPr3ONbj+T1hF_nDJ!ejO!Y(jA<fdA9LFGbNHco-.eu+6?t3.hub-aK`dfQFSJm^\Q32ZeMF)889^%a
%9/g6Vhg"l86$a-mFhfl6$`-=K!&^+:1\U8'OES_I(bnnG^_G2,6;=MK68CHVS?QT]XJ'])YoFl91ld>>p([!3ku/B?80gkWVJf$&
%bTiU7gBBCVFH.-iAmiK\99S#7R`S!]jZYo&Xmcq?rj*U*GiQ&;9''6)ij_.6#K%9]7;Yp%1u,""`eN:kFMUhDT@iIq>EAG!#CP-.
%&+uj'-A7BY;ne2kM($eA1_#dnBNXt(H:eN>G)$.(TTaFTI/a*M.k1#XnB66J&QLCbcR&"G/pBl.8C"U#&O*o<5='9)o:InR;!eXT
%%:U`*Z/h"L.1#k0Q)BlfZ'D-*ko>#AQe(j/#;`G*DF!5cNC^??.3a3A,)4;ei@%.[T7\LV)"b]F`Y9s&Mdg9H%DYMI\qeIO!\aJf
%!CL"jBY1eK5M35$M(nL"i85]-JN+fW!8'pPF]Z(HM_L5tA=gm3^N%48h"U*ROTB.sY^!Oo$1+^gem;dRjP:>i9Vk`+l$bK(!'k^j
%"=Jg2OaI6+M/Nfc:D!M<WQ"Bu6_cbtIu"#[mfath5UJK\s%0AW3N9fskku$cZ?F;`6.4m_%gjjLO@XKFKmQ]Z)<M/D_MICFrsrBj
%1*etEC%umsd\*JZ^]QZ".B`ULUSNQ#\E33OOqE>9\YMeB*UrPh^f]$B#VY-FZ^Y"$LMG=DbR(7;=ZsntbS0WFZm#[kM%hed/%Bie
%3JPjYN-RV<F/5S9$f'&;UH;lmkKgh?[,'s=a$O((PXBhE1$1,2+#FnNme8FOV<@\N^99Bm+VPj\s2-nZDR]SRM=(-Ac+a5-m\BQJ
%4`/^6oY\tIf;R,ib(Ca-p"?*h]0h*\q&d0O7A%T6M\?#DH_X@/EjtlZs6r">=iNC)1?^?tX"[k\?RYZlo]DeMkiW/j@\X&chq?k'
%fBQ`@3B]+opXa!b)C3N)I^`1*:"]4<('#`Ds41WX8[FA_X$/D0[;N\NmTi6XBDeYlI->N-f';)i[G:/G7k0`ng]"U>;)H`=s3UY;
%+kB]IB+ZM-bPD04W2_[X2:sha%Aj-%8+lj6iT(g=)Jq\<Dm@tr]Cj_&a#;Xf='t7#?Z"4LrFZb^IiT-fHURf"X;gpkkcZu+2lHP&
%rUBj":g!Y]n&5@:rV%FTgh1cVlaL7$%E./=PXH=7A^%i]%L#/iHV48*i#>eF^Y=)6GHl2WiG\`#o_h!>P5"Hkl2NVRmn<QeQO4h$
%qf:HkpskeeQaZp4D[X;r_PHaPgt(@$27aY$o@?UYIuE\#rHA1dgO#riVf7.BT5FFCYsAT>H7Ik2r;X.A^].%ErO_F>ef&tIT1Z^+
%V?VA%HeemN[_LPQa%lXm<X"?'U\:?bXllq`n))$a!,_IKZ&[F^^K^kfl^tDKi4lplB[$ZSIRS<&X`aB=SU.CmGb$gqpY*lC.9?i]
%b&/mk&Op?IHl@+jdW<1[Wcoia]61c_5N:HR0tbB:&PVQ@HVY<1j^,^YD>Z[G:F#Iu0!7"]AT,ra%/N22@c$U,%j)Rs?#De8b)c4P
%rH;i#Z(1F-=4T3,Q^`ukkZVZT>,RLg>02;pm:Ot#_S3]YgLATrFrQumXnKKfCUs0p4GE.A7!?pqLV'qWP<uds:K[f6j_hi]/pD(E
%0R(,j_'ZaeQi1FCb)f'qpUL6G><_SUZV0=O`g309#L9m3GTAWa,O#/I^u7?-Qd%_>#=iLMF.r[_?LHER)g.%_]T^i)>eaK\of?Yl
%VWpBR$]Q&UoT*AJGm$?=/E*GUY.h8o(a$BWOH+e.q^=)MfYGEXh7qMgNpD2`:D@T(I_!m?2Yt>[V-p1X%W.%`?Z,hMgcHGB/7b)P
%ZX0i/qD]LX#N6=WCX%%!gcVZ^#0l#oj;'`HPilOVK:+1GD0N;AH9"4RG)(*HI$3N5B691(59?O&o(AVrUub)GmZ!mc#SRn1#D4cU
%@q*(Lf6[#joe:i="O*0%/FTr]T,jJmGR-`:\^bUl^j+tt=8`(nPoeJFlfC;QICic:2c6CDW57YS2f-0YM:R['=PM6<+/@SI;h))Z
%B4S\@B)%(CM*@#U(!U,[3@ST/)S]fA8qUa);T<FaM^Jm^rIiri)n\]6l4tV]%hECs7dALf;C?p?kDkS0q"OcL*kl?I'KFZENI6^u
%F;\AIG0.Kc?f2V@c>ou^_8LZOVqPs/kSoo6qVOT=4MlPo5BQ-l2J`?#hX+_1iCb)>P6u@Bn>?Hg>p2>9C_&@,Dtjp=2"#fpR/Lp(
%%u&d,1a1lm+S+.NmGr;gAlRg"b#%id`fnShFYAmt+1:([>\p.EJ+VnOe(oI/gRm'1j%P?Q&%OKSgc:VcUW5qFcf<F9c-[Vn*W=;b
%$]XYHV)#b3h"hhF$KVeY\G)SjSG0)@1V@lnAE6U:TJg!@0:ZcHaF2#5_*k=e,iXYM97IAYLR$g?QD]f4_tljcekNlJHs@93J028l
%'BNF3C16>>/3LBlWCirc>"7Wo-`<%18)&5/?XH\G<$1L_LQltHX9/C,rG/t@dehC_IBoC5i<R%W:baE"hFH-6ldnf&T$"He[m"j3
%+%Pdrn=ZFODetmb)ZIDP%9md^r=Q=7l$@],4[f)>ZaT.[oZ#<uUeeIMU,%*\l'j93qNNEIMO;^JnG(s-6]ufJZLXU:5+<:so],Lk
%U(9q(IkrR_m>bG`pcTd[%K+[)R[A$np!DNW\BSYVrm9r.C<b?b9BW2fN/m][-@4WNTPkb!l&0eon#!72CFKrmc#P3)f:U(KJ4aL^
%*nn@Ld"^oNQK)'DY14Uj2N<IdL-"6[CRko\B`,O=CA2@e,+SZq.EK1d^>S_05nA["2UB+*))4NdZ?uM@M4+k7:YCn_n$/,G#QCWW
%luZ090glV0'Na:8$AQQqf`"iL6(=;qS,$racq5D$[lEaIS#0>do.;]VG`>cIZ;E7PU#hBHq<,fH)g"W,rsalC^Ej2"N"/@'gj&Ug
%A\6Els'AHZm,onaBf:Dc=)q%djmKTE[JGFk^2>i$#.'$["7T`9U@OA%65T8i2uWtR5f]"+'[gR.^H\MK<W:6`g@Se6cat-3pOa@Z
%%aV73j72`)XgYuShe"e^RWB3L+8ftc.i6"irD$L*dr@hHWT7`:d2se2^UHe=-&C*s;nMp^228i,1*_8EB-X)SlO>>Wn)T#MEh2Vc
%]CkP,]<uPFUJgsd$u1E5p]Vt$&PkcVo!Rt<2Mg&KaP$SM.NWK@qt%n?h8mB?\`(J0]s9oBH4)h%$7N!ZL_@5/=XRF$pNtU^o=J&l
%2',tsa8_R[_j6`T:"]L#0r\`pV_.f'Zu,i9Iu-`GY4jLLEP0[Dq:o.D;XRQ.c2,eWpsSTo5)pO9?T588I:hMK)fj7oI-$u$p7:<@
%>BQB7C\FN@G(1'j5M;<JctY(Ab@/Wl*@Gto=SA@J'Z?FuqU59?go,)#eS9R]'<85b)o?=`TBb8$2D]/QIJq402foK\Ol%'cOQr;=
%NYs0N9KOG:B7"mBGb^YH>@TG1;sZ#X`RXt+!?.M]<co6Q1r3[\!G$&bM34/Lqr"l3'0>qDDY5T^2k)_^rKCpYJp-AOl>?Aop$[Y7
%@76?'jo/%bY4pB.J8T5;r$XhW-S`)<IV<Hi4PG,Z>W1?%%<-7"58>,13>r:Cr[%`&]t[:RI2.GST?=X5Z!HejZY!,TKjR`tkP/bu
%?CF#Ro[W@sp[+HV1$u!6<r28]\C#Vj^mae;fF)a'mm;u(Ebj1m(k.TrfPpK;oQGGhL>?#+.)3%GMZW7J7aG.0HRjHJX2NFhAgUeI
%TAOa#Hcb&XGO>';nZ`h^/4J]6BC_%&W])5"er);p\9bHh]]6+FDI:`VXEFhK<@[P[J!tXhe8]egkJH8l1UW[c:!Kdmc$+K7]e-qu
%e#]FU,@0&=Z_)SL5M0:Jo'/a@7V9278>To>5KpN@]7:2fTesH]0%]rRkF7ucR@MU;[^UV:NMHJO@Tc/*V1LXKQ@!Mpi2>iJ&'eeK
%e'Y$ln=WMeY-,+Oq:+Z\Z];Iu]NJNd.G_'Xp/8)N_Yj&!1qQe8J8#9rV>Im<6/geb9]__Dc1Ao0gf$H;Ub:=;7dac?.bfDV?!<XV
%df[F\HhlF:gG\sDHRip^2Bo]-s#cQ08k*$2&a/90!2^'oB+rg)<?06FT=hf.;KgcR-$$WhpPIGubXj6j+3Z=/DFU8HeS=m`Iqg6d
%&)0m+C?@(3<OX]*^Y$'PXQ>o".l5:bid-^B5)R&4#3)]JbpO=)Om1>aeSM9Io:!beU_hPHFf(k^6LVb8G,lQ5nZp6Q+fg=AhC2i-
%c.(:3ldQ[hq1URD1>Bpp-Kj^*VV6OMHaq_"?HmC>7F-k_J\Y>W$6*&%\ubJigVhNSm:qbbU,OpsEbcT%Zn1C7GUuqe9HLPP<Qhq>
%\4deB4frQ_lmB;B==>iA8s.&'(T3DjLKb[NR_UaTATG\`?P:PY-1fU6=`I*Dcd*Erok=8TDZBs54,N(\i]Jlq4D)f&B:5T<m<SGl
%:,?-0N45,eFrG%ZgC0Ef1L(!NboC2n\jnFdaVF4Lh1^/n`KQYZ\XGZ64=:IH$X7PgEd;7H-S$PL9C%;Djm;M9[@c9IWpXDY\Vh_p
%<At^kkZ#/FT&6^[67cj1*M_3?Qf2V,1Y#d?LN_&t4<,)OKMiYr*)A+UdqANAE+G?5GfLGp3U_@%[+an2STp&SB.J'r^1_U7SD`1M
%,1d<Bhd^_Tl_CDfW7$HZ6btVD6tS,W.Pt;RfbBA6c^N>0""h\gHSp6,T?J?pp'2\Eq<g(0:iB/0]Gj/h1!6l4<$V8]<J/2^?CHjr
%iqXsIGZh+-965f5[la'.pG;&Q,oS!O3k!YGGFOP)DCKj<6C-G"'fMX`fgl-lWrCE#lW/2t2RcW-5A^0+gT&aqq:b-<8^^D[@4g)q
%RBtl1ZG2s@bcMsW1[c([e%e$0H\JkokrR%2Y_9m5FWM=Eg)nrD^0MJ&Rd[G&-7_BD8:.u;E0B)A[3+t!?:0n>9O@,XG][GD\?C"&
%1%kr:I2GHugIYp60/r:"O4PN'>kmXWp=rjOY4e;I]&,%i1buB`4i"tZ]$)5aZl`@FO#P4XU47+ldjuf8icU'>:3""]b=aS#GRasC
%#`@0!\!W_;(o:Bd@QJZiZOO2q1Qst<G329K*L,/A'[Csgn7aM?h7>R\_)*ALh);cI4]\i$r:\l")cIo$Z,/kOk&sEE*0s3@n]2A\
%"9`\E%]gs+n,@&n!#rS0BqCITF.cRcg;WmJC'G5pE!@kB5*]6q8=0=E4do_pjVs23)K%0Z9o]Tc>O0DZ;GkBsYI'e>\X%,_]X'Yi
%CMl0^4Kke/UFLbi1$>[1<Yj3aqT^7bgn&'4=CeGQj&<F4[[,fW`LiHIdTOSh<u+lir+pg.KIt(uj.19jK&NmnP`U1U8\`ECD17"b
%bu".RL-3=nHDp1.ZD9moE6.K#4%3tkKG#3X,GYmrQ,?Y7_h%G:38sWLX5WW9_]EN,K$2iF2:3Ue2_\'/0*ZX#pPd9^"<A^<9qr/q
%TeYD6#oEQnXRrP^)@h$LN_o#*`kTqk<ef8VNH'(ZOfc[r6&:1=6>8F(dcbS'-b0*Aq>U4EhOOdCoBn;S-cFVUE7tSkC)eH9g=Pgq
%)Ch8'D7Bk=B)Fo\59mgZO$t^jIL>hGB-$td..'t(p]YMBj6^em6[F#R\Rmd-i[^eu8fV@rOr<[+)t/30f68bRdtDDY]\@.VQGrAK
%<lUJi+82PG^73ZEc&_rrk[s0pQ\WLPN=d&]:KSqa/oa)i,FVTVDG#RT)Y^`)*a-Fj6pk'H&jT]VK.h^$%;Bl,O8_.KUba_r>7,#9
%<?=c)`V8RDI0AM8Prqc(J2i%%N?Se:XmG#ait`K%>Fg!7,C=gLeLI[Vp&`^E9s<@R>/[K^Yuh28dn?OLrpecYg=_Mq*>RjGGYH+Y
%Zt6Y3cg?K'aQo2[d-BD5XDWOHE@%N;AkUK%[3)dG"55gkioIB">s3PeMWaT=md`4`s24N'c;s2QD5=P?#Lb6lZ9eZ#k@nOE)CN+B
%3]"BK9^K3'ld<UDqV>M"c"8sdc`V.$$_*R*e2oTaV5ku!=`lmB:>5;\c(4orjS8,u?:UMEQE*+`l>sq^YB2i7:d*U[H"T5[3ZcIB
%K'3#o8u*tq:[4Qh;No3WAl\k(9PTsWSQ0N$C>,2$M::Yg^OZ:W)Cs[FfdOGA/[RCK`S0Y$]fl[C5`Kp!4h"E@`+rRE4CML1NqT)a
%p3u>liS",FSA!g+H8&(Wlm7G\iboiu0iY8^(Ue@)#,ieR+mO:Hb1[8$5E`h73NVKj\?&-Zq8]CBcd;Y;5C9l&i2+.67cf1]OaTUb
%-ds`'&&=;mO5MO\@q;S9lcmnP)Z`->Y*"4Fb(GU$GO@\UgYX['pRCDF6!X!!o%JN?;OYKE-_GA;XhqsNq?m/f@,?n1SfO35[UY>D
%)-$=#mB&tcKNOCea^8ap-%2D$[SHG>6]g1BP/,uW"C!7_T(<.HLWuI`,*l)D;K+Nq\(Mn;Pmm[(der[L;TEj$33!d5`1cOA;?r&D
%e+/tKj]GBQC[5FB\DSeKdaoZI?hUcqCUIfZl8)_[H4gNtWCuh]$WibL!O%.E(OOMY=F'0@#gMGKUEU*PiM+pbbgFoWZh\/*J+hBj
%f#$)lA]bu$FI`bO:o2p9\S.tp)VjrKi7/nZm]5XHB's&V("D?al`LQ*i#s*,*h<r&d3#_7AT].l0"1?jL#tDBa?_S.S3K"_QL>n/
%M;mdq\eY6\rO'h&qfZ[sCTW/c^ZfPMht"8sG:9MO:OUa*Z0^^oR>hq2?N'(D\d=PC&$+_FS'fW4ai51+)f!?13>j`\Sh+]$kO*h3
%j,oTL)l#n'Y$`g^13bf-jL4NKSC7)14$FoZ)'5u9*&e;W/T1.?m(77-ff48"816>JXp5$gYZFNBabQS88p9WC\#ZE*rOsVpbgu;g
%@A2a7UtGP.4>o2(gnY_*@XL91TK62B,ZJL&^G*3O;IJ9"&Z*@W9Iqq`Z<N2nm.X"MfNE'"6jG]bMmMd/ET4QS00=U[l$7A!/\e]S
%NdMKE'/kB@*kJ-Cgb__>WsA/'L*+RbWNt`tl(_@S'O039=K^o7`(/sf:f">-GC`^pNshGj",s7X+4_s'X,CTui9qI'kHaC80g9'^
%BE]WIAllUd?iUs5o*h,T(G!N^F.Y"5!A'LQ)!-),W3CHMqG>hu3bB3I8hS[VU"(BqH#Xgn3\&rSA%-EC=n-L_bs<Lq=A,eLmQSCE
%kW:m[3E^+Y9n:m3:in&ANm^?=[t?si^E/per[lf0g1TAaD\#i#SKStir%\6HpfPYLrQ%0q*q[=ic09CbVbpAG=DE9;8iI>tQhR+/
%$$+:Ea9%eRVdLn0#f(%L^kRc23DV3?=Xc$=2BQW>o,!6u".<f$=BW0#HpSr`Acho`,ojIfh-2FJXep01&[O4A2_708?VTFJm)*MY
%p;_4[Aq=.ZDc`99j=7k*]>pUrC_"m3jN>I=jC8jfc;pri><^b204BNqX>u*D'Hu3%75oWaW>iAlce%a"q,91.b72QW:;6dG"Hst%
%]bR2EF]!C.38gF%e6Q?P7QP&fm(Jp`]FDkPk'B!>ZsVJlQbRBH>aA?rGksrW^c//A0<7ahSH;Iei[jI50<:A]OnE`4SHN9!5H_$#
%F1.B_g@7dtprh3c:&Lp]H(LS>p;146`b+_'/KSP)E/9__qJ#=W]60FoGrGqh9_8ZfIjb!%[k*!;=(D8iO)g:PgWXVa(3BkIk5O@u
%4f\29lKQlF@i.SPlqW"ON9.NM@(41tlJ"q=4uV`N+R<)iO$fKp,]Kir41"q?FE,SH3J,J@47-ihXY#t/`gYKr=kn.gGK[7d9Qt4M
%@VJ#N\rLq@>FQ-Vl^;OL^EXZFSd2T]m/GQ+FnTKf4>8[`4E-2.l8$O?T5-+=WVY;Ck3>9V06m-\4/j`,;mU])7i&V)7in3K_2<kk
%8-7hA";X@SAp#QoEXZ3Wile=CL$@OkXaGq.p)Y6H3eaSlrRaTXNdDjYpJ0:4fu&!q/h8j.(!:D'I70H7L^2/:jHee(doA(?SX>q)
%<npS:Hh1@^YGC7c;d/KXNn@Vs!(b@O3()di#1)+no.QuW<\9jEb*6'WT.o"n<ZT.;$P1o7Qkp9WR?.-#^1>4Zbm%d9p'Na<Ms.(f
%m*'(&]XtR)`ea;o8(%6H[^A<n<a$tQHbWulV#I&dpalS%kMcriDkJm"e[(Oi7=N"b<7ncBG"]1/"#ejmaM%^!SP:"!jE@kaC(6-Q
%'/2EV#0GHoETl%PoXgG@Ci#V;Tr69he<b&#ZNkOZV]ZeJU1cVCd7Pr(ls<1l(!]0TeLRacB$SNEs+Jfi<Va`=bZ0O]T/7%'i6i^q
%@)ncULJk9FZ[S(^N#>HSQ]XsMW,M;bc"J9*i.F?Y4IQ4;_'FRHAg^H:?/cK.WOR$7IqKM70`k@R5P)]-B-%s0DfO"#S4jYUpX6n0
%m=;ogTUkr_a3o.fV7tj5^6W,u/4@r3#5\5EC5&[!_"W1E"d=fsmNgSgm.'W<_,*]:mu*OAr,2&_1&%u;QpTDQ#/b4LA+K>,%T[j;
%PP+)tnu-JrQpaM*mbDX6<%7IcYMi`?b/qTqE,(HH[?#LuVoGhNVoNIZ??Ohr9?3T.o<mtH$g3;!Vu#fZ416!oAj;U&AG9\RMFjf$
%3m3^MN-#@b@g'2b1:fgc]BdLmq;"C+&p6Vq]erg"/sNZHc./Z`I-TNE#M2i"e2\U]@'Y=<2>?WWmQD,$&"W&qCE]"S/hFF=)mt<I
%@<6V#7%*7*4jo`gO^,6c#LdlA"J&-%ns@.p\iAAAY;bS'hfbp3V:gk!q._R34ph)*]`EDCl\mSDn;A#>eo03U<6'38(5f7giDI\<
%V>7rM6S?-u(#MZi:l'hrb:7BSZ?jO>K]@Ss195/q5W&nQR%(`LWjS2E3`EN0@5Mu/<i[8po((RbY*ih@CZh&IXhqtA5;s!bl6a-P
%PsO[6B(1IR*A\Be+UMbB-KQ0SNkiXp.[=&*IMnqNC(_dpndJ?;17N,\*f"@NfT<T?[?Q/CECXb(Zt)"GSn=&%m6Jk%Ms4*dBc;LD
%Eh\SLkR1]tT=87lY@h@*259pG$nTDYe&sdF]:G(G/s1'iAdL9[Kt52i(!ME7*3pRp)/Ed;:O@.M2YmdXp4/)R;?UJe=3^/MXd@EX
%\j/r.=qeKWAm#A&`Tfnj.U>5R58P)mc`kZeh'h-O5Fm>:PIqaeK5Q&i:\Lr_[>$Zt/mZ42I+T9u(@S0U`N"lTgeKug:p#_0`5f[&
%QM`PSqbrj#jG!W$o?Q.P#RN>*k9!!)p?(Gj<d=kYW]ggE@#9<a9fUL)-='c%aUD2F]7JIGEuS6Iop(Li3ZPpua?QfX5UA>[BA%J%
%@<T<5C+'G_0B_(7-l@$6,mH/;MUfORA*>i\;u^?+?htnLf25,'=(>aNQbht?5pAcE6/s]j7I[XUkHh:Ua?CGl2]S7F]!*&tE(3l@
%#/@cEDsXSJb/Nt9$LFXM3<E$W2tq)YE(4qc3fdrC`F4MejN(Zh@eAeaPtWC39,)R_!H;CT*dHod%B*`Y)9h[D8ZX]_S.r0(K#b2M
%XDQc\BAchBjhNAGcgn;dO(7G7`*NZV#C@*fH5'r',k:hUnY9,e.]u`)G/8?DW0%;qB!\mgV*;.k.%/LR]N3S6mG?as*?F/2gV-2>
%^XdT5c$lG:XCpE*Z\FCX7@lY"Re<6F?X`H9Ei]&dmd@PSDUs8QHW2RU5Io,<I]QlS&W7>f\]2pcDbCp3N`bM2s7V?g46?H?ml,BN
%O[u9-#kg2uGEIgFA[enJ[iV><jlpY0GP&*Qh0.8ZO\#5jM8[("_pu`>eUGjnm9K\Mmp-?n9!Pekc6%Q6&W+Hp$^&Ncb[_tS]8<9$
%(YcpB5DK2jBd.r4Ha(?ELT)p*HAnPi-N#QG!<5ahCUr!lRU/kX#oe]Ne!mg+r%Koo^D?:=)k6V<RXWMlIX20Ih:%@E0<:$+CR'@n
%q?LmCI[H\E_3_J,rpp6i'[P^@.*C.R;V??jAI_p=*j/5Pm(2]8r%<.GJcIl=^gCfT!_h0U%t7&)qJ.Nen%Rba-hqJ_Gea/7Ma*Hb
%T0VK4;l*.%lJ2TI2CVsf%7$cGAGuS6e9M+`j%Pc)$A30;h-QLjEsp+gm."9j,^jQj"28DdMNt0[/$(4h/o2!P>J_<;'9*/VJODC7
%H/aMeGD@!3XqmT*;g.rV+2H=\<@KjGO7G8UEQO-$A8^AjFZEmV"M3Xnd6Ze)SiiAbS9qfr^lcB,FTFSO8]5c2Ne#b&i1$t$RB9\D
%^GKcea[J=d]fZ#4`o1mQMMNU'E4"W:f=NK?QFjXhbT>>9@_(Jbe>!c'VB4W4'8>P79JP*^T3KKEbPU)<@VpSem@o^^Tr?qSR'WKK
%7o3$?]tAn3HQ7Qe[';"?<Y]CWf,$^SDDM\SW'kX;Zn't361p:'(1&o.,)PE1<uEQs2A])AdUN`Yl3<*VS3lbHMO+jM*5rI*[N6'Q
%HG*c8n(+fIZ?q!1PfrtI]6+\hO6Z*mO\5l`=(EA7UB_Q4Xsp4u@o>@t5t78)fS$fEgRtf:Q/mi#@4f[68Z[?B(s=@Rm1s_(43R('
%estqG7*L-KU2cKX6l2l,Oic>RF!OXCo72(tq+,%-Z]?W-1^=eg]:"VrGL,.jF,RjS&\C54BO\Jqp'-!K^")hI5NGtQR/fVJdDnHt
%OiScPaCOXL0bU$1lpdjsU(Wkp^r<S&*[YeM1Q0O^A9Oep'o<`fg6&qJF=NG5R*8"]:N'#Ram7r-,ZRFU,7BQl9Z2545DZP8W^kiX
%Ik'Ff:1Qc2Q8Tt.5'e/Fm&h;t=*NFj;"E0^M^OYA8@i!D@u=f+B.C4"]X\h]3R'ZU<a.*eaXtdQ,5J;'?)/>':.7ePDl]#nl-=E^
%A$6Q*CaB>>aEDk*0!`*PLe%/KE[,U$aYk>5)`qBe`&U&=S.;,<,NnIi@c[)4K<`J<p%aH%g`A;U,PT5f5#OC(4GqY64&_8sg@BFJ
%WEnp^?=M3+jE:"P/^iKKX[V*HB5`q34C=_>Cm50gd8"Rl17!j<->/sr:F6bN'k];TS%bM:G09&@QgMH&1m?pEEHBRcSXH$B0=J#2
%QY4H6PH3Mt\&nQsiR)3#G0?B1\CkOjDI9U9:%$PT]ZJ(R6#6%eIsO5&iP7_1g#hAVh,36NZLS?$5GU75AE*dsG`?la-9M,(##<X>
%3K__2U[D)<k,ga7j,M2a1jK5\4``:SW//!@W;g&h7@3Gk&(/qFkK@OIGB5FKIcQ`fgLi1-kl17+(Hm5m,bl1'pe:<,kY+IhqrM_&
%rcn&RIHFb[0MSosR"("e@bJf$ah<spWL<S[j&G#]m:j^7D`pmQaN<aIE..I=[Ck%H9]ZXuAnp/H-Du#"B4C.F^6b6K9.d;@>q_`9
%:R)`k=&TVk>>J0NpV"CBVn\OdNhcn^/2SA/hqal!$td<QhCZ46ANuZO?J:Aj:Zn7'UZo1aK;[t)X\=-=8>T@b0.-SZe$mSg\*;Uf
%6V]l'h="-`*icEK8?M6tAmT3WYuL(t'D'^a3juQEY%"Gk//k"_20lbJgGsat`K"I"RFpW;=s[3m)IDd80!8Zc_HA?H8B/tf@_K,/
%9X;BO53&3jUh8$[l0Fbm<nj+sfK6+XlsDELba^P&4#=?uVk'4\H'+J>h;5Z2l+a=&TJW0Ac9u8C&&J(C%-6Dak1T4L(/*o`fc?0:
%ZcB2Cf^/9R\N3sLltk!+F,ldXkI)_t1V%fh^5u.Wa49nWEdZuWQ\qu['mfEKe4VBB^6q3DhmXh7n](,S:(r+mqI4?Rn<TG7`NGqV
%nttn7\$GG8bcSKUoso]W]0(;bY2@N)RcWkGQc@;#>eb]2Q&*I&D\CiDh^-_:PEePphK_ZYc52q+Z^p]*U-.+u:-A"?WC27,&9Ge]
%ZZjgP4>1R<c7^Ku=7aC;WA2.hm7$1kDYDo^lFgDlJ$$AR,pup;0?N;IE[%IuPM'Jip['NBeU2$X:W9`2]Y?Yb8\Uu1T9=iI9.-"G
%?1"FuXO9eE5':h5eCNmN=mC*UBe!->3a#692d=O\a\?tn+aJ<7=n$3(Z&g'/h_+7Ip>(GGPKhhc+@i^+[XVM$AnSGCNdDCeEE5K<
%jD=PaUX&+6iQS8@\ADsr`,'a0(;g03mD]rEjs^5I2Tj;T4)$4j.P0IhXnDWk55j'REh8[jnE"huag^iM(]8Y5[Dm"T,K8QKUGHf#
%E7Ap)(Vb1cir6mP=1M'"-C@tZT=5njDt7_j_4p@OIQl_%Q;l)_]LY_BkAsRMYC84Vo6Th(:F'9/qB@mtP@?,9T,&d^HZ;nW5!%\?
%ISS"q\_N)7g&8K5jVEm;n_qldX>FRZnh%A-WOZe?WZYWCb/C^BX`JWrb[4>OgR_?W)Ch5I]eb.PID+ZZj`@#C\X_OL)dBAh6$.%1
%#J@dY+66n/S`$19ZkV<IVh"C;V>8*@`l5dR@VIS!ibN+BnY6$4=_o'j0[Z#Sg1n(F?@K#@/ehoDl/TY*G.Mk*3KrltS[0VT2Cb"n
%o?WDmrMSr#;VAgF0>0MRhIi!%(\u;G>V2Q#/O*5kGGeADREh[KQflu/]$$L.j^rd^CMmYXmW&P(@(FbM`)`&Cr6*7RDYIaSYHtpW
%;D-31<k=iBYe%'J[]l3#m`atDluZdGpA34Z7W*-NZ>TK<OY,-:*j]L?B+N\YRIV#9r\)U.i*c&CgZgcSghgp\Rd5'r(dlECG3@Y.
%Q>\G>O8Ah"r'P&_ZnQVdW"mh=DQg:TQV&!1cCV=qcMc$cE?VdG.-CH<Gk'iUOtATS?8"o,B@"7hHJp;$mFGW>8sR)=D_873c`Du!
%J%N-$ho0<\DPjHrCN#&SGMNS6o';#.m`YJ&;fR*]FftPM0n6jD]TJ2oT/TNJWqhY;@'.$Y+7S+2ja&bgH$&t+Zh\]H?f%7-]BX6E
%/oOOp%dW3VKP.'p4mR;F[PN+Ib;m%mB!QL4:T%:?4)l#rh-"XVniOl>%DMG(91O.=lLARI.uRK@B-Oq!qmplTfLtUrdX-[PL[SMC
%%d*NBMD$d_r2C[lhcRE1m,.JSqZi7QLV\OKC/5o;"gcZ3c+ub6`Xc\up79)9pK8N.q?ng/YIc0O7go"BajJhZ@HH]r0A\^L9O9*,
%rSs0>j8HsM^#R046fhj]H5\rg?#;0b>TU!gS90h@0;mef_bPEIQ?Q(G@`@N:GjYh>:M8A$LQf&;IsU[eqlj<fQg6TVkBi'=o_IOj
%:A#fN5G]t>2^alKRk*o67`p^GbJgCHQ-84``V/D/0tr(T*dVm/>OLP=<UI6#Hl^O4,M2bU`oZl9V6bO_\OjbJR[`s;@ccb5i+W"b
%IG@f2?<Ka9pEGq7[gb3=EgJgI.Gepc13HY]InJM:]oBjV^;XFHDm0#fo$g.j]"G=pH<.abh*3A"2YIY2l,3Jub%^6b^XA[R**3$o
%5$iuB*qe/c[CrtFY0$L[kLr5Pl.00:YMs\Cdh29Ob[ms6bbksnh"A/A_qs)Bi8Nd+eU;PM]CECT'YA^>l*Va3mQiB%[(l*VqUBoW
%FrT:\4P_tV=hJLVG.5jQI?sc\NT[)&`9VL-E?k&f`1"*#dm@*KoU\/+k#1`bDdEiSrH7]/Fnp0&l0.g5QBsL61UFnkX#S#">L`m)
%e"0X?IX?.l4_m8^QBsYffo(%IO7)Etm6kIuVKqe%Qc7_47X;9YEDuPuC?jrgHT.kRHL^6T?p*'qFH?)`g<k_/b<0]"Rdd$<84_^;
%]8j4!ph_+!0W<fu)#<1aJ*@k8hKI[-PjT%IO$!-Na*/?FD;4"_M`)Jor)E.8-d(9A7/s5M@@eL,kgfS*JXtZ9hk',8M-_&?s+tc3
%!r!;)IWdZ'MfK@.3"2n@7k[dS-Tr@brpAs!@fub+4dbFiTkh7t;6Mk@b=B&N4m6Cdd@+aUFMEYE'[BLi`8L\Jf[<1&N<<2H'+K9A
%X?=l]l[JlL-TB5>::!gJYJ9c8eL+Vk#%e>aO0.AKH=erT?uQ+HDEeOGeEBU8=tf[Lo$eIgLQmC(L68Om7VDY)qj.PT2pZh^]AGe4
%13SD_T,o;b90):(>IAMG]6>mo^rP9Nl^srJmI-[2J[QVn_n:cur>N1P".[nsk?^AW5km=p06ThRI--.oepKEZhH6QGh/b'Sm=+l9
%^@B*.<+Fr0J,A_rD-AF`qIfKDBqt[:?_"?Liu"BuD=rm-6HQLi#*QH64ad*`g7NUdoCHT8m!<m0X`jB:gO?7@J3!6<6p<g,p`1F#
%ZO8!??I[sW?gd,jD&`-i%ZcAMSYq6\n?on`*-e)>3]FX*iT`Akoo!X_rR]p4i-kS!$F7tIa><;E$Zc$u6e6bH25-+J_Ui^K@!b:k
%aIehE5C?pZX3pcps*jj@lF.%+l^%S@%Cpl_QrV6)o^5T`-k9eMhqHnQ;3gjgB\(r?,Z:D(<AnU-23!C2\'IZoKdlW5Y^IpQJ&,Zf
%D"e$[H,!gl5BTS.S<^4"gQcf/]DR_9-j@@m0Q$NQ(&tfH)@F49*7"jup']G1XZ'E`O<O(<rtg@dq6S)ui>.LH95=6CkS[Ibht#%(
%F8>5EhY2'RQ`oBJ8P)-5M-Ts,BT=gT2)LjgHOXf@/qPs@]k[NMAq#"&qPR9iF>N8fSTcohi"<D%rBnN`pWNI-/b/:lL<Fq!ZYrPC
%4jWZ>A+m[A]"goc-$J&\:H<m;.bmY,?U&uX]N/4t7^Mgs7IuOH7Ss'6_jp0Ie$Jn#<mL`F&")b_L47Y=QU5>\a)C%`B+-nSL@82f
%W#qT/a1,=Q'1-<L=pGQTRV4K#+$,q\-mcJ[_*%\m'0[9:/s^psk[Upodl_l`ffZ:pfHXaEr9,0]76gAYgNT9/S]6`+i[[0A)>S;)
%WNa/8#Ff+2*u\4s"F`G$$iJSZ5j3CQ0E3b2D77Vqa`"Z0:PY3`p@58KN<8nB[]PQ"3-WaE,^dlC(O:cX1=+rEkC<BPIgl>I+*.Nh
%7fac[oI4;3$2RW1@NL!]fL^A&ncSg"ZKEp]l$LFajRfinmKt$!O4\f<l)u?oiRcE%s+.q%_GAJXqqD6E\=JJW)eYo=(\m#6bUX_3
%]TilZAfSPlcM>C/JQ5<f*eAqXo->Fb@E\o!0]oC"078A.<.H(3B$_md8ln_dWOk^#5Uln(Vgp5Pe9*?:i<PMHk.rl242?G5nqk$D
%%OaTH?n!0."[Nd4,=n]!#0@SB!R<7ukfc1G[nHt>`0ShEq4>e&dUdqn0c?d_mn!t049rJK0-pZb?FY*<k4ZKQ$Y*RCr4o\VVL\uq
%^b8`H5c,NUZZF/]0qU1(\pt!(2@RF+F"%0,lG?4%G0Usu0a@r8q,1*M"S2VqSmK)!iAe%PkOA3G:)6*48hc8JQ#[VW!L69nXRJaJ
%EbHf0m]:@tYR^g4pm#TE8O/qj2([ZN:BXV?+W.<)nasth89qA2hB&?=A(VFF(*G6?/+Fk:1a;SNLeI.?J-'fQ6M`.-BQBmOr%^1G
%'J/'+A-fuI6@'7WO\L3M3=]r=_s2W0UIppe/tuWB-fm-#LK&d_r"qHsZ:Jsdd/b)+kAX8)GQ`*Ff3k=3+^dMUShu3;9Dn>f^u4u%
%@3&eOrHF]8i"s+U=+c3ZRhMA(oZX/'S-Oj:iJA88Zl^D8iPJC?h.&_;*4t6c"eE3iK/R0A"+gS872X6$*SS)_]/=6HO[TtDlD3Vo
%-p[J[^;(2!!InZ5*X76+/)$)(;_D.7\pJu=)jU]u+:[6Vc\GHn!h9R!'u(t(0KaKEcAg!]E*f3L_ifSk&^161%Kl_(?que:>gkSb
%"%/HBEg6#9?f9XcI;U)[BE1CE(sq=dRQNtcXbaf%!9%F301Z*`Ka7$/?lF//?s.GD4RBt:i&Y9_$:FoHJ@GmlfF5c>[@DbGeKjI+
%/q.`1,a(^o\fFV=YGIZUqm:<M<%3t(Jbp.QM;C0a3A0\(38U"C@>G;U:C[XNA./;d%J7X$3<>eki<JDZBRkSc,)uDS1*<<i6B""A
%m;P=H#N/ht1$\rb5BriX%F56G"i3B[;.Kh@fNpR/2\$*6+@,9&'#G*>+!&.u`sf?u=Sf`43sm8i9EHd098(\?mQD##8^JVSiAq6U
%!MTu_^k#5TJaO"YNU'I:V*(!h*XF]4=_bqJJ@[NB!>JN:p..DmKG`%c0ZV"0+A$T,+;gcjFZ%;FLf#Kr.QP:.\01hQq+*gui8.BN
%#-:Doi#q=kf<@5d#t4h'>[\Pfq'$)d!lN8,$m_6l!R?[DF&8e@RbED=icYL(4pe-B0\?j*V#Ukmn=Y:Y@"nAU-!E:7,ijJPE<@I:
%!<Us[H8dO4(dLiNh$OUtOq"oB,VB++Pn$\"8ds[R6umr9*.e6IHaH)+gNT$I%NlF857']%F=<(OMF.Wj*:`>5615^Hium#Hhl$[B
%=<<SNZDU4Pha`BP$\Iu7,U*C'V3IELOk$8\3"hN".&p")klE6u^q`()<%5%s5\_:ccbVFlWY@u+E<XMg)oa%lmAI=3"g-rKLoO6%
%&Es%BL.fA0*"\C`Ws.c9qZKLAdgM@Q5p-Dak#HuQ26T&GGT$d]H5bq?.O$nX#mS%./*!:^n0cP;4h-IE!;#,g,+HI\8kTXJ[#E'.
%S3*O>5j"bL5q\6ImSQ`R^#V1K@&++L"(a+%4?!tah!mt%"_\?iVL*jkL167#"gA-r)3DrA6B*c_3Q#3C,*_6k=rJfcN4B)3kR[c@
%8.Ho)a^jpqfssF*8tj1VF(R&!S[PMZX$QT76&EGZ`L5j]e,W)I,CFl(4#%7L2^!,HmiYqAO.,o1[p4h%a-3;t!*>kB!e#U9E?\4j
%5%d@4JJCLpOFRqb6uZSQ!+d9#.e.b^B$&n=_"J7q=s6_UO<*BbBZqW$""u/oC(ANIY^-Z$PCW95D;7VqTQLoUJdu0B1`Aa`p[+-4
%o$IpM(+&L%@#hN*_-i",D\Tqr)E_[]#/GC#VH#Xn4JSU(Ns`nYL*fH$RYLu^0N*ZS!Ds/"B/Bt:lK'-T9Q(/Y)USq#hslPW"14_t
%-7t=@;R<dlW)qnZ;[SrC)MNcr,T&;@8T)b`5RQl'M<YBb*"GJ;2-L.*i_AC0(V!m_Y_NhX5"[X7J[Q/L$nK@*04[)p\!@X&!@6iY
%8q]_./0#mrK$f'c5ZXG6-6l^8W;g*V5`Ot18LEqS*TTs.].P'V=jX+u":69VH!k+`'aERr8AWAp%cg0:6SKoOTd;P:6_V,e4pMX&
%_k_kqe%R^)\;*PZdX"rW$jB9-=@l<6NSbtj@q5QlSK[`0Pp&]UOLceGbtoX+d`ApR)A.ZFH8UL#0L6/?J;SA\a8i>OS-;ojcO>9=
%>&boROc3I]cCKpjPitO??p5cu\nE[W65D2bPGjceK]"NAl%$Rb?Vn*8ng$e[$aM<#I]rqAiE,&Lq<05jgW'B9\79KP81?e45S`)L
%Hp5*"!e%>(L&RY/CM+-$!t;pB$!8lC!h-k.-7k+2m>Q0S@-&m@-IJc#SuZ9#Z`^+)*7)D_QnWIPUhr8*8^N\on&^rpBI6BSYL(Zc
%`Qpfh107YG(D+DSIfR0Dh'Pu:#,FHb<7=8"TSIn-o^Dt@PT-e<e?n.'BH_Yqk1,bD8m9=R#n9]UN-mW.-!6*\N)1oYg^iRmHK;RZ
%F"e678F`WJOQiT\V=saR@*DKT)h;4jEVmg279SOSnoJ%m"NboiXeu;I.HjZS5TqsEIeDG]28VNKEmaaq')`4/GJU.bg1s*_Mte'Y
%(XHO<F9dXn_A]'JGphOPTMPs%e*'BZ)aqCqTE(+T3s5I&Ea@$_;Sq&F+3Y=(qd%4n7U(n_%,EhKM7(e;6@ioZ&CEs"(-3TO752SD
%"U>t..agcn=l%:2FrTpsT\VuS8.L3uV]@1=H*1Xb_"l-_N$(kiGJpn!^eDouU0<U_7TbBf9+STqY4e1[&ZL`IJ=KQ2b5fF[AgTYd
%)BPJ_=%)Q]oLq8(P#2Yd=KnWM]22S@N,U,8k:kp_C]0.Y\J'-V][QZXhBc#Y.KIiZjIDsT,)cm=3(/.ejbpEq\pItGgB5Ibe[>LB
%k!c3WHr'Xo!Endqo/.Bf%#@Yn(e?>Fe25n@TMU7`>4=Z@mV<["FM\$A'W$=SpjmA)d)4grR=+5bK+XmFJk4/F/BX[S!emg$"qQ[p
%k(`MB]":B,"=&"3bTdLep>[!ZNje!QAt@YN5o:#K<hqih[]]PD%Z*K^:rtbElN1R=AgU*(0>^t3&P&iB5or'AHL57R8f_UG'@r^.
%nIXM55fU_0J1j@Xc-aCKKr%2QX<a2:,Qda]9iEK7Ldqbc]"?UO@%IgOTqS7'#kiuE%ONo4XhLC[e\_Dr";pO%'e5._fnI&6&$S,T
%Sm6IM86f#2$2#1\i@.)(arino@Ls5!Y7[kL!JHS&9e6hmLc-hE`N?4b#K%2hSE[+GB-@]9ajWoem\4W-g:EP?,+cV2JDD>%?m15<
%.VQX(o,Yj[WD%Lmm*0ehq[lt@W(bQ`$hD)dAopjM^0/&j@4%6dAPFe.NTi`QZ<Y2o2]a,Za41kLXh4m<&u$tW"+g=2ckMn.*r=h*
%f7sQ^M@L8t+WtcV_'IWiC_nWE)47q"8$\]`@rB.e'KSZ-c]sIKL)BP@DO]RW:L/kV+VtebJCD<AWrO@HP>_;Y7[BiD?,S0&N)^%V
%'4SaM"s)ZdUB::BA-Kuk5Yi6["Z/<D#Ng*(E<4GH<-iQb40FTl#U?Xj0N='/g>`;DdFU)!)hI5_e>AoJ*?nk2I":P))Zm\oi-*J^
%!elDN1Q3S?-JemZ>a!3f%Ztr1?uYaTa?3:N;6YqS"N=_-=GsuPB&O@?M(B.h[YkBOmNtI+Y,r7j;7HptL.eeYJ5ip5]nHcUTFE-E
%JVP.IO[Fb0K)flu#Y1WiLBQ(.g8H\pff[CuJE[5m8&6M2Ca9HHTR90/954?!VK?uKc]4,!$@+GWk+nCW"rJ"3m#Q/k@:4F#dn`QI
%Fc'[l%ui>tl)#<4:umo=2?5'E4![WD_aDn2a,D2G0O1sj.3aQk>12bFl@W40!t>>V<>t!UM`LFaW$Rm?Y%o@^!?n&H-5,^.'glR`
%d>%1u-!Eln3&'VGJ<(fnl9GpUZIG:)8fKn_K-396`Q2jc5K"(s5%$VVSf2q4`48Don.3COJQBLE$)@;_Sg&c;Q+:e4*A<(k'R`:t
%e>WG$\L=G!OMNe?-hJ9:UL4@0T1XB6LKd=_;FF^b\fGShK-n/kaLZoW!"@un'T#,<(jJ)LUI]oC1[pWnL2e^a4g_r"%0M.aUHgAF
%2V\fIB,/f3#"":o$&%\k2St%C9?P'?#pZ.=-'X-=MTu?8rd!4a!ueEF;BO2N\_=NXA:UH@"p>r[<tMIV5_hLN'PeNq`,q3&;PIcG
%>RdR/3e;Z!)$UR9Yn"BgHj]j]g]>=b>.e;=&.]MW;RE&m3!(>:Sr)ep'NQE%eHArN&%KV+6gCAl07p`@3(F%IW$fH<oaqCMjVeuG
%;T@GpJO64aJisHMTEe0<5E&Hk<)?b%1NKS$R0-KqktQFa=qaAe!i=MO"!e-cg=8Ypi:n3[F;oCI.<[-pUeO]/L>JMU8Ss&eJ;NM-
%0^9^Scu;g=HOs/GGlRq-1/Vb)1Sd;`UEBZ!aF.R>"#"ZV)gq3AT:'W,M;_U.8])f@TM1a.[Br\:T*!:@VKEN1E<F[@-%m`!FpAP#
%(_cWY"bL$%gmP#ViTo/#_Mk&giT]X+5K-kaYp27Z!tH<A$ii=dRV5N6Ba-i38@O4=%<Fa)m:;8%fMbt#U/scr#r%^.PR0$'(Dn!c
%O=de0oGDP<!GP%e3TXHF#$/9;OD?NTLPcLW-[._oFQ]G;:`Xm2g(ECm_F0*c%ut]m)!B![2WkeEdpNh>L/[ar8@TENJtsB0*^WH!
%&;VP1)TFtXCsiXmA=<T4b^C/%AepMh<jDb&SpUW-9=Sa-2iK9j_PPTk=Np..)F8sQB@mWgR+*f#"qTl$E\S1-N"KETZ@IO(%VG#t
%LZ=3tE[24YgO'rt11^Rq`XU%f_$gg[3MF649a8WE!h1Q8S;5#m`hY<$U*q8P;#88bC^&OY=Nq'&1"G;n=BB\W6BQeiZ;6&dAK@I3
%;Q?2Mmbm)DSM=!a7U[1U>Y<g6BWD7]ig=M5SsTQd4Gp88OHR>Y@3G&a(sm=]l2V69W=a-CW-gb(''+d'oVe1Gh8B/HmOh1Z*5U'C
%9N+7A?<X:HNJQ*@/#@S4CGu>t$9]k8Q)%4h%B2cV>4!(PI7G.(TbjE7UUi3_$3Hbm#"DTRT8)?l>XVO$,Y\h\;eMUUJ-JP"'b,0'
%,i2?$0b*]%@?Peo:c>fM+\cnbk$73`>V0M;,up1#h-Dd.T;&O+CrQJ<2OZp`L[G@mO]n(`bb=I'Ilq>s;+`fde<5!iBN4AO1DJ-#
%i#FN&&I)E/Qk]oH;dcQA"/?b99jFnH6*cAI"/cD:7n5(//BSog+FD=-jI>YFYfTJ/;u#%baLQ(oNar#=!/$XtL][\?lDAHleL*fk
%49G[TPo?M$WtPLb?#II+-%?Jc;f5,.&?`C8j`"Wt"@O3*L&lG&OV,fZ=H<8*d8/8h@n*[ChdM6@h8#I'S0E>QZUMYmK481JJVND7
%'<,-W-976`ho8N'A3Ob,,aLeLX)gt%)g.*+7bpS3Lk&u)pXSg`,A._>Xc>n[0LhH1hnXWfW8O6bCHrHf/]!$j;p(nTIBC+eFPc4,
%0s)C.]M!#G$)BoJ1*B\cJfm#aPV-s<b&mbf):KC1S;]:X_&a'F_3=SKUFA/o"QoqHVi9i$bQ\dk%AQkF=dU]4Pr<qr)3bNGpoL5H
%V.cr/H4E<Q/gFMPM%SX"TePOVBMFk#U>cLGDU<qHAI>nS.a@^9"(To*`<;Z?lO@s)O'o=&9!*'l22$65h;Vi\MN&iB51)GMeIabr
%3sE)fFaOuF%<D%Hk(0&2h5)@@W1[+WN[^.i704Bc+NR1%JS]16_mq7[+&o,1dm=n?EK&CINo<m[W=-jTTc9f6be>bCD%)aeD.E?]
%kW\8u.7,gkFX\8_G8t0,4q?\u0h8EC"1+*+L3PFOX2P=BGG!)c/DN"L%DA*YbWRNHEcm6K'>6:LM+M!Q28C+F=9_J0@a;6$/$A%Q
%R&$`9KLqsRh*&Or*ReE8Fi"gb.NMB:jqX.p@1lOD.Hi$sPMd$T`M,LB!.u8fP_=1l.6gUGPR+KcLWBiS%Q=g!#8AH2:sUGV`G-5N
%1^*%KCOkpbcVu9J&FBM)Z3%.7WdR395fmnsJ^U>f%%J6<!b("E(eP,hO<I;Ah$IKjk.iG+#q2SQToek>(6gi1OU@mY69.S``3*cc
%)aB[WclSJe\s-<;&65;W3@NK)YCU:`Y0!=?\h!mC*BBPkj"BH!)7m?5<_Z1CR445Jnc@QC.Ya`+%iEi!$ODqq8&dZm2`&8_8\R6#
%E!-PUf4T[>oE(l<J'<'5M9f(OeWG.eZk:+U'ACA-&(.;6TqG@>&J#(oKPN[b+A;n/"N`1d?76DEgk1'3Fc<_lKl2pO%7^XD@o(!I
%D1j$0rBPu<#-4lV$7aKr<oc'`.Q-TAf+]9TZLU+pN2eX-+:-('h1\o<%YUr5ct,KCo/I*kHmAoEFJ!ZG!EK2'.L,tUj<A]*KuAWR
%aXiMs*X+5O(WaZ46f)f3aN)C*GKihM(1ii5F)mk4F<^V/C8mASJr!g%!#Br6NWQ4^`#,9_>+je[W8J@A@:`N@CkrOaO.`RGGQ<No
%SuM>.koZ-&^@.G0&59Lt]`R'shc+?(6NDJ&PTZ@UNiss;I@DQK`u7>3Gp<`G8LXWr_i6Lj1++5fg(RT987t]j`4/=Z9`0"2"u+8:
%18L:tUP^DBOST[2V&ED*$5%8WGn?u6;IbC+5hDm-*PtK,fd1_5,Mp<?JH5gE6!ss[!3uH:eVb[S@&R\68\HUR6q'<anB<%)T<^1R
%6%IKI)CMJ+-oHPV&EXjIY:+CHnRIU_$l.a4'MQR>E9NB[=fN;%5de$S-lYf&016nL0a-O6I#[EPI@E.3W$S;;Y^4h1CuX$r-ipRr
%[JbVEHZX3H9/F*t<r7IW@6-f[-sD1i>=S1CPJJLmXV%4Q6()8F$]Na@i@/-c0+2'A.EG'2]*XQ%jMY\5YF>&JduI;I&ki90QdY%?
%Cu>J<R"8a'W.@On+_g5C%]VQ^bFnC&C_D5.<+&EqC'tJ?$>:SV.`WfLFh!f;@QJJGmNs"u-rfW'mRim8S?!=n*uAk;N!cb:P>H<S
%7K7,<*`FD`-AW0\V^?O<0btMfCb)$Z-:_n8LNteZ-.^0T?k4SXGO:qD#(U/VDU`8G@;t=_q'%N-I16?e>Y^YkX\S%hFF$8dC6^Ue
%f6=>WN2[t3L@fnb+nU`I`i1uI[G'h-]$+]MQjrFkGF];]ZX_4TPWaok&Fopo)?#)p&>S<eR+4:B.Pm,@5W5lAR66-OZHY4bQl-[t
%H?:#)abY`<_N5'_H!D\1$WnV:CRX8H4ULL$J6sLB)GGm*&/W6%_R@teU`][?c_T&NVeUmGCU^oBs,9WIi\W3"U0W<i0I^Z(@XPj?
%Ne@,h!e?q*&ErOSAt!_@TsnG3WJ`L8R#BX`K$6o?;:#\Z?s"lfUEU$#?!rp*9b_!c!!NOV$n9HA4Y5]ij2]jg;VYCAcEKoFqd%?t
%kcs1oTHFml76.rR!),^O!Rlm=)+E'XhU(]uKJX!_b!Zfb?=%R[c-X:BPmt5N0$G9<cR&I[j#%Up];)k&:a%SHhPKN[T-2u3M(<F_
%N^lMkL36d1MQ="n7T+ddj\,!N^(AL4KnL/;?#?]&JmHm`,Wu6:ha,&6(Eirjh"53C%RgqfBK(Vg;I.7o`JT=4(Xj#.2ju:D6s)M#
%"ldr6HM/+%P)?9MAjbH4V2R4tde@SPnXYGGl=6WJ>#QH!OjX4FA>p\R;6^8\;:8?C(Qg*Te(&qm-4[LRJ`+^mT2$+,`M!naJN=&;
%!CeZ;7PP_dJS%$W>VN8?(=J[+Bk_"]f94fd[81LLKR$12,Lb;R(h%O]JuZ9gLBh)U1/OX(&Re+@?n]b-NYS@7k=TH^6./8k+G<7.
%NBlSS%!f@Q`%YN.#](A=h?]il-1+ol!"g$S@76TZ^EVAG<W44d?/LMjN`WY;ViIk<C93?_KK5K1L;L>ujC'46/J:F#6rGlL[NlPb
%fk"8FVB_4qS@I,%(^MD_O#2`ZYaQ?sRLI0=3$iXf'Ys9>@H7f-$7WrhXWfmDE)k+>3>D[d@M,n_l%l<p<ghm0\KO<KAJ7;F>,j4:
%##&i1BH%hT,6H0o#N)Z=dPmV3Ph\`t`Gqsr->SW`.tSZ/)")ps<XGY`TEoV?a[7bO%J(S4Tdc1O-B,\&C`&!k?c+QMBQp<5[@fQW
%4dtT&@uuZ?>ajH@UR3do!`W6HEumN5NF^X\Z:XSFki*/=@sDOJ!mKd&IM*E_8/l(5XiR2t)ppI:N0@QZ2^.l*L^R(;9G/9:dWdqm
%rUu'@1&af>Li?JXf`Fb?/(ZI&YVrU8r6PI5cPXH&QWG>(?]`.]/iO/LjI%18A(FJr>?/6O$7DagJ''&?b$)pt1V!WS0m\ET2AD&u
%#%*acP]@4eK5GO]oX2.-Y]G^8bfhSOjpF)W35M(:A;$-8Zm9'r&D*4h;iZIt(2tbGZ/I`5<uMO18k#<Q6U+d^0_8#$$`8+^-$ne'
%)&DdXQQ5?Ha#DYK:_//*c[rqKVlJnjCH&lBPe=0K6:/UEbc?:!bVbZiN_[g7pf,b#+EQ9=@%7j$"I"j?bY`JJHnY,-?.3(mD2Y2a
%4t=EK&D5*m)J2>;?q06E(E)usko(@<ONUA?:goZg"LiG^9ais4@;=C>D(/YI0G*<B2__(^"]C"Ha6so1AI;3\&;:T!!Xq2;7qY@u
%]R*-926p4aoRI)g`+2EW5'K_!0sI5tUPlG-S^aad`7leR?sRch3m&-ds2#^5!MsB>7XZ]iWngZK[2Jh\dL>/-0GH-]4qn#p;T"%2
%!`KuUokq!cJVP%e4>"K*)rT.m5K]'#+!QbED>HbCZ#o&Z%WFtq@giEsNF+9iZV[[],`m0ZBi3++Y^gG0ihZi`G(d\@Q["898pPE,
%U#W([>\@40&dX2q\?<QN(Bh;).TYG'mYtVc\/0FB`'/<FSq1=HO-q!rFXVXu)ag(Za/$H.K@pH7]+\;m*3\p(91]K.1UaO3F/Wg[
%K/_lN;g57Z5o?M/$%rI)-Go$e7TGp;H_C!g8</Fjfh^N1#+OcK1e*LY8_>2R;im0XRcG'MR^CJXU4RuXVe58u//6Oc"n#4K\irlj
%>&_`X*/=oMl,hSt\0jb)NKGl+,$,hlpU)\F_C_'&Z@thIF;]UP6q/3UR$hN;mViUrIE]njHQ&J0KhJS/L!fR\5f5/0:q<",/X8Y"
%<Wp5>RE;g)?S<(V\[o?Z,8V-VRf"HuPtu(f6&?(+X^Ghf1O$&7-@Cd\Z86aX*>j_QYWd5`EFE7,$9U2i9MQVFhV,>ZYeHF'r90$K
%@phE<KS>ODG<?mj%(khU%b?B>_!KiEN>sM+2KMM'Ql%:j\9Zh5`tR[f.*2XH$#tq6bd&\HSVl\=juQoORqJ`YYlKb^,mYf7*!6;O
%;YlEE:mqePQLfH3DkliBQbG;?F'UqgD]:[5VJVi&XfVsX&Xn]j9L>GhoP-LTJAOb]%K`15`iD[Q^CeX9Fb\%-c#2s($>[Rf6R!V*
%.W&/5JD@qf1E[2YJsa9QQ8_Ib2]FT@WlkrCaa8W%fg[Y5R-o&d+RH8,.>S=Y.[!-9O)FL8loNAXEdJ7SP'"O]m(02l;0#I"VI$cP
%41Sbmf!47="3dTNCK&4g\@+=t3gh!r<JZ4>6[NKHg?YJt]0O^1eX0s#lpWJEiH-FTm@s*mRF(']+:l[jY[MN"RU:/j:+&L[</PmG
%bb\Wf?"m$/eTA2pTX1BDbgrHo7oQFk1C"ac%YQG1nL:D,ArFClNM-l?e=dL#GE&VQ_F)>?bd1^'GHLBf9hn)X4b&'D0T(F$(+R\K
%^ob_A?m(+r7Cq+;\ZU,J>Y_f+$O1.ld]3L3F\Z\t38GS-`&4NDTbBp9Y@cF44FO>nj8+E5;5?#W.oG.6kGBd\>lh<$#Hj*aF*tTO
%VPY'=l\@[16h`@?B#12="FAZc?qMAc8+Vk(<hQ@!Sh^?YrHON;VZM/`j\u$;!3A+'4c@]QSOoJtGa#(@JqPc*CVkFNNbKu=;KaDX
%O"b1`FU\Pq')"#tk]:%'K2CG`PT`SPSV+_p`:-&#0G9TRlY%3&ii'(1H-6mTP.$oo,KAsFCAPg<DjoGrjr##9@Na/""1<e]KZQLI
%kqWGm`-\n";j7>kc1,Hc32Z%tkmLPue)cYc!'hC20j/]M&+XS!``K#E8^[VFHMGE57AoeSLCN&6N[aE?B3!i!E9u$U;IB.e0_6#C
%4WnPQ!M6hHb]]Af/rLQe\SZ'sNocS^<,YUuX(jtO55>`q`[dQ+ki<XUE*\+g&SY\E#p0Q6[SYC+-0Acd%8rEHVVD]kKp%t/8gDQV
%)]8o[^<LZXm20Tr;"9)jW?X"V&>XFTJ>D?F=<MHc&^,rsm2\1#RE1U=6>nn^5p^2qS]%ec`$K\PQ's3On"`XnWt+cLfX+'OqK"i+
%P/\c$:#ocGK!%'L<'3gM$,XP5VF^BOR.Ci9S,-aj+sD8$qW\/([>olJTd;j-K=;7Y?4>8=F(,^XmLFgh%7VW/\d0K&/.Y"/Uj$@J
%Z@HD+Ge`"PgUC23h'5]'0.A;E\AL-ZfrTG5S$$r@EfI'HT1R;7G&eUQ@!Il)l*VaJKdf$D3f4YKM([DH#H4(q:Q?2;4e_ub%>9Y-
%M/L;-TB!HDaTurLK,akAS$?:Rl(\/B5=e.q)PHr:IY@f=1gCRfP5=a_KBAUVl3ckKp%&NNX`HrKkRhmZJEqj+`uaHMYX<>Q\D]eJ
%!?&0KQ?6>6d#B#@K9T-IT[uff:8h;,fIOF5ECT,D[t\VY#U2p6hN)("VW_=3mNrdbn\gi5M*XeWn`%FqPV#.*pfaH?<HpQDI,2U2
%CfsVC$u[-8>`)K=HU:d\89A?j=Pjmkneca0`hna'"](sKg@V%QhS@XRpki8m,sHIr945r+:sdZY(O-IAEg)_[-h@ROY"jJnHOJWY
%_0E]=O^^%p5]t2Y-loP2a"KE;SRT)sdi_]^93n'?09KCD6.n`!MF.QmQMpLT4tN[B9&Dm'77e6W53<N<;k`)Hd80%(Eei)B4si3^
%M3ufTM800=>tD+p:"qbET"W6s05]scDh>W=>B<R3W,L>A(Nit(^0fh<IpHF%d+:C.q^r?/VO3is=@2!cqoVpI$3AVc_DQJi;EqC>
%.2-.7og!4K`6CAMFB-+G'i7u$U34,lUbdZ6im9Xb@'LUe\Fnu2#<husQ'du09"0X10mOpj@mitm1FJR=o8WJVersS2cr&pX#T.G+
%mpdqB2!T5/9\L;.&/JCHl]In')8"JM2fUQdTW?Y!\Quj^-qtEu;ss.lUTp88]Yd#NT-nJ=[?!hWDs)H?ko_PEF$jFC1O],n&)Q!6
%!dDR\TWeAlm9cN'4/PZ<I<rXr%?2O)Rpq+OkJ?XN**iZgbpsKG=P?9K4gC^B@dY[Q\Kb0&D54;@UJnt9p;TA-d[(d>G.s6('K4Lm
%5?0*8g<QRa0nT4C%33W'SS?%d"g`D`3E7OGYggL5::Df;%9&i4efM<VWB=(&a3tC>i\:m*U$KYi=lP/eaP<j_`$m-&G6G96f>m#u
%SuJ+/\*rP5LnrD4dMXRJS]*=H6^Yb^#l3=V<b]F$^:@[5iZe_^#o=Lt_tYmNKBePsCRfVP_qpW7/5d34_Pe<(U84A;]trp?ECja,
%dIi,_'O?<3V0gcAobBpZ0YHG/El!^S0^tdZ5Yr[UH==r@GE+L&_n_!:B4)St<=i%^eiqK8ceiHIbK-[12tt*91tI2M6nZ/*Ue:lR
%@;Y';Y>m;o@c/h!WG`5$/=iJ)+3gojX?NO4M9NkX4S*"hJLLka@);N46_PUh6BIp$)&AYSm3B]m/4eW>eeOt(UMQK88r4+*q*s8=
%URR6hC5Hk$fr77jQj4l#=Vpi4Ds^e5Xin#Wgb5W+n9#AN@5@;<V?S=P$/,rt-V9\iJlsC&V;f8a][&[Zga=;O.:aZDHu#:dp=a<,
%3A0d>8)=X=DX)7UHKl+`g>Z%d.+67PNl(,nK3[.TFQ*e!+fg#3Y3"0sGih^6H(*%pjl2eJK'h1_l;e2:72`"-^<,iEqPcW4b#4FD
%*u=AnE-7%`&0igqB&r$EPb+>dc?Z_9VZRLHe9:9*XraJ%aFP@$LdbPC_3.>%\l,E,$TU5RagNa&+k=aVbt4s.8Kb$D.Se<1jWD1`
%i=kp;RApa6nW876][`^EI)Q,0ctm8f,'dA!^to\UZ%8X$?DVWB&F$mU/,rP\TAB)kjcl)#\kKC24SVp[CLJdBDKs[qQK)q+G8NS[
%^i_1sKoj@Gi8@d`UnZ>c4[_<*I`A2UfSJB"K<fQ2`,>&ScpXuJ]?0I8=r5HY<Hq]]9eY;kF]+UFNY4#j;)-hC]%hN^'`QhUC2?*5
%R_mjqj_*arHa4e;R!Nj)`<R<PLB%c_c\aP[lD_.4k85(``BCMr4i2<Jh4QhiPr]\r</2Y],W$;<+ctFkh(=ZAh([,(F@\=a:<V9`
%#$4UR4,%m#F4Ah30M^_j2jBLu(EE1V#=KCWED:*%k]^389.7kj[(#bam5\e-VAs6LDejH)9;X&Dq$FQF4Xoq^[sp6N5jirgR(Wnt
%'J[P<=Z(+.70,#2LhQ9egAE_r/(/[u0cTI#TW;-8+pF.,,8!t11Ao&T>:%2Z"D^EQ]15!JB$KS(B5-n30,?3jQ`QB-CMrYO%80Op
%n,b[e9eCL:0g/s:pMofnIJg5#I-LJo/'a^e0IX.e+;Mcpe59l>F']M/XDelnC2rr,EW\p1BTsR1Z$&#4>"^]Pg3DA#6^=P(+oP"u
%h":ZX;]nb7T1Se+hl<ZK\h$n8DTE+ihGMFQR&Rr[p"WGqd=ajT=#M/X*&)/u5"?&W<qZDkT3u3P.\)cj*H_UL*)k/Y[?^pukA0BV
%0P!*Zm/6j>#Rf_%!XlJ<((.b9J_(#SOHbF4(6>",!UZr4=@uR%?XM(C4PM^G7Yeo(^*>-/?e:fLmmM6]\FuAZ7uCJiW.?2k`Hq\]
%'nS_%(`0cZ1JS]\1T3`oEcjc0?qOQD$e3kRG%<T68=Hl5CW'O#)QfOtpo;b%]T*U_Shms7ThV9<i7G^67-L)K"V0H^5Zkr+=b7F\
%BR0j>Ic,BD@&#tf4.jD/.nn,pYXBc#J[.1c[h6trm%a[HTk%R9HtJM1)Ta:dS/WP8iEF%nk+e[pHXUc!/I<]ljAL9d%*GL?Bf0ja
%Ls#PcY>'0e!4,e[Gj*jI+R%5F[0-+`!W/mnI,MVf]hl++%:q8dQ;C05jTJOE$q[:r1UBk4PgC7nh,Ktf+55HV^g(S8lK-C;qE"%.
%"hkT)*2&`9-6("(94GMmG[c`]eBJN497?bR%]^E<FVTC^nF<9,%Q->Wd!Sm3&kJFb'"+M!j0j&jo<7lOT``F(f)6I8@jLTB`qjN0
%?[U$tpNlcC.qA0>rPPC3FlV><DT+A.^0/U$]q^$E_lT&p++>"6@W1kl)MCMI3LUIb5FSVuk'/6%;ipmg&r:EbQ_"><RHPSZ<]ABe
%5#8It(I*[Iii#3lO&RZ%<kh!=a_27M`io%IRG+PDjS50nAZ;B="uQceW]1h:_Q1&g:L>K7Ik%I(59Ph/nO;aXl'=)3+K`lQ;]\a5
%UX\6a.)$k>D@EX(hCYBNDOi*FO;^lk_>uJ^(qHI0^>?7MmR8?/f$',9>XaVt.E&SW>r-/\j!"COB*T.%MXi7qh@eI;$(2j2C@9B5
%kd8sr6:=p1%rW.$L1t".;qJ9[P#HXal!4erm2$5XFcd$l)Do+hs1_Wk1I0l.I7-bbE_h21d\s0[Gia>/W&%$GnRUab,8'!;\9_%q
%CT+L<pl*ZF9-NLPSss,(Uk.cP915V\>=deIn.u[pT]:&=4jF4FqCkjD>%%]C$BJolTh(?ni1r,Ir$RQE`%>Z:T)QL1J5hZ$dEOnO
%^^(]UDY.l1&39Yi"pfBGFhh(9*:15%N!Tra/OlbcJt`!?!$9VC`p\lsPC1li+-D]?rVR'&1BNqVA6K^"dm>oNFSc)th0]XRMGY1^
%A,)rca)_%lDS^Ma\u;o[b=;B+Bk)9H'hoJ-Wk!JVBX79GDn^EhCdaMhY'UcA]7Kkp&8i^oX0BG=QWdccb_QCQkQ$Dup&m<#'Na*[
%:i!t-bXQphc\c-7:\CYoDR+E7<#SaXNi&rh"[9`dmf*giM^%kqCOb4kJDhZ6Ir=JMee$OAjnp2<WYs7(3-JW0^T4A2(Xui+`@p$W
%Qtqs0&HETk?&Z'Y)S3RcK)S>p@ns4pk>6I<XgN\Vp5BiqLR`t8D!XJliq+;_%@-`$3)=X_BF/Cu[*l`U@1+88IVNm!p=E7P57q?e
%-]3>K_s<kB9<UplA=8a8b)B=G2@ZJ,]MM?><B16KD9)KUXMtR:PA-+J#hACV"tAbmBjLa2nG2@\n\m_]\GEPP01>e9l&s9LfE-G'
%@><\7eWd8Bnk3`Z*$8kQ-$PF,:]ANBk3%,V>%gLL"C\57piD+J'\-:tb^nEc,mKVrYc<R\nC8FLW[ATaeRMph6gKc=I?+;7UI@b5
%)GZp\90;V/&fPQ7TOD3RN/K69\UJVY5<T$Wm;-WJHF'Fr305Yn'$:c]EX5UFdV3Gl<-)2@./h1S'*@]57(1:!IVi):o&nYhXdN3l
%_`dB"WcCPpQu\4-G5'Zsa[.P6HO&/]$.cD0J7b],@b28lC%8PC;m!7g.-7r>4pGH0P"W[9Kb^c!o^q'=D8GWpSXSP$ol=u2B?gtN
%-d*c[7\En:ZT(q+\f9b+SlAkFDqHAaX(d`3[I#qq%SuQc^&^DX84t>p;]UT6Z])$C#$J3Cs3'\*RNC,DV8$FT,('t1223.4+K&iR
%I@e5OFfUY.f7'Xn\FT8/"/uTs;`OkuJhdi2&b&'/]*H$=[Y9a"BpZ=`rPKqP7X+(8HAD2pj3VQ2<C).e>TVN9T<>&V't@G-YuV1/
%'gB`SnM"*ir5CT-<$V2UpqRG7f<0eb>5pu=q&;FmF7''[S.m&4ZZddUKQ\ct+<f_h\B2s@iljBq4RHbAG:i3W3I[#Vc!a(,#jGd<
%4;1[9H%/Sm(RYJ]/c/,`3$7*<(r4H0](T/Cb)R;c2V_h1:QG$rkG3fEKjkquee,]m>P=s]92#l8(8Vjo"qd=j2SBEjdr?g_gR^s"
%WXsdn<EbUeL92iK;[*dt.Fb.7-X&L'SYW<ZLS`mCpcsnr'e2&T!4g@MfX)C56A0X-e.Hjc68?r`&6YHYBKK#75VnqW?E3.q\]o:L
%P9^=d)bm`-h<>5q*<C;Q)j>9?fdke++j#>?(=W^dg-2a9Vt'mRTEi\S=bf@Yi@]-6RCqhE%.tX]m@D@,'jl`-$14T/r1IM_ObJJI
%roNAm_IZ4Kbg2/JK*'WA0@!T_JWa3$"07J*rg,*ec+1*%rnKPN-N"Q?VcjYIqRZ4p5=M=?Ur-0Dp_tOl<B'KqA3hHeMJmf?qjS?l
%/XW4k:aH>-<V3;U;n=Ot0Q!X!eCQ2@qR74N0rg2D8MT^jr&A#Tb'?l[)S"R`kD!Q;\`;4P!bina*6u.[&dl0pgc`3\BaurZmWNR!
%<"g&D5r+b<->:X2gg'76j'uJ_O2AB;E_u&-ijTfMMO$CBUjS`29J<46/b,bTRsM''h+L!@%C/hISJqk*o?NCHAG:"#:S=E>P5/q=
%s")f";]Hi%VssmEHT5h4o*M7!duh0YaE3W+Jh48b&AQ/=X;N[e_MQ`XXMtT!(IIE)GaF&lT(SP>UfKWW\7MG4OH[";*4J#P[fq$4
%VlAR*M/Fa"#qV\Hr:EoUlPeu\[qMXg$.0>d-BQd,f.LdO't_t(TV^$#L'@urnu^GOJl-OQg74f-Ai,JO?UbtAnVK@?6B?EL2#+__
%i99Eh@b7RH&;\C+aKL8/M`5e*[=A'>fOAMsi1pT.*<>c:MUGS;68Q2\ld@tV*iOu#<Y*N7;AU7c@9);`TI86cGV2^DGG#BP:G&h\
%@$8<F4*!q<2q>n3l_Cmf]*47[[=^<U[4<7t!e5Gu#T=i:UgBb,7(E#/LG/O\@Y*/J`6\!O^WhO>6Thi>0Z!86]BbP0->"*E.;Y([
%-B5[[MHq#31N`6pV6@m6:r,IUh3Lj.V4mSk3Ab1p.g8Qp@1_TUh(E,,5YL;oRQd_'B#oTT#B8#s&SIogaEW.tnk[X$U:R,W/-;^q
%+Om,o:8N-QS;HUf+mo]R_r>CAo,^55/n\)`[A;Z0Hp&%LMGbeN@bjmB2lUs($Y6o1RP@TQ-MBqF(TG].>prn`Nnc&XWBo4a8td2;
%_3dPV.N\t2[(3pr_.;8[.s+b@@>Xhea;Sh6BIpVknkg`(i@%T(6SG&q6'5i@35F!:bEZ/T&\"3l5=^8>]Haq_XAo>MNK^[`Sn:f<
%*jM]n5L-<kK$lGI.**lM;*W$s>L!&i?o/`O.A8,"MlEO.FatI1`@@_hj17p\Q3jO`#nQsMMs%=._c<J9]C)Us>1`oGa=HXres6mB
%Z/u.p8n&edHqNQi/%5\])p#Wnb`+8maReMd9(IM]IO5uMZ+I7qfP*SR-`0[#h=NKUj-bLT!mHU@4a@*32)U;BgiRa;(XdBa#p1hn
%B5W`tFiDfhb*79@^uTb%(QF-W5?\s#YUaN#J8VU#lQFA".FtTb=2GQl[ln#o[%_p:2fndo$=?QRfJ#1Q=:DWG6a-#BChhV#6+u\m
%I;>MOi"K>>E'J7pOed-WIu95\U$62J1.@*N2dh3*f6b/di0;ccVCd)kiRpuTLj\X/j4]rY!PA.DHQ)<__53IBmX<M]9qun+aKW*.
%3^j;WrZhtU2hql]gO]RNY5r0GGj/"-R]8\d2=dW=9P$=`F0AX]TXj6`[WhHa2*h4P>1C4+lmT\""O.q0+MeKO=>33$VJ(UfhWW<i
%/Y@6>m9j#&Rp@t@FZ$WTLG/8%(n98sJGZ4_'g!7l)!2\XoQY&q>Bu=<=j7[?&[cJchl$U;Ts,)"2786[l1?q:EUs1tO6tD=7If=h
%jgA1VnKodO)RjC'2MsV(qp&NIEu4Q'(!$!p;s(9r)lKsgf[1-q_5$#'2m:tOSnHFVlo0>-7=V^rJi#Wm#rlBl;L.ctF_m2o.b:m*
%<S0_uV@"HLq3/u`[o=SEo]H:o2UVEHMpGN=.0=E49h]GFA[&1QXI/68Q)SY,n+:$]"t`oc`s8lG<`Es+CsjQ^Qe1g+H$00<]<JIt
%3fEB9XH9:j><Fa@,s@GEiI[I"WS3EZ.D.3H6C-K'GoO'n8`S$[='jA"9Fr8F?j6`lVJQm1Hb9Cp7Ri(G1LHL$\pC)Ngg/t4R3C_3
%MSQ)9oE=XtVW.j[_R=Zu;HH>5!/XmtX<IZgULd">CnRmT6t/X\9<V\^nqu[;P;k=QR2RpKP@Ge,-o2Y"j6W,/`]107:5u-94*<1-
%rld'u6_NZ4Q7AI1/H`tLR>U1F+t*XYrY1bo:eK8BFkq.?nEs-UV4BZ0@l71PM;k"tp?9im=-%dZ[$8.-.j-2Z"u+%Tdo1FXC;M?`
%SWlTflU7=d9Yu2,ZfB65I/*=k<t5m0N%]\/fs/Iu:lbN0bpB5af9^_Mj2bl@%$O1<39]muLPL2lK<'`t>r#A_$/dd$k$c[dFK6GY
%Ag#bA]2[S\WdAETq0#@i.r5N)d)n:2-cW9O,q+4`8'Y+Cqi(5HIe*Vp="^;H9$m<C-'bT-\"ijn&l',:WFX:-ENGZe9I5GC!=aK@
%/st8!m(XuMIf?K<$:9%Be-pSKl<p'>!2RV"9r28lMLfQ2O8@eKQ8]^(h*c$M$e3V*)r&8?F(1-`Y#t)B[?>^NX00'k^WK=;^;3eW
%f]p8\Kb&+$cM4e@[dTrKeohTsbIN5si45?.^.KEdbGqAjHBW=__Mp%/'o)VX+8N%A#0)JQ4t]Ak_$"adE3TK0[PtD<Y">;TajXh>
%!L\VZm3t/9i)PGGLfrY-86-oS>_u>#@!MiF\9>0D_XPeGNoZm\4<1E'Ed)p'YC?&7;SmRP6suiQ+(Jh967`?g"V27lUb:%Wn<W:B
%r=jTNmVlE,$.kK1YGu6RWusJ?V3cL!J;fM-6_J/s-s#p;:7nMUZ7Li+8N)$n!:':+k2Q%!ddN[jTBCGHi>jFG@g-S?%liYC8'&pF
%$Z!Ob;]B)AY8)i\E5*DB8YFZQ%.%?3EBh2e*QYEb'*GbO]pYpJ?ar)>TLcR_b?5+J+40$eK)4]7SNo6eCP\C+DA/G3d]`'5UEt<U
%e<!!S8\P.s3QK7JHp=$mNN][L,k7Ce@Xc#Db3V(EkGM[p8F0lRmYBo2)Oca[V(LFK=[ZRAN>[\5dpF%`*6WiIhfmaoihs:Dh#Jr+
%V_"blRS`ZmI,]@(M`_Xr[@`.J3rt`MRQ>;'+la80+0hcl-.\*a"*<8'!5e9;]Q3+hS%N&n<7tKs5^UAVP#_Ni467n(@TKeP[TJT:
%%Ps^B7R8T>9'H:Wod&'f7/1;X7=1g8Zc2,X]Uj_i&9=W";6SL6373.C<T@7%VM$B8!]G3A;b-;P!_qE@IlJ[>;i$f;D5:ES01N@<
%+kB;5.."#MX/Y]1H7l+1d9J1'[9P`rRp#a_)D*LGj[gab"Co$b%O/s2DF%CET0>rI\,K'WVK@mPIZEmb7n\.R(i)[k-8b]=[bEem
%N<X?f?1[*]FftCL"I6+*h$Eg0*BK@r@2+B(V=otU9ZY.$2lS.+,l&>tn`h3%lEC2/V)E$;-P^Qd#--.Nf.f1mc1OdP&^2O;Np<.2
%%?9R+p/4a)>q;^G>c-&uW`723.>lNqiFMV:Q?b=3Se\\'1Ls1O"'\EF+<:d6<g/1i%NUF[8$dC(AFY8[JO>1q/*K>WfdfBZ0iS__
%W&[I_KTjB;j.lE9=-0:15qh^u?V,Ojft>;^7i7I>B&6$`a:(%=Q]OfU.Ga2!ga&ngK<Nq6VEbM(h6%LBEWAm.]"n=!/HLT86UCnt
%3:0To#ei$A3LQO>mE%L4<W,c;3JtBSc\Iu!-2GC-j'FP`7E+s?q;EPMmhH&d9'kQrXB789Cd`c-=9>_;D2j<AFN3!cb2lSlPW6Re
%iGlE#/b2>fIYu9ZOflk!&Il3f??d+)=s;g7^^PL15G&Yt==ENW0+gMYRB*HQT6i$=$)f[1!S2)Oq`)I<<98b'][SW;7\scui\/F[
%JX6XCF@e&:F`KT0(<<]7%SLa_'<$&[+bqMtDN#*`?u]F4NGbs,(P2O#!i=S#RU7&4J>u^;L>h[:;ko)qi-KK#c$,9q(q#TK$M/0c
%f+WrQ*/8O])b,'-U1gEkPX+6F^1M)58[VLe#(8&kL6@oXhfo9n%GpC>FD(f:"*GHm8"m2ZPhcQB.hF!1AS@l2D'cR<eJmqs2+U0;
%q!t+-Q(DGVX!L-5LOYejF!jN^o>Fmm[\GX0*bc*#C8iMm]`+@GMLb*XV6a6^(?>*_MR^qDLYeTWi_t2_cl1q)k8#FS];3?2ZBKQD
%0"2:]m<Cl;a4crD-`rM-*f@e#AQ;AI#q^#9j\W>)Cke2kBk<qB\@'h1p5#^O%Q*D[ob?FEjiY:ViZb$nYLpKZZktB#LR<M78ALN=
%Ue9o$P=`oo=iolm4fX-9$%*Mj2(d*A2[W0(Rq9=uC.2s':MT0;:Of\mMpnU.kt@@Ziem(3ksI(Ogk8>$bdF%+l/]ZW@Fs,E3:>&t
%GIQH-8W>aI2%=DKddTsb+_2+J^&f?JlljltCU4(nhSACrF[Y+af@./]]n\d!Yu6`ids`B$HMo=*rmaP?obS!MQ%1\I/-**XAm\/K
%d&8[j[9#:XRd'-;;+P%r&:Xd4E!K!$B"8U,IlaYd?ITaY%GteRlY0KJkbk@<$"i1fGr;@.rWKDO'55A?DA#:4YDBT!B.#*%D0`]Q
%&OKEg&J&;pjJ]7HJU\['=t'll;jU2(9M&gISr_9$2U:#kh[IQfacV?^M\a`;M^gPkCS\KB!Z&*Gkgbmt%%`Tih-r>`qs!<=k+T%u
%nrDZc'-%>]LVhm$C\s(<N4+IM:*F!U+?Lb_fV1`-BhNbdMlPG::rdOe=XKRtcaJ/8IE)V@!3F"?YaA\Q$lnm';H-tBkV30>Z'D5Z
%I5>KS.NF[BDG7.^-har5^U-fOB%ZO\^VEWbkh`[U^=])Y2u;;e`HRK!9eF%JlN>%;[+K'WM7AfsLG:Aq_6$iaD854u$YRs_fP]qE
%XDP/59Uol@/J7\r$7L:TiQ#;:f`a=/R"9h2H1i`dPKTW=Mc$`j@TPaJC:4kGH/I9Citn]dMTT#Z&TiIbI4"n[!ZW)QTdbus-`Nam
%5J&?C\<.8?=%;^mnY+V#-k;%`e2!4cQH]W8n0sKE7m@Xo=GEn!Ui&ME_?Ms3,qF]i55U)#^BbgT1:f]:2c[A@gJ`e><u'"]cY8r[
%_kGce+P>TKL0Z;SSFS*gN4,`;Ya,nmHS%t;DJ0^=Cu$0Yf$>jid.:+SEK>1c)TdXZB:!MO!2p6bqnRHt.^9.>J8(Sh<JVY3<>#pa
%mA@P07K%>Je%qOt:[]1UMK74p3n9\<_s+5,)djl<5$Mg)%:')M0<+hp:o0hH\$CSAM3[A&m68_cP/CHg?`Dhn(U^JH<d=bSaOkN/
%bm%?%Ia*(17hkA4`N)keZemZ(o[?D"?:\5cJH`kG/;Ijo-rD3IRh3E^$eD[jBH)KD"A2<V]pR'J`e8>l>$fZZkns5nSY]Kf(jF[E
%`m^_ki0HX4g'mX<(dM]g1e@Y_RCOW/:Z.Hah8d58jJ8[Hi-"aoZdj1hj9XMD)j'hc=)YjGO>W'bPN^B;/PU7Aejr8Cfe?J!Jc]C:
%XL(?9QKJDdlgm]<D:<@<!__>MW$/$UOAh:fkpdcqf[?@UFOMH%SUZ=c0SWEJ>pdGCep3T<`A>3Wd!`orPjstX,Ph9=OOc>u8ir"-
%oQS!r"Q5?p,>rZ[.D:lG\0Z3Q-P+"_l),qSNoc'9!:2t7R_>i,Gs%X!RsCB6hsIN2:KJ@0"V@Rjqq,Ye8ATno$:KWQis+D'ZrC#X
%XB])>%U:@`<guO"JCVXde17,b\K4%QVRKWTn:(Rr/^03/HP"aTNgMX1mn"sgSfN=WLF#ckf!Q^Aj/S3]1!7,rgWL&!<3Z,P[ls1X
%XE[jHal@P31(XuqBMAio7Hr.t)Ie=r;V&HgVsj.>p<Zi.<4r)%dHaP?7a9:Ang0oe4)gXteUWn6_Z>A<:VP2bg(:GUjiH&^H!KUk
%Zo+:5A6E62Bo#e]McL;\LEBq-E8r=hU[H3KXp/P4M\3\HS-R#JWeGPuNL6$0<645sd@iL14Q9Ks0Lh(4bG'1&*cM&"r=iOk5hUF/
%8>_Xel8HRSs!l6qnnIL;O.lQ%`J]m'/*e,'"5B@j5e&5kq_a^6oK)9>4MXk_!'Fjd+7pYN3T+XX`/&9u3'&e9ec9f;*5:30F0_^!
%!S84q^E!m`@Ors6-BjkJHW#(6[Pl\5]\cc@^=Iob9FM>tf%lb'oWA</l)h/b4!/9+Xn#]U[61]<X^Kg2<aYBTG"n#5re7PW=BR4^
%_.2''nEo%6V'B937.iqG*Vn>cL2#*g-"$B)eOM=iOctCR54J?hG%fGb8e?6MUj2u#8E>%YW=tX]29+neWYmnQnop$7&+JQa5/FGj
%q+on&=O\R]8.h,'"]%fgFcQSZS?^iV1&gulHH'u2$OMo%*#b\5^\F#-qXgD03H>bVU[#,'s&YG1I%XJ/'Zp'9'K<c*DA-APW-=9t
%]'5C62\ur@$t!V/N5_<Ik<ZrXS;B`A)@Ba%+aTm16T(Sc](MlWd(kP&=/L29cZSg"C.f_L"4<h(IG"A%UTVfSZI4dN8`8a3'GB2i
%aYhTW'MHk#RWCA6=a75AV7j_b:'5Bt6!AfX21rLs<KJcLcAYs1Ms7'&P[MM8%$+Sj_\u(7BVm'a@6:#.4Cc#a+Q".!MO;TW?^Sn)
%+%i97r?42AVP`":T?>S-F"jcT4*``%8i@@`]m-H.P7uYdlb.ts,diT!!:)c[r$C(Zc"kIph';RSGZJ7!oW4!-okW4gBa5905C#"g
%5'GB(Qr;T#T-Jsg[Eb=!(Ijl+E_Q<j`uZ-1Zq9&72>MKhb\MhRD8YUZdRefuVLVHr]GF4F_\d<)RsUtR@Y][u]a`:sQ(_">)ubm>
%%cs,WUud9f8P\':2j=Ll<iK_P$Aq2N8o&.P;c6jiV2lQZ%4/]p$?7YPNFkc*$59(p=/sp`80(:(<F7\g]>.$Q1'*AXrt/iM=\mOE
%5Ll;^_GRRg'V[A2ihI?3:bSiC[[i8Nf$Yqa%'5i/@ZO)3#1`rg7SL\9l*O-R4m+),fYk!FKB+SeBC@FsR88j</4lLFU;'IA)]n73
%+9r`M*dTMlWhL\"i)0A8ECKD>N$b+#W[fog&45sh)STZ(N-p_B#i.KQ(hb/XjrpZZjQ;2?[_Rrn[qO-8E*qTO,>#]Tmg@_J.i_`l
%kSfi<;<-.J1n,?LkT9[lKgQQ#5kiYZ.l[T+DajBM2aScRWt*JuNE&K+9)HP6>r8U=!GXtrOY2<Q\RcocTqt,"gL1)V,7$.:V;noH
%%??!#;f(R6G#C<DDrEokpuKhXn\/KUcXah9=@]4\@WI5.#:IHC'fLA/aN[)1<POShb#-X]3-Fq6@B)R[G(-8/,9;ordG?)0[n"To
%K8b]J])SRFW[".2Q@1]L9I>+B!:dt5("',1MTCc%<8VUsJ3+@>[aq5#OG_PXF(:+l&>,eKK?\B-(DOT4jQ):jER!<):Qac\eb,"b
%OBXk-1$#r.LX@ZA8T$B5L1k>+.>0`>SQ>2Tg"$dQVXO?7:\\W0,[,GL#H?tq,i:dGiGGs+FkiD$3nENgWu;.>WO:lJ^lda.M]^-(
%/YrRf4UF*GnMT^0Y*h(IY3&uVSjONS<Z:='KuT<G*?bq"aHE92@&a7\m0[IG$@:4=J.[6Ug2`X.EXI=&:ARpiqk@cJ5ND*9bg6l7
%TNp^$9(#]WVdQpU)3*Mj`^3GdnI9ijjlk#*$_&@kZe^F)oc@u?Bg8(*LbMfHB,KZS#gIs!1ip<9=,d4@\*a/,><q2pM2_rS1-8V2
%YPhuS>G>JO)bo!hGg'pu[4>g"Wg^A..WlL<G)ahqO4&(aE+73K%.t1s.I`nffXuoJ`U9Fco:B:>B;.k\)TM"tGeCmuYFXfK$N&N?
%HK=[gYck)BAFiC%e?Ao[@q5r[8kb;MNPG.?"s?RC%*d[XHV)^oX=Ld3)<=llX8?V9d9OK4MH/^\FH&*Z'q,HT&Ok2IZU6gR5?[a2
%HF=a\GR[^P@[hpW3d705\gPA*nAC"F2U/MCO@i08LRDCmk10m/JYaB?mb:!*N9=c(l%q:X,+'uthUbEXhd$UIh*i7ES*%:POH]g'
%E8V`'`jQ5*Cfi4X2o>TF19H#^i\JLGE77ogp$4d<g=Y^SY&<MLk?J'h'!r4hI'se655a_XDX@I),XXmC]%D1$SaGNLBKF07A$lDs
%3Q?+ml_14BIgI[8ZtI9W:PtSFY)#k_HWE/Ugi)>+Vn;spI_MP!1[V(G\1+_-H`$(RhUr!pq1;h6^`ffdTVp9#a:*/G%G#JCY=<YH
%caH!7j(f/2`JeUJ]$\/H5R]P1#Et[K:EdqA;S<XN)/b&T&5PJE_[Y'i-sk#[B!bcpd<0*e-H&&Jm-][8$i0'NBPAk;1Q-3_equr-
%3OA6)cg^8QIV5;AB:j"?bMrE1JlNt*1M8`b3K,?_(9R$7,(Z_V.r4Y_LS(%Y3jI^C'0hqgW`2oV<\"LiU+2C?\#-"q)iDlDZSDNQ
%^T>)_GD#ObP3JsbXrQQL&I^XgS4LuYR00j)T,\F"`3,5")P<l'))@#\/u$6,b+u,_:@_S[gN9UmX3^e%'=#_)GSf%H^RiN'FB*"7
%'tmq%BniNX["iG)*nlSl7IQOm-G;P83]^t>3:?CY;RV1`Th70uduS7%Q8Y!a/R^J,7lum.E'OR=lZ<uV.Sc&L?]Jm=Va_4I4'KMF
%dk_MD(m]6OhcfEO#->o&1R7ac,i@0Q\^=+%:%J9na"b'&IWOOur\]<&S1$\M0Pi12FMmWDZn0*rXtB]V(_1CA8N*ZQda1##91;bc
%X+[IRZVX^0k*oiJV%Do5=sD>fo/kWM6_PQ6c]:)C9=1i2r1<&tXYVC]O@VB9^F>'O>TO*j?o[An9B)'37hC\WGV]Gaf3_P3f,DZ^
%.83RSNno6)%iPgHFOa@d"XcSBEtQY('`.m<%iEff)F/]kK>.'L;@0ds)@hQMLdNjNZTn^MW??Um=M/Fl(NbNM6Z=pXMA65X=rW^`
%!*j+p\NY<!Dt5j->0jm8.@B17NX<Lich"A9f16Jm1I%CeMOfd,R;GSR]4JE];=3D2Q&sK%@4(57B4/*Z%u!Z`[Zn#m<Jpoi)9#8\
%n+8i=j81ZY)RA!2/Zf%!CA8X*piNj(J>Gp.+[=e[F>-:f?c&^Fj7A/uZ5bB-\(h`4T-psdhKaec^c2I$h4>M1GN^:2$?[I]FXRpP
%<gT,SKmr+Sc5^Q6=p:^F;Rg\=m.?F*%@'c=K)1OiRY=D.(k]k[KW'$;T/)1T:030_5h&Q;knQQS$nf@ilHs>QeJbD=WN1.8'(O_u
%?E#4#K/Ri]q?ifilT'1:GI6`7^iV,&O0!!\!!D`TT%sj#!U54lP"7+)gk^rp4M,f!?/!B\A=)_So[;1ke5(i2(d$)`0c7f1h6YoN
%>9=Aa,%7l0)g8"GhS/;5Q#lg9q?1Wu=$TAZJR$TrT`D,ho&Gb9[W='Ijn6UHNt@T$-g"WX$%itb5,Ld2Qhu?Pi[P,DWR7pOYin$@
%F_*J[(Y\27&_ni`0&B@nbg^]9`tK>C'J%:aTTEk!EZu->"Br4bqn6004bOWVf^[$kQ_s#5Op?+I.on69#-"V6PotE1E.cSV0%INC
%;A(_?7T7O$4R\lS8S"Ep&`3\<9$DV?MQs0S"+8Z*+fXQ6LI2r)pFlS6moW:]J(NC6qt-C@YFURj4dS"r%YKFSD(+J4,p4HB<o^X9
%V"lIb[TaXDf>%uTVR%![Qc`EsZ`t-RHMfn&Zo"KW#g@o]+;7&QHY\4V]jN.,+,,_6f/47,pg;Wr#c-2r]BNICJ$Q862'q:$A[TN6
%N3\nqi/]"enV`=#?%UJsoTEhO'e28"V(5B-UR/'AOu-LAnp#W)A`r%s3]>ZqG"l?<.]JC<9\t.a@A$fNF%X2c/%*m2,n&?ed(:^R
%3M)?$lk>c;\u2H2rgKO=K@d>aKRhGGO#/=M%\;IOP?mq\G`oUk"RdY\dn6]mfW#q72"kaJ8JgOOdg!!q"@t#$hoo/Z6`Vd`V$XuE
%0%*D',P<.Eoee6\4TJI"g"@-D(?!n7b7d9SW?@^D9pt.n8o(LN2p&q<qQ-3Z@18Sa@,4(JV&\Q16+rB"kq[JTct@>qh[R9oqT$sF
%hP&uuZY,Xe<8GB&)YK$lF5DG(=cS*JK@K_FIS]"_&Kj:K)E?>,JU7>jkYs%q(9b`"cSL[l&\OR@cYWcujVa<.^+AW(Sttg,j4f:"
%@C,>Vm*Dj&.7o5kjdfdLUu,KW&R;<r/C>4_"q$pq%"O:A5D",T92o5kg"nDEoXa_GXY\+\6g%Jj"VtDBY/+]dYXhjXB5O+Y68("i
%%9;EgX/]?Y[Rm8@+S(DLOi)4uq:t/5PScO5/[5!b?j0Imi?0"2M>]SU-4j&["L=bVV3_fP'&At<"9]_TFj63aZ6HF#>[O:"$"Mo]
%aESER<))YWL:=@`3u6b<%.VJSnQ_-I:NALEHCr1h,8V9?[dCEN&+6';[tXCf$I<^5!OpK9Ppb7h:%hhO8e,<[EhD)!R%6\P1G;^@
%Hm`Dc0WLf)92`d_\dSSj%+9pfBC+4/2,]$<7=<'Ls-EB7O^S/KD0:uPc8Ld@ETt,h_U>J2+!3+p&!sfs10hBWU;$jTUo"f6YP.1G
%$.f)l-r-`55m@cA-Yc^Ci:PS+h)9gc`I?N^CJF;]>4.,'lf!FiO*j:K<ceu^pA-6':JFF7Xi8;Pc16*!\ZFSGD3Pk&lM]=<'J5re
%Q-Bhm-^#>(>D[!6<EmEdPVN+JmcQDU@f$G&Q,Ogm@\4rUf1lj>4YdeD/F^;(V8rM.Aa^*UB"h5Fq.;LW:4lg&'0=!,R1Z$&n:tOC
%O&!re;3oZ\e2LhI9W6!BH"_:tA3er_!5(u+lA4)tQqBLg[,n3HiU5/r<^18Tk_cO471q-EVphJO?IcgT#LZ/>71M_JMW@Y"'jEiq
%L"e^ld-<VU@Wp@ZAPtj1HRM<o*>b<rhacNIXEk=Sa7]90`TUif>9%C_&[7PgU*s&,Z2$E9C+u/QPsR%b,0`S7`:Cfms6M8DR$=NM
%D/O(r1nsha2(8I>"a-=>O.t.eVIm.M<3q4*0*O]AU`@+i,:#M5-$Q$Z(FNQ_/U143!*alBMY0nZXJtkrc'+=)G)sA5fpA,'ReBjf
%9as-#?4=d^.Jlj"lDO*d[Pp9J5!?iKr,[NqD#kBcI[lY"L@&#uk(m4N4#(R7;sW0j$>=027'&(R__="[<)"Zb%_7s3og;rA.\t(X
%UTLKBHEh?A%dR!LO^S/&>Lj-$7nZanls_>m@_J48)EI2!Oii0mF3@H)@/un?M),cZ<#KXa0T5G0\*_Y"rEm<mJIT8"e6kBoi.<GY
%[o.N4?_>h4!pBehK/Pso!=We0)k^RQm+Vhl8!,?*Y-]IiSl)RIP74g4V++s.\/bG0;\<cB?BWgTX-J[?/0!%UrJ0HD67O$Z`0FM,
%E`[+?BGX$keC/OB?di@DY"F-J-Dp&9(i@s;%"c$ij'<jqo.Gu&aA!u,]9,kTlHlB'M=N+0/s]aC=klp6ZNC[m-OuF(At.L+WR7Zo
%ak/t.Ge)+*JmF%X<k%j=k3aY`Xd*eB.iV0V9j8WVKP5j&=N19Z-055P3+HPaF_j_r7`MZO`_AGb*Yqjjs)6JYeCIc/6UeK#TY,%[
%])D<)_0b/^Ub['=0bZtE544ntI;?YiS(IOgQMZane95`9fq'$99c,Z2;CA(F]TJ&pB'rCL!O$7"(,VU&ULY)sU1l.E6j5'ZPK?3q
%%5!Z,G]8hm%"8kN7b-6&W;LUuAU9VY!)n#RgGMeCD&ZA0!g/NFP):.g(e*l[hUna*5V(fa3,1go7n]PA+I#.oooN$fr#LI#_A4>'
%RDjeLSP0>g=+$W2,[3p;SEN/u7"XX8NL7DkiFU:LZ$#6iP9t+NLQOV;k%0?mZ(?^C^s@fC#]NHOO`*-p"]MnnZ1(X,<0SX`hd"?H
%M*[Wi:dr:$O[B1-<@j[l<I'MNX3GG9B)+6F'7`Y![Li-/-kG-JojV2F!t&"^VC+=YCGWnH3rplid*f4)FRJIa@9/CpkgSq`/0\WN
%"H17$fOL_*.i)pY5$Z`J4`;OI'#AI&f,g-s0Qr9F8_mjB-juW*e`G">ej"`j?>,t8JdPnU9pMo[9#bP/H^ar!m<*^(QXk1WL1ga`
%h&mT'Q%F'=Ct5ok03D9`Blps&.Eg>3s4]]qqg]:k614oMN0dB95p1")Lp@b25Mf4R-fHu?o\C9ng%)Rb5'12.@lSr_.iKZ^Al7"7
%4!1KcQH8oK$*Ipq#e1c8Me6Q/@ck([O@ki$KO$0p/;Zb\[NIH(W1,k-&A.e4Nep*N*geHelZkS[oBhkse#-u7CA+]%J9f.83l>I6
%PI_$_!M/AkC/3jl7cea_Bo`pNGs8\QO(3M`DS3O1j_]"d=r]bjb-+N;>S;IM:=BaKh<-#IC5YoB)iHS/>$tPYf2#Up<S+i,-A>t>
%TB)@,TN'KjBQ#MUdFF7tcG3p)Lj`of]5)3oYeA:PfHm(!1s^9$V@&I)@LMpm/s*,g.@ue"ag1,^Q>,H*ciqq8Wh$8VI]P'b%1i-_
%m8XU@7T]\&``fdO\#YXof<5p!D,5Y.E.'!9Dd+jqO*<1\gba,i#K+ZGZga8?,`L%8AZiI.r=SZkIS#e680BYp+'t6YlM",ll2hld
%f#!=Z)J2QfRDnp>2L6;gepm_,HDEM:\r*:<JTn,mN!\l1N=s6-O[VYlqK(D([l'bZNG'sS[&th?E3akr&V\@@ga#LOV]H+_E"J/Q
%YH%f*gBc&mHE(*B-0@t%0bu$4]U@Ch!2<r3A[Okn"o'`6*NAVbZI[d2A'e9g08Ot>d^n-JJFocu0';DtN)$0&H"mEO.ml5Q3u"g6
%`%P?D[3!P9iD&$RHpXYs2kVVEk.hVT1;QV&'uX)eM^h(KFU7oXQ7,06H1oHI3Y>*j-']-RXHo%cBbNYY;ZW+71PQ]k[%&]?fQI=;
%Vd2,(iV`Js$95r47!Lfi*7hUHh`E0MlA[XL7X^PdCf`RpRSk[.C9u#Yash%L\8DZKD$JSrmUs"FVr"UHIFla4));=gs-tQ3TB)G6
%TNnsU>2%TnHSYJ8/W/ag`=l+pUCBcrGh=A)plSJNg>c<p-";#M\\nA!dSMFZKt02_ZhCkUi)%f)G`(3;Fie)h0r(H1d5"%Y<]":I
%Ge1UF)ZY\tGY_V]dT*BDI&P[;,@[;NZO@5?-$#:rb-8a99F/C+ZP4QYCITbfX&2^W6G:OgW%U>6m?SVd9??[R,p2pXQ)ids/i19G
%dN77[j/1\m@EtOXEKEZ?hJ&5\'oR6+`\RZMO,#%'^_?YP;[I!9!T=q+@,N*@l#da[1@CEVE,p\6RQ?@/rE-MGDV!fkDf[(+8ChNh
%G#q"=Om5.cqLULY80o*\nj?QuXbQui[WOSh@!+@[s.Yp)>WTgpU4USJ?T4pA_TA;Q#[Ku)oiMRCXV?DHL!nSh-U^Ml\l!14,cPeJ
%=>0;W/d/1P;O`2D<;7=s/B'Jjg,*2N_3WMNZ7CsN`k._<U@"!ZN3JSkN.uIh]E+RpTZiTn%'i#hBLt2%Z83<a#+_m7D**FQD!I``
%E5-[g05Zjb`GkCYBlpDs!C`'P<NV)p@luYZC&f;\LbW\d'C-NFkXqeLhM&g'?PNbXma0f.)Sp/<Oa/EWEr3A_`cXGL"0L^G.o(#K
%`[ThIHc-Pc-iqWUJVCZHVQu'3'j4PCiMW?<m^mD7ld>PEI.PY!\q/--A7T*r$#(7AW""t:;8)5W]7W'9Nc@L1gKbAF:af4O-Om]j
%j!X1n9e`S49\$^_N-qe?Adlr+f2%ENK@up[r_,m*.@OIBUS@!s^1Yk\X054A/aOamq!!npck,C)<#0N!Y=.cg`>Ge%l_Fm`fV:7V
%2+>U6hF+#?I8KB61i)Pq/[06nG&@-P(V7LCWcX)Wd)>a$KRF5:p"4O_o2GfT"nUja9lPOK%dOi\T>]W%PH+M[=&)c5mLDl+!4\WC
%l7bQ@%/0RCh`MV'@4*BcVl.@>o0,<`-oWB2e*!W5A3!JGc__.d7&EGjQ"1V]+1Co*V5W)](hb4_glrX6/ubKV$C3+&3i]+t^7)<-
%J$4@ZIc8d>p)?-3qMfJ,e+J8&9(UMR>'=]2ICK3)Tk7tEUTBHO`m-'Z$Ff+CXj'$Sl\BE\iENAA0ptQtd:rt/h1-QJNDR&t]#Z.6
%aOMQTk.e2*H:9o7G84[FPO;1rEqEb0A-g:Ka_61Js%76'$;_n&3,U:mF?R(2X2smcm^ZA7PM\8b6o2!Y)8iXOnT_,23&jTS+?n\0
%`X_,h,lG]"&QFn;!>VX:Z5ee2j845=FsKc8-\oZaCSG%@V)E\:b@,e=/mDj=ilnfc^GYMFSn[IRl)q_e4,p7NA-f:_l:F_UFt(BO
%R^YrmG'`PSEV_OQorl$GKJ02*\soha0KiC!e;CXnpi#'[:DWTq^\d%ur6$2^q*4hPHiO,`d.E'j<lKOReqY5glU0pth"H%TTkNPZ
%r:$GiT>>I!WK=mFD#leS7JVt0Jl=EJAJuc0doCVbYM()NC>SG)"NN?Fr*1:W45oT^F1*5,&?:rF=)%`-PTHJ@$;M"I*'Vk[hLV(P
%P;\ZtUcG%GW/CX8p+8bo_8:)./q8HlX]"Q^Nr\\9!R'f*6jMO?+%![:ku#-?bj:E1`02-.8>jJKaT<G\cr6tl$Z*d9K4_(t>D.Jt
%L!*V^%p[!n2W2?L>dD0bnDq'LhsdH&Jh/q&LjRY#H?1_aa)k,Q*Tmi".fBqUVRhn/(Y`me;<lS;/nLQlB/2Y<D0HBf8DYR1WZXDn
%9WVj!5%]>b^]l],O%8ge1ho*e?fkI-=3kNT.(o[=EW]#b'ThcqqY$Vi1XdH21P'>piQ'BfM7nXieq&tVd6/(GomC#-6?]#u:kZ!m
%)*>`k[\C/D)V-*MSqLlnqKNR%kY*>(J)Udg`Zk2_[@4_&4='S(KaFVB"sq"&PNb*7V"XO:h*e[A$/k@%:R[>[N4K3<L$R2^l341l
%:BDi3;8V<2jg7VS%ZalfN3=;+MS6tDCOrfs6()L2SJ+\jh!##<f]"U[0V!Y")dFVXbR##*=V.C>[k@Fbb!O<Miu,L5'O)m^&4:A-
%s-;=N8Cj!^]Tj(aHEoV/Ge+C8`RCh<k+o;o.bB+N+hae)UHO%$7+sg^qM$/'Ul0'^dl2BBM+a81M3>Q?m3.PdlDc8M$]Y'EQ'ji)
%KuT:7ekm%5nR.hW&dVB*C>&c*rNl2]!`E'_e:<6#L6stK8M^#(cZf$8ZH1C!p/G"":?$T;I(&+FBlW$ZNrE%W7l7/a[(;RD3!pCi
%"&$A=,tDjfohFE$&h?Y<9<hC`I^(G3qujLt0N`V`(0bf.Z_\(DkqgLBhW)QiEnmbh/Q7I['R>@)S?;=5iR#\J650-irEXcuEL+6J
%=Rj@,=DYVm^K#dreW58cObd98Cga[C"@?Y>'"lZE#jjSsEoO!q&(t76qKV(UE/)6LBPTgL/bdQX8BUO;gl^(l_$XWZ34;\bcU=Em
%L-:QnBF\/Ee1bD-O<7sA:8MP<CXU,a5H+s:J;aZXbhcLMg?JRR`^1=\(aC.+"QKM^o'g,OeL)8%OjGS*mHn,\Kc[ToI;R;8:'p/t
%@Ok1+X(6.]F7r#(lH3>S^/4R5C#P;Uj$!So]ODOJ^#Eled#tH2n`&AtqabI1IpTE=SV!e,o3ajQ;Z=@XdV!a\SZuB`\oDBD#Aor-
%<od;!`k"OHVk_,SQCjbk$6"pYqPfq9O,"LC@+b+CfFlb"6ioD<I(6TrTkuhqeld\oZ/Q@XUhf[a$c5Z\V[GXbibi4k6#>"akDD`D
%9cpH:IHM6sUKQ],=EVV./i73gdMshURDB<[O*_uKZA2'ahCIc#M(MWTA"@FQc3>$uEq]A#YMIVUjXZ$)54gU8-H6Du"mK42$F3<8
%!W:Gh!k$beDRG0;KY!-']LkiJN\m1?FJd8O.l;X;='"](@fb'tQ$gZN(!P]%7Z03Y=!4nJ$OQj?"2]N5NWtCnJ(;\*/XLSh=Jkb"
%YRfl<9VT.7WBLa?f?Co2XSmP)l8>@C<CE3oKk'<6dFfN6`^ho9=,q\T?#8j]R2"KG?4Z(7W3qDOlhD(5FS`aK'!nlCQmRQYH+T-M
%SqdE.:(*Y/:FuEef4U=T?.ST.JerY``%!#,.%Nh@d`Y\Vh!tImg/&DEM/A]7OZ2i13J.tn[;Co''Q<bY*l35m;O[]T&*uu/nZ?""
%Z'Xh/lg<']rDV3Z.8+]_Ir3YB"5`n]aWK^HLfC<5^KTXop.hK6Q^G9U]G^^coTR^7[Bj]Wpc6YpDrYMn"mET(5N97u9IJZS-#mmq
%_-K]uPTI@%\YA;hbE$EH])sMO]3%&O3J-)?bmI7^P-@U.?F(mJS/"GIL8^u]pLKfJ>i:#)i>sNO<B`&!9"\r<L79\DiHk6Zq+8?[
%^+EWEg3^1i:GbDRNmo=-]#-c`1i.erkEpE!h,8>=DI3'(OmrlO@o#8SYu6j*V@YN^%;rCa!-/KKec7r2+?%<ALgXj'Gi@lML=jG/
%=m.WAR=UP[0ihQ>c=<MMcRBs:0MaVBhPLG95JNt]AncSl4)Q1+i"Z%[SSsr$:e$U"g3RaP)=As?W9&DQrP0*UX]LGKTVR6FYfFb+
%Ug'%S@=NEq6Z[@\dlg$*j_>a]rS0Q#bp(mPahmb?NG3)nBhPTl&-MMmO,fTl,OYsNYV691dH=11(>VdsV6I4MlO(c:FI-dX_]UA,
%"b"sC'O072<"l)2Z,Q9n<O;.*O&o?Dr'@-/qM,lnp50o4oqnZ/W.DTjNDaeJa5/&^.:q]-%&2MQhu\8q]F'&E^t8Rq*!gG+7q+J%
%4XWoZJjI;>hqTd4>rXob`P:\HrM"T:9uJtQYPt'b5^+r4r-B$_)D1e#-1GRmeC[)MjJNiMKGui;ETFnJ#.;f.0h1[i,kLAB4sgG8
%an^QOP0h1%%ds]pc!S$RT>GuYCVgC&(#@9,lAI-4m>*-T$oX_am/S79pTt!<4"2'6J,Hg@\;X:pL?>DFFnWS&X2(S*(ofnZ:R;Z!
%i[QZ\T>d*?YCP2;(]=iGX!rq)Eb0ZH67/ln+Bd1eQ0-Ko6aP,)eSi3Jh@in$VHc'^dH<V0e6;bh8-dI"i8ISgCC!Ncc^d;>G&B2F
%,NAcgA$NJC(Y<E?[N.n</s[Q`\Y&B"Z9@eVGG%osMr$N+22=UHhFbiP=gHSNb0m%uI1f*ih@hNE-1cWHqu#`[^RLsAogU$2BK#VJ
%GU^K:>FdH@NF8S>*SSb&J=_C0([RF4E]%f!QFed>n=Pn=KZ;m/#pBQbFD!DcCm$3=EI&KT1$#7hj23HkpfB(2^D+gnp<6DP;A0E,
%>]ut7&>ZjIp+*R&WM%2/V&DbV8MdXN#YCr4:VB83LLT5oNnKrNfQ`N]r2aT[R54Df:M)i36QBOZ/]b"1bp?hoIOLgu)#gcK"G"=A
%(Jr(8[KeWA#VlBM1+U_-_XIR%kgeos1aU\)0/H1E5fK0tMdpf1*1)Ct)lJ&Gmm"\4c&SS]*RT$#UML9Xm\d=sSE"<fheDt2S/.<p
%h*=`CSL@g(>QTR3)+qN-Q7/@JoNLbD,R%A3:XA$>B)eQ58n)]/:'D[bLWp\L!r(0Kq3IQHN)s$4]/L7WR\j;kJVl,`OKChQCutjW
%bYN<_]",nlde>/4_]f(++?_4P2]jVUACqNMhF7$-V;\JsD:1%meZj-Z/CF<+"^h!X\e`!:+J/o88IuUm:)1*]6'VPulT&a(46)c!
%YM&GP=hei="[0OQq'Ap'@$d,/`\[AmjMofNJe.Z3TXO!G$!FjGD(KTDX/4c;[N["'',)Z#e`^_\1S>.8UXDr[(!-4rcqA>o&<EOg
%N2H2bQ\`C?:A_rDq:i[[h7rr5o=t4Z5Q'+tr:0gdkqE)%?[W*,pE0D0pOE%#J,/,SruZaebMW<DhuD.Is7`.7r:(m.i?/*qO8o-U
%s7u=`5Q:X8J,6'mrl;eOl,Q$e[t"<?MWgj[_XDsJGQ7["rpAV@58KP33r~>
%AI9_PrivateDataEnd
