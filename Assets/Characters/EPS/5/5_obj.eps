%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 5_obj.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 167 198
%%HiResBoundingBox: 0 0 166.0787 197.1002
%%CropBox: 0 0 166.0787 197.1002
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T10:30:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T10:30:48+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T10:30:48+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWpJEjRpJGCRoCzuxoABuSScVeMeY/zs1rW9Qm0f8uLVLiGAtHd+ZLhedurL1FtHUeqR/Mfh9qb5&#xA;VkyiKTQ5vONY0vWtWmZvMGu3mrmXcpJdusIJ6+nBD6aBa/yLTMc55FjxlJF8meUkHE2HOnQiV/8A&#xA;jbfB4su9HGUxtI7zSmEnl3V9T0Z16Rw3TvEf9aN6ow9uOEZpBPGXo3lD88Nd0qS2tvPqxzaZcuIo&#xA;PMtugiCOTQfW4R8KgmvxpsO475kQyiTIUeT3KORJEWSNg8bgMjqagg7ggjLUN4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXkPn7UdR8/ebpPy50a4a20LT1SbzlqMZoSrfElkjdi&#xA;9Pj+7sQask65c03QR995Y00acNF0Kmn6Rw9Ix28Y5yEGlOZ5HgNtgKk7k5gn5lpYdq/lDSdJMkL3&#xA;N1c3aj/eK3QNIAdx6pHJYweu+/tg4itsWnt1QrGyvb0qazqV69vhUscklTjmgTiskKyhGr9pwG8Q&#xA;wqPwpiqrdXdsxeO1R47OZR6trI3MA9wp8PCuKsx/JXz1PpGrQ+S9TkL6Xecj5fnc1MMqgu1mT/KR&#xA;Voq9Ps+GZmLJYpsBt7vlyuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpR5u8wQ+Xf&#xA;K+q67NQrp1rLcKjbB3RSUTt9t6L9OKhhv5K+Wv0f5Bt7zUD6+q+YGbVdWnf7Ukt0fUAb5IVBHjXx&#xA;zDJEiSxkbLIL6xtnk9RG+roKAU9ulKmg+jMKWWzsGkySi6aCMelbFGQklyI1Ulj1NQOp8cIs80pS&#xA;NI05kaOX1jGwoVE0pB+YL5JKVX3kvQ5IwYLYxOK8uMj1avf42YAjDZW2B6ppsthdtbuaqKlHO3If&#xA;LsexHjkwySHXpbu301r6yYJe6c8d7bSH9l7ZxLy+5TlmI1JlDm+u9J1CLUtKs9RiFIr2CO4jB/ll&#xA;QOPwOZzJVmvLSB4o5544pJ24QI7BS70rxQE/EadhiqrirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirBfzz0+a/wDyl8zQQ15pa/WDx68baRJ3+jjGa4lMeaN0PVbe48qaRc26s0d3awzosYLU&#xA;V41ZRsPA5qJ8uEd7jnuWR31No5OSg7rMCCN+7itPpyoxRS0JZTszNaMWr8XA1FfoYfqw2R1VcY7S&#xA;BeYsyAP2pCoH/DMcFk9VV1exKcpESJnFCrBQSD+ODdDz/wA96CkykQESSoGZWG3xKvIr9Kin3ZfC&#xA;TMF5bqlus2l3EQavrQyxsO4qpH6jlsTuzHN9EeWtas/Ln5QaLq2quUt9N0OzluSNySlqnwjxZm2H&#xA;vmxbDzeBeSrvzF+YP556Bq/mB2KIsmrW9iCTHaW0PI2yIOlfUVCx79TvkWZFB9YZJrdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVY3+Y9zFb+RPMUsu8a6bd8h41gcU+npkZFhI0+aH8x/l5NZ&#xA;aBDqGnX8mqadpltaTajp1w9vJGqpy4AVCsV5nt9OYVys9zjHNIFkvlXzrqmk3Nqy6hc+ZfJ93NHZ&#xA;ym7Bm1PTZZm4xN6qjnLGW2pT2A6coynxAgipM4ZhPblJ7abWHSrWa+u5Y47ZEMklwx4BUUciXqeO&#xA;w75jzgaB70kF4T52/PS51e5ay8tTDR9HBK/pqWL1r644mhNtD0jjrtyNPmDUZmDFGI5NpEYjdgU/&#xA;mDRnkrfya9qqFuU5udQKiTalOCjYfThBPSgw8cdKfQnlDzP5a87aH9b0lDby2TBZ7aXaSNgu3KhP&#xA;IEdGzCkJQO7CyC8k882c1h+lLaBSHPJLUADcy7RgV26uBmTj3Ibo82ef85CXMi6J5Y/LuzkKJflZ&#xA;L50pUWtgihQQf5n+Ie65nlugN2Hf841RTW35vana3dz9aeDR5oYZW2JCXNvQDc9FrgCZvqjJNbsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirB/zu9QflV5jaMVZbWpH+TzXn9y1yMhsgxt8xeY&#xA;tEn0PVVmmQmw1GKK6s51+wyyxq/Co6UrT5Zrr4g6zLElf5a8wS6f5wsZtMVkF5cCF7ZW50hdq7mg&#xA;r6Y+KvtjHH6d+iNPjPXo9503zRrOveXtLTVPK8k0WsPc2+p2xdWW3hRXMbTBgK+qFUU9/GgNUoCJ&#xA;NHk55jR5vmDQ54ry5lubsCMyyAyrGv8AdpWnFE7Ki7KvbpmVnsDZxtbd7IrU3tUEoVuUfL9yW+1x&#xA;7VpkMd1vzcfDZrvepfkFpWqabBquozxvDFqSJHAjKV2jJ+Pfx5mnywZqNDuc+uSG8x+rqXnnR9OB&#xA;5re65aQOOtIo5wzkCo2AirluAbt0F/57w6rqv5xtDZXv1KfT9LgSB6chxkaR329+eZZb4PPfJevX&#xA;vkb8yNL12+nMsMU3pag1CK284MUpIFeRTlyHuBgBTIPuOORJEWSNg8bgMjqagg7ggjJtLeKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAa/o9vrWhajo9xtBqNtLayHrRZkKEj3HLFXy5e32lXP&#xA;lPR9D81XOr6bP5anm0PWprAIbSIwsFtpLk8Xfi8fwpsQeDUGYksdEkAIljBPIPQvLv5d+Q/LOg3X&#xA;mPT5RrMlvbS3Ed88qTqVjUn4TGFSm3ZcxJZJSNcmit65Pnfyl558z23nGy1D9I3DyTXQMkZkcoxn&#xA;YBvgrxpWm3tmfkxgxIcuURT2vzv/AM48i+1S51ryxfrZyXjtPcWNyHaLm55MUdOTqCT9nifbbMKG&#xA;o2qTikiQqSl+XnkLTNM1p9P8xz6Nc623BrG3tHmmuAqqzSO8VwFI240Kr44cktrF0jwwBtb0zU9Q&#xA;gsbUQqpjh/ZhAHNu9T7n9WVRHVIDzD8rdPn1384rWWQc7fy3b3F7csN1+s3Q9GND70YuvyzYYI7W&#xA;3x5ID/nIKXUdF/N+K+tLf6y2oaXC0aluIrG8kbDenQLWle+XFtg8u1nQfMd1W/1eIW8bEssKEMdz&#xA;XfiSB1wMnvn/ADjd+bNve6V/grW7lU1PSkI0yaQ0E1pGP7up25wgf8DT+U5IFrkHtEOv6dNdLbxs&#xA;xZjRWpRScLBMcVeHfn9+cOq6JPF5V8oTN+nSBPqtzAiyyW8FPhjUEMPUevLxC0/mqASzjF5h5P8A&#xA;zP8AzP0orrtjrNx5k06Fit9o2oO8kxr9oAkOykVBUqfoI2wWyMX1F5F846d5x8rWPmHT1McN4p5w&#xA;MQWikRijxsR/Kw69xvkmsik+xQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXjH5w+VJdF1ifzxY2Dalo+o&#xA;24sPOukRryaW2FBHdop/bhoKnwA6DkcqywJG3NPMPnKLX9Y8o3l0PL2ps+iTM72xcs9tdQvxCxmI&#xA;KeEoUn1KsDtTw5R4RIb82VA80Rpf5h6VYGO9t/KmnrqEDF4Z1LChcEl1jIbZeG2/w9sTiJ6qYead&#xA;6v8AnZ+aWq2wgiu0tba5ka1tZ7OED1XDKCObfEuzVB4g/wAKxp4R3YjFEPVfyt8h6d5e0tPMF1+/&#xA;1+7LyLeT/FMVf4S3JqlQ259xmNkyGRro1TleyX+evPMFjcDT7Pnquu3p9O1tIBykZ2+yoVamlevj&#xA;k8eMyTGFvS/yV/Ly78neWpn1Uq/mHWJvrmqMtCIzSkduGFeQiFfpJptTNhEUGwlJf+civIt5rnlu&#xA;18waVEZdW8uM8/oqKtNauB66CnUgKGHyNNziQmJp85z+adc13ThZ6ZYP6aikl3JQIANqlz8C7dd8&#xA;jTdav+VPle9u/NyXUA9e2031PVuV+KOSaRCnFW78eXKv9cIa5l9b+WdFm5xXdwCscYBjB6s1KV+W&#xA;Sa2R3jTLaTtB/fCNjHtX4gDTb54q+HdXa80nzRqupO5OvWuoTy3EErEm5tbg8gylt2IyJbo8kjvf&#xA;MRXWJdY0y4aznkJd4KVUvx4klT8O/vXAl9d/84/eUNS8s/l1BHqfJL/VZ5NTnt2HH0fXVFSOm1Pg&#xA;jViOzEjJBqkd3pOFi7FXYq7FXYq7FXYq7FXYq7FXYq7FXEAih6Yq8v8AN/8Azjx5E16ee8sfW0G/&#xA;uKmeTTyFhlPX97bsDGd9/h44CLTxPNb3/nE/zBBIWsNT0rU07LfQXFn7/wDHq75ExTxKmnfkX+Zu&#xA;k3QuNP0fywl1GT6dyJLqSh6clE4en68gcV9Sg0erIY/ym/OnWVEWueZ9P0q2b7Q06KSaXj4fGIQp&#xA;9w2AaeIRwxCbaBbfkZ+VmomG51m3fzNL8F1qF7J9ZvAW2IcxhhAD4UWo6k5cAAy3L1yGaGeFJoXW&#xA;WGVQ8ciEMrKwqGUjYgjocLFfiryfzD/zjX+X+r65Lqkay2KXLepc2EDFbdpCalggKlK+ANPAYKZc&#xA;RZv5b8i+XfL9pFa2FsiRQj4ECgKD48R1Pua4WLIcVQGq+YNB0dFk1bUrXTkb7L3c8cANPAyMuKvD&#xA;vzRtPyF81ubmTzRZWepIpZbq2k9Q9SSP3YcH/Vp8uuNMgSHm/lryp+UlhrMV9qvnq2v4bchoIfql&#xA;yg5A7FvgflT6MeFJkX0Zo35zflRNHDZweZ7PlGixhrhmtwaCn2plQfjhpjTObe4guIUnt5EmgkAa&#xA;OWNgyMp6FWFQRgQvxV2KuxV2KuxV2KuxVLNY80+WNFZF1nV7LTWk3jW8uIoC3+r6jLXFaTGKWKaJ&#xA;JoXWSKRQ8ciEMrKwqGUjYgjFV2KuxV2KuxV2KvPPzC/PDyh5OlbT1ZtX17cDSrMhmQj/AH/JusXy&#xA;NW/ycWQjbwXzt+cf5leZIpRPfJ5d0lthYWDFZXHhJcf3hPY8SFPhkxA9WYjTyedoBHJFEvxHfl1Y&#xA;+JZj44aCkvqz/nFXzbJq3kKfRbiX1LnQbj04wTVhazjnFWvg4kUewGVsJPacWLsVdirxP8+Pz4Pl&#xA;Ll5c8uOknmKRK3V0aMtmrAFfhOzSsDUA7KNz1wgJAfJ2panqOp3st9qNzLeXk7cpriZzI7H3ZqnJ&#xA;skLirsVdirOPyy/NvzP5C1JHspmudHd63ukyMfRkU/aZK19OTwZfpqNsBCKfa/lLzXo3mvQLXXNH&#xA;l9WyulqA2zo42eORd+LKdj+G2QYpxirsVdirsVQ2p6np+l2E+oajcR2ljbIZJ7iVgqIo7knFXjt/&#xA;+YXnfz363+EX/wAMeTY+Qm803if6TcKuzG1iagRf8o7+6t8OERJYzyCPvee6z5M8o3FpqEliXvbw&#xA;QSyDVNTYzXV5MiEtJ+8OyjxVR79Ms4BTjnNIl7d+Ql2t1+UPluVeiwSRbV6wzyRHr7plQcuXNn+K&#xA;HYq7FUPqOpWGmWM9/qFwlrZWyGSe4lYKiKOpJOKvmr8xvz/1zzPJNpHk1pNM0QkpLq1Cl3cKNj6P&#xA;++Yz/N9r5brhEbbBF5czWOjQMdmuJNyK1dye7Md/py0ABnyYxqOpz3MxZ2qe9Oi/LASwJVIlX9HK&#xA;6D4WkYE96jx+g4qzr/nHzz5beUPzBjW/l9LStWT6jdyMaJG5YNDK1eyuOJPZWJyuQQeT7XBBAINQ&#xA;dwRgYOxVg/5wfmPb+Q/J8+pLxfVLk/V9KgbcNOwrzYfyRj4m+gd8ICh8L3t7d315Pe3krT3dy7Sz&#xA;zSGrO7nkzMT3JOTZqGKuxV2KuxV2Kvbf+cW/Pc+kecm8szyf7jddDemh6JdxIWRh4c0UofE8fDAQ&#xA;gvrrIMXYq7FVk88FvBJPPIsUEKmSWVyFVUUVZmJ2AA64q+e9R8wr+aXmb19ReSH8utLlZ7CyAK/p&#xA;CSGoNxcbg+nyFEX+j0lGNteXJw7Dmo+ffzB0iwt/TvwBFGgFlosdVRVH2DMFK9hsg/2rCQHGjEyO&#xA;zEPy68p6r+b+s6hLdasNK0/TBD60UScrlkm5cFiHwoi0j6jpttlRnblxwiPPd9S+UfKuleVPLll5&#xA;f0oSCwsVZYjK3OQl3aR2ZqAVZ3J2FMDMlN8UOxVDanqdhpen3Go6hOltY2kbS3E8hoqIoqScVfIn&#xA;5kfmXq35k6q683sfKFm9bOxrQzFTQTz+LH9leij6SZRjbbGNMKu9dtrOL6vYqAenqH+mWWkljl1d&#xA;zTOzFizHd3O5wMLQ7SsV4D4U/lHQ/PxwKjtJWWRzaBC31gFohsPiXvvTwOEJCnfWpU8wO1HXwYdc&#xA;BCvqP/nF/wDNGTWtIk8n6rNz1LSo+enSufiltAQOG/VoSQP9UjwOVsZDq93xYvi//nJPzlL5g/Me&#xA;6sI5OWn6CPqNugO3rChuWp/N6nwfJRkwyDyjCl2KuxV2KuxV2Kp55FvXsfOugXqEhrfUbSTbqeM6&#xA;kj6cSh+heVsXYq7FXi357+aJ9Uv7T8udLmKG8UXfmO4jPxRWSsOENegaZqdfauzYQLKJS4RbBvNH&#xA;mS08rabbWNjF6uoShItMsYlLE9ERuFKkDpGlP8o/FlpNBxIQMyzX8qfyISFl80efI11DXrkGSHTZ&#xA;qSQ2oeu7g1Eku/yU9N98pO7mACIoPO/yRll8k/nre+V7hisNw13pVWOzGJvWt5Pm6pRf9bIjm2S3&#xA;D6xyTW7FXYq+ZP8AnInz9N5g18+SdNm46NpLLJrcymiy3I3WIkdVi7j+f3UYYiy2RDw7UdVmupEs&#xA;NOjYQ1CRRqCXkY7D4Rvv2GTMkkst8vf84/8A5r62ElGjPZW8gB9a/kS2ND4xtWX/AITIcTHZmth/&#xA;ziB5tkVfr+u2Fuf2hAk09P8AghDjxFFhXu/+cPdfWEm08x2s03ZJYJIl/wCCVpT/AMLjxLbzrzb+&#xA;WP5jeQeE2r2Pq6XFIGS+gPr2oc7CrLxeOtf2wtckJJBSO5lt9RHrRD0blvtRE1SSndG8fY75NlzQ&#xA;/lbzHqPlPzRYa7YEi50+YSqlaB0PwyRt7OhKn55XIIffGgeZdJ13y7a6/p8wk067hE6P1KinxKwF&#xA;fiQgqw8RkWt+emo3s1/qFzfTGs11K88pO9WkYs2/zOWM0PirsVdirsVdirsVR2hLM2t6esJpMbmE&#xA;RnpRjIKfjih+jOVsXYqlvmXX7Hy9oGoa3ftxtNPgeeQVALcBUItf2nair7nFQ+XdM1eXT9C1P8wv&#xA;MZEmqa/O1xHBX7ddoIlqSREinoD9mintWyOwtoy+uXCOj0r8kPyuvBN/ysDzhH6vmLUB6mm2so/3&#xA;khYfC/E7LI69BT4F22JIFZNt4AiKD2rFXyj/AM5GWNz5V/N3TPNtmpBu1tr9D0BudPcI6/L01jJ+&#xA;eRLZHcPqixvLe+sre9tm5291Gk0L+KSKGU/SDkmtWxVIvPXmaLyv5P1fX5KH9H2zyRI3RpSOMSH/&#xA;AFpGVcUgPhvUb2a30rlPI0moai7XV5KftM8p5Esffvlg2DaX1D/zj1+VGk+XfK9j5lvIVuPMWrwp&#xA;dC4cBjbwTLyjjir9klGBc9amnQZW1yL2DFi7FXYqsuLeC5gkt7iNJoJlKSwyKGR0YUZWU1BBHUHF&#xA;Xyx+d35EHysLjzT5XhMvl5jy1PS92a1BI/eRk1Yx1+lP9WtJRNMwXilzb+tzaJ/V4Dmr92Q+P+UK&#xA;UPvk0vb/APnFXzpMmq3/AJHvJC+n6jDJdWCkmqTIB6qL4epHVj7r75URRRJ4HdW0trdTW0opLA7R&#xA;yD/KQlT19xliqWKuxV2KuxV2KuxVlH5YaS+rfmJ5csFXkJdQt2lHX93HIJJP+EQ4Ch9/5Bi7FXiX&#xA;/OSutPdW+h+R7eT0zrE/1vU3rRVs7U1+PwVpPir/AJGIFlTKgSxv8tPK6/mP5zGvXkVfJXlhlg0q&#xA;2daJc3MdCtV6FU+2w6VIHQkZKRthjhwjzL6RyLN2KvF/+cqvLg1D8v7fWUWsuiXaPI1Kn6vc/uZB&#xA;9LmP7sBZwO6e/wDOO3mP9NflXpiSPzudJL6bP7fVz+6H/IlkxCJDd6XhYvFf+cqNWaPydpWhRsQ2&#xA;s6jGso7GG3Bdh/wbIcaZQ5vlrzPKXv3H7KniB8hTLJszzfoNplsLXTbS1ChBBDHEEHReChaD5Uyt&#xA;qROKuxV2KuxVZcW8FxBJb3EaywTK0csTgMrowoysDsQQaEYq+DPM+gweXfzA17Q4DW2sriaK2qSS&#xA;IuYaMEnuEIByyJbAq/ljeXOm/mr5WmtmMbtqdvbMV2+C4lEEg/2SSEZGaor89/LMnl/80dbg48be&#xA;+lOo2ppQFLomRuPssnNPowhiHn+FLsVdirsVdirsVe8/84l+Ufr3mq/8zTAGHSIfQtulfrF0CpYf&#xA;6sQYf7LIyQX1dkWLsVfJH5k3Wqedvzr1XQtGPO+nki0O1k3Igt7ccrx2p0Ak5k07V742kxuu59Q+&#xA;VPLOmeWPLtjoOmJws7CIRoT9p26vI1P2nclm9ziglNsVdiqUecNAi8w+VdW0OSlNRtZbdWP7LuhC&#xA;P/sXo2KQ+e/+cSdfktdb17yxc1R7iJL2KJtistu3ozj/AFjzWvyyIZzfTeSa3zd/zk1e/WPPvlnT&#xA;iarY2NxeFfD6xJ6dfvgGShzbIPH/ACVoR8y/mXoWklecd1eo9yvjDD+9m/5Jo2Gal945BrdirsVd&#xA;irsVdir4M826gdV/MrzLqIaqS3128R61jE5ROv8Ak0ycGwIj8q7T6/8Am35YhArx1GK4p7QN63/M&#xA;vBNS+gf+cmvyzvfM3l+113R7V7rWNIJje2gQySzW0rCoVVBZjG/xADsWwAsA+RHR0dkdSrqSGUih&#xA;BGxBBybJbirsVdirsVdir7G/5xa8ty6V+W31+dOEutXUl0levooBDH95RmHscgWJew4EOxV4b/zj&#xA;P5VSe21j8wr6OuoeYLu4Fm7Ddbf1S0rD3kmqD/qDAGUj0e5YWLsVdirsVfJepf8AIPv+cmRcf3Vh&#xA;d6gsxOwX6vqq8ZTT+WKSRv8Agcj1bOYfWmSa3yv/AM5DzMPzghViSDpNvGBXorTSkge3I1yUObZB&#xA;hH5RanDpf50eXbiSixvdPbDl2N3E9uv4yjGal9v5FrdirsVdirsVSzzRrMeh+WtV1iQgLp1pNc79&#xA;zFGWA+kimKh8D6Va3At3vJCeVxURuxqTQnmT/sqZbEUG0Mx/IF40/Ony4ZKAVul33+I2c4X8SMhN&#xA;ieT7ayLB43+fH5H2vm3T5Nd0C3SHzRbKWdEAUXsYFSj9B6o/YY9fsnsVIKQXx/NDNBM8MyNFNExS&#xA;SNwVZWU0KsDuCD1GTZLMVdirsVZ/+T35Ual+YHmARHlBoVmytql8B0U7iKOvWR6bfy9T4EEoJfcN&#xA;jY2lhZW9jZxLBaWsaQ28K/ZSONQqqPkBkGKvirsVaRERQqKFUdFAoB92Kt4q7FXYq7FXzd/zl35c&#xA;IfQPMkS0LCTTLiQda7z24r8/VyMmyD3D8vPMY8y+R9E1stykvbSNrgj/AH+o4TD6JFYZJgXi/wDz&#xA;lBosln5g8vebOBNpJE+k3knZCGaaCv8Arc5PuwxNFnAvBPMEU+n6pDqFqxSSN0micfsuhqPuIycw&#xA;kvu3yh5lsvM3lnTdesmBg1CBJeKmvByKSRn3jcFT7jK2shN8UOxV2KuxV4r/AM5Seb00/wAmweWb&#xA;Z/8Ach5gmVXReotoWDuTTpyfgvuOWEBlEPnS6RIRFaxiiQIFHzpUnLmxG/ky0g/ODy36deQu6Hj1&#xA;4mNuX0ca1yqbEvujItbsVeMfnV/zj9Zeb2uPMGgsLTzII6ywGghvCg25H9iUjYP0O1fHCCkF8j31&#xA;he6feTWV9BJa3luxjnt5VKSI69VZWoQcmyQ+KvSPy/8AyH8+ebbq1lexk0vRJSGl1O6X0x6R7xRt&#xA;R5CR9mg4+4wEot9h+TPJuheT9At9D0WEx2sFWeR6GWWRvtSysAOTN/YKAAZBinmKuxV2KuxV2Kux&#xA;V2KuxVgH57+XDr35W63BGvK5sohqFtTchrU+q1B4mMOv04CmJ3YX/wA4m+YxeeT9T0F2rJpN0JoF&#xA;8Le8Xmo+iRH+/EMpjd6/5o8s6P5n0K70TWIfXsLxOMig0ZSDVXRuzKwBBwsAXyf+YX5Qeb/Jscwv&#xA;IH1zyutTFq1utZYE7evGKslB1b7Pv2yQl3tolaV/lL+cWrflzftbsraj5WvJOdzaKaOjEBTNATsH&#xA;oByU7NShodwCO5BD6u8jfmd5M87W7SaDfiWeNQ09jKPTuYx4tG3Ub/aWq++BgRTKsUOxViX5hfmh&#xA;5U8i6cbjWLkNdyKTaabEQ1xMR4L+ytertt9O2KQHyT5r8zav5g1y484a+Qt5PSOwsa/BbwivBFr4&#xA;A/eSTuctApsApik2svydmoztuPGuJktvXf8AnFzyFqOp+b/8Y3UDR6VpSSLaSsCFmupVMVEqKMI0&#xA;Zix7Nxysm2JfWOBg7FUu17zHoPl+xN9rd/Bp9oNvVuHCAn+VQd2b2G+KvAPzI/MP8t/Od0E0bycP&#xA;NNylFfW7gyadCFX9kTKYp5KdOLFfauIJTy5sV03W/wBC3ER0HyP5f0a9Q8m1LUbuTUeNO8KyyM8Z&#xA;998O6OOLLrP84PzptgsjpomswA/GqLLFIf8AVZWVB9xx4Sjjiyry/wD85LeWpJxZeb9PuPLN70Ek&#xA;ga5tWPtLGvIV90oP5sDKr5PV9L1fStWskvtLvIb6zk+xcW8iyxmnUckJFcUIvFXYq7FXYq7FXYq7&#xA;FVssUc0TxSqHikUo6NuCrChB+YxV8ofkdNL5K/PO+8rXDMsNy13pfxdGaBjNbyH/AF1Si/62RHNs&#xA;luH1jkmtxAIoemKvnX8+PyOs7W0ufN3lSzVEjBk1rRolpE0Y3a5hUfYZOrKu1N/Hkg0zjJ4DFZ3V&#xA;n6Or6JdyQzQ0dJoGaOaJvEMpDD5jLDEFlT2D8uf+cpta014tO87RNqVlUKNUhVVuox0rIg4pKo8R&#xA;Rv8AWOVkUxIZv+aX/OS/l/SdJjt/JlxFqur3sQdLsAmC1RhszqwBMvhGRt+14FQIvnqP1r6WTzHr&#xA;12+o6hcsZDJMxclh4k+FNh0HbLYxpmAkmoXV9q+oxW0SmSaaRYreBe7OQFUe5JyMyt2+1/JH5OeR&#xA;vLGiWdmdIs73UYo0+t6lPAkssk3V2DSBmVeX2VHQZBrJZxFFFDGsUSLHEg4oiAKoA7ADYYoXYqw/&#xA;80PzG07yL5bk1CXjPqk9YtJ06p53E5oB8I34JWrnw26kYpAfJ3mHzO9zfnVvMMja95nnHPhMQbe2&#xA;Xr6cUW8aqnjT+uHkiyeWwY1c675l1mXibho4fsqkVVUDwFNzjuVPDFH2PkpplDXjlS38xJf7gRTD&#xA;wsTkKZR+VI7VlNjfXFrKOjxOV++hx4UeIeqvLq+r2tvJaeZIV1TSHHH64EHqw12DMB1A+/37YpAB&#xA;5bFKba98yeSNUi1fyxqklpBPQxzxNyicfsrKpqkif6wORIZiV7Hm+lPyk/5yA0/zXPFoPmGNNL8y&#xA;miw0NLe6P/FRJPB/8gnfsT0CvmHsGKHYq7FXYq7FXYq7FXyj/wA5E2Vx5U/N/TPNlmtPra22oIRs&#xA;GubFwjr8vTVCfnkS2R3D6osry3vbK3vLZudvcxpNC47pIoZT9IOSa1bFWmVWUqwBUihB3BBxV8gf&#xA;nT+Wl5+XvmE6vpcZbypqUrGBQKrbTPVmtmp+zsTGfDbqCSYypsiXllzJZ3UzeghWprxNKCvgcsVR&#xA;jtoY3+McgD0r/EYgKrXWoSMgVm+BRRIwdhiStvYv+ccPyj1LV9ftfOmrQmDRdOk9bTlcEG5uU+w6&#xA;A/7rib4uXdgAK/FSom0E0+scWDsVQ+paha6dp11qF2/p2tnDJcXEn8scSl3P0KMVfE3nfzXqvmDU&#xA;z5m1Bi+qauzLpdmxJS0sgSI1XsKipanXr3OEKd9ugYlY6Xc6levEjGReX7+c/tt4fIYgKZUGcadp&#xA;VpYRhVUFyBWQ/qGSaUdyCmvWvUd8VXDdakVWmw/jXCqtbXPBGVo0lU7OXWtVoQV37EdcVSLU9It7&#xA;C7TTEPPQdaR2s1apNvOByKKd9m7e/wBNY02XYvqGJyW0slkXqUvtOkMbOpo3wH4WBHceOCrCk0bH&#xA;V9gfkL+Y0vnXyUjX8nPXNKYWmpE9ZNqxTkf8WL1/yg2BmXpOKHYq7FXYq7FXYq8z/Mvyh5E/M6Wy&#xA;0KXzBBBqulzvJ6VrLDJccHXjPF6ZaoJ4Cu3w03GJDIEhn2haNZ6Jotho9kXNpp1vHa25kbm/CJAi&#xA;8m2qaDFijsVdirz7zx+Z/wCTUNvdaB5o1e0uYZwYbuxVJbunej/VklKMpFR0IPvikAvna5/K38r9&#xA;d1R18k+f7ONJG/cWOrxzWrqSfsrNIsfqe3wV+eILNlWnf84ga5KVOpeZraKM7t9Wgkn29i7Q9cNl&#xA;HEHonlD/AJxk/LnQZkur5Jddu0IK/XSvoAjwgQBW+TlsCOJ6Vreu6F5Z0WXUtVuI9P0qzQBpCDxV&#xA;RsqoiAsT2CqK4sUN5Y87eU/NNsbjy/qkGoIu8ixNSRK/zxNxkT/ZKMUkJ3ih59+f97LZfk/5kmjJ&#xA;DNDDAaGnwz3MULf8LIcSmPN8keZXWHXp4h9jTbRYYgOzBQn/ABHD1YDl7yj/ACXBxslqKmQFvmWI&#xA;/pkhyYzO6ZprejyXH1YXSSTg8eIqdx4HocbUxKOZ41mEPJVlZeaoSORWtOQXrSo64sVJ76xSb6s9&#xA;xGknUxFgG39sU0rUJ2X+7BBoPH2xQpea1eLy7aXBpzs763niI60Pb/hsEmePmxeeMReYdTgOyzIJ&#xA;CPwP68RzU/SHof8Azinq0ln+YmpaVypBqNg7FPGW2kUofoR3yJ5s4/S+scVdirsVdirsVeGf85K/&#xA;mJqGnW9l5M0S4MF/qymbUp4mKyR2obiqAjp6zA136CnRsQLZxD5qu7mbSLiH6lM8M1pxdJI2Ksso&#xA;PIFWG9Vy07Mi+7PIusXuteTNE1e+jMV3f2UFxOppu0kYYttTZvtD55U1lPMUPnv/AJyZ/NW9sJ4v&#xA;I+j3RtHuYhLrN2hIcRyV9O3Vh9nmByf2IHQnFnEPmuWyEdEdChpUdqg98spJQLCjEU9qdcBpQ9L/&#xA;ACp/PLzP5Gu4bS5kk1Ly2WCz6bI1WiX+a2ZvsMvXh9k+x3EKUgF9o6Xqdjqum2upWEonsryJJ7aZ&#xA;ejRyKGU7+xxa3h3/ADlgt5Lpvl63jLfVpJLoyKDRTKoiEVfejPTJwZxfN2j6pr/lTWbbWNKnezv7&#xA;V+SOu1aHdHFfiRujKdiMZRS+3Pyr/Maw8++VIdYgUQ3sZ9DUrMH+6uFALUrU8GryQ+HuDkGBFJR/&#xA;zkTE0v5N+YlWlQtq+/gl5Cx/AYCmPN8lebzz17WZFFAyRPT/AFlB/jkixjyCd+W+K29vKR/ciNx7&#xA;cd6/hkmo80gt20v/AArBGHRtX+sxm1RKGUVY8uVNwpHj7ZDo3b2e5kUqj/GUC0PwWMak+7sWNP8A&#xA;gsl1a/4UNoel6Tqz6rc6lGnoz3M8jXJ+ExqSSWD7U49fDAAylIg0ET5Qnml0eP1WLhWZUkbqVB2w&#xA;x5MJjdN/PFF8qQACrSz2wA8SD/ZjLknHzYvra8PN96B2tT/xIY9VP0/FlP8Azjekp/OOzKNRVtrp&#xA;pR4qYiKf8EQcB5socn2NgS7FXYq7FWOefvPmheSfL02s6tJstVtLVT+9uJqVWKMe/c9ANzikC3xr&#xA;qevajqur3/mrW2D6nqUhcR70RQOKItakJGlFGWQFNo2Uvy98k6j+YHnO20i3qLXl6+p3VDSK3Ujm&#xA;1f5j9lPFjkZFjb7whhihiSGJQkUahI0XYKqigAHsMi1rsVfD/wCYt7HqnnzzbqVwRcLJqlxZxANX&#xA;klt+5iYN4BVWmTgNm0cmIzTUszb3BpPaAGFz1aJv2fmpxuuaShbTTpZZFaQEVozfLr+OIHVFKFwD&#xA;RiehIC/dhYvrn/nFTX5dR/LaTT5m5No97LBEK1IhlCzL/wAPI4ytEmd/mb5Et/OnlabS2YRXsZ9f&#xA;T526JOoIUNSp4MCVb7+owg0gGnxtqun3TLeWWowG11jTZGt763bqHQ8a+9fHvlgNht5sy/5xg80S&#xA;aL+ZB0aRyLPXYXgKk0X14QZYWPvQOg/1srkN2B5Po/8AOa1Nz+VfmiMCvGwll6V/uh6n/GmBiOb4&#xA;w1t/VuLmRaETafaS1HT+7Sv44UDp72Q+W1Mul7U+KIAE9KkHJdGrqkem2BtdP03WIIzz9Y2t2vGv&#xA;2yTG9Oo6EE/LIhtkbsJ/A7yed+RXiv1a34gjtxFf+Grh6sD9ISby35e06/0xLq5V3kLMWHMgMQxG&#xA;+ADZlOZBZdbpFDGkUSBIgKIB7ZJqXecatp2gWlTW5vrdabV3Pv8APBJnDqxTVZTL5m1eUf7rj4ff&#xA;vj1U/SGc/wDOL1r6/wCbNxLSv1XTLiWtfGWKP/mZgPNlD6X1zgS7FWPecPzB8oeTooJfMeoLYi6E&#xA;htlKSSNJ6PHmFEatuOa/fikC3jvm7/nKOWWd9P8AJGlGWUCjajqQMaryFapbghjtuCzD/VxAvkyE&#xA;HivmXXr/AFS/Or+aNUk1fVDtGGNIoh/LFGtFUeygZYIgM9goeUvJ3mz8w9b/AEfosBMSkfWrySq2&#xA;9uni7Abeyjc9h1yMpMSX2P8Alr+Wug+QdCGm6YDLczFZNQv3AEk8oFKn+VB+ynb5kkxYE2y3FCy4&#xA;nit4JLiZgkMKNJI56BVFSfuxV8CSzS3eh3t9sJ7m5knHSoMkgY0PY0GTH0tySXtLi6P1eOUQlnNu&#xA;kziWQRgVAZwqBiO5oMrAPXmqZ215DbmQQQzQQywQo6TNyLTog9aQbCis/Kg7A5LFYu0kpNdPyO2w&#xA;BNR75NrL6V/5w6mrpvmiDlXhNaPw8OaSiv08Pwys80SfRWLF86f85L+UoNO1zSPONrGFTUn/AEXr&#xA;AHR3K1t5D78UZSfBVwxNFsgXhOlX7+XvO2laoDx/R9/BOx6VSOVWP0Fa5KYTT7p85WP6Q8oa5YUr&#xA;9b0+6gp4+pAydqeOQaw+FbqJTb2Ei7/WtJZWP+VFI6/qQYUH9Kf+TpQ2koOpAAH0E5IcmufMp6zB&#xA;Bt37e+Fi0VQSLJT94opy8BiqxIgCxVQsVahVFKnuTgVERpEY2fkAy04LQnlU708KYVUPMT89c8r2&#xA;5/3XzumH/GCPn/xrkSzjyLDIpTJNq903WSX0yfdRT/jbELPkHsH/ADiRZCXzN5n1Gn+89tb2/Lw9&#xA;eRn/AB9DInmzj9L6cxV2Kvlf/nILSNe0v8wbbWNYFzr3lF3+sRabcSzSQxx0RLgIsIjSAKXAUlqk&#xA;0ryyEwSNmY5MT84eXvM/nTz1f615J0XUrzSdQMbW9y1q8MNUiWM0kekfH4arUjY9MjpwYxooiKG7&#xA;NPI//OKOtXk8d953vltINmbTbRxLO3+TJNvGn+w5fMZaSSnifR/l/wAuaH5d0uLS9Fs47GxhHwQx&#xA;ClT3ZifiZj3ZjU4sLTHFXYqwv859a/Q35W+ZL0NxdrNraMjqHuiLdSPkZa4pHN8hsi2Pl1UZATwU&#xA;MviWIrlwFBuKR2jNLfwKSA6pPyoOimMjtkeoQEXNpU8kDXJetFZwP8lOuSpFMfcrVq70ZjT7sixf&#xA;Rv8Azht183/9u7/says80SfSmLF5J/zlCB/yqyRqAst9alD4HkRtiyjzfKXmwhrlJB0dEIP35ZPk&#xA;2Hm+/NJZptHs2mSjyW8ZljY8qFkHIE98raXwjrETaZZWEMq1fTLrUtOmX3R6hSfnIcbSRZIRHlGw&#xA;Fpqd3EZhMUjSPmhqvJgHcKe4UmlcMEZmVBaEht6jb5ZJpcNzx/Y8fH2xVxYgH/fVfx8MVVYYXd1F&#xA;Kc2oo9zthVB67x/xjKVb4bLS3fforSsIaf8AAtXI9Wf8LCraSmj+r3nleQ/IEj+GMeS5Ob6J/wCc&#xA;RNP4eVtf1Km9zqC2/Lx+rwq3j/xf4ZFs6B73ih2KuxV2KuxV2KuxV2KvHf8AnKPUBF5AsdOU/vNT&#xA;1O3iKb7xxq8rHbsGRcWUOb5o8zTycEgjb4GozAex/plxbJIPyuofVJ3pUcPTNffc/wDEcjHmoTTW&#xA;5UgsPQjYh1AVj0+E9QfnkypYq1uvJnY7MK5Fi+h/+cNuvnD/ALd3/Y1lR5sZPpTFi8j/AOcmXWfy&#xA;Np2jpJHHdaxq9paW7yMFVCebeo9f2F4jke1cjI0LZRfP3mH8m/Pdhqui2msCBk1W+h0y1ktpOdWk&#xA;NA1Cq0HGp3yENSMmwWMwX25GiRosaDiiAKqjsBsBlrF8VfmVHY6Z+auu6VqULSaemrT6pMiqXNLu&#xA;FJV2/lJcVyJbIjqxXy7dRxahdJB+6RjziWh2HTblk4NeYM4kqydeIPRh1pTrk2lsLVAlahQAT3NB&#xA;gVwr9pxuKBRiqY6TGZL5OwSrkeFOn4nCrFdXveV35pvv8uKziPtDGzP/AMMq5HvbK2AYxcAxaVbJ&#xA;0/chvpffEcmMty+tP+cZ9NNn+UmmzEUa/nubph3/AL5oh96xDItsnqeKHYq7FXYq7FXYq7FXYq+Z&#xA;v+clfMYvvP8Ao+gxuDBots13dAdprn9lv9WKNWH+tkoc2yAeJas80t6OSFOfxID/ACk8V/BcsKSv&#xA;8qK/1qdxSm5Py3G305GCQs1eaWSRoGbmQ0cLN4sq1Y/SckUFAyKGs123LSD/AIbAh7Z/ziBqixea&#xA;de0stQ3llHcKu+5tpeHy/wCPjKzzYnk+qMDFgv5xfl1/jnym+nWsNqNYR4/qF9dBv9HVpo2nZGUM&#xA;wLRx098SkGnn35U/kP5jstd0/wAzec7yWS6tOdxHpz3JuHW9WV0SWVxzRl9Hiw4tWtK+GREQEkjo&#xA;97yTF8t/ntJBon50R6mkL3Q1HTE5xwDm5lRmiK0Hgka5EtsHkGrw6pb336TmtGs1J5LDJs5XuSO2&#xA;MTSzjYRMPnS5jCFoXMJoAaDp7V6/fk+MNHhFPtP8yWF0lY34seqjt/sTvkgWBBHNC33meb9IC105&#xA;Ynp8AmnLLG0v++1anENv+0QMiZNkMdjdkfl3Wg0k1rdwmy1K2Ie9ikI4iMdDGwPxAnCJWxnAhg93&#xA;MzeVJZ/2r+5mn+l5FT9S4OjP+IIPzAwijWIH7KKoHywnk1w3L7n/AC90Y6L5F0DS2FJLSwt0m/4y&#xA;emDJ/wAOTkW0sgxQ7FXYq7FXYq7FXYq7FXxP+ZVz/wAhX84Xb3C30MdyyeoF4jkqiNYaVavpf3ZP&#xA;elcnBtHJjV20CzUnJNyqxcW/yjUv7dTk0rPLTMtzfekPsqWj/wBluMjDqoUoYeWp2ayCvOZ3Yda7&#xA;in4ZJCF2CTqB8MU1VHgD2wKzD8hNYGi/m9ohLUt72SSxftyFwjJGP+RvDISYnk+38iwdirsVeGfn&#xA;n+edxod7c+S/Ln+j68UQXmqzMscdsk0YkAh5H4pCjj4v2e1T0BNM4xt8zXL2mn3KS20gkuYWDGdm&#xA;JMjb8+hPwtXKwS2lF675lm1m0Sa+uIYljAEdnEGaR2HdyQFUeO/yGSRaAhs7hba3uwFISjKhNGaj&#xA;Fgyjw3yBK0iJ47e5RpRB6d41XJibiR8hVuQ96YgkJItu31eK102bT0jrFeRqt9bPUFZoztNESf2g&#xA;ASPH2yaGrC91q6laWG4EzRQNbxm4dQ/psa0r3+I7VOPFSDHiV7yTVZNLtNOXTpEazKs7DcNx+Xid&#xA;8PGKYeGbJW+XbJdX846Lp+qH6ta3t9bw3MsrBVWJpVEh5NQfZrh4rYjHwv0DwodirsVdirsVdirs&#xA;VdiqU+bdci0Hyvqusyusa2FrNOrMKjkiEoKVFSzUAHfFQ+CJ3uY4o7y6kMk9zyuZeRPJndiQzV6l&#xA;jlkdg2lXtZ/W06Vm3kajB61IMZO2StVXyhNEbmdSaOQAo8QKD+GRgdykI3UZQuq2jkcfTI508Tuc&#xA;mVKRXbrG90U+yxG3yr/HIkoU9P1KfTdTsNUiBW60+4inQHYh4XDr+K5AmwtP0QtLqG7tYbqE8obh&#xA;FlibxVwGU/cci1KuKuxVJdZ8k+Ttbd5NX0Sxv5pAA81xbxSSbDiP3jLzFBsN8U2841//AJxZ/LPU&#xA;rj6xY/W9HYmrRWsoeI16/DOspH0NT2wUniKjY/8AOKH5YwRkXMuoXsh6vJOiU+QijT8a40vEiz/z&#xA;i3+VVCFivlJFAwumqPvGNLxFAXf/ADiX+W80TCG91SCWnwyetC4B91aHf78aXiKX6b/ziD5QikZt&#xA;S1u/u46kxxwLFb0HgxImr9FMaXiUtY/5w+8sTVOj69eWRJrxuo47pR7Dh9WP4nGl4kotv+cPL9XL&#xA;P5uWEjdWismY1+m4TBwp41W+/wCcQtQuFDt5y+sSqOK+tYkCn+t9Zc/hiIrxvWvyg8keYvJflZ9E&#xA;1rVV1UpcO9kyc+MMDKoEYL705AtToK5JiTbOMUOxV2KuxV2KuxV2KvDv+crPNi2PlOw8tRycJNbu&#xA;PUut+lralXYH/WlKU+RxZQDwT8uvI+pfmN51g0xOUemQcZNRuUHww2se3wk7c3+ynua0oDkpG2RL&#xA;DpBc2N1JA9Ve3keNgQQOSniwOMZJZxqnleHytovk3WpVIl13T7q6uPA8ZS0VAf8Aip0wQO6gpBNY&#xA;ay+kDzbKpGky37WMVa0Moi9UgfJfxw8W62k11cBw/ixB+/fDI7KHrv8Azkp5Hs/L/mHT9X02Omk6&#xA;1Zoi0FAJ7VFjrQBQOUXBvc8sgGMS+hvyO1s6z+VPl25ZuUkNsLOTxraMYBX3Kxg4hjLmzrFDsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirC/OP5ReTvOHmGy1rzBFNdtY27W0dl6nC3ZW&#xA;YsGcKA/JS21HA8RikFMvJH5feVfJOnSWHl+0+rxzv6lxK7GSWVhsC7tvRR0HQfScVJtJrn8kfy5u&#xA;tCl0W404yWk18+pu5kYTfWJPtkSghgpX4ePh7740vEUm/OD8lT530/y3p+lXMOl2+hu0IDh2C2ki&#xA;xoyxgVqyrCvEMRXxGKQUH+c35d6dZ/kdNoug2h9Hy+Yby0hA5MfSf9/IxHVjHJI7H54FB3eXfkF+&#xA;R1l5t0/Udc80W0q6POn1fSlDGN3fmGedD4Jx4A9DVvDCTaSafR/mL8vvKfmTQLXQdbsvrmmWRja2&#xA;jaSVGVoozGjepGyPUKx7798WNrPy+8h6X5H8v/oPTJp57X15bhXuGDOPVaoX4QooqgDpud++Kk2y&#xA;XFDsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ff95280c-d080-4782-82bc-2b91162f8191</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2236b563-79a1-8743-8e41-bfc73d13fd22</stEvt:instanceID>
                  <stEvt:when>2019-11-11T10:30:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>123.484512</stDim:w>
            <stDim:h>100.749851</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -197.1 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 197.1 li
166.079 197.1 li
166.079 0 li
cp
clp
164.219 74.306 mo
164.195 69.8841 163.977 65.4583 163.831 61.0389 cv
163.798 60.0614 163.418 59.3675 162.875 58.9285 cv
161.975 50.847 160.205 42.9266 154.96 36.6776 cv
149.296 29.931 142.009 24.2401 134.271 19.5584 cv
128.44 14.8025 121.885 11.0765 114.692 8.66975 cv
110.039 7.11313 105.266 6.39727 100.434 5.65316 cv
95.1421 4.83773 90.0669 3.05941 84.7828 2.28206 cv
82.4674 1.94125 80.0719 1.84405 77.6451 1.93147 cv
77.8716 2.50717 77.5757 3.30842 76.7583 3.34946 cv
74.855 3.44463 73.0279 4.02571 71.1333 4.22445 cv
70.4742 4.29378 70.1646 3.7972 70.1851 3.28106 cv
69.23 3.26743 68.274 3.26155 67.3189 3.25128 cv
63.3922 4.05648 59.5484 5.1341 55.9869 6.25424 cv
48.1842 8.70931 41.2945 12.9075 35.6685 18.703 cv
35.4625 18.8358 35.2632 19.0013 35.0787 19.2142 cv
33.6461 20.8656 31.48 22.9324 29.9087 25.1898 cv
28.7017 26.3944 27.5074 27.6077 26.5044 28.9334 cv
26.2525 29.2665 26.024 29.6151 25.7798 29.9539 cv
21.4673 31.0066 17.8707 34.9012 16.9097 39.261 cv
14.9175 42.4564 14.0992 46.6898 13.7203 50.6951 cv
10.689 56.2147 11.3873 62.2689 12.3209 68.5174 cv
12.6812 70.9334 13.0093 73.3484 13.3052 75.765 cv
13.3082 76.0213 13.3101 76.2782 13.314 76.5345 cv
12.8384 76.9847 12.4976 77.575 12.4185 78.2586 cv
11.7622 83.9329 12.271 90.1453 12.898 95.8123 cv
13.0386 97.0828 13.2769 98.2396 13.7154 99.2342 cv
13.4967 102.986 14.0875 106.608 14.8599 110.505 cv
15.0455 111.442 15.1881 112.483 15.3394 113.56 cv
13.7261 119.765 14.9234 126.04 16.3648 132.243 cv
18.065 139.56 19.7984 146.869 21.5513 154.173 cv
21.6109 154.419 21.7046 154.633 21.7818 154.863 cv
21.6637 155.165 21.5933 155.504 21.6001 155.887 cv
21.6627 159.655 22.2554 163.141 23.5122 166.703 cv
24.066 168.271 25.9996 169.429 27.5767 168.357 cv
29.0767 167.337 30.5152 166.638 32.0367 166.117 cv
33.2115 165.969 34.4253 165.65 35.5963 165.212 cv
35.7486 165.184 35.896 165.153 36.0523 165.126 cv
36.9722 164.968 37.732 164.882 38.4498 164.551 cv
38.9625 164.679 39.4176 164.718 39.8169 164.669 cv
48.2193 165.557 57.1206 164.128 65.2017 166.7 cv
69.855 168.181 73.7779 171.265 78.2115 173.243 cv
81.899 174.888 85.7749 175.973 89.732 176.739 cv
98.8043 178.493 107.552 178.257 116.7 178.63 cv
121.771 178.837 126.479 180.516 131.409 181.523 cv
135.873 182.434 140.421 182.794 144.956 183.137 cv
146.106 183.224 147.584 182.176 147.771 180.993 cv
148.247 177.993 148.792 175.009 149.369 172.033 cv
152.322 167.484 153.532 160.769 153.801 156.727 cv
153.823 156.402 153.78 156.109 153.706 155.836 cv
154.541 154.859 155.164 153.654 155.438 152.19 cv
157.248 142.558 158.436 132.792 158.698 122.99 cv
158.803 119.035 159.15 113.784 158.169 109.373 cv
160.374 99.5892 162.268 89.743 163.853 79.8333 cv
164.052 78.5916 163.999 77.2684 163.729 75.9715 cv
164.034 75.5364 164.222 74.9847 164.219 74.306 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.396078 .435294 .447059 rgb
f
162.773 71.66 mo
163.07 71.2552 163.277 70.7532 163.324 70.1409 cv
164.011 61.326 164.001 49.9842 158.097 42.8035 cv
157.841 42.4915 157.543 42.3621 157.247 42.3568 cv
155.2 36.3836 152.08 31.0086 146.358 27.2855 cv
145.666 26.8348 144.912 26.805 144.226 27.0198 cv
144.1 26.9793 143.975 26.95 143.849 26.9334 cv
141.637 24.7127 139.542 22.3406 137.545 20.2196 cv
137.283 19.9398 136.983 19.7572 136.669 19.6405 cv
135.822 18.911 134.601 18.869 133.734 19.3655 cv
132.026 17.3494 130.628 15.7327 127.937 15.0155 cv
126.163 14.5428 124.851 17.2869 126.641 18.0887 cv
126.823 18.1702 127.006 18.2484 127.188 18.3294 cv
129.829 19.5389 131.96 23.7655 133.613 26.0428 cv
134.207 26.8612 134.797 27.68 135.39 28.4969 cv
135.558 28.8016 135.741 29.0994 135.927 29.3948 cv
137.66 33.429 139.497 37.4139 141.488 41.3289 cv
141.916 47.1292 143.619 52.8485 144.814 58.617 cv
145.213 61.3939 145.6 64.1707 146.027 66.9329 cv
146.076 67.2493 146.187 67.5164 146.341 67.7425 cv
146.229 69.1966 146.11 70.6517 146.011 72.1082 cv
145.574 78.534 146.211 84.9891 145.143 91.3665 cv
143.918 98.6727 142.402 105.522 141.756 112.56 cv
141.073 115.988 140.253 120.008 140.923 123.337 cv
140.59 125.041 140.282 126.747 140.003 128.455 cv
139.151 132.446 138.109 136.393 137.339 140.411 cv
136.91 142.655 136.566 144.926 136.397 147.205 cv
136.323 148.202 136.4 149.39 136.458 150.617 cv
135.913 153 135.52 155.431 135.279 157.924 cv
135.176 158.982 135.778 159.672 136.577 159.962 cv
135.545 163.993 134.697 168.071 133.628 172.095 cv
133.47 172.684 133.572 173.298 133.841 173.821 cv
133.658 174.742 133.477 175.664 133.311 176.59 cv
132.962 178.526 134.523 180.6 136.663 179.941 cv
138.503 179.076 140.374 179.237 142.276 180.426 cv
143.74 183.096 147.219 181.562 147.511 179.008 cv
147.54 178.759 147.588 178.516 147.622 178.269 cv
148.34 178.087 148.962 177.581 149.174 176.687 cv
149.692 174.5 150.088 172.304 150.367 170.097 cv
150.678 169.799 150.938 169.403 151.095 168.874 cv
153.096 162.135 154.14 155.244 154.803 148.294 cv
154.926 147.611 155.049 146.928 155.172 146.245 cv
155.26 145.76 155.217 145.321 155.097 144.926 cv
155.188 143.787 155.272 142.647 155.349 141.506 cv
155.477 140.709 155.581 139.904 155.692 139.101 cv
155.921 138.862 156.109 138.584 156.222 138.266 cv
158.678 131.359 158.697 123.512 159.236 116.036 cv
159.247 115.965 li
159.439 114.506 159.562 113.051 159.652 111.596 cv
159.683 111.331 159.711 111.065 159.746 110.803 cv
160.692 103.627 161.494 96.5184 161.035 89.3968 cv
161.792 89.1234 162.441 88.4901 162.757 87.4271 cv
164.265 82.3543 162.776 76.9769 162.777 71.7742 cv
162.773 71.66 li
cp
.290196 .337255 .34902 rgb
f
154.418 189.22 mo
150.026 185.683 145.166 183.139 139.565 182.165 cv
135.634 181.481 131.638 181.557 127.648 181.633 cv
125.643 181.671 123.639 181.709 121.646 181.651 cv
114.806 181.451 108.754 179.406 102.225 177.651 cv
95.773 175.916 89.2056 175.79 82.6363 174.807 cv
80.7222 174.521 78.9517 174.032 77.2476 173.434 cv
74.9146 170.594 72.1568 168.381 69.525 170.013 cv
67.9586 169.238 66.3716 168.453 64.7056 167.72 cv
59.7955 165.556 54.401 164.625 49.0455 164.753 cv
40.4488 164.959 32.3785 167.676 24.6812 171.263 cv
24.2769 170.944 23.7681 170.763 23.1714 170.827 cv
19.1617 171.251 16.2945 172.829 13.9078 175.756 cv
11.6294 177.727 9.71146 181.408 6.82283 182.304 cv
4.00932 183.178 4.36189 187.853 7.54645 187.651 cv
10.6519 187.453 13.815 187.194 16.8873 187.844 cv
19.5406 188.404 22.0299 189.509 24.7056 190.01 cv
30.6275 191.12 36.7564 190.779 42.732 190.451 cv
48.9097 190.113 55.0982 189.631 61.2828 190.082 cv
67.6138 190.543 73.7701 191.773 80.148 191.702 cv
92.7789 191.561 104.472 189.964 116.991 192.621 cv
122.526 193.796 127.758 194.127 133.405 193.645 cv
139.554 193.119 145.523 192.274 151.529 194.182 cv
154.228 195.04 156.764 191.111 154.418 189.22 cv
.188235 .152941 .12549 rgb
f
143.887 86.5574 mo
145.28 80.5018 146.673 74.7806 144.851 68.6336 cv
144.64 67.9232 143.849 67.8944 143.45 68.324 cv
142.706 58.638 141.713 48.8968 138.636 39.6986 cv
135.436 30.1326 126.362 18.8978 117.743 13.7303 cv
116.724 13.1195 115.742 14.4915 116.507 15.3319 cv
124.716 24.3397 135.345 31.3192 137.872 44.1966 cv
140.021 55.1575 140.564 66.5726 142.112 77.6488 cv
141.54 81.2 140.859 84.7225 140.189 88.3704 cv
139.066 94.4871 139.192 100.733 137.648 106.78 cv
135.111 110.304 134.946 114.693 135.081 119.183 cv
135.021 119.365 134.962 119.546 134.92 119.729 cv
134.86 119.999 134.887 120.224 134.966 120.412 cv
132.984 123.951 132.958 128.094 132.869 132.096 cv
132.824 134.118 132.789 136.136 132.729 138.151 cv
130.603 142.492 129.951 147.986 129.214 152.575 cv
128.28 158.393 128.04 164.158 128.024 170.042 cv
128.022 170.758 128.425 171.204 128.935 171.386 cv
128.863 171.956 128.796 172.528 128.741 173.099 cv
128.672 173.337 128.602 173.576 128.526 173.82 cv
128.193 174.889 127.808 175.942 127.358 176.966 cv
127.261 177.185 127.015 177.896 126.772 178.466 cv
126.405 178.514 126.044 178.459 125.628 178.21 cv
125.345 178.041 125.169 177.796 124.833 177.694 cv
124.371 177.555 123.884 177.665 123.464 177.891 cv
123.293 177.765 123.119 177.628 122.942 177.469 cv
122.029 176.644 120.516 176.951 120.171 178.2 cv
119.83 179.434 119.949 180.94 121.248 181.551 cv
121.771 181.797 122.36 181.842 122.911 181.661 cv
122.931 181.652 li
124.231 182.38 125.698 182.717 127.067 182.13 cv
127.364 182.133 127.665 182.075 127.919 181.942 cv
128.562 181.604 129.076 180.932 129.505 180.146 cv
129.98 180.135 130.511 179.779 130.573 179.243 cv
130.668 178.419 130.784 177.595 130.896 176.771 cv
130.935 176.667 130.975 176.553 131.013 176.458 cv
131.856 174.315 132.893 171.881 132.127 169.592 cv
132.046 169.43 li
133.151 163.014 134.374 156.595 134.79 150.164 cv
134.818 149.725 134.579 149.47 134.27 149.363 cv
135.294 143.795 135.996 138.141 136.505 132.477 cv
137.821 129.387 138.374 126.136 138.81 122.699 cv
139.378 118.218 141.291 112.441 140.316 107.888 cv
140.395 107.69 li
142.402 100.777 142.28 93.5452 143.887 86.5574 cv
cp
.290196 .337255 .34902 rgb
f
29.8306 36.0486 mo
29.5455 36.7293 29.2603 37.4095 28.9742 38.0897 cv
27.3394 41.8069 25.3746 45.3856 23.7261 49.0658 cv
24.0943 47.7718 24.4869 46.4822 24.9263 45.1961 cv
25.1685 44.4857 24.8716 43.952 24.3912 43.6712 cv
24.4732 43.4486 24.5523 43.2259 24.6519 43.0057 cv
25.9634 40.115 27.7847 37.346 29.7496 34.7357 cv
29.9498 34.9544 30.2212 35.1131 30.5064 35.1493 cv
30.229 35.369 29.9898 35.66 29.8306 36.0486 cv
29.3824 143.148 mo
29.4849 143.723 29.5865 144.298 29.6978 144.869 cv
29.692 144.946 li
29.6959 145.316 29.7144 145.681 29.7281 146.049 cv
29.3218 146.413 29.0494 146.948 29.0523 147.657 cv
29.0562 148.795 29.0992 149.927 29.1617 151.055 cv
28.8472 148.273 28.6314 145.437 28.0816 142.712 cv
27.4019 139.34 26.2564 136.27 25.7672 132.793 cv
25.5494 131.246 25.2974 129.703 25.0347 128.161 cv
25.3805 128.058 25.69 127.869 25.8961 127.557 cv
26.0933 128.481 26.2984 129.403 26.5122 130.324 cv
26.646 131.225 26.7681 132.129 26.9195 133.025 cv
26.981 133.39 27.148 133.672 27.3746 133.885 cv
27.5718 134.665 27.7701 135.446 27.9751 136.224 cv
28.3199 138.549 28.6373 140.963 29.3824 143.148 cv
23.5777 109.008 mo
23.6021 110.429 23.6783 111.843 23.7798 113.254 cv
22.9674 108.703 22.2467 104.138 21.7847 99.4944 cv
21.7173 98.3963 21.6549 97.2987 21.5904 96.2005 cv
21.7486 96.2923 21.9302 96.3436 22.1148 96.3499 cv
22.1822 97.5638 22.2388 98.7767 22.3277 99.9925 cv
22.4234 101.306 23.3345 102.011 24.3092 102.122 cv
24.3736 103.908 24.4439 105.695 24.523 107.486 cv
23.9771 107.742 23.565 108.261 23.5777 109.008 cv
21.2408 64.9529 mo
21.2769 64.3377 21.3101 63.721 21.3423 63.1053 cv
21.6441 63.3187 21.9957 63.4622 22.3717 63.5257 cv
22.105 67.5399 21.9215 71.5511 21.815 75.5628 cv
21.5679 72.0486 21.3677 68.5286 21.2486 65.0155 cv
21.2408 64.9529 li
118.351 174.286 mo
118.132 174.256 117.91 174.228 117.69 174.198 cv
109.253 173.21 101.296 170.577 93.2242 168.059 cv
85.6333 165.692 77.8492 163.617 70.3843 160.875 cv
67.4204 159.787 64.8336 157.919 61.8746 156.868 cv
58.8999 155.812 55.7193 156.304 52.7476 155.483 cv
49.2789 154.526 49.525 151.241 48.8345 148.115 cv
48.4273 146.272 47.9527 144.534 47.2759 142.871 cv
49.4302 142.111 49.1695 138.351 46.4673 138.351 cv
45.8482 138.351 45.3638 138.556 45.0005 138.87 cv
44.73 138.591 44.4341 138.352 44.1041 138.196 cv
43.8843 136.694 43.6226 135.198 43.2779 133.714 cv
43.2271 133.495 43.1627 133.194 43.0894 132.855 cv
42.4039 128.71 41.8502 124.534 41.4136 120.329 cv
41.3258 119.481 40.897 118.546 40.1978 118 cv
39.2838 111.097 38.731 104.173 39.2476 97.1941 cv
39.2593 97.035 39.2583 96.8841 39.2466 96.741 cv
39.733 96.3226 40.0542 95.6922 40.0435 94.8465 cv
39.9429 87.0345 40.0523 79.2249 40.4292 71.4207 cv
40.6178 67.5189 40.8755 63.6209 41.1851 59.7269 cv
41.4586 56.2777 42.0962 52.8817 41.0777 49.5272 cv
41.0337 49.3807 40.9664 49.2493 40.8902 49.1268 cv
41.4244 48.2132 41.9829 47.3104 42.5543 46.4124 cv
45.6968 42.7488 49.2095 39.3831 52.9175 36.348 cv
56.022 33.807 59.3111 31.537 62.7652 29.5003 cv
66.0406 27.5692 69.734 26.0931 72.5396 23.4984 cv
72.9566 23.1121 73.1392 22.6654 73.1548 22.2244 cv
77.9986 20.4373 83.1578 19.5453 88.4244 19.5487 cv
96.4888 19.5545 102.723 23.5867 110.205 25.6238 cv
111.19 25.8924 112.109 24.7659 111.554 23.868 cv
109.147 19.9725 105.053 20.0975 101.386 18.1112 cv
97.3472 15.9237 93.9478 14.8113 89.2583 14.7747 cv
85.9224 14.7489 82.6587 15.1697 79.4898 15.9471 cv
78.9312 15.2235 78.0191 14.7332 77.0122 14.9251 cv
71.523 15.9696 66.1919 18.4481 61.2554 21.6917 cv
62.1509 20.3431 60.857 17.9608 59.0142 18.6004 cv
57.4185 19.1551 55.8648 19.7918 54.3472 20.492 cv
53.9966 20.3289 53.5933 20.39 53.3091 20.6561 cv
53.0484 20.9012 li
52.9429 20.9994 52.8863 21.1092 52.8492 21.221 cv
52.44 21.4256 52.025 21.6209 51.6226 21.8358 cv
51.3111 21.8158 50.9878 21.8699 50.6744 22.0184 cv
50.648 21.9725 li
49.7837 22.5711 48.9283 23.1854 48.0806 23.8118 cv
47.9888 23.8519 47.897 23.8944 47.8033 23.9525 cv
46.8336 24.5545 45.9107 25.2098 45.0601 25.9383 cv
43.5669 27.0155 42.1216 28.158 40.7271 29.3641 cv
38.4381 31.0325 36.1588 32.7152 33.9097 34.4364 cv
33.5387 34.5052 33.1822 34.6571 32.8677 34.9085 cv
32.4703 34.7093 31.9976 34.6395 31.5367 34.7064 cv
36.9546 30.6844 41.5806 25.9168 47.6226 22.5955 cv
54.4117 18.8641 62.3453 18.2298 69.0269 14.0516 cv
72.3365 13.4168 75.7291 12.8358 78.9595 12.7406 cv
80.3569 12.6994 81.7464 12.7709 83.1325 12.8424 cv
85.4441 12.9618 87.7464 13.0811 90.0601 12.6776 cv
91.0376 12.5071 90.9087 11.0726 90.0601 10.8245 cv
89.776 10.7415 89.4927 10.6737 89.2095 10.6019 cv
89.2681 10.2513 89.0806 9.86846 88.6197 9.88703 cv
87.7506 9.92269 86.8834 9.96319 86.0171 10.0071 cv
81.6353 9.49545 77.3706 10.1619 73.1187 11.1937 cv
67.9654 11.9534 62.8853 13.1316 57.8961 15.0223 cv
55.2652 16.0188 52.6539 17.0994 50.0738 18.2474 cv
48.2281 18.8875 46.4244 19.6277 44.6519 20.576 cv
41.0406 22.5076 36.4537 25.0027 33.1578 28.2581 cv
32.5914 27.4959 31.5113 27.1639 30.6988 28.0892 cv
27.3316 31.9227 24.0943 36.0364 21.6724 40.5433 cv
20.8463 42.0799 20.3902 43.4549 20.0963 45.1639 cv
19.6148 47.9622 18.9712 50.8631 18.6509 53.6824 cv
18.6187 53.9652 18.6939 54.2083 18.8326 54.4075 cv
17.2857 60.1639 16.4458 66.2943 17.982 71.3421 cv
18.0552 71.5819 18.1959 71.7615 18.3619 71.9041 cv
18.3355 75.307 18.4205 78.7034 18.6949 82.1278 cv
18.7261 82.5203 18.7525 82.927 18.7799 83.3319 cv
18.5826 83.5306 18.4527 83.8104 18.4566 84.181 cv
18.5005 89.3719 18.5631 94.5647 18.7242 99.7537 cv
18.8619 104.21 18.5259 109.114 19.9849 113.369 cv
20.4801 117.565 21.1783 121.728 22.1744 125.797 cv
22.1929 128.518 22.2164 131.241 22.355 133.953 cv
22.5289 137.345 23.564 139.943 24.317 143.168 cv
25.9849 150.311 25.7613 157.871 27.4283 165 cv
28.1031 167.888 32.5972 166.665 31.8804 163.773 cv
31.7711 163.33 31.6568 162.903 31.5455 162.468 cv
31.6509 162.603 31.7476 162.745 31.8629 162.873 cv
32.0748 164.437 33.6382 165.857 35.7408 164.959 cv
35.8619 164.908 li
37.6382 165.031 39.0875 164.114 39.7398 162.245 cv
40.2779 160.701 38.8706 159.041 37.3316 159.022 cv
37.7437 158.544 37.9576 157.88 37.7671 157.07 cv
37.0699 154.102 36.4439 151.145 35.8609 148.189 cv
36.4556 147.56 36.7984 146.629 36.649 145.782 cv
34.7925 135.294 33.0425 124.785 31.2769 114.28 cv
31.1656 113.617 30.8033 113.156 30.3248 112.878 cv
30.0875 104.662 29.5181 96.4583 29.0191 88.2493 cv
28.7828 83.4109 28.5474 78.5726 28.3238 73.7332 cv
28.3121 73.4832 28.2623 73.2596 28.1968 73.0482 cv
29.3492 63.4578 31.1861 54.2376 34.2027 45.1727 cv
34.5552 44.2313 34.9039 43.2879 35.2408 42.3416 cv
37.5123 40.3797 39.4283 37.3787 41.3638 35.4149 cv
42.5933 34.1678 43.8804 32.9813 45.1558 31.7831 cv
49.7271 28.367 54.5728 25.3436 59.7486 22.7234 cv
58.2935 23.7411 56.8745 24.8177 55.5015 25.9432 cv
49.2242 26.804 44.6509 34.4339 41.4048 39.3236 cv
41.2076 39.6209 41.0249 39.929 40.8326 40.2298 cv
40.2379 40.0228 39.5621 40.0189 39.0142 40.2904 cv
33.8365 42.8563 33.5084 52.2694 32.6675 57.2664 cv
32.2964 58.3036 31.9371 59.3421 31.5972 60.3821 cv
31.3785 61.0531 31.5367 61.5984 31.8795 61.9813 cv
31.4527 64.5892 31.0435 67.2 30.6715 69.8162 cv
30.274 72.6121 29.5122 75.5311 30.5396 78.2483 cv
30.7124 78.7064 31.0299 79.0296 31.397 79.2391 cv
30.8726 82.1683 30.8228 85.3983 30.6783 87.949 cv
30.357 93.6092 30.6392 99.221 31.3931 104.835 cv
31.8512 108.243 32.4644 111.631 33.1109 115.013 cv
32.9947 115.307 32.941 115.64 32.981 116.017 cv
33.9244 124.805 33.1099 133.309 37.6978 140.929 cv
37.4156 141.315 37.3091 141.818 37.5279 142.399 cv
38.4508 149.193 40.1714 156.109 42.8492 162.433 cv
42.856 162.463 li
43.1636 163.831 44.8687 163.556 45.273 162.496 cv
45.3628 162.587 45.4663 162.674 45.5845 162.754 cv
46.1773 163.154 46.7701 163.554 47.3619 163.955 cv
47.8638 164.295 48.3951 164.284 48.8433 164.07 cv
50.6516 164.382 52.5182 164.144 54.4055 163.906 cv
56.6438 163.623 58.9113 163.341 61.1451 163.976 cv
67.0611 165.66 72.1314 169.982 77.8043 172.321 cv
90.1695 177.419 104.579 177.723 117.733 178.856 cv
120.314 179.096 120.952 174.653 118.351 174.286 cv
f
162.262 62.7835 mo
162.516 62.3289 162.628 61.7508 162.504 61.0384 cv
160.484 49.4617 155.082 37.951 147.189 29.2508 cv
146.841 28.868 146.323 28.8514 145.892 29.0384 cv
141.382 23.9569 136.085 19.5535 130.563 16.9002 cv
129.125 16.2093 127.979 17.8221 128.922 19.0267 cv
129.514 19.7825 129.749 20.014 130.234 20.2454 cv
134.016 23.7044 138.033 26.8568 141.54 30.6405 cv
143.332 32.575 144.932 34.6082 146.444 36.6981 cv
148.379 40.1785 150.289 43.6458 151.866 47.2283 cv
152.551 50.2537 153.044 53.4149 153.746 56.4969 cv
153.577 58.2767 153.48 60.0687 153.423 61.8665 cv
153.373 62.0091 153.334 62.1614 153.32 62.3333 cv
152.735 69.9266 152.649 77.5687 152.415 85.2059 cv
151.726 90.2894 150.929 95.4852 151.439 100.265 cv
151.468 100.262 li
151.485 100.733 151.764 101.139 152.137 101.39 cv
151.756 104.498 151.306 107.591 150.794 110.672 cv
150.716 111.038 150.639 111.397 150.559 111.741 cv
148.901 118.873 147.7 126.095 146.15 133.247 cv
146.055 133.685 146.094 134.076 146.215 134.415 cv
146.077 134.746 145.938 135.077 145.816 135.41 cv
145.669 135.654 145.567 135.94 145.521 136.265 cv
143.999 140.924 143.917 145.725 144.018 150.559 cv
143.818 152.468 143.619 154.376 143.419 156.284 cv
143.41 156.376 143.417 156.46 143.419 156.546 cv
142.941 159.374 142.719 162.217 142.78 165.127 cv
142.475 166.733 142.099 168.303 141.61 169.799 cv
141.501 169.839 141.393 169.885 141.289 169.939 cv
140.14 170.533 139.654 171.453 138.704 172.196 cv
138.349 172.472 135.556 174.385 135.322 174.384 cv
133.769 174.379 132.538 175.681 132.501 177.205 cv
132.452 179.199 li
132.402 181.271 134.906 182.794 136.69 181.631 cv
137.331 181.009 138.097 180.725 138.993 180.781 cv
139.876 182.264 142.078 182.604 143.313 181.471 cv
143.983 181.801 144.764 181.868 145.51 181.596 cv
146.718 183.434 149.96 183.54 150.622 180.91 cv
152.165 174.786 152.792 168.668 152.417 162.356 cv
152.397 162.029 152.32 161.742 152.217 161.476 cv
153.257 155.59 153.99 149.663 154.717 143.733 cv
155.949 139.654 156.996 135.525 157.748 131.373 cv
158.385 127.852 158.774 124.303 159.089 120.744 cv
160.019 115.845 160.559 110.862 160.569 105.891 cv
160.719 104.589 160.858 103.286 160.982 101.981 cv
161.051 101.257 160.783 100.675 160.341 100.252 cv
160.286 99.5819 160.218 98.9129 160.14 98.2449 cv
161.333 92.3846 161.857 86.3006 162.254 80.4373 cv
162.615 75.1097 163.397 68.4486 162.262 62.7835 cv
cp
.196078 .239216 .247059 rgb
f
163.043 90.1829 mo
163.008 89.4954 162.513 89.0843 161.964 89.0062 cv
162.721 83.1922 163.152 77.3529 162.941 71.4842 cv
162.746 66.0286 162.552 59.7508 160.273 54.7288 cv
160.064 54.2684 159.698 53.9886 159.279 53.8387 cv
158.627 50.3504 157.976 46.7996 156.382 43.6322 cv
155.668 42.2098 154.983 41.825 154.005 40.7244 cv
152.135 38.6199 151.028 36.6619 149.883 34.1605 cv
149.73 33.8265 149.196 33.9998 149.206 34.3436 cv
149.297 37.4349 151.604 40.2664 152.711 43.078 cv
154.57 47.8016 155.502 52.3006 155.996 57.3553 cv
156.042 57.825 156.202 58.2064 156.428 58.5062 cv
156.711 62.8973 157.772 67.348 158.145 71.7352 cv
158.136 72.0115 158.16 72.2816 158.214 72.5496 cv
158.221 72.6556 158.222 72.7615 158.229 72.868 cv
157.583 81.3719 157.648 89.9813 157.187 98.494 cv
157.155 99.0823 157.44 99.5355 157.855 99.8265 cv
157.651 102.107 157.563 104.383 157.361 106.461 cv
157.346 106.614 157.332 106.768 157.317 106.921 cv
155.592 110.644 155.494 115.61 154.827 119.467 cv
154.226 122.94 153.599 126.409 152.977 129.878 cv
151.984 133.585 151.723 137.723 151.239 141.193 cv
150.828 144.139 150.442 147.114 150.136 150.096 cv
149.515 153.153 149.069 156.255 148.516 159.198 cv
148.132 161.244 147.725 163.289 147.315 165.334 cv
147 165.968 146.703 166.618 146.371 167.272 cv
145.366 169.256 144.122 171.102 142.858 172.928 cv
141.832 174.41 140.185 176.217 139.786 178.035 cv
138.764 177.054 137.246 176.827 135.848 177.244 cv
134.038 177.784 133.343 180.678 135.281 181.586 cv
137.225 182.498 138.856 183.811 141.089 183.953 cv
141.737 183.994 142.47 183.891 143.163 183.654 cv
144.543 183.868 145.866 183.884 146.849 183.387 cv
147.711 182.95 148.182 182.236 148.322 181.456 cv
149.502 178.803 150.736 175.738 151.245 172.689 cv
152.724 168.626 153.582 164.249 153.541 160.222 cv
154.942 153.885 156.936 146.991 156.279 140.552 cv
156.241 140.181 156.066 139.86 155.825 139.606 cv
156.621 135.865 157.895 131.822 157.955 127.94 cv
158.014 127.634 158.075 127.328 158.134 127.022 cv
160.395 121.917 160.935 115.839 161.675 110.374 cv
162.591 103.606 163.379 97.0047 163.043 90.1829 cv
cp
.137255 .172549 .176471 rgb
f
141.586 178.528 mo
141.656 178.459 li
141.586 178.528 li
cp
f
162.858 57.3426 mo
162.256 51.4154 159.227 46.3367 157.409 40.7664 cv
157.156 39.9901 156.623 39.5418 156.016 39.3514 cv
155.255 37.7376 154.471 36.1375 153.514 34.6766 cv
151.578 31.7205 148.745 29.5164 146.911 26.4779 cv
146.086 25.1097 144.524 25.3084 143.69 26.1912 cv
143.162 25.8558 142.615 25.5521 142.026 25.3323 cv
141.857 25.2698 141.769 25.5213 141.908 25.6112 cv
142.406 25.9324 142.911 26.2371 143.412 26.5511 cv
143.084 27.0965 143.004 27.7987 143.39 28.5364 cv
145.102 31.8123 147.811 34.3822 149.642 37.5789 cv
151.326 40.5194 151.958 44.0203 154.532 46.3787 cv
154.625 46.4495 li
156.024 50.6033 157.46 54.7308 157.676 59.1702 cv
157.913 63.9984 156.353 69.8094 158.808 74.1834 cv
159.321 75.097 160.581 74.9979 161.116 74.1834 cv
163.914 69.9232 163.353 62.2244 162.858 57.3426 cv
cp
f
138.467 21.5277 mo
138.338 21.5277 138.22 21.5428 138.109 21.5682 cv
135.928 18.7464 130.345 13.7869 126.805 16.2449 cv
125.858 16.9027 126.099 18.2425 127.117 18.5491 cv
127.11 18.575 li
130.85 19.2205 133.581 21.8123 137.045 23.2171 cv
137.125 23.8885 137.594 24.5042 138.467 24.5042 cv
140.382 24.5042 140.385 21.5277 138.467 21.5277 cv
cp
f
25.313 157.087 mo
24.7808 153.578 24.7613 149.93 23.2613 146.672 cv
22.8941 145.873 21.6461 146.131 21.441 146.91 cv
20.5992 150.105 21.2545 153.319 21.7252 156.539 cv
22.2242 159.96 22.3863 163.976 24.2593 166.943 cv
24.7349 167.698 26.2271 167.72 26.3795 166.666 cv
26.8453 163.457 25.7955 160.272 25.313 157.087 cv
cp
.529412 .576471 .588235 rgb
f
23.6812 144.522 mo
22.9 137.624 22.3453 130.7 21.5445 123.809 cv
20.8296 117.655 20.7877 110.876 19.2134 104.889 cv
19.0982 104.453 18.3316 104.388 18.2642 104.889 cv
17.4507 110.933 18.3472 117.724 18.6939 123.809 cv
19.0865 130.714 19.9908 137.655 20.8218 144.522 cv
21.0386 146.321 23.8882 146.356 23.6812 144.522 cv
cp
f
22.8433 37.8797 mo
23.2564 36.9388 22.4127 36.0286 21.4478 36.4847 cv
13.6929 40.1527 12.8785 53.5828 13.1197 60.8826 cv
13.5142 72.8406 14.5552 84.7498 15.4752 96.6766 cv
15.5699 97.8983 17.4752 97.9178 17.397 96.6766 cv
16.7662 86.6204 16.0562 76.4788 15.8511 66.4085 cv
15.7457 61.2274 15.8043 55.5311 16.8941 50.4661 cv
17.9634 45.5003 20.899 42.3074 22.8433 37.8797 cv
cp
f
137.554 75.0154 mo
137.531 74.6385 137.376 74.3519 137.156 74.1507 cv
137.153 73.0931 137.145 72.0706 137.153 71.1136 cv
137.186 66.7064 136.687 62.3499 135.915 58.0321 cv
135.975 57.8504 li
136.242 48.3856 133.27 40.4022 127.883 32.7908 cv
125.397 29.2781 122.355 25.8558 119.174 22.9617 cv
118.259 22.1292 117.293 21.3675 116.304 20.6356 cv
117.479 20.1463 118.204 18.4969 117.04 17.4471 cv
110.749 11.7747 101.697 8.57844 93.691 6.16243 cv
84.0865 3.26448 75.1988 4.4427 65.4566 5.76203 cv
56.7086 6.9466 49.9664 9.09651 42.5474 14.0462 cv
35.3755 18.8314 28.983 24.1912 23.6041 30.9705 cv
22.9351 31.8133 24.0748 33.0228 24.813 32.18 cv
29.9371 26.3387 36.1763 21.8133 42.9156 18.0096 cv
50.5289 13.7122 57.5757 11.201 66.2427 10.1136 cv
74.7398 9.04768 83.1431 8.37678 91.4849 10.7635 cv
98.1255 12.6629 105.044 15.1785 111.225 18.514 cv
112.844 19.7532 114.478 20.9779 116.028 22.3358 cv
119.358 25.2528 122.191 28.6746 125.034 32.0516 cv
128.473 36.1375 130.857 39.5111 132.572 44.6937 cv
133.314 46.9364 133.792 49.1834 134.184 51.449 cv
133.682 51.3109 133.017 51.7196 133.138 52.4075 cv
134.284 58.9027 134.573 65.4788 134.387 72.0657 cv
134.236 77.4598 132.175 83.0721 132.919 88.3753 cv
133.006 88.9993 133.674 89.1683 134.188 88.9793 cv
133.69 93.4134 133.071 97.8377 132.593 102.294 cv
131.636 111.228 130.847 120.138 129.457 129.025 cv
128.182 137.172 127.21 145.238 124.718 153.127 cv
122.358 160.601 119.902 167.407 119.628 175.332 cv
119.563 177.202 122.601 177.205 122.534 175.332 cv
122.214 166.331 125.869 158.799 128.148 150.341 cv
130.295 142.371 131.752 134.13 132.905 125.952 cv
135.279 109.124 138.607 92.0833 137.554 75.0154 cv
cp
f
114.633 135.899 mo
114.483 135.899 114.483 136.133 114.633 136.133 cv
114.785 136.133 114.785 135.899 114.633 135.899 cv
cp
f
124.704 90.678 mo
124.569 91.9124 124.434 93.1341 124.287 94.3279 cv
123.97 96.9012 123.665 99.4754 123.358 102.05 cv
123.463 100.069 123.573 98.0926 123.707 96.1282 cv
124.081 90.6458 124.869 85.2005 124.933 79.7117 cv
124.987 83.3724 124.899 87.0262 124.704 90.678 cv
cp
116.237 162.366 mo
116.082 162.912 115.868 163.391 115.607 163.813 cv
115.211 163.23 114.13 163.21 113.794 164.08 cv
112.574 167.224 109.771 165.951 107.262 165.056 cv
110.615 162.757 112.67 158.807 114.107 155.017 cv
115.087 152.431 115.853 149.745 116.513 147.021 cv
115.988 151.22 115.652 155.403 115.753 159.518 cv
115.763 159.973 116.396 160.052 116.535 159.625 cv
116.732 159.017 116.915 158.402 117.091 157.784 cv
116.9 159.329 116.664 160.866 116.237 162.366 cv
cp
129.44 48.1683 mo
128.091 41.45 125.348 33.4227 119.15 29.7479 cv
118.701 29.4822 118.109 30.0267 118.413 30.4857 cv
121.897 35.7557 124.657 40.4686 126.083 46.1937 cv
123.66 40.116 119.684 34.366 116.237 29.2083 cv
115.286 27.7855 112.967 29.1248 113.929 30.557 cv
118.731 37.7069 124.118 45.7342 125.945 54.2713 cv
126.98 59.1102 126.17 63.8118 126.363 68.6829 cv
126.494 71.9891 126.461 75.2401 126.455 78.5179 cv
126.168 79.824 125.927 81.1556 125.718 82.4988 cv
125.604 78.4031 125.291 74.3021 124.821 70.201 cv
124.8 70.0189 124.579 69.9774 124.487 70.0779 cv
124.38 68.7152 124.26 67.3533 124.124 65.993 cv
124.143 63.5233 123.992 61.0877 123.545 58.7391 cv
123.512 58.5677 123.374 58.4866 123.223 58.4608 cv
123.204 58.3094 li
123.062 57.3104 121.556 57.7396 121.69 58.7269 cv
121.86 59.9842 121.999 61.2401 122.121 62.4945 cv
121.352 69.1038 121.991 76.1268 121.612 82.6741 cv
121.583 83.1834 122.117 83.3221 122.46 83.1175 cv
122.236 87.7552 121.867 92.3997 121.461 97.0672 cv
120.966 102.73 121.551 108.427 121.153 114.106 cv
120.762 119.675 118.743 124.99 117.843 130.472 cv
117.648 130.607 117.492 130.817 117.421 131.124 cv
116.035 137.18 114.793 143.291 113.202 149.297 cv
111.578 155.43 108.807 159.711 105.028 164.477 cv
104.906 164.463 li
104.33 164.435 104.091 165.021 104.24 165.486 cv
103.995 165.864 104.248 166.523 104.778 166.342 cv
105.111 166.726 105.524 167.053 106 167.317 cv
105.228 167.542 105.245 168.808 106.131 168.729 cv
107.282 168.626 108.612 168.56 109.96 168.41 cv
110.3 168.442 110.628 168.463 110.927 168.472 cv
112.357 168.514 113.397 168.159 114.169 167.46 cv
115.298 167.001 116.29 166.342 117.005 165.376 cv
119.331 162.238 119.35 156.385 118.779 152.645 cv
119.263 152.687 119.741 152.446 119.862 151.814 cv
121.547 143.006 124.115 134.268 125.195 125.365 cv
125.293 124.555 124.137 124.554 123.882 125.187 cv
123.371 126.459 122.92 127.756 122.496 129.063 cv
123.11 125.388 123.296 121.62 123.278 117.868 cv
124.156 117.858 125.089 117.311 125.218 116.2 cv
126.031 109.227 126.863 102.255 127.655 95.2791 cv
128.286 89.7166 129.311 83.6737 129.301 77.9324 cv
129.465 77.7547 129.585 77.5223 129.59 77.2093 cv
129.792 67.4613 131.386 57.8573 129.44 48.1683 cv
cp
f
92.1334 162.012 mo
91.4849 162.012 91.4839 163.02 92.1334 163.02 cv
92.7818 163.02 92.7828 162.012 92.1334 162.012 cv
cp
f
87.3267 64.8363 mo
87.1998 63.5794 85.4107 63.1761 85.025 64.5247 cv
83.5298 69.7635 83.4888 75.4696 83.189 80.8797 cv
82.857 86.845 82.6255 92.8758 82.8697 98.848 cv
82.9673 101.226 86.4937 101.237 86.5728 98.848 cv
86.7623 93.1766 86.732 87.4979 86.9146 81.8245 cv
87.0953 76.2093 87.8941 70.4295 87.3267 64.8363 cv
cp
f
73.6461 62.8431 mo
73.649 60.7073 70.5933 60.7967 70.3882 62.8431 cv
69.2798 73.8763 68.7222 85.2991 69.9781 96.347 cv
70.2447 98.6927 73.6509 98.8182 73.7281 96.347 cv
74.0767 85.2122 73.6285 73.991 73.6461 62.8431 cv
cp
f
50.4732 63.5257 mo
50.5845 61.9232 47.9322 61.536 47.6421 63.1424 cv
45.7857 73.4388 48.2955 83.8309 46.5191 94.1116 cv
45.9507 97.4031 50.6705 96.8514 50.3189 94.5194 cv
52.1187 84.2059 49.7584 73.8944 50.4732 63.5257 cv
cp
f
62.6519 71.9818 mo
62.4898 68.7235 61.5953 65.7874 58.5777 64.1317 cv
57.4146 63.4935 56.0621 65.0789 57.1148 66.0272 cv
58.7906 67.5384 58.7086 69.8983 58.6187 71.9818 cv
58.5767 72.9637 58.6109 73.7615 58.0562 74.619 cv
57.5718 75.3675 57.1461 75.6766 56.9234 76.5828 cv
56.6519 77.6839 57.4283 78.4749 58.4605 78.5999 cv
62.0406 79.0345 62.7818 74.5916 62.6519 71.9818 cv
cp
f
104.191 74.2474 mo
103.658 70.428 100.215 66.0194 95.983 66.8748 cv
94.7613 67.1219 94.983 68.7791 95.983 69.1351 cv
96.7925 69.4232 97.5357 70.929 97.981 71.6058 cv
98.772 72.8074 99.3502 73.8973 99.0875 75.3895 cv
98.7457 77.3309 96.9761 78.5731 96.23 80.3704 cv
95.8658 81.2488 96.6314 82.389 97.4908 82.5902 cv
102.093 83.6663 104.725 78.075 104.191 74.2474 cv
cp
f
54.7818 84.9344 mo
54.7847 84.9549 li
54.5171 85.0291 54.2818 85.2147 54.2154 85.5008 cv
53.9693 86.5511 54.3238 87.0277 54.8502 87.9544 cv
55.5914 89.2581 56.2291 90.5887 56.6968 92.0164 cv
57.5103 94.4964 57.188 97.8382 59.4361 99.4583 cv
60.1148 99.9471 61.022 99.5301 61.44 98.9329 cv
63.4761 96.0208 59.3629 83.6155 54.7818 84.9344 cv
cp
f
37.6246 154.598 mo
36.9263 151.388 36.481 148.129 35.9703 144.878 cv
36.0083 144.762 li
36.1402 143.851 36.1803 142.923 36.1793 141.987 cv
36.4332 143.86 36.7173 145.728 37.1001 147.573 cv
37.3902 148.972 37.7876 150.333 38.2008 151.686 cv
38.2418 152.155 38.3189 152.616 38.3843 153.08 cv
37.9927 153.462 37.7183 153.975 37.6246 154.598 cv
110.076 174.074 mo
107.355 175.7 105.202 173.391 102.55 172.977 cv
99.982 172.576 97.5083 172.848 94.8755 172.262 cv
92.1216 171.65 89.4176 171.785 86.6334 171.496 cv
83.3638 171.157 80.8023 169.099 77.6842 168.221 cv
71.9293 166.598 66.8521 163.102 61.0747 161.305 cv
58.6402 160.548 56.1333 159.727 53.5933 159.412 cv
51.7007 159.178 49.8248 159.367 47.94 159.496 cv
46.7476 157.153 45.5972 154.889 44.7691 152.418 cv
44.6451 151.99 44.5093 151.56 44.3472 151.123 cv
44.0249 149.939 43.065 149.456 42.0992 149.48 cv
41.8228 147.427 41.2515 145.389 40.8404 143.378 cv
40.1568 140.035 39.8013 136.637 38.5416 133.447 cv
38.4351 133.329 li
38.233 132.199 38.022 131.067 37.8101 129.935 cv
37.2701 125.281 36.8101 120.591 36.0396 115.985 cv
36.2896 115.537 36.4176 115.003 36.3335 114.396 cv
35.0454 105.002 34.6831 95.3299 34.0484 85.8695 cv
33.7818 81.8948 34.0152 78.1522 34.355 74.1985 cv
34.5347 72.0994 34.4967 70.1429 33.48 68.5281 cv
34.106 64.1912 35.9381 60.1121 36.4888 55.7332 cv
36.8775 52.6414 36.8824 49.5003 37.2672 46.4295 cv
44.3472 40.1038 52.0259 34.699 59.6715 29.0994 cv
60.5747 29.117 61.2105 28.4461 61.5142 27.6693 cv
63.4546 26.514 65.4127 25.408 67.4009 24.3997 cv
70.0357 23.0633 72.9204 22.6048 75.5201 21.245 cv
79.1695 19.3372 82.438 18.7855 86.2076 17.4144 cv
86.9771 17.1346 87.2124 15.7615 86.2076 15.6063 cv
83.2173 15.1453 80.4303 15.6565 77.5406 16.5277 cv
74.3316 17.494 70.8882 18.2825 67.7603 19.4886 cv
64.94 20.576 62.2056 22.117 59.5465 23.8651 cv
59.0162 23.7972 58.4761 23.8827 58.0298 24.1644 cv
53.4361 27.0677 49.0904 30.3914 44.9009 33.909 cv
45.4215 33.1356 45.8883 32.3338 46.2427 31.4725 cv
46.6959 30.3704 45.438 29.6463 44.5416 29.7713 cv
39.147 30.5228 35.0445 37.0325 32.6421 41.4417 cv
30.106 46.0989 28.6958 50.9915 28.2418 56.1756 cv
28.0777 56.3138 27.9244 56.4759 27.8013 56.6907 cv
22.8687 65.2957 27.4664 78.2078 27.4039 87.6087 cv
26.2974 88.1038 25.4791 89.2918 25.9009 90.6116 cv
26.4869 92.451 27.024 94.3064 27.5289 96.1712 cv
27.5552 97.2376 27.5387 98.2713 27.6099 99.0521 cv
27.8121 101.299 28.0347 103.538 28.2925 105.779 cv
28.8453 110.59 29.5015 115.386 30.0406 120.198 cv
30.1001 120.729 30.3453 121.136 30.6773 121.416 cv
30.7701 122.378 30.8687 123.34 30.9527 124.303 cv
31.2164 127.349 31.0786 130.504 32.3033 133.311 cv
32.4214 134.648 32.5386 136.004 32.6929 137.35 cv
32.3697 137.578 32.1324 137.931 32.1236 138.368 cv
31.9507 146.375 33.1978 154.269 34.9625 162.042 cv
35.2847 163.463 37.1324 164.199 38.3521 163.421 cv
38.4498 163.466 38.5474 163.511 38.6451 163.555 cv
40.0328 164.555 41.6519 163.662 42.3101 162.346 cv
42.9888 162.506 43.7076 162.363 44.2994 161.996 cv
44.3482 162.033 li
47.1851 163.764 49.856 163.106 53.024 163.619 cv
56.6949 164.215 60.4898 165.573 64.0279 166.672 cv
67.2115 167.662 70.1031 169.159 73.1675 170.422 cv
75.4263 171.353 77.689 171.715 79.898 172.83 cv
81.026 173.399 81.9136 174.001 83.15 174.392 cv
86.2115 175.361 89.523 174.824 92.6422 175.418 cv
95.4009 175.943 97.6617 176.293 100.358 176.524 cv
103.822 176.82 110.225 180.846 111.883 175.464 cv
112.201 174.433 110.982 173.533 110.076 174.074 cv
.196078 .239216 .247059 rgb
f
26.6334 116.535 mo
26.0152 116.535 26.0142 117.496 26.6334 117.496 cv
27.2515 117.496 27.2525 116.535 26.6334 116.535 cv
cp
f
105.236 65.4696 mo
101.79 61.618 96.8824 62.5994 92.4283 60.9666 cv
90.2261 60.1595 89.2047 63.3577 90.9195 64.5438 cv
92.522 65.6512 94.0435 66.0145 95.9625 66.3079 cv
100.461 66.9959 103.842 68.8924 104.102 73.8675 cv
104.548 82.3875 96.4488 85.012 89.6002 83.036 cv
87.9771 82.5682 86.5025 83.8553 86.4312 85.45 cv
86.2164 90.2493 86.2701 95.0364 86.6822 99.824 cv
86.3931 101.936 90.108 102.715 90.4117 100.473 cv
90.9547 96.4671 91.2672 92.4539 91.3814 88.4217 cv
99.2838 89.3367 106.947 86.2142 108.46 77.0716 cv
109.121 73.074 107.965 68.5184 105.236 65.4696 cv
cp
.290196 .337255 .34902 rgb
f
92.1568 68.1815 mo
91.9175 66.0906 89.0172 66.0252 88.8521 68.1815 cv
88.5367 72.3079 86.5845 76.6116 87.3062 80.7274 cv
87.5132 81.9129 89.1812 82.2313 89.9498 81.4256 cv
93.1773 78.0408 92.648 72.4886 92.1568 68.1815 cv
cp
f
78.9673 62.6829 mo
78.813 60.7225 76.0826 60.7244 75.9205 62.6829 cv
74.8648 75.4315 74.5172 88.1766 73.9644 100.954 cv
72.3853 101.709 72.6597 104.593 74.8004 104.593 cv
76.0054 104.593 76.6168 103.675 76.6412 102.739 cv
77.3004 102.471 77.8502 101.89 77.9468 101.002 cv
79.3345 88.1854 79.9791 75.5321 78.9673 62.6829 cv
cp
f
66.0494 89.6556 mo
64.7974 87.5252 63.4283 85.4661 62.1304 83.3636 cv
63.7769 81.7694 65.0611 80.9529 66.0142 78.5277 cv
67.0552 75.8778 67.0836 72.9949 67.2183 70.1922 cv
67.4439 65.5194 66.0445 60.515 60.9019 59.1268 cv
59.6451 58.7879 58.6783 59.9295 58.9127 61.116 cv
59.2877 63.0208 59.6754 63.3817 60.8697 64.9158 cv
62.482 66.9876 62.2086 67.6663 62.1148 70.1922 cv
62.0328 72.4158 62.3199 74.8436 61.5289 76.9725 cv
60.9254 78.6004 59.6158 80.0379 58.774 81.5594 cv
58.5582 81.9505 58.5084 82.3465 58.566 82.7156 cv
58.2203 83.2396 58.1031 83.9329 58.439 84.6678 cv
60.1158 88.3353 61.9332 92.1614 63.2935 95.9539 cv
64.1246 98.2703 67.3091 98.369 68.106 95.9539 cv
68.856 93.6815 67.1529 91.5345 66.0494 89.6556 cv
cp
f
52.2759 66.5018 mo
51.5298 70.7425 49.8121 75.8729 51.6041 79.9754 cv
51.9166 80.6907 52.8355 80.4534 53.2027 79.9754 cv
55.7271 76.6937 55.4791 71.4905 56.0269 67.536 cv
56.3629 65.1165 52.7154 64.0028 52.2759 66.5018 cv
cp
f
54.4615 90.7142 mo
54.1988 88.4041 54.107 85.4774 52.1002 84.0477 cv
51.8209 83.8489 51.3804 84.0335 51.2623 84.3416 cv
49.9195 86.3406 50.6929 89.557 50.7964 91.8416 cv
50.9146 94.4671 50.2955 97.4935 51.6587 99.827 cv
52.1646 100.693 53.317 100.593 53.8443 99.827 cv
55.5357 97.3665 54.7808 93.533 54.4615 90.7142 cv
cp
f
87.5386 141.93 mo
86.0845 140.309 84.6236 138.693 83.1724 137.072 cv
86.2672 133.864 89.3882 130.682 92.5035 127.495 cv
93.9908 129.023 95.4937 130.53 97.0357 131.986 cv
93.8257 135.268 90.6812 138.622 87.5386 141.93 cv
cp
78.1685 131.353 mo
77.1929 130.198 76.2339 129.015 75.2808 127.825 cv
78.1529 124.645 81.0416 121.479 83.9429 118.325 cv
86.3697 120.983 88.8023 123.65 91.2916 126.251 cv
88.1812 129.409 85.1363 132.641 82.1441 135.917 cv
80.8013 134.407 79.4683 132.89 78.1685 131.353 cv
cp
64.0201 137.621 mo
60.6509 133.368 57.1627 129.194 53.7007 125.008 cv
56.4537 121.628 59.3521 118.34 62.1373 114.976 cv
63.1461 117.106 64.1548 119.236 65.1636 121.365 cv
65.3873 121.839 66.1148 121.424 65.8716 120.951 cv
64.7701 118.808 63.6675 116.665 62.566 114.522 cv
62.6793 114.698 62.7935 114.87 62.9087 115.032 cv
64.3101 116.996 65.772 118.92 67.2584 120.824 cv
66.5367 121.596 65.8111 122.365 65.0884 123.137 cv
64.8101 123.434 65.2613 123.885 65.5357 123.584 cv
66.232 122.822 66.9254 122.057 67.6216 121.295 cv
69.2554 123.377 70.9205 125.434 72.5836 127.488 cv
69.6978 130.839 66.8443 134.218 64.0201 137.621 cv
cp
112.795 117.656 mo
107.702 121.556 102.967 126.001 98.3843 130.624 cv
96.9966 129.008 95.5562 127.429 94.0943 125.865 cv
97.0025 122.882 99.8941 119.881 102.755 116.847 cv
104.286 118.429 105.89 119.91 107.632 121.086 cv
108.158 121.441 108.922 120.718 108.531 120.188 cv
107.24 118.447 105.6 116.995 104.053 115.479 cv
104.238 115.285 li
104.643 114.851 104.034 114.256 103.591 114.638 cv
103.39 114.817 li
101.69 113.108 100.015 111.375 98.3668 109.616 cv
97.6627 108.865 96.5504 109.988 97.2398 110.743 cv
98.7838 112.435 100.346 114.287 101.993 116.052 cv
98.8931 118.803 95.8716 121.663 92.9195 124.608 cv
90.4273 121.986 87.8668 119.417 85.315 116.856 cv
90.5855 111.222 96.2662 105.806 101.573 100.13 cv
102.807 101.155 104.043 102.18 105.277 103.206 cv
105.771 103.616 106.433 102.98 105.99 102.493 cv
104.898 101.296 103.806 100.098 102.714 98.9007 cv
104.904 96.5145 107.025 94.0804 109.003 91.5521 cv
109.603 90.786 108.71 89.8968 107.943 90.491 cv
98.9468 97.4666 91.2408 106.65 83.5748 115.102 cv
82.0709 113.587 80.5738 112.071 79.108 110.543 cv
78.3326 109.736 77.1138 110.96 77.8814 111.77 cv
79.3609 113.331 80.8267 114.923 82.2916 116.522 cv
79.4341 119.653 76.6246 122.826 73.8472 126.028 cv
72.2213 123.967 70.6002 121.888 68.9507 119.837 cv
71.7896 116.729 74.6324 113.625 77.4556 110.503 cv
77.6168 110.325 77.358 110.062 77.191 110.238 cv
74.314 113.281 71.4566 116.342 68.5963 119.399 cv
66.9293 117.336 65.2242 115.315 63.4468 113.378 cv
65.1841 111.228 66.8609 109.039 68.4019 106.761 cv
68.7652 106.223 67.9947 105.735 67.5552 106.107 cv
65.5377 107.814 63.65 109.702 61.8453 111.688 cv
61.3277 111.156 60.815 110.618 60.2818 110.104 cv
60.1021 109.93 59.8502 110.148 59.9498 110.359 cv
60.3052 111.111 60.6617 111.861 61.0171 112.613 cv
57.9732 116.066 55.1666 119.793 52.4293 123.465 cv
50.8824 121.587 49.3423 119.705 47.8296 117.809 cv
47.1597 116.971 45.9185 118.176 46.6363 119.002 cv
48.272 120.886 49.8882 122.793 51.4996 124.707 cv
50.9517 125.442 50.4039 126.177 49.858 126.9 cv
49.1373 127.855 50.7418 128.764 51.4566 127.835 cv
51.8804 127.284 52.3189 126.742 52.7525 126.198 cv
56.2252 130.34 59.6851 134.504 63.2427 138.564 cv
61.8511 140.247 60.4586 141.929 59.0777 143.62 cv
58.5816 144.227 59.0699 145.023 59.647 145.084 cv
59.6812 145.139 li
64.0113 149.663 68.7232 155.711 74.6353 158.161 cv
75.3287 158.449 75.7545 157.451 75.3199 156.986 cv
73.1168 154.63 70.2632 152.876 67.7642 150.848 cv
65.1998 148.767 63.0806 146.514 61.0406 143.928 cv
62.1841 142.603 63.3326 141.283 64.4839 139.965 cv
65.7691 141.412 67.064 142.849 68.3843 144.258 cv
68.607 144.495 69.0455 144.175 68.8443 143.903 cv
67.6578 142.297 66.438 140.712 65.2056 139.135 cv
68.1119 135.816 71.0494 132.525 74.0015 129.246 cv
76.2095 131.985 78.4312 134.76 80.6998 137.514 cv
77.189 141.389 73.7349 145.302 70.315 149.187 cv
69.8287 149.74 70.6343 150.554 71.1275 149.999 cv
74.5572 146.138 78.0865 142.378 81.6539 138.658 cv
83.0504 140.338 84.4654 142.004 85.9068 143.643 cv
84.7925 144.807 83.6773 145.965 82.5572 147.106 cv
81.5103 148.173 83.1343 149.8 84.1978 148.747 cv
85.3033 147.653 86.4234 146.563 87.5504 145.475 cv
90.0679 148.255 92.6617 150.944 95.3843 153.44 cv
96.105 154.1 96.9986 153.13 96.4283 152.396 cv
94.1509 149.466 91.7213 146.639 89.2447 143.846 cv
92.608 140.622 96.0201 137.396 99.356 134.101 cv
99.566 134.288 99.7691 134.484 99.98 134.669 cv
100.65 135.257 101.481 134.384 100.941 133.708 cv
100.766 133.488 100.58 133.276 100.402 133.057 cv
105.081 128.388 109.581 123.567 113.517 118.377 cv
113.829 117.967 113.207 117.341 112.795 117.656 cv
cp
.360784 .4 .407843 rgb
f
90.9673 153.188 mo
90.5445 153.188 90.5435 153.844 90.9673 153.844 cv
91.3892 153.844 91.3902 153.188 90.9673 153.188 cv
cp
f
102.87 143.559 mo
100.465 145.355 98.3951 147.541 96.2632 149.645 cv
95.3365 150.559 96.8013 152.018 97.688 151.07 cv
99.7359 148.881 101.876 146.751 103.608 144.297 cv
103.91 143.868 103.299 143.238 102.87 143.559 cv
cp
f
93.1334 159.8 mo
93.1334 159.899 li
93.1334 159.8 li
cp
f
115.128 94.7567 mo
114.665 95.0316 114.22 95.3475 113.791 95.6888 cv
112.544 94.2659 111.299 92.8421 110.123 91.3607 cv
109.579 90.6756 108.537 91.6697 109.145 92.3382 cv
110.403 93.721 111.699 95.0565 113.087 96.3001 cv
110.625 98.514 108.657 101.61 106.673 104.06 cv
106.014 104.874 107.088 106.023 107.85 105.237 cv
110.614 102.382 114.458 99.4202 116.09 95.7186 cv
116.356 95.116 115.787 94.367 115.128 94.7567 cv
cp
f
101.493 88.9901 mo
99.7701 90.1951 98.3257 91.7518 96.9048 93.2869 cv
96.0035 94.2596 97.4586 95.7215 98.3629 94.7454 cv
99.7867 93.2069 101.256 91.6375 102.327 89.8236 cv
102.621 89.324 102.007 88.6292 101.493 88.9901 cv
cp
f
117.3 73.4066 mo
116.516 73.4066 116.515 74.6253 117.3 74.6253 cv
118.085 74.6253 118.086 73.4066 117.3 73.4066 cv
cp
f
120.8 67.4661 mo
120.8 67.5662 li
120.8 67.4661 li
cp
f
120.366 43.6082 mo
116.752 46.2122 113.583 49.5877 110.658 53.158 cv
108.583 51.012 106.503 48.8709 104.488 46.6644 cv
106.711 44.7156 108.87 42.7137 110.853 40.5697 cv
111.431 39.9442 110.688 38.8758 109.916 39.3553 cv
107.417 40.9051 105.047 42.7454 102.765 44.7337 cv
102.376 44.2864 101.982 43.8421 101.6 43.3865 cv
100.878 42.5267 99.6754 43.7581 100.374 44.6131 cv
100.725 45.0443 101.083 45.4803 101.438 45.9149 cv
97.4722 49.5184 93.7613 53.5106 90.1089 57.158 cv
89.4351 57.8314 90.4644 58.8573 91.1529 58.202 cv
94.9214 54.6131 99.0748 51.3211 103.071 47.8973 cv
105.046 50.2855 107.089 52.6663 109.241 54.9266 cv
107.499 57.139 105.833 59.3875 104.203 61.5438 cv
103.2 62.869 105.436 64.1468 106.428 62.845 cv
107.961 60.8348 109.613 58.909 111.294 57.0042 cv
112.878 58.5467 114.517 60.014 116.246 61.3406 cv
116.959 61.888 117.674 60.7655 117.154 60.1629 cv
115.734 58.5169 114.256 56.9241 112.758 55.3494 cv
115.823 51.9178 118.914 48.5081 121.537 44.7786 cv
122.018 44.0931 121.052 43.1136 120.366 43.6082 cv
cp
f
93.9654 33.6092 mo
89.8951 36.0052 86.0416 38.8934 82.2984 41.9344 cv
78.9214 38.7347 75.566 35.514 72.4195 32.0614 cv
72.3248 31.991 li
74.5396 30.3382 76.7418 28.6693 78.8941 26.9383 cv
79.2388 26.661 78.7945 26.1043 78.4263 26.3309 cv
71.3072 30.7103 64.69 36.161 58.1959 41.453 cv
57.2398 40.4656 56.3043 39.4598 55.398 38.4207 cv
54.9566 37.9149 54.0689 38.5858 54.4586 39.1448 cv
55.2203 40.2357 56.022 41.3841 56.8707 42.5321 cv
56.8394 42.5574 li
56.4283 42.8914 56.9546 43.4383 57.3775 43.2093 cv
58.232 44.3382 59.1343 45.4539 60.0933 46.5018 cv
55.7711 49.8309 51.7076 53.6131 47.8961 57.1058 cv
47.4244 57.5379 48.1158 58.2083 48.5923 57.8016 cv
52.7154 54.286 57.1802 51.1864 61.5748 48.0155 cv
62.8502 49.2259 64.2203 50.285 65.7017 51.0789 cv
66.5679 51.5428 67.2564 50.4993 66.6959 49.7908 cv
65.7701 48.6195 64.6705 47.5858 63.5484 46.575 cv
66.0611 44.7298 68.5328 42.8402 70.8765 40.8021 cv
71.3033 40.4305 70.7603 39.8533 70.3082 40.0657 cv
67.4205 41.4256 64.6343 43.1712 61.9429 45.1219 cv
61.606 44.8162 61.2671 44.512 60.9439 44.1981 cv
60.2291 43.5052 59.5318 42.7991 58.8355 42.0921 cv
62.9341 38.8836 67.1529 35.8284 71.3326 32.7274 cv
71.357 32.8226 71.4 32.9168 71.4742 33.0057 cv
73.8746 35.8656 76.3521 38.7176 78.9556 41.4466 cv
74.8931 43.2718 71.0611 45.7528 67.1988 47.9388 cv
66.2535 48.4739 67.1002 49.9256 68.0513 49.3958 cv
72.0191 47.1854 76.2818 45.1634 80.0064 42.5404 cv
80.2388 42.7777 80.4732 43.013 80.7076 43.2479 cv
77.4927 45.9129 74.3453 48.6522 71.2066 51.2567 cv
70.5963 51.7625 71.4634 52.5941 72.0679 52.118 cv
75.3316 49.5506 78.7437 47.1087 82.1382 44.64 cv
84.7584 47.1463 87.5201 49.4901 90.4976 51.536 cv
91.0797 51.9354 91.7105 51.0614 91.2369 50.5789 cv
88.8257 48.1229 86.3355 45.7567 83.8414 43.3963 cv
87.6226 40.6224 91.3453 37.7825 94.775 34.658 cv
95.3404 34.1429 94.6129 33.2279 93.9654 33.6092 cv
cp
f
106.344 35.9749 mo
102.672 32.2474 98.6451 28.8709 94.8453 25.2601 cv
95.0513 25.1112 95.2545 24.9593 95.4625 24.8118 cv
98.1236 22.9232 101.041 21.8939 103.823 20.2821 cv
104.144 20.0955 104.019 19.5408 103.628 19.5613 cv
100.698 19.7122 98.066 21.6248 95.7203 23.243 cv
95.1441 23.6409 94.5797 24.0535 94.0142 24.4661 cv
93.7047 24.1654 93.3834 23.8768 93.0777 23.5716 cv
92.3082 22.8035 91.1168 23.9945 91.8843 24.765 cv
92.1265 25.0076 92.3707 25.2513 92.6129 25.4949 cv
90.7681 26.868 88.9322 28.2518 86.98 29.4783 cv
86.3804 29.8548 86.9312 30.8065 87.5357 30.4295 cv
89.5748 29.1595 91.4879 27.7215 93.4156 26.2991 cv
96.7769 29.6571 100.272 33.0184 104.132 35.7747 cv
101.67 36.8973 99.5015 38.8421 97.3599 40.4349 cv
96.4966 41.0765 97.3433 42.5438 98.2115 41.8919 cv
100.473 40.1937 103.141 38.5604 104.963 36.348 cv
105.202 36.5106 105.435 36.6824 105.676 36.8402 cv
106.209 37.1868 106.776 36.4139 106.344 35.9749 cv
cp
f
83.3599 50.8748 mo
79.2935 52.7567 75.6197 56.0296 71.9673 58.6146 cv
71.2994 59.0872 71.9175 60.1907 72.6177 59.7279 cv
76.4048 57.223 80.8091 54.9744 84.0845 51.8133 cv
84.6011 51.3153 83.9478 50.6029 83.3599 50.8748 cv
cp
f
86.0455 58.1981 mo
84.8257 58.6322 83.7818 59.7054 82.7603 60.4896 cv
82.316 60.8314 82.7427 61.6009 83.2105 61.2586 cv
84.273 60.4813 85.6382 59.7547 86.4156 58.6805 cv
86.5806 58.452 86.3052 58.1058 86.0455 58.1981 cv
cp
f
81.8062 74.8631 mo
81.3306 74.2518 80.7037 75.0472 80.439 75.4295 cv
79.9439 76.1434 79.3218 76.6917 78.5904 77.1556 cv
78.1539 77.432 78.5338 78.0687 78.9927 77.8436 cv
79.7164 77.4876 80.3765 77.0262 81.0015 76.5179 cv
81.4341 76.1663 82.2974 75.4925 81.8062 74.8631 cv
cp
f
82.233 80.3211 mo
82.0582 79.9212 81.5377 79.5672 81.0826 79.7562 cv
79.9957 80.2069 79.4683 81.4349 79.0552 82.4739 cv
78.73 83.2908 79.9908 83.7405 80.4263 83.0521 cv
80.7906 82.4739 81.3023 81.9412 81.8345 81.5389 cv
82.2222 81.2459 82.4449 80.8011 82.233 80.3211 cv
cp
f
80.2457 89.7244 mo
79.9537 90.1829 79.7681 90.7088 79.5523 91.2069 cv
79.4166 91.5223 79.8804 91.7967 80.0181 91.4788 cv
80.2427 90.9608 80.5132 90.4446 80.6529 89.8963 cv
80.7154 89.6488 80.3814 89.512 80.2457 89.7244 cv
cp
f
67.7144 81.1644 mo
67.5533 80.744 67.063 80.4417 66.6295 80.723 cv
66.0132 81.1224 65.8453 81.825 65.5904 82.4783 cv
65.3238 83.1614 64.9742 83.8079 64.5884 84.4305 cv
64.1226 85.1805 65.275 86.1209 65.8404 85.3958 cv
66.3326 84.7635 66.7896 84.1131 67.1714 83.4066 cv
67.522 82.7567 67.9996 81.9095 67.7144 81.1644 cv
cp
f
68.8433 64.9735 mo
67.8511 65.5565 67.3892 67.1849 67.1529 68.2454 cv
66.8687 69.5208 68.7681 70.0599 69.1187 68.7879 cv
69.2447 68.3328 69.397 67.8978 69.6138 67.4779 cv
69.8472 67.0267 70.23 66.6151 70.3218 66.1102 cv
70.4722 65.2801 69.65 64.4993 68.8433 64.9735 cv
cp
f
46.9156 109.265 mo
44.5757 111.032 43.2173 113.347 41.7466 115.84 cv
41.441 116.357 42.147 116.901 42.5748 116.479 cv
44.5875 114.49 46.5162 112.63 47.6373 109.987 cv
47.813 109.573 47.3951 108.904 46.9156 109.265 cv
cp
f
55.1392 141.13 mo
53.5826 141.973 52.523 143.604 51.2545 144.808 cv
50.606 145.424 51.4957 146.649 52.2349 146.078 cv
53.7086 144.94 55.4879 143.7 56.0689 141.845 cv
56.2398 141.298 55.606 140.877 55.1392 141.13 cv
cp
f
84.6695 161.215 mo
84.188 160.161 83.314 159.413 82.483 158.634 cv
82.4625 158.296 82.2418 157.974 81.8072 157.97 cv
80.9547 157.113 80.1334 156.226 79.3482 155.306 cv
78.5279 154.344 77.1988 155.723 77.9732 156.681 cv
78.8716 157.793 79.813 158.868 80.8101 159.892 cv
81.7271 160.834 82.6441 161.796 83.941 162.162 cv
84.525 162.327 84.8922 161.703 84.6695 161.215 cv
cp
f
115.184 79.1336 mo
113.429 76.9486 111.632 74.7967 109.849 72.6346 cv
109.422 72.1165 108.641 72.8748 109.104 73.3807 cv
110.988 75.4407 112.859 77.513 114.769 79.5482 cv
115.034 79.8289 115.415 79.4207 115.184 79.1336 cv
cp
f
51.5552 52.2611 mo
49.8443 50.2464 48.0943 48.2908 46.2867 46.3621 cv
45.4615 45.4818 44.1031 46.8343 44.9615 47.6883 cv
46.8326 49.5501 48.733 51.3548 50.6929 53.1229 cv
51.2818 53.6531 52.0601 52.8563 51.5552 52.2611 cv
cp
f
43.1334 99.1253 mo
41.9879 99.1253 41.9859 100.907 43.1334 100.907 cv
44.2798 100.907 44.2818 99.1253 43.1334 99.1253 cv
cp
f
47.0689 76.4285 mo
46.3658 75.4632 45.6646 74.4974 44.9634 73.5311 cv
44.772 73.3416 li
45.0982 71.3558 45.3531 69.3543 45.6021 67.3494 cv
45.8091 65.6898 43.2105 65.7113 43.0005 67.3494 cv
42.4644 71.534 41.7193 75.6893 41.4605 79.8997 cv
40.9742 79.7542 40.4546 80.4427 40.858 80.9578 cv
41.3199 81.5491 41.8179 82.1082 42.3629 82.6243 cv
42.8824 83.1165 43.3697 83.6024 44.1177 83.6492 cv
44.3873 83.6663 44.65 83.348 44.5474 83.0858 cv
44.2877 82.4178 43.7418 82.0853 43.2252 81.6243 cv
43.0962 81.5096 42.9781 81.3851 42.8541 81.2654 cv
43.5162 79.3651 44.0005 77.428 44.3873 75.4705 cv
45.0171 75.993 45.648 76.5154 46.2769 77.0389 cv
46.6812 77.3743 47.4312 76.9271 47.0689 76.4285 cv
cp
f
95.3433 157.847 mo
94.6168 158.842 93.4605 157.483 93.0562 156.889 cv
92.5601 156.157 92.0884 155.487 91.3297 155.004 cv
90.3492 154.38 89.4078 155.984 90.4185 156.562 cv
91.7105 157.301 92.0865 159.097 93.6519 159.495 cv
94.6275 159.743 95.8502 159.062 95.8463 157.984 cv
95.8453 157.697 95.4937 157.642 95.3433 157.847 cv
cp
f
101.467 138.328 mo
99.2955 138.328 99.2916 141.703 101.467 141.703 cv
103.638 141.703 103.642 138.328 101.467 138.328 cv
cp
.529412 .576471 .588235 rgb
f
103.467 127.301 mo
102.547 127.301 102.545 128.731 103.467 128.731 cv
104.387 128.731 104.388 127.301 103.467 127.301 cv
cp
f
107.133 133.195 mo
105.218 133.195 105.215 136.171 107.133 136.171 cv
109.048 136.171 109.052 133.195 107.133 133.195 cv
cp
f
111.8 132.528 mo
109.885 132.528 109.881 135.504 111.8 135.504 cv
113.715 135.504 113.718 132.528 111.8 132.528 cv
cp
f
109.467 130.195 mo
107.551 130.195 107.548 133.171 109.467 133.171 cv
111.382 133.171 111.385 130.195 109.467 130.195 cv
cp
f
108.133 118.195 mo
106.218 118.195 106.215 121.171 108.133 121.171 cv
110.048 121.171 110.052 118.195 108.133 118.195 cv
cp
f
94.4673 117.34 mo
92.3101 117.34 92.3072 120.692 94.4673 120.692 cv
96.6236 120.692 96.6275 117.34 94.4673 117.34 cv
cp
f
108.8 103.195 mo
106.885 103.195 106.881 106.171 108.8 106.171 cv
110.715 106.171 110.718 103.195 108.8 103.195 cv
cp
f
112.467 108.726 mo
109.949 108.726 109.944 112.64 112.467 112.64 cv
114.986 112.64 114.99 108.726 112.467 108.726 cv
cp
f
93.4673 148.861 mo
91.5513 148.861 91.5484 151.838 93.4673 151.838 cv
95.3824 151.838 95.3853 148.861 93.4673 148.861 cv
cp
f
100.8 153.195 mo
98.8853 153.195 98.8814 156.171 100.8 156.171 cv
102.715 156.171 102.718 153.195 100.8 153.195 cv
cp
f
86.4673 136.528 mo
84.5513 136.528 84.5484 139.504 86.4673 139.504 cv
88.3824 139.504 88.3853 136.528 86.4673 136.528 cv
cp
f
93.8004 131.353 mo
92.5181 131.353 92.5162 133.346 93.8004 133.346 cv
95.0826 133.346 95.0845 131.353 93.8004 131.353 cv
cp
f
81.4673 151.861 mo
79.5513 151.861 79.5484 154.838 81.4673 154.838 cv
83.3824 154.838 83.3853 151.861 81.4673 151.861 cv
cp
f
115.467 74.6448 mo
113.703 74.6448 113.7 77.387 115.467 77.387 cv
117.231 77.387 117.234 74.6448 115.467 74.6448 cv
cp
f
110.467 58.1947 mo
108.551 58.1947 108.548 61.1712 110.467 61.1712 cv
112.382 61.1712 112.385 58.1947 110.467 58.1947 cv
cp
f
108.133 46.7205 mo
106.038 46.7205 106.034 49.9783 108.133 49.9783 cv
110.23 49.9783 110.233 46.7205 108.133 46.7205 cv
cp
f
90.4673 47.5277 mo
88.5513 47.5277 88.5484 50.5042 90.4673 50.5042 cv
92.3824 50.5042 92.3853 47.5277 90.4673 47.5277 cv
cp
f
98.4673 34.3704 mo
96.7779 34.3704 96.775 36.9954 98.4673 36.9954 cv
100.156 36.9954 100.159 34.3704 98.4673 34.3704 cv
cp
f
104.8 29.1947 mo
102.885 29.1947 102.881 32.1712 104.8 32.1712 cv
106.715 32.1712 106.718 29.1947 104.8 29.1947 cv
cp
f
111.467 31.6673 mo
108.873 31.6673 108.869 35.6986 111.467 35.6986 cv
114.061 35.6986 114.065 31.6673 111.467 31.6673 cv
cp
f
110.467 44.5277 mo
108.551 44.5277 108.548 47.5042 110.467 47.5042 cv
112.382 47.5042 112.385 44.5277 110.467 44.5277 cv
cp
f
116.8 47.5003 mo
116.136 47.5003 116.135 48.5316 116.8 48.5316 cv
117.463 48.5316 117.464 47.5003 116.8 47.5003 cv
cp
f
51.1334 51.7791 mo
49.1129 51.7791 49.1089 54.9198 51.1334 54.9198 cv
53.1548 54.9198 53.1578 51.7791 51.1334 51.7791 cv
cp
.290196 .337255 .34902 rgb
f
49.0836 44.6829 mo
49.0836 45.3494 li
49.1832 45.3494 li
49.1832 44.6829 li
49.0836 44.6829 li
cp
f
57.1334 42.1947 mo
55.2183 42.1947 55.2154 45.1712 57.1334 45.1712 cv
59.0484 45.1712 59.0523 42.1947 57.1334 42.1947 cv
cp
f
60.1334 45.8612 mo
58.2183 45.8612 58.2154 48.8377 60.1334 48.8377 cv
62.0484 48.8377 62.0523 45.8612 60.1334 45.8612 cv
cp
f
61.4673 40.8729 mo
59.567 40.8729 59.564 43.826 61.4673 43.826 cv
63.3668 43.826 63.3707 40.8729 61.4673 40.8729 cv
cp
f
56.1334 37.1947 mo
54.2183 37.1947 54.2154 40.1712 56.1334 40.1712 cv
58.0484 40.1712 58.0523 37.1947 56.1334 37.1947 cv
cp
f
62.1334 30.5277 mo
60.2183 30.5277 60.2154 33.5042 62.1334 33.5042 cv
64.0484 33.5042 64.0523 30.5277 62.1334 30.5277 cv
cp
f
66.1334 29.5277 mo
64.2183 29.5277 64.2154 32.5042 66.1334 32.5042 cv
68.0484 32.5042 68.0523 29.5277 66.1334 29.5277 cv
cp
f
72.1334 27.6986 mo
70.8668 27.6986 70.8648 29.6673 72.1334 29.6673 cv
73.4 29.6673 73.4029 27.6986 72.1334 27.6986 cv
cp
f
77.4673 25.1947 mo
75.5513 25.1947 75.5484 28.1712 77.4673 28.1712 cv
79.3824 28.1712 79.3853 25.1947 77.4673 25.1947 cv
cp
f
84.4673 31.5277 mo
82.5513 31.5277 82.5484 34.5042 84.4673 34.5042 cv
86.3824 34.5042 86.3853 31.5277 84.4673 31.5277 cv
cp
f
86.4673 45.1947 mo
84.5513 45.1947 84.5484 48.1712 86.4673 48.1712 cv
88.3824 48.1712 88.3853 45.1947 86.4673 45.1947 cv
cp
f
48.8004 41.3988 mo
46.7193 41.3988 46.7154 44.6331 48.8004 44.6331 cv
50.8814 44.6331 50.8853 41.3988 48.8004 41.3988 cv
cp
f
44.8004 53.2996 mo
44.8004 53.3992 li
44.8004 53.2996 li
cp
f
44.1334 63.7659 mo
41.2379 63.7659 41.233 68.2659 44.1334 68.2659 cv
47.0289 68.2659 47.0337 63.7659 44.1334 63.7659 cv
cp
f
41.4673 69.5277 mo
39.5513 69.5277 39.5484 72.5042 41.4673 72.5042 cv
43.3824 72.5042 43.3853 69.5277 41.4673 69.5277 cv
cp
f
44.4673 74.8612 mo
42.5513 74.8612 42.5484 77.8377 44.4673 77.8377 cv
46.3824 77.8377 46.3853 74.8612 44.4673 74.8612 cv
cp
f
42.4673 90.9661 mo
42.4673 91.0662 li
42.4673 90.9661 li
cp
f
45.1334 98.5277 mo
43.2183 98.5277 43.2154 101.504 45.1334 101.504 cv
47.0484 101.504 47.0523 98.5277 45.1334 98.5277 cv
cp
f
48.4673 107.435 mo
47.2906 107.435 47.2886 109.263 48.4673 109.263 cv
49.6431 109.263 49.6451 107.435 48.4673 107.435 cv
cp
f
47.8004 120.528 mo
45.8853 120.528 45.8814 123.504 47.8004 123.504 cv
49.7154 123.504 49.7183 120.528 47.8004 120.528 cv
cp
f
61.4673 138.861 mo
59.5513 138.861 59.5484 141.838 61.4673 141.838 cv
63.3824 141.838 63.3853 138.861 61.4673 138.861 cv
cp
f
51.8004 116.195 mo
49.8853 116.195 49.8814 119.171 51.8004 119.171 cv
53.7154 119.171 53.7183 116.195 51.8004 116.195 cv
cp
f
51.4673 102.195 mo
49.5513 102.195 49.5484 105.171 51.4673 105.171 cv
53.3824 105.171 53.3853 102.195 51.4673 102.195 cv
cp
f
55.8004 104.195 mo
53.8853 104.195 53.8814 107.171 55.8004 107.171 cv
57.7154 107.171 57.7183 104.195 55.8004 104.195 cv
cp
f
53.1334 121.861 mo
51.2183 121.861 51.2154 124.838 53.1334 124.838 cv
55.0484 124.838 55.0523 121.861 53.1334 121.861 cv
cp
f
66.1334 109.861 mo
64.2183 109.861 64.2154 112.838 66.1334 112.838 cv
68.0484 112.838 68.0523 109.861 66.1334 109.861 cv
cp
f
67.4673 101.195 mo
65.5513 101.195 65.5484 104.171 67.4673 104.171 cv
69.3824 104.171 69.3853 101.195 67.4673 101.195 cv
cp
f
81.4673 106.528 mo
79.5513 106.528 79.5484 109.504 81.4673 109.504 cv
83.3824 109.504 83.3853 106.528 81.4673 106.528 cv
cp
f
90.8004 105.556 mo
88.4927 105.556 88.4888 109.142 90.8004 109.142 cv
93.108 109.142 93.1119 105.556 90.8004 105.556 cv
cp
f
98.8004 97.1946 mo
96.8853 97.1946 96.8814 100.171 98.8004 100.171 cv
100.715 100.171 100.718 97.1946 98.8004 97.1946 cv
cp
f
93.8004 95.1946 mo
91.8853 95.1946 91.8814 98.1712 93.8004 98.1712 cv
95.7154 98.1712 95.7183 95.1946 93.8004 95.1946 cv
cp
f
100.467 90.5277 mo
98.5513 90.5277 98.5484 93.5042 100.467 93.5042 cv
102.382 93.5042 102.385 90.5277 100.467 90.5277 cv
cp
f
108.8 88.5277 mo
106.885 88.5277 106.881 91.5042 108.8 91.5042 cv
110.715 91.5042 110.718 88.5277 108.8 88.5277 cv
cp
f
66.1334 137.205 mo
63.3736 137.205 63.3687 141.494 66.1334 141.494 cv
68.8931 141.494 68.898 137.205 66.1334 137.205 cv
cp
f
58.1334 124.195 mo
56.2183 124.195 56.2154 127.171 58.1334 127.171 cv
60.0484 127.171 60.0523 124.195 58.1334 124.195 cv
cp
f
48.8004 131.633 mo
48.8004 131.733 li
48.8004 131.633 li
cp
f
55.4673 128.528 mo
53.5513 128.528 53.5484 131.504 55.4673 131.504 cv
57.3824 131.504 57.3853 128.528 55.4673 128.528 cv
cp
f
65.1334 129.072 mo
63.4898 129.072 63.4869 131.627 65.1334 131.627 cv
66.7769 131.627 66.7798 129.072 65.1334 129.072 cv
cp
f
54.1334 145.528 mo
52.2183 145.528 52.2154 148.504 54.1334 148.504 cv
56.0484 148.504 56.0523 145.528 54.1334 145.528 cv
cp
f
60.4673 148.528 mo
58.5513 148.528 58.5484 151.504 60.4673 151.504 cv
62.3824 151.504 62.3853 148.528 60.4673 148.528 cv
cp
f
70.4673 153.752 mo
69.6978 153.752 69.6968 154.947 70.4673 154.947 cv
71.2359 154.947 71.2369 153.752 70.4673 153.752 cv
cp
f
72.4673 147.528 mo
70.5513 147.528 70.5484 150.504 72.4673 150.504 cv
74.3824 150.504 74.3853 147.528 72.4673 147.528 cv
cp
f
14.0416 183.286 mo
14.647 182.498 15.0025 181.536 14.6216 180.608 cv
14.191 179.555 13.1539 179.345 12.1441 179.46 cv
11.6129 179.273 11.0386 179.241 10.4966 179.451 cv
9.32184 179.907 8.13727 180.256 6.90094 180.502 cv
5.13922 180.852 4.33453 182.99 4.97516 184.512 cv
5.60797 186.013 7.05719 186.514 8.48004 186.169 cv
8.48004 186.231 li
9.10504 186.127 9.70855 185.97 10.3023 185.788 cv
10.5572 185.713 li
11.3062 185.47 12.0406 185.178 12.772 184.847 cv
12.7408 184.794 li
13.3306 184.42 13.7974 183.904 14.0416 183.286 cv
cp
.298039 .239216 .2 rgb
f
90.525 183.691 mo
89.3326 183.149 88.1265 182.621 86.901 182.159 cv
87.1285 181.373 86.8062 180.495 85.8482 180.199 cv
83.857 179.584 82.6412 177.745 80.6246 177.224 cv
79.9763 177.057 79.2865 177.128 78.6179 177.199 cv
77.6064 177.306 76.6435 177.412 75.9468 176.696 cv
75.0591 175.782 74.7789 174.285 73.7554 173.318 cv
72.562 172.188 71.0865 171.409 69.6207 170.7 cv
67.3218 169.589 65.2935 172.951 67.5973 174.16 cv
69.1754 174.989 70.3384 175.484 70.8541 177.385 cv
71.0855 178.238 70.9859 179.14 71.2662 180 cv
71.6255 181.105 72.2974 182.001 73.2037 182.617 cv
71.3814 183.441 69.5572 184.25 67.5191 184.399 cv
64.3207 184.632 61.6299 182.756 59.0096 180.881 cv
55.48 178.354 52.078 175.828 47.7349 178.455 cv
48.2965 177.68 48.815 176.929 49.2994 176.321 cv
49.9732 175.474 50.1129 174.255 49.8277 173.21 cv
51.0123 172.178 53.0122 171.88 54.4 172.046 cv
54.9976 172.117 55.523 171.371 55.3267 170.829 cv
54.9283 169.731 53.982 169.104 52.8736 168.763 cv
53.649 168.732 54.4166 168.702 55.0904 168.68 cv
55.1265 168.732 li
55.2535 169.259 55.5806 169.75 56.0171 169.98 cv
56.8404 170.415 57.6558 170.239 58.2672 169.67 cv
59.1451 169.84 60.025 169.154 60.1637 168.369 cv
60.6773 167.548 60.355 166.21 59.1959 166.051 cv
58.7496 165.535 58.0162 165.236 57.3941 165.481 cv
57.1246 165.588 56.897 165.708 56.691 165.853 cv
56.4654 165.881 li
56.1998 165.913 55.9752 165.989 55.774 166.086 cv
54.5281 165.998 53.2234 166.019 52.1301 166.04 cv
51.6225 166.05 51.1605 166.06 50.771 166.059 cv
46.6168 166.047 42.8677 166.982 38.8258 167.65 cv
37.4537 167.877 37.773 170.145 39.1539 170.075 cv
40.646 169.999 40.484 170.026 41.9342 169.669 cv
42.0484 169.64 42.1333 169.576 42.1929 169.494 cv
43.8101 169.256 45.4751 169.133 47.0914 169.038 cv
45.3794 169.875 44.1324 171.472 43.4849 173.373 cv
43.3765 173.692 43.3472 174.012 43.3756 174.322 cv
43.2555 174.477 43.1353 174.632 43.0152 174.786 cv
42.9576 174.861 42.649 175.199 42.3052 175.592 cv
42.2046 174.824 42.1011 174.058 41.9849 173.292 cv
41.7027 171.436 39.0328 171.409 38.1412 172.684 cv
37.9459 172.562 37.7193 172.484 37.4576 172.493 cv
36.149 172.535 34.6207 173.249 33.3482 172.915 cv
32.3189 172.645 31.6724 171.826 30.5201 171.683 cv
30.1477 171.637 29.7539 171.716 29.357 171.794 cv
28.991 171.867 28.6222 171.939 28.2652 171.914 cv
27.2994 171.845 26.4937 171.458 25.5211 171.383 cv
24.4117 171.298 23.4986 171.491 22.5055 172.038 cv
22.3912 172.101 22.149 172.234 21.9146 172.386 cv
21.4342 171.918 20.6548 171.668 20.0562 171.665 cv
17.5308 171.652 16.6197 175.154 15.8941 177.035 cv
15.1685 178.914 18.3297 180.265 19.1714 178.417 cv
19.3619 177.997 20.0924 177.024 20.191 176.326 cv
20.2281 176.355 li
21.273 176.896 21.7486 176.972 22.9263 176.785 cv
23.3101 176.724 23.5777 176.113 23.8941 176.076 cv
25.1099 175.935 25.8453 176.974 26.8521 177.286 cv
28.1285 177.682 28.9967 177.549 30.0377 177.317 cv
31.1988 178.02 32.191 178.517 33.8033 178.013 cv
35.2271 177.568 36.7662 176.356 37.9351 175.273 cv
37.9419 178.132 37.4595 181.757 40.6578 182.719 cv
41.8365 183.074 42.8912 182.872 43.8502 182.363 cv
44.1353 183.08 44.8365 183.64 45.6334 183.605 cv
46.5904 183.562 47.4029 182.881 47.5298 181.936 cv
48.1666 182.169 48.5943 182.149 49.4292 182.341 cv
51.3423 181.78 53.2359 182.038 55.109 183.115 cv
55.815 183.79 56.5367 184.448 57.275 185.088 cv
59.3219 186.719 61.7613 187.873 64.3951 188.116 cv
67.3951 188.392 70.0113 187.411 72.6207 186.088 cv
74.3228 185.226 75.983 184.068 77.7887 183.361 cv
78.734 183.252 79.6832 183.132 80.6275 183.284 cv
82.5249 183.59 83.899 184.352 85.524 183.565 cv
86.9166 184.064 88.2701 184.707 89.5787 185.31 cv
90.6685 185.812 91.6216 184.189 90.525 183.691 cv
f
96.1334 180.443 mo
94.3238 180.443 94.3209 183.256 96.1334 183.256 cv
97.9429 183.256 97.9459 180.443 96.1334 180.443 cv
cp
f
114.63 182.319 mo
113.499 181.501 112.108 181.707 110.77 181.649 cv
109.168 181.58 107.567 181.455 105.969 181.316 cv
104.668 181.203 104.701 183.191 105.969 183.332 cv
107.568 183.509 109.168 183.653 110.77 183.783 cv
112.114 183.892 113.438 184.194 114.63 183.452 cv
115.077 183.175 115.027 182.605 114.63 182.319 cv
f
136.007 186.514 mo
134.909 186.153 134.213 185.439 133.624 184.616 cv
135.119 185.063 136.553 185.717 138.181 185.762 cv
138.823 185.779 139.488 185.641 140.146 185.541 cv
140.187 185.774 140.303 185.988 140.535 186.088 cv
140.585 186.11 li
140.542 186.282 140.527 186.461 140.54 186.639 cv
139.038 187.016 137.201 186.907 136.007 186.514 cv
cp
146.461 184.708 mo
145.337 182.148 142.721 181.834 140.259 182.299 cv
138.271 182.674 136.692 182.684 134.732 182.112 cv
133.212 181.668 132.199 181.295 130.633 181.7 cv
129.76 181.926 129.557 182.841 129.873 183.57 cv
129.978 183.814 130.107 184.05 130.239 184.285 cv
129.919 184.287 129.594 184.284 129.262 184.263 cv
127.801 184.168 126.581 183.239 125.161 183.145 cv
124.553 183.105 124.127 183.34 123.552 183.535 cv
121.223 184.33 119.482 184.667 117.648 182.68 cv
116.435 181.367 114.505 183.318 115.692 184.636 cv
118.33 187.567 120.739 186.875 124.025 185.958 cv
125.016 185.681 124.75 185.743 125.653 185.921 cv
126.392 186.067 126.993 186.661 127.857 186.784 cv
129.213 186.977 130.612 186.87 131.886 186.421 cv
135.148 189.635 140.753 191.045 144.188 187.576 cv
144.194 187.568 li
144.711 187.824 145.423 187.692 145.817 187.301 cv
145.935 187.183 146.053 187.066 146.171 186.949 cv
146.809 186.316 146.795 185.471 146.461 184.708 cv
cp
f
102.633 184.382 mo
100.96 184.382 100.957 186.984 102.633 186.984 cv
104.307 186.984 104.31 184.382 102.633 184.382 cv
f
96.6334 184.567 mo
95.4722 184.513 94.2955 184.513 93.1334 184.559 cv
92.6451 184.579 92.481 185.363 93.0123 185.457 cv
94.1841 185.665 95.2779 185.985 96.3814 186.431 cv
97.5748 186.914 98.1285 184.636 96.6334 184.567 cv
f
55.9527 185.623 mo
54.292 183.899 52.1031 184.307 49.9074 184.715 cv
47.6512 185.133 45.3876 185.552 43.6822 183.659 cv
42.4605 182.303 40.6695 184.249 41.7261 185.615 cv
42.2525 186.294 42.8834 186.795 43.5806 187.171 cv
43.8081 187.557 44.2135 187.838 44.8004 187.838 cv
44.9361 187.838 45.0601 187.819 45.1763 187.791 cv
45.8091 187.962 46.4683 188.073 47.1431 188.134 cv
48.0715 188.216 49.0123 188.093 49.9432 187.969 cv
51.3603 187.781 52.7547 187.593 54.0484 188.133 cv
54.7584 188.43 55.5533 187.922 55.938 187.364 cv
56.0054 187.266 56.0728 187.169 56.1392 187.072 cv
56.442 186.633 56.3013 185.985 55.9527 185.623 cv
.14902 .117647 .0980392 rgb
f
40.107 183.721 mo
40.6851 183.779 40.9556 182.971 40.5708 182.6 cv
37.1011 179.258 33.3921 181.08 29.5249 181.555 cv
29.4498 180.346 28.4439 179.191 26.8892 179.575 cv
25.2633 179.977 23.9908 180.777 23.2964 182.34 cv
23.1304 182.714 23.0728 183.138 23.1002 183.554 cv
23.0045 183.515 22.9185 183.465 22.8189 183.434 cv
20.5679 182.735 18.6666 183.901 17.5552 185.85 cv
16.733 187.29 18.3755 188.93 19.816 188.111 cv
19.8951 188.065 20.2193 187.926 20.523 187.773 cv
20.7535 188.679 21.3931 189.477 22.2095 189.921 cv
24.1333 190.967 26.0806 190.128 27.7046 189.001 cv
28.5084 190.213 30.4634 189.69 30.9732 188.307 cv
31.2955 188.409 31.6236 188.499 31.983 188.556 cv
32.442 188.629 34.2711 188.988 34.6529 188.633 cv
34.7496 188.764 34.8336 188.905 34.94 189.029 cv
35.4761 189.604 36.067 189.882 36.7906 190.151 cv
38.2388 190.688 39.6422 189.535 40.1099 188.266 cv
40.4419 187.367 40.3912 186.687 40.0923 185.891 cv
40.0142 185.687 li
39.9429 185.5 li
39.9293 185.532 li
39.6871 185.109 39.3082 184.787 38.8375 184.621 cv
38.6929 184.428 38.5758 184.277 38.5484 184.25 cv
38.317 184.014 38.0523 183.821 37.774 183.655 cv
38.5523 183.629 39.3306 183.642 40.107 183.721 cv
f
62.6334 183.949 mo
62.3316 183.949 62.3316 184.417 62.6334 184.417 cv
62.9351 184.417 62.9361 183.949 62.6334 183.949 cv
cp
f
66.3824 175.066 mo
65.8804 174.919 65.4048 174.926 64.9156 174.977 cv
64.7515 174.903 64.5836 174.842 64.4126 174.788 cv
64.6636 174.134 64.607 173.385 64.2691 172.726 cv
63.1773 170.598 60.0093 170.301 58.6939 172.388 cv
58.2818 173.043 58.1246 173.764 58.1412 174.496 cv
56.9703 174.983 56.1626 176.345 56.9068 177.896 cv
57.6363 179.415 59.7955 180.44 61.5484 180.208 cv
61.6773 180.282 61.7994 180.365 61.9341 180.43 cv
62.2769 180.596 62.6119 180.711 62.9556 180.796 cv
64.065 181.703 65.6773 181.896 66.9468 181.184 cv
69.4585 179.776 69.272 175.915 66.3824 175.066 cv
f
90.0201 188.651 mo
89.2603 188.448 88.5894 188.409 87.8257 188.284 cv
86.1607 188.012 87.0689 188.14 86.0933 187.232 cv
85.0709 186.281 84.6714 185.46 83.2027 184.989 cv
81.8081 184.542 79.8833 184.445 78.4566 184.739 cv
76.7261 185.094 74.692 187.544 73.1343 187.475 cv
71.8199 187.417 71.4986 189.541 72.8199 189.8 cv
74.6978 190.168 76.0142 189.798 77.8296 189.365 cv
79.8668 188.879 81.5064 188.675 82.6275 190.474 cv
84.605 193.649 88.1763 192.453 90.4029 190.1 cv
90.8453 189.633 90.6656 188.823 90.0201 188.651 cv
f
156.27 188.931 mo
153.503 189.701 152.287 189.937 149.406 188.887 cv
147.984 188.369 146.937 188.024 145.419 187.888 cv
140.94 187.487 136.586 187.782 132.222 188.755 cv
130.214 188.732 128.207 188.781 126.211 189.046 cv
126.06 189.067 li
125.967 188.905 125.848 188.748 125.691 188.604 cv
121.784 185.001 115.717 185.123 110.189 185.246 cv
108.212 185.29 106.304 185.334 104.588 185.207 cv
101.242 184.959 99.4127 185.136 96.2134 183.206 cv
94.4019 182.114 93.437 181.695 91.3003 182.077 cv
90.4439 182.23 90.1685 183.469 90.7857 184.026 cv
91.7037 184.856 92.4732 185.686 93.3169 186.478 cv
93.2584 186.555 li
92.6001 187.414 93.6831 188.54 94.5943 188.294 cv
95.0943 188.159 95.5943 188.024 96.0933 187.889 cv
96.3023 187.832 96.4879 187.715 96.6568 187.575 cv
97.021 187.827 97.3921 188.041 97.7759 188.186 cv
99.2273 188.735 100.823 188.698 102.425 188.66 cv
103.511 188.634 104.6 188.608 105.649 188.765 cv
106.8 188.938 107.932 189.003 109.064 189.051 cv
108.997 189.388 109.034 189.741 109.219 189.992 cv
110.16 191.27 111.723 191.491 113.167 191.877 cv
113.964 192.09 114.594 191.775 114.976 191.263 cv
115.076 191.384 115.213 191.482 115.408 191.528 cv
116.955 191.888 117.458 191.891 119.076 191.694 cv
119.668 191.622 120.252 191.572 120.834 191.538 cv
121.938 191.851 123.075 192.043 124.299 191.965 cv
124.658 191.942 124.99 191.819 125.278 191.634 cv
125.588 191.661 125.897 191.681 126.211 191.716 cv
129.453 192.079 132.708 192.173 135.963 192.32 cv
136.538 192.346 136.961 192.132 137.24 191.802 cv
140.909 191.909 144.643 192.491 147.769 193.949 cv
148.973 194.511 149.729 195.228 151.189 195.274 cv
151.586 195.286 153.742 194.577 155.071 193.982 cv
156.539 194.077 157.408 193.744 158.48 192.728 cv
160.143 191.154 158.421 188.333 156.27 188.931 cv
f
30.6539 177.514 mo
29.3902 177.17 28.0845 177.241 26.7896 177.099 cv
25.5113 176.959 24.3638 176.964 23.1734 177.53 cv
21.8863 178.141 20.1871 179.243 19.2339 180.6 cv
19.3023 180.37 19.3941 180.161 19.4771 179.931 cv
19.5709 179.671 19.5318 179.446 19.5513 179.18 cv
19.5357 179.105 li
20.0347 178.71 20.5171 178.295 20.982 177.864 cv
21.7964 177.11 20.6177 176.01 19.7886 176.671 cv
19.2496 177.1 18.7037 177.523 18.1158 177.884 cv
18.0338 177.933 17.9117 178.01 17.7701 178.094 cv
17.6998 177.761 17.6246 177.431 17.5084 177.116 cv
16.856 175.347 14.6832 175.806 14.2877 177.122 cv
14.2759 177.116 li
14.2652 177.197 li
14.2418 177.293 14.23 177.394 14.2271 177.5 cv
14.1461 178.133 14.1529 178.859 14.2652 179.604 cv
14.2564 179.741 li
14.2466 180.005 14.315 180.241 14.4361 180.438 cv
14.7281 181.59 15.2564 182.667 16.0396 183.299 cv
15.8912 183.504 15.7857 183.746 15.7632 184.018 cv
15.6841 184.967 15.7759 185.916 15.9996 186.841 cv
16.2281 187.789 17.3218 187.884 17.9791 187.364 cv
18.0748 187.287 li
18.3589 187.062 18.4507 186.64 18.3931 186.267 cv
18.3912 186.234 li
18.3882 186.206 li
18.3824 185.992 18.3267 185.79 18.2125 185.617 cv
18.2017 185.516 18.1832 185.415 18.1763 185.314 cv
18.4097 185.528 18.7232 185.671 19.1334 185.671 cv
19.7935 185.671 20.2203 185.315 20.4263 184.852 cv
20.5562 184.877 20.6871 184.895 20.8209 184.896 cv
20.9605 184.897 21.1002 184.901 21.2388 184.905 cv
21.4654 184.955 li
21.5777 184.957 21.69 184.959 21.8023 184.96 cv
22.5084 184.972 23.107 184.405 23.2154 183.739 cv
24.0572 183.022 24.8638 182.178 25.8384 182.025 cv
26.7105 181.888 27.5171 181.924 28.3121 181.91 cv
28.5181 184.197 31.9029 184.213 31.982 181.849 cv
32.0015 181.269 31.9683 180.615 32.0904 180.044 cv
32.3209 178.96 31.7779 177.82 30.6539 177.514 cv
cp
.258824 .207843 .172549 rgb
f
43.3004 177.299 mo
42.5914 177.299 42.5904 178.4 43.3004 178.4 cv
44.0093 178.4 44.0103 177.299 43.3004 177.299 cv
cp
f
52.8453 179.115 mo
52.6138 178.333 51.7525 177.932 51.105 177.522 cv
50.4732 177.122 49.899 176.643 49.3795 176.105 cv
48.2339 174.919 46.5415 176.673 47.5894 177.895 cv
48.1998 178.607 48.897 179.217 49.7046 179.697 cv
50.4498 180.139 51.606 180.667 52.4253 180.147 cv
52.7632 179.932 52.9635 179.511 52.8453 179.115 cv
f
58.8433 176.139 mo
58.8191 176.066 58.8259 176.092 58.8341 176.118 cv
58.8397 176.136 58.8461 176.155 58.8433 176.139 cv
f
62.7095 174.973 mo
62.567 174.163 62.1685 173.385 61.5953 172.79 cv
60.9292 172.098 60.0718 171.742 59.1265 171.662 cv
58.7574 171.63 58.4068 171.677 58.0396 171.705 cv
57.9986 171.708 57.7095 171.719 57.6099 171.728 cv
57.5191 171.708 57.2525 171.667 57.2447 171.665 cv
56.1129 171.408 54.6128 172.224 54.7486 173.566 cv
54.732 173.403 54.7095 173.785 54.6929 173.865 cv
54.6363 174.134 54.6109 174.41 54.5884 174.683 cv
54.5582 175.045 54.6549 175.349 54.8218 175.6 cv
53.9488 175.443 53.0621 175.369 52.1724 175.418 cv
51.4595 175.457 50.7554 175.543 50.0816 175.784 cv
49.5748 175.964 48.9576 176.464 48.3794 176.617 cv
48.2466 176.584 48.1099 176.563 47.9693 176.569 cv
47.7974 176.576 47.6255 176.583 47.4537 176.591 cv
47.4674 176.613 li
45.7545 176.65 45.149 179.235 47.024 179.767 cv
47.7417 179.971 48.1978 179.938 48.7183 179.739 cv
48.897 179.935 49.0816 180.126 49.2847 180.312 cv
49.9234 180.895 50.7691 180.858 51.4146 180.312 cv
51.5103 180.231 51.5943 180.119 51.65 180.007 cv
51.9019 179.504 51.9088 178.759 51.5435 178.287 cv
51.9097 178.29 52.2369 178.302 52.4634 178.299 cv
53.7193 178.282 54.8892 178.546 56.0611 178.974 cv
57.7594 179.594 58.5542 177.02 57.0787 176.234 cv
57.229 176.173 57.3707 176.091 57.4937 175.985 cv
57.9331 176.002 58.5337 175.961 58.7183 175.92 cv
58.7925 175.962 li
58.9146 176.091 58.9224 176.098 58.8023 175.972 cv
58.8306 176.079 58.8414 176.125 58.8433 176.139 cv
58.8746 176.236 li
58.897 176.473 58.9732 176.694 59.1041 176.899 cv
59.1714 176.987 li
59.5005 178.151 61.0045 178.402 61.8375 177.629 cv
62.647 176.877 62.9 176.062 62.7095 174.973 cv
f
60.9673 183.133 mo
60.9673 183.233 li
60.9673 183.133 li
cp
f
86.7271 177.223 mo
85.4371 176.658 83.8824 175.639 82.4449 175.667 cv
81.8619 175.679 81.2994 175.86 80.7232 175.913 cv
80.0806 175.972 79.6099 175.911 78.9986 176.233 cv
78.4839 176.504 78.1714 177.107 78.1714 177.676 cv
78.1705 177.812 78.2017 177.93 78.2232 178.055 cv
77.1441 178.678 76.1685 179.602 75.2085 180.281 cv
73.8424 181.248 72.3531 181.567 70.8912 182.347 cv
68.8648 183.426 66.6646 184.144 64.4762 184.832 cv
61.5865 185.741 63.6265 190.129 66.0387 188.537 cv
69.233 186.431 72.7974 184.629 76.3433 183.313 cv
77.3648 182.933 78.2974 182.583 79.1548 181.881 cv
79.4283 181.657 79.9976 181.139 80.2593 180.8 cv
80.3462 181.288 80.6793 182.122 80.566 181.815 cv
80.8316 182.537 81.44 183.113 82.2544 183.1 cv
84.5035 183.066 84.2427 180.742 83.108 179.071 cv
83.8687 179.467 84.7398 179.743 85.5259 180.072 cv
87.1402 180.748 88.3433 177.932 86.7271 177.223 cv
f
95.6334 181.224 mo
95.5142 181.224 95.4078 181.243 95.3092 181.271 cv
96.1119 180.462 95.7799 178.695 94.3003 178.695 cv
92.3853 178.695 92.3814 181.671 94.3003 181.671 cv
94.5005 181.671 94.6754 181.632 94.8336 181.574 cv
94.4918 181.969 94.4683 182.612 94.771 183.04 cv
94.4859 183.017 94.188 183.073 93.9722 183.21 cv
93.5201 183.5 93.2418 183.974 93.0054 184.301 cv
92.9312 184.404 92.8433 184.51 92.7515 184.613 cv
92.1763 184.399 91.5288 184.451 90.9517 184.834 cv
90.8863 184.17 90.7681 183.531 90.358 182.973 cv
89.4869 181.791 88.063 182.35 87.7906 183.366 cv
87.6998 183.202 87.5787 183.053 87.3931 182.948 cv
86.8053 182.618 86.0717 182.622 85.3719 182.626 cv
85.1184 182.627 84.8694 182.628 84.6334 182.614 cv
83.5894 182.549 82.8121 183.603 82.941 184.565 cv
83.0904 185.678 84.0669 186.145 85.0914 185.997 cv
86.024 185.863 87.3668 185.47 87.8091 184.536 cv
87.8775 184.305 li
87.9361 184.438 88.0084 184.572 88.1119 184.706 cv
88.2876 184.931 88.2095 185.661 88.3013 185.956 cv
88.4586 186.464 88.7515 186.848 89.1646 187.168 cv
89.4634 187.398 89.8238 187.622 90.1822 187.742 cv
90.3433 187.796 90.5025 187.837 90.6704 187.852 cv
90.6841 187.888 li
90.9566 188.354 91.4957 188.76 92.0191 188.904 cv
92.9986 189.174 94.191 188.731 94.9303 188.091 cv
96.2124 186.98 96.8629 184.734 95.563 183.46 cv
95.6334 183.474 li
97.0816 183.474 97.0836 181.224 95.6334 181.224 cv
f
121.807 186.147 mo
120.164 185.653 118.967 184.912 117.885 184.246 cv
117.996 183.434 117.526 182.528 116.467 182.528 cv
115.996 182.528 115.641 182.709 115.402 182.981 cv
114.227 182.611 112.892 182.617 110.997 183.392 cv
110.172 183.73 109.113 184.63 108.28 184.602 cv
107.477 184.575 106.71 183.633 106.029 183.043 cv
106.133 183.064 li
107.053 183.064 107.055 181.635 106.133 181.635 cv
105.526 181.635 105.328 182.254 105.523 182.677 cv
103.948 181.744 102.534 181.555 100.654 181.62 cv
98.9371 181.68 98.9293 184.251 100.654 184.292 cv
102.879 184.345 104.134 187.536 106.33 188.07 cv
107.722 188.408 109.137 188.074 110.253 187.16 cv
111.718 185.959 111.051 184.711 113.976 185.503 cv
114.763 185.717 115.804 186.457 116.621 186.776 cv
118.608 187.551 120.072 188.181 121.944 187.197 cv
122.396 186.959 122.261 186.284 121.807 186.147 cv
f
128.8 184.92 mo
126.961 184.92 126.958 187.779 128.8 187.779 cv
130.64 187.779 130.643 184.92 128.8 184.92 cv
cp
f
140.831 184.368 mo
140.867 184.368 li
139.892 182.163 137.008 182.471 134.632 183.408 cv
133.47 183.384 132.312 183.301 131.144 183.262 cv
129.953 183.222 129.785 184.947 130.871 185.287 cv
131.08 185.353 131.29 185.399 131.499 185.452 cv
131.215 186.275 132.221 187.274 133.118 186.754 cv
134.375 186.025 135.641 185.874 137.032 186.326 cv
138.249 186.722 139.239 187.172 140.356 186.317 cv
141.042 185.792 141.216 185.007 140.831 184.368 cv
cp
f
64.1334 175.77 mo
61.8863 175.77 61.8824 179.262 64.1334 179.262 cv
66.3804 179.262 66.3844 175.77 64.1334 175.77 cv
f
37.1295 170.486 mo
36.523 170.524 35.7701 170.566 35.0025 170.666 cv
36.1724 170.039 35.9429 167.861 34.3004 167.861 cv
32.4625 167.861 32.3902 170.595 34.0826 170.816 cv
33.7212 170.893 33.3687 170.989 33.0386 171.113 cv
32.7925 171.073 32.5484 171.04 32.3199 171.016 cv
30.3228 170.807 28.7935 171.219 27.0914 171.91 cv
26.1421 171.523 24.813 171.901 24.6382 173.038 cv
24.4781 174.086 24.233 174.915 23.6109 175.777 cv
23.0923 176.495 24.2671 177.407 24.8443 176.728 cv
25.6353 175.799 26.5162 175.561 27.4527 174.922 cv
28.105 174.478 28.0025 174.37 29.2906 173.969 cv
30.2027 173.684 31.1519 173.559 32.0953 173.43 cv
33.525 174.176 35.6226 173.997 37.1295 173.978 cv
39.3873 173.949 39.3638 170.345 37.1295 170.486 cv
cp
.439216 .364706 .313726 rgb
f
19.442 175.914 mo
17.5054 177.013 14.9166 178.336 13.6002 180.198 cv
13.1822 180.789 12.7154 182.755 12.2125 182.956 cv
11.8609 183.097 10.5884 182.947 10.0982 183.012 cv
9.63727 183.073 9.32379 183.131 9.00934 183.246 cv
8.85699 182.674 8.40191 182.195 7.63336 182.195 cv
5.71832 182.195 5.71539 185.171 7.63336 185.171 cv
7.91266 185.171 8.14703 185.102 8.3443 184.994 cv
10.0445 186.803 13.8238 187.248 15.2896 184.982 cv
16.0103 183.869 15.9586 182.389 16.4576 181.166 cv
17.1998 179.347 18.6656 178.35 20.2349 177.27 cv
21.0582 176.703 20.3336 175.409 19.442 175.914 cv
cp
f
22.3004 172.816 mo
21.1841 172.816 21.1822 174.55 22.3004 174.55 cv
23.4166 174.55 23.4185 172.816 22.3004 172.816 cv
cp
f
41.4673 167.946 mo
41.3004 167.934 li
41.1949 167.927 41.1949 168.105 41.3004 168.098 cv
41.4673 168.086 li
41.4673 167.946 li
cp
f
52.1705 163.854 mo
50.9156 164.022 49.6548 164.742 48.4986 165.241 cv
46.9654 165.902 45.4712 166.594 44.024 167.429 cv
43.024 168.005 43.9058 169.484 44.9224 168.967 cv
46.5728 168.126 51.4087 165.408 52.9693 167.375 cv
53.3218 167.819 54.0796 167.735 54.4449 167.375 cv
56.1558 165.685 54.1314 163.593 52.1705 163.854 cv
cp
f
56.023 179.023 mo
55.4204 178.389 55.272 178.673 55.0103 177.461 cv
54.8101 176.533 55.0601 175.608 55.1578 174.693 cv
55.3238 173.123 55.0318 171.556 54.8511 169.998 cv
54.7203 168.871 52.9625 168.821 53.0464 169.998 cv
53.2769 173.209 54.1461 176.198 54.3482 179.37 cv
54.3863 179.97 54.8531 180.261 55.4156 180.182 cv
55.5201 180.168 55.6246 180.154 55.7281 180.139 cv
56.2544 180.066 56.3316 179.348 56.023 179.023 cv
f
62.3004 175.195 mo
60.3853 175.195 60.3814 178.171 62.3004 178.171 cv
64.2154 178.171 64.2183 175.195 62.3004 175.195 cv
f
69.4664 175.414 mo
69.315 174.823 68.9927 174.3 68.6871 173.778 cv
68.5015 173.46 68.2339 173.238 67.9361 173.093 cv
67.7398 172.397 67.5406 171.696 67.4341 170.98 cv
67.3804 170.616 67.3521 170.245 67.3677 169.877 cv
67.3824 169.635 li
67.4918 169.61 67.6012 169.576 67.7047 169.521 cv
68.4478 169.126 68.8609 168.37 68.7496 167.533 cv
68.4566 165.345 65.2486 165.175 65.2037 167.533 cv
65.1851 168.536 64.7359 169.432 64.5826 170.428 cv
64.4165 171.503 64.3951 172.577 64.4156 173.663 cv
64.4312 174.499 64.8648 175.011 65.4273 175.242 cv
65.5972 175.797 66.0211 176.269 66.649 176.429 cv
67.2408 176.579 67.8453 176.752 68.4605 176.734 cv
69.1441 176.714 69.6383 176.084 69.4664 175.414 cv
f
89.273 177.103 mo
88.0963 176.363 87.2545 176.451 85.8843 176.201 cv
84.2984 175.911 83.15 175.007 81.6656 174.559 cv
81.0308 174.367 80.4986 174.429 79.8297 174.446 cv
78.6682 174.477 77.5281 174.423 76.3869 174.368 cv
75.4746 174.325 74.5616 174.281 73.6363 174.282 cv
71.9663 174.282 71.9888 176.97 73.6363 176.86 cv
75.399 176.742 76.9869 176.388 78.7408 176.639 cv
80.6089 176.908 80.2974 177.43 81.7115 178.103 cv
82.3982 178.43 83.049 178.41 83.7332 178.39 cv
84.0453 178.381 84.3643 178.372 84.6968 178.396 cv
86.3873 178.517 87.4136 179.15 89.0572 178.753 cv
89.8384 178.564 89.9058 177.502 89.273 177.103 cv
f
94.8004 180.528 mo
92.8853 180.528 92.8814 183.504 94.8004 183.504 cv
96.7154 183.504 96.7183 180.528 94.8004 180.528 cv
cp
f
107.133 180.418 mo
104.434 180.418 104.429 184.614 107.133 184.614 cv
109.833 184.614 109.837 180.418 107.133 180.418 cv
f
142.96 187.576 mo
138.662 187.098 134.545 185.18 130.323 184.282 cv
128.065 183.802 125.769 183.587 123.47 183.561 cv
123.366 183.539 123.253 183.528 123.133 183.528 cv
122.904 183.553 li
122.451 183.555 121.997 183.564 121.544 183.579 cv
121.563 183.45 121.594 183.322 121.605 183.19 cv
121.641 182.274 121.293 181.364 120.586 180.772 cv
119.711 180.04 118.815 180.107 117.781 180.352 cv
116.405 180.679 115.426 180.839 114.027 180.375 cv
111.75 179.619 110.853 182.696 112.524 183.91 cv
111.44 184.589 111.693 186.671 113.3 186.671 cv
114.475 186.671 114.927 185.552 114.661 184.685 cv
115.17 184.788 115.69 184.847 116.219 184.846 cv
116.57 184.846 116.922 184.766 117.273 184.674 cv
117.313 184.893 117.381 185.107 117.488 185.33 cv
117.843 186.073 118.515 186.605 119.242 186.947 cv
120.595 187.584 122.191 187.534 123.192 186.498 cv
123.922 186.473 124.358 186.006 124.507 185.45 cv
128.595 186.011 132.497 187.288 136.594 188.544 cv
138.987 189.278 141.889 191.269 143.455 188.44 cv
143.683 188.029 143.385 187.623 142.96 187.576 cv
cp
f
101.133 181.007 mo
98.9771 181.007 98.9732 184.359 101.133 184.359 cv
103.291 184.359 103.294 181.007 101.133 181.007 cv
cp
f
88.7994 185.689 mo
84.4263 186.061 78.9644 186.045 75.6373 182.724 cv
75.398 182.485 74.9371 182.725 75.0504 183.066 cv
75.6763 184.951 77.3667 185.991 79.2935 186.236 cv
82.3082 186.619 85.7837 186.28 88.7994 185.993 cv
88.9927 185.975 88.9956 185.672 88.7994 185.689 cv
f
73.563 179.838 mo
72.2828 179.31 71.0093 178.729 69.6763 178.344 cv
69.4468 178.277 69.3062 178.61 69.5142 178.729 cv
70.7173 179.418 72.022 179.929 73.2916 180.481 cv
73.7554 180.682 74.0347 180.034 73.563 179.838 cv
cp
f
60.6197 180.514 mo
59.9732 180.535 59.3297 180.646 58.6978 180.818 cv
58.5581 180.831 58.4146 180.874 58.2681 180.948 cv
57.2711 181.266 56.3121 181.729 55.438 182.253 cv
54.481 182.826 53.7652 183.513 53.0699 184.256 cv
52.3814 184.692 51.7935 185.176 51.5523 186.056 cv
51.5601 186.057 li
51.4097 186.601 51.8365 187.152 52.4498 187.233 cv
53.7437 187.406 54.73 186.405 55.7574 185.72 cv
56.9829 184.904 58.2076 184.087 59.4332 183.27 cv
59.9088 182.953 60.064 182.481 60.0132 182.034 cv
60.3423 181.807 60.6607 181.57 60.9517 181.314 cv
61.2564 181.046 61.0142 180.501 60.6197 180.514 cv
f
139.895 191.301 mo
137.144 191.283 134.374 191.492 131.602 191.7 cv
127.496 192.008 123.385 192.317 119.323 191.893 cv
113.068 191.24 107.135 188.542 100.784 188.568 cv
98.1275 188.578 95.6929 189.204 93.1539 189.913 cv
89.0865 191.048 85.9058 190.413 81.8687 189.596 cv
75.4585 188.298 68.7232 188.651 62.2154 188.512 cv
55.5415 188.369 48.7584 187.864 42.0884 188.179 cv
39.6558 188.294 37.358 188.674 34.9996 189.266 cv
30.8277 190.313 27.6275 190.313 23.566 188.903 cv
21.94 188.339 6.05131 182.619 5.76032 185.455 cv
5.79351 185.13 5.75642 184.847 5.66851 184.604 cv
5.87846 184.392 6.18021 184.211 6.84525 183.693 cv
8.77791 182.185 10.3726 181.451 11.9869 179.469 cv
13.4869 177.625 14.7515 175.118 16.8521 173.85 cv
18.6509 172.765 21.3941 172.617 23.9254 172.312 cv
24.1167 172.288 li
25.2232 172.15 26.2876 171.98 27.2008 171.676 cv
30.6236 170.534 33.8628 168.877 37.2457 167.629 cv
41.2496 166.153 44.7828 166.911 48.8541 167.291 cv
51.982 167.582 54.4146 166.83 57.4273 166.367 cv
61.8306 165.689 65.9293 168.676 69.733 170.563 cv
75.9234 173.633 82.2056 176.703 88.8482 178.682 cv
95.6422 180.706 102.044 180.903 109.065 180.596 cv
113.757 180.392 116.838 181.296 121.104 183.115 cv
123.142 183.984 125.073 184.174 127.26 183.79 cv
135.098 182.414 141.59 182.114 147.825 187.006 cv
146.931 188.069 147.428 190.285 149.307 190.452 cv
151.326 190.633 154.528 190.807 156.086 192.644 cv
150.726 191.828 145.328 191.334 139.895 191.301 cv
34.8121 116.909 mo
34.8765 116.642 34.8873 116.347 34.8287 116.03 cv
33.3209 107.797 32.9966 99.3924 32.44 91.054 cv
31.9175 83.2337 31.608 75.4364 32.4058 67.6214 cv
33.1695 60.1409 34.2925 51.7483 37.9204 45.0496 cv
41.3707 38.6814 46.8765 33.6986 52.1412 28.8553 cv
52.233 28.7713 52.3042 28.6829 52.3746 28.594 cv
52.5777 28.5091 52.7789 28.3963 52.9703 28.2274 cv
59.3804 22.5638 67.8599 19.2044 75.7379 15.9862 cv
77.5083 15.866 79.2867 15.8094 81.0689 15.8397 cv
89.983 15.9925 100.33 17.5462 108.106 22.1742 cv
115.117 26.3465 121.685 33.347 126.653 39.8314 cv
126.673 40.0872 126.741 40.3523 126.878 40.6219 cv
132.326 51.41 132.048 62.4823 131.593 74.2806 cv
131.149 85.7962 130.064 97.2801 128.591 108.708 cv
125.63 131.687 121.14 154.433 117.195 177.255 cv
115.985 176.899 114.732 176.64 113.32 176.557 cv
113.127 176.546 112.932 176.545 112.739 176.537 cv
109.626 177.863 105.981 177.651 102.716 176.859 cv
102.252 176.862 101.79 176.874 101.326 176.855 cv
96.8551 176.67 92.4859 175.692 88.2447 174.299 cv
80.0914 171.62 72.6968 167.314 64.9478 163.721 cv
62.5836 162.625 60.6285 161.865 57.9761 162.187 cv
55.691 162.464 53.608 163.376 51.2691 163.424 cv
49.3687 163.462 47.5025 163.075 45.6216 162.869 cv
45.4673 162.852 45.3189 162.85 45.1666 162.839 cv
44.4097 163.06 43.5748 163.18 42.7486 163.194 cv
42.7173 162.992 li
38.7652 147.869 36.7339 132.396 34.8121 116.909 cv
50.1421 25.3988 mo
49.9156 25.6424 li
49.7095 25.7308 49.5064 25.8499 49.313 26.0272 cv
43.8023 31.0955 38.0845 36.369 34.4673 43.0306 cv
31.023 49.3734 29.7789 56.8245 28.8424 63.9041 cv
27.6861 72.6385 27.8062 81.3421 28.3765 90.1146 cv
28.939 98.7723 29.3248 107.491 30.7984 116.052 cv
30.7672 116.233 30.7525 116.427 30.7799 116.647 cv
32.7261 132.343 34.7457 148.041 38.6939 163.381 cv
36.9927 163.773 35.3482 164.323 33.7144 164.955 cv
30.8306 154.684 29.5367 144.056 28.0494 133.512 cv
26.3209 121.254 24.7173 108.967 23.815 96.6165 cv
22.9849 85.2596 22.691 73.8035 23.5533 62.4393 cv
24.2183 53.6927 26.1978 44.4329 32.2671 38.1605 cv
32.9986 38.2908 33.8052 38.0897 34.3619 37.3597 cv
35.0376 36.4725 35.7408 35.6131 36.4654 34.7796 cv
36.7515 34.5999 37.023 34.4085 37.3208 34.2386 cv
37.94 33.8865 38.2242 33.366 38.2779 32.826 cv
43.7925 27.1092 50.4791 22.8006 57.7799 19.952 cv
55.0699 21.5389 52.4928 23.3216 50.1421 25.3988 cv
14.7164 88.2977 mo
13.8179 76.3396 12.3384 63.7376 14.4517 51.8309 cv
15.4878 45.9944 17.608 40.3221 21.3501 35.6668 cv
25.0562 31.0575 29.7808 27.4114 33.4205 22.7308 cv
33.7886 22.2571 33.9068 21.7371 33.8628 21.245 cv
39.0171 16.261 45.0406 13.2425 52.1441 11.1907 cv
55.5689 10.201 58.4801 8.79183 61.6539 7.23422 cv
64.5279 5.82354 66.5425 5.68881 69.5464 6.38457 cv
71.1685 6.76006 72.524 7.2962 74.2086 7.0506 cv
77.4039 6.58429 79.8492 4.56916 83.2437 4.34213 cv
87.5875 4.0511 92.0113 4.38994 96.2808 5.21371 cv
99.7535 5.88409 103.147 6.90264 106.424 8.21124 cv
106.601 8.75227 107.013 9.2176 107.728 9.41732 cv
109.01 9.7767 110.296 10.1683 111.584 10.575 cv
113.568 11.6053 115.5 12.7371 117.354 13.9915 cv
150.27 36.2615 143.799 80.16 139.067 113.889 cv
129.91 179.155 li
129.91 179.158 li
127.24 179.669 124.627 180.11 121.932 179.022 cv
121.614 178.893 121.303 178.766 120.996 178.641 cv
125.123 154.726 129.827 130.894 132.833 106.801 cv
134.338 94.7327 135.406 82.6014 135.716 70.4407 cv
135.999 59.4139 135.576 49.6405 130.836 39.6585 cv
130.924 39.241 130.841 38.7752 130.484 38.303 cv
125.035 31.1038 117.952 23.3783 110.125 18.7201 cv
101.7 13.7059 90.7349 12.0062 81.0689 11.8397 cv
80.0083 11.8216 78.9507 11.8323 77.8961 11.8646 cv
77.4771 11.4295 76.8521 11.2352 76.0816 11.5526 cv
75.6949 11.7117 75.3062 11.8709 74.9175 12.0301 cv
59.3258 13.2137 44.6666 19.9154 34.1304 31.5115 cv
15.8199 43.181 18.441 72.0589 19.4371 90.6912 cv
20.1177 103.41 21.647 116.066 23.3716 128.68 cv
25.0972 141.301 26.4615 154.166 29.9791 166.446 cv
28.5533 167.013 27.0992 167.564 25.5767 168.03 cv
20.399 141.688 16.7291 115.072 14.7164 88.2977 cv
149.638 32.9525 mo
161.429 45.5433 162.821 63.4803 161.762 79.8641 cv
159.571 113.788 155.507 148.585 146.704 181.491 cv
143.26 179.608 139.425 178.54 135.356 178.478 cv
134.901 178.471 134.452 178.493 134.003 178.527 cv
142.923 114.952 li
145.668 95.3982 149.032 75.4715 146.019 55.744 cv
143.761 40.9637 137.699 27.0159 127.006 16.7186 cv
135.46 20.8748 143.344 26.2322 149.638 32.9525 cv
153.016 187.005 mo
153.012 186.556 152.84 186.096 152.415 185.689 cv
151.713 185.02 150.982 184.398 150.228 183.812 cv
155.088 165.899 158.222 147.614 160.586 129.217 cv
162.992 110.497 165.837 91.304 166.071 72.4119 cv
166.266 56.6336 162.813 40.4837 151.341 28.9612 cv
140.982 18.556 127.129 11.3494 113.128 6.87044 cv
109.049 4.77861 104.74 3.13216 100.302 2.01547 cv
93.4107 .28106 84.3521 -1.17106 77.5123 1.37483 cv
75.1314 2.26157 73.2584 3.09359 70.609 2.52717 cv
68.7037 2.11943 67.2144 1.52329 65.2242 1.76059 cv
60.5025 2.32256 56.4078 5.74151 51.8814 7.10824 cv
42.6646 9.89044 34.941 13.6121 28.5445 21.0506 cv
28.0621 21.6107 27.9615 22.2439 28.0914 22.8167 cv
24.7799 26.411 21.0504 29.6141 18.0279 33.4725 cv
14.7379 37.6732 12.5406 42.5247 11.2486 47.6902 cv
8.27204 59.5916 9.59822 72.326 10.4351 84.408 cv
12.4009 112.752 16.1997 140.946 21.6685 168.824 cv
19.3062 169.066 16.9263 169.117 14.8326 170.397 cv
12.9127 171.57 11.6051 173.425 10.2535 175.168 cv
8.05814 177.998 6.20757 179.136 3.2857 180.932 cv
2.49077 181.421 1.46931 182.049 1.06794 182.951 cv
.993711 183.118 .866738 183.966 .834538 184.551 cv
-.304124 185.337 -.409614 187.604 1.35014 188.269 cv
1.50348 188.328 1.65777 188.386 1.81111 188.444 cv
2.36385 188.653 3.01032 188.466 3.4908 188.13 cv
5.40484 188.935 7.90776 188.573 9.85503 188.953 cv
13.0152 189.57 16.1422 190.679 19.2007 191.659 cv
25.1392 193.562 29.0103 195.007 35.1959 193.371 cv
42.1509 191.531 49.3668 192.237 56.4947 192.389 cv
63.4654 192.539 70.5894 192.271 77.5299 192.971 cv
80.9078 193.311 84.1422 194.613 87.5298 194.784 cv
90.1402 194.915 92.4634 194.233 94.9595 193.552 cv
102.152 191.59 108.36 193.955 115.395 195.298 cv
121.685 196.499 127.807 195.705 134.133 195.414 cv
142.294 195.039 150.422 195.635 158.463 197.063 cv
159.678 197.279 161.051 196.536 160.995 195.135 cv
160.792 190.055 157.22 187.935 153.016 187.005 cv
.156863 .113725 .113725 rgb
f
52.1353 80.5345 mo
52.2759 75.512 52.6031 70.4949 53.1207 65.4832 cv
53.3462 65.4412 53.5777 65.3631 53.813 65.2205 cv
60.6373 61.0858 67.3306 81.0037 53.6978 79.8543 cv
52.9527 79.7918 52.44 80.0843 52.1353 80.5345 cv
cp
58.3179 83.5545 mo
71.7359 80.244 64.2408 55.3177 52.4468 61.4022 cv
51.3209 60.9012 49.5591 61.4774 49.3687 63.1278 cv
48.0601 74.4871 47.7173 85.8709 48.3404 97.2884 cv
48.4136 98.6321 50.0504 100.004 51.3502 99.0154 cv
52.3941 98.2205 52.6802 97.72 52.8531 96.4041 cv
52.9507 95.6624 52.6734 95.1458 52.232 94.8387 cv
52.0621 90.8363 52.0103 86.8382 52.0757 82.8436 cv
52.2232 83.1312 52.4273 83.3875 52.688 83.5814 cv
57.1119 86.868 58.9468 92.0418 60.4966 97.119 cv
61.2457 99.574 65.108 98.5272 64.3541 96.0555 cv
62.9429 91.4339 61.2711 87.1087 58.3179 83.5545 cv
cp
f
76.4713 96.6961 mo
76.3941 96.1556 76.1529 95.7879 75.8336 95.5545 cv
75.5797 93.5267 75.9361 91.035 75.9449 89.2479 cv
75.9595 86.3709 76.0074 83.494 76.0855 80.618 cv
76.2339 75.1849 76.5084 69.7581 76.8716 64.3353 cv
77.0435 61.7655 73.0435 61.7762 72.8716 64.3353 cv
72.4654 70.3963 72.1734 76.4622 72.0386 82.5355 cv
71.938 87.035 70.6695 93.929 72.3287 98.1507 cv
72.6998 99.0936 73.6871 99.9476 74.7896 99.5477 cv
74.897 99.5086 75.0054 99.4691 75.1138 99.43 cv
76.2291 99.0257 76.6744 98.118 76.5103 96.9696 cv
76.4976 96.8787 76.4839 96.7874 76.4713 96.6961 cv
cp
f
102.165 75.7127 mo
101.394 82.2684 94.0035 83.7469 88.7535 81.9305 cv
88.5377 81.8792 li
88.9722 76.8934 89.5777 71.9193 90.2232 66.9461 cv
90.4517 66.9539 90.6959 66.9251 90.9595 66.8319 cv
96.3882 64.9095 102.823 70.1126 102.165 75.7127 cv
cp
102.053 65.7684 mo
99.0728 63.3529 93.6021 61.6624 89.8961 62.9744 cv
89.7964 63.0096 89.7125 63.0574 89.6246 63.1019 cv
88.5084 62.5887 86.7173 63.1605 86.4996 64.8123 cv
85.0406 75.9046 83.6793 86.9935 83.9048 98.2025 cv
83.9566 100.773 87.9576 100.782 87.9048 98.2025 cv
87.8228 94.1068 87.9556 90.0272 88.2242 85.9573 cv
95.9341 88.307 105.755 84.5906 106.212 75.4905 cv
106.396 71.8397 104.921 68.0941 102.053 65.7684 cv
cp
f
36.5417 188.909 mo
36.366 188.871 36.1892 188.83 36.0122 188.786 cv
34.2447 188.349 34.8042 185.948 36.4166 185.805 cv
36.5498 185.793 36.6826 185.781 36.8148 185.767 cv
36.3816 186.244 36.2497 187.038 36.6099 187.598 cv
36.7613 187.832 li
36.986 188.182 37.3376 188.509 37.7433 188.673 cv
37.3426 188.745 36.9425 188.824 36.5417 188.909 cv
.129412 .105882 .0901961 rgb
f
40.8307 188.263 mo
41.7336 187.967 42.6088 187.569 43.4587 187.103 cv
43.4991 187.126 43.5398 187.149 43.5806 187.171 cv
43.8081 187.557 44.2135 187.838 44.8004 187.838 cv
44.9361 187.838 45.0601 187.819 45.1763 187.791 cv
45.6331 187.914 46.1036 188.007 46.5839 188.071 cv
46.5779 188.073 46.5717 188.075 46.5658 188.078 cv
45.0695 188.079 43.576 188.109 42.0884 188.179 cv
41.6654 188.199 41.2466 188.227 40.8307 188.263 cv
47.0663 185.071 mo
46.9115 185.071 46.7579 185.066 46.6057 185.055 cv
47.2704 184.565 47.9189 184.06 48.5523 183.56 cv
49.6848 183.246 50.8438 182.707 51.894 182.072 cv
52.796 182.141 53.6934 182.396 54.5862 182.836 cv
54.025 183.271 53.5427 183.75 53.0699 184.256 cv
53.0156 184.29 52.962 184.325 52.9091 184.36 cv
52.8531 184.359 52.7969 184.358 52.7405 184.358 cv
51.8264 184.358 50.8677 184.536 49.9074 184.715 cv
48.9473 184.893 47.9854 185.071 47.0663 185.071 cv
58.8618 180.775 mo
58.0205 180.172 57.1856 179.574 56.3426 179.05 cv
56.4201 179.063 56.4953 179.069 56.568 179.069 cv
56.9259 179.069 57.2234 178.916 57.4418 178.678 cv
58.1162 179.42 59.14 179.959 60.1812 180.157 cv
59.9884 180.314 59.796 180.467 59.6033 180.617 cv
59.3548 180.659 59.1075 180.712 58.8618 180.775 cv
64.9156 174.977 mo
64.7515 174.903 64.5836 174.842 64.4126 174.788 cv
64.4693 174.64 64.5103 174.488 64.5359 174.332 cv
64.6349 174.597 64.7895 174.808 64.9797 174.971 cv
64.9584 174.973 64.937 174.975 64.9156 174.977 cv
64.4091 173.047 mo
64.3697 172.939 64.323 172.831 64.2691 172.726 cv
63.6823 171.583 62.4954 170.968 61.319 170.968 cv
60.5977 170.968 59.8805 171.199 59.3075 171.681 cv
59.2476 171.673 59.1872 171.667 59.1265 171.662 cv
59.0392 171.654 58.9529 171.651 58.8673 171.651 cv
58.5906 171.651 58.32 171.684 58.0396 171.705 cv
57.9986 171.708 57.7095 171.719 57.6099 171.728 cv
57.5191 171.708 57.2525 171.667 57.2447 171.665 cv
57.1049 171.633 56.9594 171.618 56.8121 171.618 cv
56.7506 171.618 56.6887 171.62 56.6267 171.626 cv
56.5919 171.499 56.5544 171.372 56.5142 171.246 cv
56.1987 170.256 55.5046 169.765 54.7609 169.68 cv
54.7262 169.608 54.6833 169.543 54.6341 169.485 cv
54.8146 169.3 54.9991 169.119 55.1882 168.942 cv
55.3433 169.386 55.6392 169.781 56.0171 169.98 cv
56.3315 170.146 56.6447 170.223 56.9459 170.223 cv
57.4334 170.223 57.8893 170.022 58.2672 169.67 cv
58.3587 169.688 58.4503 169.696 58.541 169.696 cv
59.3205 169.696 60.0394 169.072 60.1637 168.369 cv
60.5551 167.743 60.461 166.818 59.8812 166.342 cv
61.6893 166.566 63.4437 167.283 65.1449 168.135 cv
65.0144 168.905 64.7047 169.635 64.5826 170.428 cv
64.448 171.3 64.4084 172.171 64.4091 173.047 cv
.160784 .133333 .109804 rgb
f
54.5862 182.836 mo
53.6934 182.396 52.796 182.141 51.894 182.072 cv
52.9303 181.446 53.8607 180.728 54.5562 180.04 cv
54.5774 180.019 54.5984 179.998 54.6192 179.977 cv
54.7782 180.121 54.9951 180.195 55.2389 180.195 cv
55.2965 180.195 55.3554 180.191 55.4156 180.182 cv
55.5201 180.168 55.6246 180.154 55.7281 180.139 cv
56.2544 180.066 56.3316 179.348 56.023 179.023 cv
55.9898 178.988 55.958 178.956 55.9274 178.926 cv
55.972 178.942 56.0165 178.958 56.0611 178.974 cv
56.1579 179.009 56.2519 179.034 56.3426 179.05 cv
57.1856 179.574 58.0205 180.172 58.8618 180.775 cv
58.8071 180.789 58.7524 180.803 58.6978 180.818 cv
58.5581 180.831 58.4146 180.874 58.2681 180.948 cv
57.2711 181.266 56.3121 181.729 55.438 182.253 cv
55.1318 182.436 54.8503 182.631 54.5862 182.836 cv
56.9459 170.223 mo
56.6447 170.223 56.3315 170.146 56.0171 169.98 cv
55.6392 169.781 55.3433 169.386 55.1882 168.942 cv
55.3273 168.811 55.4687 168.683 55.6129 168.557 cv
56.5371 167.751 57.9868 166.886 59.5419 166.306 cv
59.6552 166.316 59.7684 166.328 59.8812 166.342 cv
60.461 166.818 60.5551 167.743 60.1637 168.369 cv
60.0394 169.072 59.3205 169.696 58.541 169.696 cv
58.4503 169.696 58.3587 169.688 58.2672 169.67 cv
57.8893 170.022 57.4334 170.223 56.9459 170.223 cv
.247059 .2 .168627 rgb
f
46.5839 188.071 mo
46.1036 188.007 45.6331 187.914 45.1763 187.791 cv
45.0601 187.819 44.9361 187.838 44.8004 187.838 cv
44.2135 187.838 43.8081 187.557 43.5806 187.171 cv
43.5398 187.149 43.4991 187.126 43.4587 187.103 cv
44.5481 186.506 45.5958 185.799 46.6057 185.055 cv
46.7579 185.066 46.9115 185.071 47.0663 185.071 cv
47.9854 185.071 48.9473 184.893 49.9074 184.715 cv
50.8677 184.536 51.8264 184.358 52.7405 184.358 cv
52.7969 184.358 52.8531 184.359 52.9091 184.36 cv
52.382 184.71 51.9289 185.107 51.6691 185.718 cv
50.0002 186.637 48.313 187.453 46.5839 188.071 cv
.129412 .105882 .0901961 rgb
f
60.1812 180.157 mo
59.14 179.959 58.1162 179.42 57.4418 178.678 cv
58.0377 178.028 58.0443 176.749 57.0787 176.234 cv
57.229 176.173 57.3707 176.091 57.4937 175.985 cv
57.5635 175.988 57.6374 175.989 57.7131 175.989 cv
58.1135 175.989 58.5631 175.954 58.7183 175.92 cv
58.7925 175.962 li
58.7959 175.966 58.7991 175.969 58.8023 175.973 cv
58.8306 176.079 58.8414 176.125 58.8433 176.139 cv
58.8315 176.103 58.8271 176.091 58.8266 176.091 cv
58.826 176.091 58.8299 176.105 58.8341 176.118 cv
58.8383 176.132 58.8428 176.145 58.8438 176.145 cv
58.8441 176.145 58.844 176.143 58.8433 176.139 cv
58.8746 176.236 li
58.897 176.473 58.9732 176.694 59.1041 176.899 cv
59.1714 176.987 li
59.3737 177.702 60.0198 178.073 60.681 178.073 cv
60.9379 178.073 61.1969 178.017 61.4333 177.904 cv
61.6567 178.07 61.9456 178.171 62.3004 178.171 cv
62.3403 178.171 62.3796 178.17 62.4179 178.167 cv
61.7018 178.871 60.9435 179.538 60.1812 180.157 cv
63.5261 175.868 mo
63.3624 175.585 63.1035 175.36 62.7496 175.256 cv
62.7398 175.164 62.7264 175.069 62.7095 174.973 cv
62.567 174.163 62.1685 173.385 61.5953 172.79 cv
60.972 172.143 60.1812 171.789 59.3075 171.681 cv
59.8805 171.199 60.5977 170.968 61.319 170.968 cv
62.4954 170.968 63.6823 171.583 64.2691 172.726 cv
64.323 172.831 64.3697 172.939 64.4091 173.047 cv
64.4093 173.252 64.4117 173.457 64.4156 173.663 cv
64.4203 173.915 64.4631 174.138 64.5359 174.332 cv
64.5103 174.488 64.4693 174.64 64.4126 174.788 cv
64.5836 174.842 64.7515 174.903 64.9156 174.977 cv
64.937 174.975 64.9584 174.973 64.9797 174.971 cv
65.007 174.994 65.0349 175.016 65.0635 175.038 cv
64.8902 175.297 64.7072 175.553 64.5153 175.806 cv
64.3962 175.782 64.2688 175.77 64.1334 175.77 cv
63.9084 175.77 63.7061 175.805 63.5261 175.868 cv
f
58.8438 176.145 mo
58.8428 176.145 58.8383 176.132 58.8341 176.118 cv
58.8299 176.105 58.826 176.091 58.8266 176.091 cv
58.8271 176.091 58.8315 176.103 58.8433 176.139 cv
58.8433 176.139 li
58.844 176.143 58.8441 176.145 58.8438 176.145 cv
.215686 .176471 .14902 rgb
f
56.568 179.069 mo
56.4953 179.069 56.4201 179.063 56.3426 179.05 cv
56.2519 179.034 56.1579 179.009 56.0611 178.974 cv
56.0165 178.958 55.972 178.942 55.9274 178.926 cv
55.8226 178.824 55.733 178.75 55.6546 178.687 cv
56.9914 176.612 57.2863 174.032 56.6267 171.626 cv
56.6887 171.62 56.7506 171.618 56.8121 171.618 cv
56.9594 171.618 57.1049 171.633 57.2447 171.665 cv
57.2525 171.667 57.5191 171.708 57.6099 171.728 cv
57.7095 171.719 57.9986 171.708 58.0396 171.705 cv
58.32 171.684 58.5906 171.651 58.8673 171.651 cv
58.9529 171.651 59.0392 171.654 59.1265 171.662 cv
59.1872 171.667 59.2476 171.673 59.3075 171.681 cv
60.1812 171.789 60.972 172.143 61.5953 172.79 cv
62.1685 173.385 62.567 174.163 62.7095 174.973 cv
62.7264 175.069 62.7398 175.164 62.7496 175.256 cv
62.6139 175.216 62.4641 175.195 62.3004 175.195 cv
60.7393 175.195 60.4483 177.172 61.4333 177.904 cv
61.1969 178.017 60.9379 178.073 60.681 178.073 cv
60.0198 178.073 59.3737 177.702 59.1714 176.987 cv
59.1041 176.899 li
58.9732 176.694 58.897 176.473 58.8746 176.236 cv
58.8433 176.139 li
58.8433 176.139 li
58.8414 176.125 58.8306 176.079 58.8023 175.973 cv
58.7991 175.969 58.7959 175.966 58.7925 175.962 cv
58.7183 175.92 li
58.5631 175.954 58.1135 175.989 57.7131 175.989 cv
57.6374 175.989 57.5635 175.988 57.4937 175.985 cv
57.3707 176.091 57.229 176.173 57.0787 176.234 cv
58.0443 176.749 58.0377 178.028 57.4418 178.678 cv
57.2234 178.916 56.9259 179.069 56.568 179.069 cv
58.8884 176.063 mo
58.8884 176.063 li
58.8884 176.063 li
f
63.7356 176.767 mo
63.7511 176.454 63.6813 176.135 63.5261 175.868 cv
63.7061 175.805 63.9084 175.77 64.1334 175.77 cv
64.2688 175.77 64.3962 175.782 64.5153 175.806 cv
64.2687 176.132 64.0081 176.452 63.7356 176.767 cv
f
55.2389 180.195 mo
54.9951 180.195 54.7782 180.121 54.6192 179.977 cv
55.0155 179.577 55.3603 179.144 55.6546 178.687 cv
55.733 178.75 55.8226 178.824 55.9274 178.926 cv
55.958 178.956 55.9898 178.988 56.023 179.023 cv
56.3316 179.348 56.2544 180.066 55.7281 180.139 cv
55.6246 180.154 55.5201 180.168 55.4156 180.182 cv
55.3554 180.191 55.2965 180.195 55.2389 180.195 cv
54.7609 169.68 mo
54.682 169.671 54.6027 169.667 54.5231 169.667 cv
54.5014 169.667 54.4795 169.667 54.4577 169.668 cv
54.5159 169.607 54.5749 169.545 54.6341 169.485 cv
54.6833 169.543 54.7262 169.608 54.7609 169.68 cv
.356863 .298039 .258824 rgb
f
62.3004 178.171 mo
61.9456 178.171 61.6567 178.07 61.4333 177.904 cv
60.4483 177.172 60.7393 175.195 62.3004 175.195 cv
62.4641 175.195 62.6139 175.216 62.7496 175.256 cv
63.1035 175.36 63.3624 175.585 63.5261 175.868 cv
63.6813 176.135 63.7511 176.454 63.7356 176.767 cv
63.32 177.248 62.8774 177.716 62.4179 178.167 cv
62.3796 178.17 62.3403 178.171 62.3004 178.171 cv
f
65.0635 175.038 mo
65.0349 175.016 65.007 174.994 64.9797 174.971 cv
64.7895 174.808 64.6349 174.597 64.5359 174.332 cv
64.4631 174.138 64.4203 173.915 64.4156 173.663 cv
64.4117 173.457 64.4093 173.252 64.4091 173.047 cv
64.4084 172.171 64.448 171.3 64.5826 170.428 cv
64.7047 169.635 65.0144 168.905 65.1449 168.135 cv
65.6882 168.407 66.2259 168.692 66.7585 168.98 cv
66.7692 169.05 66.7789 169.121 66.7877 169.194 cv
67.0304 171.203 66.2994 173.19 65.0635 175.038 cv
f
51.6691 185.718 mo
51.9289 185.107 52.382 184.71 52.9091 184.36 cv
52.962 184.325 53.0156 184.29 53.0699 184.256 cv
53.5427 183.75 54.025 183.271 54.5862 182.836 cv
54.8503 182.631 55.1318 182.436 55.438 182.253 cv
56.3121 181.729 57.2711 181.266 58.2681 180.948 cv
58.4146 180.874 58.5581 180.831 58.6978 180.818 cv
58.7524 180.803 58.8071 180.789 58.8618 180.775 cv
59.1075 180.712 59.3548 180.659 59.6033 180.617 cv
58.2359 181.685 56.8831 182.594 55.7584 183.293 cv
54.4005 184.137 53.0413 184.962 51.6691 185.718 cv
f
40.055 189.283 mo
38.9111 189.283 37.7413 189.166 36.5417 188.909 cv
36.9425 188.824 37.3426 188.745 37.7433 188.673 cv
37.9173 188.744 38.1012 188.785 38.2893 188.785 cv
38.33 188.785 38.3707 188.783 38.4117 188.779 cv
39.2398 188.7 40.0456 188.52 40.8307 188.263 cv
41.2466 188.227 41.6654 188.199 42.0884 188.179 cv
43.576 188.109 45.0695 188.079 46.5658 188.078 cv
44.4685 188.826 42.3113 189.284 40.055 189.283 cv
66.7585 168.98 mo
66.2259 168.692 65.6882 168.407 65.1449 168.135 cv
63.4437 167.283 61.6893 166.566 59.8812 166.342 cv
59.7684 166.328 59.6552 166.316 59.5419 166.306 cv
60.6483 165.893 61.8078 165.625 62.8686 165.625 cv
64.7842 165.625 66.3789 166.5 66.7585 168.98 cv
.137255 .101961 .101961 rgb
f
49.9685 175.828 mo
50.6329 174.795 51.2956 173.751 52.0009 172.74 cv
51.7366 173.792 51.2576 174.745 50.6396 175.619 cv
50.4516 175.664 50.2655 175.718 50.0816 175.784 cv
50.0445 175.797 50.0067 175.812 49.9685 175.828 cv
.160784 .133333 .109804 rgb
f
48.4257 178.038 mo
48.9433 177.364 49.4433 176.644 49.938 175.875 cv
49.9482 175.859 49.9583 175.844 49.9685 175.828 cv
50.0067 175.812 50.0445 175.797 50.0816 175.784 cv
50.2655 175.718 50.4516 175.664 50.6396 175.619 cv
50.0171 176.499 49.2536 177.298 48.4257 178.038 cv
.215686 .176471 .14902 rgb
f
91.9389 190.206 mo
91.4823 190.044 91.0423 189.871 90.6229 189.69 cv
90.7228 189.26 90.5004 188.779 90.0201 188.651 cv
89.3477 188.471 88.745 188.42 88.086 188.324 cv
87.1763 187.735 86.2871 187.048 85.457 186.284 cv
86.1877 186.232 86.9115 186.17 87.6179 186.105 cv
88.0013 186.357 88.3948 186.597 88.7945 186.827 cv
88.9044 186.949 89.0279 187.062 89.1646 187.168 cv
89.4634 187.398 89.8238 187.622 90.1822 187.742 cv
90.3433 187.796 90.5025 187.837 90.6704 187.852 cv
90.6841 187.888 li
90.9566 188.354 91.4957 188.76 92.0191 188.904 cv
92.2193 188.959 92.4283 188.985 92.6406 188.985 cv
92.8544 188.985 93.0715 188.959 93.2861 188.912 cv
93.8071 189.095 94.389 189.265 95.0121 189.413 cv
94.3958 189.569 93.7779 189.739 93.1539 189.913 cv
92.7403 190.028 92.336 190.125 91.9389 190.206 cv
.160784 .133333 .109804 rgb
f
90.6229 189.69 mo
90.6164 189.688 90.6096 189.685 90.6031 189.682 cv
89.7664 189.32 88.9175 188.863 88.086 188.324 cv
88.745 188.42 89.3477 188.471 90.0201 188.651 cv
90.5004 188.779 90.7228 189.26 90.6229 189.69 cv
.129412 .105882 .0901961 rgb
f
92.6406 188.985 mo
92.4283 188.985 92.2193 188.959 92.0191 188.904 cv
91.4957 188.76 90.9566 188.354 90.6841 187.888 cv
90.6704 187.852 li
90.5025 187.837 90.3433 187.796 90.1822 187.742 cv
89.8238 187.622 89.4634 187.398 89.1646 187.168 cv
89.0279 187.062 88.9044 186.949 88.7945 186.827 cv
90.1355 187.597 91.546 188.241 92.8775 188.761 cv
93.0092 188.812 93.1452 188.862 93.2861 188.912 cv
93.0715 188.959 92.8544 188.985 92.6406 188.985 cv
.215686 .176471 .14902 rgb
f
108.426 189.579 mo
107.465 189.359 106.501 189.157 105.531 188.993 cv
105.662 188.933 105.79 188.87 105.916 188.804 cv
106.896 188.937 107.863 188.997 108.83 189.041 cv
108.707 189.22 108.573 189.399 108.426 189.579 cv
.160784 .133333 .109804 rgb
f
108.83 189.041 mo
107.863 188.997 106.896 188.937 105.916 188.804 cv
106.268 188.618 106.598 188.407 106.904 188.171 cv
107.069 188.19 107.234 188.199 107.399 188.199 cv
108.144 188.199 108.872 188.01 109.533 187.648 cv
109.375 188.124 109.142 188.583 108.83 189.041 cv
.129412 .105882 .0901961 rgb
f
85.8358 185.847 mo
86.1467 185.764 86.4654 185.653 86.7579 185.507 cv
86.8935 185.607 87.0308 185.705 87.1698 185.802 cv
86.7306 185.824 86.285 185.84 85.8358 185.847 cv
.160784 .133333 .109804 rgb
f
83.0805 183.64 mo
82.9413 183.449 82.8068 183.257 82.6767 183.062 cv
83.2004 182.972 83.5452 182.726 83.7442 182.384 cv
83.8099 182.502 83.8797 182.619 83.9541 182.736 cv
83.5634 182.909 83.2538 183.245 83.0805 183.64 cv
.247059 .2 .168627 rgb
f
82.6767 183.062 mo
81.5044 181.306 80.7151 179.36 80.5675 177.353 cv
80.8379 177.573 81.1276 177.825 81.7115 178.103 cv
81.9844 178.233 82.2517 178.308 82.5176 178.35 cv
82.8069 179.747 83.0382 181.113 83.7442 182.384 cv
83.5452 182.726 83.2004 182.972 82.6767 183.062 cv
.215686 .176471 .14902 rgb
f
85.3924 185.85 mo
85.2612 185.85 85.1295 185.849 84.9979 185.847 cv
84.3012 185.162 83.6538 184.422 83.0805 183.64 cv
83.2538 183.245 83.5634 182.909 83.9541 182.736 cv
84.1681 183.071 84.4197 183.4 84.7193 183.72 cv
85.322 184.363 86.0126 184.958 86.7579 185.507 cv
86.4654 185.653 86.1467 185.764 85.8358 185.847 cv
85.6882 185.849 85.5406 185.85 85.3924 185.85 cv
f
108.548 184.582 mo
108.475 184.472 108.386 184.373 108.284 184.286 cv
108.541 184.113 108.741 183.884 108.884 183.622 cv
109.004 183.633 109.123 183.643 109.242 183.654 cv
109.355 183.808 109.448 183.99 109.516 184.203 cv
109.185 184.381 108.855 184.529 108.548 184.582 cv
.160784 .133333 .109804 rgb
f
109.242 183.654 mo
109.123 183.643 109.004 183.633 108.884 183.622 cv
108.926 183.546 108.963 183.467 108.996 183.385 cv
109.085 183.463 109.168 183.552 109.242 183.654 cv
.247059 .2 .168627 rgb
f
87.3282 181.953 mo
87.2059 181.852 87.0865 181.746 86.9705 181.637 cv
86.9692 181.579 86.9648 181.52 86.9573 181.462 cv
86.959 181.465 86.9607 181.467 86.9624 181.47 cv
87.0799 181.634 87.202 181.795 87.3282 181.953 cv
86.3197 180.422 mo
86.1844 180.33 86.0274 180.254 85.8482 180.199 cv
85.8299 180.193 85.8119 180.188 85.7938 180.182 cv
85.7875 180.171 85.7813 180.161 85.7752 180.15 cv
85.8589 180.168 85.9411 180.176 86.0214 180.176 cv
86.0784 180.176 86.1345 180.172 86.1895 180.164 cv
86.2314 180.25 86.2748 180.336 86.3197 180.422 cv
.160784 .133333 .109804 rgb
f
86.9705 181.637 mo
86.5231 181.218 86.1245 180.741 85.7938 180.182 cv
85.8119 180.188 85.8299 180.193 85.8482 180.199 cv
86.0274 180.254 86.1844 180.33 86.3197 180.422 cv
86.5038 180.774 86.7138 181.121 86.9573 181.462 cv
86.9648 181.52 86.9692 181.579 86.9705 181.637 cv
.247059 .2 .168627 rgb
f
86.0214 180.176 mo
85.9411 180.176 85.8589 180.168 85.7752 180.15 cv
85.7343 180.08 85.6945 180.009 85.6558 179.936 cv
85.3829 179.424 85.1647 178.919 84.9625 178.419 cv
85.1616 178.44 85.3517 178.468 85.5353 178.499 cv
85.7162 179.063 85.9246 179.619 86.1895 180.164 cv
86.1345 180.172 86.0784 180.176 86.0214 180.176 cv
.215686 .176471 .14902 rgb
f
107.399 188.199 mo
107.234 188.199 107.069 188.19 106.904 188.171 cv
107.643 187.599 108.232 186.873 108.607 185.967 cv
108.841 185.401 108.781 184.935 108.548 184.582 cv
108.855 184.529 109.185 184.381 109.516 184.203 cv
109.535 184.26 109.551 184.319 109.566 184.381 cv
109.86 185.621 109.856 186.669 109.533 187.648 cv
108.872 188.01 108.144 188.199 107.399 188.199 cv
f
85.5353 178.499 mo
85.3517 178.468 85.1616 178.44 84.9625 178.419 cv
84.7995 178.016 84.6469 177.616 84.4844 177.219 cv
84.735 177.312 84.9865 177.403 85.238 177.494 cv
85.3315 177.831 85.4286 178.167 85.5353 178.499 cv
82.5176 178.35 mo
82.2517 178.308 81.9844 178.233 81.7115 178.103 cv
81.1276 177.825 80.8379 177.573 80.5675 177.353 cv
80.5265 176.796 80.5349 176.234 80.5985 175.671 cv
81.0557 175.864 81.5141 176.055 81.9739 176.242 cv
82.214 176.947 82.373 177.652 82.5176 178.35 cv
.356863 .298039 .258824 rgb
f
108.284 184.286 mo
107.906 183.959 107.348 183.787 106.8 183.787 cv
106.571 183.787 106.344 183.817 106.133 183.878 cv
106.532 183.315 107.216 182.987 107.875 182.987 cv
108.283 182.987 108.681 183.113 108.996 183.385 cv
108.963 183.467 108.926 183.546 108.884 183.622 cv
108.741 183.884 108.541 184.113 108.284 184.286 cv
f
85.457 186.284 mo
85.3018 186.141 85.1487 185.995 84.9979 185.847 cv
85.1295 185.849 85.2612 185.85 85.3924 185.85 cv
85.5406 185.85 85.6882 185.849 85.8358 185.847 cv
86.285 185.84 86.7306 185.824 87.1698 185.802 cv
87.3173 185.904 87.4669 186.006 87.6179 186.105 cv
86.9115 186.17 86.1877 186.232 85.457 186.284 cv
f
99.4029 191.541 mo
96.8222 191.541 94.1802 191.001 91.9389 190.206 cv
92.336 190.125 92.7403 190.028 93.1539 189.913 cv
93.7779 189.739 94.3958 189.569 95.0121 189.413 cv
96.5306 189.774 98.2991 190.009 100.059 190.009 cv
102.012 190.009 103.953 189.72 105.531 188.993 cv
106.501 189.157 107.465 189.359 108.426 189.579 cv
108.336 189.689 108.242 189.799 108.143 189.91 cv
107.764 190.332 107.307 190.512 106.852 190.512 cv
106.446 190.512 106.041 190.368 105.696 190.125 cv
103.848 191.132 101.649 191.541 99.4029 191.541 cv
85.238 177.494 mo
84.9865 177.403 84.735 177.312 84.4844 177.219 cv
84.1764 176.465 83.833 175.719 83.316 174.976 cv
83.1383 174.721 82.8467 174.606 82.5586 174.606 cv
82.0167 174.606 81.4865 175.01 81.7467 175.638 cv
81.8301 175.839 81.9053 176.04 81.9739 176.242 cv
81.5141 176.055 81.0557 175.864 80.5985 175.671 cv
80.6377 175.322 80.6981 174.973 80.7808 174.623 cv
80.9996 173.699 81.7176 173.281 82.4669 173.281 cv
83.2724 173.281 84.1142 173.765 84.4107 174.623 cv
84.7442 175.591 84.977 176.551 85.238 177.494 cv
.137255 .101961 .101961 rgb
f
39.1681 184.771 mo
39.0639 184.712 38.9535 184.662 38.8375 184.621 cv
38.8071 184.58 38.778 184.542 38.7507 184.506 cv
39.2611 184.27 39.7836 184.054 40.273 183.796 cv
40.8016 183.518 41.3178 183.216 41.8245 182.898 cv
41.8285 182.898 41.8325 182.898 41.8365 182.898 cv
42.5219 182.898 43.1627 182.714 43.7657 182.407 cv
42.7033 183.078 41.5234 183.65 40.1812 184.126 cv
39.7472 184.28 39.4133 184.505 39.1681 184.771 cv
.160784 .133333 .109804 rgb
f
41.8365 182.898 mo
41.8325 182.898 41.8285 182.898 41.8245 182.898 cv
42.6834 182.358 43.5151 181.773 44.3345 181.181 cv
44.8755 180.791 45.44 180.389 46.0064 179.972 cv
46.166 179.818 46.3373 179.675 46.5183 179.54 cv
46.6482 179.626 46.7991 179.698 46.9718 179.751 cv
46.01 180.768 44.9626 181.651 43.7657 182.407 cv
43.1627 182.714 42.5219 182.898 41.8365 182.898 cv
.247059 .2 .168627 rgb
f
36.8148 185.767 mo
36.8267 185.754 36.8388 185.741 36.8511 185.729 cv
37.388 185.182 38.0583 184.826 38.7507 184.506 cv
38.778 184.542 38.8071 184.58 38.8375 184.621 cv
38.9535 184.662 39.0639 184.712 39.1681 184.771 cv
38.9619 184.995 38.8184 185.249 38.731 185.515 cv
38.1043 185.617 37.4661 185.702 36.8148 185.767 cv
.129412 .105882 .0901961 rgb
f
46.9718 179.751 mo
46.7991 179.698 46.6482 179.626 46.5183 179.54 cv
46.6874 179.414 46.865 179.295 47.0494 179.182 cv
47.5187 178.816 47.9815 178.436 48.4257 178.038 cv
47.9586 178.647 47.477 179.218 46.9718 179.751 cv
.215686 .176471 .14902 rgb
f
52.0009 172.74 mo
52.0486 172.55 52.0892 172.357 52.1225 172.16 cv
52.234 172.137 52.346 172.116 52.4578 172.098 cv
52.3033 172.31 52.1511 172.524 52.0009 172.74 cv
.160784 .133333 .109804 rgb
f
52.1225 172.16 mo
52.1407 172.052 52.1567 171.944 52.1705 171.834 cv
52.2581 171.129 52.6008 170.57 53.0615 170.197 cv
53.0878 170.525 53.1205 170.85 53.1581 171.174 cv
52.9186 171.477 52.6856 171.786 52.4578 172.098 cv
52.346 172.116 52.234 172.137 52.1225 172.16 cv
.247059 .2 .168627 rgb
f
53.1581 171.174 mo
53.1205 170.85 53.0878 170.525 53.0615 170.197 cv
53.4669 169.868 53.9634 169.683 54.4577 169.668 cv
54.0004 170.149 53.5697 170.653 53.1581 171.174 cv
.356863 .298039 .258824 rgb
f
40.0831 188.336 mo
40.0924 188.313 40.1013 188.289 40.1099 188.266 cv
40.4419 187.367 40.3912 186.687 40.0923 185.891 cv
40.0142 185.687 li
39.9429 185.5 li
39.9293 185.532 li
39.7467 185.213 39.4866 184.952 39.1681 184.771 cv
39.4133 184.505 39.7472 184.28 40.1812 184.126 cv
41.5234 183.65 42.7033 183.078 43.7657 182.407 cv
43.7939 182.393 43.8221 182.378 43.8502 182.363 cv
44.1267 183.058 44.7945 183.606 45.5613 183.606 cv
45.5853 183.606 45.6092 183.606 45.6334 183.605 cv
46.5904 183.562 47.4029 182.881 47.5298 181.936 cv
48.1666 182.169 48.5943 182.149 49.4292 182.341 cv
50.0845 182.149 50.7376 182.053 51.3883 182.053 cv
51.557 182.053 51.7257 182.059 51.894 182.072 cv
50.8438 182.707 49.6848 183.246 48.5523 183.56 cv
47.9189 184.06 47.2704 184.565 46.6057 185.055 cv
45.5379 184.978 44.5397 184.611 43.6822 183.659 cv
43.3904 183.335 43.0661 183.2 42.7559 183.2 cv
41.7674 183.2 40.9219 184.575 41.7261 185.615 cv
42.2217 186.254 42.8097 186.736 43.4587 187.103 cv
42.6088 187.569 41.7336 187.967 40.8307 188.263 cv
40.5805 188.285 40.3313 188.309 40.0831 188.336 cv
50.6396 175.619 mo
51.2576 174.745 51.7366 173.792 52.0009 172.74 cv
52.1511 172.524 52.3033 172.31 52.4578 172.098 cv
52.73 172.054 53.0017 172.026 53.2665 172.012 cv
53.4304 173.174 53.644 174.317 53.8409 175.461 cv
53.4682 175.424 53.0936 175.403 52.7181 175.403 cv
52.5364 175.403 52.3545 175.408 52.1724 175.418 cv
51.6541 175.446 51.1404 175.5 50.6396 175.619 cv
.137255 .117647 .0980392 rgb
f
45.5613 183.606 mo
44.7945 183.606 44.1267 183.058 43.8502 182.363 cv
43.8221 182.378 43.7939 182.393 43.7657 182.407 cv
44.9626 181.651 46.01 180.768 46.9718 179.751 cv
46.989 179.757 47.0063 179.762 47.024 179.767 cv
47.3561 179.861 47.6322 179.905 47.8846 179.905 cv
48.1777 179.905 48.4387 179.846 48.7183 179.739 cv
48.897 179.935 49.0816 180.126 49.2847 180.312 cv
49.5989 180.599 49.9632 180.735 50.329 180.735 cv
50.691 180.735 51.0546 180.602 51.3728 180.346 cv
51.4593 180.357 51.5455 180.363 51.6306 180.363 cv
51.9121 180.363 52.1833 180.3 52.4253 180.147 cv
52.7632 179.932 52.9635 179.511 52.8453 179.115 cv
52.7475 178.784 52.5374 178.522 52.2786 178.299 cv
52.3149 178.299 52.3498 178.299 52.3829 178.299 cv
52.411 178.299 52.4378 178.299 52.4634 178.299 cv
52.5008 178.298 52.5383 178.298 52.5755 178.298 cv
53.1564 178.298 53.7194 178.358 54.2732 178.466 cv
54.3035 178.766 54.3289 179.067 54.3482 179.37 cv
54.365 179.634 54.4648 179.838 54.6192 179.977 cv
54.5984 179.998 54.5774 180.019 54.5562 180.04 cv
53.8607 180.728 52.9303 181.446 51.894 182.072 cv
51.7257 182.059 51.557 182.053 51.3883 182.053 cv
50.7376 182.053 50.0845 182.149 49.4292 182.341 cv
48.5943 182.149 48.1666 182.169 47.5298 181.936 cv
47.4029 182.881 46.5904 183.562 45.6334 183.605 cv
45.6092 183.606 45.5853 183.606 45.5613 183.606 cv
52.4578 172.098 mo
52.6856 171.786 52.9186 171.477 53.1581 171.174 cv
53.1908 171.455 53.2272 171.734 53.2665 172.012 cv
53.0017 172.026 52.73 172.054 52.4578 172.098 cv
.203922 .168627 .145098 rgb
f
43.4587 187.103 mo
42.8097 186.736 42.2217 186.254 41.7261 185.615 cv
40.9219 184.575 41.7674 183.2 42.7559 183.2 cv
43.0661 183.2 43.3904 183.335 43.6822 183.659 cv
44.5397 184.611 45.5379 184.978 46.6057 185.055 cv
45.5958 185.799 44.5481 186.506 43.4587 187.103 cv
.113725 .0941176 .0823529 rgb
f
37.7433 188.673 mo
37.3376 188.509 36.986 188.182 36.7613 187.832 cv
36.6099 187.598 li
36.2497 187.038 36.3816 186.244 36.8148 185.767 cv
37.4661 185.702 38.1043 185.617 38.731 185.515 cv
38.8184 185.249 38.9619 184.995 39.1681 184.771 cv
39.4866 184.952 39.7467 185.213 39.9293 185.532 cv
39.9429 185.5 li
40.0142 185.687 li
40.0923 185.891 li
40.3912 186.687 40.4419 187.367 40.1099 188.266 cv
40.1013 188.289 40.0924 188.313 40.0831 188.336 cv
39.2967 188.422 38.5192 188.535 37.7433 188.673 cv
f
51.6306 180.363 mo
51.5455 180.363 51.4593 180.357 51.3728 180.346 cv
51.3868 180.335 51.4008 180.324 51.4146 180.312 cv
51.5103 180.231 51.5943 180.119 51.65 180.007 cv
51.9019 179.504 51.9088 178.759 51.5435 178.287 cv
51.8195 178.29 52.0733 178.297 52.2786 178.299 cv
52.5374 178.522 52.7475 178.784 52.8453 179.115 cv
52.9635 179.511 52.7632 179.932 52.4253 180.147 cv
52.1833 180.3 51.9121 180.363 51.6306 180.363 cv
.180392 .14902 .129412 rgb
f
50.329 180.735 mo
49.9632 180.735 49.5989 180.599 49.2847 180.312 cv
49.0816 180.126 48.897 179.935 48.7183 179.739 cv
48.4387 179.846 48.1777 179.905 47.8846 179.905 cv
47.6322 179.905 47.3561 179.861 47.024 179.767 cv
47.0063 179.762 46.989 179.757 46.9718 179.751 cv
47.477 179.218 47.9586 178.647 48.4257 178.038 cv
49.2536 177.298 50.0171 176.499 50.6396 175.619 cv
51.1404 175.5 51.6541 175.446 52.1724 175.418 cv
52.3545 175.408 52.5364 175.403 52.7181 175.403 cv
53.0936 175.403 53.4682 175.424 53.8409 175.461 cv
54.0122 176.457 54.1708 177.454 54.2732 178.466 cv
53.7194 178.358 53.1564 178.298 52.5755 178.298 cv
52.5383 178.298 52.5008 178.298 52.4634 178.299 cv
52.4378 178.299 52.411 178.299 52.3829 178.299 cv
52.3498 178.299 52.3149 178.299 52.2786 178.299 cv
52.0733 178.297 51.8195 178.29 51.5435 178.287 cv
51.9088 178.759 51.9019 179.504 51.65 180.007 cv
51.5943 180.119 51.5103 180.231 51.4146 180.312 cv
51.4008 180.324 51.3868 180.335 51.3728 180.346 cv
51.0546 180.602 50.691 180.735 50.329 180.735 cv
f
55.1359 172.357 mo
55.1175 172.162 55.0962 171.967 55.0734 171.772 cv
55.314 171.519 55.4395 171.141 55.3267 170.829 cv
55.2109 170.51 55.0487 170.231 54.8497 169.987 cv
54.8354 169.873 54.8046 169.771 54.7609 169.68 cv
55.5046 169.765 56.1987 170.256 56.5142 171.246 cv
56.5544 171.372 56.5919 171.499 56.6267 171.626 cv
56.0649 171.674 55.4993 171.936 55.1359 172.357 cv
.137255 .117647 .0980392 rgb
f
55.0734 171.772 mo
55.004 171.179 54.9195 170.588 54.8511 169.998 cv
54.8507 169.994 54.8502 169.99 54.8497 169.987 cv
55.0487 170.231 55.2109 170.51 55.3267 170.829 cv
55.4395 171.141 55.314 171.519 55.0734 171.772 cv
.203922 .168627 .145098 rgb
f
55.6546 178.687 mo
55.3412 178.438 55.2081 178.377 55.0103 177.461 cv
54.8101 176.533 55.0601 175.608 55.1578 174.693 cv
55.2402 173.914 55.2097 173.134 55.1359 172.357 cv
55.4993 171.936 56.0649 171.674 56.6267 171.626 cv
57.2863 174.032 56.9914 176.612 55.6546 178.687 cv
.180392 .14902 .129412 rgb
f
54.6192 179.977 mo
54.4648 179.838 54.365 179.634 54.3482 179.37 cv
54.3289 179.067 54.3035 178.766 54.2732 178.466 cv
54.1708 177.454 54.0122 176.457 53.8409 175.461 cv
53.644 174.317 53.4304 173.174 53.2665 172.012 cv
53.2272 171.734 53.1908 171.455 53.1581 171.174 cv
53.5697 170.653 54.0004 170.149 54.4577 169.668 cv
54.4795 169.667 54.5014 169.667 54.5231 169.667 cv
54.6027 169.667 54.682 169.671 54.7609 169.68 cv
54.8046 169.771 54.8354 169.873 54.8497 169.987 cv
54.8502 169.99 54.8507 169.994 54.8511 169.998 cv
54.9195 170.588 55.004 171.179 55.0734 171.772 cv
55.0962 171.967 55.1175 172.162 55.1359 172.357 cv
55.2097 173.134 55.2402 173.914 55.1578 174.693 cv
55.0601 175.608 54.8101 176.533 55.0103 177.461 cv
55.2081 178.377 55.3412 178.438 55.6546 178.687 cv
55.3603 179.144 55.0155 179.577 54.6192 179.977 cv
.290196 .247059 .215686 rgb
f
38.2893 188.785 mo
38.1012 188.785 37.9173 188.744 37.7433 188.673 cv
38.5192 188.535 39.2967 188.422 40.0831 188.336 cv
40.3313 188.309 40.5805 188.285 40.8307 188.263 cv
40.0456 188.52 39.2398 188.7 38.4117 188.779 cv
38.3707 188.783 38.33 188.785 38.2893 188.785 cv
.121569 .0941176 .0941176 rgb
f
90.9517 184.834 mo
90.9484 184.801 90.945 184.768 90.9414 184.734 cv
91.0098 184.565 91.0311 184.383 90.9904 184.213 cv
91.1315 184.344 91.2692 184.474 91.4046 184.605 cv
91.2506 184.66 91.0989 184.737 90.9517 184.834 cv
88.2156 182.681 mo
88.0783 182.624 87.9408 182.568 87.8031 182.512 cv
87.639 182.331 87.4805 182.144 87.3282 181.953 cv
87.6242 182.2 87.9373 182.426 88.263 182.64 cv
88.2469 182.653 88.2311 182.667 88.2156 182.681 cv
.160784 .133333 .109804 rgb
f
90.9414 184.734 mo
90.9175 184.513 90.8863 184.294 90.8388 184.08 cv
90.844 184.083 90.8493 184.086 90.8544 184.089 cv
90.9001 184.13 90.9454 184.172 90.9904 184.213 cv
91.0311 184.383 91.0098 184.565 90.9414 184.734 cv
88.0854 182.814 mo
87.9895 182.715 87.8955 182.614 87.8031 182.512 cv
87.9408 182.568 88.0783 182.624 88.2156 182.681 cv
88.1695 182.722 88.1259 182.767 88.0854 182.814 cv
.247059 .2 .168627 rgb
f
99.3958 187.357 mo
98.2062 187.357 96.9889 187.197 95.8305 186.935 cv
95.9579 186.691 96.0613 186.434 96.136 186.171 cv
96.8605 186.328 97.6023 186.422 98.3667 186.435 cv
98.4322 186.437 98.5224 186.437 98.6337 186.437 cv
99.5434 186.437 101.856 186.381 103.465 185.963 cv
103.591 186.088 103.716 186.216 103.842 186.342 cv
102.556 187.066 101.001 187.357 99.3958 187.357 cv
91.4046 184.605 mo
91.2692 184.474 91.1315 184.344 90.9904 184.213 cv
90.9454 184.172 90.9001 184.13 90.8544 184.089 cv
91.1376 184.236 91.4218 184.38 91.7074 184.522 cv
91.606 184.541 91.5048 184.568 91.4046 184.605 cv
.129412 .105882 .0901961 rgb
f
95.8305 186.935 mo
94.5238 186.64 93.2925 186.215 92.2632 185.743 cv
90.7244 185.038 89.2738 184.043 88.0854 182.814 cv
88.1259 182.767 88.1695 182.722 88.2156 182.681 cv
88.2311 182.667 88.2469 182.653 88.263 182.64 cv
89.0279 183.141 89.862 183.57 90.7037 184.01 cv
90.7487 184.034 90.7938 184.057 90.8388 184.08 cv
90.8863 184.294 90.9175 184.513 90.9414 184.734 cv
90.945 184.768 90.9484 184.801 90.9517 184.834 cv
91.0989 184.737 91.2506 184.66 91.4046 184.605 cv
91.5048 184.568 91.606 184.541 91.7074 184.522 cv
93.1343 185.227 94.5953 185.839 96.136 186.171 cv
96.0613 186.434 95.9579 186.691 95.8305 186.935 cv
.215686 .176471 .14902 rgb
f
103.842 186.342 mo
103.716 186.216 103.591 186.088 103.465 185.963 cv
104.187 185.775 104.768 185.515 105.017 185.154 cv
105.056 184.642 105.327 184.281 105.706 184.059 cv
105.774 184.127 105.848 184.191 105.928 184.248 cv
105.871 184.385 105.83 184.531 105.806 184.686 cv
105.696 184.768 105.59 184.861 105.493 184.977 cv
105.021 185.544 104.462 185.993 103.842 186.342 cv
f
105.928 184.248 mo
105.848 184.191 105.774 184.127 105.706 184.059 cv
105.837 183.982 105.981 183.922 106.133 183.878 cv
106.052 183.992 105.983 184.116 105.928 184.248 cv
.356863 .298039 .258824 rgb
f
95.0121 189.413 mo
94.389 189.265 93.8071 189.095 93.2861 188.912 cv
93.8056 188.798 94.3101 188.56 94.7171 188.261 cv
95.1762 188.137 95.6352 188.013 96.0933 187.889 cv
96.3023 187.832 96.4879 187.715 96.6568 187.575 cv
97.021 187.827 97.3921 188.041 97.7759 188.186 cv
98.3797 188.415 99.0084 188.542 99.6522 188.609 cv
98.0651 188.717 96.5431 189.025 95.0121 189.413 cv
105.531 188.993 mo
104.64 188.843 103.743 188.724 102.841 188.65 cv
103.109 188.645 103.377 188.64 103.645 188.64 cv
104.322 188.64 104.993 188.667 105.649 188.765 cv
105.738 188.779 105.827 188.791 105.916 188.804 cv
105.79 188.87 105.662 188.933 105.531 188.993 cv
88.7945 186.827 mo
88.3948 186.597 88.0013 186.357 87.6179 186.105 cv
87.8567 186.083 88.0938 186.06 88.3282 186.038 cv
88.4339 186.342 88.5906 186.6 88.7945 186.827 cv
87.1698 185.802 mo
87.0308 185.705 86.8935 185.607 86.7579 185.507 cv
87.2135 185.279 87.6061 184.964 87.8091 184.536 cv
87.8188 184.503 li
87.8917 184.536 87.9646 184.569 88.0372 184.602 cv
88.0602 184.636 88.085 184.671 88.1119 184.706 cv
88.2521 184.886 88.2307 185.387 88.263 185.732 cv
87.9043 185.759 87.5393 185.783 87.1698 185.802 cv
87.8031 182.512 mo
87.5035 182.391 87.2029 182.273 86.901 182.159 cv
86.9507 181.988 86.9742 181.811 86.9705 181.637 cv
87.0865 181.746 87.2059 181.852 87.3282 181.953 cv
87.4805 182.144 87.639 182.331 87.8031 182.512 cv
85.7938 180.182 mo
85.5581 180.106 85.3332 180.013 85.1165 179.907 cv
85.2548 179.961 85.3916 180.016 85.5259 180.072 cv
85.6102 180.107 85.6935 180.133 85.7752 180.15 cv
85.7813 180.161 85.7875 180.171 85.7938 180.182 cv
.137255 .117647 .0980392 rgb
f
88.0372 184.602 mo
87.9646 184.569 87.8917 184.536 87.8188 184.503 cv
87.8775 184.305 li
87.9209 184.404 87.9717 184.503 88.0372 184.602 cv
87.7906 183.366 mo
87.6998 183.202 87.5787 183.053 87.3931 182.948 cv
86.8665 182.653 86.2228 182.625 85.5914 182.625 cv
85.518 182.625 85.4448 182.625 85.3719 182.626 cv
85.2991 182.626 85.2266 182.626 85.1548 182.626 cv
84.9764 182.626 84.8016 182.624 84.6334 182.614 cv
84.6028 182.612 84.5724 182.611 84.5424 182.611 cv
84.3325 182.611 84.1347 182.656 83.9541 182.736 cv
83.8797 182.619 83.8099 182.502 83.7442 182.384 cv
84.2242 181.558 83.856 180.173 83.108 179.071 cv
83.7387 179.399 84.4453 179.645 85.1165 179.907 cv
85.3332 180.013 85.5581 180.106 85.7938 180.182 cv
86.1245 180.741 86.5231 181.218 86.9705 181.637 cv
86.9742 181.811 86.9507 181.988 86.901 182.159 cv
87.2029 182.273 87.5035 182.391 87.8031 182.512 cv
87.8955 182.614 87.9895 182.715 88.0854 182.814 cv
87.949 182.972 87.846 183.16 87.7906 183.366 cv
.203922 .168627 .145098 rgb
f
105.916 188.804 mo
105.827 188.791 105.738 188.779 105.649 188.765 cv
104.993 188.667 104.322 188.64 103.645 188.64 cv
103.377 188.64 103.109 188.645 102.841 188.65 cv
102.189 188.597 101.534 188.568 100.875 188.568 cv
100.844 188.568 100.814 188.568 100.784 188.568 cv
100.402 188.57 100.025 188.584 99.6522 188.609 cv
99.0084 188.542 98.3797 188.415 97.7759 188.186 cv
97.3921 188.041 97.021 187.827 96.6568 187.575 cv
96.4879 187.715 96.3023 187.832 96.0933 187.889 cv
95.6352 188.013 95.1762 188.137 94.7171 188.261 cv
94.7916 188.206 94.8628 188.149 94.9303 188.091 cv
95.2896 187.779 95.5994 187.379 95.8305 186.935 cv
96.9889 187.197 98.2062 187.357 99.3958 187.357 cv
101.001 187.357 102.556 187.066 103.842 186.342 cv
104.598 187.103 105.375 187.838 106.33 188.07 cv
106.521 188.116 106.712 188.15 106.904 188.171 cv
106.598 188.407 106.268 188.618 105.916 188.804 cv
.113725 .0941176 .0823529 rgb
f
83.7442 182.384 mo
83.0382 181.113 82.8069 179.747 82.5176 178.35 cv
82.7606 178.389 83.0025 178.4 83.2467 178.4 cv
83.4076 178.4 83.5694 178.395 83.7332 178.39 cv
83.8968 178.385 84.0623 178.381 84.2306 178.381 cv
84.3834 178.381 84.5386 178.384 84.6968 178.396 cv
84.7872 178.402 84.8757 178.41 84.9625 178.419 cv
85.1647 178.919 85.3829 179.424 85.6558 179.936 cv
85.6945 180.009 85.7343 180.08 85.7752 180.15 cv
85.6935 180.133 85.6102 180.107 85.5259 180.072 cv
85.3916 180.016 85.2548 179.961 85.1165 179.907 cv
84.4453 179.645 83.7387 179.399 83.108 179.071 cv
83.856 180.173 84.2242 181.558 83.7442 182.384 cv
.180392 .14902 .129412 rgb
f
93.2861 188.912 mo
93.1452 188.862 93.0092 188.812 92.8775 188.761 cv
91.546 188.241 90.1355 187.597 88.7945 186.827 cv
88.5906 186.6 88.4339 186.342 88.3282 186.038 cv
88.4865 186.023 88.6435 186.008 88.7994 185.993 cv
88.9876 185.975 88.9954 185.688 88.8147 185.688 cv
88.8097 185.688 88.8046 185.688 88.7994 185.689 cv
88.6224 185.704 88.4433 185.718 88.263 185.732 cv
88.2307 185.387 88.2521 184.886 88.1119 184.706 cv
88.085 184.671 88.0602 184.636 88.0372 184.602 cv
87.9717 184.503 87.9209 184.404 87.8775 184.305 cv
87.8188 184.503 li
87.8091 184.536 li
87.6061 184.964 87.2135 185.279 86.7579 185.507 cv
86.0126 184.958 85.322 184.363 84.7193 183.72 cv
84.4197 183.4 84.1681 183.071 83.9541 182.736 cv
84.1347 182.656 84.3325 182.611 84.5424 182.611 cv
84.5724 182.611 84.6028 182.612 84.6334 182.614 cv
84.8016 182.624 84.9764 182.626 85.1548 182.626 cv
85.2266 182.626 85.2991 182.626 85.3719 182.626 cv
85.4448 182.625 85.518 182.625 85.5914 182.625 cv
86.2228 182.625 86.8665 182.653 87.3931 182.948 cv
87.5787 183.053 87.6998 183.202 87.7906 183.366 cv
87.846 183.16 87.949 182.972 88.0854 182.814 cv
89.2738 184.043 90.7244 185.038 92.2632 185.743 cv
93.2925 186.215 94.5238 186.64 95.8305 186.935 cv
95.5994 187.379 95.2896 187.779 94.9303 188.091 cv
94.8628 188.149 94.7916 188.206 94.7171 188.261 cv
94.3101 188.56 93.8056 188.798 93.2861 188.912 cv
f
108.318 184.602 mo
108.305 184.602 108.293 184.602 108.28 184.602 cv
108.133 184.597 107.987 184.561 107.843 184.503 cv
108.005 184.448 108.152 184.374 108.284 184.286 cv
108.386 184.373 108.475 184.472 108.548 184.582 cv
108.47 184.595 108.393 184.602 108.318 184.602 cv
.137255 .117647 .0980392 rgb
f
106.904 188.171 mo
106.712 188.15 106.521 188.116 106.33 188.07 cv
105.375 187.838 104.598 187.103 103.842 186.342 cv
104.462 185.993 105.021 185.544 105.493 184.977 cv
105.59 184.861 105.696 184.768 105.806 184.686 cv
105.83 184.531 105.871 184.385 105.928 184.248 cv
106.24 184.475 106.642 184.614 107.133 184.614 cv
107.395 184.614 107.632 184.574 107.843 184.503 cv
107.987 184.561 108.133 184.597 108.28 184.602 cv
108.293 184.602 108.305 184.602 108.318 184.602 cv
108.393 184.602 108.47 184.595 108.548 184.582 cv
108.781 184.935 108.841 185.401 108.607 185.967 cv
108.232 186.873 107.643 187.599 106.904 188.171 cv
.180392 .14902 .129412 rgb
f
84.9625 178.419 mo
84.8757 178.41 84.7872 178.402 84.6968 178.396 cv
84.5386 178.384 84.3834 178.381 84.2306 178.381 cv
84.0623 178.381 83.8968 178.385 83.7332 178.39 cv
83.5694 178.395 83.4076 178.4 83.2467 178.4 cv
83.0025 178.4 82.7606 178.389 82.5176 178.35 cv
82.373 177.652 82.214 176.947 81.9739 176.242 cv
82.8061 176.58 83.6427 176.907 84.4844 177.219 cv
84.6469 177.616 84.7995 178.016 84.9625 178.419 cv
.290196 .247059 .215686 rgb
f
107.133 184.614 mo
106.642 184.614 106.24 184.475 105.928 184.248 cv
105.983 184.116 106.052 183.992 106.133 183.878 cv
106.344 183.817 106.571 183.787 106.8 183.787 cv
107.348 183.787 107.906 183.959 108.284 184.286 cv
108.152 184.374 108.005 184.448 107.843 184.503 cv
107.632 184.574 107.395 184.614 107.133 184.614 cv
f
87.6179 186.105 mo
87.4669 186.006 87.3173 185.904 87.1698 185.802 cv
87.5393 185.783 87.9043 185.759 88.263 185.732 cv
88.4433 185.718 88.6224 185.704 88.7994 185.689 cv
88.8046 185.688 88.8097 185.688 88.8147 185.688 cv
88.9954 185.688 88.9876 185.975 88.7994 185.993 cv
88.6435 186.008 88.4865 186.023 88.3282 186.038 cv
88.0938 186.06 87.8567 186.083 87.6179 186.105 cv
f
100.059 190.009 mo
98.2991 190.009 96.5306 189.774 95.0121 189.413 cv
96.5431 189.025 98.0651 188.717 99.6522 188.609 cv
100.025 188.584 100.402 188.57 100.784 188.568 cv
100.814 188.568 100.844 188.568 100.875 188.568 cv
101.534 188.568 102.189 188.597 102.841 188.65 cv
103.743 188.724 104.64 188.843 105.531 188.993 cv
103.953 189.72 102.012 190.009 100.059 190.009 cv
84.4844 177.219 mo
83.6427 176.907 82.8061 176.58 81.9739 176.242 cv
81.9053 176.04 81.8301 175.839 81.7467 175.638 cv
81.4865 175.01 82.0167 174.606 82.5586 174.606 cv
82.8467 174.606 83.1383 174.721 83.316 174.976 cv
83.833 175.719 84.1764 176.465 84.4844 177.219 cv
.121569 .0941176 .0941176 rgb
f
49.2857 168.332 mo
45.6597 162.137 41.4918 156.148 39.3101 149.251 cv
36.9507 141.796 36.0191 134.774 37.5181 127.076 cv
37.6783 126.254 37.2935 125.491 36.7086 124.995 cv
37.1754 124.389 37.7056 123.918 38.3101 123.683 cv
39.7632 123.119 39.4898 121.199 37.9507 121.025 cv
32.7457 120.44 30.6041 128.063 29.4556 131.834 cv
27.5211 138.183 25.5513 144.534 24.5875 151.118 cv
23.7007 157.183 23.3843 163.204 25.3248 169.099 cv
26.2623 171.948 27.5796 174.681 29.1197 177.25 cv
30.4644 179.492 32.0572 182.477 34.0757 184.188 cv
37.8384 187.378 44.3931 181.963 47.3531 179.63 cv
51.6402 176.249 52.0054 172.981 49.2857 168.332 cv
cp
.403922 .352941 .341176 rgb
f
31.4009 158.924 mo
31.3736 158.819 31.3492 158.68 31.3287 158.522 cv
31.2955 157.545 31.2623 156.568 31.2271 155.591 cv
31.2086 155.08 30.9879 154.706 30.6754 154.463 cv
30.6666 154.286 30.6539 154.11 30.6461 153.931 cv
30.7017 153.319 30.4029 152.92 29.983 152.724 cv
29.8619 152.392 29.6373 152.163 29.3658 152.035 cv
29.2037 151.816 28.9859 151.632 28.6871 151.502 cv
27.6295 151.044 26.7105 151.598 26.5601 152.723 cv
26.2847 154.771 26.5963 157.118 27.2398 159.125 cv
27.2652 159.41 27.2798 159.698 27.315 159.981 cv
27.3472 160.229 27.4312 160.441 27.5474 160.622 cv
27.7056 161.3 27.9849 161.893 28.6568 162.316 cv
29.3853 162.775 30.3004 162.212 30.3814 161.413 cv
31.0445 161.336 31.4048 161.15 31.8082 160.592 cv
32.2027 160.047 31.9234 159.28 31.4009 158.924 cv
cp
.576471 .517647 .509804 rgb
f
31.1636 140.541 mo
31.231 139.886 31.3043 139.229 31.3765 138.572 cv
31.5914 136.607 28.2349 136.137 27.9029 138.101 cv
27.731 139.017 27.5816 139.934 27.4722 140.854 cv
27.2339 142.495 27.0328 144.143 26.9127 145.794 cv
26.7652 147.815 29.5074 147.894 30.1607 146.269 cv
30.5904 145.978 30.9244 145.501 31.0123 144.836 cv
31.1343 143.907 31.6871 141.758 31.1636 140.541 cv
cp
f
35.6041 126.392 mo
35.7164 124.577 32.9341 124.604 32.7916 126.392 cv
32.6636 128 32.1412 129.554 31.4166 130.987 cv
30.8697 132.067 32.3365 133.419 33.2007 132.364 cv
34.022 131.361 34.6041 130.285 35.0025 129.131 cv
35.3834 128.271 35.5484 127.289 35.6041 126.392 cv
cp
f
39.3921 173.394 mo
39.1617 171.576 38.4937 170.039 37.2437 168.686 cv
37.1031 168.535 36.9468 168.428 36.7818 168.355 cv
36.524 167.834 36.2701 167.333 36.0455 166.861 cv
35.4849 165.685 33.9615 165.798 33.1285 166.529 cv
32.9078 166.52 32.6832 166.559 32.4654 166.636 cv
31.5455 165.758 29.6998 166.405 30.19 167.877 cv
31.1783 170.842 32.2339 173.763 34.2857 176.172 cv
34.6734 176.627 35.1617 176.753 35.6295 176.669 cv
36.6158 177.431 38.105 176.961 38.4654 175.738 cv
38.5425 175.474 38.5884 175.207 38.6216 174.937 cv
39.1392 174.67 39.4888 174.159 39.3921 173.394 cv
cp
f
44.1129 179.301 mo
42.5201 177.775 40.1451 178.994 38.6207 180.036 cv
38.3941 180.191 38.2144 180.367 38.0767 180.556 cv
37.567 180.789 37.1656 181.1 36.8336 181.627 cv
36.2105 182.614 37.0523 183.635 38.0484 183.745 cv
38.9039 183.839 40.0035 183.705 40.8296 183.461 cv
41.2437 183.338 41.5699 183.141 41.8609 182.915 cv
42.188 182.756 42.5084 182.581 42.8101 182.372 cv
43.0806 182.185 43.2935 181.939 43.4498 181.666 cv
43.7955 181.401 44.0943 181.092 44.2916 180.688 cv
44.5132 180.235 44.4976 179.669 44.1129 179.301 cv
cp
f
51.856 172.419 mo
51.774 172.168 51.692 171.917 51.6099 171.667 cv
51.4683 171.231 51.1685 170.964 50.8257 170.847 cv
51.1041 169.876 50.2545 169.16 49.4068 169.144 cv
48.3599 167.808 47.3228 166.468 46.2955 165.124 cv
46.1939 164.707 45.897 164.337 45.5211 164.114 cv
45.3961 163.947 li
45.6763 162.957 44.8707 162.182 43.9586 162.02 cv
43.9546 162.014 li
44.2164 160.993 43.4839 160.236 42.5865 160.006 cv
42.7017 159.657 42.8062 159.306 42.9312 158.957 cv
43.2496 158.062 42.6197 157.047 41.7603 156.732 cv
41.7193 155.104 41.2408 153.589 40.2095 152.125 cv
39.7603 151.489 39.1529 151.233 38.5308 151.317 cv
38.4488 151.21 38.358 151.111 38.2564 151.028 cv
38.3306 150.705 38.4068 150.384 38.481 150.061 cv
38.6763 149.211 38.2457 148.439 37.5884 148.072 cv
36.9087 141.207 36.3697 134.457 37.3892 127.482 cv
37.4937 126.768 36.4127 126.445 36.2857 127.178 cv
36.1265 128.096 35.98 129.021 35.8443 129.95 cv
35.7691 130.023 35.7037 130.113 35.6646 130.237 cv
35.1363 131.958 34.6187 133.833 34.1754 135.718 cv
33.6773 135.185 33.1597 134.669 32.6529 134.145 cv
32.2808 133.761 31.6275 133.772 31.2545 134.145 cv
30.8404 134.558 30.9214 135.123 31.2545 135.543 cv
31.7144 136.123 32.1646 136.712 32.6343 137.284 cv
32.9175 137.628 33.2525 137.964 33.6412 138.188 cv
33.4605 139.115 33.3043 140.028 33.1832 140.91 cv
32.9781 142.411 32.9488 143.812 33.189 145.303 cv
32.4332 145.506 31.7193 145.863 30.9742 146.143 cv
29.8755 146.557 28.7877 146.889 27.6363 147.124 cv
26.6138 147.333 26.8394 148.994 27.8834 148.947 cv
29.48 148.874 31.564 148.816 33.2418 148.188 cv
33.1529 149.161 33.0103 150.133 32.9986 151.174 cv
32.9888 151.966 33.5513 152.596 34.2379 152.845 cv
34.2037 152.995 li
34.0464 153.699 34.2496 154.267 34.6314 154.642 cv
34.5533 154.824 li
33.8726 156.384 35.8648 158.448 37.1675 156.842 cv
37.4712 156.468 37.7681 156.134 38.0748 155.815 cv
38.0992 155.927 38.1129 156.04 38.1285 156.154 cv
37.7769 156.436 37.5816 156.91 37.7603 157.448 cv
36.689 158.305 35.5767 159.108 34.4263 159.859 cv
32.1509 161.343 29.8209 162.716 27.3492 163.847 cv
26.5347 164.22 27.1119 165.556 27.9576 165.289 cv
30.9068 164.359 33.772 163.261 36.4644 161.727 cv
36.9859 161.43 37.7789 161.033 38.5308 160.546 cv
38.3629 161.12 38.1949 161.694 38.0562 162.286 cv
37.7789 163.468 38.5445 164.377 39.5328 164.555 cv
39.5045 164.78 39.4732 165.002 39.4517 165.237 cv
39.3619 166.188 39.9732 166.741 40.7203 166.906 cv
40.6802 167.019 40.6402 167.132 40.6002 167.245 cv
40.2271 168.294 40.9781 169.052 41.8629 169.212 cv
41.816 169.347 41.7662 169.48 41.7203 169.615 cv
41.4 170.552 42.0054 171.22 42.7681 171.408 cv
42.7476 171.507 42.7486 171.606 42.7486 171.704 cv
41.4039 172.521 40.2115 173.726 38.9107 174.538 cv
36.9087 175.789 34.2339 177.203 31.7847 176.917 cv
31.3033 176.861 30.9517 177.432 31.0738 177.85 cv
31.1119 177.98 31.149 178.109 31.1871 178.239 cv
31.2789 178.555 31.5513 178.884 31.8921 178.945 cv
34.3326 179.382 36.9351 178.516 39.108 177.44 cv
40.8189 176.592 43.1109 175.397 44.5699 173.827 cv
44.5826 173.973 44.5806 174.114 44.6011 174.264 cv
44.1812 174.515 43.9019 174.995 44.0474 175.638 cv
44.147 176.076 44.2466 176.514 44.3462 176.951 cv
44.4849 177.562 45.0777 177.929 45.6646 177.934 cv
45.8795 178.153 46.1656 178.309 46.4673 178.399 cv
46.9097 179.396 48.4908 179.851 49.0396 178.631 cv
49.7857 176.974 50.7037 175.555 51.2398 173.935 cv
51.7447 173.653 52.0757 173.094 51.856 172.419 cv
cp
.286275 .235294 .227451 rgb
f
50.5777 172.637 mo
50.2515 173.055 49.9234 173.472 49.5953 173.888 cv
49.7789 173.129 49.941 172.366 50.0621 171.579 cv
50.106 171.292 50.024 170.981 49.8697 170.717 cv
50.2027 170.207 50.0796 169.677 49.7427 169.297 cv
49.9732 168.518 49.6822 167.467 48.7466 167.32 cv
48.6578 167.306 li
47.8492 164.804 46.7144 162.757 44.8687 160.778 cv
43.6675 159.49 43.0611 158.232 42.2623 156.712 cv
41.606 155.463 41.2564 154.805 39.9459 154.196 cv
39.6587 154.062 39.2632 154.052 38.9498 154.186 cv
39.063 153.476 39.1763 152.766 39.2828 152.051 cv
39.3902 151.328 39.0113 150.624 38.3648 150.451 cv
38.5523 149.477 38.7379 148.5 39.107 147.635 cv
39.5972 146.482 38.8541 145.355 37.6246 145.455 cv
37.6822 145.052 37.73 144.642 37.7642 144.206 cv
37.8023 143.724 37.3082 143.254 36.8365 143.279 cv
36.5318 143.295 36.2271 143.315 35.9234 143.334 cv
36.2711 142.402 36.6265 141.473 37.025 140.56 cv
37.2496 140.045 36.9947 139.414 36.3648 139.41 cv
35.9254 139.341 35.4849 139.272 35.0445 139.203 cv
34.1177 138.893 33.733 140.175 34.4234 140.677 cv
34.607 140.811 34.7554 140.91 34.8912 140.991 cv
34.1666 142.051 33.4195 143.095 32.6744 144.144 cv
31.9156 145.212 33.1646 146.417 34.2476 146.19 cv
34.4527 146.147 34.6392 146.097 34.8277 146.049 cv
34.7173 146.248 34.6089 146.446 34.4976 146.648 cv
34.0171 147.523 34.6841 148.803 35.6783 148.774 cv
35.5337 149.77 35.5113 150.795 35.3199 151.96 cv
35.1851 152.779 35.7496 153.555 36.4937 153.615 cv
36.3257 154.97 36.1587 156.32 35.9273 157.675 cv
35.774 158.574 36.4078 159.262 37.2017 159.234 cv
37.5992 159.534 38.1666 159.561 38.6382 159.299 cv
38.773 159.82 38.9488 160.347 39.1773 160.892 cv
39.6939 162.123 41.317 161.885 41.4849 160.747 cv
41.8843 161.538 42.4742 162.207 42.9478 162.956 cv
44.2476 165.014 45.0347 167.337 45.9918 169.561 cv
46.0709 169.745 46.2212 169.911 46.4039 170.044 cv
46.3375 170.357 46.3882 170.659 46.5259 170.919 cv
46.0523 171.637 45.5738 172.353 45.108 173.077 cv
44.3238 174.299 46.0787 175.59 47.0865 174.603 cv
47.3472 174.347 47.6138 174.097 47.8785 173.846 cv
47.8423 174.807 47.7398 175.819 47.4937 176.628 cv
47.0836 177.186 46.6822 177.75 46.3013 178.328 cv
46.2828 178.354 li
46.274 178.367 li
46.2769 178.368 li
45.7837 179.21 46.9644 180.433 47.8082 179.551 cv
48.7691 178.548 49.6607 177.483 50.5367 176.405 cv
50.982 175.874 51.4166 175.334 51.8462 174.789 cv
51.9781 174.626 52.1089 174.463 52.2408 174.301 cv
52.2379 174.297 li
52.4254 174.062 li
53.2281 173.012 51.398 171.583 50.5777 172.637 cv
cp
.239216 .188235 .184314 rgb
f
36.0259 136.598 mo
35.7466 136.598 35.7466 137.033 36.0259 137.033 cv
36.3052 137.033 36.3052 136.598 36.0259 136.598 cv
cp
f
36.2349 124.235 mo
35.9244 127.841 34.7457 131.853 35.1978 135.457 cv
35.2964 136.251 36.2496 136.379 36.5601 135.641 cv
37.9781 132.273 37.6597 127.827 37.814 124.235 cv
37.857 123.21 36.3209 123.237 36.2349 124.235 cv
cp
f
35.9029 184.173 mo
34.8355 183.234 33.855 182.261 32.9546 181.256 cv
36.3238 181.607 39.6851 180.849 42.4859 178.792 cv
45.5777 176.524 47.2212 172.951 48.7994 169.507 cv
49.1539 169.934 49.5123 170.355 49.8755 170.767 cv
49.8599 170.914 49.857 171.066 49.8863 171.231 cv
51.1129 178.037 42.1802 184.374 35.9029 184.173 cv
cp
42.0357 159.493 mo
43.4683 162.059 45.0464 164.551 46.7564 166.88 cv
43.7711 173.082 40.4185 179.874 32.1548 178.16 cv
31.5836 178.042 31.1148 178.23 30.7906 178.557 cv
28.1734 174.922 26.4605 170.934 25.4713 166.679 cv
31.3902 168.279 38.6441 164.708 42.0357 159.493 cv
cp
24.5347 152.258 mo
24.6109 151.209 24.7437 150.177 24.9009 149.152 cv
28.6431 151.72 33.19 151.144 37.2505 149.299 cv
38.1509 151.647 39.2105 154.021 40.3834 156.367 cv
38.2252 161.695 29.9918 165.958 24.8267 163.276 cv
24.3267 159.746 24.2593 156.059 24.5347 152.258 cv
cp
28.9576 135.232 mo
30.524 137.03 32.6324 138.153 35.0142 138.31 cv
35.0845 141.087 35.4712 143.835 36.2711 146.499 cv
32.8336 148.151 28.7847 148.93 25.7213 146.047 cv
25.5171 145.89 li
26.3492 142.264 27.5845 138.744 28.9576 135.232 cv
cp
37.4732 121.85 mo
36.2359 126.214 35.2837 130.791 35.0582 135.343 cv
33.481 135.194 32.0103 134.47 31.0308 133.161 cv
30.7642 132.805 30.4166 132.619 30.0562 132.557 cv
31.8433 128.479 34.1109 124.684 37.4732 121.85 cv
cp
53.0777 169.892 mo
51.9224 168.667 50.8082 167.337 49.7379 165.935 cv
49.6832 165.845 49.6187 165.761 49.5474 165.682 cv
45.3746 160.154 41.9175 153.5 39.6529 147.299 cv
39.6558 146.965 39.5377 146.631 39.3384 146.353 cv
36.4761 137.571 38.6187 127.793 41.3668 119.197 cv
41.5552 118.605 41.3785 118.127 41.0367 117.808 cv
40.6763 117.142 39.8716 116.703 39.0191 117.182 cv
33.4302 120.323 29.8853 125.514 27.3795 131.297 cv
24.6548 137.586 22.2134 144.259 21.6558 151.125 cv
20.5562 164.682 23.3365 177.197 33.9986 186.441 cv
34.1597 186.58 34.3296 186.673 34.5015 186.734 cv
34.7252 186.931 35.0152 187.068 35.3765 187.102 cv
43.3121 187.849 53.0611 180.352 52.9009 172.074 cv
53.5025 171.567 53.774 170.631 53.0777 169.892 cv
cp
.156863 .113725 .113725 rgb
f
103.696 163.577 mo
101.641 162.57 99.7496 162.345 98.0259 162.76 cv
97.9039 162.61 97.7505 162.483 97.5572 162.391 cv
93.3668 160.395 89.7095 165.6 88.0416 168.837 cv
85.5084 173.753 84.3511 178.199 88.5709 182.554 cv
91.69 185.772 97.9156 189.342 102.405 187.012 cv
104.486 185.931 105.698 183.536 106.95 181.66 cv
108.348 179.566 110.734 177.066 111.061 174.462 cv
111.622 170.002 107.386 165.387 103.696 163.577 cv
cp
.403922 .352941 .341176 rgb
f
97.1002 171.202 mo
97.0084 171.068 96.9088 170.934 96.8062 170.801 cv
96.4068 169.742 95.5767 168.888 94.4019 168.766 cv
94.1783 168.743 93.9654 168.749 93.7632 168.78 cv
93.1636 168.782 92.5816 169.039 92.3033 169.62 cv
92.105 169.892 91.9586 170.197 91.8541 170.517 cv
91.7437 170.714 91.6509 170.919 91.5923 171.137 cv
91.3531 172.046 91.5845 172.826 92.0797 173.551 cv
92.4771 174.362 93.1441 175.031 93.9224 175.269 cv
94.9556 176.472 96.8502 176.654 97.7193 175.125 cv
98.4 173.929 97.8199 172.247 97.1002 171.202 cv
cp
.576471 .517647 .509804 rgb
f
91.7447 179.712 mo
91.7164 179.56 91.6793 179.414 91.6451 179.265 cv
91.69 179.158 li
91.7955 178.764 91.7632 178.416 91.5679 178.06 cv
91.4429 177.832 91.2925 177.712 91.1187 177.571 cv
90.65 176.39 90.0123 175.299 89.2925 174.186 cv
88.6402 173.178 86.9732 172.997 86.3638 174.186 cv
85.6568 175.569 86.1373 177.211 86.8765 178.508 cv
87.0982 178.897 87.3775 179.24 87.7007 179.535 cv
88.0074 180.2 88.4156 180.812 88.9761 181.324 cv
90.2457 182.483 92.0445 181.325 91.7447 179.712 cv
cp
f
105.734 166.376 mo
104.986 165.935 104.043 166.22 103.469 166.802 cv
103.389 166.627 103.285 166.464 103.128 166.337 cv
103.005 166.237 102.886 166.131 102.761 166.032 cv
102.803 165.899 li
103.008 164.982 102.352 163.751 101.257 163.868 cv
100.819 163.915 100.403 164.035 100.034 164.217 cv
99.6373 164.098 99.0748 163.886 99.0181 163.868 cv
97.6343 163.447 96.6988 165.238 97.6451 166.225 cv
97.8931 166.567 98.1255 166.917 98.3453 167.276 cv
98.5435 167.587 98.857 167.722 99.1705 167.724 cv
99.2164 167.787 li
99.0494 168.087 98.9361 168.41 98.9185 168.757 cv
98.8882 169.364 99.1187 169.922 99.5787 170.325 cv
99.8043 170.523 100.034 170.64 100.31 170.751 cv
101.21 170.923 li
101.329 171.116 101.774 171.807 102.11 171.994 cv
102.679 172.312 103.338 172.298 103.963 172.236 cv
104.089 172.224 104.385 172.234 104.605 172.214 cv
104.699 172.363 104.814 172.52 104.863 172.593 cv
105.276 173.202 105.862 173.608 106.582 173.748 cv
107.608 173.949 108.516 173.465 108.858 172.456 cv
109.654 170.106 107.674 167.52 105.734 166.376 cv
cp
f
98.3609 180.21 mo
98.2408 180.365 98.147 180.536 98.0816 180.717 cv
97.9439 180.299 97.8297 180.013 97.7838 180.035 cv
97.8365 180.009 98.0767 180.107 98.3609 180.21 cv
cp
109.024 176.511 mo
109.016 176.103 108.811 175.693 108.432 175.453 cv
107.404 174.802 106.445 175.321 105.334 175.628 cv
104.983 175.725 104.722 175.924 104.537 176.169 cv
104.274 176.131 104.008 176.081 103.739 176.031 cv
102.741 175.846 101.907 176.468 101.608 177.25 cv
101.429 177.182 101.251 177.113 101.07 177.044 cv
100.603 176.865 100.17 176.925 99.814 177.127 cv
99.6548 176.813 99.481 176.533 99.3238 176.325 cv
99.0093 175.908 98.1695 175.834 98.0562 176.49 cv
97.9947 176.847 97.8433 177.568 97.9527 178.023 cv
97.7857 177.998 97.5884 178.022 97.4556 178.043 cv
96.4566 178.196 95.9 179.218 95.9097 180.157 cv
95.9166 180.875 96.1851 181.635 96.3404 182.329 cv
96.3892 182.548 96.4468 182.841 96.481 183.121 cv
95.9957 182.806 95.5142 182.481 95.0318 182.131 cv
94.7662 181.995 li
94.4693 181.575 94.1187 181.239 93.6519 181.224 cv
92.9634 181.202 92.4605 181.914 92.6363 182.557 cv
92.9478 183.694 94.0289 185.171 95.2408 185.945 cv
95.4146 186.314 95.7115 186.636 96.1705 186.823 cv
96.6177 187.005 97.0494 187.164 97.4761 187.305 cv
97.648 187.373 97.816 187.449 97.9859 187.52 cv
98.3121 187.67 98.6451 187.813 98.9898 187.945 cv
99.4263 188.112 99.8277 188.054 100.159 187.863 cv
100.84 187.912 101.541 187.894 102.294 187.783 cv
103.667 187.579 103.799 185.837 103.1 184.946 cv
103.117 184.945 li
104.192 184.845 104.878 183.915 104.799 183.019 cv
105.465 182.711 105.834 182.033 105.792 181.355 cv
106.006 181.324 106.221 181.293 106.443 181.244 cv
107.307 181.057 107.836 180.091 107.739 179.235 cv
107.965 179.156 108.193 179.063 108.422 178.956 cv
109.333 178.53 109.477 177.326 109.024 176.511 cv
cp
.286275 .235294 .227451 rgb
f
109.186 175.237 mo
108.857 175.211 108.505 175.301 108.209 175.475 cv
107.773 175.687 107.378 176.012 107.039 176.329 cv
106.657 176.685 106.339 177.135 106.149 177.628 cv
105.967 177.926 105.842 178.261 105.798 178.584 cv
105.783 178.699 105.783 178.811 105.791 178.921 cv
105.648 178.918 105.506 178.926 105.375 178.95 cv
104.184 179.168 102.974 180.8 101.823 180.433 cv
100.199 179.916 99.3248 181.962 100.278 183.088 cv
100.317 183.236 100.357 183.384 100.397 183.532 cv
99.9713 183.564 99.5279 183.658 99.0621 183.811 cv
98.5816 183.969 98.2047 184.368 98.0191 184.83 cv
97.8472 184.838 li
95.605 183.74 93.3082 182.711 90.9498 181.92 cv
89.5953 181.466 88.9117 183.41 90.0162 184.136 cv
90.5953 184.516 91.1617 184.853 91.7515 185.139 cv
93.772 186.25 95.8853 187.218 97.9937 188.127 cv
98.6607 188.415 99.4341 188.14 99.8814 187.654 cv
100.132 187.624 100.389 187.582 100.662 187.531 cv
100.903 187.485 101.096 187.372 101.259 187.23 cv
101.838 187.418 102.527 187.233 102.984 186.837 cv
104.129 185.843 104.342 184.694 104.054 183.56 cv
104.646 183.178 105.061 182.327 105.619 181.892 cv
106.364 181.998 107.163 181.644 107.187 180.76 cv
107.242 180.514 107.223 180.283 107.156 180.057 cv
107.503 180.136 107.878 180.102 108.222 179.903 cv
108.543 179.715 108.858 179.447 109.086 179.153 cv
109.275 178.893 li
109.396 178.736 109.52 178.582 109.635 178.419 cv
109.701 178.326 109.768 178.231 109.832 178.137 cv
109.851 178.11 li
110.041 177.865 li
110.238 177.588 110.428 177.297 110.498 176.958 cv
110.685 176.044 110.104 175.31 109.186 175.237 cv
cp
.239216 .188235 .184314 rgb
f
109.725 173.639 mo
109.609 173.652 109.493 173.669 109.366 173.716 cv
108.802 173.925 106.678 173.919 105.186 173.832 cv
105.312 173.452 105.315 173.027 105.134 172.683 cv
105.105 172.528 li
105.007 172.169 104.786 171.846 104.494 171.62 cv
104.293 171.465 104.073 171.349 103.824 171.288 cv
103.579 171.055 103.26 170.906 102.873 170.924 cv
102.31 170.949 101.691 171.324 101.471 171.87 cv
100.97 170.988 100.688 169.924 100.187 168.873 cv
99.691 167.832 99.0679 166.787 98.0357 166.186 cv
97.0054 165.586 92.5504 165.408 93.7886 163.145 cv
93.7906 163.139 li
94.3111 162.98 94.7886 162.774 95.2339 162.65 cv
96.3619 162.334 97.6275 162.267 98.8677 162.431 cv
98.858 162.584 98.8648 162.742 98.9019 162.902 cv
99.0728 163.643 99.563 164.382 100.278 164.683 cv
100.77 164.891 101.367 164.862 101.831 164.583 cv
102.069 164.403 li
102.325 164.388 102.573 164.304 102.79 164.132 cv
103.271 164.589 103.729 165.071 104.364 165.428 cv
104.686 165.609 105.024 165.74 105.36 165.861 cv
105.179 166.387 105.235 167.009 105.688 167.381 cv
105.87 167.538 li
105.992 167.673 li
106.046 167.756 li
106.098 167.843 106.141 167.931 106.183 168.023 cv
106.505 168.723 107.565 168.953 108.193 168.561 cv
109.001 170.14 110.036 172.482 109.725 173.639 cv
cp
105.558 180.778 mo
105.234 180.451 104.764 180.262 104.193 180.38 cv
95.9293 182.094 92.5767 175.303 89.5923 169.1 cv
90.273 168.172 90.9273 167.213 91.565 166.239 cv
91.7525 166.594 91.9595 166.93 92.191 167.221 cv
92.8941 168.103 93.439 168.31 94.5025 168.599 cv
95.4058 168.846 96.5015 168.659 97.232 169.533 cv
97.7779 170.187 97.898 171.396 98.2291 172.168 cv
99.1011 174.195 100.738 176.301 102.966 176.935 cv
104.38 177.338 105.235 176.716 106.588 176.635 cv
107.121 176.603 107.579 176.665 108.023 176.722 cv
107.31 178.115 106.499 179.472 105.558 180.778 cv
cp
100.445 186.393 mo
94.1675 186.595 85.2359 180.257 86.4615 173.451 cv
86.4918 173.286 86.4888 173.134 86.4722 172.987 cv
86.8365 172.576 87.1949 172.155 87.5484 171.727 cv
89.1265 175.171 90.7711 178.743 93.8619 181.013 cv
96.6627 183.069 100.024 183.827 103.393 183.476 cv
102.494 184.481 101.513 185.454 100.445 186.393 cv
cp
111.678 168.974 mo
111.073 167.701 110.54 166.124 109.835 164.923 cv
109.025 163.544 108.062 163.681 106.779 163.15 cv
104.947 162.392 104.172 160.487 102.365 159.819 cv
101.147 159.368 99.73 159.387 98.5298 159.101 cv
96.6607 158.657 96.2691 159.278 94.5269 159.728 cv
95.4351 159.493 92.4752 160.399 92.4791 160.399 cv
91.7437 160.397 91.2955 160.838 91.1275 161.379 cv
91.1207 161.37 li
89.7945 163.648 88.3472 165.853 86.8004 167.902 cv
86.73 167.981 86.6656 168.065 86.6099 168.156 cv
85.5396 169.557 84.4254 170.887 83.2701 172.112 cv
82.5738 172.851 82.8453 173.787 83.4468 174.294 cv
83.2877 182.573 93.0357 190.07 100.971 189.323 cv
101.333 189.288 101.624 189.151 101.846 188.954 cv
102.018 188.893 102.188 188.801 102.349 188.661 cv
106.605 184.971 109.596 180.757 111.594 176.167 cv
113.564 174.316 112.829 171.394 111.678 168.974 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (5_obj.eps)
%%CreationDate: 11/11/2019 10:30 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`>]s]1SD1SPj3G334b!$eTD\Fr^VBaHc?WKLo+!-TQ.Q/@#ZjZ'.P@c'27A<VO0>/SnDa0'RkJ*_H@#Je
%pP2hr?bQI<(V@RlT=itXk/k+'RjYhODP'.Cop=M6q3._+Q><XQQ+jtXpAFXHea"#IhX'g`_T)(&0E-aqjXReArm(6.orh[me!IO^
%hT5$)]lEmEIfIUir((P`n^E!crU%)?^45bNadZqH?N..#iRI1#A\Ic'\)0?r?c^LQ,N\^"r,R"orT>Om4Fa-PgoY52?f1ctLKj].
%h=&'FbP/Y!bC^dq`=Dj5X.u@15Bln[HJ72iiU;43G#=n'`>;$,_s7VSfu55Op3)#!o)Q/qPV:-"I/W?B(JeB;q>9n'6<s8?gDAa1
%J+D`&#JVh5<Pk#==kZl;dk8'$94]CAZFK\1kX*t!.VJN)%rA@QPordR#']0=oQJb72Rbn7]D]o+G5qO7aZ$]49ffFa^\RHRs*orf
%&EtTCY*U*LPJ*OVq]DEe^A`nScec`uB!sQ;inqEFk4Z>j\)-?2q%F+[e:7CG46$iI?@R>!7caU"o,f['^Y%)5s6d?\]_M/`^YV;K
%Rm#hVhqc$E_lNgR=*D\Ckt)ccGU5M;C6br^O9.Nek+2,BH'B&U.rKnWoNR[]!s/0`,lMqjT7-V'jY'fY]:[^7D%cd;os8Sf3DfXV
%lMpAd=*=AgqB(&sl%(d3DI<*DEW5:ADl23p>lEeX4Sn^@S&;9C(mOLZcb7PtQSQOO^\ZN1]DdGtP?[tSSUD.j^AdLM\_u.6h"^E7
%hs0[qf3^Z?6%8XQf<9YumT2(Aq:4Lq5J@'YeN_mXrl=ET2m6Q20RpG+h*:jVq8^g)5NPSrrSdF5VfE=DpGh@$ag:Gbp5U*7GJ:fI
%l#5Zerj2Y!+kMVj&<4'R5[.#;J%U4/lFZ<#HJV$Wpr2hP0;#o6nJC5?^OGmOr8rk.ds=ZWGl-Wa&%\YEc$.Sf]F3%G]Dl)1R""^i
%8,`;;b<*1@gQU6-rpo@IT.sa"TDq/nqs*k)mJj_Ff,_X(oBi$FIlb?B[=7UN^Nf>3:U7Re^AR-jd0ofs[>3/qg@gU]5<O5jr7SQ_
%T7$C2B2<aKf0=Z_VqiG$]m;m1Ic:%]8b;EG.pVn3LOT'N(]X-mq6TNsN5s-o?V'oRHi![6bJ/N+k4W63LM?ebjmQMjs4mP[45p)>
%6ttpDn+HDSZ;2E@?$_\3o&%np^3n(p\b(jJYJtXbq;:+/qB2EEGp\aL*X25fF2%Rq'2\tKIeHS+R&K62It%)hN/$/T5<O:6]?\Z&
%0><&j]DM.p:VOI&birbh\_])i/M#Pf@f?5fDdU[uA`(7m:\j,<-f7%MeaaN^`/*e)?+N,=5B!7aDf9"*@kP76H6%2+D]V.>a2a7Z
%VXh.jJA8YM$<DM/Ik5&0n1Q6K#Cjp+@/.fMVPVh`O5fRT?gh?OU74h0Zg5)OD4roAom?'%/Tu:B0hp*uUCd0N*V&emhIcfd8%hLj
%,VP<EqE7$aCZo!hO/p3BTt<f+^\Hd\GL(4-DYLcp:L8L.Fn<7W.t#MQI*;:h8D1P,^U4iia5?ZQ.X!nm-!)0$77\C(LPrb)r'-5a
%?0CN!8%]>`rn>K![$)KM[Vsb,5IKU=ReS#M2^cXD:\@ia<IRe<br&O/?+DBh3Ed$"/@i\3MT[r!*9Ggc\OEY=5:OVmZBrJj,qnLP
%N`/!]ECbF:jADnR,"G7&%\I9$,StC[35pLinuC]ca<P06#r0N[it@\t'2EQf_a+e.SBsTfUBGib:6MmQo#CpuT!7u/*[`t.rZK6f
%Nb^9il)QIXi$FSR>C5U6q%8\'00%aH43;K,@kSk2QVN[H(6L"cAFV53Fe(W!(PoD@,KFLYb&NM-qrM"A`hU\=H))b?&bHZr+8rqo
%*I0@u%R9oYYIs[T5ATN(rW[l=3:Y<$&h3iDaT!@C\DH]9ch5$>AO,uYNjR+LL4,-c?%Nm,OlI_-5n9D;JoP'bDBLq`@-D?f*D0,>
%OlIk\F-$JO6;0cu-p`q<Pp1VRN>tHNV1Tb7b0tLPO8)V;X'?<m:S^YE$PHJVOg7nGb+F=as'G^)>)jqZWr.@/s"=p'Lka!Ca)I9>
%/G\Gu,E]p.*%HpQq6S--&%O58QWYRIZIu&fo'&h3DbNLf8*%%<cLQgAhJl%5nr]d7p<1Q0,%"IuDspFF0L6tla`*ff+qgKCgCE0j
%iZrRm7es,$p[OK6'P,'[R:4-XP4&eLeO=fCODgqmK$;t!I<cO3F>Bo'N5`2`d#EucORXiq&WTT^;FW^gaB+LW_tEQr7V'Gq`"\?.
%CQYT[aI\SE(o=9j$uS-H%S%+\G7;oVq'Zd3T6e.6mZ5D`gejqI3$fXA<(-[iT+7co*;X_$;ojju^gL!<M!248rH'#t:?+<SF;>>t
%KSH*$+bDC:&ZR+K-=9ARK@!n^n3I>@'M$r*Tq[/l#Sc"r3Ir#3IO*p3T53\M4b`f)Fa8UB:%da2*?pauA?=\i1)'/`[k9bbA@c3i
%a_U;b-X,0G(iehP:;i"pE,tA,<AA>dR*t>-9_`"dS.7<+ltUY9[4%#M>_$^Yj)hdkgd(bX!/RM96&9P,)[[",HidVG"p5Y]dI0Tt
%kQ3=`qGC9')'72>*$,NMF;$iAL']N@%M]1_\T--#U5d3Tah5;qa56<lqt-"r.Kb84VG]nh5f)IanMjc+RM#B1bCBjO`"tW^[p1+,
%Kt3nXd;cHg*&pNNPU/F1g=:10@q&r"-VeeXq#VR('nCkh;_]8j,#44SW"+q4-kWNcZAqbdi5)q5:uO\01od64(Vh9Gdto0JOuLRU
%8=q<>7-3"]Y=me)K3\gs3=M.i+c01"PXLYU=W1!ULICt^Og@`)WLW(u,dWPl8A[Z'i`^5V$(IbqUI^F^3EehJ:*M4oOg8bJCm@fB
%de-H_&e!+(`<JuZhA2H`(TToX-urI1>Z=Jh1b:',>Y^//-YA)anc^^6%VCH'&XglT/0FG[dT]g9Y,*p((QB\g*4TDK`Sr!bK1,j"
%6g!C$9>eUmiQ0!rR`dt<nrCUQEAUEcAschm=d!Kb"Hc/$CGnkLUIaaC-:p(Y,gmfTC647N!J=p$jp6p.A>Y0X&YeECRN@`+7l$:G
%RAk1jkmg(U@27keC^beN"F&Z3giYE7fV0:8]5@`=\d<W'o`)uOWR:YV2b?cu;uAIje8M4&,qGWZOIRLU6_m9cjXY%M!mjtTE%aJ\
%e-pQ7J.K9k4WT'&GkppPMq`/nhc^\>'lLh+G.E%dc9Sj,]\!H\ZrWBYIh4d0`(#QW^L/?-6n?/MLa$5$K^Ca8Ke-]D(D/fe^#2;'
%PDHIl'bT^UD$Ee4$WXg*2+,o.U]PD?*N1SZ=[GhP.`Xl@\>MAMp#T7%CL;O5na-_Q]]f&82jp]3C6"a?.df8qS4kM5F3YP-<HP8+
%<8"7^;h\;-g05;!s4Q]][Z)cRXpiqBAB.D/Y]rs!]6oD7pcD!UGf4rhZot?WmlU*R8%JY]45T_DqI,07n_n,iLE(?T#G(VYj7=;[
%4(IhuSEQ2&YG5luPNW`L-A,E3W`f&$5XDl(H6J!rjWMb#N@]$7QF]a!,8s"(r+K7\cmpP%qIo/^GmDg$d\,@DO?6=sW5_EY3L*d'
%VOB'eh,JGPd(8pRc*I:%aj_G3F)2\'P9ECs5]kN49X3XC%[\]rNNlm2fW(c[PH5jC1=!&I5f7RYa)T[Ah.Y8iVV<k2$9)ZY:]G2n
%_HW%FG,.2)[3IE!qi:7*UTTC-Z+fDKhL<Ndhf6[5*Y6!FK7DsBTD7S6`Z<s5;'p]h7Ej`H!n2+P[Bc\o&Sk588J38ZaqU)j)HMc@
%R81un7(];DC4YF/kU]1aMN^49QdD-Vf\O@?2+lILZW=X!_K[anmrYF,_U'b>0`]D^0Z0tp:>O#2\ja#b>!OV-Y\KTbqM@Zj)[ESV
%ql&hK]/o(Zdqgk$g//fkZdh-M)X,%XVKiR`I$dsGs-PX.h!qQ@HM_]s:4'J$qk3!@*WMu(pof:a3]f/(&9pTh>aa;>p"?`4"2O_N
%Gd?!%e8<U?>@Y>(+;U/U3%l0[2H-H43t/aCRqJ$ee%oqeQBQQ*:i'9V*@Am:dW^9=%Mfa*J-'.<[%DqY]nOH5*!3o\2[$VNNhY^0
%jU+/[7NdWCN=Zl4>5-_XN>j($_uNeYWC<UDWYeF05H9DO.oa412+F4uI8%6S1J_iX]]a3h9Yfgp4fd7WRQ[=Gs)N#5:-W1oj6([G
%3*e`!aNDK>1KsCs,<k1M4$Mjj!l,=-jGja7pHR+I]10?A\N/O5AMG_pkpG2qe'7,*6f2E0,aj8PG]Q!)L]A(4a*@606B?mb6-r:*
%e.MT]o\&G4B7c_*499[.mKD1A:o=Ac8&i[cjA^ra!6u%`C!`_Z'HPtV#dcUCRtN\4E7<aia,`3&']SI%Vo"r2F=Pe>@&Ll4H],aA
%Jt@KU2&7,g)CmiU!3!6&Clca\/N13g*."`%_d^!lij=(]UU;i?O2iEP*^cs-G,NtEi);f8eES_\=#Jg0WoKadp\<-lnn*gQY","B
%YW:!Ygj7$^7uV\>\=7i*dp%m.X<,Ce+,>UkElSEUG7U3diK-,bptYm3GJ(K^XAM/sPg:90ZUXaiGPnO>5&6D/)We:pq/gg;NA=Co
%VuO=,^Q8C@EtjL*d>I_49Q5uUkN$YN`D_o0bSIZ1MtY"p/u0tERen6lNtNu[O=mbnDB"WrC[PhIGNImu(ZJG<;l[^2ht:cBg`uX-
%o?1/'X_b.#s'<BOPC>2(5!GUSh31Xm2T`qD`p<pAdoW*f0[dG]f[%W>eW_1:HAa36be2U!i0GfNq>C'[PK,KRLZ>mC5p#Z&rdH2Y
%V8PhHWj4BWLdH*C'NsI^ims?W]77@>Pb6raR]o[Pd[>>5=]tP:XB\;?WJb[,ZG2@2Qa=G_L^2_/DDUQBh*(WsIdHfXg>;]0'?%l5
%'1CR#-HIOmV@rSc16<5>Qn)TOKZ+tL=@j9M$]BpWi!A`d0e3_BLa.9^$0s(>91YCpNsb)OL9Kat<?dN_OOZ(Xb$oq%1'1EFKV`@8
%H%NMn^b*E!$u*1^UtHGTYH^2jb8:WjArGcQC<l)N+=n131g),a/60ql<T*L]A>a0kl8CT/=^Gjh9KgMi4Y\lqo2C!jC9S+HjJ^@,
%Wm*5+`G,#.AB0\lX?M)T>3%BLlP/]Aj%(EB=E@WS8%it#\YJ;ucGp,*^3CVN*;1V$]_$8dhf59"[N=EBS@A;!+.B0UG/t]m[!ga"
%q2XojjX/'F@<2R@Wp(HJj(Rpe6VNmS3L];YAErktg.1g3@u*_+,6rXjj3kj0Q-R[;JYnp!#ae=2mAZ:E6RujlG3Ptebe$%ngUa<J
%UlcduH.A?-kZML/R6M-d"kW6OaZ5e;*AqqV@In7B2"`Q5*s$A7R5F9d_qYN*3t!_G(+<i%fTJm^!JAn9OiU$S=FIG6jko*cPLH\4
%4T%PW&rAO5q=m*#^LuYPmACjVN?!@0l8[?c]bsQ@ho#@J/!ZUk0f8'p6/Bn_E]eem$l=qKmucIHA@Z3!n51eXp&'n5hJ%>[dGB;m
%*?T7Oq],X@n(8"[Q;7rC?#S[Jk56;Zn<.G+fNN0k=oLS)s((s(CN_p`qaETjg&2H'm9d]+0U3]Neq1&_d$!!Cs,lPq$!:A>--c<G
%:eC#a/Za%(.Wn92%nLCB-f'?:6uT8*dM>Bb"<nRBcCq!>1m0rWKoB':kWWtL$il_,JjBnLC@91tEc$0E*R@noIIL)d*HVNNm)YM(
%\`5ifq9\.dnf?&,m"6k,od6`B\QQi\5#C!5Z-FTdc"Rd=q8c/Re0/N@&o*N8!pSG2:1Cef<Zh"g,HEq93U9jkoH#k[O!!2W3k?24
%l$?9Pe16T+m8;J2$@jW0?9o8nlXqeI[5(b52>.[5o)dIbe/^-5:?Q2gNuqL6Z%D'b>H/37:qa>c\7YS3MlR4!KiHN8Tli1G4g<ku
%)lW1(s-XAHUUsF[BNXk&euFE]MiT3SBLC$VXOC%D,G-"@m'uX3G758tJ+)@QEDU.0oUofGkOJ>p_p5UKo^5*7pjf^-kP1*ca,Qs)
%Bs;7iPRChShmLTPc."ielbGs?Z!&4sTBNO%W/]^h2!Q>o">WQfK?$rLe5085YnWqT+"5'aqWc.:>'1U`=[h"W^D>BuB%Bm-RmLR*
%M"RW<4-i`T$W&AR6p5aiXug`MeS:>uGNdldQ&YSV1AO?X-Iu_m&Var(&dR>3A-%<2TH@r9S39h&\\jq([t;Q*o[[MVi3Q/"gQX#3
%2EWX%\l8fT\RauCBpH/ZX1(S_QA6Hncq@:Jhr?]0l]=3Bo:392a7D[dGc0rhNmDosTAt>dBoG3r>$MkEN/DHa]G6Y`2>[FlhT#UO
%`oS[cAa+n^_h[)W$@9[5*q,8X^MsP%hc%rQm3L.c&b_.5Jqp<^CQqZB-G)8gVjNAl5[Y`RG*GsBb:9q((;6)N>@>jUnqoR^6rCU;
%a19FR:)VY3WGoPP@f@CMbnI;I0[RQMZ,kh^Nm89u4(?mg&BdTT%9TIcPl9@=="Y0-^qoEf0l,c?-4Q)?hmC(X`!)T4gb<t7+jl,\
%0\<\362BN"j96=joq3?=.l]$;&8]uK(+HnC-W\r`Kh(XkM\qsZN!=OefCJ,.mo^'MK6XZj4X8'u5l&lp6AhBX]lHne%a'rm\D7%^
%hj97UV]m%ij-_WNG18TD\T;SGF1L<W'E,(rrbgcON:12P.Di=Q@H!92R:8ZR62+uQFd$VYATFkA)9jolbM7$'6$'5AfkcfT,J%j3
%&5tAYVS&=)f>I517XgKDbYn&4RoH:o5b0\_WSoX@rX4U]f=Z<2O)n20Xc_mj*c2&G(p:3&M1kqR&)$%nBXcF4ge<qfO\k]nP;*uD
%'>S37;&*9cn6EE+S.`j^-diibh4eob<25:10`6''oIrlHPOHNP+\#3%*O9J?p[YKg6!gX8/WsL9cDq4D@oY&MgCUiaD'+3?UPi6S
%a4fbZFH8#U?>d>.*8U3X>)qUP?Wrsan-0uL]&"+8p35NJ,N@COTR?n+oGLS@okcC>Ca.\;5kDK\-P;A&U$=J.nsE5o,!;>k)kX"P
%Sr?@NF_[c3_1]p_=oFY-O/;_)X-]R"n$>O4]oYn$a6HmQ"DF>/m4],A>SBb.9!gWW@X;0U131'!P\E:>0$TEu2R$Xa[3JGa6Kg=Z
%g)p1,ok,j<0@O@\N+#hTO%Uui05qH^(soQl;f]q?mP/O_DNSds[g$urjO91->E/rp9&*o@I`.q(*,.p^r+oC/>K3F1,/$"5p;!%c
%eq@5(e*]568SsoB_]IHo;@ub9@#.=Z@O_[!4fRdCo$D0Y>h!oth?VH1B"%o+--??+c$D(u-'K\'RJh.O4efq<P_hpU%%W.ZAsBS4
%0cD/bZDMMs.7),][LIaQ"=TMkn@0W"/8"9;>(H$)S**(<jEpoS^>luq48t4%*)P`$o/.EoE)3:(;doc<7N<hq-R1*tN.mthp,JuS
%3a#%<fccOtb[&GGJ>!=eP!XbOCU2J.6QPER<`V9+LtGL6""XCVb_b[qfk:UOleI'1\AgJJ_\ppn;@iE:>cYU[`$XQ7'AmD6S\*',
%k6Llh(koWum&5O:71R^4.js/$>'SWa)m)=Zf(o;P=Y84t,>?#[QbDn=#I!kBA7<,tHitD0TP7PWr;FT2q-=>]HOfXW5N/;[S306?
%@U5,HN_jgrEF#u\1dp(S_DIX\_;5*ciEsb&j$u!ZdKgb,#eA,U+%6VtG71B[b!"p`kMBpoqSn\XoPeuT`<uQVFVE4`ni06+A5]SY
%]NQ_iD7/B@LZt2t?d=93RkW&5cuU6Rg3TrH_bWEP[JntSP1,t0=!ea3V8GE9\`6sKrM&[ka#g7XaRAilirLIi1cO96]I!15mVraQ
%ndu,p\-@Z>l]o/;0C7q??(pF=_/3*5RXfa9N@N---RQLO7[9mYgqcEjS9QPk9UT!l%P&nJ%;j]tqTlh5`)A()90g*X#0uIGAX(IH
%B_S'H2GE@Rk6/0hOna)p64;?H-)-A<1>4VI=$<E@nb:\"g!14[2>%cZYVd/4:*c;B^_Cuo?ghC@[<"\(9hu&7_5-"\Z#X2dE&pW$
%hPLNR$,JSP.JRao_06QFmnF)%P8&C_.^2e:53TM<'`='uml9IU`oTBX%ehk@GTIR3)[`+'%IXN!f&5D=!8]kI[lKt"R#X193WI=3
%^s#EZAN2d7VV1MLD&)Ctld7_&dW#3INZ/gC50h"KCXD#;fGH'323&X&i6q-R$Ga-?7pG39D*Rb5E;,f?jhm.qMff%%q67ajfhZkN
%Nb>%PX^F2k.-o68]a-st?`3*GHL<jSl_oTm+MoWMHo#L5D=NAFF_Z#:CbfRk&pfnSptaH=GKGd?)r=0%>Ut/Z,pc:-Q^cLJ.IFFu
%N<s&Q"=*B/X*t=Woqt'LmqeikJTjp!\qqGi;4CS(>,XTsgEQ?m"64>o\4MOcj2f2sY7JC'<HsAJiE29YF)I]3f^]%ND@ei2F6tho
%k;?NeFT'7Si8.fD_56rY_JD(C9$F\%\*:o&,c0YG'04ZASJn9dMKDK0*KGd'9akj5Ys)YnlfP!F"N\AJV+*+_bSsG6XkL:Q>Vpe[
%c$cdP[,LGNESpA7chH7:!m[$?Td(\D0?F2ZZ?2tQc):lq^Q7'Iku4$3Q/D.kqe>1O:E&uX"KfSprR7>7T7=i5'Df1CTN*WsELneV
%GiVrI?h+iCEfZ7e%Y?b:YFLj*h&5]:GL8G7@kF;&bK5SR`a<3)\V-M>24ucQdLr"`=>BbO\,"Yo)(m:b"O`[XBgu89><1#@S&25p
%M?4frW)'<QY%tPt9Zq<KY"%K#L13(Pbo@]-?oRpo@`r_&rcM/CB,:6sibL?1MAZSm:g#T:n)PX)M\F=!)a3dP>/p)H'.qRI#IpT,
%&MML)LEe`\Wa')J/?`/\Z)f.e!IGUSkQ&%bnm(6uJJZEB!CeQfRc0@<ajD;YkTDnmRi/mca5LmFn:.+DQb,JqE\EP%;KH:#+Gpl^
%A%A!anYS!N/dp>HKhQhpc+@'M16>fB,%LWId4"lo90M(7d+5n3el%K6L=&XBYb38rf.&iOchlR">^@1?iT`7C\N8rUZ>^@==HRIV
%l"UY:nJ-"q=Tg?b/&r%-aqe!F0pNJN+eJ9";9)T>Q4h6p!j,`=%-;)c5,V&mcQeVtdSJ,W4Gl"S@[f`)Q9fLtp&m9X)*'B`E9+]&
%HHVH&6gg=#8%JAmD`K-L<:78=8ajuZh7r'=.N.?.LC7G9r[c1%**+_*b=XmALM*f%KQ`k#]#%iZ]oY(2$&0Jo`G&^3]pMtmj89qD
%;Auu8%>U2P_ob]RTa9DL_dC%CHV\7H2\,1`"9MW>X*6F;EhJU04rH34A.ka'mD6rY7tt$iY.EQge?fp4<u1>JHnih#[Pu%Z/$$kA
%lBPH\H$4R!jDsiO.bk\^%&#M#Si.WWo8_T;/U<l,4(KuKPRFhTnI^!0Ski+gP-V$tC0S/S\WS1o."^6RE5-;H!`JLFY-8Ak`rGl(
%]BFTt:(*>$]NMUJmWWV('QFAagr.:8q18_B6'm)&[?iNbHPs9Km!Tb.Ei2_d@pM354JpY9g<_3c-3u&bA\r4raum(kT2rFmR`0F$
%)YYZd5VcmT!G%),.B;,/Q2?j]J_T,,9@^[WXio8%?p/s\0bi"/#Wpq.U=7+(2S4QXp83K8GSV,Uhk+eG>Ma2iWOoNGN^B9%L(8Y/
%K3gRq\&Fao_!)flXIIc4/SD/:SlU(H,]$&=:V%=3fmfQ)]1^1F5)/001,;KoRQUF^;IFA?l7dMVD,mQFU%%YOECjbEGG]C:#EOmT
%^H+:WOle@G)G$;a8KpTeag78._n6Z=AGiOkcar`'EScWSp!NMMF]+0"@GPp@hM>ROgYB.F'>`3V/Tm>\=fSnC[<b7l(&tj:Li0uT
%-#8dK8]J>8(`@Y_WG&B,hV6Tl4\4ljpmNb$g,=$K3!K$rWuHDADdotR7gIE%=A"d:NfM>"Oq+7O"R=j2/aC>4m@.Lo1!=\jeibE#
%s7BHCfED1cK69(Uf5WdWrKJAY"+ciqF"ks^985V3F&9(g%I^L`>lYDkkbVWK6A8@ZcuJ6krc^SDKB9#^\_YO&m2IQQ29NaePP_g0
%s/u8fGOLgud7S0N`W>?<Y+"aPDI_N!V)<5BC$j42Qc9dBID0s\iiQAs^k%uf\ZtsnE_V+!9%UP@YDp<9R='45.GZ7MRAE[$.E0i9
%P*P,sN=a4I!kC@3V2/@m)V9M/&TYZVZ/&FFcB>_1@UsDJV;i9h@.7Z)j/Ecbf;#o5=_4M+\Z:hN(,3B;nrtMOJmC%m4YN4ds3\Gb
%cBU&k<UrZJH9(S+Lj&\!]3`d0?A\sekZojPZ:DbAc=(VTQJ)S\%#k6S[L*tWJ:bn]a3)7:!7')I:F$B!$`<OP-4TDe&!."`0`/uQ
%!R`)GnOY$YBjC*W&YD`DC]roUS4@Q?a*ArnZ(+;tE6pY?oDG3#F;i]S/>'t*N3$\i2i[5f^@Ntdo*EZP4HHe-ZWJX!W.$f:DM^R2
%Q[*T=$d4\H6Iq/\lLVNh,<q7f4SnY%\F]JG^J1&G=UOR).aO83bCUra.C('OES/@M/.npVCe6p&/"Y*ROWiZVZ=SmJqmA".-GqSk
%npeCBV1$D>Z;gM?+Tr(m0K_IL0du+ri7l$(FW^##?`ks&nW$hW5OK$JIFiV2M<g%]B'r/#ecMKg(2*Eo*G;M$27U(Gc]^B`Tf_ub
%N5hts(+2$sgWjnXJFra/cDN,PlGqaVJV)K>MA<'l%CO*EY\mF(mEV1]Hab\sMmKBbNVr8!qGQ3eICgGS^@Q_.5Me#PrMPNa$t")H
%m.kNh:+1NT2(-'J;aB?+fi>J@P!SN2XK"(7Dgf+fmFM#9hf+"aMrA-@$!pa.f:_c,TX!%M:$]e&^6.fpc#:(>^XF(T8=eZ.nKY*T
%F4R,@pRL,_ql[)'gYLD%^+POV?r:*e[>Nt(3Xl?.U;UD"<%6O"oZG.go#KO?)UR!.j)M6a0)b?NF]l8Rb0#'EZ6$`L@EPap[L!s;
%SKoo(IWa--QCb1NdhZtmiMJ1A-]"3POAT)Ji$h=pEZFHuOYed,elZ+:VQF7F]CtUJmat6IK%YsX$(=t?lCL8]HQ^B-"?E&7&2=1r
%.t-TnL\AA"p:QIZRc:h$$@OS;RG)_o#M^VUZEGD6HN9Y@Ei6V^i1u8iaZ0JP].6)Jg2C?iU/aWeJ1.t3`OX3/bEX^A\'Gr[B0#C@
%+&0^H1FW'L?'ilfaL%XbS`/s9U:(s.1UK;H`Qr\s-S:h$#]4LVCmMEAkOA.6hBo18"%chO(&e;Hic6O$Ubt%B^f_j^aBGW\/j\(_
%K@]:I6qj;7M\QcWRYNL-n!8fSn!eYi/jq%&ceNjL+3Ss!@g/e?(u9-X=<@+jd)RF=l+>4&$*:kI^U<HEI;*W`IuaTkI6[-0FP3eD
%Yd'G9<k@CQa"r^!0m%VZkL3(cjUoFL[K^WknRlV7_gj7!/\^Xh)H\tUh+UW"`=tD$2J.T3\7]M"L%GdQ2XWYQ6]1at?qOs!Hd.G>
%o/W2_Yl^/&9Gdm\_e4Mj1I1aGJF^$?I$TW81@\KohBip9\cCj,]R,*QQ`B%'g#DsOaOeB!dD+Xm[!i3d1_DGPElJX'Ya7JD\V.:f
%0I?W+UN"-le0rt:"?+o%l2REb%i:)7l$=Fn\Y[E]c_VHKoKM@,%sda%be+Is]K\D']-@"1\uZiNeWLOYqA(_FVHru?h%H\_E4>S3
%E<#N*cedIVh/<8jajWIaVJZ>2)$BbpJUPPR5%@um0sJt@fOkWZ1C!Oj"8hH>I`=H5bJ\%]pad)N0sFH-JP"&:^O>eGMq?9]^3TGC
%gRnLnG1Gd54FZqWn+aMf^\d$4Rl@g[?]#Z7s5D][s7GRk*;KNbSb)*GLu5P&:;2U2M7]//<>0Z2L$Ys_"A^N(pfd^ha1pQI5Nk>5
%4E:,9^ZrT65Pb3VQI`fA2sc""qoA`Em(RbhX+&AH62IqaSTca6I-6'm?Z2CRS,IYSPC&b-2gL8[qto^2DiW/8^3TG;jce;Gh>K[L
%-i*Z<X&mVk5J@&]FjSa<Dk=Xfp%n"QPG`nrDZ'>Ac^s$CrVP?IDgo.l4'_=5n:0KYs2tq!Q_T$*n+r(*WAt7(ZF&u&(V5Z:oN;c;
%60Y=TPFMRH7.7DJ`Ydu@=A%G\&?\p6eTr[/.o=)T1B8MhG;A-[(6ls&hl]?WV86HJd.A#"LAgP>?F`TsV97p;7$M8Ob+4kE/TR]?
%J%O(m'e5\r0'94_6J<H!.@T':\!Gdl4K(hH/6=Tl]sP^.q$\o.q5T2)Ua99&&*!7[d0E`:akO:L,s&p36pk4u7=O(0<><W"pS4=G
%XobJ%o2e5jP8tQV#eL;$TBc5jA?FF+'gR`XZsT)uF1YU0#9.Sf7K;aiQLBX>/6maAB30(bM>]JbPsd"eC:q\1I2Jg(@`W55#;:MX
%Y-R702#*M\n%srh41'k`_J/SgMu6armp%El+Kle%^4;P/kh!ptRXDHSB?"ZV7e/Sadh-<'\aI2[DYDL98XmEg$$)WMf2<h`.-$;>
%FFXXYNgUaOV2l0[G3/V^m&LsR*WZ;Z1DY7+=[f]mfo-D\99P(hNX^-Ed`!uY=,V;8I)[@&=B`AMT!R8`kiK1Eg#4UT%!8hrgm"+\
%b&),4Y2E>r9D%8mGU49@BsV+q,IKd-fcjpVQEo01A+m07l9s]DR\744475FL=/'mZ?e>V_4-b=($fp-HP?-r6^`Fr1,k1mb`TTAY
%5jS(m+'G[8'BT`FfjpX^9647UTn7#,<fTifJ)5K7RC3^\?Y&ueM-kBO5$NcKHZ>sbcVkD6/s'q<Y]@56E"eWQnjNp)@N,c^P4pVj
%16`Yn%JhYER;s>Zo2iZb@@3hHn\-l;<8(>-Y0Cs8Pm.+9F!<tbjdfT:5@oEm]JKH@Y*-M]/sg;.]LX1E/[J+4?W0P:D1NX6AHOA_
%^J"b1TKXVi"e\hrPgWG".:,u2p9Ct+LQQ1u-0>F:&PpQ7/I?ekBM#Hc[YTZSf#P=+"gLa30Q=!"W#-XYMs);HUt=;a:;d,Vm6le)
%*DrXhjjfmnIM/p$-Nn04Bb=PRI3H@_^?Vh2-0\Jlg]s1gCDRJB;fs4KLIag)llbiITll!p/5nc6N0\R_%(7Q\Z$Aal;ILBhe!OH1
%UdiQ[C/^0pe.7i,*1]".-GN'///qU>mLllqFFp+5]KA\;p!'A#(Bjp#[,<GqX0T]q,#'@\rhXC\c_<.fn`;DMnB43oGj1,/95"F<
%!F)S&D#H,.]]k:D*F`p/M&>5@qHY/.>4ucp<N'no.9V+2Qblc1<JRef.XFo2eB5a)^J$8FjT*1l%9!&!EeV0'Lu9#0N?)=MKZ12X
%AVb=Zd2QK06;*T/Y[<em94/q)V+$+Id247[XY^V,P>)o[3I<,C/SGZ6U9%bLV$YT_@u+&=KKhaZ>CSXi<sYBkE09R_NsL!/Zm=Pq
%Tie&9,2_"K>/!MnBmE/`Kn;AjX:Z2NO]dRhF[pu5_kT#6S)#]L>lu^=G]DsKl#!\sjV\s%TT&`rI]5lKgp+pV9'%;90UA,*0FeCj
%Ap\3B8f&de=3;)TBa)"cLOTPk$+<ea3bVBm/1i'iIHFq*U&YnO8On>;`+kXbLE)&rkK/B+<RK57*-m_V&Z37^()]l0#(HB2jB:&T
%+u'o\0A8T493g6Y&W%bBZ>;+e`(%ehA/Dl30uoft,X-gH#3hHYacTL;(bo>2_GZ0GL&D..l!YZ6H$Qbr"P^S&Qko0sneUet-7r>*
%]0V#iQ8-C9o(![)8]4aQQDFa70Pf:^_\ubWZ?0Lf0hp;e&'^%-BfgF64=p)9@N7Z?06gUY;uKg'7:5n[]Y/76'p;URbHg1o>MDcZ
%>_1HoRcWq-pU[MI8XGaI1rm""%6J8q7D?R%;oEL)TZGh9X,Hb0dK(6'J=28_6EjDD<"@,-,U,Sha;\N/6u3gG'HNs^0"8a3&e&=<
%E*'reZuYT0drei'7$kt&7EY+j*]B,C(sAr-Q*<+.`@!Ps%WW%h+Mb.FcP*Djq]k=aM-7bM5BK7=_oP*L:1.1a5&1PME#:aC/:+/j
%\(euE*oG7#O_n5hm7L&2=]I7Alc4H`WM1>Cm%nJW$5EnT^428b8]fHL9;S<#Wu\>b-;/SYi-USu=\9%'mNu8P4@=j.jpkU99mA-E
%Hg/\GA[NR!$um.[[JS+pp`2Q\/gU"$O#d[TJ1UK*UWtML`9J;Df<Co,&QrJ@fq>W],8OQFe/hp_oU'Y=1!DJ:Bf5TQWJf'BGfr?0
%d8pp<W9>uU>$4S=*"r'fCnSVCL,>3ueCZ77)lFFP;+7CeaJ#ts7]Dn&@Zo6DX5Oc7EZA(YTW?I<Z'I^_ol]4HaWmU8pA0#Ie^YDJ
%/s_dH6Q'>jB<kHWn>kEd"jqIkE-Pj]P,^(><-'KsHAO#GJsbWS1-%o]:!r-E?I"PuNc\H7920^)P"KY0;!Cgc0JE!n/YZ.r@Y-0`
%@I`18OYQBa2A[aI0#DGAX[I^dl"U(-,b5I?GO70<>.!cRe1brgRe+e<SO`beR[V^OY28hER;JTXSr9K@-!.HFUd7[%1_c>!OfLha
%+^!R3i^7=ag4gg-e=p'.UF]]a_pJlULMp<n[M*)sajXh?Z5.`k#nBfOo:ajE:?6Wi4Ak0+c%B9$[KMB)/&JW9Y02+14#HfJ>eK"P
%;1Y]2kL_Kd"gNGi(IIrATUnW-@h(F2GT,rgfY2RCIU;fqpYcoQrAf%=Pt/lemJd+.2m8jer-%h`rVlZXdiVoormdJc3;FQ(=;7lf
%&2tLudWr,N-3Y5/`7bYETcu%Eo:HmI(gf!=TfcmkP,l/N[peHV-RFeBMFN2,K99L`M_^BJjo>V8duMSUCGfgJe@G'fW;\9t3S59+
%0uV"Ke>6V-#!)u,G/Vk4X@*/k?fAtUkL<JK$5RYdZt9-*T>!tub<LC&]59eZY11!3n#B;%1g*A5\$B;?em/\S_B;hB+a'mEDnP:L
%J'*F`YRk39TU2^#7orXRj4^_X,\[1kR*'GN*@H`SKGfY71h`&+92,QE$K<[Y!OE<ZA#M8I@:2(S0,Zks%H7B*MC<FATnGS=CD6(B
%#7B3QG@Fj1mLU$n/dn1.\;>*?d'ZiM=5_8]o4.noG@eLGFIUsna^.?9U+SLr1CD\n]SfF>k-:gr"/)ju6l[cY+oLg?faKN+N/.\0
%2SBu-?j.1Y9CYus&&`j!?EH><]dhpopgN_"oV1'6B!-StDlAk,0<^M?);(8I?-/I>12pBd;,rM;j<[)@ilNp]f5pYGcP1.dop$B(
%GQb+]:f`rZed8FpYWSJ.H3N%iHZ,:qO'QlZ&16j#I)(ifbOOSN2&IsM&SP<n31qi6[2W)6`-R\TLMP]G6Gcj"]9;f[Mb'bQLq(OI
%Xqlu[NPO\,`<%V4*Inn[Jg+EL[%JS-dHT$Ei2cGd'Y)1\(AJ":4g^"u-#:74!Jn&NdaatN@`mWZ4K8@ZYGG_a9tCO58@q",njBL\
%277LU0T,Cje1RfmZ@F8bZLVDsM=)@A$#YE2Ha.H#:tVI1-E0,8^p+XOn]/B/"O(Z/bq`XaSOcDO!`\l\RBjoO)=^N)TrU5A@6sg/
%BpRUOp^RfN8B_Vup9(K`np2-EBM#SXOK_@ke./&nH<%tA(0?#\K,..;kZbe`^seMpK+"Q%KfCt\EKr8A%ZnfNR7VN$S&BC=]7I6h
%d#Mct=:KET]3SAuf+%%g0djmLAZL&Nki5,Y_$6XRZFCRi5tdEXm.M3r7TmgFLP@#./>M7aVT>d(_m4!U+M8eX1R^adq$]E%7SFJ,
%+L>6`+UfUt>&/an6Prh98O"dO:UA]%g=3q$Fh:p`PJ%bk=sqCZq!OPNPUL,]rka^IY(MomV(9-hkVIbdBHX1m('cuF/Tk2G>>e"H
%7#>>$jpB))`u&?;$Hu0u"iY0e"g9[a(],U/>:dO&6!oJo0G=urUo/TMFm4E9'IOGmR5OQ?dTKG3'tl*(cu>0d$ZEINi!GV4V2_?>
%U3)2i/s@/\/%eAtK%T'<lCsjUo\s`,MXD"/+X!eP;p>@Cdh_IF4fmuSlPZ#j%*('P0E?Lc2u*^ra7)MBN8O&IM7[<DPGh%FFraOr
%.i;:EKN0ma:*B(M*S2N>>3#"G3>,hRT#3`"BIS`OdA*f,?$WD<SN&ViFk8E88\rgH"H-fDPPAA#[&>Jui#Jr]!4uVm6;jI)GltLo
%;!7>(JlVR_pKD=?[nGR?&#f)OmmRWR&)_H%C?=>Z!BcdtC:)`LhT!FMh3?5$r<#8FEKq,WXK]\(6d[)QW_G?JP4ErD3.SDInjYZ-
%0UE@fa^Ogf1W)X$Bq!p'[gJYJEh&u@d#\VOEWG^]:lPUiT!5B!N6n'"r"qh\L(TtKJG"b.p#_LM;1Wj05!ZulV:/=Vj-mK8f*AC^
%Efk6BqED`QcEKg4NIge=9;7[p2M98%D%2NfM"mWl\)'biKY1p(LE^n-9KBZ_:qReM8MVr)j4j5[O=:cPlI`#OMs2fh8!dV0Ber(Z
%kY/u!/)l;WRi)2@M/2/E.cuDk:c5fcD\l'!%#j2C=L5lK$Y;4FqH"Gr=%"n`?'#Sk.Sk/>R_$cV8@?.&n,?T^#/#<g!g#*5@)m<H
%:37BSbJp8;dk6@?#UC1a5<Rd*&=-?9eo)BD@P5iN^f6K[LbeDHO0u&5+GOPVQ`e>rV?e+M*loZ0Pj!.509\)sC<R!a#[/_?K",#-
%#cibML.)TO/rN&g2QONCI<_+"%pPbP(5tR'm%Vq=e/n'1lERUJT`eaC'cfCh"[!DYW1USkiYe>="ah02$s9-<Th6#ampPSTdaeF&
%9L1%l!s?rTTVNqZN!l<*KE5n03X[:WB6q@)M!-3V-j!R'AZf`&W!]M$0-0o[,#VZ&KI:MnX,0qnT$^2.oqAQVnGWci:^&rDi&kh0
%N:7Rg!3gts.i\Sm1_:!F5/:raNQJZN=]qW2."*LK/7T8((n%dF&>NlC#ONa78*&;;O^jCo0F!of]IkT'lPBO7*LOcS0HuilJK1M"
%@ZGR4Gb]F#@#bR_0.n#q$cYr9]-]*Ei=&2sUKn4ZD1E:X/;rj&C-"cYeRi*KLYt3!#I#&m!<=;<Ai)&5manH?[F)gH(=*,!=W62U
%^cF%S6FoQAU"ga[AJg$I+O6W^-qdA^>P_OCW>j9I1f89a,nP]1c9dIo*n-c[&WFV0,qQ%djs"S\2;XZ.(D"o"H59t.MUBDY2TU`"
%/*%^bn9]R^(c@9Ha=E0JA>1S3-3M(VpQoWMHu8Oa^^*7RlAOUN`r.oiUa6*3*,nZIVcAiDYlI'@(ra9+2:nL2!oPFo6t"RdHLEfZ
%PX:V2.\u9#<l@NP&"5?oQ%kK>]n,"+TZ<`\ThjUSCP7Z:"%9?=!J#CQ*?G5^fA7T9K&<>SEgVQJnh7S"/Oj$=-4k)k6n':nMO?S1
%6nO4mf%*K2L?'CW_A\"9A.,V!=]\$AMHu)n##2oTnCM<g*>T5s0UM6*kus,`]J.oemA1YqaCW+NK.WH[j#ugXl_j4&\%tTWE47EX
%'Gh@ObbV%Gd=&qOd5l/$Aikkfbn:e4eqkiQPRt-?aJ(tR<BBb@2f0bG2K0lGo*">`F)PIdM!V*0.jgEQN,G(di!e!<=f&Y7_gQRt
%>pCms)2!U1^u%P$8s7L+j!dsmCP)d/@8U$ZN#>0;nQI+`S$WaUd7XR_oi*<)+Dsk^`"X^d@PD8Ifh.,5+Z882kSjF<nX#"*)[nU8
%\jc3R7Q+,,FjW"YJmfb6BXZGWN7OZjM4Ki6R'JgCY/Ca1V\*@!_(H4XR8QS1Uhrj7D6s!_l)+^Q-+o![h$Ps+).=*I!6\Uc(kn=F
%i2UMC!K/P@,ft_fo/(*9[_Je/S4@'/X^Z+h#Dq'J\.3gb1p?O-j)hM-iC=;@"Ekga7VHD2lG.SaZlN\jk(<>;pYk>i\HOAn*)$@C
%[-J8)6d.DSC60ft6!MfBi$T:Y)(-;a]ElT<=r<T</G9A/242/"BNhaVLiku[0*YCKKn21c/Wp#_Z=Bo;2I^$89eZ3.Kk7,s%SR%.
%+ou!-(,_`Ce&Hu%4G9GpmJudV>S8#oSS=V%AD'BS?GGc+gql%)/-)ZCQP&.f'GoFM;$JkN?g1ku?<S//K[41<M^U*3!/!*:ilPjH
%'!V..ZP4(.Y[OpF%+?U:A%'$3fZ(F$/]6gb%M=(#G\AjAKLZdrX`4"s6WO5+WAu^_pHT+T(Dt4aPS'BDnjLNf@:Ep(*`E8!;bgdl
%T(u3DGOZ7#m.bU1*X5>]6rj]P5:pgoUd_0UG[G\f72&O]mS'"tlU4uCXO#7?4dk[X7D18=j(*2N5T7!:ACm56+VQVSlP)5[\dl8L
%E(2&rVODN,NOO/d`28VaF0'ms6@dR$1NYA&/rdhZW+g8PRaD[;;Bt7:#BdtD`JMBDi(q,lAGQ\oG9M!Te:\YCmfmfdTKb>U6o34K
%HpMF3UM:k,,<jXn?A>E&g/Te0WK@clbOTGWA;eM(@/[-W.qq<&;MUEmL3d:k&7L/^]qhC=4`Mo4PZ/@85qDO2UF`a.^^4J&$r@`7
%A5/W5d(s"4SXTG?Z"[NBLD@n9e'?PL!^CW`>T;$.15@B$E3cA'6m`CC2$HGKM1!-jV@:=$*,[/g+p2M56'u'hi'TC"%krSN%Y-+m
%'kU\'Sp%#d7XG;h:cYFb`:9BiQTGl)Jjfhb^E=5AIk1/R@*<(N4ehO"=YTVbf-<-tSJ+>Ee1/7$l@WQ^L'*JP`6ckmi@rtf!JSK[
%)qI[+/g,)VX@$U"lS&sbU4eS@Zoo'C-e/F'WH!TpkNi2Ua>BH]86mDDM3P!:3`pdFbSFY&;!9`DETrA\6h<BMOT@^[qC+-d=>4Dc
%L_HhA-3muHlk)^g,n%W2aDXP\1*JY#qFDdgH=Ml*BXR%]q16(EKZn2^(6K&'&>CTg298H)lUD*1!N0kL:sgNX#R`]-/EUAO+;(L0
%V3A&K3%m!,!hPVY0]APeBob]V[B]@N"]mF+_!9utR=_eZ*Y$tkmOMJNg5_Gj8R?(j!FO3XA3%oVJPa86aFl_8Bt"hi':TfL&1J50
%<Z9o/gd&fg+<%R7mT9'n;8)d6hCO])$74d/#bB;pdYts+O75"$Tf`^)&0=HMNrA:M5*Y2!%N:'@(849\!bj\A)#=Snq,(,5BHaU5
%Q8Xn`789f:%9/Kn=[8WpcCQ12eS"r:HL,Dm>6/V><8&R85R'(hTZTrnXC-<?r[-%pOd"eZ0GBSsOYl;K;7(rQV'$,#8PsLNVCId*
%V3:(fX6H,;OF#0nJrT,_X=("cNAV?Y/S"8=71TLm,%-"M-`deCcmfbf&se&jrRg"F@4Hs^$B3RJ$)HsCAHHnDBN8T$EXjcFfV/F3
%!&PjBBIQ2NJ.3.%#26$?SIG5hY,i1tB,;8Thrk+eh^t-L_b?`,3Wc5D_FOua!Q*^Bg^b!Lb)piT'dQkT/gS5I1rD&:njB@C@Y8oV
%Tco97[o`tTF-87NU;3'7'O!qf6paf-!Zr1nJfBMVKr5I1O<J;]&]D/9V-1+B!A/J=KFLiZH:I.^Xu=YsO9;\SB%S4n*XQbQN\n_b
%A'3"'`WArW9gf[;Y;r:IX?bXl='a$mA.gX_(\AVLORO'CI7:hK>7c!\3r6qj%Vl4</S.oCAJWH3_^tDmhdc`O-R0H;jb+CD+:Q<q
%J[&&JKFWHSS'[-kO0I$MgVab%'B"2b1(\@@!H]$'e:J1B'UHP/2Pn]H4B51!>%a"K4``qtqW8j2a*4N-"-nWAHpU(NX!*Ccr<+@]
%Wu8P3O!Q'ddC+[V&5Bc8:cN7=O1:'iPuP_[&D0La!PM*m/TK0HL@\!K*ms&uD/Al'UGg.ZQ&2FB!-OZcJNb9N;m0k1L(/@jW&TAJ
%kRDhJbg_i1'94S@pX%80#Y5G!lSlq3JOL,&BSHbQ6qdi8]ei:X\_I-:`$;%tQ^HYL8:pQ`:`%Q,+G;Co?g?g3jh2dKY'l]pSN<Ma
%!6S//SsJE(>DP?U6H[[3Mlr(Tl6@U?L67+^XL9Q..\:h,97%]Dh_faa>-ZI493_e-&F8D-H6%M\(0\s!$^U:=<R=.kEddD*l)4""
%\%tTWE4</iUd_kPi/p"49L^KQb6`/73*6G7>(N/&<1W&Rr6&ni&kkZPZ)[&M%5ih$V&A?V8;oM\1b(rr-aJ%+#!/),jI,'a@].:[
%LI^U6J0KTbYU^B#JWbB"\sok)Lp(mA2rD/\C:ctEK!717(c^NH8Sblb4"JMq9go0Ij&2l[6rTic8<4Of;M_3mj*TK,SjD*4fhN)U
%4G*tL;-!l`d'@nLR&N<m"DTu.oD3uCn!VUce<WO]9M4AQRZOd#:RR]X\2:WT<2'p<TIg:/9JZpDFa:289"T1BBSq'g4gC_JCGMIi
%/.*sa%m<-7%J+6YIA0Leb^R2FJJ*,IP't+1YK'g*1kV<Q04Q4-5g*s:7c]=N=J_uYhFP),qr(D[Q[8WW#>"I&H;Pj6Jc\grJ>!Xa
%_$?7L#(l3c;LsJGQB?"&9]-*C&r<t"B";=DFYmK]39D*>B/7hC#r>S$I(i3@hk:3s'O.dQTEU%lCgl1`?(*W?l_=VKcluX7;B-,]
%^s0)pLI^?B?,fh)m19gC;d/QS!$c7=UC\3FMri/nMlB(Q6b/mZa%+\dg]@r/:I)g$LP8DMc!S?/_4*a5<6j3J'Lh>03!PXn1Hd5n
%g!oYH&9<LYJ-Za&o/q_:JH,*=]sbdNO+;#6.51C*ApQ!n5IdX57U@,Q^k.VuCR?Z4FtnMEB.QFRroV'JO^d/,.;1%4l5>i9bcm7u
%hm7",R7Jd^&B>Q`XP&kmBK'*&_d:_u;P,Ped!@f'MM7!%om!58'q#EI$pD%lLGEVF>0k*;QVs$=aQbg^HtCt/GR!%/n\,'7P:c)7
%G-lEKRhLb)Lg5;"_KZ9+j3YYbFe>e[d4Y*nRhLLQ(*`1C%8j/>n.t"V2WiVuFneeC'&e55IL95Np]/<OQuNePG#G0'9MhPY>U;4>
%YK`NfSkS)C?t$cK1h-\@ls@Ag'lR7HM[5e]dX[(&#sp1m[\<kgmQ`B4"J0Z@ITk;9=i80o2rN7X3LYOt>fHNPeV`CLHe%U@FjUgc
%Gr&=raH.TF4S%Y9E?[c45rkl2,gmfcLV,T9e+(.'S4<M58CrVY#@3?Z-FRrP'.3fK9uR0Vc_O42p#Qe0E`rrQK;h^W][0W.\"GBK
%0T5)3@(:;^MGKmD(ZS-P6Acf]IlL6AHU]MAhFb.;1:W52JXE`6a=T;%&OB&AD5_?UfhfC;1Yf#4#$C+odi,e>])l<#@30q"7E04J
%io?g<?],'i/dMBHVH#9;c-$Gj6Pq7Q\06cY6-"=HZ%jY:M^8Y`KpKH*js;BJ`<Rg9#=bXaKNR>CCro5qZ:c@`B^N4nJ3YnG+q%9i
%Ea"elIK>m'g8HO26XhMX&(H2%[TF52kfqT_l?`]S`g\UW)(QEXKfKZ.p(O-`nJ.L9RMbAKk;SIT%/XJl.<pc5cB0ZI+@*+6%G<M^
%O+teF+<Z`$`1r#Drr^Jg-uNZREZL7JaF`24&<dD5M^%24eRGAMJK:^"K]*dap?Fg""8EeQkHrE68.-5C-&$Hfd&-UA+G"SO"Z+`k
%<`@3pkF+a41oVD?;B$Hi#`MV8/?O+V9'6gt^K+'-A""9MhuWm;l6O=HRI0>V"]>T0bQR&.<P"PDbCYT/Jel?=5mF2Dc?\.6EdIZC
%8!qX887et,ZpeMak7epAf2>m-,p:'UD+p;>l9:&Z;TBa:Y[f;/I/NchV/([Y27;XTZ8Q+eK)A&i$;D7$*B$4RAh!m>o'"psXd7WA
%igLT:B!gG?WKYHiKNFh2R]WTP20r@-j\ej7'euS;Y7O7L!EtZJ0'`R=/1_/\bFlqFhS[kKg&$<b&-C7E(PRJd@33,a;+#j>bg8bR
%NY8%I!#g[`E2?fPATJ2&,Cc,7!f2'K9#S1]_plPo;=t-^e]0oT).Vcr49r"<MPa<\NF@"!AQ]`u+2sm/@gJMZp,+<T5mnfTepM3.
%+a.Q''Vt''SQO+A6Q%Ng4hMYb"eN,e_k(U/6cs)>hi/["^k>D7"nmUl>uH+YRPN)cb-p6e2jt\>"Uo[MJ9.'^DPN)P"q""S(q#(W
%@B-Z__"3U-p1KYCVu+?PE4(rBH8\q7*H/=[[#.UWH4UV]Kp)hi7\Y$3X9u0e[4Kb!G&d/$71;?.I:T1]7N[_`%05$Z%V6%V7P#J2
%_he%FR`1)E#3\c4c^5t;0>M^\0n9c<=TDcDNA2[Fa:gdMP-MJ_jLf0F_alOhW77JQ^#mbMJ;d[aXM>OsU1Pu(]]ct-D%`j<+t3RD
%BQ3UgRaq*Sh&M]>B]7.'L+p%?oG]N1bm7rKE75pS=u<o2F9$*(%b&t7iZfsSJd@`N=;hf'lhV)8n1IP5+=\beo_p:4-nhLINaBX`
%^?C!F%QUCIikWnU"JRX6(X5?7"=*04&E@[gg:_E4r4o,)bKJ"Z==9:.i5oT%h2".H&K:tl:t=odQ`o@a=@9IadEcd1>LY\7`qG13
%Y:9;ViSd[f;nY4IiZYqih(Sa!Sbb7?l2C'on'*Jh2#Z_:YCD'!h<gCb\)2Qb=4jW-TD4m'cX)'KGkKm"^OGk%Uj)[slW6;uGQ.6C
%qruFMJ,Gr6lNM%$pT25!brQS6/F)3/d+1IS0emm*jmEjuMm;fL*!)l[p/39WJ?3u57N'JO6WsU'F1(@&'D!hI-q7mH1lXD5`^1gb
%'Uk_[dV1jsK/nQ&:#oR+9+B$T[#EEDUq8@HUemh$>R"MurVK)J$"Xk;.8E7k#TogX(@c;/'95ShIYhDtD@4mF<gNc$.Ni5',Z@#0
%Ho0n579NjV]4$F;mo=9O>,*Yf0=U+%nDLN]?a&e!Kd>KnC#5EdP=CJ!Lp,]jPZ0Khd''KR;TdRhXu;L.@CcG,qF^W$m\o=L4;:6e
%3gaXPXChq+An*;8:MV4u")(WQ)'@C'K`37:KA79K4KslDB>Lr7'Y)%+KDLh[c-1:'GE!A48dZ=:<,hr6MduT!@8>TLN-V<Y`YjjW
%$JLm[N4`3K"#ABe)U#D<&6]pQ-\i%r:sbrA/SS@_,6S>S^bC7l0M<h*m%]8kq>e,_K:Bs!oc:UFfVJTdOGpsaKoW5_*Fn55lNIMM
%@u@UgYt/dh.2mkM/`tp;-=T7GZ?T2%TtQHnonrA[)#[!g710u.$sh4D7u]Y&>Uji4Z.$eN;D$dr?rpj[Lfk;c'e*7u53rT#h8$*/
%"\+1Oj1V$54c@m?f%Oo,!D(UB5hZBOTNp)!6>/oQeCj0bm@,H5kbU:CYm./;Y^R8R!K;sK/S?:U5'a@ldG;<srhX7-#D5j'19B6:
%(1M$f,Beo_(j#PD)VJ<hJJP>26lMGeMZedalf;37aJoPReOAThOD52Y86e&)5n,Do4#T%"-"*Gdhi=4#`U\p`J#HN-]gXSCGqAUY
%H6U41PZciOQ$I.<+LR#2$/^[Z$>*B1?I]=A4Pun*I)`6m?M:3YA@._&#p2X;CR2'k35(arQ&goE.UEHH&%nF^7Z?`P+XCTt]"%C$
%>7t0dXg__e(g8]]H41t1Y5m(u6dF(`9D?d83,1;2*u#:hs,pE.TF_Y(#Oj4"3(1o<*mnhd6-7R9ZiV.f;+9e:nH>/!"XY;SgTEE(
%i1CX7->>R_E/M(</_-`9M\]%>/s_W7QU9)2ea)S4(,_2r]M6lcW*m'0C]r)i6q9D]:gc,BNJoY"Y#-GrSl=h*7_3?^)OdXGPa3OB
%],<)OdF(9:JJKFF3aAc*M5j6*lIF#OjWP8`RKJ?HqcF>d7X^\0(.\F:>^dY4)9j]$[qcn!lR[YhR1B]%%Mc>F?F7dEC%[K%[0-H;
%\t-A%2Pm?^iKH<:jJ0WZ!_4"mltC>]lM<k(d4TNE6AjtboNbjf0So)$OqB/#"p+OsREWo)(.WHZFl\CP>0mS+ZFJW1XstEWaH`+9
%OJl=OW8'hZ83m9WKIAW8>/<SI[!ZC^_gj$RU6DFWq3ei)\bmQXBT(GXO^/Rh($OZ"iejD:/kA^_ER[khbrc*$MR:ZK,Erl#j7tf7
%qUP/qoJ4.G.#l*N]%qUJ^^]5VdBAb5e/P!>:;BP4.l"6#b[8H/M1ZZR3#?8B1_EkdF5RQoH83X0^jKf-?7]!Z$jnsnKr5rX7#3.P
%+Q6iTAI</klq(OU58k@_e$gf]JS-Jr%'2(JThSZ+Bq3S4AB1uf2`Nm\5Xjj:";6eEJU9B+=\T6b3\bX]+/a:K/muXJLk&N3T"s2P
%*&AD=C'a(?JcMYL:g6/&=VMO"QGGsX"0GkgV!u*e&IP2V\;(F-bCEPT#/fpbTIg7G<_Q]PBQKI*7"F9Vfo?N7,01[H*7oaC+I5;-
%(0PO8cn#6(?tNo)N"+9U+>EqS<1$9en]ArUQ'cZaKdI0]pJDOT\sncBW.A0O3%_!#U^%X2>o%#N`:>2>Wsi=(WTE&K7-5Jnp(`Je
%?Opk*W6;F,,cQ,pJ9$7U$d"&*\2S/k_"&c:&4p<8gq,<1NoB4C\:7m["-k.GO*op)Y@=rY!Y6_2/;DR\M5uEfc^CpTq>*f3g@<Tb
%S]c:KMkphn?*lGn+l<cs%#T-Ta]/YIbYF!%0nM_@&e)/>?IjE+NSZ?,4#78Y>:ItJF:n&B9gbkdK9/]U=G>F_78p009?A1D,#VH-
%'bZQp+;NujJbcJIm?-+_J1Gnp@=&+g\?^H$m"%\;MMV*?:U79DNDm?1!$N3#7!]g?$Jh'eR4$)Vd];]<#E__'g)3AT;q_QhGelDZ
%"go6gK`Y]*ai0HGo'MSeYQ<Whg+U6HA8%J2m53A-R.<b"bl+glY@:HBOjg10Q+YdjMoOcW,s)3.)A[Ku4>aCMd@W1%f0(F#1ru#G
%@Yfl/E6J<Q7nj[DZNr[$E0^-k!FSMfPJ-5fZKYqdk,D>:n]]mEML9Ac*(+'e]3rZf>/09%YliWb]]QL4.7[.VBHVT%+.(Y30VRS`
%!&GT(L`\N7,cKYaAV&B(j;QM5Gk\"6PmfD3$a>qn\*ugr3P,p!!l5og5QfF``[dR/i2?%d^M--la/:[Y)_R.BL.05XP\b%gl8AA/
%R8u*'?8,F=NIr&lY[G=^/IP].9hchBL$#2]J^UPMc3VVq%:ZO'*Rd>BY;Q&^mV>)r+-<&:cq64e2GA<*![(i-EKjeO\<'9F9N_KW
%+Bq[t$_p`R:^^h'$!?Rd[0e/nCsnaE/QP2h7u6Q`fWljRGl"Q3,=9hg5CKEK<(?'TW'BGC1G<dGTRi_JN7UYCFeJ#@<O:B61+\^8
%BOXWt>X:.rN`[jeI9/-mN"d&D#R9Eo9cU5o_CkKiA!"Hb3VW)b+i&@n?S8<23rBnm!N9CgA5LE(G55se6i[NUPLl-2ZiM4_$-laS
%(1T0TksppGM]'M'doi[O-0Li9;9Xj'FEq<q5g.e8?n@qPcB?HA&3Q]jE%B!0XUU<=^`Z.&O.^Dg^#_(X?-c_O0nkqO(6(gt#odU5
%HX8J$k<p6$U8<[7<PsErVV)j"=`$bm7KT[]<0FSnB$!n%/tK3XR#UPtNjo0SQ!?.[PJK0uRAs0j/`[@=njG]CH>h_<Z?f82;Q7"O
%/tjX70^5XBoVc7@W:]dT0D1"O;'68O.2F-;l9[>6m"%P?aO`d'S<=th02g>B5lq]j7.l1p&Bua;#Q,.k-8D^.qEA2Q\X.Fn,St)2
%Qq+B,94j32?<T13NKP[YcUgd[,T!g!(c;*m$qXcp`GpemP>\ZcG2g!^nJ+Ej\;EpRR<hE)7AQbJCLKXH+saROdNR=J%ur'56f]^K
%>,6[]-q]?E6rIEeAY$\$NK"pt.!J+%N.%DQohAX]/V(e;3dk.?n<OdofrJOOJm(DSNBh/\3]fj&pa=J5<$O5d<ciA&Z.8CF,)r8C
%N6:nRQX3%uAs+!m$'13K32&f4a*pGb1G`;app+40Zo/6;$L-_-Hg$j&5Qk6g5Bai(9[IHb4YBZ:=W%IK%\[rqMQD`;I^UHYeKr'k
%6$jJ$UjiB]akA_MbQSNJ?9r3b0GEM]@e(3-Ue1bbOd1'Eh@7A[6!8F:nL4"hPQ6JTR];-FE)9b?0]5dDfFpA!_Z0_f<n.GB/mU=2
%"_.m7poh7t7EbeMV3;QI8*0HF.M5''4+2,=@tAU!+3=5T.%OEfNQ<eoV9n5;"fo$^D<Po>>#+CQC3@Z.,m"Z]#j"=XB+!F7I^NXB
%)1t6NVcdi$2&%:9W\R[P$Qkc)"'c%6)-!2eE"35cR.^U9RQ;Hjd[u!B9m,G@GQKC.Brb</T>^pI/_KBP/KjAd/%nu,.k*)O$%uqn
%4A"i!cKJ%f3.(jt'6p7]I'Z!@]h0dVJbk'fmkeV!d*f!8XsAnUA.^4g(@kJ-:\_2eW!T_%1OL:$/BLGr8T70UU/MJu;3QZ'e(6sp
%<JXnI>A'-$#sd!F'F*C+<YCdjmBmLrc1#i6LQf7g/OVRHLVN?&Q)Y8t3&r:lcE>Nt-Y1DP4h_&N8fWngCA$5hP)'ob,W.[lAlOfE
%Ff`7QWe9%\3n4MqHJ(fm>T)r^1YuQPJa%aN!Ckk<_kd\"li;)?$RAr:=-j2^&[J7,9F*5LoO'Ht.+1D-<g//KZ")F*YK0lQPF#FK
%iuE[Z(B#&Lj!]+*R<>'?<cbJ-@$PknA$&ffd2JQLG"^fuW)a&u=+^sA_;a;g<10l[96oNH8RZS!I9+_2S<B8XfI<"9bc%C.B\c..
%q5kub1M4fV.mp2oTT<qh0RcHifqP2lMjdeOg%#LJKZ#I&S%[n1,>fn2nJ)d*!PjF]7H>*!8qfoPYEDP[N@bSZ2tg+nS7*poP!HfR
%.\MD3_+Cqa;i>3=,m&n^S$QifVK@t-WTXDl:/6=<JVt0M=cP?QB,P6;g9'[A&fu3j<TZ9Vq2Ln5KJ%oF90f/n0bnhB?H#eP8VAs]
%8\bcDK#SjRM[YpI/1T3B8F/s2nRdD3:0blq_S!X^&IN)<7IoQ_pWOOJ(mr)p&K*tA&2&\\d97AqKrUEQZt]jl[D)3s7;IUb2cDOg
%mBI*jYH)5s@KJ#O$4j$\7V#-#^0?Pg%0e.nMgZu47g=<L$Rr3KnM'_(Ci"n>)$WQi,psD,A(+npIu-73+CnQ<n2RP^E*sE3KJKA,
%@&@;4q@`\O+=0'.>"2L0Y<1'-i+<0=BL\gY:h%X\;S=Mbg^\:t`m/&Bf,DM4!"n1XKX7Wk8HB8b-M=qQ.`U+6oE422WeRDTlW&.,
%9t7q0%c)u;>LN+i%Th.;JkY=NR"31t[&b,u>p3c'guu3K_A,Ps(u'eZ9:!>\P`.],gO<PEU);_j.rAp8%VcsQ)3&Lh!=&O8),3qZ
%)HK<u(Sgc"l['uC1-IriB(B[tDJ%n8>EnBH(^]U9T^&s<0R.!YdeD:[dM-\T;bO?]9S@+2\r10>d]gtfSN%+kgA,("WE-'sEH%\Q
%iT+bk'`0Ks"1RM#EYp%9i;>r,-T(d[,r?d88L:]O'p%$+9'W53E3WAV)6#UpbOXte;k-;!!3/)VGVO*r_'mU-CIr/lida-_`mG+3
%_:6E*mlI(cX2YXVTbGK#>aMh'KVJUQZKusN'1^#lAe%onM$e9+\\sWCV__q^'$'\NM)u`".e.*3&7<`(_\I>'.sEtU(5&Qfgu4h_
%Si`\W+"u*2_st=WZ:%5'Ng'XMq/2&,naT#j3c?u;0G)"SdY9\?V54XPE#;faq3<e,6UGO`%;@elZiGTMF+sdt?n'fa1-Ae;7V<-*
%bn?(!@5r[*:t'=W_NEZa=PaXbHd%.S!6!O,\Lg_MB4Tu>\lec@>iEnp77)@!$>46nFD"S3"P62+CJ<^F1i9M"7,b4<O(U<.Kc><J
%PpdXJ7jK;3&qrDbN<@(l'8;(EO@c:$-ldn<N0\C=_SP+p5*aD,%RnMCl4$HI][^QGiEQl'],cX$PD!G$4t?5n+ro9&83%Lqi?AHX
%8p2KdB.P&ek_:0!h?SnJ4$@frQ6pJ8i1sgWl&6Up'odnXEc=iK!];%Si926qZu;nZd74cp!hC2K>['\m1,4E6C+B=]+3`Zu)U?rk
%)B9Gn%_Gn\WPQ,(*!4WB)P#jHR"0)(i)@fm%Bdsi;gK6k!n7!),Q6bZEier&\\XDM62K&M)CaaA>KO_5Q45pc2RBF2keVNtABt[1
%E"[9/$fBBbURAa&%"<..,p7,7n:QqH$i;u$q8%nV")/hSi$?iVaRVLcKBk.4<^0'&E%VhI]c@77,h6o\l^eC!Bgs`#Y6<h>@u^/Z
%SKJo,0pD5fr8?WD-M;NE#:D5?pCl`niFpW@Il7Gg!+(r'h"\_=^u7(qE:1ujWoX[Q32#)i4jM+rbW[,ijur<g1QbA%E8q192Wk-0
%\+>4sn3_KVnq0">b.4nMK;4.UAqM1qFMC9^^=%XDYp)'WTEiLuV0),EH>l22W%o=ai.M)uj_seL`9`AHWNYsP=;!kq2qYqe2eIV1
%m/5cAnOOP+jTihHUI3H)_&\s%JXU\0E3s:qr.Z<KENcP3=+5)kN`\r[jTe;GLi?M[#:G49UT:Emi0kRr`%uj]:[6`(#!]UF[:27n
%#:G?>2b32Y=QLA]*VA8lk8'4%Ds5#'=HH)0fBL,R9Oa_$f,!i#pqaA+n@S4CY;beFi;-E)cSIeq^)h]-is/pUTsK=9VbR[sf,bgS
%d6__*KJRpnFto;P5nD7kTHb,Qd=[XlP9R]6#C!^77<NoqYG@7tV$@7Fb*o4[4ZHh,"i<>a33YB%5]qBlS5Ztlk_:/6Z^@olPo^pd
%/nl7/4ZI^tPq[T_#KP=O_Ju=U-NLAQjG)fV$^s%q`X`R*P/uP=#=f0H]>5#<1r.K.LQrsO%!'n>+NY-hdU@0fD"tj2n<#f3o7LgO
%/Ls'\HKg/+S5'uDI60YQ$)_km<9"32rS1l-n&c0$&PrNris05b@VFk^+.Ts%1=Y+T_&[_8-uJ&N#I08nXj?q'=A2g'4nuiJUs)ik
%nq3]?[l!ITiB.]#A1%Z';FRZt-4%XY[ieDU'8.n)VJh)0*24%\R(M<j<T[Je/79&0LCg0H:(Zj7o!,\\JoFU2eQ>k(E%KHfkSo+m
%cugfKF=.>A]kFB^,m\\p:4lh5#f8+d1gT@^lXGV6L)h7_4*%\h3B1EqR`jUnB6#&LE+d&TOu5)NRDFe_QA83DSt#:ccb/0MY`K)A
%3-MffDNKJ5T&[NC"OB=aiBJ5,3&)Z0fic^a28=6+#`a-:dqq/g\0Ed5%%W4cS6\qIIH(EBg+bNsl?qNk5Z#2kR1C:^JNd&r"(qdi
%mS@DAi+UO*Si1uSQ$^u65mIl]K,Z1[2K7A(7P24"JLBS^jHU0:otYrf"2Em*s38u_*6Z*f59g7X)_Us@47tN]]'-&p/Oc4_/[mWM
%9a]+(2\L"FnRX$3ek7`$)b+a.6T5kMeDL*D!3o!$8I_B`\!OCZ5>I8I6^Z`icBnMl976RA.WAqWBp$t?"V/_.4/*T-3%5O"piJ--
%=Dj5HR0oJ7DCZ;Y[lS(88S8*KXJQKpN!Z$5+5KfKR(r`>fG;iR"O<a2^eCSm$(N>bW[eZ@)Q]TA-3EAeWF2Rh<8_HZD@hB2^;J<P
%#TW<VMT\`u:>/YmMfpRh^*rL?%2Cj\H@Q?E.WCil:+=+Q"jUj(Z+@BE$j&)$-9Dl#.t#,fd$_\+0tFS9![eX,8YeE[3"9T!6-MaT
%ACY3>;'uEXLlkl?'7gf./hGkJM86[$2/1At&NHb&Bd@MN^mR<;&+2R<Zl3VnFWPMK3O8X6b6-$![TP`@H,*#'7d\rU^r^oDR[+Bn
%3+EPcLmDH^g]J6:g4KVM/^.PYnpmd_\?qM+*%bW2]9NWVZ&/qoc%ZIn:ZYJ^4Q$@aQ"YU.!G?\:#$[#kS6ABBT8a'qVP3Fm\`!S0
%`8SGlSHdl3WYUEQL'AW*#d]0g%6._FUUQ3e*4>rpD72Rb>WEB%)*Hgeq;4#(3tF;SaE>%e!I(=cVS_amH&HMI4(uELAHmC`T`O=4
%8R^=e^hMH*#-ZL+4#3qL1DXqWVrkF0(3&h_Z;>>S!m\G(m_[CT^mX7OWTu+nCg"u!=BWGqfN>,ZJFaeCC,&i+l1G9+HsBgi=f"J6
%fN>r:@jKeG/DuP8AX,%aE&(A_Oi@E^*aH4WW_n;AX-d)(V#Y-O?H[>b!6=Ce;YG;AE2Sp2GtS1`<iY.S!R;Hu$e6]Afn*,p/Hn+^
%-#[!G&O^)"'I#SB$?4][_&0r/!RC[JlpPlEPP:537l(B0('5[FK*,BOOXhpg37#DncW_$$>#(p_KC#=5^BS33-3lME3gk2ri;b8"
%UGoN@*8kf98DQ3a^`aDXF>n8k;lHYY3t"$3flX.IR0?h_dq.M>GF`,Qn:3$oX`_b."--uO0cLW_"9%!WWq1`C'i9)F%1tSVR_e8T
%"HG.aah8i!VtUiV%772$kY*"=,&l=rob&2bE:cDRbkNn6E9]qool_BqNFsp7N!C?Ib/VtW^_Ibm=hqR++?I&E!Jdb_U0t3U1LZ6A
%`>]S3-AhLUZ%*K*j5pc@"e5m@feP9`(3"q)Pn9duJ2:6&]8+]`humR?q^$C>2f%:+TE/[bM7E&0#+Tk8nqAS)39rd8[WNp9Xk'<(
%2)BfqC=E9T$(OS:,i\,`i35&&QZ9nGcDV:WGWHKtYVb2)Y;:a)79TRI9]0Sr?<ChAa!5EtpmDGY-m+:u3tjS0%;FC9-?)/5p;Vgn
%*)`d5ZZRU6$o'bc#89'A/gQ)&0S)SZPWYj"JRb4[[GP?nB:`9;Baq(8G&>>O&NJ4*4>u"49]2?]"rqNu"O;BY!n*VHgp&!0B6olF
%QD/9KZCq>tm2KP;WPBOLiZYL)i(WY"DR:?4E!<bQk*N+O1]ODX2cS_ZXXaV/>..]nLo41&HY4V'>:OUc7Bku&l&#o:Xh-k&m[XBp
%>:OT6>%JLl.WF%q[?bi&"V.oA\Bn8+E:t>[=K0(rq"+qP<8\&@[G8oB:k9k=>NKIk!XGd)/DF_pW5)QRPnoq6b1i>CH[J0ac3c7k
%?[!u=U`A]4(S(o'F_#gmR0jp6BM)iD>i7.dj%`UF$lj2JQ1KDN"39`UQKqf6&9KLAhf+-6cuj"_(V$mR$gM!T]Mr*I/oZ@@`nXs,
%i93dC3aTA42+/?`.W?Z,F%_0P"ca@>e7L1LN.^QWdAapLRBM"p7KnfnkULD9^ld0=8WDVq_"l??=!DSd1NYZoLqrOXCADrqE!1(o
%B/_/VnDrjOCoG.kJO+U::'FAmGjO6BW5'Rl$57P3E;Gij1YgBsc*j7fL'q8B:"NDuE5m-ieCD+FdDCdX/JgCuMS@u.QK=786QXh3
%^sTso^'u#@UI/,l3u^.D+3$h6"2Emn^C0c1?p8P,9[`[jn:<[`h6AlWpqX:)\W<?PJO:N6dZ)=3^Q]kY6@,F0B4dk*]P)EF9I_D%
%a+b*EPI^=-3q@hX*Mck)%+,)lR*5lBi</7Xe-qqT!*&:TDg^Je^\$!!lG%=&E)n@feDKhJe!,OK4nuf9qIDE'I,H9S@;Y"Y%ikOB
%f5gA31X*uS\BY?IHK*&4%iihZ'*]I:V@fO!5mNEa:EoTd*B:4O'`1W1c5%`kDs5"4#aQ6J3cI36QKt1G<uqRm,Au_\koleDIaEX%
%N*inul+l8HMi>V,*B<tA''sd"E+/oCB'jEm5Q`JFcj^pRR`XJBfYHHI/,<:["*`O&RUP0C%33XCEFW`n""1P?RE%"fJ`H,;q/e\;
%\Du`FUo#q+E4gr]`GX>D!Sl5H$6is^7ghmO2Ita%_h/J8E.K7nOMf!?cD6]$Sl(%`R*fqXRD=rOauY.""Q!rBZn2kLYeV7<aodZY
%-.J1a*#N'/UYs>t%eYN@llZ=AeUR6B#C*Sg5.20`c1]F"%,eohe@+6gJ32=>AA9mMUIE5A(r./9%jtBLbQ&,.46@i3!cV7%./2I/
%J/=*A?hqH6\O?b%dsj/e!c)2]rXJ%Z>e%fQNB2MdQ$2_:n=>-%Fj'^mH`?LH9)Y<;./(b#GTW6GD2H$dZS*ir2tsgolAi,u,Kks5
%DB%$m&sS?"OFEt*@V6!O8\`qP8t&NON>A?=n"eiW6,7A2q@2\#IJ=r`L8W]Ob&?cu^o#mBIeRm)626FC49q1ocM%dW0qOMUA)X/[
%d`K5(D)sl%^6(Y2l5A,2)(eckRD/4B%*T-WDh<('%6?:nZ^Id:`q7L[?pKA/)_Em7[S5S<Ul'"8qM*H8>W_!ADGK`561^))jV$Rq
%nr<QZATs\:^9KH6\l*o#;Lsdf:@O7&G9+os%DR*CgL9SuP6_EB\'o[K[cBg0Y^9k]9^p77Ec4WX@NV/q)d4UFNGbWe7c9NtpRU#B
%EEb3mcIC]ak!ohpDmYUSDbtd:7uda7)fBRN1FOru^!Y9@Q2<(rL3b"D.;d/>;'rOn^N+ZgTu-fa0RMj'!dUi+fUL7r'KgJDmq1<h
%Cl#bBSdneI`/"ISScIj^@W13(eBD-/DhA#1]G\rM`;N@!/$h03IMAYsRCs36=Kn"^T_9]r%UQ1f[5ZYiI`.oQ`^2&eAlu%GYu9&-
%hGS^\7&8';AoBRa;KgC1hIrdp*RrqZ@F/P(HdctKA7_1>]nmpX&YO2l_n'6OIW0YO!b"WJbO&"KWTLF*HNT^DJ-6@"DmX3>c%atW
%+_[KKDK"P/^A5V49l@jb%-nR!`?[4!XKd-$)G3Jt^9W+71^e"DpZ>O.^9$DP1r3:NYT``F&?b\AS_T\p@NkW6gtU4g5mc1ugm^tB
%5*hJD>>]g)F=6g[)h<m*/\/>h&&,1,h?o9tQ.oM=8S?Q09M%R\E):m;Tg\\aN7o5u"Rc4I1OCp>_W(U@m#B;%k3QLLk!0[9hdPX?
%-4EY][rZoF(KC[%RG/Z&9)s$PHTU45@AW[PT1%1R9C5FbQn$pj^!XVNlp:$`^rMV`R(\oS_ptV?Hc*R1*mTMnRoVaF2N?B/p]=S&
%40uEVVHY[E0mg7NT1`!np1EG)c+XXp2k3C7*q.V8E%m-?%;KgXj06]&Q.d02Npc>_WP&bj9ImM0JPTGY)es;W_uLYoeD<S"Pni)Q
%^%#^Qs0pM75l)?C*n9'1!r>2%AoG&>BW)Sko<cJ['X=I2KsVFr@W.o7C5?t@Do2,&G(a"T]nt/n-,1+?UICNc:@&G2?8jt"&:5)B
%A+`)7p-q],:)V",%*X!KFYg9]lVLi*/$l_)'4P78^$4`.;XMcRhW/$8I"jA&,Li2K;`Uei)3SJrp4h=kEFYdU%;p)66eFV-DJuOC
%maYb$hGf4n]9V+i/Hd4UeD<kYjt86VgDb4+bJPIsB"#3jiJcQ]W1IIY7deOsMLc],hIoancOIED-`e7YX*S>%>1pI"ms=`s!]WBR
%&e6BfCD8\^hTSVd1rbO0Rq6mkBB\.-,i;nOIU0Lt2=WB-Q.qc<CiLu52r%<e[VA1s%>0Rt+e@=k6e"<%eDBhX.lY/0WP*"=0Y>%t
%HS_RlWN2TEqsKf"qG-ub<!l^&@pL6geNhZ;9M"+?$PT7,LTdokLCCj2`0!=k6r&gU"I?G>%e4)>G:9WU>)"VC=JVhU_;IuqXQ.Sq
%_`A.;YSI87A9fkf;!bh_,"jTt18-cPFGZrC5VQ[nFeY<"80C$*F`Teh/#$`#.:gkGBXZ4u>*drbgp-UbDY8Rt+Pk+%C0`69R-a[h
%?KCsVpYg7q/3mq1.KEsTd=u,">0s!gg98t2(s$?Jm2DW:X-N3/0aTL!7+sFm]jp[H8W1je'rni6O]0Oa[+I!%=HC]i@GL'\+!06"
%!OO@r<j366?**[OZ$:(1Va3ZGMIYNTL-&MF,.\R<OsuW<l:t!WQ)_1D(3V6B8"p7a6K.NF]IJ/g5Sct!(+gsF?:t!c1`J\BlcD<$
%BU$@m6N_f(-Yg[YF6h5JHR0fF\:LRjl!o95rntL0'YJt/;'1>"=Vo.YMCM?q,g@ce$EDMXBrPdfIP@dr`f!JORe9Pe!:0`pLfgFK
%E#/bd`9p)"=Cffm-n;I;!'@+sY8p@,5kt]N.?YE?083t+^oCCgb4#fSCN$YGG!'QoXAb$%Te)B(UJVMO+=Vil)S;uC"m3JkHNHq[
%Q)qo6=X?G<ZYd)o!\i?s#o:#;gP,2<0]_NMNn'j(+h$7e-bL#/^JP"4=rdWJ3j>Oe]\,h_$;;mhlJ*%mZjW)G0[f.)\c?L(9Gp<e
%*b\LqF][(UC^u)')KkKR&EPIc8M&=cBgaBI\@M$[c0F^l(l;>A@a/M@H6>d+P_@(8;4WsfQE-oAnS5pm-^I1)BS#o;#.!_''JPJb
%<'\khW\$J7!5g-+,Dl;;!>u9!4_qYu,n6H*I]Ptd6S=Do"P1lGCZhg/:bmH.!i'?Am&d?]-7;CE:c[&<nAc=6KV4*&_Dg[<7Ro60
%%aA1u&#-0kI?'1;IOJ/0fR\ZpL$4;4#AL*\oPjrABkA/-ja0KjBKRXmTp&gJ/c827"_?a"mNP5s"]i[gS/Y]V>g_gecs"L?&@D\@
%"Jk?sjDmLcarpQ".b.<?-OTVk=Q^4CLJg[j%73%L#:BLfQS-Eg`Z_-J9Uqe+CUeg2,G\'V^K/kC$A?IiRUZ7C?6D&PYrbNA!l>Q*
%!t5rb*TYH"g`7dS$r1,$RSe$c#;*qNaUD@7'V[;bUP4jN4.-?\%tKN[5Kie+"ZD"++3bDe$(l_nHaGJdO=fP2L)&Hh"u:odAIA%'
%WLI!g=m$9/G.Esr"BO=:d?&\BA*08TpOPE>3E8lj-7)d.8_*OA?V2Rud#m@4"$slt#'*Mr$#XX9V]tkFPhpqm(c'<g&;V&fi\443
%X.VPH0sl$fU%F/(#0fPQCh?6N,^)J"@pk_e:^>*qM>IBqE.D]`=ioYrJ\.//KA90HPp'8G/e&Lo]2PPF@C(otd;o?MWH#2U*-/n=
%&/(,7N20OF_i,aVmPt83?)=*u]f^kJ"`rn;3@R3f]E[U4Z&Rp%C__&sbVktnQ0/TtQQ'n;,s`][GEJ>EQ;Epa9uDhra(CD))TjLD
%>OW&%I6pC04l\]V\e.K5-S%&]\E]MSb62iaO_JY?hkK4L=IpMTe%*\2OUp5g#lRqDs)k[_?mqnDU;iHhe4mS5HeSf;eP1RI0^9q)
%_q93ZCO82I41J!665'Wm;#l$mNXrpA_=l-,IsckG\dK4H1GX.+6^?#++;fZX)54u7Ql,nVADR]VbjKbM3A3S\6Q;H86$Smk*XjG"
%,VidO%GY`o>I8s(TpPhQaPetYKHR[V\2m<W=;JTW%Y>"WaOe=:(raor1$OelO?9K^R^k:-bV=jn!`IJcQ?R/:7Y5hd=kk#/>Z.>-
%5(Incq.44l=LJ=rRNPe4+%9TN=u*`[]Ou;V9U[3FD'38r3Sk\%U8;Q?pp"-MkY\CL2e7ui_`5iL6)7RWHtM?27HD#JcjAL=:b&QH
%1_R:[O?!b_gO?//pQ!7"]=OCM[RgWI[Z2r,R`U'IFMH]ep80,idFan0Drm^M?C]&,;o^f:\T4EhAIC<;h!%S2&.77<&i6"-C+K"h
%5c#Yhd"2r)ct[>IMFp-I&4k:ce[3L_]*quh9lZlJkcNghUn+3b$WLE^,S:#'ZAaPd`>X.QEc.HKf8"'&!N6r8T8+doH8E\6Z0/D_
%5rMp[[oCUX[[X.iRn(sB?,JJ<[b6&ad^L,^%_16#SKB[D$QOKu@'!f(n1;WGS0j)$UG;<?nAFkMgpD"`%<GTp*^r"q4sFdDn`>[@
%3ML*L9S315DQ!n1%SoDC@5E(T;?pB\2qtd(V3Gqsf]';m_-".]@Gi?EDKgYD:?uRM6RoHT,B/hLZnPDf/_gHD`&qg3)B,4u)#"Ss
%#1MZ9V/u-r]*lHg5b<-0T8jae9!F@3m[UL^!+3X(,^6MEGJQ'C=+9oC<Hj#$::+/o`WTXj1"M@mNGMT@PQNiX!P)"VN@T*L;M\.N
%p@(tc$&2?A(#-5+"520P?tb<2(.07BZ&<Lk9]L^3&A-<9mJo0RWj/O(.m7TBi:(I4<nq_RV?!(T<GGpX:aWs8SaZLK?2?ItlN?SK
%0m$'>n`6>`7FLW@h#L!63)<R1C%ZjrY3:1h'"hfqdtlqCEQq[D8uE<@NY.QH-(CU4,SbRPI:/BOL<jtETLKs*K%aJh2],<VOUgQ7
%=]a75\UgpjecdQ^%c*t(#^!tB@Q>o+L0J9^#2=[GC89AO\/dAq/>U$M)LL/'9t\KMFH[?Ni_>dJN;;h>fN=D)8>*Elg)]8og'h<q
%0pKJV:0QHaA!REUqFi:[,!f]hMt(guP?l]6?r\iaLrQTHBQ#;_O7+Qa.lIXe`&_t.--`RjWqZ=P(>Y$?G97;\,7Cjf;+*gB$?/0`
%(G*c4$RBd,#+,u)Y%`\B7;#HAO'QlZ&>mNBU&W<m]/<*!>M6m^MU6jO(IuO[DCPZ4/ie5U[qqZsVet[^lkqf1-57/`;KKcL&">.R
%oBSWB[5X26WZmWY;H60InJo/fG8:fV!ZN*UZ5/ZnVq7ITll\hi_eD^>&tJEneq$-2e^Ul7%#]qKGN]dIou-b7P3!1c^fBkdTU0o5
%7BIg$/-H_%5YcI?Z64_e"Tg%(<+Sk4C%A+\Opk9Q&DXK3LlVp24*GROg>T0JD/q"*0N`^U=-[qh5=-!q:$"`$!c7uhN-5]dNtDB1
%Yd30iK&]`7?;MKf`Hmp0k,NO'/5q/=!0Wdm\?9@5j4#6t)>I/E'%?Y!%38h<TEq]3odd\Sd8=TlqZU1LJa?KQgb@-$a[\sbc%#gm
%7=oBE7YLch$Y<D_>FUuTEZOtV!O0p=P0;J.$+AI?>@-No=UBZ0)F,Cp14($_%p]0fUufn*]_?Mo_q,pYd0;*eAfZmtS/OHS0WJMf
%UTsp$"\A0cS6+]ML-7kI%fD^&\FNhoKA`tf#KMYTRUO4EebY\bA-`8[@d#mU6`jNG#e#BWSEU3Z=*g,];.D!]4*gj6@',)?e[]#%
%<u/\ZUgCY[FQM3POKD$+EU^>.8d>6kAWS$M:Z>JOnGbj@cQ4@50d^me_d0G/54V?WFsVU(&r.T>D\pN394fL3=)N+R$nB/i%PRqq
%q?F,-*cZb@^6K.$#0#le(?Eh6Z4':_*-F!_Ebdb]j6):qQ0XePpE54u$3:S_C(uK57!p+#[[(%%]3VE5KpXF/fP?Lk!D:F8&(l?`
%cM/hnjCEs'eZVd9juCnMDPDurgq+DDX8L,QmlG&2.&f(>,%37K(.&S&V\'oR:$is"o&/tfJ!jit_+U%H9qO[;Cn+jYM<e#W4HpO4
%Rb64o)P1*!TE'_D/6G92RC5u]<q$lMX.F3FFFG5@/jFTD>?3kN>Ca2/m@_21E'9=a\-PZMl)b[R*fc7_Z?ROX07f!.O.RRK-]+M<
%gRJn7;*rgQ$>8@X-;DjX69#<\AFM^fHIamR(GT(npI=0^)4C+l`#rdPD,cgI*8%AH`JP`2')HdVOC<QajI+Fn$qZFcq,41r`SMDp
%K%.?aVY<V>k+r4d^+ILZ,GpJP89>''i#Y'BKW4/XK^W7nSjl21V(,B5C!8N\g8o3"((1IMjIPd<#c2?'5%Ni\dg9O-cBSFG8cm_8
%N0N`HQ(6>Q_<qpj,$iE2V=14BX?N%qUup+9*OPeZ''_r2DOBgO:F"`FK%BIdCaO-&&kahN%Y7F<T!\WhictjqjPJ\P?[KfbGe4=r
%C%j$=Km?"G/Pb\L3!l5jXqI^M/s!(`PiL[_6)%]s5:eBEGRLimo3f3TFWg(L&kDRRa&")AS8tC4U+DLQdU;<IAJ,*935UC&'2jZP
%+V'#Z#&#P3))uZB#18=0#B1qfEFiRA]b\KeBF0IEBE9_<PY>MNL"W77%ZYR2UP,lT3*D?4hZ"9oWm^WeU)le??RE<O$f_Q;Sg'jd
%KQY>Z2Z0rCVmk_b[";0"o=,65rrc[14TN&PNJ&+%XqL#]8^hcJGbN@r%eM"ZC8Da.Cro=0.[qbiTufh[^[2.Q7*d!&`0;E)b)dd&
%`uH>B5j\fB&5FktR.>r)`8[9)0k\1b'Ja:?[E,L],$`PglBVao5qja76ir`0"tj[<h#^]1+-LWcUj+-2hRqPU<51IAE?=`q:!b-D
%9Td<^JTTOYL_t#q(7=;PrlO(ZC+bK"EAiVg0T=lR:O0^X*f;:i@=+`[CPf`:KQW,CCMHhW-0;WMN&Op.>pg7GCoQA<dfn^AWoGde
%4p#fUFlJc`_FisYUIcgRgtK3PiM]=bKQDi8[n'5H9?qjC0JX^](4.1S"FQ7f]b=iV!cdd=IF:X7[R/mj&B@.J`-i8-f%OKH:bi1'
%BONqa/L2!O?I:%jqNQjF\==p?B11ekUacXZ0ggJ\%*LZ-l=2)_H_Oso2ut;CBqVKD3cX3`YS&:^W$hL,*SpWZ#T@^#13BCfY)s2*
%RQ2"jDCXZuEm"LG`V:M-Ga$ah=d"`lFaq24mZ7+^EPak0@d1^c)Rq3h2G&:h*Cs3=,<-Y?E?Kg,(1Ytr<4>LKdAB;S1(ebf,-uY`
%IYl,M#&7'o\:]NMEE2&A5W@nOmj1H'1abM16-*R5G>NlNBBdFi80<:YpD(`j,D9QoEJ)H8Ht+!@!]U2,!X+?BmMfIgF^P`*n&3(S
%*c*EVL7%KfWL(\A_%X.(0t"Oq\W95\*Q3lsON*lXA'tQ)[Ud;mBo3s'kCK=80<l6f2_#,6]sr@KVb$2?n:Tm.nr#Y@W?bYUUobKY
%:7,@,Z#=I:A$+,V7,d4t]DtGr%&jP(*ghXN0on&8X'nc?)5g7+9((!S%['*(@=^ur1L7@s1HUeb:WKoNgM+<[O/6[Wj!L2T6j"R3
%B>H]O8sD0P':Z=,[QRPteR@&31B==Q^)P4IbVO:P)\hia4@jN6@aYJ>=s7;rX7TTKUm;'E12#*P8k\$*7W^NZHXL2O5oEL3.p$-%
%N05IYh5gm6`?E_lLl`c4gZ%)/9XAW($%m"=;;C\IR<@0aAH5>j5D>rc,08A]Tm#Zb=A-/=+-eZ&^'i//(\FfKWS%WdZ5c-D.>;st
%$[[tOeeM*b`en7P7O.%QY.S:*-7a.'N8mQV5Vu)>!!A6@HjgY'/c1T<l*4"=1$9I]gq_ud,aOut8a?DF`S2bfWr:lXF!1^\f4E)d
%6TC%pTnoJEZ)(4E:`AF/UrGgJ'-nXn6Y>DaWhgBG]]p8p]*dtFF9&[Ofgpi='Y?';e[!]@83X9We4InF.NleZ#Dll!W"kJk5:<*4
%i!p(D0?ps-Jd0dT6'p!2Y+Z$R8aZsU5iu3?80D5K@1djVkpXV%nj*/l`KWABWDE\D<hNRbRM.@b&hZ;D;8RY_$2#IE*'NS5$eY('
%8qI<:X)LR"+Mr;b:#$)oOHgg#hIG_Op*=*:drCgJYSJ=M2@,g3&g?dSQ(/Pt%oEAcBkCLNMb>8#A8l-@StSXFAro/PYM:]QCQ^ZM
%l&W^n>j!C#f&D.8Z!'`V+E]t$(Da1]RRrh'!/Dh5aGuKjS0g_6>32SYDc;m.0QZ",KS%TGj9m;ppemXfs!$5\O>>])Y!ms@9(7q.
%^(go5hA]s1.'_/"0#62RQV/p199:CG=aZ[jLi3R.&6Ih9l)RM%ed7MXdk\H6+Y_Dp)f^3;#`4,dH<8'.!aO-5F9V.S"'IX_@4=*1
%<;pQ%GgN"GWt0&ncmmuENliB8ojWZ#qWZEr'c!X!pg3a-pd[T2NqnCSO=f(!YkY#m&eZTXlk#b>"%fYqX@f^R&dC6r,uL!c&bYZl
%K]bnQ*[Si@#*]A:d#Vc-fcZBL*DrDI[1[lf.R0>]Z9=<8d'a$VC?W8pdAC14E(LA)FoZGM9=@nLT$/)oJEeLB0iMeK1-hHU"-PXl
%kl\op+=T^<:f?RS4/is7gp?eV;ikdr%j!ZUp(8h"aNYh&7WbW++;1E8H_T8:P!21W%+ubVpbU?0MnDtZLcgT(Yt4]2ila]C2cC-(
%#iRd12DN_aV,NtZ(j`U=TP>I;B)8>l]H`JGVC=BcBS4V$HHRg:MQ&i:R0a'Pi=LD\UOn.lg,#k$hIJ7l@]C7gOCOkLoU]AS0U#-P
%#0a)R8iI0^0>-dU.u3?JnB;R&+0Ud^lnpg!+6=N/(BE>"*Wt:l)ildKdg?gr5r)CVVQ8if5%b;1pgcb=[=_tj;<2^fk^#Sna4+(!
%n+9B#81.<Ei1imEm:rmaW6Z%I.A="1,7?+QEEhIeA$.pLAXU]8-#0$:4Ri+Jf.0m[;-7lcEJ:I:1$msHouRG">trq,:Ol#`]cHHb
%6+)lb"bW4^.pTlsWKAA2a"F\VE&W2B*Fj&g82=^>*8k?P1H0AO&bPq)FKT&T"l(F1kg3=#k7GIH>8[-)G6=S4e^4Ml3IO9=R`li`
%'#LA&3XE&)Kf;nM5Y94)?k1R,=iTCWKOFt$S7sgRL3Z,c-r)hF-uP;Xe;N?\>_T9!a-S[neY<p[,aeYBE[2/nMj?N1$+Odg:FNW.
%Sk6N;?jf<,lqruYS9SCD`p+.C"^W&blX=0`afV5((o)i7)dF[do.aAq!Jr^qFS`jti^pQ;jg9Rh)p^8/$d]+I)LEf(G*8NIel4BM
%%,t=97i<el"A&A;OZs3n30q.'T!jdPHBB=)cm8]qi(ldnfL18oo0M?iOfLf(71X#c!u-:Nm/"6p"=2HLXa%l/O]4^7>oF-VChl9\
%p"(UHfSq-d'91U6Kr^:<B5B77lS&XV*MCr/=p'bOQEpP\<dE%a_2?8?jL-a3Yk:f7aMdQkTGdA=Ynt?MA[/.'(rs'J.Ad$jC$m_*
%"H'P)JK1K"J:P(NabgI_!2I2.;XX^YKc_6-;).NZ:_Zi4m[s"?=;J)^]RP++Ar!XIni\YGV"fIrU[b(gcZ'erRZ&$goG+WD?=a/7
%#>+*(CCO0VYClC4C<S1WpdH=1;UA%ac`'Rq/n`7PUH:c$8PBQ</?HdJ17L%.n.["V0(\<RrL-q#H0"nsZleT<6\Hp9W?i[q$B@\4
%q2t&4o>h3($ZntdS.0g<jrL]3J-3TkC-1;"]UT6eP@]M/1N5g0Y$CYR0f.=##BBEPB(5Xf++@*0(>\5se`i4lQqTgt"3o_%&Bf'=
%?r8>HU,[$fl-(\`?qE)((\OL3r4I\Amtoa95:>1p(R\\-H#e`bLG0"_%Sn*q&om_eo*V3q&uZr8i)sfH..DD==qI0_D!`o<jCa90
%H;ZFAF%%Ru"kEe*g\#e==&SOF+"k3!8RO;F0;IT"$s*Q&]/LggH9tY0_S$e3"cG]<3n"H.6?(*=_Pk!DdYn)J^*APt8ehLT_X@rD
%lF(PpICga:Yl``3ME(PgW0Lpg)2W][VmW3PHSAdm/#dcX+<i7Fq4QiX%YQ1q4^Iu+8DLM(/8sV8Z>:F$M`As09GWF"VmrQYl`C%2
%r2`pAO]%*>6]Dr`+A`IO(B>2(URm2pM3r60F+c6j#*I=G`8YL>X:`FA&h9^iS:#mL,V2P%5%TKC+X+dar"PtoHionmN?E723&a98
%'r-toUlb3_hhECJnfZ11Eb'A$g.TG!86AN!$VcHV'R6HG#^M7)$7o1>n!*BE-67fb;8BtL*Fi5H70Y4p<Fl.u9fVhi).5lX4@M4t
%?N3jS:FLU%MpGF.!M+b1Q6;McOj2!/9O\HM<Y=CRfj;OCLD0K_@28t8AppGm74(T1JqukQ[[4JpXH[(d$8/^fK.6m$aFs4m3>_j,
%:8;@VP9mL)4@(No'C^)^Dj7"'88#mLM<7O+o5YTC"6G_sJ\i>Q'k&@bNe""(PbSk-(+cq\--6"eb2`m9_2*pEgQKl58J[^FFiNj*
%nAsm+bLt,9_Xh>jWg;.o.rEcr+jr'<ABEt+87b4#-FWtm&]c2)6VYNtLmi0t#uuZILH8_XMm8G))C6fb)I28r1RLdc@0"Xpo(9/J
%L"t!WJ\rUk4MlOM>D":oa-d']>i8&'5iB)HO)GuZ"",mOi\LSUW3@&R.ailJXu1mO"6m@tE3Jna+Ln@kbJQV6Ci,*!9h8C]&#Tut
%3sb!c.l9[+S&VaK/d_H0^^i]L,_9`D2SLKkb7N/iYgW%>+sAK;0a2E1[6b6c7>@rF!1F6"ie8n6-Pko:$%?TFM[/9$&P/+g%1#kN
%ejgPl=]m$"`".D$9e2a\(\#j&mOTR)6')n>.W4M07Z83&+N2@=1W\,P$uT"k,q()HAX`f]TC2c+0(EsZf0TeVDNG:*Thsj(i&PaB
%"O0(ZY:r;#?lIVBeI!Q4`6@c7LF.OV&/[]!ASD9_JaUF>nk3<"#e1YE+NQ>UK@>[aOJH4F99JAfF5@'P%&;G\?P)3%1dOZWKesfT
%W5pbsOgLkuE(*<#b5b6!Y!DL<Y?%oWPHH1.G4Xa9"Mhj$OE]1iQTbV6PU;qZpu[\Q!d$!qHJjt%'&-I0B'Q`X)oL'g$rBWL^_j&i
%-/EBFj=;un_&-+A2BM^TA.M;q/JU3p`?s^RYk1a#K+,8)UDV:Mj/#GZ6@sf,iA)Z<6^ZM:"c:?E]uDaX)U:Di_8'Q#B^qb%Ju_\.
%+&McJOphB^H*Laq;0<BS*@o3Z'UVTp^.qPf4;*CM-oM788P4DK>35#?MRo]X.1/0U!=ZIX5_]cF"9:"(UdLl])(T+\dQMgq6#'2o
%1q3o"$;B>*e/6$;PL,h/"LdIb&Y;2U>29Gn'gUNUB:()=;8$O'J8KSJ6-u6M/TbbBRgE*rQS1)@G\@4?5:s92.X!?OP,8uD7G5Ai
%3[$0kdc/mg\1NiX6qLH;\'^pB#'L<A_Oiju&n565Q3W6KbQK0Y:Q*^C65LoQ^V^*e!,QmB@@XAQ`WGk"@`Ba&MrtIi@\BqMSi8:`
%Yu>asSe[CS`0.7@BJ0f[Ut0Sgi3ZO#[$C95L`,QPI;/r7PhB6EA*J%X!,YfC*3m8Hhh?JLp(;30K([-b1E!sZKQA?G_4QDj/q=-'
%Y`5_].!!nZ[q1o!:D.te1nBs]Q`6+dA1Vkt&M+HL-!!GT>)>+G8[()RP),9%6-^\`Ulu?%huI9PIqn%LKjid#JL+n:kX&YprhE/l
%,TM*5[kkO'Lk12b%M^S(&>Be`'_.$+I8[l)!j`gL-UI5rrS[MdaApH2*tcm].2SiaAns+0.4>BXTH45L<GPba4+N-e"\BHfC>tO5
%8n@3_;.A+tpSWkc#N><?iAZod5Y!=p*X=@[4Ui0X@rd2+'JLQg;7+Pgm0%[Aa6r"B;=-Z"/m<rgl.HoEga*K"@`#IF3jBnH0dMEb
%fApF686^s&[L-S5Z,*IAg;#.'Bbt5+[ac:/81_:1"[&i9oX=mWM#4EnNCEB#bJasH*YVD7d+%aq5D4-bEYkE^PaJ=b&DP4b9Nq/o
%guXQAn%(WoJa!c"*s;B-79RVc%0SN*<=2J(U:1,lUa>5*,B6m.c)E<O:fr'M)2&6hI36+La[CK+]H3SAXhiJY.Q0+KKrLA?Fs(Z,
%`abZ""d0,0HaYo,/Nm9/mhEiUa1,eb_)b%Tp\I,sISTX90FqM6,"U!@(%)tVjnrb_'Z/j#DW$crhEf>@3:C0]:a]?bPeXEZ#.GEV
%4h3K)_U/E8_5QlP9Ike?X`P=LU*HBi_VX(^!Ic6(IB6n)_if%tJn/Y:L`mBEBuj^LOc@4N-?teTl<%hVNu<e<UFS[s$knu*-@4X>
%!HG4#c,+&ML&R4^/-09*cV'OV5u+bB4+U@AL9*4dCE;C]:+;OB_"68'iE,DQC'>M[#2gcKb-Y`Q_&'rGC<mMl&I[<u^aCJ*LCg")
%3VlKW9Vr.B%3r8%mj.HHSPt?u0S?FgK0p"Q=q+A=BUI^eLr7`@J*+d\LG3_n../EUJhAOK(_L$rTl%n*$R157>Hu\6W5<L$=sEnf
%$^4fJ]MaAnP7XKgo0jlc)CpD-!r+#lGD/G::h48O.\U#N5UDOf8FPQ4TR/bu8:%dLP8s\/NW't0>pSAH)jM@r<k6h(YZRn>#]^fB
%As1P=LG0d#O?61\,@Vus^cF-&(2>bD>"$@>2@FpWW+U#dZm<$NO6+`Nba2uH4HY]Pd##nY$&iqEc3`u;V%<,l/,YM66I-"D-ore,
%@0G4<aet8qcO+@0'-H=uO>=F$1dW]ZPRetAZGM-OGEVOF>?`ZIJ/L_l#?O``80DNfD+R`8=Lm,qn9DmlN=/*Qru.34c?YKb6foB>
%"KX=iq&'3]'*Wpq#->u.e:U\=o4>p=4N:9W]R2fA-u,j'@RW:1d_3R.35J#<8c8ZGhq0rTrWUP)@Tn*Dg0PsfL&2<?]75nf86E'3
%%+]5JE<D_?MOEMCmbq*>Z)"m#@S"J$i>;\,9S]XQ,>K98r^aG+8gbm'`\QGcj)mb\48^OFR3#*/7\.4-A1GIH,<;0S;lS.J^pio5
%Tu-sL&h0#ue"C.:7k6c58;KQY,!QM_#J^YgTYM$%U7h=:#VR&N\aXC9Rn995Q-`"+lC"u:,#Z(k;).Qd_X@,/T8Zcr<ZVE1pD->b
%dd@SVDNICaGL.m@r@-;tOE>lih'@]\OVCUB(s(.D%eomF-^\IMP&RL*Q5.P::RIX0KJh<6-HfF(=?GZG89obQ'sji@.TMY+)7S`,
%l,^-dMCKpp3MF;@Y#S;e=Qir2SqJ8OTFpZ/8a2"^!qPqR+Uu?(6.in^#/&eWT[h-o$].GMWd^`NSsaFnn'c?[ZZ;k*PJr,&L$0W2
%?mnT3]Uam<NdtT[OJnNU>k;"3XLjK8l)(QD+?+1(kl>-E0@@j^QA_[Tm!<+p4"%OS6k(8PElF\@<giGH!44'uWGWhA2^L>/L#P_`
%P:0o$R5'Jhk;dD^9FEYpTXI2f4FDB>e2L;"7E@s8j?bT=q+h=_A<>!k[^GnI8S/n.&lXlIfGG0*JZ6Pr_WMIV@nqKocG;EYejLX[
%+$`Zj"W8bAM^g`d;hFroi`8nD,[_J&q"Ssb*B`*1\X;GD!r;o<T,:t3`Jnnap69gST0^k:A\B;GM&KnE=]FY(;/0K>+mGdQ<eOsN
%0?=l^V2RD)BW.$<$jSb`l&_-B=X%32(dY#;p`,ZCdKp7J.tfcG/.Q>U1@)eRkX)7O7']OYT>[@BPJW7bZib;G#,XQdX2^%il*H8p
%Tf+3s)Nl?S6c-uW?68@@!.'0h#:#$,<.50lYYIa,aHT3]')4$qQ\)D5GI>gh0J9Iqc_CUR;K!.+VYnpn2k^WgTGjpDi=UhKL6ST=
%f*J7M,>(k#oS4.]%rk2p;.^lnQJ$r6g]C!]5K`fP@?JFY+G2!n.K'j<@#bTXUD9]\!63;t2'g(baB*q9TJf;.M"Mg8$@0bG64?K=
%)j$B,n1a/nWBXKS8M9[.@teua<];^!)^DoT"D'p8/BR`?G7.BXQ/=IYDaDa2WLNg7==e,WLn'Pc#t7:c[,*kN85ZI+`\P.S2'0?Q
%44u[p.'=B;.ZmIs9&;C#(m9n&%>&"LnRJF'*lLkW;LV?V0-tYIog7+s+FgdLUGC!.IuAV1L-1Q'!XV#u,Rl#u2AB"_TdAkE3Cj0)
%7bSf+7''-_?4R\K'/iN,,BRMfaMB.gkn_sRLsWBC#+Zu#/lo6=1'6[aPfP9+Vh?Ktlq^+Q9ZMCe6qKZ=jFWJ]%Q]N`3C?#j1+pJn
%,.P&MM><<k:E4goo$`(8=MZC_DZlT"TduuD3;'P]:;=Aa>2HoDQRZE1p.IB`X5t*(,\p4+MAPA1OSG)9QcM=DlWtfM!TF*QJ]"]n
%4"*n?QDE6M4i]6;$"ZLs.jP54S%@_o\B=pDhPGK!K,j!=%LmAS9Q"DMZB@4@Jd,9/<XGd:-qFF^@b5=YM._YWhlO<j&N_AfB3.8)
%Tatlb!8g&Za[oT9HK!:;_VV_@qGVbe;AI]*5iTkn;#2mekeg3\^)#ik7W8nB6e3Y*CDXt,EDYW8<a`lRdbK\;_@.H9AEN9_AZXb?
%gg*4!650a?%?sQWp5>Q[9>uho(;#`Fg!NtRAhW-XXa!Y_e2D2C$)q"q^*b?F%mhlN#sCHB94Z/]kJ/;EKh[SI<%B[Qnm2/q*[L=c
%1nnB!,/4KC66r%tl,JX#UM1l/pPAM9%=X0aE?Zb,:/H`TMZNH&R8EX9S;f]=`3C#s#fgejh'<f'JGi.uM,k%/)K2C7#oj^4P7ENQ
%EWbhH`\nO66pZq)D#$aTkGnNGG75Xs'EDX;nA0kAeKCg.K,CUBf#cj*b%)rTBk5r>C4ud];A8$<2#TRkA1e.F1e*XT#e`msU<us6
%+3PC[2a?jW'Bp4FhF-4+V,S\rDdt*dUecV_V2g("]Ynj1?(\4:%'ar,A1[Y\aFNQjR#0fBJX@Jfk5V<!l8W*hUCc/-A1P'IOqet[
%=[]Gr/(Fq78CH3=]FkXK&RRG'b&[W\W!H`A/<//+L_Z;?W^([B5Y^Y]3t.@&N:m<k%94m2aS"VhN<1E+^&ZZ*1u_XcTK<69N:e'B
%&/UN12)\,o62!(?b+L_Vo>IFT@5posp]f0LMJ-prCP:*o$C@"+M"s7pJlmrS:m^6lNMp,kXs<-Ugrmj#ejs:V8b`Z>*=brRlCO#0
%/(U4KdQkYtU1%V;8US>[*#[:Wj]l6BGXV^*/M(#TU^0Gm0JiFH`6;%:P&S=cV^$5<ea,jP3UG7P\8F!RY)=<'gHsPk_-sH;'cK\a
%#!-?t[K?!#k8r!5]mP8udh0)9c3D%i*-[i1,HQpEW<.(jHCf##+ZY9LC6R"!178YCVBjBYWiP!ad@%/B_U(i?*;Z;R7L>UcL&p<k
%<qrMZI/0M\O6C1Dh8!&XM6P2,\K>jH(th6T7"r6C*>3d>?L&1C'1Rq6N!^jM919`"[ZY'TOE*O>K16?UT*raZmu"(G7PbS%dD[Q%
%%ulc.BG,S'E0dkK?JV(cBGk7F86/)h4=0hc"2M`%qAsA&@=>KCZJJBF`77CTQ7QoE@3FMX^t)o\OC&AFgkKtPgO]53NRQg=a:=]m
%8+tNTWE8`mcP6k\'ZuM*L(ZY/)o44>Q@ajK:WbPW@"&Y#:l+5%:qg7];-C$CW"!dZI%`u>/V?pX#=1Jn3p)qZp,ANmh^W?O'gO!+
%Y$S%aVA;uI:Pp#l"s*uQB10=L3si;F?WiU3&`0AJ_'!r<O;d=H5TkU_os?GLQ**LZ,E]'`CRCV!<Y@(>b+Rd^#,gMr/6NT*J*(?3
%3G3H^K49u$\kdi_\C+iCKQRW-.c(<`cpG-<5[e,*kqt21+_f$36b\e"CS35Y,@d=rO:(].-[r8;g's9qd?QgFnOBDY;2)hl7jf?N
%2P%)@OV!S,"\JEFX7^W!ZbUC_$98Ei[p\thXfQ;?)Vu/<`&)T%Oj6_7Dt'VJSW*oGA5?/1Sg`5O8hcu(oua-=c:GgrA)eK.fAKPK
%7DE62e3_Z8!g1_jNB+GL^9eKLj;n>Z5Un4JCl4n\<HJE^76j?W,4T3P;WXg"S)26F=.iV!cDdo6ZlFl/N>8uB*:"9D#j*9J?=#<s
%LqsBi%$m^<Q-M3l.qpL:/CL.;F^[4&*g_JcQHW\eFUJq9?e-@n8oFl[V19?Nm*NiE'l08RjdNI&23e^S^6D*-mWgJtifctq2%oHU
%Z&GYTX]4F:SjWN#D)U;]KN@kLA1o&.>+$DiEHJ=LDa:rC8-F$igmgjWGGA^-'E(7Il'1k"csT/,/k?tubbA;$"NR#X&UUA4j0Z)+
%TP4cB!WXj+lB.B_()k)I'8'Q5WVfl'.8-NU(55\^P>o^2e-(>Z]KA]MBG>7iSL0l/9dq5.Xq;Og(nh-V,@E#';fADII0(LIXWpa0
%.[D<^m5@NKO?g&`85^nd4A#kbK4d#(bLK9@!rip!_J@:2(-3+T;3k1$#KV>1Y62QDB%p0L&niYoDu?G&N%i-7g_iC5AU4Mpf2uXB
%":\1[2#Yptij4imD*\MZK!J'&-G6[[7!:D7*7YfPo)X!0"V<_F7%:-B)GFj?6;rEj"tMFXl>G5UJN9O3nbGe&/?h<lORV$;fY!K`
%Q2pK_GDp"eZHS_#H'A`!8-#>&IKU;g).kEg7LU"lK]IOoLN+\`lbQX"G33\A"'8$]E5@4ULP-b<2c6jF]oZZoPaeV8]HUh<o%HZ+
%FP;R0$@t[icoPkl9I3d0EY`U`G]>uu'5stV=Ig.)'<)<T`u[8Dj!BsG0;:]T'.trpC6;#gf[jW"^g6AipFa]8fn`lr'kZj-bc6U@
%XQ5?b4;!#Wc;5.n12b-4i9apE&J6YDpC'Jc7O5D9EHI&""G<*HW0%.?P@B9goX>5<)MNtX;5rB.EoD/5&DX7%qa4G*bFBo7ikhmZ
%$V_(:+6pbilGM389bWj3\5hHjZ;L1Y?jN^_#q.4;"kAdGX>-rB#ka)2V7n9e>T4I(7\Q6[-oRs`O<T@:?n[pr@=SAj5a[bK":Afs
%L)L%Y*\t3b<PUC^(GH3P?\5XZ;CW$Frc3W\9X[m)GfJ]c$"PWl>!e=40pACSRdp(I;q<V,%+cp'(^l`CD)&8KJ#r)]S/V=?]S1uF
%N=f*ifH??pCEtI[,Bra6a96KB:72%m3V*<S6oJj*=u:i)eDi42U)+.r0=]Hi)Na,=_#Q3[:3i"M;_QKm1?o,R=gB_j;HBSoW5fO4
%o2nP"qH$:0-tCW<Q!c4m-(MJE^mEG+gSmcuV'P8(<pS,'=/p7qID[a^.N)bV?1UW2&F$"\P#,@t[;NDeC=*^@g=]N^2K75O+YsbO
%47kMXI,Wp2Ai%ni!@UDl?.-rnjXn$.j9\Jl9p.L2!KWa^APOVc>:e[/"?%nZ-nW5O;ui?ukOXD$RG#,WK6[lack^#B(?$'U#1-K;
%Pct3ZF+#S'M/^S0>t?A#iT`]!OY$Sq'M:.Cm\<`*1L;\@#K9V*C$Jo9PrPSjBq]6Mh6r2F`^6Q>cX]n%.C8HH>*GW(8H')CSCYkZ
%*?\7Z0`dnAk@1P'7$]DZ4clKWZpIRP^OWfS@d7b&GTWu.*'@TMbN)=1/Z7?hrT^aNZW#9QdO<_V`^8>l)Wl(XNWgs?ZCZ'M+>=eS
%8GA;)VLc$B<[u%E@Bl1V=$C:iU<\)uZku<oB]W_NUq@?l-']#k#i&RV0\]5d%hTqDf&5LffB=Y-a`]r*+o;Wmr>rt#ZdL*U!p<$_
%d*`>"DB$dBAIo9-AhYu9NbU9eEIoC6Qi'ON;hn(GctU+`Gm.)HqBIqs'5D0^rtF#mX+eC"1)!qQ'os9P,U=`>6r\)3;BgkZ25,U;
%M_!HR3_,07IL%[PjEK0=5U.DkLQ$&O:e6bW%5B5^ehn&3!1jV$b\VMt;7(sp'om7j$H!fqQkqB(Y,HkHYfN@]ko3=DRe[&(PUWtn
%e;13BOW6FPCU*;rpsYLFLBS6@qqOc)R_,(4)N]bmYu6*!)1\DM\_nH%ncI@;NB/FR'_dgVi't"aQq>8VM&[9S[HOu$((hVLmMZf1
%!jI\8T4QJP810f\aoDsbDlc[+:R*=[?2[mH$She(e<!tI'e^mFITU?_g=o5NKKoR;mu6<j";*u>-So=BYEGlc5PD<r;*4r]hiPbk
%]h_8m"hXt0)-3P8k'X,N=`\u3#j8l*M<UYL9,X*Uia[Rj/2d8sX-eTH.=`f"U?Rn!X;9e@YG4@Q)G5^=2c3qVPtG?QhD^uNL!in,
%4oMGt-:o*h]0WL?UPcL-=*-.7<6\^H8ZJjO-60T/C'PXhKj1SjNRRXWP"<c25mma!!i1j?]bSEgcpl7Y)>LTGYQuZc[MXqAnI(1!
%G''2Odl(f':`qsfe1#h\,K=%G&';,AZjM\&3#mb)_$+g&ju/AD\X-\j"]DcHJX"SV'c%mL5)A8LQeVd:8!V4:(iJtLi!TXLpdO_D
%$\KK\#O#j0P&9$\9!&[3ED1UAoek1<)mU&r&2KEt]8]7=H[HGK`$BQOqM]_o)_!IY=`t^0Ql*AEP>/BGHQXZfek/Ym>B!a9]-[S\
%G%)3&\&1iu5t_M1(C=5A;O3`\js?Kqi$_g_<Y.*)dJsAfRB/%nF\XX)`El;nc_Vd]EMWJF5UtP[:n7^lXUKe1Z6[%,a!"+Pcj:I0
%KfUALX$R%+I@1@<5mu$K7u)i()Vp2Vj4%]CnH_Ie59+n>:,D!nM!?k8Sn*)q@6q,;i51`.f:Yk?8;')>#A2e\8=?2bRBAJtC*:Sq
%_giu./Hfn634CSUU=N&USu*%D1""8R@Lr(6E8%Z^)(G]l"F6#.4`6(/4%Z+\JllW62R9?.*RS5'7I+$U%lT(h7Tq^b"RomA"r+qi
%Z=9CRo/Yc+D5,6>MOIR]@c:1_<HPT]R+0WNP7R1"8Yq;Bbp='EQ%ZU(`=[Pl@,[Y4-.8;U-61h=X:0Vj8Zj[M-n#[RE^n,XH2ABJ
%Z$N#I]*.F:g/bWqJ2\%lU0lb3#)tTB'U#Xc"JIPPSW(LpK(g^M@L0t/Bc7"c'&u#AM5ZPDU%<EB4DZ<3*6E-WP`-WCABFiu/^Q3,
%N3jkCP_kaVLFc[7,Vk6&r_^%pn38*Qf;P.&_8().)G.Z:P+XJ(/'645C[RFOZ;EH(Se'%6?ni4UduD6*Z+ITr)bEQ;`/0Nrr_^[H
%=p[2U^k`#Q"+&6sCff-@@T%o.'aa#5LrL.+;MI>T$Ja_Z_8WTL9lp>^VTrpf"FTJ/O;C@?=-lfm0eD#8>-UDRA1BT.E",G=FAgC$
%+Z4uX"M9t$?g\UR^bTshJJH(\@86E>;@G9(1t/U=rEUn[Ji*&#Ub)&-N".Yf?a'6fcHi/TAm>[/-Nek#?rW3-qXDs[S%IqaXkaWt
%l9PuQmT5@&!$V$ULa8%tF=#TU?9@rV]]hHILn8:tKH^rsNMa93o4O-,el<%I$rUc[E]<("6d?[V@gbLB12=I]4ZsjF<3%i+4Za][
%h:24koI^`p`(e>C!klFYQQf%QKW@_)B8OZ<8'H4Z$mfh)@E*)/9"\cQKdXT&f2LYef-0WQVGqf+VONu-iRP(F,!6oB>/Na5#_\Yg
%:,V%I_pG4m5\]^!VF<-9Qj&QEFR4;d4;^q4B6t+NIZ]Y$Q9u-E>eV2V=UG==^;nTY1M4E1>$b/7n-JWD.n\d8j/im.h]qtZW$U;F
%$N"+:7W.G3mnhP0k-Q<+SJ6_R8ps2fDQp,UjuYUE=u0U$UVfbCT,>s#=pU)1_L"f:`-0"DQY2JtQHFPe?l.:+52s73L]`cTZgcfh
%R)=ZU^[U(te.9$*2rVGC:;D?0m2`PY$*Qk#GKEJR8gV/D<pCPQk8ihN83Sk@]Lu@"KI9g;4/+OiG,'G/\0[hTDG580.g8Nb/)))I
%5S8rkL$Xi<@bPc3.E3hqgoq.;*G?/G#Hh$Mf[ci;*&68l-mV3JYn5_/;]3l97!AiD8@[Lad@EQ+gSP##?+uCN<l^$\%LiW,7MM^]
%IL`.]<2R9YAB8j?@N0Zk4*HWHh1`\jQm=-:A#_TmOAA\=oFI,^!3<GFh=ZpCfq!p*!\\A6C^[(FQ0lis-^],D+kn$56:"l?mL1X<
%BA9$G%MHm6(t%1$j$HX4/)?a>aF/.D\iY_%@]7Z0)1Wd<&:2&P6`tc6cOK^<%/c_'hcINRTId@6U[m4A4UL@<A%F`%5..2,.s,uc
%M%XjQ_KTY6UI?6<+l=;JVM'n(l0]tX#?8,nr/do1A%"H!1_D^TdbPdk6S\R#U:W34n`AS1l0\sO$fIg4FE[pj)C0inl0\uU+cYsT
%mS&2iW-!6F,iuf,g$V[k9cWuGG"5LbZ4d`$mL5KgTjeA`*RW\6@TV4M=<dmMNA90._Q:gHX^lX1/ApQ(<4Y/E>R>=5U:UNiRsYL<
%]-@GaoV&1p,BOpjD9$aBL;`\6QS*B(`Y!"49^(mQo1PY=l0aMZ,*kiF#>$H6JK`j?,mdQA4l%,gcF0:Jh4_F$[41`W"SJ1,?eOiQ
%Kh*8g&_e<<.7c=iCj3fuA?_l6h20(=$/M/.ktkHm]=tC6G:,$Q-!dGbXk86V?KghR&JT7I)<jD*da(H!"(ot10_h%&NcU.V<jk*-
%?jDOYPjJrf-?;P9f^>ua"P6o3mSNp-p#4&:B8MZQ;eX*mLJ25uD&9WB?u\_&WNb2]\tMGPB"J-rPj+@ug$XC0aRnW3Fsg[\h3@;e
%@$8BuVtF>GE"`an@Cn=sf^WB:GA!FE?XBG<K>_k+f@/OnQGV#**R`aENCsNe$Jc^gbQsdtU:ULQKA_+n\iZ&4_*W@ts)^YQ#9X<2
%.kGdd5\lR>=J<?ZXqe>#&`"HAZS651\i]+=;TXm^mVmK7EN[aG).JEAY,AlfKEh*`6?d)+mSGS^,/N4`@:@`CmLE.:ZmpHII#ann
%_KUcVMWg:7^,qj+!Yei5mS%DSf2_Y79WME@@q$TK6Di[f^,pd8(4$_04$u:!`_?0qT`3(3<r)0&<6K;(n_G)DmZYbonD1qIEQj:k
%I!5cA\C7)DI!5j.7+\d$!CoE1.7:C&grPm\<OhI9&P/?/5\RXZ8I`n2kt^HC@S_(N"q[PN"J.^-F<T?EboPE*$U)ZR%"d(&*-]48
%T"6)a*E)#rdS^tN;"I<MVa>>-A!%MQ,CV_-9NW*;kj;%G^'/a+8+^s91Z?'rgHf;i2dY_89N*k"Lu&VNa#d:p[ke:5#l2'YgHcrm
%js,16Hk=:_$bIGG%MFC0E]_u3b)FfUgAu4).:/:pcBln)+h([f`o#kqH1(eqgi[;INOeFa'pFfb1>0Lf'NX=%&iIXV6l(P@j;j@&
%KN(\L2YOe)nk3#9%ghOjMV+3[(`%gI"0SXR@7D:JJalMBWn%Yd6%S>`Yr9m_T@/->TT]LM_@#t[G/W&i$mdC0SL#Y?<mf:h6'<J9
%=[pVYKP_Xsg0"WO]]k:?#jD^;1+'G^^"Mq[.`?M/,884s6>Qn]eN5*'%>jHXr_*k:jgB_+&P.YhG,A2I`QE#;@VF6^g6ogP4m'.>
%QUtXdRI-B>kX31hl_Lj<bT/FmZ*5kU[V*#^KP'>a'.cj_h&24oSNfYXAF4=Z[PM`f\;<goB,KK`'4*c<+;BI"MASZQRu%Y#?9:8?
%]=d^gi;t0UgkFA*ORBo<$*P@#]GB/u[>)a6LW$_0YFT+-6Ki.NBN`-hX0d$Me]f2Q9k`ofamuXBG(p81Z0Q,kN,LP0E^X[J0mt./
%eddj*;VT[S5pF)O,?d0r('Gn^[!%OEJW8+3)<)`\BjC8FQh"N4[!%1$1h.o?G-Kj\bbDIfO;K,p;d)7lfA^"qC$c<Gh-pC*`KZI1
%akJPN*IK/lk>t\Gl:Mb"<E;36'eD$We(P\V<Hk^G[55T@0T(9N$sZ>,NUQS?\Y`6p[E<4hM88'a<]`ZRfOuY6G'k_VGm^SmXWHIl
%'imC`N*8"\[DPN]V59:-$$n0j<^TbHLkTiYOP1<F%*Pf:g/6;^c(ZSn1R1MDOP8[5cf2]3C.GIXCXRmc%^rUOM@6C(Nj6lnF&,Bp
%%-ca2K[UFZf(bibc<(^!oo+'K!3F19)!q_DX@(_ug7eNn26gf$_a#/LOW-(0;,#5>)!r^p&UIlmUSM\cK[C9AFg=V<:-Xq.dk-]3
%L5^9e1B^u4m>OssJ#0M.THe'Wd>65r0L-4t:MGUM-d2*2V]DB1.ccuGc6,?Vj>A_KL3GUgS9+>7FBT)3U9qi"5VcsZV4D=kjBYeY
%4%"hL?m_+]\DH;qAjC*d:#,m4DbOmNYtu\]>!(r#i04V@/3ZlV_Q>hm[=_T!b=ZOTM(kP<>!%<k1Z1%J[6q-S04&nj0JHPDO*U,;
%4_ckQJU]@)1SpF-H0rroJb)@<G*mf_AYP76g/19OLp,1Z).-k,6WuQB]?kX_Xdus3HVupH%Lbsi8F<Y2$!j7#G(eI[1@^1M%Ykto
%K.<i@4_LQ//YmQERCp@28F:r5DodW78F8+G_R)9H[55)7j:t]Wr)AjH$EG2[GU*hAZeD,)8q3bGG!IbnB3ZUg'-[JC-cC0T.3)qG
%[NgY1Y&9NW%e`BHGW-tXK3]+g%L]N^r-^n.<f$.a2aNhD&[<?l0piAMM!a\h]VjeCfT(tW111i+47Z6nXeTCJ)rF8?@mk,<K?FlU
%Y7TI)SO9]]8o2Q%Hnp_CM!\$\cc^MY[Y$XkGiX,b@QVcm=cI\!`-1W6d6Co]m8.n"^5>O!7imKmT#D;H*Q6sB0$JKnE,(j!M+fWj
%e\pZ!b]YgrgXc&AG)!8@(OB[T6Z>4kDBiaTEIne-:7:K?iBVNK@^[Kq/t'`fZQ7kRoE,h?42R%Kbmgf=(iV97Z<nAZ4%P0f;jm$K
%CnC(0+g[_NGm#HZRI(:HJ3'nhZQ4#uN7NrF$%f-dG71_t5<e=O8'H.Pp]t0lRI+,Cc?1pP[R9jml^HH^gCZ`mCL*e[JKlF,5.qQ7
%*>+*`+'=otM"=(+f"u5n,U7#PaD=?b#',P9C-1#3OH$qmgS#]TBFK[OG-#oRCeno'`@gqE,AK;\POSG`C-.PGf2LGoV]m!VgC_Ru
%J4GmYN[SGTfeoS6K/etp:RUU3I4e3cL"VJT6?78h1>Cc'Lor;QG![dD\t7RbcX>(YM=$DM*m"(XM!at85,Z&:8=u5C1#fTN2&a`3
%_J;ZOD7\a8YoT70p_cQFG!p<r`b8ehUU.I.;V.pEXCUiB$*tXjRY:a&+.?8/X8-Zs[@LPf=[&V1G,2HQ;HKR#,=qpbW^kQ^7-uBR
%dXjJIcrjDh._2+s@s)ZUD?g^ef%<rB4/(Ac"+%SY?f3PtaEuOc&]fm>ck3r3Z*lXW6>n68MQNuPG0l."(/qMT16N2'\ZN*jOhup_
%Ipof2&J<E$8+^t8[?-&&V7.]>:+E(oNAC4K/fE'knLiXshi?sT\GGM,:jTbHOZr]=5#HX<glXh`s8DTIgc'_qI&/Dli$%mXY?.&t
%j:U5/5s9Rlo&lq.kI1m!jhhW.qM,$9jPQP9^O,jh[e8$T:OcR4hc=%Sq[]1HV]UB7XM4\u_[kUPpjlRrq?DF,6D(a`qIf`ns5lQE
%GF&37C0,mfrTAYfX&o+@?[qn1#L=TA@M's(7K"0A/(UQ3Uo;h]H`J.$IQ;-ns6UFPQHnRcTR%kj\2lVG;?ufWj>`et6a]Php`OfK
%)Aj;"#Db=C`K`B`^A`4I:UJS:YTcS#r+a[%`eY^cnrkQ,58jB_?;`GR9rWNh>F5i1i@QP:n.tSug%Dfg\btOW\gHu/)R"sB/&f_8
%.H^>hK)7HdW/0db(3s5Fjd?#O-2oR@&H*AQD;jTBQ60lG2<*6OH_j(0%8h"ag05YqW4\J?&6]bOnuK(SWZN$lj.gSRN!AT<MhQ&m
%aI4!b,:7i;Ep\JqAD:FNQD'f>kn7.TJ@O*"LcTlnTkQHcHn`6LSS=p@E31oGf?SnuX;a>6@40$X&ZHEMR<p1;\21hr[a$-IHsGur
%b-a#pXH?gAe&D8*ECoHLI/Oula.94#[EePR]o?'>0/$&5SB@Bj,LH$Wb[fssiGA1^;;$lLi)T]hqu6&NQcBo?Y>u?)"0C:"o5?i9
%9QSeliM^5';!h<rSI>3kIiN89od</qb5Z9o+c_R-'qMPCs*W"nZi'KO+8gmDObZdU=X/BO/oaCN1)n<K2-*,YEi1CCP0l:<YfQ.Z
%rBF`f_",,$>:H:<gJ/CDf%O1#VR?Mc(rpKo8=oh\55_)-15"]Z5JM$FN7Pf6F2d)S%/o')lapRPoW?#l7hNC@S>KU-\Z-LhdoEdS
%Zu<l*kl9mV/0Cu(-ie)Q@G=5XU$Yn)J@2hD]Pi/l"ogdco2Zn&5*i0^j<)/5pHS]Blo[6"i<LIV5K!-mq!5]-r9Mn6;uV&YQ/D..
%T<(6QkJd7.rl8Z^K@abn^:QCR96306pXdI7B22d*S\Ma"Q0Ws+IJe#M2uPu#^M\LLF39"1W;59-2DKU?a5cc8qTR8i*e?*.'D^0C
%95eu.KY5lK%-"1k=#[<q$q-`Bn%lY#4o>6Oc&C&7#Br%q3J7.jN,ec:G=/n:p:jC!DOt4K]6omUq#"l2G6]AhNnaO$QY/6qB8g^"
%oWC[Zl+_Z<l1ph#a5<8rLNiH,`i/CR+6N6@hfRl&]BaCmSY'5[SDHCFnuFibUGfiM!SP**EV]%^o95[(+&D($f\s`[)Umfu=#XbN
%-ehVs?taKSgu$E&B8pd#oZktK;<.*dfXJn>:]GNbqEOH>;Oqku:S-Ioi39o_*o-GQgNVh%Nk"Z<9P(Q4cfVZ"hlZEEs)saW)"dXt
%RGZ+V3P2s$P?bd]]fs0@\t8FhqFC:,Q(;2uduC-/$r?8*+CAEf]087RoC_XCf4QIP7PnmG45V\EXtJR9]fiuq[p:&S(UUjCm_Hl8
%SUS'EA@]kMamE`Ob3eNc>-;oCFHpX.X5%pNa8)HMrn"3W[nl*@2rgqkQb!(+bg#XV/9eYd0"9WtQFkpmQWrluGr3k6;n1)[:['br
%CG6!7S"$n&pA@+@D`Z3?IlomolLj\JX.P^)<B4H3rHm2WARDW%Df8s1G5C6eAj=VO&.BZ<e[W=VJ%+g@3af#acc>M2^-+QlI(k#N
%qe\:<=Dk>)*4`7rGim9h_]5fXC56PPhY,TKm</*XGAg8qDV5I(][oC2fFDqgRqB[>o&fT*h>-U6+920!lLORfcA,R&aj)Hfq;ZgA
%Fntanpg3"HJ$Q-Fc,bigqsO<mj-.rq:6*Z`3-<3%mqQ+j\.Kk.o]5<8lM=k;HG08D4YhP:Si9,aDUI^`BGfA*T>0-h?[`04^2M^^
%h]nV&L.;.!),p(?41l&mH,J9UO39=DCD?BDot.Rc^:659]QlN`TCRcXlc*"Pn@_foI#phDP7%]Pe'YGpOb)0jbAp#=8fukBb->k'
%@)f>,#<1[Qi1XF.XVjX`&)5)a)M?`30l1pjN5j64oaUMJ3?%XI*@fk)la*)4(T035iiiZ11>_%:g&"_<&`_t7]&MUpEI>4Fhm+5^
%LNs3?O/M_KE]X2?HN!dkB(@(HSbX5lBmu+5mDY7Mo2+kD=ZIdTmW1-qan"+CR[n*ep_fj[o-Bsc9[Uk<X/kjTf;GPH4!X%^eFT'O
%d>XOelf2&Zn)f#Vo&-Z7m]3\cj#OBWK=Y\ZX]2VE@sFUrftNL.U%QI$fpc'pDdHeA?[Y/V#hm13aJ-]J?B%)Ojn2.j=Sk.F7="i(
%\'l^d%m-h0Cu;_rN-NP)m-broBfsrN5N"*F=eB-[2oZN4m[oWs\lAFif_2,PItif0T[j"ucFLV.beZ)F0Sa]<*&p4"[QL=Y-CC:6
%^Y>:W=c7%po.6Jd2=U!lAT]udC;sZLUTJ\Qe<gj'I.@(.o()GNX4-[hPBf?eoq1ScHsb/)Y2+STlTa(mC%L$2gGe<9-`7cYQT'CS
%IWLT@:9uGM=fqYMN;e(r2ru.E(oZQ4]iH?SY1>7dF)s-h^'AYkqf[]im;U@L*<6L3QB$<CR`iJ$[ab"T^WlTjqnCVD<%]7<hT$&.
%cJe-d)2!5*kp\E/OKPc>js2&=Z!De$)5$K^C<iN![C\.MgFTV'rsbJlF8TqHgs/+(N1mnQ"0NkEm:mKqbtMUDmd0k!?@Lc,mKR`]
%G'SBr,Hq..q#'2+=*)fr#ES:f:mY7M1VV0iW.j-bP4LCJeF;F&%I<feVrOC^m%Jf[hAfnK4Da-$>n(M&]efRqjlM!R)".B:j6(VD
%aQle$(M8WpeZ6$GZQEfhXZj>FS&OpZfu:$%oS:KP_%Qf\H^9skPeFT"SNN`BPW=@V'_fQIB;3WH%/[anSmWnf*1XYf'h-0O-`JLi
%Qo4Bo.HR;J)9eco4U7R:1;gI]OBe#QMe`95;4`G(E:T66;<A:!a[K?Q;1=MRk"4^0R,:.]at+jEmqVemjeA8-V-K6FK/jX(qTs:\
%ApoSchs*up(Zj^,jeBs:bb=D"LQ'Y$@SY1LDg;kqZ-.'2f\h%]1;&o+EHpCUL[uZ1[26IA_3;_hr:Jm\q2C[ph`S,ukRc(D3?Gp=
%l"B10AP\>6q48ujMdF#V?42ZtRkY))?<d'UU=TlAYPmuP9,;U9Bpib7po'*O>I<+&>H9?qg64;C(9P#Y[GS>l)b,Lpfg1"4hkjr(
%'`?C@lp1dTQYgjED%r=R1h-lYD7",Sd@0UMb0S-uPX0dZ.j8p%m&mFph[Hp>(MEb14oaO>pucR=;"M28C\d>fe`h9jQeT&#8"!1l
%:60<WRt\C-G]m/\q?^T(QoSY:!&0Z'du19/J-C]4L@Y$Ii)&h_bQ<O)J>#*BOR=kW(*o-(6Q75Clpd>FbU9i%)5$r@=lo\`8cEf1
%hbWf-X<+:ZATp(pq]NW>Rq_N%3;n;[MsbKRF(Z)E+&!=I]]&c(e+e-/4o2;$>kYm"Icc[DGPuo0Fn+VZD8(dTrbe3sqM"c^Q\s]i
%);RSnJJip2+1A#m$pOq;g6jm1`Yc.DF#4*-hdb:S(E8@-h4aX/@gmF#mLMBY\]<<72m4l0Ds!Q4#C&;T2Ym+HCqSZ!E_pE0,CqL3
%M*phF!tk;*[Ki!)ZrHlRn_YYl]:\WN*<6W<gKIqC^J"KKM>t<A?ktMV-2tNpJ!]s!qcJo8!8HY"R?lnHoA*=Md%:,-QC.+Ro3Gh>
%pGTJC0!2<h6D9I3hUrWQ`WbAg]C4Ui4ah<mR8'0o3BLm@(V:UAc_osh=$PM(`:L>(?f0oLSt,j^FN+Ta5M2CS0LM,?]DaFP9641r
%q!gN!IJ\KAl:-"bLXPN$/KV4:6ad4@Z6qsT]6MC4&)#qcH`6$b_q82KA/g<4F#TLhoUgM\I<p588[]7-5KO0#g%SR?r-3C-IX:V-
%p$&MQY-*g=\&Pfls4K#biAAHCH2PEi([l7Md122&@<llpX"_a7cKTWRgJ%Y#i7T-_Bg+W=Q2N"NjA'bp5*LoE93'Pu\a8Kacek7a
%j>6f3O8jTk/VmQtQ1^d9be0OP%n^d/iBLNGamKYdD:dF<i'!O:4r<t@cA#3i_+nc1p._M=NgI`TZ8c/+a33Ie=WB)Qj5nlTG2[$F
%a,>7Pk^Q_T0Dg,!>oYNlE4kO4.mBLdT=o4eIAN:.KD$EN;4rcD;bDD?/,J7EfVN1@Cp8aV+:%cR2DGHt?icbLO"i1n'0@,br!^49
%591i.b%!rMqTThsB3SkJbMftO#Ksh'NXHKKIN4@U'%7mDNq^2(mJR&Gs$/T3ZZ/9=H<LSJp\:m!qU0u0[&[d7S&$QMlLj\JX.L/j
%R\s2O56H%CWQO*;PMkBBfk1jb^7)l;b(k/J[-!<UgGpr+_a!mDHgJH>])(j,\#21;%G.M]AuaoZg[h%YN5*=n_#&N8Vg004[kI>P
%ag.6Pg69.B4Z!(]GH]@R2TH;%%b!<l#4^0qX',7?qV9@#j5pd4p$'+oY57(ZL,3b!bqTKJBFk*nr"ogone:V)KZ0!l5^/ZLpLC!H
%i5_3@L;f4Y[l<,1g[g=FA+='qgQu(@(lKKr5l;J6SK$;-nZ3/)Vg^ilH/R2=h=*a9+.q=.TE"TLCeelYr9hi2e`QTAIH^7X`TMO%
%5L(`;*^76;6![fFF`V_IZH[_U\jbYi^R^qA)VaK?>n*qsRXmHjmIAr[5@'o\cb%ZLP;tS2an*+_gW9k"f"o-acPar*=8Pc2BP>[T
%r9jFH@ZIk5a*'D))/LWY=*)ZmX5/bE!DD-U#;9IV$Wti9@6Ho\UcDK&JsE]_BLAksh)TuQ!upl7Nh=)"]DhN[H!WdlknICL:ZhEd
%G$)I:l^Dc8Y1iafGqG'))7KA0%R8dMGtR=-ZNbJ)l!AE8ZQsnb7jt&i7)%?/_seW9/D])mQ5uDAIRXC^ieZ3km>3(%H+KSlCp0b'
%[BnZMQFkr?GKk/t>AeN*D/Qo//[r:`+oE*oF#0o=Vgb+^JsfUpJ/+CIgj\)BApgoG3k&AWQL!=HSQi7<bB<6JBBCXJkknAjd*3KQ
%_-H3d/[4>/[i\\_s1#Xdp&4RRS7DMshrgRLBu,at_#h]^qiZl*"nW$d"*a7E&dpncJh(hk\.UkCgs],,%g.ou)e\eg2WTO!q-Um"
%5<eo%PEgs,hAi/Xh>I2SZTNq[DgjmBj/(>iG.$aMnjjkH5+4L'6eOqY_SSCU?1d3jS*pT0ZhI5?\Jo.c%X+f$h@f&B`RE7P:S'48
%<m=\na0Q2*dF5^2BJW,SjI.a)0$.!TkO(/)`ND])e*C.-"QrC$rp2Q!3#plK#J1o3N(fDDn#jDe4uo1G.*%B%(YE(ON7kSF#BMNB
%-ea".%WCB>m(MHZ4hGqt.u[N$gsq/h1N9$_ch$%+]"83nmV59ldQ>8*GqAROZSS2M0B^;0s6uBrTb;ULLYuTEF#2Bo+\r!r5Mo^O
%T$FWhepk!GL0a'14Y45<T.Hkq@bUbb9tPb7.R-t*jk_H:`@*bQUM-oh*kW_)WBN:TUZfh1n=Nm9o"@ehjU>Fbh=(5TAfQ1_C]bt$
%ILJ?Ga#BY5[QQDbKA#&tk'Vr$\I##c[/3"@3L]\t*@fq+la*)4(T4U4r=A1HSF=h\s3pM;,pAnQh0a3i[ad%;*0,AnYjD8G3(GDN
%LZ<ibV<)YYKF>p'*0Bb&PiZ^Dr3Po)4ie#ai4^*mO/"cHkBf=+0+N"k4=pp.-\t=#E4m81,gfO[R(X0GkC@EX!s^/.X%*,qktb<"
%pNPX>kNoYJi#sYk]g'(\NcT7t:c8gCd/%h_p"N\+RLWFmYajl0[sb@V<YJ9Pi-VI8+-0b@\'$pVn/*%hAls;)&!HJL.A136SsO.=
%_tj43We]ElmQY*@M'nWopHIp1!+I5JYWqkg,p8G&&+m=YM$A@[8Heeb2LE3gbT(fuK=%P3+)48&iM#Y5K/]a$R_o(#]@6(1SR(^2
%s06KLfWJfh12`,e4[8o>\c0Xse%>J1m)6fRm<5I'rq,XLjNE0T,=cb(XHmF@36U[7LUkXQU<F*]Ps+#=EX8j.^_-@rp$q.un)c;Q
%m,=C_EitIM(E2YRfAh=7k<[bJnr\*28M@6-9j`Z)DkEVn0/oEq?*?nYjl<.=5#MpZ8V6TH:]JZrhu*$8<@(#,bX;$I?`u)saK6#J
%k*aAaT72953W,3S5PXQ6dLQ<IX.M&Z]fOJfae/LrVq&u>mr!US@C,h&_[i3df0=]Y_7T8fc0BBJ=3:I;qIf`ns5lQEGF&371<o);
%X8i+$B([YRqWfe!r8:^k]B6%bZ!2>tF@WM$g=6Af^.Ci?7l-6>Ts[Cm4If[U;e&<agGDD,:S+eE?>e1grr6CaCt:XORdKuKKl!HB
%mO4G:`t/&b^"IsUe;%?ok]#GG?t^MAiPgQo4T?01.0"Sl)Ct'I^L,ui^KQ&8IJi@]gNG*:&,p4d;:CoPg/X>lQY^;sEHTbh:#"pa
%OT0d$5H_o:[#TWc<rR[lR%l!(>4+]#",h0l4F`4Vd"1B+q/u]@?Pqh.M(`o+)im4N-J>Ui+$s?WI-[7Si=B4-,5r-iCqWu"I6@Mm
%eesmYM_a7jCVrCiF/TV=Ggs,ZNeM&]?^(lcl@_YLb\Gc]ju.(Fn@f(-O<ti,HIuH.hJ=hbpL,3545;bV*8:6Oj;.`Jn,1j\T'TjV
%cr^Q#%cjqP]=K\;-eqf`l(]7-aQ*r8L<Z0K2U,/=c?,XWB>XFHT@R66L!rh_f)&ZU*=Qc%/A0Uj4"n-Ps5i\kIdhR73+'Gsn:RtA
%kkD-]s'rBo9'\:`>e/,Wc$el)DUZ0AgZGmo.l4P&2KVF&Bo)Qk#gn3`,A<*2CYQ+u0ger;jX.B\$-Cu@(+U&%/iNZQlXGbsKpJX_
%VC%9Dp.[YAL9gNofYk10ng(*j+O'[0D`_7XnL-G4fB"TQ>JeRpUR9K#HfJY@5L&u^ad.!Pp?0PBJ(gb]b$C`.$s=aNr;AXd^6<0\
%^P")T9hI+H^X#Nl1nB2hHPZRBM`t_fkYfQ1D5mY33:\f`$fm.`VTXHCq&MAC<TA-*[9HdN5r[pIjI'qU\GA6>#*UpADt>)U9W)S`
%s#/2fE>W</.Nhp$H@GGaYC/V3[;B4Q9u%84i@$U`j*Rg>s#XgGIui"Q]Y5UKTB,D)0-=Y?A0p3]4k'5>kjpQn*KkHXI"uSum?)=7
%/4X":d!>m<;9!7/o'5Cj+YSCIQfhb7j`+q8aXn:G;<o4PB(!,e;h^m]PHr!;CV%p2hDPIQm(-dQjRUO`;Oa@4r%8s8f0t,?F<%MH
%C5hoB@L8fHZ0:d?c'qN'Qt^OQ@lpN'Bk.so4dsFEn4:YfRmOU<30,GrXD^,Z]u.C>"lAA`k7)7S1[!=*GWu%2ausT9[P_613NG]C
%8+nL[JsAdW#,nh`a_gVu*hBBN==<p.4_sZ)S-tg9Re#I]5Kc:9j6uQL0+7^V?Mf-DC\+R7GtVYqn,ZE(YOC@sPA_a+j*TDH^1l*r
%L-`F4_<(FIjf?qdf>hf)<u8MUquMkpG5c+>a^HPtmA=r8D9K`QrD6NfQ[C1::2O<(EfO53c$MF2MbC,@q(tbVgAYVWouSBlI>[KD
%I5Q<f7mYm+k`8VVA_-IfB0-R>D!9QTCqKVLbB>)jnYca'O5XWUC"rD'Cce-`OD*8/hrS.B#H%$JZFo+J%q;;gi)A<P+V2[33J4oG
%9<7Ta)]2r<C?)5%A_TXk4-LW-rP5kbrQJJ/YO^?(Ij_i\:MenDM5iSI4FPO<CjB,@:h`3H*05Te*+Vc]>o1$://ETJpWk?PAKuNM
%:NMSFb58#VH+.=B.<5$qk?FS)IB.:Io!s@ObmQ>"Y\QbO*EsaQdG9)XaLX$_!6.Iuj^@??Ih+Qa]TF0lOICZ>k1hT0EYul54'Ufl
%:%du2d*J&&(af&C*U[E36_-AC29dV?YPGaD<a"`GC=>o6N$XXZCH"B(G4GpQb+,?#Df#jQgLV%.qL(;<eW6<`F$+An/e!+@c_#]5
%Eq8YXbH%*rn"sjN4&(b@I+N>2*Q=<k=9HIsjR8!kjI:-Q8b:>pO/Z5BFhDEkL8cJG0tD^CjYL!s]t?q3jk&?4L[NpHc;o3kMnOL*
%5NOfqJ<Ths+3`)q1qKrPm_"2<U)V?IJ*.6XGob[Z\&a?l>](L:=ag5GlKXnZKE'rtT;UjZS6g\hH?(5oZ2\lmq<E@`J9\9+rcj8B
%kRXRUCNJ0dC_Qfo"Koe+^H=YCQNA<-1RiAk*8fPA?=.k_SY$3JF.VV\?_>%.J$g0K><h4`i/:t"r2mIOJ+nq0J*+r'n'BkI>k:St
%SnnU@W6MU-IsuV88mT>W.]V@oSW`81guMc=bIb5r-];JSE@``&`Po+WRrU(N=uLLSVG3)i[)K;;%`kml[Q#&YG],^/A$Pj[*K*cX
%I(3"d[q!h3E\,pqA+BQ%h;DDjnlg#aL?_kLO5sDbm4WQ4qCR^rnU+"MMfoUNMtS3P`FcPgEAW`;k?+g']!Una$Z5S+%6]X7iNqA&
%T@0uXHH2c9jB.rNg?3Na9?1N.(<>Ee3Yj;Hm[@Xjkn_>!i`LS1a!19!oE`ltA`WW=F].Z2^#(>p3:mkR3EeoO`mOC'mJG0!1iVg6
%eiEE(\U8(k"".Xf(?;i8m+CS$E1>rK-JGPtqK@11[&mGI=d_d`_5c"n@XdLZ*CG,#j]ebQYH7)=e;%>]=ge-sU#h)IC#l)4_T"O:
%*]-StnL)<?'_@FJ)n*825aYoA/IC)d^?pMqb]\#Ujc61C6X(Oce/m8$=fmKHaAWuY?O(Aaagm`;h9!3pXclS1%k4t.jO)Q9X6#_6
%5#fimjPerQSCaSJAL_2\HJDJ-DboFR8o;eq=64-=caS@0"r#;0/rD?uRM@\p!`*JlRIV:s^#l;4?-nnD(1)ioUN;[-<Qqn?$6(K;
%0>F/SA`/rD?oT>*Mci(;@48U%Pjaa:%&Y,P_)W)sk=m\BnaUFY=`2_?atr)t-Qh&hlW*?8267b<7dEYKOEX:WcD4pBNd'5Bm]ru7
%PLj"h:@c'YZ3h)2SE0LoP:aS8bG,M!WUIDKM`%c#]r*uBhV@oY%qeh6$aqQLo6DoPT@#EA_2\&#XNH![#C>_[DR6LZQoL<>Q9oTo
%LN3fHbqVA-5+dsAjSe[PR!F@LGHS(EW5B(W("7N.Vtt3'ApGGBhRQc8eTQ7aPar=be`<ukOJaL[(Ab)^-XEbK/+59do\m4jY8nU&
%7WqhHmb4O!8_QoSK$?bWDdgRPFd]^(bCb[e0ud8.][&'&qdoAi9>0aIW(r4j0'Xr_QOU'3W\0*&b3d)H"sNuZ$aPgt)eoa%$ER6Q
%FL;:CRjKX>;\`CV7*)sVa"ULa]`#:A>usukG-9!"J_XaLMQY)/b_RrpEiI1cRgDg=-W@)Rbi:k_Y\h"J`ai+X7Ltqa/^24T5%-&%
%3&mo3\j-c.D_t<*=IskU#C[69V4pBLHs&TB>c7u\<Ws8DCfFJY?<YURh`J#2MD`h9Ck(GRE)N%4V%1ajB0*ZY[,(_tXXjL1@X'P'
%MVi<9ioY=h;Ck+k,tP9D.=P2]MRY*+&N9kBig(]Ua]^ZW+GJ\cUp,mmUkmjpJeVEOrjN%[;Mc0BgO^-:7Od,i.)kQI5+hf1Bp?Iu
%;O#&tdO7Pr,t\b.74FTA^Z-_rR2MioPB:u4_EM_!,*[%4\g:V>I17"f5"`YV`d!'H,tu.r,/Y+@j+#t\5+hd[`[O4rVasINi^)Q<
%BiCNGKdBL!`$l`g!?)a\;m!2s0oKZ:IIV6@e`'('E1_\Dos>UA@+XK)JAKqF,nQ2bdhLXWkL\d?QAl>ng3i;5b:VOtWUo_0nMB@1
%PJh/MXK)@=fJrBMn]5ftor^<]o(u?1-R$ZE=tqQq?BHHU;R*k3pL:,pno06k\<>Gi(-968B[hj_l6G&8l>lVWT>*$Ohjg#M7da!=
%Ym?td`(%%PA[N1sGrX[23uD;K<&j;KOkV394h8hR$e8@Mf518:e](1-_+>Yr+1T3$Ood6_El8m-rq#<VDC*MjD(FMGIK/$H*Js./
%@"LbnXu)j."hW/^T9hjfg*Zj'ce#2I,SN>eD15u;eVCf;g8tmp%Z7Bc\'Jjcq2CVZioG18NHb!/D"W_Bmgs@.%Z@rRCQer'NN(5#
%I(gkg[tAUNfNHc_`FT*6rj%:D3kDnJIkim%[FY?5hp=?<F&9Upl37-pO(\u7;5,j]a[n-4h_;pVmC,3INM4XQDYOP,D"mb]mHOrK
%C[-/.D),/'%p'AT7X@)E%G6^5DccW&<";!^ii]<_R6b7SrmpoC=d'f[G%7%#?b<XF&J0\C=ZkmCU7F.!C"oAF;j13:>u35lS2Jc?
%!P2g)nZ#ED9")8B<IDKa5np,>qlAKpSo$pfjjt64m&R#0VH6X:394#Cdo'+EEec&O+/:DKfcE/O]uZ)\Pu*3nAh9HqXdA3\djA)0
%q/8<lg";DfYK^7SPC#4g,!onDG_n-iN:g`kjJYg3E'(2R*,.4B;s-Hs&e80r#rB#&CtH9AMd#\^>><_MT;%Wj]5:GqoG=p"mAkV`
%p+aNXqm@9;RR0Y4AI5:XT^p&V.-)I!U6<+4&XCkjNi7&h,:_NHJ4d:"T[IZ`W,rs[.MLL6#IED=C#"ClI,&s=4,g'O2srAk&q8)U
%9"-+>;C6T)T9(n#WPc1!*)KMAof/VM@E+MVpj,1of:?&_FtKB8D%<MSP3"A)W(\#!W@cm<;!GCk<6F&7"XqfrJ4d:2THXuB8O-j(
%T$h#<-34j,FqRW6E7Qk=dVT;hU^[?ip$FbQ?sWci!L;_(<dgb^3>p=oFCS`hL72LJo:^`LEB$DMHQ5dPh<&[6XNO0p`GQ$\pau"M
%[iq=upuGkn2)Z4uV"+/CXjM%>St"ahZ,BRq73C??GY7rH%ieA:)V/k3OBEo=NSJO`Vg+29d-&"uRUSoH`O1+Njo01H552/l95u8D
%'%>lBI&,#lPYf]:@4]CL@*5/',A]".-mnnkiZi;\l)$$bh6b;#gMLooVN%:6<_\Kl_+4%9N^>0`V+qC^_M1lZCf_RRnaQrM.\t8T
%Po"F-_8hjTaL'mChhi\#f5&tG5.8+I;Xi)eK++Q/c#Jtc;])@c'Lq>qKMdU?Eu7C:S"_<>(e#<AH__QK),tt\C0Q]aPdi/ui\s;'
%gj0Zg]?b>MU=cGA^;C$X;52NY#(5$HL,7Q'%"]m!_\m_YD\&S\&k(.-j?;DsI-t2V6t'7OUF7):G5$ohgf!VB-Yfn0L2iDC<c&`Z
%0Et[fUWhi6SSdq+4*Tbq2\+<e"2Xd*X&QFJHd=O.?Q#cU:-Wu#LW"Z7[q8:7JW!q'\MdXqXt.6;]A%[]H[G6=2Q`T"a(NWFh)NC$
%Dk>tP2bmrAc8PJC:GL!?2GPu-mU/WkcNSgA'Q7[Rq<dQdT&Ql=M[/`XpJW##]>IG+0?8,*FLV_4464;&e4[CHMMi*Kg\C%N2SPo(
%B:F;>l:nUq\0#X35N;I]=.XsB[D*;DjQik9X!P0#8aTh^]/TFl8aRS,qLhbY(LZP4fQmS,?@].rbNrPcXVYC2]A/PGQIieM>;(9X
%^J8,0m%eO@+c\j)/!ofUW)j*EO734;kF_uj856d=Oleu2_(N,!CW&).OOs21aT01c+F?sjBrUViq7p-B-;=X,4AAKA+\7o*<bi=t
%KJ%%G.Lg#hM71!0#42JoJROm&3W*K$-m,;GiZ<Zq3u7[f`\di[YO&-&8L!6nE[$8sEJe7)?<;P@_nK.0Mjb/*?lr=gN4--h-LrNf
%J([(hHD^(ukt#,UjZ#%iYpiQu3JVll;ci==a`;[#MtF>>_]I_tQ<GkE;oWul9i5dCC<4KT"/5*aI[$*m(T^W1_26,Y)]&a;7q25@
%E[.W\/K375=2)L+1Sa&5=619)*TBWufrAmol%?&@!pFmsDtGsVM`r)eP?^egTNV$1-OmA/#;&1XX"Xr[r3L#!VX"qCTFHKkdS0AX
%A<OuE%b/IKl+Hh9SThbSeHNbm;RpJRj<\S!n*8![btuIhCC/9d3>-0jgj=e#1.0SaFKY>2$;\g3;F=-F_8?R\;Rt0IbuWf!%g.+7
%iS*X3BP[3Y17Y7nJ%4j1MhsZDZr`"QXNZY;Y=$$d_%,dPRn&pF)=;=c?Rd@g6]I<@(g\\"faeu-aKaY\(J]LC&@:B$L/*W//+OJ.
%q4bS'F-77,Uu"5_;;8?423#:)]gh960d[cGQ&hiGJ[Zu-2U5s[8rfC=H75ua0]fiKr`.]Q`Rp/.2/8G@S+`;_<E%WKTqfo2EIK`9
%6fDuRHhh(G\_0?\JlQsPO>mg&^38c3pga'9)m#DM.">N,6fIP0feAmO@T'(Gh5WeGAHQdJX[P-EiD3^dc)T\n%H85(X$N^9#K59k
%Eukle,p[VGCX6p;N>;QQhUY;/H8F_#6<_3I(?5M"$krK#0J"F465s[-9B+XfbC-)oot3g1W)$Iur4[%kHVp$:.R<#Ab._(q,0sU0
%2$pu85qpV'[A!jp&9OG!h=Q*4rlqpcZn;m>3\pZJ*l9jU`JoQO'f2`]j7[\SXt>Cf5`V>7AfT@QZ(Rc&Y4Sh'?PF/Qc(-S/MFZlZ
%e-,''em:6GQC_g&FukeQ;gFtjBZofW<ud9.\R02U0*<^qcYRA2PK^PlSVphBWa(PH][aWe<`(c*b#)bU;BrYj,n4W,C.'ePg)4!e
%i\^&9\Uu1do&fWrEYLg8GhRhq/"-\X3anit&-uOtW!SbAT[4WY?,s6:Zk,s:TsCp:CC@!H;\`=@#aUTY?_c6RD3,&ZPKbkNjVlgk
%oeoghhc8hWbARMI9]aUaRSDYBZs^1t@p)h5_,f#T`@0!)of$\#`cGq7:9GV9_NQa@,WDR9_qA(5Q:Bu/fd`M6@3G$N>FQXmCMa\Z
%FFJrj]=KjHV7bij0pLj:X_FQ%o[2#@D)Q4m.XY*+/kKeg*%<#kA48*?)Di(9.HRR!:D%&&L.4rlpV"saJaK<GCXqY5ZI'=#o5876
%<!Cd2YD?b?<Bd!8PDthE<ZC5.2gRAXoh\uLJRYmX)8EH.K;2`dZSQcBg1tS&/?I7G;+]BHIPaV`iG_85q-a'0^E`?;S&*d21ct$T
%^38c3Pk1m`Dm3[T\N'QA)@D7tc%amk`M0g%*;nr6R*LbBhMW#DO_Fdd#$/W2G?M_'B@]<R:EaT5="Rg+C2!db\:A9b)n9P7^a#*u
%]jCrlBQ%]\)q\9/F?!t:%tY(R2ZIrX#j39J&T5d=Ik='u-#[25)d)Y8QFqcSk7)7+AD21_!3a*f.PgbD)h>M."@(_*2rI?cJ=\7Z
%q:=_Mh^YHrW?_uOZ;RRSLhh>!(Dai_!NpuF"^DK/Dd'*e6X-7M-?`=5D.ZNpND"0>f@#=pQ!.p0!rb,9$EuC\F^P6/X0E&VQ0YkA
%S.GGHF_OfTF(`\BB='5_2=1P0lPIPoH;4ji$lEr(aHt;s_u]&IY[D$J?JBb9O:BDa:2.*q`V_VV9OF>3?_=u;W`,5KPQPk\/_):C
%Fij`qRC]4UAZ8F-W`'Zde)FqB]M+6MBrOjQC=OcBj5hDW8j?f%_8bd;jK7!(5#XRY--[pCNi"q-Y:s"2hU._,mo*L5:r"\3R;<pW
%9l:#:UK?Tuf".LiQ!osn:,LS%!foencm!X+kgP=@@(i!m9b3DY%uR"o__qjJ;e%\+PX8G-ZocBCbj$k=Vi#$nHe'\qErmHSb9Ckm
%&5)f?/kWuaDE,)I*7,"7."j;n--L!g4Rf)hjCF#6L1tl-T^-%?o4d"5%6cb(%@I`#S;aU&)!RU:A]/:r$YiMp7bH(W+3b2#7J``<
%i+=kDHq(Fb@-Gf;4E++KomP5c%CS/PEkqF\.&g4T@q&D<25Hsk-HYF?8jYk9(X8+ZiO0[4<E!OgfgS,S(j*$sM8_YVb94R9HU[\+
%%8j/Z1sHk"[#Nqr4[,X0&^DkWC7]u/.+*c8<DUk*bf>Y(`^M217D`bO<V^rN94HmW;H)Sed/*9rYdJm&Q4Am-f/OUnU?Dp@Xt=27
%fm0\7M=:qs#o(K>NCiW&FM-R"S;\(t,LH1;?F.^cI8LX%\u+]cVJE3>d^7/Q*Et<>Ta4CcNbo-3)aBYu6*3)fG';n68C`f4=]nsA
%#f_siaZr%6;]I<uX(o"P)nt[m-mri&U#>2`,)*VYNuX.H4^_,q^K:aQV%<@.N@*RdHkpS7%+:GO&;5FMBQp:ncBuUF<iQLBKh^aA
%ag4eq,"2-1!S,Bj<&9:3lB(9d8Wjk4MC;C?;K?]`>HS89a1gf6`.aT-'aPm<i2*6JP`$[cYbL0uR*9=*1:YSd^5kI!aN_plJk^lo
%0&!,K/P%r*acs1S,*-HmZQ=u"`q1h>EuKLVGJi&O&_F_(nqcOuq[8#bYoXg/:SAjH7:)#9FB#9V;E^AQ%!Oon>a.e\DQj\!O$l!p
%;$6"X!ePGDG='e269UX@E\";RE[jF4p40qq4dD/LgVc:T=&7q*du<9.CZ$\Ib->eh.Oi;A,oOcEXN*)k=]S>PVQ%VA"$O!=*SF2'
%kZg9:J^Pq8hUpXN[K$MP>>O@g$!'jQ]A=?[h51N6^g0icVQ;tE*;M!n*3uuqacm7#[OLm8A\Y;8V"i?[aj`PFQ!N]%WP92BM],lm
%"XtR_7uqG+Ho[UnPaie)NH(s+SQ3Y^eWU<p8%,!_WLcd[J?dV=P`mO<$q;YPlR8d;VCn4QWIGaRX1mfXd&8POf#,VfY$%!L7?4li
%o>fX]@Q3W+6u&[N`\0&,RUXf=<Y-m!@<JL!>F5#S.7G!5BYoU>-UST9N\I(nThXQ;@m-AZ1#:F@?V`'=f$l.c"\qi@6t/li'e#tY
%^3R21nWqYGJ0(sJQ+WgO]#h7n</_[Y(GiK7$5ef%W/<b5g&m7R">-7&6#DUa*_uN4`gFkW<FIJ2d*lk$XK0rd.*kY"j`#fch8Fc1
%Ut?Ka-mE`1]gYeZNZb3F2Ka9XRq`)FH8\2kns#<VE]3"sMGiiI^(*nmron<>6/(V6=9q!+$UroW^"J<SpP#e\iTjV@3YoGiKs,"F
%lWEpC(;>f_Y@HPWf^BC4_Ul&<b:S)^:R\KI<jIbB[Z7,Y`&O$s*6Y7q.cq6:Yamj\eP5C8#fTf7/ZuI;k.4>d<sS8W(1]r^J_3M"
%p$9q8)n;;68_hnRo@r"u.Z"C)Ff/;AH]^eT-V`\Ua7:tA8`.fOq66D9"b,EC=S"WQHZ!6MB,EM<AABi9n4Nu`PL"c_Su6!$r4r'V
%NeJE-i-XA1rb'$%iSN5NH@!pHph"_8$[.gPBQFCU(9iH`#/&cFZS;9a)`$?\]QT1=&0Ba+oR7\IIS0lmmsH$a^^n(R43N0Ch+r6-
%^c/SUi(*D6Gj_Ju:O]ntaDGl\Fn=BaG*Df;p1r:9:Kq-eEBc#mn.1Z_5Oq(i%/?M$C<;!51>mY)IKgb'@T=]:qpPI["K=NB1p%_u
%Y-B9_(4`J$Dq['<jW2e:H5p[&p1)+kJ_t"-I#)#9U[4]9pERGD[_pL2&gng@MMp'>3,OBh`t*7dH`,JmDJkfQM&ZkOSp9JCg*Roj
%fj`X'Zr'"n4>6RO[7V,EO[m%OnUt-IbpTa-<qGi>aA]F*f=]u>Lo>k!X\!QbLE8V(9p2$V1n?E?CtDE_6GZ#pPE4Ij]H?N42L70*
%5CUYI_]g207pE-1fD:cLB)/D(0i8&$cFUiq.L3)A)N7i5\\QFM:g_UB8nOj2)n.SJG7%qCpTgI'[CI)6.ndKtmHoL&].P255C#I_
%PD7H0K@0Q>T>Ftm)o2)-WQgs78;LceLO?3_lRQPZ,6f[+$e'"88r7?>'mXHC@fpN6YO@^so[qPd'mUdN*=l1WP;^S8G3$[:?WIm$
%?Ls,n,&?bcLGs+Wgt?D.A7>;AY)7T0(r)pSkCldkPtU$9OXSAL<.=n;k?#3A]XM1?*fn51,,A%mQV\]bVeXDm^-TS%WEu%Ho(*_N
%,MC]No_^GS&B^Eg636h"e`DV/3uio(08mKIjIcdrKg%+im#<^)2e'0RVOF6?)Jtd9a\j0`IQom`Bfd/[]1JM4?&AAfDQL1nAh]dO
%a&nODmcJ\<4-<%rB8ZRXhC]o9gK590RXDJc?B.qCEEA-*>)V3&/h#]m:'-d4HFjrfUHB8U_U-_5CVT'db\Kakl?D&TFW)7FBcujl
%9(YmA-_J-j)/Je_qu*SCPgK8c:Q;g:(M9cu.895H?':HDFnr!7WjPc(N_;T7g9K?IIerli[MW4l9slS(jP?W,rJLoBE2,@m?.#c+
%W">lU.daTdZ[C8OIo=73Ltf='q]Sr;?kDX#ob=n$9<Y=l_^tV0Das&eZXMQbOgE\N_N`DJCLUR5@fL\`V>\eZT]^%%&Oi9*jC5^=
%`8k6gl[DXY/reWS5>SI\`YRa+I.3tlgFRPlg*KlnI]]Xp[qVt8NUPEUaV+2P.SS,"l+]9/GB(4j5A/k,Lj,V+Q[&NCn*aI_ir)Y0
%hS12i/VnTYin]32G?;G,6+gD5mg^f'^EDAbnc!r%]GknWqMDmif#Q;/P0KA:-V$,f&r0TbMS%_#ch9#"SHeHeP0;LS\CR96U+=#X
%1+eN!/Q0\o3ns]#6'`:>P1Hb:Ohc^N3rgC@?#gijBn6SU(]=,N%cA<bC1u_sp7C0u*jgM$IaI<EWe8Eh,TAbO2%Tge>T0#``(<[7
%%o.i*43qo<fg91_>bc;_cuaFVV"<#7:A]S^OBZ0BVZI9jJF=3[0<Z;4H"j\e\U.2b/8-C8'YA4^5->Zj5jQjG'Y"kDC$1^9f#(?E
%(66"-jH]d>Xruq=@oH;u9Uc0BAo68i0OJHGSU>>_n/WHU&iocJAA_E2*tWLr5]JgTK\C8R]0$U@co!YdiTE!8[MC8G[Td*5D)pCU
%nc45A)51QpWO'&k[P2\D.V(S_dDI7\@?2O4BbW!"(Iu?a(E:Etr4ko$=eMflRM?4\FM;^-o[n^ApdOF6n_f/EOe!:hgKHaE9W.Aq
%nFjrVih9n\_XUMREnJRsPW)4YMrj&!><4j6ZA2UTpkCC35+ehje(CUq+^Y;?VfUP2drIHR/b8>^o!$H@gfC/:R4UXqd5(GlCt=Z<
%LP'[N/8!<$@<CqeX6h0t#0<Rq>3\i:oj/Bc\2I%BKOdCtDplof0k.7LI721BY=.oL$s[Ge<HZLkFmmm7g,PQ1NH2RbWf86bdHj7,
%">lTooYI8]JM@m^9j7d^"/(q=PI[]QEG>#es((._@Na]e&1eHpAjmE0cA6W%2(QOfMKDsRduO+lXoa-J<F=b3VNldGIEl0Kl1D2c
%Q"qDfVZ&?Ol6p4djJk8`lWU7<J_6@tpN)0u3e4BPM/^u/.Q:$OF0`]3<C]6RUK"29M`T"Q[Yo8hrK1DJ;m97BfrC'oQ.G1+<"r,i
%.c[4Ag94iNToD)r?e\=f!R;Nh3]iofREOQD>iJ1F]P%j0H?o24&h[A)78(.(#oEQ;_F8HCH"btI/rElM73r]9&Agkb9=W&,8pP+:
%%[2Z0D#WgdLYFsK&,2Car`VG>p6X?c[Th`[EDq966]!mb(R^]],.agfa,<FYpu(\::]`R[^qLYq@HsKgDL<N[i_!^WVVD#Q#)l[5
%c%(pPK7MAJhtqfpHPnOF?&]\t-"?Kh'r#D@Kda!NQAEp$1&CPe7^_T&&i$EZMNc*mr6-dra\s$GN08B`3=_k%&2\39)DPF]c`Dp7
%>[>%L2Lgi@&YhP*e+cdjVl]tE$Rac-k?O*ag<$GIT&8BC_aR:ACCYdn`J6diOrp_G2-?UTM]ZqBLH\t]]G>MVG=!U/,\9>2!5ahs
%X^?`=fDVLW1oia2_*),<10ME1+6:S%QjcSmWAGH&GYqYc+2Fh=+']aB?IZreTcn4*@\OQ[$@cU"T*hJ3YfOf)kmDQ+j'$"N$;FG"
%p;cb_bKE+[iJ9/$S[d:RILc%iHX/hFY4ug`D0ZsV=4FE;]B/33>,IWNFR/`p&*`2Z,ten)J#tSsGk9ksDV'e/dguR8Ufu33H3hHt
%ns5M`$I.&03aeGD5@;?BQIEk]-FShYG,JAt,[-[bn)_lMNYYqjAO;#R`\8r8V'J`J"!LFrVCp@BLL3*7qQ7@)>q1p]9b8K^37D_Q
%EhR:H7;8H:oYA:#%A`jckO2lRM9/dk\]C*8P-pJ)?/O5X1@A@"cf^.!$HGQp]TTIO`fpsoVetru0>;--4T>?)?`u)s\3@O;ao-\^
%9]^A!&-(b/&,uE[s-Da'^,UV/s82D+s#X$5LECp9l)Uk':KPlGhn=HOqTJEjnb8s5X3[tVSR2?qY(']u^V2Zk5<m>kr6=Q6'7KLk
%H'BDSh!3//dHXB[2*P>r2J`6G`qU?q);k.On\]hK7bYqups]'/c(.)ogXWp"f5(C;D7k:FkKaCN=kWAQHpqc0o(1'&f@Qc>rT2l2
%bun@SVf+g!rTZp<6iM2fO78__o[iraD$t""FCBS+^F&u@n&t`ps5+pbc0]TDT'pmPf=UsQiQI]tkN+3EYA[HMoQn^\4O37U?]T%I
%n+J9XGBWo!`uOm:?2"!"XoQZF]C/77T2jXf^ZDf_X.,a-:Z$Wr_8lTEo'3,GrXFY*8'fMB:OZ^I=75D?S):D5rbJr8TnGZ01nQrr
%T%6CrI\BN#5FnA.rQ\cbG^Xs_\WTHNr-LG=oU.p[rn1@3Gj4T[H[bndlt#mkX34T5c>L'RT+?n2a'Tfnhe[Z&S?>WEH2EBZ`Z>!T
%UZ$iQ%Z_VNT4K&AZ$ajpn7e<JO#F)#e]3/$]/f%=>;gp/q=RfJf2k2X(E"+oq*SHDI!L$YQ&hY@pt&8:pjBGTI]kZKa+)ABkf_HD
%o&IXTYe"U\*tMH1lBBagg:]_d"P9Ci0DXu,c0=>j\"@$1s3m=4q+Z/5r9]CAk"Fl$43Q[Im)q$d?2jTYlSI6&j+!g*aespH"s;$9
%kd&E>i(IB#S9GTWN#!9Jq%(1ACFh4bK#OjdnL8>Q_q1MuMcf.4C^\#H:\gX'EGM<ZNfQEJZhqioYJ-&%*Fhl81QHA9SVcmOI<0l8
%Zi"r&D.R>1-?V'Q>GeCtI-mQZGl@<FohSUn<3,Q_RI5^jkP6KLm%%A4k/V;3s(9N<:E/GC@tqd,LAP#[GQ.;uk[qDK./2SD>F)'Z
%0d.kb6C6aD^4d(L0?Jqc"V!I*]\Dq2gX`1HmCqJ8h#+Q%<*=\Lh03d5DdX6m?<<6gG(0FNGClm]UXO^aDH;[j(4(CRq^6(#0"<l*
%]AQd_K54tZ?[_\Bk4e^p\KUtLo&e1[[_Qnt4P3M=+8%$a'r)]I\SW;I@f]COMe[`4eW/.O[ej'(qZEfLm&XPLrp%l*qqKRarcibb
%q5[T&372][2"-bGLI\TPi@MDVSAk<`+PhFR"n2nkf"p_(^?g#S`+<@>qSFr$0:1J3=VlP\p`J!&4NK/q+8Q*>b,51`Id6j#5Q:9H
%j;g9+s2ZNF3'H,HJ,J]aeMi!WC4H1&^WoR8*m=+;D\p10O7U^[f$*!UAW?W%>*HXpmQUs2m_;e@hJ7K<67)Qq9gl^YRK0A?r!0#1
%i?I$!dAKa:i$a<Ws)>9I#A>2f-@UU$$Ff/UZccj'G#t=8cb&69<Eb<Ep7Q?dO6iZ::#"#@M\:Y;Di$tbl9^R9M?6%V'[qUZosW&U
%ouk=&n]BYF-Q?R]/;oY'LFZD+TWGWbW,5e[l6V[B2W7M6i,?gE)nbJP+7.iuqE=Ab/o#e(^E0*_`gHK"BCA!q'0)-Yd.d@-Zi<<>
%,6XIbh:"\]+t@5i,=rL\!^s9ErpYC6X3`YQZL<,6HM=P&/ORq7Tt58Ep\ZuLqYtcV#fI](bPmSo*##+iMB=+^?_0gf)iX^tEkq5E
%g#;XS9>%dcItQ8NB\93g<oEROVU;T,mFKYFpo=UIre:?@lZl_pA)m5t`a);0(U"$0rT5U!lS*qK90>?7hXn0`1MsIdhOioBr?!6%
%;o58l,"K.ffGnhfYjfjlko)[QTdeiM0pXOTJY>:8X9<3Vs$P-WV!I%i.XZ_E(hiIA16K#I,b`+qKqlDuL\DmB&#h^>aUK$!d#4_<
%+YF=Yjj@Wkg*6D*O!(JVn0&G(56N3'9Ce>fV>UB92Fn@#T(%V1/J2:RZT(d3&G9\1j%hG#s+OSIPq,Ga$JTU'^qB`TR`g2>5lQA.
%rgDj>:C*)os%XWb^Cqdcs'3\::ETg2r0J2u3OAblr&5jSIgIG!V(*pCkZ7[-od0W\$U8Y>0*,DE2gX)n%cL:`V;2tJKZ9Q)M8E22
%#+Ie@4`LF8i;UVOgHe!C5"MU.a;X7f>/",[3f!G-J[YMTUXnb]GTltG5;Mi`bMgpjf29E%g$aa1d3&A]5Pp_,0K"4R=RXdlTE!7Q
%"am%^cnjNMn+`(8BFe8eY%>T_CXmA09A2QI(C;Ys?7d3d:;YTF[717:h)#X57gaamkt':2:9E(U>70,o1`NrL/Dgog)Rduk<Z3gh
%I@"2S0ReH/%-jF=g1*r'D!re,P+8tIQE.mU%(4tA4k,q6;YZ'-06JQ,JJjJl=sp\PI*rlJ*oJ5L7*me"(;=)ln&IfeSE^3df+bs5
%AM*$/YtW:R"#O2AjpEC>Y:IC#*)#hHPSRT-KL8%L%c8#AmZ6b/6Psq3^`(d%NXm/BEbHP[el9;TEUUG*S!1gB@WTGTNck]4[?S*h
%3lK&Z>.T6@.@R7i/_YFh!s9D8@o*hIe*70DiZ.L^''Rd_R\]9FJp^g13C$HsREl\)K,9>m%I,IqVH:[&c32E'-_*a74d[AKiSnee
%Y%.@_FG<OH_=/Nj.`,iNR=j.5$%;5La*f&e^29b-#UX]O+O4%J`V4f6ZkI\`pi'Sj0YHJ6/j,Cm7bY74SndK3#)E@\=[ImCj&rlm
%][T%ih&uuhdPVE^5kcUe@M'nI*$p,9!PpaS8COK0]ms`N.HM#k8:#NI%[!m(Sh4B]J34lB"MUb.n/,W](X3G.mn_'A:2!lc&X_le
%1cO%j5tB';BmH;pk*;e,:05#g_j;T2>)5L"?kXh,8!En/ZH]Y!47$?J_hBjWS"<k<>c2ELp#X)eLikR.)!%CN(^sjfc5M^.anM!_
%aMYG_"4<t\nY\n?kBL`dM6%<%JoD<Tpp_Q08JpXQ3!1N!Q0/hT$V*h4)jm@ETqE=07>I`B9FfPAr;lcb!Ypcs63Ni2[9V$i!q]SA
%J:r'%<c!ehK_l]^:I<AKXj[Yi8)bOId)N+0O\T=022NVAQAW?\>iD-UN8Y+Q$Bul^$=lE<6?p^[6L`d;:Efp"!ABUg71WoW7`\-;
%"DhKif>7aN":&/sBoc4*MGle_/DFa8KpN6AImcU,dSK@=KcHul3Gj*FNcQq(93O(/.U.53E^1jdZ73l2+&)mXF9YBB9B"UtODFrn
%9=cDU-L;#[U^&XYqt+%@%:bUb)9NdD5c5Y=U`+0s7"PU)#S_?Y3*6r+oJO/+37Jm"D2_s8e>$MK)`u3mR^Z3',HXp12cAZ`r%QK9
%RRl-[jqpE)?<i72mD5sRJcnn("Zp-[/5i39nLS$0F3$@,+DOX*on\ITOA#iC,J"&>NM\3X5QN%DPnjs0W9+-ri/X`r]LWL]*,`,J
%e?P1&ir2'O.U'F+,3H^oe[,lHP_<Y(*#@P2?QWoSS1V\k<[D5V2@&-ZN;ZXFf<T7VOJ2R_K>!j4]N_<9!"hO1*t;b_CC?1lT>mA1
%83km[I.PJ@P6MO=9-@I>`S#m8,r3),>0D*o*D;/\c\1jo)SlYF+:ADiA(0QFb0(5N[S]14b):AnOL0,;/c!>sB*m"ETWY]?Ub7lM
%+p-8!L<f-EH\\t$(;Q#g!ZS"mc5"%mNgKlTQSO5aY\#\mTsKKYX:Z2+irP$#7;jnKiJTWC&gijf-_u1F,Fcg^->Wo\B<fN9*>=H=
%P10N5R9V"?mdjq)Kb#'p+6=V8)io)>-rk%m`R\-,$s.B_fqSJK]+5u%l#si!!Cq!UCp-cP51I=6n4dull44n0#TNfIHl5tA.+3i,
%%G2Z=#4N/f.4H7B3u!JS:<j%%o=#eC8Vrr"+B8iLC8j@_\6lho%>dElB#,^>]Ou\Pi[j6,_"9t$02OQ_J],Nj6TV(eI*3ZW&j0#m
%dVX,opb;;cqn[BTL`=^N<^W$D.n.B05fAbP,V4HW"+qsd)"b]F7MIBP756T[#%47]r.OBT!\aIZJYC:;3ge^W%mf(_M(nL"i9u32
%5b*of!:7Zkh%d*;+q,_5R3scfDcAFspT;$3Ua@Yn((XW>^qNFHp'T7oDa";P.TTuRqpdq3!80pVS2S)SN22StGj-@H"Q=h2[9+Ja
%BU#FaGMo+gSgG<X1<D<J:HG#i8a'PODa/otg*/HZ8_Y,-:ght-7&%"?N[NN%0H[M,,G%F*+1bun89hYnn9;+cTVfiH"$7=fbd3(h
%PR%\83Ok5_aPaL4dNju6Gd&K="YA%2*l8e*2Zq/CW_mgk-_qLmkYZ!64@*>3'e'tpUnBGKiJ9Fa@sC/UM!#FrNjL[["SX^)kY;u4
%q.'.5D:cD5O\jX7jU`LTN;;6*$]RW:qn8%ZnQ>h7qisWXO+L[95?Oi=l*Pm[gTKA]kkgFC*fAk.PBsW++*RM:HA-etot)X&B9.A@
%2?=_mhm`hYT17\G&q7a+d6k<>Vt([QG<)7_`YV9'kg$RccsO,G/+lMVk?n;JlNTjgUBER2g"pRGCS1Np*1Qp(9;;e&ih]tb;_Q$4
%K)>H]!%4UmBfCOi-q!AOO7buM;es+X(GY\&s7?L3*R7D=]=5P>3o/jnL%93;?V2/(1QCp[mO&IK[OSd&E@bc`s.=tEEkPV0A_TGc
%'VP)sf%VL@quC$?c0,*>Mf#nkT1s`EToE+7\Q8[V,(lbB-;j^$Lp4W``6\.gN`Ul4LbjLc]Dq&`s2Ti1i\*M4$eY0V60,Q$9#'+r
%^&/&Ph`mAo(V;!;]qGo>61].irE&It9^&Z<TDpHCmb\!?(SL5H"%h@gl_XVkp>2/2$<@mJ0)+V9J,@Wb#<-N"?S;fE%V&/nJ%Mdh
%lW#t_qYei9bJ2!d"MQH\s'U,5200N#pZi3UrZr=nK<pS^jP/RpnF&T*7=USF"gpglY,C(?JZ42ApKja-T'_T)p\pl$N)`1'nu1+-
%<,*:%rqgJu'qjsn'(^@Ioh&5g\,M'&k^Rh4'3,]&q%:j\[H>L_GA>ZSs(1Q$enm;@VHbS:.(s'D@pr=@bbooZ%R'Q$c!"ar^Ji$K
%qErQ1/I"_T2tY`tXnt)$=R,TpSbheSnh`1`H,R*[*nflRgATlP&)#gtKb*W!\6Wi5oLf_&Z2I_8h[VX/KD2W*;jSEqmdOJ[heKcp
%#df`q<EbBB!JSjCgT:I>XpgWD/lerj)nqQJc\#LoDiCOi]iMYc!.@`NGOR'i4]^k?b,nR>3X0*'3b.kc-hO^ZD-A"-Li>Jss1GHi
%p;#@Xd4&SKG,YrJgo\?`)l4_MJ(rpiT(]),hN%nG)3F#`*Ho*FX2-Q+'Us@mWNj'AVpt(A9>F5dhd?c`.STL/+0Tqq5G(X.\_3uF
%[t#;;3j"L(^;]t'0("d]M-W0WeAdBR^\>b=eU"DuXuGXZ_>@+adiWZP&9YG2r2%n+)QYK#QV=/TX.oGM)3P6`'fp,i<k6^>XL7qb
%mU52nn<HqDO&ZX$UhlsZ:3UHLCqnF:aG&#-MQQUA(o';:U':,`cPb/O_nUOckVL'YL!;ouKZG"bY5M76]V?P&\NL"+b9E6r>1J\B
%:6+.cU8cZ/e]4>t;YN!HJ"oVsC5qma&!4N]Wg"DMd^mrdA&TCqhS;PF7W,$hnF&ef4)sHpk%bFN(W[$B:bpT(dKi5s^@<X\%8#UC
%oL>P3BEXQ>;X<8d_QP&CgIIfYWEqa'M"&<Ag4u9R2*06Dn(tUO/^==/2kYpZ)C#EGZrKJ3iu+FXLSS5R(O-]T"c0M7XLp?ohE4_N
%eD'W(bXV!g+B9Ij^"mTJBa8J*qPDbWA)cHG)M"@cEtIii!l%eB[k->=c.3oJKID\X*u&>%l0DX6p)?_>4(BE(f7MJnV.S8V`\3T#
%5IHJ4QgX?A,WX^s_i_4jZ2FUK+!6F`qoNN$=SIh2.4RRCc89S)5dCo=-S7H=>G!cWIlOb,hch\^_cN/HkaZVVT1g`!5M5#Q>EZ;K
%c?dh+>&h@!_u)c:=R@c30I(*l@g"sGC^l2FXPW$i`ceUBr8%!iqqfS9G\h9ge_m3[O?.d(SF7jj0VK6dhTNc7X.1TiHS6[Uc;ATh
%BlLS1qr-Ws;+C6+]"_%FUD,-7:YWXK3mZW+mHkF]1YR8l>6??%A^u4T)C*RN'A^],[FV;dmJm(?]*[7@B[e&*k.?@tDaVDhCft[I
%m!h"P/mo2%rq357g&p092!F2A-(q1Fmn`dh$-aN&M?Y9eUBNcmgX)&ChR"iK-+/e'"YP3f^$k.ePLj16MJYFBa"Dg980].)2i@n&
%gOJ"$B..Zhd?`ZKH\lLtA]3$mD?e",IYru"GSKA"7Q#K:?M1@m/"LDVKi=br:AjZgIr/!gp#^\gV]>sb4$)Kuft+5lH^%7B+hiL;
%Gh8Cj621'@(LQES:JZZ8mfs$,f>AQ_^=_Y#&7G+rMieT=oHq2*YF2=tU\lPEUu6TC_Y:J<+X5[3`(1;6i#??ppm?Z,nM%C9'NNMW
%b%3A99bLY"L4"iqDQdK;[G,%$,PG2g!?rKF_J`TfR+qF]>Isbk$1VB-8FoK;JB$elPX^Xf:Kk3\h:g3:`6`foURjsR>B2%QZs;mD
%.9%hdLuIr;_dkHjX5*k"<l`@tNTE3oIlbtQ=99N`$:c7FC?OnW)H#U'9W(;q7Xi+`O`oWLO`0aE*&/L!hUtNe/,!h%&tq<ek5+!h
%)[CBar8+WA2)ZIT'H]r-<X8SS;X\Cj"C$I[D*PHi^B_d*-W4Qt:]I@@e6q*]\bhX3?nL!ugp`_Z0!S@BFPeUFO8#=$s+4TSU)<DW
%&1O4Z+)$:oD%,h1GJ3"ueiM^_bjC-G%a,=%:2Aqp.b7hVBpCtmI7BI:eVtL#ik&RH-CWiB>.=LX*8^[U`#c?tqD;X\0DhQ2V(Q!G
%5AAmK7fO*b;I&Z`"Ccku>Oo&,NhkI4PT$r\3Us*)d<QQe@Qn]Eo^n9*Mf$Nu)tK9/S(Ul/'=V^8.Y696]%R$O@")`iEi517aHhIG
%pDZlm]X-rhF=;r&KBPu&l[>P:V.R(,Pt\-h,_?S&X7o`^I'o>-e&ojPcX5$VZp]ADLI%pn-9,J%Hnt&M]UeHL&`\ju(/Kq3\<F-]
%@oo2fG9"E^lo-GI@%mrK@gjJ#1`RHl.GF7'p+J`[ho;e4AG&D:Lj+=r)EON33o*tt?<$m0Y.s35V-U(pSXA_,f@us&S'Tt!&G/Q<
%.@>$W#&>8t4h<;9Xmu\+2dc#G&5,#%$,c`f",B[%R<JHY$8jl/$F5ZGV/@r'(:B;%+_?%[T6g+>d02sGl.gJh^XsLSXo`@7pBH<j
%c0$g_)1R:P0LtUZ`7Q\"L[C,<)sIS:LYkfJX=dE^<gGqlDJ](l#HOoRobCE^b22c%D!<c6P:W9LDn=DEn]Y`\mH&?XTc)N77-8,p
%ZLq+i4"66Bo5\;[olt>!a'2^%^7*_XmIVp/OEYmG.GOG@/?>7eb!!sQPH2fp`8'Y+I(R#Eh/X9=R+:8@U_C,hlt%6h&%5Q+]\65k
%Sm&;X&rE$3G@PJkcXB)(.nhOpMmZmZkrRj1`95T&XmL"Pj/D\h>F#s$6I)&_brdjqn5].lHY]tc@;h?%hlDrnbH#_>RlL4keDYS/
%f;hQjL$R:.DW2t.S"Js^B%O'W0FZp@E-JqGceVs#W_?p1EOL+aH0f)aeV-/<Oh9j_`SQ&L?!<XVjc3`sh<`D(9aa-Z^ZIGS)j*hL
%J!s%Q`@%*:M6g*f&&[V/fiTP-&I5Yq8+/@HPb)onA!u0K]@^kAk.$MTp#hW:2CBQ0PtL9Y5Lj9>qs?lpg9qbhW`,P&>HH^u<\o`7
%Q'lkEG1BB,+&0N0!hua;bsrS)Oi`gQeTA,Qo+F^`,T"tR<N<4O6MK>2G:FPTm!6tg]<('O]-i+h2,dGOY#Sc/B,=1EanAJE2EkKk
%1t;L4YMjkUC,NW.1i\tVf)fk2a_b;*M.Mrhh8GUSWgAW=H/b:h?#EERP*Y4b"E)DZ4I$.G7+H>?3@a'D5YnE7Q@1p$P?TFe9c#"Y
%M[g4AnV8(KKpoe2<dB)1UG&n6_NO`%FIM+Hp=]9>*V\]d3u^H$B3&ho3Buun<ZY/9UXR^jZMLqT6b=5])#E"1LgV'5Q.ZSDE'9S?
%4e"LN<],qG,*L(('"W.lmYWAFjAR@1bWWpcpBt3/q,1p=1*au_#>=BngZ<PIZ-l;6:KDYe7E7h08?;(J$$`CpO[$H^l%`AMiZ4`D
%S**(UIO!6C%lWgfQ+K9'<sb_MD^cT/Sk,ID/n*'[9`EV'SRfC>c,+4no6BURm[UH,0);6uOg'IZo<Ct^hn6qjkgG5`+/"KM(V>9-
%P-Iu9[ZG:W)/E/%_Oi]dc5eL[EbdO8m#@p$S%\fJCqeTI+k-b/J(BH!XGAY!2,R/a790@af*\k5m:c2j*a[pNf$[g+f'1C_[Ja&[
%S-`[N7*#")qKC=7RTk[,'p*"9'"NuL<AII&GL\p(IG%6]h.1[9g&"M$ZFA!,6FQ`2:6P7%I9=ZLAEn9`\a412/i)b3M:A"d^b@I'
%g0S[aH)_'Y*A!ngENT,We(4El^26r&:\29-p39a+=OPrPK9P@c[rn=FGO(D[BDcf-M,%lg&([#I/Pa%\:EN&gaED$lc&9hSe;#Q9
%BeK<E[6;"M]</fCO7"oI$h`"cJNLB6=dSC4:?u?]Ups8OjSa]e(hP4/jf_"0[.Emk?)KA.(XHLLq`8)0I[ps<+@^(0=A2Ltc>8-7
%9[0@D)st2pFpFjd&;;p33ddGjUpnX1RP;sI6k:3kXqoR[??Z4RBTK*R\`qmtHKJg-,od[-\'`8A/Hc2qZNdKWb&;_<8,sSkO(b,Y
%a6,^iY-mil`C^IKH#O*AIPr'J:.^e$9cqW`2RE)Q5nt1P_'[.Vf%,/[Y`or$qNY+Q0\>CZ`LYPY9OlODi-nrA(fgA^of6s`UqEAo
%f67_lo$)1.SW6D+S`o-/em?O;YMuHkTQE8,e]Ne#pAA`M-%mkf0V].u;hEu[$qeSl4\9#BdC++H^S^5bE.fdZ1>GlU.:,gpSi_%3
%0A:\fZ@ii/gERs[Ng7F]]7Z,g(`[M%O4A4GbMa++C4apfV`E-ME&H!>RO<_<jYc)*&4&a<-)nAi0\"-I/E*Bh)O8#@8Ad'@7M/6'
%-1P&?aN=LPg_a\ELho7#%mhN]&PBrLQA/HsfYQZ&p\2^tnRa.VQoCMN%jAXkS^Tn2<MLC&dCKNhWN1"%[D=+rR*c@KreU'Xg_QJ<
%I1"TFUCP!V9)F]4IR"k)GWT0^J6q)1Y$'#Ipe('[M1YkgU^!m>`d8fdoaT*]0Hh?5DcRdNAT>)<Q-ni,#LCi%Dak30B#&paF>L51
%b6-b#`e]TG#:u&IVmmh+&LLMaRKDH2qY_kSLF2O;d1Flk";$o.kK=r=6X!a9UOS4>Bho/cQGO5IQA<ntUO2Wi[ieqVOsc*5&Ecil
%;1q!d9HW+UCk9F5eUF8Xd`%EPAms5uT4++pWO5qqMjTbs(/+[8C8l1,/'b7DXo6>V;5)$O&+Sij>?6+(b^O5V]R8ECXj4V8b4[2(
%=+#$r[cg2SFjJ&<B^aT8P@nNGC[&`K1n1UjQENRL+0H,r[RskB,Gh5"(hRd>cIG4-Stni1YpNLIAnKZcZ/&H'IGurGI.M-Nd3tjQ
%l/hSIDDN#qI,i5GAEES?Xfgg<8UGoffjis&'OTb!Fi\j71ZaBsD(^>5R;Rci.Ymm=n'jp`NlSGii;#Pa@`e3#U\_;kC,.e=XQk:m
%8I`SMZ)RniRMNprE=s;MB<_DBVXo"HFokt)-JFpF@eJjYNqWPp:h(MacYXD;dH]9_:DalRHM_&/HU%2qE,Y^VBCDai*Xi]CHgu[#
%pf#4C"BFbh\ZLg\!@iqlM>Af:ASm1#+%]jN+'*Xp/ufT4m)*>ICM<ab3IN[srES(i_t(V0aM&hlj/H\/#N/.G8+;qm0f7GZou>+h
%N<#S/;pRX6B#2HN4*U/jmHk^aqi,,0-SCqAo%IA3TJXi@(k9JT[rMjhlRVJZ_7VkCH[9(KD,"7"\R44&[^XCr&7TYB;uTBm/'5Cs
%UNr$1mWE\_5Q^n*&8^aXHH,8`/:7B+)[RAC3WXSKH'?h$Xa'V.8Ft#K8epN(YZ9$+O@.]:-OsT9-`,FfQ_L3>f@KaWE5?$0Up!2q
%^?h\WeuDMReYbIRl>]5@<0u_p(G8XmIA[:`ht0)3Yk$H6':R%"7n'?_iM,'hbg=]RZh\#$5C7'CCZ4IXA]bF'FHm,%:kbD)\VWYe
%ftVU*oSYrtgfKd.c-4$'.]CP^QX(8H_+coA4ZXb'UEA-J$?VsT?Yj:4EfDlJOb7niQp!XYQgPo(Z2D_sH6E4=H>=<)GHJaKelj)<
%J(*,q^LhIHmQaelTDGL+*O)I'aRjSWm+%+[U)P+[^0_n?faRWK6T2rgh*<K>aiUcKoltA\1O&RV)\:0rfbcjRE!<9sOMT+$QeB*$
%ZjKm8mV%q(AU(^)E82R<\%(\@BA`>Cbf91r6UIblEBOjMLY[>o:>QM'<kNjM\QM(`m.H_K;d75mgd8h_8D*5Uo@TiE\4J61`;"Lj
%]$aq&-WIA5?Pm-:.55LsLdGuc`YNDUZ<N-Vn+VQ:fP,J:8-`8Qo@*>?0m8hsPO0E?H5c4/jZ!)#a>[N]@0<In^,)k::"*4YEY(rR
%pn7g$Pnu#2Gr2'B9J>`F/CX*$U-ms>W$e3q\j39r`S>)"!2Ji$qt9NtlJh%0q"qUW\[8qsL^k:VXC1,;ltRoNqd=t3:9hoi^0I1r
%qdB7.@&[s003:5*\[D%ZqqTb'dDjO0I'M64XWGUH7<*YEW,OgQI04ha(@OcLm,o":ebJFhmaLch^;Ko4j+V*r"GdKq7;)Pk.%(<\
%46Yk5lP!3Lhr:c7I666Pm=EEV4bTqs5%G`V*m/3+(YK&CK3if;3,XLp)E%3[;Y/@<gdJ5LgjRO;B,V/?"Z/SA^eVTZJBb`W"m<o^
%Slg@LUqf7J]Vd("?c4F:A=fWFH/YLr!J,ch$1thDZfHR]D_]#7R`r-obf3K:f\-)aC@_4G+*rjShX?)g"_u`*=^@2QbN,,\(./2W
%CntFaPk'%gLB]/tX[N/cFL7*8_@Rjojri)MKP8[JS`D5rDWH[;>KcGH:[EX8DFjJ0l5=8&O+W,Z<e,)<H1(\2_"du,mcm\4dO&1+
%n+d+JXWAdVX$OMIIUsaorjIZ'"f0#pkrk:3hjgc1Y:_E9F"e#YZ_X5.W0Arik3L*FET!\I_lE!)VebP;*Np$25$rck`.(IPAaSNE
%DA]HcD!L2*^6hst&1J(\e(R`HlSPs>V@Of;M+cY&S]o:6ZM<*VNVtfib8hdD1ZdQ&TM(q7pD9HSX]gdhSnstJ#;K3%mUV+M=FPZ!
%G'f%H^91FM,GWQVdsek+0]4rY!_(YmRJ#1/noO6G(8SCo.;RsaD94nXXEhh,ii^hA?(O5PFdD19Qfdu$eO2L.[<_ebT"=K_2ag$e
%o3f"uhS3=08g!_aI:L1:""R`X/DHT4;tW0+<Bko]=C"Jdkm'GbPIL`Q21+Z&B7YtdjO&5cXOsM-,V[A4?nq:c<gQ_17Grb4?VZV7
%9^/J,dNNAY4*5jb'WTIQVDf\b^NV`PGJ%6Q+1>(VBsEdO;g)s7,Jl,:4CI:tZP8t#WdrK1:!:Y8Z<PDIY9+,)Q)#C/b.p'$6Zs8h
%!)dkWp/"m&qPc8lp;o#@Wl[8o<2"U8!OL%He^=#$mQR0HoA]a-oc@HRcY9Y5]n%&q^"dc/I,`%PG%T2nhX0#EI8'C`7haS#FE;lu
%[BNW/FFV058GrXgn4NtiXn,U.^R?qlQ.)"^7H\Q8.CXG*F:5FW"+.P_:;6cPSPC+#jCY`UC(6-Q@k]nQqXN]q0m)b1qV@.o2E&i-
%dF2diC.gMGl%?O#'9J-5'50J\U)@1V"`#-=<ET"+<NiY'O?+UNrrYk4<oqBr0NK>X]$o<nJP/3Q_2^N1%]*F&8GdCRB#K4W4:c!1
%6[cki1a[7J"WnH<iUQgN$767a0KY;@liO(5$i->,s!t,mM@ldlmE+UBZKIpTnJ]B:b40"[F"aLWD[5oW%IMq@fTqir-M@=\oX4&^
%G]"]cA>$^)XdZ9n%/>"JW*g7c`LWBCR4]8Q%L,OoG[ESJAp<hO&"2UOfHe&r1DjG&)NhL!F"kes9\Q,raJ-Cc?kObt\T>)S;l.i&
%]7PGG.O/HXK:tI!f&#/h*u_UXS/0Mh]POcG'oMBPj/(ju$Kq;?a4eeo)n$TbAq)k-9(1#0kMoIJ36RLLN-#=a,6YE"4M3un]BdGR
%lu&tQJ\!%hgmZGmjU18:c./Z`CuW\n#?MS3WA?`Z^j$@"C[V/Xgj(%%mb@!Dk/)6*._"'QD,_$l\]rg\!bJ*I[7GWc7<18a5FB#&
%,3Vu=VS<7WebSa,HFYXCJ,2,f>F=4pSZR(1BB,Y'ghW!ARJ&<j!l"lT-L_uJ03%JMhaGkWaup"j^,4`^WlsMU\boZ'((.<CIKbV`
%LodcL1grIRR+/,ScV]Z'9]eC:NiK4X[J&ZUHk9"WXB$jj7AhuOT4u72inE))=Yk8Od)uhaRbVHJVVEi[?2#GGWagdX-7$D9d\M8u
%ob#h97tng[eLQ4#8;r0HMk:'NNb?hco#&7Z)<p_3Gq!:m=59KQ%[N'Ne!'Ed\EU=n4.dE,SYcG_+igTB5bEL3IG0F@^RU<DeqiJ#
%;m7+n<]=kImC%d:\jX9#R3g(]kN;%;'egT81<=Xkj`EZAHJFu/YgI+9%lVM],'bkC1R7Uhep7W3U3"8+6ZYR1f1bL<4C:+P>p`4B
%Xf'r@rX"mi>P7p=g#Ffs47Vp)2/qS;H+\@s`#>A[?+>40q4KGd/_Wk+neE#WR@S#uY*p:7Z1iffQM`PSqi_ilpppEdnP7p8&.-j)
%jrZj'G3@rP<bV`IW\t7=@**l,R]rQt<3j13S/S?s2]\l]`\t'PbDSMEl*(9a+T&ZP"dR`]Su,`Vqq9@pX+;\O^R/pKTjYglQ5Ii5
%a]J?!omu!W8H"SXIGogo?:Q;9?;2!S^!NgX#I.tm#o\ec07ohp1nSZg7/"G&]QTAcY&^"oHY[;<VXrQ3jMp'QTj0]A0#MF=Qm2U-
%H@<8W"D:-CVY,I?<"qg3M@Zgh/l#[OW00a9gK8nPVLeVRo>"!f1naE)AMD;ka4'EII@S'Be.8GtR+o3-cG0n@jhNGIhrR/sSqEl#
%@s`&D*:/^IkYdYmP/OiM`K-HrWOPiPjFHW:=$mcFbbhGCEc#VW="pJ3Gc[pamG=H2*U_qIe%S>K?YV\$7^(ZdeC&8m=i3hk,YoNJ
%NS7.n([1e*e>td@3r?%QPI9l6*`Ygl&'cuGmAjH<^`p`.Nj1[sQR.UZHd$V)^]%WZG,b5grCJ#?,SJ5np&8Rc2KHOEm,f)Weoe8p
%Rd-\(8,#(YgMV$j''YoiO_Jb4E-6/=[AW>ESZCZH^%;55@<ue&rVQ&u7j??m>U2'`1EMCsDPCh7`HH_!pVB'J9Z1*$*,O9s@BtMm
%M\u;)^k\lkpbV?AAQES^4JV.2C`lbSY$[sn@:k8.k3jc=S+nj4?SejW>f!UjgphT+=i@KYqO7*ggbsPI*QQHldf06p4a`-an10Ce
%[@'F/*koj,X7=*8WTRP'50`QUj*;2D`<H03;\`]G`k1^`DUYeCCp!;d?]X_m4Faj<3f>(Pn4/Cqo2tG-='gl@\Ol<HBE0OL3qYRj
%V=l.T*,E3kPj>4\me4enRotR9Vi.`aOS"r$#Ojm'SM*bk?=Hp^<,Sc*h@S6DT4fe&%`Hd/O[ge.iU/\9aid-=m_h<erHDZ6cDm+u
%o`nWYT3jSR83F6Jpp(kIp&lGWs3X<r(*;A&/Y%1%@,TD8P9%Ha`&Qa;G"Y)J*8m<je=!EXJ3VY<`oDue7=2N5bJrLK_MX-rF)\MG
%]2uTNHS';fEL8qkY"WL!$POT+BK#DMH5"IR5H")$Xg>RGba#ia4>0au='s;>R3@G+FGi-ul?NX=e`l6ucsdN60T\3dUthtXmHaTm
%8AK']_[@r[h_+7fGHtTOrV)$/c)jNQ\^s[_9?k^M;k`h[`N-R9U+Rfir2T\6I3Cs4`.b>jR&=7CmGg.sf`Bd>^'Del^7X7CT)ar;
%odQ2`l[qhcO3#]N$RsO9;rnT?Xfmja`Xat9m-PR%/5RX\]Q:iR[QAK1I4ZD].=UC@1-7S@D`?86kjLp`^IKWFG!%Ob:jInV=4a&g
%Okco@`7rC'+tK-GSE[Q:Yism8GU0kIp)9?'e8n%E]XuP/E:<-NIKR:6nu^g2BtP#[6h\@:TAiE&Om0s^o^u[(@Qq7?R<2p"aHQ`Y
%SkeZ]nhr80BWX^8<uREfB`=qFRG1=\,-cdj9P".`js1SSb!/<-j`iVfn5)nLXI&m<Ltu(=Lca"RN4Agr)%k=jRh7YFE>)4CD(">H
%m^Nj7nCAhBa,ui^Z;SMUMPR+F<FgB#F"ah>P'Vqc2XOTlZT+;0A1o<J,PgTLA>HI0\f+_DC0sCfp=^1BXa!&Nfe-"T7WqjBdE)<o
%gkZr7e+Lf0`f:iq[a'mX-iKt5aB<:B+1\mU@I,^hF`si12[>>CaB_Ze8'3378!3(>HSTVK?/CT([S"6So<bnHH!*7ZNO8BlCQ[5k
%l"d(Rn#VR?2G3r<M0<KDHoa&<4[/afG!$hhY#s`SmaU(&[8T\X]CsMX$o9N-(,s;4h3lsdjC7^qI!MTr1qq[(IiZj!*Zg:WDRR4J
%NU)SDq"E87hY:E"`u@6Z*&P]sHRHf&Esk%?8iOc1DiZ*Oj5h'oqEDIKN7X,aK9qGgolti@hnWZH1WONFr2;D31$u)*:.4F0du!i3
%Gk\XnmSAXQ2`BX0Pe%N$GKK`=e\e;CM;7O]hSf8Q<LDE&I83N'?QFA)`MZ[_id;q21NBPOitJ9f;J2`tE:bpUjD6uq0GD^Km,LKX
%3rL`m^:/,I3A[:UR#Kk&4\f2&Xf"`&3I[CG=1>Asb?OATA2\)H9Wl"lpuG3:<(n@YG>j^'M8cmEX+cc9ajT1ejlHBcf&Pi_?+3&O
%m]@e4,0<"a$Va?fm;>_=qD2N.n!9D@ZBpSG/aZ:d:M$X)UT(ZAK?'s^X]0E-80q<7cGt9E;`B^!f;\%6>u!Q=hX++Hmjg'?O_W"-
%Sp@I[9IH]Eg=)W3:JNS2gR$Bioe[SVdqeMbCO511\N*rcSki'f*3>F'930l<I]/+Hl"9??1#7m\:M6Q:Vt$1"D;f<N41S,1,S-&>
%1RYA22m]c5<1V^W>$dUWXj=FgDYfDU1\^H&2Y45fEBDWr?<oj234#-4bU2cNfrW\DEAmLNpLa#NjOrl0aN3%Do4WIDlDdgOX_tSV
%B,_^]cLs"tj3a8gXV+p\`qH0BH[@caEmm`Nf3WOSk^MO%)Elj!Sjr0POf`;F\VS-k?Q6_HS'&Fajq?.0'6E_*pH#dhmQJmu]9BY5
%KBZENm^uQ3R4C3g=*)^\lcZhFlh3(LNBUUf*5?V89<O>BA%=\e5.3PFCW&tlc8r5YG]tY2[,WNC^%"J6&^Se[:1WLX_T)$A;S7-4
%TC3Q\o6Zbj`;KH(^,o]4F7\uVjlb+fGdI/bO&%@JibC3>Ni.).:ZGZ=qc<V_>e0C:X4*X7F5l[DhLE&>'!][B:-q^B)i<+c2@br'
%3gi-*S89iQ-;%L_l\WVnZ`u3ukq4R+%hHhkIW[t.AGb[O$[[dpGN%P+o4A$E;(TBJhit7rg%:Hh*`"n&/#$"I2LG<7f#^;Ie1)QM
%_J6s'p=.)5L')7=2nECpNhVU.7`jAhO'Bc3bBC=*2qRe"S>k+dg2U"H0k\%^D`CtSRrdb/0!XP<CIcNmh4C!RUUd.s/%t/;Rh^.f
%m_6h[]%;7KeU?/#n@eA@4U[1Z(OFc%QWd;9hWB*"gcM!pm!6#1afa6<-bCSr4P(8C</lgDCj&Dj0C2+r-2q;/fD.EQkN4NMd^S\r
%AKeC!,`@FJ\$FeVD9,e,5-<tM4K3G08sP6K2d9q[AD)6/eP9mTFfVHWG4n]0V=jMi^Qm&grl&nuf<9+p53[p;<C]-YXaQb.5&'>8
%r8WsSX%`ZYqb-O=F7o-W`Po]="N8p7g>[DFZ+X6mVD-D[SD7kdP$W=6ONcfu]#eFLH957mh4.(19%N6i2*2tI<jPTpV>\HW`_spn
%MCuU!?ehL;/*GU8nm"&@g+>Hg;R\$;>H.=nE0ob>[Q;U2>kr\kGAD)+q=\8&8RT)7DbmRTj4WU\jk\5Tb$KFAJ#-,3c`M<C-,$mo
%\$iN0<pn2sdHjhC[JKIL:.K3)T@7]BZC]?CcQCT5&#]0dVjYsXGlH#b)1Bk]a_\Ae:?En02N_]t.MtOp-?eS-CtdQKc5uY)S([]0
%g.?2QXC'5O^"mRDF"`Zs?(X<XF7$T1U\r"$E]p&bkG%e4X%59YT6iROba^k>$d")m?.c8B*uE(H^$]'70q)8ZEW9Wf,J&fNXBeV%
%G1Ku0dE]>"\$G>1rQb$2fjfJVrFN/%YVBM?>2De?UJDiLQ^-pWP@!Qk7f1L!k&P;_[Wti"]\\#uW@`&5mTk"F;AV8>>DKVL#2r_R
%D9r'LoBk&0KB8WX7l0D?mDkF6Vk'b,3S@Q<B<jV<j1;SgPY">fA*W#m2_FWf];K+IGP>\5.^tbs.4"Y.2jUdo3SpCcHd+e$loU9)
%M>`F!X8`*8n"t:?\\@MSpk@;o_4I6hJmf/W@kr?i]<H2oY..9mnAJ[93IKLChE4u?9ckIZ/KC(;DYBgl@V#Bd<qM;#9?$kKftHB4
%n%O03=#l[.c<P6=*a]nh*ZTB]ala=WPHmu-*g_(Gm\fYPVpW^##+eT=&,4,B(]MqZC$0q*IjWdNT?d.>ZcTP/kFKb@lu#^lkH9lh
%kLZ&\Ih=-[mk5Fu[oY2>o8B`/Q[EoPd_>1q?#I1`2j`'ao(#d;<JaslVs5("=69/HFlYS<%DuEuG8JHS`s5,hf<&LLh0:5+EO-Il
%\A,#D\`;G_nT"POA(F\iQ*\N`?.@Wmhdr;NoA.Z&Y>UhE-sr6?<_lI`(T[F'V>eL65rj5#^L'1(T'Ve*F61;s^Y?ZD&='#nI9C9$
%D3V&@ro'i&:pE(3Q]oU+c.fTnD*N0*WAV!'_g?V+[;s$+HIfi\^0c")>fYZFfK5P9I<b1g,*2.X1\nPqn8e*PGj]\=hGlC85<)u^
%X>b@4d4g!3qj!/=UT<%j;u9uJorP&1e`W-$>!7)%g82eerkNHBp[-\Xpt<j]bNdO'bKGlDfPJjWlBu75`kH1g(9CJN?6sp"c#rcf
%oiPO,C-1#'7!nstp9*5/75eSA=9!/@]Uj#*`]Fbk;<t;1Y"q*fF)%frS\!FJ_1mMfbQhj;,7^mDH,J$_GAW+%$K%CsS@ujbqp:$_
%Xj5SG)mB:8A,(<&EBdO74fgg5i;F^(*B4S`%^&nBU*7Lr>.6CjlI<h"O0p]`mD)i5f#&<jFN8iYX>S&0-$9(*9$K(q8!KSQ<^XAF
%Fn*L<?mW>T1,3t-V2jMQQ_,5]ppX:RXPJCs>KsEV[8(X(_J*te&#FSnXPW%$`eI;L56_4F*Ah1rA%`Y$<2kl-l"[QQ=JNg\rJ"Bk
%QJ1^q]u%7nG5IOpSF?_p%dOYM6"`<c)%SFRLKV+S#8=+]a84%nI"-G$PJ'=U5r:sTPto"UHJ&2F%Et:,^!`H)Y8eG5_p!=kOp+cE
%lBRgg;Wk*-/qT+ASbgMOUSR:\YEOOG*hgL,L\CB\*1d9!e[t-R5FOi^3Sb3H7e_:B"rGj<eLrSWhYcY"Q([Mnl(PQUbsbSVr>*/\
%pa9`Y.!9m7[IQo&p?N64R.!#SX$`@>,FhSNm'hN+K=`0g]LD2u>c@Jg[1:$#G?W6ljg!9\WTAXjp^JG907*O'O65/M+Wet9367E>
%I'%8!p<D_[iC7JEU)U`sDZg=%LR69qY@0-^%D;W`?#KW3'*5blQ`hOt'Sii:(S?f,cRuO&"1JSjA/!gKbCT%(r?8pcNpP\]_6&%T
%)ufa!Q)\18I'$?Dm0dt1n1q&+pZ^P2!`0lXb[4SFk@'YL[:j/i!>;B[bpjZ4i0sLjrQAt&5/WVq@lUtH`;,).5$757qXT*R?@QXT
%7Q;o(l*SU0hKJ.m=ssQhShMbiM])Q"%2oMdT5;h8@J0fS2m#$-'p'SWH2e,&r:.27?f;d0oM]N"A*=e1k?mf)Rsk+t*o=AHkD-P*
%s$94@7#?s!<mVO8[5BY/5Iq;?fIhb9NneCK$"go^r;+$2r,=CaQTFT6?cF[621(+7a02E8j^$kQ,7URF#%q;3%QmL+kVE#W=C#=2
%P7fCs7oPG?cO-":lICcQrKhQ2<,Zl.TP33Ob7L[<]9r2lAU7PWhoba:4Tf;CYKiK'rD;\d4n022o+;'8U#G=j*V-&5^Q#8d59OKk
%XEF#_Ta@1pg!J]*6Rh8Z1#(aCTCBuGE3Y"qMr#hN5KnbX)i^U2p-&%+a7nFF*qV7,Z$l3Nf-u(R/DehH\"Pb4Op_*@s4CiTd#5o7
%0r;o1+n1!4QpBSQq/?9hgF>EVa0qJuUr0Q'HLo_X7Lkr3DTRG1lP>p1LGp+0r,2$Fk%Xa7p?UW8V]YhPNU>+DN#f,SnZB_(L2'"m
%W"7`3DL9+il0[#)>0<a%@ge&u<:5%SK#[TV@4Q`kq:T]]D%f)r!USDmODI!gQe0ejol'?[+fnoDFol$.A6Z4'&CB1a9)uAq7'N<1
%;Rg3:_fm/;pgeY&9Ye(Sk2X')!2^CCD2GM)4`93pm+(\@b4eV/%poGL0V.]\>6@R`KF]SBR!(#DQGplZN9NuK?jT&+=cS83<Pl#?
%W>*_/TuZPR<]5-#S:n#;9,_*YKPUBCH0bfDmVOJJ':*.G-d25sdaHdEJ48J@aoS@QNja4P:F&%gSSBfdGrQ6:8FX%(VmT,F7>&3q
%6<Tm9AqOWL_-pn3\>/OVeLlHIJL_=RN^GIk7[O:K4,=AN_3RZ-k9b!STBL86('<6@?k6Uu%J*C3FK%*V,SCI)`ic]s&0_cS.ZYX:
%)A%g<.g4E=O:8j))d`f0+S]=N%mb^HJZ,AV[SQ3YW))&2W9ZGr[hQOh4L4Hm"M'$_+AW30EG^)q[UPU/H]IL_IGnB#6@?h-?`!2n
%"UbErNd9=`9_d%GW"=Pa.R5Fm7fY^na2#&;0S+U:oCaKEJ)(McB[+8ANKm6=6Bje-K^4Baf"Q!m#-,UCK@A`cWEUi?WFb\H."(>B
%^mp)/N*-CW((O+\8C?#*2`0IO6P;p*`Zb0Z6M6GcV/R&$'#CfC'Ke@*J]Ac8>;kG2+KYpH8`0,V#!i?P@1qHT:4iq#2*-l'!e.sS
%874AP,IT/=JOZ_3:GQP`aFskL:2+MeF(Mrd7[b#NO9bR$2ja]k2Fs+Klb]O\!4-FE4_SY^3r#-ZK$knUA@]R-*7mPMo,PQFD)fqp
%_Q4^/$0W'>$!baG6b5g;aB4aK!H#3)/pq[NJX45OJfT(*C0m&KaQXV>(W'PnW$u`ur[M1](sijG7Yn,/ESsZ)d:V=F\4!G/Cmq4=
%!P3rFF<V_7']\-44UXLEaoMi3J=GLI_?Z'1A;^hk777+u(LR+N+;ai,=?(micI-ic.K#j<KA;28!IGHp#aYO4D,6Xh"%f/#!&/F5
%iZDUG,,ku)7hOGUk.)7*!H]SP&=BGL/>bEf*mS#09-XLT+2sYm0Q#:f2K#M"q.X*1YYY>S+FU%B.sHB(['kZd<?&#$$>$sUW3UtS
%Ju-B6pc.c803so'%A(CI!`p7c_j)Z9X4FL$T[_3D^]Hh_!!Qd3dXI-?%Qjt=+9Eu$a;+=u$3240?tAANZ39:.U6#Z%"Z`B0oR0Be
%9PU_.@iC_A>11JjfM5'?m;%*G-2%QdadPpskejk@LHs)cRZ;(_6;8=`N_ns?ocOr,6ZGJI.L\V9b?P,N?)314)UArI6Rq#7KS&!B
%geM$>&BG"a@R)h*#7)R$cpmd"ZTnX3'WS9l[U#95KFQ>Mo!j5`kZNFu!>#L4O^VtV%#$+F?PS\MZEt&DWM'^GYrj6TO:e`48/eft
%^bi:)0Giq@fHdT8*Y=@]1koM('SIodDX[o7N+n(d`#+TN6Vu[<5sR/OY/:".C.-<:&esJg&EtYlPb0FY&j7Hl5gD)P'8cg#\=j1*
%B^)bf7!s=i"nRE$Jc,7)LHlbboEcYeAjF04Jdp2CfcGZYjXGe5.OOsDfsW&cbM>a#E!&G[T/?rXk.iKgBOM7?E&=t$%^CPF(j!+<
%*oH<8kW)PHLj:G/MH(R/&L<J]_FD*a>QX!g)4N!2>!Y&5?)A='2.4^"IR6&j&9XYpc2%GDU=;-q#V[cL'M9Y#g^7SI5]i0"6-666
%e<7<gPQnR.3Jf)H6HOgUMb$1NRQV?S)Po"m!/9\FFV><!#Wufp."R$OdTS__<a1[]#&Nb>P!HeffGcRgDNf6?P<"3]#8C[#nj'-q
%kZR/D`qJY"WG#N:n`4(_?V'c:+:i.TB'eOr$06^B9UPE7M]N%9K2ejB&kHN;9%4S("+UDWM38g:,d<Yt_SCit;(3Uj850Z9g*dnR
%=G.S8Lc_6`Ok)p^nk]r4aMu1C2$:N/3uPP&3"4?kU/B;L-J:\^M9@#\-ibPYP,/,'=<M;YH:,T%d.RX!i!H%b"CWeu"9]3u")Gai
%g,"d69aHo[53aJFaFl-rG#@a\II?X#[Z<gH7]DVa`j!e'n6%b2Ot_dUK$pGs5\=/PG]Y(Ll``Vn=jXYJ.r=3VdVGKt&QoCF8M,Km
%(Ok;-!8`*uAmkZ\*1M7@YYlf#AadYqHC?_VH]JGe^.63P=9Ol5)""A"DO>Ap9^KW,J.uGDnUkCO)],:aN!1;RjrO$9BW9,j%N>p:
%(duBu!Z(;HS&'VeLY#p5.r^ZJV1Bd'&-sPl(a+P!#84SM(Eg[oD#"&T*O?pMpRp%>GgITSpk"fiPV'ti:hYWJ>m`:3=72HL(Xh1H
%6cmXnMR(B5%h.f.g_&HJd&C>Zh,skJoh%+G9MHB&Wk_St$?m)!:^],mZaCJ!V3^:i%!,[^FMU"WN+,:2Lc*M/(%IZu!nS#mRf#:)
%`+0`&1)<"^QiW1W4@7dk'3>3i#iX3bUbPr85\):]V2m*3)n_jS-Pm3-g=#UQZ6<AiBPM59'Lb(<19f-C71n]$MdF$^U"Z0cad#=4
%R2/C;+\S;5*h)ljU-e<$C1tD(!o(Q:K2O)s!p(N+"nW*<!A;9/0Uan7</!GmhQ9F'^;<sUO?l@lTjL:VJH%`T9`TeqHlRhT5pc?&
%3"?dd[XhT"J>b+Qb;_E"=b;>M2/$<TCXW>N3._BRr"V!4E6U3CMi9H+Ua5g%2N]*LU$oUP0t,pML<f'$+Vrie)?_p`,=6bc`@_ko
%RR^>;dZm3/Ei!.D=?;$WT'ueJ6*lT_6jZFs&.sdg'WKG[@3+Ii?@_>H/%.i:AAB\I%Z"+F,g1`Y_'[.35VEmO/Wr!Eqe-GLNb8V;
%R*-("ZSk?,iX^gh5(MV)I)XkEoK]"*c'EdN$SCr+&M20tA5TlG@jR)HaV"S=k\?O%_*TkC'^U)'(cDT;A[;NF[5'EO5;!ic[M,sT
%@-N@t%qu15OQ$8e*#[2be\I4kq_8EhC2kcnn8+&c8=q+dSk[WDgiD!ir<2><+!p^_@%c6tdSVuUi<[>_Qj<56gf5I:TYUV=HiUu0
%.mFB""MPj@@>YadU1_kA#BGKc)e0#((&!B53%rp!e:E-><1dPJckmmG_=e$DWaOmt,URJ-d!l&E`skGH+@k$.AIMVOOW0tO5^uE(
%c1MqWr8Wn-!JYjo-lF's<Lsdh*la0r,"uZY5[X`sa<.-/,^0JF'UYcdOU6PSi]?FOGdbp0#=EoCi0FX5[*X=@"aM!"<6B.n)5HD?
%-tR!7fIHs'K,Pf8,.V`c8%'6(0kiGNCdB*:7L6N6<$WsP"Z"[r)A*)urtQ\jq4bPQKPd:`I3o823Q>[/rZiC;T[SI)NL]MmS;F\F
%m0hA^\Df]?^gJ.M`F<LYO^X25]+3.hJ8cZ)f're]ZfC0B*.$XbOgpKP^l2.5eP&,:![.gP^<<>>@#u(pol.+@L'_61_$7'8B>JIS
%dfdorn1CFjDK3QJ1k7[-m"6e22R^),"miJsTLAuA0F3(bG6Jn`=^qTP_V!cOmSn!*ZbM+n#"^q.A.#EW^4LIn0^_OF;+._5"9lXR
%pf5b&$+)\ujF[<[BYt*'&2q=Jg(NI\Eg-Sj5YF:&T,rghi#100JnQG7p9RIW+H12b5)4i/6(Y?>?8FrrF<lr@.)Hggc_PnFgD<'.
%armZ0]CufUW0,Xo"JH4g)3..t7ko3kq"cb#3(RKY!bl@"D_ej3&%eOW"<n[p/C@RCbbI?G%W-3D_SZ@od:Ud^/oTrNYWR>s*ZT&c
%&G]`?!a0&g<FABrfE*mGpo)1T(':niIYJet-Vuj%fF/sN(dZ#_7;22^mXRSnenj7^OS!X#AUFI_j-:m5dEUWY!@eN)-,(T0-j1=3
%[+,;rASL`5$l,NW($%Y'3Ou#\;!8d3%#"K^,UN#n#+e)<,o@EMh'8j@lNBM2Ht*TDqda1]#VBAA2,U0a@XJkV+%<1LLNl(8DTDAV
%-m[F^Q])nq*[8A<6`(0Q(V[j32*eoD;P3:^PT6!A<XDnYBQZiQ[Q7e_30"eYo8\[UTq*dZj.&N2\=[eP#a=U2J7W3^mKhIR>rQH>
%d6r\YiJ"LE:F'_g*!prI6cTA[$'I8oSe`]L,UbEUCC>j2j'irHZVL^D:eDZ[#M4UF)\=,hGJ4n0LU#3[#I:+<%;C;,](!_@;TMo&
%Wr&@r`BM:)0Q'PG5+7fNj(AY'aB?;t!sQRSA:q$C5mZOue.3C'ct$JB:_ZC8+K7lfP)]!HjcP(GB2t=U!A[Ltj+)2iH5=jVF@n"b
%W.EA?YXHebOb]Zlj"2r^(ZRG&#<Bk`W;pWt^.en?*B;uMW$ofN25q9l]M%7HfYj(`/RqD*6Z/&rmHC+6a+CG_IH`)F!>[mr0$-Vf
%&MZZVArKB6%ZbXb#dH+Ii)6Af%_N\'H%;*Q9O%oVI#5IKUU!0qhOu?nUqcuN[)aQT=IR)T)2HWs7F"2/\gSn=%#VQ&FHOH&*30]!
%p?1+F[NQ=fN6AItn8fHJ(,dG"m8Hsl5`QLG3[OL%\OZ$['?%9a/ML%WK<nsofVJ:NbHt-K(^ZNGDPeF%K2t#Y*gk/6cIt8Ell\$7
%mP6M*a6$bo"dg"5"%ufpE!cfu'H"k=);;iu6O"fiR0O&Y&eoN,bg1Kh*!&?W0S#8kXU/H>@^'#Gof/?(j`[(`%_9gV33I%d.$9L"
%@DXl=M1rAl"IRi+]#<e[kYdo(=WA%ig-ksWT/e4=Dm<T*f`@FkNi^\d%1=3p--(O8&]NB..*7,m4c[9SLZE)G]FrkZ-=SE<ZBLNS
%5nM[?7c.;dD+R;q%Y?*nOVG%=V>6qLOQDR#Cu@o5YbV:K_PO);hU"-?0P)fCN=f3K7&'((gCK:ZT*rRGk5?P+Q"q95"<'_V&405n
%&%&G-9P6*d==U[":nudJnOQN>JpQr(kq60BDoL_.(K\HZ#Gm\>dgSUV"Q#n#SV*=EAK4-12E/Xa/4g0_I8@s6I#Qqe-9h8CK)JB$
%7?RtQ:h0f>PVY]E`Q/>irc[4)BI61ABPl0XkcM*O$bpFBC((M]8cBg!-+:%"k[/9['_@'D1SN.tE>cee-ps%@5i)P'>/;^IL+#Ne
%?&B;iSNsQ6^:n6S*ZX6]h&tCMnWTYN%#-0nfbbKV#oP)r*]!O`fGg.t3DPoFBLj@`<f@,pOaV)?nYpA8nMBi?QjZbj;#hF5?"R'I
%@p(:'?.k:D:f_f\dSLe9;Ok4kW#kc1Q>PspN+N1qCn]#XQ3XKhZ>5",-&(n@5DT_V5XPZg2aG"p3bC9q(YTC9FmsH/7Y9"jZN\_V
%-)2L+VTBs^Ma1OTVD+8O4A&on#(+F]+qQa%"L;J8@:TU:)Ol.rb&.h_;qTdd=:k5hF!K"2@2KDV@=PKtd-2C"aOA*>0W@hN;-HPT
%[HHi%WUhi\"*4SPZ%IcV:sa[">m!tA/jOJ[lG0AdJVn">H4VgM,eLuG%^?;mWZI$De;Lg?.WF!&5tm.'[##'5.&]rlU/f)6K-8f2
%<ps'[R0`JE)V!j7@]]t`b$:_XnmO[43l!#9MeY82(kR[L4SH\.l':&N7m@_SXqPoT"Sp[E+c'P-'Vr:a:,^QCJo$Kb(Pg1B!5sJU
%r,1m3Q><2m:T5^7ZT.Y5#>TH-V2U))kV0#H@OcgBljeaG(SIEZ,rYtHi9ZXC]F5TT3Jnh]5Ob3ueRV=:[rP2.dh:*9,;TM%PG=u\
%U1aW>CRC[@5TBjB4Ig>p\I^/(R&NT1+$,n.%>BT'4)@K?KI7C!d4Di!c\k&SQ*shK+(,t``Qkf,!hj<$\EIF2B+E*HP^K?jlNbk$
%$iuj2EPaVa0F6q77"!8M:'F[_`KGqIPoM_*Eu;kU68X#5BF($92VFhG<>]r,^,qS<Eu<%G3]Ie>GSrd_94#ln>%F#tIQ1hs"U](J
%;^@GidP`6=it6q[3eNY/;eRt50)Gq4IOX+qb\mU!Ft$1CFFp2`"G)OJa9s7LBn4X=P8IRNORe?K@A\c*<6>O3==Dd/^`sOlc<KhU
%5g'N>JKj&4%N+1p3216)RN-q54GX?>2JdjT"Ns1].V&]&Y;jU`>K-ge#Z=bp6UW)Lc8b!H72!b0To_$M!/[%a/V8B0*jc>(c\BP5
%@X&,.qLW.(%dKao,$a]';6HXAY),3\DSS6(9CbG[0$XpfWblO+JlicCO:d0hagh_:nt:8eYoVKa0M$tB3#*o>Q3"rga3$(EafD82
%5Dj!qhdG(h<$I\Gd]?N\S^>G@!bl[Ommkc"e5C=[p;#B\*0(Us#Sj:>PM#'c&['ei:a/<d6"[oV.HCjW8fh$#)>g*?_=/oipjeEW
%-B8llCDTpX)RCc\N24TNA13ELAD^fa%iUX2[D`2(#ZFY[hQkKInV4r=%.g<HH,PCB"$>6Ko2$\QmJejCad$%;rfSCMDcO*V3nK-N
%`cB#;cr<o'+,^2*2ELpF6nT@U8JT)i$DnsP]Hq8C2p:/^+k`8?1Z17uZ^"M)i)4lXg]o#<+&rbJKoJ)*aYbJtm:2h@a)F3h\-*NP
%@6l,AX%5u"oqi?go"-`a!_AL$<Un-_6*_b_"2/7&UGTQ9i]sc8j!2rbZpfB6W5:#G>_Xr/;WJrL.e1;>2jmMUj)?8.0j$(2^R5`'
%(0:dP>TbHt^Rk!-<76=D#Th\$(_1^`,TNML9>O(kCajDM!QcJ9!T\7B(kF)/X=8g<Hs]S)U48*PMk[/JUi7s_6OJ`t0H2IW;kR%:
%&B)IIS@BGSkcdn&(o!lG7#AHZUj%bS.W#5+R/ca$(n=,d&=(%ODhL5Fkp$"t_'K/,>oF`@^8DP7W5Y$KTG<ETJfog]&=DYkM^/o"
%@[';i@,'^b2?iA#WlZ;@Jh3B5eJQW,;2J!q6\L>aJgZdW8)3n`NWk1(M;`m.qf,<JkHH@;^QOHl"c6r*GVFp_#aM6p3<-jj,#non
%@7igb$N`_A'KrfsKc)f_g/R*(&_;W0X\%B:NM/"$R&3ifM_M<qk/Sp#M$:q#:g#5$Kh#!+!)r\/:"#bT*L6dGej>`8`mXo@6AM=O
%9UepNdl7&!VITcDS&5o6#RcD/4XUMq+NZ]ET0Sf9$7)>2j-07**d3@tYa/2m2</*_%IF6%^Sn/2.,+k^BPd__@8.PmPt7pK@R.ID
%4Dnn$E8*t%d>fZ5V$_)1Vn@qrH!EA,%"^rmWEu/EP@>JuqrMPmM<Q2k(W&OkOU58*3&8Q0MJH9>Vb:,OONiQ@YpX83Oe4T`MEu_'
%e4'YQlk`KI)C.6Fmj)POaCB@0L1(FH,0NT"IYO[@)TIfZX?.8FU\J:pGCY]0N=M1H8L7!Z;\#!5f>\pu0Gp31#C=IXV_SV6kIPY4
%mYX<Y$)3t7.,I8)cDJej<`2S-.\MbJ_Qn2@W.T&kYW0nhEa,^(-T-]7GN*\6Nl)/SLQ2iU$rbM=iWsUL(=u/?kiQ>Ibo%+6r[kQE
%*1t)7"9Q.&KpiA0Pc5!5'#c>M9+"T0U-tZe85)nrKc=.>kak]c!'Fu@Wfg9/Pc^cl#?9MFnRa7d+db%(Yc-kQD+Y!OHGMSJZ33ZR
%Un[]uNC=27)$P*R!RAfek*D%gkd3c*#^'fRUHRl""h)ieE1>\W3?gq@Jl/F+`p@ZY6t7r7qU-&jPZ.dE<VsYoIZXa^7ntH6?_='J
%^uNj%O8HYpR!^JURd(P6:jU7lb*k'Y5\Y8g[O`Q*ieE?A0Q?Cd?h5Duar/m00V%DI=q_kr7P/,<*TLBbK"r=K).mY_2hPL:.#)+>
%Y%-VA1F)t[c%%?ZR<;FC4)6!V_IX#H\O7EF519_O\BL"AVG[_s@3Ck5"RqNf4=`_:!!op8&=-]n1eJjtU,`fNk6^p'57e#_7An5T
%0L\a4T]%C0k;/BU6\tOiIStk'>*@,AL.RuG2"_Rdj+n>bK&&lu6OP+C*(@,AZp[#G\_pjT_73U)MLa'Ba;Q#<Z4&C<2@OCAMdi+\
%j$O4&j4l9'HrJmXp'V^V5!rI2TU=hn6Z`rm2*)X+MT9nE9%FJ(%\^8/=//A>;C3C:o._(MA1fRGX%a%ckDMTb$Ego"$927YQoc)l
%>?EFJ]-OAQJh,qF::BZPR%u'/VD.W+3S`,]J-*U'_=BS1ife#m7jb;[WIe&g9M7R5Jqbj!'#67dJmaP`&,Pn7TeT4c:#M:t#[g2$
%4/PPEdt%cr[0*"o$RZ4[;9HrdbM%>![ntZ^_qic''U0$KPr,)C1$+h%8YAk#E5pph[)2o(JB?`&$jn\k):PN:KDK8GJ6^c\`B[BQ
%VCX2Y1gLHO."%J@6EKs,G\@Lk+cksk*?9RGVWR(N*W%%QC?TZ0I4p%S@R7D40TlNrDfGHXJLM6'<iFV-QAuec-SVN+"OlT\Jm"%W
%/Dt+O\ja'l;9L(pN(94*eIgGrB'I#FAjS\PL-c`2jr!67)StUb+\QT\,@ctnBBbI`2?l*2J\(q<,b!\EUa&HW/JEM$!`/K'K60ii
%T]js308IN&:2m(`W[O*/KKe.<''%+sELZ7a:qH.94t87.lqff(<0Bto-J8WC"#C?;!j8E@7#'d8!IBiY5Y$H&0]V2BZb;0;;Sj7X
%+RYJ&4N0uI[-`T!-8!hK*eLR=$qE<W)[S3U9Mk"KfduNhMUH08cf:H(Op/L*P&'Lh)g?ZR!HZt*4B[hfBL\E"W'X0$Xs-LF6)NoZ
%lZ]9Y'k,,WjfFLK'8]C4kZ%A*P"+C"0`[nelgqY$'[Cgo$#A1(E!f*gQ&?]MkS"@QeRk2e0I4J^O7Wu)IR.V1Yi_Z*VVUtD!(/B3
%SCBIZ7YK]`/L^'N;k"m\jbBPJOu7k48I>LYc^"p<+S_`S7O:#kKY]/1ij7cec@TK([pV#F,sc#N9%fdEejK(').@lrFACj>fQFQ(
%VIIPbkX_^d@%;<PS5]j8()54cYY29Y`g.kj*7T:#O.>1L<"E]r?uSDs@T7'9PaT*Z>WIXI5+MkP8WpruYl7`5k3aao,P3'\n$t`o
%?3^Zj;MIXo*/eUFi$]3Rr(ph:bp>tMQ/hrr@k(t0g.'g_ZR6?TpX5R8V'8KiLG0!4CKO&:U)QBh&CW>IQGImT8[@=V#E)@j>+@sT
%1+,+hM&bPR/k'6$_A&U$O[EFYl7LF>F:+-C$)hc6*-k)@(*CHa6Vke@*2;A##u,\?Aou9fQ8j8QI-tb`V52RKr+p?-"XD!p3Jo9M
%r"CAe>U(E%ne'30KX/O/<^WfQ:)A%BnKJJYS7`&&"&Z#o9\)pY@$M?ploXa":lD5E0kWZp-/>.S,<5[U`L8E_?h87u;isfdLTM5F
%abE'P*S<7eYN,%eg-X"EC30*j:_JKpW,g;'dr^/V<@0oi@I9M%!ZO>"9.9JQB3e66(P,CY"G9T1%sQC.84X$4AGU7DV)BHM7sHaT
%7is5C=ZTf]l$sR=R8D0:9$O?ncm(+X6b2EqK9?Pc+j^9C<sZ*P'=`">b5iW=,(l9IQ*r+G$kHiHTGhl/@%<W`blWr&;GIq4n"-3c
%Y(4?`ehWUKU50/O1kdP>WtII8UTkSq490o)/[#8'LhT207k4&a)2S\o92O'*MV%(M5+U>9Qd;or[Lo_D+3\j1QR<G;#]32E3I?`>
%f+mGd.liR)dk9%.7?M#!(GKg']\m`[PtD[J/.%P7<lbQ09-,P7j7:T$0.8V(mD<`W*<kp6`MS5cP8NeUUg;>.[5mB(jmZeR83AYF
%Rj3LpQ2P3seI&%FGfkZ5;lFIlX[K)`fN1AV<q0Mn'^d61gN/"RP8#)_I"33#5#%T"QD?k;]G/BdZ/A=\K`j(1Dr<%Sm$^h+Zc?CR
%?n]\\V2+7Ldr@kfX-e3#$pdhkK"NJ^p_XW!pF7;^\RYqRbfFs[E//#Q*u&BtSO)FU3(-@cP9'EE_RKVQ&<@H!:mQb<jgI)?)hS-]
%nOue\o<D.$jEY"niNjJb%:k(,3E8?Wc7./\0G=W.BE1a=X)CBKY-HEE*?B5O[;4PCiK2M:,Zck0%&\W3Kd>Xg9K7)b"?s_CH9@2(
%7qOm.L'NWL4uS+M'r;gf.&CkGBSN6lg5o+l.B7\Ob(@upVdH7gKJMHKIS=e20fXiSQn$\0;<\=NDY^YPR,\Y%TO[_nTG)O1k:$K7
%VSd8bH/)A_\E7I"n@3M[DBZ($2%t[`.<LKGqNt!*9LC7`8Q8*/Lgf&aU+/mlSG)&c6&s,W]0(:3gk00XQ8PU1F%KVHU<2Au#<([g
%+W_MFHnQ>,plmDJ#\kk=2bBmQAar?/G'Hk5;@,#r=(o"jl"`?W,R-bu/NO9@aTCNn[D::QG$-(&6rTL-.RYX02=6Q`j-_];Ad$Bs
%#a,grJ*=88<)!%;AFUYf+j+=o8]`tpZVEB_`18<+cn`M?N$j5;_K5e2i?Y97bTK1iT+?\ia@)"ah0O7[>+4]8N=C,SgVbuEGUOI`
%<#:P<me[b=.]2i:3c%[AZbd/,31/r=V=$mpLbk*lEmRQYS4^V<FNME1/5SGfjRWp\ErsB>[=C(`9-$^PHX(OT#K;T<h,/cb@.TdS
%b'dEU$YG&+6'BGK,/kWlc)?)DX&YEFCi+G5:Y>"Y`]41P_r=3QQkRB>/mD%L*6hKnT$)CM5\H0d[*@8.-]%.nb2guUgRS/]g-nb*
%;mg>$rUe==&>1opf6-<h[)7YfpqR-c`C_VLoh<rs?.,"EZ5."^,un]A80rUYnc;YjqfG_rY5#6GD$9"X$+,&Ikn#14LnGpL"dq%o
%Y*Pq6QkJO^!QpP2[Pj/Ajq8Yg3C3QT*<]RaalZd\>\HCC&_NKrpCgu:"]0k4IUM<tr<c.9J'PNJFPeA:l#$tYJ2s\P]to7i):YfC
%P`BlBbVL@f`]h7DQI*d7#F4=abt#f\%$V-mZoPtJ+?Cd!2stWuS+>#<=_L-[!B)q$C0B[O)"rnJ*J^=.^+Fo=L7fBnKjgCceLAY7
%VerLXj1A*7.Rg33Se(oT-rNAYT>Weo_P^sQ$%bldT&s6l#f`/7m[1mP5@AIOjD\BF"<hWhLP6/6DOCf^.q*,/F_Q%NXQ^,\+i%Ot
%;mr>3FNG,(aJCj(?juaf-,1Hgi%_/Gq>aK!'ds3+Y7A@XM@Rr8g87M)85WK6(-fk`Hf=?l=:7EZb>'>qVIf9p[1DuC&eG*[CnQ$9
%(a6+(6O7p-6ZS'T;+?uk9>38*_t"[u/h%hDnj?p=kR,p@Z8%/qmC5I,_$C<",,g1@;Hb0l(blVR*6B=-#")jE%/glLRaB&DEC/>K
%1T2U:F.\<.8<nR2#3OofOP2!'(6hDN_[qX,gsL5beM3,ZE+?p\]0S\#V6eLeO[?>ANb,sXUVur1W0,H3Tehe5$M;$P[459P^t#rB
%pQ3__!%\u>_l#%MSktM($j?ntbXM%+QeT':k(4VkHCi$PGVDl9I8c+q%EZ`dkq3/rKOsbK:NQ&a(L/kMM,PF^G-D!h;[^T.f]pN"
%A\'ZeBliGRh5Z-g0:j\7_UB&ub<QjtW$#)8eVt=tN/nJo8@qhlJTXDT?/up1"j\T<-4;IJ5u3dR,)FGln;)MoL0M"nJin.QMap$r
%X@59Eg)7RDb;CFV3`qGF&+d9k#<H*9i`_:M_8kig[dec[W-FPJZ3-CJ\&TpbU]F8Z'DGVuiE4*,Fbiu\]X9XmW2=pZ/1f6WNbd&]
%"m'^N]&G[kDC><K88lp6N,BhcR*#()AMo:]9"GR()DOT,9JC8NZL[bRn=XbfL$OI=BCfheZt?+L,.g$S7Hp4UjJYSl0`bK_KmnSi
%b,6gHE\&Hq88BA>3j*as;eHkG#DI37iFA#2-Rj*=(M6btBM,Ndb%.2ZTY)<,IdI)q[5V0Q>Z\?:oeq0sOCD2ra"S%p<j,\-V/JB5
%qYuR53/EAMh+G0GSt51=#.[;:E4E*F5'$g;-EsmXc@^P"b1+s>G2,uOm>k@A:YDG?:P08>cNEL+J'U^9pC#U>qEOs,Gn@/T@RKVR
%[8k':M:ttn!s'HB0fbp6B&UYuqE?_7WBA%Qee2]JnTm?h/PI'Nb)2@IiSH4sKA2I*R`R=aY-\'Y3Q$4MJZh)j]S3@t5DZ%[s3PZr
%[1%")U%7_8pdLd7<[;=&.]BIc0)TK+[a`)>aT1/=eD*]%q;JXNgMqF9S-`#[7S$.U_b0hT0aHp2]Jd$Uk!CD5#7ZtB`[JR^SLsSt
%W(oV-\0(qdFXb.=i6rT^kc+>@3I6i-jK!Gk:lFifM\SJ44+D^k1-mI)#=?BmP.ehG=Fht'BHTGF!9/C#73Ykj8qSrmK:n,/W<#1R
%B)i'ij\S]["j&WX_7hFVa./poeW`Jo3/S+q0;7H(ih9ka@CjY=B;kX=()Hfjp1/PM']nS\30><r=q`]4$!%h/&PXJ)fP"Zd3(9o@
%h;S%gXe8!j.U=Tj82-h(cq;_&@Y3L_Uo@E_qC(Ednp?$O-'QH2)BVEp_Ik=K8F"$OIC-d>F5l*[aic/i,%>0e_!7RR!K(EYo@tk6
%l`6S_S+%,NFrr,7(.1u">6"*\@jK!<&DWG.4%'h=bu>%o7U"9#B?@S-BOX):PL7D2O;`(s<DkE2nHj5l^La+$[b6cP8V2MFaAN%)
%$:;WF$0oc,YS5c8W:M0S]$;SAP9l&4j<UE$i_l]Z'0=\A[:ein#rt\70(3O0f4RkA4HOuP(2<jabolKmi0P2]'Wgn.Z6`-I#ZFX/
%GmYl[-o%Y3QV<rB.8!%*>tLJ(dIQ4O$h7$T)kb9nZ-M[3e5CF;6`1"%J/!g^+T=ogKq['c>S@`O8Q;(gZ;5!]On*`qh]fdiXNCbA
%oe@%8;@k:CGn,M5"%&8QH(R/58jO"4c&C(kW";O9@N1kr&#fd*RCb9_`0KN8[Obc56kh(Sb]g<\O=k@IaBoG1JpQQqnmiT^acfsC
%INEq7ecP5UU+>mPq<+Kb_orZRgoQEaiBBYm'l+N4k_,lA8e6TslJ-:%!&/^cP_2<%W"h/[lj.g=&NP.YA7hj=ct5&m^S;'+Gmr\\
%(a?2n8q2MD/06C2c);5Kp[k)612S\n@Y1CpJL4e32rj6.![g<Q`T(aN?Vm7enkn5s<M31LU6Pl83S)q-P>UKQ1pnVMf*O^9nuqhq
%,H)P`>Y5[!j#,RSUQg!tP#kh+,K8XF)+9Y,pbLipH[W8A8/VR[==fmqe<E6e,nJ9MeJo4e%)mloJK$Ac#8)_B>a_siQf^%sf@2[r
%I^>>]DGpcO@Y:*SYk?#-Vp,c6@:alqoNl0Y<iIjqR&DX!9HrPT3#$.12e,J/U2*NTW>(l`QHV,jl=u/S)5MPRXal]X[q&Ff=f#"u
%Q`#!s_K8XH!q6oR<rH/%+[nLOY]`<"6cT>+-^8@EP3gs]-&8A:Zj7Y]N=WW.RL[lk6cdQ8<lrU9Q[gGn7NS?K<2/e!6`dk:+jn1f
%h'g0U24Ht@#Ha`h=jEkeSh=mg[_Q!FjRoeSb#rgj.]J0$d%gps$T96D?k<oL5qcU_-l]rt&!MFPU&K2k4&j6D-'hIk'p!W$LhPRR
%r(GbF/_^55>5m5iOd-?Db3Rf651]qX#<];H[5`0D:0'+Q()dj/5U3S`neFRqU_RBu9D>RpR;V)J1A.fkZmNmmc^V34BVAf\-eJi$
%I,`TEK3;:u<*r59a)S^]V6Q%b.&1QNJ9<XC.;Go;cFS3&Cpbtc"8OjB=Ygo]#[;FjZH+8,bbJr?WZdNpXopug#Y&Cc$Hp;pinei&
%ML*4L4Nf8JGOq!/'>OPCUqDEdVU-;^ZIul`m!/uj(OXJQ)Ej>.2;Lg43GDN%Sg:.MVU2E"@es9X*`5;r&QYO+"Oc)IjTku!+<56&
%*iOnm%4/j;0T[p!/d-$Jjs5pa*pW,E:LRL`q01/Q6\L3bNl)fW8[tatak#<.T0h(5`-,MB/Ns>g;aejTk7L]"XYsbUX@G"r*4^08
%Wg*Z_f\XaU0u4G6K;piWpsN9?ZF\Oe>!4N$2`>_S_7!TD(\j)s4sEJ=YkiZmYB.:`iK1\`UP^5Z<gncAR.fG@FN%8dYJAecC%)[C
%"?Gsu<,['q=3:SYL.4lklO[*J(*DW0?Z%iD,0<V(2+<<`.VCE`U61sTkjX$(>Y7OQL=_JY=W>T=FbP2N_P4CP1o]M+m0ga9?eKp'
%Q-qsMHHLQ".8H\[ohC>jDka95=>V$b)QGDGF]N=+V\LSQD^<7U(<jVe%smIlH"4g^o&^XOkLkcLQAub:`2$Uh`W4A]%a\>+7H-c]
%F<n(PWRQi@d_csTI5ECe$!TbcXet`:55>HWku1JtP!)8_/IJt\,M+L-,uQEXi]WY;K7(AVoK[.o\2s;%d-^?EYXtI2;\$O^DR!=d
%RaTI'l`3"JP^T^4f!1+OU$%Bj&%[TrMI34eU>S][JNAe?RI"Aa>Z@gno'6FJ<A15M+f`QU(l57\*+4;Y[^kC.6N&l6<^m>k#*hrV
%jOm7c9p,_fRMumqFE(!2&10bkkZ!![8kWg*W$Dq_9FjYSBt+3d.'S?XS9AC/2Sjl8OI*;FEadoTRK8'[UKoWtgG4$#EVD@Q88Z>+
%"L2BFc]e[Gn3k!Dc]t[=l;Qb8(3c6trGJ`mduTN(=8Rd<9NeR#>PFKd9;dY$">unP>T4`m'52#r-aJI65(Tu@k*P)_/aX#n^SOo]
%=^E=@/_WM%$U^/r!Bd,F%0=WpkkVj&]Zljk;q)Y$DMhtGf&)d$,T\hoLI+^jooJ:3C-?ZdcYL/V\#cW2NX>q,Lm>CG,#*'Zk!4tM
%pN;%H"ns0K$LY0/AgboY*JE32ZR7$U#k`4='d>(mEh8>TZF\s:EE'&262=!)XKoVeHs<$\m?,U;I!I.5-(/)n_Et858fK`ir(,St
%%-&+IYL#\].bo),SBY-EiXAh1Xhuj"NRe1q3Xi9)-?g3@F'cD"a1ndU>PXokomc?ns6[T$q;;4qIi,'k6%/6IUAS4p*MSR=F1,+;
%h8#%GZ5-Qp"AD0X'HMV)J:U7sG$>EM%JF!t3Bb1N_HUrc$dKrlS0'bP#<oF8WW,k16n3g<.]p594C97p,#LIQ\#%(NZ6H-EF$C;?
%_/-rpR\.aoCT+L7I+!Lb&Xg02=Ot,*SqdS1HH;Uq:(`tj#c5>9`u>Ai^@mKp[P2^E/GV(nCR]o0qfJ@PQH3(VdV+fboa`*u*4`Pa
%5q2@Z@56sCN>BfM,q*Yn."\u#7.#&[R40njQqI5ea0ros]#B8B4Y%1E2hCVdo_Q&P$>DhXEL%QW]!YFJGTRAmIuS3D<QjP<=B-pq
%bH5FB_i"g^dj$.RppUn4F>Hi.6D;i0,rJZRa#^f,\48%4nBO?8Gn+T:A[$g/b6+<K:@<56Ru!3@9>JtVcd%<HPh7E@U?Q>'eHZ\c
%EH_'>/5%n7R^gSd\;4G;1t0;H]T!>;m^&81AR2`V#/^Z1.=)g)Cd,T%1EgmF++`Hqbt+M-o%?I!Yp*Bh`$BmS9"e]_"ZDh_\O(gu
%rPBEe720H%;<pEaZ<%MSbG,Z,X@O'1p1-M/b!%[.ZOAADjPg_DJh!j)m"lFt:tj3kR0Z`I$WN(%!6"$!b"WJu7?uB8dF07ZST,*X
%[)L;%lCh(,bO"tcB.)LV!-$I*"o4]?nb]:I(.HHFBbcCu<IR-g`5bOJ[3Sq*NIqAiZe*r!#nTHI6,<q9nLg%oU\#h3&7)+:[U%6&
%A^,chhZ>A9TYWp>q<JNk+QD3FGt,^^5TP$[2([i4#uh+gJf6%q;&(@r;4RiB3sURu;P+(keBh9M5#Z&.HO3bb\.Z1j]&D=qkL:YJ
%QPsIN7+`n4!g.7'ct]b55\p9Jq"GoQ-Fie/rn9j-(JE`p4TVXhocK[n#paf#HQ<kNKM._S5V*$[WDt-DW(q_'jkg;%20Q5E"gXH/
%nI2C`JLOM/fd_Rrp/"nj<rfrq.tZt#T#Z@r0HT2uf#U<o+uNs1O1bRU==fl3W&PM?0Oe%N2P#U(@hKROU"Se'fA*aJc>JAFmMX#9
%31H9NgeDaE?>I@O]PG;*QiB/\+`Z+s)8#p/,nY&[/"O8Y:/U&H/An<?Ua:JF/+WFUNYbMN0p/R0CeU8u>]VBJA2u#)\6<Ul8(I^i
%24'!]3%dlq'Uf%,K5a5);Ge&D26Lt9TlSB^68S"ge",OWW?eaAJ8QJnT`Cpg2Zo=T:8\Z$Qq-YP6ii*Kq/!'5*"%M)m'p4538[M%
%@r-mi%H0q+"<C1hTRSe^05c;[o0,Ak*p(8<SrXBCBRn[++kP($9@5i(Tk-\cgZ5TWDRbPiKu#%9a=nV0l^aU.XbCX\'t3XN6q+Qb
%X#FX)+VYK'Wj)45X91#a46e%!o:@B)-?['M1p#4)B,G#eb-.M;2='KETjG,(TS+Me#eJgqL2_cK6e,lT?pDt1I9q4)#g9lUEsLgP
%3=@j-NJJVLNG8SDjX7*q2l\rr_9iC$BL.4r0J!bQGdA;3W;+e]NRDC<?p31\[ELX47gbCJFNtMX"t0k0hO7V%o[PB7%R5393D)/V
%/YOgO8L!7,k&.^3!XYZ?g&n2!P''BiARQ&S@&B.B1g7A*R1Sr/+=?VN4JqHP:E'DQ:tS+f(6PD!RWHULY_cD9neNAQYWkf3kY*OY
%L9K]6`-JZ1-"cRgSkXnPd=hR]:'X'l@U.@HE#J3/W\q_(A_fmb/JCGDB@[/*<<B"e>V*FeS[&MZ,rgIVn0b1CIO&l&&3CXcHbnFA
%Tud$uDD>8&L(m&c6lA&cNCbBp7Va-gALpD2[-2=aK@9,Qo:ZT@R#.F8Ubjgt!VD`46[37jg&=>C\e,M.d`6`NRFa:!h0h:SNJK)O
%[1@`^O>Ejl##PgQ<dFs"D;4"o`9)ju4B$-E*3Fn6F&]KEY-AI7f(Klb'6Q-'m49SQ]D4l4V5CC=:;=NM*e:\3X4rZm#Fh",3o#mf
%k6?b]:XPN;%jJ<YX>qWLP=qo<b20HE<40J:l-Y\6Jh'3>[E?_r/LQ*jVY%'g43*3!b#hO./%^.djQ)m0Tk9P!edG+"aZ0tik)/>V
%dp#AO)l*JI,5JK/KR@Nh63m!WEfFs*k=6.JYFbZI&'[QT&16j8IsH9OE>FPKS7#?[C^B[p0.u\=EXlU4G%bZQ.d4pO#K<&V,We:h
%H=ooq0PU>?%a>YP[2p;;?FXa'fV-SepFO;U85].1ZE#7@SK<ctXc\A!Z:P!-m^,^ACMP]]*S.O![q9P!!l#&/^^^Sqd)uctJj\UE
%I@Ro$dgEIdS-!4h\4J8pV#Yu\FfJ;n8g.]$]jR<"D.lib#lp*D_ei;Ce12kb\/]dWa&W?W-hC=f+_RW'5hLcpbkn[fq#LGp/e%@V
%&F6NpN<k8p^5"$SD/\Smo]pQi2g@RVKV"f_^[CQg-6S$H`B^DU[>^=4"-d6r@!J\!;e_M[)`1S6IclAVEG<Ff3(r\h*dPad9qaic
%E+pq/MTIT8atDXkFnuI$Qt[F_N^4t_.+9_=e)DI=CP#(9!^`tu17_tuLGbJ\b[b0KBIO/+Uh-2HV%@b='!_aN?\_5+*"]KN\Yl&r
%K,)UjHKrn^`F%I]fj__C,ifhI[m[hqm]QZjPti%uc*Tap,VE>mbAF@"ef\"uWgZP(;V1'TQK6=&BA<+]ND!D46!AJ5ZZPQ0NS"MH
%5-k-:I!W4>!kO!>0:akL'Y*k+-ktpCZ9jV00Z87%#XJ<PW-JjiAfe8?A+^Ea^?\Ne$aK+>!d*C#,p"LE>s?De:"IMpmG:$ec/p+?
%Y!"G1#>;`ESt4jHAHRP[->I`;9Qj:'Y2rqW-n`)%=-E;GF(kPI&d2T[bPg\/a.'&ub\?*6bBm\m*)a<N$G&a6H:;/d`eg_OamCg;
%j9J6-,QD5p4^b;9V:08KP"W-!dbg@i%TXO;r)3Dn$VW6+j#^1#OkT=G'F:l,&,1;LObgC<7#%BWHM&Z/;WFQM37"Jf(:In."jlR&
%g?HSh_moIdZD#3e4=3^;oFcJg9qLlWKPQUTI)gOBgBC_6nup`8OBW)=jB&cj[#3/\UiVoM:4s8f%:&:3$iGe8,20X_`17U`r`!uu
%PG*Op<HLEOIe-)UksD8-6Zr,6FbDec'320qNbE-Q3'^_J*LLSp)QeJh>/FaDb?";u\5EjNeW;=IVjR0pPFepW%+O-DXY.dB.Je_f
%#14dAgW%-RKclu>QL,=0/]@ba1(+iZI10Q1$kXm9[Rsd[9;P-n([PAA>6A^nMG]VBM-r1JdofM^-B0j:<A=U`jDe/O..M^$]MJUf
%O9hXYRkD-aASmAh#CrsZY\IJc?Qo7kX/=H`GfcZ'5Z\5s*k<pkLb2DMBDNRIBr.20N[B3hU>i`jRe;%unU]\?6A&)O_j2p*DmA4F
%UX]!&86HU=Ol6j+L^_OAJekAOqEX!K0`*2P`_IR%H.h&N/eaj(S]Ut>VDS/?St`*pifPj3CQWs\/L+$m='LgFM,Qf[4Gn-nlK(oJ
%LP!&n2=PiW`G\WnAB9[f+aMuUZ^3(]:2Vfb)'[J1Q4qoFdF;9%V+5#t(Ouq9ni!itM%TkKr;4RYnPh99(t)juDFi6ej7oG?/JK@"
%/4EA-F'9gLaA493#TE=#).Zj,_A=.*2@Jdt.jS%!O>W@?>.?X#[sD($[YI^Na\E`W3IpX4%B]Lo-n>TK+VTp\Lih6#=*+$sAo&JE
%?T'fa\7n7L03oV!b(&tG!prLM'S$?YUELuZ;I[N@'Bu=R`Fp%5H3XbB_gI3=M?fDYMNNB6]);DHD\b?6$$9oPP`lh.=]9f]XhP[S
%>++1^Dk&_eIq&[/A!-*qD*+hVM%JbR&Q)>/V@NEL/6n:YM"c5SoSt*2qWL2k2.'8G.m?jGV^$bX__m[YW5RRcW;U31R8$"2Pkp6I
%@?bJH5$nFhgT/DW6=`+5#k&U.2eS7&<r'QjPummcoY.'DXqP3s8'oO<K]iHl382)o*40M!b+W)u(3Z-f[Ol:&\DZF\:$EnK-;E@b
%9?8/[OQ=Zpj\ZaCS"8@/5O+E*.SEhpUd$=<dKgK(NLj]am@/6J!X/o#`/s(iJ5S3$9(_T2&DJrY0JOfq6j1%qMe-<'k6eH5FP\Hp
%b"O@9,abqnJYX*e+#.'fjckC\U>D$:*!QQ&oMjj;%A7kL4%Q]7DG[Wq8#/,6Ys%u'BW;sTgTqMFY/jbr^s+AX;ku3)OX5'^H0Ta9
%dB,f$f-lk-/D_YF7<:M"VA['(U1L7urRcQ//WajH=jl_**eJd:;(Xk,LU`W<EW`htFm.Gl3-Y6ZDXRMtA"Qh^GDl`(?#GhSMuBis
%1;]pHd3#C\.d]UA^@T,k8f@rF9f[g>8bISAf]d\$:i\M.;J-dh)?k-H'\rfT?9W>t,dfI&e&9XAFLa2^j&R;Hdnu1_NuS0a;Vkt"
%8l?gY;DT(uk+%Co'Q-%nDe+\Oq<R&K2VKb5kQ0&8mtbT(N)dF%abesLVZ6e*X?ZXKM+<U74`oDn'=XQL6,9]1Dq#\8ZY%I\F\uhM
%9Z>_./tW@O:&-X!ZD"u6KrqaqX]B&Q@=)j@0KiQq'>MTk:WC@OCuO1apT5^P74YbAI6%Y%CW3cZ8i'3Y:R-8,<gpf'mW]p@N3;#H
%k?6X76O?siAfH16'[mef&p:9,jVM_]RQ%AM8teGZ<cE@"8u<97QK`g^C6aEt"C/fb'9=hBV`>B&0GE@n3*ZkN@g*Mh3G['WWi"/=
%gn?e:9gkrr!/N7!qtfLVJ,SL!9Mg]\?(+cPl">V):GNH4TNl0H!+kYToj(b-6=%b7/?HZJrZi],,XUAl:nnH2[a%uqVt?fik\-&g
%&7Y7p=/_.1XFtn9@)9(\63)t5S)amOIGK+;D13qpe#3Af6]9Bb*]fZR&o-<ap0`l?oG$&P1Q+:o]M6M/!1bR"5QE1N:.;;u5TPO<
%=X'@%r[Y+77ee$Y$W,6?Tr^hDjBk,mX0,?4M@t/4Za"DS9.or(NQ(7BNLP5)f_^7nak=/Uhc\D423fQ5"4a;b7JoNAHFi4fkYL=E
%+VOsPkTi3'k!Q+U9n_/kkA1h\EpNtnqBnG.@+@U']f/*%Ma9'ER5/O6ZtL0s!>(@nD/j19)4R82@si>rPGtljr8P_;XshA)V"6+T
%m?gNj_7ldK&T\'PT]j\^@eMVK631kC2%bH6ZQnmBEn"[AZ;`4?IjAlh%";2paGF9_Q0kLArPHimR?a1\ZJ4&17?"[2dKN.GIUZ3B
%O52bNjMQ\BZ?_Tm7[RNs@]G`7;JjT#NK&O=r//nHm8EsobF@V"/$ZD(=0g.Y[/3/<At?24!`b`!["A+a'N,d95ReUQ<4b;(A/=k6
%.TKOOkFqaIgu7abZ=X4RU6_3W<-$L11T$SIV"E!DbcVL&Bl(i&b5q,aLYO@J#K$s<KbPFrbi[EWE:s*W@6a5"s8QF?*6J]!W2:$>
%?Pc,+'8m/hPUX8=>ikq@KS%6c+%75mZq8h6*U;g+<XNT#k[Ice,jGk9cX`'1R1rqFAq<6>aOJan/@TFXX.;tHh5Dc#aT+F`*IVpX
%r/t;HalQ6U#J04u6&]mp(0=*b]@Tq.J/ep!D5[OHmkh.TMYG<"%&K3^=W6LYK.Ttq0`modm]a9flTl==]#GZ'e6sL\K\[->ZE"HW
%-WS=*kt(]H9,Xme^JQofAC)kJ3AqW6s2b4q'Otr%CT,b1ATTE%8gcs=W)@-IeWFF05ujU6Sl:icP0BPq\m;%Y1itd%F\=q,GfTMe
%LuU'Iq[P]+9?;-UBh?bp2(N*5MWt`b[!YV^)e6np0Xr-@LA]?E'.[3.#h2YN>_cK<WFuF]O&=JG..F]^:Ll^,6>\4%6\cF2I1ua5
%C?W7@E.^PUG=h)/Bn@NL.CVf/=0?1Li7ln]L*PBWmMJ92Tqj3NM/.of(kGOl(E)So3W/UrOcCk)4653C8Z'82"LJk@oOJ%4NXp"!
%ke>ac97f)=P\5DbE_]HJ;J8Tq`'(!&M0_S]?.*AeKEkTe]aHj,ZP'2=]Cb:>\WF'^P.%bUj?eS:9b+2D,3(I/KfEIsaK7/,JL+Pn
%7XmQ>\9PG[^Lrfe*k-rqI0]NTDe0.OJGYiReFkN2pW+,+S3E7LQs">Lj'[S<b`&q?guf8T76-s50d,U&H,%nQ5cD9(P5>p9J=:_]
%91m;D?m$W0;/^9@(7)W`#hrcp,domGA^Uj?5R!SY<?Xdr^?9juPa4#ujFF'3_(FHK/]nJ9D-?8$!ROZe[2,89/?2/q!ujq5])cc4
%=Y<JA/LTVX#"S5F]o)UuPBA#u+(6Zd6i!L2!tL%33+$m+YIbdi1:M*I-/u[1d_b%slM&![>nBLg3GEQ]`b=#E#\J-^bAoQV0EX4e
%(*GEJ97SjbnPZ/$l*ZQpScF&Y+(G)Ke8C\!V#<Od[+4I;Ucc(h?C[^e-N5Rh5\:EtF0P-m(kf*S.[5jb,H#O;1041bq(KbtkO+n7
%r#=lj2'5uJC$r42;Z39&1ctd_#.Pk5\r5rC['h^XdaM%+I`ht_OQf&k-Kc,L*S&]<+(?Y,K;$Ka$/8[da5$:k;.t*/"Em-A4,DKY
%/.:46m;UYeOOg+?_&"OP0ZM(_0fheoicRa'%5%9+,VOrlXHq8-2>\bj"K[_U\'TgtHV7&t<s%Z$!h`!`$]tYd5\KPedK@m*+V[tP
%l&C\BQKfZIU'\6M/]8Os+52h::Hp%7/VLQ@4XWsAWj=2$9c!Xl9P0?]%L:CA:IHDc:fEH\-(^t\m*r]lDIGnhjWd2M6!Ak=SDGkY
%^`XS69"XV3RBeZEIrl6-oto*RJuXK(jef9FE+%,PV;a8"3+.Vt/Pb=E.go.8Br$>S3cI=#KN$SW8'+)a`=0CIhp[0CZ"49Z;VlsD
%GiVdoq5/QXFP3e"$f.buFur$l5U"f_k>\1]dE$2%0`e<,g_4@>U;ODo-[%LrCKp!+)DK0De`\P/ncJo,>U_7tY;5f2k2,I."CRdn
%-<hOic%oq+f5+ccRCH']MCk!sSd^B,QTUP6<4D9X6T+cCPV#M-3)lHRn20frA\("F0l3im>6LR9Ip"ACf)q!)QISY8*B3e/Tb;83
%KdJU?_'4k3_,&L;hG]66a?O9I;$s,>_?gMl;Mc!34^:d19npZ($8$OV]$R,bT+_8_a/U6(.32FAPOO.G71.4e;U8RZI4QdGFC<RD
%L6O%=P%=3Z&#b8hW)Bk0,uJ`M2F$aP7Nj')b?\W`5Z_ql?a(;Db`Q*SmAfml\!>^J*;a3<=i2+^bP@f*;4$.$Hc<AjZQX/No.94=
%A_*l[%Y8e5m5iOSU>uWP8(Hg/5e/e:6>F&XDYjY"8O4Z\14^X3XiH?mVS=`2XW!.;@]$s((57*d]tqk2'"ApJXm;Lg[0bdK_;][D
%W!r\)RKXQ'guR>J7TsVYgpbC!O2;/\;LAY`\;IG@>T=r6oS0ai7:ENYK!D"?^`^T^7G)h0:-1%^,YDAh`kofcqkURHUVb;p4.FKa
%rinW!M\I?DEfKYV*?+8IGU@JfKP&ojC15e@YU3p@Cs88&+UXNmG&</5%>q3MlU,eHdS-kqihPY-lr]Wh]uH)\*eB\uC6nd"WRWe]
%N.:pp*MID14Va382I2iNFkNVXK[&%`J,\Qs>eMUZ\8o'<r6Xgq"Q`hUTHcg/-<5Da'D&1H%%7:JGoqbHHDU@3]j9#1$(Dp=C!^!t
%Mt0$7]dHF<J-Ls("s#B!4Jmj\cYIaqqA<Io.059?mQn)l"2th'f]dE!M20:q%M'S%FMKig%!GiF<?k48Hu/k[jpnb-U6;\X(k(#9
%G%OJ2(/^$QJ3Ij!ZR:X99t2MaRtd\194A#UV-<Mknr/G_3ga40T!.UqX3SAq!]1/Z[l.YBIU.0chPHr!8d'7=+a8`GUYCM'Yc'D2
%Q2*kHl]lWEf2,%iAkPj%4Jg/CQna_P=dRnE^Yh5aSB&a.Q8.o8nFY`WLVT1sGfq2$*EELl;"TjK02fP'T"YeP7AnVrUn>,.:I*RQ
%/@>bg;->t98>6Z7dT5TlC$GD4q+Vd(bY(C38,]Z]MD[B!-Tf7okC=RKVlKAl'iGV,T.09\Z(*%4.0m0DIB];lmC%HaNZK>MJ3p6J
%FFcW@3+NrD%:HXlS7e0BM*>.)UkdD(WeF>u9>QZs_h95&ls*/7P/;>B!(nY(p*aiM!%\SiNQP7R"UN&rZn&T`e3Hbc;rBQb"p\<4
%V<:4u'YF9MJ+mZGU*[JNZ/uVX6?ndX)@'WufYg.LO9n9YNbNKRm"![rTXp;[rD_d?Hc&B,,a+#>J*dfTa)5#7?jo\+D%IZ78&@Gr
%(<$*#H6];Ff20&i%Y_ADs8(4SX(7/7-)!/*%h#^2rc&3B%aa)&r/C.U\jI*7iOu_AWot5?f?PG%8d?RTG0'dFZLRnCj*e^$D.N6!
%W:0B1<IpFD&ZHDn@u7)%N8m$g;W`?Tpk75gAV?kS:.MV+m1(+b#Xgq:&i7+F3RI.ld\&tX1c:GaKOVg2UV9Kq#UYfo\a`-([Q(sC
%mT]3Af&S$`pZADL=1&@4.[>U`#8`'T/^Y+199O3,C>8<CBnrVr^NKu#9Hj#foWh%>+Mo?A)D\VZ3[6:s:s9'!TW!0r/eIY:6J6.6
%m#GURJ!SbDlOnI5l>5:+3bfA2R1Q1R#Ye.7"[ppV2l@D&CVXg`Eu.KAn8<81et!0uLQZ^@$Yh$Z7@'kHhe2KgZ3V^b9R]NdB$_-Z
%/0f.TNJb_<Z3YuLVKfgs`7#>Fjtd2'"lO*XVgNee9:nMr*3CVV2cY4,>)Z<mZRW>NG*l1%%Oo'lQ4I(@Klhi]+Q.>b8TErbX(LsP
%HIq#10GN1^X@$/[L9ErBpP0NV+9[*n\56)6k-'+U`oTISBuDp3#buiJ!$2S2]V29Fd/7YS]u_dpQ8EHi%4`>XFSKn2+")\o,=etA
%`.qjhQ(9Wf>pYg2]4R<Z$qKXsCZ$&,r8X`UVa[p\iVr`#^3[,&<\+3S7M*gIWFTCjDr'g./D:`6,a'V_fcWip6\NQj4HW':?U@4]
%$3Brl7#OARkH1*YrM<d0D'5;t.0K]VluAsr;:uCsPaiW2<YA^K7/QeA342t!LQu!N&LYH"jD5NcjMH8>:hJYpWO,^&7Ti@mS\c[7
%[pn$A(jmEtB1$jF7E)@1nha9&A@3rcQ\YS;fjGgC<A1dZ3F=(Q]F0r!f/6(,;?de`rZD-O7Rk.ph`qL%qXdf9)lWfjmHR.j(FsOW
%Zp2ml0o9U@63&VsnbC3,jKaj5Rqr\$]-O8,*1an7AU=)22%r7RR_q-+ZVcX?3XTt5.d'b3S_DnQf`30!<-EoO]V$!n%em!j&_G;m
%CU!Gainff,,MZDO]d/bmQ1%ijXS`_s(',,8jhm369Kq_O1q=,D!-<QN:+_6s)?:JhL=r81QE:'J99]S00LY_mC'@Eh'')_E69qE@
%45/56gOq-L![KLp'd950%32EN,uao$&dEKM&C"MTM[%L.T.]NtF1'CbW.t(i2S04678l8Epm0(,+?HQT*"c+=3@0ttPusKLippTK
%e6,V$l1E=FM.aqU2,<O*H+^SfTamMOdFfMGBKTs`^(![2nX5m3g,lj*9P=f-2s=0jdPSpdZQ]2t!9Vr+O9e-2H_E:$eOQHIU&I[R
%9e+^YKTaZacaeJqH^[j+'@92u'1n:25#(4"99`9/o+k\&+A3J"pi:^;L3JRk0F-]ZW=/_!lchHgAgQC_:1A4^Ks<K@C]u[B[X#:$
%UF*rLiT^%<pVN6>?RDlGo91:G*aT5/),D>l%+ORGc,eI0XSO#Vh-Q<"e3s3?m;[L%N@D<q25jVt7F+66O^LuefnW\slPV!D__GdW
%JQ%me4^YBA:`;p=:jb;[Ct@!1Hn>dp^8aPIS1-;n%_W6n,4V*U3Zlu@%Cm=?8iIMEB&<<g8f(9L$*&N("89Me!Lq(JF,r#'=b3pc
%#!l+UT=1b5E*oO02g^JGQA6THUke?D\#DaNLd_%pCodo7i.R(855%tf/]3*G>4EANLpg7b<CGpG>9n`fZDR\1:q1K)B&"rjfb5hV
%?>6PC1R7*tC?JHfnZs,"7<mm*DE!4\QuO6:>SodPkLdpg>N"I3%B1g.o?;E?LiCPij7<(0?AY^$21pl97=h`$O`D(H<I07:#M#/g
%FPA7+Xs2E?L[e-\NSYO:eAsg&C2`Lm"4n]a^F:^V4N(,9Sd&.i6;$OW=Xk'%rUmQ[QN3u9P+0D%*%Zh_au+Ahdun3mrPYp=$)2NF
%j,Iu"Ni.16Clq`V42%lin[EsYlqm4?FQ_bf#%b\sTGgR(2$aO[mSqK2gt(Jjb#8ljYcPWq[+>Wj)T>N3lE9*p9<%6E_F`'=I['$D
%(tTN8#o?$E<u3IXa#P-_N6G8nq*J!u9.rL?DS'R")+%3bC:MJ=\Y_5EY0a&K8IN,fq<1>4d'EAQ_2%gZU1lEs(qg6;%+DN<R'm?t
%!+P!98j50bqaR5+jKjge2!.P\WNM+d:Ve*j\u^82KGU11\N7fR(Su!4E\85:`lEXr:C]JG6&Y<8QD5HUYlf+]-=6c@#Zs`sl=9U9
%"0op:#PP&eYe_KfV`dDl%0Mhm-g2OJ+$E*R_H)pGWatK,WrLO("M"'a6,qJ9)@5E)S_^@5hjU7_3j>Pgi-$"H"%t>M3I4dM&!+E_
%aki^7@hP1Bnun_\?'UaMlo\4?qHK=.#k$RR>n`E%;r<glr)eOH^n*!sPh]SN(t-iS"+P\Z,XVe2JWG>.U<?T'g'WNh&Yonma4Lpm
%TNS?5QHEX`]neG-&`;S(`c0R!6=F,Yq;id_A+-7]s2TEhd>$[@c!ru`<=K(^&^A3_q.bk_'hC$GfatlQnQVb,":9JRRQ#:<\ghY_
%gbG^:[a+S61ob3p)THtqr>9G2]2.7"4?fikRaB)1A#$&XLmoX8aNoM<\m*7J+($j7NS</2l\:O>cjk#NHR$6.]3nOTFZC)]+?j70
%LH;Y4JHVT1P)22r^+:SBHHrl"(n]7'\h!kG:a<IR*0`K@8F^XcnOQ\RgLN>\?a*S?dI!aISMBjeUuj8._Si2%a)4p$jGXUd8pO5S
%^]N*?dFJ6B44N4fP)/5N"NIGt[\6W#`(T*LnBu:!YG>S^@EO28T,&W"9]-5U9X!TS`qPc@b55RY^oJf1VX"3HYMEW;!8FBp@o+n!
%l+@9L6$(1WAeJB<2dM>s8OV9P5\t:loQP<rPW"b8XJ0SRI[/\SE8tmuK+nVjelh*aK(!hs=+gH%Oq;s00]thgW3KD`*ZQGL^Q^LN
%H!GLdA;1P+&Tn_'0J^NN15?DKUE-duHSI/Sj-_#cGb:.]8%-4=k"H0+P71<YBe&^N3^6"5j?tVC#(iUCZ2%n>&A8_M1$C>pXl,(B
%N-`__^t#3K[TB1gF\&q$.@iUi.r>J&l54M/[no/>h)K0HTTm")3XlKUc=Fj;ZF,M"V*\:>V.Yn>=l<>.*Y!kb0*o+mp&u-`@-STu
%cgMLf>N_QmM,Gp$\Uotuj^LK:/tl"hBPugA%p.qWn^C#K>@cZ2P8N,`PnFp_8e^,H%3/g`?c@OQA&8D!D!Kl:#=4VsOGU]R^Wsc_
%<-QL1[<@iAC/Q3)""I!7.RDuX.dc5oZULaD@4[5?rnNef?nsdPHHu3hV/.3F@M8c(esCr^&M"@E.)qO`m+&K`_MtB;mE<#qN/J%5
%_b*Q"j7NU41E`K)Hbh-eWD[f+RtE3Ab>4LGbl#AcmhpF"H;5n\S<L-*/h=^o1OHqrb<Ih!-YtP5-'O)dE!0ut<AAa*#LfiOM?T"O
%<H#Bp<Bjn!nc*j6V^+7*3eN70Xr?n"<ql]Ijc0J)Act#;Kki@Xq"%t&E'i$AorIOYr:>%0kYA_NBPC1A/m:uG]qP0iE9rZrmEu3F
%W4pDBZabh3+2fC48L8)i6gEXF\OtF--10bRi_+X0dM8>V*.A$1Ze7s*"BKI0j08jPcb[W<^c3=TO&q@Q/2C]#:XQHcY\WTr:mIkX
%($a)UjiM*pVm3+rjA:1(T=6'p^E:to6iQK$A0'A[rUldL6V]8.m*B,-)D#1=i.5p&>Fb9>i/YiSA6k.B;0O+N,'MIpeZ%c&GO5sO
%h>-T`6>[\kYjoN5n0YH&U`V3g*5B^065(XIiIo%)).#3NX@!`coMS]aqK%.(?M8K'(pH+J<e$kkeh([]W'ajaPQ][Nc=KP)4'_>s
%HTQ1<UAb&RhQIkO-_')=1^1"u^],%Y&%cD^*L4f;Ig2S;M"ap*:>#lK7C8:&_dCk1=Ru#5Z3OJRJf^TC-/Z'Y([>?\^CuM/IPH`5
%9-U*4p2)I:g+@)7oEm5^r/=djTMo"6$%`Eri2fB?o<1<<+[(c+Al=+!Poi[]q:--^169)oFm.H?QI!Ikk>/cu1N!Ea/$YEq%^D+N
%;P!ABJQJ^[A__f(`E9FG5WAndjm`V-!erbX^a]`bK8*RT`\aSM%GI"h(FkM`XTqeQ[hs@O)lT[s00m\`!-0R^YaZ;HW>r^j10pJ`
%[unaY>^_J=RB-0F\9IO%1FkR2-o=<%59Gk*l;\"p5cteLg_-DY:]lE.FE+\RO$^6:/^]>"-4#=%AMp4u!q60njZm3N!$i7#m:--Q
%5a`8cZmD\sd-N$UJd5YXW;noq:iEHW,s5/dM1s'r1pMOUlXt12WmH\/@`e1ZHn?k%-A9r_J"]WP')>XkgR<ni4`gNlc_K!K!O:Hj
%BN("7j?BThpL#l@p<V,j_o8aiJJ(&Fc_P=h:P@`8'JFOKQ/^Zr(4JF6$pg-K2Qhg`MAuWp,)tOL5Q,sT7%gdKmsSg3bLj3`_N'Tu
%FgDF%TC/(Q<k$rOI:s-]OR":/Y(#eS#2Y+"3OS^tVP^dLm$Ltu3P5[T:+tq]4#9q$rQl4)Ie)Oaf6tc:G]`aHa5^X$:[3p^H33>/
%FMu*MeNJ9^iel2:.sAds!<dQIpHrW.;N58'l$Gl)Y#2):Qc]"jJ,Ea#U8p5H.\qnJHjP[U[JT5gbot!jolfB5>^d\!HRfH*B/OU8
%1a_Zq!6-Et-^U7p1aed.#'=WuDGR.Tc4Tk7*gSEYj!O<86nbPmrFhC.*<rQ4YS/ske$5UTrj\Mn1:@^e@kLcZR1J!UVsi7A<[RRN
%8uWsrMZ'8kMc&V0h4KRUB@t$2Wh&5dA2%&%gXCbO"HUWH?BLH9r'^OiN@):_BmEi7>oC\e$5$PE-3'EM==WE>ksM010<K=W"jWKZ
%Z=$$6h;k1RT"\<O:`V13SQGNU-ne"Qs4Qg<ArfFAUW$K`AIS2Xe*9dL-tXCcA$-&YKS1*!]o]!"^7#U[4(,)P/E[#n5%n+n9HdNE
%$*V1uVO'[:,*`a77DZ.n\/PNf:MGV;<M%aoP<S+E780bfn3/7M[U.5\*[F;WJr6C9N>HEO<us\$OuEBcq<765V+IQD/_X<k6BjMd
%DJ2%p7tekh4=_2Kf&PaI1p=b>.Z9b2S$^6BW1HMg9/>%GfPY*FR?"4*HIb__IK_nL[BZ.Z^;8l(rW912&!r(!r2!)T*.H.N=),5-
%1u5<BL&L=79YW;"3&Ho/No)-0O"SQZ84L]WJdM?A-CVgW'iNRDM`1>EbRH2g(:umGh^eIg#ZHleiC1[#!M.@Hk)d!)@TDdE+W[&E
%-sh)6a_+QqZ2GrrQho]7N0,0q$B"s`;>M8AaFgdefCId8;99la8],2,D[G-lr-PA*/>S50pS[>W.Xt"A'QO][76GA5'Sd^=UQHk%
%GmXh`*&BtQ+70hdKI=G;VOhZU5lcT8`o*a!2HJqj)31h^$)9Me3']L0QslGM:+q_['7:Q3\)ILjce[sf`KZ=&F-nU79W2!T-YrFL
%,KHK,`Taa\6EERfC7Zk_YSjVH\%'=X)KL"`N9ZL`;;UQXNLh>B-nI8Hf7LtKc1ei^F/4b@(n:6Z5MWaRe;5b=6sPH/Hd0DA.M1RN
%]7(ND^h/HN8R:[!p2Hhegs18e*@FGJg2'ff'1<W\bG0g3%g=".hokDOfM3mNMb"QD0k6+*U8F"2m!5r>\-+*5@cE+tFF0%+)T&e^
%@S+em(,-@%ZOIE1IQT8_:m4%3qF=Y<*"ks'hIsF$AB.J.oj]@<j<V?Nar<=E_0a\EKlpfC?*KXomY.RiY4&H=YVpWm!Qpl1Gd[lh
%ClAq?MAI1'qLfK>6U$H\f<'fa15Vt3Rs)cN1jl#D.53nti`^bDE:4r,2;L.I!\@7O.la<fS4gV.&HC_*C?%4ZZ1OUZ^i_u3W^dMB
%DY::l#ESio9Vl0*<`d<ghtR[R1li67YT"J:_[W9)2*H's[1lj9"75SIN>CPXZHN=:Ng8!t6Xb6eUYRo9Nd9j9AY"*LBdit$Rm!J7
%.fB'\`CiQp1IRCucmb$9mOph'^\l8DNM5H@Fkb5[3Et<u=AkrYL63@@qJ'snXuuhRUQk/i@Su+5RXk,gZ[6i'Tn(R,*A.,3gTPdr
%:a?(k/;5aL\/@]2`#k2>4@)aZbqJdDf:>:W@!OLulb#$!s+#UM@kAEB+0esY\?VkMhA0ZU^Rs-LgNj^CZ09BZVT*@Bqru/GWGa_N
%ZO@1cI*Klq,peOk*;^59803Z:1+86pN>.]+W02H0VP:I<ZcYG2@`S0R[9N%L8Oa\crK@\h`f%')5Uoc`]Bk^Z\?Hm3Rd3op='4iu
%AK8Tid^f.LESc[;*gJe'`XnHM#7a`p8oZ]MC>\hcA6&[`b:!Xb==n9C:e0'V3[A%N)T#<NBV%@1`.L$70M)B$nDfuN^.n<jbO*7m
%`=`mQGDMEi)9NB;j4E2<6X,$4n3kJNo[<fulJ4<cjeQYu@&*og)lHB%+Z;fG0<C\gOGp#7JZLVO!?+(J"0a:KgJSdW]YP%'&I6t5
%&jd6sF\,cp.iQb2LoVbGMMK,&+TG,^0;F2;.?^PkIT34XNpp/qS%:(&V\OOh<A:m>8'3!761IPt$+_oeJssk\n>jZ@$P@Adpt/Yu
%DCPCW^Tn'B3RJeYq$!fEbMK=-mSf<FX8uO#_k,&T:ZJi/G<Xb]a?oPpi\TMIbl$[l(_2W"N1r$h<1H3qI@:bJ#*_oaAB&N\&V(1:
%jbe)tb,5Y;IU;*Q4WGhHdp(d<Tq$i]HE2A.EPWS]M]RUERYMDgQr:f,Q91g`_W#"?M)'\5i11>t.D'=o5LuMW/Q%D!oc>nO$RiQD
%'<Y&'T,51>nrLkJfosD-c<X66&P^S(RjOT?kGRoVP]Xb3Xp4N!@_ml"&Q<.;J.T&YW6,l6SJ&p6A)jX.'8O"GU#s[(k4Fp:4;/hL
%:nmmRm7h.\"EUjq:ok6rk'F6\k6a\t0TjO$ePP#7'!LXo`h]^D%lNls#tlSISJ:WC&f-]Q@+00Bb6Bl!I3qui[fEpS`Aj]:4)+Y>
%3KeQegm8'b&uKU>V`"#Ej%hlM"^BW`a'_[9f0?o_jQhKun4,$(-^>(AOVZ[Ph5lAF-hb>eR>#5t1:if@KqpQN<g3_"d1Hb6CuKq:
%=Zo;l@i6:3;(c,/)Wa5\kS&S7``W+chtCGHm9rd(8&Z'.9We;Dq9shgLC4_sk]cH;,]Af4(=SR,a!eifHOD<=P#RmdhBGhg4I+kD
%!GsaC0T2&.ISl3(@8L,2WNs66Wl[0g:ftHVLs^'2>*(6P=Y526MRfYa>^VjtPr0aqX4g1qOGRRb=d)E/EgcarT5H)pa9[]m7kD&a
%?22P/5QCH<c84:>=!Is.-+go%-Q6J;]K'Y]>S:3V64_LMgS\3]S""g[I\\&CSZ]E<kr"CIS"!p0(77J"E]hicaj+kccqd\rYVQ*0
%11LHAreTq!1R5gnr2,3>QEoWYAPG:N(.?$[E`SEbrQ!'Rgo=82MmEF00N]\"QNq^U.?a2bAd?tr0q[hF6JjVaf@sZSXWNaV?SQDP
%d='uKMh0=!E^*@:s+i8/R!FFh1EMbFCm+N0kFpP#0?6PIn:1*Nd:dD=HGe5ulmY<J%UYFnrns6AjKn.^a\V@N^]*eK,fk:"VSGPf
%j5@,Yo&g*L0Z?d9c$6<hXQ#7T1st3HTKKL,8u@bI'E!Z9@5]U?D1br,O21:I+"XD!9m[F.OgPV`(F3KfZ8DkPaQ*8*-YEel:fhcj
%6Z7k1EtD;A^t.n/TNpq[?B&5D\0DX&6,k3f$'<S7ahbEJ9d9.tgVN;cB>_iaS>?h08N+W.X5BV]pAWRfqrk?8+\Qj06h+p.0Jcn@
%n%]Z5HA8g>g\>XqJn#LRqd36;jtbsXM).Ih&#q%f7VGsao:'n!#k`.-oLn6J(a_#g&DLJYC_YUZCTB7WlP1&$Ub*BGOVtaFo^uku
%5ioXRhlRnq>6DsB82g*q&((ra_r:17k>R;Z$,r;f7?BfX<t&7l+.0GYMf]4U&bSkU#A^s@`28GNM#?L.5Z4[aYVRI6-0Em[4dj8Y
%P23']53;XhEETkQ!1u`=3GO`o&oL/]Y#4F,_L<H5*[O/<+HY2%4f(Gc</%dRn36j*GRDM+Z!7A39N\5)KLrjG6>BXq);?o9/FcBK
%4:K&_VtCi5Sb-_aT>nSJW<NZZ*gGkd10]@`'G8.P;>-K5i12?#-4s+#8NUc6IjY;.9_%DB^.WVj0]>0aHL/82hKjVMTdOX!1/NNW
%/[tA7[..H]>;7`5M!@?mZf)XR?A6VhH9Ie#2BD0jM80>F:N65S(,soB0bc*NH`AVkGOddW]*kS>3Bu(\pTR%%g,uK$bAX;('e6o8
%+q=&m]8-J_LP*ePFhdIB6NU;_Ft>Z^<[enbD2HCpP:kCiRe\3br$FA/e*b8nrQM.??(I*J=6ZoncPj?.a%i0<B;IRHh`qk8>ZKFk
%hp:`peWIKH3a_C5;d18ADcW>WIOr-D8Hk<L5qb^N\:4LLAH;8.21c*c%NX]+'CVZD)4G1oRYNnY\3q;%!N^*S?Y06meX0Ps3B+%@
%k0^5MC$OU(XGpPYD/&6"-ps>1O`n[3>c,:9p+rhQ0IZDB?(ZsjR-5!Y3S&`N<@.;l;WMVT]bIb_d*pck/X?"/lXH.%"dlSH[/b;N
%er5-mW\=TZUp".OZu5H?9"9<BfpXj.NJ3"C*D`H\nZ[XN8aSYhL!Z3X`@Vd\eGm^!I\)DD?;bqLZK/3%Cqm"V43"?.YWW">YL=MM
%8\=?eEG1AZI=CbalK>lb1sl#Xe+UDRDPpC2:%Y_(pbSRMH9"b_r6T0@*k+SVZGKiF'<(Zi6HD`c8lOYOC(^E1/L]b&,YI7)bCYb?
%0H`%XfQu/:@[dNjqACYRAH`?GFY-eC^9kIJ7280=OZ_g$TIpo\]#f'GiBgcA.2,J>`RhCtf]9C[P&W0;l9"\r,^iO7DQHB%-+F:A
%bBC2%G2si\8#[/ZI>+,H'\s6N'%+k$auI'\.:Gr,W!/CLd27M5$;1IeH>0%5C^Xmq;Qpf>/XcWDc32W7+6!(;WfL_&G?e^L(*SE;
%BMVR+>b[=RfCVZAr60#e%1/>AlQiM^LMN/ah@?_+D#/f7a.G?&A#C3)R6sldR$n.`LX(1rc9C":_LJ7d,UJ@XX@]Q+j.C4b)HRn=
%g,(b78tqP[DgaNlkc8MkD.RoBR/*]SLrmDb#5lMCG2NZqjZ5#A!D[#?IVH'I$D;Y`>Pd/FPU>mJ&_\K!L;5sIK>YZSb?eiim"e*_
%5,dZYcl*NCW>=WFY=YN"Jr)cqg"+UROV;jnZ!U'$#L9r&h\)2)G<Ij,`0UkIi_q]Qh<Tf,A4@mCp&K^2[()rK+=.)0C2rO-0),P5
%c!4f_*[baTL5T6=iIJII-CtY7IXAlF(AmF$]g[MYa=BhP]2Bgq*<I@e?"fqa?S<AU*;"@X4s(?s(V7uA#0BhPc:!0VYZ1_1L^)H@
%3`8B`ZpmEQk_PPlUlsAO(aH0>5P9$8du$_W00]A]=u#S_N2T+Z;ZeA0QUM=1Y!^SE_1ZbLQOU3LIdQI,kC/jU7_1*,VaVnZ&gOCf
%G2OJ_W%3:elVQY1Pe=aA*#(BIJ*lj5kC/_9OlA+X\=Z'2nIp"tlG;#Xh<S$qI\#H&Z>gn@OT)iSk<:PGmUsIb>kdhE5iP0P9)aao
%TC$^srHo^peFM@F9BFV!k<?(rDQ*HSd3e27:^ppXFFKq[KqWALlbp=GMC_^[loIu2+8;se?M7'Nff)MAg5[0c.Kmim,H;;T@DML$
%!^+N6&W0m$AJ=M7&b=f25PK<VlN)^"?@RGk!p-8-4e]8No&+d]EHZVW7]qeXLJA;R\"ET0ppmN/qk[kE`mb\IHV7s,_MY$nc/!c1
%hTq4sefg%?XShZN&:4Ij!;Gr1?2F;Hh!&I^MT9OtQ:H-e*MPX_[)hZXY!]*g]j#qIY]t7S5PK<VF$k[NPQ#UZ?1.Reqg$JG<,ZmO
%3hB:=(RGSG\e!SiHMdWqk@LhLNBb=$9h3io%\'2;!_J\S"]=%'bW.UK!@?(p\dn)sq*.+<H/7eGH(qTFFaS'b?O6mOL0,&i/N$OP
%7X_F,n]'!pp$KO=E;fHN?e;tp2L^qO)+(?CRn7/,%#-`pN_]1eDS(W7C*sodEM,YirT?AJHgUGgg8fLGZ.#<H$:iaRf_r8km#F']
%0n!e2NZ)hk2Cf6l5P]Hp1BG_pQi8maG@U#8fJ+_Hm@KJhH@)-o[iX,TTgs+pqT5qAIkE.$r0O)TJW%E,g'Kj\I1s%N;uQ9.HGj:0
%/?7o@LX'S3>X/%,p%.F=4!+4sp<N8eY[bfL&0KHo#I"$r44!4RoK9>C-blg5^;(fi!g_pViFjp?dM4Y!?lCdCBD1XrKqc2Oa*KfW
%1bG$?T3qK.m!4(N2jSjY1M:U/G7etr#2mO3jZ.\C_lC_&G9'js]mG5!qr1[$(\\<"ZK#NK/Y6puNp3`9,p8(aEOoYbiYefm*6OY?
%oCJ/Q=9&7.8%US$B3;R*'V8`%mt:W=)+NuQ1V=3GL=PmZ?WTJ@<fJKK?eG2DI`VG8_N%>,j/Vp/cfpJ/Zt5$Rld-EdPII1^\9dMU
%r]a&XUXU&8`0AqH'H(t+GM"V^6u"F9YL=MM#!eIrqf=/poDJp/Y'nH,,P6FT]7co^0R+30q2,LF_E4%9fDe2hN&7,n0Ctg>E)@A5
%^7g#_n`6>+`3_=;Np!/RE^'.HXI-@l;$/PEpc6#O?Tg9'4Q)i![<Hup`NP2l#1:(qo-YKMqJO+)6U.WDgIdS=>c4JI+e\&'DsKE*
%a)*uSpiZ+J>A#j%M^Pk4J9@H!?=Cm#:rB(nGFe/hRYp>O@m\M(#aphEr8Q>IcY_4B@0!@"Q^HfI76"Y?T%%`0RlRB:m+2b0T%7sr
%pX?^&na#2t[eBN`ourLcMu0q&<_Tt+4VXl.?)RF0L88^>DX0<IZ1e0T?PbpImH95uF^+0W>!%1DSYq2/]W_!u547/d:[:(64K[c_
%^FjtQleF0:"$Oft?jk%/c;B>u^o2D@3]gecPU4toPda!tCZG@@^Fju`neRu1fSVJn5^b\l?&o-.p]r:&,3[6lHFh*3\qsVQY!Y]1
%F4X3:?2\N24q$uR(9++JqhhUfafsr!eaet/?!1Hmqmm9>EF7lVs5iO<)a-oD-]<kQh@k@HHCU"c)dT@Kcg,E@h@Ap#/U2a8lfr,N
%3X#Zu(n_*O>p$)FSZ"kIfs#qdiPo#jm9'#:SHrPW:?RPe07I4(gso!n?t:!-%."U`3uqbM`%!eX8T1N9I^M*3J\3(N@a@i!>lD5e
%Ih21CWo5S;rXi2Z5t+ro?qY%h52!2k9I*3_?\c)B#X(EJII4PFITCuFcWkn:fW&SUkp+2K4k%f$qE8nZ'P$GhF9M%&rlM@E?V`3O
%V-^3F5Moq'*D6T&H3q;\cdunpcF8$=HG7A]-blj6T%BrC&^".Hq[.$ELHf5`gjD23"uDm$6HE_#7hQL*q2=\X5EDk`$dS!_NU2p%
%*@&NZ+!EClDK!1WF*bdMnC!N6%W,O&Y$_+<pbbE,FY?C2m&toJ$7$Kta&:iA,Y-aeYisH;do1%'56i7]MX1#N/q#UX<A%I!$A"Kr
%l?I)MJ!TAEX'^@h:VG3^:s[:35B+,mGQ$=[ANqt9<8F^i1oaLeFbk1QGuDnf#P8Gr'ih9s^_KkLlfUI8HQb%aVa.neja"A^&OApe
%A^RmCSl6jJq]S1sF5W!@a7XMGQbDf7?KHFH+jU=+>dre)+P#eLiq3(r;k=Ag6g'l4Y+PX'qK[)BElGS0j:p/BFqWMNWqlHqlT%&a
%\(+525@7WhW91R)lh#2eF'Bdo[-jqA^aC%_Vb@t]08PG'GWP#rH]qC&$hG??e:i0smH_'MaYDn;ci$7LI%jDON0Za<gN2ema0u`B
%qnVX&d.;%FQTb(a&jQ_@S_(;FqAE_^1n7a^N9g+Z]si.4cg/rAIU587FnO'q2>]@7qY:QkEmi:$$$I$JT:5A#X6@StYb-gP1WH'E
%qmuE"l&9$t<:22W8l<W+LNF\+`6Ob_q/qV2'(9gBB%pt2rRC!fYO\Rj+^^^:RGc=?lB$I;S_hN<s17p",i&3JHO`4+Zg0!R0)jPu
%T]"4_T<Gc,-^S.Z>P[@8f@b@o%Xt$In'@]hgt);Cmu(QOWlPsYKl6$O9oQ;d*9T>JYl"'.Z(kih`qac@W?tq9q/uB!->9r1Q)=p,
%dCT^RkG_]MY@69VcA*\7*.$K$ooi`!s-ff3jn>7:ZYIq?'6OS,V\#]/kBNL9TpV_<Nc?)ljo9<"guih+4Pl^@pf^stS%bJji,mH>
%<E/M!DemP\VEY<sRst=ik@HleHYBb53V'AKP1tnn6\I<jM>+`VbKt2*ihV7igOTr_Id[0GfD9hJ-W_lJ3H84M6"MJ/L8#:pkKZ0J
%`=?2KLZcJ8`9I-/cg./G<8pnUm\ud$7-3b@1-uq!r^B7BUut^4IQ]%B-$LG5WH!7ag?2J^o>r^:l^d6W&"n_._uW7L*W=[SgiPcQ
%l2buI=>bW#?i.G$<Io;0q=_OK,eD;(mS?>;/edFA\+d;&NrDu:F/&R0guih+q`6rVFgf%kalaC;+>(FUG7$DBTBVGDf9-s4I3:lR
%rT?AJHBmfDT3"r'L\pm8"&L.)T69FNEUMX[UjdoecT.)\q>PH-f8]c%mh<cU8nETNQQY2i;Ar$sl:Lr>KuQ55RMuC\f71<>Jh8ka
%C"9uH?N^-KI0;fjU;G.T/;/aWAA[<!i?6;;QDI@DY>:F'#mc''>9,RmBF5n/,bp%fCtV_&@B0L?GmLk<\4Ieu\9(\P/_eD[UKHf=
%V]K,UgaIi?2IX0"@^7`$)<mVPF82c`o,;SI(7p,SW:7>(VC2<FLcG75@j*%1#berqE8@>%)!=MB*6M_'c2_..P4"$I"']utW$4uc
%FGdj,Ne0Ic+9*Lf>ZoIRaTSPGQn._OF8I,BXLLp:#Z?H[aG6G,22Z,*#j(7FJW7ZG%9"21K.\0HI>r*1"Rt%,22[K+Vt!9o(e]>a
%Ai)\uG`MYT8.Fur_$5Uta<K'M&-J5e%H?L!kG,g,,u$,:TqE_bdH:f6H'2M(3Uid?HGmO.f`9MWks(D"Xrbj9hb.T)$jct4n5OM+
%P(n4N_SB-5@Q@oY@0R=k^,<&!if"S#NTFS5UoLiaVn+AehO<]fZ6lRahh[FTM6O?cDu;_@'AI$3*X<]`=C[+5`$X76E+k0je)7J`
%5>o]FY?<'u4'`D1Qn2'1)o2>sG%^Tin5S_XE\R0%k`--$IT(T$5eOGNm[g5Q?gl83YuU_,aX\S>#]LBUV=UXJn0(VT/pN57mDHl%
%IPIC<8[nk,J4B&ro-?2sopggDO,<`k',NitO^jF-d$qg\T?2+/F;Vp]=`-S_3[uD7O_m!R'ZkpW(g,4gh]u6>%?qdKHS+b+0VUt?
%_-c/>#]0)$j6W-L3L3t8<oR0XSaKIJQU%/C:W:>Y:qNJ17cch\D;QrP&rn$<8!.9.)M;Ghe5T#5X=o;s&<%L_r9C>B/lA)Cf9V%u
%2qPbZXcZpCCr!XOa7T]6h-j,RC"+O1"Vj#7*MR?5/Ksai<j(uqfSQ(c-5e<KZhQ5IVSqJO6t.mDNa3:]MB#;M7tG=5/ePBW*NVQ#
%Nk&@,)tq<TjD4)t7QG8Lk3sK1C-ff@\X/Ejgc%Ve-t/?jEe\70L/<m+%7qhZ^n\2)q'Ol=[1Do-_?g:;ZmBQjjd1rkFc@5pe;V<$
%]V;ON/tgUB)Nd=V9")/U:YeoQrc,1tUO^L&fR%;S<t:q/HShuTq/H%]rUE/6J-@5W7D;dDVeefK=C.Xc)\&JIH)2U\IM8^`)d^M:
%\!J5&Jk2j+JHOVSd(%5/1p08Ho!4LsK5V#^FN%YO2:31GQ==JkIS_jo6BLK5LqK#`LSjfF&hcc93"KGqQ2Pc%W1q3HlpK]954jYh
%4G*C<N]PL:g(':J_h"0<>_V4(GVrDDH[8@E5G\&e.JUF6>&O0^1TTlu](3'shOtcW$3n4GE1"a*6>/!#3j9M9=):DsJtX'G,#n6V
%%^,N<&J9j870lI(!^&9mjC(<UR%69H&R"]bB@"kHYTpKCMGo[*g`QR+B-DRJ569GiJ\sE'BP.gC5r<QuU,V\)Mte%H5.Ei))qFe:
%aTAk5:#p&YP@E-QHs0QI-9sE^)',d'Dl$TG91OR/JEa4ig`0KI=pLPp#";%VE>>.4H+NO/b1->_H)c*e)l2s$f$G=;q[aZ/St:>e
%,g>Q>iW2BJM8*0(T4s&T$USoIpCfKe'Y$d0q%1N$3TU[<X+s"#I!c]Dn._.$E.n!8G8Na=cQ+4uBMe59JC<38+-/N[g=-/N<C),X
%Rc*kX6fCL[5e#C^kfLKq8rHfdTGC"3\>mP#.F!=N7_(c?L)(aD^d\:*mBrCu6Q<j.]buK$a]a(&=u.(^XL(C_)FYVWn?ia$CT%[2
%oLTS1OOCVnYT?eM[Z0K^2lmirce*ngl3f;L3`aZGkBZ@OXe;,7T9uWrL=S["SS'l:ZPa2C1A$[_Y^$hTEj"IF6FpNX[)UIVat#f8
%I_cGH^+%'EoAc%m*X3c'?&hB+"E<;]PY<!b.9MDK];'1*^K1[e_Q5#l1Nf`cU(YO<=q,llN!=O],.]01K%nHeNEH[-L9ptl8eUE\
%LiPG/W9blD.a2is]@[(c*/ip@m`&`d$i<[E4]KEgB[YhecL?5F1rlZ^GNcF]'1aU>Fh^p%qhS?;!u!:MPnBI9bA'I,PDF+Ud'R83
%8R@UA%0@&^.]S5JkhPT#"S9(d6(F7(=Z0&9rX"SHWSo@d&#Ef$hSQ(o@IEf8O>nUIEVprBp7(nb!SUbhPHq^B^-:L9=7a>2rml94
%g+72irCdl!Q^Ca1ihSj.2NW//*RZMHO3BT8d.75kRg("fCX&7"2STM77o(_'aUCBfP1GHB3<,ao!j[`$pqunbX[XFGZ:78Xl`kB0
%&o1q*EY2#?HsUqH00L??"g5FF9,^rUSh(pjitiPt!Fe)Vds;Tnm[A+3^mg83=B:ld2JkD%<(SQ,bF<QD]L5Y=6QgOfRuTfmVMC`s
%*At?684oqOe7#RaQm4gu+3i//VPnNk>h!]Ln3NJjL<XmX.7q5eYt^E7#Io+[MSsrmED)oMMaVD<0SikL)#:1&<UEtk`/F"1B[4-D
%W?DI%ho)f'I)"Yq;4"9J:CX!L=A,q4dpn2R,J8HSBTMr@lO3FmkhF6k4(hicq#EA3ZL0?R*nBBn(uDZJK2d;QoeX:mMG6Se!P">N
%+2*DE#^Ule';6!YigPKm"an`g1*>GfhJcXXd2NYc3uFA"?[.0_eEf\(h#Y\R_KuQC6.\nm:tL7(EMu#bpNbH%*u#O\kApJecnaf8
%eAGo":T!f`_Pqhbi2^DaVK@n33g=Wa:XJ,1d1QBJSL&.hS`K4!/3E/*l1J0$BD\Hh.90hFj98&I$S_b/WN^m_M,.DE:T%*'ppuY1
%%Yr@^UUtn9]^`H?eWDibV:;b-*3=\c4=NY_G\X('Z0!b9D_b;$*bf?Z$Mf(lHMmg's1Ef4G'Ob2mTHF-?T:;JYF?%4o*m8tqmPH,
%VA<oNbRV86XBCB$;nTG3P<VcK1q(=%_u;nca5l\(!as<I=[ViqW\MHr>U:1"b7!J_qQHU=$OW!8e9pOEY7t8GJXf@@h+-1uJ8fX8
%$IKEMhrQS=Jd'!EWlHEc45qGEDpK`Zk<Q!<U_4lO<^1RR/Vm'pgI':5%0ssqGt!UkZ@+`_IJr\ZTu*;mT5%q'^/LFc@$R@\\Pa8F
%+cW)/)MtI.+f$:^`=_=*K2c;:*>S.`n1#i.`hi?]aHQe+N;eK(M[MR#oKE/iemf^gV[_2um1PZV.IaW#>DL0N)uGm=fBjp[_ofh;
%OK_(6o7Ui`a(p==/LOWfD<&rr-A(QtCujQb3O6fAR3p`LLq6nPFb`FN*be8AAa)dc5<O2U,]U)`&1HFi$DY\eqD4io$A&)LO19pN
%iImV1L,`U`Z-gsMdO6`k;*cWSN!edmAU^1H?Uj!n")sSdOD06VrCj)p:ddrcaZWk@8g0M-ZXqGt)VNHclS,'7a!7U$*'WIbrE#A!
%9ML\HUOji=W)>9BL6V@aij4AB2O4oJ=46I@OJ8sQF(]Y]MC)>WB[U%bDXfAYc0scKM)cbkc<bNVjuc$ZO/-tW.!($&h[7:T\`eV1
%='`>6k2CRje][0@W@ZPmL/Nb2=_+FX:5O-^n;16JET;WZRgD1/buqd'RLnpdk+;>M;n*_iMV1=o;XB\Vh-D79a\3FaWbm,/1lS_'
%LT&^o&^oZ:<.7i'je"m([s>.2eUJujW+W%]SLY^U*L6:Td'Qj:%O_)ikF=NrB[*H<h5L0r4hm>A+=+BQ+ZC:%KkVWEa![kuXj1p_
%+Xu>jDSCc\d+c]_90*V-DO%Asqn2?^m$rR`A>:(nZ5HPa9Yqk'mE?FkdtdNT2[X1sMXEjt1'Q,EC:br/DH,ku!_RH^C6oK#cI/QK
%W*>t*%5O?,7!#)%G?(U'-cbNO::1P.TQj,]jSCNZD"Lt&CQQP'q765$foXf`%b<b,E4/kdR1)")NT$$0^H4>^eTXGRE\r1bV$*It
%\p&L9EL8&_42<EMF8"J(UO"69bt6:8NU<)8i5!.Z&%6>uflNBpQF,4gh'7VIqlcl"RV%db)<r.#WJ@F5(JuATk#Da^)Gk2.NVq#g
%&(FhQORe.uVGL]L40Zek?qZL8KgdU@%!>>N;LcjCo.6.-0FQ=/'\f:U9pgc)7``GXg>K6g<mW'5#*?,;M*HtDRIltWFd/dn[>=7H
%8Z,H/=LJ1&X6qa&>M79%:CEI@)ZhQ6@;T,LBN&')=4MJYXOO>L3CC*CL$i9FB:%RuCT]Dd7Ao0o9_kHKHSag1m/?TcBlf*sl0MQ;
%7u1@YLXo]O8:B%0Iq-h^=#&++hkCH''ZAKoTBnff;:Mc5Q/_2`&3!S*&;4.1"frUJ)]W`WFLPJ>TH8H[Vr/#\cDa:J9R9ONPL1o-
%!jfCeVsYG3n=c8lQB5$gGm=bdPFT_-VN[lRc<8m8)U&0Ugm#K2Pti$O:.]/.7H2M;@eI(S1"d;CZd=[#O/`n3d?M,:O2c@Ff<)`1
%S6N7f<l-%</lq;b%mg3$o6.\42*"Bje/E1cC>17..D;Sk>P:U!dCrM+gf_lN$Iq\G+;$ik0<#]e`apGeNk^mWh)ej@3Qe=ijN2kt
%gRu5KjajU6q/2ZQ%.J?)^AbWeedJ&koT(L7+Dm!cN!$3PetuFnnb%WR2"\ee`J!]CmV4:8=+C+5B5P!bd$#rQm0\PAQGALu-0j=?
%B]8ZP=Khq2,WP$%<;A)W3CXOkmTTDfEe,m"6A,V]//.rlP2b8k\d:/q;DV.X9:/iW8-^(H]h5>ocX_es(3Y:s@3Gt@ZMO\*R13M"
%p.)/=B"?SckRQj\`SACM&"s[p-;*Ilgsi]C^/inL>l(`["d?&I68UMOa7BKY\5m9=&_1BiCn*>CP/@^1V?:D)^eer1lEr[`Ckl]I
%ar8rAq2_9q'#N>ohU&LZb!Qg?-eNHT>BrclI5=Lc7mTrC\@TY(=a"1C\-KrHIK"5XI8u;gN`1-0-H1EfQ/sKq)N7psgH*qL)onZV
%*r"Gp^Mr7TVS9B^qT)0)_YN`*U\)Pdd0Mb7X8HMsEuFiI\\$,4"(.bJT6n?@mt8`a]*Z9h]hBRAWBAIl=UgH`bNbI?qLP4r%HXWB
%fD(Hc15D/H%rB,gb4$EGZnre<V+%:7RYq<nqEX'"'Zt;3[aB]a]96>Qq#CM*Vl+u,*Kl*4a:(TCNP0:K%GAla2HX6?S-6UJH49T(
%b$o^YH"!:&*AfWh2!31^,W#VjKFtTXfi5SMfb0?TG:0?rU<>lrGmQ.Um#_N@`mhlZP+)4j]L5cRn8X%.f\0Lbqj8ud0:HS7>_suV
%BH%caW3e?cb$$j1E&5J<;4>Xk`*-jXN@B)pFa<$?:hi?$VI9MtW$G58ScajP-X+n]innT"+U/T[?`=9*1g2Ki&bn3tIikms@`K'2
%)J7@sM\Qu8P)JfX)NU-S[>k5'VPZN=d8RnQ29JG2I:jNJ]kFLW;U`K[Y/?2<qIHSHmo2A@RW25KfK1-W,LU$G4.BGE6X<=0hJ(A\
%;&]K);:>Q$NfIW6Mp=>:no@_nO:rs8ZNqA*nqS2qJ:cdM@;&-fE'^)F$%+h[C8r]FYY.;E@6kP@U"!P&j[ClUk^aBgQF)J1JXm0"
%q?^t*ArD$$>Y'HVOCL/=aeDRQWDn&hbk+q#!AoO(n9GR;RCaIG#R*WQ"eEXb]k89Y0K3^>M["20RM`+\%F\TPFC!rcpH>DAFF+(C
%_Ql#i1`,,%ER.pI5c+_M**XW.>k1I4R+S!@-P5L3W=[P^No@d<+YAr%gJ[UI8tStD8kO&G9Md-4:`H%1Pd9/If4_(MeR;K=\2K=[
%qR!1.41/>bY9_,&U'I<=h5'QKJ.HIOR,J/p$rQAu)1A?s>6g<_`/k0ad_k=aGHMS1"it?N.ug"b5VJ=<J.WE;#[&$G-WNR^P?;""
%mEUEB.Ha5oZMP3g'XQ'7:/,/"4hWrfAA]o,^7/@Zc/^H/bWBUmJsjQWb.E=ofQC"X--Nh>JumY[&D#BAaE[jji.,Ei)81@Wr5nAK
%ZnZ"W;52)48QGj.X6$<`693+og2>=_XLJs;P7'Qe6rR'W>)9YRjjI8UgZ=bW>ui,Mqiku=Bq?$M0/@_&+HjbR<F:qKa=JtA\n%$M
%3d.eEm-rT[_`:edIV:]rL/Sj!9iV9e`n%(3dWNH-+75usj4&pc:JtC-79jTCk8%WF5`aS7b>$hm]X:TYcaP^KB?Sk)FVP^5KQ<h?
%L';Qa&BuV],AAdWi5<jdl2#/4'(Ob/l"b9+Fd@OgjN"R[[V_O'AEHS(WqHNFE'3?CTp!Hu=J,0Y6M[N.<4dON0oPT(6gb-SKT`-C
%&=r+*ep*7[P+a*Bock8R'O1\;Q_2_lRl[d5mKT,o(L21*Hlgu!ekn_HOEi]H$1dIh/W^T3ICZP%Y/'moc37s*Wt/U%7-o/l8Bh^g
%.1CKOL?c%YK">3l_)7t+PIM8n8u:rS2TR9W8WZBY8C31:rV"a:6jZRO-oq\ZUe_?lJN?cSEN^6NdHHns[DV<.e#gC0XfkR':LgN3
%fRk!9Z7.&`iUi%io\36BhqC7)q1o!]+[DMD7T4FAHI&V+=&"",Wng[Ka)=qpeMbM-+bS&G.;2sd]D<+6IKMYrH\GP.)j^un3gn%u
%C7XD#)D76s4=?F0Wg&`i/m'+B;>t9.WoNk/-?63p`Z;gG-G\`((LhPa&Y2+i`R*p/'q-r2(jS4bDf^5Li>E%2C%9"('h9T-?VC@*
%?%\_j*NT@(=snSVY<6fA.SXh,orjdkdtKhkqhIKN5"Jj3WDqXY$d/S_@9*+B,rB&<ZUR+$-es;0,dp4LAIq2p#Y#8_bRT/k2D(b=
%Q.(_2>#?3]X8B1_Ek*)_3T,SsAu_a^ZT3H?nl18C+g9$GV;Y"8/EX+QLg/f_K_A#oXK@:#,_N6_!Xu2?R6657nO]`jKb+?(@YAY=
%UYSeA"W6N-7E_+ZWkD-W)(1mM;$0INYg!mMk9uW&d>`i2.Va^<-]RNbOO=b>T8b+)qo[KeNkg",m3nh4K\DC-%NaJ_2b#\rm9\W=
%,0Fj*Of$nXLdYAbHVLXNL_B4`P!Q)%GVNKhT;K+E'6_"aCU%*p%28WSaPj/3ZI/(YAP(R)<fMl>os#*1Q:S]`rLF6#g5o:g#4U,P
%5L$,sh(0HY[^jaB80]7WD-`JkkH[KWZ`,%(QsE'^2MQl#`>fWTc%pP<mpn\981XQ6h./g-<\lU?Q)L/-RNu-UR%KUC(jpc14.XP)
%=0@+P5*qfYN-Xl5>gfTD%N-2.TbOjOhXT$+HF;mVC[kGTaQsBqYBJ'ObC!Q<&m'ns4BHQR5\Z2&P-i0Dn>>h`FA8)_[leUn;\O^J
%:^2ffe%[eH2d==GYe$mZ1g4Hu*2g.NqfP1bX";BFA4ib??&]!KhB[C1#pGML.3(^%Vpf.d4okc@\f+1soI-CHgr3+^kRS+1FnM.:
%2:.ugU7rE]e?Km#)&ulT($0H=]D`.ii>HZ-Fbotg(4$FaleLhbHo]59Upg%UrU1Lm7_5]=PHef"a&"Y"0:c^+5sP$O1a/<g%O@00
%'?YL'_6fH\U[;)Nj#Qj<ZHj7A(%Y@`Xi?d%h<B&1VRDb9GrlQXM%UV].92)G.QV1c`[k%C.Z5n&W)<PB9f?.J<Qf>0X9n2,X$Y3C
%#dJ_=oe^&Uoi%[:"4Hm5<p_WD7S%:N*st9H9LE7P+K_!h`f.oKBC_U<iPe^RD<Y4i#Q`SJI1Sg04C'BPSK!Oh&Lta"+Vo?Pgj_nq
%Vi`Uo`I1JL/B-o6:-+g@L&n$UT\A(ORdutq>>s6(kZ9\E^Qp>\g+*9l:[<`:i^DD'HB)Tq:q9h'k+CkPYl&]k0/P7,#&Pe(JJ(XS
%Bp'KO*gKlb`UoMnF0>%t+GXg+9+ba<A$RK[b+>>D9g.6o]aU^`<'q9s`tNTo#ajH%%amq_6da3Y4HA1?qo?FRH>[@7@?)lAIs(en
%#!$Dj=<7sfhhd00.PH,*120jK_IJVXfI)S7=3SIM<&-&rYm#hXCn.6d8*>&nE2qddDlLam0O5Psb8Q4qFj_X^cHQQmb?bc(Z+^S8
%`YO-b!iiZsfF)0/R.^$JaD_\6bu<;k0Q_OhXh"g$;fnDHp,]!M4p/0n,#u92X8.(aHMmf`AUJe_nk%o;HU."Pd^H;6^>S?[iTS2X
%H/d/br7HK?C"17r.2s>%)*GCE[%tj%Z::Qh\XOA5fr$8W$m?do`kr6Z*Jo'Q(/&b89S6U`#>'FmM'Tb+aQqSiS!:Q;8A\>e#L3re
%5N8+CC/;_l"[=>4g/*Z/g"31EGkN:!`=sa"a'B&bA`(cJqLnU`2iLQTT=bt^7Z+05XU-fp-?U!\8F%W7)PVue/R'<[WBd_q,T?r4
%pg%")Q''Qa&_j2d:!&aN;-IteU>q[\+Ake5m9qibJpeuB_(.Cl;b=PgY,qZ6`2'Q^:5L5a;5=Bg-4+lS[E4lF5[I7*a41#hf87"7
%%?_?*EL:ZMPK_j[>aRqu^BFGp'T.H:Ip@H0,/"$=eh%,Q-As7D^^&3PP^+PofcXH$Kr1q[m6G*m)+q_F#)clI"]Y+S@90AV(E%41
%)lCCA;Em?H4X!;$FZ!`cM,4T)64%;oSe(i(n3@]Bk\[gs?]ihi9N!^:,PXl9K8l2A,Nq.7%1GjJZb8QiS?6Te[3pEhB$Q!DqCiL'
%LL16tZ;M\mHW[eP"qts;mO#.r465Ot-7/A4k>9PNea36>\5.IL5_CH0WU:'bI#4!EK3!nr-rEiA]9*Y!>Vc5pm%/B6UpI5I74Ku:
%4>&R2QFBH@P$()LM5n,JV5C#^;+9;,Y98F%OsEdV&?&F)L8`@uHH>ChK4?)<EZR-;h=G\0,?S^8;bl%<gMt[6@W!Zs7b'1XUpA>s
%3cOe(Y-XOML)@q@YLLl;r&-^/p(dnU:`GTNFa^L#.Ns0p]4!lKS8I/iBBLIrR[03!Z+WC:MK>2RhD]+;VF()S/7Ua4Yh6Qo[((%Z
%N)cKNgA$/#fgbX%MEct@DFXKuXYlE:Dlq@!ncQ[d'$".T!4ir7>QL%/iF2IW9:<&[5ZF?mq=#oW=Nn_H+YEiO>3\,WBE"`!&/q^J
%Jo`YJRo\6J,\CGj?.'s(1qKIEAtu[ar<#s7a.Iiaes0;6ci<jVp7MBYhuEWCrtR%A-R*$E`hSF*K=g9'_AsO=&`2\+UmkTg,Vq(4
%3(Ec-YJ"68pJJ#`;;hLK7kO8jIMM$7[D\:,-FlZYQ<NKqmq%2'p?>;tWWV?HK$Y+.fP?uRV%uHV5@<TBCZlp6iKBmtYR\%7@`k;3
%?[m%!e[c0C33''Pe=U_7Q%Ij9eGIS&GnlT<7K#PD]4:!TSD=e*/\`X0*U>O]=t!ju%Z4MLX0X]"IajoYk9F\qB<tss"bjC!3bJdO
%6'BVi]irB!<'(h',D_QE\aUH.l3]GeBV<^^#k^krJ:W_`7KBYa('CG_W:A7;Je!,bjNN_G<C:ncS!=)k."WWY\_O7?0+!mZ^q&&!
%O9Hk#/!1+RB:O9fi+MVAh>L2XnJ]0_56=psEB&(fW0g/HZ<*(?1k$],!fX+6j'bShq!W@lXkD^nhGT\*ahWm;D2:)2A'8-/)B3+P
%:H*337Es\r>8N_YXKmDF2SeWF%V0eY&RD];B":bH\h`hJ)`<\?3MY,[%rEWC[Hh:k5%PXIWZ"E54mA#>!euf,[#96E^.($Z;6N=`
%`'<-$HqX[R4KL3sciND"6LcKQOFQeV2:T>Uk9$m_)#`N/n3\sF:&DD6G6=fZl!`^es."GCdU]+p+3-o0+3jAFEGC0VSAetkoAdV0
%4<O8UdgSpXrXbM]R_nRoX.m)F7Ym%O^&C?:A-A_(JZ;=_240.jIL*"j4etG-![g$B%pS+N/u9<=EO#cM9<7FRUWMB;>8,,KZj2`/
%g;PF3J4.oL@Slf_>$\%,(A\UTMN62W&S#Vb!@+#,+uho-=\qWrWY&gHLZod(,jJ>7r0onW%]7SYb7n@,LY5b["O1$TAM(N\hBO3A
%*1gm@+h)=`P`W$n'F/8$2-I!eBeab#8\@2_-)j=9()]Sj+Bkk[9#cm$Q=!EA-q+RJ9Sf,bI+pg(@L=+-#`%OOn88dW)f%13OIYH)
%&8@2sY7ubLnLqOG&m_qJcNUd%E>2Gm90W+J)N+Z2Cf+OPAks4PlTC6.=D`pHJ=$J*Qj?5dfjmnFKUP+gioaEXe<$\kpmJ)u9t^YB
%TjmY0To(/d;o8?]B3'XLh;-k[^u!LZL"-/9F4eIOFEI9b4$XMel7SsC<Gjl1o!f,V8dq=SK0Qi>3K$0\HSAt%/tm#+(l/1m^sMEt
%*!dqL?Ou8PK2GN0P^>;>>&N;nKbn6uU(XT,0M$O2BUAn=J0[(3%Dpi^6o235?-W30;>Q8[OmVTsYrkA*;]m#=%2`hMGUk/1'$)Hb
%Ag'Q7)=`K1"k0G?%feVp-5pEo)CIOhM\c'?K?W8%M#]P:1O/'Q&_LW/Md<ARJ$=+sg2,*%5-2k`l>8\0>BXI9@S(s8_O&.6N?tQA
%?E0CM:nAgu%-()aJI'WrT/I+ba)NP&9c,I++34=75AuAgf5SqbiuO3?F.WQ>bMhfG4UJ#$@Tf-9Je:u4dmE->6BZGa5/r_PZVd7n
%5.J5BdW=)7[=,cr@_4Gddl@AjU#Ob'?*&<1d@64n2WMsr<Y1jb:5l'M&@9SB-FM8?#:j@-BF%Y*,aC^d`Yj["VX\XK6=Y?K%a3WI
%0:a8W>N0cf#D*ApSbm<p'LPZVoQOB/-9j7;r'\B:pUV5+>`c$#\hur^Zp^p[4"rmRk)F5=6k^$6`Wuurc>AUrPFN3/^m(]Fi.Tgk
%AI5/-;Ac](a19fI9Pe/G@%7\_b3$$$7YO<u_bEc2<9dFaCG^`ci*l*`V[NW5'=kN&4kiH9=D.U+7F9"KMh4THe=4NXap;,[,gCjZ
%K!%L)GV]2_5u^E<?9mS)a]^SC0(-.5>X1,>naen:>O7Etc[GihQS1P"JekB7`>3ll$<k+]H8P&"Lp]kGR)ge,cHXD>:Gh[7pY18J
%?7"4LI9njMW)"4(pm#E;GBS7SS`#"s9AJF,h)ViSL&b51p^,.j,h@Ne4ds-,NWou-d-+"-5Z@_E1qOt-kY6X:.n"L$>RBp&CnFB2
%*C[d#TfbmrPf8,.0h:TB7LpKRR!.'-+[M9bROe^%KX!,0@hkL(r:jO=;rb7m*CrH#S+.hAA)Cd9gpCSRGWg`&@M-V&iMle"Ysgeq
%4h[^`%gtNM@LVE1=b#i)\HhqPd++=:E?\@AJX!\0$=-eNG:-bEZ6U1]Y-"'err0caK(Ta=2lmSKp\jahg[HU]*ATgS031!V\Im7"
%gK".J^ablNolFKlrA>tuPuBq,!Hlnls*.6H5[FH%>:OW(/``Pi/!Wm-&)a4pO_10L!E/'\d'chF["aMe]&=h<QN.ULoiN&o5W!fQ
%.pr^t7\^$W3%N7(,Z<G&i`k!^M`k@!U;,G:OKJZt9%Kd!SsnibI2\!;!9WOW'LH9(BQlAaH4krN+_s?W6E5*Wms$kqD6$gWW*%!_
%k#FN&WRHflU75Af*qc]CQqGuT1oZLX[B+B+OFU9)/>@Gk<sKbiheL!=,4_L/eTbI8.5jhAQs?E5TnA"=[q9;NNTsGBY$hE6)J1G0
%<Z!hoiWl\1\\fkQA"G4H;#lJUFMXMiQ/^H=e#DFN[I%3PP3<sP5uB+:'\.'F3*!8uB!=\8]EBM".!7^1'q:YbC(@To#:`>-Y$f%%
%V?hJLRBIA>iFpYs/-dg^7E?Zk.E7&%V9ieE/1>[.CjZCXg-+<n2W=I?0/=EE:"gSE#VilAV=jNWGh!q>;'KdEC'.@:D\dR`Z!-/G
%<;'ULQ\A+>$B..?VLroD&r@k6<^<GfNU!p_,`2Gn$<aI97ZS%N/*=4f[pH-L/g)qDcU;[o.EY6JaEe!8?Y`g!:@c?mVY#2aYM"CR
%6T>@Q5UhM,OVqB8Lr\KA<!-([COrk+odci=Q:QCp"&&R"`u"#$pNDW"d(U@M'F.OO9=n+oIiq]X^LS@MdrNO3OQIT"ZX9t[FQ!uW
%:@bF,c*lJ*'uPQDaX%K;f!;*1TP4bMVIMRj*NMC#N^?Q=0q[[*DYd4)Wg42VeV8W)1UsEOGD7sbeR>O9?#]77JtZPhnVkp;A\!B&
%e5csEd'o8i)0O$UbHeUfmlo?sQsCuXr#CM(H1TY6I9njM.'*Za"Ji@HX_YJ_IdTF\(2RLu/L!)[TrDr!II?I<)SN>l#rI+9;p(`[
%D4/rgi^WNHmd]K?DXCY3/PED@jph82EmbVRMKl=\TmW!=cl`iMd**3'U2<_LS*m_Erk6YP=L$2s9T@QO,`+SZmW8)^a*N,o#LQJD
%MtD<l&C4!R]eJO_b"+)m_3#B%8ArN:%^D\2Hr6QpHX42B&[oGaeHYpQ2*1h!@KD=sVBmlIDIhdS$UD;UhY9EC?cfH<Nh`r.F+i5j
%]1tsDi$m;ZHL"AelPYIDHTFi'gbpcmUBn;"nYp!]KL/Ar"K9EPamR9[o]]6[;Geff8LGI>%glq,T?VLu&FYZ>-Vgn)VSY?i(Xq2d
%o]E=6.MhJ,M6nP.#rD^d>bJ'>ij&U8BN5MA?C.kW3@aYj[IQg6)l1)+o[W^'gb]"r'_abZU00&-P7SB$<PdXn%u)@^[/uYN-u>WH
%*#=rX%Xc?nPj5/>Mg;nd4BSN>,?2jnkqM(XFF;gT0L'Jk#2N&#$%BYR7b6FF!(3a@jp]NW4*q\H_/.G2`faiq9L%STDMuK/NUDhL
%:4l9>S>[*b45kC%p?Mg_ng<qq<t(Mg'@3=A\j1&qYB6@Z`1'n7288YWi:Y!7qfCZO2STb?b?NrV\;*9'js8qNbTk)'.Gda8:qNX1
%XXIID9nGELKeC.RMf]qbSH9.HXBW#dWV`'!==2h^p.uujH[e]/Jsdh,Z`!2]1l:6eZ6"0"a--,F!7R%:Dg0'f0grEjWd8#j,ZLLn
%Fr=:`20:[O`RWEX(r0;'/\eS8?)3V'QS.N7?[;3*$mVQ,m9]NYNQGaVEmJ4HZtl.3Ge'`;mRZ]5:Nprc9M5D#`cW4[,g99T`fZjF
%ZASF)D,Y-]pL(71=pD@e66S`DLlaB2_F!LDS8:QT?`7^L<EJKU936ok$;HGi0/]=uH3t#o$c6d[1:D^ocsGqeLFsopOa:C.E<MoZ
%<Md;<5Beh&?S2_bEjkP;bI6(4kOQg$6unJeLRr'Z$^ue3lm02]%N2fk6OdPO6KT`S/Y4N/J?kend".UW<eo4!RW4fD/b*-"eO%g1
%[ojr@(COPW0g_S7<<8kNAi'b9!9jHcM![/KGuViZ$Y1eMS($B8@n8)h@'C/'IZU[r/TIm_fT#K2SS!$<@8R#T";5rMn@P85QIfG'
%b'+4X#XO?]=5POEcTKn27ZlEnd;d/,`nhWh,*u3CG8aDHB(DnH=5DdliSAKTs.8SMA#MmST;42Zli0)BWU>KoBCaJ$rRc"/(UM9(
%]R;)*5E84Fg8eoZ[Aib**Ao",!Ug/eXjgHT7_%KmecT4gGcDk]pQOib`33G!]."tNX='T*O#Zr,o(9WfP9H^7e_`UD1T>Zd(r*b$
%INQ#Q;X5-T"IUuFDq@#7+W%B9b^@0K]_+5JH8G8m&$AmSH2cU.pUt]G"<fXf2#D54'Nn&;GSpOMW9qiD#0!<t:#$pao*kW`;K%EA
%a<"dG;6`[>[TMn<dF9GLT+c6qh,_VcWO9qn(XQeYgejZG`RE^1&@Dq6b5Mlq>eY&.U(ILu[IdAO8V(&]l-!XAG8b/>ZF@RkVd1Z2
%dbd&H6i4"AG)g@rb8L(k+t@Ns=&:8)HZBsoM$['[($10ZBjXc3=J)5XEhXnL""Y"ZUNM2O=iWjGIj^4L8?&72KkJrHQZd*;!+/&]
%0_W.qs&LW"22Is30[(!efsQp7X?@$GhJamR*."842V%OCW/8'mF&=m67T95#&oMFjo]SlGaJ!Ep$lQK:+06s$OUWUr=],EmO;(AE
%oSf8:@Em4eQJV:9.?pnAdaYq\9"A]L8=*N);1DDe9FU<k8$%[T[uI29j"+k"M+X"4`K7GW;6#_dmq^IPDP,?"/7,<:UOjfKl>6Ii
%9e+-g,,U[gog6SR=m!@'\BX/0Z-;V$`so3uW=Ckt!Tp+TZ:HhZlQl3q1H`h';baf+oS`>=_b49'#.iqg5NJW@?PQTLK_2;`dE?AA
%9HRC#ncb@1S5Tb`7`#a1^cZ5*npO*JNFXiqBA6=Q?"pfD^jtkMmETn$K`-!F)&8rEn(E%PUE6]NoJlD;hTm7e+fu1NZKs1,KDMkC
%l-Fd)h\upI'Pp*n>S=hDBn+G5Q!hqFQ33^;ooTgo\;n&^Nc>/S@VP,A,U?>f@YW]O?!3K>\%)&;r4O?`m^$b>B@mR\/_c(Vs#Qp,
%1ISH\>K[JM!&6Ah1fmj^qq!`lU@XVaK$uf9Yp+)<"+1dLb7>XnVJ$2[r1Reue=+Nk:ulWdXe0^T9=.l4,)q+q4('3K4<rVA?X#f+
%l!=f.AJ,(k#(MM[9p^SOck>rMFphk9N-#*r]cD^^[H[CMV2=O-LWu5@i7D`p_]486V=aEIDnUF;fK'4do?%G/HH=JOP+<@J;5?u]
%/)Bu>.6HK"5hDK>"`Wqk^$o^frh,)SiI7@lcA^dGV'c!A4(D>XoSTHUo*H=4EUe^q87;VO;k^I2n4KH!&.-3aAVgu)<g*>9agrRs
%eJW$[/EMj8QPqe6*-[=Z>.kI<1R[GH:!)YKB7A3Uc8[D2,]"tfA7!Cm;#@V<@2BVskefhAF5lI(lC%2Z;iU,uHIA.%8-?f$#'M02
%CKK[V$S@[\m-1g4[o&.Q$cZ@phh-jlKHtR5Ah/#Ad8O-sW(=CPgVu+P[UHtSWA/q?bB6W!rYR)+_IKI<*??eE,&o2fG7rIonkqfc
%EuEBLFdr4#Gp\#8Eo2"N-o>ds7@2ehPbTq&)X*O%Q:I)8`[_'or.hkYpE+48#!ER--+$NCrUl1sE\n*E++*rLWoJ>jc*[9$MC<B5
%qWmQ2PFrO=Kd@#S,^ag45n^:69ZIFm)^>/H;0_XCM.n+d#Vdj<O,O=]"AIZr(PF3?Y7-d^gKt!77WMR=d67d;!7V.E^k&AZLmP]a
%UJ:O[5ab?@2Quuh,Ph1;JR=Gu`T`m[K6[=O]cTslrk_i6Oa\M1!n]ecNQ"[Om@YkOI=33k!dltQ.FdjeOPC4(K*Wq))G6?aTYSmh
%&7C(L6Kn]d"1@JSof\VIC8K-6Rl(GpB:L@bb$;D,I@?&?r1cYca>XghFPU/4q!FT>T;/uD<gSD8'o'W605<B9548;c1=_-!b0Kj5
%(o+$VX*=n]BT<(i,tc]'^64O.7cO0Y@V1&#S5"8tbL1RJ!R)C0*UpS<M,A49SWmYmG(teQ_nr^QZV/E5f,/lqVRtZ#D0)d@elHmh
%j`".Ci`6fV*2Wn!1TXu9/cHJ+Os-Wu(6q]UJ\^(a)%)-T5XqqIJ`k4L#3QU^AIIiHB%"!6-g3Ej5R@h--s&^kKdf0-=<Mr7'rV[E
%SWu2TaL%*2qa>S/DMLe7;X;YF>6qJ^5Mn>:[Ruo>BJUIWY"\Og92R1qRI7/'>P0Rpka[l%[V4MW9o$?f[Nb)L13V%Ok?.FhZ:Tn;
%8,N1gL>AR.EbP21.EPn!B@eIn)E76p4]$LQC`/VRL+EHi(%1<i+;q).g!V"G%l.m<StQu=bHUVS10Wr!?Cf]0YQGIfTr>"[<-X&0
%$ufdVT=:A6$E#s)BqQ$+e,TsP33\**.amV'+"PiL0r/ngh9h+Q?!is;n[^JjHEfA$fi%?sI9-'0q'e=^@#Ag0onX@,@VrT%,c)f0
%jRiY)e=Erq,\qLYJE5<^p`Ja"?E`r<*>7mj.nc/I1c,Jji_ssTc/h_QAuVBh1_1'FH*,fK@C7WqjbC7&`@[bN,m;OPB8Q1fTbJa=
%f'3qq2@G:1qO=:^E208T%7Rn?d*qa3nR`=7fJ[/ae[`"#%12d36Xc&Vccjr/5Yb@CTSg4i[FQ\jMaS`c-<k@f-sodl*J.b,AjX-V
%'QlZY&S6K16AX`:\7O$Y--j,5&&5\$edLAZ2q/-]2MHE2e9!8D@0s5>=f:cCJ<Vp+JX)I>b*s]_'AnJV":j\h5_h,"Zb_a%Mnm;4
%,4s-KU#DH2hhNa)mfkM)j`bUR4$f1;<CqRTVF_fkkt^Wt!YLO55_X)tGbP@U8kNLM(J2%#?n^LEiV\L.PX_al/iYs&Bd/9Gn\]X`
%.T4;m<Ed?5FNBcHjD1&;f&TZEFD,Df]0CNPQ@f2aL?OGRTi0-:k0a*h,u#4US^[BK#i^L@@43,\8MU9Y)t1)Z?9@MgU],G)L.c0u
%+enQGL0=2"0a;8\fd?aB2lU8;P[e>HIA<\5#nL<%jg&>MI?6)'Z$u<<19[J<#El8Wh+\]jQeWlA9R1=m/B<aF6<mR!X;.A^laqnW
%3:1'I8t3#Ve6$jV;Ae):KgbP%H,uQQor['gU/4=TfPHE>aeEq$)%rNr9F3(P8"5)9WnqCs.l&+*0\s/t"q<^ZTiuMNo2ugr;^3G,
%96T*<``!dg0H6]d%0E1kZR\?L845oQ8gfMNeHXljiR=NC09]QplWsV%+f#h:?mVpQIX"&ijN51AJJnUnp=3]c`o(]F?").oYC_SB
%&cf>KP[HLVp2S]>5)?l#A/pB;T4Cm>IQ)R7i:Q5+;5(gJb=r6F@VG$]890#+3^rN1NEeHrCV_]i8]=W%2'g2oCDG=ZFT%f]YL)T%
%;pXA"/@sEk^no-X_tpX^$lFCm4jDM/Y(^;MMY*!+,d2_6>_U&@eSPf=S8mn1gG;j&cmsk4%YF8XoW%^>`<$.?J\JZ3HN[h]al.=H
%a4/CafZ5Q2ZomSTVhLo8CMZP&9,g,eP3t3bS$N:"i(\f'Bbk-D:DA4!?<<b!h@/mQ*C-ss2&C`ArFdq>HjiSSO=A>O6=nU5*e72q
%-$*h_7#F@f6dN:&/3@bhCEZq[`>WAbBH(gMd4_VT:BL@E[$;fb68oC2r06*r;1/7eJH3A/0+":YT!5%$JO-^(;:;DiBP)&$gDH3b
%dX@.Q=kjF9$'p4mCiXK>D-8bR-dJ9r^4LKUEbC)[#h[6=Q;f1ql85oE^+J,15V;.99pNHhG7+o%D/;oCqAnsim!<GFKj4VFinj56
%._;E4En_as:/jhP&I\KTh+d'!9rsMJkDZF^bL<\33)JUgrOg-b3$p_7H2*SF9_lcSJ4t?<1jc^fAm*p]"NuBb4)+GZqBsP(dAAPm
%UA/liC9h;@hFTCI</sPIi"(Egk_I>OSSIuUEn1+q<H^@*8%0N+/]Lm$2,H3rM--DZ',*t4p9's<GtMSoh`<'k70e;fK'IUrkX)K3
%2&3$SHe;+]P_pQ[*,R\/5B)9Xk:QN_L]^_S*<b;='[<2qD'I1,X-9iBUT*#JiUg8>UuOdi;<jes3RH?Q92UuiaZ`":2/2EaIWr4L
%j`9#Ui?hCnVlK7t:A]tP<[bY+4^CrFio1LW_Zk&gAEX,T)1(XYXJr^b0hsH`Q1XuX2Y+[t[AF@32AjAK>8Sg.TIi.Cp8rpc$Y7J;
%ocjj$C%5AEPnLUI,TsIWDgU)?N7d.TF.EhE+>\u7XpQ@>)toMjaMM_R(_<#I:L9=:_DEbdq-,WlFiTZA&=NE(%`S*5HOV&$Jd'+;
%H!CkhT^dY28s3[Hp61Aom\+*%qFH0:J9QAl@A+iZ<29KA"Leol9/+jfi\7%o9^akBf<Qu\rt%pE"P$C'QaP'N9ThpnKg0:rWBRp3
%)aaO$jDUFu&WKU\.iIJn('b&u]Fah!bXFRte14RN#a=kQE7:$!1*A9-ULf3PHn5H+d;]FI2'SDNkgpJb@RY%:St(fh$BQ<eYp^$;
%;s[Q!mW?/pcpY%9gk'[&%0/SVF4jA`17j2SiVFij>R0]d^aFLhe>0mJpALuRMFeaSA&5g@`0KPh9T=t;_%\.e)fo.djCAR!nZXcU
%E+>8<",heX9tmSZr\K>a3$oqr`^@=@..0)@J&nm;9g37ScJTRt7&tTMWLencJ^f"**L5@60)<SbaVJ;.EiiFuC`GVJ'_OqQ+=Ssq
%0h@JCLh`cX/7NO!$fG_iL*R6u5oY9W-fo4LpFLK7:6iQgY;qKWZ.;9eDkOZgUA=HJg3>@ifiP?qZl_FW;"00Y_qW_X=K#a$`?&FB
%cmk>f$9:J3;MQ)8G,@,JSaI%&Tj@]FYlg:p@$'2K94FPZQEk=Vld"?WTu31d]7>.aS45\insBY[I5fJ28bp0t'p!q7Oej2`.uZQ_
%96@<B,Ec]Q8*j..qHH!BH*/a6S5'h]`nH]1`]MqF^ou]\V"/YKLYW)Iq(Ee<T3\8cQRsE'cP9XU8<:c,)JC%AVP0r>_&D1^b*/!"
%G6Ko:5j3))\"iEoXQ@cj;1Bc7,.nDHS($GNTI,3G%:&;"*#9f"7oleQq?MQ+[&6["Bon)X6@@jW[g(N-0o86haM_@M,tbB[#3845
%aPG$gmI[S(<dNk0CY;E*To=O7m+D0>TKb"V\[0sI!Rm+;p*-/;ig@0mlaU(5L-pc'AX$Cq<`0m-fF+g:EijrT6pPNU.,M.>glb9K
%1H.tD<_@C-c:C>9NdHg.;++Qln#8*h%+=Ah#^DMO8o=6<PU?9RAB5:n?ZhbsULZM>RYKC<p404W=AgQ"eqk/`W^i3X7q!"EgN!"?
%;%$.Q^Oe39(!<Fa!f-P?FD\m_C3NgI18q+]1.`?#<cSjo@/\7<VJCsCR?AZJ4EP3*;1p0+]2P;7`%I*"8upOm;1<h)SNX:73S8Cl
%GV9XiW]n6JrEAYYRcIil8]VL!*@]eM&u&T3[LmA3U%W)`.bZ/C+a-'cG\][uL*Z%]-L6JT&KKnt/U9)"k;\2Wr@p=.#a+>Pc0rZ*
%:A[hpau""p5dXXd&i4d;!]#h%4u"m,StAO/,$led2i".(cUA=$J%P$6_Us^^m3'G/#47"s,3\U#pY?_[Of6@.ggokq)`ET6L<U?i
%*_HNbe0;Z--2]ss=]>I!aiSk[a1ZR0b5)[4)2X97qb8>>VW\b0U/(M"W$T:+2.Ph1mVI<F8p(6G:\?ZWSoSX6_Grli%`,Jb"u4Q&
%g)FZ/<n$D2H>#S\V]k>NG2oa4/867Tp0N$&(/Z<Efqd$ELQ#j!m2eS5fuYW`HE8/q#.a<5>XsU2"@jt?%P^K,:/gc4N'ZAbC;8!,
%bZVW&@QB*.:q5OAf&MKn@kI1-.@u:]GGXGWLm^uO,6G\m=0XpP'"4(t3D'5u`"5:OV^M-p&s3#Y@KV!VWhW.#>9q6A$a]!b2]ICS
%/\AI0W^8G!%#m`R%.Cb:ZD.n4;TQd='FNVW:p4?Od;D_h5Is.&J_&0?iL'15,/8&We4_OEj9G9CM(#aF1"AOpFY#<hg2o1CPDK^D
%Q\Th+od@2kB_[^%Z;"V9.K`?&'a_Z9qOF@#n>b#QUV9FE!^[NOf!-]XN@ZSU'=!uR=C^bVh?>.?3M_/FB^%O_:l?@:rZu*2F;DFt
%h"GC3elSlHit&:Hk=rH8Panb_GS3#5?U/k7Q*]$>'3e4sjCThSi1?\_N+SJTD"[*[1oTlj;]LP?Fu@Lj(`&;[BqD!*oiQGjG4U5G
%;]1L:IS2/1=k?rY.0IkE4*P>$^*teNddH?K8fu[j>d'A--p,QrbAY?/;fn9r?"?BA)cLX*UbU<QEQSdMX*Z<E"`jiXfl1T!q7=!d
%>!BN%k0R(NHd+T'>PM'+A(i7He"RZ-X53^MH+]%L8AJGiOaKD4\f^=ObQhN"j?<7F+J@]gi<$;9)lpVBfo_FM%Si3;AW1Pg*@4Ya
%l(:.LT@gC3lMVu;rE"1ZJd<i,U]ofZduB0V6MZDd;]kYh.`5)>%o6E-==C5m9``3Uic6aHPaCH?=*QK-'DO!l,m.>]'2i8,nPQ"Z
%a7`BWa]qb$qhWKQ=CF'V14Lcjn[fU=MeP"T-c#sH?\3k(M^Y`dX&n%NW0Va%[CTO4fm&CYUI$\Q,migsDM6m9p+omrGVBgu8LbNd
%I:EO5T1P>'24+N3V+6KD?.#*KRMo]%T[4'!_'SF"*heC8mi7<ebsLBVH@HG%,%OR;bgD00gu,45k-"SanlI=u4UZo>VK-6)XEu^p
%!6Cr$#Tb@i'ZGN"@U._jjYZ7<qS>T=#?!mT,1];o--=+j$03JK;2et0i,9t/Hf(:&mg/ZZM,I's"Ml>8U$^et\7c,+2M-'(OB5A5
%X.W4q;Rm^AA`At04Gj3+OpNk_G,hid'fV9N[5X?$ibMt.mnt25jt=SkF$`?B`3O<!m]r`)]?A"SWi*@EEIqGQl-0$oTDigH4_sdA
%oAHlT`)OM6E65SoXJq*kK3<!W-9L-VfRj]m/\Tn!J@uCjl&,4%ZjBKgU%o9Ql>g^HE/-]be@1&WoJ;qt.;CV;<d:+q9&4^ts4l0=
%LNU0qA\;#HZ#e.>!YB9FFl,M^,?0)JQcgF`R7r?j$keBNUG\-fCasg]GkF7'X!:/.N)FcOVE=%fNI]]RCeHY]SRq\amXgt_IRn-I
%DcN;s_Rgrlbi0\QUMKR`*0I3`,X#e7\JLO@Yf.VO#-Vi2RVhg>'e/dmX1UAJ4Gr#7AOSJbMh1i7Z*8b+p:<EYZ0,KMNUut=d_YW[
%/K+?R<G4$2%Ir5sB0"g5d_N>)=07WZnE!.Ren<Vu]GOhV`"'Oa[,T'>5X[VTVHC,2c]0S.]N4IC/.?5/6b4(0R\Q<38%Y.Ek\LMU
%3.GspO%KLI5StD@#]e&sNPudAPG#-Qr%:/_[Ti"L/I'@m-_ICMHE]8Plu.frpL.F58T';N8!AV%8RG\t,fuBKd[]qk=lJ>l8jDS_
%>`@$a]bgGeMGhBNfb#B&Y*j4eRPE9NQL_c7QL*ro0cgiP/h5?]fe]jL:[&ba_)'cQX\0/l2=-VUOh7n$/&RZp5Btjghsj<(GR;QN
%MG(Fk!t$qMc+sc1=p#>@6A`lP^TqH#;BZ\B3D+[Koa>'ZMO#fd1t5]hc#-\6WT$+]_?0BIVTLP!4P<1O7%!@2.Qp@@2tGTj2NSqG
%gAe1$4AsFq4^jr!r+I#b)a2m`L=^BFV<COj#A.=<i!p&WK'a7"n.-Sq'.U_Sec-:(FntUSs74q%XLGJ+UOW:cI.eW_Xa^N#LfFgK
%rLNt5SJN#+qFrdXALdBarrHYYJQ,eL;Y]-6ru8F2=2^5E/Ss=ZHF/2^WY3W3Ipl0!$Dc'elGLL=6NYc__jY7lh]W.9Po7j`eC"M7
%DR$<rVWUWJGheHC7>=/<)UX'N/S(pm.Y3dT_--:V>#Lk=+#Q^u'+JX'U`i0JH$H"YU]^d.9,^[%4g7Z>BXPGEP9+P*J8k4FK^V9^
%I,o-ag/u,RA<Wf,.Q`Yo=MQ/@2"OJg[)Ef*<Q`0VOW7hjK_7[%+qtff=RCO>E<DjXZ7K"-%!&!$/Kr.j`r4XNq_bq0.j`lB*4D's
%%*63K(A!EF8e2Ir.@%p"pds(a6s_>W\"?W]!r5aNbE+kXrCBiI-nSW(!P'G3Ppd;G(Soc^pN!+*V4L#7KL3)I9O"ZMFJ/3,=71As
%,`kqACMK&eU<aAR]B>SR%gM.)BUsk#Dm/hP@geLP;&ZYF;/>dYZXKn8%L3K`.0)1r.1/,2Bu+bi2/k3[Rq4[*hm,d+Cd4DT=X5h!
%J;@rR5RdN]Tg:UG04k`a7dA#(d_-A[paD82"3Ittn8!6Ga84_u_&(H;l@lI&27>$#<t]X)h.JH='#597'r@r)00bh$?QYQ+8T/tH
%?o(Cbg7JY*;/]Jo#k+[Ka6gK9H3aaYc%b2O!M(ULCb1C#=R%G2ndoIb[&S;4[F30.+f[#t.iY%M00jI1dKaX^L4D:T5U3sI:hu\8
%5$;$)iJiL^Ggg6&50UiICYshPdcqt)S=NX?OT_m"PsDV!XJ@s_>*Yd72<__*"cYJ[=ZNXVDpdme5:bD/k@nLc9/8R_e>BA/[nL\U
%!,`im=8<?$@=iN"bWb8qBMI*B7JlR(/bN0=.<k1Mo(!TgW^8MFjq^'iDMYH01(4.1P:e8FWSMu\\Pf?=2-W8hQ29u3!DeVfO]Z_G
%Jlh=%G&o3hKph)WQ^OJW;)fJ1=[I+,Gn2ds9C]7b_'H`6.=a+<ARB,/VJ&@l9fn5@0nsSAWDElqR)@^Y1.%^&imt>PV?P&h+pY8F
%<U<:YB*Kqf7I5HI%`lc_6_JS56KP1l[n.LVB!YNOC(nRg98RVm$5;H:mX3L;/t<d6p,^MaY.H7R!+M*@PP3'$dnT7L@,C)G(t4q=
%ok$pkheZf@9qt1IYDO5SXoDgn@TM.q/INn[eRl9=l<nUk/LjCVOiehf#Gq()Ik6\CCj."d-$,Ba,Ka>/!=:k]3G'38lk[oBfMYU6
%H43V68?:Tq10"99-U*\;8cLB<PX*\KZjpd3Kn9<pp`Lo744E/ONXA>[ec=oaMC;Ho>Q#8KdE*pRJPE5_?bKOC?uHPcOBie8Q'MnF
%12Jm(@%uB/4;-Z![=8sP,?4H6-ACrCHMPA'\B?ZR.s$5KM14(UJm6noC]EI=e_,Q,bYW?;T[M*QJrXCF<fu729rR[Wc2fU1L/-?%
%Sgo&W4b^&[D)0Ij5O<uuEp.$NJ.fXk/C+@](.5R0&%EFSaKLp3?9XKL3.+R6h^CcD1P!K^;9?$mgU8M::mD]R?@<;&(:M-bb6U,@
%f:QBAR%ZOAlTfL-<XN8M?O2Vo[8YU4`1J6ARN/c(:4?lZKUiqpCuS)-.j(H!W,GnPg[+Mu>u49+H\$@FY6fW]G(+YMV5b$J)ZQh`
%Mqt_n"[YhekT6)_EtQW-Upgst)d/Y4>=.H$\tTN>CTZ.HC"eleT>b/9E4L0d368U*GRdX:P,kD&dJ88=S6E0i+S<g;@#^F[^#afF
%NmhuU\$:TC'XuJc5Nj%j0UTiF_''M-49T[5L,u+o54Vm7*scL9oKasXJ/5T(gb;'!!hQr*&>jn8c=Gq\BT`Uj-)nit[VZ4+/rIh^
%na,"F$NYK,3YuSg[,%8k$E5FMB-"T,Ap`A.;UQ.a)6XI%2&h?)5`.u%Pu+lE5c3TlFQpYC*un5f#t'U`7[';,$-bl.NhK`KghRiX
%5TmO,KN'XZc(S1U!)gr.5s]m'm:,;'<iqlt=H0.uZ9HlPoa#,ipk<cF@/j)Ci=_)7V!kki_K6\.aH*8)bJ.<g-7r=Z3;POB[7Nn&
%!&2)gkf6LAFCXmuDqc^?Q`r=s18A'/Ti$uq46P!fCY@>XguND^oTbH?4VUR-KIL$4H#]Y^'\ZL&(6AD*Ee3rAnD*8-mi-rJGY5V\
%@djl&YB=JtREP>i$8PZiru>=ZXno[Li@jOd4JpJb2@TB<7#DVqa.E_Smp%uIf%l,Q!J%,Y=YHtR>`ark$iO5U8[6PjEZ=j2H[pDb
%/2/>_LKH-=D,;*]j:CKQ9I,Qbe^q]R5SP,9+Ll>Aki9-C\Jr)K@\qG9;]@Har'TZ+l_1D,D5/X!)K'V@Ae[itTWqO`BAT=?1bsrV
%4Jb>/H)#IHZ"uDj(Z7i7M%R+(KNcM';/i$1g:ZWM[kdGUi`U*SUl.'`QV/82,XM)u(Nbc7_4`3V*Zh9!4RA..gpc`"?ecoo](0qb
%1T_B\*N;/sS%k'4)]YT`Jb7ghHLoj\7n`#'"ERL@SF0WJI2II+_7Tafb]H]anl?;q4(RCWE$$i-<2k0u#*hV)TSdoag63%qnF)?R
%MZ*\Nm_i.H@1WfQ3_Upe:;M:1mO2mg!`b7E38(VCq.tKT_,JK=(`TEr1S@WJW>%F\g`5?%Onu:NQR2PpMYReI%Pq0mc]MJC\P`WQ
%35&g;Om8F<B%EieO':&0l#l<BN@`j?25F:WeYJLdap^jcSt2a9?k7f2B$F^HAHorK,&<707BY+<'D@a[U6l_GWT*+rUmD*;V3M@O
%Q6Cg`(pA.mmq+GTO;EViHVtI>%lu,VidIsaD$.d(mR0?hXOo*iiXOPSjLbC`[J.h,*R?%#d\^%t-:TKU\(6N$-\=bgS1ELl0^=h@
%Pkg8>gWe`;gTS%@T'\'JA1B.PEE!hAK92SOAtWF5W)3GV2/gOkEeqTYSJc6K$>,iO3VQDd'X;UsL3>=7r\PL6P![Wk3JP0(3i(n:
%\C,-?(+ZW5(`PX.>(3(j.A^)W2"#9"Or-P/\.^=K4@BPm%[Cl[jH`q3!hE0$V(=33r2*;5-#QFe&(@$DN\ZH*.VmCLc5B8X,Q4%K
%Ifc7Zep?O6h/>tj8>?4_e;l33WePZWn)#@l]_6t)-bPqV8)Xf:G3r9"13\B]Y,YLoN0Qr2/$?6#<Ep#[?]t>$@U[NVc4PUbOg,PA
%9;a)o9\:^bSE\@j.VO)>>(I;^-sD)pg<F@UKfKj*_o0fS;B[?IAOO5MYHAUdKufQdp`f=$6cBBLF_COLo9@DErcQS^GZP.Q>SIKZ
%*KUD@<J*=%CO$-a_-EA@MZ?4BYruW"=O!LN:9gl9l@[iq\$`9UeEI5e2isp`dA.7Y1W-+m<'$DJ\h,C32g:@nY3dCE#&Pj#oG3!W
%g1lYJB&KO=Pr+hX02'<f9^BiG9ZqbgP?(/!XEUZ_@'eY=<Cu9m%"o:l\A5RVd^:1A!8tbh31K6Ycs\pi,38".4gCYOO%5-M?TQi'
%!EEogCN+p#+UFbQH/tf[ZKHj?O8d,+ck_@)LZ-2B@R(^VP'aOf=]K<*4@9SJ%)J%*Z5?cZ[\nEG,5"=.XBu-*H+%1#`N^n*1khhP
%BDSDNMrN,Vjoh"aIJ+5[&mL,7l:*"+8Hf!dR"Ec%f\qOo-qfEb%l%RqkgD-m7mtU4&Yg`[&E,0E+)DRG=(SG>[$`ach+T`HF6>qk
%!u$pM8l`KHAVN?NU@;JMfd`C5X4*-bFK%9W&,,&$Vt42u'X>@M26(V*1M`C0ie)'/bq1@Sr\^"ZiPMgr)f(($deJ6)Mo??[aETn?
%m6dT;SA9KGCb2VT`"k!6a5qRqag2.a%tjE(;!6[Q'M#Y0b90WHR&>:+UL:.\Z=pAE<JU>Y;-:s.?%]s=/m\!JknZ8\`?&Ga6#aV'
%8XZ\t[?llugS)kkL>qi<6Br4Z:&[Z-=rS%>kbb.1T"rFI8J])UU#P)_1>Sih!b(1=E9\tn2H:m$%b)NqI6D,fFcJ'ZWrSc$joKCt
%9c&?q`Ml-H]-eO!T7_qCGhfl*Yrn\0(5Wm-(S@lVDjuCHP`o5T18Vd([/-[n.;&.t]7M*ED#'mW;l*MAFO^L7_\XBl<#*e7^[PYX
%26cL;j=1dD5UNs/l,=n+MIIU/hWH_O9Eh8m%ng5N<iU.U[-H;O*[WuD3To@O*lLW@m\H/"&^%F5b/3u&7c-scGDnCsO?7,tb@I\9
%D%5nJMf,kuT"b1=*/a;to4fU(Z?K";gairO2.S"ip@T4LLT"jP.HTP)[Ak-R*5^aP>27U5+TIc"(2S";)0Dfo!dVX[WCDn"e`0"e
%'/>9#p]hX>L]Huhit#h>n*QH=R^\?VkmBmF-?l4U&0;.0eMX+m2jq$@VS-4nQ`opIRPo-[E+&,!)UO]n5H#J?gm'9fL7u2ce*`X<
%j2h7tC11+R,^bX3ak0*/0e^^8NjOuC%a#HG96H-j;.4=E2Mq)_3J!ZS>3>`J[VqMiLR_bVX!$uM9J&-8XYrCA9%I1Mj3_ag1(\C=
%*$d(K]8;K=0qh^L^Hj.Y%[J']5KaaoK`TuAA2IVJ5I=1K'6t*P@J$G&i_TR[kl:G4"td!n+>9]eMM$qG$=;jc"0fn^Kkd+W(hIB&
%C7g^VLI"e:Y*r=09le]5P;Vaq;GQCQ"<4qZLBKbqrI'u6?\<YBar9$V\t9rnnaW"nC90mrDhA\=T#FMa_EI&<L2`4XO7-+RH]F.S
%GrO;Q:\HkGEJWUJ3Y,qjNr/Ek3o*,"So$DBU&YI:12"oQKom-a(H8C(`0Q@el7"uC#_,8k^&a^5kb5BLd'f1sA!#5jAV9>4&%:#9
%ku`CZZieF3UrsMYD8^67OV`3eh,"j3KO,R/8s2rSp_bh`StW[W^$(IX^:N8`LhrMHiDgL.3lC93OEks?_6XSfH)8&7'<<R;PBEKQ
%p3LKTZE*:^N<VObA^Xi?f)_iCRg>a?fhCKe@5_AQe1d[Gp$e"?fqBQDl5N$,'fCsIB[5dM3KIhu,LnkTa*]\cU@/EPC2Mi6Z.k>C
%F\<8c$BP;9?f0k2_gDH%,O<4/`fem#)L56(XH[JeRJX5H3h%"VH-!>Hc6>aQ1b3oErJU<b>@hOBqq8i1-!=8L'co>)"0::=(7qZ-
%SE0WoqCLA5SM`QPA2940.n(Z/In??)Z,3R6$sU5aJI'mJ./Nb7>Ug[J34kTc.H2W,lqJdl+VHk3;c^k6.7/"tPE;3PCc`:'nN$nC
%71BFd&6u2`58-OS?<_!"6tHD^lDN>o7T(/s(RsTrb;2)Ri2.>YU$r]j&7+ujh6/S8T5+Am'@3N8(a%4MnjEilDKq:<,m":O)Q@XX
%iat=VYO*T(?=as%2]4q<_HN=:Q@2]\,7*,9>^#\M%6lhOOBAB6^Y>"qJb[>A06eus!DS?cFm"3k_F^6jOX0?>oC*;EGX?F+>E7HM
%PqeK(o!rq*Fbs1i<EO!\?*u+T]K-K\;6h$ms(LZe>#C!NGVLtulo@DGL+Xh$QlK0:VPSuYa?1(XaQ/%Hk)MoR-%m4!/!![oO/eTb
%'$hkS;N?<<%mQa#Bm:DmBF,]8]!]Z(H-&.`*Qs'bQ">-Mc.7?A3dj7nkZFUjp/)Y[_HJFX^N*"pg<H%f_aS]hR6gLPrKUHIn+pp6
%l%M9lAigN/.9[@mRH#iA$!j08YXiW*@s[$'03jU]QDt[2jP3`6JL9'lA\H("#.2!+A[E1B9u0$DW<PUZ?/ekJdS/UTB)2B,+->9_
%l\^pL\a\2nI*=:kE=cI/<i^GhrdYe#nXU*!_WPp6m4"+l//02[-/mR#SU]&]RuCpj3h+dhBU+,JA^fQ`WI<800&;'^?l'WV4Hq8N
%LZjX+c-p7W:<W][1<pVP+U2^9lL0kCBW260nE@`jAHaNEI5r@4R_YCa:03]o-;P;eLnLjEOdr&%Cu0;EdRB@48pH"n,6<HP>$<LN
%`515L+]3R'0<elqE-u!S197J.P142T.@K(\gA:!(W08tEMcKSJ&%55u.eM2F1]PplpS%4@T-cguK0'^f&Jh0FSI1oQUFlf""]OY^
%*?^DBU`RH-;BpZNZn.`.UnGu6O\gF4XL*:H';t_[;rfG%D:nc=WCM2(cE$7Z0ZYe8p>Lp%FVtXLTs!U:FG(_3]kA4j[tY3#>Sknb
%;EK`D$(51BkYMg2<E*?@mVN8bj%d(S2\M.o/RhgQkS4II[ohf,[kP#h[^1b(E(*>9ZV3qMo>m]@l'h>a6[s.ckM\AkS':Mo[*Ge!
%UQJj)\_f?]Rc>K3qGu#Bf0)UFgWng52AE<3$HaE-"nFK'e_:+(1i#Z^*op..r.&%0ZFG]Y<OA=hC2[@QAS1hFpZC!%9e`Of_^.nh
%f=Jg*E]_0S?rGX7E^o)/)"2mRN4IbD64CZ**k+@:3MUa]hrS-j9dhK-U.m[XXNn)p9G;TQpf7hH+G]HhGbRd7-.hK=<Ma:M+D+tt
%kq`ua^tb]:?$ftLPRhdBXXX]STbb.B*i3df`oBE,`MI2p;QpM7JAta;+gdaNeX!Y8A:s;oKOIh%(k[?W_If6pa(LtpSgSr;U"iKe
%F_btA6lYP%9F7m(85QlY$8#ig3P+V2=9V8_?_A']%V,d-#je_t[WT0!4G`2rQPttR<#8np%QbH!B+>Ac]7YnAL2(%!*(Dc75NM[d
%>soF&qFEDG542I&\Za'ZYaF^JG,c6_g6<Z#!+/qbF;sJeZ&#hC5$+d#Rlr@h3\CAjs5!l','GUG1W8Js$Ih`.`'Xu4l3mKtZV9++
%[WG7&Q^JJnaYm@I4G1Z;3IZ.)9%%pe54>Bcj(i:E\!p;1CeoNo`3hE"V_?aEUMY6TY]qW&.V'TI71QH^U$Ml#1ifh_kB:1c^ADF5
%C%,6m"M+0p>n7Dr[V]T,K;Zh-'9Ktm1?dAoG>0AtLUeq`m<:._P7d4N=2[b/OX%m_EIt&LG=)Z\3.B"h[_.Xq%TdC3:tWUeOQ&]]
%4WmBdiolOO5'u#!mPgH@W(=:2Pqb.M]W,SslKQ(=\R/g3PqYXOn>+%M:(TMf8u!f9hs"l3WiH9pbksbin26=PR#&[@+ZE+I8W)8n
%p5F<RD$4g>_HX(Eoh`X^]uL!4K:TNY[m0WSIG_b8@oc<Bf[9.(3^foaW/#12m4mjU!\E<A9)2SjBF::'*"&76W0!c7#n(X0E.dF6
%Ng1qAN'UUjLLG.h\3clDQ@loj%LBe+L]RkX\0L'Y^4@E/ULF/Vo-!@P;.-@![\&';f?Z;,^P0F^/<\H((Iq90Y%@A4W6a%,N94BU
%LOf%a@iX%S:*&`a>I%Q;8u@Qk-)Cdq"b>d_S0q<1;H".S\:gJf*dr.IWV=8aTG)uI"9keG2p4uo+=:++kmK)/)>)GG*2M'AJN`2h
%e;=LL5M=nMlk_8mG2c6=IiO4s,=@:@V7)4Sij#>s(hO3.s8"/_HHcXQ>@11#;FRUE)nQ,Y]/BFga8UZ08bA_NbjnTpe-E+:nMXiS
%MSO&LYR?bQ*ZdogJ@Oq'7ZCS77&8W6Pm?:)>(pgu3/(;$VF3Ca<-h$2:#ZN&W4*Y'gjQ.i%ItV/JP9kV31A)XH)[\=N,est<=q:6
%=t:2'SS8ac)jc=,X&+d6_G?pQ\Al?,QHL,A?UJqCOS(S;'/gVb&WZp/DZl%rA-YtJ1OJC&AWA6N`:'n1$o,TTk>!IJ:`,#76>VoD
%k-rOslapa4RjOLjfS4S7>@L`R+nJa,Nj0NHcU%PrpXGoQ-=M/.Q`.VIm)Rph/XTs_:!4#kCm,We?1?'46?\LDXQ8>'_CX-.GZE9j
%=kn7gnAZPFCGsR.OGEI_LtmqeYB82LX5VN'rCE;-r!;tTX%s:K<B=.25lYjc"ZR/7Vg9_<]BnJle61qY3XUGXW55Uu@"49NMN2Ap
%gn?G0`GUj+C?UgV'aBs2IcUE^3g6a9@^8@C@pO9sB.c([GZT]&N[._'"VA@H7@]#+LPKJj@u?7FiH#lu)VZ5-[IlR0]fi1gkYP)Z
%C.$:1NeLTKXU-SQ-8#ciVFnpeS&l^.[7*1L;'V\'XN-$ubW<A8KIUGjQg#`rd<9/OPK(Bu6D/OH0;)%l"T!U2D>-mg,?):?HYG;$
%]?ZplKqQ2sP--[U[MgYEH!DY4`9,gYpS,qNG3J4_UL\tkHV?A'3+-2Q(Xc>b5E"cs<08e9JtAmO5F'W0E;.8FKQbn$Y79&[O@$&<
%D]UIfUQR0''&/17<G5heZ8sZGg?jX+\Qc>93t]M+E#2$tDbCWWn1H^COTQn"XurX0;b%j3FMOV5/<Nf05eAgEbrh8H/03Bu4SnuS
%4s$s$@H!JT>8M*M@^5ug96Wm9R@jr10l1>Kc8'ogSr8*8l"&pr1Va2,K0:eZ.IK`dA'`D?,o`9&*<BT\N&=FNUN%VIgiH`Uhc*fM
%?YqoZlaeVOE3]aCmKN2V'mGL^0Lke.?C')WQ#]V)5+@A)f21hHo^%LfHUQ^?iBMSM@K9)r^-kg?8hIc(`ZIFpC&$HPp?9O/AS\C[
%.A(o)!j@,+_h*om4A=V$Kga2nfZA"`@Tt,]4V&@;d?"(>TqGOHV/3,6;MPMq(`MYG!_TG>@kg^@BIV)%eHBd>T*D't&<.4<2.n>5
%ONpn^'KZpsTspZFPJh/Yi3D[Bh3'YcqYB+l;F*U_YnZ>oY1g--4;7f#akWO<pU'_roo'IL7[;2h<;/1Ca6[DY*_N4AjdME0r-r@Y
%>6;<C_,7-]P//4sna=lZ@S4]Ag=eDeeJSU/^7VM-H:Z$L]/TW[DoH$-=g]0E]!1gVok8'b-5D/!1I:drD+m;a]-^-mV"57!9^6Vs
%.#'!?L!StI>-jsHW*Oe`Z?lqO<+G0TSWqV)3Wu[.83Y7Joh>m\F]&^:-/%S2#gm^kHD/,_MKR-(T;l,8RUWA(a2^a>$YRj1JQFbs
%;a]gn5^9B.N_X"-cn-itH4,>j[^1om4]LbK(saJ*ZR/&g%GPl_9P<[-PK9=cSZqq"lqs^+]/hgX-8`%pQ'gW_^us:(JH'\g)%GYr
%e:FHlrU`a9?6@i(LJie-jl1K-.6QhUbX<tWe.k0Wadhe+q=D"dkL8$>]&p?)$:9e1\d!CtgF$eZ5CM(YWM#>+6o9<A^@(mf(BLG4
%+OL3YQSs![QSaN.,;aQ:f;[*F-aJo`]McZJB#BAKK7.gT&:K:RX*Gk`c#-)S]uXXg6gYNZ^iV9l^VLLQh_t[P@6nWLlMq[J\+#P-
%+"<.<MsH-KiAd&UU'WD>==M0ZeIb+pEB_Z[i@9"u^:C\o@teJi=f]H?8gRWO$S;g)g6V@T:9(J9gFR[ABBm4`]oF1]3L6TN#m_MJ
%Kg,F*90Gkjd$?8++8SZdV4!?lf4TFH?'ujR6!qgY2@\2L)u3f)9rG1U?inT#8DF6%+U&Mh,8!p4Q5$A,SW&[8:nKG?.=nUOhE]\k
%QM<I=L0AK99uKS5VUTm+1qD-WAccs,>&*7S&pGTi-`._O8sjEmi#I%J%%OAdRiL7MNMT`#0.k11ST=b!BNfQh^:2)$JPuN2Cc%eU
%_K2!KXc2,&KB)P/:'7t'4kf_1V=#`sQZV[M<:l8L]1hh09&d"V%7rTWfklQIE2]PQTjI/8I9SO,/IXh#">-:G>e:SWdd9>-4.g-.
%N;t>R4r*48QHck<n*)j^#o#m5OW)%QST?8$BTt*fck_@sJfRKk\aGbNDJX8kP5p9%r,!\^JnMp^3(F5bUYbMU@&*J$K(k?7k(El4
%\TJP._%8Da62o-(#d2'f86i<\N3B,%C#OimXJ_hHjMj.`[hNYe*K$JuLp@9%RZY`W4OTk2'B%k3IU891V^%DCJK6bCW:kb:YH<1C
%Uq#a[leS1SZ%W\IT#?o$,FjKE4Ya!]CeI?$/[DOkU<6TOmLHM?3.nBl#W+RJT'fS-(g?C!4@4KNLR+`):rf*:h>nBC)BG<:]_$$S
%#V_TkGFK-N'\?8@$_'p:bmaKV_`=B/SQ\X<&M^)CY.tR5P49o'9KHGok>5Q$MaQ)f?cCCSR>3G9Eec"oC[%Z!V.9>A[!//HbZF\t
%`qWiiq*.WAU;C!@W_;f`N6/hQ/%l;u8l+\Jb&2cjSrgQ)a\"\iOj^a+&#Kbl6Zks(nCXPM0n*BZ<!G'1%5GBYqg>M?2A@Q!%^k0=
%SJ^o`l:ou,3=?b5f/pJ+l4]rG_BSV&5jI9TUhX&G'/q1._.K\p]cb*R;:\Fb86;(6`jk>gNid$t7de`"T8Tk+lSOpc[?>F0d$>g[
%Sa]7CEL#$0j"T6WI^,B%4sD/*gq$X"#OSlOIo&R*)Ks2VAN@_bejeAC?nZ;UCFE5dm?cua*e<=R.q-Gh)"TkZ=]'g\=Y67#-**1s
%&lQLR)uLVS)=2!KZ&PUYZ(6d['?e_tYDj9"S4RK!UaXDT#QghJM-6=cR]b*D1SgIgGZsO1(fft``:-'hF.a,hehtr;!ucIZkIE/r
%QP%l7l>$Wonl1>"^/iQ#N6\m/c)QZ6[8H,SR8soE`]/efWK:R0f$fP'POU+]$BDFV6`IO0,'r[sE#6sL@4eB;i[,'bC#c,1FQTIY
%('8"ZH@n!;&jqt3m8p27Zs_kV#j3uHNfu<bI-I#8_DFHS<$?c8I1PCY60=p&r`3jM*td<WN&^ci@D?DcX=7k.LfSStBr$.R),"J$
%e`_0`&*#q0.sF]0W[VFkancf0C0LmWNq(%1MsqeqfOSEDj\lX(k=4Wf<6olj=Y_\95aqJt(g5<^O_6D7dNi9mUiJ*$6.cV>+^1+M
%H$;nZ`L47C5bgpE)_8ZX^em!]5DmISJ3U[FSA\&42=f\G2p!*UG.eW>">+^rd197JM1l*f#/n^g;)0R<XDp)*8,86$,c>DfeK!;*
%6dKr48@!++_:(+i"g0#SZ\G7eLYd:$$`[3^ekb[9h(c6_\S9<^dP[<1a[O#&jAdm<$<K,H^!Pn,0`m[3n:WG4`1WQ/;KT-?Kb:!Y
%T`\&HEn]@_'?4#F8h(=84tJC4oN]2hQpRU(EWVc"11igYOd-Vs$)ED$SZAjJJ^UYM9GO/b#H.78-\:,'oHj7Hm\:aKm5*L5HT5E9
%+Pn2tR!6m7Eg"b>lF<5\ZB`3f/%J.IZ/'K=[eq7=r\o)`1Xdp6S]l>:]nI5YEC9Zu0Dq&=rt_8C4KWpOWis?G1QGo>';Ktgg]fA5
%_iq>G[n2o8"W-_5#AGmu:O'+Mp6Y:PBn3Q^SgG)oAl]!CQ$%[9:mrrdgh517%AddcCKq>r=u4Zt%U3@,c=oH)rH(2LmYn)f21C@7
%a:*%Jpk*]q4j`5g<h>RV>S&m^RR!VZiI]>=eK:="nFD4fH?YT^f6fd.d]Wef@4aGgJ8O,*ECh%g)]4]S64d]kU#K0,>&]6<(Cjtt
%&s3j,:W\Z1W]H``ACm57nA]X/,Z1m^[^,J!*Ng&GgmEuh$'cd6D`^J:d9]Uk86)BWI#q.mVPUA!@^F]Ihj\/,L\b7Z!_iPH8(*oo
%bDZa_7^E<E,(YJ(auVQ2mb+R]LiO6Nel'38Br(mC,Ot'L[$.))$Y*]^W'o+FWKjGab3.9RmE9gB=sVT*bAtoQG--n3njW4-ZG<^A
%9+E$)T&haPdX6\4i,)0(4H9`$Q"\^@.`[o;&DM9g/lLT+"e'H$+@0,KG/'NK8?AgJRT#q99u1g;f+PdsWk11>Se6o[GR%m['8_FC
%:E63R',0UC)*(*BmcqS7gj.f$?r'No5bkB<3g8B"-*f-LSRY7?Vknte5d`BfAS!lid8Cio!_/dOQ9K.E%pIG'>NUY7bE9VXX3N:u
%05;,k):,kHY<;$uJqq.!NN-ZRUS6_Ji'-=ANGWi]%`LNh&/!k\5,`5;9:%/dEU%W4Up^n*(%5QKSa*Ojjc3#\3AuSr1']00hsqt>
%o_4Rhj_.9No%6(UVHIOp.`SklD-S5o2@?LdgtoP@?qBQ67)/U<K.PtUeSQXt4Bh0ei@>_\\u\`cHh%s[%GLccLnd2CW.9Ys4be,n
%$:ErM[h9o4`#>"ThLu?3pe3dKe8lf!4%ci:mr7ttGPe=df0W67Z?@3*L7pQmUmLIC%Lo7]F68aOqBBI;jhV%BVm>hE%;RfYW[2"b
%hu4Od:?_-r*<1"`*?0/O_!RLl?,kBb+qN4tO:H7R97]eoHG9Y^Ls\h!otJ;k6X]:f;B*'#"Ztf`Mj7huYJgogH"3;S4(^JIXc03W
%2VGD,9*PVT7HscGqOKXq@i''-0e?Ml`ZrbPmMf\;n*qYqAhDQnFGd%Y+nAOSXe\f#GYhVq\7iMhh/J$mS.nkdJ=U0B5cE*-N83"P
%[,0cC\+:6t1!=-"SX1RK4>EG\.3b$LUY0IaI;BFr4+usb6cSrC?A+"hK\k5a>G'IabMrnW[jG5=8P^q<,EJi+m_2.7.mdh(\/NMj
%=]T?M)$iCpfh<6[1^O>Lkp"](!*_.F#W;b>\fFWjEBGOC1h?\9%:r.;Tr"nIG6*ouQp-t1_>K5S3$3>c>7;Z@iAQ_B]0esn%\T,i
%CmKC&8!hO[!o`?CH+)&-9as+k6#J.-;j54[;n&T2Q*Ssr[YO^bp306I3/59Y\#K5=S_'rP+`8c2C"ZC+MFG8A1UXPR/p-bcf+2<Q
%0P,S*@/R[u^OAe<_R7HS3PI=)@4o;oEZh8Qir@$89^+MQ5^e<,kU1iiXCeDA810>X))=XIQt!#Z;R5:2EI7T1,abRLh*S%J$V\W,
%;%mjF1bCRk><[n\peE+sf2j'r0%(!pCn;#=d43j<f0U%8nC.Rp^LVsf?m$)OS`Zu0d$U]$qrVO2B\FaUN\\Oqg>iY:mNI'Bbs(HG
%'d.dNbo6MI:.NWRPoq>HN0^V]aJ^CYCW*>*h9?S0nq)rl"[E3*N$=`!42NP*IF4lLQOX2m"\Vr0l1<?Z8m:kFB2^hGe6?>Mj:2pc
%_4u]AZQXakl:a3Q'>gN=poh)rJN"G393Y2NAN7JmG)`$[,lrF0gc)2<G<;[64??0TOH(cY<"TgsWC!@_AZ,.pPECXQ&4AVt%<0BW
%j3$VhqR08W@+dCN1,(Z3>[K8pe\U/Z=mei4k9C^q.fOacGs1Pg-%Vs1^=6Ge4`fR^r9("(S$eX8D,%V[bLuQa&eDAb]-G513)36.
%:GJ`1CT_p(25"(m)2_Ysm<nhVge`V!CNSa@[jeUdeNtX%:/N*E#V`&T4dE@_Kc,4*2bk+FPZWn'VU?+5*gNthm(+6^UWRF(,Jg6F
%$b)]!gjTErqL4npPe;0ahl(>H95?J_r<E7SS8-+/<i<,NIo-.C.3($1eP%*=$`ijn5]`EJ%ODN8l)josnc[>34hQ(KflqtKQf=>/
%k#k%sHQBTN30/:T35]m\7^tM);-22>j3Kn$>F2gWds3QUYS?tm#O<;!Kts[]Z+D(!$0+U"5h]:MYNf`#0h0)?16(?d9/#"X"qcKQ
%mLF8sgHmOp#KRL@.IHUGZMM3aP#i3%8,[>n>n#Tk,o\^cn7).[.%*SE[-"<59GhLc@Jbs-<11QWP^Tip>':^f5g<4!(3j(]2-M;>
%m`C>clZqfOFD@@ESTqa(DT(MheMY%bFCm)GS:3GIhbaeVP^+g8Q>]WJl)Eo[T#0CYRMub#ZsSFJ1TbK"*8mb46or84)JgQ+gTJ=r
%0b6q9(u!rAk7rOU)q!7%2`NiMK[&mA@>LaZh1RQM)VRYfN,_M`#6pROhljUF5=Id?cRc9UrlWa%an\_#U:s;RP[Gkm1==k$ln7WE
%LpQb')CuPIg*iBb'8Hm3NrX=T3^SE]B>7ICWe;H;7b)R@[asmgBl*;H2hd2]6Q_:?lgkNJ-WCb]*8K.<O/VFVosYrR9B%$s]?B)5
%V(.oq2rchGo>OZ\em!jC-'TW5pG.0K>-r9WBF@d;Sk=@=(GS(UQTnRU\Y\hg&#:Zu@^e&_g0$e1`S.W?6%fVtc'*#7AkZain`8VE
%Z`rOu[e&Ip!#,7t$>9"'cCL#GcR8.9s8MtHrp=WQp\4]1rf;R(j1kNkkC<Bjc[Y\5YCYU0\"E]ibCBQ`ci<<<J,/\SJ+JH1r;;%o
%q==,!s7iM,rqtATrqG`.IJLdQJ,.8ps7GJ]^AR)BrosGk";fl%IeUI(prEF*gY_pYc_0=+~>
%AI9_PrivateDataEnd
