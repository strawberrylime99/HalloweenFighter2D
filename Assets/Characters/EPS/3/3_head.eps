%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 3_head.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 151 155
%%HiResBoundingBox: 0 0 150.0496 154.7861
%%CropBox: 0 0 150.0496 154.7861
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:59:08+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:59:08+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:59:08+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>228</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA5AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqtmmihieaZ1jijBaSRyFVVG5JJ2AGKvF/Pf8AzlJ5M0OSSz8vxN5hvlqpmjb0rNW3H98Qxkp1&#xA;+BeJH7WLKu94l5o/5yD/ADV1zmP0n+h7Vthb6Yvomv8AxlJaav8As8mMZ6sTMDkwG+udTv39fVb2&#xA;e6lO/KeVpW38S5bJ+EGPilBQyzQzh7SR45F+y6MVYU9xTKzEcg2CR5l6L5S/Pr80fLDxg6k2q2Ck&#xA;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&#xA;R0Go8Xi/ecXF5pxkmh//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0282b2dd-5089-ae46-b7d0-55582a341b27</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0282b2dd-5089-ae46-b7d0-55582a341b27</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ef4a9a63-de12-4a4f-80ef-dcdc86022225</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0282b2dd-5089-ae46-b7d0-55582a341b27</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:59:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>151.710871</stDim:w>
            <stDim:h>44.434222</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -154.786 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 154.786 li
150.05 154.786 li
150.05 0 li
cp
clp
143.255 83.3852 mo
141.263 86.792 138.106 91.0874 134.362 92.1543 cv
130.469 93.2632 127.421 95.4468 123.835 97.3682 cv
122.964 97.8345 121.915 98.52 120.891 98.958 cv
120.955 98.376 121.018 97.7939 121.082 97.2119 cv
121.49 94.894 122.311 92.6558 122.953 90.3989 cv
124.351 85.4863 125.216 80.5215 125.771 75.4521 cv
125.781 75.3672 125.77 75.2949 125.773 75.2139 cv
127.272 70.6362 127.252 64.7436 127.205 60.771 cv
127.127 54.2012 125.794 47.6807 123.031 41.71 cv
120.221 35.6367 116.431 29.1089 111.888 24.168 cv
108.779 20.7871 104.789 18.3149 100.654 16.2085 cv
98.8231 14.061 96.1381 13.2031 93.3885 11.7949 cv
90.557 10.3442 86.7274 8.73291 83.2899 8.85303 cv
80.8666 8.01807 78.4271 7.23438 75.9584 6.56201 cv
68.8256 4.61865 62.4965 4.87354 55.2738 6.20264 cv
41.8939 8.66553 29.2899 12.6621 20.9584 24.124 cv
20.7748 24.3765 20.6869 24.6431 20.6615 24.9092 cv
19.5795 26.2217 18.6034 27.6577 17.5985 28.9365 cv
14.8773 32.3989 12.2826 35.9673 9.83875 39.6304 cv
4.99158 46.897 1.27576 53.2969 2.46277 62.3135 cv
3.01453 66.4995 4.34119 70.522 5.02185 74.6802 cv
5.86267 79.8149 5.51013 85.0586 5.14246 90.2202 cv
4.57752 98.1377 3.25183 106.638 6.27966 114.171 cv
9.22888 131.916 23.0262 145.106 40.0604 149.441 cv
49.6361 151.878 60.2333 153.51 70.1302 152.998 cv
74.5692 152.768 92.3558 152.948 93.4672 146.398 cv
93.4247 146.432 li
93.434 146.395 93.4384 146.358 93.4457 146.321 cv
97.786 143.801 102.138 142.285 105.899 138.571 cv
110.164 134.361 114.476 130.101 118.494 125.637 cv
124.177 127.049 129.782 119.606 132.792 115.385 cv
138.441 107.464 142.786 98.3892 145.598 89.0913 cv
146.204 87.6899 146.664 86.2495 146.971 84.8608 cv
147.463 82.6352 144.424 81.3882 143.255 83.3852 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.968627 .945098 .886275 rgb
f
84.7079 85.9956 mo
80.8778 86.2861 77.1552 88.0312 73.1293 88.7236 cv
67.2323 89.7378 64.83 92.7773 62.0375 97.7476 cv
60.9393 99.5137 60.7831 102.017 61.2474 103.937 cv
61.7933 106.196 63.3983 108.625 65.6693 109.396 cv
66.0868 109.729 66.515 110.02 66.9359 110.245 cv
68.6581 111.168 71.5463 111.882 73.4554 110.982 cv
78.0834 111.388 82.3046 109.288 86.7987 107.314 cv
91.5604 105.222 95.6927 102.464 97.2401 97.2041 cv
100.12 87.4141 92.2523 85.1123 84.7079 85.9956 cv
cp
.984314 .992157 .988235 rgb
f
28.224 93.1084 mo
26.4838 91.1304 24.3339 89.5185 22.3846 88.6284 cv
20.8593 87.9321 19.3485 87.8013 18.0555 88.1108 cv
15.4242 87.1069 12.8329 87.0093 11.452 89.3296 cv
10.9266 90.2129 10.7426 91.1797 10.7977 92.1816 cv
10.3182 92.5659 9.90955 93.0518 9.63758 93.6494 cv
8.32703 96.5371 10.6161 99.3472 12.6097 101.206 cv
17.1259 105.417 22.7762 108.469 29.0531 108.5 cv
32.4789 108.517 33.9198 106.853 34.1278 104.705 cv
35.8959 100.747 31.1664 95.5303 28.224 93.1084 cv
cp
f
104.477 94.9917 mo
104.411 94.5361 104.118 94.2549 103.767 94.1958 cv
103.224 93.7192 102.34 93.6587 101.934 94.4961 cv
100.534 97.3848 99.0663 100.241 97.6102 103.103 cv
94.3519 103.879 91.578 105.975 88.515 107.385 cv
83.5121 109.687 78.3427 111.166 72.8988 111.969 cv
72.0585 112.093 71.6322 112.816 71.6337 113.486 cv
69.1058 113.916 66.6385 113.937 63.7733 113.365 cv
61.7714 111.463 60.6215 108.587 60.3265 105.943 cv
60.1522 104.384 57.9135 104.39 57.8661 105.995 cv
57.7343 110.483 58.3807 114.854 61.9271 117.826 cv
61.9852 118.532 62.472 119.204 63.3846 119.197 cv
63.6312 119.196 63.8788 119.196 64.1254 119.195 cv
66.516 120.278 69.7245 120.719 72.1444 119.781 cv
72.223 119.801 72.3016 119.821 72.3885 119.83 cv
76.1713 120.202 79.9442 120.246 83.7347 119.962 cv
84.4374 119.909 84.8719 119.469 85.0458 118.943 cv
88.3212 118.729 91.5775 118.364 94.7972 117.746 cv
96.6747 117.386 95.8153 114.534 93.9457 114.893 cv
88.9501 115.852 83.8236 116.165 78.6796 116.249 cv
81.2904 115.646 83.9061 114.781 85.6947 113.095 cv
85.973 112.833 86.0775 112.475 86.0643 112.117 cv
86.2738 112.846 86.931 113.385 87.8319 113.001 cv
91.8856 111.273 96.1205 109.019 99.3344 105.884 cv
99.8563 105.548 100.259 105.121 100.647 104.455 cv
100.948 103.941 100.828 103.341 100.5 102.902 cv
101.401 101.066 102.314 99.2358 103.237 97.4106 cv
104.155 96.8428 104.647 96.1445 104.477 94.9917 cv
cp
.933333 .901961 .831373 rgb
f
38.6923 109.85 mo
38.6356 109.653 38.5512 109.462 38.4271 109.288 cv
38.5634 108.896 38.662 108.489 38.7562 108.082 cv
38.7802 108.675 38.7655 109.264 38.7289 109.849 cv
38.7167 109.851 38.7045 109.848 38.6923 109.85 cv
cp
16.4838 111.386 mo
16.1195 111.254 15.8021 111.39 15.58 111.632 cv
14.8309 110.752 14.1268 109.841 13.5004 108.876 cv
14.391 109.754 15.431 110.499 16.6761 111.041 cv
17.4857 111.394 18.3944 111.797 19.3549 112.198 cv
19.5399 112.286 19.7333 112.36 19.9218 112.444 cv
18.7665 112.143 17.621 111.797 16.4838 111.386 cv
cp
38.4369 100.867 mo
37.9291 99.3359 37.14 97.9087 36.0565 96.6548 cv
36.0404 95.5542 35.7274 94.5557 35.2069 93.6509 cv
35.163 90.7168 32.5912 86.7881 30.7054 84.749 cv
28.3226 82.1728 24.9667 80.5605 21.4232 80.7143 cv
20.4647 80.7559 20.2538 82.1948 21.2284 82.4219 cv
22.0365 82.6103 22.7987 82.8369 23.5277 83.1025 cv
23.3768 83.1567 23.2831 83.3232 23.3417 83.4922 cv
23.243 83.4512 23.1464 83.4014 23.0472 83.3613 cv
22.4032 83.103 21.8051 83.4253 21.5223 83.8931 cv
20.0956 83.2817 18.6342 82.8257 17.1483 82.6357 cv
15.3856 82.4097 14.6376 84.9072 16.452 85.3852 cv
20.1649 86.3638 23.4188 89.3589 26.5824 91.4326 cv
28.1815 92.4809 29.8051 93.4785 31.0917 94.9184 cv
32.1981 96.1567 32.933 97.3833 34.2782 98.3652 cv
34.3007 98.3823 34.328 98.3887 34.3519 98.4028 cv
35.0399 99.9292 35.5536 101.545 35.7367 103.208 cv
35.8827 104.536 35.9179 106.718 35.3202 108.337 cv
34.7089 108.544 34.1649 108.966 33.6942 109.512 cv
31.7377 110.074 29.8358 110.461 27.9491 110.576 cv
25.85 109.371 23.0883 108.889 20.9066 108.27 cv
17.0311 107.169 14.7655 105.62 12.4989 102.602 cv
12.5306 102.418 12.5072 102.219 12.3856 102.019 cv
12.0243 101.42 11.8202 101.26 11.1386 101.118 cv
10.4921 100.982 9.91101 101.452 9.89002 102.067 cv
9.32996 101.676 8.37341 102.084 8.6781 102.868 cv
11.2699 109.532 16.1737 118.225 24.0702 119.232 cv
24.5487 119.293 24.8207 118.714 24.3881 118.433 cv
22.2543 117.047 20.08 115.791 18.1366 114.189 cv
22.0863 115.749 27.0428 117.168 30.7694 115.643 cv
33.6595 115.303 37.0306 114.513 38.5521 112.405 cv
38.5321 112.846 38.5233 113.289 38.5424 113.734 cv
38.5643 114.249 39.3339 114.508 39.5746 113.99 cv
41.3954 110.069 40.1937 104.827 38.4369 100.867 cv
cp
f
65.7655 134.395 mo
62.6127 133.058 58.8607 132.677 55.1014 132.598 cv
53.5956 132.241 51.9901 132.139 50.495 131.872 cv
47.7553 131.383 45.0189 130.819 42.3192 130.143 cv
40.8876 129.784 39.89 132.012 41.3329 132.627 cv
42.6024 133.168 43.8763 133.673 45.1659 134.129 cv
45.2743 134.35 45.4667 134.523 45.7738 134.567 cv
46.1918 134.627 46.6117 134.683 47.0302 134.742 cv
47.8734 135.001 48.723 135.243 49.5907 135.446 cv
51.9598 136 54.6947 136.739 57.078 135.999 cv
59.6019 136.261 62.1283 136.471 64.6532 136.591 cv
64.6879 136.871 64.7621 137.137 64.9633 137.347 cv
65.0658 137.453 65.264 137.422 65.3304 137.291 cv
65.4442 137.069 65.451 136.832 65.4222 136.592 cv
66.4022 136.418 66.7836 134.826 65.7655 134.395 cv
cp
f
54.7704 127.071 mo
54.3417 126.54 53.6146 126.291 52.9476 126.492 cv
52.0272 126.769 51.2831 127.573 50.9125 128.484 cv
50.8304 128.533 50.7479 128.581 50.6615 128.625 cv
49.9633 128.986 49.7572 129.945 50.0565 130.614 cv
50.389 131.359 51.162 131.668 51.9413 131.491 cv
52.0746 131.46 52.2035 131.419 52.3319 131.376 cv
52.4818 131.392 52.6337 131.394 52.7841 131.371 cv
53.431 131.27 53.8583 130.908 54.0922 130.427 cv
54.099 130.438 54.1058 130.45 54.1127 130.462 cv
54.2294 130.281 54.2977 130.112 54.3724 129.924 cv
54.5985 129.635 54.7938 129.32 54.9457 128.981 cv
55.2357 128.332 55.2352 127.647 54.7704 127.071 cv
cp
f
109.472 33.3369 mo
108.693 32.1421 107.893 30.9683 107.08 29.8062 cv
107.242 29.8232 107.396 29.7847 107.538 29.7183 cv
108.974 31.8657 110.305 34.0781 111.47 36.3926 cv
110.786 35.3418 110.11 34.3154 109.472 33.3369 cv
cp
85.2474 14.2915 mo
85.101 14.2173 84.932 14.1274 84.7665 14.0405 cv
85.08 13.7476 85.2147 13.2227 84.827 12.8984 cv
84.6561 12.7549 84.4813 12.6201 84.3085 12.4814 cv
84.3925 12.4873 84.4764 12.4912 84.5604 12.4976 cv
90.6478 15.6016 96.1097 21.0962 101.354 25.5713 cv
101.548 25.835 101.735 26.104 101.927 26.3691 cv
96.9286 21.5713 91.4628 17.4434 85.2474 14.2915 cv
cp
117.061 51.1611 mo
117.162 51.8984 117.197 52.5962 117.158 53.2407 cv
117.062 52.5732 116.979 51.9043 116.881 51.2373 cv
116.946 51.2236 117.001 51.1865 117.061 51.1611 cv
cp
146.234 82.7412 mo
144.232 84.4634 142.375 86.397 140.761 88.4946 cv
140.33 88.8701 139.878 89.2353 139.371 89.5727 cv
136.33 91.5937 133.279 93.5981 130.233 95.6108 cv
129.242 96.2661 130.203 97.8491 131.201 97.1899 cv
131.507 96.9873 131.815 96.7876 132.121 96.5859 cv
132.31 96.8784 132.656 97.0591 133.101 96.9385 cv
134.507 96.5571 135.776 95.7851 137 94.9067 cv
136.924 95.124 136.832 95.3379 136.772 95.5581 cv
136.591 96.2202 136.852 96.7959 137.295 97.1597 cv
136.983 98.1074 137.564 98.9473 138.309 99.2617 cv
134.933 103.992 132.305 109.263 128.862 113.965 cv
128.578 114.353 128.665 114.773 128.917 115.091 cv
127.553 116.816 126.111 118.42 124.467 119.504 cv
124.015 119.763 123.551 119.996 123.016 120.084 cv
121.676 120.306 120.353 119.639 119.552 118.584 cv
119.16 118.068 118.607 117.906 118.096 117.975 cv
117.903 117.736 117.708 117.499 117.497 117.268 cv
117.106 116.839 116.546 116.753 116.033 116.891 cv
116.016 116.801 116.002 116.715 115.983 116.625 cv
115.691 115.185 113.768 115.773 113.642 116.991 cv
113.561 117.79 113.424 118.583 113.269 119.374 cv
113.403 113.511 114.008 107.523 113.662 101.693 cv
114.153 101.482 114.615 101.134 115.057 100.715 cv
115.164 100.875 115.293 101.018 115.45 101.125 cv
115.09 102.255 114.728 103.385 114.381 104.52 cv
114.145 105.291 114.74 105.791 115.367 105.827 cv
114.569 107.177 114.017 108.647 114.295 110.044 cv
114.44 110.774 115.368 110.828 115.83 110.415 cv
117.593 108.842 117.83 105.991 119.483 104.197 cv
121.016 102.535 123.557 102.378 125.472 101.298 cv
126.863 100.514 125.558 98.3721 124.173 99.1797 cv
121.807 100.56 119.223 100.702 117.416 102.973 cv
117.276 103.149 117.128 103.336 116.978 103.528 cv
117.705 101.207 118.459 98.894 119.243 96.5908 cv
119.673 96.4722 120.067 96.1743 120.335 95.6343 cv
121.313 93.6616 121.995 91.5698 122.593 89.4526 cv
122.819 88.6494 122.5 87.9443 121.957 87.4956 cv
122.673 84.3677 123.072 81.1831 123.286 77.9756 cv
123.406 77.0356 123.503 76.0923 123.6 75.1489 cv
126.314 71.3574 125.758 61.5557 125.495 58.7241 cv
125.117 54.6436 123.968 51.1289 121.92 47.687 cv
121.467 41.4829 119.515 35.4692 116.01 29.9297 cv
113.222 25.5229 109.69 23.5117 105.782 20.2324 cv
104.035 18.7666 102.319 17.2275 100.431 15.9404 cv
97.6688 14.0576 95.6659 13.978 92.5853 12.8789 cv
92.3749 12.8037 92.2328 13.1558 92.4398 13.2461 cv
96.5839 15.061 100.868 19.0498 103.716 22.3877 cv
103.718 22.3901 103.721 22.3931 103.723 22.3955 cv
103.611 22.4688 103.509 22.5537 103.426 22.6519 cv
100.076 19.4688 96.0175 16.7197 92.5067 14.3398 cv
91.078 13.3716 89.6136 12.4346 88.1122 11.583 cv
88.0682 11.2471 87.8505 10.936 87.3959 10.8101 cv
86.9589 10.6885 86.5194 10.5928 86.0795 10.5049 cv
84.7494 9.8457 83.3866 9.28369 81.994 8.83057 cv
81.9613 8.40283 81.6942 8.02344 81.1263 7.94336 cv
76.7885 7.33008 72.3641 7.10645 67.9847 7.09375 cv
64.5419 7.08399 60.5512 6.66944 57.2533 7.83643 cv
56.184 8.21533 56.1669 9.45313 56.8851 10.0161 cv
56.9501 10.4771 57.2137 10.8506 57.6356 11.1558 cv
59.453 12.4683 62.348 11.9482 64.4432 11.9331 cv
68.1786 11.9067 71.8846 12.2109 75.5844 12.7183 cv
75.9857 12.7734 76.3309 12.6787 76.6141 12.502 cv
76.6698 12.522 76.725 12.542 76.7811 12.5615 cv
77.6615 15.0933 80.6791 18.0244 82.5746 19.9614 cv
86.1083 23.5718 89.9257 26.8892 93.4369 30.5239 cv
97.389 34.6147 100.709 39.4302 104.84 43.3071 cv
105.303 43.7412 105.946 43.1694 105.673 42.6362 cv
102.705 36.8413 97.4325 31.7495 92.83 27.2393 cv
90.4369 24.8945 87.8802 22.7388 85.4227 20.4648 cv
84.4427 19.5586 83.4667 18.6499 82.558 17.6709 cv
82.7313 17.8579 81.0013 15.812 79.8456 13.8125 cv
82.1034 14.8071 84.2885 15.9287 86.4174 17.2119 cv
89.433 19.0298 92.3334 20.9692 95.1058 23.0771 cv
94.9794 23.3047 94.9618 23.585 95.1757 23.8779 cv
99.1669 29.3516 103.045 34.833 106.139 40.8774 cv
108.518 45.5264 109.935 50.269 111.293 55.124 cv
110.442 55.0498 109.419 55.8003 109.604 56.9307 cv
110.818 64.3579 111.052 71.8149 110.49 79.3169 cv
110.205 83.1157 109.801 86.9087 109.137 90.6611 cv
108.589 93.7642 107.504 96.7524 107.71 99.9116 cv
107.744 100.437 108.499 100.872 108.88 100.368 cv
112.807 95.1797 113.477 86.498 113.961 80.1548 cv
114.436 73.9268 114.08 67.6885 113.208 61.5171 cv
113.613 61.9136 114.439 61.8413 114.55 61.1807 cv
116.644 48.728 107.595 36.7393 99.89 27.021 cv
100.732 27.7729 101.565 28.5386 102.376 29.335 cv
102.891 29.8408 103.56 29.5352 103.801 29.0337 cv
105.211 31.103 106.554 33.2158 107.79 35.3867 cv
110.23 39.6724 111.909 44.6938 114.513 48.9067 cv
114.938 52.6069 115.263 56.3184 115.483 60.0439 cv
115.762 64.7319 115.543 69.8794 116.299 74.6518 cv
115.807 78.0039 115.489 81.3398 115.394 84.6904 cv
114.917 87.6245 114.274 90.5361 113.535 93.4697 cv
111.949 95.352 110.665 97.3638 110.431 99.3608 cv
110.336 100.166 110.539 100.894 111.185 101.377 cv
110.216 107.899 110.748 114.85 110.847 121.383 cv
110.849 121.491 110.885 121.572 110.908 121.665 cv
109.615 123.231 108.402 124.869 107.217 126.53 cv
107.229 125.648 107.154 124.761 106.991 123.898 cv
106.806 122.923 105.105 123.176 105.246 124.172 cv
105.594 126.625 104.691 128.805 103.296 130.814 cv
103.27 130.798 103.247 130.776 103.22 130.761 cv
102.481 130.35 101.628 130.658 101.195 131.337 cv
101.088 131.506 100.98 131.675 100.873 131.844 cv
100.533 132.379 100.673 133.091 101.075 133.554 cv
100.253 134.462 99.3978 135.341 98.5956 136.202 cv
94.0668 137.887 89.849 140.916 85.2841 142.561 cv
83.0111 143.38 80.7245 144.029 78.4149 144.528 cv
75.889 144.395 73.2733 144.648 70.8285 144.655 cv
68.7655 144.66 66.7035 144.643 64.6415 144.619 cv
64.702 144.592 64.767 144.576 64.8251 144.541 cv
65.3094 144.675 65.8495 144.581 66.2753 144.114 cv
67.2924 143 67.6625 142.145 67.8099 140.662 cv
67.8202 140.56 67.7943 140.481 67.7738 140.399 cv
68.6942 140.972 69.7577 140.286 69.9696 139.237 cv
70.0927 138.628 69.9613 137.951 69.91 137.339 cv
69.8451 136.558 69.7797 135.776 69.7142 134.994 cv
69.619 133.86 67.9271 133.875 67.9335 135.032 cv
67.9374 135.814 67.9413 136.598 67.9457 137.38 cv
67.9481 137.864 68.1444 138.568 67.6947 138.853 cv
67.4984 138.977 67.3807 139.181 67.3241 139.398 cv
66.8612 138.789 65.7997 138.565 65.3026 139.229 cv
64.9696 139.675 64.6195 140.083 64.2611 140.483 cv
63.642 140.228 62.8666 140.366 62.5365 141.062 cv
61.6595 142.905 61.1522 140.904 60.2743 139.946 cv
59.4296 139.024 58.2186 137.805 57.0643 137.312 cv
55.264 136.541 52.5541 137.698 50.7235 137.868 cv
49.3881 137.991 47.1732 137.787 45.8558 138.15 cv
45.7831 138.091 45.6923 138.053 45.5951 138.051 cv
44.1869 138.036 43.0883 137.24 42.0765 138.282 cv
41.829 138.537 41.6732 139.002 41.8192 139.347 cv
42.2304 140.323 43.0092 140.848 43.9882 141.111 cv
43.9135 141.235 43.83 141.359 43.7357 141.482 cv
43.1156 143.021 45.472 143.807 45.7753 142.292 cv
45.8402 141.969 45.9047 141.645 45.9691 141.322 cv
49.4789 141.266 54.1 139.599 56.1947 140.31 cv
57.9218 140.896 58.6254 143.436 60.0697 144.545 cv
59.6967 144.538 59.3236 144.53 58.9511 144.524 cv
58.5678 144.432 58.183 144.34 57.8007 144.247 cv
57.3519 144.137 56.997 144.263 56.7616 144.503 cv
55.9823 144.538 55.4511 144.929 55.1747 145.473 cv
54.162 145.247 53.1498 145.019 52.142 144.804 cv
46.8739 143.679 41.6195 142.498 36.3641 141.316 cv
33.3158 139.896 30.2391 138.521 27.3138 136.84 cv
26.4252 136.33 25.6249 137.221 25.746 138.001 cv
23.4174 136.68 21.161 135.232 18.9979 133.643 cv
18.016 132.921 16.8593 134.542 17.7411 135.344 cv
22.0302 139.245 26.6556 142.604 31.9613 144.996 cv
36.101 146.862 42.0756 149.75 46.6664 149.049 cv
47.2987 148.953 47.7767 148.65 48.0355 148.159 cv
49.9911 148.623 51.9481 149.083 53.9017 149.554 cv
58.3446 150.625 64.5355 152.867 68.6854 150.117 cv
72.3724 151.069 76.1259 151.692 79.9872 151.617 cv
84.9647 151.52 92.3768 150.592 94.9926 145.769 cv
95.5052 146.122 96.1801 146.261 96.8793 145.946 cv
102.469 143.422 113.11 138.177 112.807 130.922 cv
112.752 129.582 111.072 128.886 110.121 129.875 cv
109.339 130.69 108.357 131.322 107.328 131.91 cv
108.071 130.874 108.793 129.826 109.497 128.768 cv
110.172 129.138 111.139 128.982 111.547 127.944 cv
111.651 127.678 111.772 127.428 111.884 127.17 cv
112.632 128.127 114.645 128.032 114.938 126.57 cv
115.019 126.16 115.105 125.761 115.196 125.367 cv
115.597 125.151 115.926 124.775 116.077 124.204 cv
116.335 123.218 116.44 122.737 116.501 122.104 cv
116.913 122.767 117.362 123.391 117.842 123.917 cv
119.064 125.259 121.398 126.622 123.089 125.282 cv
123.664 124.826 123.912 124.102 123.709 123.485 cv
125.231 123.392 126.655 122.72 127.609 121.248 cv
128.208 120.772 128.787 120.246 129.346 119.677 cv
132.335 116.629 135.701 112.723 136.441 108.399 cv
136.469 108.241 136.434 108.074 136.364 107.922 cv
138.816 104.434 140.856 100.693 141.741 96.52 cv
141.807 96.2129 141.585 95.9326 141.32 95.8603 cv
141.701 94.9995 142.08 94.1382 142.461 93.2773 cv
143.679 91.8525 144.695 90.2397 145.66 88.6362 cv
146.038 88.0059 145.923 87.3325 145.565 86.8091 cv
146.393 85.9101 147.146 84.939 147.817 83.9097 cv
148.469 82.9092 147.028 82.0405 146.234 82.7412 cv
cp
f
108.952 106.125 mo
108.786 106.128 108.792 106.386 108.957 106.382 cv
109.123 106.379 109.118 106.121 108.952 106.125 cv
cp
f
98.9139 133.027 mo
98.5067 132.416 97.7142 132.044 96.89 132.509 cv
96.2943 132.844 95.6927 133.165 95.0927 133.488 cv
87.2572 135.143 78.163 136.69 71.7367 141.395 cv
71.3119 141.705 71.576 142.42 72.1254 142.265 cv
76.3475 141.065 80.3397 139.155 84.579 137.941 cv
85.7084 137.617 86.8431 137.315 87.9813 137.025 cv
87.5028 137.248 87.0258 137.473 86.5453 137.691 cv
83.682 138.817 80.8519 140.01 78.1219 141.366 cv
76.6385 142.103 77.7469 144.532 79.3026 144.009 cv
85.3129 141.988 91.101 139.168 96.6576 136.098 cv
96.9047 135.965 97.1498 135.828 97.3925 135.688 cv
97.7513 135.487 98.1132 135.289 98.4706 135.086 cv
98.6332 134.994 98.7577 134.884 98.8632 134.766 cv
99.0233 134.657 99.1879 134.555 99.3461 134.442 cv
99.9496 134.009 99.6376 132.929 98.9139 133.027 cv
cp
f
41.4896 140.595 mo
39.3578 139.966 li
39.5316 138.18 38.4579 136.67 38.4086 134.892 cv
38.3602 133.152 39.5707 131.69 39.3529 129.966 cv
39.306 129.591 38.8783 129.487 38.6605 129.794 cv
37.5585 131.345 36.0331 132.358 35.5995 134.235 cv
35.0136 134.234 34.4325 134.682 34.5966 135.511 cv
34.8431 136.759 35.2665 137.895 35.8846 138.943 cv
34.767 138.614 li
34.4281 138.514 34.1942 138.72 34.1185 138.981 cv
31.1117 137.511 28.1156 136.019 25.0795 134.61 cv
24.9574 134.554 24.8553 134.731 24.9764 134.794 cv
27.972 136.356 31.0121 137.832 34.0385 139.333 cv
34.0697 139.348 34.0966 139.339 34.1249 139.338 cv
34.1742 139.499 34.286 139.642 34.4911 139.705 cv
36.9852 140.476 li
37.1478 140.645 37.3392 140.685 37.5175 140.641 cv
41.1898 141.776 li
41.9398 142.008 42.2411 140.816 41.4896 140.595 cv
cp
f
24.5697 135.05 mo
22.0853 131.751 19.285 128.748 17.099 125.224 cv
14.9384 121.741 13.7274 117.591 11.3119 114.317 cv
11.1483 114.096 10.8881 114.012 10.6498 114.04 cv
9.85486 111.839 8.98035 109.68 7.87195 107.647 cv
7.65857 107.256 7.03015 107.458 7.04675 107.889 cv
7.28748 113.901 10.1947 119.7 12.6698 125.093 cv
12.954 125.712 13.7572 125.606 14.1639 125.19 cv
14.4452 125.64 14.7264 126.08 15.0018 126.509 cv
15.0399 126.568 15.0804 126.627 15.1185 126.686 cv
14.9828 126.745 14.9003 126.921 15.0267 127.077 cv
15.5824 127.765 16.1639 128.431 16.7543 129.089 cv
18.1928 131.084 19.7948 132.969 21.62 134.6 cv
21.62 134.732 21.6708 134.871 21.8007 134.998 cv
22.6913 135.87 22.3788 135.677 23.517 136.148 cv
24.1522 136.411 25.101 135.754 24.5697 135.05 cv
cp
f
45.184 88.582 mo
44.7499 88.4907 44.3329 88.3677 43.9232 88.23 cv
46.1654 88.3525 48.6293 88.1943 51.0228 87.7065 cv
49.2919 88.4873 47.5345 89.0757 45.184 88.582 cv
cp
98.2758 81.1328 mo
96.4281 80.2378 94.3534 79.9849 92.3573 79.5664 cv
91.4174 79.3691 90.7279 79.8877 90.4154 80.5742 cv
90.3915 80.5723 90.3671 80.5679 90.3431 80.5659 cv
89.9354 80.5337 89.5253 80.4897 89.1195 80.4585 cv
89.6034 80.1099 90.0712 79.7212 90.5082 79.2539 cv
90.7889 78.9541 90.579 78.3935 90.1429 78.4214 cv
88.1356 78.5488 86.3143 79.2544 84.3304 79.5356 cv
83.9808 79.585 83.6302 79.604 83.2797 79.6294 cv
83.1234 79.3252 82.8309 79.0986 82.3763 79.1221 cv
82.1556 79.1333 81.934 79.1509 81.7133 79.165 cv
82.0731 78.8984 82.4218 78.6089 82.7606 78.3008 cv
85.1088 77.3935 87.451 76.4663 89.7738 75.4805 cv
90.4755 75.1826 90.1967 74.1743 89.4315 74.335 cv
87.0009 74.8452 84.6063 75.5098 82.2416 76.2812 cv
82.1747 76.2886 82.1097 76.2856 82.0409 76.3081 cv
81.139 76.6001 80.2489 76.9321 79.3632 77.2798 cv
76.4994 78.3291 73.6849 79.5268 70.9061 80.7988 cv
70.4369 80.9785 69.9652 81.1538 69.4901 81.3179 cv
67.4974 82.0073 65.6576 82.7339 64.0331 83.8613 cv
61.9208 84.8164 59.8588 85.9429 57.8314 87.0557 cv
57.7294 86.5981 57.3334 86.21 56.7953 86.4243 cv
56.7094 86.4585 56.6224 86.4902 56.5365 86.5244 cv
56.4779 86.3247 56.3383 86.1416 56.1532 86.022 cv
58.9179 84.6709 61.1757 82.6548 62.2538 79.8179 cv
62.4667 79.2588 61.7445 78.8901 61.3099 79.123 cv
58.2509 80.7622 55.9252 83.2847 52.66 84.6768 cv
49.0863 86.1997 45.3666 86.6836 41.5189 86.1606 cv
41.1268 86.1074 40.8217 86.2842 40.6283 86.5376 cv
38.1512 84.7959 36.1522 82.3018 34.3524 79.915 cv
33.5155 78.8047 31.6727 79.8667 32.474 81.0669 cv
35.4266 85.4858 38.9193 90.3911 44.3788 91.7622 cv
44.8661 91.8843 45.327 91.9668 45.7743 92.0278 cv
45.7372 92.3809 45.7269 92.7358 45.7191 93.0552 cv
45.6908 94.2476 45.7255 95.4429 45.7821 96.6392 cv
45.7587 96.6479 45.7396 96.6548 45.7172 96.6631 cv
45.7123 96.6411 45.7064 96.6186 45.702 96.5962 cv
45.3148 94.7266 42.4491 95.5781 42.849 97.4477 cv
43.6703 101.291 44.4955 105.208 45.8402 108.906 cv
46.4437 110.568 48.8392 109.844 48.4633 108.124 cv
48.2924 107.344 48.1669 106.557 48.0726 105.765 cv
48.7391 105.965 49.5004 105.701 49.7269 104.833 cv
49.7953 104.573 49.8466 104.313 49.9091 104.052 cv
50.0453 105.28 50.2045 106.503 50.412 107.714 cv
50.6283 108.974 52.6146 108.594 52.5922 107.372 cv
52.5199 103.472 52.0297 99.5146 51.2465 95.6919 cv
51.0702 94.8296 49.6991 94.894 49.5331 95.728 cv
49.2611 97.0903 48.9071 98.4346 48.5116 99.7676 cv
48.4091 99.102 48.3275 98.4336 48.2738 97.7607 cv
49.0502 96.7563 49.4984 95.4819 49.5179 94.166 cv
49.5297 93.3227 48.6342 93.1206 48.0931 93.4873 cv
48.0824 93.0195 48.0712 92.5513 48.0565 92.082 cv
49.6317 91.9258 50.9818 91.3643 52.2719 90.5273 cv
53.1923 90.3364 54.0668 90.0356 54.8036 89.3979 cv
54.8256 89.3784 54.827 89.3496 54.8451 89.3276 cv
56.9691 88.4809 59.1967 87.7036 61.412 86.8696 cv
61.5277 87.6313 62.472 88.207 63.1576 87.477 cv
63.3456 87.2764 63.5502 87.104 63.7484 86.9219 cv
64.6005 86.7427 65.4379 86.4473 66.266 86.0903 cv
66.2772 86.1743 66.287 86.2593 66.3153 86.3398 cv
65.306 86.9546 64.3348 87.5918 63.4242 88.2256 cv
61.4027 88.2451 59.5853 90.7715 58.4843 92.2085 cv
57.2162 93.8633 55.537 96.0801 55.5458 98.2476 cv
55.5507 99.3852 56.8607 99.645 57.5316 99.0034 cv
57.5634 99.0342 li
59.0067 97.6294 59.722 95.4277 61.014 93.8413 cv
61.6093 93.1108 62.5194 92.3999 63.2831 91.6226 cv
65.995 89.6958 68.8676 88.0679 71.9994 86.8486 cv
75.0585 85.6577 78.5951 85.3735 81.3739 83.6186 cv
81.7753 83.3652 81.8177 82.8257 81.5609 82.4917 cv
81.8099 82.48 82.0458 82.4575 82.3021 82.4512 cv
83.3763 82.4248 84.4056 82.3105 85.3895 82.0923 cv
85.3866 82.3511 85.4779 82.6069 85.6854 82.7729 cv
87.1669 83.959 88.9882 83.415 90.8051 83.519 cv
93.12 83.6509 95.3007 83.9141 97.6249 83.7519 cv
98.9232 83.6616 99.5956 81.7725 98.2758 81.1328 cv
cp
f
61.5531 148.866 mo
59.3212 147.984 56.8514 147.473 54.3026 147.162 cv
54.3422 147.146 54.3827 147.134 54.4222 147.119 cv
54.9188 146.919 54.7943 146.279 54.2821 146.224 cv
46.5487 145.391 40.0897 143.504 33.0609 140.116 cv
32.2206 139.711 31.4594 140.264 31.2377 140.944 cv
28.1205 139.606 25.2015 137.877 22.4637 135.825 cv
22.2889 135.694 22.1014 135.655 21.9198 135.658 cv
16.809 127.973 12.2548 120.218 9.29968 111.305 cv
9.04431 110.535 7.84802 110.883 8.08631 111.667 cv
11.2328 122.011 15.996 132.164 23.6561 139.929 cv
24.0345 140.312 24.7098 139.787 24.3983 139.332 cv
24.3695 139.289 24.3412 139.246 24.3119 139.203 cv
25.8387 140.229 27.4115 141.14 29.0223 141.962 cv
28.7011 142.522 28.7338 143.323 29.4232 143.789 cv
36.4345 148.523 46.1644 151.413 54.6483 150.452 cv
54.7391 150.441 54.8134 150.406 54.8949 150.38 cv
57.098 150.545 59.2767 150.578 61.3846 150.343 cv
62.2582 150.246 62.3387 149.176 61.5531 148.866 cv
cp
.862745 .819608 .741176 rgb
f
118.584 121.52 mo
118.116 121.696 117.689 121.731 117.258 121.716 cv
117.255 121.702 117.256 121.687 117.252 121.673 cv
117.384 120.856 116.807 120.261 116.092 120.057 cv
115.807 119.891 115.47 119.758 115.072 119.663 cv
114.257 119.467 113.599 119.965 113.327 120.703 cv
112.807 122.11 112.288 123.517 111.769 124.923 cv
111.645 125.259 111.641 125.561 111.721 125.819 cv
111.006 127.061 110.226 128.268 109.42 129.461 cv
109.43 128.936 109.098 128.402 108.421 128.416 cv
107.109 128.444 107.149 130.483 108.463 130.455 cv
108.59 130.453 108.693 130.417 108.794 130.381 cv
108.399 130.952 108 131.521 107.599 132.088 cv
105.606 133.748 103.724 135.563 101.803 137.273 cv
101.212 137.799 101.243 138.459 101.577 138.961 cv
98.8451 140.382 96.3085 142.137 93.4203 143.362 cv
93.0194 143.457 92.6205 143.567 92.2206 143.67 cv
95.5175 141.589 98.746 139.328 101.316 136.548 cv
101.898 135.919 101.125 134.963 100.383 135.389 cv
95.4222 138.238 91.0521 142.096 86.1703 145.127 cv
82.5775 145.889 78.9623 146.507 75.3168 146.989 cv
73.8202 147.187 73.6976 149.354 75.0052 149.574 cv
71.5731 149.64 68.1976 149.325 65.0092 147.924 cv
63.4613 147.245 62.1615 149.448 63.7094 150.259 cv
70.8104 153.982 82.3466 154.762 89.3739 150.537 cv
90.1591 150.065 89.7333 148.948 88.8959 148.909 cv
87.934 148.864 86.9623 148.869 85.9847 148.897 cv
89.6918 148.185 93.3597 147.27 96.8466 145.83 cv
99.8109 144.604 103.162 143.145 104.483 140.176 cv
104.506 140.187 104.529 140.199 104.553 140.21 cv
105.273 140.57 106.303 140.525 106.86 139.863 cv
108.703 137.673 110.453 135.194 112.038 132.591 cv
114.042 130.087 116.902 125.972 117.276 123.02 cv
117.856 123.084 118.462 123.019 118.993 122.89 cv
119.891 122.671 119.446 121.195 118.584 121.52 cv
cp
f
56.1996 137.231 mo
55.2299 135.924 53.8676 135.899 52.3246 135.987 cv
50.183 136.11 48.1796 136.012 46.0809 135.503 cv
44.7762 135.187 44.3275 137.089 45.5746 137.503 cv
47.267 138.064 48.9808 138.413 50.7572 138.573 cv
52.3099 138.713 54.1469 138.975 55.6688 138.62 cv
56.2245 138.49 56.5502 137.703 56.1996 137.231 cv
cp
f
101.234 95.8691 mo
100.84 95.2695 99.8871 95.229 99.5341 95.9048 cv
98.1708 98.5181 97.642 100.735 94.9896 102.35 cv
92.7074 103.74 90.4032 105.034 88.0219 106.213 cv
88.8651 106.391 89.1185 107.809 88.0892 108.157 cv
82.5062 110.046 76.7201 110.748 70.8881 111.388 cv
70.3412 111.448 70.037 111.114 69.9496 110.705 cv
69.9462 110.706 69.9423 110.707 69.9388 110.708 cv
69.4193 110.883 69.1361 111.257 69.0404 111.673 cv
67.7621 111.502 66.4662 111.437 65.2118 111.223 cv
64.7089 110.69 64.2577 110.107 63.8685 109.605 cv
62.2274 107.486 60.9515 105.136 59.995 102.636 cv
59.4686 101.26 57.3007 101.862 57.7714 103.299 cv
58.3163 104.964 59.0077 106.713 59.8617 108.382 cv
59.1669 108.255 58.3451 109.102 58.8607 109.795 cv
59.9144 111.213 61.4564 112.366 63.2108 113.195 cv
63.4393 113.43 63.6644 113.67 63.9071 113.886 cv
65.2831 115.107 68.9427 116.465 70.1522 114.652 cv
70.8519 114.625 71.537 114.55 72.1903 114.408 cv
72.2562 114.406 72.3158 114.42 72.3856 114.406 cv
75.7504 113.694 79.6229 113.363 82.7748 111.973 cv
83.495 111.656 83.4574 110.58 82.6312 110.497 cv
82.6503 110.483 82.6722 110.474 82.6913 110.459 cv
82.7684 110.4 82.8138 110.324 82.8676 110.251 cv
82.9623 110.279 83.0653 110.29 83.184 110.258 cv
86.9203 109.245 91.3973 108.861 94.8427 107.094 cv
95.3993 106.809 95.2382 105.979 94.7372 105.762 cv
96.2709 105.094 97.8749 104.336 99.0096 103.34 cv
100.071 102.407 100.65 100.963 101.274 99.7295 cv
101.986 98.3223 102.073 97.145 101.234 95.8691 cv
cp
f
93.432 81.7183 mo
91.0917 81.4116 88.9496 81.0781 86.6425 81.8003 cv
86.432 81.8662 86.2719 81.9731 86.1473 82.1016 cv
83.7909 82.0854 81.5135 83.0351 79.2333 83.7476 cv
76.8348 84.4971 74.4291 85.2231 72.0248 85.9546 cv
72.2142 85.2471 71.4471 84.4194 70.7074 84.7007 cv
67.4125 85.9536 64.5551 88.7915 61.9432 91.104 cv
59.7723 93.0254 58.0477 95.2192 57.3051 98.0571 cv
57.0883 98.8843 58.3578 99.4365 58.7308 98.6235 cv
60.7963 94.1216 65.8969 92.084 69.5619 88.8384 cv
75.5844 87.3623 81.932 86.3076 87.788 84.3818 cv
88.0912 84.2817 88.2958 84.063 88.4188 83.8071 cv
90.9906 83.4619 93.2933 84.5781 95.8895 84.5093 cv
96.243 84.5 96.5707 84.2451 96.6561 83.8994 cv
97.1141 82.0513 94.639 81.8765 93.432 81.7183 cv
cp
f
81.1195 77.271 mo
78.8563 75.8608 76.6034 77.0825 74.4686 78.2427 cv
70.9554 80.1518 67.5223 82.2124 64.0912 84.2622 cv
62.6483 85.124 63.9882 87.2881 65.451 86.4805 cv
68.2196 84.9526 70.9823 83.4101 73.8085 81.9902 cv
76.2289 80.7739 78.9921 79.9097 81.14 78.2422 cv
81.4764 77.9809 81.5038 77.5102 81.1195 77.271 cv
cp
f
32.4974 84.1645 mo
29.9911 80.3476 24.4672 79.749 21.1317 76.7837 cv
21.1307 76.7851 21.1298 76.7871 21.1288 76.7886 cv
20.473 76.1577 19.0316 76.9683 19.684 77.9497 cv
20.0453 78.4927 20.4623 78.9697 20.9139 79.4067 cv
20.662 79.7183 20.6146 80.1977 20.954 80.5146 cv
20.9491 80.5166 20.9437 80.519 20.9393 80.521 cv
24.079 82.9697 27.432 84.1567 31.0321 85.6924 cv
31.9613 86.0889 33.1522 85.1621 32.4974 84.1645 cv
cp
f
37.4296 107.053 mo
37.2142 106.92 37.0023 106.837 36.7914 106.777 cv
36.7924 106.77 36.7943 106.763 36.7953 106.756 cv
36.9852 104.489 35.8929 101.304 35.0292 99.2261 cv
34.6054 98.206 34.0775 97.2588 33.4852 96.3564 cv
33.5433 96.1987 33.5614 96.0151 33.5077 95.8057 cv
32.871 93.3227 30.7758 91.1484 28.8241 89.5923 cv
27.0453 88.1743 24.911 87.2593 23.1356 85.8677 cv
23.0834 85.542 22.8734 85.2305 22.4872 85.0898 cv
22.2416 85.0005 21.9955 84.9111 21.7499 84.8218 cv
20.747 84.4565 20.2142 85.6904 20.557 86.4424 cv
21.5419 88.6011 23.8715 89.5747 25.7069 90.8867 cv
26.9218 91.7549 27.9642 92.811 29.0013 93.8667 cv
28.9716 94.1533 29.057 94.457 29.3173 94.7226 cv
31.3803 96.8296 32.8402 99.3164 33.5267 102.198 cv
33.9174 103.836 33.8798 105.81 35.1342 106.939 cv
34.6259 107.175 34.1493 107.548 33.723 107.985 cv
32.9315 108.797 32.3876 109.651 31.2245 109.955 cv
30.1986 110.224 29.099 109.94 28.0756 109.537 cv
28.0448 109.447 28.0004 109.363 27.932 109.298 cv
26.455 107.898 23.9886 108.378 22.0912 107.976 cv
19.4086 107.406 16.9447 106.304 14.6444 104.826 cv
13.6469 104.185 12.8524 105.738 13.7665 106.403 cv
16.1268 108.121 18.7103 109.419 21.5258 110.209 cv
22.455 110.471 23.5756 110.818 24.6727 110.951 cv
24.7889 111.091 24.9471 111.214 25.1537 111.312 cv
27.4374 112.395 29.9511 113.452 32.5009 112.644 cv
34.6478 111.964 35.747 109.873 37.4613 108.571 cv
37.9916 108.168 38.0262 107.423 37.4296 107.053 cv
cp
f
84.4945 108.385 mo
84.4301 108.386 84.432 108.486 84.4965 108.484 cv
84.5609 108.483 84.559 108.383 84.4945 108.385 cv
cp
f
122.308 80.7075 mo
124.387 76.126 124.778 69.876 125.141 65.1514 cv
125.562 59.6758 125.13 54.0493 122.106 49.3208 cv
122.056 49.2422 121.993 49.1909 121.934 49.1279 cv
121.89 48.312 121.835 47.4849 121.756 46.6431 cv
121.806 45.1553 121.571 43.6465 121.143 42.1621 cv
119.916 35.5107 117.131 29.0991 111.022 26.4932 cv
108.518 23.1118 105.316 20.437 101.728 18.2305 cv
101.366 18.0078 101.027 17.9819 100.743 18.0801 cv
99.3441 16.7798 97.8593 15.5811 96.2772 14.5752 cv
90.8314 10.2344 81.7367 8.88281 75.8427 8.11963 cv
74.7098 7.97315 74.2675 9.51172 75.3993 9.86963 cv
83.5487 12.4473 92.4125 14.7153 98.7015 20.7949 cv
99.0077 21.0903 99.4393 21.0864 99.7714 20.9097 cv
100.111 21.1548 100.461 21.3872 100.807 21.624 cv
100.753 21.8887 100.806 22.1758 101.052 22.4116 cv
103.761 25.0137 106.597 27.5205 109.189 30.2471 cv
110.863 33.0478 111.756 37.0796 114.123 39.2739 cv
114.487 39.6113 114.977 39.4048 115.136 38.9839 cv
115.193 38.8315 115.232 38.6733 115.275 38.5161 cv
115.67 39.3262 116.017 40.1499 116.345 40.9785 cv
116.573 42.0796 116.773 43.1934 116.984 44.3076 cv
116.42 45.0063 116.343 45.106 116.158 46.0244 cv
116.032 46.644 116.489 47.0239 116.962 47.0488 cv
117.573 52.6748 118.448 58.251 118.65 63.9282 cv
118.877 70.3384 118.069 76.5483 117.634 82.9141 cv
117.632 82.9453 117.627 82.978 117.627 83.0088 cv
117.625 83.0273 117.624 83.0449 117.623 83.0635 cv
117.626 83.063 117.629 83.0625 117.632 83.062 cv
117.649 84.0005 118.349 84.6401 119.149 84.8442 cv
119.068 85.3393 118.992 85.8354 118.907 86.3306 cv
118.138 90.7954 116.763 95.2773 116.709 99.8184 cv
116.64 100.232 116.757 100.565 116.981 100.798 cv
116.377 103.139 115.975 105.487 116.218 107.865 cv
116.225 107.863 116.234 107.861 116.242 107.858 cv
116.287 108.625 117.352 109.251 118.018 108.312 cv
120.293 105.106 120.708 100.781 121.414 96.979 cv
122.019 93.7256 122.952 90.5185 121.843 87.3193 cv
121.786 87.1528 121.692 87.0244 121.586 86.9131 cv
121.651 86.2983 121.718 85.6875 121.793 85.0845 cv
121.974 83.626 122.139 82.1665 122.308 80.7075 cv
cp
f
145.899 83.3872 mo
143.738 84.8037 141.863 86.8286 139.73 88.1084 cv
136.963 89.7681 133.724 91.0327 130.837 92.5317 cv
129.829 93.0552 129.836 94.0854 130.343 94.8115 cv
129.93 95.1543 129.509 95.4868 129.069 95.79 cv
127.188 97.0845 125.125 97.9253 122.912 98.4609 cv
121.194 98.8769 121.983 101.485 123.696 101.089 cv
127.447 100.224 132.659 98.1172 134.679 94.4258 cv
137.02 93.3745 139.577 92.3193 141.414 90.792 cv
141.669 90.5796 141.915 90.3589 142.153 90.1328 cv
141.571 91.4043 141.009 92.6846 140.431 93.9512 cv
139.027 97.0229 137.002 100.113 136.339 103.436 cv
136.107 104.595 137.494 105.421 138.361 104.556 cv
140.894 102.028 142.339 98.2427 143.851 95.0415 cv
145.427 91.7041 146.911 88.2622 147.564 84.6123 cv
147.727 83.7056 146.764 82.8203 145.899 83.3872 cv
cp
f
133.336 111.432 mo
131.284 113.732 128.753 115.77 126.482 117.864 cv
124.115 120.046 121.687 122.284 118.516 123.113 cv
117.623 123.347 117.402 124.772 118.29 125.175 cv
121.388 126.579 124.024 123.918 126.331 122.069 cv
129.786 119.299 132.188 116.36 134.875 112.908 cv
135.701 111.847 134.267 110.388 133.336 111.432 cv
cp
f
104.529 134.011 mo
104.204 134.435 103.88 134.858 103.556 135.282 cv
103.546 135.293 103.563 135.31 103.573 135.298 cv
103.897 134.874 104.221 134.451 104.546 134.027 cv
104.555 134.015 104.538 133.999 104.529 134.011 cv
cp
f
53.8754 67.3696 mo
51.6893 67.416 51.7572 70.8135 53.9471 70.7676 cv
56.1332 70.7217 56.0653 67.3237 53.8754 67.3696 cv
cp
.933333 .901961 .831373 rgb
f
45.6566 57.0327 mo
44.1034 57.0649 44.1517 59.4785 45.7074 59.4458 cv
47.2601 59.4136 47.2118 57 45.6566 57.0327 cv
cp
f
59.7489 49.3916 mo
59.6845 49.3931 59.6869 49.4932 59.7509 49.4917 cv
59.8153 49.4902 59.8134 49.3901 59.7489 49.3916 cv
cp
f
82.9725 59.792 mo
80.8314 59.8369 80.8983 63.1641 83.0428 63.1191 cv
85.184 63.0742 85.1171 59.7466 82.9725 59.792 cv
cp
f
92.6298 55.2637 mo
90.7152 55.3037 90.7743 58.2798 92.6923 58.2397 cv
94.6068 58.1992 94.5477 55.2231 92.6298 55.2637 cv
cp
f
76.8436 53.5791 mo
76.7733 53.5835 76.704 53.5889 76.6342 53.5933 cv
76.6371 53.5659 76.6259 53.5381 76.5897 53.5386 cv
76.5516 53.5395 76.5443 53.5703 76.5521 53.5991 cv
64.9657 54.3086 53.5243 55.8096 41.8842 56.0112 cv
41.5072 56.0176 41.5194 56.6001 41.8964 56.5972 cv
53.4672 56.5044 65.5424 56.3623 76.9301 54.1299 cv
77.2416 54.0688 77.1571 53.5601 76.8436 53.5791 cv
cp
f
73.6879 46.3481 mo
73.6239 46.3496 73.6259 46.4492 73.6903 46.4478 cv
73.7548 46.4468 73.7523 46.3467 73.6879 46.3481 cv
cp
f
76.1918 34.6045 mo
74.2772 34.6445 74.3363 37.6206 76.2543 37.5806 cv
78.1688 37.54 78.1097 34.564 76.1918 34.6045 cv
cp
f
69.6395 32.1802 mo
69.5751 32.1811 69.577 32.2812 69.6415 32.2798 cv
69.7059 32.2788 69.704 32.1787 69.6395 32.1802 cv
cp
f
69.0326 47.394 mo
68.8724 47.2148 68.6742 47.0791 68.4637 46.9639 cv
68.349 46.9009 68.0756 46.7163 68.4467 47.0132 cv
67.4594 46.2241 66.0907 46.2061 65.286 47.2939 cv
64.4799 48.3843 64.9086 49.6714 65.9467 50.3975 cv
66.3617 50.688 66.9164 50.855 67.4237 50.8501 cv
68.0936 50.8433 68.5892 50.5767 69.0907 50.1528 cv
69.9384 49.4375 69.6757 48.1108 69.0326 47.394 cv
cp
f
76.1234 50.2944 mo
76.1356 50.2764 76.1503 50.2637 76.1625 50.2461 cv
76.203 50.1914 76.2435 50.1367 76.2836 50.082 cv
76.2303 50.1528 76.1766 50.2236 76.1234 50.2944 cv
cp
f
79.1161 50.4795 mo
78.9686 50.2705 78.8129 50.1069 78.639 49.9687 cv
78.6664 49.9839 li
78.6405 49.9639 78.6146 49.9438 78.5892 49.9238 cv
78.4081 49.7847 78.2191 49.688 78.0287 49.6186 cv
77.9935 49.604 77.9633 49.5869 77.9261 49.5728 cv
77.9344 49.5776 77.9437 49.5825 77.9525 49.5874 cv
77.2938 49.3813 76.6229 49.5996 76.1625 50.2461 cv
76.1141 50.312 76.0653 50.3774 76.017 50.4434 cv
75.8129 50.7749 75.7738 51.1943 75.8319 51.5679 cv
75.8885 51.9316 75.9706 52.2519 76.1893 52.562 cv
76.5956 53.1387 77.1908 53.5679 77.8846 53.7227 cv
78.7806 53.9224 79.8256 53.3975 80.0209 52.4497 cv
80.1967 51.5937 79.8173 50.8691 79.1161 50.4795 cv
cp
f
72.4037 32.8203 mo
62.3212 31.9526 52.2137 31.54 42.1073 31.0327 cv
41.0697 30.9805 41.1014 32.6103 42.1415 32.6494 cv
46.4589 32.812 50.7748 32.9873 55.0912 33.1416 cv
54.9037 33.9585 55.3588 34.9487 56.4442 34.9258 cv
57.4618 34.9043 57.8925 34.0132 57.7592 33.2358 cv
62.6434 33.396 67.5292 33.5146 72.4183 33.5229 cv
72.8798 33.5239 72.8441 32.8579 72.4037 32.8203 cv
cp
f
38.1014 42.5952 mo
38.037 42.5967 38.0389 42.6963 38.1034 42.6953 cv
38.1679 42.6938 38.1659 42.5937 38.1014 42.5952 cv
cp
f
32.1576 57.2231 mo
32.0931 57.2246 32.0951 57.3247 32.1595 57.3232 cv
32.224 57.3218 32.222 57.2222 32.1576 57.2231 cv
cp
f
35.2074 59.5571 mo
33.0814 59.602 33.1473 62.9062 35.2767 62.8613 cv
37.4027 62.8164 37.3368 59.5127 35.2074 59.5571 cv
cp
f
34.5985 30.603 mo
32.2011 30.6533 32.2758 34.3789 34.6766 34.3286 cv
37.0741 34.2783 36.9999 30.5522 34.5985 30.603 cv
cp
f
42.4262 22.3115 mo
40.5116 22.3516 40.5707 25.3276 42.4887 25.2876 cv
44.4032 25.2471 44.3441 22.271 42.4262 22.3115 cv
cp
f
21.6005 42.7183 mo
19.6405 42.7598 19.7011 45.8061 21.6644 45.7646 cv
23.6244 45.7236 23.5638 42.6772 21.6005 42.7183 cv
cp
f
20.0404 51.7886 mo
18.1259 51.8286 18.1849 54.8047 20.1034 54.7642 cv
22.0179 54.7241 21.9589 51.748 20.0404 51.7886 cv
cp
f
37.5009 61.6118 mo
37.4364 61.6133 37.4384 61.7134 37.5028 61.7119 cv
37.5673 61.7104 37.5653 61.6103 37.5009 61.6118 cv
cp
f
47.7968 39.8906 mo
47.7323 39.8921 47.7343 39.9922 47.7987 39.9907 cv
47.8632 39.9893 47.8612 39.8896 47.7968 39.8906 cv
cp
f
43.0316 69.7681 mo
43.1635 69.5088 43.0404 69.1138 42.66 69.1216 cv
42.5214 69.1245 42.4183 69.1807 42.3505 69.2622 cv
42.2172 69.2231 42.0741 69.1963 41.9115 69.1997 cv
40.1473 69.2368 40.202 71.9785 41.9691 71.9414 cv
43.2054 71.9155 43.5448 70.5635 43.0316 69.7681 cv
cp
f
18.8705 67.5039 mo
17.1971 67.5391 17.2489 70.1401 18.9252 70.105 cv
20.599 70.0698 20.5472 67.4687 18.8705 67.5039 cv
cp
f
55.7758 75.186 mo
51.2284 75.6875 46.5634 75.8101 42.0228 75.2139 cv
40.7655 75.0488 40.5482 76.8174 41.8256 76.9448 cv
46.6815 77.4277 51.1879 77.1328 55.8578 75.7143 cv
56.139 75.6289 56.0863 75.1518 55.7758 75.186 cv
cp
f
54.0424 63.4082 mo
47.1874 63.4565 40.3661 63.3945 33.5277 62.8716 cv
33.0634 62.8359 33.0775 63.5679 33.5429 63.5977 cv
40.3705 64.0405 47.2191 64.1948 54.0487 63.7124 cv
54.2435 63.6987 54.2396 63.4067 54.0424 63.4082 cv
cp
f
64.0668 52.6177 mo
53.3993 51.873 42.5028 52.5049 31.808 52.5229 cv
31.4608 52.5239 31.473 53.0591 31.8197 53.062 cv
42.5126 53.1509 53.4071 53.8564 64.0785 53.1797 cv
64.4442 53.1567 64.4242 52.6426 64.0668 52.6177 cv
cp
f
79.0306 38.792 mo
65.7821 39.4893 52.8397 40.6582 39.5448 39.855 cv
38.8944 39.8154 38.9266 40.8135 39.5658 40.8628 cv
52.5922 41.8603 66.2992 42.271 79.1815 39.7559 cv
79.7289 39.6489 79.5785 38.7632 79.0306 38.792 cv
cp
f
99.3641 54.4463 mo
98.4935 54.4644 97.6761 55.2471 97.7352 56.145 cv
97.7948 57.0454 98.5009 57.793 99.434 57.7734 cv
100.305 57.7554 101.121 56.9727 101.063 56.0747 cv
101.003 55.1743 100.297 54.4263 99.3641 54.4463 cv
cp
f
97.7323 60.0957 mo
97.6678 60.0972 97.6698 60.1973 97.7343 60.1958 cv
97.7987 60.1943 97.7968 60.0942 97.7323 60.0957 cv
cp
f
99.4066 68.374 mo
97.4921 68.4145 97.5511 71.3901 99.4691 71.3501 cv
101.384 71.3096 101.325 68.334 99.4066 68.374 cv
cp
f
101.377 78.8271 mo
100.096 78.854 100.135 80.8457 101.419 80.8188 cv
102.7 80.792 102.661 78.8003 101.377 78.8271 cv
cp
f
47.4003 15.6455 mo
47.3495 15.5298 47.2806 15.4253 47.2015 15.3296 cv
48.1195 14.8779 49.057 14.4521 50.0131 14.0522 cv
49.1303 14.5674 48.2616 15.1011 47.4003 15.6455 cv
cp
10.809 64.2021 mo
10.8534 63.6035 10.9491 62.936 11.0785 62.2339 cv
11.1107 62.6079 11.1386 62.9829 11.1825 63.3564 cv
11.0595 63.6387 10.9393 63.9219 10.809 64.2021 cv
cp
55.5331 11.1089 mo
55.2577 11.1396 54.972 11.2192 54.683 11.3184 cv
54.5272 10.8853 54.0902 10.5332 53.4945 10.6382 cv
51.2933 11.0273 49.0887 11.564 46.9017 12.2222 cv
46.6605 11.519 45.9081 11.0464 45.0966 11.5347 cv
43.62 12.4229 42.1815 13.3984 40.7626 14.4116 cv
36.0521 16.3481 31.5331 18.7949 27.4501 21.5474 cv
26.5004 22.1226 27.3778 23.5254 28.3456 23.0083 cv
29.5736 22.3521 30.8002 21.7324 32.0277 21.1313 cv
23.6547 27.1611 15.2045 34.2856 12.2548 44.2725 cv
11.9867 45.1802 12.4984 45.8135 13.1849 46.0322 cv
11.8539 49.3467 10.744 52.748 9.89392 56.2539 cv
9.14002 59.3652 6.19568 66.6533 9.81824 68.7974 cv
10.4589 69.1768 11.5526 68.8135 11.661 68.0019 cv
11.7054 67.6709 11.7631 67.3437 11.8138 67.0142 cv
11.8256 67.0664 11.8339 67.1186 11.8456 67.1704 cv
11.9906 67.7993 12.7855 67.9907 13.2792 67.6787 cv
13.3495 68.0264 13.4193 68.3745 13.4896 68.7226 cv
13.6273 69.4058 13.7504 70.5679 14.6307 70.7324 cv
14.9984 70.8008 15.2821 70.6294 15.4486 70.3833 cv
15.4882 70.439 15.515 70.499 15.557 70.5542 cv
16.3314 71.5698 18.4061 70.9536 17.807 69.5493 cv
16.2601 65.9219 16.6346 61.4648 17.6923 57.0972 cv
18.9398 53.4307 20.078 49.7163 21.3412 46.1465 cv
21.7269 45.0557 20.5175 44.2549 19.5858 44.4775 cv
20.2382 43.1958 20.9135 41.9302 21.621 40.688 cv
21.9779 40.3696 22.3363 40.0532 22.6825 39.7207 cv
22.1644 41.9971 21.8812 44.3325 21.8954 46.709 cv
21.8978 47.0825 22.4462 47.1382 22.5414 46.7827 cv
23.5409 43.0518 24.7479 39.4761 26.2386 36.1001 cv
26.9686 35.3413 27.7001 34.5889 28.4476 33.8638 cv
30.8759 31.5083 33.3832 29.2427 35.953 27.0469 cv
36.347 26.7466 36.7387 26.4482 37.1259 26.1538 cv
40.2264 23.7983 43.4335 21.5806 46.6986 19.4614 cv
48.9257 18.0161 55.4286 15.2192 55.7572 13.1401 cv
55.5184 14.6514 57.493 15.1147 58.0302 13.7153 cv
58.7225 11.9111 57.1918 10.9253 55.5331 11.1089 cv
cp
.992157 .984314 .972549 rgb
f
35.5682 29.1455 mo
35.5038 29.147 35.5057 29.2466 35.5702 29.2451 cv
35.6346 29.2441 35.6327 29.144 35.5682 29.1455 cv
cp
f
11.2592 81.9541 mo
10.3998 80.3745 9.52234 79.4687 9.45642 77.5054 cv
9.42371 76.5312 7.89685 76.2915 7.70203 77.3057 cv
7.47986 78.4658 7.38904 79.6113 7.62244 80.7847 cv
7.74597 81.4038 7.99109 81.9253 8.1908 82.5107 cv
8.50427 83.4272 8.55701 82.958 7.78308 83.5405 cv
6.06189 84.835 5.41101 87.5493 6.59851 89.3525 cv
6.82996 89.7041 7.40564 89.7388 7.61023 89.331 cv
8.17078 88.2139 8.58826 86.9927 9.46961 86.0781 cv
10.1659 85.355 11.0966 84.9639 11.4652 83.9731 cv
11.7338 83.2519 11.6166 82.6123 11.2592 81.9541 cv
cp
f
26.3055 132.592 mo
24.1029 130.725 22.5116 127.647 20.9589 125.267 cv
20.9442 125.244 20.9296 125.22 20.9144 125.197 cv
21.0629 125.041 21.1239 124.805 20.9872 124.544 cv
19.9242 122.512 18.4462 120.747 17.0565 118.927 cv
16.6322 118.207 16.1986 117.491 15.7831 116.765 cv
15.6508 116.534 15.4579 116.443 15.2621 116.436 cv
14.1146 114.796 12.9989 113.135 11.934 111.438 cv
11.6591 111 11.2191 110.924 10.8368 111.047 cv
10.6244 110.604 10.4218 110.154 10.2445 109.685 cv
8.98572 106.353 8.44129 102.792 7.94226 99.2837 cv
7.76306 98.0225 5.8197 97.9849 5.90369 99.3267 cv
6.30554 105.721 6.89197 116.152 14.2123 118.642 cv
15.2074 120.084 16.2679 121.478 17.4208 122.736 cv
18.4594 124.58 19.5316 126.405 20.6449 128.207 cv
22.0136 130.422 23.1122 132.88 25.8768 133.365 cv
26.2914 133.438 26.6805 132.91 26.3055 132.592 cv
cp
f
29.0658 85.7788 mo
25.7069 81.9097 19.0292 80.6343 14.2665 79.6499 cv
13.3949 79.4697 13.0702 80.7417 13.9271 80.9907 cv
16.6703 81.79 19.3236 82.9038 21.9061 84.126 cv
24.0336 85.1333 26.0385 86.5347 28.3407 87.0869 cv
29.1371 87.2778 29.5541 86.3403 29.0658 85.7788 cv
cp
f
31.2645 79.0513 mo
31.4047 79.1045 31.5419 79.165 31.682 79.2168 cv
32.4447 79.4995 32.872 78.3013 32.1971 77.9209 cv
28.5702 75.8779 24.723 74.2017 20.9476 72.4536 cv
20.2264 72.1191 19.5946 72.7217 19.5575 73.3149 cv
19.0726 73.0991 18.5892 72.8828 18.1132 72.6616 cv
17.2582 72.2651 16.5385 73.5229 17.3944 73.9521 cv
22.0834 76.3022 26.7738 79.2085 31.8178 80.6919 cv
32.4579 80.8804 32.7001 80.0132 32.2206 79.6768 cv
31.91 79.4585 31.5848 79.2583 31.2645 79.0513 cv
cp
f
58.6156 78.7378 mo
58.3138 78.7441 58.3231 79.2124 58.6254 79.206 cv
58.9271 79.1997 58.9179 78.7314 58.6156 78.7378 cv
cp
f
85.3754 69.3501 mo
78.2045 70.2978 71.183 73.3227 64.3231 75.5244 cv
63.5785 75.7632 63.5365 76.5893 63.9066 77.0586 cv
64.0565 77.5161 64.4921 77.8852 65.0912 77.7207 cv
70.764 76.1626 77.6674 75.1763 82.7924 72.189 cv
83.7552 71.835 84.7084 71.4619 85.6415 71.0483 cv
86.4369 70.6958 86.4442 69.209 85.3754 69.3501 cv
cp
f
97.7133 47.2876 mo
97.5775 47.2905 97.5819 47.5015 97.7177 47.4985 cv
97.8534 47.4961 97.849 47.2852 97.7133 47.2876 cv
cp
f
85.41 32.1719 mo
85.2123 31.5425 84.8544 31.0342 84.4755 30.5039 cv
84.0062 29.8472 83.0731 29.6743 82.4828 30.2896 cv
81.8939 30.9038 82.1078 31.8257 82.7811 32.2715 cv
83.3236 32.6313 83.8427 32.9683 84.4784 33.1431 cv
85.0448 33.2988 85.5844 32.728 85.41 32.1719 cv
cp
f
87.0023 37.3779 mo
85.0878 37.418 85.1469 40.394 87.0653 40.354 cv
88.9799 40.3135 88.9208 37.3374 87.0023 37.3779 cv
cp
f
77.3934 44.1909 mo
76.2631 44.2144 76.2977 45.9722 77.4305 45.9482 cv
78.5609 45.9243 78.5262 44.167 77.3934 44.1909 cv
cp
f
67.3695 40.5166 mo
67.0204 39.7739 66.6713 39.0308 66.3221 38.2881 cv
65.975 37.5488 64.8842 37.396 64.243 37.7891 cv
63.4843 38.2549 63.3959 39.1269 63.7445 39.8686 cv
64.0931 40.6113 64.4423 41.354 64.7914 42.0972 cv
65.1385 42.8359 66.2299 42.9888 66.871 42.5957 cv
67.6298 42.1299 67.7181 41.2583 67.3695 40.5166 cv
cp
f
63.6879 34.5557 mo
63.6234 34.5571 63.6259 34.6567 63.6903 34.6558 cv
63.7548 34.6543 63.7523 34.5542 63.6879 34.5557 cv
cp
f
56.3397 29.959 mo
56.2753 29.9604 56.2777 30.0605 56.3422 30.0591 cv
56.4061 30.0576 56.4042 29.9575 56.3397 29.959 cv
cp
f
52.3104 28.605 mo
50.3959 28.6455 50.455 31.6211 52.3729 31.5811 cv
54.2875 31.5405 54.2284 28.5649 52.3104 28.605 cv
cp
f
40.5429 39.793 mo
40.4784 39.7944 40.4808 39.8945 40.5453 39.8931 cv
40.6097 39.8916 40.6073 39.792 40.5429 39.793 cv
cp
f
37.8158 40.9126 mo
35.9012 40.9526 35.9603 43.9287 37.8783 43.8882 cv
39.7933 43.8481 39.7338 40.8721 37.8158 40.9126 cv
cp
f
29.2284 36.8423 mo
29.1884 36.8428 29.1547 36.852 29.1166 36.8555 cv
28.9247 36.7925 28.7152 36.7515 28.4764 36.7563 cv
26.1093 36.8061 26.183 40.4849 28.5541 40.4351 cv
29.2611 40.4204 29.746 40.0786 30.0214 39.6118 cv
31.139 38.9385 30.8553 36.8076 29.2284 36.8423 cv
cp
f
33.1952 35.227 mo
32.849 35.2344 32.8593 35.7734 33.2069 35.7661 cv
33.5536 35.7588 33.5429 35.2197 33.1952 35.227 cv
cp
f
40.5717 26.9941 mo
39.9828 27.3193 39.3944 27.6445 38.806 27.9697 cv
38.2391 28.2827 38.785 29.1836 39.3324 28.8291 cv
39.8964 28.4639 40.4608 28.0986 41.0248 27.7339 cv
41.495 27.4297 41.0604 26.7241 40.5717 26.9941 cv
cp
f
43.4979 25.728 mo
43.4335 25.7295 43.4359 25.8291 43.5004 25.8281 cv
43.5648 25.8267 43.5624 25.7266 43.4979 25.728 cv
cp
f
55.118 19.4111 mo
54.118 19.4321 li
53.0092 19.4556 51.9667 20.4531 52.0419 21.5977 cv
52.1176 22.7451 53.0184 23.6987 54.2074 23.6733 cv
55.2069 23.6523 li
56.3163 23.6294 57.3583 22.6313 57.2831 21.4873 cv
57.2079 20.3394 56.3065 19.3862 55.118 19.4111 cv
cp
f
27.9452 59.062 mo
27.8807 59.0635 27.8827 59.1636 27.9471 59.1621 cv
28.0116 59.1606 28.0096 59.061 27.9452 59.062 cv
cp
f
35.2933 63.6587 mo
35.2289 63.6602 35.2313 63.7603 35.2958 63.7588 cv
35.3597 63.7573 35.3578 63.6572 35.2933 63.6587 cv
cp
f
37.0219 62.6221 mo
36.9574 62.6235 36.9598 62.7236 37.0243 62.7222 cv
37.0887 62.7207 37.0863 62.6211 37.0219 62.6221 cv
cp
f
47.5648 52.6484 mo
47.5004 52.6499 47.5023 52.75 47.5668 52.7485 cv
47.6312 52.7471 47.6293 52.647 47.5648 52.6484 cv
cp
f
48.6698 57.6265 mo
48.6054 57.6279 48.6073 57.7275 48.6718 57.7261 cv
48.7362 57.7251 48.7343 57.625 48.6698 57.6265 cv
cp
f
41.2777 97.1348 mo
40.7206 96.0879 39.2738 97.0483 39.7391 98.0781 cv
40.41 99.5649 40.9379 101.108 41.3119 102.696 cv
41.6547 104.149 41.7792 105.641 42.3807 107.02 cv
42.6473 107.631 43.597 107.752 43.7811 106.99 cv
44.5702 103.731 42.7777 99.9565 41.2777 97.1348 cv
cp
f
54.1176 98.8262 mo
53.7943 103.351 53.0634 108.299 54.2709 112.737 cv
54.4359 113.345 55.3427 113.31 55.4911 112.712 cv
56.5995 108.25 56.0209 103.345 56.1097 98.7842 cv
56.1351 97.4863 54.2074 97.5674 54.1176 98.8262 cv
cp
f
53.3593 114.176 mo
51.2181 114.221 51.2845 117.549 53.4291 117.503 cv
55.5702 117.458 55.5038 114.131 53.3593 114.176 cv
cp
f
40.3856 115.563 mo
40.3212 115.564 40.3231 115.665 40.3876 115.663 cv
40.452 115.662 40.4501 115.562 40.3856 115.563 cv
cp
f
36.0189 121.968 mo
34.1044 122.008 34.1635 124.984 36.0814 124.944 cv
37.9965 124.904 37.9369 121.928 36.0189 121.968 cv
cp
f
32.5345 122.73 mo
32.4701 122.731 32.472 122.831 32.5365 122.83 cv
32.601 122.829 32.599 122.729 32.5345 122.73 cv
cp
f
31.6757 117.559 mo
29.7606 117.599 29.8202 120.575 31.7382 120.534 cv
33.6527 120.494 33.5936 117.518 31.6757 117.559 cv
cp
f
75.2709 121.643 mo
73.3563 121.684 73.4154 124.659 75.3334 124.619 cv
77.2479 124.579 77.1888 121.603 75.2709 121.643 cv
cp
f
79.4735 131.245 mo
79.4091 131.247 79.4115 131.347 79.476 131.345 cv
79.5404 131.344 79.538 131.244 79.4735 131.245 cv
cp
f
91.9755 118.984 mo
91.2084 118.557 90.3988 118.898 89.9349 119.565 cv
89.4847 120.214 89.0345 120.863 88.5839 121.512 cv
88.0858 122.229 88.4799 123.399 89.2289 123.775 cv
90.0082 124.166 91.0731 123.96 91.4926 123.131 cv
91.847 122.429 92.202 121.727 92.557 121.025 cv
92.9222 120.302 92.703 119.39 91.9755 118.984 cv
cp
f
92.2186 118.975 mo
92.1542 118.976 92.1561 119.076 92.2206 119.075 cv
92.285 119.073 92.2831 118.973 92.2186 118.975 cv
cp
f
87.2562 120.829 mo
87.1923 120.831 87.1942 120.931 87.2587 120.929 cv
87.3231 120.928 87.3207 120.828 87.2562 120.829 cv
cp
f
121.404 112.462 mo
121.429 112.197 121.472 111.929 121.516 111.659 cv
121.523 111.616 121.514 111.581 121.513 111.541 cv
121.525 111.483 121.537 111.414 121.547 111.375 cv
121.68 110.842 121.99 110.615 122.212 110.151 cv
122.629 109.282 122.578 108.227 122.131 107.391 cv
121.958 107.068 121.499 106.796 121.127 106.843 cv
120.213 106.958 119.355 107.458 118.935 108.327 cv
118.67 108.875 118.782 109.144 118.755 109.706 cv
118.729 110.247 118.578 110.775 118.506 111.311 cv
118.402 112.089 118.248 113.026 118.534 113.791 cv
118.656 114.116 118.848 114.41 119.117 114.634 cv
119.269 114.78 119.449 114.877 119.643 114.948 cv
119.76 115.754 120.539 116.449 121.387 115.859 cv
122.034 115.409 122.357 114.885 122.28 114.075 cv
122.239 113.647 122.099 113.326 121.824 112.997 cv
121.728 112.882 121.479 112.537 121.409 112.551 cv
121.408 112.52 121.403 112.496 121.404 112.462 cv
cp
f
134.359 98.1333 mo
133.761 97.6069 132.875 97.4648 132.178 97.8984 cv
131.623 98.2427 131.108 98.6714 130.699 99.1816 cv
130.49 99.4434 130.342 99.7559 130.266 100.08 cv
129.714 100.497 129.144 100.894 128.536 101.224 cv
128.234 101.388 127.94 101.521 127.661 101.661 cv
127.297 101.653 126.928 101.714 126.655 101.815 cv
125.873 102.104 125.267 102.622 124.811 103.313 cv
124.197 104.246 125.471 105.154 126.251 104.67 cv
126.462 105.007 126.787 105.271 127.214 105.367 cv
128.836 105.732 130.101 104.615 131.225 103.565 cv
131.662 103.156 132.036 102.703 132.389 102.225 cv
132.75 102.171 133.086 102.007 133.322 101.696 cv
133.415 101.572 133.52 101.461 133.622 101.347 cv
134.061 101.084 134.372 100.733 134.685 100.303 cv
135.13 99.6904 134.903 98.6118 134.359 98.1333 cv
cp
f
93.2455 94.3447 mo
93.4784 95.3657 93.5721 96.2114 93.4501 97.0078 cv
93.1903 97.6455 92.868 98.2319 92.5243 98.7187 cv
91.8602 99.6592 90.8485 100.498 90.328 101.53 cv
88.0277 102.067 85.6205 102.523 83.5013 103.495 cv
82.1166 104.13 80.6136 105.022 79.2284 105.971 cv
78.0736 106.274 76.9169 106.574 75.7635 106.885 cv
74.0238 107.354 71.8593 107.533 70.7113 108.958 cv
70.7875 108.459 70.516 107.995 70.0902 107.682 cv
69.0795 106.937 67.9188 105.735 66.5966 105.708 cv
65.9921 105.695 65.5199 106.358 65.7089 106.926 cv
65.954 107.661 66.5565 108.141 67.16 108.585 cv
67.2733 108.668 67.3871 108.752 67.4999 108.835 cv
67.2704 108.744 67.0433 108.642 66.8241 108.511 cv
65.9623 107.997 65.2469 107.378 64.6947 106.62 cv
64.7323 106.551 64.7714 106.482 64.7919 106.412 cv
65.1073 105.338 64.4271 104.352 64.0936 103.36 cv
63.8939 102.767 63.7758 102.193 63.7426 101.615 cv
63.7504 101.6 63.7601 101.588 63.7679 101.572 cv
64.6967 99.6841 65.6659 97.7666 67.0634 96.1758 cv
67.3568 95.8418 67.7059 95.5156 68.0702 95.1865 cv
68.8705 94.7163 69.6752 94.2524 70.495 93.8184 cv
71.9794 93.0322 73.6786 92.3584 74.9379 91.2129 cv
75.5155 91.0718 76.0936 90.9302 76.6752 90.8086 cv
78.0028 90.5308 79.3607 90.3862 80.6581 89.9971 cv
80.8383 90.124 81.0624 90.2197 81.3363 90.27 cv
82.4144 90.4673 83.4886 90.5972 84.5868 90.5283 cv
85.6508 90.4619 86.7484 90.0684 87.8075 90.0859 cv
89.0848 90.1064 90.3256 90.7246 91.5385 90.7593 cv
92.4515 91.1694 93.0048 91.8057 93.4418 92.5522 cv
93.4999 92.6655 93.5536 92.7822 93.6073 92.8989 cv
93.2865 93.2573 93.1107 93.7515 93.2455 94.3447 cv
cp
97.1742 95.8018 mo
97.3646 93.5371 96.6405 91.4477 95.4218 89.2666 cv
95.0468 88.5957 94.2606 88.4209 93.5936 88.6143 cv
92.7372 87.1079 90.5111 86.6499 88.8973 86.436 cv
88.2938 86.3559 87.705 86.3823 87.1224 86.4551 cv
86.4589 86.3462 85.6942 86.4756 85.0326 86.5483 cv
83.0922 86.7607 81.1561 87.0308 79.2191 87.2725 cv
78.2372 87.3945 77.955 88.4888 78.3553 89.105 cv
77.4579 89.2661 76.5541 89.4839 75.6591 89.7222 cv
75.5809 89.3975 75.3558 89.1221 74.9725 89.0644 cv
72.5712 88.7041 70.1771 89.8628 68.079 91.043 cv
67.6283 91.2217 67.1932 91.479 66.7811 91.7822 cv
64.8744 92.8618 62.2538 94.3574 62.1595 96.6069 cv
62.1469 96.9087 62.2196 97.1621 62.3456 97.3726 cv
61.8622 98.3877 61.5038 99.4595 61.3265 100.603 cv
61.2841 100.878 61.329 101.138 61.4305 101.368 cv
61.0868 103.276 61.1679 105.521 62.4139 106.574 cv
62.8153 108.18 63.62 109.692 64.913 110.756 cv
66.4867 112.053 68.8534 113.115 70.809 112.122 cv
71.2206 111.912 71.4091 111.493 71.4125 111.066 cv
73.1112 111.611 75.0551 110.626 76.7089 110.052 cv
79.2953 109.155 81.7865 108.048 84.2948 106.953 cv
84.6776 106.785 84.9012 106.49 84.996 106.169 cv
87.4066 105.223 89.9657 104.529 92.4213 103.74 cv
92.7587 103.631 92.9891 103.437 93.1361 103.205 cv
94.5482 102.26 95.6854 100.402 96.3163 99.0024 cv
96.8202 98.7651 97.2489 98.2666 97.3026 97.7075 cv
97.3759 96.9477 97.3739 96.3833 97.1742 95.8018 cv
cp
.886275 .886275 .886275 rgb
f
29.0917 104.497 mo
28.222 105.259 27.0936 105.4 26.0057 105.118 cv
25.309 104.937 24.7655 105.199 24.4301 105.633 cv
22.892 105.151 21.3632 104.675 19.8553 104.125 cv
19.0004 102.989 17.6859 102.181 16.6532 101.232 cv
15.0814 99.7881 13.6928 97.9097 13.4696 95.7353 cv
13.412 95.1748 13.0614 94.8677 12.6639 94.7793 cv
13.0243 93.9058 13.4462 93.0483 14.0385 92.3174 cv
14.9071 91.7353 15.7792 91.2056 16.8788 90.9297 cv
19.5306 90.2632 21.1581 91.3218 23.3676 92.8047 cv
25.1664 94.0112 26.7875 95.1982 27.6537 97.2812 cv
28.1903 98.5698 29.8539 101.244 30.0595 103.047 cv
29.8104 103.571 29.5585 104.088 29.0917 104.497 cv
cp
23.4501 90.8989 mo
21.3812 89.3643 19.3168 87.917 16.64 88.3208 cv
14.2518 88.6811 11.8812 90.1074 11.4364 92.5957 cv
11.3925 92.8428 11.4803 93.0732 11.6327 93.2353 cv
11.3217 93.958 11.0804 94.644 10.9076 95.1587 cv
10.7562 95.6089 11.0116 95.9082 11.3529 96.0049 cv
11.203 98.4614 11.9545 100.743 13.5785 102.623 cv
14.6356 103.848 16.1962 105.169 17.8749 105.687 cv
20.8534 107.36 27.1703 110.716 28.1293 108.368 cv
29.1415 108.196 30.1102 107.79 30.9501 107.131 cv
31.3095 106.85 31.6625 106.503 31.9794 106.114 cv
32.1498 106.008 32.3065 105.862 32.4403 105.671 cv
36.3348 100.095 27.2421 93.7114 23.4501 90.8989 cv
cp
f
92.0941 87.4189 mo
89.0511 85.8843 85.5516 86.5605 82.3353 87.0273 cv
77.4066 87.7427 73.0331 88.6133 68.8636 91.4526 cv
68.1683 91.9258 68.8158 93.0034 69.5492 92.5718 cv
73.9027 90.0088 78.536 89.2715 83.4818 88.9604 cv
85.1102 88.8579 86.9427 88.5742 88.5721 88.7685 cv
95.1498 89.5527 96.8114 96.1333 92.8309 100.582 cv
92.6991 100.729 92.6117 100.885 92.5546 101.041 cv
92.1644 101.303 91.8051 101.64 91.4349 101.918 cv
90.5472 102.584 89.5614 103.032 88.4882 103.304 cv
88.1366 103.393 87.9574 103.681 87.9208 103.992 cv
87.8177 103.187 87.1283 102.52 86.224 102.801 cv
85.2196 103.114 84.4852 103.843 83.6244 104.412 cv
82.7889 104.965 81.847 105.357 80.8842 105.626 cv
79.288 106.073 79.7025 108.478 81.3304 108.472 cv
83.7059 108.463 87.5214 107.196 87.9232 104.431 cv
87.9305 104.382 87.9252 104.334 87.9281 104.286 cv
87.9945 104.673 88.2797 105.013 88.7469 104.957 cv
90.0092 104.804 92.576 104.157 93.7699 102.897 cv
94.1185 102.93 94.4843 102.812 94.7933 102.463 cv
98.9032 97.8271 97.9496 90.3726 92.0941 87.4189 cv
cp
.807843 .807843 .807843 rgb
f
65.7518 108.127 mo
63.9652 106.609 63.514 104.808 63.2479 102.551 cv
63.1591 101.798 62.3627 101.567 61.8734 101.855 cv
62.3475 99.1367 63.9105 95.8164 66.0482 94.5796 cv
66.8119 94.1377 66.1083 93.0225 65.3378 93.4204 cv
63.0521 94.6016 62.0687 96.6377 61.0404 98.894 cv
60.3949 100.312 59.265 102.668 60.8285 103.846 cv
61.0575 104.019 61.3529 103.994 61.5409 103.831 cv
61.6346 105.58 61.8866 107.369 62.8768 108.832 cv
63.9105 110.358 66.246 112.599 68.2157 112.435 cv
68.5243 112.409 68.8661 112.151 68.8236 111.801 cv
68.6044 109.995 67.0404 109.222 65.7518 108.127 cv
cp
f
33.2758 100.483 mo
32.788 97.1035 30.1835 95.0679 27.8417 92.8301 cv
25.5428 90.6328 21.4852 87.626 18.0912 88.1611 cv
14.2377 88.769 13.7264 92.4858 11.2992 94.668 cv
11.1493 94.8027 11.0936 94.9536 11.1029 95.0962 cv
10.889 95.2983 10.7528 95.5933 10.7679 95.9814 cv
10.8578 98.2441 11.6537 101.461 14.0184 102.353 cv
14.6776 102.602 15.1786 101.845 15.0482 101.279 cv
14.8461 100.4 14.2548 99.6084 13.8861 98.7876 cv
13.4769 97.8784 13.2733 96.9214 13.2284 95.9297 cv
13.2084 95.4917 13.0028 95.1831 12.7216 94.9932 cv
13.5829 94.0659 14.2142 92.8711 15.1718 92.1294 cv
17.9008 90.0151 20.7885 90.5952 23.5595 92.228 cv
27.0721 94.2983 34.7533 100.083 28.8749 103.971 cv
27.7094 104.742 28.493 106.659 29.8895 106.242 cv
32.6366 105.423 33.6786 103.273 33.2758 100.483 cv
cp
f
24.0917 96.0513 mo
23.7841 95.2163 22.8007 94.6929 21.9735 95.1748 cv
21.6322 95.2197 21.3246 95.4292 21.2435 95.8462 cv
21.2426 95.8501 21.2426 95.853 21.2416 95.8569 cv
20.8392 96.415 20.7162 97.0854 20.9183 97.6987 cv
20.7216 99.0508 20.6639 100.365 20.9886 101.806 cv
21.329 103.314 23.476 103.071 23.8622 101.745 cv
24.142 100.784 24.497 99.9482 24.5443 98.9302 cv
24.5887 97.9687 24.4232 96.9512 24.0917 96.0513 cv
cp
.231373 .192157 .180392 rgb
f
80.5453 94.6558 mo
79.6659 93.2949 77.7538 93.0303 76.4462 93.9043 cv
76.4218 93.9204 76.4056 93.9409 76.3822 93.957 cv
76.3168 93.9458 76.2572 93.918 76.1888 93.915 cv
73.4335 93.793 73.3666 97.7378 73.4818 99.6172 cv
73.5692 101.041 74.3383 102.4 75.7552 102.851 cv
77.0756 103.271 78.597 102.909 79.559 101.885 cv
80.3763 101.014 80.7836 99.8887 80.9564 98.7241 cv
81.1532 97.4009 81.308 95.8354 80.5453 94.6558 cv
cp
f
78.83 96.2212 mo
78.8143 96.2021 78.7943 96.1865 78.7772 96.1684 cv
78.7772 96.168 78.7767 96.168 78.7762 96.1675 cv
78.7362 96.1245 78.6971 96.0815 78.6522 96.0434 cv
78.5648 95.9453 78.4818 95.8447 78.3671 95.7598 cv
77.7889 95.332 76.8583 95.2095 76.2396 95.6548 cv
75.5316 96.1645 74.9774 96.9228 75.0668 97.8457 cv
75.0853 98.0395 75.1244 98.2246 75.184 98.3984 cv
75.0663 99.1362 75.3358 99.9297 76.0536 100.29 cv
76.9457 100.738 78.0038 100.462 78.514 99.5893 cv
78.8451 99.0234 78.993 98.3955 79.0956 97.7563 cv
79.1273 97.5547 79.1366 97.3569 79.1234 97.1655 cv
79.1537 96.8398 79.0707 96.5107 78.83 96.2212 cv
cp
.329412 .286275 .27451 rgb
f
24.2421 96.7637 mo
23.5707 95.814 22.0619 95.4341 21.2098 96.4375 cv
20.8368 96.8769 20.6327 97.3935 20.62 97.9028 cv
20.6102 97.9722 20.5839 98.0356 20.5844 98.1084 cv
20.5897 98.5176 20.6449 98.9355 20.7592 99.3281 cv
20.8822 99.7529 20.9896 99.9673 21.1014 100.255 cv
21.4428 101.135 22.5751 101.823 23.4711 101.162 cv
24.7826 100.193 25.2152 98.1401 24.2421 96.7637 cv
cp
f
22.8436 97.8926 mo
21.6615 97.9175 21.6981 99.7544 22.8822 99.7295 cv
24.0643 99.7046 24.0277 97.8677 22.8436 97.8926 cv
cp
.431373 .396078 .388235 rgb
f
75.8978 95.9668 mo
74.2094 96.0019 74.2616 98.6265 75.953 98.5913 cv
77.6415 98.5557 77.5892 95.9311 75.8978 95.9668 cv
cp
f
138.465 103.573 mo
134.742 110.969 130.921 119.576 122.965 123.149 cv
122.859 123.197 122.771 123.254 122.683 123.312 cv
120.24 123.682 117.893 122.646 117.528 119.02 cv
117.272 116.476 113.271 116.539 113.529 119.104 cv
113.758 121.372 114.696 123.286 116.057 124.715 cv
115.307 126.19 114.474 127.637 113.53 129.045 cv
105.368 141.223 92.14 148.973 77.5726 150.249 cv
65.3812 151.316 51.847 150.853 39.6561 147.357 cv
39.5082 147.388 39.3475 147.391 39.162 147.325 cv
37.5111 146.738 35.8495 146.522 34.2098 145.824 cv
32.9701 145.296 31.7299 144.935 30.7098 144.104 cv
30.204 143.877 29.6937 143.657 29.1971 143.414 cv
21.8993 139.848 17.3876 132.878 13.452 126.016 cv
13.5116 126.02 13.5624 126.034 13.62 126.039 cv
13.1141 125.288 12.6449 124.515 12.2196 123.672 cv
11.9774 123.194 11.6766 122.673 11.5028 122.139 cv
11.4672 122.151 11.4291 122.161 11.3949 122.174 cv
8.26355 115.915 6.14295 109.28 5.64978 102.216 cv
5.64246 102.105 5.61804 102.005 5.59705 101.904 cv
5.70349 101.654 5.76111 101.364 5.74695 101.03 cv
5.45154 93.8784 7.58533 86.9668 7.29187 79.7871 cv
7.01404 73.0044 3.38855 65.0478 4.5492 58.2871 cv
4.72595 58.064 4.86121 57.7837 4.92273 57.4263 cv
7.57898 42.0776 17.6312 26.7705 30.2479 17.6602 cv
43.8597 7.83106 61.4633 5.55713 77.7201 8.32275 cv
85.2216 9.59912 93.2601 11.4614 99.6088 15.8438 cv
106.03 20.2754 112.008 27.0664 116.527 33.373 cv
124.411 44.3769 125.452 57.6548 124.525 70.7402 cv
124.515 70.7256 124.503 70.7109 124.492 70.6958 cv
124.576 72.8506 124.593 75.2954 123.914 77.2856 cv
123.793 78.3706 123.657 79.4443 123.523 80.5205 cv
123.371 81.1421 123.21 81.7632 123.071 82.3872 cv
122.797 82.7026 122.618 83.1186 122.608 83.6455 cv
122.601 84.0034 122.595 84.3652 122.588 84.7246 cv
122.338 85.4072 122.215 86.1631 122.1 86.8843 cv
121.984 87.6201 121.877 88.3579 121.766 89.0947 cv
121.781 89.0967 121.8 89.0942 121.816 89.0962 cv
121.587 90.5893 121.382 92.0874 121.215 93.5962 cv
121.202 93.7173 121.207 93.8271 121.212 93.937 cv
121.18 93.9521 121.147 93.9639 121.115 93.979 cv
115.135 96.8848 112.518 104.066 114.012 110.383 cv
114.604 112.887 118.438 111.741 117.846 109.239 cv
115.122 97.7217 126.93 97.1084 134.115 93.5825 cv
138.854 91.2568 142.393 87.7173 145.43 83.6499 cv
144.283 90.6118 141.675 97.1973 138.465 103.573 cv
cp
146.681 75.8159 mo
146.16 75.8935 145.66 76.1768 145.306 76.7432 cv
142.32 81.5225 139.062 86.1001 134.124 89.0332 cv
131.362 90.6733 128.337 91.4224 125.366 92.3594 cv
125.614 90.3643 125.915 88.3794 126.297 86.4092 cv
126.384 86.4062 126.471 86.4009 126.557 86.4004 cv
126.559 86.2754 126.562 86.1494 126.564 86.0239 cv
127.141 85.5288 127.25 84.8389 127.062 84.2075 cv
127.19 83.2529 127.315 82.2944 127.437 81.334 cv
127.607 80.6518 127.769 79.9678 127.954 79.2886 cv
128.095 78.7695 128.03 78.3213 127.845 77.9512 cv
129.255 65.6992 129.727 53.1392 125.315 41.4434 cv
123.049 35.439 119.487 30.2866 115.269 25.4932 cv
110.94 20.5752 106.387 15.4897 100.859 11.894 cv
89.3568 4.4126 72.8041 2.41211 59.4027 3.41406 cv
46.3973 4.38623 33.6439 9.04102 23.7992 17.73 cv
13.0004 27.2607 4.23035 40.7168 1.34217 54.959 cv
1.25232 55.103 1.17175 55.2598 1.11218 55.4409 cv
-1.31067 62.8584 2.60144 70.522 3.17859 77.9619 cv
3.78748 85.8081 1.42566 93.3076 1.74793 101.114 cv
1.75281 101.218 1.77283 101.31 1.78943 101.404 cv
1.6825 101.659 1.62683 101.955 1.65076 102.3 cv
2.57605 115.553 8.74353 127.897 16.8251 138.266 cv
25.1273 148.919 39.7465 152.279 52.5604 153.735 cv
65.9354 155.253 80.8666 155.823 93.5062 150.51 cv
103.722 146.216 112.431 138.641 118.179 129.171 cv
118.587 128.499 118.967 127.815 119.335 127.129 cv
119.158 126.967 118.975 126.817 118.796 126.659 cv
120.983 127.646 123.59 127.745 126.13 126.654 cv
126.058 126.479 125.992 126.301 125.921 126.125 cv
133.948 122.045 138.069 113.242 141.96 105.519 cv
146.46 96.5889 149.793 87.2407 150.049 77.1587 cv
150.098 75.208 147.819 74.7895 146.681 75.8159 cv
cp
.156863 .113725 .113725 rgb
f
31.0302 106.834 mo
27.5199 109.035 20.7499 106.868 17.6053 104.856 cv
12.849 101.814 10.8251 96.7568 12.0839 91.3101 cv
14.3529 89.3227 16.8549 88.3276 19.9379 89.7114 cv
20.9647 90.1724 21.9857 90.6875 22.9852 91.2383 cv
22.9076 91.2539 22.8246 91.2881 22.745 91.3091 cv
22.5985 91.2768 22.4467 91.2559 22.2875 91.2568 cv
21.1654 91.2632 20.245 91.7075 19.4047 92.4209 cv
19.2802 92.5259 19.1854 92.6548 19.1044 92.7925 cv
19.0936 92.8057 19.0824 92.8154 19.0721 92.8286 cv
17.3431 95.1226 16.8842 98.0669 17.5614 100.866 cv
18.2416 103.68 21.9926 105.615 24.618 104.14 cv
27.4301 102.559 27.9364 96.5898 26.3759 93.3291 cv
30.3505 96.1601 37.349 102.873 31.0302 106.834 cv
cp
21.9594 95.5972 mo
22.0121 95.5273 22.0472 95.4551 22.0897 95.3838 cv
22.3656 95.4805 22.6674 95.5073 22.9823 95.4541 cv
22.995 95.5039 22.996 95.5449 23.0253 95.6064 cv
23.0902 95.8486 23.1298 96.0947 23.1439 96.3452 cv
23.2172 96.9287 23.2386 97.521 23.2103 98.1089 cv
23.1805 98.7207 23.0892 99.3301 22.9291 99.9214 cv
22.767 100.523 22.8773 100.742 22.1713 100.534 cv
20.6024 100.07 21.2367 96.5561 21.9594 95.5972 cv
cp
28.8075 90.1479 mo
25.5946 87.9033 21.1713 84.9394 17.1249 84.6973 cv
13.7362 84.4946 10.6752 87.0273 8.40906 89.2744 cv
7.75281 89.9248 7.70838 90.6943 7.99793 91.3345 cv
6.74256 98.4541 9.94422 105.098 16.3514 108.745 cv
21.5331 111.695 32.3485 113.705 36.4105 107.761 cv
40.7089 101.472 33.6434 93.5254 28.8075 90.1479 cv
cp
f
95.7787 99.3081 mo
93.597 102.747 89.8011 104.589 86.1967 106.142 cv
80.4945 108.598 73.0306 111.825 66.7377 109.977 cv
62.2435 108.657 60.8124 103.388 61.9794 99.1728 cv
63.0204 95.4106 66.4525 92.7949 69.9452 91.2339 cv
70.347 91.4736 70.8641 91.5273 71.4623 91.2656 cv
77.8387 88.478 86.472 84.6948 93.3251 88.1406 cv
97.7469 90.3638 98.2435 95.4228 95.7787 99.3081 cv
cp
100.421 89.9199 mo
95.868 78.8935 80.4779 83.2461 71.8529 86.7822 cv
71.4652 86.5928 70.9926 86.5434 70.4501 86.7368 cv
61.4252 89.9507 54.1 99.2021 59.2069 108.918 cv
64.4564 118.905 79.8334 113.166 87.3407 109.976 cv
95.1425 106.66 104.452 99.6802 100.421 89.9199 cv
cp
f
130.152 103.129 mo
128.505 102.724 126.796 103.799 125.527 104.745 cv
124.091 105.814 122.932 107.091 121.944 108.581 cv
120.518 110.731 124.025 112.659 125.44 110.527 cv
125.896 109.838 126.432 109.216 127.037 108.654 cv
127.5 108.225 128.063 107.934 128.577 107.588 cv
128.557 107.791 128.538 107.985 128.503 108.091 cv
128.222 108.925 127.76 109.712 127.313 110.465 cv
125.995 112.684 129.495 114.622 130.809 112.411 cv
131.731 110.858 132.681 109.054 132.717 107.206 cv
132.75 105.487 131.97 103.577 130.152 103.129 cv
cp
f
77.8373 101.304 mo
76.6595 102.905 74.6581 103.202 74.5536 100.726 cv
74.494 99.3042 74.5863 97.7744 75.0223 96.3901 cv
75.5345 96.311 76.0116 96.0029 76.3114 95.3706 cv
76.6893 94.5737 77.6527 93.5986 78.661 94.2778 cv
79.2577 94.6797 79.3285 95.812 79.3597 96.4585 cv
79.4384 98.1103 78.8094 99.9814 77.8373 101.304 cv
cp
81.9935 92.0601 mo
79.7216 89.0513 75.6522 89.6265 73.5536 92.2505 cv
72.9515 92.2622 72.3636 92.564 71.9984 93.2744 cv
70.4252 96.3325 69.3646 102.317 72.0219 105.114 cv
74.9242 108.168 79.411 106.219 81.3812 103.203 cv
83.3964 100.119 84.3749 95.2129 81.9935 92.0601 cv
cp
f
52.2025 124.715 mo
51.8119 124.965 51.4169 125.202 51.0116 125.418 cv
51.5629 124.535 52.1762 123.689 53.0033 123.07 cv
55.0472 121.541 52.9794 118.113 50.913 119.659 cv
49.5101 120.708 48.4652 121.979 47.5311 123.455 cv
46.7064 124.757 45.4105 126.349 45.6063 127.967 cv
46.1493 132.459 52.205 129.464 54.2933 128.126 cv
56.4574 126.739 54.3778 123.321 52.2025 124.715 cv
cp
f
67.6986 137.134 mo
67.848 136.036 67.1884 134.756 65.7509 134.7 cv
57.7645 134.389 50.389 135.509 42.597 132.872 cv
40.7538 132.249 39.7553 134.307 40.4174 135.708 cv
40.4003 135.932 40.4125 136.169 40.4818 136.424 cv
40.6884 137.183 40.8954 137.941 41.1019 138.699 cv
41.3055 139.446 41.4613 140.257 41.9437 140.883 cv
42.3871 141.459 42.9276 141.853 43.6913 141.837 cv
44.3412 141.823 45.1244 141.438 45.3969 140.811 cv
45.7294 140.044 46.0614 139.279 46.3934 138.513 cv
46.4667 138.344 46.5145 138.169 46.5507 137.993 cv
51.2831 138.819 55.9222 138.665 60.7333 138.637 cv
60.9833 139.875 61.579 141.016 62.5443 141.873 cv
63.5824 142.795 64.9261 142.475 65.6761 141.402 cv
66.3334 140.462 66.9423 139.494 67.5043 138.494 cv
67.7343 138.085 67.787 137.595 67.6986 137.134 cv
cp
f
91.1937 70.9653 mo
78.3046 72.5107 66.3431 77.2505 56.0136 85.1382 cv
53.9887 86.6846 56.0541 90.1143 58.1049 88.5488 cv
67.8431 81.1123 79.0966 76.4248 91.2777 74.9643 cv
93.8099 74.6606 93.7523 70.6582 91.1937 70.9653 cv
cp
f
36.3368 85.4756 mo
29.7948 78.8701 21.4916 75.1016 12.2474 74.3101 cv
9.6864 74.0908 9.78943 78.0918 12.3314 78.3096 cv
20.5199 79.0107 27.8011 82.5395 33.5682 88.3628 cv
35.3832 90.1958 38.1483 87.3052 36.3368 85.4756 cv
cp
f
38.1434 111.776 mo
38.2968 111.575 38.4584 111.383 38.6088 111.179 cv
39.7426 109.636 37.1273 108.207 36.0077 109.73 cv
33.1937 113.56 29.6244 116.627 25.5111 118.917 cv
24.6493 119.127 23.7709 119.289 22.8754 119.393 cv
20.9886 119.611 21.0326 122.589 22.9379 122.368 cv
23.1371 122.345 23.33 122.305 23.5277 122.278 cv
23.9584 122.606 24.5458 122.742 25.1561 122.449 cv
25.6688 122.203 26.1644 121.935 26.6605 121.667 cv
28.1576 121.277 29.6171 120.758 31.037 120.051 cv
33.9594 118.594 36.0697 116.168 38.8402 114.527 cv
40.1932 113.726 39.3886 111.874 38.1434 111.776 cv
cp
.933333 .901961 .831373 rgb
f
32.6224 122.94 mo
32.4554 122.944 li
31.6512 122.96 30.9818 123.659 30.9984 124.463 cv
31.0155 125.27 31.7108 125.937 32.5179 125.919 cv
32.6849 125.916 li
33.4887 125.899 34.1586 125.201 34.1415 124.397 cv
34.1244 123.59 33.4291 122.923 32.6224 122.94 cv
cp
f
43.8441 117.536 mo
41.9296 117.577 41.9887 120.553 43.9066 120.512 cv
45.8217 120.472 45.7621 117.496 43.8441 117.536 cv
cp
f
75.6571 124.246 mo
74.2118 124.214 72.767 124.183 71.3217 124.151 cv
69.4052 124.108 69.472 127.084 71.3842 127.127 cv
72.8295 127.159 74.2743 127.19 75.7196 127.222 cv
77.6361 127.265 77.5697 124.289 75.6571 124.246 cv
cp
f
129.098 68.2705 mo
128.746 55.9145 128.899 38.2422 118.663 29.2891 cv
118.162 28.8516 117.567 28.6343 116.968 28.5957 cv
116.091 27.5068 115.218 26.4907 114.414 25.5786 cv
109.471 19.9731 104.408 14.9077 98.5814 10.1782 cv
92.7308 5.4292 86.9022 1.56494 79.1102 1.34424 cv
71.1107 1.11719 62.6522 3.36133 54.9095 5.17774 cv
39.412 8.81348 25.1307 15.895 14.2875 27.9268 cv
5.20838 38.0005 .353884 53.1479 2.66834 66.5898 cv
3.0116 68.585 6.50232 68.5371 6.73523 66.5044 cv
7.07703 63.5229 7.42322 60.5596 7.86267 57.6406 cv
8.46912 56.6182 8.76941 55.2866 9.21716 54.0889 cv
11.0956 49.0732 13.5389 44.3735 17.2787 40.4775 cv
20.1566 37.4805 23.997 34.6401 28.1434 33.4043 cv
28.4877 34.6479 29.6776 35.7339 31.3104 35.4136 cv
40.6395 33.5835 45.7294 47.5342 43.5834 54.5254 cv
42.5985 57.7324 47.5433 59.7036 49.0575 56.6992 cv
50.9764 52.8916 53.7645 51.3784 57.0995 49.0073 cv
59.5512 47.2651 61.6141 45.0405 64.0936 43.3398 cv
70.1781 39.167 77.8446 38.0161 85.0385 39.1479 cv
89.4301 39.8394 94.2631 41.1396 98.1688 43.602 cv
98.1693 44.1963 98.4916 44.7676 99.2689 44.9556 cv
100.342 45.2148 102.728 49.5381 103.401 50.5005 cv
104.916 52.668 106.129 54.8442 107.081 57.3223 cv
107.574 58.6055 108.043 59.8843 108.511 61.1616 cv
109.24 63.8135 109.899 66.5039 110.705 69.21 cv
110.949 70.0283 111.47 70.5581 112.09 70.8452 cv
112.654 74.3091 111.738 78.6699 111.677 81.9824 cv
111.576 87.4404 110.556 92.6064 108.758 97.7451 cv
107.648 100.915 112.566 102.708 114.133 99.8794 cv
117.513 93.7754 123.711 91.0884 127.902 85.8481 cv
129.474 83.8823 129.397 81.9902 129.359 79.585 cv
129.299 75.8135 129.204 72.041 129.098 68.2705 cv
cp
.180392 .211765 .286275 rgb
f
121.753 50.8501 mo
122.117 50.228 122.442 49.5928 122.749 48.9478 cv
122.959 49.4561 123.176 49.9609 123.408 50.4595 cv
122.896 50.3838 122.325 50.5356 121.753 50.8501 cv
cp
122.352 73.8955 mo
121.845 73.8779 121.328 74.0171 120.917 74.3193 cv
121.465 72.7158 121.934 71.1011 122.317 69.4482 cv
122.363 70.4355 122.408 71.4238 122.471 72.4092 cv
122.432 72.9087 122.392 73.4018 122.352 73.8955 cv
cp
122.149 66.0273 mo
122.188 66.852 122.23 67.6753 122.267 68.5015 cv
122.049 67.9873 121.524 67.6792 120.984 67.6245 cv
121.38 67.0967 121.762 66.5601 122.149 66.0273 cv
cp
119.798 44.0049 mo
119.961 43.4414 120.173 42.8931 120.434 42.3584 cv
120.564 42.7583 120.695 43.1577 120.825 43.5571 cv
120.372 43.6318 120.034 43.7837 119.798 44.0049 cv
cp
119.599 77.77 mo
119.559 77.0889 119.516 76.4077 119.474 75.727 cv
119.719 75.7041 119.957 75.6357 120.171 75.4976 cv
119.972 76.2529 119.785 77.0112 119.599 77.77 cv
cp
103.581 26.5537 mo
101.858 27.3682 100.134 28.1689 98.4032 28.9556 cv
99.1166 28.1753 99.8265 27.4521 100.269 26.9019 cv
100.975 26.0249 101.689 25.1597 102.357 24.2612 cv
102.684 25.0845 103.169 25.8286 103.826 26.4663 cv
103.745 26.4897 103.663 26.5151 103.581 26.5537 cv
cp
90.1864 22.8994 mo
91.0096 21.4585 91.8339 20.0171 92.6283 18.5605 cv
92.766 18.3076 92.9637 18.0132 93.1742 17.6958 cv
93.1776 17.6919 93.181 17.688 93.1849 17.6836 cv
92.9613 18.4028 92.786 19.0767 92.8334 19.5068 cv
92.891 20.0327 93.0033 20.5435 93.1932 21.0161 cv
92.2587 21.6387 91.0238 22.4424 90.1864 22.8994 cv
cp
51.9237 49.7959 mo
51.8016 50.1182 51.8007 50.4067 51.8783 50.6567 cv
51.3798 51.2388 50.8539 51.7363 50.3036 52.0996 cv
50.8749 51.271 51.4388 50.4385 51.9979 49.602 cv
51.9735 49.6665 51.9481 49.7319 51.9237 49.7959 cv
cp
128.427 61.4321 mo
129.104 56.0029 130.036 50.8359 128.222 45.3613 cv
127.189 42.2485 121.147 27.9053 115.556 25.7871 cv
115.522 25.748 115.487 25.7075 115.452 25.6689 cv
114.093 23.957 112.714 22.3423 111.391 20.8477 cv
111.385 20.771 111.387 20.6938 111.358 20.6216 cv
110.665 18.9004 109.526 18.2451 108.019 17.2217 cv
105.933 15.8047 103.976 14.2266 102.025 12.6318 cv
98.8851 10.0649 95.7445 7.56934 91.5897 7.07178 cv
91.2968 7.03711 91.0306 7.06641 90.7772 7.12256 cv
89.1176 4.91699 86.6478 4.04639 84.0619 6.82569 cv
83.4042 6.66455 82.6859 6.72998 81.9989 7.15283 cv
72.6698 12.895 65.0223 21.2988 58.0614 29.6353 cv
58.0726 29.6431 58.0839 29.6514 58.0946 29.6597 cv
57.5438 30.2891 57.4486 31.0264 57.639 31.6709 cv
55.3016 34.7603 53.0697 37.9453 50.9696 41.2744 cv
50.4301 42.1294 50.9579 43.082 51.7211 43.4883 cv
51.4012 44.0435 51.0707 44.5903 50.7553 45.1494 cv
50.6434 45.3477 50.5975 45.5395 50.5931 45.7217 cv
49.2997 47.8794 48.0336 50.0488 46.7845 52.2114 cv
46.247 53.1406 47.1879 53.9658 48.0038 53.811 cv
48.1342 54.1289 48.4662 54.3867 48.7963 54.3535 cv
50.2006 54.2134 50.9491 53.7983 51.9379 52.7593 cv
52.286 52.3931 52.6117 51.9878 52.9291 51.5684 cv
53.681 51.7622 54.5936 51.4941 54.9032 50.5503 cv
55.433 49.1138 56.0243 47.6934 56.6239 46.2749 cv
56.8412 45.8452 57.0717 45.4204 57.3221 45.0015 cv
57.3129 44.9961 57.3036 44.9907 57.2938 44.9858 cv
57.3734 44.8193 57.4047 44.6509 57.3778 44.4902 cv
58.2186 42.4927 59.0336 40.4878 59.6781 38.4351 cv
59.6869 38.4067 59.681 38.3794 59.6869 38.3511 cv
60.4584 37.0811 61.2704 35.8359 62.2255 34.8208 cv
62.7479 34.2656 62.4345 33.4766 61.7733 33.2436 cv
61.7567 33.2378 61.7396 33.2314 61.7225 33.2256 cv
62.6493 31.9863 63.5883 30.7559 64.5443 29.5371 cv
67.9452 26.4312 71.3383 23.3521 74.8099 20.3599 cv
77.4432 18.2886 80.1234 16.269 82.7079 14.1401 cv
83.7631 13.604 84.829 13.1909 85.8793 12.9556 cv
86.0507 13.0562 86.2347 13.1357 86.4418 13.1611 cv
87.3949 13.2773 88.3265 13.4556 89.2489 13.6719 cv
89.2328 13.748 89.2181 13.812 89.202 13.8955 cv
88.9291 14.6909 88.6874 15.4956 88.4589 16.3047 cv
88.3329 16.3682 88.2094 16.436 88.0814 16.4971 cv
88.1913 16.1543 88.2777 15.8481 88.286 15.689 cv
88.3207 15.061 87.6102 14.8491 87.1444 15.0654 cv
85.8602 15.6611 84.1132 17.2441 84.3026 18.8076 cv
84.3856 19.4946 84.7865 20.2075 85.5311 20.353 cv
86.9418 20.6279 88.0756 19.7266 89.2001 18.9575 cv
89.5321 19.1929 89.9247 19.3442 90.3324 19.397 cv
89.5878 20.7715 88.7865 22.1089 87.9623 23.437 cv
87.766 23.7529 87.8573 24.1978 88.1141 24.4487 cv
88.7943 25.1138 89.5468 24.9663 90.3549 24.6074 cv
91.6869 24.0166 92.9701 23.2227 94.2196 22.4292 cv
94.2855 22.4824 94.3461 22.5386 94.4174 22.5884 cv
95.8026 23.5532 97.6063 23.521 99.3798 23.0869 cv
97.264 24.8911 95.0785 26.7139 92.7933 28.23 cv
92.7538 27.8799 92.3373 27.6704 92.0062 27.9512 cv
91.2631 28.5811 90.7963 29.0386 90.3568 29.8936 cv
89.8295 30.9194 90.9222 31.812 91.8778 31.3521 cv
92.578 31.0151 93.2552 30.6133 93.9232 30.187 cv
93.579 30.7236 93.3109 31.2778 93.2157 31.8535 cv
93.0004 33.1538 94.224 34.0449 95.3959 33.4575 cv
98.5756 31.8657 101.788 30.3813 105.027 28.9121 cv
105.088 28.8843 105.137 28.8496 105.189 28.8174 cv
105.552 30.9136 106.475 33.0225 107.949 34.4209 cv
108.619 35.0571 109.281 35.3877 109.95 35.5234 cv
109.945 35.5478 109.939 35.5698 109.934 35.5952 cv
109.698 36.8027 110.313 38.1387 111.327 38.7563 cv
111.364 39.1758 111.436 39.6113 111.555 40.083 cv
111.726 40.7573 112.246 41.3931 112.879 41.7554 cv
112.85 42.0063 112.836 42.2593 112.84 42.5142 cv
112.854 43.4311 113.394 44.3291 114.18 44.8125 cv
113.898 46.3257 113.988 47.8198 114.883 48.9912 cv
115.247 49.4683 115.641 49.7944 116.05 50.0195 cv
115.815 50.3647 115.581 50.7046 115.349 51.0679 cv
114.028 53.1353 117.122 55.021 118.626 53.376 cv
118.848 53.3994 119.073 53.4014 119.294 53.3623 cv
118.764 54.2515 118.388 55.2622 118.3 56.2817 cv
118.229 57.1128 118.79 57.6904 119.488 57.9331 cv
119.256 58.4736 119.043 59.0254 118.867 59.6011 cv
118.553 60.6289 119.292 61.4634 120.176 61.6753 cv
120.077 61.8477 119.977 62.02 119.878 62.1929 cv
119.248 61.8472 118.392 61.9888 118.258 62.8955 cv
118.107 63.9145 117.946 64.9346 117.781 65.9546 cv
117.748 66.0166 117.712 66.0776 117.679 66.1396 cv
117.462 66.5483 117.442 66.9756 117.549 67.3682 cv
116.585 73.188 115.504 79.022 114.921 84.8643 cv
114.782 86.251 116.282 86.6108 117.235 86.0132 cv
117.179 86.9116 117.133 87.8135 117.063 88.7065 cv
116.932 90.4087 119.673 90.6836 120.03 89.0449 cv
120.131 88.582 120.262 88.1289 120.375 87.6704 cv
120.502 87.6543 120.628 87.6304 120.752 87.5986 cv
121.403 88.3364 122.457 88.75 123.405 88.4116 cv
125.95 87.5034 125.966 87.2642 127.051 84.9199 cv
127.313 84.3525 127.26 83.687 126.995 83.145 cv
127.084 82.6206 127.156 82.0952 127.224 81.5693 cv
127.758 78.2563 128.118 74.9311 127.952 71.5762 cv
128.778 68.4575 128.599 64.9712 128.452 61.8096 cv
128.445 61.6836 128.434 61.5581 128.427 61.4321 cv
cp
.145098 .180392 .247059 rgb
f
50.514 15.2354 mo
49.0331 17.1919 47.6381 19.2393 46.3075 21.3384 cv
46.9476 19.9951 47.6034 18.6528 48.2611 17.3066 cv
49.3329 16.1147 50.4296 14.9492 51.5624 13.8237 cv
51.1249 14.4116 50.7655 14.9038 50.514 15.2354 cv
cp
77.1869 3.04102 mo
73.4501 .81299 67.1005 2.70654 62.5629 4.3584 cv
62.4125 4.24121 62.2406 4.14697 62.0419 4.1001 cv
58.6058 3.29102 56.0302 3.24805 52.8055 4.90625 cv
49.1522 6.78516 45.2333 8.18262 41.4349 9.90625 cv
33.1781 13.6533 26.0975 18.4487 19.7748 24.9116 cv
19.3661 25.3296 19.933 26.0806 20.431 25.7266 cv
22.5902 24.1909 24.7948 22.6753 27.0326 21.1978 cv
26.3153 22.5322 25.6757 23.9097 25.1659 25.3218 cv
24.9594 25.7891 24.7919 26.269 24.7001 26.772 cv
24.6146 27.0728 24.5243 27.3721 24.4535 27.6758 cv
24.3436 28.145 24.8217 28.3662 25.1605 28.1802 cv
25.5292 28.4072 26.0145 28.459 26.3715 28.2046 cv
29.7255 25.8149 32.3993 22.1553 35.1854 19.146 cv
36.2001 18.0498 34.5238 16.439 33.5106 17.54 cv
32.1801 18.9854 30.85 20.4307 29.5184 21.875 cv
30.1024 20.7446 30.6854 19.6138 31.2689 18.4834 cv
34.1835 16.6704 37.1454 14.9438 40.1454 13.3633 cv
42.3202 12.2168 44.5775 11.0083 46.8783 10.1484 cv
48.4379 9.56592 49.8973 9.68945 51.3944 9.33838 cv
52.9276 8.979 54.2338 8.27149 55.5521 7.67236 cv
53.7333 8.88184 52.0228 10.208 50.4188 11.6621 cv
50.2416 11.5713 50.0145 11.5732 49.8217 11.749 cv
49.1058 12.4004 48.4554 13.0713 47.83 13.7554 cv
47.7914 13.7031 47.7401 13.666 47.6928 13.624 cv
48.4789 12.6519 47.0262 11.2974 46.1298 12.2549 cv
43.872 14.6646 41.6117 17.0713 39.3578 19.4844 cv
37.8602 21.0869 36.392 23.1377 34.7235 24.7979 cv
36.2079 21.6069 37.9413 18.5615 39.5131 15.394 cv
39.745 14.9268 39.1166 14.394 38.746 14.8276 cv
35.6879 18.4058 33.661 22.7622 31.9198 27.1021 cv
31.6195 27.8511 32.3026 28.6655 33.0902 28.2241 cv
35.7909 26.709 37.9364 23.9019 40.0634 21.6851 cv
42.0648 19.5986 44.0458 17.4917 46.0311 15.3901 cv
46.0424 15.9023 li
45.3964 16.7495 44.7719 17.6226 44.1737 18.563 cv
44.1293 18.6333 44.1132 18.7012 44.0961 18.769 cv
41.3334 22.2754 38.4149 26.0723 36.9286 30.1318 cv
36.7382 30.6514 37.4603 30.936 37.8007 30.6152 cv
39.5516 28.9668 41.0096 27.0039 42.4193 24.9893 cv
40.6615 28.8145 39.1805 32.7559 38.1386 36.7847 cv
37.8138 38.0395 39.5878 38.7256 40.2294 37.6147 cv
43.4745 31.9966 46.3046 26.1914 49.8846 20.7607 cv
51.8822 17.731 54.0302 14.8003 56.4262 12.0713 cv
56.8407 11.5996 57.7538 10.4624 58.7484 9.33887 cv
59.243 9.90137 59.9867 10.1768 60.8763 9.78858 cv
62.1141 9.24902 68.8856 6.40967 72.5419 5.92041 cv
69.2191 7.9292 65.7709 9.73926 62.7533 12.207 cv
59.0492 15.2358 56.0839 18.9624 53.3617 22.8721 cv
47.7211 30.9727 42.0223 40.2788 42.6874 50.5317 cv
42.8549 53.1172 46.5936 53.6641 47.2797 51.0552 cv
47.5336 50.0913 47.6703 49.3052 47.6786 48.501 cv
49.2069 40.3359 53.244 33.21 58.0404 26.3857 cv
60.7811 22.4868 63.8646 18.7002 67.723 15.8472 cv
71.4247 13.1094 75.6674 11.2246 79.368 8.47119 cv
82.0692 6.46143 79.9447 2.22559 77.1869 3.04102 cv
cp
f
19.0297 27.1177 mo
18.9652 27.1187 18.9672 27.2188 19.0316 27.2173 cv
19.0961 27.2163 19.0941 27.1162 19.0297 27.1177 cv
cp
f
17.5551 28.3853 mo
16.0687 29.4219 14.8246 30.6147 13.7977 32.1157 cv
12.8578 33.4902 11.7743 35.2187 11.9564 36.9517 cv
11.9818 37.1934 12.2953 37.373 12.4808 37.1562 cv
13.4672 36.0005 13.9052 34.4761 14.7328 33.2065 cv
15.6913 31.7363 16.9198 30.3892 18.2406 29.2363 cv
18.7094 28.8267 18.0668 28.0283 17.5551 28.3853 cv
cp
f
49.4677 23.8521 mo
49.4032 23.8535 49.4056 23.9536 49.4701 23.9521 cv
49.5345 23.9507 49.5321 23.8506 49.4677 23.8521 cv
cp
f
128.953 50.6426 mo
129.039 50.2583 128.79 49.9111 128.443 49.7363 cv
128.688 49.52 128.864 49.2222 128.874 48.8779 cv
128.977 45.3511 127.427 42.0176 126.026 38.8481 cv
124.599 35.6186 123.103 32.4014 120.801 29.7012 cv
120.337 29.1572 119.479 29.1724 118.888 29.4644 cv
117.321 26.3457 114.26 23.6196 112.075 21.2012 cv
108.234 16.9482 104.035 13.0244 99.6219 9.37158 cv
98.6024 8.52783 97.3553 9.01563 96.829 9.87549 cv
96.2821 9.32861 95.807 8.97803 95.2865 8.76416 cv
95.2455 8.56348 95.1903 8.34424 95.1171 8.08203 cv
94.9252 7.39502 94.12 6.94434 93.4349 7.17285 cv
93.2006 7.25147 li
93.2577 6.96582 93.266 6.63184 93.246 6.16162 cv
93.1967 5.00635 91.995 4.4209 91.014 4.94238 cv
90.0458 5.45752 89.1366 6.00537 88.2601 6.59815 cv
88.2465 6.57373 88.2328 6.54932 88.2186 6.5249 cv
88.0121 6.15967 87.5883 5.95508 87.1791 5.95703 cv
85.3666 5.96729 83.5048 6.56836 81.7396 7.43408 cv
81.6854 7.43604 81.6307 7.44043 81.5756 7.4585 cv
77.536 8.78809 74.2743 12.4751 71.2626 15.335 cv
67.5077 18.9009 63.8993 22.6094 60.4452 26.4668 cv
60.2045 26.7354 60.1537 27.0322 60.2074 27.3062 cv
58.6488 29.5322 57.2811 31.8984 56.0321 34.0498 cv
52.9027 39.4404 50.6591 45.2114 48.7484 51.1309 cv
48.3539 52.3545 50.2841 52.8315 50.6805 51.6201 cv
52.5536 45.8989 55.1913 40.4653 58.3373 35.333 cv
61.2186 30.6333 65.4149 26.6812 67.9803 21.8491 cv
68.0209 21.7729 68.0385 21.6948 68.0555 21.6172 cv
69.5013 20.2222 70.9681 18.8496 72.4774 17.5215 cv
74.8168 15.4644 77.6703 13.5767 79.9574 11.3047 cv
80.4525 10.9727 80.9486 10.644 81.4813 10.3516 cv
82.5297 9.77637 84.8134 9.37549 85.6136 8.60254 cv
84.6249 9.55713 85.9681 11.2339 87.1254 10.4785 cv
88.2958 9.71387 89.4916 9.03174 90.7118 8.38525 cv
90.7333 8.57178 90.7416 8.72461 90.7181 8.78516 cv
90.4066 9.5957 90.9105 10.1743 91.5746 10.4053 cv
91.5839 11.3706 92.1864 12.2871 93.3685 12.2046 cv
93.5184 12.2656 93.6683 12.3267 93.8187 12.3877 cv
93.8588 13.0815 94.2113 13.8027 94.8627 14.1226 cv
96.8558 15.1016 98.4095 16.0928 100.062 17.3633 cv
101.788 18.6904 103.59 20.2793 105.703 20.873 cv
106.423 21.7104 107.133 22.5601 107.843 23.4121 cv
107.7 23.3467 107.536 23.3066 107.344 23.3105 cv
105.897 23.3408 105.942 25.5903 107.391 25.5601 cv
108.267 25.5415 108.587 24.7139 108.39 24.0674 cv
108.938 24.7344 109.486 25.4712 110.044 26.2383 cv
109.877 26.1846 109.728 26.1108 109.55 26.0693 cv
108.944 25.9277 108.315 26.3911 108.339 27.0327 cv
108.374 28.0244 108.765 28.624 109.594 29.21 cv
109.89 29.4189 110.849 29.6216 111.023 29.875 cv
111.271 30.2373 111.041 31.2148 111.194 31.6846 cv
111.56 32.8018 112.754 33.5044 113.723 34.0195 cv
114.367 34.3618 115.038 34.6313 115.752 34.7866 cv
116.077 34.8569 116.546 34.8267 116.971 34.8413 cv
116.925 35.8389 116.967 36.7412 118.014 37.4116 cv
118.661 37.8257 119.314 37.8501 119.982 37.793 cv
119.756 38.5249 119.483 39.2539 119.301 39.9619 cv
119.044 40.9619 119.871 42.1753 120.977 42.0684 cv
121.016 42.0649 121.044 42.0605 121.081 42.0571 cv
120.966 42.2607 120.878 42.4917 120.824 42.7617 cv
120.553 44.1323 121.974 44.998 123.063 44.3433 cv
123.24 44.4453 123.435 44.5356 123.653 44.6118 cv
123.746 44.8096 123.84 45.0078 123.937 45.2036 cv
123.944 45.2759 123.949 45.3574 123.954 45.4707 cv
123.997 46.2954 124.005 47.0718 124.254 47.8677 cv
124.502 48.6641 125.155 48.9731 125.793 48.9292 cv
125.978 51.5117 126.097 54.0947 126.13 56.6865 cv
125.87 56.5322 125.468 56.6309 125.323 56.8999 cv
124.712 58.0386 124.005 59.8125 124.759 61.0171 cv
124.941 61.3086 125.185 61.4922 125.453 61.6182 cv
125.535 63.6772 125.489 65.7051 125.346 67.7134 cv
124.297 69.0161 123.234 70.4082 122.799 71.9643 cv
122.07 73.0229 121.339 74.082 120.62 75.1567 cv
119.849 76.312 121.303 77.5649 122.391 77.1143 cv
121.632 78.457 120.974 79.8125 120.608 81.0908 cv
120.257 82.3208 120.15 82.6826 120.731 83.813 cv
120.85 84.0464 121.057 84.2153 121.292 84.3276 cv
120.303 86.0679 119.307 87.8042 118.347 89.5615 cv
118.147 89.9272 118.123 90.2798 118.206 90.5937 cv
117.854 91.0215 117.506 91.4404 117.166 91.8423 cv
116.534 92.5918 117.45 93.9722 118.321 93.2749 cv
118.966 92.7583 119.565 92.2207 120.152 91.6709 cv
120.454 91.5718 120.73 91.3613 120.923 90.9951 cv
121.158 90.7471 121.393 90.4995 121.628 90.2519 cv
121.849 90.0361 122.068 89.8208 122.291 89.602 cv
122.67 89.2324 122.642 88.7886 122.421 88.4512 cv
122.48 88.3501 122.54 88.249 122.6 88.1475 cv
123.117 89.5566 125.456 89.3164 126.034 87.812 cv
126.139 87.54 126.231 87.2676 126.322 86.9946 cv
126.963 86.8584 127.519 86.4199 127.67 85.6299 cv
128.475 81.4023 128.725 77.3125 128.329 73.0283 cv
128.302 72.7309 128.172 72.5176 127.998 72.3726 cv
128.095 71.1811 128.16 69.9868 128.186 68.7895 cv
128.342 68.6929 128.477 68.5449 128.556 68.3364 cv
129.641 65.4604 129.356 62.3579 129.033 59.3267 cv
129.262 58.6606 129.39 57.959 129.453 57.3535 cv
129.7 55.0269 129.092 52.916 128.953 50.6426 cv
cp
.105882 .137255 .188235 rgb
f
80.7738 3.78125 mo
79.4276 4.1543 78.1927 4.37305 76.9247 4.43604 cv
77.0692 4.16651 77.2069 3.89258 77.3788 3.63574 cv
77.933 2.70215 76.9686 1.72852 76.0194 1.94287 cv
75.2821 2.10889 74.5765 2.26904 73.8759 2.45459 cv
73.9564 1.71582 73.2806 1.06641 72.4794 1.26026 cv
72.08 1.30322 71.7035 1.41406 71.35 1.59326 cv
70.9174 1.63477 70.6049 1.69824 70.3885 1.77881 cv
70.1351 1.35156 69.5961 1.07813 69.1024 1.24463 cv
64.6737 2.73828 61.1776 1.67334 57.0751 4.16504 cv
56.015 4.80908 57.0609 6.50293 58.08 5.80371 cv
59.1571 5.06494 59.3925 4.90137 60.035 4.32813 cv
60.2089 4.52051 60.3954 4.625 60.5956 4.68164 cv
59.0443 5.63672 57.515 7.04395 56.9618 7.48194 cv
56.4779 7.86524 56.0077 8.25733 55.5477 8.65772 cv
55.4305 8.49805 55.2333 8.39014 54.9896 8.43164 cv
53.6542 8.6582 51.8285 9.5376 51.6488 11.0444 cv
51.6127 11.3486 51.9159 11.6792 52.2255 11.4692 cv
52.725 11.1309 53.101 10.6797 53.5595 10.2925 cv
53.7758 10.1108 54.0106 9.9624 54.2562 9.83399 cv
51.5116 12.4346 49.1654 15.3555 46.9891 18.5278 cv
46.4979 19.2437 47.6254 19.9575 48.1537 19.3838 cv
48.1561 19.3872 48.1595 19.3906 48.162 19.394 cv
50.618 16.5894 53.3197 14.1704 56.0775 11.6709 cv
57.4989 10.3823 58.973 9.15479 60.5136 8.01025 cv
61.2557 7.45947 62.0272 6.94483 62.7377 6.35205 cv
63.1801 5.98291 64.1498 5.73731 63.4672 5.42139 cv
63.7836 5.56738 64.2269 5.41504 64.3837 5.11719 cv
64.7064 5.21289 65.0306 5.28418 65.3485 5.27539 cv
66.2997 5.24902 67.3314 4.71729 68.2958 4.17139 cv
68.4476 4.41895 68.6713 4.64697 68.9857 4.84424 cv
69.8431 5.38281 70.5824 5.22266 71.265 4.8252 cv
71.5375 5.29199 72.1263 5.55615 72.7128 5.42969 cv
72.974 5.37354 73.225 5.30713 73.476 5.24121 cv
73.4623 5.31738 73.4457 5.38623 73.4335 5.46582 cv
73.2899 6.37207 73.8553 7.04444 74.5663 7.17334 cv
72.851 8.34619 71.2577 9.73291 69.7074 11.1069 cv
69.4364 11.3472 69.2811 11.6113 69.201 11.8799 cv
69.1385 11.8901 69.077 11.8955 69.0126 11.9131 cv
64.7699 13.0747 60.4882 18.3472 57.4325 22.5171 cv
57.4159 22.5283 57.3998 22.5293 57.3827 22.5415 cv
50.4589 27.6201 47.5512 38.439 46.4115 46.5239 cv
46.1947 48.063 48.5101 48.7065 48.7977 47.1284 cv
49.2015 44.915 49.7167 42.7368 50.3846 40.6074 cv
51.7391 38.4141 52.8295 36 54.1547 33.8306 cv
56.2723 30.3647 58.621 27.0483 61.2645 23.9619 cv
63.6923 21.127 66.4154 18.731 69.1102 16.1753 cv
69.6171 15.6948 70.6263 14.9473 70.9974 14.1045 cv
71.4452 14.1309 71.913 13.9966 72.3295 13.6211 cv
74.8226 11.375 77.5697 9.4917 80.1825 7.39551 cv
81.4266 6.39649 81.976 6.3125 82.0487 4.71045 cv
82.079 4.04981 81.3583 3.61914 80.7738 3.78125 cv
cp
f
55.2152 3.46436 mo
54.723 3.35303 54.183 3.52002 53.788 3.81738 cv
53.6493 3.92188 53.5233 4.03174 53.41 4.15332 cv
52.0155 3.97754 51.056 5.01367 49.91 5.72363 cv
49.1991 6.16455 48.4359 6.48389 47.704 6.87891 cv
47.3319 7.0791 46.8593 7.39356 46.9569 7.90332 cv
47.1781 9.05762 48.743 8.24512 49.3348 7.96094 cv
49.4301 7.91504 49.5243 7.86084 49.619 7.80957 cv
48.0663 9.31152 46.4271 10.7715 45.0385 12.4272 cv
44.8676 12.6318 45.0995 12.9692 45.3451 12.8076 cv
47.2435 11.5576 48.9623 10.0034 50.7216 8.56934 cv
51.2352 8.15039 50.7113 7.44434 50.1644 7.48877 cv
51.1361 6.87061 52.0809 6.08643 53.119 5.68457 cv
53.2255 5.81641 53.3622 5.92383 53.5101 5.96094 cv
53.8861 6.0542 54.2611 6.03174 54.6093 5.85254 cv
54.7504 5.77979 54.8558 5.68897 54.9569 5.58789 cv
55.2377 5.81836 55.6527 5.86914 55.9647 5.52442 cv
56.6366 4.7832 56.1395 3.67334 55.2152 3.46436 cv
cp
f
45.1556 7.77002 mo
44.5453 8.21777 43.9345 8.66553 43.3241 9.11328 cv
43.1967 8.55127 42.5492 8.05078 41.8656 8.39307 cv
39.6669 9.49463 37.5072 10.6538 35.4305 11.9741 cv
33.8163 13.0005 31.7904 14.0259 30.7343 15.6494 cv
30.5267 15.9683 30.8856 16.2876 31.1967 16.2251 cv
33.1478 15.834 35.0155 14.2983 36.7411 13.3286 cv
37.1801 13.0815 37.6283 12.8516 38.0697 12.6089 cv
34.5214 15.7827 31.0458 19.3521 28.702 23.4429 cv
28.5292 23.7441 28.9476 24.0503 29.1884 23.8018 cv
32.1527 20.7354 34.8973 17.5405 37.9452 14.5855 cv
37.8407 14.7393 37.7362 14.8931 37.6356 15.0444 cv
36.1967 17.2031 34.2235 19.7876 33.6908 22.3418 cv
33.5887 22.8311 34.1635 23.1411 34.5233 22.8032 cv
36.1757 21.2529 37.1688 18.8989 38.413 17.0142 cv
38.8646 16.3301 39.3593 15.7241 39.8666 15.1377 cv
39.4794 15.8789 39.0887 16.6157 38.726 17.3462 cv
38.3983 18.0073 39.3983 18.5669 39.7299 17.9048 cv
40.7548 15.8584 41.6586 13.6592 42.9301 11.7559 cv
43.0951 11.5083 43.0365 11.2202 42.871 11.0103 cv
43.2499 10.8003 43.6034 10.543 43.9628 10.2866 cv
44.5975 9.83399 45.2313 9.38184 45.8661 8.92871 cv
46.5765 8.42236 45.8607 7.25244 45.1556 7.77002 cv
cp
f
27.913 17.7729 mo
27.6664 17.9448 27.4198 18.1167 27.1737 18.2886 cv
27.0751 18.3569 27.1722 18.5176 27.2719 18.4482 cv
27.5179 18.2764 27.7645 18.1045 28.0111 17.9326 cv
28.1097 17.8638 28.0126 17.7036 27.913 17.7729 cv
cp
f
25.6996 18.7446 mo
24.6498 19.7651 23.5961 20.7783 22.5277 21.7793 cv
21.5702 22.6763 20.4559 23.7007 19.7841 24.8315 cv
19.4203 25.4438 20.1771 26.1343 20.7665 25.7734 cv
21.889 25.085 22.8959 23.9492 23.7792 22.979 cv
24.7636 21.8975 25.7601 20.8296 26.7655 19.7666 cv
27.4208 19.0732 26.3798 18.0825 25.6996 18.7446 cv
cp
f
49.101 12.3574 mo
49.0365 12.3584 49.0389 12.4585 49.1034 12.457 cv
49.1679 12.4561 49.1654 12.356 49.101 12.3574 cv
cp
f
48.3436 11.998 mo
48.2792 11.9995 48.2811 12.0996 48.3456 12.0981 cv
48.41 12.0967 48.4076 11.9966 48.3436 11.998 cv
cp
f
20.0267 26.8062 mo
19.1244 28.1157 18.2714 29.4561 17.4896 30.8408 cv
16.8685 31.9404 16.1381 33.0718 16.0341 34.354 cv
16.0238 34.4839 16.1962 34.5244 16.2762 34.4482 cv
17.245 33.5308 17.745 32.1885 18.3993 31.0444 cv
19.1444 29.7402 19.9525 28.4761 20.8051 27.2393 cv
21.1307 26.7666 20.3495 26.3379 20.0267 26.8062 cv
cp
f
14.5634 34.7129 mo
14.4989 34.7144 14.5009 34.8144 14.5653 34.813 cv
14.6298 34.8115 14.6278 34.7119 14.5634 34.7129 cv
cp
f
12.5048 37.897 mo
12.4594 37.8979 12.4608 37.9683 12.5062 37.9673 cv
12.5516 37.9663 12.5502 37.896 12.5048 37.897 cv
cp
f
108.803 52.001 mo
108.732 51.4634 108.575 50.9341 108.35 50.4165 cv
108.818 50.0088 109.252 49.5684 109.684 49.125 cv
109.352 50.0713 109.057 51.0293 108.803 52.001 cv
cp
106.207 44.7275 mo
106.11 45.3501 105.967 45.9746 105.812 46.5991 cv
105.799 46.5835 105.786 46.5664 105.773 46.5508 cv
105.568 46.2944 105.349 46.0518 105.136 45.8032 cv
105.198 45.7578 105.26 45.7129 105.321 45.6675 cv
105.723 45.3691 106.016 44.9775 106.231 44.584 cv
106.223 44.6353 106.215 44.6733 106.207 44.7275 cv
cp
102.211 42.8325 mo
101.947 42.6001 101.675 42.376 101.402 42.1528 cv
101.849 41.8755 102.32 41.5679 102.75 41.2817 cv
102.555 41.7847 102.362 42.3125 102.211 42.8325 cv
cp
79.2592 35.3843 mo
79.1127 35.4058 78.9672 35.4331 78.8207 35.4561 cv
79.1112 35.1577 79.4003 34.8574 79.6898 34.5576 cv
79.8978 34.5522 80.1063 34.5493 80.3138 34.5425 cv
79.9667 34.8311 79.6151 35.1133 79.2592 35.3843 cv
cp
117.426 73.9819 mo
117.416 73.5752 116.882 73.3472 116.599 73.6597 cv
116.202 74.0972 115.919 74.6186 115.682 75.166 cv
115.628 74.8213 115.574 74.4766 115.517 74.1304 cv
116.1 72.2065 116.658 70.3218 117.037 68.3433 cv
117.115 67.937 116.516 67.6401 116.324 68.0601 cv
115.693 69.4414 115.175 70.8354 114.683 72.2534 cv
114.531 71.126 114.349 70.0024 114.135 68.8862 cv
114.618 69.147 115.222 69.0835 115.483 68.4277 cv
116.029 67.0561 116.614 65.6958 117.072 64.292 cv
117.464 63.0903 115.682 62.5381 115.122 63.521 cv
115.116 63.5156 li
114.894 63.9853 114.697 64.4673 114.499 64.9482 cv
114.348 65.2124 114.175 65.4707 113.986 65.7226 cv
114.304 64.915 114.624 64.1094 114.942 63.2964 cv
115.577 61.6719 116.444 59.9609 116.518 58.2085 cv
116.542 57.6475 115.773 57.3774 115.409 57.7764 cv
114.192 59.1103 113.468 61.082 112.791 62.8481 cv
112.728 62.6733 112.651 62.501 112.586 62.3271 cv
113.45 60.1958 114.268 58.0498 115.226 55.9585 cv
115.934 54.4131 113.732 53.1338 112.891 54.6587 cv
112.65 55.0972 112.369 55.4873 112.069 55.854 cv
112.715 53.8301 113.771 51.7534 114.295 49.9419 cv
114.672 48.6323 112.566 47.7358 112.028 49.0415 cv
111.81 49.5825 111.519 50.0581 111.194 50.5024 cv
111.642 49.103 112.202 47.7334 112.715 46.3506 cv
113.025 45.5142 111.95 44.9365 111.29 45.3022 cv
110.221 45.8955 109.261 46.7959 108.275 47.625 cv
108.825 45.8931 109.277 44.0771 108.965 42.5073 cv
108.899 42.1733 108.521 41.7969 108.179 41.7534 cv
107.086 41.6147 106.731 42.0522 105.885 42.7451 cv
103.719 44.5186 104.04 45.3706 104.919 42.333 cv
105.207 41.334 105.575 40.3369 105.554 39.2842 cv
105.546 38.9453 105.347 38.5493 105.024 38.4048 cv
104.026 37.9575 103.914 38.2173 102.933 38.6177 cv
102.46 38.811 100.808 41.1523 100.378 41.0596 cv
100.297 41.1465 100.23 41.2095 100.168 41.2671 cv
100.071 41.2378 99.9755 41.2231 99.8802 41.2231 cv
99.9506 40.9385 100.199 40.3765 100.644 39.5112 cv
101.099 38.2666 101.485 37.0005 101.802 35.7139 cv
101.956 35.1538 101.26 34.5815 100.758 34.9453 cv
99.309 35.9951 97.849 36.9966 96.4418 38.1016 cv
96.1224 38.352 96.4017 38.8223 96.7723 38.6411 cv
97.7719 38.1548 98.7445 37.6309 99.7152 37.1025 cv
99.2094 38.2583 98.6688 39.5815 98.5614 40.7632 cv
97.9403 40.3369 97.3036 39.9302 96.6991 39.5312 cv
96.4437 39.3628 96.181 39.2056 95.9227 39.0415 cv
95.9315 38.9751 95.9242 38.9077 95.8754 38.8457 cv
95.4027 38.2534 94.7504 37.856 94.0409 37.5395 cv
94.8241 36.8599 94.496 35.9058 93.8329 35.3647 cv
94.1625 34.8262 94.4979 34.2915 94.8251 33.7583 cv
95.5961 32.5019 96.8861 31.0825 96.6547 29.5181 cv
96.5448 28.7749 95.8055 28.4761 95.2225 28.9595 cv
94.8729 29.2495 94.5575 29.6143 94.2621 30.0137 cv
94.0526 29.9663 93.8158 30.0059 93.5892 30.207 cv
92.1595 31.4751 90.7362 32.7495 89.3192 34.0327 cv
88.9672 34.3516 89.4515 34.9595 89.8446 34.6841 cv
90.7802 34.0283 91.7089 33.3633 92.64 32.7012 cv
92.5223 32.9092 92.4052 33.1123 92.2885 33.3027 cv
91.8392 34.0376 91.3256 34.8047 90.9398 35.6123 cv
89.8846 35.3677 88.8051 35.189 87.7035 35.083 cv
86.9086 34.769 86.1136 34.4546 85.3187 34.1406 cv
84.8368 33.9502 84.4623 34.5278 84.5692 34.9473 cv
83.6771 34.9551 82.7772 35.0059 81.8754 35.0806 cv
82.1112 34.8755 82.3456 34.6689 82.576 34.4624 cv
83.4725 34.4336 84.3754 34.3833 85.1732 33.9575 cv
85.6312 33.7134 85.5096 33.1157 85.1503 32.8647 cv
84.995 32.7559 84.8168 32.6709 84.6361 32.5889 cv
84.9769 32.2817 85.3099 31.9858 85.6298 31.7139 cv
86.3202 31.1274 85.2997 30.1621 84.6146 30.7407 cv
84.4413 30.8872 84.2611 31.0439 84.076 31.2065 cv
83.9916 30.936 83.766 30.7148 83.4969 30.6289 cv
84.6176 29.4854 85.7489 28.3521 86.9193 27.2549 cv
88.0018 26.2393 86.3529 24.6904 85.2655 25.6685 cv
81.848 28.7407 78.2733 31.7769 74.5707 34.5967 cv
76.1942 32.6807 77.8885 30.8174 79.4813 28.9453 cv
80.184 28.1196 79.4711 26.5117 78.2821 26.9819 cv
74.3339 28.5439 71.4056 31.5562 68.4603 34.5298 cv
69.8114 32.8603 71.2377 31.2612 72.5956 29.7378 cv
73.0668 29.2095 72.8451 28.624 72.4135 28.3516 cv
73.2626 27.5313 74.0814 26.6816 74.827 25.7651 cv
75.1332 25.3882 74.7128 24.7432 74.2577 25.0591 cv
72.2928 26.4233 70.5751 28.0981 68.83 29.73 cv
68.3427 30.1855 68.7489 30.8149 69.265 30.8994 cv
66.7709 33.7925 63.9403 36.5215 62.0267 39.7661 cv
60.3788 40.9834 58.892 42.396 57.6615 43.8843 cv
56.7733 44.959 58.1786 46.3003 59.2177 45.3765 cv
61.9794 42.9209 65.0028 41.5376 68.2006 40.5176 cv
68.5184 41.0019 69.1478 41.2715 69.7401 40.8853 cv
70.4159 40.4443 71.0765 39.9853 71.7323 39.519 cv
72.6346 39.2886 73.5487 39.0649 74.4716 38.8369 cv
74.5941 38.9775 74.765 39.0679 74.9584 39.0395 cv
76.1078 38.8735 77.2489 38.3823 78.3632 37.7158 cv
78.9388 37.6475 79.5184 37.5894 80.1019 37.5439 cv
80.7899 37.4912 81.4774 37.4697 82.1644 37.458 cv
82.1381 38.2324 82.6283 39.0303 83.6273 39.0093 cv
84.2504 38.9961 84.6605 38.6704 84.8695 38.2412 cv
86.826 38.8833 88.7787 39.5395 90.7167 40.227 cv
93.0936 41.0703 95.3949 42.2295 97.8656 42.7124 cv
98.3285 43.001 98.7987 43.2676 99.2855 43.4814 cv
99.5209 43.6353 99.7494 43.6372 99.9462 43.5605 cv
100.91 44.4185 101.804 45.3394 102.62 46.333 cv
102.167 46.6445 101.92 47.2207 102.321 47.7964 cv
103.216 49.082 104.091 50.3813 104.955 51.6875 cv
107.098 56.6714 109.293 61.646 111.266 66.6948 cv
111.272 66.7441 111.282 66.7939 111.288 66.8437 cv
111.116 67.4795 111.006 68.1294 111.004 68.8037 cv
111.003 69.2148 111.36 69.5566 111.752 69.6543 cv
112.119 71.6567 112.515 73.6689 112.602 75.5923 cv
112.626 76.1396 112.907 76.4922 113.273 76.6543 cv
113.428 77.9507 113.511 79.2436 113.582 80.5488 cv
113.523 80.6987 113.464 80.8486 113.406 80.9985 cv
113.316 81.228 113.342 81.4228 113.423 81.5859 cv
113.126 82.6982 113.042 83.6592 113.175 84.8354 cv
112.941 84.9893 112.763 85.2319 112.745 85.5859 cv
112.549 89.2881 110.464 94.8506 112.304 98.3125 cv
112.756 99.1641 113.797 98.7612 114.062 98.0356 cv
114.074 98.0371 114.086 98.0386 114.098 98.0395 cv
114.154 97.7183 114.183 97.3955 114.203 97.0718 cv
114.444 94.7104 114.846 92.3686 115.254 90.0298 cv
115.576 88.187 116.02 86.4311 115.679 84.5688 cv
115.653 84.4287 115.587 84.3281 115.503 84.2554 cv
115.602 83.8291 115.675 83.4111 115.725 82.9883 cv
115.995 82.7812 116.187 82.4658 116.204 82.0361 cv
116.251 80.8721 116.199 79.7368 116.104 78.6074 cv
116.229 78.2524 116.354 77.8979 116.479 77.543 cv
116.882 76.3975 117.456 75.2119 117.426 73.9819 cv
cp
.298039 .337255 .407843 rgb
f
65.848 33.8433 mo
65.7841 33.8447 65.7855 33.9448 65.85 33.9434 cv
65.9144 33.9419 65.9125 33.8418 65.848 33.8433 cv
cp
f
44.5448 30.1641 mo
44.0038 31.4082 43.5756 32.7031 43.1649 34.0049 cv
43.1649 33.9248 43.1747 33.8437 43.1718 33.7632 cv
43.1415 32.9727 43.1859 32.7173 42.8329 32.23 cv
43.4042 31.542 43.976 30.8545 44.5448 30.1641 cv
cp
46.8954 24.2046 mo
46.7196 24.4146 46.5448 24.6245 46.368 24.8325 cv
44.4515 27.0908 42.5038 29.3169 40.58 31.5654 cv
40.9633 30.5786 41.3485 29.5928 41.7362 28.6079 cv
41.8241 28.3857 41.7738 28.186 41.6586 28.0239 cv
43.5585 27.3535 45.3021 25.6777 46.8954 24.2046 cv
cp
54.0878 16.7988 mo
51.9652 18.3311 50.2201 20.2568 48.5394 22.2451 cv
48.4042 21.6597 47.5673 21.1919 46.9271 21.7085 cv
46.3651 22.1626 45.724 22.7729 45.0463 23.3989 cv
46.203 21.7075 47.266 19.9541 48.0404 18.1479 cv
48.3334 17.4648 47.5595 16.8389 46.9833 17.3672 cv
44.7767 19.3887 42.6854 21.5044 40.577 23.6265 cv
39.2426 24.9692 37.7728 26.2568 36.4164 27.624 cv
36.4764 27.4268 36.537 27.23 36.5961 27.0308 cv
36.6151 26.9673 36.6171 26.9048 36.6132 26.8438 cv
36.6986 26.7612 36.7841 26.6753 36.869 26.5957 cv
37.8881 25.6367 36.2684 24.0659 35.2953 25.0869 cv
33.6366 26.8271 31.7743 30.0947 32.6893 25.8574 cv
32.892 24.9185 31.6566 24.4473 31.1508 25.2466 cv
30.3456 26.5176 29.2538 27.5942 28.1019 28.5815 cv
28.1215 28.1626 28.1361 27.8042 28.1332 27.689 cv
28.1317 27.6401 28.1151 27.5991 28.1083 27.5527 cv
28.6805 27.252 29.265 26.9639 29.8827 26.7036 cv
30.3153 26.5215 30.2689 25.856 29.7499 25.8545 cv
26.2269 25.8442 23.1176 27.9487 20.497 30.5205 cv
21.4838 28.8813 22.4569 27.2363 23.3153 25.5415 cv
23.6635 24.854 22.83 24.311 22.2792 24.7764 cv
19.5907 27.0493 17.2831 29.582 15.1493 32.3799 cv
14.495 33.2378 15.7206 34.4141 16.3676 33.5478 cv
17.9252 31.4629 19.6166 29.4873 21.389 27.585 cv
20.7528 28.7534 19.8363 29.8945 19.2562 30.7847 cv
18.2338 32.3535 17.2347 33.9429 16.1815 35.4902 cv
16.0253 35.7197 16.0814 35.9585 16.2289 36.1338 cv
15.8182 36.605 15.4091 37.0767 14.9979 37.5435 cv
14.5814 38.0166 14.1698 38.8188 13.7665 39.4658 cv
13.5292 39.2373 13.1547 39.1587 12.9183 39.4746 cv
11.8427 40.9155 10.6117 42.5488 9.52039 44.2866 cv
9.36072 44.3491 9.22009 44.4585 9.13709 44.6489 cv
8.98279 45.0049 8.828 45.3618 8.67322 45.7178 cv
8.52576 45.9824 8.38465 46.2485 8.24841 46.5166 cv
8.25769 46.0034 7.49793 45.6807 7.25281 46.2236 cv
6.12244 48.7261 5.60633 51.5107 5.31384 54.3418 cv
5.26746 54.4922 5.21033 54.6392 5.16638 54.79 cv
4.37781 57.4785 3.3158 60.5957 4.79578 63.1479 cv
5.07947 63.6362 5.76453 63.4497 5.90174 62.977 cv
5.90515 62.9775 5.90906 62.978 5.91248 62.978 cv
6.84412 60.1436 7.08142 57.0327 7.90759 54.1138 cv
8.23474 52.9556 8.5658 51.8027 8.90711 50.6538 cv
9.54822 49.355 10.0599 47.9663 10.6371 46.6699 cv
11.2411 45.314 11.8798 43.9849 12.5604 42.6748 cv
12.9564 42.9844 13.5009 43.0371 14.0458 42.4785 cv
16.3754 40.0908 18.7675 37.5908 20.8475 34.9136 cv
21.3021 35.3281 22.0106 35.4336 22.6161 34.8389 cv
23.8099 33.6655 24.9432 32.4394 25.9808 31.1387 cv
25.9818 31.1426 25.9823 31.145 25.9833 31.1489 cv
26.2015 31.9507 27.2064 32.1133 27.7665 31.5796 cv
28.6112 30.7754 29.3549 29.9224 30.0814 29.0562 cv
30.0555 29.623 30.1459 30.1597 30.4862 30.6001 cv
30.7172 30.8984 31.1346 31.1646 31.5331 31.0005 cv
32.5409 30.5859 33.4486 29.8896 34.3007 29.1118 cv
34.2123 29.5127 34.1415 29.936 34.0746 30.4058 cv
33.9784 31.083 34.7216 31.9194 35.413 31.3906 cv
37.1703 30.0474 38.6952 28.3623 40.2123 26.7144 cv
40.2108 26.7173 40.2089 26.7202 40.2079 26.7231 cv
39.9598 27.1445 40.1034 27.6079 40.4139 27.896 cv
40.3773 27.9419 40.3358 27.981 40.3104 28.042 cv
39.246 30.5898 38.2284 33.1577 37.1464 35.6982 cv
36.872 36.3423 37.3798 37.2949 38.1835 36.9902 cv
38.4188 36.9009 38.8632 36.5288 39.327 36.1113 cv
39.497 36.062 39.6644 35.9629 39.8158 35.7895 cv
39.9852 35.5957 40.1498 35.3975 40.3182 35.2026 cv
40.4154 35.1138 40.5038 35.0352 40.5829 34.9663 cv
39.9315 36.1577 40.1786 41.1924 40.2689 41.771 cv
40.4008 42.6133 41.538 42.5073 41.912 41.9507 cv
43.9862 38.8608 45.0116 35.1787 46.5985 31.8306 cv
48.1898 28.4746 50.3739 25.4575 51.9711 22.1177 cv
52.1224 21.8003 52.0902 21.4976 51.9647 21.2495 cv
52.9305 19.9814 53.8187 18.6602 54.5292 17.2227 cv
54.6595 16.9595 54.3607 16.6016 54.0878 16.7988 cv
cp
f
14.5443 33.0898 mo
13.1654 33.499 12.6625 34.9692 12.0472 36.1538 cv
11.0463 38.0791 10.0814 40.022 9.14148 41.9775 cv
8.74402 42.8052 9.99451 43.5039 10.3915 42.6728 cv
11.2279 40.9209 12.0839 39.1787 12.9686 37.4507 cv
13.6259 36.1665 14.5448 34.9077 15.0297 33.5557 cv
15.1322 33.2695 14.806 33.0122 14.5443 33.0898 cv
cp
f
95.9852 28.4175 mo
95.8944 27.7534 95.6952 27.124 95.3866 26.5288 cv
95.3446 26.4268 95.2777 26.3325 95.1991 26.251 cv
95.2118 25.3071 94.8563 24.4346 94.2557 23.8569 cv
94.2772 23.2402 94.1659 22.6304 93.8114 22.1069 cv
93.4691 21.6011 93.0814 21.6025 92.6249 21.2998 cv
91.9296 21.229 92.0204 21.2271 92.8973 21.2944 cv
92.8715 21.061 92.8392 20.8291 92.8007 20.5977 cv
92.4344 18.835 91.2714 18.1665 89.9833 18.2339 cv
89.8431 18.0913 89.6757 17.9761 89.4916 17.8945 cv
89.2772 17.6255 88.892 17.4849 88.557 17.7017 cv
88.5048 17.7358 88.4608 17.7803 88.4091 17.8159 cv
88.3109 17.8462 88.2167 17.8916 88.1254 17.9458 cv
88.1249 17.9453 88.1244 17.9448 88.1244 17.9443 cv
88.1215 17.9468 88.119 17.9497 88.1156 17.9521 cv
87.993 18.0264 87.8768 18.1172 87.7758 18.2373 cv
87.5692 18.4277 87.3993 18.625 87.2562 18.8311 cv
86.702 19.4321 86.2255 20.1089 85.8212 20.8223 cv
85.8212 20.8223 85.8212 20.8223 85.8207 20.8223 cv
85.5033 20.5889 85.0907 20.5352 84.6849 20.6089 cv
84.3778 20.665 84.1176 20.7749 83.8856 20.917 cv
83.7889 20.8535 83.6844 20.8018 83.5731 20.7612 cv
83.5868 20.4048 83.4398 20.0898 83.2103 19.8613 cv
83.1537 18.9551 82.2338 18.1318 81.2885 18.7861 cv
80.7518 19.1577 80.243 19.5479 79.7577 19.9546 cv
75.9115 21.1812 73.9242 25.0366 72.0941 28.4189 cv
71.7714 29.0161 72.0057 29.5854 72.4384 29.8896 cv
72.3754 29.9722 72.3109 30.0532 72.2479 30.1362 cv
71.8588 30.5449 71.8812 31.0244 72.1073 31.3877 cv
72.2186 32.312 73.3485 33.061 74.0907 32.1499 cv
74.2787 31.9189 74.4803 31.6938 74.6801 31.4683 cv
75.0775 31.9141 75.7167 32.165 76.2802 31.9849 cv
76.496 32.9023 78.0219 33.4136 78.7606 32.3638 cv
79.5902 31.1841 80.4437 30.002 81.2416 28.7881 cv
81.7313 29.5586 82.9618 29.8521 83.6317 28.9546 cv
84.2123 29.1689 84.889 29.0952 85.4413 28.5581 cv
86.0497 29.3833 87.6991 29.4717 88.4125 28.4697 cv
88.5868 28.2251 89.037 27.2324 89.2938 26.6191 cv
89.2489 27.0366 89.4662 27.4248 89.7958 27.6724 cv
90.0316 28.6113 91.2357 29.2393 92.0131 28.4736 cv
92.5219 29.1099 93.4672 29.3784 94.1014 28.6533 cv
94.1068 28.6475 94.1102 28.6431 94.1151 28.6377 cv
94.0409 29.9883 96.3187 29.9194 95.9852 28.4175 cv
cp
.415686 .466667 .537255 rgb
f
52.5804 13.8647 mo
52.0609 14.4463 51.556 15.0464 51.0585 15.6523 cv
50.2645 15.7832 49.8749 16.4634 49.8895 17.1421 cv
49.5062 16.373 48.329 16.085 47.7001 16.7871 cv
47.6034 16.895 47.4374 17.104 47.2279 17.3706 cv
47.1781 16.335 45.9774 15.6689 45.0214 16.4976 cv
45.017 16.5015 45.0131 16.5059 45.0087 16.5098 cv
44.7338 16.4971 44.4554 16.5684 44.2509 16.7749 cv
44.1151 16.9121 43.9769 17.0464 43.8412 17.1831 cv
43.7421 17.1494 43.6342 17.1436 43.5292 17.126 cv
43.8988 16.1509 42.4052 15.1094 41.6884 16.0342 cv
41.684 16.0396 41.6801 16.0454 41.6757 16.0508 cv
41.4579 15.981 41.2191 15.9653 40.9794 16.0332 cv
39.9491 16.3252 39.2631 16.9868 38.5472 17.7461 cv
37.7367 18.6064 36.931 18.9448 35.8832 19.2261 cv
35.8763 19.2241 35.872 19.2197 35.8646 19.2183 cv
35.7587 19.1938 35.6522 19.2065 35.5502 19.2349 cv
35.5443 19.2314 35.5385 19.2285 35.5321 19.2251 cv
35.4916 19.2388 35.4647 19.2622 35.4281 19.2783 cv
35.4105 19.2866 35.3934 19.2939 35.3768 19.3042 cv
35.1757 19.4014 35.0101 19.5244 34.8339 19.6899 cv
33.8895 20.5801 34.9398 22.1167 36.1097 21.7793 cv
36.7626 21.5908 37.3983 21.4395 38.0385 21.2798 cv
38.4569 21.1758 38.8119 20.9868 39.1522 20.749 cv
38.3602 22.2729 40.2792 23.5503 41.5546 22.646 cv
41.7543 22.9287 42.0453 23.1558 42.3803 23.2998 cv
42.639 23.8638 43.183 24.3076 43.8124 24.2285 cv
44.4066 24.1538 44.9423 23.9316 45.4374 23.6187 cv
45.371 23.8457 45.307 24.0737 45.2601 24.3071 cv
44.9633 25.79 46.8807 27.1177 47.9906 25.8208 cv
48.0946 25.6992 48.1869 25.5713 48.2889 25.4487 cv
48.5316 25.3599 48.765 25.2017 48.9696 24.9414 cv
50.5106 22.981 51.7816 20.9336 52.8246 18.6772 cv
53.4398 17.7583 54.077 16.8506 54.7811 15.9746 cv
54.7802 15.9741 54.7797 15.9736 54.7787 15.9731 cv
54.8563 15.8687 54.9359 15.7676 55.0126 15.6611 cv
56.0331 14.2544 53.7191 12.5898 52.5804 13.8647 cv
cp
f
125.532 86.4829 mo
125.321 86.5298 125.106 86.605 124.889 86.7378 cv
120.823 89.23 118.384 92.3574 114.89 95.4497 cv
113.747 96.4609 112.551 97.3286 111.433 98.2476 cv
111.785 94.2461 112.535 90.2353 112.771 86.2549 cv
113.136 80.1143 112.914 73.9585 111.795 67.9018 cv
109.797 57.0903 104.595 47.4419 96.101 40.3926 cv
95.2299 39.6694 94.2015 39.8286 93.4955 40.3721 cv
76.5648 32.9687 60.015 41.3144 48.8495 54.2305 cv
52.6156 33.9673 70.1732 16.0859 87.5941 6.73096 cv
95.0858 9.07031 101.755 13.3071 107.711 18.5488 cv
111.206 21.624 114.582 24.8994 117.033 28.8867 cv
118.037 30.522 118.916 32.207 120.145 33.6943 cv
121.596 35.4512 123.5 36.7187 124.288 38.9829 cv
124.355 39.1738 124.446 39.335 124.545 39.4824 cv
127.004 47.1011 127.598 54.9482 127.975 62.9346 cv
128.354 70.9531 128.038 78.8242 125.532 86.4829 cv
cp
40.6679 39.457 mo
36.5492 33.6001 30.1932 30.5742 23.3261 33.7842 cv
16.4857 36.9814 12.1522 45.0557 9.08972 51.5776 cv
7.00476 56.019 5.44812 60.625 4.33972 65.3442 cv
3.68347 58.0566 3.94373 50.543 6.92517 44.1992 cv
10.8978 35.7456 16.6566 26.6353 24.1234 20.8989 cv
39.5121 9.07715 61.8612 1.42188 81.3065 4.82276 cv
81.4774 5.02832 81.7206 5.18604 82.014 5.30029 cv
65.2509 15.3564 49.6727 32.4873 45.3095 51.8525 cv
44.6166 47.4394 43.2865 43.1821 40.6679 39.457 cv
cp
131.974 62.8506 mo
131.557 54.0728 130.917 45.4272 127.979 37.0781 cv
127.848 36.7065 127.642 36.4282 127.398 36.2158 cv
125.706 33.0332 122.732 30.5781 120.845 27.4692 cv
118.08 22.9155 114.47 19.1729 110.48 15.6616 cv
103.275 9.32178 95.0321 4.25977 85.6835 2.04785 cv
85.4447 1.74463 85.0917 1.50733 84.6024 1.39795 cv
73.2006 -1.15234 61.5595 -.0688458 50.4838 3.47412 cv
40.0521 6.81055 28.6967 11.7861 20.2728 18.8926 cv
12.66 25.3149 6.18933 35.2559 2.44763 44.4375 cv
-1.58948 54.3462 .200564 66.6313 1.91931 76.8867 cv
2.0658 77.7598 2.62049 78.1846 3.26355 78.2749 cv
4.37732 78.9785 6.39588 78.4028 6.54383 76.6133 cv
7.56433 64.3008 11.7953 50.5918 20.203 41.2236 cv
26.4481 34.2651 34.1971 35.7075 38.5184 43.5542 cv
41.9662 49.8144 41.9999 57.2651 42.1107 64.2153 cv
42.1434 66.2436 44.8597 66.8198 45.8583 65.146 cv
55.3007 49.3228 73.746 35.2925 92.7059 44.3843 cv
93.3856 44.7104 94.0306 44.6333 94.5492 44.3428 cv
102.547 51.5254 106.999 61.1543 108.395 71.8359 cv
109.108 77.2842 109.066 82.8237 108.636 88.293 cv
108.224 93.5459 106.963 98.8115 107.304 104.095 cv
107.419 105.883 110.251 107.001 111.052 105.025 cv
112.399 101.7 115.587 100.305 118.079 97.9795 cv
121.095 95.1655 123.388 92.3506 126.98 90.1484 cv
127.229 89.9961 127.416 89.8144 127.561 89.6182 cv
128.244 89.5019 128.88 89.0791 129.164 88.2607 cv
132.028 80.0351 132.385 71.48 131.974 62.8506 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (3_head.eps)
%%CreationDate: 11/11/2019 9:59 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`Eq;BUEn]%\FtS%6psDldo&$)<rq?6\e#m^^NTXX0;QF%F9f45%[9UZj.kX!!HMYO;gQuimGl?plmJ#K[
%?9Nf2qYOXd%Y&otEqc%Nho]l/m(U&Zrqt;RG5LGuT)Mlq\c,V*qW?K&gRD9J?T`V?b?#&j_q2Qr+24)Bj9GB@gWS3`H6H!ihS+7[
%D^Y;!ks,"B0DG&_V3T(ss7,imh`gr:c0H`qT"TIG^OCo9YCDi1emI9_pI'KS2uCS>ami=*jmIBjcVK"7r^NNj>L/JI^A6Fl\+m/=
%hgL9Gms.p!#<<i`*VqEj7mfLimdS!a[(Ch*hu,1oU-@au091:3f+[_\Mb/Bbm/hLp!GM9X?]mSIqUKdCT"P'opCA?3>kWs-(Z.B*
%o&c6*?ZNi#][4jt:!U>se1[%pj@-=)=,Zfi=1u@P=tVnGaC@T%-C8ed>$N\'d4-o\5<c^Xb:e&=rV">l\$&L]Y$\s>o%F$r'&\r.
%1:A``M-$Ncqu,u5G^fPd+'q-XK5Y:)e'\-=X)DmJb@U!fDOs(d]M)VOs0jf`nDs8O[r4\*?TnDiKDUR4?2F#=qnn>!5PaUs7+lj4
%b4!'VIJJY"s+@MFI7,a>?+NZ![j8ZA>_E7<#uP$_pBOSkm'aD-DU@iXVB:cs(F&(XHi<<cB.nb^6Jh[R(2n9PQ`m$0ZVH)2G?+[(
%:V!LST@X%pCJ-=nH#rkgpPe]N++?"?VWI)%?fKJ2Qerch]th.*O+6S/)SM@QpAEIMp=o6^r12X&L[XT9f^SQP?c`Jt?K/tc+8o5i
%=24aoq%*&>?bV!^_frkAq9Q5c5PjX;2m<5FG5"4=T>#UD>"8@Xh=(@-J'1'*[ehL$qX+ltT0/BcaM5bU=&5E9pTo)!:qlPom7r-]
%fCGR4^CRk]["'R#o`j,rHMQUgo2jgD2qIRAElTi)5C*(coo?d(2uN?T+6>FWUn?4Bil'S1IsfU+7;fi'DW+lGcIr0REl.ILLHOkR
%cX,J="l#W]Ie/n-YQ'O^HiEpJ.be%.YAXBdmCVf]je$JK4T3b)4g"C0n+t"e2h."0jn@dphiD*jJ$(qn?IuW@I/2aCoB4H6IJr6=
%5<XA)gV<aHq`jKInESQqEVBjU+&A>Ta'[fJLHP4P^V9K@=3mLes'e*&DYZW1kLn>I[pT.-q_ttpP<M\;f.VXJ;Z#YF=4diB+!?G>
%YBd=\s-J/f\E_M+jHon<T(:uAp<9@GCk"=6A'P#XT@*u?oZ]1[]_<hQ\"<3Q?_3'/q":tCHH/EB2uiKUQXVo?^AQsCS(i('^3];i
%/D8jGIsU\A/S@gCo?6fml"aGLjq[4F5C`Q6-B%d#ja>3(?U+AKRB2^hO<mB?([9B(62l-;I=HV@;BBni?.S>GgOJhid6BgDZs4na
%Rh,:`bH50[GPK5<>if<j^^pF1`Q%D0^J%96""`kho(E"T-b@Fl1:quSfG8ds?,+F_hdU5B&BcneOg?UK&+#+U5Op`0mm$)3dO0=&
%o[3-t8R=dA@XhW/[L:nSK)!:qYJ5F5qff[0]mfPC>HF=W/R.1<QJbueha5K2-2amQi'%(ZIu'<P-n`(,O=3Fg>9#9\P4S]9IWV-a
%P8s*R>l/:aa3m_'*8A252uM0k>ACEsk*qQEWMb'Dq^T@Z@bK@8I<FYK*9:d%`3SG:9.2FMaDmGSTB-j!B)JGEF3%YtQ^>@\)`^[X
%.*!LujcE!/RYi(676,aY)3J1:OlI,dElb<$(?H.f"6#IeLQ>)5_G*#3E=<(4jE!Wq<K7^QJN-6@b0(kCUjKu<Dg7f53;S7IHTA7B
%I&*s[aFT[Oi\EqUSLQk`'_hie]5]2YNcOK__tMM-o$nos7?6_t*7;l<E.N)RN?"kX.*"XQm$DKJ)NQ@<k)ksC8'jagIe<Y\FQCEr
%3;iDU^@LFDrN)h;q]#I<j2=/08>Q1X+THqQj*JJ,5M,e@QN>nY3RU*$)"p6*F9u:K7ZNZP#<?b7#f_!%\UigtJ>'#4FsoN@7ZO7b
%cTr&2#VcprTEIQ8</U282f]m,Q4@s%.8SP15N5=5Y/K#4n;27DHpPX7,#WS68,74fs52$"?d$jX:R1r5o)AlF"47\Uo,*LnPU53L
%IO()$P!c)9+Fj*0r?7LrjAHt'b%?u8aJUii]J0`3+-G#93m/oMH,gqra@DQ!gFjq`LjWcr]Y-C`^]]eL-Gss5Mb&)UDEENHLm-&R
%)!/)-grE>s;NM2`AVM5S8\Qk!<u:+T6b\\S$8QP#o]8rgd`JT91)AIs68pZ+6,p*a7Q<<j9,Zt:,@<kP%bJbe)j(^c&lV2UY!o3_
%,(!(^@$IfD1:Z^j3#kBbh(_GJk+b%hJ*QS#\3D$qE^uNmiKSTJ;\A\DI6*mYEp1i/9Hc%r!/!S6,,3P(p="#o3K<(?d9/Fo&/p!-
%KF#F/7AuAsRX?Q<%757j_?V5H;B0]FKo-AO+Ackfj9/riplU@gI]fM'p(['Be`@6P2:\VfFGNnrOKjBBa@sCqhR`&%PNdfB-a1()
%S7l=aA&P@53>!b_^ra.M<5l4-@7mkQ1#[b-E]V8IZE)C+f:k+)E<3XVNmltLE!,JP"!F%-"sM-OCa^tKnd0Oe)%9bh7)'hkUC4H!
%kXSc9A9^N>Ed09'dS9LM)(*#G3`Hrpji10(MDcMC-M-qc*IG]MmaF\gW=0%nQqAA>!!SE"`8bgIBL_2a/-@*/&7>?kgiA7M']t.Q
%7`WV;ESr**;O6fcBNN4\NJWW$SiG7TjU6/=<<*5<:W7:GME!oATK5JmTL?"*a>uZ,Jd:>q6A5N\e#8#p>QBga:FCUq9&;+G,(63@
%&sZ[f^Fk)D%!F(ijY0L@LEod&;A)DFB5'2J*"qLk7*[R@V/hkpPKZ3O+peL:M/0XJ->\ucN?UMljCf-n3f1'\7*;[oYuNtN9@l[r
%81[.:(E4n[HWsat?E=VSU<$obED\a<e$,KMF#b\\S<t2"a;;Vt3LC\97:\;DY^FN]8oJ/.\<bF=>VqW9ESuGr(Q3p)$l0.#%[i6-
%/e&2TKHh:cCG#]8b<$19`R-Y*R:1,QAkAk&&k!Y/XP#:!NZt`TRO$EWP":5DWBh`*"q6[.R3OCTP*mMS7YmKTC3ijJ*Q^tbB;W[G
%VE53GL/j>1ZSDC.&DVCiE7`?"@Z+t(m^`k;lR(O9e,LY2Udk)Kga"l[h!rk+;88O5Q)oK[6#qkH%$;l*Q*7!'#s_^C_7]ib;D[,$
%!^>uIpN-E7iT86105ePXI;;R@<O`&GgZA..3s4:OnR<Rcd997Vr^$1\',r*PrdpDS&?Q@&+c:e-&[p`('s`YW?:=E2p4<t:9d7TO
%<(*[GZl(uk/l_4EedPQVOUAJCG+cD\AI143W>l:Gih#H)e<aO1XF9op`O@M5o:k!+ggmFfX#XoEWjq(cEAFpqbrK!Q<RIeG;e;ll
%:).(QC2[+"rF`<hfJ]`8]/!WPP8uU\^u@Ktmd_M&i9qZEiXtW>de9=P^$j&:*p*AgmWdXXlA$C#a+p;C*cf=B+*?AWO3`$_mu5At
%EM?A5]oK6q:81f*nS<bZAZAo,Z9U^bG^:Neg>sI#g5RY&6'f)U%3lc[K`#Le-I=7l2#:nNR<]%dY0rutduZXghl+Ode2`dtLSgLk
%f%j;H1sii-=j=8N0Zhfe;fcalA!8'*=$UlWhFt37l4011er?qB`n7;fAs9;<D)0D>bs90d(rpXIA_h%KK;RBY>REE(3)BQi4i1E`
%G]olE#IPd2T_jc?i1mH1gp+TVdGB>n*T(kVq]69^j+DjBNh?+05K4`$V,8Rf;FSggh#c&EPI7]o4qVR,oLTZ?]#k_OeJ_JHGaV=N
%m6nR_dV=?nkiaQe3f9+b&XUk41YCO!q__!t.C3'ck/)?s2t(jc<Pm*4$8DP(l7g,W=\dep)nJJGMcr@rn??YqiVJC#.2rMr%K!*i
%RCbNB>gmLGNnR>LXg?P>B,^!NEMe!i'7?0J])S-SQ/(o4p3QUU^J9-bf))-#o,[k-meEu;^H+G5#S;5KH<cll9_I)H3!6tlDg8S?
%s3to5Zs.%Qi#if!C,djb%Q77^N]RZ]adZq/<R\d%lB[WYAl*;HF<)^M@FB@Nq@48T-@c/+2mf3/@D.B7$60,_>W2epjGottT]HMD
%[mhKug5QXZZs*4X$B5uKNPkfsF/_U(3iX#jW^!M;'J!.rdPXLdj*aV5!]*Vgo"=1'M+k_J>!8q>F.,7bXoEEZh+g1D$012niAb+,
%f#Z"Q__YKfcm(a8O?5Yi49E;/3ol;355.:j*P4eO\[a`Wlt%n&2sD[E\C8^e-pum&1*i9>mW`e8MMM6Fc,Y)$KL1`T4[IFg!7VVY
%"SCC2>A&PZJ33jW!q$3DWDKJoSO^]B']`5Ldf@Z&\7s<e=;2e2HjI)>JX_<NB5l>Xc,Yl)FVNj%+K*)H$?RcIWF2X@SU6:3<e?on
%4Z*uo2&[u+$37$2W,.O<*\B:^-QIH7C;XMf`T"7P.&41)k`<b-[N7f9Wck;m/`9PjqUFda934",UoNIJC%qDMM"5/9or^fTNj(Oh
%J)#@k*Cl'5HaoPlNmh3nUT>NW#9S_V*-0()STbU7FlAED55<q54EnHKq5dFWCR!-`jg.GP<-S8A;*Jc[cPkoO7eq.M1lX7gOf/5i
%rkFNo-$'cX9[Sam]hEC)Piq+J6cDud\]bhu+H,s1?S8-(I%'pU5*$=-(Q^8RLi+/m3,@qpAp<@tB,BQ-G#PEXV;Lr]MVKHP]^s<H
%n?$N03WEC"As7Zt)Ep?W^tk2Mi&8]rZGu59&CX^Od4j"Xf%A<i<n3EW3I6T3k01Kjo&,f_2u3CIo973NpP7e=;aDJs>Q0'uPbl;f
%+f_h';2@PYO;(jXQK$J[P.Q4S.$U@`I[[K=4OTXB03MHR(T^k4GH$L=&[K01]U,t>Lkl;kTl)[O5M\L"4+?PjIbNZU";A_mb7d:t
%cR-^[iMI7]4Yi*67@5T6?A-9<_cTJGF:4"bC#B9b(,7<L%#?-U'aa1UW(T[JH&i<r<edg?i)Lt_MicIDT?:VoW\OWT7td^PKR&0Y
%RD:Dk:CLsHAYdun9<YT_<m)<g"D3SRX_Q/H#p:c4>r5\1N@\)S;,uQHAn7fSId/gM[96gNcV-LDoK=of<V'.9L2*q$<TL+(=fT_#
%@DusRk@DVmk,^aqFB[`Z]B^0tLuV#Nd9(Hm[n",Q1qBCD]$A>#(VY,60-'[1GJ*QhF5Lu0A[WZ>'V)Z.#9TD6HZmINn$IMunbJ46
%HfZTqV."EJS#Y]l,i`S->XM2Q#s"I@G@^"4@bO?F:Lf2Pe0>3HU#XS=l'9Q>Ob'C!OU.=K,OMIo:.$OG*d6eI3m>3"1#':;lD0Ob
%W-Qp^,3W0A&=G`l>m8jL@*(Et-QP'dDIN-P$T.N1\K:ilKUF[`h8A"R?on`M"VrM"#hY;5L&lqV^6-K,4'6p939B&XR$6"%V`alE
%%ha^Wm.pE>-bj<UGO;:H0T@'#4mG#X8A,m8qVT3g1Fn`[m4gH\X?k[hUN/JGF:8tGGjgdOEFcUiIdg2e*;05k45O[ubL,0pa;l@A
%f)$HeZ1$<QAsQ4%03rMT-0G+I2XllBak0d7W*0*_a8]]GrG-R@F8JBfbh;q*amEHOV(e/UT%8LrMpRX=4TCQ.IgK4\@3s1q2c**4
%\Ljn)%OuTl.1\s`$Rab]P!j5l:sp+M\ca2l43jOp#rIf,hM$nhYin8ikR7H[%t[(X")@8G0QM#Wa;rT1>^c*=/ff$=5O?IX&%U^`
%^\Q7:5Ooi@JF%n>_t>@WY.7]R%R*_D<3a^noZ_(^e+q'W,h*uO'bY8CZi]LGoM/l,KN92fg*<X\@QEaXFn?_47unbJWB.U.>3U?3
%GLS.(HL4S]:C;V&"C=A.7-eJ;;RJ8[ei!.6eaijmb1%F`T2+Q\WfJ6)%C(NH-X3S]<`$K=I(3eb9oH%['89E7Bq]Z+0KlYug)I!Y
%<<&?re>'WRh.Tp^:tDY#22dMBRqP16AusHYVB_]Rl0PqO,BjP4%Y*s+hJlA%5P1U\J*6@sdDO89j7Mb,meD==hWOZpI)h5D@;2rZ
%)jC_;1Z,U_,gFh$&F7,#f!/C#-_KV-+/k1W0Jr&??j&5V`Il31MptR*QE_-uar`%MM>HMYC0G`qY$"3HBYP>6;J+KY-C[>2*f0Kd
%908G:AID<bs$T"oUole$Gh$Pne9C-5"I4uB(c(nU)^a-Hl4Jb`Z4[E#(h<Z".%hYt6C^2</@iZg6FVQb[.MpZ>Muh^akN%+d5F*?
%@_,MAFh)&JDJ>BFJuc@N5*gsD^!KDN&)ZD,^$CbA^@Rl(*lmk>mWbYsj,VH0I%TGI6>;BAaBDgb<fDoQ&\JjC/iEM-(u@cfrJ?)@
%Aa+n^_h[)W$@9[5*q,8X^MsP%hc%rQmGu]#&b_.5Jqp<^CQqZB-G)8gVjNAl5[Y`RG*GsBb:9q((;6)N>@>jUnqoR^6rCU;a19FR
%:)VY3WGoPP@f@CMbnI;I0[RQMZ,kh^Nm89u4(?mg&BdTT%9TIcPl9@=="Y0-^qoEf0l,c?-4Q)?hmC(X`!)T4gb<t7+jl,\0\<\3
%62BN"j96=joq3?=.l]$;&8]uK(+HnC-W\r`Kh(XkM\qsZN!=OefCJ,.mo^'MK6XZj4X8'u5l&lp6AhBX]lHne%a'rm\D7%^hj97U
%V]m%ij-_WNG18TD\T;SGF1L<W'E,(rrbgcON:12P.Di=Q@H!92R:8ZR62+uQFd$VYATFkA)9jolbM7$'6$'5AfkcfT,J%j3&5tAY
%VS&=)f>I517XgKDbYn&4RoH:o5b0\_WSoX@rX4U]f=Z<2O)n20Xc_mj*c2&G(p:3&M1kqR&)$%nBXcF4ge<qfO\k]nP;*uD'>S37
%;&*9cn6EE+S.`j^-diibh4eob<25:10`6''oIrlHPOHNP+\#3%*O9J?p[YKg6!gX8/WsL9cDq4D@oY&MgCUiaD'+3?UPi6Sa4fbZ
%FH8#U?>d>.*8U3X>)qUP?Wrsan-0uL]&"+8p35NJ,N@COTR?n+oGLS@okcC>Ca.\;5kDK\-P;A&U$=J.nsE5o,!;>k)kX"PSr?@N
%F_[c3_1]p_=oFY-O/;_)X-]R"n$>O4]oYn$a6HmQ"DF>/m4],A>SBb.9!gWW@X;0U131'!P\E:>0$TEu2R$Xa[3JGa6Kg=Zg)p1,
%ok,j<0@O@\N+#hTO%Uui05qH^(soQl;f]q?mP/O_DNSds[g$urjO91->E/rp9&*o@I`.q(*,.p^r+oC/>K3F1,/$"5p;!%ceq@5(
%e*]568SsoB_]IHo;@ub9@#.=Z@O_[!4fRdCo$D0Y>h!oth?VH1B"%o+--??+c$D(u-'K\'RJh.O4efq<P_hpU%%W.ZAsBS40cD/b
%ZDMMs.7),][LIaQ"=TMkn@0W"/8"9;>(H$)S**(<jEpoS^>luq48t4%*)P`$o/.EoE)3:(;doc<7N<hq-R1*tN.mthp,JuS3a#%<
%fccOtb[&GGJ>!=eP!XbOCU2J.6QPER<`V9+LtGL6""XCVb_b[qfk:UOleI'1\AgJJ_\ppn;@iE:>cYU[`$XQ7'AmD6S\*',k6Llh
%(koWum&5O:71R^4.js/$>'SWa)m)=Zf(o;P=Y84t,>?#[QbDn=#I!kBA7<,tHitD0TP7PWr;FT2q-=>]HOfXW5N/;[S306?@U5,H
%N_jgrEF#u\1dp(S_DIX\_;5*ciEsb&j$u!ZdKgb,#eA,U+%6VtG71B[b!"p`kMBpoqSn\XoPeuT`<uQVFVE4`ni06+A5]SY]NQ_i
%D7/B@LZt2t?d=93RkW&5cuU6Rg3TrH_bWEP[JntSP1,t0=!ea3V8GE9\`6sKrM&[ka#g7XaRAilirLIi1cO96]I!15mVraQndu,p
%\-@Z>l]o/;0C7q??(pF=_/3*5RXfa9N@N---RQLO7[9mYgqcEjS9QPk9UT!l%P&nJ%;j]tqTlh5`)A()90g*X#0uIGAX(IHB_S'H
%2GE@Rk6/0hOna)p64;?H-)-A<1>4VI=$<E@nb:\"g!14[2>%cZYVd/4:*c;B^_Cuo?ghC@[<"\(9hu&7_5-"\Z#X2dE&pW$hPLNR
%$,JSP.JRao_06QFmnF)%P8&C_.^2e:53TM<'`='uml9IU`oTBX%ehk@GTIR3)[`+'%IXN!f&5D=!8]kI[lKt"R#X193WI=3^s#EZ
%AN2d7VV1MLD&)Ctld7_&dW#3INZ/gC50h"KCXD#;fGH'323&X&i6q-R$Ga-?7pG39D*Rb5E;,f?jhm.qMff%%q67ajfhZkNNb>%P
%X^F2k.-o68]a-st?`3*GHL<jSl_oTm+MoWMHo#L5D=NAFF_Z#:CbfRk&pfnSptaH=GKGd?)r=0%>Ut/Z,pc:-Q^cLJ.IFFuN<s&Q
%"=*B/X*t=Woqt'LmqeikJTjp!\qqGi;4CS(>,XTsgS2STKic",KU\3>4-!RIq"jK,=G<(Y*KE![1$9<5N\)?Wi!,l20\9VUG$`Yj
%6.^T;$L[j]&6t[M,0X(DTu:2_F.7'k8Q'<+4HX\*eYt9LY"6$tdG[&uh8I)e)XB3QZu/Wr7=Ye_<,2&Wa1NQ!e#JCsa[NNpf\H4i
%8/puG)YZD0pO(j]-f@ZY(-2LPq2u-d,YMcrgPgG$rVMtQRQdRI;u&#k\=[A^o;$A5:!bqkh*9`+s7o`d4e[AK"^:TI''JKlMFW,L
%r$=#D/,/gpi#ntNs2mn^h44QgEu1C"51\^r]ptT@@JhE@SP(_Z/YFpIdLr"`=>BbO\,"Yo)(m:b"O`[XBgu89><1#@S&25pM?4fr
%W)'<QY%tPt9Zq<KY"%K#L13(Pbo@]-?oRpo@`r_&rcM/CB,:6sibL?1MAZSm:g#T:n)PX)M\F=!)a3dP>/p)H'.qRI#IpT,&MML)
%LEe`\Wa')J/?`/\Z)f.e!IGUSkQ&%bnm(6uJJZH#gi7S]E(JdFBG!CL&=nL!N8B`Xn2=PH5>^4[h4J#aQUhdh\M.k37>g?7ge=/]
%;]%9VKkuW5VS0%mh5bi>81st*0n9+7P^TX0*c>(nlX!V-WCAPYkTppF:m13]'qP-_I;^Vg4cA]HFW.ks*HY=b3!^V-aL:MY[>'G2
%$Fmo'!Z/)+irr\!MlP!gb)3,/:O2l:j!b('M.:ITeuf74E\g=[e"u'eO\$/LVrg\p`L96#c(R,?TXZY%!h6<N*1/NAo%kV)jiHa2
%GKcPOgj@P[*0UISGMKd*pZKE]hf;DUN,ltV"g;ThQK29\X-^/(,p'_:Ze$s!43e1=@Bck?8/fMO_[cS'1pE9P9J*#Zrf1V?%GR\5
%_odR>jX/MSK^I4HYMJoc-Ss*g#Bhg'!A!*Y],ERfd)cTd$lX"=M:2%i@--5i_l@?N?1<8W>)KmAMtghsR,r5?Rpb]MeR`If9!!b0
%4$Fa,\To/0mKl"1:msF@)ip\<7rF-K4O2t-Z53VcL"YqiLq@cT-RW(h=]A\7S_L>QacSt*61.^^?ajnRWHW;_fS4;(s*XTIoK>U?
%Kuu7//6X_$4#e(7\:[q%@V"&;_#aG+b<OS3b86/O$sRZD^5PIj;^e!;/flnle*8T'k`[q=KG;QaiAEH'T%_1[X'8BEijrobq\0/U
%R50Bp1<&5eea8%4I7oI5D/eX6C0n!mj_@u'*^@4Q$KuhiSSq-JC#]_n?,8FGe%p>m$OiQo:Ue=qD`7LB?.pu&+jP3tLVE^QYFP(9
%iliA"oF5Zgc"d*@1KHe;/%c*"[\V(o>mnsE^J;,kV.2"t_f@LMRAD0'*rRrFYdT"'R(W:(Wmn:Mpj&jK,VuM`;n8<K8&qlASXY4%
%Eu8U#,gE#.OeTtYfh0\$hMH,*ITH&Qh0JEJDao9Rk^0a!.E8EmmPm.D7'PKaDVBi%i9Hbs]#rST<Ek;`]qUdLJ))A<\)6D4[7]$r
%@pLF?%))731tGLlD<lruV"GLN9bpE>RlPneJpWO.NBP3=Yun*&"))^+V9)1s7qOYNLJ^YFF`5J>F^pm69sEE?jZ41C*gDY6qCFjI
%!e7Pm3ZG3e3#pY$8e:?@5g8XV)!JLV6Q^k>.+j`<pXf!hJ;8%7dOuZ8_C9$Z\8u6]]:ZOJnl+l0mUl=hNKpF\j^>pHrS*?^=+6mU
%GKYMM-+/0]!;-Y"c#usnZ#9Ng)S#(>G%^J@@gdiO?bC7G<\4X9^eN\@fR-9$VSG$blW_Wc`o#cL^,s5sDA'"o;CCRjibDH7b&X4G
%Lh'nE>b/B&7'6oWCV\1#3FJW7mOE?la]p,HZFA--E=.1Lpp$gge-aOf;;IYAZI@4V<QK+e(u>XGb*,'+Y*\aOQV>O$kZok)aqre^
%q'1*sS9ZhW4+;ce0BYJO7>$*^Y*WDH,@Li?0Xl-sm/pdO7XuXdKoK/!_.;P8A`4$tB55:2Op70Tds5kqLA-c78-=('rFGI!Bb6^-
%U_:L#Y4n3;:F6`5K(Bi)UH"=p4Hf;<cD(\*BH>KGIa;LbNTt,Acf7&U<j\fp7X#p2H'd92K]b(]8(kmb/<j^F^E!Nf6m(g>]K#Y>
%A]Y6%CI]K>H/.#6T>uC%rHT47H2NrbVTZb+"nr1cB1\J%_%DhE=V-u\Cuf#jLfGe1UnFt-:["Im&9*!LZ:+-Zg(kKg@2TmW5Mu4`
%^12%`Wqtfg!eb)$*Zi-7'_5T"mGIBDO*9eA<u0nBa0!r8G6diUlak?ZFi?m-pEKrZ!DjAd1]6R!ZW?9.>[*NWadi7TSbidaj45W:
%PFItWB=]udqYb[%dhHiq@rJ81_<W5_$<4*]g>Pe/2lauCkKTO1>F<XRfi5%Brc`4-WGf5Zh$ld0H+o[gDjSKC;oLMHY;pn%I((=J
%PeNcYPMV'D+S!S?.U,Eb+SS`6eX=Cc^>&L-lhdf&\A%"BE&#cD0<G%d;#3r6fP9$8FlNP\aS+HP\(eXSl&9JTcL:Q'Ok&JPld>*H
%c>U:B=4aM?mV4diQcLkb.':Km7<(hg#)!:[i\)=P'^[>qj^MWn@r=XCBPPrb3*10fIeg7[XB\_9jZPG'&)YVcA_1JIKT;X!&t!%@
%\nQ@]:KGhV$TZINe!>k)6qn]CW%1U3PbiafNqSc0RMZBI/?MFk<j:RhHZj=Olm=R*CrFd*9rpF!:S?`2OQ1eA*)@T2R"0sW^2r-u
%Heo3YhT'q:EEj*0^),QumCD$TmLhe<=-3#:!7+`W;r7h!d`%^:*!2A\Q(J*E\$())WZj&\PhamM>\:G+8sf,'k7%*k*;@L7VIHA>
%P^L9Lb@a(Ng<dIWnFe>/gPkkEg7GA)kIUGPQH``h[^T-mb?<_Dpj+0''@aC?,VSKks+)qF3>HAY)Oh#j/.jCCX]79G+RAnjlZ>W@
%VGP=PMMH&n6^NUQbJ_$ec+P59+qqCtm_+14jZN=C!n7F5DE&:\&,L2-j-#)fh.H6]<o;Tfg@hqgZo@Wl7tC0E+*Rt$m+,k&=NY2*
%h/^QrRDuiU]">KDkp=FA#i[dI"1R@d1H#/?^m1H+?["C;/=aXrVC1e@MB,A0ZU%@AZS[e2H3Pi<pDppj`I/XY,r27/Ajt&A*6dPI
%!Qm2F$j)[P1I1aRTR6u0q,o%.bJ\%]pad(sPDOcpJF[((4hnX&<H4LEnbtQ0CZ>*Phs`p85D(VXL_p@Wj+gsn9-2Da_V$B*')mV_
%38tE_'PpGE)skiAIo+mTMo=Fn]aq^0dcB9JdL1>H+*.144S`l,hM5@mT,a&#OaD+Ser?\E8Vmb%M\dD_0)XgKM:<o_gNu]*s7rR*
%Df5Sm[t"D<l(9]Z2ZNc8JUPPR5%@um0sJt@fOkWZ1C!Oj"8e%.IJ.MBiuOb'ij2=+QANp)fVcU%Uugq"^3]UolXqm.4F?nkc[S-j
%lLSp85Pjbkr*@\,IIZCCS(lOJ`J`XRnElEhHM%UTI/iNXq/fWTn(C8[?cB[r>tjXcM7i1AG#p\U-P^QIXoJ4W?guqpoH.,*\GP;n
%p##eAr;D+<lX-G,G/)`/j8W;+h`U%$^ZUn*rE9*E],,.po>'1c2pLC-I_E;64jD`N]YsjKrUoJ8a(J3*4F?blam6_0I\GM[r;HWF
%X67*e?N8//kj-\Vcec<\rUp03dm$JaIf5%7cYpStrU&&m5MQ,WY4ur1^[^jojTiKB;8<$QI7NkX*!BbS>'AO+h+'3rXGF0TFO[M9
%9n.PbpXjY!%.u)$-1>(E="2a9]bJU(-t/qiJ</#<R;c488nFQ3=!EFJi3$<uHAWBRIeQgF>bn,mATJ8(atc]Qc:a<9\Phe/?"im<
%Pta=Vo2TKJm1-W?c#/YJbO&j^e0HE-/"+Od>2kfpL6n3R<C:ZP'!B.XnTq1uK.ESTm9@49*T;4:+g0fK^M`![MIjEs;,9hd!Rn+F
%X!$9@%Lk:K>m&,Cp&$bS<bo;S+NAobY=d?U>qMFrNAn&8s)p9CG=5[OY/%HOX#RH(I\"5GU6BaX?=f0]N7)8lA2M)SQTf4e=`b)k
%I*K3G@E#Dj>"&nZ2#6?(IP&$Q/f&/_f8^5G^rm\hlf:'#^00;Kj"u$+Go`%3LpYoAG@,&CHg-upc!L;N3D\LIWKAEin]!jU5QjWu
%9T8\n7gLEQnpPQP<K%ZRJ:QSrMnGgd,21F\7YeK"ahr)<L:U^U@N".*7D&mi@hC"</RDc0=`4Q;Ea$iVn/$?S]%LS28kVS6[Q"Uq
%E3$AmqJg5^&e3^)=YH&&=s0VWOYK*o=mYi:qq*QE,'#G5cs5WPGG2AodCYDlli[9Y9#-,ano!&NX7UOBNtb`[p]-RgFIdfPom2ma
%/CpR&o*17lZHf\N\Lcc;6+%@V7ja*XDnV`9gPG2LZMa+.YIY@=/OS7*\5UuA.>VpZaL4cE\Qa*aM9H;%U'2"2N<WP-qj0ejb)Eb5
%r>),$3KJsk/)ThMbYdhRhjQq_m4'"*juC,uJprtFOWh+&:9F)Z1;OU[RJh#)8`*(*bHu.n,S:!Afd66nWMJR_^^[NRJX!3B-3=0D
%+-N?":b#L<kpZ?A0.KEf=B^9n8@-&Do)jW$-frL:"?n!9Uf\O>6piluj'8a===,d?\5WZ3%$7MYFHCRllg/^@@K;O6U-tl=W7%+)
%C/0(>M-/[L!]?4LLb47nOC(F`oiAA]oICsMK1k=6$O=bP3Y9J%,bcQ-OSJ(e\j9McW?3W[90,uU>84$g4JH\lY`%^Z9WoX<,N]cL
%WQ-OSLIuWJ:7GaWhkNW+NN-`;$/-Ra6-j7OSthYKB%+q]JcTjpn.hKog#>8ZVNNA-dP\gQd?r;Uns:!aAYLNaoL4if["7"_/QGcY
%IMk-%oL/Kb0fS2^%.PP?/e:T,Ha_!Fe@<G]/AJJ`@4R&36Wc&X4X^eTjl3.E-C;kqJ75;Z.K*/T6=*SYn-[7V%^-J]in0eW`42/t
%%Bs66V92E_YKWjiY`SG(,"%)uN0EL,RL"koV@9,f]b@.VZj/Qf<\WacK^":I`$lS@T-0T)^Dr[m"A^AS89`HO"?]XeP&L%j/5^)C
%n*<k'h]qj%4<obN_&WX/Ll0g*/B-ha,=(SRd2BXBDO82B!LH9g\Fb=D[TLlHN/VmU7f@&9<2<de=QC?rne#=JbKMCPLP.1a4g[JN
%M\<BIAVemD!aN7Q^OsT1>:LC/[&@#k((o[mF0J>8!".kaUVJKk[EI`#%`@N%AAXS2BP@s:]Ldh`e)"Sm%&ZVu^O/WD/F,<Y(lXUo
%D'+ic0(+CK7$7aW[MD_LUZ5mjMd>_;A'SBn+2LU&oLjhta=.LU(bZ5)WC--kIY,H/Y`Gfs4Ba4dD-f%m$hu?"$[Gd:(9F[p+@-O]
%(un#0q2EuPi[bV`dK1/N[Hlm^N@fT^\hJu.-LAp2k!f3T*BI+?Q?b8@NhD%A4=p$%IOqXr07?ROhRDbW8Lq_j=`U1;D5CI>5\hRg
%o(L@U?.ZT^91rBUj4^DcS[>1:?XV#*@^\R!AF5W37JoR<J;dpPbf"]KfI:\f#A+hdOeE*B%59ge[Z+@GNmV1"gYlHF#-rE^X'o7:
%3VUqc3\<(\9B:dNAb]"2)p!)ZAQ@te=ISj@':TdC3JT=#@+WQaM,oE1&TmQ]/E3!<\tP9qA>!'Q0J#_d[0:/%N1O,e]i+jaD.GYf
%Ds*S1[Oe.r-)R05WYqH%@m@4td>]pTdPW"u$AC.j^W<p\jD"@b;UFFR%bD5T,s3RE]h#I\-&#BD'<b]5+[[l'LFp%`4;F<uFCih)
%=q;*t\.#:hI:[-j%Nfa.&p^iS*<lX3(4=n7k8,%Goo7O<=O<OnX=r+?:g((9Mln%7%kf)P9KA+MAt$fJ)Z-8Y7H\0nAY>LUX,'2D
%FI<T?XJTG:M0q<AcsTg?)Tu/rCmE,%dgF[)U/P1T:g-8^<6c(18SZl-E/J0dN[cO*eS(pa9-LM8]'u'I&^j!mI6=n%lAAmab=^oj
%%'c6Wfr7",<U\t"kW2[&4>D(P<L-df\Wee]`04(b9QG$=S0XN"k]8a;k=0Yc3j#Z`VS%4HV7/@]oI'p2(\uJp;5n@d_3UCkq!R^o
%R.s+>Mj%9[@5d(FU;2ra2#^dDc3Mb/Fr>*J>5/qLQoR:Rq.AMZU]:Nlc08kBn+rm)2GbF?78s,I/(u8s+Joej$I%SPeY.j3XDV>6
%+gY<g6]l8$;(TgdQEK*'BSN+r[k&u_M6Q4)l*=c$$b_/qLT$4.ctll5niM,g-uu$D5qZ/AK#?R_iE87ojZMQD)LYsF?L[E^^snut
%C`*/'=?a,#TmUHK:F!b3LRST4NV3fthn*2Z0Dt#1n;Eq<*':XPUZ9[DJ,eW"f?[cP]DLiAJ,T$(%kiD3lHL!4Hk'C4MH2uu)\"(W
%4BWJa!XoWLm08\L&XLB2cO:JGY8E<sSh_q?<F)'JYk,es'$!^8,=/TNa=iWD)9>-c!!DM#8*/C2RP[(j>^/5-Ihh8hlj]@"@cB?3
%;R%#?SV%>4ib;IpU4Ljun7'4TC8t\G$b7kCZMi'EhkgA7+$SrF2P:[al<KTueL:lp/>UBlfre?@/qtTZ&?>Aa3`b`/?M(WiAO8@Y
%#d@.PbLO.uX/Y`2D-/e21k/k+A\"k%'1H0C%)jA.1s*V2-3A&gE>Q09fa$Une=+H40HBVL%%`RcEI_Id'KE'g_B.L?M0=RTL$bQq
%Z*$B:Ll!.="jS(B7(5)<=t7uOnE%Z814c7511*J]c"u0GY9?qD(EN8g"m[/b`MGuofMf*W:fm]ANY[-VIe\\7L)2.*6j$5Sh@(m<
%!X[e]GUhVV@QlBI<h@$3Q1&Sf0_kit;/K/d=$O)OeB+n\f>uMOCeOW-ABZYD\1Gq(.ReIMP+WNZjI"Wd3IAeZMRB8V8dnre!nL[+
%/'KC,"BJr5Sk_SbJo.3p2b`ASXu[=(PP5nX?qBGAG]C_A$l@P%Zn+?[d$BI@%4Y(]]h5KG[;Gsf@B@j^8c$e&Uf1Gb>\%AH$V'bX
%?us+mJJO:V5`6IFOY&h%d#cE6FD,jeeThQ1guBdjHiepA>/Zbj[9njm6s4d!lH_sTAajH+e:6!"dP7.:?%X`)>omSQ+kG55g,VD8
%`HY-mQW8<65a*6lGqf+`GE0WF2aXpc=LSPam*Hr?<1[:OfS]Y&@pa?[k-aDbRBOS)Unpuj.XTB5=leP#GUS-i<?9;f+F^dV9CF6U
%LPH6_Ar%7M=4U#i4cCYn,[+kPfVJmh#L<sp.cWpT/&8#J$`6>aXkt/WBhFT*"k1+N*1N_5ar!\TaCO;SUcO$#i]6hj5Zn,$7l20d
%#!7Cl/h3IYL@r-F'4Qa&<BMZ$EMJ\)"&WQ2gkk*bV9*+gHOElL/7dU)6P44%dID0SAC\k3fsF]ih@I[Fc(`(&L7U7IVMR'i=Y6rk
%"qgs=[DApfN%3\[T9bV;=mS=hC>e]ph6*m%hMW>T'BDi7pIm)0'XJ3tiC=[8_9&(m(#<0f)8LYW&CY-IK-$,?\h'*u.3q9T`39sI
%K]CKj$o1'OAu:rIi\ZIC=.-.JI2%ntQ=%"lY=*#jM$JOY;nfNJF?gh''*tY_)YmM"X=25K?56XW\B0\`2qobMKLtjb7aiMX3lEJ6
%aUGBghP32!CiL>8;,7=@n[;mqpP6Ts&66rRk(*JGMtj(h<d',gN(X2+A!h!J!'^(FHj#C<pnAA?Dtgl^>r(S7<2=iP%]ZlNN%/e`
%WZ"5POEeBtlOb_NnTN>#M(q<B@@m_1'L[iB;-*=l][WZNS=H+\l^=EAi+RFg75D_Or%2A]e<LSaN`U7O>qd*=.8Z8A!S_(^F*L*h
%.X[2%/N);;-#]@[e9Sn)U':;sn2O:Qno(]3T$1k*g?h4FA)ZBab%HY3JKLGmb(r&Yf])FpBFuWBVOAo)q)o<0^fiL=,Fp!FbD;);
%0RCF#i?F:=c#8_K"\rVhcI-'5aFt!^JGErY7Y4oA=BANmkY53/$mJ0YLe]83qF%T7F%Y8e^cDrI+CX!PBrSIZ9jG['"4gSb8@L-u
%T3t*#fV?g55l7r8dE3#i_.LEi#"N`&Hr.R^mj0bV?8L;&&\B0_S6UOlh@>)^R?t)HmJ7X?PR'$elr2l^oTlDM9/+&d)'LSR-=_WB
%EPp/J%"O5R[IJPXF$a'/)I7p'Mkr]D7WDA.=^fs:17K!V.uVM"U7.#na9PS--TXRg?0;Khg0W*Ls"5Mu?G6LB8=1g0A%?P+3XpUN
%@o8e2QbmkJ&e!22*cD)c9</Nf2[g-MQfUA<.`la")0b>c>#l4H6St!"=5utQKT-0HA.nu9FLf&N8JkVgjoeZe/JW=mgas(j<Q$*!
%,)9-a7A3MHeR$'U]M%=@/Q!)f7\LB:;<_>#O7sF_f\"&;!\fXl%N^r<*XNk::L$]c%*u]j4q)$-XA?9$-&Tih0_]j,l[T&6TG,M"
%JS8.^dM!54"]/mL!&cj."V]uR4lA(`oTLL6!A0Tmf/+@EL"*&f%XiU7.4uOU'/de[6nC4AkbY6Sd+9FcIt^auJt6t%*k"C)pki2S
%=MU"5NW<-!#R(tci&/<ijBL]H/CRgf4qoW8Z%r[EbZZiZd5.qXp5u=!EpS\)0h2cl"3b=_Q]q7<$\4'D9O]^nOissoN`%\ga#X76
%;*,4@7tmZR(Q607@jfZ0PEq)F"s`3V/qq,"^kkLG7J6mB*MWIHZS'<dE#jT6=H)GDJ.R)a)O;`ECK5r>k[6f:B7dNBNGicDSJDAP
%>p>_6mZ7,u$peS=B2C.D,q+p.I4aL/%;AA%-on(9LqtTS+iZ*pBi(c7`aPq]Q;i-NOgV\;mn8CnLM/>($aDY0k[Ip=j@$Wqnr>R%
%]tPqS)TI-bPsm/Xd?PW6JRG>O9=7.$[X'W8"<eHO`GcRPrgZd4&cm4e3%*,&.S057J05Vd@UP+_CX=d:n.Qui0^B4^pD\9J+j*[t
%;KO38@\f(jbo2R6_o]@D_!XkBj3X1?-h,hI6H8d$U=\Q.^q9(GNrZ4rmggSXn'OB\bX,#!(Yu_>UFo@VLpnb+PRq3@9HGd[(;s-e
%l_QL,EfV_Z%7(6)"k]9FX!/:t/k$V0VI0r0lSIH/Mhj*TbP.rWX[`b*(i-q\;@HIaZJV:j(/1Ln*d>?kds(-4@&+=CgD389M[3'i
%;UVl75%9Lb*Ocom*Q<tL#n&cZ`"Z-B#h_1Jd3-:U*VuM"2A'+3\<2Dh!d1ZV2m@d"p=,fO'1jN?2bbiBL?O8kdThIa4urJB&Jh=(
%6,H=RDk]6<a_-:s'Ird`_#fV#W%(0S%&C[`/J41@>);G,V1H1'WY8#:2^U7gMNo8<(brsF,t3WO)KA&b%KDC^91/UdL)O@RUA5iT
%RjcCika>bnYRb%sgZfnNCXDgoc:KT]fc><=@Ksp&LbQnX(C.uS.3q:/2Q)8;=aZD)dfT7VhF!KEKpg/D0F2rSAM+FN_TR.Be[4Xm
%`>2aBA4#O+RPR@dhp`gpUG7d00fJ-G`+rac#JDUU=8J>)3`rKQ,DI9A]8h=b1c&'Q?oqoQ%^KD^_>CM7E-1L&!gEs#-@f@TFU3OA
%jr,C#a:lIaXm%G,'8s>YPDi%="QW$(N(YrBHN`jWb[4m;X]]#L3hZEf""M[7^`1mk8H0FX0i_9oYqN\c(OMmn1=J)cV?/<2J1bf!
%Ra:J;@mM.W6;^C"JG<(r#nFGi1sT:1lllM7?Zdl:@@TY"JCMrh#]MSWMsQWU".IT?F>!YJXc#cfB/6_\PSHT:5oKstA2FT!=T#+#
%MMX^QYZ_0aBp=E.>M^B:A)+)MiH-l2#egR,1`8$b,7BK3\9jejX+7\/*1<%<TEWRJ$tLX+Ls6laU>sKP0f3a..>+$;-a=oBI&P)t
%G_g6\HoWnlK;L[RWs.sa(,ufP,#`m%00H)*M'tr>-;<]I+tb"hBB[%#bk@'k?5E6S1:^m;%9`q@lcbu_#oU?t$6'%PLYO=<UCe):
%9f[dE><Hb3;b3WC<^88\5jG`p\eo4L`aU[P1cYQ\BF#l_&b<;]3b$+g6sqk@-f>%]rIsdR&@ju>64AKj"1^bF+.G9bR:mPR+LIe=
%2%T-fTB\9e6W@[bWY_eea9\eWq))B^`T)?MrmefL[%M676V0^6]s)R60YsPk;UOEo\<J"+.LP1.Q$J!ZQJ"[a"L15s-jtF.VG:Ua
%i%DZ;c$dae1bYiG$=qh(kA(0N+#k7C%;63=_j*5A=]9Ac'*kP+Jti95^>M7T#%8J]2\[?r!Aq\:bV07jTc3n8(dSN75SiquZ`S%>
%]2M(l]`LHtSC97Qps,\YSI&oEU4SG5&;n9<(&CJ*A[8'PdJ9(Z)#Uc,Od_EX#pDZN(#U8.6*Xh8JO^)WBP>J+(i?@)_W%6ulQp-Z
%O>ge&+Z%Yk(l;Qr_FHH:Sr&JkC4k*e35X9gFoY]VRa+a*/eN_(b#D:[/3[HR$aC$eF;hBnFN+9Rq&Qc^!2).HPaEUF(pk^0M:FnU
%K<TOm#U@o`L#HP&2^;XsO;ng[Ul]Q/Z,KMG>4e9]^g&'MAi4@^aG))Kd?KM,A>Y3+,D5<4e$iY^k`L+C"W^qco.Vq]#h/:k8QR(*
%Q^A6`:W`^*E)-)5a.gr7=Sf^_Wu+$.Fn2t76!?++#4G1Y'eN[-a3)^R0/U_"05+InSEAltW*sFO_Og8(gBueobmRg5'T!5K%<,Wk
%+Q?W;NEHtiX*V+NhY]'G(<9j;'(UF'cKB"X`aAC/GT-KVScq.\&#EFLrq0D98ol3^%DrX5:aAS_1n>6fI>,Q9.&pgb&6M7l)bJ#C
%-IqJf.`nbC+Aaq.c]FH-1k7nUp,/#8!&l>Vm?'=MK:3?JAYr(#YWO(Y'5<$=8b$YbM+Hl%Re2ak>!`-c&;A#t-ohi;Q-#q%a`P2G
%oM'Eu^#ikA7WqGU'@i&])@>2bZ$5u;LB2]50L<Dd<X0a\Q&6Id9>J,flu0?ePsQ5i`bUA5dWWM`!BEr_.^DK'#FH$<;1TehRLhQf
%'VI%n#)QReD:J2Q#5`gM<X?gR$OY7!F9.Qn(/('(-I>g7J^\^LUkHM`@IIpuLPS7X8@sQ_Ot0BG&n!Sci>>;b+]M.?6+k"[OMp3a
%/;9$Cad=AO?qUt:XeJ?1+fT@1%uW<]%7IM=dt_YY&2`MTi`jCM/6Ut_(:uZF#-!)8UNB(/)sDOfJ_*ROClfg$KXXWFRUY&,A`a/+
%JLBM*,)VH5S5:J3+E-PG0'52M#oTBDH4;Gspl!))U0aiOLc[..IH5^02$3T>190n#Me.uYQMKBU14]"\&WDHb6Am0%#%WA%==ASa
%#=#gpkXML@fP'8]iX)OiE'7nQLc:7m3XS&c6&/_Q941Vd;J/1bW[Bj01J,BR3?^))F-#/;]@>tob!Q.m+X!-%O@@<@Js#!AN*Z%q
%&sD-cgHe&[VVN[LS2KP$>fF9HWa\C&lm(>:?7!g]\EGWaq4q;WBQEAr[X+E?Rq&/76rX5<3m>N-*tcl!=0s?mL-'KV*5N*V#!E3'
%lH-mL`tbS#BP7q[,R:4>Rq04J+p\uA_h1H'VLuWi)C5=;m=,r3OjW2^bjPud6$m=E$gBec_ABm=olJ+C?4\pE^.atjSP]grjesD"
%bAk`X`175YASCO$=%>.@Oci>SaMC\RgQWEf:V5_b]oMaRRQW7)f]\bMXoqj_F`Ka\%_rYaXlbNF9DHFTBVKFU^3@?ads(*3@&+=C
%gK?G_,$dY,8=X!5,8H:$KX_X7/-HZh^eGfKcLELcAMu@OVP2"3eTAle)FF&D%.Zq77N<3_'dJ8C=hOt@S]_oA9QD#U;rk:&U\%YR
%&OBpZPmOf_aZX.i:"NFaf=Bt3mp%`Xh'3+ifGc=L*-'<#[9Vse($:ORU4MoU.9-GDWR1gD7gi?H6rW4;4`(kYTP]6r-\s1B5m;uk
%.g$i+=Zf$pe/r6'2'&uJIDE#[9PI%4bG%EP-1W]`aOlZRbY;5F)I"43;$[NU('5PSR01aG4BN2l?+MF@`OqP/=AbbL),CGPKbg)3
%StDI+Gr1[Jd3fZ@5MhDc#s/[>^0gQbA$$]=5u,=aZ&o$ZjY_B0o"u*AdaT:U,[8+`n>P&64o^ZIV"nE3W"<Z/!N?^Id#$K7K1]_X
%6$?k>^d2VV8@DtSn:Gij7,%dL>d4)d)R)RKo8L^G)/-:.RAr51?R;H8ciQ:d/Q`;*JjO%W0Q5&cbo3AMd/kG(&M4MBNWomLB%XE,
%,Or5qj/MTm#RH;:XnElf&[h.+#Rf;(Eb;Vre=kWjgsDeU,ARF"JHk6aTOFt?67.rZ04Er"bogRIB5KnkU3/L:K?CipSs=qECAL4%
%3PuXuKS[$]T#*4tIs?KM>N)DK^pVCN(OInn4Vj\4>Z;4Y0+SJ!_8j>K9U8/[(r3(+(*Wg0F5`BTZ0q,r1_Tua$qb8H=NSeU=gZsX
%U_I^&@gc5dm)hZ%)m+g&Y@oVhc^&3W4e<A,6:QfX][;=g9Eem[*a?uY)7<JHkMa3LWC]lrFWFAo1@0HPKC=D:?\,K(Q?<Nr>.^3I
%#tAMpY!#Ti4G11aBOSK`cW91AQ[76-M*b,K&bj_.W7;3!$h5M^o5!&@Hmi6VE5#16Ke-&J!+Rt3\-ZJ'WR=Ed-rPDp&t6/YB$G*e
%VJlO>0OH;uZ%<a7Y?o>.\#fBoKM=185XW<i+dP>sd/cj`+I<65caa0C/aJ7p@:HYaE,26h9gL52ir%YJ`UV$_C3Z/XBF1<DRAbRF
%8.d<mq=B+rOeKjh*7Q,EBb8'I?6#a)G[D4],CaU,lbf9G/k7-"><0ZZP5q>S@Y)+'dO!B=nd&hf/Vg@Be0m%XBI^f%d$H)H7<;ol
%>WOIU-d\iNEM[b#`=Dl3S>Y=/UQl^8-!D?->XeEQ9N`Y%(7UVGTV[r4<4CIq.,UC0mSs8iXRrW/%Gd(N!ADMJ&&<]>A%+#ZERKHB
%`I\,W"92-FWY_DlAHf"UN"detON"r,j1V>B6^*;E&qoX=9A`&,P*;a%"-hpM,?,sUXR\$QA>EnlV%@4Fp=aXSTG\W0"XssBX\0_M
%!6lX'e<Sc30boNMC-a+L/;bVCAnhJA]`M^(9c*be'ajEHS;/3`M9sB>$;ETVN-4X]S&]?"rNPc*]Z!G)8<us]T\"dMC`2D+6Y.GQ
%O@M^udDD@P!G4D-\$Hs_%`hd`6#Ig$aTRGhOn$5%Z-q%8N`68#n-f\Ooq(XRHk#(Vg>si\KaY/K698dndsM4Y^q#DU)=)=D.;"of
%9d+nQ<"3N?%?*1J`i'`?f"2ouEs]-ZX/;jNbmZIK!Iu,3'&ro7G'8cFW<677!crlA?-JIC_*i6.$Y,#9"4J1O4RIAR4auoG9]ubX
%ZI]-2+u7/ZMN3=)WNMR#&E1D_VTWOnT0u&Gj,J%\16t!cIXLG/2*oZZ>4aIN)_c\+rh;]4VM_#VS"P!^PlVeKFDmjRbA73!c&*>o
%g@(0RalIT].o8j_<n5804Y22*.At4D(fS7P#c-S_/]i%"Fb)"XQA(W9:h3;hiTc'^I6_o\J`t77_SM?g%psmd+[?0BBHg>EM,6_C
%%E*M$;Qd@33<bP-^J$rp`&hZZi`hLQC>mI:H3;FW@j$;\Z1:S[K2u_Ue#BRk0K[ObXGW:(@aLMt"O.h])AS[5"ct]Z^,5d"]<hVH
%dWO;>/8!S/N#.9khMf8Pce?NM:UQi=AMhm)7Lp&<6Dj)NHc!?H.6du1)<NAZ>O_,$c&KRAL:g?u\]\*a;+4%YKr%%ng-Y<`e_+Zp
%q8X!BZc^,5I:6Zrg.DW6)m+gS2d1T47AhRtLkklEaTQ9%d5ip]"^%0r(26UW3;U<4L7[WnZ;Ol$%nP"N!:2.i155rW(6.Zh`-WHJ
%@RN`hoHol:9G3j3i&\Xj^k[Lm!3`fMR#uRQM'"OqfNTM>?F8^#,T/77C=':nF(nfC7P/FW?j^REZPF3\o\HN*#ur44'S-uU3;R73
%C3u%[Nljhun7><](g@+=NL7@jKJOd]BoioYRU-FaJ2KNGl0;FAOVKB4"O&MM%1/>CI0U@/(FW/mPnRkXs-+goQd]Y=04Go.oKH91
%*)dkt@-@q!d?sN`Ag/CMO`XW[nM_HThD[-;@+*Kbj^^ZY'1mWAA@'R!`1=c$N<<UfCA,Nff5NXL+kl\SB/nBmC7P?7qnp%t'Rb`*
%E%/Z'?6'pROPT?mQ[\d+I2gW,rcc!KAf"R<IeEZk^VBa8p;rfYDn_MflrKHKr6:F<0>B]`qX1Oo^\VTk48naCWuo&;IsTlJoOkd#
%r_NIb!k$L(<oK`aSVea0p$c=%CS9"@Qoi0*pBn=IfQ^>TJ5Qu+WKUdV<kJj9$tk)6/V8bg>'?WsGo%_?,IC@;7[lAITo]Whbtq$s
%[%>+MS3`,]E\?RP#3@UD7d10+h3^f4W)5E)"0]iGrM,s;ZAS;hV]g)6O&7fnGW5=&a.leP`31:B"_p=RbPsF7O>/;L.3S[T)Y0,e
%XKD'L0Z0"HW](Qmd2%_.g[c>.E*0ELfCd`^P4%<dDpO&-UI@nqf5F#K.N3'cf2XCOASY7HS&t:V>lZ'sV>UdG<-/*]$DRVBbVXUr
%ZNYKX0pRm!23PNOZmk$oO6S&YIhLd-mL*/=fZ0qs?s4NWggQ@3IELbcB"H@$7Z/T>"UbC3\:DuG0n"s6-gi8"][IeZ%*/k]mE>i*
%?E<Mq)/=2Oj]H=)/WA8E6Np.3B[PIu[&hXe!egV^R(ktT,nsYYdDA;"J6eSZ9k<5Z%UB,%dXV`s7c9"f7okk71%VI=JchGr`ECVk
%Upla+%77?9F73cUZ(M2%4K+[p?:T]q7=#E%IO*%0Ka]>`/nglP7\4lX'tUj+Bk2.]Q>]O&X0H3R/-u33'WbU_p&r$G?ri3fUI'Y(
%?I+k-7;G,'m5<)fV!'BQm=I&hY3QfG1aGZXm.L>N9p8iSdN#Ak"4URX^BsW77Ri3"Z]Pon4BS-;DHog6d^,s+5q"u9f'QTJ0t#aJ
%]0nW;3IOY^Cb>QM$e@B`%8>/<!^l6qngmFEeV(-kU2kKL2$QDn/t80"L6fOoS"%tA0[Yku7o#pjq*h5He?&,qU6hT:(4(6h&`G=a
%/8p9c]X9&I>/[RsDoN1hZR^=)C'7%uDc(gE@ob38qpHN@>0Nt!&#7Z493-;-?;6@#a2U(R086#'?;>5[`qJ@&'!bJB>^FXH#qhCl
%gTWjM/K&^pL617n!:&_jkNK%EHftJM2&c#rMMQh58ZOsMLkka-Ga1Z:,%X!"kVgMTA8-'f!=cW=U@k1(!mA+U'+a_Pf,@ER:PhB$
%1nG1:79bY8C=D-1M^E6Vb=K$6U$/fIFnT'u)G"Gr->Ecb0O%F5!pB`\UE3qo0Ug'P`gHt].$>@lWUjpN?+">Tbu?\qb7Tup$l-Wm
%Bcrj0$P<ae0%T#M<MgZ,l=Bh`&.*$p!Q9M:/;HZh^.^-e,_.X&57W^4jq[[G23#%eQGJ*qLBW*]MHP<[>%FG9H:NnIJU^n[:0`(6
%;Uhu@8Y%^/d:%3L,7>Z<1q4*>rLoWm(HO,k7<BLF/hfj67!;_TLm2h1J:,g>k2mA9,<CZBnjH;+kQF.R>jZ'''b3mtb"H>;e1>iD
%m\4-cTR^$/PaNJmi#uW74u0*G^lf2TajSf=b[$!/IZO`?7;K?QY))i[FE(l37F53SUo*<7C+4aHScMYV>3EC-b),WXI%DbbCADgp
%);e&N7U]KVDS.mc#4V$Df?%"W%8TJA?m`.DQrd,H0BD*1_2JPf$T)4ZLodL7n-:)L(hQEK5-tSK(9(C?"WXPZduI'F`"GY'E&*P2
%"gng5,VT!9%1JB`>8>&kZ]uR9<gV"VVQ>\4c=fbS@p-,WS/k.nU2qgd#tU;r4WNag-3Zr2(qG<\;nG[=Y[S>85cZM5?uI9MR>Y6+
%K_/Y<!)iosXe3'RM?uPk@%sBHeh1r?G[J]$"]/je6\XH05cPlX@JC\dQ@UM9-7s,B\Oq#h5k2j1`s,?PA;r[2lbG"^b9..M/2p(4
%(4e(lZS=kf#&6,Z(kG()9I6t=jCNm79Y/M9P6I?NW!I4qc,XkS^b&NUQ;W(XK8S)0M_]ckH'7i##-Z;$Ec<cXEt2=LMFE*"LGVBJ
%A_;$de@dG!3C2PVAASE')`:>tH'3<+Up*thh&(CWnFR4G5;8sc8eU#O^2W(50jA+<LD1L>6g9<Ce\gh<9\58OrMC4pG\O&#jh.A-
%;MMJ0>+4**D[/r?766[oWWZ=6VaQ4U6(nu!#$Q=+CV><hDjZKSR0DKMP\=dBM"oJs+]R/]80pO&_JI,aWDo"VA<(mH.BB*KM8pd$
%MK5'!I+SAk88Ul4Q+Xl94TYmoff]i=5U6S'7"'k==]r5R.9nrb&.E(n]a]1>DTn'`P@O[XeTKMsa<hJc%&;3!D1r5-i1/eY=q-KY
%JM?3Hi^k]sG"EA"J8[./(LSjN[*ASnRVH2'q4g7<IbBib0e/"#BiD**hJB_kj)KU4SH12L$Tfm\RT\>-:DpD&Se=%%jNC(K`5G>/
%Aq81%-Amsh"<K8,8peqc0I<I8?M+HSoJ0)2<%@?]k3kW*5.EY6TeDd=Yi@F>?Z`@$!GjDqF'4?a,H#*0O?D*TbA7r]cuL"S)3+p>
%%iZK$<:KLb^hP09NTkSuHd\odL7%T:=Nf,spnG$`?&;F0@#kPc!U1<Y(!]&5ds'p2Zm+qu;jj9f(WRf=U1AUC[^6nE)LVBT/"(B1
%(p!/G5n"?-0]BC)Ke/Fb-B[(MF40>=C"3u3"D32hYugOWBq_6PRX6a_[@i3aaNe@1,o_+KVRm'6OKY*49!;c1aJ9lS/:nh&/L^%@
%;(EE\"Z#iUXS/Gn"VM/#l-/u>/"sa'`-,p4=VGO4rDr\*+_f`(5#Yr@,P2&e+7oK"(HGF@^s=gVl_NT&;"_B!fkbODQHEerZ))NE
%TU?Nb/=,\;Wu*'N$B&9p"7rT@%TXQXQ[4B@aPY"-H[3.5i4Pg<QdcflIZ;bU<3SnK-tO:.Ho>:TJ-;IclUqK:!"ZI?k:J0A0cHGO
%UIg3ZN+2SH/Cf96o1n6mAjfh64>?i/AS`5<QHrTEa_#c'Sl#R!'kDjG#"NB8OJB]`d'ot1Egj27k:NX"6;)9U`ZqjDNO8(90:C1.
%+q7l+;FJd0@DQ-rljVaP2PhE=!S2KFa]VcQjJWi\:07eG`qLNEgju%h/t0/hi1#a#eZ"0:ncgOgU)to!2fL0J4XVAOeCeQ&d$#!-
%oMo">e1hJ5HMaM)HG]"s&-db$Mie3d+duR-5U$TslQHj8acFgcWG9!eJI*TrqS>^YAep1)IL'nVQrdC<T<?DnbISORMmEi9,?VW*
%1WMX3/K2;laV4I4Unqgh$X*fERXG6l,d5JP\4)iXWE<.^nQY>SMP4!S`MKG*4f$UPdScgIYbDI:P1i:f&8eNS8!MCEEg7Cl;SY(&
%V*o#A.59/T:>qea7Lipm]-9;U^<l6CVCeSZ5[o25^+;!`bDLr=eZ^8a/YItj+>b[@SYJsXPA"R.&Xl?C3]Xb'C3]fA7aPg<jnnO?
%YG#D]8IW[na2fa#:a;cG^S6FMRB@3N=YD@1RfmDYoQ-B_FA,g[Junqn4((T+BJd%:QRT&<N!!1;coFB\ejWV(>7pAi'&f=Q]o3`T
%560YQD&cI9Jqm+)TJIUU$1]o-q$DFH,m(!cb.9t/L1/&o/3JQ0Pkf;kJ3u4heO(lIW3%QeE2[12$(dGkJ:MC8l2s_H/t2`j0a/s&
%=5BSpk()F=abcC[Er/k%#bm]W^:<sC5WI:)AGfAjc7>,KA/MjTBQ;s^eQS7soJ]f&VtEcl3ou)/JVYk1EhM)A"`??8=u"!T_4^_T
%/@N\>MNLn=)6B`i&'XbK/d&3a.aLRD#DHDVH\$$.SW55b:I"6D3cPcpJX*RKeLRNC@KME&lugDcOEK9B?7WXQ'GmeQ_D<a7,^"-?
%oHt_#4p&t84Af@t=W`9&V%nPHrPG7PR^-L<BiY^F&k-TA#a?bGq5W!nr7FfpK\3+=^5k[JA>J'-\>'qh.>H<M8]%7el_3#^6nZ]c
%ZUo]N+DNM9K5P!G$-^]g>):I9Ge3C^a]siA,+QBb?[1^*eHQ,GS.]"<=6S6LZ=Uin?NNM>NlP&*H>HhX`!\>`)P.*g.S&ke<o/8T
%_<i)1C'8Oilm#W8%!S$Un$(W`oK`'L,OWq;dY)U`J@UL?OtF_T98(Oqg!W\DKU,S`YSdudko`-iahb=90l4@$A1`JVbH0-3NkkmW
%rX77rPWP8V]$<:9\^to,au[PIegm/%ND:h4-1M%9.t[`#_1os;EGl8cbguTd4Rp1^0Y#.e/*LA98PEU[PfX\Q<)Y$KDBlsp<g1'3
%ZfR@8+k(GXa#5Ca^S94o;,NWJbq.I_Gm/X`iYKSZ?Lm<BW0FjfM@-$W@)JcaEf"5$_POV@aX,NXQ3N?gql",PYSB;m+CHH0d(t\!
%,[%s_`NkdB!CZJ&=Z%-s3m!%SF9,Sn-bu^s`<h8Ma-qjk$o19=eo`JL&%e\gEua-97a<2EQU1?l+OK5;MRkRH@O['X_A^H?i!'BO
%@h6.>#0VB0Q"kUjG,<9)ZU#NX/nAj.hI"b<KsIEsq/YSDAdp$p9]2=p%&*h0(W2>J/W?o#e]M6&2$B(G?hqj=[DLXe.2nWJfS60Q
%eZq_#!>Qo7LXQk\18S44/]Q*@"-^+2^(^#]K0?JnPh+-)R!X!72T1C["/El!'+39pBsHC,`#UrOZ7AOlSCUt*Y_k\4R8O)?dk=aM
%M>_(K&fhrDUT0:)S`_D?1BS7HUXC,10kN5@hNTX1#<5RjB<g]:%:Lo?M""*Tg!kkSJ;,/0H<gReA*bN<Jas[Y_pa51W]R1,>[Mf4
%mR5JTl1mJt/*\$=-?Ecm5iXk.er5ruO>7DcoNM@T$6sJJD+!2,bMPuc`Z<ZJ5;6GA%.Ae5[PKfH[>js?`jY:8"+RY9-7D.h.jLjJ
%;1-da4d0uU*ha]4Gr6U$1ND,#b&gL>"EsuFF^#Y!4KrYdqs$jhMR^O&-.kj;_DE%a75Ho;f]Ju)*/@heI';[3X&[V.\5Cdqnhgi5
%I2@clgN3QYN0.Idrh5qtRf:8=RLmc?P1d'sa(u\@F]*4h=K8`e<#kpLq=Vr\c6?g"<Lm%#(q9$C'PGq'Ubb>W5b97]k_.r'C?!fg
%SPQmu@gC`7M.:D*93PK8;#sd%G!<6hULHJE#HX1Y"hC^>i^hqT))G3JA,CnsSIR]Gpp+pr05'A)$9O!-3uh=[6.As'E).G!SPb0'
%Qg)`QGhlh3+s[XgaoU.B\&@8#GbSc?2]NeSLgP%6_],,odKXJHN31b18fGtu+Z7]&1`T7oJ3VFA_gtgl'Q$2TSh5Ac1PVf>M8u/@
%SA$5HBfCFuaDP66mtf@SB#6;'@Vk#Y(+K&8Z>a8YXSalWE9>@gTtOBY1Uf9R1TGDGCF$tYVJpLC[b+WTE)rdT1RdgMNP+%='TW)9
%&s7!e_B$,*J`4t4_Eh>GUs_OC%RMU6bI9mui,9a19'6M9,%UiKL*dnsC9m2F/r/6<%`?[c_QcHMQ24/dNbfl7*"7R@OTK>F]+TcQ
%Q4>!Y_[d7GK>cQ9*kVYLP;[T';DG(k7Ln:4`khs@3%-,))@p_)oFD8^2q6dLUPKP6c3t2c/L,Y2R))(rQ%79nAoMVskNbMF%LObB
%>qNM7i7o7]!U;r[cLGjI5W<HIWF_q2f4Nnh]o+XsC&ON`IWIk:ep>Tri(1F%rTQ;$'QVU'jPXgsL)jNg=k.3Xi4Kl3B*LLY$+f&K
%Ds>*cb["EW5<+K4OLHq=_9(blI3#coi5D@@1_5%SP%lRZq4@DuFdG.i+!X!0(CH8\%YAY_C,qH":B]W5,8]NEJoL._`qn.Z&.ZUF
%8U;>)E:O0rqRZ9NP8K2S$$:c<[-6(*)hN#/Y=`,=r8;DLn/4AKpL[pcnqJ2*d-esrBB0_<T+>K(T)$3j8>].lnUiWeEri#iq8![<
%Tfd5g_&WpF>[$s>d6_`W_%0;P?R#tdl+sW,Od^(4K4CHM3qj(H32%<kR14I]6@d;N2gTFPG/_VR=*eg:#p?/cm,3mCZToaYIW0g^
%U^Z#KK4DI>U$2F4N_Jq-9fbKu>-p2:_[l1F=',)G5<&^7X<lQjK-O,Z\?,:SP<uS&<E4Ke9oWH<)*bVYF`'p++5E&`0qQdFP=14r
%U\/6#Ef?P!H>os,$V?C<o\^iC8>P\>o\`as1!tVhMg&h3i7^m"h>"h<Rrs1!I4E(rR3,[@O$9`:K<Looftd8ZVhV*bO,W47+h&<*
%)*Ksk(sC0s#A6<KOU9Y'_9(G'Ol"H;]A/gK3^'uS;Fn:FK*,Upc-qt"*3bk5iLM#0=I_jR3^#IJWSC<l6P&Tf9NV0b%h<-:ZjhX/
%S34)L(d?E$A*Ouk\C#pB!*Cdm6hA;$9cQ1R#DZq`jDXO?UP7jdi!2aj@-IC'aq%5O\S>Z:j9I's0KDoer8;\laIUiV_6p,*PokCe
%FMeVa-]P[NSKFAT;n<XBnUm$SDDC<ujTig3."S)^K/7^+ZuX.sc<WmWC@;#XN]RW5[do''fZ)RpB7=eN-EMkAr88Dijsk3C_9o>g
%RWa:%Sd6%9'80kp,$$H4KO^][OJ^e>_Nf>o[m:Q8d0O.(h/K_NF0/IYYR$7VLsU;m#^9hT=POc[32r!S/1X"GQ>%*+%7)u;3gBr]
%'82QU[+)MsKKB13_(H`2iK\bYY4UXp0gg*$%M$5o3Ehsn*3a/%AT38X3=eNf1Z<N!)Og';i5I4i6RN)a9mO-Z?>p6RaFb6J4'Y04
%8ATAnn_S5:B-<N0+,po'R$$_$XD#\D?b.Nd7m)Li[[draOdQ9*cGTt5Xs`\PnUWL`Ql@f'5&aOF-suqs#EIq3+0+p`Z[tL;V_UGT
%[-2[/)a<c6^$3D,",EG`N>">l3,KM-(1$1?'6>_qap+G`@(rsuhsoJ$B'E'Njkn@UOb&]*Qi-6AqO81)oMaA-U<^T@>8smq"m3fD
%$+IA<Z4_<GV&6<DUGnd<)[prUDg`.H=JLSGL=#_M93K7VVams79Q+q69E1P/5(*PK33r%\88G((LZQ>md>SF&P_j@,3Ysb,2ot/U
%"jUklPmEmaS[+-K1P%Vg;hoP9"O?Ltm\jtri.*_%$YX#OB@0F]VUEZk:6R`hPmA?=<mWQ7JTL9ZYYoWoE&;euLqm<R@;&"2Nq[,(
%AZ#SWD(:];3u'_^'R9D-$CjOJ5Qs1`3)*eY']PniB/P`P?/&?`JJU;0SI(f$5%#8l9]3jV>hKa@P6mBtd[^Z6L,@@%Ag23"C9j)&
%'7hsX8?LBu^^18_(2qGci7uhNZtGp8SCFl%&iN/99V0'*G91^,%5d!(%libm=oZ7u!Ts[A/0=%<i1t.`p?b!#A3FHtbD$7lZ%u"?
%b:j7j!K%NW_#o]5B!6,u^sut#g<'MX(9t1$aoh'670\BV_ZS2^E[`[`E.[.CZp+)3ZTL^0/]Ilf/Yei^`WH_";"rl&n:5$.E8U4]
%"7A][$Uf&'!tI#<=[I`FS?M5*gI;8TgO[!q>97adS-XcV*cQo4D]5OE#95>V]%kY_444a?@J?S1`O:I@1uPl!"$G5_JFf2)0^U^T
%1i-9Hf4i#@R9&,]$TPk!F'C[53;GL9W3p%7B3l3p@Hf?$9QHlWFV\r)/ESjl/DtD^XOLCgq$os'(bFV;qL]ADXt8M4dNK<@/E#_H
%P&1UCE6#Ytar(LFR47r&irDR[0&0LX.)=519Wd/LJ?ofjjg\3=j7OEAq`=tk;p'm.V#Y-Y<H4o:B+)2&l4i/m6)j^H!h?uf[k4'T
%,-`C#&Y1KW3,P3oN8N[rB7DLV,!!H\Hc`(YR0+E:!>2!@!Nu:?Q'DKBk?sY>/I=BgVpb<*G#>;IK/%J3".V3=bWFHrJ<TlXRor8l
%E4CCnmMd/(&.2(ARlS85<)iL\"e<\N\l8%@!j86]1@]n,:9ZKu^m3R'\n'n'8$g1%N<bu)IdR6eH,+t<.(f;0#TRd-@.bWDa-Z&O
%h@P7eqh^UCTiP9;V@GX!3,Z`^M%'tTHD!]=r"or(ocpM`3tJj@Z^5pV"--u)j6Abb$4X-hi*734S_UN$6e5C;0Nc,Y0ZMW%%1>.Z
%7!tJ+^kn"iF,%sAc31^pR@#K43'sT:LsfGA)6;3A_e0a(!]$&>P.L%M2=GG0J2<]`>^/U<:-2GN_Nb@roq)BA3YT#(CXVX>RD<)c
%l@@._cD3Z;nT?0t=;o?*\7#GO</<(fSI$9<RdTq%RD@4EXF;*8E&9@(X>>Ff&[m,cbQL\*O2Sl*$(RE<2![193$1b>A&AEZWRUn"
%3YOK-QlN_j$(MSDP/1t%^`amoT$s+C0i$NXD_Q_u:T]DZ#1Y$3[cE\Z*9g*;Rr/W]E6Smq%_#jJB0IC<ktVEM=HM5m4\JgK;7C>o
%:k@*hNA7M6i/U\)OB3oN-?sMhg'ne,!aJdtb>j.^IoP&>.WFP$'n^<SgFaD_e#C-r1Qp6>'fc(7=EKaK7>CNeh4OiDc@Fh)'f\7V
%Z3r].3,J"d90&aK#MN3`BIafWH]Kh]<8\aDq?7ffE.m^aDIkc*^ldi_E\gRDK2km:mBR[1i2km0Mp>nqm7bM_^7bU@"W5Fd3u'_Q
%Nch[d:'Jp(1;3QY"cb&hV(s_WE0ci1VlEJrNjm*Pq*(!nj)o(ZFY7V=\e_bn\A09O3]*B8>[)^^FY7W>W\$"C35C#RDD3\^FJU]4
%Y?^!(+q6%;30MY!-,Q;V7uKBB1DMmh620m4<8c!E=$CPt!lm<C'fJbDaD0%s`pZUZHt^VP&NG@[3ZU+Hi:n_.Ho_j!K"$WD)\Y2U
%EchdK<8ciQ+?`)i![dt1p?ieti"0:MM)lA2rQ<D'mc`YBgWsHK"g79jCF^2\@m!HMl<N7\@7B.@$_2!$heu$.o#TK-&*n&iBOH8G
%L(0[#+Y8A=%@j%$j.l3shsp[&"abVN+#m1Gl$I=C^`E%7=IWcIi7am[8'gtGTasNT7V&,u8s!I)4jnm;ZVYjP1cfS&Q'7#6_Zu4D
%>^AFOq7rC.;QV'rkQ!M7jojB,JTE\`#1$EPWce+r54H0kqWU*7h`)];/!L&!Du%1_9#C0@I,GQa17A\:E"^g-2K?V>NrGnk3V^B-
%An;9Rk6#oknRTfJNb4pjK+8mMLsZ*n"37brOo1LT**6m4IA[0[$^72AFPqNL9+*d$31`FZFjP[i%g2#-2g"!M&5d"'keJ(UYM$+$
%i,Hq0`o<9o*.C!VFupX&YlQ2XFuF<4!L3lQL(,-IAFLFPi:*e4I&sZ*4)QUoYjfj@NooW:0t"9;'AN-&A!krbnTKq?\t';cEH?J)
%dhs)ahF!]?2f.CPmV689Og0J4Kqob/12t1j_1snX^_(S-@H%?$;T_n`W5'"hBK<1gi5eQ&*C4<>Dmg>5Q3\I4?k.2<!Ct$?l:M-g
%$o!iAE+T-+qEc<JOFX\&^\X2t]\-U5>70k3HY3`kE*sl)gM[qE*U=WL?Q$Z,U17X@i/YF)P:Clj!!eo4o9)-8334*aqeZYT$UrRK
%r84I.U'&p0^DSkZ26^NhL3$'A>\!e'*C$Mq48Ci1c9T^ejo1"J<-U3qrm!nGqrA0u%nk<Y`8C(;Q^.96HX&@La&p*=A]5k&%I&'C
%8k(p6^X6&dZ\5HVheXVc9dfm/Mc,d`dVlQ:@(.H\L@hc8I#rfpdqf]Z2g@Pp;f3JfHb&2[r'i90"3Y6<qhEiBccEi*E7%VKADboq
%*?ShLa<,3jN9ZmkQDpu[hfro@Ad6^C5rthHSXI4FbZ#0aqITg`TY^8[()eB$VXHuP`O6D-_s%Q3Sah(dVg.$jq*rVL$#sPP7Xh\L
%]?V\Z=IEZ).D?Cn5fQ;Apr:=c%VGKjhn,<D0_i=QKS/ODl+I[5nf_l&]s0(7G\./j2^U2_O3[,%Xco/B2cG&JE(]j$:@50n/X^ru
%C2Ys#,6kP7>0+E:W4eTDa+Bik[l9`n'H#ofBPH>Gr=qpl]b%6/2WW^CP?<uT\\4\5@=N0^^%#Zb][]L<c0,<<*]gKKZY_QX`81nu
%#:hrH6ie9'J8tn"2fO7]jt3nu_1-"P$taG;rh]CTfpaBS$<+FXh?[.5fZAG9HP7J+YLSrm)s\;)@ShD]TbCchXOQ*/WTcfhWP*9q
%dUi`j2]EYa]4Y_o1fN-=C2^I5BJR*2l*rRUZHV+\7$3T;d(-hu>qf/@\@l=%0VlGEp83sOF',ud!R38_!XH1n>.!j4_sOQ;Zqi3]
%2t;7Pr8@8q[p_1Loa.I(&fF3jfY(u.,pQArftD*gKs["io.(S`<cW,I@&ucKOF%'8fD;mMm`c`VOSqf>m:`i!"DgHn9r8"7b=^Ql
%W'3V\PC(af5fUd/gtSe5hc=c9"\6JQmB*:^1MUj*,U$DPW4eTqUAP0am>Yc\p\pYM]bs@LnUG3F7cuOJFte8aTSi.*Y]>((#,g;3
%\\76c.YGgdm>[/QJ2t-Q*V#;s;L?;W,&4cep*L&=Q#>+.BOD_OT_<!U@nC=WhTX1%C=ATa@G`jOB>a(1X.LZ,`p=.^JLlGEg"UMq
%/Jla#]ijLD-)`VH1\6Q;hhKi(cD+9uGA;%UQpf7)[C=S(=CqG'm0sn&GPC=Nh?I_lQ.h_C-`r+4[5U`fJ;aqPDk_p-$?"AMGVe@Z
%>AA(!rJV=!C2\1prLaV+2d/d0e;:kag1!.$=AmU7g5%>c2c(kZ6oqS3iH]?'_Q:]47-U,&hhf%oU<?plp','2RiQ@%]nu'[HCtpu
%UEr4($t=,ZjugJkRFn!O-n`#pfj!JCZ*)=-FS$6GG%YE*nuj<&_jJ+LlHQ!$*7WgRaY=rc_sP^Y0iEf3[l9Qqm%5l=2cV'rl7d*o
%.RTiab3b0(JrgpdD^HHFQ^5qaNOdBs@?>gl>MQc.7d`uM:GG?apZ?kB5RhaPZm^XkL>873er?J*]s86Pm+gHA^&*!S*$8Dl#8O0p
%$6*l$js;>mj2UK21-LdVFDc#[mk/4eY2%m&GSo/Wm7dho\<YbeDQ.MX[A!;K_*uA*:@5/,C7eOADgKHhS)2B=hR"Sr?/MWpRFBL3
%e^!Q1pId`!VuA%nKe(TVXq7mRT^"fi,k1ee#uRP:=4i6pL>E9sa<1U0-ccPpb?>L5GV\&9'\@@W_j3,1;Ub2EE$be?EG)%T*<fbO
%Mh"[14;^O9G$ZAT-("k(clE\/7+=@BQnaabdEHt`&0A-g3?X@td56q!12/^)gLgdD9C=h.fR$o5qESJNDWDkH/sJOnG(!jRErFA^
%n@DU8TJU[(J2+!96a9?;BMgnZfBFmrjKlgK%FC*bb'9;@KU3f*m?sm/1&?^%`FeuS<SaCj.H_XRC_n@ua6&sIDY1:HO7&P=g(cRt
%fEnK/<dMVb4>rAO+<c0PZ#9oc*NWEVh2;rg'ZrIZVkr$<e_+aH3u51Jd=Zh?n9H`p'td'[$`,M7Q4sQW-%&OX%3V88j;qS`9&Z85
%!C-8k[:>Z9ok;ad&s-AR5h(V^Z+qQ5E8M*3?9mAG%m\sP$Y1_UPpUmAjqL#`<U#+B<4$1#(faGn`MFU"H79$up&J;bXO0qUMZ[-l
%GG>6kZ=l'/("coE*Rp&"N[B"DHj'*Vabls^_Qk@neZ(rIG_V*`2d8m9Si(B9WPsur(<QO&-jN#!'L6Gnh,Mc'F'e`,!N1lK<oUBc
%Os/H1[TX7D)"%&#Mqdsm6?s%XEcl0<C/KKm>As$F?3oQJW.4lMNdr]%=B#CZCnr]fVA)%5mYNpWKh5tql18Cj!4?dC$mSFV1b+Tu
%.r%X6LVYU&](Z;_EYda^Q>*6R+r#L]>kc'HFa#3l`2dRVAhuh<O<bK3_IK(6c:SJfePhr^2.=<7bG#'F_#$S'=ni(+(e-J7+R'fp
%(8*+,@2"`b`;R2rN.o-?[G@R?#1#b'etTl%(IriSCZjoho2[RoR6E?V;)8RQ<`UN1P9b.HSE^CT@gdNJcpKAC)g!'p,FNq7AhE'K
%d8lo(7n"4Y'IjIV^qmNIoL$0A[*rX`3.]g@Z\t";]qZl1Ss,Gd8MB`PrZokm133PAOX/<UX5dg;%B^8FB_<*R/S#TPg4E9*dWIBe
%3M7j5&H-('l6h`."agl_o*=MI.AZ/3+e6r4'*,I6(M,;\&CMdMc;9c`>ec40;Q#R_/*_'W_W,l80n0iiO;[<8SYR>.iJ?n&#)fu$
%Eb94W%MT0Q-SHdj-of;#(1WbC"t`@Qd27J_6:m3.9SA'(5Xgd,ja4-3RmGD^jp:a8:I((+>*qe#(@knOMJYKY)8hdrKmD(q9rt=q
%F,)Tage2Pe/+2n?83Q]%o1dX0^n'>P.]<]<&hMq9C4"Yf-'B,/aRQln+C]X!\L6hK2n-\'Oo$k*DnoB^).l2@`!RZ-R&GR9d%/K"
%=ur<QH:1>WAth1AZ_Rj>]-+dAYY9,:K4Mj;r;eo<5dg-`AFZM3?-:5SmO"+>&?K9+"q%BdWD^71=iT+X\Ua8#\6*&I3FNI)M9&mj
%dOWUO`Xk*'*.XZada$NPT"rp/3HX&H'VHdZKCjuP`cE$+$G'>O)c!KWo7jg!%CjcJTFfeg852?BW6=+r@E!q1ZU]<NjV5*SGQt34
%+es^^nK)K%#UIraQ's@2Fj6^n!kG;O['k[,dIK1H:CcLN>ir93#OXU*I]^'Y3a)kE'N7e)j%:T^-Jk3)D$5[[-9sm7FV<bDCqREg
%]cMbGgnkdZ$&$MNJ3I\f#@OuJqe!]05!aYR"U`Wp)*@2Y8n]miN53/d:uWVA$ik*!mtF;EpUnkC(SC>nNQgH+]M3\_"r%+ORBVbW
%m^:Fog;(9r9E7oME#MeEOP3$+*MuXaMdBQl_$!NolesLU@d0_VF@^`!S^e1ogmT#@(dhg7WG)gb4#TkZ_)n_LmLBLTWDPDm^c[>K
%1,KdugOXH@&1uCmU+cm*)."QEZaigXc&q!DOKdIZDiJGXd^0D[=K`>/W)_(]ZH)!6S7UIudOQ\/Zgc<co%\HQ"E%Kn'in<QM-G&B
%S;+@e5?4n67q8`.h+S=5Uk01_`th@nj?Ik"hes?Ydh8$]Ce_LMEm[9.c=<ZLA"2L`3DmGpKpcN?F=0umL$iQ0REZJS'mj5Z;NW&7
%_$PI%[5A^g,p5#M,jL8%g?"o3L+_Vc\56`.eo59Mc;<0tWig*"#QPN@`l"!LNBS%:2c"ti__dqbe.&D'_ilR`R:Q-GF4m<2Rk9J$
%Wobqg9iKKb,AN+=i>H.[CqafO>E'd2>j^7j%iUi>NkGNKf!'=BQK**_PJj]Q)#41,iH]6Wg,JYY\Z7fQU)Pd.OYt_bnjTl)dB[j@
%6%1(<<!=J$-_Zj1)7r)3"0KJ1D-P+[9"7f9n_1if/6h$dE04M:]0J0MFYoO1'j@pU\4Ha*R&PfUmK$^)Si%o*NR&>uH\b%Al10DR
%3I&j*L#?8[:V2BX7uSlCfLHg':09#sY@0qa]@ap2i0f9L^O-!\]0KOIg+6!/JhO\PCIbTu[]0t_JX_LHgo'GW'tPhC7&VV_GU_;K
%6`J1bD;9hrChaY<ZpP4ZTb,]*75n#>EBsba?"dnqJ=?_mfMno:T!Tkapp=feDRi27!6t9g26^I:P@*h)GCKB@I2h2=!I+DX\u!2e
%EmTgjl1^*R!2N;Y-S(UlHG2FAF?N&!?F,W*7.A7,B!"It;i+u(Ls#LUbtqN*$9[Q:YY,5=B0'*jUQ/DAD(b>t$n(a>LNCM;.r<2[
%^t/_TJe]5[ma=-!]&?)_*#0[8/Mh^*D89Sf;<rM_NYtS-dU+5Y]kkk=?=R*K8VpdD-HlY5I.gNUXNDY2cs$M;Nq*WrL+e5t8mk^J
%XmUs!bCg^\-57#RTWsd$GWE(O0'[hgWYYb*@okn%2jDG)G88:9RtGQeSN4rXk15"3qg:tnm`2'6%u6g?"kn\Z+sKbc31lQG(?U/O
%P.:l$b_Q;O1rPZRqnML2>B:h*PpQ@2#lTPMiX!*4KIX0j20ol`gX@scUee:CjHu<25iA>l(+sD7PcXlW?`pe\AlYB0:nRfZF2/-,
%gZ2t;Wk@cT\M%`tX6/T>3Z9OrcV,K1Mb^H;*pb"?8Af.5q\#FfY1A.ibgkcW#DPZ8g,lYKfm7-,7*0J)?/R2W*mdO]gnN@3Fqt.;
%!?e:$@Tef.pAtAZCoXcgg,/WRECkna8I04d&&cMBU"sm2@G9\BhD`!-$Q(FgKiaO_3@>sVhPTk;)hBnu'h17im`-(C`3?Q*"G5Z3
%#[U=Ee$\j&_9H!E<*?($M#ekZl#9qMON+7eS29Z6-7#J[5oMf"G!HY0BD!dfWNDrD./"%W8-7JLd^W_Yo9+#@5rJg+8/2H>AJu0W
%b93$TT!u-Nj5i>m<s)j(Bh9pahbLDhhVJT+?d21KXO[[R.*q7&N'27`$kgmW?[;,)oS0P2WhU#(JrD`1K/b`1e6u=m^.)Z9<XY#K
%]pr0`<JEY'G7OP<[^bljq*AuP_Ll@:D9Xc0pKBd;O:5Ot6k"JKCWNO[K4$c#c^A+tK@6f"M&Ja`Y`nel7b12qX#ei?prR!TM_o+r
%KW[FA+0tQq0Fj[t8]dX_Zucpkm7A;@$3#D[kh1TA29$nZDn*t*h+)pNbc\m0.<,VKp3&$UD98lTr5t#mM*Y]te,`#=6JiX0^`tHC
%f=/&:8Z,Zrlp2,P,g1]PcE/]'>&M('4FXI.<4S#lE=[)gW"@<`U.0^D-fP47Z*hN=c0\-Z0>qB=`a3`!$W'10HGK6lG/d>:+t"nR
%WIB812ohV(F;(kIjkdt<>NJrKIFg2X5tS1]'+'jo[Le&K4H89TD//C(Op?IIr6$@dN^9[mC&141@cRC793dO(';2.?dDWc=dKn(6
%"9gJ9A\f8lbd;6[D?XrUYj1Jm7d'+@E;@>6lrijTD?7T=[=e;_h$lbUi?BQ'A[#4JGW7b<P/Rg.bQKDe!e,m:S0W\5Df\N%H3mU+
%<]H:N1hhR0'Z*]Q,=CCWe[(iU]nk&;\2P>`aN10$U5b<?mTX8%a+<VF.96keQdE4"Kad9/+O?:4@Rt83.[3Q].Lr/>'Vs%!2LRir
%0eY+<n82%:!AS_-6)$*L":t"D+\Y<0+aj;6#rFD`/6.hl9OkeNen4l]@'QA47D9']Ki#o-j?kg84.S(6Cg?3)X<aI@8PeT";9<Mm
%''q4_,LXR/<r,Q0am,'u7qsZIgJR9$+e`e,kD%[XQl>Ld(:9+bAM]/NOB?8.FU3@MpWO"]9&M"oPC%A3IiTBTj6\HkUckAA(?Pod
%[Q(\$i?WqG\4WR&\H9(::l^1o"GqR0r33Q\i%<0Q/V*AKe:G!!8fTSD*(-!IF39L)79Lu-UqtKqas70PEJ+_+-_qB+66#u>%+&*E
%12u;bNM7.j&)^!Wil]+`HS)f4ck:N&d/mQX.%.q%$aWDN*8J\BN=s5Di+,,kHN-o[WCl%aLjI\\r\DSA4H(XAH]!L1&CqjXg[N[T
%TC0gtBEb0"kHU(Orrc[14TN&PNJ&+%XqL#]8^hcJ"JO'S%eM"ZC8L+TCro>[<AmR]6BdO@IbP0,Ln6p+Lab]1PT`C*O#][cJ_CVc
%+e2js1?An3LrD<0A'P9/.:gY]o>n(F,$`PgC<qRl.%$5^+ot@S".(m/D?2<)M.BjH.Gb?;2m;oXeZ[7iS-OI5'D+gT;e3-<+<>VD
%,)2T+!u"t]58d]rc(u"!c3A7tL=*^6PkXM/TkI=8[O8(::[Bq`X@l5j;kqd-PiGLmhImLDSOhtKV1roV/dU'/m>!._&K%RO'?>2-
%<jKL\9fhOsf!Y_l7nm_CS1>kr7;=#OE].TaOnjO3fH[@Bi-VQiSIcGGLk>ruP<KoRKtoPiNe`r5pIU0DCO6(LaUh:DL$A*6OA+")
%7?c*a;^sEXEh4tU&Wo;>WZ[,:$it6$/E`7tO-/)^M2I;N"HX1mJZ94G`/t_K8slEKSoB->](r*41ua7$kY+EN,97m`F!P_\<5r/'
%Q35?hnNF2JVP%q8,T3HErd_W9+7G3LKR8g!d\@I5E)Gt=P5%:(OK93eE&RLGJHRl6gNNNkFh>R)D+XpT'1%^.1<V'+Q\]INUGc,)
%4)1,u=#I,h1kUh_?=K^&F60;P$@-If%8%2p/Bq;_l,+%s^>_*UKQ%>UDK'ld3JMMtJ-,d'5`dDP^(E2##PLt":+TZ4_:I%IL`'!P
%HAT9M!\p/W;k#qkI0'K6+C6=K2"n9rP;WcQ,pU,p;[c2XNslI&M6-ol;+[])`6BMk7;<'Z+$;KD?Q9nU-.*&ED8g13_XrG<I:FKD
%o0W3#$7Ap5"h<+$OIC\6J6?P"o,,0M)Wi<8EU'@%jR,]jO9C.>$VW%<kuoSqZSP2KFKDCr:?-2=/7hHr2p!<m)?<V:$g*jUU80Mp
%fUSM<m?n<^%_EdL!B@4Ph,#/'Srr'hTTJp+6(7*NP;W]u$46T3V:Wj:[1qP]3MTnZ4F'jDdFHJ0JUJ[FAO)fg>_/Ia,t[=4=V1dp
%6`>,=+[]Mcj5.aKZYl-:K52`0gbH"V](A6*J5YN*@Hi%?q77]u0)^HK_Gu@l8]0N!^j('#cYAu=?Ds.N!")FL]^m]@6*aWp9F2Od
%Ng1H@R+Jk=P3&(4bQT_]+6<ON.!Yh%39'E^8-$-c5DuAY3cW31CQ*99PHU*NG![Kl!+Zj`TCAiRLC;=['STk[.IR](0ZJklNipBf
%3__tUPY[AZ'0/jM"PaNUOiOJf:'gHk>=@m/\AQ\pi3fkQ$p?"^@>N+5eA4[>Yl<-DbrI6ra<h.KiQG%J,Y<J\5T.?X'!#B.?NgQA
%XAa^'UNKj0$au8S(\E7%Z]L86]Z.flluAnt+K$Ufob/-?k2<%%%3/K$@`<+X^c4lpn<cZOmh$hpLU_BsW9YM/kH1'R&)LCHNfZMZ
%m3J1R$cJ-l*5C??(KgAV@RegdRRs_!P>)u!c5VV%"L1QoMqa#c!:VhOXN]^fa=J4!=cR-ndC^?-&(E,=-Y,pa#;lC!k^r,j`8*QD
%QftK8oF4\7[,o.;<'`=^&ffhk6k.h3ZAZW=aHfn6.eP^-&e&Ai)k9_Y\qtgN`0!lroAEu/Rg2jR)oB!RY[7\XdaGT+!QTOs>8Kod
%BE/iVD'?us(=a_POm"?nVJX71KNj85n@\Bn->)R38`K86/jK[N[GOI/SchAhTXN]Wd>8-1Zm/iWI)eKQNbV[Rc-n.l1aG3I:<V1C
%2Eb^gE-Xt8%a]MV69P3gBqgKB_a/Z'r*B4F+@sQJ6>+B*o,9/D/ZOI,$4o:PBAc%<X"(._CncT6%9?'M,u$dUHkbO"'"#-2@gW;f
%!+tHXdeR\j8C3AF:UjSb4ogk?$qJtlaE@!$TLoZA(F\"%$QUiK;:?$5c1#7jFlLNEi;om+OqTX:(+B@X.5E$&,Fq"p*"S3!e-I@s
%rj7km&][&(%kn0t`qnV5ULt[RdYuuZO`*XS>)FLIH?gXE9df0=jNN\p6ARiN9t&,)KnRORkSB)@IkJGt<-U4<!/D,W,@hHd4]"0S
%(lG"g3t840d:fCa9#S@'1!DJN7M9Rb=C,ok77qF^O+(\m5tj8V:roRXiK=[E/#P=o9=C3;7L8(BkKnrK0-HY(,nL/jeKC\-L=[5J
%poBZIFE)Qf$1EpNaDMKVSG^_(%Ef,En:J]rYL:GN#h-.IKiaKI'o(tQH'lnq_^n")&9R<t(i'h2*"oiS&H=IB'fe7eP;CXDe1LHo
%&jX&kectdbJj(J;en8O0,pdGE9KC*B+B+T*/6\b`=NLZ+5B+<iC,$'2XsC/hFZG2IS>8?&8>iNQ)Y"+fBs5!u"#$TRo!Vp['5iL3
%Qo6g",iRBeectQ>c`:Oa:)-?Tb_H:jCh2[?%P!':5F9AIbdDuU"9BOS$L&NS\?1O;Dfdo\$<eHEn<q`a`2q'CEKC_I`R-u=Ppj;-
%Oon<kh?%bS(Qr><r_44fnA^kc'5Em^oZuNmPDitS"J\7&BAtCO2*PX+1fTN%:m#8gi6%0E81e!T^aA!F@6C75.L%6a14q.ca`9XD
%6?M48AJo8KHkgm;GZbOZ'1d!Ec,:GVSDN0RBf-urFV9f"l]FqLfM2LI<e?i"E+S&i-@Q!L!++^$AB@RZFF6dt$d9aeP!7#b!<tg;
%7u@.Hi4uVIAU8_Kjn0f`@\??qZG<)i"L3db$PoJR[j+t.A;UE5@Kn4\e_0V*#7*kt$!Zq[5pE:_fXisWg9Rg]NRV=1(h,Fe3(u0c
%cmi:S,WK:dO][B1d!gLG)e][;@TpqRa&h@g.g7F(/!/N&(r=cf/NjcbLOa!`A&M[bH^;XB!FZu6HW!K7U!qe,W!O/NMZYt3I/s@c
%l]Mu!&ckIIYGC"[3X[;RpJE[6EDR?J>OJ-Qo2ld3FM**HXCd6mM"85%`h`B[LnjLQ\Bf.3U7.#W#db>OB3o-MV?][/G\`::C9O08
%6>F^p.JQ=SYu8q@da(p[^g56IpI9@Y)O$O*S68sN(M,G"a5AC3FBumB8GY3Q*:h02pTu%.#"+'D9i=VLC_[qR@e(buM<9p4/f3`7
%SiIb`QAdn7%fcib@HBT-d=Rko30Rp/3&>MC#-M5(g+bB?E!LCUCM*'^:EP$^*u<\sajoX<q3XiB/-F/g.>[)q4Kp4J;,J=BW,uVe
%0!M.=^l*Nd#(BmqS+f><N1Z=$L5S_Zr;sOJO@'k=BnrSr5`*#K\9S6T/I>AfF7:_<5qDGJN*6d^NGRu9461%13X/J9,BH:'`Waoq
%eD'Y@-Wa1SMB=I`91`MH8M?k"8ISZ&o=Hq'M0_Kh;8U!`q#lUB835c7H6G?2H!sZWIi1ZS&DrU=8>V1F'&iQh>da<4fsaTe&M)4\
%U578/K3DF/P``HlG?PpnZNoO0Tot;B&k""!/0D7Sere=4]r-cELVtc;aRVf4QY"X5/E/L]0NfN%SDojWW3c2an?Z;L6qT%?%5h_t
%J3Yh/>Q@_;Nd;V`,\"W]bRq]C)am:gck]E`AW8+XPY`fgi8b9!,[jPRiDX?5*tgp,aA5Y_`%Sp*h$>3;$g4BXXC?:7Pn]CQinKP?
%8KO]'7?6_06$p]j%1-f!D4q9`T)u2Q#pBha?\,&2kFGNMb+PN6\J6eP<l\<C;iuV\86$N-;%nt<8-W2D#Yu$BOk2f3p(Id?g#B?g
%<^8%jVBs;p;IjjS%[0usS5f^&::?KChr.O`C7)t*]\1X[EKNi`/j[FMD`c%lGui'@;$E<!^n;%M5;HY7:_(K9R+#(kn&^_pH(H,o
%dKt.Z9ea`;"JiB`KuE:OU%<:>qZGrDJ:YQUd1p(8;3$1(VNdhgC_eS2Q6jVB=(QE+KO@3drUo7C8s2Ui9:`=L,!</WflApU^'OY(
%TW0;\j2sIKQk3u!:pOVQ-)@i@#Er?l[g;%,n3p'j;J7rBg(LCko7oA4_Mb[^N>a)mfc",T9f!VYJRJQ**V/j,OG2K9=b4I5O$(:.
%"C$L+8GeeXJR%,%UHma`d`;5So"`AkT(i]o1+K@o[#/s5Q"ph;nORsY/)2X<+:'Ubh"#Cq&R4"aAePdmrkg0Qp^Y1:[2#,SMG7S`
%24"IF6Jr*A@ZnO71E53am:?Q<+]rHG^QoEHJ=(pH[T]AYT-?X(!!#`I!sui0^_7)tU]eH>`5RB!Rg>f]f*2AW@d>7tMQA?AC>t#a
%JYj/WkR2WL'mCE*jXA3.6l!3'E$NA]$kQn/i>H1l!sZ66kRnSnK[M6ac0%$9SkH_$e?r*SY8\_hC+*%A+a=K%&4(AUPueeG75,2:
%FErGuJXAIsS7huF7=c$b<0g"X(?dqE/\gA3Mh#TJ'a/dd@rOJk(6[1jr$^"KHHs.$KjbZ7i<r!MJ0kO.YE5W6$Pdpk/!>'k"^DX;
%ehR6S\LS5=H.FIrDpjohe8A#V7fXNf#C/gVETs7Y886L\K5Vf&+[FX'TEd(U/@"kG2H,BjfbfaPA:S,%"NEta0'Qsm,@<#)(5suu
%@H4'M8G8]uhGS=q=DVH<!)!jA0Z\dF2N$H13aTs^.jQV.(+qt+1PC<R<fi\bf4td>W8YBV&e)E)%P8`D<cI`rnH17J9p-Yb4td[f
%/ZS6tTOS.NBE`!HQ*4,N\U]>V.uI';Cm%\g)m;AP5uIAU.CB5<7K<NC#EYWH.00F,2<g39CrQh7\hjq(8!)F<.Lkf4JcaC[$8k:,
%n0Bigk^firI>"MZ]N-sX6Nth[)]0no;H.QP&)b'Oi#q5ZK,2$UMTl:)JBO:HBKS,GS=c*N+r*0T#"dhYF]!<8YYGH4KsWft")^cm
%02^.tc#'hdP(?njVXUKYK7rI@cfIIP!&MHIqpQa3LX63]m-h.Y"TTJ_:Di80N3Roh;p<ksD"2n(:(.h[`:M!F]^6EhTP$\=40`<H
%1"o8&&?5=B!'%+2)YK9m%l&\WZqmf3RPJ(TFtA%o"JG-SQ6Z)^o=M4;aZdSD?*N1QFXI%tRW)$?2YaV__$.&n'ALSHKd(/X]J$l"
%D3E75UZoEZ\P.u6-=a"gNF7$&/?p\ikU"f9-,J:<86V7b$?@1r+J"1A!!h/Rrhi62<>``8*`umkJ1^tjiBPKs9>XO3H96a0L);m0
%lVPu<$R%!n7hMAlf-^aG/24]<i$8TBBc(*I,.WSVmis#[-fr40^hbTW+U,iX#1S8*X_LS2A-WZC[32Fm>YWud7Ysh;.8%f&R=CYb
%Hk9%[l$aj+"E_#VkO%3&]ViRiE(k/rJ-(IX4GoGMY+5Qrp=Pr&-E937cpauH-Ttg+-[3[bVO6jhW(u[b7LTU^ferSm'%3'iMlf>!
%:i,W8J2V@;:tgWUM=k'4%#G-h]RXW0OFAj%Lq!sGgfQ(5Ek0i]csn87&t7N<iJ3M4<ph1(N"XUh8$Qn4cD5Si^g6AqpTD]W(RQ70
%pbAH1?Bf"P_a$IC>c$@H+F4F"8N];J)Mur6BMN]<J\jJ3arieXmJ@`2-55bInp57K[0BEVWn>Yu'rG/Dfn$XN(ls7%'M'8Zn(H]N
%[e+5Z]i-&G*W;^@"m[!Ch<Q)0pbCU"_E?%/M]b%K<4H^KPk1Mm;@&1*\UdggGR#fFik0Vh6(MD';#[06%;mm7#'+SU_U/E8_5QlP
%9Ike?X`P=LU*HBi_VX(^&Ukq8IB6n)_if%tJn/Y:L`mBEBuj^LOc:PU-?teTl<%hVNu<e<UFAOq$knu*-<fAs!HG4#c,+$'K`7+]
%/-09*cV'PA5u+bB4+U@AL9/#rf/giES5LsCJ`jF._QV\+j96H+3oD:*b4sE4(lD^?[:]fGL]qWui"M=&6\nL%*.91V-;t)2L65Z#
%D\@>Wc7).uR))eo_4cPcXTg4/1e_jC`*mE15P&s$6^TiG'R(3;6.[T^(_L$rTl%n*$R157>Hu\6W5<L$hF.3+(++C]]MaAnP7XKg
%o0jlc)CpD-!r+#lGD/G::h48O.\U#N5UDOf8FPPA62,OtOn<V#-9D9<)uVo@\k'[o[T.2Z>3/'!_:he`5`j1?BI4T;FU7">#eAF&
%4<eAM"fr)0BVB#OX@6[T@'e3-JpMUdTI$;.IkHM:AA5EO^_?M\%@pN;/V.mOc8bnhWq8TnBn\e"5j2>o(.BT>-&_h.-M]JroN;3S
%H/bS]&lN?9`C=N0M"3jm<E9t+jdi3[o[Xf$4(-(TnA,hR,SGpdEa)EV(fmg9!?R<s\8bqje\?k#X^`F6`/l^/2$%KO=aih*haBaQ
%K)r#.3VD;EgjBuZ'T]NK+tqj!.Z,.FYujlKMf^Ul"&:N^G>`q+bVqG?V12@KNL6%"SaRlq;n1_XZhju!JqWg>Qbf-X-#S639JLUY
%fK;hb?Bu9A8IVT,A2m%E"4ODfm"e#![m*cmR*l9IS?^;Ims#jMk73!!>@rC!Jl1]="dt6eoghhijA]l9!V#K.<9WfOL.'0piA>4M
%qr,M,$jeY%:Z\LZj8_/*)&0SH>nf-Q&E+p&-5V,jFYa?RYnGb]<]tMI;+-:[3%>,=:Y=I:m$"]s^riE#kh[LtV6mi:KGu2"diC;=
%<I]mK'dXlmEApJJCa?u`2$U?CZ,6\Dh$I[2QR!PdQ=YbjdhCjj3+5Oh[`Pi*$EP9><M[8mTo)uP/<q\Vd>WLaIl_VOHVpV-3@@dn
%`O-%F'+8)=fon+C&i9[H+t<Ie:d@d:'[e]5)hmZP7Ngpn"'V8^Y`P75V!:IMi0i7FofbOj3\*]]3E[o#;Mb='%>L#K`7p])is7&f
%%#Kkp^bp$6be!*GP&AEGNcO.qPR\8ene-pEB=WgZ_6,-iZZC`A7aqEi-<CUjA<dI>"@-a3P3N8"F&PuS="(3c5)CIQSf)VEH(O%S
%^pGd_$u.j,^r+(uU:uc$01%Q0-5VOWc@8Gg-\GZImq_HIPKYl;-)Mern7=k,"f;dE$D0[9)0>@92@d/M[O)&II0ZKe01\kV>ZAgZ
%*>7]l&UQgSPCR'\`5ednmbldL`jJAZ,bPZur.tGD>23.Rc^ka[q_K_UXK5J+4Ag`i,E"%B3(aY(.O:R,`JSVnkXE%VY`o_i*Xrk4
%RGe.d1EDYL/5,'I"s_2g".o[Z:-([Ln3U4j`SuEf,I9!2KeA[[73pXKnO`X-2^ut<837A1ARt'^Y\L7AT-:6Pm:oRoW\I)^0I3`)
%k2h_c$_R_AH8)'Q5inp%#4$q!N(eN8/qMo3E@L[_FB9E@"QRp&oK5b8+S?LiA'.TLEYD'c!35"3#`gqr0Vecp\jeA**Dr!2Ud(p\
%G_f9&M)+[1[`g'tjq]oXr`ROM%Z;%8#3dsa8a2:L"ERO-+0@NQ"u(3iX!&A+6bWo7"1:-56EKq.;^b2V(1L+WhLMt$L5/n:9)ZR]
%8ogn4)Cq>![(:f#g).p`-R]W0AkCQl\Qb`,Xo,=6Ig^jW9\ne-@Bn`b6KEg48LQ'/V=i\:5`0#n1R?_%;WFIo]T]Jhcf07ZXV0lO
%UuY8AKH]RsdNBC('0g*/i'@c/+Q_2hr)+_OgE8=i"S,X+Z;j@Sphs$5`fLG29-BqKQDB'WeV59J.CA.U,R5au`^kFYO,2>;b3M@Q
%J&6pHA;%)o*]]U@4l%<O'bM?bfV!4pa2KMD;FUZ"R1^A`qiidGMZ)d1JE[p>Q7*%FT3N'cdm7IU3+qHQ;9!0l=p2;M5-[p>nVP/E
%9Rcia"=k<8lA^=81N^UC!2i"=f'-91Np"Y;#,r4^AA<dbJm*&s5dEkUU3L"AJ]+a6]!U6k\F)5;(*F(u)E8.Pq*B9-[NsB-mQ$$L
%8LPf]=s4a`hUFED^g.G3pFa]()!"_8l-KDH`T1(>+=ikd,\USND3^bdL4V8O+a0DGR<Y#7n]cqa&@$9hI<K1*#^oN*!Vcg::/8[;
%dL)<F'"6B#X$=QKOfG('!tn,4L!l"3N^!B&mV?7&@g!$60P$0[Z$&tq*![4=C^!k@+O-Ie.*U$M87p`X4Ce&Xk3`R#'V\.fD4kF&
%[pT%I?7KPDYh54GbDt.W0maM1nDZ`V:trKS-)=k`qjsTc4:8V-,kU`M09IOgT*(,_'K.tk;6@d8aER/qH'$6+d"m:uM>SiR$^#7o
%VAh2*NM_EZg`tD)2u"i%`/0j$3^FoE/-aJ5A4#**E]3b>&B@Zg,942GG*?09!qnFtUpX[Ads)h&9]3/E9KFj7a:6'h(u%ls&d:S@
%ZfNuLc;jflmheAp.0.@UiI_TaX$K^?#;K1dXHUI2Q,uo2e&\bWeHuVEUaEt.2#TRkA1e.F1e*XT#e`msU<us6T?@t12a?jW'Bp4F
%hF-4+V,S\rDdt*dUecV_V2g("]Ynj1?(\4:%'ar,A1[Y\aFNPgbd?@LJX@Jfk5V<!l8W*h>9UAMa]<-q,qHJWB+_gh?E+YUOJK9Y
%GU41t,JIuCPii0A;%^Mb=;n15&1]F\<Is@cOd\B\Fr2Y+)!qL`)QHaBOW2A3gBs1Dq>sLFd>2G+JF3j,0\0kN6<m1ceCZGY"kh)C
%.YH_Kc4cDEK]+Hgiu:P$.\aUfXq>u8.pPtI,Nf$a#\#A<6X>lP2558J\W3>HE%`_'=sG]d9#=pdl#;HQ<VLUYZsq9o,7PoW+rXM5
%9B$>*i5hi$/E[A(`[_rmC14ra-:KV/Kpf2Y->&"DOb=[.4robQXCb6Ha^M)B`-$\UFC"7Sg(qOp%1[/JWmFS"1XIkgdL4""SpN^q
%%Pn!AVB^%QS.3cM*-[i1,HQpEW<.(jH@]s[+ZY9Lnk&$^REUF2;\E\=eQ)(lBM@#[@;)H0%dhSTUP)AB_gm1S/,[gh^3j8,7s$P]
%DI=ug6s+&qg^cD3N,51eU;G`]%Z*BZT_/SN#pVo+7YR"bV4nB!>KJQe83%d0;'UkKc\5nhGK!M^UR;ANki*<#LW2n'1l4=$3(mGa
%T^L&3[#?\^93+Dk4=0hc"2N;5qAsA&@=>KCZJJBF`77CTQ7QoE@3FMX^t)o\OC&AFgdXMYmD+.*`bBN]A;ADL>.3#'WE8`mcP:Po
%'ZuNE$mc)r2hGJ\/-QItT9a7:_>GE&TFf:(TmVL`U9[sd;&eS>KgL^==pCb9%t]%fFj)j?lu+pdjsk)V'gNuFY$S%aVA;uI:Pp#l
%"s+#RB10?*SV5^^YH4!-&`0AJ_'!r<PT&aL5TkU_os?GLQ**LZ,E]'`CRCV!<Y@'5A^GEjK2ZdtQ7N?&5BF/73G3H\ULKAD\kdi_
%\C0(D$0r;:<4iOITuCcCJAT6LBf.V[+_f$36b\e"CS35Y,@d=rO:(].-[r8;g's9qd?QgFnOB8u;2)hl7jf?N2P%)@OV!S,"\JEF
%X7^UKZbUC_$98Ei[p\th?IgtbNF3(u@N)iN87s=,2gA8`c:3I^Z6q+):Fk'X8hcu(%EbOTc:GgrA)eK.fAKPK7DGKsC*@=WJ]QuF
%`Y_p`+)QZ[\OV/oO@i+kRj'>2'qG@p&^V,D83E<B<;ENLVDiPj($Lp6F"6K;/I/":@n!O)a81H?JpBnA<tJ%C@W6o3K-fc(V)(it
%9%jUQMtEo=?.]UMa/'p'PPL-5DQuOtb8S<*l)im:'[QoQ*?/.q@SING>VfElV@l52QdSFM4V%``Hr<P67Nu/'QTfQ694\Un3V3j1
%AcpmToYS?eHN>;:b3TCpU[pe6J9Vll#j;c/3K9?n[ZZ>?oF(Vo;q<`kK104[+E7N?Me\4b*-792*0c&9_oDD%VCaP/!4WT?7p5st
%BFH7`)s(6uji<6Q=Ye7+.%D3HUfp6\-4!9Zj>jM6UL7$a1uW7f8dPN<NQ>eN#W2T"!F$/(HIFA!-h*8nG!p(N`H&o)h'P\p&h$c^
%8LfEt5R@I"n;O5W\XFs:i-tf!"AKcO6>&V<b*"7B!4blb3riMn[N-Y>JTep,`a=VA#U@!BSIm,GVH9F6NFetXci>podgmHK5!-mA
%(8LpY.*L[\_E0hOA4OPX;/L;.+&GI2!20KcZtU7RK.5&:BF:uu?mWfrh$mR215Age5!LKW7Fn@J&tV/dS%$ht&jW&^N_ul^Q9!DA
%O-0MV#p=?-8MG.G@E)2U`))R`8DY_6(jA<U*c8l7BC;'HE.sM_(JH6*83##0M2G:TKFIIZgdI^o'bSWTf1nZ,dn[9P&86<Cek'@[
%._.m-Z[a:;MZ_\&G[lHHlD0f986*/Zp<X]@0<(1]&HrN0E-^tSM`ban^)jlhmW+)qGA/,?7c`j60P_J9<2JJ[-#XLVM=@QbL6=6V
%EBC=T?jHRfLi=qocVW\56rJ@R8!b&a0UQR))C`H]/S:@Y^Lq6,-q&H!Q.hcW(I@d%_4A7-%pd:/F.+)+$bn_T1c9NkWt.Fp%pPO4
%R^gk_XTI+;D'a*,L4FT@J:[i-:b@OI)?VLH:p8MWl>&`+[:/$1.l7nU`Q",^;M:,Dlm8tk$o#I*#]k$J5QNIV=9Ch06fut)$@!o^
%!_/m\99?SR8k$SF?Z+5Ha`]-LcT']4OfS^e9*c.cAs1Y21VR1Fb5*EMi>O!a@j)M[/I&ZQch/61;hP+:[rCi;0k+l4)an^kNJ(kh
%jDNfcR33![$1f6BNk@V-OU[e9(6)]Mp%Z_;k_0'j#d1PE#37d=0L-&E;kBf3e-iXIN&h#-Q7RtQ.4^PtlELKQ4;JR!rf`Kbar#6i
%'$R2UKEIPJpbJ:M4#KUAPQ[Q"C)skn8i?%@D]$Jh-%cW(CHa0M,+UPs&o('GlXie`(-V2hSb;!NJ[=2?R?9JcTuV08$hmCNS!bl;
%5V\/\P%H<uDol=K-S4dG8`C9c4E?aQ3M#YWZ$`#RfY!HAZiIR4!GFfi0,0.QB'0@-jtSPV>C[;hKO<p\^roWRKG?J8lW6YRKM)O:
%6:.@P<sOnLC^Jaf:m*R-cq5T>j5i$X.%Uc;;r=<NifI?AKi\rRegkVU$^h>dP=>;DN4QoA9nG8Jq)aCOg)rV&J4QNV"FN8$MmYSW
%=gl9@5aGm/$9b*_!oB)U;dZlOqcK]Ti;#uOVGQi#3S_(0=/XT:SWXJE7_*uU/X/E'@4jM*=MU(BlP\jn!lM,Wks=mp1f2cE8qf5Z
%/Cl/mQ&hAsW8jHP/]JA_>5=Nl.IRC48L9#s!d@Zrbk=r]6NfrT20cX]20t-NZ5lbcaSl64^P=Q!X>Gcn^q%i0Znt.7gW&f))$PYe
%)>#JAUKWUGS=iF<,sP>pe7$f?FP<m1?@e?+rlE@KK\BSprri&4C1/g!bX<7B`M5mW$-C9hdAjZ/.1nod1nfL:M_!HR3_#*6IL%[P
%jEK0=5U.DkLQ$&O:e6bW%5A*>ehn&3!1jV$b\VM4;/6Eq.NIE`$c<oRQkqAM=0$jIYfN@]ko3=DRe[&(PUWtne;13BOW6FPCU*;r
%psYLFLBS6@qqOc)R_,(4)N]bmYu6*!)1\t]\_nH%nc@::NB/Fr/++e8_2W!M0U%A5'0.U1C=-b'/0[4!h)-VA"^i?P50Kh*OA7QB
%PQ;hMhcQ@5T.3]A\iO!8$She(e<!tiM\d$45:j3@m;8[b6D/kYG=M-EJdA(0PF8_\=38tB++%+t.%Z"?Db/lFegDd?!a^JS$nG4,
%F$A+8X>rITKF:(u`:QjaUC>?cnM*<pQ5]^u<Qr=_'YkB!d<%u!<XWnFcs@hi%AgqZS#A!BPtG?QhD^uNL!in,4oMGt-:o*h]0WL?
%UPcL-=*-.7<6\^H8ZJjO-60T/C'PXhKj1SjNRRXg8Yfq*TEP?K!E-t[m_s,GZk9Wo#(CCj/4.L2/]M7>r'DTa*M$gBpr3^J$H-SJ
%3lR.h`&MGm+^(+o<^G+ALBFeB\0+Pbgd]^:pC^/u8BNh8OA_OH_W#(Q#;*L/-+?1g;5H#QL)[fAQsh*M5;0`l@F-7^!$0<bZE69j
%e/FG\a+X39:a:D$+WDR0+X9"\gK;t8a!UmS9QJadc`"mkOTK%=ZI@ID`5j6oCmp@="#7U"<batf_.C`69a%Wc`%$@WLR2t3Q4cfm
%-"KG9=_?YsODI[CU\(jo+D?/N!!@/-X=l/J:,'E$?;?4#V'/ZT9D?ha<4J'`3XH))FFksI,eG;A+\V[Y#SnN$3Zq%q63e6RR0ZYU
%$d]>QLPE&Ph.RPCWQt_,&VO\E3:?"$B$)8/eSBn&amc7HU1!#sKdj");4RiO#^Ig.bdoZo1.BME?#Q6J+NRHuJ0W#L!]FY\>F77L
%ekO#QV@Us,dEW).&+cuDgA%6J'`hEg4L\?SDMWs-8YHlN=D!"?ZDr0jd9g?Ol`AVA)aY5`/XnNs]GRpT`Ak*'Qm^%(:,l4B<^n4>
%RT=4X_P9r.k\/?tWMqBq+6"r:9%?NkQVbb''&%pR8,+ZeKm1h,8968KE,bET1'!Ud\[lUNTLA"c)'OXom9@ZPl?s`?'!,U4?FCMt
%2\=W9?f!LANAsog,[Z006=[5\)2[s:pF1o-#f\W6)?FLaj#TVcW0(G\o6%i2oF`?ca`$+%N#dphao<\>cnO76Zm:$`M3l_I/6iB)
%15[@V=gXgj59_o8W1&sr^iF918\Um]TJ*)kajNjumZ`sA;)EQi&'RIM0bBMsNPab]\[p6/8Op\6M2r_W;9!1[KH).C_uRjZ4m+E*
%/*^t+W5?9+"EQ=d@gH!^_]CfAmdc:oin(!'\UQeAB=0Jr^3!'07FChZV%d&@9D1:t<iD-S-)V$O;9>G*b8DP#`isu$fCJ4MSUpuH
%B$Ma-@K\EeW?+in+\%,sg9n#s98-E.7_Y.P-/Oj5@#"LC'joDb):[,o9-NM0i6Md#osh195HM?)S*p<bHU:"]#f>'hMX_6#V#D3n
%j>!%),hp1O#QJ*a4\$R@'5_!Ja?t?MWU@himB*[:<J!>c'H4:4%JfOU1Ipfa_N0J2RUFmA*Y1`?<LT2E*=o&cC-k^BQ\],1<ljeT
%]tq.D,"dE>X%J@aM8s'qb]p2t-#[F)`bTlm]Olj*:OJ#%Vo$?TA)rVCWUMH52m^AS=.<*Dn9@'0%23_)&8EOReVFG@?'e.`V85Nd
%(:j'I(-L="D:b!0_2.ZQm5aYq,9=lWLE(QKHoY$0'FML#O.dA&b^^M;]VlJ$&`sm2Peqpj>9SO38+_"%9>'d/p:JD)gt7hJTrO[-
%Bg_;M.0^<JqMoCI?r\`$GB>ljZbh)[LRBn]0qq1F&/^afpQ!UWIYIGIO!K?0Q1rS>/uI*F`-Z,.#9qc3iOq$$LCHt-iOq%G+83EQ
%iOqlZ^jdm%*OI$tY=G[<a\)D%-+urPl5;,8*U5dY4u?f_93=i?-W\)GU,1bOUO79q-)"X_9Qu7B"\KabgE!F^/K!.Jfc>pgoYith
%(ou;._^\o8TM^@a\5M-k>E`rD`,sV)O:Yj?6?Hj6AN1bEh&1khiHd.FG6SXqRg)Q1q*M5d*@%FC]J-':U+kDC3fksjRI19B+k*!<
%D;-l&Z#Sjh/dupC,Y@5A;r&=AI"D^"IurFj=Ik03Y*Y*gmR0_[G[\5E]273]g$T8fJpFgHZJ@er'Z>^ncG5Tbf(X91O@TSoM!cl;
%(Qp7Ol0\sGmT[.eG6bBL$l-?8"4.,dA']@3aE:;D\KTk$Jc?DBqoX*fPU4n$<5(Ge-QsLD9Qp`W-Vl5$6?`[%-m?V^I!:<->3+W]
%o%a=Y9$$dlmZ%?DTX*D4LJ5Z.ZeYYTM86*Um`kePMXf")h47u20CRIaG@sHM!%2WW]/-tF+9?RXGA"u-BgPU>B*nc3V7V@*.K<]"
%G)%hhilDqE4/.%`ST)YnB?31@'iWcQM!d_F]>Aa3)A-q*N7mV1Ajn%]-+bsD)(+ODdbQ)-8pL4Fh&S3,A0R9+NY$;LLcsQ7U#Ssf
%4/TVG,b>7RFJ6<&N`^X?L$m5?^XS[Cm`mdD@]=HnOEbaU%-d128YAuFl0]C0[XNqt%b4"nVq?n>e7[WdA\00$,'ggjCj/:C+Ou.N
%h%<kR_32ZY-PC2qkjCi4LUtpip$XAPGOj-`dY2G`MCiN/L$l,45p<_$Sdkn$rJ4E-?m_EGK9+^R36(/nA\0`,G*'d:g$UOM/Q_S#
%m1+J:E6X[8%eVJQ+0KF(QM=Q9Kgom&a@$fqG%%ub(5E$W$JV,J)_1\=gDs[q9UBSAFpBQfVDf="3rtQ3<nZmH-7S;,>2KJh2t9][
%[QDBaSIeldmYl5Pb:@[YOI338HFc2U;Ae-"6b5@PE='HITt;P*)8WXKFE`7G&=i2UG:+"c=Qo2LT8r.'!!FHmKn\q)BPe@o.s-!^
%[=ZskU:Z%e(8d'XG6bfO.[`$I*DS7Cc;hG;6O_ANlfmgGTg;%LTt<+&G:8gjOl12AYV9i\G6b*X=r"b550$JriOcuf7<H[,h]:!&
%!=CE+GK/CsF]H.;j-?Z_9Is^Fa:q"fGK6+^Ti^3b1Bb(&bR35Je3CM$.c28,C0BsL^,pu&I573*^,q]FN`hKun'8]OGP]d[mgd0m
%f(Ej'^_%-%b)ks"2f`M0's9W'"HoVd&DF8RU]tGTF=6]\D,56Y"q[P>"J.^-FKr5(1j<2C0(pi?0F5>U3UU?)4EX#K4/C)oUnoj%
%U#qX$:PI^:`Zcq+8,RN9RBS<Vd+armHjfF5Np,jQB#8tm[tDV\DnOHORAOf#&\T4'Nd%KiDeBVJ&Fst;[t?rebX_;KQk78&$bIGG
%%MFC0E]_u3b)FfUgAu4).:/:p/sO_0+h([f`o#kqH1(eqgi[;INOeFa'pFfb1>0Lf'NX=%dV=[:Lb'$_-o`D2#cX="CtnR,aY-d+
%4s[)E-eb_.a06tf)/rSU#rD-k#`O7*:c1K4"9krH`*,AIIRs4@J5-_&#qOL]gC\)E0U/N[G*\XD>"(g=#>'q,B,NGY&[lDhCM+N0
%$Do2Z,GZu7aI(Tip1D@_WY!pYN_Cjj$F(UffAN$X1aKLSpbP30Ph-BH73EK=g6k]m'e?U2MkNkkCM+!4p6aGA9dY]sA[Z*?@Yb3"
%Y*6l20R(HOa25D)I*ZUV#gLMK-WlhI\hb<h3e*7:aP,T>ChNNTi[-.[SRHcH?/`1I$pl]4WJD_)[$g\CijH[V[*'u'*A.miaBa&X
%%-\7,>iE)CL$+$C?YbH+ECcU(iO(I8<ero@*A%YdGa6hiTXoCmg^:0S.9ZY8f$4h8U$[/03tiN,U)_S75tp0+V6tq$pXJoDG*!!6
%_MHbQV?Hul.]j^:>%",4G)#c^>oM<Wn=r)_$E]k-'[>8F>!(AT)J2iM4%P;AQmo-XZ"l)G@p1qr7^ogVNabOM]bKh#eIK;+`q(^]
%*H`Y8Ypudplj=LFNG7bgiMsMuVmS=r+>A\$8dnrq]Z,0me6LHNq-%@;K1+X:$EK^@/o5<)=RGl\1@c,[4'FecO".5SL)@=1L"$Sq
%Q'@S$C+&5Q$s=$2m3!1aiBh9LoJ8&18npjfUGn+&eBV#;nNpuG)aB8\.]FH%!j5*FUirtr`Dp/6m;S#,JXh'ZC1g'Jhl^qP60_2.
%.IE'?&Qd:lB*c:f_@!'/+bFk/4ej%ODc5'XN-=Du,:mk&7QZL,R1#c1,pYf1N-:G-^0P0SK3=bHdZi5,AFO>0jI[Tj*Q/@P=%YR7
%eB;2Jm0r37R;FdTZni+e`6_H:iVL[e]ZOs/B7L=Lk-Qqc:Fpe9N/Z^7:)W47r@XWV_i6)3E&j$(R6kV#]T^"O8nhoDd2C19V&c]t
%q6V$$g0mp,T_sd@m3!1%`'S5EI1Vri_3;hCW^O?S8$mFNCNrurm3!#'o0R4_:hBo:7_EnX2=\WnY8o[D.eka%*Nqt>di\>i__P/:
%Bp@3Zmil`-Lt3%<d!6u7.'4Li,_>^tXdobEVEL`_K=$P2f@/H1l`_bEj5IeHjG;:q9:aEE8npk@I3oVg8F:Ap0gDV"g<jt2WmO.J
%B:-d[m0]g5;"b@/&.>HX``JNC8#1=*/Mqa,eIFg/A@o]n#;7,)KZC0;BXQ:G.BOUe%)a#bM!]jd^kNS54-L?gZP)")`;iuK8o+`Z
%_`,DkM="];7&n-kC^5H^&<mo=47Z)W->u:ga'&luK,%iWHm8%DG(nS/N^,@-'k08q;$="rA'#\)8qUVAC^5U9&h'ppgVKFJZD^B3
%a4bnrNfT"`:s%&,G9s\M4":HqGnjdMbMlZaGkK!un355a?$Pa5FABQ-8o.!=M&&43,@W`j`FE2@m0qt'1qs]l@YCaqgT\P27mkpU
%f/)/!`kl$JRI(F!q-^amR-hfu7`7?![NgJ.eb+aON_m5r*\Y`\F:6M-<1*%Y5Mg-mBLTslS'dDtZ7t$!6?Ja?CaWfcFT2f<m4?F*
%0EB737plSOJW6)bLm)5RAlMG8$ltgAR-cm/UrOK1gQCJ?G&>QAa's7qRh;tIb/_/1g7HuX#XUiC1'It(+VF;0NL9*h5XbOc_JD`4
%09Wd[Aih1Sam4`+G,/OhQY<)$A$$6ofF,//g(B%YE6)n:HFM2ne94s\K$QEN[Nd^;kGM/2M558W[2j`HOs.4RTmQuf<2o8@67/4.
%6Y\]='.NF8fac]u_Xpuum8tVZGIJa%*G.Z\ARW"\C6@$=b]\48HYuMnLNN5\^;iQVa,fdOjg@JP]PNH;Y8s[kB`8]P42Pj`*FFWi
%a>CkM(bsbW`K_:8L"VL3i^udJX$3eO`HrlSG._N)!^'47YG>4jhg0$!\U^u57]GcGB>^OJ6>]5U!iAtYW9oDp;-9UtF,6KqXGg/"
%4/'^[g^:S45YtQm;p"E[C9&B%gTC;Umdc1HG7>RD]Qaf)dG#7KMnLb8Fu$#Kb"?RW^$+0Z8sW1@&gA[3'm;Z:(t&%1lujWu,+@kS
%hN"ZQP#/(KFsPp9V%fe(`ZEeZ,C2H.V*"A)0jP`"J)(/uDn"TPLEG"n8oL%8o&oqcTDuP#rm-oaoh?,'#ep?0lLO8rURU&<B?sP+
%]_jL6Aah>pJ+VhAr`bP842-1<p2tf8-XSKU=m4`Y?1Z*tS&OP4J(-$`qrQk!hL5<a=a^2QIl0Qb\+oAmr9]!q5Q,5\rNbpN^FfHR
%s(`B'oC'Ejk2VMo[IB$\0G,r&hdBZn0)YrB?4ZM,Er>dQk[""&Qh[dA-@Z9N,Pf4,_9nT1R%GYE!<jCA>oLK`_&Lh<^gK,e]R_,*
%hRN@Ko.;QA7Rt:P*4>:jPt!Z$r9u4$WUfnL_*@01oj[So.c9k5-A-42MTRl*L&>_0r@:;h5P^);M7ekg.q74)0iM,1\UC=4^5XA;
%7J7=O4>4]p%"EmBrthMi@>hA(iPh*A5Lp0V`37Rt9"P'AUAW<eeqR4_b'U[@_4rE?Zc[m#^0dguDhT-CeCcNZ/9GC1XI2@:@\jN6
%Y&+GrCtm/'B'AB)]!SPV5[8%L7%HKHd'OZj4rE.a`d"I&>\f;@[5"<sl\<_QfLbUDMq!T:be9-XgmDDs>@Wg15-?b4jk:OrejqH\
%iSo<(ECoGC^Aa+Gj2P'o>%9n&hF=QZQ^:de=Htt)7\Jk6R*!bn_pRarUU'&5SQG@Yme_K=?CkCQ?S3a]#$ACcc+j4-0[3lNKVOEa
%6a^8iF=uKIrGf&-e=R;_.K?gG%IN@=;UP=:pWp>H3m1l[r6bOA-1WbT,AY5Yd3S-n;aplB\&O<(=70#kX^lOV5$6n=l2I<ZI:2kV
%oPZ1QQ$5;]Qs4pHau@!Qi/$dqh("Scs1aUZWj^,Z\bt&t>:u[.0V#:h3.nL9gLJJI7RFjNS32\erSfO(WlS2Z:nFhaoqt/%#!r8b
%(M!8SF[,t8K+HjF6lY"M`=,jqGEMXg*mW\.`dcjF6f,j=23%Oo\,Z!M^RUkX=+1"oVtJ@i]g)J`D_Ji;HF`+/a&`!fs7G"(PCHl.
%?flicQ5b'sp;=M3j]e2.fsnd\=afH)p"B/al_Rhkm,HKD^V&h2&c["Fl^K4#nWW)GKA4?6Oe5Fphrur3DKuB-PY^@9s!k/(72PMu
%T?rF%c<fA?T$S'tDSJ:)H?o5El^J3o.1bjH4&\33Y6k1&fC$4hotu83:N)8shHdk>9g$/Df%`QP??*UWj7;R!m=`35T&*I#5QCKH
%5<jYhqW*!EGPBBh:?WE6qU;een!d(bH$B5)]CY.Gl148IOC-g()YN2Rl&`Tj+.)FK^,iqfq0=u3`==!H<M(nI^:cP=3SgR\#@2]"
%kPfpR5,iIqVg#!rO.($3a*p!n]DTkFo"X&CV)m^s??q!$S\t04]5uTI\*qV?*-()VM99F7S'>ee^0BVNs*g<_(ps,4Ol+9VS6au7
%-!,#Nf-`LYf+TL-IrrG,g"GIFh)II=nC4U%o'Ou>ldOs&Y>=#f5!,=`UIcK[q0mU<Fn+VZmFfakmIEfMT]L<?"$ZZmq.fHQI$NHM
%gWt84gXkOE?fh"G.d,uqgoKb)Hr2p(o'5T/;n:+HR+;!f[pPK4#sOXM/iV\Lk.BDrQ^dGao3F!Ck*^W)[lOJQDKD"&F"k)6Ba\b'
%mrS<%F1hErH2d3sPF#@cbb;(X_!q3pYfFr$??P,]]_l77o9j2T:UgrE+5^)5IQ2hdmA)dNX8/qHn(tcA41RK1hRi`pRjTbrQW&q"
%QTI<NVt=DT<e%YI[6AGSm(N,(HM-Rjo&c7oE56i!/,&?QGI_E7S18HCVsho,Y5eF'2cl?hb:++2rf`mUWmgk>r9Ek?c,mZqfDfA_
%rL8ldnb1f3X-;#o\#1V:;]NC/a*6(;F5.%_ApScGIWbTRIX/X*69R)SI\#%[H#D3t^Sr1)"^est[U4IgKt_KZ1uBOIAqEMNmg2AO
%h`JI\Rq^^2F-"MN0W>l;YP#N70tt@_]=`DDc(FR)a(r](HLSUEomDijc]\_CgsaZUpQ:$K#KqK_mReSW0?UP<)IUFai$UHl1@WYn
%QI^_amAFh"*;./7G9=7RECPBGH[Wg0Bo9q/Bnm&ijSJ6*ou6K68f[Pt:<%XN,^Y"j5%;0P7p#VXY><HPqHN+"nLuW4p[Rks8l!Fa
%QIe>R0p2cUm7cDN:NJ]@[2!bKcU56Y-KUKY\^/Bb3Ql&>Dg%`6'.3?`c]``?R%fT'='+S*f?<9*:Pej0ofORB1neO[qW-bk].#O@
%*o,<,^-"JAR1d\)W-d[U8i<*bL\J?Bm;$&M>(8Z']m4c!k4R:#eW1B&TKTrBb\Ct_e_!es?B8';[BG"HQ.PJH4+.2+Y`n@lp3h9`
%LpnALrn]r+`a`lT"3uLh1_'>r0qMcqs+KIa\[l/F[O9W('28<+XmZ3tb3e:u%\<ut3L#0Z^]=eNjV\Lb_:7!5h<+'">#bBkBCR7K
%JKH3iX2E=c'0:1VD7,k+`e<:4o@G@VQcnu=QflQ@Bg/<bTBrS-hb4<Yh7nI*5M>R@o>TD;2s2QdbDYKDc/2:Q*9<72/BWGXCO\19
%5MeQ$r8SIn[61tN8n?i0qSc$Th1VHi6!Wl-R,Cn)S24mb!/$?/j.<%.no(uh[JeZpPNH?3\,)?3jb(MKR,HLTS6\@Q1J^1tAO6mT
%p!q$Gj<HjsX1=`SPrDcC%b7W9oqC&NM%0E%i+/;9GE_352B<IBno>)IN]a_MDS2F*`:iK_r-V[shYHS#F+/;C4IM;_IsQ-aqR<LS
%l.L\ZGL`\9X31h@Erp+8GIQX\$p-=oGZW]^3WJ4%f*QdP+/(V@f+S[!H#ctlRUGRmB<6LY9D7?48K0n/X%ltSl!Kh)^R$V"DU*^&
%e@#/::2^mqQY.+u2UJ';Ws)9!R-e%F1K!l*Jp.!T1/Xojk"shL#FpW+Bc?\n@m%S$PUSS;F"3(@D,4&,ShOs<ku5_nRF7Kj3I2/t
%(M/24Gp'XGP8;^JkFt'FHf4NFje>H5baaSHkG%kqVp1FL755lL0$5FcZL;Q,8`c\:5,DMK.@iI5Mu(eA;'sQ,^2N\BRYu4_P]BWu
%FQQDCrBj%g%PakndTkWrC[?'o%i[WL;MNdc'8HffEB"X%W3+]`$_A&]iTL7?r>3D*q>Pq.7#-#9:%A#'83]0@/:2EubP+DmRJ#9^
%oNIdXg4UW:p"HM!B"`@!HL9&1=YcI^:Wm!I@T$j@2J]]2>H?#gg64;CB!!t,[1?HA%3n3smi]?XDaQ9g#_$P[p7MJ;o/=2[2JVDl
%1gp[PD)?1+d@(Bd,#$'IPYQ]a.3W^#m&mFp%u+9Ola)'mcbDY.q=XV*e3*0R>!BQG\U8OC\XfdAPR7"pH#iMq,g;7aZb)[k-\R1_
%VY&sM^eh2#(KXfA$P!USjm=#&U"nIl)%:'\6[=>;h.9p:815Fh2FKmbN@nS*cYTpA+ocbmaT)9CrcA(rcgj:O*iI"hG;kW\+MR33
%C%SblrI0N[mV_T:-P;=[9G7B4mX0h)r&_J2IHWDP]e>M?\7>5<5G)7f]X`?Xn)7WegSUltUH[G/,'[F?GE?!9JtM8)D(.<ZahU8*
%o7fs&_mY#SqI'$/&)6)QUH\GnRf=&t0Lb1(ZpU+*Ed`-&qI4_+jTITZdrD\8^\;C$r=5*F3[5^QI.9cJP(sm1\EDWg9JXt"kr6Y4
%kP4Lp`d`144Lf<FH&hpMn_ZA+qd,h]aY;lPmi;@uj1k%m4X'rDS'NEbP&nik:E;]ImOsu<^2qMBNqqPdfUf[]^7>O`5'hNf=,7/!
%LpL0dhS!2Y^UhXdc/k1\ZhB;_p$UGnq>&PoGB`TTm)R^:q131VJ/+X%_pojqb\EN<b26L>b3%.%<B5MUcZS-ZT<u0AT$X/f\OWu]
%D"`tXJVWTKd)F9OZIqT'HcR7Cq+WR:AiJD_Y3k"=-5QPm5@-"0Q_.h>EVWa$LsLO_qX!COX7PGtB@k=nT3Y`p>],O:ci17V*5cKB
%47hOJcS")1Cni!j/]7/?Y#\u$d%09DrnBj@g#1O(]4nu=j-BQHFQ?2<;ne?O`X>etLUlcL>gM:Y:\,HRrTA[DaVMf?pWE>.G%P&V
%fE\7\p[B9,s($>/kdG9n;t(i&>+`.uBP6-Lqd?>0+8_p7B?/3^GaTR*Zf>V?]ZcD&g%"W[*kQBtLuUq;0_E-(NgG1.J^0:BHT5>T
%V\Ph!T$Q7QOM98gdm8>BSg_t(dj_-,f+i^W3:'O!*B)Qg'Tdrq#Fh(^E\N,?lpi.0Y_aBCCjLilrh#438EI*$>Q*^MPI%AGXSHhj
%j+Cq#&'#QEBg3*J)2W'g&''$'\+]fOS:7+Nbh4s#0KgujVL-PQN4q-D0C<MBIP<`MhnD:"H1f?S;Y/D<ngC)*buORd@hKc/3VrrR
%aHmR-9)6i:QI_9aCc_kkIJDF.Di_T`?<==:]j9K&2dA"C:/o>j[cbD7+$[\*_#)@De%?+UgWVc[ZL%CAp>g+)cV4,Oh(*T)c*9X"
%_t[h1-[n(&3@URqTA*L]gm$*s?;A]*WXnNt44=tt'SC@[p>C_ga-a]/T9p]Fc@1]S]$hY3+!WoL5K8pOb^PMa^$-TlStGruZQE]7
%AnLaHb^PKQnRHr+2mf'<8Ju&7rI/qd^o9!!iJ"d*3P@F5s75Gk8oD3;m`l<mfC(<fd,hltYB%C-SlBSiI!A_`]"In5k3V5PS+glD
%MoKgf5<GLe\'`[:l<JBe!HI=YPIJ`M>VH-Ch=C,Yb0=ebq-E[\FFkn+?soS(FQTR'rML&\1h@cC]"YbC@]f.)h=Y:[S&rq*PdB^k
%GJ0B[P.'#Z1K`'6Q8G:>:Co'kMA7sX-#N#&&1_I=cCb!L#!J:4kO7lBIs?1/=3tA:"_[Ik.6`G+QEO#o-6.iBp3oG:Z_MVoD>o=.
%:\SUq;S(JUc5]Nhf9FS)a^4iV9'?_Hn$h70HpF:"S%HnM6hA5l877i+n_1H8EPse3f+X54p%5P5k.BDrQeVJAR;[0<D/R)4c*t7Z
%2RhOs&+MP:_2<X*\%*lR=Z$4^@D:(Tf6qPRPg.gjq)UHAkN;*cI%?b1F.YQN:Z4VVT$i=1;J-L%68rb4bu_LT\C1>JX/hRO?CsnO
%et;eem\u<a9XktaJ.0%C\X6JaIipRe#ELAij($BE&dO4CZ,=jM*TcrJ!#`Cg7\=<\:'d0c`t.>\Va#U<&CK$tPLHk-?iS.l:Z:&t
%?dGWpWV*f-Xh0EPdKd+>-MHV![aAHdn.'IT4ZVunqZ5U@]p!O&L7,/r*GW!k"F>IpZuk&dkKB&hoBkea,XYu3oWAt`KO-+<k4>WH
%ZBS.qqlKd+=2"Lmoctf7F/:sJG+3@hG&[*Z]B\:,9TlmRY$[`i/uL>En`03Ep,@,(1+hn0S4h=fG+Z:^gUIQ:n)V700&B;0UX^`9
%26h-&0%BGSs)"LBHgpC)\jRjX"&,<,17u9?j(\@!=tK8@O4b'oJJWV<*i:eR@D*K:e3F!!c.1orP3'%LP<Chj8n7<ufrb9b2XP,*
%mK5<5mR=/R=F$3ZVc7<(kTGhYfd;%7L4$&ui1Q((-g/?rC'i&W3d'R@FEViBn'k#jpjUp$8hunF4LE-fTV&YU1[9VG>p#rf_m\?R
%;'5^bpL/sArFq%EpZ22;k4Q]6'"%[)SWM;@])-t<5.)Zso<Xpi:X6EFA`gmMNt7P)59-RLjnWlNO0pedNe_R>3Ih3PqLLDoNJE!A
%*himb-6(`AUZZW=a5P7_UUK/)=2`R^i-p966o3HLTg9;SAVA_u_0Z[EAijs>,-ttT5F_XO-$RZSs#=T!Pm7h.1%,"fF`ERO2Z[LM
%+:bNgk$Pm:-)9^T[04Zurc[%,mC/O/=pEk_L%oojMRZs[TnCD,GW*CTgO#$@B28OSj70cU46b$l^Jd;^/pI<rK1nD<gq*5_D[-gu
%\VL-opF63;"AI2"T-P?E@4)ZBDf58tWL54%kQbft%ju*Y2;t7rU4YD'T:3Xrma^n)05&luoRH5^%,8aS5fV'j&*M.9R-K/@4h[oL
%Ag8ARD7</Tns=QeVr&Ji)EDOKc!k!kLU55(HC2n"bf]:6<n["<P='T6!KOtQY>6e.^7)p7Y_R#nagjV'?"gJ:?B=t$Sd/[ob9ZK+
%P+Gr$Rq@F)DkEYocSqBg?*A=,jl<.=5#MdV8V6Sici;fXhuENCAL0^</3rk+QWKM\kI2"sk*aAQQTq'I%fbYNO1p!?hSXj@p=G3E
%Y0M)mns!M[Z?WX%Fn<Y7S&OP4J(-$`qrQk!hNe+V(16%89(pST^Z'23/-"iuZg=$4Bbl2&r87P+/7.IGJ+q4.+$FDQF[n'1ZfldH
%O1OQ(idu4.*4=)&JNO<m5>(LNBoe]8`3I\b,EF3Jq1`2sbY`D00m[UDorWWUMGRX+jM,iO)a3OKZhDt$Ct+&fI*g[JXb2Y9O2CLL
%5<AcE_^GIEIZ8LBaZhC4j"D35?D"kmbEgu$k%"EoF4<%DZ$+M7\WCW?O`,C'RjNX)%.^Z`o@,gJjHFfcqm5i0Bn<`BTWPcTSb7p$
%4;"dDK&^?9m_<1^oCK(Yr/qH("T6(mai4K&&L/5,Ht^*E5BO/EnV:fLI$hls-S'80#M/WjhS^Yn2JF;S+PQC**q0`()%4WD5F2tc
%niYp7c0ZI`[W1E:_\%*F2dh@7d/*:MGq#l1[MOtX0Tc#<*k\rMg4jUgDtj\eqMWmDMSjH)k,<9:2j!(+TmkQ6)&M&4E2AOoDW4OJ
%8JCDoo,?C<9Qp2_]S^3c-[YVBf)+`:#I9V_1)l\:^NIo.ohftJATV6t_>`1R55safZ?*a,q=-spn];jhhu01l1?tqo<,nT4-L\[q
%U/`r:?"[`e>o/Qr%o29:@f&KJ#"1;`];%9kBe4@7U^O3X,V1*^\&H4[Nq7[ClgeaZl7DDSgbL[73%lf2Gtp_RKIN]N*4=17/%_Rh
%-[ib:NKH0/7j^X9OOopLlKG\$EB;aFDY3G@Sr;Ej%=5Uk61^Js8<o"YD*f1`FH*Y9I4A2BDGl,7s"S:,drYe_mTH$GGFjnt"C4X1
%6*!U30@/"Rq:j:;"_[CB`r'8;a6]59l8^_&Vm;.R6jqdI$@23VbH&J?ocAKeY!.oV1OeA&Z')G:bTdjC5=3M`4$J)mmiG:'Y&!W0
%8GTTpbDOtbeW.sV/cH9>??;?#kO\P9fR/kZ`SWl!K#qcEY]VkcF_4fW8iDaF$]quBA?7McHCJT@p3`H"-p[$(kI<_IMR9Vr74%Sq
%bTA_!G'lY<8khgpM1lXF<ItR#O*!lte!fgE_%$$VdtAGZf4Y)K)@aA")EY/>=[RnEQdFjL7+\YOq.8:;g`#3h4[<I_HS%u3RoaPm
%,e;+H;:e_E6eGK^\a(JcHHQY^F$;S<[Tqf5/P15ERgp4Yg(M^9JBR-OZ`MaL%-0W@M]'TQ2c)T<(aFDSVP;>!P*2.Xmda.??;J;Y
%bLFMU^Vs,+jUE.!!/.G]\\d7qZc?!/Rl<0qiXBC(P/h[O_Z0+R^6dW6DdIqg^/57X-LKe,fACe=0,JP6T=e;Z/pP5-'-;f!r;G3a
%_lhY"RuWZ>9`pUR@p(B9>&C[.GmVTql/fJ):#iaj>as=N],1c#0qYfTTr_@T>$fb>L\&4f=fl2YkHS!/C6J=s\RI`Ib!DV#F;qIj
%@lDf/2"=>5F]M2Ns/*-U!(`,c"H+Dg3B:-o<pfXodddDGTfo^'fWsc4RG,&D*gT5O*8>k<7f;ktM7@-G[G5l$lak_gdkuCiHe?nd
%KE#61F*WWoL(0T^Fa6`RjjA9tL)/+@G4a1]68LB%.;RqE*jFZU(4*o:aX:oIZb5Oh=X/&D%o/IPJZNipfl?KTdGp'*FXcWnb9Pnd
%=fqS*G,!cs0Cfe4SS*kZaKdd5>I^t+Ci;%MOOMDmb=skoA3o)r[p^]Rhm6%KQdjs*lg9(>LL$)Ce)<WZ[l5#pb+`ScGp2>9;I&:^
%D:GLgq(e7,Ia5,]if]Kq0Ip(.FhIBIgi:a<[0b]k;a5Pn%@b!>\iB1R*$9ZZHM['hS#`#Bn##C#4&(b@r75h`A])#n/\W:tV'Oe.
%pd;b7kArIqY'`dJV,8V0en)=*a^2&R5=./02c];5B`5>_a_fi2So+%GOVl0kgF:aJ#9;76S1m<+dcbF,](?IbN,^fu"*l[@fD[qf
%jFd23DX3*]I!U0_F\^C/I!t^ljn[NOlW;9Y)tAd`c]cP=kNh9JHbJakQO&3B[/<p2BAt*o0)qQ#>`YM+ZTL77![.Cs?fSja\[bjL
%?Zt=uT*[Ju*pLFGT=t0[oej1eIEL$S(Vd][HZ;@NiVTkYbW!]ecedM`F/B.;2M43Cf<O:aI<YB_?,Le5WoEK<P3PZpjB_]<]=2FN
%ZX[uu/C'9pfs1;q3>U^[[c1BtRiI>pMdnI]P%2nmNK2!1NAnmF3>UZDmT=;U_1sPkHTN"\1rj&F3#:u_h$oC`c/08V@_T)`cf3tE
%(7X_N3u6'Va("ReN#[ai%igMl5*!TAeZh(TaiAHR<\I`^p[HkEHMH3F@o47oR"e="V-gL0IROo/3>Nulp3>S0`NMgl-[nK?3u3=X
%@khe?/;Di_3'.ltf!3:*Z?cT:\MA4'AI[o$90r%AElee3KgC`bOi)22]T8rE/0@'J*t%:8o:7ClRXBMi9e/`cd"0Y-ijQpF^?fG.
%[`H]YmTc+.lLKKrTS::EU:djc/'iosY3YeugRLI](k&p;$_"DbQZd>RhQnmX:f.^jAFb&M)q7DL40+`$ap[3k6!q029FTXR(h4r!
%d+%Gs]:q?l4QWt=D30P%;h\F\!B[3rCq)Gb':[ckI0#(iWXIh9eedP[jRX%BkF^kpU*R=F"G`Y/UZof^Dg`T5X7CXqVN`_H.dtCu
%m?]HBLiT1&@6Qlu8JW<+g0&).>FLOEHf"Yrjs]ub4GGmfBP;EXL"R[$%`7/T(Ne<,;8rnA`b-Nt,Fo9R>A[D_>_?2C6<!$\aY.%;
%%HlKHC3Pu`ZA%Q"G"(;47FgMk[-\=r+;T^X[YQ?_oo8[k]+"!0pBE8\o%]GSjA'Q2O;k,*^Mp[e\>4Rh;cY@`%kO%+--qdB(]!3K
%i@iMUm#&Q*g7+-N]G\=Dho"e_NVu?0o>irI=C62PQ%oR%V&_OZKCt.&VtB3KHpDS3&"en`Ufhc8?K5S6'sm>_ObTkt@[fK`o/t/K
%b'gU_3o0IbV(hO[P8p0UAIT?TR^!@mimSNkBgcn$58\BhAV34E0$2fT/lpkcV1QR@A5^fZ\?AA!P'I@W@QHPT>oP<gBG6<hb[s?X
%=b%*,>#]N>>^6FhDLd1MTt%1;8Va'8KX%5e@r_/q<V=1s0WiJrWc-7HnQBqPWk%uQ5sF72\#+t#jUEYU;Gc/T.dsRdBR^t#7qK[$
%7He]+:c$A(,0M"+H4/cX><6(1j`&:.(aCV!1c)+*fg'IipL5[0a/`H#H<\M/]+AhHoi@us@9gJKpbG8J-e`93b+cE8g!4j8G2SZ3
%qED(aQ%dLP=UtfTJ^^p/6RO?Dheeo(HL&30TA79rPGjf@*16M/!u!W:3A*&,-0D_U*1-G^iY$-->bW&TUUZ!7&sk"l$3q00YZp*"
%l#G\q@<Z^J/O'0giY&6/#NBT?$")^*mA@D3jR4-crN=-d;Me&Vpdfsme1Q2[@%u<eQuJMr'/WR1*11F.':9&h!u%GlI.4p>/.mJU
%98%hU?AT58I:.YBN?J@I94S*Q0TAa7;kEIXh;bKlQ-b3M6PFVQ:&O_3K\mK4n8i8P%S]'1c8.'cVHR8p_A(8Sa5Yh<IFJ?$\<ksT
%LFljn>hUH`6+ltp)RamLCi>f[XA@Z@4R7%cFnPF(2/=Yfh9Z]b]tapi);rU-PRg"G6roOXTT9TGA\J5Iq5YL:kWjQ(C2lp*.kNk_
%@q"4.WMtoW?B,eZZ'ffoOiiD@#d'JuclAT*??VP49/fdu6YdRJa=AMoTf=QD=5(+$6XZObVFee,\$AYH76#2>5b:]8r0lW:_XMUL
%RhQX-7dW2@FYl6`UY-9k=;?$h7D>^ONlJ&>hR6j@p@U:e,d(c;@.V@iVM-A$B-jk24Wf\^CHDB3#YjiIpR12ib;H0.kG+F%RidAF
%Qa_<Ch"0"OHp$B4:mWo+MrUr;Dd.X!pH(PX]thM:@J"(<[Oj#EJJ2!%0piMocPfgX"rdD.NQfcM`6Ba>AN-d*r9jC($a5-Q6KTq>
%Oo3ob'::^A(+>q4El)N0`m^9V&tA:?9oim20X#6WL6Hi5>EA6#X%lp/VLpg1,@aIF@%%&/)(FSq\)RmE;j?gPQuO:lZSGi?0S)E)
%]5C?'Mbj?JlKeBs<3tH((I`7!nC$nEfl6G?/UA6T[mnoZnSMBh%mXRC::4b4XnfnWU?`"M=A>[XiEjgL)HF=:&#WaIql5GCda.A7
%HIu7]$l^j#4ks%#S9I7ZiS1G;-#/\3Z.,o^a))d:o3(=s[`UWi[#Drc_97.,/mt`tego`DFCh+2f5$T^0JT7rEEb;?5/c1/S+ZOJ
%St$$c7kp&[P4fa6Z`35b;"RV?AlX6nX$4Z2[#)4Umrd5kXei%Yf%s^`:9*tCLJ[+E$:6.JT7A<gZ!o,!9+8d6NM-Ka-&/]SL_<>X
%?l2;2Dcd=?nDUbtb,-RZH,I!;b"<V1n8Y3OIMbNDS"_=npPYaK[lK>?,JFdZM&Vtl_/5%'C^Qo<%_)j)#>rX\>C5[.%&L==/V[/d
%)MTu2%I:10@=&EZNm^N.7:*D86YYqB(eW]*Po*-G'LZ)2Q\/^M%AK*#Z1co%-qZ^&Aj_2PU*sg;'SjA(QToj3V;5D4&W/Ah=P]+p
%=QmUm(T^S[KM>kh[jd9q[Y.N5L+nL2T2rfWh<$DK\B@pj./fMDaueB4N7*]pa''<kb7<>F7Z"!s;>Thn]pu:N`<1lmP"%7_('p5V
%BL_3\-p`J'FS'G[U4a.I8Z<5ph#FFq'>LOjPZU:$p<dY;XPFLU.=$TA&5%dB%Ve)Zc'9="W#o&`LlPU-jC[@?:TeHJYpWUj)_7Lb
%kI1Rj@L]"&PoZas@>=jtkCs#%^9Su$MP$]``aO8-_N$=L_P/h*$9P\L5btWZ&"dsQ,0&F2g%E4Bc(A8lm"bla4Y_D,oL-p-Q0='r
%JE,ib[89r!-e5+TLn6Gl&j-YsCanb5\GAg3a7$M'(dHD9J<fn$[ip4KZs2N;mABYMg(6J'rh8@"Xj^+$Bl=;h?m[1a0as^#NFa6#
%Ea&O_QhZE/..?uZj,"jh!(@OU)*lm5]XqMNjgO^i=0p2s-tLaRc'hN!@ZX8FNg[htjFd3^Ok&<u]QFuQlq:Hq:c/W=n]fh83-BJC
%_1t?n9Q@V;"otfXe`U1(12JB<f"9g`I/EffnH^(C1g/..Z-P<:EK`9kEK`9kV:dWrlgK>!+ZA0=+_J=V?qBR(Y3TsEiq<$dhu:@7
%6bN)LnGkc>5.,[s_mX8ZraJ=aa%l!p0"G9\5+ArU>SL9-`_Z@"nL)PH-EY%t\f]NnF*9q-lA!M%-m+BCSrs')INT-Bf2jn4F&Mb&
%e3,1%Dbc[kPIdAu;YQ,Z4el-*.+U23oo*?CUKBa_N:%S&HHtaR4YjUHVfOY@=E=,@L?S1G=>QYWp2o:)C9VYm-?L2?/S'-uY6$9g
%'8qO$s$QKQ6Kkoq4tj&qP>'Wm/.&F_GtA5WY'O,BZ90I9K[8AZg]e_/Z8_jldP82rrUA'W'6HsX0#m<T"7`]p19Qbq3tg]9,pHMq
%mC[m0"cUT^<I$dTJrbiKf8;(lfWZQH?BZRmPW"NW:[hL74+9][2gfEae<]?grG#,7XN3R'mPV['9'0R5#)t9J_TI1MY,h2Q5.fZ*
%3Kjtb',_V7MdF]g.`s'^1@((Rkd-s&H#6T_4L_UM#!5pK)SO0!S7ju:-u*#E?hjo,/<!V:^FD`UlBFfJne)1gB%1GVC&he)D7'fR
%_7f\W=8M8@j$(Xo)m91sQI\Od\C\+9XT-Mu.M_`=G$Vg?`o@C2p_ff+=HAQ/;BL"B_P/4i"3J,PN6ucg]BP#PJS1aNAo%&0#`g`&
%<SrZZ<A17chh!'%K+s\@`@NSO)r*sjkV@DK5WELF0-@R1J*inAl_AD[)Pr"+=?"CAML<'6#4fDuX^((2MjmK"Z8V&d5MFj/4h5X8
%j@H$iK:/aBf7*O-S%"qhQj@Bf8=5_P(6Hg7Q"MU+i*In:brs\NhYLD@[.%:CjHAcXO]r,FC%lFnF*0hm(eo$S+3^1>gh[kkB#ADi
%MM]mAYA15lM5)uH,92)9CG^3Kj3kHtn@5l34!(,&3$-Cs]H;N;EmLLn0MPZ0Yt]"Th7%Ylf6ml/l_W:AZC814pjC8(:'a?-Cpf.1
%PsVsZciP.9k/m=V>^h'm#N"MR%5f3WTi,XCF1;d:D#9NCe=H%i^AWIh%>;)p("4*^^Ce9hM>O$Do*4F4^':9.jc/?l>2t54rub<<
%V-Y\;n^I/(_WTsTEs(CmU<SVa)oX%YI?r[`,o5$*?LKGqpq^N"WqeJ.IU)D>N=Rq&P+6Z/.b^lZ*PO23Za/4Q6K%:*,49_rNL"k6
%qDqUQE$,Ca?`9AZU0,W9\$94-UuTp''5(!uK$oJ#NaL1e%Gr'0[:.UJ]$c]W.rs-;UpT,8bY'/DX_M^D$nNKgg8ln@1bg)nV$;tN
%Y0,:(7`CHh@;*%W,qC9HjXH.^-=75!MtmgY^]c5;W5keg]7,$b>e#FJ3!*un]QG_Xad9NeP\-lAi__mJ[Csu]mr^1D_9Z%25?I_/
%p,3Floo6Z0P>.`n9.[,.6!%<RYDmI[j'(U$[&OU1mj^u79"KTO)',stfks\+fnnmk(ZlC[[V:hl>3)e&H_]30Q*4qqDaP,.<d.g^
%;mq08T3D&^CrWY!#Y/aqjb!d3Y8q_%I2l#*&.Qd'F^(r5m>eZp+Q]<u_P#9Y^?Gc+Dg`l-d72-k`R1IR/f)m6?rnq=:b&uTS^Ru&
%aNgc*g\#_bm^X(%TjPlk:.0h:-Nhi,Xf.iAl_&FHp@lD>YeelW()r%72flEdEjO^^=e.qs=2$W?J"n>8Xsn<@j$jufVfpj6<%]LP
%f_Q3FL#_,3aSW6_^@lBt@$\#,"_uD&dFg$l<jdR4e^A8;=3]GCI(j/O8!0]$#mMJViR7PDYPV2+jN#,c:D<5Ud9Cfs[<-V]^luhP
%=H),5Ldas4/k=j/f.8N9*.`Iu#Wu#(dZtl(].0+9HXh,W^rD8.K?4^M&E(#S%J[&PB]-AEhu16=hrZ283D!UR&t"jcG+Bn_[;9Q4
%8HLm+V1Qc^WZX'L/:k54m*dOh!i]c<FG%0$H[k^5i`A!3J.qJ-l]uE?>3[iD3\`9;0M@3*7#]Z6'o8tF+Rs\c<F4N<V/jR%\*,>T
%ijqT2PqE[KS!jDUeMB.Wga.&">S2W/@IqC>o5Lnc;%:d@Da'c^AldA'Y47U<)["LqXG\7E7%"tIH$*kJa*t$eYjjk0Al=1oV'oYC
%;9XgS@et7nEdde1Y!nao;%CCb1tSJ7^Ro5C7@@pgk$""[(1hYFc#0E3br!&#p<_&@f:j6c/]o*l34@,,j-=&7]%'BD:gQdl@eI1Q
%P<b*7@4+a1a;d&oB(?>`VCiBLN`dZdor_ap,GQPe&XU1t74ApWbb0JdJA%"IZ-h*l2.2/#ehFo1Yrs:W!-Gpi4#eMqkkUAl$=TmD
%8ksCEU#GREWS"Z<aBG@Lg&Z$101pClS'"LjN&,3'[\6QaJ:P9lH%YXhk4(Aa31lPR*09XGYj="'AQ*$jS\kVPh$8]l`k9F_^TI)7
%MiMTq),8I,@,MbG#fE$p_WHVZ6H,(Dl@YT$k2QbdAuD,A"Z(*o,5#HnWMHL.aD$0T?^)8*-o]7!-hG84VL3SZ;S/($//_JJYL5\5
%$%Q/mRIX[4e7+&E.V"?F)'C6]af1pk`+a4aC4://@]em*VEnbHWYrX8OOM';;JCT0$SQTR\4F`?gaO$jP"i!*@r0oM0#XHf-Aab?
%[,Zp]qlm2CX]d4Y(GPii<?EKKg[u?@KI<IWl6o_acqT`C(-nsV;BN5#&#Z0bgBOVR:+oh[WBcFIg!ZVUZVkUK6$<d<.AYQ=qNYBe
%n?c_n=so_hK86c;m)m5^#ja/0?JuV(c)du+"OqP0+U?1\(J7_?Be\s\\pm)p0&UR>m=6k&l0+92Wg>6cin?"a!@6X`5ZpH`Ah"[B
%]@mB!C,E<3;,P_UF1X>DrbZH&QE(@.\u?>WqVf?]*AfYR<t=B*1NJE'd'rN;eCA"c58K6C1Y=Ol^"N;c[%bd@O.E-RVFmJN:Th>I
%P^B4.KkIQ?j#_sf>[IlJ=k!,mCfj&t%nE`1:6FPeO-L0GM3YIc_DU)>L%/o7G'\Iq(E_Q5@dFV<JS2Z")6nMcrjHbJ)PO'a_<FfG
%"hK"J>B)ZZ[OOeSPphM.0g__PX_CMuS1$n7PGM4d..rC>7nrO4Q4l;tYn2esSBs_hn@W9;QQnPB0YYt6`-Oh\=X/h$#tbq?efr$9
%7>.hl%+ntQ&Y7OaQ)na<gS#\9q'AV=O#uCF%PK1d(nFZHJC:@EjRWTJ'@4.HZ21lboq"GpjbdLU=k05>:DI4b[03082@eEZH9c&8
%HD/_&g$pOR/Nu$TT__0"PGK0L.q\WdUlE3U8r:1]lN(S^!<n1NKm.h';\qhhG#!1GXTqfh4&B]iF6(LF7>CA2qHFFXcu0;+G2Iut
%X;@UO5kPY_<`KVXE*cYgOj@Z83M9b3V5!l,?]rC)KVb-aH9dT'Wi3UrGo.W"=jn+^'SW$hQ;lV74/6Zh4'/2cWtSRVTT;NDO)aKF
%)*a(D84t6"M.=,3#fuN=c/Iq9iARUSPC]@?(lbB&+=Gd[)sd$Y'l1L,@W:Gc#ph.#5aI[IF^V^4#*)JW5&QHh?<[Dm&ZZYOq/ko/
%\`J'f8J/jb'T,^W+b/.ODWThZm`?OH;[iH60?Wg<-:ZIfQ/&-<[?;fq*S+]!*@IVHSlpA%=WC56(HAkaHpVWukXea6-Q(TAp9M+>
%:5@]kDK&n8lGJuL4)TsLhH[bIO4<olZ=BcuQmk+/b)VmqA#AU[.6D.aNg[1_VX2t8OQ9*g0iN6H5"NhV>>sF+oJA?t_)'?9r5FP@
%"_>U0,p0e_%^1$(G,V5j1s,P'Z&.YTcWjOYnW4W!a<lJ/S\Mf1*),>$asM,_qi5TET<_$NE;k1pnR>#[@oh\E<odc_PQ!`"jFd3N
%H1<[Z_j^Vi5Oo1oMM=,CISPfne)Ek.5P;DYhYf9%MsoItK=(F1rA79-+1Rq$H(Xd\/UlW+8mAr(&"+1TG6bljIm[E;AdF*u[.q-;
%IUVek2l+E2JSl#0<*/\N+5Htj^1m+L93Q`3Jf:H(pF`E#V8`0]W!R2.EGA\TGU+BW#8JUHK2T=t#M%YmK;r)ER`,!8T3_1WD>rmj
%&'>lf%r0G=ikqY#pb8VbcY;o2UhGQ-(8ITs?%5:>.k&Sh5"9jeJ10)a8.]T8Pll*9<I%X.m8,ESe76eQhJKPm5/K!sm_S#ZUq^2\
%:W`o[ai>IGD%ee[1:h#IhLd)t[a4<t7'A[ek>ll?,0s;XRk4$KH)l=Xdl(*$D%Mboc\jtmXlA9&Vg!s#Hr8u4D*A0aod)V:>qY:*
%fL<CNr\7W.X4<k\jO.O1RMgqY+iA/[k/)?l'U[Bmq<7K%T>tU2^d>g"ImtBlaSXSG.Hf,oZfD1m6#O`H)14SCBSc6JC#fB3`Y<+;
%ZoXs;.H>%14l1%AO5@Y1qpqkY5//=VfQQZZ_B4lj^;JIl%J%pDa5:MoI2jf863#2k=(1U4%Cl8!Dd&Cp4np^6^>>FjX(AXe#)fmb
%"g0Hok;LN$3Z#p7q_r=,.24OQbLI%fO9`Bd!2S6.X.+.iqd3=BjPIj>%ZRR3#=I:LlN>;?Zc5_&V6s/?\kR+R?Q]N4\WgRM36J,2
%J"+J(?XU\FJ4/co>ml8u6ORMtZadXO^ZAUbgemB9.;51Dio:=u`c7;02=m2o#j'-X1"hg?ERU3e-LYm"Y.U^mQFYiq?aQ;?JH%1o
%7MZO%NNUtS@l6!<I+TPPj6bkK>(0gFnWijA(o=L,jL1a<&OgQiMHkK=C9cL,9OSTCq5Bk=j<h"MNA5U^]H?<Rnhi=I=Uc=gUW)h6
%PTHI#qF:I4*5-u0iPihW"e^Q)G,&;BbLe^TH[jRPJ9VTfK'u1$p>p[FWrj*DG&0;@`Q2/JO5A`CQlk6X3^,:PC1)_F=6YRpXgTXD
%_PgK1kl&37[cO_E5H,Xs`OP,4Vb`;1Yd+UnENq,<]motE*\)("C$gUYqm9WNE5&7?S)pF>f2&_sEeMK@?5mHi=FJ^(%"$(MB#EW7
%eT@0(?Z488D2d'E?r=qNeg.DX;Hg=T06MWBCL_Ko%JGF6lWXsAp;47R)^9,7YO8o[Y9,BVbp!!Bq-[GdCj*t?NbI%2dRLM.kgd.Y
%%/BkW5N\X=>\^",ri>X7(X'et4Ss-<_4(Q+F2388pb+h,JH(R\2rii@3-[4hhMd(Gj5<)&JH(R\2[B9T!!dF1Zob^?bPG>#)RjG:
%7:V*J@PUf^b!Ek$E:`!FI^//A>]7k-OVIjH)3:Oq92r3K[dAeL$a=,74p.n6YXT]d\+rR6XThk>hAY";bQ"-jOGq1ZmXF'`mI,[&
%kj1q?SiDFOVfnI5d78nCb6FhU9;J^G_jdNdHH0i:<[0O[;'VGD7-l-Agm5[[g@oX'\'`@WCC>Y16#r-gW06u(Jb6W2E<>?c/CM<t
%6(;Y?`h;n)'7sW.9PFJ2,H`h1B;MkLV.ir$(Ii1<dXE%r1lg$Sd9LI^G),$;H//TgT)fKWpFMep15WMUa^d4nRnFK2:uV4.5O9S%
%I8$=_TD7R/$#dg<PV<2TM^dXb;g=^<Z_l1$"MGETQ*<to>N3lqK$r_k/p[Cha^TcPh3f#:BZ^PMXNqeR\S3RC($`)0Tq0cX##Kfb
%)Z77\TiIJm4K31o#0r!AiSsS,:P+r;a,-BHfk:hD7C^dS?4PfHGr;Q.!)l)<)S&JAO5!%(-VPfDnUSc8HN$D$%%RkrQ[H5P[9bJh
%JL41^k(drKpV,(r9RQI%KK!rgn]4loG9.=Pc1e]qAp!P7:@Zm(TjjRP`3q=f_kF^q7O=^Ah!/+`.1tm*ksGZXBU3YV+B3cZ(ETSS
%CMlDba&u3+</?9e50f.plBJA:=D#>Q<2E[XQ9Y[]QZO@J+1dl'i^AKpO"H=f=q$?:Ha+Yndi%(&<4a>'JeVU$NM]*G\S(T@Q)7Q,
%*jC5&MRR>]]0%FS>ZA_<p:QDu>>/*?OL4?ZG?Ip;q#IhQ;?.i+nujtbf9M\e!+q.Ab,bk=XWGRBU$\prT;%L1q]T:94=ioI[=AOa
%"56e@jFB$g<KaO8.HE_hb':$<WKU6?O`7.6]f])IBaW9mSt&Or2LlS"3,ULI_d,8-NTQn]+DCE,lBaMC1rkR;R*cm0qN,/UDGu[2
%M1:In7Xe"SW+;YD7*N_i.2#@9;^<7kPG:37j61A&R\P6$GCM9+mY5]1^F<jGC^D#j9i[q#q!U1UeD;Qd'IHn<N^iTUK1<+6DmmH@
%0mZ27]L6\L5%qmB`d1@'9:9J[Tur*eU\fQ8Gj9K!C?54P;*0PmIXB_gD[IHZ3G^O-NIKK`;.#hQ%NG*3Q1tnoZmO&bm%[#[0M\Zh
%7#gcZZgsEI/G-?Y9F;[=S$I7hk1SB"2!SR5J6;8M4AAme7M_,Q%F8T99CHPlP?rH\qs,M<AD;5cIo@>9E*'Y;<jUp\);pAF&YnEU
%P0@it=K'>G\>),!5(84L*sfpLAM;@O[W;A:V@Zp5f&a7r/<c;NMK+C6V%(_Sci?9/cIb<ijF['!#BD>Sg1[K@i8\b#MK#D/]c>Tt
%JJ]0"!-n95W#5E,+e.QNT<MqG%I_?/F[XM#&WL,l:)=Bs+=c>.5+B08`RBk&qffaJq!RmVF+6>IklI@PK,UVLF+7"r1j8<)q7A8f
%6fc.t)VR&/]_b<*;I?c(&ot*70*[\q9$RLIWiPJjY&#,:Xjct"rT*0sa,?/q%C+?A!D,8GPnS!W,kc;e!IB%jZ?8aPq]t>:B67%7
%%L;2q-$#\Hr-<"/1\?[C(Bg!!lJ6[#Bj`g/C=efcP>tIq=+oVB%HL?m,td-m$4:l,Yr$YeB!Wk2p-_gjnFuCd]Xn%;qX!c"\,4i7
%Q.&#^r0NI/qXP*q/]kbUIJtl!pK'TWB-+^H5PjI4QWHC&(WY.rhS*=omH!j!a6!!RX6Z+qlTa8!Nskd8k9oHUB3Br'H$sk9O8_<:
%o$`:s]X^%+I"QdbVsDZ@9qU;tr^C/5\,Bk8E*0c8GN<-/jo"3%c6)u_lJ:^j[==Kd]R>4kcNi9/f^cDnU:fOWX3:Fmf:sGdmG7T_
%=^G1Q\"EY>EMV'FVf"U'ml@)Vf5GP23*V+FlXMoDr&a&-s!Rj(+6^u:A+Q;LGH7?[q*2cX2o!\Z(KN`W/E5mbQN)6#cNen?gHrUp
%(4kB0pj\@Xn]e]4m;#u.QN)0d8U-k-gW@4lZfKl1?dG'W5Q9lqs*]1cb9d1C6fjNlo97Xq=Rh[2qYK?8Mbh+3p*c0pVk</$kN?E)
%o[E!g+Sj46H/A#fp%-c_B9s!O7)XS>UILmOe)m9NH\7C9rj1XK[qDVV:L.8?I!9b?mJ2-;/3a%/jSEKC2lAKTop`Ed1cOj\kFW/)
%jE#S4ki=;\kYGbNo>Aa,^7T4D+,`qpIWfeXJ$satq,c2*hHXFd,Vq24#kCAhh0cOk]uijm9DiS'-[\*]07QrjimY[)"n^(1<IT>*
%*>Wklm*jqY>C<mS7%<ouR,<5>j!.n^h^gEf^A[>;rL^f,jtGihoCjd7>:>L.i[jhrUG'A!2#0@2Y0Uc7N;nkE,bH,e)gj-qU!#4;
%^c/nkA8>.rMQI%h@tP\%POH8rIn#>872&SQpkS<%h\Mj0O'$<]L8e7Ke40BST72nmpTm:pI@god`g2WS*6lbj'E*FXk5=:Aq<M_H
%b/gXnlH1es)5cur[=@>^l`\?Is(oM?[2<hSeU;CaSpte$hRRcGI`aVAF,#@oWVHOH&anP^^%&T+6oWSs?+K^TgTi)A6M=I_Noq[;
%#Te5WGtI-;Q:I=T8N&6W%=bm)9nrT&pKNcLBDXu[j]AWl]j9L1-@EM0+TME<r#P5/=4]scIk<U[`R,WNI<bW'pp(8[cHe,q=0gc<
%[`GXY]tO6:c7V&oIpV!E\]5JQO+ITu$LFN/"cHhhj$1"iUO4Vg332b.<UIm"n_NZ.g)ik&@;#P)r`=lp5Me$mr:BLMX-YJNET4t9
%d_&os*$3'3KTk&+E"_>lK/E2Q(5OVg=U1^+gToS!dEW-[d2.Q5A%CYAcFO:Fqu<>/i'GY-qp6#S4.H5137[g`J,\'joGnhps2\8X
%E-f1on`5J+X7-)bmJcrDI\3+P4dP2VhCa8@+6T>AXI6_2b8U1d[3g5jh>\L3]Do?bo3U2K2_*eDD]nV9eASNUE&[/d:=L8+>oQZh
%6ZA9OmtHsR4ZN<E,OkeL/)6RHc7VoNfj0")?ggb`=)#oSg4R,-5I-J2285bW2Fc/=H:pB+;?kR"7`Djd.&Mns](PW3_gHHrIBrVA
%agNU8@-pesE5fs,PkBbDEn@QuWQQfsM3"qD5;40q7*<gAKAAI\^F)4t=cLc,f0aYs(uo9/l\E2.MOHmMp;TO1eO`!p*up!J?R2s6
%p)\OqqT!cg+69rAAp.)P<k$E4ZPE8aiqWH-Eq/6(-HEh]I=B66S+Br!B2%kE6kl11o;rH^mROBpo=YVTKG88B2OL'_:SuO]oFH(i
%gYm\X2De)VZGF)s&9&k$@Ttj.X9g:O"AM;-@8"PsfKLkSM%!%5%csF`o5iI0jNB<8`W56T%u5;DG.3EcIj3nb4.d.6ClquN1*A2&
%L;jmrV/'`djoGhV/`RHBJ+h`?X19KI(]Jm0>($ne%g'"AB(!U\ik>*-!<ODNRHgsOEN]7u-Si.>m\ONqkL@^:[AMgnTsWc'1,>++
%s%>&?[,b?2;`]m,iKEn"n<=KEX!Q,h^<-OH#Z6't3rU>Dq7dN"U%0K[>i@`X'876I,Jh%c@hnPn%/'("Vgh'keGl-T62aSgK^dm"
%=oJl3i/.KS$i_8S+9_ZS@tjpu:AA$n;Z&5Mr3+V:r4fK*Z`rqVi;$-UIFB8L*`ZMceQtLS_tej74;VWIfB9&umCu?MJ%B8OWor"^
%mF330"5cMiek1Abd!gD:D*MAZ\(bK#Oo<.h=o%,Ys6\j9.E97#+2Hak(]X8krShIWRQPqs[*-kKJ*M:\F/,lsE^FR!$ROi\mBnu[
%9+;o-9AM$:l%\P0i.3\AD24k08[n@]\QZrkS$mtA,b>U,"s%Bgeh!/'h3Ppsj6H!hH@l(pmU!Nme%b'mc,7okd$gK^:jB[bVnVjq
%8p&g7b&sL?[[3#X\uY(2^QX-uf@p%<(KZ@FAaGNuNb>F,g/B0L$jRTY3#3)]PUI;d.7=PKG0d]_^l5kcC4Bo6ak&nZV*O\"k]kf\
%.!\FR)*CEWLFA])Sj#l&2c.`AE$kL&!sF;)^`MlOD930"?siWT;/+:o$Q?B2"1mX!3&5<!GGToo&o;DV3s,SZ]>n+lGj^KV)G5bk
%O#`<;^m@nmKZh!r%>csRoIl3goI\K%6GYBoW''&f1K\>I$E#9`E=M9"n+ss-d9m%A_h(f[6MD7O?R,-c#eoJVg(&k1R:5lOR>UOf
%*R"WZHq'acUNdV*&Oah4KOOQ#+tchsilA</V?EKtkoYfpL1`79JQ$:88Gc.iQJ)dZ,K(1o*20uL'0+XF`q#q_-f@o!G(Z7YhBl,?
%k![O+$)gkB0V1S+*E+XDn7)o#.d2_O$ln@J[^Ao9,oiP=B;Q8<XQ_0=6]B%EeHMV!lqp)Z^W^)7i:,HV$A,IGH.'M2O6g15MViBl
%X#%[X"!]ilU$.>iP+JT)It_dX4&2ju,*I+.C,jt.j9OLh\o-D-+YAR?=.9Y_54gsq6"JrErX>%h\2Xd4G(o4\2Q^(F"27!4QA.>.
%Xl:(SM^ZPW"ptbH@r7gh'=(F<+\TT>,^s%.l\Yn.J3I>ID`K*([%&i:Tq?G@$;=HUi4GhGO2o8E_8,7;d]bq,MJFsq?2@%6P;I<q
%q[B4LZ$Ic!]#nN_"[ko+C'iKi0mY)[^.ldQWF2EM2Sgu,*X<&b)!M[MXA+JO6APmgKJsM8F=8nTXC3<XE$2Q5`/>D`,Ahr9k6%JS
%"b1Jrhe4T(/hFm@%2ESA@;+2V3#1[l2s<i'O8LS676GrI"1*&8,88`Gj:(S-4.Ll,K@/9$QEYShVcsGkP$^_r$T16heg$`;0gh`$
%qQXbcg!qf`KML@,8@<J)7!K"NNlWnu%>W?MaM(+S(jGA%c\1iDSpBtpD.?B;=rVKs@C;AXpdT"G_M=_2e'-5`$V);uF=:7J#=MSK
%O<>%qA1%u-@3]MHhWU<A??2&;#cm4d!=Q0te#C96bdS:knT(Hn-t!2QdU>W1R^pKBp]G,gF99Z+#T`UJXJDW8GQGPf/Uc`bnDIb5
%DoD*Z6;&KJ-uh=dL_[7,9@8MpBs9k@+_'rNSC2QTB+Xq3IlH%"Gl?-D#p;VAa`>n[[D"-mU\ZfRi*llS7f"]IQVUdI"@`K%".X"b
%7[=U/Q`X<Po`g_R.6S>h3f7hV'-j`:6^r(`plY+;,E$D5c[bOpgXW2RII0XJj#q>agI3mLg,#f_Pj2`[=>%d0mQ9-RGM*)^F&@a$
%MYUMndMeg@Y1o#-DTue&L<f&(Z3DceNdE/a'Zh-F;]kHS1+&6$DFfP#^cn#"/_H&9c7pg'%a6p+=]7hbB$V[SF.X=*??i)Ps4J:N
%@,lfHEqrUYkdWg@-HDB<7H78FC:I&$%1Kl+Bi:T^1UPcXf,i,M*:R6T1Xr&.Ra>pLT8I3=8VB_%ZS^`aYSb`:Co=)uf^DY4(<k`B
%PWjTs+juSt*e')`WR"O:4Kc`jnnAqAKq<&oNsP9Wr"/$om/J9]$YEa22i+'F7EH][;\5Y_0bXl":g`c\FZB0#l[&TI%]`\Mi*<<H
%9r=1bjqjh&fM)tg6!/Xd&mu+Ph>[p$<r<=_e'eN^Uq<LZn!O9jmK\LeARhI0`P)9_NU<tXj%+n'mE$0D'D;T#]Sob_L$oop7[f7k
%'A<?ATOAE2HZS6*.;$(;Y'Is9r+S:(bLW_@9_.U=1o<#TN,?>p.0*g=abnQD%C(@+rJB\A3@<th0B*`p?jdEl9)nVEP;(@bK,jgM
%Nj4)^1P[ss*NeQ(LT[n*3(s?gHbB[lO52n1,0((e#r:iP$t7]Xi;`8#AF)kFiF2Z=UGSBQG4<T!<Q[+;J2L4KEk#]L8Wl8mg\'6_
%81&;:,VlTY#a]LVVjif\n![+#0rN2H.^GgUT6l/lar"#sSCg(O?f?icO^n-2MLihrMB&$@d/s&@^$JKQL\']c.GCr3g&n=W:WahE
%]bp@%Nt3-<?MF>aM_]AP-f7uDr%Slop&C^\\_4(aF(i2`^pEJoe_<p8PGa[DR6U%[>*U:]Q1))QeL-F3o`bMuq;4mSc9;^8[S$9I
%m#=)lo?H:De;)*7lnZ<.P!sSl?DR++m7b6bk;NVjJ9c$O+?.Gno:>:)HE$h]f*as0s*CfuW53;ah/67#[#+!0^H'/&rkETC^M&qI
%G/^@O[F?bZhS"gaI>ra1]n[(Fa(qfhht#%C6=5FeJ(rlOaJ.A-pnIFM6e#.*cQWif/SG&ATrLqgQ"\q?:G>3c4Y!pb)(.X6=+Bh0
%^Vsf#p"EJ?+4t87?@42gI^I4ql!MOHs)g`>h]q,n['&>$clYj!:T4/?SbR\@.EqhcF1$P,Ih*mH5)Yt4]DhXc:k/LG(7fC*EV9SU
%8rDcoSGM+d2mf6mgNrjCM/qq@T76tBrZ@fT>BjKNIgteQY7`I:\]<P;qf:H+s+ogb9ABKU[tS0JE%+9UeZSmS.Ik*u?gl4Ir*/O5
%%t4@Xr3(tN<44I=rd'&ke%`j+7>N%lp3s]kJ,N%SrCs`NIB)AOr=nO6E\n>GmklU0fD]H1+$9F<HjWo?8+fW`=AGR^n*f47OKJCa
%XQ-_DcBlW,q?n(6s3$<<.G9s-O*Ih2[HW.J;_D'2Y="*,<k[4l`Ces;OrLPceBQ*so@.LDQ03>$<c/E72p8_+h\Y"XU3D086P&RK
%>>IVAq,Y,_XSfm<:OVh&9$nO?ZI`eL3pg9sEeE5p4a^AiG/!\&aZl)Hp?R]5,EeQmIX00DFhV$norj(i/N##7a<k%dZ!M9N:q(AD
%;3*Eqb@hiSI&ZbPiG61#d\B-L@jp#Ef=SYRcmOP:HTu&7L[r]5Tq61gL1p"$F3#A:G%9lG2D+QG7!O8!IbiQoH8K8-K1e\W7_V01
%DH1")eU/J8IlUnTSaMih50cZoN7`3M657bTbI!6aB4g"7C(/^3k%h(gSqO*<4)LZhU4rU:j$!.qkDLY!eEY#>3\fZ)Zejf=?fJa@
%QgVZ)/2#3)b!X52J$k';V+NgVW)P;7hQNd6S3IoQ@d8'Lp057ReD",->Z0*m\HMMDg8>Im&*U)pl\0`ZYh\GA><U-RH#B:,&2ao?
%VKB0$82eZeFJmgYl%QrFNpD](3<m5\KELf<f.".KrSIj.kd/D7b3#@\#;V%BbJ0=C+1TAamZ'ijd_PEK^%<3,jNp7q2<AW@aq0Q!
%Dg`r3mnDtC\[nAN'@OAU`I&CMXi1`52n[tt)`VHca:,HCs8Ej$-`6lR]h[I2M9YPe,XZEXNCYq=6,H2QIG4HB\WQ2WWtB!7QCFNu
%IJX>_I5Z>.X48GRLp0ONI2](^jt!"tjdeI[C%bp$*^>&$(`YN^<qZD,:]E2=XR0VLUV8!&`16X,nUlbmY"u<+C%1S#<m1LeXn#$[
%D>g2%,8.?ZDrkR5`suJI!)]bC!^U2<R9p[1ac\6]CouPi&1q;a]s@!K@soc[IV/smDhqBl>')\`?Ro:.poQ8-]s^5;ACL0[c101"
%%a=#EAbV8br+)\Z:M0LQ[WbP=@Jh7=8P!JiZhKZI2kC6<e!BW]"/Pt)f>8b[kG\lm$![F=;-j-Q&bk.gPk0@SHWJ^XH\1$+&)>0l
%rOGiO#cY!15nDN24XM5MeBAHA[SRe>@<mTT+4f%.[qYEhjF`2K#Q2*&?ZCPU6I#1tQau:*+]52F?h4iS6$DPa@"8'nj6K@4!:s';
%GY"2e.5J\G[XZO\?WnQ*]:UWeE;32/9O,f]WqB4G#5Y_?Xf$QGgar3Is5W=F":.GU=p*OWd-tBOC02^D[JSJQVsA13p42Z$B<@F@
%q1Y[%8=sc#Wj;MJdPkC/[J?>kVd_jE^uGZOG$46=bJJU,qeT;rdZ;TK'n>0*qO:@0[b5lhioc7W0^u8H;8m8HO,%WHV/8C@q*V9T
%-rjUZ4Ioi]TRY0=1"#8m"T"umR=>aNo\J$9AgmcB<6[?7^\qo[#+:-:m@jO.!MbSohf8R/hkflGFAm[DY@dr$Zo2P_&!^L?^=`?@
%5;CH54XoX/2VrBLL<r(0@,/),Ad4"bGO-Bc(S[o;rKE:E+Um-o)!^Th6oLKjJJ=j*,2k!@3<rLCIVaM6Wi/Y6'[;$788;]Angt>U
%mAb$SBRJ!^(pEL&9\(kN^M):6DXVYPZoSXsir;E'k-lm-N=g-j#G$W'>1OXpo$?tshgW<!SndARm)m.Y+lE2uW>7]P_q300fjHR6
%INUX%%2F=6au%6>1oJ&!$0p00NWNR&ms?5fR.>0];s3<fJ%`IFG/%u@hr2+(i&lH`fjanAnZ=\_?$EGZWe8''*9dWaHbVAfBKBfT
%51LYG-K9T(qg4q</P3'&T'FQb,%p*I/^kN6Il7oj=K>A6IA[=/Q"r2ulEtQ>fISma+-"_31amL\OV_[FX.FVej_NsFD1L;S+74P8
%.Yq;Hrd&,(Y&E69Z/O&4\M2(#H?21@!ZA)CR$+8V>%V,hpNtbMqct\\.Z^udnpdP1d*hE]:&BE%-F_4.N+`0S[e4"[?PZPbl[=[V
%N7Ujgcb4J*EiYS2Q@&&<Q[VHrZ/:E6\kt<4B0Is%E-TqM/,s?qhg%to<MN`Vgj[mfrtc%6=+6t`ZrlXOAM<6F:6M%f4SqnV$5Ul7
%qpP>4DVR-WX4=u6$,tLaPesE/T?>FI2UcGFI/X$*)nr28OLIh@8bL=0#98p\VX;jAP:^#nhT2R6B2$Ts$25ri`G0lK!=#*c>-XDf
%[)lh=!0U3sTt[%kq]T_S-?\n&][aKc?EH]mmU)rJ-<Z+9X'Fh[WW(St^DIR:0&QYnRVTT9)J!&f0>CI/Le6qRQs[4Zp>"POO=m$q
%_?P]QhbtiDV&Tr?@=N;!LYgo0]7#ru)OsDgViBI,<]b"S[?:8.B7,`39'rJ/,"#^R4uD02ToEnj,dYpJLVf&)b7H/ChdN^87dr%L
%fZ;\@rJob'dJ"RQs"]#0]2U*1=n3uSYn;j%mB4Bg=,[;5HfJ2t`NuCtL&CbjVE_dRRp'[3]fs\*emb,ZfZ`DE\rojr7cha<<fYD-
%SuaO4"=s)uf+U6Hbt_-tZJJ>9jp&YXj0USfRE$1XFEQP#0tk.XdqGkl[_+VhAp%NDer3dL[Sr7Q#MZ;;62;p7=^!Fi&rDIc%s)TS
%/ndS:ac4QGbI)NUq'Hh]cH[\BleAQ&`_lU^^+;c8\P+]'Q?o]/i.pSR&'eeGe'UXMIScpI=4bRSFQ2rY=o6suhlJHEjDJ#]>D^sV
%AnJ-.Rp7I,cnp]bh#6&8-hD:uVGbsplM:?FlD^>';O?eO7de;Q7<eWGF`D!PbR?mtDP_7nDsR%0r%56Pg5)S;_roG.dHjEK/E/d!
%lHhBaGqr^M(<++#qC/pY=A4bNj71Xeb^Fjr4`QWXQTN[>Vjeo,$cQTS"eR:7m)/O\RG)fGnu>h1]q;L`DO+2NZ'C1!B)K6(gccX+
%_Zlu=(H.n5RRSp"hQ/&>`JN4Ada#_"HG*Xb-oKV&n<;,VL)YW1GIp3X1RkLF_OR&CX#&W^bu`>7Gp9Q+ZSX[(;bg?Cri=_i`V.r!
%H=LsU/3BU1hAjXR>fi+>Q*0#a(Jd\*o3PkdL<!T&NR=&Xjn&i"E[B&m5n0br:;'?C=j*J9V/=8d);3-UjVPsYZ1qlDdn"k+bG0"i
%R`6cbDZou.Ho\ZL5:rI<[nQ\k9_R>%k$<3N`51V3I!I_6j(274Qg?tM98a1SkM9@>Ap;3NhHifBdnm*pAp4P?]d:1P98@1\%N$O%
%WQZBX4&^%!"S,GS(R)n-kBQ,tDX/mDcVKLsADuTWEBSBPS326M[ZgT``LZ(pkCWr$lK2Q/3gD>(kP$Kt/sZq;%WLb$95h2ARV8io
%7(]C1*fdNP7Oa=dT8G:_/=[S-@:YfRHfrCE;o/9ADRJ/F3XOqmc;p<)Tr9do;/gh.SuV,2pXgJ@H9^[><#O\).%4`k^=8RpAZBXj
%fbF&Mc^Ice""h\_I<FMY4e+XkCj/'Po,T^c:`iR7]GUh<(cq%9;+\Jl<Td2FF-GXDWUuB:]Z_.]`T^(,fpm')qb%=QPo,I%dBUBN
%]\@Ork8%_!EtI$,6tYI^jfK:P<"4oF?FQ)E\#Gp'qI)1%goWmlQS,sXYU9=%%Vr&D>WV0[0&,,RQ`9Z<Oem8[TP8'[jh8mlb?11p
%3`q'@nXYI2Zhh`8^2I)K:G_CG`c+60pd24^%OVW'XnkDrd],i=S[2DphUKWdH>d-ujn\FJP3Kk50\K3KC%H@$Re?3>FIH"_NbqRq
%[I6_kaeSaXbZn^n11pf9Qro]sj.6&,lKRh.5*l]hc=r`d\<FVo@\f-WWUG/DEB/MDK^\,@n`=UMRXkX=RQ"u-r+]]1FQLq=o!$i8
%mVd<2?RJi5&ZEUFksTRXii#>qoP*rr_;4C])W+2+^E'og-=hEbo8oKP*A@eT\_Q"?m"mYf$Fj+`d1V.WhaT/I"tp(EVm#tSRFS]k
%G36<E7#3rb,8!-^N@uqVT>+)Ac)fLEQ-)B!Ru<u^EFs!%I5\R%'iY#^n)eW$B%e?qXH'-WRna%W]'9U%$<J_+_<P`C:@57R*4gjY
%PGCDa)pN\-UUOr]/\SiT:Wp]@mZLL$bceN4PNe>bCmh.<lsuP?%"G.I+k,51s--%.h>t>ripPV?dX\1<:s$]0S.`/r6gsHKO[YI&
%BP=aX,h&;7KiYh!J]os<E,^cdmdc^V4VkO6QF"nQi^I661f2UO#!4\h`j1,fA&&k)[,*W%`d97Fd@\\+ImuuHO@Op/j\?3YQ8c+t
%_kq.,eJUd+*Z#<t82t(CG,JL0hbB/`bMUbBa2E3m$(Bus0h`tQX#E"VKMaU_OX8jcmnY")47ucq&N%`T6'jfG]Pko$(<rJ_q_GMO
%rj83h.=:uC2pcf]]<<9j]]WP3RkO<>AG4.Y'ObOO[qdhWq[B[s7$a_7U2fGR::k2-*und%E&m/h?iKcTX:];q!nbOP"/K5j0eYHi
%16S8cbX-N1qcu'g=Olgda112MIu<[.7=<98N-2?)E7l7Zq(lm/S*S5\T4:?fM+---G6VC8Ta]bV4oSt_d+tacVhkXVkKgk"KK<7/
%*^2](Oi+`[G\97(a/<.LgoB\ScnoNJCNkFI0e)u^QHm>!@d^CI4MA>am)OF'$?sfYc;(JYcY>,(g@'>1Y@"_jf=CWXh#8MWRN:e+
%/\7CO58`R=XEV<1aE(:(jlBie.\/1LQ`nO++0P?S[T^2r#,`aLRV%$#buDc1Sh:IGj,C(2:/%g%j1G!4qT.XD_Rj_beS78sc`V0J
%1Rh%Bd<B#h=t#s^-Iqe53a9qV/UO!3P2j#qHgM3tgf35e;kD8UIV%8JJE#O:.QI#8\q.o-PSEr-,iT2cq'Yi:]@?1f%!^>&(71Je
%H080t/i@RmKZ"6(J7$CtHQCGhX2ts,\2F&M_0kM?jke>b!N>[O\#6]URAnV8%o:7S7&0].K"[dGHD&N4+kZ[+UdrmUK>#s0^\H9n
%@fTNpf9rb*S00GP.PUTYhTFOTF$Ec7J.AW7"IGsIWV#4L[UjaadQ;fb')b_b')h[B;In[jqoRKKPlh@=&.s:)F7_&,J%^0^$R7's
%9i]V;=(r!rjj*hFESLB$WVu*K/gE!^q"!/;CrC%Jq`+M,M756]kNaYjh8,%7^3b$2^TEPYlD7G3GIFsf%8pZAhO!f@i2eKbVlI/R
%[.Bs>)a+u#>``E1Ut/I1-fqio-`pJr-oVI,c.-Z/05SmV^Zb7do"@rAdq'`R9@+JO[Mt'Upr[=M/K3_QEM@77@[NtL.G!UaGpHbj
%P"0;aBCb>SRbm=$9_2-uB1D'eQ6n\"R:<r$#P5pW;ldfLjrb_":c#sWX*0liWKFO_AG3caC7)Eslk*mQ'Ff/Tkg#iA[l;b\\SSBh
%mu?S`YW$g*MVFW"KDee*QPZj;2X(8e*:+`;1?7m@-B*guTf5&?:N'dDkJSSMZcV8"a[nC?rtpf0:X@W;otT'a]:?L:k9d[h.\Qd<
%Z^H57@l]!6=50,=W-T,6VrPn[Gbu%:O$;SC4hLWr3gd8<+74hmN3lm:.Xini[#t%7b[tqmrmtW7[h=KO+p&)T96&Crb;tj@^3am@
%f;no/ON91>?M,SHQ`Q\6oO]K.NS?,+ZWDp@;B+U"UbE9_g%_q%kh3&j`a.kQolRRs2CuAFFo7PnbP?2cGPuUf9o]N=M7J0WhbI;j
%4*/;u.V&;;L)6Ne#2KlRbKS'&]Gnk6F&NnPm=#^l<gr?\!D_t?/9uI[^Wt]Z7N7tkqhHs'gVi<;Rr0uiK=L3?fl,2Rds/<G0XZT+
%6_6=RjrJs1BKVItTA*pZWZ"W+p!(g^Snr#]-WXM9c>9p!OB#Y4=>)e>cC`?Y]UsJ>:9'f(WBLR,(`9eC\_<S(*V)IqB5"TC/K@P[
%J$Su4nl3&3Pj=m8bhC&$6Y:-"fL9OgG.ubqH9K]d(WYR28%H6onQV`!;LG!WZ]ds#Q=a4]GFr7=llG:9LNBl19b:MG<9NW&d6a/O
%m@]Y7YE+Y8^725Xm^lbFDtcpXdu[*^opC2UHn6QAG&3dI:Nk^Wk"Il3C"tPlMmY3BR3lD1o)=h"3`V`/c+siL,sV2p&2pkH2Okd_
%"_.H_dK2RCo9#AYIM"56+?YS8_VA__'*]U=PPB>Vm`>@fhL'K^FWo<!EuVab`_FcQXY/D!m*fXSooF4APJf'M\#YEBG."OiqSukH
%fb-'AV"349fuGQ[SZP<R2Li)p.%u]a,'OU2'P#u-7<@FHO)F$94C:bMVGH$>>AdU;EU8C(6P#B8%T\C(eOAWZiP><nV>fc>CokIe
%^u!6`oW90FRHr_>e:(u(]DQN8j,-sXW2G\]6?7.Yo!5j:grRi!Us9amlt*G@fsb9`NXV+&Poj(-gGrJ254&K`f[S*pVbP%+L%DZu
%o%N@U.h+E09/:ja<;I/r7eUQ`3Os9ug3GU]Z-:9(W5"OBh-1XZgT1#I#"Q3/dPdFS4:8Yj7WX(Y,pLn9m-<idH)6ip`T^./IuNKu
%<t`!_f]q3`Yrj`+6miif)NR%LZRg'sRQH_lg/rOPmj#ZsQ9XMJ>cfU3madjd(n'9(WcuYH7n_+GR>]$%rH(3NaD>]W]W<bl#MqP>
%@I&1m=\8$g/RKld3l`9,_oW!.>:_D=WTnQhV+]>mGuS(?9CD&b0YN[[+u;*%(OQpJb8JCb$nG?e)Lqtq-&Fa=p;H7Ud`X@:_+H+G
%LZc\Lo3;2*<q[Sc:RP/3g%P21//n7h-hgBeF32>rdToae//7l$Wu!#/1d*tZj<_2n2*+b`VpQBKUE]q,QVQC"k0bafZ;2knmn!0J
%>o8+!ju1U`3KO$I3H>&;1h]lFB0],#g;t_Z2N^s/j-uHlA<u#/LV'CDp_nELMY3GJS.P(!DCQGIT2)^KR61iEf"Mu2]U_/'8T,qk
%ldKd_`E]\@'9NImpO^8#"i,75hOo>*3LM:eXdm[`pY1UoXd`fb2d&@aq]"k^.l#K*W:`r(2bPi?jKtM?bAkmsXj%i0"$=eW[q7E8
%)s<uP1ocu7ipC^U@!_7*o]"=*Hm`"FicCN$YPl!=k97/MjAm@hc8j2MK[]clq8i``Q(&\f1kn-^q25FI@npl+.G%(QiN,*qi'>7f
%qG%C0p;Td)*Qc7_68F@P-SqA3Qrt&Ua^Ni,9.Ws&Z9+uCG@&*"1/OD0Ze,#)k$:L;D$jo*-_m*S]`n@W46!F_C?Ien=mF;EU[Rr`
%YGKj+1F!9U%f6(M8ss-6JFE4>"-]+@hhh53alDEdK:\3;fbZ;[l.t^BA*RVQ5)R^8!pR,3!I];O9rgCJ8;8o>C"V/i%T25G5<V#<
%Wta:Nf0i]6;DPuBRl]J@mA"%cWH2k*kqP<EX2`jqm^SCZ^=L1fjnph,<5-%q-PjDOm#T2RP'[j$fib<>k*.6=(i(mE"rM+HUjn0$
%G1Vcce%;%!-#?"b@;@]@S]N1u2cggIdtr:t**ePdV+u`?"(sEOY3D"S\IV6M4Z&=W[CPh(lca`>ZV`bsB/V+bF*nUk.E<>_:s#Q4
%ra>)qO.hmUB_dSI='_?_WRmX;nP?c<hq[9^rd;+2FZrLm`kN[FP\Tgu,KWTSCneFJs&'lpF_X`Y9:89nLDOSaf+kjo2P#9"agt*G
%X1ojrD,jW[7[c^TRV$86%;31?JJN<j<_'"_i`]jaG.*`3S1g.ba7EVdH9YE#FcY/"0@+F%LP'cMQdR]bG&IbZh#0t1#uquZS2F^a
%As"G%S#_Uka#V<(<h4E*ZpnMl1th45U$?/D=XuW.gm3L7DnXb-qI.A3X5u%(d11Jk4;,+DUXLj8qGjG15]Ol%3pr\;^T9V;e';=H
%"p/S5q>Q=8`eMr73fCV0^6C7VDe`_n-g[8cb$:(aL920.%RZ7XP4b`dl(/`?L&HfmeecGkZ^N?jpU8ZEE/6,s$'3\k&D&Q#?oVB'
%-snRecg&iE\a2+h;qEPQg[h<V$?p)8#52FChoh4sX(PocNjj)]mfr5<#1BC&$h\=5:5RKGe5Sle2@e^g'Al:N:QXq(?=mh'_T,Vp
%k0Nb+5im1OOgJ_9>/"k8=%K@6P@P+<h%.-^%Q(l+:mc`8lC%3e"0'c72Mp#NX#miTmK!5PqJ!?*-F'"'9@f:;PCo]44]S_93E,B6
%_*G4VOj'36(-BF!?JO$lqB)+$1*hRe%O94q9pEi7e>m3enSp/f)U+>i;k3eKPH:n)p;mWRnK8OtREaB:e$hA"ptb>S`npQcS3K4e
%cu-uc,9Wb-F2%p6Z`7NaH%Ztk75J2pp?bl*O50Z3P"FlLG]kI;8c%F&,YQ0sTX)OJEm#7o`Z(]L,^VDK+4$C_[e0X:^oaTZTiM)a
%j^.VOLXO5:]`nfK>=09W'P4KonbmV#UKY-+>U_gT_7"il^'>/qPGNT!4LCa&g!WAqX/_Y4mr/0u&+TI4hkU*fjdf/S?"m9]a`k_*
%h*kh9B2=e-H)LW\%=XYI'qad9rHdAGg5g*3MYZNbpR0p"eLEeX8F_mZm%3fc$00&<1X5h^IkY@WhgT>=U^f-qMe+trIku3`]3&D5
%1NRp/H6JUsCG)HD*d1#]rIs'0XEisH`e3s%ebQo/[]\\7Y5\e%/ile=n[7c(++O2#MbW#?@^50SiE0o:'<3>mgY'8)HN2AL0lOIF
%Yi4#cd3eiT7d?mD+3"fSTAa`@[9?lm.iNn("0m/uo/9#Z-78N6m!Wk`'7VY(T.*!0=M^VVVXa1fE?9TFq9NSri&Bl;j=gdF9SWGj
%&+jRN$%G:,Y>$:*1\A^E=q)RVNP4]ToP%nRh6WomNp#mZ03++W3npA>ZS$`s9:),dq""W<c=ZO3h^7k::]G*jnt$1_rmU4'e(UUB
%m56#MG-gfGWMRTJko==q\!ZD*'E7^J[%EeVh+o*,[7JcEVEMfjjA!':3e)j`U9VpCa1l2e0g=PI0EpIXOk>kag$j3ubimTiF+<Hr
%rp^5MFE:I)c,ueDT"VZ+ZE`*4gsbS04JE.)a8]X9K7kT_QA!^?QNl+:m:_]f1GTADa6sk$mKDFCX\N]g')\R=2'/=oM>$B$RuP>B
%Je^(9lJQ>%oWNHPmTSo8nh>>k=rC+Ik=,MZd:D8,m5CP=ITagRf?^AH;V1J'oeKmC=ado\V#!'N2_<6jGiV%&Pf@(eaGN-(a?eP4
%PB*^[g=Q"CdX^()dL.Orh9PC[J$`/Pj,^a;c)k)q\_U4#9=<#i>G:[k_F*.T;3qqm^FFU+O@sR'EGk(c*iR[@pZ1.VG"?h\mu_UX
%kp3_j7OY!WH]G"9ot_BT7i^`TLQnfrZ,2$Wei+/)iIajnHb3#gMbH\llTM<qh<$8'?OPG+R_ADNWL]UApOopgrI^O6O4_O<3u]-,
%/&'#X9C'p/=QV.Wk&$u*Z'EQl<]Y%'2Don=*1PYFIu@%IlY0sS6X=G9V0DJ7J!&QeLX%"4Cpk608+n[U=0l<*fQ_4Wr+8,N16^CN
%NI(+]CeTs*O"]nZn2<0Zn#XJT=/o?,WU*JF2SHM[LrBmZ;mDb>gXFgAFnRh].*PH*jrQ$G1$<]Z+Qg+33TcC07q7#27)m1?iatm0
%N82F;He441X#kc(kCWBZr(665[SSN,9X1Ga1DO,#hV=$kS1ZtE<blS8QC=Gk`6q^3GHpLZF#93;Ip7o7O#=(M)gdR,f[ajd);EGt
%h8OP=i`!,\EOcZC-mU=JUQ(feG2f$a`(iD?_m/h09K%'>[tNOHm/$WJ`GQ3df<P3_0bZ(-*Zi9mkDdmA6YUg-p/KAI@kZlfHL,eR
%i[n3g9<?+hMJ$k4p5HIE*8APYL.</]S`0+gaS>8ce+q+)4MB__caLj]LRk"6_Q`Ls][AXSid#uo38C'l*+##9>n8Saj;3SQRhp"\
%l)2FoiS<g$0YDD3;'"N-?Jc^Y/+!JWLXh%2n4ENLGkf.LJZb3eiShDDf\LN*Q)9"4f^OVG-T&X)8E4<lYodjkReF[V*#UqTNfK&'
%.o.BgQ,;4qlk)\\Y(%%DLiGXC'#*L4,E):(%jS-1c^,lEh9EWqockhCZ@2GP1pVUZ&<%Sn0?oM^N(cs)guucI8:Ee\*%=)n]oG4%
%>L,.N8F8,01t!:<5)p-AXZVP;bbQ=Nj0rf"UX$a-o;IJ9]T2:C]=62LX[[+`ST-#HfDXdskYD%LN#p9OQ:B15o4t,QF/So1q>$/R
%d>+9pVpUk.<bJee?;$6r(-3iZ)B1ouh&_Ju-HQ/Bc.BsG3uK,Eg`9`C90!MQ@r"jF:LcIj92f=j.^;$X1#+r7]</f[NKp(cEpWVi
%IXeHh:ja:EQ1Dcd`(T?&4>Hih(_>-c_YF&CHSrN@8]'.#?^%Blj#cEW[IN;IRAKGsK=/R@hPgY<O(E;g?H\ib`]LM*B+s=-Ze:2g
%o%a%/E-d_8=?'EmSk*_KK8GT$UXI*[p%$8D=_4lnESGcmR<Xf0nVPlbNOt&@bN]GAiPb:bCbkORcR5QTo92hn@='c!><&81+WWRg
%>WWjr]Y;Z--VKqgmE'+cOd#1^f'q0WWa)'_9?6e)eFrV,eB2VY0t$_@BhdtB?:n/ZS*@8Yqg*'oWj7#2Br9aeTpQnE]Z$c^j&[JS
%ng<rd]s8]l9X">gjlqEfH@G^b?G;s_<:e_j09r$-l$!$n.R#`_GSBhgqH\JWICKj7gcH&:h3gqoI^X=SN9>t#A+A`Q0G/46+6&6(
%B(Bgb2<3dVG%VS'lW5mq<j"3a=)<l?>hn]C1W=]*47cX#3L_%l*P]hDN\/:aebj6(2S&^.2S2t;W6_&mCOc'WqJ9g<-#r]:gNgGR
%'(OK%:-ssWWeo9(#,Xt.SPGb&::D$0'D\boogEr/<h12doG?\&%hB%h@;/-RV*""PF*mLqJ*ul<o6-/H;9Z`@h\Ma(alK2VT8^EB
%.jCU,2V\*RcKSj$bUFP,_Ptr$mb#N)dK-M_4#Q1R*DJ]-)gQ):4fKsX/\(&V>?fuLou>i<8^CV0LjR><Ct794hd1Qjdtorc<'F4:
%g\/^A5F"7/q(e>KpXA.$`8=Xq:&d\DY56K!O's_i[ca<^H`ip"#>9ti4P7<&%gV:HU[=_%1"lt<rb+sC?`)RET;c8(Q;3KtPI\@U
%;4N&V`7rMCP1.mZ'cFUWlS=fq4-IX>7sD78SZKsmI5.n%Y61cr</E+=f5A(Ce`jC6U.W],Ztbk6Cj,Nt_Su3@7_"^Y"l\S6_JWK/
%>(+sHH`Nb3b$4a(21F9+#MH"DI:"$AaU]2#k,0^G#P7Pti>APtQ*pFGnl'&4EkI'XNePl_C4.6rYN6NTR>KM3ETUk[Tld_'Z-^cX
%B8b'rLfdnV5?AWpT8FSGq=&]Fna5<+IVEue,/(?G?(+sNbs)r0mS69]Q5Z70?_1ETC+_/N$9-/?>LOP7GF(C!J`T@t0toD)RsnLC
%hJM,Nlnu6G=7WnibY#4(f;it>CNHOJj\Ms!9od1n9<U".AF0$P-0aTr.`lMki\>`PGkR5HT#a,njT"e@dKc>pe5jJ$VJ]=J,H4/=
%L`B#JYrh?NPMZ"RqP`6,9Ks6B:,A[.SPhrEmC"d>H\k/Qk3OObC#&.sA`q("/(ml]4dA1@N[;#sl.:jK`7]2^[kRQPF1^P#P?_P"
%h-,`]:G&]*g$j0%@qlh/XPJgMGLkX1;pBGTDl)&AqotK#o;CsGqWi7rEF\-UCO%-b2>+V%E`GeO4R9E;k#BCUh-;Rn`&Ea;T5HQZ
%:<UgbPC$B5Xej4qe#gN.?Bar]['qF#k/I&BSVM72mA#O!o_-bueaq(N)`ukYY,'K-a!VU?k;fp]gPr8SVqn/m?L=>@OknjF`Tt`S
%@OJXhQaq7O]rU,;bhcRtARaPDb)bn-XB]uCn(P8<K@nF9k9/"!LCa+Nj;:U4n.:pbLQcfVcJaZ\X:A%D\Wt(ah36*Y\aoO;dG!Aa
%iTPH'Wc9!t^5a:ja"*(gqt$"ua,fVC_T?oiFQ=]i[5EGSH*hm:dQCi\3>K"rmci$Go$6L;GkUrL.WpE_dol83iT0>\*#h(W4tL?m
%jnd6nq-JGhiV`4WVg&fg+&s,FS!1_.c'9)O`q#CMbPA('Q-83Uq>02gG&$osI:u>^D>B7%=/FZgo(CL10m9*/X'At<(E1IUZ(&Zk
%9lmYF4(#KX3B5a,W?53lD31)/[sPC'LYI]T5.O=VS7M(H-=(aq4F`7G:B_].qfL)2\\Ggm(\=C@L$SZZlKMINEcqC1hq?XH-nHA+
%mh\_lVu)21FQ'G@m^@*QU3P1.YDW"TNI4=C4?f)AMGCMMH?qGK%Q5>)hI!ifQ)j/'_Zt\iXn],EG2@LhH!'_]IF$eqgcHFhH[KPX
%@o*(iD;f2Yme-4OqU01\K'TCib/)3t<Md.9%EJ*DmM@gRO07NHc],u)V&):$/\RZdP3Sn:grNP5ZNjq3U>qPHLX0=o?WS&)?=.Wa
%gh(D4;GYfJ'CL"F39MjCB2kU2hd#p%l;*,q`J3RBNAU?imd;%eG\iS@Gmj)-`S9'8I^g9e'BS@kio[Un2m(Y7;e$>a0\Oe\O3L,I
%reuKu#!m_siBuA6PesWl3_j#?Q[SYFTR([Xn+X!b9@rZQgMoHA]/qQ.mbiMSmk1,#D0o&07bNm`VfJh#P])kCg/$fRqs;*pX5(_@
%la2EGq,FL+[IOV$L[qhrlskqM7Cuu5jBMDbQWT(c]hAj*[!6!T[q5CF%/bIc1Xr@$f6V;4>cR;^*aopud)UO12H6ZDIRAN3S/J&X
%]*$Pr91/)-"tGpo.f?YVI]/\orI2eNS,#OK=t,ol?X')\',J63PJbOQXZ)W8g!3))m*Mcu&%r-H>!nk7$\#cOnHJ<q.6o\K>\mFZ
%K9tE/,[f=in!.^<qrGfu%9(#fPUp"\;*/,8jdY/@EtJk/goS0f3DS<-r](j2)_a>>HYD<?_)#jL>((Y`os4gD+/f"PcM3sV<:@Yl
%n&@4(X44k1:*jYeT78D1r8Jm"JT6acIJ>1)R`i1oBB@!EV>SX]:tWF#N2K$YD6'2"3VMdWo$LYPT>%&n-Q^e8r)neg]fYmj^%g*Y
%^QpZ$*9Qu_5!JW6*?OUS$[je%2<l<TDjY0S/*1+Lcg)3)bn&Xg[CcM["J7k=f>!*tl8S5/7C#bim3`6ch`SUSd5gWAk$<AN%R5<]
%qG4aNe7G-;laJ4Gh.Jt5YCn.VHX^rp;Yu1GrU`\3D\9_7bl@YO]6sIB<EJnih5)*2*9k[sese>k-LH01CnubeUr4peCm7J*.M%e_
%T9]0Y;tc40kb/RV$R,CX]-$euplTh".4Pct<jLAZ(\6t\r9raM(ArWt]\.4(r9"@8;g^eQcNe%T"4=T[2eke0+n'"B#E8TVZc:n]
%(*rjA)u^h'#0ltQEq>;Dhn?r)?LRg]2>f\<l2*Hf'>IL'a#Mf<\^$h\#1i5Zd2E6r2?*_6^Nf\Q=&f*>1[__1n#0.b$1#"m+n5:*
%o"KNFr-P5JH1,_GXm9BW3UV7<rWcaGH0K.`N[o`PNaJss>KO@ta%r8X67lQD[XMUthT8D4WkWkIo=\d_<rUG1q&f8Q\%Q'%O.-#D
%l1FZDM8&dZJG[^_rTXm;UU.]GRe8n=AGWr]ML_[_E>-dVJFaeZ,WCJ5^qBZ"-\EhcMOlHsGhDrY3I%i54Xst.^>Eu/(`hY2TD]5R
%G<b"HL7a"8.m<prqqYF6@K6*5GK:g"R;o'YnB94N^b>Wn5dq.$plEOpEh;FMY&Th($iB:W[n\h:'Xlbn-9'l<;;7<&@n'S[*Ibph
%M1<hNq2bR>nGc4,Y`K9DHi2pAT',YtFZ[;jIIfhbJQ0eipok/Qs89>9pd^I;6jS>$+!5[;^NtA.49!s0:X91@k7HmdSY<)'B;kG5
%qXX+trt5)O&SfpmrVA#&-li`0!pUFU$ior6;UJ13O'bEOHieRSiT""B6Vf&9<X]<K^?__k,5(VV/5uYMnDiDX)WJ5q-%eV&EC4Xm
%FCcXm:'crRE3qHM?'13KGmW^sBGDeGi73**[Rq)q+g=as#`&8Qd>ssS2*IKa%(VoC6!sprNb4AnGuHPr-O?R(2+Y7LLKU+^OoWp]
%P\(/o';@..(M^>Jq5:T*ZWog^a9_:7M[Bb<0(fc.@ntK$4uO!"!_6[A!I!qbXV0.F8H@:/=49ul#378S[3-J,O=+;FAfBB#5[L)s
%TuZcQLQM=4LkP>(c[Z'5o*UIaO>kYRKT]HBPR1.^Tp`dHkc)4JU)psO.=&l^9ILKde((4q0bqS+ZOV\L"tm+im3[3(#Z2(/bk"+B
%9bTp:F^3X:JB_h4MPA?FX_?F=q@]J8DP."SZJ\6j#o(`u-#Zi3ciK,"5[kVOVfj489)/l>%[1E8$2+'FEWK"(0U&Mu(f:s3?"-O&
%YsZbMZ**^$JD>hKh2jlGTfiu+OE=c?-lS\EbN"=`+p]G4]!PT^&6^F*4JZLY>ShVhU`H(?Q*af\@O6]HOS5c3+KfY&&n"Xf8-On)
%CS$c68gHo&+/f8bG]?oF+U,%CUtKEP'.@Jb^c1KM"6*AR,\Z*sdQiZh9gbNu'd-\78)"*de+f&JJ:o'$Jt:?h8C&uSQ3)e@1d,h3
%:I6>I:'lKiigq=#n3XHh>*NuW9og^^84'$p_J(6)`$7ZLJ-^]5K_@a\;EeNBqFVsH1ia"(6`ip(^W*IY'5slRIb7q@84LZo*@>$I
%'mCtl'FpEVW!>mS2'bIe;B(00P/nf<5U^1hLY,dt^*.q5StYpfGnMi^>\5[!>KEG[I?b.&,OJfFp`E<C^H0[j`M[kM!_M[]A3t0I
%5U#M]?j6i;5j/678H;(Kj1$_88d$;V$6b$gFbp9M!M]CcW\c;X5f@K1Dl=TdKp7M0?oW6C6l$)W7g^N8BfP*@P$JCfF:!5'-4GSR
%1pF2\#oOtnBVLT>#b$N[a*#0IXpPeBUU!-V,/"$R^-AtF6$3=,]c,!kJT!fV@g@*HgKIDb=?1Oqi-?86d`r.kecp`M%>bA/ncY[=
%6@H?e@8-R8W"6,+'**ot&gJ#j-<q_tJS8:q#,JV2&oq<JL3b&p9,eU?M@0N$#RTH6,jGOc'?q\T"@>IRrIGbOiAgs?O:`T26j1Ko
%SZ(j^!AKkI$/\o)&o@](,TAod!E+Nl&00'Da(d^\.Oc7`WalZ3]L-0\=QTUH`\c&XdKtk8+kCa;+d5J-8Yi=+fk-q[<H3hr6_>35
%lMC"8CGH3G_Bm[cQhF"IP!sDR%dO3M03e0]qW':Kb$h3&&/Zm[AU#k]8tYUkN_C:O%`AV>6#6N-@6iblOJ*dCk:;1j5T9*EQ*V&j
%JeIB7'pDeLD!MA_1cX_p8Ra>UYn:8@i#7Fp;]*YJ[)oQr/eej6&K5^D+jOWhaGBWBThm@5'0)B/NDM_]3A_Y'#s\NJ1g#Df9)p+^
%&8>PE-/K<n6_65eQ"=9R`XcJo85+DS;2B@O'`]FBaq4j;a=oI"P.@?a!D6!3q_a%4:gb@`:_3nn5si-1J4RsrA;s-`1Ll(7J13ff
%aF9W]D;kRa$dl&#WDNZ=c6eW"F1#YR,R8uO"in\]ApkrE`hEZ\'>@T_RpMP:'cGD`'IYCH(iA.<Ku'#65YVe=PdKkGnYd->*5[VV
%4<4icZ,i[JN/[N5$i\3_l+`DUPm>!qXUFG&g*bO5>URrD_Ks#M["8B.NMs]/Q\*c!j0:305ufAG(0\&28c1#b+G<Q^bT@Z5WGZ3X
%8Zc3Y076+m#KE%r*T=pQCf<n78S1$c"bKDj/2(.Tf?ERW_VimoEV6-8A:i;a5X,!5AfF,MO$P<Qm)XOIDqLVf0%h#d]"tVg!/WrD
%"r*/o_B?.2N%:i1@9itg.))CWL7Q@)T!4eKl$LC=+PY*[9+)?*@3#R_.a/#tLZ4,O;+fj6)n%!+-t((dL<Q.f8N%6>[('na9E9\V
%m3Fe7CS2tVI0Pf=CaW'-1"OI!h/S]_%##",^.=>+'CcXkqlm@J)<3A]4G4I[S-+/c^5idWaN'ata+*mBY\_.DElm/T9rVP3fb]8m
%,>WnoQCs7tADlS_MA<ZoUnXZY(KSSL_!rT[*"04,!db@c<!>Un^"/(G$!P5H!_>k!6T[]47Z?kAakFnG'CmEEKH7*T#tfltn?"\*
%TqKMoSf9[2jIh3-I6p_aYa1#O,jcbf"EFuW_<Tn=nVuj/IYA`F#XD8(E^P[t_sFK)Lgsg/KHCJp!(eRJgQ>[(<`,$S;MY`,.r+KF
%Fs5eX!,:cSdD/4:-/05MT]D)dXGoB^ZK#%3!-M)2S/KRo/DIul(^C%5(;VcmLF8>JifJMM+A0s9#S87H`hFSZj5mi<Dc&TOB%PW)
%OAdJ7aDjS*4&Q]g/%J?rbc*t^%^IuF7s6/AdWLNQ,fRUC75/UY/DEUSSIT[R2<f/qh)NDs,$Q:+LMYU*2A6Ks7QL]tMnLQoC7cH.
%;_P^)QU-;NBK0s)g/r2*UQAf%g"qpAA=_p^5\ZULBVW@Wgkb0+_Ae)]-8bcOj;oH2F(>8I5RkOC'^b]3'Icgu\&lr)%+GA;'SXW&
%3siQ&0V&`e15*LWdoF43o5-Qe5Tq'uiC).0D*]pfl8T'MD!W%V\W@T,HmiYQ!l@cdA/<`p6"bNKUg0r`aehtCb8^!1'scX)9L=>E
%X5R>L`'e;*4]3?(m7L"W3=[63,$b>'Zo<l$U]HVM.#rn-=%"04##Vn34gt(fV&fBe<s3,R!otJT-R[e1mL>#'Dh<(_8V\l8KT%9)
%GK4rP"G*cZi3;KsBElUKkTN9+.o-e<$@EF`aVJEo%cNRlAdf#3Id<R:[\])d(Tn;3'TD'<;F_d.a;Tt**C:QGSOh&&p&Y?GfKDKn
%2F`JWP5nninebXCcuF//-]4!C2#DuUa:/74?s!NJO_55BhDHE!I60)k0Flp\3r)qu`N'*9@S'BYllR-MGrEM#^iXX)OsnS4LS1G4
%4O1W:$nmTOo0"?752)(42OoSdRu2hJ0/QlFa:Q-`O`r"Fc0Dh\>Rb^KPd8-6+B:6$'.pV)SVduc[t\*:dhO,oQ3Z)6)=<-d:=t.'
%'6msHV:^loTZUdI0H5B-e:X2lcUtL$9=+Epa*cru.PQA"pkU35Qkodr#$Qjmdb%FXrZ$(m!sEME!Kl7+H@o`/64;lY,.SJXi%Ti@
%F#dS@b.u<\@.i:kTa>30d@igW$3$(5/Eh.U-"P'GQ)lZe[]R9cogk9r1f+FWTDE<S`gSO@Pp)"oYR_[cUB)XHPjp_)[NM1BWR.tm
%3']Id1d\f4;FAGT_iODs(TiBi;.PWE0go)F(P#b!!](.ZUnd:@nr6/@&@WLkfoo9X9G.dV<1Cg;'JZ)&iAV])#Q=jR:_if+4u-O4
%QBKoYmY9&M^Tgck-QJiddt(?umKBGqiEq5^i3g.4q1sA;hjS,dLp"$iZOS/@83$,(O>%3=1l.uaq(.;Y^]k+`^nK*>!+O(()dc7U
%Tl>*Yj1f?h%Nu"L:#O>ohk\ne!f(=k8GWoh_->q'W2M@s$7c<kUp]a;KFcm/,34L47Vfpbg.7LV0#ZooW?sDSq9?&Klel3?G!b]*
%8@SmU5meBeeX$O2Nb0S[BnK"E3G-6`FpeX645gf1_tnHnd9kU8MEG5bs8"!U#0G#q+NFM8@Q1!bc4rp;i@)!eTs3sMKCg`OZ=b.N
%Z@Rr_jB2Sk=^!O(2]J5W@ph9_8l2`ki4.>^KE6-3o"BV)l64r,Ni!(3fbI$T$br#o!W,t%,$3E.&Flj@HP"iR0FY7/XSO<Xic2IE
%#\,6<%@t9;G09TM0G8pDU'T-=6446qoh?-uCgSQIiWNo10s@c\(hG9J[Sd=02un&/d!XS#F:?7"m^[p9mfoB;&N4>hSg(%c4(Xpp
%%gchm<6C>c\*$72%\h8FbX%\KQ'0"-/I:#d5TE-J)QbN<+G,XOT>3l$!#=L:r>PBe3BZf**%cHkL,/nl=a\\[ofPWI.ctW%Y;jdW
%kQ[''>TM.*<Wl1O\4*&HFI^Cq&ij8"TdM[P&O5J+"BT;I&]sk:H85bO!4#q36DDFX+Hr"d23Y^1W$3Y#PJ5k0CE%"%Hh"b159Dn7
%a7^h!#bpnpE`_'fL_*Tc6W0PMO_4/XbaRGBlb>@=AZ*?&e;ACi8F`,3eU^N9f`hRtE-`,$q$'i4LQJ#kSg?$fY#`*;[qC)%K_$61
%'p4342Y-Csm/n%_>B#%Jd'g,f>QF8Mb<1e!9GFA/879P'[4n8ho<$ue8Q1jGUVP/dHfZ(RL8-2.juN+0g&>LScm[Jr\Oou&bMqY.
%bgA=Ok;n0&B49(CfY0ASYDWrUnrXM.nsPK!3gquaG4HZBs&(3T]]+98!%o]e2ng:63S19_OJ>Gn#SuskgD^\AUi=E;(7!X>%BUi^
%+`Y]CC"lBMG'R8.Xc!]3_=j[lgh)?Vc>FN\\/+/A`Bm?<W:#8L>q,%O&Mu2*q>nbWK9Qt,GFSP("lh70^a"JJ2X^-MNFV/rOFIZ6
%<!>`"b"]\<8dh@)1Z5$#Eg_R]L!lj8"4B)t0#MrM\LW?-!4`+o]])mD]SHR(N"_b.C!Xjk!,^b:6Z%5iG]H+fLkJEZo5k!bbJu\A
%b/;9Y59,#8-(djTS_BVl&Bm^*'b$iP,LYbhZs,bHHC?];dLVpbciRps3[efD#3,ORLm4PH=@C2*848R.JMT)'NKbuW56(k'h>dnj
%1-Q`(JNRK_nmW<YJIodULfCt/+=YPfi/:\Q%ZjN6()ju,%)A8C`+(OBl(DZ[L?\gbdiaCl#,B8$$`5./;TP5YE'E5s"Ak*IU.cf<
%=TR9YZiPLBX9;Zn)$Hh7f'oaD!m"1W:h\1f!;/KCmXPY(>RNeXF:H=PMr5jo]+3H#8'(m6(@gJKRLBmnc8r<T3+Dr&.IB`4A`F0X
%D?jg0Ae#:3$kV_@J><\d#9XV\,ZN?W'_'le1k8Y>;Km\-(<AD\*6Z!YT>+EF"tY8tOODbA4MMdPdu*r(-f_.&@BgK+4l^W]"$upF
%9e105AR-\i,I/a,Q&Ln,a6T0[86LIS"*hAhHfR4Sa4SZ;=U>s3&Ua]@LJ1j1+)LY1CjTQ1"7g<e7,02X'WBa$)_-AW/HJ7?YgNtC
%)ok>"_s#0t`cF7`6;CR=S0OUlBk<QgdNB%pRZCt[dPuHZ]-VN2onVQmJHUNa;DTHhXU.B:>QfrD!L2<Jb0K='Pl]nBU]hns$#g#U
%KNjqETkGk8884bW)?M2BOq9k]Wau0.LrgM:Niuuh5\VifTgg#aAp8q4\\&<#6>8`Ghc7B6arVDbJhG7t3%lu^;F&TbW>m:E0TT_U
%Zsbi?TGC/.dV/E+/LlS=EX%Fe!fG[X0snJPJqeZk#S(m'SAZ;,Dj^s1lCTd%^F,5`8*i.#TfaPUKT#9g/lHVp1)uOB64$=:miWL(
%nhsjE;b$NnNc0sEO_/8+MkEBME<$Vh?lODO56],J37.@*J`(#Xfi-6jR`V.oKj8MMglj7)fH5]>:jG=,djDj@KulfI!MCLVB!>O"
%C+_@83ST/N24TT"XH%I:$g'Q_;Uck9"IoWb>XIE,&3tecm+I;U5Y@C]T_k,H!Ru\)!t'oaH-)X<#W>P?WJjZfZ:R!\[&+t`6aFe'
%O8Gdg%2c=)F<8:MTF)9m0;HrV&^:^"ckboAgl*A,1l2nZ7M7id1)4\/VIRfjE+!BBEt>ZNJXI_gm3X)R&-*lMAQS4[`\6A[+LEoC
%4$X!")Ek5QiDN#;F<R:9#24Si.rX(BEMU-Yd5)'Y-@]Sh8V#_[RApn`!*a>r@9dlT,Yc)^5ec:4=qa*f"\8pVL5LY$@A\`t1Ug3M
%M;f\ClD_Qe2'2;gVV][BI![]EV)^1peVb-%/TFXJWOJ\j>6piAF-W@HXs=Rtnt)iO$Ri/4H$]c63Rf@<@"d5TE?Kl6#VF;m",5R6
%-sI?C,UWVV>a47d7R;dFN.rM\f,e2dE?;;#R3s!qB6^kY4lpmhA-1ig*$cZ/Tl"cmEjr1T,2E<V)b(Bm>"B;.=^2;Fo"PSJDM2HX
%<R];aQp).k[]aJT:XToD*,`i;Q3j`cC/>=Qb7dUA!G-^'B,<nh1Jgq+P=0DD2#EFa-iqC$jtHo4"9b.Y-jSa>[']'imRhU#.!WQ@
%B3<#=5NIY*Am0%L5,a_4oi5F"J>&BiaG1[6JW,`[(m#%`E=<mji],#CoC@tF#dnBE^!M@5&eU.Yd9*2,\ii1gV7:Ku%$9@0oK]r=
%ib]>M$6su<BXK0f6S5BXgA*'Zjr??;#Ndku&!4!+b9`l:'IPW/CTq=p%#:i6lbK1^fR,r75e:Y*3_J&B;2NMkS]'Y',]k_*J][:%
%fbi@f0gsf'BN'i;K;-0.dUX0rPBgTi0m,?+T8;44>gt9n`#g\6Kb7JTg$BZO<jDdG*Lht,Ol%RUP27<*%Tarr1E@2p3uZn23]KXa
%q?ns`k(E9pSum=cW"ap'E_W(_!#1i2',I,Ga'W^0FkS]`;`GBu=R;8D3:h,jBI$I/j<2gOgdp(G;jhGO5>:aAUEe$!bHUg;>=DT9
%[fq1$:+iW-db6MRM0,8nAc_-\<a!SM+B%N2,hk>0%Gqke99+n^DJN[<T06,OKTlU37Z+&u4V5J2q1WXI_3hs@-%5nQ5?tCpD3^//
%-eGGeFLku-J5BpUI."#YTfI]jSAg5Q5%b'*==sB3,'O*3?Jq*d?":;se[Y^di1AmAc`Dft<8Wt<CD\''#&pMd>3'j0$3Zum>#mB3
%R&_&Db>KUoK(Z5+l<uK(FBHj[kR-S.l?m2]</rK*\cqb3:5\%NMZ'njH,65pjeos$Pr&[';#HI&UZ@)n0;!,K%AM9OfZIfcRXJ.k
%#4/Sk3.gma",9`LY4<qgaW:dfFd,5^Oh6;XK>U\fYO6J"\r@ch0dD6e/'QBP)%8-e?r/7kNXiJt,uBLO6<c@b0t.f7-j6*aebI&e
%&>hNJ@`?=Zl8UB#8+jh"$q8u,]QbD.j4'#H&\r\1^3k!LY<u6JC3StO(+Y+`Vp-@;D<P+n(cCTEogg&[J6+Rff9$<cW1.5+d%'@I
%%!&k8*MCb]&2)7L?"kug>s1ZAjEb)SRFYeil`s7dm_F3I0ttae!!a"$:k]sm7,+/Ya&FDDP)5kaM.:30!<I>QcCXXC38_Zb5$V+m
%#qg$$&R?9CC#&Y@"@>h52AZJj5hVA.\=?S(-r`a3E6Ws<XY_N?d\_i<&%Nirpp@#8E,^KU2>Sp6'T+(\kBH_'!QkJSDd^jWp]?!k
%4]=N.H`$#!%g:;3LPiLA"QTu,Q:NFqRW20J[B'oYF#<qDJB5o,,dF'%(h?EJ"AT>(e;fT&KFc*V1a%LB&Fr".qfA-)P"_>.N\Kmi
%3LDLVmVlXq$*uM0jcfemD=:F,JLuBR0Jmu1:f4#^]+AHhC2aY_3&V9U&5,L?jI>qa%Pri/</-'i7a/tZ+C&Wd7LmiQ#)(2F,7=6W
%_\b@T`;.*"?otg#LGKBr"=;M%c:D=rLCf[]*sjQ46R6,#/%>r1"[__HYqg$WEmT8qY]hiZQaQr@*SXM>SuG3i>T)qOZ"4ot6-^`0
%,#:$/bQ5Es.!#hE5`-F<;EV,@nP)GL&/E>92X)KU+g/4<IY?eRD9[dVg(r_TmL=.H_N"1,'@B/O;QuJW"1IA9N[=gS)986I'@4;-
%jt<>:Hp5hWaC0T2;4\l8eQ9hd$3MJW>>XNdmA<To7ruHnBB=lB7NO-lBa\$C"B*kmGdqX(<<[5kTmS(8@+c<-Vsl&[$`mj<0=3X3
%;2hNXN:'-&Ubi/=RYs9<gMKE`X3L#TdV%9?ZG7IhY"f'u3dflkWC'$)&ogip%+B$O!$"U,7'`tC_jh"3Pc5#=>YrG+`j]]<*%^"$
%,N2e=#jl#c9I_,4L5G!$6Gou/L67B),%^,qp`32qo'%!+GGJ_`_YAf00M0?9cs3Qt>YJjV*sk#=TonhaI@j/fUiEk(km;@VL`Q8,
%"?JA=1:kThR\F1(K7c6nUP3/qNqhAji4q:jVX-MALmZgH#@0>VQGQ`_FEI^j*n4Q6+UFjL@068o%#k(;pdq\#/jN8,_0m$`o-H@5
%+U5Hr<sXo.;S%4!,]IR>N/oG`J-%qb11q+%gJUL[4:Tn=7%5M&dFL3+a2'$W5da<GnA-;6IaB[=&AIgu;.HRWPe9qU-]&04@$Q,U
%+Q5e<SLC-WoE8%i&d0[@aTH6X$mc(5YqNW.`$Kohk_53S!I^#RL]])m"+M#D.Rk+)VYTphPpX>.i^;%f;?W5`CI0n!/u/M>jOj7a
%9usIa8mK8i4ST<h5f"WG'm@i,/-!b%4V=775hH0S-D??niE4A4ZeK)u17Bl2"jEKs8M+YjitFm#7[P)4*!W)NJ/oMESP%/9*DkJV
%oBqa^N2l,=%)tPs91m\MB]O(4:b[=1rkR#NYk-Gd9,tIZ,N6uOdVXkD8:`1#_c`=/>.MX"foT2&=s]'76A+#hF0LH>)$/246t?Q3
%ao7*\$Sp@K7kW(Ci?rodHioC%>^Q`i?eA#K@2/:-L4m)U0nhFbZYKnR.I_<$<cO)B=@7?QI*$'<_RC=r8:XBs69D((:d_r+(V7bB
%:Ugc`m'J1.jMEdWaS1XtqG*9>irW7^#H!jm21LYD7Bu!uDHnQL9*[$"9%]X:CDq^i0+*B':g!sS$`]d]#Sp=*^4'b\Y_>*5AQ9B6
%FZ5;o?<=mp!U%er\H5%5j't]@d*ORpNUIQ;`/.A3*\LInLt'#>=fC_]&pP*.1%88cp[E,mKD[h&+mpN\ce_bk!B*3#>r-S&Nc/#u
%ief-ZmSVkVg]87I^uXJi$>fl'i^eroKnS10H%mIaE:RRF)`thWifau!kq#d2l$Fagn!Zin8/EBHQm5bmpsGW4;q8c^Y%?NAOBr&V
%^=(dV&GDbc=ipg2]#pU,\@@C9Z7_p$P0a=`897:V_mg[)e]oYjS5b4k]/2sbm/6A+&5Zu5VpHJ$8^Gu!o2UIjSerV:`B&cINc>]u
%.pI.s>fWH5C=c:J97'%T&;LS]4#C]3I!_C,f1@e+Qcqe#)rH]o0dqB4%-r^jOV#5/+>B^@3CPAq>)2DtaS&&_LudPH!$*>"fLM0R
%reuGFS4`BaABruhngG=RV2\D(peE[b3[b%rA\7(4jCfCAm+(*CNu<X;NYgLc$QRc)7h$JcV9HurScS@%@N><O%;-6ph4fO/F(VM`
%"PGd$>VEpT:e0.(*8=#2[QYd'\q.'p'e3Ve[$AN]dl/t9\(W]t6Vn_-@ph0);&,a'((l,<%i=.nWK4,45ff0GhDq%0OTSrR!`7pb
%!f$Ic&Af^p^n0`,F1#3u1mrYX1^jp.8j;0tVO`V`=b*:mln)7q#OG_Y:2C.>MYIAe@:m;8PAbc)^n.42O[C\93K?6/f.86K\^C5e
%OZKQGq.`h[TUbGGSggH@Oh_:I`ji7C6%\RS0M'qB!kq]COX-00&'$!92BZR,i40bZ6(r)Gm"@[.YLtFFi>=V;+!5?,gTJ8/2MSj<
%[`UtS`FAfTEVQI@E?#Id(ni*S(3#pa6(HIs)jUd)N]W<#Cb5Y1N1F%>nc]]Zn8Qct%tX:gAjnWHL=nRa!.`D3^-M1a+uZ_%$/B>O
%#PB7q*b:2M<!t;^BBJ/F<a:mJqH;sNW&Rr`-B)CT(:`C_Ln-&u=]%_]eUpcjb\2Sb@lJFo&XQAY(iY:*P%3%&;<0.rE2'oS=4fPk
%IXo5=eIX!b4s+dVTdcbp]B#i"^_]&[@bP-<-XVHM.KBQOT>%bUAY)qre-sk]k+4SaHoON.;[m6>b;.T>%;cst&''r]I&#EC&]b0l
%384$68j/t:;2'X3RDA7-K/\G"+lu1Nf>T1/d?HZrpA2I<mj%[[c,qg8\/YbZVntcnI%md;\QBC4jpHCheII8_!G$j?QP.Dr[[`aY
%Rh\k@A"as9[1gVL]E#L`,65Z]!*35`["Ts]RP5XU+W?HNk(q\!([/DUSagE9.U5:Z;Zb+h4J2`C$3DISa6LX*9,2j0]O@=<.=n$K
%_!+6p\W78r9rW_UAO;)`nj:'i\%ilT^%2P;PV90W`mn<hAnnY[auoQAJT=.h\%J[!aQGoR"61ob/qdFsjp`UC_DM@q!Cc)YJraUj
%Mhase/-F9U"3?T\,X>>G+O=A<$FDC=B9U19'0+gQ2MU+k!Q=.+DKnq@R[=9;VAm+oHEkkj>Ap<j%JN^;@>`&=5Io,kq_2#+SE3VF
%ZpZ(.bb0KiZD!jY7BPod1Cu=XmPi^p&;,NmX`B1!JHAhN*BR#,T88U&Opigk>t[Q!:k3lf:ds0Bc+>(=)&[EadO)1EXa&pG[8qf2
%(8HVU6543s4O.,L3OijA).0bf]R4FFbE*8>L8`_c/0kl2)0JD2k=pAA$ken+(JQ?\'P9bPDE#^>""e?^S+a?BU26eRIk80<K4KRi
%bQU="^9"#R1h<R2h\ZX#oi6C/>"&*&'UMt48H1Z@DcI.V_L*XN/+J`)jOYcDCL3:1'[hB8'Mo.0_&*Z(RPLP_L&&^*,K^FMUF[!F
%E[UZBR2Z@5i;sT0hKDcJC.a/4.E9<F<nG`]i+Z\(V+0"!EPGbR<$^X[i#8:qQ0G6/YcoGQ\G=4dC$=l(X?p6hP)Ll<;RkDUYWAX+
%mR0ODFkB@L!b>(%l2r,`Y`?^qE/T\(<.$)$3KUbNc2KF=>qq6\4UgESODuKZ1&u\eTTL5!NGqW7Kb7@&iGu9NkmS;/]7?uHc(EY`
%6Nj!>Z7:;?g60l<[.,-N6%uO5-k9q\rd_;N<?frKkDQ^<6CSNHj:`*NQCMq$%RMpfr+]3CMSL9&j7"7m&OYq45DJ7`W/B-7e%38+
%lfP"/\f8uL$80pm3"q`B*]?ok0K.i'KH&VP/E+,tSg>A2b!K+Lf`f*)D!SAHPGM]pL'H`'..g%*Rm@`FZSJ_dGaofX..D*@JD_q;
%*(F]%70tBap[&R@Eq'U*!!K0b/AO9+8UZuc@Iq912d,,8^5\S0f/Isb+jD5baA6Q7Xl-:M$#*tX>m0P,%O?"XCYkpddY>XH4uem_
%pbp.dmDXPTKrMuM(NKX;e#)J.F8j??a8!(W'/n[V#$gV+f&krE/t@;M[^H[.[;QS%4VRSuF+:<*:3D!FPA)X(2<XQT0NE];(\T\<
%HkRFWlnaSmH^#s+Z`E,mIHWT0mTq'EO4ka4I7skcR9>9]h)(>15]$V%LoMcm9GHAsk-o;+$L6>[*u3MZ(Fl#@WS0XkcL9uT3j5o7
%CH4\?.P#SZR1Hu!&63SX:13NgH(M/5Em/;!36oQE#d0iLS6\JP-8;EA4M_[:;e5t+NoC8UGbM`&21RdIb*gkR:_J;#*2`D>[_]:M
%!Q)3"8%=)2=YbW_Rq\g)EroPP(gq"Mfn9A&#h]JSqt'n:9=V4QAEm#%(YU\qgc9PN:f5"]:>kddhk\[s+MpnTL">SQC'&`o![ur%
%16:)G5n&9sWQ+FI'SpieqDqm9Kc@&/gf_Ec6I,VWgm]fsOt0[eI#HK="PM$^_4goD['R`3FR_X%=iC7:gp<r)L:[t?9B:)TRb-=Q
%(na\gMsr]f&]5Y&Tp+;d4gM\m//2PO9F>;![&B;"0TVF/@+6LVe'uJ>]`/r)o(UmA5Qm"Dd`EijV!JFc-'t8)PW)G=67DLp;,5rH
%O7ik5!6qPfm^)m:HVX>ZTT):6YaWWtf+_Di9]<Vd2<C8D`0*VI]&o5?q8O!JZKm9]rcfqM*8*raCP5mWZi\ZQSXn0[I((CT5c-V0
%PAgcn*%52]'Z4n?&]]&:HFeTm6jjX"&7"^%:`8\.Y&/b?H[`Y3Un'a9p"tTU$QEFu]<^spAd0[`T8p2s`^@c[RLUK,E5U4*P9cWH
%X-K!?SPSlEQb.`g];^'S[=;!Q?%rGR?KL&PFp\DmK&(H:fX6uta`OIeP<Q3SD]O`+n!"C*CUHcWn/>o%+(!8t^C)@mRSa`[W[!`a
%.$s5iP3f#obEBM;?;YrL8sW?WdL7P'<6\RYH:5$/`NeK".[2LWUQQpk5p.qk'8'A(,0:#:H*2IC#/YsGPNmsGf"Q\-Bufg)lKa)c
%@%KR4KfbIt!NW(9F'nA/X\\PJPU\TZ,e!ol/@O,Y0ttoX-0.,AP=/da_n]dNXAFqTZ[12NU=GN6nXP7]dC8_]ob!mf^#F@i("d="
%;,io((=D/7]k=KK`%,Rni0,&%a519]ULHG&,@JJ_@/eiheFUMN,'"Gj0:o-qqC^X[9hn>0bSBU1S.OUg5%V-';W3cf&cpNT5U'bc
%*-rp48-(ga55+@2WX-4s^K!_;ait;'F_IiuFJX(l5]:"D[gW<s=;r1i8:qNt$taIM]DmcK/+145!R.eFnYS;.SHX'!1M]dgGo<Z%
%G:i,Y@c@sPltY3.NgUeBk-/rL%tZrs:jE.>WPpd4lesEsFrFmEILFFV['d`X;bIk[_lTR;.YFX#\Wh\"lN(5FaJq"h8rInf3X`CP
%pIO>()ON&s&7G%_F).`1!gQTB!$j)<5NF"=ge)RmNbNkXG1tRK-\7]PE/Mf<!>#KW.FI&t"4b\GCD;hXs&gL8B_qS@UI)6Y;L0H#
%g=Hl`m)rEMqqAmMfJME$WA@/g(_rYk837nj]9US3Yul\7;)QTdb;F^m?bX2IAeMG'NnF\(p2+j<o`Jm;Ds;Y`o$>$Ge=J_Fcb6YK
%]k^Ls^EYm(^Y;=nT^H94nhCCC7n)H!raT$#[EGnf8rH#82^^*$'G5feU+>JNPQ/8>M;"ku3c0A&=!Te)).lr7YS.HKH+UW2j;c(0
%hOqO5F;1!QKUTN-jCg#"-9%\:H-<K4!)D?"E&GefTX8$Jl@fP$Or0t);GZBtT2mO!oHcbTqbICMSlMarPd<YQloK4ge>.iT$6P14
%,6&\qR)^R$3<0C'B6@R&O?s:fDm(?'Rg#m\Th7.i^UJCn/4<?0c_TJ,&4]08h8bMmf/\")_J!l;mK$\V\:D=Cr\/lK%6%mFTlpaC
%=h]sB8if:[pfS3T,K7B3'*203OpfsN!.js_f*g)ngE]@M\\UBp&Mrmk"<.5QotAB%Ik#c_E5^?ohCDD4V[DLgq&/3.jmH:jZ8-0n
%V2s`'AOENh5P;^lZWu)m;?>0<36-emWW7PK.c:-RGB+j#2@a\ms87YK/i51W:C0T*$o(C:[KR;o+^0^+%d\]7`WTfi.\[maqlnu1
%V*md.0\&DIR&ABM)Q8WQ@#J#Yb.SBt;*&uR7n]PsPj/?o/ag4PZZVa;q_fiK&0BMQS!/>PhDbX3Ej++e8(:.bdY9'Z?@VkFH#M1s
%p9Kbfl$Np$E:%+CZ2Y9XB=+&(08B?)>Y.Zlb"s0'>90QZ[f!'NG#pfn;Kl,pY@S.MP@;<-6`V&nYcAitd/"deMJPI3#:2D_Of6-#
%;XXe[8&l@S]<"ZUNr#?MbACtCW-5ug)YFLVb(<#2:Ru]RY+u2*+S3GHSgpK9r.5tIOmXNp4OXZoFZ?C9\>^3u>+O4G_'ZTi1FVe=
%Os[@'6`'d(BDeK`5a@7H$P:bu??^%g_oln7nbNsUcRd&-9s6GThagmBE'Mb6%@%,J@lOWp'L..DQ!.P92j0N4Tf_Jb`;K73?&b%*
%j#(rU331?l5=[?s%q"1?2`$Mh)HK=Y4OKI^Y6FQZEic/:CS9s7IS!]6)DW/^k=H,1.[%1Jl_aHhY5L%0].%>f&-0L:H[H=o[U"7Q
%-;5JU_`njfPbB>[nicf%nj1-qo/J,AXrm?hNU(A^%kN9Iq6h1Woa`')`#]%"E`"S(S]9^:@0;c439Qo!>Gs^/KG\.Mkb>@!1N7p0
%TUZ2)I\tjhdP^s1hoaWu&SJ"om$e,)ht<MU"d-KH*Oe:9kht1n!N?Qo'iE<6oeJFd?)8j.:ruQ7-mLHc<:6\(bmp'3n"FF#Kd&Hh
%&tp/.>7B_++%JV\,u[*UC=-%*-W>R62/hMYV[1>#a+O\O66&cFXjTHEZfJ#lDDbV>]65U$&F1JA"l.)iBW5bOOUI'j>),h50-lSE
%(Xtn3"u.2_&,\+qW;rIS\9qqf3-1]4+@rnHoT(TTF9)>b,p'0'-V+fs'1hB##C@m1W]OdlJEYtZ7[5MA\fuVDf"_l##$;sb:46p"
%-/nnt7\D.t(FT9CD:R10"\6HuR>iQ4Woll,[Z-/co3f+ro!,qE$Cd=7j^-dGS=a1X6huR0,kK5dT9PF)?&VH"5\&t)k!h4C,V)BZ
%(ZUg7+9eYCFP2tN-6#W#h]`NRFllb+,JZp-Bh)*[+neFirLe\uWqR%oIXZ!%U@qX:S^][AjI<=c!Y^4&+5Z"P3?M_k"_IgE?,fM:
%[<ni_E/hG;.#_Y(Zm5[NDdh!?!u(PiKML*0KJU;1UA!->SkEbN"N8%H(kL,O"%h#edH_7F)AL=72)k#N(RFXSDfek%$C2H)+SH]O
%l0tR3`tXIPio[=JqZ!,K+S\(eZBjH@9<5`)c5H:7nZ7<>BG.bFaN,dFK@(VR4>^=VGqB>q$=\X3-oYIm2]\PJKZ4N%[Hm*<1?E"]
%*'b@DoK/*KaqO')_g7!3E<N\-ZZZM#e[2n(`<W//-MSbL08(*f?shgV!7,NW]j</ai/R8JJoM;9;^c%qHc6^W/#K!6+U'Iaf$I0i
%ma!dMPZqYXD>^/r#+Ye3A@DQs5XLOaap5"a>t((?+L(=HO$(dbHB6RcNTk^7>h2CffhA;,`Io6X9*AXIPc=hf4Er0qg(0E=eTjYc
%W3>C:34JnHoFGG6dt,LrLs5%hKoj)K=eaIkj[/JXSM1@%Jo(n()+'JE'/]<gcl6aH>1a#Y3lO;emrhQ1X5HY#r*#tqdJ2^iKq4Pd
%"Z0gZ9Psq0*bHtO$QDu\jX5SD2p7us3rjs+jjCXe))rOC5`]/K!/"Ehn[AfGjKuSejD["#*KXtSO)/-PE,qPY+J*m2eeBlH?tMu`
%#UT.<#7pG757@djKaR)5\TEu[KSu20]**/Cp`tAAHj]+s8'"eM6gLHAK2R]Q$DAW.FkCUM-3jh7OuDH7@ON6?%4K;9ns#Q[4k+OX
%iJLc!NakXFS'PW6"0eSpK7'?A:JPWH!0arV`o`uY%16NT^<n8nN$S$8?,jU]%gVDr*88J[3%NF$@+MSgGakEZ+=2+rJsdpo7lt(j
%?>Pjh0I9[1>%MS*DE`e;r@n^([5"a_/meVN^Gqg>\`WX2<^b;tYs@u%E?dZcJ*[6/5_RK)StK]@)A,>1)-RbO=pYc8@mUA'KrK'f
%%5;?iXHa5eaC#\c%"&?aU5:Zj_)8dOm?uR02e6Oi?B=KT(sOZ(.eO"FK\MhNIo:U,84i,biGMR(/3mcVrQI:WiBG,e@S,1Z5r<D;
%asfrt(o\Q7FqU6FA<:=,50U,Ne]W4AY8E/\Qm^3Pm1ZB$PF;)1[jmo-X<IiLnG<d7#^iAT=BWm*iq5j5n$OWS`:?_Ie>F*PU+mJt
%[K7U]4V:jni\B_18L4!%Xkn0ApZR16VBSlcBu!J]FrpY`$\D48'43-jgh]i@hXm&HJ+)BkJJ;m"=\s3/QU,VoFX7c.@\89QL96Q/
%kJ.rB",uHPqKV'"-.mHIqF8RP7bZ9:q*4)#(7"La>>c.i?2.[g>RZ+Z"IK`;\hrIk+aoSlD2DQVRS.c:+DQ>7E9.@b'ed!d#ss:+
%G,\%5_Ii%BnCja/'oG#<0KF/kq*aE%1(;f6j*7Tb`0;-aU%#Z.H0(+q16hDfBH1K6ctqjOZ)Wi<L.*aulUIp6KJ_4Melp;gY.8PX
%76YKo&gd7"=nTWY7#2jqG3.40V1Y%ppg(;nCsjl2U3KV3^I<uiGLVl!XW>Trj7<u,'i@[BTW)@k!p7"1,/*fCUN4e".72H8VB3OI
%XrEg/UMaBiZ"\o.8</HE9W70VjkWDsN9Dc!Qp^dD;jW<C'+CFL#W.u!X#)c@9t+A>4f&VSh@Gm8\!C^'D+dH@c%1^@_B6ao]G;n\
%`f(LPK)1Yb4T^Np#rqF<s2<9^W-%7OOFr5JB:$6W5YHcG_fP/ns+2Bi4mTaNl]3KB&2Y\3kN`l_]/JWQBC0@@$CDp>6%//";gpar
%6[_Z9S;Y`W5SXPF9_mdXJPcXZ=C%_]Il%Jf,o!LB2k8G-m:I$_>'j_!JP#"3K5-B+*2Q45'_qOr_q?<:f@KPo0UWGlH_UJSg5P/-
%>`D1F_Nf#2\$Op!KP]bYfYrcZLgl<`C(QAjOl@20D=!S^'nN6][_r%VWmKM)n?]&n:C)ok.]`VCI&Dd9pq/i@of9'd&\1jB9aeq7
%hg&I(^%Z7+$;HG)llAlmQ#51!K[;s5-CWpLbJ23^V@Og-+h/l$32D5!=)Kg=rJ-A`4%mJjMXb!!(+D4!W<C7#b8ZF]LBs.J3,7&@
%gEO*p(f;6?dY$CTI9nDBYYmT$GJAQ#(ZYBnT?K\0ZiHbb'[(E("%,O,o,1E=Z2(cf>$KN3UBYrrRnMeq'sX&U\JD?G@g<b2B=ufi
%`D5>Ac#W,a;G7cG>#Ib:c.f:aOu_fZ!l-TDd1<-\+))@-aW>+Gc(<S.j&iP2Y)hjGiInO;@FH0f!$isK$q.#k]YB$>boEKphVfE0
%>G9$#([VL];PJOe`%j>J1ethX/k7M-A9Im%7&PVIEhsr),dQ?*WC*\(Ht__Rq2l>^)CT\(_eeko3KZ(B@Y.oRl2O:$b8_Ysg,A&]
%TS?]6jYNg]Mg5]]Hm2Xc(\>(>a,^")pGf%b.7<aYA*AqCSuYHL'MYiEGblPUr5dSK&pok8;1M49;3^Zdo^Foj[.^D)-Kt`5r>q_o
%ZOMPs/SnmK,\sarHZ]?:E/"##Z;&#6i]4dR.@EG;pS+N+V\t\jDc!D7&GTg!3D%]7$S1+o`hn\2,5TS-,1T$Dq5L>+8A\J+YdPRi
%M!k>b=W.=YaSRTl#(.uV9s<.1_]*NTbjH+7^8o_cL=mob+%0K/ma-2tTo5dL)?rQ]>0QMJ!5qUR9se-Q]4F>T9oE"lZrEhHSFBCD
%`H5RLJtX#4Bmo3t2U-MLiq56'I$0j;Z_S[2918X?%LlP'ii=G8VkmL<h+#"%>[=`%Z36b;J"2^#fQa\?QT3dKL-qnZDft<,AO=kG
%i\Y?^h<S3r>n$gKThca*lEQ2Jh@O;/AeP3<*7ckMY7^@.cB<[5d;"##l>D`MAI\n>/HuO^2bgS>d]6\&#-;tNXfbODg+JNhNbXG3
%`$L_bXbS2gp,!^8?uS)O_)'g8HBXT4R<gF%m5M#?#i?pi/R%m'@@1%=+<><fY-ujI^f76)!S<0WkW\QF@49nV7t8BdC+.Qj0qi*N
%JUF]pCcZZ.pI*1.Rk5$7N,+;H[,EFu,Um4C976jqF1(;NJ'A=jg_!n#b9-cs9',4$6*JGcAlH"(g9JEC.#F$gneR.<)^\VJ3dbF?
%@HY_Cc`1Fi2]@8!IrM^<SO6che%SYH`!@'pKd%X'/M_rkGpIN)nmjar@G139gKpc(AofOMBfUV6#_neW9/^g<!7Z?`e!INgZILd]
%*2uhILe3@cLeD!VnZu.G%rgkd%W`O"E4t*YHB'g.qL0&F>%&P<l!/0Y1VbY,c3r<GdG2Os2UdJNbKcqPNdQT;qBNX_jT.P_MOK-%
%ILSIZa4'[Hoe^cNcFfu`ZVTh&cXTGjR\K8DMG)nDaB*,F7[=Xu<k_BG8#<&j/PLG5r=G\I<;0'bE)oObpW&*j/=\eu6J2JH":GG`
%e.4).>;HR_F-kSTPU$"!j=3S[k+'l<l;aC-U!5&.Pc%]Q#*d[]lHYu8YQfi?kIpk":mH#I;+$eq\(aps-F%(14/7--9rU8::"a`d
%>33W'4i]mV@2'$<](*`9e=<^A&jkHm$#tE?+5AOWp%<?'`Qg#.=l`RcCUS3AS7)ULT&+A1\M)B.[L1J"GP6i"5<Rs"^-\o<C<2U4
%]&\s."QP`6G/)O]`/'nc\du6,O`OXte4Tk9PgV&eZ&<(0plqnOF,&Z*HUqQm7K7Q0AO[OQSj@3`0F+dc)DR`/bdK#j]='gQYlm^)
%(T@'^E.`!oL^pS)[7?j4aH#\t<h_5'(;@e+ID$q4BlFu@Ut\f`MKZ;qZjp?_A#@s+Yd)^j#Oi#01_hpS9SLctM]ediJp%u:-[UPB
%L#Q'F5O'4_b-9ShDUoBF.;tlq`*l#n@QuqIQU2jGEHRFD>"bpFg8>QV6R*"lkt"3'O60%s(NZ=h.Ag+%eZX\EC("P4BO+l4*[16U
%PC$;3>q)5Z,.Rj,f55qHRd*%VNST)G^141)>W9SD.59<<Q]2q#MoTr5Xtk0,>l@drSHe3s'ZPhHGUS5Zo<d%"6qI`ZXD[9(_3WXt
%.Hp<)@5kEjNsi8Rc*)KX'I[r05P.EPlNK#4U,!2akBo8*ORNqaH0f8t1,jJ0Zb<,(>bK)Zmc.r#-05;HTQ2E#N&bE9*.9<R-pl1]
%;(.HdXrX7c[_lCqUh3O+qV$tse%YCA?KkGG0e2Hu7K$ji["hZ$M"N9YA+Z5T0?W]'N>>-NdB]/;"$kP^\LK'p5=F9d9%?d<R_>'*
%(,Mbu3:+otKL\4?-Zr\]7GJ%hCAtNBC?U?9Gt)J4`8OU_a>)')@3HW&5^>`%,UaMZP&)l&\bgas<9pF%MQ1GW<S8@Lj<m6];L3@C
%ej/go?OmT.AY$W[9t#M4(gq8UF5Bh)k?57:aNeoW,]6eXO`3<A>?gE5Sl.C0c(^ucZF'";B+e,QIX9W/$(["(%V(D48,[;JEe".m
%"e]p\@"2?;fV'aFLQ7o2(D;PqHSHdWY1nV]oUeJT2t%.1>,(AuY?(*t%C%chhfGZnBLFf-5gqc;6n@!+fGL"_aueJ139AQ!\++"%
%^W:=(lrjJ:BI8-)6OmnsXc`iEK]O&iZjE`2ZT$m`9rD_1g)2U^lMhL&D44qUmgDN+cAE8]$oBXs_#?uh!<P,_:$uVDRr>eL9rsi]
%8u!K=>rR$;6W>&[02*?a?6Fdulq\e%(4$2[M\>$te24EW:%_n\!1AI;[ZA.!:k!r>C1ceTcJ$E#Uf@KDOQKCQ[1oA[-^5Y4gf[1g
%Pc\gT>)'r^i45nHQsogN"]gk<.+l2c]P4?`b`6qs@bg(SJ_M$mQ$C5rg&7ap#P!eQqsOZTJE`fh!REC#G/\9nhO:NX5qJDZU#<X(
%@T-/USQf:$*u^/DTF8-63%<2`[HhBLKPU&hY9>;,jB0th.?q(iL'?][OJZ3(\KkNK*nBcG?F?T+4W6.nW>#e6>n,l6me?Gdke/&d
%^lHQeK%j*6Pd)&96Ro(D!hu)\8"*#C&@50o&i;=a72DlY(#0JFV@kHG'GI6#17^6<9pPW=7PfJsNcnRp]GUlU*)Qgt4PjHQgp@8J
%M@PsH?RTbcISRLjRQ.VPAYC?cF2Ht4#t^BK-K7L'"*_NA\JfR>QdE3X-$60u)Rlah946*\T[`hD!>5p:UL,,4Hf#pR'=2;6fushV
%n'EcFXqP"dV\qo5Z-Gno%(SflW>gt\kcX+m![",D.s1(/GXD9f[`_&a#ih9-o+m&\%LBFL`GT,J$*F1D2Y.!'`2:R%E)"@iAqElk
%l?eMmC^//4a]C77:$t%N$/l*Pr8'WeR+[C>dRW"t(fB:!&J@WoU#dNFWlR<!M^7*Q4H_O1IqG&52SlgY1ch5<cEV>^7#MK:S2,4n
%s*?#R8MA?WYOoLqAi?W80U"e$<C>p".`DXPR>_VPa#oiN"WO.S1<7i(/Q.o$ffSTd,\3_U./*oT9Cd=H^^M+MoC0<S+*6!khl](8
%qDP$cQbiTeec,adS2oJ7WdDZA'93;U>Ks%uqFCkeD,KZ+IVu-CCpDLd("agsL,,S'%Fdfrd0:`]6%!ftf_?<4$SYRAJW6?c'n+)^
%$-"YE(5-iJAH_.%GWHeg4;OCbBZ2ol&]*nJij')OX14bk?;^N+pYj1U`hRa0j1T12iJo`hkquVLD%,!TA>+h\0B[Q)oZ%>VA$6Oa
%]euZST1m"RiZ<63f^RDMSt"e.lsu/W<:[=`S0Bl\WNG4W!HMA5SH7TjpAiG,[8P1[#8bY2!qracUO&QE*M[UeVi*A'QjUmc?qH+"
%>m`lCb0(P=kOP+]LC:U'??@0"2]Xf**"]_5I>/2Y&7'&i!m8Y06P==Q_^8"W8E/ZjCO!S3!8cPZ_1sco%VGq2mJ:$B%7S4C*W!o#
%UI7,e*28Fj2aDDPT2J9kA@4a:".g78/)hmkTPq6N'jK2C_aZtsGkcb)Z#*<F_Rl_cj`j`0M8$a[A<,f2Xj\0"f5#5G'8n>nHs#@%
%5U5Q]]Z,Bc<_^$e1e[G[X&2$IV&Ikp66)afNN6Y:o!W3d)NZt<L]nt:NQ+Y1fpI@2]#K[ADQ*DCA)#Pl>UgSb;A"W,D.-1D(V5cI
%c/*[W2W;@@]qNIGd*lefa>JuC9-r\89Mb_'Qe2W\]_$ckY%E!<4dN']a+eL$6?+n=Rf"g=(I>GIms8[q6^+\;V55Bci3%nnjaEFE
%r#I-L_o$#YW6SsA1F-q\AYM29h*)U')?eh=["m7h(3T!$9?s$5=Q%P!OfG7aTYh4B<MO6Lc-Z"E]G2Wc=eTZ/Gb%1i1"s)?DIV3h
%.eNI\hi'*O0g(tUciip#7)W8?k7am>,!g3*8]jtp$kj+XoqERuqT&4Dj6NG4Y7<^)\04)&2&;!GK_Vg-B5Mhola[9%=>>PZ\;)V)
%!25tk/HO9pQb_7/Na3:Y5=7f(k%0eG)jKNqacL1d#HWZ/ld1`K(/%<mcjJ?FBP`k$+GMc+OkCTJUilm;f/gsG.0%a;BA<+_ZS^fu
%UD\13[JcDM1+8gu:b&o;k_QJF$@<CBR41V4j`E;c#eTTScj>m`b`Y0#.(>/r<5iIT`.ZJg,`I+uLEqa8"ZNEbY_Mh7kSBWj.sDks
%A=DB\&10f3kj:0<e)#Au:BC_c.$.rF'.g+V:2?o'Yei6EfnbR3L04L''E#+.@eXL1bC>"IX"L/jQni=V;UnKbPq48Y*SI%&:lsAJ
%"f/.7b&aUNEB2b[jk3&S?mlbI<l_@Si\8MaEU&<q;5:$aO;pTHgD!gkE5@89'U4VAe;Ka:\JK]S1mQK"'cBD:hT)5kp06k3\4]9U
%$U_HWSYdPfV[G4*%PfGjn=rFUVG!qQ)G1^YJN=G"Knr?`@4Sp'Be.:Mi$Vn:pX@\iW?'B4dmfCHpif,l':)""Y`VCLps?,"m5ajO
%<#1@g%]X*IK;=%sTUK]R!X$]e[@ND7'GtMANW^J6?h2fj/cT(dH@=FD7-bdUaL&]i-tNR;o/pc*f3`P7SXe,h'(nUXR.c+GLqF3l
%qN.un_b?\YC0Lhh.$T#.Z,ZuY,P<qpH3f:B["D1^O,)t5V)CgqHZkHKY'EB0Yj;@j!JSh8h"DNeFC8k[`C)2J<3^f6gqDeraY%V#
%;P3j3#ZdL*oio0Mr`pX&Elc"Q[IUlf?0&siMk$J@kFh"G6>=Md[(cQ[lk:C'7gTJW-1]$o'Dd)Q,/[:h4*9i6n1L"l&B\eNE]nK)
%k"G.5`F+oCq<H!B1GUj:epNub9Yg(AMN=!jV5-TIWrY'M;'E8;bCiW[!0b.-TCGH4%iUYU&O)L.ks.5`iUM0:E81824DIZKUhu@p
%Ts4.E1.DQ2RdPn_^h3NOV4M]TPujua\SkLsoEh@_Pml2go3\uT&o/6=4O-J%b(WELjlo"ef6Eqs<u.0:2\>Pqg@Frc,nG]'5Vr?m
%Cl"J4Y./_'k*6/9b(l16jAeisRe5&r*?@U>;0Q\?bQWD/UR*&OfBuN&eV4":(O>ECn\/_Gh2,0OV<#u.RjY0*@+r[<=6tq9QKpHX
%QR\^>^iOrqUH[P'VP.0Dei/JG(_:dGVb"P9!%>^8Mlao5W$p:W_2s&E\;#Jb8N"q->=;"-dob-5qnV#]$t=oRBc91[>J&A8<@HpH
%dqNKH_8n?0BOW#Oj>?tL'0p?h%ir2K7"Da*5TRu';7JhYKKKr\Ns&m*(%-"(JiXfE,Xj5eCh<gPH"C,1Q!Dc7g@UcM9RXV%??r&B
%G&>^4\k#M=C.j,j^s]-5R)&2]9k@LIW5E_T)0AY=[ch3-@+s-G1Pe:&ODMeb4%[7,VHIn<-OK+jA)HiiPa<+<%OJHg]^-8"'+@%R
%-E/u*,\+\<_rI7dZL'*B6,+$N[Tc9&PR*p\KMYT>c9d,T',i0#(5B+03OJ*t!\j\YereOpVEON!+*4e!AoUs^'p>@*EYF<..b0QU
%rH/gc/M4mK_#qB-5WYM_B<Nes;23[TWuO',h)'KnD&9DPTSs+ag(h5%E*Qk(2X]+0YnA.QVW=HV#@0b<)u_#NK_s@3TA=j<?dRV1
%7YN^-MZ&12:;/sZZr>IuOF+mY2`=5uMbq!LLH-`2%36.C=-4MThRXIR+J>g2229)R)`NeZ7t2;h_(nh'ek`U&9p?+N:f@poeXC=i
%mT98\pd@&4h4`Yo>;jE(:ao"GF2eB<AK,#@n(Q*(UA?FL7%;?H!&'#oQ7X5,ABP\tUc,ZiQGg.]"WOCKb[S&lY1*GMpu*C2[kp@g
%@p%6Ar/X(bjCsN!WB]g:n0#<MLh%Z#6b71"TjF;0bPn6p]UeUtr8Fd)&is4<,U;F+LlATX^m%!uAZSgs5r(4SR,,2N9^7*(/jot1
%PcQs":AHN\?ME%^p\NHRM'>]ImMZ"DJart3FGR0oqJX.t5hGEX/HH?k6cbXJ/`7A/0eI4j"9Upb67l1?#u(gQ!o\I=M>4rMaf-Dc
%aQ(#=ofHWXUK8IX^d5Y98N=!gq^q_gdPpntOBsW+g$F!bG<2-OKqa/9:F],uZerifmH?;_,B&fEh$g!M&m$AIn`_j*1,P!*/-,8&
%]^NP;2'c&=&l(fGn]0&)U7qX"1;qTir%-3fd'9Jmo0IAMGghVG.uI0Y=ar$SY9-O:jr,C,lZDB,6i5f&qVRtu%P=)[*4t:;NZ,$R
%S@3qrK^BM+knLi;;0@nmbGMa`WIQ)9qVJgc1m^*uY[ni*5T*rcA_FdPr<W9<e6Bjl(:6O47$X9PF$!XdTS4`!$q/4gJ=<fP,C>7O
%o#"VfHWNVinC_\]i>P+rT*bXp7,6/MY'rp^YYD@qXcOi-W0BALk*0X"Ib4P1CYS#<"_:'Gp4fB,^Ks<pck'I:q59qgVp;j)/Wf.]
%f"ab#@r"]r>.;&iP&q4UWGM\sVZC1g1lP8c5X1e&QfV?r\%T)uXD&fdeIlj'Ra<9O4?+Gs?/&!p&_UXM<t:_4ZD&o<7pLGJcIMa&
%F6fg]7Y8[i=7bQU&%O7:'nBA%^\NlUB2oWrm+taX!(jpl;]`=T=Ta:8doJn?#).Lo4t!>V?`/>D>pV<i=CEG4A(GLrP058ANsJ>H
%M&OlG`c/#BVPFWgEH"0tF1MMBT$1>.7*"ji/uPl@kC)rMJ[*N!6)&B<b-"huPHI$B5W1@Xht8@kehf`?TLRn4XQ[)]j((lBIr16R
%5FhGl[tVM]b*Pq9CVDC9iqX`<@S?n4Se?i=/E%pCU.ll>4?&l1<6,X,G#VGd%#>HEjucT^=tE=I5O*.R/s"7CqSrYaF*gTe\jsuM
%`9Y5e.Ucn]"f4M0fUrj"IAtjn4n^>,PGM%S+cs[d2EY9*/MmsR=/`nFgLY15_oV5i$9eBYBCLmt_E3@Y2MPg)Z;ua"p4GUjOKj,f
%/ReM3Bu$rYk4FiU;@**tIbsr#s'&j3"oSrh(6mY&;bNJ*XA=J15gUdU&b8Ef\W<R?cYq,1jA.L&V-Sab"cZ$&liZhOasnh#5!BKW
%hb&r%5%!"/SPe>>LJ*)3R1$ei133."04_0n(>Qb-dQg!LTT,oIT2b\rK.q\`EQp"&O0B)N(OHqtWTZ=rL\!;h6lTc,L*Ir@0NT+`
%MBNY^^S>6<k=Lpq1#.heah@"<1(;/fFBlT#gnaZVGiHg'>l`V5r5[58Lo3fm>erN8lX/gEKa;4#@s1%c/Li?_6a)H^L8c_7<=YSP
%EW?'"VaCt"55=uF;"3Pt+1:M0H9U`D+/!I=ed&3s-uG>%G8qk<#cUtP-0RHbK-_1Or+il&\CE#0K"!P&8kC,2RrSnr8JnF3H&gHj
%Af[<DQq\U7ZDF\C/&Y2ihei#Q-nV;]E<nEeLrDObmDU7b)OBLPGGmL4I4*N@_m.M;;/BM>IXW0lDuG.aTE"[npXfHE5JR3`s8IeD
%qm9'kQa=3D$7hLjUIFH%nJ\1S$fZS>;O&?dI5ZW*HYcmad>4RF+Y4WnK7g0h&?Mnrh4\_H.:Do`,K/-:h&Y9)*/+IS'g+nEF22i6
%-(P*7#Mf\O?Ift*&m%DrKDU^[>C1Fkj2qKij\766K%h?V9?dj10Y1ZXA<Z#SA!HU6.#G7RU"I+rL-#jtETi\H0beN9Qlm+*BQ%.?
%T%'&,%RM?6&0=(]8aY7OH?8l^A.=jdl"PDH_aM1F)IAA3JRM)J*GXjLYrh!-Z!EQnLd(NOPV^60#l\(_^7=r2pB>h-H[/>&(]QHE
%LGMDVFb=L(=%#`%*ia''9/sPfH)Z(V;>i*n/]L"5m]R_XqW>BkNN]eaA=NK/&FZQ+\1(RF`q/bV8@5<.:MIW'qS@(+D?1D.X/[<$
%?$[:ULH#T#ZJX"*pA5b,TBaB9eB8IG%'`RsDEr!\+*h@fbJq]o=%#d-hnnt+0d)[kIE+&$R[Ejm^7Y)CT@OX<O5Q#3CqI]!,lqhK
%)JEFA\#fWNI3,psG?)*a3p2W"20JU.LBh)JF6b*<dS8WEqqh3:RriOt\d,q$56=B9o0h>r!5C&Q:_Ec$7*>@R0iS35"p`MnrBpqs
%m4;jfs#K`$IlQndmgDNj-@El[+CDt^Ju2n!qQXbX9WJ2C%*Jk>cq^,aFId#`Bst:I@WaqJV')%(3$_)O7"d4+IJX0)ob&%U!@8eB
%`Ws[FN->#[[)4&BI3$p%*m<f2Ts=m#HI&Z@VF$$)o't$do]<aS]eB-kLsAF\N)1[_/N^e+&@J%oPccJq>A$L)2Zu?W.'+IYH(\J@
%$`f$Ur:k'[o6ijjgF!G/<>KrL?B:ef_+Q!TR^IL,K3@s9Au/9qG9;SI5ED4CEH,BNRafPOVEuLprmY$?VK>27JhTSA=8e/.dPD#]
%=%HHoe0)8a1ZXr2XQ2DTZE]0'XK2FkU/@tTaupf>2.k>AVkB?3L)oa9Q"6NK[]XuPnsnRKb67T1]ZLCDM5CWQ9LBggOnOU"S@X_P
%nJN;r<HWtV1N57&c3)+W1J+kfKSmZSA#8eo=l9/)JDqqVFGac\/!@`!TtEl"=VoP*.(#?4rRW#qa"D`7:l(a5T)bu4dj$_k_^rJA
%7rOjEX`?$2G($*W^i<?-XC3Dp1&U0qLjiT_6B1;G]cA9NO="eEm0hDW!06P9s)u.qI\+oC+\?U'hrd$T\n,>:+A0f!Uk=LKo(,0W
%?=Si+=](]Hm15bZk?"Wf-iB%Z%**0.!G;sa?^I\Kp34o`[B"/R1cRF;djk=b$m0e]M'miq"j7C3DFqI9TPDYjP<[jhRlc(`PNI0_
%[0l"1Z&SP?7\@1u9PI[rYcH[,ioulP8F<X[6cgWF;>j69i=/m%5%#?ZAgBa?j:;9RX:dhlEEcBYJr4`aiZA)!'nB08Cf7=ijB%-i
%D;f']g)*`<pi<i^DD\(I=h*.EQ10j7WBpJY/75cZKWoZV<_AY5/[rEb/:C>kaYOcM&8(P1\>,Q+-rbt3pS(b70K&-O5krYPD:4=)
%mL`Hf:daHlE2_Znnm(nK`UtD;U"lY?=].'>86)CjH49F"A`(5Zn!an/FBW\!XeGSkVPXDK+UX?(\k>r*Lg<S!knK9FmX<>WaR^bS
%)g0N>]cYLXU$<$j4&u3#??fp^Z'@"]%4Fb'=@D,Lj1T(*;bHhp.X!eT<K/A_8\-t!5@/hT%Q=[JZjOa<RsjnGA=CN]D\>82j/=F4
%N#iQAAlFVl8\8:>;kI-T([(BD_ruhPl5&?!>Pf,Ipi>4Mh\TC(4QV.pZa5AoPhY^p:V82F<!5Z[,NJl9QeHKD[EH5oO$hiI7-VO6
%fi%K73_cckTD-V)KrYcMS")tZIdDBJkYP<\Bs\oh<*]77nQ=P_J9PU6DOB5($D&D(3I,Z9Y>L5>qe=r6>EA_#'OdAccjhT4/UD9(
%?OrWnU,t'nY]U0?n&Fq>lhq)f"<X(*C()Dcne"N)+c'",n&;QPjeN"m0FcC0V,n^)h'd82Po1]:.QGDffMeA@*q!4)_/3$t/+3\d
%J(3![[jCL73$QCJo'.R0lr"u./O#E-%.[$c6ZNQcD.JunJ$.87k1En%^[`EJNUc+/1c.t<F^T(l+8/0&-31?TfLCr2ZFK%ih.7D1
%aS)1p4Aq,k.u%[eZHV]R>6*J-X+a1^n'peeV[s-BU,[u@R<'WN74E*T2(B:Fb:l;DUG8+W2M>&h9"$.^+Sa/Vk5A+0s&-L6?ALr=
%Z/A%%+DFHSqLMh)1G(jJ-%SkF,(0.pktJV`Z+1ZhCr@8n&CXgWOIj^3dr`<`7\Fg((*Ujq#eFa8L7"shAZ3I\O]Q$0AsI$41,kNt
%eE4"Z,TI-(H;[J92/a7mbqpmfHgdq6+)88d]?DF2&)Za'<c13T1&/B&C),*8_afITf[+HNjB/l@>fG^$g%s[A^0Zt1ofrk#2m/QZ
%I)OcPQ..<$[o09Dj\[O8.TjU?Q>QjMR`cYSi*+4<]&kfX.R[?@5(KOg"J2fi`iDbcRU2QMap&<11f?lu(1qNG:WH1d'E_^P6`uhY
%4tem=nht.jj\9[:mU;6V'tQBOA8@(>hm6bJ'm`-)\!qJ4aggBUG"U_flP&Ck.J<iQ4XhnSqG>udn3mIB$]:8kZ<MQOp?XMPFnLrP
%6JNo,A!<sq`MR=Z.YXdnH*8)cqAIlC"+RQ0ICk7dYpeB2L)`,!Mn:3Y+-NV\BjPiQX.+64HD%c"_6h$^*_RC7_W-stW,pqL7bI8Q
%+9G6'Mjf#W!C&4m*,RZK"tI2LdOat?Z0?ifqj=BnY--=\k4#'/V_4Wa=ru2sM>.G.0r1u!EgW@X.2gN9+#\XZVl(Ds:ZX$M8BR4k
%b07GT$[#L++66;:%1bA&VH(+RP@>#"I\3r#4aE>-%%:oSM=$C/hZN!sh6"RfKglUp</p;ih,%9"g%P[1dF:QPYKA$0A-i_c=6;J5
%YlU\a)T^=E!8_MeDb^XO%o)rV#%1/?Z2hg2V]lr>E7%(QU$\rgb;CW_&hnhn]hql9jO#,("ea73G=C-2fictr6mPll-]rbBWR,2U
%%i$SRgp$:=\<a'[h(H/P9f`@(9kS-F`X6RBd4ab'>>lZtMguN\<>6SAmuO77H=`A8bEI3OZ\\Q_fJ3,>/U0t4pE1C/T[]cSFdo[R
%B.,1V#>^"ZJ*dh:BbYKbEX1N`4R6utL&IRW>k!*@J+//'X+>Z]f=Y7/SP.N[U>3@97/pr5mD_)>U<>Y?4FPqU$,Sr(EFO#%Sq3E_
%6].HrnqGhl_*]HVa$B(Z3_@cNKjMC3Iua0i+0PFAcfC(W/,7VJX8jQYjM&ER&r;iN,T<IDZ#>T3UI%=#E=DYI6<)kZ:,8%t9%Bj4
%kFU%-Vg\"\$00]nV(!'cImn3p#E'COZk7"Q?R>)^BhSsZs'$sZYDB&&MZ-s!8FN?oFt4:hg;hVP)j@Tg^:aZ$=t@Z7`2mkA:j[t\
%^V(I%\e+5F/0)L@VhB>Y*i;;Kq)4@(LIbV5%Z1C,TerdORi^+irBTS(6j7d.)6ATu[*ZH*b1_r;Wm!c'XqT;#3lR29nKuRFXQ`+0
%U>I_.f5*hSXenTdN`8_7-f/X'>uI:!3R^'!S+nsbH,Ofm*Z9_h't<<OQrO;k\2:/4Kk_cNLm[:'EgTLu9.%j,10Tak.FR.&c$Q>J
%!&Ngr*6L^@Qu<)lbmdHboD0s(o:`9:k[@C>mRU0*b!M-)Si*SnP+).[1CM[G\tL4,F;]pBUFSQ5>?:;s8jfT6,3bGfrCEmSS,Q^?
%\qPIEZ@3$Ae1HkI87&mS7Vn,DcQXgG;]PtBI<+IC2>s`b#?nM@.h.2+midh#MYZ*Wh_gfNkEHl<#cdf!P!li^A:A^()f`Y`d6"m&
%64B732<aWADWO\$3)AaaT0Wr.cV`9%pkKbUa=u[-o[mnWaE^!S8:gH<-`<=I#)WO0OZ0Mngc0IOBT$bbZj'm`<g(&j<$5g!68o7<
%r7V2@0$U87>lM]K>^NDEahbqlV$T9_8hO7fjnto$!<fI)s1g)&%!go9YNsp76!>VW#558,X]ZY!5*b_XC>AP]Z\>gk558^D(aO[V
%#XG4Z^YMs,XATD7jjGa?UrG?8gFV`>Y/;@_g6RF^]32`[RonLC(*CP!k@U^"VM2u1>s3?XnRW-%JZA;`O)#*Q8"lIh1r@<YaZk0%
%1dGK*Hh-(n.&fh\-m!*#S6PbbauOqNEo2hr@9),]Dn?!0e4Q4%Nn1M=@T]WaBhm6pckr'nb`[NqUc4lKnW5asQ::0jYi1ApiA0:+
%oT#*\\e"kH?ma9dcpCnnHS0W.@BUBAD*"RV#NV4X:WJZ11WYIr1&CFfW]YC!m7K5UjV'&/=<<!8>1AIV?9aRt54A6$o]DJ?=(-Q4
%:nP\g_PjC[@<D8OP?Kc@FQ_#\j`R[g4?E4KjZoA2h_d!'QW,#-ZVp!;O-Oup8kOi@_NkiR^!a&bg7e-Rqaom,Y'W^`Oul?RTR)*"
%k7h);HRO3f@#(o1#JciaV<QUNnNlsaJ7="]a',')8kGpFOD@*F[4B7GgQ>CZU/@2%g*h>R/HB'\O>%*,TDm=R!D@Jrk&RBWb-?c#
%lQgm15L?gI)i(c\*;g9:);j[5]SM&kN5:\Y`p2a=VeI1U6W$g(^QQTbdMA[k4+nbI]krr+Ii&sih><kh-_;S6a)8ehntRr\UJ9%8
%U5AH'Ybt(m\5AsT[F&9CNKM7,J%,(6_JW@<SFt.o:l\)A<'$fla;P'NT)/`Fb]ZVP13)53Zm10@'D``hG%'.Y_t]$TT*RCZbHM!i
%#/Z/*?QIGL!t`3X*P3W%O'Eb,GS4QJVh'os>VTs<Yh8CNkL\qa8Uc3D[PT"6e'+bG!RWbsfNUBRqk@Arj7@GDL+&-'RQp<$/ug)#
%%5Je.Ng8FsEbM#9WZ9IEp0>_`W@#9RFT1Cl^;"(n-91[55>dAh<fj]]VN._<gbp`gJ\b1u%AEaRHVO#]&=!K:85G%km4.b[8`)`V
%c'&6p\sU:2ne_Gqq1bU3gC.#Wf.e$?KPLUUF[%?h>Ol2sT&0#_\;D7eeAE-";s5#<aA^$1OLbWIfsVoV?dl=>rgQC9FD]Z!M(?4G
%.]cNo66a9")=mJ&VZ=#`Nh.j^N,,''lB\WPKfm3=h=drhrn.<sn:uekk*H'IY_omYL>'+C_ND>iU<o`Ea:`+#8Wm_7YnqAX44=B.
%5bb<$lNAgNV?1j`_dD`jP'oR^Rr>?!G"#F$!_8D<PO:sNCd1J_;Xr\leOo2&AsO5?e_]Yej!9U@RQnpJ9j4t"A(SAh05#_%?0u5_
%;cMrE`lOG0apL\D'UjG$Ul<>rO>+058ma=3DIh/M70P7H0BL8Xf+c4.ni&#jGDke)3NucZ0\]6M-.tl&E`]/I)pULTgRpu_!GU+B
%3h=.Z/?AnmZ_lrJ9n:?<k'th]&<c"Ml^fn2/.3qa*s0Ak-D.$KA#;4VP!G.o_N3=a?9N,5VS>)XCmDQ@@6HFU=MK<0b&<&\9gS]u
%%sDf44ksdAO.N8[eS%!C8ECRUmdiD4X[Z:9m\*\AY<ASo:]'#'MA2Y>1[Ae0"$jK0O,A[\$WkLeQCK=E:0,I7+"YSjZ"!@H8?Af)
%`]qMj\+@?0^-[-]XI@T9acKA\F[V?C1N\OmrRuBI6H`QU$Df#DkWqAA,)])@CgHIJC%g!,kkfY_HXF.#8C-.G=qs+dGo`ZI+rREV
%ANc__OEl?FQUBSM7Z5n2F4O^iOaj"rc$.^Vf]L4IQF'<Nb@E,lY,[N-q1s+b,->:j%4F>eYOdV3QJNY1$SiJG(3f'ae?&Fog:,ZY
%4?htli_&=*`9DZDg6,[9!6uP$]C[s1eF)?n]lpaGl%UrW*NE38e:5j67>OBEKpq`l*BIeApeeFXeOW\3)fm?i8!^oI44&__41Jh[
%,S1EN&YM,4rPJqI//i0&qNVqkf_7s6&GZI<;#m]=jb+EoV>2djl-8[*;,9cIkWlPor%k7rN&K3$e6,T42(OiAW%h8k$UFDmX!=7W
%.`%__S$-k1pi>)tcNU)7C.KFjDI2@NpM*WN(+rpe-DbPn_Wfi5_(sV9398!I>Mikh-373jWtb?f@''SqWpDe?$B>B,ijlA/\0Vk$
%_"n2dU8kFn1ABAT@[F!EiUL"uPr;ujRnH]*esDE23]=3,h!^`)-ZBN"CLQooSQ2^8^FICh$$X&Ik&4^6GjH*KH3t+-g8\hd^Ybks
%ahMFpcnD;Fo28+fV.9E'W*KV++#Sc2D#G:2&.]%+=@<qS!;1c/(l`CoDX?3s3laq-6tuJ+<nno3=4F"Q[\<esol7#KbU$2P9S@p(
%rm2sgVJD"!6*C#JSV8Vi,D7<L])qIAYC0V'6nff>G""Co,QV[@YI[YV#_.h6%Gi&4H9XN[pXZ.ujreH2h#Yq_RhlHu8Gc[D'SXsp
%\+t^<?,4gb;8K]8)5;/@Yk&n8>5\6UXDa\)+dR/nfV"l1+%7W\j=%<UL5mIU,4%9Lj9bm]FE:LTLuWgM4S@<V*Vb*;2rE2OWL;*T
%;(i<f_H[iCZLM(A)('AR[%BUs.f-qL77/1?0n&i+'_udp2h1Z<#VEJS2`ES7E@b9`(L`Db/)r@hGk"VHlOhkMa9cMZ"E'*^-oE%E
%Z#bBmE7Qu*'o)^nZ?Us*r^Ti%#oVeF"-MipWR,JXILpO7K]jjc!aE]];VYK+X[7N0p$JgU'k%G)^b@-ZAj7T`J_g[G8[82NbXh1J
%1LI$1D5LkW6K[hhli=Uc>X-gh-#<K[SlD`,PT9CW)bR`rRR0*G0@B!XbNFTeVBU@Gm4dHk&uC=K,<BUc-c$m,#&!bJS?>jGX;-b\
%r1SrXFj/L]TAkT[T*][tVPJWc9Q(tW=;RmI\U3JF>)'^_:_]ED+IVi@"tL`-[YV%*@]CAt<MjbXd>=N!i^8_F#a$-YG0c9*.i5$c
%`J-3ql2A6$Dr,6Fo]ND4Yn(2]]$sNQ@@:'bCgMHUTnF?J%sRp5Vn"Lhs.\<;aF&0iWTjqecrLq`5[MF.Bl3D6`$oQ17Xq4,h9]s"
%%J%W?r=7KNoW.fbXDe,:Rq7!M]\Y%)[epQ/9X9G#0TC$TA[QC!W6j]K]\3$=fEtSgSbci=jBj9_oCA4lbS"=q`ScK6I0cU2@NdGD
%Vb>*(En^^sJ.bdejbs?,'q1OG\h0P[NrL"1Y92'dp75PTP%mI'rXg49:#I&qGo[0]<+nK>@\jh1%Z,B#qc%[<;(@I1rgZ?*TD$NR
%'rC/LDkhS\a4.<K(6C4d9E:ghn1F/uEfT081(>tLe$I$OLU%n2T)^%r>;ur$$/a)+k"7Y`Y'+P:jD]*Sj(f]'d3IaNO;kb3<S<ZX
%<U[X:$?&P9QPY@1GpK_jc@HK*&#Xhs>6?iIIPL>tmB/lE;_X$W@2,1uL88L2c'6&L?-:k,\K5hE%IgWN=H\T\-2t=2^u&dQmp2V.
%,#t*:b8b<qj[<^m'YW/$,LhY`6huUg^h=O*(2n4(@1R*\6/.:>Xc8iQ9g;\p+:-M"TXPPp"Br)Q70aD(pfV5s$X[;:&6uN`P`fn@
%BacW*,NO_*9#h<#Cf;r+RcE24,eu5#^Ga9:.RSqi4Dgk*'Mp4BaFX:;e:.;f*Q0eo&;jadYV3&-;c-Z`E,JI<gss/%iO?S<eFjl3
%s4[5W's1^'"<3-t+p8g[qAi0cY7S8LYJ;URq&Q$E&a=F:;5#WjI=#`dn#.C^Em5[ra^nI/eBCVdCcqe+Y:8Om)(MC<Pu?*kK"H3W
%+*6Yh=l4O,UjLOI5b_unCc7QB);WN\Ja>eB%A>E/Y==i`GpW+%eiRiFbpFQllM[COOn,sFZL)<NTSs4,_T'WO%ok'I-<=Et,Q3k_
%@RF"]Te&<=bPSg.c#PDg!"6jVDqVcXJYPP&$7,h":1#]J\%EJ94lG@1W&'ng4pug+5XOklRC"al\!s4_!\AbMT&A^%V#_.`?#Fn]
%_\'<2m84$MiNu62Fo#K'EE1#u8_T;Ddh6(1>65Ug&N(2_:3-'JZCV*r-NLXRQ%1L&Kc,Q^W:/>]BIO%Yl)/`pI'pOnKJ^)q?H4s@
%l=!/*jD^6E3,,b-pS$l02!AJgA'$T==,<A-i1P`r(.q?G_BG6q@D>+tR%H!2=+kNXK@'loqE*u3-]:BdU%WT'b2Fi%_>.WcVfMu8
%!BpWS7^q-<*/a*kU>G;rkSQ?H9>f]1U^H9EG!BNX>W2j2TT;f-k;A\PC'8O?M%,mp'R6-sEkC0ZH%"PV;$<72W\9iegu6Z5+tD+*
%Y4&:1<XM\L!rfpI;nS4UrS`riCP@p6.f,$-)-7:+:&cUkiFm$Cn^mlR'RFD"^r,jNJ3\O0Zp39Q(5cjabN)-19B6k/T6W%opoo15
%F"U:X3UO6WXGQGs:b_=XIS7^MJCDYm8OEIl5I[)E[RIL`!PIW$q(8EE$X#%_+u+8FfpfZUR^=%P[Bg3`.bn\MZof'A=5Pa0d$b3%
%7F-iX5m*f,NLZT'r]s*%#lo66Q,,(R;[S$fSZYbt%2WMV&#V?8>?'8BY>6O9Pk#"&EG79'g&u3#9KjiK_D$DmOQ\RqZ`^`B[Ve/(
%!V(tr&[hEh;jClA-&tV_?B99^Em%"C?O&3%Yc]nW6VZ<W:@>^%q[A6a2's79-I&a*n*=f(j^jkkm%L>Y]+Hk3\J%K0hjlJA$BN@\
%"VEk7.r/PfC)4[-\9req&QgZ8[2'+/<<K%`gZ/@_Ym(Mc0_":?C-?^D9=eqd3-0-Lp+=6#6q)F^?p/V#K#VSPlr-gMLG/(tl,#Y!
%,$p$*7m_^cq&1At%`1=7M29cD#Z.)\s.Da_e0QEe/j4bP0/h@(E=]i%@s;nu]Rh^OPn4S2T<^ZI&'G/DYgR0^YrTUF$"YN9l*9hG
%XY@<OXC!R$E&0M?YcI&_QUuK^bmMg!eAfjDSm8j@W,AM[d"\AJ0PP!W@tB_X%T,'SW&Sk@?pSSopd8cQo%!n;q@J;/Cs.%M"=>=3
%QS[HGTP#+?jkk9t9SPWdjJkJm@VHP)6#/L1YA*YD\Xnhi@jUOhQjV!NoNd.mbU#em!Wu8c%(b<YUR,%P^T:^9C.]%$2`1HJ1FjUX
%b"lrJU(R-NS[%_cS-&WqKXRC7d2?gKhpKP6(A1s^AItG/=i-jDK\9P/rN^4NniQatHl(DTE<SH*&1f\GP$Uk=)u2aVlnhQD\2XDE
%d]bu"_rk)o&%k$O8m9``*Eoml)75E;%PMG43V$9NH_?FNRt[Y[FrsASj+iYSS,R_@T9IRT]iq.MMV[$=hMl-S.jI]YpG"qN.RAnm
%r\,=\oMo6AnI\JqQ3kJ?O$kt3)A"\6%?*3iDRrqY+n"-;oh_"X_HM`8dW9U\25LDSY\Uj+:*P1$DkOs(:nj7/=K!tD]Hi^N=Z=];
%?E>e`C2K-']hOl&Ub-QMW`PB:%]&4s(I#?MTG\A0r.<(UoL"8r8>8rcTcSV[-_[DGb!'E`N<DW?;t0\lH[umBo+Q]Zk&=sbm0A/j
%Y8A9Nlhbqnb?p#cZ[\e`Mk@MQ85sg>iL<j(`1nF+9)-?Fa;>XGOMP,@(>fbMJ8A`5ja!E^F:=KO1!*#^Rg].Yc-Vaf4<4aUDL7)_
%l!@'hA/[Zh\b;Og-AH7NM=nt@;8`5uo4sb?@kHU;L]GcP3'\")4Ifs8bfO3^_LTuJp(rYdEc9tN'B!3Hl:.R.C#O^9P?gi"h^chG
%P?9p`\f0hVG:@#</<9WD00,dJ?cq;oOsoqP4iB+^PGU*=a>&fC"U7tr(B3_,1,)aQUl^@*e)J(m%,FMW?CU=6$RoqDR%&+"6XR`F
%bFRr:5F1_'<d:UdTD20ZhY;dY%@tE"W@Y(qbQ34FIZ0SbTW>nE`KS+>K5kSH&_IFpRN%:u_pQ&H*=P">S!^^eM+$[L<+CWP.2,=I
%.k$6om+!L6!p_/W\a\&o`tVE$qO")pl;)fMo9)=S<&TD)q&0_HmL;gG8>2UNXEqs,5j>=%L=>:#-!<l>!>O#)8"mo3-ciXnJY3e/
%KV\_]l<s8Fm#]b]cB-kDEJE`?./dJTlODVRE.YG910iWh4"Qa`Bl`SPWSB@p'#VoV\THlJE$$\9*%F!8MdO[Yg,iXj_=1Qd(Jp)"
%(k57UFV=Te/sBLj]B41D93bde;(F`*l8"o$IZ\oQ87e>LgoM5kEl`ZDmn/+SX5<6gObNW)ZYO?(@_Ta,"%_ZY:NC2t9"[c`o&V/,
%8J7*>[S=_WItWE^+=a6IP1p"r(A&RQ4p4MBFQCYOd1+kAERr<3A"Kff03ZVdXP<PsVhPOVpU!rICu%fbC(g**e#niI8D\!9]Q\VK
%,M/D%FU8[Hs.-`baFD^Q*7T,=N=!?)cVb"hFd_s%H&E[aF/Sge\QrWf&k9FK#u/qSp_?_k#@:Z,o=QHhU:D?6mfBInVgGQP6E^ST
%,[-k>jYL!QQ"*s&#mh!G'%B(ndAuO]b$hpj.WXQH*NE=(c(p.,B::7u/"-9tomOoUT*bldH*GL&s1-S$3:$+j`q)Bc#tH;&8Yni]
%,q3-Y`>Q4,8:+^X^,ArtSXPa^-+J1n^S.Y96K^Q!Qm4X:U1E#"nuem7Lq?!;5YC)C@Fk06ddm0gYG".fWf+U3p*XGoX?kj_b4!-d
%@[cK,`O6C801/KR\Xtodd\<85f3Zf"Fb`FBE"tlW`sE3^D5csU<V*oYd._7X4?H`.URMT!j%?(t*,j=2O*;n@mVSHpV>^Kb0R>I<
%qQaj*09._YI]4`Q7?kcde5ZrTlsp]CZBcI0TVbO)+_q>"[[Z=X'i>VI_?W1$OcDq(@A7Kkp#NY)8sMq]",6BCLTj*YQ\?op=i.+E
%&'mPPQB!gV&9M/8l>[$mh3%;U+"`2JMHt!r\$kWR9Rn$!mA'7dAKe'<@W+X-?(IAZCX%^pg<m\e$Z>Nu<\^`;F-TLT7@B5^0L+rh
%m<,nrOACaZ=!$YJ#&;m[<r;FX5;pKWLQX6Dp*&',)9MRiB%\qkFW?YlCihDQ9m-i%41$WR6qsGTka%SX>YucHLI>inZ-7,c2F1Fr
%RF>gGfQ2sqT'E&N5fk$/me:ru5NlAO0U1Jkq'ds<j<`FO_c#A_9<Fej"K4>.pQ[1Jfg)N715MkX`j+b3X47Q[5tr(>"LZ&`7!X"M
%>Wi@5HH"8Dro&Oe-2$iso`.$e*P>3OK3>:2/Ma$14X;KS/<rEL,AED+&)>&2H/G]CH_f7'X=Q5/5cREmW#+u*cpe_\O(LJMA-DF=
%]eirF;t!,_9;mW0T`;S@rT?pOqTTKhqRDk;'eOulQ+CmJ:@.SRe.AYUd+'bpjs_N?ageEYlShgF5_t7s/%'[G;Yhe5Tg=*@['S9S
%)HZo&(j.;G@*[IXlF!K>l<=;j7tkC/g=TWVio/F#b),\u8(0/H9O`t17_,[/E*?fO[&geNh)@u0Q)YTI4ru1Sgo/hSLcG5lK`>=Z
%.B"I%-u_$,8O74qs+$=sX0&S,.-;'?:plS+c6^aO-K5%++i.ab<=isMg$q1)D,adQZAuW*T?ukEP3,XFCb<`MVXquRR4bK'J4bhQ
%'3Mtkq.)F$D)_m5p#-Dt5<"O/e?b1jOD@_+7Us5B:>S\*=)AfbWp@Nr,WYbS!H86p(jdS.jcIBYSA`4e&hb2j9K"jQ+L2X!YHAO$
%OKW_Nn6\"]=P;&m'?DJu`ZjAum5f^I<g)*nWk]Y67o6mE>":D:,a+pJ:e*OU-)#bDfFtcNh7oa\Ye(alO*JhNAR`u]q&!i(j5YRj
%&/\+oSb`0uO@9:Km#\Z0EIi?p<=0ufjcHK(r@KIZ5tKqm^?$Nu&jra''r7%rI]EV+h2K9+ZZ-h*@=.Eg6+N:7E:S3C!$l+ZA*Da/
%h-A$9jhF0.LT")RF]MA%o+N8G:0R`TRCRA!HE)7#H=K1CiD"B*D09pCI/L#=_VVr7Thpi4W#A;;)"Zguf+qD]WdIdt\'_(n,GMen
%X=]4"W<c1g;V()o*[k$Qk>TKBD%R4:%R01)eg":O1X4GCIgP*3]0JqoAG>NG1Q5sDCoK!RZt1NPg6TlRdX(hC3/o;*_QG'M2.T<#
%C9hr'Q(?ggrq*/oABUhD^7K8#p$X!bWOL0mgiCRmS3C1j(XH7d@%Ht$l'q<k6>QoZCh9J.M;,.s\+&ab&%Dp06W*kujA8uEp%Hr$
%JSb8-FoElu%S2m1Xc0QV-#@JL;+_Iu!_GIc6e;Da<+\P$EV.-nlX7r/Pl6@(Y[@\!01Jr+O@W@!OaFZpdDG3eW^SVbJ.&/LPMm'i
%ZPi>kf9EkkQ/2UhXd;@4'+/RKc#sUYr'e-r@^_qWm,Ad)CBD=;7&T']O8k1dQ64Y=])b+M>\^/fQeP(6j;V:N`Fh(fqbuk/1[SjW
%DG((f>7)Z5o#@mVX_ogc1[H3!;Km&1O:Tl>=EHhBJiJ1]>LuC54eEsS.-]q60L9>/X\*c$QiCJJ^3?fVFfk3pWl!DE(GU%\6\GA[
%(UZ0uFY6/M'!eYOqgM@qgZlsb*]p<UE0gUl@^@+%QNaaCL6@Dp'qY$`K2j5WWp6C&DIsH4N!8T)Y>H86ZFlE1kF*.Aj>8*WrIf,7
%@@>7'HN:^tqp?]u/:aVnY,Mo'rlUB5,3T)K72a$K4qd=(opgd/VRY7'Jq-ZJR;'*G_shKb.D$UOb-^qAEX-*Vf+0g>(!nnc0G:&A
%ZO[N`l*7LF.N+i6XmKG0pV#OnSGGGD3KMg==&Tep&$i(eWg`GHAtM-\.a_`^5KsBu1b/?j2l=P1frmc#c<^n?Ru^'3S.]&HN]t/R
%SC1En"nELPEj?^9E.\6uDDQUCURtOHMn%KL`BUA?PS=8*FZErZNF%gofgbU'W7+NCFV4#gLu%;fn5lFtI&#OubZM"i*u;<dhN8<u
%Q@WY$qf7H#RU^6.Zb/>HCu_sUAPm)"SUO8i5JHl0^S,6Bs,Hu'b0g"q$=0>E:35M$l05276CDug,Qs'1!]C:EMopUmbX/5$$jh."
%2$hmRg`?ZTj`/j!1oe30rD8o`8l6k59+f^_/?!+'V72rWegf999/q3sS@#u=9T*KqWI,[HY"W[XkuI[:4Uq>jrbT.X$2$VX;Qa$E
%[BoUKj:ma[*Qp'\eKK]BI!nu8,>^12oe$tghUk&s;dEn?3tn'Lo`ko81n*VB]H.Si"Qt6QW5AO9TM)P66P3Ig@e`\k7O"ZMeN"(^
%G`\W&k6#AMp%t5,n%*P:6qik4PZSAmB)*=*,Le)PfUd,(86b7\K9ip'D1W%fX3+Kog`!D#0g\70G]ueWdWE0PZft`BIV!er;GH3o
%gLYZ5kD#(*`$Y5m\fLjD0dHk,1$#9m:`#Q9ZZ"4t2`eX[WKT1-L?i[#n,uIdV:hp&eE91<3USh7[_Pl>g4H7?K"RP_`aP^\H)16_
%Y6Wr1]n)BYOV(K&/4^rY3,088C$a=Yi1R/[dcdNY%?:#(fN#M7&:Ji1Dk=<OlH+sJeA`72s+j`crJUB1/MTiA6"sO;K8^`g#<0h/
%$Wck'<Qu)emuO68;(-h<J/FOWS^\mE4tCaB/+b]FrPRp/dD3_pk?"f>*>3_"!'oR\KP(1nM,])12Z8kMo]OSpZl*X5D9cg%F.O^c
%dqRdWUsSY@o(o<%@i82@6f1M7WeH:2WG7`!+gRVYX$]s+f*",`.C;)hB-dh9OX%(UG&"^4ZG8I8=:*tG-:JqI9J]&19fOTTfAB@[
%(rLiCri3(q#lA`OhoM?6S:7fAhL9##:7-QRf3(H&bJ;]<`]V":5!*Br!4S5F+(.K+SckJRLE5ip\gtV*,:!d`pt?l9\u0K?G/&rV
%C/Jt.!=3f_\%$6B^"O]jS&(@W34pJ%F`\%X?2_Krj0sJO:H-I$4^\D>/b#MuS'5H7i-iqN79ZFn)9](#)c`E+I(#_"$\+T1V8.qT
%<k*iN85KPc[`>>Cek5O=\V:mNd;RTlZMD]U;&@=(ASl?TQV5+Qc74ZbkJ)pr(MO]BZ1]P4`1!VM!pDmCnQaD,(YcI6$NlAcJo:=f
%WbtF#J=ND.38#F^h,hHY+J=3_dd*htV[)FY!>W$D%jI?/]<C\crQQ50S2qQ]pqYP%DV-a4=LSm]Fb&8,8ePM.5&aK+A1*V_PU%Hr
%0<kCAdd)AG&;5>5q'iYA.Et7Ekbc#_+4#D=a+VJpRA3aC2+dRs0Ds'::ANc5"cfRgQ9D*XJ$bfFoW&Pb)R?i"76%$)@QL"B*(Q$U
%o7NBW4S!CM3nc8s4jP_nI_VNKXgdu\J)R[li3.C;Y;?ZbXP=hhG=![V`h@pVZ2'I4!#Y%n+*d>C(Ms(WMt!qMqLAP*IjIgG=fDh0
%\<Fca'?)WJr@W0t&/pT^n8"hZ=6NbO*HJom(f.BeQ@IP_E"7?L+.*7g08hg`fDOp&6-Pq>iOJ_)J.SZ,-KWC*!@-r',YO39)b0PX
%5/`<qe=\2W"6)lt8k<G0..JRh#DbCJ2R&lWTB$1k8Jk1l0"R#t!3$F41V+9+'T+r[hrS@)YY`C`n_'6=*Nf--XRZ27UP]n[R@"t-
%/niE:"K+W[n45U-F_ls07RmoYj2qI@U6J%9!R^eGf3EoX5/^SA&p&SZ4VB#nU+M;Ua"83&?>FWVZY/f6c>8Nh[KrS/eIIc-6)Fg]
%KtB^QGY@Dn0eYjj&dU#YDDXet3>dSXW@U\;J?XP8Z34.?XaX-1m;^2Llbf`cUpkpOeB0n3#mcQeQP.+9+L8=LI'6X[F>^r'&e:[V
%AX&H.M.V<_m\TNM\e0R3Yb7WG`#rS^*%#rI-VSF09#BM/%OR)rQCoQ)ZERbkK.45D=t"t[0j&FdWl2/#__H,(>P8t])`h#GaG5k4
%<s13)3P2$`^KAEE<)qP06<QPN?&F+uV#;2?adN7(<h;(fhNfIB2R8-eWBEaSD$Zn37^DUtj2EqR<M6EiT>a:OBYuI>(an[CcX^\r
%5!fRDk-IMlm)Z3t&#3.'^NT;X\PtqK*oAIoruY:lmel$?&kJ&4eYUp*"@]u*e<@A]KGR"+dUZ`,+,No=[6Z!']+Is&$"_tY!#uL%
%r^ud\?;D"NG3D#.E0d^1*C!_0Cad`=:B2eGSt/Wu?+[D]_:X=[,Kpog/^hd#5%s%.Y@ftSqgKj;R-%_M*E\4o`kPLs8^c+N&DXnH
%PZbTE/O_<"BaARHoF;a_OF'RHQO\pLBKU_,fY\T1o*[STi<CrkTcN3F@0Rg2YdVP=JXX-E/9FFE"[cp.KatO(8`&"g$*rmA,.atB
%-I>67K0S.mHbbMl`XSBmARg;pjj'T./a51?_?LBLqj4CiRc/ZsTr\DimXsS5Yn4Xt6RVWDF_)\>Q#RJc<3-*S//,`\jo_YNoPb_$
%,X'S]V"9.d[t$9OFaRJ.5Mf2W'Sam/96m@d6,M;8###17aAUe.[QD:\\n"1segt>eqg)r)@;7l/,gYE[.F+t*#SK^.c;gZ-htb16
%B1Yg&[ZrpEkTW(n5GT):6<u)/@.f;.oFnCBC=G1$P*4A`1*;*c=J@'Yr]6T97*.m`_.+66FD,6QT@X<:UMLoZ6i%kEp)@7'B`*]1
%21Q0(W42)2,m!u<H2U1Nj)1GXa)i_&LYDReE4f[NGX]7`NM]MH=8<:VGR5@<n3*q]J:kO@KQ]jg(3Wt/<-8mq:`7=)95qhPBR<.]
%;A0a2_8mdWRto:0[g0e2peY-3]s=W1h-XgjL_r"Hc<'V_NqW7JYjgD@XtNlte%2=$_Ia)S]#fA47j!-q1le-&UZa5U;B^Lphh+bb
%c7&#$e[(ltXJtgsV;r.JjHSe\T*ZsFEZ*T>Y>$H[+P"W4NR9&6_J#l<eZXWGi&N>:QZu51.o$j*lVQ2`c<lZ28*I?LFm(G^=68GZ
%UHE*jjO-W-5+b3K.4e]"%TLHiI7cg2ba\9m+88eS+m_0#1qK#29I@@b#gHrbRSfS,M5)W(DtG*'X40.`H6DncTok%I+!J$B7Se=T
%4HZBpU^B2OZWDWob\*d.@dkU'[8A<J\HRK(Y+q<S<hV?b2!1\V?5&]l1\d98h9[V\E"^ml0Z(C&F9N8%^1@#?bGtdH,G&BiZ_9Sg
%I2qZ*"K'YRW*_d0QOK<L\#s)FG5/u%-#_$$SWU=UZACKMYpHnDOV/2:]lN6Q.`,V:]\s&G$!*8hH"#YaZk)@C%NHr9SY5B_d5\B\
%Ob&<44&q[;.ge03/gq12`j+N%57VAn/'$322M"(oa9EYB8*f8C@Mu7bMNV6(s%7"U`m^<&ji9RKe($$mE%E^H@;O<:\IVW")iRM@
%+d5GAQJB>$Q6//pgNA>_H_DNRYlGpU/r&`P,23hS3`Jn1SU>(=K4UQE0!_S'^BUbb9>WtJ';$%s.C\pM:iJAtOZ=X+LITat?2,Fb
%RfZ4@A"0rWTN7)l74o$(99aQ5Eq/T5C*$8X+=Ed']]6J^*E((M?p/BrbSSnEPkT2KZkC@`*i'up_JbAD+0$CI>S:3:O=Z&7)Nu.,
%8O0)=S(NM)8"F*.n$fSc.Mc6Z"uQ0Bi1]4gR#G-VRe/&'4cJ7H7\/(UN/2?l)8b.nGIe?dV<^X4Nl<\E'EDe3DR=l:DjZ;=!SC.g
%;^loOW<F(9_*k%j`K1Y^kkG.2UsRS:)Hho2p/PBJpsDsL7;+HbT=W!HQJ4ollHp^jGV-2NO&Jg%QZ4Z\=-4D;Tm*^rW=Xa#7Pq/e
%/2SoVYTcJ&"'-5-k0?]-0eUB#LHO[=*VE6&Jf56$/sF[H>tfO8OY*i#$\m<g!<8emQP^Y'aQ(V*),9h2:5qWA4i"#'=!8oA3D\3]
%RZU"\"M\T=DlnBbO0Cn%06h_&h,<'nNbClWfWK@p+on5gm0A]*Mt#P>G70OOWd4)khIBX:g!/E8150S>)AC.pSo$%"VQOK!PA@3n
%W_`^XF;Sgt+;f_1Z.:L/KbpeuF[B11$u*^6b\`ff($(]$_>F#@^!\gfZHoechmLhVem0?JgU=YLVnbKX;2B2>E+tu?_M/Z\([M)3
%:\jrHE9;e^lFOOP6g4%fLjL<_&Y[&oZpkl>Y_^J)r!&npLFV<!=85V-GA)$SAjL(\OTGFKc_&*]fZ3DpkFpW/bE9AtIN>H.:p,2k
%HH(EL&6iet[TM7s$CpFZ%C48?P,]XnO/B)IostSV\D]e2gp/@nFU%_l)TcF*c;CT&SJ47eq=eopIt]W'h#BB_]@$R=;%2.!Rs_ri
%"&\0W5JW.2X(sCdE"hT5e.aM\?@I.$mqi]1F_?TR'[YFLQ7`UO<p,DO0hrR&pFV9NG_ds+o/h*tO\U5s.Pof7Sds+Eg4*W]25mmi
%CKi!P=A0*Agh"mt[\B3b)GcAk?UcJS=W[Y\00L%H2BW":EBa4TH#VuBMHg:G@7*5k07BCIU?]U^.c`H>O..*tIEd;TicXNg4&R;\
%2?5r\dl=SY>[GL:==kcnoGFq-P3Zdtf[4uriZ)ScKnc6nE?&2&m80E1_[T6-.:^T/9EC"WQp!N.&Oso\N5Q5I90/$+AAN4Cbk`J_
%-tL"oTkT5V7XGfXhe*?L"3^YJ8IR:F)"KZ&g3h^U7rGK\&Q/5f$f_,\H!r-a*2FDY!Bu;'3.qMh,B'dDC;>?.G@P"5P'CC]Tl<Eo
%oFCbUa@mQR8Mrc4L&]p0s6k`(i89%K^3"8\[9SHC/m6m85nUdRW(X=1S*3<+$@&P@@)$FXh:Q5HOoiMagZTc<1kIKHo`pq]U`d]6
%r6\GVV-0U+OWO`ulrh$gJ\3'9lAX`d'<f>aZ)npFZ<WmW&h4ZME^[2A.2I2Pacc^ob,,;^cn)Ic2!b]o9!`2G-f*/Enu2Nmf&&lL
%213/e3L.bc<!GmcP?p[[$Xg6F8re_]E+gj?hi?ftk%l=M\L6iZ4&ss-O^N?F0mYsK:K\`+%rlD!"?k8s+O`dSrS<fKq8;3sCR(G3
%Q?1u4EJA*).i9fQP)u4UVCj-<*'X/IAr-tJH:V1r.r6:gNOW%\eD**nfCT'AO3DlPYTrr)>"Y7ZjY:gI=qHnMJk%l@b`=3@0%)?B
%'["#kkn`15cG/Z]:,+`YIK6RA@^&^KYGfArbFmeK*5s/ZbOTdVbX;BX/EmG)jRu!R=47Y,m51GZ*ikK&MF9fYUNVroc7U@Y:DF.O
%4@GG*EX2H*kieROfhB0]`+a,Qh5V,>>=&r)gfN?ADW%<Gd6tnE2.)c:4Mn5TD14#%Od[O%8!bhB9C&q<Wl,cu0q,'\f?<q,PZU1F
%;[2jU1/5Y*nfM[S+Ao=g\'nN782dPAGU:Z=m=^sOZR.,0M[H71?=VU$LOaG(QD\Ko-<aNN0sj$)%OkF;b4X<A2kV)*LiQ^ONir9*
%Pk?iSl_7'E7DNO")E%r:O/DX]r+A/RL0!kL8'4_+fi=aHdAK)sM3m/pRWo2CSf0b]103Ob6B0I]-uaL"4K^un7r0/;GK_c=^>JY*
%AMmKEYX=dF=s-P4K2.l>QGIFk69JTkefjW^/:$BgPS;qd@?9&MMDjd-U(L@V=.m2800Ku>!`UP:lNBkL+l=Bks1i*^q:*$>NmIBZ
%&;K3\l#;3<LjM"1NOP%/fXQq]:A9#G26)eo8KKjG2r#?$3q8K9@-e@"Xq(Uh`G!,X=9]&u35n5;?(oI8M\N%Yk!Cn9pt6sq?-t(k
%>!rdLE/f6>%!A?t^P,BUo<gl??WL3QfHB)`=D[(bs0Zm[L)O>7.61Jn,U**gU,f*4:ObUgJ(Fi-rNi#/mBCkGpCR%NCd13[PQ9FX
%59&7h_bOa_EN%h"IH\b$fsa>`#:)d1U3CCd+3Fq`dn@egG#4/T%#V1>VrGR(RD6)V0:qmq=\Co=Z<p3;M5O34$8lk:H=1`]ljMII
%P@meNgO7i-/ZX]-2(@=.!n`&E<;K.P@ga<Q&VNWpBEQ=Me%\c:<Z_lnS8HBkNDr>g4QTTN%8XJ(kPXsj]`eNuK,9;9R[1]939Z-A
%oA8jte<<-fJ-uG4^:&WjgGslLlrf>tC&?CYY2SC,&Q"Rj^F25J1l=a(<8*Jp9H-"nO`$(p6WA2,)m[CA;(<gU):*:bG"\'u^gDH%
%!dPHn`aIDj43R2,Lb^2?F:egSenk2<PUN;*/)=,h'9@_d9dtqh!=W_-U=`6e1nZCX%^_G0fH^=8Z%Rp<SU)^<-sI%[gQf07dp=)h
%Fk">UK\PZqJlNuH)QfWnF%uWd:%Obu[17u3H+IFN5WD4>^1HU5b6\+fm6<=U3BJEQHU*YC\`JPHoK4.4d+meS$k>DE3rn^,]T:EF
%cUZE?L*sin_Is2eIYJF(NXQM_LJWLUcRAmpB'JKfnX76iBJ$n?FPO(n+HnVrTlb=@*9WWq6P<rXcDu8J\@3S_i3b<(g&.dLm8ccu
%$['H@^:%/&6/^n5p/kB%l).hKi!@'_Uk7/N.O6E_/VDZsD<4\G<l1^FNCV=52M7XNE$Paus8L]b(#D9(&@"R^8d+(5<rK(.,b2,1
%EPQupg+E@l7i`8o=)qr%NQ=-RA'8]Z(VU%[2;j8!4n;=G^+[9:Rk+6Bn&JQn:,NJf;tr-&JD!.fQ(W*V<>?^.cnefPacO5o'!@/>
%b\DMP'm.1Im@.maGY#`>4_bS`#:S);6n.6/ACZGhJESFUku;4$mBfm8A>'DN<)sn>%?Y$[_Pk0+Q:#>>]3,fbg9ukcMCmHNBnJKd
%j;^MR"(P"@c9YL^0/k/gOXU#*GL:]NEf-SL$=@SHcHc0rII#@0,qerDs8G6trp0RcTA@;/!nXEb^:$UF-M130j7<%boS"5h\?N)R
%FSS)k+0b*D=>k(b,7K9eZrJ7P8u+:7Nt(/(OB`PeLdi8PA@l(GK<dttrh@qMRP%B)$<2ic^I@9\FZSa/#onok?hr5K<K&@^$J*E,
%5RZRoYS2@4qBS08McuB++j8.9UST&!Ic;d(O4t[an^>3bI+Gc^r.(5@hi=crS4t9%<BTn%_+85CXD1V&1Q74UUgR%"BK6UPYX%B$
%f<Lk*5=As_&)rRC)A4s7n7*/1-4KMVUN9W5o%=>mnR!9Jl`h^^Ui\4f?NId%mEbkqk<h,aoAJ2!=N<3uC4HGkf`HLndBkdZ>5<J`
%a\!tt?"b/IVm/,8_OEUQ7tlU#PRan6UEXR+L%=>jq-9-?$II/L+8J)=h`JGkX-a(q/nA%L1MFps(k)>jk.Xg@4S;q(TQhq/75,TT
%\S@n@*D<(=)b6"4Q%X26,mCaqgQ90=rYi:j/-.I>AOhcWUHR!u>ms^Y.k4>8i4n:)<G:YYk85/h[O[YrNE/PJ;KUZR4M8'UfDNgU
%H1-q%cm6"6\YEaShF]2b*/]8i%ukDX-4a7!/cmXB>3"9u`"Go@8kOjVRL5]EA5!kfrcQdNDZOPI@-$S9^+7W^Na9:%(\d;t-6k?!
%hc!feL8M_h4d95&8.h7Q*nrniq+)Q'k8hh%TBW'm:[oQt#oG"W\Eh+0nm=g4?8<9!RI4"u?b%q;!4ZD<8=)!5_`Zn5S,FF5h#@1$
%([744D@.).^"GY)_[Jo=Lj5alr.fD$J<fGUOn!-#6(=,gQXl8RH^0&X*$7*/Mk(#FJNlX7!SZWm`6u`G9!Sk;_E>ug#*8T*$8*?U
%rPJbi,$B1"8"emq;C\q2m##0FDjjXglHbT3!W6(&&<=u%)mTYn:^7)3+!Ks%P:$"`[M"@2)qmpbk-KpLkT5!UbR"U-+>\[C$5P9>
%BTPhRf8S5;D]l&ePrhf&Ft3>\^CRd_W]!TZ,>Yk80D`?@muJq8d5`F?7sRfi>DjEE!rs3DOup<sGQB7&V?n@:TUpHEZ,od--fj"Q
%Gm\H"rhWp2S-G!7:^F)61)@j2%j@KeOG;U'G(d`@F<,[Od7h?W+#`i,CiR6l?MXql\6]6[]\X)fcHuQ^D0D.<0Z[WO&-U"gJmt-3
%dm9cq-tPc\W?:?d55*)L9cs4Jl)Ac];P<r5.8YXg;,GW?D@Y-HJL&&Bl?-*"Ue!Ka;^O[Ra)fa>#2F5<:I<#5QLg8A%;@%^dCE+'
%TR[kZ8m)\&1I1E:M][`G2geN/X8"ISjZ(Uea':B6!TZaiVo:<$H'6=u)V[YZQjBXA$8jcRi-so^c-P)E8nX\6+N[*Z8/+t3UGN)]
%=LWUPjRla4#2am8U59X.966"R(HuBQ^KL+HVknL*bn'"R67<l(r@Z4H./("dTG34DDOFW_FOSBH,tVY1j$Uk!D*,q:hrM^IfN`4b
%^+jj%"Yn0DQE#)+l=1_N*8P8,!eJ_[=,,(:I`Rkq<2&LuIN4u<GS&NV%W(Np/55#aU&=A=(9ts9BRtKUD>PW;`e:LS?..]`Er:f@
%.&TfaQAL[T)!lqU!_;XE]BE@MO%%%fFTm6Rgt9m6^ur``$<*OoA::AC/qFKGa01+FY-S0\a_--5)X3js[kAtXl$SJP@8I!MK@F+h
%8Gi:#2O=Ee;]W51R72UBC2-$-J`]-lMiu4:%$(]HY!aL`0X]NWc<DRUdqpmskEOF81a7j'+X3IdQGgR5,3=[i^/CR(#q_9/_bp(,
%*Q72Gs-5>gl':km+)#jqg=\dP"`KmI!SaON*psHC-l0[Hq)"j\$N7(A;q0;No:L-J?t1`#`>X)lrOpk_]2nE`@mH01#pqR)J?Zl2
%I/l.ZLtf=,.e%icbVJ1Np/oF*PLK[qq>_g$\WAU)P)IsNMVA3aJ8YOEP$=^\Q@#s[S637Z\tgkG0IK5hOntr<Z:rCPaAQu#dFB,I
%^k-G'OPDsQ1oTtPnodC=hCop`!Y/N%j'XuEe[-t/8FSEK1*-H>_Fh@r[YiK>N?R9s0MR([LbIegHN]dRbid0?TL?F*!WZ5frBMgA
%+41t)n\?T,e<ectJ`QJ>dpVS/A--i_Gj"XESD`'C5<a<S)]QGH4DWN1OF=ogJ0ZSrDLa#BHH[X$jBYYQQ#ag=3eT@P;0:jp3iOrZ
%jS-&2`MjrVb%gtk-k_iN5gaa0>pDNcR=o8m!/WXFi^JV]s*[E>IT.+_XPbO%=(mml@X:q&!i<7;'&1l<].6u+lI&QMO'kfrD6^2[
%H5E.MNn%C^#2;/cJGN)\ifHp4-rN$X,gq8UZ<r>5ZQCc%UQ4`CiJTq&6^nEq:qpS2H8Vtc?6N8tI(Lf7C@5Qo,h2ZORa9Ah+P%:l
%J1;,nIR9XR4>Dtd6?-ml8W42R8MhcM0\mIZlTNhj6!\V61f+[tYt)eVa2h>8VJ,+:#Ml5*e:Ijc_<9UASH+YlfaoXS_j<-73Ii95
%QlnqCmNaLY%*e?6Lc1#Hf'4AeG@'q`?8G-0lJ^!,E[`-E4nu@J-L^udgpaZWQ6^7j)u;ec8V7Mu+g7#j6er_JB[D=)1F]b$/%GII
%[j_6&hrbX<h6k!=ILV=;.dC<s]&h(nN-Hs@rNN=e-3GsUiCr,Z;Q]7,:+#MP@C>Ne;*Gh[i&>e[SGXrmm)VbLNYRd3q1OJ%_^X5*
%VQ9l<ScV*@_U4/7l7TmB`/>Z$>R)#e4u[S+\,]Bcb;qneqMGO[0+bA10i!J'L-\[`mmLc!1lrmDTqEN5B@p1c5oj:s6a(-O5ikMq
%3&V$8U!8Z<ZPOE8'Ff@?+iA,t0uNVcNoC=MTsp+V65S1m?8Z"+7@&bVXAM=O'1Bj(L7\9i4ADiZ8G!\;"@?:00bPp4O&2H4_(BoI
%`ko$O`DRH4Pq#3V/Ks29TcjkCISXgF#nUn=h?,^fC\bmE?#E/C@Y1IX0:C@)F$FbZ0TdMiPBT\Q/U<#r"l[Ak)-I-(PBdr_QC!%j
%n1ERGP!C[uP4d@?$T!OrhOBDG]:qe6Yk.5XiLCDFXC%C8X^*Io>2\&3T7GK/fBBm8f:jh>DU!%P3IXtDAs8^@'spQ)"^?0\4*71n
%&=R+2ik[KVBL2B_P6BGpQ)6;8a:?*;f%CSPZpI::8N21mX8u;@A2KDWA'_EeRg/VNb##9!Yrf7\#8::4.8Cr^&CU&=E'G2.PYX@4
%Qh@VeL%_dMP\MkGS^:"$o$D>`Lng46oh</@D3)gr$6OE,'J`!CbBQi^7M3r<#jni'<d%7=W,!A4nkb:6J8]1;aJ-#q!L$;3g>c(#
%IptlO3ToIDT$TahUII7l(Q_It@H9d_MhB>1a`sL1p+256%ip#;n-^K>g<]#$<G,G)P8s>Teet1F0"N%j)\JOj?et$Z:l^Zf0cS@r
%5s!I[TrQYO+^cq!8l73b!(2b6WmE&_#GZl2+$u35TeLt]Nk1(9<3IZI$OI\-3qZUdO$"+.iX=J*TRh+Q<SQ6Q9c]r`]u%'K7KPn-
%+3B=pKq_&gc;VanWHfmteF6W;nh/+MehU;5N:):Y[(O3K5fE;tQa*p06>]WWF[-\mY=_&B.I"nFL9NLCL:]^R7-e6(`WaQ&&NV31
%Lm%gJrOkWs;p8Qbqf<h\_a:YpAI#SXi-Oon^"=ienO;p%iYtr;Q3blb$rn1qL"LORqA?(U!@i"Y%2KZZTkP>fWTJf%V=R$+_2KJG
%)IDN3DI4",h2@#7\-Trj5iiJPH)KgCe-]2i]1b_^#[`Gd5ZZoKGsJcj9DtD[WGu6]/MJ8?V8c.kCFU4?n3\6l+K>;"6HN.$k]Q9>
%fp?Yr<XobLQRRX_h,u:'Qm+a1$,cER+rcEAb`+6H"A=dnV4rGg\b4TWNP>;q&!S;qLgEbnE/p1A6Af';7%*C&D2@GFW(;+)g%iLJ
%3k.Op_m9\gbsa^[BLrI7ZN-=b0`]aSOWn;_]"j#@Oi:q/I-]E*S?=Z3?-CTo+%Bm'l-paeU#g3Y/]csVh&HF9rZsgre9t]ZC2N.t
%0UQ"G4epTF<bYI$j05\+7IWWP&:#5<20,b9LfqU".&qIlQ5V8.i#Aqg$&a\Q*"%/a#Xt"MJGmos`?))GLNi8O!\8k33k(EKP%WBq
%jf>hU=$V%qm3(`=D<]H3DfT]+SOgkM;Y'WaAS24^q;Z!=#tjD6g[VITLV17AFt&>A(R,\*_4_21ipW1\;6d$SS<uXcq2[qO^A1U!
%6SPW<?6=?>g5qDHK0].tH=&qlf),4?Cc0:\-W=,WjZnHR%iLtWb_/e34k"%t`<SVGg,=_$"@LI3d*!]RRVc3A>\lut2::@^,6>/=
%9sgm04%l];WX['^M'*)nWHHm>H1;/]?$/i$nhd_\();'bF7HG;jt4uR-!u:tR8`U1Vq"88+T\M!OAoJ9Zu+jQZ1HPTB2G'+<9^Ym
%g`6)48o.QCEtES:N[h]<A=J2qd1Rdh7N-$p_YfHM7001$r_iN"WaHL=Y!MIc9bGoEYr5lV[M2qS.:?MHUm_L3&Y&*n:4)*iL9d"r
%!`5]Td"[rUhH^IK7hp)i6"'G?O<n+<Ts^g50Z5VRLoYf,ZLkMGm.$;!'S9gj88oqV(F2cB5#:Gp-K[DF?@t"/nfud$E)G5'0eIr_
%g[<=\$MY)k)=Af"%7=U[,+$WNA#IBq#e<oqBTl!sc)abCl`KL]pQY7_$`Fu*gpG.&(W1/"Bh0A9%Vb]WCh"EsXRdZ*.#R2q&d4qG
%Pi_\M']I-6Q3MS@RiuGVoMXo-rR=t]EX2doR$[^Z<:l_KD):kuD`O`E$iZV*h3#^?[2jS(ZUnX>R:c3jNa6`-CC+ug&CX;<,&f%m
%Jn2h-*"P_L;0ct`Qct0`PeM_"?m%NResR4m20(0tM+BC+dmk$Mr`+OY9q!&P=H/RA6rQ!o>O+r$Cc0*ZWjq5]qi]\:HMUj/+ju*j
%Es'ig,elJ,L3r<fWF#+--WSa"JgdbC$0[&''\rln)V#i.?sf_`H":p1d-^6)bb-?jS-EM6O+N(t&gY&-MnK=6XhgIpfahP1Z=Mgf
%L<D&mAj0+I9ACekrupbV3G0so5jQ#:r`\^eiPs`\.eQN]n=0j$CLWk2qSQ;ljC@HNlfW=9:]tf5"Vn/P%nqEn0,hdK.)`(b>@_3;
%E%JujY\^--IorCC\f7Fa$W+U6,>!quPTCT$OB!*c@=/NA<:YqVl>5amc&L:d$o$BSF8AM#?JM8fJT'W)FFd)c&41G1<U6R;rRCNG
%P2m;[nfAD+^FS[]&LjAC-?LX3%]gJA?-TO#&h;tefPTq/G*h=u$PM5F_Fg>^%74jbR>gcNWCTKB)[4fB'd`cUS`E_CO=C*CN/'c7
%@O"Zh>R5%cA`7OFf>kEhL1o'e_VTGT:R54Ng:B3oYY)kpm8:Ts/pU]G+<HXtV41/E;]b4OHJWAQ]k>FOm&.o%WLq0RN$\o&@K$9#
%!4Qni1`43gmW]g#"&j.`ju)_j[>EG?]N>h:D<%jC_i[T;e"u>Z0I2F`=(FfY6I8T5;AMe`&3:fS45^G1$:;.-"$h$U2hC[TItigb
%!\#3>oN\UT_L4$c?X:kCIb!8TdiuR8:BAk=lNgYZ+!/h-IRmT,``ttC#@Ml8(%!2dTu;Gj!og9EQ76^J$JQg0#)pL2Q"Z<1UhDU`
%E!sP`6HYr*-<.(,&_pB0iX5WPJRROKf4_m]`O+R`-%G3Qj=09_<b"RF*m#02N.n,hHkY4%!/2RF,Hi_T^>>p="=k,&3YBFZAd&hA
%73eZMV%+9H5^f](7ma1H;\jn>l-i[+"C:K!a8+11J+=geVC=55"cW;iU1rRFi_cLVQ-q_GR,aRW6Xbt$;Ljd:4pb&i'T!p;fmuuO
%r53$R'WD@:fL$,A8tC;'X>?4YY<kCXe8A-cT<@t<T?'ahLb"_Wqh_Bg&:fq%S[WR5+T+kVY"3MeJ(<.7F^JDu,7>d`/(4'(L1s?J
%Jp?"Om0#sInN7F'oV)l5SiSHgFBU`@83+'#i,[M-mAjdERM:)a;gKHF.Y<]<hmh?8J!a0;.b*C@g&tdAY2/l7i7V-m:+=;i*,=m$
%G:t7(XJsCjel#,?WVt^g'!Y8V4Y,W>[*=_n%]<j^U[(B\939ToLC=+2#P*)$oK_h(e?2";W>MTbHY]8mK4_Ie>.AG_I_uX2+P^d@
%d&8+Z`_duYAl<L`<DH.RkZB_lV6q.^#%o>8ap?5>;UZ[JZ-/-J0UNK,HuqRh2=HA7fTq*l&h2:cJj<Z`"?*j)'=&a"n[+]7E"0!<
%+3-+pf@W'G(KM_iFm@P6bT*@rX(&a/QV1O\AO<VZfi$/LP4kWWp6(M?dq05SOqOsoLnKXdORJ>aQ.\AM>*<*A`ug"'(f?e5pbG!D
%F"m/UI#q#H!%N?=gcM!HOH)6l=4'>-XXrOL$/d?L/M7uYJt\@9D\5_,pf,CMQI^G#;pEK>MK`g-9$8bGc.jIDUi577gf(%kmN-Z1
%?27^bQ9d-iUG=]"1f7[jqcGm^*U,[d#\@=g"s,"E7hjbZo(IB+<.%H/^<^)uP]gVRQW.g2C>JJi2R/^H4MR)#!uXgM)pg%Odf]PV
%L"#cX4H?,)e[PE?MhF5!1!ksrBfTI6l'JNJkgK=eP^LiG=kKBE9"r#)H>*_0g6UJg2bf,K'XDi8:5oP03L1i8@T[ZCiJqL8-@fP3
%;)=51[/>;@(O-jI=@fsbFWkS,]OZQ\U6OZB)Cc[p&?!R/O.cZV,[j1G+@?+OcHh/!b\9Xt4<NJu;QqJ0RoArFQ0+tE^#oDY`7:QN
%I[PlGV6<;ZB5i4jS3R1V,GEtf7OINHJl`r(4e]#aZ3D^Da,Mju1TRF*[%Q@Uhni2a3fZLR4Ee,US(6L0p!*u]7<GUHR%7*&@=_9&
%(!elXXkM@D^1t3TS5=OL]?n2]Z.L;L/PR8X$G0<C-h1qQ"!AQ9\NokgP<F?1TN9q6cK7i*<PpXkl8Jj!j3*'%U%Ei^:EuY8ioZh2
%TG;Q*dGXVY`#6"H<9Zn797'k/Yc!:PIAIn9X_](-kMP&FhScCuXuH8\)NcRI1<o5s__!dFQ4D^UjpHQ^fK:0MWf8dg-puMV2J]K$
%<g3Hd02')(9h$;d0DWP=e&N?b?Jf^e!2:C,G%6=+=l*t;75nd1:p.IbSYj=.rSa<u4>14Vb/=G><J'O<b6R@rUs+EfIMEt5!-.Ku
%"l!#RrH0\'8&^h=Ss0A>Q`3?o?(0V=IotWa9h%O7VX'G*p9)b.[`Qn_T%r=/oaJe3W4VAk<.c#:5Ene`8oXQAM]IGQC`d);E`]Xn
%q<2Nrm3X'?&<k1H7rm//6^.A67RH,W>Y(-,Y]o)c#AF,1;Rha-3eHu5l0DMJE5a8g41'W;.2MGK%6s'BeQ51$<AsctY\g[acO9)X
%*a_N.&g``A]'h&QEm[8_40/j1=$<O&VPhegN!DKL2dt+[;V$WMRMFD9j(CVMgN?LOi^?%Nos[8&788L.OtHu29U@*%j.g&uN3flb
%9oc.r:7LaP!TOm43/L+gEjacJV%KF@o/AssKJpUf,X=*j/nO08"!Fka3dVDDD(@jn,3/pZ`,\1SC8fa?D::%T6$UoPbmn7h:*bIB
%4$478<FZUQ0N1N%+X#T@466C6)M'>^8+k'iS5*E+mP*Q`TDV6h;%H4tCEQD2.#WdHr7XOZp)4C-bZ,d,r=isI]?b2<>k\r1`]sW7
%X_Yu*;)r2YI3!%FeFI#/AR$:MADjm<oo"s@/HOqlLg5Wj=9An)*uC*#r+tT^9u<tqH2<6SOlS*]O,j`"n.eKO3@F+6_XCaOBMmH[
%9s^A"`o,32bJi^3J>1^?\<@RL[=DsLqI+I9pSbo\SoM)kaq[ut&JF;AF<">bRm:Kcp#qmcGH3bH3+65k#\\8.@_0F[D9SG<PO)#*
%#;cO8-#[/uYcc!!JJQFf?s4Y@X'p3)eZZ<;=Otb$&iZ8#$!&BM)f+91`X]n/J%F<//KB5:KFn!p;=jQfa6n1kc66AC;9=QI5U9lX
%3YEei@Z"*^4@HA$dSttd:H@pn3Bsu=6(q3Dn0%MeZ%ho!V.$<%,?JQc;4,[E-b#$\#Qq=+b:87"6qkKc$#t[=_t*Z0jU6pl2@kg3
%``Bk:[qna<X:t[VP[e?86YBKkXr.;^<DXob/9^r'_Q?p`9jc[k!?jj1.]*C:KfKI)>&Pm1'W)nm/eqZO%RW=(bNV2R>N'A@;_N-n
%m:[&^LQt,bWcs9SoJ[i_kIsE!B=-od5>.O('m98:;/[TrGn/%"/(@-L:rpEu6r/C)2EI<9WI<#U=/"NCpJ^O=g3D4sT*5r3M5$%7
%O2D9P+C]IZDM;C@"hYeN''>ZX]HsVV\U,%L-NlIWI@BdY_qe:;gXWDhl-A9+mnW<keSi+=A)JW7H!),F1p&B\KIVEg=e4E2/2fKn
%;]TJZFTF^17pU.DR@kd8@NmrfVXSbeo%g[AQq#i<Qn$]@d:@/oDJ\OPP>tA8raR$#DCTM>L@@0LGSmo%A-Y)q,$e"ebTNaHYf*@M
%ckK3X=(4.`5YA/%bolm\l3_%^#]U4D>#UW#CfT;qBm"$DX.&8mm=O6sJ0[uOg6VnUMpR>]=^\hOQ2ks0RaC:-];0c\%[-SYLY,3d
%Jr)iM_)?kFlJDEqeqNb?TgBn&&:jEt&Qb\\rmCXV`+Tau@UJ-sRrDbsS]aF\XAD"'FJ",pXLb_(Ubdo-llR7]e'Z.**bI-1U6ALY
%8eZ]>Q+B^hde"?2ak_lN!5LgQ$>2AE\W,mCjVSN*1]6F/HOh^6U_31K)&DtMJDskb@OF'iD_-(sUd12gr@ZO-E1&'b`CFGt6Ha]l
%0Ps6?a%^@N^hKsKr#7gT5X/o='fcd9]?.Pp=3$j\E-JAM\df*Jc;VB[B"J18<Pq.f)*+5Z,-jO.a3&7RTb`\gDa3'q2V9pcKS,#f
%1q-q_2N5iahhG%Y-IKGCrg^:K\I2))4)^d^9NY[EFqiOQ=4K2X?[gM<Wi[T5Y5Hgl<q/fBZ8PBD#c_[R+S&XQ'*0Zqc\\LceB5H5
%RO.;h>`A)@!_Us"RqA>DM'R'JK*oEP,Q<J8NM^#QmPM$^[gUCb7J3Xp2?c_WGK@AFFA#Trih2NdrQW3WaN<gGFB0?:/!mq;[G.^&
%:`#5@*`<_$G0j$%f)pF1II/.DkCiq7hp:TpRG]72PeRr-S4/Sf9shFD.S38b;!NPSA+7C//j,rI[FJrDqKcfM?nh#;O59Zd_n$Bg
%r(7kj<Uq]WQ,ETC<S7"&b62<$]u/7[n;uGe6>83,l._]f?J-*rg:!bB!!eks@PM7OB#4Mo7+Xdh__]8_<,2$0G,EFFAg)ud`0NMO
%g*Tj`FGUaVMqMml]M1NP6i1^5fE=U?H3NKbL>p]a6"d&+-3Rup@ZK%>nMMERJKqP&BFn1r63=]PWs]eH=HY7&%]T`")K!ZNGh+!\
%&R5mtjp7-999:1V'AVd"4H'r$@lYH3s(J_]l[>+bX9_bOGC+ek`S1Y(SbZ@S\7g_tD.pb=SGHZs.b]W=33XdRXjC<RiaoBfHNK@,
%)q4V"Y0A4$"LZ3!cGu04kVn,u7Y-V,_aiVrZYO7h7[\N52T9okc%-ZfJ=6TK`YX8SU@pi_E@BP(b.s0T4U<9D`<<Ld2gW9_!oOW&
%',-j9Or1%r%FoB?8YDtL0bpOb.RMQ_J1QVC>*+=c)-Udk4'/snK3=?r+b5"U@"q]S#do97b\Ja8B(7\5L-$$2TlO]B2:8J@-GP<&
%$qNC+2:,YR"gk)%d_\fc>nouq^$s?Z71-'9e!B";Sk$7j4h)dg.>FYpXlZ5d[2Lj0-]87L8>!7e_c]Bg"23[sES"\=Z9@ce&9+,Y
%-;lRTi<P!3lngY1?fP2gmMBI>ClWK\]tgJ.o/)^qP1"@*F^QS_@L*A4022q</9hf3Z'nf+2k%BD<>$2_<1F-bI:W\EG5N:GTi]6%
%BaOo+kn$FXj0A)8].>uYi8GnSE).&Y#[t&UO=IV6g6`CCGY93O>fqKn_r5Iu)+;XmnL4r[gSH;`0kWsa"B]!C]2bf51b:bkBG.6+
%")FVY.$j22SEd#1^k4]5b,Ht46N"F@)H'*,c`@GTZ^W)/O=S'M\p46A'?<Tc5GZkc/PKr3P=00_K@!N[oXGW^",@#t-.?<0S@!X*
%^[ISc0Lt/]O\(8pT@iDuLEJu`s,![Mk9_]GLl/]V(_Y?A$U,_:FV+4-1$50YO/TT+-U8&MZ%;/>oMn?^YPGaD?1o%#A"@(RXF1f:
%8%Ugt3;[2/\E2CcR,@+O=^j(u*>oK-g&6GSIPnh#>9sPjH2*7aYj930R>t"<>YGpYW3'Qr2'*IJ"hR66]=+VB-*ZcA1/YuMeV#o"
%7f.3=GO;SQW,+"^,R)irU\<$U>mKepRdq.<JBeSI&1G+HmI2N'G6$^6lZ*/uLAg7jiB&pA,(Q3EDZlWa5`;58,LsTe8<AEf':+n;
%l8.KS9jS/o\]cA`O$YoRKg]$nL^)1UNWG(M\g`1sIdQl&A\"@6-aInL\AZnS`;.Sl@VPQH8`9<^LoKT3QVn?Cce)nXVkNrK8oD$F
%"G-QnJhQg\oPM/uLi+sN@KhmW^GI^?pK;4]-PO]N[mPX'M[roslW?i-kC's0OE)Js<%omtT/eYCJj+5ch1XT(AdGKucZL,i:[&9`
%-`R57H"qVZ0iJ9^WHfQFkc7)RSqC+gQE(Jt\sQ_&OGQ.J.'LTu5Kjm'3DKtK0XMjos!pYq<%jR-AA),fS'(hJdCk-0528$#n%?Sj
%asIo)kZ=,#&3R:f/K+-SfN,<V919Y;OQRGW2E^SMP@GD+Qq!7Io"Q)YF[($E%(p.2Lr.BAR`RYW<VXS4=X.$Uem67C3$RNHGl#fm
%WeD*m;6f5C1@uSR>.6^CUFV\5/3&2o=N`--$f!KsD&e<dL+?1>d:&KfR);[ra#',B@D[lVGebrro>(NPH$2puZh2pnET#4>ls$/<
%Mh<e^Gp`QthZLj3[3!q]]#s+ah":ujHqqt0p?3[27`QiW8Vdc3UNu:q@i=NRb)I,bo&D[Z/G[dS`Dh?iUW_rl[L\LjOt*/*9BV\0
%m%fMD16l7?K7^c]%_^<g_JCu52agX#%H'+A99.\YPD$RDZ+#[:Ru<?E7P`JM@FVkI%*=BF1P$YEF(8=TO(D<5H]R-m#B#p?$\#CG
%os9<]^FVlnnr)i=1I1-_&$[(^J'A]KDl6PL=\B4Qn[O9nEAgh`7'i2^3DdoO<j17+i%QEE(mNBn3UVts`@*)!,@R]!s'b-CX`UQ:
%\+SfXm/UVa^=m_'/l8OOKa]u)`[`qb5pli/=OBL]L[O5`<[$(q&Zs>*J1##_i6jW2:1bb=:*-Mj+.L0,&X:.<_P;&>iNXQ!(DD?r
%O4@u@=S0WN<R\J6HBjX!J7"0QnnI3E?l.fP7&u3K6@8.dh]43(6]\I,[4Who$*'fb^>L#FCgNbO]e+`e$#+^>VHTP+jK[QlP_@go
%MJ8B,Iur(0*?Fd,_(sYj(KA8IXc@1\Pj,.+cT+0XV_`[-"#YJBaU02[HW_.IN!S2=f&(el'F.).9/Ro`oMVjtZa'_<8A/trc0gar
%f>c[qX,1'2A3^s-s5Xf4KI)3=;6%o/=c6hH:iL/MKJD,8WAsbG=Gs;l_ueui8aiCh50Bn:3p`e]F"h3W@S[p/aU(;/Hcc29W`-OA
%RS7:IKo*)b5<!F[YkVT6I)/IQM#T:cD`"514$FS5LK^+RTKs3.*aFRtXJ6Dib=bL%i:`J1=XY"In(-eXRW5cl).N,O*!-";?Y'si
%PdD0ED<XAlmno$"(QF7KVu$cl2[Iff`s#;aml5F7,m;2\B-'Bpb!#gfhsL8?5B_YaK&8G$^a,5i=^m*NFdpGj^`)Yq,SJY$YI``-
%NXJbpa9c<9>'Fhh[k#*^%-'(pT(s^p6(cVF(+T:pADm;+cH6BGFKBFf/965?WVG9.P-o?6:s_P(d.4F[(_"s"8<=98V.Vbb1hs]h
%<pm,)XNgBcSSN0c`njt'7(0HcA$e'RA7@mB;!tK:!e=E'8F1@r;h=EB5fc=M4Baq#!hJSQ"kPpZ8^:Ucdt7/ggiRAmNQsMH2XO4g
%N#W.20ja6i_h0H[65d+YGGTo@qX\h_Mre?@&RUUMo9^C=.i6_>l;X\6jSmI4fjYT+Vn(V#)OOk4^V=ddc-pSOFn+d9*m`Z\ZbUpZ
%SjaQ7;5/tBV"pa#DN%HA71@'s@n:!#pSK%,8!\96Ws$#'H<[a\]!W+A;qcY!GJhiO'H4MG1gS#j8cP_T:kbh'k)M2H'1Zm'C8R7h
%Ntg0n=#)<M#,8u:C%V'Iak<d&4Xj]n6S;l4'CuK^?gALp$#-?=[-i9a[)L[2*b==)a!Yc$Vp$c?e+kg3S)BERS9%[4@2;!>;W\+:
%C6AYk'Tr^LU]rSme$0DXb:q/-dW'`F8r"9I95(oS&eRJdJq9jleus8)B`J4j(9/Q-@mW04q"@IP;!afCXhW(Z+-FIL]+ME:6:_C,
%;Up%%eSVFr/0NW5O6U(.Tld6h7%@I&$^<JWplK)@M9)qtBc(e].\,$(Z>bYQ?J@m^O\dIB-Y3gmkMh&,k:H/M/K>M-^0Kk_'W.[g
%<3no#D@=93p+LiB]4m!MnXZL'33?e2Bs?"J^_qasO^9ugfkp)m"g8uDqUUP%iS#1sPpp_gJCZRA!:/E<AXt`HI+<!OKK%=O`^,Li
%"l1hag-D@GoI3*UF&p1&g8[qLD,3W0E0&?rmriA5gA`j!PUpTZA-]6j?k)aK/)tsoU`L0>kj1a\BlP6]+$GbYh$$51JOJek8U#Dc
%18H4fqaW:A^^^#!fhJ7N%%1mK;,S7q@oE?oF5]>s*-ZIeB^ke&dCG1H"K;tcq;%B'j9eh>1!Q)CjeWqW:Y(h?'E:M'A^+>1I50/N
%nYLP]"?Bt9+8M@f[T#J0p[l+sj96t%niV+)=m$$qS/P.]8F\Z30pTK,!1V:"#5u!W52iOT2ku66EKKC4Q*P/">U2RrGBb"_iVkar
%2g_q>=$'$!k&I+U,[<t-/(6Yim55]F_AskbLB+;cIM[@)#dJfPd'ft4,!nudm+^TX(;oBCL]Keinu,O3TYUr&_!-RrM73%FS,2-k
%#K2.F78fEWi$1C?HTfu.N/Qcld+'R<=>qc?3a'-mMq.ge$d"Zg(b-u1RBT'E7uSa`1`!+'1NPeN`ds`(MXF@TI&&fRGC;Gdnsf1T
%8*d:\b(<Ou,W7=.J.!Ql"V#HhgM8Y5dRaE@e-I.j&%<5/j!0o_+.ri$r%.\hr#'-JIMU)4nR-,GAS]?X$n!kJCT#!Xhl7&BW^:m"
%]KQZ;A)eaFAM!k^4a?aqKc#(Do0T7TV`mN;"@%;"T/r<pKS^jp]=1+8<9U.@Ob^`f>X9tQbNA0)?ZI^UWoWetHWHMP5S>i1.=XaO
%?BnJg*#0MNXZmj+rX^PkdrR.T7$MOiI4U4l0jVQ<5(Y\f(MjdhpFm1OTMW/#$ID6:.L6b3ZWSt;]@r!qFXiV!\gU02B$gb.O/242
%Quub<!9\doRn%hP7atG$O[NV#T!bn`+Ph7B4;4X4@rXl5<DDc$dD]o>e'@(p)'Ec4q.`P7>[5))Kf9;7J@Uef406-SB&U;na>A4\
%84VEOAEP,YNHMC<<9U'E4_ecld0%I&$aG8d22`1N5=JhuT$qu?KqBF.8(k#GRAH<5Bb"W&i1Ztd9_Qc1>_*/g4Fg@`6)MF[0C@a.
%09iXUaG0R1TFbf7,;_nm5,;6i3%,a3r%TUr9S]K\!\<6#k#NCe(""*e(E'ab4*D2SjTQeq(V*R[NsdcT2$dR[,YHQ>807l7GF^38
%0d4$qChRbu:F`Gbqe+gmPC,9q1r-dmB/DJfWo*+U[XoDLTIagH17&ksM>Ad<YLquqm^GpTD'bp6<K7d,].3,]>\(;0XgG!D[g4@Z
%ZN%O(?[DL4U<QI\-]B^QW[6CTaI"8I8A->[Te0f@!d.u5'=Db)53U%Y8s@uF`V#Y$f[dHj2*tq&H>`uags_XoaVS*VTLD^q$G:\+
%5NH\So9B$Le#o&[OI"<Q%Y,-*B>,lW4X`k;)Dm7aHWpYe;W8CR<io>OkQ?NcUE!>+?gQ_+l%^PgHT@'QDl]EQ.<\qXYrbg40PQ0j
%m,#V.7[#E6aDQgj+0PR:90gW=DhK1nr*bod&2T<,\,3^MEMoD@7luRN,](hWd+Z&sB,QpaMDR[X12u3!9OjG6bKOl*/8h#P")E0[
%l&>iL=-;iq/8,+^TH5g0kF\V8/o7=4[n@%CBiBi0@N0LdD&AlZf1@G)LUY?#b2[Ga;tW)#L"_"Ng/`N9ZVQ%.d1$QmT8GYr:f%7>
%]7]cVFRHXC204jJZ-Z(U5QSP_j,Rp!a+sT7HQ-cZ4iqg(IZ"U\<&13ljng.JA\+o3d+^'mhE,^id"pPYE3B%QH,"_hlR1R(;OQMM
%&uY<VdCuo\/.OTfYVJ&-OAP3NQ$"Yj=]s-ODVnLNKP6nuchkgk*.%.m6mn_E9T_A5iWtb#IA'+P^&bto0Enp'7PUcS4TH]Y,Jl@e
%&$hBmHm$,91W39Wa^irK7nbIQdXUc&TpdjNO^H>E%s8saalh7)LV-N(0S2C)rXf;Rf>6l#DQAWnF=$qYc1`\)'dsoOL:Q4S(2<Zs
%XKbe\^W,%#<aKPS\O^FY>fd(R]'b%C)c-6Mh]S(Z,slSA5csIdUJm7hU*8,)Ku2.kFq_K&ZsHS=Wq.CV1dP!-rZX1orZ'hRL\#uc
%IA%S&`]A7gI9S,gWf2\jq4`\"dQe/4:mZnq6WQ*81oi%6OH:m_5/[?inYDe':Hu?A^+qV5+<'Orp]om@2f+1TGqPV\!,dN3dMLD/
%b`W#1Dol[[d$3`p:-q#3h*J#R0>bj7G2+@p!'.h-/QGp7%_%fB51%DNc'"e<8(t&6ltP0Y@r"cjV0#gJ.WWuTi"V**;-FK'U0%Ho
%9#aH!<]0'/Fl8ZrOOX=6R9(aoi[42i$\s!s(?V8SGb$'nJ;khTYb!Cj;V-h/%jn\P%R:N*Xf._[6I%maC@HhKMSVNdBHJOa84pGV
%l?\;(6a5^;GSWTWd$nB3O"CpZB_E^$N=FZ]Xu^YqRhR,n]aX64$["0IZbf3Y$#+L+B8JVNh'2b:162!bP_g[dDaCZF[C#a+Jj#?:
%)AZUh2ft8a%JP2XL$f4\8.-&%CW>Oh7Cm!qP3>;f?>0_?[tXAeT9KJ>8Vbo)lVj..&ous/nYGH*K,>F3-KuR(C/%UVmZo%\bK(G=
%3cFu5FX7bb64Xr)@Z#UJ:O%"h4n<mSUD*,#\^ik7>tB7!U0Sg$6;7s+pV%@h9UaSSquHH/1+[K"^^@C6^?X(d1n+uJ%)*&?cELeN
%&RK`#5T&uGYX.EOMU#N]SReJpO.n0La[8ibZj40\dRG=RoV`'4olFjs;bY[a;L7J),8EDK>GaN81Bm(:X_sL(*s4r=1Ps,[edSJh
%9Y-16I\m\+@/P[los,=&EHGuu8Wt.V#"M;Tk6XRqn%0;C*mR5R@q)i$/3:I;V#AGn'F:%6#W-BtpjRaW"ig3?O$D:2&D]hEZ>%jt
%f6DTqlH>/0'&i1j\@58>jCn>HgZdTt>4@X+3+[:Zd<qV%e:8HX)qBpf8g0[:Xa3r4jrr-h]BQsi%5Qdj0+iRr_Q`61kW<I]BLbCL
%eJ/Z=Y;"[/%Rf@hBI6+<jDfW*)&u/<@<2GW43jZ"rkjYl@/`.sDaD]%e\%]eUqh#+oWuhAVRA8#0C50A,tA%O?8uuHK\i@&l3j40
%.3HGT4cgrIOeGQ?cu+$"8OY5PFsBD*/t0t5+4X@3$Pd@V\UeZa@Gu8'raK^PUhM,/6]c^l=!&;3*q'<Sr6SE]&Lq\>2F7^:Z`br6
%/h5nSL!-0E=qLbS3mqs&P37AW9=8Xi;jsI0pC$3W=[2Dm'QZ([%'djucWph_c<=*W5=D^BNmc%&nK!-1%(/.)?ajPhXk&Nc"(M=>
%6d_Xr-TC6o:@F<i,0urE_nXrjpr,8;F`(ZtiKD0N!+^9,Dj<M4IOLc.2Q"U]Jkd0qPKG`2^!^ER#"5qkW8J!6H%rtsV^B3>LU(sL
%5MH'"lsrE.-/'?GH!*K(o;kN$11;^h]a33i5\dR/eZe?RId#oH]&X@'<hk=AG+Os:>Q)Otj<Qf5W!>1%p.M[,dd0K$g^klbXIee[
%2&`<?!Q!,g@(r(MU40dO^]2bf];Oi8UZA.R]2O>&JEiuXI,<I,j:n6&2>)VlFa*nlj8^'/?Q$$5?2TpElubfjC-@iIFGN4R2[b*M
%$=C\4X8C;t4HTh#on]#IJK6ZQ49nf^?((`2WR)[:?NQ3^b-"=6_TlZgo[qi)(Qjhm$&R8==sUe&dsIFK\UE6iQaTP%)_D?a.8TP)
%':VR-J0YrjcA/rqYiHPL"JHtR+0]r@ksr'!EEYZa5m*9<pMPT69jTGhD8#c#D85o3Xc.`6RNB-$4&+)Eh9,Nf(d5+IGMoh!G.*YF
%;og&s5L`W;M^`f;r,,PDLI'A?>=J!lkk5P!kEm.]p4dt>@]!(&`K-3W&A$U:mico01+Fc;B=)(#@rerpfYZP+`sF%2cLbhe6&Mef
%h?=].2%5'/Z"28=>:Sa<grJl!m\.C=LV>#ZM<"-!>/t<879)DDO@I?Sd*%OC;lrA/PM-q0``s^ii,$>Vi@C"H1+uUuDH"9&[""6!
%"YISlg&=eS%CFosY4!HG$nfTDeWPcH$?6KXd<UIr7["fQQ-!A7eIj8LP4gE`CJK\Wr3>DYE\KFVJ"s"+b?OnmOXg#&>d8_0BrcM!
%h-q?W(V'5Yfe<SdWctfE>4]**6<>Zb639u/bsKRN;-+$7],j&GPmpqi]i:UK'Z91G7WL';Xe1-S/JnJA\qP.60`'4.Z`i7=?UM[<
%q5@&:fm,,RL1<q,,Z7X4lg*#si,6-9$B]`$99pbK-O'PPGjHuLRL+-\cauiKkEI)3T$',XG+U"+\oaq3$?uph45"+R_V%QTk\k6Z
%*6_)*ZTFQdn/V:/IbS8c>C_c9;DZJ78q:-5g=tKCL?,&Vc52b_\j=_8H'a:>lZ(/&R>A;iKAu<'0j^j.qFr2LV(7J:IfP&&XY*Jp
%5DGoAn2HYAZ)bs$IYp)!Gj$2@0eVrM5n$WZ@^8%sj&rX^.hf>tp*kJ>+`"#9Yf_YMklngo9C4u)6;/':g/LHD&o)PrnSNqBFdXKN
%CKuqa^lfQcW3I'1!:]GV?#gL1!h6"=4WPVTB0>XK/#u7U>;4*orA.B,c:G:@oFS>,Wt*B);DOET.7g3R)D/3:6VV#neB96@%*Ynm
%N\iT.&!cDOa3Y%YJj$!EVr;in%0/;8UPuGQG_?9<p!a/kmoDL2]fLEGP#8kW%=VeQc&/GY9<^W[?^e`cZB5.TD7-Ar#<DC;lo<rT
%l`RdXr>j1]io]!*<??T[Zn\N\K"&.OLNj+gB&T^?e\;2IW%6!UQ@nJU,-K9@<k:F>JM,oH;ahgFA?r!tQCR%^q7e>>Gfk%/?d^'K
%(&CP]X1O'!#+`bO[,?]KiB`02:sO!*_t4-?'8f^u'JYgX+E8cj!1_DB;Lj\3!!jH>ao'ji6Y`,lg#=0Y,[gLK=WdrA(Pa!p^o3<[
%T#0`!&TWVgk80!#'j@+MnD*2F%=:@8+L"H^Et_m_DN(G@Af*n!J:6Yd(%4/nTb(9ibK`]K;,9Z;89Ab+o8D'k-R:qZ%O^iAbd9LQ
%F<Z5'enUVQZ6cUfT#K-K&$ei_<lULRHnW$f_cV!V0s0j"-)UPJB?Mg<C),,9kaeORKt3Gn0PhK*J`*Gjbc,<#j;36b0%#[;IDM<=
%[UBKO=q$3KB^.BBDg%bGVA2$-,!DMBD\R+QY5!bDc(-Uh=_^>EjJtf*(0br'ecV[jQ!KiH\FFRHR@U=<,30]D^#u>(S)'uN\Dg[%
%0oj_PaBLcD8hFB!*4LhKIF`;%L9QV3E0#.C[H%fh[C0c%qXW"ZZ'H@m9Y9UdXQU\aEE'J_K$go"5p-6P=f9IfTnYeVUcs"&Z>t`e
%(9m1X]`;%L(n!,ms'!hZ>VQg2:!sHZX$/M^!E'@u<CF?&R/P]O9kkm^[]1bAYc;NbehBJ_\l'Qrm+FA+=^lL"F,h#t.N=S>.<Vnp
%4J/re<V`kaB6teUAj@N@9B(^tkcL<4O=NIR2J5.DNOC6?1nmnXE\W&LTO0d&7FhY3Z(!b5C1p:>XESlr^6;Y$cT0p_&/csP;c`QO
%;Xdfl&+&`[a"E,]kVTt>H??s+7b(@%B;qg<-4i4I8HYqE?+/l/,dhVt$Ph]Qh!><3GsaH&.P>X&3N`*BlAW2$VR9@"SM-hM+Ta/8
%XNRA;1(U%YT%iR_]8FUl;gIrQOp__+AR7!"*I78+S0-(J:@Z.$;^405Gn\9GBm/-f3ckg>a\oG,:\<jIif4_H94g_ifHJeY(qkft
%je!jp1Tq)r-ujB;;QJuReNd/&UIj$J(_TSZ6+I.$P'B?RT+m9TP0rUpcpcl&+9/;*9l]sH#+fuaS2,Bn39n3clQc5A:@*>gokCh&
%Br53/=Qh.ig5W#>2N(l`oF0e@FEt5Nf!."f,d8kZVnEk7[fK2upZ6Eh+8Zu#qK'3i>&TCJmPZm!;=$Bo%np!l<YN_Y%6V?m5Vi%Y
%Y1YG!5Z@ENo3O.r(E9hulZEM65\+^'XHq%QLCqo4,FJNVFr'bo70!:(qt!b`[)-u,JuL=Ve*tb4=7jSu&5h(#,8;mJ7;-]LMfh/I
%="U$YjG9U`%5lg]i!I``,Xc]S1*tXArBN^WcRAZn7-QXb>\/nP3.&4%<WQTQ<Q9nBL_?aoh!:]VeQ`*Ag.["+h63GdagP1?Ag.db
%\t3/Ae\FI@C8i=<HYLqcJhO?TYT+!58o?6999[r#pVl\Q^"o,b?\C%H=c%*d1^Q7-lVg3[@10MYC38MmJ)c,Fq16oL5RGS!7JXQI
%B5MiVB\7i38=^M8ji[W5#F2R4G&873k":pdYV>@E/2prbD7C<qDAV-s=p+UG9aq=-V#_??ha@8`T^epcYe*nQ+t@q#dY2-%5ZjSN
%>?r`@)Z4CJ3:f2_bQp8WkL7l4]!Y@XEla<2$tU+`/'Hb1NY'gRX?!H%_pY8K>KG-OO8)YO$$OjrHGKSo9nL4nS[KQ9Fg.CKa5`*"
%$&foC:R\eBB[_6FLpHB5L0;[3oJEOW;K>G_'4dZ[OZ1J!C0n%LYZ;UTN]";Kj/3:ae04dYg>1-?(S!WU9[iHjp6udcF`_\d]7;<6
%/W\^j+_*8d)AcD:IO-\75MSn[!;nk<miTmQWFP(-Rt[Zi4sT:H7esKIR'D22:><peOi*j4!<EZ?j4Q?5(u7fB6k;3A?7,"(TQ=m[
%!qr0C+BR-YQMPt"Z*\YMTonlpF'n85"eha9+Ukl!2=$?4q)FORgD*t%[_X--YfCl_)Fc.)*cJU:7j,RSV@08NPTC1VB:3O"^UeT$
%5aoS7Kp^u?n,n1oV<jG`*;qmD.0.*1_,Vo\<(;jN(!G.KoAo1qng1^l[&Ho8R_2Qt2NY7-Y+P?O60LiQ&./b;LQ4kPI[.JoU@p?n
%5k'o&acNY7/OQ$,gfW1K`iq5u\,oC(<nF4//^X&&6_DpXD>=SX0(DU:-<u6t[_G=ImqcQ',V]CTl#%TKGof#l326J6o>o9jok)0X
%H8C1;1WOZ=2k"CRZ)_\q^@rfp#F#?S4`iSq#)$b&QP)eA+S1[>PmXca]S"Cj<N]&4E/@_Ac'_&dIRQuk:_cHgF<G[)`MN3kO0u\J
%KKs]E./9`NP>2,UF!Ut8f"/*Vb9MXA<1XnfY'B6kVXB9'cI^gl/&F2$I:oIr4`J1,5iqs=q1t-i,p"P9NamkqWDHUOWFf-)F7RSt
%G#]EPm<bPVq])d=h^*O!TuOpVWqaU5i4R=O$$8mqhD1A*]%^+?0fkmA3IO,7>jA59_;E"U's9_pEWI!$'H]1.cmf#s6j_O`nk'/"
%oI.sR(20:(;.\;%'5.D.+(8X*59a5FfIki;!"<[G#^p?S[4Ad;o0Pk.B"R*eMB='n4;K9*e%0n0#9>NS#1P/4[iHPC\X1j)Tp29I
%RrR7$l9(@borT-V6holPMZTPL!\"`lXZ[]YY\[-4hm.]%f[b?:[??aW>r#5kHastbW%0Q:WdaMVK^"KlY''I.J:CQi6?<p!a_@n>
%W/?LoJcMpQ*8[]dP:<tHYT,4GTq7sK2!VZjpnLTXC,M'[U,^M%&sm0"'\0rfkD`I?I62A52*r)^M9P"*6-9h?#eaiokK'+cFtljK
%h3>m\1pYW+WUcREDaH8L&1TOf")iiRj4\Dt\LVQg[L5IC"r8O($I0F2C/@(ucm\(Mpp<t`'V]e4R9kGT*NHYn70c3KFi\?=KoiZ/
%"9"G82$XrOZkDFc`;lST`%s7mf.2FoV,XW@U8b\c;'?LE>_2<_&2"\-,oUt92:c3/X)Wf!5d^2uPt0u>EB,hZdW["_K3p5#>_"^!
%6;SnQeD8d,WmW1HGo'EWj>AcHK"qPE>V:jf.a^pYQ[VIk,DR7IEl*WcO7<(56(SdN8&4"X:gSA8Z#BHk66('u=4"=o84SUE']ebC
%2]K,N?t:qTC7<\q<t"G]h[XM)&%PScf*%Zu%IGsa%6N/SlBK2C.TmurT^,5-DDWs/#8<j"m1h3:rU%FhG.8ShX'gC:Z9(/?k<'0p
%/qBQnRLtGQdXD*A(UZVFIJ#Ns+Z)HB!jK.F9Vc+],".c?$@1-TL6u@R9#%6FGt0uWSjm*#O)nmi\PG4r$sJaiE3\]%O*L"akoo.:
%1=k?;Vujc]'.JO`"*>n/Bo,QL'\]66%_ZUKS/^nZVYsO#]L#B<n5lF?CRZ0",PojuaY@hD=B528(^&S2S0YO\cpZ>7cH1GS,j%s>
%8;>.g$CLB7AsY<l@m6g$b:W+8JHfW\DHBqNHdESRJ+,.M!6h28oCgi]h;2:(3BYhn-%EJRCY\#<"k'OG\WKkfc^iq*LpgU7VbnYF
%Jje;OYq17qib>YEq1>6?&R<@)X:kJY_3C4Y&6_K/?\Brdb"@Gur?3#;b(rn<;.s$A<Ff,3[TlH,NV>W>:#&.Rj4$.0_JYRlM5Kjt
%[7)a0,rX6([tfAMYA,AMZEGGZh\Am<egS!d,d.)k5?hC_<"CSFi,/YJJj[PIG:lfh6p&-`(`jUo1o4d+5M!%8hQ&C>\gj_DNbufN
%*I5b0&e4CL1<dC_dSSRY*bM_lab;01FQ?Id:*f-L[+,+H=p/'R@]0[R.!I'0Okhlp`)5ad=hlHgY5+$#6*WCB,Lh]f"GiXmc'4[f
%T3Kq3_.:C8cVIPB$j'Yk;8PUeCPhSS,Zm,Um."&NTn\2%eZ\><Al-WB5m:[sFctmq4I--Sk=eScRdo=57WQOA-B>!uQklWOX4nlQ
%IW(Fe8!B;$V9OpXC0UL?9Hsrhe"P:LOtLdNggRZhm#!6Y_BK'm"d+,7;XW2#(5't`=tlfn%]IVi'XLVr7i$Rl(I48GQDC"CIBR-f
%8XUIh8Thl\'p$*sd=/C8jt5^l;$D9e[Kbb-6..Moj?U(kaX^m2A3M8Ho:jW@aYJGmJdXUVC3]f.]21!8\D(>uo%n"cf`%\.a'm\V
%_l9GU05]k5-U(<4pZH^6ACA'01JOYA1ICAn?+-AC;>b3uEJXbqUg%nHmhF3dhVJD9XoUaOV9^`0;g+u(>1f8PiRtpp5Lu_-'TL^N
%kUfCnTPN*enmal/>M9]Uf8b]B+UIc7'E\1$Tu[&1e%3;&@*aiFJa62N!/YSP9(WZ=L6een_W\Io4"e+Vc"klN>^>PVk!^eHPB>,H
%\,62B;75plrP5Jq5Z?k6]',,*#3E?tF"7EO-rEmCJ]ei(N!73lQ6qj^3r8r&BMIs-WjBS?h&EPCY$iJ>?W*]A(2Lg1FJd/s<!VR<
%#@>l9kAGB\&+.SYJ^flRU7&I6.VL[eUX:1>HY!NLlA62fQ?N=Xa*%KN-q&!3O0%sZ]ADPrY#WAQ_-6]qoDRG^%^8]=el6(o5:52O
%cjN"8]HC_<+ME>\(a+`85TPah8>Euj6rc&_5`";4ggX<X&r+^ETim+L';iW7!0&H9h.^\A;RFSWBAs[=Tb&j@cdPoR3F0!1I6L/u
%:lr09)>/8Yd\b:?%;5,^;[.K+4;LAVksG$8d6)m18mdZCC*MG]#.BqQD$'^H$Kju"@_eO6mpKf71+oUQ>-`l1"(X>gnAD8_^IXDD
%XXdJ_'caet(#8\+@S2aTnY*-FVB6.^/kLi!Lm.>/NgC8n;BA3)@MjYL-9d=OK.:[/(ie/89Q*<r^H$#%O,9[oOGM=jLL2INfuV9b
%D'-rGOmQ,*5RH9n6@0^P3H>qO5+*]-@\k+K<sam,g-QM_QC8u-KLJfoMBV$O#VCuB@LFdZ\PYsXB?JBb7(5q5ma`[^oEg8%fBRS?
%6bibXa^Xd],SkHUeu@$i8U%@Ne48)p1"$lNB'QJ0f*0L^5IYr_BT*kI<''Ys2'AiQC$grA)@&^Q7q7mc8*o@O8tPHucp8/dmZ:([
%ZZ8"eg0I&uf'oq/7JFhE/r/FKTioEZH]qc>Yn1_9C;aG=bl]Ppk"gRD3"-.'r26<F9$fi+mg>2U^eUFr]%<FMYUo^*jgGQgmd;Gh
%+ToPhDTl+%`.ng_5JogF]bT#ucZY1-cP@ET=1DBJbrdkjMt?dVCapj*oseK5,W@:o$+RS'cZ+4L)PUAL4V,UY:V)6MFV'-emYn&8
%p;#AU1G-8*0'fWt7>5=g]/PhjSMc>;K,;T=?--I#haA_jPo'!nPJ,XTMHg*`38UM`N:`cO`QhKMTPd?pb\<14*,4Ig!"$ifR>]'9
%ofmfn(1\;?lWmN*W*(*ict2."*t$P?ZWKDlq<j=A:p;:?KZKY%$F!d*fh2si^";^<Rik26$U(!5M=@UeWmX"mh#dA2RgJZ^2uYao
%c2@$1\qY3Y)!/0m0ZZ4IZi^^EV1&!rNR*:cNG55E%1eXS#&A;L!#3oM2FFnRd5Y,bU<OHD,*:DVEOdWn"'f`eGrR".1k>@#,H"#[
%@0&m7EV709Z.q%&@=AH`la5>]/o;7;oD"&;`gQIq?/-"epe`lMN]!qjV>oL<h3_7o5lAtP*MQ'[;9d986oin`-CY!T9cMS*,%=Wk
%ou_UM24D2D3VUe7MWYQ_@#p!s?%o!,]"A*^h,R^#Ihp_OlW?akB6dGIr^/#]B9jubG%1jj'f;H.,H!e@lnS\DJXg<KW6fh=njI3)
%:?ZAF]:[g4ig'G3Z[M7J%>_SJ*BKuuD*0KTWMoop$6ZV_j"9l382[8<m'8ZYJfDlg_QZ)+6k-a>%(eI!%QCuk/fN2Arbda9le&q+
%s.ZU4M%T5aj+]jWZJc-YSF^+p`k;;''JVkOSQY,`f,&b5`81kpi7\g$pX@9ISPZ&;_XT1J5I0i,AQaH8)s8X\`24)#UN=&mP<R"j
%^.G"rs1@Er:,na#p&)YLh_ck6[;s-T,QYE66I)Nf9;dY$)a7ogQe$l;WsPJB_A=u55C6RH&$U'03lN528ac^rm#3$d4OZ;PFSqrJ
%O*AFWq#o;?Dg"d)KCt1#ULMJG;FK"hEXr_ClNb,cYE+'1':8S(!7p!>qcl-]L!<mf]<;$"ht?_:#QT"^>TS':?HFm5h<?sjF\e1s
%Pcm83N"iZV\qFm)em"uBO-DmHMVYtiO6Kh%K9`a%`O\/W%*J`]JCL\tRh`4OfRV1M8Ni)DOjl[".u(L+)dQXV4E$cjgJ5_L-R3`)
%5K:DG6?/SIG2ikUEI=g>Ln!A29-G)+WRg?^W+S4OgK+)GTfK>O]Y,MTH1e[8]@=2)3,CT(mJuHDK/?UgLV8"SJ2/WogkA.+@?9,`
%ENu0_WL1K&KVgd<7h!Wa`;g.&BIja_LLkC7h95]'<e@4-,RHn+,7dU+^S>P@FN[.q>]jE?l=r-racNdVBNc]EX/t1`(EHSuD_M&i
%9$"9C/;$X_@CpmOFAHZf$08*E3NY>oIQtS6ALs1ufrCI"ZVKnYX(7M,5(g7:Cm*6KYoG&io3;IJRB-\<7oor,(=3H)*8+la9OITt
%Ka2BFr'TJP=FCldK4#omKE]t]S3#uM"i6(+rGNW=;n-$+YS_s"/K'h!nis,oTtlLWLl1D-&=[lIL/6G35-MiIFb*1_LS015U:%#e
%^r*1*dC+rJg\NX,rjpgRP]+KRK$B6i#qiGSpV47lIaX1g`Jo[4Ka1jO(<?=Ag_?8aTjcd;OYgs:@.eilS@9O=YS@!Om4T;[mnc3g
%H:J9!%@_J.;^0=LmeSu*qnnTf,4@JPhF3><(-WO7QRp^XEod%X:4-d[lp(LKGPB:qpm5@eo7-UrR+c>:$N:NLS=n`e&eSUD!,<fr
%Rj!_/.)FA,)j%Mk?RVg1BL?Oe!h]I97D"9_YQ=N<F)\rIp80smRLEL3XjLsF-jKpNBA7THS7D)>2JJ#&q.I9;2O7&<0o^<K)_C>:
%kdqYO`Ud.tE+Q;CXVe`p+eho02F<caQGpC\HWCR3"Z;(Y#9oZ!560m1Opga,lTV]E4Z5r@`Ia'<0"1t6EJpCgPa7i`&sTcbnpii4
%;XeVq(T54;+eKjSB[&Po%Y[7iR+e4NFu>L,3@c(#Y.7dUD@)%n8oF0fTrs3tL4\*r_O>IB\uk%(C[lT9`Zk/#&#cZ^(eL%3bQ-o1
%&=99b-&Mpp-/G5`E`fWI"$dQ"^l\fWPXf_L7S(6%A0W@IN9F-@EoGc&I6U#,U1E`t2MaD4hJ;+S^P1NASK:]D2C6/F1i7s1D(l[h
%g0'"4\*XZ#k]")/G,jmW<O/o1ZFC*a>;;3bpL>4K8>R22h5S*rA:Uau.F<,]N,AMM'^to\m0b(o\63F5%1;FUqIuM.TLhtF7I(.a
%KTA:Z=rD2X^-g7#7g0ci&uLEO1Db"42tbD[7p\Pi]!NSW1RRU;!trFE.(k4dL']S@]VTD\P93`A\5S<)-tg"oN4,`C.2Fps]FsJ`
%To-XkWTq)`-38eJ"O(fL^0scb#Zi,R8ORQu3Q[@R[bO1$dX2>CMGF*6Nu`P(9*cpNh1Y"\:0&<5V._.cj<mk4pj\g>lD?6m/fC+s
%FG!$(=8"\^ELu0QL;Yn4MgHNp1KlKGU@?mkepZ&Z9/10`KQBah7J+e%GX58O*(7GZl$S?ncVFuV.*s2Xi!a0TaN2!HFF`\u?F5P*
%c"U-ZmE'>pbKMSI1ghGl&7K[p4P,(El94cp'Z:>D';,s$8LZbaR!prli#3aV\HTZAGi+NemQ[rC8_S`E=@rK5?1-<2e##35XYc>p
%6r,>c,]T7T-tYCgo,8QqUNBY5PRBaqF%;HC0/qFGaoWGP==r#_[`Kbt!AZL&Tg[*p&/Nd5/8B>`E)j+AIZ6p=IlF=Yg&hJ!9>1a(
%@_a<.Tma(X1)H*Gq"(q*B8p[k8@e[MRg6"2Tl+OdW066p3,jZu`4rUMD..)2:;[GTZ8YZ,X]-S/?Ia3@mks/B<K6=X/BZVI@=`;h
%Gb.C7.M^!iWslrD%(:To#8&HIb(mYMr1q867c0./'hjq&Odo;$Eerg=l^5(S+i2JiPX4U1a&2B+6]_6#@Xo$1d'#iMM1_ekh!t_8
%g-A?+O(n2;ZX3.OSKVE^&bh>m_FmAm/9MJ=GY;h:ZR7rEm^]+?d@HI0$;*skPWa:,^sGerZb[aF8dKdtY1/rHO6TPlgsB!Tm!ai[
%48<6n>nS?s=?IjCZNsBZg+CQ:f4#]9A#H=Jk1B(k,`@g3>F%PhM1c&QCo:V(:m:QG:0D67SJ'?P0lgKYj'5Y5$c32&SP[kA9/$Rj
%?5M)mH86doKF=VDW&6#tGhQt`-C';#-?)+;5/S3i38,B%Lh+-X.E6L2KdGh83M.7B!a(/i!P9X'0))WE]`RqU=F$d7/%\FAhkVug
%X.,cH>4V_c:K(1uhm$.46[4UFT@=2u9fta'.&C<:m9MD@9O@;KDJnnV6i"t:ldP@/L+bZ#T^)/t"TtS>en"pYc!KtM+Rds.@B;DG
%@DV*9l$MVs!gGVq,)X?V?B9USp3@^cnCcUoC3NPEk<3%Qh8PXt34r=$Do*Sg\chn11kYeI#Q(L>j%i(?r4'$/n_aBAY@%>0?iAaX
%?iK<9s7MGfr81l]ndkci$N/l?s73'ps2/2mq="@Df>%7_GCTJT0E:q$0>IG\chP\urm03rqXUQ!r;,%Fp!8-`oug_BgHY][6u^Lo
%^`WRF:]Kk?r;Lp?%j=a3nc~>
%AI9_PrivateDataEnd
