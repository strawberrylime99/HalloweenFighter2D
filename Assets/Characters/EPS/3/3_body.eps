%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 3_body.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Igor Lyubchak
%%CreationDate: 11/11/2019
%%BoundingBox: 0 0 66 88
%%HiResBoundingBox: 0 0 65.9768 87.5666
%%CropBox: 0 0 65.9768 87.5666
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 7 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fantasy_Strategy_human</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-11-11T09:59:08+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-11-11T09:59:08+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-11-11T09:59:08+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>228</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA5AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqtmmihieaZ1jijBaSRyFVVG5JJ2AGKvF/Pf8AzlJ5M0OSSz8vxN5hvlqpmjb0rNW3H98Qxkp1&#xA;+BeJH7WLKu94l5o/5yD/ADV1zmP0n+h7Vthb6Yvomv8AxlJaav8As8mMZ6sTMDkwG+udTv39fVb2&#xA;e6lO/KeVpW38S5bJ+EGPilBQyzQzh7SR45F+y6MVYU9xTKzEcg2CR5l6L5S/Pr80fLDxg6k2q2Ck&#xA;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&#xA;R0Go8Xi/ecXF5pxkmh//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0282b2dd-5089-ae46-b7d0-55582a341b27</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0282b2dd-5089-ae46-b7d0-55582a341b27</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ef4a9a63-de12-4a4f-80ef-dcdc86022225</stRef:instanceID>
            <stRef:documentID>xmp.did:fe9933f2-8590-8a4a-b939-c781a5e39d08</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fe9933f2-8590-8a4a-b939-c781a5e39d08</stEvt:instanceID>
                  <stEvt:when>2018-08-10T14:28:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0282b2dd-5089-ae46-b7d0-55582a341b27</stEvt:instanceID>
                  <stEvt:when>2019-11-11T09:59:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>151.710871</stDim:w>
            <stDim:h>44.434222</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -87.5666 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 87.5666 li
65.9767 87.5666 li
65.9767 0 li
cp
clp
63.4341 62.6276 mo
62.8071 57.4606 62.1021 52.3131 61.7754 47.1144 cv
61.5855 44.0831 62.2183 40.236 60.7446 37.4283 cv
58.376 32.9152 53.4258 31.5372 53.3985 25.6036 cv
53.3814 21.8131 55.7129 13.4786 59.5752 11.8409 cv
62.981 10.3966 61.3955 4.80482 57.9058 6.2472 cv
57.7569 6.30872 57.6167 6.38489 57.4717 6.45277 cv
54.3154 2.49769 47.5562 1.17054 42.7183 1.62366 cv
37.7779 2.08656 32.8091 2.7804 28.1724 4.50013 cv
27.666 4.04652 26.96 3.79359 26.3076 3.76478 cv
18.8721 3.43323 13.6895 13.9723 11.3584 19.6671 cv
8.39113 26.9171 6.3257 35.5158 9.29885 43.1686 cv
6.93898 51.0553 3.99562 59.5045 3.32912 67.713 cv
2.75148 74.8375 3.87014 79.6622 10.9297 82.5392 cv
16.4229 84.778 23.4693 83.9357 26.9292 78.6066 cv
27.4702 77.7731 28.0801 74.8331 28.7119 74.3751 cv
31.0293 72.6959 31.3779 75.9503 32.0122 77.2335 cv
33.3433 79.9259 35.2671 81.7184 38.083 82.8312 cv
44.419 85.3336 52.3184 84.2823 57.6294 79.9967 cv
63.23 75.4772 64.2534 69.3868 63.4341 62.6276 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.278431 .278431 .278431 rgb
f
27.7827 56.8668 mo
27.7862 56.6676 27.7886 56.4659 27.793 56.2677 cv
27.9404 49.0324 29.8281 40.8551 28.1475 33.7877 cv
27.8985 32.7399 26.4112 32.6715 25.9146 33.5436 cv
22.6275 39.319 22.981 47.0294 22.8535 53.4933 cv
22.8028 56.0822 22.711 58.6788 22.6162 61.2775 cv
21.1524 65.816 19.3799 70.1666 16.8467 74.5177 cv
16.6778 74.8082 17.1162 75.0421 17.2969 74.7687 cv
19.2754 71.7823 21.0708 68.4772 22.4854 65.0192 cv
22.3946 67.5929 22.3115 70.1666 22.2744 72.734 cv
21.5737 73.8849 20.9356 75.0734 20.2788 76.3107 cv
19.3853 77.9943 18.0044 78.9034 16.4732 78.9264 cv
15.1353 77.524 13.0493 76.8776 11.0938 76.7794 cv
10.5938 76.754 10.1455 76.8956 9.76027 77.1378 cv
8.95949 76.5367 8.20754 75.86 7.50051 75.1573 cv
6.18654 73.8522 4.37063 75.0319 4.21193 76.6007 cv
3.78664 80.8199 12.2969 86.8038 16.1968 84.4718 cv
18.044 84.629 19.9029 84.2877 21.5376 83.2203 cv
23.2529 82.1007 24.334 80.0411 25.0303 77.7609 cv
25.2564 77.8014 25.4981 77.8253 25.7637 77.8195 cv
26.3745 77.8063 26.8613 77.5494 27.2266 77.1544 cv
27.4263 77.004 27.5894 76.8068 27.7232 76.5812 cv
27.7891 76.6178 li
27.8321 76.546 27.8745 76.4747 27.9175 76.403 cv
28.1968 75.9366 28.2354 75.3302 28.0689 74.7975 cv
28.4155 69.1686 28.4199 63.631 28.2627 57.9596 cv
28.2495 57.4777 28.0591 57.1163 27.7827 56.8668 cv
cp
.227451 .227451 .227451 rgb
f
32.3736 6.2345 mo
31.9917 4.32435 28.8706 5.20716 29.3164 6.90638 cv
29.1865 11.5826 29.3989 16.2579 29.2183 20.9367 cv
29.0376 25.5885 28.0249 30.4596 28.6919 35.0763 cv
28.8545 36.2008 30.4995 36.9679 31.1074 35.6764 cv
34.9746 27.4567 34.1079 14.9005 32.3736 6.2345 cv
cp
f
36.5576 8.77454 mo
36.3799 14.2296 36.0547 19.7052 36.3701 25.1569 cv
36.4175 25.9777 37.5283 25.9059 37.6118 25.131 cv
38.1968 19.694 38.1489 14.2033 38.2446 8.73939 cv
38.2637 7.65003 36.5928 7.69349 36.5576 8.77454 cv
cp
f
55.2417 49.4581 mo
54.9146 51.8888 54.4854 54.3033 54.0264 56.712 cv
54.3101 51.9547 54.0161 47.3375 53.0977 42.5421 cv
53.771 43.2794 54.5186 43.8615 55.3618 44.2028 cv
55.5606 44.2833 55.7432 44.3331 55.9297 44.3912 cv
55.8028 46.2365 55.4238 48.1041 55.2417 49.4581 cv
cp
48.9844 74.9904 mo
50.3535 73.3043 51.2871 71.3961 51.9571 69.3771 cv
51.9033 70.5714 51.9214 71.7721 52.043 72.9845 cv
51.1919 73.8971 50.1651 74.5612 48.9844 74.9904 cv
cp
45.9658 75.5353 mo
47.1382 75.1256 48.167 74.4313 49.022 73.5284 cv
48.7549 74.1119 48.4712 74.6857 48.1636 75.2438 cv
47.479 75.4166 46.7451 75.5123 45.9658 75.5353 cv
cp
61.0044 49.6583 mo
61.7334 45.2916 62.5586 40.214 59.9243 36.6451 cv
59.0586 35.4723 57.5225 35.2384 56.3355 35.6857 cv
56.2622 32.7394 55.9556 29.8292 55.5772 26.8859 cv
55.3374 25.0216 53.627 24.2052 52.1821 24.3893 cv
52.3487 23.527 52.4776 22.6466 52.6929 21.7155 cv
54.6768 18.2365 56.0122 14.7072 59.105 11.8673 cv
60.1074 10.9469 59.9219 9.27698 59.0313 8.37464 cv
55.7539 5.05189 50.6377 3.95374 46.1279 5.00306 cv
46.0601 4.87366 45.9995 4.74769 45.9131 4.61146 cv
45.4478 3.88245 44.4551 3.42982 43.6026 3.72767 cv
42.791 4.01087 42.1397 4.48402 41.4546 4.92933 cv
40.7334 4.99134 39.9932 5.34241 39.1348 6.22718 cv
37.5225 7.88929 39.7002 10.066 41.4771 9.11732 cv
41.4834 9.13001 41.4893 9.1432 41.4946 9.15589 cv
42.02 8.89759 44.0459 10.712 44.6626 10.9205 cv
46.1084 11.4098 47.2984 10.7423 48.6499 11.066 cv
49.7446 11.3287 50.5606 12.2867 51.6934 12.6447 cv
51.5908 12.9049 51.478 13.1578 51.3516 13.4005 cv
51.1465 13.7252 50.9536 14.0553 50.772 14.3903 cv
49.9141 15.7018 48.8799 16.8771 48.3096 18.3727 cv
48.0703 19.0006 47.9375 19.608 47.8482 20.2052 cv
47.1499 20.3795 46.5156 20.8302 46.1987 21.5509 cv
46.1524 21.6207 46.1216 21.7023 46.1001 21.7931 cv
46.0855 21.7897 46.0718 21.7863 46.0571 21.7824 cv
46.0405 21.9244 46.0352 22.0538 46.021 22.1925 cv
46.0108 22.2633 45.9917 22.3283 45.9868 22.403 cv
45.6455 27.7721 44.8906 33.2408 45.0386 38.6183 cv
45.0523 38.6163 li
45.1011 40.2711 47.6621 40.7916 48.1353 38.9713 cv
48.5098 37.5328 48.8028 36.0665 49.0571 34.589 cv
49.8985 37.0201 50.9273 39.6408 52.3218 41.5841 cv
51.7857 41.5206 51.1665 41.8556 51.2481 42.485 cv
52.4029 51.3527 53.1109 62.3385 49.9522 71.2135 cv
49.4951 70.5573 48.2935 70.3268 47.6538 71.193 cv
47.1001 71.943 46.3179 72.5299 45.4527 72.8683 cv
45.1187 72.9987 44.5908 73.2272 44.2266 73.1783 cv
43.7769 73.1183 43.7061 72.9415 43.4644 72.4943 cv
43.2334 72.0665 42.5054 71.9572 42.1914 72.3571 cv
41.3696 73.403 41.4444 74.3966 42.0205 75.067 cv
41.2193 74.8195 40.8047 74.4552 39.8413 73.65 cv
38.8423 72.8156 38.1309 71.879 37.0239 71.1144 cv
35.0161 69.7281 32.7285 71.7487 32.6172 73.7682 cv
32.3789 78.0895 36.606 81.9664 40.3404 83.5035 cv
45.2876 85.5397 51.6821 83.5465 55.835 80.483 cv
61.9141 75.9977 62.4888 69.5206 61.9497 62.799 cv
62.3257 58.4396 61.5869 53.6647 61.0044 49.6583 cv
cp
f
16.1426 74.0739 mo
15.313 74.0909 15.3389 75.38 16.1695 75.3624 cv
16.999 75.3448 16.9737 74.0563 16.1426 74.0739 cv
cp
f
62.4278 54.8536 mo
61.98 52.0724 61.6665 49.2286 61.6904 46.4054 cv
61.7051 44.5577 62.48 42.3966 61.9893 40.6261 cv
61.586 39.171 60.7354 38.1554 59.6387 37.4108 cv
59.482 37.1486 59.2202 36.9396 58.8355 36.8512 cv
57.7622 36.6051 56.4922 31.8698 55.9893 30.7535 cv
55.3076 29.2384 53.7544 27.026 53.5703 25.2052 cv
53.7637 22.8488 54.3443 20.7238 55.103 18.5148 cv
55.1543 18.4616 55.2056 18.4083 55.2515 18.3434 cv
57.3379 15.3888 58.5708 11.9816 60.6865 9.047 cv
61.3779 8.08851 60.5625 6.78187 59.5879 6.50159 cv
54.3267 4.98597 46.9883 2.33558 41.5562 3.83167 cv
40.8965 4.01331 40.7114 5.07728 41.3867 5.37757 cv
44.0664 6.56947 46.9219 6.7057 49.7739 7.30677 cv
52.1372 7.80433 54.3911 8.62855 56.6934 9.32337 cv
55.6099 11.4523 54.3819 13.4909 53.4487 15.6964 cv
52.1392 17.7101 51.4087 19.9474 51.0894 22.2745 cv
50.605 22.4567 50.1714 22.8517 49.9282 23.5104 cv
48.8311 26.4825 51.6148 30.6681 52.8853 33.2658 cv
53.4756 34.4718 54.0669 36.069 54.9209 37.3434 cv
54.9282 37.5387 54.9654 37.7355 55.0659 37.92 cv
56.4834 40.5265 56.1362 38.736 57.7525 41.1486 cv
58.7237 42.5988 58.2549 44.5963 58.1104 46.2189 cv
57.8311 49.361 57.6787 52.3859 58.0591 55.5382 cv
58.1553 56.3366 58.2515 57.1193 58.3443 57.8927 cv
56.8506 57.6393 55.1192 58.8102 55.875 60.5055 cv
56.6387 62.8346 57.2183 65.1803 57.3692 67.6368 cv
57.4151 68.3829 57.478 69.2931 57.4683 70.2233 cv
57.1079 70.7535 56.9854 71.4567 57.2852 72.1115 cv
57.2505 72.298 57.2334 72.4933 57.1851 72.6715 cv
56.7988 73.2858 56.4756 73.9708 56.1201 74.5743 cv
55.9683 74.7296 55.8545 74.8981 55.7852 75.0763 cv
55.563 75.4 55.336 75.7218 55.0772 76.0192 cv
53.6084 76.5118 52.3628 77.8737 51.0552 78.6158 cv
49.4278 79.5397 47.5254 80.5778 45.6035 80.8131 cv
45.3706 80.8292 45.1397 80.8429 44.9126 80.8561 cv
44.3643 80.8634 43.8164 80.8156 43.2754 80.6495 cv
42.7002 80.4728 42.228 80.5636 41.876 80.8058 cv
41.5982 80.7706 41.3184 80.7281 41.0342 80.6686 cv
40.2315 80.4459 39.4619 80.153 38.7217 79.5519 cv
37.5879 78.632 36.5952 77.5182 35.3013 76.8185 cv
34.4009 76.3322 33.5708 77.3361 33.999 78.1769 cv
34.9072 79.9635 36.3487 81.5802 38.0845 82.6627 cv
38.2617 82.965 38.5352 83.2233 38.9302 83.3741 cv
40.583 84.0065 42.3423 84.4332 44.1177 84.5441 cv
46.8648 84.983 49.7105 84.1222 52.2305 82.9742 cv
53.9702 82.1823 56.6768 80.8058 57.4678 78.8356 cv
58.3101 79.131 59.3345 78.9464 59.834 78.0133 cv
63.9727 70.2804 63.7866 63.3004 62.4278 54.8536 cv
cp
.203922 .203922 .203922 rgb
f
29.9336 39.3268 mo
30.022 37.5411 27.0952 37.5582 27.1177 39.3458 cv
26.5918 43.3663 26.4112 47.4547 26.336 51.5367 cv
26.001 54.1862 25.6279 56.8253 25.3452 59.4274 cv
24.7285 65.0953 25.1343 70.381 23.27 75.8434 cv
22.0171 77.7789 21.3413 80.109 19.0342 80.921 cv
15.6851 82.0992 10.9844 81.6183 8.28664 79.3527 cv
6.88723 78.1783 4.98195 80.1124 6.30764 81.4166 cv
9.92141 84.9728 14.5991 85.2389 19.3936 84.3864 cv
22.7993 83.7814 24.6299 81.2238 25.0196 78.0553 cv
28.4165 76.4186 27.8198 71.4279 28.2222 68.172 cv
28.9634 62.1715 29.6441 55.9596 29.1065 49.9225 cv
29.4248 46.3922 29.7583 42.8644 29.9336 39.3268 cv
cp
f
33.2959 6.93812 mo
32.9297 5.91712 31.6089 6.00404 31.2622 6.9806 cv
29.9483 10.6842 30.5122 15.1163 30.3374 19.0377 cv
30.1348 23.5919 30.0503 28.1408 29.5879 32.6783 cv
29.4805 33.7379 31.271 33.9401 31.4575 32.8917 cv
32.2217 28.5909 33.0967 24.3029 33.4922 19.9484 cv
33.8716 15.7736 34.7305 10.9337 33.2959 6.93812 cv
cp
f
25.2666 5.79407 mo
24.6695 6.47669 24.0386 7.10853 23.3872 7.71497 cv
22.8428 7.19691 21.8657 7.12952 21.2827 7.70423 cv
19.2354 9.72376 17.9097 12.1373 17.4409 14.9796 cv
17.3115 15.7638 18.3223 16.2228 18.7583 15.5031 cv
19.2691 14.6608 19.8316 13.8541 20.4219 13.07 cv
20.7617 13.1803 21.1587 13.1383 21.5679 12.8517 cv
23.6968 11.3605 25.5088 9.60999 27.1279 7.57874 cv
28.1455 6.30091 26.3745 4.52845 25.2666 5.79407 cv
cp
.423529 .423529 .423529 rgb
f
15.5034 41.6642 mo
15.2803 40.0177 14.7344 38.2413 14.8164 36.6744 cv
14.8408 36.2037 14.4155 36.0006 14.0274 36.0446 cv
13.9204 32.9371 14.1817 29.8761 14.9512 26.8234 cv
14.9546 26.8092 14.9492 26.7965 14.9527 26.7824 cv
16.3291 23.6085 18.3819 20.8014 18.7363 17.13 cv
18.8071 16.4 17.8985 16.0885 17.3623 16.3795 cv
15.0093 17.6588 14.1529 21.7384 13.2998 24.1183 cv
12.7295 25.7111 11.3081 28.8507 11.8633 30.88 cv
11.3657 33.1837 11.2071 35.5114 11.439 38.0446 cv
11.5264 38.9938 12.6367 39.6251 13.4121 39.2462 cv
13.461 39.8639 13.5235 40.4933 13.5386 41.194 cv
13.5415 41.3351 13.5283 41.4757 13.5239 41.6168 cv
13.1904 41.7882 12.895 42.0597 12.6895 42.4572 cv
10.5513 46.5861 10.2666 51.2682 8.49074 55.5265 cv
8.49514 55.527 li
8.22658 55.9943 8.15236 56.4674 8.20412 56.9142 cv
7.41408 59.1173 6.71438 61.3639 5.86184 63.5045 cv
5.21828 65.1212 6.0342 66.7491 7.29592 67.3219 cv
7.12355 67.4811 6.96486 67.6627 6.82619 67.8712 cv
6.36623 68.5626 6.29885 69.464 6.53811 70.2555 cv
6.50148 70.424 6.4551 70.5895 6.4048 70.754 cv
6.41213 70.755 6.41945 70.756 6.42678 70.7565 cv
6.20168 71.7238 6.57424 72.8356 7.50441 73.3024 cv
8.43605 73.7701 9.87355 73.6075 10.4693 72.6427 cv
10.7608 72.5519 11.0318 72.3888 11.25 72.1344 cv
11.8277 71.462 12.1187 70.6661 11.9805 69.7789 cv
11.9732 69.733 11.9595 69.6876 11.9497 69.6417 cv
12.9282 69.1876 13.0733 67.7941 12.395 67.0548 cv
12.8174 65.7921 13.0156 64.6505 13.1763 63.2482 cv
13.2735 62.3961 12.9531 61.5338 12.398 60.9542 cv
12.8257 59.5978 13.1973 58.2262 13.4697 56.8395 cv
14.6133 54.4606 15.1148 51.8947 15.5581 49.3019 cv
16.4165 47.4313 16.7017 45.5885 16.6494 43.441 cv
16.6289 42.6163 16.1406 41.9952 15.5034 41.6642 cv
cp
f
41.0171 13.2721 mo
41.0342 13.171 41.0523 13.067 41.0689 12.9664 cv
41.0777 12.9152 41.0767 12.8659 41.0801 12.8156 cv
41.0884 12.7365 41.1055 12.6578 41.1123 12.5783 cv
41.0786 12.5792 li
40.9629 11.2545 39.1358 10.4933 38.3833 11.9005 cv
37.5401 13.4782 37.0889 15.2579 36.6265 16.9777 cv
36.2256 18.4703 35.6758 19.9088 36.438 21.3541 cv
37.1079 22.6251 39.4834 22.3815 39.6773 20.8615 cv
39.69 20.7633 39.7114 20.6657 39.7256 20.5675 cv
39.8384 20.4288 39.9278 20.2648 39.9893 20.0797 cv
40.0264 20.0949 li
40.1631 19.1549 40.2779 18.2052 40.3677 17.2535 cv
40.4126 16.9474 40.4541 16.6417 40.5029 16.3351 cv
40.7085 15.3175 40.8877 14.297 41.0171 13.2721 cv
cp
f
38.5054 31.0114 mo
38.1773 28.6744 34.9473 29.0358 35.0332 31.0856 cv
35.0318 31.0856 35.0308 31.0851 35.0293 31.0846 cv
34.7222 34.1173 34.4492 37.0519 33.6231 40.0006 cv
33.46 40.8488 33.77 41.5167 34.2744 41.9445 cv
34.2993 42.1202 34.3223 42.296 34.3648 42.465 cv
34.562 43.2653 35.4004 43.8014 36.1929 43.7975 cv
37.1397 43.7926 38.4331 43.3654 38.6231 42.2755 cv
38.7398 41.6066 38.4199 41.1769 37.9737 40.8439 cv
38.0132 39.5392 38.3701 38.1115 38.5532 36.9191 cv
38.603 36.5929 38.5879 36.298 38.5269 36.0333 cv
38.7158 34.3585 38.7383 32.6705 38.5054 31.0114 cv
cp
f
38.0088 52.5763 mo
37.9727 52.0055 37.8823 51.4298 37.7315 50.8458 cv
37.3906 49.5309 35.3814 48.9083 34.4863 50.0616 cv
33.6226 51.1735 33.086 52.4337 33.2017 53.8746 cv
33.23 54.2291 33.335 54.5377 33.4702 54.8224 cv
33.4707 55.1627 33.5156 55.5055 33.6402 55.8351 cv
34.208 57.3331 36.46 57.8595 37.2783 56.2325 cv
37.3726 56.0446 37.4527 55.8561 37.5288 55.6666 cv
37.9717 55.3663 38.3941 54.9596 38.5601 54.3546 cv
38.7437 53.6862 38.5039 53.0299 38.0088 52.5763 cv
cp
f
38.8438 67.1119 mo
38.7534 66.6754 38.419 66.2736 37.9873 66.1193 cv
37.9453 66.0699 37.9077 66.0172 37.8638 65.9698 cv
37.6978 65.8243 37.4971 65.6857 37.3032 65.5778 cv
36.7569 65.275 36.104 65.1964 35.4995 65.3492 cv
34.3862 65.6305 33.5083 66.6564 33.5279 67.8322 cv
33.5488 69.0636 34.3169 70.174 35.5239 70.5114 cv
36.5567 70.7999 37.6328 70.3712 38.2168 69.5646 cv
38.4136 69.3732 38.5625 69.1368 38.6817 68.8727 cv
38.7339 68.7872 38.7876 68.7037 38.8262 68.6071 cv
38.8701 68.4957 39.0899 67.5118 38.9351 68.1373 cv
39.0279 67.7623 38.9771 67.4152 38.8438 67.1119 cv
cp
f
42.5698 52.4938 mo
42.3589 52.4982 42.3653 52.8263 42.5767 52.8219 cv
42.7876 52.8175 42.7813 52.4894 42.5698 52.4938 cv
cp
f
40.9707 32.8468 mo
40.8906 32.5216 40.3853 32.5377 40.3154 32.8605 cv
39.0235 38.8112 40.3989 45.1964 42.0825 50.9215 cv
42.2407 51.4611 43.1626 51.3561 43.0923 50.7633 cv
42.3887 44.8512 42.3941 38.6315 40.9707 32.8468 cv
cp
f
41.4219 27.6266 mo
41.3574 27.6281 41.3594 27.7282 41.4238 27.7267 cv
41.4883 27.7252 41.4863 27.6251 41.4219 27.6266 cv
cp
f
43.9224 13.1681 mo
43.7725 11.8942 42.1743 11.7262 41.7305 12.9181 cv
41.6035 13.2594 41.4404 13.5792 41.3247 13.9254 cv
41.1641 14.4083 41.3491 14.7506 41.6582 14.9406 cv
41.6533 15.0162 41.6485 15.0919 41.6353 15.1701 cv
41.5147 15.8947 41.2969 16.6139 41.0947 17.3185 cv
40.999 17.6534 41.1074 17.9161 41.2969 18.1022 cv
41.2764 18.2672 41.2564 18.4327 41.2363 18.5978 cv
41.1861 19.0118 41.355 19.4264 41.7964 19.5377 cv
42.1612 19.6295 42.6856 19.3951 42.7359 18.9777 cv
42.772 18.6852 42.8071 18.3927 42.8428 18.1002 cv
42.8594 17.9635 42.8423 17.8312 42.8096 17.7057 cv
43.0039 16.9537 43.1773 16.1974 43.3154 15.4327 cv
43.4668 14.5919 44.0308 14.0885 43.9224 13.1681 cv
cp
f
40.586 55.0382 mo
40.2324 56.1095 39.4829 57.4782 39.8408 58.6241 cv
39.9937 59.1149 40.3609 59.632 40.8111 60.0338 cv
40.5889 60.1051 40.4048 60.2897 40.4077 60.5792 cv
40.4199 61.7433 40.1519 62.8805 39.9893 64.0294 cv
39.8887 64.7399 40.4932 65.6608 41.3252 65.3302 cv
41.3731 65.485 41.4922 65.6066 41.6729 65.6012 cv
41.813 65.5973 li
41.9854 65.5929 42.1797 65.4943 42.2554 65.3307 cv
42.5498 64.6964 42.4678 64.0558 42.1226 63.6451 cv
42.1216 63.2208 42.0923 62.8043 42.0288 62.3942 cv
42.7959 62.3761 42.7725 61.1827 42.0025 61.1993 cv
41.9209 61.2008 41.8521 61.2218 41.7881 61.2477 cv
41.73 61.0197 41.667 60.7907 41.5987 60.5587 cv
41.732 60.6178 41.8662 60.6676 41.9995 60.6959 cv
42.1382 60.7257 42.3159 60.67 42.3799 60.5319 cv
42.6973 59.8497 42.6089 59.0045 42.3897 58.3043 cv
42.1138 57.4225 42.4946 56.4635 42.6763 55.568 cv
42.9551 54.1979 41.0186 53.7262 40.586 55.0382 cv
cp
f
41.6035 66.006 mo
41.5391 66.0074 41.5415 66.1075 41.606 66.1061 cv
41.6699 66.1051 41.668 66.005 41.6035 66.006 cv
cp
f
41.438 66.506 mo
40.7891 66.2257 40.0879 67.007 40.6641 67.5529 cv
40.7925 67.6744 40.7617 67.6954 40.7837 67.8951 cv
40.815 68.1744 40.9077 68.3868 41.1304 68.5646 cv
41.5645 68.9122 41.9546 68.7858 42.1787 68.506 cv
42.1861 68.5182 42.1934 68.5304 42.2012 68.5421 cv
42.9439 67.8253 42.1797 66.8263 41.438 66.506 cv
cp
f
24.356 12.7828 mo
21.4014 15.9523 18.2852 20.9625 16.8755 25.0543 cv
14.9956 30.5153 16.1196 35.3937 15.8447 40.9528 cv
15.8189 41.4708 16.5488 41.484 16.6987 41.0499 cv
17.3364 39.1989 17.6016 37.6393 17.4214 35.7013 cv
17.0781 32.0153 16.7569 29.212 18.3154 25.6261 cv
20.2393 21.1993 22.5049 17.3507 24.9351 13.2111 cv
25.1441 12.8551 24.6377 12.4806 24.356 12.7828 cv
cp
f
24.167 8.31458 mo
23.5523 7.96351 22.8013 7.82728 22.1548 8.18128 cv
21.8267 8.36146 21.5757 8.61292 21.3765 8.92786 cv
21.1973 9.21204 21.1343 9.43421 21.0625 9.68519 cv
20.9229 10.1715 20.9556 10.9347 21.5078 11.2418 cv
21.9473 11.4865 22.3101 11.2614 22.6377 10.9782 cv
22.6861 10.9474 22.7383 10.9152 22.7847 10.8815 cv
22.833 10.8619 22.8784 10.8434 22.9136 10.8287 cv
22.9097 10.8307 22.9097 10.8307 22.9058 10.8322 cv
23.062 10.7936 23.211 10.7335 23.3516 10.6525 cv
23.2144 10.7008 23.2422 10.6852 23.4331 10.6061 cv
23.6538 10.484 23.8076 10.3488 24.0142 10.1954 cv
24.0181 10.1915 24.0161 10.193 24.0191 10.1901 cv
24.0781 10.1534 24.1397 10.1207 24.2046 10.0953 cv
24.9424 9.7638 24.772 8.66028 24.167 8.31458 cv
cp
.478431 .478431 .478431 rgb
f
20.3408 12.089 mo
19.6621 12.1032 19.6836 13.1578 20.3628 13.1432 cv
21.0415 13.129 21.0205 12.0748 20.3408 12.089 cv
cp
f
16.1675 17.3937 mo
14.8858 19.2111 13.8975 20.9684 13.2173 23.0919 cv
12.6431 24.8839 11.9126 26.9176 12.4654 28.7814 cv
12.586 29.1886 13.1104 29.2037 13.3242 28.8756 cv
14.2783 27.4108 14.4116 25.5519 14.96 23.9083 cv
15.6196 21.9323 16.398 19.8986 17.2735 18.0089 cv
17.6206 17.2594 16.6333 16.733 16.1675 17.3937 cv
cp
f
14.1592 30.6232 mo
14.1597 29.6686 12.7124 29.7091 12.6826 30.6544 cv
12.5362 35.3185 11.4326 40.5739 12.3701 45.1564 cv
12.4575 45.5836 13.0171 45.4669 13.1382 45.1403 cv
14.7627 40.7531 14.1553 35.2311 14.1592 30.6232 cv
cp
f
13.0391 47.7736 mo
13.0772 46.9166 11.8047 46.9791 11.7271 47.8009 cv
11.0493 54.9694 2.62502 63.6066 8.34377 70.59 cv
8.62648 70.9347 9.20412 70.6989 9.29836 70.3165 cv
9.59523 69.1163 9.334 68.9005 9.25441 67.712 cv
8.9883 63.7491 9.76955 61.566 11.2788 57.9674 cv
12.7017 54.5758 12.8789 51.3927 13.0391 47.7736 cv
cp
f
39.8223 12.0309 mo
38.0567 13.0514 37.8135 14.9913 37.5386 16.8742 cv
37.2188 19.0641 36.4878 21.9205 37.7852 23.8737 cv
38.1162 24.3722 38.7373 24.2946 39.0596 23.8468 cv
40.0884 22.42 39.9209 20.5402 40.0376 18.8444 cv
40.1411 17.3258 39.8638 14.5377 40.8286 13.2799 cv
41.3653 12.5817 40.667 11.5431 39.8223 12.0309 cv
cp
f
37.5445 37.8507 mo
37.4795 35.9264 37.3438 33.924 36.8228 32.0651 cv
36.3252 30.2892 33.7754 31.2726 34.0904 32.692 cv
33.919 34.5402 34.0552 36.462 34.1836 38.3097 cv
34.292 39.8693 34.3438 41.6779 35.3316 42.9484 cv
35.7119 43.4371 36.3062 43.4161 36.667 42.92 cv
37.6817 41.527 37.6011 39.5123 37.5445 37.8507 cv
cp
f
41.9629 43.1515 mo
41.7427 42.0455 39.8789 42.3307 39.9893 43.4611 cv
40.1421 45.028 39.9121 47.671 41.2774 48.7589 cv
41.6177 49.0299 42.0225 48.9659 42.2686 48.61 cv
43.2588 47.1749 42.27 44.6954 41.9629 43.1515 cv
cp
f
37.6201 52.5504 mo
37.8008 51.2457 35.9776 50.7194 35.5977 52.0382 cv
35.148 53.5997 34.5166 55.9064 35.5171 57.36 cv
35.8999 57.9161 36.9644 58.0817 37.2686 57.3234 cv
37.8648 55.84 37.4029 54.1212 37.6201 52.5504 cv
cp
f
38.815 66.9723 mo
38.6177 66.6495 38.3706 66.4098 38.0772 66.1837 cv
37.9771 66.1061 37.8726 66.0348 37.7686 65.9625 cv
37.2866 65.0475 35.9053 64.8053 35.1807 65.6085 cv
33.7183 67.2286 35.4131 69.67 37.3853 69.5895 cv
38.6797 69.5367 39.5059 68.1017 38.815 66.9723 cv
cp
f
62.1465 51.2472 mo
62.2603 51.2125 62.3672 51.1451 62.4556 51.028 cv
65.7676 46.6276 62.3892 39.8839 59.4136 36.2467 cv
59.1782 35.9586 58.8848 35.84 58.5899 35.8429 cv
58.2217 35.3468 57.854 34.8571 57.5484 34.3605 cv
56.793 33.1339 56.0928 31.879 55.4571 30.5919 cv
56.1406 28.8922 54.8169 27.505 54.6543 25.754 cv
54.437 23.4196 54.4351 20.9391 55.2246 18.7194 cv
55.2945 18.7028 55.3633 18.6788 55.4302 18.6461 cv
56.9419 17.9059 57.8994 16.2672 58.7583 14.8712 cv
59.7945 13.1886 60.7554 11.4786 61.666 9.72523 cv
62.5064 8.10706 60.2603 6.96009 59.249 8.37952 cv
58.0991 9.99378 57.0103 11.631 55.98 13.3248 cv
55.1875 14.6281 54.3296 16.0245 54.2197 17.5631 cv
53.9688 17.5978 53.732 17.7189 53.5874 17.9747 cv
52.2183 20.4059 51.4404 23.0094 51.5376 25.8195 cv
51.5816 27.0963 51.8677 28.6119 52.6045 29.7311 cv
53.1934 31.7286 53.9112 33.6857 54.8965 35.5255 cv
55.8194 37.2467 56.8687 39.5162 58.7427 40.3312 cv
59.3394 41.6261 59.8062 42.9747 60.1011 44.3947 cv
60.3692 45.6823 60.4102 47.0265 60.5899 48.3361 cv
59.833 48.2301 58.9683 48.6906 59.1016 49.5861 cv
59.5469 52.5763 59.8345 55.5646 60.1006 58.5748 cv
60.314 60.985 59.8667 63.6012 61.3491 65.61 cv
60.9341 67.6925 60.5596 69.7975 59.875 71.8102 cv
59.3086 73.4762 58.4038 75.173 58.1245 76.9034 cv
58.022 77.5367 58.5845 78.3517 59.3159 78.046 cv
60.9961 77.3444 61.8609 75.7242 62.2905 73.9948 cv
62.9321 71.4122 63.1875 68.6505 63.5596 66.0167 cv
63.6089 65.6681 63.5161 65.3698 63.3457 65.1403 cv
64.8614 60.9489 63.353 55.6632 62.1465 51.2472 cv
cp
.176471 .176471 .176471 rgb
f
54.6992 78.1227 mo
52.6729 79.0621 50.5039 79.9923 48.3169 80.4581 cv
47.1319 80.7106 45.8228 80.8712 44.7222 81.3883 cv
44.6026 81.4445 44.5132 81.6178 44.5264 81.7467 cv
44.5332 81.8136 44.5396 81.881 44.5464 81.9474 cv
44.5777 82.2643 44.7696 82.5699 45.1001 82.6437 cv
45.7168 82.7814 45.9112 82.7101 46.5127 82.4933 cv
47.0991 82.2814 47.2324 82.1217 47.9243 82.1837 cv
48.4483 82.2306 48.4658 82.3658 49.1231 82.319 cv
51.2822 82.1647 53.6314 80.964 55.5801 80.0968 cv
57.0054 79.4625 56.1436 77.4528 54.6992 78.1227 cv
cp
f
42.0025 81.7804 mo
41.1304 81.9313 40.4531 82.0143 39.6421 81.569 cv
38.8096 81.1115 37.8184 82.3336 38.6201 82.9528 cv
39.8208 83.879 41.46 84.4933 42.9522 83.9684 cv
43.3145 83.8409 43.6885 83.5406 43.752 83.1344 cv
43.938 81.9518 42.9966 81.609 42.0025 81.7804 cv
cp
f
23.6167 79.3004 mo
22.2622 79.5421 20.8828 80.5524 19.7515 81.3322 cv
18.2964 82.3351 17.1948 82.6115 15.376 82.379 cv
14.023 82.2057 13.4351 84.2062 14.8413 84.4923 cv
16.6446 84.86 18.3565 85.0548 20.0513 84.1857 cv
21.6187 83.3824 23.6265 81.9108 24.4737 80.3673 cv
24.8096 79.7545 24.2241 79.192 23.6167 79.3004 cv
cp
f
27.7412 67.9664 mo
27.417 67.7926 26.8975 67.817 26.6509 68.1305 cv
25.7544 69.2697 26.0078 70.7155 25.8838 72.1022 cv
25.7207 73.9283 25.3028 75.7496 24.3892 77.3502 cv
23.4487 78.9977 25.9058 80.2999 26.9292 78.7638 cv
28.1592 76.9171 29.022 75.0206 29.2417 72.7911 cv
29.4004 71.1798 29.3487 68.8268 27.7412 67.9664 cv
cp
f
29.958 44.6681 mo
29.9292 44.4425 29.5567 44.3473 29.5196 44.6178 cv
28.605 51.235 27.7036 57.7164 27.1167 64.3746 cv
26.9898 65.8146 29.4063 66.0905 29.6558 64.6642 cv
30.8579 57.7799 30.8526 51.6071 29.958 44.6681 cv
cp
f
32.8296 26.5783 mo
32.711 26.1613 32.0581 25.9288 31.7661 26.3214 cv
29.0381 29.9904 29.5366 35.0114 29.1709 39.3082 cv
29.0996 40.153 30.3828 40.2252 30.6021 39.4713 cv
31.7725 35.4401 34.0493 30.8785 32.8296 26.5783 cv
cp
f
33.5493 18.7116 mo
33.5093 18.1808 32.7862 18.0953 32.626 18.6061 cv
32.4771 19.0822 32.5322 19.2384 32.4995 19.6959 cv
32.4434 20.4718 32.127 20.8439 32.0279 21.5328 cv
31.9639 21.9757 32.0938 22.3947 32.1177 22.8312 cv
32.1553 23.5104 32.0098 24.2018 31.9199 24.879 cv
31.833 25.5324 32.7564 25.6461 32.8198 24.9816 cv
32.8765 24.3937 32.8706 23.7443 33.0044 23.1686 cv
33.1226 22.6622 33.4263 22.2291 33.4712 21.6974 cv
33.5064 21.2853 33.416 20.7931 33.4204 20.3761 cv
33.4273 19.7765 33.5947 19.3087 33.5493 18.7116 cv
cp
f
33.3198 16.903 mo
32.9126 16.9117 32.9253 17.5446 33.333 17.5358 cv
33.7403 17.527 33.7276 16.8947 33.3198 16.903 cv
cp
f
33.3902 7.89808 mo
33.6836 6.93421 33.7276 6.17152 33.2539 5.25745 cv
32.9287 4.6305 31.9971 4.72962 31.6758 5.29066 cv
31.0737 6.34193 31.3096 7.22523 31.7217 8.30286 cv
32.2593 9.70911 32.1279 11.3742 32.333 12.8634 cv
32.461 13.7999 33.8018 13.6056 33.6182 12.6622 cv
33.3032 11.0504 32.9043 9.4972 33.3902 7.89808 cv
cp
f
60.7158 39.8024 mo
60.7193 39.9327 60.729 40.066 60.7578 40.2057 cv
61.4307 43.4777 60.8194 46.6002 60.6397 49.8668 cv
60.482 52.7369 60.814 55.5099 61.1607 58.3502 cv
61.7324 63.0485 63.4385 70.5167 61.3233 74.964 cv
58.9595 79.9332 50.2036 82.8141 45.0196 82.8766 cv
38.8408 82.9508 33.0742 79.6276 31.7095 73.318 cv
31.5518 72.5885 31.1138 72.1754 30.5889 72.007 cv
31.1089 63.0402 31.7427 54.0807 32.5332 45.1334 cv
33.4346 34.9225 33.9927 24.4284 36.1128 14.3878 cv
36.27 13.6427 36.0362 13.0367 35.6216 12.611 cv
35.4561 9.90736 35.8159 7.12708 36.0752 4.42396 cv
40.5288 3.96302 45.0767 3.62366 49.4629 4.62952 cv
53.3018 5.50989 56.7422 7.57239 60.0928 9.6598 cv
49.5342 17.1261 49.815 32.5812 60.7158 39.8024 cv
cp
26.4238 74.8951 mo
25.7217 77.11 24.854 79.1837 23.1172 80.858 cv
22.2647 81.6798 21.4136 82.4049 20.3672 82.9415 cv
20.2114 83.0216 20.0684 83.0939 19.9312 83.1652 cv
19.7837 83.1232 19.627 83.0939 19.458 83.0836 cv
14.814 82.7955 10.3389 81.2032 6.89504 77.9816 cv
2.87062 74.2169 4.2632 69.6173 5.29641 64.9127 cv
6.95412 57.3624 9.00344 49.9161 11.3545 42.5543 cv
11.3613 42.547 11.3706 42.5411 11.377 42.5333 cv
11.4253 42.4772 11.4732 42.421 11.5215 42.3644 cv
12.0816 41.7086 12.2954 40.6959 11.7837 39.9347 cv
11.749 39.8839 11.7154 39.8336 11.6812 39.7828 cv
11.3237 39.2511 10.8418 38.9816 10.3428 38.9098 cv
7.92531 36.2267 9.27346 28.5958 9.87355 25.6798 cv
10.6787 21.7677 12.2398 17.9845 14.3799 14.6149 cv
16.586 11.1412 19.7476 7.13734 23.7759 5.77064 cv
26.3369 4.9015 29.251 4.64466 32.085 4.4098 cv
31.7788 7.63392 31.3135 10.9689 31.7652 14.1583 cv
31.7988 14.3971 31.874 14.6051 31.9673 14.798 cv
30.1362 24.1232 29.5635 33.8229 28.7085 43.2604 cv
27.7549 53.7907 27.0064 64.3375 26.4238 74.8951 cv
cp
64.0313 11.9 mo
64.251 11.778 64.4175 11.6315 64.5581 11.4747 cv
65.8037 10.8673 66.3506 8.81214 64.7779 7.8595 cv
60.2232 5.10072 55.7066 1.96644 50.4448 .751106 cv
45.9917 -.277702 41.4185 -.0799484 36.8955 .344856 cv
36.583 .118782 36.1724 -.00133514 35.6519 .0626297 cv
30.4854 .69886 24.2002 .5597 19.5991 3.29261 cv
15.3721 5.80335 12.002 10.4611 9.7051 14.7003 cv
7.17434 19.3712 5.63381 24.5734 5.27395 29.8776 cv
5.04006 33.3116 5.1177 38.5045 7.49025 41.5201 cv
5.6924 47.1417 4.06008 52.8112 2.66311 58.547 cv
1.47365 63.4298 -.660625 69.2755 .19875 74.3595 cv
1.56252 82.4205 11.5991 86.3727 18.8511 87.0206 cv
19.729 87.7711 21.1812 87.8658 21.8731 86.5499 cv
21.6582 86.9581 22.4737 86.4166 22.6861 86.3058 cv
23.1948 86.0392 23.6138 85.6876 24.0567 85.3258 cv
25.1968 84.3937 26.3223 83.4279 27.2529 82.2799 cv
28.1436 81.1818 28.8032 79.9366 29.3394 78.6315 cv
34.8613 89.4659 50.6377 87.6705 60.0127 81.899 cv
66.0391 78.1891 66.1929 72.6793 65.8872 66.1051 cv
65.6778 61.5875 64.7124 57.1232 64.585 52.6105 cv
64.4546 48.0211 65.5196 43.6901 64.6026 39.131 cv
64.8057 38.3512 64.5933 37.4728 63.6953 36.9523 cv
53.6099 31.1051 53.9458 17.5001 64.0313 11.9 cv
cp
.156863 .113725 .113725 rgb
f
36.7642 59.1149 mo
34.9278 58.7501 33.2691 60.1032 33.2139 61.9513 cv
33.2012 62.381 33.3731 62.7946 33.6455 63.1339 cv
33.6607 64.6085 35.0225 65.8229 36.5313 65.797 cv
38.2764 65.7662 39.4248 64.0148 39.354 62.3971 cv
39.2886 60.9181 38.2759 59.4152 36.7642 59.1149 cv
cp
f
38.0894 44.8658 mo
37.4439 44.7013 36.7598 44.8278 36.1978 45.1676 cv
35.2935 45.3712 34.4658 46.1593 34.5601 47.1578 cv
34.6939 48.5841 35.2232 49.9777 36.7305 50.4249 cv
38.4107 50.924 39.9741 49.7028 40.0469 47.9987 cv
40.104 46.6705 39.4844 45.2223 38.0894 44.8658 cv
cp
f
37.7295 25.3439 mo
37.645 25.382 37.5796 25.443 37.5015 25.4894 cv
37.0298 25.6217 36.6177 25.9147 36.416 26.4074 cv
35.8203 27.8639 35.7134 29.6246 37.2959 30.5314 cv
39.0943 31.5612 41.2422 30.0245 41.4551 28.1456 cv
41.6812 26.1471 39.6109 24.5035 37.7295 25.3439 cv
cp
f
42.4878 39.5011 mo
41.021 29.0231 39.5542 18.545 38.0879 8.06702 cv
37.7451 5.61878 35.3286 5.25794 33.6841 6.27845 cv
32.8447 6.06361 31.9009 6.21546 31.0611 6.84925 cv
28.897 8.48206 28.7212 11.9401 28.0547 14.3292 cv
27.2285 17.2897 25.6626 19.9415 24.791 22.8771 cv
23.8638 26.0035 24.7202 29.964 23.4536 32.797 cv
22.5933 34.7199 20.5239 35.4928 20.857 38.0026 cv
21.4175 42.2252 27.9551 42.7706 29.8506 39.2374 cv
29.8716 39.1989 29.877 39.1764 29.895 39.1403 cv
30.2608 39.8033 30.8701 40.6368 31.4839 41.045 cv
33.0029 42.0548 35.0684 41.8605 36.9522 41.57 cv
38.3018 44.6696 42.9253 42.629 42.4878 39.5011 cv
cp
.866667 .890196 .94902 rgb
f
40.5689 36.3741 mo
41.0205 34.8507 41.294 33.4884 40.6709 31.9874 cv
39.9483 30.2472 37.4439 30.6574 36.833 32.2277 cv
36.8135 32.278 36.8071 32.3283 36.7896 32.3785 cv
36.1758 32.7975 35.7627 33.4991 35.918 34.4352 cv
36.0103 34.9967 36.1353 35.5328 36.2774 36.0841 cv
36.3877 36.5118 36.6192 36.8663 36.916 37.1461 cv
36.9571 37.382 36.9829 37.6193 36.9859 37.8595 cv
36.9697 37.9069 36.9658 37.9337 36.9551 37.9728 cv
36.6924 37.5045 36.2534 37.1144 35.5967 36.9059 cv
35.3096 36.8151 35.0308 36.7335 34.7486 36.6676 cv
34.4619 36.025 34.0615 35.5646 33.4268 35.2252 cv
32.7832 34.881 32.0191 34.7369 31.2954 34.8658 cv
31.0654 34.9313 30.8496 35.0319 30.6294 35.1222 cv
30.3203 34.9943 30.0029 34.8937 29.6738 34.8649 cv
29.001 34.8058 28.1778 35.318 27.5069 35.5397 cv
26.5855 34.8654 25.5869 34.525 24.3081 35.1818 cv
22.7598 35.9767 21.8882 38.1798 21.1572 39.7565 cv
21.145 39.7809 21.1338 39.8053 21.1231 39.8302 cv
21.0908 39.8986 21.0581 39.9728 21.0269 40.0382 cv
21.0469 40.0426 li
20.6187 41.4664 22.0244 43.3082 23.7222 42.4161 cv
24.5152 41.9996 25.083 41.6002 25.6958 40.9376 cv
25.7486 40.881 25.8369 40.7902 25.9356 40.6891 cv
26.1475 40.7955 26.3906 40.879 26.689 40.9259 cv
27.6001 41.0685 28.292 40.7267 29.0415 40.4606 cv
29.3701 40.6637 29.7163 40.8253 30.1612 40.882 cv
30.2725 41.025 30.395 41.1564 30.5254 41.2726 cv
31.8989 42.4884 33.0244 41.7623 34.5894 41.8234 cv
35.2925 41.8507 35.8823 41.6056 36.3281 41.2111 cv
36.6817 41.5763 37.21 41.7697 37.8897 41.6036 cv
40.5781 40.9454 40.7529 38.7672 40.4981 36.5553 cv
40.5215 36.4948 40.5493 36.4396 40.5689 36.3741 cv
cp
.694118 .72549 .788235 rgb
f
39.815 18.4576 mo
39.7979 16.6652 38.145 15.837 36.7915 16.0416 cv
38.1153 15.0133 39.0796 13.5162 38.7031 11.8439 cv
38.272 9.92933 35.961 9.66224 34.813 11.066 cv
34.3892 11.5846 34.3355 12.0094 34.0908 12.4078 cv
33.5772 12.2169 33.022 12.1491 32.4951 12.2443 cv
31.1157 12.4928 29.9317 13.6217 30.1924 15.0997 cv
30.3604 16.0534 31.2798 16.4791 32.1563 16.3976 cv
32.1695 16.3961 32.2036 16.3903 32.2246 16.3873 cv
32.7163 17.0685 33.5122 17.5304 34.4038 17.275 cv
34.7173 17.1852 35.0391 17.0617 35.3594 16.9132 cv
35.1548 17.2355 35.0342 17.6368 35.0615 18.1368 cv
35.1416 19.5812 35.4248 20.9264 35.646 22.3507 cv
35.7363 22.9371 35.9214 23.445 36.0977 24.0035 cv
36.1714 24.2379 36.2173 24.4391 36.2417 24.6246 cv
35.9053 24.5641 35.5757 24.5236 35.2266 24.5558 cv
35.1431 24.4762 35.0791 24.3844 34.9839 24.3126 cv
33.9263 23.5182 32.9917 23.8453 31.8574 24.0695 cv
31.7818 24.0841 31.7393 24.1036 31.7105 24.1242 cv
31.6821 24.0768 31.6402 24.0177 31.5586 23.9308 cv
31.2036 23.5514 30.3311 23.4508 29.8604 23.4503 cv
29.3408 23.4498 28.857 23.5792 28.3999 23.7731 cv
27.8877 23.7994 27.3765 23.9796 26.9683 24.2838 cv
26.959 24.2643 26.9497 24.2452 26.94 24.2262 cv
26.0757 25.0851 25.7461 25.8961 26.0215 27.1178 cv
26.4195 28.8864 28.2139 29.3839 29.6411 28.6295 cv
30.1206 28.92 30.6172 29.1564 31.2285 29.2379 cv
31.5025 29.2745 31.77 29.2667 32.0327 29.2418 cv
32.3613 29.5455 32.7764 29.7907 33.3257 29.9181 cv
33.9844 30.0704 34.6231 30.0265 35.2569 29.7926 cv
35.4092 29.7369 35.5474 29.6549 35.6812 29.566 cv
36.6973 29.6798 37.7988 29.0949 37.9937 27.9879 cv
38.3579 27.8019 38.6343 27.4425 38.6763 26.86 cv
38.7359 26.0446 38.6245 25.2418 38.8775 24.4523 cv
39.0293 23.9777 39.2666 23.5612 39.3726 23.0582 cv
39.6807 21.6012 39.8281 19.9391 39.815 18.4576 cv
cp
f
40.8145 34.5499 mo
40.7451 33.9288 40.2027 33.4484 39.6607 33.2286 cv
39.1655 33.028 38.7456 33.0656 38.2837 33.3151 cv
37.7559 33.6002 37.3037 34.1564 37.3028 34.7858 cv
37.3008 36.0094 37.3775 37.2013 37.4717 38.3971 cv
37.0518 38.4479 36.6709 38.6134 36.3003 38.8478 cv
36.1221 38.9601 35.3784 39.6613 35.3696 39.6598 cv
34.8257 39.5709 34.4195 39.7179 34.1402 39.9874 cv
33.6675 39.3033 32.6773 39.2086 32.0508 39.735 cv
31.9356 39.2721 31.7134 38.8243 31.3452 38.4186 cv
30.8711 37.8956 30.1714 37.5372 29.461 37.4894 cv
29.3345 37.4806 29.1909 37.486 29.0474 37.4962 cv
28.416 36.9782 27.5508 36.755 26.603 36.9362 cv
25.0488 37.233 23.8028 38.4801 23.0264 39.7926 cv
22.2608 41.0866 23.6094 43.1368 25.1294 42.2003 cv
25.4185 42.0226 25.7139 41.8722 26.0152 41.7267 cv
26.2588 41.9865 26.5733 42.2033 26.9693 42.359 cv
27.544 42.5846 28.0337 42.5992 28.4976 42.5104 cv
29.2886 43.0919 30.4785 43.2247 31.2964 42.5333 cv
31.3555 42.4835 31.4141 42.4337 31.4732 42.3844 cv
31.6763 42.213 31.8184 42.0055 31.9268 41.7858 cv
32.0777 41.9503 32.2666 42.0875 32.4922 42.1779 cv
32.9463 42.36 33.5112 42.3942 33.9732 42.1984 cv
34.1426 42.4874 34.3848 42.736 34.7075 42.8912 cv
35.3701 43.2096 36.1304 43.213 36.8115 42.9323 cv
37.0362 42.84 37.2427 42.7169 37.4439 42.5822 cv
37.4893 42.5988 37.5303 42.6217 37.5777 42.6359 cv
38.1885 42.816 38.9922 42.7701 39.4624 42.2716 cv
39.6382 42.0221 39.8672 41.8385 40.148 41.7208 cv
40.6587 41.4557 41.1377 40.8741 41.1192 40.2653 cv
41.0606 38.3409 41.0322 36.4747 40.8145 34.5499 cv
cp
.556863 .592157 .647059 rgb
f
40.2656 25.402 mo
40.1519 23.4342 40.5947 20.0338 38.4566 19.026 cv
38.1309 18.8727 37.7461 19.0158 37.4834 19.214 cv
36.5518 19.9166 36.5791 21.1544 36.6553 22.2179 cv
36.7007 22.8624 36.7964 23.4913 36.9141 24.1256 cv
36.9668 24.4117 37.1201 24.8712 37.1831 25.2784 cv
37.1499 25.3097 37.126 25.3492 37.0962 25.3839 cv
37.0073 25.3991 36.918 25.4137 36.834 25.4376 cv
36.7446 25.463 36.6553 25.4909 36.5664 25.5172 cv
36.5093 25.5343 35.8657 25.7169 36.2144 25.6212 cv
35.6924 25.7643 35.232 26.1437 35.022 26.6305 cv
34.9414 26.6134 34.8633 26.5905 34.7788 26.5822 cv
34.5899 26.3951 34.3745 26.233 34.1328 26.1168 cv
33.6045 25.8639 32.9795 25.8034 32.4068 25.9396 cv
32.1763 25.9943 31.8389 26.2018 31.5459 26.3566 cv
31.2144 26.066 30.8462 25.8649 30.4029 25.7897 cv
29.8272 25.6925 29.4302 25.86 29.001 26.0162 cv
28.7569 25.9782 28.499 26.0084 28.2456 26.1559 cv
28.1362 26.2189 28.0269 26.2824 27.9175 26.3458 cv
26.7324 27.0348 26.6758 28.9396 28.1089 29.4074 cv
28.2022 29.4376 28.8208 29.548 29.2979 29.5797 cv
29.4644 29.7648 29.6504 29.9308 29.8677 30.0597 cv
30.4966 30.4332 31.2071 30.4786 31.8994 30.296 cv
32.1924 30.2189 32.4414 30.0953 32.6978 29.9484 cv
33.0415 30.2018 33.4829 30.3312 34.0127 30.2101 cv
34.8062 30.0294 35.6465 29.5016 35.9893 28.7531 cv
36.2608 28.8619 36.5601 28.8976 36.8667 28.8141 cv
37.4038 28.6671 37.8916 28.3688 38.2373 27.9757 cv
38.541 28.0094 38.855 27.9742 39.1475 27.8473 cv
40.168 27.403 40.3223 26.3839 40.2656 25.402 cv
cp
f
37.9517 14.9533 mo
37.8775 13.9821 36.7984 13.3566 35.918 13.3883 cv
35.1104 13.4171 34.4683 13.8849 34.0044 14.5197 cv
34.0025 14.5231 33.9956 14.5304 33.9922 14.5353 cv
33.7168 14.5612 33.4077 14.712 33.1695 14.8361 cv
32.4898 15.1901 32.0645 15.6959 31.7446 16.3785 cv
31.1426 17.6632 33.2412 18.7086 33.9663 17.4967 cv
34.0396 17.3742 34.1265 17.2985 34.1128 17.276 cv
34.3032 17.2789 34.6284 17.4059 34.8106 17.421 cv
35.02 17.4381 35.251 17.4142 35.4522 17.3659 cv
35.7666 17.2902 36.1626 17.1334 36.438 16.901 cv
36.5176 16.8951 36.6045 16.8864 36.6812 16.8751 cv
37.6284 16.7374 38.0147 15.7887 37.9517 14.9533 cv
cp
f
41.1182 40.5802 mo
40.9566 40.7946 40.9497 40.8917 40.6919 40.8727 cv
39.9776 40.819 39.7622 39.2438 39.6802 38.7833 cv
39.4024 37.2291 37.8203 36.9323 36.7427 37.5182 cv
35.9072 37.7076 35.0811 38.4381 35.1367 39.3278 cv
35.1714 39.8844 35.1826 40.5109 34.9219 41.028 cv
34.8682 41.0226 34.8032 41.0133 34.711 40.9894 cv
34.3848 40.9054 34.0401 40.8995 33.711 40.8097 cv
32.9942 40.6139 31.6489 39.9845 31.8941 39.0045 cv
32.4522 36.7726 29.461 35.4762 28.3994 37.0548 cv
28.1714 37.1974 27.9605 37.401 27.7818 37.6798 cv
27.2393 38.525 26.6846 39.36 26.1001 40.1769 cv
26.0103 40.3038 25.9165 40.4283 25.8257 40.5543 cv
25.4082 40.4171 24.8921 40.2467 24.8404 40.2296 cv
23.2061 39.6881 21.5005 38.9386 21.8985 37.069 cv
22.0742 36.8776 22.2207 36.6354 22.3213 36.3356 cv
23.0313 34.2208 23.7407 32.1066 24.4512 29.9918 cv
24.8052 30.2643 25.1983 30.4967 25.6206 30.6862 cv
26.7842 31.2086 28.2608 31.6408 29.479 31.067 cv
29.8135 30.9093 30.0962 30.7067 30.3355 30.4723 cv
32.9341 32.3507 36.9092 31.7867 39.3989 29.445 cv
40.4771 38.8385 li
40.5435 39.4191 40.8028 39.8175 41.1519 40.07 cv
41.1821 40.1368 41.2046 40.2072 41.2412 40.2706 cv
41.2007 40.3727 41.1675 40.5153 41.1182 40.5802 cv
cp
28.8648 16.8453 mo
29.5904 17.9274 30.6358 18.7794 31.9903 19.2189 cv
34.1719 19.9264 36.4131 19.2726 38.0669 17.8409 cv
38.6558 22.9742 li
38.8775 24.9059 li
38.2857 24.8742 37.6856 25.1227 37.2656 25.7877 cv
36.6587 26.7477 35.8106 27.4391 34.6665 27.63 cv
33.895 27.7584 32.4483 27.6539 32.1402 26.7506 cv
31.4868 24.8346 28.857 24.9386 28.2407 26.296 cv
27.918 26.506 27.6724 26.7946 27.5235 27.1417 cv
27.3423 27.0807 26.9356 26.9557 26.857 26.8419 cv
26.7681 26.715 26.9024 26.1969 26.9214 26.0475 cv
26.9907 25.5006 27.0654 24.9825 27.0303 24.4293 cv
27.0029 24.0148 26.8941 23.6168 26.7051 23.278 cv
27.4248 21.1339 28.145 18.9894 28.8648 16.8453 cv
cp
31.6206 8.63734 mo
31.8858 8.55579 32.1494 8.40833 32.3994 8.16761 cv
33.9492 8.43714 35.499 8.70667 37.0488 8.9762 cv
37.2632 10.8424 li
37.5557 11.6871 37.5747 12.7858 37.6304 13.7721 cv
36.9776 13.6818 36.2808 13.8849 35.77 14.5465 cv
34.5322 16.1476 31.7769 15.5758 31.6572 13.3898 cv
31.6148 12.6076 31.272 11.9015 30.6494 11.5294 cv
30.9732 10.5651 31.2974 9.6012 31.6206 8.63734 cv
cp
44.3589 37.6744 mo
43.2622 27.9498 42.8989 17.7545 40.9693 8.17542 cv
39.917 2.95521 35.5723 1.39124 31.6065 3.75062 cv
30.6157 3.17738 29.1792 3.33851 28.71 4.73695 cv
25.3696 14.6876 22.0279 24.6383 18.6875 34.589 cv
18.499 34.7833 18.3418 35.0324 18.2344 35.3449 cv
17.0039 38.9157 18.8784 42.2262 22.2735 43.5748 cv
23.7149 44.1481 25.7676 45.1344 27.3208 44.5114 cv
28.107 44.1964 28.772 43.4933 29.355 42.691 cv
30.1763 43.6061 31.3003 44.296 32.6021 44.6476 cv
34.0562 45.0397 35.9361 45.3663 37.2359 44.4186 cv
37.5 44.2262 37.7246 43.9899 37.9307 43.7369 cv
39.0913 44.817 40.6319 45.3253 42.4058 44.57 cv
43.7554 43.9957 44.6963 42.7223 45.1196 41.3458 cv
45.4937 40.13 45.4292 38.4528 44.3589 37.6744 cv
cp
.156863 .113725 .113725 rgb
f
42.5259 9.15052 mo
41.4209 5.60023 37.2012 3.28626 33.6304 3.35609 cv
32.5264 3.37806 31.3057 3.75648 30.2486 4.37464 cv
29.8032 4.48597 29.3736 4.65101 28.9678 4.87611 cv
27.1924 5.45765 25.8482 6.70325 25.7373 9.0763 cv
25.5669 12.713 28.8814 15.2003 31.9654 16.316 cv
32.3052 16.4391 32.669 16.5538 33.0464 16.6544 cv
34.8662 17.3756 36.8628 17.6617 38.6992 17.1764 cv
42.1748 16.2584 43.5259 12.3639 42.5259 9.15052 cv
cp
.984314 .831373 .329412 rgb
f
33.833 6.96986 mo
33.8203 6.96058 33.8071 6.9513 33.794 6.94202 cv
33.7793 6.93128 33.7622 6.92493 33.7471 6.91468 cv
33.5781 6.75843 33.3975 6.61439 33.1948 6.50013 cv
31.9487 5.797 30.3848 5.78431 29.2617 6.75599 cv
28.1133 7.74915 27.8526 9.34095 28.4404 10.7086 cv
28.6299 11.1486 28.9282 11.5177 29.2847 11.8214 cv
30.1319 13.0446 31.8399 13.2931 33.0952 12.4523 cv
33.3687 12.2692 33.6099 12.0519 33.8286 11.816 cv
33.8555 11.7921 33.8887 11.7721 33.9146 11.7472 cv
34.5894 11.0924 34.8887 10.4157 35.0493 9.46644 cv
35.2119 8.50696 34.5752 7.50306 33.833 6.96986 cv
cp
1 .898039 .611765 rgb
f
27.7627 14.8947 mo
30.9946 17.7379 36.4356 18.2692 39.4112 14.7433 cv
42.0528 11.6129 40.8941 6.5138 36.9766 4.99085 cv
36.2534 4.7096 35.7632 5.50013 35.9854 6.11439 cv
36.3516 7.12757 37.167 7.86488 37.437 8.93519 cv
37.7783 10.2907 37.4575 11.9166 36.4483 12.8981 cv
34.2793 15.0079 31.2534 13.4635 28.7871 12.86 cv
27.4805 12.5407 26.7822 14.0319 27.7627 14.8947 cv
27.7627 14.8947 li
cp
.976471 .686275 .333333 rgb
f
41.0982 11.0934 mo
41.0552 9.67982 40.8247 7.87366 39.6821 6.9596 cv
39.4043 6.73743 38.939 6.85218 38.7544 7.13685 cv
38.2144 7.96937 38.3272 8.35511 38.5459 9.33704 cv
38.9024 10.9371 38.8291 12.006 37.732 13.2804 cv
37.0313 14.0934 36.2305 14.8346 35.2412 15.2809 cv
34.0615 15.8126 32.7085 15.5719 31.4419 15.4279 cv
30.6055 15.3331 30.4082 16.5504 31.1529 16.839 cv
32.6104 17.4034 33.8819 18.3068 35.4785 17.8312 cv
36.9273 17.3995 38.2398 16.4747 39.1987 15.3273 cv
40.2456 14.0748 41.1499 12.7804 41.0982 11.0934 cv
cp
.878431 .552941 .203922 rgb
f
36.3545 15.7628 mo
34.3135 16.1246 31.5064 15.3722 29.6343 14.4606 cv
27.9507 13.6408 27.4151 12.9376 27.2832 11.1642 cv
27.1665 9.59583 27.5264 7.75208 28.7681 6.69544 cv
28.8775 6.60267 28.9673 6.50404 29.0493 6.40394 cv
30.2022 6.87757 31.772 6.38197 31.8321 4.77601 cv
31.8516 4.26234 36.4385 5.4972 36.7949 5.74915 cv
37.7046 6.39271 38.523 7.54652 39.0083 8.50843 cv
40.4126 11.2916 39.9741 15.1212 36.3545 15.7628 cv
cp
40.0899 3.34534 mo
37.5308 .84388 29.4243 -1.09655 28.0498 3.3224 cv
27.458 3.09681 26.7637 3.14954 26.1372 3.68275 cv
22.4688 6.80433 21.8164 14.444 26.1914 17.2316 cv
30.3521 19.882 37.689 21.3922 41.481 17.4723 cv
45.4424 13.3771 43.812 6.98402 40.0899 3.34534 cv
cp
.156863 .113725 .113725 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Igor Lyubchak) ()
%%Title: (3_body.eps)
%%CreationDate: 11/11/2019 9:59 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9jp!<9t8,!_T2AV]aBRYM./>uIF&/HqDc7YSjT^h./E39!hDYtCeclc7:*Et=>$2p(-T?C;t:8C(Doc-=LnR2u=L
%:\Lu@GkoUjQf%4<rL[H`EXOt<pgmOtZ?'ntO!">]-ia.umr,s*5OE4-9B*K``MKdhWEh*L"C+s1I!**oq!.)S05b.2q;V(JVmkQ5
%IsCYaea)[RYrhmVaiiLYSpW''H*[>4pA+;]J(a4]5C**<\`W`il0FgOcYm`.]mfM4bq<?TC^a\Bid^`0Y*'a^mqaXas6>:pI<k_P
%NP(h;)lN_spV5M0O-EZd5Q/X[hgYIhq_t^N]Qs59jo>/p:;-X,em!WLqqVqaL"u#24"&'Ejd3U>m6<i2iV=F@k&*=Trqbbi45Ai1
%mXFmN>/'0"=WZXK/9^6l>TF:Pppn<Bf$j'd%=e,aY`&@J0>9F*).$+#0oAPOmHjt!k5f8l.:86$q"iNb0:oiUoCib;6!X,=gDAa1
%J+D`f6XP5T8pXnU=%1EGd*s_5@H9l)f;n,*gZ99TOq2rAS/S3F`L<r=%*:,*7HX<aB=EBd`U:Lu55F@7[7SC2lSi07qu9(dEk6!3
%QX)36m%!Ip^]39gmH]7Hq<SPSO_metpG]:i\U?)9\)-90q%JY/e8tP;46$iI?@R>!7KibAo,fZp^Y%)5s6d?\]_M/`^YV;?S[YNp
%m^q5?IsCWNpr5>:B/u<%m0]JSC>C``+TQaRb]6^5+N;9:Md,*DrSD,^_=2ptErN]&cb=i$neWn=h9Tm,2?eR*qUmgn$n-R+p&FfO
%X#g2nrK"Y#oYR(V[kE*S3</[12q)#8Y(#sg*drA1c/I1\%*SD?k?_cJ9:926?[Z_)?2qauaXqu:c9@-q?iThb>k%)+DZ':WDtS>I
%lS"k0+M[j9lW6;upT'Y\r9EgIT3d$=lCVs<s5Wh;Roce)TYK1Ym[sKfr8VG%T5pOlrp]d+;n7\]H^o0MjOn`AHcHTW4($n5oXAim
%s4RGLOR#=ALd#!\TWP,Y5MeSRp"a_"4msP<r8RO9QVUrVpks.0?U+EbIe,u(BtYff]RBCl#Mi>>ju_fChM(-_h>]&S9YYnpUON1.
%jdfV[mE+ZQIsL_`cPWnLc[VUjIJ*I%pA`p^l],?Oq=`(^5Fp]\>!Meb?T`W*-WsYk?[hVFkQUqJg;E,sD0s?j+.bTErp8Ck:VQ_T
%Z_tG6lQ<k@e*[aM?9KBS^[V-jV"o64's;r*6biQbMgp'Gr7Uft`ae.s0;Nrd4aheVj^5cPF8IZU_mFplnolapJ*qc>ST+Q/U,_h7
%pNl^dfr'h1/j2dTq=!Ps?Tr&I>^FE`=5u<lr,;'RI?77^4Hmm6O+M]D3FDdIM("!`5Pq@&9N6-*5<jKDB#F&[+.g0V?0C@N(Z3&j
%h0o*s-f<a#k4CIE>]6%EQ5+7CZ$u]D\$'AK\F3eMVu6,YPAd&7CAA6?@`3ST0&7Q/T=<2A\$n$P0pgX+]ah[Q2if'Zj5WXf=A$!s
%JA8YM$<DM/Ik8lFrZqaGi,;b7$m5;g[']]);;D-2li$-FFHbs#G5X>'/bCC%IZIdL`QmloL1q8FB3B0qfF_J?jDFVJJ(0s`:\#^o
%UYk*q]S=/>rjYR:(V4qrnV\JqJ+rm7mrlHmrT*(L=?"Q1[_fL)_7,B<Kp9QD`SXi,hW&PP7ub>^>]LRCSg(PK`SmOD3WIFc8([Pt
%aUt_o[D-m*/F=_'Z0g:g_bY-[V&!9K^,\3>HE,#sYO[TTC9Fh!02c]16&nu6/B-t:,nu\aj>b;ecZ4qK1O`5^3FjdubA_E<j>a!2
%*/Cnf6QVM-.WV=!jmYiR6uqfeN`/']+g2egPXiZN'4R'@a!E@s-Cj-VL4^K:3MD-V7g\`OS0VV+jc9et4^mk>4AKo:rBZIW*7nL\
%dT9f:^e6"-\+\7Lnfpn\?Z<LoGEUu7a'LfC0:a:o/L"'Qa=bRHSNI)mLp(tHa([QVEKEE^j][\aUWS^EUa=_,oF[-+rP'<mGqh5f
%5Q-qP]_Qb9C[&n=#(Pu!n]qLS.K;QPru^=3hXBRPotKg)5kd^-[*KSDI?4P:Jeu.`j!;Z2%\,/'EEu"N+?:WRk\?5#8l*']j!aJ>
%O96js9LLE[6'*7T,(0<J*(Q-fK,f6\driWjpem?W>SDifUeBbV&log2Z;Wd+T7d(A?N0t.N[B7Ur-sk/0+]+ZL<-"-E0R1Mq<%2l
%Oi3G'.ZF]/ZcDAB\L\UnC8>Zhl%FFFPKt23;#CncmA%"8ih(GMd><6]l+6h6Ef8"?(<P=CP6ahn8Sp4fVm(u1-gA',3/T];gkell
%X2TKLV'Q;50ND`;0qID&Jp_^'?9%!bl)>fs[RsmJ74b"Rl7?Fb/L,?^itZ,&MJ.ZQPJ39D%PmTT,iN]j]Y4sqnKK\VV!(uml6N[u
%A-tfjWZm)M%Yqr!`8;SfFCIGV"8Jc8YE/S@nL/UGknHmL7m7Yb5M)gNkpV>dgrL3#U&Zka<%9(Qm:JR'a.(O;NZ=UD!sG=Vk<OhG
%9MpHmaf!7I;V3+6f-5SR_B[#3pKjf^TF1h?2F1(\`fD3u3901*3b(r/5>keD?rg3SH;95dV$\(jG_"!@r9UQ/N\[#?fQ$JNHcLsY
%p+f+-HC5GOiW5R>HVRR7gCpG@],),E==:#!N$,_NSUE(^iu/`,gZ:C8D@SVP4u*,4l!t@"*6Ep:"!O:e=-CD8"\84^&O!]jbDC\4
%Ps^9rZnI1>"!l]UO-X4k9<CR8JQcq2261EN0k<%XDqM<Rr9QUqA=gqoTS'5nd/d)5GX4G%Q]#I/5/f9"_@,nQO2ro>Le;)nk\>40
%///=adN`<0O+qh#SC!YUR,Eg"*E0[;a%uqIT_;=n#HERnA.5J*,R@!Fl[c,^<%N8J/hU*_:cs_PB[6kO8G.)a#HQq1Z7"'Jat6K$
%Fnt>936P]r_H@?Nj`!a7'e:S-A9*u*PK+i/IRrNNP?fYN\MVFpUEbq@&=L%o>@PH]l..92j$etDOf=NMb<_rj=rpo0e$F.E'T'ap
%ZuE:d'!o'dV<l1dO<KKd<ZDp@P<99^au,NLU<AC]+cC^KN0&[[+]q-E1BbmV]W(N=(6<7qN64R68KS0i(k&YKaN.bO^uCHd39\ep
%E(N$00t?@$:]OE("3&YI3LO;rD.ZA:=V=+@SZLKu8WG""H^Z519Thr!`2Q$HV?RHl]pU*!7Zs/`N^ehn+)6+$RN9LD%VMZY;5QD`
%NJ:GpUU)]QeI^MY4)ifr5[oXd"R`i1\EbL"-.Dl=Dkoks8),@MBi"9J]MZG3^6PdM,!g7,kR<S#7?t'PE="m7IDNSs_,<)Eo`@>D
%qY,(3ro)t^-SKAPfmRX1kZ,+n(Ye'FWB14<'(KEQ,gfdiB)Y*gYS.s!MZ/3mE"K,[4!BK32%d:WYSFI"j^(@I,kcg'iCtN9U/XOZ
%O0fcePqH&'?IfNbVi_=nd<;1o'P.S.)6"S`<T9V8nC3e3RB1i4e]#!N]^qlPQeZ,OY,aQt.]U#=:iS7u9[,S%GZE.jW`*K,l:r(#
%)/=(iI/R]]LY+Mb#eMisO-:SCrP7DU*U`JA!oWMeiSkI<3R[Vo)SPU\pE&Gq6gf3Vn*5ZKElWs-h&^UX*?TC[_iN,f]^Lg$[mBX@
%d-Kn!jWo.`&\g5[<Ml3r0+/J9Ml.@hW*Kn=XPLr!(M'Mge1dUo7*(FdAHKQ.6DKU=SsadVm4&RV4Unq8oo3^V7%I8UF_Ies@bja9
%7g#l/T@GLI&!KZr1,[+,0fBnYF9P'&mEH>,Y3ph.@bhk/ArNiqC,X31d3do?g'feXLN+;H?.Oun4_VDY_kh=9L@b&Peg%ihLhB5h
%F&4q2"1mqL%mK9)a;sSn*pr?Mh!lCt]^PCK4$NF0meDWgraXaR>oI;&-WS))hCUDj2d%YXl4^E,7@th[U8psR=fl,?LmRAEgeP4\
%.]jIGNfMCoUn]p6'6+>L3J6,s]O.FUSMFuGCG(PNF7W.>=sXTZU(@F2X:@&1RcW%i]V/P/];Pn?!Y;>t)6TTFPd59/gTZaMT"1n3
%c8Ej9j/=!+d5kLFF/FL@*+t_\0YrNYV>H<F;op'KC9P)gpZo21CV:6>52Ym;lAklopoC_gK)gHmUrSb"buC<@M_b@'s+VnZrD25b
%9tN:&$P$W#WJ:#=iF"HAlF=a9S%O#Y=Z%5dVJ\DNB*Q>@7Ftt2*%$(MW:++[@0.hgG!l-U(tMo)XM>tZb]Q9l9C=3S%U-$^F)(oa
%W8._f6*#.3XjFR$dRXdC24%K7WhYHfV#$ii8?kM3.pZZW3Sqf`.kpS5-I7V,QH02VY19kI4f?s8gA3Jcf'W)SQ8!cJ(QQu+@u[Qp
%4?TAr%mAo>%_:VPc6E>eTL8/Bi,eoSh6Ca[S"#o-c!D1'Eg(CXNB>sdN\^6$-:<qFk`.UBUPK0ud<pmC:FPj[fFnD4"@+!D:I(P3
%^3(dd$-3d1-f@aMSI0Khd!90'9L2F-3"=g$J=?a[MFGq/c%eQR'=^VIEs=Q4hL,6W;b&"V%WX&CWBd@JSI0NigpsmBCaJ9OfMc:b
%;5:CjUB#g*Motb'm*T:KHbuK.W\uCt>:`OmLGE$PKDp*8@d>bEWbQa8h#]djUJJ!%ZZK3r9r^5aRWa`6N@8_R=RURSkm3d=r5Ypp
%gi:8g[thT+k;^0J36LN+I.2-#a<>bTd!>B$=VhRYj+G\VcZ@-rS'N#7ZUXbl;*Jc[:Na_()We:pq5dFWCQqV=8(/k2'm]YJli6kW
%?SY-Fa:tb4hoc/S89mr_2cMmSREKDd$aOG!r8g8F_Papdiq"S7EWPD+Ms.V>LpQ5mAp.5cF`JX3AN-G8>l%a@VT:o`cTAmH"lIJb
%Re,G0CGtD^UZ(8)$/@]>"E'E./8NIY!&8oP)%@g=CQ8:OCfO19P,#LB@a<2U/Iu`eEg+hA5<jEUF+6003u-gB^ZFos6<Qos'V['-
%'87hK#>(%8DCKHt.Co>BMaI4gm\^@A`?Uq1pQCf,J&09]FI0T6(*WRuaEorEMhlVn*U5PXrmT]0^Z3@`n#,Qd:G>(>]KAKUrG7(%
%&oK1-h]i5+;1uImk!`D-0oVB.6+=).Qj/T/D@s57^jnD]=-9_iK"?VWRJ3Y1DIrTX%ULF_\Hl=Yo;O8VW%'#WF[T>h7[PQJRgIjo
%r5=\?>=P&UZ1JsXA$q935[_$&hQ#_>ScHV_d7'7!d`>>:**!/;DanoMk,3*<;k)mFp<;$M9]$M);`-eIB;c$X:dpE0S>FpJ'3:W(
%Ink1BB[5o'8#JccZb&uKN]<%U&rec8FaMV"8!?#LY3UIOE8c_qn\S^!ElUg;2tn?e=_?tC:;M4FJ+0/"\n?fRnP7iZ*M;fq^/o3(
%>T,LjYc4)*5r+H)cS`Y*R?42cIRg8Q0;a.ss"oIt6p5S;(HO03S6kIH*#WG$)2Wms1t%sVkqoc1k$aUJWl)L8'=4ffW_OH=JsocC
%.>".&#*J`1crG#o&!i`\H.#PWk8#tj[Qmb%PPYq'8!llchEB)B!4K36;db0.L4CkdA/I!km2Ln0["HmFMc9U<N]B,eHHO,ioH990
%_k)qHF7OZYIb0%K!Ro-;f;"@9NRXHFV#NU%5I47ufcEM%c5P1A4Y"M48&oT-M"_tT*ClDWjp*!i_GSVi\`96h[iFekLYVD#B>)X]
%+8_)3?tT5anC$tF?=M4[@080.QAhs-L775]F8Sh"hnNdt1Ug_u_joQ_OPKgM>RFEoiFsn-\d0m5c1<$Frg//3'irbqIfktST%h+S
%kFb_.Pk'?h[W'Y8-qX()$70P?Ue;h.Z/ZfbRQr+.j'B`>"cMdNLX#mmq&gOH0VIR"$mXB4LYVF$`RP28jjHG=nAC96q2d\po:$7R
%rZg=j%*1WR10eb'lC+22m,.uR9bltV6Jn:K0qFB,6p_oW<[".@8Lon*:%'@)95*uqY<B26,F5[=<CcLTF7f7TSZ8HSTp;c>F[s.9
%W7N)5rM0G'6JrSH6*u*l,#p-lAR/e!;*?R/X\@Quo'(7&VY^(MeIX65I^5gH?j5)-bD0l1hmBo)0Mt@uSJGC!"4I>[Y.]DO:A(7D
%5Wu\/eW#;@%qVkH=L7d9ZACKhCrSLVANKD8Oj8tK5B=e`iUHR_mMuNip-T@*p3.R=+$JsQ4&56.jGja1l[=fnaEQEQ)O:Sc[R%In
%2=k+S9[ZVZ"0i>@A0%`DEUnr-qgmH,%R[!d!_+;r<'5D![7Ca\AJn,aWr.E7S>`WOXJT!1iL3c2NV7-r/S/NWA[3a1k(-WQ]!Prb
%<OMn8nk[bV8*[ZQLKCTI8UZB^9i0N1O!0]oZsdE<VB0/j-7a'9N^4F7L][FX-H+S)`KE=,.<I(29M9:e[KSkLPe9^n&oGPX,,S"%
%:mXhPmZpn!/%BnPjC<JVd0mWEp$b,)e%6+#j#bS4lZ#$OjGnH<5482na7hUN-^;X'K<3%7@E#1t(;X3@ku+i@JDknjgRf=m<gI'J
%2LO^/VP%!akOC0=q&>*^r&l@.dS;::'k+jZ/U3XTZUP6)D6fY;Ef.E+!X':5@7No.[]EqB@*snC[KRF`.^.LR657BhGFZi-mZ_^N
%Op]ga.d#X9g-"oJ%KlZF&W?Q=mcZ2f^*As2%'bc`d"#+7:>*D<HK?o5$ln%t*O@)aAC;$WohF3<86hgU`=7I/',$j,!HUu9)O)o3
%87#[Y?OuEFZ%A_`%`*n%@ZeO>G@IBh=a1&k^50Vi`+XZ[IP$UUn=IT13/A@Yh_UGn#F%Gi.AZ_FdOY(ak+F99Ls+VHqL,nfGUfGM
%4.[>MB1KXVPWQq*30u^51=>P/l0gOUc1i>lRN`/u*Z"`7R43;9'Qe6t=Z=HW;'s=uPgM$,ZcrB&))V)&QH^aZ0VSq6$o'WWABLAJ
%G!/O&@cS?IbUbWT\k.#_#1PZ^Or?Ldk.dR6HHgf7of+>lcl/lYkKuc'No<%"QrjW5pQ/[PJp&ZHbfrO)'+%YL1)ZjL3<<q3'31`;
%%F8Snb:.GTE?^B.fI\#.:GnT."2eJ)7Lu9D0_oT[*b*W`h]]TYIP:^>&ELf6f-1OPjLgAS1fh".^C>2+g%OA`0tN1;HE<Yi5kipZ
%lK+lN_pLW>Uua"bqk_:-")m]!X6Vq=CO[^\4X-I\$JHkh:7j7p<o4+Fa<o>p"Z2;+F;!Qr'<4e@.ZXnd+i:Pl[IItbm)d=J>GkL?
%*__q`R+6+8pK5#QZ?ds'r'#HQh$^dSH`Xs#9Rt\ccjg^t`&4eFV*q@/-)R"d,pV$"7%)WDkgJgbC]c3-<'0(r/;.mcW;WD#>^t>1
%o.h=ubnu1Xq7*dUoE+b@NWC`42'mHOmN07]lPA1IG\^-29KrD7]]FAlX2I0pj$t)8a,tOEbg0=T^L]O-,gr/\C(H8KA50"63piO!
%QIMe22sc)Y.2<HV!/>_T/#JJ+d?D`@,S.RHb=-7ai-c0mC3E5m=e\StdB!SZ>r$+,S_5YddN`N)6(*Nc_U*Ra?q)RQ&YfB4,&?J@
%QkHcB@+tYu7"@Vg%?DH;_d_1lU]ouMZ[!U&7DANBk<&[t^>n+l_Z<bT0OLT[!;Al23[GP,B#K6uHnqFZaB0::DNBERTTbWtR2n&^
%_;*"'#T0Qa/1Dh]\0bFN1";=,Bk=-iN/7F#2R)bu`LP"%QAp'\Zd'RnN,*f^4Ie.N.J5qZbdI<%6#8m%3Upruf"&E*F+1@>Ki,p\
%c]1$l:ui0NZuXUNVhJcs^<ucjA"E)gQ.9>L5Jfg)E7kV+IIMR?5o.JPa%*@b%%<L4a5:54Q/AE7\E>P1p(JKna2q8U.b5>;m0H->
%("ZH$91-'L,><a#)Vj^E)ZHRl5CR.l,)r8#L60"eohj4XF175lVVH5fHL@>YXD]ZC8.T@R>--)#<];am,EJVl6RLnEc)ZORgK#gg
%I$fpSs5cAQYR/3`!^5^4U94092uM/m;sVb800.hpG%G\;>rp1SQTO'sdP'<lG.a#BKD]Tt59<XQ:35H$a'1<[mN2+1+Wk^^Nb_II
%]jBArpqiWZeeNL;'AOpWXpMTSfVl+2I:C(ZCfG[Pb8jhe`eh1q`KZ3*k-/mcdEm&RV>naY:-=4S[fj'BADiu,<^u>DJ9Ki7B>]u5
%G"t<7+,Oq!,d^rB:a4W'+er=AIaqqs'7Z'+RI)Qq=&XS\$<pHVk!ZL8!DIKWp%8ea>WX;9ht2S0*)$_-)(YHX#,efWi,*f0PRrek
%P(MSW(48%qptg\^4%[9_V?.^UmXpN-8\lKon;_#XCg?DGjD]$iKBGP:]:m$.g$impD[l,?#iOMPG+6B0LZt0NQLiF=$d>\_>DBJ*
%DON07crRuSZQ>Yn-4T-Fm^RfKk2S!tYQbQ^O,]8G>3!*n%5&Z>UB#\RH*i8HhY)#o!I(^R=$HO!]N>smO:OD]PPp.>mW]Kse-`(j
%MR!_?fS^kOs)j3:UZ]@DZ]9@1%3iIE_)IRTh\L-t?Dg9e`[4Wm.A:sBMr.67I$_LU^Yt^dbdFac=AmS3I(;h^SC0%eh3]=.6SS'P
%]'>'4<IY?$qT`+k+*\%0TUXRG)7<U9XG,BG].H)1;g@Cs9XmZN[c>HJMQ[Q*LK/SUdG\2k'f3:i1`T^`@)3:=B4.mU7dRdbl[uA?
%=;9QfM]fMdT1,-LAjV?bp?"9hR$4>q>^7OV3iZ+goN[Mr8Ya1Cd(5'bD)BgVltP:G'T2r/fVm<`"cmpr$DpfB2j9/3Dm6e@23BfP
%rA<qhIdd*HHVVAEE\);8AF_#a!(`F$oX5Y15l1404#MFY;lB1jSoI!>r8pT2^7(^;34j[OF8tj83."!lQ4((bV'XF9,nuF<$Md>$
%U0$dQ&]$b0#QL'Q;S"pl53=IY#CW\mZ[+Vl;8W*$N&m;9k#t#a9V`skJ$EJZUMf\.1GW31q?WlOO40&p*4BmZb;P&Uh\?;U:/RWY
%G?ia=X-o:0S6V&pq[CG]*h#)K%)?cQc,>q,bl$e(?I(1j\]*04*#17:7\R,",2^L0c5%dp.5uS8EO:\bdjA7kfa_smpEO";R1;`)
%Z;eBUH<FRZ\7/T0L'.-#kg9EIRH1p"lN/`&.0>H-VDZ77EKd.do[#mG&iMOl99-pEE8gg^GqXAkHKAHW9r-pgZp>BTVT3^5C#Viq
%aBTLd.12L:Y*sR<l=D*O!(=j)nY8tTZ'K^G@A0fM=fnM=]aU[&:gcR\[]`\Qih,tYXgn!S[_pX0luI6q=_6P7I'=gL]$o1J)WE:*
%#."S?^fHI3E0W#T11MdaU-_!(nY;,B$nN]b]`hTO*Z3&E."+jWMP!Bc7AQQE2gH*Q(<&1ei[f`A^?c/B[PDl2cJZcjO7\__YD:mf
%DiSl,;;ZCf%]J0&l]U+s$bLo30i^!O*=it!UA\5XF#g=.cBa`?n.*cNb6[Jp.s-K][X'*2*"r`Bm#0?.>'_p2N5kZTSu"8[P8Xo]
%$\jq9<'q8+98C9*g\7;`5]7Xp`<ZUJJ622Sf]5:F-[[[_\B-!ge(]M?H]JT9Sm?KTpShjUlE2\tPPJ[R]5;J<]iS7$V:@*$)Y37i
%I)tF3EE'Fqn/+K+l9&oGL?9Me+^4FrO*AZO$n)p(^Z-R,dQO4mBI.4eFk&Bf^N(Vj&lAeB;rN2]\cnnd_-LIg\rHa]iHN]D&=jRd
%ds/34^"i)7?mt"EB"<b\=n;e%m"6qj=DKQs2"i\@^"N9<''2l^>fO@"fQ^)j^U0\1hFnJY.*I:qd$/fj)aCHB4Z//`Xu5WG&:e<6
%$j+KaMc3Ta'.W`..0?upR?sq!Z!*KpBu,,nk[Gs5mh'`W.7L.o5AYKHg[%W>lgZM[E5"Qm)RmB4lr/+B_]4@if*rbsp'89O^2Joc
%Dh-:qZro>gl!)G8"[0!W*_=qH/t[5;34&WGc$#G6XaCQ#a^eqJOu.IVf;-49qUK$FlJ&=:a$SbJV;dZ^YjP3HAe#k&a*r/K$6m`'
%Uc"5jLQY&_-Bi'm8V_R=]#j_Mc(B.A\`:=?!U?HKg$5@MYJRm2gq468G.5"r)^^0;CKg!Q>I.:G-#3+1<\")kP7ZQ!UJ'/f?'C4i
%R4pDgc;W+m6bTt2+*s%">OXLQ0XYc[oPk6+3EA*4&DtE8Z&T<eag%'W)]]refd%S-.1+M;0jE.eC"bM^EatF$=KHjG2ZDsIr3-M*
%bm*KM['&G.B_s5A\-E'i]B<RpkEZO)"Ql@b:E&(scas/u]$X0cG_?F%OJ1^[Q2U0#g'5_rX`M+Dl.\-tU2#pF"Xj%_48rO]M=04P
%"/;(1p5K1(-X8O`7GYtpoh0)YWmf[meLun6"T!N9[`)IY,_,tUH#mKe-0:Qse!."R2.%;PM_k1s$ra`/X>3G>PZ*I?;'da9M&IP#
%JH^(:i^sfn/i9^32^@C6NFKN#e=@n,Q,Lc#3_RLBr5%=3VT)Ob4Kh7tB<oZT7rq`T__#8@0B=QXrWKi>c?ikQ-3'`a]ppT[CocWX
%h">^M`=VG3$$O"PpUh1LrmA>aEb1;b*Lt%&dOhj;KGb[/L27S_?3(4nM3!pU1B<rE$(ja,<#/0j]hKF%6QR?ZggTo?aTJ>)AE&eF
%"Ojm;=!Bhr9\9Wr@lTP/4HB#(c=8kq-K(P>7-FA/O6JL$Roqq9lPNdPU2Cn*H$nd\DW_V'a*8Y:)eZEPQ;RU((u,aPZnM%1g_Z8&
%-\SQAIFRG"?UoPdqg%hs?#\us=+6Vk"1&]s(K?tP@?q'e85`taAE'hULKPg%RFm[S``>3qK-E[um:FHR\bBlD>YKl`>ibp4hb3j,
%\Rhc*QU;#iP$rT["Ck9LHbm1@^[");WP;\@PiEdn?@U`Nf__i;2A=[W,L,#)+KP`374caRY<1$5TkeUa=e7!^mR)3d0,T[QUF]/X
%B""8pg&UC3j./tEaOQ?bSH8tuK+oh4Yo7A44(6sD-JP(MF7sK[1)FS%Yo<Gq[IpB1g%okN&:Na;Aq%Bu)Z*;Fb8@tUjOs.\NgrrB
%IVMW(+/XS,-aTji*@6?n7p/i)(>nt+leAQ1\%^htNYfUP8/&Y?m]Sq@4$dAW?(9E)$[a2RGFRK-qgPG![ZNVcj5WX1O6<T7\*l>l
%l1SCgYI;'Dl$Qb\_n`"R)J^),*H`83-:E^*FJr*EVs'D(J`Vs'%5jfX7E=Fnc!C2-a6KsN;3dF@ct#:e2oCkcPALsoH9+W*If8Q/
%h(:cm6)Q<q1rE$l.S^O4FWdH^1r3+Vo&Vjb>9[cj.'0\\*_fkTMKeI@^"or_cigZe:D5RimaOCNNqYf!q[%:*FWb,p*`i-_Gn9:f
%2sbf3lSZY$725T)E&4obFq;)U!+fM'cM%<$?fb%2+2CGaDj#/I:j,oh#.3:%k!c>.\,]BH?]/unfp4-ob&<n.gs:#r+$Z3OQ"Ek`
%!P9tV!Kh(`mlJA@X$ge\hIgMKY)8k;i_N`9HP+ug9%bb.IF$m<NP%t^dftuJYUfVVb/EC@YXrVH,(R!fXH9hjfj'-1mg#uD*Jp.M
%*>^4I[P\S$,2Ombn(p"tJm=+*fUfYJ#!S@Ei5Z1$)_ek^9X$YC]:k9Y'%1unbnF3-B7F^OfD<qPd/P-fb56YC*U'e5UL@X]Q`YAQ
%*KOhOmpbMKim+Hg+Nl!cheWbWP2jm<pkJlOG$9:LfefpP'"aR'\;MeZ0Q##<3H<Bn6ji/rW,175oS+(SBu#tSN:r\T4m-l?RpuUM
%c^6Bl:km9rj_',7*<>26RJ8<HT4R#g9Y=(HrcJ7aIsLednh*q]D6h.XkE)m(hkP\=#AO,F^1\^"*9<&#H=8IP4ECgAVdN-l)b/eB
%4/c#\0aV[#2q.dmD'(ACGLQ4Kk]0=[H_3qajQV*6jWF'S]:!pdEd<.T9Qikma`U`FWi@?k-M/lrFA0=9Qb+PATAXVU3T9u#T:Wa,
%rO^nbq3._+`_>.bq_JHM)$BbpJUPPR5%@um0sJt@fOkWZ1C!R+\,D80I$TW81@\Ko5%@um$3QKXYCHH7jVP+m]mTG<jgRJSq<Y--
%^Nob@\)6_"6%AXJP;dDt?b[:.IfI<p:]BV/.ld%sY<1pr<=uuY-_5W"o+H7%[AtYFZ4#>kjTqGW]^`E/kDt,/It,gp=F&ooO+5]0
%s*sV6s"1@&O`&hMB(qAdCY=.-Qrj6X>CuK[ofMVKT_Zk8GJDukO#Qt/jsKgZDf>1Zs7c9>YMU=l4alqge]T>Ds18)]DGTitqcBtm
%ms]T]/*ik3:Z"9]oBQ##q^52>/D^*o+.bX1rVH8t:Z)(dpNO.,^Z#44a8_JJoI`Z4o&'*\a]!6lN+H_V@4u^E`TXWPb(A&=^Eto<
%nVQ+4gPmr;X0@i$F!4eb>c[Nq-s*'pQ"C"[54<%!>qIIiFhV.<*(kjqEhV_H:(7$U;n[46N_5S]0o.7$1mL-U8Qt1IZ2]!@eLOTW
%m9Ik:V1l9<i)2DD7;a]dQ[)DkS62q).XPld=7R58>4PZ&\OfH(&g,'XV4nL'I$1sWnOdnVhhd)tMMqDDKrZVfmI!J-/R8NRYNE$?
%GUGR0e.?d4*'`!FhoK!'m4*W's(T4t<TeP5?k,*O]Sc^CeL]SiEETdQf?UPYbS'eqr[Nb"g=:G54o-j)Qc5'6!"WE4Y[(hf2/)J:
%kMCn-^NO9*22'H>UDNa6gtoSDUd8<K/pm[QDpY\Ok;<!HH-_GujGi5C7&D3WDKFW^V;:L7CQ^T&nIstGH*=&6N_m_7#O)4#+<<6m
%g.NM2PjHQeak9`M<]gEbL1`(.Nj=OU8$a'Rig(i#_]9]]HDQO2KWc0],5@*cPd%N>Gs,fR*RMuD6*nI9j;I/nO1?\k&XD,1-sXTj
%es>O?V=@/7Ggg9<<(:VROKq<p!%hcegW/Yj^XS+]aYZ;)Oa#T7d]Q",3khg/r-'Uk(Db*(>plc&f7?(_A4bb_</T(Gnq#BX<Bd]j
%O!`'i4L3'i_j9GjN'dd!:95G'./pmPH89=^ZG4KO[hHOA8pn&UC%pU^=eDT7_He;=11B9^al+R%-fg1$1rM9jA0p\O*b?`Ug)BTf
%Lbe'S*p0YR_o"/u^#ONV&ui7=A6bVar$i*N<TZ](d)nGXb(%P:96b+C]3Q_2,@)qN\p9E'r**d"beL$<NnXUo^rcjZY'ucE!'ks'
%M@)VJ==L)AjAW^i'^]CE"V)d%r^tBF$mM:-.pEY]K[>lkBl"@jfrU6U\I)f6aC*q(),N%QXqoDNc:P4Ge")9q7,!J1R6%'7B?I88
%l2;l:JPQR$:spPr%/N;>'n+V:a\(!bFLVi6Q.IW.+K+Ki/.[l!P1W([VaKbSBj%<^X;EPR9GqYDTORMK[\^hnU8K`ZMF`_o>L]Mk
%YG`NmbrIh%N_Ot`(0NPqWnet7Ms(:,Vg3QJ?L""S0/!Y:`+d%hFB2t2"%AYNUAR[9!1u\i6K?6r9&Q%mRde`A6'fk%EW`aL;;(eW
%i-<]ajZCE9PS5diMtFVD/@Fit,-+Q#&lZ+6atACM'WMXO`DlK&32i+#Rspc1.a%jIR2Vmn9B?M+9bG2l+<*DT7L4o^GKLKW?D9Bo
%Jq]L?.q-1JS!LiVb"IX$)58i\VH[aY0IE8EJ9(?YN*=RLi'^_aTM#rq,K::mA-d[:BX[n\BW_n/RG]:F73<-2:h`M8fgE#4Tgc]!
%9=9/.f[KDM/.)Q)$s4`(?6ccjU[*p?XbTDZoJX<e#.k(E)Y)h8"4Gq54j,W:ej12HVu9MUEk,\BB9^P/Lg_hjVdLJWY0?Ud!gPB1
%d&rTV<mqCpi=>kt+qndl=EMoa>$5#sR/>+D1.;3lR$3O3]84uiT+<pjUX,,1;lZRg3B6RV)'Vb$O"E,W+q=J@--<Kpk<rc58m\lQ
%5aJpi'-\&\)J%N)7#?n`PK>G#[:>4WHV&Sf0+H>_%?_s6/21PG."nE,]aO]D$IcmVWq,^oW<fqXd4d01]AtR)=\W)(\or]/4Y1*%
%'BS=3As8%W4=j,5<++:[PD;$(pgr^,,\!4H0-?W!n^D[F9R0b&c,;Sn&mk(3`2EI:\;J#m20jQ+W[f?s&=6tMJ[W"PDRfhNM)<E1
%47@;tj,u#H@;1a;T,Mn$P)=X<.Ar!T#!nBZ;cX_)';YddL&j(Dhh>I9\>^I8AOo4D-BL1%k_RkL?7@p)HX1NEHR0NMg>T2hEG=Oi
%8#P[[`/$%.(Q+I94$@C&cS:_cV(5tgcAPJ7?6&#G`^#&[/"\1m*VN"M`=oS6?[h3n8qrIZAt?`A*.?BRR,K`F@Ti=qq/<a)jZL8J
%CEhN=Lt\,]DR-9SI+FAW`)9#_b1KA=E"jc9^3or)j-#S'h3U`"McVuF5>7C4SA=kCc*EQJ>2;ocG'SfN\]c)&jI5R;B_Kl>6-F"+
%3#LX1S8.e`V=?Wpb[!d#d2mEI&-,l&ECZR,BSb1t>-D@#D^)L$<3nl%a[RhmEi;.6K]k/P3+A7h,1C;nMc(@^O7ANeC8.mU(/`Ij
%2RKcYME)sQjk)hN;%74j>H+l--9"[M=JLaK@?Eok&WK[K8&Q[P?!"omP3"['W'FFZV.)$1]^"h"?]moM$gmWWd&O,sH<i'PR>3Q9
%C<g@fk29=SNsh]J:uUo^i$DB+AuXoj_XnI:8d-rk\RffEA=B7=jh.*&h&Yae`g3(al6V_Pg7Zlh(gp\293Xf\ZGcrN>/K:2b9LNV
%(Mtd"AmL)CKNj979@D;aG=ah;7.8i@YdJ0'A#Nhun20<tI63Pm&2Z8BT3].rQSR;\FZ^I7nOp#uP=U=n:1u%0P9X.a.RLANFiB-[
%B!i(:\uA-',Y)"KHAA75H4Ji<UhhEqU6DLuMIeC3%MBbU2WdB5Bq<?6jE[K@Kpi7W<,DpOMcYREm9H"LN-At-ICXU=^S:j/J'P<-
%p^:R,e1QFFR6`uq%*'?*-L`kG2m@`!HMtMGTC9ZNIen-Pga\AF5MQ/8QZ$1pHhm'sVu-Gce#,FCq#.6P:N5kbE3Ufp!?l>;OJMJY
%>tbSZ5_ufe6pa=E''DJ89JF1i4@4>9\0P-uBl:i6'2M4?2\h;T`<IR%5SdoR$dA\\W2CZ$A(PJDkbrR]iDBJQXE1U)A7C@Ohl'2e
%?4:oc1@0gp?!3!g<klM0"ja0IL(u9#[V3kX4$S.[rg/-0Uj(RD8mJ?:<Sg`R/82>N-?!J-<irtNNeB]sdR3;%_;BLbfD_!@iF!hE
%6:!8+kDl^Bd`8b(j[dbrI5.#KXu];lE="E8LM5$[$^[:f\.uqfj8rp8PfHU9,/_38`*Y9E7N02GL)!SDUd>B7E7ZGj'b1qdL[N*l
%#2LFLG$GeBDf?BGg7W5\9Wu6u)s><GP4$J?($RW_EKe(j=@HM;i+Eb*F*JLf'$Xo^bm$FA!Ji^=!(-J>+0lbjPSauA4DfC#W5&`c
%J=#8pJ00UC[(KRfqKc/U\+.As'Bhlm7Eo*9eD="L^Kt4k>;NK8l+<*5]4Bj*32<JfdE,%5;T+c/B!:Ca*M4e3P3OPPE:F39H_IMp
%T<&].Kjf6f"n`52L%a@WR30'+=<L;oA,(QtR?usQ)/Cp2?mF%(oPd'"*bmX41l:lT]aiZ*!JH-27X$0C6Pkk[Bb>?IO^0OUd2RY]
%!K.+b4?<Ho@K]-.!,4_d.\kIdftgbQ0dq"%UFbm@%!lS!?V8mu0`hntiMES>+2sJ\X*IVC;-uu:A=@TL[ZGZXPi[[&>AJ!:!+?T%
%3N6:bj^eHeH=Z-RlkA28(),I/eb3J.,+u/-MbI#oC4TkFp>_3^eHqVpU75`.(-@YE:'IT_0f*C'LGRq`"@?140Z/M;h9mjfTC<jB
%/s)GD?L1s#0BMj\P0fA*Tcmj2-E%qI6hIC;'.p?eRg(I3'%+1;GCZS?9a2D-o*TJRNoDNu,TS"kM)1@\!&f\sjEC];"eZm`Cp4iE
%"EqDUGci":lXEVF*QhFQSC#<98qIL?NFd)WP(T&IKA#WD=H0VJGn1?Q\62;A_bH7n08F,f;F,Ol+D3Nh$M,-]er5tCb!9RHbX*.;
%"LQ_aZ\C06Ga!S[7\44sqm<>Rcg,bd[O->SDR<0#1\'9WXXI&j1AlhJ=^21Z@nKgEGL:%'pX)6"O"Cif5[*HY<48Ta%#GV7;Tof7
%991gK!#:lh@LA"A+:;FdZ7biJ:psJTd=T(FSREidr(0][`p1tQE@=R)X>4SPA#6N+-nBUDBVFB31D\h`UVINieOpiULICA<Vd(Q)
%^fG]@ncZ5:A^j.3&a73gMA=qh$:@'X0rLHBrhh@-PBp?a%G!<f"W38.WaPo&e8Omi0TP+M7Mrnrmh0idS0q0rlKpX2dT/'%^^7&V
%%%TZCm5hC?['[j-8TQ/s"?hNg(=5qj.AB=8dC\sIM`PiuEpBf?Js(_\km8-I#Uf/OLhT^f6GPTfaT6S$@"b=@;=Xp-MkSGT&I#6)
%1%)I!Ci>ZQGoffF"lG4Ri#fbp7+KGp]`NF6UXa%e$b_ORLV#"-/c#^$FQ+bpk#c&Ma+pBXS5btmU*Sjp6uW-AalJG'L0uVY/s=-9
%ok&r:379Xu7;`i"Q/stuJ"\#%0'!#pX.^F<G!08>=W*nlAbe':(_%]NPlU+``Tk\sFe]$(3.-70BhPA#d`+.a'sA-MA*"ojZLiQs
%'qJco65p$of9SfT6Ylsrq:Z`,bn9J3rGK<8bQrL=BFdPuJs^S!rLnHt"Hm;%]#M5F?Q`8kaOIIjKbr3BSrPG>o[7?)[*Y5"$!+tR
%6T6e$.MC@QlW).8Bq]9`"l:kt"rS8s9sJ;a@2I(&;Y7.D-Ei5?1:eSM6rfiB#W6aq,EQYe4l?4MN!st,%Kmn_U;2fN_O]mI!1&U5
%Ff&FOf+CP):k*`&#p:e$2QYdi1rNXbpOK4gcOjaDV&sJU76h:/9J0V11JJH>)Ea*U"=V[Znm3YOB[rI`<"ZK:bQW!q5S-s.M[YL`
%;I(&l5&F>I"oIdAOWV#"74]:06J+`'F/_=Z>L[.m$UY693%?t6>RG^$FAP2A4iK3>!t4lXQl3+lfg:rP.c8(tkG>9_$CHE?/-cBR
%@6mI\6l6_*Ta:hRjE)/2PgAuPb7N&sN_fkc=NXmtA5F"=UL$"Rj[GuTBF%D`(fqBUe3'LmU?Y*QLZ&+G7\L04cG=eY$5qeQAcZ9?
%6WQ/J>\P;p=F>YN!#q,?OgD>eDc-@-\6-`p+ttcfd3(p)\.74_VN/a&.jE"R6!t*TQ[)k3k1;6d-9<i;`F)(d_ZDhjdDR$j"RnnJ
%1r((GMI'O=%Mt(p7!D@/.`*'^O@Qns#29,*(0MF+(Y!P_nuL$H+:l;2&.W)&U&tB^nBGWKRbY)H"_sfb&M9R\f!7-H_1?`4'SLRb
%BL96oila"YV*UV;Yu$aZ8@J/uN)M[2+_d\3O@gW"YFL:`[lgNRV'6b3YtA+rjip6FibH+Z)(lu)^%<koh@u`CJSgJ^nQ*^mdbslr
%VD)a%mu^ZeWQ7J/C.nh`Q0p<U%f+iD_13,N9[jlr<K-fr5"SBMi&T_c6r0j+eRJW3=>5V`/S_FS`rs1RLkrjJ47qBJfI;M&93"O1
%Q)oe(667t!1b&q^gNit600tXd@mZg'CY&h0is1BHT*#)^_E0j]XKK6$KET%["6D3E1$)bao3.*a5YWBXSqp92HkeG_["qls:T^ac
%g'l(dY(SY8*QT"(CU1+#<"uqY@18TV4lENiJ3,;+`aCFVUXHOk/U1^*!S^7%8<M)EIg0+2NQ->#q:8@!X`&iS52^<_(b%']313?0
%bG+li2556KB$>E41R]U@jK'"n9IV,qj,c]^#ci(2Mf.6:BPlZs%d")I\`VbarXmg^McNLsR2Fa:Z+q6O&$efK&Vg2Dkds;dTJ?]X
%1P*;tk*.-`&]RbJeCOm41r>ue$lLj_!op[V9K$T.VPBI^k3Ap@/4&'Y`/#jCI`,X4&@7W9+[Tq^"jo4*1ZC%snM_;"FENN(H]2d8
%,jV1;H3M2MGgU?.K,C^Vh\/(![4l09i*D0W+AX6!+G3r>*&FFQ$q]3D(><Bj8^^BBge2l&9tD'O1,Hcij8kRW1b]7ihn`=AXofGD
%F@hW%V<;R<&8cnqLH(@73*O;RPReD1JT2_&Wb>`'B?'1DZ,2P=IL,:$qMikG9\"^]OD-etHHcW^a6pjm[;u^P+ukqiEbX,K"GW:Z
%K[_,?%"l!c\%kcjhD.h],'ac^)mq@Pbuj<E`+q&VOjUOJI1bdqp0S6,5RR[4>[&EN=(K?N?#@NokaGiEM$hF"f,U.bYXAQ(^b':b
%_l&ItH$BT`/_pHe;n4/5gcEnDCWWl?#eYW:Xgj()$<[@,6SB\"bpY3M:SJ826GLs^"MD)o-4-<d`"l3N&-2uL(rVWc,U?dfULkr%
%%Um7i&K%BB,0"GEGHd'HX'18,bo@r&,4Nri`!DDT1g8l+H%rC%hGSE*;XT)O1bUPEOXMG4Drcb82oES\Zot8pAu;*:N]cp,*q/)3
%]%QW8`&nHslA2MW]RO,C3(Ss$naX?_P_pf^,i+kBWRm!:J68G;pNeUL4,S>efZ2+pNe'$#(!*O6ImPJmm+*V%#]q)-Vr3M'6qfK"
%"<)4K[#%L#M<7n@\V's^f4O5UXBca&`DG%E!&UGoOJG@edgkZ!)2f/ZdD2B)$cqrV`pZ7TqPX]T%,MHS$:0/Xk(mWDD>8_0Jk"9Q
%]LR@Lf=VMhRC0)%Zr/+nW0ZPsCrmHRo>19)"'<p&ZDA$W'b0iQc6:%-PBoehK6uTUFss=<LkAaj%7XK4'7gh8"rX'bnB%+[M4oR6
%n2`H$.:^i>U^eo:AZ)*&%0V.<E4@g!2.R1uk29cEc&#+6W+lZsrY,*Z"&0YdEB)`MHpe1c%"g7O(r1oAp`ElH/K=anbU^oGZ9@SM
%%?:&g!24F.bD>1?P:h&+Qj&BT5(5dG!rl<b,Jf\fNd=+V>I%Z+e#l2U7QMoM%&m6WLXZRJJdhr+/Vp*o+i@`qYlY8jLGl6#QsDu6
%Qs#3g<7bP(H:8,^d:dkR3_l[a>#XGe?dIC+BT[!i6]nrJ$kb!f9m*]8J=/"-.\P.&^uEcWs+f`\a<C_:cLb%EL9P(4U(A\Q#>G]F
%g=[^0=A'EaO-/=YG\'3^5kL1*_Y(na5LF5nC[qRKM$TO"X=YV8U*)j&.Vb'5-J".bXohGVHD.''iXlrJHs+\2a?UqC_b2@_KlC@-
%3WqPo#@PD/e^GRt6>L)qpBn'4pjgo:gG/qHd6&>[/)=:6E4$]:5Eib,*!<pJ@EEPYP67M5WK@L6_UEBQGUGC&F<OO-19<=JH+AK^
%F$VWp;;AA?c(]OU_n9+lLD<G&o+=$UZ_\OheK<aan3_I:kTE!PAf^d#B722QN>sb`2_7:X+9g288hflP$M1$kP0lU(#q^!>'oSM[
%[i;7kZa,*HeXSci>,osM$ME''8@ATTUo:XjhLH#L69pg(.TsUYK`"Q?"X5>5[p^U-V'B^&9;6)'q+F!f%[3XJ5YP0)T1UEYnQ+*t
%d381OP6DoY/QkkK1E($SE*L?=iJS`]kXE8iq+b$4J=omlC*Y>2lh[m$h83+u=VM^V+VI?#%Een84OL1M(?HND5-RHZIK4%Jm*JX\
%[K%6lEXfBQdlSH6pK^oF,gS(k5ek\M8A8:ZAVQU<?ZcKHdtNns!X"+hVn!ln#*gG#(+MkX6sW?6eS'\I2!'Kh0uX@e!^f<fPAd]?
%1?KilQ:-9U3@M7l,)LuK\ck8Kec[oCaU1fcVBJ=RQm7E*'hblDM$$rJmKac-rq25u-!bA\iunY61X3-iL--+*1*((dEQ=<3(Q8Nh
%OIM%S5$i:sO][1IWNWn#lc:>^J1g%CZln<\')RQ4WO<r;Y]TN"lQ+O^jBKd*b0)?%6&&P)Hb[Z&dSE=d)Ti@<RQq^O%0C%5oEcQ9
%lo(OVTcRX;M78<hTI.JIUh(\*0EUGdpo"?:Ft"tn7;YYfq08p2kd8V\!INs^_">l7G)u)iRg1DR!Vh=u>ZO3-.JjE@JlaaObo]SL
%I\U`br?.PPVkA"[U`XRklRJlk'd9fBF9?iS0O*P2_[P^lG!2SAWS?(jD+8B&Kdma5#ls6E'*EYN5c7r9SdZS+cr"cc2p`N9*13]Q
%$RZoqV!aqM5nK+tR+?2=o`C$o>gNli*f66ord&:?piEqE?&2!?O"W6&2in10V4fN;pHT!koY/i$(!CqibZt$#Bf^B+2#rl9N]\o6
%0t.^<.YO%[]barpe^R)].LdU-6Wn8)<`D3KQC%;+d_BSk['X;;CR2IC?m4+C!VJJR7kD$90,?+t'<@d_^?,4JrR+L!WGdEO52^<k
%fgq$C'u;,7HC9^k4I-Z?8oV!G:p^9_EMtq=\+l<Ccm5!5)Ildr+WG/%btBk6,EWg_>\I)q"AWM#((>:;B?2mNA].?+cOQ#a@f]"$
%NF>m8ciPNfN-.'b>7k6*P&J'Ue^Sc'(^+8cX>"V34d4H;V0>t-4.;$2cGub\$&GHJ&!.ha=JZR'Q,iX+9g"':"gX[AU3HkW(o")?
%GbAX<#Vf8-PR5i]aQE-r]A>??+fR&O(7CE.^GI*D9:dmtAT;F#Ff7\O-pUuBGaN(Q3:$-C7?hu[U<jVG?@$'LL"9cs)-@SVA0-&G
%C)Z6^8GY`H<1*W/3s$_p4='fQeR+BFDJ057%:@+E!e?Tgm#B's9<_#eGJ'&S"o#p0C+o8X9+I'GKCts*U]gpt8cV4+C4d$HR10;P
%RABriSLl)>MOD6fhB`_M$d<Y-md"Q%%WT]K*m\Ai`=cd_iqRndLqZ4almT;M+[?DBQ.a$e-+c!LN7LK,J=o?<4JXqT/:a3ub79TO
%hn"cEb1e'^.&OB*K)eBj`^_1'?l."SaVIg1DMN7"MiNk"&\%u_R%Jn`[13S4:n#.POb5TFPc:1\!@`oWl#7%\o4E;L%^N(u#9i.:
%?N:Z^f&h5b`rQ.u!IAU:QQ?1Z1/hNGaisBZJ:;H74cI$90Rs<K"4o50)XUu6UWutt#lMr$=!GVpa&C>Y%+I']WL70@1V[SME\ihU
%\06ka9Ne\P$dik!(5BMs_5'8!StYh%;A9KV-0k"i$S!nHL`(MT5n@PV<jeNS"#$Jt4d"9;8GUE4qsb*/$fZR<`[4p@.I:a8Ai;"R
%R1["'5_\_:k/O*Kl0:H:RA4'Q=Z7]89eAcg9,jU+-f?SpQYamLC$Y8^E$`Bs7f=%,5k+l6h([k9GjV;!0:AJ(mC>i&c<cttY<A;j
%!PlR"WG'9Y>1gN7,qIiXjqeUf`M<MD!>C,grbP"..,BGZ('m%c')],<-aJJ`fl"U-O`E8^V7;ESH`In%,PS4sAa6!9I.CmDqN2pi
%W-ICL"6)_',(jo4LIe4,!"X?pN2GW`=ZDE=\WO$*G7M2(ND+0M'IQWWLmj2)lCLS69^BkHR,t[pWWlCs`-@uT!,k/1RU?oUM8=/q
%ZkT,tV_5uSdY/Asq#><)LA-X-B"XCBH":k/i<(fGOcWd`=sAQa>1ug/?F->Q@qN5P"UqW`\#)$)5B[4C+N$;A",`&nZGadT$bdAa
%#$_Z94&)b^LmjYFTS>-uXDgNBqgsk&RUQe%*YqB[[L4[8#L,n:QAQ2LRLb?RPmFY;^Y"^3U1KZXPgS3#f)^G7A4.3/4QNk%H2I_#
%K="KWDMQ/0,T`lfO_h9NL<uEh&_-O^N/]c%oJ9Mr]F/d%IdAFK-fZ^6m5-QK_9[$@ZPiJS_Gfq>,Fp&^2F2k"$Q?<^S0&3*M*O<I
%&W'!cC]4R+m82T`B&kuqB9<A.JKQ9Q,Sihg"09C57fthN*=0P=/F:o6_?]QfLsKe%YE0MP`(CC$TV5*O#s\RT1(%WpbH7Y/?-Y<]
%n7bcXTVXP#g(5*r@TZh&Eg4iqaF:7[VT(GKeA)4fDU_76q_R![/IJ9`@$q>F!NL5r99o_p_$)EL-%ZP!CRk"'j5oq.`K)^H,EU&S
%#AB%:(saWl%^)Y>?:mJ9"5B1qQdpKs%Af(D`aQtkmeHSIWCthG8S`(g^LV2soEG&K"r3RVJi[_"iltF,B]RRSKj$(7"iN8K@a&N#
%7oC^uf*SWG.5b=0,AZqU#g0!6*\1\n"^`F7RKKoBb?`[&W`W@=>*_I:28+dG&$kp1eKG'i.k_578&@B9"ep_O&X]8K80'!C+TXD2
%j5EV@cH>8`6q7/2#mCn/Um6aS6&)@m4/;'M1ol[g!&DR:1O0I6W>/.*_A^>Y1s<0S<^)C,B>tK>BC'D5A:bR^iiMt(oL%un$7JHs
%D*,"iAVW$I+F88g"q*P/.u-:<JqfN;9YVN05_'0/Z4$"*laini'JsBgVj)&7_f%@j$4@^A6367%A)0Th,n1QS!\nEt`PYYfVh+"Q
%47(9C#>b)JOl:%*+nTTX(-:;cnS&`/VXtuPmL(BUTT)A*]N>nVASPAD61*[qpPKf6VYeG,BoP;!4W=C*V]<hr(5u?PZA0%\D)@._
%+Uuef=Iq6=E*e(\!+Q!N$F0ZEef&$fg6!b3bTp\:KuePeMMI=)]MPRnc[*j4B`T*ZYZZN+TLI+/9R+s/X4eguNC6YI<m]dgRl.86
%6+T'+)puNh2%<u1%Ho`[nsU09K]&^n7^QiT2<Y%kp`-03B>mAAX99+h^T]O?=P!-c7,V@D83p3MV!7hVQ;Cm_V]EI,EI?12<#p!Q
%Fi8j).gSOQc7bWCKEt&q=WtfBE3suL_"`IP9:)!/"gLfJotcj:3kGuJ$6qG=KV>F!$SPl)fs$3EhkQh&:q*BG!fZLWmp8rb)8a:f
%#cDukAAgiY]=VGHkr\QT8CRInmG==<?toJfpL!t"p:K',Df3>c>->)6>s@d;:S,8tqXEd^^OH.HT1SMDbL`qHq!S(ED>2MOmJclF
%n^e/u:@D>>LRN?8RTS(WJ"`uq5%A'i#g;$Se.uQS9fW8I7I6jGM?-lM15muY!J[re*p.4jM'h@jOALn_8nf2\if&RX/grPD.AbL>
%"p]2R24DUsTU-R]b@hci+%UTc.S6='e[Q%#-N!OuH4n@Mel/)na:UU*fdu.=fI%Z"B)N@WK%q'="g'?Uf2P#TYXkXE!;L6K;i7lh
%b'1`36f+m#8@1ij1gY(GCZ*$;ahD*5?OKH:Mpo=%%jm8O2%a31%4S8iW1dR"[A9%h;-e#ce&-8.M"Hu+0AKFP!I-#O#';QJjB9eE
%eBQ!47\81%l3>V4N&*YtRgAsaN!HmHA9hQ)UX"I*E@>d]8I"i:URR\96LPgERZnL;#cQ_a7Mj,;/]+$fP8NmdCQ(%l2\`VT,8b^.
%^'A2IaYfAoYp$J.>#,VC0VP..@p@Be7Rm^u!e=_Y$=T5sFP0.l'D2BLAHk)UL$LgB"gCW%1*@Hc)[[Tg;*)_@YLX'kBZ:a!8Rmn>
%Al:Gka]cp%UJ8[Y%V5+&AjUhb($ZOu2)+lh,`<EnS/Ai1I?#4kk.+ITg1$tB]qnoH3Phl<OqG#CoIEhDH@=EZn@F0R0a`jH&]T/\
%;gK4]rN*EY0E[E2[t(gn`^%);=+nq^,cS-%pY.W$Em[O$ZsjJ@F(,"og]JB2+^3/\:42V?EMC'b.K)ocWX]6,!+f9AB._'ODFa%+
%i@sEd3An+Mn,k7Emt`eS72H7=WRo7u/<NpG^8d+6i??_g%$A&9>(RYrqK?[m>"cY!2ng:mR>U)BU&Ilp^3bcEMXjm5jn2#p[j\Sq
%)(P7/Q9]0s]+Vgq1DJ'9jLqQ**-o7el1p9@\\.9%HcTkTV\21P<nAm*iGj0$/Lhh]j&EZ*INE_oWJqbLLI4VR;K[!D27Fj@86TrL
%qCo9ef_$(JH=$]OT8/r3\!HHU#B81+a?M's#6#pNnj"?>iXasI&oi_lrB-h/+G5iRa_:o8kb<scKAm1gk6amFd'm:r35Ig*##3Nj
%3oC]h.9``GLDMP2Y[&e)eLlQMbGs1IF"M,LQ$Jjt*DjRg8_FBB%u?6lOJ0I'+r_D4&mV2&>!/_.Z]0(WU,=c+jX;]N:j+Wo#c"5I
%BEBbR/9JC(M\B*YB%3lFn]O9FTJZrc"88u>(6//G\L`gBb..@/3&6q(i,@4(g=BC2"#:r6oGoDnn\&UuOj`M8/SYOiD07p[j_[Ue
%a203Hd`=q6f`dBeK\4]16Ib[`AtiSp["K.@D<SUI,[h8;AL/R!^'t/79f&3,;_3sm,jNGa6+*@!!+g/XP?h0J/<MG9R3>G6i).%C
%L67&h<XDW8DR>"NOD4O3UkSnC3^b>g?h6't*HLsA(=3i!fcn$Pi[`BpQ,OJ(CL*$jT&ZcG#b$#C5S\"(j$kFE_T27nU@bMJ_s(`[
%.o@4=Bm%&Xg41-X\"d:X;lM]<*M%_K`)^>R6(,KLLD'nK(2tnQHtae1T'!g1JFm<</V3`E,.q$R@Mol!W!Z<^/r:-4,XK;h7*64n
%2V=5+k^PEC7&Fm&$j4gVH5Kai/jl,60%)_S+j#aUc#.KD+G#EqXU$0p;$-K2W3_p,+E_/S&jB(X/mZ8M<=f25\ibPWNAtN&C=NmD
%K*;9L"e`;QhQeOV!%ih[M?[7r`(Ap92'Wf#ST,/TJsQM;H45Pe@mF6&WiVSp\C'Fgfnf^J)m^P(5XgblmPq?OY<XXk-nM[Z*2-L<
%]"lP0&/cFciBUiT&udRM`8ZuI"Y)7k3X\Xt@.'d6Y]VlHb>AAN:iTZ2m7@g<9"QXsr/'N,elNa%2H.f8ab\/$@-oH["hl&+$rN@"
%b=PV+[K,ClI2A%Q$ZL%61kFa[efg3n@_$\mi#T_a4)k58Qj,$3Hlr1$M-n5<M$4qu=BH!.(D9d[]:Ulb2tHX29!mWTR6$]+NYY8*
%b.;8#@RIjM0GtSh:m.jl<109i'k.<";C!)ml+O1k$6$Td13R7FI(*"JV<K2`;k&M<Ba5fH!3lm;%?%)]7@')si^KZEJgr#eLHm?3
%>lsV'qqE@'*<B74rke@7+E1od37n=q*#'"X+eE4Uh&<21m/TI,OGWTfg_ICT1GVah!MifK@1OQO5dW>+7]3U.*q4c&M@4/V3!oi+
%P`q"QZ/jXc9je(;_6dR"\]E,UqqGhbI50iE#+>@"7pa05+<m^XYpt%*jVEir!D7M>W&-'lY]shnAYVJ$^oi#VjCjW.,K13-1Z=]%
%3ff^X8nJZ[^u-^070C>iLaIK!'4fS8/Bq+m]]5Ep$PiKql8XO4@!9AH_mFm?X^VO>]m.e5,uTbnQI.tg=?eFE=^XS>AH6=%)A#,L
%E(EgAccZBjQ,kh[fCA9#X""urdMH:C95idI`c?5K7KnB,*e4Hj;iFd;s1hFfQ%.8?\;sEsJi6jRP73A4m4$`:@ao2_kqfGP`k>c]
%_A`_76t!iadomNm9U_D<EXU,`Wro1u>FZ:m"WG<cbr_eVL0eZ`_;*Xo(-Wj&Q_B[\jDC:P*X"aBC>pYTP&VY/HC1uDDEtY'\/.W:
%=J-GNi"N?KPA1h'.+k=OlW^HD!fmoIXg)G3W:BLaiCAQsEI[gYNN%l`$W)>sqe'6r9L/bFcPWjLP3YB`kGi.#\RekmS'f0?cFJO=
%<ZJAH[em4:N#3upJe8F8Z^NjUEJ.W_)9*eK)ftH/j[+LhNkSar?Zc'#8cqo+,0?LBAaK!@G_lD5GUBUI*G>O;e.S:\W%>r%@+()_
%)&>#ciMX"]"%pj#Kqk"IC$G3,!.^B?A\_D3>Fd(0i?<G8$/ejG!EpE^V1Cpm%Ne!oU3b!s^:KoFTOJ6[_(?Rdck87b[eIFF6I1KF
%GXY7;262H8CJD,kGdH+gG)QQ+j/F;:A^-C5>$O*s+YXkmHQ7#1H7HI=dO'Tb3\j^5%U-pmUu[A]XRtAbTk*hdJ>?(UVd2Vb5%)f?
%@HgY04Ab;0P@!M\Z_Kc&$rSWG)UsISB%[9C/<I&j6oZJW7UMskl%0$bOGN0,,9`LY+:e/i^eJ9E@J,&[135,7@Rr,s1,+bsop3fA
%pUmkHoGT#Oi1H4!W_"gV+Y[U'#oJi<2N-T2BdTZc<UI_CXlCpd;K3G<RPOPt<f9LAM:TP$.RZgB&#DY#[2p;b7Yf&b>-pg$cVTi=
%V2;"`7*@WFHQ!h`N)B##kSX1`Zg4*hOBMX@q/uP>`8E3t%^K0RNWcb?.N3lbZugJO3q6"?RAiYh0!4?ujC51O!CRhlUD]?c__8]X
%MTmD$+;5e@X)LCbOH09s(1q0i:@Mi.ZtO:hTG>o$@J8&&AUt,mqL@j^+do"Nb^*Nk['DFs?l_Ss";P&U=oE/*^oL+]Dh@[<>"JYn
%KTif`8=9i,3k^-jFC6H:e&:;pn4AlNS0BKL%_Wg9'n`g]%,t.Ha!h$!fec\>Z/D:`Y$f&=K!?\J>)!%ZWi`930O;8'p'\kSSFBm.
%Mi*l(L.`mA@ZJUu=&gH#@WqV-il;,Z<'QK7:Jj0V:`>I)j@Z,bJI>Lo=k_6[=LF[M2q@2X)bL5WZ4P00B$V1$jnrl4'JfrGnkZUE
%.VgG%<`N_8SeaLDhZpY"ZneRB)rVbNE\Zqb[P`1gY,";\[%$@!8alj`cI,asQp-E7-sEk,-!NXcBifV_lrI"hX:bfbY]u>\adphO
%HuSid1ahc\EVX3p%!n1>"9S6(LYcafQD(-X3F#,iXiVb`VC^f/>+b:o5>`)'QY-"V&m:B[HB[9IAjiO6:89-BO/B+9C9%oV0Xo=S
%"VQ?a\L7ltH*&>G454No3h,*m_@J#83Eh5Xq@8#6R4D8V$ug5ZBUrG&?Veb/"abV'"I1qf9@`=4E?u2Ma@L&j(<i]s[Hgq?pJhI-
%@s"^_`:^Es@(A&J?"UaeFp$1qeH:c?6\e;J`n:CT-5K.\*3Ut,2Bua*6^\Kh;X)#05Z"8/oW0AEcXOr!iEhYS&10':9#ipr(G,D9
%<6%l(?o%%/j/hBLcbV*s(rog`A>1qBRI$6X$W*r2p9+Z>)M?#B0rQj3kEkbXs,t7W*rE%3K/k54M6Tu+>F88^NR57r!:sDhk%;i'
%93-d@a$Cg%W*oO\;R8e\=V`m$>dNN,p^)d]*&i5dUIV%Vk2Im@KE?Z5PD[F-L6W+4dU"5d=;tH_3,\)XRQ88doH]!<O]4RN1P1g$
%"fE-Z>"So/`A_G[CeX(='2m3]Cn7'rVZIY^(pY,s-I+Bf'X_/sXX$$qR]=SOJFa^?M[3Smh3WXWQX_N1b.NV.*0LSC*0Yml(^,g]
%kS>$eo3#%ml&jV`,3-oPD4J+t\V5<Y;'QdtMMgK<Q1(+uPV=eBB-K*e%No!b6_^tB_?s9nIqdFE88<S7.uVscCN$(`AD1N4Na>f1
%,/j[aPS>0698prVDLJu258t#)dMD^T`/b?#`"l6S46'c;g"G!h,;K[d)G<gR<6(lTCB"ojn3G't.,f/LGN$=e!XWF1$,B6L=S4!6
%T0Z(kE3tS(11#0rUVP+_8C3;fF.gI=c(oYa]!rd=7#dbVVQVk1]`97n1C7\m-^"NLISB$L#ulkgQfn[sB2f=9$eDBHUmc7NkoI>K
%8[kMYpDg?7CBU'LR5"`%k@e!S?FiJG7(CW_"b\Cb]J6i(I?uL71FX2c>ds[IHpod&$Wc!,fGrC!i\MM-\cWB=bqb`\"?!9>O=j#m
%7G%9-dUd`XK$<<+FPP*YBt#M>755G1&O=l`?"!0;ZDI#j1SlP[$E'1t0:<*p=EGA(i1seNP<*\'G.$qTRT$=h:#k/$<Pur10IZX#
%-jFS<&`bW8I_ki8ISOSQ(JAF.30QsH_^Z_6D3WOA`Sk:*dP=^?r0QNs1T*3jPQ=a+9(?BG`e.-Y;:guV#fQgiP)Q.LMM%mb>MjQe
%nQ(ViBL=/-[CIo(AI1j1?tJ$ebU/@-!R2Ug<Y?/.Z>tdHGu&(s9I5_d%ha(IkZ$Qbas"KhObYIR(fp'D>V-.W>IhX7D*3#3*Bmf,
%1Pb"5Me.a,3#j@P@.W1eLZ@EOQ?D&'E*sf;\YTaRE(WbBXPkkA@e2*a3/<1:8/our3,&Em7-=s`<l%\@%:sdmoSq-5SsgrHGJ\=q
%NhE9*n:`+!EO!/$7e`8Vb5d@'Kl^IojNkoaM06)oca^i[1Q-q[:)2(0g??h\_?mB-+P3!t_.hV4>D^4"OWMh^_@&<nE[t!HnrH=0
%Z6]j%g_pEP6RN3GAKd70#>mGdV&1fA&qttQJUAr<-QJ#.$.Ko_E-SG*ZGX3mEd'SR7jeV`%Xh=A1IX:/Kog=/(rA]KYa+QI&C+B=
%I*`<e34ob7F*Ds"(+`26fYL.uSC/98GUj[?+6;@QQiq.d\A?QW,\Z(3K;4JO8d%1234QDUn7?&5#LuiV8jA]Z\M]n\'/_`tYT.ho
%fM[?CD`@lu#;nK]__D2JW55BtR2T>"IAc]iaonU7DasTJ%HU^X204Bpl%8Q*j"sZT7CSG4Y:U]:E,B2eUX=_c?HA]Uo\_"YJeu.t
%#=gRoD&N90,YC>Y_VbYHP8Eq8f^aY.M[%Tlpq]P%[?0Ksjp0LDlE#Gnr8:g.5^GKt_F^ch8Cfp9K[YlbS6lT>\]5WS:HLj%$tCXK
%D>:rh(JO,[c4<ZZ../J0$,Y)a>Q8LF_?%;!H+EHtZ[p#,o\eMoNE+.@H>l-],C>rC:RHPoONi.7#A56K3oS'hc>:c0Li2A\8)T0n
%\E*s>/<k3ijTe9`\]k=C39bmO0RT]%a'qJPY!ESYF\:oR2tZ$]E_p=*keRQ+1<\S=_26h[.oTg>_6G89TPgud4)W7DNS+'C!TK4s
%Cs*?Lj[P$"o7K+[_#lRZr8;89g@u+A\Dpn$frt>3#TU+8ABPLD3"b,Tc4<YWa[T?3q8"pGG)9l0i1AH/2%>"R:MRjn7Lr6,+`<=k
%S$C*jFunj'Z-FpH4l4P<K<QJ\]!'S8>FEDt&$@M@Sah>J1Z<Q<#@DE#q8)a'"J9=UE.'nG\Af&nIR7ZLf2%qUSut43R\PSl@L-W=
%i9Xo(2hN0A!C94&>b_NOD^Ru"6P&U*B8Z!Hi*Jtuh+A1fN0Q7r>C(8(C'oW<H>m83)M.2Gi&IWT6dZ?+\7[O%od`0bOBp9m%!lm`
%a=:Wn9Fm/_CP:_;%o*+4Z,dC!)](>NjGY0#SgBN6_%2PARWjB+*,0qsit!Y)3#UeWO[5-PS>='`4PB4Ve);Nq;We;:Q<I=<nFb3=
%5<,2jk5'7ME"Yq1:8l/C:AVN?SDTSR*$_*ZL;jbLgr7X_)*^*)).fbWo7K-m/5Y'C%h<%f@p>T$_6KB3&pj&"@n<#gYiQ*[ZYjL2
%$,Us3:rlBCNhqV8a\38+Kl02FE[M,ohG)l35r_7WJ2)8cdAkEu>$8Wb3"@)ugRTJBOl^(mB*@1h6E7;l"Q<I[<R<Z-iLoL9*p??1
%:3t;cgI`%F!1X8*F:a+,mV08\K@e'NeI=T"r-%.7F`MH:VDX^V%F4#s&E1ofgEgWK[PNOPY:L3T(d'b=eXh'&.:=;0>&`hI&`"Q5
%cTT<q_[2oc=MfPE8oS6/Y-YI/+_uPkQ4P&+'W0W.5&a#($5bf;+#pm(]_f\RcEq)!aOL%$=b35noeR[LRKIu:c3MW%#2PoopqY:O
%gHBEK^ao/V$\Jp/Fp9m#k\T1a@>nB3V#sN;Z,eF7Gj9kUc3Aa<DuZ<'4#rUV4+B^(:,ZAJ[s.+U;KU;^?!E1I#?u(_baK65)fI"W
%g>^:Je?,'HZo3m"G_U)igo8']4TJrN(6TS&j)6S^)1S.t_1jYW`LS[\GF&$r&QI]0_UB^2R0jq"#BrQl.WA94_XZkqi3:uZT/.3A
%X5-f#E,Kg@.[&'[mT<1(g)1P`_`t`-[P<=8g9<0%N<u+D2h@Ah1D;`Bl;Uh/E&:Z_a%QW]]i2a>fr;d7i8#LWGC>7?%1tSVQPGjX
%$CnK&8/CSli-\D[i>X7c(A.YBkZ$IsJXo\pP7!i14CWGM<uD-Ii(S;@E)uaaAY:i1'4Z&o9*A!:8<QMf,&eIK9S8^h^r`Uu;PHnh
%c4D5.;C;Mn+C&$]2%tO^;esgQFWtd&cdGA:&:lW_"s;WG^hG[QJEo>UTQ=ZBs-<n[)f2j*V"9,#Y)V/Eo73%tO>SU/*cT+C.M48M
%,e+(-9!eg63*M]_^?#AsPAt:e%ldb2b'#9G\766k%%7V931n?i^j*X$Ot4rVbQH/](_*nj%lgtUE]tEQ3(u]qIriL0NetZ%b<$0C
%,?6<,bmb+A^^t)a%2s3"W^gtH%6///o%Io*^q"J0&2JLG*V-sZS9>rm[#jTo6NcaI92(&qPO]LD(3\&Tj2qf"?pb%AB9L-=dt#oO
%@1?P@!I&'XF_<8`peK(Nkq(cRhdiG3L'=)m8_f#rZ[ajRM,Mr.^tH#\gT[u6]<SV=B*%0W+Osr*JCEfp7ejL!J?qk':p@3TUW5p6
%0j)43pW=su,iE41j<KWd*'LfN>?.Eu7oqFQH:n:a6G/WE8cat(GGOTo'];_8+7b^!S?5c0SH><5g_QngJ?oEUl<=U7qF]VQCa+\R
%Osi_?[M7Z,Fb2>sP67?R[Fg>s!%74]PE'5bE%D,[J-H7gl6BA2&oaFp?(SMNi3]"HhZqh'XaU`!cqP!hdW@85@)E"?mRM2-+Z[?s
%rfOd1E.C;(/Eq'7!2iXjd<?@F-F;r3\MFW'L8N/4"7A4db2<;%@U&/]Pm8;R(1T6DE!H0L#?9je#:cD5jr5L`]JY>lK*WH(VNZ?o
%"A\D5=rN&t@F:K(kX=@=)=&S,4Q,FS(7F]&4Q+_MXQo18i#9pJiY`7dR[&l5o7/>J\?^X+D*W2`b5r/VB19XE!GB7d;i<Rci(OdR
%D.3Mn1<.QV3X[n\kd"c/Xt8K:V(*W\B)uYH8p:f<=hk?b<;&uM[Vsa0]0QPEE"[0L%1P;a:ur'd*cT\[&o?l-i**6S]5)![GL`Vo
%3YOK:r^auZRD<6F-njV8$(Oj9ZLDr_E+!Ckhd:!t7uO\LD4&,dbe11*"HH")p@0pP3)MjP#BqM6AfB+!lV-5a..*!''0)dcpLiec
%i##pDljb@]7U/IgZXEojLa[ODB*-+5EGN>*"O9-;*mts+QgEFh=!DUZ06qBF0poa657BO,L'aCGHj$6,'t@a>C<uN'=Y3(uY%9s(
%:>7_IYYp$67`@`$WPFq[`SG2d<8\+&=j8U$$"j06@;i*[R9N`$ZF+M\BFmt;!r'u2;R]W`m#,9!:!saog08cR$J[]FK""_;kd8Jb
%kZ$KE\SEeYN!^P<>B-@=<8d++^9CLdF7AE1CoG,]_J?]Ih4Og>U:8:i6j4'$;-C?NDGYnjL+=i:Q^,$9)>Eo\$Chi=/ALUPi(,lZ
%bq;$l3:"ZXmP>S;WmI!Q^pq0_?H/P93Z0p6+tMjR9EpO/V(L<0^`hoFgqM_KLS3t[F=qNL!>a1q^j2ofbZs'+s,FS*\A6LW`cSk6
%JSU&uXAn+K6KaX?K*iSMk,?O(i"u^T_kU.]1G`D6]T!7<kKm5]0S(IL4d-f!1P,.k-*K_p#\N:BfFWVoUX\l!7,S@-.aDp*i8D`-
%1"]<RP66I0%%R`q!:\XQB2F.HJ/'Er<8dC!4(l'uMjnQJQOOb@\sok)>i:S20WD*oJYRo6Kj-0KXqcB"*A,GZB88UNZ[nm&omIc;
%E(5Ve(j7fVIQi^Oc3Jg=pO="Gn\KV29UV^F\`!X7be%A%MXc75LN4J"irb'#%&Fo*I=<V2L5#7j#L:O[h0IE3^mS.s,*!*S3$r_2
%l#btgB0&SkJf(3afJ&^,AA\YteYj?JB*"s^jkojKmsaN!n'ljII,M)&!iWlq"/dRSc[5/46hJK63r$K^@)L^:%3IS+S$(l2")"!d
%-#fCch"AUL/KZs@JL1ddE(hKCpO`qqe"/tu><6_.W@@P3%\,+EIbrG&o+<N*k]Ga-"teFm#Hg/tTL[eaJ^ZtSQ2R?XB,JBq^X@\N
%2&@-g><6`unKccSCuE59R*=:;^ju\h)PA$-E&<cpA$CO%Y?(5!c3E^HYr'A81E/<BX5h4L`Wf1ScSLVjAcp*.3V)EX2K6^]m7C#b
%CuBOKAW#<JJHNE_OVL:(#*'I^H>L[<&VgT5f&-U"`$'nm$_0d;90K$O7kg_"Znd1W09pY_SI)s^:2!iUE+"5W`0CQI%83WM%6-&W
%84LF`"WZe8J_36icDpp0<t=_3H[T]Z^mj_^0c7]WM5Y:+@/tMQCWLs9!(Vs-M(sNBmN,-'ka;GkA9Q0il3-%LE_u25,lfS4;8;[O
%UN28&:oF>*cihq8LA`(:27[[cr>TnWUakcmhr$Qu4mSF2)tm1gc'8&d'2e+[1[mRZ7GAH)_e3=Wg2HD!c.!bDrC3(fMqg4dh^'Zg
%nK@d"=2iGt[ZZ*GR?TP!oG]AS;;OmZfn+b1QLl-EbPL]oq@-6,9pFPnrI@VQAc1uXP(W6C[<N04PF_.]DIYdRqo6KA:Sj8'=5.hE
%OF8@'XOT,,D_bLn[PE9kXVmKD9]$!;PT"XUqIVN^7?$K#%D[Judl1HDLhrKn)bCe!9(WRj0=Z2FoA,qrFbAfq29R;aQ/rt\c-#H8
%PC-kONch2n7\g)'+._=/)t,hTi>[77B"#V8pEgI^VJiC,7Vp2%Zsi^KY*e.8)<BYA]Ylup[l:ZhAfBK!m>\n1g$_#1\)Oi,m[^>j
%dEIXgeD=j^qqe">Ar[i=FuJ.4BP((KOF*b!Gq8Vj-k5i9XA[c6H_X8D8UfdpL-gUm\RG3OQNcq\)mM>s(FXOl]\^oAe^tF[1HZ\Z
%oS=(_E'+0D*Q6gMrMc3obh`L&Oa/aM]nuWQi`B`1UAQE5h(j=%=Ku6]lTso4HlTe">AA)X?i5^Gm>ZfpI*JlnHXinL'>:79`ed6U
%*R*AVBVb!dRD%!AD*+]0dDDQui:a&.d`BQdF*eQh7Nt+\p4d_+8H%K?L'>GUqNfm*7T.K>jn8m8^AnQ[gtl_lb*rjL[mJG*Xk_dO
%msXe[gRHuQfbi9fP_r%C**HeGVDXTs:jlpLVJ-go9('s-=F=8n]kN)'&n+/q%3SpAf/gH$F2UE=/%N-ac%6S4%CnEc%X]fXEOV\=
%&EusX9fE%i(L(ouV]L4iah8E/%4eosSs%Bt]pY%:E8dJ`AjV@F(DsP=U']WPDeA]T+GIf7S_4sQbKSYUm*1)2[_K`&m7eFfG&QR;
%VD"qX+u?\e5*c32i:_?49>X<g%6o]JnWqmu+>?g,;1#'hA_;XhRt6VHSM>II08HT&BD.(.cTI^,ZT#"8P&)&C2t.!V%!H6$a%a$J
%4Ce(sR6R%2cKrg"1R`_2C2Z(m8j2%1^#<?34WDo-9#kA*oddF/?l\"YUJlLYW0p\$DZZQ<)E-+%/;XB_2Q4<G&h5EA;1%?JM#VCm
%]n,f37QdW_d09/p2U(#k-.,O:p?$(Im3lF89abY[[`%#fS^\58`8611^$Q*3&pk:gB1dV#p-srmK:UX6OM,OTZm#,iY/fgY:@*t+
%"J%<(]c!4/"RBZ/Dq:Vli)XH.N@2ZU14.Kt:Sc^8RD$_WP5#Gqp-tu>K;NZcHSZqfK^9/W2rhnK+WB.m</.W,[bT_=M;5/L\@njM
%I<I-M2d-JRDQ(7:E6MTk3k%'15*q$jm`fQfkJA+I2c2`W*0&aCo+_?baM#uq'V67aDbaCnP#h7u7^TIBHf+MahZ[tHE$ZK'T[kN-
%\@n;sQtVEt[l;M&8C#Sm]h,rMR/OU:HY_VLBIgPN*SB@PC2^VY\o#uPg)C54)+-Hm[t^i0>,f4"*ER-)1K/YLQ=+laVtO^t5>tWF
%\+e]3rUcZWT;WI,8B8;.aJsfk#FU[hq\LSIPn%/0)\*a3.u5F&&;Zi!,7#i973(=/E:6V.bI%a_d]c8:bCdX!(g+hLNJ;QiG[W0*
%7`k4/(noT-M+!Y;(1]aU5j/hXpOHYk8ErT!o8u:_aQho<4B=l!5Z5\!iQuD5+g`f2kI>$jFku<bKgE;4HdoW'qCpUqNP3F+6gqqY
%<`st$aAi5[TV;n72RT2Hn[)Z$].f>m(>C]32c_Hh@:BjUJr$dHSpJH@,E`h3m42.YM^#'hDeQC]OK]dqHc!;?dlon*G62GZi2g<6
%TXn7i$"NMX85=ejoG,E\+UiS!C.34t:*`adldVJk@OkGkZRtNGd#LL)nqFsD`HYDP,(V;0^+<Gc*5%O*6"r6-Gh/(*FO;LjDh\Jo
%fMC"WC$+!A7JBD>EcD1Y,LXU6Mu:D>2^inOH)!P'FgE]^W>&@$n4B'Ir"N,,$dqr#P5Scf7?&+MFu8N](]`1jC_<pA9AqK5BSkQ)
%%^=$Kd83eMK)p-l1L</3i.:G2e5IVCRU-?EML\^-$C0Qf.b<Hm.IDB2Zrs:B7m^?(pICtu!'sK_XYk9#717=bmIpaR1+HF`a0J<l
%>\Df+70I#*h\.PYgU@RP3FKqYXW=H2!CCV9`D:_%Lju0$!jjui[WGnS%=#4A^(cr4jOC^fib0,TV.$1GO*(KQ_O30<0Kmd]5jGMN
%-.s7B]/8g0%j9"tP`o4HS^N<jpi1B2#Fj9"SM1\[U;`SG&G8;O9IL4.D5''A/M't!D;s*!"]$\-$IAkC)\$?:%k(g&iM_:&CK+Mg
%V>u?F5XlC\irUtO$@C?IMb4mM)uWlsqM&5pnHl:fUY!dq`Lpc<_urQS.+ha,PtXr9`1_4O,N+V7i!D[[Z%R&BEK#ognf=1,O<6kp
%Jbg?$?2RNt.'NdYisO0EjUT^6S*Ar9DUZf^9$6mgQI'kO<^J1Ie6D^36jq)[%GXC86jp)VRlNF;6F`c?=.ls_<?Q#a;@,nGdE(F"
%Wg#gAMcHdL859lg6*SWVU^s;`U)Sc)7Lr5ofIgHo_2L`PO-hmo<Ru-f1.Fg*5(9W4_\EH<j#+gR9tW`'UgnV3IKY<K\d'''i]>/K
%\[adu+;gW]PVf/n+:hY7AWdq<+=T]g#Y#1J3Hd.i&fq#f6%5-g\I*-W5sLe_i"J9T8bQh+)Bi>+LCGcBoaG@>?cj)F78l.MVR"Jf
%dd2!-]a:dM_kSCJgrIVt7IL>&H?6*Z.SNI=I$:StBtom'@\=sdmfnB"kmc^F]G')U%SoO]a!eV%>;9ZU#pBj1KZ%;n#$+$65%A9j
%J3rK4,n6<"g=XW4,"V'PoZ"[%c(PW1#o!%<jPU$g`j:iIQND@[,6tcK81I!2JmB9CW-5(2iPK1EA#&2gb#@>0Grar=5p.EsD])-M
%3/8A=gtZrNI_&-5B7"n*>79T?EH>$.RWo:i,@VV<A_8Kr@[V'mYq"'=jt8UN6;)nsAFC^"!A0utK:@T1(QQ`]kr"](e@+9QXSRU/
%&phQEXE>bL<)6P0^2VU[PElO9VBXLC(;<5\gTWe#Pc&Sj_]g24k7IKtgA^DO.DSbR4[k>\Of4aoC\G1K+KCn2$";=TOGC+2o%*M\
%#^10V;M6A.18=jGU`CP-fn/U\$30c'q/mK%6t^&sY_O^%_*B[Uq_CKpK.o(]YfXNo,+79Y6??I\dYB_9PCr?_krfk[#Y8LC65mAc
%7^m%5lU!<,5`rru>R<]2$ZU<V6Er(fBcR<i30CD"^G(PAQX\Adkok7O2`,Sk>*re.OThPX2(\4K4H0L4Yd1c#+Ln4:aa=*['_9Go
%>d/#LdPX=t:d9iS,d_*,NHie33ghfpMVCD5DKEHJU.%`(0(<Aa7aRo22/gPWO,%_@EJ$fcSG:=F6]9$,hk:^nFeMc:<G<^rboq-H
%cF3[N^$Zo#]lnNS3Gald7Vj)L0K#'oh!':&@I-]]@%sn`l/'QO'>6AdOf".UNcX;Mn]DVZQFYJ89Hb+]RjDZ)=4C:;Fb*.RI\6il
%m%Mt\=;7$NcleFK/#m<MHZg:<R%*)%OjRCNSOkn1AJ_;VW_"B79Oo"O:Pq%+:upCo!Nls^GQL]#Uco;bWq9ndj^ZVJO+M2V,]9TM
%]50E#8N2^/.Ct7HN,>os\ts=&L)b0?CHFaoA/7/u%_u2ag>Q1pf/ZP<_a\.s"5nstZ+4T+cl;,MmQ?AE^jJQ$=Q@R@c#Q4qd[:76
%Ok`bJL`E">>/Fn<qP4V.%WAdm,tf]G:9hcR$\P^#J]#8lIbjDnc(*A4BSKK"bspV<$#!bE)HsWUJ;JR&TJSJh="s%c%Lo;Y#>41;
%3Hl9kH\"<H*^1T!VNbI1A_]:SXT6(i*D,[."7LhS(9[T'rN#>fBq8qD3/n6Yk[LV6_&D",8gjp^-3A4[WZ,%'VPFcsY3b,DA.oBJ
%-7cNE(C%1E;8CNg/M)WC9Oemp4IO1m'd.[nU"o`e(0"dBX]BbrT"s=6Y-#4q(/4fdj/^\FJtYke_)pQMl+?S)Lt;mem:5@G!oqBg
%4,Tik0=h1G13&neACBc=l<Ma0'IA"K2Pq)&+6/ft&sZ3<MB*okj%D9t@7_s<V#.q[*=SS)>X=?1?3RaI`,@?"fHVE^*ODoQ'lsIa
%'<DRBC`L#ZlO`97(WCDoL^^c:kRFs$LXekrkA`Rq3*Ae%NAU@7/Xq!E@Hf*bHGu@-(Dubs;mESWK9/?:!OOr22maI:'OiJA?(J@6
%+3#iF@e?'b5X^4D<Yj`Wa<nNto>.G5$kSD(rQsCt-6M,F/6?Wt[Y].h1eX9Aqc3+V,qZ\MMs`bKJjpMh)kr.E3#1A!@P1cM#8Tkm
%-4DRQ#$fUg=,P:rRNK0,=<L;"R6pq?]m"7Pj1)CKh\DjbcnCE@-VUK0>$7UJJ[0^d*:!)dp5Bt)'+,"]MAY<h!C=hr?iT4kHY6AZ
%?\eaeYe.^Yce.;jF]E!Rk0AB\$d,2BGK5=V"9iL!/SSRDoA.q\0Sm9.4SupuLe)lJ[mIKoQp4HJggM#/$D%LpP(9d8FbH<>^g[Ad
%WK(4!,`'-!^`o8Jm"mVp^2u?V0Js0Q%Jt_O\1k;E%O"M-o]gjg?ZH1"-+&K.dOs]Q8:n=MI-=%m9ji\&c9_61"TU9Y/-LM8\.jN2
%1raWS4\XeE.\/'DPTV]2Ua@+b.i$JlFbk)C51P>'FC%L*#M9N"K(J>X75VDp<#W`)_%oTb4'!7Y9QXV3/L@?-^]:>X_7!#^6@Tl+
%ZHL^4$Sl(l,C_QN(7LQMo(DDRg["7/+S=4NKYV>^TTAZF?H:hg(Vh0`h"d60Sj@;5\t]J`?mWmq,;=pP6Y@E/($o^X2INom.Gi6n
%,uJ7+,7N`XNbM-7c]]FRLFj]07`*_M1O?8'1BY`1#!g,RGHch7=tiLUKCbVp"[4?J8sQ>0e-\9_IpllkK\i_M]mu.pL:^!/^7*E6
%BBqpn*YHE.dk2paN16,!Juh+,?o]D0%fmo%OKccm`9e"X\YAuB02^Dfpg$K5JrIBK94hB`.k/5RULRb2)%h"A&V/4e"uYn+$cM_?
%Cg]"HFr,Le6RSig+GFm;Mh.1`n$J+I.m?t9@s6X[*%EE@1mk5h+RY*]5XK:(Z0(@qV=,40Z4(6H3VifAOKfk2rNMj_;hW66$?'Za
%TA%P0WgV\]/U[*#Qu]8*b4KluWtglKRQZceR:H[K$-q!*J_6j6*D>r7mm2>hACWD*QS2(*84%-_?g>T&W&F`L$B?J,23p^>'db>Z
%Td^B#:gg,:X1f=C7DW`7)]P>T-\0ANO^uduLZ/I?X)818'o!Z`[),7&]$"K`7.G5<[&&Wr;Y^shGRF3`l>i$nR_6loYo"cdD-Psm
%K$g;!L/S@J+cHh\B3*?)L@l`[$fKlTI%qmLd>9bR)7XUMV&flM&#ED`^b9,4(CM,3G<h]J"3$AOr)G/9\lB_:0e#YaRr/"P@UhGN
%3:Lc^^&^6:<'fMTJ-d8.P=(dr!CFa(71s9EoN8+;`L4_le#^gj>JXc7_hpPi;$s"]/]`]p3UCk)f^e.H!+7)RD,!LBn;Bn6l]be$
%M&;X5f!dDXdR[B19KPjf);L8+rs9!S,9f(JG/pMCk\3?KGZm"hKE-k*QJW1/:Y)+_JP?GmJi`FkHi33FS0#AU.%0dZ-<Z]`N7d.>
%cA%M_.`%B@ATJ#S<M:E<mKAAq"6-PlfFTXYW\&bkMU[3aT1U.Zi#G+NLi^^uk!`E"M57u9_9+#-3cTf\ZR;Q3JO1CXAIQpf6o&`B
%A<!;ufam"3W8bt:,^V+t"jdklX3h,V30Yt&Q%dneOq)BK=/1GZ"9_k(S)4/Z>H6-G"em'HK"k!"#nQ&&bap#P2M?4nau91)e>IY6
%.9aQdk'?<gp-0^d^^,JY9dAmkTrWi-AC35d&4'tcK`aJpKNdVS3Eu%eDO!p0U!R>GRGW1>'V]6%4^uME!bJ;A`+=rH@\EDs9*hG^
%N@all-";^*ig@'g8dQ@cj#j=l=U:A$PM3?N3!q!DO%96a`ZSg:U0@Ujn3\raR1sQBg7,6.61o#4''DQQdKD]Gc4jFJ!D&!:VMGgr
%n\@O/nkUUad;s#TM6fKSK5#G25G`j8,8<iZ_Y-B?kD?laKQW,?CMHiF;KCP!`Z$M(XqM*D[aadub68KhWoGde4p#fUFV:':_FbSG
%UWFW!_V2H6iM]=bKQDi8[jXs=8BqFa0X;`2(4.=W"CdG"]G"`U!cdd=I54:P]b%\CjRI1Fi][Z'COKR*:bi4(BOa(I/L2!O6.$t-
%I7bdg>g="K1EuDq;ACI^=<YISL?4q'NA2'X4]/HrS,a2]1f2_2SN(Wk=@n]Ue.[;'Na_o8"HDoT%"kPCCLdEuAr\.>S'#u6g2_^h
%0u$4:h@qebQDC6s4W\QHpu@obSDXWD/j26m!uJr5-A`8?"3G:d"D<A%*CsS%[;FOq<4>LOfqq.[1(aZ2,-u\aIYl8Q#&7'o\>,p8
%iMpm/i&)?rmj1H71fo.kU6*Fhc_(DdcLMlh,JF+Kh,bSoJ/"#P`=8>=q8P*`"E4@6"\970p_uLLF^P`6i5EKD*GfS@L7%cnl'KJ,
%+V:t/Z*`2:ga=4q%cTot87PH=0kmBo>;G5s1<"d<o>oF#OPEH9(mTcS6,GbT;j;GJq8%+Sou2Km<"c;edoME>-VQ14ll-mhR2<H,
%<]IVk*T0s+6YZX"!+qp%b[ZUgC7:?*`i5/G-$O"mK-Cl>Ye[&tRBEr,1HUeb:WIe8m53\>a&9A<iCP@Vd/\t@fJ(X?&g`MD`9-EN
%D9l0`FkHB&%)?SBI7(Q,F[hD*5p>^5Kf%C)->a=L$;(+sV:Wj:[5?g(3MX/7T"HM3k\A]C^qPnb18)onY!C<jOsK\Ulj/3^+k/Qo
%O<H:CiHMQTX;b3W^l9Us42*5G/j3#8TTo7N=F)#[^+K]!9E2gjiMo8GUu@,8@(s7OB/NFY0@\-b!/7:,hK_$QT\-=rV?Dhma%hR_
%b\O`$A2tteF$YcF6[:pR8mVK"N];D[&g/b&O(.@Y:Y`5;)RJ57jD-$-S^9qI!1?:E'/A&:E.PQ]U<r53jII_>k4m<AdFI#MVe%99
%nd/3(U?2cF!<8,qH0f;1KJ9Ta7Dr8Y&'"[#f?Qi@oUslk.5&qI#:&oWqGSb)kNIF=RiE].2aad1'`C#mAH6pFXDqr<'bE4+:'nLj
%\*Fr9Yas:X?j(#3KnKTg2&FhQO0]f02+7PET5[J,K9HX"E*rp.Q)H\Dium<t@i6Se8!$Oh_WBuYf0*Nf>;$.$oN)WbO@4chUmfpD
%`/p6&^HQ*Cf_-S"B%(ag8[9*RRl1P(2j,<j@[3ILYRaS3&8>`\R>7!I.N+aZNb><<\f"HX<0u>QZ6i-CRdi?G_0&NDDBAd'`bM>t
%K@C'AEEIfBBGOa&"!!K&.6CFNELN9Jo#aV%dABs-_5qK@&.1lcOY9fr&k[?hien*65g"C?KGFmf/'1.^qGn`skVoqmTsTe+DunN*
%JiL1%/jYIbBCT]i7UeaS6<o6-AZRYl=sloSO(WG5;IJ_e2A5^/&/#YaeQ9^4,!s\;F9RI@"'IXa@4=*1X8LA,n=VipXq,AqcmlhV
%8*:B/H8.cLrH)bJMi,tLHnYD'iZfR:a8A8:aHlFd/3YYcKEMVn4/?L#5S@.`>mWDd_ScYj,jLO>U-9WUoGe1k>H'?2!>PSjoLg'L
%2@(RB8!GC2<h^*ijX8MS[KgOf]H=(M_q5-]2T;ABP7k:i!7;3N[T=i=baKT'l6eSH95.6Y^mH;ZOuUl-"3'dQ,t*_h;X.%>knS3n
%ZhXT"ODCp.*]JE=&M)+^kDsp6L=B*8$.6oud;:onT-.d$C_/r2)0oeO\l2.U4H!XQ8bn\cb<q%D9+5bFiAs:`Z.&lX;h:nb7^^^<
%CE,"Pnk7)L[lfCJVUS/1%:5@g/R>1%VZ,dl,oFRR6O\[-$5+uU^p7uMPIY4^WFCNGNcbhK#`Jh:R9U@Z?rd`b\mag:d,D0/%ai6-
%R4#X3*[/-UBQ<T-atkRhJD^TlJPW,%`u1agKat:7'e2o+<V%o:1PSnWZ6:(=_(jLhni.m'4X'i8C+41BlB=$QM:*uoW"MA-4Os`0
%)3R002:bi>+XA@BCOC0H<C!B393JVj/[1ED&V&_b[FJ_#em'Y/iTbGW4#na<$B[VUdkqaO@*r;!#7!;g<pI,$0GA>X$^`h08gG#$
%A^q!4e#,&WL7jD<6fu8e5rLK>ZN_.9Y@#Gq26=2NfE;L$L'ee<,.Ob1JT#Wh+:D?T9o,2n2T2W;r8AbA/;dqf0Ip!g,GbU/e@YtI
%&2tlX(uh#=C_2R^N>C$J:?WcG81,.k?3s)R"O88laDQBQC"#mA#!k\@#s]n/l6*KK3<5P!bD,hGd]43eUrs+R-mZt:9aT3=oTa9p
%!VoaRQ/Q=<$qqeS'f6SFe-LAQX/+9l9_M%CU:3WQI:52DUfn(Fg)uW>lWEocBELY^",eHe.F@Um<%P8*fLu#g;[&Ng.3Bl,B7U0*
%;O>_i)elJl#mpc?&s*:r<$]OZ'NhRN'tt]r.O7q$#So3^!N=;HT0#;'Z:rnCF:8d228n@J_9eKb%;;QoNFIe$8Du8MGXJNN'iNtK
%%7XeI(.%fu>&Boid"lBbq]AV!$`u7e"KXk+$Y'<Ds0R_Y$m,P>6&uV)60q`4HNp9cXRA_0onQ:XO.doIS1Od&./a;P[&lu%6:_4r
%V-cg-%s/S9B_\?3hW(7WVRH8lM"=_,YB9D$4*IsJ=@E$m&7\UI5fD&p>/KG^%+.d=#6O@OgbW5=JE]AJ"a[:J>4$H/5tI""P(I$D
%&h=En,lLsW$/?:)H"V4HW%lDN+ddtKGYr'O7LYjiACkBVK9T_abFsrdhk'OOh-e<#[7PZNLol8=;G;O=44-/G_W:i)dPGORhNE.S
%mK)5G0W]Xl+"bQjJ2:>OLbjZkADkV\W#[BU"*Y;X^K(QBO7`E!omY;Z*aPBZR?,H8`&?!?4U&)1c3'P&OVPiTMb[nci;uZ0"ha%8
%D%PkV]Qm<&cMT]UDRdajdk?eU$oN]8R!*`>!0i;_O.02^eWN0$Ym/NP'=7gZa/fHLfuV_SZU91rXCE@V1FcJ%@pED)5eUHaGB,"K
%T_RK_]9EFFPOpV&T#>_.0Y_u+Of0X<'d_XnO[lW)KVUD1TGO>$Sel"Xop7u:&+L[nKN,N2+;''@^f>aMQ$p7Y&[;F$.#L"E0^+d5
%:Do"9iR?L_Qp$fi%[C#+Pp@P&A9jm1[Z6"flm#g6E[]_KKIh'&l`t@G+,`,'BM91t(8n[=1@+<*-2aif+H]Q[=@8&c!$G*s!#GVM
%Kqk5o0o;:UP;tssAV3P<#hfo*[d4UFS.[<J&Y+6"O<cAL.t#K5mmBEt*Vh-fL%kcR[2VEmC_>G:M,fL0ZB@Q&;g]OI,ft`s^W;Pn
%.;1@PUEO&!V(FMIqGZ=;-6_Fnp+*@HEP5;n?^Z!m2R`_l`pO\eDCRD<"mIK=+DScu&'4f%)X/]f+k$<V@m?[VPq>1(D$>"_@9S7f
%-:Kg?lS+/Q^fa*flXY>KlQ&a^VhS1[`1%3q&f6r]pC]kF`jUL^SS+es&m]Iu$Oj$8r1al_"Qa$MKK3nGnt%ChQ0/H_+e:lodfcEc
%9gC`i;+TL!'KRmKYs6T!#oG(l&R>u<$KVP,C.^Q;_.LN(CY=<`n#B'aO:[A,\A+V_?:h0<A>qA/7taBU03c_6ee`lJ'3)B8@9g?5
%SJ*1V'2"R,Y(TbToO)\I^l(Gu!H6Ie/;7-*XY$6(nGU_396`17Z;IAb-!N`-]P.RK.52/1\jN#0(:'&!3@f%cjH2sdO'laZ"R.n0
%+HQuDBG:_W:\o=n80'[Xfb:Oi5XpI8LfTWJXE(Ed/KRL0AVGK-#6]UQc7P(W&[A_qH8ZpTj$/,^K^U%R?X'3QU=_;g?#rTq0*H_(
%.OGI,40.m'd9_R#(4qg+n(/2h!YA;W``>1.n5E<M$36`uE$.HV&pRl:Ng/IgQFM/nIM78h);9T`<G[)Z;,NTI6;@@h37,%L$%7@Q
%Xl@VMUDsG_Of79*&T6Zs;#s"B4C!MRIDFc!'jZE#P#2!#\G:LVcuY&1MnTs!&9WV95RiE"-R@#h$R09PXmufDV$Nr,rENYOGp$^Y
%5<gt*jJ'Eq$7\[n=:5NZSsEa3jW`VdC^!+raV^OCUkL)e1*;B/\"<1DC1A+"7ehRs5G/<L_CLl8^nDsu?q&L]Xahogb$G9[3d1aZ
%07UBeop^%LZ*]uBV]u0Ok(C=A[Y49-E0N3DZlq>gU(Eu5&^UVT!aBKS[*@*7@l9!N-lJ\F"G&;UMbCY7aNR`/KEZEjFkV*(4-D`T
%S[W^r!#D&k-c".t1CPbkWf:IILQ5,tE.p[`h1@F.3('(cA-Ih3G.kmLJf7B+P$m3b$#&k%Z\#7(L`]IhC68o*o''9GD:*Ke!$+/B
%6Rsj[WdLA3bQS[h=]&uBAs8JUgj%rF$];Nn8uWPM1]eM53IhMY8dPK"lq)t#F#-k4f&cQ9FTe[,U!aK),Ub?VUJPG'"&D7)M@nKE
%dmnZZ8@Q/B)Cg9GgV>XCP,<QKHiWUM":%5B)RRno;/@R]"^Jd[7,ssQjnuL8&ujNg0M!*8W/Is.JTX:e.$V^@2%[2ar=UD^e_EW`
%.[ep8BF97S1eELSrDG6n%PS9L\3DQ;G6hK9aSlYW:]R^3nUtnb`Y]ZI4iPW>^_Y6+FCLuK,G$iao!VJ=K:Wg?m)2f(`,%(95a9i@
%!YD_>CXc#Q5K$6=cp"jhC!(0BfWgCG&:h2><K>_hXRF"i,l7kVG/8K7eX;@\BYc\@gCV]J"rG&VIb7-@-kn]=j*fT,GUH'G1g80t
%PfqRt@PX61d0Q%nj:\MfNa?ac=;'spJ>>V,X!$R;#1?)##]P<2l@3R0>_QVAk^b$l%-U#c)?-C)YnS13T\^PQ0uUlD=bi"Q>6n(4
%4c9/*Fe9@%ZbYq9Js.>PVIACH7<0-lmis#[-ged8^hbTW+U,iX#1S8*X_LY4<!Nt3[32Fm>ts)eAr04[.9aq6q>N3jGTh[Q1AjU6
%#T.7:aP4Nul)2?AE%GnRKEA$'4GoGIY+5Qrp=PoU-Fu>GcpauH-TuCf+Esf;VO6jhkYCIM7LTU^fsUUB'%3)?MQK4u:i,W7J2V@=
%d+X3/M=oT_%#G-h]RXW0OFAj%M"$07DQK*O\N"aloN6p<KVl12p`ZH&'jlWV;.?!j.(2jcRC""C\1J]lc@'t_!m;eo56gc9MmA:Q
%)@1!\<sh4rU:1,l`"R6nOZY4Vk#@Zb.'/'(%)N+o^5kRoA>24P?4Y>\p>G12'cS'a_Gj0E4-2,uo.a(2!m-)W4^/!7Q4^6p4pC6)
%0eOAFY`;T.]fsg?T@5r<bemLqOX-i#"^g;aSH#[S6<YAJ%<Qk-*OO%He+Wor3l0gKr'UE@n7!dSjP'*WUBO\M;<(N@<X>*tkq#Y!
%7mq-g]t&P9i^=4P=N0ug-05gEak#Sc6R4#,OMc_q)b#i\n1(EeZ.9=:1Qj-+WsGg`9O+0XGRN+3Lgq0<(*S;QoT.4.#p9n,?E,7\
%C77TH$)AaqAE@EBl]=&F9">W=T%=GY^Zt,20@8?,!%139`g;7r:]pmPSh6lb(:7Y(:J=@k+Z`J8oUS+39GJro7VP#W8`W/AVi\;p
%"]qf2LDCN0)O/1e0S*_i_pi@Ik*KP4Y].l9mNtVZY#S"I,.^$+gQH7dA-R1c@]9r:L$;@fM=cF:9_Pc;V$G0j+\&HnMe7,h<s4@*
%n4?aM$AenZaO2226F@;R8g9gfhSlmSmd6Mgl+sbS3s'FA]cRbj,j?3$.Q7^:nt>)PD<Xq@aCT.oP)OrQV""_DghC1<&Mo7Fecfcp
%:pUJZ+t@K7=Vqf<5J(RVP0hXlPX@qj?Wnu<M7ee%:90>>^c2S^S,aX2qOlcR_]NG4N3!SKU6DGeAq2IkHl?_qXFS;Qn^/Ba.BE>T
%,IAX_q&o5X3t-B*:.ei=CQ%R#0Onek^]amu"ELs+Q;e$BSZ@3ia!3<V3"2q/f<Do1cD-mH1?Ykg@#_G6cNra(-jWd+?r\PO&Y+HB
%0/JXN0t(9HjkEp,;.DO#43HeYpC]FC";>c&r<KEOj3+_#05@m,bL4)q]gR=,n/HImIj%CFY[2T2=L5]Z%<.1RArRI2&"ab!98\WQ
%L/_A,*2B0Xktj6]`2R8!+/N!hl%B2U=Ou5NF@S0t_k4fh$j]0RlPuuK;\?/R`Q?>o8rkS)^0Qg1*?N"X8=M/^"q>oD]YoaP+U7>5
%r%s]X!%01I!]R'9K'""-]O]+E_QULf(4eMi65uo(B?`&t8F[*Y`Ba0NYM6O7105@GGn^G<>9p>XG'AIUK1'IcUK4AZ:U.'sPiFRg
%-7,1AP^'LS5aEa?Gi6=u_(=W06t"9FX\_,C@;\CCel6FS/6f6lg9FsQg'\UpQqbQJWKIt?fGFS:O^m4*.OE4tTu&A9.O\"BFDYSb
%_@T>d#XjTHog;"Gq0AcuL?[SDCgSq"62_=-FgAnO@ZlqX+6eAiAXi>hoN^_K*9lNpZ!^0Iq?Jnq=qZp8BAngpTGT.(.V8e7]G3-d
%Xs6KK.;Lr$a"8\[+O$YqNB1]l7%I`;'8+su_.=j+!'uf!"uWF'KJrt*2).[H"6m?FWTboi<skQf&YmX12>fS_i=3"BbRfE\%KZ(g
%i<<*98Db4,)[V]9`Ji_>-1$g]/\Cbbq8,^7)XS/9O>;&:+M%VQLJL@_Tp:Kqq&s)T[P>3;&kW$%U2hp.8=<^^a_@:Yln8rt6+N24
%@2gK3Vpk&Fg")L*P?^XD*ru*M",sUsXdktG,p)bm<4#e2Y=No4#8p#I<B>,a)OOMQ3pDM:iL&#NihEZB&P!lO("/N/!66r;MXi<&
%jN@`PaAdeZ",fo86"07L=;/[5JArh?/e!FdQC^MZgZ80%r$aQRba:p_&1;%"kqfPYXB;)<Wu)jl;mNDX8\m)+ls-FZaM7u+!t6Ck
%;$*E];fIA365i=j4CXX"DS`t"@TC"?NFme$Zk>N_&mRu@7GO:$;le],1,+5nGTjpK%LW]E5dRU*9M7m?Ub:mB.f^X]PX2V!4I@_$
%$'i%)JUi67o;fbQ7BAcZ9jCT9,9"B<(!oH$6+$`PS^D=GVXmWf!pr6iNf4PH4nKEq;R(oqPd!*>/<T1*p46+kY`4fNlBT?rk8^UA
%@"^F-C<Hq+KS3KkoileOFL@Ck2%jgndZ:5or-ha!\<@IaTl(L#MHjkDF:s\0=P_24G-1C]kVDU;lhmN2?J);H3[&3_dlLo.3i4_>
%L?TtDR4<Fm;[k/N2$LaZaOrHW9cJZ]eZN_R;%E,#oW'_.Ja*k=(pPB$+A&u7Lh[5J3=!Yl$@jkZhB4"OFe\GQOSk`T@0.=?/!EI5
%-=K]ZW+JJQL)i0s3O7[S'alH8JDNuAN08T]QnlY[F<nYDb]c^G"GBQ'$CU/:AW\rblDIM!AOK])[h^^':b)!l_iIE=`m4c<(bP$4
%J9*Mh`NfKA0fJaifC4fuk7rVk#nsUOdNLn.[oabUUJarO/Y@U4Y7/"Lgf&1d)CZ&U!!j#RVS2o#4TScMC'/pF@<N:+Lm1pg#!b"f
%/L#.<!9B\To)o9.'e^RGi1cUoar"ZcEg?h;m'<`+FNI@@"u4'!dju0Y&gOYa#mhf":86(;Hko$je4K^)JVKAP['%&q9*5LXf!h\E
%`CD+P6%&q_Nbf*b4]Vf6s&6M4NHpO%*+Zl^22]3'7BpeO<&glmfWg#`GN,@$6:W/dl2>nil9h]0'gsH\OV$84b9Xc.r"N!X<]%&6
%Q!DLmeljeTOf.[]6$6#Yn>6gjY7Q+XdOZGn>Qtg1HK:EkP"!TG7g9m$*:p+0E`D,3pn_4djr%i#_<+.6'u5Mo2GMY[Nc:b)+gq$"
%rUp\LMCrlm-AP>mL^]aRe<`kmqaJb!?NfB@MIV>"2VW+IMbCj7(7MU2%!NV.UQZ!((7mr"7KL&Np^1LM$<OMUW-Gb``lkom5GaDa
%Um2!h9GB\Ccu]_k#!@^8$=fV8IcsIk<gZ@RSZGj?J0Zua5#'N'.3rt#;PZ$FgdC:2=r30aZN!g-4F2J;74-G3@_IW2]1T%l]\g_$
%kt,4dj%:BoR<XSM$t#X.`([FYJn-G1Xf-d8^R/^]3!(fZ)Q`s5jj\9lE*FKmV9)ba)l5$o/S>ZjAmW%^R#n,O9m@s$80bib5*Y45
%>#CEr+BTP]pQ-mZV,W$0JruKa.!?FUrKusUhAWt)#a$(I8)"B8W5\ncf?m-"SUg-%j=o1u'LH%u!qb-L"9m?!X=Ak^7*QC'Y(Yab
%$0)sq].0PgAZZP6#8]!AV\/6EE!3E^Q`2U:r>JPF_H]UZ8[t+P*NbHnFf""LQ?"rqd;!p;AQc:h[#kP*7M-([l_X(S,B.0m".""^
%8Y_1JOBPbjlq%eJ>[_72R>G(?DPZ3FWD?%F&?F?F7V^ST'B*g_Ks$=S<SKjmW6&K88JN.9#mNFk=*fFBeoM@8a[&*TZft$9&ncjS
%=cPSGRh8]A&laEACV@M;]oX4$-2Ag.N%F,/OXUGikj#1^2I<7rX=uId,_u-?B;;7t!5j>,)Cta6/A?L8k!sMLZ>O&#TgW!pUA0M6
%+_J10.T,0md>,XW>gRp&a+=mJ.AK5O``>q`X0#><,,LfjiM`/3m,p^@7UIlM^hD:"3efTto:^0P##-:;!mZt[/SKC8!\GXVh3-;b
%),H+gc3/*.MS;U7F]dO;\ZGcZMmsZsb*'^Q,n)%]"kX`p*V*u3L"kerYT<4WBUhO>7!@5,U#k#I3VBBni44HuP<p.MQDqefj$k^r
%=f%djimZm6'$Lkq!Xc2<'?W6^0.ORkRC,=t="(G3lt%jhq]L\"=i[&]_Z$ERj]a#_[fU52JEqnq@ql%PnYDS(D;]C6HUafXhashR
%q8un*&YUks#R7hLU\$hG#m*[\BV^W1WXL1/)2Vfk\7'D-==LoPPsNHq$r4nnfWlb^riF@Zjda^iO,?@-GFnlK#c4pT'@nUSWC.EX
%TuCcCJAT6LH#$m=6ILsDLO:Q$ej*G=8&d[Y+VjA<:?#T:]c1Y`@OQNSif0:b6kooM*J8TQflY*F7m]<N(*qQ`Y4gK+SHWVh?-#Sk
%]`l<_nZo<+B`q?o&CW>77li_g^*/r&E],+`P!)YcGZqr/;1]DYBi$]fE(1IP*ZN^5Fb<?9(#smPWJ.8O"X9F_)KT`.5-tp!j;n>Z
%5Un4JC5Stb<=B'K76j?Y,4T3PdcIBMRsO.O.kiH*i)J9Og($N)`f=:uNqEQY"S7]^Y992f`8CbE#$]Ln8nXQpQ*M,+(?nVYL9MU4
%O%Vj/-hA-Yh-u)rQSjT4dTaOR.A-i,4#XBl`L8,m\Q5eR9dPHX/>\JtHQETKpnX'JNF]\N.:_Y+Qd-T5Eu6!pbm(h3k_4LTp&\-b
%Q.Z`]8*>MP"6*TO,+q$Yjttf+gI`2Ed4b-Y:0GmK%2OZ^K#A8&/?1j.#g>jPEDR!+:)i(,1i8@H!5O:b4jjti7UlR@g*gi!Poi(G
%A]ZdHVJp9lP%kkcRNO:]OR't#NJ:0$dmUFJ.4k\@2'Se)1XlD8"DgM;ktS3tT>3tVh3"[Z(!@2,]1l0+,Z(QFP#MdrJ//4'i#+,m
%Ej\f(_#FP!#[0!<L!G9VZmA`-!HOh%lMtmTeTR1="PO1J)h0:L,E2+QG=IZf=^H[927ApI5QfLY9g<daq!=es>EAoZTIc"Z$1I4/
%OWBDu8%$=XHpA]d!JCq*dABo;%@/guTddcpK9[9hG;j>ha;Rt0pjAlB(>5<H89jP.Cu.ck9)s7k4%?Jmg#gMG4B_q[,_4AR5D"`E
%$8]+7,DV-p6Lm<3^pk&hok5k)4);;^J1IEhE%n!X+lS3R-Rr/F&2MJYie]^q.jC92h+g;2dn[9P&86<cek'@[._.m-Z[ahu`rYXu
%kcr!6Fj`rXUae?a4`gnJ9.FL6U-Kk8/h_OYW2!D[lZ#JR[W';L\)rfh6sNNA=h?)g.cU^`H(tX@KO7/%P_?<cgMmr244n16KPMHP
%L*@uiP1odm]#7-k_+Xs\8-?kG0uIPu4]?u&+l["4eF#`8#eEe;mc8eGkXo][e)F1`r#3)ldbselhZ'\6Df=KIiDP<4$:7CoQ+A7Y
%!ZH1_$4:`<[3[G@%'1^@]jc2"X9fWnL5iOAcqI[Y)cLKBO[;OCQd!/t^]6/5bfN-`"gf+V9`UjsR9R]]i0ff;(kqB28_PL?'a7B_
%nXu#.m8PX!EJ.UA=UV=>&0t6!,jC(rI_G`FrC^tE2+g'P7ODYM$uFm0l8&^DLA3F8E:Bn_@ql_t6u$t+Uh+l5DL.*i&4bZ3oa`We
%?D*S)L.t'o7PL'Qr+0((63.l*='@omEh*s_+G\Dp:Jtl+"7;nYNkgaQ$DU><MWBJ;/-.blNPq]DU_JS>#9CH&Eu?Le`2*OLN*!?V
%R\X4]Jkfmb&)@Dc)L'gm9Ojtu6&*iGT+h?h:)YcW[3`#)Z_^NWOa-TFH3r=K=Dro;8-88,j#HXaH`*7U//JM`(rZnTZ^-n`ZBsPW
%9>!u^3.q<nS7Q>.-bNZ"hkgN70-t9`J2\qX9uup[_U-Nlgn;bO-:VYV0LLcj$R5b`=mD6U!_7<[.d;fJAC)qS'Uiu`T_QToKH1sW
%R<&n@F<WMJ/mek.;^#l>>P(N-;Z!h?CLZ+G`@YRE;rMApBYTd7G?Ct=ct9)&#8p8UjJNJ!WRR;c:M4XOFpFbaQC&_l;N0>'-hLc]
%>B4TGHhQZa<B:V]YN07%V;@NeD9IBNg7?nGkl>F^lVlP)fb5=UEl3n@/.&>JEP<PMgkq48UqTP:AW<cjL_J6HD:2V`W$R9]mn(l8
%*0I"]O-u+#:9]s^6Du#GB>q`(0+C'4J2Gu4#Ht;X;acN1J@\,A(J+BcN9OrP8SeOTNQ.Wf)5>nEQHj%U%#SXNZ9XFb0cG%`U8XFV
%9X3&s9iKDQ]:O9O;Kho32Q%4'BC5^4fF+a>_/Pg!/t>O%NFEN`P6%E.BO=X]L,N^2"YCKkYjHRn)KC331!JX$p-(_d+NK7pD!b%i
%;RHrg-\Bo,&YB&p%'@`gGYCtM#O*]XiP>o>)eYNJ(I)!%J5<DjSL*M>9[R&>K4pJu["["cm(nf&3f.XWn!a%#Q#29c&;'f78WoOS
%S0/`3Li0KGJ0l"]Z"CNX*)5u(eYJ0/-XnUb-e6%m<6_Y1MAm3d/4++!Bt#WK4NcJ;B]K>)*EPGZVQGqTZ=K1+*^no<S%tC@;-LR-
%Ytu6I"HKH)]<mnQ-4kXYC8]e?8qVd^!GUnZj?3VX6H:H(ARVd*WN/8WY\MQJ"0:=@`"d3_PirL"#uWO[8?o8ld#bTbplH(?"AKLb
%5)"bI0lJ>W"9DY?oTrT5$bOge:UER>.;;n$`(<6bJNPfS$4h'L^9gp%Fif!fFA`gq8:?KiZWieBBe8TTXX]A]g@AOs_%9O&GF]MK
%ZK%<kkXMKkBLEPPX\(FqfWurfQIU^*,e*tJ*@JH8_ZeCVXSs*U[0a&C.3#^_MoG2oM%k,T>5dJ#1E\*-R!%[.5Dg?=TTt:C=\@BO
%75Gna`#@Qc3"^3N7??4s0VK[>gPeBiBr)0+O$t.tj=6MM"t<'-c5[[=N*>-I"-N@mM4G$,*]XHBBXUfUmFe>eLkI`7oM7j!o[-#a
%64Q=OE^mOCW8YcE!CBK>CY!8X@bOA*Z"Mg*lsXAAaX3Kh,CUa^f[`elLcr7!q-=Yb.m("n&DNll:=)m*agHf'-md%f>ROHS.<(MX
%[M8q):RY[aQc]6TdcUbn>O:HNpfn^='t4Sn%7l0l8ZIu)^rmj&,"o4'EZDB]%kkc]UKAm3BiQ"C@Or0A.VJj;i>Boq<jNaI_Dq4R
%5WjWpm#Sq&UXLbS,bfUeYU:;0F]]>o*/$#BoJLBF!"pFc`IV1$-;(-P=_?lWT,J!@e1ffOnV)LQ($?>Z9ri]+Ybr@kF"F])K%S!;
%/"AN3-UU<(Q6=MUeVG/"iD*!YKcl\HT8fpe\g.&EXD%QIotlFp`@/plQN1>#fmmNO=B;L:AN_CBW_G!"OBO6:2/V;LW*OMPBNWd6
%Q'2aS(Fc1qV41++j=1IQ_2BQ9QGC@!B1f$]PtF#hq:QVcbE?+9[STdEp#M'n_:&2ro!.K+K3a(W%,T0N!q6C,>E$`ek+Ij7C5(_a
%O?mOg<[T\C?LU,^;%1QK(/6"S9k%A*-kS?..s/K8R"o!G`%CcoS<C-%O=^(^U]h[6Ro,K)LU-E4qN-][J4)kj`'9.Q'E1L$jr.6`
%1)O,r9d@V9<"b.DFJW*.A^-d/;DsCZcgu^q#]']3EOo#74MIudoL@!N0Q@`#7spPH))!F/#ad=HE^7rrMsZCN>>2'$YG/h&%+1HZ
%<8+QH6%ReM,&mIKe22BQBBlRA7Ne"W%s_$ZI17Vo2T(^Vc&3<OUf,;`Jnn?VVpf\+#cTO0+P=)DICW9Q!6`O<"BLI(L,INABedP^
%cqM';rHG6f$I[#);R/\T))'2jIs(:XS=`A9Xgf's:+#tQ?rW3-HN2Ij[W'^Omrh2LW-^gT\m$s3&qnaV,Eb/9e!4HJGjQ("$`<+.
%,C6)D.hm9MD_s<kR6Q&!CgE;Kc_,rG/9aI14OhRe41=Y=TqWmd[\q/uO_U.nV.[idWLK@'PMRU[R(*lO]Z=cjmA7m%T\uhJj&tBH
%fF]n\4%%-E=d\`JSeA50iPLd\U?efJnEUqUOXV$:V<MSmR.0CA'I#X\:YN]S>R7-oa\F_Q_8FWr'0p:$OJYGurKmbLp2o'^,^;#;
%HtRd94FWEQA<oRm4?-[Xe1?:T0DdJ_if"cEU:(k<!^+?t_F5pOGOu4Cr&pdhK3G"i;qUO_.ro,qIYY(L18bSln"^g`<9cQNEJ%8n
%0]+VKi6;W#*<Torpr&+4d6_5G(>_,>-i+S/]0)9N[T)*F"1spdo+CG^5otheRt^U^^`56hrIt!kTRYVkDM@g;3<B/^[!0lW,eP2'
%hBa]6/!]`Z=m9S#S9O2k+SjBGnLe6%&Y<)2mtf6lmmd-@i$G((DG56ZQNAb!Q0f&6:^]b$6?Yk.0thQ;.E3tuGZ][c%Q''!"';Ka
%ChqH.NgT5q1_M"W=GZC(W=7rWU-!ua,XUsRkft<'D:=%"/j&-OeM1OE_[Rho,7;m?56o=7.b!3=11[s0Z#+ib42)\[\dO.]0hG!K
%a&I6e+J5<YkV"4U!ENjl]'CXeZ9&X3"CBaKGV?FI<OOskS7)3E6af'IKn?h]h&0=XcMF.#%MGak(t%1$j$H@,/)?a>aF3ATkjBQ/
%MP3@\B)m89@dNpY%(Ydt4ZDH61PgN)I:)g<J?m+"NllPNoH]Y'NToj2puG$.<p8rO'.)_,L%!<K7uKKW6bYXt9F2T/dbRd9&#a;g
%p`W;8a)#r"BHhD1V7SM`LLU7(7!E:ri_/04l0\sO$P9*cFE[pA%15A@FE`K;O='UAGG[WE<4Y.^P4IN'Cj0R1-B<I^]-F<lfa3FM
%GD==o:bd[kNp(@+Yq'X7lk'9M`gH-'Bi\3-<jFeSQ=4fO.bu+CY(X8+dG4ip9g46Yh%>7A%C)hC,BOq%D9$aBL;`\6QS*B(`Y!"4
%XO,c@esAGHe(kn>9e;Rt%MCGRJK`j?,mdNX4l%-"cIT2'h4_I%q%S01P5;8lYAAE966qWDM!^4Y'Vq0o[Q@qK10IN-mR1O/$Jh8/
%),ODG]Dc,jmS4fA9=[l9>-S75^!PU.,:MVr1=Ca3[%EI1#0`lA@.5o**Tn97XDE*8aUSqD.GGlW9Zn/6@_9N!'3oTi]0lUVoS4sO
%SL$H89VE'Q*@d0tZsD>PJAiZ<V8@Cg)2=#tb]X4n.+9KsZeYY?OlaiAm7tGB]2c:$Jk6;rT([@/_G)5=L$d0i@jf20\i\rB`psJm
%*@.Lt\t8?8YSDodmZ?iHBO!lC;!@<Q@Rfjg&`"HM)$K-7d+sN](DaTorhh!P3rhPP?X]Y?"'V1)`!Y<@FKM5/Np,o(R"]7Ld+q"V
%O\04ZGDFY*N,t9Pc4E@Mm<Z?*6YOi.<p8r[_]9(r6mOa^,]([CdG7)<Pu`V-Nn6!#<;>m#:(a%;b]eh`:4PY=hjs;G6sZ)Hc?SHN
%)\WSs&i.GQoA/q0ZI,`Bh&-8t2eId4%dK\ADjBc$8$soB&`9-Fm66r^$JulJ*lk;%_KTX#JiipFcZb.T7dGB/45^B83+YX(#EPAi
%<JB`KN^2%@!(+<*Sb0^VRI5aBWpPZ2^]7hcNkf]@RkD-mL$"E]c,H:9%L.JC4i^h:Kr8fZEJK];['Wee47p1Kr2C7__,t4QoSDB7
%.22E/(OA0lJ8YJ9a:Z*+`%8F%oQH<5nr4H344BEg257R4f[6THoQCEf"<h+gH92Ccb^;fsLC_6ABOSB&h*GMs6>f;_7[\7BG!"V6
%U;X*qgP(f:0B@:lDZ"@6O`t]9K<IWUDTlr&X-f-)Q,sMJVQ_QEP#b627q?Vl6bsAV5tL**@,%8s:4C<&n0((<*mo/M*Q+V5f0H:7
%8m%426X]gjJu\X_,:IO09<=-ErhjjF)sF(_P-@89ZQ4&Z$r`#*ChLj]U0TT4ISf+HG*W`H*FYEA]QTTtVdOg[4$rd1LQ%)W?uL3N
%X9u3QqT+>qW=[h#Fq'H88OHrKJj0pe7!\/B:]uq)YFXpB=KsX9Yo29f]QU0VBTIH+nB*#]Wm#Xf;[fp=f6-YiCs3nSgTe"9#2_5k
%#stt=iX(nt>^*'?8*:E*);.)VM!YW>9\`#^[PLVG[4An5L.Nd?4V]])Q8T*m7_EoSOEPp2[=\Q)K\V:5cB.J0`>)]@=Ekn>rO%F%
%&;S37'j`u>@YNI`g<m3VM-"EY!32MQKNk.X1Sr7/db5Q_/@8\YCM,u/7?f$#4,=dOW3g`0jH8/fed`;n<Z'6<_6b=-8YrhI6lTs,
%f$4j,W(Z0B#<n@W6_UnDbb>ue6>Hi':"(XcCBo\.!]-[\,BbZQopF=UJC1JNTVIke;D/28B!k"-K_bPgC.DQd7]aaI#J5Qs7UoU`
%6b)Eam:kqr0F3VHT+V5B'!M,e^,4Fu9"n>/m3!!#SAK#RL^Vtk'imC[P`._YeW*Z@nY6GlSKUJ)=Wt2j8>W,YOP1"e/Q5\;;EK\g
%EO_+a&cE-]Y*.L9d\pg+PM2Es,[O%/i:4/LYEITo.c?c&6>?a0=@0u\e.0N$(Wa.bUiqLbnEgR\*MhPFT$knd&omT'G(p!u-EJoT
%)'W0Qh_X!FrCq%\T$\#MD1k>qaCn'u20335UP)&!L!bpDcF5<_Ftft\<LRsJR1+!#M>T/?["F_pkXoQ%S4<<)V4@W-0rp:'P]hcf
%MAUY341Lo!c`<RZ]EY<r@no+<qSZ:`bfgoqiKS?-1%*J(1Ydf7%aKW)c4il4j.4\*<_>G@LsB[7..,sLjO7^+C55ONJat`H[=_R0
%&dtf^oKdTA"]#mUW"S(?*7<J+XQa;m[=^l7cO6iq6(+-[)=cG>Xbe];GjR1=G/95bmH>U:/Uu\#%,4GnV,:P\gl&sn,?d0&5j);6
%UU52DOTaYo[!!d\SG&&q%alsf>u,5`Tu3JONe[_#Os<jd/9O9\.&e6GoiXsN,.5=^`ql?#C<+C5WC@8pSREg_Zn%qq5hS*W67epU
%QsX9**0JsC[a=(M<]g4YMX:bO*MRd(&0A13iN8CE:20*G@N`Ls6>S#;!]I+kgR4jVR$H<a-jFYH.^:#\%Gq:I-FSP4&uc?KYoVhP
%6;U^=mDq4PR(O$9*IBMC$s&2On;+`TgD+0Z"p2ns<J^%`7hN+hN\,0s.LhCMYoO6*9;&paCkls>aeC8i*IID"3'JOp6RP*hmn.DO
%E)[7Eo.%\%QHcb)n`ktu&:J#8]("FIl(!,9Q.V*Z&hS>D8&TQ^9>nCqgDRl-Bmh?Y`<]Jm[UFmCNeXe4Y%P1!b_<[]1YWe!o>,Gd
%1##82N/2W!Ce"g;Wp:8'*MIGo4C4EB(`$X%W%cs<I_=4bd#*j70V]rkARW$"K]kC\fhU8`)?(R1gKCsT?ilSGNkc.g!uj&N&LYD.
%c`!3RQo_s!@CG4:-U$mRfo?agZ"n\u4#X]lh2I`gcp$Ste+V"/6kB^ZQRPJ`8;WF(Do?H^"<uh1(1oYfI$)(L0\[2]88^Y&[Nc4`
%\O6h5*IDqM`a61Bn/bG?%#<V]m!%c3:Mkm+0)1AMC--I"nG<o74-?nQVmbV]75C[I,F"5hO".OX;94EsCIi:IE?YRX1>AN!>aR\_
%ZQ5Ng`-3.UgYlq(Xt7e?67nA3T%OV*@*aghm82(LanJnnmJ'LaVn@1$T9i8,ijE8T)U4nkCIbmOL>rZH*LWf")+Mhn6uaNmBOS>Z
%YddS/f<.oNA;M?6ZQ23R6@d)e9pa@ErEE'7-OqQZB9_,1F>b]8.b&Ve.:?<OLt[lf*JHpc0S]opbKa39[hF(hcE32_!<e*>2O3&m
%W4(C\^"mF.i3nH_487)6aGXBgLu+.o>9%dZ\!'D&<`XN.kXF)=;mL3pOq=n.Xg$QB_MGXM@CIHn&^b,ZoQFcQOFfNi[j1E<.]kCa
%1A8dA):@3dQgQ\Ja)Z%,rji8thJRb;pHPX<Phn%-aIi)(If=9RLHf-0f/lh@+SaorX35GPLi2dVSifmGna`UUPek+^r6\TLphrb'
%mJ-P&l^.9NT7"'EFeO:hFNkmlDAJjor)'fqrn!2qHLpYsB(>[Ir7)($hW"Fin@/Fes7G2Op?TRK^0LU!Il3/Iq01_Gqsd0P>/\?_
%Qj=N$Dm6@rQi;pfYD;jQ3I^pCFKbVO90?<_-9hak,MD&@&Elb-bYOD^J-$29/e-`k&.N>]?n`TDd6J5/2_MiEI*8#C91QgU*51<T
%.kfQmM8QOpUrr"!#61JolG`%j<5.TG/-ar"'U<T]$Mi<?qGW8VIe%\g'6tUX=2_J2@]$4@oCeFNIiCmWMs;NFH!ZHkR/R:Arm/^u
%_\Q[o_m:q=I]+"286hp>.ie\)M"3]1h_qji<8Pf0#Tc]kr2OSClGnV8pf=nE7Y;/F`PO<@bFTU4,?EZpb4Qd,+PZU1g_m[`T.V_-
%)j$C)$.3CH.PuR5.N_@Qg<4a***dh.Q0ZVDJufnt%q-j1P:]BS&h<WF_XYhAo!c;+P/bPMQVk<-N"Kj$QcjJj5IYTp3hP6CZ#KUr
%<PJ/^TiZ0-e_\KmXe)Z;SR`u7k+.m]nhPs+eW312:KIb(icj5QJ%rWY\QD%&:^df;E3#IXqZ1,ogJ/#E'cVpC^PWk5^n:J`@"YCB
%+nD]3cc/&RUZ4m6kNgGYht$(aJ,/V)s.N'GIagm=L`bZB\>)cd%924'/#$@\;\cZ;dCFR3Ok6Z2J&:o1j`f,0V2/1?mA+--mG9>M
%FDl[S[c;_88?Vsl55qM715"]Z5JM-IN7Pf6F1&n=)#M'2e9Af(kYm6YO!7!,3).(9E`FiYX/fq4lHk>Qd/VS6=?]n/:]T/+_g<3I
%L3n8%"4lmGjSccI?h!OE5B#'qmp_]R7fMqiJ,ehAcHc$`55scpqIc2PT76h%Z`gO'0DXe9<W8;6qJ>]D5;1;8o05F\06hp=j-uP"
%CRX#2\A(41^#ntKg%k7*V76VNn`deohXpi(s18$neWTt-8b7^g2_hu+Q]q#"HHgA4/qGe>(&?7lakQ/k#^NOJ(rWUjcYm,b(l2M-
%hh-3b4T"C)c%OK/$[4Iu.>.HZKQ6p2G=/n:n\:Eg2of!</t_<.4MKPC\q:U.i-,.tjk7oE$"Fo[]rP"Zrbk#KIfAWoaUdP-iLN-(
%0Ig?"VeL(^D`[FNc1R-9cBjlqbM22HIWasme=5o;5kank>e[cDqXiq2QfXGH41of>A%K>LmcNluFIPlE%.,pUqqKg"Up5o^hO3([
%C;T??qsib?nh8V<s*9fplBF)Njn`6l%bp=C_-J^$^H%p,`0C]X.[t;DCu4m2[qkp'hel@2K6MeAbjXVfS6b"N8ZlAOY>9&=Xs\U]
%rmLaOAS7@aFQ;R9_c=;eaEL^(Y"tC6]fp`7o'CJ@LaEREkPOB*e]"Sif4R%k[`\cd"YHq4?f9BdQ7j#Gc*#inGX&Mb\$*tjG3/G>
%Q1M=4pYu#p4"BE#?(JZX/C*%(Y<"adqrQ$rLoJV4h!E5/^>/(uc+`!"bN7,6Z&c_jo8h"_Rl$Lbn`H]#YW_aDZDVcVr+10Qh92#F
%=23%[X)c#&rO^tIARA`6f/M$j=T3?<e^"mKK&Ph')V:&5Dml39#Ac9tp#OB`f4QIta4j+nhfeUEjn=)EOo'N]BC;!=9[W.OGGs)j
%D3)B^?<8dd]O'I-AN(Uu?N6I(431]FRL,n7X6&T8o98K)s7=dkjmmH7LKXZ!c7IN1j*Q)pq>077:?1YiZE*LiW/Q!"k5*'=l12I8
%POg4(h=9U=)V6u3!gK+E?CbG/s6HjA[l`(a"6d4.A!H:kSc66UJR.d<Rr/&a4XfrNe#(fZCmkYKom\>_`W,AQ*B)B$Z0)^c-XkFO
%VRuN5Zn];*3kN%M2D(NkVh]VYn+>ObVX!t"NLiY,'"DGEA+)2UP7NuTLtn7Z\m(J1h_`+OYMa%PiFCf?>qN/b8))AE`]4rig$^Y3
%$f[,bi:ksCr-=1>rHX/*pZ22;k2jSQAkF-<TMEKgS0WH2.R%7SHq,ggbr7"_>N7=,iHU_bn6I6OLJlUkjmr8G-"c]jXe"\qm;[T9
%#CVN@b3-LU23VcIp,qJJbZs89D)=>Xnd,t!Zfab@+&(/'e#TP@j6PgtIj\cT*d\ok3L\=$IXUebm*1bJ>V=g^a*iD[IPN49G>NbN
%j!lpU0SXdkanBj.pT6Y$bhg"DIeE9sr9C0d7aN3f+gW*AHStL6Ph-#F@.!8^B'&]W][KAI%m-b/Cu;_rKRCu%m-bs:BfslL5N"$D
%8Y9GK2o[*/m[m>23d:>af_2,QItEN,T\]Q2:@VX#k2;X]QpWlY%NM-L>Fj/<'21"6hegX;Ud_]kFV^%T)Ye<hZ8rtB2.81_d8mkN
%C.q095(.]sH+?';DL&rYSJF"bs2hF`p[*Xpg>0fYrf\@p2IDufIW^*[]"D-OhL'V>l6).XAl8Q6=Snj2rUKT"b!/WU:s4Q>X[Mkg
%X^@UZgJ(68*e\n7j+NfRiLEb,!#U)3*VU72QX@IDWU70DS+J<+IB-0.>Wt]kNsS[S_qF\r#4q'%;^U!:?!gl2.6ca&]D@g,53:&>
%PXG+YG@P<p=^o;D)`X7_`80LcSUHM)6[:j!>XtsNeM(<'/7NsGG()WW54<lCK/l0.>b4WflT[Nm5Q1.f8pU-gdTm=Io'184pGi8^
%n=-o:Hjg6;]QdMq3][65jL5GB-m,-A-eB"B>IecU6^hEO%)5nipfAHQm2p1mrN6?M]juM!_YB]e5J&rQA^\rjV*"?$:+jjF->fD?
%4k(E5!arGaBs'kW$O?(k0iarA)9ee-0+PK)A^Y5DpPn\K.oE2%jNXML3jq1#7<uhQJZ"R.(1kWr%cun7n62%_VWEBYU.e`iqd59P
%.-uN6a&IsPAMA0Wb$9kq5#.S;=c6`QJ6J1/8n?i0qP1&Z3IOT/-rU=k-l2KLf:kt8(Akhr+)<INl!p_^R51-sg%G*-V)cJ_RRuE-
%%U*A/ht""fo-RI^c!TK"^aTcV6TjR:m.(T,'n5-)s7X>H`.[sFSg-XYG^`ADpru>o3sR<`FQCVh7%'J9g0O>SSFtTh.@Be^XOh't
%FqAuecdu;TRqn).>[-3_c<>)9C*0lbRuOgGAZX-[D:WGDZrS,XKRVQ>IXBtLAAT&YhN[@m,lm+FFSBY%cJ*$L'[5<FhF=7t':M@W
%:lQlUrcV1*io&Nr=^rN^[EpjFs'2.FF+3]7%m0!#gpa\=G56O]ip:\I=66@nlIGIdk)2fu)hVpMor0#F(5eM8Q3.+S\R&TID$;IM
%1bb0GY5j>uqd="iPSjnk!JY]cGqgP;C`M.?$"Z',Hso4Fc,,/3hp!AFs(D/Rq0tWPs0-a8*gb].+Ep,!ff.CDEH1ig#=itsosp9B
%`Xer&J(ej*`%q<4\OR`fc=QHKj<sA_IFlfC<u8'C?=uM#lSmSjeF1n"]2So/bNKF6$VZ?irOf7cB)"*"dE\I0'?77nS>.g+r>rkb
%]\$m+IY[(cKJ?0J\NfOZjdo_Lh7UC&hFopq%e+S1D"@&nfm'tnje0o?#6J7['Sk`m-6hmQD%EK\B^YM^o=oAGG<b]63rg>W\$\?]
%J*6auSH"#8_9?F,F8gC/s3CGtGHi3O!Og6c'.q<dkI[VmTKS@&bW4Q@k<%jSmqcf9?!?,[KL-bd]e^I6Jcg#dil.D=bGSF.fsJ;[
%Z?+TGZ)c:N[QHdhqXsP*StGuRng7`5j:nhm'1TM.K:Q-S'3+dslPJ5ZR^suhQg_KQg\6n42o6e#PU;H)Nf_KtZ9=#*4VG?Y3C5Vo
%aQ<c]I4`2?`nh[^gGlR2LWRK/s6QZLjmquKCaC\ub6RRj:KO1eEcuT>]_Uo?q>@S"l]]MoH0mV@[YnWT9aGC'r9r=XS""9%K;3![
%Y2%PWN"^rP4O8MH(dAsE]AkTi(M@jCT0Z!8Zo7"REAX8dZ9HKD5K,d8[62]Hr:Q]^q'oS[PJSj95M;HM4^fFs\%P0,B`0<j4%-Qg
%Z&^&S1hhB`iM2qQU[3W(p3u@t;OmnCF5UU>]Zbqn3Ued/?KT&Hq`K$6As'le7U[-`R0,,>m"*H5QTG=VG,H&s:S#hg"H^>rkNSWa
%8<4HuipjD(hT83Y!tMrm9SX'80a6WGhn^Y:J/ld@'DjM=)/NbP".NV*\,WAd"&aF2aB$(Ok2^>o%Vn6Jp\8.LpVUu?@bQm\ECOEk
%j2:DImag5:OOF`)K/jl`"K'4n^iYA#3hn@QkY&NkVB64Ad<@6>SmVFWPLM_'Y5AU);fc%>hO"ENhp+E:..[0:VG^a-X/.[b%,9'Y
%d2;knn(V@@[F`re(U'/afF?HUk7^kdU$_ZZ3Q;TW#C)T=q`(-tIJYd\Pq7:UclSa5p;DVKgqH+QfGlt03K.l'%-#mFkEG2qoX^S&
%`_@>pbN6*7Y'T'0L,3[t9ecotBFfQ*EJtcOq2rWNiZ,uu+J7fSiu%"m`%e-J@?+jaXf$MZH[^ubb]/Siq_E44@ub%=80$[-n^)/K
%-<6-jG5pq$SkEF6_[CI4EdDeIrmfQPPhL0Rh5pdZ\)1E^U!#A2?fuG/19')SGk%p@Fa<Z9c.UA+[cl\kMoKmh4$0&k[aEX;)I.>?
%!HI>DPLn!m>VH-?c1:FIMW_EgrN=.`3['Z/0JLgO#4pKtraQ-NR^*H2>[Lc1YuZ,&mRAs_c/e#%b#rnq]2?d[8R(Q>)(]J+9:@Q9
%7gPD;`<r'=Ou<eeLm>?Zi6P\:K,uN3o=$[15JB/(/*J[>Ji!8FPaK;tgXdd_#mV*C]j$]P*%7@cS,_I:bIs@b<:2VX0F(PE2.\I_
%Z.FH#&pcq+LM]!Z+&HM4ju0R4cm%un$<ZFU]T-i)!qFOqNPo=R4hdqefpA1V\_Z_CfpeJE\_3IA]t)gc>9C_;kfli++s4EUpBW:M
%-3,R?rnMtuEt^ajm*<lDh!E>2mbI0Sc0j@7:X!<fke^hMkU$c$?lZal$Z("Np;<a(O/o>E5@'mT3S#:a5PNf$$RU*&1EaU'>:q6\
%clWN&gqi#CbkRP]Y/CA#9'gM9O%4KO%m\-PK$ic7O;!6-J,Sp8jRhW](*^>9F`MeOo@q#TMA3e=q<`Q%PZk9Fe[h6k,CM9CB]=7H
%AK1RO$h#3^dA)V;^)QRdh?Q'=DOB*<fV)>m9q]P)O%ZrFHG2LE2;asr9JQ`?=79mt9c0.YCHfGC,YRqIhe2Tu],KM/0..nTS1EFk
%PIKeri;cr/YcI:gW$HZek5*'=l#Q'`*+(lkYeOrjPA+_Ak$4?M[/7oHhSr:BHRJi?G4B0B)Qd>VWt--si'K$AoA:mL]*HsUC.M=P
%42Bp&..c\]1S1JiVWBT5oT1^m-1FS=_8EYB-EQr.SGMDu^:Lm\:9o8uJ$R+L?$Y*b=Ea!pR8(<H[/0ht]/u-)5?+38hC7".-oqX/
%BXWccrC+G!I;mP&dA%*.5ILXT4.SG()*/#7ht>Gl3;@sZ#"gZK(q=7?4eSFV>r*COg"dLBI"uRH$)96Mr>rijc27)B(%99;g!.]u
%jWnO>K/t0R#B]_?FF7mnaQI1phjg3RNQ]P$iuT9nqgLM";9JLh\0#L#4rb*L5rjGtEr(>BT8eVU2BH<1GpXKc=/4qeFN<?fNsC)k
%K3T"LMh:g<+qi.*DheNgoU$5&D[#Si@%6Q!JVhUFdJn%Z;jH/;h>##>]<,=_#`E]kO04D)I(K\5)[C@rrAFWOoiio7%TlB.S`e2*
%IB<BJ'9C>pH`Rc#&)Ru.b<9t:(`?*r=Eo0'P4@TfTO^/iP\DM_q>*8I_sVR>+#(dSUT:MDQh>M%3KcJVT6maSO@m:nqV.c5"$Z&q
%K"HH#]jGMd$9S)Mg=*qM25-N/d!!gQ)q9pC@=S;dH2X)9lQ*u0p?`7B`IpY!c,l%0bC?-&IiMb-X09d7\Greh0"&f.hHZY$H]W"'
%W*M6<H'o\u1AgBG/i,:6ZU7o-a#bj_To0!mJ\PK_>eYYAKh5\`fDMBOIGDB\@.0j3G;D>l_N'qCZs-1L%Xi0i3\5RRr;:s9E8G`N
%c6\be;e#PfDfA2ZUd'8+Dl3?hc^2s.)%pK]U*%+\])3o4Kb-+;<.;LXl0NHc0->]9eZ3^4ro84;?2SqiT&1iDnuH+6c^$5%rqLK>
%q#'05R`5$9If.T_npepDC]%85rqZOPr9aOH5Q,elrOO]-ilf;jr`?FNSq$_;[i^+lV"N+WFfl+1c<>GA-IXP!-r9QX25qV;Z`o?X
%?7pEg;.j],(5?d=ETJY<d*#X?'SA,ud;;g`\*`(H#iuQ14UQ&d`YU_GiO6F=r!pDfnA>-@#=D^fLSl5DFSm@1;#YP6&hE41^L,ui
%5@=>1IId:egNEso&,ms$;:CoPg-p)D6F*.N`RU)h)W0f2OT.Mi+4o0jT=j4AT9R+K%77dclgV(NW,;+;*9U,f!cN%*bg6/>pr*")
%eg<T&KjXu]@%(Wd!\Y-1?R#9lF:!H\@aj<IdC)6+`V1`1?Tl`:mD!t=RcL4aaCQ!r3od@PFt>1#rj9nZb$@%`.E09i[as'b%VFK,
%muWl,j(oW@gk?3Hm=jSEkiIF5mVb0(gA3qm48]7(qMWmLC5;DFD\e=R"1]uXrioaJBe3M7a"#Cc1H)6!%_Z^cKH''q%I]B+e]'M-
%0@!4'rO0CYj]gCI0APH.0XULuGe.I8SoMmObMPP`kjPg$^46.P7re(@*uEi7a(?4^eeb@!n,b3qhn6)_>NI$(]MW7co7sf`C#s2k
%O]@d@mgYk\h^%7h*",+R.>'*o*S(eb`i$I+"8,p_LKbRV*N>5\01]aSpu5hEg=YpWUn\L_`U\+1f5`[ZUQf"3Mqd;9adob)C)qMI
%Rl-3BL%Mh@ES>>.H""HrMfO0_/R.jhAW,\`:iemhkM"TaB")c#g\"@98o^%=N;el@c^:Rccui.<J?@F82<[s'baKG,0n6F?cCVuP
%&3_b9,O92K4>D-X;c>l!FFgW\s3s*ApcbkcPI5#l=deHpBV"[_J"-JCl'hNYSB]YE4t_jkhu1++PFlX=;%jR+V_L]])oq,B7K.L)
%?ZVH$L\1G7fR04d`KqZV`RprIYiL1u8!D7tfcp6/>(3W9ngDulNXm)&pL=,#4p3jXE"j3CchrtR`E4r`^W687.+s^.QfP,)Z&7>:
%5#C3P=l*;<L%3,f]sopiak@IQ(2)B%X.bmCWGScbMiIHNDgR^=,^6IRfXsg<hppb^KdsuCj7<F?<d2\6@A*1Hcua`ABbF5!ZFK"X
%cSo`GY&:>%-KWcp3gY'\g?QrsiDQ7_T/XF!Udocr!oD^C:!!R+^J4\tS+%<d#ZDCgXDXASJjTq7j]pU=>>1O4WlTIX<D=iVq]2;T
%4Sbs/n*mK2"q3-aac)S[++D:;aj&K,qSNi'g>=St(T25$hcr?P]RG.sC:UjIHgrIg#2As/XiH0%Z"c3<,&=do#4KU<<4]/ijK3:-
%LLe$hin3@HaedR3Gm--3_1NuB?<Dld=S"I*D+N]Fo8/WQ+GDMo>1nU3M]IIR0BR[d2I*uK#23;We)gVlQ]4K^>4_`;SBn2iRuk9"
%ROdWR'"Wg$,<s#3f#j\Pm7UNh>aLL,gWILgWc3mDjSGroN*d1^LNq".CUrP#f6+@YQ>?%i4O!*!_>g\)31JGeb'FOI\TN/UclG,[
%h^:<$c&p>uCHHRF>a%*4/#S6C3fhoE0Gh%n]]kbZ((QhR749!k\anYFTuU(RRLP/PAYN9XZs?^.P$>@`^7r749T`=^ecq(jVV&Ga
%2uO\X5?j95X\nFK3G`Sqq`'i7pXpn6M:=b6rB6e/@Z][NFR[8TCB\joZ=o[q[Xn$BNf1".)R\^.Sr=tYYO`\cC%N_@<MnR:Gl+W6
%r+:<'YC5?R.eSuQ#!QkX`Bdnkq"XI0dl/*#?JY6B2c[!:C3&+iZ\Bt^>IGPIna(h8*=cER+hP_h'Kt_""%u[%l=@fDbSkTBKY:LX
%4'FFD2cUpTB`4d^jM'GtT5F/3+U@T2pCojU*[gV(5F>jrC#kP>rS?=/9V_FIj`WJarI),r#PYda2A!4io_@_:S<cP;k3S_`o5BrH
%0:&Lp&eOq)-^W0*f<'gP]%<Q-OTGE+q4$4n+4/^'c2VE#fAidd/l0chqZm/FgUM/sDJkclQeclKB7e?tBDSg`B@$Tb]oDDRT5lg)
%`NO4Z<oT0ip`Z_GoBl+HZe%.fr)/.tS&#s,mJ,[jI<5*ej2,pgWoEIlOr?jG'O(G*c0M^b3N>&/($DOT**)pPU5DD[ZZ/sLfb@G&
%[R:k"K8M.U/Q"sOZ9@V)WbC79<3b!;*o*bEd64fbWYjS.<GXT`(%;.W%8k(rcWuM[5#>'1r6CsEg`0;C/N*qc\ig<K\iU$0mGsr"
%E"X6FW)uE/Bg[-K7ebV&9MpFhR&j#sA4Y+5OCF*:@Z")+H9CkoLa\/KP)/*;;S8'PU=g)U1j0?Xc6:1($n64HXI_M"RLDN3+kmcX
%+Oq@n6XKO%K+Oa<OYRD(Nip]DCnl5oH+$\XimrohN4q[iZZToU**@iD6sBb4gZ5StZMi>2VTA@]6KC&GHFpFEposKr\q>9()Onm'
%YiO<d9/*##]lDoPC@'VEF"u"+_a,NaVU6V9AsHVEB9SZNo_JTJPG`!8+l?*Zd\:qJX9^>'aP$+c9i2j4)M9#V=FemS=cXNW*AZ8p
%VNnJAKm`C5%4IQKR*S=uU3Zp4QRmg@q1i51#D=&KW+@#;5OWmT_o,lHk9Z_Ul*eZ[B*/XCU[e\9hMlM!1taM56S+_s8ZssV)0^VZ
%@B,$Na,"qUaqVZXBc8JE#d#5Ac=]jblG3#8)5bLH/EJnQ/;7p?FOA4na?Fpu(UJjSd,u3thkTXjDhk,/jIp:?g/;3D)``E3/d58M
%q.I9ag;^V@9[E:\Ga4&]pq\IBm2rgjds9Yp^("T4H*j-aYIG`6%SbjU7:&nF\tgKb=4SkP:L;@)5`SN=fQM8pTm'`JPu#$`nWZ,E
%cu$mbp"8_l3tL>f0i)MTWf%TPim(XZI2j,;cY>RgI!sadQ4L.E/n@-P7%Uef<Cb_!ib97Y85%K=YtY]u1pj-p9u":K/MV"?`[3?*
%X0QsqHO/62Gt"9ioLh$bro1Xec!ZG_@:cS];XYfG)Pd-Oq`MU%/[G)uS^A<.g+-b%-"g,IQ`Lno[IX='ZE]oOS$4bMIH?e%WDcf^
%QZ/$<PZ=IA0=^&LH1EjgU"C\+[j''d8H$6I9,;+eVeE7tD30h3]PQ0+&U[lOCE'Vp\#mf"T,C7,gnh*N)UfrDk-HKP6d8`2=5'M[
%4.kS:iO!Xg]\8q1OBE=+HL<U:WClIn,07pBV`Jbgiga(_,rVL1nilAC-XS+/VCc,)M<-FIW@BQ"Q']V8X"(-POk]"QC0[pZJLBcW
%KeICKf61qf4IB6"5Mg)Ri%C=S6oDF9[)<3=QFL)C=c#-h0kVfpXMfm[Pt:4DM/%,@ZP#=S[B)bJ<&fi<7(X`qi>s<rdHiJ9YpI9e
%[]DkHfmu+7/(&7W8ka^%n`8k*<W_!8=c'#(TX9B`-h!Rk#[>^iBg"%6'6V?0$%%H7KUJ?r(f')(V^5fo&>ZdG#[31<.>$3M-+M$`
%,&hJB9-?QqM$Z+39\fHKa-.UgbQJ<l,r8umbeuYT-5Pp(M.TLVb__2RY'#I$@B-H;.7qo<IO\3s5"7[hI!`D2NNO/(>hA%;_H9t/
%D<FO=BQ'%X3>&h[H(O.0Z6Qc's7/@S`QnWH-g7H@?-ZXb8j;.C$*b>2!J`lAF>tcA;840Sb,;(uSJ+Uo9\u13Y^S,j&@\brW@H2:
%:UZf0nuPl$JLTJSF@=u;Gr',a0FtpsK7'e:]I"JCT"=K!=d/WD%;DSRZ$a<&>IAL'Aa=/$3.A2b4KEO_e2-1M)-Y2s.H\hMPWe,m
%NkS7P6F%4X`U4RS,$\InS8He7C#H,8s1S,kbC+7W=au$a$NkaLV<]bfNR@Q`+.+,\q^+-G/Df!Kj,?Vg3Y+C>[p<g]Cha)S$e_H6
%q09cIES1%=Mas94?adtlmWNt9lFOi19$E,8l0!I(f4TLV\[),OK5Zo)I+Q=M.Y/4^<g.Tun\o;7AOio\s7UAuGAr2]KmZ8:+J#k#
%,Ncm'c_;[q`.0@V1&coQ/_`Ce)m;-Paj)s%%6rgRpH?7h^A7lB2/U"J.N.R-H`R++Ae^<)E^-S?7ug!fnuCIh\k]e+L2OE>,TuDN
%F"N%$(APD!?+YS+j_WN*o3'Ha=YXO'P-^O8LsT1^S/ljp(_K_EoO0mY!;.cF%b.tdfbR&f)p>PMg""Sg0=F@VQt\1YX_H+UjC?`]
%H2Yd\C1L[/ZHlJ"T+n/;jHqg1.n@:Jb6^V))S[aA^"GZBcchQ$aL`]#4m9IH7^b3d]ghFr=8AY7I]Z*H.2.BJSsAA2;98P]bJ(l?
%c]R"[&*)HG:<GI[@_H*kg%0XE;0>df-%jfa;q4HYBV"HbIGKb$-)XR^db=Y8b=ORDjt+ZF76q^NRhN$E5?&Q?Db6`!WG*(4\"lm<
%L,=dTUap/DHA@bBMHmf_7L:$^..n(6dO6X7:kT@K7e+AQMVjXf1%-cT@f>FG8tGKL<heC]UU>PD)Pr,X7VS+;)->eZ1lC1T7PPk1
%..nT]djXU<1s1Q<=73:UNFMkK1l<lsA!iP.^d6cHN[nh.;LL8lUTCZC_*"is;>d:J9&,Ltl+`M>nA6\iPdPdOLNcjehgZOjD/&DD
%-"SjqmKd\]$ur'P<k:@bdD@;m;YK)uO5dY0;>c/2MA0BujAGj;1lB5r<mrJqPc*L6f\G8eZ:-(!Z=Sr39VY.4c:W/5I.m5/ER/?`
%UtH0c"asr>Rh>KJ9$h)Q"28!'-s]E=KW\+Fh#44m;kM2H$9u.u;!^PnG3#E1@g]'.YD4Qk9oU1\k.V=^S$$jVBY&[5d*9Fe!F8]T
%j++<(lN,i.D/;e;`0s$W4$/U49;0.ohUpL).sj.-dOd@Oikon^KIKV2d;8%5fTHD@l0NXV>0JQ/?17.4o$Gq4Nd-re'>GiE&iO8s
%o]R6,:oY::ae5TL>fiXl%2fjq2YM<-/7@8fnc!\O;^bP-[$!a1)_rgYg6+`nRkcBB_X]#@3JGmBc"<UWImQ%<%WWshdi%odgN"^5
%.liiUqAdZ6T6`WmWKKZsC@l>PXG?32Q:-"&K1F[_SWD2GK4<P3qI38p4&29P\&emL\YZC@EP=/c*qCVYqbkZ_:QfG_Si'8Bo,u?]
%&=1n3G\`(,MR;?R#&DDJ=R5AK420g*H/K`9F7c`/YWd9k'`2e>'`2e></)u'^OH1fRc;t9SmneViKWudRI4oj]RIWU>OJt?MRWEt
%^H[&#p/=&1?H6q`rbP"Ea3j3pS(t29S_"p&;=\H@+5P,\NsJrrC&S#go!gTIEs2'9&]hV9ZL=,CN!?Cj+%@gPjjhW+>gbd%FO)8h
%F%Q*2<mj.K=3pBd1OSj(?bI59SDgM]q!*L6kapb6kE>7g0Bo'7ccu=FcAI179Wd)=]lHX+%CNd<)g(7)7obM20r'a'!1dMA:^MTl
%L@L:\V'::jib31j"PJ*s`5_=A@KSG%09=<"K84@D!21VS5Sc7p/8I&6nnk1gO(!:r2G+S&RN24^%HUATe[SY'mmri'1964^M:_2D
%LOJ]/<M&BS(#YP[E?u;UHFG)G>,qojl"jN,a`*f/j.#hJiGesn^72-rYWA(_/+PfAe+gY_7&g_[J0heG`\m?e=6^TS!rEH<j[.(h
%#-R5[0D@mTV<fseE8TrgXqRId/8Pr[Xt94M)lt,UguAl1M_nA[\Zto("tM9ck-eWb,9V-O#n\o)8R<=Of@M\k2lEp,#M5h=9k^F.
%R9AB;E[Y=YP$ba%KO#1ERO:R#!"??e[@0%+TN@)kla&]kF$QB!`h@o/ouCJd9SaY/7ILhK:(U(JmHTB+#=4&E)TZ,NPrYlD[b/+\
%EVig6fkD=#)i+RE?]#&@<kQ!BScds8"a^"&D>UpT`jIu:VkZgue*9]==HSYgarnp`*(;OL%^-2^\Z]fjCS&rA`oP5C*,TTO@#6fS
%]&>fH<=bGNDBsij?Vs=n(_su+-V7A[=1t.nQChN5'T*bV,/9:DdW,*>#9D#j5i13G2GRba7eU%ufPe>s<\N%*4E-r'7rOB!*8>UO
%D[j@H[PQs;kOmj;1W"e?l%S0.*6A#&a8WM`L)t^b/4<8e,]6K<EA`Fmiu9N`^M-:8[Is99bA9qp6tNF#>>u$3'Y7!Z(7#^'mD:f?
%!Z]a'0=#A19.Hr/DpkNK$sR[;8O_H]^Z/Pd7pEcHBSktJSDTZ[@_$rcRPb*r[Vl<73e`\g?#=LGftS2[RiMemq0>MQ'p$\j`W8S*
%[KrK@SZOrQD,sV`-caZn-@(THctRDi21T)))7?r.#*:LsWU[gUU*V2^20ir:HKo]Gl9"C'XLbZu(2N+9\E/?0@okI++SW008!!8M
%=!dOqMXY=75`;<lAk,..KTG/_ppf:&"/3GuDP+F"Q=m8hm-ci@-"\!6G1`gS`bT0o!6LRLJ-M*I`E:Y2je7LLG"-hQ:O9//693&S
%7(&>7fa%*HdODAU/kEB'3abp$e>Fq5]#`kZMVBf,0npq7,KrXiAd>WS7MN$D/h8UZjb9C=X&[\q=\LD`T40qu1T)6s:WY?r$K8eo
%aih0LYY=X0n0Y8qf4MR*Fn:=_"]YF^>D$PO8@(\m/+P%raegDNDFpV.JLUeA,0E=GM!a:1QCj\PosWMU;0Qo+LE\j_JNJ"?qMWbb
%e&mO(hf^+^]gFFp]PrAT_9gcriNu;+T^Y9la(cjfG]sSW#(V?faH)jM\7n=Nd>#Zb$(B\;mKi<-6+i%dG`ugKO/j0^<TZb?:DGh%
%d=W^LOg3G@Ao/l$M]ZM""q#&1*L<u+hDlQL>"!>R/2kdaDte(9AA@@m#_EsVIc*I!Na<VUDh?+eIVCV_-aPT!]R"su#re6GJT*H:
%"*m-(f\:BE7c+Kp:d>9G(<o#Acuj_g`SrhY._iCpT5L(A;$Lc.Z,$[s^N=qqgO?L_Ks>Us9*PaAm-`VpDD)lP'GU`=Z$Ya*<=Jg)
%m\RI'i/SNS&(A1uX^^4sm\S>)fN^/8Z$Y_C.L,;E">3CNJa;_C"E)D(h\QRR>VRp6%*TFgF2bqt.L*>i0^Z#P!0]"J6tT?fh@*!\
%g60-FDs:Z8[:GpLF>2PHWQ.r0.Q%<^hIH`5ffda3$j^/XYpub@?sJ6sA)!K-:APrVg+4oORF4D(%*QA=-EaDudde%@^SrZl=p"g2
%KKWf3UVZJd\&+GhN<^Ad*Au=$HKX<;G@k&R>WM;'DsPUQ0l;FtOm8hNFfIs`99mK-]\M]'bUkNN-cKjsMYSsc9A_<sY"rEM9dt-^
%b!C]Jk,+C#&Rq2u;Waj@\LD*-8sr%?F,4N?1!Ll=r<b:(9dp=tP]@.":95P"Yf;,gZ5$NNPJntBN]sYH7arkHE4$(M`<pLI%PjF<
%U-(#-NZe_PUI-V_m$fgMgM5gnBo>ssN+WJlX/N&OI>NQ&L1th-j:.qQW;[I2a7msEq;=1g@C&t_2R^tcC>gR7*>iTg=RhrXRPE]n
%M'Zc&^Id/p>"FF?KP*aAU`'s"dSB(^+LFuHWkHi6iXV9\8PWl)??pCRD[0pq'74]l4GM.!#f.CC96DicQctemN`Tj,/nK25$X+,:
%9XEU0EcGE_$,J+u_+hT6nWZ+Fd+5Cn"qJ5@IO[3O>u4^@E$eqVg+)Dk):^W361KWIha)#F_%j*763*.L)[a"F&"\2^`YTjLfN;MI
%,;fp<aL58?7jFaO?"fpOI[f6uL_?ge;92'cR0u#1>,a$+!JYch>(5[&X)`iM_'^e1/G;e]$[nt+0EYI[MpE?fN%ROnDGt8F?!F'D
%?)teMijPof&7@e<Z(src+fB"->8l3Ig<q3%q@'9s,$T#uapEWn2cG8GTdGAipoH6Q.g=WR`56uZ\s3jCiG#9s9nkejK8\,[U2;<;
%Hq<c[Qu5JMNOM4+^OGC2MLP+7p;p'8H!tYnf?G8rX@:<!lou07!eW3.T4oICnld&9\r*]u;M'aLM=h=pTPdp"9pCWm;CENt:3'X@
%79J;[&tPB:`<[@b'tU1hQC*-!Xb%#SA6gWUX('HbjU44DH!d1fBI`])NV#=VU/lb>aq/D:$F.t>VB-Z51rVga=UB"&V!k&-*!qiS
%Zq<Z1Qj!&0fn5rT7lb-tMK$hkCE$7<]@%NNn]&T_DN)hkeC.TV`9Q%Q3ti&t4ZLeS'[#r^lLA[&B./d73M,UMq9h^14:9`-pe!Cf
%;3#:J.>5EhTH)9QGe$hQa0Pk8EmQVS*7#C(^RWTKT$A?1:2O@j>>F@_FW-)tJ`VQEH_=;UAR4C24"8?<rck]fSFW*)$!.1WA;`U%
%/J3\T^=@=t#k`/VlNgNLmU3_k+!l"H4l&6@)U*NV#6[n\.lu'C-W[a_[WE*l3I*SpCR;@V0=TMt?H[@IWUR8_d`U7m?Q=p>a"<Z(
%rZ[ui1nCpI[%XKoE/3Z1PVn2e!g/unSS6)&W7#_ZCs'4UVhMj;X_1R!;0_'`mX=POi,n!V'Oe+M/uR1Vihdbm+MElbGb=9kPc$?m
%H9=W\M*"R(-CJ=/QfCY?Tf.=VQ1N*sXjd\>H0q]aNZPPE=^RXJoR+e?CV:f#Z3YTATErVr0t8&1J=]Q`BA-U"lhQe&-M4t=^7J,G
%b+ZK@.+/n94aC>Jja>4^2>3XLgOu.GGe-5HAG!R.YaZJ/fLV6Z0@SKR!/5^!c*jK"l_5@qq<J$GGVfds=M#]=[ats@DQ?8:=t;Tm
%1&lPb_8pf.?S'<Fm6f"@;dkS5mi1gMmReA2*`+IbA*q/fomjoVCNZbE"0+_X?X.DP$E(ciFZ8fU[RMr_cAoBq,]Bhlm75Fu9\D.!
%G0H0k1M+Tl5#ZXKPT;Pka'tq4Qmk+/b)ZGD7F%,<1M+T38_NXbMYA/Sbms(-Jm"@'>EQ*3YCtZkKDXF:Z>SA+@@]`Jgqo;(>:I2h
%MMKCu6T0cP#Q)F8FZ@oQfd,Et^Z/Pd-YsFi>k[#a]=?8_Z)dG./+PF]8Um@Lo"fb:Eql&s@4h-Dn+d/D7Dno/F#El#%6mq3DhpP>
%Z>0/CltJiNBi#8rLRuN9n:T*:!E?t7iV(nDHb.O<Gk9dmi@FDK]fY.=X\.IPR]m./&2sVB9RcDaCA9C,?*/j2kj[%_(;n2;`UJK[
%e;!JAmY]uZ*K&hCjC7oC,X,K..8G^&jh7r@Id/86TAla;e's/ULS)";F>`tQQbqWM.=;Rg%8,UVi6tp<5F97%GCBb^N.-/Df4o0k
%\'D!53uk**NGB@H&ZPo[f[3&]1Mk'GqNQ_Dj`8un/D23h!uJHG^?'Pb]j80ErlBNkUg3$7Q.5ZQX>'"pI5%)FY`-=-F_uNPD/ttD
%j=uoDrsA7FT!uh^cfH&W@Yo7'E:#dR$e-["]l'.d5UYV"C-LcNLnu#.>qQ?I3&%pms"Qf*>MD?Z.$3&T3]Qter)k\>Z$%X5T`Cgi
%b=D;6Gs:Z:C@ku#?hD+.?!lZFqpBp%h<K?De$(GHhgbQOSD@Ldd(<-tZRO-'j82^!mkT>FgrFR)7euiYld'cl]/K\:%Vsh=o?T9?
%oE!e%o6L7OOH8hEnpIC/_.jlN]cCSC%n<l3;Vu=oQ!#a3!#+HEDmR/Y`d=FeX5;L:\)LR_m7+X)g9mi^hg^'X85#"L?)grKO]PVU
%opb'D4*&g+T2gp4?LNi:+`$Yb2n/+aJ9((WnJcIB[Hha'q$8X&9b0ulSfe`6;@K!Ufi70RNso8+\72E9D+Z4MSen*"<9J5Qo-(a-
%g;Y4G@j74*s%,.5SoWj,/LKmoW=[3tJ_JXVCAb?3[5^A)7>UV!X)aoR5m;@:j9)&fYr9hIg+^M"=OduEFPe9\=%Q<X=ajEbnaV%S
%*9_)RY0#GZ1fp*INHX\QR*BO$Q;CWTQM9/]GMS-=,).dOhTtdOq$I58WRf)#I'e3kNU#J,.m]WSPTAfl,<ju_D:[rk4Z*JT7#o;:
%^@hA)"U6B!a/DT!UIV)rRu4,bTCm6.D-c0JTLQp*q<7hVUN%fXoGO8=WS//.m8d+#hlOPT0?m=oY<'7EYI8jB/=VdU2T<$?hhlG/
%/]NR?YGT:-I!ktAUBeSRj%##-iRcXUEbc?3qh2=Z5.Z7DBVS(B]CoVe..#Y)2IY-'?5hX#jL,V@9TcNkc"LCA=+.h/[F<'sXc(\H
%PcHC`Y-"&@?.JCudJiB3Uf&Y<[1t%cI9jRuh_s<)s"qDY);CTqo"eD9h.F4M&SZ(s[Hha'\bGFag%8NDQct<c\[1?:l2@[S2]'ZV
%s#KsjL:eJ_G#%VS8cJ]!F-;$#gW,N=T-<Z8aL`>\DMGg9/^$@GhT_.+LQgnn+n+PUs3;eV7]a12;n"<=eW>]Ic$Fmb%R\13WEdEU
%*(6j\oGH@R8VKZC[Is:)-*[LoV7b$2f?=R9FC(3tq%XD[TY*gtdB#g0.L-]7dqWcSp-YGM[HgLQ\1&7hX5&0=j1!pl1-i9W-:hsP
%BfX._>"_SL;8m!L`fs9*$MkEP+nLG0iN4`H-<\T"2VuBW&0]5!44\^<Ht9G)YI;6_i8Ef5,qBa(33UPB5?,?k?f4X`PZN<7oNY(e
%Q0Z8V_:J\XMcZA"7Mu`;Cus3I*6;QE_oc7hL;:.p%S8^nf-fr$Rs";5!RGH]p0ZD/BO9dj"@]J@$O^LU&5-IBp0cbCRkN(D7oj6D
%lO')*kMlkm`^pk3fW^`@3S6S<mFkIO""_![,`K'B;$p%uBd<<dp7DWp]dAUM%78W@?n)Dud3fmSZ^S7pi'=\UdWh`E^iP<6.#_N=
%4U6$LPbS0=dfMA/ccWLsBX\)XQFn,&4`]CiIB-bD]l<)`H?oK$:e#J0-0<CS6%af-j0[XoEl*#gFsS)Eq139\!\%!\7c$?^joqq/
%EnLM3nj_MWEHY#lX?83NmsI7ZcA8-$CT\^@pP@stH@OG':7aWp5#*0=MJY87a1b?p$>948*8Q*pEEg-&\0PP^IJU$2J9#'ZH(6aj
%mXE_TXf4_=Y]>].Jp0t65Z9NqOIU,,$XoP7@%F;;(h$_j(RX&GgZJTIV6Ed5dE"MDn$0;$j-<>8r7Ab5BpD6N1]iG=1igZ@2JQ5[
%@om4$=6nu?U]o6Li+/_#P!\,GS@#2:5%/;4AQa4r?$]#L.K%Brf$LaDI8ZMV&30!imF.E+QWg^>*)C6$c[3Z(U]^hnWg*!>VN@1G
%;JNO9lDdbIW`$thV5jm930_#V>8j'3`7Cr$YU/Y9E;XIa4Bm/7VfGu`A0u9&VXhGOdj?k3gm<*1BMKHTP"*d#I[tOLF3\IE)9k1:
%%kM@(dX#D:9n*Rm7QT>4S5Ck/4,f\,]-V+N*i:[!3D:df33=pB]l,7c/^JiP9\enj]lVIID!;@&l^a_C-LNj+AFGU916ZcK_b%N8
%S5CijRk70<bhfRM:dDnoPS"]L]/8>J>!l"cHUHU3BlrOY*`%59RmWTWPFRc+P=G;.1g7!DN1.:9FNtc;c^`CU)01rt)Dit)F%4i\
%&BM5DS5D)d)4<CbacSCMIdK$Dp#g+o1FZmg^iCNtbo^Ihb,EYUjS_9`nDood)']udm=sq#LF@N4LDckrh<t(*[q!8\AajJ$IZ%U+
%19J@B/+H1JTi"1JBok"=9e>mL"\K=[r_Xp<"c^9`NQfOON2#Hl:1"C9Zbt4hA;G)`pc_Ra:Wr3*@Xg[-Nq:BVqIEHYN@saLYKAO7
%Ku(Hb<eTKl)p%Wa1_Z2TPbM&E1l@!s5%0Ylq\,9S"QB;=Y0OBlha)k`SM$F[>"8,aDn4LSc]puYrEJ`<4QXj$hI!H_\kfVt^5$D:
%hB2A,NPkYS%U/>dN'k*B@qmMq01U9ELZ*(W[F;W3?u'lA'f$PFS&Msc!iAV)3)\X;k484;V:AHMd#]h*HqHqps/_P!kW+pq;oLZL
%APLV"^2l=_^2*W@H/V_40`5Y\I7fHV_45;P5q?2(feolMI5U94NbI?GXpR[;2NZr-.48#[KEWoFBBRG'Y0>N<Ln4^r'En@4LTdj5
%^UZP?]ZKX@jGD"sT-"!T`ufa&MZ9"'hnD+#PQ1OG+9+DuhT$^do(hmX+.%oGlSl"S0"sHY4S`]:^%hI#q==BC\,G>Rrq5Ntq>"1E
%iic[[Sa*&$bG4uWi>/V7NY^Nh[J4kBg8sZ44iY7XbP5p=).+@!YN-c#(OnG0\[hA<J%L#JqJttqjW:U4hYQi[E#,le/RMBCEV]9=
%rp.bTO1p!_IWLh,eaiC2Ip<uXB?6]_r"7fUK>+PH]PZVDR4bS%iRd/JnU:4_o)JZVhRn8ShXUDZp$j[7BDCuYrB,I9jmgS>NZN-7
%T8.]>i8_'ojOmrRprncupQ,L7]ZXWre.lBeIs:hsn$6[iq6ta;I!>2:q==4!++="c0!B`;jPOpTHuaU`Er%R2^@JnM]_UUIe$$&K
%$75W7kP=cGAQ^\boVoi$rc31RpH*m'o]=3Jj[(R3nK6kkd;/`gq.JU@i1Y)hg%!2MZd[m.XtH?]3P3sfI6K>#T71j%IC&=/;dOV>
%R;`,Pgpi!/IknZufAX$1PI%?c5F'Q_04't?rFEhB=FBtSZ^Z%8ZfS=8^V9^8k5+@Uq'&1Y+Fg>jRr=Xk=8=7jNdpHgK[30Sj\KVi
%I/;I-JA,='aHmFH_rA+eI6(V]MpE02kj/0Rf!c^nGfU]E=3JeMYJ7eVs/0e%q+5l1r9]CA(<XgKEL+Ykfp?%S?MWJSY0Uc7N;nkE
%,bH,e)gj.,U!#3@JT'd;\DSX-f\4X@&"s)`C3,VEZu@F^OOD-5I/j#NoQ7eMiCmj_=-D'&K,UA2O_=Ep7:(D7$snm23gt'$G2AW(
%s6EbL-bmc18(1LNAo1FIVI@Y)Q(P8Y1N-TL4hgf+$SJHuGl+T1KB)S$P?[b+>M&#8]L2_D:qAHj*+1J<rEZkHr7a`9S*@%B\b",$
%Z6Zc+OHBL&YtOYCi"9G@9<th\&n^6*?FUsRn?t1lnpTD47;i+YpSodZIduFjnch#2bB4!aDs-;%kS%3,+"dN'goM8]GNe_YgHU6B
%]AV]Hm"/^nlYZ>L<IXW#p!"TOlZ,AjpZ9Z#4)BKD.(Ha]^cpsZYUDsurq!R8P`Gu9>%Z<6T;ioC5/)@sWr8O=(3\9t)1N*/r;H<Z
%cbD"a^OH/e(+4"T0?q+o^u80B6,\WIL,a0r*98uLCdIh_OEE7hoj)aQ1>7"^4SZcIIk4@_iN.qkH2RDO$m+IGDX[H)^Lu$q!C(`+
%c(G$H4FMjKOalFD2?Z2"r,hMie^Y1[rGI,F*Uh$I\\k_#8+5G]`Gt<ma-t+3[]GTU<bnuOeG\Q<g\oa`eN7X:hl2:dhaD"Ae?B$'
%rrEk3E+HS`%B5O?5]:7n38)o)ZO\`'+/$&of6hR]H%O-*iq*1qF0`PQCC\c6ZtKBR6/'i`L*>4e%4_=d[>q?\J:LsgPrSS#e&<ZI
%eTnW4G228Jm+l0W/Kr0^GSC3GZ*FFB]er<oE?.-+]"AYQq"t+Bn,nTb`o+Eg#.o)JISXFWZPoIrYD3sJ0uhQ0f+3:<'K(Xem#?qA
%C63lU5<'!s^I[KpllG_Koa`'\5KJ+iboEPY]j[PJALm95`UWbnjl3<e9TFN1qRf>uc$:sr1F@BT[>@Y<fkWs746TDE?\\nRMREs5
%9M^j:VU:Ihn&p"2iIpta1b:)]_7@i&D50DS(=*n7!kK),,&oLp0*L4c4tZ2b9M:0OaA[B#1p.%OHs%fDQo8tGX:)I`bC'(T1*<dm
%k\!91$X$/66<mh*N@-DQf?c_*'*KZ?Xn*-b_BYJ2[YsdCCtkdA+/U@#<s+U@+:mV8[`*g?KXCJ6*VX)(^W0JNXc$/g_>O?"]k:D&
%8WkM"I\(WC59N&o6tKq1AecFR(@Sq,%M/n;aE15PL\oi`0Nf\.h`K0NmG2j\loZdbBd:McABM`$8=bjmlpF!<+Fc[Rs%.8-%tmL8
%s!/-?IhEq"s&mJ7+!:a=qgZ!BT:lERi;YK/phujZ^JuT!&)GBXVnV6l\V2-9KpMcmFDIH5IY[EsqU2J<*(&u:%n,BU3.jqtTAI!U
%1iWKRSjcc-Ym8^V1U%+qM3b3/qsL/+J"^__:oe\!(#I#<nZT$Ao!8;hnb!T)iTs@YhV]4Mr5W..,>:h'5#sb1nE[j]3W\-:l]%D?
%!pTQMn0iUb%T_%G#F0<dKqj>t`W\QE%DM4+(cdFVT3#bbHt(QJd'!*?hOjsF='Lq^4_j3fI&!2?>h9)T5MBo&54_:<fA-,bf3$Dp
%of]ccpXIe9K+_%.f*Flfg0Qkh7'#Qf^Kl)_e2rA_MnnKV#^]s6j#bia)@,L8#;:%Y0B-\QA$LOa(JP2kc`'*Y7nnk+%]q)JB1\9/
%l_2^G"0PI@NTM*`a7(UDNfTKT!oK=W/jB]`mZ13.&;C;!Y_Uc)lbgM9pRS&c!\.L^nEbEc_9(\5Z,p[UK*)0k2&S@U"(HJ@[dLuK
%$n^#]%NR[WJH62W19?<D[/8^A\41lD!QK6X(+GO;OcSfI(FY.GoD,Y1n,h"@6%($_r^qMsR"t"F"fIPjcs%Xl&<Y-\86>S;*=SKN
%K&M2I<.rS20GguA$%9+'ikB=n'eT`@0A23!&\(qJiqot`SV4$J`r^qQgFDj,WFdmm,lS4*e*kG6L]^W8RrT\&-jTL(0:aArlsk":
%V;5MZFDh71%T/tD;$)&NLC(t37+s@Y3Xb/8:)_Ym,Q+65a^f2E@S8ZnON5gpTs*]!]S78`7B=>`O\4oq8HcP1+u#u9=rWu`7p!i<
%m3j:5]Q+EDi/1=p"8N@akTC5G*h+#6\cLKf.,/!^O$eRj)Jt]fgQ!OZZqhkA`q!P8`4>tf)!%CV=q"jScKUBTl1^+baMYkN4jb#^
%i_N#;kBL_9@&t*U*oS:OnaSl%8Jp(A\ihD3n`;o.TeMHj,ncW?$9=d*(@><9rgFU=e*itPAA1oG(#mWs;F`4Q"K5ELJ:s1U.tSuo
%dJ8O?dkJ)%IB%7/,i7J[KlQA,PerdY:b:S5<#e'^$>IC5Q7Ib?:n$;oO<+RPSmq-Y4C27MP6c_,^u&UQ:%r0H7`\-;KP]Tif>7RI
%!ddG<!_'*p`Ml?L*$JI"iQK*l+-9<mo^hjZ,*"IQS//-FE>%<@U_OQk#d&@7J4;S1>EFJEg'EWX%(<U5`4ZD(Z:3^+8i2dLf2\72
%5c3J,5)["$D"9V3)<6J8%/L-A?lXP7%F2qTTjj#r#KpS8^4rg-7s[PN_765;*aO-IfJPDipc.N72IaC^DKLE$n3^!d"[pd&0h3>F
%!oG4GY2E8n6QT&X"Zt[.*)`M)nLS%3^#U.W&@JBsMO<&ga]+osU0I->BXugt'G(>AG)25(2&E7m3M>M"-D6gFKD,0H2VKlJSt]kk
%[58@J%pl?7NQ=X'g(SL0Ltcot>VU6,pA2"n)%1CCE#:DaKle=Y84#f:577*6\,Wg3"TTb92c"u#Ha6ZZ:U0*kn.@8cO<Tp-5+-fP
%i^'gP_@9>34WITLZO>2b^=sT/]3K[EiHpi3$Q'/#/0*<$TYh;*QOGa[<BUH,Mf`$m[$6-gI,eKm*pH*if7D,@mMXJD"K8j^SV]:<
%LU9\i5bEl7#A/e;%;K'Y$8"Y1Eh]#IW.rU^a)Z^/?l\o;X:4S6ku3G"-5%Yai#C+Y:h3M8iIXM>F:O4F4##VqP,&Rjc/p4lEh=4Y
%/%j34s!S+4fQ^ekI%ad_3bf(7^i0HYOY,keLAS4(^p&1A(-$%b6bBHerLrfLJ8^nJ:k._E6IbeFjNFc"7$6&uBu&jR2Ltfu:MJ-$
%]>K/$i8e,[5(EGQPa$E;/lG-1Wn)`a`;NlV0I.!2_1K`!l.nIZZe5;3VAH7\r0],2V`0c/cVn:;a!Dr#GbJ$a6ZndkYj6W4_%(7:
%)pl)QI?H-8L5=^h&OU/nk5^/P(d%i9TSi_-TNL_k'Jhmd!(OQX*n'-Q?M)&76^^qr\@B!i_QdAZ@H=E'^HMPtEC.)6YSR[ikt/]8
%$mZXW-T_+]TOREO>BSuiJ@'h>r.kC+e+i2\Bs/pZo&`;!VI:3/]&3,_!0E`u_'rbZ,bOSh^C7^ZIe:C:=r]sL)W`FGg[e3g'p&h*
%RH.KKVd3'[,_Bu(Da-Y4g*&BY8_`WX:ghroLK<KG9!a^i5N!)R4:hGka<`&u!hWl>IsWOPC75PnY]GeDfak;ZapSYrh0Y<\ceoS%
%1l8(3mMuTN9<<s=&l(*l)+sTnNS9:N&[e!&O1Kc%$2RQ$8AT6h"c`$Zf6cO<7aG!AGWqha84O=GE%g%*mR/e"^\1FM<jga$#^(Pl
%%e8MsR")i"ctMp[htpLich1Xm?YT#=:iNB5&*oHaXiBfs>EsQ(IIFGg61I$^;Ctu6_fiLp/^[XRDB#GKjC+t6,XAL$#IgAie%eb[
%7"=1PW)KP>.QpP?HQ:?aj,5KlFCuO=(pDf<(-2VFF"dadF+XS";$*8)Ds]C(Pu#,#(n1BS9<A[5Adb/)X'10NK^\`]!DX"%Xi((2
%=o-j;*il\hX&=H=/n4T5rmU*pF>u9eDr:OpBXJZQ.[9hbr`6f_RVe!jZp/8\[8l1lLdPUoRK$![.TYkHfXCP]V?!HJQ-Kluj9Oo6
%Da*d%fPJ5us(pp%)m(tic^"'^2AnFOPsk02,=6d;LnC5\'qY^/&SM%&FT8Ndra-HKo=t6//7@5I#Ee%19AOchna\UMJ,`@YSSo;u
%pP(^C"O57AotQ,t?pT:Op&+8fjnAZAIfoQH+!A\[pq68!R^3O#8I/h#$]gotqi;hiH2,h]s6X[^Df?$POh]Z$n's2L$iPNe[cQCU
%GERC`k6He9=KsO<I_WY%l/,s&*r[3,#4K=]i4j^fM>ejVMOl<nF?d`6#7M(6[s)%Vn8!N\^%\)s2Dt^FbJQfY<N;k"o^D6W<.M.K
%>HHk]dOCEsgA1u2$3'>2N0J2#j@;&Yf:'<YDHG!2m`WsCV;8(mD6Ztq:hj9lTdV5i``'?<=.VL=HDNL+f;daLrBAh6GeFL?lbUqk
%V>WAq:hY&&Xm2NXnC0Bm-kr5'0"]q7ZeP;YP>JrbH[*$8X[;u[>Bm(Tm5:?gB#ltSr:h0dFeMiQpTK:j/N9_e:a]CBWDRG6:t2u1
%CkS1?3o!32:bKM"pekcipJ)m>5*Y>U)UU0)oP)X8]cXNcL'k%XYu,2"LLBO>CIelA+s6^:VSsU9Gcl)cceH#u&"HiB>V`a((7K3f
%mHR?R<p2pN[fc?T.6_VBIQfa6O?A;uE8lRH"h%:%aNPSpNPfmBKmL@6!+m_Z!F)Lg@A/2MGgCg5q.'fXog\2V!Q=c[C.*19/`-AE
%.0]u'G%pnU)*4eqX##tj=$)+F[8u\eIOt`pr8H!G;.g7/h[8bghTd<g8_5GW19-D!5'[]&TX.g;'FV=$9!_`;pJ,VO(!7pHCDuP5
%R9$)NC/kV/DQD<O$\OW_24FJb%"<JP#0>t7Vb,))J$8^qB8$X!S,I4*OYO4Cq5mPA7m4`&4ToB?+I9JUjc>Es&)BaMWDN%_LL@b]
%q_S5$UIl%I[C&=+OM96n'l#/Fg=5%j`>c3ka#*+.G+`^PpIFFhim]'OfBHKmO;\$]a\W45,8ABh-(KY;-]O`slhPG#(/i.DV1g9)
%hgRh.*t@)(C@r,_Sf]!&*fSUMd$7B(jdfU:dbMSu4aQmt0iHpp>LW=N4T3H:OgLVV%Jg.(!-&e>V0=9;Rm*ZP[7NTB=f_H.Urif+
%\,B$fB#nSDh^Y`TVB%js!B@&,!s)cRnZN;YOepd)g"O-3+BlS:pWBf!N:j>iqi)p:mLY3PeaRHsTjG1-nOmH7]sdFk;D%<*P2j56
%*10A-jn92aqIJCK-aWb_h)i]RW;M`=;okLmakhN;[.+PGIE!?,_8+HJDmdpt?Wek2CVm3'ZD^=ni/#!`8]l=jl<VSK7m0?0k6Gb>
%C4GZ))'Sqr,6UC,7ZW@\Wce<#fJ_<7^KVa$hn/RScco1uRX@pDdX^eqo,ZqJ-Ic;HH^T4q'GJH#kG<^Q3ClmW%JI8L5.j!*MPr]W
%p\+u;PX5QOC&=5`lacts^%btqK>Vof'qf#6<pfX_1!m+pBKm9TPuaaMr83Rl:>eE(U\;J]h_k=5',oH\a?"`Ys24N<!IKXlY@jt=
%*pA<ShFJ`+!C^SlHI<U6W-9Xce.XPYD;aC/JOUpZVIf9LWI6TRE9[8]I7GBH])H/<Ctn6eFRaE=)Ar7]<R`_Wro9\VI:8V+Nr6WJ
%8X+!D".%5V/*J)H;bXQnMa1W+WmL4nQ+rd!e1)hB37SA\`,FOmf*%@8Xku'd3a`f0UH=L.mCQW68(lB6iTo`YGHEkAFC4uqo;1%4
%oL(\=ISu8S*IPWhMhCF(!B/9<Ql.VH^LR$-2&"LCb+D!k$GOC7TFLf0&_UtH#"",PJ3SYQI8%K(\0'HIMCN:<k+\9I((%,<5eb0F
%]2Q&\Ra!LB&]^rd!0QqqiAW?8bjBk,/F@>=K_Y"<UA6*,5\"mq$A6@9-S6:^G3.n-U2N8g;,==j/\.$c=tI%p'WS!R`:/&YIPR;7
%<pkMLb<s65L9`DX5HUn\=9:PWKqj_^"8D+K)GoO&/>ke[7=N"`JTfq<O`0_o+#"a#51rio/,$*Q&s51UjQbYV)i&G7r8+WA2)ZIS
%'H]r-7LT0G6K`-R"C$I[D*Bj]Itkti-W6hf:]G)Re6qZ]Z2Kq-?nKuHh)FV+DR!2Z[GNL2O3aKSrISBQU0-s8'.KO]+)$:oXnA7`
%GGF0V<a+CAbjG62Nf":$:+O:D.b1$CDA5BFI7BI:e[5b;i]CMr-CWiR9"Xprmm$f4`#c?tqQs]20?9lSKf30/5AAmI7fO*b;I&Z`
%"QF\)8+NpmNhkG_'l'#*3Us*)d<b"8@Qn]ENqAHnMf$NulgpCV>M3)D'=V`-8tjq!\ljJ,0YaqEH-fGP@`r*%q[Fp\hHBOo3Y]N$
%@J$DposmrS6G;7N8g]d/&n)'Dd<Vh#^=l8aC$F`?k:c$;=sC^]UEJ)'$QLio5+/iThG1NLK(4.>K6P?-XIBcnYq*!N3t>Y?G3bu2
%0[U)c0a<^H)\2P['ZE/;rJT%E[rJH%=hRiDj5&ULL)+HX<kHeQT;hhCd,0e<d]Usm:<^,<X%gsCp#g5s#l5h?%a6j`_`db'*^#dK
%7WBI(S$,U6N27L(KOK@nJ]$>OVVOFo64H]OLQT3N6G&GeRp+/;O>9#>:UU1,CP/?7[I.8&?_!*m<s#eXH%X!,qXY8!N5*28PTtDd
%@VchFrH:^"pZQr5qgY"tgg.K0mOWLJ=^Up:/F9N5O&q:>jk]IMpu6".@\Ia!ZQ[A5B@AB5eX+>PLO*b]+.J[gaA`P(p8C/]bNY/b
%Q/gDkD7)L@FZ$G;dd!,l53Hh\@m[.,a(]1YZ4Ab:kfUb:@X;U*VV,9iDn:!Dc-!n(X;/1tkbK<Op:"'<<TPo59eM^:M8[?M]=GAm
%k:iUOk/ZW/`G-dtFIcGKZSSSI``>1/Ib8q)0BnU:5-%.Kdnd@Xr1WuR]sCT6E3rIUgmaN+bH',i-?8VPXSqPKY?)L3o@GMamDMX[
%4#>I4:Tg#P@2d!arpFs=S%ZR#2<igem;2bcrRf4SRL:j#Oh:."8Sl)C/1s_gnj'GCG37rGV?*=/?aK([oiQOkIi;$%cApD"&SHf<
%(T%M1-KCq-akNH34K@.i`RL7pO/I26mc#abM;ru\d[a]*fbf!>.$Y.cpo,1Xh/>IIeA@V(Qr\A%DSCG';,5`_Q7$9KnZ-PBlYub:
%2__YFYjj,M)SL*1]ooC^-=5]Rm=dRlEg<^E1Y9@-WE*_=`1Q3]1h8&Id67TTR>He]PtlV=R[G\A+cGaKjQoPd>r-g\]SH*\Z'EQ0
%ilGhO-LgNLOmMq@*a(7d`_CjNUjP2k(.YNAgnjiaChZI:O5R9Jl;PB'7oV(:T;V=_-.%kHQ6WP&[^1%/`US=,IaQ#H1k'F3UJMVk
%`[MD$/,CL)P[Cei(/K"@gcdNX]Aq;oF*AWQprnRJ/`gU"m.*Nl%Wn.E>UVi(gsBb).u*S;dp>!CZq>7)9=XCA5tiU9YZ4+(b_r=(
%[tO0cV7iu&KmkMJNj;INm/>`%CT^L$(es>Unc%NOp3%m-oN:CSp-q^0W?YIg$)Gf<q$;'l?f]N#QFd`pR!8k7p#`eDRU8^pf"sd9
%De/;IF(IZeN*D[,09%NQngWP=0MUt9`)"hHCa6^CC-<W=q<cXB3[N[a[PXN4oLqC'#]AL.F)^IDW"2bELPnO91^ihaG;>emM6sVJ
%c,2cH:6c&fd`'5K_GOr*FgTQ\^;oB*e*KGMGku'T(rD;0VS+=VWOJhk*X%c+jEP_qo;E0PE^aV\3a6=+At7"MEZnTm@jFC]enXJn
%6P.KocJIZFAN(:Uod<\B;LhQn5C@n49^U]4\+?$b%Gqbe`H".@IQ8cIqS>1nVJA5<g)F:@[ZVHk[A/lFRmk+LY`?kDG4g-^!d!`^
%U9Kd*rVUBirHdA0/&A-Oc>%F1(^0@4[IXSM$g[3"IAY`$C(d)DQ[A/MaSK(Y?ON.pnJC-JK./(Om<E[3@O%E9i<j+aKQ"o>VH5jg
%jd4KUh*uRjR[hUn!;@.B3d%gcGZZsd=terXrr*d/ZP[n,<tRoj\XCHtRig8RB5m@r+BNl<*=ld*7]@,)9TNOUCk8Z]:8AA7c0>4N
%qh6m=KbMTK4AI8%S*,QLR&3ZRLCJ-&Nm.99B']+\%&f9Pna([=iatG%*9?_#;mAjH#RK@7"^&qu^A0Z4!Gq6fTR$CF:P2hVD<,;h
%8kD;/r[G)Hfk>a^W?lt^3h0?PB<'M\12\_!9ocNKRqoA+`LJkUhpQB`VX*%:BR=;A?/'<2G[?_"7Q(0cF]to;'^*]sg@g(GhAiHS
%G\f5":6"+@`+in""[=R>V2M-J.F'T)RE<Zn"C$Il#!6g'K&N>9P`QdJ8Up$C/U&;O9iC_!L((rI4B-'82K-7]m"'M1dEH$_7?l0O
%*[03MXu*T@kmbS[i.Q_mX@16=ML$gM'3rg(XbdgE]7GN2]GTEQmhqIG#Wb<)!fbd#L;nIr-!^(4ZdPHhdW!:F6%i.6"oOZEZJ<>E
%2oaB&,3oaIq[jGN$)Q$+MuC9PS`%q_kPO;WG]OKOc'uW/:5H+1i3X(_eK@>E['/>Y1fQ=)C2X\<c/=.*I7/<e*XaWi5"5A.=aPX%
%9)F]4IR"k)GUqKLO'^[@Y2.@#pe(*`M1\-R,^[/C`k*>OoaT*]1_CXiDg!%mAU\TWjh^%hH@>&42m\6Odpp0W\f!K]V&o/)@mifO
%".!)GQFI`f&LLMiRloYm`r.?tq\J]Jd1Flk";$pIi(G.`6eYe`UOS7?ktEYV(8Da\Pm?"Z;nM[YO!*/Wd3jct&Ecj;.`*<.:EA4T
%CkBL6fmKPZ;F`+(p&'[YcS3W/f]k&]`LGA*(/&k$Cb^Fo3LX8WE;!a(7tnNe+(hF:fs9>VV"Z&@jQ4j6BQ``,PdWdG\7S6XAkPtD
%2t#Ao!UUorF7M`q[ZW\M:Lu<Cf$Y9]s+@_Nc8H%H>=`HW"k1]aLhmg5k=K]%)J<UBA7BR:(Z/qkf1$75$ZEaRf4p#(5/"V#cYb"<
%UMnpIZVW\H8=?NH2:A'<C\B`4,Y,%Vp=e]BM0/82>FEbWI&>Y,JC;8?>+N54OlN^B20cj]M>0DWrmCXYPF>1*!NZ&]@T(*#Dli6N
%Uo)DA9>#cbn2&^H0B9T)1HC%>DB3Rg2.(fX^>j9"#Llqt>LT);lr88:LF8#gKVSJ^S@tP@H?_@JL9pVQ:Cj=ZSA!UI^%bOH@fTME
%=4tj*ScC7..MDD9mdfWG;*U5Z^cALc&R:PjVD8[C\[J@5$hs;<8qQ6KVUmI3m"t(3E^(Ul[X8(8"F:3Cq&FfUh-6qNo\9`AC"(VV
%j(/F"9YGlKIb`4TIVQ'pOO&4hDL?0kDDn:I7m%2Eil%>>\[/\TphkRNNpiM+gM\%kNd:%.pRJA1@M=FIXSXGr/NCo]GNi<0,idYb
%RIqU-FO*7W2:H>TeP/,7k-uE>)<Em[B6/?^$5PO4UG!g[?b/&UBY"78orS!0b"aat+(%2\]S<1$)%(J&Sdto>4N8TAR`F@0DX)2K
%qug&KZK85/`r]H0ilpWAATG*B<l"GK^ZR89+5:'f1HG!(#QmE'f<-3kBkiU[HnbH$Sf6-_1j_c]3Xl0s-))8NroSNQ,bM,]n(b2+
%`U=9(S'okWH@Ki:eE-MLNX`SX+meY;Se0l.([OVF]$R"=De.G*[54J<rRo[tk4go;\9j%PF!kU9U%i!^XBs-,2=cs#X&V:\%;-p[
%R_e+,Suf@aojR5KA5C7rWUXe%<=V6fRp^F(IUt3Fdm)OsfbhVM4g"K*-c8F)B!WGYl+?E;\8N\7`on"b.p.ga$sj:Hl)i]1-\&NJ
%#D^5G_o$&Hj*JPQq$hOko$+]CCcm&i5Ua#mXoa/od*BV.omKVKbr0Lh2_-8NSIUikEqAKP4-u:T$*eY/K2%@+2i5(r(uKK_.!=^-
%$!")&kCsdM$4N@J?9UHGj7C-KmGt1jpH&7&m'Jn,VZWI_q.]-P."7Gne'/AOHKlT0jZ!)#a>ZsM@3)<3^=BF5D:<a4Zp0hon3[4;
%($?UJE&aH6O3d2)/7%ipVY]GQ:er]*-%T#sNj9VkI>k0ZgohG7<p!3@^u*I%9W-,-_c36/_[8jd:9Ls9K.^7K[8UnIQRa+O9Rj;E
%3NuJk@$I_Z_sH[ab'eGSo138&BQh,<N3")Fk/GaCk[FI6AGcYW1?H3AFebF#*0b);k'*Dgqt(o#QQFH(1H%L7@440L?Omrn5]6JT
%Ch@NpXS:Oe@rY:4a1^#%\TERFZr7L'LPLXo8p4ZjJ9oQMml/;Scq^@5.Tid%g5;AEWu#t%1^VU<\_%mj+X^YF?[I=JS-L"Y%B#IM
%ru+L\T!3K99:3JMQ`A+hMn.j&7IpT_!AbDQG;8OL^!uItDKBA4h<Zp:,CLdl1K,e3f>i4lg2,gJ3<YO2/UKE,M`Q$lYj0E,a?[0=
%kuZ>fgth<a%@#.M,'QsFgd<`gO,u\L&8<R_[-)e<Ki:V"k[f1NRb>fQLn7ae8bQTZ)/(63"pqDtJSr_XpATNur;`[7AT9WZ,[4[N
%q#oer0M!s#]lBbEnp7\@/K<^W8VP.4HR]'13E^f;=^5]R@2]\i$\%N<<4qF!YH(0JJX7hs/#M?sY,38L<B`>6I/.1as)I!K,E?-b
%;6Z4g)*Fg;7k#)k+JjX<>('"[Su0!SMub1[Ef$^/SUT6tnp\#KC]=j(Eed3?8@nREkTVG"^%pj\W7GQ^:,^Fu]bi52G;B,,/A8at
%]04)5?C+<MJQXA3.DOM_kjb/hJKrXtT(H+)Emq>_#a1ZtbZV\c?*rFi2:!,-hf3D?9B1fLf&FpLi_8id2:B]dDVRI[-*NR1L1j,)
%mS?k^H^@B,WPe.$f@k1ihoV-U9-RYg.R-G$lDG,-.s%]Gi5*`U-S@\Z:#;oE/9!=r4?>i]'aI`0!e[!G(.2_DAMO"."C/1tld=\%
%Z/FlSE.D-c%NV/KKrT3bnb$!DmTkq.4^Q=0%N<IDPdeA'V!M..7tbT&GehNrH?!\AX9;"f1Tj5<MDCeq>sIC+b6tnB.7<DlpXrh3
%!(b?d3()^g"Ac.VZVRI7<cu[g-1gfi&"%2XAIca>ZM1=<Ql#M+anPQKGtrX#fB\eIg<Er*cUU0hApZ:UW,>[$).U=C3ZQ7XV!;aE
%YPH.bWVmKr7I'>%KjQTcE6_ffr!&[Z.%Mu_be&('MqQA@,FP0?m#1k_60\UZl#bG/-T;uU<,5mK*eVS>hjpmq*(>l.7DIT`g%G$E
%;=l\[fui=!E,'lKmKDV1is=@6_Q1`?ZJf-e@hm:;G"(Lo*g10skC5a2rMoej*p1U@%A#Bd\M*3*"gDK3X@&u=7T05eQl%NM@aBIj
%_FWSR1prH^I*MtNG]5e:JV'9n<gXjr4a)BLeG7nnM>ri@0SL+;Cure+IWFS5U%(0t3L/XPm)JH[n9I*gYA7f!+5p<?cC<>XgY#Xa
%CW"hfKg#V;m:bTt.:g6'HUS+%R$uombKJD_dF`nD8JCQ>c``b-h#9\;Grn3IY58?Vf+nVPmGTn'nn96/c`CbUhpsK<&pNF/jHQcE
%kaYqp\U#U)j'03r'mXT`mFi)1>:WI0d)*G3Y)_V)Rd&O!_]KT<pN)C\S%CUqdG)q&GW_DJS[ctiC=D)l:[0(R,2<S<eAcM.%S?#i
%*?A[6ZL&%L($UFsdHjjkT,QTh=^9,qhFt8*2$04-m=Ph;bp%@+^H\2L"X<BKR6%:mN@1p8o8W*_H,#R!R%2B!-9>@f2.o`2Qc&ZP
%Z.hHo:+j?Q(W!785Me7Nf7fulG,N(Man<O(8pfi>)"`g##'lGNp+mr_9.4UC^L?TJ*8Pf(.(YSp#>Yj`c?-7iHKfQ5pK!GG67e:,
%U#NL)X)1!o3"D<&\RL<"<20GO\^$S[Eas*s3I3L9M^H`9bGCtZ[kPL^Y0Dj!e[(1?HM2g&PO=,]\]N,kZ(&M?mQP)[`rnh*8:k!?
%C&KN56a1P?oD'-!;ZNeZ(^<PiHO?]4SkR[m%m@71@)s;]-(h_TQ@6.\//diJ-`KK%VTUa^I&p[sg'6Jj*1N]EqL[mqV_-QsbNXOe
%NG-$f"cKYMZr>90:9uUL9B;S6=MtVpG.K_9!jc;kNGOA;N`T/=a5,u$)h!J>n:7SlOoo2O>tXL%Xqf;+3_)lRZmKm7mBZG@F/AKN
%j[.q5nW]Tf4i'%/7Q#C2p37#6cKtAB*k:a252Nu#@L[=aQ+qW$GcrhGD5sqhaHcC^Qen=&Wg`e\If+WPRjJ(;nG_W?DYDk88?5ZL
%gID=qS!aMCRdFhf\li,>Y,Y0I2HU[^FqY<ASQmSg5::fXr67LhUp^H.p$s:2(EEr-pG7j\APe5kb\=)>\t9rn[H`U#]o/:J*sr4B
%D2lAjM-R#A>j_>]^"!(te/(:SlnqbjjOJpggl#S%F?_ra,sd/<np0`2T4V!ojk(UkJ_)M0`Dq(+G45(*c45;MZ`q0UG+e$ENf1-2
%$K_UZWF"Ja,/IF0Z/Ig<'f?.N>g<!0<R6_2s/;+&$Z>"8m<AWd(S:_73^Nou='>[3I,T=_3>rn#/k:PLdh]$%9qa@^_f[uDb5\ft
%X57p&oPnQRM1pTLTe&?a10B_7p:C$-4Xq1*-5a7#gHSZpK*RU>Ehc_Sg<8Vqkp'N8C2geo[sn40q"V;d@H"]<G.6&%2J\T-Rpsr^
%dC@9Ha(h`^h=qE`^Fdr.O,_^sU[Mg^qmM9V6LBF&b\tO:=!"S:nUkWDY4H32j80FpXhsNkR'BfX4LT`;#8rH=Ent,A,CLLm?WrWG
%\_XZ$+^Z(%-.@YDgETpC@4)h+SN=#q[<Ac0^Uqo#Wql%_5Q0F0mUL]nFfY?$T7=ji;g6nsCjKPM(7X)EdGfLW\_TJss1pNHGGV^^
%0&XW\$i`?+cqb*7N:"MI_u=CsV6\5o)Lo[0hTEt5lP+`6R%QZbGGXsAr,[Gg9M9kD)?8LR`^^iAH2P!:J#<-lfn9m"_`7F#b27QW
%LJLi?r"DNpl9lgR"+O!SX5S]]Z0*,6T4W8NHO^22d2`-W9D-)2SSc9"=[Cs-1R6NArcsHPcK=P\?7581!WED<[/3sAd@\(@!7n$\
%QX0bjC"LHk5qFl860:/Eq8I//Q&o4ndkX'F]9bR)D1eW[:V2/Gam32OFT)oRMT2rk?$Se>,CH5j5UR+=NPlmom(1tqZ_NlYcJ==:
%q"%9hl.1aC)q>1A1ja]1k$k[]\]:&5G^(R^*WI3%1`kWG]fj6sk6hLfI66-am#2>tY2cto`9mW_J?;R_h>mJa)E&Y.a!9<OKl>NQ
%H4)W!2!OtVARAd2,fFHor8JiA:gP2=kN55JX_9K[n9Pbo/j1S'j,LD0eb#-@90^ahB3&?bX6Dg*l4&Y3)]H6t"m,:;=3tCe>qhAk
%GI?9Y@I<C74@m7>J`-bGcY_cfZlJJ!rqpj*H"/WG?g>"W`DV+ohGu$fPjtGbOJkeY'Ybu=EM$$*$up1V5-E,QV)Wq1So'SFCV-6E
%B"Ftdo+CJj?D$6AfjOiCbTh0#^d:ZF]WpIHPRajY;24g(@.(-$BIlt+l(!+8RM)`*XF2[(bA$ZBB%,Mh95b?lT'2e7b^[W%VSm:e
%A?PP;)_S<W`F@M!"iT0<`+$n/*F.j54g:pMlf$LGcIluLH9R]C@cu3o-C0!+YOO9m>7KKc;kM@diaBhkq"WAj&p\:U2EZFO*ugWi
%m_hTNGVM*gJ;_I3]9p6j:!>]"Z,u+]AS`i?fSE7?/gOorrS_j7k2bYM2LC^9MC".d;mElgC,4qam-Vh]gJhX&Ub`pQh.%Js`YURC
%H=l4bB#JO:k-&UE=HHU"Z2*G49l-M&_IJHLa%oEGBk_'9[X=6cLoo/q4I2S2cGhW+,Iar5G\].%hg8XcXc53A@dCYNOkAf42\k's
%N8;KsQK(oK]lC_,gFoG(Z,?6O'g$TaNajHmVr?92@jW#(\4pH!0m7\_Cgo@#[B%s9OZ*q(SfA`ib%JuHfR8$Z/,%UDFCNSVc<BRG
%rqnY)fM/He?;%3"Z-J<?2B5pSFGEATl0[I"oZ6gsjQ"q`E'1Jn%*uB&mY7;"_SWMkgFk8*YkKuh1$n@&9F``"f<9pq-45[K/$8Ep
%iQU>uiGed.;[op;YLeN<Y1@cOGK\`Upn5'&+$T+_*"AN%0[Nh"2EZA6(qUe@^;/7m$g[5"ob[mX)/3Cf2u!5mS>J)^X@J!U>GEG'
%CADj[W`hM*R6:]A?H@2;`#G'5&c\]S*a--[\0"j6Ge+a6mVM6MX;s@tOfd*qjN-3.^)B"X9$WHeO%`9,>R/O4OhtFu2,\]ZHl73M
%2kOKHOnqB+EMPahH5I[Z?+qDOR)qIL`c"m"8"G@YVbo*jr%]0qh7en%D)Pn!RB2bm?'D8@dI$_.2gR1,:6(nmk#Y'Vk"bV>$hGU0
%U\EN4O/($FmI"YoZ^M_h/Te7"BPdT_B59'TSH/8.VbeJaSQ'uQEG'Z5/FD47NibM55E9T!-E"in9k%]#I(45UG#Na:*@j?Sp"7a\
%h;29*^@X0%.i6_1`,g3R4>Hi`**6`s@=3N">`Q!e;eU!-YNh=rna3[GqY8J59QL&?J$h7BE2m[NU#K@<f<_B3na>bnl,7iDFEV-%
%13YXM:9G6D$i:<5'C!brRTSH1/5PV</M0bg<[X@M2r2OAM0jXlT6T$m^RaRNY:QG*S6/D'-56-ifq],Mr+,B?mnDm7$YP[X+<r7p
%lA+D`='(+(A9jr\2-ER6HErak*1iTi=%ZD4RJ>X'g"KVu>/"\uVH.'1mA[e;F*[%e,BGngf8+9=<L8_bR]4o-mnJjS?fTUln]R&/
%I@YeW?=$RVdqa!21;,p/-qp6l.Q>hq>2a5m\U&Zah.bYN`i#[TY2c\B\;`/C%2\'X46JfA1R"r[:UeYRn\T6l/H3$D-fU]U"3_A'
%9\tf*BAEF]cHP9aj)QKuc<"Y%9C7k0oBSP";nA1'R?uq)l0NBfk]q>pCahP`k%@W!WL_Yig!/6!A+mjQP-]@6Vq\Q(M1`k%m_aaB
%Lo2o8'7.;n9<:66ELOi.alI0qA8?0A;:n!;9@Plb[CP6*\MuNpE)<(rb9PkKVRq"-[l`K0Eu2k92fh6EhV@GR:!oB!9J&<rGi[O\
%p'Q(XUU)o=S31=XS`7BUS2s=p`muLl*$E2Fe=9&N:-FL-K!R%h)o`U]O_KXJg>7ZJp0(2$DK6rh/i@Z,G;F;]m[d-#<o%fXd($8`
%,85)IHWZV<:#3pMGBYV49R9'4#GWg?C$WT:_l(*V(3RrG13&Ra1ui?24?fjlVFN_JE^&2XD)p>Dim6'o0/ti,hJ+AnjrMe8:3i\h
%#KM1^R5TA;3k_VCEOVh:l+'00FDuK*Mm^ZqILXTCc1I:L-C?8]A`E""k*\54Eh?(:eX/8^1+Jd\h,AfCD6<&@B%"i:=BaAIX.(V8
%_8u&%)n;0X]c]IedL>hjO,Lh[AJ@,]?_!OVY+G+.cf^'n+MO.CkKbZ>c2$X%&ec8nURS[2K$(1W(UD_Np;0]#H>B4%\hUJ:.6+5`
%cK'ej\<;-;0((lgee\_ne^WUErP`&_G547a>ad9@-$K]WV<%$ck[q-2iQ7pae]lZC10_Ctg=`!&?b3r'7M8g<<h&-mZa6(_je\O!
%p%!!ACN$bFT?/^pRY>-\DKg5@-"Z/Ub2MD`Co.(#ge>\)Y+JXuE*5osb3';7dtcELeC-hE&Np*VVf]0#I7\?8SQ>S6]fM<o[RqB(
%aWu&,AL?MV/S,DRSW1jAEV1S=HIaZ\c0e=g]<RhrA?ScN;q^<hp0hiVI&WQ-qpSKSj/Z93=.Oe#cVL&p[IXcIO$S5mnpHr\mWR<b
%Z2(B[W]08$XKG@di&%LdA#8SCfD&<\bm?9aCY?DPo@hl-DJAKL](W?lF0rKbSsl*o>!K_PA_*K*e^h`>fA5+^Wf4kT%Z_[72]baE
%9:M-WQgN&Y`QcNe6)>-Cn>pfA-N2Nk<q=h\EmCf)M:D1Kj2pE3p6:B(CbJf;RI-d0Wk84o?AS!ec,8R:9'7gN:;)d\SX7<rlu$8o
%^Ta3@ESTBniU4qXC[QIWc[@@'m&_pJFn]c82kBp"omM&AcSpUQGD"!lQtH@^Y,;aVkOtEuAbfjH:AhZaK9r.hNPi<Lq!m>.gd1K"
%Ap:8#'H=cD+8JFMMar-cPIj<qSbqF:FQm>s3.8=tIsc7GZ@CXj>'N7$DNa!iqf-?IjF05cF?5[N`5'i9lJ_a;oYM[h5&K+/jj*MP
%p!_T3Hue34iH`%W*krXOkLo1]iq`8DlX.R;ebb:#a0"H]URCqt`Ck)`lVcNIV_:!j_p)cgVRU_*Pq9nW11SjmX/f]NkrO!Y(l)h.
%(O"r!f>mcD>M"k0R^l9!4`[kJ]=>VTRd&ke`:7j8G(!8UgX=bbr,,-/GOI;0nU,P%fdRY*f8E^ajcu%Y_Ss[S@A1<I[pNB"f\7pJ
%PY_"1Xm+h2aku@@AVecC>?mI4S*Pd6Sp>Q1n!BPFq;p[XWhMBkYHjM-869PoKnF`_p0,&b4[&,f5MrZc#O0D(LY]l<gP=s8,PEP[
%lO/c#F"\o%[HCSkWii37Wr'j.QdtrX()j&GHEX^TFEeOMH"oOE-_H%]>5@t>Rki=WVe2X2R+q@Nk?Ur1)*WCMH<FB5I!N8Bo,I@Z
%a^Cj7Rh/Zod[ZM;ba:erZ*>WO)iqt7`MVtfN\pJ?Dss-SG\dJZH1gWl][tX*_Jh"P':%-@iqfHn4)J$Q;e,R<@'H?f*qMhSreQ1@
%9(b[fhR2_Y.=??kEUj`lfnUUWC:&`lIdd-j\qZ9T*VZl8gOmYd2SSYMeV3V!D=<>#0H,!(=D:ik$E_HIkHQdQT,eb`=$$-J3piWu
%+"R#XFo`W`TgF/5pG#,8_VGbU$>o^H(K^tc]hAhT[qT7F\'=jU#6(CF*GX/uCSO'm.9GbXO)Pt!kX2%I+0*o&hbYC%B80gRBRi-[
%BrKLrJP)3$.QqWL(oe=\h]MXSAtdnZ<D38dCV*es`!*>Sk-4\Ymg[8mg\Ci%?!)70^:0bMH`1.u`a:ApHuaC$.>VRQ\^[W;#;<]=
%H@Qn1]N;-+jc^nkB:/\d;6k-iLRgcF>\JQYc:'_^;60Qaf-kA!lfVfOXWhl>pX$W\K?J%\Z[2B$lUM>=*iJnOcKLhFFRR&7YK#[`
%<U4!TV\6Go.m-e^^NkWM@,.M1+8uS9jpUS%Br-&PXo/0N'BV66n`eDH`sO2Y*.&,;q=(MA%pr32$P.!$r2`8qhX*eG;0m%9?7K)c
%%fZEgpCBE9Kh)%,66D9O=<(iY9n([%>5@=MgutCeo["&]Q8a<rp#2ZerHmb1IN;e18/3)YrBpYSn`).@3_+VE]R-94_p9C0rX5n9
%7:[(FI`m<055h1i@ua7OM8@GOr>Yb5l'&,S,(-dupu;a&q=$,>M"g/iV*%QoaNWN\Xlk.up9eRGD?1A!e&s6,A`0$BIJ(cr,sK52
%I:G6a.)c(;aZeAF48Mi>@^!Og8ctTK.^^266>*@g7jX=M?S@d)qo+Hmg&^jLhbT9qSM9pAleC"Vob,?-\%M_C6N6a_j0*E[8,=Yl
%r&+*TWq.n>k0:Gaoa^Fp\b!_jnGf5Yn"W;&qc;&`@;;iU3e-c?=MJ,ECE.TLr"I;%oD&!&Vtf4_`0WORYZo$jCt(NOLrZ]cpZ5W=
%?R$#HpBG8;RLVI+;;YmW5Hq`78gbp.<#nXmI_I;e8tf0DHL/?[l\0)Ur<#L[L0sdRrRo)YD_9Geb(!F:s/6Hqm@>^kCA(#ge(<V-
%o&_/$mR+nDX#o60BE&fJl[M4AoNCM<!CIMY'/G]fq1_dFlU+#/lVI:d&@bj$dm`_hboc)a;mk=f"ip'./][VB0jaLY^L@$%#@,==
%-XcJ0Sq$J4DCqilJ,VeDM1M9:2o-()EjY/k0E$2&h(&Eq+-XZ5)9ucn:2W*Dm%[qE3aU-agMWL$Cr!T8[`?d*7_$B@r"8N7rc@f1
%5QB--s-rH96F$mPV-c"/b'<QrpONtTS(GAakf:W,&;ko]3r1ks[ib)uLn3bMcd2U+^Gb$!'>T&=!YMn)FF!6^Q2_.t*rPUO`mY5/
%-kF$h?:'"]*I:#MQghC;!;2k8mg=7E5si1%6!bb^IK1LUn0LE.JFB.V$+m3j<h>@KPn8MMWN1rEFgRc[n@-o,-PO5S!TkC)j*T3t
%'aZ0Dc>#K>=`S2S@!TJP#gs$SP\-!n\,c*UKJpP;I1`Ja*79O;g@q;7T.i`DhZ+GW^aJ/.&*`$]!O`erkLHdfJK"nh_Y62^>>lYA
%KlCQhi=Am,5X_9QLEJP78EFno=?c`41I+AQ0Jj%6G.`qGncKmDaHNcB5q_(JK1e*/Bf&,h"J-Yc)>`>G>6Dql"T12h,^a6P>)L=,
%`275p9IkOPJKb)72(fqQi:1KP,@E?0,[BU1]F3a-T%9_[X/>t5I.+o.>l6m+7kmR1J5RTn3!!AAa:kd"S6*KQV/%%H$F/sU\HDqC
%=TVn1"G6t%6,!m,;1,sZFl`q*1ge&NE0ND68USI,A))ab)R^$pQ$g.]#Ymo,f8L/k!&s(c-K2O$&/pSOnVAsaSDf8\S>jFcK`QkA
%DBIfDJ.agbJW#Y0PX$JC/s$R7[u9R)`>_'=J3R6J+MbGf3i=8/J.84q<ru,C1_`"0iNLr;#e$dQaabl;l#?\,E:b1bUl/mRd(K,e
%otI-k&;oVHV$$pPPtQi7Nok%aAF9^.l$M%k&;n6?!['ah'S_VeOG8+I!iX`6o5T>]*GK^E4eNRC+'aGsK.d765Sk'b+[+[534&_8
%PQ=D>D7GEf+Th`])W0`F'E3iu)9";4leB)S"1\H\&$F4`(5IW0gd9FAI,G(aoaaG"oY(8uVG8=0!l+MYrb=Kb.Y2D#BFI!@CZXjR
%nLkj(+__?He\]4r[+@Rfr4r[@7A:[>,<>)lQGa"M:_"]Z+Bq33TR@gF,m9Bq"/s3>0nTP^ckge?,Sq&h+L<%I/j<W%CI]M8H9oEe
%/d;g/pZ[br*$@!pnN@.JA1N?^NsIN1!Z%p[MFo.!AV=NS`XNgEK,!peVa1VV>S#`_%.LA'U-gO5M<V;/G<M#nfI.:<"Ye"mTGePg
%"n=0h)o-0B)B(uk<WTf4cO`Vd9oKHbNV%jT8q;.!7,l>mOcENUn3K&U;j@n8llUI/E/\6A10TBj$`eJ'Vh#81Y"h=Q)uu]:42<#Z
%Ehb!-lN2VG7d<Vj\Y;'9FhkICBjdoE+:8FC$3il*R,Q:>cXZJI#iiTj^hL/^_'%`#jDJON\5b*qD$$L?@0nqhgE"(DH3BBd:sAJ2
%r#%+hnPVWt\A#en5UBV0/<GC7'k,4Jd`NsL%#Up)HrM.NpGIa8'^%gP'FO>)_H_=R_uT?Jf*ZT@*6_6`4\17;%PL5C=I1;WI98R`
%JC4VIM?FsPL;5@m&?&.kH,4Z/,YeS5\7=X/E0Y$LNb!&F:C?2;l2e,97!Pjg/qR=qV@$"iIDJ'(n/*;K3b[<9LZ_H2&G?IrOg*nm
%7^0]"iEnbg=M(=b6ac)lU;K7&"N>FKeI>%4"hrM0^_SKDJPeZ@8s[3.(J&`m)$:V2:uqhuFUetfeJ57)MAi-cctWQ\I*8*(e<L2_
%g*`!NL(N`U[KFfEc-B.<p&SnWf<q@kM7[_h@'i'&JP*f5#:b>RaT=l2^`F_Z-4".0U*i&ja3e<sOCOkN]S?%7ZI$CpFDK8$,$?1V
%*>+67aWN9Z/-sdd'mTF?;"H-))F/k^+AaU?n-$NX];*HlE*m1DK`X.Y#iq3I:r%(Bi8Gq`8SmZa`/pNkK#Y#!YX:_q-4tn7&'\BU
%%_\4tR9ur?:rb)c>\eA3(h<LFjQ3X$$+*2rl_7N/'SAXfHDD=l\.%$NPf>I@5_4=dgV:NtJf979+HmWh6,AA:aPm>t"`_g5"]-T9
%Kf-IEMbOaVUb0B"G$RQM(dJ3JEF;+LJo:)2c3*YKqatC;dSYg8--4400-]=T3pI*c+j!aRd1mh3K5I^;qK2iNM8WB^;>!S!$\Ob9
%TXB=RnmI#r'LA[X_"NIL_6jFtkK3Gjn-#\TUfKZN1/$<!I!nJ^,Y<p,cW2imSKN_H`&ZI+1=V+-Pb#Z]%RlIHWW<oF:g9S(AethV
%XK:2HW69F;Z)-C?!AR4OH+qUoGdH.3CT3!t0=k:ok7a>9,nA3+H_4\2"Hj0'Qd'Pm+Z6kGkX2)JM8!61&fiAk9/cMV$=#'JLj[,I
%H!b)E"%e*Y7Q1]sTXBJYOP6.k"/0,972?LpF9FPpJPBB:?DWr7FCT8(E^)ij>OFb/!,Q*98@;5W[#\i$Xs4k7J:'ur+;541$a`Qa
%%bd&D#(T4upH<V").Mfgd(Asm\6oEue<#=KTOVgTbc21U",MX#"O]mscRY^AVXs:IXbm$B>=sat#U,G&&NFp;_RQd:c<*>4Q5f8B
%8$eJVNU$f4.=bk9I-VT#bDF^WN.<et[kb&5&El0K?g[X<bgDG]#T13Fok8tM42(p2Jgo;A0?Q>OP+3-R=MUW;Sh0X\fGBXPAa$RK
%enbOhb6K-?]"Ed2C=dIl*!T1KB#N)u>a<CSZsrr:L>+s>N?H9*!R$osU(K$*\FlX459:aobg:7CS0_#9@RHnn@Y""cW!dTOaX7,A
%dFS(]-lI[D`3hCSPT59##$);rH1o10$^P%PG71_)0N:qT!IpLX]h:D'n;MbsJP6S*!GH7CiW8;Z.L=oS8ep(%^24/Q`XiPLH/V9u
%d4U5-OPrMm")J7?$^Zf.E5Te?1(&l.*5_cUgTXDnl<#d*'Gl?`a\pt_Ypg!TKH!C&I%eHlY/<j@nNi,2fOlCi926'M`L#?rGu%Q!
%K+g*&PCiN"Hq2QG!_(CN5W1=b<uS@KI,opqnc>*YP,ql<]"[+t9gC$,#!N%+$uoqs!!4TWVZk7:clA]f6,6'$"OE04"!C$ENC7iP
%,@)3Ih=3iRZ>Pec`%EUA\Y4+!!I#9IBE5qY^98dT,=<5t?k%-<)0T$D$P5k5J0PRq79poQ?3:kd0^#_Q"cs\o4@hn&.q$=(]>F*j
%!C9G)gsG(q4X:b(SDn76>>5Ya4a85).t>oq!RYcBKha-XTe6W[-Qo/6!OBJ2(-O8_k6(rKZ"9VtQACDd3.+-6-)lhEFC8fJ&?A)u
%M2ni(DpPZ0iaC!RV0:e\fDq41rhr-e7-n_d.(V]4B-+*"FEI`0bePV+'351CZK-ND+/DBtba=L+I79A$:`p?=o^060K#$Ue"HjU5
%U;.Yn!*^>>>;QM:4Q&g'[6ZBq;h7Srn%a!AZkA-C$BXR]eB]`bKT!lIYX0&qJO_mfSH=NU&UAsk=6SuI<ZO4Eq11d8Vj3*<)W*Ti
%L5!$rI^`i!+@(]p/e"E\KsZnM"GYJI3^hZ`.4,.9G$P=25MR'.(+X$Nil2R@:gju-.PrIt`pgj1pbm"A0nq!Vj3L5P*kDhk!>>?+
%dMnd^_7@@hThTVuV.8>*0Z^?&k!4X=OKpg`@Te@*4ds8hcFYt_!T';=g;VZMf[Ie^3;PWF]5AH5&<SCH:u>^m[n)(`J3kcL!eFlJ
%JluLm&JVs<Chf_^E"3S<-3Mus,\mrQP0A93b-4BjW_ls3'eO:rn_fL#WM-jnTlG0pV82jdDT<pR#ZeVFKCgi:H[XgG(c6M8)6cD[
%c(q8Z^&l-%\-+VF"@8DS!&72@!C$,&9(:1sUR2o+$/u9l3@n0mln'*%?5R/VgW3HP@S0K/Q/F#u)"bfZrM?Y:"VaPH\V)=e"-dD5
%(O7=r/I_soBd96Y(t$c^k@bJYi"t%eLVY4YYXn?,!^\:R#q2PoM)PiXTk2E"fs(NYU&OTK+hC3^XFK_2*4n0N0^-c-J$"3YHW$0X
%?#U>m*>4?2Qa[)Ad'.1^N"1ik'Tf,4":+D2>(iX[-"WaO/2G(N6-2D1UhU,:CPp&aZ/R(65n=[.<[K6%RFkmIX^G!4Y.bd"^YiIX
%%q#p'`4q'n*B:)9[do"C!uBjYAN1N9UrU</%nPJ`gsjq638pR5&nRG$$tE?oI'FiM5rDak$:=uq&NH_BR_u]P-qGe+#r'D>4e@nE
%GSk`OjSB^oP72J*&@i$Ro+;[HA%q&=:.l^cX?[jJ42haqYjirSa3e?jR!*`bNj37+i#;=)hOs-%RRa$$U*Hf$G0t_`iNT@>ddj[L
%cj`<<&D.C%H+_d03]86%J9Sh\4]m<VOY68hcq[&l[(;"up4HLt.=rNHs%(@(CZutD@>9HZBSUt1K"q`?_L2B71*[hIB_%L@KG@&M
%0^\52l&?Q,@TSKlYbgBRc%spNJiqI5)C'si%93Q+fS1g^b`u!n37]AG0j2IO"?'J92IViUf%/UYB.]bZ[BU;F+?N7V;XQNK&Dt&N
%!:po8gBO2LbVOLBTP/HbfL"\SH#5dMN>*]\_p#COg3/oJ*cM-rn-hI&Qecp+?h7Nl;F0m*KK=`4ZXaOMO.8m`N"'ci>]Wm"Q[Nb,
%``TK']9SU3&!TFY'Q?,^@AnR^SB.f5djYQ*e)_,^5^h6mecb@O=HJZhk`V.3kU9#lQ,LHf94;eFHjUm'lAO8L8R$s:4FhGkRmb\+
%;)s2jSGku@M3E2J<4XupWR0OsZVd5'#M7J7+TiF.^'OlVjP2-lPkY8laTG/mU.lr@%1Xf4i;bRo@m/,U/'L_l9k2Npk2FB97)P':
%#mpid2\K_#JRn*K_:DY_8c]$;J`Q!V].B6'=V.Hi;*CW3:Jf%$Nr20^+OD04lu4`HBnIDur()-K6g81Sh-CG;@95:2a:C1[_tH;C
%69/R>?8%1%$2.U+jC,l.=(uCTSu]g$5Z$O^3ME=3kZfR6.G1B<RZi^B+u>!5)c/AIJm@LK>*"P'EM?[Ap"1J<L+>WA6%rj/*H4FR
%H@.uI@DN1N5rPh-1F7[c7r3poR*1j)f]4q#PG?ZcFtMdq8_.F4X)1"WV_jUCE4'O/d:4\HN6kMa!J1/&Sdi5eJ2M)W=[B1tENPH;
%BM9'g,AAX.B/M\-*lbq9kQ7HSa\BS3Jt[-+l9HA0OO&YEW4]ogGRhXE5V1L&<$?B!'[$/ThO'kb'son1,9'rKX_U3h,H<jFlejT*
%H3,uM)@0d#+;uOHiPgoCW$m)\YqhZ9p]RB0m=fsGf5.*;NZi[QZYKj<5U(ep;ui_!g'/luEHQH>M?t9Id_HB/BRH<G%K$duqDPtN
%KP]S?n&[I08PMJ[*>LVU^<:X-;L-hZ'c:Gf>pXD*]fVira)7QORq[8MAce(]C:!&G\%Ykd$8]/C`OW>e.8\24WVE/gBJAgb]/m*5
%1S#Ru&J1_SZbE1+R6l<:>,*\gl64?_1:6(i(<SDZer]AXnK+2;#8kj6dVbig[._Bg/;45sS6Yd.*K89a`(^N`VNNf+Rr"lrq.)43
%-Y^Z"6B?_=7d.6?'Q`n$"m?HLN2uE&;&Pk+7Au!m/:]\q9-?g_1YTJsCunhDKbZ'iqi:q3N"ihn5+Al8M.Vj6g@j(FAjl1a31UIS
%d*Dainp[rX*_rD+'kW;"9NrTEHUN047[sW4NNb5DeL"<$8Z^VP1X+QR/fF3o//!>e_?%u:_bDb@(g75<"qoC@:Q27,n?H#Y\=aNF
%*[Q6]HpC/rE5_;gNb;d<(.7!?Ua%XJc%$%4n6fsl[T*_Gb>W3\<gCoM@i\S%2rNCS*1P<,\LQ/J0FF1k^9&R<ZTp.IiI/N[<!#[c
%H#$_O9;]?J*NhZ^h`C^e'?4BE!%Q9Y@uR"2#acGPT,5uHM@KpQWUXgo(Aqa\#\2e=2BD6qPRo7mQn\L^4:58e]-hEH?D@;%2M/h4
%>hGK4Ba%J=S5s&BE'm2Apa?iLRDf>`KbZtS\-(fp$p<8SbX"Z?T?.0#1UJa5nShZGUDJqXd0hF#^qSm:g470^/,9uo2)2ckD,r7X
%@,[@#PSe.3TmfC@irXXRXF`0/._0f>ScnbPQ;n&#B]p'5(n.[/7V#f"a_SDp0[SB&V.qI6eR;(i?q`gkIB92@XJ_;\)5J7H-^9FS
%+sFG:K[D;L/A>sL\BG#.#r3%B@Rpu$\h%K-=tHI*@I8cdPoRpi,8M.2op0Ro=BerPkb.,aM+j`d/f-]4MN=D#:l6`,UpA2Y\EkD<
%3MZ.4^6;[<JsEUDQ)Fc//h2nBF>s]kCMP"QXpo'[.7q`OJ/SHQ#IZb6_&?^]$0(4iA/n9:Q$B4"U+B)b=L3R'e$eTTAV%+o.)'1a
%7pOYl%TH)0CqYm*42^%_X3<Dl";_3NPjh"NNok(U3T-(FKTQJ?W^2_d#Qr.&Y0.rl_JKENieD9c!nd1S`n3d7M@/3.)!G#;0^&rd
%s'e1.S;4OQ^/EY"N9f/c;)J9K7KXM>$P&A0ODCe>7bOjuolY)m0ch'"lS5An;(/H#Lf1\``B8aRj+J9s'c$gB0)6etRL0HKH``MY
%&P@"B#NuXQL-[qWiGf[i<GH2$R4,VQ<3iWD0Zk_e`SbXDgfF^2R;u//Z?(nX*DM-:,@en1!Y[6n//XiW!s,=;ZID,P8"n6pL'7a)
%SM:)FcuaPoj^0"9n:7Zm`uM1;`7eAli&F\NNtrs:&fRMXNKX#X-u:'*R+<=h_X,O*Ps4EnE-XCmBc5DH[bt@t1)m&#(r=e.o<\rL
%@+?No%Q/q2oL\r`(i\EI>[*%T'38c`j+W2:i6r;F;,ruVTqHr-Pi)QL7:g0]e2X^j!lL<_@I9hH%R^lcA'pkeecB45&OASs>m.*$
%D+PLD891t8+?@l*+E1+m%Ce_m@^2Y:EX@88KOF+A?qQ'8YS`*`2j:7(".T+_Z=KtiFMl<Upl@0]V$"+SH#j#B8\f@+btC@[QRgaC
%c\2XtW#Q\?c+8qD`tA)GE^pjbesWF\q?MfQCSci>X6$W&NG/V<"TrV'$KERm-+XDI%5g/1`rV9?FBInh=;#RDZOp!E=SBX\_.8Z:
%Elj2X0K'p%<OpOI]H)u$L9OpCEF<HMV*S)HJiX\!"p3!!\gYmZEsTo7:8en4h_qhA\j&I\)1ho?boNlUT^tLl`FZR],8<$LDMoJh
%(-pQP!#`RuhFNToOu<>U![8YdBFa9*"LcHSfr>7m8[EBT*4lRuFI3n@Y)kOX%\h=HdT<Cg]/lX&^5MDk"L]l)1DHoj(kM9]'U$=U
%OCp#:CG;>lM[M51jD$29SUc'u]Epq0WoD27lmBVYe*3+,X2dYr)J]_.Y#j-SkBq^M!k;>KnF(?I8)!eM#Lf0Z-C.5t,K-LT`M`rc
%Ym:]HTSi<K4=ec)><Y<G!>_YU=4XgQjW,?O(+-#g9t^PVoc2^dd90k1NK$De"Tg*n&=GHSMSUK@MhGY**&RjFY6,,?9B=&8]'nV9
%4T[I95d<s?),+#GN)7hg:s/<<2)49K.2Y]hbnpSG2WE[','Q`!;`4mJG\nt9.I'A,S$LR(BS[N6!j&'!6usqf*tC)o<[&d<(/CS=
%We"-RYJ[4YA`eeMYb$TDbubpZD5mf8Rm%c_=E'-Ab!?>$eNJ"+aP)<]+8/^C0EIlij`E++2/F\CCPUGDi'SUm:>As<_rVdlJnin,
%972dY(LSDN9quFHnBqa!Mde0U&,TQ$,H0b=aom.rid$g6e0E%mDY*pE8@BS%8e@_nZDhuc-/,:H)2,OcRff@_YE&2%=Mm[`==VOV
%j'=[@+F?rj__fe>.I&!`.h2u5MJ0=$Xp+WPj^osYl33l_Vhd3BIM>-n=pA.9d6t-t6PV&%;=$=:8c_8TZsbF[TaQf%f*NB#MRg\Q
%Y;(!jD!a7ROI_Xb8TBHuPh*oV<;u./`<4@a7YN"oYAZu";nOGb6/Z^E&Vb/!@&XD1*;-.Nl;/*aBf#!Y^49JmKpi]:D;hSW!Fh]b
%/0Do8I7h@cE/IQd,TFhWa6]((V$\TZ4Hfa2:ST:I#Z70V-b?!ZM"!*Nko0i[;G`=+@YK>4/_33R0@M.#NTgiE7B'a!1WTmhj[<J/
%Jm*\>T0t@;B!nOQ$;FVGkPA:Zp0N1Ig?^K4O4Y$RO;,bqi0]\9`Y$0$0kDcg+>g/^L:Eo\-&$IU&Lr35HH2@$$"PD[_WF#b3s5T7
%OEaW(AUtn/K-U`#HE_(DP&"$9?nFBk$-5e"Bb3QrJoB=J\C+D"3_1Z(0M-p7O@J5cP#?s?]#Q0t'EmG_'#):uW2<"&jTcWq0X.Zf
%k4EkJ:6l5;XBj`GZ,"fH@%!/2(?8!Hg>_J7[n2Rp2,WJ4d(W4hBY%i-@65cP;?P_Z0'8D:?td0^G$9Q>kmqCU"P%4\Z59sC()GnV
%(1ON)+i@T6(=>;Q@k)o$`/1TDG;uCQDE_9%(cgsuW]Il!%0[*o/K9.\_do?XBd7k^M"ZR'_c2sR.CpcBI1F8bm"ie\E>p*e&jUP;
%MWn!2O:huMde3iJoqSfqD(W(Z;lU6^s1UY(^fNF'g/%7RR%FL^DcrRR`=W%W6X<9)U)T"f5cTQZ6BFit#=2T'#(8pJj*_'l^_f@#
%gJIN-!JB$4,`pu[7=Wq#ccAb$Tu:=ccK9hkNZ,f)I'!UD!DHd1fR<Hu._!@u71:+ZaHqpP:PM7QL8Oa?KLXp;P7%ZXlQ#s?<-X3A
%%c!auU&1Z#A/EfJ_do\T"G:9Y)%*1[gJut4nl&tgQ+2cGdg9PZ3fG(>,iAtIE,h>P<W*aQe/SdLm95Y;32-+5-ebgE!Ge*AXP/"_
%Qr(\9%1$uV%2)Qt+%DnD'1RS4EiiU*YTKb5%2AjM:+^LH*cEmhGr8so66@_B8XrjO:uFtcct7>']dX[sf&B,)2YAB-!k^e9(,k!O
%'Kkh'P5M^/-LRJ+[lkG?Sfa-.,Giqa0#b.G"lS+',+hb.Qr.65hEu\E`$8PDisVbKMD_8LHdgihP"o^?fj8@rZ4-s\'=5k,U/T#C
%,HeDhUo!XMP-#m`WW"S&n'[2)T:la#]YO"J(C!d6JE"9a#OaB2mKGasi=lr3EY)Y]MGh@U,nL8/Ol9E(;A$m[FQjetQ%6$H"*o6r
%A+QEom=[H]d^MDqUMSTs@S/CJaih+/H:3"5Q]e7o`Q)JE[Pu5$J?6?q#`gY-.$%UC%ilg[6.ueB$AqILGXX?U4S#"u`frosb;T[_
%Oi8u=[!\-ob#-iC_2q_hH+oBkqpBWhJTbWrk[?3:j"jbeXXG#3O;gQ_349jHO,.KFF:cA_`PEa'$^+q_M(Z,h""Ll*LPY+iV6W%/
%kSQ/`!DF9fjaLu%pqkZW!\D.VPqI4o&OaXClZ6s/q?GB-11uKt!2/$Z9P.Zq=NarJBoYh-[EWqHAWqP`/:<).lMIhW*p'a8CE-2^
%n@Uq*/ljs#StVq4(;gQ[DfMTUBjJ&qb1u5>V[3`CKe;2To<;O+0V#S)k$"+(4Cu+$b:XDR![F^&2DpLQP[Y6n/)Pq@oK<K@'2Bf9
%NY%I.gIr"mjOQX1Sn!1S@iSq+K].&gTu&lK=9hJt@)a(b*=*pM7B!D,eo?3WIjr(c@UA[V*F"#EZ-a?l.`)%B5fmTpTN_L&.F2%H
%CJHPraJMP)(EsB`A0DM?.XuCs^-M=6g0^pI5ha@7.S*Ws?iFbtTe+R;jYhG#,-8m@MBUE$mgFYp:qboKa:gUJ%\'YZ6PDLk-V9G-
%_4!^UYQP?_ZkRpV-&"[QMY+GGJZ^fUFVRS:KV9SF[r#KKp_a[c20T14RAq^,c>Lmrh>VG2g*!m9r.rlieu;Tb(Eo$d%[?:4f3H1-
%!l^[)TUo*FW?;=YHNd+-+<8V:H#I<n`Oj".EThr\%*lQadpB_ld<Xsq>@52ISNudH&mUk37-'Td&1bb:[.RcHba%_c$,49Rd#V_P
%=8JN%i[VXg5/E[hAWm]i"qPDE:7.Xr6\)&AM%#54/f?^NL0q"fnBPXU4st.pr.(-.q2GL[#nc"gn;M"\kbM#.?A7hSTPpWcp!l4O
%\lsZNd375L$]7FNeqM_aqG(cY(`3^af"cr3k#WPLFebj%W4'e"X(ab'8j]$N+\;K2Yp#?s'BTpM?tkR<&,;Mb\!6*?Ja0$+X<L,U
%>nLCYj/Y8_p"C/ddSgsFDB2kUP:e\I6;93e@e`fA6_A:giem\b7gmrN_Thp#Nq#Q#0PW7p05X).Js>H&m-lSr4LFH19T+oX<_(K$
%9#+8DfNXXo?\tIC+]>LGPo?'1k\D'*0@NlZJ/=\+d41VtGg?H+Pf9^mKbZ=q@h2qTYa;,qTZF"U_,>9jd"F>g+"NGE]eUl"XV^AY
%H5CM&Z<BYc`jjUm-R"E,3iWn24!u?X\S.CB_USe_]d7trL&1A:)(_`qm-Q*q_jI*:_W!(>#-ot=[^dueFbLdkeSt^^+i:,p>VEan
%N_^7@KcRC>efPsbeY/6s;*pQXf'j#/&M]3L5tj!%!b:]oZEh9[-=hD)`'KLR7+Z@*'DBtDmau!+FAt5\%Vs.q@NFX)<.h!p-P7pW
%Uh)"jjF-g3]#iM;d;;(lj=M3oMJok7\?#,@0iR_K#kNuD>T:"L`m+qh,_p3SejOq7O"F8j*33k'.IEfhJ_c!s[i"?JM&V:2><GPT
%`a3$pjM?1p/1mfhRK3,59dj'Fa3jt_G#eT!=(+O<@*acVMF].oe"a(Y0n[b2bKtbm+X'BYZcKCg!0r"h@!de=Tq5jI8Y];<;t*PI
%4YA;CN@G#n$NK$i'C#'JB[/+1T=FOk)d*]3ALP-U'[CHXFVoN[Ya5PW0?Q-Igm>3kT_Bm%To/A^can"S/O"8M?p.p8K5(:D#l(eR
%&M.Qo=K%(*(#U:C;S4,++]R,>F+et'8^IW)lDnJ%Z55!HV]6@:F^QZ6&,eLu($jeb^Y\_mf[$;MN!RBMaEkHTLZns63ZHqC4e_%U
%kf/sp0?IXmfLdljCKiJ7k84\DEnr(/^Y8"C8m+YRqRY;/GW'If.-cUH22@Qu`*$5aJM4`H)UF5\39&R1hOru2qd,Y?-dTt.%[R:d
%f[o7@8N:EGL!e>kX0Ab\n0N,dmj$T=Xc0WTHDF;+Kha*&^e*$YT1[L2OnU:'[7;XLbZEP@K#0%p<,R=)'83JeOVBaniYCR/:Y(>P
%mnX+MYDu8i9c6t5Gb,Ai)Qc"o,e2dWcr4[3V0W2laZs?J.u<I3Hk'Fi.U:U?'6rmcK1o[::A4WQK<HptjYh[p?4[BET*c;iLV4*r
%eoNj(@R4qr/HQ[\'c_'G(b)4R'ZDJ:.2H4)+p8b/4t!*gq^RGqC07+U@csRLc.\V^PQ;Js]Y-!-DokcLI)Ue::G4+mZ!`qrnf@Un
%eXH[;[IOW2"@7ZuN'4g,L_1<XVn+E,TILMsf@qZLhgXLH/UT8#fOluAXLfYp_A&SWX0Eq(>Ni%I@IN6,VoU"44tqS))kI<^Jkc"i
%$MgOjI[dciQU#]'>X^-[lV,`b\oK,3lN4TkaVLi[=Pn$JaB#NQC=k]VM9j"X/2cp6%AcmK)9,_(EEA3\0?gak&+DT>Z'U%N^1,0E
%dQ+c0d%QB"p]+Y4p6:T^Q4&alr<iEk%);@GK':SnU'ciV:kf`m@WUm1$:24ES+9K?BcmMIn5IaZ4CCh:h?:(K%85@;g66qfn,na^
%pTB_q>&^El+7MRp:NKp^>M)M0AO59",+.;mO&SqCcVEJ.@2.6"4)Xh,8jJlBg(q;MZ6*pj,F$.\(n1@fU<h7.5QT]J_jWhC,Jdhr
%h\OcUe@,t*3!%POdhQ./2T."#JV'hc)g2D,@#7B]erGQW;^VUZF2?YVjqC(U=Y]%"g9+EAM=#[C\NpjO/U+s<SR3r)nW<f[@g6&D
%6Cd<"CE3&)?9spI"l3bt]e,Sl8Q&ik"[rr%!q23r&'.#u@S2Do@g71QP`!$/cMD<8Kp;bCDgbdG&$PmLb`.e#9HosA+9IR$PKo="
%Ek,Ys8#&<4<M8lAFe@rM\_QQOYO:+JDG..tHQ`@I]EIjM;Dme>W$-c>TFZX"PGW2kOA;V3L&?;L\BNZTcIWY^*RJ3P=P<"EH`p(B
%bq[7-cGm0<XX%Bb9e?a=?04h41T#U/<f5@"+'GQa"bE:NO"Ipdi*@QXAS%3<9CF?FTm`9LGNEQXad?io\Kg$\aP>qRbLgWnSKW7i
%)XkIu\0d*=F.`k]d=Gk+70bp%+jS+"4'.8frQ$:6o.:)(:lSUslhAV-(ujm50Mn5&Cb'<42Xh[(E,0=scf>btmYJ0UkT&:"qeN/V
%/EYEgeATrUpD+74Kk.I`L:M4d6c*3e<L#d.[b&\5h1A9IV/XVj7r<cQDY(L_IdW[Y-\XFd*#L@sqG*ec<\5!2n.6=T$W"PL;8:OZ
%<V+kWPH`O9,5Z]rX#NeEVZD<#$YH]_8iiS,.rnAPfXtb%L;t1eZ'ac`1FUGB$+7-[&4;G>dYfQ?(#>-GMLs]_H`5?E&49pQTI*cd
%AC44L&g3]A\WDD;<M^^MmA'`g>1eGIakb>k.jS$0jP9i=Hlm@<^:;$u/u9sK1m1M#Vn7<K;LkJVp!gG(n#*.9bKcU2i3^sZ&StpI
%<&R:cEO7uHg6b9]8r=ZK5i#_PHW7C:6?Z2L/U5k&*9(dgNflpH3#4K\$aJmW<6_Y:F9jX<W_#.M=-[pS\nr=3D_L`6<;p@m4KRXc
%s7*<@Xh&E=Ud149_M`aLDl6ZV$Y;ctfp?61+0P4)mj%,K@6HGjaPU]N[,\He#mDsWmQ_IAe-:Eb=\`aO8"-nig9rAhF53SKZ;4eG
%ElQ!'[nbU6^fKummg;XBgr:/5*8+IF[AF>Q$+2siUiT!.kRuQ[D/r2j]fF"qTNSN:,;?[%/i%;)>>+o&SDnZ>OK5N+f&j?AaX6ZZ
%%'<VI(q"JV78m?r#F'O%:Zn7iZX36ZReHO\Ie3M*J#&LD;d6g2Ub24dP05:=_P>3U*$9?u`>VD7,Bj%[R1?D\1#u/UA1Ts]3]>46
%`0hNO6aRX`Tq*^HaG8`^,5MFYdtYYeP9LJ?)FhH0R\\#a...CDRPt8.:4mqds46qZ$ecJmOU>[$?\U^H02SA,a.\=NLBccI0ug)X
%Y@,lPG+EBCn9'8Ta:>2>L3i:7\ZMY;aAiTfP@rk!A'[i;8Yc%gem0HV+-WZp=br:>'SpK%A019Z8S)o=^C/F0>u#3#npCBN/INE$
%LpE$Ur/=l/eF3JDU4k!;]i@F;HW@K?X]"V2)YRECZqEr;OZtepqWPj5MaB;F!]_i8+K[#T,H,S?<TX\lQ`4Oc>P+BRs"[saG0nZE
%XDj^BlcG_]f_nfUd4WcP6f=(')m:mm,R'q1ccfqe'5RH,$h\sV(BUNB9Em[D#MUJ,r^'C[(kZiOJU<^2cB+GIs,fK.p=A=%cqjN1
%Zm[BLTN;si$^rn<p&`@%p,b1(=PsHG0a4.CgRGiIQt6]r?oX:s7Mi)h/mo^BVNs4U?rdRA"7jL>'mj,'W3\bmDjc`<?>iSC):YP[
%0-2"f(>)O>XLd.%67)_DnPrf!^tPJb93M.T;bnG)I>$!SaO+bDOUSkcPKjYMOY82VjN+Wn1m9&n9Y$B=gN&%e'g*ub--Idac"Vr#
%_`O.7m7,;6%eWo,[faN4g]=:PQW@Bt"1'hp6?ILuA#PBVB2dlnKq@U><Y'6rZ?+0'6_+\\`-XAk"Ju!78Zl511k)RjE24qbgWq>=
%LbW^EM+;,P_f8\b`?;m[1bat?2rZ0kQ$1)cD,m0Z-7sB)?]AE$KF=2.[b`FT?9'%/kr,hTK2]NpiX(l_cnTT%coB!@#Tu;b]A+W:
%A4kW05,k7.b,]lCAi/XW\nm2WL?j+*PS&_Yc2M>(Y`nS7b+I3<LT]T^T:T@ch`0f_q;$D]fFu2l(;WL$Gt\NW:m__Sa*)8K\N=.@
%AGH$Bom3;;Q<tc94d4g8`k5Af9A$R),nHCT*I1k.s$O*pck3U_4eo*#a_EG(-N,IiW:57WMhMI,L=F`gm,$k`de?!G)=[?[m%:k*
%NgMsbA0!Nr\K=Z!O-?Kt7q?Au:9&]99'k?T*9LFeF(dMCR=="cB9nfNY*.[&WLF:b]>*na[KN4@[.>4qc!5L2fQ@D#1UId;/]+m&
%.bTQFbPiB3@1r">O=2TbX&KFg?Hk^dd^t7b$NA%^=t6qrnYE#-9Y8/Fo\NUl4`K[gqo3LgnV+Kn[6`1+l!n^hol(!he&UIn(Z;Sm
%4-CT1.Ho;"e])`aD\1J-C%l:b](2DAC52?kR/F5A9e?b+,Yo=W#u)ap^&j(GZKq(4@Z$kaVKWB&h-L3oPuKiqDS,+F1#fW7Z6_iD
%pn4ugUu_YtrOD@qik8ZZkW^.r\2rF!K$V'W@6glsF<bMAk@NZ$BssdC2Qk`lm3d<M_d3g_fbeur^C#sh,2_1`3CfcB46`6XDS(lY
%[`HYe,Q1PE=m/[t;TZ/W7h34C_;$nsb^[?nC@g:;mBG#B&qf,eZY_-ilB8W70bKf#C5W60]@]:/d`%UJeMT=^`.8P[2*?V,?Ub7"
%If#5D-ng`H0[SdSZRRMt\<_c<5)[XDU^<bCN45MmE,'`\;:\\`@[%eV!Il`55OXQ^3n$e4)OQ9*arc@\iIjp_)Y"@/D_dTZhIs%S
%adR6+JrnI\1f:i$RWd%8mDIEFrk`a=2.F(c$dU;3'Wi<H$A=j$*Mq&G3n_IW:flE`MnRPaUok(Hq=^j2?F+/KQB=$R6!FmT@aRfr
%"[baA#eD6Z$r</6$AR?Z+1fQa(rpfKA*2BWjLLuXPk(O.-3",0lf80&3$mQ(E[8F^Z<I5!,8]Xi/JFXffdDM$6/SYUejS2g+.(EN
%HG9.^4YD%;<.D0*NZ$f!(j`C,CHg:9%V6!os1-2TTM%0Z,jNn_QcmZY9iWY8kb;l<_@CBi>840O2<P20XYO_Q7/nt9!/L[o9bLM)
%Lg$it<lo7geD^2jDcin-Rd<,PXK#Tr_UDn)PlZR%E%N8cW57RnJZYIi=#B'#>'s[^iV21pf]G_7%tY(ub796l.llseZTJ;Y7P`fI
%L;h7*lhmG;%.YVCb$K'Y.g^ng(,^[u4d.[P@(5!0%:5B*9@)hU\M,sG9>UjB2J;h?[?=hpIdSE[MRFF$/5U#:-593a,B,[sSd\-]
%'rKFclg'ukLZU-Y\chDZ64C:TO^VeXo:]WIa'pu4D*hTtSU_mFP^j<$*,55fAUa5fKP,`l>c-CGp^l]1@Lq35cSl^Q9'bO"?co/N
%*U:SS!,#CV%XRllaBIRn_0o"+5dWfEg<c@QDXQ05(@QW3g9eF\e%;K'W`#CRkQ6iph])+`S[seB%:!]YV)E.q(AmT2hg@"A((gEb
%@:CRp`fO%Gl^nOK'8EO$/L$A1i5I7?HLa)ibjrZU.TS&=Y&Cl`,Oso(!u<mu/b.T%dbc,=JAu-FLDd*N%rnq6TrBTuM3fk;bb!$N
%&;`$8/\O/m60tWO`K,H=`MAU:o]h!]ofJ-gp-fC*=p^4JTd8fI.Ka)HBsRG;iu7nYT*>qf"6):p`'N7e+P*f-a<h'/-!-)]T\8+3
%l_JYVCSQ7*/[_0_CE`C[7926Y"gRBI,@tSta_t2AQ\%+R\X>5aAKX\cc"9pi0p5H,babfd:_S/=\*n:q6[r=nRT.2Yqdh7f%VIH_
%1pum0a#YFA+P:E*V]J-oRfP`O58LeCCpM'ae5<%!9d<)Tc3\kPg.h+tOFu,]rQ<2K"e/?$:*Lg@Pp%LQFS>F#dl5*P4KdVDX0[[&
%<eem]7qS)..6BaV9lGMbRr63EEn!cq[?pHSP$JK56S#4b0+E6SQ:!g-2ul[l&,I2Mf1oA;pg^[mpitB!s!l%RMHtsqCqkUe<7p)E
%mJL_-S:]:u^0?lU=4:B8&(jpo1U)n>2ssg![Ze%rb$^#pAlPCd??7f3kk8"<9Gb[>GSPRaGu!\i5mhSujtD>1IaVbc\.miZD/el5
%Q3a+mAd(u6qgR]OB`VJT-qgA"@9CH(;i'`tdc'eI*TNU42NTVHD?V]09Wm0F<SGLZr7:c?=Z/?M2d4-_o-df/crPkKJ=i"!0V?$F
%m)ab,L.:5%LVWPIBkhnlS@"=IYPMu`@N,+/[I)s#U"WV#,n-U';ZKY*FpR$<<MH?\F[#8'T1?ri[d>-f,>lpECn7E#VinT@*:53T
%Z]&l)peXA/>`,k".?s'k'qQhk.]L^[$pukI7GmImTdOoq+B@h"]0g:N#EEJl@KPJ$C:67tME_j+dMs)LpA?Nc6]0Wqqp.)T=jb>#
%Z[sI1dkZa'rb6/WPnlJ<9\S5Ef#O5YoGX\q.R^m2-fPShc-nf2PPmhc'18n$>ljE$m`8PPG1HBm@EZ^B[ESh$MF!H$;=)Z6Co*%#
%XqCBGWb<e(f!`0U1'E/[p[VQ)D?rPb<hV;]K;NS9R>^femNSmFG@fd'T\k+/h`_W.&!aVQ@@hi];/$q(W<tk"%(n*sWkCI]/SKIe
%l9h"EjmC[#8'%c^\Y1i?8.&(;2!'!UK8kU<TIDf[Qr]?$bXTkGZ0$04$q]fQD<c**\[mQN_KeF!:p=ko]&Dqp6(5Vi]??XD$k-qW
%7T\)VP>`GEU\^uu"N"Q-8*eX+#n+t05.'?f7sGdQV`bJLNl6#hgfC:"<aDR/_`bZ(-'<ni*Cl.nN0A_8"eCCeepF_fq.*5.>`njt
%C"Q>dmL9NA-Lq9Hja_qF/^Z'GXZ=WS_&@Tg(Kk@o,!5<`mi28]ciQ8U2B]A%#Z2*jUIpNRDFlqQOlW"()`AM0'B:4+,0`)Tg%C>N
%'b3$MMi,q=_'k`>9s*fHIQ!t8^PPRX8D2hHMLB5p_SS>"LW]h"]!@_0."UONi$5;Q:P0D2,72p0,;HR[,?K88qdq@q)mIC=jO/@;
%\P]q;^R[*;6G]^KhccA39mmW^Xjr.gJ:F@fiD+\,&Xke$e4Lsj$9->&a.@^YT\D+6%&qW"Jj5l4$\JRoq6qC-`>(gfE'h+ii5UR)
%:1I"a6un*Mqf*S(IJF'L?-g0[-3<,!X\U.sD"djCP?)-,Z.cgEKIZn)=taK:d:0So0Vn)\LtEf)f$'h9NS_7fKQ+h;/Ijj3S'>nU
%eAsP_kgXb.HM)<3`bLnsY!6O+)JP3U2.<A$-PD&H#dFWKFODI(4buii9.=.O.1MikL29q$?Q-$K!=sk@42n6SE4,L?/NZ_(a9"n\
%Fs8:V0T)70kc4;CG<M0V`CAAH?WTA2KIKmLD_8p]BUgC;;%)g=@@d4(:XYE2VC;QeiLr>=D`d%hBLPTJg<Y*)#p8<gCHA>8gJ(ju
%-uP'7pS`Lb'>9_aZ<3c8'92Ba\hgPFB/\`P!#10ak;?UMXp-=)hqEHe.2/<q0srX,Mb"D73TN5:P;/;<7Ho=5:ahbk#(<^H@gI]/
%W"P\JJRU&M":`8DeYp]><DN!LqnAGkhV5%3o2M$]Gj(fNqCY:abfAA(8NS#&l=NEaf]MIa>dO*-\lOkt]"5X\F?m&s1q-t9<SWs9
%7e::cB''FX\ki4I:=n8KPRsZ.!jnm>Y>hOo-V@gB2*()KjbBK[7`n>))50]+9uTBL=NU#:gUB)\Tns%R,4hblWp*hY0@p$ILSX&h
%hU46mANt+U2B=GsnJlh[blocjR`:RKF($AmhD.@O_Kqi[Cc@!qK98ajpU?;"'3t_L5"T/_BUfKBX*n>GU"aq(a[/r]&^>::<a+R8
%q4Dr9qck)/ehR\_g6Sq4R3p;:4K@X$PO4'pc>'+$/#4bkU`^Z@mDnprqlD'0nuWtbBl:F97\b`N10ZqtQ!7>H/eDf9V"BH^+k3@j
%SSZYCY"qVpfM[)V;AktAQ=e&c*VH5I5c(G+!hCV->XRXO5P"*Pp!nG&<#lgiU)V5o5`c/EP,rsNXieA6RS3MXC]Q)\rBY(3lt,-5
%;n%3Jd0I;].i?XDWdVCYA?Y5TJAJ2(\`FK!=2!aV^Sab'36\(@T&7^.CkCYcM`;*P)^<Yn^FVu`f5?Rgq0q-(Rb\/jD\KCg[<+3i
%\'Tm<p!uk#j\]'leZc6VC#fJS^,mo]m'?P#MMM&t9,HHRTRg]j8^(GFI[FP2W1ZLrBW-ZBeC/oM6>:!2$/O]\H4B[=Ua"TB=R!ta
%=c-:sVLQf/;VRC(5pA<V8G0Fl-lqWW956Ru\*Fo/jl(b*62#Tn\`gaWAXn^Qq<UHH#tb2$itX):%_0<g)bYa])pFsbf<$Z5)<#I;
%,Z4Fh"'%N3kcoT[&'el2`OWG9k;JZ:GDtXX>M_#iIB+m4;,l9cCl+YhC!t@BD))Qko5K:=?+*;t_@'E*IaLb;Qpc.nWU_`1Z*p"H
%cK_kXe%12Gc\Ba2_NKo1LF`&Kg[Rs]kL6(%q57Tu_rq(!GQ&]"2EH\&MfaJAON`NWX*gWt(pJ$+W>34-E;7=p,r>kY#'g3!bD'(K
%m<<c^W%NfN)UhQA5[8+`<ZOA+kfEX\m]b\mZ*o`u_cLe-'S=Eo-R6Kg$Roeab9m,-&.r']@:)k&K@>'^NG;G%_dg`k`3F.jhFD</
%&2$tb!,b25!m7'BkG'j"dLpg%Nd6YjF$Z35G55P]asO^:#WMK<$,W4rIQ1e>::eq&=\+ZYg<\[7p:d(U"m*!LM'+ifj&]G'b_(Ge
%Uc7c\e4!XW%UCr72jf=`$0g5&>r<t]a6k.D>-g?&+Y*-Oo,tk;N\&dUQ!Pm@MsRWS]7"7Pb2RqU/F$Hm/Z5F0.@G6N;,P6%7K=sj
%`1lBT/b/N!ei59"Bq*,a_<HLrbg`,a2']`QeM\^d%i;cT=_]%Mj8\fVr&J)KB-/u1kDFYois9rqhj'&%cSC']cpD9U!u?Q$`Xjj'
%C`]%mDg7[<g>*g3.poKIDLZTTN`Jb2?JMeE8Yql#eF3Y/0/oZcWJfmp5?K$W^?f/K,o9[.7f(r@DO#Ve/RC@0>^ee2mW,d1$'u+$
%$t2ZL</83"oH;^f/p:+QP'Rh'Km:c>&kn-]LaMa88p%,>(W4/I\%YFtF8&#mhWcm$O"$>!?5m3)NcDC#\/paD309)o*V1mAdchnY
%;pUdVW\gCd*h''4K&:5_.$J(-@'8p-eS`E(V^i>X]XGLu3_j"W2:N!e$:s+$dd)t<aYbZF=oM"[p7&NpIem>,/sjb%e'Loncm!ca
%Y?mk4``@j7M\jLi<?:j*1,FJB2*Pm->EXQ_G'M;"N367>QuFRQVQOY.\Yq]V]8`o#,"EU*k!<FMs&ph^%j8%[lEFtcAs.QaLF$Ou
%Ode9.Q5[kA>PF^:]d/shm26,MZiVG"*ucuGK0_jbOnO#g[+W#&J'[2K.2Pg:nV5:P1?/Ml1KuWOej91##VbJ[$q.krK4#IJ@=NF^
%-\tgfP(:,b)#*#9Oo%SnM0(4oX\*5^Ti(8H?aXuLb/`Um;(o6%R-.#Bs74r8ZQu0/L-$:W@eH"Je>[df0:*hX#mN'qPrO^YL9\Wk
%#OJ"$d3+dXiJ%e!,n-9,!ui*FKJ0QONgUqDBr)'Y^SF#Opot[!cstKC9,VP9l-fVANu`3jGb6K,Y6i)JqXK8Bk!FYFjrH1bg_WJL
%imCN`hK1q69ibpeLKD);IHtE6XPO(<9Cpehe-!6Dd$"tRlLa)+fF$fj/`194FGNH:]q-i*gtC33du&]S&k[[Dj*2GK_EK<j65*S*
%"t$4NH+.TqF\ZHWN=\607%3ShR[PUnP!<s7jn*iB=i-K/mM9`96OAf9WL^@A0&g4o6B8HJ<ZJUL/WHE6resreq<4PK^HH'[&;Moh
%;6?p%gST?*,DMh.BEA$?m<nB.:/\4dBT2[$BaB>Y-75*jD;X]Hpcr_^/*u36"H&TU/n%spU_8&mB0N7T3o,)o7aDEGR5/cs-%$sV
%"Ka<n:3-_"_re?.XQB^>4UkYs>"aV4\UsMD9MTeg@Tf$hrZk@>]lNp67-a?J"o9*"Fo!T'm37rn.;C@.SI*P8Rj0YG;Q5?.h`Jjj
%QRoKpdU2Y?[<pE9J?]8E\"3_f?$tA)`gc\iY>@E60cV4.8JmjX<M@ftmMh9UrK\<2?XPdTmF54KCT^NWmCF_No]*YTf1Q/JN7&T!
%9D$=j(WDQZjR?^XD\*f3^XoCD(J_Hgkp3(J9l\m<Fu/)+Y@VFYJZ]<5kYdp:%l^Sm?"H(,j0W@4lqA,Jkb`JCHXsPgH!QoVP9a2`
%>t)sr\_F1IPEk"4AIGp=J;:GlN!Z?%k-VAnpMW3/;m;XoLCK<k,RfZ<NMJ,[PTg#\Y>T'u<+6nRP'6Dla4mMdQ6&^1Z>0Yj[j%P3
%J.i>a(7D.8]t&GO-I6,*cKZ"4WA%821%ZIVs3J9:=EW'Gl>Q_V\b"dDL'4hG%JDNp)r3<[#Au96lH8&bC7g5L(CA)fesZ90B[&PX
%^ZSG,73'q+*7Z\*e<TqrHAE]UFI$Is($E;#ELV@1/t!\qPPBrk1j*$t6Jr1qM:4s1l.>Gr:qFLe%lA4<b5M!Ej;&"$[VmZPj0]s?
%K.l:o9(KE_9Pfr7j+&IPEEA/\#i+nUG$W`eG\&MXG!C%m)]p@#jIrnp*h%D+(Lgg-p9q.'f?o6=]/-6q^aM>VfgRFU5$*N\GsuWB
%4>s+(/t(7!lAc.>4&N#L$)294o4D0(Tg=2M)N3l`B\jsY?h@s@/S9QT?h>u2:?W`Nq4;/c#s9)U6]FM,$!&(MeR(5-pn612HfPp@
%>+!-le&+f.d(1:pVJm=,,t_66g38G]NjVUh4[^J`]kcFbe$,HS,L?H1Se?o]aj][2'B]VOl=];?g'*Qr=c2.r%qcT!g"ShqRdEd^
%EdBUZFu%X0ZC5XrkLN#g-D,2`hMiiRBDq86$_Bd.ZOq@b'f/)2T"ZUY+%`GYDFKhF]e>&I-E+/6&%79+S87\pOD+KWBEK!u"o;h_
%%PC$m**$g`e?AqbK+m+7(raA_4*>b9AmLM0k.L+)]2"u<DVG9#R3jD0`tUOrBZIZ=2X))UZn@^*]k+<Q[`)+=$2ur"=L^]$=t)2[
%R^Q^!3Ua2_T8mi.P-r2\^ZF;Q%s<Us8mmY1Vkp,3db0^L3=rYAi.s=B9XQ9IaOAUK9U\;%U(g[BEV^,WZ+C8B'(&Es`;ka!9sj5$
%`,7)-`bWfG2@^fcgXTFk."dhOQsPN&FrILsSZ>KcC8>cU,GrZ+N:X4CBD@#XMOdBa'A\Y,m,DjC(p=IUp.";R>Qh7tE(Yjs:[dY>
%ChZH01((n>7+UBWG,Y(RPrViuiaP#BH4%*.";IGcmHO9)m+I1@_l1/DWa%(>PVSa4'oN[dUONnuRUKus9hGkL,(S'DkZMG]UHJ:V
%L5,u/@U@dP]V/hX:'NcU'S8oeS=3T%dRXSo6rp(H&Z7s8Zhg.Q[+5\Sj\<laHIerfT&fZHa"Y\MgJ".n<[;F$M*EWGn>Oj4rm5^1
%H:ECYg8E7aOS@eY[a2NOO4C*.g+qJi^DDnq"uQV.f:sE,dg+,)>s5VsKeg&<Y%oP_+B`-+YAc)l1>>Hil0/kDqfRBKo!biF[_s?3
%DO5A\lM^=`G44b9oE.kFA[V.mX6H!nat9O?P7D8.1aA=*Q`3Y'Q<Sb=*8>Oc6Bc3]ia#o[<moKQd@S?o>Mf=",CDu,-Y:_jNCIB&
%hPk,9D#'''$33nrG2MXM[BLD!2QJ-sTok%XWG20'HbJ%[Deh$E@,`MV6d\ad%sK;l'``BiE)OoaRIg,FfS_h,ohoBoSN$MA7eS3)
%Y<'+^0Mo"<>5<03HT)"VY/W<?/)tHK8O)q#h6tieNCX<TXq:;@QOmZ^I80AUSs_mu:6c6D#_cOA/pI2WPaSB?8`Io?a\P`W9-<14
%7_b:45-3<+a>L"%2P#dmU(]?KJQ&FCo'Tjbe)5i!p2UJKQ&e5?*g^ZL3?]LjTFZCU)gdEZ89+[qaNfU9.X-,5$QWI%P@_XVh'`0s
%jX76YQoTY#_)n"QIBpc!qeHMqZ5^\p2(9`Q9.4S0="gGaU"=\"5fV#QlY"p-:_rkta5kMe[;JcIl1pb_QE\9OpipWr6>d;"&%f2+
%G-^)J;o]>E/6UiR\V8$_4W?ad.mgV9N(XT4i0St$n`\iYd=hpqg#7&di/W,1paWVb!k)Vl#s/l*hI8tI@hm\<,FclCT_7Z1Nkb)X
%A"L'N@e!fF=p6(d*Ih8FG9Zb]^_658&Z&BH+R_g%:BId=c&Y=iZcWPJlak<I%mn79>WdBfKJJfqrJd4Sj/pA)pNNRPKdAR*D%PS/
%#$g_iB+MmCjEgAW/^l"fYuhF6>XtX\O\,dE/LgAV3]CE!TYG)%.fWIs'$eE5DOL2B2F'nHY0/`&NPVQ;Qaj(RD7,ft8IUlo..tYK
%8$rJC<P,ZIOcA;?,9ok`_hK<Z)0asfE&4;<fsQY7G?*OY3ja8aguI*drCcUXFq`\togCBW`Sl_3G9t$+'\:",1l4o"[r:UNhGY5i
%i:*.Fis.%+=WRqj`J%Fni*uWk][ZU6cu9f2hA*oi<tOZE/ml)"GJ3K9,pYZ3/JG"R>k_o8EuqHWcc@8WLm?SpR;<PoJ@R*9jJL8,
%lWNB\d1f/&Eg4edlE.hV#p%t4DhtM`N2DmLV?"ZeI(""-HX-cL+:Qr3f[hM?B^]r&[WE,eQU\%ArHAq->[i!kH1n<i_l`Y!8]Ah^
%S'gUI66q_9o-q^f(fXk:&qc]7F/1^TKOmh-"*s-EQaoR9MI=9'*?XoKk4'<`G.a:do.c+U5[f-lBZ"\NX?k?nr6b^k:MCVA%/E0i
%gT;e12UDDHB]1mNIQ`B*,G4R2dWOl?V7F;iiYY&;LK<O/&>)_Y(!Xpfpb^`7KTNWbTpop7C`l^+eZWF"Y@Fi;FSE3P2:[tab8`uS
%K]&?L].36Y?]Uou/>&&3YA/5@R@-?$lDn8UXSJoS%H5KE]jjdT%iqZr]l[W6_qaL\9?rB'E/3il?)E,40n/S<nkPlhq,BSD:\"AW
%=+BuoXb(j^0#8n^3p4c@o)t7J`qCB6_%df7.!V\DjFHGhcO55n-0Zt\YF3ab*/Pd3.7-Gi8V\e"?8hggP1U8oAc`I:>B&5a<ineg
%/![[Dg2utQYE;h!e@lk4Ss7W(\4=-r5*'@E>,AM]Cd_tLmXM`V+7r[=R!uZl&Tb+S\<#IOX>ZuqHNncB(DmJ_OXP/AQ]W/Shl8X_
%"iLJCD;>K;plZl@Ze%#5FKKRbniG;F7SeJHX0Gl20t+Mj&<<BP6`$>,E&<ij[.:Y/g"gGR4'RH3%Ld$ak'e.&^Zf[SS,gdKY!GF5
%%QE]$5I<_bn4PTc%Kc>N1N&Zca2nHfEO@jrX38LDd^QA@9ms&1LNAWEel[jmAZF;mdV*=HHT3pCHbn9,XC<SS$9O*'qE?LS'e""4
%!Oo'S+$r4^dc:f/n^[HSHQcYb@tTjj-W4nV]"-jG*Ms#%laAL*,>n0?:oAA5b4cS&=Ll^;_@`Jrh)"Iin&M,`-G7aHVenHgdj$dd
%4[_*@nf0*^500he/k$H''WiIt@aCP9a)(INd$iSK+o_pdA5h0aja(Q<"NtR"G7>Lkit"_fiU4g."+?GK*4'\C`*G^bcHC=H,_Qe9
%+3_GY%1GWe>`QIIN&(9cBL=W^TrdO6?Q72RGp3//DqfU\%eenH2ML6"Q+Th3</8:%F*)2":ATuis"&5DOq&`.^>;bF',VRh:V4t`
%HnN+jX*rN,cs&/OEp3VWFIZT^/2.mOYlZ)Aa/%%T3QP)MT4+'3Dl"-=Xk-n@\5Ao3D`V''%BLQX2R&,?V]hBF^/u6<X\R+t7C$\G
%"h3A/4r?pp@?djCa6eIf1.pW%X-0[.Qc0I[E5c"aVGYV[Y:cb#\a9MQq@:WR)gs3E]g*j,_Ji_<mUNjqA5MU.l\o^W-Ym,XauSNT
%'G#cV]bN>&SsQFaptQ:EV^,`n4/uo3g9ODJRAW\r\l[8qaX$p#YM?ZOl-lq.]T*`?N_Sc'2I#".g*rjY?mO8MYjh,Uf3Y``Pq(44
%%mROC>hOSraM7PA,)3U%!aDM8=L?McP8\&;Z.,Qpe'aO1jbV(q4.!QYg'&s/m\B:gfbu>WX0oIu:,oq<ogYs^+@2?G:,RRtG"F]<
%5N^@Z9*UsS!^UHOo1$dkC0_:kA)=]_Vk0^QS^HmY4^,OZd7^lJoZT@!FFg35.4tYg#Q"=nC;i.b"Jjkocu`E%o-k+(Ae7g\T7_$[
%/lRpN[ggNqNpS@"V0Em"#A<NG)%p"(H'Z&H;VFg-9J66"C:HW!cS[Y^9^UWSr(eo@pf)nuW6#C[S]%[39$,?pKd9Wcp)KMIDHk-X
%7d`f8/F8ZIdm97HL0=E^C5N$/E9+(!0J&I)bEm(DbM4E%0cBU"hBL8c<FH;9r=+*]Z7SOVW^/^!J(_t\4@AEk,ZPadnTLjRP=CU*
%oL7&(c)e3#+n&lPN4>N(b9YGmqfHSA@R<>rlS&-lEiPD;"fGk"Y#Io&<-nOr0j9c\OILRo`8NHAZfO]^1RrCpp"u9p['5l6YLuj`
%@M'iJn0-1"=ABYUAO?gl"bL!*CS@_GS>g4,el[t.*8F_[JWhf0]@]t&_A%!%(<KQCM[\[oqU*GHq2,0kC\+CNFP>&<-flk<cJj%p
%CZb/Q>RaCS>IC%s#g/#LK4:UR".RAs?1u'[/lkbf;jt7^qL_.JEb6=6"243p,J0goe\@Jahcqi7ETuWcqJUd*K`W')K4kGZg]F;T
%L!2lc$B`?]e6*L6W"s.;B=17akuE%r>C$gaF1pnBbr1=cR'.:fcY^p!d(PoKn/2jr:.!JNMK(r2Z*UGo!iAiOc0@VW=i$)%qc[fX
%BTRGaoIO0YM"0!Z'-lakZ&p;?hFbtDf1%-DMH*,!FhM"7@II#h%<<'-mM5eG['[GcT8p`TdrLphee:b,g\+Uc^&]o3I/VitR,_+d
%!skBR@rQ1:)\I<L1c3,D:0adHU$i[S_G4W<qBX5s)d=3K!FiW.(3D*^&Kp570\LiO)#KDUq!n'lpE9d$B1m@@>U9*0'M].a'[-dk
%!%o;nOs5FVOOKE5eFH23k4E&'ru_h;HrVK7F/W5M]OCYKO0r5<G<>UTL;m^O@cia_/1X6Q\jGK"KHiZ)dI^Ob6n3.h:-6kNLRpkK
%f9_>&3VIX^]5+9Df:>:_[XbXu/^H,R]21qOL1TldmC8rDk5h2\gWr_Pa)e?U1(oiT'AaYPGgtF2*[UqNRTm\kE1]^P#:hN6E^n4]
%8\))4Bd["=a_JkA\Ht_dnWXrDQ`"X96+a"&1@O2DZf[`;JY;.Lfge!=WUDZ44$)\)*t:TH(9di?5BT%A.Z\,46s\&@d__#>\[d>l
%'GSn#/UFWHca;<3r*-p\'`Sk#86_n*9pg9YGeLrTj]%e5/C1I)]kIJ;plF;G\:6G)q@FSbF\t^3#ddggekLWI^,9#fAX@j:Q[+:Q
%fB0+t\IF9N)#'eQZKG9M>=`8BoGXW6Re3qTG]\`h6;cOC]>?HG?C9nF]>L%Y)RQ:)\P<YrM3:Bn=iYt4>#:6;`HH.Um%^+sX@Khl
%n/b48J",$ANM>SGS%*:P5cKn%NY!,Zr@<]BW(1)]"VOEA.DNa=9sR!F+Do6;08eH$TAQ2XIdEC!k08r#>X^]XpZJY]g]F/13N!^Z
%fH@J^VO6EF=<@Ke((q19`2KJ'c,l;ehZC+kW]XK3JqEElHL>@V7#X2p7sgMWh6ZS;:)s+t;7_^oO?C^TT;oS3PB]t\'[k4jOqsX<
%D3%2a)#p*B?Up]U;8?Z=itMjiTFAd:PBA7c;I2q5Cif,Ient7P(`4O:U3a/2I#";'D`D$^'Z9QgjKl.hHY#ik)8O3F#.QH+M5J/=
%LRt*g__\Df=5"<V9l&88j/t8g/OeORkrCRohW<6Y%(3Xjf$b94>7,B%(oA5:'r?s)ksn?E$ur!2j\Wu93bZ&`"Gq*QX;>6k;6!bp
%T0H0PG<8TBSJW[?,=,O)isg<=e3_o!4)AguYcuU1.`'Ipo!+:[H/gpMcA'_)^9g85J!?Oul(ct_MBI!23(FtW.lp,+a<(*)"G^uJ
%A0GptHCaf5K!5rtXeZ>u:s:c_g&cqX*8\tQ3B(;T\7plOIrO_`=*Rd]DRt=;S_h"5Wj.)>5qPq&N)"]I1n!G+<)883O=:s:c>ma+
%FY_[-@Rb9rMWhO2A>r0*%6aGAN=haI5'j@]2-llL.$q^T\tRP<GaI0l33!C1g`>EMjLUd4^eNjp3imu^]X='>Z8O0Lg;nijIb5&^
%_+_C=%j>l3.HWtc'57YU`jN0;<LZXSJ`alCPIo8NYCJ9MV5)"8=Vi<Yphf^Zd;Ltia)#dX>WGU)D:Hb@V.[*u@A^SO?T_OJdcKN6
%rVo`&s07''oiKIPs71*J5Q:5_s7FjnJ,&a7TE"g,pt=PQrTeD%rqio!jYu(Gs3mV<qY+@sa1%\Trp=WDQ>cfrq4BkLqYP2\s)5[L
%rnC5`s6&;<-Ur(%4lBs;qrQ`7ohU).?Z9L"2u~>
%AI9_PrivateDataEnd
